'use strict';
// This runs necessary preparations to prepare a complete Node.js context
// that depends on run time states.
// It is currently only intended for preparing contexts for embedders.
/* global markBootstrapComplete */
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
prepareMainThreadExecution();
markBootstrapComplete();
// This file creates the internal module & binding loaders used by built-in
// modules. In contrast, user land modules are loaded using
// lib/internal/modules/cjs/loader.js (CommonJS Modules) or
// lib/internal/modules/esm/* (ES Modules).
// This file is compiled and run by node.cc before bootstrap/node.js
// was called, therefore the loaders are bootstraped before we start to
// actually bootstrap Node.js. It creates the following objects:
// C++ binding loaders:
// - process.binding(): the legacy C++ binding loader, accessible from user land
//   because it is an object attached to the global process object.
//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()
//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees
//   about the stability of these bindings, but still have to take care of
//   compatibility issues caused by them from time to time.
// - process._linkedBinding(): intended to be used by embedders to add
//   additional C++ bindings in their applications. These C++ bindings
//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag
//   NM_F_LINKED.
// - internalBinding(): the private internal C++ binding loader, inaccessible
//   from user land unless through `require('internal/test/binding')`.
//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()
//   and have their nm_flags set to NM_F_INTERNAL.
// Internal JavaScript module loader:
// - NativeModule: a minimal module system used to load the JavaScript core
//   modules found in lib/**/*.js and deps/**/*.js. All core modules are
//   compiled into the node binary via node_javascript.cc generated by js2c.py,
//   so they can be loaded faster without the cost of I/O. This class makes the
//   lib/internal/*, deps/internal/* modules and internalBinding() available by
//   default to core modules, and lets the core modules require itself via
//   require('internal/bootstrap/loaders') even when this file is not written in
//   CommonJS style.
// Other objects:
// - process.moduleLoadList: an array recording the bindings and the modules
//   loaded in the process and the order in which they are loaded.
'use strict';
// This file is compiled as if it's wrapped in a function with arguments
// passed by node::RunBootstrapping()
/* global process, getLinkedBinding, getInternalBinding, primordials */
const {
  Reflect,
  Object,
  ObjectPrototype,
  SafeSet
} = primordials;
// Set up process.moduleLoadList.
const moduleLoadList = [];
Object.defineProperty(process, 'moduleLoadList', {
  value: moduleLoadList,
  configurable: true,
  enumerable: true,
  writable: false
// internalBindingWhitelist contains the name of internalBinding modules
// that are whitelisted for access via process.binding()... This is used
// to provide a transition path for modules that are being moved over to
// internalBinding.
const internalBindingWhitelist = new SafeSet([
  'async_wrap',
  'buffer',
  'cares_wrap',
  'config',
  'constants',
  'contextify',
  'crypto',
  'fs',
  'fs_event_wrap',
  'http_parser',
  'icu',
  'inspector',
  'js_stream',
  'natives',
  'os',
  'pipe_wrap',
  'process_wrap',
  'signal_wrap',
  'spawn_sync',
  'stream_wrap',
  'tcp_wrap',
  'tls_wrap',
  'tty_wrap',
  'udp_wrap',
  'url',
  'util',
  'uv',
  'v8',
  'zlib'
// Set up process.binding() and process._linkedBinding().
  const bindingObj = Object.create(null);
  process.binding = function binding(module) {
    module = String(module);
    // Deprecated specific process.binding() modules, but not all, allow
    // selective fallback to internalBinding for the deprecated ones.
    if (internalBindingWhitelist.has(module)) {
      return internalBinding(module);
    }
    // eslint-disable-next-line no-restricted-syntax
    throw new Error(`No such module: ${module}`);
  };
  process._linkedBinding = function _linkedBinding(module) {
    module = String(module);
    let mod = bindingObj[module];
    if (typeof mod !== 'object')
      mod = bindingObj[module] = getLinkedBinding(module);
    return mod;
  };
// Set up internalBinding() in the closure.
let internalBinding;
  const bindingObj = Object.create(null);
  // eslint-disable-next-line no-global-assign
  internalBinding = function internalBinding(module) {
    let mod = bindingObj[module];
    if (typeof mod !== 'object') {
      mod = bindingObj[module] = getInternalBinding(module);
      moduleLoadList.push(`Internal Binding ${module}`);
    }
    return mod;
  };
// Think of this as module.exports in this file even though it is not
// written in CommonJS style.
const loaderExports = {
  internalBinding,
  NativeModule,
  require: nativeModuleRequire
const loaderId = 'internal/bootstrap/loaders';
// Set up NativeModule.
function NativeModule(id) {
  this.filename = `${id}.js`;
  this.id = id;
  this.exports = {};
  this.reflect = undefined;
  this.exportKeys = undefined;
  this.loaded = false;
  this.loading = false;
  this.canBeRequiredByUsers = !id.startsWith('internal/');
// To be called during pre-execution when --expose-internals is on.
// Enables the user-land module loader to access internal modules.
NativeModule.exposeInternals = function() {
  for (const [id, mod] of NativeModule.map) {
    // Do not expose this to user land even with --expose-internals.
    if (id !== loaderId) {
      mod.canBeRequiredByUsers = true;
    }
const {
  moduleIds,
  compileFunction
} = internalBinding('native_module');
NativeModule.map = new Map();
for (let i = 0; i < moduleIds.length; ++i) {
  const id = moduleIds[i];
  const mod = new NativeModule(id);
  NativeModule.map.set(id, mod);
function nativeModuleRequire(id) {
  if (id === loaderId) {
    return loaderExports;
  const mod = NativeModule.map.get(id);
  return mod.compile();
NativeModule.exists = function(id) {
  return NativeModule.map.has(id);
NativeModule.canBeRequiredByUsers = function(id) {
  const mod = NativeModule.map.get(id);
  return mod && mod.canBeRequiredByUsers;
// Allow internal modules from dependencies to require
// other modules from dependencies by providing fallbacks.
function requireWithFallbackInDeps(request) {
  if (!NativeModule.map.has(request)) {
    request = `internal/deps/${request}`;
  return nativeModuleRequire(request);
// This is exposed for public loaders
NativeModule.prototype.compileForPublicLoader = function(needToProxify) {
  if (!this.canBeRequiredByUsers) {
    // No code because this is an assertion against bugs
    // eslint-disable-next-line no-restricted-syntax
    throw new Error(`Should not compile ${this.id} for public use`);
  this.compile();
  if (needToProxify && !this.exportKeys) {
    this.proxifyExports();
  return this.exports;
const getOwn = (target, property, receiver) => {
  return ObjectPrototype.hasOwnProperty(target, property) ?
    Reflect.get(target, property, receiver) :
    undefined;
// Provide named exports for all builtin libraries so that the libraries
// may be imported in a nicer way for ESM users. The default export is left
// as the entire namespace (module.exports) and wrapped in a proxy such
// that APMs and other behavior are still left intact.
NativeModule.prototype.proxifyExports = function() {
  this.exportKeys = Object.keys(this.exports);
  const update = (property, value) => {
    if (this.reflect !== undefined &&
        ObjectPrototype.hasOwnProperty(this.reflect.exports, property))
      this.reflect.exports[property].set(value);
  };
  const handler = {
    __proto__: null,
    defineProperty: (target, prop, descriptor) => {
      // Use `Object.defineProperty` instead of `Reflect.defineProperty`
      // to throw the appropriate error if something goes wrong.
      Object.defineProperty(target, prop, descriptor);
      if (typeof descriptor.get === 'function' &&
          !Reflect.has(handler, 'get')) {
        handler.get = (target, prop, receiver) => {
          const value = Reflect.get(target, prop, receiver);
          if (ObjectPrototype.hasOwnProperty(target, prop))
            update(prop, value);
          return value;
        };
      }
      update(prop, getOwn(target, prop));
      return true;
    },
    deleteProperty: (target, prop) => {
      if (Reflect.deleteProperty(target, prop)) {
        update(prop, undefined);
        return true;
      }
      return false;
    },
    set: (target, prop, value, receiver) => {
      const descriptor = Reflect.getOwnPropertyDescriptor(target, prop);
      if (Reflect.set(target, prop, value, receiver)) {
        if (descriptor && typeof descriptor.set === 'function') {
          for (const key of this.exportKeys) {
            update(key, getOwn(target, key, receiver));
          }
        } else {
          update(prop, getOwn(target, prop, receiver));
        }
        return true;
      }
      return false;
    }
  };
  this.exports = new Proxy(this.exports, handler);
NativeModule.prototype.compile = function() {
  if (this.loaded || this.loading) {
    return this.exports;
  const id = this.id;
  this.loading = true;
  try {
    const requireFn = this.id.startsWith('internal/deps/') ?
      requireWithFallbackInDeps : nativeModuleRequire;
    const fn = compileFunction(id);
    fn(this.exports, requireFn, this, process, internalBinding, primordials);
    this.loaded = true;
  } finally {
    this.loading = false;
  moduleLoadList.push(`NativeModule ${id}`);
  return this.exports;
// This will be passed to internal/bootstrap/node.js.
return loaderExports;
// Hello, and welcome to hacking node.js!
// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`, and is
// responsible for setting up node.js core before executing main scripts
// under `lib/internal/main/`.
// This file is currently run to bootstrap both the main thread and the worker
// threads. Some setups are conditional, controlled with isMainThread and
// ownsProcessState.
// This file is expected not to perform any asynchronous operations itself
// when being executed - those should be done in either
// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority
// of the code here focus on setting up the global proxy and the process
// object in a synchronous manner.
// As special caution is given to the performance of the startup process,
// many dependencies are invoked lazily.
// Scripts run before this file:
// - `lib/internal/per_context/setup.js`: to setup the v8::Context with
//   Node.js-specific tweaks - this is also done in vm contexts.
// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript
//   builtins that won't be affected by user land monkey-patching for internal
//   modules to use.
// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and
//   module loaders, including `process.binding()`, `process._linkedBinding()`,
//   `internalBinding()` and `NativeModule`.
// After this file is run, one of the main scripts under `lib/internal/main/`
// will be selected by C++ to start the actual execution. The main scripts may
// run additional setups exported by `lib/internal/bootstrap/pre_execution.js`,
// depending on the execution mode.
'use strict';
// This file is compiled as if it's wrapped in a function with arguments
// passed by node::RunBootstrapping()
/* global process, require, internalBinding, isMainThread, ownsProcessState */
setupPrepareStackTrace();
const { JSON, Object, Symbol } = primordials;
const config = internalBinding('config');
const { deprecate } = require('internal/util');
setupProcessObject();
setupGlobalProxy();
setupBuffer();
process.domain = null;
process._exiting = false;
// Bootstrappers for all threads, including worker threads and main thread
const perThreadSetup = require('internal/process/per_thread');
// Bootstrappers for the main thread only
let mainThreadSetup;
// Bootstrappers for the worker threads only
let workerThreadSetup;
if (ownsProcessState) {
  mainThreadSetup = require(
    'internal/process/main_thread_only'
  );
} else {
  workerThreadSetup = require(
    'internal/process/worker_thread_only'
  );
// process.config is serialized config.gypi
process.config = JSON.parse(internalBinding('native_module').config);
const rawMethods = internalBinding('process_methods');
// Set up methods and events on the process object for the main thread
if (isMainThread) {
  process.abort = rawMethods.abort;
  const wrapped = mainThreadSetup.wrapProcessMethods(rawMethods);
  process.umask = wrapped.umask;
  process.chdir = wrapped.chdir;
  process.cwd = wrapped.cwd;
  // TODO(joyeecheung): deprecate and remove these underscore methods
  process._debugProcess = rawMethods._debugProcess;
  process._debugEnd = rawMethods._debugEnd;
  process._startProfilerIdleNotifier =
    rawMethods._startProfilerIdleNotifier;
  process._stopProfilerIdleNotifier = rawMethods._stopProfilerIdleNotifier;
} else {
  const wrapped = workerThreadSetup.wrapProcessMethods(rawMethods);
  process.abort = workerThreadSetup.unavailable('process.abort()');
  process.chdir = workerThreadSetup.unavailable('process.chdir()');
  process.umask = wrapped.umask;
  process.cwd = rawMethods.cwd;
// Set up methods on the process object for all threads
  process.dlopen = rawMethods.dlopen;
  process.uptime = rawMethods.uptime;
  // TODO(joyeecheung): either remove them or make them public
  process._getActiveRequests = rawMethods._getActiveRequests;
  process._getActiveHandles = rawMethods._getActiveHandles;
  // TODO(joyeecheung): remove these
  process.reallyExit = rawMethods.reallyExit;
  process._kill = rawMethods._kill;
  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);
  process._rawDebug = wrapped._rawDebug;
  process.hrtime = wrapped.hrtime;
  process.hrtime.bigint = wrapped.hrtimeBigInt;
  process.cpuUsage = wrapped.cpuUsage;
  process.resourceUsage = wrapped.resourceUsage;
  process.memoryUsage = wrapped.memoryUsage;
  process.kill = wrapped.kill;
  process.exit = wrapped.exit;
const credentials = internalBinding('credentials');
if (credentials.implementsPosixCredentials) {
  process.getuid = credentials.getuid;
  process.geteuid = credentials.geteuid;
  process.getgid = credentials.getgid;
  process.getegid = credentials.getegid;
  process.getgroups = credentials.getgroups;
  if (ownsProcessState) {
    const wrapped = mainThreadSetup.wrapPosixCredentialSetters(credentials);
    process.initgroups = wrapped.initgroups;
    process.setgroups = wrapped.setgroups;
    process.setegid = wrapped.setegid;
    process.seteuid = wrapped.seteuid;
    process.setgid = wrapped.setgid;
    process.setuid = wrapped.setuid;
  } else {
    process.initgroups =
      workerThreadSetup.unavailable('process.initgroups()');
    process.setgroups = workerThreadSetup.unavailable('process.setgroups()');
    process.setegid = workerThreadSetup.unavailable('process.setegid()');
    process.seteuid = workerThreadSetup.unavailable('process.seteuid()');
    process.setgid = workerThreadSetup.unavailable('process.setgid()');
    process.setuid = workerThreadSetup.unavailable('process.setuid()');
if (isMainThread) {
  const { getStdout, getStdin, getStderr } =
    require('internal/process/stdio').getMainThreadStdio();
  setupProcessStdio(getStdout, getStdin, getStderr);
} else {
  const { getStdout, getStdin, getStderr } =
    workerThreadSetup.createStdioGetters();
  setupProcessStdio(getStdout, getStdin, getStderr);
// Setup the callbacks that node::AsyncWrap will call when there are hooks to
// process. They use the same functions as the JS embedder API. These callbacks
// are setup immediately to prevent async_wrap.setupHooks() from being hijacked
// and the cost of doing so is negligible.
const { nativeHooks } = require('internal/async_hooks');
internalBinding('async_wrap').setupHooks(nativeHooks);
const {
  setupTaskQueue,
  queueMicrotask
} = require('internal/process/task_queues');
if (!config.noBrowserGlobals) {
  // Override global console from the one provided by the VM
  // to the one implemented by Node.js
  // https://console.spec.whatwg.org/#console-namespace
  exposeNamespace(global, 'console', createGlobalConsole(global.console));
  const { URL, URLSearchParams } = require('internal/url');
  // https://url.spec.whatwg.org/#url
  exposeInterface(global, 'URL', URL);
  // https://url.spec.whatwg.org/#urlsearchparams
  exposeInterface(global, 'URLSearchParams', URLSearchParams);
  const {
    TextEncoder, TextDecoder
  } = require('internal/encoding');
  // https://encoding.spec.whatwg.org/#textencoder
  exposeInterface(global, 'TextEncoder', TextEncoder);
  // https://encoding.spec.whatwg.org/#textdecoder
  exposeInterface(global, 'TextDecoder', TextDecoder);
  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope
  const timers = require('timers');
  defineOperation(global, 'clearInterval', timers.clearInterval);
  defineOperation(global, 'clearTimeout', timers.clearTimeout);
  defineOperation(global, 'setInterval', timers.setInterval);
  defineOperation(global, 'setTimeout', timers.setTimeout);
  defineOperation(global, 'queueMicrotask', queueMicrotask);
  // Non-standard extensions:
  defineOperation(global, 'clearImmediate', timers.clearImmediate);
  defineOperation(global, 'setImmediate', timers.setImmediate);
// Set the per-Environment callback that will be called
// when the TrackingTraceStateObserver updates trace state.
// Note that when NODE_USE_V8_PLATFORM is true, the observer is
// attached to the per-process TracingController.
const { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');
setTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);
// process.allowedNodeEnvironmentFlags
Object.defineProperty(process, 'allowedNodeEnvironmentFlags', {
  get() {
    const flags = perThreadSetup.buildAllowedFlags();
    process.allowedNodeEnvironmentFlags = flags;
    return process.allowedNodeEnvironmentFlags;
  },
  // If the user tries to set this to another value, override
  // this completely to that value.
  set(value) {
    Object.defineProperty(this, 'allowedNodeEnvironmentFlags', {
      value,
      configurable: true,
      enumerable: true,
      writable: true
    });
  },
  enumerable: true,
  configurable: true
// process.assert
process.assert = deprecate(
  perThreadSetup.assert,
  'process.assert() is deprecated. Please use the `assert` module instead.',
  'DEP0100');
// TODO(joyeecheung): this property has not been well-maintained, should we
// deprecate it in favor of a better API?
const { isDebugBuild, hasOpenSSL, hasInspector } = config;
Object.defineProperty(process, 'features', {
  enumerable: true,
  writable: false,
  configurable: false,
  value: {
    inspector: hasInspector,
    debug: isDebugBuild,
    uv: true,
    ipv6: true,  // TODO(bnoordhuis) ping libuv
    tls_alpn: hasOpenSSL,
    tls_sni: hasOpenSSL,
    tls_ocsp: hasOpenSSL,
    tls: hasOpenSSL,
    cached_builtins: config.hasCachedBuiltins,
  const {
    onGlobalUncaughtException,
    setUncaughtExceptionCaptureCallback,
    hasUncaughtExceptionCaptureCallback
  } = require('internal/process/execution');
  // For legacy reasons this is still called `_fatalException`, even
  // though it is now a global uncaught exception handler.
  // The C++ land node::errors::TriggerUncaughtException grabs it
  // from the process object because it has been monkey-patchable.
  // TODO(joyeecheung): investigate whether process._fatalException
  // can be deprecated.
  process._fatalException = onGlobalUncaughtException;
  process.setUncaughtExceptionCaptureCallback =
    setUncaughtExceptionCaptureCallback;
  process.hasUncaughtExceptionCaptureCallback =
    hasUncaughtExceptionCaptureCallback;
const { emitWarning } = require('internal/process/warning');
process.emitWarning = emitWarning;
// We initialize the tick callbacks and the timer callbacks last during
// bootstrap to make sure that any operation done before this are synchronous.
// If any ticks or timers are scheduled before this they are unlikely to work.
  const { nextTick, runNextTicks } = setupTaskQueue();
  process.nextTick = nextTick;
  // Used to emulate a tick manually in the JS land.
  // A better name for this function would be `runNextTicks` but
  // it has been exposed to the process object so we keep this legacy name
  // TODO(joyeecheung): either remove it or make it public
  process._tickCallback = runNextTicks;
  const { getTimerCallbacks } = require('internal/timers');
  const { setupTimers } = internalBinding('timers');
  const { processImmediate, processTimers } = getTimerCallbacks(runNextTicks);
  // Sets two per-Environment callbacks that will be run from libuv:
  // - processImmediate will be run in the callback of the per-Environment
  //   check handle.
  // - processTimers will be run in the callback of the per-Environment timer.
  setupTimers(processImmediate, processTimers);
  // Note: only after this point are the timers effective
function setupPrepareStackTrace() {
  const {
    setEnhanceStackForFatalException,
    setPrepareStackTraceCallback
  } = internalBinding('errors');
  const {
    prepareStackTrace,
    fatalExceptionStackEnhancers: {
      beforeInspector,
      afterInspector
    }
  } = require('internal/errors');
  // Tell our PrepareStackTraceCallback passed to the V8 API
  // to call prepareStackTrace().
  setPrepareStackTraceCallback(prepareStackTrace);
  // Set the function used to enhance the error stack for printing
  setEnhanceStackForFatalException(beforeInspector, afterInspector);
function setupProcessObject() {
  const EventEmitter = require('events');
  const origProcProto = Object.getPrototypeOf(process);
  Object.setPrototypeOf(origProcProto, EventEmitter.prototype);
  EventEmitter.call(process);
  Object.defineProperty(process, Symbol.toStringTag, {
    enumerable: false,
    writable: true,
    configurable: false,
    value: 'process'
  });
  // Make process globally available to users by putting it on the global proxy
  Object.defineProperty(global, 'process', {
    value: process,
    enumerable: false,
    writable: true,
    configurable: true
  });
function setupProcessStdio(getStdout, getStdin, getStderr) {
  Object.defineProperty(process, 'stdout', {
    configurable: true,
    enumerable: true,
    get: getStdout
  });
  Object.defineProperty(process, 'stderr', {
    configurable: true,
    enumerable: true,
    get: getStderr
  });
  Object.defineProperty(process, 'stdin', {
    configurable: true,
    enumerable: true,
    get: getStdin
  });
  process.openStdin = function() {
    process.stdin.resume();
    return process.stdin;
  };
function setupGlobalProxy() {
  Object.defineProperty(global, Symbol.toStringTag, {
    value: 'global',
    writable: false,
    enumerable: false,
    configurable: true
  });
  function makeGetter(name) {
    return deprecate(function() {
      return this;
    }, `'${name}' is deprecated, use 'global'`, 'DEP0016');
  function makeSetter(name) {
    return deprecate(function(value) {
      Object.defineProperty(this, name, {
        configurable: true,
        writable: true,
        enumerable: true,
        value: value
      });
    }, `'${name}' is deprecated, use 'global'`, 'DEP0016');
  Object.defineProperties(global, {
    GLOBAL: {
      configurable: true,
      get: makeGetter('GLOBAL'),
      set: makeSetter('GLOBAL')
    },
    root: {
      configurable: true,
      get: makeGetter('root'),
      set: makeSetter('root')
    }
  });
function setupBuffer() {
  const { Buffer } = require('buffer');
  const bufferBinding = internalBinding('buffer');
  // Only after this point can C++ use Buffer::New()
  bufferBinding.setBufferPrototype(Buffer.prototype);
  delete bufferBinding.setBufferPrototype;
  delete bufferBinding.zeroFill;
  Object.defineProperty(global, 'Buffer', {
    value: Buffer,
    enumerable: false,
    writable: true,
    configurable: true
  });
function createGlobalConsole(consoleFromVM) {
  const consoleFromNode =
    require('internal/console/global');
  if (config.hasInspector) {
    const inspector = require('internal/util/inspector');
    // This will be exposed by `require('inspector').console` later.
    inspector.consoleFromVM = consoleFromVM;
    // TODO(joyeecheung): postpone this until the first time inspector
    // is activated.
    inspector.wrapConsole(consoleFromNode, consoleFromVM);
    const { setConsoleExtensionInstaller } = internalBinding('inspector');
    // Setup inspector command line API.
    setConsoleExtensionInstaller(inspector.installConsoleExtensions);
  return consoleFromNode;
// https://heycam.github.io/webidl/#es-namespaces
function exposeNamespace(target, name, namespaceObject) {
  Object.defineProperty(target, name, {
    writable: true,
    enumerable: false,
    configurable: true,
    value: namespaceObject
  });
// https://heycam.github.io/webidl/#es-interfaces
function exposeInterface(target, name, interfaceObject) {
  Object.defineProperty(target, name, {
    writable: true,
    enumerable: false,
    configurable: true,
    value: interfaceObject
  });
// https://heycam.github.io/webidl/#define-the-operations
function defineOperation(target, name, method) {
  Object.defineProperty(target, name, {
    writable: true,
    enumerable: true,
    configurable: true,
    value: method
  });
'use strict';
const { Object, SafeWeakMap } = primordials;
const { getOptionValue } = require('internal/options');
const { Buffer } = require('buffer');
const { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;
function prepareMainThreadExecution(expandArgv1 = false) {
  // Patch the process object with legacy properties and normalizations
  patchProcessObject(expandArgv1);
  setupTraceCategoryState();
  setupInspectorHooks();
  setupWarningHandler();
  // Resolve the coverage directory to an absolute path, and
  // overwrite process.env so that the original path gets passed
  // to child processes even when they switch cwd.
  if (process.env.NODE_V8_COVERAGE) {
    process.env.NODE_V8_COVERAGE =
      setupCoverageHooks(process.env.NODE_V8_COVERAGE);
  setupDebugEnv();
  // Only main thread receives signals.
  setupSignalHandlers();
  // Process initial diagnostic reporting configuration, if present.
  initializeReport();
  initializeReportSignalHandlers();  // Main-thread-only.
  initializeHeapSnapshotSignalHandlers();
  // If the process is spawned with env NODE_CHANNEL_FD, it's probably
  // spawned by our child_process module, then initialize IPC.
  // This attaches some internal event listeners and creates:
  // process.send(), process.channel, process.connected,
  // process.disconnect().
  setupChildProcessIpcChannel();
  // Load policy from disk and parse it.
  initializePolicy();
  // If this is a worker in cluster mode, start up the communication
  // channel. This needs to be done before any user code gets executed
  // (including preload modules).
  initializeClusterIPC();
  initializeDeprecations();
  initializeFrozenIntrinsics();
  initializeCJSLoader();
  initializeESMLoader();
  loadPreloadModules();
function patchProcessObject(expandArgv1) {
  const {
    patchProcessObject: patchProcessObjectNative
  } = internalBinding('process_methods');
  patchProcessObjectNative(process);
  Object.defineProperty(process, 'argv0', {
    enumerable: true,
    configurable: false,
    value: process.argv[0]
  });
  process.argv[0] = process.execPath;
  if (expandArgv1 && process.argv[1] && !process.argv[1].startsWith('-')) {
    // Expand process.argv[1] into a full path.
    const path = require('path');
    process.argv[1] = path.resolve(process.argv[1]);
  // TODO(joyeecheung): most of these should be deprecated and removed,
  // except some that we need to be able to mutate during run time.
  addReadOnlyProcessAlias('_eval', '--eval');
  addReadOnlyProcessAlias('_print_eval', '--print');
  addReadOnlyProcessAlias('_syntax_check_only', '--check');
  addReadOnlyProcessAlias('_forceRepl', '--interactive');
  addReadOnlyProcessAlias('_preload_modules', '--require');
  addReadOnlyProcessAlias('noDeprecation', '--no-deprecation');
  addReadOnlyProcessAlias('noProcessWarnings', '--no-warnings');
  addReadOnlyProcessAlias('traceProcessWarnings', '--trace-warnings');
  addReadOnlyProcessAlias('throwDeprecation', '--throw-deprecation');
  addReadOnlyProcessAlias('profProcess', '--prof-process');
  addReadOnlyProcessAlias('traceDeprecation', '--trace-deprecation');
  addReadOnlyProcessAlias('_breakFirstLine', '--inspect-brk', false);
  addReadOnlyProcessAlias('_breakNodeFirstLine', '--inspect-brk-node', false);
function addReadOnlyProcessAlias(name, option, enumerable = true) {
  const value = getOptionValue(option);
  if (value) {
    Object.defineProperty(process, name, {
      writable: false,
      configurable: true,
      enumerable,
      value
    });
function setupWarningHandler() {
  const {
    onWarning
  } = require('internal/process/warning');
  if (!getOptionValue('--no-warnings') &&
    process.env.NODE_NO_WARNINGS !== '1') {
    process.on('warning', onWarning);
// Setup User-facing NODE_V8_COVERAGE environment variable that writes
// ScriptCoverage to a specified file.
function setupCoverageHooks(dir) {
  const cwd = require('internal/process/execution').tryGetCwd();
  const { resolve } = require('path');
  const coverageDirectory = resolve(cwd, dir);
  internalBinding('profiler').setCoverageDirectory(coverageDirectory);
  return coverageDirectory;
function initializeReport() {
  if (!getOptionValue('--experimental-report')) {
    return;
  const { report } = require('internal/process/report');
  const { emitExperimentalWarning } = require('internal/util');
  Object.defineProperty(process, 'report', {
    enumerable: false,
    configurable: true,
    get() {
      emitExperimentalWarning('report');
      return report;
    }
  });
function setupDebugEnv() {
  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);
  if (getOptionValue('--expose-internals')) {
    require('internal/bootstrap/loaders').NativeModule.exposeInternals();
function setupSignalHandlers() {
  const {
    createSignalHandlers
  } = require('internal/process/main_thread_only');
  const {
    startListeningIfSignal,
    stopListeningIfSignal
  } = createSignalHandlers();
  process.on('newListener', startListeningIfSignal);
  process.on('removeListener', stopListeningIfSignal);
// This has to be called after both initializeReport() and
// setupSignalHandlers() are called
function initializeReportSignalHandlers() {
  if (!getOptionValue('--experimental-report')) {
    return;
  const { addSignalHandler } = require('internal/process/report');
  addSignalHandler();
function initializeHeapSnapshotSignalHandlers() {
  const signal = getOptionValue('--heapsnapshot-signal');
  if (!signal)
    return;
  require('internal/validators').validateSignalName(signal);
  const { writeHeapSnapshot } = require('v8');
  process.on(signal, () => {
    writeHeapSnapshot();
  });
function setupTraceCategoryState() {
  const { isTraceCategoryEnabled } = internalBinding('trace_events');
  const { toggleTraceCategoryState } = require('internal/process/per_thread');
  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));
function setupInspectorHooks() {
  // If Debugger.setAsyncCallStackDepth is sent during bootstrap,
  // we cannot immediately call into JS to enable the hooks, which could
  // interrupt the JS execution of bootstrap. So instead we save the
  // notification in the inspector agent if it's sent in the middle of
  // bootstrap, and process the notification later here.
  if (internalBinding('config').hasInspector) {
    const {
      enable,
      disable
    } = require('internal/inspector_async_hook');
    internalBinding('inspector').registerAsyncHook(enable, disable);
// In general deprecations are intialized wherever the APIs are implemented,
// this is used to deprecate APIs implemented in C++ where the deprecation
// utitlities are not easily accessible.
function initializeDeprecations() {
  const { deprecate } = require('internal/util');
  const pendingDeprecation = getOptionValue('--pending-deprecation');
  // DEP0103: access to `process.binding('util').isX` type checkers
  // TODO(addaleax): Turn into a full runtime deprecation.
  const utilBinding = internalBinding('util');
  const types = require('internal/util/types');
  for (const name of [
    'isArrayBuffer',
    'isArrayBufferView',
    'isAsyncFunction',
    'isDataView',
    'isDate',
    'isExternal',
    'isMap',
    'isMapIterator',
    'isNativeError',
    'isPromise',
    'isRegExp',
    'isSet',
    'isSetIterator',
    'isTypedArray',
    'isUint8Array',
    'isAnyArrayBuffer'
  ]) {
    utilBinding[name] = pendingDeprecation ?
      deprecate(types[name],
                'Accessing native typechecking bindings of Node ' +
                'directly is deprecated. ' +
                `Please use \`util.types.${name}\` instead.`,
                'DEP0103') :
      types[name];
  // TODO(joyeecheung): this is a legacy property exposed to process.
  // Now that we use the config binding to carry this information, remove
  // it from the process. We may consider exposing it properly in
  // process.features.
  const { noBrowserGlobals } = internalBinding('config');
  if (noBrowserGlobals) {
    Object.defineProperty(process, '_noBrowserGlobals', {
      writable: false,
      enumerable: true,
      configurable: true,
      value: noBrowserGlobals
    });
  if (pendingDeprecation) {
    process.binding = deprecate(process.binding,
                                'process.binding() is deprecated. ' +
                                'Please use public APIs instead.', 'DEP0111');
  // Create global.process and global.Buffer as getters so that we have a
  // deprecation path for these in ES Modules.
  // See https://github.com/nodejs/node/pull/26334.
  let _process = process;
  Object.defineProperty(global, 'process', {
    get() {
      return _process;
    },
    set(value) {
      _process = value;
    },
    enumerable: false,
    configurable: true
  });
  let _Buffer = Buffer;
  Object.defineProperty(global, 'Buffer', {
    get() {
      return _Buffer;
    },
    set(value) {
      _Buffer = value;
    },
    enumerable: false,
    configurable: true
  });
function setupChildProcessIpcChannel() {
  if (process.env.NODE_CHANNEL_FD) {
    const assert = require('internal/assert');
    const fd = parseInt(process.env.NODE_CHANNEL_FD, 10);
    assert(fd >= 0);
    // Make sure it's not accidentally inherited by child processes.
    delete process.env.NODE_CHANNEL_FD;
    require('child_process')._forkChild(fd);
    assert(process.send);
function initializeClusterIPC() {
  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {
    const cluster = require('cluster');
    cluster._setupWorker();
    // Make sure it's not accidentally inherited by child processes.
    delete process.env.NODE_UNIQUE_ID;
function initializePolicy() {
  const experimentalPolicy = getOptionValue('--experimental-policy');
  if (experimentalPolicy) {
    process.emitWarning('Policies are experimental.',
                        'ExperimentalWarning');
    const { pathToFileURL, URL } = require('url');
    // URL here as it is slightly different parsing
    // no bare specifiers for now
    let manifestURL;
    if (require('path').isAbsolute(experimentalPolicy)) {
      manifestURL = new URL(`file:///${experimentalPolicy}`);
    } else {
      const cwdURL = pathToFileURL(process.cwd());
      cwdURL.pathname += '/';
      manifestURL = new URL(experimentalPolicy, cwdURL);
    }
    const fs = require('fs');
    const src = fs.readFileSync(manifestURL, 'utf8');
    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');
    if (experimentalPolicyIntegrity) {
      const SRI = require('internal/policy/sri');
      const { createHash, timingSafeEqual } = require('crypto');
      const realIntegrities = new Map();
      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);
      let foundMatch = false;
      for (var i = 0; i < integrityEntries.length; i++) {
        const {
          algorithm,
          value: expected
        } = integrityEntries[i];
        const hash = createHash(algorithm);
        hash.update(src);
        const digest = hash.digest();
        if (digest.length === expected.length &&
          timingSafeEqual(digest, expected)) {
          foundMatch = true;
          break;
        }
        realIntegrities.set(algorithm, digest.toString('base64'));
      }
      if (!foundMatch) {
        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL, realIntegrities);
      }
    }
    require('internal/process/policy')
      .setup(src, manifestURL.href);
function initializeCJSLoader() {
  require('internal/modules/cjs/loader')._initPaths();
function initializeESMLoader() {
  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.
  internalBinding('module_wrap').callbackMap = new SafeWeakMap();
  const experimentalModules = getOptionValue('--experimental-modules');
  const experimentalVMModules = getOptionValue('--experimental-vm-modules');
  if (experimentalModules || experimentalVMModules) {
    if (experimentalModules) {
      process.emitWarning(
        'The ESM module loader is experimental.',
        'ExperimentalWarning', undefined);
    }
    const {
      setImportModuleDynamicallyCallback,
      setInitializeImportMetaObjectCallback
    } = internalBinding('module_wrap');
    const esm = require('internal/process/esm_loader');
    // Setup per-isolate callbacks that locate data or callbacks that we keep
    // track of for different ESM modules.
    setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);
    setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);
    const userLoader = getOptionValue('--loader');
    // If --loader is specified, create a loader with user hooks. Otherwise
    // create the default loader.
    if (userLoader) {
      const { emitExperimentalWarning } = require('internal/util');
      emitExperimentalWarning('--loader');
    }
    esm.initializeLoader(process.cwd(), userLoader);
function initializeFrozenIntrinsics() {
  if (getOptionValue('--frozen-intrinsics')) {
    process.emitWarning('The --frozen-intrinsics flag is experimental',
                        'ExperimentalWarning');
    require('internal/freeze_intrinsics')();
function loadPreloadModules() {
  // For user code, we preload modules if `-r` is passed
  const preloadModules = getOptionValue('--require');
  if (preloadModules && preloadModules.length > 0) {
    const {
      _preloadModules
    } = require('internal/modules/cjs/loader');
    _preloadModules(preloadModules);
module.exports = {
  patchProcessObject,
  setupCoverageHooks,
  setupWarningHandler,
  setupDebugEnv,
  prepareMainThreadExecution,
  initializeDeprecations,
  initializeESMLoader,
  initializeFrozenIntrinsics,
  loadPreloadModules,
  setupTraceCategoryState,
  setupInspectorHooks,
  initializeReport,
  initializeCJSLoader
'use strict';
/* eslint-disable no-restricted-globals */
// This file subclasses and stores the JS builtins that come from the VM
// so that Node.js's builtin modules do not need to later look these up from
// the global proxy, which can be mutated by users.
// TODO(joyeecheung): we can restrict access to these globals in builtin
// modules through the JS linter, for example: ban access such as `Object`
// (which falls back to a lookup in the global proxy) in favor of
// `primordials.Object` where `primordials` is a lexical variable passed
// by the native module compiler.
const ReflectApply = Reflect.apply;
// This function is borrowed from the function with the same name on V8 Extras'
// `utils` object. V8 implements Reflect.apply very efficiently in conjunction
// with the spread syntax, such that no additional special case is needed for
// function calls w/o arguments.
// Refs: https://github.com/v8/v8/blob/d6ead37d265d7215cf9c5f768f279e21bd170212/src/js/prologue.js#L152-L156
function uncurryThis(func) {
  return (thisArg, ...args) => ReflectApply(func, thisArg, args);
primordials.uncurryThis = uncurryThis;
function copyProps(src, dest) {
  for (const key of Reflect.ownKeys(src)) {
    if (!Reflect.getOwnPropertyDescriptor(dest, key)) {
      Reflect.defineProperty(
        dest,
        key,
        Reflect.getOwnPropertyDescriptor(src, key));
    }
function copyPrototype(src, dest) {
  for (const key of Reflect.ownKeys(src)) {
    if (!Reflect.getOwnPropertyDescriptor(dest, key)) {
      const desc = Reflect.getOwnPropertyDescriptor(src, key);
      if (typeof desc.value === 'function') {
        desc.value = uncurryThis(desc.value);
      }
      Reflect.defineProperty(dest, key, desc);
    }
function makeSafe(unsafe, safe) {
  copyProps(unsafe.prototype, safe.prototype);
  copyProps(unsafe, safe);
  Object.setPrototypeOf(safe.prototype, null);
  Object.freeze(safe.prototype);
  Object.freeze(safe);
  return safe;
// Subclass the constructors because we need to use their prototype
// methods later.
primordials.SafeMap = makeSafe(
  Map,
  class SafeMap extends Map {}
primordials.SafeWeakMap = makeSafe(
  WeakMap,
  class SafeWeakMap extends WeakMap {}
primordials.SafeSet = makeSafe(
  Set,
  class SafeSet extends Set {}
primordials.SafePromise = makeSafe(
  Promise,
  class SafePromise extends Promise {}
// Create copies of the namespace objects
  'JSON',
  'Math',
  'Reflect'
].forEach((name) => {
  const target = primordials[name] = Object.create(null);
  copyProps(global[name], target);
// Create copies of intrinsic objects
  'Array',
  'BigInt',
  'Boolean',
  'Date',
  'Error',
  'Function',
  'Map',
  'Number',
  'Object',
  'RegExp',
  'Set',
  'String',
  'Symbol',
].forEach((name) => {
  const target = primordials[name] = Object.create(null);
  copyProps(global[name], target);
  const proto = primordials[name + 'Prototype'] = Object.create(null);
  copyPrototype(global[name].prototype, proto);
Object.setPrototypeOf(primordials, null);
Object.freeze(primordials);
// This file is compiled as if it's wrapped in a function with arguments
// passed by node::NewContext()
/* global global */
'use strict';
// https://github.com/nodejs/node/issues/14909
if (global.Intl) {
  delete global.Intl.v8BreakIterator;
// https://github.com/nodejs/node/issues/21219
if (global.Atomics) {
  delete global.Atomics.wake;
'use strict';
const {
  SafeWeakMap,
  SafeMap,
  Object,
  Symbol
} = primordials;
class ERR_INVALID_THIS extends TypeError {
  constructor(type) {
    super('Value of "this" must be of ' + type);
  get code() { return 'ERR_INVALID_THIS'; }
let internalsMap;
let nameToCodeMap;
let isInitialized = false;
// We need to instantiate the maps lazily because they render
// the snapshot non-rehashable.
// https://bugs.chromium.org/p/v8/issues/detail?id=6593
function ensureInitialized() {
  if (isInitialized) {
    return;
  internalsMap = new SafeWeakMap();
  nameToCodeMap = new SafeMap();
  forEachCode((name, codeName, value) => {
    nameToCodeMap.set(name, value);
  });
  isInitialized = true;
class DOMException extends Error {
  constructor(message = '', name = 'Error') {
    ensureInitialized();
    super();
    internalsMap.set(this, {
      message: `${message}`,
      name: `${name}`
    });
  get name() {
    ensureInitialized();
    const internals = internalsMap.get(this);
    if (internals === undefined) {
      throw new ERR_INVALID_THIS('DOMException');
    }
    return internals.name;
  get message() {
    ensureInitialized();
    const internals = internalsMap.get(this);
    if (internals === undefined) {
      throw new ERR_INVALID_THIS('DOMException');
    }
    return internals.message;
  get code() {
    ensureInitialized();
    const internals = internalsMap.get(this);
    if (internals === undefined) {
      throw new ERR_INVALID_THIS('DOMException');
    }
    const code = nameToCodeMap.get(internals.name);
    return code === undefined ? 0 : code;
Object.defineProperties(DOMException.prototype, {
  [Symbol.toStringTag]: { configurable: true, value: 'DOMException' },
  name: { enumerable: true, configurable: true },
  message: { enumerable: true, configurable: true },
  code: { enumerable: true, configurable: true }
function forEachCode(fn) {
  fn('IndexSizeError', 'INDEX_SIZE_ERR', 1);
  fn('DOMStringSizeError', 'DOMSTRING_SIZE_ERR', 2);
  fn('HierarchyRequestError', 'HIERARCHY_REQUEST_ERR', 3);
  fn('WrongDocumentError', 'WRONG_DOCUMENT_ERR', 4);
  fn('InvalidCharacterError', 'INVALID_CHARACTER_ERR', 5);
  fn('NoDataAllowedError', 'NO_DATA_ALLOWED_ERR', 6);
  fn('NoModificationAllowedError', 'NO_MODIFICATION_ALLOWED_ERR', 7);
  fn('NotFoundError', 'NOT_FOUND_ERR', 8);
  fn('NotSupportedError', 'NOT_SUPPORTED_ERR', 9);
  fn('InUseAttributeError', 'INUSE_ATTRIBUTE_ERR', 10);
  fn('InvalidStateError', 'INVALID_STATE_ERR', 11);
  fn('SyntaxError', 'SYNTAX_ERR', 12);
  fn('InvalidModificationError', 'INVALID_MODIFICATION_ERR', 13);
  fn('NamespaceError', 'NAMESPACE_ERR', 14);
  fn('InvalidAccessError', 'INVALID_ACCESS_ERR', 15);
  fn('ValidationError', 'VALIDATION_ERR', 16);
  fn('TypeMismatchError', 'TYPE_MISMATCH_ERR', 17);
  fn('SecurityError', 'SECURITY_ERR', 18);
  fn('NetworkError', 'NETWORK_ERR', 19);
  fn('AbortError', 'ABORT_ERR', 20);
  fn('URLMismatchError', 'URL_MISMATCH_ERR', 21);
  fn('QuotaExceededError', 'QUOTA_EXCEEDED_ERR', 22);
  fn('TimeoutError', 'TIMEOUT_ERR', 23);
  fn('InvalidNodeTypeError', 'INVALID_NODE_TYPE_ERR', 24);
  fn('DataCloneError', 'DATA_CLONE_ERR', 25);
  // There are some more error names, but since they don't have codes assigned,
  // we don't need to care about them.
forEachCode((name, codeName, value) => {
  const desc = { enumerable: true, value };
  Object.defineProperty(DOMException, codeName, desc);
  Object.defineProperty(DOMException.prototype, codeName, desc);
exports.DOMException = DOMException;
'use strict';
const { Reflect } = primordials;
const {
  ERR_ASYNC_CALLBACK,
  ERR_INVALID_ASYNC_ID
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const internal_async_hooks = require('internal/async_hooks');
// Get functions
// For userland AsyncResources, make sure to emit a destroy event when the
// resource gets gced.
const { registerDestroyHook } = internal_async_hooks;
const {
  executionAsyncId,
  triggerAsyncId,
  // Private API
  getHookArrays,
  enableHooks,
  disableHooks,
  // Internal Embedder API
  newAsyncId,
  getDefaultTriggerAsyncId,
  emitInit,
  emitBefore,
  emitAfter,
  emitDestroy,
  initHooksExist,
} = internal_async_hooks;
// Get symbols
const {
  async_id_symbol, trigger_async_id_symbol,
  init_symbol, before_symbol, after_symbol, destroy_symbol,
  promise_resolve_symbol
} = internal_async_hooks.symbols;
// Get constants
const {
  kInit, kBefore, kAfter, kDestroy, kTotals, kPromiseResolve,
} = internal_async_hooks.constants;
// Listener API //
class AsyncHook {
  constructor({ init, before, after, destroy, promiseResolve }) {
    if (init !== undefined && typeof init !== 'function')
      throw new ERR_ASYNC_CALLBACK('hook.init');
    if (before !== undefined && typeof before !== 'function')
      throw new ERR_ASYNC_CALLBACK('hook.before');
    if (after !== undefined && typeof after !== 'function')
      throw new ERR_ASYNC_CALLBACK('hook.after');
    if (destroy !== undefined && typeof destroy !== 'function')
      throw new ERR_ASYNC_CALLBACK('hook.destroy');
    if (promiseResolve !== undefined && typeof promiseResolve !== 'function')
      throw new ERR_ASYNC_CALLBACK('hook.promiseResolve');
    this[init_symbol] = init;
    this[before_symbol] = before;
    this[after_symbol] = after;
    this[destroy_symbol] = destroy;
    this[promise_resolve_symbol] = promiseResolve;
  enable() {
    // The set of callbacks for a hook should be the same regardless of whether
    // enable()/disable() are run during their execution. The following
    // references are reassigned to the tmp arrays if a hook is currently being
    // processed.
    const [hooks_array, hook_fields] = getHookArrays();
    // Each hook is only allowed to be added once.
    if (hooks_array.includes(this))
      return this;
    const prev_kTotals = hook_fields[kTotals];
    // createHook() has already enforced that the callbacks are all functions,
    // so here simply increment the count of whether each callbacks exists or
    // not.
    hook_fields[kTotals] = hook_fields[kInit] += +!!this[init_symbol];
    hook_fields[kTotals] += hook_fields[kBefore] += +!!this[before_symbol];
    hook_fields[kTotals] += hook_fields[kAfter] += +!!this[after_symbol];
    hook_fields[kTotals] += hook_fields[kDestroy] += +!!this[destroy_symbol];
    hook_fields[kTotals] +=
        hook_fields[kPromiseResolve] += +!!this[promise_resolve_symbol];
    hooks_array.push(this);
    if (prev_kTotals === 0 && hook_fields[kTotals] > 0) {
      enableHooks();
    }
    return this;
  disable() {
    const [hooks_array, hook_fields] = getHookArrays();
    const index = hooks_array.indexOf(this);
    if (index === -1)
      return this;
    const prev_kTotals = hook_fields[kTotals];
    hook_fields[kTotals] = hook_fields[kInit] -= +!!this[init_symbol];
    hook_fields[kTotals] += hook_fields[kBefore] -= +!!this[before_symbol];
    hook_fields[kTotals] += hook_fields[kAfter] -= +!!this[after_symbol];
    hook_fields[kTotals] += hook_fields[kDestroy] -= +!!this[destroy_symbol];
    hook_fields[kTotals] +=
        hook_fields[kPromiseResolve] -= +!!this[promise_resolve_symbol];
    hooks_array.splice(index, 1);
    if (prev_kTotals > 0 && hook_fields[kTotals] === 0) {
      disableHooks();
    }
    return this;
function createHook(fns) {
  return new AsyncHook(fns);
// Embedder API //
const destroyedSymbol = Symbol('destroyed');
class AsyncResource {
  constructor(type, opts = {}) {
    validateString(type, 'type');
    let triggerAsyncId = opts;
    let requireManualDestroy = false;
    if (typeof opts !== 'number') {
      triggerAsyncId = opts.triggerAsyncId === undefined ?
        getDefaultTriggerAsyncId() : opts.triggerAsyncId;
      requireManualDestroy = !!opts.requireManualDestroy;
    }
    // Unlike emitInitScript, AsyncResource doesn't supports null as the
    // triggerAsyncId.
    if (!Number.isSafeInteger(triggerAsyncId) || triggerAsyncId < -1) {
      throw new ERR_INVALID_ASYNC_ID('triggerAsyncId', triggerAsyncId);
    }
    const asyncId = newAsyncId();
    this[async_id_symbol] = asyncId;
    this[trigger_async_id_symbol] = triggerAsyncId;
    if (initHooksExist()) {
      emitInit(asyncId, type, triggerAsyncId, this);
    }
    if (!requireManualDestroy) {
      // This prop name (destroyed) has to be synchronized with C++
      const destroyed = { destroyed: false };
      this[destroyedSymbol] = destroyed;
      registerDestroyHook(this, asyncId, destroyed);
    }
  runInAsyncScope(fn, thisArg, ...args) {
    const asyncId = this[async_id_symbol];
    emitBefore(asyncId, this[trigger_async_id_symbol]);
    try {
      if (thisArg === undefined)
        return fn(...args);
      return Reflect.apply(fn, thisArg, args);
    } finally {
      emitAfter(asyncId);
    }
  emitDestroy() {
    if (this[destroyedSymbol] !== undefined) {
      this[destroyedSymbol].destroyed = true;
    }
    emitDestroy(this[async_id_symbol]);
    return this;
  asyncId() {
    return this[async_id_symbol];
  triggerAsyncId() {
    return this[trigger_async_id_symbol];
// Placing all exports down here because the exported classes won't export
// otherwise.
module.exports = {
  // Public API
  createHook,
  executionAsyncId,
  triggerAsyncId,
  // Embedder API
  AsyncResource,
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const { Buffer } = require('buffer');
const { codes: {
  ERR_AMBIGUOUS_ARGUMENT,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_ARG_VALUE,
  ERR_INVALID_RETURN_VALUE,
  ERR_MISSING_ARGS
} } = require('internal/errors');
const AssertionError = require('internal/assert/assertion_error');
const { openSync, closeSync, readSync } = require('fs');
const { inspect } = require('internal/util/inspect');
const { isPromise, isRegExp } = require('internal/util/types');
const { EOL } = require('internal/constants');
const { NativeModule } = require('internal/bootstrap/loaders');
const errorCache = new Map();
let isDeepEqual;
let isDeepStrictEqual;
let parseExpressionAt;
let findNodeAround;
let decoder;
function lazyLoadComparison() {
  const comparison = require('internal/util/comparisons');
  isDeepEqual = comparison.isDeepEqual;
  isDeepStrictEqual = comparison.isDeepStrictEqual;
// Escape control characters but not \n and \t to keep the line breaks and
// indentation intact.
// eslint-disable-next-line no-control-regex
const escapeSequencesRegExp = /[\x00-\x08\x0b\x0c\x0e-\x1f]/g;
const meta = [
  '\\u0000', '\\u0001', '\\u0002', '\\u0003', '\\u0004',
  '\\u0005', '\\u0006', '\\u0007', '\\b', '',
  '', '\\u000b', '\\f', '', '\\u000e',
  '\\u000f', '\\u0010', '\\u0011', '\\u0012', '\\u0013',
  '\\u0014', '\\u0015', '\\u0016', '\\u0017', '\\u0018',
  '\\u0019', '\\u001a', '\\u001b', '\\u001c', '\\u001d',
  '\\u001e', '\\u001f'
const escapeFn = (str) => meta[str.charCodeAt(0)];
let warned = false;
// The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.
const assert = module.exports = ok;
const NO_EXCEPTION_SENTINEL = {};
// All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided. All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.
function innerFail(obj) {
  if (obj.message instanceof Error) throw obj.message;
  throw new AssertionError(obj);
function fail(actual, expected, message, operator, stackStartFn) {
  const argsLen = arguments.length;
  let internalMessage = false;
  if (actual == null && argsLen <= 1) {
    internalMessage = true;
    message = 'Failed';
  } else if (argsLen === 1) {
    message = actual;
    actual = undefined;
  } else {
    if (warned === false) {
      warned = true;
      process.emitWarning(
        'assert.fail() with more than one argument is deprecated. ' +
          'Please use assert.strictEqual() instead or only pass a message.',
        'DeprecationWarning',
        'DEP0094'
      );
    }
    if (argsLen === 2)
      operator = '!=';
  if (message instanceof Error) throw message;
  const errArgs = {
    actual,
    expected,
    operator: operator === undefined ? 'fail' : operator,
    stackStartFn: stackStartFn || fail,
    message
  };
  const err = new AssertionError(errArgs);
  if (internalMessage) {
    err.generatedMessage = true;
  throw err;
assert.fail = fail;
// The AssertionError is defined in internal/error.
assert.AssertionError = AssertionError;
function findColumn(fd, column, code) {
  if (code.length > column + 100) {
    try {
      return parseCode(code, column);
    } catch {
      // End recursion in case no code could be parsed. The expression should
      // have been found after 2500 characters, so stop trying.
      if (code.length - column > 2500) {
        // eslint-disable-next-line no-throw-literal
        throw null;
      }
    }
  // Read up to 2500 bytes more than necessary in columns. That way we address
  // multi byte characters and read enough data to parse the code.
  const bytesToRead = column - code.length + 2500;
  const buffer = Buffer.allocUnsafe(bytesToRead);
  const bytesRead = readSync(fd, buffer, 0, bytesToRead);
  code += decoder.write(buffer.slice(0, bytesRead));
  // EOF: fast path.
  if (bytesRead < bytesToRead) {
    return parseCode(code, column);
  // Read potentially missing code.
  return findColumn(fd, column, code);
function getCode(fd, line, column) {
  let bytesRead = 0;
  if (line === 0) {
    // Special handle line number one. This is more efficient and simplifies the
    // rest of the algorithm. Read more than the regular column number in bytes
    // to prevent multiple reads in case multi byte characters are used.
    return findColumn(fd, column, '');
  let lines = 0;
  // Prevent blocking the event loop by limiting the maximum amount of
  // data that may be read.
  let maxReads = 32; // bytesPerRead * maxReads = 512 kb
  const bytesPerRead = 16384;
  // Use a single buffer up front that is reused until the call site is found.
  let buffer = Buffer.allocUnsafe(bytesPerRead);
  while (maxReads-- !== 0) {
    // Only allocate a new buffer in case the needed line is found. All data
    // before that can be discarded.
    buffer = lines < line ? buffer : Buffer.allocUnsafe(bytesPerRead);
    bytesRead = readSync(fd, buffer, 0, bytesPerRead);
    // Read the buffer until the required code line is found.
    for (var i = 0; i < bytesRead; i++) {
      if (buffer[i] === 10 && ++lines === line) {
        // If the end of file is reached, directly parse the code and return.
        if (bytesRead < bytesPerRead) {
          return parseCode(buffer.toString('utf8', i + 1, bytesRead), column);
        }
        // Check if the read code is sufficient or read more until the whole
        // expression is read. Make sure multi byte characters are preserved
        // properly by using the decoder.
        const code = decoder.write(buffer.slice(i + 1, bytesRead));
        return findColumn(fd, column, code);
      }
    }
function parseCode(code, offset) {
  // Lazy load acorn.
  if (parseExpressionAt === undefined) {
    const acorn = require('internal/deps/acorn/acorn/dist/acorn');
    const privateMethods =
      require('internal/deps/acorn-plugins/acorn-private-methods/index');
    const classFields =
      require('internal/deps/acorn-plugins/acorn-class-fields/index');
    const numericSeparator =
      require('internal/deps/acorn-plugins/acorn-numeric-separator/index');
    const staticClassFeatures =
      require('internal/deps/acorn-plugins/acorn-static-class-features/index');
    ({ findNodeAround } = require('internal/deps/acorn/acorn-walk/dist/walk'));
    const Parser = acorn.Parser.extend(
      privateMethods,
      classFields,
      numericSeparator,
      staticClassFeatures
    );
    parseExpressionAt = Parser.parseExpressionAt.bind(Parser);
  let node;
  let start = 0;
  // Parse the read code until the correct expression is found.
  do {
    try {
      node = parseExpressionAt(code, start, { ecmaVersion: 11 });
      start = node.end + 1 || start;
      // Find the CallExpression in the tree.
      node = findNodeAround(node, offset, 'CallExpression');
    } catch (err) {
      // Unexpected token error and the like.
      start += err.raisedAt || 1;
      if (start > offset) {
        // No matching expression found. This could happen if the assert
        // expression is bigger than the provided buffer.
        // eslint-disable-next-line no-throw-literal
        throw null;
      }
    }
  } while (node === undefined || node.node.end < offset);
  return [
    node.node.start,
    code.slice(node.node.start, node.node.end)
        .replace(escapeSequencesRegExp, escapeFn)
  ];
function getErrMessage(message, fn) {
  const tmpLimit = Error.stackTraceLimit;
  // Make sure the limit is set to 1. Otherwise it could fail (<= 0) or it
  // does to much work.
  Error.stackTraceLimit = 1;
  // We only need the stack trace. To minimize the overhead use an object
  // instead of an error.
  const err = {};
  // eslint-disable-next-line no-restricted-syntax
  Error.captureStackTrace(err, fn);
  Error.stackTraceLimit = tmpLimit;
  const tmpPrepare = Error.prepareStackTrace;
  Error.prepareStackTrace = (_, stack) => stack;
  const call = err.stack[0];
  Error.prepareStackTrace = tmpPrepare;
  const filename = call.getFileName();
  const line = call.getLineNumber() - 1;
  let column = call.getColumnNumber() - 1;
  let identifier;
  let code;
  if (filename) {
    identifier = `${filename}${line}${column}`;
    // Skip Node.js modules!
    if (filename.endsWith('.js') &&
        NativeModule.exists(filename.slice(0, -3))) {
      errorCache.set(identifier, undefined);
      return;
    }
  } else {
    const fn = call.getFunction();
    if (!fn) {
      return message;
    }
    code = String(fn);
    identifier = `${code}${line}${column}`;
  if (errorCache.has(identifier)) {
    return errorCache.get(identifier);
  let fd;
  try {
    // Set the stack trace limit to zero. This makes sure unexpected token
    // errors are handled faster.
    Error.stackTraceLimit = 0;
    if (filename) {
      if (decoder === undefined) {
        const { StringDecoder } = require('string_decoder');
        decoder = new StringDecoder('utf8');
      }
      fd = openSync(filename, 'r', 0o666);
      // Reset column and message.
      [column, message] = getCode(fd, line, column);
      // Flush unfinished multi byte characters.
      decoder.end();
    } else {
      for (let i = 0; i < line; i++) {
        code = code.slice(code.indexOf('\n') + 1);
      }
      [column, message] = parseCode(code, column);
    }
    // Always normalize indentation, otherwise the message could look weird.
    if (message.includes('\n')) {
      if (EOL === '\r\n') {
        message = message.replace(/\r\n/g, '\n');
      }
      const frames = message.split('\n');
      message = frames.shift();
      for (const frame of frames) {
        let pos = 0;
        while (pos < column && (frame[pos] === ' ' || frame[pos] === '\t')) {
          pos++;
        }
        message += `\n  ${frame.slice(pos)}`;
      }
    }
    message = `The expression evaluated to a falsy value:\n\n  ${message}\n`;
    // Make sure to always set the cache! No matter if the message is
    // undefined or not
    errorCache.set(identifier, message);
    return message;
  } catch {
    // Invalidate cache to prevent trying to read this part again.
    errorCache.set(identifier, undefined);
  } finally {
    // Reset limit.
    Error.stackTraceLimit = tmpLimit;
    if (fd !== undefined)
      closeSync(fd);
function innerOk(fn, argLen, value, message) {
  if (!value) {
    let generatedMessage = false;
    if (argLen === 0) {
      generatedMessage = true;
      message = 'No value argument passed to `assert.ok()`';
    } else if (message == null) {
      generatedMessage = true;
      message = getErrMessage(message, fn);
    } else if (message instanceof Error) {
      throw message;
    }
    const err = new AssertionError({
      actual: value,
      expected: true,
      message,
      operator: '==',
      stackStartFn: fn
    });
    err.generatedMessage = generatedMessage;
    throw err;
// Pure assertion tests whether a value is truthy, as determined
// by !!value.
function ok(...args) {
  innerOk(ok, args.length, ...args);
assert.ok = ok;
// The equality assertion tests shallow, coercive equality with ==.
/* eslint-disable no-restricted-properties */
assert.equal = function equal(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  // eslint-disable-next-line eqeqeq
  if (actual != expected) {
    innerFail({
      actual,
      expected,
      message,
      operator: '==',
      stackStartFn: equal
    });
// The non-equality assertion tests for whether two objects are not
// equal with !=.
assert.notEqual = function notEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  // eslint-disable-next-line eqeqeq
  if (actual == expected) {
    innerFail({
      actual,
      expected,
      message,
      operator: '!=',
      stackStartFn: notEqual
    });
// The equivalence assertion tests a deep equality relation.
assert.deepEqual = function deepEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (!isDeepEqual(actual, expected)) {
    innerFail({
      actual,
      expected,
      message,
      operator: 'deepEqual',
      stackStartFn: deepEqual
    });
// The non-equivalence assertion tests for any deep inequality.
assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (isDeepEqual(actual, expected)) {
    innerFail({
      actual,
      expected,
      message,
      operator: 'notDeepEqual',
      stackStartFn: notDeepEqual
    });
/* eslint-enable */
assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (!isDeepStrictEqual(actual, expected)) {
    innerFail({
      actual,
      expected,
      message,
      operator: 'deepStrictEqual',
      stackStartFn: deepStrictEqual
    });
assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (isDeepStrictEqual(actual, expected)) {
    innerFail({
      actual,
      expected,
      message,
      operator: 'notDeepStrictEqual',
      stackStartFn: notDeepStrictEqual
    });
assert.strictEqual = function strictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  if (!Object.is(actual, expected)) {
    innerFail({
      actual,
      expected,
      message,
      operator: 'strictEqual',
      stackStartFn: strictEqual
    });
assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  if (Object.is(actual, expected)) {
    innerFail({
      actual,
      expected,
      message,
      operator: 'notStrictEqual',
      stackStartFn: notStrictEqual
    });
class Comparison {
  constructor(obj, keys, actual) {
    for (const key of keys) {
      if (key in obj) {
        if (actual !== undefined &&
            typeof actual[key] === 'string' &&
            isRegExp(obj[key]) &&
            obj[key].test(actual[key])) {
          this[key] = actual[key];
        } else {
          this[key] = obj[key];
        }
      }
    }
function compareExceptionKey(actual, expected, key, message, keys, fn) {
  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {
    if (!message) {
      // Create placeholder objects to create a nice output.
      const a = new Comparison(actual, keys);
      const b = new Comparison(expected, keys, actual);
      const err = new AssertionError({
        actual: a,
        expected: b,
        operator: 'deepStrictEqual',
        stackStartFn: fn
      });
      err.actual = actual;
      err.expected = expected;
      err.operator = fn.name;
      throw err;
    }
    innerFail({
      actual,
      expected,
      message,
      operator: fn.name,
      stackStartFn: fn
    });
function expectedException(actual, expected, message, fn) {
  if (typeof expected !== 'function') {
    // Handle regular expressions.
    if (isRegExp(expected)) {
      const str = String(actual);
      if (expected.test(str))
        return;
      throw new AssertionError({
        actual,
        expected,
        message: message || 'The input did not match the regular expression ' +
                            `${inspect(expected)}. Input:\n\n${inspect(str)}\n`,
        operator: fn.name,
        stackStartFn: fn
      });
    }
    // Handle primitives properly.
    if (typeof actual !== 'object' || actual === null) {
      const err = new AssertionError({
        actual,
        expected,
        message,
        operator: 'deepStrictEqual',
        stackStartFn: fn
      });
      err.operator = fn.name;
      throw err;
    }
    // Handle validation objects.
    const keys = Object.keys(expected);
    // Special handle errors to make sure the name and the message are compared
    // as well.
    if (expected instanceof Error) {
      keys.push('name', 'message');
    } else if (keys.length === 0) {
      throw new ERR_INVALID_ARG_VALUE('error',
                                      expected, 'may not be an empty object');
    }
    if (isDeepEqual === undefined) lazyLoadComparison();
    for (const key of keys) {
      if (typeof actual[key] === 'string' &&
          isRegExp(expected[key]) &&
          expected[key].test(actual[key])) {
        continue;
      }
      compareExceptionKey(actual, expected, key, message, keys, fn);
    }
    return;
  // Guard instanceof against arrow functions as they don't have a prototype.
  // Check for matching Error classes.
  if (expected.prototype !== undefined && actual instanceof expected) {
    return;
  if (Error.isPrototypeOf(expected)) {
    throw actual;
  // Check validation functions return value.
  const res = expected.call({}, actual);
  if (res !== true) {
    throw actual;
function getActual(fn) {
  if (typeof fn !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);
  try {
    fn();
  } catch (e) {
    return e;
  return NO_EXCEPTION_SENTINEL;
function checkIsPromise(obj) {
  // Accept native ES6 promises and promises that are implemented in a similar
  // way. Do not accept thenables that use a function as `obj` and that have no
  // `catch` handler.
  return isPromise(obj) ||
    obj !== null && typeof obj === 'object' &&
    typeof obj.then === 'function' &&
    typeof obj.catch === 'function';
async function waitForActual(promiseFn) {
  let resultPromise;
  if (typeof promiseFn === 'function') {
    // Return a rejected promise if `promiseFn` throws synchronously.
    resultPromise = promiseFn();
    // Fail in case no promise is returned.
    if (!checkIsPromise(resultPromise)) {
      throw new ERR_INVALID_RETURN_VALUE('instance of Promise',
                                         'promiseFn', resultPromise);
    }
  } else if (checkIsPromise(promiseFn)) {
    resultPromise = promiseFn;
  } else {
    throw new ERR_INVALID_ARG_TYPE(
      'promiseFn', ['Function', 'Promise'], promiseFn);
  try {
    await resultPromise;
  } catch (e) {
    return e;
  return NO_EXCEPTION_SENTINEL;
function expectsError(stackStartFn, actual, error, message) {
  if (typeof error === 'string') {
    if (arguments.length === 4) {
      throw new ERR_INVALID_ARG_TYPE('error',
                                     ['Object', 'Error', 'Function', 'RegExp'],
                                     error);
    }
    if (typeof actual === 'object' && actual !== null) {
      if (actual.message === error) {
        throw new ERR_AMBIGUOUS_ARGUMENT(
          'error/message',
          `The error message "${actual.message}" is identical to the message.`
        );
      }
    } else if (actual === error) {
      throw new ERR_AMBIGUOUS_ARGUMENT(
        'error/message',
        `The error "${actual}" is identical to the message.`
      );
    }
    message = error;
    error = undefined;
  } else if (error != null &&
             typeof error !== 'object' &&
             typeof error !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('error',
                                   ['Object', 'Error', 'Function', 'RegExp'],
                                   error);
  if (actual === NO_EXCEPTION_SENTINEL) {
    let details = '';
    if (error && error.name) {
      details += ` (${error.name})`;
    }
    details += message ? `: ${message}` : '.';
    const fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';
    innerFail({
      actual: undefined,
      expected: error,
      operator: stackStartFn.name,
      message: `Missing expected ${fnType}${details}`,
      stackStartFn
    });
  if (!error)
    return;
  expectedException(actual, error, message, stackStartFn);
function hasMatchingError(actual, expected) {
  if (typeof expected !== 'function') {
    if (isRegExp(expected)) {
      const str = String(actual);
      return expected.test(str);
    }
    throw new ERR_INVALID_ARG_TYPE(
      'expected', ['Function', 'RegExp'], expected
    );
  // Guard instanceof against arrow functions as they don't have a prototype.
  if (expected.prototype !== undefined && actual instanceof expected) {
    return true;
  if (Error.isPrototypeOf(expected)) {
    return false;
  return expected.call({}, actual) === true;
function expectsNoError(stackStartFn, actual, error, message) {
  if (actual === NO_EXCEPTION_SENTINEL)
    return;
  if (typeof error === 'string') {
    message = error;
    error = undefined;
  if (!error || hasMatchingError(actual, error)) {
    const details = message ? `: ${message}` : '.';
    const fnType = stackStartFn.name === 'doesNotReject' ?
      'rejection' : 'exception';
    innerFail({
      actual,
      expected: error,
      operator: stackStartFn.name,
      message: `Got unwanted ${fnType}${details}\n` +
               `Actual message: "${actual && actual.message}"`,
      stackStartFn
    });
  throw actual;
assert.throws = function throws(promiseFn, ...args) {
  expectsError(throws, getActual(promiseFn), ...args);
assert.rejects = async function rejects(promiseFn, ...args) {
  expectsError(rejects, await waitForActual(promiseFn), ...args);
assert.doesNotThrow = function doesNotThrow(fn, ...args) {
  expectsNoError(doesNotThrow, getActual(fn), ...args);
assert.doesNotReject = async function doesNotReject(fn, ...args) {
  expectsNoError(doesNotReject, await waitForActual(fn), ...args);
assert.ifError = function ifError(err) {
  if (err !== null && err !== undefined) {
    let message = 'ifError got unwanted exception: ';
    if (typeof err === 'object' && typeof err.message === 'string') {
      if (err.message.length === 0 && err.constructor) {
        message += err.constructor.name;
      } else {
        message += err.message;
      }
    } else {
      message += inspect(err);
    }
    const newErr = new AssertionError({
      actual: err,
      expected: null,
      operator: 'ifError',
      message,
      stackStartFn: ifError
    });
    // Make sure we actually have a stack trace!
    const origStack = err.stack;
    if (typeof origStack === 'string') {
      // This will remove any duplicated frames from the error frames taken
      // from within `ifError` and add the original error frames to the newly
      // created ones.
      const tmp2 = origStack.split('\n');
      tmp2.shift();
      // Filter all frames existing in err.stack.
      let tmp1 = newErr.stack.split('\n');
      for (var i = 0; i < tmp2.length; i++) {
        // Find the first occurrence of the frame.
        const pos = tmp1.indexOf(tmp2[i]);
        if (pos !== -1) {
          // Only keep new frames.
          tmp1 = tmp1.slice(0, pos);
          break;
        }
      }
      newErr.stack = `${tmp1.join('\n')}\n${tmp2.join('\n')}`;
    }
    throw newErr;
// Expose a strict only variant of assert
function strict(...args) {
  innerOk(strict, args.length, ...args);
assert.strict = Object.assign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
assert.strict.strict = assert.strict;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Math, Object } = primordials;
const {
  byteLengthUtf8,
  copy: _copy,
  compare: _compare,
  compareOffset,
  createFromString,
  fill: bindingFill,
  indexOfBuffer,
  indexOfNumber,
  indexOfString,
  swap16: _swap16,
  swap32: _swap32,
  swap64: _swap64,
  kMaxLength,
  kStringMaxLength,
  zeroFill: bindingZeroFill
} = internalBinding('buffer');
const {
  getOwnNonIndexProperties,
  propertyFilter: {
    ALL_PROPERTIES,
    ONLY_ENUMERABLE
} = internalBinding('util');
const {
  customInspectSymbol,
  isInsideNodeModules,
  normalizeEncoding,
  kIsEncodingSymbol
} = require('internal/util');
const {
  isAnyArrayBuffer,
  isArrayBufferView,
  isUint8Array
} = require('internal/util/types');
const {
  inspect: utilInspect
} = require('internal/util/inspect');
const {
  codes: {
    ERR_BUFFER_OUT_OF_BOUNDS,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_ARG_VALUE,
    ERR_INVALID_BUFFER_SIZE,
    ERR_INVALID_OPT_VALUE,
    ERR_UNKNOWN_ENCODING
  },
  hideStackFrames
} = require('internal/errors');
const {
  validateInt32,
  validateString
} = require('internal/validators');
const {
  FastBuffer,
  addBufferPrototypeMethods
} = require('internal/buffer');
FastBuffer.prototype.constructor = Buffer;
Buffer.prototype = FastBuffer.prototype;
addBufferPrototypeMethods(Buffer.prototype);
const constants = Object.defineProperties({}, {
  MAX_LENGTH: {
    value: kMaxLength,
    writable: false,
    enumerable: true
  },
  MAX_STRING_LENGTH: {
    value: kStringMaxLength,
    writable: false,
    enumerable: true
Buffer.poolSize = 8 * 1024;
let poolSize, poolOffset, allocPool;
// A toggle used to access the zero fill setting of the array buffer allocator
// in C++.
// |zeroFill| can be undefined when running inside an isolate where we
// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.
const zeroFill = bindingZeroFill || [0];
function createUnsafeBuffer(size) {
  zeroFill[0] = 0;
  try {
    return new FastBuffer(size);
  } finally {
    zeroFill[0] = 1;
function createPool() {
  poolSize = Buffer.poolSize;
  allocPool = createUnsafeBuffer(poolSize).buffer;
  poolOffset = 0;
createPool();
function alignPool() {
  // Ensure aligned slices
  if (poolOffset & 0x7) {
    poolOffset |= 0x7;
    poolOffset++;
let bufferWarningAlreadyEmitted = false;
let nodeModulesCheckCounter = 0;
const bufferWarning = 'Buffer() is deprecated due to security and usability ' +
                      'issues. Please use the Buffer.alloc(), ' +
                      'Buffer.allocUnsafe(), or Buffer.from() methods instead.';
function showFlaggedDeprecation() {
  if (bufferWarningAlreadyEmitted ||
      ++nodeModulesCheckCounter > 10000 ||
      (!require('internal/options').getOptionValue('--pending-deprecation') &&
       isInsideNodeModules())) {
    // We don't emit a warning, because we either:
    // - Already did so, or
    // - Already checked too many times whether a call is coming
    //   from node_modules and want to stop slowing down things, or
    // - We aren't running with `--pending-deprecation` enabled,
    //   and the code is inside `node_modules`.
    return;
  process.emitWarning(bufferWarning, 'DeprecationWarning', 'DEP0005');
  bufferWarningAlreadyEmitted = true;
 * The Buffer() constructor is deprecated in documentation and should not be
 * used moving forward. Rather, developers should use one of the three new
 * factory APIs: Buffer.from(), Buffer.allocUnsafe() or Buffer.alloc() based on
 * their specific needs. There is no runtime deprecation because of the extent
 * to which the Buffer constructor is used in the ecosystem currently -- a
 * runtime deprecation would introduce too much breakage at this time. It's not
 * likely that the Buffer constructors would ever actually be removed.
 * Deprecation Code: DEP0005
function Buffer(arg, encodingOrOffset, length) {
  showFlaggedDeprecation();
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new ERR_INVALID_ARG_TYPE('string', 'string', arg);
    }
    return Buffer.alloc(arg);
  return Buffer.from(arg, encodingOrOffset, length);
Object.defineProperty(Buffer, Symbol.species, {
  enumerable: false,
  configurable: true,
  get() { return FastBuffer; }
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
Buffer.from = function from(value, encodingOrOffset, length) {
  if (typeof value === 'string')
    return fromString(value, encodingOrOffset);
  if (typeof value === 'object' && value !== null) {
    if (isAnyArrayBuffer(value))
      return fromArrayBuffer(value, encodingOrOffset, length);
    const valueOf = value.valueOf && value.valueOf();
    if (valueOf !== null && valueOf !== undefined && valueOf !== value)
      return Buffer.from(valueOf, encodingOrOffset, length);
    const b = fromObject(value);
    if (b)
      return b;
    if (typeof value[Symbol.toPrimitive] === 'function') {
      return Buffer.from(value[Symbol.toPrimitive]('string'),
                         encodingOrOffset,
                         length);
    }
  throw new ERR_INVALID_ARG_TYPE(
    'first argument',
    ['string', 'Buffer', 'ArrayBuffer', 'Array', 'Array-like Object'],
    value
  );
// Identical to the built-in %TypedArray%.of(), but avoids using the deprecated
// Buffer() constructor. Must use arrow function syntax to avoid automatically
// adding a `prototype` property and making the function a constructor.
// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of
// Refs: https://esdiscuss.org/topic/isconstructor#content-11
const of = (...items) => {
  const newObj = createUnsafeBuffer(items.length);
  for (var k = 0; k < items.length; k++)
    newObj[k] = items[k];
  return newObj;
Buffer.of = of;
Object.setPrototypeOf(Buffer, Uint8Array);
// The 'assertSize' method will remove itself from the callstack when an error
// occurs. This is done simply to keep the internal details of the
// implementation from bleeding out to users.
const assertSize = hideStackFrames((size) => {
  if (typeof size !== 'number') {
    throw new ERR_INVALID_ARG_TYPE('size', 'number', size);
  if (!(size >= 0 && size <= kMaxLength)) {
    throw new ERR_INVALID_OPT_VALUE.RangeError('size', size);
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
Buffer.alloc = function alloc(size, fill, encoding) {
  assertSize(size);
  if (fill !== undefined && fill !== 0 && size > 0) {
    const buf = createUnsafeBuffer(size);
    return _fill(buf, fill, 0, buf.length, encoding);
  return new FastBuffer(size);
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer
 * instance. If `--zero-fill-buffers` is set, will zero-fill the buffer.
Buffer.allocUnsafe = function allocUnsafe(size) {
  assertSize(size);
  return allocate(size);
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled
 * Buffer instance that is not allocated off the pre-initialized pool.
 * If `--zero-fill-buffers` is set, will zero-fill the buffer.
Buffer.allocUnsafeSlow = function allocUnsafeSlow(size) {
  assertSize(size);
  return createUnsafeBuffer(size);
// If --zero-fill-buffers command line argument is set, a zero-filled
// buffer is returned.
function SlowBuffer(length) {
  assertSize(length);
  return createUnsafeBuffer(length);
Object.setPrototypeOf(SlowBuffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf(SlowBuffer, Uint8Array);
function allocate(size) {
  if (size <= 0) {
    return new FastBuffer();
  if (size < (Buffer.poolSize >>> 1)) {
    if (size > (poolSize - poolOffset))
      createPool();
    const b = new FastBuffer(allocPool, poolOffset, size);
    poolOffset += size;
    alignPool();
    return b;
  return createUnsafeBuffer(size);
function fromString(string, encoding) {
  let length;
  if (typeof encoding !== 'string' || encoding.length === 0) {
    if (string.length === 0)
      return new FastBuffer();
    encoding = 'utf8';
    length = byteLengthUtf8(string);
  } else {
    length = byteLength(string, encoding, true);
    if (length === -1)
      throw new ERR_UNKNOWN_ENCODING(encoding);
    if (string.length === 0)
      return new FastBuffer();
  if (length >= (Buffer.poolSize >>> 1))
    return createFromString(string, encoding);
  if (length > (poolSize - poolOffset))
    createPool();
  let b = new FastBuffer(allocPool, poolOffset, length);
  const actual = b.write(string, encoding);
  if (actual !== length) {
    // byteLength() may overestimate. That's a rare case, though.
    b = new FastBuffer(allocPool, poolOffset, actual);
  poolOffset += actual;
  alignPool();
  return b;
function fromArrayLike(obj) {
  const length = obj.length;
  const b = allocate(length);
  for (var i = 0; i < length; i++)
    b[i] = obj[i];
  return b;
function fromArrayBuffer(obj, byteOffset, length) {
  // Convert byteOffset to integer
  if (byteOffset === undefined) {
    byteOffset = 0;
  } else {
    byteOffset = +byteOffset;
    if (Number.isNaN(byteOffset))
      byteOffset = 0;
  const maxLength = obj.byteLength - byteOffset;
  if (maxLength < 0)
    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');
  if (length === undefined) {
    length = maxLength;
  } else {
    // Convert length to non-negative integer.
    length = +length;
    if (length > 0) {
      if (length > maxLength)
        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');
    } else {
      length = 0;
    }
  return new FastBuffer(obj, byteOffset, length);
function fromObject(obj) {
  if (isUint8Array(obj)) {
    const b = allocate(obj.length);
    if (b.length === 0)
      return b;
    _copy(obj, b, 0, 0, obj.length);
    return b;
  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {
    if (typeof obj.length !== 'number') {
      return new FastBuffer();
    }
    return fromArrayLike(obj);
  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data);
// Static methods
Buffer.isBuffer = function isBuffer(b) {
  return b instanceof Buffer;
Buffer.compare = function compare(buf1, buf2) {
  if (!isUint8Array(buf1)) {
    throw new ERR_INVALID_ARG_TYPE('buf1', ['Buffer', 'Uint8Array'], buf1);
  if (!isUint8Array(buf2)) {
    throw new ERR_INVALID_ARG_TYPE('buf2', ['Buffer', 'Uint8Array'], buf2);
  if (buf1 === buf2) {
    return 0;
  return _compare(buf1, buf2);
Buffer.isEncoding = function isEncoding(encoding) {
  return typeof encoding === 'string' && encoding.length !== 0 &&
         normalizeEncoding(encoding) !== undefined;
Buffer[kIsEncodingSymbol] = Buffer.isEncoding;
Buffer.concat = function concat(list, length) {
  let i;
  if (!Array.isArray(list)) {
    throw new ERR_INVALID_ARG_TYPE('list', 'Array', list);
  if (list.length === 0)
    return new FastBuffer();
  if (length === undefined) {
    length = 0;
    for (i = 0; i < list.length; i++) {
      if (list[i].length) {
        length += list[i].length;
      }
    }
  } else {
    validateInt32(length, 'length', 0);
  const buffer = Buffer.allocUnsafe(length);
  let pos = 0;
  for (i = 0; i < list.length; i++) {
    const buf = list[i];
    if (!isUint8Array(buf)) {
      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.
      // Instead, find the proper error code for this.
      throw new ERR_INVALID_ARG_TYPE(
        `list[${i}]`, ['Array', 'Buffer', 'Uint8Array'], list[i]);
    }
    _copy(buf, buffer, pos);
    pos += buf.length;
  // Note: `length` is always equal to `buffer.length` at this point
  if (pos < length) {
    // Zero-fill the remaining bytes if the specified `length` was more than
    // the actual total length, i.e. if we have some remaining allocated bytes
    // there were not initialized.
    buffer.fill(0, pos, length);
  return buffer;
function base64ByteLength(str, bytes) {
  // Handle padding
  if (str.charCodeAt(bytes - 1) === 0x3D)
    bytes--;
  if (bytes > 1 && str.charCodeAt(bytes - 1) === 0x3D)
    bytes--;
  // Base64 ratio: 3/4
  return (bytes * 3) >>> 2;
function byteLength(string, encoding) {
  if (typeof string !== 'string') {
    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {
      return string.byteLength;
    }
    throw new ERR_INVALID_ARG_TYPE(
      'string', ['string', 'Buffer', 'ArrayBuffer'], string
    );
  const len = string.length;
  const mustMatch = (arguments.length > 2 && arguments[2] === true);
  if (!mustMatch && len === 0)
    return 0;
  if (!encoding)
    return (mustMatch ? -1 : byteLengthUtf8(string));
  encoding += '';
  switch (encoding.length) {
    case 4:
      if (encoding === 'utf8') return byteLengthUtf8(string);
      if (encoding === 'ucs2') return len * 2;
      encoding = encoding.toLowerCase();
      if (encoding === 'utf8') return byteLengthUtf8(string);
      if (encoding === 'ucs2') return len * 2;
      break;
    case 5:
      if (encoding === 'utf-8') return byteLengthUtf8(string);
      if (encoding === 'ascii') return len;
      if (encoding === 'ucs-2') return len * 2;
      encoding = encoding.toLowerCase();
      if (encoding === 'utf-8') return byteLengthUtf8(string);
      if (encoding === 'ascii') return len;
      if (encoding === 'ucs-2') return len * 2;
      break;
    case 7:
      if (encoding === 'utf16le' || encoding.toLowerCase() === 'utf16le')
        return len * 2;
      break;
    case 8:
      if (encoding === 'utf-16le' || encoding.toLowerCase() === 'utf-16le')
        return len * 2;
      break;
    case 6:
      if (encoding === 'latin1' || encoding === 'binary') return len;
      if (encoding === 'base64') return base64ByteLength(string, len);
      encoding = encoding.toLowerCase();
      if (encoding === 'latin1' || encoding === 'binary') return len;
      if (encoding === 'base64') return base64ByteLength(string, len);
      break;
    case 3:
      if (encoding === 'hex' || encoding.toLowerCase() === 'hex')
        return len >>> 1;
      break;
  return (mustMatch ? -1 : byteLengthUtf8(string));
Buffer.byteLength = byteLength;
// For backwards compatibility.
Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get() {
    if (!(this instanceof Buffer))
      return undefined;
    return this.buffer;
Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get() {
    if (!(this instanceof Buffer))
      return undefined;
    return this.byteOffset;
function stringSlice(buf, encoding, start, end) {
  if (encoding === undefined) return buf.utf8Slice(start, end);
  encoding += '';
  switch (encoding.length) {
    case 4:
      if (encoding === 'utf8') return buf.utf8Slice(start, end);
      if (encoding === 'ucs2') return buf.ucs2Slice(start, end);
      encoding = encoding.toLowerCase();
      if (encoding === 'utf8') return buf.utf8Slice(start, end);
      if (encoding === 'ucs2') return buf.ucs2Slice(start, end);
      break;
    case 5:
      if (encoding === 'utf-8') return buf.utf8Slice(start, end);
      if (encoding === 'ascii') return buf.asciiSlice(start, end);
      if (encoding === 'ucs-2') return buf.ucs2Slice(start, end);
      encoding = encoding.toLowerCase();
      if (encoding === 'utf-8') return buf.utf8Slice(start, end);
      if (encoding === 'ascii') return buf.asciiSlice(start, end);
      if (encoding === 'ucs-2') return buf.ucs2Slice(start, end);
      break;
    case 6:
      if (encoding === 'latin1' || encoding === 'binary')
        return buf.latin1Slice(start, end);
      if (encoding === 'base64') return buf.base64Slice(start, end);
      encoding = encoding.toLowerCase();
      if (encoding === 'latin1' || encoding === 'binary')
        return buf.latin1Slice(start, end);
      if (encoding === 'base64') return buf.base64Slice(start, end);
      break;
    case 3:
      if (encoding === 'hex' || encoding.toLowerCase() === 'hex')
        return buf.hexSlice(start, end);
      break;
    case 7:
      if (encoding === 'utf16le' || encoding.toLowerCase() === 'utf16le')
        return buf.ucs2Slice(start, end);
      break;
    case 8:
      if (encoding === 'utf-16le' || encoding.toLowerCase() === 'utf-16le')
        return buf.ucs2Slice(start, end);
      break;
  throw new ERR_UNKNOWN_ENCODING(encoding);
Buffer.prototype.copy =
  function copy(target, targetStart, sourceStart, sourceEnd) {
    return _copy(this, target, targetStart, sourceStart, sourceEnd);
  };
// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only
// property of a typed array.
// This behaves neither like String nor Uint8Array in that we set start/end
// to their upper/lower bounds if the value passed is out of range.
Buffer.prototype.toString = function toString(encoding, start, end) {
  if (arguments.length === 0) {
    return this.utf8Slice(0, this.length);
  const len = this.length;
  if (start <= 0)
    start = 0;
  else if (start >= len)
    return '';
  else
    start |= 0;
  if (end === undefined || end > len)
    end = len;
  else
    end |= 0;
  if (end <= start)
    return '';
  return stringSlice(this, encoding, start, end);
Buffer.prototype.equals = function equals(otherBuffer) {
  if (!isUint8Array(otherBuffer)) {
    throw new ERR_INVALID_ARG_TYPE(
      'otherBuffer', ['Buffer', 'Uint8Array'], otherBuffer);
  if (this === otherBuffer)
    return true;
  return _compare(this, otherBuffer) === 0;
let INSPECT_MAX_BYTES = 50;
// Override how buffers are presented by util.inspect().
Buffer.prototype[customInspectSymbol] = function inspect(recurseTimes, ctx) {
  const max = INSPECT_MAX_BYTES;
  const actualMax = Math.min(max, this.length);
  const remaining = this.length - max;
  let str = this.hexSlice(0, actualMax).replace(/(.{2})/g, '$1 ').trim();
  if (remaining > 0)
    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;
  // Inspect special properties as well, if possible.
  if (ctx) {
    let extras = false;
    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;
    const obj = getOwnNonIndexProperties(this, filter).reduce((obj, key) => {
      extras = true;
      obj[key] = this[key];
      return obj;
    }, Object.create(null));
    if (extras) {
      if (this.length !== 0)
        str += ', ';
      // '[Object: null prototype] {'.length === 26
      // This is guarded with a test.
      str += utilInspect(obj, {
        ...ctx,
        breakLength: Infinity,
        compact: true
      }).slice(27, -2);
    }
  return `<${this.constructor.name} ${str}>`;
Buffer.prototype.inspect = Buffer.prototype[customInspectSymbol];
Buffer.prototype.compare = function compare(target,
                                            targetStart,
                                            targetEnd,
                                            sourceStart,
                                            sourceEnd) {
  if (!isUint8Array(target)) {
    throw new ERR_INVALID_ARG_TYPE('target', ['Buffer', 'Uint8Array'], target);
  if (arguments.length === 1)
    return _compare(this, target);
  if (targetStart === undefined)
    targetStart = 0;
  else
    validateInt32(targetStart, 'targetStart', 0);
  if (targetEnd === undefined)
    targetEnd = target.length;
  else
    validateInt32(targetEnd, 'targetEnd', 0, target.length);
  if (sourceStart === undefined)
    sourceStart = 0;
  else
    validateInt32(sourceStart, 'sourceStart', 0);
  if (sourceEnd === undefined)
    sourceEnd = this.length;
  else
    validateInt32(sourceEnd, 'sourceEnd', 0, this.length);
  if (sourceStart >= sourceEnd)
    return (targetStart >= targetEnd ? 0 : -1);
  if (targetStart >= targetEnd)
    return 1;
  return compareOffset(this, target, targetStart, sourceStart, targetEnd,
                       sourceEnd);
// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant if val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
  if (typeof byteOffset === 'string') {
    encoding = byteOffset;
    byteOffset = undefined;
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff;
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000;
  // Coerce to Number. Values like null and [] become 0.
  byteOffset = +byteOffset;
  // If the offset is undefined, "foo", {}, coerces to NaN, search whole buffer.
  if (Number.isNaN(byteOffset)) {
    byteOffset = dir ? 0 : buffer.length;
  dir = !!dir;  // Cast to bool.
  if (typeof val === 'string') {
    if (encoding === undefined) {
      return indexOfString(buffer, val, byteOffset, encoding, dir);
    }
    return slowIndexOf(buffer, val, byteOffset, encoding, dir);
  } else if (isUint8Array(val)) {
    return indexOfBuffer(buffer, val, byteOffset, encoding, dir);
  } else if (typeof val === 'number') {
    return indexOfNumber(buffer, val >>> 0, byteOffset, dir);
  throw new ERR_INVALID_ARG_TYPE(
    'value', ['string', 'Buffer', 'Uint8Array'], val
  );
function slowIndexOf(buffer, val, byteOffset, encoding, dir) {
  let loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'utf8':
      case 'utf-8':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
      case 'latin1':
      case 'binary':
        return indexOfString(buffer, val, byteOffset, encoding, dir);
      case 'base64':
      case 'ascii':
      case 'hex':
        return indexOfBuffer(
          buffer, Buffer.from(val, encoding), byteOffset, encoding, dir);
      default:
        if (loweredCase) {
          throw new ERR_UNKNOWN_ENCODING(encoding);
        }
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1;
// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill(value, offset, end, encoding) {
  return _fill(this, value, offset, end, encoding);
function _fill(buf, value, offset, end, encoding) {
  if (typeof value === 'string') {
    if (offset === undefined || typeof offset === 'string') {
      encoding = offset;
      offset = 0;
      end = buf.length;
    } else if (typeof end === 'string') {
      encoding = end;
      end = buf.length;
    }
    const normalizedEncoding = normalizeEncoding(encoding);
    if (normalizedEncoding === undefined) {
      validateString(encoding, 'encoding');
      throw new ERR_UNKNOWN_ENCODING(encoding);
    }
    if (value.length === 0) {
      // If value === '' default to zero.
      value = 0;
    } else if (value.length === 1) {
      // Fast path: If `value` fits into a single byte, use that numeric value.
      if (normalizedEncoding === 'utf8') {
        const code = value.charCodeAt(0);
        if (code < 128) {
          value = code;
        }
      } else if (normalizedEncoding === 'latin1') {
        value = value.charCodeAt(0);
      }
    }
  } else {
    encoding = undefined;
  if (offset === undefined) {
    offset = 0;
    end = buf.length;
  } else {
    validateInt32(offset, 'offset', 0);
    // Invalid ranges are not set to a default, so can range check early.
    if (end === undefined) {
      end = buf.length;
    } else {
      validateInt32(end, 'end', 0, buf.length);
    }
    if (offset >= end)
      return buf;
  const res = bindingFill(buf, value, offset, end, encoding);
  if (res < 0) {
    if (res === -1)
      throw new ERR_INVALID_ARG_VALUE('value', value);
    throw new ERR_BUFFER_OUT_OF_BOUNDS();
  return buf;
Buffer.prototype.write = function write(string, offset, length, encoding) {
  // Buffer#write(string);
  if (offset === undefined) {
    return this.utf8Write(string, 0, this.length);
  // Buffer#write(string, encoding)
  if (length === undefined && typeof offset === 'string') {
    encoding = offset;
    length = this.length;
    offset = 0;
  // Buffer#write(string, offset[, length][, encoding])
  } else {
    validateInt32(offset, 'offset', 0, this.length);
    const remaining = this.length - offset;
    if (length === undefined) {
      length = remaining;
    } else if (typeof length === 'string') {
      encoding = length;
      length = remaining;
    } else {
      validateInt32(length, 'length', 0, this.length);
      if (length > remaining)
        length = remaining;
    }
  if (!encoding)
    return this.utf8Write(string, offset, length);
  encoding += '';
  switch (encoding.length) {
    case 4:
      if (encoding === 'utf8') return this.utf8Write(string, offset, length);
      if (encoding === 'ucs2') return this.ucs2Write(string, offset, length);
      encoding = encoding.toLowerCase();
      if (encoding === 'utf8') return this.utf8Write(string, offset, length);
      if (encoding === 'ucs2') return this.ucs2Write(string, offset, length);
      break;
    case 5:
      if (encoding === 'utf-8') return this.utf8Write(string, offset, length);
      if (encoding === 'ascii') return this.asciiWrite(string, offset, length);
      if (encoding === 'ucs-2') return this.ucs2Write(string, offset, length);
      encoding = encoding.toLowerCase();
      if (encoding === 'utf-8') return this.utf8Write(string, offset, length);
      if (encoding === 'ascii') return this.asciiWrite(string, offset, length);
      if (encoding === 'ucs-2') return this.ucs2Write(string, offset, length);
      break;
    case 7:
      if (encoding === 'utf16le' || encoding.toLowerCase() === 'utf16le')
        return this.ucs2Write(string, offset, length);
      break;
    case 8:
      if (encoding === 'utf-16le' || encoding.toLowerCase() === 'utf-16le')
        return this.ucs2Write(string, offset, length);
      break;
    case 6:
      if (encoding === 'latin1' || encoding === 'binary')
        return this.latin1Write(string, offset, length);
      if (encoding === 'base64')
        return this.base64Write(string, offset, length);
      encoding = encoding.toLowerCase();
      if (encoding === 'latin1' || encoding === 'binary')
        return this.latin1Write(string, offset, length);
      if (encoding === 'base64')
        return this.base64Write(string, offset, length);
      break;
    case 3:
      if (encoding === 'hex' || encoding.toLowerCase() === 'hex')
        return this.hexWrite(string, offset, length);
      break;
  throw new ERR_UNKNOWN_ENCODING(encoding);
Buffer.prototype.toJSON = function toJSON() {
  if (this.length > 0) {
    const data = new Array(this.length);
    for (var i = 0; i < this.length; ++i)
      data[i] = this[i];
    return { type: 'Buffer', data };
  return { type: 'Buffer', data: [] };
function adjustOffset(offset, length) {
  // Use Math.trunc() to convert offset to an integer value that can be larger
  // than an Int32. Hence, don't use offset | 0 or similar techniques.
  offset = Math.trunc(offset);
  if (offset === 0) {
    return 0;
  if (offset < 0) {
    offset += length;
    return offset > 0 ? offset : 0;
  if (offset < length) {
    return offset;
  return Number.isNaN(offset) ? 0 : length;
Buffer.prototype.slice = function slice(start, end) {
  const srcLength = this.length;
  start = adjustOffset(start, srcLength);
  end = end !== undefined ? adjustOffset(end, srcLength) : srcLength;
  const newLength = end > start ? end - start : 0;
  return new FastBuffer(this.buffer, this.byteOffset + start, newLength);
function swap(b, n, m) {
  const i = b[n];
  b[n] = b[m];
  b[m] = i;
Buffer.prototype.swap16 = function swap16() {
  // For Buffer.length < 128, it's generally faster to
  // do the swap in javascript. For larger buffers,
  // dropping down to the native code is faster.
  const len = this.length;
  if (len % 2 !== 0)
    throw new ERR_INVALID_BUFFER_SIZE('16-bits');
  if (len < 128) {
    for (var i = 0; i < len; i += 2)
      swap(this, i, i + 1);
    return this;
  return _swap16(this);
Buffer.prototype.swap32 = function swap32() {
  // For Buffer.length < 192, it's generally faster to
  // do the swap in javascript. For larger buffers,
  // dropping down to the native code is faster.
  const len = this.length;
  if (len % 4 !== 0)
    throw new ERR_INVALID_BUFFER_SIZE('32-bits');
  if (len < 192) {
    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }
    return this;
  return _swap32(this);
Buffer.prototype.swap64 = function swap64() {
  // For Buffer.length < 192, it's generally faster to
  // do the swap in javascript. For larger buffers,
  // dropping down to the native code is faster.
  const len = this.length;
  if (len % 8 !== 0)
    throw new ERR_INVALID_BUFFER_SIZE('64-bits');
  if (len < 192) {
    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }
    return this;
  return _swap64(this);
Buffer.prototype.toLocaleString = Buffer.prototype.toString;
let transcode;
if (internalBinding('config').hasIntl) {
  const {
    icuErrName,
    transcode: _transcode
  } = internalBinding('icu');
  // Transcodes the Buffer from one encoding to another, returning a new
  // Buffer instance.
  transcode = function transcode(source, fromEncoding, toEncoding) {
    if (!isUint8Array(source)) {
      throw new ERR_INVALID_ARG_TYPE('source',
                                     ['Buffer', 'Uint8Array'], source);
    }
    if (source.length === 0) return Buffer.alloc(0);
    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;
    toEncoding = normalizeEncoding(toEncoding) || toEncoding;
    const result = _transcode(source, fromEncoding, toEncoding);
    if (typeof result !== 'number')
      return result;
    const code = icuErrName(result);
    // eslint-disable-next-line no-restricted-syntax
    const err = new Error(`Unable to transcode Buffer [${code}]`);
    err.code = code;
    err.errno = result;
    throw err;
  };
module.exports = {
  Buffer,
  SlowBuffer,
  transcode,
  // Legacy
  kMaxLength,
  kStringMaxLength
Object.defineProperties(module.exports, {
  constants: {
    configurable: false,
    enumerable: true,
    value: constants
  },
  INSPECT_MAX_BYTES: {
    configurable: true,
    enumerable: true,
    get() { return INSPECT_MAX_BYTES; },
    set(val) { INSPECT_MAX_BYTES = val; }
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object, ObjectPrototype } = primordials;
const {
  promisify,
  convertToValidSignal,
  getSystemErrorName
} = require('internal/util');
const { isArrayBufferView } = require('internal/util/types');
const debug = require('internal/util/debuglog').debuglog('child_process');
const { Buffer } = require('buffer');
const { Pipe, constants: PipeConstants } = internalBinding('pipe_wrap');
const {
  ERR_INVALID_ARG_VALUE,
  ERR_CHILD_PROCESS_IPC_REQUIRED,
  ERR_CHILD_PROCESS_STDIO_MAXBUFFER,
  ERR_INVALID_ARG_TYPE,
  ERR_OUT_OF_RANGE
} = require('internal/errors').codes;
const { clearTimeout, setTimeout } = require('timers');
const { validateString, isInt32 } = require('internal/validators');
const child_process = require('internal/child_process');
const {
  getValidStdio,
  setupChannel,
  ChildProcess,
  stdioStringToArray
} = child_process;
const MAX_BUFFER = 1024 * 1024;
function fork(modulePath /* , args, options */) {
  validateString(modulePath, 'modulePath');
  // Get options and args arguments.
  var execArgv;
  var options = {};
  var args = [];
  var pos = 1;
  if (pos < arguments.length && Array.isArray(arguments[pos])) {
    args = arguments[pos++];
  if (pos < arguments.length &&
      (arguments[pos] === undefined || arguments[pos] === null)) {
    pos++;
  if (pos < arguments.length && arguments[pos] != null) {
    if (typeof arguments[pos] !== 'object') {
      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`, arguments[pos]);
    }
    options = { ...arguments[pos++] };
  // Prepare arguments for fork:
  execArgv = options.execArgv || process.execArgv;
  if (execArgv === process.execArgv && process._eval != null) {
    const index = execArgv.lastIndexOf(process._eval);
    if (index > 0) {
      // Remove the -e switch to avoid fork bombing ourselves.
      execArgv = execArgv.slice();
      execArgv.splice(index - 1, 2);
    }
  args = execArgv.concat([modulePath], args);
  if (typeof options.stdio === 'string') {
    options.stdio = stdioStringToArray(options.stdio, 'ipc');
  } else if (!Array.isArray(options.stdio)) {
    // Use a separate fd=3 for the IPC channel. Inherit stdin, stdout,
    // and stderr from the parent if silent isn't set.
    options.stdio = stdioStringToArray(
      options.silent ? 'pipe' : 'inherit',
      'ipc');
  } else if (!options.stdio.includes('ipc')) {
    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');
  options.execPath = options.execPath || process.execPath;
  options.shell = false;
  return spawn(options.execPath, args, options);
function _forkChild(fd) {
  // set process.send()
  const p = new Pipe(PipeConstants.IPC);
  p.open(fd);
  p.unref();
  const control = setupChannel(process, p);
  process.on('newListener', function onNewListener(name) {
    if (name === 'message' || name === 'disconnect') control.ref();
  });
  process.on('removeListener', function onRemoveListener(name) {
    if (name === 'message' || name === 'disconnect') control.unref();
  });
function normalizeExecArgs(command, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = undefined;
  // Make a shallow copy so we don't clobber the user's options object.
  options = { ...options };
  options.shell = typeof options.shell === 'string' ? options.shell : true;
  return {
    file: command,
    options: options,
    callback: callback
  };
function exec(command, options, callback) {
  const opts = normalizeExecArgs(command, options, callback);
  return module.exports.execFile(opts.file,
                                 opts.options,
                                 opts.callback);
const customPromiseExecFunction = (orig) => {
  return (...args) => {
    let resolve;
    let reject;
    const promise = new Promise((res, rej) => {
      resolve = res;
      reject = rej;
    });
    promise.child = orig(...args, (err, stdout, stderr) => {
      if (err !== null) {
        err.stdout = stdout;
        err.stderr = stderr;
        reject(err);
      } else {
        resolve({ stdout, stderr });
      }
    });
    return promise;
  };
Object.defineProperty(exec, promisify.custom, {
  enumerable: false,
  value: customPromiseExecFunction(exec)
function execFile(file /* , args, options, callback */) {
  let args = [];
  let callback;
  let options;
  // Parse the optional positional parameters.
  let pos = 1;
  if (pos < arguments.length && Array.isArray(arguments[pos])) {
    args = arguments[pos++];
  } else if (pos < arguments.length && arguments[pos] == null) {
    pos++;
  if (pos < arguments.length && typeof arguments[pos] === 'object') {
    options = arguments[pos++];
  } else if (pos < arguments.length && arguments[pos] == null) {
    pos++;
  if (pos < arguments.length && typeof arguments[pos] === 'function') {
    callback = arguments[pos++];
  if (!callback && pos < arguments.length && arguments[pos] != null) {
    throw new ERR_INVALID_ARG_VALUE('args', arguments[pos]);
  options = {
    encoding: 'utf8',
    timeout: 0,
    maxBuffer: MAX_BUFFER,
    killSignal: 'SIGTERM',
    cwd: null,
    env: null,
    shell: false,
    ...options
  };
  // Validate the timeout, if present.
  validateTimeout(options.timeout);
  // Validate maxBuffer, if present.
  validateMaxBuffer(options.maxBuffer);
  options.killSignal = sanitizeKillSignal(options.killSignal);
  const child = spawn(file, args, {
    cwd: options.cwd,
    env: options.env,
    gid: options.gid,
    uid: options.uid,
    shell: options.shell,
    windowsHide: !!options.windowsHide,
    windowsVerbatimArguments: !!options.windowsVerbatimArguments
  });
  var encoding;
  const _stdout = [];
  const _stderr = [];
  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {
    encoding = options.encoding;
  } else {
    encoding = null;
  var stdoutLen = 0;
  var stderrLen = 0;
  var killed = false;
  var exited = false;
  var timeoutId;
  var ex = null;
  var cmd = file;
  function exithandler(code, signal) {
    if (exited) return;
    exited = true;
    if (timeoutId) {
      clearTimeout(timeoutId);
      timeoutId = null;
    }
    if (!callback) return;
    // merge chunks
    var stdout;
    var stderr;
    if (encoding ||
      (
        child.stdout &&
        child.stdout.readableEncoding
      )) {
      stdout = _stdout.join('');
    } else {
      stdout = Buffer.concat(_stdout);
    }
    if (encoding ||
      (
        child.stderr &&
        child.stderr.readableEncoding
      )) {
      stderr = _stderr.join('');
    } else {
      stderr = Buffer.concat(_stderr);
    }
    if (!ex && code === 0 && signal === null) {
      callback(null, stdout, stderr);
      return;
    }
    if (args.length !== 0)
      cmd += ` ${args.join(' ')}`;
    if (!ex) {
      // eslint-disable-next-line no-restricted-syntax
      ex = new Error('Command failed: ' + cmd + '\n' + stderr);
      ex.killed = child.killed || killed;
      ex.code = code < 0 ? getSystemErrorName(code) : code;
      ex.signal = signal;
    }
    ex.cmd = cmd;
    callback(ex, stdout, stderr);
  function errorhandler(e) {
    ex = e;
    if (child.stdout)
      child.stdout.destroy();
    if (child.stderr)
      child.stderr.destroy();
    exithandler();
  function kill() {
    if (child.stdout)
      child.stdout.destroy();
    if (child.stderr)
      child.stderr.destroy();
    killed = true;
    try {
      child.kill(options.killSignal);
    } catch (e) {
      ex = e;
      exithandler();
    }
  if (options.timeout > 0) {
    timeoutId = setTimeout(function delayedKill() {
      kill();
      timeoutId = null;
    }, options.timeout);
  if (child.stdout) {
    if (encoding)
      child.stdout.setEncoding(encoding);
    child.stdout.on('data', function onChildStdout(chunk) {
      const encoding = child.stdout.readableEncoding;
      const length = encoding ?
        Buffer.byteLength(chunk, encoding) :
        chunk.length;
      stdoutLen += length;
      if (stdoutLen > options.maxBuffer) {
        const truncatedLen = options.maxBuffer - (stdoutLen - length);
        _stdout.push(chunk.slice(0, truncatedLen));
        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');
        kill();
      } else {
        _stdout.push(chunk);
      }
    });
  if (child.stderr) {
    if (encoding)
      child.stderr.setEncoding(encoding);
    child.stderr.on('data', function onChildStderr(chunk) {
      const encoding = child.stderr.readableEncoding;
      const length = encoding ?
        Buffer.byteLength(chunk, encoding) :
        chunk.length;
      stderrLen += length;
      if (stderrLen > options.maxBuffer) {
        const truncatedLen = options.maxBuffer - (stderrLen - length);
        _stderr.push(chunk.slice(0, truncatedLen));
        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');
        kill();
      } else {
        _stderr.push(chunk);
      }
    });
  child.addListener('close', exithandler);
  child.addListener('error', errorhandler);
  return child;
Object.defineProperty(execFile, promisify.custom, {
  enumerable: false,
  value: customPromiseExecFunction(execFile)
function normalizeSpawnArguments(file, args, options) {
  validateString(file, 'file');
  if (file.length === 0)
    throw new ERR_INVALID_ARG_VALUE('file', file, 'cannot be empty');
  if (Array.isArray(args)) {
    args = args.slice(0);
  } else if (args == null) {
    args = [];
  } else if (typeof args !== 'object') {
    throw new ERR_INVALID_ARG_TYPE('args', 'object', args);
  } else {
    options = args;
    args = [];
  if (options === undefined)
    options = {};
  else if (options === null || typeof options !== 'object')
    throw new ERR_INVALID_ARG_TYPE('options', 'object', options);
  // Validate the cwd, if present.
  if (options.cwd != null &&
      typeof options.cwd !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('options.cwd', 'string', options.cwd);
  // Validate detached, if present.
  if (options.detached != null &&
      typeof options.detached !== 'boolean') {
    throw new ERR_INVALID_ARG_TYPE('options.detached',
                                   'boolean', options.detached);
  // Validate the uid, if present.
  if (options.uid != null && !isInt32(options.uid)) {
    throw new ERR_INVALID_ARG_TYPE('options.uid', 'int32', options.uid);
  // Validate the gid, if present.
  if (options.gid != null && !isInt32(options.gid)) {
    throw new ERR_INVALID_ARG_TYPE('options.gid', 'int32', options.gid);
  // Validate the shell, if present.
  if (options.shell != null &&
      typeof options.shell !== 'boolean' &&
      typeof options.shell !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('options.shell',
                                   ['boolean', 'string'], options.shell);
  // Validate argv0, if present.
  if (options.argv0 != null &&
      typeof options.argv0 !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('options.argv0', 'string', options.argv0);
  // Validate windowsHide, if present.
  if (options.windowsHide != null &&
      typeof options.windowsHide !== 'boolean') {
    throw new ERR_INVALID_ARG_TYPE('options.windowsHide',
                                   'boolean', options.windowsHide);
  // Validate windowsVerbatimArguments, if present.
  if (options.windowsVerbatimArguments != null &&
      typeof options.windowsVerbatimArguments !== 'boolean') {
    throw new ERR_INVALID_ARG_TYPE('options.windowsVerbatimArguments',
                                   'boolean',
                                   options.windowsVerbatimArguments);
  // Make a shallow copy so we don't clobber the user's options object.
  options = { ...options };
  if (options.shell) {
    const command = [file].concat(args).join(' ');
    // Set the shell, switches, and commands.
    if (process.platform === 'win32') {
      if (typeof options.shell === 'string')
        file = options.shell;
      else
        file = process.env.comspec || 'cmd.exe';
      // '/d /s /c' is used only for cmd.exe.
      if (/^(?:.*\\)?cmd(?:\.exe)?$/i.test(file)) {
        args = ['/d', '/s', '/c', `"${command}"`];
        options.windowsVerbatimArguments = true;
      } else {
        args = ['-c', command];
      }
    } else {
      if (typeof options.shell === 'string')
        file = options.shell;
      else if (process.platform === 'android')
        file = '/system/bin/sh';
      else
        file = '/bin/sh';
      args = ['-c', command];
    }
  if (typeof options.argv0 === 'string') {
    args.unshift(options.argv0);
  } else {
    args.unshift(file);
  const env = options.env || process.env;
  const envPairs = [];
  // process.env.NODE_V8_COVERAGE always propagates, making it possible to
  // collect coverage for programs that spawn with white-listed environment.
  if (process.env.NODE_V8_COVERAGE &&
      !ObjectPrototype.hasOwnProperty(options.env || {}, 'NODE_V8_COVERAGE')) {
    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;
  // Prototype values are intentionally included.
  for (const key in env) {
    const value = env[key];
    if (value !== undefined) {
      envPairs.push(`${key}=${value}`);
    }
  return {
    file: file,
    args: args,
    options: options,
    envPairs: envPairs
  };
function spawn(file, args, options) {
  const opts = normalizeSpawnArguments(file, args, options);
  const child = new ChildProcess();
  options = opts.options;
  debug('spawn', opts.args, options);
  child.spawn({
    file: opts.file,
    args: opts.args,
    cwd: options.cwd,
    windowsHide: !!options.windowsHide,
    windowsVerbatimArguments: !!options.windowsVerbatimArguments,
    detached: !!options.detached,
    envPairs: opts.envPairs,
    stdio: options.stdio,
    uid: options.uid,
    gid: options.gid
  });
  return child;
function spawnSync(file, args, options) {
  const opts = normalizeSpawnArguments(file, args, options);
  const defaults = {
    maxBuffer: MAX_BUFFER,
    ...opts.options
  };
  options = opts.options = defaults;
  debug('spawnSync', opts.args, options);
  // Validate the timeout, if present.
  validateTimeout(options.timeout);
  // Validate maxBuffer, if present.
  validateMaxBuffer(options.maxBuffer);
  options.file = opts.file;
  options.args = opts.args;
  options.envPairs = opts.envPairs;
  // Validate and translate the kill signal, if present.
  options.killSignal = sanitizeKillSignal(options.killSignal);
  options.stdio = getValidStdio(options.stdio || 'pipe', true).stdio;
  if (options.input) {
    var stdin = options.stdio[0] = { ...options.stdio[0] };
    stdin.input = options.input;
  // We may want to pass data in on any given fd, ensure it is a valid buffer
  for (var i = 0; i < options.stdio.length; i++) {
    var input = options.stdio[i] && options.stdio[i].input;
    if (input != null) {
      var pipe = options.stdio[i] = { ...options.stdio[i] };
      if (isArrayBufferView(input)) {
        pipe.input = input;
      } else if (typeof input === 'string') {
        pipe.input = Buffer.from(input, options.encoding);
      } else {
        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`,
                                       ['Buffer',
                                        'TypedArray',
                                        'DataView',
                                        'string'],
                                       input);
      }
    }
  return child_process.spawnSync(opts);
function checkExecSyncError(ret, args, cmd) {
  var err;
  if (ret.error) {
    err = ret.error;
  } else if (ret.status !== 0) {
    var msg = 'Command failed: ';
    msg += cmd || args.join(' ');
    if (ret.stderr && ret.stderr.length > 0)
      msg += `\n${ret.stderr.toString()}`;
    // eslint-disable-next-line no-restricted-syntax
    err = new Error(msg);
  if (err) {
    Object.assign(err, ret);
  return err;
function execFileSync(command, args, options) {
  const opts = normalizeSpawnArguments(command, args, options);
  const inheritStderr = !opts.options.stdio;
  const ret = spawnSync(opts.file, opts.args.slice(1), opts.options);
  if (inheritStderr && ret.stderr)
    process.stderr.write(ret.stderr);
  const err = checkExecSyncError(ret, opts.args, undefined);
  if (err)
    throw err;
  return ret.stdout;
function execSync(command, options) {
  const opts = normalizeExecArgs(command, options, null);
  const inheritStderr = !opts.options.stdio;
  const ret = spawnSync(opts.file, opts.options);
  if (inheritStderr && ret.stderr)
    process.stderr.write(ret.stderr);
  const err = checkExecSyncError(ret, opts.args, command);
  if (err)
    throw err;
  return ret.stdout;
function validateTimeout(timeout) {
  if (timeout != null && !(Number.isInteger(timeout) && timeout >= 0)) {
    throw new ERR_OUT_OF_RANGE('timeout', 'an unsigned integer', timeout);
function validateMaxBuffer(maxBuffer) {
  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {
    throw new ERR_OUT_OF_RANGE('options.maxBuffer',
                               'a positive number',
                               maxBuffer);
function sanitizeKillSignal(killSignal) {
  if (typeof killSignal === 'string' || typeof killSignal === 'number') {
    return convertToValidSignal(killSignal);
  } else if (killSignal != null) {
    throw new ERR_INVALID_ARG_TYPE('options.killSignal',
                                   ['string', 'number'],
                                   killSignal);
module.exports = {
  _forkChild,
  ChildProcess,
  exec,
  execFile,
  execFileSync,
  execSync,
  fork,
  spawn,
  spawnSync
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
module.exports = require('internal/console/global');
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
// This module is deprecated in documentation only. Users should be directed
// towards using the specific constants exposed by the individual modules on
// which they are most relevant.
// Deprecation Code: DEP0008
const constants = internalBinding('constants');
Object.assign(exports,
              constants.os.dlopen,
              constants.os.errno,
              constants.os.priority,
              constants.os.signals,
              constants.fs,
              constants.crypto);
Object.freeze(exports);
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// Note: In 0.8 and before, crypto functions all defaulted to using
// binary-encoded strings rather than buffers.
'use strict';
const { Object } = primordials;
const {
  assertCrypto,
  deprecate
} = require('internal/util');
assertCrypto();
const {
  ERR_CRYPTO_FIPS_FORCED,
  ERR_CRYPTO_FIPS_UNAVAILABLE
} = require('internal/errors').codes;
const constants = internalBinding('constants').crypto;
const { getOptionValue } = require('internal/options');
const pendingDeprecation = getOptionValue('--pending-deprecation');
const { fipsMode } = internalBinding('config');
const fipsForced = getOptionValue('--force-fips');
const { getFipsCrypto, setFipsCrypto } = internalBinding('crypto');
const {
  randomBytes,
  randomFill,
  randomFillSync
} = require('internal/crypto/random');
const {
  pbkdf2,
  pbkdf2Sync
} = require('internal/crypto/pbkdf2');
const {
  scrypt,
  scryptSync
} = require('internal/crypto/scrypt');
const {
  generateKeyPair,
  generateKeyPairSync
} = require('internal/crypto/keygen');
const {
  createSecretKey,
  createPublicKey,
  createPrivateKey,
  KeyObject,
} = require('internal/crypto/keys');
const {
  DiffieHellman,
  DiffieHellmanGroup,
  ECDH
} = require('internal/crypto/diffiehellman');
const {
  Cipher,
  Cipheriv,
  Decipher,
  Decipheriv,
  privateDecrypt,
  privateEncrypt,
  publicDecrypt,
  publicEncrypt
} = require('internal/crypto/cipher');
const {
  Sign,
  signOneShot,
  Verify,
  verifyOneShot
} = require('internal/crypto/sig');
const {
  Hash,
  Hmac
} = require('internal/crypto/hash');
const {
  getCiphers,
  getCurves,
  getDefaultEncoding,
  getHashes,
  setDefaultEncoding,
  setEngine,
  timingSafeEqual
} = require('internal/crypto/util');
const Certificate = require('internal/crypto/certificate');
// These helper functions are needed because the constructors can
// use new, in which case V8 cannot inline the recursive constructor call
function createHash(algorithm, options) {
  return new Hash(algorithm, options);
function createCipher(cipher, password, options) {
  return new Cipher(cipher, password, options);
function createCipheriv(cipher, key, iv, options) {
  return new Cipheriv(cipher, key, iv, options);
function createDecipher(cipher, password, options) {
  return new Decipher(cipher, password, options);
function createDecipheriv(cipher, key, iv, options) {
  return new Decipheriv(cipher, key, iv, options);
function createDiffieHellman(sizeOrKey, keyEncoding, generator, genEncoding) {
  return new DiffieHellman(sizeOrKey, keyEncoding, generator, genEncoding);
function createDiffieHellmanGroup(name) {
  return new DiffieHellmanGroup(name);
function createECDH(curve) {
  return new ECDH(curve);
function createHmac(hmac, key, options) {
  return new Hmac(hmac, key, options);
function createSign(algorithm, options) {
  return new Sign(algorithm, options);
function createVerify(algorithm, options) {
  return new Verify(algorithm, options);
module.exports = {
  // Methods
  createCipheriv,
  createDecipheriv,
  createDiffieHellman,
  createDiffieHellmanGroup,
  createECDH,
  createHash,
  createHmac,
  createPrivateKey,
  createPublicKey,
  createSecretKey,
  createSign,
  createVerify,
  getCiphers,
  getCurves,
  getDiffieHellman: createDiffieHellmanGroup,
  getHashes,
  pbkdf2,
  pbkdf2Sync,
  generateKeyPair,
  generateKeyPairSync,
  privateDecrypt,
  privateEncrypt,
  publicDecrypt,
  publicEncrypt,
  randomBytes,
  randomFill,
  randomFillSync,
  scrypt,
  scryptSync,
  sign: signOneShot,
  setEngine,
  timingSafeEqual,
  getFips: !fipsMode ? getFipsDisabled :
    fipsForced ? getFipsForced : getFipsCrypto,
  setFips: !fipsMode ? setFipsDisabled :
    fipsForced ? setFipsForced : setFipsCrypto,
  verify: verifyOneShot,
  // Classes
  Certificate,
  Cipher,
  Cipheriv,
  Decipher,
  Decipheriv,
  DiffieHellman,
  DiffieHellmanGroup,
  ECDH,
  Hash,
  Hmac,
  KeyObject,
  Sign,
  Verify
function setFipsDisabled() {
  throw new ERR_CRYPTO_FIPS_UNAVAILABLE();
function setFipsForced(val) {
  if (val) return;
  throw new ERR_CRYPTO_FIPS_FORCED();
function getFipsDisabled() {
  return 0;
function getFipsForced() {
  return 1;
Object.defineProperties(module.exports, {
  createCipher: {
    enumerable: false,
    value: deprecate(createCipher,
                     'crypto.createCipher is deprecated.', 'DEP0106')
  },
  createDecipher: {
    enumerable: false,
    value: deprecate(createDecipher,
                     'crypto.createDecipher is deprecated.', 'DEP0106')
  },
  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()
  fips: {
    get: !fipsMode ? getFipsDisabled :
      fipsForced ? getFipsForced : getFipsCrypto,
    set: !fipsMode ? setFipsDisabled :
      fipsForced ? setFipsForced : setFipsCrypto
  },
  DEFAULT_ENCODING: {
    enumerable: false,
    configurable: true,
    get: deprecate(getDefaultEncoding,
                   'crypto.DEFAULT_ENCODING is deprecated.', 'DEP0091'),
    set: deprecate(setDefaultEncoding,
                   'crypto.DEFAULT_ENCODING is deprecated.', 'DEP0091')
  },
  constants: {
    configurable: false,
    enumerable: true,
    value: constants
  },
  // Aliases for randomBytes are deprecated.
  // The ecosystem needs those to exist for backwards compatibility.
  prng: {
    enumerable: false,
    configurable: true,
    writable: true,
    value: pendingDeprecation ?
      deprecate(randomBytes, 'crypto.prng is deprecated.', 'DEP0115') :
      randomBytes
  },
  pseudoRandomBytes: {
    enumerable: false,
    configurable: true,
    writable: true,
    value: pendingDeprecation ?
      deprecate(randomBytes,
                'crypto.pseudoRandomBytes is deprecated.', 'DEP0115') :
      randomBytes
  },
  rng: {
    enumerable: false,
    configurable: true,
    writable: true,
    value: pendingDeprecation ?
      deprecate(randomBytes, 'crypto.rng is deprecated.', 'DEP0115') :
      randomBytes
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const childOrMaster = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'master';
module.exports = require(`internal/cluster/${childOrMaster}`);
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const errors = require('internal/errors');
const {
  kStateSymbol,
  _createSocketHandle,
  newHandle,
} = require('internal/dgram');
const { guessHandleType } = internalBinding('util');
const {
  isLegalPort,
} = require('internal/net');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_MISSING_ARGS,
  ERR_SOCKET_ALREADY_BOUND,
  ERR_SOCKET_BAD_BUFFER_SIZE,
  ERR_SOCKET_BAD_PORT,
  ERR_SOCKET_BUFFER_SIZE,
  ERR_SOCKET_CANNOT_SEND,
  ERR_SOCKET_DGRAM_IS_CONNECTED,
  ERR_SOCKET_DGRAM_NOT_CONNECTED,
  ERR_SOCKET_DGRAM_NOT_RUNNING,
  ERR_INVALID_FD_TYPE
} = errors.codes;
const {
  isInt32,
  validateString,
  validateNumber
} = require('internal/validators');
const { Buffer } = require('buffer');
const { deprecate } = require('internal/util');
const { isUint8Array } = require('internal/util/types');
const EventEmitter = require('events');
const {
  defaultTriggerAsyncIdScope,
  symbols: { async_id_symbol, owner_symbol }
} = require('internal/async_hooks');
const { UV_UDP_REUSEADDR } = internalBinding('constants').os;
const {
  constants: { UV_UDP_IPV6ONLY },
  UDP,
  SendWrap
} = internalBinding('udp_wrap');
const BIND_STATE_UNBOUND = 0;
const BIND_STATE_BINDING = 1;
const BIND_STATE_BOUND = 2;
const CONNECT_STATE_DISCONNECTED = 0;
const CONNECT_STATE_CONNECTING = 1;
const CONNECT_STATE_CONNECTED = 2;
const RECV_BUFFER = true;
const SEND_BUFFER = false;
// Lazily loaded
let cluster = null;
const errnoException = errors.errnoException;
const exceptionWithHostPort = errors.exceptionWithHostPort;
function Socket(type, listener) {
  EventEmitter.call(this);
  let lookup;
  let recvBufferSize;
  let sendBufferSize;
  let options;
  if (type !== null && typeof type === 'object') {
    options = type;
    type = options.type;
    lookup = options.lookup;
    recvBufferSize = options.recvBufferSize;
    sendBufferSize = options.sendBufferSize;
  const handle = newHandle(type, lookup);
  handle[owner_symbol] = this;
  this[async_id_symbol] = handle.getAsyncId();
  this.type = type;
  if (typeof listener === 'function')
    this.on('message', listener);
  this[kStateSymbol] = {
    handle,
    receiving: false,
    bindState: BIND_STATE_UNBOUND,
    connectState: CONNECT_STATE_DISCONNECTED,
    queue: undefined,
    reuseAddr: options && options.reuseAddr, // Use UV_UDP_REUSEADDR if true.
    ipv6Only: options && options.ipv6Only,
    recvBufferSize,
    sendBufferSize
  };
Object.setPrototypeOf(Socket.prototype, EventEmitter.prototype);
Object.setPrototypeOf(Socket, EventEmitter);
function createSocket(type, listener) {
  return new Socket(type, listener);
function startListening(socket) {
  const state = socket[kStateSymbol];
  state.handle.onmessage = onMessage;
  // Todo: handle errors
  state.handle.recvStart();
  state.receiving = true;
  state.bindState = BIND_STATE_BOUND;
  if (state.recvBufferSize)
    bufferSize(socket, state.recvBufferSize, RECV_BUFFER);
  if (state.sendBufferSize)
    bufferSize(socket, state.sendBufferSize, SEND_BUFFER);
  socket.emit('listening');
function replaceHandle(self, newHandle) {
  const state = self[kStateSymbol];
  const oldHandle = state.handle;
  // Set up the handle that we got from master.
  newHandle.lookup = oldHandle.lookup;
  newHandle.bind = oldHandle.bind;
  newHandle.send = oldHandle.send;
  newHandle[owner_symbol] = self;
  // Replace the existing handle by the handle we got from master.
  oldHandle.close();
  state.handle = newHandle;
  // Check if the udp handle was connected and set the state accordingly
  if (isConnected(self))
    state.connectState = CONNECT_STATE_CONNECTED;
function bufferSize(self, size, buffer) {
  if (size >>> 0 !== size)
    throw new ERR_SOCKET_BAD_BUFFER_SIZE();
  const ctx = {};
  const ret = self[kStateSymbol].handle.bufferSize(size, buffer, ctx);
  if (ret === undefined) {
    throw new ERR_SOCKET_BUFFER_SIZE(ctx);
  return ret;
// Query master process to get the server handle and utilize it.
function bindServerHandle(self, options, errCb) {
  if (!cluster)
    cluster = require('cluster');
  const state = self[kStateSymbol];
  cluster._getServer(self, options, (err, handle) => {
    if (err) {
      errCb(err);
      return;
    }
    if (!state.handle) {
      // Handle has been closed in the mean time.
      return handle.close();
    }
    replaceHandle(self, handle);
    startListening(self);
  });
Socket.prototype.bind = function(port_, address_ /* , callback */) {
  let port = port_;
  healthCheck(this);
  const state = this[kStateSymbol];
  if (state.bindState !== BIND_STATE_UNBOUND)
    throw new ERR_SOCKET_ALREADY_BOUND();
  state.bindState = BIND_STATE_BINDING;
  if (arguments.length && typeof arguments[arguments.length - 1] === 'function')
    this.once('listening', arguments[arguments.length - 1]);
  if (port instanceof UDP) {
    replaceHandle(this, port);
    startListening(this);
    return this;
  // Open an existing fd instead of creating a new one.
  if (port !== null && typeof port === 'object' &&
      isInt32(port.fd) && port.fd > 0) {
    const fd = port.fd;
    const exclusive = !!port.exclusive;
    const state = this[kStateSymbol];
    if (!cluster)
      cluster = require('cluster');
    if (cluster.isWorker && !exclusive) {
      bindServerHandle(this, {
        address: null,
        port: null,
        addressType: this.type,
        fd,
        flags: null
      }, (err) => {
        // Callback to handle error.
        const ex = errnoException(err, 'open');
        this.emit('error', ex);
        state.bindState = BIND_STATE_UNBOUND;
      });
      return this;
    }
    const type = guessHandleType(fd);
    if (type !== 'UDP')
      throw new ERR_INVALID_FD_TYPE(type);
    const err = state.handle.open(fd);
    if (err)
      throw errnoException(err, 'open');
    // Check if the udp handle was connected and set the state accordingly
    if (isConnected(this))
      state.connectState = CONNECT_STATE_CONNECTED;
    startListening(this);
    return this;
  let address;
  let exclusive;
  if (port !== null && typeof port === 'object') {
    address = port.address || '';
    exclusive = !!port.exclusive;
    port = port.port;
  } else {
    address = typeof address_ === 'function' ? '' : address_;
    exclusive = false;
  // Defaulting address for bind to all interfaces
  if (!address) {
    if (this.type === 'udp4')
      address = '0.0.0.0';
    else
      address = '::';
  // Resolve address first
  state.handle.lookup(address, (err, ip) => {
    if (err) {
      state.bindState = BIND_STATE_UNBOUND;
      this.emit('error', err);
      return;
    }
    if (!cluster)
      cluster = require('cluster');
    let flags = 0;
    if (state.reuseAddr)
      flags |= UV_UDP_REUSEADDR;
    if (state.ipv6Only)
      flags |= UV_UDP_IPV6ONLY;
    if (cluster.isWorker && !exclusive) {
      bindServerHandle(this, {
        address: ip,
        port: port,
        addressType: this.type,
        fd: -1,
        flags: flags
      }, (err) => {
        // Callback to handle error.
        const ex = exceptionWithHostPort(err, 'bind', ip, port);
        this.emit('error', ex);
        state.bindState = BIND_STATE_UNBOUND;
      });
    } else {
      if (!state.handle)
        return; // Handle has been closed in the mean time
      const err = state.handle.bind(ip, port || 0, flags);
      if (err) {
        const ex = exceptionWithHostPort(err, 'bind', ip, port);
        this.emit('error', ex);
        state.bindState = BIND_STATE_UNBOUND;
        // Todo: close?
        return;
      }
      startListening(this);
    }
  });
  return this;
function validatePort(port) {
  const legal = isLegalPort(port);
  if (legal)
    port = port | 0;
  if (!legal || port === 0)
    throw new ERR_SOCKET_BAD_PORT(port);
  return port;
Socket.prototype.connect = function(port, address, callback) {
  port = validatePort(port);
  if (typeof address === 'function') {
    callback = address;
    address = '';
  } else if (address === undefined) {
    address = '';
  validateString(address, 'address');
  const state = this[kStateSymbol];
  if (state.connectState !== CONNECT_STATE_DISCONNECTED)
    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();
  state.connectState = CONNECT_STATE_CONNECTING;
  if (state.bindState === BIND_STATE_UNBOUND)
    this.bind({ port: 0, exclusive: true }, null);
  if (state.bindState !== BIND_STATE_BOUND) {
    enqueue(this, _connect.bind(this, port, address, callback));
    return;
  _connect.call(this, port, address, callback);
function _connect(port, address, callback) {
  const state = this[kStateSymbol];
  if (callback)
    this.once('connect', callback);
  const afterDns = (ex, ip) => {
    defaultTriggerAsyncIdScope(
      this[async_id_symbol],
      doConnect,
      ex, this, ip, address, port, callback
    );
  };
  state.handle.lookup(address, afterDns);
function doConnect(ex, self, ip, address, port, callback) {
  const state = self[kStateSymbol];
  if (!state.handle)
    return;
  if (!ex) {
    const err = state.handle.connect(ip, port);
    if (err) {
      ex = exceptionWithHostPort(err, 'connect', address, port);
    }
  if (ex) {
    state.connectState = CONNECT_STATE_DISCONNECTED;
    return process.nextTick(() => {
      if (callback) {
        self.removeListener('connect', callback);
        callback(ex);
      } else {
        self.emit('error', ex);
      }
    });
  state.connectState = CONNECT_STATE_CONNECTED;
  process.nextTick(() => self.emit('connect'));
Socket.prototype.disconnect = function() {
  const state = this[kStateSymbol];
  if (state.connectState !== CONNECT_STATE_CONNECTED)
    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();
  const err = state.handle.disconnect();
  if (err)
    throw errnoException(err, 'connect');
  else
    state.connectState = CONNECT_STATE_DISCONNECTED;
// Thin wrapper around `send`, here for compatibility with dgram_legacy.js
Socket.prototype.sendto = function(buffer,
                                   offset,
                                   length,
                                   port,
                                   address,
                                   callback) {
  validateNumber(offset, 'offset');
  validateNumber(length, 'length');
  validateNumber(port, 'port');
  validateString(address, 'address');
  this.send(buffer, offset, length, port, address, callback);
function sliceBuffer(buffer, offset, length) {
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer);
  } else if (!isUint8Array(buffer)) {
    throw new ERR_INVALID_ARG_TYPE('buffer',
                                   ['Buffer', 'Uint8Array', 'string'], buffer);
  offset = offset >>> 0;
  length = length >>> 0;
  return buffer.slice(offset, offset + length);
function fixBufferList(list) {
  const newlist = new Array(list.length);
  for (let i = 0, l = list.length; i < l; i++) {
    const buf = list[i];
    if (typeof buf === 'string')
      newlist[i] = Buffer.from(buf);
    else if (!isUint8Array(buf))
      return null;
    else
      newlist[i] = buf;
  return newlist;
function enqueue(self, toEnqueue) {
  const state = self[kStateSymbol];
  // If the send queue hasn't been initialized yet, do it, and install an
  // event handler that flushes the send queue after binding is done.
  if (state.queue === undefined) {
    state.queue = [];
    self.once('error', onListenError);
    self.once('listening', onListenSuccess);
  state.queue.push(toEnqueue);
function onListenSuccess() {
  this.removeListener('error', onListenError);
  clearQueue.call(this);
function onListenError(err) {
  this.removeListener('listening', onListenSuccess);
  this[kStateSymbol].queue = undefined;
  this.emit('error', new ERR_SOCKET_CANNOT_SEND());
function clearQueue() {
  const state = this[kStateSymbol];
  const queue = state.queue;
  state.queue = undefined;
  // Flush the send queue.
  for (let i = 0; i < queue.length; i++)
    queue[i]();
function isConnected(self) {
  try {
    self.remoteAddress();
    return true;
  } catch {
    return false;
// valid combinations
// For connectionless sockets
// send(buffer, offset, length, port, address, callback)
// send(buffer, offset, length, port, address)
// send(buffer, offset, length, port, callback)
// send(buffer, offset, length, port)
// send(bufferOrList, port, address, callback)
// send(bufferOrList, port, address)
// send(bufferOrList, port, callback)
// send(bufferOrList, port)
// For connected sockets
// send(buffer, offset, length, callback)
// send(buffer, offset, length)
// send(bufferOrList, callback)
// send(bufferOrList)
Socket.prototype.send = function(buffer,
                                 offset,
                                 length,
                                 port,
                                 address,
                                 callback) {
  let list;
  const state = this[kStateSymbol];
  const connected = state.connectState === CONNECT_STATE_CONNECTED;
  if (!connected) {
    if (address || (port && typeof port !== 'function')) {
      buffer = sliceBuffer(buffer, offset, length);
    } else {
      callback = port;
      port = offset;
      address = length;
    }
  } else {
    if (typeof length === 'number') {
      buffer = sliceBuffer(buffer, offset, length);
      if (typeof port === 'function') {
        callback = port;
        port = null;
      }
    } else {
      callback = offset;
    }
    if (port || address)
      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();
  if (!Array.isArray(buffer)) {
    if (typeof buffer === 'string') {
      list = [ Buffer.from(buffer) ];
    } else if (!isUint8Array(buffer)) {
      throw new ERR_INVALID_ARG_TYPE('buffer',
                                     ['Buffer', 'Uint8Array', 'string'],
                                     buffer);
    } else {
      list = [ buffer ];
    }
  } else if (!(list = fixBufferList(buffer))) {
    throw new ERR_INVALID_ARG_TYPE('buffer list arguments',
                                   ['Buffer', 'string'], buffer);
  if (!connected)
    port = validatePort(port);
  // Normalize callback so it's either a function or undefined but not anything
  // else.
  if (typeof callback !== 'function')
    callback = undefined;
  if (typeof address === 'function') {
    callback = address;
    address = undefined;
  } else if (address && typeof address !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('address', ['string', 'falsy'], address);
  healthCheck(this);
  if (state.bindState === BIND_STATE_UNBOUND)
    this.bind({ port: 0, exclusive: true }, null);
  if (list.length === 0)
    list.push(Buffer.alloc(0));
  // If the socket hasn't been bound yet, push the outbound packet onto the
  // send queue and send after binding is complete.
  if (state.bindState !== BIND_STATE_BOUND) {
    enqueue(this, this.send.bind(this, list, port, address, callback));
    return;
  const afterDns = (ex, ip) => {
    defaultTriggerAsyncIdScope(
      this[async_id_symbol],
      doSend,
      ex, this, ip, list, address, port, callback
    );
  };
  if (!connected) {
    state.handle.lookup(address, afterDns);
  } else {
    afterDns(null, null);
function doSend(ex, self, ip, list, address, port, callback) {
  const state = self[kStateSymbol];
  if (ex) {
    if (typeof callback === 'function') {
      process.nextTick(callback, ex);
      return;
    }
    process.nextTick(() => self.emit('error', ex));
    return;
  } else if (!state.handle) {
    return;
  const req = new SendWrap();
  req.list = list;  // Keep reference alive.
  req.address = address;
  req.port = port;
  if (callback) {
    req.callback = callback;
    req.oncomplete = afterSend;
  let err;
  if (port)
    err = state.handle.send(req, list, list.length, port, ip, !!callback);
  else
    err = state.handle.send(req, list, list.length, !!callback);
  if (err && callback) {
    // Don't emit as error, dgram_legacy.js compatibility
    const ex = exceptionWithHostPort(err, 'send', address, port);
    process.nextTick(callback, ex);
function afterSend(err, sent) {
  if (err) {
    err = exceptionWithHostPort(err, 'send', this.address, this.port);
  } else {
    err = null;
  this.callback(err, sent);
Socket.prototype.close = function(callback) {
  const state = this[kStateSymbol];
  const queue = state.queue;
  if (typeof callback === 'function')
    this.on('close', callback);
  if (queue !== undefined) {
    queue.push(this.close.bind(this));
    return this;
  healthCheck(this);
  stopReceiving(this);
  state.handle.close();
  state.handle = null;
  defaultTriggerAsyncIdScope(this[async_id_symbol],
                             process.nextTick,
                             socketCloseNT,
                             this);
  return this;
function socketCloseNT(self) {
  self.emit('close');
Socket.prototype.address = function() {
  healthCheck(this);
  const out = {};
  const err = this[kStateSymbol].handle.getsockname(out);
  if (err) {
    throw errnoException(err, 'getsockname');
  return out;
Socket.prototype.remoteAddress = function() {
  healthCheck(this);
  const state = this[kStateSymbol];
  if (state.connectState !== CONNECT_STATE_CONNECTED)
    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();
  const out = {};
  const err = state.handle.getpeername(out);
  if (err)
    throw errnoException(err, 'getpeername');
  return out;
Socket.prototype.setBroadcast = function(arg) {
  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);
  if (err) {
    throw errnoException(err, 'setBroadcast');
Socket.prototype.setTTL = function(ttl) {
  validateNumber(ttl, 'ttl');
  const err = this[kStateSymbol].handle.setTTL(ttl);
  if (err) {
    throw errnoException(err, 'setTTL');
  return ttl;
Socket.prototype.setMulticastTTL = function(ttl) {
  validateNumber(ttl, 'ttl');
  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);
  if (err) {
    throw errnoException(err, 'setMulticastTTL');
  return ttl;
Socket.prototype.setMulticastLoopback = function(arg) {
  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);
  if (err) {
    throw errnoException(err, 'setMulticastLoopback');
  return arg; // 0.4 compatibility
Socket.prototype.setMulticastInterface = function(interfaceAddress) {
  healthCheck(this);
  validateString(interfaceAddress, 'interfaceAddress');
  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);
  if (err) {
    throw errnoException(err, 'setMulticastInterface');
Socket.prototype.addMembership = function(multicastAddress,
                                          interfaceAddress) {
  healthCheck(this);
  if (!multicastAddress) {
    throw new ERR_MISSING_ARGS('multicastAddress');
  const { handle } = this[kStateSymbol];
  const err = handle.addMembership(multicastAddress, interfaceAddress);
  if (err) {
    throw errnoException(err, 'addMembership');
Socket.prototype.dropMembership = function(multicastAddress,
                                           interfaceAddress) {
  healthCheck(this);
  if (!multicastAddress) {
    throw new ERR_MISSING_ARGS('multicastAddress');
  const { handle } = this[kStateSymbol];
  const err = handle.dropMembership(multicastAddress, interfaceAddress);
  if (err) {
    throw errnoException(err, 'dropMembership');
function healthCheck(socket) {
  if (!socket[kStateSymbol].handle) {
    // Error message from dgram_legacy.js.
    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();
function stopReceiving(socket) {
  const state = socket[kStateSymbol];
  if (!state.receiving)
    return;
  state.handle.recvStop();
  state.receiving = false;
function onMessage(nread, handle, buf, rinfo) {
  const self = handle[owner_symbol];
  if (nread < 0) {
    return self.emit('error', errnoException(nread, 'recvmsg'));
  rinfo.size = buf.length; // compatibility
  self.emit('message', buf, rinfo);
Socket.prototype.ref = function() {
  const handle = this[kStateSymbol].handle;
  if (handle)
    handle.ref();
  return this;
Socket.prototype.unref = function() {
  const handle = this[kStateSymbol].handle;
  if (handle)
    handle.unref();
  return this;
Socket.prototype.setRecvBufferSize = function(size) {
  bufferSize(this, size, RECV_BUFFER);
Socket.prototype.setSendBufferSize = function(size) {
  bufferSize(this, size, SEND_BUFFER);
Socket.prototype.getRecvBufferSize = function() {
  return bufferSize(this, 0, RECV_BUFFER);
Socket.prototype.getSendBufferSize = function() {
  return bufferSize(this, 0, SEND_BUFFER);
// Deprecated private APIs.
Object.defineProperty(Socket.prototype, '_handle', {
  get: deprecate(function() {
    return this[kStateSymbol].handle;
  }, 'Socket.prototype._handle is deprecated', 'DEP0112'),
  set: deprecate(function(val) {
    this[kStateSymbol].handle = val;
  }, 'Socket.prototype._handle is deprecated', 'DEP0112')
Object.defineProperty(Socket.prototype, '_receiving', {
  get: deprecate(function() {
    return this[kStateSymbol].receiving;
  }, 'Socket.prototype._receiving is deprecated', 'DEP0112'),
  set: deprecate(function(val) {
    this[kStateSymbol].receiving = val;
  }, 'Socket.prototype._receiving is deprecated', 'DEP0112')
Object.defineProperty(Socket.prototype, '_bindState', {
  get: deprecate(function() {
    return this[kStateSymbol].bindState;
  }, 'Socket.prototype._bindState is deprecated', 'DEP0112'),
  set: deprecate(function(val) {
    this[kStateSymbol].bindState = val;
  }, 'Socket.prototype._bindState is deprecated', 'DEP0112')
Object.defineProperty(Socket.prototype, '_queue', {
  get: deprecate(function() {
    return this[kStateSymbol].queue;
  }, 'Socket.prototype._queue is deprecated', 'DEP0112'),
  set: deprecate(function(val) {
    this[kStateSymbol].queue = val;
  }, 'Socket.prototype._queue is deprecated', 'DEP0112')
Object.defineProperty(Socket.prototype, '_reuseAddr', {
  get: deprecate(function() {
    return this[kStateSymbol].reuseAddr;
  }, 'Socket.prototype._reuseAddr is deprecated', 'DEP0112'),
  set: deprecate(function(val) {
    this[kStateSymbol].reuseAddr = val;
  }, 'Socket.prototype._reuseAddr is deprecated', 'DEP0112')
Socket.prototype._healthCheck = deprecate(function() {
  healthCheck(this);
}, 'Socket.prototype._healthCheck() is deprecated', 'DEP0112');
Socket.prototype._stopReceiving = deprecate(function() {
  stopReceiving(this);
}, 'Socket.prototype._stopReceiving() is deprecated', 'DEP0112');
// Legacy alias on the C++ wrapper object. This is not public API, so we may
// want to runtime-deprecate it at some point. There's no hurry, though.
Object.defineProperty(UDP.prototype, 'owner', {
  get() { return this[owner_symbol]; },
  set(v) { return this[owner_symbol] = v; }
module.exports = {
  _createSocketHandle: deprecate(
    _createSocketHandle,
    'dgram._createSocketHandle() is deprecated',
    'DEP0112'
  ),
  createSocket,
  Socket
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const cares = internalBinding('cares_wrap');
const { toASCII } = require('internal/idna');
const { isIP, isLegalPort } = require('internal/net');
const { customPromisifyArgs } = require('internal/util');
const errors = require('internal/errors');
const {
  bindDefaultResolver,
  getDefaultResolver,
  setDefaultResolver,
  Resolver,
  validateHints,
  emitInvalidHostnameWarning,
} = require('internal/dns/utils');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_CALLBACK,
  ERR_INVALID_OPT_VALUE,
  ERR_MISSING_ARGS,
  ERR_SOCKET_BAD_PORT
} = errors.codes;
const { validateString } = require('internal/validators');
const {
  GetAddrInfoReqWrap,
  GetNameInfoReqWrap,
  QueryReqWrap,
} = cares;
const dnsException = errors.dnsException;
let promises = null; // Lazy loaded
function onlookup(err, addresses) {
  if (err) {
    return this.callback(dnsException(err, 'getaddrinfo', this.hostname));
  if (this.family) {
    this.callback(null, addresses[0], this.family);
  } else {
    this.callback(null, addresses[0], isIP(addresses[0]));
function onlookupall(err, addresses) {
  if (err) {
    return this.callback(dnsException(err, 'getaddrinfo', this.hostname));
  const family = this.family;
  for (var i = 0; i < addresses.length; i++) {
    const addr = addresses[i];
    addresses[i] = {
      address: addr,
      family: family || isIP(addr)
    };
  this.callback(null, addresses);
// Easy DNS A/AAAA look up
// lookup(hostname, [options,] callback)
function lookup(hostname, options, callback) {
  var hints = 0;
  var family = -1;
  var all = false;
  var verbatim = false;
  // Parse arguments
  if (hostname && typeof hostname !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('hostname', 'string', hostname);
  } else if (typeof options === 'function') {
    callback = options;
    family = 0;
  } else if (typeof callback !== 'function') {
    throw new ERR_INVALID_CALLBACK(callback);
  } else if (options !== null && typeof options === 'object') {
    hints = options.hints >>> 0;
    family = options.family >>> 0;
    all = options.all === true;
    verbatim = options.verbatim === true;
    validateHints(hints);
  } else {
    family = options >>> 0;
  if (family !== 0 && family !== 4 && family !== 6)
    throw new ERR_INVALID_OPT_VALUE('family', family);
  if (!hostname) {
    emitInvalidHostnameWarning(hostname);
    if (all) {
      process.nextTick(callback, null, []);
    } else {
      process.nextTick(callback, null, null, family === 6 ? 6 : 4);
    }
    return {};
  const matchedFamily = isIP(hostname);
  if (matchedFamily) {
    if (all) {
      process.nextTick(
        callback, null, [{ address: hostname, family: matchedFamily }]);
    } else {
      process.nextTick(callback, null, hostname, matchedFamily);
    }
    return {};
  const req = new GetAddrInfoReqWrap();
  req.callback = callback;
  req.family = family;
  req.hostname = hostname;
  req.oncomplete = all ? onlookupall : onlookup;
  const err = cares.getaddrinfo(
    req, toASCII(hostname), family, hints, verbatim
  );
  if (err) {
    process.nextTick(callback, dnsException(err, 'getaddrinfo', hostname));
    return {};
  return req;
Object.defineProperty(lookup, customPromisifyArgs,
                      { value: ['address', 'family'], enumerable: false });
function onlookupservice(err, hostname, service) {
  if (err)
    return this.callback(dnsException(err, 'getnameinfo', this.hostname));
  this.callback(null, hostname, service);
// lookupService(address, port, callback)
function lookupService(hostname, port, callback) {
  if (arguments.length !== 3)
    throw new ERR_MISSING_ARGS('hostname', 'port', 'callback');
  if (isIP(hostname) === 0)
    throw new ERR_INVALID_OPT_VALUE('hostname', hostname);
  if (!isLegalPort(port))
    throw new ERR_SOCKET_BAD_PORT(port);
  if (typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  port = +port;
  const req = new GetNameInfoReqWrap();
  req.callback = callback;
  req.hostname = hostname;
  req.port = port;
  req.oncomplete = onlookupservice;
  const err = cares.getnameinfo(req, hostname, port);
  if (err) throw dnsException(err, 'getnameinfo', hostname);
  return req;
Object.defineProperty(lookupService, customPromisifyArgs,
                      { value: ['hostname', 'service'], enumerable: false });
function onresolve(err, result, ttls) {
  if (ttls && this.ttl)
    result = result.map((address, index) => ({ address, ttl: ttls[index] }));
  if (err)
    this.callback(dnsException(err, this.bindingName, this.hostname));
  else
    this.callback(null, result);
function resolver(bindingName) {
  function query(name, /* options, */ callback) {
    var options;
    if (arguments.length > 2) {
      options = callback;
      callback = arguments[2];
    }
    validateString(name, 'name');
    if (typeof callback !== 'function') {
      throw new ERR_INVALID_CALLBACK(callback);
    }
    const req = new QueryReqWrap();
    req.bindingName = bindingName;
    req.callback = callback;
    req.hostname = name;
    req.oncomplete = onresolve;
    req.ttl = !!(options && options.ttl);
    const err = this._handle[bindingName](req, toASCII(name));
    if (err) throw dnsException(err, bindingName, name);
    return req;
  Object.defineProperty(query, 'name', { value: bindingName });
  return query;
const resolveMap = Object.create(null);
Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');
Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');
Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');
Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');
Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');
Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');
Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');
Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');
Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');
Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');
Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');
Resolver.prototype.reverse = resolver('getHostByAddr');
Resolver.prototype.resolve = resolve;
function resolve(hostname, rrtype, callback) {
  var resolver;
  if (typeof rrtype === 'string') {
    resolver = resolveMap[rrtype];
  } else if (typeof rrtype === 'function') {
    resolver = resolveMap.A;
    callback = rrtype;
  } else {
    throw new ERR_INVALID_ARG_TYPE('rrtype', 'string', rrtype);
  if (typeof resolver === 'function') {
    return resolver.call(this, hostname, callback);
  } else {
    throw new ERR_INVALID_OPT_VALUE('rrtype', rrtype);
function defaultResolverSetServers(servers) {
  const resolver = new Resolver();
  resolver.setServers(servers);
  setDefaultResolver(resolver);
  bindDefaultResolver(module.exports, Resolver.prototype);
  if (promises !== null)
    bindDefaultResolver(promises, promises.Resolver.prototype);
module.exports = {
  lookup,
  lookupService,
  Resolver,
  setServers: defaultResolverSetServers,
  // uv_getaddrinfo flags
  ADDRCONFIG: cares.AI_ADDRCONFIG,
  V4MAPPED: cares.AI_V4MAPPED,
  // ERROR CODES
  NODATA: 'ENODATA',
  FORMERR: 'EFORMERR',
  SERVFAIL: 'ESERVFAIL',
  NOTFOUND: 'ENOTFOUND',
  NOTIMP: 'ENOTIMP',
  REFUSED: 'EREFUSED',
  BADQUERY: 'EBADQUERY',
  BADNAME: 'EBADNAME',
  BADFAMILY: 'EBADFAMILY',
  BADRESP: 'EBADRESP',
  CONNREFUSED: 'ECONNREFUSED',
  TIMEOUT: 'ETIMEOUT',
  EOF: 'EOF',
  FILE: 'EFILE',
  NOMEM: 'ENOMEM',
  DESTRUCTION: 'EDESTRUCTION',
  BADSTR: 'EBADSTR',
  BADFLAGS: 'EBADFLAGS',
  NONAME: 'ENONAME',
  BADHINTS: 'EBADHINTS',
  NOTINITIALIZED: 'ENOTINITIALIZED',
  LOADIPHLPAPI: 'ELOADIPHLPAPI',
  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS',
  CANCELLED: 'ECANCELLED'
bindDefaultResolver(module.exports, getDefaultResolver());
Object.defineProperties(module.exports, {
  promises: {
    configurable: true,
    enumerable: true,
    get() {
      if (promises === null) {
        promises = require('internal/dns/promises');
        promises.setServers = defaultResolverSetServers;
      }
      return promises;
    }
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
// WARNING: THIS MODULE IS PENDING DEPRECATION.
// No new pull requests targeting this module will be accepted
// unless they address existing, critical bugs.
const { Object, Reflect } = primordials;
const util = require('util');
const EventEmitter = require('events');
const {
  ERR_DOMAIN_CALLBACK_NOT_AVAILABLE,
  ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE,
  ERR_UNHANDLED_ERROR
} = require('internal/errors').codes;
const { createHook } = require('async_hooks');
// TODO(addaleax): Use a non-internal solution for this.
const kWeak = Symbol('kWeak');
const { WeakReference } = internalBinding('util');
// Overwrite process.domain with a getter/setter that will allow for more
// effective optimizations
const _domain = [null];
Object.defineProperty(process, 'domain', {
  enumerable: true,
  get: function() {
    return _domain[0];
  },
  set: function(arg) {
    return _domain[0] = arg;
const pairing = new Map();
const asyncHook = createHook({
  init(asyncId, type, triggerAsyncId, resource) {
    if (process.domain !== null && process.domain !== undefined) {
      // If this operation is created while in a domain, let's mark it
      pairing.set(asyncId, process.domain[kWeak]);
      Object.defineProperty(resource, 'domain', {
        configurable: true,
        enumerable: false,
        value: process.domain,
        writable: true
      });
    }
  },
  before(asyncId) {
    const current = pairing.get(asyncId);
    if (current !== undefined) { // Enter domain for this cb
      // We will get the domain through current.get(), because the resource
      // object's .domain property makes sure it is not garbage collected.
      // However, we do need to make the reference to the domain non-weak,
      // so that it cannot be garbage collected before the after() hook.
      current.incRef();
      current.get().enter();
    }
  },
  after(asyncId) {
    const current = pairing.get(asyncId);
    if (current !== undefined) { // Exit domain for this cb
      const domain = current.get();
      current.decRef();
      domain.exit();
    }
  },
  destroy(asyncId) {
    pairing.delete(asyncId); // cleaning up
// When domains are in use, they claim full ownership of the
// uncaught exception capture callback.
if (process.hasUncaughtExceptionCaptureCallback()) {
  throw new ERR_DOMAIN_CALLBACK_NOT_AVAILABLE();
// Get the stack trace at the point where `domain` was required.
// eslint-disable-next-line no-restricted-syntax
const domainRequireStack = new Error('require(`domain`) at this point').stack;
const { setUncaughtExceptionCaptureCallback } = process;
process.setUncaughtExceptionCaptureCallback = function(fn) {
  const err = new ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE();
  err.stack = err.stack + '\n' + '-'.repeat(40) + '\n' + domainRequireStack;
  throw err;
let sendMakeCallbackDeprecation = false;
function emitMakeCallbackDeprecation() {
  if (!sendMakeCallbackDeprecation) {
    process.emitWarning(
      'Using a domain property in MakeCallback is deprecated. Use the ' +
      'async_context variant of MakeCallback or the AsyncResource class ' +
      'instead.', 'DeprecationWarning', 'DEP0097');
    sendMakeCallbackDeprecation = true;
function topLevelDomainCallback(cb, ...args) {
  const domain = this.domain;
  if (exports.active && domain)
    emitMakeCallbackDeprecation();
  if (domain)
    domain.enter();
  const ret = Reflect.apply(cb, this, args);
  if (domain)
    domain.exit();
  return ret;
// It's possible to enter one domain while already inside
// another one. The stack is each entered domain.
const stack = [];
exports._stack = stack;
internalBinding('domain').enable(topLevelDomainCallback);
function updateExceptionCapture() {
  if (stack.every((domain) => domain.listenerCount('error') === 0)) {
    setUncaughtExceptionCaptureCallback(null);
  } else {
    setUncaughtExceptionCaptureCallback(null);
    setUncaughtExceptionCaptureCallback((er) => {
      return process.domain._errorHandler(er);
    });
process.on('newListener', (name, listener) => {
  if (name === 'uncaughtException' &&
      listener !== domainUncaughtExceptionClear) {
    // Make sure the first listener for `uncaughtException` always clears
    // the domain stack.
    process.removeListener(name, domainUncaughtExceptionClear);
    process.prependListener(name, domainUncaughtExceptionClear);
process.on('removeListener', (name, listener) => {
  if (name === 'uncaughtException' &&
      listener !== domainUncaughtExceptionClear) {
    // If the domain listener would be the only remaining one, remove it.
    const listeners = process.listeners('uncaughtException');
    if (listeners.length === 1 && listeners[0] === domainUncaughtExceptionClear)
      process.removeListener(name, domainUncaughtExceptionClear);
function domainUncaughtExceptionClear() {
  stack.length = 0;
  exports.active = process.domain = null;
  updateExceptionCapture();
class Domain extends EventEmitter {
  constructor() {
    super();
    this.members = [];
    this[kWeak] = new WeakReference(this);
    asyncHook.enable();
    this.on('removeListener', updateExceptionCapture);
    this.on('newListener', updateExceptionCapture);
exports.Domain = Domain;
exports.create = exports.createDomain = function createDomain() {
  return new Domain();
// The active domain is always the one that we're currently in.
exports.active = null;
Domain.prototype.members = undefined;
// Called by process._fatalException in case an error was thrown.
Domain.prototype._errorHandler = function(er) {
  var caught = false;
  if (!util.isPrimitive(er)) {
    Object.defineProperty(er, 'domain', {
      configurable: true,
      enumerable: false,
      value: this,
      writable: true
    });
    er.domainThrown = true;
  // The top-level domain-handler is handled separately.
  //
  // The reason is that if V8 was passed a command line option
  // asking it to abort on an uncaught exception (currently
  // "--abort-on-uncaught-exception"), we want an uncaught exception
  // in the top-level domain error handler to make the
  // process abort. Using try/catch here would always make V8 think
  // that these exceptions are caught, and thus would prevent it from
  // aborting in these cases.
  if (stack.length === 1) {
    // If there's no error handler, do not emit an 'error' event
    // as this would throw an error, make the process exit, and thus
    // prevent the process 'uncaughtException' event from being emitted
    // if a listener is set.
    if (EventEmitter.listenerCount(this, 'error') > 0) {
      // Clear the uncaughtExceptionCaptureCallback so that we know that, even
      // if technically the top-level domain is still active, it would
      // be ok to abort on an uncaught exception at this point
      setUncaughtExceptionCaptureCallback(null);
      try {
        caught = this.emit('error', er);
      } finally {
        updateExceptionCapture();
      }
    }
  } else {
    // Wrap this in a try/catch so we don't get infinite throwing
    try {
      // One of three things will happen here.
      //
      // 1. There is a handler, caught = true
      // 2. There is no handler, caught = false
      // 3. It throws, caught = false
      //
      // If caught is false after this, then there's no need to exit()
      // the domain, because we're going to crash the process anyway.
      caught = this.emit('error', er);
    } catch (er2) {
      // The domain error handler threw!  oh no!
      // See if another domain can catch THIS error,
      // or else crash on the original one.
      // If the user already exited it, then don't double-exit.
      if (this === exports.active) {
        stack.pop();
      }
      updateExceptionCapture();
      if (stack.length) {
        exports.active = process.domain = stack[stack.length - 1];
        caught = process.domain._errorHandler(er2);
      } else {
        // Pass on to the next exception handler.
        throw er2;
      }
    }
  // Exit all domains on the stack.  Uncaught exceptions end the
  // current tick and no domains should be left on the stack
  // between ticks.
  domainUncaughtExceptionClear();
  return caught;
Domain.prototype.enter = function() {
  // Note that this might be a no-op, but we still need
  // to push it onto the stack so that we can pop it later.
  exports.active = process.domain = this;
  stack.push(this);
  updateExceptionCapture();
Domain.prototype.exit = function() {
  // Don't do anything if this domain is not on the stack.
  const index = stack.lastIndexOf(this);
  if (index === -1) return;
  // Exit all domains until this one.
  stack.splice(index);
  exports.active = stack[stack.length - 1];
  process.domain = exports.active;
  updateExceptionCapture();
// note: this works for timers as well.
Domain.prototype.add = function(ee) {
  // If the domain is already added, then nothing left to do.
  if (ee.domain === this)
    return;
  // Has a domain already - remove it first.
  if (ee.domain)
    ee.domain.remove(ee);
  // Check for circular Domain->Domain links.
  // This causes bad insanity!
  //
  // For example:
  // var d = domain.create();
  // var e = domain.create();
  // d.add(e);
  // e.add(d);
  // e.emit('error', er); // RangeError, stack overflow!
  if (this.domain && (ee instanceof Domain)) {
    for (var d = this.domain; d; d = d.domain) {
      if (ee === d) return;
    }
  Object.defineProperty(ee, 'domain', {
    configurable: true,
    enumerable: false,
    value: this,
    writable: true
  });
  this.members.push(ee);
Domain.prototype.remove = function(ee) {
  ee.domain = null;
  const index = this.members.indexOf(ee);
  if (index !== -1)
    this.members.splice(index, 1);
Domain.prototype.run = function(fn) {
  var ret;
  this.enter();
  if (arguments.length >= 2) {
    var len = arguments.length;
    var args = new Array(len - 1);
    for (var i = 1; i < len; i++)
      args[i - 1] = arguments[i];
    ret = fn.apply(this, args);
  } else {
    ret = fn.call(this);
  this.exit();
  return ret;
function intercepted(_this, self, cb, fnargs) {
  if (fnargs[0] && fnargs[0] instanceof Error) {
    var er = fnargs[0];
    er.domainBound = cb;
    er.domainThrown = false;
    Object.defineProperty(er, 'domain', {
      configurable: true,
      enumerable: false,
      value: self,
      writable: true
    });
    self.emit('error', er);
    return;
  const args = [];
  var i, ret;
  self.enter();
  if (fnargs.length > 1) {
    for (i = 1; i < fnargs.length; i++)
      args.push(fnargs[i]);
    ret = cb.apply(_this, args);
  } else {
    ret = cb.call(_this);
  self.exit();
  return ret;
Domain.prototype.intercept = function(cb) {
  const self = this;
  function runIntercepted() {
    return intercepted(this, self, cb, arguments);
  return runIntercepted;
function bound(_this, self, cb, fnargs) {
  var ret;
  self.enter();
  if (fnargs.length > 0)
    ret = cb.apply(_this, fnargs);
  else
    ret = cb.call(_this);
  self.exit();
  return ret;
Domain.prototype.bind = function(cb) {
  const self = this;
  function runBound() {
    return bound(this, self, cb, arguments);
  Object.defineProperty(runBound, 'domain', {
    configurable: true,
    enumerable: false,
    value: this,
    writable: true
  });
  return runBound;
// Override EventEmitter methods to make it domain-aware.
EventEmitter.usingDomains = true;
const eventInit = EventEmitter.init;
EventEmitter.init = function() {
  Object.defineProperty(this, 'domain', {
    configurable: true,
    enumerable: false,
    value: null,
    writable: true
  });
  if (exports.active && !(this instanceof exports.Domain)) {
    this.domain = exports.active;
  return eventInit.call(this);
const eventEmit = EventEmitter.prototype.emit;
EventEmitter.prototype.emit = function(...args) {
  const domain = this.domain;
  const type = args[0];
  const shouldEmitError = type === 'error' &&
                          this.listenerCount(type) > 0;
  // Just call original `emit` if current EE instance has `error`
  // handler, there's no active domain or this is process
  if (shouldEmitError || domain === null || domain === undefined ||
      this === process) {
    return Reflect.apply(eventEmit, this, args);
  if (type === 'error') {
    const er = args.length > 1 && args[1] ?
      args[1] : new ERR_UNHANDLED_ERROR();
    if (typeof er === 'object') {
      er.domainEmitter = this;
      Object.defineProperty(er, 'domain', {
        configurable: true,
        enumerable: false,
        value: domain,
        writable: true
      });
      er.domainThrown = false;
    }
    domain.emit('error', er);
    return false;
  domain.enter();
  const ret = Reflect.apply(eventEmit, this, args);
  domain.exit();
  return ret;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Math, Object, Reflect } = primordials;
var spliceOne;
const {
  kEnhanceStackBeforeInspector,
  codes
} = require('internal/errors');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_OUT_OF_RANGE,
  ERR_UNHANDLED_ERROR
} = codes;
const {
  inspect
} = require('internal/util/inspect');
function EventEmitter() {
  EventEmitter.init.call(this);
module.exports = EventEmitter;
module.exports.once = once;
// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;
EventEmitter.usingDomains = false;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;
// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;
function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('listener', 'Function', listener);
Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || Number.isNaN(arg)) {
      throw new ERR_OUT_OF_RANGE('defaultMaxListeners',
                                 'a non-negative number',
                                 arg);
    }
    defaultMaxListeners = arg;
EventEmitter.init = function() {
  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  this._maxListeners = this._maxListeners || undefined;
// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {
    throw new ERR_OUT_OF_RANGE('n', 'a non-negative number', n);
  this._maxListeners = n;
  return this;
function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
// Returns the length and line number of the first sequence of `a` that fully
// appears in `b` with a length of at least 4.
function identicalSequenceRange(a, b) {
  for (var i = 0; i < a.length - 3; i++) {
    // Find the first entry of b that matches the current entry of a.
    const pos = b.indexOf(a[i]);
    if (pos !== -1) {
      const rest = b.length - pos;
      if (rest > 3) {
        let len = 1;
        const maxLen = Math.min(a.length - i, rest);
        // Count the number of consecutive entries.
        while (maxLen > len && a[i + len] === b[pos + len]) {
          len++;
        }
        if (len > 3) {
          return [len, i];
        }
      }
    }
  return [0, 0];
function enhanceStackTrace(err, own) {
  const sep = '\nEmitted \'error\' event at:\n';
  const errStack = err.stack.split('\n').slice(1);
  const ownStack = own.stack.split('\n').slice(1);
  const [ len, off ] = identicalSequenceRange(ownStack, errStack);
  if (len > 0) {
    ownStack.splice(off + 1, len - 2,
                    '    [... lines matching original stack trace ...]');
  return err.stack + sep + ownStack.join('\n');
EventEmitter.prototype.emit = function emit(type, ...args) {
  let doError = (type === 'error');
  const events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;
  // If there is no 'error' event listener then throw.
  if (doError) {
    let er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      try {
        const capture = {};
        // eslint-disable-next-line no-restricted-syntax
        Error.captureStackTrace(capture, EventEmitter.prototype.emit);
        Object.defineProperty(er, kEnhanceStackBeforeInspector, {
          value: enhanceStackTrace.bind(null, er, capture),
          configurable: true
        });
      } catch {}
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    let stringifiedEr;
    const { inspect } = require('internal/util/inspect');
    try {
      stringifiedEr = inspect(er);
    } catch {
      stringifiedEr = er;
    }
    // At least give some kind of context to the user
    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);
    err.context = er;
    throw err; // Unhandled 'error' event
  const handler = events[type];
  if (handler === undefined)
    return false;
  if (typeof handler === 'function') {
    Reflect.apply(handler, this, args);
  } else {
    const len = handler.length;
    const listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      Reflect.apply(listeners[i], this, args);
  return true;
function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);
      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }
    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      const w = new Error('Possible EventEmitter memory leak detected. ' +
                          `${existing.length} ${String(type)} listeners ` +
                          `added to ${inspect(target, { depth: -1 })}. Use ` +
                          'emitter.setMaxListeners() to increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      process.emitWarning(w);
    }
  return target;
EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
EventEmitter.prototype.on = EventEmitter.prototype.addListener;
EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };
function onceWrapper(...args) {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    return Reflect.apply(this.listener, this.target, args);
function _onceWrap(target, type, listener) {
  const state = { fired: false, wrapFn: undefined, target, type, listener };
  const wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };
// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      let originalListener;
      checkListener(listener);
      const events = this._events;
      if (events === undefined)
        return this;
      const list = events[type];
      if (list === undefined)
        return this;
      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        let position = -1;
        for (var i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }
        if (position < 0)
          return this;
        if (position === 0)
          list.shift();
        else {
          if (spliceOne === undefined)
            spliceOne = require('internal/util').spliceOne;
          spliceOne(list, position);
        }
        if (list.length === 1)
          events[type] = list[0];
        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }
      return this;
    };
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      const events = this._events;
      if (events === undefined)
        return this;
      // Not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }
      // Emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        for (const key of Object.keys(events)) {
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }
      const listeners = events[type];
      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (var i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }
      return this;
    };
function _listeners(target, type, unwrap) {
  const events = target._events;
  if (events === undefined)
    return [];
  const evlistener = events[type];
  if (evlistener === undefined)
    return [];
  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  const events = this._events;
  if (events !== undefined) {
    const evlistener = events[type];
    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  return 0;
EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
function arrayClone(arr, n) {
  const copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
function unwrapListeners(arr) {
  const ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  return ret;
function once(emitter, name) {
  return new Promise((resolve, reject) => {
    const eventListener = (...args) => {
      if (errorListener !== undefined) {
        emitter.removeListener('error', errorListener);
      }
      resolve(args);
    };
    let errorListener;
    // Adding an error listener is not optional because
    // if an error is thrown on an event emitter we cannot
    // guarantee that the actual event we are waiting will
    // be fired. The result could be a silent way to create
    // memory or file descriptor leaks, which is something
    // we should avoid.
    if (name !== 'error') {
      errorListener = (err) => {
        emitter.removeListener(name, eventListener);
        reject(err);
      };
      emitter.once('error', errorListener);
    }
    emitter.once(name, eventListener);
  });
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// Maintainers, keep in mind that ES1-style octal literals (`0666`) are not
// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).
'use strict';
const { Math, Object } = primordials;
const { fs: constants } = internalBinding('constants');
const {
  S_IFIFO,
  S_IFLNK,
  S_IFMT,
  S_IFREG,
  S_IFSOCK,
  F_OK,
  R_OK,
  W_OK,
  X_OK,
  O_WRONLY,
  O_SYMLINK
} = constants;
const pathModule = require('path');
const { isArrayBufferView } = require('internal/util/types');
const binding = internalBinding('fs');
const { Buffer, kMaxLength } = require('buffer');
const {
  codes: {
    ERR_FS_FILE_TOO_LARGE,
    ERR_INVALID_ARG_VALUE,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_CALLBACK
  },
  uvException
} = require('internal/errors');
const { FSReqCallback, statValues } = binding;
const { toPathIfFileURL } = require('internal/url');
const internalUtil = require('internal/util');
const {
  copyObject,
  Dirent,
  getDirents,
  getOptions,
  getValidatedPath,
  nullCheck,
  preprocessSymlinkDestination,
  Stats,
  getStatsFromBinding,
  realpathCacheKey,
  stringToFlags,
  stringToSymlinkType,
  toUnixTimestamp,
  validateOffsetLengthRead,
  validateOffsetLengthWrite,
  validatePath,
  warnOnNonPortableTemplate
} = require('internal/fs/utils');
const {
  CHAR_FORWARD_SLASH,
  CHAR_BACKWARD_SLASH,
} = require('internal/constants');
const {
  isUint32,
  parseMode,
  validateBuffer,
  validateInteger,
  validateInt32,
  validateUint32
} = require('internal/validators');
let truncateWarn = true;
let fs;
// Lazy loaded
let promises = null;
let watchers;
let ReadFileContext;
let ReadStream;
let WriteStream;
// These have to be separate because of how graceful-fs happens to do it's
// monkeypatching.
let FileReadStream;
let FileWriteStream;
const isWindows = process.platform === 'win32';
function showTruncateDeprecation() {
  if (truncateWarn) {
    process.emitWarning(
      'Using fs.truncate with a file descriptor is deprecated. Please use ' +
      'fs.ftruncate with a file descriptor instead.',
      'DeprecationWarning', 'DEP0081');
    truncateWarn = false;
function handleErrorFromBinding(ctx) {
  if (ctx.errno !== undefined) {  // libuv error numbers
    const err = uvException(ctx);
    // eslint-disable-next-line no-restricted-syntax
    Error.captureStackTrace(err, handleErrorFromBinding);
    throw err;
  if (ctx.error !== undefined) {  // Errors created in C++ land.
    // TODO(joyeecheung): currently, ctx.error are encoding errors
    // usually caused by memory problems. We need to figure out proper error
    // code(s) for this.
    // eslint-disable-next-line no-restricted-syntax
    Error.captureStackTrace(ctx.error, handleErrorFromBinding);
    throw ctx.error;
function maybeCallback(cb) {
  if (typeof cb === 'function')
    return cb;
  throw new ERR_INVALID_CALLBACK(cb);
// Ensure that callbacks run in the global context. Only use this function
// for callbacks that are passed to the binding layer, callbacks that are
// invoked from JS already run in the proper scope.
function makeCallback(cb) {
  if (typeof cb !== 'function') {
    throw new ERR_INVALID_CALLBACK(cb);
  return (...args) => cb(...args);
// Special case of `makeCallback()` that is specific to async `*stat()` calls as
// an optimization, since the data passed back to the callback needs to be
// transformed anyway.
function makeStatsCallback(cb) {
  if (typeof cb !== 'function') {
    throw new ERR_INVALID_CALLBACK(cb);
  return (err, stats) => {
    if (err) return cb(err);
    cb(err, getStatsFromBinding(stats));
  };
const isFd = isUint32;
function isFileType(stats, fileType) {
  // Use stats array directly to avoid creating an fs.Stats instance just for
  // our internal use.
  return (stats[1/* mode */] & S_IFMT) === fileType;
function access(path, mode, callback) {
  if (typeof mode === 'function') {
    callback = mode;
    mode = F_OK;
  path = getValidatedPath(path);
  mode = mode | 0;
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.access(pathModule.toNamespacedPath(path), mode, req);
function accessSync(path, mode) {
  path = getValidatedPath(path);
  if (mode === undefined)
    mode = F_OK;
  else
    mode = mode | 0;
  const ctx = { path };
  binding.access(pathModule.toNamespacedPath(path), mode, undefined, ctx);
  handleErrorFromBinding(ctx);
function exists(path, callback) {
  maybeCallback(callback);
  function suppressedCallback(err) {
    callback(err ? false : true);
  try {
    fs.access(path, F_OK, suppressedCallback);
  } catch {
    return callback(false);
Object.defineProperty(exists, internalUtil.promisify.custom, {
  value: (path) => {
    return new Promise((resolve) => fs.exists(path, resolve));
// fs.existsSync never throws, it only returns true or false.
// Since fs.existsSync never throws, users have established
// the expectation that passing invalid arguments to it, even like
// fs.existsSync(), would only get a false in return, so we cannot signal
// validation errors to users properly out of compatibility concerns.
// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior
function existsSync(path) {
  try {
    path = getValidatedPath(path);
  } catch {
    return false;
  const ctx = { path };
  binding.access(pathModule.toNamespacedPath(path), F_OK, undefined, ctx);
  return ctx.errno === undefined;
function readFileAfterOpen(err, fd) {
  const context = this.context;
  if (err) {
    context.callback(err);
    return;
  context.fd = fd;
  const req = new FSReqCallback();
  req.oncomplete = readFileAfterStat;
  req.context = context;
  binding.fstat(fd, false, req);
function readFileAfterStat(err, stats) {
  const context = this.context;
  if (err)
    return context.close(err);
  const size = context.size = isFileType(stats, S_IFREG) ? stats[8] : 0;
  if (size > kMaxLength) {
    err = new ERR_FS_FILE_TOO_LARGE(size);
    return context.close(err);
  try {
    if (size === 0) {
      context.buffers = [];
    } else {
      context.buffer = Buffer.allocUnsafeSlow(size);
    }
  } catch (err) {
    return context.close(err);
  context.read();
function readFile(path, options, callback) {
  callback = maybeCallback(callback || options);
  options = getOptions(options, { flag: 'r' });
  if (!ReadFileContext)
    ReadFileContext = require('internal/fs/read_file_context');
  const context = new ReadFileContext(callback, options.encoding);
  context.isUserFd = isFd(path); // File descriptor ownership
  const req = new FSReqCallback();
  req.context = context;
  req.oncomplete = readFileAfterOpen;
  if (context.isUserFd) {
    process.nextTick(function tick() {
      req.oncomplete(null, path);
    });
    return;
  path = getValidatedPath(path);
  binding.open(pathModule.toNamespacedPath(path),
               stringToFlags(options.flag || 'r'),
               0o666,
               req);
function tryStatSync(fd, isUserFd) {
  const ctx = {};
  const stats = binding.fstat(fd, false, undefined, ctx);
  if (ctx.errno !== undefined && !isUserFd) {
    fs.closeSync(fd);
    throw uvException(ctx);
  return stats;
function tryCreateBuffer(size, fd, isUserFd) {
  let threw = true;
  let buffer;
  try {
    if (size > kMaxLength) {
      throw new ERR_FS_FILE_TOO_LARGE(size);
    }
    buffer = Buffer.allocUnsafe(size);
    threw = false;
  } finally {
    if (threw && !isUserFd) fs.closeSync(fd);
  return buffer;
function tryReadSync(fd, isUserFd, buffer, pos, len) {
  let threw = true;
  let bytesRead;
  try {
    bytesRead = fs.readSync(fd, buffer, pos, len);
    threw = false;
  } finally {
    if (threw && !isUserFd) fs.closeSync(fd);
  return bytesRead;
function readFileSync(path, options) {
  options = getOptions(options, { flag: 'r' });
  const isUserFd = isFd(path); // File descriptor ownership
  const fd = isUserFd ? path : fs.openSync(path, options.flag, 0o666);
  const stats = tryStatSync(fd, isUserFd);
  const size = isFileType(stats, S_IFREG) ? stats[8] : 0;
  let pos = 0;
  let buffer; // Single buffer with file data
  let buffers; // List for when size is unknown
  if (size === 0) {
    buffers = [];
  } else {
    buffer = tryCreateBuffer(size, fd, isUserFd);
  let bytesRead;
  if (size !== 0) {
    do {
      bytesRead = tryReadSync(fd, isUserFd, buffer, pos, size - pos);
      pos += bytesRead;
    } while (bytesRead !== 0 && pos < size);
  } else {
    do {
      // The kernel lies about many files.
      // Go ahead and try to read some bytes.
      buffer = Buffer.allocUnsafe(8192);
      bytesRead = tryReadSync(fd, isUserFd, buffer, 0, 8192);
      if (bytesRead !== 0) {
        buffers.push(buffer.slice(0, bytesRead));
      }
      pos += bytesRead;
    } while (bytesRead !== 0);
  if (!isUserFd)
    fs.closeSync(fd);
  if (size === 0) {
    // Data was collected into the buffers list.
    buffer = Buffer.concat(buffers, pos);
  } else if (pos < size) {
    buffer = buffer.slice(0, pos);
  if (options.encoding) buffer = buffer.toString(options.encoding);
  return buffer;
function close(fd, callback) {
  validateUint32(fd, 'fd');
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.close(fd, req);
function closeSync(fd) {
  validateUint32(fd, 'fd');
  const ctx = {};
  binding.close(fd, undefined, ctx);
  handleErrorFromBinding(ctx);
function open(path, flags, mode, callback) {
  path = getValidatedPath(path);
  if (arguments.length < 3) {
    callback = flags;
    flags = 'r';
    mode = 0o666;
  } else if (typeof mode === 'function') {
    callback = mode;
    mode = 0o666;
  const flagsNumber = stringToFlags(flags);
  if (arguments.length >= 4) {
    mode = parseMode(mode, 'mode', 0o666);
  callback = makeCallback(callback);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.open(pathModule.toNamespacedPath(path),
               flagsNumber,
               mode,
               req);
function openSync(path, flags, mode) {
  path = getValidatedPath(path);
  const flagsNumber = stringToFlags(flags || 'r');
  mode = parseMode(mode, 'mode', 0o666);
  const ctx = { path };
  const result = binding.open(pathModule.toNamespacedPath(path),
                              flagsNumber, mode,
                              undefined, ctx);
  handleErrorFromBinding(ctx);
  return result;
function read(fd, buffer, offset, length, position, callback) {
  validateUint32(fd, 'fd');
  validateBuffer(buffer);
  callback = maybeCallback(callback);
  offset |= 0;
  length |= 0;
  if (length === 0) {
    return process.nextTick(function tick() {
      callback(null, 0, buffer);
    });
  if (buffer.byteLength === 0) {
    throw new ERR_INVALID_ARG_VALUE('buffer', buffer,
                                    'is empty and cannot be written');
  validateOffsetLengthRead(offset, length, buffer.byteLength);
  if (!Number.isSafeInteger(position))
    position = -1;
  function wrapper(err, bytesRead) {
    // Retain a reference to buffer so that it can't be GC'ed too soon.
    callback(err, bytesRead || 0, buffer);
  const req = new FSReqCallback();
  req.oncomplete = wrapper;
  binding.read(fd, buffer, offset, length, position, req);
Object.defineProperty(read, internalUtil.customPromisifyArgs,
                      { value: ['bytesRead', 'buffer'], enumerable: false });
function readSync(fd, buffer, offset, length, position) {
  validateUint32(fd, 'fd');
  validateBuffer(buffer);
  offset |= 0;
  length |= 0;
  if (length === 0) {
    return 0;
  if (buffer.byteLength === 0) {
    throw new ERR_INVALID_ARG_VALUE('buffer', buffer,
                                    'is empty and cannot be written');
  validateOffsetLengthRead(offset, length, buffer.byteLength);
  if (!Number.isSafeInteger(position))
    position = -1;
  const ctx = {};
  const result = binding.read(fd, buffer, offset, length, position,
                              undefined, ctx);
  handleErrorFromBinding(ctx);
  return result;
// usage:
//  fs.write(fd, buffer[, offset[, length[, position]]], callback);
// OR
//  fs.write(fd, string[, position[, encoding]], callback);
function write(fd, buffer, offset, length, position, callback) {
  function wrapper(err, written) {
    // Retain a reference to buffer so that it can't be GC'ed too soon.
    callback(err, written || 0, buffer);
  validateUint32(fd, 'fd');
  const req = new FSReqCallback();
  req.oncomplete = wrapper;
  if (isArrayBufferView(buffer)) {
    callback = maybeCallback(callback || position || length || offset);
    if (typeof offset !== 'number')
      offset = 0;
    if (typeof length !== 'number')
      length = buffer.length - offset;
    if (typeof position !== 'number')
      position = null;
    validateOffsetLengthWrite(offset, length, buffer.byteLength);
    return binding.writeBuffer(fd, buffer, offset, length, position, req);
  if (typeof buffer !== 'string')
    buffer += '';
  if (typeof position !== 'function') {
    if (typeof offset === 'function') {
      position = offset;
      offset = null;
    } else {
      position = length;
    }
    length = 'utf8';
  callback = maybeCallback(position);
  return binding.writeString(fd, buffer, offset, length, req);
Object.defineProperty(write, internalUtil.customPromisifyArgs,
                      { value: ['bytesWritten', 'buffer'], enumerable: false });
// usage:
//  fs.writeSync(fd, buffer[, offset[, length[, position]]]);
// OR
//  fs.writeSync(fd, string[, position[, encoding]]);
function writeSync(fd, buffer, offset, length, position) {
  validateUint32(fd, 'fd');
  const ctx = {};
  let result;
  if (isArrayBufferView(buffer)) {
    if (position === undefined)
      position = null;
    if (typeof offset !== 'number')
      offset = 0;
    if (typeof length !== 'number')
      length = buffer.byteLength - offset;
    validateOffsetLengthWrite(offset, length, buffer.byteLength);
    result = binding.writeBuffer(fd, buffer, offset, length, position,
                                 undefined, ctx);
  } else {
    if (typeof buffer !== 'string')
      buffer += '';
    if (offset === undefined)
      offset = null;
    result = binding.writeString(fd, buffer, offset, length,
                                 undefined, ctx);
  handleErrorFromBinding(ctx);
  return result;
function rename(oldPath, newPath, callback) {
  callback = makeCallback(callback);
  oldPath = getValidatedPath(oldPath, 'oldPath');
  newPath = getValidatedPath(newPath, 'newPath');
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.rename(pathModule.toNamespacedPath(oldPath),
                 pathModule.toNamespacedPath(newPath),
                 req);
function renameSync(oldPath, newPath) {
  oldPath = getValidatedPath(oldPath, 'oldPath');
  newPath = getValidatedPath(newPath, 'newPath');
  const ctx = { path: oldPath, dest: newPath };
  binding.rename(pathModule.toNamespacedPath(oldPath),
                 pathModule.toNamespacedPath(newPath), undefined, ctx);
  handleErrorFromBinding(ctx);
function truncate(path, len, callback) {
  if (typeof path === 'number') {
    showTruncateDeprecation();
    return fs.ftruncate(path, len, callback);
  if (typeof len === 'function') {
    callback = len;
    len = 0;
  } else if (len === undefined) {
    len = 0;
  validateInteger(len, 'len');
  callback = maybeCallback(callback);
  fs.open(path, 'r+', (er, fd) => {
    if (er) return callback(er);
    const req = new FSReqCallback();
    req.oncomplete = function oncomplete(er) {
      fs.close(fd, (er2) => {
        callback(er || er2);
      });
    };
    binding.ftruncate(fd, len, req);
  });
function truncateSync(path, len) {
  if (typeof path === 'number') {
    // legacy
    showTruncateDeprecation();
    return fs.ftruncateSync(path, len);
  if (len === undefined) {
    len = 0;
  // Allow error to be thrown, but still close fd.
  const fd = fs.openSync(path, 'r+');
  let ret;
  try {
    ret = fs.ftruncateSync(fd, len);
  } finally {
    fs.closeSync(fd);
  return ret;
function ftruncate(fd, len = 0, callback) {
  if (typeof len === 'function') {
    callback = len;
    len = 0;
  validateUint32(fd, 'fd');
  validateInteger(len, 'len');
  len = Math.max(0, len);
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.ftruncate(fd, len, req);
function ftruncateSync(fd, len = 0) {
  validateUint32(fd, 'fd');
  validateInteger(len, 'len');
  len = Math.max(0, len);
  const ctx = {};
  binding.ftruncate(fd, len, undefined, ctx);
  handleErrorFromBinding(ctx);
function rmdir(path, callback) {
  callback = makeCallback(callback);
  path = getValidatedPath(path);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.rmdir(pathModule.toNamespacedPath(path), req);
function rmdirSync(path) {
  path = getValidatedPath(path);
  const ctx = { path };
  binding.rmdir(pathModule.toNamespacedPath(path), undefined, ctx);
  handleErrorFromBinding(ctx);
function fdatasync(fd, callback) {
  validateUint32(fd, 'fd');
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.fdatasync(fd, req);
function fdatasyncSync(fd) {
  validateUint32(fd, 'fd');
  const ctx = {};
  binding.fdatasync(fd, undefined, ctx);
  handleErrorFromBinding(ctx);
function fsync(fd, callback) {
  validateUint32(fd, 'fd');
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.fsync(fd, req);
function fsyncSync(fd) {
  validateUint32(fd, 'fd');
  const ctx = {};
  binding.fsync(fd, undefined, ctx);
  handleErrorFromBinding(ctx);
function mkdir(path, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = {};
  } else if (typeof options === 'number' || typeof options === 'string') {
    options = { mode: options };
  const {
    recursive = false,
    mode = 0o777
  } = options || {};
  callback = makeCallback(callback);
  path = getValidatedPath(path);
  if (typeof recursive !== 'boolean')
    throw new ERR_INVALID_ARG_TYPE('recursive', 'boolean', recursive);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.mkdir(pathModule.toNamespacedPath(path),
                parseMode(mode, 'mode', 0o777), recursive, req);
function mkdirSync(path, options) {
  if (typeof options === 'number' || typeof options === 'string') {
    options = { mode: options };
  const {
    recursive = false,
    mode = 0o777
  } = options || {};
  path = getValidatedPath(path);
  if (typeof recursive !== 'boolean')
    throw new ERR_INVALID_ARG_TYPE('recursive', 'boolean', recursive);
  const ctx = { path };
  binding.mkdir(pathModule.toNamespacedPath(path),
                parseMode(mode, 'mode', 0o777), recursive, undefined,
                ctx);
  handleErrorFromBinding(ctx);
function readdir(path, options, callback) {
  callback = makeCallback(typeof options === 'function' ? options : callback);
  options = getOptions(options, {});
  path = getValidatedPath(path);
  const req = new FSReqCallback();
  if (!options.withFileTypes) {
    req.oncomplete = callback;
  } else {
    req.oncomplete = (err, result) => {
      if (err) {
        callback(err);
        return;
      }
      getDirents(path, result, callback);
    };
  binding.readdir(pathModule.toNamespacedPath(path), options.encoding,
                  !!options.withFileTypes, req);
function readdirSync(path, options) {
  options = getOptions(options, {});
  path = getValidatedPath(path);
  const ctx = { path };
  const result = binding.readdir(pathModule.toNamespacedPath(path),
                                 options.encoding, !!options.withFileTypes,
                                 undefined, ctx);
  handleErrorFromBinding(ctx);
  return options.withFileTypes ? getDirents(path, result) : result;
function fstat(fd, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = {};
  validateUint32(fd, 'fd');
  const req = new FSReqCallback(options.bigint);
  req.oncomplete = makeStatsCallback(callback);
  binding.fstat(fd, options.bigint, req);
function lstat(path, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = {};
  callback = makeStatsCallback(callback);
  path = getValidatedPath(path);
  const req = new FSReqCallback(options.bigint);
  req.oncomplete = callback;
  binding.lstat(pathModule.toNamespacedPath(path), options.bigint, req);
function stat(path, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = {};
  callback = makeStatsCallback(callback);
  path = getValidatedPath(path);
  const req = new FSReqCallback(options.bigint);
  req.oncomplete = callback;
  binding.stat(pathModule.toNamespacedPath(path), options.bigint, req);
function fstatSync(fd, options = {}) {
  validateUint32(fd, 'fd');
  const ctx = { fd };
  const stats = binding.fstat(fd, options.bigint, undefined, ctx);
  handleErrorFromBinding(ctx);
  return getStatsFromBinding(stats);
function lstatSync(path, options = {}) {
  path = getValidatedPath(path);
  const ctx = { path };
  const stats = binding.lstat(pathModule.toNamespacedPath(path),
                              options.bigint, undefined, ctx);
  handleErrorFromBinding(ctx);
  return getStatsFromBinding(stats);
function statSync(path, options = {}) {
  path = getValidatedPath(path);
  const ctx = { path };
  const stats = binding.stat(pathModule.toNamespacedPath(path),
                             options.bigint, undefined, ctx);
  handleErrorFromBinding(ctx);
  return getStatsFromBinding(stats);
function readlink(path, options, callback) {
  callback = makeCallback(typeof options === 'function' ? options : callback);
  options = getOptions(options, {});
  path = getValidatedPath(path, 'oldPath');
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.readlink(pathModule.toNamespacedPath(path), options.encoding, req);
function readlinkSync(path, options) {
  options = getOptions(options, {});
  path = getValidatedPath(path, 'oldPath');
  const ctx = { path };
  const result = binding.readlink(pathModule.toNamespacedPath(path),
                                  options.encoding, undefined, ctx);
  handleErrorFromBinding(ctx);
  return result;
function symlink(target, path, type_, callback_) {
  const type = (typeof type_ === 'string' ? type_ : null);
  const callback = makeCallback(arguments[arguments.length - 1]);
  target = getValidatedPath(target, 'target');
  path = getValidatedPath(path);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  if (isWindows && type === null) {
    let absoluteTarget;
    try {
      // Symlinks targets can be relative to the newly created path.
      // Calculate absolute file name of the symlink target, and check
      // if it is a directory. Ignore resolve error to keep symlink
      // errors consistent between platforms if invalid path is
      // provided.
      absoluteTarget = pathModule.resolve(path, '..', target);
    } catch { }
    if (absoluteTarget !== undefined) {
      stat(absoluteTarget, (err, stat) => {
        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';
        const resolvedFlags = stringToSymlinkType(resolvedType);
        binding.symlink(preprocessSymlinkDestination(target,
                                                     resolvedType,
                                                     path),
                        pathModule.toNamespacedPath(path), resolvedFlags, req);
      });
      return;
    }
  const flags = stringToSymlinkType(type);
  binding.symlink(preprocessSymlinkDestination(target, type, path),
                  pathModule.toNamespacedPath(path), flags, req);
function symlinkSync(target, path, type) {
  type = (typeof type === 'string' ? type : null);
  if (isWindows && type === null) {
    try {
      const absoluteTarget = pathModule.resolve(path, '..', target);
      if (statSync(absoluteTarget).isDirectory()) {
        type = 'dir';
      }
    } catch { }
  target = getValidatedPath(target, 'target');
  path = getValidatedPath(path);
  const flags = stringToSymlinkType(type);
  const ctx = { path: target, dest: path };
  binding.symlink(preprocessSymlinkDestination(target, type, path),
                  pathModule.toNamespacedPath(path), flags, undefined, ctx);
  handleErrorFromBinding(ctx);
function link(existingPath, newPath, callback) {
  callback = makeCallback(callback);
  existingPath = getValidatedPath(existingPath, 'existingPath');
  newPath = getValidatedPath(newPath, 'newPath');
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.link(pathModule.toNamespacedPath(existingPath),
               pathModule.toNamespacedPath(newPath),
               req);
function linkSync(existingPath, newPath) {
  existingPath = getValidatedPath(existingPath, 'existingPath');
  newPath = getValidatedPath(newPath, 'newPath');
  const ctx = { path: existingPath, dest: newPath };
  const result = binding.link(pathModule.toNamespacedPath(existingPath),
                              pathModule.toNamespacedPath(newPath),
                              undefined, ctx);
  handleErrorFromBinding(ctx);
  return result;
function unlink(path, callback) {
  callback = makeCallback(callback);
  path = getValidatedPath(path);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.unlink(pathModule.toNamespacedPath(path), req);
function unlinkSync(path) {
  path = getValidatedPath(path);
  const ctx = { path };
  binding.unlink(pathModule.toNamespacedPath(path), undefined, ctx);
  handleErrorFromBinding(ctx);
function fchmod(fd, mode, callback) {
  validateInt32(fd, 'fd', 0);
  mode = parseMode(mode, 'mode');
  callback = makeCallback(callback);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.fchmod(fd, mode, req);
function fchmodSync(fd, mode) {
  validateInt32(fd, 'fd', 0);
  mode = parseMode(mode, 'mode');
  const ctx = {};
  binding.fchmod(fd, mode, undefined, ctx);
  handleErrorFromBinding(ctx);
function lchmod(path, mode, callback) {
  callback = maybeCallback(callback);
  fs.open(path, O_WRONLY | O_SYMLINK, (err, fd) => {
    if (err) {
      callback(err);
      return;
    }
    // Prefer to return the chmod error, if one occurs,
    // but still try to close, and report closing errors if they occur.
    fs.fchmod(fd, mode, (err) => {
      fs.close(fd, (err2) => {
        callback(err || err2);
      });
    });
  });
function lchmodSync(path, mode) {
  const fd = fs.openSync(path, O_WRONLY | O_SYMLINK);
  // Prefer to return the chmod error, if one occurs,
  // but still try to close, and report closing errors if they occur.
  let ret;
  try {
    ret = fs.fchmodSync(fd, mode);
  } finally {
    fs.closeSync(fd);
  return ret;
function chmod(path, mode, callback) {
  path = getValidatedPath(path);
  mode = parseMode(mode, 'mode');
  callback = makeCallback(callback);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.chmod(pathModule.toNamespacedPath(path), mode, req);
function chmodSync(path, mode) {
  path = getValidatedPath(path);
  mode = parseMode(mode, 'mode');
  const ctx = { path };
  binding.chmod(pathModule.toNamespacedPath(path), mode, undefined, ctx);
  handleErrorFromBinding(ctx);
function lchown(path, uid, gid, callback) {
  callback = makeCallback(callback);
  path = getValidatedPath(path);
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.lchown(pathModule.toNamespacedPath(path), uid, gid, req);
function lchownSync(path, uid, gid) {
  path = getValidatedPath(path);
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  const ctx = { path };
  binding.lchown(pathModule.toNamespacedPath(path), uid, gid, undefined, ctx);
  handleErrorFromBinding(ctx);
function fchown(fd, uid, gid, callback) {
  validateUint32(fd, 'fd');
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.fchown(fd, uid, gid, req);
function fchownSync(fd, uid, gid) {
  validateUint32(fd, 'fd');
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  const ctx = {};
  binding.fchown(fd, uid, gid, undefined, ctx);
  handleErrorFromBinding(ctx);
function chown(path, uid, gid, callback) {
  callback = makeCallback(callback);
  path = getValidatedPath(path);
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.chown(pathModule.toNamespacedPath(path), uid, gid, req);
function chownSync(path, uid, gid) {
  path = getValidatedPath(path);
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  const ctx = { path };
  binding.chown(pathModule.toNamespacedPath(path), uid, gid, undefined, ctx);
  handleErrorFromBinding(ctx);
function utimes(path, atime, mtime, callback) {
  callback = makeCallback(callback);
  path = getValidatedPath(path);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.utimes(pathModule.toNamespacedPath(path),
                 toUnixTimestamp(atime),
                 toUnixTimestamp(mtime),
                 req);
function utimesSync(path, atime, mtime) {
  path = getValidatedPath(path);
  const ctx = { path };
  binding.utimes(pathModule.toNamespacedPath(path),
                 toUnixTimestamp(atime), toUnixTimestamp(mtime),
                 undefined, ctx);
  handleErrorFromBinding(ctx);
function futimes(fd, atime, mtime, callback) {
  validateUint32(fd, 'fd');
  atime = toUnixTimestamp(atime, 'atime');
  mtime = toUnixTimestamp(mtime, 'mtime');
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.futimes(fd, atime, mtime, req);
function futimesSync(fd, atime, mtime) {
  validateUint32(fd, 'fd');
  atime = toUnixTimestamp(atime, 'atime');
  mtime = toUnixTimestamp(mtime, 'mtime');
  const ctx = {};
  binding.futimes(fd, atime, mtime, undefined, ctx);
  handleErrorFromBinding(ctx);
function writeAll(fd, isUserFd, buffer, offset, length, position, callback) {
  // write(fd, buffer, offset, length, position, callback)
  fs.write(fd, buffer, offset, length, position, (writeErr, written) => {
    if (writeErr) {
      if (isUserFd) {
        callback(writeErr);
      } else {
        fs.close(fd, function close() {
          callback(writeErr);
        });
      }
    } else if (written === length) {
      if (isUserFd) {
        callback(null);
      } else {
        fs.close(fd, callback);
      }
    } else {
      offset += written;
      length -= written;
      if (position !== null) {
        position += written;
      }
      writeAll(fd, isUserFd, buffer, offset, length, position, callback);
    }
  });
function writeFile(path, data, options, callback) {
  callback = maybeCallback(callback || options);
  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });
  const flag = options.flag || 'w';
  if (isFd(path)) {
    writeFd(path, true);
    return;
  fs.open(path, flag, options.mode, (openErr, fd) => {
    if (openErr) {
      callback(openErr);
    } else {
      writeFd(fd, false);
    }
  });
  function writeFd(fd, isUserFd) {
    const buffer = isArrayBufferView(data) ?
      data : Buffer.from('' + data, options.encoding || 'utf8');
    const position = (/a/.test(flag) || isUserFd) ? null : 0;
    writeAll(fd, isUserFd, buffer, 0, buffer.byteLength, position, callback);
function writeFileSync(path, data, options) {
  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });
  const flag = options.flag || 'w';
  const isUserFd = isFd(path); // File descriptor ownership
  const fd = isUserFd ? path : fs.openSync(path, flag, options.mode);
  if (!isArrayBufferView(data)) {
    data = Buffer.from('' + data, options.encoding || 'utf8');
  let offset = 0;
  let length = data.byteLength;
  let position = (/a/.test(flag) || isUserFd) ? null : 0;
  try {
    while (length > 0) {
      const written = fs.writeSync(fd, data, offset, length, position);
      offset += written;
      length -= written;
      if (position !== null) {
        position += written;
      }
    }
  } finally {
    if (!isUserFd) fs.closeSync(fd);
function appendFile(path, data, options, callback) {
  callback = maybeCallback(callback || options);
  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'a' });
  // Don't make changes directly on options object
  options = copyObject(options);
  // Force append behavior when using a supplied file descriptor
  if (!options.flag || isFd(path))
    options.flag = 'a';
  fs.writeFile(path, data, options, callback);
function appendFileSync(path, data, options) {
  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'a' });
  // Don't make changes directly on options object
  options = copyObject(options);
  // Force append behavior when using a supplied file descriptor
  if (!options.flag || isFd(path))
    options.flag = 'a';
  fs.writeFileSync(path, data, options);
function watch(filename, options, listener) {
  if (typeof options === 'function') {
    listener = options;
  options = getOptions(options, {});
  // Don't make changes directly on options object
  options = copyObject(options);
  if (options.persistent === undefined) options.persistent = true;
  if (options.recursive === undefined) options.recursive = false;
  if (!watchers)
    watchers = require('internal/fs/watchers');
  const watcher = new watchers.FSWatcher();
  watcher.start(filename,
                options.persistent,
                options.recursive,
                options.encoding);
  if (listener) {
    watcher.addListener('change', listener);
  return watcher;
const statWatchers = new Map();
function watchFile(filename, options, listener) {
  filename = getValidatedPath(filename);
  filename = pathModule.resolve(filename);
  let stat;
  if (options === null || typeof options !== 'object') {
    listener = options;
    options = null;
  options = {
    // Poll interval in milliseconds. 5007 is what libev used to use. It's
    // a little on the slow side but let's stick with it for now to keep
    // behavioral changes to a minimum.
    interval: 5007,
    persistent: true,
    ...options
  };
  if (typeof listener !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('listener', 'Function', listener);
  stat = statWatchers.get(filename);
  if (stat === undefined) {
    if (!watchers)
      watchers = require('internal/fs/watchers');
    stat = new watchers.StatWatcher(options.bigint);
    stat.start(filename, options.persistent, options.interval);
    statWatchers.set(filename, stat);
  stat.addListener('change', listener);
  return stat;
function unwatchFile(filename, listener) {
  filename = getValidatedPath(filename);
  filename = pathModule.resolve(filename);
  const stat = statWatchers.get(filename);
  if (stat === undefined) return;
  if (typeof listener === 'function') {
    stat.removeListener('change', listener);
  } else {
    stat.removeAllListeners('change');
  if (stat.listenerCount('change') === 0) {
    stat.stop();
    statWatchers.delete(filename);
let splitRoot;
if (isWindows) {
  // Regex to find the device root on Windows (e.g. 'c:\\'), including trailing
  // slash.
  const splitRootRe = /^(?:[a-zA-Z]:|[\\/]{2}[^\\/]+[\\/][^\\/]+)?[\\/]*/;
  splitRoot = function splitRoot(str) {
    return splitRootRe.exec(str)[0];
  };
} else {
  splitRoot = function splitRoot(str) {
    for (var i = 0; i < str.length; ++i) {
      if (str.charCodeAt(i) !== CHAR_FORWARD_SLASH)
        return str.slice(0, i);
    }
    return str;
  };
function encodeRealpathResult(result, options) {
  if (!options || !options.encoding || options.encoding === 'utf8')
    return result;
  const asBuffer = Buffer.from(result);
  if (options.encoding === 'buffer') {
    return asBuffer;
  } else {
    return asBuffer.toString(options.encoding);
// Finds the next portion of a (partial) path, up to the next path delimiter
let nextPart;
if (isWindows) {
  nextPart = function nextPart(p, i) {
    for (; i < p.length; ++i) {
      const ch = p.charCodeAt(i);
      // Check for a separator character
      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)
        return i;
    }
    return -1;
  };
} else {
  nextPart = function nextPart(p, i) { return p.indexOf('/', i); };
const emptyObj = Object.create(null);
function realpathSync(p, options) {
  if (!options)
    options = emptyObj;
  else
    options = getOptions(options, emptyObj);
  p = toPathIfFileURL(p);
  if (typeof p !== 'string') {
    p += '';
  validatePath(p);
  p = pathModule.resolve(p);
  const cache = options[realpathCacheKey];
  const maybeCachedResult = cache && cache.get(p);
  if (maybeCachedResult) {
    return maybeCachedResult;
  const seenLinks = Object.create(null);
  const knownHard = Object.create(null);
  const original = p;
  // Current character position in p
  let pos;
  // The partial path so far, including a trailing slash if any
  let current;
  // The partial path without a trailing slash (except when pointing at a root)
  let base;
  // The partial path scanned in the previous round, with slash
  let previous;
  // Skip over roots
  current = base = splitRoot(p);
  pos = current.length;
  // On windows, check that the root exists. On unix there is no need.
  if (isWindows && !knownHard[base]) {
    const ctx = { path: base };
    binding.lstat(pathModule.toNamespacedPath(base), false, undefined, ctx);
    handleErrorFromBinding(ctx);
    knownHard[base] = true;
  // Walk down the path, swapping out linked path parts for their real
  // values
  // NB: p.length changes.
  while (pos < p.length) {
    // find the next part
    const result = nextPart(p, pos);
    previous = current;
    if (result === -1) {
      const last = p.slice(pos);
      current += last;
      base = previous + last;
      pos = p.length;
    } else {
      current += p.slice(pos, result + 1);
      base = previous + p.slice(pos, result);
      pos = result + 1;
    }
    // Continue if not a symlink, break if a pipe/socket
    if (knownHard[base] || (cache && cache.get(base) === base)) {
      if (isFileType(statValues, S_IFIFO) ||
          isFileType(statValues, S_IFSOCK)) {
        break;
      }
      continue;
    }
    let resolvedLink;
    const maybeCachedResolved = cache && cache.get(base);
    if (maybeCachedResolved) {
      resolvedLink = maybeCachedResolved;
    } else {
      // Use stats array directly to avoid creating an fs.Stats instance just
      // for our internal use.
      const baseLong = pathModule.toNamespacedPath(base);
      const ctx = { path: base };
      const stats = binding.lstat(baseLong, false, undefined, ctx);
      handleErrorFromBinding(ctx);
      if (!isFileType(stats, S_IFLNK)) {
        knownHard[base] = true;
        if (cache) cache.set(base, base);
        continue;
      }
      // Read the link if it wasn't read before
      // dev/ino always return 0 on windows, so skip the check.
      let linkTarget = null;
      let id;
      if (!isWindows) {
        const dev = stats[0].toString(32);
        const ino = stats[7].toString(32);
        id = `${dev}:${ino}`;
        if (seenLinks[id]) {
          linkTarget = seenLinks[id];
        }
      }
      if (linkTarget === null) {
        const ctx = { path: base };
        binding.stat(baseLong, false, undefined, ctx);
        handleErrorFromBinding(ctx);
        linkTarget = binding.readlink(baseLong, undefined, undefined, ctx);
        handleErrorFromBinding(ctx);
      }
      resolvedLink = pathModule.resolve(previous, linkTarget);
      if (cache) cache.set(base, resolvedLink);
      if (!isWindows) seenLinks[id] = linkTarget;
    }
    // Resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    // Skip over roots
    current = base = splitRoot(p);
    pos = current.length;
    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      const ctx = { path: base };
      binding.lstat(pathModule.toNamespacedPath(base), false, undefined, ctx);
      handleErrorFromBinding(ctx);
      knownHard[base] = true;
    }
  if (cache) cache.set(original, p);
  return encodeRealpathResult(p, options);
realpathSync.native = (path, options) => {
  options = getOptions(options, {});
  path = getValidatedPath(path);
  const ctx = { path };
  const result = binding.realpath(path, options.encoding, undefined, ctx);
  handleErrorFromBinding(ctx);
  return result;
function realpath(p, options, callback) {
  callback = typeof options === 'function' ? options : maybeCallback(callback);
  options = getOptions(options, {});
  p = toPathIfFileURL(p);
  if (typeof p !== 'string') {
    p += '';
  validatePath(p);
  p = pathModule.resolve(p);
  const seenLinks = Object.create(null);
  const knownHard = Object.create(null);
  // Current character position in p
  let pos;
  // The partial path so far, including a trailing slash if any
  let current;
  // The partial path without a trailing slash (except when pointing at a root)
  let base;
  // The partial path scanned in the previous round, with slash
  let previous;
  current = base = splitRoot(p);
  pos = current.length;
  // On windows, check that the root exists. On unix there is no need.
  if (isWindows && !knownHard[base]) {
    fs.lstat(base, (err, stats) => {
      if (err) return callback(err);
      knownHard[base] = true;
      LOOP();
    });
  } else {
    process.nextTick(LOOP);
  // Walk down the path, swapping out linked path parts for their real
  // values
  function LOOP() {
    // Stop if scanned past end of path
    if (pos >= p.length) {
      return callback(null, encodeRealpathResult(p, options));
    }
    // find the next part
    const result = nextPart(p, pos);
    previous = current;
    if (result === -1) {
      const last = p.slice(pos);
      current += last;
      base = previous + last;
      pos = p.length;
    } else {
      current += p.slice(pos, result + 1);
      base = previous + p.slice(pos, result);
      pos = result + 1;
    }
    // Continue if not a symlink, break if a pipe/socket
    if (knownHard[base]) {
      if (isFileType(statValues, S_IFIFO) ||
          isFileType(statValues, S_IFSOCK)) {
        return callback(null, encodeRealpathResult(p, options));
      }
      return process.nextTick(LOOP);
    }
    return fs.lstat(base, gotStat);
  function gotStat(err, stats) {
    if (err) return callback(err);
    // If not a symlink, skip to the next path part
    if (!stats.isSymbolicLink()) {
      knownHard[base] = true;
      return process.nextTick(LOOP);
    }
    // Stat & read the link if not read before.
    // Call `gotTarget()` as soon as the link target is known.
    // `dev`/`ino` always return 0 on windows, so skip the check.
    let id;
    if (!isWindows) {
      const dev = stats.dev.toString(32);
      const ino = stats.ino.toString(32);
      id = `${dev}:${ino}`;
      if (seenLinks[id]) {
        return gotTarget(null, seenLinks[id], base);
      }
    }
    fs.stat(base, (err) => {
      if (err) return callback(err);
      fs.readlink(base, (err, target) => {
        if (!isWindows) seenLinks[id] = target;
        gotTarget(err, target);
      });
    });
  function gotTarget(err, target, base) {
    if (err) return callback(err);
    gotResolvedLink(pathModule.resolve(previous, target));
  function gotResolvedLink(resolvedLink) {
    // Resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    current = base = splitRoot(p);
    pos = current.length;
    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstat(base, (err) => {
        if (err) return callback(err);
        knownHard[base] = true;
        LOOP();
      });
    } else {
      process.nextTick(LOOP);
    }
realpath.native = (path, options, callback) => {
  callback = makeCallback(callback || options);
  options = getOptions(options, {});
  path = getValidatedPath(path);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  return binding.realpath(path, options.encoding, req);
function mkdtemp(prefix, options, callback) {
  callback = makeCallback(typeof options === 'function' ? options : callback);
  options = getOptions(options, {});
  if (!prefix || typeof prefix !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('prefix', 'string', prefix);
  nullCheck(prefix, 'prefix');
  warnOnNonPortableTemplate(prefix);
  const req = new FSReqCallback();
  req.oncomplete = callback;
  binding.mkdtemp(`${prefix}XXXXXX`, options.encoding, req);
function mkdtempSync(prefix, options) {
  options = getOptions(options, {});
  if (!prefix || typeof prefix !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('prefix', 'string', prefix);
  nullCheck(prefix, 'prefix');
  warnOnNonPortableTemplate(prefix);
  const path = `${prefix}XXXXXX`;
  const ctx = { path };
  const result = binding.mkdtemp(path, options.encoding,
                                 undefined, ctx);
  handleErrorFromBinding(ctx);
  return result;
function copyFile(src, dest, flags, callback) {
  if (typeof flags === 'function') {
    callback = flags;
    flags = 0;
  } else if (typeof callback !== 'function') {
    throw new ERR_INVALID_CALLBACK(callback);
  src = getValidatedPath(src, 'src');
  dest = getValidatedPath(dest, 'dest');
  src = pathModule._makeLong(src);
  dest = pathModule._makeLong(dest);
  flags = flags | 0;
  const req = new FSReqCallback();
  req.oncomplete = makeCallback(callback);
  binding.copyFile(src, dest, flags, req);
function copyFileSync(src, dest, flags) {
  src = getValidatedPath(src, 'src');
  dest = getValidatedPath(dest, 'dest');
  const ctx = { path: src, dest };  // non-prefixed
  src = pathModule._makeLong(src);
  dest = pathModule._makeLong(dest);
  flags = flags | 0;
  binding.copyFile(src, dest, flags, undefined, ctx);
  handleErrorFromBinding(ctx);
function lazyLoadStreams() {
  if (!ReadStream) {
    ({ ReadStream, WriteStream } = require('internal/fs/streams'));
    [ FileReadStream, FileWriteStream ] = [ ReadStream, WriteStream ];
function createReadStream(path, options) {
  lazyLoadStreams();
  return new ReadStream(path, options);
function createWriteStream(path, options) {
  lazyLoadStreams();
  return new WriteStream(path, options);
module.exports = fs = {
  appendFile,
  appendFileSync,
  access,
  accessSync,
  chown,
  chownSync,
  chmod,
  chmodSync,
  close,
  closeSync,
  copyFile,
  copyFileSync,
  createReadStream,
  createWriteStream,
  exists,
  existsSync,
  fchown,
  fchownSync,
  fchmod,
  fchmodSync,
  fdatasync,
  fdatasyncSync,
  fstat,
  fstatSync,
  fsync,
  fsyncSync,
  ftruncate,
  ftruncateSync,
  futimes,
  futimesSync,
  lchown,
  lchownSync,
  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined,
  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined,
  link,
  linkSync,
  lstat,
  lstatSync,
  mkdir,
  mkdirSync,
  mkdtemp,
  mkdtempSync,
  open,
  openSync,
  readdir,
  readdirSync,
  read,
  readSync,
  readFile,
  readFileSync,
  readlink,
  readlinkSync,
  realpath,
  realpathSync,
  rename,
  renameSync,
  rmdir,
  rmdirSync,
  stat,
  statSync,
  symlink,
  symlinkSync,
  truncate,
  truncateSync,
  unwatchFile,
  unlink,
  unlinkSync,
  utimes,
  utimesSync,
  watch,
  watchFile,
  writeFile,
  writeFileSync,
  write,
  writeSync,
  Dirent,
  Stats,
  get ReadStream() {
    lazyLoadStreams();
    return ReadStream;
  },
  set ReadStream(val) {
    ReadStream = val;
  },
  get WriteStream() {
    lazyLoadStreams();
    return WriteStream;
  },
  set WriteStream(val) {
    WriteStream = val;
  },
  // Legacy names... these have to be separate because of how graceful-fs
  // (and possibly other) modules monkey patch the values.
  get FileReadStream() {
    lazyLoadStreams();
    return FileReadStream;
  },
  set FileReadStream(val) {
    FileReadStream = val;
  },
  get FileWriteStream() {
    lazyLoadStreams();
    return FileWriteStream;
  },
  set FileWriteStream(val) {
    FileWriteStream = val;
  },
  // For tests
  _toUnixTimestamp: toUnixTimestamp
Object.defineProperties(fs, {
  F_OK: { enumerable: true, value: F_OK || 0 },
  R_OK: { enumerable: true, value: R_OK || 0 },
  W_OK: { enumerable: true, value: W_OK || 0 },
  X_OK: { enumerable: true, value: X_OK || 0 },
  constants: {
    configurable: false,
    enumerable: true,
    value: constants
  },
  promises: {
    configurable: true,
    enumerable: true,
    get() {
      if (promises === null)
        promises = require('internal/fs/promises');
      return promises;
    }
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const httpAgent = require('_http_agent');
const { ClientRequest } = require('_http_client');
const { methods } = require('_http_common');
const { IncomingMessage } = require('_http_incoming');
const { OutgoingMessage } = require('_http_outgoing');
const {
  _connectionListener,
  STATUS_CODES,
  Server,
  ServerResponse
} = require('_http_server');
let maxHeaderSize;
function createServer(opts, requestListener) {
  return new Server(opts, requestListener);
function request(url, options, cb) {
  return new ClientRequest(url, options, cb);
function get(url, options, cb) {
  const req = request(url, options, cb);
  req.end();
  return req;
module.exports = {
  _connectionListener,
  METHODS: methods.slice().sort(),
  STATUS_CODES,
  Agent: httpAgent.Agent,
  ClientRequest,
  IncomingMessage,
  OutgoingMessage,
  Server,
  ServerResponse,
  createServer,
  get,
  request
Object.defineProperty(module.exports, 'maxHeaderSize', {
  configurable: true,
  enumerable: true,
  get() {
    if (maxHeaderSize === undefined) {
      const { getOptionValue } = require('internal/options');
      maxHeaderSize = getOptionValue('--max-http-header-size');
    }
    return maxHeaderSize;
Object.defineProperty(module.exports, 'globalAgent', {
  configurable: true,
  enumerable: true,
  get() {
    return httpAgent.globalAgent;
  },
  set(value) {
    httpAgent.globalAgent = value;
'use strict';
const {
  connect,
  constants,
  createServer,
  createSecureServer,
  getDefaultSettings,
  getPackedSettings,
  getUnpackedSettings,
  Http2ServerRequest,
  Http2ServerResponse
} = require('internal/http2/core');
module.exports = {
  connect,
  constants,
  createServer,
  createSecureServer,
  getDefaultSettings,
  getPackedSettings,
  getUnpackedSettings,
  Http2ServerRequest,
  Http2ServerResponse
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const net = require('net');
const EventEmitter = require('events');
const debug = require('internal/util/debuglog').debuglog('http');
const { async_id_symbol } = require('internal/async_hooks').symbols;
// New Agent code.
// The largest departure from the previous implementation is that
// an Agent instance holds connections for a variable number of host:ports.
// Surprisingly, this is still API compatible as far as third parties are
// concerned. The only code that really notices the difference is the
// request object.
// Another departure is that all code related to HTTP parsing is in
// ClientRequest.onSocket(). The Agent is now *strictly*
// concerned with managing a connection pool.
class ReusedHandle {
  constructor(type, handle) {
    this.type = type;
    this.handle = handle;
function Agent(options) {
  if (!(this instanceof Agent))
    return new Agent(options);
  EventEmitter.call(this);
  this.defaultPort = 80;
  this.protocol = 'http:';
  this.options = { ...options };
  // Don't confuse net and make it think that we're connecting to a pipe
  this.options.path = null;
  this.requests = {};
  this.sockets = {};
  this.freeSockets = {};
  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;
  this.keepAlive = this.options.keepAlive || false;
  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;
  this.maxFreeSockets = this.options.maxFreeSockets || 256;
  this.on('free', (socket, options) => {
    const name = this.getName(options);
    debug('agent.on(free)', name);
    if (socket.writable &&
        this.requests[name] && this.requests[name].length) {
      const req = this.requests[name].shift();
      setRequestSocket(this, req, socket);
      if (this.requests[name].length === 0) {
        // don't leak
        delete this.requests[name];
      }
    } else {
      // If there are no pending requests, then put it in
      // the freeSockets pool, but only if we're allowed to do so.
      var req = socket._httpMessage;
      if (req &&
          req.shouldKeepAlive &&
          socket.writable &&
          this.keepAlive) {
        var freeSockets = this.freeSockets[name];
        var freeLen = freeSockets ? freeSockets.length : 0;
        var count = freeLen;
        if (this.sockets[name])
          count += this.sockets[name].length;
        if (count > this.maxSockets || freeLen >= this.maxFreeSockets) {
          socket.destroy();
        } else if (this.keepSocketAlive(socket)) {
          freeSockets = freeSockets || [];
          this.freeSockets[name] = freeSockets;
          socket[async_id_symbol] = -1;
          socket._httpMessage = null;
          this.removeSocket(socket, options);
          freeSockets.push(socket);
        } else {
          // Implementation doesn't want to keep socket alive
          socket.destroy();
        }
      } else {
        socket.destroy();
      }
    }
  });
Object.setPrototypeOf(Agent.prototype, EventEmitter.prototype);
Object.setPrototypeOf(Agent, EventEmitter);
Agent.defaultMaxSockets = Infinity;
Agent.prototype.createConnection = net.createConnection;
// Get the key for a given set of request options
Agent.prototype.getName = function getName(options) {
  var name = options.host || 'localhost';
  name += ':';
  if (options.port)
    name += options.port;
  name += ':';
  if (options.localAddress)
    name += options.localAddress;
  // Pacify parallel/test-http-agent-getname by only appending
  // the ':' when options.family is set.
  if (options.family === 4 || options.family === 6)
    name += `:${options.family}`;
  if (options.socketPath)
    name += `:${options.socketPath}`;
  return name;
Agent.prototype.addRequest = function addRequest(req, options, port/* legacy */,
                                                 localAddress/* legacy */) {
  // Legacy API: addRequest(req, host, port, localAddress)
  if (typeof options === 'string') {
    options = {
      host: options,
      port,
      localAddress
    };
  options = { ...options, ...this.options };
  if (options.socketPath)
    options.path = options.socketPath;
  if (!options.servername && options.servername !== '')
    options.servername = calculateServerName(options, req);
  const name = this.getName(options);
  if (!this.sockets[name]) {
    this.sockets[name] = [];
  const freeLen = this.freeSockets[name] ? this.freeSockets[name].length : 0;
  const sockLen = freeLen + this.sockets[name].length;
  if (freeLen) {
    // We have a free socket, so use that.
    var socket = this.freeSockets[name].shift();
    // Guard against an uninitialized or user supplied Socket.
    const handle = socket._handle;
    if (handle && typeof handle.asyncReset === 'function') {
      // Assign the handle a new asyncId and run any destroy()/init() hooks.
      handle.asyncReset(new ReusedHandle(handle.getProviderType(), handle));
      socket[async_id_symbol] = handle.getAsyncId();
    }
    // don't leak
    if (!this.freeSockets[name].length)
      delete this.freeSockets[name];
    this.reuseSocket(socket, req);
    setRequestSocket(this, req, socket);
    this.sockets[name].push(socket);
  } else if (sockLen < this.maxSockets) {
    debug('call onSocket', sockLen, freeLen);
    // If we are under maxSockets create a new one.
    this.createSocket(req, options, handleSocketCreation(this, req, true));
  } else {
    debug('wait for socket');
    // We are over limit so we'll add it to the queue.
    if (!this.requests[name]) {
      this.requests[name] = [];
    }
    this.requests[name].push(req);
Agent.prototype.createSocket = function createSocket(req, options, cb) {
  options = { ...options, ...this.options };
  if (options.socketPath)
    options.path = options.socketPath;
  if (!options.servername && options.servername !== '')
    options.servername = calculateServerName(options, req);
  const name = this.getName(options);
  options._agentKey = name;
  debug('createConnection', name, options);
  options.encoding = null;
  var called = false;
  const oncreate = (err, s) => {
    if (called)
      return;
    called = true;
    if (err)
      return cb(err);
    if (!this.sockets[name]) {
      this.sockets[name] = [];
    }
    this.sockets[name].push(s);
    debug('sockets', name, this.sockets[name].length);
    installListeners(this, s, options);
    cb(null, s);
  };
  const newSocket = this.createConnection(options, oncreate);
  if (newSocket)
    oncreate(null, newSocket);
function calculateServerName(options, req) {
  let servername = options.host;
  const hostHeader = req.getHeader('host');
  if (hostHeader) {
    // abc => abc
    // abc:123 => abc
    // [::1] => ::1
    // [::1]:123 => ::1
    if (hostHeader.startsWith('[')) {
      const index = hostHeader.indexOf(']');
      if (index === -1) {
        // Leading '[', but no ']'. Need to do something...
        servername = hostHeader;
      } else {
        servername = hostHeader.substr(1, index - 1);
      }
    } else {
      servername = hostHeader.split(':', 1)[0];
    }
  // Don't implicitly set invalid (IP) servernames.
  if (net.isIP(servername))
    servername = '';
  return servername;
function installListeners(agent, s, options) {
  function onFree() {
    debug('CLIENT socket onFree');
    agent.emit('free', s, options);
  s.on('free', onFree);
  function onClose(err) {
    debug('CLIENT socket onClose');
    // This is the only place where sockets get removed from the Agent.
    // If you want to remove a socket from the pool, just close it.
    // All socket errors end in a close event anyway.
    agent.removeSocket(s, options);
  s.on('close', onClose);
  function onRemove() {
    // We need this function for cases like HTTP 'upgrade'
    // (defined by WebSockets) where we need to remove a socket from the
    // pool because it'll be locked up indefinitely
    debug('CLIENT socket onRemove');
    agent.removeSocket(s, options);
    s.removeListener('close', onClose);
    s.removeListener('free', onFree);
    s.removeListener('agentRemove', onRemove);
  s.on('agentRemove', onRemove);
Agent.prototype.removeSocket = function removeSocket(s, options) {
  const name = this.getName(options);
  debug('removeSocket', name, 'writable:', s.writable);
  const sets = [this.sockets];
  // If the socket was destroyed, remove it from the free buffers too.
  if (!s.writable)
    sets.push(this.freeSockets);
  for (var sk = 0; sk < sets.length; sk++) {
    var sockets = sets[sk];
    if (sockets[name]) {
      var index = sockets[name].indexOf(s);
      if (index !== -1) {
        sockets[name].splice(index, 1);
        // Don't leak
        if (sockets[name].length === 0)
          delete sockets[name];
      }
    }
  if (this.requests[name] && this.requests[name].length) {
    debug('removeSocket, have a request, make a socket');
    const req = this.requests[name][0];
    // If we have pending requests and a socket gets closed make a new one
    const socketCreationHandler = handleSocketCreation(this, req, false);
    this.createSocket(req, options, socketCreationHandler);
Agent.prototype.keepSocketAlive = function keepSocketAlive(socket) {
  socket.setKeepAlive(true, this.keepAliveMsecs);
  socket.unref();
  return true;
Agent.prototype.reuseSocket = function reuseSocket(socket, req) {
  debug('have free socket');
  socket.ref();
Agent.prototype.destroy = function destroy() {
  const sets = [this.freeSockets, this.sockets];
  for (var s = 0; s < sets.length; s++) {
    var set = sets[s];
    var keys = Object.keys(set);
    for (var v = 0; v < keys.length; v++) {
      var setName = set[keys[v]];
      for (var n = 0; n < setName.length; n++) {
        setName[n].destroy();
      }
    }
function handleSocketCreation(agent, request, informRequest) {
  return function handleSocketCreation_Inner(err, socket) {
    if (err) {
      process.nextTick(emitErrorNT, request, err);
      return;
    }
    if (informRequest)
      setRequestSocket(agent, request, socket);
    else
      socket.emit('free');
  };
function setRequestSocket(agent, req, socket) {
  req.onSocket(socket);
  const agentTimeout = agent.options.timeout || 0;
  if (req.timeout === undefined || req.timeout === agentTimeout) {
    return;
  socket.setTimeout(req.timeout);
  // Reset timeout after response end
  req.once('response', (res) => {
    res.once('end', () => {
      if (socket.timeout !== agentTimeout) {
        socket.setTimeout(agentTimeout);
      }
    });
  });
function emitErrorNT(emitter, err) {
  emitter.emit('error', err);
module.exports = {
  Agent,
  globalAgent: new Agent()
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const net = require('net');
const url = require('url');
const assert = require('internal/assert');
const {
  _checkIsHttpToken: checkIsHttpToken,
  debug,
  freeParser,
  httpSocketSetup,
  parsers,
  HTTPParser,
  prepareError,
} = require('_http_common');
const { OutgoingMessage } = require('_http_outgoing');
const Agent = require('_http_agent');
const { Buffer } = require('buffer');
const { defaultTriggerAsyncIdScope } = require('internal/async_hooks');
const { URL, urlToOptions, searchParamsSymbol } = require('internal/url');
const { outHeadersKey, ondrain } = require('internal/http');
const { connResetException, codes } = require('internal/errors');
const {
  ERR_HTTP_HEADERS_SENT,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_HTTP_TOKEN,
  ERR_INVALID_PROTOCOL,
  ERR_UNESCAPED_CHARACTERS
} = codes;
const { getTimerDuration } = require('internal/timers');
const {
  DTRACE_HTTP_CLIENT_REQUEST,
  DTRACE_HTTP_CLIENT_RESPONSE
} = require('internal/dtrace');
const INVALID_PATH_REGEX = /[^\u0021-\u00ff]/;
function validateHost(host, name) {
  if (host !== null && host !== undefined && typeof host !== 'string') {
    throw new ERR_INVALID_ARG_TYPE(`options.${name}`,
                                   ['string', 'undefined', 'null'],
                                   host);
  return host;
class HTTPClientAsyncResource {
  constructor(type, req) {
    this.type = type;
    this.req = req;
let urlWarningEmitted = false;
function ClientRequest(input, options, cb) {
  OutgoingMessage.call(this);
  if (typeof input === 'string') {
    const urlStr = input;
    try {
      input = urlToOptions(new URL(urlStr));
    } catch (err) {
      input = url.parse(urlStr);
      if (!input.hostname) {
        throw err;
      }
      if (!urlWarningEmitted && !process.noDeprecation) {
        urlWarningEmitted = true;
        process.emitWarning(
          `The provided URL ${urlStr} is not a valid URL, and is supported ` +
          'in the http module solely for compatibility.',
          'DeprecationWarning', 'DEP0109');
      }
    }
  } else if (input && input[searchParamsSymbol] &&
             input[searchParamsSymbol][searchParamsSymbol]) {
    // url.URL instance
    input = urlToOptions(input);
  } else {
    cb = options;
    options = input;
    input = null;
  if (typeof options === 'function') {
    cb = options;
    options = input || {};
  } else {
    options = Object.assign(input || {}, options);
  var agent = options.agent;
  const defaultAgent = options._defaultAgent || Agent.globalAgent;
  if (agent === false) {
    agent = new defaultAgent.constructor();
  } else if (agent === null || agent === undefined) {
    if (typeof options.createConnection !== 'function') {
      agent = defaultAgent;
    }
    // Explicitly pass through this statement as agent will not be used
    // when createConnection is provided.
  } else if (typeof agent.addRequest !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('options.agent',
                                   ['Agent-like Object', 'undefined', 'false'],
                                   agent);
  this.agent = agent;
  const protocol = options.protocol || defaultAgent.protocol;
  var expectedProtocol = defaultAgent.protocol;
  if (this.agent && this.agent.protocol)
    expectedProtocol = this.agent.protocol;
  var path;
  if (options.path) {
    path = String(options.path);
    if (INVALID_PATH_REGEX.test(path))
      throw new ERR_UNESCAPED_CHARACTERS('Request path');
  if (protocol !== expectedProtocol) {
    throw new ERR_INVALID_PROTOCOL(protocol, expectedProtocol);
  const defaultPort = options.defaultPort ||
                    this.agent && this.agent.defaultPort;
  const port = options.port = options.port || defaultPort || 80;
  const host = options.host = validateHost(options.hostname, 'hostname') ||
                            validateHost(options.host, 'host') || 'localhost';
  const setHost = (options.setHost === undefined || Boolean(options.setHost));
  this.socketPath = options.socketPath;
  if (options.timeout !== undefined)
    this.timeout = getTimerDuration(options.timeout, 'timeout');
  var method = options.method;
  const methodIsString = (typeof method === 'string');
  if (method !== null && method !== undefined && !methodIsString) {
    throw new ERR_INVALID_ARG_TYPE('method', 'string', method);
  if (methodIsString && method) {
    if (!checkIsHttpToken(method)) {
      throw new ERR_INVALID_HTTP_TOKEN('Method', method);
    }
    method = this.method = method.toUpperCase();
  } else {
    method = this.method = 'GET';
  this.path = options.path || '/';
  if (cb) {
    this.once('response', cb);
  if (method === 'GET' ||
      method === 'HEAD' ||
      method === 'DELETE' ||
      method === 'OPTIONS' ||
      method === 'TRACE' ||
      method === 'CONNECT') {
    this.useChunkedEncodingByDefault = false;
  } else {
    this.useChunkedEncodingByDefault = true;
  this._ended = false;
  this.res = null;
  this.aborted = false;
  this.timeoutCb = null;
  this.upgradeOrConnect = false;
  this.parser = null;
  this.maxHeadersCount = null;
  var called = false;
  if (this.agent) {
    // If there is an agent we should default to Connection:keep-alive,
    // but only if the Agent will actually reuse the connection!
    // If it's not a keepAlive agent, and the maxSockets==Infinity, then
    // there's never a case where this socket will actually be reused
    if (!this.agent.keepAlive && !Number.isFinite(this.agent.maxSockets)) {
      this._last = true;
      this.shouldKeepAlive = false;
    } else {
      this._last = false;
      this.shouldKeepAlive = true;
    }
  const headersArray = Array.isArray(options.headers);
  if (!headersArray) {
    if (options.headers) {
      var keys = Object.keys(options.headers);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        this.setHeader(key, options.headers[key]);
      }
    }
    if (host && !this.getHeader('host') && setHost) {
      var hostHeader = host;
      // For the Host header, ensure that IPv6 addresses are enclosed
      // in square brackets, as defined by URI formatting
      // https://tools.ietf.org/html/rfc3986#section-3.2.2
      var posColon = hostHeader.indexOf(':');
      if (posColon !== -1 &&
          hostHeader.includes(':', posColon + 1) &&
          hostHeader.charCodeAt(0) !== 91/* '[' */) {
        hostHeader = `[${hostHeader}]`;
      }
      if (port && +port !== defaultPort) {
        hostHeader += ':' + port;
      }
      this.setHeader('Host', hostHeader);
    }
    if (options.auth && !this.getHeader('Authorization')) {
      this.setHeader('Authorization', 'Basic ' +
                     Buffer.from(options.auth).toString('base64'));
    }
    if (this.getHeader('expect')) {
      if (this._header) {
        throw new ERR_HTTP_HEADERS_SENT('render');
      }
      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\r\n',
                        this[outHeadersKey]);
    }
  } else {
    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\r\n',
                      options.headers);
  const oncreate = (err, socket) => {
    if (called)
      return;
    called = true;
    if (err) {
      process.nextTick(() => this.emit('error', err));
      return;
    }
    this.onSocket(socket);
    this._deferToConnect(null, null, () => this._flush());
  };
  // initiate connection
  if (this.agent) {
    this.agent.addRequest(this, options);
  } else {
    // No agent, default to Connection:close.
    this._last = true;
    this.shouldKeepAlive = false;
    if (typeof options.createConnection === 'function') {
      const newSocket = options.createConnection(options, oncreate);
      if (newSocket && !called) {
        called = true;
        this.onSocket(newSocket);
      } else {
        return;
      }
    } else {
      debug('CLIENT use net.createConnection', options);
      this.onSocket(net.createConnection(options));
    }
  this._deferToConnect(null, null, () => this._flush());
Object.setPrototypeOf(ClientRequest.prototype, OutgoingMessage.prototype);
Object.setPrototypeOf(ClientRequest, OutgoingMessage);
ClientRequest.prototype._finish = function _finish() {
  DTRACE_HTTP_CLIENT_REQUEST(this, this.connection);
  OutgoingMessage.prototype._finish.call(this);
ClientRequest.prototype._implicitHeader = function _implicitHeader() {
  if (this._header) {
    throw new ERR_HTTP_HEADERS_SENT('render');
  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\r\n',
                    this[outHeadersKey]);
ClientRequest.prototype.abort = function abort() {
  if (!this.aborted) {
    process.nextTick(emitAbortNT.bind(this));
  this.aborted = true;
  // If we're aborting, we don't care about any more response data.
  if (this.res) {
    this.res._dump();
  // In the event that we don't have a socket, we will pop out of
  // the request queue through handling in onSocket.
  if (this.socket) {
    // in-progress
    this.socket.destroy();
function emitAbortNT() {
  this.emit('abort');
function socketCloseListener() {
  const socket = this;
  const req = socket._httpMessage;
  debug('HTTP socket close');
  // Pull through final chunk, if anything is buffered.
  // the ondata function will handle it properly, and this
  // is a no-op if no final chunk remains.
  socket.read();
  // NOTE: It's important to get parser here, because it could be freed by
  // the `socketOnData`.
  const parser = socket.parser;
  const res = req.res;
  if (res) {
    // Socket closed before we emitted 'end' below.
    if (!res.complete) {
      res.aborted = true;
      res.emit('aborted');
    }
    req.emit('close');
    if (res.readable) {
      res.on('end', function() {
        this.emit('close');
      });
      res.push(null);
    } else {
      res.emit('close');
    }
  } else {
    if (!req.socket._hadError) {
      // This socket error fired before we started to
      // receive a response. The error needs to
      // fire on the request.
      req.socket._hadError = true;
      req.emit('error', connResetException('socket hang up'));
    }
    req.emit('close');
  // Too bad.  That output wasn't getting written.
  // This is pretty terrible that it doesn't raise an error.
  // Fixed better in v0.10
  if (req.outputData)
    req.outputData.length = 0;
  if (parser) {
    parser.finish();
    freeParser(parser, req, socket);
function socketErrorListener(err) {
  const socket = this;
  const req = socket._httpMessage;
  debug('SOCKET ERROR:', err.message, err.stack);
  if (req) {
    // For Safety. Some additional errors might fire later on
    // and we need to make sure we don't double-fire the error event.
    req.socket._hadError = true;
    req.emit('error', err);
  // Handle any pending data
  socket.read();
  const parser = socket.parser;
  if (parser) {
    parser.finish();
    freeParser(parser, req, socket);
  // Ensure that no further data will come out of the socket
  socket.removeListener('data', socketOnData);
  socket.removeListener('end', socketOnEnd);
  socket.destroy();
function freeSocketErrorListener(err) {
  const socket = this;
  debug('SOCKET ERROR on FREE socket:', err.message, err.stack);
  socket.destroy();
  socket.emit('agentRemove');
function socketOnEnd() {
  const socket = this;
  const req = this._httpMessage;
  const parser = this.parser;
  if (!req.res && !req.socket._hadError) {
    // If we don't have a response then we know that the socket
    // ended prematurely and we need to emit an error on the request.
    req.socket._hadError = true;
    req.emit('error', connResetException('socket hang up'));
  if (parser) {
    parser.finish();
    freeParser(parser, req, socket);
  socket.destroy();
function socketOnData(d) {
  const socket = this;
  const req = this._httpMessage;
  const parser = this.parser;
  assert(parser && parser.socket === socket);
  const ret = parser.execute(d);
  if (ret instanceof Error) {
    prepareError(ret, parser, d);
    debug('parse error', ret);
    freeParser(parser, req, socket);
    socket.destroy();
    req.socket._hadError = true;
    req.emit('error', ret);
  } else if (parser.incoming && parser.incoming.upgrade) {
    // Upgrade (if status code 101) or CONNECT
    var bytesParsed = ret;
    var res = parser.incoming;
    req.res = res;
    socket.removeListener('data', socketOnData);
    socket.removeListener('end', socketOnEnd);
    socket.removeListener('drain', ondrain);
    parser.finish();
    freeParser(parser, req, socket);
    var bodyHead = d.slice(bytesParsed, d.length);
    var eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';
    if (req.listenerCount(eventName) > 0) {
      req.upgradeOrConnect = true;
      // detach the socket
      socket.emit('agentRemove');
      socket.removeListener('close', socketCloseListener);
      socket.removeListener('error', socketErrorListener);
      socket._httpMessage = null;
      socket.readableFlowing = null;
      req.emit(eventName, res, socket, bodyHead);
      req.emit('close');
    } else {
      // Requested Upgrade or used CONNECT method, but have no handler.
      socket.destroy();
    }
  } else if (parser.incoming && parser.incoming.complete &&
             // When the status code is informational (100, 102-199),
             // the server will send a final response after this client
             // sends a request body, so we must not free the parser.
             // 101 (Switching Protocols) and all other status codes
             // should be processed normally.
             !statusIsInformational(parser.incoming.statusCode)) {
    socket.removeListener('data', socketOnData);
    socket.removeListener('end', socketOnEnd);
    freeParser(parser, req, socket);
function statusIsInformational(status) {
  // 100 (Continue)    RFC7231 Section 6.2.1
  // 102 (Processing)  RFC2518
  // 103 (Early Hints) RFC8297
  // 104-199 (Unassigned)
  return (status < 200 && status >= 100 && status !== 101);
// client
function parserOnIncomingClient(res, shouldKeepAlive) {
  const socket = this.socket;
  const req = socket._httpMessage;
  debug('AGENT incoming response!');
  if (req.res) {
    // We already have a response object, this means the server
    // sent a double response.
    socket.destroy();
    return 0;  // No special treatment.
  req.res = res;
  // Skip body and treat as Upgrade.
  if (res.upgrade)
    return 2;
  // Responses to CONNECT request is handled as Upgrade.
  const method = req.method;
  if (method === 'CONNECT') {
    res.upgrade = true;
    return 2;  // Skip body and treat as Upgrade.
  if (statusIsInformational(res.statusCode)) {
    // Restart the parser, as this is a 1xx informational message.
    req.res = null; // Clear res so that we don't hit double-responses.
    // Maintain compatibility by sending 100-specific events
    if (res.statusCode === 100) {
      req.emit('continue');
    }
    // Send information events to all 1xx responses except 101 Upgrade.
    req.emit('information', {
      statusCode: res.statusCode,
      statusMessage: res.statusMessage,
      httpVersion: res.httpVersion,
      httpVersionMajor: res.httpVersionMajor,
      httpVersionMinor: res.httpVersionMinor,
      headers: res.headers,
      rawHeaders: res.rawHeaders
    });
    return 1;  // Skip body but don't treat as Upgrade.
  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {
    // Server MUST respond with Connection:keep-alive for us to enable it.
    // If we've been upgraded (via WebSockets) we also shouldn't try to
    // keep the connection open.
    req.shouldKeepAlive = false;
  DTRACE_HTTP_CLIENT_RESPONSE(socket, req);
  req.res = res;
  res.req = req;
  // Add our listener first, so that we guarantee socket cleanup
  res.on('end', responseOnEnd);
  req.on('prefinish', requestOnPrefinish);
  // If the user did not listen for the 'response' event, then they
  // can't possibly read the data, so we ._dump() it into the void
  // so that the socket doesn't hang there in a paused state.
  if (req.aborted || !req.emit('response', res))
    res._dump();
  if (method === 'HEAD')
    return 1;  // Skip body but don't treat as Upgrade.
  return 0;  // No special treatment.
// client
function responseKeepAlive(res, req) {
  const socket = req.socket;
  if (!req.shouldKeepAlive) {
    if (socket.writable) {
      debug('AGENT socket.destroySoon()');
      if (typeof socket.destroySoon === 'function')
        socket.destroySoon();
      else
        socket.end();
    }
    assert(!socket.writable);
  } else {
    debug('AGENT socket keep-alive');
    if (req.timeoutCb) {
      socket.setTimeout(0, req.timeoutCb);
      req.timeoutCb = null;
    }
    socket.removeListener('close', socketCloseListener);
    socket.removeListener('error', socketErrorListener);
    socket.once('error', freeSocketErrorListener);
    // There are cases where _handle === null. Avoid those. Passing null to
    // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.
    const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;
    // Mark this socket as available, AFTER user-added end
    // handlers have a chance to run.
    defaultTriggerAsyncIdScope(asyncId, process.nextTick, emitFreeNT, socket);
function responseOnEnd() {
  const res = this;
  const req = this.req;
  req._ended = true;
  if (!req.shouldKeepAlive || req.finished)
    responseKeepAlive(res, req);
function requestOnPrefinish() {
  const req = this;
  const res = this.res;
  if (!req.shouldKeepAlive)
    return;
  if (req._ended)
    responseKeepAlive(res, req);
function emitFreeNT(socket) {
  socket.emit('free');
function tickOnSocket(req, socket) {
  const parser = parsers.alloc();
  req.socket = socket;
  req.connection = socket;
  parser.initialize(HTTPParser.RESPONSE,
                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE', req));
  parser.socket = socket;
  parser.outgoing = req;
  req.parser = parser;
  socket.parser = parser;
  socket._httpMessage = req;
  // Setup "drain" propagation.
  httpSocketSetup(socket);
  // Propagate headers limit from request object to parser
  if (typeof req.maxHeadersCount === 'number') {
    parser.maxHeaderPairs = req.maxHeadersCount << 1;
  parser.onIncoming = parserOnIncomingClient;
  socket.removeListener('error', freeSocketErrorListener);
  socket.on('error', socketErrorListener);
  socket.on('data', socketOnData);
  socket.on('end', socketOnEnd);
  socket.on('close', socketCloseListener);
  if (
    req.timeout !== undefined ||
    (req.agent && req.agent.options && req.agent.options.timeout)
  ) {
    listenSocketTimeout(req);
  req.emit('socket', socket);
function listenSocketTimeout(req) {
  if (req.timeoutCb) {
    return;
  const emitRequestTimeout = () => req.emit('timeout');
  // Set timeoutCb so it will get cleaned up on request end.
  req.timeoutCb = emitRequestTimeout;
  // Delegate socket timeout event.
  if (req.socket) {
    req.socket.once('timeout', emitRequestTimeout);
  } else {
    req.on('socket', (socket) => {
      socket.once('timeout', emitRequestTimeout);
    });
  // Remove socket timeout listener after response end.
  req.once('response', (res) => {
    res.once('end', () => {
      req.socket.removeListener('timeout', emitRequestTimeout);
    });
  });
ClientRequest.prototype.onSocket = function onSocket(socket) {
  process.nextTick(onSocketNT, this, socket);
function onSocketNT(req, socket) {
  if (req.aborted) {
    // If we were aborted while waiting for a socket, skip the whole thing.
    if (!req.agent) {
      socket.destroy();
    } else {
      socket.emit('free');
    }
  } else {
    tickOnSocket(req, socket);
ClientRequest.prototype._deferToConnect = _deferToConnect;
function _deferToConnect(method, arguments_, cb) {
  // This function is for calls that need to happen once the socket is
  // assigned to this request and writable. It's an important promisy
  // thing for all the socket calls that happen either now
  // (when a socket is assigned) or in the future (when a socket gets
  // assigned out of the pool and is eventually writable).
  const callSocketMethod = () => {
    if (method)
      this.socket[method].apply(this.socket, arguments_);
    if (typeof cb === 'function')
      cb();
  };
  const onSocket = () => {
    if (this.socket.writable) {
      callSocketMethod();
    } else {
      this.socket.once('connect', callSocketMethod);
    }
  };
  if (!this.socket) {
    this.once('socket', onSocket);
  } else {
    onSocket();
ClientRequest.prototype.setTimeout = function setTimeout(msecs, callback) {
  if (this._ended) {
    return this;
  listenSocketTimeout(this);
  msecs = getTimerDuration(msecs, 'msecs');
  if (callback) this.once('timeout', callback);
  if (this.socket) {
    setSocketTimeout(this.socket, msecs);
  } else {
    this.once('socket', (sock) => setSocketTimeout(sock, msecs));
  return this;
function setSocketTimeout(sock, msecs) {
  if (sock.connecting) {
    sock.once('connect', function() {
      sock.setTimeout(msecs);
    });
  } else {
    sock.setTimeout(msecs);
ClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {
  this._deferToConnect('setNoDelay', [noDelay]);
ClientRequest.prototype.setSocketKeepAlive =
    function setSocketKeepAlive(enable, initialDelay) {
      this._deferToConnect('setKeepAlive', [enable, initialDelay]);
    };
ClientRequest.prototype.clearTimeout = function clearTimeout(cb) {
  this.setTimeout(0, cb);
module.exports = {
  ClientRequest
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Math } = primordials;
const { setImmediate } = require('timers');
const { getOptionValue } = require('internal/options');
const { methods, HTTPParser } =
  getOptionValue('--http-parser') === 'legacy' ?
    internalBinding('http_parser') : internalBinding('http_parser_llhttp');
const FreeList = require('internal/freelist');
const { ondrain } = require('internal/http');
const incoming = require('_http_incoming');
const {
  IncomingMessage,
  readStart,
  readStop
} = incoming;
const debug = require('internal/util/debuglog').debuglog('http');
const kIncomingMessage = Symbol('IncomingMessage');
const kOnHeaders = HTTPParser.kOnHeaders | 0;
const kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;
const kOnBody = HTTPParser.kOnBody | 0;
const kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;
const kOnExecute = HTTPParser.kOnExecute | 0;
const MAX_HEADER_PAIRS = 2000;
// Only called in the slow case where slow means
// that the request headers were either fragmented
// across multiple TCP packets or too large to be
// processed in a single run. This method is also
// called to process trailing HTTP headers.
function parserOnHeaders(headers, url) {
  // Once we exceeded headers limit - stop collecting them
  if (this.maxHeaderPairs <= 0 ||
      this._headers.length < this.maxHeaderPairs) {
    this._headers = this._headers.concat(headers);
  this._url += url;
// `headers` and `url` are set only if .onHeaders() has not been called for
// this request.
// `url` is not set for response parsers but that's not applicable here since
// all our parsers are request parsers.
function parserOnHeadersComplete(versionMajor, versionMinor, headers, method,
                                 url, statusCode, statusMessage, upgrade,
                                 shouldKeepAlive) {
  const parser = this;
  const { socket } = parser;
  if (headers === undefined) {
    headers = parser._headers;
    parser._headers = [];
  if (url === undefined) {
    url = parser._url;
    parser._url = '';
  // Parser is also used by http client
  const ParserIncomingMessage = (socket && socket.server &&
                                 socket.server[kIncomingMessage]) ||
                                 IncomingMessage;
  const incoming = parser.incoming = new ParserIncomingMessage(socket);
  incoming.httpVersionMajor = versionMajor;
  incoming.httpVersionMinor = versionMinor;
  incoming.httpVersion = `${versionMajor}.${versionMinor}`;
  incoming.url = url;
  incoming.upgrade = upgrade;
  var n = headers.length;
  // If parser.maxHeaderPairs <= 0 assume that there's no limit.
  if (parser.maxHeaderPairs > 0)
    n = Math.min(n, parser.maxHeaderPairs);
  incoming._addHeaderLines(headers, n);
  if (typeof method === 'number') {
    // server only
    incoming.method = methods[method];
  } else {
    // client only
    incoming.statusCode = statusCode;
    incoming.statusMessage = statusMessage;
  return parser.onIncoming(incoming, shouldKeepAlive);
function parserOnBody(b, start, len) {
  const stream = this.incoming;
  // If the stream has already been removed, then drop it.
  if (stream === null)
    return;
  // Pretend this was the result of a stream._read call.
  if (len > 0 && !stream._dumped) {
    var slice = b.slice(start, start + len);
    var ret = stream.push(slice);
    if (!ret)
      readStop(this.socket);
function parserOnMessageComplete() {
  const parser = this;
  const stream = parser.incoming;
  if (stream !== null) {
    stream.complete = true;
    // Emit any trailing headers.
    const headers = parser._headers;
    if (headers.length) {
      stream._addHeaderLines(headers, headers.length);
      parser._headers = [];
      parser._url = '';
    }
    // For emit end event
    stream.push(null);
  // Force to read the next incoming message
  readStart(parser.socket);
const parsers = new FreeList('parsers', 1000, function parsersCb() {
  const parser = new HTTPParser();
  cleanParser(parser);
  parser.onIncoming = null;
  parser[kOnHeaders] = parserOnHeaders;
  parser[kOnHeadersComplete] = parserOnHeadersComplete;
  parser[kOnBody] = parserOnBody;
  parser[kOnMessageComplete] = parserOnMessageComplete;
  return parser;
function closeParserInstance(parser) { parser.close(); }
// Free the parser and also break any links that it
// might have to any other things.
// TODO: All parser data should be attached to a
// single object, so that it can be easily cleaned
// up by doing `parser.data = {}`, which should
// be done in FreeList.free.  `parsers.free(parser)`
// should be all that is needed.
function freeParser(parser, req, socket) {
  if (parser) {
    if (parser._consumed)
      parser.unconsume();
    cleanParser(parser);
    if (parsers.free(parser) === false) {
      // Make sure the parser's stack has unwound before deleting the
      // corresponding C++ object through .close().
      setImmediate(closeParserInstance, parser);
    } else {
      // Since the Parser destructor isn't going to run the destroy() callbacks
      // it needs to be triggered manually.
      parser.free();
    }
  if (req) {
    req.parser = null;
  if (socket) {
    socket.parser = null;
function httpSocketSetup(socket) {
  socket.removeListener('drain', ondrain);
  socket.on('drain', ondrain);
const tokenRegExp = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/;
 * Verifies that the given val is a valid HTTP token
 * per the rules defined in RFC 7230
 * See https://tools.ietf.org/html/rfc7230#section-3.2.6
function checkIsHttpToken(val) {
  return tokenRegExp.test(val);
const headerCharRegex = /[^\t\x20-\x7e\x80-\xff]/;
 * True if val contains an invalid field-vchar
 *  field-value    = *( field-content / obs-fold )
 *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 *  field-vchar    = VCHAR / obs-text
function checkInvalidHeaderChar(val) {
  return headerCharRegex.test(val);
function cleanParser(parser) {
  parser._headers = [];
  parser._url = '';
  parser.socket = null;
  parser.incoming = null;
  parser.outgoing = null;
  parser.maxHeaderPairs = MAX_HEADER_PAIRS;
  parser[kOnExecute] = null;
  parser._consumed = false;
function prepareError(err, parser, rawPacket) {
  err.rawPacket = rawPacket || parser.getCurrentBuffer();
  if (typeof err.reason === 'string')
    err.message = `Parse Error: ${err.reason}`;
module.exports = {
  _checkInvalidHeaderChar: checkInvalidHeaderChar,
  _checkIsHttpToken: checkIsHttpToken,
  chunkExpression: /(?:^|\W)chunked(?:$|\W)/i,
  continueExpression: /(?:^|\W)100-continue(?:$|\W)/i,
  CRLF: '\r\n',
  debug,
  freeParser,
  httpSocketSetup,
  methods,
  parsers,
  kIncomingMessage,
  HTTPParser,
  prepareError,
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const Stream = require('stream');
function readStart(socket) {
  if (socket && !socket._paused && socket.readable)
    socket.resume();
function readStop(socket) {
  if (socket)
    socket.pause();
/* Abstract base class for ServerRequest and ClientResponse. */
function IncomingMessage(socket) {
  Stream.Readable.call(this);
  this._readableState.readingMore = true;
  this.socket = socket;
  this.connection = socket;
  this.httpVersionMajor = null;
  this.httpVersionMinor = null;
  this.httpVersion = null;
  this.complete = false;
  this.headers = {};
  this.rawHeaders = [];
  this.trailers = {};
  this.rawTrailers = [];
  this.readable = true;
  this.aborted = false;
  this.upgrade = null;
  // request (server) only
  this.url = '';
  this.method = null;
  // response (client) only
  this.statusCode = null;
  this.statusMessage = null;
  this.client = socket;
  this._consuming = false;
  // Flag for when we decide that this message cannot possibly be
  // read by the user, so there's no point continuing to handle it.
  this._dumped = false;
Object.setPrototypeOf(IncomingMessage.prototype, Stream.Readable.prototype);
Object.setPrototypeOf(IncomingMessage, Stream.Readable);
IncomingMessage.prototype.setTimeout = function setTimeout(msecs, callback) {
  if (callback)
    this.on('timeout', callback);
  this.socket.setTimeout(msecs);
  return this;
IncomingMessage.prototype._read = function _read(n) {
  if (!this._consuming) {
    this._readableState.readingMore = false;
    this._consuming = true;
  // We actually do almost nothing here, because the parserOnBody
  // function fills up our internal buffer directly.  However, we
  // do need to unpause the underlying socket so that it flows.
  if (this.socket.readable)
    readStart(this.socket);
// It's possible that the socket will be destroyed, and removed from
// any messages, before ever calling this.  In that case, just skip
// it, since something else is destroying this connection anyway.
IncomingMessage.prototype.destroy = function destroy(error) {
  if (this.socket)
    this.socket.destroy(error);
IncomingMessage.prototype._addHeaderLines = _addHeaderLines;
function _addHeaderLines(headers, n) {
  if (headers && headers.length) {
    var dest;
    if (this.complete) {
      this.rawTrailers = headers;
      dest = this.trailers;
    } else {
      this.rawHeaders = headers;
      dest = this.headers;
    }
    for (var i = 0; i < n; i += 2) {
      this._addHeaderLine(headers[i], headers[i + 1], dest);
    }
// This function is used to help avoid the lowercasing of a field name if it
// matches a 'traditional cased' version of a field name. It then returns the
// lowercased name to both avoid calling toLowerCase() a second time and to
// indicate whether the field was a 'no duplicates' field. If a field is not a
// 'no duplicates' field, a `0` byte is prepended as a flag. The one exception
// to this is the Set-Cookie header which is indicated by a `1` byte flag, since
// it is an 'array' field and thus is treated differently in _addHeaderLines().
// TODO: perhaps http_parser could be returning both raw and lowercased versions
// of known header names to avoid us having to call toLowerCase() for those
// headers.
function matchKnownFields(field, lowercased) {
  switch (field.length) {
    case 3:
      if (field === 'Age' || field === 'age') return 'age';
      break;
    case 4:
      if (field === 'Host' || field === 'host') return 'host';
      if (field === 'From' || field === 'from') return 'from';
      if (field === 'ETag' || field === 'etag') return 'etag';
      if (field === 'Date' || field === 'date') return '\u0000date';
      if (field === 'Vary' || field === 'vary') return '\u0000vary';
      break;
    case 6:
      if (field === 'Server' || field === 'server') return 'server';
      if (field === 'Cookie' || field === 'cookie') return '\u0002cookie';
      if (field === 'Origin' || field === 'origin') return '\u0000origin';
      if (field === 'Expect' || field === 'expect') return '\u0000expect';
      if (field === 'Accept' || field === 'accept') return '\u0000accept';
      break;
    case 7:
      if (field === 'Referer' || field === 'referer') return 'referer';
      if (field === 'Expires' || field === 'expires') return 'expires';
      if (field === 'Upgrade' || field === 'upgrade') return '\u0000upgrade';
      break;
    case 8:
      if (field === 'Location' || field === 'location')
        return 'location';
      if (field === 'If-Match' || field === 'if-match')
        return '\u0000if-match';
      break;
    case 10:
      if (field === 'User-Agent' || field === 'user-agent')
        return 'user-agent';
      if (field === 'Set-Cookie' || field === 'set-cookie')
        return '\u0001';
      if (field === 'Connection' || field === 'connection')
        return '\u0000connection';
      break;
    case 11:
      if (field === 'Retry-After' || field === 'retry-after')
        return 'retry-after';
      break;
    case 12:
      if (field === 'Content-Type' || field === 'content-type')
        return 'content-type';
      if (field === 'Max-Forwards' || field === 'max-forwards')
        return 'max-forwards';
      break;
    case 13:
      if (field === 'Authorization' || field === 'authorization')
        return 'authorization';
      if (field === 'Last-Modified' || field === 'last-modified')
        return 'last-modified';
      if (field === 'Cache-Control' || field === 'cache-control')
        return '\u0000cache-control';
      if (field === 'If-None-Match' || field === 'if-none-match')
        return '\u0000if-none-match';
      break;
    case 14:
      if (field === 'Content-Length' || field === 'content-length')
        return 'content-length';
      break;
    case 15:
      if (field === 'Accept-Encoding' || field === 'accept-encoding')
        return '\u0000accept-encoding';
      if (field === 'Accept-Language' || field === 'accept-language')
        return '\u0000accept-language';
      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')
        return '\u0000x-forwarded-for';
      break;
    case 16:
      if (field === 'Content-Encoding' || field === 'content-encoding')
        return '\u0000content-encoding';
      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')
        return '\u0000x-forwarded-host';
      break;
    case 17:
      if (field === 'If-Modified-Since' || field === 'if-modified-since')
        return 'if-modified-since';
      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')
        return '\u0000transfer-encoding';
      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')
        return '\u0000x-forwarded-proto';
      break;
    case 19:
      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')
        return 'proxy-authorization';
      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')
        return 'if-unmodified-since';
      break;
  if (lowercased) {
    return '\u0000' + field;
  } else {
    return matchKnownFields(field.toLowerCase(), true);
// Add the given (field, value) pair to the message
// Per RFC2616, section 4.2 it is acceptable to join multiple instances of the
// same header with a ', ' if the header in question supports specification of
// multiple values this way. The one exception to this is the Cookie header,
// which has multiple values joined with a '; ' instead. If a header's values
// cannot be joined in either of these ways, we declare the first instance the
// winner and drop the second. Extended header fields (those beginning with
// 'x-') are always joined.
IncomingMessage.prototype._addHeaderLine = _addHeaderLine;
function _addHeaderLine(field, value, dest) {
  field = matchKnownFields(field);
  const flag = field.charCodeAt(0);
  if (flag === 0 || flag === 2) {
    field = field.slice(1);
    // Make a delimited list
    if (typeof dest[field] === 'string') {
      dest[field] += (flag === 0 ? ', ' : '; ') + value;
    } else {
      dest[field] = value;
    }
  } else if (flag === 1) {
    // Array header -- only Set-Cookie at the moment
    if (dest['set-cookie'] !== undefined) {
      dest['set-cookie'].push(value);
    } else {
      dest['set-cookie'] = [value];
    }
  } else if (dest[field] === undefined) {
    // Drop duplicates
    dest[field] = value;
// Call this instead of resume() if we want to just
// dump all the data to /dev/null
IncomingMessage.prototype._dump = function _dump() {
  if (!this._dumped) {
    this._dumped = true;
    // If there is buffered data, it may trigger 'data' events.
    // Remove 'data' event listeners explicitly.
    this.removeAllListeners('data');
    this.resume();
module.exports = {
  IncomingMessage,
  readStart,
  readStop
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object, ObjectPrototype } = primordials;
const assert = require('internal/assert');
const Stream = require('stream');
const internalUtil = require('internal/util');
const { outHeadersKey, utcDate } = require('internal/http');
const { Buffer } = require('buffer');
const common = require('_http_common');
const checkIsHttpToken = common._checkIsHttpToken;
const checkInvalidHeaderChar = common._checkInvalidHeaderChar;
const {
  defaultTriggerAsyncIdScope,
  symbols: { async_id_symbol }
} = require('internal/async_hooks');
const {
  codes: {
    ERR_HTTP_HEADERS_SENT,
    ERR_HTTP_INVALID_HEADER_VALUE,
    ERR_HTTP_TRAILER_INVALID,
    ERR_INVALID_HTTP_TOKEN,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_CHAR,
    ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_WRITE_AFTER_END
  },
  hideStackFrames
} = require('internal/errors');
const { validateString } = require('internal/validators');
const { CRLF, debug } = common;
const kIsCorked = Symbol('isCorked');
const RE_CONN_CLOSE = /(?:^|\W)close(?:$|\W)/i;
const RE_TE_CHUNKED = common.chunkExpression;
// isCookieField performs a case-insensitive comparison of a provided string
// against the word "cookie." As of V8 6.6 this is faster than handrolling or
// using a case-insensitive RegExp.
function isCookieField(s) {
  return s.length === 6 && s.toLowerCase() === 'cookie';
function noopPendingOutput(amount) {}
function OutgoingMessage() {
  Stream.call(this);
  // Queue that holds all currently pending data, until the response will be
  // assigned to the socket (until it will its turn in the HTTP pipeline).
  this.outputData = [];
  // `outputSize` is an approximate measure of how much data is queued on this
  // response. `_onPendingData` will be invoked to update similar global
  // per-connection counter. That counter will be used to pause/unpause the
  // TCP socket and HTTP Parser and thus handle the backpressure.
  this.outputSize = 0;
  this.writable = true;
  this._last = false;
  this.chunkedEncoding = false;
  this.shouldKeepAlive = true;
  this.useChunkedEncodingByDefault = true;
  this.sendDate = false;
  this._removedConnection = false;
  this._removedContLen = false;
  this._removedTE = false;
  this._contentLength = null;
  this._hasBody = true;
  this._trailer = '';
  this.finished = false;
  this._headerSent = false;
  this[kIsCorked] = false;
  this.socket = null;
  this.connection = null;
  this._header = null;
  this[outHeadersKey] = null;
  this._onPendingData = noopPendingOutput;
Object.setPrototypeOf(OutgoingMessage.prototype, Stream.prototype);
Object.setPrototypeOf(OutgoingMessage, Stream);
Object.defineProperty(OutgoingMessage.prototype, 'writableFinished', {
  get: function() {
    return (
      this.finished &&
      this.outputSize === 0 &&
      (!this.socket || this.socket.writableLength === 0)
    );
Object.defineProperty(OutgoingMessage.prototype, '_headers', {
  get: internalUtil.deprecate(function() {
    return this.getHeaders();
  }, 'OutgoingMessage.prototype._headers is deprecated', 'DEP0066'),
  set: internalUtil.deprecate(function(val) {
    if (val == null) {
      this[outHeadersKey] = null;
    } else if (typeof val === 'object') {
      const headers = this[outHeadersKey] = Object.create(null);
      const keys = Object.keys(val);
      for (var i = 0; i < keys.length; ++i) {
        const name = keys[i];
        headers[name.toLowerCase()] = [name, val[name]];
      }
    }
  }, 'OutgoingMessage.prototype._headers is deprecated', 'DEP0066')
Object.defineProperty(OutgoingMessage.prototype, '_headerNames', {
  get: internalUtil.deprecate(function() {
    const headers = this[outHeadersKey];
    if (headers !== null) {
      const out = Object.create(null);
      const keys = Object.keys(headers);
      for (var i = 0; i < keys.length; ++i) {
        const key = keys[i];
        const val = headers[key][0];
        out[key] = val;
      }
      return out;
    }
    return null;
  }, 'OutgoingMessage.prototype._headerNames is deprecated', 'DEP0066'),
  set: internalUtil.deprecate(function(val) {
    if (typeof val === 'object' && val !== null) {
      const headers = this[outHeadersKey];
      if (!headers)
        return;
      const keys = Object.keys(val);
      for (var i = 0; i < keys.length; ++i) {
        const header = headers[keys[i]];
        if (header)
          header[0] = val[keys[i]];
      }
    }
  }, 'OutgoingMessage.prototype._headerNames is deprecated', 'DEP0066')
OutgoingMessage.prototype._renderHeaders = function _renderHeaders() {
  if (this._header) {
    throw new ERR_HTTP_HEADERS_SENT('render');
  const headersMap = this[outHeadersKey];
  const headers = {};
  if (headersMap !== null) {
    const keys = Object.keys(headersMap);
    for (var i = 0, l = keys.length; i < l; i++) {
      const key = keys[i];
      headers[headersMap[key][0]] = headersMap[key][1];
    }
  return headers;
OutgoingMessage.prototype.setTimeout = function setTimeout(msecs, callback) {
  if (callback) {
    this.on('timeout', callback);
  if (!this.socket) {
    this.once('socket', function socketSetTimeoutOnConnect(socket) {
      socket.setTimeout(msecs);
    });
  } else {
    this.socket.setTimeout(msecs);
  return this;
// It's possible that the socket will be destroyed, and removed from
// any messages, before ever calling this.  In that case, just skip
// it, since something else is destroying this connection anyway.
OutgoingMessage.prototype.destroy = function destroy(error) {
  if (this.socket) {
    this.socket.destroy(error);
  } else {
    this.once('socket', function socketDestroyOnConnect(socket) {
      socket.destroy(error);
    });
// This abstract either writing directly to the socket or buffering it.
OutgoingMessage.prototype._send = function _send(data, encoding, callback) {
  // This is a shameful hack to get the headers and first body chunk onto
  // the same packet. Future versions of Node are going to take care of
  // this at a lower level and in a more general way.
  if (!this._headerSent) {
    if (typeof data === 'string' &&
        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {
      data = this._header + data;
    } else {
      var header = this._header;
      if (this.outputData.length === 0) {
        this.outputData = [{
          data: header,
          encoding: 'latin1',
          callback: null
        }];
      } else {
        this.outputData.unshift({
          data: header,
          encoding: 'latin1',
          callback: null
        });
      }
      this.outputSize += header.length;
      this._onPendingData(header.length);
    }
    this._headerSent = true;
  return this._writeRaw(data, encoding, callback);
OutgoingMessage.prototype._writeRaw = _writeRaw;
function _writeRaw(data, encoding, callback) {
  const conn = this.connection;
  if (conn && conn.destroyed) {
    // The socket was destroyed. If we're still trying to write to it,
    // then we haven't gotten the 'close' event yet.
    return false;
  if (typeof encoding === 'function') {
    callback = encoding;
    encoding = null;
  if (conn && conn._httpMessage === this && conn.writable && !conn.destroyed) {
    // There might be pending data in the this.output buffer.
    if (this.outputData.length) {
      this._flushOutput(conn);
    }
    // Directly write to socket.
    return conn.write(data, encoding, callback);
  // Buffer, as long as we're not destroyed.
  this.outputData.push({ data, encoding, callback });
  this.outputSize += data.length;
  this._onPendingData(data.length);
  return false;
OutgoingMessage.prototype._storeHeader = _storeHeader;
function _storeHeader(firstLine, headers) {
  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\r\n'
  // in the case of response it is: 'HTTP/1.1 200 OK\r\n'
  const state = {
    connection: false,
    contLen: false,
    te: false,
    date: false,
    expect: false,
    trailer: false,
    header: firstLine
  };
  if (headers) {
    if (headers === this[outHeadersKey]) {
      for (const key in headers) {
        const entry = headers[key];
        processHeader(this, state, entry[0], entry[1], false);
      }
    } else if (Array.isArray(headers)) {
      for (const entry of headers) {
        processHeader(this, state, entry[0], entry[1], true);
      }
    } else {
      for (const key in headers) {
        if (ObjectPrototype.hasOwnProperty(headers, key)) {
          processHeader(this, state, key, headers[key], true);
        }
      }
    }
  let { header } = state;
  // Date header
  if (this.sendDate && !state.date) {
    header += 'Date: ' + utcDate() + CRLF;
  // Force the connection to close when the response is a 204 No Content or
  // a 304 Not Modified and the user has set a "Transfer-Encoding: chunked"
  // header.
  //
  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but
  // node.js used to send out a zero chunk anyway to accommodate clients
  // that don't have special handling for those responses.
  //
  // It was pointed out that this might confuse reverse proxies to the point
  // of creating security liabilities, so suppress the zero chunk and force
  // the connection to close.
  if (this.chunkedEncoding && (this.statusCode === 204 ||
                               this.statusCode === 304)) {
    debug(this.statusCode + ' response should not use chunked encoding,' +
          ' closing connection.');
    this.chunkedEncoding = false;
    this.shouldKeepAlive = false;
  // keep-alive logic
  if (this._removedConnection) {
    this._last = true;
    this.shouldKeepAlive = false;
  } else if (!state.connection) {
    const shouldSendKeepAlive = this.shouldKeepAlive &&
        (state.contLen || this.useChunkedEncodingByDefault || this.agent);
    if (shouldSendKeepAlive) {
      header += 'Connection: keep-alive\r\n';
    } else {
      this._last = true;
      header += 'Connection: close\r\n';
    }
  if (!state.contLen && !state.te) {
    if (!this._hasBody) {
      // Make sure we don't end the 0\r\n\r\n at the end of the message.
      this.chunkedEncoding = false;
    } else if (!this.useChunkedEncodingByDefault) {
      this._last = true;
    } else if (!state.trailer &&
               !this._removedContLen &&
               typeof this._contentLength === 'number') {
      header += 'Content-Length: ' + this._contentLength + CRLF;
    } else if (!this._removedTE) {
      header += 'Transfer-Encoding: chunked\r\n';
      this.chunkedEncoding = true;
    } else {
      // We should only be able to get here if both Content-Length and
      // Transfer-Encoding are removed by the user.
      // See: test/parallel/test-http-remove-header-stays-removed.js
      debug('Both Content-Length and Transfer-Encoding are removed');
    }
  // Test non-chunked message does not have trailer header set,
  // message will be terminated by the first empty line after the
  // header fields, regardless of the header fields present in the
  // message, and thus cannot contain a message body or 'trailers'.
  if (this.chunkedEncoding !== true && state.trailer) {
    throw new ERR_HTTP_TRAILER_INVALID();
  this._header = header + CRLF;
  this._headerSent = false;
  // Wait until the first body chunk, or close(), is sent to flush,
  // UNLESS we're sending Expect: 100-continue.
  if (state.expect) this._send('');
function processHeader(self, state, key, value, validate) {
  if (validate)
    validateHeaderName(key);
  if (Array.isArray(value)) {
    if (value.length < 2 || !isCookieField(key)) {
      for (var i = 0; i < value.length; i++)
        storeHeader(self, state, key, value[i], validate);
      return;
    }
    value = value.join('; ');
  storeHeader(self, state, key, value, validate);
function storeHeader(self, state, key, value, validate) {
  if (validate)
    validateHeaderValue(key, value);
  state.header += key + ': ' + value + CRLF;
  matchHeader(self, state, key, value);
function matchHeader(self, state, field, value) {
  if (field.length < 4 || field.length > 17)
    return;
  field = field.toLowerCase();
  switch (field) {
    case 'connection':
      state.connection = true;
      self._removedConnection = false;
      if (RE_CONN_CLOSE.test(value))
        self._last = true;
      else
        self.shouldKeepAlive = true;
      break;
    case 'transfer-encoding':
      state.te = true;
      self._removedTE = false;
      if (RE_TE_CHUNKED.test(value)) self.chunkedEncoding = true;
      break;
    case 'content-length':
      state.contLen = true;
      self._removedContLen = false;
      break;
    case 'date':
    case 'expect':
    case 'trailer':
      state[field] = true;
      break;
const validateHeaderName = hideStackFrames((name) => {
  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {
    throw new ERR_INVALID_HTTP_TOKEN('Header name', name);
const validateHeaderValue = hideStackFrames((name, value) => {
  if (value === undefined) {
    throw new ERR_HTTP_INVALID_HEADER_VALUE(value, name);
  if (checkInvalidHeaderChar(value)) {
    debug('Header "%s" contains invalid characters', name);
    throw new ERR_INVALID_CHAR('header content', name);
OutgoingMessage.prototype.setHeader = function setHeader(name, value) {
  if (this._header) {
    throw new ERR_HTTP_HEADERS_SENT('set');
  validateHeaderName(name);
  validateHeaderValue(name, value);
  let headers = this[outHeadersKey];
  if (headers === null)
    this[outHeadersKey] = headers = Object.create(null);
  headers[name.toLowerCase()] = [name, value];
OutgoingMessage.prototype.getHeader = function getHeader(name) {
  validateString(name, 'name');
  const headers = this[outHeadersKey];
  if (headers === null)
    return;
  const entry = headers[name.toLowerCase()];
  return entry && entry[1];
// Returns an array of the names of the current outgoing headers.
OutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {
  return this[outHeadersKey] !== null ? Object.keys(this[outHeadersKey]) : [];
// Returns a shallow copy of the current outgoing headers.
OutgoingMessage.prototype.getHeaders = function getHeaders() {
  const headers = this[outHeadersKey];
  const ret = Object.create(null);
  if (headers) {
    const keys = Object.keys(headers);
    for (var i = 0; i < keys.length; ++i) {
      const key = keys[i];
      const val = headers[key][1];
      ret[key] = val;
    }
  return ret;
OutgoingMessage.prototype.hasHeader = function hasHeader(name) {
  validateString(name, 'name');
  return this[outHeadersKey] !== null &&
    !!this[outHeadersKey][name.toLowerCase()];
OutgoingMessage.prototype.removeHeader = function removeHeader(name) {
  validateString(name, 'name');
  if (this._header) {
    throw new ERR_HTTP_HEADERS_SENT('remove');
  const key = name.toLowerCase();
  switch (key) {
    case 'connection':
      this._removedConnection = true;
      break;
    case 'content-length':
      this._removedContLen = true;
      break;
    case 'transfer-encoding':
      this._removedTE = true;
      break;
    case 'date':
      this.sendDate = false;
      break;
  if (this[outHeadersKey] !== null) {
    delete this[outHeadersKey][key];
OutgoingMessage.prototype._implicitHeader = function _implicitHeader() {
  this.emit('error', new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()'));
Object.defineProperty(OutgoingMessage.prototype, 'headersSent', {
  configurable: true,
  enumerable: true,
  get: function() { return !!this._header; }
const crlf_buf = Buffer.from('\r\n');
OutgoingMessage.prototype.write = function write(chunk, encoding, callback) {
  return write_(this, chunk, encoding, callback, false);
function write_(msg, chunk, encoding, callback, fromEnd) {
  if (msg.finished) {
    const err = new ERR_STREAM_WRITE_AFTER_END();
    const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;
    defaultTriggerAsyncIdScope(triggerAsyncId,
                               process.nextTick,
                               writeAfterEndNT,
                               msg,
                               err,
                               callback);
    return true;
  if (!msg._header) {
    msg._implicitHeader();
  if (!msg._hasBody) {
    debug('This type of response MUST NOT have a body. ' +
          'Ignoring write() calls.');
    if (callback) process.nextTick(callback);
    return true;
  if (!fromEnd && typeof chunk !== 'string' && !(chunk instanceof Buffer)) {
    throw new ERR_INVALID_ARG_TYPE('first argument',
                                   ['string', 'Buffer'], chunk);
  if (!fromEnd && msg.connection && !msg[kIsCorked]) {
    msg.connection.cork();
    msg[kIsCorked] = true;
    process.nextTick(connectionCorkNT, msg, msg.connection);
  var len, ret;
  if (msg.chunkedEncoding && chunk.length !== 0) {
    if (typeof chunk === 'string')
      len = Buffer.byteLength(chunk, encoding);
    else
      len = chunk.length;
    msg._send(len.toString(16), 'latin1', null);
    msg._send(crlf_buf, null, null);
    msg._send(chunk, encoding, null);
    ret = msg._send(crlf_buf, null, callback);
  } else {
    ret = msg._send(chunk, encoding, callback);
  debug('write ret = ' + ret);
  return ret;
function writeAfterEndNT(msg, err, callback) {
  msg.emit('error', err);
  if (callback) callback(err);
function connectionCorkNT(msg, conn) {
  msg[kIsCorked] = false;
  conn.uncork();
OutgoingMessage.prototype.addTrailers = function addTrailers(headers) {
  this._trailer = '';
  const keys = Object.keys(headers);
  const isArray = Array.isArray(headers);
  var field, value;
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    if (isArray) {
      field = headers[key][0];
      value = headers[key][1];
    } else {
      field = key;
      value = headers[key];
    }
    if (typeof field !== 'string' || !field || !checkIsHttpToken(field)) {
      throw new ERR_INVALID_HTTP_TOKEN('Trailer name', field);
    }
    if (checkInvalidHeaderChar(value)) {
      debug('Trailer "%s" contains invalid characters', field);
      throw new ERR_INVALID_CHAR('trailer content', field);
    }
    this._trailer += field + ': ' + value + CRLF;
function onFinish(outmsg) {
  outmsg.emit('finish');
OutgoingMessage.prototype.end = function end(chunk, encoding, callback) {
  if (typeof chunk === 'function') {
    callback = chunk;
    chunk = null;
  } else if (typeof encoding === 'function') {
    callback = encoding;
    encoding = null;
  if (this.finished) {
    return this;
  var uncork;
  if (chunk) {
    if (typeof chunk !== 'string' && !(chunk instanceof Buffer)) {
      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
    }
    if (!this._header) {
      if (typeof chunk === 'string')
        this._contentLength = Buffer.byteLength(chunk, encoding);
      else
        this._contentLength = chunk.length;
    }
    if (this.connection) {
      this.connection.cork();
      uncork = true;
    }
    write_(this, chunk, encoding, null, true);
  } else if (!this._header) {
    this._contentLength = 0;
    this._implicitHeader();
  if (typeof callback === 'function')
    this.once('finish', callback);
  const finish = onFinish.bind(undefined, this);
  if (this._hasBody && this.chunkedEncoding) {
    this._send('0\r\n' + this._trailer + '\r\n', 'latin1', finish);
  } else {
    // Force a flush, HACK.
    this._send('', 'latin1', finish);
  if (uncork)
    this.connection.uncork();
  this.finished = true;
  // There is the first message on the outgoing queue, and we've sent
  // everything to the socket.
  debug('outgoing message end.');
  if (this.outputData.length === 0 &&
      this.connection &&
      this.connection._httpMessage === this) {
    this._finish();
  return this;
OutgoingMessage.prototype._finish = function _finish() {
  assert(this.connection);
  this.emit('prefinish');
// This logic is probably a bit confusing. Let me explain a bit:
// In both HTTP servers and clients it is possible to queue up several
// outgoing messages. This is easiest to imagine in the case of a client.
// Take the following situation:
//    req1 = client.request('GET', '/');
//    req2 = client.request('POST', '/');
// When the user does
//   req2.write('hello world\n');
// it's possible that the first request has not been completely flushed to
// the socket yet. Thus the outgoing messages need to be prepared to queue
// up data internally before sending it on further to the socket's queue.
// This function, outgoingFlush(), is called by both the Server and Client
// to attempt to flush any pending messages out to the socket.
OutgoingMessage.prototype._flush = function _flush() {
  const socket = this.socket;
  var ret;
  if (socket && socket.writable) {
    // There might be remaining data in this.output; write it out
    ret = this._flushOutput(socket);
    if (this.finished) {
      // This is a queue to the server or client to bring in the next this.
      this._finish();
    } else if (ret) {
      // This is necessary to prevent https from breaking
      this.emit('drain');
    }
OutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {
  const outputLength = this.outputData.length;
  if (outputLength <= 0)
    return undefined;
  const outputData = this.outputData;
  socket.cork();
  let ret;
  for (var i = 0; i < outputLength; i++) {
    const { data, encoding, callback } = outputData[i];
    ret = socket.write(data, encoding, callback);
  socket.uncork();
  this.outputData = [];
  this._onPendingData(-this.outputSize);
  this.outputSize = 0;
  return ret;
OutgoingMessage.prototype.flushHeaders = function flushHeaders() {
  if (!this._header) {
    this._implicitHeader();
  // Force-flush the headers.
  this._send('');
OutgoingMessage.prototype.flush = internalUtil.deprecate(function() {
  this.flushHeaders();
}, 'OutgoingMessage.flush is deprecated. Use flushHeaders instead.', 'DEP0001');
OutgoingMessage.prototype.pipe = function pipe() {
  // OutgoingMessage should be write-only. Piping from it is disabled.
  this.emit('error', new ERR_STREAM_CANNOT_PIPE());
module.exports = {
  OutgoingMessage
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const net = require('net');
const assert = require('internal/assert');
const {
  parsers,
  freeParser,
  debug,
  CRLF,
  continueExpression,
  chunkExpression,
  httpSocketSetup,
  kIncomingMessage,
  HTTPParser,
  _checkInvalidHeaderChar: checkInvalidHeaderChar,
  prepareError,
} = require('_http_common');
const { OutgoingMessage } = require('_http_outgoing');
const {
  outHeadersKey,
  ondrain,
  nowDate,
  emitStatistics
} = require('internal/http');
const {
  defaultTriggerAsyncIdScope,
  getOrSetAsyncId
} = require('internal/async_hooks');
const { IncomingMessage } = require('_http_incoming');
const {
  ERR_HTTP_HEADERS_SENT,
  ERR_HTTP_INVALID_STATUS_CODE,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_CHAR
} = require('internal/errors').codes;
const Buffer = require('buffer').Buffer;
const {
  DTRACE_HTTP_SERVER_REQUEST,
  DTRACE_HTTP_SERVER_RESPONSE
} = require('internal/dtrace');
const { getOptionValue } = require('internal/options');
const { observerCounts, constants } = internalBinding('performance');
const { NODE_PERFORMANCE_ENTRY_TYPE_HTTP } = constants;
const kServerResponse = Symbol('ServerResponse');
const kServerResponseStatistics = Symbol('ServerResponseStatistics');
const kDefaultHttpServerTimeout =
  getOptionValue('--http-server-default-timeout');
const STATUS_CODES = {
  100: 'Continue',
  101: 'Switching Protocols',
  102: 'Processing',                 // RFC 2518, obsoleted by RFC 4918
  103: 'Early Hints',
  200: 'OK',
  201: 'Created',
  202: 'Accepted',
  203: 'Non-Authoritative Information',
  204: 'No Content',
  205: 'Reset Content',
  206: 'Partial Content',
  207: 'Multi-Status',               // RFC 4918
  208: 'Already Reported',
  226: 'IM Used',
  300: 'Multiple Choices',           // RFC 7231
  301: 'Moved Permanently',
  302: 'Found',
  303: 'See Other',
  304: 'Not Modified',
  305: 'Use Proxy',
  307: 'Temporary Redirect',
  308: 'Permanent Redirect',         // RFC 7238
  400: 'Bad Request',
  401: 'Unauthorized',
  402: 'Payment Required',
  403: 'Forbidden',
  404: 'Not Found',
  405: 'Method Not Allowed',
  406: 'Not Acceptable',
  407: 'Proxy Authentication Required',
  408: 'Request Timeout',
  409: 'Conflict',
  410: 'Gone',
  411: 'Length Required',
  412: 'Precondition Failed',
  413: 'Payload Too Large',
  414: 'URI Too Long',
  415: 'Unsupported Media Type',
  416: 'Range Not Satisfiable',
  417: 'Expectation Failed',
  418: 'I\'m a Teapot',              // RFC 7168
  421: 'Misdirected Request',
  422: 'Unprocessable Entity',       // RFC 4918
  423: 'Locked',                     // RFC 4918
  424: 'Failed Dependency',          // RFC 4918
  425: 'Unordered Collection',       // RFC 4918
  426: 'Upgrade Required',           // RFC 2817
  428: 'Precondition Required',      // RFC 6585
  429: 'Too Many Requests',          // RFC 6585
  431: 'Request Header Fields Too Large', // RFC 6585
  451: 'Unavailable For Legal Reasons',
  500: 'Internal Server Error',
  501: 'Not Implemented',
  502: 'Bad Gateway',
  503: 'Service Unavailable',
  504: 'Gateway Timeout',
  505: 'HTTP Version Not Supported',
  506: 'Variant Also Negotiates',    // RFC 2295
  507: 'Insufficient Storage',       // RFC 4918
  508: 'Loop Detected',
  509: 'Bandwidth Limit Exceeded',
  510: 'Not Extended',               // RFC 2774
  511: 'Network Authentication Required' // RFC 6585
const kOnExecute = HTTPParser.kOnExecute | 0;
class HTTPServerAsyncResource {
  constructor(type, socket) {
    this.type = type;
    this.socket = socket;
function ServerResponse(req) {
  OutgoingMessage.call(this);
  if (req.method === 'HEAD') this._hasBody = false;
  this.sendDate = true;
  this._sent100 = false;
  this._expect_continue = false;
  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {
    this.useChunkedEncodingByDefault = chunkExpression.test(req.headers.te);
    this.shouldKeepAlive = false;
  const httpObserverCount = observerCounts[NODE_PERFORMANCE_ENTRY_TYPE_HTTP];
  if (httpObserverCount > 0) {
    this[kServerResponseStatistics] = {
      startTime: process.hrtime()
    };
Object.setPrototypeOf(ServerResponse.prototype, OutgoingMessage.prototype);
Object.setPrototypeOf(ServerResponse, OutgoingMessage);
ServerResponse.prototype._finish = function _finish() {
  DTRACE_HTTP_SERVER_RESPONSE(this.connection);
  if (this[kServerResponseStatistics] !== undefined) {
    emitStatistics(this[kServerResponseStatistics]);
  OutgoingMessage.prototype._finish.call(this);
ServerResponse.prototype.statusCode = 200;
ServerResponse.prototype.statusMessage = undefined;
function onServerResponseClose() {
  // EventEmitter.emit makes a copy of the 'close' listeners array before
  // calling the listeners. detachSocket() unregisters onServerResponseClose
  // but if detachSocket() is called, directly or indirectly, by a 'close'
  // listener, onServerResponseClose is still in that copy of the listeners
  // array. That is, in the example below, b still gets called even though
  // it's been removed by a:
  //
  //   var EventEmitter = require('events');
  //   var obj = new EventEmitter();
  //   obj.on('event', a);
  //   obj.on('event', b);
  //   function a() { obj.removeListener('event', b) }
  //   function b() { throw "BAM!" }
  //   obj.emit('event');  // throws
  //
  // Ergo, we need to deal with stale 'close' events and handle the case
  // where the ServerResponse object has already been deconstructed.
  // Fortunately, that requires only a single if check. :-)
  if (this._httpMessage) this._httpMessage.emit('close');
ServerResponse.prototype.assignSocket = function assignSocket(socket) {
  assert(!socket._httpMessage);
  socket._httpMessage = this;
  socket.on('close', onServerResponseClose);
  this.socket = socket;
  this.connection = socket;
  this.emit('socket', socket);
  this._flush();
ServerResponse.prototype.detachSocket = function detachSocket(socket) {
  assert(socket._httpMessage === this);
  socket.removeListener('close', onServerResponseClose);
  socket._httpMessage = null;
  this.socket = this.connection = null;
ServerResponse.prototype.writeContinue = function writeContinue(cb) {
  this._writeRaw(`HTTP/1.1 100 Continue${CRLF}${CRLF}`, 'ascii', cb);
  this._sent100 = true;
ServerResponse.prototype.writeProcessing = function writeProcessing(cb) {
  this._writeRaw(`HTTP/1.1 102 Processing${CRLF}${CRLF}`, 'ascii', cb);
ServerResponse.prototype._implicitHeader = function _implicitHeader() {
  this.writeHead(this.statusCode);
ServerResponse.prototype.writeHead = writeHead;
function writeHead(statusCode, reason, obj) {
  const originalStatusCode = statusCode;
  statusCode |= 0;
  if (statusCode < 100 || statusCode > 999) {
    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);
  if (typeof reason === 'string') {
    // writeHead(statusCode, reasonPhrase[, headers])
    this.statusMessage = reason;
  } else {
    // writeHead(statusCode[, headers])
    if (!this.statusMessage)
      this.statusMessage = STATUS_CODES[statusCode] || 'unknown';
    obj = reason;
  this.statusCode = statusCode;
  var headers;
  if (this[outHeadersKey]) {
    // Slow-case: when progressive API and header fields are passed.
    var k;
    if (obj) {
      var keys = Object.keys(obj);
      for (var i = 0; i < keys.length; i++) {
        k = keys[i];
        if (k) this.setHeader(k, obj[k]);
      }
    }
    if (k === undefined && this._header) {
      throw new ERR_HTTP_HEADERS_SENT('render');
    }
    // Only progressive api is used
    headers = this[outHeadersKey];
  } else {
    // Only writeHead() called
    headers = obj;
  if (checkInvalidHeaderChar(this.statusMessage))
    throw new ERR_INVALID_CHAR('statusMessage');
  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}${CRLF}`;
  if (statusCode === 204 || statusCode === 304 ||
      (statusCode >= 100 && statusCode <= 199)) {
    // RFC 2616, 10.2.5:
    // The 204 response MUST NOT include a message-body, and thus is always
    // terminated by the first empty line after the header fields.
    // RFC 2616, 10.3.5:
    // The 304 response MUST NOT contain a message-body, and thus is always
    // terminated by the first empty line after the header fields.
    // RFC 2616, 10.1 Informational 1xx:
    // This class of status code indicates a provisional response,
    // consisting only of the Status-Line and optional headers, and is
    // terminated by an empty line.
    this._hasBody = false;
  // Don't keep alive connections where the client expects 100 Continue
  // but we sent a final status; they may put extra bytes on the wire.
  if (this._expect_continue && !this._sent100) {
    this.shouldKeepAlive = false;
  this._storeHeader(statusLine, headers);
  return this;
// Docs-only deprecated: DEP0063
ServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;
function Server(options, requestListener) {
  if (!(this instanceof Server)) return new Server(options, requestListener);
  if (typeof options === 'function') {
    requestListener = options;
    options = {};
  } else if (options == null || typeof options === 'object') {
    options = { ...options };
  } else {
    throw new ERR_INVALID_ARG_TYPE('options', 'object', options);
  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;
  this[kServerResponse] = options.ServerResponse || ServerResponse;
  net.Server.call(this, { allowHalfOpen: true });
  if (requestListener) {
    this.on('request', requestListener);
  // Similar option to this. Too lazy to write my own docs.
  // http://www.squid-cache.org/Doc/config/half_closed_clients/
  // http://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F
  this.httpAllowHalfOpen = false;
  this.on('connection', connectionListener);
  this.timeout = kDefaultHttpServerTimeout;
  this.keepAliveTimeout = 5000;
  this.maxHeadersCount = null;
  this.headersTimeout = 40 * 1000; // 40 seconds
Object.setPrototypeOf(Server.prototype, net.Server.prototype);
Object.setPrototypeOf(Server, net.Server);
Server.prototype.setTimeout = function setTimeout(msecs, callback) {
  this.timeout = msecs;
  if (callback)
    this.on('timeout', callback);
  return this;
function connectionListener(socket) {
  defaultTriggerAsyncIdScope(
    getOrSetAsyncId(socket), connectionListenerInternal, this, socket
  );
function connectionListenerInternal(server, socket) {
  debug('SERVER new http connection');
  httpSocketSetup(socket);
  // Ensure that the server property of the socket is correctly set.
  // See https://github.com/nodejs/node/issues/13435
  if (socket.server === null)
    socket.server = server;
  // If the user has added a listener to the server,
  // request, or response, then it's their responsibility.
  // otherwise, destroy on timeout by default
  if (server.timeout && typeof socket.setTimeout === 'function')
    socket.setTimeout(server.timeout);
  socket.on('timeout', socketOnTimeout);
  const parser = parsers.alloc();
  // TODO(addaleax): This doesn't play well with the
  // `async_hooks.currentResource()` proposal, see
  // https://github.com/nodejs/node/pull/21313
  parser.initialize(
    HTTPParser.REQUEST,
    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE', socket)
  );
  parser.socket = socket;
  // We are starting to wait for our headers.
  parser.parsingHeadersStart = nowDate();
  socket.parser = parser;
  // Propagate headers limit from server instance to parser
  if (typeof server.maxHeadersCount === 'number') {
    parser.maxHeaderPairs = server.maxHeadersCount << 1;
  const state = {
    onData: null,
    onEnd: null,
    onClose: null,
    onDrain: null,
    outgoing: [],
    incoming: [],
    // `outgoingData` is an approximate amount of bytes queued through all
    // inactive responses. If more data than the high watermark is queued - we
    // need to pause TCP socket/HTTP parser, and wait until the data will be
    // sent to the client.
    outgoingData: 0,
    keepAliveTimeoutSet: false
  };
  state.onData = socketOnData.bind(undefined, server, socket, parser, state);
  state.onEnd = socketOnEnd.bind(undefined, server, socket, parser, state);
  state.onClose = socketOnClose.bind(undefined, socket, state);
  state.onDrain = socketOnDrain.bind(undefined, socket, state);
  socket.on('data', state.onData);
  socket.on('error', socketOnError);
  socket.on('end', state.onEnd);
  socket.on('close', state.onClose);
  socket.on('drain', state.onDrain);
  parser.onIncoming = parserOnIncoming.bind(undefined, server, socket, state);
  // We are consuming socket, so it won't get any actual data
  socket.on('resume', onSocketResume);
  socket.on('pause', onSocketPause);
  // Overrides to unconsume on `data`, `readable` listeners
  socket.on = generateSocketListenerWrapper('on');
  socket.addListener = generateSocketListenerWrapper('addListener');
  socket.prependListener = generateSocketListenerWrapper('prependListener');
  // We only consume the socket if it has never been consumed before.
  if (socket._handle && socket._handle.isStreamBase &&
      !socket._handle._consumed) {
    parser._consumed = true;
    socket._handle._consumed = true;
    parser.consume(socket._handle);
  parser[kOnExecute] =
    onParserExecute.bind(undefined, server, socket, parser, state);
  socket._paused = false;
function updateOutgoingData(socket, state, delta) {
  state.outgoingData += delta;
  if (socket._paused &&
      state.outgoingData < socket.writableHighWaterMark) {
    return socketOnDrain(socket, state);
function socketOnDrain(socket, state) {
  const needPause = state.outgoingData > socket.writableHighWaterMark;
  // If we previously paused, then start reading again.
  if (socket._paused && !needPause) {
    socket._paused = false;
    if (socket.parser)
      socket.parser.resume();
    socket.resume();
function socketOnTimeout() {
  const req = this.parser && this.parser.incoming;
  const reqTimeout = req && !req.complete && req.emit('timeout', this);
  const res = this._httpMessage;
  const resTimeout = res && res.emit('timeout', this);
  const serverTimeout = this.server.emit('timeout', this);
  if (!reqTimeout && !resTimeout && !serverTimeout)
    this.destroy();
function socketOnClose(socket, state) {
  debug('server socket close');
  // Mark this parser as reusable
  if (socket.parser) {
    freeParser(socket.parser, null, socket);
  abortIncoming(state.incoming);
function abortIncoming(incoming) {
  while (incoming.length) {
    var req = incoming.shift();
    req.aborted = true;
    req.emit('aborted');
    req.emit('close');
  // Abort socket._httpMessage ?
function socketOnEnd(server, socket, parser, state) {
  const ret = parser.finish();
  if (ret instanceof Error) {
    debug('parse error');
    socketOnError.call(socket, ret);
    return;
  if (!server.httpAllowHalfOpen) {
    abortIncoming(state.incoming);
    if (socket.writable) socket.end();
  } else if (state.outgoing.length) {
    state.outgoing[state.outgoing.length - 1]._last = true;
  } else if (socket._httpMessage) {
    socket._httpMessage._last = true;
  } else if (socket.writable) {
    socket.end();
function socketOnData(server, socket, parser, state, d) {
  assert(!socket._paused);
  debug('SERVER socketOnData %d', d.length);
  const ret = parser.execute(d);
  onParserExecuteCommon(server, socket, parser, state, ret, d);
function onParserExecute(server, socket, parser, state, ret) {
  socket._unrefTimer();
  const start = parser.parsingHeadersStart;
  debug('SERVER socketOnParserExecute %d', ret);
  // If we have not parsed the headers, destroy the socket
  // after server.headersTimeout to protect from DoS attacks.
  // start === 0 means that we have parsed headers.
  if (start !== 0 && nowDate() - start > server.headersTimeout) {
    const serverTimeout = server.emit('timeout', socket);
    if (!serverTimeout)
      socket.destroy();
    return;
  onParserExecuteCommon(server, socket, parser, state, ret, undefined);
const noop = () => {};
const badRequestResponse = Buffer.from(
  `HTTP/1.1 400 ${STATUS_CODES[400]}${CRLF}` +
  `Connection: close${CRLF}${CRLF}`, 'ascii'
const requestHeaderFieldsTooLargeResponse = Buffer.from(
  `HTTP/1.1 431 ${STATUS_CODES[431]}${CRLF}` +
  `Connection: close${CRLF}${CRLF}`, 'ascii'
function socketOnError(e) {
  // Ignore further errors
  this.removeListener('error', socketOnError);
  this.on('error', noop);
  if (!this.server.emit('clientError', e, this)) {
    if (this.writable) {
      const response = e.code === 'HPE_HEADER_OVERFLOW' ?
        requestHeaderFieldsTooLargeResponse : badRequestResponse;
      this.write(response);
    }
    this.destroy(e);
function onParserExecuteCommon(server, socket, parser, state, ret, d) {
  resetSocketTimeout(server, socket, state);
  if (ret instanceof Error) {
    prepareError(ret, parser, d);
    ret.rawPacket = d || parser.getCurrentBuffer();
    debug('parse error', ret);
    socketOnError.call(socket, ret);
  } else if (parser.incoming && parser.incoming.upgrade) {
    // Upgrade or CONNECT
    var bytesParsed = ret;
    var req = parser.incoming;
    debug('SERVER upgrade or connect', req.method);
    if (!d)
      d = parser.getCurrentBuffer();
    socket.removeListener('data', state.onData);
    socket.removeListener('end', state.onEnd);
    socket.removeListener('close', state.onClose);
    socket.removeListener('drain', state.onDrain);
    socket.removeListener('drain', ondrain);
    socket.removeListener('error', socketOnError);
    unconsume(parser, socket);
    parser.finish();
    freeParser(parser, req, socket);
    parser = null;
    var eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';
    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {
      debug('SERVER have listener for %s', eventName);
      var bodyHead = d.slice(bytesParsed, d.length);
      socket.readableFlowing = null;
      server.emit(eventName, req, socket, bodyHead);
    } else {
      // Got CONNECT method, but have no handler.
      socket.destroy();
    }
  if (socket._paused && socket.parser) {
    // onIncoming paused the socket, we should pause the parser as well
    debug('pause parser');
    socket.parser.pause();
function resOnFinish(req, res, socket, state, server) {
  // Usually the first incoming element should be our request.  it may
  // be that in the case abortIncoming() was called that the incoming
  // array will be empty.
  assert(state.incoming.length === 0 || state.incoming[0] === req);
  state.incoming.shift();
  // Reset the .incoming property so that the request object can be gc'ed.
  if (socket.parser) socket.parser.incoming = null;
  // If the user never called req.read(), and didn't pipe() or
  // .resume() or .on('data'), then we call req._dump() so that the
  // bytes will be pulled off the wire.
  if (!req._consuming && !req._readableState.resumeScheduled)
    req._dump();
  res.detachSocket(socket);
  req.emit('close');
  process.nextTick(emitCloseNT, res);
  if (res._last) {
    if (typeof socket.destroySoon === 'function') {
      socket.destroySoon();
    } else {
      socket.end();
    }
  } else if (state.outgoing.length === 0) {
    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {
      socket.setTimeout(server.keepAliveTimeout);
      state.keepAliveTimeoutSet = true;
    }
  } else {
    // Start sending the next message
    var m = state.outgoing.shift();
    if (m) {
      m.assignSocket(socket);
    }
function emitCloseNT(self) {
  self.emit('close');
// The following callback is issued after the headers have been read on a
// new message. In this callback we setup the response object and pass it
// to the user.
function parserOnIncoming(server, socket, state, req, keepAlive) {
  resetSocketTimeout(server, socket, state);
  if (server.keepAliveTimeout > 0) {
    req.on('end', resetHeadersTimeoutOnReqEnd);
  // Set to zero to communicate that we have finished parsing.
  socket.parser.parsingHeadersStart = 0;
  if (req.upgrade) {
    req.upgrade = req.method === 'CONNECT' ||
                  server.listenerCount('upgrade') > 0;
    if (req.upgrade)
      return 2;
  state.incoming.push(req);
  // If the writable end isn't consuming, then stop reading
  // so that we don't become overwhelmed by a flood of
  // pipelined requests that may never be resolved.
  if (!socket._paused) {
    var ws = socket._writableState;
    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {
      socket._paused = true;
      // We also need to pause the parser, but don't do that until after
      // the call to execute, because we may still be processing the last
      // chunk.
      socket.pause();
    }
  const res = new server[kServerResponse](req);
  res._onPendingData = updateOutgoingData.bind(undefined, socket, state);
  res.shouldKeepAlive = keepAlive;
  DTRACE_HTTP_SERVER_REQUEST(req, socket);
  if (socket._httpMessage) {
    // There are already pending outgoing res, append.
    state.outgoing.push(res);
  } else {
    res.assignSocket(socket);
  // When we're finished writing the response, check if this is the last
  // response, if so destroy the socket.
  res.on('finish',
         resOnFinish.bind(undefined, req, res, socket, state, server));
  if (req.headers.expect !== undefined &&
      (req.httpVersionMajor === 1 && req.httpVersionMinor === 1)) {
    if (continueExpression.test(req.headers.expect)) {
      res._expect_continue = true;
      if (server.listenerCount('checkContinue') > 0) {
        server.emit('checkContinue', req, res);
      } else {
        res.writeContinue();
        server.emit('request', req, res);
      }
    } else if (server.listenerCount('checkExpectation') > 0) {
      server.emit('checkExpectation', req, res);
    } else {
      res.writeHead(417);
      res.end();
    }
  } else {
    server.emit('request', req, res);
  return 0;  // No special treatment.
function resetSocketTimeout(server, socket, state) {
  if (!state.keepAliveTimeoutSet)
    return;
  socket.setTimeout(server.timeout || 0);
  state.keepAliveTimeoutSet = false;
function onSocketResume() {
  // It may seem that the socket is resumed, but this is an enemy's trick to
  // deceive us! `resume` is emitted asynchronously, and may be called from
  // `incoming.readStart()`. Stop the socket again here, just to preserve the
  // state.
  //
  // We don't care about stream semantics for the consumed socket anyway.
  if (this._paused) {
    this.pause();
    return;
  if (this._handle && !this._handle.reading) {
    this._handle.reading = true;
    this._handle.readStart();
function onSocketPause() {
  if (this._handle && this._handle.reading) {
    this._handle.reading = false;
    this._handle.readStop();
function unconsume(parser, socket) {
  if (socket._handle) {
    if (parser._consumed)
      parser.unconsume();
    parser._consumed = false;
    socket.removeListener('pause', onSocketPause);
    socket.removeListener('resume', onSocketResume);
function generateSocketListenerWrapper(originalFnName) {
  return function socketListenerWrap(ev, fn) {
    const res = net.Socket.prototype[originalFnName].call(this, ev, fn);
    if (!this.parser) {
      this.on = net.Socket.prototype.on;
      this.addListener = net.Socket.prototype.addListener;
      this.prependListener = net.Socket.prototype.prependListener;
      return res;
    }
    if (ev === 'data' || ev === 'readable')
      unconsume(this.parser, this);
    return res;
  };
function resetHeadersTimeoutOnReqEnd() {
  debug('resetHeadersTimeoutOnReqEnd');
  const parser = this.socket.parser;
  // Parser can be null if the socket was destroyed
  // in that case, there is nothing to do.
  if (parser) {
    parser.parsingHeadersStart = nowDate();
module.exports = {
  STATUS_CODES,
  Server,
  ServerResponse,
  _connectionListener: connectionListener,
  kServerResponse
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
require('internal/util').assertCrypto();
const tls = require('tls');
const url = require('url');
const { Agent: HttpAgent } = require('_http_agent');
const {
  Server: HttpServer,
  _connectionListener,
  kServerResponse
} = require('_http_server');
const { ClientRequest } = require('_http_client');
const debug = require('internal/util/debuglog').debuglog('https');
const { URL, urlToOptions, searchParamsSymbol } = require('internal/url');
const { IncomingMessage, ServerResponse } = require('http');
const { kIncomingMessage } = require('_http_common');
const { getOptionValue } = require('internal/options');
const kDefaultHttpServerTimeout =
  getOptionValue('--http-server-default-timeout');
function Server(opts, requestListener) {
  if (!(this instanceof Server)) return new Server(opts, requestListener);
  if (typeof opts === 'function') {
    requestListener = opts;
    opts = undefined;
  opts = { ...opts };
  if (!opts.ALPNProtocols) {
    // http/1.0 is not defined as Protocol IDs in IANA
    // http://www.iana.org/assignments/tls-extensiontype-values
    //       /tls-extensiontype-values.xhtml#alpn-protocol-ids
    opts.ALPNProtocols = ['http/1.1'];
  this[kIncomingMessage] = opts.IncomingMessage || IncomingMessage;
  this[kServerResponse] = opts.ServerResponse || ServerResponse;
  tls.Server.call(this, opts, _connectionListener);
  this.httpAllowHalfOpen = false;
  if (requestListener) {
    this.addListener('request', requestListener);
  this.addListener('tlsClientError', function addListener(err, conn) {
    if (!this.emit('clientError', err, conn))
      conn.destroy(err);
  });
  this.timeout = kDefaultHttpServerTimeout;
  this.keepAliveTimeout = 5000;
  this.maxHeadersCount = null;
  this.headersTimeout = 40 * 1000; // 40 seconds
Object.setPrototypeOf(Server.prototype, tls.Server.prototype);
Object.setPrototypeOf(Server, tls.Server);
Server.prototype.setTimeout = HttpServer.prototype.setTimeout;
function createServer(opts, requestListener) {
  return new Server(opts, requestListener);
// HTTPS agents.
function createConnection(port, host, options) {
  if (port !== null && typeof port === 'object') {
    options = port;
  } else if (host !== null && typeof host === 'object') {
    options = host;
  } else if (options === null || typeof options !== 'object') {
    options = {};
  if (typeof port === 'number') {
    options.port = port;
  if (typeof host === 'string') {
    options.host = host;
  debug('createConnection', options);
  if (options._agentKey) {
    const session = this._getSession(options._agentKey);
    if (session) {
      debug('reuse session for %j', options._agentKey);
      options = {
        session,
        ...options
      };
    }
  const socket = tls.connect(options);
  if (options._agentKey) {
    // Cache new session for reuse
    socket.on('session', (session) => {
      this._cacheSession(options._agentKey, session);
    });
    // Evict session on error
    socket.once('close', (err) => {
      if (err)
        this._evictSession(options._agentKey);
    });
  return socket;
function Agent(options) {
  if (!(this instanceof Agent))
    return new Agent(options);
  HttpAgent.call(this, options);
  this.defaultPort = 443;
  this.protocol = 'https:';
  this.maxCachedSessions = this.options.maxCachedSessions;
  if (this.maxCachedSessions === undefined)
    this.maxCachedSessions = 100;
  this._sessionCache = {
    map: {},
    list: []
  };
Object.setPrototypeOf(Agent.prototype, HttpAgent.prototype);
Object.setPrototypeOf(Agent, HttpAgent);
Agent.prototype.createConnection = createConnection;
Agent.prototype.getName = function getName(options) {
  var name = HttpAgent.prototype.getName.call(this, options);
  name += ':';
  if (options.ca)
    name += options.ca;
  name += ':';
  if (options.cert)
    name += options.cert;
  name += ':';
  if (options.clientCertEngine)
    name += options.clientCertEngine;
  name += ':';
  if (options.ciphers)
    name += options.ciphers;
  name += ':';
  if (options.key)
    name += options.key;
  name += ':';
  if (options.pfx)
    name += options.pfx;
  name += ':';
  if (options.rejectUnauthorized !== undefined)
    name += options.rejectUnauthorized;
  name += ':';
  if (options.servername && options.servername !== options.host)
    name += options.servername;
  name += ':';
  if (options.minVersion)
    name += options.minVersion;
  name += ':';
  if (options.maxVersion)
    name += options.maxVersion;
  name += ':';
  if (options.secureProtocol)
    name += options.secureProtocol;
  name += ':';
  if (options.crl)
    name += options.crl;
  name += ':';
  if (options.honorCipherOrder !== undefined)
    name += options.honorCipherOrder;
  name += ':';
  if (options.ecdhCurve)
    name += options.ecdhCurve;
  name += ':';
  if (options.dhparam)
    name += options.dhparam;
  name += ':';
  if (options.secureOptions !== undefined)
    name += options.secureOptions;
  name += ':';
  if (options.sessionIdContext)
    name += options.sessionIdContext;
  return name;
Agent.prototype._getSession = function _getSession(key) {
  return this._sessionCache.map[key];
Agent.prototype._cacheSession = function _cacheSession(key, session) {
  // Cache is disabled
  if (this.maxCachedSessions === 0)
    return;
  // Fast case - update existing entry
  if (this._sessionCache.map[key]) {
    this._sessionCache.map[key] = session;
    return;
  // Put new entry
  if (this._sessionCache.list.length >= this.maxCachedSessions) {
    const oldKey = this._sessionCache.list.shift();
    debug('evicting %j', oldKey);
    delete this._sessionCache.map[oldKey];
  this._sessionCache.list.push(key);
  this._sessionCache.map[key] = session;
Agent.prototype._evictSession = function _evictSession(key) {
  const index = this._sessionCache.list.indexOf(key);
  if (index === -1)
    return;
  this._sessionCache.list.splice(index, 1);
  delete this._sessionCache.map[key];
const globalAgent = new Agent();
let urlWarningEmitted = false;
function request(...args) {
  let options = {};
  if (typeof args[0] === 'string') {
    const urlStr = args.shift();
    try {
      options = urlToOptions(new URL(urlStr));
    } catch (err) {
      options = url.parse(urlStr);
      if (!options.hostname) {
        throw err;
      }
      if (!urlWarningEmitted && !process.noDeprecation) {
        urlWarningEmitted = true;
        process.emitWarning(
          `The provided URL ${urlStr} is not a valid URL, and is supported ` +
          'in the https module solely for compatibility.',
          'DeprecationWarning', 'DEP0109');
      }
    }
  } else if (args[0] && args[0][searchParamsSymbol] &&
             args[0][searchParamsSymbol][searchParamsSymbol]) {
    // url.URL instance
    options = urlToOptions(args.shift());
  if (args[0] && typeof args[0] !== 'function') {
    Object.assign(options, args.shift());
  options._defaultAgent = module.exports.globalAgent;
  args.unshift(options);
  return new ClientRequest(...args);
function get(input, options, cb) {
  const req = request(input, options, cb);
  req.end();
  return req;
module.exports = {
  Agent,
  globalAgent,
  Server,
  createServer,
  get,
  request
'use strict';
const { JSON } = primordials;
const {
  ERR_INSPECTOR_ALREADY_CONNECTED,
  ERR_INSPECTOR_CLOSED,
  ERR_INSPECTOR_COMMAND,
  ERR_INSPECTOR_NOT_AVAILABLE,
  ERR_INSPECTOR_NOT_CONNECTED,
  ERR_INSPECTOR_NOT_ACTIVE,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_CALLBACK
} = require('internal/errors').codes;
const { hasInspector } = internalBinding('config');
if (!hasInspector)
  throw new ERR_INSPECTOR_NOT_AVAILABLE();
const EventEmitter = require('events');
const { validateString } = require('internal/validators');
const util = require('util');
const {
  Connection,
  open,
  url,
  waitForDebugger
} = internalBinding('inspector');
const connectionSymbol = Symbol('connectionProperty');
const messageCallbacksSymbol = Symbol('messageCallbacks');
const nextIdSymbol = Symbol('nextId');
const onMessageSymbol = Symbol('onMessage');
class Session extends EventEmitter {
  constructor() {
    super();
    this[connectionSymbol] = null;
    this[nextIdSymbol] = 1;
    this[messageCallbacksSymbol] = new Map();
  connect() {
    if (this[connectionSymbol])
      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');
    this[connectionSymbol] =
      new Connection((message) => this[onMessageSymbol](message));
  [onMessageSymbol](message) {
    const parsed = JSON.parse(message);
    try {
      if (parsed.id) {
        const callback = this[messageCallbacksSymbol].get(parsed.id);
        this[messageCallbacksSymbol].delete(parsed.id);
        if (callback) {
          if (parsed.error) {
            return callback(new ERR_INSPECTOR_COMMAND(parsed.error.code,
                                                      parsed.error.message));
          }
          callback(null, parsed.result);
        }
      } else {
        this.emit(parsed.method, parsed);
        this.emit('inspectorNotification', parsed);
      }
    } catch (error) {
      process.emitWarning(error);
    }
  post(method, params, callback) {
    validateString(method, 'method');
    if (!callback && util.isFunction(params)) {
      callback = params;
      params = null;
    }
    if (params && typeof params !== 'object') {
      throw new ERR_INVALID_ARG_TYPE('params', 'Object', params);
    }
    if (callback && typeof callback !== 'function') {
      throw new ERR_INVALID_CALLBACK(callback);
    }
    if (!this[connectionSymbol]) {
      throw new ERR_INSPECTOR_NOT_CONNECTED();
    }
    const id = this[nextIdSymbol]++;
    const message = { id, method };
    if (params) {
      message.params = params;
    }
    if (callback) {
      this[messageCallbacksSymbol].set(id, callback);
    }
    this[connectionSymbol].dispatch(JSON.stringify(message));
  disconnect() {
    if (!this[connectionSymbol])
      return;
    this[connectionSymbol].disconnect();
    this[connectionSymbol] = null;
    const remainingCallbacks = this[messageCallbacksSymbol].values();
    for (const callback of remainingCallbacks) {
      process.nextTick(callback, new ERR_INSPECTOR_CLOSED());
    }
    this[messageCallbacksSymbol].clear();
    this[nextIdSymbol] = 1;
function inspectorOpen(port, host, wait) {
  open(port, host);
  if (wait)
    waitForDebugger();
function inspectorWaitForDebugger() {
  if (!waitForDebugger())
    throw new ERR_INSPECTOR_NOT_ACTIVE();
module.exports = {
  open: inspectorOpen,
  close: process._debugEnd,
  url: url,
  waitForDebugger: inspectorWaitForDebugger,
  // This is dynamically added during bootstrap,
  // where the console from the VM is still available
  console: require('internal/util/inspector').consoleFromVM,
  Session
'use strict';
module.exports = require('internal/modules/cjs/loader');
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const EventEmitter = require('events');
const stream = require('stream');
const { inspect } = require('internal/util/inspect');
const debug = require('internal/util/debuglog').debuglog('net');
const { deprecate } = require('internal/util');
const {
  isIP,
  isIPv4,
  isIPv6,
  isLegalPort,
  normalizedArgsSymbol,
  makeSyncWrite
} = require('internal/net');
const assert = require('internal/assert');
const {
  UV_EADDRINUSE,
  UV_EINVAL
} = internalBinding('uv');
const { Buffer } = require('buffer');
const { guessHandleType } = internalBinding('util');
const { ShutdownWrap } = internalBinding('stream_wrap');
const {
  TCP,
  TCPConnectWrap,
  constants: TCPConstants
} = internalBinding('tcp_wrap');
const {
  Pipe,
  PipeConnectWrap,
  constants: PipeConstants
} = internalBinding('pipe_wrap');
const {
  newAsyncId,
  defaultTriggerAsyncIdScope,
  symbols: { async_id_symbol, owner_symbol }
} = require('internal/async_hooks');
const {
  writevGeneric,
  writeGeneric,
  onStreamRead,
  kAfterAsyncWrite,
  kHandle,
  kUpdateTimer,
  setStreamTimeout
} = require('internal/stream_base_commons');
const {
  codes: {
    ERR_INVALID_ADDRESS_FAMILY,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_ARG_VALUE,
    ERR_INVALID_FD_TYPE,
    ERR_INVALID_IP_ADDRESS,
    ERR_INVALID_OPT_VALUE,
    ERR_SERVER_ALREADY_LISTEN,
    ERR_SERVER_NOT_RUNNING,
    ERR_SOCKET_BAD_PORT,
    ERR_SOCKET_CLOSED
  },
  errnoException,
  exceptionWithHostPort,
  uvExceptionWithHostPort
} = require('internal/errors');
const { validateInt32, validateString } = require('internal/validators');
const kLastWriteQueueSize = Symbol('lastWriteQueueSize');
const {
  DTRACE_NET_SERVER_CONNECTION,
  DTRACE_NET_STREAM_END
} = require('internal/dtrace');
// Lazy loaded to improve startup performance.
let cluster;
let dns;
const { clearTimeout } = require('timers');
const { kTimeout } = require('internal/timers');
const DEFAULT_IPV4_ADDR = '0.0.0.0';
const DEFAULT_IPV6_ADDR = '::';
function noop() {}
function getFlags(ipv6Only) {
  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;
function createHandle(fd, is_server) {
  validateInt32(fd, 'fd', 0);
  const type = guessHandleType(fd);
  if (type === 'PIPE') {
    return new Pipe(
      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET
    );
  if (type === 'TCP') {
    return new TCP(
      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET
    );
  throw new ERR_INVALID_FD_TYPE(type);
function getNewAsyncId(handle) {
  return (!handle || typeof handle.getAsyncId !== 'function') ?
    newAsyncId() : handle.getAsyncId();
function isPipeName(s) {
  return typeof s === 'string' && toNumber(s) === false;
function createServer(options, connectionListener) {
  return new Server(options, connectionListener);
// Target API:
// var s = net.connect({port: 80, host: 'google.com'}, function() {
//   ...
// });
// There are various forms:
// connect(options, [cb])
// connect(port, [host], [cb])
// connect(path, [cb]);
function connect(...args) {
  const normalized = normalizeArgs(args);
  const options = normalized[0];
  debug('createConnection', normalized);
  const socket = new Socket(options);
  if (options.timeout) {
    socket.setTimeout(options.timeout);
  return socket.connect(normalized);
// Returns an array [options, cb], where options is an object,
// cb is either a function or null.
// Used to normalize arguments of Socket.prototype.connect() and
// Server.prototype.listen(). Possible combinations of parameters:
//   (options[...][, cb])
//   (path[...][, cb])
//   ([port][, host][...][, cb])
// For Socket.prototype.connect(), the [...] part is ignored
// For Server.prototype.listen(), the [...] part is [, backlog]
// but will not be handled here (handled in listen())
function normalizeArgs(args) {
  var arr;
  if (args.length === 0) {
    arr = [{}, null];
    arr[normalizedArgsSymbol] = true;
    return arr;
  const arg0 = args[0];
  var options = {};
  if (typeof arg0 === 'object' && arg0 !== null) {
    // (options[...][, cb])
    options = arg0;
  } else if (isPipeName(arg0)) {
    // (path[...][, cb])
    options.path = arg0;
  } else {
    // ([port][, host][...][, cb])
    options.port = arg0;
    if (args.length > 1 && typeof args[1] === 'string') {
      options.host = args[1];
    }
  const cb = args[args.length - 1];
  if (typeof cb !== 'function')
    arr = [options, null];
  else
    arr = [options, cb];
  arr[normalizedArgsSymbol] = true;
  return arr;
// Called when creating new Socket, or when re-using a closed Socket
function initSocketHandle(self) {
  self._undestroy();
  self._sockname = null;
  // Handle creation may be deferred to bind() or connect() time.
  if (self._handle) {
    self._handle[owner_symbol] = self;
    self._handle.onread = onStreamRead;
    self[async_id_symbol] = getNewAsyncId(self._handle);
const kBytesRead = Symbol('kBytesRead');
const kBytesWritten = Symbol('kBytesWritten');
function Socket(options) {
  if (!(this instanceof Socket)) return new Socket(options);
  this.connecting = false;
  // Problem with this is that users can supply their own handle, that may not
  // have _handle.getAsyncId(). In this case an[async_id_symbol] should
  // probably be supplied by async_hooks.
  this[async_id_symbol] = -1;
  this._hadError = false;
  this[kHandle] = null;
  this._parent = null;
  this._host = null;
  this[kLastWriteQueueSize] = 0;
  this[kTimeout] = null;
  if (typeof options === 'number')
    options = { fd: options }; // Legacy interface.
  else
    options = { ...options };
  options.readable = options.readable || false;
  options.writable = options.writable || false;
  const { allowHalfOpen } = options;
  // Prevent the "no-half-open enforcer" from being inherited from `Duplex`.
  options.allowHalfOpen = true;
  // For backwards compat do not emit close on destroy.
  options.emitClose = false;
  // Handle strings directly.
  options.decodeStrings = false;
  stream.Duplex.call(this, options);
  // Default to *not* allowing half open sockets.
  this.allowHalfOpen = Boolean(allowHalfOpen);
  if (options.handle) {
    this._handle = options.handle; // private
    this[async_id_symbol] = getNewAsyncId(this._handle);
  } else if (options.fd !== undefined) {
    const { fd } = options;
    let err;
    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not
    // a valid `PIPE` or `TCP` descriptor
    this._handle = createHandle(fd, false);
    err = this._handle.open(fd);
    // While difficult to fabricate, in some architectures
    // `open` may return an error code for valid file descriptors
    // which cannot be opened. This is difficult to test as most
    // un-openable fds will throw on `createHandle`
    if (err)
      throw errnoException(err, 'open');
    this[async_id_symbol] = this._handle.getAsyncId();
    if ((fd === 1 || fd === 2) &&
        (this._handle instanceof Pipe) &&
        process.platform === 'win32') {
      // Make stdout and stderr blocking on Windows
      err = this._handle.setBlocking(true);
      if (err)
        throw errnoException(err, 'setBlocking');
      this._writev = null;
      this._write = makeSyncWrite(fd);
      // makeSyncWrite adjusts this value like the original handle would, so
      // we need to let it do that by turning it into a writable, own property.
      Object.defineProperty(this._handle, 'bytesWritten', {
        value: 0, writable: true
      });
    }
  // Shut down the socket when we're finished with it.
  this.on('end', onReadableStreamEnd);
  initSocketHandle(this);
  this._pendingData = null;
  this._pendingEncoding = '';
  // If we have a handle, then start the flow of data into the
  // buffer.  if not, then this will happen when we connect
  if (this._handle && options.readable !== false) {
    if (options.pauseOnCreate) {
      // Stop the handle from reading and pause the stream
      this._handle.reading = false;
      this._handle.readStop();
      this.readableFlowing = false;
    } else if (!options.manualStart) {
      this.read(0);
    }
  // Reserve properties
  this.server = null;
  this._server = null;
  // Used after `.destroy()`
  this[kBytesRead] = 0;
  this[kBytesWritten] = 0;
Object.setPrototypeOf(Socket.prototype, stream.Duplex.prototype);
Object.setPrototypeOf(Socket, stream.Duplex);
// Refresh existing timeouts.
Socket.prototype._unrefTimer = function _unrefTimer() {
  for (var s = this; s !== null; s = s._parent) {
    if (s[kTimeout])
      s[kTimeout].refresh();
// The user has called .end(), and all the bytes have been
// sent out to the other side.
Socket.prototype._final = function(cb) {
  // If still connecting - defer handling `_final` until 'connect' will happen
  if (this.pending) {
    debug('_final: not yet connected');
    return this.once('connect', () => this._final(cb));
  if (!this._handle)
    return cb();
  debug('_final: not ended, call shutdown()');
  const req = new ShutdownWrap();
  req.oncomplete = afterShutdown;
  req.handle = this._handle;
  req.callback = cb;
  const err = this._handle.shutdown(req);
  if (err === 1)  // synchronous finish
    return afterShutdown.call(req, 0);
  else if (err !== 0)
    return this.destroy(errnoException(err, 'shutdown'));
function afterShutdown(status) {
  const self = this.handle[owner_symbol];
  debug('afterShutdown destroyed=%j', self.destroyed,
        self._readableState);
  this.callback();
  // Callback may come after call to destroy.
  if (self.destroyed)
    return;
  if (!self.readable || self._readableState.ended) {
    debug('readableState ended, destroying');
    self.destroy();
// Provide a better error message when we call end() as a result
// of the other side sending a FIN.  The standard 'write after end'
// is overly vague, and makes it seem like the user's code is to blame.
function writeAfterFIN(chunk, encoding, cb) {
  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  // eslint-disable-next-line no-restricted-syntax
  const er = new Error('This socket has been ended by the other party');
  er.code = 'EPIPE';
  process.nextTick(emitErrorNT, this, er);
  if (typeof cb === 'function') {
    defaultTriggerAsyncIdScope(this[async_id_symbol], process.nextTick, cb, er);
  return false;
Socket.prototype.setTimeout = setStreamTimeout;
Socket.prototype._onTimeout = function() {
  const handle = this._handle;
  const lastWriteQueueSize = this[kLastWriteQueueSize];
  if (lastWriteQueueSize > 0 && handle) {
    // `lastWriteQueueSize !== writeQueueSize` means there is
    // an active write in progress, so we suppress the timeout.
    const { writeQueueSize } = handle;
    if (lastWriteQueueSize !== writeQueueSize) {
      this[kLastWriteQueueSize] = writeQueueSize;
      this._unrefTimer();
      return;
    }
  debug('_onTimeout');
  this.emit('timeout');
Socket.prototype.setNoDelay = function(enable) {
  if (!this._handle) {
    this.once('connect',
              enable ? this.setNoDelay : () => this.setNoDelay(enable));
    return this;
  // Backwards compatibility: assume true when `enable` is omitted
  if (this._handle.setNoDelay)
    this._handle.setNoDelay(enable === undefined ? true : !!enable);
  return this;
Socket.prototype.setKeepAlive = function(setting, msecs) {
  if (!this._handle) {
    this.once('connect', () => this.setKeepAlive(setting, msecs));
    return this;
  if (this._handle.setKeepAlive)
    this._handle.setKeepAlive(setting, ~~(msecs / 1000));
  return this;
Socket.prototype.address = function() {
  return this._getsockname();
Object.defineProperty(Socket.prototype, '_connecting', {
  get: function() {
    return this.connecting;
Object.defineProperty(Socket.prototype, 'pending', {
  get() {
    return !this._handle || this.connecting;
  },
  configurable: true
Object.defineProperty(Socket.prototype, 'readyState', {
  get: function() {
    if (this.connecting) {
      return 'opening';
    } else if (this.readable && this.writable) {
      return 'open';
    } else if (this.readable && !this.writable) {
      return 'readOnly';
    } else if (!this.readable && this.writable) {
      return 'writeOnly';
    } else {
      return 'closed';
    }
Object.defineProperty(Socket.prototype, 'bufferSize', {
  get: function() { // eslint-disable-line getter-return
    if (this._handle) {
      return this[kLastWriteQueueSize] + this.writableLength;
    }
Object.defineProperty(Socket.prototype, kUpdateTimer, {
  get: function() {
    return this._unrefTimer;
// Just call handle.readStart until we have enough in the buffer
Socket.prototype._read = function(n) {
  debug('_read');
  if (this.connecting || !this._handle) {
    debug('_read wait for connection');
    this.once('connect', () => this._read(n));
  } else if (!this._handle.reading) {
    // Not already reading, start the flow
    debug('Socket._read readStart');
    this._handle.reading = true;
    var err = this._handle.readStart();
    if (err)
      this.destroy(errnoException(err, 'read'));
Socket.prototype.end = function(data, encoding, callback) {
  stream.Duplex.prototype.end.call(this, data, encoding, callback);
  DTRACE_NET_STREAM_END(this);
  return this;
// Called when the 'end' event is emitted.
function onReadableStreamEnd() {
  if (!this.allowHalfOpen) {
    this.write = writeAfterFIN;
    if (this.writable)
      this.end();
  if (!this.destroyed && !this.writable && !this.writableLength)
    this.destroy();
Socket.prototype.destroySoon = function() {
  if (this.writable)
    this.end();
  if (this.writableFinished)
    this.destroy();
  else
    this.once('finish', this.destroy);
Socket.prototype._destroy = function(exception, cb) {
  debug('destroy');
  this.connecting = false;
  this.readable = this.writable = false;
  for (var s = this; s !== null; s = s._parent) {
    clearTimeout(s[kTimeout]);
  debug('close');
  if (this._handle) {
    if (this !== process.stderr)
      debug('close handle');
    var isException = exception ? true : false;
    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`
    this[kBytesRead] = this._handle.bytesRead;
    this[kBytesWritten] = this._handle.bytesWritten;
    this._handle.close(() => {
      debug('emit close');
      this.emit('close', isException);
    });
    this._handle.onread = noop;
    this._handle = null;
    this._sockname = null;
  cb(exception);
  if (this._server) {
    debug('has server');
    this._server._connections--;
    if (this._server._emitCloseIfDrained) {
      this._server._emitCloseIfDrained();
    }
Socket.prototype._getpeername = function() {
  if (!this._peername) {
    if (!this._handle || !this._handle.getpeername) {
      return {};
    }
    var out = {};
    var err = this._handle.getpeername(out);
    if (err) return {};  // FIXME(bnoordhuis) Throw?
    this._peername = out;
  return this._peername;
function protoGetter(name, callback) {
  Object.defineProperty(Socket.prototype, name, {
    configurable: false,
    enumerable: true,
    get: callback
  });
protoGetter('bytesRead', function bytesRead() {
  return this._handle ? this._handle.bytesRead : this[kBytesRead];
protoGetter('remoteAddress', function remoteAddress() {
  return this._getpeername().address;
protoGetter('remoteFamily', function remoteFamily() {
  return this._getpeername().family;
protoGetter('remotePort', function remotePort() {
  return this._getpeername().port;
Socket.prototype._getsockname = function() {
  if (!this._handle || !this._handle.getsockname) {
    return {};
  if (!this._sockname) {
    var out = {};
    var err = this._handle.getsockname(out);
    if (err) return {};  // FIXME(bnoordhuis) Throw?
    this._sockname = out;
  return this._sockname;
protoGetter('localAddress', function localAddress() {
  return this._getsockname().address;
protoGetter('localPort', function localPort() {
  return this._getsockname().port;
Socket.prototype[kAfterAsyncWrite] = function() {
  this[kLastWriteQueueSize] = 0;
Socket.prototype._writeGeneric = function(writev, data, encoding, cb) {
  // If we are still connecting, then buffer this for later.
  // The Writable logic will buffer up any more writes while
  // waiting for this one to be done.
  if (this.connecting) {
    this._pendingData = data;
    this._pendingEncoding = encoding;
    this.once('connect', function connect() {
      this._writeGeneric(writev, data, encoding, cb);
    });
    return;
  this._pendingData = null;
  this._pendingEncoding = '';
  if (!this._handle) {
    this.destroy(new ERR_SOCKET_CLOSED(), cb);
    return false;
  this._unrefTimer();
  let req;
  if (writev)
    req = writevGeneric(this, data, cb);
  else
    req = writeGeneric(this, data, encoding, cb);
  if (req.async)
    this[kLastWriteQueueSize] = req.bytes;
Socket.prototype._writev = function(chunks, cb) {
  this._writeGeneric(true, chunks, '', cb);
Socket.prototype._write = function(data, encoding, cb) {
  this._writeGeneric(false, data, encoding, cb);
// Legacy alias. Having this is probably being overly cautious, but it doesn't
// really hurt anyone either. This can probably be removed safely if desired.
protoGetter('_bytesDispatched', function _bytesDispatched() {
  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];
protoGetter('bytesWritten', function bytesWritten() {
  var bytes = this._bytesDispatched;
  const state = this._writableState;
  const data = this._pendingData;
  const encoding = this._pendingEncoding;
  if (!state)
    return undefined;
  this.writableBuffer.forEach(function(el) {
    if (el.chunk instanceof Buffer)
      bytes += el.chunk.length;
    else
      bytes += Buffer.byteLength(el.chunk, el.encoding);
  });
  if (Array.isArray(data)) {
    // Was a writev, iterate over chunks to get total length
    for (var i = 0; i < data.length; i++) {
      const chunk = data[i];
      if (data.allBuffers || chunk instanceof Buffer)
        bytes += chunk.length;
      else
        bytes += Buffer.byteLength(chunk.chunk, chunk.encoding);
    }
  } else if (data) {
    // Writes are either a string or a Buffer.
    if (typeof data !== 'string')
      bytes += data.length;
    else
      bytes += Buffer.byteLength(data, encoding);
  return bytes;
function checkBindError(err, port, handle) {
  // EADDRINUSE may not be reported until we call listen() or connect().
  // To complicate matters, a failed bind() followed by listen() or connect()
  // will implicitly bind to a random port. Ergo, check that the socket is
  // bound to the expected port before calling listen() or connect().
  //
  // FIXME(bnoordhuis) Doesn't work for pipe handles, they don't have a
  // getsockname() method. Non-issue for now, the cluster module doesn't
  // really support pipes anyway.
  if (err === 0 && port > 0 && handle.getsockname) {
    var out = {};
    err = handle.getsockname(out);
    if (err === 0 && port !== out.port) {
      debug(`checkBindError, bound to ${out.port} instead of ${port}`);
      err = UV_EADDRINUSE;
    }
  return err;
function internalConnect(
  self, address, port, addressType, localAddress, localPort, flags) {
  // TODO return promise from Socket.prototype.connect which
  // wraps _connectReq.
  assert(self.connecting);
  var err;
  if (localAddress || localPort) {
    if (addressType === 4) {
      localAddress = localAddress || DEFAULT_IPV4_ADDR;
      err = self._handle.bind(localAddress, localPort);
    } else { // addressType === 6
      localAddress = localAddress || DEFAULT_IPV6_ADDR;
      err = self._handle.bind6(localAddress, localPort, flags);
    }
    debug('binding to localAddress: %s and localPort: %d (addressType: %d)',
          localAddress, localPort, addressType);
    err = checkBindError(err, localPort, self._handle);
    if (err) {
      const ex = exceptionWithHostPort(err, 'bind', localAddress, localPort);
      self.destroy(ex);
      return;
    }
  if (addressType === 6 || addressType === 4) {
    const req = new TCPConnectWrap();
    req.oncomplete = afterConnect;
    req.address = address;
    req.port = port;
    req.localAddress = localAddress;
    req.localPort = localPort;
    if (addressType === 4)
      err = self._handle.connect(req, address, port);
    else
      err = self._handle.connect6(req, address, port);
  } else {
    const req = new PipeConnectWrap();
    req.address = address;
    req.oncomplete = afterConnect;
    err = self._handle.connect(req, address, afterConnect);
  if (err) {
    var sockname = self._getsockname();
    var details;
    if (sockname) {
      details = sockname.address + ':' + sockname.port;
    }
    const ex = exceptionWithHostPort(err, 'connect', address, port, details);
    self.destroy(ex);
Socket.prototype.connect = function(...args) {
  let normalized;
  // If passed an array, it's treated as an array of arguments that have
  // already been normalized (so we don't normalize more than once). This has
  // been solved before in https://github.com/nodejs/node/pull/12342, but was
  // reverted as it had unintended side effects.
  if (Array.isArray(args[0]) && args[0][normalizedArgsSymbol]) {
    normalized = args[0];
  } else {
    normalized = normalizeArgs(args);
  const options = normalized[0];
  const cb = normalized[1];
  if (this.write !== Socket.prototype.write)
    this.write = Socket.prototype.write;
  if (this.destroyed) {
    this._undestroy();
    this._handle = null;
    this._peername = null;
    this._sockname = null;
  const { path } = options;
  const pipe = !!path;
  debug('pipe', pipe, path);
  if (!this._handle) {
    this._handle = pipe ?
      new Pipe(PipeConstants.SOCKET) :
      new TCP(TCPConstants.SOCKET);
    initSocketHandle(this);
  if (cb !== null) {
    this.once('connect', cb);
  this._unrefTimer();
  this.connecting = true;
  this.writable = true;
  if (pipe) {
    validateString(path, 'options.path');
    defaultTriggerAsyncIdScope(
      this[async_id_symbol], internalConnect, this, path
    );
  } else {
    lookupAndConnect(this, options);
  return this;
function lookupAndConnect(self, options) {
  const { localAddress, localPort } = options;
  const host = options.host || 'localhost';
  let { port } = options;
  if (localAddress && !isIP(localAddress)) {
    throw new ERR_INVALID_IP_ADDRESS(localAddress);
  if (localPort && typeof localPort !== 'number') {
    throw new ERR_INVALID_ARG_TYPE('options.localPort', 'number', localPort);
  if (typeof port !== 'undefined') {
    if (typeof port !== 'number' && typeof port !== 'string') {
      throw new ERR_INVALID_ARG_TYPE('options.port',
                                     ['number', 'string'], port);
    }
    if (!isLegalPort(port)) {
      throw new ERR_SOCKET_BAD_PORT(port);
    }
  port |= 0;
  // If host is an IP, skip performing a lookup
  const addressType = isIP(host);
  if (addressType) {
    defaultTriggerAsyncIdScope(self[async_id_symbol], process.nextTick, () => {
      if (self.connecting)
        defaultTriggerAsyncIdScope(
          self[async_id_symbol],
          internalConnect,
          self, host, port, addressType, localAddress, localPort
        );
    });
    return;
  if (options.lookup && typeof options.lookup !== 'function')
    throw new ERR_INVALID_ARG_TYPE('options.lookup',
                                   'Function', options.lookup);
  if (dns === undefined) dns = require('dns');
  const dnsopts = {
    family: options.family,
    hints: options.hints || 0
  };
  if (process.platform !== 'win32' &&
      dnsopts.family !== 4 &&
      dnsopts.family !== 6 &&
      dnsopts.hints === 0) {
    dnsopts.hints = dns.ADDRCONFIG;
  debug('connect: find host', host);
  debug('connect: dns options', dnsopts);
  self._host = host;
  const lookup = options.lookup || dns.lookup;
  defaultTriggerAsyncIdScope(self[async_id_symbol], function() {
    lookup(host, dnsopts, function emitLookup(err, ip, addressType) {
      self.emit('lookup', err, ip, addressType, host);
      // It's possible we were destroyed while looking this up.
      // XXX it would be great if we could cancel the promise returned by
      // the look up.
      if (!self.connecting) return;
      if (err) {
        // net.createConnection() creates a net.Socket object and immediately
        // calls net.Socket.connect() on it (that's us). There are no event
        // listeners registered yet so defer the error event to the next tick.
        process.nextTick(connectErrorNT, self, err);
      } else if (addressType !== 4 && addressType !== 6) {
        err = new ERR_INVALID_ADDRESS_FAMILY(addressType,
                                             options.host,
                                             options.port);
        process.nextTick(connectErrorNT, self, err);
      } else {
        self._unrefTimer();
        defaultTriggerAsyncIdScope(
          self[async_id_symbol],
          internalConnect,
          self, ip, port, addressType, localAddress, localPort
        );
      }
    });
  });
function connectErrorNT(self, err) {
  self.destroy(err);
Socket.prototype.ref = function() {
  if (!this._handle) {
    this.once('connect', this.ref);
    return this;
  if (typeof this._handle.ref === 'function') {
    this._handle.ref();
  return this;
Socket.prototype.unref = function() {
  if (!this._handle) {
    this.once('connect', this.unref);
    return this;
  if (typeof this._handle.unref === 'function') {
    this._handle.unref();
  return this;
function afterConnect(status, handle, req, readable, writable) {
  const self = handle[owner_symbol];
  // Callback may come after call to destroy
  if (self.destroyed) {
    return;
  debug('afterConnect');
  assert(self.connecting);
  self.connecting = false;
  self._sockname = null;
  if (status === 0) {
    self.readable = readable;
    if (!self._writableState.ended)
      self.writable = writable;
    self._unrefTimer();
    self.emit('connect');
    self.emit('ready');
    // Start the first read, or get an immediate EOF.
    // this doesn't actually consume any bytes, because len=0.
    if (readable && !self.isPaused())
      self.read(0);
  } else {
    self.connecting = false;
    var details;
    if (req.localAddress && req.localPort) {
      details = req.localAddress + ':' + req.localPort;
    }
    var ex = exceptionWithHostPort(status,
                                   'connect',
                                   req.address,
                                   req.port,
                                   details);
    if (details) {
      ex.localAddress = req.localAddress;
      ex.localPort = req.localPort;
    }
    self.destroy(ex);
function Server(options, connectionListener) {
  if (!(this instanceof Server))
    return new Server(options, connectionListener);
  EventEmitter.call(this);
  if (typeof options === 'function') {
    connectionListener = options;
    options = {};
    this.on('connection', connectionListener);
  } else if (options == null || typeof options === 'object') {
    options = { ...options };
    if (typeof connectionListener === 'function') {
      this.on('connection', connectionListener);
    }
  } else {
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  this._connections = 0;
  Object.defineProperty(this, 'connections', {
    get: deprecate(() => {
      if (this._usingWorkers) {
        return null;
      }
      return this._connections;
    }, 'Server.connections property is deprecated. ' +
       'Use Server.getConnections method instead.', 'DEP0020'),
    set: deprecate((val) => (this._connections = val),
                   'Server.connections property is deprecated.',
                   'DEP0020'),
    configurable: true, enumerable: false
  });
  this[async_id_symbol] = -1;
  this._handle = null;
  this._usingWorkers = false;
  this._workers = [];
  this._unref = false;
  this.allowHalfOpen = options.allowHalfOpen || false;
  this.pauseOnConnect = !!options.pauseOnConnect;
Object.setPrototypeOf(Server.prototype, EventEmitter.prototype);
Object.setPrototypeOf(Server, EventEmitter);
function toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }
// Returns handle if it can be created, or error code if it can't
function createServerHandle(address, port, addressType, fd, flags) {
  var err = 0;
  // Assign handle in listen, and clean up if bind or listen fails
  var handle;
  var isTCP = false;
  if (typeof fd === 'number' && fd >= 0) {
    try {
      handle = createHandle(fd, true);
    } catch (e) {
      // Not a fd we can listen on.  This will trigger an error.
      debug('listen invalid fd=%d:', fd, e.message);
      return UV_EINVAL;
    }
    err = handle.open(fd);
    if (err)
      return err;
    assert(!address && !port);
  } else if (port === -1 && addressType === -1) {
    handle = new Pipe(PipeConstants.SERVER);
    if (process.platform === 'win32') {
      var instances = parseInt(process.env.NODE_PENDING_PIPE_INSTANCES);
      if (!Number.isNaN(instances)) {
        handle.setPendingInstances(instances);
      }
    }
  } else {
    handle = new TCP(TCPConstants.SERVER);
    isTCP = true;
  if (address || port || isTCP) {
    debug('bind to', address || 'any');
    if (!address) {
      // Try binding to ipv6 first
      err = handle.bind6(DEFAULT_IPV6_ADDR, port, flags);
      if (err) {
        handle.close();
        // Fallback to ipv4
        return createServerHandle(DEFAULT_IPV4_ADDR, port);
      }
    } else if (addressType === 6) {
      err = handle.bind6(address, port, flags);
    } else {
      err = handle.bind(address, port);
    }
  if (err) {
    handle.close();
    return err;
  return handle;
function setupListenHandle(address, port, addressType, backlog, fd, flags) {
  debug('setupListenHandle', address, port, addressType, backlog, fd);
  // If there is not yet a handle, we need to create one and bind.
  // In the case of a server sent via IPC, we don't need to do this.
  if (this._handle) {
    debug('setupListenHandle: have a handle already');
  } else {
    debug('setupListenHandle: create a handle');
    var rval = null;
    // Try to bind to the unspecified IPv6 address, see if IPv6 is available
    if (!address && typeof fd !== 'number') {
      rval = createServerHandle(DEFAULT_IPV6_ADDR, port, 6, fd, flags);
      if (typeof rval === 'number') {
        rval = null;
        address = DEFAULT_IPV4_ADDR;
        addressType = 4;
      } else {
        address = DEFAULT_IPV6_ADDR;
        addressType = 6;
      }
    }
    if (rval === null)
      rval = createServerHandle(address, port, addressType, fd, flags);
    if (typeof rval === 'number') {
      var error = uvExceptionWithHostPort(rval, 'listen', address, port);
      process.nextTick(emitErrorNT, this, error);
      return;
    }
    this._handle = rval;
  this[async_id_symbol] = getNewAsyncId(this._handle);
  this._handle.onconnection = onconnection;
  this._handle[owner_symbol] = this;
  // Use a backlog of 512 entries. We pass 511 to the listen() call because
  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);
  // which will thus give us a backlog of 512 entries.
  const err = this._handle.listen(backlog || 511);
  if (err) {
    var ex = uvExceptionWithHostPort(err, 'listen', address, port);
    this._handle.close();
    this._handle = null;
    defaultTriggerAsyncIdScope(this[async_id_symbol],
                               process.nextTick,
                               emitErrorNT,
                               this,
                               ex);
    return;
  // Generate connection key, this should be unique to the connection
  this._connectionKey = addressType + ':' + address + ':' + port;
  // Unref the handle if the server was unref'ed prior to listening
  if (this._unref)
    this.unref();
  defaultTriggerAsyncIdScope(this[async_id_symbol],
                             process.nextTick,
                             emitListeningNT,
                             this);
Server.prototype._listen2 = setupListenHandle;  // legacy alias
function emitErrorNT(self, err) {
  self.emit('error', err);
function emitListeningNT(self) {
  // Ensure handle hasn't closed
  if (self._handle)
    self.emit('listening');
function listenInCluster(server, address, port, addressType,
                         backlog, fd, exclusive, flags) {
  exclusive = !!exclusive;
  if (cluster === undefined) cluster = require('cluster');
  if (cluster.isMaster || exclusive) {
    // Will create a new handle
    // _listen2 sets up the listened handle, it is still named like this
    // to avoid breaking code that wraps this method
    server._listen2(address, port, addressType, backlog, fd, flags);
    return;
  const serverQuery = {
    address: address,
    port: port,
    addressType: addressType,
    fd: fd,
    flags,
  };
  // Get the master's server handle, and listen on it
  cluster._getServer(server, serverQuery, listenOnMasterHandle);
  function listenOnMasterHandle(err, handle) {
    err = checkBindError(err, port, handle);
    if (err) {
      var ex = exceptionWithHostPort(err, 'bind', address, port);
      return server.emit('error', ex);
    }
    // Reuse master's server handle
    server._handle = handle;
    // _listen2 sets up the listened handle, it is still named like this
    // to avoid breaking code that wraps this method
    server._listen2(address, port, addressType, backlog, fd, flags);
Server.prototype.listen = function(...args) {
  const normalized = normalizeArgs(args);
  var options = normalized[0];
  const cb = normalized[1];
  if (this._handle) {
    throw new ERR_SERVER_ALREADY_LISTEN();
  if (cb !== null) {
    this.once('listening', cb);
  const backlogFromArgs =
    // (handle, backlog) or (path, backlog) or (port, backlog)
    toNumber(args.length > 1 && args[1]) ||
    toNumber(args.length > 2 && args[2]);  // (port, host, backlog)
  options = options._handle || options.handle || options;
  const flags = getFlags(options.ipv6Only);
  // (handle[, backlog][, cb]) where handle is an object with a handle
  if (options instanceof TCP) {
    this._handle = options;
    this[async_id_symbol] = this._handle.getAsyncId();
    listenInCluster(this, null, -1, -1, backlogFromArgs);
    return this;
  // (handle[, backlog][, cb]) where handle is an object with a fd
  if (typeof options.fd === 'number' && options.fd >= 0) {
    listenInCluster(this, null, null, null, backlogFromArgs, options.fd);
    return this;
  // ([port][, host][, backlog][, cb]) where port is omitted,
  // that is, listen(), listen(null), listen(cb), or listen(null, cb)
  // or (options[, cb]) where options.port is explicitly set as undefined or
  // null, bind to an arbitrary unused port
  if (args.length === 0 || typeof args[0] === 'function' ||
      (typeof options.port === 'undefined' && 'port' in options) ||
      options.port === null) {
    options.port = 0;
  // ([port][, host][, backlog][, cb]) where port is specified
  // or (options[, cb]) where options.port is specified
  // or if options.port is normalized as 0 before
  var backlog;
  if (typeof options.port === 'number' || typeof options.port === 'string') {
    if (!isLegalPort(options.port)) {
      throw new ERR_SOCKET_BAD_PORT(options.port);
    }
    backlog = options.backlog || backlogFromArgs;
    // start TCP server listening on host:port
    if (options.host) {
      lookupAndListen(this, options.port | 0, options.host, backlog,
                      options.exclusive, flags);
    } else { // Undefined host, listens on unspecified address
      // Default addressType 4 will be used to search for master server
      listenInCluster(this, null, options.port | 0, 4,
                      backlog, undefined, options.exclusive);
    }
    return this;
  // (path[, backlog][, cb]) or (options[, cb])
  // where path or options.path is a UNIX domain socket or Windows pipe
  if (options.path && isPipeName(options.path)) {
    var pipeName = this._pipeName = options.path;
    backlog = options.backlog || backlogFromArgs;
    listenInCluster(this, pipeName, -1, -1,
                    backlog, undefined, options.exclusive);
    if (!this._handle) {
      // Failed and an error shall be emitted in the next tick.
      // Therefore, we directly return.
      return this;
    }
    let mode = 0;
    if (options.readableAll === true)
      mode |= PipeConstants.UV_READABLE;
    if (options.writableAll === true)
      mode |= PipeConstants.UV_WRITABLE;
    if (mode !== 0) {
      const err = this._handle.fchmod(mode);
      if (err) {
        this._handle.close();
        this._handle = null;
        throw errnoException(err, 'uv_pipe_chmod');
      }
    }
    return this;
  if (!(('port' in options) || ('path' in options))) {
    throw new ERR_INVALID_ARG_VALUE('options', options,
                                    'must have the property "port" or "path"');
  throw new ERR_INVALID_OPT_VALUE('options', inspect(options));
function lookupAndListen(self, port, address, backlog, exclusive, flags) {
  if (dns === undefined) dns = require('dns');
  dns.lookup(address, function doListen(err, ip, addressType) {
    if (err) {
      self.emit('error', err);
    } else {
      addressType = ip ? addressType : 4;
      listenInCluster(self, ip, port, addressType,
                      backlog, undefined, exclusive, flags);
    }
  });
Object.defineProperty(Server.prototype, 'listening', {
  get: function() {
    return !!this._handle;
  },
  configurable: true,
  enumerable: true
Server.prototype.address = function() {
  if (this._handle && this._handle.getsockname) {
    var out = {};
    var err = this._handle.getsockname(out);
    if (err) {
      throw errnoException(err, 'address');
    }
    return out;
  } else if (this._pipeName) {
    return this._pipeName;
  } else {
    return null;
function onconnection(err, clientHandle) {
  const handle = this;
  const self = handle[owner_symbol];
  debug('onconnection');
  if (err) {
    self.emit('error', errnoException(err, 'accept'));
    return;
  if (self.maxConnections && self._connections >= self.maxConnections) {
    clientHandle.close();
    return;
  const socket = new Socket({
    handle: clientHandle,
    allowHalfOpen: self.allowHalfOpen,
    pauseOnCreate: self.pauseOnConnect,
    readable: true,
    writable: true
  });
  self._connections++;
  socket.server = self;
  socket._server = self;
  DTRACE_NET_SERVER_CONNECTION(socket);
  self.emit('connection', socket);
Server.prototype.getConnections = function(cb) {
  const self = this;
  function end(err, connections) {
    defaultTriggerAsyncIdScope(self[async_id_symbol],
                               process.nextTick,
                               cb,
                               err,
                               connections);
  if (!this._usingWorkers) {
    end(null, this._connections);
    return this;
  // Poll workers
  var left = this._workers.length;
  var total = this._connections;
  function oncount(err, count) {
    if (err) {
      left = -1;
      return end(err);
    }
    total += count;
    if (--left === 0) return end(null, total);
  for (var n = 0; n < this._workers.length; n++) {
    this._workers[n].getConnections(oncount);
  return this;
Server.prototype.close = function(cb) {
  if (typeof cb === 'function') {
    if (!this._handle) {
      this.once('close', function close() {
        cb(new ERR_SERVER_NOT_RUNNING());
      });
    } else {
      this.once('close', cb);
    }
  if (this._handle) {
    this._handle.close();
    this._handle = null;
  if (this._usingWorkers) {
    var left = this._workers.length;
    const onWorkerClose = () => {
      if (--left !== 0) return;
      this._connections = 0;
      this._emitCloseIfDrained();
    };
    // Increment connections to be sure that, even if all sockets will be closed
    // during polling of workers, `close` event will be emitted only once.
    this._connections++;
    // Poll workers
    for (var n = 0; n < this._workers.length; n++)
      this._workers[n].close(onWorkerClose);
  } else {
    this._emitCloseIfDrained();
  return this;
Server.prototype._emitCloseIfDrained = function() {
  debug('SERVER _emitCloseIfDrained');
  if (this._handle || this._connections) {
    debug('SERVER handle? %j   connections? %d',
          !!this._handle, this._connections);
    return;
  defaultTriggerAsyncIdScope(this[async_id_symbol],
                             process.nextTick,
                             emitCloseNT,
                             this);
function emitCloseNT(self) {
  debug('SERVER: emit close');
  self.emit('close');
// Legacy alias on the C++ wrapper object. This is not public API, so we may
// want to runtime-deprecate it at some point. There's no hurry, though.
Object.defineProperty(TCP.prototype, 'owner', {
  get() { return this[owner_symbol]; },
  set(v) { return this[owner_symbol] = v; }
Object.defineProperty(Socket.prototype, '_handle', {
  get() { return this[kHandle]; },
  set(v) { return this[kHandle] = v; }
Server.prototype._setupWorker = function(socketList) {
  this._usingWorkers = true;
  this._workers.push(socketList);
  socketList.once('exit', (socketList) => {
    const index = this._workers.indexOf(socketList);
    this._workers.splice(index, 1);
  });
Server.prototype.ref = function() {
  this._unref = false;
  if (this._handle)
    this._handle.ref();
  return this;
Server.prototype.unref = function() {
  this._unref = true;
  if (this._handle)
    this._handle.unref();
  return this;
var _setSimultaneousAccepts;
var warnSimultaneousAccepts = true;
if (process.platform === 'win32') {
  var simultaneousAccepts;
  _setSimultaneousAccepts = function(handle) {
    if (warnSimultaneousAccepts) {
      process.emitWarning(
        'net._setSimultaneousAccepts() is deprecated and will be removed.',
        'DeprecationWarning', 'DEP0121');
      warnSimultaneousAccepts = false;
    }
    if (handle === undefined) {
      return;
    }
    if (simultaneousAccepts === undefined) {
      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&
                             process.env.NODE_MANY_ACCEPTS !== '0');
    }
    if (handle._simultaneousAccepts !== simultaneousAccepts) {
      handle.setSimultaneousAccepts(!!simultaneousAccepts);
      handle._simultaneousAccepts = simultaneousAccepts;
    }
  };
} else {
  _setSimultaneousAccepts = function() {
    if (warnSimultaneousAccepts) {
      process.emitWarning(
        'net._setSimultaneousAccepts() is deprecated and will be removed.',
        'DeprecationWarning', 'DEP0121');
      warnSimultaneousAccepts = false;
    }
  };
module.exports = {
  _createServerHandle: createServerHandle,
  _normalizeArgs: normalizeArgs,
  _setSimultaneousAccepts,
  connect,
  createConnection: connect,
  createServer,
  isIP: isIP,
  isIPv4: isIPv4,
  isIPv6: isIPv6,
  Server,
  Socket,
  Stream: Socket, // Legacy naming
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const { safeGetenv } = internalBinding('credentials');
const constants = internalBinding('constants').os;
const { deprecate } = require('internal/util');
const isWindows = process.platform === 'win32';
const {
  codes: {
    ERR_SYSTEM_ERROR
  },
  hideStackFrames
} = require('internal/errors');
const { validateInt32 } = require('internal/validators');
const {
  getCPUs,
  getFreeMem,
  getHomeDirectory: _getHomeDirectory,
  getHostname: _getHostname,
  getInterfaceAddresses: _getInterfaceAddresses,
  getLoadAvg,
  getOSRelease: _getOSRelease,
  getOSType: _getOSType,
  getPriority: _getPriority,
  getTotalMem,
  getUserInfo,
  getUptime,
  isBigEndian,
  setPriority: _setPriority
} = internalBinding('os');
function getCheckedFunction(fn) {
  return hideStackFrames(function checkError(...args) {
    const ctx = {};
    const ret = fn(...args, ctx);
    if (ret === undefined) {
      throw new ERR_SYSTEM_ERROR(ctx);
    }
    return ret;
  });
const getHomeDirectory = getCheckedFunction(_getHomeDirectory);
const getHostname = getCheckedFunction(_getHostname);
const getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);
const getOSRelease = getCheckedFunction(_getOSRelease);
const getOSType = getCheckedFunction(_getOSType);
getFreeMem[Symbol.toPrimitive] = () => getFreeMem();
getHostname[Symbol.toPrimitive] = () => getHostname();
getHomeDirectory[Symbol.toPrimitive] = () => getHomeDirectory();
getOSRelease[Symbol.toPrimitive] = () => getOSRelease();
getOSType[Symbol.toPrimitive] = () => getOSType();
getTotalMem[Symbol.toPrimitive] = () => getTotalMem();
getUptime[Symbol.toPrimitive] = () => getUptime();
const kEndianness = isBigEndian ? 'BE' : 'LE';
const tmpDirDeprecationMsg =
  'os.tmpDir() is deprecated. Use os.tmpdir() instead.';
const avgValues = new Float64Array(3);
function loadavg() {
  getLoadAvg(avgValues);
  return [avgValues[0], avgValues[1], avgValues[2]];
function cpus() {
  // [] is a bugfix for a regression introduced in 51cea61
  const data = getCPUs() || [];
  const result = [];
  let i = 0;
  while (i < data.length) {
    result.push({
      model: data[i++],
      speed: data[i++],
      times: {
        user: data[i++],
        nice: data[i++],
        sys: data[i++],
        idle: data[i++],
        irq: data[i++]
      }
    });
  return result;
function arch() {
  return process.arch;
arch[Symbol.toPrimitive] = () => process.arch;
function platform() {
  return process.platform;
platform[Symbol.toPrimitive] = () => process.platform;
function tmpdir() {
  var path;
  if (isWindows) {
    path = process.env.TEMP ||
           process.env.TMP ||
           (process.env.SystemRoot || process.env.windir) + '\\temp';
    if (path.length > 1 && path.endsWith('\\') && !path.endsWith(':\\'))
      path = path.slice(0, -1);
  } else {
    path = safeGetenv('TMPDIR') ||
           safeGetenv('TMP') ||
           safeGetenv('TEMP') ||
           '/tmp';
    if (path.length > 1 && path.endsWith('/'))
      path = path.slice(0, -1);
  return path;
tmpdir[Symbol.toPrimitive] = () => tmpdir();
function endianness() {
  return kEndianness;
endianness[Symbol.toPrimitive] = () => kEndianness;
// Returns the number of ones in the binary representation of the decimal
// number.
function countBinaryOnes(n) {
  // Count the number of bits set in parallel, which is faster than looping
  n = n - ((n >>> 1) & 0x55555555);
  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);
  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;
function getCIDR(address, netmask, family) {
  let ones = 0;
  let split = '.';
  let range = 10;
  let groupLength = 8;
  let hasZeros = false;
  if (family === 'IPv6') {
    split = ':';
    range = 16;
    groupLength = 16;
  const parts = netmask.split(split);
  for (var i = 0; i < parts.length; i++) {
    if (parts[i] !== '') {
      const binary = parseInt(parts[i], range);
      const tmp = countBinaryOnes(binary);
      ones += tmp;
      if (hasZeros) {
        if (tmp !== 0) {
          return null;
        }
      } else if (tmp !== groupLength) {
        if ((binary & 1) !== 0) {
          return null;
        }
        hasZeros = true;
      }
    }
  return `${address}/${ones}`;
function networkInterfaces() {
  const data = getInterfaceAddresses();
  const result = {};
  if (data === undefined)
    return result;
  for (var i = 0; i < data.length; i += 7) {
    const name = data[i];
    const entry = {
      address: data[i + 1],
      netmask: data[i + 2],
      family: data[i + 3],
      mac: data[i + 4],
      internal: data[i + 5],
      cidr: getCIDR(data[i + 1], data[i + 2], data[i + 3])
    };
    const scopeid = data[i + 6];
    if (scopeid !== -1)
      entry.scopeid = scopeid;
    const existing = result[name];
    if (existing !== undefined)
      existing.push(entry);
    else
      result[name] = [entry];
  return result;
function setPriority(pid, priority) {
  if (priority === undefined) {
    priority = pid;
    pid = 0;
  validateInt32(pid, 'pid');
  validateInt32(priority, 'priority', -20, 19);
  const ctx = {};
  if (_setPriority(pid, priority, ctx) !== 0)
    throw new ERR_SYSTEM_ERROR(ctx);
function getPriority(pid) {
  if (pid === undefined)
    pid = 0;
  else
    validateInt32(pid, 'pid');
  const ctx = {};
  const priority = _getPriority(pid, ctx);
  if (priority === undefined)
    throw new ERR_SYSTEM_ERROR(ctx);
  return priority;
function userInfo(options) {
  if (typeof options !== 'object')
    options = null;
  const ctx = {};
  const user = getUserInfo(options, ctx);
  if (user === undefined)
    throw new ERR_SYSTEM_ERROR(ctx);
  return user;
module.exports = {
  arch,
  cpus,
  endianness,
  freemem: getFreeMem,
  getPriority,
  homedir: getHomeDirectory,
  hostname: getHostname,
  loadavg,
  networkInterfaces,
  platform,
  release: getOSRelease,
  setPriority,
  tmpdir,
  totalmem: getTotalMem,
  type: getOSType,
  userInfo,
  uptime: getUptime,
  // Deprecated APIs
  tmpDir: deprecate(tmpdir, tmpDirDeprecationMsg, 'DEP0022')
Object.defineProperties(module.exports, {
  constants: {
    configurable: false,
    enumerable: true,
    value: constants
  },
  EOL: {
    configurable: true,
    enumerable: true,
    writable: false,
    value: isWindows ? '\r\n' : '\n'
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;
const {
  CHAR_UPPERCASE_A,
  CHAR_LOWERCASE_A,
  CHAR_UPPERCASE_Z,
  CHAR_LOWERCASE_Z,
  CHAR_DOT,
  CHAR_FORWARD_SLASH,
  CHAR_BACKWARD_SLASH,
  CHAR_COLON,
  CHAR_QUESTION_MARK,
} = require('internal/constants');
const { validateString } = require('internal/validators');
function isPathSeparator(code) {
  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;
function isPosixPathSeparator(code) {
  return code === CHAR_FORWARD_SLASH;
function isWindowsDeviceRoot(code) {
  return code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||
         code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;
// Resolves . and .. elements in a path with directory names
function normalizeString(path, allowAboveRoot, separator, isPathSeparator) {
  let res = '';
  let lastSegmentLength = 0;
  let lastSlash = -1;
  let dots = 0;
  let code = 0;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (isPathSeparator(code))
      break;
    else
      code = CHAR_FORWARD_SLASH;
    if (isPathSeparator(code)) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 ||
            res.charCodeAt(res.length - 1) !== CHAR_DOT ||
            res.charCodeAt(res.length - 2) !== CHAR_DOT) {
          if (res.length > 2) {
            const lastSlashIndex = res.lastIndexOf(separator);
            if (lastSlashIndex === -1) {
              res = '';
              lastSegmentLength = 0;
            } else {
              res = res.slice(0, lastSlashIndex);
              lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
            }
            lastSlash = i;
            dots = 0;
            continue;
          } else if (res.length !== 0) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          res += res.length > 0 ? `${separator}..` : '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += `${separator}${path.slice(lastSlash + 1, i)}`;
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === CHAR_DOT && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  return res;
function _format(sep, pathObject) {
  if (pathObject === null || typeof pathObject !== 'object') {
    throw new ERR_INVALID_ARG_TYPE('pathObject', 'Object', pathObject);
  const dir = pathObject.dir || pathObject.root;
  const base = pathObject.base ||
    `${pathObject.name || ''}${pathObject.ext || ''}`;
  if (!dir) {
    return base;
  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;
const win32 = {
  // path.resolve([from ...], to)
  resolve(...args) {
    let resolvedDevice = '';
    let resolvedTail = '';
    let resolvedAbsolute = false;
    for (var i = args.length - 1; i >= -1; i--) {
      let path;
      if (i >= 0) {
        path = args[i];
        validateString(path, 'path');
        // Skip empty entries
        if (path.length === 0) {
          continue;
        }
      } else if (resolvedDevice.length === 0) {
        path = process.cwd();
      } else {
        // Windows has the concept of drive-specific current working
        // directories. If we've resolved a drive letter but not yet an
        // absolute path, get cwd for that drive, or the process cwd if
        // the drive cwd is not available. We're sure the device is not
        // a UNC path at this points, because UNC paths are always absolute.
        path = process.env[`=${resolvedDevice}`] || process.cwd();
        // Verify that a cwd was found and that it actually points
        // to our drive. If not, default to the drive's root.
        if (path === undefined ||
            path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&
            path.charCodeAt(2) === CHAR_BACKWARD_SLASH) {
          path = `${resolvedDevice}\\`;
        }
      }
      const len = path.length;
      let rootEnd = 0;
      let device = '';
      let isAbsolute = false;
      const code = path.charCodeAt(0);
      // Try to match a root
      if (len === 1) {
        if (isPathSeparator(code)) {
          // `path` contains just a path separator
          rootEnd = 1;
          isAbsolute = true;
        }
      } else if (isPathSeparator(code)) {
        // Possible UNC root
        // If we started with a separator, we know we at least have an
        // absolute path of some kind (UNC or otherwise)
        isAbsolute = true;
        if (isPathSeparator(path.charCodeAt(1))) {
          // Matched double path separator at beginning
          let j = 2;
          let last = j;
          // Match 1 or more non-path separators
          while (j < len && !isPathSeparator(path.charCodeAt(j))) {
            j++;
          }
          if (j < len && j !== last) {
            const firstPart = path.slice(last, j);
            // Matched!
            last = j;
            // Match 1 or more path separators
            while (j < len && isPathSeparator(path.charCodeAt(j))) {
              j++;
            }
            if (j < len && j !== last) {
              // Matched!
              last = j;
              // Match 1 or more non-path separators
              while (j < len && !isPathSeparator(path.charCodeAt(j))) {
                j++;
              }
              if (j === len || j !== last) {
                // We matched a UNC root
                device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                rootEnd = j;
              }
            }
          }
        } else {
          rootEnd = 1;
        }
      } else if (isWindowsDeviceRoot(code) &&
                  path.charCodeAt(1) === CHAR_COLON) {
        // Possible device root
        device = path.slice(0, 2);
        rootEnd = 2;
        if (len > 2 && isPathSeparator(path.charCodeAt(2))) {
          // Treat separator following drive name as an absolute path
          // indicator
          isAbsolute = true;
          rootEnd = 3;
        }
      }
      if (device.length > 0) {
        if (resolvedDevice.length > 0) {
          if (device.toLowerCase() !== resolvedDevice.toLowerCase())
            // This path points to another device so it is not applicable
            continue;
        } else {
          resolvedDevice = device;
        }
      }
      if (resolvedAbsolute) {
        if (resolvedDevice.length > 0)
          break;
      } else {
        resolvedTail = `${path.slice(rootEnd)}\\${resolvedTail}`;
        resolvedAbsolute = isAbsolute;
        if (isAbsolute && resolvedDevice.length > 0) {
          break;
        }
      }
    }
    // At this point the path should be resolved to a full absolute path,
    // but handle relative paths to be safe (might happen when process.cwd()
    // fails)
    // Normalize the tail path
    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\',
                                   isPathSeparator);
    return resolvedAbsolute ?
      `${resolvedDevice}\\${resolvedTail}` :
      `${resolvedDevice}${resolvedTail}` || '.';
  },
  normalize(path) {
    validateString(path, 'path');
    const len = path.length;
    if (len === 0)
      return '.';
    let rootEnd = 0;
    let device;
    let isAbsolute = false;
    const code = path.charCodeAt(0);
    // Try to match a root
    if (len === 1) {
      // `path` contains just a single char, exit early to avoid
      // unnecessary work
      return isPosixPathSeparator(code) ? '\\' : path;
    }
    if (isPathSeparator(code)) {
      // Possible UNC root
      // If we started with a separator, we know we at least have an absolute
      // path of some kind (UNC or otherwise)
      isAbsolute = true;
      if (isPathSeparator(path.charCodeAt(1))) {
        // Matched double path separator at beginning
        let j = 2;
        let last = j;
        // Match 1 or more non-path separators
        while (j < len && !isPathSeparator(path.charCodeAt(j))) {
          j++;
        }
        if (j < len && j !== last) {
          const firstPart = path.slice(last, j);
          // Matched!
          last = j;
          // Match 1 or more path separators
          while (j < len && isPathSeparator(path.charCodeAt(j))) {
            j++;
          }
          if (j < len && j !== last) {
            // Matched!
            last = j;
            // Match 1 or more non-path separators
            while (j < len && !isPathSeparator(path.charCodeAt(j))) {
              j++;
            }
            if (j === len) {
              // We matched a UNC root only
              // Return the normalized version of the UNC root since there
              // is nothing left to process
              return `\\\\${firstPart}\\${path.slice(last)}\\`;
            }
            if (j !== last) {
              // We matched a UNC root with leftovers
              device = `\\\\${firstPart}\\${path.slice(last, j)}`;
              rootEnd = j;
            }
          }
        }
      } else {
        rootEnd = 1;
      }
    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {
      // Possible device root
      device = path.slice(0, 2);
      rootEnd = 2;
      if (len > 2 && isPathSeparator(path.charCodeAt(2))) {
        // Treat separator following drive name as an absolute path
        // indicator
        isAbsolute = true;
        rootEnd = 3;
      }
    }
    let tail = rootEnd < len ?
      normalizeString(path.slice(rootEnd), !isAbsolute, '\\', isPathSeparator) :
      '';
    if (tail.length === 0 && !isAbsolute)
      tail = '.';
    if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1)))
      tail += '\\';
    if (device === undefined) {
      return isAbsolute ? `\\${tail}` : tail;
    }
    return isAbsolute ? `${device}\\${tail}` : `${device}${tail}`;
  },
  isAbsolute(path) {
    validateString(path, 'path');
    const len = path.length;
    if (len === 0)
      return false;
    const code = path.charCodeAt(0);
    return isPathSeparator(code) ||
      // Possible device root
      len > 2 &&
      isWindowsDeviceRoot(code) &&
      path.charCodeAt(1) === CHAR_COLON &&
      isPathSeparator(path.charCodeAt(2));
  },
  join(...args) {
    if (args.length === 0)
      return '.';
    let joined;
    let firstPart;
    for (var i = 0; i < args.length; ++i) {
      const arg = args[i];
      validateString(arg, 'path');
      if (arg.length > 0) {
        if (joined === undefined)
          joined = firstPart = arg;
        else
          joined += `\\${arg}`;
      }
    }
    if (joined === undefined)
      return '.';
    // Make sure that the joined path doesn't start with two slashes, because
    // normalize() will mistake it for an UNC path then.
    //
    // This step is skipped when it is very clear that the user actually
    // intended to point at an UNC path. This is assumed when the first
    // non-empty string arguments starts with exactly two slashes followed by
    // at least one more non-slash character.
    //
    // Note that for normalize() to treat a path as an UNC path it needs to
    // have at least 2 components, so we don't filter for that here.
    // This means that the user can use join to construct UNC paths from
    // a server name and a share name; for example:
    //   path.join('//server', 'share') -> '\\\\server\\share\\')
    let needsReplace = true;
    let slashCount = 0;
    if (isPathSeparator(firstPart.charCodeAt(0))) {
      ++slashCount;
      const firstLen = firstPart.length;
      if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {
        ++slashCount;
        if (firstLen > 2) {
          if (isPathSeparator(firstPart.charCodeAt(2)))
            ++slashCount;
          else {
            // We matched a UNC path in the first part
            needsReplace = false;
          }
        }
      }
    }
    if (needsReplace) {
      // Find any more consecutive slashes we need to replace
      while (slashCount < joined.length &&
             isPathSeparator(joined.charCodeAt(slashCount))) {
        slashCount++;
      }
      // Replace the slashes if needed
      if (slashCount >= 2)
        joined = `\\${joined.slice(slashCount)}`;
    }
    return win32.normalize(joined);
  },
  // It will solve the relative path from `from` to `to`, for instance:
  //  from = 'C:\\orandea\\test\\aaa'
  //  to = 'C:\\orandea\\impl\\bbb'
  // The output of the function should be: '..\\..\\impl\\bbb'
  relative(from, to) {
    validateString(from, 'from');
    validateString(to, 'to');
    if (from === to)
      return '';
    const fromOrig = win32.resolve(from);
    const toOrig = win32.resolve(to);
    if (fromOrig === toOrig)
      return '';
    from = fromOrig.toLowerCase();
    to = toOrig.toLowerCase();
    if (from === to)
      return '';
    // Trim any leading backslashes
    let fromStart = 0;
    while (fromStart < from.length &&
           from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {
      fromStart++;
    }
    // Trim trailing backslashes (applicable to UNC paths only)
    let fromEnd = from.length;
    while (fromEnd - 1 > fromStart &&
           from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {
      fromEnd--;
    }
    const fromLen = fromEnd - fromStart;
    // Trim any leading backslashes
    let toStart = 0;
    while (toStart < to.length &&
           to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {
      toStart++;
    }
    // Trim trailing backslashes (applicable to UNC paths only)
    let toEnd = to.length;
    while (toEnd - 1 > toStart &&
           to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {
      toEnd--;
    }
    const toLen = toEnd - toStart;
    // Compare paths to find the longest common path from root
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i = 0;
    for (; i < length; i++) {
      const fromCode = from.charCodeAt(fromStart + i);
      if (fromCode !== to.charCodeAt(toStart + i))
        break;
      else if (fromCode === CHAR_BACKWARD_SLASH)
        lastCommonSep = i;
    }
    // We found a mismatch before the first common path separator was seen, so
    // return the original `to`.
    if (i !== length) {
      if (lastCommonSep === -1)
        return toOrig;
    } else {
      if (toLen > length) {
        if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {
          // We get here if `from` is the exact base path for `to`.
          // For example: from='C:\\foo\\bar'; to='C:\\foo\\bar\\baz'
          return toOrig.slice(toStart + i + 1);
        }
        if (i === 2) {
          // We get here if `from` is the device root.
          // For example: from='C:\\'; to='C:\\foo'
          return toOrig.slice(toStart + i);
        }
      }
      if (fromLen > length) {
        if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {
          // We get here if `to` is the exact base path for `from`.
          // For example: from='C:\\foo\\bar'; to='C:\\foo'
          lastCommonSep = i;
        } else if (i === 2) {
          // We get here if `to` is the device root.
          // For example: from='C:\\foo\\bar'; to='C:\\'
          lastCommonSep = 3;
        }
      }
      if (lastCommonSep === -1)
        lastCommonSep = 0;
    }
    let out = '';
    // Generate the relative path based on the path difference between `to` and
    // `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {
        out += out.length === 0 ? '..' : '\\..';
      }
    }
    toStart += lastCommonSep;
    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return `${out}${toOrig.slice(toStart, toEnd)}`;
    if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH)
      ++toStart;
    return toOrig.slice(toStart, toEnd);
  },
  toNamespacedPath(path) {
    // Note: this will *probably* throw somewhere.
    if (typeof path !== 'string')
      return path;
    if (path.length === 0) {
      return '';
    }
    const resolvedPath = win32.resolve(path);
    if (resolvedPath.length <= 2)
      return path;
    if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {
      // Possible UNC root
      if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {
        const code = resolvedPath.charCodeAt(2);
        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {
          // Matched non-long UNC root, convert the path to a long UNC path
          return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
        }
      }
    } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&
               resolvedPath.charCodeAt(1) === CHAR_COLON &&
               resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {
      // Matched device root, convert the path to a long UNC path
      return `\\\\?\\${resolvedPath}`;
    }
    return path;
  },
  dirname(path) {
    validateString(path, 'path');
    const len = path.length;
    if (len === 0)
      return '.';
    let rootEnd = -1;
    let offset = 0;
    const code = path.charCodeAt(0);
    if (len === 1) {
      // `path` contains just a path separator, exit early to avoid
      // unnecessary work or a dot.
      return isPathSeparator(code) ? path : '.';
    }
    // Try to match a root
    if (isPathSeparator(code)) {
      // Possible UNC root
      rootEnd = offset = 1;
      if (isPathSeparator(path.charCodeAt(1))) {
        // Matched double path separator at beginning
        let j = 2;
        let last = j;
        // Match 1 or more non-path separators
        while (j < len && !isPathSeparator(path.charCodeAt(j))) {
          j++;
        }
        if (j < len && j !== last) {
          // Matched!
          last = j;
          // Match 1 or more path separators
          while (j < len && isPathSeparator(path.charCodeAt(j))) {
            j++;
          }
          if (j < len && j !== last) {
            // Matched!
            last = j;
            // Match 1 or more non-path separators
            while (j < len && !isPathSeparator(path.charCodeAt(j))) {
              j++;
            }
            if (j === len) {
              // We matched a UNC root only
              return path;
            }
            if (j !== last) {
              // We matched a UNC root with leftovers
              // Offset by 1 to include the separator after the UNC root to
              // treat it as a "normal root" on top of a (UNC) root
              rootEnd = offset = j + 1;
            }
          }
        }
      }
    // Possible device root
    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {
      rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;
      offset = rootEnd;
    }
    let end = -1;
    let matchedSlash = true;
    for (var i = len - 1; i >= offset; --i) {
      if (isPathSeparator(path.charCodeAt(i))) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }
    if (end === -1) {
      if (rootEnd === -1)
        return '.';
      end = rootEnd;
    }
    return path.slice(0, end);
  },
  basename(path, ext) {
    if (ext !== undefined)
      validateString(ext, 'ext');
    validateString(path, 'path');
    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;
    // Check for a drive letter prefix so as not to mistake the following
    // path separator as an extra separator at the end of the path that can be
    // disregarded
    if (path.length >= 2 &&
        isWindowsDeviceRoot(path.charCodeAt(0)) &&
        path.charCodeAt(1) === CHAR_COLON) {
      start = 2;
    }
    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext === path)
        return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= start; --i) {
        const code = path.charCodeAt(i);
        if (isPathSeparator(code)) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            start = i + 1;
            break;
          }
        } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }
      if (start === end)
        end = firstNonSlashEnd;
      else if (end === -1)
        end = path.length;
      return path.slice(start, end);
    }
    for (i = path.length - 1; i >= start; --i) {
      if (isPathSeparator(path.charCodeAt(i))) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // path component
        matchedSlash = false;
        end = i + 1;
      }
    }
    if (end === -1)
      return '';
    return path.slice(start, end);
  },
  extname(path) {
    validateString(path, 'path');
    var start = 0;
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    // Check for a drive letter prefix so as not to mistake the following
    // path separator as an extra separator at the end of the path that can be
    // disregarded
    if (path.length >= 2 &&
        path.charCodeAt(1) === CHAR_COLON &&
        isWindowsDeviceRoot(path.charCodeAt(0))) {
      start = startPart = 2;
    }
    for (var i = path.length - 1; i >= start; --i) {
      const code = path.charCodeAt(i);
      if (isPathSeparator(code)) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === CHAR_DOT) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }
    if (startDot === -1 ||
        end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        (preDotState === 1 &&
         startDot === end - 1 &&
         startDot === startPart + 1)) {
      return '';
    }
    return path.slice(startDot, end);
  },
  format: _format.bind(null, '\\'),
  parse(path) {
    validateString(path, 'path');
    const ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0)
      return ret;
    const len = path.length;
    var rootEnd = 0;
    let code = path.charCodeAt(0);
    if (len === 1) {
      if (isPathSeparator(code)) {
        // `path` contains just a path separator, exit early to avoid
        // unnecessary work
        ret.root = ret.dir = path;
        return ret;
      }
      ret.base = ret.name = path;
      return ret;
    }
    // Try to match a root
    if (isPathSeparator(code)) {
      // Possible UNC root
      rootEnd = 1;
      if (isPathSeparator(path.charCodeAt(1))) {
        // Matched double path separator at beginning
        let j = 2;
        let last = j;
        // Match 1 or more non-path separators
        while (j < len && !isPathSeparator(path.charCodeAt(j))) {
          j++;
        }
        if (j < len && j !== last) {
          // Matched!
          last = j;
          // Match 1 or more path separators
          while (j < len && isPathSeparator(path.charCodeAt(j))) {
            j++;
          }
          if (j < len && j !== last) {
            // Matched!
            last = j;
            // Match 1 or more non-path separators
            while (j < len && !isPathSeparator(path.charCodeAt(j))) {
              j++;
            }
            if (j === len) {
              // We matched a UNC root only
              rootEnd = j;
            } else if (j !== last) {
              // We matched a UNC root with leftovers
              rootEnd = j + 1;
            }
          }
        }
      }
    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {
      // Possible device root
      if (len <= 2) {
        // `path` contains just a drive root, exit early to avoid
        // unnecessary work
        ret.root = ret.dir = path;
        return ret;
      }
      rootEnd = 2;
      if (isPathSeparator(path.charCodeAt(2))) {
        if (len === 3) {
          // `path` contains just a drive root, exit early to avoid
          // unnecessary work
          ret.root = ret.dir = path;
          return ret;
        }
        rootEnd = 3;
      }
    }
    if (rootEnd > 0)
      ret.root = path.slice(0, rootEnd);
    var startDot = -1;
    var startPart = rootEnd;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    // Get non-dir info
    for (; i >= rootEnd; --i) {
      code = path.charCodeAt(i);
      if (isPathSeparator(code)) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === CHAR_DOT) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }
    if (end !== -1) {
      if (startDot === -1 ||
          // We saw a non-dot character immediately before the dot
          preDotState === 0 ||
          // The (right-most) trimmed path component is exactly '..'
          (preDotState === 1 &&
           startDot === end - 1 &&
           startDot === startPart + 1)) {
        ret.base = ret.name = path.slice(startPart, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
        ret.ext = path.slice(startDot, end);
      }
    }
    // If the directory is the root, use the entire root as the `dir` including
    // the trailing slash if any (`C:\abc` -> `C:\`). Otherwise, strip out the
    // trailing slash (`C:\abc\def` -> `C:\abc`).
    if (startPart > 0 && startPart !== rootEnd)
      ret.dir = path.slice(0, startPart - 1);
    else
      ret.dir = ret.root;
    return ret;
  },
  sep: '\\',
  delimiter: ';',
  win32: null,
  posix: null
const posix = {
  // path.resolve([from ...], to)
  resolve(...args) {
    let resolvedPath = '';
    let resolvedAbsolute = false;
    for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      const path = i >= 0 ? args[i] : process.cwd();
      validateString(path, 'path');
      // Skip empty entries
      if (path.length === 0) {
        continue;
      }
      resolvedPath = `${path}/${resolvedPath}`;
      resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;
    }
    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)
    // Normalize the path
    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',
                                   isPosixPathSeparator);
    if (resolvedAbsolute) {
      return `/${resolvedPath}`;
    }
    return resolvedPath.length > 0 ? resolvedPath : '.';
  },
  normalize(path) {
    validateString(path, 'path');
    if (path.length === 0)
      return '.';
    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;
    const trailingSeparator =
      path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;
    // Normalize the path
    path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);
    if (path.length === 0) {
      if (isAbsolute)
        return '/';
      return trailingSeparator ? './' : '.';
    }
    if (trailingSeparator)
      path += '/';
    return isAbsolute ? `/${path}` : path;
  },
  isAbsolute(path) {
    validateString(path, 'path');
    return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;
  },
  join(...args) {
    if (args.length === 0)
      return '.';
    let joined;
    for (var i = 0; i < args.length; ++i) {
      const arg = args[i];
      validateString(arg, 'path');
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += `/${arg}`;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },
  relative(from, to) {
    validateString(from, 'from');
    validateString(to, 'to');
    if (from === to)
      return '';
    // Trim leading forward slashes.
    from = posix.resolve(from);
    to = posix.resolve(to);
    if (from === to)
      return '';
    const fromStart = 1;
    const fromEnd = from.length;
    const fromLen = fromEnd - fromStart;
    const toStart = 1;
    const toLen = to.length - toStart;
    // Compare paths to find the longest common path from root
    const length = (fromLen < toLen ? fromLen : toLen);
    let lastCommonSep = -1;
    let i = 0;
    for (; i < length; i++) {
      const fromCode = from.charCodeAt(fromStart + i);
      if (fromCode !== to.charCodeAt(toStart + i))
        break;
      else if (fromCode === CHAR_FORWARD_SLASH)
        lastCommonSep = i;
    }
    if (i === length) {
      if (toLen > length) {
        if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {
          // We get here if `from` is the exact base path for `to`.
          // For example: from='/foo/bar'; to='/foo/bar/baz'
          return to.slice(toStart + i + 1);
        }
        if (i === 0) {
          // We get here if `from` is the root
          // For example: from='/'; to='/foo'
          return to.slice(toStart + i);
        }
      } else if (fromLen > length) {
        if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {
          // We get here if `to` is the exact base path for `from`.
          // For example: from='/foo/bar/baz'; to='/foo/bar'
          lastCommonSep = i;
        } else if (i === 0) {
          // We get here if `to` is the root.
          // For example: from='/foo/bar'; to='/'
          lastCommonSep = 0;
        }
      }
    }
    let out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`.
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {
        out += out.length === 0 ? '..' : '/..';
      }
    }
    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts.
    return `${out}${to.slice(toStart + lastCommonSep)}`;
  },
  toNamespacedPath(path) {
    // Non-op on posix systems
    return path;
  },
  dirname(path) {
    validateString(path, 'path');
    if (path.length === 0)
      return '.';
    const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }
    if (end === -1)
      return hasRoot ? '/' : '.';
    if (hasRoot && end === 1)
      return '//';
    return path.slice(0, end);
  },
  basename(path, ext) {
    if (ext !== undefined)
      validateString(ext, 'ext');
    validateString(path, 'path');
    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;
    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext === path)
        return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        const code = path.charCodeAt(i);
        if (code === CHAR_FORWARD_SLASH) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            start = i + 1;
            break;
          }
        } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }
      if (start === end)
        end = firstNonSlashEnd;
      else if (end === -1)
        end = path.length;
      return path.slice(start, end);
    }
    for (i = path.length - 1; i >= 0; --i) {
      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // path component
        matchedSlash = false;
        end = i + 1;
      }
    }
    if (end === -1)
      return '';
    return path.slice(start, end);
  },
  extname(path) {
    validateString(path, 'path');
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      const code = path.charCodeAt(i);
      if (code === CHAR_FORWARD_SLASH) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === CHAR_DOT) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }
    if (startDot === -1 ||
        end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        (preDotState === 1 &&
         startDot === end - 1 &&
         startDot === startPart + 1)) {
      return '';
    }
    return path.slice(startDot, end);
  },
  format: _format.bind(null, '/'),
  parse(path) {
    validateString(path, 'path');
    const ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0)
      return ret;
    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    // Get non-dir info
    for (; i >= start; --i) {
      const code = path.charCodeAt(i);
      if (code === CHAR_FORWARD_SLASH) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === CHAR_DOT) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }
    if (end !== -1) {
      const start = startPart === 0 && isAbsolute ? 1 : startPart;
      if (startDot === -1 ||
          // We saw a non-dot character immediately before the dot
          preDotState === 0 ||
          // The (right-most) trimmed path component is exactly '..'
          (preDotState === 1 &&
          startDot === end - 1 &&
          startDot === startPart + 1)) {
        ret.base = ret.name = path.slice(start, end);
      } else {
        ret.name = path.slice(start, startDot);
        ret.base = path.slice(start, end);
        ret.ext = path.slice(startDot, end);
      }
    }
    if (startPart > 0)
      ret.dir = path.slice(0, startPart - 1);
    else if (isAbsolute)
      ret.dir = '/';
    return ret;
  },
  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
posix.win32 = win32.win32 = win32;
posix.posix = win32.posix = posix;
// Legacy internal API, docs-only deprecated: DEP0080
win32._makeLong = win32.toNamespacedPath;
posix._makeLong = posix.toNamespacedPath;
module.exports = process.platform === 'win32' ? win32 : posix;
'use strict';
const { Object } = primordials;
const {
  ELDHistogram: _ELDHistogram,
  PerformanceEntry,
  mark: _mark,
  clearMark: _clearMark,
  measure: _measure,
  milestones,
  observerCounts,
  setupObservers,
  timeOrigin,
  timeOriginTimestamp,
  timerify,
  constants,
  setupGarbageCollectionTracking
} = internalBinding('performance');
const {
  NODE_PERFORMANCE_ENTRY_TYPE_NODE,
  NODE_PERFORMANCE_ENTRY_TYPE_MARK,
  NODE_PERFORMANCE_ENTRY_TYPE_MEASURE,
  NODE_PERFORMANCE_ENTRY_TYPE_GC,
  NODE_PERFORMANCE_ENTRY_TYPE_FUNCTION,
  NODE_PERFORMANCE_ENTRY_TYPE_HTTP2,
  NODE_PERFORMANCE_ENTRY_TYPE_HTTP,
  NODE_PERFORMANCE_MILESTONE_NODE_START,
  NODE_PERFORMANCE_MILESTONE_V8_START,
  NODE_PERFORMANCE_MILESTONE_LOOP_START,
  NODE_PERFORMANCE_MILESTONE_LOOP_EXIT,
  NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE,
  NODE_PERFORMANCE_MILESTONE_ENVIRONMENT
} = constants;
const { AsyncResource } = require('async_hooks');
const L = require('internal/linkedlist');
const kInspect = require('internal/util').customInspectSymbol;
const {
  ERR_INVALID_CALLBACK,
  ERR_INVALID_ARG_VALUE,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_OPT_VALUE,
  ERR_VALID_PERFORMANCE_ENTRY_TYPE,
  ERR_INVALID_PERFORMANCE_MARK
} = require('internal/errors').codes;
const { setImmediate } = require('timers');
const kHandle = Symbol('handle');
const kMap = Symbol('map');
const kCallback = Symbol('callback');
const kTypes = Symbol('types');
const kEntries = Symbol('entries');
const kBuffer = Symbol('buffer');
const kBuffering = Symbol('buffering');
const kQueued = Symbol('queued');
const kTimerified = Symbol('timerified');
const kInsertEntry = Symbol('insert-entry');
const kGetEntries = Symbol('get-entries');
const kIndex = Symbol('index');
const kMarks = Symbol('marks');
const kCount = Symbol('count');
const observers = {};
const observerableTypes = [
  'node',
  'mark',
  'measure',
  'gc',
  'function',
  'http2',
  'http'
const IDX_STREAM_STATS_ID = 0;
const IDX_STREAM_STATS_TIMETOFIRSTBYTE = 1;
const IDX_STREAM_STATS_TIMETOFIRSTHEADER = 2;
const IDX_STREAM_STATS_TIMETOFIRSTBYTESENT = 3;
const IDX_STREAM_STATS_SENTBYTES = 4;
const IDX_STREAM_STATS_RECEIVEDBYTES = 5;
const IDX_SESSION_STATS_TYPE = 0;
const IDX_SESSION_STATS_PINGRTT = 1;
const IDX_SESSION_STATS_FRAMESRECEIVED = 2;
const IDX_SESSION_STATS_FRAMESSENT = 3;
const IDX_SESSION_STATS_STREAMCOUNT = 4;
const IDX_SESSION_STATS_STREAMAVERAGEDURATION = 5;
const IDX_SESSION_STATS_DATA_SENT = 6;
const IDX_SESSION_STATS_DATA_RECEIVED = 7;
const IDX_SESSION_STATS_MAX_CONCURRENT_STREAMS = 8;
let sessionStats;
let streamStats;
function collectHttp2Stats(entry) {
  const http2 = internalBinding('http2');
  switch (entry.name) {
    case 'Http2Stream':
      if (streamStats === undefined)
        streamStats = http2.streamStats;
      entry.id =
        streamStats[IDX_STREAM_STATS_ID] >>> 0;
      entry.timeToFirstByte =
        streamStats[IDX_STREAM_STATS_TIMETOFIRSTBYTE];
      entry.timeToFirstHeader =
        streamStats[IDX_STREAM_STATS_TIMETOFIRSTHEADER];
      entry.timeToFirstByteSent =
        streamStats[IDX_STREAM_STATS_TIMETOFIRSTBYTESENT];
      entry.bytesWritten =
        streamStats[IDX_STREAM_STATS_SENTBYTES];
      entry.bytesRead =
        streamStats[IDX_STREAM_STATS_RECEIVEDBYTES];
      break;
    case 'Http2Session':
      if (sessionStats === undefined)
        sessionStats = http2.sessionStats;
      entry.type =
        sessionStats[IDX_SESSION_STATS_TYPE] >>> 0 === 0 ? 'server' : 'client';
      entry.pingRTT =
        sessionStats[IDX_SESSION_STATS_PINGRTT];
      entry.framesReceived =
        sessionStats[IDX_SESSION_STATS_FRAMESRECEIVED];
      entry.framesSent =
        sessionStats[IDX_SESSION_STATS_FRAMESSENT];
      entry.streamCount =
        sessionStats[IDX_SESSION_STATS_STREAMCOUNT];
      entry.streamAverageDuration =
        sessionStats[IDX_SESSION_STATS_STREAMAVERAGEDURATION];
      entry.bytesWritten =
        sessionStats[IDX_SESSION_STATS_DATA_SENT];
      entry.bytesRead =
        sessionStats[IDX_SESSION_STATS_DATA_RECEIVED];
      entry.maxConcurrentStreams =
        sessionStats[IDX_SESSION_STATS_MAX_CONCURRENT_STREAMS];
      break;
function now() {
  const hr = process.hrtime();
  return hr[0] * 1000 + hr[1] / 1e6;
function getMilestoneTimestamp(milestoneIdx) {
  const ns = milestones[milestoneIdx];
  if (ns === -1)
    return ns;
  return ns / 1e6 - timeOrigin;
class PerformanceNodeTiming extends PerformanceEntry {
  get name() {
    return 'node';
  get entryType() {
    return 'node';
  get startTime() {
    return 0;
  get duration() {
    return now() - timeOrigin;
  get nodeStart() {
    return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_NODE_START);
  get v8Start() {
    return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_V8_START);
  get environment() {
    return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_ENVIRONMENT);
  get loopStart() {
    return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_LOOP_START);
  get loopExit() {
    return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_LOOP_EXIT);
  get bootstrapComplete() {
    return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE);
  [kInspect]() {
    return {
      name: 'node',
      entryType: 'node',
      startTime: this.startTime,
      duration: this.duration,
      nodeStart: this.nodeStart,
      v8Start: this.v8Start,
      bootstrapComplete: this.bootstrapComplete,
      environment: this.environment,
      loopStart: this.loopStart,
      loopExit: this.loopExit,
      thirdPartyMainStart: this.thirdPartyMainStart,
      thirdPartyMainEnd: this.thirdPartyMainEnd,
      clusterSetupStart: this.clusterSetupStart,
      clusterSetupEnd: this.clusterSetupEnd,
      moduleLoadStart: this.moduleLoadStart,
      moduleLoadEnd: this.moduleLoadEnd,
      preloadModuleLoadStart: this.preloadModuleLoadStart,
      preloadModuleLoadEnd: this.preloadModuleLoadEnd
    };
const nodeTiming = new PerformanceNodeTiming();
// Maintains a list of entries as a linked list stored in insertion order.
class PerformanceObserverEntryList {
  constructor() {
    Object.defineProperties(this, {
      [kEntries]: {
        writable: true,
        enumerable: false,
        value: {}
      },
      [kCount]: {
        writable: true,
        enumerable: false,
        value: 0
      }
    });
    L.init(this[kEntries]);
  [kInsertEntry](entry) {
    const item = { entry };
    L.append(this[kEntries], item);
    this[kCount]++;
  get length() {
    return this[kCount];
  [kGetEntries](name, type) {
    const ret = [];
    const list = this[kEntries];
    if (!L.isEmpty(list)) {
      let item = L.peek(list);
      while (item && item !== list) {
        const entry = item.entry;
        if ((name && entry.name !== name) ||
            (type && entry.entryType !== type)) {
          item = item._idlePrev;
          continue;
        }
        sortedInsert(ret, entry);
        item = item._idlePrev;
      }
    }
    return ret;
  // While the items are stored in insertion order, getEntries() is
  // required to return items sorted by startTime.
  getEntries() {
    return this[kGetEntries]();
  getEntriesByType(type) {
    return this[kGetEntries](undefined, `${type}`);
  getEntriesByName(name, type) {
    return this[kGetEntries](`${name}`, type !== undefined ? `${type}` : type);
let gcTrackingIsEnabled = false;
class PerformanceObserver extends AsyncResource {
  constructor(callback) {
    if (typeof callback !== 'function') {
      throw new ERR_INVALID_CALLBACK(callback);
    }
    super('PerformanceObserver');
    Object.defineProperties(this, {
      [kTypes]: {
        enumerable: false,
        writable: true,
        value: {}
      },
      [kCallback]: {
        enumerable: false,
        writable: true,
        value: callback
      },
      [kBuffer]: {
        enumerable: false,
        writable: true,
        value: new PerformanceObserverEntryList()
      },
      [kBuffering]: {
        enumerable: false,
        writable: true,
        value: false
      },
      [kQueued]: {
        enumerable: false,
        writable: true,
        value: false
      }
    });
  disconnect() {
    const types = this[kTypes];
    const keys = Object.keys(types);
    for (var n = 0; n < keys.length; n++) {
      const item = types[keys[n]];
      if (item) {
        L.remove(item);
        observerCounts[keys[n]]--;
      }
    }
    this[kTypes] = {};
  observe(options) {
    if (typeof options !== 'object' || options === null) {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    if (!Array.isArray(options.entryTypes)) {
      throw new ERR_INVALID_OPT_VALUE('entryTypes', options);
    }
    const entryTypes = options.entryTypes.filter(filterTypes).map(mapTypes);
    if (entryTypes.length === 0) {
      throw new ERR_VALID_PERFORMANCE_ENTRY_TYPE();
    }
    if (entryTypes.includes(NODE_PERFORMANCE_ENTRY_TYPE_GC) &&
      !gcTrackingIsEnabled) {
      setupGarbageCollectionTracking();
      gcTrackingIsEnabled = true;
    }
    this.disconnect();
    this[kBuffer][kEntries] = [];
    L.init(this[kBuffer][kEntries]);
    this[kBuffering] = Boolean(options.buffered);
    for (var n = 0; n < entryTypes.length; n++) {
      const entryType = entryTypes[n];
      const list = getObserversList(entryType);
      const item = { obs: this };
      this[kTypes][entryType] = item;
      L.append(list, item);
      observerCounts[entryType]++;
    }
class Performance {
  constructor() {
    this[kIndex] = {
      [kMarks]: new Set()
    };
  get nodeTiming() {
    return nodeTiming;
  get timeOrigin() {
    return timeOriginTimestamp;
  now() {
    return now() - timeOrigin;
  mark(name) {
    name = `${name}`;
    _mark(name);
    this[kIndex][kMarks].add(name);
  measure(name, startMark, endMark) {
    name = `${name}`;
    endMark = `${endMark}`;
    startMark = startMark !== undefined ? `${startMark}` : '';
    const marks = this[kIndex][kMarks];
    if (!marks.has(endMark) && !(endMark in nodeTiming)) {
      throw new ERR_INVALID_PERFORMANCE_MARK(endMark);
    }
    _measure(name, startMark, endMark);
  clearMarks(name) {
    name = name !== undefined ? `${name}` : name;
    if (name !== undefined) {
      this[kIndex][kMarks].delete(name);
      _clearMark(name);
    } else {
      this[kIndex][kMarks].clear();
      _clearMark();
    }
  timerify(fn) {
    if (typeof fn !== 'function') {
      throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);
    }
    if (fn[kTimerified])
      return fn[kTimerified];
    const ret = timerify(fn, fn.length);
    Object.defineProperty(fn, kTimerified, {
      enumerable: false,
      configurable: true,
      writable: false,
      value: ret
    });
    Object.defineProperties(ret, {
      [kTimerified]: {
        enumerable: false,
        configurable: true,
        writable: false,
        value: ret
      },
      name: {
        enumerable: false,
        configurable: true,
        writable: false,
        value: `timerified ${fn.name}`
      }
    });
    return ret;
  [kInspect]() {
    return {
      nodeTiming: this.nodeTiming,
      timeOrigin: this.timeOrigin
    };
const performance = new Performance();
function getObserversList(type) {
  let list = observers[type];
  if (list === undefined) {
    list = observers[type] = {};
    L.init(list);
  return list;
function doNotify() {
  this[kQueued] = false;
  this.runInAsyncScope(this[kCallback], this, this[kBuffer], this);
  this[kBuffer][kEntries] = [];
  L.init(this[kBuffer][kEntries]);
// Set up the callback used to receive PerformanceObserver notifications
function observersCallback(entry) {
  const type = mapTypes(entry.entryType);
  if (type === NODE_PERFORMANCE_ENTRY_TYPE_HTTP2)
    collectHttp2Stats(entry);
  const list = getObserversList(type);
  let current = L.peek(list);
  while (current && current.obs) {
    const observer = current.obs;
    // First, add the item to the observers buffer
    const buffer = observer[kBuffer];
    buffer[kInsertEntry](entry);
    // Second, check to see if we're buffering
    if (observer[kBuffering]) {
      // If we are, schedule a setImmediate call if one hasn't already
      if (!observer[kQueued]) {
        observer[kQueued] = true;
        // Use setImmediate instead of nextTick to give more time
        // for multiple entries to collect.
        setImmediate(doNotify.bind(observer));
      }
    } else {
      // If not buffering, notify immediately
      doNotify.call(observer);
    }
    current = current._idlePrev;
setupObservers(observersCallback);
function filterTypes(i) {
  return observerableTypes.indexOf(`${i}`) >= 0;
function mapTypes(i) {
  switch (i) {
    case 'node': return NODE_PERFORMANCE_ENTRY_TYPE_NODE;
    case 'mark': return NODE_PERFORMANCE_ENTRY_TYPE_MARK;
    case 'measure': return NODE_PERFORMANCE_ENTRY_TYPE_MEASURE;
    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;
    case 'function': return NODE_PERFORMANCE_ENTRY_TYPE_FUNCTION;
    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;
    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;
// The specification requires that PerformanceEntry instances are sorted
// according to startTime. Unfortunately, they are not necessarily created
// in that same order, and can be reported to the JS layer in any order,
// which means we need to keep the list sorted as we insert.
function getInsertLocation(list, entryStartTime) {
  let start = 0;
  let end = list.length;
  while (start < end) {
    const pivot = (end + start) >>> 1;
    if (list[pivot].startTime === entryStartTime)
      return pivot;
    if (list[pivot].startTime < entryStartTime)
      start = pivot + 1;
    else
      end = pivot;
  return start;
function sortedInsert(list, entry) {
  const entryStartTime = entry.startTime;
  if (list.length === 0 ||
      (list[list.length - 1].startTime < entryStartTime)) {
    list.push(entry);
    return;
  if (list[0] && (list[0].startTime > entryStartTime)) {
    list.unshift(entry);
    return;
  const location = getInsertLocation(list, entryStartTime);
  list.splice(location, 0, entry);
class ELDHistogram {
  constructor(handle) {
    this[kHandle] = handle;
    this[kMap] = new Map();
  reset() { this[kHandle].reset(); }
  enable() { return this[kHandle].enable(); }
  disable() { return this[kHandle].disable(); }
  get exceeds() { return this[kHandle].exceeds(); }
  get min() { return this[kHandle].min(); }
  get max() { return this[kHandle].max(); }
  get mean() { return this[kHandle].mean(); }
  get stddev() { return this[kHandle].stddev(); }
  percentile(percentile) {
    if (typeof percentile !== 'number') {
      throw new ERR_INVALID_ARG_TYPE('percentile', 'number', percentile);
    }
    if (percentile <= 0 || percentile > 100) {
      throw new ERR_INVALID_ARG_VALUE.RangeError('percentile',
                                                 percentile);
    }
    return this[kHandle].percentile(percentile);
  get percentiles() {
    this[kMap].clear();
    this[kHandle].percentiles(this[kMap]);
    return this[kMap];
  [kInspect]() {
    return {
      min: this.min,
      max: this.max,
      mean: this.mean,
      stddev: this.stddev,
      percentiles: this.percentiles,
      exceeds: this.exceeds
    };
function monitorEventLoopDelay(options = {}) {
  if (typeof options !== 'object' || options === null) {
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  const { resolution = 10 } = options;
  if (typeof resolution !== 'number') {
    throw new ERR_INVALID_ARG_TYPE('options.resolution',
                                   'number', resolution);
  if (resolution <= 0 || !Number.isSafeInteger(resolution)) {
    throw new ERR_INVALID_OPT_VALUE.RangeError('resolution', resolution);
  return new ELDHistogram(new _ELDHistogram(resolution));
module.exports = {
  performance,
  PerformanceObserver,
  monitorEventLoopDelay
Object.defineProperty(module.exports, 'constants', {
  configurable: false,
  enumerable: true,
  value: constants
'use strict';
// Re-export process as a native module
module.exports = process;
'use strict';
/** Highest positive signed 32-bit float value */
const maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
/** Bootstring parameters */
const base = 36;
const tMin = 1;
const tMax = 26;
const skew = 38;
const damp = 700;
const initialBias = 72;
const initialN = 128; // 0x80
const delimiter = '-'; // '\x2D'
/** Regular expressions */
const regexPunycode = /^xn--/;
const regexNonASCII = /[^\0-\x7E]/; // non-ASCII chars
const regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
/** Error messages */
const errors = {
'overflow': 'Overflow: input needs wider integers to process',
'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
'invalid-input': 'Invalid input'
/** Convenience shortcuts */
const baseMinusTMin = base - tMin;
const floor = Math.floor;
const stringFromCharCode = String.fromCharCode;
/*--------------------------------------------------------------------------*/
 * A generic error utility function.
 * @private
 * @param {String} type The error type.
 * @returns {Error} Throws a `RangeError` with the applicable error message.
function error(type) {
throw new RangeError(errors[type]);
 * A generic `Array#map` utility function.
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} callback The function that gets called for every array
 * item.
 * @returns {Array} A new array of values returned by the callback function.
function map(array, fn) {
const result = [];
let length = array.length;
while (length--) {
result[length] = fn(array[length]);
return result;
 * A simple `Array#map`-like wrapper to work with domain name strings or email
 * addresses.
 * @private
 * @param {String} domain The domain name or email address.
 * @param {Function} callback The function that gets called for every
 * character.
 * @returns {Array} A new string of characters returned by the callback
 * function.
function mapDomain(string, fn) {
const parts = string.split('@');
let result = '';
if (parts.length > 1) {
// In email addresses, only the domain name should be punycoded. Leave
// the local part (i.e. everything up to `@`) intact.
result = parts[0] + '@';
string = parts[1];
// Avoid `split(regex)` for IE8 compatibility. See #17.
string = string.replace(regexSeparators, '\x2E');
const labels = string.split('.');
const encoded = map(labels, fn).join('.');
return result + encoded;
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 * @see `punycode.ucs2.encode`
 * @see <https://mathiasbynens.be/notes/javascript-encoding>
 * @memberOf punycode.ucs2
 * @name decode
 * @param {String} string The Unicode input string (UCS-2).
 * @returns {Array} The new array of code points.
function ucs2decode(string) {
const output = [];
let counter = 0;
const length = string.length;
while (counter < length) {
const value = string.charCodeAt(counter++);
if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
// It's a high surrogate, and there is a next character.
const extra = string.charCodeAt(counter++);
if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
} else {
// It's an unmatched surrogate; only append this code unit, in case the
// next code unit is the high surrogate of a surrogate pair.
output.push(value);
counter--;
} else {
output.push(value);
return output;
 * Creates a string based on an array of numeric code points.
 * @see `punycode.ucs2.decode`
 * @memberOf punycode.ucs2
 * @name encode
 * @param {Array} codePoints The array of numeric code points.
 * @returns {String} The new Unicode string (UCS-2).
const ucs2encode = array => String.fromCodePoint(...array);
 * Converts a basic code point into a digit/integer.
 * @see `digitToBasic()`
 * @private
 * @param {Number} codePoint The basic numeric code point value.
 * @returns {Number} The numeric value of a basic code point (for use in
 * representing integers) in the range `0` to `base - 1`, or `base` if
 * the code point does not represent a value.
const basicToDigit = function(codePoint) {
if (codePoint - 0x30 < 0x0A) {
return codePoint - 0x16;
if (codePoint - 0x41 < 0x1A) {
return codePoint - 0x41;
if (codePoint - 0x61 < 0x1A) {
return codePoint - 0x61;
return base;
 * Converts a digit/integer into a basic code point.
 * @see `basicToDigit()`
 * @private
 * @param {Number} digit The numeric value of a basic code point.
 * @returns {Number} The basic code point whose value (when used for
 * representing integers) is `digit`, which needs to be in the range
 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
 * used; else, the lowercase form is used. The behavior is undefined
 * if `flag` is non-zero and `digit` has no uppercase form.
const digitToBasic = function(digit, flag) {
//  0..25 map to ASCII a..z or A..Z
// 26..35 map to ASCII 0..9
return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 * @private
const adapt = function(delta, numPoints, firstTime) {
let k = 0;
delta = firstTime ? floor(delta / damp) : delta >> 1;
delta += floor(delta / numPoints);
for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
delta = floor(delta / baseMinusTMin);
return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
 * symbols.
 * @memberOf punycode
 * @param {String} input The Punycode string of ASCII-only symbols.
 * @returns {String} The resulting string of Unicode symbols.
const decode = function(input) {
// Don't use UCS-2.
const output = [];
const inputLength = input.length;
let i = 0;
let n = initialN;
let bias = initialBias;
// Handle the basic code points: let `basic` be the number of input code
// points before the last delimiter, or `0` if there is none, then copy
// the first basic code points to the output.
let basic = input.lastIndexOf(delimiter);
if (basic < 0) {
basic = 0;
for (let j = 0; j < basic; ++j) {
// if it's not a basic code point
if (input.charCodeAt(j) >= 0x80) {
error('not-basic');
output.push(input.charCodeAt(j));
// Main decoding loop: start just after the last delimiter if any basic code
// points were copied; start at the beginning otherwise.
for (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {
// `index` is the index of the next character to be consumed.
// Decode a generalized variable-length integer into `delta`,
// which gets added to `i`. The overflow checking is easier
// if we increase `i` as we go, then subtract off its starting
// value at the end to obtain `delta`.
let oldi = i;
for (let w = 1, k = base; /* no condition */; k += base) {
if (index >= inputLength) {
error('invalid-input');
const digit = basicToDigit(input.charCodeAt(index++));
if (digit >= base || digit > floor((maxInt - i) / w)) {
error('overflow');
i += digit * w;
const t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
if (digit < t) {
break;
const baseMinusT = base - t;
if (w > floor(maxInt / baseMinusT)) {
error('overflow');
w *= baseMinusT;
const out = output.length + 1;
bias = adapt(i - oldi, out, oldi == 0);
// `i` was supposed to wrap around from `out` to `0`,
// incrementing `n` each time, so we'll fix that now:
if (floor(i / out) > maxInt - n) {
error('overflow');
n += floor(i / out);
i %= out;
// Insert `n` at position `i` of the output.
output.splice(i++, 0, n);
return String.fromCodePoint(...output);
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 * @memberOf punycode
 * @param {String} input The string of Unicode symbols.
 * @returns {String} The resulting Punycode string of ASCII-only symbols.
const encode = function(input) {
const output = [];
// Convert the input in UCS-2 to an array of Unicode code points.
input = ucs2decode(input);
// Cache the length.
let inputLength = input.length;
// Initialize the state.
let n = initialN;
let delta = 0;
let bias = initialBias;
// Handle the basic code points.
for (const currentValue of input) {
if (currentValue < 0x80) {
output.push(stringFromCharCode(currentValue));
let basicLength = output.length;
let handledCPCount = basicLength;
// `handledCPCount` is the number of code points that have been handled;
// `basicLength` is the number of basic code points.
// Finish the basic string with a delimiter unless it's empty.
if (basicLength) {
output.push(delimiter);
// Main encoding loop:
while (handledCPCount < inputLength) {
// All non-basic code points < n have been handled already. Find the next
// larger one:
let m = maxInt;
for (const currentValue of input) {
if (currentValue >= n && currentValue < m) {
m = currentValue;
// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
// but guard against overflow.
const handledCPCountPlusOne = handledCPCount + 1;
if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
error('overflow');
delta += (m - n) * handledCPCountPlusOne;
n = m;
for (const currentValue of input) {
if (currentValue < n && ++delta > maxInt) {
error('overflow');
if (currentValue == n) {
// Represent delta as a generalized variable-length integer.
let q = delta;
for (let k = base; /* no condition */; k += base) {
const t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
if (q < t) {
break;
const qMinusT = q - t;
const baseMinusT = base - t;
output.push(
stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
q = floor(qMinusT / baseMinusT);
output.push(stringFromCharCode(digitToBasic(q, 0)));
bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
delta = 0;
++handledCPCount;
++delta;
++n;
return output.join('');
 * Converts a Punycode string representing a domain name or an email address
 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
 * it doesn't matter if you call it on a string that has already been
 * converted to Unicode.
 * @memberOf punycode
 * @param {String} input The Punycoded domain name or email address to
 * convert to Unicode.
 * @returns {String} The Unicode representation of the given Punycode
 * string.
const toUnicode = function(input) {
return mapDomain(input, function(string) {
return regexPunycode.test(string)
? decode(string.slice(4).toLowerCase())
: string;
 * Converts a Unicode string representing a domain name or an email address to
 * Punycode. Only the non-ASCII parts of the domain name will be converted,
 * i.e. it doesn't matter if you call it with a domain that's already in
 * ASCII.
 * @memberOf punycode
 * @param {String} input The domain name or email address to convert, as a
 * Unicode string.
 * @returns {String} The Punycode representation of the given domain name or
 * email address.
const toASCII = function(input) {
return mapDomain(input, function(string) {
return regexNonASCII.test(string)
? 'xn--' + encode(string)
: string;
/*--------------------------------------------------------------------------*/
/** Define the public API */
const punycode = {
 * A string representing the current Punycode.js version number.
 * @memberOf punycode
 * @type String
'version': '2.1.0',
 * An object of methods to convert from JavaScript's internal character
 * representation (UCS-2) to Unicode code points, and back.
 * @see <https://mathiasbynens.be/notes/javascript-encoding>
 * @memberOf punycode
 * @type Object
'ucs2': {
'decode': ucs2decode,
'encode': ucs2encode
'decode': decode,
'encode': encode,
'toASCII': toASCII,
'toUnicode': toUnicode
module.exports = punycode;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// Query String Utilities
'use strict';
const { Object } = primordials;
const { Buffer } = require('buffer');
const {
  encodeStr,
  hexTable,
  isHexTable
} = require('internal/querystring');
const QueryString = module.exports = {
  unescapeBuffer,
  // `unescape()` is a JS global, so we need to use a different local name
  unescape: qsUnescape,
  // `escape()` is a JS global, so we need to use a different local name
  escape: qsEscape,
  stringify,
  encode: stringify,
  parse,
  decode: parse
const unhexTable = [
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 0 - 15
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 16 - 31
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 32 - 47
  +0, +1, +2, +3, +4, +5, +6, +7, +8, +9, -1, -1, -1, -1, -1, -1, // 48 - 63
  -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 64 - 79
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 80 - 95
  -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 96 - 111
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 112 - 127
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 128 ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1  // ... 255
// A safe fast alternative to decodeURIComponent
function unescapeBuffer(s, decodeSpaces) {
  const out = Buffer.allocUnsafe(s.length);
  var index = 0;
  var outIndex = 0;
  var currentChar;
  var nextChar;
  var hexHigh;
  var hexLow;
  const maxLength = s.length - 2;
  // Flag to know if some hex chars have been decoded
  var hasHex = false;
  while (index < s.length) {
    currentChar = s.charCodeAt(index);
    if (currentChar === 43 /* '+' */ && decodeSpaces) {
      out[outIndex++] = 32; // ' '
      index++;
      continue;
    }
    if (currentChar === 37 /* '%' */ && index < maxLength) {
      currentChar = s.charCodeAt(++index);
      hexHigh = unhexTable[currentChar];
      if (!(hexHigh >= 0)) {
        out[outIndex++] = 37; // '%'
      } else {
        nextChar = s.charCodeAt(++index);
        hexLow = unhexTable[nextChar];
        if (!(hexLow >= 0)) {
          out[outIndex++] = 37; // '%'
          out[outIndex++] = currentChar;
          currentChar = nextChar;
        } else {
          hasHex = true;
          currentChar = hexHigh * 16 + hexLow;
        }
      }
    }
    out[outIndex++] = currentChar;
    index++;
  return hasHex ? out.slice(0, outIndex) : out;
function qsUnescape(s, decodeSpaces) {
  try {
    return decodeURIComponent(s);
  } catch {
    return QueryString.unescapeBuffer(s, decodeSpaces).toString();
// These characters do not need escaping when generating query strings:
// ! - . _ ~
// ' ( ) *
// digits
// alpha (uppercase)
// alpha (lowercase)
const noEscape = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31
  0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, // 32 - 47
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, // 80 - 95
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0  // 112 - 127
// QueryString.escape() replaces encodeURIComponent()
// http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3.4
function qsEscape(str) {
  if (typeof str !== 'string') {
    if (typeof str === 'object')
      str = String(str);
    else
      str += '';
  return encodeStr(str, noEscape, hexTable);
function stringifyPrimitive(v) {
  if (typeof v === 'string')
    return v;
  if (typeof v === 'number' && isFinite(v))
    return '' + v;
  if (typeof v === 'boolean')
    return v ? 'true' : 'false';
  return '';
function stringify(obj, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var encode = QueryString.escape;
  if (options && typeof options.encodeURIComponent === 'function') {
    encode = options.encodeURIComponent;
  if (obj !== null && typeof obj === 'object') {
    var keys = Object.keys(obj);
    var len = keys.length;
    var flast = len - 1;
    var fields = '';
    for (var i = 0; i < len; ++i) {
      var k = keys[i];
      var v = obj[k];
      var ks = encode(stringifyPrimitive(k)) + eq;
      if (Array.isArray(v)) {
        var vlen = v.length;
        if (vlen === 0) continue;
        var vlast = vlen - 1;
        for (var j = 0; j < vlen; ++j) {
          fields += ks + encode(stringifyPrimitive(v[j]));
          if (j < vlast)
            fields += sep;
        }
      } else {
        fields += ks + encode(stringifyPrimitive(v));
      }
      if (i < flast)
        fields += sep;
    }
    return fields;
  return '';
function charCodes(str) {
  if (str.length === 0) return [];
  if (str.length === 1) return [str.charCodeAt(0)];
  const ret = [];
  for (var i = 0; i < str.length; ++i)
    ret[ret.length] = str.charCodeAt(i);
  return ret;
const defSepCodes = [38]; // &
const defEqCodes = [61]; // =
// Parse a key/val string.
function parse(qs, sep, eq, options) {
  const obj = Object.create(null);
  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  const sepCodes = (!sep ? defSepCodes : charCodes(sep + ''));
  const eqCodes = (!eq ? defEqCodes : charCodes(eq + ''));
  const sepLen = sepCodes.length;
  const eqLen = eqCodes.length;
  var pairs = 1000;
  if (options && typeof options.maxKeys === 'number') {
    // -1 is used in place of a value like Infinity for meaning
    // "unlimited pairs" because of additional checks V8 (at least as of v5.4)
    // has to do when using variables that contain values like Infinity. Since
    // `pairs` is always decremented and checked explicitly for 0, -1 works
    // effectively the same as Infinity, while providing a significant
    // performance boost.
    pairs = (options.maxKeys > 0 ? options.maxKeys : -1);
  var decode = QueryString.unescape;
  if (options && typeof options.decodeURIComponent === 'function') {
    decode = options.decodeURIComponent;
  const customDecode = (decode !== qsUnescape);
  var lastPos = 0;
  var sepIdx = 0;
  var eqIdx = 0;
  var key = '';
  var value = '';
  var keyEncoded = customDecode;
  var valEncoded = customDecode;
  const plusChar = (customDecode ? '%20' : ' ');
  var encodeCheck = 0;
  for (var i = 0; i < qs.length; ++i) {
    const code = qs.charCodeAt(i);
    // Try matching key/value pair separator (e.g. '&')
    if (code === sepCodes[sepIdx]) {
      if (++sepIdx === sepLen) {
        // Key/value pair separator match!
        const end = i - sepIdx + 1;
        if (eqIdx < eqLen) {
          // We didn't find the (entire) key/value separator
          if (lastPos < end) {
            // Treat the substring as part of the key instead of the value
            key += qs.slice(lastPos, end);
          } else if (key.length === 0) {
            // We saw an empty substring between separators
            if (--pairs === 0)
              return obj;
            lastPos = i + 1;
            sepIdx = eqIdx = 0;
            continue;
          }
        } else if (lastPos < end) {
          value += qs.slice(lastPos, end);
        }
        if (key.length > 0 && keyEncoded)
          key = decodeStr(key, decode);
        if (value.length > 0 && valEncoded)
          value = decodeStr(value, decode);
        if (obj[key] === undefined) {
          obj[key] = value;
        } else {
          const curValue = obj[key];
          // A simple Array-specific property check is enough here to
          // distinguish from a string value and is faster and still safe
          // since we are generating all of the values being assigned.
          if (curValue.pop)
            curValue[curValue.length] = value;
          else
            obj[key] = [curValue, value];
        }
        if (--pairs === 0)
          return obj;
        keyEncoded = valEncoded = customDecode;
        key = value = '';
        encodeCheck = 0;
        lastPos = i + 1;
        sepIdx = eqIdx = 0;
      }
    } else {
      sepIdx = 0;
      // Try matching key/value separator (e.g. '=') if we haven't already
      if (eqIdx < eqLen) {
        if (code === eqCodes[eqIdx]) {
          if (++eqIdx === eqLen) {
            // Key/value separator match!
            const end = i - eqIdx + 1;
            if (lastPos < end)
              key += qs.slice(lastPos, end);
            encodeCheck = 0;
            lastPos = i + 1;
          }
          continue;
        } else {
          eqIdx = 0;
          if (!keyEncoded) {
            // Try to match an (valid) encoded byte once to minimize unnecessary
            // calls to string decoding functions
            if (code === 37/* % */) {
              encodeCheck = 1;
              continue;
            } else if (encodeCheck > 0) {
              if (isHexTable[code] === 1) {
                if (++encodeCheck === 3)
                  keyEncoded = true;
                continue;
              } else {
                encodeCheck = 0;
              }
            }
          }
        }
        if (code === 43/* + */) {
          if (lastPos < i)
            key += qs.slice(lastPos, i);
          key += plusChar;
          lastPos = i + 1;
          continue;
        }
      }
      if (code === 43/* + */) {
        if (lastPos < i)
          value += qs.slice(lastPos, i);
        value += plusChar;
        lastPos = i + 1;
      } else if (!valEncoded) {
        // Try to match an (valid) encoded byte (once) to minimize unnecessary
        // calls to string decoding functions
        if (code === 37/* % */) {
          encodeCheck = 1;
        } else if (encodeCheck > 0) {
          if (isHexTable[code] === 1) {
            if (++encodeCheck === 3)
              valEncoded = true;
          } else {
            encodeCheck = 0;
          }
        }
      }
    }
  // Deal with any leftover key or value data
  if (lastPos < qs.length) {
    if (eqIdx < eqLen)
      key += qs.slice(lastPos);
    else if (sepIdx < sepLen)
      value += qs.slice(lastPos);
  } else if (eqIdx === 0 && key.length === 0) {
    // We ended on an empty substring
    return obj;
  if (key.length > 0 && keyEncoded)
    key = decodeStr(key, decode);
  if (value.length > 0 && valEncoded)
    value = decodeStr(value, decode);
  if (obj[key] === undefined) {
    obj[key] = value;
  } else {
    const curValue = obj[key];
    // A simple Array-specific property check is enough here to
    // distinguish from a string value and is faster and still safe since
    // we are generating all of the values being assigned.
    if (curValue.pop)
      curValue[curValue.length] = value;
    else
      obj[key] = [curValue, value];
  return obj;
// v8 does not optimize functions with try-catch blocks, so we isolate them here
// to minimize the damage (Note: no longer true as of V8 5.4 -- but still will
// not be inlined).
function decodeStr(s, decoder) {
  try {
    return decoder(s);
  } catch {
    return QueryString.unescape(s, true);
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// Inspiration for this code comes from Salvatore Sanfilippo's linenoise.
// https://github.com/antirez/linenoise
// Reference:
// * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html
// * http://www.3waylabs.com/nw/WWW/products/wizcon/vt220.html
'use strict';
const { Math, Object } = primordials;
const {
  ERR_INVALID_CALLBACK,
  ERR_INVALID_CURSOR_POS,
  ERR_INVALID_OPT_VALUE
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const { inspect } = require('internal/util/inspect');
const EventEmitter = require('events');
const {
  CSI,
  emitKeys,
  getStringWidth,
  isFullWidthCodePoint,
  kUTF16SurrogateThreshold,
  stripVTControlCharacters
} = require('internal/readline/utils');
const { clearTimeout, setTimeout } = require('timers');
const {
  kEscape,
  kClearToBeginning,
  kClearToEnd,
  kClearLine,
  kClearScreenDown
} = CSI;
// Lazy load StringDecoder for startup performance.
let StringDecoder;
// Lazy load Readable for startup performance.
let Readable;
const kHistorySize = 30;
const kMincrlfDelay = 100;
// \r\n, \n, or \r followed by something other than \n
const lineEnding = /\r?\n|\r(?!\n)/;
const kLineObjectStream = Symbol('line object stream');
const KEYPRESS_DECODER = Symbol('keypress-decoder');
const ESCAPE_DECODER = Symbol('escape-decoder');
// GNU readline library - keyseq-timeout is 500ms (default)
const ESCAPE_CODE_TIMEOUT = 500;
function createInterface(input, output, completer, terminal) {
  return new Interface(input, output, completer, terminal);
function Interface(input, output, completer, terminal) {
  if (!(this instanceof Interface)) {
    return new Interface(input, output, completer, terminal);
  if (StringDecoder === undefined)
    StringDecoder = require('string_decoder').StringDecoder;
  this._sawReturnAt = 0;
  this.isCompletionEnabled = true;
  this._sawKeyPress = false;
  this._previousKey = null;
  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;
  EventEmitter.call(this);
  var historySize;
  var removeHistoryDuplicates = false;
  let crlfDelay;
  let prompt = '> ';
  if (input && input.input) {
    // An options object was given
    output = input.output;
    completer = input.completer;
    terminal = input.terminal;
    historySize = input.historySize;
    removeHistoryDuplicates = input.removeHistoryDuplicates;
    if (input.prompt !== undefined) {
      prompt = input.prompt;
    }
    if (input.escapeCodeTimeout !== undefined) {
      if (Number.isFinite(input.escapeCodeTimeout)) {
        this.escapeCodeTimeout = input.escapeCodeTimeout;
      } else {
        throw new ERR_INVALID_OPT_VALUE(
          'escapeCodeTimeout',
          this.escapeCodeTimeout
        );
      }
    }
    crlfDelay = input.crlfDelay;
    input = input.input;
  if (completer && typeof completer !== 'function') {
    throw new ERR_INVALID_OPT_VALUE('completer', completer);
  if (historySize === undefined) {
    historySize = kHistorySize;
  if (typeof historySize !== 'number' ||
      Number.isNaN(historySize) ||
      historySize < 0) {
    throw new ERR_INVALID_OPT_VALUE.RangeError('historySize', historySize);
  // Backwards compat; check the isTTY prop of the output stream
  //  when `terminal` was not specified
  if (terminal === undefined && !(output === null || output === undefined)) {
    terminal = !!output.isTTY;
  const self = this;
  this.output = output;
  this.input = input;
  this.historySize = historySize;
  this.removeHistoryDuplicates = !!removeHistoryDuplicates;
  this.crlfDelay = crlfDelay ?
    Math.max(kMincrlfDelay, crlfDelay) : kMincrlfDelay;
  // Check arity, 2 - for async, 1 for sync
  if (typeof completer === 'function') {
    this.completer = completer.length === 2 ?
      completer :
      function completerWrapper(v, cb) {
        cb(null, completer(v));
      };
  this.setPrompt(prompt);
  this.terminal = !!terminal;
  if (process.env.TERM === 'dumb') {
    this._ttyWrite = _ttyWriteDumb.bind(this);
  function ondata(data) {
    self._normalWrite(data);
  function onend() {
    if (typeof self._line_buffer === 'string' &&
        self._line_buffer.length > 0) {
      self.emit('line', self._line_buffer);
    }
    self.close();
  function ontermend() {
    if (typeof self.line === 'string' && self.line.length > 0) {
      self.emit('line', self.line);
    }
    self.close();
  function onkeypress(s, key) {
    self._ttyWrite(s, key);
    if (key && key.sequence) {
      // If the key.sequence is half of a surrogate pair
      // (>= 0xd800 and <= 0xdfff), refresh the line so
      // the character is displayed appropriately.
      const ch = key.sequence.codePointAt(0);
      if (ch >= 0xd800 && ch <= 0xdfff)
        self._refreshLine();
    }
  function onresize() {
    self._refreshLine();
  this[kLineObjectStream] = undefined;
  if (!this.terminal) {
    function onSelfCloseWithoutTerminal() {
      input.removeListener('data', ondata);
      input.removeListener('end', onend);
    }
    input.on('data', ondata);
    input.on('end', onend);
    self.once('close', onSelfCloseWithoutTerminal);
    this._decoder = new StringDecoder('utf8');
  } else {
    function onSelfCloseWithTerminal() {
      input.removeListener('keypress', onkeypress);
      input.removeListener('end', ontermend);
      if (output !== null && output !== undefined) {
        output.removeListener('resize', onresize);
      }
    }
    emitKeypressEvents(input, this);
    // `input` usually refers to stdin
    input.on('keypress', onkeypress);
    input.on('end', ontermend);
    // Current line
    this.line = '';
    this._setRawMode(true);
    this.terminal = true;
    // Cursor position on the line.
    this.cursor = 0;
    this.history = [];
    this.historyIndex = -1;
    if (output !== null && output !== undefined)
      output.on('resize', onresize);
    self.once('close', onSelfCloseWithTerminal);
  input.resume();
Object.setPrototypeOf(Interface.prototype, EventEmitter.prototype);
Object.setPrototypeOf(Interface, EventEmitter);
Object.defineProperty(Interface.prototype, 'columns', {
  configurable: true,
  enumerable: true,
  get: function() {
    var columns = Infinity;
    if (this.output && this.output.columns)
      columns = this.output.columns;
    return columns;
Interface.prototype.setPrompt = function(prompt) {
  this._prompt = prompt;
Interface.prototype._setRawMode = function(mode) {
  const wasInRawMode = this.input.isRaw;
  if (typeof this.input.setRawMode === 'function') {
    this.input.setRawMode(mode);
  return wasInRawMode;
Interface.prototype.prompt = function(preserveCursor) {
  if (this.paused) this.resume();
  if (this.terminal && process.env.TERM !== 'dumb') {
    if (!preserveCursor) this.cursor = 0;
    this._refreshLine();
  } else {
    this._writeToOutput(this._prompt);
Interface.prototype.question = function(query, cb) {
  if (typeof cb === 'function') {
    if (this._questionCallback) {
      this.prompt();
    } else {
      this._oldPrompt = this._prompt;
      this.setPrompt(query);
      this._questionCallback = cb;
      this.prompt();
    }
Interface.prototype._onLine = function(line) {
  if (this._questionCallback) {
    var cb = this._questionCallback;
    this._questionCallback = null;
    this.setPrompt(this._oldPrompt);
    cb(line);
  } else {
    this.emit('line', line);
Interface.prototype._writeToOutput = function _writeToOutput(stringToWrite) {
  validateString(stringToWrite, 'stringToWrite');
  if (this.output !== null && this.output !== undefined) {
    this.output.write(stringToWrite);
Interface.prototype._addHistory = function() {
  if (this.line.length === 0) return '';
  // If the history is disabled then return the line
  if (this.historySize === 0) return this.line;
  // If the trimmed line is empty then return the line
  if (this.line.trim().length === 0) return this.line;
  if (this.history.length === 0 || this.history[0] !== this.line) {
    if (this.removeHistoryDuplicates) {
      // Remove older history line if identical to new one
      const dupIndex = this.history.indexOf(this.line);
      if (dupIndex !== -1) this.history.splice(dupIndex, 1);
    }
    this.history.unshift(this.line);
    // Only store so many
    if (this.history.length > this.historySize) this.history.pop();
  this.historyIndex = -1;
  return this.history[0];
Interface.prototype._refreshLine = function() {
  // line length
  const line = this._prompt + this.line;
  const dispPos = this._getDisplayPos(line);
  const lineCols = dispPos.cols;
  const lineRows = dispPos.rows;
  // cursor position
  const cursorPos = this._getCursorPos();
  // First move to the bottom of the current line, based on cursor pos
  const prevRows = this.prevRows || 0;
  if (prevRows > 0) {
    moveCursor(this.output, 0, -prevRows);
  // Cursor to left edge.
  cursorTo(this.output, 0);
  // erase data
  clearScreenDown(this.output);
  // Write the prompt and the current buffer content.
  this._writeToOutput(line);
  // Force terminal to allocate a new line
  if (lineCols === 0) {
    this._writeToOutput(' ');
  // Move cursor to original position.
  cursorTo(this.output, cursorPos.cols);
  const diff = lineRows - cursorPos.rows;
  if (diff > 0) {
    moveCursor(this.output, 0, -diff);
  this.prevRows = cursorPos.rows;
Interface.prototype.close = function() {
  if (this.closed) return;
  this.pause();
  if (this.terminal) {
    this._setRawMode(false);
  this.closed = true;
  this.emit('close');
Interface.prototype.pause = function() {
  if (this.paused) return;
  this.input.pause();
  this.paused = true;
  this.emit('pause');
  return this;
Interface.prototype.resume = function() {
  if (!this.paused) return;
  this.input.resume();
  this.paused = false;
  this.emit('resume');
  return this;
Interface.prototype.write = function(d, key) {
  if (this.paused) this.resume();
  if (this.terminal) {
    this._ttyWrite(d, key);
  } else {
    this._normalWrite(d);
Interface.prototype._normalWrite = function(b) {
  if (b === undefined) {
    return;
  var string = this._decoder.write(b);
  if (this._sawReturnAt &&
      Date.now() - this._sawReturnAt <= this.crlfDelay) {
    string = string.replace(/^\n/, '');
    this._sawReturnAt = 0;
  // Run test() on the new string chunk, not on the entire line buffer.
  const newPartContainsEnding = lineEnding.test(string);
  if (this._line_buffer) {
    string = this._line_buffer + string;
    this._line_buffer = null;
  if (newPartContainsEnding) {
    this._sawReturnAt = string.endsWith('\r') ? Date.now() : 0;
    // Got one or more newlines; process into "line" events
    var lines = string.split(lineEnding);
    // Either '' or (conceivably) the unfinished portion of the next line
    string = lines.pop();
    this._line_buffer = string;
    for (var n = 0; n < lines.length; n++)
      this._onLine(lines[n]);
  } else if (string) {
    // No newlines this time, save what we have for next time
    this._line_buffer = string;
Interface.prototype._insertString = function(c) {
  if (this.cursor < this.line.length) {
    var beg = this.line.slice(0, this.cursor);
    var end = this.line.slice(this.cursor, this.line.length);
    this.line = beg + c + end;
    this.cursor += c.length;
    this._refreshLine();
  } else {
    this.line += c;
    this.cursor += c.length;
    if (this._getCursorPos().cols === 0) {
      this._refreshLine();
    } else {
      this._writeToOutput(c);
    }
    // A hack to get the line refreshed if it's needed
    this._moveCursor(0);
Interface.prototype._tabComplete = function(lastKeypressWasTab) {
  const self = this;
  self.pause();
  self.completer(self.line.slice(0, self.cursor), function onComplete(err, rv) {
    self.resume();
    if (err) {
      self._writeToOutput(`tab completion error ${inspect(err)}`);
      return;
    }
    const completions = rv[0];
    const completeOn = rv[1];  // The text that was completed
    if (completions && completions.length) {
      // Apply/show completions.
      if (lastKeypressWasTab) {
        self._writeToOutput('\r\n');
        var width = completions.reduce(function completionReducer(a, b) {
          return a.length > b.length ? a : b;
        }).length + 2;  // 2 space padding
        var maxColumns = Math.floor(self.columns / width);
        if (!maxColumns || maxColumns === Infinity) {
          maxColumns = 1;
        }
        var group = [];
        for (var i = 0; i < completions.length; i++) {
          var c = completions[i];
          if (c === '') {
            handleGroup(self, group, width, maxColumns);
            group = [];
          } else {
            group.push(c);
          }
        }
        handleGroup(self, group, width, maxColumns);
      }
      // If there is a common prefix to all matches, then apply that portion.
      var f = completions.filter((e) => e);
      var prefix = commonPrefix(f);
      if (prefix.length > completeOn.length) {
        self._insertString(prefix.slice(completeOn.length));
      }
      self._refreshLine();
    }
  });
// this = Interface instance
function handleGroup(self, group, width, maxColumns) {
  if (group.length === 0) {
    return;
  const minRows = Math.ceil(group.length / maxColumns);
  for (var row = 0; row < minRows; row++) {
    for (var col = 0; col < maxColumns; col++) {
      var idx = row * maxColumns + col;
      if (idx >= group.length) {
        break;
      }
      var item = group[idx];
      self._writeToOutput(item);
      if (col < maxColumns - 1) {
        for (var s = 0; s < width - item.length; s++) {
          self._writeToOutput(' ');
        }
      }
    }
    self._writeToOutput('\r\n');
  self._writeToOutput('\r\n');
function commonPrefix(strings) {
  if (!strings || strings.length === 0) {
    return '';
  if (strings.length === 1) return strings[0];
  const sorted = strings.slice().sort();
  const min = sorted[0];
  const max = sorted[sorted.length - 1];
  for (var i = 0, len = min.length; i < len; i++) {
    if (min[i] !== max[i]) {
      return min.slice(0, i);
    }
  return min;
Interface.prototype._wordLeft = function() {
  if (this.cursor > 0) {
    // Reverse the string and match a word near beginning
    // to avoid quadratic time complexity
    var leading = this.line.slice(0, this.cursor);
    var reversed = leading.split('').reverse().join('');
    var match = reversed.match(/^\s*(?:[^\w\s]+|\w+)?/);
    this._moveCursor(-match[0].length);
Interface.prototype._wordRight = function() {
  if (this.cursor < this.line.length) {
    var trailing = this.line.slice(this.cursor);
    var match = trailing.match(/^(?:\s+|[^\w\s]+|\w+)\s*/);
    this._moveCursor(match[0].length);
function charLengthLeft(str, i) {
  if (i <= 0)
    return 0;
  if (i > 1 && str.codePointAt(i - 2) >= kUTF16SurrogateThreshold ||
      str.codePointAt(i - 1) >= kUTF16SurrogateThreshold) {
    return 2;
  return 1;
function charLengthAt(str, i) {
  if (str.length <= i)
    return 0;
  return str.codePointAt(i) >= kUTF16SurrogateThreshold ? 2 : 1;
Interface.prototype._deleteLeft = function() {
  if (this.cursor > 0 && this.line.length > 0) {
    // The number of UTF-16 units comprising the character to the left
    const charSize = charLengthLeft(this.line, this.cursor);
    this.line = this.line.slice(0, this.cursor - charSize) +
                this.line.slice(this.cursor, this.line.length);
    this.cursor -= charSize;
    this._refreshLine();
Interface.prototype._deleteRight = function() {
  if (this.cursor < this.line.length) {
    // The number of UTF-16 units comprising the character to the left
    const charSize = charLengthAt(this.line, this.cursor);
    this.line = this.line.slice(0, this.cursor) +
      this.line.slice(this.cursor + charSize, this.line.length);
    this._refreshLine();
Interface.prototype._deleteWordLeft = function() {
  if (this.cursor > 0) {
    // Reverse the string and match a word near beginning
    // to avoid quadratic time complexity
    var leading = this.line.slice(0, this.cursor);
    var reversed = leading.split('').reverse().join('');
    var match = reversed.match(/^\s*(?:[^\w\s]+|\w+)?/);
    leading = leading.slice(0, leading.length - match[0].length);
    this.line = leading + this.line.slice(this.cursor, this.line.length);
    this.cursor = leading.length;
    this._refreshLine();
Interface.prototype._deleteWordRight = function() {
  if (this.cursor < this.line.length) {
    var trailing = this.line.slice(this.cursor);
    var match = trailing.match(/^(?:\s+|\W+|\w+)\s*/);
    this.line = this.line.slice(0, this.cursor) +
                trailing.slice(match[0].length);
    this._refreshLine();
Interface.prototype._deleteLineLeft = function() {
  this.line = this.line.slice(this.cursor);
  this.cursor = 0;
  this._refreshLine();
Interface.prototype._deleteLineRight = function() {
  this.line = this.line.slice(0, this.cursor);
  this._refreshLine();
Interface.prototype.clearLine = function() {
  this._moveCursor(+Infinity);
  this._writeToOutput('\r\n');
  this.line = '';
  this.cursor = 0;
  this.prevRows = 0;
Interface.prototype._line = function() {
  const line = this._addHistory();
  this.clearLine();
  this._onLine(line);
Interface.prototype._historyNext = function() {
  if (this.historyIndex > 0) {
    this.historyIndex--;
    this.line = this.history[this.historyIndex];
    this.cursor = this.line.length; // Set cursor to end of line.
    this._refreshLine();
  } else if (this.historyIndex === 0) {
    this.historyIndex = -1;
    this.cursor = 0;
    this.line = '';
    this._refreshLine();
Interface.prototype._historyPrev = function() {
  if (this.historyIndex + 1 < this.history.length) {
    this.historyIndex++;
    this.line = this.history[this.historyIndex];
    this.cursor = this.line.length; // Set cursor to end of line.
    this._refreshLine();
// Returns the last character's display position of the given string
Interface.prototype._getDisplayPos = function(str) {
  var offset = 0;
  const col = this.columns;
  var row = 0;
  var code;
  str = stripVTControlCharacters(str);
  for (var i = 0, len = str.length; i < len; i++) {
    code = str.codePointAt(i);
    if (code >= kUTF16SurrogateThreshold) { // Surrogates.
      i++;
    }
    if (code === 0x0a) { // new line \n
      // row must be incremented by 1 even if offset = 0 or col = +Infinity
      row += Math.ceil(offset / col) || 1;
      offset = 0;
      continue;
    }
    const width = getStringWidth(code);
    if (width === 0 || width === 1) {
      offset += width;
    } else { // width === 2
      if ((offset + 1) % col === 0) {
        offset++;
      }
      offset += 2;
    }
  const cols = offset % col;
  const rows = row + (offset - cols) / col;
  return { cols: cols, rows: rows };
// Returns current cursor's position and line
Interface.prototype._getCursorPos = function() {
  const columns = this.columns;
  const strBeforeCursor = this._prompt + this.line.substring(0, this.cursor);
  const dispPos = this._getDisplayPos(
    stripVTControlCharacters(strBeforeCursor));
  var cols = dispPos.cols;
  var rows = dispPos.rows;
  // If the cursor is on a full-width character which steps over the line,
  // move the cursor to the beginning of the next line.
  if (cols + 1 === columns &&
      this.cursor < this.line.length &&
      isFullWidthCodePoint(this.line.codePointAt(this.cursor))) {
    rows++;
    cols = 0;
  return { cols: cols, rows: rows };
// This function moves cursor dx places to the right
// (-dx for left) and refreshes the line if it is needed
Interface.prototype._moveCursor = function(dx) {
  const oldcursor = this.cursor;
  const oldPos = this._getCursorPos();
  this.cursor += dx;
  // bounds check
  if (this.cursor < 0) this.cursor = 0;
  else if (this.cursor > this.line.length) this.cursor = this.line.length;
  const newPos = this._getCursorPos();
  // Check if cursors are in the same line
  if (oldPos.rows === newPos.rows) {
    var diffCursor = this.cursor - oldcursor;
    var diffWidth;
    if (diffCursor < 0) {
      diffWidth = -getStringWidth(
        this.line.substring(this.cursor, oldcursor)
      );
    } else if (diffCursor > 0) {
      diffWidth = getStringWidth(
        this.line.substring(this.cursor, oldcursor)
      );
    }
    moveCursor(this.output, diffWidth, 0);
    this.prevRows = newPos.rows;
  } else {
    this._refreshLine();
function _ttyWriteDumb(s, key) {
  key = key || {};
  if (key.name === 'escape') return;
  if (this._sawReturnAt && key.name !== 'enter')
    this._sawReturnAt = 0;
  if (key.ctrl && key.name === 'c') {
    if (this.listenerCount('SIGINT') > 0) {
      this.emit('SIGINT');
    } else {
      // This readline instance is finished
      this.close();
    }
  switch (key.name) {
    case 'return':  // Carriage return, i.e. \r
      this._sawReturnAt = Date.now();
      this._line();
      break;
    case 'enter':
      // When key interval > crlfDelay
      if (this._sawReturnAt === 0 ||
          Date.now() - this._sawReturnAt > this.crlfDelay) {
        this._line();
      }
      this._sawReturnAt = 0;
      break;
    default:
      if (typeof s === 'string' && s) {
        this.line += s;
        this.cursor += s.length;
        this._writeToOutput(s);
      }
// Handle a write from the tty
Interface.prototype._ttyWrite = function(s, key) {
  const previousKey = this._previousKey;
  key = key || {};
  this._previousKey = key;
  // Ignore escape key, fixes
  // https://github.com/nodejs/node-v0.x-archive/issues/2876.
  if (key.name === 'escape') return;
  if (key.ctrl && key.shift) {
    /* Control and shift pressed */
    switch (key.name) {
      case 'backspace':
        this._deleteLineLeft();
        break;
      case 'delete':
        this._deleteLineRight();
        break;
    }
  } else if (key.ctrl) {
    /* Control key pressed */
    switch (key.name) {
      case 'c':
        if (this.listenerCount('SIGINT') > 0) {
          this.emit('SIGINT');
        } else {
          // This readline instance is finished
          this.close();
        }
        break;
      case 'h': // delete left
        this._deleteLeft();
        break;
      case 'd': // delete right or EOF
        if (this.cursor === 0 && this.line.length === 0) {
          // This readline instance is finished
          this.close();
        } else if (this.cursor < this.line.length) {
          this._deleteRight();
        }
        break;
      case 'u': // Delete from current to start of line
        this._deleteLineLeft();
        break;
      case 'k': // Delete from current to end of line
        this._deleteLineRight();
        break;
      case 'a': // Go to the start of the line
        this._moveCursor(-Infinity);
        break;
      case 'e': // Go to the end of the line
        this._moveCursor(+Infinity);
        break;
      case 'b': // back one character
        this._moveCursor(-charLengthLeft(this.line, this.cursor));
        break;
      case 'f': // Forward one character
        this._moveCursor(+charLengthAt(this.line, this.cursor));
        break;
      case 'l': // Clear the whole screen
        cursorTo(this.output, 0, 0);
        clearScreenDown(this.output);
        this._refreshLine();
        break;
      case 'n': // next history item
        this._historyNext();
        break;
      case 'p': // Previous history item
        this._historyPrev();
        break;
      case 'z':
        if (process.platform === 'win32') break;
        if (this.listenerCount('SIGTSTP') > 0) {
          this.emit('SIGTSTP');
        } else {
          process.once('SIGCONT', () => {
            // Don't raise events if stream has already been abandoned.
            if (!this.paused) {
              // Stream must be paused and resumed after SIGCONT to catch
              // SIGINT, SIGTSTP, and EOF.
              this.pause();
              this.emit('SIGCONT');
            }
            // Explicitly re-enable "raw mode" and move the cursor to
            // the correct position.
            // See https://github.com/joyent/node/issues/3295.
            this._setRawMode(true);
            this._refreshLine();
          });
          this._setRawMode(false);
          process.kill(process.pid, 'SIGTSTP');
        }
        break;
      case 'w': // Delete backwards to a word boundary
      case 'backspace':
        this._deleteWordLeft();
        break;
      case 'delete': // Delete forward to a word boundary
        this._deleteWordRight();
        break;
      case 'left':
        this._wordLeft();
        break;
      case 'right':
        this._wordRight();
        break;
    }
  } else if (key.meta) {
    /* Meta key pressed */
    switch (key.name) {
      case 'b': // backward word
        this._wordLeft();
        break;
      case 'f': // forward word
        this._wordRight();
        break;
      case 'd': // delete forward word
      case 'delete':
        this._deleteWordRight();
        break;
      case 'backspace': // Delete backwards to a word boundary
        this._deleteWordLeft();
        break;
    }
  } else {
    /* No modifier keys used */
    // \r bookkeeping is only relevant if a \n comes right after.
    if (this._sawReturnAt && key.name !== 'enter')
      this._sawReturnAt = 0;
    switch (key.name) {
      case 'return':  // Carriage return, i.e. \r
        this._sawReturnAt = Date.now();
        this._line();
        break;
      case 'enter':
        // When key interval > crlfDelay
        if (this._sawReturnAt === 0 ||
            Date.now() - this._sawReturnAt > this.crlfDelay) {
          this._line();
        }
        this._sawReturnAt = 0;
        break;
      case 'backspace':
        this._deleteLeft();
        break;
      case 'delete':
        this._deleteRight();
        break;
      case 'left':
        // Obtain the code point to the left
        this._moveCursor(-charLengthLeft(this.line, this.cursor));
        break;
      case 'right':
        this._moveCursor(+charLengthAt(this.line, this.cursor));
        break;
      case 'home':
        this._moveCursor(-Infinity);
        break;
      case 'end':
        this._moveCursor(+Infinity);
        break;
      case 'up':
        this._historyPrev();
        break;
      case 'down':
        this._historyNext();
        break;
      case 'tab':
        // If tab completion enabled, do that...
        if (typeof this.completer === 'function' && this.isCompletionEnabled) {
          const lastKeypressWasTab = previousKey && previousKey.name === 'tab';
          this._tabComplete(lastKeypressWasTab);
          break;
        }
        // falls through
      default:
        if (typeof s === 'string' && s) {
          var lines = s.split(/\r\n|\n|\r/);
          for (var i = 0, len = lines.length; i < len; i++) {
            if (i > 0) {
              this._line();
            }
            this._insertString(lines[i]);
          }
        }
    }
Interface.prototype[Symbol.asyncIterator] = function() {
  if (this[kLineObjectStream] === undefined) {
    if (Readable === undefined) {
      Readable = require('stream').Readable;
    }
    const readable = new Readable({
      objectMode: true,
      read: () => {
        this.resume();
      },
      destroy: (err, cb) => {
        this.off('line', lineListener);
        this.off('close', closeListener);
        this.close();
        cb(err);
      }
    });
    const lineListener = (input) => {
      if (!readable.push(input)) {
        this.pause();
      }
    };
    const closeListener = () => {
      readable.push(null);
    };
    this.on('line', lineListener);
    this.on('close', closeListener);
    this[kLineObjectStream] = readable;
  return this[kLineObjectStream][Symbol.asyncIterator]();
 * accepts a readable Stream instance and makes it emit "keypress" events
function emitKeypressEvents(stream, iface) {
  if (stream[KEYPRESS_DECODER]) return;
  if (StringDecoder === undefined)
    StringDecoder = require('string_decoder').StringDecoder;
  stream[KEYPRESS_DECODER] = new StringDecoder('utf8');
  stream[ESCAPE_DECODER] = emitKeys(stream);
  stream[ESCAPE_DECODER].next();
  const escapeCodeTimeout = () => stream[ESCAPE_DECODER].next('');
  let timeoutId;
  function onData(b) {
    if (stream.listenerCount('keypress') > 0) {
      var r = stream[KEYPRESS_DECODER].write(b);
      if (r) {
        clearTimeout(timeoutId);
        if (iface) {
          iface._sawKeyPress = r.length === 1;
        }
        for (var i = 0; i < r.length; i++) {
          if (r[i] === '\t' && typeof r[i + 1] === 'string' && iface) {
            iface.isCompletionEnabled = false;
          }
          try {
            stream[ESCAPE_DECODER].next(r[i]);
            // Escape letter at the tail position
            if (r[i] === kEscape && i + 1 === r.length) {
              timeoutId = setTimeout(
                escapeCodeTimeout,
                iface ? iface.escapeCodeTimeout : ESCAPE_CODE_TIMEOUT
              );
            }
          } catch (err) {
            // If the generator throws (it could happen in the `keypress`
            // event), we need to restart it.
            stream[ESCAPE_DECODER] = emitKeys(stream);
            stream[ESCAPE_DECODER].next();
            throw err;
          } finally {
            if (iface) {
              iface.isCompletionEnabled = true;
            }
          }
        }
      }
    } else {
      // Nobody's watching anyway
      stream.removeListener('data', onData);
      stream.on('newListener', onNewListener);
    }
  function onNewListener(event) {
    if (event === 'keypress') {
      stream.on('data', onData);
      stream.removeListener('newListener', onNewListener);
    }
  if (stream.listenerCount('keypress') > 0) {
    stream.on('data', onData);
  } else {
    stream.on('newListener', onNewListener);
 * moves the cursor to the x and y coordinate on the given stream
function cursorTo(stream, x, y, callback) {
  if (callback !== undefined && typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {
    if (typeof callback === 'function')
      process.nextTick(callback);
    return true;
  if (typeof x !== 'number')
    throw new ERR_INVALID_CURSOR_POS();
  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;
  return stream.write(data, callback);
 * moves the cursor relative to its current location
function moveCursor(stream, dx, dy, callback) {
  if (callback !== undefined && typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  if (stream == null || !(dx || dy)) {
    if (typeof callback === 'function')
      process.nextTick(callback);
    return true;
  let data = '';
  if (dx < 0) {
    data += CSI`${-dx}D`;
  } else if (dx > 0) {
    data += CSI`${dx}C`;
  if (dy < 0) {
    data += CSI`${-dy}A`;
  } else if (dy > 0) {
    data += CSI`${dy}B`;
  return stream.write(data, callback);
 * clears the current line the cursor is on:
 *   -1 for left of the cursor
 *   +1 for right of the cursor
 *    0 for the entire line
function clearLine(stream, dir, callback) {
  if (callback !== undefined && typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  if (stream === null || stream === undefined) {
    if (typeof callback === 'function')
      process.nextTick(callback);
    return true;
  const type = dir < 0 ? kClearToBeginning : dir > 0 ? kClearToEnd : kClearLine;
  return stream.write(type, callback);
 * clears the screen from the current position of the cursor down
function clearScreenDown(stream, callback) {
  if (callback !== undefined && typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  if (stream === null || stream === undefined) {
    if (typeof callback === 'function')
      process.nextTick(callback);
    return true;
  return stream.write(kClearScreenDown, callback);
module.exports = {
  Interface,
  clearLine,
  clearScreenDown,
  createInterface,
  cursorTo,
  emitKeypressEvents,
  moveCursor
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
/* A repl library that you can include in your own code to get a runtime
 * interface to your program.
 *   var repl = require("repl");
 *   // start repl on stdin
 *   repl.start("prompt> ");
 *   // listen for unix socket connections and start repl on them
 *   net.createServer(function(socket) {
 *     repl.start("node via Unix socket> ", socket);
 *   }).listen("/tmp/node-repl-sock");
 *   // listen for TCP socket connections and start repl on them
 *   net.createServer(function(socket) {
 *     repl.start("node via TCP socket> ", socket);
 *   }).listen(5001);
 *   // expose foo to repl context
 *   repl.start("node > ").context.foo = "stdin is fun";
'use strict';
const { Math, Object, ObjectPrototype } = primordials;
const {
  builtinLibs,
  makeRequireFunction,
  addBuiltinLibsToObject
} = require('internal/modules/cjs/helpers');
const {
  isIdentifierStart,
  isIdentifierChar
} = require('internal/deps/acorn/acorn/dist/acorn');
const {
  decorateErrorStack,
  isError,
  deprecate
} = require('internal/util');
const { inspect } = require('internal/util/inspect');
const Stream = require('stream');
const vm = require('vm');
const path = require('path');
const fs = require('fs');
const { Interface } = require('readline');
const { Console } = require('console');
const CJSModule = require('internal/modules/cjs/loader');
const domain = require('domain');
const debug = require('internal/util/debuglog').debuglog('repl');
const {
  ERR_CANNOT_WATCH_SIGINT,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_REPL_EVAL_CONFIG,
  ERR_INVALID_REPL_INPUT,
  ERR_SCRIPT_EXECUTION_INTERRUPTED
} = require('internal/errors').codes;
const { sendInspectorCommand } = require('internal/util/inspector');
const experimentalREPLAwait = require('internal/options').getOptionValue(
  '--experimental-repl-await'
const {
  isRecoverableError,
  kStandaloneREPL
} = require('internal/repl/utils');
const {
  getOwnNonIndexProperties,
  propertyFilter: {
    ALL_PROPERTIES,
    SKIP_SYMBOLS
} = internalBinding('util');
const {
  startSigintWatchdog,
  stopSigintWatchdog
} = internalBinding('contextify');
const history = require('internal/repl/history');
// Lazy-loaded.
let processTopLevelAwait;
const parentModule = module;
const replMap = new WeakMap();
const domainSet = new WeakSet();
const kBufferedCommandSymbol = Symbol('bufferedCommand');
const kContextId = Symbol('contextId');
let addedNewListener = false;
try {
  // Hack for require.resolve("./relative") to work properly.
  module.filename = path.resolve('repl');
} catch {
  // path.resolve('repl') fails when the current working directory has been
  // deleted.  Fall back to the directory name of the (absolute) executable
  // path.  It's not really correct but what are the alternatives?
  const dirname = path.dirname(process.execPath);
  module.filename = path.resolve(dirname, 'repl');
// Hack for repl require to work properly with node_modules folders
module.paths = CJSModule._nodeModulePaths(module.filename);
// This is the default "writer" value, if none is passed in the REPL options,
// and it can be overridden by custom print functions, such as `probe` or
// `eyes.js`.
const writer = exports.writer = (obj) => inspect(obj, writer.options);
writer.options = { ...inspect.defaultOptions, showProxy: true };
exports._builtinLibs = builtinLibs;
function REPLServer(prompt,
                    stream,
                    eval_,
                    useGlobal,
                    ignoreUndefined,
                    replMode) {
  if (!(this instanceof REPLServer)) {
    return new REPLServer(prompt,
                          stream,
                          eval_,
                          useGlobal,
                          ignoreUndefined,
                          replMode);
  let options;
  if (prompt !== null && typeof prompt === 'object') {
    // An options object was given.
    options = { ...prompt };
    stream = options.stream || options.socket;
    eval_ = options.eval;
    useGlobal = options.useGlobal;
    ignoreUndefined = options.ignoreUndefined;
    prompt = options.prompt;
    replMode = options.replMode;
  } else {
    options = {};
  if (!options.input && !options.output) {
    // Legacy API, passing a 'stream'/'socket' option.
    if (!stream) {
      // Use stdin and stdout as the default streams if none were given.
      stream = process;
    }
    // We're given a duplex readable/writable Stream, like a `net.Socket`
    // or a custom object with 2 streams, or the `process` object.
    options.input = stream.stdin || stream;
    options.output = stream.stdout || stream;
  if (options.terminal === undefined) {
    options.terminal = options.output.isTTY;
  options.terminal = !!options.terminal;
  if (options.terminal && options.useColors === undefined) {
    // If possible, check if stdout supports colors or not.
    if (options.output.hasColors) {
      options.useColors = options.output.hasColors();
    } else if (process.env.NODE_DISABLE_COLORS === undefined) {
      options.useColors = true;
    }
  this.inputStream = options.input;
  this.outputStream = options.output;
  this.useColors = !!options.useColors;
  this._domain = options.domain || domain.create();
  this.useGlobal = !!useGlobal;
  this.ignoreUndefined = !!ignoreUndefined;
  this.replMode = replMode || exports.REPL_MODE_SLOPPY;
  this.underscoreAssigned = false;
  this.last = undefined;
  this.underscoreErrAssigned = false;
  this.lastError = undefined;
  this.breakEvalOnSigint = !!options.breakEvalOnSigint;
  this.editorMode = false;
  // Context id for use with the inspector protocol.
  this[kContextId] = undefined;
  if (this.breakEvalOnSigint && eval_) {
    // Allowing this would not reflect user expectations.
    // breakEvalOnSigint affects only the behavior of the default eval().
    throw new ERR_INVALID_REPL_EVAL_CONFIG();
  // Add this listener only once and use a WeakSet that contains the REPLs
  // domains. Otherwise we'd have to add a single listener to each REPL instance
  // and that could trigger the `MaxListenersExceededWarning`.
  if (!options[kStandaloneREPL] && !addedNewListener) {
    process.prependListener('newListener', (event, listener) => {
      if (event === 'uncaughtException' &&
          process.domain &&
          listener.name !== 'domainUncaughtExceptionClear' &&
          domainSet.has(process.domain)) {
        // Throw an error so that the event will not be added and the current
        // domain takes over. That way the user is notified about the error
        // and the current code evaluation is stopped, just as any other code
        // that contains an error.
        throw new ERR_INVALID_REPL_INPUT(
          'Listeners for `uncaughtException` cannot be used in the REPL');
      }
    });
    addedNewListener = true;
  domainSet.add(this._domain);
  let rli = this;
  Object.defineProperty(this, 'rli', {
    get: deprecate(() => rli,
                   'REPLServer.rli is deprecated', 'DEP0124'),
    set: deprecate((val) => rli = val,
                   'REPLServer.rli is deprecated', 'DEP0124'),
    enumerable: true,
    configurable: true
  });
  const savedRegExMatches = ['', '', '', '', '', '', '', '', '', ''];
  const sep = '\u0000\u0000\u0000';
  const regExMatcher = new RegExp(`^${sep}(.*)${sep}(.*)${sep}(.*)${sep}(.*)` +
                                  `${sep}(.*)${sep}(.*)${sep}(.*)${sep}(.*)` +
                                  `${sep}(.*)$`);
  eval_ = eval_ || defaultEval;
  const self = this;
  // Pause taking in new input, and store the keys in a buffer.
  const pausedBuffer = [];
  let paused = false;
  function pause() {
    paused = true;
  function unpause() {
    if (!paused) return;
    paused = false;
    let entry;
    while (entry = pausedBuffer.shift()) {
      const [type, payload] = entry;
      switch (type) {
        case 'key': {
          const [d, key] = payload;
          self._ttyWrite(d, key);
          break;
        }
        case 'close':
          self.emit('exit');
          break;
      }
      if (paused) {
        break;
      }
    }
  function defaultEval(code, context, file, cb) {
    let result, script, wrappedErr;
    let err = null;
    let wrappedCmd = false;
    let awaitPromise = false;
    const input = code;
    if (/^\s*{/.test(code) && /}\s*$/.test(code)) {
      // It's confusing for `{ a : 1 }` to be interpreted as a block
      // statement rather than an object literal.  So, we first try
      // to wrap it in parentheses, so that it will be interpreted as
      // an expression.  Note that if the above condition changes,
      // lib/internal/repl/utils.js needs to be changed to match.
      code = `(${code.trim()})\n`;
      wrappedCmd = true;
    }
    if (experimentalREPLAwait && code.includes('await')) {
      if (processTopLevelAwait === undefined) {
        ({ processTopLevelAwait } = require('internal/repl/await'));
      }
      const potentialWrappedCode = processTopLevelAwait(code);
      if (potentialWrappedCode !== null) {
        code = potentialWrappedCode;
        wrappedCmd = true;
        awaitPromise = true;
      }
    }
    // First, create the Script object to check the syntax
    if (code === '\n')
      return cb(null);
    while (true) {
      try {
        if (!/^\s*$/.test(code) &&
            self.replMode === exports.REPL_MODE_STRICT) {
          // "void 0" keeps the repl from returning "use strict" as the result
          // value for statements and declarations that don't return a value.
          code = `'use strict'; void 0;\n${code}`;
        }
        script = vm.createScript(code, {
          filename: file,
          displayErrors: true
        });
      } catch (e) {
        debug('parse error %j', code, e);
        if (wrappedCmd) {
          // Unwrap and try again
          wrappedCmd = false;
          awaitPromise = false;
          code = input;
          wrappedErr = e;
          continue;
        }
        // Preserve original error for wrapped command
        const error = wrappedErr || e;
        if (isRecoverableError(error, code))
          err = new Recoverable(error);
        else
          err = error;
      }
      break;
    }
    // This will set the values from `savedRegExMatches` to corresponding
    // predefined RegExp properties `RegExp.$1`, `RegExp.$2` ... `RegExp.$9`
    regExMatcher.test(savedRegExMatches.join(sep));
    let finished = false;
    function finishExecution(err, result) {
      if (finished) return;
      finished = true;
      // After executing the current expression, store the values of RegExp
      // predefined properties back in `savedRegExMatches`
      for (var idx = 1; idx < savedRegExMatches.length; idx += 1) {
        savedRegExMatches[idx] = RegExp[`$${idx}`];
      }
      cb(err, result);
    }
    if (!err) {
      // Unset raw mode during evaluation so that Ctrl+C raises a signal.
      let previouslyInRawMode;
      if (self.breakEvalOnSigint) {
        // Start the SIGINT watchdog before entering raw mode so that a very
        // quick Ctrl+C doesn't lead to aborting the process completely.
        if (!startSigintWatchdog())
          throw new ERR_CANNOT_WATCH_SIGINT();
        previouslyInRawMode = self._setRawMode(false);
      }
      try {
        try {
          const scriptOptions = {
            displayErrors: false,
            breakOnSigint: self.breakEvalOnSigint
          };
          if (self.useGlobal) {
            result = script.runInThisContext(scriptOptions);
          } else {
            result = script.runInContext(context, scriptOptions);
          }
        } finally {
          if (self.breakEvalOnSigint) {
            // Reset terminal mode to its previous value.
            self._setRawMode(previouslyInRawMode);
            // Returns true if there were pending SIGINTs *after* the script
            // has terminated without being interrupted itself.
            if (stopSigintWatchdog()) {
              self.emit('SIGINT');
            }
          }
        }
      } catch (e) {
        err = e;
        if (process.domain) {
          debug('not recoverable, send to domain');
          process.domain.emit('error', err);
          process.domain.exit();
          return;
        }
      }
      if (awaitPromise && !err) {
        let sigintListener;
        pause();
        let promise = result;
        if (self.breakEvalOnSigint) {
          const interrupt = new Promise((resolve, reject) => {
            sigintListener = () => {
              const tmp = Error.stackTraceLimit;
              Error.stackTraceLimit = 0;
              const err = new ERR_SCRIPT_EXECUTION_INTERRUPTED();
              Error.stackTraceLimit = tmp;
              reject(err);
            };
            prioritizedSigintQueue.add(sigintListener);
          });
          promise = Promise.race([promise, interrupt]);
        }
        promise.then((result) => {
          finishExecution(null, result);
        }, (err) => {
          if (err && process.domain) {
            debug('not recoverable, send to domain');
            process.domain.emit('error', err);
            process.domain.exit();
            return;
          }
          finishExecution(err);
        }).finally(() => {
          // Remove prioritized SIGINT listener if it was not called.
          prioritizedSigintQueue.delete(sigintListener);
          unpause();
        });
      }
    }
    if (!awaitPromise || err) {
      finishExecution(err, result);
    }
  self.eval = self._domain.bind(eval_);
  self._domain.on('error', function debugDomainError(e) {
    debug('domain error');
    let errStack = '';
    if (typeof e === 'object' && e !== null) {
      const pstrace = Error.prepareStackTrace;
      Error.prepareStackTrace = prepareStackTrace(pstrace);
      decorateErrorStack(e);
      Error.prepareStackTrace = pstrace;
      if (e.domainThrown) {
        delete e.domain;
        delete e.domainThrown;
      }
      if (isError(e)) {
        if (e.stack) {
          if (e.name === 'SyntaxError') {
            // Remove stack trace.
            e.stack = e.stack
              .replace(/^repl:\d+\r?\n/, '')
              .replace(/^\s+at\s.*\n?/gm, '');
          } else if (self.replMode === exports.REPL_MODE_STRICT) {
            e.stack = e.stack.replace(/(\s+at\s+repl:)(\d+)/,
                                      (_, pre, line) => pre + (line - 1));
          }
        }
        errStack = self.writer(e);
        // Remove one line error braces to keep the old style in place.
        if (errStack[errStack.length - 1] === ']') {
          errStack = errStack.slice(1, -1);
        }
      }
    }
    if (!self.underscoreErrAssigned) {
      self.lastError = e;
    }
    const top = replMap.get(self);
    if (options[kStandaloneREPL] &&
        process.listenerCount('uncaughtException') !== 0) {
      process.nextTick(() => {
        process.emit('uncaughtException', e);
        top.clearBufferedCommand();
        top.lines.level = [];
        top.displayPrompt();
      });
    } else {
      if (errStack === '') {
        errStack = `Thrown: ${self.writer(e)}\n`;
      } else {
        const ln = errStack.endsWith('\n') ? '' : '\n';
        errStack = `Thrown:\n${errStack}${ln}`;
      }
      top.outputStream.write(errStack);
      top.clearBufferedCommand();
      top.lines.level = [];
      top.displayPrompt();
    }
  });
  self.resetContext();
  self.lines.level = [];
  self.clearBufferedCommand();
  Object.defineProperty(this, 'bufferedCommand', {
    get: deprecate(() => self[kBufferedCommandSymbol],
                   'REPLServer.bufferedCommand is deprecated',
                   'DEP0074'),
    set: deprecate((val) => self[kBufferedCommandSymbol] = val,
                   'REPLServer.bufferedCommand is deprecated',
                   'DEP0074'),
    enumerable: true
  });
  // Figure out which "complete" function to use.
  self.completer = (typeof options.completer === 'function') ?
    options.completer : completer;
  function completer(text, cb) {
    complete.call(self, text, self.editorMode ?
      self.completeOnEditorMode(cb) : cb);
  Interface.call(this, {
    input: self.inputStream,
    output: self.outputStream,
    completer: self.completer,
    terminal: options.terminal,
    historySize: options.historySize,
    prompt
  });
  this.commands = Object.create(null);
  defineDefaultCommands(this);
  // Figure out which "writer" function to use
  self.writer = options.writer || exports.writer;
  if (self.writer === writer) {
    // Conditionally turn on ANSI coloring.
    writer.options.colors = self.useColors;
    if (options[kStandaloneREPL]) {
      Object.defineProperty(inspect, 'replDefaults', {
        get() {
          return writer.options;
        },
        set(options) {
          if (options === null || typeof options !== 'object') {
            throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
          }
          return Object.assign(writer.options, options);
        },
        enumerable: true,
        configurable: true
      });
    }
  function filterInternalStackFrames(structuredStack) {
    // Search from the bottom of the call stack to
    // find the first frame with a null function name
    if (typeof structuredStack !== 'object')
      return structuredStack;
    const idx = structuredStack.reverse().findIndex(
      (frame) => frame.getFunctionName() === null);
    // If found, get rid of it and everything below it
    structuredStack = structuredStack.splice(idx + 1);
    return structuredStack;
  function prepareStackTrace(fn) {
    return (error, stackFrames) => {
      const frames = filterInternalStackFrames(stackFrames);
      if (fn) {
        return fn(error, frames);
      }
      frames.push(error);
      return frames.reverse().join('\n    at ');
    };
  function _parseREPLKeyword(keyword, rest) {
    const cmd = this.commands[keyword];
    if (cmd) {
      cmd.action.call(this, rest);
      return true;
    }
    return false;
  self.parseREPLKeyword = deprecate(
    _parseREPLKeyword,
    'REPLServer.parseREPLKeyword() is deprecated',
    'DEP0075');
  self.on('close', function emitExit() {
    if (paused) {
      pausedBuffer.push(['close']);
      return;
    }
    self.emit('exit');
  });
  var sawSIGINT = false;
  var sawCtrlD = false;
  const prioritizedSigintQueue = new Set();
  self.on('SIGINT', function onSigInt() {
    if (prioritizedSigintQueue.size > 0) {
      for (const task of prioritizedSigintQueue) {
        task();
      }
      return;
    }
    const empty = self.line.length === 0;
    self.clearLine();
    _turnOffEditorMode(self);
    const cmd = self[kBufferedCommandSymbol];
    if (!(cmd && cmd.length > 0) && empty) {
      if (sawSIGINT) {
        self.close();
        sawSIGINT = false;
        return;
      }
      self.output.write('(To exit, press ^C again or ^D or type .exit)\n');
      sawSIGINT = true;
    } else {
      sawSIGINT = false;
    }
    self.clearBufferedCommand();
    self.lines.level = [];
    self.displayPrompt();
  });
  self.on('line', function onLine(cmd) {
    debug('line %j', cmd);
    cmd = cmd || '';
    sawSIGINT = false;
    if (self.editorMode) {
      self[kBufferedCommandSymbol] += cmd + '\n';
      // code alignment
      const matches = self._sawKeyPress ? cmd.match(/^\s+/) : null;
      if (matches) {
        const prefix = matches[0];
        self.write(prefix);
        self.line = prefix;
        self.cursor = prefix.length;
      }
      _memory.call(self, cmd);
      return;
    }
    // Check REPL keywords and empty lines against a trimmed line input.
    const trimmedCmd = cmd.trim();
    // Check to see if a REPL keyword was used. If it returns true,
    // display next prompt and return.
    if (trimmedCmd) {
      if (trimmedCmd.charAt(0) === '.' && trimmedCmd.charAt(1) !== '.' &&
          Number.isNaN(parseFloat(trimmedCmd))) {
        const matches = trimmedCmd.match(/^\.([^\s]+)\s*(.*)$/);
        const keyword = matches && matches[1];
        const rest = matches && matches[2];
        if (_parseREPLKeyword.call(self, keyword, rest) === true) {
          return;
        }
        if (!self[kBufferedCommandSymbol]) {
          self.outputStream.write('Invalid REPL keyword\n');
          finish(null);
          return;
        }
      }
    }
    const evalCmd = self[kBufferedCommandSymbol] + cmd + '\n';
    debug('eval %j', evalCmd);
    self.eval(evalCmd, self.context, 'repl', finish);
    function finish(e, ret) {
      debug('finish', e, ret);
      _memory.call(self, cmd);
      if (e && !self[kBufferedCommandSymbol] && cmd.trim().startsWith('npm ')) {
        self.outputStream.write('npm should be run outside of the ' +
                                'node repl, in your normal shell.\n' +
                                '(Press Control-D to exit.)\n');
        self.displayPrompt();
        return;
      }
      // If error was SyntaxError and not JSON.parse error
      if (e) {
        if (e instanceof Recoverable && !sawCtrlD) {
          // Start buffering data like that:
          // {
          // ...  x: 1
          // ... }
          self[kBufferedCommandSymbol] += cmd + '\n';
          self.displayPrompt();
          return;
        } else {
          self._domain.emit('error', e.err || e);
        }
      }
      // Clear buffer if no SyntaxErrors
      self.clearBufferedCommand();
      sawCtrlD = false;
      // If we got any output - print it (if no error)
      if (!e &&
          // When an invalid REPL command is used, error message is printed
          // immediately. We don't have to print anything else. So, only when
          // the second argument to this function is there, print it.
          arguments.length === 2 &&
          (!self.ignoreUndefined || ret !== undefined)) {
        if (!self.underscoreAssigned) {
          self.last = ret;
        }
        self.outputStream.write(self.writer(ret) + '\n');
      }
      // Display prompt again
      self.displayPrompt();
    }
  });
  self.on('SIGCONT', function onSigCont() {
    if (self.editorMode) {
      self.outputStream.write(`${self._initialPrompt}.editor\n`);
      self.outputStream.write(
        '// Entering editor mode (^D to finish, ^C to cancel)\n');
      self.outputStream.write(`${self[kBufferedCommandSymbol]}\n`);
      self.prompt(true);
    } else {
      self.displayPrompt(true);
    }
  });
  // Wrap readline tty to enable editor mode and pausing.
  const ttyWrite = self._ttyWrite.bind(self);
  self._ttyWrite = (d, key) => {
    key = key || {};
    if (paused && !(self.breakEvalOnSigint && key.ctrl && key.name === 'c')) {
      pausedBuffer.push(['key', [d, key]]);
      return;
    }
    if (!self.editorMode || !self.terminal) {
      // Before exiting, make sure to clear the line.
      if (key.ctrl && key.name === 'd' &&
          self.cursor === 0 && self.line.length === 0) {
        self.clearLine();
      }
      ttyWrite(d, key);
      return;
    }
    // Editor mode
    if (key.ctrl && !key.shift) {
      switch (key.name) {
        case 'd': // End editor mode
          _turnOffEditorMode(self);
          sawCtrlD = true;
          ttyWrite(d, { name: 'return' });
          break;
        case 'n': // Override next history item
        case 'p': // Override previous history item
          break;
        default:
          ttyWrite(d, key);
      }
    } else {
      switch (key.name) {
        case 'up':   // Override previous history item
        case 'down': // Override next history item
          break;
        case 'tab':
          // Prevent double tab behavior
          self._previousKey = null;
          ttyWrite(d, key);
          break;
        default:
          ttyWrite(d, key);
      }
    }
  };
  self.displayPrompt();
Object.setPrototypeOf(REPLServer.prototype, Interface.prototype);
Object.setPrototypeOf(REPLServer, Interface);
exports.REPLServer = REPLServer;
exports.REPL_MODE_SLOPPY = Symbol('repl-sloppy');
exports.REPL_MODE_STRICT = Symbol('repl-strict');
// Prompt is a string to print on each line for the prompt,
// source is a stream to use for I/O, defaulting to stdin/stdout.
exports.start = function(prompt,
                         source,
                         eval_,
                         useGlobal,
                         ignoreUndefined,
                         replMode) {
  const repl = new REPLServer(prompt,
                              source,
                              eval_,
                              useGlobal,
                              ignoreUndefined,
                              replMode);
  if (!exports.repl) exports.repl = repl;
  replMap.set(repl, repl);
  return repl;
REPLServer.prototype.setupHistory = function setupHistory(historyFile, cb) {
  history(this, historyFile, cb);
REPLServer.prototype.clearBufferedCommand = function clearBufferedCommand() {
  this[kBufferedCommandSymbol] = '';
REPLServer.prototype.close = function close() {
  if (this.terminal && this._flushing && !this._closingOnFlush) {
    this._closingOnFlush = true;
    this.once('flushHistory', () =>
      Interface.prototype.close.call(this)
    );
    return;
  process.nextTick(() =>
    Interface.prototype.close.call(this)
  );
REPLServer.prototype.createContext = function() {
  var context;
  if (this.useGlobal) {
    context = global;
  } else {
    sendInspectorCommand((session) => {
      session.post('Runtime.enable');
      session.once('Runtime.executionContextCreated', ({ params }) => {
        this[kContextId] = params.context.id;
      });
      context = vm.createContext();
      session.post('Runtime.disable');
    }, () => {
      context = vm.createContext();
    });
    for (const name of Object.getOwnPropertyNames(global)) {
      // Only set properties on the context that do not exist as primordial.
      if (!(name in primordials)) {
        Object.defineProperty(context, name,
                              Object.getOwnPropertyDescriptor(global, name));
      }
    }
    context.global = context;
    const _console = new Console(this.outputStream);
    Object.defineProperty(context, 'console', {
      configurable: true,
      writable: true,
      value: _console
    });
  const module = new CJSModule('<repl>');
  module.paths = CJSModule._resolveLookupPaths('<repl>', parentModule) || [];
  Object.defineProperty(context, 'module', {
    configurable: true,
    writable: true,
    value: module
  });
  Object.defineProperty(context, 'require', {
    configurable: true,
    writable: true,
    value: makeRequireFunction(module)
  });
  addBuiltinLibsToObject(context);
  return context;
REPLServer.prototype.resetContext = function() {
  this.context = this.createContext();
  this.underscoreAssigned = false;
  this.underscoreErrAssigned = false;
  this.lines = [];
  this.lines.level = [];
  Object.defineProperty(this.context, '_', {
    configurable: true,
    get: () => this.last,
    set: (value) => {
      this.last = value;
      if (!this.underscoreAssigned) {
        this.underscoreAssigned = true;
        this.outputStream.write('Expression assignment to _ now disabled.\n');
      }
    }
  });
  Object.defineProperty(this.context, '_error', {
    configurable: true,
    get: () => this.lastError,
    set: (value) => {
      this.lastError = value;
      if (!this.underscoreErrAssigned) {
        this.underscoreErrAssigned = true;
        this.outputStream.write(
          'Expression assignment to _error now disabled.\n');
      }
    }
  });
  // Allow REPL extensions to extend the new context
  this.emit('reset', this.context);
REPLServer.prototype.displayPrompt = function(preserveCursor) {
  var prompt = this._initialPrompt;
  if (this[kBufferedCommandSymbol].length) {
    prompt = '...';
    const len = this.lines.level.length ? this.lines.level.length - 1 : 0;
    const levelInd = '..'.repeat(len);
    prompt += levelInd + ' ';
  // Do not overwrite `_initialPrompt` here
  Interface.prototype.setPrompt.call(this, prompt);
  this.prompt(preserveCursor);
// When invoked as an API method, overwrite _initialPrompt
REPLServer.prototype.setPrompt = function setPrompt(prompt) {
  this._initialPrompt = prompt;
  Interface.prototype.setPrompt.call(this, prompt);
REPLServer.prototype.turnOffEditorMode = deprecate(
  function() { _turnOffEditorMode(this); },
  'REPLServer.turnOffEditorMode() is deprecated',
  'DEP0078');
// A stream to push an array into a REPL
// used in REPLServer.complete
function ArrayStream() {
  Stream.call(this);
  this.run = function(data) {
    for (var n = 0; n < data.length; n++)
      this.emit('data', `${data[n]}\n`);
  };
Object.setPrototypeOf(ArrayStream.prototype, Stream.prototype);
Object.setPrototypeOf(ArrayStream, Stream);
ArrayStream.prototype.readable = true;
ArrayStream.prototype.writable = true;
ArrayStream.prototype.resume = function() {};
ArrayStream.prototype.write = function() {};
const requireRE = /\brequire\s*\(['"](([\w@./-]+\/)?(?:[\w@./-]*))/;
const simpleExpressionRE =
    /(?:[a-zA-Z_$](?:\w|\$)*\.)*[a-zA-Z_$](?:\w|\$)*\.?$/;
function isIdentifier(str) {
  if (str === '') {
    return false;
  const first = str.codePointAt(0);
  if (!isIdentifierStart(first)) {
    return false;
  const firstLen = first > 0xffff ? 2 : 1;
  for (var i = firstLen; i < str.length; i += 1) {
    const cp = str.codePointAt(i);
    if (!isIdentifierChar(cp)) {
      return false;
    }
    if (cp > 0xffff) {
      i += 1;
    }
  return true;
function filteredOwnPropertyNames(obj) {
  if (!obj) return [];
  const filter = ALL_PROPERTIES | SKIP_SYMBOLS;
  return getOwnNonIndexProperties(obj, filter).filter(isIdentifier);
function getGlobalLexicalScopeNames(contextId) {
  return sendInspectorCommand((session) => {
    let names = [];
    session.post('Runtime.globalLexicalScopeNames', {
      executionContextId: contextId
    }, (error, result) => {
      if (!error) names = result.names;
    });
    return names;
  }, () => []);
REPLServer.prototype.complete = function() {
  this.completer.apply(this, arguments);
// Provide a list of completions for the given leading text. This is
// given to the readline interface for handling tab completion.
// Example:
//  complete('var foo = util.')
//    -> [['util.print', 'util.debug', 'util.log', 'util.inspect'],
//        'util.' ]
// Warning: This eval's code like "foo.bar.baz", so it will run property
// getter code.
function complete(line, callback) {
  // There may be local variables to evaluate, try a nested REPL
  if (this[kBufferedCommandSymbol] !== undefined &&
      this[kBufferedCommandSymbol].length) {
    // Get a new array of inputted lines
    var tmp = this.lines.slice();
    // Kill off all function declarations to push all local variables into
    // global scope
    for (var n = 0; n < this.lines.level.length; n++) {
      var kill = this.lines.level[n];
      if (kill.isFunction)
        tmp[kill.line] = '';
    }
    var flat = new ArrayStream();         // Make a new "input" stream.
    var magic = new REPLServer('', flat); // Make a nested REPL.
    replMap.set(magic, replMap.get(this));
    flat.run(tmp);                        // `eval` the flattened code.
    // All this is only profitable if the nested REPL does not have a
    // bufferedCommand.
    if (!magic[kBufferedCommandSymbol]) {
      magic._domain.on('error', (err) => { throw err; });
      return magic.complete(line, callback);
    }
  var completions;
  // List of completion lists, one for each inheritance "level"
  var completionGroups = [];
  var completeOn, i, group, c;
  // REPL commands (e.g. ".break").
  var filter;
  let match = line.match(/^\s*\.(\w*)$/);
  if (match) {
    completionGroups.push(Object.keys(this.commands));
    completeOn = match[1];
    if (match[1].length) {
      filter = match[1];
    }
    completionGroupsLoaded();
  } else if (match = line.match(requireRE)) {
    // require('...<Tab>')
    const exts = Object.keys(this.context.require.extensions);
    var indexRe = new RegExp('^index(?:' + exts.map(regexpEscape).join('|') +
                             ')$');
    var versionedFileNamesRe = /-\d+\.\d+/;
    completeOn = match[1];
    var subdir = match[2] || '';
    filter = match[1];
    var dir, files, f, name, base, ext, abs, subfiles, s, isDirectory;
    group = [];
    let paths = [];
    if (completeOn === '.') {
      group = ['./', '../'];
    } else if (completeOn === '..') {
      group = ['../'];
    } else if (/^\.\.?\//.test(completeOn)) {
      paths = [process.cwd()];
    } else {
      paths = module.paths.concat(CJSModule.globalPaths);
    }
    for (i = 0; i < paths.length; i++) {
      dir = path.resolve(paths[i], subdir);
      try {
        files = fs.readdirSync(dir);
      } catch {
        continue;
      }
      for (f = 0; f < files.length; f++) {
        name = files[f];
        ext = path.extname(name);
        base = name.slice(0, -ext.length);
        if (versionedFileNamesRe.test(base) || name === '.npm') {
          // Exclude versioned names that 'npm' installs.
          continue;
        }
        abs = path.resolve(dir, name);
        try {
          isDirectory = fs.statSync(abs).isDirectory();
        } catch {
          continue;
        }
        if (isDirectory) {
          group.push(subdir + name + '/');
          try {
            subfiles = fs.readdirSync(abs);
          } catch {
            continue;
          }
          for (s = 0; s < subfiles.length; s++) {
            if (indexRe.test(subfiles[s])) {
              group.push(subdir + name);
            }
          }
        } else if (exts.includes(ext) && (!subdir || base !== 'index')) {
          group.push(subdir + base);
        }
      }
    }
    if (group.length) {
      completionGroups.push(group);
    }
    if (!subdir) {
      completionGroups.push(exports._builtinLibs);
    }
    completionGroupsLoaded();
  } else if (match = line.match(/fs\.\s*[a-z][a-zA-Z]+\(\s*["'](.*)/)) {
    let filePath = match[1];
    let fileList;
    filter = '';
    try {
      fileList = fs.readdirSync(filePath, { withFileTypes: true });
      completionGroups.push(fileList.map((dirent) => dirent.name));
      completeOn = '';
    } catch {
      try {
        const baseName = path.basename(filePath);
        filePath = path.dirname(filePath);
        fileList = fs.readdirSync(filePath, { withFileTypes: true });
        const filteredValue = fileList.filter((d) =>
          d.name.startsWith(baseName))
          .map((d) => d.name);
        completionGroups.push(filteredValue);
        completeOn = filePath;
      } catch {}
    }
    completionGroupsLoaded();
  // Handle variable member lookup.
  // We support simple chained expressions like the following (no function
  // calls, etc.). That is for simplicity and also because we *eval* that
  // leading expression so for safety (see WARNING above) don't want to
  // eval function calls.
  //
  //   foo.bar<|>     # completions for 'foo' with filter 'bar'
  //   spam.eggs.<|>  # completions for 'spam.eggs' with filter ''
  //   foo<|>         # all scope vars with filter 'foo'
  //   foo.<|>        # completions for 'foo' with filter ''
  } else if (line.length === 0 || /\w|\.|\$/.test(line[line.length - 1])) {
    match = simpleExpressionRE.exec(line);
    if (line.length === 0 || match) {
      var expr;
      completeOn = (match ? match[0] : '');
      if (line.length === 0) {
        filter = '';
        expr = '';
      } else if (line[line.length - 1] === '.') {
        filter = '';
        expr = match[0].slice(0, match[0].length - 1);
      } else {
        var bits = match[0].split('.');
        filter = bits.pop();
        expr = bits.join('.');
      }
      // Resolve expr and get its completions.
      var memberGroups = [];
      if (!expr) {
        // If context is instance of vm.ScriptContext
        // Get global vars synchronously
        if (this.useGlobal || vm.isContext(this.context)) {
          completionGroups.push(getGlobalLexicalScopeNames(this[kContextId]));
          var contextProto = this.context;
          while (contextProto = Object.getPrototypeOf(contextProto)) {
            completionGroups.push(
              filteredOwnPropertyNames.call(this, contextProto));
          }
          completionGroups.push(
            filteredOwnPropertyNames.call(this, this.context));
          if (filter !== '') addCommonWords(completionGroups);
          completionGroupsLoaded();
        } else {
          this.eval('.scope', this.context, 'repl', function ev(err, globals) {
            if (err || !Array.isArray(globals)) {
              if (filter !== '') addCommonWords(completionGroups);
            } else if (Array.isArray(globals[0])) {
              // Add grouped globals
              for (var n = 0; n < globals.length; n++)
                completionGroups.push(globals[n]);
            } else {
              completionGroups.push(globals);
              if (filter !== '') addCommonWords(completionGroups);
            }
            completionGroupsLoaded();
          });
        }
      } else {
        const evalExpr = `try { ${expr} } catch {}`;
        this.eval(evalExpr, this.context, 'repl', (e, obj) => {
          if (obj != null) {
            if (typeof obj === 'object' || typeof obj === 'function') {
              try {
                memberGroups.push(filteredOwnPropertyNames.call(this, obj));
              } catch {
                // Probably a Proxy object without `getOwnPropertyNames` trap.
                // We simply ignore it here, as we don't want to break the
                // autocompletion. Fixes the bug
                // https://github.com/nodejs/node/issues/2119
              }
            }
            // Works for non-objects
            try {
              var sentinel = 5;
              var p;
              if (typeof obj === 'object' || typeof obj === 'function') {
                p = Object.getPrototypeOf(obj);
              } else {
                p = obj.constructor ? obj.constructor.prototype : null;
              }
              while (p !== null) {
                memberGroups.push(filteredOwnPropertyNames.call(this, p));
                p = Object.getPrototypeOf(p);
                // Circular refs possible? Let's guard against that.
                sentinel--;
                if (sentinel <= 0) {
                  break;
                }
              }
            } catch {}
          }
          if (memberGroups.length) {
            for (i = 0; i < memberGroups.length; i++) {
              completionGroups.push(
                memberGroups[i].map((member) => `${expr}.${member}`));
            }
            if (filter) {
              filter = `${expr}.${filter}`;
            }
          }
          completionGroupsLoaded();
        });
      }
    } else {
      completionGroupsLoaded();
    }
  } else {
    completionGroupsLoaded();
  // Will be called when all completionGroups are in place
  // Useful for async autocompletion
  function completionGroupsLoaded() {
    // Filter, sort (within each group), uniq and merge the completion groups.
    if (completionGroups.length && filter) {
      var newCompletionGroups = [];
      for (i = 0; i < completionGroups.length; i++) {
        group = completionGroups[i]
          .filter((elem) => elem.indexOf(filter) === 0);
        if (group.length) {
          newCompletionGroups.push(group);
        }
      }
      completionGroups = newCompletionGroups;
    }
    if (completionGroups.length) {
      var uniq = {};  // Unique completions across all groups
      completions = [];
      // Completion group 0 is the "closest"
      // (least far up the inheritance chain)
      // so we put its completions last: to be closest in the REPL.
      for (i = 0; i < completionGroups.length; i++) {
        group = completionGroups[i];
        group.sort();
        for (var j = group.length - 1; j >= 0; j--) {
          c = group[j];
          if (!ObjectPrototype.hasOwnProperty(uniq, c)) {
            completions.unshift(c);
            uniq[c] = true;
          }
        }
        completions.unshift(''); // Separator btwn groups
      }
      while (completions.length && completions[0] === '') {
        completions.shift();
      }
    }
    callback(null, [completions || [], completeOn]);
function longestCommonPrefix(arr = []) {
  const cnt = arr.length;
  if (cnt === 0) return '';
  if (cnt === 1) return arr[0];
  const first = arr[0];
  // complexity: O(m * n)
  for (var m = 0; m < first.length; m++) {
    const c = first[m];
    for (var n = 1; n < cnt; n++) {
      const entry = arr[n];
      if (m >= entry.length || c !== entry[m]) {
        return first.substring(0, m);
      }
    }
  return first;
REPLServer.prototype.completeOnEditorMode = (callback) => (err, results) => {
  if (err) return callback(err);
  const [completions, completeOn = ''] = results;
  const prefixLength = completeOn.length;
  if (prefixLength === 0) return callback(null, [[], completeOn]);
  const isNotEmpty = (v) => v.length > 0;
  const trimCompleteOnPrefix = (v) => v.substring(prefixLength);
  const data = completions.filter(isNotEmpty).map(trimCompleteOnPrefix);
  callback(null, [[`${completeOn}${longestCommonPrefix(data)}`], completeOn]);
REPLServer.prototype.defineCommand = function(keyword, cmd) {
  if (typeof cmd === 'function') {
    cmd = { action: cmd };
  } else if (typeof cmd.action !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('action', 'Function', cmd.action);
  this.commands[keyword] = cmd;
REPLServer.prototype.memory = deprecate(
  _memory,
  'REPLServer.memory() is deprecated',
  'DEP0082');
function _memory(cmd) {
  const self = this;
  self.lines = self.lines || [];
  self.lines.level = self.lines.level || [];
  // Save the line so I can do magic later
  if (cmd) {
    // TODO should I tab the level?
    const len = self.lines.level.length ? self.lines.level.length - 1 : 0;
    self.lines.push('  '.repeat(len) + cmd);
  } else {
    // I don't want to not change the format too much...
    self.lines.push('');
  // I need to know "depth."
  // Because I can not tell the difference between a } that
  // closes an object literal and a } that closes a function
  if (cmd) {
    // Going down is { and (   e.g. function() {
    // going up is } and )
    let dw = cmd.match(/[{(]/g);
    let up = cmd.match(/[})]/g);
    up = up ? up.length : 0;
    dw = dw ? dw.length : 0;
    let depth = dw - up;
    if (depth) {
      (function workIt() {
        if (depth > 0) {
          // Going... down.
          // Push the line#, depth count, and if the line is a function.
          // Since JS only has functional scope I only need to remove
          // "function() {" lines, clearly this will not work for
          // "function()
          // {" but nothing should break, only tab completion for local
          // scope will not work for this function.
          self.lines.level.push({
            line: self.lines.length - 1,
            depth: depth,
            isFunction: /\bfunction\b/.test(cmd)
          });
        } else if (depth < 0) {
          // Going... up.
          const curr = self.lines.level.pop();
          if (curr) {
            const tmp = curr.depth + depth;
            if (tmp < 0) {
              // More to go, recurse
              depth += curr.depth;
              workIt();
            } else if (tmp > 0) {
              // Remove and push back
              curr.depth += depth;
              self.lines.level.push(curr);
            }
          }
        }
      }());
    }
    // It is possible to determine a syntax error at this point.
    // if the REPL still has a bufferedCommand and
    // self.lines.level.length === 0
    // TODO? keep a log of level so that any syntax breaking lines can
    // be cleared on .break and in the case of a syntax error?
    // TODO? if a log was kept, then I could clear the bufferedCommand and
    // eval these lines and throw the syntax error
  } else {
    self.lines.level = [];
function addCommonWords(completionGroups) {
  // Only words which do not yet exist as global property should be added to
  // this list.
  completionGroups.push([
    'async', 'await', 'break', 'case', 'catch', 'const', 'continue',
    'debugger', 'default', 'delete', 'do', 'else', 'export', 'false',
    'finally', 'for', 'function', 'if', 'import', 'in', 'instanceof', 'let',
    'new', 'null', 'return', 'switch', 'this', 'throw', 'true', 'try',
    'typeof', 'var', 'void', 'while', 'with', 'yield'
  ]);
function _turnOnEditorMode(repl) {
  repl.editorMode = true;
  Interface.prototype.setPrompt.call(repl, '');
function _turnOffEditorMode(repl) {
  repl.editorMode = false;
  repl.setPrompt(repl._initialPrompt);
function defineDefaultCommands(repl) {
  repl.defineCommand('break', {
    help: 'Sometimes you get stuck, this gets you out',
    action: function() {
      this.clearBufferedCommand();
      this.displayPrompt();
    }
  });
  var clearMessage;
  if (repl.useGlobal) {
    clearMessage = 'Alias for .break';
  } else {
    clearMessage = 'Break, and also clear the local context';
  repl.defineCommand('clear', {
    help: clearMessage,
    action: function() {
      this.clearBufferedCommand();
      if (!this.useGlobal) {
        this.outputStream.write('Clearing context...\n');
        this.resetContext();
      }
      this.displayPrompt();
    }
  });
  repl.defineCommand('exit', {
    help: 'Exit the repl',
    action: function() {
      this.close();
    }
  });
  repl.defineCommand('help', {
    help: 'Print this help message',
    action: function() {
      const names = Object.keys(this.commands).sort();
      const longestNameLength = names.reduce(
        (max, name) => Math.max(max, name.length),
        0
      );
      for (var n = 0; n < names.length; n++) {
        var name = names[n];
        var cmd = this.commands[name];
        var spaces = ' '.repeat(longestNameLength - name.length + 3);
        var line = `.${name}${cmd.help ? spaces + cmd.help : ''}\n`;
        this.outputStream.write(line);
      }
      this.outputStream.write('\nPress ^C to abort current expression, ' +
        '^D to exit the repl\n');
      this.displayPrompt();
    }
  });
  repl.defineCommand('save', {
    help: 'Save all evaluated commands in this REPL session to a file',
    action: function(file) {
      try {
        fs.writeFileSync(file, this.lines.join('\n'));
        this.outputStream.write(`Session saved to: ${file}\n`);
      } catch {
        this.outputStream.write(`Failed to save: ${file}\n`);
      }
      this.displayPrompt();
    }
  });
  repl.defineCommand('load', {
    help: 'Load JS from a file into the REPL session',
    action: function(file) {
      try {
        const stats = fs.statSync(file);
        if (stats && stats.isFile()) {
          _turnOnEditorMode(this);
          const data = fs.readFileSync(file, 'utf8');
          this.write(data);
          _turnOffEditorMode(this);
          this.write('\n');
        } else {
          this.outputStream.write(
            `Failed to load: ${file} is not a valid file\n`
          );
        }
      } catch {
        this.outputStream.write(`Failed to load: ${file}\n`);
      }
      this.displayPrompt();
    }
  });
  if (repl.terminal) {
    repl.defineCommand('editor', {
      help: 'Enter editor mode',
      action() {
        _turnOnEditorMode(this);
        this.outputStream.write(
          '// Entering editor mode (^D to finish, ^C to cancel)\n');
      }
    });
function regexpEscape(s) {
  return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
function Recoverable(err) {
  this.err = err;
Object.setPrototypeOf(Recoverable.prototype, SyntaxError.prototype);
Object.setPrototypeOf(Recoverable, SyntaxError);
exports.Recoverable = Recoverable;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const { Buffer } = require('buffer');
const pipeline = require('internal/streams/pipeline');
const eos = require('internal/streams/end-of-stream');
// Note: export Stream before Readable/Writable/Duplex/...
// to avoid a cross-reference(require) issues
const Stream = module.exports = require('internal/streams/legacy');
Stream.Readable = require('_stream_readable');
Stream.Writable = require('_stream_writable');
Stream.Duplex = require('_stream_duplex');
Stream.Transform = require('_stream_transform');
Stream.PassThrough = require('_stream_passthrough');
Stream.pipeline = pipeline;
Stream.finished = eos;
// Backwards-compat with node 0.4.x
Stream.Stream = Stream;
// Internal utilities
try {
  const types = require('internal/util/types');
  if (types && typeof types.isUint8Array === 'function') {
    Stream._isUint8Array = types.isUint8Array;
  } else {
    // This throws for Node < 4.2.0 because there's no util binding and
    // returns undefined for Node < 7.4.0.
    // Please do not convert process.binding() to internalBinding() here.
    // This is for compatibility with older versions when loaded as
    // readable-stream.
    Stream._isUint8Array = process.binding('util').isUint8Array;
} catch (e) { // eslint-disable-line no-unused-vars
if (!Stream._isUint8Array) {
  Stream._isUint8Array = function _isUint8Array(obj) {
    return Object.prototype.toString.call(obj) === '[object Uint8Array]';
  };
const version = process.version.substr(1).split('.');
if (version[0] === 0 && version[1] < 12) {
  Stream._uint8ArrayToBuffer = Buffer;
} else {
  try {
    const internalBuffer = require('internal/buffer');
    Stream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {
      return new internalBuffer.FastBuffer(chunk.buffer,
                                           chunk.byteOffset,
                                           chunk.byteLength);
    };
  } catch (e) { // eslint-disable-line no-unused-vars
  if (!Stream._uint8ArrayToBuffer) {
    Stream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {
      return Buffer.prototype.slice.call(chunk);
    };
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
module.exports = Readable;
Readable.ReadableState = ReadableState;
const EE = require('events');
const Stream = require('stream');
const { Buffer } = require('buffer');
const debug = require('internal/util/debuglog').debuglog('stream');
const BufferList = require('internal/streams/buffer_list');
const destroyImpl = require('internal/streams/destroy');
const { getHighWaterMark } = require('internal/streams/state');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_STREAM_PUSH_AFTER_EOF,
  ERR_METHOD_NOT_IMPLEMENTED,
  ERR_STREAM_UNSHIFT_AFTER_END_EVENT
} = require('internal/errors').codes;
// Lazy loaded to improve the startup performance.
let StringDecoder;
let createReadableStreamAsyncIterator;
Object.setPrototypeOf(Readable.prototype, Stream.prototype);
Object.setPrototypeOf(Readable, Stream);
const { errorOrDestroy } = destroyImpl;
const kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];
function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function')
    return emitter.prependListener(event, fn);
  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event])
    emitter.on(event, fn);
  else if (Array.isArray(emitter._events[event]))
    emitter._events[event].unshift(fn);
  else
    emitter._events[event] = [fn, emitter._events[event]];
function ReadableState(options, stream, isDuplex) {
  options = options || {};
  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  if (typeof isDuplex !== 'boolean')
    isDuplex = stream instanceof Stream.Duplex;
  // Object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;
  if (isDuplex)
    this.objectMode = this.objectMode || !!options.readableObjectMode;
  // The point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark',
                                        isDuplex);
  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;
  // A flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;
  // Whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true;
  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;
  // Should .destroy() be called after 'end' (and potentially 'finish')
  this.autoDestroy = !!options.autoDestroy;
  // Has it been destroyed
  this.destroyed = false;
  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';
  // The number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;
  // If true, a maybeReadMore has been scheduled
  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5
  const isDuplex = this instanceof Stream.Duplex;
  this._readableState = new ReadableState(options, this, isDuplex);
  // legacy
  this.readable = true;
  if (options) {
    if (typeof options.read === 'function')
      this._read = options.read;
    if (typeof options.destroy === 'function')
      this._destroy = options.destroy;
  Stream.call(this);
Object.defineProperty(Readable.prototype, 'destroyed', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set(value) {
    // We ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }
    // Backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function(err, cb) {
  cb(err);
// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  return readableAddChunk(this, chunk, encoding, false);
// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk, encoding) {
  return readableAddChunk(this, chunk, encoding, true);
function readableAddChunk(stream, chunk, encoding, addToFront) {
  debug('readableAddChunk', chunk);
  const state = stream._readableState;
  let skipChunkCheck;
  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (addToFront && state.encoding && state.encoding !== encoding) {
        // When unshifting, if state.encoding is set, we have to save
        // the string in the BufferList with the state encoding
        chunk = Buffer.from(chunk, encoding).toString(state.encoding);
      } else if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck)
      er = chunkInvalid(state, chunk);
    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' &&
          !state.objectMode &&
          // Do not use Object.getPrototypeOf as it is slower since V8 7.3.
          !(chunk instanceof Buffer)) {
        chunk = Stream._uint8ArrayToBuffer(chunk);
      }
      if (addToFront) {
        if (state.endEmitted)
          errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
        else
          addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0)
            addChunk(stream, state, chunk, false);
          else
            maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.
  return !state.ended &&
    (state.length < state.highWaterMark || state.length === 0);
function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // Update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront)
      state.buffer.unshift(chunk);
    else
      state.buffer.push(chunk);
    if (state.needReadable)
      emitReadable(stream);
  maybeReadMore(stream, state);
function chunkInvalid(state, chunk) {
  if (!Stream._isUint8Array(chunk) &&
      typeof chunk !== 'string' &&
      chunk !== undefined &&
      !state.objectMode) {
    return new ERR_INVALID_ARG_TYPE(
      'chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
Readable.prototype.isPaused = function() {
  return this._readableState.flowing === false;
// Backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder').StringDecoder;
  const decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder;
  // If setEncoding(null), decoder.encoding equals utf8
  this._readableState.encoding = this._readableState.decoder.encoding;
  // Iterate over current buffer to convert already stored Buffers:
  let p = this._readableState.buffer.head;
  let content = '';
  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  this._readableState.buffer.clear();
  if (content !== '')
    this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
// Don't raise the hwm > 8MB
const MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  return n;
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || (state.length === 0 && state.ended))
    return 0;
  if (state.objectMode)
    return 1;
  if (Number.isNaN(n)) {
    // Only flow one buffer at a time
    if (state.flowing && state.length)
      return state.buffer.head.data.length;
    else
      return state.length;
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark)
    state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length)
    return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  return state.length;
// You can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  debug('read', n);
  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed
  // in this scenario, so we are doing it manually.
  if (n === undefined) {
    n = NaN;
  } else if (!Number.isInteger(n)) {
    n = parseInt(n, 10);
  const state = this._readableState;
  const nOrig = n;
  if (n !== 0)
    state.emittedReadable = false;
  // If we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      ((state.highWaterMark !== 0 ?
        state.length >= state.highWaterMark :
        state.length > 0) ||
       state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended)
      endReadable(this);
    else
      emitReadable(this);
    return null;
  n = howMuchToRead(n, state);
  // If we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);
  // If we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  // However, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // If the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // Call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading)
      n = howMuchToRead(nOrig, state);
  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;
  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended)
      state.needReadable = true;
    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended)
      endReadable(this);
  if (ret !== null)
    this.emit('data', ret);
  return ret;
function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  state.ended = true;
  if (state.sync) {
    // If we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // Emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;
    state.emittedReadable = true;
    // We have to emit readable now that we are EOF. Modules
    // in the ecosystem (e.g. dicer) rely on this event being sync.
    emitReadable_(stream);
// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  const state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
function emitReadable_(stream) {
  const state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);
  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.
  state.needReadable =
    !state.flowing &&
    !state.ended &&
    state.length <= state.highWaterMark;
  flow(stream);
// At this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended &&
         (state.length < state.highWaterMark ||
          (state.flowing && state.length === 0))) {
    const len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // Didn't get any data, stop spinning.
      break;
  state.readingMore = false;
// Abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
Readable.prototype.pipe = function(dest, pipeOpts) {
  const src = this;
  const state = this._readableState;
  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;
  const endFn = doEnd ? onend : unpipe;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);
  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  function onend() {
    debug('onend');
    dest.end();
  // When the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  const ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // Cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true;
    // If the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain &&
        (!dest._writableState || dest._writableState.needDrain))
      ondrain();
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    const ret = dest.write(chunk);
    debug('dest.write', ret);
    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if (((state.pipesCount === 1 && state.pipes === dest) ||
           (state.pipesCount > 1 && state.pipes.includes(dest))) &&
          !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }
      src.pause();
    }
  // If the dest has an error, then stop piping into it.
  // However, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      errorOrDestroy(dest, er);
  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);
  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  dest.once('finish', onfinish);
  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  // Tell the dest that it's being piped to
  dest.emit('pipe', src);
  // Start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  return dest;
function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    const state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain)
      state.awaitDrain--;
    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
Readable.prototype.unpipe = function(dest) {
  const state = this._readableState;
  const unpipeInfo = { hasUnpiped: false };
  // If we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;
  // Just one destination.  most common case.
  if (state.pipesCount === 1) {
    // Passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;
    if (!dest)
      dest = state.pipes;
    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this, unpipeInfo);
    return this;
  // Slow case with multiple pipe destinations.
  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this, { hasUnpiped: false });
    return this;
  // Try to find the right one.
  const index = state.pipes.indexOf(dest);
  if (index === -1)
    return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
// Set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  const res = Stream.prototype.on.call(this, ev, fn);
  const state = this._readableState;
  if (ev === 'data') {
    // Update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0;
    // Try start flowing on next tick if stream isn't explicitly paused
    if (state.flowing !== false)
      this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);
      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  return res;
Readable.prototype.addListener = Readable.prototype.on;
Readable.prototype.removeListener = function(ev, fn) {
  const res = Stream.prototype.removeListener.call(this, ev, fn);
  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  return res;
Readable.prototype.removeAllListeners = function(ev) {
  const res = Stream.prototype.removeAllListeners.apply(this, arguments);
  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  return res;
function updateReadableListening(self) {
  const state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;
  if (state.resumeScheduled && !state.paused) {
    // Flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true;
    // Crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  const state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    // We flow only if there is no one listening
    // for readable, but we still have to call
    // resume()
    state.flowing = !state.readableListening;
    resume(this, state);
  state.paused = false;
  return this;
function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
function resume_(stream, state) {
  debug('resume', state.reading);
  if (!state.reading) {
    stream.read(0);
  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading)
    stream.read(0);
Readable.prototype.pause = function() {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  this._readableState.paused = true;
  return this;
function flow(stream) {
  const state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null);
// Wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  const state = this._readableState;
  var paused = false;
  stream.on('end', () => {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        this.push(chunk);
    }
    this.push(null);
  });
  stream.on('data', (chunk) => {
    debug('wrapped data');
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    // Don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined))
      return;
    else if (!state.objectMode && (!chunk || !chunk.length))
      return;
    const ret = this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });
  // Proxy all the other methods. Important when wrapping filters and duplexes.
  for (const i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  // Proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  // When we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = (n) => {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };
  return this;
Readable.prototype[Symbol.asyncIterator] = function() {
  if (createReadableStreamAsyncIterator === undefined) {
    createReadableStreamAsyncIterator =
      require('internal/streams/async_iterator');
  return createReadableStreamAsyncIterator(this);
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function() {
    return this._readableState.highWaterMark;
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function() {
    return this._readableState && this._readableState.buffer;
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function() {
    return this._readableState.flowing;
  },
  set: function(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
// Exposed for testing purposes only.
Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    return this._readableState.length;
Object.defineProperty(Readable.prototype, 'readableObjectMode', {
  enumerable: false,
  get() {
    return this._readableState ? this._readableState.objectMode : false;
Object.defineProperty(Readable.prototype, 'readableEncoding', {
  enumerable: false,
  get() {
    return this._readableState ? this._readableState.encoding : null;
// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0)
    return null;
  var ret;
  if (state.objectMode)
    ret = state.buffer.shift();
  else if (!n || n >= state.length) {
    // Read it all, truncate the list
    if (state.decoder)
      ret = state.buffer.join('');
    else if (state.buffer.length === 1)
      ret = state.buffer.first();
    else
      ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  return ret;
function endReadable(stream) {
  const state = stream._readableState;
  debug('endReadable', state.endEmitted);
  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length);
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      const wState = stream._writableState;
      if (!wState || (wState.autoDestroy && wState.finished)) {
        stream.destroy();
      }
    }
Readable.from = function(iterable, opts) {
  let iterator;
  if (iterable && iterable[Symbol.asyncIterator])
    iterator = iterable[Symbol.asyncIterator]();
  else if (iterable && iterable[Symbol.iterator])
    iterator = iterable[Symbol.iterator]();
  else
    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable);
  const readable = new Readable({
    objectMode: true,
    ...opts
  });
  // Reading boolean to protect against _read
  // being called before last iteration completion.
  let reading = false;
  readable._read = function() {
    if (!reading) {
      reading = true;
      next();
    }
  };
  async function next() {
    try {
      const { value, done } = await iterator.next();
      if (done) {
        readable.push(null);
      } else if (readable.push(await value)) {
        next();
      } else {
        reading = false;
      }
    } catch (err) {
      readable.destroy(err);
    }
  return readable;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';
const { Object } = primordials;
module.exports = Writable;
Writable.WritableState = WritableState;
const internalUtil = require('internal/util');
const Stream = require('stream');
const { Buffer } = require('buffer');
const destroyImpl = require('internal/streams/destroy');
const { getHighWaterMark } = require('internal/streams/state');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK,
  ERR_STREAM_CANNOT_PIPE,
  ERR_STREAM_DESTROYED,
  ERR_STREAM_NULL_VALUES,
  ERR_STREAM_WRITE_AFTER_END,
  ERR_UNKNOWN_ENCODING
} = require('internal/errors').codes;
const { errorOrDestroy } = destroyImpl;
Object.setPrototypeOf(Writable.prototype, Stream.prototype);
Object.setPrototypeOf(Writable, Stream);
function nop() {}
function WritableState(options, stream, isDuplex) {
  options = options || {};
  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
  if (typeof isDuplex !== 'boolean')
    isDuplex = stream instanceof Stream.Duplex;
  // Object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;
  if (isDuplex)
    this.objectMode = this.objectMode || !!options.writableObjectMode;
  // The point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark',
                                        isDuplex);
  // if _final has been called
  this.finalCalled = false;
  // drain event flag.
  this.needDrain = false;
  // At the start of calling end()
  this.ending = false;
  // When end() has been called, and returned
  this.ended = false;
  // When 'finish' is emitted
  this.finished = false;
  // Has it been destroyed
  this.destroyed = false;
  // Should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  const noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;
  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';
  // Not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;
  // A flag to see when we're in the middle of a write.
  this.writing = false;
  // When true all writes will be buffered until .uncork() call
  this.corked = 0;
  // A flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;
  // A flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;
  // The callback that's passed to _write(chunk,cb)
  this.onwrite = onwrite.bind(undefined, stream);
  // The callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;
  // The amount that is being written when _write is called.
  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null;
  // Number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;
  // Emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;
  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;
  // Should .destroy() be called after 'finish' (and potentially 'end')
  this.autoDestroy = !!options.autoDestroy;
  // Count buffered requests
  this.bufferedRequestCount = 0;
  // Allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  const corkReq = { next: null, entry: null, finish: undefined };
  corkReq.finish = onCorkedFinish.bind(undefined, corkReq, this);
  this.corkedRequestsFree = corkReq;
WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  const out = [];
  while (current) {
    out.push(current);
    current = current.next;
  return out;
Object.defineProperty(WritableState.prototype, 'buffer', {
  get: internalUtil.deprecate(function writableStateBufferGetter() {
    return this.getBuffer();
  }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +
     'instead.', 'DEP0003')
// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance) {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function(object) {
      if (realHasInstance.call(this, object))
        return true;
      if (this !== Writable)
        return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function(object) {
    return object instanceof this;
  };
function Writable(options) {
  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5
  const isDuplex = (this instanceof Stream.Duplex);
  if (!isDuplex && !realHasInstance.call(Writable, this))
    return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex);
  // legacy.
  this.writable = true;
  if (options) {
    if (typeof options.write === 'function')
      this._write = options.write;
    if (typeof options.writev === 'function')
      this._writev = options.writev;
    if (typeof options.destroy === 'function')
      this._destroy = options.destroy;
    if (typeof options.final === 'function')
      this._final = options.final;
  Stream.call(this);
// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
function writeAfterEnd(stream, cb) {
  const er = new ERR_STREAM_WRITE_AFTER_END();
  // TODO: defer error events consistently everywhere, not just the cb
  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var er;
  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  return true;
Writable.prototype.write = function(chunk, encoding, cb) {
  const state = this._writableState;
  var ret = false;
  const isBuf = !state.objectMode && Stream._isUint8Array(chunk);
  // Do not use Object.getPrototypeOf as it is slower since V8 7.3.
  if (isBuf && !(chunk instanceof Buffer)) {
    chunk = Stream._uint8ArrayToBuffer(chunk);
  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  if (isBuf)
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;
  if (typeof cb !== 'function')
    cb = nop;
  if (state.ending)
    writeAfterEnd(this, cb);
  else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  return ret;
Writable.prototype.cork = function() {
  this._writableState.corked++;
Writable.prototype.uncork = function() {
  const state = this._writableState;
  if (state.corked) {
    state.corked--;
    if (!state.writing &&
        !state.corked &&
        !state.bufferProcessing &&
        state.bufferedRequest)
      clearBuffer(this, state);
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string')
    encoding = encoding.toLowerCase();
  if (!Buffer.isEncoding(encoding))
    throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function() {
    return this._writableState && this._writableState.getBuffer();
function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  return chunk;
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function() {
    return this._writableState.highWaterMark;
// If we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  const len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  const ret = state.length < state.highWaterMark;
  // We must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;
  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk,
      encoding,
      isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  return ret;
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed)
    state.onwrite(new ERR_STREAM_DESTROYED('write'));
  else if (writev)
    stream._writev(chunk, state.onwrite);
  else
    stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) {
    // Defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er);
    // This can emit finish, and it will always happen
    // after error
    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // The caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
    // This can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
function onwrite(stream, er) {
  const state = stream._writableState;
  const sync = state.sync;
  const cb = state.writecb;
  if (typeof cb !== 'function')
    throw new ERR_MULTIPLE_CALLBACK();
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;
    if (!finished &&
        !state.corked &&
        !state.bufferProcessing &&
        state.bufferedRequest) {
      clearBuffer(stream, state);
    }
    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
// If there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;
  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf)
        allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish);
    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      var corkReq = { next: null, entry: null, finish: undefined };
      corkReq.finish = onCorkedFinish.bind(undefined, corkReq, state);
      state.corkedRequestsFree = corkReq;
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // If we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }
    if (entry === null)
      state.lastBufferedRequest = null;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
Writable.prototype._writev = null;
Writable.prototype.end = function(chunk, encoding, cb) {
  const state = this._writableState;
  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  if (chunk !== null && chunk !== undefined)
    this.write(chunk, encoding);
  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  // Ignore unnecessary end() calls.
  if (!state.ending)
    endWritable(this, state, cb);
  return this;
Object.defineProperty(Writable.prototype, 'writableLength', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    return this._writableState.length;
function needFinish(state) {
  return (state.ending &&
          state.length === 0 &&
          state.bufferedRequest === null &&
          !state.finished &&
          !state.writing);
function callFinal(stream, state) {
  stream._final((err) => {
    state.pendingcb--;
    if (err) {
      errorOrDestroy(stream, err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
function finishMaybe(stream, state) {
  const need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        const rState = stream._readableState;
        if (!rState || (rState.autoDestroy && rState.endEmitted)) {
          stream.destroy();
        }
      }
    }
  return need;
function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  state.ended = true;
  stream.writable = false;
function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  // Reuse the free corkReq.
  state.corkedRequestsFree.next = corkReq;
Object.defineProperty(Writable.prototype, 'destroyed', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set(value) {
    // We ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }
    // Backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
Object.defineProperty(Writable.prototype, 'writableObjectMode', {
  enumerable: false,
  get() {
    return this._writableState ? this._writableState.objectMode : false;
Object.defineProperty(Writable.prototype, 'writableFinished', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    return this._writableState.finished;
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function(err, cb) {
  cb(err);
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
const { Object } = primordials;
module.exports = Duplex;
const Readable = require('_stream_readable');
const Writable = require('_stream_writable');
Object.setPrototypeOf(Duplex.prototype, Readable.prototype);
Object.setPrototypeOf(Duplex, Readable);
  // Allow the keys array to be GC'ed.
  const keys = Object.keys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    const method = keys[v];
    if (!Duplex.prototype[method])
      Duplex.prototype[method] = Writable.prototype[method];
function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;
  if (options) {
    if (options.readable === false)
      this.readable = false;
    if (options.writable === false)
      this.writable = false;
    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    return this._writableState.highWaterMark;
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function() {
    return this._writableState && this._writableState.getBuffer();
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    return this._writableState.length;
Object.defineProperty(Duplex.prototype, 'writableFinished', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    return this._writableState.finished;
// The no-half-open enforcer
function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended)
    return;
  // No more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(onEndNT, this);
function onEndNT(self) {
  self.end();
Object.defineProperty(Duplex.prototype, 'destroyed', {
  // Making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get() {
    if (this._readableState === undefined ||
        this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set(value) {
    // We ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined ||
        this._writableState === undefined) {
      return;
    }
    // Backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
// Here's how this works:
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';
const { Object } = primordials;
module.exports = Transform;
const {
  ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK,
  ERR_TRANSFORM_ALREADY_TRANSFORMING,
  ERR_TRANSFORM_WITH_LENGTH_0
} = require('internal/errors').codes;
const Duplex = require('_stream_duplex');
Object.setPrototypeOf(Transform.prototype, Duplex.prototype);
Object.setPrototypeOf(Transform, Duplex);
function afterTransform(er, data) {
  const ts = this._transformState;
  ts.transforming = false;
  const cb = ts.writecb;
  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // Single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  const rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };
  // We have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;
  if (options) {
    if (typeof options.transform === 'function')
      this._transform = options.transform;
    if (typeof options.flush === 'function')
      this._flush = options.flush;
  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
function prefinish() {
  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush((er, data) => {
      done(this, er, data);
    });
  } else {
    done(this, null, null);
Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
Transform.prototype._write = function(chunk, encoding, cb) {
  const ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  const ts = this._transformState;
  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // Mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
Transform.prototype._destroy = function(err, cb) {
  Duplex.prototype._destroy.call(this, err, (err2) => {
    cb(err2);
  });
function done(stream, er, data) {
  if (er)
    return stream.emit('error', er);
  if (data != null) // Single equals check for both `null` and `undefined`
    stream.push(data);
  // These two error cases are coherence checks that can likely not be tested.
  if (stream._writableState.length)
    throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming)
    throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';
const { Object } = primordials;
module.exports = PassThrough;
const Transform = require('_stream_transform');
Object.setPrototypeOf(PassThrough.prototype, Transform.prototype);
Object.setPrototypeOf(PassThrough, Transform);
function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);
  Transform.call(this, options);
PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
'use strict';
module.exports = require('internal/js_stream_socket');
process.emitWarning('The _stream_wrap module is deprecated.',
                    'DeprecationWarning', 'DEP0125');
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const { Buffer } = require('buffer');
const {
  kIncompleteCharactersStart,
  kIncompleteCharactersEnd,
  kMissingBytes,
  kBufferedBytes,
  kEncodingField,
  kSize,
  decode,
  flush,
  encodings
} = internalBinding('string_decoder');
const internalUtil = require('internal/util');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_UNKNOWN_ENCODING
} = require('internal/errors').codes;
const isEncoding = Buffer[internalUtil.kIsEncodingSymbol];
const kNativeDecoder = Symbol('kNativeDecoder');
// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  const nenc = internalUtil.normalizeEncoding(enc);
  if (nenc === undefined) {
    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))
      throw new ERR_UNKNOWN_ENCODING(enc);
    return enc;
  return nenc;
const encodingsMap = {};
for (var i = 0; i < encodings.length; ++i)
  encodingsMap[encodings[i]] = i;
// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  this[kNativeDecoder] = Buffer.alloc(kSize);
  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];
StringDecoder.prototype.write = function write(buf) {
  if (typeof buf === 'string')
    return buf;
  if (!ArrayBuffer.isView(buf))
    throw new ERR_INVALID_ARG_TYPE('buf',
                                   ['Buffer', 'TypedArray', 'DataView'],
                                   buf);
  return decode(this[kNativeDecoder], buf);
StringDecoder.prototype.end = function end(buf) {
  let ret = '';
  if (buf !== undefined)
    ret = this.write(buf);
  if (this[kNativeDecoder][kBufferedBytes] > 0)
    ret += flush(this[kNativeDecoder]);
  return ret;
/* Everything below this line is undocumented legacy stuff. */
StringDecoder.prototype.text = function text(buf, offset) {
  this[kNativeDecoder][kMissingBytes] = 0;
  this[kNativeDecoder][kBufferedBytes] = 0;
  return this.write(buf.slice(offset));
Object.defineProperties(StringDecoder.prototype, {
  lastChar: {
    configurable: true,
    enumerable: true,
    get() {
      return this[kNativeDecoder].subarray(kIncompleteCharactersStart,
                                           kIncompleteCharactersEnd);
    }
  },
  lastNeed: {
    configurable: true,
    enumerable: true,
    get() {
      return this[kNativeDecoder][kMissingBytes];
    }
  },
  lastTotal: {
    configurable: true,
    enumerable: true,
    get() {
      return this[kNativeDecoder][kBufferedBytes] +
             this[kNativeDecoder][kMissingBytes];
    }
exports.StringDecoder = StringDecoder;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
// The sys module was renamed to 'util'. This shim remains to keep old programs
// working. `sys` is deprecated and shouldn't be used.
module.exports = require('util');
process.emitWarning('sys is deprecated. Use util instead.',
                    'DeprecationWarning', 'DEP0025');
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Math } = primordials;
const {
  immediateInfo,
  toggleImmediateRef
} = internalBinding('timers');
const L = require('internal/linkedlist');
const {
  async_id_symbol,
  Timeout,
  decRefCount,
  immediateInfoFields: {
    kCount,
    kRefCount
  },
  kRefed,
  initAsyncResource,
  getTimerDuration,
  timerListMap,
  timerListQueue,
  immediateQueue,
  active,
  unrefActive
} = require('internal/timers');
const {
  promisify: { custom: customPromisify },
  deprecate
} = require('internal/util');
const { ERR_INVALID_CALLBACK } = require('internal/errors').codes;
const debug = require('internal/util/debuglog').debuglog('timer');
const {
  destroyHooksExist,
  // The needed emit*() functions.
  emitDestroy
} = require('internal/async_hooks');
// Remove a timer. Cancels the timeout and resets the relevant timer properties.
function unenroll(item) {
  // Fewer checks may be possible, but these cover everything.
  if (destroyHooksExist() &&
      item[async_id_symbol] !== undefined &&
      !item._destroyed) {
    emitDestroy(item[async_id_symbol]);
    item._destroyed = true;
  L.remove(item);
  // We only delete refed lists because unrefed ones are incredibly likely
  // to come from http and be recreated shortly after.
  // TODO: Long-term this could instead be handled by creating an internal
  // clearTimeout that makes it clear that the list should not be deleted.
  // That function could then be used by http and other similar modules.
  if (item[kRefed]) {
    // Compliment truncation during insert().
    const msecs = Math.trunc(item._idleTimeout);
    const list = timerListMap[msecs];
    if (list !== undefined && L.isEmpty(list)) {
      debug('unenroll: list empty');
      timerListQueue.removeAt(list.priorityQueuePosition);
      delete timerListMap[list.msecs];
    }
    decRefCount();
  item[kRefed] = null;
  // If active is called later, then we want to make sure not to insert again
  item._idleTimeout = -1;
// Make a regular object able to act as a timer by setting some properties.
// This function does not start the timer, see `active()`.
// Using existing objects as timers slightly reduces object overhead.
function enroll(item, msecs) {
  msecs = getTimerDuration(msecs, 'msecs');
  // If this item was already in a list somewhere
  // then we should unenroll it from that
  if (item._idleNext) unenroll(item);
  L.init(item);
  item._idleTimeout = msecs;
 * DOM-style timers
function setTimeout(callback, after, arg1, arg2, arg3) {
  if (typeof callback !== 'function') {
    throw new ERR_INVALID_CALLBACK(callback);
  var i, args;
  switch (arguments.length) {
    // fast cases
    case 1:
    case 2:
      break;
    case 3:
      args = [arg1];
      break;
    case 4:
      args = [arg1, arg2];
      break;
    default:
      args = [arg1, arg2, arg3];
      for (i = 5; i < arguments.length; i++) {
        // Extend array dynamically, makes .apply run much faster in v6.0.0
        args[i - 2] = arguments[i];
      }
      break;
  const timeout = new Timeout(callback, after, args, false);
  active(timeout);
  return timeout;
setTimeout[customPromisify] = function(after, value) {
  const args = value !== undefined ? [value] : value;
  return new Promise((resolve) => {
    active(new Timeout(resolve, after, args, false));
  });
function clearTimeout(timer) {
  if (timer && timer._onTimeout) {
    timer._onTimeout = null;
    unenroll(timer);
function setInterval(callback, repeat, arg1, arg2, arg3) {
  if (typeof callback !== 'function') {
    throw new ERR_INVALID_CALLBACK(callback);
  var i, args;
  switch (arguments.length) {
    // fast cases
    case 1:
    case 2:
      break;
    case 3:
      args = [arg1];
      break;
    case 4:
      args = [arg1, arg2];
      break;
    default:
      args = [arg1, arg2, arg3];
      for (i = 5; i < arguments.length; i++) {
        // Extend array dynamically, makes .apply run much faster in v6.0.0
        args[i - 2] = arguments[i];
      }
      break;
  const timeout = new Timeout(callback, repeat, args, true);
  active(timeout);
  return timeout;
function clearInterval(timer) {
  // clearTimeout and clearInterval can be used to clear timers created from
  // both setTimeout and setInterval, as specified by HTML Living Standard:
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
  clearTimeout(timer);
Timeout.prototype.close = function() {
  clearTimeout(this);
  return this;
const Immediate = class Immediate {
  constructor(callback, args) {
    this._idleNext = null;
    this._idlePrev = null;
    this._onImmediate = callback;
    this._argv = args;
    this._destroyed = false;
    this[kRefed] = false;
    initAsyncResource(this, 'Immediate');
    this.ref();
    immediateInfo[kCount]++;
    immediateQueue.append(this);
  ref() {
    if (this[kRefed] === false) {
      this[kRefed] = true;
      if (immediateInfo[kRefCount]++ === 0)
        toggleImmediateRef(true);
    }
    return this;
  unref() {
    if (this[kRefed] === true) {
      this[kRefed] = false;
      if (--immediateInfo[kRefCount] === 0)
        toggleImmediateRef(false);
    }
    return this;
  hasRef() {
    return !!this[kRefed];
function setImmediate(callback, arg1, arg2, arg3) {
  if (typeof callback !== 'function') {
    throw new ERR_INVALID_CALLBACK(callback);
  var i, args;
  switch (arguments.length) {
    // fast cases
    case 1:
      break;
    case 2:
      args = [arg1];
      break;
    case 3:
      args = [arg1, arg2];
      break;
    default:
      args = [arg1, arg2, arg3];
      for (i = 4; i < arguments.length; i++) {
        // Extend array dynamically, makes .apply run much faster in v6.0.0
        args[i - 1] = arguments[i];
      }
      break;
  return new Immediate(callback, args);
setImmediate[customPromisify] = function(value) {
  return new Promise((resolve) => new Immediate(resolve, [value]));
function clearImmediate(immediate) {
  if (!immediate || immediate._destroyed)
    return;
  immediateInfo[kCount]--;
  immediate._destroyed = true;
  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0)
    toggleImmediateRef(false);
  immediate[kRefed] = null;
  if (destroyHooksExist()) {
    emitDestroy(immediate[async_id_symbol]);
  immediate._onImmediate = null;
  immediateQueue.remove(immediate);
module.exports = {
  setTimeout,
  clearTimeout,
  setImmediate,
  clearImmediate,
  setInterval,
  clearInterval,
  _unrefActive: deprecate(
    unrefActive,
    'timers._unrefActive() is deprecated.' +
    ' Please use timeout.refresh() instead.',
    'DEP0127'),
  active: deprecate(
    active,
    'timers.active() is deprecated. Please use timeout.refresh() instead.',
    'DEP0126'),
  unenroll: deprecate(
    unenroll,
    'timers.unenroll() is deprecated. Please use clearTimeout instead.',
    'DEP0096'),
  enroll: deprecate(
    enroll,
    'timers.enroll() is deprecated. Please use setTimeout instead.',
    'DEP0095')
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const {
  ERR_TLS_CERT_ALTNAME_INVALID,
  ERR_OUT_OF_RANGE
} = require('internal/errors').codes;
const internalUtil = require('internal/util');
const internalTLS = require('internal/tls');
internalUtil.assertCrypto();
const { isArrayBufferView } = require('internal/util/types');
const net = require('net');
const { getOptionValue } = require('internal/options');
const url = require('url');
const { getRootCertificates, getSSLCiphers } = internalBinding('crypto');
const { Buffer } = require('buffer');
const EventEmitter = require('events');
const { URL } = require('internal/url');
const DuplexPair = require('internal/streams/duplexpair');
const { canonicalizeIP } = internalBinding('cares_wrap');
const _tls_common = require('_tls_common');
const _tls_wrap = require('_tls_wrap');
// Allow {CLIENT_RENEG_LIMIT} client-initiated session renegotiations
// every {CLIENT_RENEG_WINDOW} seconds. An error event is emitted if more
// renegotiations are seen. The settings are applied to all remote client
// connections.
exports.CLIENT_RENEG_LIMIT = 3;
exports.CLIENT_RENEG_WINDOW = 600;
exports.DEFAULT_CIPHERS =
    internalBinding('constants').crypto.defaultCipherList;
exports.DEFAULT_ECDH_CURVE = 'auto';
if (getOptionValue('--tls-min-v1.0'))
  exports.DEFAULT_MIN_VERSION = 'TLSv1';
else if (getOptionValue('--tls-min-v1.1'))
  exports.DEFAULT_MIN_VERSION = 'TLSv1.1';
else if (getOptionValue('--tls-min-v1.2'))
  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';
else if (getOptionValue('--tls-min-v1.3'))
  exports.DEFAULT_MIN_VERSION = 'TLSv1.3';
else
  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';
if (getOptionValue('--tls-max-v1.3'))
  exports.DEFAULT_MAX_VERSION = 'TLSv1.3';
else if (getOptionValue('--tls-max-v1.2'))
  exports.DEFAULT_MAX_VERSION = 'TLSv1.2';
else
  exports.DEFAULT_MAX_VERSION = 'TLSv1.3'; // Will depend on node version.
exports.getCiphers = internalUtil.cachedResult(
  () => internalUtil.filterDuplicateStrings(getSSLCiphers(), true)
let rootCertificates;
function cacheRootCertificates() {
  rootCertificates = Object.freeze(getRootCertificates());
Object.defineProperty(exports, 'rootCertificates', {
  configurable: false,
  enumerable: true,
  get: () => {
    // Out-of-line caching to promote inlining the getter.
    if (!rootCertificates) cacheRootCertificates();
    return rootCertificates;
  },
// Convert protocols array into valid OpenSSL protocols list
// ("\x06spdy/2\x08http/1.1\x08http/1.0")
function convertProtocols(protocols) {
  const lens = new Array(protocols.length);
  const buff = Buffer.allocUnsafe(protocols.reduce((p, c, i) => {
    const len = Buffer.byteLength(c);
    if (len > 255) {
      throw new ERR_OUT_OF_RANGE('The byte length of the protocol at index ' +
        `${i} exceeds the maximum length.`, '<= 255', len, true);
    }
    lens[i] = len;
    return p + 1 + len;
  }, 0));
  var offset = 0;
  for (var i = 0, c = protocols.length; i < c; i++) {
    buff[offset++] = lens[i];
    buff.write(protocols[i], offset);
    offset += lens[i];
  return buff;
exports.convertALPNProtocols = function convertALPNProtocols(protocols, out) {
  // If protocols is Array - translate it into buffer
  if (Array.isArray(protocols)) {
    out.ALPNProtocols = convertProtocols(protocols);
  } else if (isArrayBufferView(protocols)) {
    // Copy new buffer not to be modified by user.
    out.ALPNProtocols = Buffer.from(protocols);
function unfqdn(host) {
  return host.replace(/[.]$/, '');
function splitHost(host) {
  // String#toLowerCase() is locale-sensitive so we use
  // a conservative version that only lowercases A-Z.
  const replacer = (c) => String.fromCharCode(32 + c.charCodeAt(0));
  return unfqdn(host).replace(/[A-Z]/g, replacer).split('.');
function check(hostParts, pattern, wildcards) {
  // Empty strings, null, undefined, etc. never match.
  if (!pattern)
    return false;
  const patternParts = splitHost(pattern);
  if (hostParts.length !== patternParts.length)
    return false;
  // Pattern has empty components, e.g. "bad..example.com".
  if (patternParts.includes(''))
    return false;
  // RFC 6125 allows IDNA U-labels (Unicode) in names but we have no
  // good way to detect their encoding or normalize them so we simply
  // reject them.  Control characters and blanks are rejected as well
  // because nothing good can come from accepting them.
  const isBad = (s) => /[^\u0021-\u007F]/u.test(s);
  if (patternParts.some(isBad))
    return false;
  // Check host parts from right to left first.
  for (var i = hostParts.length - 1; i > 0; i -= 1) {
    if (hostParts[i] !== patternParts[i])
      return false;
  const hostSubdomain = hostParts[0];
  const patternSubdomain = patternParts[0];
  const patternSubdomainParts = patternSubdomain.split('*');
  // Short-circuit when the subdomain does not contain a wildcard.
  // RFC 6125 does not allow wildcard substitution for components
  // containing IDNA A-labels (Punycode) so match those verbatim.
  if (patternSubdomainParts.length === 1 || patternSubdomain.includes('xn--'))
    return hostSubdomain === patternSubdomain;
  if (!wildcards)
    return false;
  // More than one wildcard is always wrong.
  if (patternSubdomainParts.length > 2)
    return false;
  // *.tld wildcards are not allowed.
  if (patternParts.length <= 2)
    return false;
  const [prefix, suffix] = patternSubdomainParts;
  if (prefix.length + suffix.length > hostSubdomain.length)
    return false;
  if (!hostSubdomain.startsWith(prefix))
    return false;
  if (!hostSubdomain.endsWith(suffix))
    return false;
  return true;
let urlWarningEmitted = false;
exports.checkServerIdentity = function checkServerIdentity(hostname, cert) {
  const subject = cert.subject;
  const altNames = cert.subjectaltname;
  const dnsNames = [];
  const uriNames = [];
  const ips = [];
  hostname = '' + hostname;
  if (altNames) {
    for (const name of altNames.split(', ')) {
      if (name.startsWith('DNS:')) {
        dnsNames.push(name.slice(4));
      } else if (name.startsWith('URI:')) {
        let uri;
        try {
          uri = new URL(name.slice(4));
        } catch {
          uri = url.parse(name.slice(4));
          if (!urlWarningEmitted && !process.noDeprecation) {
            urlWarningEmitted = true;
            process.emitWarning(
              `The URI ${name.slice(4)} found in cert.subjectaltname ` +
              'is not a valid URI, and is supported in the tls module ' +
              'solely for compatibility.',
              'DeprecationWarning', 'DEP0109');
          }
        }
        uriNames.push(uri.hostname);  // TODO(bnoordhuis) Also use scheme.
      } else if (name.startsWith('IP Address:')) {
        ips.push(canonicalizeIP(name.slice(11)));
      }
    }
  let valid = false;
  let reason = 'Unknown reason';
  if (net.isIP(hostname)) {
    valid = ips.includes(canonicalizeIP(hostname));
    if (!valid)
      reason = `IP: ${hostname} is not in the cert's list: ${ips.join(', ')}`;
    // TODO(bnoordhuis) Also check URI SANs that are IP addresses.
  } else if (subject) {
    hostname = unfqdn(hostname);  // Remove trailing dot for error messages.
    const hostParts = splitHost(hostname);
    const wildcard = (pattern) => check(hostParts, pattern, true);
    const noWildcard = (pattern) => check(hostParts, pattern, false);
    // Match against Common Name only if no supported identifiers are present.
    if (dnsNames.length === 0 && ips.length === 0 && uriNames.length === 0) {
      const cn = subject.CN;
      if (Array.isArray(cn))
        valid = cn.some(wildcard);
      else if (cn)
        valid = wildcard(cn);
      if (!valid)
        reason = `Host: ${hostname}. is not cert's CN: ${cn}`;
    } else {
      valid = dnsNames.some(wildcard) || uriNames.some(noWildcard);
      if (!valid)
        reason =
          `Host: ${hostname}. is not in the cert's altnames: ${altNames}`;
    }
  } else {
    reason = 'Cert is empty';
  if (!valid) {
    return new ERR_TLS_CERT_ALTNAME_INVALID(reason, hostname, cert);
class SecurePair extends EventEmitter {
  constructor(secureContext = exports.createSecureContext(),
              isServer = false,
              requestCert = !isServer,
              rejectUnauthorized = false,
              options = {}) {
    super();
    const { socket1, socket2 } = new DuplexPair();
    this.server = options.server;
    this.credentials = secureContext;
    this.encrypted = socket1;
    this.cleartext = new exports.TLSSocket(socket2, {
      secureContext,
      isServer,
      requestCert,
      rejectUnauthorized,
      ...options
    });
    this.cleartext.once('secure', () => this.emit('secure'));
  destroy() {
    this.cleartext.destroy();
    this.encrypted.destroy();
exports.parseCertString = internalUtil.deprecate(
  internalTLS.parseCertString,
  'tls.parseCertString() is deprecated. ' +
  'Please use querystring.parse() instead.',
  'DEP0076');
exports.createSecureContext = _tls_common.createSecureContext;
exports.SecureContext = _tls_common.SecureContext;
exports.TLSSocket = _tls_wrap.TLSSocket;
exports.Server = _tls_wrap.Server;
exports.createServer = _tls_wrap.createServer;
exports.connect = _tls_wrap.connect;
exports.createSecurePair = internalUtil.deprecate(
  function createSecurePair(...args) {
    return new SecurePair(...args);
  },
  'tls.createSecurePair() is deprecated. Please use ' +
  'tls.TLSSocket instead.', 'DEP0064');
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const { parseCertString } = require('internal/tls');
const { isArrayBufferView } = require('internal/util/types');
const tls = require('tls');
const {
  ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_OPT_VALUE,
  ERR_TLS_INVALID_PROTOCOL_VERSION,
  ERR_TLS_PROTOCOL_VERSION_CONFLICT,
} = require('internal/errors').codes;
const {
  SSL_OP_CIPHER_SERVER_PREFERENCE,
  TLS1_VERSION,
  TLS1_1_VERSION,
  TLS1_2_VERSION,
  TLS1_3_VERSION,
} = internalBinding('constants').crypto;
// Lazily loaded from internal/crypto/util.
let toBuf = null;
function toV(which, v, def) {
  if (v == null) v = def;
  if (v === 'TLSv1') return TLS1_VERSION;
  if (v === 'TLSv1.1') return TLS1_1_VERSION;
  if (v === 'TLSv1.2') return TLS1_2_VERSION;
  if (v === 'TLSv1.3') return TLS1_3_VERSION;
  throw new ERR_TLS_INVALID_PROTOCOL_VERSION(v, which);
const { SecureContext: NativeSecureContext } = internalBinding('crypto');
function SecureContext(secureProtocol, secureOptions, minVersion, maxVersion) {
  if (!(this instanceof SecureContext)) {
    return new SecureContext(secureProtocol, secureOptions, minVersion,
                             maxVersion);
  if (secureProtocol) {
    if (minVersion != null)
      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(minVersion, secureProtocol);
    if (maxVersion != null)
      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(maxVersion, secureProtocol);
  this.context = new NativeSecureContext();
  this.context.init(secureProtocol,
                    toV('minimum', minVersion, tls.DEFAULT_MIN_VERSION),
                    toV('maximum', maxVersion, tls.DEFAULT_MAX_VERSION));
  if (secureOptions) this.context.setOptions(secureOptions);
function validateKeyOrCertOption(name, value) {
  if (typeof value !== 'string' && !isArrayBufferView(value)) {
    throw new ERR_INVALID_ARG_TYPE(
      `options.${name}`,
      ['string', 'Buffer', 'TypedArray', 'DataView'],
      value
    );
exports.SecureContext = SecureContext;
exports.createSecureContext = function createSecureContext(options) {
  if (!options) options = {};
  var secureOptions = options.secureOptions;
  if (options.honorCipherOrder)
    secureOptions |= SSL_OP_CIPHER_SERVER_PREFERENCE;
  const c = new SecureContext(options.secureProtocol, secureOptions,
                              options.minVersion, options.maxVersion);
  var i;
  var val;
  // NOTE: It's important to add CA before the cert to be able to load
  // cert's issuer in C++ code.
  const { ca } = options;
  if (ca) {
    if (Array.isArray(ca)) {
      for (i = 0; i < ca.length; ++i) {
        val = ca[i];
        validateKeyOrCertOption('ca', val);
        c.context.addCACert(val);
      }
    } else {
      validateKeyOrCertOption('ca', ca);
      c.context.addCACert(ca);
    }
  } else {
    c.context.addRootCerts();
  const { cert } = options;
  if (cert) {
    if (Array.isArray(cert)) {
      for (i = 0; i < cert.length; ++i) {
        val = cert[i];
        validateKeyOrCertOption('cert', val);
        c.context.setCert(val);
      }
    } else {
      validateKeyOrCertOption('cert', cert);
      c.context.setCert(cert);
    }
  // NOTE: It is important to set the key after the cert.
  // `ssl_set_pkey` returns `0` when the key does not match the cert, but
  // `ssl_set_cert` returns `1` and nullifies the key in the SSL structure
  // which leads to the crash later on.
  const key = options.key;
  const passphrase = options.passphrase;
  if (key) {
    if (Array.isArray(key)) {
      for (i = 0; i < key.length; ++i) {
        val = key[i];
        // eslint-disable-next-line eqeqeq
        const pem = (val != undefined && val.pem !== undefined ? val.pem : val);
        validateKeyOrCertOption('key', pem);
        c.context.setKey(pem, val.passphrase || passphrase);
      }
    } else {
      validateKeyOrCertOption('key', key);
      c.context.setKey(key, passphrase);
    }
  if (options.ciphers && typeof options.ciphers !== 'string') {
    throw new ERR_INVALID_ARG_TYPE(
      'options.ciphers', 'string', options.ciphers);
  // Work around an OpenSSL API quirk. cipherList is for TLSv1.2 and below,
  // cipherSuites is for TLSv1.3 (and presumably any later versions). TLSv1.3
  // cipher suites all have a standard name format beginning with TLS_, so split
  // the ciphers and pass them to the appropriate API.
  const ciphers = (options.ciphers || tls.DEFAULT_CIPHERS).split(':');
  const cipherList = ciphers.filter((_) => !_.match(/^TLS_/) &&
                                    _.length > 0).join(':');
  const cipherSuites = ciphers.filter((_) => _.match(/^TLS_/)).join(':');
  if (cipherSuites === '' && cipherList === '') {
    // Specifying empty cipher suites for both TLS1.2 and TLS1.3 is invalid, its
    // not possible to handshake with no suites.
    throw new ERR_INVALID_OPT_VALUE('ciphers', ciphers);
  c.context.setCipherSuites(cipherSuites);
  c.context.setCiphers(cipherList);
  if (cipherSuites === '' && c.context.getMaxProto() > TLS1_2_VERSION &&
      c.context.getMinProto() < TLS1_3_VERSION)
    c.context.setMaxProto(TLS1_2_VERSION);
  if (cipherList === '' && c.context.getMinProto() < TLS1_3_VERSION &&
      c.context.getMaxProto() > TLS1_2_VERSION)
    c.context.setMinProto(TLS1_3_VERSION);
  if (options.ecdhCurve === undefined)
    c.context.setECDHCurve(tls.DEFAULT_ECDH_CURVE);
  else if (options.ecdhCurve)
    c.context.setECDHCurve(options.ecdhCurve);
  if (options.dhparam) {
    const warning = c.context.setDHParam(options.dhparam);
    if (warning)
      process.emitWarning(warning, 'SecurityWarning');
  if (options.crl) {
    if (Array.isArray(options.crl)) {
      for (i = 0; i < options.crl.length; i++) {
        c.context.addCRL(options.crl[i]);
      }
    } else {
      c.context.addCRL(options.crl);
    }
  if (options.sessionIdContext) {
    c.context.setSessionIdContext(options.sessionIdContext);
  if (options.pfx) {
    if (!toBuf)
      toBuf = require('internal/crypto/util').toBuf;
    if (Array.isArray(options.pfx)) {
      for (i = 0; i < options.pfx.length; i++) {
        const pfx = options.pfx[i];
        const raw = pfx.buf ? pfx.buf : pfx;
        const buf = toBuf(raw);
        const passphrase = pfx.passphrase || options.passphrase;
        if (passphrase) {
          c.context.loadPKCS12(buf, toBuf(passphrase));
        } else {
          c.context.loadPKCS12(buf);
        }
      }
    } else {
      const buf = toBuf(options.pfx);
      const passphrase = options.passphrase;
      if (passphrase) {
        c.context.loadPKCS12(buf, toBuf(passphrase));
      } else {
        c.context.loadPKCS12(buf);
      }
    }
  // Do not keep read/write buffers in free list for OpenSSL < 1.1.0. (For
  // OpenSSL 1.1.0, buffers are malloced and freed without the use of a
  // freelist.)
  if (options.singleUse) {
    c.singleUse = true;
    c.context.setFreeListLength(0);
  if (typeof options.clientCertEngine === 'string') {
    if (c.context.setClientCertEngine)
      c.context.setClientCertEngine(options.clientCertEngine);
    else
      throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();
  } else if (options.clientCertEngine != null) {
    throw new ERR_INVALID_ARG_TYPE('options.clientCertEngine',
                                   ['string', 'null', 'undefined'],
                                   options.clientCertEngine);
  return c;
// Translate some fields from the handle's C-friendly format into more idiomatic
// javascript object representations before passing them back to the user.  Can
// be used on any cert object, but changing the name would be semver-major.
exports.translatePeerCertificate = function translatePeerCertificate(c) {
  if (!c)
    return null;
  if (c.issuer != null) c.issuer = parseCertString(c.issuer);
  if (c.issuerCertificate != null && c.issuerCertificate !== c) {
    c.issuerCertificate = translatePeerCertificate(c.issuerCertificate);
  if (c.subject != null) c.subject = parseCertString(c.subject);
  if (c.infoAccess != null) {
    var info = c.infoAccess;
    c.infoAccess = Object.create(null);
    // XXX: More key validation?
    info.replace(/([^\n:]*):([^\n]*)(?:\n|$)/g, (all, key, val) => {
      if (key in c.infoAccess)
        c.infoAccess[key].push(val);
      else
        c.infoAccess[key] = [val];
    });
  return c;
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const {
  assertCrypto,
  deprecate
} = require('internal/util');
assertCrypto();
const { setImmediate } = require('timers');
const assert = require('internal/assert');
const crypto = require('crypto');
const net = require('net');
const tls = require('tls');
const common = require('_tls_common');
const JSStreamSocket = require('internal/js_stream_socket');
const { Buffer } = require('buffer');
const debug = require('internal/util/debuglog').debuglog('tls');
const { TCP, constants: TCPConstants } = internalBinding('tcp_wrap');
const tls_wrap = internalBinding('tls_wrap');
const { Pipe, constants: PipeConstants } = internalBinding('pipe_wrap');
const { owner_symbol } = require('internal/async_hooks').symbols;
const { SecureContext: NativeSecureContext } = internalBinding('crypto');
const { connResetException, codes } = require('internal/errors');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_CALLBACK,
  ERR_MULTIPLE_CALLBACK,
  ERR_SOCKET_CLOSED,
  ERR_TLS_DH_PARAM_SIZE,
  ERR_TLS_HANDSHAKE_TIMEOUT,
  ERR_TLS_RENEGOTIATION_DISABLED,
  ERR_TLS_REQUIRED_SERVER_NAME,
  ERR_TLS_SESSION_ATTACK,
  ERR_TLS_SNI_FROM_SERVER
} = codes;
const { getOptionValue } = require('internal/options');
const { validateString } = require('internal/validators');
const traceTls = getOptionValue('--trace-tls');
const kConnectOptions = Symbol('connect-options');
const kDisableRenegotiation = Symbol('disable-renegotiation');
const kErrorEmitted = Symbol('error-emitted');
const kHandshakeTimeout = Symbol('handshake-timeout');
const kRes = Symbol('res');
const kSNICallback = Symbol('snicallback');
const kEnableTrace = Symbol('enableTrace');
const noop = () => {};
let ipServernameWarned = false;
let tlsTracingWarned = false;
// Server side times how long a handshake is taking to protect against slow
// handshakes being used for DoS.
function onhandshakestart(now) {
  debug('server onhandshakestart');
  const { lastHandshakeTime } = this;
  assert(now >= lastHandshakeTime,
         `now (${now}) < lastHandshakeTime (${lastHandshakeTime})`);
  this.lastHandshakeTime = now;
  // If this is the first handshake we can skip the rest of the checks.
  if (lastHandshakeTime === 0)
    return;
  if ((now - lastHandshakeTime) >= tls.CLIENT_RENEG_WINDOW * 1000)
    this.handshakes = 1;
  else
    this.handshakes++;
  const owner = this[owner_symbol];
  assert(owner._tlsOptions.isServer);
  if (this.handshakes > tls.CLIENT_RENEG_LIMIT) {
    owner._emitTLSError(new ERR_TLS_SESSION_ATTACK());
    return;
  if (owner[kDisableRenegotiation])
    owner._emitTLSError(new ERR_TLS_RENEGOTIATION_DISABLED());
function onhandshakedone() {
  debug('server onhandshakedone');
  const owner = this[owner_symbol];
  assert(owner._tlsOptions.isServer);
  // `newSession` callback wasn't called yet
  if (owner._newSessionPending) {
    owner._securePending = true;
    return;
  owner._finishInit();
function loadSession(hello) {
  debug('server onclienthello',
        'sessionid.len', hello.sessionId.length,
        'ticket?', hello.tlsTicket
  );
  const owner = this[owner_symbol];
  var once = false;
  function onSession(err, session) {
    debug('server resumeSession callback(err %j, sess? %s)', err, !!session);
    if (once)
      return owner.destroy(new ERR_MULTIPLE_CALLBACK());
    once = true;
    if (err)
      return owner.destroy(err);
    if (owner._handle === null)
      return owner.destroy(new ERR_SOCKET_CLOSED());
    owner._handle.loadSession(session);
    // Session is loaded. End the parser to allow handshaking to continue.
    owner._handle.endParser();
  if (hello.sessionId.length <= 0 ||
      hello.tlsTicket ||
      owner.server &&
      !owner.server.emit('resumeSession', hello.sessionId, onSession)) {
    // Sessions without identifiers can't be resumed.
    // Sessions with tickets can be resumed directly from the ticket, no server
    // session storage is necessary.
    // Without a call to a resumeSession listener, a session will never be
    // loaded, so end the parser to allow handshaking to continue.
    owner._handle.endParser();
function loadSNI(info) {
  const owner = this[owner_symbol];
  const servername = info.servername;
  if (!servername || !owner._SNICallback)
    return requestOCSP(owner, info);
  let once = false;
  owner._SNICallback(servername, (err, context) => {
    if (once)
      return owner.destroy(new ERR_MULTIPLE_CALLBACK());
    once = true;
    if (err)
      return owner.destroy(err);
    if (owner._handle === null)
      return owner.destroy(new ERR_SOCKET_CLOSED());
    // TODO(indutny): eventually disallow raw `SecureContext`
    if (context)
      owner._handle.sni_context = context.context || context;
    requestOCSP(owner, info);
  });
function requestOCSP(socket, info) {
  if (!info.OCSPRequest || !socket.server)
    return requestOCSPDone(socket);
  let ctx = socket._handle.sni_context;
  if (!ctx) {
    ctx = socket.server._sharedCreds;
    // TLS socket is using a `net.Server` instead of a tls.TLSServer.
    // Some TLS properties like `server._sharedCreds` will not be present
    if (!ctx)
      return requestOCSPDone(socket);
  // TODO(indutny): eventually disallow raw `SecureContext`
  if (ctx.context)
    ctx = ctx.context;
  if (socket.server.listenerCount('OCSPRequest') === 0) {
    return requestOCSPDone(socket);
  let once = false;
  const onOCSP = (err, response) => {
    debug('server OCSPRequest done', 'handle?', !!socket._handle, 'once?', once,
          'response?', !!response, 'err?', err);
    if (once)
      return socket.destroy(new ERR_MULTIPLE_CALLBACK());
    once = true;
    if (err)
      return socket.destroy(err);
    if (socket._handle === null)
      return socket.destroy(new ERR_SOCKET_CLOSED());
    if (response)
      socket._handle.setOCSPResponse(response);
    requestOCSPDone(socket);
  };
  debug('server oncertcb emit OCSPRequest');
  socket.server.emit('OCSPRequest',
                     ctx.getCertificate(),
                     ctx.getIssuer(),
                     onOCSP);
function requestOCSPDone(socket) {
  debug('server certcb done');
  try {
    socket._handle.certCbDone();
  } catch (e) {
    debug('server certcb done errored', e);
    socket.destroy(e);
function onnewsessionclient(sessionId, session) {
  debug('client emit session');
  const owner = this[owner_symbol];
  owner.emit('session', session);
function onnewsession(sessionId, session) {
  debug('onnewsession');
  const owner = this[owner_symbol];
  // TODO(@sam-github) no server to emit the event on, but handshake won't
  // continue unless newSessionDone() is called, should it be, or is that
  // situation unreachable, or only occurring during shutdown?
  if (!owner.server)
    return;
  var once = false;
  const done = () => {
    debug('onnewsession done');
    if (once)
      return;
    once = true;
    if (owner._handle === null)
      return owner.destroy(new ERR_SOCKET_CLOSED());
    this.newSessionDone();
    owner._newSessionPending = false;
    if (owner._securePending)
      owner._finishInit();
    owner._securePending = false;
  };
  owner._newSessionPending = true;
  if (!owner.server.emit('newSession', sessionId, session, done))
    done();
function onkeylogclient(line) {
  debug('client onkeylog');
  this[owner_symbol].emit('keylog', line);
function onkeylog(line) {
  debug('server onkeylog');
  const owner = this[owner_symbol];
  if (owner.server)
    owner.server.emit('keylog', line, owner);
function onocspresponse(resp) {
  debug('client onocspresponse');
  this[owner_symbol].emit('OCSPResponse', resp);
function onerror(err) {
  const owner = this[owner_symbol];
  debug('%s onerror %s had? %j',
        owner._tlsOptions.isServer ? 'server' : 'client', err,
        owner._hadError);
  if (owner._hadError)
    return;
  owner._hadError = true;
  // Destroy socket if error happened before handshake's finish
  if (!owner._secureEstablished) {
    // When handshake fails control is not yet released,
    // so self._tlsError will return null instead of actual error
    owner.destroy(err);
  } else if (owner._tlsOptions.isServer &&
             owner._rejectUnauthorized &&
             /peer did not return a certificate/.test(err.message)) {
    // Ignore server's authorization errors
    owner.destroy();
  } else {
    // Emit error
    owner._emitTLSError(err);
// Used by both client and server TLSSockets to start data flowing from _handle,
// read(0) causes a StreamBase::ReadStart, via Socket._read.
function initRead(tlsSocket, socket) {
  debug('%s initRead',
        tlsSocket._tlsOptions.isServer ? 'server' : 'client',
        'handle?', !!tlsSocket._handle,
        'buffered?', !!socket && socket.readableLength
  );
  // If we were destroyed already don't bother reading
  if (!tlsSocket._handle)
    return;
  // Socket already has some buffered data - emulate receiving it
  if (socket && socket.readableLength) {
    var buf;
    while ((buf = socket.read()) !== null)
      tlsSocket._handle.receive(buf);
  tlsSocket.read(0);
 * Provides a wrap of socket stream to do encrypted communication.
function TLSSocket(socket, opts) {
  const tlsOptions = { ...opts };
  let enableTrace = tlsOptions.enableTrace;
  if (enableTrace == null) {
    enableTrace = traceTls;
    if (enableTrace && !tlsTracingWarned) {
      tlsTracingWarned = true;
      process.emitWarning('Enabling --trace-tls can expose sensitive data in ' +
                          'the resulting log.');
    }
  } else if (typeof enableTrace !== 'boolean') {
    throw new ERR_INVALID_ARG_TYPE(
      'options.enableTrace', 'boolean', enableTrace);
  if (tlsOptions.ALPNProtocols)
    tls.convertALPNProtocols(tlsOptions.ALPNProtocols, tlsOptions);
  this._tlsOptions = tlsOptions;
  this._secureEstablished = false;
  this._securePending = false;
  this._newSessionPending = false;
  this._controlReleased = false;
  this._SNICallback = null;
  this.servername = null;
  this.alpnProtocol = null;
  this.authorized = false;
  this.authorizationError = null;
  this[kRes] = null;
  var wrap;
  if ((socket instanceof net.Socket && socket._handle) || !socket) {
    // 1. connected socket
    // 2. no socket, one will be created with net.Socket().connect
    wrap = socket;
  } else {
    // 3. socket has no handle so it is js not c++
    // 4. unconnected sockets are wrapped
    // TLS expects to interact from C++ with a net.Socket that has a C++ stream
    // handle, but a JS stream doesn't have one. Wrap it up to make it look like
    // a socket.
    wrap = new JSStreamSocket(socket);
    wrap.once('close', () => this.destroy());
  // Just a documented property to make secure sockets
  // distinguishable from regular ones.
  this.encrypted = true;
  net.Socket.call(this, {
    handle: this._wrapHandle(wrap),
    allowHalfOpen: socket && socket.allowHalfOpen,
    readable: false,
    writable: false
  });
  // Proxy for API compatibility
  this.ssl = this._handle;  // C++ TLSWrap object
  this.on('error', this._tlsError);
  this._init(socket, wrap);
  // Make sure to setup all required properties like: `connecting` before
  // starting the flow of the data
  this.readable = true;
  this.writable = true;
  if (enableTrace && this._handle)
    this._handle.enableTrace();
  // Read on next tick so the caller has a chance to setup listeners
  process.nextTick(initRead, this, socket);
Object.setPrototypeOf(TLSSocket.prototype, net.Socket.prototype);
Object.setPrototypeOf(TLSSocket, net.Socket);
exports.TLSSocket = TLSSocket;
const proxiedMethods = [
  'ref', 'unref', 'open', 'bind', 'listen', 'connect', 'bind6',
  'connect6', 'getsockname', 'getpeername', 'setNoDelay', 'setKeepAlive',
  'setSimultaneousAccepts', 'setBlocking',
  // PipeWrap
  'setPendingInstances',
// Proxy HandleWrap, PipeWrap and TCPWrap methods
function makeMethodProxy(name) {
  return function methodProxy(...args) {
    if (this._parent[name])
      return this._parent[name].apply(this._parent, args);
  };
for (var n = 0; n < proxiedMethods.length; n++) {
  tls_wrap.TLSWrap.prototype[proxiedMethods[n]] =
    makeMethodProxy(proxiedMethods[n]);
tls_wrap.TLSWrap.prototype.close = function close(cb) {
  let ssl;
  if (this[owner_symbol]) {
    ssl = this[owner_symbol].ssl;
    this[owner_symbol].ssl = null;
  // Invoke `destroySSL` on close to clean up possibly pending write requests
  // that may self-reference TLSWrap, leading to leak
  const done = () => {
    if (ssl) {
      ssl.destroySSL();
      if (ssl._secureContext.singleUse) {
        ssl._secureContext.context.close();
        ssl._secureContext.context = null;
      }
    }
    if (cb)
      cb();
  };
  if (this._parentWrap && this._parentWrap._handle === this._parent) {
    this._parentWrap.once('close', done);
    return this._parentWrap.destroy();
  return this._parent.close(done);
TLSSocket.prototype.disableRenegotiation = function disableRenegotiation() {
  this[kDisableRenegotiation] = true;
TLSSocket.prototype._wrapHandle = function(wrap) {
  var handle;
  if (wrap)
    handle = wrap._handle;
  const options = this._tlsOptions;
  if (!handle) {
    handle = options.pipe ?
      new Pipe(PipeConstants.SOCKET) :
      new TCP(TCPConstants.SOCKET);
    handle[owner_symbol] = this;
  // Wrap socket's handle
  const context = options.secureContext ||
                  options.credentials ||
                  tls.createSecureContext(options);
  assert(handle.isStreamBase, 'handle must be a StreamBase');
  assert(context.context instanceof NativeSecureContext,
         'context.context must be a NativeSecureContext');
  const res = tls_wrap.wrap(handle, context.context, !!options.isServer);
  res._parent = handle;  // C++ "wrap" object: TCPWrap, JSStream, ...
  res._parentWrap = wrap;  // JS object: net.Socket, JSStreamSocket, ...
  res._secureContext = context;
  res.reading = handle.reading;
  this[kRes] = res;
  defineHandleReading(this, handle);
  this.on('close', onSocketCloseDestroySSL);
  return res;
// This eliminates a cyclic reference to TLSWrap
// Ref: https://github.com/nodejs/node/commit/f7620fb96d339f704932f9bb9a0dceb9952df2d4
function defineHandleReading(socket, handle) {
  Object.defineProperty(handle, 'reading', {
    get: () => {
      return socket[kRes].reading;
    },
    set: (value) => {
      socket[kRes].reading = value;
    }
  });
function onSocketCloseDestroySSL() {
  // Make sure we are not doing it on OpenSSL's stack
  setImmediate(destroySSL, this);
  this[kRes] = null;
function destroySSL(self) {
  self._destroySSL();
TLSSocket.prototype._destroySSL = function _destroySSL() {
  if (!this.ssl) return;
  this.ssl.destroySSL();
  if (this.ssl._secureContext.singleUse) {
    this.ssl._secureContext.context.close();
    this.ssl._secureContext.context = null;
  this.ssl = null;
// Constructor guts, arbitrarily factored out.
TLSSocket.prototype._init = function(socket, wrap) {
  const options = this._tlsOptions;
  const ssl = this._handle;
  this.server = options.server;
  debug('%s _init',
        options.isServer ? 'server' : 'client',
        'handle?', !!ssl
  );
  // Clients (!isServer) always request a cert, servers request a client cert
  // only on explicit configuration.
  const requestCert = !!options.requestCert || !options.isServer;
  const rejectUnauthorized = !!options.rejectUnauthorized;
  this._requestCert = requestCert;
  this._rejectUnauthorized = rejectUnauthorized;
  if (requestCert || rejectUnauthorized)
    ssl.setVerifyMode(requestCert, rejectUnauthorized);
  if (options.isServer) {
    ssl.onhandshakestart = onhandshakestart;
    ssl.onhandshakedone = onhandshakedone;
    ssl.onclienthello = loadSession;
    ssl.oncertcb = loadSNI;
    ssl.onnewsession = onnewsession;
    ssl.onkeylog = onkeylog;
    ssl.lastHandshakeTime = 0;
    ssl.handshakes = 0;
    if (this.server) {
      if (this.server.listenerCount('resumeSession') > 0 ||
          this.server.listenerCount('newSession') > 0) {
        // Also starts the client hello parser as a side effect.
        ssl.enableSessionCallbacks();
      }
      if (this.server.listenerCount('keylog') > 0)
        ssl.enableKeylogCallback();
      if (this.server.listenerCount('OCSPRequest') > 0)
        ssl.enableCertCb();
    }
  } else {
    ssl.onhandshakestart = noop;
    ssl.onhandshakedone = () => {
      debug('client onhandshakedone');
      this._finishInit();
    };
    ssl.onocspresponse = onocspresponse;
    if (options.session)
      ssl.setSession(options.session);
    ssl.onnewsession = onnewsessionclient;
    // Only call .onnewsession if there is a session listener.
    this.on('newListener', newListener);
    function newListener(event) {
      if (event !== 'session')
        return;
      ssl.enableSessionCallbacks();
      // Remove this listener since it's no longer needed.
      this.removeListener('newListener', newListener);
    }
    ssl.onkeylog = onkeylogclient;
    // Only call .onkeylog if there is a keylog listener.
    this.on('newListener', keylogNewListener);
    function keylogNewListener(event) {
      if (event !== 'keylog')
        return;
      ssl.enableKeylogCallback();
      // Remove this listener since it's no longer needed.
      this.removeListener('newListener', keylogNewListener);
    }
  ssl.onerror = onerror;
  // If custom SNICallback was given, or if
  // there're SNI contexts to perform match against -
  // set `.onsniselect` callback.
  if (options.isServer &&
      options.SNICallback &&
      (options.SNICallback !== SNICallback ||
       (options.server && options.server._contexts.length))) {
    assert(typeof options.SNICallback === 'function');
    this._SNICallback = options.SNICallback;
    ssl.enableCertCb();
  if (options.ALPNProtocols) {
    // Keep reference in secureContext not to be GC-ed
    ssl._secureContext.alpnBuffer = options.ALPNProtocols;
    ssl.setALPNProtocols(ssl._secureContext.alpnBuffer);
  if (options.handshakeTimeout > 0)
    this.setTimeout(options.handshakeTimeout, this._handleTimeout);
  if (socket instanceof net.Socket) {
    this._parent = socket;
    // To prevent assertion in afterConnect() and properly kick off readStart
    this.connecting = socket.connecting || !socket._handle;
    socket.once('connect', () => {
      this.connecting = false;
      this.emit('connect');
    });
  // Assume `tls.connect()`
  if (wrap) {
    wrap.on('error', (err) => this._emitTLSError(err));
  } else {
    assert(!socket);
    this.connecting = true;
TLSSocket.prototype.renegotiate = function(options, callback) {
  if (options === null || typeof options !== 'object')
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  if (callback !== undefined && typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  debug('%s renegotiate()',
        this._tlsOptions.isServer ? 'server' : 'client',
        'destroyed?', this.destroyed
  );
  if (this.destroyed)
    return;
  let requestCert = !!this._requestCert;
  let rejectUnauthorized = !!this._rejectUnauthorized;
  if (options.requestCert !== undefined)
    requestCert = !!options.requestCert;
  if (options.rejectUnauthorized !== undefined)
    rejectUnauthorized = !!options.rejectUnauthorized;
  if (requestCert !== this._requestCert ||
      rejectUnauthorized !== this._rejectUnauthorized) {
    this._handle.setVerifyMode(requestCert, rejectUnauthorized);
    this._requestCert = requestCert;
    this._rejectUnauthorized = rejectUnauthorized;
  // Ensure that we'll cycle through internal openssl's state
  this.write('');
  try {
    this._handle.renegotiate();
  } catch (err) {
    if (callback) {
      process.nextTick(callback, err);
    }
    return false;
  // Ensure that we'll cycle through internal openssl's state
  this.write('');
  if (callback) {
    this.once('secure', () => callback(null));
  return true;
TLSSocket.prototype.setMaxSendFragment = function setMaxSendFragment(size) {
  return this._handle.setMaxSendFragment(size) === 1;
TLSSocket.prototype._handleTimeout = function() {
  this._emitTLSError(new ERR_TLS_HANDSHAKE_TIMEOUT());
TLSSocket.prototype._emitTLSError = function(err) {
  const e = this._tlsError(err);
  if (e)
    this.emit('error', e);
TLSSocket.prototype._tlsError = function(err) {
  this.emit('_tlsError', err);
  if (this._controlReleased)
    return err;
  return null;
TLSSocket.prototype._releaseControl = function() {
  if (this._controlReleased)
    return false;
  this._controlReleased = true;
  this.removeListener('error', this._tlsError);
  return true;
TLSSocket.prototype._finishInit = function() {
  // Guard against getting onhandshakedone() after .destroy().
  // * 1.2: If destroy() during onocspresponse(), then write of next handshake
  // record fails, the handshake done info callbacks does not occur, and the
  // socket closes.
  // * 1.3: The OCSP response comes in the same record that finishes handshake,
  // so even after .destroy(), the handshake done info callback occurs
  // immediately after onocspresponse(). Ignore it.
  if (!this._handle)
    return;
  this.alpnProtocol = this._handle.getALPNNegotiatedProtocol();
  // The servername could be set by TLSWrap::SelectSNIContextCallback().
  if (this.servername === null) {
    this.servername = this._handle.getServername();
  debug('%s _finishInit',
        this._tlsOptions.isServer ? 'server' : 'client',
        'handle?', !!this._handle,
        'alpn', this.alpnProtocol,
        'servername', this.servername);
  this._secureEstablished = true;
  if (this._tlsOptions.handshakeTimeout > 0)
    this.setTimeout(0, this._handleTimeout);
  this.emit('secure');
TLSSocket.prototype._start = function() {
  debug('%s _start',
        this._tlsOptions.isServer ? 'server' : 'client',
        'handle?', !!this._handle,
        'connecting?', this.connecting,
        'requestOCSP?', !!this._tlsOptions.requestOCSP,
  );
  if (this.connecting) {
    this.once('connect', this._start);
    return;
  // Socket was destroyed before the connection was established
  if (!this._handle)
    return;
  if (this._tlsOptions.requestOCSP)
    this._handle.requestOCSP();
  this._handle.start();
TLSSocket.prototype.setServername = function(name) {
  validateString(name, 'name');
  if (this._tlsOptions.isServer) {
    throw new ERR_TLS_SNI_FROM_SERVER();
  this._handle.setServername(name);
TLSSocket.prototype.setSession = function(session) {
  if (typeof session === 'string')
    session = Buffer.from(session, 'latin1');
  this._handle.setSession(session);
TLSSocket.prototype.getPeerCertificate = function(detailed) {
  if (this._handle) {
    return common.translatePeerCertificate(
      this._handle.getPeerCertificate(detailed)) || {};
  return null;
TLSSocket.prototype.getCertificate = function() {
  if (this._handle) {
    // It's not a peer cert, but the formatting is identical.
    return common.translatePeerCertificate(
      this._handle.getCertificate()) || {};
  return null;
// Proxy TLSSocket handle methods
function makeSocketMethodProxy(name) {
  return function socketMethodProxy(...args) {
    if (this._handle)
      return this._handle[name].apply(this._handle, args);
    return null;
  };
  'getCipher',
  'getEphemeralKeyInfo',
  'getFinished',
  'getPeerFinished',
  'getProtocol',
  'getSession',
  'getTLSTicket',
  'isSessionReused',
  'enableTrace',
].forEach((method) => {
  TLSSocket.prototype[method] = makeSocketMethodProxy(method);
// TODO: support anonymous (nocert) and PSK
function onServerSocketSecure() {
  if (this._requestCert) {
    const verifyError = this._handle.verifyError();
    if (verifyError) {
      this.authorizationError = verifyError.code;
      if (this._rejectUnauthorized)
        this.destroy();
    } else {
      this.authorized = true;
    }
  if (!this.destroyed && this._releaseControl()) {
    debug('server emit secureConnection');
    this._tlsOptions.server.emit('secureConnection', this);
function onSocketTLSError(err) {
  if (!this._controlReleased && !this[kErrorEmitted]) {
    this[kErrorEmitted] = true;
    debug('server emit tlsClientError:', err);
    this._tlsOptions.server.emit('tlsClientError', err, this);
function onSocketClose(err) {
  // Closed because of error - no need to emit it twice
  if (err)
    return;
  // Emit ECONNRESET
  if (!this._controlReleased && !this[kErrorEmitted]) {
    this[kErrorEmitted] = true;
    const connReset = connResetException('socket hang up');
    this._tlsOptions.server.emit('tlsClientError', connReset, this);
function tlsConnectionListener(rawSocket) {
  debug('net.Server.on(connection): new TLSSocket');
  const socket = new TLSSocket(rawSocket, {
    secureContext: this._sharedCreds,
    isServer: true,
    server: this,
    requestCert: this.requestCert,
    rejectUnauthorized: this.rejectUnauthorized,
    handshakeTimeout: this[kHandshakeTimeout],
    ALPNProtocols: this.ALPNProtocols,
    SNICallback: this[kSNICallback] || SNICallback,
    enableTrace: this[kEnableTrace]
  });
  socket.on('secure', onServerSocketSecure);
  socket[kErrorEmitted] = false;
  socket.on('close', onSocketClose);
  socket.on('_tlsError', onSocketTLSError);
// AUTHENTICATION MODES
// There are several levels of authentication that TLS/SSL supports.
// Read more about this in "man SSL_set_verify".
// 1. The server sends a certificate to the client but does not request a
// cert from the client. This is common for most HTTPS servers. The browser
// can verify the identity of the server, but the server does not know who
// the client is. Authenticating the client is usually done over HTTP using
// login boxes and cookies and stuff.
// 2. The server sends a cert to the client and requests that the client
// also send it a cert. The client knows who the server is and the server is
// requesting the client also identify themselves. There are several
// outcomes:
//   A) verifyError returns null meaning the client's certificate is signed
//   by one of the server's CAs. The server now knows the client's identity
//   and the client is authorized.
//   B) For some reason the client's certificate is not acceptable -
//   verifyError returns a string indicating the problem. The server can
//   either (i) reject the client or (ii) allow the client to connect as an
//   unauthorized connection.
// The mode is controlled by two boolean variables.
// requestCert
//   If true the server requests a certificate from client connections. For
//   the common HTTPS case, users will want this to be false, which is what
//   it defaults to.
// rejectUnauthorized
//   If true clients whose certificates are invalid for any reason will not
//   be allowed to make connections. If false, they will simply be marked as
//   unauthorized but secure communication will continue. By default this is
//   true.
// Options:
// - requestCert. Send verify request. Default to false.
// - rejectUnauthorized. Boolean, default to true.
// - key. string.
// - cert: string.
// - clientCertEngine: string.
// - ca: string or array of strings.
// - sessionTimeout: integer.
// emit 'secureConnection'
//   function (tlsSocket) { }
//   "UNABLE_TO_GET_ISSUER_CERT", "UNABLE_TO_GET_CRL",
//   "UNABLE_TO_DECRYPT_CERT_SIGNATURE", "UNABLE_TO_DECRYPT_CRL_SIGNATURE",
//   "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY", "CERT_SIGNATURE_FAILURE",
//   "CRL_SIGNATURE_FAILURE", "CERT_NOT_YET_VALID" "CERT_HAS_EXPIRED",
//   "CRL_NOT_YET_VALID", "CRL_HAS_EXPIRED" "ERROR_IN_CERT_NOT_BEFORE_FIELD",
//   "ERROR_IN_CERT_NOT_AFTER_FIELD", "ERROR_IN_CRL_LAST_UPDATE_FIELD",
//   "ERROR_IN_CRL_NEXT_UPDATE_FIELD", "OUT_OF_MEM",
//   "DEPTH_ZERO_SELF_SIGNED_CERT", "SELF_SIGNED_CERT_IN_CHAIN",
//   "UNABLE_TO_GET_ISSUER_CERT_LOCALLY", "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
//   "CERT_CHAIN_TOO_LONG", "CERT_REVOKED" "INVALID_CA",
//   "PATH_LENGTH_EXCEEDED", "INVALID_PURPOSE" "CERT_UNTRUSTED",
//   "CERT_REJECTED"
function Server(options, listener) {
  if (!(this instanceof Server))
    return new Server(options, listener);
  if (typeof options === 'function') {
    listener = options;
    options = {};
  } else if (options == null || typeof options === 'object') {
    options = options || {};
  } else {
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  this._contexts = [];
  this.requestCert = options.requestCert === true;
  this.rejectUnauthorized = options.rejectUnauthorized !== false;
  if (options.sessionTimeout)
    this.sessionTimeout = options.sessionTimeout;
  if (options.ticketKeys)
    this.ticketKeys = options.ticketKeys;
  if (options.ALPNProtocols)
    tls.convertALPNProtocols(options.ALPNProtocols, this);
  this.setSecureContext(options);
  this[kHandshakeTimeout] = options.handshakeTimeout || (120 * 1000);
  this[kSNICallback] = options.SNICallback;
  if (typeof this[kHandshakeTimeout] !== 'number') {
    throw new ERR_INVALID_ARG_TYPE(
      'options.handshakeTimeout', 'number', options.handshakeTimeout);
  if (this[kSNICallback] && typeof this[kSNICallback] !== 'function') {
    throw new ERR_INVALID_ARG_TYPE(
      'options.SNICallback', 'function', options.SNICallback);
  // constructor call
  net.Server.call(this, options, tlsConnectionListener);
  if (listener) {
    this.on('secureConnection', listener);
  this[kEnableTrace] = options.enableTrace;
Object.setPrototypeOf(Server.prototype, net.Server.prototype);
Object.setPrototypeOf(Server, net.Server);
exports.Server = Server;
exports.createServer = function createServer(options, listener) {
  return new Server(options, listener);
Server.prototype.setSecureContext = function(options) {
  if (options === null || typeof options !== 'object')
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  if (options.pfx)
    this.pfx = options.pfx;
  else
    this.pfx = undefined;
  if (options.key)
    this.key = options.key;
  else
    this.key = undefined;
  if (options.passphrase)
    this.passphrase = options.passphrase;
  else
    this.passphrase = undefined;
  if (options.cert)
    this.cert = options.cert;
  else
    this.cert = undefined;
  if (options.clientCertEngine)
    this.clientCertEngine = options.clientCertEngine;
  else
    this.clientCertEngine = undefined;
  if (options.ca)
    this.ca = options.ca;
  else
    this.ca = undefined;
  if (options.minVersion)
    this.minVersion = options.minVersion;
  else
    this.minVersion = undefined;
  if (options.maxVersion)
    this.maxVersion = options.maxVersion;
  else
    this.maxVersion = undefined;
  if (options.secureProtocol)
    this.secureProtocol = options.secureProtocol;
  else
    this.secureProtocol = undefined;
  if (options.crl)
    this.crl = options.crl;
  else
    this.crl = undefined;
  if (options.ciphers)
    this.ciphers = options.ciphers;
  else
    this.ciphers = undefined;
  if (options.ecdhCurve !== undefined)
    this.ecdhCurve = options.ecdhCurve;
  else
    this.ecdhCurve = undefined;
  if (options.dhparam)
    this.dhparam = options.dhparam;
  else
    this.dhparam = undefined;
  if (options.honorCipherOrder !== undefined)
    this.honorCipherOrder = !!options.honorCipherOrder;
  else
    this.honorCipherOrder = true;
  const secureOptions = options.secureOptions || 0;
  if (secureOptions)
    this.secureOptions = secureOptions;
  else
    this.secureOptions = undefined;
  if (options.sessionIdContext) {
    this.sessionIdContext = options.sessionIdContext;
  } else {
    this.sessionIdContext = crypto.createHash('sha1')
                                  .update(process.argv.join(' '))
                                  .digest('hex')
                                  .slice(0, 32);
  this._sharedCreds = tls.createSecureContext({
    pfx: this.pfx,
    key: this.key,
    passphrase: this.passphrase,
    cert: this.cert,
    clientCertEngine: this.clientCertEngine,
    ca: this.ca,
    ciphers: this.ciphers,
    ecdhCurve: this.ecdhCurve,
    dhparam: this.dhparam,
    minVersion: this.minVersion,
    maxVersion: this.maxVersion,
    secureProtocol: this.secureProtocol,
    secureOptions: this.secureOptions,
    honorCipherOrder: this.honorCipherOrder,
    crl: this.crl,
    sessionIdContext: this.sessionIdContext
  });
  if (this.sessionTimeout)
    this._sharedCreds.context.setSessionTimeout(this.sessionTimeout);
  if (options.ticketKeys) {
    this.ticketKeys = options.ticketKeys;
    this.setTicketKeys(this.ticketKeys);
Server.prototype._getServerData = function() {
  return {
    ticketKeys: this.getTicketKeys().toString('hex')
  };
Server.prototype._setServerData = function(data) {
  this.setTicketKeys(Buffer.from(data.ticketKeys, 'hex'));
Server.prototype.getTicketKeys = function getTicketKeys() {
  return this._sharedCreds.context.getTicketKeys();
Server.prototype.setTicketKeys = function setTicketKeys(keys) {
  this._sharedCreds.context.setTicketKeys(keys);
Server.prototype.setOptions = deprecate(function(options) {
  this.requestCert = options.requestCert === true;
  this.rejectUnauthorized = options.rejectUnauthorized !== false;
  if (options.pfx) this.pfx = options.pfx;
  if (options.key) this.key = options.key;
  if (options.passphrase) this.passphrase = options.passphrase;
  if (options.cert) this.cert = options.cert;
  if (options.clientCertEngine)
    this.clientCertEngine = options.clientCertEngine;
  if (options.ca) this.ca = options.ca;
  if (options.minVersion) this.minVersion = options.minVersion;
  if (options.maxVersion) this.maxVersion = options.maxVersion;
  if (options.secureProtocol) this.secureProtocol = options.secureProtocol;
  if (options.crl) this.crl = options.crl;
  if (options.ciphers) this.ciphers = options.ciphers;
  if (options.ecdhCurve !== undefined)
    this.ecdhCurve = options.ecdhCurve;
  if (options.dhparam) this.dhparam = options.dhparam;
  if (options.sessionTimeout) this.sessionTimeout = options.sessionTimeout;
  if (options.ticketKeys) this.ticketKeys = options.ticketKeys;
  const secureOptions = options.secureOptions || 0;
  if (options.honorCipherOrder !== undefined)
    this.honorCipherOrder = !!options.honorCipherOrder;
  else
    this.honorCipherOrder = true;
  if (secureOptions) this.secureOptions = secureOptions;
  if (options.ALPNProtocols)
    tls.convertALPNProtocols(options.ALPNProtocols, this);
  if (options.sessionIdContext) {
    this.sessionIdContext = options.sessionIdContext;
  } else {
    this.sessionIdContext = crypto.createHash('sha1')
                                  .update(process.argv.join(' '))
                                  .digest('hex')
                                  .slice(0, 32);
}, 'Server.prototype.setOptions() is deprecated', 'DEP0122');
// SNI Contexts High-Level API
Server.prototype.addContext = function(servername, context) {
  if (!servername) {
    throw new ERR_TLS_REQUIRED_SERVER_NAME();
  const re = new RegExp('^' +
                      servername.replace(/([.^$+?\-\\[\]{}])/g, '\\$1')
                                .replace(/\*/g, '[^.]*') +
                      '$');
  this._contexts.push([re, tls.createSecureContext(context).context]);
function SNICallback(servername, callback) {
  const contexts = this.server._contexts;
  for (var i = 0; i < contexts.length; i++) {
    const elem = contexts[i];
    if (elem[0].test(servername)) {
      callback(null, elem[1]);
      return;
    }
  callback(null, undefined);
// Target API:
//  var s = tls.connect({port: 8000, host: "google.com"}, function() {
//    if (!s.authorized) {
//      s.destroy();
//      return;
//    }
//    // s.socket;
//    s.end("hello world\n");
//  });
function normalizeConnectArgs(listArgs) {
  const args = net._normalizeArgs(listArgs);
  const options = args[0];
  const cb = args[1];
  // If args[0] was options, then normalize dealt with it.
  // If args[0] is port, or args[0], args[1] is host, port, we need to
  // find the options and merge them in, normalize's options has only
  // the host/port/path args that it knows about, not the tls options.
  // This means that options.host overrides a host arg.
  if (listArgs[1] !== null && typeof listArgs[1] === 'object') {
    Object.assign(options, listArgs[1]);
  } else if (listArgs[2] !== null && typeof listArgs[2] === 'object') {
    Object.assign(options, listArgs[2]);
  return cb ? [options, cb] : [options];
function onConnectSecure() {
  const options = this[kConnectOptions];
  // Check the size of DHE parameter above minimum requirement
  // specified in options.
  const ekeyinfo = this.getEphemeralKeyInfo();
  if (ekeyinfo.type === 'DH' && ekeyinfo.size < options.minDHSize) {
    const err = new ERR_TLS_DH_PARAM_SIZE(ekeyinfo.size);
    debug('client emit:', err);
    this.emit('error', err);
    this.destroy();
    return;
  let verifyError = this._handle.verifyError();
  // Verify that server's identity matches it's certificate's names
  // Unless server has resumed our existing session
  if (!verifyError && !this.isSessionReused()) {
    const hostname = options.servername ||
                   options.host ||
                   (options.socket && options.socket._host) ||
                   'localhost';
    const cert = this.getPeerCertificate(true);
    verifyError = options.checkServerIdentity(hostname, cert);
  if (verifyError) {
    this.authorized = false;
    this.authorizationError = verifyError.code || verifyError.message;
    if (options.rejectUnauthorized) {
      this.destroy(verifyError);
      return;
    } else {
      debug('client emit secureConnect. rejectUnauthorized: %s, ' +
            'authorizationError: %s', options.rejectUnauthorized,
            this.authorizationError);
      this.emit('secureConnect');
    }
  } else {
    this.authorized = true;
    debug('client emit secureConnect. authorized:', this.authorized);
    this.emit('secureConnect');
  this.removeListener('end', onConnectEnd);
function onConnectEnd() {
  // NOTE: This logic is shared with _http_client.js
  if (!this._hadError) {
    const options = this[kConnectOptions];
    this._hadError = true;
    const error = connResetException('Client network socket disconnected ' +
                                     'before secure TLS connection was ' +
                                     'established');
    error.path = options.path;
    error.host = options.host;
    error.port = options.port;
    error.localAddress = options.localAddress;
    this.destroy(error);
let warnOnAllowUnauthorized = true;
// Arguments: [port,] [host,] [options,] [cb]
exports.connect = function connect(...args) {
  args = normalizeConnectArgs(args);
  var options = args[0];
  const cb = args[1];
  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';
  if (allowUnauthorized && warnOnAllowUnauthorized) {
    warnOnAllowUnauthorized = false;
    process.emitWarning('Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +
                        'environment variable to \'0\' makes TLS connections ' +
                        'and HTTPS requests insecure by disabling ' +
                        'certificate verification.');
  options = {
    rejectUnauthorized: !allowUnauthorized,
    ciphers: tls.DEFAULT_CIPHERS,
    checkServerIdentity: tls.checkServerIdentity,
    minDHSize: 1024,
    ...options
  };
  if (!options.keepAlive)
    options.singleUse = true;
  assert(typeof options.checkServerIdentity === 'function');
  assert(typeof options.minDHSize === 'number',
         'options.minDHSize is not a number: ' + options.minDHSize);
  assert(options.minDHSize > 0,
         'options.minDHSize is not a positive number: ' +
         options.minDHSize);
  const context = options.secureContext || tls.createSecureContext(options);
  const tlssock = new TLSSocket(options.socket, {
    pipe: !!options.path,
    secureContext: context,
    isServer: false,
    requestCert: true,
    rejectUnauthorized: options.rejectUnauthorized !== false,
    session: options.session,
    ALPNProtocols: options.ALPNProtocols,
    requestOCSP: options.requestOCSP,
    enableTrace: options.enableTrace
  });
  tlssock[kConnectOptions] = options;
  if (cb)
    tlssock.once('secureConnect', cb);
  if (!options.socket) {
    // If user provided the socket, it's their responsibility to manage its
    // connectivity. If we created one internally, we connect it.
    if (options.timeout) {
      tlssock.setTimeout(options.timeout);
    }
    tlssock.connect(options, tlssock._start);
  tlssock._releaseControl();
  if (options.session)
    tlssock.setSession(options.session);
  if (options.servername) {
    if (!ipServernameWarned && net.isIP(options.servername)) {
      process.emitWarning(
        'Setting the TLS ServerName to an IP address is not permitted by ' +
        'RFC 6066. This will be ignored in a future version.',
        'DeprecationWarning',
        'DEP0123'
      );
      ipServernameWarned = true;
    }
    tlssock.setServername(options.servername);
  if (options.socket)
    tlssock._start();
  tlssock.on('secure', onConnectSecure);
  tlssock.once('end', onConnectEnd);
  return tlssock;
'use strict';
const { hasTracing } = internalBinding('config');
const kHandle = Symbol('handle');
const kEnabled = Symbol('enabled');
const kCategories = Symbol('categories');
const kMaxTracingCount = 10;
const {
  ERR_TRACE_EVENTS_CATEGORY_REQUIRED,
  ERR_TRACE_EVENTS_UNAVAILABLE,
  ERR_INVALID_ARG_TYPE
} = require('internal/errors').codes;
const { ownsProcessState } = require('internal/worker');
if (!hasTracing || !ownsProcessState)
  throw new ERR_TRACE_EVENTS_UNAVAILABLE();
const { CategorySet, getEnabledCategories } = internalBinding('trace_events');
const { customInspectSymbol } = require('internal/util');
const { format } = require('internal/util/inspect');
const enabledTracingObjects = new Set();
class Tracing {
  constructor(categories) {
    this[kHandle] = new CategorySet(categories);
    this[kCategories] = categories;
    this[kEnabled] = false;
  enable() {
    if (!this[kEnabled]) {
      this[kEnabled] = true;
      this[kHandle].enable();
      enabledTracingObjects.add(this);
      if (enabledTracingObjects.size > kMaxTracingCount) {
        process.emitWarning(
          'Possible trace_events memory leak detected. There are more than ' +
          `${kMaxTracingCount} enabled Tracing objects.`
        );
      }
    }
  disable() {
    if (this[kEnabled]) {
      this[kEnabled] = false;
      this[kHandle].disable();
      enabledTracingObjects.delete(this);
    }
  get enabled() {
    return this[kEnabled];
  get categories() {
    return this[kCategories].join(',');
  [customInspectSymbol](depth, opts) {
    if (typeof depth === 'number' && depth < 0)
      return this;
    const obj = {
      enabled: this.enabled,
      categories: this.categories
    };
    return `Tracing ${format(obj)}`;
function createTracing(options) {
  if (typeof options !== 'object' || options === null)
    throw new ERR_INVALID_ARG_TYPE('options', 'object', options);
  if (!Array.isArray(options.categories)) {
    throw new ERR_INVALID_ARG_TYPE('options.categories', 'string[]',
                                   options.categories);
  if (options.categories.length <= 0)
    throw new ERR_TRACE_EVENTS_CATEGORY_REQUIRED();
  return new Tracing(options.categories);
module.exports = {
  createTracing,
  getEnabledCategories
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object } = primordials;
const net = require('net');
const { TTY, isTTY } = internalBinding('tty_wrap');
const errors = require('internal/errors');
const { ERR_INVALID_FD, ERR_TTY_INIT_FAILED } = errors.codes;
const {
  getColorDepth,
  hasColors
} = require('internal/tty');
// Lazy loaded for startup performance.
let readline;
function isatty(fd) {
  return Number.isInteger(fd) && fd >= 0 && isTTY(fd);
function ReadStream(fd, options) {
  if (!(this instanceof ReadStream))
    return new ReadStream(fd, options);
  if (fd >> 0 !== fd || fd < 0)
    throw new ERR_INVALID_FD(fd);
  const ctx = {};
  const tty = new TTY(fd, true, ctx);
  if (ctx.code !== undefined) {
    throw new ERR_TTY_INIT_FAILED(ctx);
  net.Socket.call(this, {
    highWaterMark: 0,
    readable: true,
    writable: false,
    handle: tty,
    ...options
  });
  this.isRaw = false;
  this.isTTY = true;
Object.setPrototypeOf(ReadStream.prototype, net.Socket.prototype);
Object.setPrototypeOf(ReadStream, net.Socket);
ReadStream.prototype.setRawMode = function(flag) {
  flag = !!flag;
  const err = this._handle.setRawMode(flag);
  if (err) {
    this.emit('error', errors.errnoException(err, 'setRawMode'));
    return this;
  this.isRaw = flag;
  return this;
function WriteStream(fd) {
  if (!(this instanceof WriteStream))
    return new WriteStream(fd);
  if (fd >> 0 !== fd || fd < 0)
    throw new ERR_INVALID_FD(fd);
  const ctx = {};
  const tty = new TTY(fd, false, ctx);
  if (ctx.code !== undefined) {
    throw new ERR_TTY_INIT_FAILED(ctx);
  net.Socket.call(this, {
    handle: tty,
    readable: false,
    writable: true
  });
  // Prevents interleaved or dropped stdout/stderr output for terminals.
  // As noted in the following reference, local TTYs tend to be quite fast and
  // this behavior has become expected due historical functionality on OS X,
  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).
  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671
  this._handle.setBlocking(true);
  const winSize = new Array(2);
  const err = this._handle.getWindowSize(winSize);
  if (!err) {
    this.columns = winSize[0];
    this.rows = winSize[1];
Object.setPrototypeOf(WriteStream.prototype, net.Socket.prototype);
Object.setPrototypeOf(WriteStream, net.Socket);
WriteStream.prototype.isTTY = true;
WriteStream.prototype.getColorDepth = getColorDepth;
WriteStream.prototype.hasColors = hasColors;
WriteStream.prototype._refreshSize = function() {
  const oldCols = this.columns;
  const oldRows = this.rows;
  const winSize = new Array(2);
  const err = this._handle.getWindowSize(winSize);
  if (err) {
    this.emit('error', errors.errnoException(err, 'getWindowSize'));
    return;
  const [newCols, newRows] = winSize;
  if (oldCols !== newCols || oldRows !== newRows) {
    this.columns = newCols;
    this.rows = newRows;
    this.emit('resize');
// Backwards-compat
WriteStream.prototype.cursorTo = function(x, y, callback) {
  if (readline === undefined) readline = require('readline');
  return readline.cursorTo(this, x, y, callback);
WriteStream.prototype.moveCursor = function(dx, dy, callback) {
  if (readline === undefined) readline = require('readline');
  return readline.moveCursor(this, dx, dy, callback);
WriteStream.prototype.clearLine = function(dir, callback) {
  if (readline === undefined) readline = require('readline');
  return readline.clearLine(this, dir, callback);
WriteStream.prototype.clearScreenDown = function(callback) {
  if (readline === undefined) readline = require('readline');
  return readline.clearScreenDown(this, callback);
WriteStream.prototype.getWindowSize = function() {
  return [this.columns, this.rows];
module.exports = { isatty, ReadStream, WriteStream };
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object, SafeSet } = primordials;
const { toASCII } = require('internal/idna');
const { encodeStr, hexTable } = require('internal/querystring');
const {
  ERR_INVALID_ARG_TYPE
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
// This ensures setURLConstructor() is called before the native
// URL::ToObject() method is used.
const { spliceOne } = require('internal/util');
// WHATWG URL implementation provided by internal/url
const {
  URL,
  URLSearchParams,
  domainToASCII,
  domainToUnicode,
  formatSymbol,
  pathToFileURL,
  fileURLToPath
} = require('internal/url');
// Original url.parse() API
function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
// Reference: RFC 3986, RFC 1808, RFC 2396
// define these here so at least they only have to be
// compiled once on the first module load.
const protocolPattern = /^[a-z0-9.+-]+:/i;
const portPattern = /:[0-9]*$/;
const hostPattern = /^\/\/[^@/]+@[^@/]+/;
// Special case for a simple path URL
const simplePathPattern = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/;
const hostnameMaxLen = 255;
// Protocols that can allow "unsafe" and "unwise" chars.
const unsafeProtocol = new SafeSet([
  'javascript',
  'javascript:'
// Protocols that never have a hostname.
const hostlessProtocol = new SafeSet([
  'javascript',
  'javascript:'
// Protocols that always contain a // bit.
const slashedProtocol = new SafeSet([
  'http',
  'http:',
  'https',
  'https:',
  'ftp',
  'ftp:',
  'gopher',
  'gopher:',
  'file',
  'file:',
  'ws',
  'ws:',
  'wss',
  'wss:'
const {
  CHAR_SPACE,
  CHAR_TAB,
  CHAR_CARRIAGE_RETURN,
  CHAR_LINE_FEED,
  CHAR_FORM_FEED,
  CHAR_NO_BREAK_SPACE,
  CHAR_ZERO_WIDTH_NOBREAK_SPACE,
  CHAR_HASH,
  CHAR_FORWARD_SLASH,
  CHAR_LEFT_SQUARE_BRACKET,
  CHAR_RIGHT_SQUARE_BRACKET,
  CHAR_LEFT_ANGLE_BRACKET,
  CHAR_RIGHT_ANGLE_BRACKET,
  CHAR_LEFT_CURLY_BRACKET,
  CHAR_RIGHT_CURLY_BRACKET,
  CHAR_QUESTION_MARK,
  CHAR_LOWERCASE_A,
  CHAR_LOWERCASE_Z,
  CHAR_UPPERCASE_A,
  CHAR_UPPERCASE_Z,
  CHAR_DOT,
  CHAR_0,
  CHAR_9,
  CHAR_HYPHEN_MINUS,
  CHAR_PLUS,
  CHAR_UNDERSCORE,
  CHAR_DOUBLE_QUOTE,
  CHAR_SINGLE_QUOTE,
  CHAR_PERCENT,
  CHAR_SEMICOLON,
  CHAR_BACKWARD_SLASH,
  CHAR_CIRCUMFLEX_ACCENT,
  CHAR_GRAVE_ACCENT,
  CHAR_VERTICAL_LINE,
  CHAR_AT,
} = require('internal/constants');
// Lazy loaded for startup performance.
let querystring;
function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url instanceof Url) return url;
  const urlObject = new Url();
  urlObject.parse(url, parseQueryString, slashesDenoteHost);
  return urlObject;
Url.prototype.parse = function parse(url, parseQueryString, slashesDenoteHost) {
  validateString(url, 'url');
  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var hasHash = false;
  var start = -1;
  var end = -1;
  var rest = '';
  var lastPos = 0;
  var i = 0;
  for (var inWs = false, split = false; i < url.length; ++i) {
    const code = url.charCodeAt(i);
    // Find first and last non-whitespace characters for trimming
    const isWs = code === CHAR_SPACE ||
                 code === CHAR_TAB ||
                 code === CHAR_CARRIAGE_RETURN ||
                 code === CHAR_LINE_FEED ||
                 code === CHAR_FORM_FEED ||
                 code === CHAR_NO_BREAK_SPACE ||
                 code === CHAR_ZERO_WIDTH_NOBREAK_SPACE;
    if (start === -1) {
      if (isWs)
        continue;
      lastPos = start = i;
    } else if (inWs) {
      if (!isWs) {
        end = -1;
        inWs = false;
      }
    } else if (isWs) {
      end = i;
      inWs = true;
    }
    // Only convert backslashes while we haven't seen a split character
    if (!split) {
      switch (code) {
        case CHAR_HASH:
          hasHash = true;
        // Fall through
        case CHAR_QUESTION_MARK:
          split = true;
          break;
        case CHAR_BACKWARD_SLASH:
          if (i - lastPos > 0)
            rest += url.slice(lastPos, i);
          rest += '/';
          lastPos = i + 1;
          break;
      }
    } else if (!hasHash && code === CHAR_HASH) {
      hasHash = true;
    }
  // Check if string was non-empty (including strings with only whitespace)
  if (start !== -1) {
    if (lastPos === start) {
      // We didn't convert any backslashes
      if (end === -1) {
        if (start === 0)
          rest = url;
        else
          rest = url.slice(start);
      } else {
        rest = url.slice(start, end);
      }
    } else if (end === -1 && lastPos < url.length) {
      // We converted some backslashes and have only part of the entire string
      rest += url.slice(lastPos);
    } else if (end !== -1 && lastPos < end) {
      // We converted some backslashes and have only part of the entire string
      rest += url.slice(lastPos, end);
    }
  if (!slashesDenoteHost && !hasHash) {
    // Try fast path regexp
    const simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          if (querystring === undefined) querystring = require('querystring');
          this.query = querystring.parse(this.search.slice(1));
        } else {
          this.query = this.search.slice(1);
        }
      } else if (parseQueryString) {
        this.search = null;
        this.query = Object.create(null);
      }
      return this;
    }
  let proto = protocolPattern.exec(rest);
  let lowerProto;
  if (proto) {
    proto = proto[0];
    lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.slice(proto.length);
  // Figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  let slashes;
  if (slashesDenoteHost || proto || hostPattern.test(rest)) {
    slashes = rest.charCodeAt(0) === CHAR_FORWARD_SLASH &&
              rest.charCodeAt(1) === CHAR_FORWARD_SLASH;
    if (slashes && !(proto && hostlessProtocol.has(lowerProto))) {
      rest = rest.slice(2);
      this.slashes = true;
    }
  if (!hostlessProtocol.has(lowerProto) &&
      (slashes || (proto && !slashedProtocol.has(proto)))) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:b path:/?@c
    var hostEnd = -1;
    var atSign = -1;
    var nonHost = -1;
    for (i = 0; i < rest.length; ++i) {
      switch (rest.charCodeAt(i)) {
        case CHAR_TAB:
        case CHAR_LINE_FEED:
        case CHAR_CARRIAGE_RETURN:
        case CHAR_SPACE:
        case CHAR_DOUBLE_QUOTE:
        case CHAR_PERCENT:
        case CHAR_SINGLE_QUOTE:
        case CHAR_SEMICOLON:
        case CHAR_LEFT_ANGLE_BRACKET:
        case CHAR_RIGHT_ANGLE_BRACKET:
        case CHAR_BACKWARD_SLASH:
        case CHAR_CIRCUMFLEX_ACCENT:
        case CHAR_GRAVE_ACCENT:
        case CHAR_LEFT_CURLY_BRACKET:
        case CHAR_VERTICAL_LINE:
        case CHAR_RIGHT_CURLY_BRACKET:
          // Characters that are never ever allowed in a hostname from RFC 2396
          if (nonHost === -1)
            nonHost = i;
          break;
        case CHAR_HASH:
        case CHAR_FORWARD_SLASH:
        case CHAR_QUESTION_MARK:
          // Find the first instance of any host-ending characters
          if (nonHost === -1)
            nonHost = i;
          hostEnd = i;
          break;
        case CHAR_AT:
          // At this point, either we have an explicit point where the
          // auth portion cannot go past, or the last @ char is the decider.
          atSign = i;
          nonHost = -1;
          break;
      }
      if (hostEnd !== -1)
        break;
    }
    start = 0;
    if (atSign !== -1) {
      this.auth = decodeURIComponent(rest.slice(0, atSign));
      start = atSign + 1;
    }
    if (nonHost === -1) {
      this.host = rest.slice(start);
      rest = '';
    } else {
      this.host = rest.slice(start, nonHost);
      rest = rest.slice(nonHost);
    }
    // pull out port.
    this.parseHost();
    // We've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    if (typeof this.hostname !== 'string')
      this.hostname = '';
    var hostname = this.hostname;
    // If hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = hostname.charCodeAt(0) === CHAR_LEFT_SQUARE_BRACKET &&
      hostname.charCodeAt(hostname.length - 1) === CHAR_RIGHT_SQUARE_BRACKET;
    // validate a little.
    if (!ipv6Hostname) {
      rest = getHostname(this, rest, hostname);
    }
    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // Hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }
    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      // Use lenient mode (`true`) to try to support even non-compliant
      // URLs.
      this.hostname = toASCII(this.hostname, true);
    }
    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.slice(1, -1);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  // Now rest is set to the post-host stuff.
  // Chop off any delim chars.
  if (!unsafeProtocol.has(lowerProto)) {
    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    rest = autoEscapeStr(rest);
  var questionIdx = -1;
  var hashIdx = -1;
  for (i = 0; i < rest.length; ++i) {
    const code = rest.charCodeAt(i);
    if (code === CHAR_HASH) {
      this.hash = rest.slice(i);
      hashIdx = i;
      break;
    } else if (code === CHAR_QUESTION_MARK && questionIdx === -1) {
      questionIdx = i;
    }
  if (questionIdx !== -1) {
    if (hashIdx === -1) {
      this.search = rest.slice(questionIdx);
      this.query = rest.slice(questionIdx + 1);
    } else {
      this.search = rest.slice(questionIdx, hashIdx);
      this.query = rest.slice(questionIdx + 1, hashIdx);
    }
    if (parseQueryString) {
      if (querystring === undefined) querystring = require('querystring');
      this.query = querystring.parse(this.query);
    }
  } else if (parseQueryString) {
    // No query string, but parseQueryString still requested
    this.search = null;
    this.query = Object.create(null);
  const useQuestionIdx =
    questionIdx !== -1 && (hashIdx === -1 || questionIdx < hashIdx);
  const firstIdx = useQuestionIdx ? questionIdx : hashIdx;
  if (firstIdx === -1) {
    if (rest.length > 0)
      this.pathname = rest;
  } else if (firstIdx > 0) {
    this.pathname = rest.slice(0, firstIdx);
  if (slashedProtocol.has(lowerProto) &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  // To support http.request
  if (this.pathname || this.search) {
    const p = this.pathname || '';
    const s = this.search || '';
    this.path = p + s;
  // Finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
function getHostname(self, rest, hostname) {
  for (var i = 0; i < hostname.length; ++i) {
    const code = hostname.charCodeAt(i);
    const isValid = (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z) ||
                    code === CHAR_DOT ||
                    (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||
                    (code >= CHAR_0 && code <= CHAR_9) ||
                    code === CHAR_HYPHEN_MINUS ||
                    code === CHAR_PLUS ||
                    code === CHAR_UNDERSCORE ||
                    code > 127;
    // Invalid host character
    if (!isValid) {
      self.hostname = hostname.slice(0, i);
      return `/${hostname.slice(i)}${rest}`;
    }
  return rest;
// Escaped characters. Use empty strings to fill up unused entries.
// Using Array is faster than Object/Map
const escapedCodes = [
  /* 0 - 9 */ '', '', '', '', '', '', '', '', '', '%09',
  /* 10 - 19 */ '%0A', '', '', '%0D', '', '', '', '', '', '',
  /* 20 - 29 */ '', '', '', '', '', '', '', '', '', '',
  /* 30 - 39 */ '', '', '%20', '', '%22', '', '', '', '', '%27',
  /* 40 - 49 */ '', '', '', '', '', '', '', '', '', '',
  /* 50 - 59 */ '', '', '', '', '', '', '', '', '', '',
  /* 60 - 69 */ '%3C', '', '%3E', '', '', '', '', '', '', '',
  /* 70 - 79 */ '', '', '', '', '', '', '', '', '', '',
  /* 80 - 89 */ '', '', '', '', '', '', '', '', '', '',
  /* 90 - 99 */ '', '', '%5C', '', '%5E', '', '%60', '', '', '',
  /* 100 - 109 */ '', '', '', '', '', '', '', '', '', '',
  /* 110 - 119 */ '', '', '', '', '', '', '', '', '', '',
  /* 120 - 125 */ '', '', '', '%7B', '%7C', '%7D'
// Automatically escape all delimiters and unwise characters from RFC 2396.
// Also escape single quotes in case of an XSS attack.
// Return the escaped string.
function autoEscapeStr(rest) {
  var escaped = '';
  var lastEscapedPos = 0;
  for (var i = 0; i < rest.length; ++i) {
    // `escaped` contains substring up to the last escaped character.
    var escapedChar = escapedCodes[rest.charCodeAt(i)];
    if (escapedChar) {
      // Concat if there are ordinary characters in the middle.
      if (i > lastEscapedPos)
        escaped += rest.slice(lastEscapedPos, i);
      escaped += escapedChar;
      lastEscapedPos = i + 1;
    }
  if (lastEscapedPos === 0)  // Nothing has been escaped.
    return rest;
  // There are ordinary characters at the end.
  if (lastEscapedPos < rest.length)
    escaped += rest.slice(lastEscapedPos);
  return escaped;
// Format a parsed object into a url string
function urlFormat(urlObject, options) {
  // Ensure it's an object, and not a string url.
  // If it's an object, this is a no-op.
  // this way, you can call urlParse() on strings
  // to clean up potentially wonky urls.
  if (typeof urlObject === 'string') {
    urlObject = urlParse(urlObject);
  } else if (typeof urlObject !== 'object' || urlObject === null) {
    throw new ERR_INVALID_ARG_TYPE('urlObject',
                                   ['Object', 'string'], urlObject);
  } else if (!(urlObject instanceof Url)) {
    var format = urlObject[formatSymbol];
    return format ?
      format.call(urlObject, options) :
      Url.prototype.format.call(urlObject);
  return urlObject.format();
// These characters do not need escaping:
// ! - . _ ~
// ' ( ) * :
// digits
// alpha (uppercase)
// alpha (lowercase)
const noEscapeAuth = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0x00 - 0x0F
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0x10 - 0x1F
  0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, // 0x20 - 0x2F
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, // 0x30 - 0x3F
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 0x40 - 0x4F
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, // 0x50 - 0x5F
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 0x60 - 0x6F
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0  // 0x70 - 0x7F
Url.prototype.format = function format() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeStr(auth, noEscapeAuth, hexTable);
    auth += '@';
  var protocol = this.protocol || '';
  var pathname = this.pathname || '';
  var hash = this.hash || '';
  var host = '';
  var query = '';
  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (
      this.hostname.includes(':') ?
        '[' + this.hostname + ']' :
        this.hostname
    );
    if (this.port) {
      host += ':' + this.port;
    }
  if (this.query !== null && typeof this.query === 'object') {
    if (querystring === undefined) querystring = require('querystring');
    query = querystring.stringify(this.query);
  var search = this.search || (query && ('?' + query)) || '';
  if (protocol && protocol.charCodeAt(protocol.length - 1) !== 58/* : */)
    protocol += ':';
  var newPathname = '';
  var lastPos = 0;
  for (var i = 0; i < pathname.length; ++i) {
    switch (pathname.charCodeAt(i)) {
      case CHAR_HASH:
        if (i - lastPos > 0)
          newPathname += pathname.slice(lastPos, i);
        newPathname += '%23';
        lastPos = i + 1;
        break;
      case CHAR_QUESTION_MARK:
        if (i - lastPos > 0)
          newPathname += pathname.slice(lastPos, i);
        newPathname += '%3F';
        lastPos = i + 1;
        break;
    }
  if (lastPos > 0) {
    if (lastPos !== pathname.length)
      pathname = newPathname + pathname.slice(lastPos);
    else
      pathname = newPathname;
  // Only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes || slashedProtocol.has(protocol)) {
    if (this.slashes || host) {
      if (pathname && pathname.charCodeAt(0) !== CHAR_FORWARD_SLASH)
        pathname = '/' + pathname;
      host = '//' + host;
    } else if (protocol.length >= 4 &&
               protocol.charCodeAt(0) === 102/* f */ &&
               protocol.charCodeAt(1) === 105/* i */ &&
               protocol.charCodeAt(2) === 108/* l */ &&
               protocol.charCodeAt(3) === 101/* e */) {
      host = '//';
    }
  search = search.replace(/#/g, '%23');
  if (hash && hash.charCodeAt(0) !== CHAR_HASH)
    hash = '#' + hash;
  if (search && search.charCodeAt(0) !== CHAR_QUESTION_MARK)
    search = '?' + search;
  return protocol + host + pathname + search + hash;
function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
Url.prototype.resolve = function resolve(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
Url.prototype.resolveObject = function resolveObject(relative) {
  if (typeof relative === 'string') {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  const result = new Url();
  const tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  // Hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;
  // If the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  // Hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // Take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }
    // urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol.has(result.protocol) &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }
    result.href = result.format();
    return result;
  if (relative.protocol && relative.protocol !== result.protocol) {
    // If it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol.has(relative.protocol)) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }
    result.protocol = relative.protocol;
    if (!relative.host &&
        !/^file:?$/.test(relative.protocol) &&
        !hostlessProtocol.has(relative.protocol)) {
      const relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // To support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  const isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/');
  const isRelAbs = (
    relative.host || relative.pathname && relative.pathname.charAt(0) === '/'
  );
  var mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname));
  const removeAllDots = mustEndAbs;
  var srcPath = result.pathname && result.pathname.split('/') || [];
  const relPath = relative.pathname && relative.pathname.split('/') || [];
  const noLeadingSlashes = result.protocol &&
      !slashedProtocol.has(result.protocol);
  // If the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (noLeadingSlashes) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      result.auth = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  if (isRelAbs) {
    // it's absolute.
    if (relative.host || relative.host === '') {
      if (result.host !== relative.host) result.auth = null;
      result.host = relative.host;
      result.port = relative.port;
    }
    if (relative.hostname || relative.hostname === '') {
      if (result.hostname !== relative.hostname) result.auth = null;
      result.hostname = relative.hostname;
    }
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // Fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (relative.search !== null && relative.search !== undefined) {
    // Just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (noLeadingSlashes) {
      result.hostname = result.host = srcPath.shift();
      // Occasionally the auth can get stuck only in host.
      // This especially happens in cases like
      // url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      const authInHost =
        result.host && result.host.indexOf('@') > 0 && result.host.split('@');
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    // To support http.request
    if (result.pathname !== null || result.search !== null) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  if (!srcPath.length) {
    // No path at all. All other things were already handled above.
    result.pathname = null;
    // To support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  // If a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  const hasTrailingSlash = (
    (result.host || relative.host || srcPath.length > 1) &&
    (last === '.' || last === '..') || last === '');
  // Strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length - 1; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      spliceOne(srcPath, i);
    } else if (last === '..') {
      spliceOne(srcPath, i);
      up++;
    } else if (up) {
      spliceOne(srcPath, i);
      up--;
    }
  // If the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    while (up--) {
      srcPath.unshift('..');
    }
  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  const isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');
  // put the host back
  if (noLeadingSlashes) {
    result.hostname =
      result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';
    // Occasionally the auth can get stuck only in host.
    // This especially happens in cases like
    // url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    const authInHost = result.host && result.host.indexOf('@') > 0 ?
      result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  mustEndAbs = mustEndAbs || (result.host && srcPath.length);
  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  // To support request.http
  if (result.pathname !== null || result.search !== null) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
Url.prototype.parseHost = function parseHost() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.slice(1);
    }
    host = host.slice(0, host.length - port.length);
  if (host) this.hostname = host;
module.exports = {
  // Original API
  Url,
  parse: urlParse,
  resolve: urlResolve,
  resolveObject: urlResolveObject,
  format: urlFormat,
  // WHATWG API
  URL,
  URLSearchParams,
  domainToASCII,
  domainToUnicode,
  // Utilities
  pathToFileURL,
  fileURLToPath
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Object, ObjectPrototype, Reflect } = primordials;
const {
  codes: {
    ERR_FALSY_VALUE_REJECTION,
    ERR_INVALID_ARG_TYPE,
    ERR_OUT_OF_RANGE
  },
  errnoException,
  exceptionWithHostPort,
  hideStackFrames
} = require('internal/errors');
const {
  format,
  formatWithOptions,
  inspect
} = require('internal/util/inspect');
const { debuglog } = require('internal/util/debuglog');
const { validateNumber } = require('internal/validators');
const { TextDecoder, TextEncoder } = require('internal/encoding');
const { isBuffer } = require('buffer').Buffer;
const types = require('internal/util/types');
const {
  deprecate,
  getSystemErrorName: internalErrorName,
  promisify
} = require('internal/util');
let internalDeepEqual;
function isBoolean(arg) {
  return typeof arg === 'boolean';
function isNull(arg) {
  return arg === null;
function isNullOrUndefined(arg) {
  return arg === null || arg === undefined;
function isNumber(arg) {
  return typeof arg === 'number';
function isString(arg) {
  return typeof arg === 'string';
function isSymbol(arg) {
  return typeof arg === 'symbol';
function isUndefined(arg) {
  return arg === undefined;
function isObject(arg) {
  return arg !== null && typeof arg === 'object';
function isError(e) {
  return ObjectPrototype.toString(e) === '[object Error]' || e instanceof Error;
function isFunction(arg) {
  return typeof arg === 'function';
function isPrimitive(arg) {
  return arg === null ||
         typeof arg !== 'object' && typeof arg !== 'function';
function pad(n) {
  return n.toString().padStart(2, '0');
const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
                'Oct', 'Nov', 'Dec'];
// 26 Feb 16:19:34
function timestamp() {
  const d = new Date();
  const time = [pad(d.getHours()),
                pad(d.getMinutes()),
                pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
let console;
// Log is just a thin wrapper to console.log that prepends a timestamp
function log(...args) {
  if (!console) {
    console = require('internal/console/global');
  console.log('%s - %s', timestamp(), format(...args));
 * Inherit the prototype methods from one constructor into another.
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 * @throws {TypeError} Will error if either constructor is null, or if
 *     the super constructor lacks a prototype.
function inherits(ctor, superCtor) {
  if (ctor === undefined || ctor === null)
    throw new ERR_INVALID_ARG_TYPE('ctor', 'Function', ctor);
  if (superCtor === undefined || superCtor === null)
    throw new ERR_INVALID_ARG_TYPE('superCtor', 'Function', superCtor);
  if (superCtor.prototype === undefined) {
    throw new ERR_INVALID_ARG_TYPE('superCtor.prototype',
                                   'Object', superCtor.prototype);
  Object.defineProperty(ctor, 'super_', {
    value: superCtor,
    writable: true,
    configurable: true
  });
  Object.setPrototypeOf(ctor.prototype, superCtor.prototype);
function _extend(target, source) {
  // Don't do anything if source isn't an object
  if (source === null || typeof source !== 'object') return target;
  const keys = Object.keys(source);
  let i = keys.length;
  while (i--) {
    target[keys[i]] = source[keys[i]];
  return target;
const callbackifyOnRejected = hideStackFrames((reason, cb) => {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    reason = new ERR_FALSY_VALUE_REJECTION(reason);
  return cb(reason);
function callbackify(original) {
  if (typeof original !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('original', 'Function', original);
  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified(...args) {
    const maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new ERR_INVALID_ARG_TYPE('last argument', 'Function', maybeCb);
    }
    const cb = (...args) => { Reflect.apply(maybeCb, this, args); };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    Reflect.apply(original, this, args)
      .then((ret) => process.nextTick(cb, null, ret),
            (rej) => process.nextTick(callbackifyOnRejected, rej, cb));
  const descriptors = Object.getOwnPropertyDescriptors(original);
  // It is possible to manipulate a functions `length` or `name` property. This
  // guards against the manipulation.
  if (typeof descriptors.length.value === 'number') {
    descriptors.length.value++;
  if (typeof descriptors.name.value === 'string') {
    descriptors.name.value += 'Callbackified';
  Object.defineProperties(callbackified, descriptors);
  return callbackified;
function getSystemErrorName(err) {
  validateNumber(err, 'err');
  if (err >= 0 || !Number.isSafeInteger(err)) {
    throw new ERR_OUT_OF_RANGE('err', 'a negative integer', err);
  return internalErrorName(err);
// Keep the `exports =` so that various functions can still be monkeypatched
module.exports = {
  _errnoException: errnoException,
  _exceptionWithHostPort: exceptionWithHostPort,
  _extend,
  callbackify,
  debuglog,
  deprecate,
  format,
  formatWithOptions,
  getSystemErrorName,
  inherits,
  inspect,
  isArray: Array.isArray,
  isBoolean,
  isBuffer,
  isDeepStrictEqual(a, b) {
    if (internalDeepEqual === undefined) {
      internalDeepEqual = require('internal/util/comparisons')
        .isDeepStrictEqual;
    }
    return internalDeepEqual(a, b);
  },
  isNull,
  isNullOrUndefined,
  isNumber,
  isString,
  isSymbol,
  isUndefined,
  isRegExp: types.isRegExp,
  isObject,
  isDate: types.isDate,
  isError,
  isFunction,
  isPrimitive,
  log,
  promisify,
  TextDecoder,
  TextEncoder,
  types
// Copyright (c) 2014, StrongLoop Inc.
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
'use strict';
const { ObjectPrototype } = primordials;
const { Buffer } = require('buffer');
const { validateString } = require('internal/validators');
const {
  Serializer: _Serializer,
  Deserializer: _Deserializer
} = internalBinding('serdes');
const assert = require('internal/assert');
const { copy } = internalBinding('buffer');
const { FastBuffer } = require('internal/buffer');
const { getValidatedPath } = require('internal/fs/utils');
const { toNamespacedPath } = require('path');
const {
  createHeapSnapshotStream,
  triggerHeapSnapshot
} = internalBinding('heap_utils');
const { Readable } = require('stream');
const { owner_symbol } = require('internal/async_hooks').symbols;
const {
  kUpdateTimer,
  onStreamRead,
} = require('internal/stream_base_commons');
const kHandle = Symbol('kHandle');
function writeHeapSnapshot(filename) {
  if (filename !== undefined) {
    filename = getValidatedPath(filename);
    filename = toNamespacedPath(filename);
  return triggerHeapSnapshot(filename);
class HeapSnapshotStream extends Readable {
  constructor(handle) {
    super({ autoDestroy: true });
    this[kHandle] = handle;
    handle[owner_symbol] = this;
    handle.onread = onStreamRead;
  _read() {
    if (this[kHandle])
      this[kHandle].readStart();
  _destroy() {
    // Release the references on the handle so that
    // it can be garbage collected.
    this[kHandle][owner_symbol] = undefined;
    this[kHandle] = undefined;
  [kUpdateTimer]() {
    // Does nothing
function getHeapSnapshot() {
  const handle = createHeapSnapshotStream();
  assert(handle);
  return new HeapSnapshotStream(handle);
// Calling exposed c++ functions directly throws exception as it expected to be
// called with new operator and caused an assert to fire.
// Creating JS wrapper so that it gets caught at JS layer.
class Serializer extends _Serializer { }
class Deserializer extends _Deserializer { }
const {
  cachedDataVersionTag,
  setFlagsFromString: _setFlagsFromString,
  heapStatisticsArrayBuffer,
  heapSpaceStatisticsArrayBuffer,
  heapCodeStatisticsArrayBuffer,
  updateHeapStatisticsArrayBuffer,
  updateHeapSpaceStatisticsArrayBuffer,
  updateHeapCodeStatisticsArrayBuffer,
  // Properties for heap statistics buffer extraction.
  kTotalHeapSizeIndex,
  kTotalHeapSizeExecutableIndex,
  kTotalPhysicalSizeIndex,
  kTotalAvailableSize,
  kUsedHeapSizeIndex,
  kHeapSizeLimitIndex,
  kDoesZapGarbageIndex,
  kMallocedMemoryIndex,
  kPeakMallocedMemoryIndex,
  kNumberOfNativeContextsIndex,
  kNumberOfDetachedContextsIndex,
  // Properties for heap spaces statistics buffer extraction.
  kHeapSpaces,
  kHeapSpaceStatisticsPropertiesCount,
  kSpaceSizeIndex,
  kSpaceUsedSizeIndex,
  kSpaceAvailableSizeIndex,
  kPhysicalSpaceSizeIndex,
  // Properties for heap code statistics buffer extraction.
  kCodeAndMetadataSizeIndex,
  kBytecodeAndMetadataSizeIndex,
  kExternalScriptSourceSizeIndex
} = internalBinding('v8');
const kNumberOfHeapSpaces = kHeapSpaces.length;
const heapStatisticsBuffer =
    new Float64Array(heapStatisticsArrayBuffer);
const heapSpaceStatisticsBuffer =
    new Float64Array(heapSpaceStatisticsArrayBuffer);
const heapCodeStatisticsBuffer =
    new Float64Array(heapCodeStatisticsArrayBuffer);
function setFlagsFromString(flags) {
  validateString(flags, 'flags');
  _setFlagsFromString(flags);
function getHeapStatistics() {
  const buffer = heapStatisticsBuffer;
  updateHeapStatisticsArrayBuffer();
  return {
    'total_heap_size': buffer[kTotalHeapSizeIndex],
    'total_heap_size_executable': buffer[kTotalHeapSizeExecutableIndex],
    'total_physical_size': buffer[kTotalPhysicalSizeIndex],
    'total_available_size': buffer[kTotalAvailableSize],
    'used_heap_size': buffer[kUsedHeapSizeIndex],
    'heap_size_limit': buffer[kHeapSizeLimitIndex],
    'malloced_memory': buffer[kMallocedMemoryIndex],
    'peak_malloced_memory': buffer[kPeakMallocedMemoryIndex],
    'does_zap_garbage': buffer[kDoesZapGarbageIndex],
    'number_of_native_contexts': buffer[kNumberOfNativeContextsIndex],
    'number_of_detached_contexts': buffer[kNumberOfDetachedContextsIndex]
  };
function getHeapSpaceStatistics() {
  const heapSpaceStatistics = new Array(kNumberOfHeapSpaces);
  const buffer = heapSpaceStatisticsBuffer;
  updateHeapSpaceStatisticsArrayBuffer();
  for (var i = 0; i < kNumberOfHeapSpaces; i++) {
    const propertyOffset = i * kHeapSpaceStatisticsPropertiesCount;
    heapSpaceStatistics[i] = {
      space_name: kHeapSpaces[i],
      space_size: buffer[propertyOffset + kSpaceSizeIndex],
      space_used_size: buffer[propertyOffset + kSpaceUsedSizeIndex],
      space_available_size: buffer[propertyOffset + kSpaceAvailableSizeIndex],
      physical_space_size: buffer[propertyOffset + kPhysicalSpaceSizeIndex]
    };
  return heapSpaceStatistics;
function getHeapCodeStatistics() {
  const buffer = heapCodeStatisticsBuffer;
  updateHeapCodeStatisticsArrayBuffer();
  return {
    'code_and_metadata_size': buffer[kCodeAndMetadataSizeIndex],
    'bytecode_and_metadata_size': buffer[kBytecodeAndMetadataSizeIndex],
    'external_script_source_size': buffer[kExternalScriptSourceSizeIndex]
  };
/* V8 serialization API */
/* JS methods for the base objects */
Serializer.prototype._getDataCloneError = Error;
Deserializer.prototype.readRawBytes = function readRawBytes(length) {
  const offset = this._readRawBytes(length);
  // `this.buffer` can be a Buffer or a plain Uint8Array, so just calling
  // `.slice()` doesn't work.
  return new FastBuffer(this.buffer.buffer,
                        this.buffer.byteOffset + offset,
                        length);
/* Keep track of how to handle different ArrayBufferViews.
 * The default Serializer for Node does not use the V8 methods for serializing
 * those objects because Node's `Buffer` objects use pooled allocation in many
 * cases, and their underlying `ArrayBuffer`s would show up in the
 * serialization. Because a) those may contain sensitive data and the user
 * may not be aware of that and b) they are often much larger than the `Buffer`
 * itself, custom serialization is applied. */
const arrayBufferViewTypes = [Int8Array, Uint8Array, Uint8ClampedArray,
                              Int16Array, Uint16Array, Int32Array, Uint32Array,
                              Float32Array, Float64Array, DataView];
const arrayBufferViewTypeToIndex = new Map();
  const dummy = new ArrayBuffer();
  for (const [i, ctor] of arrayBufferViewTypes.entries()) {
    const tag = ObjectPrototype.toString(new ctor(dummy));
    arrayBufferViewTypeToIndex.set(tag, i);
const bufferConstructorIndex = arrayBufferViewTypes.push(FastBuffer) - 1;
class DefaultSerializer extends Serializer {
  constructor() {
    super();
    this._setTreatArrayBufferViewsAsHostObjects(true);
  _writeHostObject(abView) {
    let i = 0;
    if (abView.constructor === Buffer) {
      i = bufferConstructorIndex;
    } else {
      const tag = ObjectPrototype.toString(abView);
      i = arrayBufferViewTypeToIndex.get(tag);
      if (i === undefined) {
        throw new this._getDataCloneError(`Unknown host object type: ${tag}`);
      }
    }
    this.writeUint32(i);
    this.writeUint32(abView.byteLength);
    this.writeRawBytes(new Uint8Array(abView.buffer,
                                      abView.byteOffset,
                                      abView.byteLength));
class DefaultDeserializer extends Deserializer {
  _readHostObject() {
    const typeIndex = this.readUint32();
    const ctor = arrayBufferViewTypes[typeIndex];
    const byteLength = this.readUint32();
    const byteOffset = this._readRawBytes(byteLength);
    const BYTES_PER_ELEMENT = ctor.BYTES_PER_ELEMENT || 1;
    const offset = this.buffer.byteOffset + byteOffset;
    if (offset % BYTES_PER_ELEMENT === 0) {
      return new ctor(this.buffer.buffer,
                      offset,
                      byteLength / BYTES_PER_ELEMENT);
    } else {
      // Copy to an aligned buffer first.
      const buffer_copy = Buffer.allocUnsafe(byteLength);
      copy(this.buffer, buffer_copy, 0, byteOffset, byteOffset + byteLength);
      return new ctor(buffer_copy.buffer,
                      buffer_copy.byteOffset,
                      byteLength / BYTES_PER_ELEMENT);
    }
function serialize(value) {
  const ser = new DefaultSerializer();
  ser.writeHeader();
  ser.writeValue(value);
  return ser.releaseBuffer();
function deserialize(buffer) {
  const der = new DefaultDeserializer(buffer);
  der.readHeader();
  return der.readValue();
module.exports = {
  cachedDataVersionTag,
  getHeapSnapshot,
  getHeapStatistics,
  getHeapSpaceStatistics,
  getHeapCodeStatistics,
  setFlagsFromString,
  Serializer,
  Deserializer,
  DefaultSerializer,
  DefaultDeserializer,
  deserialize,
  serialize,
  writeHeapSnapshot
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Array, ArrayPrototype } = primordials;
const {
  ContextifyScript,
  makeContext,
  isContext: _isContext,
  compileFunction: _compileFunction
} = internalBinding('contextify');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_VM_MODULE_NOT_MODULE,
} = require('internal/errors').codes;
const {
  isModuleNamespaceObject,
  isArrayBufferView,
} = require('internal/util/types');
const {
  validateInt32,
  validateUint32,
  validateString
} = require('internal/validators');
const { kVmBreakFirstLineSymbol } = require('internal/util');
const kParsingContext = Symbol('script parsing context');
class Script extends ContextifyScript {
  constructor(code, options = {}) {
    code = `${code}`;
    if (typeof options === 'string') {
      options = { filename: options };
    } else if (typeof options !== 'object' || options === null) {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    const {
      filename = 'evalmachine.<anonymous>',
      lineOffset = 0,
      columnOffset = 0,
      cachedData,
      produceCachedData = false,
      importModuleDynamically,
      [kParsingContext]: parsingContext,
    } = options;
    validateString(filename, 'options.filename');
    validateInt32(lineOffset, 'options.lineOffset');
    validateInt32(columnOffset, 'options.columnOffset');
    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {
      throw new ERR_INVALID_ARG_TYPE(
        'options.cachedData',
        ['Buffer', 'TypedArray', 'DataView'],
        cachedData
      );
    }
    if (typeof produceCachedData !== 'boolean') {
      throw new ERR_INVALID_ARG_TYPE('options.produceCachedData', 'boolean',
                                     produceCachedData);
    }
    // Calling `ReThrow()` on a native TryCatch does not generate a new
    // abort-on-uncaught-exception check. A dummy try/catch in JS land
    // protects against that.
    try { // eslint-disable-line no-useless-catch
      super(code,
            filename,
            lineOffset,
            columnOffset,
            cachedData,
            produceCachedData,
            parsingContext);
    } catch (e) {
      throw e; /* node-do-not-add-exception-line */
    }
    if (importModuleDynamically !== undefined) {
      if (typeof importModuleDynamically !== 'function') {
        throw new ERR_INVALID_ARG_TYPE('options.importModuleDynamically',
                                       'function',
                                       importModuleDynamically);
      }
      const { wrapMap, linkingStatusMap } =
        require('internal/vm/source_text_module');
      const { callbackMap } = internalBinding('module_wrap');
      callbackMap.set(this, { importModuleDynamically: async (...args) => {
        const m = await importModuleDynamically(...args);
        if (isModuleNamespaceObject(m)) {
          return m;
        }
        if (!m || !wrapMap.has(m))
          throw new ERR_VM_MODULE_NOT_MODULE();
        const childLinkingStatus = linkingStatusMap.get(m);
        if (childLinkingStatus === 'errored')
          throw m.error;
        return m.namespace;
      } });
    }
  runInThisContext(options) {
    const { breakOnSigint, args } = getRunInContextArgs(options);
    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {
      return sigintHandlersWrap(super.runInThisContext, this, args);
    } else {
      return super.runInThisContext(...args);
    }
  runInContext(contextifiedSandbox, options) {
    validateContext(contextifiedSandbox);
    const { breakOnSigint, args } = getRunInContextArgs(options);
    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {
      return sigintHandlersWrap(super.runInContext, this,
                                [contextifiedSandbox, ...args]);
    } else {
      return super.runInContext(contextifiedSandbox, ...args);
    }
  runInNewContext(sandbox, options) {
    const context = createContext(sandbox, getContextOptions(options));
    return this.runInContext(context, options);
function validateContext(sandbox) {
  if (typeof sandbox !== 'object' || sandbox === null) {
    throw new ERR_INVALID_ARG_TYPE('contextifiedSandbox', 'Object', sandbox);
  if (!_isContext(sandbox)) {
    throw new ERR_INVALID_ARG_TYPE('contextifiedSandbox', 'vm.Context',
                                   sandbox);
function validateBool(prop, propName) {
  if (prop !== undefined && typeof prop !== 'boolean')
    throw new ERR_INVALID_ARG_TYPE(propName, 'boolean', prop);
function validateObject(prop, propName) {
  if (prop !== undefined && (typeof prop !== 'object' || prop === null))
    throw new ERR_INVALID_ARG_TYPE(propName, 'Object', prop);
function getRunInContextArgs(options = {}) {
  if (typeof options !== 'object' || options === null) {
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  let timeout = options.timeout;
  if (timeout === undefined) {
    timeout = -1;
  } else {
    validateUint32(timeout, 'options.timeout', true);
  const {
    displayErrors = true,
    breakOnSigint = false,
    [kVmBreakFirstLineSymbol]: breakFirstLine = false,
  } = options;
  if (typeof displayErrors !== 'boolean') {
    throw new ERR_INVALID_ARG_TYPE('options.displayErrors', 'boolean',
                                   displayErrors);
  if (typeof breakOnSigint !== 'boolean') {
    throw new ERR_INVALID_ARG_TYPE('options.breakOnSigint', 'boolean',
                                   breakOnSigint);
  return {
    breakOnSigint,
    args: [timeout, displayErrors, breakOnSigint, breakFirstLine]
  };
function getContextOptions(options) {
  if (options) {
    validateObject(options.contextCodeGeneration,
                   'options.contextCodeGeneration');
    const contextOptions = {
      name: options.contextName,
      origin: options.contextOrigin,
      codeGeneration: typeof options.contextCodeGeneration === 'object' ? {
        strings: options.contextCodeGeneration.strings,
        wasm: options.contextCodeGeneration.wasm,
      } : undefined,
    };
    if (contextOptions.name !== undefined)
      validateString(contextOptions.name, 'options.contextName');
    if (contextOptions.origin !== undefined)
      validateString(contextOptions.origin, 'options.contextOrigin');
    if (contextOptions.codeGeneration) {
      validateBool(contextOptions.codeGeneration.strings,
                   'options.contextCodeGeneration.strings');
      validateBool(contextOptions.codeGeneration.wasm,
                   'options.contextCodeGeneration.wasm');
    }
    return contextOptions;
  return {};
function isContext(sandbox) {
  if (typeof sandbox !== 'object' || sandbox === null) {
    throw new ERR_INVALID_ARG_TYPE('sandbox', 'Object', sandbox);
  return _isContext(sandbox);
let defaultContextNameIndex = 1;
function createContext(sandbox = {}, options = {}) {
  if (isContext(sandbox)) {
    return sandbox;
  if (typeof options !== 'object' || options === null) {
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  const {
    name = `VM Context ${defaultContextNameIndex++}`,
    origin,
    codeGeneration
  } = options;
  validateString(name, 'options.name');
  if (origin !== undefined)
    validateString(origin, 'options.origin');
  validateObject(codeGeneration, 'options.codeGeneration');
  let strings = true;
  let wasm = true;
  if (codeGeneration !== undefined) {
    ({ strings = true, wasm = true } = codeGeneration);
    validateBool(strings, 'options.codeGeneration.strings');
    validateBool(wasm, 'options.codeGeneration.wasm');
  makeContext(sandbox, name, origin, strings, wasm);
  return sandbox;
function createScript(code, options) {
  return new Script(code, options);
// Remove all SIGINT listeners and re-attach them after the wrapped function
// has executed, so that caught SIGINT are handled by the listeners again.
function sigintHandlersWrap(fn, thisArg, argsArray) {
  const sigintListeners = process.rawListeners('SIGINT');
  process.removeAllListeners('SIGINT');
  try {
    return fn.apply(thisArg, argsArray);
  } finally {
    // Add using the public methods so that the `newListener` handler of
    // process can re-attach the listeners.
    for (const listener of sigintListeners) {
      process.addListener('SIGINT', listener);
    }
function runInContext(code, contextifiedSandbox, options) {
  validateContext(contextifiedSandbox);
  if (typeof options === 'string') {
    options = {
      filename: options,
      [kParsingContext]: contextifiedSandbox
    };
  } else {
    options = { ...options, [kParsingContext]: contextifiedSandbox };
  return createScript(code, options)
    .runInContext(contextifiedSandbox, options);
function runInNewContext(code, sandbox, options) {
  if (typeof options === 'string') {
    options = { filename: options };
  sandbox = createContext(sandbox, getContextOptions(options));
  options = { ...options, [kParsingContext]: sandbox };
  return createScript(code, options).runInNewContext(sandbox, options);
function runInThisContext(code, options) {
  if (typeof options === 'string') {
    options = { filename: options };
  return createScript(code, options).runInThisContext(options);
function compileFunction(code, params, options = {}) {
  validateString(code, 'code');
  if (params !== undefined) {
    if (!Array.isArray(params)) {
      throw new ERR_INVALID_ARG_TYPE('params', 'Array', params);
    }
    ArrayPrototype.forEach(params,
                           (param, i) => validateString(param, `params[${i}]`));
  const {
    filename = '',
    columnOffset = 0,
    lineOffset = 0,
    cachedData = undefined,
    produceCachedData = false,
    parsingContext = undefined,
    contextExtensions = [],
  } = options;
  validateString(filename, 'options.filename');
  validateUint32(columnOffset, 'options.columnOffset');
  validateUint32(lineOffset, 'options.lineOffset');
  if (cachedData !== undefined && !isArrayBufferView(cachedData)) {
    throw new ERR_INVALID_ARG_TYPE(
      'options.cachedData',
      ['Buffer', 'TypedArray', 'DataView'],
      cachedData
    );
  if (typeof produceCachedData !== 'boolean') {
    throw new ERR_INVALID_ARG_TYPE(
      'options.produceCachedData',
      'boolean',
      produceCachedData
    );
  if (parsingContext !== undefined) {
    if (
      typeof parsingContext !== 'object' ||
      parsingContext === null ||
      !isContext(parsingContext)
    ) {
      throw new ERR_INVALID_ARG_TYPE(
        'options.parsingContext',
        'Context',
        parsingContext
      );
    }
  if (!Array.isArray(contextExtensions)) {
    throw new ERR_INVALID_ARG_TYPE(
      'options.contextExtensions',
      'Array',
      contextExtensions
    );
  ArrayPrototype.forEach(contextExtensions, (extension, i) => {
    if (typeof extension !== 'object') {
      throw new ERR_INVALID_ARG_TYPE(
        `options.contextExtensions[${i}]`,
        'object',
        extension
      );
    }
  });
  const result = _compileFunction(
    code,
    filename,
    lineOffset,
    columnOffset,
    cachedData,
    produceCachedData,
    parsingContext,
    contextExtensions,
    params
  );
  if (produceCachedData) {
    result.function.cachedDataProduced = result.cachedDataProduced;
  if (result.cachedData) {
    result.function.cachedData = result.cachedData;
  return result.function;
module.exports = {
  Script,
  createContext,
  createScript,
  runInContext,
  runInNewContext,
  runInThisContext,
  isContext,
  compileFunction,
if (require('internal/options').getOptionValue('--experimental-vm-modules')) {
  const { SourceTextModule } = require('internal/vm/source_text_module');
  module.exports.SourceTextModule = SourceTextModule;
'use strict';
const {
  isMainThread,
  SHARE_ENV,
  threadId,
  Worker
} = require('internal/worker');
const {
  MessagePort,
  MessageChannel,
  moveMessagePortToContext,
  receiveMessageOnPort
} = require('internal/worker/io');
module.exports = {
  isMainThread,
  MessagePort,
  MessageChannel,
  moveMessagePortToContext,
  receiveMessageOnPort,
  threadId,
  SHARE_ENV,
  Worker,
  parentPort: null,
  workerData: null,
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const { Math, Object } = primordials;
const {
  codes: {
    ERR_BROTLI_INVALID_PARAM,
    ERR_BUFFER_TOO_LARGE,
    ERR_INVALID_ARG_TYPE,
    ERR_OUT_OF_RANGE,
    ERR_ZLIB_INITIALIZATION_FAILED,
  },
  hideStackFrames
} = require('internal/errors');
const Transform = require('_stream_transform');
const {
  deprecate
} = require('internal/util');
const {
  isArrayBufferView,
  isAnyArrayBuffer
} = require('internal/util/types');
const binding = internalBinding('zlib');
const assert = require('internal/assert');
const {
  Buffer,
  kMaxLength
} = require('buffer');
const { owner_symbol } = require('internal/async_hooks').symbols;
const kFlushFlag = Symbol('kFlushFlag');
const constants = internalBinding('constants').zlib;
const {
  // Zlib flush levels
  Z_NO_FLUSH, Z_BLOCK, Z_PARTIAL_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,
  // Zlib option values
  Z_MIN_CHUNK, Z_MIN_WINDOWBITS, Z_MAX_WINDOWBITS, Z_MIN_LEVEL, Z_MAX_LEVEL,
  Z_MIN_MEMLEVEL, Z_MAX_MEMLEVEL, Z_DEFAULT_CHUNK, Z_DEFAULT_COMPRESSION,
  Z_DEFAULT_STRATEGY, Z_DEFAULT_WINDOWBITS, Z_DEFAULT_MEMLEVEL, Z_FIXED,
  // Node's compression stream modes (node_zlib_mode)
  DEFLATE, DEFLATERAW, INFLATE, INFLATERAW, GZIP, GUNZIP, UNZIP,
  BROTLI_DECODE, BROTLI_ENCODE,
  // Brotli operations (~flush levels)
  BROTLI_OPERATION_PROCESS, BROTLI_OPERATION_FLUSH,
  BROTLI_OPERATION_FINISH
} = constants;
// Translation table for return codes.
const codes = {
  Z_OK: constants.Z_OK,
  Z_STREAM_END: constants.Z_STREAM_END,
  Z_NEED_DICT: constants.Z_NEED_DICT,
  Z_ERRNO: constants.Z_ERRNO,
  Z_STREAM_ERROR: constants.Z_STREAM_ERROR,
  Z_DATA_ERROR: constants.Z_DATA_ERROR,
  Z_MEM_ERROR: constants.Z_MEM_ERROR,
  Z_BUF_ERROR: constants.Z_BUF_ERROR,
  Z_VERSION_ERROR: constants.Z_VERSION_ERROR
const ckeys = Object.keys(codes);
for (var ck = 0; ck < ckeys.length; ck++) {
  var ckey = ckeys[ck];
  codes[codes[ckey]] = ckey;
function zlibBuffer(engine, buffer, callback) {
  if (typeof callback !== 'function')
    throw new ERR_INVALID_ARG_TYPE('callback', 'function', callback);
  // Streams do not support non-Buffer ArrayBufferViews yet. Convert it to a
  // Buffer without copying.
  if (isArrayBufferView(buffer) &&
      Object.getPrototypeOf(buffer) !== Buffer.prototype) {
    buffer = Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);
  } else if (isAnyArrayBuffer(buffer)) {
    buffer = Buffer.from(buffer);
  engine.buffers = null;
  engine.nread = 0;
  engine.cb = callback;
  engine.on('data', zlibBufferOnData);
  engine.on('error', zlibBufferOnError);
  engine.on('end', zlibBufferOnEnd);
  engine.end(buffer);
function zlibBufferOnData(chunk) {
  if (!this.buffers)
    this.buffers = [chunk];
  else
    this.buffers.push(chunk);
  this.nread += chunk.length;
function zlibBufferOnError(err) {
  this.removeAllListeners('end');
  this.cb(err);
function zlibBufferOnEnd() {
  var buf;
  var err;
  if (this.nread >= kMaxLength) {
    err = new ERR_BUFFER_TOO_LARGE();
  } else if (this.nread === 0) {
    buf = Buffer.alloc(0);
  } else {
    var bufs = this.buffers;
    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs, this.nread));
  this.close();
  if (err)
    this.cb(err);
  else if (this._info)
    this.cb(null, { buffer: buf, engine: this });
  else
    this.cb(null, buf);
function zlibBufferSync(engine, buffer) {
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer);
  } else if (!isArrayBufferView(buffer)) {
    if (isAnyArrayBuffer(buffer)) {
      buffer = Buffer.from(buffer);
    } else {
      throw new ERR_INVALID_ARG_TYPE(
        'buffer',
        ['string', 'Buffer', 'TypedArray', 'DataView', 'ArrayBuffer'],
        buffer
      );
    }
  buffer = processChunkSync(engine, buffer, engine._finishFlushFlag);
  if (engine._info)
    return { buffer, engine };
  return buffer;
function zlibOnError(message, errno, code) {
  const self = this[owner_symbol];
  // There is no way to cleanly recover.
  // Continuing only obscures problems.
  _close(self);
  self._hadError = true;
  // eslint-disable-next-line no-restricted-syntax
  const error = new Error(message);
  error.errno = errno;
  error.code = code;
  self.emit('error', error);
// 1. Returns false for undefined and NaN
// 2. Returns true for finite numbers
// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers
// 4. Throws ERR_OUT_OF_RANGE for infinite numbers
const checkFiniteNumber = hideStackFrames((number, name) => {
  // Common case
  if (number === undefined) {
    return false;
  if (Number.isFinite(number)) {
    return true; // Is a valid number
  if (Number.isNaN(number)) {
    return false;
  // Other non-numbers
  if (typeof number !== 'number') {
    throw new ERR_INVALID_ARG_TYPE(name, 'number', number);
  // Infinite numbers
  throw new ERR_OUT_OF_RANGE(name, 'a finite number', number);
// 1. Returns def for number when it's undefined or NaN
// 2. Returns number for finite numbers >= lower and <= upper
// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers
// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower
const checkRangesOrGetDefault = hideStackFrames(
  (number, name, lower, upper, def) => {
    if (!checkFiniteNumber(number, name)) {
      return def;
    }
    if (number < lower || number > upper) {
      throw new ERR_OUT_OF_RANGE(name,
                                 `>= ${lower} and <= ${upper}`, number);
    }
    return number;
// The base class for all Zlib-style streams.
function ZlibBase(opts, mode, handle, { flush, finishFlush, fullFlush }) {
  var chunkSize = Z_DEFAULT_CHUNK;
  // The ZlibBase class is not exported to user land, the mode should only be
  // passed in by us.
  assert(typeof mode === 'number');
  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);
  if (opts) {
    chunkSize = opts.chunkSize;
    if (!checkFiniteNumber(chunkSize, 'options.chunkSize')) {
      chunkSize = Z_DEFAULT_CHUNK;
    } else if (chunkSize < Z_MIN_CHUNK) {
      throw new ERR_OUT_OF_RANGE('options.chunkSize',
                                 `>= ${Z_MIN_CHUNK}`, chunkSize);
    }
    flush = checkRangesOrGetDefault(
      opts.flush, 'options.flush',
      Z_NO_FLUSH, Z_BLOCK, flush);
    finishFlush = checkRangesOrGetDefault(
      opts.finishFlush, 'options.finishFlush',
      Z_NO_FLUSH, Z_BLOCK, finishFlush);
    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {
      opts = { ...opts };
      opts.encoding = null;
      opts.objectMode = false;
      opts.writableObjectMode = false;
    }
  Transform.call(this, opts);
  this._hadError = false;
  this.bytesWritten = 0;
  this._handle = handle;
  handle[owner_symbol] = this;
  // Used by processCallback() and zlibOnError()
  handle.onerror = zlibOnError;
  this._outBuffer = Buffer.allocUnsafe(chunkSize);
  this._outOffset = 0;
  this._chunkSize = chunkSize;
  this._defaultFlushFlag = flush;
  this._finishFlushFlag = finishFlush;
  this._defaultFullFlushFlag = fullFlush;
  this.once('end', this.close);
  this._info = opts && opts.info;
Object.setPrototypeOf(ZlibBase.prototype, Transform.prototype);
Object.setPrototypeOf(ZlibBase, Transform);
Object.defineProperty(ZlibBase.prototype, '_closed', {
  configurable: true,
  enumerable: true,
  get() {
    return !this._handle;
// `bytesRead` made sense as a name when looking from the zlib engine's
// perspective, but it is inconsistent with all other streams exposed by Node.js
// that have this concept, where it stands for the number of bytes read
// *from* the stream (that is, net.Socket/tls.Socket & file system streams).
Object.defineProperty(ZlibBase.prototype, 'bytesRead', {
  configurable: true,
  enumerable: true,
  get: deprecate(function() {
    return this.bytesWritten;
  }, 'zlib.bytesRead is deprecated and will change its meaning in the ' +
     'future. Use zlib.bytesWritten instead.', 'DEP0108'),
  set: deprecate(function(value) {
    this.bytesWritten = value;
  }, 'Setting zlib.bytesRead is deprecated. ' +
     'This feature will be removed in the future.', 'DEP0108')
ZlibBase.prototype.reset = function() {
  if (!this._handle)
    assert(false, 'zlib binding closed');
  return this._handle.reset();
// This is the _flush function called by the transform class,
// internally, when the last chunk has been written.
ZlibBase.prototype._flush = function(callback) {
  this._transform(Buffer.alloc(0), '', callback);
// If a flush is scheduled while another flush is still pending, a way to figure
// out which one is the "stronger" flush is needed.
// This is currently only used to figure out which flush flag to use for the
// last chunk.
// Roughly, the following holds:
// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <
//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH
const flushiness = [];
let i = 0;
const kFlushFlagList = [Z_NO_FLUSH, Z_BLOCK, Z_PARTIAL_FLUSH,
                        Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH];
for (const flushFlag of kFlushFlagList) {
  flushiness[flushFlag] = i++;
function maxFlush(a, b) {
  return flushiness[a] > flushiness[b] ? a : b;
// Set up a list of 'special' buffers that can be written using .write()
// from the .flush() code as a way of introducing flushing operations into the
// write sequence.
const kFlushBuffers = [];
  const dummyArrayBuffer = new ArrayBuffer();
  for (const flushFlag of kFlushFlagList) {
    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);
    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;
ZlibBase.prototype.flush = function(kind, callback) {
  const ws = this._writableState;
  if (typeof kind === 'function' || (kind === undefined && !callback)) {
    callback = kind;
    kind = this._defaultFullFlushFlag;
  if (ws.ended) {
    if (callback)
      process.nextTick(callback);
  } else if (ws.ending) {
    if (callback)
      this.once('end', callback);
  } else {
    this.write(kFlushBuffers[kind], '', callback);
ZlibBase.prototype.close = function(callback) {
  _close(this, callback);
  this.destroy();
ZlibBase.prototype._destroy = function(err, callback) {
  _close(this);
  callback(err);
ZlibBase.prototype._transform = function(chunk, encoding, cb) {
  var flushFlag = this._defaultFlushFlag;
  // We use a 'fake' zero-length chunk to carry information about flushes from
  // the public API to the actual stream implementation.
  if (typeof chunk[kFlushFlag] === 'number') {
    flushFlag = chunk[kFlushFlag];
  // For the last chunk, also apply `_finishFlushFlag`.
  const ws = this._writableState;
  if ((ws.ending || ws.ended) && ws.length === chunk.byteLength) {
    flushFlag = maxFlush(flushFlag, this._finishFlushFlag);
  processChunk(this, chunk, flushFlag, cb);
ZlibBase.prototype._processChunk = function(chunk, flushFlag, cb) {
  // _processChunk() is left for backwards compatibility
  if (typeof cb === 'function')
    processChunk(this, chunk, flushFlag, cb);
  else
    return processChunkSync(this, chunk, flushFlag);
function processChunkSync(self, chunk, flushFlag) {
  var availInBefore = chunk.byteLength;
  var availOutBefore = self._chunkSize - self._outOffset;
  var inOff = 0;
  var availOutAfter;
  var availInAfter;
  var buffers = null;
  var nread = 0;
  var inputRead = 0;
  const state = self._writeState;
  const handle = self._handle;
  var buffer = self._outBuffer;
  var offset = self._outOffset;
  const chunkSize = self._chunkSize;
  var error;
  self.on('error', function onError(er) {
    error = er;
  });
  while (true) {
    handle.writeSync(flushFlag,
                     chunk, // in
                     inOff, // in_off
                     availInBefore, // in_len
                     buffer, // out
                     offset, // out_off
                     availOutBefore); // out_len
    if (error)
      throw error;
    availOutAfter = state[0];
    availInAfter = state[1];
    var inDelta = (availInBefore - availInAfter);
    inputRead += inDelta;
    var have = availOutBefore - availOutAfter;
    if (have > 0) {
      var out = buffer.slice(offset, offset + have);
      offset += have;
      if (!buffers)
        buffers = [out];
      else
        buffers.push(out);
      nread += out.byteLength;
    } else {
      assert(have === 0, 'have should not go down');
    }
    // Exhausted the output buffer, or used all the input create a new one.
    if (availOutAfter === 0 || offset >= chunkSize) {
      availOutBefore = chunkSize;
      offset = 0;
      buffer = Buffer.allocUnsafe(chunkSize);
    }
    if (availOutAfter === 0) {
      // Not actually done. Need to reprocess.
      // Also, update the availInBefore to the availInAfter value,
      // so that if we have to hit it a third (fourth, etc.) time,
      // it'll have the correct byte counts.
      inOff += inDelta;
      availInBefore = availInAfter;
    } else {
      break;
    }
  self.bytesWritten = inputRead;
  _close(self);
  if (nread >= kMaxLength) {
    throw new ERR_BUFFER_TOO_LARGE();
  if (nread === 0)
    return Buffer.alloc(0);
  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers, nread));
function processChunk(self, chunk, flushFlag, cb) {
  const handle = self._handle;
  assert(handle, 'zlib binding closed');
  handle.buffer = chunk;
  handle.cb = cb;
  handle.availOutBefore = self._chunkSize - self._outOffset;
  handle.availInBefore = chunk.byteLength;
  handle.inOff = 0;
  handle.flushFlag = flushFlag;
  handle.write(flushFlag,
               chunk, // in
               0, // in_off
               handle.availInBefore, // in_len
               self._outBuffer, // out
               self._outOffset, // out_off
               handle.availOutBefore); // out_len
function processCallback() {
  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is
  // important to null out the values once they are no longer needed since
  // `_handle` can stay in memory long after the buffer is needed.
  const handle = this;
  const self = this[owner_symbol];
  const state = self._writeState;
  if (self._hadError) {
    this.buffer = null;
    return;
  if (self.destroyed) {
    this.buffer = null;
    return;
  const availOutAfter = state[0];
  const availInAfter = state[1];
  const inDelta = handle.availInBefore - availInAfter;
  self.bytesWritten += inDelta;
  const have = handle.availOutBefore - availOutAfter;
  if (have > 0) {
    var out = self._outBuffer.slice(self._outOffset, self._outOffset + have);
    self._outOffset += have;
    self.push(out);
  } else {
    assert(have === 0, 'have should not go down');
  if (self.destroyed) {
    return;
  // Exhausted the output buffer, or used all the input create a new one.
  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {
    handle.availOutBefore = self._chunkSize;
    self._outOffset = 0;
    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);
  if (availOutAfter === 0) {
    // Not actually done. Need to reprocess.
    // Also, update the availInBefore to the availInAfter value,
    // so that if we have to hit it a third (fourth, etc.) time,
    // it'll have the correct byte counts.
    handle.inOff += inDelta;
    handle.availInBefore = availInAfter;
    this.write(handle.flushFlag,
               this.buffer, // in
               handle.inOff, // in_off
               handle.availInBefore, // in_len
               self._outBuffer, // out
               self._outOffset, // out_off
               self._chunkSize); // out_len
    return;
  if (availInAfter > 0) {
    // If we have more input that should be written, but we also have output
    // space available, that means that the compression library was not
    // interested in receiving more data, and in particular that the input
    // stream has ended early.
    // This applies to streams where we don't check data past the end of
    // what was consumed; that is, everything except Gunzip/Unzip.
    self.push(null);
  // Finished with the chunk.
  this.buffer = null;
  this.cb();
function _close(engine, callback) {
  if (callback)
    process.nextTick(callback);
  // Caller may invoke .close after a zlib error (which will null _handle).
  if (!engine._handle)
    return;
  engine._handle.close();
  engine._handle = null;
const zlibDefaultOpts = {
  flush: Z_NO_FLUSH,
  finishFlush: Z_FINISH,
  fullFlush: Z_FULL_FLUSH
// Base class for all streams actually backed by zlib and using zlib-specific
// parameters.
function Zlib(opts, mode) {
  var windowBits = Z_DEFAULT_WINDOWBITS;
  var level = Z_DEFAULT_COMPRESSION;
  var memLevel = Z_DEFAULT_MEMLEVEL;
  var strategy = Z_DEFAULT_STRATEGY;
  var dictionary;
  if (opts) {
    // windowBits is special. On the compression side, 0 is an invalid value.
    // But on the decompression side, a value of 0 for windowBits tells zlib
    // to use the window size in the zlib header of the compressed stream.
    if ((opts.windowBits == null || opts.windowBits === 0) &&
        (mode === INFLATE ||
         mode === GUNZIP ||
         mode === UNZIP)) {
      windowBits = 0;
    } else {
      windowBits = checkRangesOrGetDefault(
        opts.windowBits, 'options.windowBits',
        Z_MIN_WINDOWBITS, Z_MAX_WINDOWBITS, Z_DEFAULT_WINDOWBITS);
    }
    level = checkRangesOrGetDefault(
      opts.level, 'options.level',
      Z_MIN_LEVEL, Z_MAX_LEVEL, Z_DEFAULT_COMPRESSION);
    memLevel = checkRangesOrGetDefault(
      opts.memLevel, 'options.memLevel',
      Z_MIN_MEMLEVEL, Z_MAX_MEMLEVEL, Z_DEFAULT_MEMLEVEL);
    strategy = checkRangesOrGetDefault(
      opts.strategy, 'options.strategy',
      Z_DEFAULT_STRATEGY, Z_FIXED, Z_DEFAULT_STRATEGY);
    dictionary = opts.dictionary;
    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {
      if (isAnyArrayBuffer(dictionary)) {
        dictionary = Buffer.from(dictionary);
      } else {
        throw new ERR_INVALID_ARG_TYPE(
          'options.dictionary',
          ['Buffer', 'TypedArray', 'DataView', 'ArrayBuffer'],
          dictionary
        );
      }
    }
  const handle = new binding.Zlib(mode);
  // Ideally, we could let ZlibBase() set up _writeState. I haven't been able
  // to come up with a good solution that doesn't break our internal API,
  // and with it all supported npm versions at the time of writing.
  this._writeState = new Uint32Array(2);
  if (!handle.init(windowBits,
                   level,
                   memLevel,
                   strategy,
                   this._writeState,
                   processCallback,
                   dictionary)) {
    // TODO(addaleax): Sometimes we generate better error codes in C++ land,
    // e.g. ERR_BROTLI_PARAM_SET_FAILED -- it's hard to access them with
    // the current bindings setup, though.
    throw new ERR_ZLIB_INITIALIZATION_FAILED();
  ZlibBase.call(this, opts, mode, handle, zlibDefaultOpts);
  this._level = level;
  this._strategy = strategy;
Object.setPrototypeOf(Zlib.prototype, ZlibBase.prototype);
Object.setPrototypeOf(Zlib, ZlibBase);
// This callback is used by `.params()` to wait until a full flush happened
// before adjusting the parameters. In particular, the call to the native
// `params()` function should not happen while a write is currently in progress
// on the threadpool.
function paramsAfterFlushCallback(level, strategy, callback) {
  assert(this._handle, 'zlib binding closed');
  this._handle.params(level, strategy);
  if (!this._hadError) {
    this._level = level;
    this._strategy = strategy;
    if (callback) callback();
Zlib.prototype.params = function params(level, strategy, callback) {
  checkRangesOrGetDefault(level, 'level', Z_MIN_LEVEL, Z_MAX_LEVEL);
  checkRangesOrGetDefault(strategy, 'strategy', Z_DEFAULT_STRATEGY, Z_FIXED);
  if (this._level !== level || this._strategy !== strategy) {
    this.flush(Z_SYNC_FLUSH,
               paramsAfterFlushCallback.bind(this, level, strategy, callback));
  } else {
    process.nextTick(callback);
// generic zlib
// minimal 2-byte header
function Deflate(opts) {
  if (!(this instanceof Deflate))
    return new Deflate(opts);
  Zlib.call(this, opts, DEFLATE);
Object.setPrototypeOf(Deflate.prototype, Zlib.prototype);
Object.setPrototypeOf(Deflate, Zlib);
function Inflate(opts) {
  if (!(this instanceof Inflate))
    return new Inflate(opts);
  Zlib.call(this, opts, INFLATE);
Object.setPrototypeOf(Inflate.prototype, Zlib.prototype);
Object.setPrototypeOf(Inflate, Zlib);
function Gzip(opts) {
  if (!(this instanceof Gzip))
    return new Gzip(opts);
  Zlib.call(this, opts, GZIP);
Object.setPrototypeOf(Gzip.prototype, Zlib.prototype);
Object.setPrototypeOf(Gzip, Zlib);
function Gunzip(opts) {
  if (!(this instanceof Gunzip))
    return new Gunzip(opts);
  Zlib.call(this, opts, GUNZIP);
Object.setPrototypeOf(Gunzip.prototype, Zlib.prototype);
Object.setPrototypeOf(Gunzip, Zlib);
function DeflateRaw(opts) {
  if (opts && opts.windowBits === 8) opts.windowBits = 9;
  if (!(this instanceof DeflateRaw))
    return new DeflateRaw(opts);
  Zlib.call(this, opts, DEFLATERAW);
Object.setPrototypeOf(DeflateRaw.prototype, Zlib.prototype);
Object.setPrototypeOf(DeflateRaw, Zlib);
function InflateRaw(opts) {
  if (!(this instanceof InflateRaw))
    return new InflateRaw(opts);
  Zlib.call(this, opts, INFLATERAW);
Object.setPrototypeOf(InflateRaw.prototype, Zlib.prototype);
Object.setPrototypeOf(InflateRaw, Zlib);
function Unzip(opts) {
  if (!(this instanceof Unzip))
    return new Unzip(opts);
  Zlib.call(this, opts, UNZIP);
Object.setPrototypeOf(Unzip.prototype, Zlib.prototype);
Object.setPrototypeOf(Unzip, Zlib);
function createConvenienceMethod(ctor, sync) {
  if (sync) {
    return function syncBufferWrapper(buffer, opts) {
      return zlibBufferSync(new ctor(opts), buffer);
    };
  } else {
    return function asyncBufferWrapper(buffer, opts, callback) {
      if (typeof opts === 'function') {
        callback = opts;
        opts = {};
      }
      return zlibBuffer(new ctor(opts), buffer, callback);
    };
const kMaxBrotliParam = Math.max(...Object.keys(constants).map((key) => {
  return key.startsWith('BROTLI_PARAM_') ? constants[key] : 0;
}));
const brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);
const brotliDefaultOpts = {
  flush: BROTLI_OPERATION_PROCESS,
  finishFlush: BROTLI_OPERATION_FINISH,
  fullFlush: BROTLI_OPERATION_FLUSH
function Brotli(opts, mode) {
  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);
  brotliInitParamsArray.fill(-1);
  if (opts && opts.params) {
    for (const origKey of Object.keys(opts.params)) {
      const key = +origKey;
      if (Number.isNaN(key) || key < 0 || key > kMaxBrotliParam ||
          (brotliInitParamsArray[key] | 0) !== -1) {
        throw new ERR_BROTLI_INVALID_PARAM(origKey);
      }
      const value = opts.params[origKey];
      if (typeof value !== 'number' && typeof value !== 'boolean') {
        throw new ERR_INVALID_ARG_TYPE('options.params[key]',
                                       'number', opts.params[origKey]);
      }
      brotliInitParamsArray[key] = value;
    }
  const handle = mode === BROTLI_DECODE ?
    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);
  this._writeState = new Uint32Array(2);
  if (!handle.init(brotliInitParamsArray,
                   this._writeState,
                   processCallback)) {
    throw new ERR_ZLIB_INITIALIZATION_FAILED();
  ZlibBase.call(this, opts, mode, handle, brotliDefaultOpts);
Object.setPrototypeOf(Brotli.prototype, Zlib.prototype);
Object.setPrototypeOf(Brotli, Zlib);
function BrotliCompress(opts) {
  if (!(this instanceof BrotliCompress))
    return new BrotliCompress(opts);
  Brotli.call(this, opts, BROTLI_ENCODE);
Object.setPrototypeOf(BrotliCompress.prototype, Brotli.prototype);
Object.setPrototypeOf(BrotliCompress, Brotli);
function BrotliDecompress(opts) {
  if (!(this instanceof BrotliDecompress))
    return new BrotliDecompress(opts);
  Brotli.call(this, opts, BROTLI_DECODE);
Object.setPrototypeOf(BrotliDecompress.prototype, Brotli.prototype);
Object.setPrototypeOf(BrotliDecompress, Brotli);
function createProperty(ctor) {
  return {
    configurable: true,
    enumerable: true,
    value: function(options) {
      return new ctor(options);
    }
  };
// Legacy alias on the C++ wrapper object. This is not public API, so we may
// want to runtime-deprecate it at some point. There's no hurry, though.
Object.defineProperty(binding.Zlib.prototype, 'jsref', {
  get() { return this[owner_symbol]; },
  set(v) { return this[owner_symbol] = v; }
module.exports = {
  Deflate,
  Inflate,
  Gzip,
  Gunzip,
  DeflateRaw,
  InflateRaw,
  Unzip,
  BrotliCompress,
  BrotliDecompress,
  // Convenience methods.
  // compress/decompress a string or buffer in one step.
  deflate: createConvenienceMethod(Deflate, false),
  deflateSync: createConvenienceMethod(Deflate, true),
  gzip: createConvenienceMethod(Gzip, false),
  gzipSync: createConvenienceMethod(Gzip, true),
  deflateRaw: createConvenienceMethod(DeflateRaw, false),
  deflateRawSync: createConvenienceMethod(DeflateRaw, true),
  unzip: createConvenienceMethod(Unzip, false),
  unzipSync: createConvenienceMethod(Unzip, true),
  inflate: createConvenienceMethod(Inflate, false),
  inflateSync: createConvenienceMethod(Inflate, true),
  gunzip: createConvenienceMethod(Gunzip, false),
  gunzipSync: createConvenienceMethod(Gunzip, true),
  inflateRaw: createConvenienceMethod(InflateRaw, false),
  inflateRawSync: createConvenienceMethod(InflateRaw, true),
  brotliCompress: createConvenienceMethod(BrotliCompress, false),
  brotliCompressSync: createConvenienceMethod(BrotliCompress, true),
  brotliDecompress: createConvenienceMethod(BrotliDecompress, false),
  brotliDecompressSync: createConvenienceMethod(BrotliDecompress, true),
Object.defineProperties(module.exports, {
  createDeflate: createProperty(Deflate),
  createInflate: createProperty(Inflate),
  createDeflateRaw: createProperty(DeflateRaw),
  createInflateRaw: createProperty(InflateRaw),
  createGzip: createProperty(Gzip),
  createGunzip: createProperty(Gunzip),
  createUnzip: createProperty(Unzip),
  createBrotliCompress: createProperty(BrotliCompress),
  createBrotliDecompress: createProperty(BrotliDecompress),
  constants: {
    configurable: false,
    enumerable: true,
    value: constants
  },
  codes: {
    enumerable: true,
    writable: false,
    value: Object.freeze(codes)
// These should be considered deprecated
// expose all the zlib constants
const bkeys = Object.keys(constants);
for (var bk = 0; bk < bkeys.length; bk++) {
  var bkey = bkeys[bk];
  if (bkey.startsWith('BROTLI')) continue;
  Object.defineProperty(module.exports, bkey, {
    enumerable: false, value: constants[bkey], writable: false
  });
'use strict';
let error;
function lazyError() {
  if (!error) {
    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;
  return error;
function assert(value, message) {
  if (!value) {
    const ERR_INTERNAL_ASSERTION = lazyError();
    throw new ERR_INTERNAL_ASSERTION(message);
function fail(message) {
  const ERR_INTERNAL_ASSERTION = lazyError();
  throw new ERR_INTERNAL_ASSERTION(message);
assert.fail = fail;
module.exports = assert;
'use strict';
const { Math, Object } = primordials;
const { inspect } = require('internal/util/inspect');
const { codes: {
  ERR_INVALID_ARG_TYPE
} } = require('internal/errors');
let blue = '';
let green = '';
let red = '';
let white = '';
const kReadableOperator = {
  deepStrictEqual: 'Expected values to be strictly deep-equal:',
  strictEqual: 'Expected values to be strictly equal:',
  strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
  deepEqual: 'Expected values to be loosely deep-equal:',
  notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
  notStrictEqual: 'Expected "actual" to be strictly unequal to:',
  notStrictEqualObject:
    'Expected "actual" not to be reference-equal to "expected":',
  notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
  notIdentical: 'Values have same structure but are not reference-equal:',
  notDeepEqualUnequal: 'Expected values not to be loosely deep-equal:'
// Comparing short primitives should just show === / !== instead of using the
// diff.
const kMaxShortLength = 12;
function copyError(source) {
  const keys = Object.keys(source);
  const target = Object.create(Object.getPrototypeOf(source));
  for (const key of keys) {
    target[key] = source[key];
  Object.defineProperty(target, 'message', { value: source.message });
  return target;
function inspectValue(val) {
  // The util.inspect default values could be changed. This makes sure the
  // error messages contain the necessary information nevertheless.
  return inspect(
    val,
    {
      compact: false,
      customInspect: false,
      depth: 1000,
      maxArrayLength: Infinity,
      // Assert compares only enumerable properties (with a few exceptions).
      showHidden: false,
      // Assert does not detect proxies currently.
      showProxy: false,
      sorted: true,
      // Inspect getters as we also check them when comparing entries.
      getters: true,
    }
  );
function createErrDiff(actual, expected, operator) {
  let other = '';
  let res = '';
  let end = '';
  let skipped = false;
  const actualInspected = inspectValue(actual);
  const actualLines = actualInspected.split('\n');
  const expectedLines = inspectValue(expected).split('\n');
  let i = 0;
  let indicator = '';
  // In case both values are objects or functions explicitly mark them as not
  // reference equal for the `strictEqual` operator.
  if (operator === 'strictEqual' &&
      ((typeof actual === 'object' && actual !== null &&
        typeof expected === 'object' && expected !== null) ||
       (typeof actual === 'function' && typeof expected === 'function'))) {
    operator = 'strictEqualObject';
  // If "actual" and "expected" fit on a single line and they are not strictly
  // equal, check further special handling.
  if (actualLines.length === 1 && expectedLines.length === 1 &&
    actualLines[0] !== expectedLines[0]) {
    const inputLength = actualLines[0].length + expectedLines[0].length;
    // If the character length of "actual" and "expected" together is less than
    // kMaxShortLength and if neither is an object and at least one of them is
    // not `zero`, use the strict equal comparison to visualize the output.
    if (inputLength <= kMaxShortLength) {
      if ((typeof actual !== 'object' || actual === null) &&
          (typeof expected !== 'object' || expected === null) &&
          (actual !== 0 || expected !== 0)) { // -0 === +0
        return `${kReadableOperator[operator]}\n\n` +
            `${actualLines[0]} !== ${expectedLines[0]}\n`;
      }
    } else if (operator !== 'strictEqualObject') {
      // If the stderr is a tty and the input length is lower than the current
      // columns per line, add a mismatch indicator below the output. If it is
      // not a tty, use a default value of 80 characters.
      const maxLength = process.stderr.isTTY ? process.stderr.columns : 80;
      if (inputLength < maxLength) {
        while (actualLines[0][i] === expectedLines[0][i]) {
          i++;
        }
        // Ignore the first characters.
        if (i > 2) {
          // Add position indicator for the first mismatch in case it is a
          // single line and the input length is less than the column length.
          indicator = `\n  ${' '.repeat(i)}^`;
          i = 0;
        }
      }
    }
  // Remove all ending lines that match (this optimizes the output for
  // readability by reducing the number of total changed lines).
  let a = actualLines[actualLines.length - 1];
  let b = expectedLines[expectedLines.length - 1];
  while (a === b) {
    if (i++ < 3) {
      end = `\n  ${a}${end}`;
    } else {
      other = a;
    }
    actualLines.pop();
    expectedLines.pop();
    if (actualLines.length === 0 || expectedLines.length === 0)
      break;
    a = actualLines[actualLines.length - 1];
    b = expectedLines[expectedLines.length - 1];
  const maxLines = Math.max(actualLines.length, expectedLines.length);
  // Strict equal with identical objects that are not identical by reference.
  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })
  if (maxLines === 0) {
    // We have to get the result again. The lines were all removed before.
    const actualLines = actualInspected.split('\n');
    // Only remove lines in case it makes sense to collapse those.
    // TODO: Accept env to always show the full error.
    if (actualLines.length > 50) {
      actualLines[46] = `${blue}...${white}`;
      while (actualLines.length > 47) {
        actualLines.pop();
      }
    }
    return `${kReadableOperator.notIdentical}\n\n${actualLines.join('\n')}\n`;
  // There were at least five identical lines at the end. Mark a couple of
  // skipped.
  if (i >= 5) {
    end = `\n${blue}...${white}${end}`;
    skipped = true;
  if (other !== '') {
    end = `\n  ${other}${end}`;
    other = '';
  let printedLines = 0;
  let identical = 0;
  const msg = kReadableOperator[operator] +
        `\n${green}+ actual${white} ${red}- expected${white}`;
  const skippedMsg = ` ${blue}...${white} Lines skipped`;
  let lines = actualLines;
  let plusMinus = `${green}+${white}`;
  let maxLength = expectedLines.length;
  if (actualLines.length < maxLines) {
    lines = expectedLines;
    plusMinus = `${red}-${white}`;
    maxLength = actualLines.length;
  for (i = 0; i < maxLines; i++) {
    if (maxLength < i + 1) {
      // If more than two former lines are identical, print them. Collapse them
      // in case more than five lines were identical.
      if (identical > 2) {
        if (identical > 3) {
          if (identical > 4) {
            if (identical === 5) {
              res += `\n  ${lines[i - 3]}`;
              printedLines++;
            } else {
              res += `\n${blue}...${white}`;
              skipped = true;
            }
          }
          res += `\n  ${lines[i - 2]}`;
          printedLines++;
        }
        res += `\n  ${lines[i - 1]}`;
        printedLines++;
      }
      // No identical lines before.
      identical = 0;
      // Add the expected line to the cache.
      if (lines === actualLines) {
        res += `\n${plusMinus} ${lines[i]}`;
      } else {
        other += `\n${plusMinus} ${lines[i]}`;
      }
      printedLines++;
    // Only extra actual lines exist
    // Lines diverge
    } else {
      const expectedLine = expectedLines[i];
      let actualLine = actualLines[i];
      // If the lines diverge, specifically check for lines that only diverge by
      // a trailing comma. In that case it is actually identical and we should
      // mark it as such.
      let divergingLines = actualLine !== expectedLine &&
                           (!actualLine.endsWith(',') ||
                            actualLine.slice(0, -1) !== expectedLine);
      // If the expected line has a trailing comma but is otherwise identical,
      // add a comma at the end of the actual line. Otherwise the output could
      // look weird as in:
      //
      //   [
      //     1         // No comma at the end!
      // +   2
      //   ]
      //
      if (divergingLines &&
          expectedLine.endsWith(',') &&
          expectedLine.slice(0, -1) === actualLine) {
        divergingLines = false;
        actualLine += ',';
      }
      if (divergingLines) {
        // If more than two former lines are identical, print them. Collapse
        // them in case more than five lines were identical.
        if (identical > 2) {
          if (identical > 3) {
            if (identical > 4) {
              if (identical === 5) {
                res += `\n  ${actualLines[i - 3]}`;
                printedLines++;
              } else {
                res += `\n${blue}...${white}`;
                skipped = true;
              }
            }
            res += `\n  ${actualLines[i - 2]}`;
            printedLines++;
          }
          res += `\n  ${actualLines[i - 1]}`;
          printedLines++;
        }
        // No identical lines before.
        identical = 0;
        // Add the actual line to the result and cache the expected diverging
        // line so consecutive diverging lines show up as +++--- and not +-+-+-.
        res += `\n${green}+${white} ${actualLine}`;
        other += `\n${red}-${white} ${expectedLine}`;
        printedLines += 2;
      // Lines are identical
      } else {
        // Add all cached information to the result before adding other things
        // and reset the cache.
        res += other;
        other = '';
        identical++;
        // The very first identical line since the last diverging line is be
        // added to the result.
        if (identical <= 2) {
          res += `\n  ${actualLine}`;
          printedLines++;
        }
      }
    }
    // Inspected object to big (Show ~50 rows max)
    if (printedLines > 50 && i < maxLines - 2) {
      return `${msg}${skippedMsg}\n${res}\n${blue}...${white}${other}\n` +
             `${blue}...${white}`;
    }
  return `${msg}${skipped ? skippedMsg : ''}\n${res}${other}${end}${indicator}`;
class AssertionError extends Error {
  constructor(options) {
    if (typeof options !== 'object' || options === null) {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    const {
      message,
      operator,
      stackStartFn,
      // Compatibility with older versions.
      stackStartFunction
    } = options;
    let {
      actual,
      expected
    } = options;
    const limit = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    if (message != null) {
      super(String(message));
    } else {
      if (process.stderr.isTTY) {
        // Reset on each call to make sure we handle dynamically set environment
        // variables correct.
        if (process.stderr.hasColors()) {
          blue = '\u001b[34m';
          green = '\u001b[32m';
          white = '\u001b[39m';
          red = '\u001b[31m';
        } else {
          blue = '';
          green = '';
          white = '';
          red = '';
        }
      }
      // Prevent the error stack from being visible by duplicating the error
      // in a very close way to the original in case both sides are actually
      // instances of Error.
      if (typeof actual === 'object' && actual !== null &&
          typeof expected === 'object' && expected !== null &&
          'stack' in actual && actual instanceof Error &&
          'stack' in expected && expected instanceof Error) {
        actual = copyError(actual);
        expected = copyError(expected);
      }
      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {
        super(createErrDiff(actual, expected, operator));
      } else if (operator === 'notDeepStrictEqual' ||
        operator === 'notStrictEqual') {
        // In case the objects are equal but the operator requires unequal, show
        // the first object and say A equals B
        let base = kReadableOperator[operator];
        const res = inspectValue(actual).split('\n');
        // In case "actual" is an object or a function, it should not be
        // reference equal.
        if (operator === 'notStrictEqual' &&
            (typeof actual === 'object' && actual !== null ||
             typeof actual === 'function')) {
          base = kReadableOperator.notStrictEqualObject;
        }
        // Only remove lines in case it makes sense to collapse those.
        // TODO: Accept env to always show the full error.
        if (res.length > 50) {
          res[46] = `${blue}...${white}`;
          while (res.length > 47) {
            res.pop();
          }
        }
        // Only print a single input.
        if (res.length === 1) {
          super(`${base}${res[0].length > 5 ? '\n\n' : ' '}${res[0]}`);
        } else {
          super(`${base}\n\n${res.join('\n')}\n`);
        }
      } else {
        let res = inspectValue(actual);
        let other = inspectValue(expected);
        const knownOperator = kReadableOperator[operator];
        if (operator === 'notDeepEqual' && res === other) {
          res = `${knownOperator}\n\n${res}`;
          if (res.length > 1024) {
            res = `${res.slice(0, 1021)}...`;
          }
          super(res);
        } else {
          if (res.length > 512) {
            res = `${res.slice(0, 509)}...`;
          }
          if (other.length > 512) {
            other = `${other.slice(0, 509)}...`;
          }
          if (operator === 'deepEqual') {
            res = `${knownOperator}\n\n${res}\n\nshould loosely deep-equal\n\n`;
          } else {
            const newOp = kReadableOperator[`${operator}Unequal`];
            if (newOp) {
              res = `${newOp}\n\n${res}\n\nshould not loosely deep-equal\n\n`;
            } else {
              other = ` ${operator} ${other}`;
            }
          }
          super(`${res}${other}`);
        }
      }
    }
    Error.stackTraceLimit = limit;
    this.generatedMessage = !message;
    Object.defineProperty(this, 'name', {
      value: 'AssertionError [ERR_ASSERTION]',
      enumerable: false,
      writable: true,
      configurable: true
    });
    this.code = 'ERR_ASSERTION';
    this.actual = actual;
    this.expected = expected;
    this.operator = operator;
    // eslint-disable-next-line no-restricted-syntax
    Error.captureStackTrace(this, stackStartFn || stackStartFunction);
    // Create error message including the error code in the name.
    this.stack;
    // Reset the name.
    this.name = 'AssertionError';
  toString() {
    return `${this.name} [${this.code}]: ${this.message}`;
  [inspect.custom](recurseTimes, ctx) {
    // Long strings should not be fully inspected.
    const tmpActual = this.actual;
    const tmpExpected = this.expected;
    for (const name of ['actual', 'expected']) {
      if (typeof this[name] === 'string') {
        const lines = this[name].split('\n');
        if (lines.length > 10) {
          lines.length = 10;
          this[name] = `${lines.join('\n')}\n...`;
        } else if (this[name].length > 512) {
          this[name] = `${this[name].slice(512)}...`;
        }
      }
    }
    // This limits the `actual` and `expected` property default inspection to
    // the minimum depth. Otherwise those values would be too verbose compared
    // to the actual error message which contains a combined view of these two
    // input values.
    const result = inspect(this, {
      ...ctx,
      customInspect: false,
      depth: 0
    });
    // Reset the properties after inspection.
    this.actual = tmpActual;
    this.expected = tmpExpected;
    return result;
module.exports = AssertionError;
'use strict';
const { FunctionPrototype, Object } = primordials;
const {
  ERR_ASYNC_TYPE,
  ERR_INVALID_ASYNC_ID
} = require('internal/errors').codes;
const async_wrap = internalBinding('async_wrap');
/* async_hook_fields is a Uint32Array wrapping the uint32_t array of
 * Environment::AsyncHooks::fields_[]. Each index tracks the number of active
 * hooks for each type.
 * async_id_fields is a Float64Array wrapping the double array of
 * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for
 * the various asynchronous states of the application. These are:
 *  kExecutionAsyncId: The async_id assigned to the resource responsible for the
 *    current execution stack.
 *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')
 *    the resource corresponding to the current execution stack.
 *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.
 *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor
 *    that sets the value of the init()'s triggerAsyncId. The precedence order
 *    of retrieving the triggerAsyncId value is:
 *    1. the value passed directly to the constructor
 *    2. value set in kDefaultTriggerAsyncId
 *    3. executionAsyncId of the current resource.
 * async_ids_stack is a Float64Array that contains part of the async ID
 * stack. Each pushAsyncIds() call adds two doubles to it, and each
 * popAsyncIds() call removes two doubles from it.
 * It has a fixed size, so if that is exceeded, calls to the native
 * side are used instead in pushAsyncIds() and popAsyncIds().
const { async_hook_fields, async_id_fields, owner_symbol } = async_wrap;
// Store the pair executionAsyncId and triggerAsyncId in a std::stack on
// Environment::AsyncHooks::async_ids_stack_ tracks the resource responsible for
// the current execution stack. This is unwound as each resource exits. In the
// case of a fatal exception this stack is emptied after calling each hook's
// after() callback.
const { pushAsyncIds: pushAsyncIds_, popAsyncIds: popAsyncIds_ } = async_wrap;
// For performance reasons, only track Promises when a hook is enabled.
const { enablePromiseHook, disablePromiseHook } = async_wrap;
// Properties in active_hooks are used to keep track of the set of hooks being
// executed in case another hook is enabled/disabled. The new set of hooks is
// then restored once the active set of hooks is finished executing.
const active_hooks = {
  // Array of all AsyncHooks that will be iterated whenever an async event
  // fires. Using var instead of (preferably const) in order to assign
  // active_hooks.tmp_array if a hook is enabled/disabled during hook
  // execution.
  array: [],
  // Use a counter to track nested calls of async hook callbacks and make sure
  // the active_hooks.array isn't altered mid execution.
  call_depth: 0,
  // Use to temporarily store and updated active_hooks.array if the user
  // enables or disables a hook while hooks are being processed. If a hook is
  // enabled() or disabled() during hook execution then the current set of
  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any
  // subsequent changes are on the duplicated array. When all hooks have
  // completed executing active_hooks.tmp_array is assigned to
  // active_hooks.array.
  tmp_array: null,
  // Keep track of the field counts held in active_hooks.tmp_array. Because the
  // async_hook_fields can't be reassigned, store each uint32 in an array that
  // is written back to async_hook_fields when active_hooks.array is restored.
  tmp_fields: null
const { registerDestroyHook } = async_wrap;
const { enqueueMicrotask } = internalBinding('task_queue');
// Each constant tracks how many callbacks there are for any given step of
// async execution. These are tracked so if the user didn't include callbacks
// for a given step, that step can bail out early.
const { kInit, kBefore, kAfter, kDestroy, kTotals, kPromiseResolve,
        kCheck, kExecutionAsyncId, kAsyncIdCounter, kTriggerAsyncId,
        kDefaultTriggerAsyncId, kStackLength } = async_wrap.constants;
// Used in AsyncHook and AsyncResource.
const async_id_symbol = Symbol('asyncId');
const trigger_async_id_symbol = Symbol('triggerAsyncId');
const init_symbol = Symbol('init');
const before_symbol = Symbol('before');
const after_symbol = Symbol('after');
const destroy_symbol = Symbol('destroy');
const promise_resolve_symbol = Symbol('promiseResolve');
const emitBeforeNative = emitHookFactory(before_symbol, 'emitBeforeNative');
const emitAfterNative = emitHookFactory(after_symbol, 'emitAfterNative');
const emitDestroyNative = emitHookFactory(destroy_symbol, 'emitDestroyNative');
const emitPromiseResolveNative =
    emitHookFactory(promise_resolve_symbol, 'emitPromiseResolveNative');
// Used to fatally abort the process if a callback throws.
function fatalError(e) {
  if (typeof e.stack === 'string') {
    process._rawDebug(e.stack);
  } else {
    const o = { message: e };
    // eslint-disable-next-line no-restricted-syntax
    Error.captureStackTrace(o, fatalError);
    process._rawDebug(o.stack);
  const { getOptionValue } = require('internal/options');
  if (getOptionValue('--abort-on-uncaught-exception')) {
    process.abort();
  process.exit(1);
function validateAsyncId(asyncId, type) {
  // Skip validation when async_hooks is disabled
  if (async_hook_fields[kCheck] <= 0) return;
  if (!Number.isSafeInteger(asyncId) || asyncId < -1) {
    fatalError(new ERR_INVALID_ASYNC_ID(type, asyncId));
// Emit From Native //
// Used by C++ to call all init() callbacks. Because some state can be setup
// from C++ there's no need to perform all the same operations as in
// emitInitScript.
function emitInitNative(asyncId, type, triggerAsyncId, resource) {
  active_hooks.call_depth += 1;
  // Use a single try/catch for all hooks to avoid setting up one per iteration.
  try {
    for (var i = 0; i < active_hooks.array.length; i++) {
      if (typeof active_hooks.array[i][init_symbol] === 'function') {
        active_hooks.array[i][init_symbol](
          asyncId, type, triggerAsyncId,
          resource
        );
      }
    }
  } catch (e) {
    fatalError(e);
  } finally {
    active_hooks.call_depth -= 1;
  // Hooks can only be restored if there have been no recursive hook calls.
  // Also the active hooks do not need to be restored if enable()/disable()
  // weren't called during hook execution, in which case active_hooks.tmp_array
  // will be null.
  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {
    restoreActiveHooks();
// Called from native. The asyncId stack handling is taken care of there
// before this is called.
function emitHook(symbol, asyncId) {
  active_hooks.call_depth += 1;
  // Use a single try/catch for all hook to avoid setting up one per
  // iteration.
  try {
    for (var i = 0; i < active_hooks.array.length; i++) {
      if (typeof active_hooks.array[i][symbol] === 'function') {
        active_hooks.array[i][symbol](asyncId);
      }
    }
  } catch (e) {
    fatalError(e);
  } finally {
    active_hooks.call_depth -= 1;
  // Hooks can only be restored if there have been no recursive hook calls.
  // Also the active hooks do not need to be restored if enable()/disable()
  // weren't called during hook execution, in which case
  // active_hooks.tmp_array will be null.
  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {
    restoreActiveHooks();
function emitHookFactory(symbol, name) {
  const fn = FunctionPrototype.bind(emitHook, undefined, symbol);
  // Set the name property of the function as it looks good in the stack trace.
  Object.defineProperty(fn, 'name', {
    value: name
  });
  return fn;
// Manage Active Hooks //
function getHookArrays() {
  if (active_hooks.call_depth === 0)
    return [active_hooks.array, async_hook_fields];
  // If this hook is being enabled while in the middle of processing the array
  // of currently active hooks then duplicate the current set of active hooks
  // and store this there. This shouldn't fire until the next time hooks are
  // processed.
  if (active_hooks.tmp_array === null)
    storeActiveHooks();
  return [active_hooks.tmp_array, active_hooks.tmp_fields];
function storeActiveHooks() {
  active_hooks.tmp_array = active_hooks.array.slice();
  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to
  // 4. So do this the long way.
  active_hooks.tmp_fields = [];
  copyHooks(active_hooks.tmp_fields, async_hook_fields);
function copyHooks(destination, source) {
  destination[kInit] = source[kInit];
  destination[kBefore] = source[kBefore];
  destination[kAfter] = source[kAfter];
  destination[kDestroy] = source[kDestroy];
  destination[kPromiseResolve] = source[kPromiseResolve];
// Then restore the correct hooks array in case any hooks were added/removed
// during hook callback execution.
function restoreActiveHooks() {
  active_hooks.array = active_hooks.tmp_array;
  copyHooks(async_hook_fields, active_hooks.tmp_fields);
  active_hooks.tmp_array = null;
  active_hooks.tmp_fields = null;
let wantPromiseHook = false;
function enableHooks() {
  async_hook_fields[kCheck] += 1;
  wantPromiseHook = true;
  enablePromiseHook();
function disableHooks() {
  async_hook_fields[kCheck] -= 1;
  wantPromiseHook = false;
  // Delay the call to `disablePromiseHook()` because we might currently be
  // between the `before` and `after` calls of a Promise.
  enqueueMicrotask(disablePromiseHookIfNecessary);
function disablePromiseHookIfNecessary() {
  if (!wantPromiseHook)
    disablePromiseHook();
// Internal Embedder API //
// Increment the internal id counter and return the value. Important that the
// counter increment first. Since it's done the same way in
// Environment::new_async_uid()
function newAsyncId() {
  return ++async_id_fields[kAsyncIdCounter];
function getOrSetAsyncId(object) {
  if (object.hasOwnProperty(async_id_symbol)) {
    return object[async_id_symbol];
  return object[async_id_symbol] = newAsyncId();
// Return the triggerAsyncId meant for the constructor calling it. It's up to
// the user to safeguard this call and make sure it's zero'd out when the
// constructor is complete.
function getDefaultTriggerAsyncId() {
  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];
  // If defaultTriggerAsyncId isn't set, use the executionAsyncId
  if (defaultTriggerAsyncId < 0)
    return async_id_fields[kExecutionAsyncId];
  return defaultTriggerAsyncId;
function clearDefaultTriggerAsyncId() {
  async_id_fields[kDefaultTriggerAsyncId] = -1;
function defaultTriggerAsyncIdScope(triggerAsyncId, block, ...args) {
  if (triggerAsyncId === undefined)
    return block(...args);
  // do { if (!(Number.isSafeInteger(triggerAsyncId))) (process._rawDebug("CHECK: Number.isSafeInteger(triggerAsyncId) == true"), process.abort()) } while (0)
  // do { if (!(triggerAsyncId > 0)) (process._rawDebug("CHECK: triggerAsyncId > 0 == true"), process.abort()) } while (0)
  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];
  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;
  try {
    return block(...args);
  } finally {
    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;
function initHooksExist() {
  return async_hook_fields[kInit] > 0;
function afterHooksExist() {
  return async_hook_fields[kAfter] > 0;
function destroyHooksExist() {
  return async_hook_fields[kDestroy] > 0;
function emitInitScript(asyncId, type, triggerAsyncId, resource) {
  validateAsyncId(asyncId, 'asyncId');
  if (triggerAsyncId !== null)
    validateAsyncId(triggerAsyncId, 'triggerAsyncId');
  if (async_hook_fields[kCheck] > 0 &&
      (typeof type !== 'string' || type.length <= 0)) {
    throw new ERR_ASYNC_TYPE(type);
  // Short circuit all checks for the common case. Which is that no hooks have
  // been set. Do this to remove performance impact for embedders (and core).
  if (async_hook_fields[kInit] === 0)
    return;
  // This can run after the early return check b/c running this function
  // manually means that the embedder must have used getDefaultTriggerAsyncId().
  if (triggerAsyncId === null) {
    triggerAsyncId = getDefaultTriggerAsyncId();
  emitInitNative(asyncId, type, triggerAsyncId, resource);
function emitBeforeScript(asyncId, triggerAsyncId) {
  // Validate the ids. An id of -1 means it was never set and is visible on the
  // call graph. An id < -1 should never happen in any circumstance. Throw
  // on user calls because async state should still be recoverable.
  validateAsyncId(asyncId, 'asyncId');
  validateAsyncId(triggerAsyncId, 'triggerAsyncId');
  pushAsyncIds(asyncId, triggerAsyncId);
  if (async_hook_fields[kBefore] > 0)
    emitBeforeNative(asyncId);
function emitAfterScript(asyncId) {
  validateAsyncId(asyncId, 'asyncId');
  if (async_hook_fields[kAfter] > 0)
    emitAfterNative(asyncId);
  popAsyncIds(asyncId);
function emitDestroyScript(asyncId) {
  validateAsyncId(asyncId, 'asyncId');
  // Return early if there are no destroy callbacks, or invalid asyncId.
  if (async_hook_fields[kDestroy] === 0 || asyncId <= 0)
    return;
  async_wrap.queueDestroyAsyncId(asyncId);
// Keep in sync with Environment::AsyncHooks::clear_async_id_stack
// in src/env-inl.h.
function clearAsyncIdStack() {
  async_id_fields[kExecutionAsyncId] = 0;
  async_id_fields[kTriggerAsyncId] = 0;
  async_hook_fields[kStackLength] = 0;
function hasAsyncIdStack() {
  return async_hook_fields[kStackLength] > 0;
// This is the equivalent of the native push_async_ids() call.
function pushAsyncIds(asyncId, triggerAsyncId) {
  const offset = async_hook_fields[kStackLength];
  if (offset * 2 >= async_wrap.async_ids_stack.length)
    return pushAsyncIds_(asyncId, triggerAsyncId);
  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];
  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];
  async_hook_fields[kStackLength]++;
  async_id_fields[kExecutionAsyncId] = asyncId;
  async_id_fields[kTriggerAsyncId] = triggerAsyncId;
// This is the equivalent of the native pop_async_ids() call.
function popAsyncIds(asyncId) {
  const stackLength = async_hook_fields[kStackLength];
  if (stackLength === 0) return false;
  if (async_hook_fields[kCheck] > 0 &&
      async_id_fields[kExecutionAsyncId] !== asyncId) {
    // Do the same thing as the native code (i.e. crash hard).
    return popAsyncIds_(asyncId);
  const offset = stackLength - 1;
  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];
  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];
  async_hook_fields[kStackLength] = offset;
  return offset > 0;
function executionAsyncId() {
  return async_id_fields[kExecutionAsyncId];
function triggerAsyncId() {
  return async_id_fields[kTriggerAsyncId];
module.exports = {
  executionAsyncId,
  triggerAsyncId,
  // Private API
  getHookArrays,
  symbols: {
    async_id_symbol, trigger_async_id_symbol,
    init_symbol, before_symbol, after_symbol, destroy_symbol,
    promise_resolve_symbol, owner_symbol
  },
  constants: {
    kInit, kBefore, kAfter, kDestroy, kTotals, kPromiseResolve
  },
  enableHooks,
  disableHooks,
  clearDefaultTriggerAsyncId,
  clearAsyncIdStack,
  hasAsyncIdStack,
  // Internal Embedder API
  newAsyncId,
  getOrSetAsyncId,
  getDefaultTriggerAsyncId,
  defaultTriggerAsyncIdScope,
  initHooksExist,
  afterHooksExist,
  destroyHooksExist,
  emitInit: emitInitScript,
  emitBefore: emitBeforeScript,
  emitAfter: emitAfterScript,
  emitDestroy: emitDestroyScript,
  registerDestroyHook,
  nativeHooks: {
    init: emitInitNative,
    before: emitBeforeNative,
    after: emitAfterNative,
    destroy: emitDestroyNative,
    promise_resolve: emitPromiseResolveNative
'use strict';
const { Math } = primordials;
const {
  ERR_BUFFER_OUT_OF_BOUNDS,
  ERR_INVALID_ARG_TYPE,
  ERR_OUT_OF_RANGE
} = require('internal/errors').codes;
const { validateNumber } = require('internal/validators');
const {
  asciiSlice,
  base64Slice,
  latin1Slice,
  hexSlice,
  ucs2Slice,
  utf8Slice,
  asciiWrite,
  base64Write,
  latin1Write,
  hexWrite,
  ucs2Write,
  utf8Write
} = internalBinding('buffer');
// Temporary buffers to convert numbers.
const float32Array = new Float32Array(1);
const uInt8Float32Array = new Uint8Array(float32Array.buffer);
const float64Array = new Float64Array(1);
const uInt8Float64Array = new Uint8Array(float64Array.buffer);
// Check endianness.
float32Array[0] = -1; // 0xBF800000
// Either it is [0, 0, 128, 191] or [191, 128, 0, 0]. It is not possible to
// check this with `os.endianness()` because that is determined at compile time.
const bigEndian = uInt8Float32Array[3] === 0;
function checkBounds(buf, offset, byteLength) {
  validateNumber(offset, 'offset');
  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)
    boundsError(offset, buf.length - (byteLength + 1));
function checkInt(value, min, max, buf, offset, byteLength) {
  if (value > max || value < min) {
    const n = typeof min === 'bigint' ? 'n' : '';
    let range;
    if (byteLength > 3) {
      if (min === 0 || min === 0n) {
        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;
      } else {
        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +
                `${(byteLength + 1) * 8 - 1}${n}`;
      }
    } else {
      range = `>= ${min}${n} and <= ${max}${n}`;
    }
    throw new ERR_OUT_OF_RANGE('value', range, value);
  checkBounds(buf, offset, byteLength);
function boundsError(value, length, type) {
  if (Math.floor(value) !== value) {
    validateNumber(value, type);
    throw new ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);
  if (length < 0)
    throw new ERR_BUFFER_OUT_OF_BOUNDS();
  throw new ERR_OUT_OF_RANGE(type || 'offset',
                             `>= ${type ? 1 : 0} and <= ${length}`,
                             value);
// Read integers.
function readBigUInt64LE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 7];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 8);
  const lo = first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24;
  const hi = this[++offset] +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    last * 2 ** 24;
  return BigInt(lo) + (BigInt(hi) << 32n);
function readBigUInt64BE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 7];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 8);
  const hi = first * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset];
  const lo = this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last;
  return (BigInt(hi) << 32n) + BigInt(lo);
function readBigInt64LE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 7];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 8);
  const val = this[offset + 4] +
    this[offset + 5] * 2 ** 8 +
    this[offset + 6] * 2 ** 16 +
    (last << 24); // Overflow
  return (BigInt(val) << 32n) +
    BigInt(first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24);
function readBigInt64BE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 7];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 8);
  const val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset];
  return (BigInt(val) << 32n) +
    BigInt(this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last);
function readUIntLE(offset, byteLength) {
  if (offset === undefined)
    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);
  if (byteLength === 6)
    return readUInt48LE(this, offset);
  if (byteLength === 5)
    return readUInt40LE(this, offset);
  if (byteLength === 3)
    return readUInt24LE(this, offset);
  if (byteLength === 4)
    return this.readUInt32LE(offset);
  if (byteLength === 2)
    return this.readUInt16LE(offset);
  if (byteLength === 1)
    return this.readUInt8(offset);
  boundsError(byteLength, 6, 'byteLength');
function readUInt48LE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 5];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 6);
  return first +
    buf[++offset] * 2 ** 8 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 24 +
    (buf[++offset] + last * 2 ** 8) * 2 ** 32;
function readUInt40LE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 4];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 5);
  return first +
    buf[++offset] * 2 ** 8 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 24 +
    last * 2 ** 32;
function readUInt32LE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 3];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 4);
  return first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    last * 2 ** 24;
function readUInt24LE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 2];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 3);
  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;
function readUInt16LE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 1];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 2);
  return first + last * 2 ** 8;
function readUInt8(offset = 0) {
  validateNumber(offset, 'offset');
  const val = this[offset];
  if (val === undefined)
    boundsError(offset, this.length - 1);
  return val;
function readUIntBE(offset, byteLength) {
  if (offset === undefined)
    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);
  if (byteLength === 6)
    return readUInt48BE(this, offset);
  if (byteLength === 5)
    return readUInt40BE(this, offset);
  if (byteLength === 3)
    return readUInt24BE(this, offset);
  if (byteLength === 4)
    return this.readUInt32BE(offset);
  if (byteLength === 2)
    return this.readUInt16BE(offset);
  if (byteLength === 1)
    return this.readUInt8(offset);
  boundsError(byteLength, 6, 'byteLength');
function readUInt48BE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 5];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 6);
  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +
    buf[++offset] * 2 ** 24 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 8 +
    last;
function readUInt40BE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 4];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 5);
  return first * 2 ** 32 +
    buf[++offset] * 2 ** 24 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 8 +
    last;
function readUInt32BE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 3];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 4);
  return first * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last;
function readUInt24BE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 2];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 3);
  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
function readUInt16BE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 1];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 2);
  return first * 2 ** 8 + last;
function readIntLE(offset, byteLength) {
  if (offset === undefined)
    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);
  if (byteLength === 6)
    return readInt48LE(this, offset);
  if (byteLength === 5)
    return readInt40LE(this, offset);
  if (byteLength === 3)
    return readInt24LE(this, offset);
  if (byteLength === 4)
    return this.readInt32LE(offset);
  if (byteLength === 2)
    return this.readInt16LE(offset);
  if (byteLength === 1)
    return this.readInt8(offset);
  boundsError(byteLength, 6, 'byteLength');
function readInt48LE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 5];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 6);
  const val = buf[offset + 4] + last * 2 ** 8;
  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +
    first +
    buf[++offset] * 2 ** 8 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 24;
function readInt40LE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 4];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 5);
  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +
    first +
    buf[++offset] * 2 ** 8 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 24;
function readInt32LE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 3];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 4);
  return first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    (last << 24); // Overflow
function readInt24LE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 2];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 3);
  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;
  return val | (val & 2 ** 23) * 0x1fe;
function readInt16LE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 1];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 2);
  const val = first + last * 2 ** 8;
  return val | (val & 2 ** 15) * 0x1fffe;
function readInt8(offset = 0) {
  validateNumber(offset, 'offset');
  const val = this[offset];
  if (val === undefined)
    boundsError(offset, this.length - 1);
  return val | (val & 2 ** 7) * 0x1fffffe;
function readIntBE(offset, byteLength) {
  if (offset === undefined)
    throw new ERR_INVALID_ARG_TYPE('offset', 'number', offset);
  if (byteLength === 6)
    return readInt48BE(this, offset);
  if (byteLength === 5)
    return readInt40BE(this, offset);
  if (byteLength === 3)
    return readInt24BE(this, offset);
  if (byteLength === 4)
    return this.readInt32BE(offset);
  if (byteLength === 2)
    return this.readInt16BE(offset);
  if (byteLength === 1)
    return this.readInt8(offset);
  boundsError(byteLength, 6, 'byteLength');
function readInt48BE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 5];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 6);
  const val = buf[++offset] + first * 2 ** 8;
  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +
    buf[++offset] * 2 ** 24 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 8 +
    last;
function readInt40BE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 4];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 5);
  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +
    buf[++offset] * 2 ** 24 +
    buf[++offset] * 2 ** 16 +
    buf[++offset] * 2 ** 8 +
    last;
function readInt32BE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 3];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 4);
  return (first << 24) + // Overflow
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last;
function readInt24BE(buf, offset = 0) {
  validateNumber(offset, 'offset');
  const first = buf[offset];
  const last = buf[offset + 2];
  if (first === undefined || last === undefined)
    boundsError(offset, buf.length - 3);
  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
  return val | (val & 2 ** 23) * 0x1fe;
function readInt16BE(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 1];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 2);
  const val = first * 2 ** 8 + last;
  return val | (val & 2 ** 15) * 0x1fffe;
// Read floats
function readFloatBackwards(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 3];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 4);
  uInt8Float32Array[3] = first;
  uInt8Float32Array[2] = this[++offset];
  uInt8Float32Array[1] = this[++offset];
  uInt8Float32Array[0] = last;
  return float32Array[0];
function readFloatForwards(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 3];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 4);
  uInt8Float32Array[0] = first;
  uInt8Float32Array[1] = this[++offset];
  uInt8Float32Array[2] = this[++offset];
  uInt8Float32Array[3] = last;
  return float32Array[0];
function readDoubleBackwards(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 7];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 8);
  uInt8Float64Array[7] = first;
  uInt8Float64Array[6] = this[++offset];
  uInt8Float64Array[5] = this[++offset];
  uInt8Float64Array[4] = this[++offset];
  uInt8Float64Array[3] = this[++offset];
  uInt8Float64Array[2] = this[++offset];
  uInt8Float64Array[1] = this[++offset];
  uInt8Float64Array[0] = last;
  return float64Array[0];
function readDoubleForwards(offset = 0) {
  validateNumber(offset, 'offset');
  const first = this[offset];
  const last = this[offset + 7];
  if (first === undefined || last === undefined)
    boundsError(offset, this.length - 8);
  uInt8Float64Array[0] = first;
  uInt8Float64Array[1] = this[++offset];
  uInt8Float64Array[2] = this[++offset];
  uInt8Float64Array[3] = this[++offset];
  uInt8Float64Array[4] = this[++offset];
  uInt8Float64Array[5] = this[++offset];
  uInt8Float64Array[6] = this[++offset];
  uInt8Float64Array[7] = last;
  return float64Array[0];
// Write integers.
function writeBigU_Int64LE(buf, value, offset, min, max) {
  checkInt(value, min, max, buf, offset, 7);
  let lo = Number(value & 0xffffffffn);
  buf[offset++] = lo;
  lo = lo >> 8;
  buf[offset++] = lo;
  lo = lo >> 8;
  buf[offset++] = lo;
  lo = lo >> 8;
  buf[offset++] = lo;
  let hi = Number(value >> 32n & 0xffffffffn);
  buf[offset++] = hi;
  hi = hi >> 8;
  buf[offset++] = hi;
  hi = hi >> 8;
  buf[offset++] = hi;
  hi = hi >> 8;
  buf[offset++] = hi;
  return offset;
function writeBigUInt64LE(value, offset = 0) {
  return writeBigU_Int64LE(this, value, offset, 0n, 0xffffffffffffffffn);
function writeBigU_Int64BE(buf, value, offset, min, max) {
  checkInt(value, min, max, buf, offset, 7);
  let lo = Number(value & 0xffffffffn);
  buf[offset + 7] = lo;
  lo = lo >> 8;
  buf[offset + 6] = lo;
  lo = lo >> 8;
  buf[offset + 5] = lo;
  lo = lo >> 8;
  buf[offset + 4] = lo;
  let hi = Number(value >> 32n & 0xffffffffn);
  buf[offset + 3] = hi;
  hi = hi >> 8;
  buf[offset + 2] = hi;
  hi = hi >> 8;
  buf[offset + 1] = hi;
  hi = hi >> 8;
  buf[offset] = hi;
  return offset + 8;
function writeBigUInt64BE(value, offset = 0) {
  return writeBigU_Int64BE(this, value, offset, 0n, 0xffffffffffffffffn);
function writeBigInt64LE(value, offset = 0) {
  return writeBigU_Int64LE(
    this, value, offset, -0x8000000000000000n, 0x7fffffffffffffffn);
function writeBigInt64BE(value, offset = 0) {
  return writeBigU_Int64BE(
    this, value, offset, -0x8000000000000000n, 0x7fffffffffffffffn);
function writeUIntLE(value, offset, byteLength) {
  if (byteLength === 6)
    return writeU_Int48LE(this, value, offset, 0, 0xffffffffffff);
  if (byteLength === 5)
    return writeU_Int40LE(this, value, offset, 0, 0xffffffffff);
  if (byteLength === 3)
    return writeU_Int24LE(this, value, offset, 0, 0xffffff);
  if (byteLength === 4)
    return writeU_Int32LE(this, value, offset, 0, 0xffffffff);
  if (byteLength === 2)
    return writeU_Int16LE(this, value, offset, 0, 0xffff);
  if (byteLength === 1)
    return writeU_Int8(this, value, offset, 0, 0xff);
  boundsError(byteLength, 6, 'byteLength');
function writeU_Int48LE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 5);
  const newVal = Math.floor(value * 2 ** -32);
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  buf[offset++] = newVal;
  buf[offset++] = (newVal >>> 8);
  return offset;
function writeU_Int40LE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 4);
  const newVal = value;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  buf[offset++] = Math.floor(newVal * 2 ** -32);
  return offset;
function writeU_Int32LE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 3);
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  return offset;
function writeUInt32LE(value, offset = 0) {
  return writeU_Int32LE(this, value, offset, 0, 0xffffffff);
function writeU_Int24LE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 2);
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  value = value >>> 8;
  buf[offset++] = value;
  return offset;
function writeU_Int16LE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 1);
  buf[offset++] = value;
  buf[offset++] = (value >>> 8);
  return offset;
function writeUInt16LE(value, offset = 0) {
  return writeU_Int16LE(this, value, offset, 0, 0xffff);
function writeU_Int8(buf, value, offset, min, max) {
  value = +value;
  // `checkInt()` can not be used here because it checks two entries.
  validateNumber(offset, 'offset');
  if (value > max || value < min) {
    throw new ERR_OUT_OF_RANGE('value', `>= ${min} and <= ${max}`, value);
  if (buf[offset] === undefined)
    boundsError(offset, buf.length - 1);
  buf[offset] = value;
  return offset + 1;
function writeUInt8(value, offset = 0) {
  return writeU_Int8(this, value, offset, 0, 0xff);
function writeUIntBE(value, offset, byteLength) {
  if (byteLength === 6)
    return writeU_Int48BE(this, value, offset, 0, 0xffffffffffffff);
  if (byteLength === 5)
    return writeU_Int40BE(this, value, offset, 0, 0xffffffffff);
  if (byteLength === 3)
    return writeU_Int24BE(this, value, offset, 0, 0xffffff);
  if (byteLength === 4)
    return writeU_Int32BE(this, value, offset, 0, 0xffffffff);
  if (byteLength === 2)
    return writeU_Int16BE(this, value, offset, 0, 0xffff);
  if (byteLength === 1)
    return writeU_Int8(this, value, offset, 0, 0xff);
  boundsError(byteLength, 6, 'byteLength');
function writeU_Int48BE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 5);
  const newVal = Math.floor(value * 2 ** -32);
  buf[offset++] = (newVal >>> 8);
  buf[offset++] = newVal;
  buf[offset + 3] = value;
  value = value >>> 8;
  buf[offset + 2] = value;
  value = value >>> 8;
  buf[offset + 1] = value;
  value = value >>> 8;
  buf[offset] = value;
  return offset + 4;
function writeU_Int40BE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 4);
  buf[offset++] = Math.floor(value * 2 ** -32);
  buf[offset + 3] = value;
  value = value >>> 8;
  buf[offset + 2] = value;
  value = value >>> 8;
  buf[offset + 1] = value;
  value = value >>> 8;
  buf[offset] = value;
  return offset + 4;
function writeU_Int32BE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 3);
  buf[offset + 3] = value;
  value = value >>> 8;
  buf[offset + 2] = value;
  value = value >>> 8;
  buf[offset + 1] = value;
  value = value >>> 8;
  buf[offset] = value;
  return offset + 4;
function writeUInt32BE(value, offset = 0) {
  return writeU_Int32BE(this, value, offset, 0, 0xffffffff);
function writeU_Int24BE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 2);
  buf[offset + 2] = value;
  value = value >>> 8;
  buf[offset + 1] = value;
  value = value >>> 8;
  buf[offset] = value;
  return offset + 3;
function writeU_Int16BE(buf, value, offset, min, max) {
  value = +value;
  checkInt(value, min, max, buf, offset, 1);
  buf[offset++] = (value >>> 8);
  buf[offset++] = value;
  return offset;
function writeUInt16BE(value, offset = 0) {
  return writeU_Int16BE(this, value, offset, 0, 0xffff);
function writeIntLE(value, offset, byteLength) {
  if (byteLength === 6)
    return writeU_Int48LE(this, value, offset, -0x800000000000, 0x7fffffffffff);
  if (byteLength === 5)
    return writeU_Int40LE(this, value, offset, -0x8000000000, 0x7fffffffff);
  if (byteLength === 3)
    return writeU_Int24LE(this, value, offset, -0x800000, 0x7fffff);
  if (byteLength === 4)
    return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);
  if (byteLength === 2)
    return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);
  if (byteLength === 1)
    return writeU_Int8(this, value, offset, -0x80, 0x7f);
  boundsError(byteLength, 6, 'byteLength');
function writeInt32LE(value, offset = 0) {
  return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);
function writeInt16LE(value, offset = 0) {
  return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);
function writeInt8(value, offset = 0) {
  return writeU_Int8(this, value, offset, -0x80, 0x7f);
function writeIntBE(value, offset, byteLength) {
  if (byteLength === 6)
    return writeU_Int48BE(this, value, offset, -0x800000000000, 0x7fffffffffff);
  if (byteLength === 5)
    return writeU_Int40BE(this, value, offset, -0x8000000000, 0x7fffffffff);
  if (byteLength === 3)
    return writeU_Int24BE(this, value, offset, -0x800000, 0x7fffff);
  if (byteLength === 4)
    return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);
  if (byteLength === 2)
    return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);
  if (byteLength === 1)
    return writeU_Int8(this, value, offset, -0x80, 0x7f);
  boundsError(byteLength, 6, 'byteLength');
function writeInt32BE(value, offset = 0) {
  return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);
function writeInt16BE(value, offset = 0) {
  return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);
// Write floats.
function writeDoubleForwards(val, offset = 0) {
  val = +val;
  checkBounds(this, offset, 7);
  float64Array[0] = val;
  this[offset++] = uInt8Float64Array[0];
  this[offset++] = uInt8Float64Array[1];
  this[offset++] = uInt8Float64Array[2];
  this[offset++] = uInt8Float64Array[3];
  this[offset++] = uInt8Float64Array[4];
  this[offset++] = uInt8Float64Array[5];
  this[offset++] = uInt8Float64Array[6];
  this[offset++] = uInt8Float64Array[7];
  return offset;
function writeDoubleBackwards(val, offset = 0) {
  val = +val;
  checkBounds(this, offset, 7);
  float64Array[0] = val;
  this[offset++] = uInt8Float64Array[7];
  this[offset++] = uInt8Float64Array[6];
  this[offset++] = uInt8Float64Array[5];
  this[offset++] = uInt8Float64Array[4];
  this[offset++] = uInt8Float64Array[3];
  this[offset++] = uInt8Float64Array[2];
  this[offset++] = uInt8Float64Array[1];
  this[offset++] = uInt8Float64Array[0];
  return offset;
function writeFloatForwards(val, offset = 0) {
  val = +val;
  checkBounds(this, offset, 3);
  float32Array[0] = val;
  this[offset++] = uInt8Float32Array[0];
  this[offset++] = uInt8Float32Array[1];
  this[offset++] = uInt8Float32Array[2];
  this[offset++] = uInt8Float32Array[3];
  return offset;
function writeFloatBackwards(val, offset = 0) {
  val = +val;
  checkBounds(this, offset, 3);
  float32Array[0] = val;
  this[offset++] = uInt8Float32Array[3];
  this[offset++] = uInt8Float32Array[2];
  this[offset++] = uInt8Float32Array[1];
  this[offset++] = uInt8Float32Array[0];
  return offset;
class FastBuffer extends Uint8Array {}
function addBufferPrototypeMethods(proto) {
  proto.readBigUInt64LE = readBigUInt64LE,
  proto.readBigUInt64BE = readBigUInt64BE,
  proto.readBigInt64LE = readBigInt64LE,
  proto.readBigInt64BE = readBigInt64BE,
  proto.writeBigUInt64LE = writeBigUInt64LE,
  proto.writeBigUInt64BE = writeBigUInt64BE,
  proto.writeBigInt64LE = writeBigInt64LE,
  proto.writeBigInt64BE = writeBigInt64BE,
  proto.readUIntLE = readUIntLE;
  proto.readUInt32LE = readUInt32LE;
  proto.readUInt16LE = readUInt16LE;
  proto.readUInt8 = readUInt8;
  proto.readUIntBE = readUIntBE;
  proto.readUInt32BE = readUInt32BE;
  proto.readUInt16BE = readUInt16BE;
  proto.readIntLE = readIntLE;
  proto.readInt32LE = readInt32LE;
  proto.readInt16LE = readInt16LE;
  proto.readInt8 = readInt8;
  proto.readIntBE = readIntBE;
  proto.readInt32BE = readInt32BE;
  proto.readInt16BE = readInt16BE;
  proto.writeUIntLE = writeUIntLE;
  proto.writeUInt32LE = writeUInt32LE;
  proto.writeUInt16LE = writeUInt16LE;
  proto.writeUInt8 = writeUInt8;
  proto.writeUIntBE = writeUIntBE;
  proto.writeUInt32BE = writeUInt32BE;
  proto.writeUInt16BE = writeUInt16BE;
  proto.writeIntLE = writeIntLE;
  proto.writeInt32LE = writeInt32LE;
  proto.writeInt16LE = writeInt16LE;
  proto.writeInt8 = writeInt8;
  proto.writeIntBE = writeIntBE;
  proto.writeInt32BE = writeInt32BE;
  proto.writeInt16BE = writeInt16BE;
  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;
  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;
  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;
  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;
  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;
  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;
  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;
  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;
  proto.asciiSlice = asciiSlice;
  proto.base64Slice = base64Slice;
  proto.latin1Slice = latin1Slice;
  proto.hexSlice = hexSlice;
  proto.ucs2Slice = ucs2Slice;
  proto.utf8Slice = utf8Slice;
  proto.asciiWrite = asciiWrite;
  proto.base64Write = base64Write;
  proto.latin1Write = latin1Write;
  proto.hexWrite = hexWrite;
  proto.ucs2Write = ucs2Write;
  proto.utf8Write = utf8Write;
module.exports = {
  FastBuffer,
  addBufferPrototypeMethods
'use strict';
const { JSON, Object } = primordials;
const {
  errnoException,
  codes: {
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_HANDLE_TYPE,
    ERR_INVALID_OPT_VALUE,
    ERR_INVALID_SYNC_FORK_INPUT,
    ERR_IPC_CHANNEL_CLOSED,
    ERR_IPC_DISCONNECTED,
    ERR_IPC_ONE_PIPE,
    ERR_IPC_SYNC_FORK,
    ERR_MISSING_ARGS
} = require('internal/errors');
const { validateString } = require('internal/validators');
const EventEmitter = require('events');
const net = require('net');
const dgram = require('dgram');
const inspect = require('internal/util/inspect').inspect;
const assert = require('internal/assert');
const { Process } = internalBinding('process_wrap');
const {
  WriteWrap,
  kReadBytesOrError,
  kArrayBufferOffset,
  kLastWriteWasAsync,
  streamBaseState
} = internalBinding('stream_wrap');
const { Pipe, constants: PipeConstants } = internalBinding('pipe_wrap');
const { TCP } = internalBinding('tcp_wrap');
const { TTY } = internalBinding('tty_wrap');
const { UDP } = internalBinding('udp_wrap');
const SocketList = require('internal/socket_list');
const { owner_symbol } = require('internal/async_hooks').symbols;
const { convertToValidSignal } = require('internal/util');
const { isArrayBufferView } = require('internal/util/types');
const spawn_sync = internalBinding('spawn_sync');
const { kStateSymbol } = require('internal/dgram');
const {
  UV_EACCES,
  UV_EAGAIN,
  UV_EINVAL,
  UV_EMFILE,
  UV_ENFILE,
  UV_ENOENT,
  UV_ENOSYS,
  UV_ESRCH
} = internalBinding('uv');
const { SocketListSend, SocketListReceive } = SocketList;
// Lazy loaded for startup performance.
let StringDecoder;
// Lazy loaded for startup performance and to allow monkey patching of
// internalBinding('http_parser').HTTPParser.
let freeParser;
let HTTPParser;
const MAX_HANDLE_RETRANSMISSIONS = 3;
const kIsUsedAsStdio = Symbol('kIsUsedAsStdio');
// This object contain function to convert TCP objects to native handle objects
// and back again.
const handleConversion = {
  'net.Native': {
    simultaneousAccepts: true,
    send(message, handle, options) {
      return handle;
    },
    got(message, handle, emit) {
      emit(handle);
    }
  },
  'net.Server': {
    simultaneousAccepts: true,
    send(message, server, options) {
      return server._handle;
    },
    got(message, handle, emit) {
      const server = new net.Server();
      server.listen(handle, () => {
        emit(server);
      });
    }
  },
  'net.Socket': {
    send(message, socket, options) {
      if (!socket._handle)
        return;
      // If the socket was created by net.Server
      if (socket.server) {
        // The worker should keep track of the socket
        message.key = socket.server._connectionKey;
        var firstTime = !this.channel.sockets.send[message.key];
        var socketList = getSocketList('send', this, message.key);
        // The server should no longer expose a .connection property
        // and when asked to close it should query the socket status from
        // the workers
        if (firstTime) socket.server._setupWorker(socketList);
        // Act like socket is detached
        if (!options.keepOpen)
          socket.server._connections--;
      }
      const handle = socket._handle;
      // Remove handle from socket object, it will be closed when the socket
      // will be sent
      if (!options.keepOpen) {
        handle.onread = nop;
        socket._handle = null;
        socket.setTimeout(0);
        if (freeParser === undefined)
          freeParser = require('_http_common').freeParser;
        if (HTTPParser === undefined)
          HTTPParser = require('_http_common').HTTPParser;
        // In case of an HTTP connection socket, release the associated
        // resources
        if (socket.parser && socket.parser instanceof HTTPParser) {
          freeParser(socket.parser, null, socket);
          if (socket._httpMessage)
            socket._httpMessage.detachSocket(socket);
        }
      }
      return handle;
    },
    postSend(message, handle, options, callback, target) {
      // Store the handle after successfully sending it, so it can be closed
      // when the NODE_HANDLE_ACK is received. If the handle could not be sent,
      // just close it.
      if (handle && !options.keepOpen) {
        if (target) {
          // There can only be one _pendingMessage as passing handles are
          // processed one at a time: handles are stored in _handleQueue while
          // waiting for the NODE_HANDLE_ACK of the current passing handle.
          assert(!target._pendingMessage);
          target._pendingMessage =
              { callback, message, handle, options, retransmissions: 0 };
        } else {
          handle.close();
        }
      }
    },
    got(message, handle, emit) {
      const socket = new net.Socket({
        handle: handle,
        readable: true,
        writable: true
      });
      // If the socket was created by net.Server we will track the socket
      if (message.key) {
        // Add socket to connections list
        var socketList = getSocketList('got', this, message.key);
        socketList.add({
          socket: socket
        });
      }
      emit(socket);
    }
  },
  'dgram.Native': {
    simultaneousAccepts: false,
    send(message, handle, options) {
      return handle;
    },
    got(message, handle, emit) {
      emit(handle);
    }
  },
  'dgram.Socket': {
    simultaneousAccepts: false,
    send(message, socket, options) {
      message.dgramType = socket.type;
      return socket[kStateSymbol].handle;
    },
    got(message, handle, emit) {
      const socket = new dgram.Socket(message.dgramType);
      socket.bind(handle, () => {
        emit(socket);
      });
    }
function stdioStringToArray(stdio, channel) {
  const options = [];
  switch (stdio) {
    case 'ignore':
    case 'pipe': options.push(stdio, stdio, stdio); break;
    case 'inherit': options.push(0, 1, 2); break;
    default:
      throw new ERR_INVALID_OPT_VALUE('stdio', stdio);
  if (channel) options.push(channel);
  return options;
function ChildProcess() {
  EventEmitter.call(this);
  this._closesNeeded = 1;
  this._closesGot = 0;
  this.connected = false;
  this.signalCode = null;
  this.exitCode = null;
  this.killed = false;
  this.spawnfile = null;
  this._handle = new Process();
  this._handle[owner_symbol] = this;
  this._handle.onexit = (exitCode, signalCode) => {
    if (signalCode) {
      this.signalCode = signalCode;
    } else {
      this.exitCode = exitCode;
    }
    if (this.stdin) {
      this.stdin.destroy();
    }
    this._handle.close();
    this._handle = null;
    if (exitCode < 0) {
      var syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';
      const err = errnoException(exitCode, syscall);
      if (this.spawnfile)
        err.path = this.spawnfile;
      err.spawnargs = this.spawnargs.slice(1);
      this.emit('error', err);
    } else {
      this.emit('exit', this.exitCode, this.signalCode);
    }
    // If any of the stdio streams have not been touched,
    // then pull all the data through so that it can get the
    // eof and emit a 'close' event.
    // Do it on nextTick so that the user has one last chance
    // to consume the output, if for example they only want to
    // start reading the data once the process exits.
    process.nextTick(flushStdio, this);
    maybeClose(this);
  };
Object.setPrototypeOf(ChildProcess.prototype, EventEmitter.prototype);
Object.setPrototypeOf(ChildProcess, EventEmitter);
function flushStdio(subprocess) {
  const stdio = subprocess.stdio;
  if (stdio == null) return;
  for (var i = 0; i < stdio.length; i++) {
    const stream = stdio[i];
    // TODO(addaleax): This doesn't necessarily account for all the ways in
    // which data can be read from a stream, e.g. being consumed on the
    // native layer directly as a StreamBase.
    if (!stream || !stream.readable ||
        stream._readableState.readableListening ||
        stream[kIsUsedAsStdio]) {
      continue;
    }
    stream.resume();
function createSocket(pipe, readable) {
  return net.Socket({ handle: pipe, readable, writable: !readable });
function getHandleWrapType(stream) {
  if (stream instanceof Pipe) return 'pipe';
  if (stream instanceof TTY) return 'tty';
  if (stream instanceof TCP) return 'tcp';
  if (stream instanceof UDP) return 'udp';
  return false;
function closePendingHandle(target) {
  target._pendingMessage.handle.close();
  target._pendingMessage = null;
ChildProcess.prototype.spawn = function(options) {
  let i = 0;
  if (options === null || typeof options !== 'object') {
    throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
  // If no `stdio` option was given - use default
  let stdio = options.stdio || 'pipe';
  stdio = getValidStdio(stdio, false);
  const ipc = stdio.ipc;
  const ipcFd = stdio.ipcFd;
  stdio = options.stdio = stdio.stdio;
  if (ipc !== undefined) {
    // Let child process know about opened IPC channel
    if (options.envPairs === undefined)
      options.envPairs = [];
    else if (!Array.isArray(options.envPairs)) {
      throw new ERR_INVALID_ARG_TYPE('options.envPairs',
                                     'Array',
                                     options.envPairs);
    }
    options.envPairs.push('NODE_CHANNEL_FD=' + ipcFd);
  validateString(options.file, 'options.file');
  this.spawnfile = options.file;
  if (Array.isArray(options.args))
    this.spawnargs = options.args;
  else if (options.args === undefined)
    this.spawnargs = [];
  else
    throw new ERR_INVALID_ARG_TYPE('options.args', 'Array', options.args);
  const err = this._handle.spawn(options);
  // Run-time errors should emit an error, not throw an exception.
  if (err === UV_EACCES ||
      err === UV_EAGAIN ||
      err === UV_EMFILE ||
      err === UV_ENFILE ||
      err === UV_ENOENT) {
    process.nextTick(onErrorNT, this, err);
    // There is no point in continuing when we've hit EMFILE or ENFILE
    // because we won't be able to set up the stdio file descriptors.
    if (err === UV_EMFILE || err === UV_ENFILE)
      return err;
  } else if (err) {
    // Close all opened fds on error
    for (i = 0; i < stdio.length; i++) {
      const stream = stdio[i];
      if (stream.type === 'pipe') {
        stream.handle.close();
      }
    }
    this._handle.close();
    this._handle = null;
    throw errnoException(err, 'spawn');
  this.pid = this._handle.pid;
  for (i = 0; i < stdio.length; i++) {
    const stream = stdio[i];
    if (stream.type === 'ignore') continue;
    if (stream.ipc) {
      this._closesNeeded++;
      continue;
    }
    // The stream is already cloned and piped, thus stop its readable side,
    // otherwise we might attempt to read from the stream when at the same time
    // the child process does.
    if (stream.type === 'wrap') {
      stream.handle.reading = false;
      stream.handle.readStop();
      stream._stdio.pause();
      stream._stdio.readableFlowing = false;
      stream._stdio._readableState.reading = false;
      stream._stdio[kIsUsedAsStdio] = true;
      continue;
    }
    if (stream.handle) {
      // When i === 0 - we're dealing with stdin
      // (which is the only one writable pipe).
      stream.socket = createSocket(this.pid !== 0 ?
        stream.handle : null, i > 0);
      if (i > 0 && this.pid !== 0) {
        this._closesNeeded++;
        stream.socket.on('close', () => {
          maybeClose(this);
        });
      }
    }
  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?
    stdio[0].socket : null;
  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?
    stdio[1].socket : null;
  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?
    stdio[2].socket : null;
  this.stdio = [];
  for (i = 0; i < stdio.length; i++)
    this.stdio.push(stdio[i].socket === undefined ? null : stdio[i].socket);
  // Add .send() method and start listening for IPC data
  if (ipc !== undefined) setupChannel(this, ipc);
  return err;
function onErrorNT(self, err) {
  self._handle.onexit(err);
ChildProcess.prototype.kill = function(sig) {
  const signal = sig === 0 ? sig :
    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);
  if (this._handle) {
    var err = this._handle.kill(signal);
    if (err === 0) {
      /* Success. */
      this.killed = true;
      return true;
    }
    if (err === UV_ESRCH) {
      /* Already dead. */
    } else if (err === UV_EINVAL || err === UV_ENOSYS) {
      /* The underlying platform doesn't support this signal. */
      throw errnoException(err, 'kill');
    } else {
      /* Other error, almost certainly EPERM. */
      this.emit('error', errnoException(err, 'kill'));
    }
  /* Kill didn't succeed. */
  return false;
ChildProcess.prototype.ref = function() {
  if (this._handle) this._handle.ref();
ChildProcess.prototype.unref = function() {
  if (this._handle) this._handle.unref();
class Control extends EventEmitter {
  constructor(channel) {
    super();
    this.channel = channel;
    this.refs = 0;
  ref() {
    if (++this.refs === 1) {
      this.channel.ref();
    }
  unref() {
    if (--this.refs === 0) {
      this.channel.unref();
      this.emit('unref');
    }
function setupChannel(target, channel) {
  target.channel = channel;
  // _channel can be deprecated in version 8
  Object.defineProperty(target, '_channel', {
    get() { return target.channel; },
    set(val) { target.channel = val; },
    enumerable: true
  });
  target._handleQueue = null;
  target._pendingMessage = null;
  const control = new Control(channel);
  if (StringDecoder === undefined)
    StringDecoder = require('string_decoder').StringDecoder;
  const decoder = new StringDecoder('utf8');
  var jsonBuffer = '';
  var pendingHandle = null;
  channel.buffering = false;
  channel.pendingHandle = null;
  channel.onread = function(arrayBuffer) {
    const recvHandle = channel.pendingHandle;
    channel.pendingHandle = null;
    if (arrayBuffer) {
      const nread = streamBaseState[kReadBytesOrError];
      const offset = streamBaseState[kArrayBufferOffset];
      const pool = new Uint8Array(arrayBuffer, offset, nread);
      if (recvHandle)
        pendingHandle = recvHandle;
      // Linebreak is used as a message end sign
      var chunks = decoder.write(pool).split('\n');
      var numCompleteChunks = chunks.length - 1;
      // Last line does not have trailing linebreak
      var incompleteChunk = chunks[numCompleteChunks];
      if (numCompleteChunks === 0) {
        jsonBuffer += incompleteChunk;
        this.buffering = jsonBuffer.length !== 0;
        return;
      }
      chunks[0] = jsonBuffer + chunks[0];
      for (var i = 0; i < numCompleteChunks; i++) {
        var message = JSON.parse(chunks[i]);
        // There will be at most one NODE_HANDLE message in every chunk we
        // read because SCM_RIGHTS messages don't get coalesced. Make sure
        // that we deliver the handle with the right message however.
        if (isInternal(message)) {
          if (message.cmd === 'NODE_HANDLE') {
            handleMessage(message, pendingHandle, true);
            pendingHandle = null;
          } else {
            handleMessage(message, undefined, true);
          }
        } else {
          handleMessage(message, undefined, false);
        }
      }
      jsonBuffer = incompleteChunk;
      this.buffering = jsonBuffer.length !== 0;
    } else {
      this.buffering = false;
      target.disconnect();
      channel.onread = nop;
      channel.close();
      target.channel = null;
      maybeClose(target);
    }
  };
  // Object where socket lists will live
  channel.sockets = { got: {}, send: {} };
  // Handlers will go through this
  target.on('internalMessage', function(message, handle) {
    // Once acknowledged - continue sending handles.
    if (message.cmd === 'NODE_HANDLE_ACK' ||
        message.cmd === 'NODE_HANDLE_NACK') {
      if (target._pendingMessage) {
        if (message.cmd === 'NODE_HANDLE_ACK') {
          closePendingHandle(target);
        } else if (target._pendingMessage.retransmissions++ ===
                   MAX_HANDLE_RETRANSMISSIONS) {
          closePendingHandle(target);
          process.emitWarning('Handle did not reach the receiving process ' +
                              'correctly', 'SentHandleNotReceivedWarning');
        }
      }
      assert(Array.isArray(target._handleQueue));
      var queue = target._handleQueue;
      target._handleQueue = null;
      if (target._pendingMessage) {
        target._send(target._pendingMessage.message,
                     target._pendingMessage.handle,
                     target._pendingMessage.options,
                     target._pendingMessage.callback);
      }
      for (var i = 0; i < queue.length; i++) {
        var args = queue[i];
        target._send(args.message, args.handle, args.options, args.callback);
      }
      // Process a pending disconnect (if any).
      if (!target.connected && target.channel && !target._handleQueue)
        target._disconnect();
      return;
    }
    if (message.cmd !== 'NODE_HANDLE') return;
    // It is possible that the handle is not received because of some error on
    // ancillary data reception such as MSG_CTRUNC. In this case, report the
    // sender about it by sending a NODE_HANDLE_NACK message.
    if (!handle)
      return target._send({ cmd: 'NODE_HANDLE_NACK' }, null, true);
    // Acknowledge handle receival. Don't emit error events (for example if
    // the other side has disconnected) because this call to send() is not
    // initiated by the user and it shouldn't be fatal to be unable to ACK
    // a message.
    target._send({ cmd: 'NODE_HANDLE_ACK' }, null, true);
    const obj = handleConversion[message.type];
    // Update simultaneous accepts on Windows
    if (process.platform === 'win32') {
      handle.setSimultaneousAccepts(false);
    }
    // Convert handle object
    obj.got.call(this, message, handle, (handle) => {
      handleMessage(message.msg, handle, isInternal(message.msg));
    });
  });
  target.send = function(message, handle, options, callback) {
    if (typeof handle === 'function') {
      callback = handle;
      handle = undefined;
      options = undefined;
    } else if (typeof options === 'function') {
      callback = options;
      options = undefined;
    } else if (options !== undefined &&
               (options === null || typeof options !== 'object')) {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    options = { swallowErrors: false, ...options };
    if (this.connected) {
      return this._send(message, handle, options, callback);
    }
    const ex = new ERR_IPC_CHANNEL_CLOSED();
    if (typeof callback === 'function') {
      process.nextTick(callback, ex);
    } else {
      process.nextTick(() => this.emit('error', ex));
    }
    return false;
  };
  target._send = function(message, handle, options, callback) {
    assert(this.connected || this.channel);
    if (message === undefined)
      throw new ERR_MISSING_ARGS('message');
    // Non-serializable messages should not reach the remote
    // end point; as any failure in the stringification there
    // will result in error message that is weakly consumable.
    // So perform a sanity check on message prior to sending.
    if (typeof message !== 'string' &&
        typeof message !== 'object' &&
        typeof message !== 'number' &&
        typeof message !== 'boolean') {
      throw new ERR_INVALID_ARG_TYPE(
        'message', ['string', 'object', 'number', 'boolean'], message);
    }
    // Support legacy function signature
    if (typeof options === 'boolean') {
      options = { swallowErrors: options };
    }
    let obj;
    // Package messages with a handle object
    if (handle) {
      // This message will be handled by an internalMessage event handler
      message = {
        cmd: 'NODE_HANDLE',
        type: null,
        msg: message
      };
      if (handle instanceof net.Socket) {
        message.type = 'net.Socket';
      } else if (handle instanceof net.Server) {
        message.type = 'net.Server';
      } else if (handle instanceof TCP || handle instanceof Pipe) {
        message.type = 'net.Native';
      } else if (handle instanceof dgram.Socket) {
        message.type = 'dgram.Socket';
      } else if (handle instanceof UDP) {
        message.type = 'dgram.Native';
      } else {
        throw new ERR_INVALID_HANDLE_TYPE();
      }
      // Queue-up message and handle if we haven't received ACK yet.
      if (this._handleQueue) {
        this._handleQueue.push({
          callback: callback,
          handle: handle,
          options: options,
          message: message.msg,
        });
        return this._handleQueue.length === 1;
      }
      obj = handleConversion[message.type];
      // convert TCP object to native handle object
      handle = handleConversion[message.type].send.call(target,
                                                        message,
                                                        handle,
                                                        options);
      // If handle was sent twice, or it is impossible to get native handle
      // out of it - just send a text without the handle.
      if (!handle)
        message = message.msg;
      // Update simultaneous accepts on Windows
      if (obj.simultaneousAccepts && process.platform === 'win32') {
        handle.setSimultaneousAccepts(true);
      }
    } else if (this._handleQueue &&
               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||
                             message.cmd === 'NODE_HANDLE_NACK'))) {
      // Queue request anyway to avoid out-of-order messages.
      this._handleQueue.push({
        callback: callback,
        handle: null,
        options: options,
        message: message,
      });
      return this._handleQueue.length === 1;
    }
    const req = new WriteWrap();
    const string = JSON.stringify(message) + '\n';
    const err = channel.writeUtf8String(req, string, handle);
    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];
    if (err === 0) {
      if (handle) {
        if (!this._handleQueue)
          this._handleQueue = [];
        if (obj && obj.postSend)
          obj.postSend(message, handle, options, callback, target);
      }
      if (wasAsyncWrite) {
        req.oncomplete = () => {
          control.unref();
          if (typeof callback === 'function')
            callback(null);
        };
        control.ref();
      } else if (typeof callback === 'function') {
        process.nextTick(callback, null);
      }
    } else {
      // Cleanup handle on error
      if (obj && obj.postSend)
        obj.postSend(message, handle, options, callback);
      if (!options.swallowErrors) {
        const ex = errnoException(err, 'write');
        if (typeof callback === 'function') {
          process.nextTick(callback, ex);
        } else {
          process.nextTick(() => this.emit('error', ex));
        }
      }
    }
    /* If the master is > 2 read() calls behind, please stop sending. */
    return channel.writeQueueSize < (65536 * 2);
  };
  // Connected will be set to false immediately when a disconnect() is
  // requested, even though the channel might still be alive internally to
  // process queued messages. The three states are distinguished as follows:
  // - disconnect() never requested: channel is not null and connected
  //   is true
  // - disconnect() requested, messages in the queue: channel is not null
  //   and connected is false
  // - disconnect() requested, channel actually disconnected: channel is
  //   null and connected is false
  target.connected = true;
  target.disconnect = function() {
    if (!this.connected) {
      this.emit('error', new ERR_IPC_DISCONNECTED());
      return;
    }
    // Do not allow any new messages to be written.
    this.connected = false;
    // If there are no queued messages, disconnect immediately. Otherwise,
    // postpone the disconnect so that it happens internally after the
    // queue is flushed.
    if (!this._handleQueue)
      this._disconnect();
  };
  target._disconnect = function() {
    assert(this.channel);
    // This marks the fact that the channel is actually disconnected.
    this.channel = null;
    if (this._pendingMessage)
      closePendingHandle(this);
    var fired = false;
    function finish() {
      if (fired) return;
      fired = true;
      channel.close();
      target.emit('disconnect');
    }
    // If a message is being read, then wait for it to complete.
    if (channel.buffering) {
      this.once('message', finish);
      this.once('internalMessage', finish);
      return;
    }
    process.nextTick(finish);
  };
  function emit(event, message, handle) {
    target.emit(event, message, handle);
  function handleMessage(message, handle, internal) {
    if (!target.channel)
      return;
    const eventName = (internal ? 'internalMessage' : 'message');
    process.nextTick(emit, eventName, message, handle);
  channel.readStart();
  return control;
const INTERNAL_PREFIX = 'NODE_';
function isInternal(message) {
  return (message !== null &&
          typeof message === 'object' &&
          typeof message.cmd === 'string' &&
          message.cmd.length > INTERNAL_PREFIX.length &&
          message.cmd.slice(0, INTERNAL_PREFIX.length) === INTERNAL_PREFIX);
function nop() { }
function getValidStdio(stdio, sync) {
  var ipc;
  var ipcFd;
  // Replace shortcut with an array
  if (typeof stdio === 'string') {
    stdio = stdioStringToArray(stdio);
  } else if (!Array.isArray(stdio)) {
    throw new ERR_INVALID_OPT_VALUE('stdio', inspect(stdio));
  // At least 3 stdio will be created
  // Don't concat() a new Array() because it would be sparse, and
  // stdio.reduce() would skip the sparse elements of stdio.
  // See http://stackoverflow.com/a/5501711/3561
  while (stdio.length < 3) stdio.push(undefined);
  // Translate stdio into C++-readable form
  // (i.e. PipeWraps or fds)
  stdio = stdio.reduce((acc, stdio, i) => {
    function cleanup() {
      for (var i = 0; i < acc.length; i++) {
        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)
          acc[i].handle.close();
      }
    }
    // Defaults
    if (stdio == null) {
      stdio = i < 3 ? 'pipe' : 'ignore';
    }
    if (stdio === 'ignore') {
      acc.push({ type: 'ignore' });
    } else if (stdio === 'pipe' || typeof stdio === 'number' && stdio < 0) {
      var a = {
        type: 'pipe',
        readable: i === 0,
        writable: i !== 0
      };
      if (!sync)
        a.handle = new Pipe(PipeConstants.SOCKET);
      acc.push(a);
    } else if (stdio === 'ipc') {
      if (sync || ipc !== undefined) {
        // Cleanup previously created pipes
        cleanup();
        if (!sync)
          throw new ERR_IPC_ONE_PIPE();
        else
          throw new ERR_IPC_SYNC_FORK();
      }
      ipc = new Pipe(PipeConstants.IPC);
      ipcFd = i;
      acc.push({
        type: 'pipe',
        handle: ipc,
        ipc: true
      });
    } else if (stdio === 'inherit') {
      acc.push({
        type: 'inherit',
        fd: i
      });
    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {
      acc.push({
        type: 'fd',
        fd: typeof stdio === 'number' ? stdio : stdio.fd
      });
    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||
               getHandleWrapType(stdio._handle)) {
      var handle = getHandleWrapType(stdio) ?
        stdio :
        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;
      acc.push({
        type: 'wrap',
        wrapType: getHandleWrapType(handle),
        handle: handle,
        _stdio: stdio
      });
    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {
      if (!sync) {
        cleanup();
        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));
      }
    } else {
      // Cleanup
      cleanup();
      throw new ERR_INVALID_OPT_VALUE('stdio', inspect(stdio));
    }
    return acc;
  }, []);
  return { stdio, ipc, ipcFd };
function getSocketList(type, worker, key) {
  const sockets = worker.channel.sockets[type];
  var socketList = sockets[key];
  if (!socketList) {
    var Construct = type === 'send' ? SocketListSend : SocketListReceive;
    socketList = sockets[key] = new Construct(worker, key);
  return socketList;
function maybeClose(subprocess) {
  subprocess._closesGot++;
  if (subprocess._closesGot === subprocess._closesNeeded) {
    subprocess.emit('close', subprocess.exitCode, subprocess.signalCode);
function spawnSync(opts) {
  const options = opts.options;
  const result = spawn_sync.spawn(options);
  if (result.output && options.encoding && options.encoding !== 'buffer') {
    for (var i = 0; i < result.output.length; i++) {
      if (!result.output[i])
        continue;
      result.output[i] = result.output[i].toString(options.encoding);
    }
  result.stdout = result.output && result.output[1];
  result.stderr = result.output && result.output[2];
  if (result.error) {
    result.error = errnoException(result.error, 'spawnSync ' + opts.file);
    result.error.path = opts.file;
    result.error.spawnargs = opts.args.slice(1);
  return result;
module.exports = {
  ChildProcess,
  setupChannel,
  getValidStdio,
  stdioStringToArray,
  spawnSync
'use strict';
const { Object } = primordials;
const assert = require('internal/assert');
const path = require('path');
const EventEmitter = require('events');
const { owner_symbol } = require('internal/async_hooks').symbols;
const Worker = require('internal/cluster/worker');
const { internal, sendHelper } = require('internal/cluster/utils');
const cluster = new EventEmitter();
const handles = new Map();
const indexes = new Map();
const noop = () => {};
module.exports = cluster;
cluster.isWorker = true;
cluster.isMaster = false;
cluster.worker = null;
cluster.Worker = Worker;
cluster._setupWorker = function() {
  const worker = new Worker({
    id: +process.env.NODE_UNIQUE_ID | 0,
    process: process,
    state: 'online'
  });
  cluster.worker = worker;
  process.once('disconnect', () => {
    worker.emit('disconnect');
    if (!worker.exitedAfterDisconnect) {
      // Unexpected disconnect, master exited, or some such nastiness, so
      // worker exits immediately.
      process.exit(0);
    }
  });
  process.on('internalMessage', internal(worker, onmessage));
  send({ act: 'online' });
  function onmessage(message, handle) {
    if (message.act === 'newconn')
      onconnection(message, handle);
    else if (message.act === 'disconnect')
      _disconnect.call(worker, true);
// `obj` is a net#Server or a dgram#Socket object.
cluster._getServer = function(obj, options, cb) {
  let address = options.address;
  // Resolve unix socket paths to absolute paths
  if (options.port < 0 && typeof address === 'string' &&
      process.platform !== 'win32')
    address = path.resolve(address);
  const indexesKey = [address,
                      options.port,
                      options.addressType,
                      options.fd ].join(':');
  let index = indexes.get(indexesKey);
  if (index === undefined)
    index = 0;
  else
    index++;
  indexes.set(indexesKey, index);
  const message = {
    act: 'queryServer',
    index,
    data: null,
    ...options
  };
  message.address = address;
  // Set custom data on handle (i.e. tls tickets key)
  if (obj._getServerData)
    message.data = obj._getServerData();
  send(message, (reply, handle) => {
    if (typeof obj._setServerData === 'function')
      obj._setServerData(reply.data);
    if (handle)
      shared(reply, handle, indexesKey, cb);  // Shared listen socket.
    else
      rr(reply, indexesKey, cb);              // Round-robin.
  });
  obj.once('listening', () => {
    cluster.worker.state = 'listening';
    const address = obj.address();
    message.act = 'listening';
    message.port = address && address.port || options.port;
    send(message);
  });
// Shared listen socket.
function shared(message, handle, indexesKey, cb) {
  const key = message.key;
  // Monkey-patch the close() method so we can keep track of when it's
  // closed. Avoids resource leaks when the handle is short-lived.
  const close = handle.close;
  handle.close = function() {
    send({ act: 'close', key });
    handles.delete(key);
    indexes.delete(indexesKey);
    return close.apply(this, arguments);
  }.bind(handle);
  assert(handles.has(key) === false);
  handles.set(key, handle);
  cb(message.errno, handle);
// Round-robin. Master distributes handles across workers.
function rr(message, indexesKey, cb) {
  if (message.errno)
    return cb(message.errno, null);
  var key = message.key;
  function listen(backlog) {
    // TODO(bnoordhuis) Send a message to the master that tells it to
    // update the backlog size. The actual backlog should probably be
    // the largest requested size by any worker.
    return 0;
  function close() {
    // lib/net.js treats server._handle.close() as effectively synchronous.
    // That means there is a time window between the call to close() and
    // the ack by the master process in which we can still receive handles.
    // onconnection() below handles that by sending those handles back to
    // the master.
    if (key === undefined)
      return;
    send({ act: 'close', key });
    handles.delete(key);
    indexes.delete(indexesKey);
    key = undefined;
  function getsockname(out) {
    if (key)
      Object.assign(out, message.sockname);
    return 0;
  // Faux handle. Mimics a TCPWrap with just enough fidelity to get away
  // with it. Fools net.Server into thinking that it's backed by a real
  // handle. Use a noop function for ref() and unref() because the control
  // channel is going to keep the worker alive anyway.
  const handle = { close, listen, ref: noop, unref: noop };
  if (message.sockname) {
    handle.getsockname = getsockname;  // TCP handles only.
  assert(handles.has(key) === false);
  handles.set(key, handle);
  cb(0, handle);
// Round-robin connection.
function onconnection(message, handle) {
  const key = message.key;
  const server = handles.get(key);
  const accepted = server !== undefined;
  send({ ack: message.seq, accepted });
  if (accepted)
    server.onconnection(0, handle);
function send(message, cb) {
  return sendHelper(process, message, null, cb);
function _disconnect(masterInitiated) {
  this.exitedAfterDisconnect = true;
  let waitingCount = 1;
  function checkWaitingCount() {
    waitingCount--;
    if (waitingCount === 0) {
      // If disconnect is worker initiated, wait for ack to be sure
      // exitedAfterDisconnect is properly set in the master, otherwise, if
      // it's master initiated there's no need to send the
      // exitedAfterDisconnect message
      if (masterInitiated) {
        process.disconnect();
      } else {
        send({ act: 'exitedAfterDisconnect' }, () => process.disconnect());
      }
    }
  handles.forEach((handle) => {
    waitingCount++;
    if (handle[owner_symbol])
      handle[owner_symbol].close(checkWaitingCount);
    else
      handle.close(checkWaitingCount);
  });
  handles.clear();
  checkWaitingCount();
// Extend generic Worker with methods specific to worker processes.
Worker.prototype.disconnect = function() {
  _disconnect.call(this);
  return this;
Worker.prototype.destroy = function() {
  this.exitedAfterDisconnect = true;
  if (!this.isConnected()) {
    process.exit(0);
  } else {
    send({ act: 'exitedAfterDisconnect' }, () => process.disconnect());
    process.once('disconnect', () => process.exit(0));
'use strict';
const { Object } = primordials;
const assert = require('internal/assert');
const { fork } = require('child_process');
const path = require('path');
const EventEmitter = require('events');
const RoundRobinHandle = require('internal/cluster/round_robin_handle');
const SharedHandle = require('internal/cluster/shared_handle');
const Worker = require('internal/cluster/worker');
const { internal, sendHelper } = require('internal/cluster/utils');
const { ERR_SOCKET_BAD_PORT } = require('internal/errors').codes;
const cluster = new EventEmitter();
const intercom = new EventEmitter();
const SCHED_NONE = 1;
const SCHED_RR = 2;
const { isLegalPort } = require('internal/net');
const [ minPort, maxPort ] = [ 1024, 65535 ];
module.exports = cluster;
const handles = new Map();
cluster.isWorker = false;
cluster.isMaster = true;
cluster.Worker = Worker;
cluster.workers = {};
cluster.settings = {};
cluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.
cluster.SCHED_RR = SCHED_RR;      // Master distributes connections.
var ids = 0;
var debugPortOffset = 1;
var initialized = false;
// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?
var schedulingPolicy = {
  'none': SCHED_NONE,
  'rr': SCHED_RR
}[process.env.NODE_CLUSTER_SCHED_POLICY];
if (schedulingPolicy === undefined) {
  // FIXME Round-robin doesn't perform well on Windows right now due to the
  // way IOCP is wired up.
  schedulingPolicy = (process.platform === 'win32') ? SCHED_NONE : SCHED_RR;
cluster.schedulingPolicy = schedulingPolicy;
cluster.setupMaster = function(options) {
  const settings = {
    args: process.argv.slice(2),
    exec: process.argv[1],
    execArgv: process.execArgv,
    silent: false,
    ...cluster.settings,
    ...options
  };
  // Tell V8 to write profile data for each process to a separate file.
  // Without --logfile=v8-%p.log, everything ends up in a single, unusable
  // file. (Unusable because what V8 logs are memory addresses and each
  // process has its own memory mappings.)
  if (settings.execArgv.some((s) => s.startsWith('--prof')) &&
      !settings.execArgv.some((s) => s.startsWith('--logfile='))) {
    settings.execArgv = settings.execArgv.concat(['--logfile=v8-%p.log']);
  cluster.settings = settings;
  if (initialized === true)
    return process.nextTick(setupSettingsNT, settings);
  initialized = true;
  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.
  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR,
         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);
  process.nextTick(setupSettingsNT, settings);
  process.on('internalMessage', (message) => {
    if (message.cmd !== 'NODE_DEBUG_ENABLED')
      return;
    for (const worker of Object.values(cluster.workers)) {
      if (worker.state === 'online' || worker.state === 'listening') {
        process._debugProcess(worker.process.pid);
      } else {
        worker.once('online', function() {
          process._debugProcess(this.process.pid);
        });
      }
    }
  });
function setupSettingsNT(settings) {
  cluster.emit('setup', settings);
function createWorkerProcess(id, env) {
  const workerEnv = { ...process.env, ...env, NODE_UNIQUE_ID: `${id}` };
  const execArgv = cluster.settings.execArgv.slice();
  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;
  const nodeOptions = process.env.NODE_OPTIONS ?
    process.env.NODE_OPTIONS : '';
  if (execArgv.some((arg) => arg.match(debugArgRegex)) ||
      nodeOptions.match(debugArgRegex)) {
    let inspectPort;
    if ('inspectPort' in cluster.settings) {
      if (typeof cluster.settings.inspectPort === 'function')
        inspectPort = cluster.settings.inspectPort();
      else
        inspectPort = cluster.settings.inspectPort;
      if (!isLegalPort(inspectPort)) {
        throw new ERR_SOCKET_BAD_PORT(inspectPort);
      }
    } else {
      inspectPort = process.debugPort + debugPortOffset;
      if (inspectPort > maxPort)
        inspectPort = inspectPort - maxPort + minPort - 1;
      debugPortOffset++;
    }
    execArgv.push(`--inspect-port=${inspectPort}`);
  return fork(cluster.settings.exec, cluster.settings.args, {
    cwd: cluster.settings.cwd,
    env: workerEnv,
    silent: cluster.settings.silent,
    windowsHide: cluster.settings.windowsHide,
    execArgv: execArgv,
    stdio: cluster.settings.stdio,
    gid: cluster.settings.gid,
    uid: cluster.settings.uid
  });
function removeWorker(worker) {
  assert(worker);
  delete cluster.workers[worker.id];
  if (Object.keys(cluster.workers).length === 0) {
    assert(handles.size === 0, 'Resource leak detected.');
    intercom.emit('disconnect');
function removeHandlesForWorker(worker) {
  assert(worker);
  handles.forEach((handle, key) => {
    if (handle.remove(worker))
      handles.delete(key);
  });
cluster.fork = function(env) {
  cluster.setupMaster();
  const id = ++ids;
  const workerProcess = createWorkerProcess(id, env);
  const worker = new Worker({
    id: id,
    process: workerProcess
  });
  worker.on('message', function(message, handle) {
    cluster.emit('message', this, message, handle);
  });
  worker.process.once('exit', (exitCode, signalCode) => {
    /*
     * Remove the worker from the workers list only
     * if it has disconnected, otherwise we might
     * still want to access it.
     */
    if (!worker.isConnected()) {
      removeHandlesForWorker(worker);
      removeWorker(worker);
    }
    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;
    worker.state = 'dead';
    worker.emit('exit', exitCode, signalCode);
    cluster.emit('exit', worker, exitCode, signalCode);
  });
  worker.process.once('disconnect', () => {
    /*
     * Now is a good time to remove the handles
     * associated with this worker because it is
     * not connected to the master anymore.
     */
    removeHandlesForWorker(worker);
    /*
     * Remove the worker from the workers list only
     * if its process has exited. Otherwise, we might
     * still want to access it.
     */
    if (worker.isDead())
      removeWorker(worker);
    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;
    worker.state = 'disconnected';
    worker.emit('disconnect');
    cluster.emit('disconnect', worker);
  });
  worker.process.on('internalMessage', internal(worker, onmessage));
  process.nextTick(emitForkNT, worker);
  cluster.workers[worker.id] = worker;
  return worker;
function emitForkNT(worker) {
  cluster.emit('fork', worker);
cluster.disconnect = function(cb) {
  const workers = Object.keys(cluster.workers);
  if (workers.length === 0) {
    process.nextTick(() => intercom.emit('disconnect'));
  } else {
    for (const worker of Object.values(cluster.workers)) {
      if (worker.isConnected()) {
        worker.disconnect();
      }
    }
  if (typeof cb === 'function')
    intercom.once('disconnect', cb);
function onmessage(message, handle) {
  const worker = this;
  if (message.act === 'online')
    online(worker);
  else if (message.act === 'queryServer')
    queryServer(worker, message);
  else if (message.act === 'listening')
    listening(worker, message);
  else if (message.act === 'exitedAfterDisconnect')
    exitedAfterDisconnect(worker, message);
  else if (message.act === 'close')
    close(worker, message);
function online(worker) {
  worker.state = 'online';
  worker.emit('online');
  cluster.emit('online', worker);
function exitedAfterDisconnect(worker, message) {
  worker.exitedAfterDisconnect = true;
  send(worker, { ack: message.seq });
function queryServer(worker, message) {
  // Stop processing if worker already disconnecting
  if (worker.exitedAfterDisconnect)
    return;
  const key = `${message.address}:${message.port}:${message.addressType}:` +
              `${message.fd}:${message.index}`;
  var handle = handles.get(key);
  if (handle === undefined) {
    let address = message.address;
    // Find shortest path for unix sockets because of the ~100 byte limit
    if (message.port < 0 && typeof address === 'string' &&
        process.platform !== 'win32') {
      address = path.relative(process.cwd(), address);
      if (message.address.length < address.length)
        address = message.address;
    }
    var constructor = RoundRobinHandle;
    // UDP is exempt from round-robin connection balancing for what should
    // be obvious reasons: it's connectionless. There is nothing to send to
    // the workers except raw datagrams and that's pointless.
    if (schedulingPolicy !== SCHED_RR ||
        message.addressType === 'udp4' ||
        message.addressType === 'udp6') {
      constructor = SharedHandle;
    }
    handle = new constructor(key,
                             address,
                             message.port,
                             message.addressType,
                             message.fd,
                             message.flags);
    handles.set(key, handle);
  if (!handle.data)
    handle.data = message.data;
  // Set custom server data
  handle.add(worker, (errno, reply, handle) => {
    const { data } = handles.get(key);
    if (errno)
      handles.delete(key);  // Gives other workers a chance to retry.
    send(worker, {
      errno,
      key,
      ack: message.seq,
      data,
      ...reply
    }, handle);
  });
function listening(worker, message) {
  const info = {
    addressType: message.addressType,
    address: message.address,
    port: message.port,
    fd: message.fd
  };
  worker.state = 'listening';
  worker.emit('listening', info);
  cluster.emit('listening', worker, info);
// Server in worker is closing, remove from list. The handle may have been
// removed by a prior call to removeHandlesForWorker() so guard against that.
function close(worker, message) {
  const key = message.key;
  const handle = handles.get(key);
  if (handle && handle.remove(worker))
    handles.delete(key);
function send(worker, message, handle, cb) {
  return sendHelper(worker.process, message, handle, cb);
// Extend generic Worker with methods specific to the master process.
Worker.prototype.disconnect = function() {
  this.exitedAfterDisconnect = true;
  send(this, { act: 'disconnect' });
  removeHandlesForWorker(this);
  removeWorker(this);
  return this;
Worker.prototype.destroy = function(signo) {
  const proc = this.process;
  signo = signo || 'SIGTERM';
  if (this.isConnected()) {
    this.once('disconnect', () => proc.kill(signo));
    this.disconnect();
    return;
  proc.kill(signo);
'use strict';
const assert = require('internal/assert');
const net = require('net');
const { sendHelper } = require('internal/cluster/utils');
const uv = internalBinding('uv');
const { constants } = internalBinding('tcp_wrap');
module.exports = RoundRobinHandle;
function RoundRobinHandle(key, address, port, addressType, fd, flags) {
  this.key = key;
  this.all = new Map();
  this.free = [];
  this.handles = [];
  this.handle = null;
  this.server = net.createServer(assert.fail);
  if (fd >= 0)
    this.server.listen({ fd });
  else if (port >= 0) {
    this.server.listen({
      port,
      host: address,
      // Currently, net module only supports `ipv6Only` option in `flags`.
      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY),
    });
  } else
    this.server.listen(address);  // UNIX socket path.
  this.server.once('listening', () => {
    this.handle = this.server._handle;
    this.handle.onconnection = (err, handle) => this.distribute(err, handle);
    this.server._handle = null;
    this.server = null;
  });
RoundRobinHandle.prototype.add = function(worker, send) {
  assert(this.all.has(worker.id) === false);
  this.all.set(worker.id, worker);
  const done = () => {
    if (this.handle.getsockname) {
      const out = {};
      this.handle.getsockname(out);
      // TODO(bnoordhuis) Check err.
      send(null, { sockname: out }, null);
    } else {
      send(null, null, null);  // UNIX socket.
    }
    this.handoff(worker);  // In case there are connections pending.
  };
  if (this.server === null)
    return done();
  // Still busy binding.
  this.server.once('listening', done);
  this.server.once('error', (err) => {
    // Hack: translate 'EADDRINUSE' error string back to numeric error code.
    // It works but ideally we'd have some backchannel between the net and
    // cluster modules for stuff like this.
    send(uv[`UV_${err.errno}`], null);
  });
RoundRobinHandle.prototype.remove = function(worker) {
  const existed = this.all.delete(worker.id);
  if (!existed)
    return false;
  const index = this.free.indexOf(worker);
  if (index !== -1)
    this.free.splice(index, 1);
  if (this.all.size !== 0)
    return false;
  for (const handle of this.handles) {
    handle.close();
  this.handles = [];
  this.handle.close();
  this.handle = null;
  return true;
RoundRobinHandle.prototype.distribute = function(err, handle) {
  this.handles.push(handle);
  const worker = this.free.shift();
  if (worker)
    this.handoff(worker);
RoundRobinHandle.prototype.handoff = function(worker) {
  if (this.all.has(worker.id) === false) {
    return;  // Worker is closing (or has closed) the server.
  const handle = this.handles.shift();
  if (handle === undefined) {
    this.free.push(worker);  // Add to ready queue again.
    return;
  const message = { act: 'newconn', key: this.key };
  sendHelper(worker.process, message, handle, (reply) => {
    if (reply.accepted)
      handle.close();
    else
      this.distribute(0, handle);  // Worker is shutting down. Send to another.
    this.handoff(worker);
  });
'use strict';
const assert = require('internal/assert');
const dgram = require('internal/dgram');
const net = require('net');
module.exports = SharedHandle;
function SharedHandle(key, address, port, addressType, fd, flags) {
  this.key = key;
  this.workers = [];
  this.handle = null;
  this.errno = 0;
  var rval;
  if (addressType === 'udp4' || addressType === 'udp6')
    rval = dgram._createSocketHandle(address, port, addressType, fd, flags);
  else
    rval = net._createServerHandle(address, port, addressType, fd, flags);
  if (typeof rval === 'number')
    this.errno = rval;
  else
    this.handle = rval;
SharedHandle.prototype.add = function(worker, send) {
  assert(!this.workers.includes(worker));
  this.workers.push(worker);
  send(this.errno, null, this.handle);
SharedHandle.prototype.remove = function(worker) {
  const index = this.workers.indexOf(worker);
  if (index === -1)
    return false; // The worker wasn't sharing this handle.
  this.workers.splice(index, 1);
  if (this.workers.length !== 0)
    return false;
  this.handle.close();
  this.handle = null;
  return true;
'use strict';
module.exports = {
  sendHelper,
  internal
const callbacks = new Map();
var seq = 0;
function sendHelper(proc, message, handle, cb) {
  if (!proc.connected)
    return false;
  // Mark message as internal. See INTERNAL_PREFIX in lib/child_process.js
  message = { cmd: 'NODE_CLUSTER', ...message, seq };
  if (typeof cb === 'function')
    callbacks.set(seq, cb);
  seq += 1;
  return proc.send(message, handle);
// Returns an internalMessage listener that hands off normal messages
// to the callback but intercepts and redirects ACK messages.
function internal(worker, cb) {
  return function onInternalMessage(message, handle) {
    if (message.cmd !== 'NODE_CLUSTER')
      return;
    var fn = cb;
    if (message.ack !== undefined) {
      const callback = callbacks.get(message.ack);
      if (callback !== undefined) {
        fn = callback;
        callbacks.delete(message.ack);
      }
    }
    fn.apply(worker, arguments);
  };
'use strict';
const { Object } = primordials;
const EventEmitter = require('events');
module.exports = Worker;
// Common Worker implementation shared between the cluster master and workers.
function Worker(options) {
  if (!(this instanceof Worker))
    return new Worker(options);
  EventEmitter.call(this);
  if (options === null || typeof options !== 'object')
    options = {};
  this.exitedAfterDisconnect = undefined;
  this.state = options.state || 'none';
  this.id = options.id | 0;
  if (options.process) {
    this.process = options.process;
    this.process.on('error', (code, signal) =>
      this.emit('error', code, signal)
    );
    this.process.on('message', (message, handle) =>
      this.emit('message', message, handle)
    );
Object.setPrototypeOf(Worker.prototype, EventEmitter.prototype);
Object.setPrototypeOf(Worker, EventEmitter);
Worker.prototype.kill = function() {
  this.destroy.apply(this, arguments);
Worker.prototype.send = function() {
  return this.process.send.apply(this.process, arguments);
Worker.prototype.isDead = function() {
  return this.process.exitCode != null || this.process.signalCode != null;
Worker.prototype.isConnected = function() {
  return this.process.connected;
'use strict';
// The Console constructor is not actually used to construct the global
// console. It's exported for backwards compatibility.
const { Object, ObjectPrototype, Reflect } = primordials;
const { trace } = internalBinding('trace_events');
const {
  isStackOverflowError,
  codes: {
    ERR_CONSOLE_WRITABLE_STREAM,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_ARG_VALUE,
    ERR_INCOMPATIBLE_OPTION_PAIR,
  },
} = require('internal/errors');
const { previewEntries } = internalBinding('util');
const { Buffer: { isBuffer } } = require('buffer');
const {
  inspect,
  formatWithOptions
} = require('internal/util/inspect');
const {
  isTypedArray, isSet, isMap, isSetIterator, isMapIterator,
} = require('internal/util/types');
const kCounts = Symbol('counts');
const kTraceConsoleCategory = 'node,node.console';
const kTraceCount = 'C'.charCodeAt(0);
const kTraceBegin = 'b'.charCodeAt(0);
const kTraceEnd = 'e'.charCodeAt(0);
const kTraceInstant = 'n'.charCodeAt(0);
const {
  isArray: ArrayIsArray,
  from: ArrayFrom,
} = Array;
// Lazy loaded for startup performance.
let cliTable;
// Track amount of indentation required via `console.group()`.
const kGroupIndent = Symbol('kGroupIndent');
const kFormatForStderr = Symbol('kFormatForStderr');
const kFormatForStdout = Symbol('kFormatForStdout');
const kGetInspectOptions = Symbol('kGetInspectOptions');
const kColorMode = Symbol('kColorMode');
const kIsConsole = Symbol('kIsConsole');
const kWriteToConsole = Symbol('kWriteToConsole');
const kBindProperties = Symbol('kBindProperties');
const kBindStreamsEager = Symbol('kBindStreamsEager');
const kBindStreamsLazy = Symbol('kBindStreamsLazy');
const kUseStdout = Symbol('kUseStdout');
const kUseStderr = Symbol('kUseStderr');
const optionsMap = new WeakMap();
function Console(options /* or: stdout, stderr, ignoreErrors = true */) {
  // We have to test new.target here to see if this function is called
  // with new, because we need to define a custom instanceof to accommodate
  // the global console.
  if (!new.target) {
    return new Console(...arguments);
  if (!options || typeof options.write === 'function') {
    options = {
      stdout: options,
      stderr: arguments[1],
      ignoreErrors: arguments[2]
    };
  const {
    stdout,
    stderr = stdout,
    ignoreErrors = true,
    colorMode = 'auto',
    inspectOptions
  } = options;
  if (!stdout || typeof stdout.write !== 'function') {
    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');
  if (!stderr || typeof stderr.write !== 'function') {
    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');
  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')
    throw new ERR_INVALID_ARG_VALUE('colorMode', colorMode);
  if (typeof inspectOptions === 'object' && inspectOptions !== null) {
    if (inspectOptions.colors !== undefined &&
        options.colorMode !== undefined) {
      throw new ERR_INCOMPATIBLE_OPTION_PAIR(
        'inspectOptions.color', 'colorMode');
    }
    optionsMap.set(this, inspectOptions);
  } else if (inspectOptions !== undefined) {
    throw new ERR_INVALID_ARG_TYPE('inspectOptions', 'object', inspectOptions);
  // Bind the prototype functions to this Console instance
  const keys = Object.keys(Console.prototype);
  for (var v = 0; v < keys.length; v++) {
    var k = keys[v];
    // We have to bind the methods grabbed from the instance instead of from
    // the prototype so that users extending the Console can override them
    // from the prototype chain of the subclass.
    this[k] = this[k].bind(this);
  this[kBindStreamsEager](stdout, stderr);
  this[kBindProperties](ignoreErrors, colorMode);
const consolePropAttributes = {
  writable: true,
  enumerable: false,
  configurable: true
// Fixup global.console instanceof global.console.Console
Object.defineProperty(Console, Symbol.hasInstance, {
  value(instance) {
    return instance[kIsConsole];
// Eager version for the Console constructor
Console.prototype[kBindStreamsEager] = function(stdout, stderr) {
  Object.defineProperties(this, {
    '_stdout': { ...consolePropAttributes, value: stdout },
    '_stderr': { ...consolePropAttributes, value: stderr }
  });
// Lazily load the stdout and stderr from an object so we don't
// create the stdio streams when they are not even accessed
Console.prototype[kBindStreamsLazy] = function(object) {
  let stdout;
  let stderr;
  Object.defineProperties(this, {
    '_stdout': {
      enumerable: false,
      configurable: true,
      get() {
        if (!stdout) stdout = object.stdout;
        return stdout;
      },
      set(value) { stdout = value; }
    },
    '_stderr': {
      enumerable: false,
      configurable: true,
      get() {
        if (!stderr) { stderr = object.stderr; }
        return stderr;
      },
      set(value) { stderr = value; }
    }
  });
Console.prototype[kBindProperties] = function(ignoreErrors, colorMode) {
  Object.defineProperties(this, {
    '_stdoutErrorHandler': {
      ...consolePropAttributes,
      value: createWriteErrorHandler(this, kUseStdout)
    },
    '_stderrErrorHandler': {
      ...consolePropAttributes,
      value: createWriteErrorHandler(this, kUseStderr)
    },
    '_ignoreErrors': {
      ...consolePropAttributes,
      value: Boolean(ignoreErrors)
    },
    '_times': { ...consolePropAttributes, value: new Map() },
    // Corresponds to https://console.spec.whatwg.org/#count-map
    [kCounts]: { ...consolePropAttributes, value: new Map() },
    [kColorMode]: { ...consolePropAttributes, value: colorMode },
    [kIsConsole]: { ...consolePropAttributes, value: true },
    [kGroupIndent]: { ...consolePropAttributes, value: '' }
  });
// Make a function that can serve as the callback passed to `stream.write()`.
function createWriteErrorHandler(instance, streamSymbol) {
  return (err) => {
    // This conditional evaluates to true if and only if there was an error
    // that was not already emitted (which happens when the _write callback
    // is invoked asynchronously).
    const stream = streamSymbol === kUseStdout ?
      instance._stdout : instance._stderr;
    if (err !== null && !stream._writableState.errorEmitted) {
      // If there was an error, it will be emitted on `stream` as
      // an `error` event. Adding a `once` listener will keep that error
      // from becoming an uncaught exception, but since the handler is
      // removed after the event, non-console.* writes won't be affected.
      // we are only adding noop if there is no one else listening for 'error'
      if (stream.listenerCount('error') === 0) {
        stream.on('error', noop);
      }
    }
  };
Console.prototype[kWriteToConsole] = function(streamSymbol, string) {
  const ignoreErrors = this._ignoreErrors;
  const groupIndent = this[kGroupIndent];
  const useStdout = streamSymbol === kUseStdout;
  const stream = useStdout ? this._stdout : this._stderr;
  const errorHandler = useStdout ?
    this._stdoutErrorHandler : this._stderrErrorHandler;
  if (groupIndent.length !== 0) {
    if (string.includes('\n')) {
      string = string.replace(/\n/g, `\n${groupIndent}`);
    }
    string = groupIndent + string;
  string += '\n';
  if (ignoreErrors === false) return stream.write(string);
  // There may be an error occurring synchronously (e.g. for files or TTYs
  // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems), so
  // handle both situations.
  try {
    // Add and later remove a noop error handler to catch synchronous errors.
    if (stream.listenerCount('error') === 0)
      stream.once('error', noop);
    stream.write(string, errorHandler);
  } catch (e) {
    // Console is a debugging utility, so it swallowing errors is not desirable
    // even in edge cases such as low stack space.
    if (isStackOverflowError(e))
      throw e;
    // Sorry, there's no proper way to pass along the error here.
  } finally {
    stream.removeListener('error', noop);
const kColorInspectOptions = { colors: true };
const kNoColorInspectOptions = {};
Console.prototype[kGetInspectOptions] = function(stream) {
  let color = this[kColorMode];
  if (color === 'auto') {
    color = stream.isTTY && (
      typeof stream.getColorDepth === 'function' ?
        stream.getColorDepth() > 2 : true);
  const options = optionsMap.get(this);
  if (options) {
    if (options.colors === undefined) {
      options.colors = color;
    }
    return options;
  return color ? kColorInspectOptions : kNoColorInspectOptions;
Console.prototype[kFormatForStdout] = function(args) {
  const opts = this[kGetInspectOptions](this._stdout);
  return formatWithOptions(opts, ...args);
Console.prototype[kFormatForStderr] = function(args) {
  const opts = this[kGetInspectOptions](this._stderr);
  return formatWithOptions(opts, ...args);
const consoleMethods = {
  log(...args) {
    this[kWriteToConsole](kUseStdout, this[kFormatForStdout](args));
  },
  warn(...args) {
    this[kWriteToConsole](kUseStderr, this[kFormatForStderr](args));
  },
  dir(object, options) {
    this[kWriteToConsole](kUseStdout, inspect(object, {
      customInspect: false,
      ...this[kGetInspectOptions](this._stdout),
      ...options
    }));
  },
  time(label = 'default') {
    // Coerces everything other than Symbol to a string
    label = `${label}`;
    if (this._times.has(label)) {
      process.emitWarning(`Label '${label}' already exists for console.time()`);
      return;
    }
    trace(kTraceBegin, kTraceConsoleCategory, `time::${label}`, 0);
    this._times.set(label, process.hrtime());
  },
  timeEnd(label = 'default') {
    // Coerces everything other than Symbol to a string
    label = `${label}`;
    const hasWarned = timeLogImpl(this, 'timeEnd', label);
    trace(kTraceEnd, kTraceConsoleCategory, `time::${label}`, 0);
    if (!hasWarned) {
      this._times.delete(label);
    }
  },
  timeLog(label = 'default', ...data) {
    // Coerces everything other than Symbol to a string
    label = `${label}`;
    timeLogImpl(this, 'timeLog', label, data);
    trace(kTraceInstant, kTraceConsoleCategory, `time::${label}`, 0);
  },
  trace: function trace(...args) {
    const err = {
      name: 'Trace',
      message: this[kFormatForStderr](args)
    };
    // eslint-disable-next-line no-restricted-syntax
    Error.captureStackTrace(err, trace);
    this.error(err.stack);
  },
  assert(expression, ...args) {
    if (!expression) {
      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;
      this.warn(...args);  // The arguments will be formatted in warn() again
    }
  },
  // Defined by: https://console.spec.whatwg.org/#clear
  clear() {
    // It only makes sense to clear if _stdout is a TTY.
    // Otherwise, do nothing.
    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {
      // The require is here intentionally to avoid readline being
      // required too early when console is first loaded.
      const { cursorTo, clearScreenDown } = require('readline');
      cursorTo(this._stdout, 0, 0);
      clearScreenDown(this._stdout);
    }
  },
  // Defined by: https://console.spec.whatwg.org/#count
  count(label = 'default') {
    // Ensures that label is a string, and only things that can be
    // coerced to strings. e.g. Symbol is not allowed
    label = `${label}`;
    const counts = this[kCounts];
    let count = counts.get(label);
    if (count === undefined)
      count = 1;
    else
      count++;
    counts.set(label, count);
    trace(kTraceCount, kTraceConsoleCategory, `count::${label}`, 0, count);
    this.log(`${label}: ${count}`);
  },
  // Defined by: https://console.spec.whatwg.org/#countreset
  countReset(label = 'default') {
    const counts = this[kCounts];
    if (!counts.has(label)) {
      process.emitWarning(`Count for '${label}' does not exist`);
      return;
    }
    trace(kTraceCount, kTraceConsoleCategory, `count::${label}`, 0, 0);
    counts.delete(`${label}`);
  },
  group(...data) {
    if (data.length > 0) {
      this.log(...data);
    }
    this[kGroupIndent] += '  ';
  },
  groupEnd() {
    this[kGroupIndent] =
      this[kGroupIndent].slice(0, this[kGroupIndent].length - 2);
  },
  // https://console.spec.whatwg.org/#table
  table(tabularData, properties) {
    if (properties !== undefined && !ArrayIsArray(properties))
      throw new ERR_INVALID_ARG_TYPE('properties', 'Array', properties);
    if (tabularData === null || typeof tabularData !== 'object')
      return this.log(tabularData);
    if (cliTable === undefined) cliTable = require('internal/cli_table');
    const final = (k, v) => this.log(cliTable(k, v));
    const _inspect = (v) => {
      const depth = v !== null &&
                    typeof v === 'object' &&
                    !isArray(v) &&
                    Object.keys(v).length > 2 ? -1 : 0;
      const opt = {
        depth,
        maxArrayLength: 3,
        breakLength: Infinity,
        ...this[kGetInspectOptions](this._stdout)
      };
      return inspect(v, opt);
    };
    const getIndexArray = (length) => ArrayFrom(
      { length }, (_, i) => _inspect(i));
    const mapIter = isMapIterator(tabularData);
    let isKeyValue = false;
    let i = 0;
    if (mapIter) {
      const res = previewEntries(tabularData, true);
      tabularData = res[0];
      isKeyValue = res[1];
    }
    if (isKeyValue || isMap(tabularData)) {
      const keys = [];
      const values = [];
      let length = 0;
      if (mapIter) {
        for (; i < tabularData.length / 2; ++i) {
          keys.push(_inspect(tabularData[i * 2]));
          values.push(_inspect(tabularData[i * 2 + 1]));
          length++;
        }
      } else {
        for (const [k, v] of tabularData) {
          keys.push(_inspect(k));
          values.push(_inspect(v));
          length++;
        }
      }
      return final([
        iterKey, keyKey, valuesKey
      ], [
        getIndexArray(length),
        keys,
        values,
      ]);
    }
    const setIter = isSetIterator(tabularData);
    if (setIter)
      tabularData = previewEntries(tabularData);
    const setlike = setIter || (mapIter && !isKeyValue) || isSet(tabularData);
    if (setlike) {
      const values = [];
      let length = 0;
      for (const v of tabularData) {
        values.push(_inspect(v));
        length++;
      }
      return final([iterKey, valuesKey], [getIndexArray(length), values]);
    }
    const map = {};
    let hasPrimitives = false;
    const valuesKeyArray = [];
    const indexKeyArray = Object.keys(tabularData);
    for (; i < indexKeyArray.length; i++) {
      const item = tabularData[indexKeyArray[i]];
      const primitive = item === null ||
          (typeof item !== 'function' && typeof item !== 'object');
      if (properties === undefined && primitive) {
        hasPrimitives = true;
        valuesKeyArray[i] = _inspect(item);
      } else {
        const keys = properties || Object.keys(item);
        for (const key of keys) {
          if (map[key] === undefined)
            map[key] = [];
          if ((primitive && properties) ||
               !ObjectPrototype.hasOwnProperty(item, key))
            map[key][i] = '';
          else
            map[key][i] = _inspect(item[key]);
        }
      }
    }
    const keys = Object.keys(map);
    const values = Object.values(map);
    if (hasPrimitives) {
      keys.push(valuesKey);
      values.push(valuesKeyArray);
    }
    keys.unshift(indexKey);
    values.unshift(indexKeyArray);
    return final(keys, values);
  },
// Returns true if label was not found
function timeLogImpl(self, name, label, data) {
  const time = self._times.get(label);
  if (!time) {
    process.emitWarning(`No such label '${label}' for console.${name}()`);
    return true;
  const duration = process.hrtime(time);
  const ms = duration[0] * 1000 + duration[1] / 1e6;
  if (data === undefined) {
    self.log('%s: %sms', label, ms.toFixed(3));
  } else {
    self.log('%s: %sms', label, ms.toFixed(3), ...data);
  return false;
const keyKey = 'Key';
const valuesKey = 'Values';
const indexKey = '(index)';
const iterKey = '(iteration index)';
const isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);
function noop() {}
for (const method of Reflect.ownKeys(consoleMethods))
  Console.prototype[method] = consoleMethods[method];
Console.prototype.debug = Console.prototype.log;
Console.prototype.info = Console.prototype.log;
Console.prototype.dirxml = Console.prototype.log;
Console.prototype.error = Console.prototype.warn;
Console.prototype.groupCollapsed = Console.prototype.group;
module.exports = {
  Console,
  kBindStreamsLazy,
  kBindProperties
'use strict';
// See https://console.spec.whatwg.org/#console-namespace
// > For historical web-compatibility reasons, the namespace object
// > for console must have as its [[Prototype]] an empty object,
// > created as if by ObjectCreate(%ObjectPrototype%),
// > instead of %ObjectPrototype%.
// Since in Node.js, the Console constructor has been exposed through
// require('console'), we need to keep the Console constructor but
// we cannot actually use `new Console` to construct the global console.
// Therefore, the console.Console.prototype is not
// in the global console prototype chain anymore.
const { Object, Reflect } = primordials;
const {
  Console,
  kBindStreamsLazy,
  kBindProperties
} = require('internal/console/constructor');
const globalConsole = Object.create({});
// Since Console is not on the prototype chain of the global console,
// the symbol properties on Console.prototype have to be looked up from
// the global console itself. In addition, we need to make the global
// console a namespace by binding the console methods directly onto
// the global console with the receiver fixed.
for (const prop of Reflect.ownKeys(Console.prototype)) {
  if (prop === 'constructor') { continue; }
  const desc = Reflect.getOwnPropertyDescriptor(Console.prototype, prop);
  if (typeof desc.value === 'function') { // fix the receiver
    desc.value = desc.value.bind(globalConsole);
  Reflect.defineProperty(globalConsole, prop, desc);
globalConsole[kBindStreamsLazy](process);
globalConsole[kBindProperties](true, 'auto');
// This is a legacy feature - the Console constructor is exposed on
// the global console instance.
globalConsole.Console = Console;
module.exports = globalConsole;
'use strict';
const {
  certExportChallenge,
  certExportPublicKey,
  certVerifySpkac
} = internalBinding('crypto');
const {
  validateBuffer
} = require('internal/validators');
const { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;
const { isArrayBufferView } = require('internal/util/types');
const {
  toBuf
} = require('internal/crypto/util');
function verifySpkac(spkac) {
  validateBuffer(spkac, 'spkac');
  return certVerifySpkac(spkac);
function exportPublicKey(spkac, encoding) {
  spkac = toBuf(spkac, encoding);
  if (!isArrayBufferView(spkac)) {
    throw new ERR_INVALID_ARG_TYPE(
      'spkac',
      ['string', 'Buffer', 'TypedArray', 'DataView'],
      spkac
    );
  return certExportPublicKey(spkac);
function exportChallenge(spkac, encoding) {
  spkac = toBuf(spkac, encoding);
  if (!isArrayBufferView(spkac)) {
    throw new ERR_INVALID_ARG_TYPE(
      'spkac',
      ['string', 'Buffer', 'TypedArray', 'DataView'],
      spkac
    );
  return certExportChallenge(spkac);
// For backwards compatibility reasons, this cannot be converted into a
// ES6 Class.
function Certificate() {
  if (!(this instanceof Certificate))
    return new Certificate();
Certificate.prototype.verifySpkac = verifySpkac;
Certificate.prototype.exportPublicKey = exportPublicKey;
Certificate.prototype.exportChallenge = exportChallenge;
Certificate.exportChallenge = exportChallenge;
Certificate.exportPublicKey = exportPublicKey;
Certificate.verifySpkac = verifySpkac;
module.exports = Certificate;
'use strict';
const { Object } = primordials;
const {
  RSA_PKCS1_OAEP_PADDING,
  RSA_PKCS1_PADDING
} = internalBinding('constants').crypto;
const {
  ERR_CRYPTO_INVALID_STATE,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_OPT_VALUE
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const {
  preparePrivateKey,
  preparePublicOrPrivateKey,
  prepareSecretKey
} = require('internal/crypto/keys');
const {
  getDefaultEncoding,
  kHandle,
  toBuf
} = require('internal/crypto/util');
const { isArrayBufferView } = require('internal/util/types');
const {
  CipherBase,
  privateDecrypt: _privateDecrypt,
  privateEncrypt: _privateEncrypt,
  publicDecrypt: _publicDecrypt,
  publicEncrypt: _publicEncrypt
} = internalBinding('crypto');
const assert = require('internal/assert');
const LazyTransform = require('internal/streams/lazy_transform');
const { normalizeEncoding } = require('internal/util');
// Lazy loaded for startup performance.
let StringDecoder;
function rsaFunctionFor(method, defaultPadding, keyType) {
  return (options, buffer) => {
    const { format, type, data, passphrase } =
      keyType === 'private' ?
        preparePrivateKey(options) :
        preparePublicOrPrivateKey(options);
    const padding = options.padding || defaultPadding;
    return method(data, format, type, passphrase, buffer, padding);
  };
const publicEncrypt = rsaFunctionFor(_publicEncrypt, RSA_PKCS1_OAEP_PADDING,
                                     'public');
const publicDecrypt = rsaFunctionFor(_publicDecrypt, RSA_PKCS1_PADDING,
                                     'private');
const privateEncrypt = rsaFunctionFor(_privateEncrypt, RSA_PKCS1_PADDING,
                                      'private');
const privateDecrypt = rsaFunctionFor(_privateDecrypt, RSA_PKCS1_OAEP_PADDING,
                                      'public');
function getDecoder(decoder, encoding) {
  encoding = normalizeEncoding(encoding);
  if (StringDecoder === undefined)
    StringDecoder = require('string_decoder').StringDecoder;
  decoder = decoder || new StringDecoder(encoding);
  assert(decoder.encoding === encoding, 'Cannot change encoding');
  return decoder;
function getUIntOption(options, key) {
  let value;
  if (options && (value = options[key]) != null) {
    if (value >>> 0 !== value)
      throw new ERR_INVALID_OPT_VALUE(key, value);
    return value;
  return -1;
function createCipherBase(cipher, credential, options, decipher, iv) {
  const authTagLength = getUIntOption(options, 'authTagLength');
  this[kHandle] = new CipherBase(decipher);
  if (iv === undefined) {
    this[kHandle].init(cipher, credential, authTagLength);
  } else {
    this[kHandle].initiv(cipher, credential, iv, authTagLength);
  this._decoder = null;
  LazyTransform.call(this, options);
function invalidArrayBufferView(name, value) {
  return new ERR_INVALID_ARG_TYPE(
    name,
    ['string', 'Buffer', 'TypedArray', 'DataView'],
    value
  );
function createCipher(cipher, password, options, decipher) {
  validateString(cipher, 'cipher');
  password = toBuf(password);
  if (!isArrayBufferView(password)) {
    throw invalidArrayBufferView('password', password);
  createCipherBase.call(this, cipher, password, options, decipher);
function createCipherWithIV(cipher, key, options, decipher, iv) {
  validateString(cipher, 'cipher');
  key = prepareSecretKey(key);
  iv = toBuf(iv);
  if (iv !== null && !isArrayBufferView(iv)) {
    throw invalidArrayBufferView('iv', iv);
  createCipherBase.call(this, cipher, key, options, decipher, iv);
function Cipher(cipher, password, options) {
  if (!(this instanceof Cipher))
    return new Cipher(cipher, password, options);
  createCipher.call(this, cipher, password, options, true);
Object.setPrototypeOf(Cipher.prototype, LazyTransform.prototype);
Object.setPrototypeOf(Cipher, LazyTransform);
Cipher.prototype._transform = function _transform(chunk, encoding, callback) {
  this.push(this[kHandle].update(chunk, encoding));
  callback();
Cipher.prototype._flush = function _flush(callback) {
  try {
    this.push(this[kHandle].final());
  } catch (e) {
    callback(e);
    return;
  callback();
Cipher.prototype.update = function update(data, inputEncoding, outputEncoding) {
  const encoding = getDefaultEncoding();
  inputEncoding = inputEncoding || encoding;
  outputEncoding = outputEncoding || encoding;
  if (typeof data !== 'string' && !isArrayBufferView(data)) {
    throw invalidArrayBufferView('data', data);
  const ret = this[kHandle].update(data, inputEncoding);
  if (outputEncoding && outputEncoding !== 'buffer') {
    this._decoder = getDecoder(this._decoder, outputEncoding);
    return this._decoder.write(ret);
  return ret;
Cipher.prototype.final = function final(outputEncoding) {
  outputEncoding = outputEncoding || getDefaultEncoding();
  const ret = this[kHandle].final();
  if (outputEncoding && outputEncoding !== 'buffer') {
    this._decoder = getDecoder(this._decoder, outputEncoding);
    return this._decoder.end(ret);
  return ret;
Cipher.prototype.setAutoPadding = function setAutoPadding(ap) {
  if (!this[kHandle].setAutoPadding(!!ap))
    throw new ERR_CRYPTO_INVALID_STATE('setAutoPadding');
  return this;
Cipher.prototype.getAuthTag = function getAuthTag() {
  const ret = this[kHandle].getAuthTag();
  if (ret === undefined)
    throw new ERR_CRYPTO_INVALID_STATE('getAuthTag');
  return ret;
function setAuthTag(tagbuf) {
  if (!isArrayBufferView(tagbuf)) {
    throw new ERR_INVALID_ARG_TYPE('buffer',
                                   ['Buffer', 'TypedArray', 'DataView'],
                                   tagbuf);
  if (!this[kHandle].setAuthTag(tagbuf))
    throw new ERR_CRYPTO_INVALID_STATE('setAuthTag');
  return this;
Cipher.prototype.setAAD = function setAAD(aadbuf, options) {
  if (!isArrayBufferView(aadbuf)) {
    throw new ERR_INVALID_ARG_TYPE('buffer',
                                   ['Buffer', 'TypedArray', 'DataView'],
                                   aadbuf);
  const plaintextLength = getUIntOption(options, 'plaintextLength');
  if (!this[kHandle].setAAD(aadbuf, plaintextLength))
    throw new ERR_CRYPTO_INVALID_STATE('setAAD');
  return this;
function Cipheriv(cipher, key, iv, options) {
  if (!(this instanceof Cipheriv))
    return new Cipheriv(cipher, key, iv, options);
  createCipherWithIV.call(this, cipher, key, options, true, iv);
function addCipherPrototypeFunctions(constructor) {
  constructor.prototype._transform = Cipher.prototype._transform;
  constructor.prototype._flush = Cipher.prototype._flush;
  constructor.prototype.update = Cipher.prototype.update;
  constructor.prototype.final = Cipher.prototype.final;
  constructor.prototype.setAutoPadding = Cipher.prototype.setAutoPadding;
  if (constructor === Cipheriv) {
    constructor.prototype.getAuthTag = Cipher.prototype.getAuthTag;
  } else {
    constructor.prototype.setAuthTag = setAuthTag;
  constructor.prototype.setAAD = Cipher.prototype.setAAD;
Object.setPrototypeOf(Cipheriv.prototype, LazyTransform.prototype);
Object.setPrototypeOf(Cipheriv, LazyTransform);
addCipherPrototypeFunctions(Cipheriv);
function Decipher(cipher, password, options) {
  if (!(this instanceof Decipher))
    return new Decipher(cipher, password, options);
  createCipher.call(this, cipher, password, options, false);
Object.setPrototypeOf(Decipher.prototype, LazyTransform.prototype);
Object.setPrototypeOf(Decipher, LazyTransform);
addCipherPrototypeFunctions(Decipher);
function Decipheriv(cipher, key, iv, options) {
  if (!(this instanceof Decipheriv))
    return new Decipheriv(cipher, key, iv, options);
  createCipherWithIV.call(this, cipher, key, options, false, iv);
Object.setPrototypeOf(Decipheriv.prototype, LazyTransform.prototype);
Object.setPrototypeOf(Decipheriv, LazyTransform);
addCipherPrototypeFunctions(Decipheriv);
module.exports = {
  Cipher,
  Cipheriv,
  Decipher,
  Decipheriv,
  privateDecrypt,
  privateEncrypt,
  publicDecrypt,
  publicEncrypt,
'use strict';
const { Object } = primordials;
const { Buffer } = require('buffer');
const {
  ERR_CRYPTO_ECDH_INVALID_FORMAT,
  ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY,
  ERR_INVALID_ARG_TYPE
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const { isArrayBufferView } = require('internal/util/types');
const {
  getDefaultEncoding,
  kHandle,
  toBuf
} = require('internal/crypto/util');
const {
  DiffieHellman: _DiffieHellman,
  DiffieHellmanGroup: _DiffieHellmanGroup,
  ECDH: _ECDH,
  ECDHConvertKey: _ECDHConvertKey
} = internalBinding('crypto');
const {
  POINT_CONVERSION_COMPRESSED,
  POINT_CONVERSION_HYBRID,
  POINT_CONVERSION_UNCOMPRESSED
} = internalBinding('constants').crypto;
const DH_GENERATOR = 2;
function DiffieHellman(sizeOrKey, keyEncoding, generator, genEncoding) {
  if (!(this instanceof DiffieHellman))
    return new DiffieHellman(sizeOrKey, keyEncoding, generator, genEncoding);
  if (typeof sizeOrKey !== 'number' &&
      typeof sizeOrKey !== 'string' &&
      !isArrayBufferView(sizeOrKey)) {
    throw new ERR_INVALID_ARG_TYPE(
      'sizeOrKey',
      ['number', 'string', 'Buffer', 'TypedArray', 'DataView'],
      sizeOrKey
    );
  if (keyEncoding && !Buffer.isEncoding(keyEncoding) &&
      keyEncoding !== 'buffer') {
    genEncoding = generator;
    generator = keyEncoding;
    keyEncoding = false;
  const encoding = getDefaultEncoding();
  keyEncoding = keyEncoding || encoding;
  genEncoding = genEncoding || encoding;
  if (typeof sizeOrKey !== 'number')
    sizeOrKey = toBuf(sizeOrKey, keyEncoding);
  if (!generator)
    generator = DH_GENERATOR;
  else if (typeof generator !== 'number')
    generator = toBuf(generator, genEncoding);
  this[kHandle] = new _DiffieHellman(sizeOrKey, generator);
  Object.defineProperty(this, 'verifyError', {
    enumerable: true,
    value: this[kHandle].verifyError,
    writable: false
  });
function DiffieHellmanGroup(name) {
  if (!(this instanceof DiffieHellmanGroup))
    return new DiffieHellmanGroup(name);
  this[kHandle] = new _DiffieHellmanGroup(name);
  Object.defineProperty(this, 'verifyError', {
    enumerable: true,
    value: this[kHandle].verifyError,
    writable: false
  });
DiffieHellmanGroup.prototype.generateKeys =
    DiffieHellman.prototype.generateKeys =
    dhGenerateKeys;
function dhGenerateKeys(encoding) {
  const keys = this[kHandle].generateKeys();
  encoding = encoding || getDefaultEncoding();
  return encode(keys, encoding);
DiffieHellmanGroup.prototype.computeSecret =
    DiffieHellman.prototype.computeSecret =
    dhComputeSecret;
function dhComputeSecret(key, inEnc, outEnc) {
  const encoding = getDefaultEncoding();
  inEnc = inEnc || encoding;
  outEnc = outEnc || encoding;
  const ret = this[kHandle].computeSecret(toBuf(key, inEnc));
  if (typeof ret === 'string')
    throw new ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY();
  return encode(ret, outEnc);
DiffieHellmanGroup.prototype.getPrime =
    DiffieHellman.prototype.getPrime =
    dhGetPrime;
function dhGetPrime(encoding) {
  const prime = this[kHandle].getPrime();
  encoding = encoding || getDefaultEncoding();
  return encode(prime, encoding);
DiffieHellmanGroup.prototype.getGenerator =
    DiffieHellman.prototype.getGenerator =
    dhGetGenerator;
function dhGetGenerator(encoding) {
  const generator = this[kHandle].getGenerator();
  encoding = encoding || getDefaultEncoding();
  return encode(generator, encoding);
DiffieHellmanGroup.prototype.getPublicKey =
    DiffieHellman.prototype.getPublicKey =
    dhGetPublicKey;
function dhGetPublicKey(encoding) {
  const key = this[kHandle].getPublicKey();
  encoding = encoding || getDefaultEncoding();
  return encode(key, encoding);
DiffieHellmanGroup.prototype.getPrivateKey =
    DiffieHellman.prototype.getPrivateKey =
    dhGetPrivateKey;
function dhGetPrivateKey(encoding) {
  const key = this[kHandle].getPrivateKey();
  encoding = encoding || getDefaultEncoding();
  return encode(key, encoding);
DiffieHellman.prototype.setPublicKey = function setPublicKey(key, encoding) {
  encoding = encoding || getDefaultEncoding();
  this[kHandle].setPublicKey(toBuf(key, encoding));
  return this;
DiffieHellman.prototype.setPrivateKey = function setPrivateKey(key, encoding) {
  encoding = encoding || getDefaultEncoding();
  this[kHandle].setPrivateKey(toBuf(key, encoding));
  return this;
function ECDH(curve) {
  if (!(this instanceof ECDH))
    return new ECDH(curve);
  validateString(curve, 'curve');
  this[kHandle] = new _ECDH(curve);
ECDH.prototype.computeSecret = DiffieHellman.prototype.computeSecret;
ECDH.prototype.setPrivateKey = DiffieHellman.prototype.setPrivateKey;
ECDH.prototype.setPublicKey = DiffieHellman.prototype.setPublicKey;
ECDH.prototype.getPrivateKey = DiffieHellman.prototype.getPrivateKey;
ECDH.prototype.generateKeys = function generateKeys(encoding, format) {
  this[kHandle].generateKeys();
  return this.getPublicKey(encoding, format);
ECDH.prototype.getPublicKey = function getPublicKey(encoding, format) {
  const f = getFormat(format);
  const key = this[kHandle].getPublicKey(f);
  encoding = encoding || getDefaultEncoding();
  return encode(key, encoding);
ECDH.convertKey = function convertKey(key, curve, inEnc, outEnc, format) {
  if (typeof key !== 'string' && !isArrayBufferView(key)) {
    throw new ERR_INVALID_ARG_TYPE(
      'key',
      ['string', 'Buffer', 'TypedArray', 'DataView'],
      key
    );
  validateString(curve, 'curve');
  const encoding = getDefaultEncoding();
  inEnc = inEnc || encoding;
  outEnc = outEnc || encoding;
  const f = getFormat(format);
  const convertedKey = _ECDHConvertKey(toBuf(key, inEnc), curve, f);
  return encode(convertedKey, outEnc);
function encode(buffer, encoding) {
  if (encoding && encoding !== 'buffer')
    buffer = buffer.toString(encoding);
  return buffer;
function getFormat(format) {
  if (format) {
    if (format === 'compressed')
      return POINT_CONVERSION_COMPRESSED;
    if (format === 'hybrid')
      return POINT_CONVERSION_HYBRID;
    if (format !== 'uncompressed')
      throw new ERR_CRYPTO_ECDH_INVALID_FORMAT(format);
  return POINT_CONVERSION_UNCOMPRESSED;
module.exports = {
  DiffieHellman,
  DiffieHellmanGroup,
  ECDH
'use strict';
const { Object } = primordials;
const {
  Hash: _Hash,
  Hmac: _Hmac
} = internalBinding('crypto');
const {
  getDefaultEncoding,
  kHandle,
  toBuf
} = require('internal/crypto/util');
const {
  prepareSecretKey
} = require('internal/crypto/keys');
const { Buffer } = require('buffer');
const {
  ERR_CRYPTO_HASH_DIGEST_NO_UTF16,
  ERR_CRYPTO_HASH_FINALIZED,
  ERR_CRYPTO_HASH_UPDATE_FAILED,
  ERR_INVALID_ARG_TYPE
} = require('internal/errors').codes;
const { validateString, validateUint32 } = require('internal/validators');
const { normalizeEncoding } = require('internal/util');
const { isArrayBufferView } = require('internal/util/types');
const LazyTransform = require('internal/streams/lazy_transform');
const kState = Symbol('kState');
const kFinalized = Symbol('kFinalized');
function Hash(algorithm, options) {
  if (!(this instanceof Hash))
    return new Hash(algorithm, options);
  validateString(algorithm, 'algorithm');
  const xofLen = typeof options === 'object' && options !== null ?
    options.outputLength : undefined;
  if (xofLen !== undefined)
    validateUint32(xofLen, 'options.outputLength');
  this[kHandle] = new _Hash(algorithm, xofLen);
  this[kState] = {
    [kFinalized]: false
  };
  LazyTransform.call(this, options);
Object.setPrototypeOf(Hash.prototype, LazyTransform.prototype);
Object.setPrototypeOf(Hash, LazyTransform);
Hash.prototype._transform = function _transform(chunk, encoding, callback) {
  this[kHandle].update(chunk, encoding);
  callback();
Hash.prototype._flush = function _flush(callback) {
  this.push(this[kHandle].digest());
  callback();
Hash.prototype.update = function update(data, encoding) {
  const state = this[kState];
  if (state[kFinalized])
    throw new ERR_CRYPTO_HASH_FINALIZED();
  if (typeof data !== 'string' && !isArrayBufferView(data)) {
    throw new ERR_INVALID_ARG_TYPE('data',
                                   ['string',
                                    'Buffer',
                                    'TypedArray',
                                    'DataView'],
                                   data);
  if (!this[kHandle].update(data, encoding || getDefaultEncoding()))
    throw new ERR_CRYPTO_HASH_UPDATE_FAILED();
  return this;
Hash.prototype.digest = function digest(outputEncoding) {
  const state = this[kState];
  if (state[kFinalized])
    throw new ERR_CRYPTO_HASH_FINALIZED();
  outputEncoding = outputEncoding || getDefaultEncoding();
  if (normalizeEncoding(outputEncoding) === 'utf16le')
    throw new ERR_CRYPTO_HASH_DIGEST_NO_UTF16();
  // Explicit conversion for backward compatibility.
  const ret = this[kHandle].digest(`${outputEncoding}`);
  state[kFinalized] = true;
  return ret;
function Hmac(hmac, key, options) {
  if (!(this instanceof Hmac))
    return new Hmac(hmac, key, options);
  validateString(hmac, 'hmac');
  key = prepareSecretKey(key);
  this[kHandle] = new _Hmac();
  this[kHandle].init(hmac, toBuf(key));
  this[kState] = {
    [kFinalized]: false
  };
  LazyTransform.call(this, options);
Object.setPrototypeOf(Hmac.prototype, LazyTransform.prototype);
Object.setPrototypeOf(Hmac, LazyTransform);
Hmac.prototype.update = Hash.prototype.update;
Hmac.prototype.digest = function digest(outputEncoding) {
  const state = this[kState];
  outputEncoding = outputEncoding || getDefaultEncoding();
  if (normalizeEncoding(outputEncoding) === 'utf16le')
    throw new ERR_CRYPTO_HASH_DIGEST_NO_UTF16();
  if (state[kFinalized]) {
    const buf = Buffer.from('');
    return outputEncoding === 'buffer' ? buf : buf.toString(outputEncoding);
  // Explicit conversion for backward compatibility.
  const ret = this[kHandle].digest(`${outputEncoding}`);
  state[kFinalized] = true;
  return ret;
Hmac.prototype._flush = Hash.prototype._flush;
Hmac.prototype._transform = Hash.prototype._transform;
module.exports = {
  Hash,
  Hmac
'use strict';
const { Object } = primordials;
const { AsyncWrap, Providers } = internalBinding('async_wrap');
const {
  generateKeyPairRSA,
  generateKeyPairRSAPSS,
  generateKeyPairDSA,
  generateKeyPairEC,
  generateKeyPairNid,
  EVP_PKEY_ED25519,
  EVP_PKEY_ED448,
  EVP_PKEY_X25519,
  EVP_PKEY_X448,
  OPENSSL_EC_NAMED_CURVE,
  OPENSSL_EC_EXPLICIT_CURVE
} = internalBinding('crypto');
const {
  parsePublicKeyEncoding,
  parsePrivateKeyEncoding,
  PublicKeyObject,
  PrivateKeyObject
} = require('internal/crypto/keys');
const { customPromisifyArgs } = require('internal/util');
const { isUint32, validateString } = require('internal/validators');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_ARG_VALUE,
  ERR_INVALID_CALLBACK,
  ERR_INVALID_OPT_VALUE
} = require('internal/errors').codes;
const { isArrayBufferView } = require('internal/util/types');
function wrapKey(key, ctor) {
  if (typeof key === 'string' || isArrayBufferView(key))
    return key;
  return new ctor(key);
function generateKeyPair(type, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = undefined;
  const impl = check(type, options);
  if (typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  const wrap = new AsyncWrap(Providers.KEYPAIRGENREQUEST);
  wrap.ondone = (ex, pubkey, privkey) => {
    if (ex) return callback.call(wrap, ex);
    // If no encoding was chosen, return key objects instead.
    pubkey = wrapKey(pubkey, PublicKeyObject);
    privkey = wrapKey(privkey, PrivateKeyObject);
    callback.call(wrap, null, pubkey, privkey);
  };
  handleError(impl(wrap));
Object.defineProperty(generateKeyPair, customPromisifyArgs, {
  value: ['publicKey', 'privateKey'],
  enumerable: false
function generateKeyPairSync(type, options) {
  const impl = check(type, options);
  return handleError(impl());
function handleError(ret) {
  if (ret === undefined)
    return; // async
  const [err, publicKey, privateKey] = ret;
  if (err !== undefined)
    throw err;
  // If no encoding was chosen, return key objects instead.
  return {
    publicKey: wrapKey(publicKey, PublicKeyObject),
    privateKey: wrapKey(privateKey, PrivateKeyObject)
  };
function parseKeyEncoding(keyType, options) {
  const { publicKeyEncoding, privateKeyEncoding } = options;
  let publicFormat, publicType;
  if (publicKeyEncoding == null) {
    publicFormat = publicType = undefined;
  } else if (typeof publicKeyEncoding === 'object') {
    ({
      format: publicFormat,
      type: publicType
    } = parsePublicKeyEncoding(publicKeyEncoding, keyType,
                               'publicKeyEncoding'));
  } else {
    throw new ERR_INVALID_OPT_VALUE('publicKeyEncoding', publicKeyEncoding);
  let privateFormat, privateType, cipher, passphrase;
  if (privateKeyEncoding == null) {
    privateFormat = privateType = undefined;
  } else if (typeof privateKeyEncoding === 'object') {
    ({
      format: privateFormat,
      type: privateType,
      cipher,
      passphrase
    } = parsePrivateKeyEncoding(privateKeyEncoding, keyType,
                                'privateKeyEncoding'));
  } else {
    throw new ERR_INVALID_OPT_VALUE('privateKeyEncoding', privateKeyEncoding);
  return {
    cipher, passphrase, publicType, publicFormat, privateType, privateFormat
  };
function check(type, options, callback) {
  validateString(type, 'type');
  // These will be set after parsing the type and type-specific options to make
  // the order a bit more intuitive.
  let cipher, passphrase, publicType, publicFormat, privateType, privateFormat;
  if (options !== undefined && typeof options !== 'object')
    throw new ERR_INVALID_ARG_TYPE('options', 'object', options);
  function needOptions() {
    if (options == null)
      throw new ERR_INVALID_ARG_TYPE('options', 'object', options);
    return options;
  let impl;
  switch (type) {
    case 'rsa':
    case 'rsa-pss':
      {
        const { modulusLength } = needOptions();
        if (!isUint32(modulusLength))
          throw new ERR_INVALID_OPT_VALUE('modulusLength', modulusLength);
        let { publicExponent } = options;
        if (publicExponent == null) {
          publicExponent = 0x10001;
        } else if (!isUint32(publicExponent)) {
          throw new ERR_INVALID_OPT_VALUE('publicExponent', publicExponent);
        }
        if (type === 'rsa') {
          impl = (wrap) => generateKeyPairRSA(modulusLength, publicExponent,
                                              publicFormat, publicType,
                                              privateFormat, privateType,
                                              cipher, passphrase, wrap);
          break;
        }
        const { hash, mgf1Hash, saltLength } = options;
        if (hash !== undefined && typeof hash !== 'string')
          throw new ERR_INVALID_OPT_VALUE('hash', hash);
        if (mgf1Hash !== undefined && typeof mgf1Hash !== 'string')
          throw new ERR_INVALID_OPT_VALUE('mgf1Hash', mgf1Hash);
        if (saltLength !== undefined && !isUint32(saltLength))
          throw new ERR_INVALID_OPT_VALUE('saltLength', saltLength);
        impl = (wrap) => generateKeyPairRSAPSS(modulusLength, publicExponent,
                                               hash, mgf1Hash, saltLength,
                                               publicFormat, publicType,
                                               privateFormat, privateType,
                                               cipher, passphrase, wrap);
      }
      break;
    case 'dsa':
      {
        const { modulusLength } = needOptions();
        if (!isUint32(modulusLength))
          throw new ERR_INVALID_OPT_VALUE('modulusLength', modulusLength);
        let { divisorLength } = options;
        if (divisorLength == null) {
          divisorLength = -1;
        } else if (!isUint32(divisorLength)) {
          throw new ERR_INVALID_OPT_VALUE('divisorLength', divisorLength);
        }
        impl = (wrap) => generateKeyPairDSA(modulusLength, divisorLength,
                                            publicFormat, publicType,
                                            privateFormat, privateType,
                                            cipher, passphrase, wrap);
      }
      break;
    case 'ec':
      {
        const { namedCurve } = needOptions();
        if (typeof namedCurve !== 'string')
          throw new ERR_INVALID_OPT_VALUE('namedCurve', namedCurve);
        let { paramEncoding } = options;
        if (paramEncoding == null || paramEncoding === 'named')
          paramEncoding = OPENSSL_EC_NAMED_CURVE;
        else if (paramEncoding === 'explicit')
          paramEncoding = OPENSSL_EC_EXPLICIT_CURVE;
        else
          throw new ERR_INVALID_OPT_VALUE('paramEncoding', paramEncoding);
        impl = (wrap) => generateKeyPairEC(namedCurve, paramEncoding,
                                           publicFormat, publicType,
                                           privateFormat, privateType,
                                           cipher, passphrase, wrap);
      }
      break;
    case 'ed25519':
    case 'ed448':
    case 'x25519':
    case 'x448':
      {
        let id;
        switch (type) {
          case 'ed25519':
            id = EVP_PKEY_ED25519;
            break;
          case 'ed448':
            id = EVP_PKEY_ED448;
            break;
          case 'x25519':
            id = EVP_PKEY_X25519;
            break;
          case 'x448':
            id = EVP_PKEY_X448;
            break;
        }
        impl = (wrap) => generateKeyPairNid(id,
                                            publicFormat, publicType,
                                            privateFormat, privateType,
                                            cipher, passphrase, wrap);
      }
      break;
    default:
      throw new ERR_INVALID_ARG_VALUE('type', type,
                                      'must be a supported key type');
  if (options) {
    ({
      cipher,
      passphrase,
      publicType,
      publicFormat,
      privateType,
      privateFormat
    } = parseKeyEncoding(type, options));
  return impl;
module.exports = { generateKeyPair, generateKeyPairSync };
'use strict';
const { Object } = primordials;
const {
  KeyObject: KeyObjectHandle,
  kKeyTypeSecret,
  kKeyTypePublic,
  kKeyTypePrivate,
  kKeyFormatPEM,
  kKeyFormatDER,
  kKeyEncodingPKCS1,
  kKeyEncodingPKCS8,
  kKeyEncodingSPKI,
  kKeyEncodingSEC1
} = internalBinding('crypto');
const {
  ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS,
  ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_ARG_VALUE,
  ERR_INVALID_OPT_VALUE,
  ERR_OUT_OF_RANGE
} = require('internal/errors').codes;
const { kHandle } = require('internal/crypto/util');
const { isArrayBufferView } = require('internal/util/types');
const kKeyType = Symbol('kKeyType');
// Key input contexts.
const kConsumePublic = 0;
const kConsumePrivate = 1;
const kCreatePublic = 2;
const kCreatePrivate = 3;
const encodingNames = [];
for (const m of [[kKeyEncodingPKCS1, 'pkcs1'], [kKeyEncodingPKCS8, 'pkcs8'],
                 [kKeyEncodingSPKI, 'spki'], [kKeyEncodingSEC1, 'sec1']])
  encodingNames[m[0]] = m[1];
class KeyObject {
  constructor(type, handle) {
    if (type !== 'secret' && type !== 'public' && type !== 'private')
      throw new ERR_INVALID_ARG_VALUE('type', type);
    if (typeof handle !== 'object')
      throw new ERR_INVALID_ARG_TYPE('handle', 'object', handle);
    this[kKeyType] = type;
    Object.defineProperty(this, kHandle, {
      value: handle,
      enumerable: false,
      configurable: false,
      writable: false
    });
  get type() {
    return this[kKeyType];
class SecretKeyObject extends KeyObject {
  constructor(handle) {
    super('secret', handle);
  get symmetricKeySize() {
    return this[kHandle].getSymmetricKeySize();
  export() {
    return this[kHandle].export();
const kAsymmetricKeyType = Symbol('kAsymmetricKeyType');
class AsymmetricKeyObject extends KeyObject {
  get asymmetricKeyType() {
    return this[kAsymmetricKeyType] ||
           (this[kAsymmetricKeyType] = this[kHandle].getAsymmetricKeyType());
class PublicKeyObject extends AsymmetricKeyObject {
  constructor(handle) {
    super('public', handle);
  export(encoding) {
    const {
      format,
      type
    } = parsePublicKeyEncoding(encoding, this.asymmetricKeyType);
    return this[kHandle].export(format, type);
class PrivateKeyObject extends AsymmetricKeyObject {
  constructor(handle) {
    super('private', handle);
  export(encoding) {
    const {
      format,
      type,
      cipher,
      passphrase
    } = parsePrivateKeyEncoding(encoding, this.asymmetricKeyType);
    return this[kHandle].export(format, type, cipher, passphrase);
function parseKeyFormat(formatStr, defaultFormat, optionName) {
  if (formatStr === undefined && defaultFormat !== undefined)
    return defaultFormat;
  else if (formatStr === 'pem')
    return kKeyFormatPEM;
  else if (formatStr === 'der')
    return kKeyFormatDER;
  throw new ERR_INVALID_OPT_VALUE(optionName, formatStr);
function parseKeyType(typeStr, required, keyType, isPublic, optionName) {
  if (typeStr === undefined && !required) {
    return undefined;
  } else if (typeStr === 'pkcs1') {
    if (keyType !== undefined && keyType !== 'rsa') {
      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(
        typeStr, 'can only be used for RSA keys');
    }
    return kKeyEncodingPKCS1;
  } else if (typeStr === 'spki' && isPublic !== false) {
    return kKeyEncodingSPKI;
  } else if (typeStr === 'pkcs8' && isPublic !== true) {
    return kKeyEncodingPKCS8;
  } else if (typeStr === 'sec1' && isPublic !== true) {
    if (keyType !== undefined && keyType !== 'ec') {
      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(
        typeStr, 'can only be used for EC keys');
    }
    return kKeyEncodingSEC1;
  throw new ERR_INVALID_OPT_VALUE(optionName, typeStr);
function option(name, objName) {
  return objName === undefined ? name : `${objName}.${name}`;
function parseKeyFormatAndType(enc, keyType, isPublic, objName) {
  const { format: formatStr, type: typeStr } = enc;
  const isInput = keyType === undefined;
  const format = parseKeyFormat(formatStr,
                                isInput ? kKeyFormatPEM : undefined,
                                option('format', objName));
  const type = parseKeyType(typeStr,
                            !isInput || format === kKeyFormatDER,
                            keyType,
                            isPublic,
                            option('type', objName));
  return { format, type };
function isStringOrBuffer(val) {
  return typeof val === 'string' || isArrayBufferView(val);
function parseKeyEncoding(enc, keyType, isPublic, objName) {
  if (enc === null || typeof enc !== 'object')
    throw new ERR_INVALID_ARG_TYPE('options', 'object', enc);
  const isInput = keyType === undefined;
  const {
    format,
    type
  } = parseKeyFormatAndType(enc, keyType, isPublic, objName);
  let cipher, passphrase;
  if (isPublic !== true) {
    ({ cipher, passphrase } = enc);
    if (!isInput) {
      if (cipher != null) {
        if (typeof cipher !== 'string')
          throw new ERR_INVALID_OPT_VALUE(option('cipher', objName), cipher);
        if (format === kKeyFormatDER &&
            (type === kKeyEncodingPKCS1 ||
             type === kKeyEncodingSEC1)) {
          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(
            encodingNames[type], 'does not support encryption');
        }
      } else if (passphrase !== undefined) {
        throw new ERR_INVALID_OPT_VALUE(option('cipher', objName), cipher);
      }
    }
    if ((isInput && passphrase !== undefined &&
         !isStringOrBuffer(passphrase)) ||
        (!isInput && cipher != null && !isStringOrBuffer(passphrase))) {
      throw new ERR_INVALID_OPT_VALUE(option('passphrase', objName),
                                      passphrase);
    }
  return { format, type, cipher, passphrase };
// Parses the public key encoding based on an object. keyType must be undefined
// when this is used to parse an input encoding and must be a valid key type if
// used to parse an output encoding.
function parsePublicKeyEncoding(enc, keyType, objName) {
  return parseKeyEncoding(enc, keyType, keyType ? true : undefined, objName);
// Parses the private key encoding based on an object. keyType must be undefined
// when this is used to parse an input encoding and must be a valid key type if
// used to parse an output encoding.
function parsePrivateKeyEncoding(enc, keyType, objName) {
  return parseKeyEncoding(enc, keyType, false, objName);
function getKeyObjectHandle(key, ctx) {
  if (ctx === kCreatePrivate) {
    throw new ERR_INVALID_ARG_TYPE(
      'key',
      ['string', 'Buffer', 'TypedArray', 'DataView'],
      key
    );
  if (key.type !== 'private') {
    if (ctx === kConsumePrivate || ctx === kCreatePublic)
      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type, 'private');
    if (key.type !== 'public') {
      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type,
                                                   'private or public');
    }
  return key[kHandle];
function prepareAsymmetricKey(key, ctx) {
  if (isKeyObject(key)) {
    // Best case: A key object, as simple as that.
    return { data: getKeyObjectHandle(key, ctx) };
  } else if (typeof key === 'string' || isArrayBufferView(key)) {
    // Expect PEM by default, mostly for backward compatibility.
    return { format: kKeyFormatPEM, data: key };
  } else if (typeof key === 'object') {
    const data = key.key;
    // The 'key' property can be a KeyObject as well to allow specifying
    // additional options such as padding along with the key.
    if (isKeyObject(data))
      return { data: getKeyObjectHandle(data, ctx) };
    // Either PEM or DER using PKCS#1 or SPKI.
    if (!isStringOrBuffer(data)) {
      throw new ERR_INVALID_ARG_TYPE(
        'key',
        ['string', 'Buffer', 'TypedArray', 'DataView',
         ...(ctx !== kCreatePrivate ? ['KeyObject'] : [])],
        key);
    }
    return { data, ...parseKeyEncoding(key, undefined) };
  } else {
    throw new ERR_INVALID_ARG_TYPE(
      'key',
      ['string', 'Buffer', 'TypedArray', 'DataView',
       ...(ctx !== kCreatePrivate ? ['KeyObject'] : [])],
      key
    );
function preparePrivateKey(key) {
  return prepareAsymmetricKey(key, kConsumePrivate);
function preparePublicOrPrivateKey(key) {
  return prepareAsymmetricKey(key, kConsumePublic);
function prepareSecretKey(key, bufferOnly = false) {
  if (!isArrayBufferView(key) && (bufferOnly || typeof key !== 'string')) {
    if (isKeyObject(key) && !bufferOnly) {
      if (key.type !== 'secret')
        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type, 'secret');
      return key[kHandle];
    } else {
      throw new ERR_INVALID_ARG_TYPE(
        'key',
        ['Buffer', 'TypedArray', 'DataView',
         ...(bufferOnly ? [] : ['string', 'KeyObject'])],
        key);
    }
  return key;
function createSecretKey(key) {
  key = prepareSecretKey(key, true);
  if (key.byteLength === 0)
    throw new ERR_OUT_OF_RANGE('key.byteLength', '> 0', key.byteLength);
  const handle = new KeyObjectHandle(kKeyTypeSecret);
  handle.init(key);
  return new SecretKeyObject(handle);
function createPublicKey(key) {
  const { format, type, data } = prepareAsymmetricKey(key, kCreatePublic);
  const handle = new KeyObjectHandle(kKeyTypePublic);
  handle.init(data, format, type);
  return new PublicKeyObject(handle);
function createPrivateKey(key) {
  const { format, type, data, passphrase } =
    prepareAsymmetricKey(key, kCreatePrivate);
  const handle = new KeyObjectHandle(kKeyTypePrivate);
  handle.init(data, format, type, passphrase);
  return new PrivateKeyObject(handle);
function isKeyObject(key) {
  return key instanceof KeyObject;
module.exports = {
  // Public API.
  createSecretKey,
  createPublicKey,
  createPrivateKey,
  KeyObject,
  // These are designed for internal use only and should not be exposed.
  parsePublicKeyEncoding,
  parsePrivateKeyEncoding,
  preparePrivateKey,
  preparePublicOrPrivateKey,
  prepareSecretKey,
  SecretKeyObject,
  PublicKeyObject,
  PrivateKeyObject,
  isKeyObject
'use strict';
const { AsyncWrap, Providers } = internalBinding('async_wrap');
const { Buffer } = require('buffer');
const { pbkdf2: _pbkdf2 } = internalBinding('crypto');
const { validateUint32 } = require('internal/validators');
const { deprecate } = require('internal/util');
const {
  ERR_CRYPTO_INVALID_DIGEST,
  ERR_CRYPTO_PBKDF2_ERROR,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_CALLBACK,
} = require('internal/errors').codes;
const {
  getDefaultEncoding,
  validateArrayBufferView,
} = require('internal/crypto/util');
function pbkdf2(password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest;
    digest = undefined;
  ({ password, salt, iterations, keylen, digest } =
    check(password, salt, iterations, keylen, digest));
  if (typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  const encoding = getDefaultEncoding();
  const keybuf = Buffer.alloc(keylen);
  const wrap = new AsyncWrap(Providers.PBKDF2REQUEST);
  wrap.ondone = (ok) => {  // Retains keybuf while request is in flight.
    if (!ok) return callback.call(wrap, new ERR_CRYPTO_PBKDF2_ERROR());
    if (encoding === 'buffer') return callback.call(wrap, null, keybuf);
    callback.call(wrap, null, keybuf.toString(encoding));
  };
  handleError(_pbkdf2(keybuf, password, salt, iterations, digest, wrap),
              digest);
function pbkdf2Sync(password, salt, iterations, keylen, digest) {
  ({ password, salt, iterations, keylen, digest } =
    check(password, salt, iterations, keylen, digest));
  const keybuf = Buffer.alloc(keylen);
  handleError(_pbkdf2(keybuf, password, salt, iterations, digest), digest);
  const encoding = getDefaultEncoding();
  if (encoding === 'buffer') return keybuf;
  return keybuf.toString(encoding);
const defaultDigest = deprecate(() => 'sha1',
                                'Calling pbkdf2 or pbkdf2Sync with "digest" ' +
                                'set to null is deprecated.',
                                'DEP0009');
function check(password, salt, iterations, keylen, digest) {
  if (typeof digest !== 'string') {
    if (digest !== null)
      throw new ERR_INVALID_ARG_TYPE('digest', ['string', 'null'], digest);
    digest = defaultDigest();
  password = validateArrayBufferView(password, 'password');
  salt = validateArrayBufferView(salt, 'salt');
  validateUint32(iterations, 'iterations', 0);
  validateUint32(keylen, 'keylen', 0);
  return { password, salt, iterations, keylen, digest };
function handleError(rc, digest) {
  if (rc === -1)
    throw new ERR_CRYPTO_INVALID_DIGEST(digest);
  if (rc === false)
    throw new ERR_CRYPTO_PBKDF2_ERROR();
module.exports = {
  pbkdf2,
  pbkdf2Sync
'use strict';
const { Math } = primordials;
const { AsyncWrap, Providers } = internalBinding('async_wrap');
const { Buffer, kMaxLength } = require('buffer');
const { randomBytes: _randomBytes } = internalBinding('crypto');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_CALLBACK,
  ERR_OUT_OF_RANGE
} = require('internal/errors').codes;
const { validateNumber } = require('internal/validators');
const { isArrayBufferView } = require('internal/util/types');
const kMaxUint32 = 2 ** 32 - 1;
const kMaxPossibleLength = Math.min(kMaxLength, kMaxUint32);
function assertOffset(offset, elementSize, length) {
  validateNumber(offset, 'offset');
  offset *= elementSize;
  const maxLength = Math.min(length, kMaxPossibleLength);
  if (Number.isNaN(offset) || offset > maxLength || offset < 0) {
    throw new ERR_OUT_OF_RANGE('offset', `>= 0 && <= ${maxLength}`, offset);
  return offset >>> 0;  // Convert to uint32.
function assertSize(size, elementSize, offset, length) {
  validateNumber(size, 'size');
  size *= elementSize;
  if (Number.isNaN(size) || size > kMaxPossibleLength || size < 0) {
    throw new ERR_OUT_OF_RANGE('size',
                               `>= 0 && <= ${kMaxPossibleLength}`, size);
  if (size + offset > length) {
    throw new ERR_OUT_OF_RANGE('size + offset', `<= ${length}`, size + offset);
  return size >>> 0;  // Convert to uint32.
function randomBytes(size, cb) {
  size = assertSize(size, 1, 0, Infinity);
  if (cb !== undefined && typeof cb !== 'function')
    throw new ERR_INVALID_CALLBACK(cb);
  const buf = Buffer.alloc(size);
  if (!cb) return handleError(_randomBytes(buf, 0, size), buf);
  const wrap = new AsyncWrap(Providers.RANDOMBYTESREQUEST);
  wrap.ondone = (ex) => {  // Retains buf while request is in flight.
    if (ex) return cb.call(wrap, ex);
    cb.call(wrap, null, buf);
  };
  _randomBytes(buf, 0, size, wrap);
function randomFillSync(buf, offset = 0, size) {
  if (!isArrayBufferView(buf)) {
    throw new ERR_INVALID_ARG_TYPE('buf', 'ArrayBufferView', buf);
  const elementSize = buf.BYTES_PER_ELEMENT || 1;
  offset = assertOffset(offset, elementSize, buf.byteLength);
  if (size === undefined) {
    size = buf.byteLength - offset;
  } else {
    size = assertSize(size, elementSize, offset, buf.byteLength);
  return handleError(_randomBytes(buf, offset, size), buf);
function randomFill(buf, offset, size, cb) {
  if (!isArrayBufferView(buf)) {
    throw new ERR_INVALID_ARG_TYPE('buf', 'ArrayBufferView', buf);
  const elementSize = buf.BYTES_PER_ELEMENT || 1;
  if (typeof offset === 'function') {
    cb = offset;
    offset = 0;
    size = buf.bytesLength;
  } else if (typeof size === 'function') {
    cb = size;
    size = buf.byteLength - offset;
  } else if (typeof cb !== 'function') {
    throw new ERR_INVALID_CALLBACK(cb);
  offset = assertOffset(offset, elementSize, buf.byteLength);
  if (size === undefined) {
    size = buf.byteLength - offset;
  } else {
    size = assertSize(size, elementSize, offset, buf.byteLength);
  const wrap = new AsyncWrap(Providers.RANDOMBYTESREQUEST);
  wrap.ondone = (ex) => {  // Retains buf while request is in flight.
    if (ex) return cb.call(wrap, ex);
    cb.call(wrap, null, buf);
  };
  _randomBytes(buf, offset, size, wrap);
function handleError(ex, buf) {
  if (ex) throw ex;
  return buf;
module.exports = {
  randomBytes,
  randomFill,
  randomFillSync
'use strict';
const { AsyncWrap, Providers } = internalBinding('async_wrap');
const { Buffer } = require('buffer');
const { scrypt: _scrypt } = internalBinding('crypto');
const { validateInteger, validateUint32 } = require('internal/validators');
const {
  ERR_CRYPTO_SCRYPT_INVALID_PARAMETER,
  ERR_CRYPTO_SCRYPT_NOT_SUPPORTED,
  ERR_INVALID_CALLBACK
} = require('internal/errors').codes;
const {
  getDefaultEncoding,
  validateArrayBufferView,
} = require('internal/crypto/util');
const defaults = {
  N: 16384,
  r: 8,
  p: 1,
  maxmem: 32 << 20,  // 32 MB, matches SCRYPT_MAX_MEM.
function scrypt(password, salt, keylen, options, callback = defaults) {
  if (callback === defaults) {
    callback = options;
    options = defaults;
  options = check(password, salt, keylen, options);
  const { N, r, p, maxmem } = options;
  ({ password, salt, keylen } = options);
  if (typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  const encoding = getDefaultEncoding();
  const keybuf = Buffer.alloc(keylen);
  const wrap = new AsyncWrap(Providers.SCRYPTREQUEST);
  wrap.ondone = (ex) => {  // Retains keybuf while request is in flight.
    if (ex) return callback.call(wrap, ex);
    if (encoding === 'buffer') return callback.call(wrap, null, keybuf);
    callback.call(wrap, null, keybuf.toString(encoding));
  };
  handleError(_scrypt(keybuf, password, salt, N, r, p, maxmem, wrap));
function scryptSync(password, salt, keylen, options = defaults) {
  options = check(password, salt, keylen, options);
  const { N, r, p, maxmem } = options;
  ({ password, salt, keylen } = options);
  const keybuf = Buffer.alloc(keylen);
  handleError(_scrypt(keybuf, password, salt, N, r, p, maxmem));
  const encoding = getDefaultEncoding();
  if (encoding === 'buffer') return keybuf;
  return keybuf.toString(encoding);
function handleError(ex) {
  if (ex === undefined)
    return;
  if (ex === null)
    throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();  // Bad N, r, p, or maxmem.
  throw ex;  // Scrypt operation failed, exception object contains details.
function check(password, salt, keylen, options) {
  if (_scrypt === undefined)
    throw new ERR_CRYPTO_SCRYPT_NOT_SUPPORTED();
  password = validateArrayBufferView(password, 'password');
  salt = validateArrayBufferView(salt, 'salt');
  validateUint32(keylen, 'keylen');
  let { N, r, p, maxmem } = defaults;
  if (options && options !== defaults) {
    let has_N, has_r, has_p;
    if (has_N = (options.N !== undefined)) {
      N = options.N;
      validateUint32(N, 'N');
    }
    if (options.cost !== undefined) {
      if (has_N) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();
      N = options.cost;
      validateUint32(N, 'cost');
    }
    if (has_r = (options.r !== undefined)) {
      r = options.r;
      validateUint32(r, 'r');
    }
    if (options.blockSize !== undefined) {
      if (has_r) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();
      r = options.blockSize;
      validateUint32(r, 'blockSize');
    }
    if (has_p = (options.p !== undefined)) {
      p = options.p;
      validateUint32(p, 'p');
    }
    if (options.parallelization !== undefined) {
      if (has_p) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();
      p = options.parallelization;
      validateUint32(p, 'parallelization');
    }
    if (options.maxmem !== undefined) {
      maxmem = options.maxmem;
      validateInteger(maxmem, 'maxmem', 0);
    }
    if (N === 0) N = defaults.N;
    if (r === 0) r = defaults.r;
    if (p === 0) p = defaults.p;
    if (maxmem === 0) maxmem = defaults.maxmem;
  return { password, salt, keylen, N, r, p, maxmem };
module.exports = { scrypt, scryptSync };
'use strict';
const { Object } = primordials;
const {
  ERR_CRYPTO_SIGN_KEY_REQUIRED,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_OPT_VALUE
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const {
  Sign: _Sign,
  Verify: _Verify,
  signOneShot: _signOneShot,
  verifyOneShot: _verifyOneShot
} = internalBinding('crypto');
const {
  getDefaultEncoding,
  kHandle,
  toBuf,
  validateArrayBufferView,
} = require('internal/crypto/util');
const {
  preparePrivateKey,
  preparePublicOrPrivateKey
} = require('internal/crypto/keys');
const { Writable } = require('stream');
const { isArrayBufferView } = require('internal/util/types');
function Sign(algorithm, options) {
  if (!(this instanceof Sign))
    return new Sign(algorithm, options);
  validateString(algorithm, 'algorithm');
  this[kHandle] = new _Sign();
  this[kHandle].init(algorithm);
  Writable.call(this, options);
Object.setPrototypeOf(Sign.prototype, Writable.prototype);
Object.setPrototypeOf(Sign, Writable);
Sign.prototype._write = function _write(chunk, encoding, callback) {
  this.update(chunk, encoding);
  callback();
Sign.prototype.update = function update(data, encoding) {
  encoding = encoding || getDefaultEncoding();
  data = validateArrayBufferView(toBuf(data, encoding),
                                 'data');
  this[kHandle].update(data);
  return this;
function getPadding(options) {
  return getIntOption('padding', options);
function getSaltLength(options) {
  return getIntOption('saltLength', options);
function getIntOption(name, options) {
  const value = options[name];
  if (value !== undefined) {
    if (value === value >> 0) {
      return value;
    } else {
      throw new ERR_INVALID_OPT_VALUE(name, value);
    }
  return undefined;
Sign.prototype.sign = function sign(options, encoding) {
  if (!options)
    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();
  const { data, format, type, passphrase } = preparePrivateKey(options, true);
  // Options specific to RSA
  const rsaPadding = getPadding(options);
  const pssSaltLength = getSaltLength(options);
  const ret = this[kHandle].sign(data, format, type, passphrase, rsaPadding,
                                 pssSaltLength);
  encoding = encoding || getDefaultEncoding();
  if (encoding && encoding !== 'buffer')
    return ret.toString(encoding);
  return ret;
function signOneShot(algorithm, data, key) {
  if (algorithm != null)
    validateString(algorithm, 'algorithm');
  if (!isArrayBufferView(data)) {
    throw new ERR_INVALID_ARG_TYPE(
      'data',
      ['Buffer', 'TypedArray', 'DataView'],
      data
    );
  if (!key)
    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();
  const {
    data: keyData,
    format: keyFormat,
    type: keyType,
    passphrase: keyPassphrase
  } = preparePrivateKey(key);
  // Options specific to RSA
  const rsaPadding = getPadding(key);
  const pssSaltLength = getSaltLength(key);
  return _signOneShot(keyData, keyFormat, keyType, keyPassphrase, data,
                      algorithm, rsaPadding, pssSaltLength);
function Verify(algorithm, options) {
  if (!(this instanceof Verify))
    return new Verify(algorithm, options);
  validateString(algorithm, 'algorithm');
  this[kHandle] = new _Verify();
  this[kHandle].init(algorithm);
  Writable.call(this, options);
Object.setPrototypeOf(Verify.prototype, Writable.prototype);
Object.setPrototypeOf(Verify, Writable);
Verify.prototype._write = Sign.prototype._write;
Verify.prototype.update = Sign.prototype.update;
Verify.prototype.verify = function verify(options, signature, sigEncoding) {
  const {
    data,
    format,
    type,
    passphrase
  } = preparePublicOrPrivateKey(options, true);
  sigEncoding = sigEncoding || getDefaultEncoding();
  // Options specific to RSA
  const rsaPadding = getPadding(options);
  const pssSaltLength = getSaltLength(options);
  signature = validateArrayBufferView(toBuf(signature, sigEncoding),
                                      'signature');
  return this[kHandle].verify(data, format, type, passphrase, signature,
                              rsaPadding, pssSaltLength);
function verifyOneShot(algorithm, data, key, signature) {
  if (algorithm != null)
    validateString(algorithm, 'algorithm');
  if (!isArrayBufferView(data)) {
    throw new ERR_INVALID_ARG_TYPE(
      'data',
      ['Buffer', 'TypedArray', 'DataView'],
      data
    );
  const {
    data: keyData,
    format: keyFormat,
    type: keyType,
    passphrase: keyPassphrase
  } = preparePublicOrPrivateKey(key);
  // Options specific to RSA
  const rsaPadding = getPadding(key);
  const pssSaltLength = getSaltLength(key);
  if (!isArrayBufferView(signature)) {
    throw new ERR_INVALID_ARG_TYPE(
      'signature',
      ['Buffer', 'TypedArray', 'DataView'],
      signature
    );
  return _verifyOneShot(keyData, keyFormat, keyType, keyPassphrase, signature,
                        data, algorithm, rsaPadding, pssSaltLength);
module.exports = {
  Sign,
  signOneShot,
  Verify,
  verifyOneShot
'use strict';
const {
  getCiphers: _getCiphers,
  getCurves: _getCurves,
  getHashes: _getHashes,
  setEngine: _setEngine,
  timingSafeEqual: _timingSafeEqual
} = internalBinding('crypto');
const {
  ENGINE_METHOD_ALL
} = internalBinding('constants').crypto;
const {
  ERR_CRYPTO_ENGINE_UNKNOWN,
  ERR_CRYPTO_TIMING_SAFE_EQUAL_LENGTH,
  ERR_INVALID_ARG_TYPE,
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const { Buffer } = require('buffer');
const {
  cachedResult,
  filterDuplicateStrings
} = require('internal/util');
const {
  isArrayBufferView
} = require('internal/util/types');
const kHandle = Symbol('kHandle');
var defaultEncoding = 'buffer';
function setDefaultEncoding(val) {
  defaultEncoding = val;
function getDefaultEncoding() {
  return defaultEncoding;
// This is here because many functions accepted binary strings without
// any explicit encoding in older versions of node, and we don't want
// to break them unnecessarily.
function toBuf(val, encoding) {
  if (typeof val === 'string') {
    if (encoding === 'buffer')
      encoding = 'utf8';
    return Buffer.from(val, encoding);
  return val;
const getCiphers = cachedResult(() => filterDuplicateStrings(_getCiphers()));
const getHashes = cachedResult(() => filterDuplicateStrings(_getHashes()));
const getCurves = cachedResult(() => filterDuplicateStrings(_getCurves()));
function setEngine(id, flags) {
  validateString(id, 'id');
  if (flags && typeof flags !== 'number')
    throw new ERR_INVALID_ARG_TYPE('flags', 'number', flags);
  flags = flags >>> 0;
  // Use provided engine for everything by default
  if (flags === 0)
    flags = ENGINE_METHOD_ALL;
  if (!_setEngine(id, flags))
    throw new ERR_CRYPTO_ENGINE_UNKNOWN(id);
function timingSafeEqual(buf1, buf2) {
  if (!isArrayBufferView(buf1)) {
    throw new ERR_INVALID_ARG_TYPE('buf1',
                                   ['Buffer', 'TypedArray', 'DataView'], buf1);
  if (!isArrayBufferView(buf2)) {
    throw new ERR_INVALID_ARG_TYPE('buf2',
                                   ['Buffer', 'TypedArray', 'DataView'], buf2);
  if (buf1.length !== buf2.length) {
    throw new ERR_CRYPTO_TIMING_SAFE_EQUAL_LENGTH();
  return _timingSafeEqual(buf1, buf2);
function validateArrayBufferView(buffer, name) {
  buffer = toBuf(buffer);
  if (!isArrayBufferView(buffer)) {
    throw new ERR_INVALID_ARG_TYPE(
      name,
      ['string', 'Buffer', 'TypedArray', 'DataView'],
      buffer
    );
  return buffer;
module.exports = {
  validateArrayBufferView,
  getCiphers,
  getCurves,
  getDefaultEncoding,
  getHashes,
  kHandle,
  setDefaultEncoding,
  setEngine,
  timingSafeEqual,
  toBuf
'use strict';
const isWindows = process.platform === 'win32';
module.exports = {
  // Alphabet chars.
  CHAR_UPPERCASE_A: 65, /* A */
  CHAR_LOWERCASE_A: 97, /* a */
  CHAR_UPPERCASE_Z: 90, /* Z */
  CHAR_LOWERCASE_Z: 122, /* z */
  // Non-alphabetic chars.
  CHAR_DOT: 46, /* . */
  CHAR_FORWARD_SLASH: 47, /* / */
  CHAR_BACKWARD_SLASH: 92, /* \ */
  CHAR_VERTICAL_LINE: 124, /* | */
  CHAR_COLON: 58, /* : */
  CHAR_QUESTION_MARK: 63, /* ? */
  CHAR_UNDERSCORE: 95, /* _ */
  CHAR_LINE_FEED: 10, /* \n */
  CHAR_CARRIAGE_RETURN: 13, /* \r */
  CHAR_TAB: 9, /* \t */
  CHAR_FORM_FEED: 12, /* \f */
  CHAR_EXCLAMATION_MARK: 33, /* ! */
  CHAR_HASH: 35, /* # */
  CHAR_SPACE: 32, /*   */
  CHAR_NO_BREAK_SPACE: 160, /* \u00A0 */
  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \uFEFF */
  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */
  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */
  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */
  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */
  CHAR_LEFT_CURLY_BRACKET: 123, /* { */
  CHAR_RIGHT_CURLY_BRACKET: 125, /* } */
  CHAR_HYPHEN_MINUS: 45, /* - */
  CHAR_PLUS: 43, /* + */
  CHAR_DOUBLE_QUOTE: 34, /* " */
  CHAR_SINGLE_QUOTE: 39, /* ' */
  CHAR_PERCENT: 37, /* % */
  CHAR_SEMICOLON: 59, /* ; */
  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */
  CHAR_GRAVE_ACCENT: 96, /* ` */
  CHAR_AT: 64, /* @ */
  CHAR_AMPERSAND: 38, /* & */
  CHAR_EQUAL: 61, /* = */
  // Digits
  CHAR_0: 48, /* 0 */
  CHAR_9: 57, /* 9 */
  EOL: isWindows ? '\r\n' : '\n'
'use strict';
const { codes } = require('internal/errors');
const { UDP } = internalBinding('udp_wrap');
const { guessHandleType } = internalBinding('util');
const { isInt32 } = require('internal/validators');
const { UV_EINVAL } = internalBinding('uv');
const { ERR_INVALID_ARG_TYPE, ERR_SOCKET_BAD_TYPE } = codes;
const kStateSymbol = Symbol('state symbol');
let dns;  // Lazy load for startup performance.
function lookup4(lookup, address, callback) {
  return lookup(address || '127.0.0.1', 4, callback);
function lookup6(lookup, address, callback) {
  return lookup(address || '::1', 6, callback);
function newHandle(type, lookup) {
  if (lookup === undefined) {
    if (dns === undefined) {
      dns = require('dns');
    }
    lookup = dns.lookup;
  } else if (typeof lookup !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('lookup', 'Function', lookup);
  if (type === 'udp4') {
    const handle = new UDP();
    handle.lookup = lookup4.bind(handle, lookup);
    return handle;
  if (type === 'udp6') {
    const handle = new UDP();
    handle.lookup = lookup6.bind(handle, lookup);
    handle.bind = handle.bind6;
    handle.connect = handle.connect6;
    handle.send = handle.send6;
    return handle;
  throw new ERR_SOCKET_BAD_TYPE();
function _createSocketHandle(address, port, addressType, fd, flags) {
  const handle = newHandle(addressType);
  let err;
  if (isInt32(fd) && fd > 0) {
    const type = guessHandleType(fd);
    if (type !== 'UDP') {
      err = UV_EINVAL;
    } else {
      err = handle.open(fd);
    }
  } else if (port || address) {
    err = handle.bind(address, port || 0, flags);
  if (err) {
    handle.close();
    return err;
  return handle;
module.exports = {
  kStateSymbol,
  _createSocketHandle,
  newHandle
'use strict';
const { Object } = primordials;
const {
  bindDefaultResolver,
  Resolver: CallbackResolver,
  validateHints,
  emitInvalidHostnameWarning,
} = require('internal/dns/utils');
const { codes, dnsException } = require('internal/errors');
const { toASCII } = require('internal/idna');
const { isIP, isLegalPort } = require('internal/net');
const {
  getaddrinfo,
  getnameinfo,
  ChannelWrap,
  GetAddrInfoReqWrap,
  GetNameInfoReqWrap,
  QueryReqWrap
} = internalBinding('cares_wrap');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_OPT_VALUE,
  ERR_MISSING_ARGS,
  ERR_SOCKET_BAD_PORT
} = codes;
const { validateString } = require('internal/validators');
function onlookup(err, addresses) {
  if (err) {
    this.reject(dnsException(err, 'getaddrinfo', this.hostname));
    return;
  const family = this.family ? this.family : isIP(addresses[0]);
  this.resolve({ address: addresses[0], family });
function onlookupall(err, addresses) {
  if (err) {
    this.reject(dnsException(err, 'getaddrinfo', this.hostname));
    return;
  const family = this.family;
  for (var i = 0; i < addresses.length; i++) {
    const address = addresses[i];
    addresses[i] = {
      address,
      family: family ? family : isIP(addresses[i])
    };
  this.resolve(addresses);
function createLookupPromise(family, hostname, all, hints, verbatim) {
  return new Promise((resolve, reject) => {
    if (!hostname) {
      emitInvalidHostnameWarning(hostname);
      if (all)
        resolve([]);
      else
        resolve({ address: null, family: family === 6 ? 6 : 4 });
      return;
    }
    const matchedFamily = isIP(hostname);
    if (matchedFamily !== 0) {
      const result = { address: hostname, family: matchedFamily };
      if (all)
        resolve([result]);
      else
        resolve(result);
      return;
    }
    const req = new GetAddrInfoReqWrap();
    req.family = family;
    req.hostname = hostname;
    req.oncomplete = all ? onlookupall : onlookup;
    req.resolve = resolve;
    req.reject = reject;
    const err = getaddrinfo(req, toASCII(hostname), family, hints, verbatim);
    if (err) {
      reject(dnsException(err, 'getaddrinfo', hostname));
    }
  });
function lookup(hostname, options) {
  var hints = 0;
  var family = -1;
  var all = false;
  var verbatim = false;
  // Parse arguments
  if (hostname && typeof hostname !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('hostname', 'string', hostname);
  } else if (options !== null && typeof options === 'object') {
    hints = options.hints >>> 0;
    family = options.family >>> 0;
    all = options.all === true;
    verbatim = options.verbatim === true;
    validateHints(hints);
  } else {
    family = options >>> 0;
  if (family !== 0 && family !== 4 && family !== 6)
    throw new ERR_INVALID_OPT_VALUE('family', family);
  return createLookupPromise(family, hostname, all, hints, verbatim);
function onlookupservice(err, hostname, service) {
  if (err) {
    this.reject(dnsException(err, 'getnameinfo', this.host));
    return;
  this.resolve({ hostname, service });
function createLookupServicePromise(hostname, port) {
  return new Promise((resolve, reject) => {
    const req = new GetNameInfoReqWrap();
    req.hostname = hostname;
    req.port = port;
    req.oncomplete = onlookupservice;
    req.resolve = resolve;
    req.reject = reject;
    const err = getnameinfo(req, hostname, port);
    if (err)
      reject(dnsException(err, 'getnameinfo', hostname));
  });
function lookupService(hostname, port) {
  if (arguments.length !== 2)
    throw new ERR_MISSING_ARGS('hostname', 'port');
  if (isIP(hostname) === 0)
    throw new ERR_INVALID_OPT_VALUE('hostname', hostname);
  if (!isLegalPort(port))
    throw new ERR_SOCKET_BAD_PORT(port);
  return createLookupServicePromise(hostname, +port);
function onresolve(err, result, ttls) {
  if (err) {
    this.reject(dnsException(err, this.bindingName, this.hostname));
    return;
  if (ttls && this.ttl)
    result = result.map((address, index) => ({ address, ttl: ttls[index] }));
  this.resolve(result);
function createResolverPromise(resolver, bindingName, hostname, ttl) {
  return new Promise((resolve, reject) => {
    const req = new QueryReqWrap();
    req.bindingName = bindingName;
    req.hostname = hostname;
    req.oncomplete = onresolve;
    req.resolve = resolve;
    req.reject = reject;
    req.ttl = ttl;
    const err = resolver._handle[bindingName](req, toASCII(hostname));
    if (err)
      reject(dnsException(err, bindingName, hostname));
  });
function resolver(bindingName) {
  function query(name, options) {
    validateString(name, 'name');
    const ttl = !!(options && options.ttl);
    return createResolverPromise(this, bindingName, name, ttl);
  Object.defineProperty(query, 'name', { value: bindingName });
  return query;
const resolveMap = Object.create(null);
// Resolver instances correspond 1:1 to c-ares channels.
class Resolver {
  constructor() {
    this._handle = new ChannelWrap();
Resolver.prototype.getServers = CallbackResolver.prototype.getServers;
Resolver.prototype.setServers = CallbackResolver.prototype.setServers;
Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');
Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');
Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');
Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');
Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');
Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');
Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');
Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');
Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');
Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');
Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');
Resolver.prototype.reverse = resolver('getHostByAddr');
Resolver.prototype.resolve = function resolve(hostname, rrtype) {
  var resolver;
  if (typeof rrtype === 'string') {
    resolver = resolveMap[rrtype];
    if (typeof resolver !== 'function')
      throw new ERR_INVALID_OPT_VALUE('rrtype', rrtype);
  } else if (rrtype === undefined) {
    resolver = resolveMap.A;
  } else {
    throw new ERR_INVALID_ARG_TYPE('rrtype', 'string', rrtype);
  return resolver.call(this, hostname);
module.exports = { lookup, lookupService, Resolver };
bindDefaultResolver(module.exports, Resolver.prototype);
'use strict';
const errors = require('internal/errors');
const { isIP } = require('internal/net');
const {
  ChannelWrap,
  strerror,
  AI_ADDRCONFIG,
  AI_V4MAPPED
} = internalBinding('cares_wrap');
const IANA_DNS_PORT = 53;
const IPv6RE = /^\[([^[\]]*)\]/;
const addrSplitRE = /(^.+?)(?::(\d+))?$/;
const {
  ERR_DNS_SET_SERVERS_FAILED,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_IP_ADDRESS,
  ERR_INVALID_OPT_VALUE
} = errors.codes;
// Resolver instances correspond 1:1 to c-ares channels.
class Resolver {
  constructor() {
    this._handle = new ChannelWrap();
  cancel() {
    this._handle.cancel();
  getServers() {
    return this._handle.getServers().map((val) => {
      if (!val[1] || val[1] === IANA_DNS_PORT)
        return val[0];
      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];
      return `${host}:${val[1]}`;
    });
  setServers(servers) {
    if (!Array.isArray(servers)) {
      throw new ERR_INVALID_ARG_TYPE('servers', 'Array', servers);
    }
    // Cache the original servers because in the event of an error while
    // setting the servers, c-ares won't have any servers available for
    // resolution.
    const orig = this._handle.getServers();
    const newSet = [];
    servers.forEach((serv, index) => {
      if (typeof serv !== 'string') {
        throw new ERR_INVALID_ARG_TYPE(`servers[${index}]`, 'string', serv);
      }
      var ipVersion = isIP(serv);
      if (ipVersion !== 0)
        return newSet.push([ipVersion, serv, IANA_DNS_PORT]);
      const match = serv.match(IPv6RE);
      // Check for an IPv6 in brackets.
      if (match) {
        ipVersion = isIP(match[1]);
        if (ipVersion !== 0) {
          const port =
            parseInt(serv.replace(addrSplitRE, '$2')) || IANA_DNS_PORT;
          return newSet.push([ipVersion, match[1], port]);
        }
      }
      // addr::port
      const addrSplitMatch = serv.match(addrSplitRE);
      if (addrSplitMatch) {
        const hostIP = addrSplitMatch[1];
        const port = addrSplitMatch[2] || IANA_DNS_PORT;
        ipVersion = isIP(hostIP);
        if (ipVersion !== 0) {
          return newSet.push([ipVersion, hostIP, parseInt(port)]);
        }
      }
      throw new ERR_INVALID_IP_ADDRESS(serv);
    });
    const errorNumber = this._handle.setServers(newSet);
    if (errorNumber !== 0) {
      // Reset the servers to the old servers, because ares probably unset them.
      this._handle.setServers(orig.join(','));
      const err = strerror(errorNumber);
      throw new ERR_DNS_SET_SERVERS_FAILED(err, servers);
    }
let defaultResolver = new Resolver();
const resolverKeys = [
  'getServers',
  'resolve',
  'resolve4',
  'resolve6',
  'resolveAny',
  'resolveCname',
  'resolveMx',
  'resolveNaptr',
  'resolveNs',
  'resolvePtr',
  'resolveSoa',
  'resolveSrv',
  'resolveTxt',
  'reverse',
function getDefaultResolver() {
  return defaultResolver;
function setDefaultResolver(resolver) {
  defaultResolver = resolver;
function bindDefaultResolver(target, source) {
  resolverKeys.forEach((key) => {
    target[key] = source[key].bind(defaultResolver);
  });
function validateHints(hints) {
  if (hints !== 0 &&
      hints !== AI_ADDRCONFIG &&
      hints !== AI_V4MAPPED &&
      hints !== (AI_ADDRCONFIG | AI_V4MAPPED)) {
    throw new ERR_INVALID_OPT_VALUE('hints', hints);
let invalidHostnameWarningEmitted = false;
function emitInvalidHostnameWarning(hostname) {
  if (invalidHostnameWarningEmitted) {
    return;
  invalidHostnameWarningEmitted = true;
  process.emitWarning(
    `The provided hostname "${hostname}" is not a valid ` +
    'hostname, and is supported in the dns module solely for compatibility.',
    'DeprecationWarning',
    'DEP0118'
  );
module.exports = {
  bindDefaultResolver,
  getDefaultResolver,
  setDefaultResolver,
  validateHints,
  Resolver,
  emitInvalidHostnameWarning,
'use strict';
const config = internalBinding('config');
const {
  DTRACE_HTTP_CLIENT_REQUEST = () => {},
  DTRACE_HTTP_CLIENT_RESPONSE = () => {},
  DTRACE_HTTP_SERVER_REQUEST = () => {},
  DTRACE_HTTP_SERVER_RESPONSE = () => {},
  DTRACE_NET_SERVER_CONNECTION = () => {},
  DTRACE_NET_STREAM_END = () => {}
} = (config.hasDtrace ? internalBinding('dtrace') : {});
module.exports = {
  DTRACE_HTTP_CLIENT_REQUEST,
  DTRACE_HTTP_CLIENT_RESPONSE,
  DTRACE_HTTP_SERVER_REQUEST,
  DTRACE_HTTP_SERVER_RESPONSE,
  DTRACE_NET_SERVER_CONNECTION,
  DTRACE_NET_STREAM_END
'use strict';
// An implementation of the WHATWG Encoding Standard
// https://encoding.spec.whatwg.org
const { Object } = primordials;
const {
  ERR_ENCODING_INVALID_ENCODED_DATA,
  ERR_ENCODING_NOT_SUPPORTED,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_THIS,
  ERR_NO_ICU
} = require('internal/errors').codes;
const kHandle = Symbol('handle');
const kFlags = Symbol('flags');
const kEncoding = Symbol('encoding');
const kDecoder = Symbol('decoder');
const kEncoder = Symbol('encoder');
const {
  getConstructorOf,
  customInspectSymbol: inspect
} = require('internal/util');
const {
  isArrayBuffer,
  isArrayBufferView
} = require('internal/util/types');
const {
  encodeUtf8String
} = internalBinding('buffer');
var Buffer;
function lazyBuffer() {
  if (Buffer === undefined)
    Buffer = require('buffer').Buffer;
  return Buffer;
function validateEncoder(obj) {
  if (obj == null || obj[kEncoder] !== true)
    throw new ERR_INVALID_THIS('TextEncoder');
function validateDecoder(obj) {
  if (obj == null || obj[kDecoder] !== true)
    throw new ERR_INVALID_THIS('TextDecoder');
function validateArgument(prop, expected, propName, expectedName) {
  if (typeof prop !== expected)
    throw new ERR_INVALID_ARG_TYPE(propName, expectedName, prop);
const CONVERTER_FLAGS_FLUSH = 0x1;
const CONVERTER_FLAGS_FATAL = 0x2;
const CONVERTER_FLAGS_IGNORE_BOM = 0x4;
const empty = new Uint8Array(0);
const encodings = new Map([
  ['unicode-1-1-utf-8', 'utf-8'],
  ['utf8', 'utf-8'],
  ['utf-8', 'utf-8'],
  ['866', 'ibm866'],
  ['cp866', 'ibm866'],
  ['csibm866', 'ibm866'],
  ['ibm866', 'ibm866'],
  ['csisolatin2', 'iso-8859-2'],
  ['iso-8859-2', 'iso-8859-2'],
  ['iso-ir-101', 'iso-8859-2'],
  ['iso8859-2', 'iso-8859-2'],
  ['iso88592', 'iso-8859-2'],
  ['iso_8859-2', 'iso-8859-2'],
  ['iso_8859-2:1987', 'iso-8859-2'],
  ['l2', 'iso-8859-2'],
  ['latin2', 'iso-8859-2'],
  ['csisolatin3', 'iso-8859-3'],
  ['iso-8859-3', 'iso-8859-3'],
  ['iso-ir-109', 'iso-8859-3'],
  ['iso8859-3', 'iso-8859-3'],
  ['iso88593', 'iso-8859-3'],
  ['iso_8859-3', 'iso-8859-3'],
  ['iso_8859-3:1988', 'iso-8859-3'],
  ['l3', 'iso-8859-3'],
  ['latin3', 'iso-8859-3'],
  ['csisolatin4', 'iso-8859-4'],
  ['iso-8859-4', 'iso-8859-4'],
  ['iso-ir-110', 'iso-8859-4'],
  ['iso8859-4', 'iso-8859-4'],
  ['iso88594', 'iso-8859-4'],
  ['iso_8859-4', 'iso-8859-4'],
  ['iso_8859-4:1988', 'iso-8859-4'],
  ['l4', 'iso-8859-4'],
  ['latin4', 'iso-8859-4'],
  ['csisolatincyrillic', 'iso-8859-5'],
  ['cyrillic', 'iso-8859-5'],
  ['iso-8859-5', 'iso-8859-5'],
  ['iso-ir-144', 'iso-8859-5'],
  ['iso8859-5', 'iso-8859-5'],
  ['iso88595', 'iso-8859-5'],
  ['iso_8859-5', 'iso-8859-5'],
  ['iso_8859-5:1988', 'iso-8859-5'],
  ['arabic', 'iso-8859-6'],
  ['asmo-708', 'iso-8859-6'],
  ['csiso88596e', 'iso-8859-6'],
  ['csiso88596i', 'iso-8859-6'],
  ['csisolatinarabic', 'iso-8859-6'],
  ['ecma-114', 'iso-8859-6'],
  ['iso-8859-6', 'iso-8859-6'],
  ['iso-8859-6-e', 'iso-8859-6'],
  ['iso-8859-6-i', 'iso-8859-6'],
  ['iso-ir-127', 'iso-8859-6'],
  ['iso8859-6', 'iso-8859-6'],
  ['iso88596', 'iso-8859-6'],
  ['iso_8859-6', 'iso-8859-6'],
  ['iso_8859-6:1987', 'iso-8859-6'],
  ['csisolatingreek', 'iso-8859-7'],
  ['ecma-118', 'iso-8859-7'],
  ['elot_928', 'iso-8859-7'],
  ['greek', 'iso-8859-7'],
  ['greek8', 'iso-8859-7'],
  ['iso-8859-7', 'iso-8859-7'],
  ['iso-ir-126', 'iso-8859-7'],
  ['iso8859-7', 'iso-8859-7'],
  ['iso88597', 'iso-8859-7'],
  ['iso_8859-7', 'iso-8859-7'],
  ['iso_8859-7:1987', 'iso-8859-7'],
  ['sun_eu_greek', 'iso-8859-7'],
  ['csiso88598e', 'iso-8859-8'],
  ['csisolatinhebrew', 'iso-8859-8'],
  ['hebrew', 'iso-8859-8'],
  ['iso-8859-8', 'iso-8859-8'],
  ['iso-8859-8-e', 'iso-8859-8'],
  ['iso-ir-138', 'iso-8859-8'],
  ['iso8859-8', 'iso-8859-8'],
  ['iso88598', 'iso-8859-8'],
  ['iso_8859-8', 'iso-8859-8'],
  ['iso_8859-8:1988', 'iso-8859-8'],
  ['visual', 'iso-8859-8'],
  ['csiso88598i', 'iso-8859-8-i'],
  ['iso-8859-8-i', 'iso-8859-8-i'],
  ['logical', 'iso-8859-8-i'],
  ['csisolatin6', 'iso-8859-10'],
  ['iso-8859-10', 'iso-8859-10'],
  ['iso-ir-157', 'iso-8859-10'],
  ['iso8859-10', 'iso-8859-10'],
  ['iso885910', 'iso-8859-10'],
  ['l6', 'iso-8859-10'],
  ['latin6', 'iso-8859-10'],
  ['iso-8859-13', 'iso-8859-13'],
  ['iso8859-13', 'iso-8859-13'],
  ['iso885913', 'iso-8859-13'],
  ['iso-8859-14', 'iso-8859-14'],
  ['iso8859-14', 'iso-8859-14'],
  ['iso885914', 'iso-8859-14'],
  ['csisolatin9', 'iso-8859-15'],
  ['iso-8859-15', 'iso-8859-15'],
  ['iso8859-15', 'iso-8859-15'],
  ['iso885915', 'iso-8859-15'],
  ['iso_8859-15', 'iso-8859-15'],
  ['l9', 'iso-8859-15'],
  ['cskoi8r', 'koi8-r'],
  ['koi', 'koi8-r'],
  ['koi8', 'koi8-r'],
  ['koi8-r', 'koi8-r'],
  ['koi8_r', 'koi8-r'],
  ['koi8-ru', 'koi8-u'],
  ['koi8-u', 'koi8-u'],
  ['csmacintosh', 'macintosh'],
  ['mac', 'macintosh'],
  ['macintosh', 'macintosh'],
  ['x-mac-roman', 'macintosh'],
  ['dos-874', 'windows-874'],
  ['iso-8859-11', 'windows-874'],
  ['iso8859-11', 'windows-874'],
  ['iso885911', 'windows-874'],
  ['tis-620', 'windows-874'],
  ['windows-874', 'windows-874'],
  ['cp1250', 'windows-1250'],
  ['windows-1250', 'windows-1250'],
  ['x-cp1250', 'windows-1250'],
  ['cp1251', 'windows-1251'],
  ['windows-1251', 'windows-1251'],
  ['x-cp1251', 'windows-1251'],
  ['ansi_x3.4-1968', 'windows-1252'],
  ['ascii', 'windows-1252'],
  ['cp1252', 'windows-1252'],
  ['cp819', 'windows-1252'],
  ['csisolatin1', 'windows-1252'],
  ['ibm819', 'windows-1252'],
  ['iso-8859-1', 'windows-1252'],
  ['iso-ir-100', 'windows-1252'],
  ['iso8859-1', 'windows-1252'],
  ['iso88591', 'windows-1252'],
  ['iso_8859-1', 'windows-1252'],
  ['iso_8859-1:1987', 'windows-1252'],
  ['l1', 'windows-1252'],
  ['latin1', 'windows-1252'],
  ['us-ascii', 'windows-1252'],
  ['windows-1252', 'windows-1252'],
  ['x-cp1252', 'windows-1252'],
  ['cp1253', 'windows-1253'],
  ['windows-1253', 'windows-1253'],
  ['x-cp1253', 'windows-1253'],
  ['cp1254', 'windows-1254'],
  ['csisolatin5', 'windows-1254'],
  ['iso-8859-9', 'windows-1254'],
  ['iso-ir-148', 'windows-1254'],
  ['iso8859-9', 'windows-1254'],
  ['iso88599', 'windows-1254'],
  ['iso_8859-9', 'windows-1254'],
  ['iso_8859-9:1989', 'windows-1254'],
  ['l5', 'windows-1254'],
  ['latin5', 'windows-1254'],
  ['windows-1254', 'windows-1254'],
  ['x-cp1254', 'windows-1254'],
  ['cp1255', 'windows-1255'],
  ['windows-1255', 'windows-1255'],
  ['x-cp1255', 'windows-1255'],
  ['cp1256', 'windows-1256'],
  ['windows-1256', 'windows-1256'],
  ['x-cp1256', 'windows-1256'],
  ['cp1257', 'windows-1257'],
  ['windows-1257', 'windows-1257'],
  ['x-cp1257', 'windows-1257'],
  ['cp1258', 'windows-1258'],
  ['windows-1258', 'windows-1258'],
  ['x-cp1258', 'windows-1258'],
  ['x-mac-cyrillic', 'x-mac-cyrillic'],
  ['x-mac-ukrainian', 'x-mac-cyrillic'],
  ['chinese', 'gbk'],
  ['csgb2312', 'gbk'],
  ['csiso58gb231280', 'gbk'],
  ['gb2312', 'gbk'],
  ['gb_2312', 'gbk'],
  ['gb_2312-80', 'gbk'],
  ['gbk', 'gbk'],
  ['iso-ir-58', 'gbk'],
  ['x-gbk', 'gbk'],
  ['gb18030', 'gb18030'],
  ['big5', 'big5'],
  ['big5-hkscs', 'big5'],
  ['cn-big5', 'big5'],
  ['csbig5', 'big5'],
  ['x-x-big5', 'big5'],
  ['cseucpkdfmtjapanese', 'euc-jp'],
  ['euc-jp', 'euc-jp'],
  ['x-euc-jp', 'euc-jp'],
  ['csiso2022jp', 'iso-2022-jp'],
  ['iso-2022-jp', 'iso-2022-jp'],
  ['csshiftjis', 'shift_jis'],
  ['ms932', 'shift_jis'],
  ['ms_kanji', 'shift_jis'],
  ['shift-jis', 'shift_jis'],
  ['shift_jis', 'shift_jis'],
  ['sjis', 'shift_jis'],
  ['windows-31j', 'shift_jis'],
  ['x-sjis', 'shift_jis'],
  ['cseuckr', 'euc-kr'],
  ['csksc56011987', 'euc-kr'],
  ['euc-kr', 'euc-kr'],
  ['iso-ir-149', 'euc-kr'],
  ['korean', 'euc-kr'],
  ['ks_c_5601-1987', 'euc-kr'],
  ['ks_c_5601-1989', 'euc-kr'],
  ['ksc5601', 'euc-kr'],
  ['ksc_5601', 'euc-kr'],
  ['windows-949', 'euc-kr'],
  ['utf-16be', 'utf-16be'],
  ['utf-16le', 'utf-16le'],
  ['utf-16', 'utf-16le']
// Unfortunately, String.prototype.trim also removes non-ascii whitespace,
// so we have to do this manually
function trimAsciiWhitespace(label) {
  var s = 0;
  var e = label.length;
  while (s < e && (
    label[s] === '\u0009' ||
    label[s] === '\u000a' ||
    label[s] === '\u000c' ||
    label[s] === '\u000d' ||
    label[s] === '\u0020')) {
    s++;
  while (e > s && (
    label[e - 1] === '\u0009' ||
    label[e - 1] === '\u000a' ||
    label[e - 1] === '\u000c' ||
    label[e - 1] === '\u000d' ||
    label[e - 1] === '\u0020')) {
    e--;
  return label.slice(s, e);
function getEncodingFromLabel(label) {
  const enc = encodings.get(label);
  if (enc !== undefined) return enc;
  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));
class TextEncoder {
  constructor() {
    this[kEncoder] = true;
  get encoding() {
    validateEncoder(this);
    return 'utf-8';
  encode(input = '') {
    validateEncoder(this);
    return encodeUtf8String(`${input}`);
  [inspect](depth, opts) {
    validateEncoder(this);
    if (typeof depth === 'number' && depth < 0)
      return this;
    const ctor = getConstructorOf(this);
    const obj = Object.create({
      constructor: ctor === null ? TextEncoder : ctor
    });
    obj.encoding = this.encoding;
    // Lazy to avoid circular dependency
    return require('internal/util/inspect').inspect(obj, opts);
Object.defineProperties(
  TextEncoder.prototype, {
    'encode': { enumerable: true },
    'encoding': { enumerable: true },
    [Symbol.toStringTag]: {
      configurable: true,
      value: 'TextEncoder'
    } });
const TextDecoder =
  internalBinding('config').hasIntl ?
    makeTextDecoderICU() :
    makeTextDecoderJS();
function makeTextDecoderICU() {
  const {
    decode: _decode,
    getConverter,
  } = internalBinding('icu');
  class TextDecoder {
    constructor(encoding = 'utf-8', options = {}) {
      encoding = `${encoding}`;
      validateArgument(options, 'object', 'options', 'Object');
      const enc = getEncodingFromLabel(encoding);
      if (enc === undefined)
        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);
      var flags = 0;
      if (options !== null) {
        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;
        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;
      }
      const handle = getConverter(enc, flags);
      if (handle === undefined)
        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);
      this[kDecoder] = true;
      this[kHandle] = handle;
      this[kFlags] = flags;
      this[kEncoding] = enc;
    }
    decode(input = empty, options = {}) {
      validateDecoder(this);
      if (isArrayBuffer(input)) {
        input = lazyBuffer().from(input);
      } else if (!isArrayBufferView(input)) {
        throw new ERR_INVALID_ARG_TYPE('input',
                                       ['ArrayBuffer', 'ArrayBufferView'],
                                       input);
      }
      validateArgument(options, 'object', 'options', 'Object');
      var flags = 0;
      if (options !== null)
        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;
      const ret = _decode(this[kHandle], input, flags);
      if (typeof ret === 'number') {
        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding, ret);
      }
      return ret.toString('ucs2');
    }
  return TextDecoder;
function makeTextDecoderJS() {
  var StringDecoder;
  function lazyStringDecoder() {
    if (StringDecoder === undefined)
      ({ StringDecoder } = require('string_decoder'));
    return StringDecoder;
  const kBOMSeen = Symbol('BOM seen');
  function hasConverter(encoding) {
    return encoding === 'utf-8' || encoding === 'utf-16le';
  class TextDecoder {
    constructor(encoding = 'utf-8', options = {}) {
      encoding = `${encoding}`;
      validateArgument(options, 'object', 'options', 'Object');
      const enc = getEncodingFromLabel(encoding);
      if (enc === undefined || !hasConverter(enc))
        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);
      var flags = 0;
      if (options !== null) {
        if (options.fatal) {
          throw new ERR_NO_ICU('"fatal" option');
        }
        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;
      }
      this[kDecoder] = true;
      // StringDecoder will normalize WHATWG encoding to Node.js encoding.
      this[kHandle] = new (lazyStringDecoder())(enc);
      this[kFlags] = flags;
      this[kEncoding] = enc;
      this[kBOMSeen] = false;
    }
    decode(input = empty, options = {}) {
      validateDecoder(this);
      if (isArrayBuffer(input)) {
        input = lazyBuffer().from(input);
      } else if (isArrayBufferView(input)) {
        input = lazyBuffer().from(input.buffer, input.byteOffset,
                                  input.byteLength);
      } else {
        throw new ERR_INVALID_ARG_TYPE('input',
                                       ['ArrayBuffer', 'ArrayBufferView'],
                                       input);
      }
      validateArgument(options, 'object', 'options', 'Object');
      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {
        this[kBOMSeen] = false;
      }
      if (options !== null && options.stream) {
        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;
      } else {
        this[kFlags] |= CONVERTER_FLAGS_FLUSH;
      }
      if (!this[kBOMSeen] && !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {
        if (this[kEncoding] === 'utf-8') {
          if (input.length >= 3 &&
              input[0] === 0xEF && input[1] === 0xBB && input[2] === 0xBF) {
            input = input.slice(3);
          }
        } else if (this[kEncoding] === 'utf-16le') {
          if (input.length >= 2 && input[0] === 0xFF && input[1] === 0xFE) {
            input = input.slice(2);
          }
        }
        this[kBOMSeen] = true;
      }
      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {
        return this[kHandle].end(input);
      }
      return this[kHandle].write(input);
    }
  return TextDecoder;
// Mix in some shared properties.
  Object.defineProperties(
    TextDecoder.prototype,
    Object.getOwnPropertyDescriptors({
      get encoding() {
        validateDecoder(this);
        return this[kEncoding];
      },
      get fatal() {
        validateDecoder(this);
        return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;
      },
      get ignoreBOM() {
        validateDecoder(this);
        return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===
               CONVERTER_FLAGS_IGNORE_BOM;
      },
      [inspect](depth, opts) {
        validateDecoder(this);
        if (typeof depth === 'number' && depth < 0)
          return this;
        const ctor = getConstructorOf(this);
        const obj = Object.create({
          constructor: ctor === null ? TextDecoder : ctor
        });
        obj.encoding = this.encoding;
        obj.fatal = this.fatal;
        obj.ignoreBOM = this.ignoreBOM;
        if (opts.showHidden) {
          obj[kFlags] = this[kFlags];
          obj[kHandle] = this[kHandle];
        }
        // Lazy to avoid circular dependency
        return require('internal/util/inspect').inspect(obj, opts);
      }
    }));
  Object.defineProperties(TextDecoder.prototype, {
    decode: { enumerable: true },
    [inspect]: { enumerable: false },
    [Symbol.toStringTag]: {
      configurable: true,
      value: 'TextDecoder'
    }
  });
module.exports = {
  getEncodingFromLabel,
  TextDecoder,
  TextEncoder
/* eslint node-core/documented-errors: "error" */
/* eslint node-core/alphabetize-errors: "error" */
/* eslint node-core/prefer-util-format-errors: "error" */
'use strict';
// The whole point behind this internal module is to allow Node.js to no
// longer be forced to treat every error message change as a semver-major
// change. The NodeError classes here all expose a `code` property whose
// value statically and permanently identifies the error. While the error
// message may change, the code should not.
const { Object, Math } = primordials;
const kCode = Symbol('code');
const kInfo = Symbol('info');
const messages = new Map();
const codes = {};
const { kMaxLength } = internalBinding('buffer');
const MainContextError = Error;
const ErrorToString = Error.prototype.toString;
// Polyfill of V8's Error.prepareStackTrace API.
// https://crbug.com/v8/7848
const prepareStackTrace = (globalThis, error, trace) => {
  // `globalThis` is the global that contains the constructor which
  // created `error`.
  if (typeof globalThis.Error.prepareStackTrace === 'function') {
    return globalThis.Error.prepareStackTrace(error, trace);
  // We still have legacy usage that depends on the main context's `Error`
  // being used, even when the error is from a different context.
  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.
  if (typeof MainContextError.prepareStackTrace === 'function') {
    return MainContextError.prepareStackTrace(error, trace);
  const errorString = ErrorToString.call(error);
  if (trace.length === 0) {
    return errorString;
  return `${errorString}\n    at ${trace.join('\n    at ')}`;
let excludedStackFn;
// Lazily loaded
let util;
let assert;
let internalUtil = null;
function lazyInternalUtil() {
  if (!internalUtil) {
    internalUtil = require('internal/util');
  return internalUtil;
let internalUtilInspect = null;
function lazyInternalUtilInspect() {
  if (!internalUtilInspect) {
    internalUtilInspect = require('internal/util/inspect');
  return internalUtilInspect;
let buffer;
function lazyBuffer() {
  if (buffer === undefined)
    buffer = require('buffer').Buffer;
  return buffer;
// A specialized Error that includes an additional info property with
// additional information about the error condition.
// It has the properties present in a UVException but with a custom error
// message followed by the uv error code and uv error message.
// It also has its own error code with the original uv error context put into
// `err.info`.
// The context passed into this error must have .code, .syscall and .message,
// and may have .path and .dest.
class SystemError extends Error {
  constructor(key, context) {
    if (excludedStackFn === undefined) {
      super();
    } else {
      const limit = Error.stackTraceLimit;
      Error.stackTraceLimit = 0;
      super();
      // Reset the limit and setting the name property.
      Error.stackTraceLimit = limit;
    }
    const prefix = getMessage(key, [], this);
    let message = `${prefix}: ${context.syscall} returned ` +
                  `${context.code} (${context.message})`;
    if (context.path !== undefined)
      message += ` ${context.path}`;
    if (context.dest !== undefined)
      message += ` => ${context.dest}`;
    Object.defineProperty(this, 'message', {
      value: message,
      enumerable: false,
      writable: true,
      configurable: true
    });
    Object.defineProperty(this, kInfo, {
      configurable: false,
      enumerable: false,
      value: context
    });
    Object.defineProperty(this, kCode, {
      configurable: true,
      enumerable: false,
      value: key,
      writable: true
    });
    addCodeToName(this, 'SystemError', key);
  get code() {
    return this[kCode];
  set code(value) {
    Object.defineProperty(this, 'code', {
      configurable: true,
      enumerable: true,
      value,
      writable: true
    });
  get info() {
    return this[kInfo];
  get errno() {
    return this[kInfo].errno;
  set errno(val) {
    this[kInfo].errno = val;
  get syscall() {
    return this[kInfo].syscall;
  set syscall(val) {
    this[kInfo].syscall = val;
  get path() {
    return this[kInfo].path !== undefined ?
      this[kInfo].path.toString() : undefined;
  set path(val) {
    this[kInfo].path = val ?
      lazyBuffer().from(val.toString()) : undefined;
  get dest() {
    return this[kInfo].path !== undefined ?
      this[kInfo].dest.toString() : undefined;
  set dest(val) {
    this[kInfo].dest = val ?
      lazyBuffer().from(val.toString()) : undefined;
  toString() {
    return `${this.name} [${this.code}]: ${this.message}`;
function makeSystemErrorWithCode(key) {
  return class NodeError extends SystemError {
    constructor(ctx) {
      super(key, ctx);
    }
  };
function makeNodeErrorWithCode(Base, key) {
  return class NodeError extends Base {
    constructor(...args) {
      if (excludedStackFn === undefined) {
        super();
      } else {
        const limit = Error.stackTraceLimit;
        Error.stackTraceLimit = 0;
        super();
        // Reset the limit and setting the name property.
        Error.stackTraceLimit = limit;
      }
      const message = getMessage(key, args, this);
      Object.defineProperty(this, 'message', {
        value: message,
        enumerable: false,
        writable: true,
        configurable: true
      });
      addCodeToName(this, super.name, key);
    }
    get code() {
      return key;
    }
    set code(value) {
      Object.defineProperty(this, 'code', {
        configurable: true,
        enumerable: true,
        value,
        writable: true
      });
    }
    toString() {
      return `${this.name} [${key}]: ${this.message}`;
    }
  };
// This function removes unnecessary frames from Node.js core errors.
function hideStackFrames(fn) {
  return function hidden(...args) {
    // Make sure the most outer `hideStackFrames()` function is used.
    let setStackFn = false;
    if (excludedStackFn === undefined) {
      excludedStackFn = hidden;
      setStackFn = true;
    }
    try {
      return fn(...args);
    } finally {
      if (setStackFn === true) {
        excludedStackFn = undefined;
      }
    }
  };
function addCodeToName(err, name, code) {
  // Set the stack
  if (excludedStackFn !== undefined) {
    // eslint-disable-next-line no-restricted-syntax
    Error.captureStackTrace(err, excludedStackFn);
  // Add the error code to the name to include it in the stack trace.
  err.name = `${name} [${code}]`;
  // Access the stack to generate the error message including the error code
  // from the name.
  err.stack;
  // Reset the name to the actual name.
  if (name === 'SystemError') {
    Object.defineProperty(err, 'name', {
      value: name,
      enumerable: false,
      writable: true,
      configurable: true
    });
  } else {
    delete err.name;
// Utility function for registering the error codes. Only used here. Exported
// *only* to allow for testing.
function E(sym, val, def, ...otherClasses) {
  // Special case for SystemError that formats the error message differently
  // The SystemErrors only have SystemError as their base classes.
  messages.set(sym, val);
  if (def === SystemError) {
    def = makeSystemErrorWithCode(sym);
  } else {
    def = makeNodeErrorWithCode(def, sym);
  if (otherClasses.length !== 0) {
    otherClasses.forEach((clazz) => {
      def[clazz.name] = makeNodeErrorWithCode(clazz, sym);
    });
  codes[sym] = def;
function getMessage(key, args, self) {
  const msg = messages.get(key);
  if (assert === undefined) assert = require('internal/assert');
  if (typeof msg === 'function') {
    assert(
      msg.length <= args.length, // Default options do not count.
      `Code: ${key}; The provided arguments length (${args.length}) does not ` +
        `match the required ones (${msg.length}).`
    );
    return msg.apply(self, args);
  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length;
  assert(
    expectedLength === args.length,
    `Code: ${key}; The provided arguments length (${args.length}) does not ` +
      `match the required ones (${expectedLength}).`
  );
  if (args.length === 0)
    return msg;
  args.unshift(msg);
  return lazyInternalUtilInspect().format.apply(null, args);
let uvBinding;
function lazyUv() {
  if (!uvBinding) {
    uvBinding = internalBinding('uv');
  return uvBinding;
function lazyErrmapGet(name) {
  uvBinding = lazyUv();
  if (!uvBinding.errmap) {
    uvBinding.errmap = uvBinding.getErrorMap();
  return uvBinding.errmap.get(name);
 * This creates an error compatible with errors produced in the C++
 * function UVException using a context object with data assembled in C++.
 * The goal is to migrate them to ERR_* errors later when compatibility is
 * not a concern.
 * @param {Object} ctx
 * @returns {Error}
function uvException(ctx) {
  const [ code, uvmsg ] = lazyErrmapGet(ctx.errno);
  let message = `${code}: ${ctx.message || uvmsg}, ${ctx.syscall}`;
  let path;
  let dest;
  if (ctx.path) {
    path = ctx.path.toString();
    message += ` '${path}'`;
  if (ctx.dest) {
    dest = ctx.dest.toString();
    message += ` -> '${dest}'`;
  // Reducing the limit improves the performance significantly. We do not loose
  // the stack frames due to the `captureStackTrace()` function that is called
  // later.
  const tmpLimit = Error.stackTraceLimit;
  Error.stackTraceLimit = 0;
  // Pass the message to the constructor instead of setting it on the object
  // to make sure it is the same as the one created in C++
  // eslint-disable-next-line no-restricted-syntax
  const err = new Error(message);
  Error.stackTraceLimit = tmpLimit;
  for (const prop of Object.keys(ctx)) {
    if (prop === 'message' || prop === 'path' || prop === 'dest') {
      continue;
    }
    err[prop] = ctx[prop];
  // TODO(BridgeAR): Show the `code` property as part of the stack.
  err.code = code;
  if (path) {
    err.path = path;
  if (dest) {
    err.dest = dest;
  // eslint-disable-next-line no-restricted-syntax
  Error.captureStackTrace(err, excludedStackFn || uvException);
  return err;
 * This creates an error compatible with errors produced in the C++
 * This function should replace the deprecated
 * `exceptionWithHostPort()` function.
 * @param {number} err - A libuv error number
 * @param {string} syscall
 * @param {string} address
 * @param {number} [port]
 * @returns {Error}
function uvExceptionWithHostPort(err, syscall, address, port) {
  const [ code, uvmsg ] = lazyErrmapGet(err);
  const message = `${syscall} ${code}: ${uvmsg}`;
  let details = '';
  if (port && port > 0) {
    details = ` ${address}:${port}`;
  } else if (address) {
    details = ` ${address}`;
  // Reducing the limit improves the performance significantly. We do not loose
  // the stack frames due to the `captureStackTrace()` function that is called
  // later.
  const tmpLimit = Error.stackTraceLimit;
  Error.stackTraceLimit = 0;
  // eslint-disable-next-line no-restricted-syntax
  const ex = new Error(`${message}${details}`);
  Error.stackTraceLimit = tmpLimit;
  ex.code = code;
  ex.errno = code;
  ex.syscall = syscall;
  ex.address = address;
  if (port) {
    ex.port = port;
  // eslint-disable-next-line no-restricted-syntax
  Error.captureStackTrace(ex, excludedStackFn || uvExceptionWithHostPort);
  return ex;
 * This used to be util._errnoException().
 * @param {number} err - A libuv error number
 * @param {string} syscall
 * @param {string} [original]
 * @returns {Error}
function errnoException(err, syscall, original) {
  // TODO(joyeecheung): We have to use the type-checked
  // getSystemErrorName(err) to guard against invalid arguments from users.
  // This can be replaced with [ code ] = errmap.get(err) when this method
  // is no longer exposed to user land.
  if (util === undefined) util = require('util');
  const code = util.getSystemErrorName(err);
  const message = original ?
    `${syscall} ${code} ${original}` : `${syscall} ${code}`;
  // eslint-disable-next-line no-restricted-syntax
  const ex = new Error(message);
  // TODO(joyeecheung): errno is supposed to err, like in uvException
  ex.code = ex.errno = code;
  ex.syscall = syscall;
  // eslint-disable-next-line no-restricted-syntax
  Error.captureStackTrace(ex, excludedStackFn || errnoException);
  return ex;
 * Deprecated, new function is `uvExceptionWithHostPort()`
 * New function added the error description directly
 * from C++. this method for backwards compatibility
 * @param {number} err - A libuv error number
 * @param {string} syscall
 * @param {string} address
 * @param {number} [port]
 * @param {string} [additional]
 * @returns {Error}
function exceptionWithHostPort(err, syscall, address, port, additional) {
  // TODO(joyeecheung): We have to use the type-checked
  // getSystemErrorName(err) to guard against invalid arguments from users.
  // This can be replaced with [ code ] = errmap.get(err) when this method
  // is no longer exposed to user land.
  if (util === undefined) util = require('util');
  const code = util.getSystemErrorName(err);
  let details = '';
  if (port && port > 0) {
    details = ` ${address}:${port}`;
  } else if (address) {
    details = ` ${address}`;
  if (additional) {
    details += ` - Local (${additional})`;
  // Reducing the limit improves the performance significantly. We do not loose
  // the stack frames due to the `captureStackTrace()` function that is called
  // later.
  const tmpLimit = Error.stackTraceLimit;
  Error.stackTraceLimit = 0;
  // eslint-disable-next-line no-restricted-syntax
  const ex = new Error(`${syscall} ${code}${details}`);
  // TODO(joyeecheung): errno is supposed to err, like in uvException
  Error.stackTraceLimit = tmpLimit;
  ex.code = ex.errno = code;
  ex.syscall = syscall;
  ex.address = address;
  if (port) {
    ex.port = port;
  // eslint-disable-next-line no-restricted-syntax
  Error.captureStackTrace(ex, excludedStackFn || exceptionWithHostPort);
  return ex;
 * @param {number|string} code - A libuv error number or a c-ares error code
 * @param {string} syscall
 * @param {string} [hostname]
 * @returns {Error}
function dnsException(code, syscall, hostname) {
  // If `code` is of type number, it is a libuv error number, else it is a
  // c-ares error code.
  if (typeof code === 'number') {
    // ENOTFOUND is not a proper POSIX error, but this error has been in place
    // long enough that it's not practical to remove it.
    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {
      code = 'ENOTFOUND'; // Fabricated error name.
    } else {
      code = lazyInternalUtil().getSystemErrorName(code);
    }
  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;
  // Reducing the limit improves the performance significantly. We do not loose
  // the stack frames due to the `captureStackTrace()` function that is called
  // later.
  const tmpLimit = Error.stackTraceLimit;
  Error.stackTraceLimit = 0;
  // eslint-disable-next-line no-restricted-syntax
  const ex = new Error(message);
  // TODO(joyeecheung): errno is supposed to be a number / err, like in
  Error.stackTraceLimit = tmpLimit;
  // uvException.
  ex.errno = code;
  ex.code = code;
  ex.syscall = syscall;
  if (hostname) {
    ex.hostname = hostname;
  // eslint-disable-next-line no-restricted-syntax
  Error.captureStackTrace(ex, excludedStackFn || dnsException);
  return ex;
function connResetException(msg) {
  // eslint-disable-next-line no-restricted-syntax
  const ex = new Error(msg);
  ex.code = 'ECONNRESET';
  return ex;
let maxStack_ErrorName;
let maxStack_ErrorMessage;
 * Returns true if `err.name` and `err.message` are equal to engine-specific
 * values indicating max call stack size has been exceeded.
 * "Maximum call stack size exceeded" in V8.
 * @param {Error} err
 * @returns {boolean}
function isStackOverflowError(err) {
  if (maxStack_ErrorMessage === undefined) {
    try {
      function overflowStack() { overflowStack(); }
      overflowStack();
    } catch (err) {
      maxStack_ErrorMessage = err.message;
      maxStack_ErrorName = err.name;
    }
  return err && err.name === maxStack_ErrorName &&
         err.message === maxStack_ErrorMessage;
function oneOf(expected, thing) {
  assert(typeof thing === 'string', '`thing` has to be of type string');
  if (Array.isArray(expected)) {
    const len = expected.length;
    assert(len > 0,
           'At least one expected value needs to be specified');
    expected = expected.map((i) => String(i));
    if (len > 2) {
      return `one of ${thing} ${expected.slice(0, len - 1).join(', ')}, or ` +
             expected[len - 1];
    } else if (len === 2) {
      return `one of ${thing} ${expected[0]} or ${expected[1]}`;
    } else {
      return `of ${thing} ${expected[0]}`;
    }
  } else {
    return `of ${thing} ${String(expected)}`;
// Only use this for integers! Decimal numbers do not work with this function.
function addNumericalSeparator(val) {
  let res = '';
  let i = val.length;
  const start = val[0] === '-' ? 1 : 0;
  for (; i >= start + 4; i -= 3) {
    res = `_${val.slice(i - 3, i)}${res}`;
  return `${val.slice(0, i)}${res}`;
// Used to enhance the stack that will be picked up by the inspector
const kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');
// These are supposed to be called only on fatal exceptions before
// the process exits.
const fatalExceptionStackEnhancers = {
  beforeInspector(error) {
    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {
      return error.stack;
    }
    try {
      // Set the error.stack here so it gets picked up by the
      // inspector.
      error.stack = error[kEnhanceStackBeforeInspector]();
    } catch {
      // We are just enhancing the error. If it fails, ignore it.
    }
    return error.stack;
  },
  afterInspector(error) {
    const originalStack = error.stack;
    const {
      inspect,
      inspectDefaultOptions: {
        colors: defaultColors
      }
    } = lazyInternalUtilInspect();
    const colors = internalBinding('util').guessHandleType(2) === 'TTY' &&
                   require('internal/tty').hasColors() ||
                   defaultColors;
    try {
      return inspect(error, { colors });
    } catch {
      return originalStack;
    }
module.exports = {
  addCodeToName, // Exported for NghttpError
  codes,
  dnsException,
  errnoException,
  exceptionWithHostPort,
  getMessage,
  hideStackFrames,
  isStackOverflowError,
  connResetException,
  uvException,
  uvExceptionWithHostPort,
  SystemError,
  // This is exported only to facilitate testing.
  E,
  prepareStackTrace,
  kEnhanceStackBeforeInspector,
  fatalExceptionStackEnhancers
// To declare an error message, use the E(sym, val, def) function above. The sym
// must be an upper case string. The val can be either a function or a string.
// The def must be an error class.
// The return value of the function must be a string.
// Examples:
// E('EXAMPLE_KEY1', 'This is the error value', Error);
// E('EXAMPLE_KEY2', (a, b) => return `${a} ${b}`, RangeError);
// Once an error code has been assigned, the code itself MUST NOT change and
// any given error code must never be reused to identify a different error.
// Any error code added here should also be added to the documentation
// Note: Please try to keep these in alphabetical order
// Note: Node.js specific errors must begin with the prefix ERR_
E('ERR_AMBIGUOUS_ARGUMENT', 'The "%s" argument is ambiguous. %s', TypeError);
E('ERR_ARG_NOT_ITERABLE', '%s must be iterable', TypeError);
E('ERR_ASSERTION', '%s', Error);
E('ERR_ASYNC_CALLBACK', '%s must be a function', TypeError);
E('ERR_ASYNC_TYPE', 'Invalid name for async "type": %s', TypeError);
E('ERR_BROTLI_INVALID_PARAM', '%s is not a valid Brotli parameter', RangeError);
E('ERR_BUFFER_OUT_OF_BOUNDS',
  // Using a default argument here is important so the argument is not counted
  // towards `Function#length`.
  (name = undefined) => {
    if (name) {
      return `"${name}" is outside of buffer bounds`;
    }
    return 'Attempt to write outside buffer bounds';
  }, RangeError);
E('ERR_BUFFER_TOO_LARGE',
  `Cannot create a Buffer larger than 0x${kMaxLength.toString(16)} bytes`,
  RangeError);
E('ERR_CANNOT_WATCH_SIGINT', 'Cannot watch for SIGINT signals', Error);
E('ERR_CHILD_CLOSED_BEFORE_REPLY',
  'Child closed before reply received', Error);
E('ERR_CHILD_PROCESS_IPC_REQUIRED',
  "Forked processes must have an IPC channel, missing value 'ipc' in %s",
  Error);
E('ERR_CHILD_PROCESS_STDIO_MAXBUFFER', '%s maxBuffer length exceeded',
  RangeError);
E('ERR_CONSOLE_WRITABLE_STREAM',
  'Console expects a writable stream instance for %s', TypeError);
E('ERR_CPU_USAGE', 'Unable to obtain cpu usage %s', Error);
E('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED',
  'Custom engines not supported by this OpenSSL', Error);
E('ERR_CRYPTO_ECDH_INVALID_FORMAT', 'Invalid ECDH format: %s', TypeError);
E('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY',
  'Public key is not valid for specified curve', Error);
E('ERR_CRYPTO_ENGINE_UNKNOWN', 'Engine "%s" was not found', Error);
E('ERR_CRYPTO_FIPS_FORCED',
  'Cannot set FIPS mode, it was forced with --force-fips at startup.', Error);
E('ERR_CRYPTO_FIPS_UNAVAILABLE', 'Cannot set FIPS mode in a non-FIPS build.',
  Error);
E('ERR_CRYPTO_HASH_DIGEST_NO_UTF16', 'hash.digest() does not support UTF-16',
  Error);
E('ERR_CRYPTO_HASH_FINALIZED', 'Digest already called', Error);
E('ERR_CRYPTO_HASH_UPDATE_FAILED', 'Hash update failed', Error);
E('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS', 'The selected key encoding %s %s.',
  Error);
E('ERR_CRYPTO_INVALID_DIGEST', 'Invalid digest: %s', TypeError);
E('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE',
  'Invalid key object type %s, expected %s.', TypeError);
E('ERR_CRYPTO_INVALID_STATE', 'Invalid state for operation %s', Error);
E('ERR_CRYPTO_PBKDF2_ERROR', 'PBKDF2 error', Error);
E('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER', 'Invalid scrypt parameter', Error);
E('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED', 'Scrypt algorithm not supported', Error);
// Switch to TypeError. The current implementation does not seem right.
E('ERR_CRYPTO_SIGN_KEY_REQUIRED', 'No key provided to sign', Error);
E('ERR_CRYPTO_TIMING_SAFE_EQUAL_LENGTH',
  'Input buffers must have the same length', RangeError);
E('ERR_DNS_SET_SERVERS_FAILED', 'c-ares failed to set servers: "%s" [%s]',
  Error);
E('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE',
  'A callback was registered through ' +
     'process.setUncaughtExceptionCaptureCallback(), which is mutually ' +
     'exclusive with using the `domain` module',
  Error);
E('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE',
  'The `domain` module is in use, which is mutually exclusive with calling ' +
     'process.setUncaughtExceptionCaptureCallback()',
  Error);
E('ERR_ENCODING_INVALID_ENCODED_DATA', function(encoding, ret) {
  this.errno = ret;
  return `The encoded data was not valid for encoding ${encoding}`;
}, TypeError);
E('ERR_ENCODING_NOT_SUPPORTED', 'The "%s" encoding is not supported',
  RangeError);
E('ERR_FALSY_VALUE_REJECTION', function(reason) {
  this.reason = reason;
  return 'Promise was rejected with falsy value';
}, Error);
E('ERR_FS_FILE_TOO_LARGE', 'File size (%s) is greater than possible Buffer: ' +
    `${kMaxLength} bytes`,
  RangeError);
E('ERR_FS_INVALID_SYMLINK_TYPE',
  'Symlink type must be one of "dir", "file", or "junction". Received "%s"',
  Error); // Switch to TypeError. The current implementation does not seem right
E('ERR_HTTP2_ALTSVC_INVALID_ORIGIN',
  'HTTP/2 ALTSVC frames require a valid origin', TypeError);
E('ERR_HTTP2_ALTSVC_LENGTH',
  'HTTP/2 ALTSVC frames are limited to 16382 bytes', TypeError);
E('ERR_HTTP2_CONNECT_AUTHORITY',
  ':authority header is required for CONNECT requests', Error);
E('ERR_HTTP2_CONNECT_PATH',
  'The :path header is forbidden for CONNECT requests', Error);
E('ERR_HTTP2_CONNECT_SCHEME',
  'The :scheme header is forbidden for CONNECT requests', Error);
E('ERR_HTTP2_GOAWAY_SESSION',
  'New streams cannot be created after receiving a GOAWAY', Error);
E('ERR_HTTP2_HEADERS_AFTER_RESPOND',
  'Cannot specify additional headers after response initiated', Error);
E('ERR_HTTP2_HEADERS_SENT', 'Response has already been initiated.', Error);
E('ERR_HTTP2_HEADER_SINGLE_VALUE',
  'Header field "%s" must only have a single value', TypeError);
E('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED',
  'Informational status codes cannot be used', RangeError);
E('ERR_HTTP2_INVALID_CONNECTION_HEADERS',
  'HTTP/1 Connection specific headers are forbidden: "%s"', TypeError);
E('ERR_HTTP2_INVALID_HEADER_VALUE',
  'Invalid value "%s" for header "%s"', TypeError);
E('ERR_HTTP2_INVALID_INFO_STATUS',
  'Invalid informational status code: %s', RangeError);
E('ERR_HTTP2_INVALID_ORIGIN',
  'HTTP/2 ORIGIN frames require a valid origin', TypeError);
E('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH',
  'Packed settings length must be a multiple of six', RangeError);
E('ERR_HTTP2_INVALID_PSEUDOHEADER',
  '"%s" is an invalid pseudoheader or is used incorrectly', TypeError);
E('ERR_HTTP2_INVALID_SESSION', 'The session has been destroyed', Error);
E('ERR_HTTP2_INVALID_SETTING_VALUE',
  // Using default arguments here is important so the arguments are not counted
  // towards `Function#length`.
  function(name, actual, min = undefined, max = undefined) {
    this.actual = actual;
    if (min !== undefined) {
      this.min = min;
      this.max = max;
    }
    return `Invalid value for setting "${name}": ${actual}`;
  }, TypeError, RangeError);
E('ERR_HTTP2_INVALID_STREAM', 'The stream has been destroyed', Error);
E('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK',
  'Maximum number of pending settings acknowledgements', Error);
E('ERR_HTTP2_NESTED_PUSH',
  'A push stream cannot initiate another push stream.', Error);
E('ERR_HTTP2_NO_SOCKET_MANIPULATION',
  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)',
  Error);
E('ERR_HTTP2_ORIGIN_LENGTH',
  'HTTP/2 ORIGIN frames are limited to 16382 bytes', TypeError);
E('ERR_HTTP2_OUT_OF_STREAMS',
  'No stream ID is available because maximum stream ID has been reached',
  Error);
E('ERR_HTTP2_PAYLOAD_FORBIDDEN',
  'Responses with %s status must not have a payload', Error);
E('ERR_HTTP2_PING_CANCEL', 'HTTP2 ping cancelled', Error);
E('ERR_HTTP2_PING_LENGTH', 'HTTP2 ping payload must be 8 bytes', RangeError);
E('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED',
  'Cannot set HTTP/2 pseudo-headers', TypeError);
E('ERR_HTTP2_PUSH_DISABLED', 'HTTP/2 client has disabled push streams', Error);
E('ERR_HTTP2_SEND_FILE', 'Directories cannot be sent', Error);
E('ERR_HTTP2_SEND_FILE_NOSEEK',
  'Offset or length can only be specified for regular files', Error);
E('ERR_HTTP2_SESSION_ERROR', 'Session closed with error code %s', Error);
E('ERR_HTTP2_SETTINGS_CANCEL', 'HTTP2 session settings canceled', Error);
E('ERR_HTTP2_SOCKET_BOUND',
  'The socket is already bound to an Http2Session', Error);
E('ERR_HTTP2_SOCKET_UNBOUND',
  'The socket has been disconnected from the Http2Session', Error);
E('ERR_HTTP2_STATUS_101',
  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2', Error);
E('ERR_HTTP2_STATUS_INVALID', 'Invalid status code: %s', RangeError);
E('ERR_HTTP2_STREAM_CANCEL', function(error) {
  let msg = 'The pending stream has been canceled';
  if (error) {
    this.cause = error;
    if (typeof error.message === 'string')
      msg += ` (caused by: ${error.message})`;
  return msg;
}, Error);
E('ERR_HTTP2_STREAM_ERROR', 'Stream closed with error code %s', Error);
E('ERR_HTTP2_STREAM_SELF_DEPENDENCY',
  'A stream cannot depend on itself', Error);
E('ERR_HTTP2_TRAILERS_ALREADY_SENT',
  'Trailing headers have already been sent', Error);
E('ERR_HTTP2_TRAILERS_NOT_READY',
  'Trailing headers cannot be sent until after the wantTrailers event is ' +
  'emitted', Error);
E('ERR_HTTP2_UNSUPPORTED_PROTOCOL', 'protocol "%s" is unsupported.', Error);
E('ERR_HTTP_HEADERS_SENT',
  'Cannot %s headers after they are sent to the client', Error);
E('ERR_HTTP_INVALID_HEADER_VALUE',
  'Invalid value "%s" for header "%s"', TypeError);
E('ERR_HTTP_INVALID_STATUS_CODE', 'Invalid status code: %s', RangeError);
E('ERR_HTTP_TRAILER_INVALID',
  'Trailers are invalid with this transfer encoding', Error);
E('ERR_INCOMPATIBLE_OPTION_PAIR',
  'Option "%s" can not be used in combination with option "%s"', TypeError);
E('ERR_INPUT_TYPE_NOT_ALLOWED', '--input-type can only be used with string ' +
  'input via --eval, --print, or STDIN', Error);
E('ERR_INSPECTOR_ALREADY_CONNECTED', '%s is already connected', Error);
E('ERR_INSPECTOR_CLOSED', 'Session was closed', Error);
E('ERR_INSPECTOR_COMMAND', 'Inspector error %d: %s', Error);
E('ERR_INSPECTOR_NOT_ACTIVE', 'Inspector is not active', Error);
E('ERR_INSPECTOR_NOT_AVAILABLE', 'Inspector is not available', Error);
E('ERR_INSPECTOR_NOT_CONNECTED', 'Session is not connected', Error);
E('ERR_INTERNAL_ASSERTION', (message) => {
  const suffix = 'This is caused by either a bug in Node.js ' +
    'or incorrect usage of Node.js internals.\n' +
    'Please open an issue with this stack trace at ' +
    'https://github.com/nodejs/node/issues\n';
  return message === undefined ? suffix : `${message}\n${suffix}`;
}, Error);
E('ERR_INVALID_ADDRESS_FAMILY', function(addressType, host, port) {
  this.host = host;
  this.port = port;
  return `Invalid address family: ${addressType} ${host}:${port}`;
}, RangeError);
E('ERR_INVALID_ARG_TYPE',
  (name, expected, actual) => {
    assert(typeof name === 'string', "'name' must be a string");
    // determiner: 'must be' or 'must not be'
    let determiner;
    if (typeof expected === 'string' && expected.startsWith('not ')) {
      determiner = 'must not be';
      expected = expected.replace(/^not /, '');
    } else {
      determiner = 'must be';
    }
    let msg;
    if (name.endsWith(' argument')) {
      // For cases like 'first argument'
      msg = `The ${name} ${determiner} ${oneOf(expected, 'type')}`;
    } else {
      const type = name.includes('.') ? 'property' : 'argument';
      msg = `The "${name}" ${type} ${determiner} ${oneOf(expected, 'type')}`;
    }
    // TODO(BridgeAR): Improve the output by showing `null` and similar.
    msg += `. Received type ${typeof actual}`;
    return msg;
  }, TypeError);
E('ERR_INVALID_ARG_VALUE', (name, value, reason = 'is invalid') => {
  let inspected = lazyInternalUtilInspect().inspect(value);
  if (inspected.length > 128) {
    inspected = `${inspected.slice(0, 128)}...`;
  return `The argument '${name}' ${reason}. Received ${inspected}`;
}, TypeError, RangeError);
E('ERR_INVALID_ASYNC_ID', 'Invalid %s value: %s', RangeError);
E('ERR_INVALID_BUFFER_SIZE',
  'Buffer size must be a multiple of %s', RangeError);
E('ERR_INVALID_CALLBACK',
  'Callback must be a function. Received %O', TypeError);
E('ERR_INVALID_CHAR',
  // Using a default argument here is important so the argument is not counted
  // towards `Function#length`.
  (name, field = undefined) => {
    let msg = `Invalid character in ${name}`;
    if (field !== undefined) {
      msg += ` ["${field}"]`;
    }
    return msg;
  }, TypeError);
E('ERR_INVALID_CURSOR_POS',
  'Cannot set cursor row without setting its column', TypeError);
E('ERR_INVALID_FD',
  '"fd" must be a positive integer: %s', RangeError);
E('ERR_INVALID_FD_TYPE', 'Unsupported fd type: %s', TypeError);
E('ERR_INVALID_FILE_URL_HOST',
  'File URL host must be "localhost" or empty on %s', TypeError);
E('ERR_INVALID_FILE_URL_PATH', 'File URL path %s', TypeError);
E('ERR_INVALID_HANDLE_TYPE', 'This handle type cannot be sent', TypeError);
E('ERR_INVALID_HTTP_TOKEN', '%s must be a valid HTTP token ["%s"]', TypeError);
E('ERR_INVALID_IP_ADDRESS', 'Invalid IP address: %s', TypeError);
E('ERR_INVALID_OPT_VALUE', (name, value) =>
  `The value "${String(value)}" is invalid for option "${name}"`,
  TypeError,
  RangeError);
E('ERR_INVALID_OPT_VALUE_ENCODING',
  'The value "%s" is invalid for option "encoding"', TypeError);
E('ERR_INVALID_PACKAGE_CONFIG',
  'Invalid package config in \'%s\' imported from %s', Error);
E('ERR_INVALID_PERFORMANCE_MARK',
  'The "%s" performance mark has not been set', Error);
E('ERR_INVALID_PROTOCOL',
  'Protocol "%s" not supported. Expected "%s"',
  TypeError);
E('ERR_INVALID_REPL_EVAL_CONFIG',
  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL', TypeError);
E('ERR_INVALID_REPL_INPUT', '%s', TypeError);
E('ERR_INVALID_RETURN_PROPERTY', (input, name, prop, value) => {
  return `Expected a valid ${input} to be returned for the "${prop}" from the` +
         ` "${name}" function but got ${value}.`;
}, TypeError);
E('ERR_INVALID_RETURN_PROPERTY_VALUE', (input, name, prop, value) => {
  let type;
  if (value && value.constructor && value.constructor.name) {
    type = `instance of ${value.constructor.name}`;
  } else {
    type = `type ${typeof value}`;
  return `Expected ${input} to be returned for the "${prop}" from the` +
         ` "${name}" function but got ${type}.`;
}, TypeError);
E('ERR_INVALID_RETURN_VALUE', (input, name, value) => {
  let type;
  if (value && value.constructor && value.constructor.name) {
    type = `instance of ${value.constructor.name}`;
  } else {
    type = `type ${typeof value}`;
  return `Expected ${input} to be returned from the "${name}"` +
         ` function but got ${type}.`;
}, TypeError);
E('ERR_INVALID_SYNC_FORK_INPUT',
  'Asynchronous forks do not support ' +
    'Buffer, TypedArray, DataView or string input: %s',
  TypeError);
E('ERR_INVALID_THIS', 'Value of "this" must be of type %s', TypeError);
E('ERR_INVALID_TUPLE', '%s must be an iterable %s tuple', TypeError);
E('ERR_INVALID_URI', 'URI malformed', URIError);
E('ERR_INVALID_URL', function(input) {
  this.input = input;
  return `Invalid URL: ${input}`;
}, TypeError);
E('ERR_INVALID_URL_SCHEME',
  (expected) => `The URL must be ${oneOf(expected, 'scheme')}`, TypeError);
E('ERR_IPC_CHANNEL_CLOSED', 'Channel closed', Error);
E('ERR_IPC_DISCONNECTED', 'IPC channel is already disconnected', Error);
E('ERR_IPC_ONE_PIPE', 'Child process can have only one IPC pipe', Error);
E('ERR_IPC_SYNC_FORK', 'IPC cannot be used with synchronous forks', Error);
E('ERR_MANIFEST_ASSERT_INTEGRITY',
  (moduleURL, realIntegrities) => {
    let msg = `The content of "${
      moduleURL
    }" does not match the expected integrity.`;
    if (realIntegrities.size) {
      const sri = [...realIntegrities.entries()].map(([alg, dgs]) => {
        return `${alg}-${dgs}`;
      }).join(' ');
      msg += ` Integrities found are: ${sri}`;
    } else {
      msg += ' The resource was not found in the policy.';
    }
    return msg;
  }, Error);
E('ERR_MANIFEST_DEPENDENCY_MISSING',
  'Manifest resource %s does not list %s as a dependency specifier',
  Error);
E('ERR_MANIFEST_INTEGRITY_MISMATCH',
  'Manifest resource %s has multiple entries but integrity lists do not match',
  SyntaxError);
E('ERR_MANIFEST_INVALID_RESOURCE_FIELD',
  'Manifest resource %s has invalid property value for %s',
  TypeError);
E('ERR_MANIFEST_TDZ', 'Manifest initialization has not yet run', Error);
E('ERR_MANIFEST_UNKNOWN_ONERROR',
  'Manifest specified unknown error behavior "%s".',
  SyntaxError);
E('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error);
E('ERR_MISSING_ARGS',
  (...args) => {
    assert(args.length > 0, 'At least one arg needs to be specified');
    let msg = 'The ';
    const len = args.length;
    args = args.map((a) => `"${a}"`);
    switch (len) {
      case 1:
        msg += `${args[0]} argument`;
        break;
      case 2:
        msg += `${args[0]} and ${args[1]} arguments`;
        break;
      default:
        msg += args.slice(0, len - 1).join(', ');
        msg += `, and ${args[len - 1]} arguments`;
        break;
    }
    return `${msg} must be specified`;
  }, TypeError);
E('ERR_MISSING_DYNAMIC_INSTANTIATE_HOOK',
  'The ES Module loader may not return a format of \'dynamic\' when no ' +
  'dynamicInstantiate function was provided', Error);
E('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error);
E('ERR_NAPI_CONS_FUNCTION', 'Constructor must be a function', TypeError);
E('ERR_NAPI_INVALID_DATAVIEW_ARGS',
  'byte_offset + byte_length should be less than or equal to the size in ' +
    'bytes of the array passed in',
  RangeError);
E('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT',
  'start offset of %s should be a multiple of %s', RangeError);
E('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH',
  'Invalid typed array length', RangeError);
E('ERR_NO_CRYPTO',
  'Node.js is not compiled with OpenSSL crypto support', Error);
E('ERR_NO_ICU',
  '%s is not supported on Node.js compiled without ICU', TypeError);
E('ERR_OUT_OF_RANGE',
  (str, range, input, replaceDefaultBoolean = false) => {
    assert(range, 'Missing "range" argument');
    let msg = replaceDefaultBoolean ? str :
      `The value of "${str}" is out of range.`;
    let received;
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
      received = addNumericalSeparator(String(input));
    } else if (typeof input === 'bigint') {
      received = String(input);
      if (input > 2n ** 32n || input < -(2n ** 32n)) {
        received = addNumericalSeparator(received);
      }
      received += 'n';
    } else {
      received = lazyInternalUtilInspect().inspect(input);
    }
    msg += ` It must be ${range}. Received ${received}`;
    return msg;
  }, RangeError);
E('ERR_REQUIRE_ESM', 'Must use import to load ES Module: %s', Error);
E('ERR_SCRIPT_EXECUTION_INTERRUPTED',
  'Script execution was interrupted by `SIGINT`', Error);
E('ERR_SERVER_ALREADY_LISTEN',
  'Listen method has been called more than once without closing.', Error);
E('ERR_SERVER_NOT_RUNNING', 'Server is not running.', Error);
E('ERR_SOCKET_ALREADY_BOUND', 'Socket is already bound', Error);
E('ERR_SOCKET_BAD_BUFFER_SIZE',
  'Buffer size must be a positive integer', TypeError);
E('ERR_SOCKET_BAD_PORT',
  'Port should be >= 0 and < 65536. Received %s.', RangeError);
E('ERR_SOCKET_BAD_TYPE',
  'Bad socket type specified. Valid types are: udp4, udp6', TypeError);
E('ERR_SOCKET_BUFFER_SIZE',
  'Could not get or set buffer size',
  SystemError);
E('ERR_SOCKET_CANNOT_SEND', 'Unable to send data', Error);
E('ERR_SOCKET_CLOSED', 'Socket is closed', Error);
E('ERR_SOCKET_DGRAM_IS_CONNECTED', 'Already connected', Error);
E('ERR_SOCKET_DGRAM_NOT_CONNECTED', 'Not connected', Error);
E('ERR_SOCKET_DGRAM_NOT_RUNNING', 'Not running', Error);
E('ERR_SRI_PARSE',
  'Subresource Integrity string %s had an unexpected at %d',
  SyntaxError);
E('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error);
E('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error);
E('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
E('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error);
E('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error);
E('ERR_STREAM_UNSHIFT_AFTER_END_EVENT',
  'stream.unshift() after end event', Error);
E('ERR_STREAM_WRAP', 'Stream has StringDecoder set or is in objectMode', Error);
E('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error);
E('ERR_SYNTHETIC', 'JavaScript Callstack', Error);
E('ERR_SYSTEM_ERROR', 'A system error occurred', SystemError);
E('ERR_TLS_CERT_ALTNAME_INVALID', function(reason, host, cert) {
  this.reason = reason;
  this.host = host;
  this.cert = cert;
  return `Hostname/IP does not match certificate's altnames: ${reason}`;
}, Error);
E('ERR_TLS_DH_PARAM_SIZE', 'DH parameter size %s is less than 2048', Error);
E('ERR_TLS_HANDSHAKE_TIMEOUT', 'TLS handshake timeout', Error);
E('ERR_TLS_INVALID_PROTOCOL_VERSION',
  '%j is not a valid %s TLS protocol version', TypeError);
E('ERR_TLS_PROTOCOL_VERSION_CONFLICT',
  'TLS protocol version %j conflicts with secureProtocol %j', TypeError);
E('ERR_TLS_RENEGOTIATION_DISABLED',
  'TLS session renegotiation disabled for this socket', Error);
// This should probably be a `TypeError`.
E('ERR_TLS_REQUIRED_SERVER_NAME',
  '"servername" is required parameter for Server.addContext', Error);
E('ERR_TLS_SESSION_ATTACK', 'TLS session renegotiation attack detected', Error);
E('ERR_TLS_SNI_FROM_SERVER',
  'Cannot issue SNI from a TLS server-side socket', Error);
E('ERR_TRACE_EVENTS_CATEGORY_REQUIRED',
  'At least one category is required', TypeError);
E('ERR_TRACE_EVENTS_UNAVAILABLE', 'Trace events are unavailable', Error);
E('ERR_TRANSFORM_ALREADY_TRANSFORMING',
  'Calling transform done when still transforming', Error);
// This should probably be a `RangeError`.
E('ERR_TRANSFORM_WITH_LENGTH_0',
  'Calling transform done when writableState.length != 0', Error);
E('ERR_TTY_INIT_FAILED', 'TTY initialization failed', SystemError);
E('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET',
  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +
    'callback was already active',
  Error);
E('ERR_UNESCAPED_CHARACTERS', '%s contains unescaped characters', TypeError);
E('ERR_UNHANDLED_ERROR',
  // Using a default argument here is important so the argument is not counted
  // towards `Function#length`.
  (err = undefined) => {
    const msg = 'Unhandled error.';
    if (err === undefined) return msg;
    return `${msg} (${err})`;
  }, Error);
E('ERR_UNKNOWN_BUILTIN_MODULE', 'No such built-in module: %s', Error);
E('ERR_UNKNOWN_CREDENTIAL', '%s identifier does not exist: %s', Error);
E('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError);
E('ERR_UNKNOWN_FILE_EXTENSION', 'Unknown file extension: %s', TypeError);
E('ERR_UNKNOWN_MODULE_FORMAT', 'Unknown module format: %s', RangeError);
E('ERR_UNKNOWN_SIGNAL', 'Unknown signal: %s', TypeError);
E('ERR_V8BREAKITERATOR',
  'Full ICU data not installed. See https://github.com/nodejs/node/wiki/Intl',
  Error);
// This should probably be a `TypeError`.
E('ERR_VALID_PERFORMANCE_ENTRY_TYPE',
  'At least one valid performance entry type is required', Error);
E('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING',
  'A dynamic import callback was not specified.', TypeError);
E('ERR_VM_MODULE_ALREADY_LINKED', 'Module has already been linked', Error);
E('ERR_VM_MODULE_DIFFERENT_CONTEXT',
  'Linked modules must use the same context', Error);
E('ERR_VM_MODULE_LINKING_ERRORED',
  'Linking has already failed for the provided module', Error);
E('ERR_VM_MODULE_NOT_LINKED',
  'Module must be linked before it can be instantiated', Error);
E('ERR_VM_MODULE_NOT_MODULE',
  'Provided module is not an instance of Module', Error);
E('ERR_VM_MODULE_STATUS', 'Module status %s', Error);
E('ERR_WORKER_INVALID_EXEC_ARGV', (errors) =>
  `Initiated Worker with invalid execArgv flags: ${errors.join(', ')}`,
  Error);
E('ERR_WORKER_PATH',
  'The worker script filename must be an absolute path or a relative ' +
  'path starting with \'./\' or \'../\'. Received "%s"',
  TypeError);
E('ERR_WORKER_UNSERIALIZABLE_ERROR',
  'Serializing an uncaught exception failed', Error);
E('ERR_WORKER_UNSUPPORTED_EXTENSION',
  'The worker script extension must be ".js" or ".mjs". Received "%s"',
  TypeError);
E('ERR_WORKER_UNSUPPORTED_OPERATION',
  '%s is not supported in workers', TypeError);
E('ERR_ZLIB_INITIALIZATION_FAILED', 'Initialization failed', Error);
'use strict';
const Buffer = require('buffer').Buffer;
const {
  ArrayPrototype,
  FunctionPrototype,
  Object,
  ObjectPrototype,
  SafeSet,
} = primordials;
const kSerializedError = 0;
const kSerializedObject = 1;
const kInspectedError = 2;
const errors = {
  Error, TypeError, RangeError, URIError, SyntaxError, ReferenceError, EvalError
const errorConstructorNames = new SafeSet(Object.keys(errors));
function TryGetAllProperties(object, target = object) {
  const all = Object.create(null);
  if (object === null)
    return all;
  Object.assign(all,
                TryGetAllProperties(Object.getPrototypeOf(object), target));
  const keys = Object.getOwnPropertyNames(object);
  ArrayPrototype.forEach(keys, (key) => {
    let descriptor;
    try {
      descriptor = Object.getOwnPropertyDescriptor(object, key);
    } catch { return; }
    const getter = descriptor.get;
    if (getter && key !== '__proto__') {
      try {
        descriptor.value = FunctionPrototype.call(getter, target);
      } catch {}
    }
    if ('value' in descriptor && typeof descriptor.value !== 'function') {
      delete descriptor.get;
      delete descriptor.set;
      all[key] = descriptor;
    }
  });
  return all;
function GetConstructors(object) {
  const constructors = [];
  for (var current = object;
    current !== null;
    current = Object.getPrototypeOf(current)) {
    const desc = Object.getOwnPropertyDescriptor(current, 'constructor');
    if (desc && desc.value) {
      Object.defineProperty(constructors, constructors.length, {
        value: desc.value, enumerable: true
      });
    }
  return constructors;
function GetName(object) {
  const desc = Object.getOwnPropertyDescriptor(object, 'name');
  return desc && desc.value;
let internalUtilInspect;
function inspect(...args) {
  if (!internalUtilInspect) {
    internalUtilInspect = require('internal/util/inspect');
  return internalUtilInspect.inspect(...args);
let serialize;
function serializeError(error) {
  if (!serialize) serialize = require('v8').serialize;
  try {
    if (typeof error === 'object' &&
        ObjectPrototype.toString(error) === '[object Error]') {
      const constructors = GetConstructors(error);
      for (var i = 0; i < constructors.length; i++) {
        const name = GetName(constructors[i]);
        if (errorConstructorNames.has(name)) {
          const serialized = serialize({
            constructor: name,
            properties: TryGetAllProperties(error)
          });
          return Buffer.concat([Buffer.from([kSerializedError]), serialized]);
        }
      }
    }
  } catch {}
  try {
    const serialized = serialize(error);
    return Buffer.concat([Buffer.from([kSerializedObject]), serialized]);
  } catch {}
  return Buffer.concat([Buffer.from([kInspectedError]),
                        Buffer.from(inspect(error), 'utf8')]);
let deserialize;
function deserializeError(error) {
  if (!deserialize) deserialize = require('v8').deserialize;
  switch (error[0]) {
    case kSerializedError:
      const { constructor, properties } = deserialize(error.subarray(1));
      const ctor = errors[constructor];
      return Object.create(ctor.prototype, properties);
    case kSerializedObject:
      return deserialize(error.subarray(1));
    case kInspectedError:
      const buf = Buffer.from(error.buffer,
                              error.byteOffset + 1,
                              error.byteLength - 1);
      return buf.toString('utf8');
  require('assert').fail('This should not happen');
module.exports = { serializeError, deserializeError };
'use strict';
// Currently optimal queue size, tested on V8 6.0 - 6.6. Must be power of two.
const kSize = 2048;
const kMask = kSize - 1;
// The FixedQueue is implemented as a singly-linked list of fixed-size
// circular buffers. It looks something like this:
//  head                                                       tail
//    |                                                          |
//    v                                                          v
// +-----------+ <-----\       +-----------+ <------\         +-----------+
// |  [null]   |        \----- |   next    |         \------- |   next    |
// +-----------+               +-----------+                  +-----------+
// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |       bottom --> |   item    |
// |   item    |               |   item    |                  |   item    |
// |    ...    |               |    ...    |                  |    ...    |
// |   item    |               |   item    |                  |   item    |
// |   item    |               |   item    |                  |   item    |
// |  [empty]  | <-- top       |   item    |                  |   item    |
// |  [empty]  |               |   item    |                  |   item    |
// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |
// +-----------+               +-----------+                  +-----------+
// Or, if there is only one circular buffer, it looks something
// like either of these:
//  head   tail                                 head   tail
//    |     |                                     |     |
//    v     v                                     v     v
// +-----------+                               +-----------+
// |  [null]   |                               |  [null]   |
// +-----------+                               +-----------+
// |  [empty]  |                               |   item    |
// |  [empty]  |                               |   item    |
// |   item    | <-- bottom            top --> |  [empty]  |
// |   item    |                               |  [empty]  |
// |  [empty]  | <-- top            bottom --> |   item    |
// |  [empty]  |                               |   item    |
// +-----------+                               +-----------+
// Adding a value means moving `top` forward by one, removing means
// moving `bottom` forward by one. After reaching the end, the queue
// wraps around.
// When `top === bottom` the current queue is empty and when
// `top + 1 === bottom` it's full. This wastes a single space of storage
// but allows much quicker checks.
const FixedCircularBuffer = class FixedCircularBuffer {
  constructor() {
    this.bottom = 0;
    this.top = 0;
    this.list = new Array(kSize);
    this.next = null;
  isEmpty() {
    return this.top === this.bottom;
  isFull() {
    return ((this.top + 1) & kMask) === this.bottom;
  push(data) {
    this.list[this.top] = data;
    this.top = (this.top + 1) & kMask;
  shift() {
    const nextItem = this.list[this.bottom];
    if (nextItem === undefined)
      return null;
    this.list[this.bottom] = undefined;
    this.bottom = (this.bottom + 1) & kMask;
    return nextItem;
module.exports = class FixedQueue {
  constructor() {
    this.head = this.tail = new FixedCircularBuffer();
  isEmpty() {
    return this.head.isEmpty();
  push(data) {
    if (this.head.isFull()) {
      // Head is full: Creates a new queue, sets the old queue's `.next` to it,
      // and sets it as the new main queue.
      this.head = this.head.next = new FixedCircularBuffer();
    }
    this.head.push(data);
  shift() {
    const { tail } = this;
    const next = tail.shift();
    if (tail.isEmpty() && tail.next !== null) {
      // If there is another queue, it forms the new tail.
      this.tail = tail.next;
    }
    return next;
'use strict';
const { Reflect } = primordials;
class FreeList {
  constructor(name, max, ctor) {
    this.name = name;
    this.ctor = ctor;
    this.max = max;
    this.list = [];
  hasItems() {
    return this.list.length > 0;
  alloc() {
    return this.list.length > 0 ?
      this.list.pop() :
      Reflect.apply(this.ctor, this, arguments);
  free(obj) {
    if (this.list.length < this.max) {
      this.list.push(obj);
      return true;
    }
    return false;
module.exports = FreeList;
// Adapted from SES/Caja - Copyright (C) 2011 Google Inc.
// Copyright (C) 2018 Agoric
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// SPDX-License-Identifier: Apache-2.0
// Based upon:
// https://github.com/google/caja/blob/master/src/com/google/caja/ses/startSES.js
// https://github.com/google/caja/blob/master/src/com/google/caja/ses/repairES5.js
// https://github.com/tc39/proposal-ses/blob/e5271cc42a257a05dcae2fd94713ed2f46c08620/shim/src/freeze.js
/* global WebAssembly, SharedArrayBuffer, console */
/* eslint-disable no-restricted-globals */
'use strict';
module.exports = function() {
  const {
    defineProperty,
    freeze,
    getOwnPropertyDescriptor,
    getOwnPropertyDescriptors,
    getOwnPropertyNames,
    getOwnPropertySymbols,
    getPrototypeOf
  } = Object;
  const objectHasOwnProperty = Object.prototype.hasOwnProperty;
  const { ownKeys } = Reflect;
  const {
    clearImmediate,
    clearInterval,
    clearTimeout,
    setImmediate,
    setInterval,
    setTimeout
  } = require('timers');
  const intrinsicPrototypes = [
    // Anonymous Intrinsics
    // IteratorPrototype
    getPrototypeOf(
      getPrototypeOf(new Array()[Symbol.iterator]())
    ),
    // ArrayIteratorPrototype
    getPrototypeOf(new Array()[Symbol.iterator]()),
    // StringIteratorPrototype
    getPrototypeOf(new String()[Symbol.iterator]()),
    // MapIteratorPrototype
    getPrototypeOf(new Map()[Symbol.iterator]()),
    // SetIteratorPrototype
    getPrototypeOf(new Set()[Symbol.iterator]()),
    // GeneratorFunction
    getPrototypeOf(function* () {}),
    // AsyncFunction
    getPrototypeOf(async function() {}),
    // AsyncGeneratorFunction
    getPrototypeOf(async function* () {}),
    // TypedArray
    getPrototypeOf(Uint8Array),
    // 19 Fundamental Objects
    Object.prototype, // 19.1
    Function.prototype, // 19.2
    Boolean.prototype, // 19.3
    Error.prototype, // 19.5
    EvalError.prototype,
    RangeError.prototype,
    ReferenceError.prototype,
    SyntaxError.prototype,
    TypeError.prototype,
    URIError.prototype,
    // 20 Numbers and Dates
    Number.prototype, // 20.1
    Date.prototype, // 20.3
    // 21 Text Processing
    String.prototype, // 21.1
    RegExp.prototype, // 21.2
    // 22 Indexed Collections
    Array.prototype, // 22.1
    Int8Array.prototype,
    Uint8Array.prototype,
    Uint8ClampedArray.prototype,
    Int16Array.prototype,
    Uint16Array.prototype,
    Int32Array.prototype,
    Uint32Array.prototype,
    Float32Array.prototype,
    Float64Array.prototype,
    BigInt64Array.prototype,
    BigUint64Array.prototype,
    // 23 Keyed Collections
    Map.prototype, // 23.1
    Set.prototype, // 23.2
    WeakMap.prototype, // 23.3
    WeakSet.prototype, // 23.4
    // 24 Structured Data
    ArrayBuffer.prototype, // 24.1
    DataView.prototype, // 24.3
    Promise.prototype, // 25.4
    // Other APIs / Web Compatibility
    console.Console.prototype,
    BigInt.prototype,
    WebAssembly.Module.prototype,
    WebAssembly.Instance.prototype,
    WebAssembly.Table.prototype,
    WebAssembly.Memory.prototype,
    WebAssembly.CompileError.prototype,
    WebAssembly.LinkError.prototype,
    WebAssembly.RuntimeError.prototype,
    SharedArrayBuffer.prototype
  ];
  const intrinsics = [
    // Anonymous Intrinsics
    // ThrowTypeError
    getOwnPropertyDescriptor(Function.prototype, 'caller').get,
    // IteratorPrototype
    getPrototypeOf(
      getPrototypeOf(new Array()[Symbol.iterator]())
    ),
    // ArrayIteratorPrototype
    getPrototypeOf(new Array()[Symbol.iterator]()),
    // StringIteratorPrototype
    getPrototypeOf(new String()[Symbol.iterator]()),
    // MapIteratorPrototype
    getPrototypeOf(new Map()[Symbol.iterator]()),
    // SetIteratorPrototype
    getPrototypeOf(new Set()[Symbol.iterator]()),
    // GeneratorFunction
    getPrototypeOf(function* () {}),
    // AsyncFunction
    getPrototypeOf(async function() {}),
    // AsyncGeneratorFunction
    getPrototypeOf(async function* () {}),
    // TypedArray
    getPrototypeOf(Uint8Array),
    // 18 The Global Object
    eval,
    isFinite,
    isNaN,
    parseFloat,
    parseInt,
    decodeURI,
    decodeURIComponent,
    encodeURI,
    encodeURIComponent,
    // 19 Fundamental Objects
    Object, // 19.1
    Function, // 19.2
    Boolean, // 19.3
    Symbol, // 19.4
    Error, // 19.5
    EvalError,
    RangeError,
    ReferenceError,
    SyntaxError,
    TypeError,
    URIError,
    // 20 Numbers and Dates
    Number, // 20.1
    Math, // 20.2
    Date, // 20.3
    // 21 Text Processing
    String, // 21.1
    RegExp, // 21.2
    // 22 Indexed Collections
    Array, // 22.1
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array,
    BigInt64Array,
    BigUint64Array,
    // 23 Keyed Collections
    Map, // 23.1
    Set, // 23.2
    WeakMap, // 23.3
    WeakSet, // 23.4
    // 24 Structured Data
    ArrayBuffer, // 24.1
    DataView, // 24.3
    JSON, // 24.5
    Promise, // 25.4
    // 26 Reflection
    Reflect, // 26.1
    Proxy, // 26.2
    // B.2.1
    escape,
    unescape,
    // Other APIs / Web Compatibility
    clearImmediate,
    clearInterval,
    clearTimeout,
    setImmediate,
    setInterval,
    setTimeout,
    console,
    BigInt,
    Atomics,
    WebAssembly,
    SharedArrayBuffer
  ];
  if (typeof Intl !== 'undefined') {
    intrinsicPrototypes.push(Intl.Collator.prototype);
    intrinsicPrototypes.push(Intl.DateTimeFormat.prototype);
    intrinsicPrototypes.push(Intl.ListFormat.prototype);
    intrinsicPrototypes.push(Intl.NumberFormat.prototype);
    intrinsicPrototypes.push(Intl.PluralRules.prototype);
    intrinsicPrototypes.push(Intl.RelativeTimeFormat.prototype);
    intrinsics.push(Intl);
  intrinsicPrototypes.forEach(enableDerivedOverrides);
  const frozenSet = new WeakSet();
  intrinsics.forEach(deepFreeze);
  // Objects that are deeply frozen.
  function deepFreeze(root) {
    /**
     * "innerDeepFreeze()" acts like "Object.freeze()", except that:
     *
     * To deepFreeze an object is to freeze it and all objects transitively
     * reachable from it via transitive reflective property and prototype
     * traversal.
     */
    function innerDeepFreeze(node) {
      // Objects that we have frozen in this round.
      const freezingSet = new Set();
      // If val is something we should be freezing but aren't yet,
      // add it to freezingSet.
      function enqueue(val) {
        if (Object(val) !== val) {
          // ignore primitives
          return;
        }
        const type = typeof val;
        if (type !== 'object' && type !== 'function') {
          // NB: handle for any new cases in future
        }
        if (frozenSet.has(val) || freezingSet.has(val)) {
          // TODO: Use uncurried form
          // Ignore if already frozen or freezing
          return;
        }
        freezingSet.add(val); // TODO: Use uncurried form
      }
      function doFreeze(obj) {
        // Immediately freeze the object to ensure reactive
        // objects such as proxies won't add properties
        // during traversal, before they get frozen.
        // Object are verified before being enqueued,
        // therefore this is a valid candidate.
        // Throws if this fails (strict mode).
        freeze(obj);
        // We rely upon certain commitments of Object.freeze and proxies here
        // Get stable/immutable outbound links before a Proxy has a chance to do
        // something sneaky.
        const proto = getPrototypeOf(obj);
        const descs = getOwnPropertyDescriptors(obj);
        enqueue(proto);
        ownKeys(descs).forEach((name) => {
          // TODO: Uncurried form
          // TODO: getOwnPropertyDescriptors is guaranteed to return well-formed
          // descriptors, but they still inherit from Object.prototype. If
          // someone has poisoned Object.prototype to add 'value' or 'get'
          // properties, then a simple 'if ("value" in desc)' or 'desc.value'
          // test could be confused. We use hasOwnProperty to be sure about
          // whether 'value' is present or not, which tells us for sure that
          // this is a data property.
          const desc = descs[name];
          if ('value' in desc) {
            // todo uncurried form
            enqueue(desc.value);
          } else {
            enqueue(desc.get);
            enqueue(desc.set);
          }
        });
      }
      function dequeue() {
        // New values added before forEach() has finished will be visited.
        freezingSet.forEach(doFreeze); // TODO: Curried forEach
      }
      function commit() {
        // TODO: Curried forEach
        // We capture the real WeakSet.prototype.add above, in case someone
        // changes it. The two-argument form of forEach passes the second
        // argument as the 'this' binding, so we add to the correct set.
        freezingSet.forEach(frozenSet.add, frozenSet);
      }
      enqueue(node);
      dequeue();
      commit();
    }
    innerDeepFreeze(root);
    return root;
  /**
   * For a special set of properties (defined below), it ensures that the
   * effect of freezing does not suppress the ability to override these
   * properties on derived objects by simple assignment.
   *
   * Because of lack of sufficient foresight at the time, ES5 unfortunately
   * specified that a simple assignment to a non-existent property must fail if
   * it would override a non-writable data property of the same name. (In
   * retrospect, this was a mistake, but it is now too late and we must live
   * with the consequences.) As a result, simply freezing an object to make it
   * tamper proof has the unfortunate side effect of breaking previously correct
   * code that is considered to have followed JS best practices, if this
   * previous code used assignment to override.
   *
   * To work around this mistake, deepFreeze(), prior to freezing, replaces
   * selected configurable own data properties with accessor properties which
   * simulate what we should have specified -- that assignments to derived
   * objects succeed if otherwise possible.
   */
  function enableDerivedOverride(obj, prop, desc) {
    if ('value' in desc && desc.configurable) {
      const value = desc.value;
      function getter() {
        return value;
      }
      // Re-attach the data property on the object so
      // it can be found by the deep-freeze traversal process.
      getter.value = value;
      function setter(newValue) {
        if (obj === this) {
          // eslint-disable-next-line no-restricted-syntax
          throw new TypeError(
            `Cannot assign to read only property '${prop}' of object '${obj}'`
          );
        }
        if (objectHasOwnProperty.call(this, prop)) {
          this[prop] = newValue;
        } else {
          defineProperty(this, prop, {
            value: newValue,
            writable: true,
            enumerable: desc.enumerable,
            configurable: desc.configurable
          });
        }
      }
      defineProperty(obj, prop, {
        get: getter,
        set: setter,
        enumerable: desc.enumerable,
        configurable: desc.configurable
      });
    }
  function enableDerivedOverrides(obj) {
    if (!obj) {
      return;
    }
    const descs = getOwnPropertyDescriptors(obj);
    if (!descs) {
      return;
    }
    getOwnPropertyNames(obj).forEach((prop) => {
      return enableDerivedOverride(obj, prop, descs[prop]);
    });
    getOwnPropertySymbols(obj).forEach((prop) => {
      return enableDerivedOverride(obj, prop, descs[prop]);
    });
'use strict';
const { Math } = primordials;
const {
  F_OK,
  O_SYMLINK,
  O_WRONLY,
  S_IFMT,
  S_IFREG
} = internalBinding('constants').fs;
const binding = internalBinding('fs');
const { Buffer, kMaxLength } = require('buffer');
const {
  ERR_FS_FILE_TOO_LARGE,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_ARG_VALUE,
  ERR_METHOD_NOT_IMPLEMENTED
} = require('internal/errors').codes;
const { isUint8Array } = require('internal/util/types');
const {
  copyObject,
  getDirents,
  getOptions,
  getStatsFromBinding,
  getValidatedPath,
  nullCheck,
  preprocessSymlinkDestination,
  stringToFlags,
  stringToSymlinkType,
  toUnixTimestamp,
  validateOffsetLengthRead,
  validateOffsetLengthWrite,
  warnOnNonPortableTemplate
} = require('internal/fs/utils');
const {
  parseMode,
  validateBuffer,
  validateInteger,
  validateUint32
} = require('internal/validators');
const pathModule = require('path');
const { promisify } = require('internal/util');
const kHandle = Symbol('handle');
const { kUsePromises } = binding;
const getDirectoryEntriesPromise = promisify(getDirents);
class FileHandle {
  constructor(filehandle) {
    this[kHandle] = filehandle;
  getAsyncId() {
    return this[kHandle].getAsyncId();
  get fd() {
    return this[kHandle].fd;
  appendFile(data, options) {
    return appendFile(this, data, options);
  chmod(mode) {
    return fchmod(this, mode);
  chown(uid, gid) {
    return fchown(this, uid, gid);
  datasync() {
    return fdatasync(this);
  sync() {
    return fsync(this);
  read(buffer, offset, length, position) {
    return read(this, buffer, offset, length, position);
  readFile(options) {
    return readFile(this, options);
  stat(options) {
    return fstat(this, options);
  truncate(len = 0) {
    return ftruncate(this, len);
  utimes(atime, mtime) {
    return futimes(this, atime, mtime);
  write(buffer, offset, length, position) {
    return write(this, buffer, offset, length, position);
  writeFile(data, options) {
    return writeFile(this, data, options);
  close() {
    return this[kHandle].close();
function validateFileHandle(handle) {
  if (!(handle instanceof FileHandle))
    throw new ERR_INVALID_ARG_TYPE('filehandle', 'FileHandle', handle);
async function writeFileHandle(filehandle, data, options) {
  let buffer = isUint8Array(data) ?
    data : Buffer.from('' + data, options.encoding || 'utf8');
  let remaining = buffer.length;
  if (remaining === 0) return;
  do {
    const { bytesWritten } =
      await write(filehandle, buffer, 0,
                  Math.min(16384, buffer.length));
    remaining -= bytesWritten;
    buffer = buffer.slice(bytesWritten);
  } while (remaining > 0);
// Note: This is different from kReadFileBufferLength used for non-promisified
// fs.readFile.
const kReadFileMaxChunkSize = 16384;
async function readFileHandle(filehandle, options) {
  const statFields = await binding.fstat(filehandle.fd, false, kUsePromises);
  let size;
  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {
    size = statFields[8/* size */];
  } else {
    size = 0;
  if (size > kMaxLength)
    throw new ERR_FS_FILE_TOO_LARGE(size);
  const chunks = [];
  const chunkSize = size === 0 ?
    kReadFileMaxChunkSize :
    Math.min(size, kReadFileMaxChunkSize);
  let endOfFile = false;
  do {
    const buf = Buffer.alloc(chunkSize);
    const { bytesRead, buffer } =
      await read(filehandle, buf, 0, chunkSize, -1);
    endOfFile = bytesRead === 0;
    if (bytesRead > 0)
      chunks.push(buffer.slice(0, bytesRead));
  } while (!endOfFile);
  const result = Buffer.concat(chunks);
  if (options.encoding) {
    return result.toString(options.encoding);
  } else {
    return result;
// All of the functions are defined as async in order to ensure that errors
// thrown cause promise rejections rather than being thrown synchronously.
async function access(path, mode = F_OK) {
  path = getValidatedPath(path);
  mode = mode | 0;
  return binding.access(pathModule.toNamespacedPath(path), mode,
                        kUsePromises);
async function copyFile(src, dest, flags) {
  src = getValidatedPath(src, 'src');
  dest = getValidatedPath(dest, 'dest');
  flags = flags | 0;
  return binding.copyFile(pathModule.toNamespacedPath(src),
                          pathModule.toNamespacedPath(dest),
                          flags, kUsePromises);
// Note that unlike fs.open() which uses numeric file descriptors,
// fsPromises.open() uses the fs.FileHandle class.
async function open(path, flags, mode) {
  path = getValidatedPath(path);
  if (arguments.length < 2) flags = 'r';
  const flagsNumber = stringToFlags(flags);
  mode = parseMode(mode, 'mode', 0o666);
  return new FileHandle(
    await binding.openFileHandle(pathModule.toNamespacedPath(path),
                                 flagsNumber, mode, kUsePromises));
async function read(handle, buffer, offset, length, position) {
  validateFileHandle(handle);
  validateBuffer(buffer);
  offset |= 0;
  length |= 0;
  if (length === 0)
    return { bytesRead: length, buffer };
  if (buffer.length === 0) {
    throw new ERR_INVALID_ARG_VALUE('buffer', buffer,
                                    'is empty and cannot be written');
  validateOffsetLengthRead(offset, length, buffer.length);
  if (!Number.isSafeInteger(position))
    position = -1;
  const bytesRead = (await binding.read(handle.fd, buffer, offset, length,
                                        position, kUsePromises)) || 0;
  return { bytesRead, buffer };
async function write(handle, buffer, offset, length, position) {
  validateFileHandle(handle);
  if (buffer.length === 0)
    return { bytesWritten: 0, buffer };
  if (isUint8Array(buffer)) {
    if (typeof offset !== 'number')
      offset = 0;
    if (typeof length !== 'number')
      length = buffer.length - offset;
    if (typeof position !== 'number')
      position = null;
    validateOffsetLengthWrite(offset, length, buffer.byteLength);
    const bytesWritten =
      (await binding.writeBuffer(handle.fd, buffer, offset,
                                 length, position, kUsePromises)) || 0;
    return { bytesWritten, buffer };
  if (typeof buffer !== 'string')
    buffer += '';
  const bytesWritten = (await binding.writeString(handle.fd, buffer, offset,
                                                  length, kUsePromises)) || 0;
  return { bytesWritten, buffer };
async function rename(oldPath, newPath) {
  oldPath = getValidatedPath(oldPath, 'oldPath');
  newPath = getValidatedPath(newPath, 'newPath');
  return binding.rename(pathModule.toNamespacedPath(oldPath),
                        pathModule.toNamespacedPath(newPath),
                        kUsePromises);
async function truncate(path, len = 0) {
  return ftruncate(await open(path, 'r+'), len);
async function ftruncate(handle, len = 0) {
  validateFileHandle(handle);
  validateInteger(len, 'len');
  len = Math.max(0, len);
  return binding.ftruncate(handle.fd, len, kUsePromises);
async function rmdir(path) {
  path = getValidatedPath(path);
  return binding.rmdir(pathModule.toNamespacedPath(path), kUsePromises);
async function fdatasync(handle) {
  validateFileHandle(handle);
  return binding.fdatasync(handle.fd, kUsePromises);
async function fsync(handle) {
  validateFileHandle(handle);
  return binding.fsync(handle.fd, kUsePromises);
async function mkdir(path, options) {
  if (typeof options === 'number' || typeof options === 'string') {
    options = { mode: options };
  const {
    recursive = false,
    mode = 0o777
  } = options || {};
  path = getValidatedPath(path);
  if (typeof recursive !== 'boolean')
    throw new ERR_INVALID_ARG_TYPE('recursive', 'boolean', recursive);
  return binding.mkdir(pathModule.toNamespacedPath(path),
                       parseMode(mode, 'mode', 0o777), recursive,
                       kUsePromises);
async function readdir(path, options) {
  options = getOptions(options, {});
  path = getValidatedPath(path);
  const result = await binding.readdir(pathModule.toNamespacedPath(path),
                                       options.encoding,
                                       !!options.withFileTypes,
                                       kUsePromises);
  return options.withFileTypes ?
    getDirectoryEntriesPromise(path, result) :
    result;
async function readlink(path, options) {
  options = getOptions(options, {});
  path = getValidatedPath(path, 'oldPath');
  return binding.readlink(pathModule.toNamespacedPath(path),
                          options.encoding, kUsePromises);
async function symlink(target, path, type_) {
  const type = (typeof type_ === 'string' ? type_ : null);
  target = getValidatedPath(target, 'target');
  path = getValidatedPath(path);
  return binding.symlink(preprocessSymlinkDestination(target, type, path),
                         pathModule.toNamespacedPath(path),
                         stringToSymlinkType(type),
                         kUsePromises);
async function fstat(handle, options = { bigint: false }) {
  validateFileHandle(handle);
  const result = await binding.fstat(handle.fd, options.bigint, kUsePromises);
  return getStatsFromBinding(result);
async function lstat(path, options = { bigint: false }) {
  path = getValidatedPath(path);
  const result = await binding.lstat(pathModule.toNamespacedPath(path),
                                     options.bigint, kUsePromises);
  return getStatsFromBinding(result);
async function stat(path, options = { bigint: false }) {
  path = getValidatedPath(path);
  const result = await binding.stat(pathModule.toNamespacedPath(path),
                                    options.bigint, kUsePromises);
  return getStatsFromBinding(result);
async function link(existingPath, newPath) {
  existingPath = getValidatedPath(existingPath, 'existingPath');
  newPath = getValidatedPath(newPath, 'newPath');
  return binding.link(pathModule.toNamespacedPath(existingPath),
                      pathModule.toNamespacedPath(newPath),
                      kUsePromises);
async function unlink(path) {
  path = getValidatedPath(path);
  return binding.unlink(pathModule.toNamespacedPath(path), kUsePromises);
async function fchmod(handle, mode) {
  validateFileHandle(handle);
  mode = parseMode(mode, 'mode');
  return binding.fchmod(handle.fd, mode, kUsePromises);
async function chmod(path, mode) {
  path = getValidatedPath(path);
  mode = parseMode(mode, 'mode');
  return binding.chmod(pathModule.toNamespacedPath(path), mode, kUsePromises);
async function lchmod(path, mode) {
  if (O_SYMLINK === undefined)
    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');
  const fd = await open(path, O_WRONLY | O_SYMLINK);
  return fchmod(fd, mode).finally(fd.close.bind(fd));
async function lchown(path, uid, gid) {
  path = getValidatedPath(path);
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  return binding.lchown(pathModule.toNamespacedPath(path),
                        uid, gid, kUsePromises);
async function fchown(handle, uid, gid) {
  validateFileHandle(handle);
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  return binding.fchown(handle.fd, uid, gid, kUsePromises);
async function chown(path, uid, gid) {
  path = getValidatedPath(path);
  validateUint32(uid, 'uid');
  validateUint32(gid, 'gid');
  return binding.chown(pathModule.toNamespacedPath(path),
                       uid, gid, kUsePromises);
async function utimes(path, atime, mtime) {
  path = getValidatedPath(path);
  return binding.utimes(pathModule.toNamespacedPath(path),
                        toUnixTimestamp(atime),
                        toUnixTimestamp(mtime),
                        kUsePromises);
async function futimes(handle, atime, mtime) {
  validateFileHandle(handle);
  atime = toUnixTimestamp(atime, 'atime');
  mtime = toUnixTimestamp(mtime, 'mtime');
  return binding.futimes(handle.fd, atime, mtime, kUsePromises);
async function realpath(path, options) {
  options = getOptions(options, {});
  path = getValidatedPath(path);
  return binding.realpath(path, options.encoding, kUsePromises);
async function mkdtemp(prefix, options) {
  options = getOptions(options, {});
  if (!prefix || typeof prefix !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('prefix', 'string', prefix);
  nullCheck(prefix);
  warnOnNonPortableTemplate(prefix);
  return binding.mkdtemp(`${prefix}XXXXXX`, options.encoding, kUsePromises);
async function writeFile(path, data, options) {
  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });
  const flag = options.flag || 'w';
  if (path instanceof FileHandle)
    return writeFileHandle(path, data, options);
  const fd = await open(path, flag, options.mode);
  return writeFileHandle(fd, data, options).finally(fd.close.bind(fd));
async function appendFile(path, data, options) {
  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'a' });
  options = copyObject(options);
  options.flag = options.flag || 'a';
  return writeFile(path, data, options);
async function readFile(path, options) {
  options = getOptions(options, { flag: 'r' });
  const flag = options.flag || 'r';
  if (path instanceof FileHandle)
    return readFileHandle(path, options);
  const fd = await open(path, flag, 0o666);
  return readFileHandle(fd, options).finally(fd.close.bind(fd));
module.exports = {
  access,
  copyFile,
  open,
  rename,
  truncate,
  rmdir,
  mkdir,
  readdir,
  readlink,
  symlink,
  lstat,
  stat,
  link,
  unlink,
  chmod,
  lchmod,
  lchown,
  chown,
  utimes,
  realpath,
  mkdtemp,
  writeFile,
  appendFile,
  readFile
'use strict';
const { Math } = primordials;
const { Buffer } = require('buffer');
const { FSReqCallback, close, read } = internalBinding('fs');
// Use 64kb in case the file type is not a regular file and thus do not know the
// actual file size. Increasing the value further results in more frequent over
// allocation for small files and consumes CPU time and memory that should be
// used else wise.
// Use up to 512kb per read otherwise to partition reading big files to prevent
// blocking other threads in case the available threads are all in use.
const kReadFileUnknownBufferLength = 64 * 1024;
const kReadFileBufferLength = 512 * 1024;
function readFileAfterRead(err, bytesRead) {
  const context = this.context;
  if (err)
    return context.close(err);
  context.pos += bytesRead;
  if (context.pos === context.size || bytesRead === 0) {
    context.close();
  } else {
    if (context.size === 0) {
      // Unknown size, just read until we don't get bytes.
      const buffer = bytesRead === kReadFileUnknownBufferLength ?
        context.buffer : context.buffer.slice(0, bytesRead);
      context.buffers.push(buffer);
    }
    context.read();
function readFileAfterClose(err) {
  const context = this.context;
  const callback = context.callback;
  let buffer = null;
  if (context.err || err)
    return callback(context.err || err);
  try {
    if (context.size === 0)
      buffer = Buffer.concat(context.buffers, context.pos);
    else if (context.pos < context.size)
      buffer = context.buffer.slice(0, context.pos);
    else
      buffer = context.buffer;
    if (context.encoding)
      buffer = buffer.toString(context.encoding);
  } catch (err) {
    return callback(err);
  callback(null, buffer);
class ReadFileContext {
  constructor(callback, encoding) {
    this.fd = undefined;
    this.isUserFd = undefined;
    this.size = 0;
    this.callback = callback;
    this.buffers = null;
    this.buffer = null;
    this.pos = 0;
    this.encoding = encoding;
    this.err = null;
  read() {
    let buffer;
    let offset;
    let length;
    if (this.size === 0) {
      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);
      offset = 0;
      length = kReadFileUnknownBufferLength;
      this.buffer = buffer;
    } else {
      buffer = this.buffer;
      offset = this.pos;
      length = Math.min(kReadFileBufferLength, this.size - this.pos);
    }
    const req = new FSReqCallback();
    req.oncomplete = readFileAfterRead;
    req.context = this;
    read(this.fd, buffer, offset, length, -1, req);
  close(err) {
    const req = new FSReqCallback();
    req.oncomplete = readFileAfterClose;
    req.context = this;
    this.err = err;
    if (this.isUserFd) {
      process.nextTick(function tick() {
        req.oncomplete(null);
      });
      return;
    }
    close(this.fd, req);
module.exports = ReadFileContext;
'use strict';
const { Math, Object } = primordials;
const {
  FSReqCallback,
  writeBuffers
} = internalBinding('fs');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_OUT_OF_RANGE
} = require('internal/errors').codes;
const { validateNumber } = require('internal/validators');
const fs = require('fs');
const { Buffer } = require('buffer');
const {
  copyObject,
  getOptions,
} = require('internal/fs/utils');
const { Readable, Writable } = require('stream');
const { toPathIfFileURL } = require('internal/url');
const kMinPoolSpace = 128;
let pool;
// It can happen that we expect to read a large chunk of data, and reserve
// a large chunk of the pool accordingly, but the read() call only filled
// a portion of it. If a concurrently executing read() then uses the same pool,
// the "reserved" portion cannot be used, so we allow it to be re-used as a
// new pool later.
const poolFragments = [];
function allocNewPool(poolSize) {
  if (poolFragments.length > 0)
    pool = poolFragments.pop();
  else
    pool = Buffer.allocUnsafe(poolSize);
  pool.used = 0;
// Check the `this.start` and `this.end` of stream.
function checkPosition(pos, name) {
  if (!Number.isSafeInteger(pos)) {
    validateNumber(pos, name);
    if (!Number.isInteger(pos))
      throw new ERR_OUT_OF_RANGE(name, 'an integer', pos);
    throw new ERR_OUT_OF_RANGE(name, '>= 0 and <= 2 ** 53 - 1', pos);
  if (pos < 0) {
    throw new ERR_OUT_OF_RANGE(name, '>= 0 and <= 2 ** 53 - 1', pos);
function roundUpToMultipleOf8(n) {
  return (n + 7) & ~7;  // Align to 8 byte boundary.
function ReadStream(path, options) {
  if (!(this instanceof ReadStream))
    return new ReadStream(path, options);
  // A little bit bigger buffer and water marks by default
  options = copyObject(getOptions(options, {}));
  if (options.highWaterMark === undefined)
    options.highWaterMark = 64 * 1024;
  // For backwards compat do not emit close on destroy.
  options.emitClose = false;
  Readable.call(this, options);
  // Path will be ignored when fd is specified, so it can be falsy
  this.path = toPathIfFileURL(path);
  this.fd = options.fd === undefined ? null : options.fd;
  this.flags = options.flags === undefined ? 'r' : options.flags;
  this.mode = options.mode === undefined ? 0o666 : options.mode;
  this.start = options.start;
  this.end = options.end;
  this.autoClose = options.autoClose === undefined ? true : options.autoClose;
  this.pos = undefined;
  this.bytesRead = 0;
  this.closed = false;
  if (this.start !== undefined) {
    checkPosition(this.start, 'start');
    this.pos = this.start;
  if (this.end === undefined) {
    this.end = Infinity;
  } else if (this.end !== Infinity) {
    checkPosition(this.end, 'end');
    if (this.start !== undefined && this.start > this.end) {
      throw new ERR_OUT_OF_RANGE(
        'start',
        `<= "end" (here: ${this.end})`,
        this.start
      );
    }
  if (typeof this.fd !== 'number')
    this.open();
  this.on('end', function() {
    if (this.autoClose) {
      this.destroy();
    }
  });
Object.setPrototypeOf(ReadStream.prototype, Readable.prototype);
Object.setPrototypeOf(ReadStream, Readable);
ReadStream.prototype.open = function() {
  fs.open(this.path, this.flags, this.mode, (er, fd) => {
    if (er) {
      if (this.autoClose) {
        this.destroy();
      }
      this.emit('error', er);
      return;
    }
    this.fd = fd;
    this.emit('open', fd);
    this.emit('ready');
    // Start the flow of data.
    this.read();
  });
ReadStream.prototype._read = function(n) {
  if (typeof this.fd !== 'number') {
    return this.once('open', function() {
      this._read(n);
    });
  if (this.destroyed)
    return;
  if (!pool || pool.length - pool.used < kMinPoolSpace) {
    // Discard the old pool.
    allocNewPool(this.readableHighWaterMark);
  // Grab another reference to the pool in the case that while we're
  // in the thread pool another read() finishes up the pool, and
  // allocates a new one.
  const thisPool = pool;
  let toRead = Math.min(pool.length - pool.used, n);
  const start = pool.used;
  if (this.pos !== undefined)
    toRead = Math.min(this.end - this.pos + 1, toRead);
  else
    toRead = Math.min(this.end - this.bytesRead + 1, toRead);
  // Already read everything we were supposed to read!
  // treat as EOF.
  if (toRead <= 0)
    return this.push(null);
  // the actual read.
  fs.read(this.fd, pool, pool.used, toRead, this.pos, (er, bytesRead) => {
    if (er) {
      if (this.autoClose) {
        this.destroy();
      }
      this.emit('error', er);
    } else {
      let b = null;
      // Now that we know how much data we have actually read, re-wind the
      // 'used' field if we can, and otherwise allow the remainder of our
      // reservation to be used as a new pool later.
      if (start + toRead === thisPool.used && thisPool === pool) {
        const newUsed = thisPool.used + bytesRead - toRead;
        thisPool.used = roundUpToMultipleOf8(newUsed);
      } else {
        // Round down to the next lowest multiple of 8 to ensure the new pool
        // fragment start and end positions are aligned to an 8 byte boundary.
        const alignedEnd = (start + toRead) & ~7;
        const alignedStart = roundUpToMultipleOf8(start + bytesRead);
        if (alignedEnd - alignedStart >= kMinPoolSpace) {
          poolFragments.push(thisPool.slice(alignedStart, alignedEnd));
        }
      }
      if (bytesRead > 0) {
        this.bytesRead += bytesRead;
        b = thisPool.slice(start, start + bytesRead);
      }
      this.push(b);
    }
  });
  // Move the pool positions, and internal position for reading.
  if (this.pos !== undefined)
    this.pos += toRead;
  pool.used = roundUpToMultipleOf8(pool.used + toRead);
ReadStream.prototype._destroy = function(err, cb) {
  if (typeof this.fd !== 'number') {
    this.once('open', closeFsStream.bind(null, this, cb, err));
    return;
  closeFsStream(this, cb, err);
  this.fd = null;
function closeFsStream(stream, cb, err) {
  fs.close(stream.fd, (er) => {
    er = er || err;
    cb(er);
    stream.closed = true;
    if (!er)
      stream.emit('close');
  });
ReadStream.prototype.close = function(cb) {
  this.destroy(null, cb);
Object.defineProperty(ReadStream.prototype, 'pending', {
  get() { return this.fd === null; },
  configurable: true
function WriteStream(path, options) {
  if (!(this instanceof WriteStream))
    return new WriteStream(path, options);
  options = copyObject(getOptions(options, {}));
  // For backwards compat do not emit close on destroy.
  options.emitClose = false;
  Writable.call(this, options);
  // Path will be ignored when fd is specified, so it can be falsy
  this.path = toPathIfFileURL(path);
  this.fd = options.fd === undefined ? null : options.fd;
  this.flags = options.flags === undefined ? 'w' : options.flags;
  this.mode = options.mode === undefined ? 0o666 : options.mode;
  this.start = options.start;
  this.autoClose = options.autoClose === undefined ? true : !!options.autoClose;
  this.pos = undefined;
  this.bytesWritten = 0;
  this.closed = false;
  if (this.start !== undefined) {
    checkPosition(this.start, 'start');
    this.pos = this.start;
  if (options.encoding)
    this.setDefaultEncoding(options.encoding);
  if (typeof this.fd !== 'number')
    this.open();
Object.setPrototypeOf(WriteStream.prototype, Writable.prototype);
Object.setPrototypeOf(WriteStream, Writable);
WriteStream.prototype._final = function(callback) {
  if (this.autoClose) {
    this.destroy();
  callback();
WriteStream.prototype.open = function() {
  fs.open(this.path, this.flags, this.mode, (er, fd) => {
    if (er) {
      if (this.autoClose) {
        this.destroy();
      }
      this.emit('error', er);
      return;
    }
    this.fd = fd;
    this.emit('open', fd);
    this.emit('ready');
  });
WriteStream.prototype._write = function(data, encoding, cb) {
  if (!(data instanceof Buffer)) {
    const err = new ERR_INVALID_ARG_TYPE('data', 'Buffer', data);
    return this.emit('error', err);
  if (typeof this.fd !== 'number') {
    return this.once('open', function() {
      this._write(data, encoding, cb);
    });
  fs.write(this.fd, data, 0, data.length, this.pos, (er, bytes) => {
    if (er) {
      if (this.autoClose) {
        this.destroy();
      }
      return cb(er);
    }
    this.bytesWritten += bytes;
    cb();
  });
  if (this.pos !== undefined)
    this.pos += data.length;
function writev(fd, chunks, position, callback) {
  function wrapper(err, written) {
    // Retain a reference to chunks so that they can't be GC'ed too soon.
    callback(err, written || 0, chunks);
  const req = new FSReqCallback();
  req.oncomplete = wrapper;
  writeBuffers(fd, chunks, position, req);
WriteStream.prototype._writev = function(data, cb) {
  if (typeof this.fd !== 'number') {
    return this.once('open', function() {
      this._writev(data, cb);
    });
  const self = this;
  const len = data.length;
  const chunks = new Array(len);
  let size = 0;
  for (var i = 0; i < len; i++) {
    const chunk = data[i].chunk;
    chunks[i] = chunk;
    size += chunk.length;
  writev(this.fd, chunks, this.pos, function(er, bytes) {
    if (er) {
      self.destroy();
      return cb(er);
    }
    self.bytesWritten += bytes;
    cb();
  });
  if (this.pos !== undefined)
    this.pos += size;
WriteStream.prototype._destroy = ReadStream.prototype._destroy;
WriteStream.prototype.close = function(cb) {
  if (cb) {
    if (this.closed) {
      process.nextTick(cb);
      return;
    } else {
      this.on('close', cb);
    }
  // If we are not autoClosing, we should call
  // destroy on 'finish'.
  if (!this.autoClose) {
    this.on('finish', this.destroy.bind(this));
  // We use end() instead of destroy() because of
  // https://github.com/nodejs/node/issues/2006
  this.end();
// There is no shutdown() for files.
WriteStream.prototype.destroySoon = WriteStream.prototype.end;
Object.defineProperty(WriteStream.prototype, 'pending', {
  get() { return this.fd === null; },
  configurable: true
module.exports = {
  ReadStream,
  WriteStream
'use strict';
const { Object } = primordials;
const { Writable } = require('stream');
const { closeSync, writeSync } = require('fs');
function SyncWriteStream(fd, options) {
  Writable.call(this, { autoDestroy: true });
  options = options || {};
  this.fd = fd;
  this.readable = false;
  this.autoClose = options.autoClose === undefined ? true : options.autoClose;
Object.setPrototypeOf(SyncWriteStream.prototype, Writable.prototype);
Object.setPrototypeOf(SyncWriteStream, Writable);
SyncWriteStream.prototype._write = function(chunk, encoding, cb) {
  writeSync(this.fd, chunk, 0, chunk.length);
  cb();
  return true;
SyncWriteStream.prototype._destroy = function(err, cb) {
  if (this.fd === null) // already destroy()ed
    return cb(err);
  if (this.autoClose)
    closeSync(this.fd);
  this.fd = null;
  cb(err);
SyncWriteStream.prototype.destroySoon =
  SyncWriteStream.prototype.destroy;
module.exports = SyncWriteStream;
'use strict';
const { Reflect } = primordials;
const { Buffer, kMaxLength } = require('buffer');
const {
  codes: {
    ERR_FS_INVALID_SYMLINK_TYPE,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_ARG_VALUE,
    ERR_INVALID_OPT_VALUE,
    ERR_INVALID_OPT_VALUE_ENCODING,
    ERR_OUT_OF_RANGE
  },
  hideStackFrames
} = require('internal/errors');
const {
  isUint8Array,
  isDate
} = require('internal/util/types');
const { once } = require('internal/util');
const { toPathIfFileURL } = require('internal/url');
const pathModule = require('path');
const kType = Symbol('type');
const kStats = Symbol('stats');
const {
  O_APPEND,
  O_CREAT,
  O_EXCL,
  O_RDONLY,
  O_RDWR,
  O_SYNC,
  O_TRUNC,
  O_WRONLY,
  S_IFBLK,
  S_IFCHR,
  S_IFDIR,
  S_IFIFO,
  S_IFLNK,
  S_IFMT,
  S_IFREG,
  S_IFSOCK,
  UV_FS_SYMLINK_DIR,
  UV_FS_SYMLINK_JUNCTION,
  UV_DIRENT_UNKNOWN,
  UV_DIRENT_FILE,
  UV_DIRENT_DIR,
  UV_DIRENT_LINK,
  UV_DIRENT_FIFO,
  UV_DIRENT_SOCKET,
  UV_DIRENT_CHAR,
  UV_DIRENT_BLOCK
} = internalBinding('constants').fs;
const isWindows = process.platform === 'win32';
let fs;
function lazyLoadFs() {
  if (!fs) {
    fs = require('fs');
  return fs;
function assertEncoding(encoding) {
  if (encoding && !Buffer.isEncoding(encoding)) {
    throw new ERR_INVALID_OPT_VALUE_ENCODING(encoding);
class Dirent {
  constructor(name, type) {
    this.name = name;
    this[kType] = type;
  isDirectory() {
    return this[kType] === UV_DIRENT_DIR;
  isFile() {
    return this[kType] === UV_DIRENT_FILE;
  isBlockDevice() {
    return this[kType] === UV_DIRENT_BLOCK;
  isCharacterDevice() {
    return this[kType] === UV_DIRENT_CHAR;
  isSymbolicLink() {
    return this[kType] === UV_DIRENT_LINK;
  isFIFO() {
    return this[kType] === UV_DIRENT_FIFO;
  isSocket() {
    return this[kType] === UV_DIRENT_SOCKET;
class DirentFromStats extends Dirent {
  constructor(name, stats) {
    super(name, null);
    this[kStats] = stats;
for (const name of Reflect.ownKeys(Dirent.prototype)) {
  if (name === 'constructor') {
    continue;
  DirentFromStats.prototype[name] = function() {
    return this[kStats][name]();
  };
function copyObject(source) {
  const target = {};
  for (const key in source)
    target[key] = source[key];
  return target;
function getDirents(path, [names, types], callback) {
  let i;
  if (typeof callback === 'function') {
    const len = names.length;
    let toFinish = 0;
    callback = once(callback);
    for (i = 0; i < len; i++) {
      const type = types[i];
      if (type === UV_DIRENT_UNKNOWN) {
        const name = names[i];
        const idx = i;
        toFinish++;
        lazyLoadFs().lstat(pathModule.join(path, name), (err, stats) => {
          if (err) {
            callback(err);
            return;
          }
          names[idx] = new DirentFromStats(name, stats);
          if (--toFinish === 0) {
            callback(null, names);
          }
        });
      } else {
        names[i] = new Dirent(names[i], types[i]);
      }
    }
    if (toFinish === 0) {
      callback(null, names);
    }
  } else {
    const len = names.length;
    for (i = 0; i < len; i++) {
      const type = types[i];
      if (type === UV_DIRENT_UNKNOWN) {
        const name = names[i];
        const stats = lazyLoadFs().lstatSync(pathModule.join(path, name));
        names[i] = new DirentFromStats(name, stats);
      } else {
        names[i] = new Dirent(names[i], types[i]);
      }
    }
    return names;
function getOptions(options, defaultOptions) {
  if (options === null || options === undefined ||
      typeof options === 'function') {
    return defaultOptions;
  if (typeof options === 'string') {
    defaultOptions = { ...defaultOptions };
    defaultOptions.encoding = options;
    options = defaultOptions;
  } else if (typeof options !== 'object') {
    throw new ERR_INVALID_ARG_TYPE('options', ['string', 'Object'], options);
  if (options.encoding !== 'buffer')
    assertEncoding(options.encoding);
  return options;
// Check if the path contains null types if it is a string nor Uint8Array,
// otherwise return silently.
const nullCheck = hideStackFrames((path, propName, throwError = true) => {
  const pathIsString = typeof path === 'string';
  const pathIsUint8Array = isUint8Array(path);
  // We can only perform meaningful checks on strings and Uint8Arrays.
  if (!pathIsString && !pathIsUint8Array ||
      pathIsString && !path.includes('\u0000') ||
      pathIsUint8Array && !path.includes(0)) {
    return;
  const err = new ERR_INVALID_ARG_VALUE(
    propName,
    path,
    'must be a string or Uint8Array without null bytes'
  );
  if (throwError) {
    throw err;
  return err;
function preprocessSymlinkDestination(path, type, linkPath) {
  if (!isWindows) {
    // No preprocessing is needed on Unix.
    return path;
  } else if (type === 'junction') {
    // Junctions paths need to be absolute and \\?\-prefixed.
    // A relative target is relative to the link's parent directory.
    path = pathModule.resolve(linkPath, '..', path);
    return pathModule.toNamespacedPath(path);
  } else {
    // Windows symlinks don't tolerate forward slashes.
    return ('' + path).replace(/\//g, '\\');
function dateFromNumeric(num) {
  return new Date(Number(num) + 0.5);
// Constructor for file stats.
function Stats(
  dev,
  mode,
  nlink,
  uid,
  gid,
  rdev,
  blksize,
  ino,
  size,
  blocks,
  atim_msec,
  mtim_msec,
  ctim_msec,
  birthtim_msec
  this.dev = dev;
  this.mode = mode;
  this.nlink = nlink;
  this.uid = uid;
  this.gid = gid;
  this.rdev = rdev;
  this.blksize = blksize;
  this.ino = ino;
  this.size = size;
  this.blocks = blocks;
  this.atimeMs = atim_msec;
  this.mtimeMs = mtim_msec;
  this.ctimeMs = ctim_msec;
  this.birthtimeMs = birthtim_msec;
  this.atime = dateFromNumeric(atim_msec);
  this.mtime = dateFromNumeric(mtim_msec);
  this.ctime = dateFromNumeric(ctim_msec);
  this.birthtime = dateFromNumeric(birthtim_msec);
Stats.prototype._checkModeProperty = function(property) {
  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||
    property === S_IFSOCK)) {
    return false;  // Some types are not available on Windows
  if (typeof this.mode === 'bigint') {
    return (this.mode & BigInt(S_IFMT)) === BigInt(property);
  return (this.mode & S_IFMT) === property;
Stats.prototype.isDirectory = function() {
  return this._checkModeProperty(S_IFDIR);
Stats.prototype.isFile = function() {
  return this._checkModeProperty(S_IFREG);
Stats.prototype.isBlockDevice = function() {
  return this._checkModeProperty(S_IFBLK);
Stats.prototype.isCharacterDevice = function() {
  return this._checkModeProperty(S_IFCHR);
Stats.prototype.isSymbolicLink = function() {
  return this._checkModeProperty(S_IFLNK);
Stats.prototype.isFIFO = function() {
  return this._checkModeProperty(S_IFIFO);
Stats.prototype.isSocket = function() {
  return this._checkModeProperty(S_IFSOCK);
function getStatsFromBinding(stats, offset = 0) {
  return new Stats(stats[0 + offset], stats[1 + offset], stats[2 + offset],
                   stats[3 + offset], stats[4 + offset], stats[5 + offset],
                   stats[6 + offset],  // blksize
                   stats[7 + offset], stats[8 + offset],
                   stats[9 + offset],  // blocks
                   stats[10 + offset], stats[11 + offset],
                   stats[12 + offset], stats[13 + offset]);
function stringToFlags(flags) {
  if (typeof flags === 'number') {
    return flags;
  switch (flags) {
    case 'r' : return O_RDONLY;
    case 'rs' : // Fall through.
    case 'sr' : return O_RDONLY | O_SYNC;
    case 'r+' : return O_RDWR;
    case 'rs+' : // Fall through.
    case 'sr+' : return O_RDWR | O_SYNC;
    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;
    case 'wx' : // Fall through.
    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;
    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;
    case 'wx+': // Fall through.
    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;
    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;
    case 'ax' : // Fall through.
    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;
    case 'as' : // Fall through.
    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;
    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;
    case 'ax+': // Fall through.
    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;
    case 'as+': // Fall through.
    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;
  throw new ERR_INVALID_OPT_VALUE('flags', flags);
const stringToSymlinkType = hideStackFrames((type) => {
  let flags = 0;
  if (typeof type === 'string') {
    switch (type) {
      case 'dir':
        flags |= UV_FS_SYMLINK_DIR;
        break;
      case 'junction':
        flags |= UV_FS_SYMLINK_JUNCTION;
        break;
      case 'file':
        break;
      default:
        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);
    }
  return flags;
// converts Date or number to a fractional UNIX timestamp
function toUnixTimestamp(time, name = 'time') {
  // eslint-disable-next-line eqeqeq
  if (typeof time === 'string' && +time == time) {
    return +time;
  if (Number.isFinite(time)) {
    if (time < 0) {
      return Date.now() / 1000;
    }
    return time;
  if (isDate(time)) {
    // Convert to 123.456 UNIX timestamp
    return time.getTime() / 1000;
  throw new ERR_INVALID_ARG_TYPE(name, ['Date', 'Time in seconds'], time);
const validateOffsetLengthRead = hideStackFrames(
  (offset, length, bufferLength) => {
    if (offset < 0 || offset >= bufferLength) {
      throw new ERR_OUT_OF_RANGE('offset',
                                 `>= 0 && <= ${bufferLength}`, offset);
    }
    if (length < 0 || offset + length > bufferLength) {
      throw new ERR_OUT_OF_RANGE('length',
                                 `>= 0 && <= ${bufferLength - offset}`, length);
    }
const validateOffsetLengthWrite = hideStackFrames(
  (offset, length, byteLength) => {
    if (offset > byteLength) {
      throw new ERR_OUT_OF_RANGE('offset', `<= ${byteLength}`, offset);
    }
    const max = byteLength > kMaxLength ? kMaxLength : byteLength;
    if (length > max - offset) {
      throw new ERR_OUT_OF_RANGE('length', `<= ${max - offset}`, length);
    }
const validatePath = hideStackFrames((path, propName = 'path') => {
  if (typeof path !== 'string' && !isUint8Array(path)) {
    throw new ERR_INVALID_ARG_TYPE(propName, ['string', 'Buffer', 'URL'], path);
  const err = nullCheck(path, propName, false);
  if (err !== undefined) {
    throw err;
const getValidatedPath = hideStackFrames((fileURLOrPath, propName = 'path') => {
  const path = toPathIfFileURL(fileURLOrPath);
  validatePath(path, propName);
  return path;
let nonPortableTemplateWarn = true;
function warnOnNonPortableTemplate(template) {
  // Template strings passed to the mkdtemp() family of functions should not
  // end with 'X' because they are handled inconsistently across platforms.
  if (nonPortableTemplateWarn && template.endsWith('X')) {
    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +
                        'For details see: https://nodejs.org/api/fs.html');
    nonPortableTemplateWarn = false;
module.exports = {
  assertEncoding,
  copyObject,
  Dirent,
  getDirents,
  getOptions,
  getValidatedPath,
  nullCheck,
  preprocessSymlinkDestination,
  realpathCacheKey: Symbol('realpathCacheKey'),
  getStatsFromBinding,
  stringToFlags,
  stringToSymlinkType,
  Stats,
  toUnixTimestamp,
  validateOffsetLengthRead,
  validateOffsetLengthWrite,
  validatePath,
  warnOnNonPortableTemplate
'use strict';
const { Object } = primordials;
const errors = require('internal/errors');
const {
  kFsStatsFieldsNumber,
  StatWatcher: _StatWatcher
} = internalBinding('fs');
const { FSEvent } = internalBinding('fs_event_wrap');
const { UV_ENOSPC } = internalBinding('uv');
const { EventEmitter } = require('events');
const {
  getStatsFromBinding,
  getValidatedPath
} = require('internal/fs/utils');
const {
  defaultTriggerAsyncIdScope,
  symbols: { owner_symbol }
} = require('internal/async_hooks');
const { toNamespacedPath } = require('path');
const { validateUint32 } = require('internal/validators');
const assert = require('internal/assert');
const kOldStatus = Symbol('kOldStatus');
const kUseBigint = Symbol('kUseBigint');
function emitStop(self) {
  self.emit('stop');
function StatWatcher(bigint) {
  EventEmitter.call(this);
  this._handle = null;
  this[kOldStatus] = -1;
  this[kUseBigint] = bigint;
Object.setPrototypeOf(StatWatcher.prototype, EventEmitter.prototype);
Object.setPrototypeOf(StatWatcher, EventEmitter);
function onchange(newStatus, stats) {
  const self = this[owner_symbol];
  if (self[kOldStatus] === -1 &&
      newStatus === -1 &&
      stats[2/* new nlink */] === stats[16/* old nlink */]) {
    return;
  self[kOldStatus] = newStatus;
  self.emit('change', getStatsFromBinding(stats),
            getStatsFromBinding(stats, kFsStatsFieldsNumber));
// FIXME(joyeecheung): this method is not documented.
// At the moment if filename is undefined, we
// 1. Throw an Error if it's the first time .start() is called
// 2. Return silently if .start() has already been called
//    on a valid filename and the wrap has been initialized
// This method is a noop if the watcher has already been started.
StatWatcher.prototype.start = function(filename, persistent, interval) {
  if (this._handle !== null)
    return;
  this._handle = new _StatWatcher(this[kUseBigint]);
  this._handle[owner_symbol] = this;
  this._handle.onchange = onchange;
  if (!persistent)
    this._handle.unref();
  // uv_fs_poll is a little more powerful than ev_stat but we curb it for
  // the sake of backwards compatibility
  this[kOldStatus] = -1;
  filename = getValidatedPath(filename, 'filename');
  validateUint32(interval, 'interval');
  const err = this._handle.start(toNamespacedPath(filename), interval);
  if (err) {
    const error = errors.uvException({
      errno: err,
      syscall: 'watch',
      path: filename
    });
    error.filename = filename;
    throw error;
// FIXME(joyeecheung): this method is not documented while there is
// another documented fs.unwatchFile(). The counterpart in
// FSWatcher is .close()
// This method is a noop if the watcher has not been started.
StatWatcher.prototype.stop = function() {
  if (this._handle === null)
    return;
  defaultTriggerAsyncIdScope(this._handle.getAsyncId(),
                             process.nextTick,
                             emitStop,
                             this);
  this._handle.close();
  this._handle = null;
function FSWatcher() {
  EventEmitter.call(this);
  this._handle = new FSEvent();
  this._handle[owner_symbol] = this;
  this._handle.onchange = (status, eventType, filename) => {
    // TODO(joyeecheung): we may check self._handle.initialized here
    // and return if that is false. This allows us to avoid firing the event
    // after the handle is closed, and to fire both UV_RENAME and UV_CHANGE
    // if they are set by libuv at the same time.
    if (status < 0) {
      if (this._handle !== null) {
        // We don't use this.close() here to avoid firing the close event.
        this._handle.close();
        this._handle = null;  // Make the handle garbage collectable
      }
      const error = errors.uvException({
        errno: status,
        syscall: 'watch',
        path: filename
      });
      error.filename = filename;
      this.emit('error', error);
    } else {
      this.emit('change', eventType, filename);
    }
  };
Object.setPrototypeOf(FSWatcher.prototype, EventEmitter.prototype);
Object.setPrototypeOf(FSWatcher, EventEmitter);
// FIXME(joyeecheung): this method is not documented.
// At the moment if filename is undefined, we
// 1. Throw an Error if it's the first time .start() is called
// 2. Return silently if .start() has already been called
//    on a valid filename and the wrap has been initialized
// 3. Return silently if the watcher has already been closed
// This method is a noop if the watcher has already been started.
FSWatcher.prototype.start = function(filename,
                                     persistent,
                                     recursive,
                                     encoding) {
  if (this._handle === null) {  // closed
    return;
  assert(this._handle instanceof FSEvent, 'handle must be a FSEvent');
  if (this._handle.initialized) {  // already started
    return;
  filename = getValidatedPath(filename, 'filename');
  const err = this._handle.start(toNamespacedPath(filename),
                                 persistent,
                                 recursive,
                                 encoding);
  if (err) {
    const error = errors.uvException({
      errno: err,
      syscall: 'watch',
      path: filename,
      message: err === UV_ENOSPC ?
        'System limit for number of file watchers reached' : ''
    });
    error.filename = filename;
    throw error;
// This method is a noop if the watcher has not been started or
// has already been closed.
FSWatcher.prototype.close = function() {
  if (this._handle === null) {  // closed
    return;
  assert(this._handle instanceof FSEvent, 'handle must be a FSEvent');
  if (!this._handle.initialized) {  // not started
    return;
  this._handle.close();
  this._handle = null;  // Make the handle garbage collectable
  process.nextTick(emitCloseNT, this);
function emitCloseNT(self) {
  self.emit('close');
// Legacy alias on the C++ wrapper object. This is not public API, so we may
// want to runtime-deprecate it at some point. There's no hurry, though.
Object.defineProperty(FSEvent.prototype, 'owner', {
  get() { return this[owner_symbol]; },
  set(v) { return this[owner_symbol] = v; }
module.exports = {
  FSWatcher,
  StatWatcher
'use strict';
const { setUnrefTimeout } = require('internal/timers');
const { PerformanceEntry, notify } = internalBinding('performance');
var nowCache;
var utcCache;
function nowDate() {
  if (!nowCache) cache();
  return nowCache;
function utcDate() {
  if (!utcCache) cache();
  return utcCache;
function cache() {
  const d = new Date();
  nowCache = d.valueOf();
  utcCache = d.toUTCString();
  setUnrefTimeout(resetCache, 1000 - d.getMilliseconds());
function resetCache() {
  nowCache = undefined;
  utcCache = undefined;
function ondrain() {
  if (this._httpMessage) this._httpMessage.emit('drain');
class HttpRequestTiming extends PerformanceEntry {
  constructor(statistics) {
    super();
    this.name = 'HttpRequest';
    this.entryType = 'http';
    const startTime = statistics.startTime;
    const diff = process.hrtime(startTime);
    this.duration = diff[0] * 1000 + diff[1] / 1e6;
    this.startTime = startTime[0] * 1000 + startTime[1] / 1e6;
function emitStatistics(statistics) {
  notify('http', new HttpRequestTiming(statistics));
module.exports = {
  outHeadersKey: Symbol('outHeadersKey'),
  ondrain,
  nowDate,
  utcDate,
  emitStatistics
'use strict';
if (internalBinding('config').hasIntl) {
  const { toASCII, toUnicode } = internalBinding('icu');
  module.exports = { toASCII, toUnicode };
} else {
  const { toASCII, toUnicode } = require('punycode');
  module.exports = { toASCII, toUnicode };
'use strict';
let hook;
let config;
function lazyHookCreation() {
  const inspector = internalBinding('inspector');
  const { createHook } = require('async_hooks');
  config = internalBinding('config');
  hook = createHook({
    init(asyncId, type, triggerAsyncId, resource) {
    // It's difficult to tell which tasks will be recurring and which won't,
    // therefore we mark all tasks as recurring. Based on the discussion
    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293,
    // this should be fine as long as we call asyncTaskCanceled() too.
      const recurring = true;
      if (type === 'PROMISE')
        this.promiseIds.add(asyncId);
      else
        inspector.asyncTaskScheduled(type, asyncId, recurring);
    },
    before(asyncId) {
      if (this.promiseIds.has(asyncId))
        return;
      inspector.asyncTaskStarted(asyncId);
    },
    after(asyncId) {
      if (this.promiseIds.has(asyncId))
        return;
      inspector.asyncTaskFinished(asyncId);
    },
    destroy(asyncId) {
      if (this.promiseIds.has(asyncId))
        return this.promiseIds.delete(asyncId);
      inspector.asyncTaskCanceled(asyncId);
    },
  });
  hook.promiseIds = new Set();
function enable() {
  if (hook === undefined) lazyHookCreation();
  if (config.bits < 64) {
    // V8 Inspector stores task ids as (void*) pointers.
    // async_hooks store ids as 64bit numbers.
    // As a result, we cannot reliably translate async_hook ids to V8 async_task
    // ids on 32bit platforms.
    process.emitWarning(
      'Warning: Async stack traces in debugger are not available ' +
      `on ${config.bits}bit platforms. The feature is disabled.`,
      {
        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE',
      });
  } else {
    hook.enable();
function disable() {
  if (hook === undefined) lazyHookCreation();
  hook.disable();
module.exports = {
  enable,
  disable
'use strict';
const { setImmediate } = require('timers');
const assert = require('internal/assert');
const { Socket } = require('net');
const { JSStream } = internalBinding('js_stream');
const uv = internalBinding('uv');
const debug = require('internal/util/debuglog').debuglog('stream_socket');
const { owner_symbol } = require('internal/async_hooks').symbols;
const { ERR_STREAM_WRAP } = require('internal/errors').codes;
const kCurrentWriteRequest = Symbol('kCurrentWriteRequest');
const kCurrentShutdownRequest = Symbol('kCurrentShutdownRequest');
const kPendingShutdownRequest = Symbol('kPendingShutdownRequest');
function isClosing() { return this[owner_symbol].isClosing(); }
function onreadstart() { return this[owner_symbol].readStart(); }
function onreadstop() { return this[owner_symbol].readStop(); }
function onshutdown(req) { return this[owner_symbol].doShutdown(req); }
function onwrite(req, bufs) { return this[owner_symbol].doWrite(req, bufs); }
/* This class serves as a wrapper for when the C++ side of Node wants access
 * to a standard JS stream. For example, TLS or HTTP do not operate on network
 * resources conceptually, although that is the common case and what we are
 * optimizing for; in theory, they are completely composable and can work with
 * any stream resource they see.
 * For the common case, i.e. a TLS socket wrapping around a net.Socket, we
 * can skip going through the JS layer and let TLS access the raw C++ handle
 * of a net.Socket. The flipside of this is that, to maintain composability,
 * we need a way to create "fake" net.Socket instances that call back into a
 * "real" JavaScript stream. JSStreamSocket is exactly this.
class JSStreamSocket extends Socket {
  constructor(stream) {
    const handle = new JSStream();
    handle.close = (cb) => {
      debug('close');
      this.doClose(cb);
    };
    // Inside of the following functions, `this` refers to the handle
    // and `this[owner_symbol]` refers to this JSStreamSocket instance.
    handle.isClosing = isClosing;
    handle.onreadstart = onreadstart;
    handle.onreadstop = onreadstop;
    handle.onshutdown = onshutdown;
    handle.onwrite = onwrite;
    stream.pause();
    stream.on('error', (err) => this.emit('error', err));
    const ondata = (chunk) => {
      if (typeof chunk === 'string' ||
          stream.readableObjectMode === true) {
        // Make sure that no further `data` events will happen.
        stream.pause();
        stream.removeListener('data', ondata);
        this.emit('error', new ERR_STREAM_WRAP());
        return;
      }
      debug('data', chunk.length);
      if (this._handle)
        this._handle.readBuffer(chunk);
    };
    stream.on('data', ondata);
    stream.once('end', () => {
      debug('end');
      if (this._handle)
        this._handle.emitEOF();
    });
    // Some `Stream` don't pass `hasError` parameters when closed.
    stream.once('close', () => {
      // Errors emitted from `stream` have also been emitted to this instance
      // so that we don't pass errors to `destroy()` again.
      this.destroy();
    });
    super({ handle, manualStart: true });
    this.stream = stream;
    this[kCurrentWriteRequest] = null;
    this[kCurrentShutdownRequest] = null;
    this[kPendingShutdownRequest] = null;
    this.readable = stream.readable;
    this.writable = stream.writable;
    // Start reading.
    this.read(0);
  // Allow legacy requires in the test suite to keep working:
  //   const { StreamWrap } = require('internal/js_stream_socket')
  static get StreamWrap() {
    return JSStreamSocket;
  isClosing() {
    return !this.readable || !this.writable;
  readStart() {
    this.stream.resume();
    return 0;
  readStop() {
    this.stream.pause();
    return 0;
  doShutdown(req) {
    // TODO(addaleax): It might be nice if we could get into a state where
    // DoShutdown() is not called on streams while a write is still pending.
    //
    // Currently, the only part of the code base where that happens is the
    // TLS implementation, which calls both DoWrite() and DoShutdown() on the
    // underlying network stream inside of its own DoShutdown() method.
    // Working around that on the native side is not quite trivial (yet?),
    // so for now that is supported here.
    if (this[kCurrentWriteRequest] !== null) {
      this[kPendingShutdownRequest] = req;
      return 0;
    }
    assert(this[kCurrentWriteRequest] === null);
    assert(this[kCurrentShutdownRequest] === null);
    this[kCurrentShutdownRequest] = req;
    const handle = this._handle;
    setImmediate(() => {
      // Ensure that write is dispatched asynchronously.
      this.stream.end(() => {
        this.finishShutdown(handle, 0);
      });
    });
    return 0;
  // handle === this._handle except when called from doClose().
  finishShutdown(handle, errCode) {
    // The shutdown request might already have been cancelled.
    if (this[kCurrentShutdownRequest] === null)
      return;
    const req = this[kCurrentShutdownRequest];
    this[kCurrentShutdownRequest] = null;
    handle.finishShutdown(req, errCode);
  doWrite(req, bufs) {
    assert(this[kCurrentWriteRequest] === null);
    assert(this[kCurrentShutdownRequest] === null);
    const handle = this._handle;
    const self = this;
    let pending = bufs.length;
    this.stream.cork();
    for (var i = 0; i < bufs.length; ++i)
      this.stream.write(bufs[i], done);
    this.stream.uncork();
    // Only set the request here, because the `write()` calls could throw.
    this[kCurrentWriteRequest] = req;
    function done(err) {
      if (!err && --pending !== 0)
        return;
      // Ensure that this is called once in case of error
      pending = 0;
      let errCode = 0;
      if (err) {
        errCode = uv[`UV_${err.code}`] || uv.UV_EPIPE;
      }
      // Ensure that write was dispatched
      setImmediate(() => {
        self.finishWrite(handle, errCode);
      });
    }
    return 0;
  // handle === this._handle except when called from doClose().
  finishWrite(handle, errCode) {
    // The write request might already have been cancelled.
    if (this[kCurrentWriteRequest] === null)
      return;
    const req = this[kCurrentWriteRequest];
    this[kCurrentWriteRequest] = null;
    handle.finishWrite(req, errCode);
    if (this[kPendingShutdownRequest]) {
      const req = this[kPendingShutdownRequest];
      this[kPendingShutdownRequest] = null;
      this.doShutdown(req);
    }
  doClose(cb) {
    const handle = this._handle;
    // When sockets of the "net" module destroyed, they will call
    // `this._handle.close()` which will also emit EOF if not emitted before.
    // This feature makes sockets on the other side emit "end" and "close"
    // even though we haven't called `end()`. As `stream` are likely to be
    // instances of `net.Socket`, calling `stream.destroy()` manually will
    // avoid issues that don't properly close wrapped connections.
    this.stream.destroy();
    setImmediate(() => {
      // Should be already set by net.js
      assert(this._handle === null);
      this.finishWrite(handle, uv.UV_ECANCELED);
      this.finishShutdown(handle, uv.UV_ECANCELED);
      cb();
    });
module.exports = JSStreamSocket;
'use strict';
function init(list) {
  list._idleNext = list;
  list._idlePrev = list;
// Show the most idle item.
function peek(list) {
  if (list._idlePrev === list) return null;
  return list._idlePrev;
// Remove an item from its list.
function remove(item) {
  if (item._idleNext) {
    item._idleNext._idlePrev = item._idlePrev;
  if (item._idlePrev) {
    item._idlePrev._idleNext = item._idleNext;
  item._idleNext = null;
  item._idlePrev = null;
// Remove an item from its list and place at the end.
function append(list, item) {
  if (item._idleNext || item._idlePrev) {
    remove(item);
  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).
  // Note: This linkage (next being older) may seem counter-intuitive at first.
  item._idleNext = list._idleNext;
  item._idlePrev = list;
  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).
  list._idleNext._idlePrev = item;
  list._idleNext = item;
function isEmpty(list) {
  return list._idleNext === list;
module.exports = {
  init,
  peek,
  remove,
  append,
  isEmpty
'use strict';
// If user passed `-c` or `--check` arguments to Node, check its syntax
// instead of actually running the file.
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
const {
  readStdin
} = require('internal/process/execution');
const { pathToFileURL } = require('url');
const vm = require('vm');
const {
  stripShebang, stripBOM
} = require('internal/modules/cjs/helpers');
const {
  _resolveFilename: resolveCJSModuleName,
  wrap: wrapCJSModule
} = require('internal/modules/cjs/loader');
// TODO(joyeecheung): not every one of these are necessary
prepareMainThreadExecution(true);
if (process.argv[1] && process.argv[1] !== '-') {
  // Expand process.argv[1] into a full path.
  const path = require('path');
  process.argv[1] = path.resolve(process.argv[1]);
  // Read the source.
  const filename = resolveCJSModuleName(process.argv[1]);
  const fs = require('fs');
  const source = fs.readFileSync(filename, 'utf-8');
  markBootstrapComplete();
  checkSyntax(source, filename);
} else {
  markBootstrapComplete();
  readStdin((code) => {
    checkSyntax(code, '[stdin]');
  });
function checkSyntax(source, filename) {
  // Remove Shebang.
  source = stripShebang(source);
  const { getOptionValue } = require('internal/options');
  const experimentalModules = getOptionValue('--experimental-modules');
  if (experimentalModules) {
    let isModule = false;
    if (filename === '[stdin]' || filename === '[eval]') {
      isModule = getOptionValue('--input-type') === 'module';
    } else {
      const resolve = require('internal/modules/esm/default_resolve');
      const { format } = resolve(pathToFileURL(filename).toString());
      isModule = format === 'module';
    }
    if (isModule) {
      const { ModuleWrap } = internalBinding('module_wrap');
      new ModuleWrap(source, filename);
      return;
    }
  // Remove BOM.
  source = stripBOM(source);
  // Wrap it.
  source = wrapCJSModule(source);
  // Compile the script, this will throw if it fails.
  new vm.Script(source, { displayErrors: true, filename });
'use strict';
// User passed `-e` or `--eval` arguments to Node without `-i` or
// `--interactive`.
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
const { evalModule, evalScript } = require('internal/process/execution');
const { addBuiltinLibsToObject } = require('internal/modules/cjs/helpers');
const { getOptionValue } = require('internal/options');
prepareMainThreadExecution();
addBuiltinLibsToObject(global);
markBootstrapComplete();
const source = getOptionValue('--eval');
const print = getOptionValue('--print');
if (getOptionValue('--input-type') === 'module')
  evalModule(source, print);
else
  evalScript('[eval]',
             source,
             getOptionValue('--inspect-brk'),
             print);
'use strict';
// Stdin is not a TTY, we will read it and execute it.
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
const { getOptionValue } = require('internal/options');
const {
  evalModule,
  evalScript,
  readStdin
} = require('internal/process/execution');
prepareMainThreadExecution();
markBootstrapComplete();
readStdin((code) => {
  // This is necessary for fork() and CJS module compilation.
  // TODO(joyeecheung): pass this with something really internal.
  process._eval = code;
  const print = getOptionValue('--print');
  if (getOptionValue('--input-type') === 'module')
    evalModule(code, print);
  else
    evalScript('[stdin]',
               code,
               getOptionValue('--inspect-brk'),
               print);
'use strict';
// `node inspect ...` or `node debug ...`
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
prepareMainThreadExecution();
if (process.argv[1] === 'debug') {
  process.emitWarning(
    '`node debug` is deprecated. Please use `node inspect` instead.',
    'DeprecationWarning', 'DEP0068');
markBootstrapComplete();
// Start the debugger agent.
process.nextTick(() => {
  require('internal/deps/node-inspect/lib/_inspect').start();
'use strict';
const { options, aliases } = require('internal/options');
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
function print(stream) {
  const all_opts = [...options.keys(), ...aliases.keys()];
  stream.write(`_node_complete() {
  local cur_word options
  cur_word="\${COMP_WORDS[COMP_CWORD]}"
  if [[ "\${cur_word}" == -* ]] ; then
    COMPREPLY=( $(compgen -W '${all_opts.join(' ')}' -- "\${cur_word}") )
    return 0
  else
    COMPREPLY=( $(compgen -f "\${cur_word}") )
    return 0
  fi
complete -F _node_complete node node_g`);
prepareMainThreadExecution();
markBootstrapComplete();
print(process.stdout);
'use strict';
/* eslint-disable no-restricted-globals */
const { types } = internalBinding('options');
const hasCrypto = Boolean(process.versions.openssl);
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
const typeLookup = [];
for (const key of Object.keys(types))
  typeLookup[types[key]] = key;
// Environment variables are parsed ad-hoc throughout the code base,
// so we gather the documentation here.
const { hasIntl, hasSmallICU, hasNodeOptions } = internalBinding('config');
const envVars = new Map([
  ['NODE_DEBUG', { helpText: "','-separated list of core modules that " +
    'should print debug information' }],
  ['NODE_DEBUG_NATIVE', { helpText: "','-separated list of C++ core debug " +
    'categories that should print debug output' }],
  ['NODE_DISABLE_COLORS', { helpText: 'set to 1 to disable colors in ' +
    'the REPL' }],
  ['NODE_EXTRA_CA_CERTS', { helpText: 'path to additional CA certificates ' +
    'file' }],
  ['NODE_NO_WARNINGS', { helpText: 'set to 1 to silence process warnings' }],
  ['NODE_PATH', { helpText: `'${require('path').delimiter}'-separated list ` +
    'of directories prefixed to the module search path' }],
  ['NODE_PENDING_DEPRECATION', { helpText: 'set to 1 to emit pending ' +
    'deprecation warnings' }],
  ['NODE_PENDING_PIPE_INSTANCES', { helpText: 'set the number of pending ' +
    'pipe instance handles on Windows' }],
  ['NODE_PRESERVE_SYMLINKS', { helpText: 'set to 1 to preserve symbolic ' +
    'links when resolving and caching modules' }],
  ['NODE_REDIRECT_WARNINGS', { helpText: 'write warnings to path instead ' +
    'of stderr' }],
  ['NODE_REPL_HISTORY', { helpText: 'path to the persistent REPL ' +
    'history file' }],
  ['NODE_TLS_REJECT_UNAUTHORIZED', { helpText: 'set to 0 to disable TLS ' +
    'certificate validation' }],
  ['NODE_V8_COVERAGE', { helpText: 'directory to output v8 coverage JSON ' +
    'to' }],
  ['UV_THREADPOOL_SIZE', { helpText: 'sets the number of threads used in ' +
    'libuv\'s threadpool' }]
].concat(hasIntl ? [
  ['NODE_ICU_DATA', { helpText: 'data path for ICU (Intl object) data' +
    hasSmallICU ? '' : ' (will extend linked-in data)' }]
] : []).concat(hasNodeOptions ? [
  ['NODE_OPTIONS', { helpText: 'set CLI options in the environment via a ' +
    'space-separated list' }]
] : []).concat(hasCrypto ? [
  ['OPENSSL_CONF', { helpText: 'load OpenSSL configuration from file' }],
  ['SSL_CERT_DIR', { helpText: 'sets OpenSSL\'s directory of trusted ' +
    'certificates when used in conjunction with --use-openssl-ca' }],
  ['SSL_CERT_FILE', { helpText: 'sets OpenSSL\'s trusted certificate file ' +
    'when used in conjunction with --use-openssl-ca' }],
] : []));
function indent(text, depth) {
  return text.replace(/^/gm, ' '.repeat(depth));
function fold(text, width) {
  return text.replace(new RegExp(`([^\n]{0,${width}})( |$)`, 'g'),
                      (_, newLine, end) => newLine + (end === ' ' ? '\n' : ''));
function getArgDescription(type) {
  switch (typeLookup[type]) {
    case 'kNoOp':
    case 'kV8Option':
    case 'kBoolean':
    case undefined:
      break;
    case 'kHostPort':
      return '[host:]port';
    case 'kInteger':
    case 'kUInteger':
    case 'kString':
    case 'kStringList':
      return '...';
    default:
      require('assert').fail(`unknown option type ${type}`);
function format({ options, aliases = new Map(), firstColumn, secondColumn }) {
  let text = '';
  let maxFirstColumnUsed = 0;
  for (const [
    name, { helpText, type, value }
  ] of [...options.entries()].sort()) {
    if (!helpText) continue;
    let displayName = name;
    const argDescription = getArgDescription(type);
    if (argDescription)
      displayName += `=${argDescription}`;
    for (const [ from, to ] of aliases) {
      // For cases like e.g. `-e, --eval`.
      if (to[0] === name && to.length === 1) {
        displayName = `${from}, ${displayName}`;
      }
      // For cases like `--inspect-brk[=[host:]port]`.
      const targetInfo = options.get(to[0]);
      const targetArgDescription =
        targetInfo ? getArgDescription(targetInfo.type) : '...';
      if (from === `${name}=`) {
        displayName += `[=${targetArgDescription}]`;
      } else if (from === `${name} <arg>`) {
        displayName += ` [${targetArgDescription}]`;
      }
    }
    let displayHelpText = helpText;
    if (value === true) {
      // Mark boolean options we currently have enabled.
      // In particular, it indicates whether --use-openssl-ca
      // or --use-bundled-ca is the (current) default.
      displayHelpText += ' (currently set)';
    }
    text += displayName;
    maxFirstColumnUsed = Math.max(maxFirstColumnUsed, displayName.length);
    if (displayName.length >= firstColumn)
      text += '\n' + ' '.repeat(firstColumn);
    else
      text += ' '.repeat(firstColumn - displayName.length);
    text += indent(fold(displayHelpText, secondColumn),
                   firstColumn).trimLeft() + '\n';
  if (maxFirstColumnUsed < firstColumn - 4) {
    // If we have more than 4 blank gap spaces, reduce first column width.
    return format({
      options,
      aliases,
      firstColumn: maxFirstColumnUsed + 2,
      secondColumn
    });
  return text;
function print(stream) {
  const { options, aliases } = require('internal/options');
  // Use 75 % of the available width, and at least 70 characters.
  const width = Math.max(70, (stream.columns || 0) * 0.75);
  const firstColumn = Math.floor(width * 0.4);
  const secondColumn = Math.floor(width * 0.57);
  options.set('-', { helpText: 'script read from stdin ' +
                               '(default if no file name is provided, ' +
                               'interactive mode if a tty)' });
  options.set('--', { helpText: 'indicate the end of node options' });
  stream.write(
    'Usage: node [options] [ script.js ] [arguments]\n' +
    '       node inspect [options] [ script.js | host:port ] [arguments]\n\n' +
    'Options:\n');
  stream.write(indent(format({
    options, aliases, firstColumn, secondColumn
  }), 2));
  stream.write('\nEnvironment variables:\n');
  stream.write(format({
    options: envVars, firstColumn, secondColumn
  }));
  stream.write('\nDocumentation can be found at https://nodejs.org/\n');
prepareMainThreadExecution();
markBootstrapComplete();
print(process.stdout);
'use strict';
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
prepareMainThreadExecution();
markBootstrapComplete();
require('internal/v8_prof_processor');
'use strict';
// Create the REPL if `-i` or `--interactive` is passed, or if
// the main module is not specified and stdin is a TTY.
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
const {
  evalScript
} = require('internal/process/execution');
const console = require('internal/console/global');
const { getOptionValue } = require('internal/options');
prepareMainThreadExecution();
markBootstrapComplete();
// --input-type flag not supported in REPL
if (getOptionValue('--input-type')) {
  // If we can't write to stderr, we'd like to make this a noop,
  // so use console.error.
  console.error('Cannot specify --input-type for REPL');
  process.exit(1);
console.log(`Welcome to Node.js ${process.version}.\n` +
  'Type ".help" for more information.');
const cliRepl = require('internal/repl');
cliRepl.createInternalRepl(process.env, (err, repl) => {
  if (err) {
    throw err;
  repl.on('exit', () => {
    if (repl._flushing) {
      repl.pause();
      return repl.once('flushHistory', () => {
        process.exit();
      });
    }
    process.exit();
  });
// If user passed '-e' or '--eval' along with `-i` or `--interactive`,
// evaluate the code in the current context.
if (getOptionValue('[has_eval_string]')) {
  evalScript('[eval]',
             getOptionValue('--eval'),
             getOptionValue('--inspect-brk'),
             getOptionValue('--print'));
'use strict';
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
prepareMainThreadExecution(true);
const CJSModule = require('internal/modules/cjs/loader');
markBootstrapComplete();
// Note: this actually tries to run the module as a ESM first if
// --experimental-modules is on.
// TODO(joyeecheung): can we move that logic to here? Note that this
// is an undocumented method available via `require('module').runMain`
CJSModule.runMain();
'use strict';
const {
  prepareMainThreadExecution
} = require('internal/bootstrap/pre_execution');
prepareMainThreadExecution();
markBootstrapComplete();
// Legacy _third_party_main.js support
process.nextTick(() => {
  require('_third_party_main');
'use strict';
// In worker threads, execute the script sent through the
// message port.
const { Object } = primordials;
const {
  patchProcessObject,
  setupCoverageHooks,
  setupInspectorHooks,
  setupWarningHandler,
  setupDebugEnv,
  initializeDeprecations,
  initializeCJSLoader,
  initializeESMLoader,
  initializeFrozenIntrinsics,
  initializeReport,
  loadPreloadModules,
  setupTraceCategoryState
} = require('internal/bootstrap/pre_execution');
const {
  threadId,
  getEnvMessagePort
} = internalBinding('worker');
const workerIo = require('internal/worker/io');
const {
  messageTypes: {
    // Messages that may be received by workers
    LOAD_SCRIPT,
    // Messages that may be posted from workers
    UP_AND_RUNNING,
    ERROR_MESSAGE,
    COULD_NOT_SERIALIZE_ERROR,
    // Messages that may be either received or posted
    STDIO_PAYLOAD,
    STDIO_WANTS_MORE_DATA,
  },
  kStdioWantsMoreDataCallback
} = workerIo;
const {
  onGlobalUncaughtException
} = require('internal/process/execution');
const publicWorker = require('worker_threads');
const debug = require('internal/util/debuglog').debuglog('worker');
const assert = require('internal/assert');
patchProcessObject();
setupInspectorHooks();
setupDebugEnv();
setupWarningHandler();
// Since worker threads cannot switch cwd, we do not need to
// overwrite the process.env.NODE_V8_COVERAGE variable.
if (process.env.NODE_V8_COVERAGE) {
  setupCoverageHooks(process.env.NODE_V8_COVERAGE);
debug(`[${threadId}] is setting up worker child environment`);
// Set up the message port and start listening
const port = getEnvMessagePort();
// If the main thread is spawned with env NODE_CHANNEL_FD, it's probably
// spawned by our child_process module. In the work threads, mark the
// related IPC properties as unavailable.
if (process.env.NODE_CHANNEL_FD) {
  const workerThreadSetup = require('internal/process/worker_thread_only');
  Object.defineProperty(process, 'channel', {
    enumerable: false,
    get: workerThreadSetup.unavailable('process.channel')
  });
  Object.defineProperty(process, 'connected', {
    enumerable: false,
    get: workerThreadSetup.unavailable('process.connected')
  });
  process.send = workerThreadSetup.unavailable('process.send()');
  process.disconnect =
    workerThreadSetup.unavailable('process.disconnect()');
port.on('message', (message) => {
  if (message.type === LOAD_SCRIPT) {
    const {
      cwdCounter,
      filename,
      doEval,
      workerData,
      publicPort,
      manifestSrc,
      manifestURL,
      hasStdin
    } = message;
    setupTraceCategoryState();
    initializeReport();
    if (manifestSrc) {
      require('internal/process/policy').setup(manifestSrc, manifestURL);
    }
    initializeDeprecations();
    initializeFrozenIntrinsics();
    initializeCJSLoader();
    initializeESMLoader();
    loadPreloadModules();
    publicWorker.parentPort = publicPort;
    publicWorker.workerData = workerData;
    // The counter is only passed to the workers created by the main thread, not
    // to workers created by other workers.
    let cachedCwd = '';
    const originalCwd = process.cwd;
    process.cwd = function() {
      cachedCwd = originalCwd();
      return cachedCwd;
    };
    workerIo.sharedCwdCounter = cwdCounter;
    if (!hasStdin)
      process.stdin.push(null);
    debug(`[${threadId}] starts worker script ${filename} ` +
          `(eval = ${eval}) at cwd = ${process.cwd()}`);
    port.unref();
    port.postMessage({ type: UP_AND_RUNNING });
    if (doEval) {
      const { evalScript } = require('internal/process/execution');
      evalScript('[worker eval]', filename);
    } else {
      process.argv[1] = filename; // script filename
      require('module').runMain();
    }
  } else if (message.type === STDIO_PAYLOAD) {
    const { stream, chunk, encoding } = message;
    process[stream].push(chunk, encoding);
  } else {
    assert(
      message.type === STDIO_WANTS_MORE_DATA,
      `Unknown worker message type ${message.type}`
    );
    const { stream } = message;
    process[stream][kStdioWantsMoreDataCallback]();
function workerOnGlobalUncaughtException(error, fromPromise) {
  debug(`[${threadId}] gets uncaught exception`);
  let handled = false;
  try {
    handled = onGlobalUncaughtException(error, fromPromise);
  } catch (e) {
    error = e;
  debug(`[${threadId}] uncaught exception handled = ${handled}`);
  if (!handled) {
    let serialized;
    try {
      const { serializeError } = require('internal/error-serdes');
      serialized = serializeError(error);
    } catch {}
    debug(`[${threadId}] uncaught exception serialized = ${!!serialized}`);
    if (serialized)
      port.postMessage({
        type: ERROR_MESSAGE,
        error: serialized
      });
    else
      port.postMessage({ type: COULD_NOT_SERIALIZE_ERROR });
    const { clearAsyncIdStack } = require('internal/async_hooks');
    clearAsyncIdStack();
    process.exit();
// Patch the global uncaught exception handler so it gets picked up by
// node::errors::TriggerUncaughtException().
process._fatalException = workerOnGlobalUncaughtException;
markBootstrapComplete();
port.start();
'use strict';
const { Object } = primordials;
const {
  ERR_MANIFEST_DEPENDENCY_MISSING,
  ERR_UNKNOWN_BUILTIN_MODULE
} = require('internal/errors').codes;
const { NativeModule } = require('internal/bootstrap/loaders');
const { getOptionValue } = require('internal/options');
const experimentalModules = getOptionValue('--experimental-modules');
const { validateString } = require('internal/validators');
const path = require('path');
const { pathToFileURL, fileURLToPath } = require('internal/url');
const { URL } = require('url');
const debug = require('internal/util/debuglog').debuglog('module');
function loadNativeModule(filename, request, experimentalModules) {
  const mod = NativeModule.map.get(filename);
  if (mod) {
    debug('load native module %s', request);
    mod.compileForPublicLoader(experimentalModules);
    return mod;
// Invoke with makeRequireFunction(module) where |module| is the Module object
// to use as the context for the require() function.
// Use redirects to set up a mapping from a policy and restrict dependencies
function makeRequireFunction(mod, redirects) {
  const Module = mod.constructor;
  let require;
  if (redirects) {
    const { map, reaction } = redirects;
    const id = mod.filename || mod.id;
    require = function require(path) {
      let missing = true;
      if (map === true) {
        missing = false;
      } else if (map.has(path)) {
        const redirect = map.get(path);
        if (redirect === true) {
          missing = false;
        } else if (typeof redirect === 'string') {
          const parsed = new URL(redirect);
          if (parsed.protocol === 'node:') {
            const specifier = parsed.pathname;
            const mod = loadNativeModule(
              specifier,
              redirect,
              experimentalModules);
            if (mod && mod.canBeRequiredByUsers) return mod.exports;
            throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);
          } else if (parsed.protocol === 'file:') {
            return mod.require(fileURLToPath(parsed));
          }
        }
      }
      if (missing) {
        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(id, path));
      }
      return mod.require(path);
    };
  } else {
    require = function require(path) {
      return mod.require(path);
    };
  function resolve(request, options) {
    validateString(request, 'request');
    return Module._resolveFilename(request, mod, false, options);
  require.resolve = resolve;
  function paths(request) {
    validateString(request, 'request');
    return Module._resolveLookupPaths(request, mod);
  resolve.paths = paths;
  require.main = process.mainModule;
  // Enable support to add extra extension types.
  require.extensions = Module._extensions;
  require.cache = Module._cache;
  return require;
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 * because the buffer-to-string conversion in `fs.readFileSync()`
 * translates it to FEFF, the UTF-16 BOM.
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  return content;
 * Find end of shebang line and slice it off
function stripShebang(content) {
  // Remove shebang
  if (content.charAt(0) === '#' && content.charAt(1) === '!') {
    // Find end of shebang line and slice it off
    let index = content.indexOf('\n', 2);
    if (index === -1)
      return '';
    if (content.charAt(index - 1) === '\r')
      index--;
    // Note that this actually includes the newline character(s) in the
    // new output. This duplicates the behavior of the regular expression
    // that was previously used to replace the shebang line.
    content = content.slice(index);
  return content;
const builtinLibs = [
  'assert', 'async_hooks', 'buffer', 'child_process', 'cluster', 'crypto',
  'dgram', 'dns', 'domain', 'events', 'fs', 'http', 'http2', 'https', 'net',
  'os', 'path', 'perf_hooks', 'punycode', 'querystring', 'readline', 'repl',
  'stream', 'string_decoder', 'tls', 'trace_events', 'tty', 'url', 'util',
  'v8', 'vm', 'worker_threads', 'zlib'
if (typeof internalBinding('inspector').open === 'function') {
  builtinLibs.push('inspector');
  builtinLibs.sort();
function addBuiltinLibsToObject(object) {
  // Make built-in modules available directly (loaded lazily).
  builtinLibs.forEach((name) => {
    // Goals of this mechanism are:
    // - Lazy loading of built-in modules
    // - Having all built-in modules available as non-enumerable properties
    // - Allowing the user to re-assign these variables as if there were no
    //   pre-existing globals with the same name.
    const setReal = (val) => {
      // Deleting the property before re-assigning it disables the
      // getter/setter mechanism.
      delete object[name];
      object[name] = val;
    };
    Object.defineProperty(object, name, {
      get: () => {
        const lib = require(name);
        // Disable the current getter/setter and set up a new
        // non-enumerable property.
        delete object[name];
        Object.defineProperty(object, name, {
          get: () => lib,
          set: setReal,
          configurable: true,
          enumerable: false
        });
        return lib;
      },
      set: setReal,
      configurable: true,
      enumerable: false
    });
  });
function normalizeReferrerURL(referrer) {
  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {
    return pathToFileURL(referrer).href;
  return new URL(referrer).href;
module.exports = {
  addBuiltinLibsToObject,
  builtinLibs,
  loadNativeModule,
  makeRequireFunction,
  normalizeReferrerURL,
  stripBOM,
  stripShebang
// Copyright Joyent, Inc. and other Node contributors.
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
const {
  JSON,
  Object,
  Reflect,
  SafeMap,
  StringPrototype,
} = primordials;
const { NativeModule } = require('internal/bootstrap/loaders');
const { pathToFileURL, fileURLToPath, URL } = require('internal/url');
const { deprecate } = require('internal/util');
const vm = require('vm');
const assert = require('internal/assert');
const fs = require('fs');
const internalFS = require('internal/fs/utils');
const path = require('path');
const {
  internalModuleReadJSON,
  internalModuleStat
} = internalBinding('fs');
const { safeGetenv } = internalBinding('credentials');
const {
  makeRequireFunction,
  normalizeReferrerURL,
  stripBOM,
  stripShebang,
  loadNativeModule
} = require('internal/modules/cjs/helpers');
const { getOptionValue } = require('internal/options');
const preserveSymlinks = getOptionValue('--preserve-symlinks');
const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');
const experimentalModules = getOptionValue('--experimental-modules');
const manifest = getOptionValue('--experimental-policy') ?
  require('internal/process/policy').manifest :
  null;
const { compileFunction } = internalBinding('contextify');
const {
  ERR_INVALID_ARG_VALUE,
  ERR_INVALID_OPT_VALUE,
  ERR_REQUIRE_ESM
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const pendingDeprecation = getOptionValue('--pending-deprecation');
const experimentalExports = getOptionValue('--experimental-exports');
module.exports = Module;
let asyncESM;
let ModuleJob;
let createDynamicModule;
const {
  CHAR_FORWARD_SLASH,
  CHAR_BACKWARD_SLASH,
  CHAR_COLON
} = require('internal/constants');
const isWindows = process.platform === 'win32';
const relativeResolveCache = Object.create(null);
let requireDepth = 0;
let statCache = null;
function stat(filename) {
  filename = path.toNamespacedPath(filename);
  if (statCache !== null) {
    const result = statCache.get(filename);
    if (result !== undefined) return result;
  const result = internalModuleStat(filename);
  if (statCache !== null) statCache.set(filename, result);
  return result;
function updateChildren(parent, child, scan) {
  const children = parent && parent.children;
  if (children && !(scan && children.includes(child)))
    children.push(child);
function Module(id = '', parent) {
  this.id = id;
  this.path = path.dirname(id);
  this.exports = {};
  this.parent = parent;
  updateChildren(parent, this, false);
  this.filename = null;
  this.loaded = false;
  this.children = [];
const builtinModules = [];
for (const [id, mod] of NativeModule.map) {
  if (mod.canBeRequiredByUsers) {
    builtinModules.push(id);
Object.freeze(builtinModules);
Module.builtinModules = builtinModules;
Module._cache = Object.create(null);
Module._pathCache = Object.create(null);
Module._extensions = Object.create(null);
var modulePaths = [];
Module.globalPaths = [];
let patched = false;
// eslint-disable-next-line func-style
let wrap = function(script) {
  return Module.wrapper[0] + script + Module.wrapper[1];
const wrapper = [
  '(function (exports, require, module, __filename, __dirname) { ',
  '\n});'
let wrapperProxy = new Proxy(wrapper, {
  set(target, property, value, receiver) {
    patched = true;
    return Reflect.set(target, property, value, receiver);
  },
  defineProperty(target, property, descriptor) {
    patched = true;
    return Object.defineProperty(target, property, descriptor);
Object.defineProperty(Module, 'wrap', {
  get() {
    return wrap;
  },
  set(value) {
    patched = true;
    wrap = value;
Object.defineProperty(Module, 'wrapper', {
  get() {
    return wrapperProxy;
  },
  set(value) {
    patched = true;
    wrapperProxy = value;
const debug = require('internal/util/debuglog').debuglog('module');
Module._debug = deprecate(debug, 'Module._debug is deprecated.', 'DEP0077');
// Given a module name, and a list of paths to test, returns the first
// matching file in the following precedence.
// require("a.<ext>")
//   -> a.<ext>
// require("a")
//   -> a
//   -> a.<ext>
//   -> a/index.<ext>
// Check if the directory is a package.json dir.
const packageMainCache = Object.create(null);
// Explicit exports from package.json files
const packageExportsCache = new SafeMap();
function readPackageRaw(requestPath) {
  const jsonPath = path.resolve(requestPath, 'package.json');
  const json = internalModuleReadJSON(path.toNamespacedPath(jsonPath));
  if (json === undefined) {
    return false;
  if (manifest) {
    const jsonURL = pathToFileURL(jsonPath);
    manifest.assertIntegrity(jsonURL, json);
  try {
    const parsed = JSON.parse(json);
    packageMainCache[requestPath] = parsed.main;
    if (experimentalExports) {
      packageExportsCache.set(requestPath, parsed.exports);
    }
    return parsed;
  } catch (e) {
    e.path = jsonPath;
    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;
    throw e;
function readPackage(requestPath) {
  const entry = packageMainCache[requestPath];
  if (entry)
    return entry;
  const pkg = readPackageRaw(requestPath);
  if (pkg === false) return false;
  return pkg.main;
function readExports(requestPath) {
  if (packageExportsCache.has(requestPath)) {
    return packageExportsCache.get(requestPath);
  const pkg = readPackageRaw(requestPath);
  if (!pkg) {
    packageExportsCache.set(requestPath, null);
    return null;
  return pkg.exports;
function tryPackage(requestPath, exts, isMain, originalPath) {
  const pkg = readPackage(requestPath);
  if (!pkg) {
    return tryExtensions(path.resolve(requestPath, 'index'), exts, isMain);
  const filename = path.resolve(requestPath, pkg);
  let actual = tryFile(filename, isMain) ||
    tryExtensions(filename, exts, isMain) ||
    tryExtensions(path.resolve(filename, 'index'), exts, isMain);
  if (actual === false) {
    actual = tryExtensions(path.resolve(requestPath, 'index'), exts, isMain);
    if (!actual) {
      // eslint-disable-next-line no-restricted-syntax
      const err = new Error(
        `Cannot find module '${filename}'. ` +
        'Please verify that the package.json has a valid "main" entry'
      );
      err.code = 'MODULE_NOT_FOUND';
      err.path = path.resolve(requestPath, 'package.json');
      err.requestPath = originalPath;
      // TODO(BridgeAR): Add the requireStack as well.
      throw err;
    } else if (pendingDeprecation) {
      const jsonPath = path.resolve(requestPath, 'package.json');
      process.emitWarning(
        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +
          'Please either fix that or report it to the module author',
        'DeprecationWarning',
        'DEP0128'
      );
    }
  return actual;
// In order to minimize unnecessary lstat() calls,
// this cache is a list of known-real paths.
// Set to an empty Map to reset.
const realpathCache = new Map();
// Check if the file exists and is not a directory
// if using --preserve-symlinks and isMain is false,
// keep symlinks intact, otherwise resolve to the
// absolute realpath.
function tryFile(requestPath, isMain) {
  const rc = stat(requestPath);
  if (preserveSymlinks && !isMain) {
    return rc === 0 && path.resolve(requestPath);
  return rc === 0 && toRealPath(requestPath);
function toRealPath(requestPath) {
  return fs.realpathSync(requestPath, {
    [internalFS.realpathCacheKey]: realpathCache
  });
// Given a path, check if the file exists with any of the set extensions
function tryExtensions(p, exts, isMain) {
  for (var i = 0; i < exts.length; i++) {
    const filename = tryFile(p + exts[i], isMain);
    if (filename) {
      return filename;
    }
  return false;
// Find the longest (possibly multi-dot) extension registered in
// Module._extensions
function findLongestRegisteredExtension(filename) {
  const name = path.basename(filename);
  let currentExtension;
  let index;
  let startIndex = 0;
  while ((index = name.indexOf('.', startIndex)) !== -1) {
    startIndex = index + 1;
    if (index === 0) continue; // Skip dotfiles like .gitignore
    currentExtension = name.slice(index);
    if (Module._extensions[currentExtension]) return currentExtension;
  return '.js';
// This only applies to requests of a specific form:
// 1. name/.*
// 2. @scope/name/.*
const EXPORTS_PATTERN = /^((?:@[^./@\\][^/@\\]*\/)?[^@./\\][^/\\]*)(\/.*)$/;
function resolveExports(nmPath, request, absoluteRequest) {
  // The implementation's behavior is meant to mirror resolution in ESM.
  if (experimentalExports && !absoluteRequest) {
    const [, name, expansion] =
      StringPrototype.match(request, EXPORTS_PATTERN) || [];
    if (!name) {
      return path.resolve(nmPath, request);
    }
    const basePath = path.resolve(nmPath, name);
    const pkgExports = readExports(basePath);
    if (pkgExports != null) {
      const mappingKey = `.${expansion}`;
      const mapping = pkgExports[mappingKey];
      if (typeof mapping === 'string') {
        return fileURLToPath(new URL(mapping, `${pathToFileURL(basePath)}/`));
      }
      let dirMatch = '';
      for (const [candidateKey, candidateValue] of Object.entries(pkgExports)) {
        if (candidateKey[candidateKey.length - 1] !== '/') continue;
        if (candidateValue[candidateValue.length - 1] !== '/') continue;
        if (candidateKey.length > dirMatch.length &&
            StringPrototype.startsWith(mappingKey, candidateKey)) {
          dirMatch = candidateKey;
        }
      }
      if (dirMatch !== '') {
        const dirMapping = pkgExports[dirMatch];
        const remainder = StringPrototype.slice(mappingKey, dirMatch.length);
        const expectedPrefix =
          new URL(dirMapping, `${pathToFileURL(basePath)}/`);
        const resolved = new URL(remainder, expectedPrefix).href;
        if (StringPrototype.startsWith(resolved, expectedPrefix.href)) {
          return fileURLToPath(resolved);
        }
      }
      // eslint-disable-next-line no-restricted-syntax
      const e = new Error(`Package exports for '${basePath}' do not define ` +
          `a '${mappingKey}' subpath`);
      e.code = 'MODULE_NOT_FOUND';
      throw e;
    }
  return path.resolve(nmPath, request);
Module._findPath = function(request, paths, isMain) {
  const absoluteRequest = path.isAbsolute(request);
  if (absoluteRequest) {
    paths = [''];
  } else if (!paths || paths.length === 0) {
    return false;
  const cacheKey = request + '\x00' +
                (paths.length === 1 ? paths[0] : paths.join('\x00'));
  const entry = Module._pathCache[cacheKey];
  if (entry)
    return entry;
  var exts;
  var trailingSlash = request.length > 0 &&
    request.charCodeAt(request.length - 1) === CHAR_FORWARD_SLASH;
  if (!trailingSlash) {
    trailingSlash = /(?:^|\/)\.?\.$/.test(request);
  // For each path
  for (var i = 0; i < paths.length; i++) {
    // Don't search further if path doesn't exist
    const curPath = paths[i];
    if (curPath && stat(curPath) < 1) continue;
    var basePath = resolveExports(curPath, request, absoluteRequest);
    var filename;
    var rc = stat(basePath);
    if (!trailingSlash) {
      if (rc === 0) {  // File.
        if (!isMain) {
          if (preserveSymlinks) {
            filename = path.resolve(basePath);
          } else {
            filename = toRealPath(basePath);
          }
        } else if (preserveSymlinksMain) {
          // For the main module, we use the preserveSymlinksMain flag instead
          // mainly for backward compatibility, as the preserveSymlinks flag
          // historically has not applied to the main module.  Most likely this
          // was intended to keep .bin/ binaries working, as following those
          // symlinks is usually required for the imports in the corresponding
          // files to resolve; that said, in some use cases following symlinks
          // causes bigger problems which is why the preserveSymlinksMain option
          // is needed.
          filename = path.resolve(basePath);
        } else {
          filename = toRealPath(basePath);
        }
      }
      if (!filename) {
        // Try it with each of the extensions
        if (exts === undefined)
          exts = Object.keys(Module._extensions);
        filename = tryExtensions(basePath, exts, isMain);
      }
    }
    if (!filename && rc === 1) {  // Directory.
      // try it with each of the extensions at "index"
      if (exts === undefined)
        exts = Object.keys(Module._extensions);
      filename = tryPackage(basePath, exts, isMain, request);
    }
    if (filename) {
      Module._pathCache[cacheKey] = filename;
      return filename;
    }
  return false;
// 'node_modules' character codes reversed
const nmChars = [ 115, 101, 108, 117, 100, 111, 109, 95, 101, 100, 111, 110 ];
const nmLen = nmChars.length;
if (isWindows) {
  // 'from' is the __dirname of the module.
  Module._nodeModulePaths = function(from) {
    // Guarantee that 'from' is absolute.
    from = path.resolve(from);
    // note: this approach *only* works when the path is guaranteed
    // to be absolute.  Doing a fully-edge-case-correct path.split
    // that works on both Windows and Posix is non-trivial.
    // return root node_modules when path is 'D:\\'.
    // path.resolve will make sure from.length >=3 in Windows.
    if (from.charCodeAt(from.length - 1) === CHAR_BACKWARD_SLASH &&
        from.charCodeAt(from.length - 2) === CHAR_COLON)
      return [from + 'node_modules'];
    const paths = [];
    var p = 0;
    var last = from.length;
    for (var i = from.length - 1; i >= 0; --i) {
      const code = from.charCodeAt(i);
      // The path segment separator check ('\' and '/') was used to get
      // node_modules path for every path segment.
      // Use colon as an extra condition since we can get node_modules
      // path for drive root like 'C:\node_modules' and don't need to
      // parse drive name.
      if (code === CHAR_BACKWARD_SLASH ||
          code === CHAR_FORWARD_SLASH ||
          code === CHAR_COLON) {
        if (p !== nmLen)
          paths.push(from.slice(0, last) + '\\node_modules');
        last = i;
        p = 0;
      } else if (p !== -1) {
        if (nmChars[p] === code) {
          ++p;
        } else {
          p = -1;
        }
      }
    }
    return paths;
  };
} else { // posix
  // 'from' is the __dirname of the module.
  Module._nodeModulePaths = function(from) {
    // Guarantee that 'from' is absolute.
    from = path.resolve(from);
    // Return early not only to avoid unnecessary work, but to *avoid* returning
    // an array of two items for a root: [ '//node_modules', '/node_modules' ]
    if (from === '/')
      return ['/node_modules'];
    // note: this approach *only* works when the path is guaranteed
    // to be absolute.  Doing a fully-edge-case-correct path.split
    // that works on both Windows and Posix is non-trivial.
    const paths = [];
    var p = 0;
    var last = from.length;
    for (var i = from.length - 1; i >= 0; --i) {
      const code = from.charCodeAt(i);
      if (code === CHAR_FORWARD_SLASH) {
        if (p !== nmLen)
          paths.push(from.slice(0, last) + '/node_modules');
        last = i;
        p = 0;
      } else if (p !== -1) {
        if (nmChars[p] === code) {
          ++p;
        } else {
          p = -1;
        }
      }
    }
    // Append /node_modules to handle root paths.
    paths.push('/node_modules');
    return paths;
  };
Module._resolveLookupPaths = function(request, parent) {
  if (NativeModule.canBeRequiredByUsers(request)) {
    debug('looking for %j in []', request);
    return null;
  // Check for node modules paths.
  if (request.charAt(0) !== '.' ||
      (request.length > 1 &&
      request.charAt(1) !== '.' &&
      request.charAt(1) !== '/' &&
      (!isWindows || request.charAt(1) !== '\\'))) {
    let paths = modulePaths;
    if (parent != null && parent.paths && parent.paths.length) {
      paths = parent.paths.concat(paths);
    }
    debug('looking for %j in %j', request, paths);
    return paths.length > 0 ? paths : null;
  // With --eval, parent.id is not set and parent.filename is null.
  if (!parent || !parent.id || !parent.filename) {
    // Make require('./path/to/foo') work - normally the path is taken
    // from realpath(__filename) but with eval there is no filename
    const mainPaths = ['.'].concat(Module._nodeModulePaths('.'), modulePaths);
    debug('looking for %j in %j', request, mainPaths);
    return mainPaths;
  debug('RELATIVE: requested: %s from parent.id %s', request, parent.id);
  const parentDir = [path.dirname(parent.filename)];
  debug('looking for %j', parentDir);
  return parentDir;
// Check the cache for the requested file.
// 1. If a module already exists in the cache: return its exports object.
// 2. If the module is native: call
//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.
// 3. Otherwise, create a new module for the file and save it to the cache.
//    Then have it load  the file contents before returning its exports
//    object.
Module._load = function(request, parent, isMain) {
  let relResolveCacheIdentifier;
  if (parent) {
    debug('Module._load REQUEST %s parent: %s', request, parent.id);
    // Fast path for (lazy loaded) modules in the same directory. The indirect
    // caching is required to allow cache invalidation without changing the old
    // cache key names.
    relResolveCacheIdentifier = `${parent.path}\x00${request}`;
    const filename = relativeResolveCache[relResolveCacheIdentifier];
    if (filename !== undefined) {
      const cachedModule = Module._cache[filename];
      if (cachedModule !== undefined) {
        updateChildren(parent, cachedModule, true);
        return cachedModule.exports;
      }
      delete relativeResolveCache[relResolveCacheIdentifier];
    }
  const filename = Module._resolveFilename(request, parent, isMain);
  const cachedModule = Module._cache[filename];
  if (cachedModule !== undefined) {
    updateChildren(parent, cachedModule, true);
    return cachedModule.exports;
  const mod = loadNativeModule(filename, request, experimentalModules);
  if (mod && mod.canBeRequiredByUsers) return mod.exports;
  // Don't call updateChildren(), Module constructor already does.
  const module = new Module(filename, parent);
  if (isMain) {
    process.mainModule = module;
    module.id = '.';
  Module._cache[filename] = module;
  if (parent !== undefined) {
    relativeResolveCache[relResolveCacheIdentifier] = filename;
  let threw = true;
  try {
    module.load(filename);
    threw = false;
  } finally {
    if (threw) {
      delete Module._cache[filename];
      if (parent !== undefined) {
        delete relativeResolveCache[relResolveCacheIdentifier];
      }
    }
  return module.exports;
Module._resolveFilename = function(request, parent, isMain, options) {
  if (NativeModule.canBeRequiredByUsers(request)) {
    return request;
  var paths;
  if (typeof options === 'object' && options !== null) {
    if (Array.isArray(options.paths)) {
      const isRelative = request.startsWith('./') ||
          request.startsWith('../') ||
          (isWindows && request.startsWith('.\\') ||
          request.startsWith('..\\'));
      if (isRelative) {
        paths = options.paths;
      } else {
        const fakeParent = new Module('', null);
        paths = [];
        for (var i = 0; i < options.paths.length; i++) {
          const path = options.paths[i];
          fakeParent.paths = Module._nodeModulePaths(path);
          const lookupPaths = Module._resolveLookupPaths(request, fakeParent);
          for (var j = 0; j < lookupPaths.length; j++) {
            if (!paths.includes(lookupPaths[j]))
              paths.push(lookupPaths[j]);
          }
        }
      }
    } else if (options.paths === undefined) {
      paths = Module._resolveLookupPaths(request, parent);
    } else {
      throw new ERR_INVALID_OPT_VALUE('options.paths', options.paths);
    }
  } else {
    paths = Module._resolveLookupPaths(request, parent);
  // Look up the filename first, since that's the cache key.
  const filename = Module._findPath(request, paths, isMain);
  if (!filename) {
    const requireStack = [];
    for (var cursor = parent;
      cursor;
      cursor = cursor.parent) {
      requireStack.push(cursor.filename || cursor.id);
    }
    let message = `Cannot find module '${request}'`;
    if (requireStack.length > 0) {
      message = message + '\nRequire stack:\n- ' + requireStack.join('\n- ');
    }
    // eslint-disable-next-line no-restricted-syntax
    var err = new Error(message);
    err.code = 'MODULE_NOT_FOUND';
    err.requireStack = requireStack;
    throw err;
  return filename;
// Given a file name, pass it to the proper extension handler.
Module.prototype.load = function(filename) {
  debug('load %j for module %j', filename, this.id);
  assert(!this.loaded);
  this.filename = filename;
  this.paths = Module._nodeModulePaths(path.dirname(filename));
  const extension = findLongestRegisteredExtension(filename);
  Module._extensions[extension](this, filename);
  this.loaded = true;
  if (experimentalModules) {
    const ESMLoader = asyncESM.ESMLoader;
    const url = `${pathToFileURL(filename)}`;
    const module = ESMLoader.moduleMap.get(url);
    // Create module entry at load time to snapshot exports correctly
    const exports = this.exports;
    if (module !== undefined) { // Called from cjs translator
      if (module.reflect) {
        module.reflect.onReady((reflect) => {
          reflect.exports.default.set(exports);
        });
      }
    } else { // preemptively cache
      ESMLoader.moduleMap.set(
        url,
        new ModuleJob(ESMLoader, url, async () => {
          return createDynamicModule(
            [], ['default'], url, (reflect) => {
              reflect.exports.default.set(exports);
            });
        })
      );
    }
// Loads a module at the given file path. Returns that module's
// `exports` property.
Module.prototype.require = function(id) {
  validateString(id, 'id');
  if (id === '') {
    throw new ERR_INVALID_ARG_VALUE('id', id,
                                    'must be a non-empty string');
  requireDepth++;
  try {
    return Module._load(id, this, /* isMain */ false);
  } finally {
    requireDepth--;
// Resolved path to process.argv[1] will be lazily placed here
// (needed for setting breakpoint when called with --inspect-brk)
var resolvedArgv;
let hasPausedEntry = false;
// Run the file contents in the correct scope or sandbox. Expose
// the correct helper variables (require, module, exports) to
// the file.
// Returns exception, if any.
Module.prototype._compile = function(content, filename) {
  let moduleURL;
  let redirects;
  if (manifest) {
    moduleURL = pathToFileURL(filename);
    redirects = manifest.getRedirects(moduleURL);
    manifest.assertIntegrity(moduleURL, content);
  content = stripShebang(content);
  let compiledWrapper;
  if (patched) {
    const wrapper = Module.wrap(content);
    compiledWrapper = vm.runInThisContext(wrapper, {
      filename,
      lineOffset: 0,
      displayErrors: true,
      importModuleDynamically: experimentalModules ? async (specifier) => {
        const loader = await asyncESM.loaderPromise;
        return loader.import(specifier, normalizeReferrerURL(filename));
      } : undefined,
    });
  } else {
    const compiled = compileFunction(
      content,
      filename,
      0,
      0,
      undefined,
      false,
      undefined,
      [],
      [
        'exports',
        'require',
        'module',
        '__filename',
        '__dirname',
      ]
    );
    if (experimentalModules) {
      const { callbackMap } = internalBinding('module_wrap');
      callbackMap.set(compiled.cacheKey, {
        importModuleDynamically: async (specifier) => {
          const loader = await asyncESM.loaderPromise;
          return loader.import(specifier, normalizeReferrerURL(filename));
        }
      });
    }
    compiledWrapper = compiled.function;
  var inspectorWrapper = null;
  if (getOptionValue('--inspect-brk') && process._eval == null) {
    if (!resolvedArgv) {
      // We enter the repl if we're not given a filename argument.
      if (process.argv[1]) {
        resolvedArgv = Module._resolveFilename(process.argv[1], null, false);
      } else {
        resolvedArgv = 'repl';
      }
    }
    // Set breakpoint on module start
    if (!hasPausedEntry && filename === resolvedArgv) {
      hasPausedEntry = true;
      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;
    }
  const dirname = path.dirname(filename);
  const require = makeRequireFunction(this, redirects);
  var result;
  const exports = this.exports;
  const thisValue = exports;
  const module = this;
  if (requireDepth === 0) statCache = new Map();
  if (inspectorWrapper) {
    result = inspectorWrapper(compiledWrapper, thisValue, exports,
                              require, module, filename, dirname);
  } else {
    result = compiledWrapper.call(thisValue, exports, require, module,
                                  filename, dirname);
  if (requireDepth === 0) statCache = null;
  return result;
// Native extension for .js
Module._extensions['.js'] = function(module, filename) {
  const content = fs.readFileSync(filename, 'utf8');
  module._compile(stripBOM(content), filename);
// Native extension for .json
Module._extensions['.json'] = function(module, filename) {
  const content = fs.readFileSync(filename, 'utf8');
  if (manifest) {
    const moduleURL = pathToFileURL(filename);
    manifest.assertIntegrity(moduleURL, content);
  try {
    module.exports = JSON.parse(stripBOM(content));
  } catch (err) {
    err.message = filename + ': ' + err.message;
    throw err;
// Native extension for .node
Module._extensions['.node'] = function(module, filename) {
  if (manifest) {
    const content = fs.readFileSync(filename);
    const moduleURL = pathToFileURL(filename);
    manifest.assertIntegrity(moduleURL, content);
  // Be aware this doesn't use `content`
  return process.dlopen(module, path.toNamespacedPath(filename));
Module._extensions['.mjs'] = function(module, filename) {
  throw new ERR_REQUIRE_ESM(filename);
// Bootstrap main module.
Module.runMain = function() {
  // Load the main module--the command line argument.
  if (experimentalModules) {
    asyncESM.loaderPromise.then((loader) => {
      return loader.import(pathToFileURL(process.argv[1]).pathname);
    })
    .catch((e) => {
      internalBinding('errors').triggerUncaughtException(
        e,
        true /* fromPromise */
      );
    });
    return;
  Module._load(process.argv[1], null, true);
function createRequireFromPath(filename) {
  // Allow a directory to be passed as the filename
  const trailingSlash =
    filename.endsWith('/') || (isWindows && filename.endsWith('\\'));
  const proxyPath = trailingSlash ?
    path.join(filename, 'noop.js') :
    filename;
  const m = new Module(proxyPath);
  m.filename = proxyPath;
  m.paths = Module._nodeModulePaths(m.path);
  return makeRequireFunction(m, null);
Module.createRequireFromPath = createRequireFromPath;
const createRequireError = 'must be a file URL object, file URL string, or ' +
  'absolute path string';
function createRequire(filename) {
  let filepath;
  if (filename instanceof URL ||
      (typeof filename === 'string' && !path.isAbsolute(filename))) {
    try {
      filepath = fileURLToPath(filename);
    } catch {
      throw new ERR_INVALID_ARG_VALUE('filename', filename,
                                      createRequireError);
    }
  } else if (typeof filename !== 'string') {
    throw new ERR_INVALID_ARG_VALUE('filename', filename, createRequireError);
  } else {
    filepath = filename;
  return createRequireFromPath(filepath);
Module.createRequire = createRequire;
Module._initPaths = function() {
  var homeDir;
  var nodePath;
  if (isWindows) {
    homeDir = process.env.USERPROFILE;
    nodePath = process.env.NODE_PATH;
  } else {
    homeDir = safeGetenv('HOME');
    nodePath = safeGetenv('NODE_PATH');
  // $PREFIX/lib/node, where $PREFIX is the root of the Node.js installation.
  var prefixDir;
  // process.execPath is $PREFIX/bin/node except on Windows where it is
  // $PREFIX\node.exe.
  if (isWindows) {
    prefixDir = path.resolve(process.execPath, '..');
  } else {
    prefixDir = path.resolve(process.execPath, '..', '..');
  var paths = [path.resolve(prefixDir, 'lib', 'node')];
  if (homeDir) {
    paths.unshift(path.resolve(homeDir, '.node_libraries'));
    paths.unshift(path.resolve(homeDir, '.node_modules'));
  if (nodePath) {
    paths = nodePath.split(path.delimiter).filter(function pathsFilterCB(path) {
      return !!path;
    }).concat(paths);
  modulePaths = paths;
  // Clone as a shallow copy, for introspection.
  Module.globalPaths = modulePaths.slice(0);
Module._preloadModules = function(requests) {
  if (!Array.isArray(requests))
    return;
  // Preloaded modules have a dummy parent module which is deemed to exist
  // in the current working directory. This seeds the search path for
  // preloaded modules.
  const parent = new Module('internal/preload', null);
  try {
    parent.paths = Module._nodeModulePaths(process.cwd());
  } catch (e) {
    if (e.code !== 'ENOENT') {
      throw e;
    }
  for (var n = 0; n < requests.length; n++)
    parent.require(requests[n]);
// Backwards compatibility
Module.Module = Module;
// We have to load the esm things after module.exports!
if (experimentalModules) {
  asyncESM = require('internal/process/esm_loader');
  ModuleJob = require('internal/modules/esm/module_job');
  createDynamicModule = require(
    'internal/modules/esm/create_dynamic_module');
'use strict';
const { FunctionPrototype } = primordials;
const {
  ERR_INVALID_RETURN_PROPERTY,
  ERR_INVALID_RETURN_PROPERTY_VALUE,
  ERR_INVALID_RETURN_VALUE,
  ERR_MISSING_DYNAMIC_INSTANTIATE_HOOK,
  ERR_UNKNOWN_MODULE_FORMAT
} = require('internal/errors').codes;
const {
  URL,
  pathToFileURL
} = require('url');
const { validateString } = require('internal/validators');
const ModuleMap = require('internal/modules/esm/module_map');
const ModuleJob = require('internal/modules/esm/module_job');
const defaultResolve = require('internal/modules/esm/default_resolve');
const createDynamicModule = require(
  'internal/modules/esm/create_dynamic_module');
const { translators } = require('internal/modules/esm/translators');
const { ModuleWrap } = internalBinding('module_wrap');
const debug = require('internal/util/debuglog').debuglog('esm');
const {
  Object,
  SafeMap
} = primordials;
/* A Loader instance is used as the main entry point for loading ES modules.
 * Currently, this is a singleton -- there is only one used for loading
 * the main module and everything in its dependency graph. */
class Loader {
  constructor() {
    // Methods which translate input code or other information
    // into es modules
    this.translators = translators;
    // Registry of loaded modules, akin to `require.cache`
    this.moduleMap = new ModuleMap();
    // Map of already-loaded CJS modules to use
    this.cjsCache = new SafeMap();
    // The resolver has the signature
    //   (specifier : string, parentURL : string, defaultResolve)
    //       -> Promise<{ url : string, format: string }>
    // where defaultResolve is ModuleRequest.resolve (having the same
    // signature itself).
    // If `.format` on the returned value is 'dynamic', .dynamicInstantiate
    // will be used as described below.
    this._resolve = defaultResolve;
    // This hook is only called when resolve(...).format is 'dynamic' and
    // has the signature
    //   (url : string) -> Promise<{ exports: { ... }, execute: function }>
    // Where `exports` is an object whose property names define the exported
    // names of the generated module. `execute` is a function that receives
    // an object with the same keys as `exports`, whose values are get/set
    // functions for the actual exported values.
    this._dynamicInstantiate = undefined;
    // The index for assigning unique URLs to anonymous module evaluation
    this.evalIndex = 0;
  async resolve(specifier, parentURL) {
    const isMain = parentURL === undefined;
    if (!isMain)
      validateString(parentURL, 'parentURL');
    const resolved = await this._resolve(specifier, parentURL, defaultResolve);
    if (typeof resolved !== 'object')
      throw new ERR_INVALID_RETURN_VALUE(
        'object', 'loader resolve', resolved
      );
    const { url, format } = resolved;
    if (typeof url !== 'string')
      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(
        'string', 'loader resolve', 'url', url
      );
    if (typeof format !== 'string')
      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(
        'string', 'loader resolve', 'format', format
      );
    if (format === 'builtin')
      return { url: `node:${url}`, format };
    if (this._resolve !== defaultResolve) {
      try {
        new URL(url);
      } catch {
        throw new ERR_INVALID_RETURN_PROPERTY(
          'url', 'loader resolve', 'url', url
        );
      }
    }
    if (format !== 'dynamic' && !url.startsWith('file:'))
      throw new ERR_INVALID_RETURN_PROPERTY(
        'file: url', 'loader resolve', 'url', url
      );
    return { url, format };
  async eval(
    source,
    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href
  ) {
    const evalInstance = async (url) => {
      return {
        module: new ModuleWrap(source, url),
        reflect: undefined
      };
    };
    const job = new ModuleJob(this, url, evalInstance, false);
    this.moduleMap.set(url, job);
    const { module, result } = await job.run();
    return {
      namespace: module.namespace(),
      result
    };
  async import(specifier, parent) {
    const job = await this.getModuleJob(specifier, parent);
    const { module } = await job.run();
    return module.namespace();
  hook({ resolve, dynamicInstantiate }) {
    // Use .bind() to avoid giving access to the Loader instance when called.
    if (resolve !== undefined)
      this._resolve = FunctionPrototype.bind(resolve, null);
    if (dynamicInstantiate !== undefined) {
      this._dynamicInstantiate =
        FunctionPrototype.bind(dynamicInstantiate, null);
    }
  async getModuleJob(specifier, parentURL) {
    const { url, format } = await this.resolve(specifier, parentURL);
    let job = this.moduleMap.get(url);
    if (job !== undefined)
      return job;
    let loaderInstance;
    if (format === 'dynamic') {
      if (typeof this._dynamicInstantiate !== 'function')
        throw new ERR_MISSING_DYNAMIC_INSTANTIATE_HOOK();
      loaderInstance = async (url) => {
        debug(`Translating dynamic ${url}`);
        const { exports, execute } = await this._dynamicInstantiate(url);
        return createDynamicModule([], exports, url, (reflect) => {
          debug(`Loading dynamic ${url}`);
          execute(reflect.exports);
        });
      };
    } else {
      if (!translators.has(format))
        throw new ERR_UNKNOWN_MODULE_FORMAT(format);
      loaderInstance = translators.get(format);
    }
    job = new ModuleJob(this, url, loaderInstance, parentURL === undefined);
    this.moduleMap.set(url, job);
    return job;
Object.setPrototypeOf(Loader.prototype, null);
exports.Loader = Loader;
'use strict';
const { ArrayPrototype, JSON, Object } = primordials;
const debug = require('internal/util/debuglog').debuglog('esm');
function createImport(impt, index) {
  const imptPath = JSON.stringify(impt);
  return `import * as $import_${index} from ${imptPath};
import.meta.imports[${imptPath}] = $import_${index};`;
function createExport(expt) {
  const name = `${expt}`;
  return `let $${name};
export { $${name} as ${name} };
import.meta.exports.${name} = {
  get: () => $${name},
  set: (v) => $${name} = v,
};`;
const createDynamicModule = (imports, exports, url = '', evaluate) => {
  debug('creating ESM facade for %s with exports: %j', url, exports);
  const source = `
${ArrayPrototype.join(ArrayPrototype.map(imports, createImport), '\n')}
${ArrayPrototype.join(ArrayPrototype.map(exports, createExport), '\n')}
import.meta.done();
  const { ModuleWrap, callbackMap } = internalBinding('module_wrap');
  const m = new ModuleWrap(source, `${url}`);
  const readyfns = new Set();
  const reflect = {
    exports: Object.create(null),
    onReady: (cb) => { readyfns.add(cb); },
  };
  if (imports.length)
    reflect.imports = Object.create(null);
  callbackMap.set(m, {
    initializeImportMeta: (meta, wrap) => {
      meta.exports = reflect.exports;
      if (reflect.imports)
        meta.imports = reflect.imports;
      meta.done = () => {
        evaluate(reflect);
        reflect.onReady = (cb) => cb(reflect);
        for (const fn of readyfns) {
          readyfns.delete(fn);
          fn(reflect);
        }
      };
    },
  });
  return {
    module: m,
    reflect,
  };
module.exports = createDynamicModule;
'use strict';
const internalFS = require('internal/fs/utils');
const { NativeModule } = require('internal/bootstrap/loaders');
const { extname } = require('path');
const { realpathSync } = require('fs');
const { getOptionValue } = require('internal/options');
const preserveSymlinks = getOptionValue('--preserve-symlinks');
const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');
const typeFlag = getOptionValue('--input-type');
const experimentalWasmModules = getOptionValue('--experimental-wasm-modules');
const { resolve: moduleWrapResolve,
        getPackageType } = internalBinding('module_wrap');
const { pathToFileURL, fileURLToPath } = require('internal/url');
const { ERR_INPUT_TYPE_NOT_ALLOWED,
        ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;
const { SafeMap } = primordials;
const realpathCache = new SafeMap();
// const TYPE_NONE = 0;
// const TYPE_COMMONJS = 1;
const TYPE_MODULE = 2;
const extensionFormatMap = {
  '__proto__': null,
  '.cjs': 'commonjs',
  '.js': 'module',
  '.json': 'json',
  '.mjs': 'module'
const legacyExtensionFormatMap = {
  '__proto__': null,
  '.cjs': 'commonjs',
  '.js': 'commonjs',
  '.json': 'json',
  '.mjs': 'module',
  '.node': 'commonjs'
if (experimentalWasmModules)
  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';
function resolve(specifier, parentURL) {
  if (NativeModule.canBeRequiredByUsers(specifier)) {
    return {
      url: specifier,
      format: 'builtin'
    };
  const isMain = parentURL === undefined;
  if (isMain)
    parentURL = pathToFileURL(`${process.cwd()}/`).href;
  let url = moduleWrapResolve(specifier, parentURL);
  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {
    const real = realpathSync(fileURLToPath(url), {
      [internalFS.realpathCacheKey]: realpathCache
    });
    const old = url;
    url = pathToFileURL(real);
    url.search = old.search;
    url.hash = old.hash;
  const type = getPackageType(url.href);
  const ext = extname(url.pathname);
  const extMap =
      type !== TYPE_MODULE ? legacyExtensionFormatMap : extensionFormatMap;
  let format = extMap[ext];
  if (isMain && typeFlag) {
    // This is the initial entry point to the program, and --input-type has
    // been passed as an option; but --input-type can only be used with
    // --eval, --print or STDIN string input. It is not allowed with file
    // input, to avoid user confusion over how expansive the effect of the
    // flag should be (i.e. entry point only, package scope surrounding the
    // entry point, etc.).
    throw new ERR_INPUT_TYPE_NOT_ALLOWED();
  if (!format) {
    if (isMain)
      format = type === TYPE_MODULE ? 'module' : 'commonjs';
    else
      throw new ERR_UNKNOWN_FILE_EXTENSION(fileURLToPath(url));
  return { url: `${url}`, format };
module.exports = resolve;
'use strict';
const {
  Object,
  SafeSet,
  SafePromise
} = primordials;
const { ModuleWrap } = internalBinding('module_wrap');
const { decorateErrorStack } = require('internal/util');
const { getOptionValue } = require('internal/options');
const assert = require('internal/assert');
const resolvedPromise = SafePromise.resolve();
function noop() {}
let hasPausedEntry = false;
/* A ModuleJob tracks the loading of a single Module, and the ModuleJobs of
 * its dependencies, over time. */
class ModuleJob {
  // `loader` is the Loader instance used for loading dependencies.
  // `moduleProvider` is a function
  constructor(loader, url, moduleProvider, isMain) {
    this.loader = loader;
    this.isMain = isMain;
    // This is a Promise<{ module, reflect }>, whose fields will be copied
    // onto `this` by `link()` below once it has been resolved.
    this.modulePromise = moduleProvider.call(loader, url, isMain);
    this.module = undefined;
    this.reflect = undefined;
    // Wait for the ModuleWrap instance being linked with all dependencies.
    const link = async () => {
      ({ module: this.module,
         reflect: this.reflect } = await this.modulePromise);
      assert(this.module instanceof ModuleWrap);
      const dependencyJobs = [];
      const promises = this.module.link(async (specifier) => {
        const jobPromise = this.loader.getModuleJob(specifier, url);
        dependencyJobs.push(jobPromise);
        return (await (await jobPromise).modulePromise).module;
      });
      if (promises !== undefined)
        await SafePromise.all(promises);
      return SafePromise.all(dependencyJobs);
    };
    // Promise for the list of all dependencyJobs.
    this.linked = link();
    // This promise is awaited later anyway, so silence
    // 'unhandled rejection' warnings.
    this.linked.catch(noop);
    // instantiated == deep dependency jobs wrappers instantiated,
    // module wrapper instantiated
    this.instantiated = undefined;
  async instantiate() {
    if (!this.instantiated) {
      return this.instantiated = this._instantiate();
    }
    await this.instantiated;
    return this.module;
  // This method instantiates the module associated with this job and its
  // entire dependency graph, i.e. creates all the module namespaces and the
  // exported/imported variables.
  async _instantiate() {
    const jobsInGraph = new SafeSet();
    const addJobsToDependencyGraph = async (moduleJob) => {
      if (jobsInGraph.has(moduleJob)) {
        return;
      }
      jobsInGraph.add(moduleJob);
      const dependencyJobs = await moduleJob.linked;
      return Promise.all(dependencyJobs.map(addJobsToDependencyGraph));
    };
    await addJobsToDependencyGraph(this);
    try {
      if (!hasPausedEntry && this.isMain && getOptionValue('--inspect-brk')) {
        hasPausedEntry = true;
        const initWrapper = internalBinding('inspector').callAndPauseOnStart;
        initWrapper(this.module.instantiate, this.module);
      } else {
        this.module.instantiate();
      }
    } catch (e) {
      decorateErrorStack(e);
      throw e;
    }
    for (const dependencyJob of jobsInGraph) {
      // Calling `this.module.instantiate()` instantiates not only the
      // ModuleWrap in this module, but all modules in the graph.
      dependencyJob.instantiated = resolvedPromise;
    }
    return this.module;
  async run() {
    const module = await this.instantiate();
    const timeout = -1;
    const breakOnSigint = false;
    return { module, result: module.evaluate(timeout, breakOnSigint) };
Object.setPrototypeOf(ModuleJob.prototype, null);
module.exports = ModuleJob;
'use strict';
const ModuleJob = require('internal/modules/esm/module_job');
const {
  SafeMap
} = primordials;
const debug = require('internal/util/debuglog').debuglog('esm');
const { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;
const { validateString } = require('internal/validators');
// Tracks the state of the loader-level module cache
class ModuleMap extends SafeMap {
  get(url) {
    validateString(url, 'url');
    return super.get(url);
  set(url, job) {
    validateString(url, 'url');
    if (job instanceof ModuleJob !== true) {
      throw new ERR_INVALID_ARG_TYPE('job', 'ModuleJob', job);
    }
    debug(`Storing ${url} in ModuleMap`);
    return super.set(url, job);
  has(url) {
    validateString(url, 'url');
    return super.has(url);
module.exports = ModuleMap;
'use strict';
/* global WebAssembly */
const {
  JSON,
  Object,
  SafeMap,
  StringPrototype
} = primordials;
const {
  stripShebang,
  stripBOM,
  loadNativeModule
} = require('internal/modules/cjs/helpers');
const CJSModule = require('internal/modules/cjs/loader');
const internalURLModule = require('internal/url');
const createDynamicModule = require(
  'internal/modules/esm/create_dynamic_module');
const fs = require('fs');
const { fileURLToPath, URL } = require('url');
const { debuglog } = require('internal/util/debuglog');
const { promisify } = require('internal/util');
const esmLoader = require('internal/process/esm_loader');
const {
  ERR_UNKNOWN_BUILTIN_MODULE
} = require('internal/errors').codes;
const readFileAsync = promisify(fs.readFile);
const JsonParse = JSON.parse;
const debug = debuglog('esm');
const translators = new SafeMap();
exports.translators = translators;
function initializeImportMeta(meta, { url }) {
  meta.url = url;
async function importModuleDynamically(specifier, { url }) {
  const loader = await esmLoader.loaderPromise;
  return loader.import(specifier, url);
// Strategy for loading a standard JavaScript module
translators.set('module', async function moduleStrategy(url) {
  const source = `${await readFileAsync(new URL(url))}`;
  debug(`Translating StandardModule ${url}`);
  const { ModuleWrap, callbackMap } = internalBinding('module_wrap');
  const module = new ModuleWrap(stripShebang(source), url);
  callbackMap.set(module, {
    initializeImportMeta,
    importModuleDynamically,
  });
  return {
    module,
    reflect: undefined,
  };
// Strategy for loading a node-style CommonJS module
const isWindows = process.platform === 'win32';
const winSepRegEx = /\//g;
translators.set('commonjs', async function commonjsStrategy(url, isMain) {
  debug(`Translating CJSModule ${url}`);
  const pathname = internalURLModule.fileURLToPath(new URL(url));
  const cached = this.cjsCache.get(url);
  if (cached) {
    this.cjsCache.delete(url);
    return cached;
  const module = CJSModule._cache[
    isWindows ? StringPrototype.replace(pathname, winSepRegEx, '\\') : pathname
  ];
  if (module && module.loaded) {
    const exports = module.exports;
    return createDynamicModule([], ['default'], url, (reflect) => {
      reflect.exports.default.set(exports);
    });
  return createDynamicModule([], ['default'], url, () => {
    debug(`Loading CJSModule ${url}`);
    // We don't care about the return val of _load here because Module#load
    // will handle it for us by checking the loader registry and filling the
    // exports like above
    CJSModule._load(pathname, undefined, isMain);
  });
// Strategy for loading a node builtin CommonJS module that isn't
// through normal resolution
translators.set('builtin', async function builtinStrategy(url) {
  debug(`Translating BuiltinModule ${url}`);
  // Slice 'node:' scheme
  const id = url.slice(5);
  const module = loadNativeModule(id, url, true);
  if (!module) {
    throw new ERR_UNKNOWN_BUILTIN_MODULE(id);
  return createDynamicModule(
    [], [...module.exportKeys, 'default'], url, (reflect) => {
      debug(`Loading BuiltinModule ${url}`);
      module.reflect = reflect;
      for (const key of module.exportKeys)
        reflect.exports[key].set(module.exports[key]);
      reflect.exports.default.set(module.exports);
    });
// Strategy for loading a JSON file
translators.set('json', async function jsonStrategy(url) {
  debug(`Translating JSONModule ${url}`);
  debug(`Loading JSONModule ${url}`);
  const pathname = fileURLToPath(url);
  const modulePath = isWindows ?
    StringPrototype.replace(pathname, winSepRegEx, '\\') : pathname;
  let module = CJSModule._cache[modulePath];
  if (module && module.loaded) {
    const exports = module.exports;
    return createDynamicModule([], ['default'], url, (reflect) => {
      reflect.exports.default.set(exports);
    });
  const content = await readFileAsync(pathname, 'utf-8');
  // A require call could have been called on the same file during loading and
  // that resolves synchronously. To make sure we always return the identical
  // export, we have to check again if the module already exists or not.
  module = CJSModule._cache[modulePath];
  if (module && module.loaded) {
    const exports = module.exports;
    return createDynamicModule(['default'], url, (reflect) => {
      reflect.exports.default.set(exports);
    });
  try {
    const exports = JsonParse(stripBOM(content));
    module = {
      exports,
      loaded: true
    };
  } catch (err) {
    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON
    // parse error instead of just manipulating the original error message.
    // That would allow to add further properties and maybe additional
    // debugging information.
    err.message = pathname + ': ' + err.message;
    throw err;
  CJSModule._cache[modulePath] = module;
  return createDynamicModule([], ['default'], url, (reflect) => {
    debug(`Parsing JSONModule ${url}`);
    reflect.exports.default.set(module.exports);
  });
// Strategy for loading a wasm module
translators.set('wasm', async function(url) {
  const pathname = fileURLToPath(url);
  const buffer = await readFileAsync(pathname);
  debug(`Translating WASMModule ${url}`);
  let compiled;
  try {
    compiled = await WebAssembly.compile(buffer);
  } catch (err) {
    err.message = pathname + ': ' + err.message;
    throw err;
  const imports =
      WebAssembly.Module.imports(compiled).map(({ module }) => module);
  const exports = WebAssembly.Module.exports(compiled).map(({ name }) => name);
  return createDynamicModule(imports, exports, url, (reflect) => {
    const { exports } = new WebAssembly.Instance(compiled, reflect.imports);
    for (const expt of Object.keys(exports))
      reflect.exports[expt].set(exports[expt]);
  });
'use strict';
const Buffer = require('buffer').Buffer;
const { writeBuffer } = internalBinding('fs');
const errors = require('internal/errors');
// IPv4 Segment
const v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';
const v4Str = `(${v4Seg}[.]){3}${v4Seg}`;
const IPv4Reg = new RegExp(`^${v4Str}$`);
// IPv6 Segment
const v6Seg = '(?:[0-9a-fA-F]{1,4})';
const IPv6Reg = new RegExp('^(' +
  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +
  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +
  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +
  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +
  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +
  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +
  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +
  `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +
')(%[0-9a-zA-Z]{1,})?$');
function isIPv4(s) {
  return IPv4Reg.test(s);
function isIPv6(s) {
  return IPv6Reg.test(s);
function isIP(s) {
  if (isIPv4(s)) return 4;
  if (isIPv6(s)) return 6;
  return 0;
// Check that the port number is not NaN when coerced to a number,
// is an integer and that it falls within the legal range of port numbers.
function isLegalPort(port) {
  if ((typeof port !== 'number' && typeof port !== 'string') ||
      (typeof port === 'string' && port.trim().length === 0))
    return false;
  return +port === (+port >>> 0) && port <= 0xFFFF;
function makeSyncWrite(fd) {
  return function(chunk, enc, cb) {
    if (enc !== 'buffer')
      chunk = Buffer.from(chunk, enc);
    this._handle.bytesWritten += chunk.length;
    const ctx = {};
    writeBuffer(fd, chunk, 0, chunk.length, null, undefined, ctx);
    if (ctx.errno !== undefined) {
      const ex = errors.uvException(ctx);
      // Legacy: net writes have .code === .errno, whereas writeBuffer gives the
      // raw errno number in .errno.
      ex.errno = ex.code;
      return cb(ex);
    }
    cb();
  };
module.exports = {
  isIP,
  isIPv4,
  isIPv6,
  isLegalPort,
  makeSyncWrite,
  normalizedArgsSymbol: Symbol('normalizedArgs')
'use strict';
const { getOptions } = internalBinding('options');
const { options, aliases } = getOptions();
function getOptionValue(option) {
  const result = options.get(option);
  if (!result) {
    return undefined;
  return result.value;
module.exports = {
  options,
  aliases,
  getOptionValue
'use strict';
const {
  SafeMap,
  SafeWeakMap,
  Object,
  RegExpPrototype,
  uncurryThis
} = primordials;
const {
  canBeRequiredByUsers
} = require('internal/bootstrap/loaders').NativeModule;
const {
  ERR_MANIFEST_ASSERT_INTEGRITY,
  ERR_MANIFEST_INTEGRITY_MISMATCH,
  ERR_MANIFEST_INVALID_RESOURCE_FIELD,
  ERR_MANIFEST_UNKNOWN_ONERROR,
} = require('internal/errors').codes;
const debug = require('internal/util/debuglog').debuglog('policy');
const SRI = require('internal/policy/sri');
const crypto = require('crypto');
const { Buffer } = require('buffer');
const { URL } = require('url');
const { createHash, timingSafeEqual } = crypto;
const HashUpdate = uncurryThis(crypto.Hash.prototype.update);
const HashDigest = uncurryThis(crypto.Hash.prototype.digest);
const BufferEquals = uncurryThis(Buffer.prototype.equals);
const BufferToString = uncurryThis(Buffer.prototype.toString);
const { entries } = Object;
const kIntegrities = new SafeWeakMap();
const kDependencies = new SafeWeakMap();
const kReactions = new SafeWeakMap();
const kRelativeURLStringPattern = /^\.{0,2}\//;
const { getOptionValue } = require('internal/options');
const shouldAbortOnUncaughtException =
  getOptionValue('--abort-on-uncaught-exception');
const { abort, exit, _rawDebug } = process;
function REACTION_THROW(error) {
  throw error;
function REACTION_EXIT(error) {
  REACTION_LOG(error);
  if (shouldAbortOnUncaughtException) {
    abort();
  exit(1);
function REACTION_LOG(error) {
  _rawDebug(error.stack);
class Manifest {
  constructor(obj, manifestURL) {
    const integrities = {
      __proto__: null,
    };
    const dependencies = {
      __proto__: null,
    };
    let reaction = REACTION_THROW;
    if (obj.onerror) {
      const behavior = obj.onerror;
      if (behavior === 'throw') {
      } else if (behavior === 'exit') {
        reaction = REACTION_EXIT;
      } else if (behavior === 'log') {
        reaction = REACTION_LOG;
      } else {
        throw new ERR_MANIFEST_UNKNOWN_ONERROR(behavior);
      }
    }
    kReactions.set(this, reaction);
    const manifestEntries = entries(obj.resources);
    for (var i = 0; i < manifestEntries.length; i++) {
      let url = manifestEntries[i][0];
      const originalURL = url;
      if (RegExpPrototype.test(kRelativeURLStringPattern, url)) {
        url = new URL(url, manifestURL).href;
      }
      let integrity = manifestEntries[i][1].integrity;
      if (!integrity) integrity = null;
      if (integrity != null) {
        debug(`Manifest contains integrity for url ${originalURL}`);
        if (typeof integrity === 'string') {
          const sri = Object.freeze(SRI.parse(integrity));
          if (url in integrities) {
            const old = integrities[url];
            let mismatch = false;
            if (old.length !== sri.length) {
              mismatch = true;
            } else {
              compare:
              for (var sriI = 0; sriI < sri.length; sriI++) {
                for (var oldI = 0; oldI < old.length; oldI++) {
                  if (sri[sriI].algorithm === old[oldI].algorithm &&
                    BufferEquals(sri[sriI].value, old[oldI].value) &&
                    sri[sriI].options === old[oldI].options) {
                    continue compare;
                  }
                }
                mismatch = true;
                break compare;
              }
            }
            if (mismatch) {
              throw new ERR_MANIFEST_INTEGRITY_MISMATCH(url);
            }
          }
          integrities[url] = sri;
        } else if (integrity === true) {
          integrities[url] = true;
        } else {
          throw new ERR_MANIFEST_INVALID_RESOURCE_FIELD(url, 'integrity');
        }
      }
      let dependencyMap = manifestEntries[i][1].dependencies;
      if (dependencyMap === null || dependencyMap === undefined) {
        dependencyMap = {};
      }
      if (typeof dependencyMap === 'object' && !Array.isArray(dependencyMap)) {
        dependencies[url] = new SafeMap(Object.entries(dependencyMap).map(
          ([ from, to ]) => {
            if (to === true) {
              return [from, to];
            }
            if (canBeRequiredByUsers(to)) {
              return [from, `node:${to}`];
            } else if (RegExpPrototype.test(kRelativeURLStringPattern, to)) {
              return [from, new URL(to, manifestURL).href];
            }
            return [from, new URL(to).href];
          })
        );
      } else if (dependencyMap === true) {
        dependencies[url] = true;
      } else {
        throw new ERR_MANIFEST_INVALID_RESOURCE_FIELD(url, 'dependencies');
      }
    }
    Object.freeze(integrities);
    kIntegrities.set(this, integrities);
    Object.freeze(dependencies);
    kDependencies.set(this, dependencies);
    Object.freeze(this);
  getRedirects(requester) {
    const dependencies = kDependencies.get(this);
    if (dependencies && requester in dependencies) {
      return {
        map: dependencies[requester],
        reaction: kReactions.get(this)
      };
    }
    return null;
  assertIntegrity(url, content) {
    debug(`Checking integrity of ${url}`);
    const integrities = kIntegrities.get(this);
    const realIntegrities = new SafeMap();
    if (integrities && url in integrities) {
      const integrityEntries = integrities[url];
      if (integrityEntries === true) return true;
      // Avoid clobbered Symbol.iterator
      for (var i = 0; i < integrityEntries.length; i++) {
        const {
          algorithm,
          value: expected
        } = integrityEntries[i];
        const hash = createHash(algorithm);
        HashUpdate(hash, content);
        const digest = HashDigest(hash);
        if (digest.length === expected.length &&
          timingSafeEqual(digest, expected)) {
          return true;
        }
        realIntegrities.set(algorithm, BufferToString(digest, 'base64'));
      }
    }
    const error = new ERR_MANIFEST_ASSERT_INTEGRITY(url, realIntegrities);
    kReactions.get(this)(error);
// Lock everything down to avoid problems even if reference is leaked somehow
Object.setPrototypeOf(Manifest, null);
Object.setPrototypeOf(Manifest.prototype, null);
Object.freeze(Manifest);
Object.freeze(Manifest.prototype);
module.exports = Object.freeze({ Manifest });
'use strict';
// Value of https://w3c.github.io/webappsec-subresource-integrity/#the-integrity-attribute
const {
  Object,
  RegExpPrototype,
  StringPrototype
} = primordials;
// Returns [{algorithm, value (in base64 string), options,}]
const {
  ERR_SRI_PARSE
} = require('internal/errors').codes;
const kWSP = '[\\x20\\x09]';
const kVCHAR = '[\\x21-\\x7E]';
const kHASH_ALGO = 'sha256|sha384|sha512';
// Base64
const kHASH_VALUE = '[A-Za-z0-9+/]+[=]{0,2}';
const kHASH_EXPRESSION = `(${kHASH_ALGO})-(${kHASH_VALUE})`;
const kOPTION_EXPRESSION = `(${kVCHAR}*)`;
const kHASH_WITH_OPTIONS = `${kHASH_EXPRESSION}(?:[?](${kOPTION_EXPRESSION}))?`;
const kSRIPattern = new RegExp(`(${kWSP}*)(?:${kHASH_WITH_OPTIONS})`, 'g');
const { freeze } = Object;
Object.seal(kSRIPattern);
const kAllWSP = new RegExp(`^${kWSP}*$`);
Object.seal(kAllWSP);
const BufferFrom = require('buffer').Buffer.from;
const parse = (str) => {
  kSRIPattern.lastIndex = 0;
  let prevIndex = 0;
  let match;
  const entries = [];
  while (match = RegExpPrototype.exec(kSRIPattern, str)) {
    if (match.index !== prevIndex) {
      throw new ERR_SRI_PARSE(str, prevIndex);
    }
    if (entries.length > 0 && match[1] === '') {
      throw new ERR_SRI_PARSE(str, prevIndex);
    }
    // Avoid setters being fired
    Object.defineProperty(entries, entries.length, {
      enumerable: true,
      configurable: true,
      value: freeze({
        __proto__: null,
        algorithm: match[2],
        value: BufferFrom(match[3], 'base64'),
        options: match[4] === undefined ? null : match[4],
      })
    });
    prevIndex = prevIndex + match[0].length;
  if (prevIndex !== str.length) {
    if (!RegExpPrototype.test(kAllWSP, StringPrototype.slice(str, prevIndex))) {
      throw new ERR_SRI_PARSE(str, prevIndex);
    }
  return entries;
module.exports = {
  parse,
'use strict';
const kCompare = Symbol('compare');
const kHeap = Symbol('heap');
const kSetPosition = Symbol('setPosition');
const kSize = Symbol('size');
// The PriorityQueue is a basic implementation of a binary heap that accepts
// a custom sorting function via its constructor. This function is passed
// the two nodes to compare, similar to the native Array#sort. Crucially
// this enables priority queues that are based on a comparison of more than
// just a single criteria.
module.exports = class PriorityQueue {
  constructor(comparator, setPosition) {
    if (comparator !== undefined)
      this[kCompare] = comparator;
    if (setPosition !== undefined)
      this[kSetPosition] = setPosition;
    this[kHeap] = new Array(64);
    this[kSize] = 0;
  [kCompare](a, b) {
    return a - b;
  insert(value) {
    const heap = this[kHeap];
    const pos = ++this[kSize];
    heap[pos] = value;
    if (heap.length === pos)
      heap.length *= 2;
    this.percolateUp(pos);
  peek() {
    return this[kHeap][1];
  percolateDown(pos) {
    const compare = this[kCompare];
    const setPosition = this[kSetPosition];
    const heap = this[kHeap];
    const size = this[kSize];
    const item = heap[pos];
    while (pos * 2 <= size) {
      let childIndex = pos * 2 + 1;
      if (childIndex > size || compare(heap[pos * 2], heap[childIndex]) < 0)
        childIndex = pos * 2;
      const child = heap[childIndex];
      if (compare(item, child) <= 0)
        break;
      if (setPosition !== undefined)
        setPosition(child, pos);
      heap[pos] = child;
      pos = childIndex;
    }
    heap[pos] = item;
    if (setPosition !== undefined)
      setPosition(item, pos);
  percolateUp(pos) {
    const heap = this[kHeap];
    const compare = this[kCompare];
    const setPosition = this[kSetPosition];
    const item = heap[pos];
    while (pos > 1) {
      const parent = heap[pos / 2 | 0];
      if (compare(parent, item) <= 0)
        break;
      heap[pos] = parent;
      if (setPosition !== undefined)
        setPosition(parent, pos);
      pos = pos / 2 | 0;
    }
    heap[pos] = item;
    if (setPosition !== undefined)
      setPosition(item, pos);
  removeAt(pos) {
    const heap = this[kHeap];
    const size = --this[kSize];
    heap[pos] = heap[size + 1];
    heap[size + 1] = undefined;
    if (size > 0 && pos <= size) {
      if (pos > 1 && this[kCompare](heap[pos / 2 | 0], heap[pos]) > 0)
        this.percolateUp(pos);
      else
        this.percolateDown(pos);
    }
  remove(value) {
    const heap = this[kHeap];
    const pos = heap.indexOf(value);
    if (pos < 1)
      return false;
    this.removeAt(pos);
    return true;
  shift() {
    const heap = this[kHeap];
    const value = heap[1];
    if (value === undefined)
      return;
    this.removeAt(1);
    return value;
'use strict';
const {
  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING,
} = require('internal/errors').codes;
const { Loader } = require('internal/modules/esm/loader');
const { pathToFileURL } = require('internal/url');
const {
  wrapToModuleMap,
} = require('internal/vm/source_text_module');
exports.initializeImportMetaObject = function(wrap, meta) {
  const { callbackMap } = internalBinding('module_wrap');
  if (callbackMap.has(wrap)) {
    const { initializeImportMeta } = callbackMap.get(wrap);
    if (initializeImportMeta !== undefined) {
      initializeImportMeta(meta, wrapToModuleMap.get(wrap) || wrap);
    }
exports.importModuleDynamicallyCallback = async function(wrap, specifier) {
  const { callbackMap } = internalBinding('module_wrap');
  if (callbackMap.has(wrap)) {
    const { importModuleDynamically } = callbackMap.get(wrap);
    if (importModuleDynamically !== undefined) {
      return importModuleDynamically(
        specifier, wrapToModuleMap.get(wrap) || wrap);
    }
  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();
let loaderResolve;
exports.loaderPromise = new Promise((resolve) => loaderResolve = resolve);
exports.ESMLoader = undefined;
exports.initializeLoader = function(cwd, userLoader) {
  let ESMLoader = new Loader();
  const loaderPromise = (async () => {
    if (userLoader) {
      const hooks = await ESMLoader.import(
        userLoader, pathToFileURL(`${cwd}/`).href);
      ESMLoader = new Loader();
      ESMLoader.hook(hooks);
      exports.ESMLoader = ESMLoader;
    }
    return ESMLoader;
  })();
  loaderResolve(loaderPromise);
  exports.ESMLoader = ESMLoader;
'use strict';
const { JSON } = primordials;
const path = require('path');
const {
  codes: {
    ERR_INVALID_ARG_TYPE,
    ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET
} = require('internal/errors');
const {
  executionAsyncId,
  clearDefaultTriggerAsyncId,
  clearAsyncIdStack,
  hasAsyncIdStack,
  afterHooksExist,
  emitAfter
} = require('internal/async_hooks');
// shouldAbortOnUncaughtToggle is a typed array for faster
// communication with JS.
const { shouldAbortOnUncaughtToggle } = internalBinding('util');
function tryGetCwd() {
  try {
    return process.cwd();
  } catch {
    // getcwd(3) can fail if the current working directory has been deleted.
    // Fall back to the directory name of the (absolute) executable path.
    // It's not really correct but what are the alternatives?
    return path.dirname(process.execPath);
function evalModule(source, print) {
  const { log, error } = require('internal/console/global');
  const { decorateErrorStack } = require('internal/util');
  const asyncESM = require('internal/process/esm_loader');
  asyncESM.loaderPromise.then(async (loader) => {
    const { result } = await loader.eval(source);
    if (print) {
      log(result);
    }
  })
  .catch((e) => {
    decorateErrorStack(e);
    error(e);
    process.exit(1);
  });
function evalScript(name, body, breakFirstLine, print) {
  const CJSModule = require('internal/modules/cjs/loader');
  const { kVmBreakFirstLineSymbol } = require('internal/util');
  const cwd = tryGetCwd();
  const origModule = global.module;  // Set e.g. when called from the REPL.
  const module = new CJSModule(name);
  module.filename = path.join(cwd, name);
  module.paths = CJSModule._nodeModulePaths(cwd);
  global.kVmBreakFirstLineSymbol = kVmBreakFirstLineSymbol;
  const script = `
    global.__filename = ${JSON.stringify(name)};
    global.exports = exports;
    global.module = module;
    global.__dirname = __dirname;
    global.require = require;
    const { kVmBreakFirstLineSymbol } = global;
    delete global.kVmBreakFirstLineSymbol;
    return require("vm").runInThisContext(
      ${JSON.stringify(body)}, {
        filename: ${JSON.stringify(name)},
        displayErrors: true,
        [kVmBreakFirstLineSymbol]: ${!!breakFirstLine}
      });\n`;
  const result = module._compile(script, `${name}-wrapper`);
  if (print) {
    const { log } = require('internal/console/global');
    log(result);
  if (origModule !== undefined)
    global.module = origModule;
const exceptionHandlerState = { captureFn: null };
function setUncaughtExceptionCaptureCallback(fn) {
  if (fn === null) {
    exceptionHandlerState.captureFn = fn;
    shouldAbortOnUncaughtToggle[0] = 1;
    return;
  if (typeof fn !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'null'], fn);
  if (exceptionHandlerState.captureFn !== null) {
    throw new ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET();
  exceptionHandlerState.captureFn = fn;
  shouldAbortOnUncaughtToggle[0] = 0;
function hasUncaughtExceptionCaptureCallback() {
  return exceptionHandlerState.captureFn !== null;
function noop() {}
// XXX(joyeecheung): for some reason this cannot be defined at the top-level
// and exported to be written to process._fatalException, it has to be
// returned as an *anonymous function* wrapped inside a factory function,
// otherwise it breaks the test-timers.setInterval async hooks test -
// this may indicate that node::errors::TriggerUncaughtException() should
// fix up the callback scope before calling into process._fatalException,
// or this function should take extra care of the async hooks before it
// schedules a setImmediate.
function createOnGlobalUncaughtException() {
  // The C++ land node::errors::TriggerUncaughtException() will
  // exit the process if it returns false, and continue execution if it
  // returns true (which indicates that the exception is handled by the user).
  return (er, fromPromise) => {
    // It's possible that defaultTriggerAsyncId was set for a constructor
    // call that threw and was never cleared. So clear it now.
    clearDefaultTriggerAsyncId();
    // If diagnostic reporting is enabled, call into its handler to see
    // whether it is interested in handling the situation.
    // Ignore if the error is scoped inside a domain.
    // use == in the checks as we want to allow for null and undefined
    if (er == null || er.domain == null) {
      try {
        const report = internalBinding('report');
        if (report != null && report.shouldReportOnUncaughtException()) {
          report.writeReport(er ? er.message : 'Exception',
                             'Exception',
                             null,
                             er ? er.stack : undefined);
        }
      } catch {}  // Ignore the exception. Diagnostic reporting is unavailable.
    }
    const type = fromPromise ? 'unhandledRejection' : 'uncaughtException';
    if (exceptionHandlerState.captureFn !== null) {
      exceptionHandlerState.captureFn(er);
    } else if (!process.emit('uncaughtException', er, type)) {
      // If someone handled it, then great. Otherwise, die in C++ land
      // since that means that we'll exit the process, emit the 'exit' event.
      try {
        if (!process._exiting) {
          process._exiting = true;
          process.exitCode = 1;
          process.emit('exit', 1);
        }
      } catch {
        // Nothing to be done about it at this point.
      }
      return false;
    }
    // If we handled an error, then make sure any ticks get processed
    // by ensuring that the next Immediate cycle isn't empty.
    require('timers').setImmediate(noop);
    // Emit the after() hooks now that the exception has been handled.
    if (afterHooksExist()) {
      do {
        emitAfter(executionAsyncId());
      } while (hasAsyncIdStack());
    // Or completely empty the id stack.
    } else {
      clearAsyncIdStack();
    }
    return true;
  };
function readStdin(callback) {
  process.stdin.setEncoding('utf8');
  let code = '';
  process.stdin.on('data', (d) => {
    code += d;
  });
  process.stdin.on('end', () => {
    callback(code);
  });
module.exports = {
  readStdin,
  tryGetCwd,
  evalModule,
  evalScript,
  onGlobalUncaughtException: createOnGlobalUncaughtException(),
  setUncaughtExceptionCaptureCallback,
  hasUncaughtExceptionCaptureCallback
'use strict';
// This file contains process bootstrappers that can only be
// run in the main thread
const {
  errnoException,
  codes: {
    ERR_INVALID_ARG_TYPE,
    ERR_UNKNOWN_CREDENTIAL
} = require('internal/errors');
const {
  parseMode,
  validateUint32,
  validateString
} = require('internal/validators');
const { signals } = internalBinding('constants').os;
// The execution of this function itself should not cause any side effects.
function wrapProcessMethods(binding) {
  // Cache the working directory to prevent lots of lookups. If the working
  // directory is changed by `chdir`, it'll be updated.
  let cachedCwd = '';
  function chdir(directory) {
    validateString(directory, 'directory');
    binding.chdir(directory);
    // Mark cache that it requires an update.
    cachedCwd = '';
  function umask(mask) {
    if (mask !== undefined) {
      mask = parseMode(mask, 'mask');
    }
    return binding.umask(mask);
  function cwd() {
    cachedCwd = binding.cwd();
    return cachedCwd;
  return {
    chdir,
    umask,
    cwd
  };
function wrapPosixCredentialSetters(credentials) {
  const {
    initgroups: _initgroups,
    setgroups: _setgroups,
    setegid: _setegid,
    seteuid: _seteuid,
    setgid: _setgid,
    setuid: _setuid
  } = credentials;
  function initgroups(user, extraGroup) {
    validateId(user, 'user');
    validateId(extraGroup, 'extraGroup');
    // Result is 0 on success, 1 if user is unknown, 2 if group is unknown.
    const result = _initgroups(user, extraGroup);
    if (result === 1) {
      throw new ERR_UNKNOWN_CREDENTIAL('User', user);
    } else if (result === 2) {
      throw new ERR_UNKNOWN_CREDENTIAL('Group', extraGroup);
    }
  function setgroups(groups) {
    if (!Array.isArray(groups)) {
      throw new ERR_INVALID_ARG_TYPE('groups', 'Array', groups);
    }
    for (var i = 0; i < groups.length; i++) {
      validateId(groups[i], `groups[${i}]`);
    }
    // Result is 0 on success. A positive integer indicates that the
    // corresponding group was not found.
    const result = _setgroups(groups);
    if (result > 0) {
      throw new ERR_UNKNOWN_CREDENTIAL('Group', groups[result - 1]);
    }
  function wrapIdSetter(type, method) {
    return function(id) {
      validateId(id, 'id');
      // Result is 0 on success, 1 if credential is unknown.
      const result = method(id);
      if (result === 1) {
        throw new ERR_UNKNOWN_CREDENTIAL(type, id);
      }
    };
  function validateId(id, name) {
    if (typeof id === 'number') {
      validateUint32(id, name);
    } else if (typeof id !== 'string') {
      throw new ERR_INVALID_ARG_TYPE(name, ['number', 'string'], id);
    }
  return {
    initgroups,
    setgroups,
    setegid: wrapIdSetter('Group', _setegid),
    seteuid: wrapIdSetter('User', _seteuid),
    setgid: wrapIdSetter('Group', _setgid),
    setuid: wrapIdSetter('User', _setuid)
  };
let Signal;
function isSignal(event) {
  return typeof event === 'string' && signals[event] !== undefined;
// Worker threads don't receive signals.
function createSignalHandlers() {
  const signalWraps = new Map();
  // Detect presence of a listener for the special signal types
  function startListeningIfSignal(type) {
    if (isSignal(type) && !signalWraps.has(type)) {
      if (Signal === undefined)
        Signal = internalBinding('signal_wrap').Signal;
      const wrap = new Signal();
      wrap.unref();
      wrap.onsignal = process.emit.bind(process, type, type);
      const signum = signals[type];
      const err = wrap.start(signum);
      if (err) {
        wrap.close();
        throw errnoException(err, 'uv_signal_start');
      }
      signalWraps.set(type, wrap);
    }
  function stopListeningIfSignal(type) {
    const wrap = signalWraps.get(type);
    if (wrap !== undefined && process.listenerCount(type) === 0) {
      wrap.close();
      signalWraps.delete(type);
    }
  return {
    startListeningIfSignal,
    stopListeningIfSignal
  };
module.exports = {
  wrapProcessMethods,
  createSignalHandlers,
  wrapPosixCredentialSetters
'use strict';
// This files contains process bootstrappers that can be
// run when setting up each thread, including the main
// thread and the worker threads.
const {
  Object,
  RegExpPrototype,
  SetPrototype,
  StringPrototype
} = primordials;
const {
  errnoException,
  codes: {
    ERR_ASSERTION,
    ERR_CPU_USAGE,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_OPT_VALUE,
    ERR_OUT_OF_RANGE,
    ERR_UNKNOWN_SIGNAL
} = require('internal/errors');
const format = require('internal/util/inspect').format;
const constants = internalBinding('constants').os.signals;
function assert(x, msg) {
  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');
// The execution of this function itself should not cause any side effects.
function wrapProcessMethods(binding) {
  const {
    hrtime: _hrtime,
    hrtimeBigInt: _hrtimeBigInt,
    cpuUsage: _cpuUsage,
    memoryUsage: _memoryUsage,
    resourceUsage: _resourceUsage
  } = binding;
  function _rawDebug(...args) {
    binding._rawDebug(format.apply(null, args));
  // Create the argument array that will be passed to the native function.
  const cpuValues = new Float64Array(2);
  // Replace the native function with the JS version that calls the native
  // function.
  function cpuUsage(prevValue) {
    // If a previous value was passed in, ensure it has the correct shape.
    if (prevValue) {
      if (!previousValueIsValid(prevValue.user)) {
        if (typeof prevValue !== 'object')
          throw new ERR_INVALID_ARG_TYPE('prevValue', 'object', prevValue);
        if (typeof prevValue.user !== 'number') {
          throw new ERR_INVALID_ARG_TYPE('prevValue.user',
                                         'number', prevValue.user);
        }
        throw new ERR_INVALID_OPT_VALUE.RangeError('prevValue.user',
                                                   prevValue.user);
      }
      if (!previousValueIsValid(prevValue.system)) {
        if (typeof prevValue.system !== 'number') {
          throw new ERR_INVALID_ARG_TYPE('prevValue.system',
                                         'number', prevValue.system);
        }
        throw new ERR_INVALID_OPT_VALUE.RangeError('prevValue.system',
                                                   prevValue.system);
      }
    }
    // Call the native function to get the current values.
    const errmsg = _cpuUsage(cpuValues);
    if (errmsg) {
      throw new ERR_CPU_USAGE(errmsg);
    }
    // If a previous value was passed in, return diff of current from previous.
    if (prevValue) {
      return {
        user: cpuValues[0] - prevValue.user,
        system: cpuValues[1] - prevValue.system
      };
    }
    // If no previous value passed in, return current value.
    return {
      user: cpuValues[0],
      system: cpuValues[1]
    };
  // Ensure that a previously passed in value is valid. Currently, the native
  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.
  function previousValueIsValid(num) {
    return typeof num === 'number' &&
        num <= Number.MAX_SAFE_INTEGER &&
        num >= 0;
  // The 3 entries filled in by the original process.hrtime contains
  // the upper/lower 32 bits of the second part of the value,
  // and the remaining nanoseconds of the value.
  const hrValues = new Uint32Array(3);
  function hrtime(time) {
    _hrtime(hrValues);
    if (time !== undefined) {
      if (!Array.isArray(time)) {
        throw new ERR_INVALID_ARG_TYPE('time', 'Array', time);
      }
      if (time.length !== 2) {
        throw new ERR_OUT_OF_RANGE('time', 2, time.length);
      }
      const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];
      const nsec = hrValues[2] - time[1];
      const needsBorrow = nsec < 0;
      return [needsBorrow ? sec - 1 : sec, needsBorrow ? nsec + 1e9 : nsec];
    }
    return [
      hrValues[0] * 0x100000000 + hrValues[1],
      hrValues[2]
    ];
  // Use a BigUint64Array in the closure because this is actually a bit
  // faster than simply returning a BigInt from C++ in V8 7.1.
  const hrBigintValues = new BigUint64Array(1);
  function hrtimeBigInt() {
    _hrtimeBigInt(hrBigintValues);
    return hrBigintValues[0];
  const memValues = new Float64Array(4);
  function memoryUsage() {
    _memoryUsage(memValues);
    return {
      rss: memValues[0],
      heapTotal: memValues[1],
      heapUsed: memValues[2],
      external: memValues[3]
    };
  function exit(code) {
    if (code || code === 0)
      process.exitCode = code;
    if (!process._exiting) {
      process._exiting = true;
      process.emit('exit', process.exitCode || 0);
    }
    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched
    // in the user land. Either document it, or deprecate it in favor of a
    // better public alternative.
    process.reallyExit(process.exitCode || 0);
  function kill(pid, sig) {
    var err;
    // eslint-disable-next-line eqeqeq
    if (pid != (pid | 0)) {
      throw new ERR_INVALID_ARG_TYPE('pid', 'number', pid);
    }
    // Preserve null signal
    if (sig === (sig | 0)) {
      // XXX(joyeecheung): we have to use process._kill here because
      // it's monkey-patched by tests.
      err = process._kill(pid, sig);
    } else {
      sig = sig || 'SIGTERM';
      if (constants[sig]) {
        err = process._kill(pid, constants[sig]);
      } else {
        throw new ERR_UNKNOWN_SIGNAL(sig);
      }
    }
    if (err)
      throw errnoException(err, 'kill');
    return true;
  const resourceValues = new Float64Array(16);
  function resourceUsage() {
    _resourceUsage(resourceValues);
    return {
      userCPUTime: resourceValues[0],
      systemCPUTime: resourceValues[1],
      maxRSS: resourceValues[2],
      sharedMemorySize: resourceValues[3],
      unsharedDataSize: resourceValues[4],
      unsharedStackSize: resourceValues[5],
      minorPageFault: resourceValues[6],
      majorPageFault: resourceValues[7],
      swappedOut: resourceValues[8],
      fsRead: resourceValues[9],
      fsWrite: resourceValues[10],
      ipcSent: resourceValues[11],
      ipcReceived: resourceValues[12],
      signalsCount: resourceValues[13],
      voluntaryContextSwitches: resourceValues[14],
      involuntaryContextSwitches: resourceValues[15]
    };
  return {
    _rawDebug,
    hrtime,
    hrtimeBigInt,
    cpuUsage,
    resourceUsage,
    memoryUsage,
    kill,
    exit
  };
const replaceUnderscoresRegex = /_/g;
const leadingDashesRegex = /^--?/;
const trailingValuesRegex = /=.*$/;
// This builds the initial process.allowedNodeEnvironmentFlags
// from data in the config binding.
function buildAllowedFlags() {
  const {
    envSettings: { kAllowedInEnvironment }
  } = internalBinding('options');
  const { options, aliases } = require('internal/options');
  const allowedNodeEnvironmentFlags = [];
  for (const [name, info] of options) {
    if (info.envVarSettings === kAllowedInEnvironment) {
      allowedNodeEnvironmentFlags.push(name);
    }
  for (const [ from, expansion ] of aliases) {
    let isAccepted = true;
    for (const to of expansion) {
      if (!to.startsWith('-') || to === '--') continue;
      const recursiveExpansion = aliases.get(to);
      if (recursiveExpansion) {
        if (recursiveExpansion[0] === to)
          recursiveExpansion.splice(0, 1);
        expansion.push(...recursiveExpansion);
        continue;
      }
      isAccepted = options.get(to).envVarSettings === kAllowedInEnvironment;
      if (!isAccepted) break;
    }
    if (isAccepted) {
      let canonical = from;
      if (canonical.endsWith('='))
        canonical = canonical.substr(0, canonical.length - 1);
      if (canonical.endsWith(' <arg>'))
        canonical = canonical.substr(0, canonical.length - 4);
      allowedNodeEnvironmentFlags.push(canonical);
    }
  const trimLeadingDashes =
    (flag) => StringPrototype.replace(flag, leadingDashesRegex, '');
  // Save these for comparison against flags provided to
  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.
  // Avoid interference w/ user code by flattening `Set.prototype` into
  // each object.
  const nodeFlags = Object.defineProperties(
    new Set(allowedNodeEnvironmentFlags.map(trimLeadingDashes)),
    Object.getOwnPropertyDescriptors(Set.prototype)
  );
  class NodeEnvironmentFlagsSet extends Set {
    constructor(...args) {
      super(...args);
      // The super constructor consumes `add`, but
      // disallow any future adds.
      Object.defineProperty(this, 'add', {
        value: () => this
      });
    }
    delete() {
      // No-op, `Set` API compatible
      return false;
    }
    clear() {
      // No-op
    }
    has(key) {
      // This will return `true` based on various possible
      // permutations of a flag, including present/missing leading
      // dash(es) and/or underscores-for-dashes.
      // Strips any values after `=`, inclusive.
      // TODO(addaleax): It might be more flexible to run the option parser
      // on a dummy option set and see whether it rejects the argument or
      // not.
      if (typeof key === 'string') {
        key = StringPrototype.replace(key, replaceUnderscoresRegex, '-');
        if (RegExpPrototype.test(leadingDashesRegex, key)) {
          key = StringPrototype.replace(key, trailingValuesRegex, '');
          return SetPrototype.has(this, key);
        }
        return SetPrototype.has(nodeFlags, key);
      }
      return false;
    }
  Object.freeze(NodeEnvironmentFlagsSet.prototype.constructor);
  Object.freeze(NodeEnvironmentFlagsSet.prototype);
  return Object.freeze(new NodeEnvironmentFlagsSet(
    allowedNodeEnvironmentFlags
  ));
// Lazy load internal/trace_events_async_hooks only if the async_hooks
// trace event category is enabled.
let traceEventsAsyncHook;
// Dynamically enable/disable the traceEventsAsyncHook
function toggleTraceCategoryState(asyncHooksEnabled) {
  if (asyncHooksEnabled) {
    if (!traceEventsAsyncHook) {
      traceEventsAsyncHook =
        require('internal/trace_events_async_hooks').createHook();
    }
    traceEventsAsyncHook.enable();
  } else if (traceEventsAsyncHook) {
    traceEventsAsyncHook.disable();
module.exports = {
  toggleTraceCategoryState,
  assert,
  buildAllowedFlags,
  wrapProcessMethods
'use strict';
const { JSON, Object, Reflect } = primordials;
const {
  ERR_MANIFEST_TDZ,
} = require('internal/errors').codes;
const { Manifest } = require('internal/policy/manifest');
let manifest;
let manifestSrc;
let manifestURL;
module.exports = Object.freeze({
  __proto__: null,
  setup(src, url) {
    manifestSrc = src;
    manifestURL = url;
    if (src === null) {
      manifest = null;
      return;
    }
    const json = JSON.parse(src, (_, o) => {
      if (o && typeof o === 'object') {
        Reflect.setPrototypeOf(o, null);
        Object.freeze(o);
      }
      return o;
    });
    manifest = new Manifest(json, url);
  },
  get manifest() {
    if (typeof manifest === 'undefined') {
      throw new ERR_MANIFEST_TDZ();
    }
    return manifest;
  },
  get src() {
    if (typeof manifestSrc === 'undefined') {
      throw new ERR_MANIFEST_TDZ();
    }
    return manifestSrc;
  },
  get url() {
    if (typeof manifestURL === 'undefined') {
      throw new ERR_MANIFEST_TDZ();
    }
    return manifestURL;
  },
  assertIntegrity(moduleURL, content) {
    this.manifest.matchesIntegrity(moduleURL, content);
'use strict';
const { Object } = primordials;
const {
  tickInfo,
  promiseRejectEvents: {
    kPromiseRejectWithNoHandler,
    kPromiseHandlerAddedAfterReject,
    kPromiseResolveAfterResolved,
    kPromiseRejectAfterResolved
  },
  setPromiseRejectCallback
} = internalBinding('task_queue');
const {
  noSideEffectsToString,
  triggerUncaughtException
} = internalBinding('errors');
// *Must* match Environment::TickInfo::Fields in src/env.h.
const kHasRejectionToWarn = 1;
const maybeUnhandledPromises = new WeakMap();
const pendingUnhandledRejections = [];
const asyncHandledRejections = [];
let lastPromiseId = 0;
// --unhandled-rejection=none:
// Emit 'unhandledRejection', but do not emit any warning.
const kIgnoreUnhandledRejections = 0;
// --unhandled-rejection=warn:
// Emit 'unhandledRejection', then emit 'UnhandledPromiseRejectionWarning'.
const kAlwaysWarnUnhandledRejections = 1;
// --unhandled-rejection=strict:
// Emit 'uncaughtException'. If it's not handled, print the error to stderr
// and exit the process.
// Otherwise, emit 'unhandledRejection'. If 'unhandledRejection' is not
// handled, emit 'UnhandledPromiseRejectionWarning'.
const kThrowUnhandledRejections = 2;
// --unhandled-rejection is unset:
// Emit 'unhandledRejection', if it's handled, emit
// 'UnhandledPromiseRejectionWarning', then emit deprecation warning.
const kDefaultUnhandledRejections = 3;
let unhandledRejectionsMode;
function setHasRejectionToWarn(value) {
  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;
function hasRejectionToWarn() {
  return tickInfo[kHasRejectionToWarn] === 1;
function getUnhandledRejectionsMode() {
  const { getOptionValue } = require('internal/options');
  switch (getOptionValue('--unhandled-rejections')) {
    case 'none':
      return kIgnoreUnhandledRejections;
    case 'warn':
      return kAlwaysWarnUnhandledRejections;
    case 'strict':
      return kThrowUnhandledRejections;
    default:
      return kDefaultUnhandledRejections;
function promiseRejectHandler(type, promise, reason) {
  if (unhandledRejectionsMode === undefined) {
    unhandledRejectionsMode = getUnhandledRejectionsMode();
  switch (type) {
    case kPromiseRejectWithNoHandler:
      unhandledRejection(promise, reason);
      break;
    case kPromiseHandlerAddedAfterReject:
      handledRejection(promise);
      break;
    case kPromiseResolveAfterResolved:
      resolveError('resolve', promise, reason);
      break;
    case kPromiseRejectAfterResolved:
      resolveError('reject', promise, reason);
      break;
function resolveError(type, promise, reason) {
  // We have to wrap this in a next tick. Otherwise the error could be caught by
  // the executed promise.
  process.nextTick(() => {
    process.emit('multipleResolves', type, promise, reason);
  });
function unhandledRejection(promise, reason) {
  maybeUnhandledPromises.set(promise, {
    reason,
    uid: ++lastPromiseId,
    warned: false
  });
  // This causes the promise to be referenced at least for one tick.
  pendingUnhandledRejections.push(promise);
  setHasRejectionToWarn(true);
function handledRejection(promise) {
  const promiseInfo = maybeUnhandledPromises.get(promise);
  if (promiseInfo !== undefined) {
    maybeUnhandledPromises.delete(promise);
    if (promiseInfo.warned) {
      const { uid } = promiseInfo;
      // Generate the warning object early to get a good stack trace.
      // eslint-disable-next-line no-restricted-syntax
      const warning = new Error('Promise rejection was handled ' +
                                `asynchronously (rejection id: ${uid})`);
      warning.name = 'PromiseRejectionHandledWarning';
      warning.id = uid;
      asyncHandledRejections.push({ promise, warning });
      setHasRejectionToWarn(true);
      return;
    }
  setHasRejectionToWarn(false);
const unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';
function emitUnhandledRejectionWarning(uid, reason) {
  const warning = getErrorWithoutStack(
    unhandledRejectionErrName,
    'Unhandled promise rejection. This error originated either by ' +
      'throwing inside of an async function without a catch block, ' +
      'or by rejecting a promise which was not handled with .catch(). ' +
      `(rejection id: ${uid})`
  );
  try {
    if (reason instanceof Error) {
      warning.stack = reason.stack;
      process.emitWarning(reason.stack, unhandledRejectionErrName);
    } else {
      process.emitWarning(
        noSideEffectsToString(reason), unhandledRejectionErrName);
    }
  } catch {}
  process.emitWarning(warning);
let deprecationWarned = false;
function emitDeprecationWarning() {
  process.emitWarning(
    'Unhandled promise rejections are deprecated. In the future, ' +
    'promise rejections that are not handled will terminate the ' +
    'Node.js process with a non-zero exit code.',
    'DeprecationWarning', 'DEP0018');
// If this method returns true, we've executed user code or triggered
// a warning to be emitted which requires the microtask and next tick
// queues to be drained again.
function processPromiseRejections() {
  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;
  while (asyncHandledRejections.length > 0) {
    const { promise, warning } = asyncHandledRejections.shift();
    if (!process.emit('rejectionHandled', promise)) {
      process.emitWarning(warning);
    }
  let len = pendingUnhandledRejections.length;
  while (len--) {
    const promise = pendingUnhandledRejections.shift();
    const promiseInfo = maybeUnhandledPromises.get(promise);
    if (promiseInfo === undefined) {
      continue;
    }
    promiseInfo.warned = true;
    const { reason, uid } = promiseInfo;
    switch (unhandledRejectionsMode) {
      case kThrowUnhandledRejections: {
        const err = reason instanceof Error ?
          reason : generateUnhandledRejectionError(reason);
        triggerUncaughtException(err, true /* fromPromise */);
        const handled = process.emit('unhandledRejection', reason, promise);
        if (!handled) emitUnhandledRejectionWarning(uid, reason);
        break;
      }
      case kIgnoreUnhandledRejections: {
        process.emit('unhandledRejection', reason, promise);
        break;
      }
      case kAlwaysWarnUnhandledRejections: {
        process.emit('unhandledRejection', reason, promise);
        emitUnhandledRejectionWarning(uid, reason);
        break;
      }
      case kDefaultUnhandledRejections: {
        const handled = process.emit('unhandledRejection', reason, promise);
        if (!handled) {
          emitUnhandledRejectionWarning(uid, reason);
          if (!deprecationWarned) {
            emitDeprecationWarning();
            deprecationWarned = true;
          }
        }
        break;
      }
    }
    maybeScheduledTicksOrMicrotasks = true;
  return maybeScheduledTicksOrMicrotasks ||
         pendingUnhandledRejections.length !== 0;
function getErrorWithoutStack(name, message) {
  // Reset the stack to prevent any overhead.
  const tmp = Error.stackTraceLimit;
  Error.stackTraceLimit = 0;
  // eslint-disable-next-line no-restricted-syntax
  const err = new Error(message);
  Error.stackTraceLimit = tmp;
  Object.defineProperty(err, 'name', {
    value: name,
    enumerable: false,
    writable: true,
    configurable: true,
  });
  return err;
function generateUnhandledRejectionError(reason) {
  const message =
    'This error originated either by ' +
    'throwing inside of an async function without a catch block, ' +
    'or by rejecting a promise which was not handled with .catch().' +
    ' The promise rejected with the reason ' +
    `"${noSideEffectsToString(reason)}".`;
  const err = getErrorWithoutStack('UnhandledPromiseRejection', message);
  err.code = 'ERR_UNHANDLED_REJECTION';
  return err;
function listenForRejections() {
  setPromiseRejectCallback(promiseRejectHandler);
module.exports = {
  hasRejectionToWarn,
  setHasRejectionToWarn,
  listenForRejections,
  processPromiseRejections
'use strict';
const { guessHandleType } = internalBinding('util');
exports.getMainThreadStdio = getMainThreadStdio;
function dummyDestroy(err, cb) {
  cb(err);
  // We need to emit 'close' anyway so that the closing
  // of the stream is observable. We just make sure we
  // are not going to do it twice.
  // The 'close' event is needed so that finished and
  // pipeline work correctly.
  if (!this._writableState.emitClose) {
    process.nextTick(() => {
      this.emit('close');
    });
function getMainThreadStdio() {
  var stdin;
  var stdout;
  var stderr;
  function getStdout() {
    if (stdout) return stdout;
    stdout = createWritableStdioStream(1);
    stdout.destroySoon = stdout.destroy;
    // Override _destroy so that the fd is never actually closed.
    stdout._destroy = dummyDestroy;
    if (stdout.isTTY) {
      process.on('SIGWINCH', () => stdout._refreshSize());
    }
    return stdout;
  function getStderr() {
    if (stderr) return stderr;
    stderr = createWritableStdioStream(2);
    stderr.destroySoon = stderr.destroy;
    // Override _destroy so that the fd is never actually closed.
    stderr._destroy = dummyDestroy;
    if (stderr.isTTY) {
      process.on('SIGWINCH', () => stderr._refreshSize());
    }
    return stderr;
  function getStdin() {
    if (stdin) return stdin;
    const fd = 0;
    switch (guessHandleType(fd)) {
      case 'TTY':
        var tty = require('tty');
        stdin = new tty.ReadStream(fd, {
          highWaterMark: 0,
          readable: true,
          writable: false
        });
        break;
      case 'FILE':
        var fs = require('fs');
        stdin = new fs.ReadStream(null, { fd: fd, autoClose: false });
        break;
      case 'PIPE':
      case 'TCP':
        var net = require('net');
        // It could be that process has been started with an IPC channel
        // sitting on fd=0, in such case the pipe for this fd is already
        // present and creating a new one will lead to the assertion failure
        // in libuv.
        if (process.channel && process.channel.fd === fd) {
          stdin = new net.Socket({
            handle: process.channel,
            readable: true,
            writable: false,
            manualStart: true
          });
        } else {
          stdin = new net.Socket({
            fd: fd,
            readable: true,
            writable: false,
            manualStart: true
          });
        }
        // Make sure the stdin can't be `.end()`-ed
        stdin._writableState.ended = true;
        break;
      default:
        // Provide a dummy contentless input for e.g. non-console
        // Windows applications.
        const { Readable } = require('stream');
        stdin = new Readable({ read() {} });
        stdin.push(null);
    }
    // For supporting legacy API we put the FD here.
    stdin.fd = fd;
    // `stdin` starts out life in a paused state, but node doesn't
    // know yet. Explicitly to readStop() it to put it in the
    // not-reading state.
    if (stdin._handle && stdin._handle.readStop) {
      stdin._handle.reading = false;
      stdin._readableState.reading = false;
      stdin._handle.readStop();
    }
    // If the user calls stdin.pause(), then we need to stop reading
    // once the stream implementation does so (one nextTick later),
    // so that the process can close down.
    stdin.on('pause', () => {
      process.nextTick(onpause);
    });
    function onpause() {
      if (!stdin._handle)
        return;
      if (stdin._handle.reading && !stdin._readableState.flowing) {
        stdin._readableState.reading = false;
        stdin._handle.reading = false;
        stdin._handle.readStop();
      }
    }
    return stdin;
  exports.resetStdioForTesting = function() {
    stdin = undefined;
    stdout = undefined;
    stderr = undefined;
  };
  return {
    getStdout,
    getStderr,
    getStdin
  };
function createWritableStdioStream(fd) {
  var stream;
  // Note stream._type is used for test-module-load-list.js
  switch (guessHandleType(fd)) {
    case 'TTY':
      var tty = require('tty');
      stream = new tty.WriteStream(fd);
      stream._type = 'tty';
      break;
    case 'FILE':
      const SyncWriteStream = require('internal/fs/sync_write_stream');
      stream = new SyncWriteStream(fd, { autoClose: false });
      stream._type = 'fs';
      break;
    case 'PIPE':
    case 'TCP':
      var net = require('net');
      // If fd is already being used for the IPC channel, libuv will return
      // an error when trying to use it again. In that case, create the socket
      // using the existing handle instead of the fd.
      if (process.channel && process.channel.fd === fd) {
        stream = new net.Socket({
          handle: process.channel,
          readable: false,
          writable: true
        });
      } else {
        stream = new net.Socket({
          fd,
          readable: false,
          writable: true
        });
      }
      stream._type = 'pipe';
      break;
    default:
      // Provide a dummy black-hole output for e.g. non-console
      // Windows applications.
      const { Writable } = require('stream');
      stream = new Writable({
        write(buf, enc, cb) {
          cb();
        }
      });
  // For supporting legacy API we put the FD here.
  stream.fd = fd;
  stream._isStdio = true;
  return stream;
'use strict';
const { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;
// Lazily loaded
let fs;
let fd;
let warningFile;
function lazyOption() {
  // This will load `warningFile` only once. If the flag is not set,
  // `warningFile` will be set to an empty string.
  if (warningFile === undefined) {
    warningFile = require('internal/options')
                  .getOptionValue('--redirect-warnings');
  return warningFile;
// If we can't write to stderr, we'd like to make this a noop,
// so use console.error.
let error;
function writeOut(message) {
  if (!error) {
    error = require('internal/console/global').error;
  error(message);
function writeToFile(message) {
  if (fd === undefined) {
    fs = require('fs');
    try {
      fd = fs.openSync(warningFile, 'a');
    } catch {
      return writeOut(message);
    }
    process.on('exit', () => {
      try {
        fs.closeSync(fd);
      } catch {}
    });
  fs.appendFile(fd, `${message}\n`, (err) => {
    if (err) {
      writeOut(message);
    }
  });
function doEmitWarning(warning) {
  return () => process.emit('warning', warning);
function onWarning(warning) {
  if (!(warning instanceof Error)) return;
  const isDeprecation = warning.name === 'DeprecationWarning';
  if (isDeprecation && process.noDeprecation) return;
  const trace = process.traceProcessWarnings ||
                (isDeprecation && process.traceDeprecation);
  var msg = `(${process.release.name}:${process.pid}) `;
  if (warning.code)
    msg += `[${warning.code}] `;
  if (trace && warning.stack) {
    msg += `${warning.stack}`;
  } else {
    const toString =
      typeof warning.toString === 'function' ?
        warning.toString : Error.prototype.toString;
    msg += `${toString.apply(warning)}`;
  if (typeof warning.detail === 'string') {
    msg += `\n${warning.detail}`;
  const warningFile = lazyOption();
  if (warningFile) {
    return writeToFile(msg);
  writeOut(msg);
// process.emitWarning(error)
// process.emitWarning(str[, type[, code]][, ctor])
// process.emitWarning(str[, options])
function emitWarning(warning, type, code, ctor, now) {
  let detail;
  if (type !== null && typeof type === 'object' && !Array.isArray(type)) {
    ctor = type.ctor;
    code = type.code;
    if (typeof type.detail === 'string')
      detail = type.detail;
    type = type.type || 'Warning';
  } else if (typeof type === 'function') {
    ctor = type;
    code = undefined;
    type = 'Warning';
  if (type !== undefined && typeof type !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('type', 'string', type);
  if (typeof code === 'function') {
    ctor = code;
    code = undefined;
  } else if (code !== undefined && typeof code !== 'string') {
    throw new ERR_INVALID_ARG_TYPE('code', 'string', code);
  if (typeof warning === 'string') {
    // Improve error creation performance by skipping the error frames.
    // They are added in the `captureStackTrace()` function below.
    const tmpStackLimit = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    // eslint-disable-next-line no-restricted-syntax
    warning = new Error(warning);
    Error.stackTraceLimit = tmpStackLimit;
    warning.name = String(type || 'Warning');
    if (code !== undefined) warning.code = code;
    if (detail !== undefined) warning.detail = detail;
    // eslint-disable-next-line no-restricted-syntax
    Error.captureStackTrace(warning, ctor || process.emitWarning);
  } else if (!(warning instanceof Error)) {
    throw new ERR_INVALID_ARG_TYPE('warning', ['Error', 'string'], warning);
  if (warning.name === 'DeprecationWarning') {
    if (process.noDeprecation)
      return;
    if (process.throwDeprecation)
      throw warning;
  if (now) process.emit('warning', warning);
  else process.nextTick(doEmitWarning(warning));
module.exports = {
  onWarning,
  emitWarning
'use strict';
// This file contains process bootstrappers that can only be
// run in the worker thread.
const {
  createWorkerStdio
} = require('internal/worker/io');
const {
  codes: { ERR_WORKER_UNSUPPORTED_OPERATION }
} = require('internal/errors');
let workerStdio;
function lazyWorkerStdio() {
  if (!workerStdio) workerStdio = createWorkerStdio();
  return workerStdio;
function createStdioGetters() {
  return {
    getStdout() { return lazyWorkerStdio().stdout; },
    getStderr() { return lazyWorkerStdio().stderr; },
    getStdin() { return lazyWorkerStdio().stdin; }
  };
// The execution of this function itself should not cause any side effects.
function wrapProcessMethods(binding) {
  function umask(mask) {
    // process.umask() is a read-only operation in workers.
    if (mask !== undefined) {
      throw new ERR_WORKER_UNSUPPORTED_OPERATION('Setting process.umask()');
    }
    return binding.umask(mask);
  return { umask };
function unavailable(name) {
  function unavailableInWorker() {
    throw new ERR_WORKER_UNSUPPORTED_OPERATION(name);
  unavailableInWorker.disabled = true;
  return unavailableInWorker;
module.exports = {
  createStdioGetters,
  unavailable,
  wrapProcessMethods
'use strict';
const {
  ERR_INVALID_ARG_TYPE,
  ERR_SYNTHETIC
} = require('internal/errors').codes;
const { validateSignalName, validateString } = require('internal/validators');
const nr = internalBinding('report');
const { JSON } = primordials;
const report = {
  writeReport(file, err) {
    if (typeof file === 'object' && file !== null) {
      err = file;
      file = undefined;
    } else if (file !== undefined && typeof file !== 'string') {
      throw new ERR_INVALID_ARG_TYPE('file', 'String', file);
    } else if (err === undefined) {
      err = new ERR_SYNTHETIC();
    } else if (err === null || typeof err !== 'object') {
      throw new ERR_INVALID_ARG_TYPE('err', 'Object', err);
    }
    return nr.writeReport('JavaScript API', 'API', file, err.stack);
  },
  getReport(err) {
    if (err === undefined)
      err = new ERR_SYNTHETIC();
    else if (err === null || typeof err !== 'object')
      throw new ERR_INVALID_ARG_TYPE('err', 'Object', err);
    return JSON.parse(nr.getReport(err.stack));
  },
  get directory() {
    return nr.getDirectory();
  },
  set directory(dir) {
    validateString(dir, 'directory');
    nr.setDirectory(dir);
  },
  get filename() {
    return nr.getFilename();
  },
  set filename(name) {
    validateString(name, 'filename');
    nr.setFilename(name);
  },
  get signal() {
    return nr.getSignal();
  },
  set signal(sig) {
    validateSignalName(sig, 'signal');
    removeSignalHandler();
    addSignalHandler(sig);
    nr.setSignal(sig);
  },
  get reportOnFatalError() {
    return nr.shouldReportOnFatalError();
  },
  set reportOnFatalError(trigger) {
    if (typeof trigger !== 'boolean')
      throw new ERR_INVALID_ARG_TYPE('trigger', 'boolean', trigger);
    nr.setReportOnFatalError(trigger);
  },
  get reportOnSignal() {
    return nr.shouldReportOnSignal();
  },
  set reportOnSignal(trigger) {
    if (typeof trigger !== 'boolean')
      throw new ERR_INVALID_ARG_TYPE('trigger', 'boolean', trigger);
    nr.setReportOnSignal(trigger);
    removeSignalHandler();
    addSignalHandler();
  },
  get reportOnUncaughtException() {
    return nr.shouldReportOnUncaughtException();
  },
  set reportOnUncaughtException(trigger) {
    if (typeof trigger !== 'boolean')
      throw new ERR_INVALID_ARG_TYPE('trigger', 'boolean', trigger);
    nr.setReportOnUncaughtException(trigger);
function addSignalHandler(sig) {
  if (nr.shouldReportOnSignal()) {
    if (typeof sig !== 'string')
      sig = nr.getSignal();
    process.on(sig, signalHandler);
function removeSignalHandler() {
  const sig = nr.getSignal();
  if (sig)
    process.removeListener(sig, signalHandler);
function signalHandler(sig) {
  nr.writeReport(sig, 'Signal', null, '');
module.exports = {
  addSignalHandler,
  report
'use strict';
const { FunctionPrototype } = primordials;
const {
  // For easy access to the nextTick state in the C++ land,
  // and to avoid unnecessary calls into JS land.
  tickInfo,
  // Used to run V8's micro task queue.
  runMicrotasks,
  setTickCallback,
  enqueueMicrotask
} = internalBinding('task_queue');
const {
  triggerUncaughtException
} = internalBinding('errors');
const {
  setHasRejectionToWarn,
  hasRejectionToWarn,
  listenForRejections,
  processPromiseRejections
} = require('internal/process/promises');
const {
  getDefaultTriggerAsyncId,
  newAsyncId,
  initHooksExist,
  destroyHooksExist,
  emitInit,
  emitBefore,
  emitAfter,
  emitDestroy,
  symbols: { async_id_symbol, trigger_async_id_symbol }
} = require('internal/async_hooks');
const {
  ERR_INVALID_CALLBACK,
  ERR_INVALID_ARG_TYPE
} = require('internal/errors').codes;
const FixedQueue = require('internal/fixed_queue');
// *Must* match Environment::TickInfo::Fields in src/env.h.
const kHasTickScheduled = 0;
function hasTickScheduled() {
  return tickInfo[kHasTickScheduled] === 1;
function setHasTickScheduled(value) {
  tickInfo[kHasTickScheduled] = value ? 1 : 0;
const queue = new FixedQueue();
// Should be in sync with RunNextTicksNative in node_task_queue.cc
function runNextTicks() {
  if (!hasTickScheduled() && !hasRejectionToWarn())
    runMicrotasks();
  if (!hasTickScheduled() && !hasRejectionToWarn())
    return;
  processTicksAndRejections();
function processTicksAndRejections() {
  let tock;
  do {
    while (tock = queue.shift()) {
      const asyncId = tock[async_id_symbol];
      emitBefore(asyncId, tock[trigger_async_id_symbol]);
      try {
        const callback = tock.callback;
        if (tock.args === undefined)
          callback();
        else
          callback(...tock.args);
      } finally {
        if (destroyHooksExist())
          emitDestroy(asyncId);
      }
      emitAfter(asyncId);
    }
    runMicrotasks();
  } while (!queue.isEmpty() || processPromiseRejections());
  setHasTickScheduled(false);
  setHasRejectionToWarn(false);
class TickObject {
  constructor(callback, args) {
    this.callback = callback;
    this.args = args;
    const asyncId = newAsyncId();
    const triggerAsyncId = getDefaultTriggerAsyncId();
    this[async_id_symbol] = asyncId;
    this[trigger_async_id_symbol] = triggerAsyncId;
    if (initHooksExist()) {
      emitInit(asyncId, 'TickObject', triggerAsyncId, this);
    }
// `nextTick()` will not enqueue any callback when the process is about to
// exit since the callback would not have a chance to be executed.
function nextTick(callback) {
  if (typeof callback !== 'function')
    throw new ERR_INVALID_CALLBACK(callback);
  if (process._exiting)
    return;
  var args;
  switch (arguments.length) {
    case 1: break;
    case 2: args = [arguments[1]]; break;
    case 3: args = [arguments[1], arguments[2]]; break;
    case 4: args = [arguments[1], arguments[2], arguments[3]]; break;
    default:
      args = new Array(arguments.length - 1);
      for (var i = 1; i < arguments.length; i++)
        args[i - 1] = arguments[i];
  if (queue.isEmpty())
    setHasTickScheduled(true);
  queue.push(new TickObject(callback, args));
let AsyncResource;
const defaultMicrotaskResourceOpts = { requireManualDestroy: true };
function createMicrotaskResource() {
  // Lazy load the async_hooks module
  if (AsyncResource === undefined) {
    AsyncResource = require('async_hooks').AsyncResource;
  return new AsyncResource('Microtask', defaultMicrotaskResourceOpts);
function runMicrotask() {
  this.runInAsyncScope(() => {
    const callback = this.callback;
    try {
      callback();
    } catch (error) {
      // runInAsyncScope() swallows the error so we need to catch
      // it and handle it here.
      triggerUncaughtException(error, false /* fromPromise */);
    } finally {
      this.emitDestroy();
    }
  });
function queueMicrotask(callback) {
  if (typeof callback !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('callback', 'function', callback);
  const asyncResource = createMicrotaskResource();
  asyncResource.callback = callback;
  enqueueMicrotask(FunctionPrototype.bind(runMicrotask, asyncResource));
module.exports = {
  setupTaskQueue() {
    // Sets the per-isolate promise rejection callback
    listenForRejections();
    // Sets the callback to be run in every tick.
    setTickCallback(processTicksAndRejections);
    return {
      nextTick,
      runNextTicks
    };
  },
  queueMicrotask
'use strict';
const { ERR_INVALID_URI } = require('internal/errors').codes;
const hexTable = new Array(256);
for (var i = 0; i < 256; ++i)
  hexTable[i] = '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase();
const isHexTable = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 32 - 47
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63
  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 64 - 79
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 80 - 95
  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 96 - 111
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 112 - 127
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 128 ...
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  // ... 256
function encodeStr(str, noEscapeTable, hexTable) {
  const len = str.length;
  if (len === 0)
    return '';
  var out = '';
  var lastPos = 0;
  for (var i = 0; i < len; i++) {
    var c = str.charCodeAt(i);
    // ASCII
    if (c < 0x80) {
      if (noEscapeTable[c] === 1)
        continue;
      if (lastPos < i)
        out += str.slice(lastPos, i);
      lastPos = i + 1;
      out += hexTable[c];
      continue;
    }
    if (lastPos < i)
      out += str.slice(lastPos, i);
    // Multi-byte characters ...
    if (c < 0x800) {
      lastPos = i + 1;
      out += hexTable[0xC0 | (c >> 6)] +
             hexTable[0x80 | (c & 0x3F)];
      continue;
    }
    if (c < 0xD800 || c >= 0xE000) {
      lastPos = i + 1;
      out += hexTable[0xE0 | (c >> 12)] +
             hexTable[0x80 | ((c >> 6) & 0x3F)] +
             hexTable[0x80 | (c & 0x3F)];
      continue;
    }
    // Surrogate pair
    ++i;
    // This branch should never happen because all URLSearchParams entries
    // should already be converted to USVString. But, included for
    // completion's sake anyway.
    if (i >= len)
      throw new ERR_INVALID_URI();
    var c2 = str.charCodeAt(i) & 0x3FF;
    lastPos = i + 1;
    c = 0x10000 + (((c & 0x3FF) << 10) | c2);
    out += hexTable[0xF0 | (c >> 18)] +
           hexTable[0x80 | ((c >> 12) & 0x3F)] +
           hexTable[0x80 | ((c >> 6) & 0x3F)] +
           hexTable[0x80 | (c & 0x3F)];
  if (lastPos === 0)
    return str;
  if (lastPos < len)
    return out + str.slice(lastPos);
  return out;
module.exports = {
  encodeStr,
  hexTable,
  isHexTable
'use strict';
// Regex used for ansi escape code splitting
// Adopted from https://github.com/chalk/ansi-regex/blob/master/index.js
// License: MIT, authors: @sindresorhus, Qix-, and arjunmehta
// Matches all ansi escape code sequences in a string
/* eslint-disable no-control-regex */
const ansi =
  /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;
/* eslint-enable no-control-regex */
const kUTF16SurrogateThreshold = 0x10000; // 2 ** 16
const kEscape = '\x1b';
let getStringWidth;
let isFullWidthCodePoint;
function CSI(strings, ...args) {
  let ret = `${kEscape}[`;
  for (var n = 0; n < strings.length; n++) {
    ret += strings[n];
    if (n < args.length)
      ret += args[n];
  return ret;
CSI.kEscape = kEscape;
CSI.kClearToBeginning = CSI`1K`;
CSI.kClearToEnd = CSI`0K`;
CSI.kClearLine = CSI`2K`;
CSI.kClearScreenDown = CSI`0J`;
if (internalBinding('config').hasIntl) {
  const icu = internalBinding('icu');
  getStringWidth = function getStringWidth(str, options) {
    options = options || {};
    if (!Number.isInteger(str))
      str = stripVTControlCharacters(String(str));
    return icu.getStringWidth(
      str,
      Boolean(options.ambiguousAsFullWidth),
      Boolean(options.expandEmojiSequence)
    );
  };
  isFullWidthCodePoint =
    function isFullWidthCodePoint(code, options) {
      if (typeof code !== 'number')
        return false;
      return icu.getStringWidth(code, options) === 2;
    };
} else {
  /**
   * Returns the number of columns required to display the given string.
   */
  getStringWidth = function getStringWidth(str) {
    if (Number.isInteger(str))
      return isFullWidthCodePoint(str) ? 2 : 1;
    let width = 0;
    str = stripVTControlCharacters(String(str));
    for (var i = 0; i < str.length; i++) {
      const code = str.codePointAt(i);
      if (code >= kUTF16SurrogateThreshold) { // Surrogates.
        i++;
      }
      if (isFullWidthCodePoint(code)) {
        width += 2;
      } else {
        width++;
      }
    }
    return width;
  };
  /**
   * Returns true if the character represented by a given
   * Unicode code point is full-width. Otherwise returns false.
   */
  isFullWidthCodePoint = function isFullWidthCodePoint(code) {
    // Code points are derived from:
    // http://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt
    return Number.isInteger(code) && code >= 0x1100 && (
      code <= 0x115f ||  // Hangul Jamo
      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET
      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET
      // CJK Radicals Supplement .. Enclosed CJK Letters and Months
      code >= 0x2e80 && code <= 0x3247 && code !== 0x303f ||
      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
      code >= 0x3250 && code <= 0x4dbf ||
      // CJK Unified Ideographs .. Yi Radicals
      code >= 0x4e00 && code <= 0xa4c6 ||
      // Hangul Jamo Extended-A
      code >= 0xa960 && code <= 0xa97c ||
      // Hangul Syllables
      code >= 0xac00 && code <= 0xd7a3 ||
      // CJK Compatibility Ideographs
      code >= 0xf900 && code <= 0xfaff ||
      // Vertical Forms
      code >= 0xfe10 && code <= 0xfe19 ||
      // CJK Compatibility Forms .. Small Form Variants
      code >= 0xfe30 && code <= 0xfe6b ||
      // Halfwidth and Fullwidth Forms
      code >= 0xff01 && code <= 0xff60 ||
      code >= 0xffe0 && code <= 0xffe6 ||
      // Kana Supplement
      code >= 0x1b000 && code <= 0x1b001 ||
      // Enclosed Ideographic Supplement
      code >= 0x1f200 && code <= 0x1f251 ||
      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
      code >= 0x20000 && code <= 0x3fffd
    );
  };
 * Tries to remove all VT control characters. Use to estimate displayed
 * string width. May be buggy due to not running a real state machine
function stripVTControlCharacters(str) {
  return str.replace(ansi, '');
  Some patterns seen in terminal key escape codes, derived from combos seen
  at http://www.midnight-commander.org/browser/lib/tty/key.c
  ESC letter
  ESC [ letter
  ESC [ modifier letter
  ESC [ 1 ; modifier letter
  ESC [ num char
  ESC [ num ; modifier char
  ESC O letter
  ESC O modifier letter
  ESC O 1 ; modifier letter
  ESC N letter
  ESC [ [ num ; modifier char
  ESC [ [ 1 ; modifier letter
  ESC ESC [ num char
  ESC ESC O letter
  - char is usually ~ but $ and ^ also happen with rxvt
  - modifier is 1 +
                (shift     * 1) +
                (left_alt  * 2) +
                (ctrl      * 4) +
                (right_alt * 8)
  - two leading ESCs apparently mean the same as one leading ESC
function* emitKeys(stream) {
  while (true) {
    let ch = yield;
    let s = ch;
    let escaped = false;
    const key = {
      sequence: null,
      name: undefined,
      ctrl: false,
      meta: false,
      shift: false
    };
    if (ch === kEscape) {
      escaped = true;
      s += (ch = yield);
      if (ch === kEscape) {
        s += (ch = yield);
      }
    }
    if (escaped && (ch === 'O' || ch === '[')) {
      // ANSI escape sequence
      let code = ch;
      let modifier = 0;
      if (ch === 'O') {
        // ESC O letter
        // ESC O modifier letter
        s += (ch = yield);
        if (ch >= '0' && ch <= '9') {
          modifier = (ch >> 0) - 1;
          s += (ch = yield);
        }
        code += ch;
      } else if (ch === '[') {
        // ESC [ letter
        // ESC [ modifier letter
        // ESC [ [ modifier letter
        // ESC [ [ num char
        s += (ch = yield);
        if (ch === '[') {
          // \x1b[[A
          //      ^--- escape codes might have a second bracket
          code += ch;
          s += (ch = yield);
        }
        /*
         * Here and later we try to buffer just enough data to get
         * a complete ascii sequence.
         *
         * We have basically two classes of ascii characters to process:
         *
         *
         * 1. `\x1b[24;5~` should be parsed as { code: '[24~', modifier: 5 }
         *
         * This particular example is featuring Ctrl+F12 in xterm.
         *
         *  - `;5` part is optional, e.g. it could be `\x1b[24~`
         *  - first part can contain one or two digits
         *
         * So the generic regexp is like /^\d\d?(;\d)?[~^$]$/
         *
         *
         * 2. `\x1b[1;5H` should be parsed as { code: '[H', modifier: 5 }
         *
         * This particular example is featuring Ctrl+Home in xterm.
         *
         *  - `1;5` part is optional, e.g. it could be `\x1b[H`
         *  - `1;` part is optional, e.g. it could be `\x1b[5H`
         *
         * So the generic regexp is like /^((\d;)?\d)?[A-Za-z]$/
         *
         */
        const cmdStart = s.length - 1;
        // Skip one or two leading digits
        if (ch >= '0' && ch <= '9') {
          s += (ch = yield);
          if (ch >= '0' && ch <= '9') {
            s += (ch = yield);
          }
        }
        // skip modifier
        if (ch === ';') {
          s += (ch = yield);
          if (ch >= '0' && ch <= '9') {
            s += yield;
          }
        }
        /*
         * We buffered enough data, now trying to extract code
         * and modifier from it
         */
        const cmd = s.slice(cmdStart);
        let match;
        if ((match = cmd.match(/^(\d\d?)(;(\d))?([~^$])$/))) {
          code += match[1] + match[4];
          modifier = (match[3] || 1) - 1;
        } else if ((match = cmd.match(/^((\d;)?(\d))?([A-Za-z])$/))) {
          code += match[4];
          modifier = (match[3] || 1) - 1;
        } else {
          code += cmd;
        }
      }
      // Parse the key modifier
      key.ctrl = !!(modifier & 4);
      key.meta = !!(modifier & 10);
      key.shift = !!(modifier & 1);
      key.code = code;
      // Parse the key itself
      switch (code) {
        /* xterm/gnome ESC O letter */
        case 'OP': key.name = 'f1'; break;
        case 'OQ': key.name = 'f2'; break;
        case 'OR': key.name = 'f3'; break;
        case 'OS': key.name = 'f4'; break;
        /* xterm/rxvt ESC [ number ~ */
        case '[11~': key.name = 'f1'; break;
        case '[12~': key.name = 'f2'; break;
        case '[13~': key.name = 'f3'; break;
        case '[14~': key.name = 'f4'; break;
        /* from Cygwin and used in libuv */
        case '[[A': key.name = 'f1'; break;
        case '[[B': key.name = 'f2'; break;
        case '[[C': key.name = 'f3'; break;
        case '[[D': key.name = 'f4'; break;
        case '[[E': key.name = 'f5'; break;
        /* common */
        case '[15~': key.name = 'f5'; break;
        case '[17~': key.name = 'f6'; break;
        case '[18~': key.name = 'f7'; break;
        case '[19~': key.name = 'f8'; break;
        case '[20~': key.name = 'f9'; break;
        case '[21~': key.name = 'f10'; break;
        case '[23~': key.name = 'f11'; break;
        case '[24~': key.name = 'f12'; break;
        /* xterm ESC [ letter */
        case '[A': key.name = 'up'; break;
        case '[B': key.name = 'down'; break;
        case '[C': key.name = 'right'; break;
        case '[D': key.name = 'left'; break;
        case '[E': key.name = 'clear'; break;
        case '[F': key.name = 'end'; break;
        case '[H': key.name = 'home'; break;
        /* xterm/gnome ESC O letter */
        case 'OA': key.name = 'up'; break;
        case 'OB': key.name = 'down'; break;
        case 'OC': key.name = 'right'; break;
        case 'OD': key.name = 'left'; break;
        case 'OE': key.name = 'clear'; break;
        case 'OF': key.name = 'end'; break;
        case 'OH': key.name = 'home'; break;
        /* xterm/rxvt ESC [ number ~ */
        case '[1~': key.name = 'home'; break;
        case '[2~': key.name = 'insert'; break;
        case '[3~': key.name = 'delete'; break;
        case '[4~': key.name = 'end'; break;
        case '[5~': key.name = 'pageup'; break;
        case '[6~': key.name = 'pagedown'; break;
        /* putty */
        case '[[5~': key.name = 'pageup'; break;
        case '[[6~': key.name = 'pagedown'; break;
        /* rxvt */
        case '[7~': key.name = 'home'; break;
        case '[8~': key.name = 'end'; break;
        /* rxvt keys with modifiers */
        case '[a': key.name = 'up'; key.shift = true; break;
        case '[b': key.name = 'down'; key.shift = true; break;
        case '[c': key.name = 'right'; key.shift = true; break;
        case '[d': key.name = 'left'; key.shift = true; break;
        case '[e': key.name = 'clear'; key.shift = true; break;
        case '[2$': key.name = 'insert'; key.shift = true; break;
        case '[3$': key.name = 'delete'; key.shift = true; break;
        case '[5$': key.name = 'pageup'; key.shift = true; break;
        case '[6$': key.name = 'pagedown'; key.shift = true; break;
        case '[7$': key.name = 'home'; key.shift = true; break;
        case '[8$': key.name = 'end'; key.shift = true; break;
        case 'Oa': key.name = 'up'; key.ctrl = true; break;
        case 'Ob': key.name = 'down'; key.ctrl = true; break;
        case 'Oc': key.name = 'right'; key.ctrl = true; break;
        case 'Od': key.name = 'left'; key.ctrl = true; break;
        case 'Oe': key.name = 'clear'; key.ctrl = true; break;
        case '[2^': key.name = 'insert'; key.ctrl = true; break;
        case '[3^': key.name = 'delete'; key.ctrl = true; break;
        case '[5^': key.name = 'pageup'; key.ctrl = true; break;
        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;
        case '[7^': key.name = 'home'; key.ctrl = true; break;
        case '[8^': key.name = 'end'; key.ctrl = true; break;
        /* misc. */
        case '[Z': key.name = 'tab'; key.shift = true; break;
        default: key.name = 'undefined'; break;
      }
    } else if (ch === '\r') {
      // carriage return
      key.name = 'return';
    } else if (ch === '\n') {
      // Enter, should have been called linefeed
      key.name = 'enter';
    } else if (ch === '\t') {
      // tab
      key.name = 'tab';
    } else if (ch === '\b' || ch === '\x7f') {
      // backspace or ctrl+h
      key.name = 'backspace';
      key.meta = escaped;
    } else if (ch === kEscape) {
      // escape key
      key.name = 'escape';
      key.meta = escaped;
    } else if (ch === ' ') {
      key.name = 'space';
      key.meta = escaped;
    } else if (!escaped && ch <= '\x1a') {
      // ctrl+letter
      key.name = String.fromCharCode(ch.charCodeAt(0) + 'a'.charCodeAt(0) - 1);
      key.ctrl = true;
    } else if (/^[0-9A-Za-z]$/.test(ch)) {
      // Letter, number, shift+letter
      key.name = ch.toLowerCase();
      key.shift = /^[A-Z]$/.test(ch);
      key.meta = escaped;
    } else if (escaped) {
      // Escape sequence timeout
      key.name = ch.length ? undefined : 'escape';
      key.meta = true;
    }
    key.sequence = s;
    if (s.length !== 0 && (key.name !== undefined || escaped)) {
      /* Named character or sequence */
      stream.emit('keypress', escaped ? undefined : s, key);
    } else if (s.length === 1) {
      /* Single unnamed character, e.g. "." */
      stream.emit('keypress', s, key);
    }
    /* Unrecognized or broken escape sequence, don't emit anything */
module.exports = {
  emitKeys,
  getStringWidth,
  isFullWidthCodePoint,
  kUTF16SurrogateThreshold,
  stripVTControlCharacters,
  CSI
'use strict';
const { Object } = primordials;
const REPL = require('repl');
const { kStandaloneREPL } = require('internal/repl/utils');
module.exports = Object.create(REPL);
module.exports.createInternalRepl = createRepl;
function createRepl(env, opts, cb) {
  if (typeof opts === 'function') {
    cb = opts;
    opts = null;
  opts = {
    [kStandaloneREPL]: true,
    ignoreUndefined: false,
    useGlobal: true,
    breakEvalOnSigint: true,
    ...opts
  };
  if (parseInt(env.NODE_NO_READLINE)) {
    opts.terminal = false;
  if (env.NODE_REPL_MODE) {
    opts.replMode = {
      'strict': REPL.REPL_MODE_STRICT,
      'sloppy': REPL.REPL_MODE_SLOPPY
    }[env.NODE_REPL_MODE.toLowerCase().trim()];
  if (opts.replMode === undefined) {
    opts.replMode = REPL.REPL_MODE_SLOPPY;
  const historySize = Number(env.NODE_REPL_HISTORY_SIZE);
  if (!Number.isNaN(historySize) && historySize > 0) {
    opts.historySize = historySize;
  } else {
    opts.historySize = 1000;
  const repl = REPL.start(opts);
  const term = 'terminal' in opts ? opts.terminal : process.stdout.isTTY;
  repl.setupHistory(term ? env.NODE_REPL_HISTORY : '', cb);
'use strict';
const { Object } = primordials;
const acorn = require('internal/deps/acorn/acorn/dist/acorn');
const walk = require('internal/deps/acorn/acorn-walk/dist/walk');
const privateMethods =
  require('internal/deps/acorn-plugins/acorn-private-methods/index');
const classFields =
  require('internal/deps/acorn-plugins/acorn-class-fields/index');
const numericSeparator =
  require('internal/deps/acorn-plugins/acorn-numeric-separator/index');
const staticClassFeatures =
  require('internal/deps/acorn-plugins/acorn-static-class-features/index');
const parser = acorn.Parser.extend(
  privateMethods,
  classFields,
  numericSeparator,
  staticClassFeatures
const noop = () => {};
const visitorsWithoutAncestors = {
  ClassDeclaration(node, state, c) {
    if (state.ancestors[state.ancestors.length - 2] === state.body) {
      state.prepend(node, `${node.id.name}=`);
    }
    walk.base.ClassDeclaration(node, state, c);
  },
  ForOfStatement(node, state, c) {
    if (node.await === true) {
      state.containsAwait = true;
    }
    walk.base.ForOfStatement(node, state, c);
  },
  FunctionDeclaration(node, state, c) {
    state.prepend(node, `${node.id.name}=`);
  },
  FunctionExpression: noop,
  ArrowFunctionExpression: noop,
  MethodDefinition: noop,
  AwaitExpression(node, state, c) {
    state.containsAwait = true;
    walk.base.AwaitExpression(node, state, c);
  },
  ReturnStatement(node, state, c) {
    state.containsReturn = true;
    walk.base.ReturnStatement(node, state, c);
  },
  VariableDeclaration(node, state, c) {
    if (node.kind === 'var' ||
        state.ancestors[state.ancestors.length - 2] === state.body) {
      if (node.declarations.length === 1) {
        state.replace(node.start, node.start + node.kind.length, 'void');
      } else {
        state.replace(node.start, node.start + node.kind.length, 'void (');
      }
      for (const decl of node.declarations) {
        state.prepend(decl, '(');
        state.append(decl, decl.init ? ')' : '=undefined)');
      }
      if (node.declarations.length !== 1) {
        state.append(node.declarations[node.declarations.length - 1], ')');
      }
    }
    walk.base.VariableDeclaration(node, state, c);
const visitors = {};
for (const nodeType of Object.keys(walk.base)) {
  const callback = visitorsWithoutAncestors[nodeType] || walk.base[nodeType];
  visitors[nodeType] = (node, state, c) => {
    const isNew = node !== state.ancestors[state.ancestors.length - 1];
    if (isNew) {
      state.ancestors.push(node);
    }
    callback(node, state, c);
    if (isNew) {
      state.ancestors.pop();
    }
  };
function processTopLevelAwait(src) {
  const wrapped = `(async () => { ${src} })()`;
  const wrappedArray = wrapped.split('');
  let root;
  try {
    root = parser.parse(wrapped, { ecmaVersion: 11 });
  } catch {
    return null;
  const body = root.body[0].expression.callee.body;
  const state = {
    body,
    ancestors: [],
    replace(from, to, str) {
      for (var i = from; i < to; i++) {
        wrappedArray[i] = '';
      }
      if (from === to) str += wrappedArray[from];
      wrappedArray[from] = str;
    },
    prepend(node, str) {
      wrappedArray[node.start] = str + wrappedArray[node.start];
    },
    append(node, str) {
      wrappedArray[node.end - 1] += str;
    },
    containsAwait: false,
    containsReturn: false
  };
  walk.recursive(body, state, visitors);
  // Do not transform if
  // 1. False alarm: there isn't actually an await expression.
  // 2. There is a top-level return, which is not allowed.
  if (!state.containsAwait || state.containsReturn) {
    return null;
  const last = body.body[body.body.length - 1];
  if (last.type === 'ExpressionStatement') {
    // For an expression statement of the form
    // ( expr ) ;
    // ^^^^^^^^^^   // last
    //   ^^^^       // last.expression
    //
    // We do not want the left parenthesis before the `return` keyword;
    // therefore we prepend the `return (` to `last`.
    //
    // On the other hand, we do not want the right parenthesis after the
    // semicolon. Since there can only be more right parentheses between
    // last.expression.end and the semicolon, appending one more to
    // last.expression should be fine.
    state.prepend(last, 'return (');
    state.append(last.expression, ')');
  return wrappedArray.join('');
module.exports = {
  processTopLevelAwait
'use strict';
const { Interface } = require('readline');
const path = require('path');
const fs = require('fs');
const os = require('os');
const debug = require('internal/util/debuglog').debuglog('repl');
const { clearTimeout, setTimeout } = require('timers');
// XXX(chrisdickinson): The 15ms debounce value is somewhat arbitrary.
// The debounce is to guard against code pasted into the REPL.
const kDebounceHistoryMS = 15;
module.exports = setupHistory;
function _writeToOutput(repl, message) {
  repl._writeToOutput(message);
  repl._refreshLine();
function setupHistory(repl, historyPath, ready) {
  // Empty string disables persistent history
  if (typeof historyPath === 'string')
    historyPath = historyPath.trim();
  if (historyPath === '') {
    repl._historyPrev = _replHistoryMessage;
    return ready(null, repl);
  if (!historyPath) {
    try {
      historyPath = path.join(os.homedir(), '.node_repl_history');
    } catch (err) {
      _writeToOutput(repl, '\nError: Could not get the home directory.\n' +
        'REPL session history will not be persisted.\n');
      debug(err.stack);
      repl._historyPrev = _replHistoryMessage;
      return ready(null, repl);
    }
  var timer = null;
  var writing = false;
  var pending = false;
  repl.pause();
  // History files are conventionally not readable by others:
  // https://github.com/nodejs/node/issues/3392
  // https://github.com/nodejs/node/pull/3394
  fs.open(historyPath, 'a+', 0o0600, oninit);
  function oninit(err, hnd) {
    if (err) {
      // Cannot open history file.
      // Don't crash, just don't persist history.
      _writeToOutput(repl, '\nError: Could not open history file.\n' +
        'REPL session history will not be persisted.\n');
      debug(err.stack);
      repl._historyPrev = _replHistoryMessage;
      repl.resume();
      return ready(null, repl);
    }
    fs.close(hnd, onclose);
  function onclose(err) {
    if (err) {
      return ready(err);
    }
    fs.readFile(historyPath, 'utf8', onread);
  function onread(err, data) {
    if (err) {
      return ready(err);
    }
    if (data) {
      repl.history = data.split(/[\n\r]+/, repl.historySize);
    } else {
      repl.history = [];
    }
    fs.open(historyPath, 'r+', onhandle);
  function onhandle(err, hnd) {
    if (err) {
      return ready(err);
    }
    fs.ftruncate(hnd, 0, (err) => {
      repl._historyHandle = hnd;
      repl.on('line', online);
      // Reading the file data out erases it
      repl.once('flushHistory', function() {
        repl.resume();
        ready(null, repl);
      });
      flushHistory();
    });
  // ------ history listeners ------
  function online(line) {
    repl._flushing = true;
    if (timer) {
      clearTimeout(timer);
    }
    timer = setTimeout(flushHistory, kDebounceHistoryMS);
  function flushHistory() {
    timer = null;
    if (writing) {
      pending = true;
      return;
    }
    writing = true;
    const historyData = repl.history.join(os.EOL);
    fs.write(repl._historyHandle, historyData, 0, 'utf8', onwritten);
  function onwritten(err, data) {
    writing = false;
    if (pending) {
      pending = false;
      online();
    } else {
      repl._flushing = Boolean(timer);
      if (!repl._flushing) {
        repl.emit('flushHistory');
      }
    }
function _replHistoryMessage() {
  if (this.history.length === 0) {
    _writeToOutput(
      this,
      '\nPersistent history support disabled. ' +
      'Set the NODE_REPL_HISTORY environment\nvariable to ' +
      'a valid, user-writable path to enable.\n'
    );
  this._historyPrev = Interface.prototype._historyPrev;
  return this._historyPrev();
'use strict';
const acorn = require('internal/deps/acorn/acorn/dist/acorn');
const privateMethods =
  require('internal/deps/acorn-plugins/acorn-private-methods/index');
const classFields =
  require('internal/deps/acorn-plugins/acorn-class-fields/index');
const numericSeparator =
  require('internal/deps/acorn-plugins/acorn-numeric-separator/index');
const staticClassFeatures =
  require('internal/deps/acorn-plugins/acorn-static-class-features/index');
const { tokTypes: tt, Parser: AcornParser } = acorn;
// If the error is that we've unexpectedly ended the input,
// then let the user try to recover by adding more input.
// Note: `e` (the original exception) is not used by the current implementation,
// but may be needed in the future.
function isRecoverableError(e, code) {
  // For similar reasons as `defaultEval`, wrap expressions starting with a
  // curly brace with parenthesis.  Note: only the open parenthesis is added
  // here as the point is to test for potentially valid but incomplete
  // expressions.
  if (/^\s*\{/.test(code) && isRecoverableError(e, `(${code}`)) return true;
  let recoverable = false;
  // Determine if the point of any error raised is at the end of the input.
  // There are two cases to consider:
  //
  //   1.  Any error raised after we have encountered the 'eof' token.
  //       This prevents us from declaring partial tokens (like '2e') as
  //       recoverable.
  //
  //   2.  Three cases where tokens can legally span lines.  This is
  //       template, comment, and strings with a backslash at the end of
  //       the line, indicating a continuation.  Note that we need to look
  //       for the specific errors of 'unterminated' kind (not, for example,
  //       a syntax error in a ${} expression in a template), and the only
  //       way to do that currently is to look at the message.  Should Acorn
  //       change these messages in the future, this will lead to a test
  //       failure, indicating that this code needs to be updated.
  //
  const RecoverableParser = AcornParser
    .extend(
      privateMethods,
      classFields,
      numericSeparator,
      staticClassFeatures,
      (Parser) => {
        return class extends Parser {
          nextToken() {
            super.nextToken();
            if (this.type === tt.eof)
              recoverable = true;
          }
          raise(pos, message) {
            switch (message) {
              case 'Unterminated template':
              case 'Unterminated comment':
                recoverable = true;
                break;
              case 'Unterminated string constant':
                const token = this.input.slice(this.lastTokStart, this.pos);
                // See https://www.ecma-international.org/ecma-262/#sec-line-terminators
                if (/\\(?:\r\n?|\n|\u2028|\u2029)$/.test(token)) {
                  recoverable = true;
                }
            }
            super.raise(pos, message);
          }
        };
      }
    );
  // Try to parse the code with acorn.  If the parse fails, ignore the acorn
  // error and return the recoverable status.
  try {
    RecoverableParser.parse(code, { ecmaVersion: 11 });
    // Odd case: the underlying JS engine (V8, Chakra) rejected this input
    // but Acorn detected no issue.  Presume that additional text won't
    // address this issue.
    return false;
  } catch {
    return recoverable;
module.exports = {
  isRecoverableError,
  kStandaloneREPL: Symbol('kStandaloneREPL')
'use strict';
const { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;
const EventEmitter = require('events');
// This object keeps track of the sockets that are sent
class SocketListSend extends EventEmitter {
  constructor(child, key) {
    super();
    this.key = key;
    this.child = child;
    child.once('exit', () => this.emit('exit', this));
  _request(msg, cmd, swallowErrors, callback) {
    const self = this;
    if (!this.child.connected) return onclose();
    this.child._send(msg, undefined, swallowErrors);
    function onclose() {
      self.child.removeListener('internalMessage', onreply);
      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());
    }
    function onreply(msg) {
      if (!(msg.cmd === cmd && msg.key === self.key)) return;
      self.child.removeListener('disconnect', onclose);
      self.child.removeListener('internalMessage', onreply);
      callback(null, msg);
    }
    this.child.once('disconnect', onclose);
    this.child.on('internalMessage', onreply);
  close(callback) {
    this._request({
      cmd: 'NODE_SOCKET_NOTIFY_CLOSE',
      key: this.key
    }, 'NODE_SOCKET_ALL_CLOSED', true, callback);
  getConnections(callback) {
    this._request({
      cmd: 'NODE_SOCKET_GET_COUNT',
      key: this.key
    }, 'NODE_SOCKET_COUNT', false, (err, msg) => {
      if (err) return callback(err);
      callback(null, msg.count);
    });
// This object keeps track of the sockets that are received
class SocketListReceive extends EventEmitter {
  constructor(child, key) {
    super();
    this.connections = 0;
    this.key = key;
    this.child = child;
    function onempty(self) {
      if (!self.child.connected) return;
      self.child._send({
        cmd: 'NODE_SOCKET_ALL_CLOSED',
        key: self.key
      }, undefined, true);
    }
    this.child.on('internalMessage', (msg) => {
      if (msg.key !== this.key) return;
      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {
        // Already empty
        if (this.connections === 0) return onempty(this);
        // Wait for sockets to get closed
        this.once('empty', onempty);
      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {
        if (!this.child.connected) return;
        this.child._send({
          cmd: 'NODE_SOCKET_COUNT',
          key: this.key,
          count: this.connections
        });
      }
    });
  add(obj) {
    this.connections++;
    // Notify the previous owner of the socket about its state change
    obj.socket.once('close', () => {
      this.connections--;
      if (this.connections === 0) this.emit('empty', this);
    });
module.exports = { SocketListSend, SocketListReceive };
'use strict';
process.emitWarning(
  'These APIs are for internal testing only. Do not use them.',
  'internal/test/binding');
module.exports = { internalBinding };
T%P%P%P%P% 
`%P%P%
Z%P%P% 
T%P%P% 
T%P%P% 
`%P%P% 
`%P%P%
Z%P%P%P%P% 
Z%P%P%P%P% 
'use strict';
const { Object } = primordials;
// Example:
// C=US\nST=CA\nL=SF\nO=Joyent\nOU=Node.js\nCN=ca1\nemailAddress=ry@clouds.org
function parseCertString(s) {
  const out = Object.create(null);
  const parts = s.split('\n');
  for (var i = 0, len = parts.length; i < len; i++) {
    const sepIndex = parts[i].indexOf('=');
    if (sepIndex > 0) {
      const key = parts[i].slice(0, sepIndex);
      const value = parts[i].slice(sepIndex + 1);
      if (key in out) {
        if (!Array.isArray(out[key])) {
          out[key] = [out[key]];
        }
        out[key].push(value);
      } else {
        out[key] = value;
      }
    }
  return out;
module.exports = {
  parseCertString
'use strict';
const { Object, SafeMap, SafeSet } = primordials;
const { trace } = internalBinding('trace_events');
const async_wrap = internalBinding('async_wrap');
const async_hooks = require('async_hooks');
// Use small letters such that chrome://tracing groups by the name.
// The behavior is not only useful but the same as the events emitted using
// the specific C++ macros.
const kBeforeEvent = 'b'.charCodeAt(0);
const kEndEvent = 'e'.charCodeAt(0);
const kTraceEventCategory = 'node,node.async_hooks';
const kEnabled = Symbol('enabled');
// It is faster to emit traceEvents directly from C++. Thus, this happens
// in async_wrap.cc. However, events emitted from the JavaScript API or the
// Embedder C++ API can't be emitted from async_wrap.cc. Thus they are
// emitted using the JavaScript API. To prevent emitting the same event
// twice the async_wrap.Providers list is used to filter the events.
const nativeProviders = new SafeSet(Object.keys(async_wrap.Providers));
const typeMemory = new SafeMap();
function createHook() {
  // In traceEvents it is not only the id but also the name that needs to be
  // repeated. Since async_hooks doesn't expose the provider type in the
  // non-init events, use a map to manually map the asyncId to the type name.
  const hook = async_hooks.createHook({
    init(asyncId, type, triggerAsyncId, resource) {
      if (nativeProviders.has(type)) return;
      typeMemory.set(asyncId, type);
      trace(kBeforeEvent, kTraceEventCategory,
            type, asyncId,
            {
              triggerAsyncId,
              executionAsyncId: async_hooks.executionAsyncId()
            });
    },
    before(asyncId) {
      const type = typeMemory.get(asyncId);
      if (type === undefined) return;
      trace(kBeforeEvent, kTraceEventCategory, `${type}_CALLBACK`, asyncId);
    },
    after(asyncId) {
      const type = typeMemory.get(asyncId);
      if (type === undefined) return;
      trace(kEndEvent, kTraceEventCategory, `${type}_CALLBACK`, asyncId);
    },
    destroy(asyncId) {
      const type = typeMemory.get(asyncId);
      if (type === undefined) return;
      trace(kEndEvent, kTraceEventCategory, type, asyncId);
      // Cleanup asyncId to type map
      typeMemory.delete(asyncId);
    }
  });
  return {
    enable() {
      if (this[kEnabled])
        return;
      this[kEnabled] = true;
      hook.enable();
    },
    disable() {
      if (!this[kEnabled])
        return;
      this[kEnabled] = false;
      hook.disable();
      typeMemory.clear();
    }
  };
exports.createHook = createHook;
// MIT License
// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
'use strict';
const {
  ERR_INVALID_ARG_TYPE,
  ERR_OUT_OF_RANGE
} = require('internal/errors').codes;
let OSRelease;
const COLORS_2 = 1;
const COLORS_16 = 4;
const COLORS_256 = 8;
const COLORS_16m = 24;
// Some entries were taken from `dircolors`
// (https://linux.die.net/man/1/dircolors). The corresponding terminals might
// support more than 16 colors, but this was not tested for.
// Copyright (C) 1996-2016 Free Software Foundation, Inc. Copying and
// distribution of this file, with or without modification, are permitted
// provided the copyright notice and this notice are preserved.
const TERM_ENVS = {
  'eterm': COLORS_16,
  'cons25': COLORS_16,
  'console': COLORS_16,
  'cygwin': COLORS_16,
  'dtterm': COLORS_16,
  'gnome': COLORS_16,
  'hurd': COLORS_16,
  'jfbterm': COLORS_16,
  'konsole': COLORS_16,
  'kterm': COLORS_16,
  'mlterm': COLORS_16,
  'putty': COLORS_16,
  'st': COLORS_16,
  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color
  'rxvt-unicode-24bit': COLORS_16m,
  // https://gist.github.com/XVilka/8346728#gistcomment-2823421
  'terminator': COLORS_16m
const TERM_ENVS_REG_EXP = [
  /ansi/,
  /color/,
  /linux/,
  /^con[0-9]*x[0-9]/,
  /^rxvt/,
  /^screen/,
  /^xterm/,
  /^vt100/
function warnOnDeactivatedColors(env) {
  let name;
  if (env.NODE_DISABLE_COLORS !== undefined)
    name = 'NODE_DISABLE_COLORS';
  if (env.NO_COLOR !== undefined)
    name = 'NO_COLOR';
  if (name !== undefined) {
    process.emitWarning(
      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`,
      'Warning'
    );
// The `getColorDepth` API got inspired by multiple sources such as
// https://github.com/chalk/supports-color,
// https://github.com/isaacs/color-support.
function getColorDepth(env = process.env) {
  // Use level 0-3 to support the same levels as `chalk` does. This is done for
  // consistency throughout the ecosystem.
  if (env.FORCE_COLOR !== undefined) {
    switch (env.FORCE_COLOR) {
      case '':
      case '1':
      case 'true':
        warnOnDeactivatedColors(env);
        return COLORS_16;
      case '2':
        warnOnDeactivatedColors(env);
        return COLORS_256;
      case '3':
        warnOnDeactivatedColors(env);
        return COLORS_16m;
      default:
        return COLORS_2;
    }
  if (env.NODE_DISABLE_COLORS !== undefined ||
      // See https://no-color.org/
      env.NO_COLOR !== undefined ||
      // The "dumb" special terminal, as defined by terminfo, doesn't support
      // ANSI color control codes.
      // See http://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials
      env.TERM === 'dumb') {
    return COLORS_2;
  if (process.platform === 'win32') {
    // Lazy load for startup performance.
    if (OSRelease === undefined) {
      const { release } = require('os');
      OSRelease = release().split('.');
    }
    // Windows 10 build 10586 is the first Windows release that supports 256
    // colors. Windows 10 build 14931 is the first release that supports
    // 16m/TrueColor.
    if (+OSRelease[0] >= 10) {
      const build = +OSRelease[2];
      if (build >= 14931)
        return COLORS_16m;
      if (build >= 10586)
        return COLORS_256;
    }
    return COLORS_16;
  if (env.TMUX) {
    return COLORS_256;
  if (env.CI) {
    if ('TRAVIS' in env || 'CIRCLECI' in env || 'APPVEYOR' in env ||
      'GITLAB_CI' in env || env.CI_NAME === 'codeship') {
      return COLORS_256;
    }
    return COLORS_2;
  if ('TEAMCITY_VERSION' in env) {
    return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ?
      COLORS_16 : COLORS_2;
  switch (env.TERM_PROGRAM) {
    case 'iTerm.app':
      if (!env.TERM_PROGRAM_VERSION ||
        /^[0-2]\./.test(env.TERM_PROGRAM_VERSION)) {
        return COLORS_256;
      }
      return COLORS_16m;
    case 'HyperTerm':
    case 'MacTerm':
      return COLORS_16m;
    case 'Apple_Terminal':
      return COLORS_256;
  if (env.TERM) {
    if (/^xterm-256/.test(env.TERM))
      return COLORS_256;
    const termEnv = env.TERM.toLowerCase();
    if (TERM_ENVS[termEnv]) {
      return TERM_ENVS[termEnv];
    }
    for (const term of TERM_ENVS_REG_EXP) {
      if (term.test(termEnv)) {
        return COLORS_16;
      }
    }
  if (env.COLORTERM) {
    if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit')
      return COLORS_16m;
    return COLORS_16;
  return COLORS_2;
function hasColors(count, env) {
  if (env === undefined &&
      (count === undefined || typeof count === 'object' && count !== null)) {
    env = count;
    count = 16;
  } else {
    if (typeof count !== 'number') {
      throw new ERR_INVALID_ARG_TYPE('count', 'number', count);
    }
    if (count < 2) {
      throw new ERR_OUT_OF_RANGE('count', '>= 2', count);
    }
  return count <= 2 ** getColorDepth(env);
module.exports = {
  getColorDepth,
  hasColors
'use strict';
const { Object, Reflect } = primordials;
const { inspect } = require('internal/util/inspect');
const {
  encodeStr,
  hexTable,
  isHexTable
} = require('internal/querystring');
const { getConstructorOf, removeColors } = require('internal/util');
const {
  ERR_ARG_NOT_ITERABLE,
  ERR_INVALID_ARG_TYPE,
  ERR_INVALID_CALLBACK,
  ERR_INVALID_FILE_URL_HOST,
  ERR_INVALID_FILE_URL_PATH,
  ERR_INVALID_THIS,
  ERR_INVALID_TUPLE,
  ERR_INVALID_URL,
  ERR_INVALID_URL_SCHEME,
  ERR_MISSING_ARGS
} = require('internal/errors').codes;
const {
  CHAR_AMPERSAND,
  CHAR_BACKWARD_SLASH,
  CHAR_EQUAL,
  CHAR_FORWARD_SLASH,
  CHAR_LOWERCASE_A,
  CHAR_LOWERCASE_Z,
  CHAR_PERCENT,
  CHAR_PLUS
} = require('internal/constants');
const path = require('path');
// Lazy loaded for startup performance.
let querystring;
const { platform } = process;
const isWindows = platform === 'win32';
const {
  domainToASCII: _domainToASCII,
  domainToUnicode: _domainToUnicode,
  encodeAuth,
  toUSVString: _toUSVString,
  parse,
  setURLConstructor,
  URL_FLAGS_CANNOT_BE_BASE,
  URL_FLAGS_HAS_FRAGMENT,
  URL_FLAGS_HAS_HOST,
  URL_FLAGS_HAS_PASSWORD,
  URL_FLAGS_HAS_PATH,
  URL_FLAGS_HAS_QUERY,
  URL_FLAGS_HAS_USERNAME,
  URL_FLAGS_IS_DEFAULT_SCHEME_PORT,
  URL_FLAGS_SPECIAL,
  kFragment,
  kHost,
  kHostname,
  kPathStart,
  kPort,
  kQuery,
  kSchemeStart
} = internalBinding('url');
const context = Symbol('context');
const cannotBeBase = Symbol('cannot-be-base');
const cannotHaveUsernamePasswordPort =
    Symbol('cannot-have-username-password-port');
const special = Symbol('special');
const searchParams = Symbol('query');
const kFormat = Symbol('format');
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
const IteratorPrototype = Object.getPrototypeOf(
  Object.getPrototypeOf([][Symbol.iterator]())
const unpairedSurrogateRe =
    /(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/;
function toUSVString(val) {
  const str = `${val}`;
  // As of V8 5.5, `str.search()` (and `unpairedSurrogateRe[@@search]()`) are
  // slower than `unpairedSurrogateRe.exec()`.
  const match = unpairedSurrogateRe.exec(str);
  if (!match)
    return str;
  return _toUSVString(str, match.index);
// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque
const kOpaqueOrigin = 'null';
// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin
function serializeTupleOrigin(scheme, host, port) {
  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;
// This class provides the internal state of a URL object. An instance of this
// class is stored in every URL object and is accessed internally by setters
// and getters. It roughly corresponds to the concept of a URL record in the
// URL Standard, with a few differences. It is also the object transported to
// the C++ binding.
// Refs: https://url.spec.whatwg.org/#concept-url
class URLContext {
  constructor() {
    this.flags = 0;
    this.scheme = ':';
    this.username = '';
    this.password = '';
    this.host = null;
    this.port = null;
    this.path = [];
    this.query = null;
    this.fragment = null;
class URLSearchParams {
  // URL Standard says the default value is '', but as undefined and '' have
  // the same result, undefined is used to prevent unnecessary parsing.
  // Default parameter is necessary to keep URLSearchParams.length === 0 in
  // accordance with Web IDL spec.
  constructor(init = undefined) {
    if (init === null || init === undefined) {
      this[searchParams] = [];
    } else if (typeof init === 'object' || typeof init === 'function') {
      const method = init[Symbol.iterator];
      if (method === this[Symbol.iterator]) {
        // While the spec does not have this branch, we can use it as a
        // shortcut to avoid having to go through the costly generic iterator.
        const childParams = init[searchParams];
        this[searchParams] = childParams.slice();
      } else if (method !== null && method !== undefined) {
        if (typeof method !== 'function') {
          throw new ERR_ARG_NOT_ITERABLE('Query pairs');
        }
        // Sequence<sequence<USVString>>
        // Note: per spec we have to first exhaust the lists then process them
        const pairs = [];
        for (const pair of init) {
          if ((typeof pair !== 'object' && typeof pair !== 'function') ||
              pair === null ||
              typeof pair[Symbol.iterator] !== 'function') {
            throw new ERR_INVALID_TUPLE('Each query pair', '[name, value]');
          }
          const convertedPair = [];
          for (const element of pair)
            convertedPair.push(toUSVString(element));
          pairs.push(convertedPair);
        }
        this[searchParams] = [];
        for (const pair of pairs) {
          if (pair.length !== 2) {
            throw new ERR_INVALID_TUPLE('Each query pair', '[name, value]');
          }
          this[searchParams].push(pair[0], pair[1]);
        }
      } else {
        // Record<USVString, USVString>
        // Need to use reflection APIs for full spec compliance.
        this[searchParams] = [];
        const keys = Reflect.ownKeys(init);
        for (var i = 0; i < keys.length; i++) {
          const key = keys[i];
          const desc = Reflect.getOwnPropertyDescriptor(init, key);
          if (desc !== undefined && desc.enumerable) {
            const typedKey = toUSVString(key);
            const typedValue = toUSVString(init[key]);
            this[searchParams].push(typedKey, typedValue);
          }
        }
      }
    } else {
      // USVString
      init = toUSVString(init);
      if (init[0] === '?') init = init.slice(1);
      initSearchParams(this, init);
    }
    // "associated url object"
    this[context] = null;
  [inspect.custom](recurseTimes, ctx) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (typeof recurseTimes === 'number' && recurseTimes < 0)
      return ctx.stylize('[Object]', 'special');
    const separator = ', ';
    const innerOpts = { ...ctx };
    if (recurseTimes !== null) {
      innerOpts.depth = recurseTimes - 1;
    }
    const innerInspect = (v) => inspect(v, innerOpts);
    const list = this[searchParams];
    const output = [];
    for (var i = 0; i < list.length; i += 2)
      output.push(`${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);
    const length = output.reduce(
      (prev, cur) => prev + removeColors(cur).length + separator.length,
      -separator.length
    );
    if (length > ctx.breakLength) {
      return `${this.constructor.name} {\n  ${output.join(',\n  ')} }`;
    } else if (output.length) {
      return `${this.constructor.name} { ${output.join(separator)} }`;
    } else {
      return `${this.constructor.name} {}`;
    }
function onParseComplete(flags, protocol, username, password,
                         host, port, path, query, fragment) {
  const ctx = this[context];
  ctx.flags = flags;
  ctx.scheme = protocol;
  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';
  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';
  ctx.port = port;
  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];
  ctx.query = query;
  ctx.fragment = fragment;
  ctx.host = host;
  if (!this[searchParams]) { // Invoked from URL constructor
    this[searchParams] = new URLSearchParams();
    this[searchParams][context] = this;
  initSearchParams(this[searchParams], query);
function onParseError(flags, input) {
  throw new ERR_INVALID_URL(input);
function onParseProtocolComplete(flags, protocol, username, password,
                                 host, port, path, query, fragment) {
  const ctx = this[context];
  if ((flags & URL_FLAGS_SPECIAL) !== 0) {
    ctx.flags |= URL_FLAGS_SPECIAL;
  } else {
    ctx.flags &= ~URL_FLAGS_SPECIAL;
  ctx.scheme = protocol;
  ctx.port = port;
function onParseHostnameComplete(flags, protocol, username, password,
                                 host, port, path, query, fragment) {
  const ctx = this[context];
  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {
    ctx.host = host;
    ctx.flags |= URL_FLAGS_HAS_HOST;
  } else {
    ctx.host = null;
    ctx.flags &= ~URL_FLAGS_HAS_HOST;
function onParsePortComplete(flags, protocol, username, password,
                             host, port, path, query, fragment) {
  this[context].port = port;
function onParseHostComplete(flags, protocol, username, password,
                             host, port, path, query, fragment) {
  onParseHostnameComplete.apply(this, arguments);
  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))
    onParsePortComplete.apply(this, arguments);
function onParsePathComplete(flags, protocol, username, password,
                             host, port, path, query, fragment) {
  const ctx = this[context];
  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {
    ctx.path = path;
    ctx.flags |= URL_FLAGS_HAS_PATH;
  } else {
    ctx.path = [];
    ctx.flags &= ~URL_FLAGS_HAS_PATH;
  // The C++ binding may set host to empty string.
  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {
    ctx.host = host;
    ctx.flags |= URL_FLAGS_HAS_HOST;
function onParseSearchComplete(flags, protocol, username, password,
                               host, port, path, query, fragment) {
  this[context].query = query;
function onParseHashComplete(flags, protocol, username, password,
                             host, port, path, query, fragment) {
  this[context].fragment = fragment;
class URL {
  constructor(input, base) {
    // toUSVString is not needed.
    input = `${input}`;
    let base_context;
    if (base !== undefined) {
      base_context = new URL(base)[context];
    }
    this[context] = new URLContext();
    parse(input, -1, base_context, undefined, onParseComplete.bind(this),
          onParseError);
  get [special]() {
    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;
  get [cannotBeBase]() {
    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;
  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port
  get [cannotHaveUsernamePasswordPort]() {
    const { host, scheme } = this[context];
    return ((host == null || host === '') ||
            this[cannotBeBase] ||
            scheme === 'file:');
  [inspect.custom](depth, opts) {
    if (this == null ||
        Object.getPrototypeOf(this[context]) !== URLContext.prototype) {
      throw new ERR_INVALID_THIS('URL');
    }
    if (typeof depth === 'number' && depth < 0)
      return this;
    const ctor = getConstructorOf(this);
    const obj = Object.create({
      constructor: ctor === null ? URL : ctor
    });
    obj.href = this.href;
    obj.origin = this.origin;
    obj.protocol = this.protocol;
    obj.username = this.username;
    obj.password = this.password;
    obj.host = this.host;
    obj.hostname = this.hostname;
    obj.port = this.port;
    obj.pathname = this.pathname;
    obj.search = this.search;
    obj.searchParams = this.searchParams;
    obj.hash = this.hash;
    if (opts.showHidden) {
      obj.cannotBeBase = this[cannotBeBase];
      obj.special = this[special];
      obj[context] = this[context];
    }
    return inspect(obj, opts);
Object.defineProperties(URL.prototype, {
  [kFormat]: {
    enumerable: false,
    configurable: false,
    // eslint-disable-next-line func-name-matching
    value: function format(options) {
      if (options && typeof options !== 'object')
        throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
      options = {
        fragment: true,
        unicode: false,
        search: true,
        auth: true,
        ...options
      };
      const ctx = this[context];
      var ret = ctx.scheme;
      if (ctx.host !== null) {
        ret += '//';
        const has_username = ctx.username !== '';
        const has_password = ctx.password !== '';
        if (options.auth && (has_username || has_password)) {
          if (has_username)
            ret += ctx.username;
          if (has_password)
            ret += `:${ctx.password}`;
          ret += '@';
        }
        ret += options.unicode ?
          domainToUnicode(this.hostname) : this.hostname;
        if (ctx.port !== null)
          ret += `:${ctx.port}`;
      } else if (ctx.scheme === 'file:') {
        ret += '//';
      }
      if (this.pathname)
        ret += this.pathname;
      if (options.search && ctx.query !== null)
        ret += `?${ctx.query}`;
      if (options.fragment && ctx.fragment !== null)
        ret += `#${ctx.fragment}`;
      return ret;
    }
  },
  [Symbol.toStringTag]: {
    configurable: true,
    value: 'URL'
  },
  toString: {
    // https://heycam.github.io/webidl/#es-stringifier
    writable: true,
    enumerable: true,
    configurable: true,
    // eslint-disable-next-line func-name-matching
    value: function toString() {
      return this[kFormat]({});
    }
  },
  href: {
    enumerable: true,
    configurable: true,
    get() {
      return this[kFormat]({});
    },
    set(input) {
      // toUSVString is not needed.
      input = `${input}`;
      parse(input, -1, undefined, undefined, onParseComplete.bind(this),
            onParseError);
    }
  },
  origin: {  // readonly
    enumerable: true,
    configurable: true,
    get() {
      // Refs: https://url.spec.whatwg.org/#concept-url-origin
      const ctx = this[context];
      switch (ctx.scheme) {
        case 'blob:':
          if (ctx.path.length > 0) {
            try {
              return (new URL(ctx.path[0])).origin;
            } catch {
              // Fall through... do nothing
            }
          }
          return kOpaqueOrigin;
        case 'ftp:':
        case 'gopher:':
        case 'http:':
        case 'https:':
        case 'ws:':
        case 'wss:':
          return serializeTupleOrigin(ctx.scheme, ctx.host, ctx.port);
      }
      return kOpaqueOrigin;
    }
  },
  protocol: {
    enumerable: true,
    configurable: true,
    get() {
      return this[context].scheme;
    },
    set(scheme) {
      // toUSVString is not needed.
      scheme = `${scheme}`;
      if (scheme.length === 0)
        return;
      const ctx = this[context];
      if (ctx.scheme === 'file:' &&
          (ctx.host === '' || ctx.host === null)) {
        return;
      }
      parse(scheme, kSchemeStart, null, ctx,
            onParseProtocolComplete.bind(this));
    }
  },
  username: {
    enumerable: true,
    configurable: true,
    get() {
      return this[context].username;
    },
    set(username) {
      // toUSVString is not needed.
      username = `${username}`;
      if (this[cannotHaveUsernamePasswordPort])
        return;
      const ctx = this[context];
      if (username === '') {
        ctx.username = '';
        ctx.flags &= ~URL_FLAGS_HAS_USERNAME;
        return;
      }
      ctx.username = encodeAuth(username);
      ctx.flags |= URL_FLAGS_HAS_USERNAME;
    }
  },
  password: {
    enumerable: true,
    configurable: true,
    get() {
      return this[context].password;
    },
    set(password) {
      // toUSVString is not needed.
      password = `${password}`;
      if (this[cannotHaveUsernamePasswordPort])
        return;
      const ctx = this[context];
      if (password === '') {
        ctx.password = '';
        ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;
        return;
      }
      ctx.password = encodeAuth(password);
      ctx.flags |= URL_FLAGS_HAS_PASSWORD;
    }
  },
  host: {
    enumerable: true,
    configurable: true,
    get() {
      const ctx = this[context];
      var ret = ctx.host || '';
      if (ctx.port !== null)
        ret += `:${ctx.port}`;
      return ret;
    },
    set(host) {
      const ctx = this[context];
      // toUSVString is not needed.
      host = `${host}`;
      if (this[cannotBeBase]) {
        // Cannot set the host if cannot-be-base is set
        return;
      }
      parse(host, kHost, null, ctx, onParseHostComplete.bind(this));
    }
  },
  hostname: {
    enumerable: true,
    configurable: true,
    get() {
      return this[context].host || '';
    },
    set(host) {
      const ctx = this[context];
      // toUSVString is not needed.
      host = `${host}`;
      if (this[cannotBeBase]) {
        // Cannot set the host if cannot-be-base is set
        return;
      }
      parse(host, kHostname, null, ctx, onParseHostnameComplete.bind(this));
    }
  },
  port: {
    enumerable: true,
    configurable: true,
    get() {
      const port = this[context].port;
      return port === null ? '' : String(port);
    },
    set(port) {
      // toUSVString is not needed.
      port = `${port}`;
      if (this[cannotHaveUsernamePasswordPort])
        return;
      const ctx = this[context];
      if (port === '') {
        ctx.port = null;
        return;
      }
      parse(port, kPort, null, ctx, onParsePortComplete.bind(this));
    }
  },
  pathname: {
    enumerable: true,
    configurable: true,
    get() {
      const ctx = this[context];
      if (this[cannotBeBase])
        return ctx.path[0];
      if (ctx.path.length === 0)
        return '';
      return `/${ctx.path.join('/')}`;
    },
    set(path) {
      // toUSVString is not needed.
      path = `${path}`;
      if (this[cannotBeBase])
        return;
      parse(path, kPathStart, null, this[context],
            onParsePathComplete.bind(this));
    }
  },
  search: {
    enumerable: true,
    configurable: true,
    get() {
      const { query } = this[context];
      if (query === null || query === '')
        return '';
      return `?${query}`;
    },
    set(search) {
      const ctx = this[context];
      search = toUSVString(search);
      if (search === '') {
        ctx.query = null;
        ctx.flags &= ~URL_FLAGS_HAS_QUERY;
      } else {
        if (search[0] === '?') search = search.slice(1);
        ctx.query = '';
        ctx.flags |= URL_FLAGS_HAS_QUERY;
        if (search) {
          parse(search, kQuery, null, ctx, onParseSearchComplete.bind(this));
        }
      }
      initSearchParams(this[searchParams], search);
    }
  },
  searchParams: {  // readonly
    enumerable: true,
    configurable: true,
    get() {
      return this[searchParams];
    }
  },
  hash: {
    enumerable: true,
    configurable: true,
    get() {
      const { fragment } = this[context];
      if (fragment === null || fragment === '')
        return '';
      return `#${fragment}`;
    },
    set(hash) {
      const ctx = this[context];
      // toUSVString is not needed.
      hash = `${hash}`;
      if (!hash) {
        ctx.fragment = null;
        ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;
        return;
      }
      if (hash[0] === '#') hash = hash.slice(1);
      ctx.fragment = '';
      ctx.flags |= URL_FLAGS_HAS_FRAGMENT;
      parse(hash, kFragment, null, ctx, onParseHashComplete.bind(this));
    }
  },
  toJSON: {
    writable: true,
    enumerable: true,
    configurable: true,
    // eslint-disable-next-line func-name-matching
    value: function toJSON() {
      return this[kFormat]({});
    }
function update(url, params) {
  if (!url)
    return;
  const ctx = url[context];
  const serializedParams = params.toString();
  if (serializedParams) {
    ctx.query = serializedParams;
    ctx.flags |= URL_FLAGS_HAS_QUERY;
  } else {
    ctx.query = null;
    ctx.flags &= ~URL_FLAGS_HAS_QUERY;
function initSearchParams(url, init) {
  if (!init) {
    url[searchParams] = [];
    return;
  url[searchParams] = parseParams(init);
// application/x-www-form-urlencoded parser
// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser
function parseParams(qs) {
  const out = [];
  var pairStart = 0;
  var lastPos = 0;
  var seenSep = false;
  var buf = '';
  var encoded = false;
  var encodeCheck = 0;
  var i;
  for (i = 0; i < qs.length; ++i) {
    const code = qs.charCodeAt(i);
    // Try matching key/value pair separator
    if (code === CHAR_AMPERSAND) {
      if (pairStart === i) {
        // We saw an empty substring between pair separators
        lastPos = pairStart = i + 1;
        continue;
      }
      if (lastPos < i)
        buf += qs.slice(lastPos, i);
      if (encoded)
        buf = querystring.unescape(buf);
      out.push(buf);
      // If `buf` is the key, add an empty value.
      if (!seenSep)
        out.push('');
      seenSep = false;
      buf = '';
      encoded = false;
      encodeCheck = 0;
      lastPos = pairStart = i + 1;
      continue;
    }
    // Try matching key/value separator (e.g. '=') if we haven't already
    if (!seenSep && code === CHAR_EQUAL) {
      // Key/value separator match!
      if (lastPos < i)
        buf += qs.slice(lastPos, i);
      if (encoded)
        buf = querystring.unescape(buf);
      out.push(buf);
      seenSep = true;
      buf = '';
      encoded = false;
      encodeCheck = 0;
      lastPos = i + 1;
      continue;
    }
    // Handle + and percent decoding.
    if (code === CHAR_PLUS) {
      if (lastPos < i)
        buf += qs.slice(lastPos, i);
      buf += ' ';
      lastPos = i + 1;
    } else if (!encoded) {
      // Try to match an (valid) encoded byte (once) to minimize unnecessary
      // calls to string decoding functions
      if (code === CHAR_PERCENT) {
        encodeCheck = 1;
      } else if (encodeCheck > 0) {
        if (isHexTable[code] === 1) {
          if (++encodeCheck === 3) {
            querystring = require('querystring');
            encoded = true;
          }
        } else {
          encodeCheck = 0;
        }
      }
    }
  // Deal with any leftover key or value data
  // There is a trailing &. No more processing is needed.
  if (pairStart === i)
    return out;
  if (lastPos < i)
    buf += qs.slice(lastPos, i);
  if (encoded)
    buf = querystring.unescape(buf);
  out.push(buf);
  // If `buf` is the key, add an empty value.
  if (!seenSep)
    out.push('');
  return out;
// Adapted from querystring's implementation.
// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer
const noEscape = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0x00 - 0x0F
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0x10 - 0x1F
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, // 0x20 - 0x2F
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 0x30 - 0x3F
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 0x40 - 0x4F
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, // 0x50 - 0x5F
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 0x60 - 0x6F
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0  // 0x70 - 0x7F
// Special version of hexTable that uses `+` for U+0020 SPACE.
const paramHexTable = hexTable.slice();
paramHexTable[0x20] = '+';
// application/x-www-form-urlencoded serializer
// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer
function serializeParams(array) {
  const len = array.length;
  if (len === 0)
    return '';
  const firstEncodedParam = encodeStr(array[0], noEscape, paramHexTable);
  const firstEncodedValue = encodeStr(array[1], noEscape, paramHexTable);
  let output = `${firstEncodedParam}=${firstEncodedValue}`;
  for (var i = 2; i < len; i += 2) {
    const encodedParam = encodeStr(array[i], noEscape, paramHexTable);
    const encodedValue = encodeStr(array[i + 1], noEscape, paramHexTable);
    output += `&${encodedParam}=${encodedValue}`;
  return output;
// Mainly to mitigate func-name-matching ESLint rule
function defineIDLClass(proto, classStr, obj) {
  // https://heycam.github.io/webidl/#dfn-class-string
  Object.defineProperty(proto, Symbol.toStringTag, {
    writable: false,
    enumerable: false,
    configurable: true,
    value: classStr
  });
  // https://heycam.github.io/webidl/#es-operations
  for (const key of Object.keys(obj)) {
    Object.defineProperty(proto, key, {
      writable: true,
      enumerable: true,
      configurable: true,
      value: obj[key]
    });
  for (const key of Object.getOwnPropertySymbols(obj)) {
    Object.defineProperty(proto, key, {
      writable: true,
      enumerable: false,
      configurable: true,
      value: obj[key]
    });
// for merge sort
function merge(out, start, mid, end, lBuffer, rBuffer) {
  const sizeLeft = mid - start;
  const sizeRight = end - mid;
  var l, r, o;
  for (l = 0; l < sizeLeft; l++)
    lBuffer[l] = out[start + l];
  for (r = 0; r < sizeRight; r++)
    rBuffer[r] = out[mid + r];
  l = 0;
  r = 0;
  o = start;
  while (l < sizeLeft && r < sizeRight) {
    if (lBuffer[l] <= rBuffer[r]) {
      out[o++] = lBuffer[l++];
      out[o++] = lBuffer[l++];
    } else {
      out[o++] = rBuffer[r++];
      out[o++] = rBuffer[r++];
    }
  while (l < sizeLeft)
    out[o++] = lBuffer[l++];
  while (r < sizeRight)
    out[o++] = rBuffer[r++];
defineIDLClass(URLSearchParams.prototype, 'URLSearchParams', {
  append(name, value) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (arguments.length < 2) {
      throw new ERR_MISSING_ARGS('name', 'value');
    }
    name = toUSVString(name);
    value = toUSVString(value);
    this[searchParams].push(name, value);
    update(this[context], this);
  },
  delete(name) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (arguments.length < 1) {
      throw new ERR_MISSING_ARGS('name');
    }
    const list = this[searchParams];
    name = toUSVString(name);
    for (var i = 0; i < list.length;) {
      const cur = list[i];
      if (cur === name) {
        list.splice(i, 2);
      } else {
        i += 2;
      }
    }
    update(this[context], this);
  },
  get(name) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (arguments.length < 1) {
      throw new ERR_MISSING_ARGS('name');
    }
    const list = this[searchParams];
    name = toUSVString(name);
    for (var i = 0; i < list.length; i += 2) {
      if (list[i] === name) {
        return list[i + 1];
      }
    }
    return null;
  },
  getAll(name) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (arguments.length < 1) {
      throw new ERR_MISSING_ARGS('name');
    }
    const list = this[searchParams];
    const values = [];
    name = toUSVString(name);
    for (var i = 0; i < list.length; i += 2) {
      if (list[i] === name) {
        values.push(list[i + 1]);
      }
    }
    return values;
  },
  has(name) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (arguments.length < 1) {
      throw new ERR_MISSING_ARGS('name');
    }
    const list = this[searchParams];
    name = toUSVString(name);
    for (var i = 0; i < list.length; i += 2) {
      if (list[i] === name) {
        return true;
      }
    }
    return false;
  },
  set(name, value) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (arguments.length < 2) {
      throw new ERR_MISSING_ARGS('name', 'value');
    }
    const list = this[searchParams];
    name = toUSVString(name);
    value = toUSVString(value);
    // If there are any name-value pairs whose name is `name`, in `list`, set
    // the value of the first such name-value pair to `value` and remove the
    // others.
    var found = false;
    for (var i = 0; i < list.length;) {
      const cur = list[i];
      if (cur === name) {
        if (!found) {
          list[i + 1] = value;
          found = true;
          i += 2;
        } else {
          list.splice(i, 2);
        }
      } else {
        i += 2;
      }
    }
    // Otherwise, append a new name-value pair whose name is `name` and value
    // is `value`, to `list`.
    if (!found) {
      list.push(name, value);
    }
    update(this[context], this);
  },
  sort() {
    const a = this[searchParams];
    const len = a.length;
    if (len <= 2) {
      // Nothing needs to be done.
    } else if (len < 100) {
      // 100 is found through testing.
      // Simple stable in-place insertion sort
      // Derived from v8/src/js/array.js
      for (var i = 2; i < len; i += 2) {
        var curKey = a[i];
        var curVal = a[i + 1];
        var j;
        for (j = i - 2; j >= 0; j -= 2) {
          if (a[j] > curKey) {
            a[j + 2] = a[j];
            a[j + 3] = a[j + 1];
          } else {
            break;
          }
        }
        a[j + 2] = curKey;
        a[j + 3] = curVal;
      }
    } else {
      // Bottom-up iterative stable merge sort
      const lBuffer = new Array(len);
      const rBuffer = new Array(len);
      for (var step = 2; step < len; step *= 2) {
        for (var start = 0; start < len - 2; start += 2 * step) {
          var mid = start + step;
          var end = mid + step;
          end = end < len ? end : len;
          if (mid > end)
            continue;
          merge(a, start, mid, end, lBuffer, rBuffer);
        }
      }
    }
    update(this[context], this);
  },
  // https://heycam.github.io/webidl/#es-iterators
  // Define entries here rather than [Symbol.iterator] as the function name
  // must be set to `entries`.
  entries() {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    return createSearchParamsIterator(this, 'key+value');
  },
  forEach(callback, thisArg = undefined) {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    if (typeof callback !== 'function') {
      throw new ERR_INVALID_CALLBACK(callback);
    }
    let list = this[searchParams];
    var i = 0;
    while (i < list.length) {
      const key = list[i];
      const value = list[i + 1];
      callback.call(thisArg, value, key, this);
      // In case the URL object's `search` is updated
      list = this[searchParams];
      i += 2;
    }
  },
  // https://heycam.github.io/webidl/#es-iterable
  keys() {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    return createSearchParamsIterator(this, 'key');
  },
  values() {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    return createSearchParamsIterator(this, 'value');
  },
  // https://heycam.github.io/webidl/#es-stringifier
  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
  toString() {
    if (!this || !this[searchParams] || this[searchParams][searchParams]) {
      throw new ERR_INVALID_THIS('URLSearchParams');
    }
    return serializeParams(this[searchParams]);
// https://heycam.github.io/webidl/#es-iterable-entries
Object.defineProperty(URLSearchParams.prototype, Symbol.iterator, {
  writable: true,
  configurable: true,
  value: URLSearchParams.prototype.entries
// https://heycam.github.io/webidl/#dfn-default-iterator-object
function createSearchParamsIterator(target, kind) {
  const iterator = Object.create(URLSearchParamsIteratorPrototype);
  iterator[context] = {
    target,
    kind,
    index: 0
  };
  return iterator;
// https://heycam.github.io/webidl/#dfn-iterator-prototype-object
const URLSearchParamsIteratorPrototype = Object.create(IteratorPrototype);
defineIDLClass(URLSearchParamsIteratorPrototype, 'URLSearchParams Iterator', {
  next() {
    if (!this ||
        Object.getPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {
      throw new ERR_INVALID_THIS('URLSearchParamsIterator');
    }
    const {
      target,
      kind,
      index
    } = this[context];
    const values = target[searchParams];
    const len = values.length;
    if (index >= len) {
      return {
        value: undefined,
        done: true
      };
    }
    const name = values[index];
    const value = values[index + 1];
    this[context].index = index + 2;
    let result;
    if (kind === 'key') {
      result = name;
    } else if (kind === 'value') {
      result = value;
    } else {
      result = [name, value];
    }
    return {
      value: result,
      done: false
    };
  },
  [inspect.custom](recurseTimes, ctx) {
    if (this == null || this[context] == null || this[context].target == null)
      throw new ERR_INVALID_THIS('URLSearchParamsIterator');
    if (typeof recurseTimes === 'number' && recurseTimes < 0)
      return ctx.stylize('[Object]', 'special');
    const innerOpts = { ...ctx };
    if (recurseTimes !== null) {
      innerOpts.depth = recurseTimes - 1;
    }
    const {
      target,
      kind,
      index
    } = this[context];
    const output = target[searchParams].slice(index).reduce((prev, cur, i) => {
      const key = i % 2 === 0;
      if (kind === 'key' && key) {
        prev.push(cur);
      } else if (kind === 'value' && !key) {
        prev.push(cur);
      } else if (kind === 'key+value' && !key) {
        prev.push([target[searchParams][index + i - 1], cur]);
      }
      return prev;
    }, []);
    const breakLn = inspect(output, innerOpts).includes('\n');
    const outputStrs = output.map((p) => inspect(p, innerOpts));
    let outputStr;
    if (breakLn) {
      outputStr = `\n  ${outputStrs.join(',\n  ')}`;
    } else {
      outputStr = ` ${outputStrs.join(', ')}`;
    }
    return `${this[Symbol.toStringTag]} {${outputStr} }`;
function domainToASCII(domain) {
  if (arguments.length < 1)
    throw new ERR_MISSING_ARGS('domain');
  // toUSVString is not needed.
  return _domainToASCII(`${domain}`);
function domainToUnicode(domain) {
  if (arguments.length < 1)
    throw new ERR_MISSING_ARGS('domain');
  // toUSVString is not needed.
  return _domainToUnicode(`${domain}`);
// Utility function that converts a URL object into an ordinary
// options object as expected by the http.request and https.request
// APIs.
function urlToOptions(url) {
  const options = {
    protocol: url.protocol,
    hostname: typeof url.hostname === 'string' && url.hostname.startsWith('[') ?
      url.hostname.slice(1, -1) :
      url.hostname,
    hash: url.hash,
    search: url.search,
    pathname: url.pathname,
    path: `${url.pathname || ''}${url.search || ''}`,
    href: url.href
  };
  if (url.port !== '') {
    options.port = Number(url.port);
  if (url.username || url.password) {
    options.auth = `${url.username}:${url.password}`;
  return options;
const forwardSlashRegEx = /\//g;
function getPathFromURLWin32(url) {
  const hostname = url.hostname;
  var pathname = url.pathname;
  for (var n = 0; n < pathname.length; n++) {
    if (pathname[n] === '%') {
      var third = pathname.codePointAt(n + 2) | 0x20;
      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /
          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \
        throw new ERR_INVALID_FILE_URL_PATH(
          'must not include encoded \\ or / characters'
        );
      }
    }
  pathname = pathname.replace(forwardSlashRegEx, '\\');
  pathname = decodeURIComponent(pathname);
  if (hostname !== '') {
    // If hostname is set, then we have a UNC path
    // Pass the hostname through domainToUnicode just in case
    // it is an IDN using punycode encoding. We do not need to worry
    // about percent encoding because the URL parser will have
    // already taken care of that for us. Note that this only
    // causes IDNs with an appropriate `xn--` prefix to be decoded.
    return `\\\\${domainToUnicode(hostname)}${pathname}`;
  } else {
    // Otherwise, it's a local path that requires a drive letter
    var letter = pathname.codePointAt(1) | 0x20;
    var sep = pathname[2];
    if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z
        (sep !== ':')) {
      throw new ERR_INVALID_FILE_URL_PATH('must be absolute');
    }
    return pathname.slice(1);
function getPathFromURLPosix(url) {
  if (url.hostname !== '') {
    throw new ERR_INVALID_FILE_URL_HOST(platform);
  const pathname = url.pathname;
  for (var n = 0; n < pathname.length; n++) {
    if (pathname[n] === '%') {
      var third = pathname.codePointAt(n + 2) | 0x20;
      if (pathname[n + 1] === '2' && third === 102) {
        throw new ERR_INVALID_FILE_URL_PATH(
          'must not include encoded / characters'
        );
      }
    }
  return decodeURIComponent(pathname);
function fileURLToPath(path) {
  if (typeof path === 'string')
    path = new URL(path);
  else if (path == null || !path[searchParams] ||
           !path[searchParams][searchParams])
    throw new ERR_INVALID_ARG_TYPE('path', ['string', 'URL'], path);
  if (path.protocol !== 'file:')
    throw new ERR_INVALID_URL_SCHEME('file');
  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);
// The following characters are percent-encoded when converting from file path
// to URL:
// - %: The percent character is the only character not encoded by the
//        `pathname` setter.
// - \: Backslash is encoded on non-windows platforms since it's a valid
//      character but the `pathname` setters replaces it by a forward slash.
// - LF: The newline character is stripped out by the `pathname` setter.
//       (See whatwg/url#419)
// - CR: The carriage return character is also stripped out by the `pathname`
//       setter.
// - TAB: The tab character is also stripped out by the `pathname` setter.
const percentRegEx = /%/g;
const backslashRegEx = /\\/g;
const newlineRegEx = /\n/g;
const carriageReturnRegEx = /\r/g;
const tabRegEx = /\t/g;
function pathToFileURL(filepath) {
  let resolved = path.resolve(filepath);
  // path.resolve strips trailing slashes so we must add them back
  const filePathLast = filepath.charCodeAt(filepath.length - 1);
  if ((filePathLast === CHAR_FORWARD_SLASH ||
       isWindows && filePathLast === CHAR_BACKWARD_SLASH) &&
      resolved[resolved.length - 1] !== path.sep)
    resolved += '/';
  const outURL = new URL('file://');
  if (resolved.includes('%'))
    resolved = resolved.replace(percentRegEx, '%25');
  // In posix, "/" is a valid character in paths
  if (!isWindows && resolved.includes('\\'))
    resolved = resolved.replace(backslashRegEx, '%5C');
  if (resolved.includes('\n'))
    resolved = resolved.replace(newlineRegEx, '%0A');
  if (resolved.includes('\r'))
    resolved = resolved.replace(carriageReturnRegEx, '%0D');
  if (resolved.includes('\t'))
    resolved = resolved.replace(tabRegEx, '%09');
  outURL.pathname = resolved;
  return outURL;
function toPathIfFileURL(fileURLOrPath) {
  if (fileURLOrPath == null || !fileURLOrPath[searchParams] ||
      !fileURLOrPath[searchParams][searchParams])
    return fileURLOrPath;
  return fileURLToPath(fileURLOrPath);
function constructUrl(flags, protocol, username, password,
                      host, port, path, query, fragment) {
  const ctx = new URLContext();
  ctx.flags = flags;
  ctx.scheme = protocol;
  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';
  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';
  ctx.port = port;
  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];
  ctx.query = query;
  ctx.fragment = fragment;
  ctx.host = host;
  const url = Object.create(URL.prototype);
  url[context] = ctx;
  const params = new URLSearchParams();
  url[searchParams] = params;
  params[context] = url;
  initSearchParams(params, query);
  return url;
setURLConstructor(constructUrl);
module.exports = {
  toUSVString,
  fileURLToPath,
  pathToFileURL,
  toPathIfFileURL,
  URL,
  URLSearchParams,
  domainToASCII,
  domainToUnicode,
  urlToOptions,
  formatSymbol: kFormat,
  searchParamsSymbol: searchParams,
  encodeStr
'use strict';
const { Object, Reflect } = primordials;
const {
  ERR_INVALID_ARG_TYPE,
  ERR_NO_CRYPTO,
  ERR_UNKNOWN_SIGNAL
} = require('internal/errors').codes;
const { signals } = internalBinding('constants').os;
const {
  getHiddenValue,
  setHiddenValue,
  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex,
  decorated_private_symbol: kDecoratedPrivateSymbolIndex
} = internalBinding('util');
const { isNativeError } = internalBinding('types');
const noCrypto = !process.versions.openssl;
const experimentalWarnings = new Set();
const colorRegExp = /\u001b\[\d\d?m/g; // eslint-disable-line no-control-regex
function removeColors(str) {
  return str.replace(colorRegExp, '');
function isError(e) {
  // An error could be an instance of Error while not being a native error
  // or could be from a different realm and not be instance of Error but still
  // be a native error.
  return isNativeError(e) || e instanceof Error;
// Keep a list of deprecation codes that have been warned on so we only warn on
// each one once.
const codesWarned = new Set();
// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
function deprecate(fn, msg, code) {
  if (process.noDeprecation === true) {
    return fn;
  if (code !== undefined && typeof code !== 'string')
    throw new ERR_INVALID_ARG_TYPE('code', 'string', code);
  let warned = false;
  function deprecated(...args) {
    if (!warned) {
      warned = true;
      if (code !== undefined) {
        if (!codesWarned.has(code)) {
          process.emitWarning(msg, 'DeprecationWarning', code, deprecated);
          codesWarned.add(code);
        }
      } else {
        process.emitWarning(msg, 'DeprecationWarning', deprecated);
      }
    }
    if (new.target) {
      return Reflect.construct(fn, args, new.target);
    }
    return fn.apply(this, args);
  // The wrapper will keep the same prototype as fn to maintain prototype chain
  Object.setPrototypeOf(deprecated, fn);
  if (fn.prototype) {
    // Setting this (rather than using Object.setPrototype, as above) ensures
    // that calling the unwrapped constructor gives an instanceof the wrapped
    // constructor.
    deprecated.prototype = fn.prototype;
  return deprecated;
function decorateErrorStack(err) {
  if (!(isError(err) && err.stack) ||
      getHiddenValue(err, kDecoratedPrivateSymbolIndex) === true)
    return;
  const arrow = getHiddenValue(err, kArrowMessagePrivateSymbolIndex);
  if (arrow) {
    err.stack = arrow + err.stack;
    setHiddenValue(err, kDecoratedPrivateSymbolIndex, true);
function assertCrypto() {
  if (noCrypto)
    throw new ERR_NO_CRYPTO();
// Return undefined if there is no match.
// Move the "slow cases" to a separate function to make sure this function gets
// inlined properly. That prioritizes the common case.
function normalizeEncoding(enc) {
  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';
  return slowCases(enc);
function slowCases(enc) {
  switch (enc.length) {
    case 4:
      if (enc === 'UTF8') return 'utf8';
      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';
      enc = `${enc}`.toLowerCase();
      if (enc === 'utf8') return 'utf8';
      if (enc === 'ucs2') return 'utf16le';
      break;
    case 3:
      if (enc === 'hex' || enc === 'HEX' || `${enc}`.toLowerCase() === 'hex')
        return 'hex';
      break;
    case 5:
      if (enc === 'ascii') return 'ascii';
      if (enc === 'ucs-2') return 'utf16le';
      if (enc === 'UTF-8') return 'utf8';
      if (enc === 'ASCII') return 'ascii';
      if (enc === 'UCS-2') return 'utf16le';
      enc = `${enc}`.toLowerCase();
      if (enc === 'utf-8') return 'utf8';
      if (enc === 'ascii') return 'ascii';
      if (enc === 'ucs-2') return 'utf16le';
      break;
    case 6:
      if (enc === 'base64') return 'base64';
      if (enc === 'latin1' || enc === 'binary') return 'latin1';
      if (enc === 'BASE64') return 'base64';
      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';
      enc = `${enc}`.toLowerCase();
      if (enc === 'base64') return 'base64';
      if (enc === 'latin1' || enc === 'binary') return 'latin1';
      break;
    case 7:
      if (enc === 'utf16le' || enc === 'UTF16LE' ||
        `${enc}`.toLowerCase() === 'utf16le')
        return 'utf16le';
      break;
    case 8:
      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||
        `${enc}`.toLowerCase() === 'utf-16le')
        return 'utf16le';
      break;
    default:
      if (enc === '') return 'utf8';
function emitExperimentalWarning(feature) {
  if (experimentalWarnings.has(feature)) return;
  const msg = `${feature} is an experimental feature. This feature could ` +
       'change at any time';
  experimentalWarnings.add(feature);
  process.emitWarning(msg, 'ExperimentalWarning');
function filterDuplicateStrings(items, low) {
  const map = new Map();
  for (var i = 0; i < items.length; i++) {
    const item = items[i];
    const key = item.toLowerCase();
    if (low) {
      map.set(key, key);
    } else {
      map.set(key, item);
    }
  return Array.from(map.values()).sort();
function cachedResult(fn) {
  let result;
  return () => {
    if (result === undefined)
      result = fn();
    return result.slice();
  };
// Useful for Wrapping an ES6 Class with a constructor Function that
// does not require the new keyword. For instance:
//   class A { constructor(x) {this.x = x;}}
//   const B = createClassWrapper(A);
//   B() instanceof A // true
//   B() instanceof B // true
function createClassWrapper(type) {
  function fn(...args) {
    return Reflect.construct(type, args, new.target || type);
  // Mask the wrapper function name and length values
  Object.defineProperties(fn, {
    name: { value: type.name },
    length: { value: type.length }
  });
  Object.setPrototypeOf(fn, type);
  fn.prototype = type.prototype;
  return fn;
let signalsToNamesMapping;
function getSignalsToNamesMapping() {
  if (signalsToNamesMapping !== undefined)
    return signalsToNamesMapping;
  signalsToNamesMapping = Object.create(null);
  for (const key in signals) {
    signalsToNamesMapping[signals[key]] = key;
  return signalsToNamesMapping;
function convertToValidSignal(signal) {
  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])
    return signal;
  if (typeof signal === 'string') {
    const signalName = signals[signal.toUpperCase()];
    if (signalName) return signalName;
  throw new ERR_UNKNOWN_SIGNAL(signal);
function getConstructorOf(obj) {
  while (obj) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, 'constructor');
    if (descriptor !== undefined &&
        typeof descriptor.value === 'function' &&
        descriptor.value.name !== '') {
      return descriptor.value;
    }
    obj = Object.getPrototypeOf(obj);
  return null;
let uvBinding;
function lazyErrmapGet(name) {
  if (!uvBinding) {
    uvBinding = internalBinding('uv');
  if (!uvBinding.errmap) {
    uvBinding.errmap = uvBinding.getErrorMap();
  return uvBinding.errmap.get(name);
function getSystemErrorName(err) {
  const entry = lazyErrmapGet(err);
  return entry ? entry[0] : `Unknown system error ${err}`;
const kCustomPromisifiedSymbol = Symbol('util.promisify.custom');
const kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');
function promisify(original) {
  if (typeof original !== 'function')
    throw new ERR_INVALID_ARG_TYPE('original', 'Function', original);
  if (original[kCustomPromisifiedSymbol]) {
    const fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new ERR_INVALID_ARG_TYPE('util.promisify.custom', 'Function', fn);
    }
    return Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
  // Names to create an object from in case the callback receives multiple
  // arguments, e.g. ['bytesRead', 'buffer'] for fs.read.
  const argumentNames = original[kCustomPromisifyArgsSymbol];
  function fn(...args) {
    return new Promise((resolve, reject) => {
      original.call(this, ...args, (err, ...values) => {
        if (err) {
          return reject(err);
        }
        if (argumentNames !== undefined && values.length > 1) {
          const obj = {};
          for (var i = 0; i < argumentNames.length; i++)
            obj[argumentNames[i]] = values[i];
          resolve(obj);
        } else {
          resolve(values[0]);
        }
      });
    });
  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
  Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    Object.getOwnPropertyDescriptors(original)
  );
promisify.custom = kCustomPromisifiedSymbol;
// The build-in Array#join is slower in v8 6.0
function join(output, separator) {
  let str = '';
  if (output.length !== 0) {
    const lastIndex = output.length - 1;
    for (let i = 0; i < lastIndex; i++) {
      // It is faster not to use a template string here
      str += output[i];
      str += separator;
    }
    str += output[lastIndex];
  return str;
// As of V8 6.6, depending on the size of the array, this is anywhere
// between 1.5-10x faster than the two-arg version of Array#splice()
function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
const kNodeModulesRE = /^(.*)[\\/]node_modules[\\/]/;
let getStructuredStack;
function isInsideNodeModules() {
  if (getStructuredStack === undefined) {
    // Lazy-load to avoid a circular dependency.
    const { runInNewContext } = require('vm');
    // Use `runInNewContext()` to get something tamper-proof and
    // side-effect-free. Since this is currently only used for a deprecated API,
    // the perf implications should be okay.
    getStructuredStack = runInNewContext(`(function() {
      Error.prepareStackTrace = function(err, trace) {
        return trace;
      };
      Error.stackTraceLimit = Infinity;
      return function structuredStack() {
        return new Error().stack;
      };
    })()`, {}, { filename: 'structured-stack' });
  const stack = getStructuredStack();
  // Iterate over all stack frames and look for the first one not coming
  // from inside Node.js itself:
  if (Array.isArray(stack)) {
    for (const frame of stack) {
      const filename = frame.getFileName();
      // If a filename does not start with / or contain \,
      // it's likely from Node.js core.
      if (!/^\/|\\/.test(filename))
        continue;
      return kNodeModulesRE.test(filename);
    }
  return false;
function once(callback) {
  let called = false;
  return function(...args) {
    if (called) return;
    called = true;
    callback.apply(this, args);
  };
module.exports = {
  assertCrypto,
  cachedResult,
  convertToValidSignal,
  createClassWrapper,
  decorateErrorStack,
  deprecate,
  emitExperimentalWarning,
  filterDuplicateStrings,
  getConstructorOf,
  getSystemErrorName,
  isError,
  isInsideNodeModules,
  join,
  normalizeEncoding,
  once,
  promisify,
  spliceOne,
  removeColors,
  // Symbol used to customize promisify conversion
  customPromisifyArgs: kCustomPromisifyArgsSymbol,
  // Symbol used to provide a custom inspect function for an object as an
  // alternative to using 'inspect'
  customInspectSymbol: Symbol.for('nodejs.util.inspect.custom'),
  // Used by the buffer module to capture an internal reference to the
  // default isEncoding implementation, just in case userland overrides it.
  kIsEncodingSymbol: Symbol('kIsEncodingSymbol'),
  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')
'use strict';
const {
  BigIntPrototype,
  BooleanPrototype,
  DatePrototype,
  Number,
  NumberPrototype,
  Object,
  ObjectPrototype: {
    hasOwnProperty,
    propertyIsEnumerable,
    toString: objectToString
  },
  StringPrototype,
  SymbolPrototype
} = primordials;
const { compare } = internalBinding('buffer');
const {
  isAnyArrayBuffer,
  isArrayBufferView,
  isDate,
  isMap,
  isRegExp,
  isSet,
  isNativeError,
  isBoxedPrimitive,
  isNumberObject,
  isStringObject,
  isBooleanObject,
  isBigIntObject,
  isSymbolObject,
  isFloat32Array,
  isFloat64Array
} = require('internal/util/types');
const {
  getOwnNonIndexProperties,
  propertyFilter: {
    ONLY_ENUMERABLE,
    SKIP_SYMBOLS
} = internalBinding('util');
const kStrict = true;
const kLoose = false;
const kNoIterator = 0;
const kIsArray = 1;
const kIsSet = 2;
const kIsMap = 3;
// Check if they have the same source and flags
function areSimilarRegExps(a, b) {
  return a.source === b.source && a.flags === b.flags;
function areSimilarFloatArrays(a, b) {
  if (a.byteLength !== b.byteLength) {
    return false;
  for (var offset = 0; offset < a.byteLength; offset++) {
    if (a[offset] !== b[offset]) {
      return false;
    }
  return true;
function areSimilarTypedArrays(a, b) {
  if (a.byteLength !== b.byteLength) {
    return false;
  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength),
                 new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;
function areEqualArrayBuffers(buf1, buf2) {
  return buf1.byteLength === buf2.byteLength &&
    compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;
function isEqualBoxedPrimitive(val1, val2) {
  if (isNumberObject(val1)) {
    return isNumberObject(val2) &&
           Object.is(NumberPrototype.valueOf(val1),
                     NumberPrototype.valueOf(val2));
  if (isStringObject(val1)) {
    return isStringObject(val2) &&
           StringPrototype.valueOf(val1) === StringPrototype.valueOf(val2);
  if (isBooleanObject(val1)) {
    return isBooleanObject(val2) &&
           BooleanPrototype.valueOf(val1) === BooleanPrototype.valueOf(val2);
  if (isBigIntObject(val1)) {
    return isBigIntObject(val2) &&
           BigIntPrototype.valueOf(val1) === BigIntPrototype.valueOf(val2);
  return isSymbolObject(val2) &&
         SymbolPrototype.valueOf(val1) === SymbolPrototype.valueOf(val2);
// Notes: Type tags are historical [[Class]] properties that can be set by
// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS
// and retrieved using Object.prototype.toString.call(obj) in JS
// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring
// for a list of tags pre-defined in the spec.
// There are some unspecified tags in the wild too (e.g. typed array tags).
// Since tags can be altered, they only serve fast failures
// Typed arrays and buffers are checked by comparing the content in their
// underlying ArrayBuffer. This optimization requires that it's
// reasonable to interpret their underlying memory in the same way,
// which is checked by comparing their type tags.
// (e.g. a Uint8Array and a Uint16Array with the same memory content
// could still be different because they will be interpreted differently).
// For strict comparison, objects should have
// a) The same built-in type tags
// b) The same prototypes.
function innerDeepEqual(val1, val2, strict, memos) {
  // All identical values are equivalent, as determined by ===.
  if (val1 === val2) {
    if (val1 !== 0)
      return true;
    return strict ? Object.is(val1, val2) : true;
  // Check more closely if val1 and val2 are equal.
  if (strict) {
    if (typeof val1 !== 'object') {
      return typeof val1 === 'number' && Number.isNaN(val1) &&
        Number.isNaN(val2);
    }
    if (typeof val2 !== 'object' || val1 === null || val2 === null) {
      return false;
    }
    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {
      return false;
    }
  } else {
    if (val1 === null || typeof val1 !== 'object') {
      if (val2 === null || typeof val2 !== 'object') {
        // eslint-disable-next-line eqeqeq
        return val1 == val2;
      }
      return false;
    }
    if (val2 === null || typeof val2 !== 'object') {
      return false;
    }
  const val1Tag = objectToString(val1);
  const val2Tag = objectToString(val2);
  if (val1Tag !== val2Tag) {
    return false;
  if (Array.isArray(val1)) {
    // Check for sparse arrays and general fast path
    if (val1.length !== val2.length) {
      return false;
    }
    const filter = strict ? ONLY_ENUMERABLE : ONLY_ENUMERABLE | SKIP_SYMBOLS;
    const keys1 = getOwnNonIndexProperties(val1, filter);
    const keys2 = getOwnNonIndexProperties(val2, filter);
    if (keys1.length !== keys2.length) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);
  if (val1Tag === '[object Object]') {
    return keyCheck(val1, val2, strict, memos, kNoIterator);
  if (isDate(val1)) {
    if (DatePrototype.getTime(val1) !== DatePrototype.getTime(val2)) {
      return false;
    }
  } else if (isRegExp(val1)) {
    if (!areSimilarRegExps(val1, val2)) {
      return false;
    }
  } else if (isNativeError(val1) || val1 instanceof Error) {
    // Do not compare the stack as it might differ even though the error itself
    // is otherwise identical.
    if (val1.message !== val2.message || val1.name !== val2.name) {
      return false;
    }
  } else if (isArrayBufferView(val1)) {
    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {
      if (!areSimilarFloatArrays(val1, val2)) {
        return false;
      }
    } else if (!areSimilarTypedArrays(val1, val2)) {
      return false;
    }
    // Buffer.compare returns true, so val1.length === val2.length. If they both
    // only contain numeric keys, we don't need to exam further than checking
    // the symbols.
    const filter = strict ? ONLY_ENUMERABLE : ONLY_ENUMERABLE | SKIP_SYMBOLS;
    const keys1 = getOwnNonIndexProperties(val1, filter);
    const keys2 = getOwnNonIndexProperties(val2, filter);
    if (keys1.length !== keys2.length) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kNoIterator, keys1);
  } else if (isSet(val1)) {
    if (!isSet(val2) || val1.size !== val2.size) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsSet);
  } else if (isMap(val1)) {
    if (!isMap(val2) || val1.size !== val2.size) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsMap);
  } else if (isAnyArrayBuffer(val1)) {
    if (!areEqualArrayBuffers(val1, val2)) {
      return false;
    }
  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {
    return false;
  return keyCheck(val1, val2, strict, memos, kNoIterator);
function getEnumerables(val, keys) {
  return keys.filter((k) => propertyIsEnumerable(val, k));
function keyCheck(val1, val2, strict, memos, iterationType, aKeys) {
  // For all remaining Object pairs, including Array, objects and Maps,
  // equivalence is determined by having:
  // a) The same number of owned enumerable properties
  // b) The same set of keys/indexes (although not necessarily the same order)
  // c) Equivalent values for every corresponding key/index
  // d) For Sets and Maps, equal contents
  // Note: this accounts for both named and indexed properties on Arrays.
  if (arguments.length === 5) {
    aKeys = Object.keys(val1);
    const bKeys = Object.keys(val2);
    // The pair must have the same number of owned properties.
    if (aKeys.length !== bKeys.length) {
      return false;
    }
  // Cheap key test
  let i = 0;
  for (; i < aKeys.length; i++) {
    if (!hasOwnProperty(val2, aKeys[i])) {
      return false;
    }
  if (strict && arguments.length === 5) {
    const symbolKeysA = Object.getOwnPropertySymbols(val1);
    if (symbolKeysA.length !== 0) {
      let count = 0;
      for (i = 0; i < symbolKeysA.length; i++) {
        const key = symbolKeysA[i];
        if (propertyIsEnumerable(val1, key)) {
          if (!propertyIsEnumerable(val2, key)) {
            return false;
          }
          aKeys.push(key);
          count++;
        } else if (propertyIsEnumerable(val2, key)) {
          return false;
        }
      }
      const symbolKeysB = Object.getOwnPropertySymbols(val2);
      if (symbolKeysA.length !== symbolKeysB.length &&
          getEnumerables(val2, symbolKeysB).length !== count) {
        return false;
      }
    } else {
      const symbolKeysB = Object.getOwnPropertySymbols(val2);
      if (symbolKeysB.length !== 0 &&
          getEnumerables(val2, symbolKeysB).length !== 0) {
        return false;
      }
    }
  if (aKeys.length === 0 &&
      (iterationType === kNoIterator ||
        iterationType === kIsArray && val1.length === 0 ||
        val1.size === 0)) {
    return true;
  // Use memos to handle cycles.
  if (memos === undefined) {
    memos = {
      val1: new Map(),
      val2: new Map(),
      position: 0
    };
  } else {
    // We prevent up to two map.has(x) calls by directly retrieving the value
    // and checking for undefined. The map can only contain numbers, so it is
    // safe to check for undefined only.
    const val2MemoA = memos.val1.get(val1);
    if (val2MemoA !== undefined) {
      const val2MemoB = memos.val2.get(val2);
      if (val2MemoB !== undefined) {
        return val2MemoA === val2MemoB;
      }
    }
    memos.position++;
  memos.val1.set(val1, memos.position);
  memos.val2.set(val2, memos.position);
  const areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);
  memos.val1.delete(val1);
  memos.val2.delete(val2);
  return areEq;
function setHasEqualElement(set, val1, strict, memo) {
  // Go looking.
  for (const val2 of set) {
    if (innerDeepEqual(val1, val2, strict, memo)) {
      // Remove the matching element to make sure we do not check that again.
      set.delete(val2);
      return true;
    }
  return false;
// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using
// Sadly it is not possible to detect corresponding values properly in case the
// type is a string, number, bigint or boolean. The reason is that those values
// can match lots of different string values (e.g., 1n == '+00001').
function findLooseMatchingPrimitives(prim) {
  switch (typeof prim) {
    case 'undefined':
      return null;
    case 'object': // Only pass in null as object!
      return undefined;
    case 'symbol':
      return false;
    case 'string':
      prim = +prim;
      // Loose equal entries exist only if the string is possible to convert to
      // a regular number and not NaN.
      // Fall through
    case 'number':
      if (Number.isNaN(prim)) {
        return false;
      }
  return true;
function setMightHaveLoosePrim(a, b, prim) {
  const altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null)
    return altValue;
  return b.has(altValue) && !a.has(altValue);
function mapMightHaveLoosePrim(a, b, prim, item, memo) {
  const altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) {
    return altValue;
  const curB = b.get(altValue);
  if (curB === undefined && !b.has(altValue) ||
      !innerDeepEqual(item, curB, false, memo)) {
    return false;
  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);
function setEquiv(a, b, strict, memo) {
  // This is a lazily initiated Set of entries which have to be compared
  // pairwise.
  let set = null;
  for (const val of a) {
    // Note: Checking for the objects first improves the performance for object
    // heavy sets but it is a minor slow down for primitives. As they are fast
    // to check this improves the worst case scenario instead.
    if (typeof val === 'object' && val !== null) {
      if (set === null) {
        set = new Set();
      }
      // If the specified value doesn't exist in the second set its an not null
      // object (or non strict only: a not matching primitive) we'll need to go
      // hunting for something thats deep-(strict-)equal to it. To make this
      // O(n log n) complexity we have to copy these values in a new set first.
      set.add(val);
    } else if (!b.has(val)) {
      if (strict)
        return false;
      // Fast path to detect missing string, symbol, undefined and null values.
      if (!setMightHaveLoosePrim(a, b, val)) {
        return false;
      }
      if (set === null) {
        set = new Set();
      }
      set.add(val);
    }
  if (set !== null) {
    for (const val of b) {
      // We have to check if a primitive value is already
      // matching and only if it's not, go hunting for it.
      if (typeof val === 'object' && val !== null) {
        if (!setHasEqualElement(set, val, strict, memo))
          return false;
      } else if (!strict &&
                 !a.has(val) &&
                 !setHasEqualElement(set, val, strict, memo)) {
        return false;
      }
    }
    return set.size === 0;
  return true;
function mapHasEqualEntry(set, map, key1, item1, strict, memo) {
  // To be able to handle cases like:
  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])
  // ... we need to consider *all* matching keys, not just the first we find.
  for (const key2 of set) {
    if (innerDeepEqual(key1, key2, strict, memo) &&
      innerDeepEqual(item1, map.get(key2), strict, memo)) {
      set.delete(key2);
      return true;
    }
  return false;
function mapEquiv(a, b, strict, memo) {
  let set = null;
  for (const [key, item1] of a) {
    if (typeof key === 'object' && key !== null) {
      if (set === null) {
        set = new Set();
      }
      set.add(key);
    } else {
      // By directly retrieving the value we prevent another b.has(key) check in
      // almost all possible cases.
      const item2 = b.get(key);
      if ((item2 === undefined && !b.has(key) ||
          !innerDeepEqual(item1, item2, strict, memo))) {
        if (strict)
          return false;
        // Fast path to detect missing string, symbol, undefined and null
        // keys.
        if (!mapMightHaveLoosePrim(a, b, key, item1, memo))
          return false;
        if (set === null) {
          set = new Set();
        }
        set.add(key);
      }
    }
  if (set !== null) {
    for (const [key, item] of b) {
      if (typeof key === 'object' && key !== null) {
        if (!mapHasEqualEntry(set, a, key, item, strict, memo))
          return false;
      } else if (!strict &&
                 (!a.has(key) ||
                   !innerDeepEqual(a.get(key), item, false, memo)) &&
                 !mapHasEqualEntry(set, a, key, item, false, memo)) {
        return false;
      }
    }
    return set.size === 0;
  return true;
function objEquiv(a, b, strict, keys, memos, iterationType) {
  // Sets and maps don't have their entries accessible via normal object
  // properties.
  let i = 0;
  if (iterationType === kIsSet) {
    if (!setEquiv(a, b, strict, memos)) {
      return false;
    }
  } else if (iterationType === kIsMap) {
    if (!mapEquiv(a, b, strict, memos)) {
      return false;
    }
  } else if (iterationType === kIsArray) {
    for (; i < a.length; i++) {
      if (hasOwnProperty(a, i)) {
        if (!hasOwnProperty(b, i) ||
            !innerDeepEqual(a[i], b[i], strict, memos)) {
          return false;
        }
      } else if (hasOwnProperty(b, i)) {
        return false;
      } else {
        // Array is sparse.
        const keysA = Object.keys(a);
        for (; i < keysA.length; i++) {
          const key = keysA[i];
          if (!hasOwnProperty(b, key) ||
              !innerDeepEqual(a[key], b[key], strict, memos)) {
            return false;
          }
        }
        if (keysA.length !== Object.keys(b).length) {
          return false;
        }
        return true;
      }
    }
  // The pair must have equivalent values for every corresponding key.
  // Possibly expensive deep test:
  for (i = 0; i < keys.length; i++) {
    const key = keys[i];
    if (!innerDeepEqual(a[key], b[key], strict, memos)) {
      return false;
    }
  return true;
function isDeepEqual(val1, val2) {
  return innerDeepEqual(val1, val2, kLoose);
function isDeepStrictEqual(val1, val2) {
  return innerDeepEqual(val1, val2, kStrict);
module.exports = {
  isDeepEqual,
  isDeepStrictEqual
'use strict';
const { format } = require('internal/util/inspect');
// `debugs` is deliberately initialized to undefined so any call to
// debuglog() before initializeDebugEnv() is called will throw.
let debugs;
let debugEnvRegex = /^$/;
// `debugEnv` is initial value of process.env.NODE_DEBUG
function initializeDebugEnv(debugEnv) {
  debugs = {};
  if (debugEnv) {
    debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, '\\$&')
      .replace(/\*/g, '.*')
      .replace(/,/g, '$|^')
      .toUpperCase();
    debugEnvRegex = new RegExp(`^${debugEnv}$`, 'i');
// Emits warning when user sets
// NODE_DEBUG=http or NODE_DEBUG=http2.
function emitWarningIfNeeded(set) {
  if ('HTTP' === set || 'HTTP2' === set) {
    process.emitWarning('Setting the NODE_DEBUG environment variable ' +
      'to \'' + set.toLowerCase() + '\' can expose sensitive ' +
      'data (such as passwords, tokens and authentication headers) ' +
      'in the resulting log.');
function debuglogImpl(set) {
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (debugEnvRegex.test(set)) {
      const pid = process.pid;
      emitWarningIfNeeded(set);
      debugs[set] = function debug(...args) {
        const msg = format(...args);
        process.stderr.write(format('%s %d: %s\n', set, pid, msg));
      };
    } else {
      debugs[set] = function debug() {};
    }
  return debugs[set];
// debuglogImpl depends on process.pid and process.env.NODE_DEBUG,
// so it needs to be called lazily in top scopes of internal modules
// that may be loaded before these run time states are allowed to
// be accessed.
function debuglog(set) {
  let debug;
  return function(...args) {
    if (!debug) {
      // Only invokes debuglogImpl() when the debug function is
      // called for the first time.
      debug = debuglogImpl(set);
    }
    debug(...args);
  };
module.exports = {
  debuglog,
  initializeDebugEnv
'use strict';
const {
  BigIntPrototype,
  BooleanPrototype,
  DatePrototype,
  ErrorPrototype,
  JSON,
  MapPrototype,
  Math,
  NumberPrototype,
  Object,
  ObjectPrototype: {
    hasOwnProperty,
    propertyIsEnumerable
  },
  RegExpPrototype,
  SetPrototype,
  StringPrototype,
  SymbolPrototype,
  uncurryThis
} = primordials;
const {
  getOwnNonIndexProperties,
  getPromiseDetails,
  getProxyDetails,
  kPending,
  kRejected,
  previewEntries,
  getConstructorName: internalGetConstructorName,
  propertyFilter: {
    ALL_PROPERTIES,
    ONLY_ENUMERABLE
} = internalBinding('util');
const {
  customInspectSymbol,
  isError,
  join,
  removeColors
} = require('internal/util');
const {
  codes: {
    ERR_INVALID_ARG_TYPE
  },
  isStackOverflowError
} = require('internal/errors');
const {
  isAsyncFunction,
  isGeneratorFunction,
  isAnyArrayBuffer,
  isArrayBuffer,
  isArgumentsObject,
  isBoxedPrimitive,
  isDataView,
  isExternal,
  isMap,
  isMapIterator,
  isModuleNamespaceObject,
  isNativeError,
  isPromise,
  isSet,
  isSetIterator,
  isWeakMap,
  isWeakSet,
  isRegExp,
  isDate,
  isTypedArray,
  isStringObject,
  isNumberObject,
  isBooleanObject,
  isBigIntObject,
  isUint8Array,
  isUint8ClampedArray,
  isUint16Array,
  isUint32Array,
  isInt8Array,
  isInt16Array,
  isInt32Array,
  isFloat32Array,
  isFloat64Array,
  isBigInt64Array,
  isBigUint64Array
} = require('internal/util/types');
const assert = require('internal/assert');
const { NativeModule } = require('internal/bootstrap/loaders');
let hexSlice;
const builtInObjects = new Set(
  Object.getOwnPropertyNames(global).filter((e) => /^([A-Z][a-z]+)+$/.test(e))
const inspectDefaultOptions = Object.seal({
  showHidden: false,
  depth: 2,
  colors: false,
  customInspect: true,
  showProxy: false,
  maxArrayLength: 100,
  breakLength: 80,
  compact: 3,
  sorted: false,
  getters: false
const kObjectType = 0;
const kArrayType = 1;
const kArrayExtrasType = 2;
/* eslint-disable no-control-regex */
const strEscapeSequencesRegExp = /[\x00-\x1f\x27\x5c]/;
const strEscapeSequencesReplacer = /[\x00-\x1f\x27\x5c]/g;
const strEscapeSequencesRegExpSingle = /[\x00-\x1f\x5c]/;
const strEscapeSequencesReplacerSingle = /[\x00-\x1f\x5c]/g;
/* eslint-enable no-control-regex */
const keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;
const numberRegExp = /^(0|[1-9][0-9]*)$/;
const coreModuleRegExp = /^    at (?:[^/\\(]+ \(|)((?<![/\\]).+)\.js:\d+:\d+\)?$/;
const nodeModulesRegExp = /[/\\]node_modules[/\\](.+?)(?=[/\\])/g;
const kMinLineLength = 16;
// Constants to map the iterator state.
const kWeak = 0;
const kIterator = 1;
const kMapEntries = 2;
// Escaped special characters. Use empty strings to fill up unused entries.
const meta = [
  '\\u0000', '\\u0001', '\\u0002', '\\u0003', '\\u0004',
  '\\u0005', '\\u0006', '\\u0007', '\\b', '\\t',
  '\\n', '\\u000b', '\\f', '\\r', '\\u000e',
  '\\u000f', '\\u0010', '\\u0011', '\\u0012', '\\u0013',
  '\\u0014', '\\u0015', '\\u0016', '\\u0017', '\\u0018',
  '\\u0019', '\\u001a', '\\u001b', '\\u001c', '\\u001d',
  '\\u001e', '\\u001f', '', '', '',
  '', '', '', '', "\\'", '', '', '', '', '',
  '', '', '', '', '', '', '', '', '', '',
  '', '', '', '', '', '', '', '', '', '',
  '', '', '', '', '', '', '', '', '', '',
  '', '', '', '', '', '', '', '', '', '',
  '', '', '', '', '', '', '', '\\\\'
function getUserOptions(ctx) {
  const obj = { stylize: ctx.stylize };
  for (const key of Object.keys(inspectDefaultOptions)) {
    obj[key] = ctx[key];
  if (ctx.userOptions === undefined)
    return obj;
  return { ...obj, ...ctx.userOptions };
 * Echos the value of any input. Tries to print the value out
 * in the best way possible given the different types.
 * @param {any} value The value to print out.
 * @param {Object} opts Optional options object that alters the output.
/* Legacy: value, showHidden, depth, colors */
function inspect(value, opts) {
  // Default options
  const ctx = {
    budget: {},
    indentationLvl: 0,
    seen: [],
    currentDepth: 0,
    stylize: stylizeNoColor,
    showHidden: inspectDefaultOptions.showHidden,
    depth: inspectDefaultOptions.depth,
    colors: inspectDefaultOptions.colors,
    customInspect: inspectDefaultOptions.customInspect,
    showProxy: inspectDefaultOptions.showProxy,
    maxArrayLength: inspectDefaultOptions.maxArrayLength,
    breakLength: inspectDefaultOptions.breakLength,
    compact: inspectDefaultOptions.compact,
    sorted: inspectDefaultOptions.sorted,
    getters: inspectDefaultOptions.getters
  };
  if (arguments.length > 1) {
    // Legacy...
    if (arguments.length > 2) {
      if (arguments[2] !== undefined) {
        ctx.depth = arguments[2];
      }
      if (arguments.length > 3 && arguments[3] !== undefined) {
        ctx.colors = arguments[3];
      }
    }
    // Set user-specified options
    if (typeof opts === 'boolean') {
      ctx.showHidden = opts;
    } else if (opts) {
      const optKeys = Object.keys(opts);
      for (const key of optKeys) {
        // TODO(BridgeAR): Find a solution what to do about stylize. Either make
        // this function public or add a new API with a similar or better
        // functionality.
        if (hasOwnProperty(inspectDefaultOptions, key) || key === 'stylize') {
          ctx[key] = opts[key];
        } else if (ctx.userOptions === undefined) {
          // This is required to pass through the actual user input.
          ctx.userOptions = opts;
        }
      }
    }
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;
  return formatValue(ctx, value, 0);
inspect.custom = customInspectSymbol;
Object.defineProperty(inspect, 'defaultOptions', {
  get() {
    return inspectDefaultOptions;
  },
  set(options) {
    if (options === null || typeof options !== 'object') {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    return Object.assign(inspectDefaultOptions, options);
// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = Object.assign(Object.create(null), {
  bold: [1, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  white: [37, 39],
  grey: [90, 39],
  black: [30, 39],
  blue: [34, 39],
  cyan: [36, 39],
  green: [32, 39],
  magenta: [35, 39],
  red: [31, 39],
  yellow: [33, 39]
// Don't use 'blue' not visible on cmd.exe
inspect.styles = Object.assign(Object.create(null), {
  special: 'cyan',
  number: 'yellow',
  bigint: 'yellow',
  boolean: 'yellow',
  undefined: 'grey',
  null: 'bold',
  string: 'green',
  symbol: 'green',
  date: 'magenta',
  // "name": intentionally not styling
  regexp: 'red',
  module: 'underline'
function addQuotes(str, quotes) {
  if (quotes === -1) {
    return `"${str}"`;
  if (quotes === -2) {
    return `\`${str}\``;
  return `'${str}'`;
const escapeFn = (str) => meta[str.charCodeAt(0)];
// Escape control characters, single quotes and the backslash.
// This is similar to JSON stringify escaping.
function strEscape(str) {
  let escapeTest = strEscapeSequencesRegExp;
  let escapeReplace = strEscapeSequencesReplacer;
  let singleQuote = 39;
  // Check for double quotes. If not present, do not escape single quotes and
  // instead wrap the text in double quotes. If double quotes exist, check for
  // backticks. If they do not exist, use those as fallback instead of the
  // double quotes.
  if (str.includes("'")) {
    // This invalidates the charCode and therefore can not be matched for
    // anymore.
    if (!str.includes('"')) {
      singleQuote = -1;
    } else if (!str.includes('`') && !str.includes('${')) {
      singleQuote = -2;
    }
    if (singleQuote !== 39) {
      escapeTest = strEscapeSequencesRegExpSingle;
      escapeReplace = strEscapeSequencesReplacerSingle;
    }
  // Some magic numbers that worked out fine while benchmarking with v8 6.0
  if (str.length < 5000 && !escapeTest.test(str))
    return addQuotes(str, singleQuote);
  if (str.length > 100) {
    str = str.replace(escapeReplace, escapeFn);
    return addQuotes(str, singleQuote);
  let result = '';
  let last = 0;
  const lastIndex = str.length;
  for (let i = 0; i < lastIndex; i++) {
    const point = str.charCodeAt(i);
    if (point === singleQuote || point === 92 || point < 32) {
      if (last === i) {
        result += meta[point];
      } else {
        result += `${str.slice(last, i)}${meta[point]}`;
      }
      last = i + 1;
    }
  if (last !== lastIndex) {
    result += str.slice(last);
  return addQuotes(result, singleQuote);
function stylizeWithColor(str, styleType) {
  const style = inspect.styles[styleType];
  if (style !== undefined) {
    const color = inspect.colors[style];
    return `\u001b[${color[0]}m${str}\u001b[${color[1]}m`;
  return str;
function stylizeNoColor(str) {
  return str;
// Return a new empty array to push in the results of the default formatter.
function getEmptyFormatArray() {
  return [];
function getConstructorName(obj, ctx) {
  let firstProto;
  const tmp = obj;
  while (obj) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, 'constructor');
    if (descriptor !== undefined &&
        typeof descriptor.value === 'function' &&
        descriptor.value.name !== '') {
      return descriptor.value.name;
    }
    obj = Object.getPrototypeOf(obj);
    if (firstProto === undefined) {
      firstProto = obj;
    }
  if (firstProto === null) {
    return null;
  return `${internalGetConstructorName(tmp)} <${inspect(firstProto, {
    ...ctx,
    customInspect: false
  })}>`;
function getPrefix(constructor, tag, fallback) {
  if (constructor === null) {
    if (tag !== '') {
      return `[${fallback}: null prototype] [${tag}] `;
    }
    return `[${fallback}: null prototype] `;
  if (tag !== '' && constructor !== tag) {
    return `${constructor} [${tag}] `;
  return `${constructor} `;
// Look up the keys of the object.
function getKeys(value, showHidden) {
  let keys;
  const symbols = Object.getOwnPropertySymbols(value);
  if (showHidden) {
    keys = Object.getOwnPropertyNames(value);
    if (symbols.length !== 0)
      keys.push(...symbols);
  } else {
    // This might throw if `value` is a Module Namespace Object from an
    // unevaluated module, but we don't want to perform the actual type
    // check because it's expensive.
    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209
    // and modify this logic as needed.
    try {
      keys = Object.keys(value);
    } catch (err) {
      assert(isNativeError(err) && err.name === 'ReferenceError' &&
             isModuleNamespaceObject(value));
      keys = Object.getOwnPropertyNames(value);
    }
    if (symbols.length !== 0) {
      keys.push(...symbols.filter((key) => propertyIsEnumerable(value, key)));
    }
  return keys;
function getCtxStyle(value, constructor, tag) {
  let fallback = '';
  if (constructor === null) {
    fallback = internalGetConstructorName(value);
    if (fallback === tag) {
      fallback = 'Object';
    }
  return getPrefix(constructor, tag, fallback);
function formatProxy(ctx, proxy, recurseTimes) {
  if (recurseTimes > ctx.depth && ctx.depth !== null) {
    return ctx.stylize('Proxy [Array]', 'special');
  recurseTimes += 1;
  ctx.indentationLvl += 2;
  const res = [
    formatValue(ctx, proxy[0], recurseTimes),
    formatValue(ctx, proxy[1], recurseTimes)
  ];
  ctx.indentationLvl -= 2;
  return reduceToSingleString(
    ctx, res, '', ['Proxy [', ']'], kArrayExtrasType, recurseTimes);
function findTypedConstructor(value) {
  for (const [check, clazz] of [
    [isUint8Array, Uint8Array],
    [isUint8ClampedArray, Uint8ClampedArray],
    [isUint16Array, Uint16Array],
    [isUint32Array, Uint32Array],
    [isInt8Array, Int8Array],
    [isInt16Array, Int16Array],
    [isInt32Array, Int32Array],
    [isFloat32Array, Float32Array],
    [isFloat64Array, Float64Array],
    [isBigInt64Array, BigInt64Array],
    [isBigUint64Array, BigUint64Array]
  ]) {
    if (check(value)) {
      return clazz;
    }
let lazyNullPrototypeCache;
// Creates a subclass and name
// the constructor as `${clazz} : null prototype`
function clazzWithNullPrototype(clazz, name) {
  if (lazyNullPrototypeCache === undefined) {
    lazyNullPrototypeCache = new Map();
  } else {
    const cachedClass = lazyNullPrototypeCache.get(clazz);
    if (cachedClass !== undefined) {
      return cachedClass;
    }
  class NullPrototype extends clazz {
    get [Symbol.toStringTag]() {
      return '';
    }
  Object.defineProperty(NullPrototype.prototype.constructor, 'name',
                        { value: `[${name}: null prototype]` });
  lazyNullPrototypeCache.set(clazz, NullPrototype);
  return NullPrototype;
function noPrototypeIterator(ctx, value, recurseTimes) {
  let newVal;
  if (isSet(value)) {
    const clazz = clazzWithNullPrototype(Set, 'Set');
    newVal = new clazz(SetPrototype.values(value));
  } else if (isMap(value)) {
    const clazz = clazzWithNullPrototype(Map, 'Map');
    newVal = new clazz(MapPrototype.entries(value));
  } else if (Array.isArray(value)) {
    const clazz = clazzWithNullPrototype(Array, 'Array');
    newVal = new clazz(value.length);
  } else if (isTypedArray(value)) {
    const constructor = findTypedConstructor(value);
    const clazz = clazzWithNullPrototype(constructor, constructor.name);
    newVal = new clazz(value);
  if (newVal !== undefined) {
    Object.defineProperties(newVal, Object.getOwnPropertyDescriptors(value));
    return formatRaw(ctx, newVal, recurseTimes);
// Note: using `formatValue` directly requires the indentation level to be
// corrected by setting `ctx.indentationLvL += diff` and then to decrease the
// value afterwards again.
function formatValue(ctx, value, recurseTimes, typedArray) {
  // Primitive types cannot have properties.
  if (typeof value !== 'object' && typeof value !== 'function') {
    return formatPrimitive(ctx.stylize, value, ctx);
  if (value === null) {
    return ctx.stylize('null', 'null');
  // Memorize the context for custom inspection on proxies.
  const context = value;
  // Always check for proxies to prevent side effects and to prevent triggering
  // any proxy handlers.
  const proxy = getProxyDetails(value);
  if (proxy !== undefined) {
    if (ctx.showProxy) {
      return formatProxy(ctx, proxy, recurseTimes);
    }
    value = proxy[0];
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it.
  if (ctx.customInspect) {
    const maybeCustom = value[customInspectSymbol];
    if (typeof maybeCustom === 'function' &&
        // Filter out the util module, its inspect function is special.
        maybeCustom !== inspect &&
        // Also filter out any prototype objects using the circular check.
        !(value.constructor && value.constructor.prototype === value)) {
      // This makes sure the recurseTimes are reported as before while using
      // a counter internally.
      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;
      const ret = maybeCustom.call(context, depth, getUserOptions(ctx));
      // If the custom inspection method returned `this`, don't go into
      // infinite recursion.
      if (ret !== context) {
        if (typeof ret !== 'string') {
          return formatValue(ctx, ret, recurseTimes);
        }
        return ret.replace(/\n/g, `\n${' '.repeat(ctx.indentationLvl)}`);
      }
    }
  // Using an array here is actually better for the average case than using
  // a Set. `seen` will only check for the depth and will never grow too large.
  if (ctx.seen.includes(value))
    return ctx.stylize('[Circular]', 'special');
  return formatRaw(ctx, value, recurseTimes, typedArray);
function formatRaw(ctx, value, recurseTimes, typedArray) {
  let keys;
  const constructor = getConstructorName(value, ctx);
  let tag = value[Symbol.toStringTag];
  // Only list the tag in case it's non-enumerable / not an own property.
  // Otherwise we'd print this twice.
  if (typeof tag !== 'string' ||
      tag !== '' &&
      (ctx.showHidden ? hasOwnProperty : propertyIsEnumerable)(
        value, Symbol.toStringTag
      )) {
    tag = '';
  let base = '';
  let formatter = getEmptyFormatArray;
  let braces;
  let noIterator = true;
  let i = 0;
  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;
  let extrasType = kObjectType;
  // Iterators and the rest are split to reduce checks.
  if (value[Symbol.iterator]) {
    noIterator = false;
    if (Array.isArray(value)) {
      keys = getOwnNonIndexProperties(value, filter);
      // Only set the constructor for non ordinary ("Array [...]") arrays.
      const prefix = getPrefix(constructor, tag, 'Array');
      braces = [`${prefix === 'Array ' ? '' : prefix}[`, ']'];
      if (value.length === 0 && keys.length === 0)
        return `${braces[0]}]`;
      extrasType = kArrayExtrasType;
      formatter = formatArray;
    } else if (isSet(value)) {
      keys = getKeys(value, ctx.showHidden);
      const prefix = getPrefix(constructor, tag, 'Set');
      if (value.size === 0 && keys.length === 0)
        return `${prefix}{}`;
      braces = [`${prefix}{`, '}'];
      formatter = formatSet;
    } else if (isMap(value)) {
      keys = getKeys(value, ctx.showHidden);
      const prefix = getPrefix(constructor, tag, 'Map');
      if (value.size === 0 && keys.length === 0)
        return `${prefix}{}`;
      braces = [`${prefix}{`, '}'];
      formatter = formatMap;
    } else if (isTypedArray(value)) {
      keys = getOwnNonIndexProperties(value, filter);
      const prefix = constructor !== null ?
        getPrefix(constructor, tag) :
        getPrefix(constructor, tag, findTypedConstructor(value).name);
      braces = [`${prefix}[`, ']'];
      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)
        return `${braces[0]}]`;
      formatter = formatTypedArray;
      extrasType = kArrayExtrasType;
    } else if (isMapIterator(value)) {
      keys = getKeys(value, ctx.showHidden);
      braces = getIteratorBraces('Map', tag);
      formatter = formatIterator;
    } else if (isSetIterator(value)) {
      keys = getKeys(value, ctx.showHidden);
      braces = getIteratorBraces('Set', tag);
      formatter = formatIterator;
    } else {
      noIterator = true;
    }
  if (noIterator) {
    keys = getKeys(value, ctx.showHidden);
    braces = ['{', '}'];
    if (constructor === 'Object') {
      if (isArgumentsObject(value)) {
        braces[0] = '[Arguments] {';
      } else if (tag !== '') {
        braces[0] = `${getPrefix(constructor, tag, 'Object')}{`;
      }
      if (keys.length === 0) {
        return `${braces[0]}}`;
      }
    } else if (typeof value === 'function') {
      base = getFunctionBase(value, constructor, tag);
      if (keys.length === 0)
        return ctx.stylize(base, 'special');
    } else if (isRegExp(value)) {
      // Make RegExps say that they are RegExps
      base = RegExpPrototype.toString(
        constructor !== null ? value : new RegExp(value)
      );
      const prefix = getPrefix(constructor, tag, 'RegExp');
      if (prefix !== 'RegExp ')
        base = `${prefix}${base}`;
      if (keys.length === 0 || recurseTimes > ctx.depth && ctx.depth !== null)
        return ctx.stylize(base, 'regexp');
    } else if (isDate(value)) {
      // Make dates with properties first say the date
      base = Number.isNaN(DatePrototype.getTime(value)) ?
        DatePrototype.toString(value) :
        DatePrototype.toISOString(value);
      const prefix = getPrefix(constructor, tag, 'Date');
      if (prefix !== 'Date ')
        base = `${prefix}${base}`;
      if (keys.length === 0) {
        return ctx.stylize(base, 'date');
      }
    } else if (isError(value)) {
      base = formatError(value, constructor, tag, ctx);
      if (keys.length === 0)
        return base;
    } else if (isAnyArrayBuffer(value)) {
      // Fast path for ArrayBuffer and SharedArrayBuffer.
      // Can't do the same for DataView because it has a non-primitive
      // .buffer property that we need to recurse for.
      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :
        'SharedArrayBuffer';
      const prefix = getPrefix(constructor, tag, arrayType);
      if (typedArray === undefined) {
        formatter = formatArrayBuffer;
      } else if (keys.length === 0) {
        return prefix +
              `{ byteLength: ${formatNumber(ctx.stylize, value.byteLength)} }`;
      }
      braces[0] = `${prefix}{`;
      keys.unshift('byteLength');
    } else if (isDataView(value)) {
      braces[0] = `${getPrefix(constructor, tag, 'DataView')}{`;
      // .buffer goes last, it's not a primitive like the others.
      keys.unshift('byteLength', 'byteOffset', 'buffer');
    } else if (isPromise(value)) {
      braces[0] = `${getPrefix(constructor, tag, 'Promise')}{`;
      formatter = formatPromise;
    } else if (isWeakSet(value)) {
      braces[0] = `${getPrefix(constructor, tag, 'WeakSet')}{`;
      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;
    } else if (isWeakMap(value)) {
      braces[0] = `${getPrefix(constructor, tag, 'WeakMap')}{`;
      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;
    } else if (isModuleNamespaceObject(value)) {
      braces[0] = `[${tag}] {`;
      formatter = formatNamespaceObject;
    } else if (isBoxedPrimitive(value)) {
      base = getBoxedBase(value, ctx, keys, constructor, tag);
      if (keys.length === 0) {
        return base;
      }
    } else {
      // The input prototype got manipulated. Special handle these. We have to
      // rebuild the information so we are able to display everything.
      if (constructor === null) {
        const specialIterator = noPrototypeIterator(ctx, value, recurseTimes);
        if (specialIterator) {
          return specialIterator;
        }
      }
      if (isMapIterator(value)) {
        braces = getIteratorBraces('Map', tag);
        formatter = formatIterator;
      } else if (isSetIterator(value)) {
        braces = getIteratorBraces('Set', tag);
        formatter = formatIterator;
      // Handle other regular objects again.
      } else {
        if (keys.length === 0) {
          if (isExternal(value))
            return ctx.stylize('[External]', 'special');
          return `${getCtxStyle(value, constructor, tag)}{}`;
        }
        braces[0] = `${getCtxStyle(value, constructor, tag)}{`;
      }
    }
  if (recurseTimes > ctx.depth && ctx.depth !== null) {
    let constructorName = getCtxStyle(value, constructor, tag).slice(0, -1);
    if (constructor !== null)
      constructorName = `[${constructorName}]`;
    return ctx.stylize(constructorName, 'special');
  recurseTimes += 1;
  ctx.seen.push(value);
  ctx.currentDepth = recurseTimes;
  let output;
  const indentationLvl = ctx.indentationLvl;
  try {
    output = formatter(ctx, value, recurseTimes, keys, braces);
    for (i = 0; i < keys.length; i++) {
      output.push(
        formatProperty(ctx, value, recurseTimes, keys[i], extrasType));
    }
  } catch (err) {
    const constructorName = getCtxStyle(value, constructor, tag).slice(0, -1);
    return handleMaxCallStackSize(ctx, err, constructorName, indentationLvl);
  ctx.seen.pop();
  if (ctx.sorted) {
    const comparator = ctx.sorted === true ? undefined : ctx.sorted;
    if (extrasType === kObjectType) {
      output = output.sort(comparator);
    } else if (keys.length > 1) {
      const sorted = output.slice(output.length - keys.length).sort(comparator);
      output.splice(output.length - keys.length, keys.length, ...sorted);
    }
  const res = reduceToSingleString(
    ctx, output, base, braces, extrasType, recurseTimes, value);
  const budget = ctx.budget[ctx.indentationLvl] || 0;
  const newLength = budget + res.length;
  ctx.budget[ctx.indentationLvl] = newLength;
  // If any indentationLvl exceeds this limit, limit further inspecting to the
  // minimum. Otherwise the recursive algorithm might continue inspecting the
  // object even though the maximum string size (~2 ** 28 on 32 bit systems and
  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at
  // exactly 2 ** 27 but a bit higher. This depends on the object shape.
  // This limit also makes sure that huge objects don't block the event loop
  // significantly.
  if (newLength > 2 ** 27) {
    ctx.depth = -1;
  return res;
function getIteratorBraces(type, tag) {
  if (tag !== `${type} Iterator`) {
    if (tag !== '')
      tag += '] [';
    tag += `${type} Iterator`;
  return [`[${tag}] {`, '}'];
function getBoxedBase(value, ctx, keys, constructor, tag) {
  let fn;
  let type;
  if (isNumberObject(value)) {
    fn = NumberPrototype;
    type = 'Number';
  } else if (isStringObject(value)) {
    fn = StringPrototype;
    type = 'String';
    // For boxed Strings, we have to remove the 0-n indexed entries,
    // since they just noisy up the output and are redundant
    // Make boxed primitive Strings look like such
    keys.splice(0, value.length);
  } else if (isBooleanObject(value)) {
    fn = BooleanPrototype;
    type = 'Boolean';
  } else if (isBigIntObject(value)) {
    fn = BigIntPrototype;
    type = 'BigInt';
  } else {
    fn = SymbolPrototype;
    type = 'Symbol';
  let base = `[${type}`;
  if (type !== constructor) {
    if (constructor === null) {
      base += ' (null prototype)';
    } else {
      base += ` (${constructor})`;
    }
  base += `: ${formatPrimitive(stylizeNoColor, fn.valueOf(value), ctx)}]`;
  if (tag !== '' && tag !== constructor) {
    base += ` [${tag}]`;
  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)
    return base;
  return ctx.stylize(base, type.toLowerCase());
function getFunctionBase(value, constructor, tag) {
  let type = 'Function';
  if (isGeneratorFunction(value)) {
    type = `Generator${type}`;
  if (isAsyncFunction(value)) {
    type = `Async${type}`;
  let base = `[${type}`;
  if (constructor === null) {
    base += ' (null prototype)';
  if (value.name !== '') {
    base += `: ${value.name}`;
  base += ']';
  if (constructor !== type && constructor !== null) {
    base += ` ${constructor}`;
  if (tag !== '' && constructor !== tag) {
    base += ` [${tag}]`;
  return base;
function formatError(err, constructor, tag, ctx) {
  let stack = err.stack || ErrorPrototype.toString(err);
  // A stack trace may contain arbitrary data. Only manipulate the output
  // for "regular errors" (errors that "look normal") for now.
  const name = err.name || 'Error';
  let len = name.length;
  if (constructor === null ||
      name.endsWith('Error') &&
      stack.startsWith(name) &&
      (stack.length === len || stack[len] === ':' || stack[len] === '\n')) {
    let fallback = 'Error';
    if (constructor === null) {
      const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\]()-]+)(?::|\n {4}at)/) ||
        stack.match(/^([a-z_A-Z0-9-]*Error)$/);
      fallback = start && start[1] || '';
      len = fallback.length;
      fallback = fallback || 'Error';
    }
    const prefix = getPrefix(constructor, tag, fallback).slice(0, -1);
    if (name !== prefix) {
      if (prefix.includes(name)) {
        if (len === 0) {
          stack = `${prefix}: ${stack}`;
        } else {
          stack = `${prefix}${stack.slice(len)}`;
        }
      } else {
        stack = `${prefix} [${name}]${stack.slice(len)}`;
      }
    }
  // Ignore the error message if it's contained in the stack.
  let pos = err.message && stack.indexOf(err.message) || -1;
  if (pos !== -1)
    pos += err.message.length;
  // Wrap the error in brackets in case it has no stack trace.
  const stackStart = stack.indexOf('\n    at', pos);
  if (stackStart === -1) {
    stack = `[${stack}]`;
  } else if (ctx.colors) {
    // Highlight userland code and node modules.
    let newStack = stack.slice(0, stackStart);
    const lines = stack.slice(stackStart + 1).split('\n');
    for (const line of lines) {
      const core = line.match(coreModuleRegExp);
      if (core !== null && NativeModule.exists(core[1])) {
        newStack += `\n${ctx.stylize(line, 'undefined')}`;
      } else {
        // This adds underscores to all node_modules to quickly identify them.
        let nodeModule;
        newStack += '\n';
        let pos = 0;
        while (nodeModule = nodeModulesRegExp.exec(line)) {
          // '/node_modules/'.length === 14
          newStack += line.slice(pos, nodeModule.index + 14);
          newStack += ctx.stylize(nodeModule[1], 'module');
          pos = nodeModule.index + nodeModule[0].length;
        }
        newStack += pos === 0 ? line : line.slice(pos);
      }
    }
    stack = newStack;
  // The message and the stack have to be indented as well!
  if (ctx.indentationLvl !== 0) {
    const indentation = ' '.repeat(ctx.indentationLvl);
    stack = stack.replace(/\n/g, `\n${indentation}`);
  return stack;
function groupArrayElements(ctx, output, value) {
  let totalLength = 0;
  let maxLength = 0;
  let i = 0;
  let outputLength = output.length;
  if (ctx.maxArrayLength < output.length) {
    // This makes sure the "... n more items" part is not taken into account.
    outputLength--;
  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.
  const dataLen = new Array(outputLength);
  // Calculate the total length of all output entries and the individual max
  // entries length of all output entries. We have to remove colors first,
  // otherwise the length would not be calculated properly.
  for (; i < outputLength; i++) {
    const len = ctx.colors ? removeColors(output[i]).length : output[i].length;
    dataLen[i] = len;
    totalLength += len + separatorSpace;
    if (maxLength < len)
      maxLength = len;
  // Add two to `maxLength` as we add a single whitespace character plus a comma
  // in-between two entries.
  const actualMax = maxLength + separatorSpace;
  // Check if at least three entries fit next to each other and prevent grouping
  // of arrays that contains entries of very different length (i.e., if a single
  // entry is longer than 1/5 of all other entries combined). Otherwise the
  // space in-between small entries would be enormous.
  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&
      (totalLength / actualMax > 5 || maxLength <= 6)) {
    const approxCharHeights = 2.5;
    const averageBias = Math.sqrt(actualMax - totalLength / output.length);
    const biasedMax = Math.max(actualMax - 3 - averageBias, 1);
    // Dynamically check how many columns seem possible.
    const columns = Math.min(
      // Ideally a square should be drawn. We expect a character to be about 2.5
      // times as high as wide. This is the area formula to calculate a square
      // which contains n rectangles of size `actualMax * approxCharHeights`.
      // Divide that by `actualMax` to receive the correct number of columns.
      // The added bias increases the columns for short entries.
      Math.round(
        Math.sqrt(
          approxCharHeights * biasedMax * outputLength
        ) / biasedMax
      ),
      // Do not exceed the breakLength.
      Math.floor((ctx.breakLength - ctx.indentationLvl) / actualMax),
      // Limit array grouping for small `compact` modes as the user requested
      // minimal grouping.
      ctx.compact * 4,
      // Limit the columns to a maximum of fifteen.
      15
    );
    // Return with the original output if no grouping should happen.
    if (columns <= 1) {
      return output;
    }
    const tmp = [];
    const maxLineLength = [];
    for (let i = 0; i < columns; i++) {
      let lineMaxLength = 0;
      for (let j = i; j < output.length; j += columns) {
        if (dataLen[j] > lineMaxLength)
          lineMaxLength = dataLen[j];
      }
      lineMaxLength += separatorSpace;
      maxLineLength[i] = lineMaxLength;
    }
    let order = 'padStart';
    if (value !== undefined) {
      for (let i = 0; i < output.length; i++) {
        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {
          order = 'padEnd';
          break;
        }
      }
    }
    // Each iteration creates a single line of grouped entries.
    for (let i = 0; i < outputLength; i += columns) {
      // The last lines may contain less entries than columns.
      const max = Math.min(i + columns, outputLength);
      let str = '';
      let j = i;
      for (; j < max - 1; j++) {
        // Calculate extra color padding in case it's active. This has to be
        // done line by line as some lines might contain more colors than
        // others.
        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];
        str += `${output[j]}, `[order](padding, ' ');
      }
      if (order === 'padStart') {
        const padding = maxLineLength[j - i] +
                        output[j].length -
                        dataLen[j] -
                        separatorSpace;
        str += output[j].padStart(padding, ' ');
      } else {
        str += output[j];
      }
      tmp.push(str);
    }
    if (ctx.maxArrayLength < output.length) {
      tmp.push(output[outputLength]);
    }
    output = tmp;
  return output;
function handleMaxCallStackSize(ctx, err, constructorName, indentationLvl) {
  if (isStackOverflowError(err)) {
    ctx.seen.pop();
    ctx.indentationLvl = indentationLvl;
    return ctx.stylize(
      `[${constructorName}: Inspection interrupted ` +
        'prematurely. Maximum call stack size exceeded.]',
      'special'
    );
  throw err;
function formatNumber(fn, value) {
  // Format -0 as '-0'. Checking `value === -0` won't distinguish 0 from -0.
  return fn(Object.is(value, -0) ? '-0' : `${value}`, 'number');
function formatBigInt(fn, value) {
  return fn(`${value}n`, 'bigint');
function formatPrimitive(fn, value, ctx) {
  if (typeof value === 'string') {
    if (ctx.compact !== true &&
        value.length > kMinLineLength &&
        value.length > ctx.breakLength - ctx.indentationLvl - 4) {
      return value
        .split(/(?<=\n)/)
        .map((line) => fn(strEscape(line), 'string'))
        .join(` +\n${' '.repeat(ctx.indentationLvl + 2)}`);
    }
    return fn(strEscape(value), 'string');
  if (typeof value === 'number')
    return formatNumber(fn, value);
  if (typeof value === 'bigint')
    return formatBigInt(fn, value);
  if (typeof value === 'boolean')
    return fn(`${value}`, 'boolean');
  if (typeof value === 'undefined')
    return fn('undefined', 'undefined');
  // es6 symbol primitive
  return fn(SymbolPrototype.toString(value), 'symbol');
function formatNamespaceObject(ctx, value, recurseTimes, keys) {
  const output = new Array(keys.length);
  for (var i = 0; i < keys.length; i++) {
    try {
      output[i] = formatProperty(ctx, value, recurseTimes, keys[i],
                                 kObjectType);
    } catch (err) {
      if (!(isNativeError(err) && err.name === 'ReferenceError')) {
        throw err;
      }
      // Use the existing functionality. This makes sure the indentation and
      // line breaks are always correct. Otherwise it is very difficult to keep
      // this aligned, even though this is a hacky way of dealing with this.
      const tmp = { [keys[i]]: '' };
      output[i] = formatProperty(ctx, tmp, recurseTimes, keys[i], kObjectType);
      const pos = output[i].lastIndexOf(' ');
      // We have to find the last whitespace and have to replace that value as
      // it will be visualized as a regular string.
      output[i] = output[i].slice(0, pos + 1) +
                  ctx.stylize('<uninitialized>', 'special');
    }
  // Reset the keys to an empty array. This prevents duplicated inspection.
  keys.length = 0;
  return output;
// The array is sparse and/or has extra keys
function formatSpecialArray(ctx, value, recurseTimes, maxLength, output, i) {
  const keys = Object.keys(value);
  let index = i;
  for (; i < keys.length && output.length < maxLength; i++) {
    const key = keys[i];
    const tmp = +key;
    // Arrays can only have up to 2^32 - 1 entries
    if (tmp > 2 ** 32 - 2) {
      break;
    }
    if (`${index}` !== key) {
      if (!numberRegExp.test(key)) {
        break;
      }
      const emptyItems = tmp - index;
      const ending = emptyItems > 1 ? 's' : '';
      const message = `<${emptyItems} empty item${ending}>`;
      output.push(ctx.stylize(message, 'undefined'));
      index = tmp;
      if (output.length === maxLength) {
        break;
      }
    }
    output.push(formatProperty(ctx, value, recurseTimes, key, kArrayType));
    index++;
  const remaining = value.length - index;
  if (output.length !== maxLength) {
    if (remaining > 0) {
      const ending = remaining > 1 ? 's' : '';
      const message = `<${remaining} empty item${ending}>`;
      output.push(ctx.stylize(message, 'undefined'));
    }
  } else if (remaining > 0) {
    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);
  return output;
function formatArrayBuffer(ctx, value) {
  const buffer = new Uint8Array(value);
  if (hexSlice === undefined)
    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);
  let str = hexSlice(buffer, 0, Math.min(ctx.maxArrayLength, buffer.length))
    .replace(/(.{2})/g, '$1 ').trim();
  const remaining = buffer.length - ctx.maxArrayLength;
  if (remaining > 0)
    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;
  return [`${ctx.stylize('[Uint8Contents]', 'special')}: <${str}>`];
function formatArray(ctx, value, recurseTimes) {
  const valLen = value.length;
  const len = Math.min(Math.max(0, ctx.maxArrayLength), valLen);
  const remaining = valLen - len;
  const output = [];
  for (var i = 0; i < len; i++) {
    // Special handle sparse arrays.
    if (!hasOwnProperty(value, i)) {
      return formatSpecialArray(ctx, value, recurseTimes, len, output, i);
    }
    output.push(formatProperty(ctx, value, recurseTimes, i, kArrayType));
  if (remaining > 0)
    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);
  return output;
function formatTypedArray(ctx, value, recurseTimes) {
  const maxLength = Math.min(Math.max(0, ctx.maxArrayLength), value.length);
  const remaining = value.length - maxLength;
  const output = new Array(maxLength);
  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?
    formatNumber :
    formatBigInt;
  for (let i = 0; i < maxLength; ++i)
    output[i] = elementFormatter(ctx.stylize, value[i]);
  if (remaining > 0) {
    output[maxLength] = `... ${remaining} more item${remaining > 1 ? 's' : ''}`;
  if (ctx.showHidden) {
    // .buffer goes last, it's not a primitive like the others.
    ctx.indentationLvl += 2;
    for (const key of [
      'BYTES_PER_ELEMENT',
      'length',
      'byteLength',
      'byteOffset',
      'buffer'
    ]) {
      const str = formatValue(ctx, value[key], recurseTimes, true);
      output.push(`[${key}]: ${str}`);
    }
    ctx.indentationLvl -= 2;
  return output;
function formatSet(ctx, value, recurseTimes) {
  const output = [];
  ctx.indentationLvl += 2;
  for (const v of value) {
    output.push(formatValue(ctx, v, recurseTimes));
  ctx.indentationLvl -= 2;
  // With `showHidden`, `length` will display as a hidden property for
  // arrays. For consistency's sake, do the same for `size`, even though this
  // property isn't selected by Object.getOwnPropertyNames().
  if (ctx.showHidden)
    output.push(`[size]: ${ctx.stylize(`${value.size}`, 'number')}`);
  return output;
function formatMap(ctx, value, recurseTimes) {
  const output = [];
  ctx.indentationLvl += 2;
  for (const [k, v] of value) {
    output.push(`${formatValue(ctx, k, recurseTimes)} => ` +
                formatValue(ctx, v, recurseTimes));
  ctx.indentationLvl -= 2;
  // See comment in formatSet
  if (ctx.showHidden)
    output.push(`[size]: ${ctx.stylize(`${value.size}`, 'number')}`);
  return output;
function formatSetIterInner(ctx, recurseTimes, entries, state) {
  const maxArrayLength = Math.max(ctx.maxArrayLength, 0);
  const maxLength = Math.min(maxArrayLength, entries.length);
  let output = new Array(maxLength);
  ctx.indentationLvl += 2;
  for (var i = 0; i < maxLength; i++) {
    output[i] = formatValue(ctx, entries[i], recurseTimes);
  ctx.indentationLvl -= 2;
  if (state === kWeak && !ctx.sorted) {
    // Sort all entries to have a halfway reliable output (if more entries than
    // retrieved ones exist, we can not reliably return the same output) if the
    // output is not sorted anyway.
    output = output.sort();
  const remaining = entries.length - maxLength;
  if (remaining > 0) {
    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);
  return output;
function formatMapIterInner(ctx, recurseTimes, entries, state) {
  const maxArrayLength = Math.max(ctx.maxArrayLength, 0);
  // Entries exist as [key1, val1, key2, val2, ...]
  const len = entries.length / 2;
  const remaining = len - maxArrayLength;
  const maxLength = Math.min(maxArrayLength, len);
  let output = new Array(maxLength);
  let i = 0;
  ctx.indentationLvl += 2;
  if (state === kWeak) {
    for (; i < maxLength; i++) {
      const pos = i * 2;
      output[i] = `${formatValue(ctx, entries[pos], recurseTimes)}` +
        ` => ${formatValue(ctx, entries[pos + 1], recurseTimes)}`;
    }
    // Sort all entries to have a halfway reliable output (if more entries than
    // retrieved ones exist, we can not reliably return the same output) if the
    // output is not sorted anyway.
    if (!ctx.sorted)
      output = output.sort();
  } else {
    for (; i < maxLength; i++) {
      const pos = i * 2;
      const res = [
        formatValue(ctx, entries[pos], recurseTimes),
        formatValue(ctx, entries[pos + 1], recurseTimes)
      ];
      output[i] = reduceToSingleString(
        ctx, res, '', ['[', ']'], kArrayExtrasType, recurseTimes);
    }
  ctx.indentationLvl -= 2;
  if (remaining > 0) {
    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);
  return output;
function formatWeakCollection(ctx) {
  return [ctx.stylize('<items unknown>', 'special')];
function formatWeakSet(ctx, value, recurseTimes) {
  const entries = previewEntries(value);
  return formatSetIterInner(ctx, recurseTimes, entries, kWeak);
function formatWeakMap(ctx, value, recurseTimes) {
  const entries = previewEntries(value);
  return formatMapIterInner(ctx, recurseTimes, entries, kWeak);
function formatIterator(ctx, value, recurseTimes, keys, braces) {
  const [entries, isKeyValue] = previewEntries(value, true);
  if (isKeyValue) {
    // Mark entry iterators as such.
    braces[0] = braces[0].replace(/ Iterator] {$/, ' Entries] {');
    return formatMapIterInner(ctx, recurseTimes, entries, kMapEntries);
  return formatSetIterInner(ctx, recurseTimes, entries, kIterator);
function formatPromise(ctx, value, recurseTimes) {
  let output;
  const [state, result] = getPromiseDetails(value);
  if (state === kPending) {
    output = [ctx.stylize('<pending>', 'special')];
  } else {
    ctx.indentationLvl += 2;
    const str = formatValue(ctx, result, recurseTimes);
    ctx.indentationLvl -= 2;
    output = [
      state === kRejected ?
        `${ctx.stylize('<rejected>', 'special')} ${str}` :
        str
    ];
  return output;
function formatProperty(ctx, value, recurseTimes, key, type) {
  let name, str;
  let extra = ' ';
  const desc = Object.getOwnPropertyDescriptor(value, key) ||
    { value: value[key], enumerable: true };
  if (desc.value !== undefined) {
    const diff = (type !== kObjectType || ctx.compact !== true) ? 2 : 3;
    ctx.indentationLvl += diff;
    str = formatValue(ctx, desc.value, recurseTimes);
    if (diff === 3) {
      const len = ctx.colors ? removeColors(str).length : str.length;
      if (ctx.breakLength < len) {
        extra = `\n${' '.repeat(ctx.indentationLvl)}`;
      }
    }
    ctx.indentationLvl -= diff;
  } else if (desc.get !== undefined) {
    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';
    const s = ctx.stylize;
    const sp = 'special';
    if (ctx.getters && (ctx.getters === true ||
          ctx.getters === 'get' && desc.set === undefined ||
          ctx.getters === 'set' && desc.set !== undefined)) {
      try {
        const tmp = value[key];
        ctx.indentationLvl += 2;
        if (tmp === null) {
          str = `${s(`[${label}:`, sp)} ${s('null', 'null')}${s(']', sp)}`;
        } else if (typeof tmp === 'object') {
          str = `${s(`[${label}]`, sp)} ${formatValue(ctx, tmp, recurseTimes)}`;
        } else {
          const primitive = formatPrimitive(s, tmp, ctx);
          str = `${s(`[${label}:`, sp)} ${primitive}${s(']', sp)}`;
        }
        ctx.indentationLvl -= 2;
      } catch (err) {
        const message = `<Inspection threw (${err.message})>`;
        str = `${s(`[${label}:`, sp)} ${message}${s(']', sp)}`;
      }
    } else {
      str = ctx.stylize(`[${label}]`, sp);
    }
  } else if (desc.set !== undefined) {
    str = ctx.stylize('[Setter]', 'special');
  } else {
    str = ctx.stylize('undefined', 'undefined');
  if (type === kArrayType) {
    return str;
  if (typeof key === 'symbol') {
    const tmp = key.toString().replace(strEscapeSequencesReplacer, escapeFn);
    name = `[${ctx.stylize(tmp, 'symbol')}]`;
  } else if (desc.enumerable === false) {
    name = `[${key.replace(strEscapeSequencesReplacer, escapeFn)}]`;
  } else if (keyStrRegExp.test(key)) {
    name = ctx.stylize(key, 'name');
  } else {
    name = ctx.stylize(strEscape(key), 'string');
  return `${name}:${extra}${str}`;
function isBelowBreakLength(ctx, output, start, base) {
  // Each entry is separated by at least a comma. Thus, we start with a total
  // length of at least `output.length`. In addition, some cases have a
  // whitespace in-between each other that is added to the total as well.
  let totalLength = output.length + start;
  if (totalLength + output.length > ctx.breakLength)
    return false;
  for (var i = 0; i < output.length; i++) {
    if (ctx.colors) {
      totalLength += removeColors(output[i]).length;
    } else {
      totalLength += output[i].length;
    }
    if (totalLength > ctx.breakLength) {
      return false;
    }
  // Do not line up properties on the same line if `base` contains line breaks.
  return base === '' || !base.includes('\n');
function reduceToSingleString(
  ctx, output, base, braces, extrasType, recurseTimes, value) {
  if (ctx.compact !== true) {
    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {
      // Memorize the original output length. In case the the output is grouped,
      // prevent lining up the entries on a single line.
      const entries = output.length;
      // Group array elements together if the array contains at least six
      // separate entries.
      if (extrasType === kArrayExtrasType && entries > 6) {
        output = groupArrayElements(ctx, output, value);
      }
      // `ctx.currentDepth` is set to the most inner depth of the currently
      // inspected object part while `recurseTimes` is the actual current depth
      // that is inspected.
      //
      // Example:
      //
      // const a = { first: [ 1, 2, 3 ], second: { inner: [ 1, 2, 3 ] } }
      //
      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max
      // depth of 1.
      //
      // Consolidate all entries of the local most inner depth up to
      // `ctx.compact`, as long as the properties are smaller than
      // `ctx.breakLength`.
      if (ctx.currentDepth - recurseTimes < ctx.compact &&
          entries === output.length) {
        // Line up all entries on a single line in case the entries do not
        // exceed `breakLength`. Add 10 as constant to start next to all other
        // factors that may reduce `breakLength`.
        const start = output.length + ctx.indentationLvl +
                      braces[0].length + base.length + 10;
        if (isBelowBreakLength(ctx, output, start, base)) {
          return `${base ? `${base} ` : ''}${braces[0]} ${join(output, ', ')}` +
            ` ${braces[1]}`;
        }
      }
    }
    // Line up each entry on an individual line.
    const indentation = `\n${' '.repeat(ctx.indentationLvl)}`;
    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +
      `${join(output, `,${indentation}  `)}${indentation}${braces[1]}`;
  // Line up all entries on a single line in case the entries do not exceed
  // `breakLength`.
  if (isBelowBreakLength(ctx, output, 0, base)) {
    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output, ', ')} ` +
      braces[1];
  const indentation = ' '.repeat(ctx.indentationLvl);
  // If the opening "brace" is too large, like in the case of "Set {",
  // we need to force the first item to be on the next line or the
  // items will not line up correctly.
  const ln = base === '' && braces[0].length === 1 ?
    ' ' : `${base ? ` ${base}` : ''}\n${indentation}  `;
  // Line up each entry on an individual line.
  return `${braces[0]}${ln}${join(output, `,\n${indentation}  `)} ${braces[1]}`;
function format(...args) {
  return formatWithOptions(undefined, ...args);
const firstErrorLine = (error) => error.message.split('\n')[0];
let CIRCULAR_ERROR_MESSAGE;
function tryStringify(arg) {
  try {
    return JSON.stringify(arg);
  } catch (err) {
    // Populate the circular error message lazily
    if (!CIRCULAR_ERROR_MESSAGE) {
      try {
        const a = {}; a.a = a; JSON.stringify(a);
      } catch (err) {
        CIRCULAR_ERROR_MESSAGE = firstErrorLine(err);
      }
    }
    if (err.name === 'TypeError' &&
        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {
      return '[Circular]';
    }
    throw err;
function formatWithOptions(inspectOptions, ...args) {
  const first = args[0];
  let a = 0;
  let str = '';
  let join = '';
  if (typeof first === 'string') {
    if (args.length === 1) {
      return first;
    }
    let tempStr;
    let lastPos = 0;
    for (var i = 0; i < first.length - 1; i++) {
      if (first.charCodeAt(i) === 37) { // '%'
        const nextChar = first.charCodeAt(++i);
        if (a + 1 !== args.length) {
          switch (nextChar) {
            case 115: // 's'
              const tempArg = args[++a];
              if (typeof tempArg === 'number') {
                tempStr = formatNumber(stylizeNoColor, tempArg);
              } else if (typeof tempArg === 'bigint') {
                tempStr = `${tempArg}n`;
              } else {
                let constr;
                if (typeof tempArg !== 'object' ||
                    tempArg === null ||
                    typeof tempArg.toString === 'function' &&
                     // A direct own property.
                     (hasOwnProperty(tempArg, 'toString') ||
                      // A direct own property on the constructor prototype in
                      // case the constructor is not an built-in object.
                      (constr = tempArg.constructor) &&
                      !builtInObjects.has(constr.name) &&
                      constr.prototype &&
                      hasOwnProperty(constr.prototype, 'toString'))) {
                  tempStr = String(tempArg);
                } else {
                  tempStr = inspect(tempArg, {
                    ...inspectOptions,
                    compact: 3,
                    colors: false,
                    depth: 0
                  });
                }
              }
              break;
            case 106: // 'j'
              tempStr = tryStringify(args[++a]);
              break;
            case 100: // 'd'
              const tempNum = args[++a];
              if (typeof tempNum === 'bigint') {
                tempStr = `${tempNum}n`;
              } else if (typeof tempNum === 'symbol') {
                tempStr = 'NaN';
              } else {
                tempStr = formatNumber(stylizeNoColor, Number(tempNum));
              }
              break;
            case 79: // 'O'
              tempStr = inspect(args[++a], inspectOptions);
              break;
            case 111: // 'o'
            {
              tempStr = inspect(args[++a], {
                ...inspectOptions,
                showHidden: true,
                showProxy: true,
                depth: 4
              });
              break;
            }
            case 105: // 'i'
              const tempInteger = args[++a];
              if (typeof tempInteger === 'bigint') {
                tempStr = `${tempInteger}n`;
              } else if (typeof tempInteger === 'symbol') {
                tempStr = 'NaN';
              } else {
                tempStr = formatNumber(stylizeNoColor, parseInt(tempInteger));
              }
              break;
            case 102: // 'f'
              const tempFloat = args[++a];
              if (typeof tempFloat === 'symbol') {
                tempStr = 'NaN';
              } else {
                tempStr = formatNumber(stylizeNoColor, parseFloat(tempFloat));
              }
              break;
            case 37: // '%'
              str += first.slice(lastPos, i);
              lastPos = i + 1;
              continue;
            default: // Any other character is not a correct placeholder
              continue;
          }
          if (lastPos !== i - 1) {
            str += first.slice(lastPos, i - 1);
          }
          str += tempStr;
          lastPos = i + 1;
        } else if (nextChar === 37) {
          str += first.slice(lastPos, i);
          lastPos = i + 1;
        }
      }
    }
    if (lastPos !== 0) {
      a++;
      join = ' ';
      if (lastPos < first.length) {
        str += first.slice(lastPos);
      }
    }
  while (a < args.length) {
    const value = args[a];
    str += join;
    str += typeof value !== 'string' ? inspect(value, inspectOptions) : value;
    join = ' ';
    a++;
  return str;
module.exports = {
  inspect,
  format,
  formatWithOptions,
  inspectDefaultOptions
'use strict';
const { Object } = primordials;
let session;
function sendInspectorCommand(cb, onError) {
  const { hasInspector } = internalBinding('config');
  if (!hasInspector) return onError();
  const inspector = require('inspector');
  if (session === undefined) session = new inspector.Session();
  try {
    session.connect();
    try {
      return cb(session);
    } finally {
      session.disconnect();
    }
  } catch {
    return onError();
// Create a special require function for the inspector command line API
function installConsoleExtensions(commandLineApi) {
  if (commandLineApi.require) { return; }
  const { tryGetCwd } = require('internal/process/execution');
  const CJSModule = require('internal/modules/cjs/loader');
  const { makeRequireFunction } = require('internal/modules/cjs/helpers');
  const consoleAPIModule = new CJSModule('<inspector console>');
  const cwd = tryGetCwd();
  consoleAPIModule.paths =
      CJSModule._nodeModulePaths(cwd).concat(CJSModule.globalPaths);
  commandLineApi.require = makeRequireFunction(consoleAPIModule);
// Wrap a console implemented by Node.js with features from the VM inspector
function wrapConsole(consoleFromNode, consoleFromVM) {
  const { consoleCall } = internalBinding('inspector');
  for (const key of Object.keys(consoleFromVM)) {
    // If global console has the same method as inspector console,
    // then wrap these two methods into one. Native wrapper will preserve
    // the original stack.
    if (consoleFromNode.hasOwnProperty(key)) {
      consoleFromNode[key] = consoleCall.bind(consoleFromNode,
                                              consoleFromVM[key],
                                              consoleFromNode[key]);
    } else {
      // Add additional console APIs from the inspector
      consoleFromNode[key] = consoleFromVM[key];
    }
// Stores the console from VM, should be set during bootstrap.
let consoleFromVM;
module.exports = {
  installConsoleExtensions,
  sendInspectorCommand,
  wrapConsole,
  get consoleFromVM() {
    return consoleFromVM;
  },
  set consoleFromVM(val) {
    consoleFromVM = val;
'use strict';
const { Object, uncurryThis } = primordials;
const TypedArrayPrototype = Object.getPrototypeOf(Uint8Array.prototype);
const TypedArrayProto_toStringTag =
    uncurryThis(
      Object.getOwnPropertyDescriptor(TypedArrayPrototype,
                                      Symbol.toStringTag).get);
// Cached to make sure no userland code can tamper with it.
const isArrayBufferView = ArrayBuffer.isView;
function isTypedArray(value) {
  return TypedArrayProto_toStringTag(value) !== undefined;
function isUint8Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Uint8Array';
function isUint8ClampedArray(value) {
  return TypedArrayProto_toStringTag(value) === 'Uint8ClampedArray';
function isUint16Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Uint16Array';
function isUint32Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Uint32Array';
function isInt8Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Int8Array';
function isInt16Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Int16Array';
function isInt32Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Int32Array';
function isFloat32Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Float32Array';
function isFloat64Array(value) {
  return TypedArrayProto_toStringTag(value) === 'Float64Array';
function isBigInt64Array(value) {
  return TypedArrayProto_toStringTag(value) === 'BigInt64Array';
function isBigUint64Array(value) {
  return TypedArrayProto_toStringTag(value) === 'BigUint64Array';
module.exports = {
  ...internalBinding('types'),
  isArrayBufferView,
  isTypedArray,
  isUint8Array,
  isUint8ClampedArray,
  isUint16Array,
  isUint32Array,
  isInt8Array,
  isInt16Array,
  isInt32Array,
  isFloat32Array,
  isFloat64Array,
  isBigInt64Array,
  isBigUint64Array
'use strict';
/* eslint-disable no-use-before-define */
const { Math, Object, Reflect } = primordials;
const {
  assertCrypto,
  customInspectSymbol: kInspect,
  promisify
} = require('internal/util');
assertCrypto();
const assert = require('assert');
const EventEmitter = require('events');
const fs = require('fs');
const http = require('http');
const net = require('net');
const { Duplex } = require('stream');
const tls = require('tls');
const { URL } = require('url');
const { setImmediate } = require('timers');
const { kIncomingMessage } = require('_http_common');
const { kServerResponse } = require('_http_server');
const JSStreamSocket = require('internal/js_stream_socket');
const {
  defaultTriggerAsyncIdScope,
  symbols: {
    async_id_symbol,
    owner_symbol,
  },
} = require('internal/async_hooks');
const {
  codes: {
    ERR_HTTP2_ALTSVC_INVALID_ORIGIN,
    ERR_HTTP2_ALTSVC_LENGTH,
    ERR_HTTP2_CONNECT_AUTHORITY,
    ERR_HTTP2_CONNECT_PATH,
    ERR_HTTP2_CONNECT_SCHEME,
    ERR_HTTP2_GOAWAY_SESSION,
    ERR_HTTP2_HEADERS_AFTER_RESPOND,
    ERR_HTTP2_HEADERS_SENT,
    ERR_HTTP2_INVALID_INFO_STATUS,
    ERR_HTTP2_INVALID_ORIGIN,
    ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH,
    ERR_HTTP2_INVALID_SESSION,
    ERR_HTTP2_INVALID_SETTING_VALUE,
    ERR_HTTP2_INVALID_STREAM,
    ERR_HTTP2_MAX_PENDING_SETTINGS_ACK,
    ERR_HTTP2_NESTED_PUSH,
    ERR_HTTP2_NO_SOCKET_MANIPULATION,
    ERR_HTTP2_ORIGIN_LENGTH,
    ERR_HTTP2_OUT_OF_STREAMS,
    ERR_HTTP2_PAYLOAD_FORBIDDEN,
    ERR_HTTP2_PING_CANCEL,
    ERR_HTTP2_PING_LENGTH,
    ERR_HTTP2_PUSH_DISABLED,
    ERR_HTTP2_SEND_FILE,
    ERR_HTTP2_SEND_FILE_NOSEEK,
    ERR_HTTP2_SESSION_ERROR,
    ERR_HTTP2_SETTINGS_CANCEL,
    ERR_HTTP2_SOCKET_BOUND,
    ERR_HTTP2_SOCKET_UNBOUND,
    ERR_HTTP2_STATUS_101,
    ERR_HTTP2_STATUS_INVALID,
    ERR_HTTP2_STREAM_CANCEL,
    ERR_HTTP2_STREAM_ERROR,
    ERR_HTTP2_STREAM_SELF_DEPENDENCY,
    ERR_HTTP2_TRAILERS_ALREADY_SENT,
    ERR_HTTP2_TRAILERS_NOT_READY,
    ERR_HTTP2_UNSUPPORTED_PROTOCOL,
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_CALLBACK,
    ERR_INVALID_CHAR,
    ERR_INVALID_OPT_VALUE,
    ERR_OUT_OF_RANGE,
    ERR_SOCKET_CLOSED
  },
  hideStackFrames
} = require('internal/errors');
const { validateNumber, validateString } = require('internal/validators');
const { utcDate } = require('internal/http');
const { onServerStream,
        Http2ServerRequest,
        Http2ServerResponse,
} = require('internal/http2/compat');
const {
  assertIsObject,
  assertValidPseudoHeaderResponse,
  assertValidPseudoHeaderTrailer,
  assertWithinRange,
  getDefaultSettings,
  getSessionState,
  getSettings,
  getStreamState,
  isPayloadMeaningless,
  kSocket,
  kRequest,
  kProxySocket,
  mapToHeaders,
  NghttpError,
  sessionName,
  toHeaderObject,
  updateOptionsBuffer,
  updateSettingsBuffer
} = require('internal/http2/util');
const {
  writeGeneric,
  writevGeneric,
  onStreamRead,
  kAfterAsyncWrite,
  kMaybeDestroy,
  kUpdateTimer,
  kHandle,
  kSession,
  setStreamTimeout
} = require('internal/stream_base_commons');
const { kTimeout } = require('internal/timers');
const { isArrayBufferView } = require('internal/util/types');
const { format } = require('internal/util/inspect');
const hasOwnProperty = Object.prototype.hasOwnProperty;
const { FileHandle } = internalBinding('fs');
const binding = internalBinding('http2');
const {
  ShutdownWrap,
  kReadBytesOrError,
  streamBaseState
} = internalBinding('stream_wrap');
const { UV_EOF } = internalBinding('uv');
const { StreamPipe } = internalBinding('stream_pipe');
const { _connectionListener: httpConnectionListener } = http;
const debug = require('internal/util/debuglog').debuglog('http2');
const { getOptionValue } = require('internal/options');
const kMaxFrameSize = (2 ** 24) - 1;
const kMaxInt = (2 ** 32) - 1;
const kMaxStreams = (2 ** 31) - 1;
// eslint-disable-next-line no-control-regex
const kQuotedString = /^[\x09\x20-\x5b\x5d-\x7e\x80-\xff]*$/;
const { constants, nameForErrorCode } = binding;
const NETServer = net.Server;
const TLSServer = tls.Server;
const kAlpnProtocol = Symbol('alpnProtocol');
const kAuthority = Symbol('authority');
const kEncrypted = Symbol('encrypted');
const kID = Symbol('id');
const kInit = Symbol('init');
const kInfoHeaders = Symbol('sent-info-headers');
const kLocalSettings = Symbol('local-settings');
const kOptions = Symbol('options');
const kOwner = owner_symbol;
const kOrigin = Symbol('origin');
const kPendingRequestCalls = Symbol('kPendingRequestCalls');
const kProceed = Symbol('proceed');
const kProtocol = Symbol('protocol');
const kRemoteSettings = Symbol('remote-settings');
const kSelectPadding = Symbol('select-padding');
const kSentHeaders = Symbol('sent-headers');
const kSentTrailers = Symbol('sent-trailers');
const kServer = Symbol('server');
const kState = Symbol('state');
const kType = Symbol('type');
const kWriteGeneric = Symbol('write-generic');
const kDefaultHttpServerTimeout =
  getOptionValue('--http-server-default-timeout');
const {
  paddingBuffer,
  PADDING_BUF_FRAME_LENGTH,
  PADDING_BUF_MAX_PAYLOAD_LENGTH,
  PADDING_BUF_RETURN_VALUE
} = binding;
const {
  NGHTTP2_CANCEL,
  NGHTTP2_REFUSED_STREAM,
  NGHTTP2_DEFAULT_WEIGHT,
  NGHTTP2_FLAG_END_STREAM,
  NGHTTP2_HCAT_PUSH_RESPONSE,
  NGHTTP2_HCAT_RESPONSE,
  NGHTTP2_INTERNAL_ERROR,
  NGHTTP2_NO_ERROR,
  NGHTTP2_SESSION_CLIENT,
  NGHTTP2_SESSION_SERVER,
  NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE,
  NGHTTP2_ERR_INVALID_ARGUMENT,
  NGHTTP2_ERR_STREAM_CLOSED,
  HTTP2_HEADER_AUTHORITY,
  HTTP2_HEADER_DATE,
  HTTP2_HEADER_METHOD,
  HTTP2_HEADER_PATH,
  HTTP2_HEADER_PROTOCOL,
  HTTP2_HEADER_SCHEME,
  HTTP2_HEADER_STATUS,
  HTTP2_HEADER_CONTENT_LENGTH,
  NGHTTP2_SETTINGS_HEADER_TABLE_SIZE,
  NGHTTP2_SETTINGS_ENABLE_PUSH,
  NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS,
  NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE,
  NGHTTP2_SETTINGS_MAX_FRAME_SIZE,
  NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE,
  HTTP2_METHOD_GET,
  HTTP2_METHOD_HEAD,
  HTTP2_METHOD_CONNECT,
  HTTP_STATUS_CONTINUE,
  HTTP_STATUS_RESET_CONTENT,
  HTTP_STATUS_OK,
  HTTP_STATUS_NO_CONTENT,
  HTTP_STATUS_NOT_MODIFIED,
  HTTP_STATUS_SWITCHING_PROTOCOLS,
  HTTP_STATUS_MISDIRECTED_REQUEST,
  STREAM_OPTION_EMPTY_PAYLOAD,
  STREAM_OPTION_GET_TRAILERS
} = constants;
const STREAM_FLAGS_PENDING = 0x0;
const STREAM_FLAGS_READY = 0x1;
const STREAM_FLAGS_CLOSED = 0x2;
const STREAM_FLAGS_HEADERS_SENT = 0x4;
const STREAM_FLAGS_HEAD_REQUEST = 0x8;
const STREAM_FLAGS_ABORTED = 0x10;
const STREAM_FLAGS_HAS_TRAILERS = 0x20;
const SESSION_FLAGS_PENDING = 0x0;
const SESSION_FLAGS_READY = 0x1;
const SESSION_FLAGS_CLOSED = 0x2;
const SESSION_FLAGS_DESTROYED = 0x4;
// Top level to avoid creating a closure
function emit(self, ...args) {
  self.emit(...args);
// Called when a new block of headers has been received for a given
// stream. The stream may or may not be new. If the stream is new,
// create the associated Http2Stream instance and emit the 'stream'
// event. If the stream is not new, emit the 'headers' event to pass
// the block of headers on.
function onSessionHeaders(handle, id, cat, flags, headers) {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  const type = session[kType];
  session[kUpdateTimer]();
  debug(`Http2Stream ${id} [Http2Session ` +
        `${sessionName(type)}]: headers received`);
  const streams = session[kState].streams;
  const endOfStream = !!(flags & NGHTTP2_FLAG_END_STREAM);
  let stream = streams.get(id);
  // Convert the array of header name value pairs into an object
  const obj = toHeaderObject(headers);
  if (stream === undefined) {
    if (session.closed) {
      // We are not accepting any new streams at this point. This callback
      // should not be invoked at this point in time, but just in case it is,
      // refuse the stream using an RST_STREAM and destroy the handle.
      handle.rstStream(NGHTTP2_REFUSED_STREAM);
      handle.destroy();
      return;
    }
    const opts = { readable: !endOfStream };
    // session[kType] can be only one of two possible values
    if (type === NGHTTP2_SESSION_SERVER) {
      stream = new ServerHttp2Stream(session, handle, id, opts, obj);
      if (obj[HTTP2_HEADER_METHOD] === HTTP2_METHOD_HEAD) {
        // For head requests, there must not be a body...
        // end the writable side immediately.
        stream.end();
        stream[kState].flags |= STREAM_FLAGS_HEAD_REQUEST;
      }
    } else {
      stream = new ClientHttp2Stream(session, handle, id, opts);
      stream.end();
    }
    if (endOfStream)
      stream[kState].endAfterHeaders = true;
    process.nextTick(emit, session, 'stream', stream, obj, flags, headers);
  } else {
    let event;
    const status = obj[HTTP2_HEADER_STATUS];
    if (cat === NGHTTP2_HCAT_RESPONSE) {
      if (!endOfStream &&
          status !== undefined &&
          status >= 100 &&
          status < 200) {
        event = 'headers';
      } else {
        event = 'response';
      }
    } else if (cat === NGHTTP2_HCAT_PUSH_RESPONSE) {
      event = 'push';
      // cat === NGHTTP2_HCAT_HEADERS:
    } else if (!endOfStream && status !== undefined && status >= 200) {
      event = 'response';
    } else {
      event = endOfStream ? 'trailers' : 'headers';
    }
    const session = stream.session;
    if (status === HTTP_STATUS_MISDIRECTED_REQUEST) {
      const originSet = session[kState].originSet = initOriginSet(session);
      originSet.delete(stream[kOrigin]);
    }
    debug(`Http2Stream ${id} [Http2Session ` +
          `${sessionName(type)}]: emitting stream '${event}' event`);
    process.nextTick(emit, stream, event, obj, flags, headers);
  if (endOfStream) {
    stream.push(null);
function tryClose(fd) {
  // Try to close the file descriptor. If closing fails, assert because
  // an error really should not happen at this point.
  fs.close(fd, (err) => assert.ifError(err));
// Called when the Http2Stream has finished sending data and is ready for
// trailers to be sent. This will only be called if the { hasOptions: true }
// option is set.
function onStreamTrailers() {
  const stream = this[kOwner];
  stream[kState].trailersReady = true;
  if (stream.destroyed || stream.closed)
    return;
  if (!stream.emit('wantTrailers')) {
    // There are no listeners, send empty trailing HEADERS frame and close.
    stream.sendTrailers({});
// Submit an RST-STREAM frame to be sent to the remote peer.
// This will cause the Http2Stream to be closed.
function submitRstStream(code) {
  if (this[kHandle] !== undefined) {
    this[kHandle].rstStream(code);
function onPing(payload) {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  session[kUpdateTimer]();
  debug(`Http2Session ${sessionName(session[kType])}: new ping received`);
  session.emit('ping', payload);
// Called when the stream is closed either by sending or receiving an
// RST_STREAM frame, or through a natural end-of-stream.
// If the writable and readable sides of the stream are still open at this
// point, close them. If there is an open fd for file send, close that also.
// At this point the underlying node::http2:Http2Stream handle is no
// longer usable so destroy it also.
function onStreamClose(code) {
  const stream = this[kOwner];
  if (!stream || stream.destroyed)
    return false;
  debug(`Http2Stream ${stream[kID]} [Http2Session ` +
        `${sessionName(stream[kSession][kType])}]: closed with code ${code}`);
  if (!stream.closed)
    closeStream(stream, code, kNoRstStream);
  stream[kState].fd = -1;
  // Defer destroy we actually emit end.
  if (!stream.readable || code !== NGHTTP2_NO_ERROR) {
    // If errored or ended, we can destroy immediately.
    stream[kMaybeDestroy](code);
  } else {
    // Wait for end to destroy.
    stream.on('end', stream[kMaybeDestroy]);
    // Push a null so the stream can end whenever the client consumes
    // it completely.
    stream.push(null);
    // If the user hasn't tried to consume the stream (and this is a server
    // session) then just dump the incoming data so that the stream can
    // be destroyed.
    if (stream[kSession][kType] === NGHTTP2_SESSION_SERVER &&
        !stream[kState].didRead &&
        stream.readableFlowing === null)
      stream.resume();
    else
      stream.read(0);
  return true;
// Called when the remote peer settings have been updated.
// Resets the cached settings.
function onSettings() {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  session[kUpdateTimer]();
  debug(`Http2Session ${sessionName(session[kType])}: new settings received`);
  session[kRemoteSettings] = undefined;
  session.emit('remoteSettings', session.remoteSettings);
// If the stream exists, an attempt will be made to emit an event
// on the stream object itself. Otherwise, forward it on to the
// session (which may, in turn, forward it on to the server)
function onPriority(id, parent, weight, exclusive) {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  debug(`Http2Stream ${id} [Http2Session ` +
        `${sessionName(session[kType])}]: priority [parent: ${parent}, ` +
        `weight: ${weight}, exclusive: ${exclusive}]`);
  const emitter = session[kState].streams.get(id) || session;
  if (!emitter.destroyed) {
    emitter[kUpdateTimer]();
    emitter.emit('priority', id, parent, weight, exclusive);
// Called by the native layer when an error has occurred sending a
// frame. This should be exceedingly rare.
function onFrameError(id, type, code) {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  debug(`Http2Session ${sessionName(session[kType])}: error sending frame ` +
        `type ${type} on stream ${id}, code: ${code}`);
  const emitter = session[kState].streams.get(id) || session;
  emitter[kUpdateTimer]();
  emitter.emit('frameError', type, code, id);
function onAltSvc(stream, origin, alt) {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  debug(`Http2Session ${sessionName(session[kType])}: altsvc received: ` +
        `stream: ${stream}, origin: ${origin}, alt: ${alt}`);
  session[kUpdateTimer]();
  session.emit('altsvc', alt, origin, stream);
function initOriginSet(session) {
  let originSet = session[kState].originSet;
  if (originSet === undefined) {
    const socket = session[kSocket];
    session[kState].originSet = originSet = new Set();
    if (socket.servername != null) {
      let originString = `https://${socket.servername}`;
      if (socket.remotePort != null)
        originString += `:${socket.remotePort}`;
      // We have to ensure that it is a properly serialized
      // ASCII origin string. The socket.servername might not
      // be properly ASCII encoded.
      originSet.add((new URL(originString)).origin);
    }
  return originSet;
function onOrigin(origins) {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  debug('Http2Session %s: origin received: %j',
        sessionName(session[kType]), origins);
  session[kUpdateTimer]();
  if (!session.encrypted || session.destroyed)
    return undefined;
  const originSet = initOriginSet(session);
  for (var n = 0; n < origins.length; n++)
    originSet.add(origins[n]);
  session.emit('origin', origins);
// Receiving a GOAWAY frame from the connected peer is a signal that no
// new streams should be created. If the code === NGHTTP2_NO_ERROR, we
// are going to send our close, but allow existing frames to close
// normally. If code !== NGHTTP2_NO_ERROR, we are going to send our own
// close using the same code then destroy the session with an error.
// The goaway event will be emitted on next tick.
function onGoawayData(code, lastStreamID, buf) {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  debug(`Http2Session ${sessionName(session[kType])}: goaway ${code} ` +
        `received [last stream id: ${lastStreamID}]`);
  const state = session[kState];
  state.goawayCode = code;
  state.goawayLastStreamID = lastStreamID;
  session.emit('goaway', code, lastStreamID, buf);
  if (code === NGHTTP2_NO_ERROR) {
    // If this is a no error goaway, begin shutting down.
    // No new streams permitted, but existing streams may
    // close naturally on their own.
    session.close();
  } else {
    // However, if the code is not NGHTTP_NO_ERROR, destroy the
    // session immediately. We destroy with an error but send a
    // goaway using NGHTTP2_NO_ERROR because there was no error
    // condition on this side of the session that caused the
    // shutdown.
    session.destroy(new ERR_HTTP2_SESSION_ERROR(code), NGHTTP2_NO_ERROR);
// Returns the padding to use per frame. The selectPadding callback is set
// on the options. It is invoked with two arguments, the frameLen, and the
// maxPayloadLen. The method must return a numeric value within the range
// frameLen <= n <= maxPayloadLen.
function onSelectPadding() {
  const session = this[kOwner];
  if (session.destroyed)
    return;
  const fn = session[kSelectPadding];
  const frameLen = paddingBuffer[PADDING_BUF_FRAME_LENGTH];
  const maxFramePayloadLen = paddingBuffer[PADDING_BUF_MAX_PAYLOAD_LENGTH];
  paddingBuffer[PADDING_BUF_RETURN_VALUE] = fn(frameLen, maxFramePayloadLen);
// When a ClientHttp2Session is first created, the socket may not yet be
// connected. If request() is called during this time, the actual request
// will be deferred until the socket is ready to go.
function requestOnConnect(headers, options) {
  const session = this[kSession];
  // At this point, the stream should have already been destroyed during
  // the session.destroy() method. Do nothing else.
  if (session === undefined || session.destroyed)
    return;
  // If the session was closed while waiting for the connect, destroy
  // the stream and do not continue with the request.
  if (session.closed) {
    const err = new ERR_HTTP2_GOAWAY_SESSION();
    this.destroy(err);
    return;
  debug(`Http2Session ${sessionName(session[kType])}: connected, ` +
        'initializing request');
  let streamOptions = 0;
  if (options.endStream)
    streamOptions |= STREAM_OPTION_EMPTY_PAYLOAD;
  if (options.waitForTrailers)
    streamOptions |= STREAM_OPTION_GET_TRAILERS;
  // `ret` will be either the reserved stream ID (if positive)
  // or an error code (if negative)
  const ret = session[kHandle].request(headers,
                                       streamOptions,
                                       options.parent | 0,
                                       options.weight | 0,
                                       !!options.exclusive);
  // In an error condition, one of three possible response codes will be
  // possible:
  // * NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE - Maximum stream ID is reached, this
  //   is fatal for the session
  // * NGHTTP2_ERR_INVALID_ARGUMENT - Stream was made dependent on itself, this
  //   impacts on this stream.
  // For the first two, emit the error on the session,
  // For the third, emit the error on the stream, it will bubble up to the
  // session if not handled.
  if (typeof ret === 'number') {
    let err;
    switch (ret) {
      case NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE:
        err = new ERR_HTTP2_OUT_OF_STREAMS();
        this.destroy(err);
        break;
      case NGHTTP2_ERR_INVALID_ARGUMENT:
        err = new ERR_HTTP2_STREAM_SELF_DEPENDENCY();
        this.destroy(err);
        break;
      default:
        session.destroy(new NghttpError(ret));
    }
    return;
  this[kInit](ret.id(), ret);
// Validates that priority options are correct, specifically:
// 1. options.weight must be a number
// 2. options.parent must be a positive number
// 3. options.exclusive must be a boolean
// 4. if specified, options.silent must be a boolean
// Also sets the default priority options if they are not set.
const setAndValidatePriorityOptions = hideStackFrames((options) => {
  if (options.weight === undefined) {
    options.weight = NGHTTP2_DEFAULT_WEIGHT;
  } else if (typeof options.weight !== 'number') {
    throw new ERR_INVALID_OPT_VALUE('weight', options.weight);
  if (options.parent === undefined) {
    options.parent = 0;
  } else if (typeof options.parent !== 'number' || options.parent < 0) {
    throw new ERR_INVALID_OPT_VALUE('parent', options.parent);
  if (options.exclusive === undefined) {
    options.exclusive = false;
  } else if (typeof options.exclusive !== 'boolean') {
    throw new ERR_INVALID_OPT_VALUE('exclusive', options.exclusive);
  if (options.silent === undefined) {
    options.silent = false;
  } else if (typeof options.silent !== 'boolean') {
    throw new ERR_INVALID_OPT_VALUE('silent', options.silent);
// When an error occurs internally at the binding level, immediately
// destroy the session.
function onSessionInternalError(code) {
  if (this[kOwner] !== undefined)
    this[kOwner].destroy(new NghttpError(code));
function settingsCallback(cb, ack, duration) {
  this[kState].pendingAck--;
  this[kLocalSettings] = undefined;
  if (ack) {
    debug(`Http2Session ${sessionName(this[kType])}: settings received`);
    const settings = this.localSettings;
    if (typeof cb === 'function')
      cb(null, settings, duration);
    this.emit('localSettings', settings);
  } else {
    debug(`Http2Session ${sessionName(this[kType])}: settings canceled`);
    if (typeof cb === 'function')
      cb(new ERR_HTTP2_SETTINGS_CANCEL());
// Submits a SETTINGS frame to be sent to the remote peer.
function submitSettings(settings, callback) {
  if (this.destroyed)
    return;
  debug(`Http2Session ${sessionName(this[kType])}: submitting settings`);
  this[kUpdateTimer]();
  updateSettingsBuffer(settings);
  if (!this[kHandle].settings(settingsCallback.bind(this, callback))) {
    this.destroy(new ERR_HTTP2_MAX_PENDING_SETTINGS_ACK());
// Submits a PRIORITY frame to be sent to the remote peer
// Note: If the silent option is true, the change will be made
// locally with no PRIORITY frame sent.
function submitPriority(options) {
  if (this.destroyed)
    return;
  this[kUpdateTimer]();
  // If the parent is the id, do nothing because a
  // stream cannot be made to depend on itself.
  if (options.parent === this[kID])
    return;
  this[kHandle].priority(options.parent | 0,
                         options.weight | 0,
                         !!options.exclusive,
                         !!options.silent);
// Submit a GOAWAY frame to be sent to the remote peer.
// If the lastStreamID is set to <= 0, then the lastProcStreamID will
// be used. The opaqueData must either be a typed array or undefined
// (which will be checked elsewhere).
function submitGoaway(code, lastStreamID, opaqueData) {
  if (this.destroyed)
    return;
  debug(`Http2Session ${sessionName(this[kType])}: submitting goaway`);
  this[kUpdateTimer]();
  this[kHandle].goaway(code, lastStreamID, opaqueData);
const proxySocketHandler = {
  get(session, prop) {
    switch (prop) {
      case 'setTimeout':
      case 'ref':
      case 'unref':
        return session[prop].bind(session);
      case 'destroy':
      case 'emit':
      case 'end':
      case 'pause':
      case 'read':
      case 'resume':
      case 'write':
      case 'setEncoding':
      case 'setKeepAlive':
      case 'setNoDelay':
        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();
      default:
        const socket = session[kSocket];
        if (socket === undefined)
          throw new ERR_HTTP2_SOCKET_UNBOUND();
        const value = socket[prop];
        return typeof value === 'function' ? value.bind(socket) : value;
    }
  },
  getPrototypeOf(session) {
    const socket = session[kSocket];
    if (socket === undefined)
      throw new ERR_HTTP2_SOCKET_UNBOUND();
    return Reflect.getPrototypeOf(socket);
  },
  set(session, prop, value) {
    switch (prop) {
      case 'setTimeout':
      case 'ref':
      case 'unref':
        session[prop] = value;
        return true;
      case 'destroy':
      case 'emit':
      case 'end':
      case 'pause':
      case 'read':
      case 'resume':
      case 'write':
      case 'setEncoding':
      case 'setKeepAlive':
      case 'setNoDelay':
        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();
      default:
        const socket = session[kSocket];
        if (socket === undefined)
          throw new ERR_HTTP2_SOCKET_UNBOUND();
        socket[prop] = value;
        return true;
    }
// pingCallback() returns a function that is invoked when an HTTP2 PING
// frame acknowledgement is received. The ack is either true or false to
// indicate if the ping was successful or not. The duration indicates the
// number of milliseconds elapsed since the ping was sent and the ack
// received. The payload is a Buffer containing the 8 bytes of payload
// data received on the PING acknowledgement.
function pingCallback(cb) {
  return function pingCallback(ack, duration, payload) {
    if (ack) {
      cb(null, duration, payload);
    } else {
      cb(new ERR_HTTP2_PING_CANCEL());
    }
  };
// Validates the values in a settings object. Specifically:
// 1. headerTableSize must be a number in the range 0 <= n <= kMaxInt
// 2. initialWindowSize must be a number in the range 0 <= n <= kMaxInt
// 3. maxFrameSize must be a number in the range 16384 <= n <= kMaxFrameSize
// 4. maxConcurrentStreams must be a number in the range 0 <= n <= kMaxStreams
// 5. maxHeaderListSize must be a number in the range 0 <= n <= kMaxInt
// 6. enablePush must be a boolean
// All settings are optional and may be left undefined
const validateSettings = hideStackFrames((settings) => {
  if (settings === undefined) return;
  assertWithinRange('headerTableSize',
                    settings.headerTableSize,
                    0, kMaxInt);
  assertWithinRange('initialWindowSize',
                    settings.initialWindowSize,
                    0, kMaxInt);
  assertWithinRange('maxFrameSize',
                    settings.maxFrameSize,
                    16384, kMaxFrameSize);
  assertWithinRange('maxConcurrentStreams',
                    settings.maxConcurrentStreams,
                    0, kMaxStreams);
  assertWithinRange('maxHeaderListSize',
                    settings.maxHeaderListSize,
                    0, kMaxInt);
  if (settings.enablePush !== undefined &&
      typeof settings.enablePush !== 'boolean') {
    throw new ERR_HTTP2_INVALID_SETTING_VALUE('enablePush',
                                              settings.enablePush);
// Creates the internal binding.Http2Session handle for an Http2Session
// instance. This occurs only after the socket connection has been
// established. Note: the binding.Http2Session will take over ownership
// of the socket. No other code should read from or write to the socket.
function setupHandle(socket, type, options) {
  // If the session has been destroyed, go ahead and emit 'connect',
  // but do nothing else. The various on('connect') handlers set by
  // core will check for session.destroyed before progressing, this
  // ensures that those at l`east get cleared out.
  if (this.destroyed) {
    process.nextTick(emit, this, 'connect', this, socket);
    return;
  assert(socket._handle !== undefined,
         'Internal HTTP/2 Failure. The socket is not connected. Please ' +
         'report this as a bug in Node.js');
  debug(`Http2Session ${sessionName(type)}: setting up session handle`);
  this[kState].flags |= SESSION_FLAGS_READY;
  updateOptionsBuffer(options);
  const handle = new binding.Http2Session(type);
  handle[kOwner] = this;
  if (typeof options.selectPadding === 'function')
    this[kSelectPadding] = options.selectPadding;
  handle.consume(socket._handle);
  this[kHandle] = handle;
  if (socket.encrypted) {
    this[kAlpnProtocol] = socket.alpnProtocol;
    this[kEncrypted] = true;
  } else {
    // 'h2c' is the protocol identifier for HTTP/2 over plain-text. We use
    // it here to identify any session that is not explicitly using an
    // encrypted socket.
    this[kAlpnProtocol] = 'h2c';
    this[kEncrypted] = false;
  const settings = typeof options.settings === 'object' ?
    options.settings : {};
  this.settings(settings);
  if (type === NGHTTP2_SESSION_SERVER &&
      Array.isArray(options.origins)) {
    this.origin(...options.origins);
  process.nextTick(emit, this, 'connect', this, socket);
// Emits a close event followed by an error event if err is truthy. Used
// by Http2Session.prototype.destroy()
function emitClose(self, error) {
  if (error)
    self.emit('error', error);
  self.emit('close');
function finishSessionDestroy(session, error) {
  const socket = session[kSocket];
  if (!socket.destroyed)
    socket.destroy(error);
  session[kProxySocket] = undefined;
  session[kSocket] = undefined;
  session[kHandle] = undefined;
  socket[kSession] = undefined;
  socket[kServer] = undefined;
  // Finally, emit the close and error events (if necessary) on next tick.
  process.nextTick(emitClose, session, error);
// Upon creation, the Http2Session takes ownership of the socket. The session
// may not be ready to use immediately if the socket is not yet fully connected.
// In that case, the Http2Session will wait for the socket to connect. Once
// the Http2Session is ready, it will emit its own 'connect' event.
// The Http2Session.goaway() method will send a GOAWAY frame, signalling
// to the connected peer that a shutdown is in progress. Sending a goaway
// frame has no other effect, however.
// Receiving a GOAWAY frame will cause the Http2Session to first emit a 'goaway'
// event notifying the user that a shutdown is in progress. If the goaway
// error code equals 0 (NGHTTP2_NO_ERROR), session.close() will be called,
// causing the Http2Session to send its own GOAWAY frame and switch itself
// into a graceful closing state. In this state, new inbound or outbound
// Http2Streams will be rejected. Existing *pending* streams (those created
// but without an assigned stream ID or handle) will be destroyed with a
// cancel error. Existing open streams will be permitted to complete on their
// own. Once all existing streams close, session.destroy() will be called
// automatically.
// Calling session.destroy() will tear down the Http2Session immediately,
// making it no longer usable. Pending and existing streams will be destroyed.
// The bound socket will be destroyed. Once all resources have been freed up,
// the 'close' event will be emitted. Note that pending streams will be
// destroyed using a specific "ERR_HTTP2_STREAM_CANCEL" error. Existing open
// streams will be destroyed using the same error passed to session.destroy()
// If destroy is called with an error, an 'error' event will be emitted
// immediately following the 'close' event.
// The socket and Http2Session lifecycles are tightly bound. Once one is
// destroyed, the other should also be destroyed. When the socket is destroyed
// with an error, session.destroy() will be called with that same error.
// Likewise, when session.destroy() is called with an error, the same error
// will be sent to the socket.
class Http2Session extends EventEmitter {
  constructor(type, options, socket) {
    super();
    if (!socket._handle || !socket._handle.isStreamBase) {
      socket = new JSStreamSocket(socket);
    }
    // No validation is performed on the input parameters because this
    // constructor is not exported directly for users.
    // If the session property already exists on the socket,
    // then it has already been bound to an Http2Session instance
    // and cannot be attached again.
    if (socket[kSession] !== undefined)
      throw new ERR_HTTP2_SOCKET_BOUND();
    socket[kSession] = this;
    this[kState] = {
      destroyCode: NGHTTP2_NO_ERROR,
      flags: SESSION_FLAGS_PENDING,
      goawayCode: null,
      goawayLastStreamID: null,
      streams: new Map(),
      pendingStreams: new Set(),
      pendingAck: 0,
      writeQueueSize: 0,
      originSet: undefined
    };
    this[kEncrypted] = undefined;
    this[kAlpnProtocol] = undefined;
    this[kType] = type;
    this[kProxySocket] = null;
    this[kSocket] = socket;
    this[kTimeout] = null;
    // Do not use nagle's algorithm
    if (typeof socket.setNoDelay === 'function')
      socket.setNoDelay();
    // Disable TLS renegotiation on the socket
    if (typeof socket.disableRenegotiation === 'function')
      socket.disableRenegotiation();
    const setupFn = setupHandle.bind(this, socket, type, options);
    if (socket.connecting) {
      const connectEvent =
        socket instanceof tls.TLSSocket ? 'secureConnect' : 'connect';
      socket.once(connectEvent, () => {
        try {
          setupFn();
        } catch (error) {
          socket.destroy(error);
        }
      });
    } else {
      setupFn();
    }
    debug(`Http2Session ${sessionName(type)}: created`);
  // Returns undefined if the socket is not yet connected, true if the
  // socket is a TLSSocket, and false if it is not.
  get encrypted() {
    return this[kEncrypted];
  // Returns undefined if the socket is not yet connected, `h2` if the
  // socket is a TLSSocket and the alpnProtocol is `h2`, or `h2c` if the
  // socket is not a TLSSocket.
  get alpnProtocol() {
    return this[kAlpnProtocol];
  // TODO(jasnell): originSet is being added in preparation for ORIGIN frame
  // support. At the current time, the ORIGIN frame specification is awaiting
  // publication as an RFC and is awaiting implementation in nghttp2. Once
  // added, an ORIGIN frame will add to the origins included in the origin
  // set. 421 responses will remove origins from the set.
  get originSet() {
    if (!this.encrypted || this.destroyed)
      return undefined;
    return Array.from(initOriginSet(this));
  // True if the Http2Session is still waiting for the socket to connect
  get connecting() {
    return (this[kState].flags & SESSION_FLAGS_READY) === 0;
  // True if Http2Session.prototype.close() has been called
  get closed() {
    return !!(this[kState].flags & SESSION_FLAGS_CLOSED);
  // True if Http2Session.prototype.destroy() has been called
  get destroyed() {
    return !!(this[kState].flags & SESSION_FLAGS_DESTROYED);
  // Resets the timeout counter
  [kUpdateTimer]() {
    if (this.destroyed)
      return;
    if (this[kTimeout]) this[kTimeout].refresh();
  // Sets the id of the next stream to be created by this Http2Session.
  // The value must be a number in the range 0 <= n <= kMaxStreams. The
  // value also needs to be larger than the current next stream ID.
  setNextStreamID(id) {
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_SESSION();
    validateNumber(id, 'id');
    if (id <= 0 || id > kMaxStreams)
      throw new ERR_OUT_OF_RANGE('id', `> 0 and <= ${kMaxStreams}`, id);
    this[kHandle].setNextStreamID(id);
  // If ping is called while we are still connecting, or after close() has
  // been called, the ping callback will be invoked immediately will a ping
  // cancelled error and a duration of 0.0.
  ping(payload, callback) {
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_SESSION();
    if (typeof payload === 'function') {
      callback = payload;
      payload = undefined;
    }
    if (payload && !isArrayBufferView(payload)) {
      throw new ERR_INVALID_ARG_TYPE('payload',
                                     ['Buffer', 'TypedArray', 'DataView'],
                                     payload);
    }
    if (payload && payload.length !== 8) {
      throw new ERR_HTTP2_PING_LENGTH();
    }
    if (typeof callback !== 'function')
      throw new ERR_INVALID_CALLBACK(callback);
    const cb = pingCallback(callback);
    if (this.connecting || this.closed) {
      process.nextTick(cb, false, 0.0, payload);
      return;
    }
    return this[kHandle].ping(payload, cb);
  [kInspect](depth, opts) {
    if (typeof depth === 'number' && depth < 0)
      return this;
    const obj = {
      type: this[kType],
      closed: this.closed,
      destroyed: this.destroyed,
      state: this.state,
      localSettings: this.localSettings,
      remoteSettings: this.remoteSettings
    };
    return `Http2Session ${format(obj)}`;
  // The socket owned by this session
  get socket() {
    const proxySocket = this[kProxySocket];
    if (proxySocket === null)
      return this[kProxySocket] = new Proxy(this, proxySocketHandler);
    return proxySocket;
  // The session type
  get type() {
    return this[kType];
  // If a GOAWAY frame has been received, gives the error code specified
  get goawayCode() {
    return this[kState].goawayCode || NGHTTP2_NO_ERROR;
  // If a GOAWAY frame has been received, gives the last stream ID reported
  get goawayLastStreamID() {
    return this[kState].goawayLastStreamID || 0;
  // True if the Http2Session is waiting for a settings acknowledgement
  get pendingSettingsAck() {
    return this[kState].pendingAck > 0;
  // Retrieves state information for the Http2Session
  get state() {
    return this.connecting || this.destroyed ?
      {} : getSessionState(this[kHandle]);
  // The settings currently in effect for the local peer. These will
  // be updated only when a settings acknowledgement has been received.
  get localSettings() {
    const settings = this[kLocalSettings];
    if (settings !== undefined)
      return settings;
    if (this.destroyed || this.connecting)
      return {};
    return this[kLocalSettings] = getSettings(this[kHandle], false); // Local
  // The settings currently in effect for the remote peer.
  get remoteSettings() {
    const settings = this[kRemoteSettings];
    if (settings !== undefined)
      return settings;
    if (this.destroyed || this.connecting)
      return {};
    return this[kRemoteSettings] = getSettings(this[kHandle], true); // Remote
  // Submits a SETTINGS frame to be sent to the remote peer.
  settings(settings, callback) {
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_SESSION();
    assertIsObject(settings, 'settings');
    validateSettings(settings);
    if (callback && typeof callback !== 'function')
      throw new ERR_INVALID_CALLBACK(callback);
    debug(`Http2Session ${sessionName(this[kType])}: sending settings`);
    this[kState].pendingAck++;
    const settingsFn = submitSettings.bind(this, { ...settings }, callback);
    if (this.connecting) {
      this.once('connect', settingsFn);
      return;
    }
    settingsFn();
  // Sumits a GOAWAY frame to be sent to the remote peer. Note that this
  // is only a notification, and does not affect the usable state of the
  // session with the notable exception that new incoming streams will
  // be rejected automatically.
  goaway(code = NGHTTP2_NO_ERROR, lastStreamID = 0, opaqueData) {
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_SESSION();
    if (opaqueData !== undefined && !isArrayBufferView(opaqueData)) {
      throw new ERR_INVALID_ARG_TYPE('opaqueData',
                                     ['Buffer', 'TypedArray', 'DataView'],
                                     opaqueData);
    }
    validateNumber(code, 'code');
    validateNumber(lastStreamID, 'lastStreamID');
    const goawayFn = submitGoaway.bind(this, code, lastStreamID, opaqueData);
    if (this.connecting) {
      this.once('connect', goawayFn);
      return;
    }
    goawayFn();
  // Destroy the Http2Session, making it no longer usable and cancelling
  // any pending activity.
  destroy(error = NGHTTP2_NO_ERROR, code) {
    if (this.destroyed)
      return;
    debug(`Http2Session ${sessionName(this[kType])}: destroying`);
    if (typeof error === 'number') {
      code = error;
      error =
        code !== NGHTTP2_NO_ERROR ?
          new ERR_HTTP2_SESSION_ERROR(code) : undefined;
    }
    if (code === undefined && error != null)
      code = NGHTTP2_INTERNAL_ERROR;
    const state = this[kState];
    state.flags |= SESSION_FLAGS_DESTROYED;
    state.destroyCode = code;
    // Clear timeout and remove timeout listeners
    this.setTimeout(0);
    this.removeAllListeners('timeout');
    // Destroy any pending and open streams
    const cancel = new ERR_HTTP2_STREAM_CANCEL(error);
    state.pendingStreams.forEach((stream) => stream.destroy(cancel));
    state.streams.forEach((stream) => stream.destroy(error));
    // Disassociate from the socket and server
    const socket = this[kSocket];
    const handle = this[kHandle];
    // Destroy the handle if it exists at this point
    if (handle !== undefined)
      handle.destroy(code, socket.destroyed);
    // If the socket is alive, use setImmediate to destroy the session on the
    // next iteration of the event loop in order to give data time to transmit.
    // Otherwise, destroy immediately.
    if (!socket.destroyed)
      setImmediate(finishSessionDestroy, this, error);
    else
      finishSessionDestroy(this, error);
  // Closing the session will:
  // 1. Send a goaway frame
  // 2. Mark the session as closed
  // 3. Prevent new inbound or outbound streams from being opened
  // 4. Optionally register a 'close' event handler
  // 5. Will cause the session to automatically destroy after the
  //    last currently open Http2Stream closes.
  //
  // Close always assumes a good, non-error shutdown (NGHTTP_NO_ERROR)
  //
  // If the session has not connected yet, the closed flag will still be
  // set but the goaway will not be sent until after the connect event
  // is emitted.
  close(callback) {
    if (this.closed || this.destroyed)
      return;
    debug(`Http2Session ${sessionName(this[kType])}: marking session closed`);
    this[kState].flags |= SESSION_FLAGS_CLOSED;
    if (typeof callback === 'function')
      this.once('close', callback);
    this.goaway();
    this[kMaybeDestroy]();
  // Destroy the session if:
  // * error is not undefined/null
  // * session is closed and there are no more pending or open streams
  [kMaybeDestroy](error) {
    if (error == null) {
      const state = this[kState];
      // Do not destroy if we're not closed and there are pending/open streams
      if (!this.closed ||
          state.streams.size > 0 ||
          state.pendingStreams.size > 0) {
        return;
      }
    }
    this.destroy(error);
  _onTimeout() {
    // If the session is destroyed, this should never actually be invoked,
    // but just in case...
    if (this.destroyed)
      return;
    // This checks whether a write is currently in progress and also whether
    // that write is actually sending data across the write. The kHandle
    // stored `chunksSentSinceLastWrite` is only updated when a timeout event
    // happens, meaning that if a write is ongoing it should never equal the
    // newly fetched, updated value.
    if (this[kState].writeQueueSize > 0) {
      const handle = this[kHandle];
      const chunksSentSinceLastWrite = handle !== undefined ?
        handle.chunksSentSinceLastWrite : null;
      if (chunksSentSinceLastWrite !== null &&
          chunksSentSinceLastWrite !== handle.updateChunksSent()) {
        this[kUpdateTimer]();
        return;
      }
    }
    this.emit('timeout');
  ref() {
    if (this[kSocket]) {
      this[kSocket].ref();
    }
  unref() {
    if (this[kSocket]) {
      this[kSocket].unref();
    }
// ServerHttp2Session instances should never have to wait for the socket
// to connect as they are always created after the socket has already been
// established.
class ServerHttp2Session extends Http2Session {
  constructor(options, socket, server) {
    super(NGHTTP2_SESSION_SERVER, options, socket);
    this[kServer] = server;
  get server() {
    return this[kServer];
  // Submits an altsvc frame to be sent to the client. `stream` is a
  // numeric Stream ID. origin is a URL string that will be used to get
  // the origin. alt is a string containing the altsvc details. No fancy
  // API is provided for that.
  altsvc(alt, originOrStream) {
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_SESSION();
    let stream = 0;
    let origin;
    if (typeof originOrStream === 'string') {
      origin = (new URL(originOrStream)).origin;
      if (origin === 'null')
        throw new ERR_HTTP2_ALTSVC_INVALID_ORIGIN();
    } else if (typeof originOrStream === 'number') {
      if (originOrStream >>> 0 !== originOrStream || originOrStream === 0) {
        throw new ERR_OUT_OF_RANGE('originOrStream',
                                   `> 0 && < ${2 ** 32}`, originOrStream);
      }
      stream = originOrStream;
    } else if (originOrStream !== undefined) {
      // Allow origin to be passed a URL or object with origin property
      if (originOrStream !== null && typeof originOrStream === 'object')
        origin = originOrStream.origin;
      // Note: if originOrStream is an object with an origin property other
      // than a URL, then it is possible that origin will be malformed.
      // We do not verify that here. Users who go that route need to
      // ensure they are doing the right thing or the payload data will
      // be invalid.
      if (typeof origin !== 'string') {
        throw new ERR_INVALID_ARG_TYPE('originOrStream',
                                       ['string', 'number', 'URL', 'object'],
                                       originOrStream);
      } else if (origin === 'null' || origin.length === 0) {
        throw new ERR_HTTP2_ALTSVC_INVALID_ORIGIN();
      }
    }
    validateString(alt, 'alt');
    if (!kQuotedString.test(alt))
      throw new ERR_INVALID_CHAR('alt');
    // Max length permitted for ALTSVC
    if ((alt.length + (origin !== undefined ? origin.length : 0)) > 16382)
      throw new ERR_HTTP2_ALTSVC_LENGTH();
    this[kHandle].altsvc(stream, origin || '', alt);
  // Submits an origin frame to be sent.
  origin(...origins) {
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_SESSION();
    if (origins.length === 0)
      return;
    let arr = '';
    let len = 0;
    const count = origins.length;
    for (var i = 0; i < count; i++) {
      let origin = origins[i];
      if (typeof origin === 'string') {
        origin = (new URL(origin)).origin;
      } else if (origin != null && typeof origin === 'object') {
        origin = origin.origin;
      }
      validateString(origin, 'origin');
      if (origin === 'null')
        throw new ERR_HTTP2_INVALID_ORIGIN();
      arr += `${origin}\0`;
      len += origin.length;
    }
    if (len > 16382)
      throw new ERR_HTTP2_ORIGIN_LENGTH();
    this[kHandle].origin(arr, count);
// ClientHttp2Session instances have to wait for the socket to connect after
// they have been created. Various operations such as request() may be used,
// but the actual protocol communication will only occur after the socket
// has been connected.
class ClientHttp2Session extends Http2Session {
  constructor(options, socket) {
    super(NGHTTP2_SESSION_CLIENT, options, socket);
    this[kPendingRequestCalls] = null;
  // Submits a new HTTP2 request to the connected peer. Returns the
  // associated Http2Stream instance.
  request(headers, options) {
    debug(`Http2Session ${sessionName(this[kType])}: initiating request`);
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_SESSION();
    if (this.closed)
      throw new ERR_HTTP2_GOAWAY_SESSION();
    this[kUpdateTimer]();
    assertIsObject(headers, 'headers');
    assertIsObject(options, 'options');
    headers = Object.assign(Object.create(null), headers);
    options = { ...options };
    if (headers[HTTP2_HEADER_METHOD] === undefined)
      headers[HTTP2_HEADER_METHOD] = HTTP2_METHOD_GET;
    const connect = headers[HTTP2_HEADER_METHOD] === HTTP2_METHOD_CONNECT;
    if (!connect || headers[HTTP2_HEADER_PROTOCOL] !== undefined) {
      if (headers[HTTP2_HEADER_AUTHORITY] === undefined)
        headers[HTTP2_HEADER_AUTHORITY] = this[kAuthority];
      if (headers[HTTP2_HEADER_SCHEME] === undefined)
        headers[HTTP2_HEADER_SCHEME] = this[kProtocol].slice(0, -1);
      if (headers[HTTP2_HEADER_PATH] === undefined)
        headers[HTTP2_HEADER_PATH] = '/';
    } else {
      if (headers[HTTP2_HEADER_AUTHORITY] === undefined)
        throw new ERR_HTTP2_CONNECT_AUTHORITY();
      if (headers[HTTP2_HEADER_SCHEME] !== undefined)
        throw new ERR_HTTP2_CONNECT_SCHEME();
      if (headers[HTTP2_HEADER_PATH] !== undefined)
        throw new ERR_HTTP2_CONNECT_PATH();
    }
    setAndValidatePriorityOptions(options);
    if (options.endStream === undefined) {
      // For some methods, we know that a payload is meaningless, so end the
      // stream by default if the user has not specifically indicated a
      // preference.
      options.endStream = isPayloadMeaningless(headers[HTTP2_HEADER_METHOD]);
    } else if (typeof options.endStream !== 'boolean') {
      throw new ERR_INVALID_OPT_VALUE('endStream', options.endStream);
    }
    const headersList = mapToHeaders(headers);
    const stream = new ClientHttp2Stream(this, undefined, undefined, {});
    stream[kSentHeaders] = headers;
    stream[kOrigin] = `${headers[HTTP2_HEADER_SCHEME]}://` +
                      `${headers[HTTP2_HEADER_AUTHORITY]}`;
    // Close the writable side of the stream if options.endStream is set.
    if (options.endStream)
      stream.end();
    if (options.waitForTrailers)
      stream[kState].flags |= STREAM_FLAGS_HAS_TRAILERS;
    const onConnect = requestOnConnect.bind(stream, headersList, options);
    if (this.connecting) {
      if (this[kPendingRequestCalls] !== null) {
        this[kPendingRequestCalls].push(onConnect);
      } else {
        this[kPendingRequestCalls] = [onConnect];
        this.once('connect', () => {
          this[kPendingRequestCalls].forEach((f) => f());
          this[kPendingRequestCalls] = null;
        });
      }
    } else {
      onConnect();
    }
    return stream;
function trackWriteState(stream, bytes) {
  const session = stream[kSession];
  stream[kState].writeQueueSize += bytes;
  session[kState].writeQueueSize += bytes;
  session[kHandle].chunksSentSinceLastWrite = 0;
function streamOnResume() {
  if (!this.destroyed)
    this[kHandle].readStart();
function streamOnPause() {
  if (!this.destroyed && !this.pending)
    this[kHandle].readStop();
function afterShutdown(status) {
  // Currently this status value is unused
  this.callback();
  const stream = this.handle[kOwner];
  if (stream)
    stream[kMaybeDestroy]();
function finishSendTrailers(stream, headersList) {
  // The stream might be destroyed and in that case
  // there is nothing to do.
  // This can happen because finishSendTrailers is
  // scheduled via setImmediate.
  if (stream.destroyed) {
    return;
  stream[kState].flags &= ~STREAM_FLAGS_HAS_TRAILERS;
  const ret = stream[kHandle].trailers(headersList);
  if (ret < 0)
    stream.destroy(new NghttpError(ret));
  else
    stream[kMaybeDestroy]();
const kNoRstStream = 0;
const kSubmitRstStream = 1;
const kForceRstStream = 2;
function closeStream(stream, code, rstStreamStatus = kSubmitRstStream) {
  const state = stream[kState];
  state.flags |= STREAM_FLAGS_CLOSED;
  state.rstCode = code;
  // Clear timeout and remove timeout listeners
  stream.setTimeout(0);
  stream.removeAllListeners('timeout');
  const { ending } = stream._writableState;
  if (!ending) {
    // If the writable side of the Http2Stream is still open, emit the
    // 'aborted' event and set the aborted flag.
    if (!stream.aborted) {
      state.flags |= STREAM_FLAGS_ABORTED;
      stream.emit('aborted');
    }
    // Close the writable side.
    stream.end();
  if (rstStreamStatus !== kNoRstStream) {
    const finishFn = finishCloseStream.bind(stream, code);
    if (!ending || stream.writableFinished || code !== NGHTTP2_NO_ERROR ||
        rstStreamStatus === kForceRstStream)
      finishFn();
    else
      stream.once('finish', finishFn);
function finishCloseStream(code) {
  const rstStreamFn = submitRstStream.bind(this, code);
  // If the handle has not yet been assigned, queue up the request to
  // ensure that the RST_STREAM frame is sent after the stream ID has
  // been determined.
  if (this.pending) {
    this.push(null);
    this.once('ready', rstStreamFn);
    return;
  rstStreamFn();
// An Http2Stream is a Duplex stream that is backed by a
// node::http2::Http2Stream handle implementing StreamBase.
class Http2Stream extends Duplex {
  constructor(session, options) {
    options.allowHalfOpen = true;
    options.decodeStrings = false;
    super(options);
    this[async_id_symbol] = -1;
    // Corking the stream automatically allows writes to happen
    // but ensures that those are buffered until the handle has
    // been assigned.
    this.cork();
    this[kSession] = session;
    session[kState].pendingStreams.add(this);
    // Allow our logic for determining whether any reads have happened to
    // work in all situations. This is similar to what we do in _http_incoming.
    this._readableState.readingMore = true;
    this[kTimeout] = null;
    this[kState] = {
      didRead: false,
      flags: STREAM_FLAGS_PENDING,
      rstCode: NGHTTP2_NO_ERROR,
      writeQueueSize: 0,
      trailersReady: false,
      endAfterHeaders: false
    };
    // Fields used by the compat API to avoid megamorphisms.
    this[kRequest] = null;
    this[kProxySocket] = null;
    this.on('pause', streamOnPause);
  [kUpdateTimer]() {
    if (this.destroyed)
      return;
    if (this[kTimeout])
      this[kTimeout].refresh();
    if (this[kSession])
      this[kSession][kUpdateTimer]();
  [kInit](id, handle) {
    const state = this[kState];
    state.flags |= STREAM_FLAGS_READY;
    const session = this[kSession];
    session[kState].pendingStreams.delete(this);
    session[kState].streams.set(id, this);
    this[kID] = id;
    this[async_id_symbol] = handle.getAsyncId();
    handle[kOwner] = this;
    this[kHandle] = handle;
    handle.onread = onStreamRead;
    this.uncork();
    this.emit('ready');
  [kInspect](depth, opts) {
    if (typeof depth === 'number' && depth < 0)
      return this;
    const obj = {
      id: this[kID] || '<pending>',
      closed: this.closed,
      destroyed: this.destroyed,
      state: this.state,
      readableState: this._readableState,
      writableState: this._writableState
    };
    return `Http2Stream ${format(obj)}`;
  get bufferSize() {
    // `bufferSize` properties of `net.Socket` are `undefined` when
    // their `_handle` are falsy. Here we avoid the behavior.
    return this[kState].writeQueueSize + this.writableLength;
  get endAfterHeaders() {
    return this[kState].endAfterHeaders;
  get sentHeaders() {
    return this[kSentHeaders];
  get sentTrailers() {
    return this[kSentTrailers];
  get sentInfoHeaders() {
    return this[kInfoHeaders];
  get pending() {
    return this[kID] === undefined;
  // The id of the Http2Stream, will be undefined if the socket is not
  // yet connected.
  get id() {
    return this[kID];
  // The Http2Session that owns this Http2Stream.
  get session() {
    return this[kSession];
  _onTimeout() {
    if (this.destroyed)
      return;
    // This checks whether a write is currently in progress and also whether
    // that write is actually sending data across the write. The kHandle
    // stored `chunksSentSinceLastWrite` is only updated when a timeout event
    // happens, meaning that if a write is ongoing it should never equal the
    // newly fetched, updated value.
    if (this[kState].writeQueueSize > 0) {
      const handle = this[kSession][kHandle];
      const chunksSentSinceLastWrite = handle !== undefined ?
        handle.chunksSentSinceLastWrite : null;
      if (chunksSentSinceLastWrite !== null &&
          chunksSentSinceLastWrite !== handle.updateChunksSent()) {
        this[kUpdateTimer]();
        return;
      }
    }
    this.emit('timeout');
  // True if the HEADERS frame has been sent
  get headersSent() {
    return !!(this[kState].flags & STREAM_FLAGS_HEADERS_SENT);
  // True if the Http2Stream was aborted abnormally.
  get aborted() {
    return !!(this[kState].flags & STREAM_FLAGS_ABORTED);
  // True if dealing with a HEAD request
  get headRequest() {
    return !!(this[kState].flags & STREAM_FLAGS_HEAD_REQUEST);
  // The error code reported when this Http2Stream was closed.
  get rstCode() {
    return this[kState].rstCode;
  // State information for the Http2Stream
  get state() {
    const id = this[kID];
    if (this.destroyed || id === undefined)
      return {};
    return getStreamState(this[kHandle], id);
  [kProceed]() {
    assert.fail('Implementors MUST implement this. Please report this as a ' +
                'bug in Node.js');
  [kAfterAsyncWrite]({ bytes }) {
    this[kState].writeQueueSize -= bytes;
    if (this.session !== undefined)
      this.session[kState].writeQueueSize -= bytes;
  [kWriteGeneric](writev, data, encoding, cb) {
    // When the Http2Stream is first created, it is corked until the
    // handle and the stream ID is assigned. However, if the user calls
    // uncork() before that happens, the Duplex will attempt to pass
    // writes through. Those need to be queued up here.
    if (this.pending) {
      this.once(
        'ready',
        this[kWriteGeneric].bind(this, writev, data, encoding, cb)
      );
      return;
    }
    // If the stream has been destroyed, there's nothing else we can do
    // because the handle has been destroyed. This should only be an
    // issue if a write occurs before the 'ready' event in the case where
    // the duplex is uncorked before the stream is ready to go. In that
    // case, drop the data on the floor. An error should have already been
    // emitted.
    if (this.destroyed)
      return;
    this[kUpdateTimer]();
    if (!this.headersSent)
      this[kProceed]();
    let req;
    if (writev)
      req = writevGeneric(this, data, cb);
    else
      req = writeGeneric(this, data, encoding, cb);
    trackWriteState(this, req.bytes);
  _write(data, encoding, cb) {
    this[kWriteGeneric](false, data, encoding, cb);
  _writev(data, cb) {
    this[kWriteGeneric](true, data, '', cb);
  _final(cb) {
    const handle = this[kHandle];
    if (this.pending) {
      this.once('ready', () => this._final(cb));
    } else if (handle !== undefined) {
      debug(`Http2Stream ${this[kID]} [Http2Session ` +
            `${sessionName(this[kSession][kType])}]: _final shutting down`);
      const req = new ShutdownWrap();
      req.oncomplete = afterShutdown;
      req.callback = cb;
      req.handle = handle;
      const err = handle.shutdown(req);
      if (err === 1)  // synchronous finish
        return afterShutdown.call(req, 0);
    } else {
      cb();
    }
  _read(nread) {
    if (this.destroyed) {
      this.push(null);
      return;
    }
    if (!this[kState].didRead) {
      this._readableState.readingMore = false;
      this[kState].didRead = true;
    }
    if (!this.pending) {
      streamOnResume.call(this);
    } else {
      this.once('ready', streamOnResume);
    }
  priority(options) {
    if (this.destroyed)
      throw new ERR_HTTP2_INVALID_STREAM();
    assertIsObject(options, 'options');
    options = { ...options };
    setAndValidatePriorityOptions(options);
    const priorityFn = submitPriority.bind(this, options);
    // If the handle has not yet been assigned, queue up the priority
    // frame to be sent as soon as the ready event is emitted.
    if (this.pending) {
      this.once('ready', priorityFn);
      return;
    }
    priorityFn();
  sendTrailers(headers) {
    if (this.destroyed || this.closed)
      throw new ERR_HTTP2_INVALID_STREAM();
    if (this[kSentTrailers])
      throw new ERR_HTTP2_TRAILERS_ALREADY_SENT();
    if (!this[kState].trailersReady)
      throw new ERR_HTTP2_TRAILERS_NOT_READY();
    assertIsObject(headers, 'headers');
    headers = Object.assign(Object.create(null), headers);
    const session = this[kSession];
    debug(`Http2Stream ${this[kID]} [Http2Session ` +
    `${sessionName(session[kType])}]: sending trailers`);
    this[kUpdateTimer]();
    const headersList = mapToHeaders(headers, assertValidPseudoHeaderTrailer);
    this[kSentTrailers] = headers;
    // Send the trailers in setImmediate so we don't do it on nghttp2 stack.
    setImmediate(finishSendTrailers, this, headersList);
  get closed() {
    return !!(this[kState].flags & STREAM_FLAGS_CLOSED);
  // Close initiates closing the Http2Stream instance by sending an RST_STREAM
  // frame to the connected peer. The readable and writable sides of the
  // Http2Stream duplex are closed and the timeout timer is cleared. If
  // a callback is passed, it is registered to listen for the 'close' event.
  //
  // If the handle and stream ID have not been assigned yet, the close
  // will be queued up to wait for the ready event. As soon as the stream ID
  // is determined, the close will proceed.
  //
  // Submitting the RST_STREAM frame to the underlying handle will cause
  // the Http2Stream to be closed and ultimately destroyed. After calling
  // close, it is still possible to queue up PRIORITY and RST_STREAM frames,
  // but no DATA and HEADERS frames may be sent.
  close(code = NGHTTP2_NO_ERROR, callback) {
    validateNumber(code, 'code');
    if (code < 0 || code > kMaxInt)
      throw new ERR_OUT_OF_RANGE('code', `>= 0 && <= ${kMaxInt}`, code);
    if (callback !== undefined && typeof callback !== 'function')
      throw new ERR_INVALID_CALLBACK(callback);
    if (this.closed)
      return;
    if (callback !== undefined)
      this.once('close', callback);
    closeStream(this, code);
  // Called by this.destroy().
  // * Will submit an RST stream to shutdown the stream if necessary.
  //   This will cause the internal resources to be released.
  // * Then cleans up the resources on the js side
  _destroy(err, callback) {
    const session = this[kSession];
    const handle = this[kHandle];
    const id = this[kID];
    debug(`Http2Stream ${this[kID] || '<pending>'} [Http2Session ` +
          `${sessionName(session[kType])}]: destroying stream`);
    const state = this[kState];
    const sessionCode = session[kState].goawayCode ||
                        session[kState].destroyCode;
    const code = err != null ?
      sessionCode || NGHTTP2_INTERNAL_ERROR :
      state.rstCode || sessionCode;
    const hasHandle = handle !== undefined;
    if (!this.closed)
      closeStream(this, code, hasHandle ? kForceRstStream : kNoRstStream);
    this.push(null);
    if (hasHandle) {
      handle.destroy();
      session[kState].streams.delete(id);
    } else {
      session[kState].pendingStreams.delete(this);
    }
    // Adjust the write queue size for accounting
    session[kState].writeQueueSize -= state.writeQueueSize;
    state.writeQueueSize = 0;
    // RST code 8 not emitted as an error as its used by clients to signify
    // abort and is already covered by aborted event, also allows more
    // seamless compatibility with http1
    if (err == null && code !== NGHTTP2_NO_ERROR && code !== NGHTTP2_CANCEL)
      err = new ERR_HTTP2_STREAM_ERROR(nameForErrorCode[code] || code);
    this[kSession] = undefined;
    this[kHandle] = undefined;
    // This notifies the session that this stream has been destroyed and
    // gives the session the opportunity to clean itself up. The session
    // will destroy if it has been closed and there are no other open or
    // pending streams.
    session[kMaybeDestroy]();
    callback(err);
  // The Http2Stream can be destroyed if it has closed and if the readable
  // side has received the final chunk.
  [kMaybeDestroy](code = NGHTTP2_NO_ERROR) {
    if (code !== NGHTTP2_NO_ERROR) {
      this.destroy();
      return;
    }
    if (this.writableFinished) {
      if (!this.readable && this.closed) {
        this.destroy();
        return;
      }
      // We've submitted a response from our server session, have not attempted
      // to process any incoming data, and have no trailers. This means we can
      // attempt to gracefully close the session.
      const state = this[kState];
      if (this.headersSent &&
          this[kSession] &&
          this[kSession][kType] === NGHTTP2_SESSION_SERVER &&
          !(state.flags & STREAM_FLAGS_HAS_TRAILERS) &&
          !state.didRead &&
          this.readableFlowing === null) {
        // By using setImmediate we allow pushStreams to make it through
        // before the stream is officially closed. This prevents a bug
        // in most browsers where those pushStreams would be rejected.
        setImmediate(this.close.bind(this));
      }
    }
function processHeaders(oldHeaders) {
  assertIsObject(oldHeaders, 'headers');
  const headers = Object.create(null);
  if (oldHeaders !== null && oldHeaders !== undefined) {
    const hop = hasOwnProperty.bind(oldHeaders);
    // This loop is here for performance reason. Do not change.
    for (var key in oldHeaders) {
      if (hop(key)) {
        headers[key] = oldHeaders[key];
      }
    }
  const statusCode =
    headers[HTTP2_HEADER_STATUS] =
      headers[HTTP2_HEADER_STATUS] | 0 || HTTP_STATUS_OK;
  headers[HTTP2_HEADER_DATE] = utcDate();
  // This is intentionally stricter than the HTTP/1 implementation, which
  // allows values between 100 and 999 (inclusive) in order to allow for
  // backwards compatibility with non-spec compliant code. With HTTP/2,
  // we have the opportunity to start fresh with stricter spec compliance.
  // This will have an impact on the compatibility layer for anyone using
  // non-standard, non-compliant status codes.
  if (statusCode < 200 || statusCode > 599)
    throw new ERR_HTTP2_STATUS_INVALID(headers[HTTP2_HEADER_STATUS]);
  return headers;
function onFileCloseError(stream, err) {
  stream.emit(err);
function onFileUnpipe() {
  const stream = this.sink[kOwner];
  if (stream.ownsFd)
    this.source.close().catch(onFileCloseError.bind(stream));
  else
    this.source.releaseFD();
// This is only called once the pipe has returned back control, so
// it only has to handle errors and End-of-File.
function onPipedFileHandleRead() {
  const err = streamBaseState[kReadBytesOrError];
  if (err < 0 && err !== UV_EOF) {
    this.stream.close(NGHTTP2_INTERNAL_ERROR);
function processRespondWithFD(self, fd, headers, offset = 0, length = -1,
                              streamOptions = 0) {
  const state = self[kState];
  state.flags |= STREAM_FLAGS_HEADERS_SENT;
  let headersList;
  try {
    headersList = mapToHeaders(headers, assertValidPseudoHeaderResponse);
  } catch (err) {
    self.destroy(err);
    return;
  self[kSentHeaders] = headers;
  // Close the writable side of the stream, but only as far as the writable
  // stream implementation is concerned.
  self._final = null;
  self.end();
  const ret = self[kHandle].respond(headersList, streamOptions);
  if (ret < 0) {
    self.destroy(new NghttpError(ret));
    return;
  defaultTriggerAsyncIdScope(self[async_id_symbol], startFilePipe,
                             self, fd, offset, length);
function startFilePipe(self, fd, offset, length) {
  const handle = new FileHandle(fd, offset, length);
  handle.onread = onPipedFileHandleRead;
  handle.stream = self;
  const pipe = new StreamPipe(handle, self[kHandle]);
  pipe.onunpipe = onFileUnpipe;
  pipe.start();
  // Exact length of the file doesn't matter here, since the
  // stream is closing anyway - just use 1 to signify that
  // a write does exist
  trackWriteState(self, 1);
function doSendFD(session, options, fd, headers, streamOptions, err, stat) {
  if (err) {
    this.destroy(err);
    return;
  // This can happen if the stream is destroyed or closed while we are waiting
  // for the file descriptor to be opened or the stat call to be completed.
  // In either case, we do not want to continue because the we are shutting
  // down and should not attempt to send any data.
  if (this.destroyed || this.closed) {
    this.destroy(new ERR_HTTP2_INVALID_STREAM());
    return;
  const statOptions = {
    offset: options.offset !== undefined ? options.offset : 0,
    length: options.length !== undefined ? options.length : -1
  };
  // options.statCheck is a user-provided function that can be used to
  // verify stat values, override or set headers, or even cancel the
  // response operation. If statCheck explicitly returns false, the
  // response is canceled. The user code may also send a separate type
  // of response so check again for the HEADERS_SENT flag
  if ((typeof options.statCheck === 'function' &&
       options.statCheck.call(this, stat, headers, statOptions) === false) ||
       (this[kState].flags & STREAM_FLAGS_HEADERS_SENT)) {
    return;
  processRespondWithFD(this, fd, headers,
                       statOptions.offset | 0,
                       statOptions.length | 0,
                       streamOptions);
function doSendFileFD(session, options, fd, headers, streamOptions, err, stat) {
  const onError = options.onError;
  if (err) {
    tryClose(fd);
    if (onError)
      onError(err);
    else
      this.destroy(err);
    return;
  if (!stat.isFile()) {
    const isDirectory = stat.isDirectory();
    if (options.offset !== undefined || options.offset > 0 ||
        options.length !== undefined || options.length >= 0 ||
        isDirectory) {
      const err = isDirectory ?
        new ERR_HTTP2_SEND_FILE() : new ERR_HTTP2_SEND_FILE_NOSEEK();
      tryClose(fd);
      if (onError)
        onError(err);
      else
        this.destroy(err);
      return;
    }
    options.offset = -1;
    options.length = -1;
  if (this.destroyed || this.closed) {
    tryClose(fd);
    this.destroy(new ERR_HTTP2_INVALID_STREAM());
    return;
  const statOptions = {
    offset: options.offset !== undefined ? options.offset : 0,
    length: options.length !== undefined ? options.length : -1
  };
  // options.statCheck is a user-provided function that can be used to
  // verify stat values, override or set headers, or even cancel the
  // response operation. If statCheck explicitly returns false, the
  // response is canceled. The user code may also send a separate type
  // of response so check again for the HEADERS_SENT flag
  if ((typeof options.statCheck === 'function' &&
       options.statCheck.call(this, stat, headers) === false) ||
       (this[kState].flags & STREAM_FLAGS_HEADERS_SENT)) {
    tryClose(fd);
    return;
  if (stat.isFile()) {
    statOptions.length =
      statOptions.length < 0 ? stat.size - (+statOptions.offset) :
        Math.min(stat.size - (+statOptions.offset),
                 statOptions.length);
    headers[HTTP2_HEADER_CONTENT_LENGTH] = statOptions.length;
  processRespondWithFD(this, fd, headers,
                       options.offset | 0,
                       statOptions.length | 0,
                       streamOptions);
function afterOpen(session, options, headers, streamOptions, err, fd) {
  const state = this[kState];
  const onError = options.onError;
  if (err) {
    if (onError)
      onError(err);
    else
      this.destroy(err);
    return;
  if (this.destroyed || this.closed) {
    tryClose(fd);
    return;
  state.fd = fd;
  fs.fstat(fd,
           doSendFileFD.bind(this, session, options, fd,
                             headers, streamOptions));
class ServerHttp2Stream extends Http2Stream {
  constructor(session, handle, id, options, headers) {
    super(session, options);
    handle.owner = this;
    this[kInit](id, handle);
    this[kProtocol] = headers[HTTP2_HEADER_SCHEME];
    this[kAuthority] = headers[HTTP2_HEADER_AUTHORITY];
  // True if the remote peer accepts push streams
  get pushAllowed() {
    return !this.destroyed &&
           !this.closed &&
           !this.session.closed &&
           !this.session.destroyed &&
           this[kSession].remoteSettings.enablePush;
  // Create a push stream, call the given callback with the created
  // Http2Stream for the push stream.
  pushStream(headers, options, callback) {
    if (!this.pushAllowed)
      throw new ERR_HTTP2_PUSH_DISABLED();
    if (this[kID] % 2 === 0)
      throw new ERR_HTTP2_NESTED_PUSH();
    const session = this[kSession];
    debug(`Http2Stream ${this[kID]} [Http2Session ` +
          `${sessionName(session[kType])}]: initiating push stream`);
    this[kUpdateTimer]();
    if (typeof options === 'function') {
      callback = options;
      options = undefined;
    }
    if (typeof callback !== 'function')
      throw new ERR_INVALID_CALLBACK(callback);
    assertIsObject(options, 'options');
    options = { ...options };
    options.endStream = !!options.endStream;
    assertIsObject(headers, 'headers');
    headers = Object.assign(Object.create(null), headers);
    if (headers[HTTP2_HEADER_METHOD] === undefined)
      headers[HTTP2_HEADER_METHOD] = HTTP2_METHOD_GET;
    if (headers[HTTP2_HEADER_AUTHORITY] === undefined)
      headers[HTTP2_HEADER_AUTHORITY] = this[kAuthority];
    if (headers[HTTP2_HEADER_SCHEME] === undefined)
      headers[HTTP2_HEADER_SCHEME] = this[kProtocol];
    if (headers[HTTP2_HEADER_PATH] === undefined)
      headers[HTTP2_HEADER_PATH] = '/';
    let headRequest = false;
    if (headers[HTTP2_HEADER_METHOD] === HTTP2_METHOD_HEAD)
      headRequest = options.endStream = true;
    options.readable = false;
    const headersList = mapToHeaders(headers);
    const streamOptions = options.endStream ? STREAM_OPTION_EMPTY_PAYLOAD : 0;
    const ret = this[kHandle].pushPromise(headersList, streamOptions);
    let err;
    if (typeof ret === 'number') {
      switch (ret) {
        case NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE:
          err = new ERR_HTTP2_OUT_OF_STREAMS();
          break;
        case NGHTTP2_ERR_STREAM_CLOSED:
          err = new ERR_HTTP2_INVALID_STREAM();
          break;
        default:
          err = new NghttpError(ret);
          break;
      }
      process.nextTick(callback, err);
      return;
    }
    const id = ret.id();
    const stream = new ServerHttp2Stream(session, ret, id, options, headers);
    stream[kSentHeaders] = headers;
    if (options.endStream)
      stream.end();
    if (headRequest)
      stream[kState].flags |= STREAM_FLAGS_HEAD_REQUEST;
    process.nextTick(callback, null, stream, headers, 0);
  // Initiate a response on this Http2Stream
  respond(headers, options) {
    if (this.destroyed || this.closed)
      throw new ERR_HTTP2_INVALID_STREAM();
    if (this.headersSent)
      throw new ERR_HTTP2_HEADERS_SENT();
    const state = this[kState];
    assertIsObject(options, 'options');
    options = { ...options };
    const session = this[kSession];
    debug(`Http2Stream ${this[kID]} [Http2Session ` +
          `${sessionName(session[kType])}]: initiating response`);
    this[kUpdateTimer]();
    options.endStream = !!options.endStream;
    let streamOptions = 0;
    if (options.endStream)
      streamOptions |= STREAM_OPTION_EMPTY_PAYLOAD;
    if (options.waitForTrailers) {
      streamOptions |= STREAM_OPTION_GET_TRAILERS;
      state.flags |= STREAM_FLAGS_HAS_TRAILERS;
    }
    headers = processHeaders(headers);
    const headersList = mapToHeaders(headers, assertValidPseudoHeaderResponse);
    this[kSentHeaders] = headers;
    state.flags |= STREAM_FLAGS_HEADERS_SENT;
    // Close the writable side if the endStream option is set or status
    // is one of known codes with no payload, or it's a head request
    const statusCode = headers[HTTP2_HEADER_STATUS] | 0;
    if (!!options.endStream ||
        statusCode === HTTP_STATUS_NO_CONTENT ||
        statusCode === HTTP_STATUS_RESET_CONTENT ||
        statusCode === HTTP_STATUS_NOT_MODIFIED ||
        this.headRequest === true) {
      options.endStream = true;
      this.end();
    }
    const ret = this[kHandle].respond(headersList, streamOptions);
    if (ret < 0)
      this.destroy(new NghttpError(ret));
  // Initiate a response using an open FD. Note that there are fewer
  // protections with this approach. For one, the fd is not validated by
  // default. In respondWithFile, the file is checked to make sure it is a
  // regular file, here the fd is passed directly. If the underlying
  // mechanism is not able to read from the fd, then the stream will be
  // reset with an error code.
  respondWithFD(fd, headers, options) {
    if (this.destroyed || this.closed)
      throw new ERR_HTTP2_INVALID_STREAM();
    if (this.headersSent)
      throw new ERR_HTTP2_HEADERS_SENT();
    const session = this[kSession];
    assertIsObject(options, 'options');
    options = { ...options };
    if (options.offset !== undefined && typeof options.offset !== 'number')
      throw new ERR_INVALID_OPT_VALUE('offset', options.offset);
    if (options.length !== undefined && typeof options.length !== 'number')
      throw new ERR_INVALID_OPT_VALUE('length', options.length);
    if (options.statCheck !== undefined &&
        typeof options.statCheck !== 'function') {
      throw new ERR_INVALID_OPT_VALUE('statCheck', options.statCheck);
    }
    let streamOptions = 0;
    if (options.waitForTrailers) {
      streamOptions |= STREAM_OPTION_GET_TRAILERS;
      this[kState].flags |= STREAM_FLAGS_HAS_TRAILERS;
    }
    validateNumber(fd, 'fd');
    debug(`Http2Stream ${this[kID]} [Http2Session ` +
          `${sessionName(session[kType])}]: initiating response from fd`);
    this[kUpdateTimer]();
    this.ownsFd = false;
    headers = processHeaders(headers);
    const statusCode = headers[HTTP2_HEADER_STATUS] |= 0;
    // Payload/DATA frames are not permitted in these cases
    if (statusCode === HTTP_STATUS_NO_CONTENT ||
        statusCode === HTTP_STATUS_RESET_CONTENT ||
        statusCode === HTTP_STATUS_NOT_MODIFIED ||
        this.headRequest) {
      throw new ERR_HTTP2_PAYLOAD_FORBIDDEN(statusCode);
    }
    if (options.statCheck !== undefined) {
      fs.fstat(fd,
               doSendFD.bind(this, session, options, fd,
                             headers, streamOptions));
      return;
    }
    processRespondWithFD(this, fd, headers,
                         options.offset,
                         options.length,
                         streamOptions);
  // Initiate a file response on this Http2Stream. The path is passed to
  // fs.open() to acquire the fd with mode 'r', then the fd is passed to
  // fs.fstat(). Assuming fstat is successful, a check is made to ensure
  // that the file is a regular file, then options.statCheck is called,
  // giving the user an opportunity to verify the details and set additional
  // headers. If statCheck returns false, the operation is aborted and no
  // file details are sent.
  respondWithFile(path, headers, options) {
    if (this.destroyed || this.closed)
      throw new ERR_HTTP2_INVALID_STREAM();
    if (this.headersSent)
      throw new ERR_HTTP2_HEADERS_SENT();
    assertIsObject(options, 'options');
    options = { ...options };
    if (options.offset !== undefined && typeof options.offset !== 'number')
      throw new ERR_INVALID_OPT_VALUE('offset', options.offset);
    if (options.length !== undefined && typeof options.length !== 'number')
      throw new ERR_INVALID_OPT_VALUE('length', options.length);
    if (options.statCheck !== undefined &&
        typeof options.statCheck !== 'function') {
      throw new ERR_INVALID_OPT_VALUE('statCheck', options.statCheck);
    }
    let streamOptions = 0;
    if (options.waitForTrailers) {
      streamOptions |= STREAM_OPTION_GET_TRAILERS;
      this[kState].flags |= STREAM_FLAGS_HAS_TRAILERS;
    }
    const session = this[kSession];
    debug(`Http2Stream ${this[kID]} [Http2Session ` +
          `${sessionName(session[kType])}]: initiating response from file`);
    this[kUpdateTimer]();
    this.ownsFd = true;
    headers = processHeaders(headers);
    const statusCode = headers[HTTP2_HEADER_STATUS] |= 0;
    // Payload/DATA frames are not permitted in these cases
    if (statusCode === HTTP_STATUS_NO_CONTENT ||
        statusCode === HTTP_STATUS_RESET_CONTENT ||
        statusCode === HTTP_STATUS_NOT_MODIFIED ||
        this.headRequest) {
      throw new ERR_HTTP2_PAYLOAD_FORBIDDEN(statusCode);
    }
    fs.open(path, 'r',
            afterOpen.bind(this, session, options, headers, streamOptions));
  // Sends a block of informational headers. In theory, the HTTP/2 spec
  // allows sending a HEADER block at any time during a streams lifecycle,
  // but the HTTP request/response semantics defined in HTTP/2 places limits
  // such that HEADERS may only be sent *before* or *after* DATA frames.
  // If the block of headers being sent includes a status code, it MUST be
  // a 1xx informational code and it MUST be sent before the request/response
  // headers are sent, or an error will be thrown.
  additionalHeaders(headers) {
    if (this.destroyed || this.closed)
      throw new ERR_HTTP2_INVALID_STREAM();
    if (this.headersSent)
      throw new ERR_HTTP2_HEADERS_AFTER_RESPOND();
    assertIsObject(headers, 'headers');
    headers = Object.assign(Object.create(null), headers);
    const session = this[kSession];
    debug(`Http2Stream ${this[kID]} [Http2Session ` +
    `${sessionName(session[kType])}]: sending additional headers`);
    if (headers[HTTP2_HEADER_STATUS] != null) {
      const statusCode = headers[HTTP2_HEADER_STATUS] |= 0;
      if (statusCode === HTTP_STATUS_SWITCHING_PROTOCOLS)
        throw new ERR_HTTP2_STATUS_101();
      if (statusCode < 100 || statusCode >= 200) {
        throw new ERR_HTTP2_INVALID_INFO_STATUS(headers[HTTP2_HEADER_STATUS]);
      }
    }
    this[kUpdateTimer]();
    const headersList = mapToHeaders(headers, assertValidPseudoHeaderResponse);
    if (!this[kInfoHeaders])
      this[kInfoHeaders] = [headers];
    else
      this[kInfoHeaders].push(headers);
    const ret = this[kHandle].info(headersList);
    if (ret < 0)
      this.destroy(new NghttpError(ret));
ServerHttp2Stream.prototype[kProceed] = ServerHttp2Stream.prototype.respond;
class ClientHttp2Stream extends Http2Stream {
  constructor(session, handle, id, options) {
    super(session, options);
    this[kState].flags |= STREAM_FLAGS_HEADERS_SENT;
    if (id !== undefined)
      this[kInit](id, handle);
    this.on('headers', handleHeaderContinue);
function handleHeaderContinue(headers) {
  if (headers[HTTP2_HEADER_STATUS] === HTTP_STATUS_CONTINUE)
    this.emit('continue');
const setTimeout = {
  configurable: true,
  enumerable: true,
  writable: true,
  value: setStreamTimeout
Object.defineProperty(Http2Stream.prototype, 'setTimeout', setTimeout);
Object.defineProperty(Http2Session.prototype, 'setTimeout', setTimeout);
// When the socket emits an error, destroy the associated Http2Session and
// forward it the same error.
function socketOnError(error) {
  const session = this[kSession];
  if (session !== undefined) {
    // We can ignore ECONNRESET after GOAWAY was received as there's nothing
    // we can do and the other side is fully within its rights to do so.
    if (error.code === 'ECONNRESET' && session[kState].goawayCode !== null)
      return session.destroy();
    debug(`Http2Session ${sessionName(session[kType])}: socket error [` +
          `${error.message}]`);
    session.destroy(error);
// Handles the on('stream') event for a session and forwards
// it on to the server object.
function sessionOnStream(stream, headers, flags, rawHeaders) {
  if (this[kServer] !== undefined)
    this[kServer].emit('stream', stream, headers, flags, rawHeaders);
function sessionOnPriority(stream, parent, weight, exclusive) {
  if (this[kServer] !== undefined)
    this[kServer].emit('priority', stream, parent, weight, exclusive);
function sessionOnError(error) {
  if (this[kServer])
    this[kServer].emit('sessionError', error, this);
// When the session times out on the server, try emitting a timeout event.
// If no handler is registered, destroy the session.
function sessionOnTimeout() {
  // If destroyed or closed already, do nothing
  if (this.destroyed || this.closed)
    return;
  const server = this[kServer];
  if (!server.emit('timeout', this))
    this.destroy();  // No error code, just things down.
function connectionListener(socket) {
  debug('Http2Session server: received a connection');
  const options = this[kOptions] || {};
  if (socket.alpnProtocol === false || socket.alpnProtocol === 'http/1.1') {
    // Fallback to HTTP/1.1
    if (options.allowHTTP1 === true) {
      socket.server[kIncomingMessage] = options.Http1IncomingMessage;
      socket.server[kServerResponse] = options.Http1ServerResponse;
      return httpConnectionListener.call(this, socket);
    }
    // Let event handler deal with the socket
    debug(`Unknown protocol from ${socket.remoteAddress}:${socket.remotePort}`);
    if (!this.emit('unknownProtocol', socket)) {
      // We don't know what to do, so let's just tell the other side what's
      // going on in a format that they *might* understand.
      socket.end('HTTP/1.0 403 Forbidden\r\n' +
                 'Content-Type: text/plain\r\n\r\n' +
                 'Unknown ALPN Protocol, expected `h2` to be available.\n' +
                 'If this is a HTTP request: The server was not ' +
                 'configured with the `allowHTTP1` option or a ' +
                 'listener for the `unknownProtocol` event.\n');
    }
    return;
  socket.on('error', socketOnError);
  socket.on('close', socketOnClose);
  // Set up the Session
  const session = new ServerHttp2Session(options, socket, this);
  session.on('stream', sessionOnStream);
  session.on('priority', sessionOnPriority);
  session.on('error', sessionOnError);
  if (this.timeout)
    session.setTimeout(this.timeout, sessionOnTimeout);
  socket[kServer] = this;
  this.emit('session', session);
function initializeOptions(options) {
  assertIsObject(options, 'options');
  options = { ...options };
  assertIsObject(options.settings, 'options.settings');
  options.settings = { ...options.settings };
  // Used only with allowHTTP1
  options.Http1IncomingMessage = options.Http1IncomingMessage ||
    http.IncomingMessage;
  options.Http1ServerResponse = options.Http1ServerResponse ||
    http.ServerResponse;
  options.Http2ServerRequest = options.Http2ServerRequest ||
                                       Http2ServerRequest;
  options.Http2ServerResponse = options.Http2ServerResponse ||
                                        Http2ServerResponse;
  return options;
function initializeTLSOptions(options, servername) {
  options = initializeOptions(options);
  options.ALPNProtocols = ['h2'];
  if (options.allowHTTP1 === true)
    options.ALPNProtocols.push('http/1.1');
  if (servername !== undefined && options.servername === undefined)
    options.servername = servername;
  return options;
function onErrorSecureServerSession(err, socket) {
  if (!this.emit('clientError', err, socket))
    socket.destroy(err);
class Http2SecureServer extends TLSServer {
  constructor(options, requestListener) {
    options = initializeTLSOptions(options);
    super(options, connectionListener);
    this[kOptions] = options;
    this.timeout = kDefaultHttpServerTimeout;
    this.on('newListener', setupCompat);
    if (typeof requestListener === 'function')
      this.on('request', requestListener);
    this.on('tlsClientError', onErrorSecureServerSession);
  setTimeout(msecs, callback) {
    this.timeout = msecs;
    if (callback !== undefined) {
      if (typeof callback !== 'function')
        throw new ERR_INVALID_CALLBACK(callback);
      this.on('timeout', callback);
    }
    return this;
class Http2Server extends NETServer {
  constructor(options, requestListener) {
    options = initializeOptions(options);
    super(options, connectionListener);
    this[kOptions] = options;
    this.timeout = kDefaultHttpServerTimeout;
    this.on('newListener', setupCompat);
    if (typeof requestListener === 'function')
      this.on('request', requestListener);
  setTimeout(msecs, callback) {
    this.timeout = msecs;
    if (callback !== undefined) {
      if (typeof callback !== 'function')
        throw new ERR_INVALID_CALLBACK(callback);
      this.on('timeout', callback);
    }
    return this;
function setupCompat(ev) {
  if (ev === 'request') {
    this.removeListener('newListener', setupCompat);
    this.on('stream', onServerStream.bind(
      this,
      this[kOptions].Http2ServerRequest,
      this[kOptions].Http2ServerResponse)
    );
function socketOnClose() {
  const session = this[kSession];
  if (session !== undefined) {
    debug(`Http2Session ${sessionName(session[kType])}: socket closed`);
    const err = session.connecting ? new ERR_SOCKET_CLOSED() : null;
    const state = session[kState];
    state.streams.forEach((stream) => stream.close(NGHTTP2_CANCEL));
    state.pendingStreams.forEach((stream) => stream.close(NGHTTP2_CANCEL));
    session.close();
    session[kMaybeDestroy](err);
function connect(authority, options, listener) {
  if (typeof options === 'function') {
    listener = options;
    options = undefined;
  assertIsObject(options, 'options');
  options = { ...options };
  if (typeof authority === 'string')
    authority = new URL(authority);
  assertIsObject(authority, 'authority', ['string', 'Object', 'URL']);
  const protocol = authority.protocol || options.protocol || 'https:';
  const port = '' + (authority.port !== '' ?
    authority.port : (authority.protocol === 'http:' ? 80 : 443));
  let host = 'localhost';
  if (authority.hostname) {
    host = authority.hostname;
    if (host[0] === '[')
      host = host.slice(1, -1);
  } else if (authority.host) {
    host = authority.host;
  let socket;
  if (typeof options.createConnection === 'function') {
    socket = options.createConnection(authority, options);
  } else {
    switch (protocol) {
      case 'http:':
        socket = net.connect(options.port || port, options.host || host);
        break;
      case 'https:':
        socket = tls.connect(port, host, initializeTLSOptions(options, host));
        break;
      default:
        throw new ERR_HTTP2_UNSUPPORTED_PROTOCOL(protocol);
    }
  socket.on('error', socketOnError);
  socket.on('close', socketOnClose);
  const session = new ClientHttp2Session(options, socket);
  session[kAuthority] = `${options.servername || host}:${port}`;
  session[kProtocol] = protocol;
  if (typeof listener === 'function')
    session.once('connect', listener);
  return session;
// Support util.promisify
Object.defineProperty(connect, promisify.custom, {
  value: (authority, options) => {
    return new Promise((resolve) => {
      const server = connect(authority, options, () => resolve(server));
    });
function createSecureServer(options, handler) {
  assertIsObject(options, 'options');
  return new Http2SecureServer(options, handler);
function createServer(options, handler) {
  if (typeof options === 'function') {
    handler = options;
    options = {};
  assertIsObject(options, 'options');
  return new Http2Server(options, handler);
// Returns a Base64 encoded settings frame payload from the given
// object. The value is suitable for passing as the value of the
// HTTP2-Settings header frame.
function getPackedSettings(settings) {
  assertIsObject(settings, 'settings');
  validateSettings(settings);
  updateSettingsBuffer({ ...settings });
  return binding.packSettings();
function getUnpackedSettings(buf, options = {}) {
  if (!isArrayBufferView(buf)) {
    throw new ERR_INVALID_ARG_TYPE('buf',
                                   ['Buffer', 'TypedArray', 'DataView'], buf);
  if (buf.length % 6 !== 0)
    throw new ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH();
  const settings = {};
  let offset = 0;
  while (offset < buf.length) {
    const id = buf.readUInt16BE(offset);
    offset += 2;
    const value = buf.readUInt32BE(offset);
    switch (id) {
      case NGHTTP2_SETTINGS_HEADER_TABLE_SIZE:
        settings.headerTableSize = value;
        break;
      case NGHTTP2_SETTINGS_ENABLE_PUSH:
        settings.enablePush = value !== 0;
        break;
      case NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS:
        settings.maxConcurrentStreams = value;
        break;
      case NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE:
        settings.initialWindowSize = value;
        break;
      case NGHTTP2_SETTINGS_MAX_FRAME_SIZE:
        settings.maxFrameSize = value;
        break;
      case NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE:
        settings.maxHeaderListSize = value;
        break;
    }
    offset += 4;
  if (options != null && options.validate)
    validateSettings(settings);
  return settings;
binding.setCallbackFunctions(
  onSessionInternalError,
  onPriority,
  onSettings,
  onPing,
  onSessionHeaders,
  onFrameError,
  onGoawayData,
  onAltSvc,
  onOrigin,
  onSelectPadding,
  onStreamTrailers,
  onStreamClose
// Exports
module.exports = {
  connect,
  constants,
  createServer,
  createSecureServer,
  getDefaultSettings,
  getPackedSettings,
  getUnpackedSettings,
  Http2Session,
  Http2Stream,
  Http2ServerRequest,
  Http2ServerResponse
/* eslint-enable no-use-before-define */
'use strict';
const { Object, ObjectPrototype, Reflect } = primordials;
const assert = require('internal/assert');
const Stream = require('stream');
const { Readable } = Stream;
const {
  constants: {
    HTTP2_HEADER_AUTHORITY,
    HTTP2_HEADER_CONNECTION,
    HTTP2_HEADER_METHOD,
    HTTP2_HEADER_PATH,
    HTTP2_HEADER_SCHEME,
    HTTP2_HEADER_STATUS,
    HTTP_STATUS_CONTINUE,
    HTTP_STATUS_EXPECTATION_FAILED,
    HTTP_STATUS_METHOD_NOT_ALLOWED,
    HTTP_STATUS_OK
} = internalBinding('http2');
const {
  codes: {
    ERR_HTTP2_HEADERS_SENT,
    ERR_HTTP2_INFO_STATUS_NOT_ALLOWED,
    ERR_HTTP2_INVALID_HEADER_VALUE,
    ERR_HTTP2_INVALID_STREAM,
    ERR_HTTP2_NO_SOCKET_MANIPULATION,
    ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED,
    ERR_HTTP2_STATUS_INVALID,
    ERR_INVALID_ARG_VALUE,
    ERR_INVALID_CALLBACK,
    ERR_INVALID_HTTP_TOKEN
  },
  hideStackFrames
} = require('internal/errors');
const { validateString } = require('internal/validators');
const { kSocket, kRequest, kProxySocket } = require('internal/http2/util');
const kBeginSend = Symbol('begin-send');
const kState = Symbol('state');
const kStream = Symbol('stream');
const kResponse = Symbol('response');
const kHeaders = Symbol('headers');
const kRawHeaders = Symbol('rawHeaders');
const kTrailers = Symbol('trailers');
const kRawTrailers = Symbol('rawTrailers');
const kSetHeader = Symbol('setHeader');
const kAborted = Symbol('aborted');
let statusMessageWarned = false;
let statusConnectionHeaderWarned = false;
// Defines and implements an API compatibility layer on top of the core
// HTTP/2 implementation, intended to provide an interface that is as
// close as possible to the current require('http') API
const assertValidHeader = hideStackFrames((name, value) => {
  if (name === '' || typeof name !== 'string') {
    throw new ERR_INVALID_HTTP_TOKEN('Header name', name);
  if (isPseudoHeader(name)) {
    throw new ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED();
  if (value === undefined || value === null) {
    throw new ERR_HTTP2_INVALID_HEADER_VALUE(value, name);
  if (!isConnectionHeaderAllowed(name, value)) {
    connectionHeaderMessageWarn();
function isPseudoHeader(name) {
  switch (name) {
    case HTTP2_HEADER_STATUS:    // :status
    case HTTP2_HEADER_METHOD:    // :method
    case HTTP2_HEADER_PATH:      // :path
    case HTTP2_HEADER_AUTHORITY: // :authority
    case HTTP2_HEADER_SCHEME:    // :scheme
      return true;
    default:
      return false;
function statusMessageWarn() {
  if (statusMessageWarned === false) {
    process.emitWarning(
      'Status message is not supported by HTTP/2 (RFC7540 8.1.2.4)',
      'UnsupportedWarning'
    );
    statusMessageWarned = true;
function isConnectionHeaderAllowed(name, value) {
  return name !== HTTP2_HEADER_CONNECTION ||
         value === 'trailers';
function connectionHeaderMessageWarn() {
  if (statusConnectionHeaderWarned === false) {
    process.emitWarning(
      'The provided connection header is not valid, ' +
      'the value will be dropped from the header and ' +
      'will never be in use.',
      'UnsupportedWarning'
    );
    statusConnectionHeaderWarned = true;
function onStreamData(chunk) {
  const request = this[kRequest];
  if (request !== undefined && !request.push(chunk))
    this.pause();
function onStreamTrailers(trailers, flags, rawTrailers) {
  const request = this[kRequest];
  if (request !== undefined) {
    Object.assign(request[kTrailers], trailers);
    request[kRawTrailers].push(...rawTrailers);
function onStreamEnd() {
  // Cause the request stream to end as well.
  const request = this[kRequest];
  if (request !== undefined)
    this[kRequest].push(null);
function onStreamError(error) {
  // This is purposefully left blank
  //
  // errors in compatibility mode are
  // not forwarded to the request
  // and response objects.
function onRequestPause() {
  this[kStream].pause();
function onRequestResume() {
  this[kStream].resume();
function onStreamDrain() {
  const response = this[kResponse];
  if (response !== undefined)
    response.emit('drain');
function onStreamAbortedRequest() {
  const request = this[kRequest];
  if (request !== undefined && request[kState].closed === false) {
    request[kAborted] = true;
    request.emit('aborted');
function onStreamAbortedResponse() {
  // non-op for now
function resumeStream(stream) {
  stream.resume();
const proxySocketHandler = {
  get(stream, prop) {
    switch (prop) {
      case 'on':
      case 'once':
      case 'end':
      case 'emit':
      case 'destroy':
        return stream[prop].bind(stream);
      case 'writable':
      case 'destroyed':
        return stream[prop];
      case 'readable':
        if (stream.destroyed)
          return false;
        const request = stream[kRequest];
        return request ? request.readable : stream.readable;
      case 'setTimeout':
        const session = stream.session;
        if (session !== undefined)
          return session.setTimeout.bind(session);
        return stream.setTimeout.bind(stream);
      case 'write':
      case 'read':
      case 'pause':
      case 'resume':
        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();
      default:
        const ref = stream.session !== undefined ?
          stream.session[kSocket] : stream;
        const value = ref[prop];
        return typeof value === 'function' ? value.bind(ref) : value;
    }
  },
  getPrototypeOf(stream) {
    if (stream.session !== undefined)
      return Reflect.getPrototypeOf(stream.session[kSocket]);
    return Reflect.getPrototypeOf(stream);
  },
  set(stream, prop, value) {
    switch (prop) {
      case 'writable':
      case 'readable':
      case 'destroyed':
      case 'on':
      case 'once':
      case 'end':
      case 'emit':
      case 'destroy':
        stream[prop] = value;
        return true;
      case 'setTimeout':
        const session = stream.session;
        if (session !== undefined)
          session.setTimeout = value;
        else
          stream.setTimeout = value;
        return true;
      case 'write':
      case 'read':
      case 'pause':
      case 'resume':
        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();
      default:
        const ref = stream.session !== undefined ?
          stream.session[kSocket] : stream;
        ref[prop] = value;
        return true;
    }
function onStreamCloseRequest() {
  const req = this[kRequest];
  if (req === undefined)
    return;
  const state = req[kState];
  state.closed = true;
  req.push(null);
  // If the user didn't interact with incoming data and didn't pipe it,
  // dump it for compatibility with http1
  if (!state.didRead && !req._readableState.resumeScheduled)
    req.resume();
  this[kProxySocket] = null;
  this[kRequest] = undefined;
  req.emit('close');
function onStreamTimeout(kind) {
  return function onStreamTimeout() {
    const obj = this[kind];
    obj.emit('timeout');
  };
class Http2ServerRequest extends Readable {
  constructor(stream, headers, options, rawHeaders) {
    super(options);
    this[kState] = {
      closed: false,
      didRead: false,
    };
    this[kHeaders] = headers;
    this[kRawHeaders] = rawHeaders;
    this[kTrailers] = {};
    this[kRawTrailers] = [];
    this[kStream] = stream;
    this[kAborted] = false;
    stream[kProxySocket] = null;
    stream[kRequest] = this;
    // Pause the stream..
    stream.on('trailers', onStreamTrailers);
    stream.on('end', onStreamEnd);
    stream.on('error', onStreamError);
    stream.on('aborted', onStreamAbortedRequest);
    stream.on('close', onStreamCloseRequest);
    stream.on('timeout', onStreamTimeout(kRequest));
    this.on('pause', onRequestPause);
    this.on('resume', onRequestResume);
  get aborted() {
    return this[kAborted];
  get complete() {
    return this[kAborted] ||
           this._readableState.ended ||
           this[kState].closed ||
           this[kStream].destroyed;
  get stream() {
    return this[kStream];
  get headers() {
    return this[kHeaders];
  get rawHeaders() {
    return this[kRawHeaders];
  get trailers() {
    return this[kTrailers];
  get rawTrailers() {
    return this[kRawTrailers];
  get httpVersionMajor() {
    return 2;
  get httpVersionMinor() {
    return 0;
  get httpVersion() {
    return '2.0';
  get socket() {
    const stream = this[kStream];
    const proxySocket = stream[kProxySocket];
    if (proxySocket === null)
      return stream[kProxySocket] = new Proxy(stream, proxySocketHandler);
    return proxySocket;
  get connection() {
    return this.socket;
  _read(nread) {
    const state = this[kState];
    assert(!state.closed);
    if (!state.didRead) {
      state.didRead = true;
      this[kStream].on('data', onStreamData);
    } else {
      process.nextTick(resumeStream, this[kStream]);
    }
  get method() {
    return this[kHeaders][HTTP2_HEADER_METHOD];
  set method(method) {
    validateString(method, 'method');
    if (method.trim() === '')
      throw new ERR_INVALID_ARG_VALUE('method', method);
    this[kHeaders][HTTP2_HEADER_METHOD] = method;
  get authority() {
    return this[kHeaders][HTTP2_HEADER_AUTHORITY];
  get scheme() {
    return this[kHeaders][HTTP2_HEADER_SCHEME];
  get url() {
    return this[kHeaders][HTTP2_HEADER_PATH];
  set url(url) {
    this[kHeaders][HTTP2_HEADER_PATH] = url;
  setTimeout(msecs, callback) {
    if (this[kState].closed)
      return;
    this[kStream].setTimeout(msecs, callback);
function onStreamTrailersReady() {
  this.sendTrailers(this[kResponse][kTrailers]);
function onStreamCloseResponse() {
  const res = this[kResponse];
  if (res === undefined)
    return;
  const state = res[kState];
  if (this.headRequest !== state.headRequest)
    return;
  state.closed = true;
  this[kProxySocket] = null;
  this.removeListener('wantTrailers', onStreamTrailersReady);
  this[kResponse] = undefined;
  res.emit('finish');
  res.emit('close');
class Http2ServerResponse extends Stream {
  constructor(stream, options) {
    super(options);
    this[kState] = {
      closed: false,
      ending: false,
      headRequest: false,
      sendDate: true,
      statusCode: HTTP_STATUS_OK,
    };
    this[kHeaders] = Object.create(null);
    this[kTrailers] = Object.create(null);
    this[kStream] = stream;
    stream[kProxySocket] = null;
    stream[kResponse] = this;
    this.writable = true;
    stream.on('drain', onStreamDrain);
    stream.on('aborted', onStreamAbortedResponse);
    stream.on('close', onStreamCloseResponse);
    stream.on('wantTrailers', onStreamTrailersReady);
    stream.on('timeout', onStreamTimeout(kResponse));
  // User land modules such as finalhandler just check truthiness of this
  // but if someone is actually trying to use this for more than that
  // then we simply can't support such use cases
  get _header() {
    return this.headersSent;
  get finished() {
    const stream = this[kStream];
    return stream.destroyed ||
           stream._writableState.ended ||
           this[kState].closed;
  get socket() {
    // This is compatible with http1 which removes socket reference
    // only from ServerResponse but not IncomingMessage
    if (this[kState].closed)
      return undefined;
    const stream = this[kStream];
    const proxySocket = stream[kProxySocket];
    if (proxySocket === null)
      return stream[kProxySocket] = new Proxy(stream, proxySocketHandler);
    return proxySocket;
  get connection() {
    return this.socket;
  get stream() {
    return this[kStream];
  get headersSent() {
    return this[kStream].headersSent;
  get sendDate() {
    return this[kState].sendDate;
  set sendDate(bool) {
    this[kState].sendDate = Boolean(bool);
  get statusCode() {
    return this[kState].statusCode;
  set statusCode(code) {
    code |= 0;
    if (code >= 100 && code < 200)
      throw new ERR_HTTP2_INFO_STATUS_NOT_ALLOWED();
    if (code < 100 || code > 599)
      throw new ERR_HTTP2_STATUS_INVALID(code);
    this[kState].statusCode = code;
  setTrailer(name, value) {
    validateString(name, 'name');
    name = name.trim().toLowerCase();
    assertValidHeader(name, value);
    this[kTrailers][name] = value;
  addTrailers(headers) {
    const keys = Object.keys(headers);
    let key = '';
    for (var i = 0; i < keys.length; i++) {
      key = keys[i];
      this.setTrailer(key, headers[key]);
    }
  getHeader(name) {
    validateString(name, 'name');
    name = name.trim().toLowerCase();
    return this[kHeaders][name];
  getHeaderNames() {
    return Object.keys(this[kHeaders]);
  getHeaders() {
    return { ...this[kHeaders] };
  hasHeader(name) {
    validateString(name, 'name');
    name = name.trim().toLowerCase();
    return ObjectPrototype.hasOwnProperty(this[kHeaders], name);
  removeHeader(name) {
    validateString(name, 'name');
    if (this[kStream].headersSent)
      throw new ERR_HTTP2_HEADERS_SENT();
    name = name.trim().toLowerCase();
    delete this[kHeaders][name];
  setHeader(name, value) {
    validateString(name, 'name');
    if (this[kStream].headersSent)
      throw new ERR_HTTP2_HEADERS_SENT();
    this[kSetHeader](name, value);
  [kSetHeader](name, value) {
    name = name.trim().toLowerCase();
    assertValidHeader(name, value);
    if (!isConnectionHeaderAllowed(name, value)) {
      return;
    }
    this[kHeaders][name] = value;
  get statusMessage() {
    statusMessageWarn();
    return '';
  set statusMessage(msg) {
    statusMessageWarn();
  flushHeaders() {
    const state = this[kState];
    if (!state.closed && !this[kStream].headersSent)
      this.writeHead(state.statusCode);
  writeHead(statusCode, statusMessage, headers) {
    const state = this[kState];
    if (state.closed || this.stream.destroyed)
      return this;
    if (this[kStream].headersSent)
      throw new ERR_HTTP2_HEADERS_SENT();
    if (typeof statusMessage === 'string')
      statusMessageWarn();
    if (headers === undefined && typeof statusMessage === 'object')
      headers = statusMessage;
    var i;
    if (Array.isArray(headers)) {
      for (i = 0; i < headers.length; i++) {
        const header = headers[i];
        this[kSetHeader](header[0], header[1]);
      }
    } else if (typeof headers === 'object') {
      const keys = Object.keys(headers);
      let key = '';
      for (i = 0; i < keys.length; i++) {
        key = keys[i];
        this[kSetHeader](key, headers[key]);
      }
    }
    state.statusCode = statusCode;
    this[kBeginSend]();
    return this;
  write(chunk, encoding, cb) {
    if (typeof encoding === 'function') {
      cb = encoding;
      encoding = 'utf8';
    }
    if (this[kState].closed) {
      const err = new ERR_HTTP2_INVALID_STREAM();
      if (typeof cb === 'function')
        process.nextTick(cb, err);
      else
        throw err;
      return;
    }
    const stream = this[kStream];
    if (!stream.headersSent)
      this.writeHead(this[kState].statusCode);
    return stream.write(chunk, encoding, cb);
  end(chunk, encoding, cb) {
    const stream = this[kStream];
    const state = this[kState];
    if ((state.closed || state.ending) &&
        state.headRequest === stream.headRequest) {
      return this;
    }
    if (typeof chunk === 'function') {
      cb = chunk;
      chunk = null;
    } else if (typeof encoding === 'function') {
      cb = encoding;
      encoding = 'utf8';
    }
    if (chunk !== null && chunk !== undefined)
      this.write(chunk, encoding);
    const isFinished = this.finished;
    state.headRequest = stream.headRequest;
    state.ending = true;
    if (typeof cb === 'function') {
      if (isFinished)
        this.once('finish', cb);
      else
        stream.once('finish', cb);
    }
    if (!stream.headersSent)
      this.writeHead(this[kState].statusCode);
    if (isFinished)
      onStreamCloseResponse.call(stream);
    else
      stream.end();
    return this;
  destroy(err) {
    if (this[kState].closed)
      return;
    this[kStream].destroy(err);
  setTimeout(msecs, callback) {
    if (this[kState].closed)
      return;
    this[kStream].setTimeout(msecs, callback);
  createPushResponse(headers, callback) {
    if (typeof callback !== 'function')
      throw new ERR_INVALID_CALLBACK(callback);
    if (this[kState].closed) {
      process.nextTick(callback, new ERR_HTTP2_INVALID_STREAM());
      return;
    }
    this[kStream].pushStream(headers, {}, (err, stream, headers, options) => {
      if (err) {
        callback(err);
        return;
      }
      callback(null, new Http2ServerResponse(stream));
    });
  [kBeginSend]() {
    const state = this[kState];
    const headers = this[kHeaders];
    headers[HTTP2_HEADER_STATUS] = state.statusCode;
    const options = {
      endStream: state.ending,
      waitForTrailers: true,
    };
    this[kStream].respond(headers, options);
  // TODO doesn't support callbacks
  writeContinue() {
    const stream = this[kStream];
    if (stream.headersSent || this[kState].closed)
      return false;
    stream.additionalHeaders({
      [HTTP2_HEADER_STATUS]: HTTP_STATUS_CONTINUE
    });
    return true;
function onServerStream(ServerRequest, ServerResponse,
                        stream, headers, flags, rawHeaders) {
  const server = this;
  const request = new ServerRequest(stream, headers, undefined, rawHeaders);
  const response = new ServerResponse(stream);
  // Check for the CONNECT method
  const method = headers[HTTP2_HEADER_METHOD];
  if (method === 'CONNECT') {
    if (!server.emit('connect', request, response)) {
      response.statusCode = HTTP_STATUS_METHOD_NOT_ALLOWED;
      response.end();
    }
    return;
  // Check for Expectations
  if (headers.expect !== undefined) {
    if (headers.expect === '100-continue') {
      if (server.listenerCount('checkContinue')) {
        server.emit('checkContinue', request, response);
      } else {
        response.writeContinue();
        server.emit('request', request, response);
      }
    } else if (server.listenerCount('checkExpectation')) {
      server.emit('checkExpectation', request, response);
    } else {
      response.statusCode = HTTP_STATUS_EXPECTATION_FAILED;
      response.end();
    }
    return;
  server.emit('request', request, response);
module.exports = {
  onServerStream,
  Http2ServerRequest,
  Http2ServerResponse,
'use strict';
const { Math, Object } = primordials;
const binding = internalBinding('http2');
const {
  codes: {
    ERR_HTTP2_HEADER_SINGLE_VALUE,
    ERR_HTTP2_INVALID_CONNECTION_HEADERS,
    ERR_HTTP2_INVALID_PSEUDOHEADER,
    ERR_HTTP2_INVALID_SETTING_VALUE,
    ERR_INVALID_ARG_TYPE
  },
  addCodeToName,
  hideStackFrames
} = require('internal/errors');
const kSocket = Symbol('socket');
const kProxySocket = Symbol('proxySocket');
const kRequest = Symbol('request');
const {
  NGHTTP2_SESSION_CLIENT,
  NGHTTP2_SESSION_SERVER,
  HTTP2_HEADER_STATUS,
  HTTP2_HEADER_METHOD,
  HTTP2_HEADER_AUTHORITY,
  HTTP2_HEADER_SCHEME,
  HTTP2_HEADER_PATH,
  HTTP2_HEADER_PROTOCOL,
  HTTP2_HEADER_ACCESS_CONTROL_ALLOW_CREDENTIALS,
  HTTP2_HEADER_ACCESS_CONTROL_MAX_AGE,
  HTTP2_HEADER_ACCESS_CONTROL_REQUEST_METHOD,
  HTTP2_HEADER_AGE,
  HTTP2_HEADER_AUTHORIZATION,
  HTTP2_HEADER_CONTENT_ENCODING,
  HTTP2_HEADER_CONTENT_LANGUAGE,
  HTTP2_HEADER_CONTENT_LENGTH,
  HTTP2_HEADER_CONTENT_LOCATION,
  HTTP2_HEADER_CONTENT_MD5,
  HTTP2_HEADER_CONTENT_RANGE,
  HTTP2_HEADER_CONTENT_TYPE,
  HTTP2_HEADER_COOKIE,
  HTTP2_HEADER_DATE,
  HTTP2_HEADER_DNT,
  HTTP2_HEADER_ETAG,
  HTTP2_HEADER_EXPIRES,
  HTTP2_HEADER_FROM,
  HTTP2_HEADER_IF_MATCH,
  HTTP2_HEADER_IF_NONE_MATCH,
  HTTP2_HEADER_IF_MODIFIED_SINCE,
  HTTP2_HEADER_IF_RANGE,
  HTTP2_HEADER_IF_UNMODIFIED_SINCE,
  HTTP2_HEADER_LAST_MODIFIED,
  HTTP2_HEADER_LOCATION,
  HTTP2_HEADER_MAX_FORWARDS,
  HTTP2_HEADER_PROXY_AUTHORIZATION,
  HTTP2_HEADER_RANGE,
  HTTP2_HEADER_REFERER,
  HTTP2_HEADER_RETRY_AFTER,
  HTTP2_HEADER_SET_COOKIE,
  HTTP2_HEADER_TK,
  HTTP2_HEADER_UPGRADE_INSECURE_REQUESTS,
  HTTP2_HEADER_USER_AGENT,
  HTTP2_HEADER_X_CONTENT_TYPE_OPTIONS,
  HTTP2_HEADER_CONNECTION,
  HTTP2_HEADER_UPGRADE,
  HTTP2_HEADER_HTTP2_SETTINGS,
  HTTP2_HEADER_TE,
  HTTP2_HEADER_TRANSFER_ENCODING,
  HTTP2_HEADER_HOST,
  HTTP2_HEADER_KEEP_ALIVE,
  HTTP2_HEADER_PROXY_CONNECTION,
  HTTP2_METHOD_DELETE,
  HTTP2_METHOD_GET,
  HTTP2_METHOD_HEAD
} = binding.constants;
// This set is defined strictly by the HTTP/2 specification. Only
// :-prefixed headers defined by that specification may be added to
// this set.
const kValidPseudoHeaders = new Set([
  HTTP2_HEADER_STATUS,
  HTTP2_HEADER_METHOD,
  HTTP2_HEADER_AUTHORITY,
  HTTP2_HEADER_SCHEME,
  HTTP2_HEADER_PATH,
  HTTP2_HEADER_PROTOCOL
// This set contains headers that are permitted to have only a single
// value. Multiple instances must not be specified.
const kSingleValueHeaders = new Set([
  HTTP2_HEADER_STATUS,
  HTTP2_HEADER_METHOD,
  HTTP2_HEADER_AUTHORITY,
  HTTP2_HEADER_SCHEME,
  HTTP2_HEADER_PATH,
  HTTP2_HEADER_PROTOCOL,
  HTTP2_HEADER_ACCESS_CONTROL_ALLOW_CREDENTIALS,
  HTTP2_HEADER_ACCESS_CONTROL_MAX_AGE,
  HTTP2_HEADER_ACCESS_CONTROL_REQUEST_METHOD,
  HTTP2_HEADER_AGE,
  HTTP2_HEADER_AUTHORIZATION,
  HTTP2_HEADER_CONTENT_ENCODING,
  HTTP2_HEADER_CONTENT_LANGUAGE,
  HTTP2_HEADER_CONTENT_LENGTH,
  HTTP2_HEADER_CONTENT_LOCATION,
  HTTP2_HEADER_CONTENT_MD5,
  HTTP2_HEADER_CONTENT_RANGE,
  HTTP2_HEADER_CONTENT_TYPE,
  HTTP2_HEADER_DATE,
  HTTP2_HEADER_DNT,
  HTTP2_HEADER_ETAG,
  HTTP2_HEADER_EXPIRES,
  HTTP2_HEADER_FROM,
  HTTP2_HEADER_IF_MATCH,
  HTTP2_HEADER_IF_MODIFIED_SINCE,
  HTTP2_HEADER_IF_NONE_MATCH,
  HTTP2_HEADER_IF_RANGE,
  HTTP2_HEADER_IF_UNMODIFIED_SINCE,
  HTTP2_HEADER_LAST_MODIFIED,
  HTTP2_HEADER_LOCATION,
  HTTP2_HEADER_MAX_FORWARDS,
  HTTP2_HEADER_PROXY_AUTHORIZATION,
  HTTP2_HEADER_RANGE,
  HTTP2_HEADER_REFERER,
  HTTP2_HEADER_RETRY_AFTER,
  HTTP2_HEADER_TK,
  HTTP2_HEADER_UPGRADE_INSECURE_REQUESTS,
  HTTP2_HEADER_USER_AGENT,
  HTTP2_HEADER_X_CONTENT_TYPE_OPTIONS
// The HTTP methods in this set are specifically defined as assigning no
// meaning to the request payload. By default, unless the user explicitly
// overrides the endStream option on the request method, the endStream
// option will be defaulted to true when these methods are used.
const kNoPayloadMethods = new Set([
  HTTP2_METHOD_DELETE,
  HTTP2_METHOD_GET,
  HTTP2_METHOD_HEAD
// The following ArrayBuffer instances are used to share memory more efficiently
// with the native binding side for a number of methods. These are not intended
// to be used directly by users in any way. The ArrayBuffers are created on
// the native side with values that are filled in on demand, the js code then
// reads those values out. The set of IDX constants that follow identify the
// relevant data positions within these buffers.
const { settingsBuffer, optionsBuffer } = binding;
// Note that Float64Array is used here because there is no Int64Array available
// and these deal with numbers that can be beyond the range of Uint32 and Int32.
// The values set on the native side will always be integers. This is not a
// unique example of this, this pattern can be found in use in other parts of
// Node.js core as a performance optimization.
const { sessionState, streamState } = binding;
const IDX_SETTINGS_HEADER_TABLE_SIZE = 0;
const IDX_SETTINGS_ENABLE_PUSH = 1;
const IDX_SETTINGS_INITIAL_WINDOW_SIZE = 2;
const IDX_SETTINGS_MAX_FRAME_SIZE = 3;
const IDX_SETTINGS_MAX_CONCURRENT_STREAMS = 4;
const IDX_SETTINGS_MAX_HEADER_LIST_SIZE = 5;
const IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL = 6;
const IDX_SETTINGS_FLAGS = 7;
const IDX_SESSION_STATE_EFFECTIVE_LOCAL_WINDOW_SIZE = 0;
const IDX_SESSION_STATE_EFFECTIVE_RECV_DATA_LENGTH = 1;
const IDX_SESSION_STATE_NEXT_STREAM_ID = 2;
const IDX_SESSION_STATE_LOCAL_WINDOW_SIZE = 3;
const IDX_SESSION_STATE_LAST_PROC_STREAM_ID = 4;
const IDX_SESSION_STATE_REMOTE_WINDOW_SIZE = 5;
const IDX_SESSION_STATE_OUTBOUND_QUEUE_SIZE = 6;
const IDX_SESSION_STATE_HD_DEFLATE_DYNAMIC_TABLE_SIZE = 7;
const IDX_SESSION_STATE_HD_INFLATE_DYNAMIC_TABLE_SIZE = 8;
const IDX_STREAM_STATE = 0;
const IDX_STREAM_STATE_WEIGHT = 1;
const IDX_STREAM_STATE_SUM_DEPENDENCY_WEIGHT = 2;
const IDX_STREAM_STATE_LOCAL_CLOSE = 3;
const IDX_STREAM_STATE_REMOTE_CLOSE = 4;
const IDX_STREAM_STATE_LOCAL_WINDOW_SIZE = 5;
const IDX_OPTIONS_MAX_DEFLATE_DYNAMIC_TABLE_SIZE = 0;
const IDX_OPTIONS_MAX_RESERVED_REMOTE_STREAMS = 1;
const IDX_OPTIONS_MAX_SEND_HEADER_BLOCK_LENGTH = 2;
const IDX_OPTIONS_PEER_MAX_CONCURRENT_STREAMS = 3;
const IDX_OPTIONS_PADDING_STRATEGY = 4;
const IDX_OPTIONS_MAX_HEADER_LIST_PAIRS = 5;
const IDX_OPTIONS_MAX_OUTSTANDING_PINGS = 6;
const IDX_OPTIONS_MAX_OUTSTANDING_SETTINGS = 7;
const IDX_OPTIONS_MAX_SESSION_MEMORY = 8;
const IDX_OPTIONS_FLAGS = 9;
function updateOptionsBuffer(options) {
  var flags = 0;
  if (typeof options.maxDeflateDynamicTableSize === 'number') {
    flags |= (1 << IDX_OPTIONS_MAX_DEFLATE_DYNAMIC_TABLE_SIZE);
    optionsBuffer[IDX_OPTIONS_MAX_DEFLATE_DYNAMIC_TABLE_SIZE] =
      options.maxDeflateDynamicTableSize;
  if (typeof options.maxReservedRemoteStreams === 'number') {
    flags |= (1 << IDX_OPTIONS_MAX_RESERVED_REMOTE_STREAMS);
    optionsBuffer[IDX_OPTIONS_MAX_RESERVED_REMOTE_STREAMS] =
      options.maxReservedRemoteStreams;
  if (typeof options.maxSendHeaderBlockLength === 'number') {
    flags |= (1 << IDX_OPTIONS_MAX_SEND_HEADER_BLOCK_LENGTH);
    optionsBuffer[IDX_OPTIONS_MAX_SEND_HEADER_BLOCK_LENGTH] =
      options.maxSendHeaderBlockLength;
  if (typeof options.peerMaxConcurrentStreams === 'number') {
    flags |= (1 << IDX_OPTIONS_PEER_MAX_CONCURRENT_STREAMS);
    optionsBuffer[IDX_OPTIONS_PEER_MAX_CONCURRENT_STREAMS] =
      options.peerMaxConcurrentStreams;
  if (typeof options.paddingStrategy === 'number') {
    flags |= (1 << IDX_OPTIONS_PADDING_STRATEGY);
    optionsBuffer[IDX_OPTIONS_PADDING_STRATEGY] =
      options.paddingStrategy;
  if (typeof options.maxHeaderListPairs === 'number') {
    flags |= (1 << IDX_OPTIONS_MAX_HEADER_LIST_PAIRS);
    optionsBuffer[IDX_OPTIONS_MAX_HEADER_LIST_PAIRS] =
      options.maxHeaderListPairs;
  if (typeof options.maxOutstandingPings === 'number') {
    flags |= (1 << IDX_OPTIONS_MAX_OUTSTANDING_PINGS);
    optionsBuffer[IDX_OPTIONS_MAX_OUTSTANDING_PINGS] =
      options.maxOutstandingPings;
  if (typeof options.maxOutstandingSettings === 'number') {
    flags |= (1 << IDX_OPTIONS_MAX_OUTSTANDING_SETTINGS);
    optionsBuffer[IDX_OPTIONS_MAX_OUTSTANDING_SETTINGS] =
      Math.max(1, options.maxOutstandingSettings);
  if (typeof options.maxSessionMemory === 'number') {
    flags |= (1 << IDX_OPTIONS_MAX_SESSION_MEMORY);
    optionsBuffer[IDX_OPTIONS_MAX_SESSION_MEMORY] =
      Math.max(1, options.maxSessionMemory);
  optionsBuffer[IDX_OPTIONS_FLAGS] = flags;
function getDefaultSettings() {
  settingsBuffer[IDX_SETTINGS_FLAGS] = 0;
  binding.refreshDefaultSettings();
  const holder = Object.create(null);
  const flags = settingsBuffer[IDX_SETTINGS_FLAGS];
  if ((flags & (1 << IDX_SETTINGS_HEADER_TABLE_SIZE)) ===
      (1 << IDX_SETTINGS_HEADER_TABLE_SIZE)) {
    holder.headerTableSize =
      settingsBuffer[IDX_SETTINGS_HEADER_TABLE_SIZE];
  if ((flags & (1 << IDX_SETTINGS_ENABLE_PUSH)) ===
      (1 << IDX_SETTINGS_ENABLE_PUSH)) {
    holder.enablePush =
      settingsBuffer[IDX_SETTINGS_ENABLE_PUSH] === 1;
  if ((flags & (1 << IDX_SETTINGS_INITIAL_WINDOW_SIZE)) ===
      (1 << IDX_SETTINGS_INITIAL_WINDOW_SIZE)) {
    holder.initialWindowSize =
      settingsBuffer[IDX_SETTINGS_INITIAL_WINDOW_SIZE];
  if ((flags & (1 << IDX_SETTINGS_MAX_FRAME_SIZE)) ===
      (1 << IDX_SETTINGS_MAX_FRAME_SIZE)) {
    holder.maxFrameSize =
      settingsBuffer[IDX_SETTINGS_MAX_FRAME_SIZE];
  if ((flags & (1 << IDX_SETTINGS_MAX_CONCURRENT_STREAMS)) ===
      (1 << IDX_SETTINGS_MAX_CONCURRENT_STREAMS)) {
    holder.maxConcurrentStreams =
      settingsBuffer[IDX_SETTINGS_MAX_CONCURRENT_STREAMS];
  if ((flags & (1 << IDX_SETTINGS_MAX_HEADER_LIST_SIZE)) ===
      (1 << IDX_SETTINGS_MAX_HEADER_LIST_SIZE)) {
    holder.maxHeaderListSize =
      settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE];
  if ((flags & (1 << IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL)) ===
      (1 << IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL)) {
    holder.enableConnectProtocol =
      settingsBuffer[IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL];
  return holder;
// Remote is a boolean. true to fetch remote settings, false to fetch local.
// this is only called internally
function getSettings(session, remote) {
  if (remote)
    session.remoteSettings();
  else
    session.localSettings();
  return {
    headerTableSize: settingsBuffer[IDX_SETTINGS_HEADER_TABLE_SIZE],
    enablePush: !!settingsBuffer[IDX_SETTINGS_ENABLE_PUSH],
    initialWindowSize: settingsBuffer[IDX_SETTINGS_INITIAL_WINDOW_SIZE],
    maxFrameSize: settingsBuffer[IDX_SETTINGS_MAX_FRAME_SIZE],
    maxConcurrentStreams: settingsBuffer[IDX_SETTINGS_MAX_CONCURRENT_STREAMS],
    maxHeaderListSize: settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE],
    enableConnectProtocol: settingsBuffer[IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL]
  };
function updateSettingsBuffer(settings) {
  var flags = 0;
  if (typeof settings.headerTableSize === 'number') {
    flags |= (1 << IDX_SETTINGS_HEADER_TABLE_SIZE);
    settingsBuffer[IDX_SETTINGS_HEADER_TABLE_SIZE] =
      settings.headerTableSize;
  if (typeof settings.maxConcurrentStreams === 'number') {
    flags |= (1 << IDX_SETTINGS_MAX_CONCURRENT_STREAMS);
    settingsBuffer[IDX_SETTINGS_MAX_CONCURRENT_STREAMS] =
      settings.maxConcurrentStreams;
  if (typeof settings.initialWindowSize === 'number') {
    flags |= (1 << IDX_SETTINGS_INITIAL_WINDOW_SIZE);
    settingsBuffer[IDX_SETTINGS_INITIAL_WINDOW_SIZE] =
      settings.initialWindowSize;
  if (typeof settings.maxFrameSize === 'number') {
    flags |= (1 << IDX_SETTINGS_MAX_FRAME_SIZE);
    settingsBuffer[IDX_SETTINGS_MAX_FRAME_SIZE] =
      settings.maxFrameSize;
  if (typeof settings.maxHeaderListSize === 'number') {
    flags |= (1 << IDX_SETTINGS_MAX_HEADER_LIST_SIZE);
    settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE] =
      settings.maxHeaderListSize;
  if (typeof settings.enablePush === 'boolean') {
    flags |= (1 << IDX_SETTINGS_ENABLE_PUSH);
    settingsBuffer[IDX_SETTINGS_ENABLE_PUSH] = Number(settings.enablePush);
  if (typeof settings.enableConnectProtocol === 'boolean') {
    flags |= (1 << IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL);
    settingsBuffer[IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL] =
      Number(settings.enableConnectProtocol);
  settingsBuffer[IDX_SETTINGS_FLAGS] = flags;
function getSessionState(session) {
  session.refreshState();
  return {
    effectiveLocalWindowSize:
      sessionState[IDX_SESSION_STATE_EFFECTIVE_LOCAL_WINDOW_SIZE],
    effectiveRecvDataLength:
      sessionState[IDX_SESSION_STATE_EFFECTIVE_RECV_DATA_LENGTH],
    nextStreamID:
      sessionState[IDX_SESSION_STATE_NEXT_STREAM_ID],
    localWindowSize:
      sessionState[IDX_SESSION_STATE_LOCAL_WINDOW_SIZE],
    lastProcStreamID:
      sessionState[IDX_SESSION_STATE_LAST_PROC_STREAM_ID],
    remoteWindowSize:
      sessionState[IDX_SESSION_STATE_REMOTE_WINDOW_SIZE],
    outboundQueueSize:
      sessionState[IDX_SESSION_STATE_OUTBOUND_QUEUE_SIZE],
    deflateDynamicTableSize:
      sessionState[IDX_SESSION_STATE_HD_DEFLATE_DYNAMIC_TABLE_SIZE],
    inflateDynamicTableSize:
      sessionState[IDX_SESSION_STATE_HD_INFLATE_DYNAMIC_TABLE_SIZE]
  };
function getStreamState(stream) {
  stream.refreshState();
  return {
    state: streamState[IDX_STREAM_STATE],
    weight: streamState[IDX_STREAM_STATE_WEIGHT],
    sumDependencyWeight: streamState[IDX_STREAM_STATE_SUM_DEPENDENCY_WEIGHT],
    localClose: streamState[IDX_STREAM_STATE_LOCAL_CLOSE],
    remoteClose: streamState[IDX_STREAM_STATE_REMOTE_CLOSE],
    localWindowSize: streamState[IDX_STREAM_STATE_LOCAL_WINDOW_SIZE]
  };
function isIllegalConnectionSpecificHeader(name, value) {
  switch (name) {
    case HTTP2_HEADER_CONNECTION:
    case HTTP2_HEADER_UPGRADE:
    case HTTP2_HEADER_HOST:
    case HTTP2_HEADER_HTTP2_SETTINGS:
    case HTTP2_HEADER_KEEP_ALIVE:
    case HTTP2_HEADER_PROXY_CONNECTION:
    case HTTP2_HEADER_TRANSFER_ENCODING:
      return true;
    case HTTP2_HEADER_TE:
      return value !== 'trailers';
    default:
      return false;
const assertValidPseudoHeader = hideStackFrames((key) => {
  if (!kValidPseudoHeaders.has(key)) {
    throw new ERR_HTTP2_INVALID_PSEUDOHEADER(key);
const assertValidPseudoHeaderResponse = hideStackFrames((key) => {
  if (key !== ':status') {
    throw new ERR_HTTP2_INVALID_PSEUDOHEADER(key);
const assertValidPseudoHeaderTrailer = hideStackFrames((key) => {
  throw new ERR_HTTP2_INVALID_PSEUDOHEADER(key);
function mapToHeaders(map,
                      assertValuePseudoHeader = assertValidPseudoHeader) {
  let ret = '';
  let count = 0;
  const keys = Object.keys(map);
  const singles = new Set();
  let i;
  let isArray;
  let key;
  let value;
  let isSingleValueHeader;
  let err;
  for (i = 0; i < keys.length; i++) {
    key = keys[i];
    value = map[key];
    if (value === undefined || key === '')
      continue;
    key = key.toLowerCase();
    isSingleValueHeader = kSingleValueHeaders.has(key);
    isArray = Array.isArray(value);
    if (isArray) {
      switch (value.length) {
        case 0:
          continue;
        case 1:
          value = String(value[0]);
          isArray = false;
          break;
        default:
          if (isSingleValueHeader)
            throw new ERR_HTTP2_HEADER_SINGLE_VALUE(key);
      }
    } else {
      value = String(value);
    }
    if (isSingleValueHeader) {
      if (singles.has(key))
        throw new ERR_HTTP2_HEADER_SINGLE_VALUE(key);
      singles.add(key);
    }
    if (key[0] === ':') {
      err = assertValuePseudoHeader(key);
      if (err !== undefined)
        throw err;
      ret = `${key}\0${value}\0${ret}`;
      count++;
      continue;
    }
    if (isIllegalConnectionSpecificHeader(key, value)) {
      throw new ERR_HTTP2_INVALID_CONNECTION_HEADERS(key);
    }
    if (isArray) {
      for (var k = 0; k < value.length; k++) {
        const val = String(value[k]);
        ret += `${key}\0${val}\0`;
      }
      count += value.length;
      continue;
    }
    ret += `${key}\0${value}\0`;
    count++;
  return [ret, count];
class NghttpError extends Error {
  constructor(ret) {
    super(binding.nghttp2ErrorString(ret));
    this.code = 'ERR_HTTP2_ERROR';
    this.errno = ret;
    addCodeToName(this, super.name, 'ERR_HTTP2_ERROR');
  toString() {
    return `${this.name} [${this.code}]: ${this.message}`;
const assertIsObject = hideStackFrames((value, name, types) => {
  if (value !== undefined &&
      (value === null ||
       typeof value !== 'object' ||
       Array.isArray(value))) {
    throw new ERR_INVALID_ARG_TYPE(name, types || 'Object', value);
const assertWithinRange = hideStackFrames(
  (name, value, min = 0, max = Infinity) => {
    if (value !== undefined &&
      (typeof value !== 'number' || value < min || value > max)) {
      throw new ERR_HTTP2_INVALID_SETTING_VALUE.RangeError(
        name, value, min, max);
    }
function toHeaderObject(headers) {
  const obj = Object.create(null);
  for (var n = 0; n < headers.length; n = n + 2) {
    var name = headers[n];
    var value = headers[n + 1];
    if (name === HTTP2_HEADER_STATUS)
      value |= 0;
    var existing = obj[name];
    if (existing === undefined) {
      obj[name] = name === HTTP2_HEADER_SET_COOKIE ? [value] : value;
    } else if (!kSingleValueHeaders.has(name)) {
      switch (name) {
        case HTTP2_HEADER_COOKIE:
          // https://tools.ietf.org/html/rfc7540#section-8.1.2.5
          // "...If there are multiple Cookie header fields after decompression,
          //  these MUST be concatenated into a single octet string using the
          //  two-octet delimiter of 0x3B, 0x20 (the ASCII string "; ") before
          //  being passed into a non-HTTP/2 context."
          obj[name] = `${existing}; ${value}`;
          break;
        case HTTP2_HEADER_SET_COOKIE:
          // https://tools.ietf.org/html/rfc7230#section-3.2.2
          // "Note: In practice, the "Set-Cookie" header field ([RFC6265]) often
          // appears multiple times in a response message and does not use the
          // list syntax, violating the above requirements on multiple header
          // fields with the same name.  Since it cannot be combined into a
          // single field-value, recipients ought to handle "Set-Cookie" as a
          // special case while processing header fields."
          existing.push(value);
          break;
        default:
          // https://tools.ietf.org/html/rfc7230#section-3.2.2
          // "A recipient MAY combine multiple header fields with the same field
          // name into one "field-name: field-value" pair, without changing the
          // semantics of the message, by appending each subsequent field value
          // to the combined field value in order, separated by a comma."
          obj[name] = `${existing}, ${value}`;
          break;
      }
    }
  return obj;
function isPayloadMeaningless(method) {
  return kNoPayloadMethods.has(method);
function sessionName(type) {
  switch (type) {
    case NGHTTP2_SESSION_CLIENT:
      return 'client';
    case NGHTTP2_SESSION_SERVER:
      return 'server';
    default:
      return '<invalid>';
module.exports = {
  assertIsObject,
  assertValidPseudoHeaderResponse,
  assertValidPseudoHeaderTrailer,
  assertWithinRange,
  getDefaultSettings,
  getSessionState,
  getSettings,
  getStreamState,
  isPayloadMeaningless,
  kSocket,
  kProxySocket,
  kRequest,
  mapToHeaders,
  NghttpError,
  sessionName,
  toHeaderObject,
  updateOptionsBuffer,
  updateSettingsBuffer
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
module.exports = { versionCheck };
// Don't execute when required directly instead of being eval'd from
// lib/internal/v8_prof_processor.js.  This way we can test functions
// from this file in isolation.
if (module.id === 'internal/v8_prof_polyfill') return;
// Node polyfill
const fs = require('fs');
const cp = require('child_process');
const os = {
  system: function(name, args) {
    if (process.platform === 'linux' && name === 'nm') {
      // Filter out vdso and vsyscall entries.
      const arg = args[args.length - 1];
      if (arg === '[vdso]' ||
          arg == '[vsyscall]' ||
          /^[0-9a-f]+-[0-9a-f]+$/.test(arg)) {
        return '';
      }
    }
    let out = cp.spawnSync(name, args).stdout.toString();
    // Auto c++filt names, but not [iItT]
    if (process.platform === 'darwin' && name === 'nm')
      out = macCppfiltNm(out);
    return out;
const print = console.log;
function read(fileName) {
  return fs.readFileSync(fileName, 'utf8');
const quit = process.exit;
// Polyfill "readline()".
const logFile = arguments[arguments.length - 1];
try {
  fs.accessSync(logFile);
} catch(e) {
  console.error('Please provide a valid isolate file as the final argument.');
  process.exit(1);
const fd = fs.openSync(logFile, 'r');
const buf = Buffer.allocUnsafe(4096);
const dec = new (require('string_decoder').StringDecoder)('utf-8');
var line = '';
  const message = versionCheck(peekline(), process.versions.v8);
  if (message) console.log(message);
function peekline() {
  const s = readline();
  line = `${s}\n${line}`;
  return s;
function readline() {
  while (true) {
    const lineBreak = line.indexOf('\n');
    if (lineBreak !== -1) {
      const res = line.slice(0, lineBreak);
      line = line.slice(lineBreak + 1);
      return res;
    }
    const bytes = fs.readSync(fd, buf, 0, buf.length);
    line += dec.write(buf.slice(0, bytes));
    if (line.length === 0) {
      return '';
    }
    if (bytes === 0) {
      process.emitWarning(`Profile file ${logFile} is broken`, {
        code: 'BROKEN_PROFILE_FILE',
        detail: `${JSON.stringify(line)} at the file end is broken`
      });
      return '';
    }
function versionCheck(firstLine, expected) {
  // v8-version looks like
  // "v8-version,$major,$minor,$build,$patch[,$embedder],$candidate"
  // whereas process.versions.v8 is either "$major.$minor.$build-$embedder" or
  // "$major.$minor.$build.$patch-$embedder".
  firstLine = firstLine.split(',');
  const curVer = expected.split(/[.\-]/);
  if (firstLine.length !== 6 && firstLine.length !== 7 ||
      firstLine[0] !== 'v8-version') {
    return 'Unable to read v8-version from log file.';
  // Compare major, minor and build; ignore the patch and candidate fields.
  for (var i = 0; i < 3; i++)
    if (curVer[i] !== firstLine[i + 1])
      return 'Testing v8 version different from logging version';
function macCppfiltNm(out) {
  // Re-grouped copy-paste from `tickprocessor.js`
  const FUNC_RE = /^([0-9a-fA-F]{8,16} [iItT] )(.*)$/gm;
  const CLEAN_RE = /^[0-9a-fA-F]{8,16} [iItT] /;
  let entries = out.match(FUNC_RE);
  if (entries === null)
    return out;
  entries = entries.map((entry) => {
    return entry.replace(CLEAN_RE, '')
  });
  let filtered;
  try {
    filtered = cp.spawnSync('c++filt', [ '-p' , '-i' ], {
      input: entries.join('\n')
    }).stdout.toString();
  } catch {
    return out;
  let i = 0;
  filtered = filtered.split('\n');
  return out.replace(FUNC_RE, (all, prefix, postfix) => {
    return prefix + (filtered[i++] || postfix);
  });
'use strict';
const { JSON } = primordials;
const vm = require('vm');
const scriptFiles = [
  'internal/v8_prof_polyfill',
  'internal/deps/v8/tools/splaytree',
  'internal/deps/v8/tools/codemap',
  'internal/deps/v8/tools/csvparser',
  'internal/deps/v8/tools/consarray',
  'internal/deps/v8/tools/profile',
  'internal/deps/v8/tools/profile_view',
  'internal/deps/v8/tools/logreader',
  'internal/deps/v8/tools/arguments',
  'internal/deps/v8/tools/tickprocessor',
  'internal/deps/v8/tools/SourceMap',
  'internal/deps/v8/tools/tickprocessor-driver'
var script = '';
scriptFiles.forEach((s) => {
  script += internalBinding('natives')[s] + '\n';
const tickArguments = [];
if (process.platform === 'darwin') {
  tickArguments.push('--mac');
} else if (process.platform === 'win32') {
  tickArguments.push('--windows');
tickArguments.push.apply(tickArguments, process.argv.slice(1));
script = `(function(module, require) {
  arguments = ${JSON.stringify(tickArguments)};
  function write (s) { process.stdout.write(s) }
  function printErr(err) { console.error(err); }
  ${script}
})`;
vm.runInThisContext(script)(module, require);
'use strict';
const {
  hideStackFrames,
  codes: {
    ERR_INVALID_ARG_TYPE,
    ERR_INVALID_ARG_VALUE,
    ERR_OUT_OF_RANGE,
    ERR_UNKNOWN_SIGNAL
} = require('internal/errors');
const {
  isArrayBufferView
} = require('internal/util/types');
const { signals } = internalBinding('constants').os;
const { MAX_SAFE_INTEGER, MIN_SAFE_INTEGER } = Number;
function isInt32(value) {
  return value === (value | 0);
function isUint32(value) {
  return value === (value >>> 0);
const octalReg = /^[0-7]+$/;
const modeDesc = 'must be a 32-bit unsigned integer or an octal string';
 * Parse and validate values that will be converted into mode_t (the S_*
 * constants). Only valid numbers and octal strings are allowed. They could be
 * converted to 32-bit unsigned integers or non-negative signed integers in the
 * C++ land, but any value higher than 0o777 will result in platform-specific
 * behaviors.
 * @param {*} value Values to be validated
 * @param {string} name Name of the argument
 * @param {number} def If specified, will be returned for invalid values
 * @returns {number}
function parseMode(value, name, def) {
  if (isUint32(value)) {
    return value;
  if (typeof value === 'number') {
    validateInt32(value, name, 0, 2 ** 32 - 1);
  if (typeof value === 'string') {
    if (!octalReg.test(value)) {
      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc);
    }
    return parseInt(value, 8);
  if (def !== undefined && value == null) {
    return def;
  throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc);
const validateInteger = hideStackFrames(
  (value, name, min = MIN_SAFE_INTEGER, max = MAX_SAFE_INTEGER) => {
    if (typeof value !== 'number')
      throw new ERR_INVALID_ARG_TYPE(name, 'number', value);
    if (!Number.isInteger(value))
      throw new ERR_OUT_OF_RANGE(name, 'an integer', value);
    if (value < min || value > max)
      throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
const validateInt32 = hideStackFrames(
  (value, name, min = -2147483648, max = 2147483647) => {
    // The defaults for min and max correspond to the limits of 32-bit integers.
    if (!isInt32(value)) {
      if (typeof value !== 'number') {
        throw new ERR_INVALID_ARG_TYPE(name, 'number', value);
      }
      if (!Number.isInteger(value)) {
        throw new ERR_OUT_OF_RANGE(name, 'an integer', value);
      }
      throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
    }
    if (value < min || value > max) {
      throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
    }
const validateUint32 = hideStackFrames((value, name, positive) => {
  if (!isUint32(value)) {
    if (typeof value !== 'number') {
      throw new ERR_INVALID_ARG_TYPE(name, 'number', value);
    }
    if (!Number.isInteger(value)) {
      throw new ERR_OUT_OF_RANGE(name, 'an integer', value);
    }
    const min = positive ? 1 : 0;
    // 2 ** 32 === 4294967296
    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && < 4294967296`, value);
  if (positive && value === 0) {
    throw new ERR_OUT_OF_RANGE(name, '>= 1 && < 4294967296', value);
function validateString(value, name) {
  if (typeof value !== 'string')
    throw new ERR_INVALID_ARG_TYPE(name, 'string', value);
function validateNumber(value, name) {
  if (typeof value !== 'number')
    throw new ERR_INVALID_ARG_TYPE(name, 'number', value);
function validateSignalName(signal, name = 'signal') {
  if (typeof signal !== 'string')
    throw new ERR_INVALID_ARG_TYPE(name, 'string', signal);
  if (signals[signal] === undefined) {
    if (signals[signal.toUpperCase()] !== undefined) {
      throw new ERR_UNKNOWN_SIGNAL(signal +
                                   ' (signals must use all capital letters)');
    }
    throw new ERR_UNKNOWN_SIGNAL(signal);
// TODO(BridgeAR): We have multiple validation functions that call
// `require('internal/utils').toBuf()` before validating for array buffer views.
// Those should likely also be consolidated in here.
const validateBuffer = hideStackFrames((buffer, name = 'buffer') => {
  if (!isArrayBufferView(buffer)) {
    throw new ERR_INVALID_ARG_TYPE(name,
                                   ['Buffer', 'TypedArray', 'DataView'],
                                   buffer);
module.exports = {
  isInt32,
  isUint32,
  parseMode,
  validateBuffer,
  validateInteger,
  validateInt32,
  validateUint32,
  validateString,
  validateNumber,
  validateSignalName
'use strict';
const { Buffer } = require('buffer');
const { FastBuffer } = require('internal/buffer');
const {
  WriteWrap,
  kReadBytesOrError,
  kArrayBufferOffset,
  kBytesWritten,
  kLastWriteWasAsync,
  streamBaseState
} = internalBinding('stream_wrap');
const { UV_EOF } = internalBinding('uv');
const {
  codes: {
    ERR_INVALID_CALLBACK
  },
  errnoException
} = require('internal/errors');
const { owner_symbol } = require('internal/async_hooks').symbols;
const {
  kTimeout,
  setUnrefTimeout,
  getTimerDuration
} = require('internal/timers');
const { clearTimeout } = require('timers');
const kMaybeDestroy = Symbol('kMaybeDestroy');
const kUpdateTimer = Symbol('kUpdateTimer');
const kAfterAsyncWrite = Symbol('kAfterAsyncWrite');
const kHandle = Symbol('kHandle');
const kSession = Symbol('kSession');
const debug = require('internal/util/debuglog').debuglog('stream');
function handleWriteReq(req, data, encoding) {
  const { handle } = req;
  switch (encoding) {
    case 'buffer':
    {
      const ret = handle.writeBuffer(req, data);
      if (streamBaseState[kLastWriteWasAsync])
        req.buffer = data;
      return ret;
    }
    case 'latin1':
    case 'binary':
      return handle.writeLatin1String(req, data);
    case 'utf8':
    case 'utf-8':
      return handle.writeUtf8String(req, data);
    case 'ascii':
      return handle.writeAsciiString(req, data);
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return handle.writeUcs2String(req, data);
    default:
    {
      const buffer = Buffer.from(data, encoding);
      const ret = handle.writeBuffer(req, buffer);
      if (streamBaseState[kLastWriteWasAsync])
        req.buffer = buffer;
      return ret;
    }
function onWriteComplete(status) {
  debug('onWriteComplete', status, this.error);
  const stream = this.handle[owner_symbol];
  if (stream.destroyed) {
    if (typeof this.callback === 'function')
      this.callback(null);
    return;
  if (status < 0) {
    const ex = errnoException(status, 'write', this.error);
    stream.destroy(ex, this.callback);
    return;
  stream[kUpdateTimer]();
  stream[kAfterAsyncWrite](this);
  if (typeof this.callback === 'function')
    this.callback(null);
function createWriteWrap(handle) {
  const req = new WriteWrap();
  req.handle = handle;
  req.oncomplete = onWriteComplete;
  req.async = false;
  req.bytes = 0;
  req.buffer = null;
  return req;
function writevGeneric(self, data, cb) {
  const req = createWriteWrap(self[kHandle]);
  const allBuffers = data.allBuffers;
  var chunks;
  var i;
  if (allBuffers) {
    chunks = data;
    for (i = 0; i < data.length; i++)
      data[i] = data[i].chunk;
  } else {
    chunks = new Array(data.length << 1);
    for (i = 0; i < data.length; i++) {
      var entry = data[i];
      chunks[i * 2] = entry.chunk;
      chunks[i * 2 + 1] = entry.encoding;
    }
  const err = req.handle.writev(req, chunks, allBuffers);
  // Retain chunks
  if (err === 0) req._chunks = chunks;
  afterWriteDispatched(self, req, err, cb);
  return req;
function writeGeneric(self, data, encoding, cb) {
  const req = createWriteWrap(self[kHandle]);
  const err = handleWriteReq(req, data, encoding);
  afterWriteDispatched(self, req, err, cb);
  return req;
function afterWriteDispatched(self, req, err, cb) {
  req.bytes = streamBaseState[kBytesWritten];
  req.async = !!streamBaseState[kLastWriteWasAsync];
  if (err !== 0)
    return self.destroy(errnoException(err, 'write', req.error), cb);
  if (!req.async) {
    cb();
  } else {
    req.callback = cb;
function onStreamRead(arrayBuffer) {
  const nread = streamBaseState[kReadBytesOrError];
  const handle = this;
  const stream = this[owner_symbol];
  stream[kUpdateTimer]();
  if (nread > 0 && !stream.destroyed) {
    const offset = streamBaseState[kArrayBufferOffset];
    const buf = new FastBuffer(arrayBuffer, offset, nread);
    if (!stream.push(buf)) {
      handle.reading = false;
      if (!stream.destroyed) {
        const err = handle.readStop();
        if (err)
          stream.destroy(errnoException(err, 'read'));
      }
    }
    return;
  if (nread === 0) {
    return;
  if (nread !== UV_EOF) {
    return stream.destroy(errnoException(nread, 'read'));
  // Defer this until we actually emit end
  if (stream._readableState.endEmitted) {
    if (stream[kMaybeDestroy])
      stream[kMaybeDestroy]();
  } else {
    if (stream[kMaybeDestroy])
      stream.on('end', stream[kMaybeDestroy]);
    // Push a null to signal the end of data.
    // Do it before `maybeDestroy` for correct order of events:
    // `end` -> `close`
    stream.push(null);
    stream.read(0);
function setStreamTimeout(msecs, callback) {
  if (this.destroyed)
    return;
  this.timeout = msecs;
  // Type checking identical to timers.enroll()
  msecs = getTimerDuration(msecs, 'msecs');
  // Attempt to clear an existing timer in both cases -
  //  even if it will be rescheduled we don't want to leak an existing timer.
  clearTimeout(this[kTimeout]);
  if (msecs === 0) {
    if (callback !== undefined) {
      if (typeof callback !== 'function')
        throw new ERR_INVALID_CALLBACK(callback);
      this.removeListener('timeout', callback);
    }
  } else {
    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this), msecs);
    if (this[kSession]) this[kSession][kUpdateTimer]();
    if (callback !== undefined) {
      if (typeof callback !== 'function')
        throw new ERR_INVALID_CALLBACK(callback);
      this.once('timeout', callback);
    }
  return this;
module.exports = {
  createWriteWrap,
  writevGeneric,
  writeGeneric,
  onStreamRead,
  kAfterAsyncWrite,
  kMaybeDestroy,
  kUpdateTimer,
  kHandle,
  kSession,
  setStreamTimeout
'use strict';
const { Object, SafePromise } = primordials;
const { isModuleNamespaceObject } = require('internal/util/types');
const { URL } = require('internal/url');
const { isContext } = internalBinding('contextify');
const {
  ERR_INVALID_ARG_TYPE,
  ERR_VM_MODULE_ALREADY_LINKED,
  ERR_VM_MODULE_DIFFERENT_CONTEXT,
  ERR_VM_MODULE_LINKING_ERRORED,
  ERR_VM_MODULE_NOT_LINKED,
  ERR_VM_MODULE_NOT_MODULE,
  ERR_VM_MODULE_STATUS,
} = require('internal/errors').codes;
const {
  getConstructorOf,
  customInspectSymbol,
  emitExperimentalWarning
} = require('internal/util');
const {
  validateInt32,
  validateUint32,
  validateString
} = require('internal/validators');
const binding = internalBinding('module_wrap');
const {
  ModuleWrap,
  kUninstantiated,
  kInstantiating,
  kInstantiated,
  kEvaluating,
  kEvaluated,
  kErrored,
} = binding;
const STATUS_MAP = {
  [kUninstantiated]: 'uninstantiated',
  [kInstantiating]: 'instantiating',
  [kInstantiated]: 'instantiated',
  [kEvaluating]: 'evaluating',
  [kEvaluated]: 'evaluated',
  [kErrored]: 'errored',
let globalModuleId = 0;
const perContextModuleId = new WeakMap();
const wrapMap = new WeakMap();
const dependencyCacheMap = new WeakMap();
const linkingStatusMap = new WeakMap();
// ModuleWrap -> vm.SourceTextModule
const wrapToModuleMap = new WeakMap();
const defaultModuleName = 'vm:module';
// TODO(devsnek): figure out AbstractModule class or protocol
class SourceTextModule {
  constructor(src, options = {}) {
    emitExperimentalWarning('vm.SourceTextModule');
    validateString(src, 'src');
    if (typeof options !== 'object' || options === null)
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    const {
      context,
      lineOffset = 0,
      columnOffset = 0,
      initializeImportMeta,
      importModuleDynamically,
    } = options;
    if (context !== undefined) {
      if (typeof context !== 'object' || context === null) {
        throw new ERR_INVALID_ARG_TYPE('options.context', 'Object', context);
      }
      if (!isContext(context)) {
        throw new ERR_INVALID_ARG_TYPE('options.context', 'vm.Context',
                                       context);
      }
    }
    let { url } = options;
    if (url !== undefined) {
      validateString(url, 'options.url');
      url = new URL(url).href;
    } else if (context === undefined) {
      url = `${defaultModuleName}(${globalModuleId++})`;
    } else if (perContextModuleId.has(context)) {
      const curId = perContextModuleId.get(context);
      url = `${defaultModuleName}(${curId})`;
      perContextModuleId.set(context, curId + 1);
    } else {
      url = `${defaultModuleName}(0)`;
      perContextModuleId.set(context, 1);
    }
    validateInt32(lineOffset, 'options.lineOffset');
    validateInt32(columnOffset, 'options.columnOffset');
    if (initializeImportMeta !== undefined &&
        typeof initializeImportMeta !== 'function') {
      throw new ERR_INVALID_ARG_TYPE(
        'options.initializeImportMeta', 'function', initializeImportMeta);
    }
    if (importModuleDynamically !== undefined &&
        typeof importModuleDynamically !== 'function') {
      throw new ERR_INVALID_ARG_TYPE(
        'options.importModuleDynamically', 'function', importModuleDynamically);
    }
    const wrap = new ModuleWrap(src, url, context, lineOffset, columnOffset);
    wrapMap.set(this, wrap);
    linkingStatusMap.set(this, 'unlinked');
    wrapToModuleMap.set(wrap, this);
    binding.callbackMap.set(wrap, {
      initializeImportMeta,
      importModuleDynamically: importModuleDynamically ? async (...args) => {
        const m = await importModuleDynamically(...args);
        if (isModuleNamespaceObject(m)) {
          return m;
        }
        if (!m || !wrapMap.has(m))
          throw new ERR_VM_MODULE_NOT_MODULE();
        const childLinkingStatus = linkingStatusMap.get(m);
        if (childLinkingStatus === 'errored')
          throw m.error;
        return m.namespace;
      } : undefined,
    });
    Object.defineProperties(this, {
      url: { value: url, enumerable: true },
      context: { value: context, enumerable: true },
    });
  get linkingStatus() {
    return linkingStatusMap.get(this);
  get status() {
    return STATUS_MAP[wrapMap.get(this).getStatus()];
  get namespace() {
    const wrap = wrapMap.get(this);
    if (wrap.getStatus() < kInstantiated)
      throw new ERR_VM_MODULE_STATUS(
        'must not be uninstantiated or instantiating'
      );
    return wrap.namespace();
  get dependencySpecifiers() {
    let deps = dependencyCacheMap.get(this);
    if (deps !== undefined)
      return deps;
    deps = wrapMap.get(this).getStaticDependencySpecifiers();
    Object.freeze(deps);
    dependencyCacheMap.set(this, deps);
    return deps;
  get error() {
    const wrap = wrapMap.get(this);
    if (wrap.getStatus() !== kErrored)
      throw new ERR_VM_MODULE_STATUS('must be errored');
    return wrap.getError();
  async link(linker) {
    if (typeof linker !== 'function')
      throw new ERR_INVALID_ARG_TYPE('linker', 'function', linker);
    if (linkingStatusMap.get(this) !== 'unlinked')
      throw new ERR_VM_MODULE_ALREADY_LINKED();
    const wrap = wrapMap.get(this);
    if (wrap.getStatus() !== kUninstantiated)
      throw new ERR_VM_MODULE_STATUS('must be uninstantiated');
    linkingStatusMap.set(this, 'linking');
    const promises = wrap.link(async (specifier) => {
      const m = await linker(specifier, this);
      if (!m || !wrapMap.has(m))
        throw new ERR_VM_MODULE_NOT_MODULE();
      if (m.context !== this.context)
        throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();
      const childLinkingStatus = linkingStatusMap.get(m);
      if (childLinkingStatus === 'errored')
        throw new ERR_VM_MODULE_LINKING_ERRORED();
      if (childLinkingStatus === 'unlinked')
        await m.link(linker);
      return wrapMap.get(m);
    });
    try {
      if (promises !== undefined)
        await SafePromise.all(promises);
      linkingStatusMap.set(this, 'linked');
    } catch (err) {
      linkingStatusMap.set(this, 'errored');
      throw err;
    }
  instantiate() {
    const wrap = wrapMap.get(this);
    const status = wrap.getStatus();
    if (status === kInstantiating || status === kEvaluating)
      throw new ERR_VM_MODULE_STATUS('must not be instantiating or evaluating');
    if (linkingStatusMap.get(this) !== 'linked')
      throw new ERR_VM_MODULE_NOT_LINKED();
    wrap.instantiate();
  async evaluate(options = {}) {
    if (typeof options !== 'object' || options === null) {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    let timeout = options.timeout;
    if (timeout === undefined) {
      timeout = -1;
    } else {
      validateUint32(timeout, 'options.timeout', true);
    }
    const { breakOnSigint = false } = options;
    if (typeof breakOnSigint !== 'boolean') {
      throw new ERR_INVALID_ARG_TYPE('options.breakOnSigint', 'boolean',
                                     breakOnSigint);
    }
    const wrap = wrapMap.get(this);
    const status = wrap.getStatus();
    if (status !== kInstantiated &&
        status !== kEvaluated &&
        status !== kErrored) {
      throw new ERR_VM_MODULE_STATUS(
        'must be one of instantiated, evaluated, and errored'
      );
    }
    const result = wrap.evaluate(timeout, breakOnSigint);
    return { result, __proto__: null };
  [customInspectSymbol](depth, options) {
    let ctor = getConstructorOf(this);
    ctor = ctor === null ? SourceTextModule : ctor;
    if (typeof depth === 'number' && depth < 0)
      return options.stylize(`[${ctor.name}]`, 'special');
    const o = Object.create({ constructor: ctor });
    o.status = this.status;
    o.linkingStatus = this.linkingStatus;
    o.url = this.url;
    o.context = this.context;
    return require('internal/util/inspect').inspect(o, options);
module.exports = {
  SourceTextModule,
  wrapToModuleMap,
  wrapMap,
  linkingStatusMap,
'use strict';
/* global SharedArrayBuffer */
const { Object } = primordials;
const EventEmitter = require('events');
const assert = require('internal/assert');
const path = require('path');
const {
  ERR_WORKER_PATH,
  ERR_WORKER_UNSERIALIZABLE_ERROR,
  ERR_WORKER_UNSUPPORTED_EXTENSION,
  ERR_WORKER_INVALID_EXEC_ARGV,
  ERR_INVALID_ARG_TYPE,
} = require('internal/errors').codes;
const { validateString } = require('internal/validators');
const { getOptionValue } = require('internal/options');
const workerIo = require('internal/worker/io');
const {
  drainMessagePort,
  MessageChannel,
  messageTypes,
  kPort,
  kIncrementsPortRef,
  kWaitingStreams,
  kStdioWantsMoreDataCallback,
  setupPortReferencing,
  ReadableWorkerStdio,
  WritableWorkerStdio
} = workerIo;
const { deserializeError } = require('internal/error-serdes');
const { pathToFileURL } = require('url');
const {
  ownsProcessState,
  isMainThread,
  threadId,
  Worker: WorkerImpl,
} = internalBinding('worker');
const kHandle = Symbol('kHandle');
const kPublicPort = Symbol('kPublicPort');
const kDispose = Symbol('kDispose');
const kOnExit = Symbol('kOnExit');
const kOnMessage = Symbol('kOnMessage');
const kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');
const kOnErrorMessage = Symbol('kOnErrorMessage');
const kParentSideStdio = Symbol('kParentSideStdio');
const SHARE_ENV = Symbol.for('nodejs.worker_threads.SHARE_ENV');
const debug = require('internal/util/debuglog').debuglog('worker');
let cwdCounter;
if (isMainThread) {
  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));
  const originalChdir = process.chdir;
  process.chdir = function(path) {
    Atomics.add(cwdCounter, 0, 1);
    originalChdir(path);
  };
class Worker extends EventEmitter {
  constructor(filename, options = {}) {
    super();
    debug(`[${threadId}] create new worker`, filename, options);
    validateString(filename, 'filename');
    if (options.execArgv && !Array.isArray(options.execArgv)) {
      throw new ERR_INVALID_ARG_TYPE('options.execArgv',
                                     'array',
                                     options.execArgv);
    }
    if (!options.eval) {
      if (!path.isAbsolute(filename) && !/^\.\.?[\\/]/.test(filename)) {
        throw new ERR_WORKER_PATH(filename);
      }
      filename = path.resolve(filename);
      const ext = path.extname(filename);
      if (ext !== '.js' && ext !== '.mjs') {
        throw new ERR_WORKER_UNSUPPORTED_EXTENSION(ext);
      }
    }
    let env;
    if (typeof options.env === 'object' && options.env !== null) {
      env = Object.create(null);
      for (const [ key, value ] of Object.entries(options.env))
        env[key] = `${value}`;
    } else if (options.env == null) {
      env = process.env;
    } else if (options.env !== SHARE_ENV) {
      throw new ERR_INVALID_ARG_TYPE(
        'options.env',
        ['object', 'undefined', 'null', 'worker_threads.SHARE_ENV'],
        options.env);
    }
    const url = options.eval ? null : pathToFileURL(filename);
    // Set up the C++ handle for the worker, as well as some internal wiring.
    this[kHandle] = new WorkerImpl(url, options.execArgv);
    if (this[kHandle].invalidExecArgv) {
      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);
    }
    if (env === process.env) {
      // This may be faster than manually cloning the object in C++, especially
      // when recursively spawning Workers.
      this[kHandle].cloneParentEnvVars();
    } else if (env !== undefined) {
      this[kHandle].setEnvVars(env);
    }
    this[kHandle].onexit = (code) => this[kOnExit](code);
    this[kPort] = this[kHandle].messagePort;
    this[kPort].on('message', (data) => this[kOnMessage](data));
    this[kPort].start();
    this[kPort].unref();
    this[kPort][kWaitingStreams] = 0;
    debug(`[${threadId}] created Worker with ID ${this.threadId}`);
    let stdin = null;
    if (options.stdin)
      stdin = new WritableWorkerStdio(this[kPort], 'stdin');
    const stdout = new ReadableWorkerStdio(this[kPort], 'stdout');
    if (!options.stdout) {
      stdout[kIncrementsPortRef] = false;
      pipeWithoutWarning(stdout, process.stdout);
    }
    const stderr = new ReadableWorkerStdio(this[kPort], 'stderr');
    if (!options.stderr) {
      stderr[kIncrementsPortRef] = false;
      pipeWithoutWarning(stderr, process.stderr);
    }
    this[kParentSideStdio] = { stdin, stdout, stderr };
    const { port1, port2 } = new MessageChannel();
    this[kPublicPort] = port1;
    this[kPublicPort].on('message', (message) => this.emit('message', message));
    setupPortReferencing(this[kPublicPort], this, 'message');
    this[kPort].postMessage({
      type: messageTypes.LOAD_SCRIPT,
      filename,
      doEval: !!options.eval,
      cwdCounter: cwdCounter || workerIo.sharedCwdCounter,
      workerData: options.workerData,
      publicPort: port2,
      manifestSrc: getOptionValue('--experimental-policy') ?
        require('internal/process/policy').src :
        null,
      hasStdin: !!options.stdin
    }, [port2]);
    // Actually start the new thread now that everything is in place.
    this[kHandle].startThread();
  [kOnExit](code) {
    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);
    drainMessagePort(this[kPublicPort]);
    drainMessagePort(this[kPort]);
    this[kDispose]();
    this.emit('exit', code);
    this.removeAllListeners();
  [kOnCouldNotSerializeErr]() {
    this.emit('error', new ERR_WORKER_UNSERIALIZABLE_ERROR());
  [kOnErrorMessage](serialized) {
    // This is what is called for uncaught exceptions.
    const error = deserializeError(serialized);
    this.emit('error', error);
  [kOnMessage](message) {
    switch (message.type) {
      case messageTypes.UP_AND_RUNNING:
        return this.emit('online');
      case messageTypes.COULD_NOT_SERIALIZE_ERROR:
        return this[kOnCouldNotSerializeErr]();
      case messageTypes.ERROR_MESSAGE:
        return this[kOnErrorMessage](message.error);
      case messageTypes.STDIO_PAYLOAD:
      {
        const { stream, chunk, encoding } = message;
        return this[kParentSideStdio][stream].push(chunk, encoding);
      }
      case messageTypes.STDIO_WANTS_MORE_DATA:
      {
        const { stream } = message;
        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();
      }
    }
    assert.fail(`Unknown worker message type ${message.type}`);
  [kDispose]() {
    this[kHandle].onexit = null;
    this[kHandle] = null;
    this[kPort] = null;
    this[kPublicPort] = null;
    const { stdout, stderr } = this[kParentSideStdio];
    if (!stdout._readableState.ended) {
      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);
      stdout.push(null);
    }
    if (!stderr._readableState.ended) {
      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);
      stderr.push(null);
    }
  postMessage(...args) {
    if (this[kPublicPort] === null) return;
    this[kPublicPort].postMessage(...args);
  terminate(callback) {
    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);
    if (typeof callback === 'function') {
      process.emitWarning(
        'Passing a callback to worker.terminate() is deprecated. ' +
        'It returns a Promise instead.',
        'DeprecationWarning', 'DEP0132');
      if (this[kHandle] === null) return Promise.resolve();
      this.once('exit', (exitCode) => callback(null, exitCode));
    }
    if (this[kHandle] === null) return Promise.resolve();
    this[kHandle].stopThread();
    // Do not use events.once() here, because the 'exit' event will always be
    // emitted regardless of any errors, and the point is to only resolve
    // once the thread has actually stopped.
    return new Promise((resolve) => {
      this.once('exit', resolve);
    });
  ref() {
    if (this[kHandle] === null) return;
    this[kHandle].ref();
    this[kPublicPort].ref();
  unref() {
    if (this[kHandle] === null) return;
    this[kHandle].unref();
    this[kPublicPort].unref();
  get threadId() {
    if (this[kHandle] === null) return -1;
    return this[kHandle].threadId;
  get stdin() {
    return this[kParentSideStdio].stdin;
  get stdout() {
    return this[kParentSideStdio].stdout;
  get stderr() {
    return this[kParentSideStdio].stderr;
function pipeWithoutWarning(source, dest) {
  const sourceMaxListeners = source._maxListeners;
  const destMaxListeners = dest._maxListeners;
  source.setMaxListeners(Infinity);
  dest.setMaxListeners(Infinity);
  source.pipe(dest);
  source._maxListeners = sourceMaxListeners;
  dest._maxListeners = destMaxListeners;
module.exports = {
  ownsProcessState,
  isMainThread,
  SHARE_ENV,
  threadId,
  Worker,
'use strict';
const { Object } = primordials;
const {
  handle_onclose: handleOnCloseSymbol,
  oninit: onInitSymbol,
  no_message_symbol: noMessageSymbol
} = internalBinding('symbols');
const {
  MessagePort,
  MessageChannel,
  drainMessagePort,
  moveMessagePortToContext,
  receiveMessageOnPort: receiveMessageOnPort_,
  stopMessagePort
} = internalBinding('messaging');
const {
  threadId,
  getEnvMessagePort
} = internalBinding('worker');
const { Readable, Writable } = require('stream');
const EventEmitter = require('events');
const { inspect } = require('internal/util/inspect');
const debug = require('internal/util/debuglog').debuglog('worker');
const kIncrementsPortRef = Symbol('kIncrementsPortRef');
const kName = Symbol('kName');
const kOnMessageListener = Symbol('kOnMessageListener');
const kPort = Symbol('kPort');
const kWaitingStreams = Symbol('kWaitingStreams');
const kWritableCallbacks = Symbol('kWritableCallbacks');
const kStartedReading = Symbol('kStartedReading');
const kStdioWantsMoreDataCallback = Symbol('kStdioWantsMoreDataCallback');
const messageTypes = {
  UP_AND_RUNNING: 'upAndRunning',
  COULD_NOT_SERIALIZE_ERROR: 'couldNotSerializeError',
  ERROR_MESSAGE: 'errorMessage',
  STDIO_PAYLOAD: 'stdioPayload',
  STDIO_WANTS_MORE_DATA: 'stdioWantsMoreData',
  LOAD_SCRIPT: 'loadScript'
// We have to mess with the MessagePort prototype a bit, so that a) we can make
// it inherit from EventEmitter, even though it is a C++ class, and b) we do
// not provide methods that are not present in the Browser and not documented
// on our side (e.g. hasRef).
// Save a copy of the original set of methods as a shallow clone.
const MessagePortPrototype = Object.create(
  Object.getPrototypeOf(MessagePort.prototype),
  Object.getOwnPropertyDescriptors(MessagePort.prototype));
// Set up the new inheritance chain.
Object.setPrototypeOf(MessagePort, EventEmitter);
Object.setPrototypeOf(MessagePort.prototype, EventEmitter.prototype);
// Copy methods that are inherited from HandleWrap, because
// changing the prototype of MessagePort.prototype implicitly removed them.
MessagePort.prototype.ref = MessagePortPrototype.ref;
MessagePort.prototype.unref = MessagePortPrototype.unref;
// A communication channel consisting of a handle (that wraps around an
// uv_async_t) which can receive information from other threads and emits
// .onmessage events, and a function used for sending data to a MessagePort
// in some other thread.
MessagePort.prototype[kOnMessageListener] = function onmessage(event) {
  if (event.data && event.data.type !== messageTypes.STDIO_WANTS_MORE_DATA)
    debug(`[${threadId}] received message`, event);
  // Emit the deserialized object to userland.
  this.emit('message', event.data);
// This is for compatibility with the Web's MessagePort API. It makes sense to
// provide it as an `EventEmitter` in Node.js, but if somebody overrides
// `onmessage`, we'll switch over to the Web API model.
Object.defineProperty(MessagePort.prototype, 'onmessage', {
  enumerable: true,
  configurable: true,
  get() {
    return this[kOnMessageListener];
  },
  set(value) {
    this[kOnMessageListener] = value;
    if (typeof value === 'function') {
      this.ref();
      MessagePortPrototype.start.call(this);
    } else {
      this.unref();
      stopMessagePort(this);
    }
// This is called from inside the `MessagePort` constructor.
function oninit() {
  setupPortReferencing(this, this, 'message');
Object.defineProperty(MessagePort.prototype, onInitSymbol, {
  enumerable: true,
  writable: false,
  value: oninit
// This is called after the underlying `uv_async_t` has been closed.
function onclose() {
  this.emit('close');
Object.defineProperty(MessagePort.prototype, handleOnCloseSymbol, {
  enumerable: false,
  writable: false,
  value: onclose
MessagePort.prototype.close = function(cb) {
  if (typeof cb === 'function')
    this.once('close', cb);
  MessagePortPrototype.close.call(this);
Object.defineProperty(MessagePort.prototype, inspect.custom, {
  enumerable: false,
  writable: false,
  value: function inspect() {  // eslint-disable-line func-name-matching
    let ref;
    try {
      // This may throw when `this` does not refer to a native object,
      // e.g. when accessing the prototype directly.
      ref = MessagePortPrototype.hasRef.call(this);
    } catch { return this; }
    return Object.assign(Object.create(MessagePort.prototype),
                         ref === undefined ? {
                           active: false,
                         } : {
                           active: true,
                           refed: ref
                         },
                         this);
function setupPortReferencing(port, eventEmitter, eventName) {
  // Keep track of whether there are any workerMessage listeners:
  // If there are some, ref() the channel so it keeps the event loop alive.
  // If there are none or all are removed, unref() the channel so the worker
  // can shutdown gracefully.
  port.unref();
  eventEmitter.on('newListener', (name) => {
    if (name === eventName && eventEmitter.listenerCount(eventName) === 0) {
      port.ref();
      MessagePortPrototype.start.call(port);
    }
  });
  eventEmitter.on('removeListener', (name) => {
    if (name === eventName && eventEmitter.listenerCount(eventName) === 0) {
      stopMessagePort(port);
      port.unref();
    }
  });
class ReadableWorkerStdio extends Readable {
  constructor(port, name) {
    super();
    this[kPort] = port;
    this[kName] = name;
    this[kIncrementsPortRef] = true;
    this[kStartedReading] = false;
    this.on('end', () => {
      if (this[kStartedReading] && this[kIncrementsPortRef]) {
        if (--this[kPort][kWaitingStreams] === 0)
          this[kPort].unref();
      }
    });
  _read() {
    if (!this[kStartedReading] && this[kIncrementsPortRef]) {
      this[kStartedReading] = true;
      if (this[kPort][kWaitingStreams]++ === 0)
        this[kPort].ref();
    }
    this[kPort].postMessage({
      type: messageTypes.STDIO_WANTS_MORE_DATA,
      stream: this[kName]
    });
class WritableWorkerStdio extends Writable {
  constructor(port, name) {
    super({ decodeStrings: false });
    this[kPort] = port;
    this[kName] = name;
    this[kWritableCallbacks] = [];
  _write(chunk, encoding, cb) {
    this[kPort].postMessage({
      type: messageTypes.STDIO_PAYLOAD,
      stream: this[kName],
      chunk,
      encoding
    });
    this[kWritableCallbacks].push(cb);
    if (this[kPort][kWaitingStreams]++ === 0)
      this[kPort].ref();
  _final(cb) {
    this[kPort].postMessage({
      type: messageTypes.STDIO_PAYLOAD,
      stream: this[kName],
      chunk: null
    });
    cb();
  [kStdioWantsMoreDataCallback]() {
    const cbs = this[kWritableCallbacks];
    this[kWritableCallbacks] = [];
    for (const cb of cbs)
      cb();
    if ((this[kPort][kWaitingStreams] -= cbs.length) === 0)
      this[kPort].unref();
function createWorkerStdio() {
  const port = getEnvMessagePort();
  port[kWaitingStreams] = 0;
  return {
    stdin: new ReadableWorkerStdio(port, 'stdin'),
    stdout: new WritableWorkerStdio(port, 'stdout'),
    stderr: new WritableWorkerStdio(port, 'stderr')
  };
function receiveMessageOnPort(port) {
  const message = receiveMessageOnPort_(port);
  if (message === noMessageSymbol) return undefined;
  return { message };
module.exports = {
  drainMessagePort,
  messageTypes,
  kPort,
  kIncrementsPortRef,
  kWaitingStreams,
  kStdioWantsMoreDataCallback,
  moveMessagePortToContext,
  MessagePort,
  MessageChannel,
  receiveMessageOnPort,
  setupPortReferencing,
  ReadableWorkerStdio,
  WritableWorkerStdio,
  createWorkerStdio
// LazyTransform is a special type of Transform stream that is lazily loaded.
// This is used for performance with bi-API-ship: when two APIs are available
// for the stream, one conventional and one non-conventional.
'use strict';
const { Object } = primordials;
const stream = require('stream');
const {
  getDefaultEncoding
} = require('internal/crypto/util');
module.exports = LazyTransform;
function LazyTransform(options) {
  this._options = options;
  this.writable = true;
  this.readable = true;
Object.setPrototypeOf(LazyTransform.prototype, stream.Transform.prototype);
Object.setPrototypeOf(LazyTransform, stream.Transform);
function makeGetter(name) {
  return function() {
    stream.Transform.call(this, this._options);
    this._writableState.decodeStrings = false;
    if (!this._options || !this._options.defaultEncoding) {
      this._writableState.defaultEncoding = getDefaultEncoding();
    }
    return this[name];
  };
function makeSetter(name) {
  return function(val) {
    Object.defineProperty(this, name, {
      value: val,
      enumerable: true,
      configurable: true,
      writable: true
    });
  };
Object.defineProperties(LazyTransform.prototype, {
  _readableState: {
    get: makeGetter('_readableState'),
    set: makeSetter('_readableState'),
    configurable: true,
    enumerable: true
  },
  _writableState: {
    get: makeGetter('_writableState'),
    set: makeSetter('_writableState'),
    configurable: true,
    enumerable: true
  },
  _transformState: {
    get: makeGetter('_transformState'),
    set: makeSetter('_transformState'),
    configurable: true,
    enumerable: true
'use strict';
const { Object } = primordials;
const finished = require('internal/streams/end-of-stream');
const kLastResolve = Symbol('lastResolve');
const kLastReject = Symbol('lastReject');
const kError = Symbol('error');
const kEnded = Symbol('ended');
const kLastPromise = Symbol('lastPromise');
const kHandlePromise = Symbol('handlePromise');
const kStream = Symbol('stream');
function createIterResult(value, done) {
  return { value, done };
function readAndResolve(iter) {
  const resolve = iter[kLastResolve];
  if (resolve !== null) {
    const data = iter[kStream].read();
    // We defer if data is null. We can be expecting either 'end' or 'error'.
    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
function onReadable(iter) {
  // We wait for the next tick, because it might
  // emit an error with `process.nextTick()`.
  process.nextTick(readAndResolve, iter);
function wrapForNext(lastPromise, iter) {
  return (resolve, reject) => {
    lastPromise.then(() => {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }
      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
const AsyncIteratorPrototype = Object.getPrototypeOf(
  Object.getPrototypeOf(async function* () {}).prototype);
const ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf({
  get stream() {
    return this[kStream];
  },
  next() {
    // If we have detected an error in the meanwhile
    // reject straight away.
    const error = this[kError];
    if (error !== null) {
      return Promise.reject(error);
    }
    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }
    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise((resolve, reject) => {
        process.nextTick(() => {
          if (this[kError]) {
            reject(this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    }
    // If we have multiple next() calls we will wait for the previous Promise to
    // finish. This logic is optimized to support for await loops, where next()
    // is only called once at a time.
    const lastPromise = this[kLastPromise];
    let promise;
    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // Fast path needed to support multiple this.push()
      // without triggering the next() queue.
      const data = this[kStream].read();
      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }
      promise = new Promise(this[kHandlePromise]);
    }
    this[kLastPromise] = promise;
    return promise;
  },
  return() {
    // destroy(err, cb) is a private API.
    // We can guarantee we have that here, because we control the
    // Readable class this is attached to.
    return new Promise((resolve, reject) => {
      this[kStream].destroy(null, (err) => {
        if (err) {
          reject(err);
          return;
        }
        resolve(createIterResult(undefined, true));
      });
    });
  },
}, AsyncIteratorPrototype);
const createReadableStreamAsyncIterator = (stream) => {
  const iterator = Object.create(ReadableStreamAsyncIteratorPrototype, {
    [kStream]: { value: stream, writable: true },
    [kLastResolve]: { value: null, writable: true },
    [kLastReject]: { value: null, writable: true },
    [kError]: { value: null, writable: true },
    [kEnded]: {
      value: stream._readableState.endEmitted,
      writable: true
    },
    // The function passed to new Promise is cached so we avoid allocating a new
    // closure at every run.
    [kHandlePromise]: {
      value: (resolve, reject) => {
        const data = iterator[kStream].read();
        if (data) {
          iterator[kLastPromise] = null;
          iterator[kLastResolve] = null;
          iterator[kLastReject] = null;
          resolve(createIterResult(data, false));
        } else {
          iterator[kLastResolve] = resolve;
          iterator[kLastReject] = reject;
        }
      },
      writable: true,
    },
  });
  iterator[kLastPromise] = null;
  finished(stream, { writable: false }, (err) => {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      const reject = iterator[kLastReject];
      // Reject if we are waiting for data in the Promise returned by next() and
      // store the error.
      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }
      iterator[kError] = err;
      return;
    }
    const resolve = iterator[kLastResolve];
    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }
    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
module.exports = createReadableStreamAsyncIterator;
'use strict';
const { Buffer } = require('buffer');
const { inspect } = require('internal/util/inspect');
function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
module.exports = class BufferList {
  constructor() {
    this.head = null;
    this.tail = null;
    this.length = 0;
  push(v) {
    const entry = { data: v, next: null };
    if (this.length > 0)
      this.tail.next = entry;
    else
      this.head = entry;
    this.tail = entry;
    ++this.length;
  unshift(v) {
    const entry = { data: v, next: this.head };
    if (this.length === 0)
      this.tail = entry;
    this.head = entry;
    ++this.length;
  shift() {
    if (this.length === 0)
      return;
    const ret = this.head.data;
    if (this.length === 1)
      this.head = this.tail = null;
    else
      this.head = this.head.next;
    --this.length;
    return ret;
  clear() {
    this.head = this.tail = null;
    this.length = 0;
  join(s) {
    if (this.length === 0)
      return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next)
      ret += s + p.data;
    return ret;
  concat(n) {
    if (this.length === 0)
      return Buffer.alloc(0);
    const ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  // Consumes a specified amount of bytes or characters from the buffered data.
  consume(n, hasStrings) {
    var ret;
    if (n < this.head.data.length) {
      // `slice` is the same for buffers and strings.
      ret = this.head.data.slice(0, n);
      this.head.data = this.head.data.slice(n);
    } else if (n === this.head.data.length) {
      // First chunk is a perfect match.
      ret = this.shift();
    } else {
      // Result spans more than one buffer.
      ret = hasStrings ? this._getString(n) : this._getBuffer(n);
    }
    return ret;
  first() {
    return this.head.data;
  // Consumes a specified amount of characters from the buffered data.
  _getString(n) {
    var p = this.head;
    var c = 1;
    var ret = p.data;
    n -= ret.length;
    while (p = p.next) {
      const str = p.data;
      const nb = (n > str.length ? str.length : n);
      if (nb === str.length)
        ret += str;
      else
        ret += str.slice(0, n);
      n -= nb;
      if (n === 0) {
        if (nb === str.length) {
          ++c;
          if (p.next)
            this.head = p.next;
          else
            this.head = this.tail = null;
        } else {
          this.head = p;
          p.data = str.slice(nb);
        }
        break;
      }
      ++c;
    }
    this.length -= c;
    return ret;
  // Consumes a specified amount of bytes from the buffered data.
  _getBuffer(n) {
    const ret = Buffer.allocUnsafe(n);
    var p = this.head;
    var c = 1;
    p.data.copy(ret);
    n -= p.data.length;
    while (p = p.next) {
      const buf = p.data;
      const nb = (n > buf.length ? buf.length : n);
      buf.copy(ret, ret.length - n, 0, nb);
      n -= nb;
      if (n === 0) {
        if (nb === buf.length) {
          ++c;
          if (p.next)
            this.head = p.next;
          else
            this.head = this.tail = null;
        } else {
          this.head = p;
          p.data = buf.slice(nb);
        }
        break;
      }
      ++c;
    }
    this.length -= c;
    return ret;
  // Make sure the linked list only shows the minimal necessary information.
  [inspect.custom](_, options) {
    return inspect(this, {
      ...options,
      // Only inspect one level.
      depth: 0,
      // It should not recurse.
      customInspect: false
    });
'use strict';
const { Duplex } = require('stream');
const kCallback = Symbol('Callback');
const kOtherSide = Symbol('Other');
class DuplexSocket extends Duplex {
  constructor() {
    super();
    this[kCallback] = null;
    this[kOtherSide] = null;
  _read() {
    const callback = this[kCallback];
    if (callback) {
      this[kCallback] = null;
      callback();
    }
  _write(chunk, encoding, callback) {
    this[kOtherSide][kCallback] = callback;
    this[kOtherSide].push(chunk);
  _final(callback) {
    this[kOtherSide].on('end', callback);
    this[kOtherSide].push(null);
class DuplexPair {
  constructor() {
    this.socket1 = new DuplexSocket();
    this.socket2 = new DuplexSocket();
    this.socket1[kOtherSide] = this.socket2;
    this.socket2[kOtherSide] = this.socket1;
module.exports = DuplexPair;
'use strict';
const { Object } = primordials;
const EE = require('events');
function Stream() {
  EE.call(this);
Object.setPrototypeOf(Stream.prototype, EE.prototype);
Object.setPrototypeOf(Stream, EE);
Stream.prototype.pipe = function(dest, options) {
  const source = this;
  function ondata(chunk) {
    if (dest.writable && dest.write(chunk) === false && source.pause) {
      source.pause();
    }
  source.on('data', ondata);
  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  dest.on('drain', ondrain);
  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;
    dest.end();
  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;
    if (typeof dest.destroy === 'function') dest.destroy();
  // Don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  source.on('error', onerror);
  dest.on('error', onerror);
  // Remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);
    source.removeListener('end', onend);
    source.removeListener('close', onclose);
    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);
    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);
    dest.removeListener('close', cleanup);
  source.on('end', cleanup);
  source.on('close', cleanup);
  dest.on('close', cleanup);
  dest.emit('pipe', source);
  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
module.exports = Stream;
'use strict';
// Undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  const readableDestroyed = this._readableState &&
    this._readableState.destroyed;
  const writableDestroyed = this._writableState &&
    this._writableState.destroyed;
  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }
    return this;
  // We set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks
  if (this._readableState) {
    this._readableState.destroyed = true;
  // If this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  this._destroy(err || null, (err) => {
    if (!cb && err) {
      if (!this._writableState) {
        process.nextTick(emitErrorAndCloseNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, this, err);
      } else {
        process.nextTick(emitCloseNT, this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, this);
    }
  });
  return this;
function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose)
    return;
  if (self._readableState && !self._readableState.emitClose)
    return;
  self.emit('close');
function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
function emitErrorNT(self, err) {
  self.emit('error', err);
function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  const rState = stream._readableState;
  const wState = stream._writableState;
  if ((rState && rState.autoDestroy) || (wState && wState.autoDestroy))
    stream.destroy(err);
  else
    stream.emit('error', err);
module.exports = {
  destroy,
  undestroy,
  errorOrDestroy
'use strict';
const { Math } = primordials;
const { ERR_INVALID_OPT_VALUE } = require('internal/errors').codes;
function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark :
    isDuplex ? options[duplexKey] : null;
function getHighWaterMark(state, options, duplexKey, isDuplex) {
  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
  if (hwm != null) {
    if (!Number.isInteger(hwm) || hwm < 0) {
      const name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }
    return Math.floor(hwm);
  // Default value
  return state.objectMode ? 16 : 16 * 1024;
module.exports = {
  getHighWaterMark
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
let eos;
const { once } = require('internal/util');
const {
  ERR_INVALID_CALLBACK,
  ERR_MISSING_ARGS,
  ERR_STREAM_DESTROYED
} = require('internal/errors').codes;
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  let closed = false;
  stream.on('close', () => {
    closed = true;
  });
  if (eos === undefined) eos = require('internal/streams/end-of-stream');
  eos(stream, { readable: reading, writable: writing }, (err) => {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  let destroyed = false;
  return (err) => {
    if (closed) return;
    if (destroyed) return;
    destroyed = true;
    // request.destroy just do .end - .abort is what we want
    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
function call(fn) {
  fn();
function pipe(from, to) {
  return from.pipe(to);
function popCallback(streams) {
  // Streams should never be an empty array. It should always contain at least
  // a single stream. Therefore optimize for the average case instead of
  // checking for length === 0 as well.
  if (typeof streams[streams.length - 1] !== 'function')
    throw new ERR_INVALID_CALLBACK(streams[streams.length - 1]);
  return streams.pop();
function pipeline(...streams) {
  const callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];
  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  let error;
  const destroys = streams.map(function(stream, i) {
    const reading = i < streams.length - 1;
    const writing = i > 0;
    return destroyer(stream, reading, writing, function(err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
module.exports = pipeline;
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';
const {
  ERR_INVALID_ARG_TYPE,
  ERR_STREAM_PREMATURE_CLOSE
} = require('internal/errors').codes;
const { once } = require('internal/util');
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
function eos(stream, opts, callback) {
  if (arguments.length === 2) {
    callback = opts;
    opts = {};
  } else if (opts == null) {
    opts = {};
  } else if (typeof opts !== 'object') {
    throw new ERR_INVALID_ARG_TYPE('opts', 'object', opts);
  if (typeof callback !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('callback', 'function', callback);
  callback = once(callback);
  let readable = opts.readable || (opts.readable !== false && stream.readable);
  let writable = opts.writable || (opts.writable !== false && stream.writable);
  const onlegacyfinish = () => {
    if (!stream.writable) onfinish();
  };
  var writableEnded = stream._writableState && stream._writableState.finished;
  const onfinish = () => {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };
  var readableEnded = stream._readableState && stream._readableState.endEmitted;
  const onend = () => {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };
  const onerror = (err) => {
    callback.call(stream, err);
  };
  const onclose = () => {
    let err;
    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended)
        err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended)
        err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };
  const onrequest = () => {
    stream.req.on('finish', onfinish);
  };
  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();
    else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) { // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function() {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
module.exports = eos;
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Constructs a Splay tree.  A splay tree is a self-balancing binary
 * search tree with the additional property that recently accessed
 * elements are quick to access again. It performs basic operations
 * such as insertion, look-up and removal in O(log(n)) amortized time.
 * @constructor
function SplayTree() {
 * Pointer to the root node of the tree.
 * @type {SplayTree.Node}
 * @private
SplayTree.prototype.root_ = null;
 * @return {boolean} Whether the tree is empty.
SplayTree.prototype.isEmpty = function() {
  return !this.root_;
 * Inserts a node into the tree with the specified key and value if
 * the tree does not already contain a node with the specified key. If
 * the value is inserted, it becomes the root of the tree.
 * @param {number} key Key to insert into the tree.
 * @param {*} value Value to insert into the tree.
SplayTree.prototype.insert = function(key, value) {
  if (this.isEmpty()) {
    this.root_ = new SplayTree.Node(key, value);
    return;
  // Splay on the key to move the last node on the search path for
  // the key to the root of the tree.
  this.splay_(key);
  if (this.root_.key == key) {
    return;
  var node = new SplayTree.Node(key, value);
  if (key > this.root_.key) {
    node.left = this.root_;
    node.right = this.root_.right;
    this.root_.right = null;
  } else {
    node.right = this.root_;
    node.left = this.root_.left;
    this.root_.left = null;
  this.root_ = node;
 * Removes a node with the specified key from the tree if the tree
 * contains a node with this key. The removed node is returned. If the
 * key is not found, an exception is thrown.
 * @param {number} key Key to find and remove from the tree.
 * @return {SplayTree.Node} The removed node.
SplayTree.prototype.remove = function(key) {
  if (this.isEmpty()) {
    throw Error('Key not found: ' + key);
  this.splay_(key);
  if (this.root_.key != key) {
    throw Error('Key not found: ' + key);
  var removed = this.root_;
  if (!this.root_.left) {
    this.root_ = this.root_.right;
  } else {
    var right = this.root_.right;
    this.root_ = this.root_.left;
    // Splay to make sure that the new root has an empty right child.
    this.splay_(key);
    // Insert the original right child as the right child of the new
    // root.
    this.root_.right = right;
  return removed;
 * Returns the node having the specified key or null if the tree doesn't contain
 * a node with the specified key.
 * @param {number} key Key to find in the tree.
 * @return {SplayTree.Node} Node having the specified key.
SplayTree.prototype.find = function(key) {
  if (this.isEmpty()) {
    return null;
  this.splay_(key);
  return this.root_.key == key ? this.root_ : null;
 * @return {SplayTree.Node} Node having the minimum key value.
SplayTree.prototype.findMin = function() {
  if (this.isEmpty()) {
    return null;
  var current = this.root_;
  while (current.left) {
    current = current.left;
  return current;
 * @return {SplayTree.Node} Node having the maximum key value.
SplayTree.prototype.findMax = function(opt_startNode) {
  if (this.isEmpty()) {
    return null;
  var current = opt_startNode || this.root_;
  while (current.right) {
    current = current.right;
  return current;
 * @return {SplayTree.Node} Node having the maximum key value that
 *     is less or equal to the specified key value.
SplayTree.prototype.findGreatestLessThan = function(key) {
  if (this.isEmpty()) {
    return null;
  // Splay on the key to move the node with the given key or the last
  // node on the search path to the top of the tree.
  this.splay_(key);
  // Now the result is either the root node or the greatest node in
  // the left subtree.
  if (this.root_.key <= key) {
    return this.root_;
  } else if (this.root_.left) {
    return this.findMax(this.root_.left);
  } else {
    return null;
 * @return {Array<*>} An array containing all the values of tree's nodes paired
 *     with keys.
SplayTree.prototype.exportKeysAndValues = function() {
  var result = [];
  this.traverse_(function(node) { result.push([node.key, node.value]); });
  return result;
 * @return {Array<*>} An array containing all the values of tree's nodes.
SplayTree.prototype.exportValues = function() {
  var result = [];
  this.traverse_(function(node) { result.push(node.value); });
  return result;
 * Perform the splay operation for the given key. Moves the node with
 * the given key to the top of the tree.  If no node has the given
 * key, the last node on the search path is moved to the top of the
 * tree. This is the simplified top-down splaying algorithm from:
 * "Self-adjusting Binary Search Trees" by Sleator and Tarjan
 * @param {number} key Key to splay the tree on.
 * @private
SplayTree.prototype.splay_ = function(key) {
  if (this.isEmpty()) {
    return;
  // Create a dummy node.  The use of the dummy node is a bit
  // counter-intuitive: The right child of the dummy node will hold
  // the L tree of the algorithm.  The left child of the dummy node
  // will hold the R tree of the algorithm.  Using a dummy node, left
  // and right will always be nodes and we avoid special cases.
  var dummy, left, right;
  dummy = left = right = new SplayTree.Node(null, null);
  var current = this.root_;
  while (true) {
    if (key < current.key) {
      if (!current.left) {
        break;
      }
      if (key < current.left.key) {
        // Rotate right.
        var tmp = current.left;
        current.left = tmp.right;
        tmp.right = current;
        current = tmp;
        if (!current.left) {
          break;
        }
      }
      // Link right.
      right.left = current;
      right = current;
      current = current.left;
    } else if (key > current.key) {
      if (!current.right) {
        break;
      }
      if (key > current.right.key) {
        // Rotate left.
        var tmp = current.right;
        current.right = tmp.left;
        tmp.left = current;
        current = tmp;
        if (!current.right) {
          break;
        }
      }
      // Link left.
      left.right = current;
      left = current;
      current = current.right;
    } else {
      break;
    }
  // Assemble.
  left.right = current.left;
  right.left = current.right;
  current.left = dummy.right;
  current.right = dummy.left;
  this.root_ = current;
 * Performs a preorder traversal of the tree.
 * @param {function(SplayTree.Node)} f Visitor function.
 * @private
SplayTree.prototype.traverse_ = function(f) {
  var nodesToVisit = [this.root_];
  while (nodesToVisit.length > 0) {
    var node = nodesToVisit.shift();
    if (node == null) {
      continue;
    }
    f(node);
    nodesToVisit.push(node.left);
    nodesToVisit.push(node.right);
 * Constructs a Splay tree node.
 * @param {number} key Key.
 * @param {*} value Value.
SplayTree.Node = function(key, value) {
  this.key = key;
  this.value = value;
 * @type {SplayTree.Node}
SplayTree.Node.prototype.left = null;
 * @type {SplayTree.Node}
SplayTree.Node.prototype.right = null;
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Constructs a mapper that maps addresses into code entries.
 * @constructor
function CodeMap() {
  /**
   * Dynamic code entries. Used for JIT compiled code.
   */
  this.dynamics_ = new SplayTree();
  /**
   * Name generator for entries having duplicate names.
   */
  this.dynamicsNameGen_ = new CodeMap.NameGenerator();
  /**
   * Static code entries. Used for statically compiled code.
   */
  this.statics_ = new SplayTree();
  /**
   * Libraries entries. Used for the whole static code libraries.
   */
  this.libraries_ = new SplayTree();
  /**
   * Map of memory pages occupied with static code.
   */
  this.pages_ = [];
 * The number of alignment bits in a page address.
CodeMap.PAGE_ALIGNMENT = 12;
 * Page size in bytes.
CodeMap.PAGE_SIZE =
    1 << CodeMap.PAGE_ALIGNMENT;
 * Adds a dynamic (i.e. moveable and discardable) code entry.
 * @param {number} start The starting address.
 * @param {CodeMap.CodeEntry} codeEntry Code entry object.
CodeMap.prototype.addCode = function(start, codeEntry) {
  this.deleteAllCoveredNodes_(this.dynamics_, start, start + codeEntry.size);
  this.dynamics_.insert(start, codeEntry);
 * Moves a dynamic code entry. Throws an exception if there is no dynamic
 * code entry with the specified starting address.
 * @param {number} from The starting address of the entry being moved.
 * @param {number} to The destination address.
CodeMap.prototype.moveCode = function(from, to) {
  var removedNode = this.dynamics_.remove(from);
  this.deleteAllCoveredNodes_(this.dynamics_, to, to + removedNode.value.size);
  this.dynamics_.insert(to, removedNode.value);
 * Discards a dynamic code entry. Throws an exception if there is no dynamic
 * code entry with the specified starting address.
 * @param {number} start The starting address of the entry being deleted.
CodeMap.prototype.deleteCode = function(start) {
  var removedNode = this.dynamics_.remove(start);
 * Adds a library entry.
 * @param {number} start The starting address.
 * @param {CodeMap.CodeEntry} codeEntry Code entry object.
CodeMap.prototype.addLibrary = function(
    start, codeEntry) {
  this.markPages_(start, start + codeEntry.size);
  this.libraries_.insert(start, codeEntry);
 * Adds a static code entry.
 * @param {number} start The starting address.
 * @param {CodeMap.CodeEntry} codeEntry Code entry object.
CodeMap.prototype.addStaticCode = function(
    start, codeEntry) {
  this.statics_.insert(start, codeEntry);
 * @private
CodeMap.prototype.markPages_ = function(start, end) {
  for (var addr = start; addr <= end;
       addr += CodeMap.PAGE_SIZE) {
    this.pages_[addr >>> CodeMap.PAGE_ALIGNMENT] = 1;
 * @private
CodeMap.prototype.deleteAllCoveredNodes_ = function(tree, start, end) {
  var to_delete = [];
  var addr = end - 1;
  while (addr >= start) {
    var node = tree.findGreatestLessThan(addr);
    if (!node) break;
    var start2 = node.key, end2 = start2 + node.value.size;
    if (start2 < end && start < end2) to_delete.push(start2);
    addr = start2 - 1;
  for (var i = 0, l = to_delete.length; i < l; ++i) tree.remove(to_delete[i]);
 * @private
CodeMap.prototype.isAddressBelongsTo_ = function(addr, node) {
  return addr >= node.key && addr < (node.key + node.value.size);
 * @private
CodeMap.prototype.findInTree_ = function(tree, addr) {
  var node = tree.findGreatestLessThan(addr);
  return node && this.isAddressBelongsTo_(addr, node) ? node : null;
 * Embedded builtins are located in the shared library but should be attributed
 * according to the dynamically generated code-create events.
 * @private
CodeMap.prototype.isIsolateIndependentBuiltin_ = function(entry) {
  return entry.type == "CPP" && /v8_\w*embedded_blob_/.test(entry.name);
 * Finds a code entry that contains the specified address. Both static and
 * dynamic code entries are considered. Returns the code entry and the offset
 * within the entry.
 * @param {number} addr Address.
CodeMap.prototype.findAddress = function(addr) {
  var pageAddr = addr >>> CodeMap.PAGE_ALIGNMENT;
  if (pageAddr in this.pages_) {
    // Static code entries can contain "holes" of unnamed code.
    // In this case, the whole library is assigned to this address.
    var result = this.findInTree_(this.statics_, addr);
    if (!result) {
      result = this.findInTree_(this.libraries_, addr);
      if (!result) return null;
    }
    if (!this.isIsolateIndependentBuiltin_(result.value)) {
      // Embedded builtins are handled in the following dynamic section.
      return { entry : result.value, offset : addr - result.key };
    }
  var min = this.dynamics_.findMin();
  var max = this.dynamics_.findMax();
  if (max != null && addr < (max.key + max.value.size) && addr >= min.key) {
    var dynaEntry = this.findInTree_(this.dynamics_, addr);
    if (dynaEntry == null) return null;
    // Dedupe entry name.
    var entry = dynaEntry.value;
    if (!entry.nameUpdated_) {
      entry.name = this.dynamicsNameGen_.getName(entry.name);
      entry.nameUpdated_ = true;
    }
    return { entry : entry, offset : addr - dynaEntry.key };
  return null;
 * Finds a code entry that contains the specified address. Both static and
 * dynamic code entries are considered.
 * @param {number} addr Address.
CodeMap.prototype.findEntry = function(addr) {
  var result = this.findAddress(addr);
  return result ? result.entry : null;
 * Returns a dynamic code entry using its starting address.
 * @param {number} addr Address.
CodeMap.prototype.findDynamicEntryByStartAddress =
    function(addr) {
  var node = this.dynamics_.find(addr);
  return node ? node.value : null;
 * Returns an array of all dynamic code entries.
CodeMap.prototype.getAllDynamicEntries = function() {
  return this.dynamics_.exportValues();
 * Returns an array of pairs of all dynamic code entries and their addresses.
CodeMap.prototype.getAllDynamicEntriesWithAddresses = function() {
  return this.dynamics_.exportKeysAndValues();
 * Returns an array of all static code entries.
CodeMap.prototype.getAllStaticEntries = function() {
  return this.statics_.exportValues();
 * Returns an array of pairs of all static code entries and their addresses.
CodeMap.prototype.getAllStaticEntriesWithAddresses = function() {
  return this.statics_.exportKeysAndValues();
 * Returns an array of all libraries entries.
CodeMap.prototype.getAllLibrariesEntries = function() {
  return this.libraries_.exportValues();
 * Creates a code entry object.
 * @param {number} size Code entry size in bytes.
 * @param {string} opt_name Code entry name.
 * @param {string} opt_type Code entry type, e.g. SHARED_LIB, CPP.
 * @constructor
CodeMap.CodeEntry = function(size, opt_name, opt_type) {
  this.size = size;
  this.name = opt_name || '';
  this.type = opt_type || '';
  this.nameUpdated_ = false;
CodeMap.CodeEntry.prototype.getName = function() {
  return this.name;
CodeMap.CodeEntry.prototype.toString = function() {
  return this.name + ': ' + this.size.toString(16);
CodeMap.NameGenerator = function() {
  this.knownNames_ = {};
CodeMap.NameGenerator.prototype.getName = function(name) {
  if (!(name in this.knownNames_)) {
    this.knownNames_[name] = 0;
    return name;
  var count = ++this.knownNames_[name];
  return name + ' {' + count + '}';
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Constructs a ConsArray object. It is used mainly for tree traversal.
 * In this use case we have lots of arrays that we need to iterate
 * sequentally. The internal Array implementation is horribly slow
 * when concatenating on large (10K items) arrays due to memory copying.
 * That's why we avoid copying memory and insead build a linked list
 * of arrays to iterate through.
 * @constructor
function ConsArray() {
  this.tail_ = new ConsArray.Cell(null, null);
  this.currCell_ = this.tail_;
  this.currCellPos_ = 0;
 * Concatenates another array for iterating. Empty arrays are ignored.
 * This operation can be safely performed during ongoing ConsArray
 * iteration.
 * @param {Array} arr Array to concatenate.
ConsArray.prototype.concat = function(arr) {
  if (arr.length > 0) {
    this.tail_.data = arr;
    this.tail_ = this.tail_.next = new ConsArray.Cell(null, null);
 * Whether the end of iteration is reached.
ConsArray.prototype.atEnd = function() {
  return this.currCell_ === null ||
      this.currCell_.data === null ||
      this.currCellPos_ >= this.currCell_.data.length;
 * Returns the current item, moves to the next one.
ConsArray.prototype.next = function() {
  var result = this.currCell_.data[this.currCellPos_++];
  if (this.currCellPos_ >= this.currCell_.data.length) {
    this.currCell_ = this.currCell_.next;
    this.currCellPos_ = 0;
  return result;
 * A cell object used for constructing a list in ConsArray.
 * @constructor
ConsArray.Cell = function(data, next) {
  this.data = data;
  this.next = next;
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Creates a CSV lines parser.
class CsvParser {
  /**
   * Converts \x00 and \u0000 escape sequences in the given string.
   *
   * @param {string} input field.
   **/
  escapeField(string) {
    let nextPos = string.indexOf("\\");
    if (nextPos === -1) return string;
    let result = string.substring(0, nextPos);
    // Escape sequences of the form \x00 and \u0000;
    let endPos = string.length;
    let pos = 0;
    while (nextPos !== -1) {
      let escapeIdentifier = string.charAt(nextPos + 1);
      pos = nextPos + 2;
      if (escapeIdentifier == 'n') {
        result += '\n';
        nextPos = pos;
      } else if (escapeIdentifier == '\\') {
        result += '\\';
        nextPos = pos;
      } else {
        if (escapeIdentifier == 'x') {
          // \x00 ascii range escapes consume 2 chars.
          nextPos = pos + 2;
        } else {
          // \u0000 unicode range escapes consume 4 chars.
          nextPos = pos + 4;
        }
        // Convert the selected escape sequence to a single character.
        let escapeChars = string.substring(pos, nextPos);
        result += String.fromCharCode(parseInt(escapeChars, 16));
      }
      // Continue looking for the next escape sequence.
      pos = nextPos;
      nextPos = string.indexOf("\\", pos);
      // If there are no more escape sequences consume the rest of the string.
      if (nextPos === -1) {
        result += string.substr(pos);
      } else if (pos != nextPos) {
        result += string.substring(pos, nextPos);
      }
    }
    return result;
  /**
   * Parses a line of CSV-encoded values. Returns an array of fields.
   *
   * @param {string} line Input line.
   */
  parseLine(line) {
    var pos = 0;
    var endPos = line.length;
    var fields = [];
    if (endPos == 0) return fields;
    let nextPos = 0;
    while(nextPos !== -1) {
      nextPos = line.indexOf(',', pos);
      let field;
      if (nextPos === -1) {
        field = line.substr(pos);
      } else {
        field = line.substring(pos, nextPos);
      }
      fields.push(this.escapeField(field));
      pos = nextPos + 1;
    };
    return fields
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Creates a profile object for processing profiling-related events
 * and calculating function execution times.
 * @constructor
function Profile() {
  this.codeMap_ = new CodeMap();
  this.topDownTree_ = new CallTree();
  this.bottomUpTree_ = new CallTree();
  this.c_entries_ = {};
  this.ticks_ = [];
 * Returns whether a function with the specified name must be skipped.
 * Should be overriden by subclasses.
 * @param {string} name Function name.
Profile.prototype.skipThisFunction = function(name) {
  return false;
 * Enum for profiler operations that involve looking up existing
 * code entries.
 * @enum {number}
Profile.Operation = {
  MOVE: 0,
  DELETE: 1,
  TICK: 2
 * Enum for code state regarding its dynamic optimization.
 * @enum {number}
Profile.CodeState = {
  COMPILED: 0,
  OPTIMIZABLE: 1,
  OPTIMIZED: 2
 * Called whenever the specified operation has failed finding a function
 * containing the specified address. Should be overriden by subclasses.
 * See the Profile.Operation enum for the list of
 * possible operations.
 * @param {number} operation Operation.
 * @param {number} addr Address of the unknown code.
 * @param {number} opt_stackPos If an unknown address is encountered
 *     during stack strace processing, specifies a position of the frame
 *     containing the address.
Profile.prototype.handleUnknownCode = function(
    operation, addr, opt_stackPos) {
 * Registers a library.
 * @param {string} name Code entry name.
 * @param {number} startAddr Starting address.
 * @param {number} endAddr Ending address.
Profile.prototype.addLibrary = function(
    name, startAddr, endAddr) {
  var entry = new CodeMap.CodeEntry(
      endAddr - startAddr, name, 'SHARED_LIB');
  this.codeMap_.addLibrary(startAddr, entry);
  return entry;
 * Registers statically compiled code entry.
 * @param {string} name Code entry name.
 * @param {number} startAddr Starting address.
 * @param {number} endAddr Ending address.
Profile.prototype.addStaticCode = function(
    name, startAddr, endAddr) {
  var entry = new CodeMap.CodeEntry(
      endAddr - startAddr, name, 'CPP');
  this.codeMap_.addStaticCode(startAddr, entry);
  return entry;
 * Registers dynamic (JIT-compiled) code entry.
 * @param {string} type Code entry type.
 * @param {string} name Code entry name.
 * @param {number} start Starting address.
 * @param {number} size Code entry size.
Profile.prototype.addCode = function(
    type, name, timestamp, start, size) {
  var entry = new Profile.DynamicCodeEntry(size, type, name);
  this.codeMap_.addCode(start, entry);
  return entry;
 * Registers dynamic (JIT-compiled) code entry.
 * @param {string} type Code entry type.
 * @param {string} name Code entry name.
 * @param {number} start Starting address.
 * @param {number} size Code entry size.
 * @param {number} funcAddr Shared function object address.
 * @param {Profile.CodeState} state Optimization state.
Profile.prototype.addFuncCode = function(
    type, name, timestamp, start, size, funcAddr, state) {
  // As code and functions are in the same address space,
  // it is safe to put them in a single code map.
  var func = this.codeMap_.findDynamicEntryByStartAddress(funcAddr);
  if (!func) {
    func = new Profile.FunctionEntry(name);
    this.codeMap_.addCode(funcAddr, func);
  } else if (func.name !== name) {
    // Function object has been overwritten with a new one.
    func.name = name;
  var entry = this.codeMap_.findDynamicEntryByStartAddress(start);
  if (entry) {
    if (entry.size === size && entry.func === func) {
      // Entry state has changed.
      entry.state = state;
    }
  } else {
    entry = new Profile.DynamicFuncCodeEntry(size, type, func, state);
    this.codeMap_.addCode(start, entry);
  return entry;
 * Reports about moving of a dynamic code entry.
 * @param {number} from Current code entry address.
 * @param {number} to New code entry address.
Profile.prototype.moveCode = function(from, to) {
  try {
    this.codeMap_.moveCode(from, to);
  } catch (e) {
    this.handleUnknownCode(Profile.Operation.MOVE, from);
Profile.prototype.deoptCode = function(
    timestamp, code, inliningId, scriptOffset, bailoutType,
    sourcePositionText, deoptReasonText) {
 * Reports about deletion of a dynamic code entry.
 * @param {number} start Starting address.
Profile.prototype.deleteCode = function(start) {
  try {
    this.codeMap_.deleteCode(start);
  } catch (e) {
    this.handleUnknownCode(Profile.Operation.DELETE, start);
 * Adds source positions for given code.
Profile.prototype.addSourcePositions = function(
    start, script, startPos, endPos, sourcePositions, inliningPositions,
    inlinedFunctions) {
  // CLI does not need source code => ignore.
 * Adds script source code.
Profile.prototype.addScriptSource = function(script, source) {
  // CLI does not need source code => ignore.
 * Reports about moving of a dynamic code entry.
 * @param {number} from Current code entry address.
 * @param {number} to New code entry address.
Profile.prototype.moveFunc = function(from, to) {
  if (this.codeMap_.findDynamicEntryByStartAddress(from)) {
    this.codeMap_.moveCode(from, to);
 * Retrieves a code entry by an address.
 * @param {number} addr Entry address.
Profile.prototype.findEntry = function(addr) {
  return this.codeMap_.findEntry(addr);
 * Records a tick event. Stack must contain a sequence of
 * addresses starting with the program counter value.
 * @param {Array<number>} stack Stack sample.
Profile.prototype.recordTick = function(time_ns, vmState, stack) {
  var processedStack = this.resolveAndFilterFuncs_(stack);
  this.bottomUpTree_.addPath(processedStack);
  processedStack.reverse();
  this.topDownTree_.addPath(processedStack);
 * Translates addresses into function names and filters unneeded
 * functions.
 * @param {Array<number>} stack Stack sample.
Profile.prototype.resolveAndFilterFuncs_ = function(stack) {
  var result = [];
  var last_seen_c_function = '';
  var look_for_first_c_function = false;
  for (var i = 0; i < stack.length; ++i) {
    var entry = this.codeMap_.findEntry(stack[i]);
    if (entry) {
      var name = entry.getName();
      if (i === 0 && (entry.type === 'CPP' || entry.type === 'SHARED_LIB')) {
        look_for_first_c_function = true;
      }
      if (look_for_first_c_function && entry.type === 'CPP') {
        last_seen_c_function = name;
      }
      if (!this.skipThisFunction(name)) {
        result.push(name);
      }
    } else {
      this.handleUnknownCode(Profile.Operation.TICK, stack[i], i);
      if (i === 0) result.push("UNKNOWN");
    }
    if (look_for_first_c_function &&
        i > 0 &&
        (!entry || entry.type !== 'CPP') &&
        last_seen_c_function !== '') {
      if (this.c_entries_[last_seen_c_function] === undefined) {
        this.c_entries_[last_seen_c_function] = 0;
      }
      this.c_entries_[last_seen_c_function]++;
      look_for_first_c_function = false;  // Found it, we're done.
    }
  return result;
 * Performs a BF traversal of the top down call graph.
 * @param {function(CallTree.Node)} f Visitor function.
Profile.prototype.traverseTopDownTree = function(f) {
  this.topDownTree_.traverse(f);
 * Performs a BF traversal of the bottom up call graph.
 * @param {function(CallTree.Node)} f Visitor function.
Profile.prototype.traverseBottomUpTree = function(f) {
  this.bottomUpTree_.traverse(f);
 * Calculates a top down profile for a node with the specified label.
 * If no name specified, returns the whole top down calls tree.
 * @param {string} opt_label Node label.
Profile.prototype.getTopDownProfile = function(opt_label) {
  return this.getTreeProfile_(this.topDownTree_, opt_label);
 * Calculates a bottom up profile for a node with the specified label.
 * If no name specified, returns the whole bottom up calls tree.
 * @param {string} opt_label Node label.
Profile.prototype.getBottomUpProfile = function(opt_label) {
  return this.getTreeProfile_(this.bottomUpTree_, opt_label);
 * Helper function for calculating a tree profile.
 * @param {Profile.CallTree} tree Call tree.
 * @param {string} opt_label Node label.
Profile.prototype.getTreeProfile_ = function(tree, opt_label) {
  if (!opt_label) {
    tree.computeTotalWeights();
    return tree;
  } else {
    var subTree = tree.cloneSubtree(opt_label);
    subTree.computeTotalWeights();
    return subTree;
 * Calculates a flat profile of callees starting from a node with
 * the specified label. If no name specified, starts from the root.
 * @param {string} opt_label Starting node label.
Profile.prototype.getFlatProfile = function(opt_label) {
  var counters = new CallTree();
  var rootLabel = opt_label || CallTree.ROOT_NODE_LABEL;
  var precs = {};
  precs[rootLabel] = 0;
  var root = counters.findOrAddChild(rootLabel);
  this.topDownTree_.computeTotalWeights();
  this.topDownTree_.traverseInDepth(
    function onEnter(node) {
      if (!(node.label in precs)) {
        precs[node.label] = 0;
      }
      var nodeLabelIsRootLabel = node.label == rootLabel;
      if (nodeLabelIsRootLabel || precs[rootLabel] > 0) {
        if (precs[rootLabel] == 0) {
          root.selfWeight += node.selfWeight;
          root.totalWeight += node.totalWeight;
        } else {
          var rec = root.findOrAddChild(node.label);
          rec.selfWeight += node.selfWeight;
          if (nodeLabelIsRootLabel || precs[node.label] == 0) {
            rec.totalWeight += node.totalWeight;
          }
        }
        precs[node.label]++;
      }
    },
    function onExit(node) {
      if (node.label == rootLabel || precs[rootLabel] > 0) {
        precs[node.label]--;
      }
    },
    null);
  if (!opt_label) {
    // If we have created a flat profile for the whole program, we don't
    // need an explicit root in it. Thus, replace the counters tree
    // root with the node corresponding to the whole program.
    counters.root_ = root;
  } else {
    // Propagate weights so percents can be calculated correctly.
    counters.getRoot().selfWeight = root.selfWeight;
    counters.getRoot().totalWeight = root.totalWeight;
  return counters;
Profile.CEntryNode = function(name, ticks) {
  this.name = name;
  this.ticks = ticks;
Profile.prototype.getCEntryProfile = function() {
  var result = [new Profile.CEntryNode("TOTAL", 0)];
  var total_ticks = 0;
  for (var f in this.c_entries_) {
    var ticks = this.c_entries_[f];
    total_ticks += ticks;
    result.push(new Profile.CEntryNode(f, ticks));
  result[0].ticks = total_ticks;  // Sorting will keep this at index 0.
  result.sort(function(n1, n2) {
    return n2.ticks - n1.ticks || (n2.name < n1.name ? -1 : 1)
  });
  return result;
 * Cleans up function entries that are not referenced by code entries.
Profile.prototype.cleanUpFuncEntries = function() {
  var referencedFuncEntries = [];
  var entries = this.codeMap_.getAllDynamicEntriesWithAddresses();
  for (var i = 0, l = entries.length; i < l; ++i) {
    if (entries[i][1].constructor === Profile.FunctionEntry) {
      entries[i][1].used = false;
    }
  for (var i = 0, l = entries.length; i < l; ++i) {
    if ("func" in entries[i][1]) {
      entries[i][1].func.used = true;
    }
  for (var i = 0, l = entries.length; i < l; ++i) {
    if (entries[i][1].constructor === Profile.FunctionEntry &&
        !entries[i][1].used) {
      this.codeMap_.deleteCode(entries[i][0]);
    }
 * Creates a dynamic code entry.
 * @param {number} size Code size.
 * @param {string} type Code type.
 * @param {string} name Function name.
 * @constructor
Profile.DynamicCodeEntry = function(size, type, name) {
  CodeMap.CodeEntry.call(this, size, name, type);
 * Returns node name.
Profile.DynamicCodeEntry.prototype.getName = function() {
  return this.type + ': ' + this.name;
 * Returns raw node name (without type decoration).
Profile.DynamicCodeEntry.prototype.getRawName = function() {
  return this.name;
Profile.DynamicCodeEntry.prototype.isJSFunction = function() {
  return false;
Profile.DynamicCodeEntry.prototype.toString = function() {
  return this.getName() + ': ' + this.size.toString(16);
 * Creates a dynamic code entry.
 * @param {number} size Code size.
 * @param {string} type Code type.
 * @param {Profile.FunctionEntry} func Shared function entry.
 * @param {Profile.CodeState} state Code optimization state.
 * @constructor
Profile.DynamicFuncCodeEntry = function(size, type, func, state) {
  CodeMap.CodeEntry.call(this, size, '', type);
  this.func = func;
  this.state = state;
Profile.DynamicFuncCodeEntry.STATE_PREFIX = ["", "~", "*"];
 * Returns state.
Profile.DynamicFuncCodeEntry.prototype.getState = function() {
  return Profile.DynamicFuncCodeEntry.STATE_PREFIX[this.state];
 * Returns node name.
Profile.DynamicFuncCodeEntry.prototype.getName = function() {
  var name = this.func.getName();
  return this.type + ': ' + this.getState() + name;
 * Returns raw node name (without type decoration).
Profile.DynamicFuncCodeEntry.prototype.getRawName = function() {
  return this.func.getName();
Profile.DynamicFuncCodeEntry.prototype.isJSFunction = function() {
  return true;
Profile.DynamicFuncCodeEntry.prototype.toString = function() {
  return this.getName() + ': ' + this.size.toString(16);
 * Creates a shared function object entry.
 * @param {string} name Function name.
 * @constructor
Profile.FunctionEntry = function(name) {
  CodeMap.CodeEntry.call(this, 0, name);
 * Returns node name.
Profile.FunctionEntry.prototype.getName = function() {
  var name = this.name;
  if (name.length == 0) {
    name = '<anonymous>';
  } else if (name.charAt(0) == ' ') {
    // An anonymous function with location: " aaa.js:10".
    name = '<anonymous>' + name;
  return name;
Profile.FunctionEntry.prototype.toString = CodeMap.CodeEntry.prototype.toString;
 * Constructs a call graph.
 * @constructor
function CallTree() {
  this.root_ = new CallTree.Node(
      CallTree.ROOT_NODE_LABEL);
 * The label of the root node.
CallTree.ROOT_NODE_LABEL = '';
 * @private
CallTree.prototype.totalsComputed_ = false;
 * Returns the tree root.
CallTree.prototype.getRoot = function() {
  return this.root_;
 * Adds the specified call path, constructing nodes as necessary.
 * @param {Array<string>} path Call path.
CallTree.prototype.addPath = function(path) {
  if (path.length == 0) {
    return;
  var curr = this.root_;
  for (var i = 0; i < path.length; ++i) {
    curr = curr.findOrAddChild(path[i]);
  curr.selfWeight++;
  this.totalsComputed_ = false;
 * Finds an immediate child of the specified parent with the specified
 * label, creates a child node if necessary. If a parent node isn't
 * specified, uses tree root.
 * @param {string} label Child node label.
CallTree.prototype.findOrAddChild = function(label) {
  return this.root_.findOrAddChild(label);
 * Creates a subtree by cloning and merging all subtrees rooted at nodes
 * with a given label. E.g. cloning the following call tree on label 'A'
 * will give the following result:
 *           <A>--<B>                                     <B>
 *          /                                            /
 *     <root>             == clone on 'A' ==>  <root>--<A>
 *          \                                            \
 *           <C>--<A>--<D>                                <D>
 * And <A>'s selfWeight will be the sum of selfWeights of <A>'s from the
 * source call tree.
 * @param {string} label The label of the new root node.
CallTree.prototype.cloneSubtree = function(label) {
  var subTree = new CallTree();
  this.traverse(function(node, parent) {
    if (!parent && node.label != label) {
      return null;
    }
    var child = (parent ? parent : subTree).findOrAddChild(node.label);
    child.selfWeight += node.selfWeight;
    return child;
  });
  return subTree;
 * Computes total weights in the call graph.
CallTree.prototype.computeTotalWeights = function() {
  if (this.totalsComputed_) {
    return;
  this.root_.computeTotalWeight();
  this.totalsComputed_ = true;
 * Traverses the call graph in preorder. This function can be used for
 * building optionally modified tree clones. This is the boilerplate code
 * for this scenario:
 * callTree.traverse(function(node, parentClone) {
 *   var nodeClone = cloneNode(node);
 *   if (parentClone)
 *     parentClone.addChild(nodeClone);
 *   return nodeClone;
 * });
 * @param {function(CallTree.Node, *)} f Visitor function.
 *    The second parameter is the result of calling 'f' on the parent node.
CallTree.prototype.traverse = function(f) {
  var pairsToProcess = new ConsArray();
  pairsToProcess.concat([{node: this.root_, param: null}]);
  while (!pairsToProcess.atEnd()) {
    var pair = pairsToProcess.next();
    var node = pair.node;
    var newParam = f(node, pair.param);
    var morePairsToProcess = [];
    node.forEachChild(function (child) {
        morePairsToProcess.push({node: child, param: newParam}); });
    pairsToProcess.concat(morePairsToProcess);
 * Performs an indepth call graph traversal.
 * @param {function(CallTree.Node)} enter A function called
 *     prior to visiting node's children.
 * @param {function(CallTree.Node)} exit A function called
 *     after visiting node's children.
CallTree.prototype.traverseInDepth = function(enter, exit) {
  function traverse(node) {
    enter(node);
    node.forEachChild(traverse);
    exit(node);
  traverse(this.root_);
 * Constructs a call graph node.
 * @param {string} label Node label.
 * @param {CallTree.Node} opt_parent Node parent.
CallTree.Node = function(label, opt_parent) {
  this.label = label;
  this.parent = opt_parent;
  this.children = {};
 * Node self weight (how many times this node was the last node in
 * a call path).
 * @type {number}
CallTree.Node.prototype.selfWeight = 0;
 * Node total weight (includes weights of all children).
 * @type {number}
CallTree.Node.prototype.totalWeight = 0;
 * Adds a child node.
 * @param {string} label Child node label.
CallTree.Node.prototype.addChild = function(label) {
  var child = new CallTree.Node(label, this);
  this.children[label] = child;
  return child;
 * Computes node's total weight.
CallTree.Node.prototype.computeTotalWeight =
    function() {
  var totalWeight = this.selfWeight;
  this.forEachChild(function(child) {
      totalWeight += child.computeTotalWeight(); });
  return this.totalWeight = totalWeight;
 * Returns all node's children as an array.
CallTree.Node.prototype.exportChildren = function() {
  var result = [];
  this.forEachChild(function (node) { result.push(node); });
  return result;
 * Finds an immediate child with the specified label.
 * @param {string} label Child node label.
CallTree.Node.prototype.findChild = function(label) {
  return this.children[label] || null;
 * Finds an immediate child with the specified label, creates a child
 * node if necessary.
 * @param {string} label Child node label.
CallTree.Node.prototype.findOrAddChild = function(label) {
  return this.findChild(label) || this.addChild(label);
 * Calls the specified function for every child.
 * @param {function(CallTree.Node)} f Visitor function.
CallTree.Node.prototype.forEachChild = function(f) {
  for (var c in this.children) {
    f(this.children[c]);
 * Walks up from the current node up to the call tree root.
 * @param {function(CallTree.Node)} f Visitor function.
CallTree.Node.prototype.walkUpToRoot = function(f) {
  for (var curr = this; curr != null; curr = curr.parent) {
    f(curr);
 * Tries to find a node with the specified path.
 * @param {Array<string>} labels The path.
 * @param {function(CallTree.Node)} opt_f Visitor function.
CallTree.Node.prototype.descendToChild = function(
    labels, opt_f) {
  for (var pos = 0, curr = this; pos < labels.length && curr != null; pos++) {
    var child = curr.findChild(labels[pos]);
    if (opt_f) {
      opt_f(child, pos);
    }
    curr = child;
  return curr;
function JsonProfile() {
  this.codeMap_ = new CodeMap();
  this.codeEntries_ = [];
  this.functionEntries_ = [];
  this.ticks_ = [];
  this.scripts_ = [];
JsonProfile.prototype.addLibrary = function(
    name, startAddr, endAddr) {
  var entry = new CodeMap.CodeEntry(
      endAddr - startAddr, name, 'SHARED_LIB');
  this.codeMap_.addLibrary(startAddr, entry);
  entry.codeId = this.codeEntries_.length;
  this.codeEntries_.push({name : entry.name, type : entry.type});
  return entry;
JsonProfile.prototype.addStaticCode = function(
    name, startAddr, endAddr) {
  var entry = new CodeMap.CodeEntry(
      endAddr - startAddr, name, 'CPP');
  this.codeMap_.addStaticCode(startAddr, entry);
  entry.codeId = this.codeEntries_.length;
  this.codeEntries_.push({name : entry.name, type : entry.type});
  return entry;
JsonProfile.prototype.addCode = function(
    kind, name, timestamp, start, size) {
  let codeId = this.codeEntries_.length;
  // Find out if we have a static code entry for the code. If yes, we will
  // make sure it is written to the JSON file just once.
  let staticEntry = this.codeMap_.findAddress(start);
  if (staticEntry && staticEntry.entry.type === 'CPP') {
    codeId = staticEntry.entry.codeId;
  var entry = new CodeMap.CodeEntry(size, name, 'CODE');
  this.codeMap_.addCode(start, entry);
  entry.codeId = codeId;
  this.codeEntries_[codeId] = {
    name : entry.name,
    timestamp: timestamp,
    type : entry.type,
    kind : kind
  };
  return entry;
JsonProfile.prototype.addFuncCode = function(
    kind, name, timestamp, start, size, funcAddr, state) {
  // As code and functions are in the same address space,
  // it is safe to put them in a single code map.
  var func = this.codeMap_.findDynamicEntryByStartAddress(funcAddr);
  if (!func) {
    var func = new CodeMap.CodeEntry(0, name, 'SFI');
    this.codeMap_.addCode(funcAddr, func);
    func.funcId = this.functionEntries_.length;
    this.functionEntries_.push({name : name, codes : []});
  } else if (func.name !== name) {
    // Function object has been overwritten with a new one.
    func.name = name;
    func.funcId = this.functionEntries_.length;
    this.functionEntries_.push({name : name, codes : []});
  // TODO(jarin): Insert the code object into the SFI's code list.
  var entry = this.codeMap_.findDynamicEntryByStartAddress(start);
  if (entry) {
    // TODO(jarin) This does not look correct, we should really
    // update the code object (remove the old one and insert this one).
    if (entry.size === size && entry.func === func) {
      // Entry state has changed.
      entry.state = state;
    }
  } else {
    var entry = new CodeMap.CodeEntry(size, name, 'JS');
    this.codeMap_.addCode(start, entry);
    entry.codeId = this.codeEntries_.length;
    this.functionEntries_[func.funcId].codes.push(entry.codeId);
    if (state === 0) {
      kind = "Builtin";
    } else if (state === 1) {
      kind = "Unopt";
    } else if (state === 2) {
      kind = "Opt";
    }
    this.codeEntries_.push({
        name : entry.name,
        type : entry.type,
        kind : kind,
        func : func.funcId,
        tm : timestamp
    });
  return entry;
JsonProfile.prototype.moveCode = function(from, to) {
  try {
    this.codeMap_.moveCode(from, to);
  } catch (e) {
    printErr("Move: unknown source " + from);
JsonProfile.prototype.addSourcePositions = function(
    start, script, startPos, endPos, sourcePositions, inliningPositions,
    inlinedFunctions) {
  var entry = this.codeMap_.findDynamicEntryByStartAddress(start);
  if (!entry) return;
  var codeId = entry.codeId;
  // Resolve the inlined functions list.
  if (inlinedFunctions.length > 0) {
    inlinedFunctions = inlinedFunctions.substring(1).split("S");
    for (var i = 0; i < inlinedFunctions.length; i++) {
      var funcAddr = parseInt(inlinedFunctions[i]);
      var func = this.codeMap_.findDynamicEntryByStartAddress(funcAddr);
      if (!func || func.funcId === undefined) {
        printErr("Could not find function " + inlinedFunctions[i]);
        inlinedFunctions[i] = null;
      } else {
        inlinedFunctions[i] = func.funcId;
      }
    }
  } else {
    inlinedFunctions = [];
  this.codeEntries_[entry.codeId].source = {
    script : script,
    start : startPos,
    end : endPos,
    positions : sourcePositions,
    inlined : inliningPositions,
    fns : inlinedFunctions
  };
JsonProfile.prototype.addScriptSource = function(script, url, source) {
  this.scripts_[script] = {
    name : url,
    source : source
  };
JsonProfile.prototype.deoptCode = function(
    timestamp, code, inliningId, scriptOffset, bailoutType,
    sourcePositionText, deoptReasonText) {
  let entry = this.codeMap_.findDynamicEntryByStartAddress(code);
  if (entry) {
    let codeId = entry.codeId;
    if (!this.codeEntries_[codeId].deopt) {
      // Only add the deopt if there was no deopt before.
      // The subsequent deoptimizations should be lazy deopts for
      // other on-stack activations.
      this.codeEntries_[codeId].deopt = {
          tm : timestamp,
          inliningId : inliningId,
          scriptOffset : scriptOffset,
          posText : sourcePositionText,
          reason : deoptReasonText,
          bailoutType : bailoutType
      };
    }
JsonProfile.prototype.deleteCode = function(start) {
  try {
    this.codeMap_.deleteCode(start);
  } catch (e) {
    printErr("Delete: unknown address " + start);
JsonProfile.prototype.moveFunc = function(from, to) {
  if (this.codeMap_.findDynamicEntryByStartAddress(from)) {
    this.codeMap_.moveCode(from, to);
JsonProfile.prototype.findEntry = function(addr) {
  return this.codeMap_.findEntry(addr);
JsonProfile.prototype.recordTick = function(time_ns, vmState, stack) {
  // TODO(jarin) Resolve the frame-less case (when top of stack is
  // known code).
  var processedStack = [];
  for (var i = 0; i < stack.length; i++) {
    var resolved = this.codeMap_.findAddress(stack[i]);
    if (resolved) {
      processedStack.push(resolved.entry.codeId, resolved.offset);
    } else {
      processedStack.push(-1, stack[i]);
    }
  this.ticks_.push({ tm : time_ns, vm : vmState, s : processedStack });
function writeJson(s) {
  write(JSON.stringify(s, null, 2));
JsonProfile.prototype.writeJson = function() {
  // Write out the JSON in a partially manual way to avoid creating too-large
  // strings in one JSON.stringify call when there are a lot of ticks.
  write('{\n')
  write('  "code": ');
  writeJson(this.codeEntries_);
  write(',\n');
  write('  "functions": ');
  writeJson(this.functionEntries_);
  write(',\n');
  write('  "ticks": [\n');
  for (var i = 0; i < this.ticks_.length; i++) {
    write('    ');
    writeJson(this.ticks_[i]);
    if (i < this.ticks_.length - 1) {
      write(',\n');
    } else {
      write('\n');
    }
  write('  ],\n');
  write('  "scripts": ');
  writeJson(this.scripts_);
  write('}\n');
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Creates a Profile View builder object.
 * @param {number} samplingRate Number of ms between profiler ticks.
 * @constructor
function ViewBuilder(samplingRate) {
  this.samplingRate = samplingRate;
 * Builds a profile view for the specified call tree.
 * @param {CallTree} callTree A call tree.
 * @param {boolean} opt_bottomUpViewWeights Whether remapping
 *     of self weights for a bottom up view is needed.
ViewBuilder.prototype.buildView = function(
    callTree, opt_bottomUpViewWeights) {
  var head;
  var samplingRate = this.samplingRate;
  var createViewNode = this.createViewNode;
  callTree.traverse(function(node, viewParent) {
    var totalWeight = node.totalWeight * samplingRate;
    var selfWeight = node.selfWeight * samplingRate;
    if (opt_bottomUpViewWeights === true) {
      if (viewParent === head) {
        selfWeight = totalWeight;
      } else {
        selfWeight = 0;
      }
    }
    var viewNode = createViewNode(node.label, totalWeight, selfWeight, head);
    if (viewParent) {
      viewParent.addChild(viewNode);
    } else {
      head = viewNode;
    }
    return viewNode;
  });
  var view = this.createView(head);
  return view;
 * Factory method for a profile view.
 * @param {ProfileView.Node} head View head node.
 * @return {ProfileView} Profile view.
ViewBuilder.prototype.createView = function(head) {
  return new ProfileView(head);
 * Factory method for a profile view node.
 * @param {string} internalFuncName A fully qualified function name.
 * @param {number} totalTime Amount of time that application spent in the
 *     corresponding function and its descendants (not that depending on
 *     profile they can be either callees or callers.)
 * @param {number} selfTime Amount of time that application spent in the
 *     corresponding function only.
 * @param {ProfileView.Node} head Profile view head.
 * @return {ProfileView.Node} Profile view node.
ViewBuilder.prototype.createViewNode = function(
    funcName, totalTime, selfTime, head) {
  return new ProfileView.Node(
      funcName, totalTime, selfTime, head);
 * Creates a Profile View object. It allows to perform sorting
 * and filtering actions on the profile.
 * @param {ProfileView.Node} head Head (root) node.
 * @constructor
function ProfileView(head) {
  this.head = head;
 * Sorts the profile view using the specified sort function.
 * @param {function(ProfileView.Node,
 *     ProfileView.Node):number} sortFunc A sorting
 *     functions. Must comply with Array.sort sorting function requirements.
ProfileView.prototype.sort = function(sortFunc) {
  this.traverse(function (node) {
    node.sortChildren(sortFunc);
  });
 * Traverses profile view nodes in preorder.
 * @param {function(ProfileView.Node)} f Visitor function.
ProfileView.prototype.traverse = function(f) {
  var nodesToTraverse = new ConsArray();
  nodesToTraverse.concat([this.head]);
  while (!nodesToTraverse.atEnd()) {
    var node = nodesToTraverse.next();
    f(node);
    nodesToTraverse.concat(node.children);
 * Constructs a Profile View node object. Each node object corresponds to
 * a function call.
 * @param {string} internalFuncName A fully qualified function name.
 * @param {number} totalTime Amount of time that application spent in the
 *     corresponding function and its descendants (not that depending on
 *     profile they can be either callees or callers.)
 * @param {number} selfTime Amount of time that application spent in the
 *     corresponding function only.
 * @param {ProfileView.Node} head Profile view head.
 * @constructor
ProfileView.Node = function(
    internalFuncName, totalTime, selfTime, head) {
  this.internalFuncName = internalFuncName;
  this.totalTime = totalTime;
  this.selfTime = selfTime;
  this.head = head;
  this.parent = null;
  this.children = [];
 * Returns a share of the function's total time in its parent's total time.
ProfileView.Node.prototype.__defineGetter__(
    'parentTotalPercent',
    function() { return this.totalTime /
      (this.parent ? this.parent.totalTime : this.totalTime) * 100.0; });
 * Adds a child to the node.
 * @param {ProfileView.Node} node Child node.
ProfileView.Node.prototype.addChild = function(node) {
  node.parent = this;
  this.children.push(node);
 * Sorts all the node's children recursively.
 * @param {function(ProfileView.Node,
 *     ProfileView.Node):number} sortFunc A sorting
 *     functions. Must comply with Array.sort sorting function requirements.
ProfileView.Node.prototype.sortChildren = function(
    sortFunc) {
  this.children.sort(sortFunc);
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * @fileoverview Log Reader is used to process log file produced by V8.
 * Base class for processing log files.
 * @param {Array.<Object>} dispatchTable A table used for parsing and processing
 *     log records.
 * @param {boolean} timedRange Ignore ticks outside timed range.
 * @param {boolean} pairwiseTimedRange Ignore ticks outside pairs of timer
 *     markers.
 * @constructor
function LogReader(dispatchTable, timedRange, pairwiseTimedRange) {
  /**
   * @type {Array.<Object>}
   */
  this.dispatchTable_ = dispatchTable;
  /**
   * @type {boolean}
   */
  this.timedRange_ = timedRange;
  /**
   * @type {boolean}
   */
  this.pairwiseTimedRange_ = pairwiseTimedRange;
  if (pairwiseTimedRange) {
    this.timedRange_ = true;
  /**
   * Current line.
   * @type {number}
   */
  this.lineNum_ = 0;
  /**
   * CSV lines parser.
   * @type {CsvParser}
   */
  this.csvParser_ = new CsvParser();
  /**
   * Keeps track of whether we've seen a "current-time" tick yet.
   * @type {boolean}
   */
  this.hasSeenTimerMarker_ = false;
  /**
   * List of log lines seen since last "current-time" tick.
   * @type {Array.<String>}
   */
  this.logLinesSinceLastTimerMarker_ = [];
 * Used for printing error messages.
 * @param {string} str Error message.
LogReader.prototype.printError = function(str) {
  // Do nothing.
 * Processes a portion of V8 profiler event log.
 * @param {string} chunk A portion of log.
LogReader.prototype.processLogChunk = function(chunk) {
  this.processLog_(chunk.split('\n'));
 * Processes a line of V8 profiler event log.
 * @param {string} line A line of log.
LogReader.prototype.processLogLine = function(line) {
  if (!this.timedRange_) {
    this.processLogLine_(line);
    return;
  if (line.startsWith("current-time")) {
    if (this.hasSeenTimerMarker_) {
      this.processLog_(this.logLinesSinceLastTimerMarker_);
      this.logLinesSinceLastTimerMarker_ = [];
      // In pairwise mode, a "current-time" line ends the timed range.
      if (this.pairwiseTimedRange_) {
        this.hasSeenTimerMarker_ = false;
      }
    } else {
      this.hasSeenTimerMarker_ = true;
    }
  } else {
    if (this.hasSeenTimerMarker_) {
      this.logLinesSinceLastTimerMarker_.push(line);
    } else if (!line.startsWith("tick")) {
      this.processLogLine_(line);
    }
 * Processes stack record.
 * @param {number} pc Program counter.
 * @param {number} func JS Function.
 * @param {Array.<string>} stack String representation of a stack.
 * @return {Array.<number>} Processed stack.
LogReader.prototype.processStack = function(pc, func, stack) {
  var fullStack = func ? [pc, func] : [pc];
  var prevFrame = pc;
  for (var i = 0, n = stack.length; i < n; ++i) {
    var frame = stack[i];
    var firstChar = frame.charAt(0);
    if (firstChar == '+' || firstChar == '-') {
      // An offset from the previous frame.
      prevFrame += parseInt(frame, 16);
      fullStack.push(prevFrame);
    // Filter out possible 'overflow' string.
    } else if (firstChar != 'o') {
      fullStack.push(parseInt(frame, 16));
    } else {
      this.printError("dropping: " + frame);
    }
  return fullStack;
 * Returns whether a particular dispatch must be skipped.
 * @param {!Object} dispatch Dispatch record.
 * @return {boolean} True if dispatch must be skipped.
LogReader.prototype.skipDispatch = function(dispatch) {
  return false;
// Parses dummy variable for readability;
const parseString = 'parse-string';
const parseVarArgs = 'parse-var-args';
 * Does a dispatch of a log record.
 * @param {Array.<string>} fields Log record.
 * @private
LogReader.prototype.dispatchLogRow_ = function(fields) {
  // Obtain the dispatch.
  var command = fields[0];
  var dispatch = this.dispatchTable_[command];
  if (dispatch === undefined) return;
  if (dispatch === null || this.skipDispatch(dispatch)) {
    return;
  // Parse fields.
  var parsedFields = [];
  for (var i = 0; i < dispatch.parsers.length; ++i) {
    var parser = dispatch.parsers[i];
    if (parser === parseString) {
      parsedFields.push(fields[1 + i]);
    } else if (typeof parser == 'function') {
      parsedFields.push(parser(fields[1 + i]));
    } else if (parser === parseVarArgs) {
      // var-args
      parsedFields.push(fields.slice(1 + i));
      break;
    } else {
      throw new Error("Invalid log field parser: " + parser);
    }
  // Run the processor.
  dispatch.processor.apply(this, parsedFields);
 * Processes log lines.
 * @param {Array.<string>} lines Log lines.
 * @private
LogReader.prototype.processLog_ = function(lines) {
  for (var i = 0, n = lines.length; i < n; ++i) {
    this.processLogLine_(lines[i]);
 * Processes a single log line.
 * @param {String} a log line
 * @private
LogReader.prototype.processLogLine_ = function(line) {
  if (line.length > 0) {
    try {
      var fields = this.csvParser_.parseLine(line);
      this.dispatchLogRow_(fields);
    } catch (e) {
      this.printError('line ' + (this.lineNum_ + 1) + ': ' + (e.message || e));
    }
  this.lineNum_++;
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
class BaseArgumentsProcessor {
  constructor(args) {
    this.args_ = args;
    this.result_ = this.getDefaultResults();
    console.assert(this.result_ !== undefined)
    console.assert(this.result_.logFileName !== undefined);
    this.argsDispatch_ = this.getArgsDispatch();
    console.assert(this.argsDispatch_ !== undefined);
  getDefaultResults() {
    throw "Implement in getDefaultResults in subclass";
  getArgsDispatch() {
    throw "Implement getArgsDispatch in subclass";
  result() { return this.result_ }
  printUsageAndExit() {
    print('Cmdline args: [options] [log-file-name]\n' +
          'Default log file name is "' +
          this.result_.logFileName + '".\n');
    print('Options:');
    for (var arg in this.argsDispatch_) {
      var synonyms = [arg];
      var dispatch = this.argsDispatch_[arg];
      for (var synArg in this.argsDispatch_) {
        if (arg !== synArg && dispatch === this.argsDispatch_[synArg]) {
          synonyms.push(synArg);
          delete this.argsDispatch_[synArg];
        }
      }
      print('  ' + synonyms.join(', ').padEnd(20) + " " + dispatch[2]);
    }
    quit(2);
  parse() {
    while (this.args_.length) {
      var arg = this.args_.shift();
      if (arg.charAt(0) != '-') {
        this.result_.logFileName = arg;
        continue;
      }
      var userValue = null;
      var eqPos = arg.indexOf('=');
      if (eqPos != -1) {
        userValue = arg.substr(eqPos + 1);
        arg = arg.substr(0, eqPos);
      }
      if (arg in this.argsDispatch_) {
        var dispatch = this.argsDispatch_[arg];
        var property = dispatch[0];
        var defaultValue = dispatch[1];
        if (typeof defaultValue == "function") {
          userValue = defaultValue(userValue);
        } else if (userValue == null) {
          userValue = defaultValue;
        }
        this.result_[property] = userValue;
      } else {
        return false;
      }
    }
    return true;
function parseBool(str) {
  if (str == "true" || str == "1") return true;
  return false;
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
function inherits(childCtor, parentCtor) {
  childCtor.prototype.__proto__ = parentCtor.prototype;
function V8Profile(separateIc, separateBytecodes, separateBuiltins,
    separateStubs) {
  Profile.call(this);
  var regexps = [];
  if (!separateIc) regexps.push(V8Profile.IC_RE);
  if (!separateBytecodes) regexps.push(V8Profile.BYTECODES_RE);
  if (!separateBuiltins) regexps.push(V8Profile.BUILTINS_RE);
  if (!separateStubs) regexps.push(V8Profile.STUBS_RE);
  if (regexps.length > 0) {
    this.skipThisFunction = function(name) {
      for (var i=0; i<regexps.length; i++) {
        if (regexps[i].test(name)) return true;
      }
      return false;
    };
inherits(V8Profile, Profile);
V8Profile.IC_RE =
    /^(LoadGlobalIC: )|(Handler: )|(?:CallIC|LoadIC|StoreIC)|(?:Builtin: (?:Keyed)?(?:Load|Store)IC_)/;
V8Profile.BYTECODES_RE = /^(BytecodeHandler: )/
V8Profile.BUILTINS_RE = /^(Builtin: )/
V8Profile.STUBS_RE = /^(Stub: )/
 * A thin wrapper around shell's 'read' function showing a file name on error.
function readFile(fileName) {
  try {
    return read(fileName);
  } catch (e) {
    printErr(fileName + ': ' + (e.message || e));
    throw e;
 * Parser for dynamic code optimization state.
function parseState(s) {
  switch (s) {
  case "": return Profile.CodeState.COMPILED;
  case "~": return Profile.CodeState.OPTIMIZABLE;
  case "*": return Profile.CodeState.OPTIMIZED;
  throw new Error("unknown code state: " + s);
function TickProcessor(
    cppEntriesProvider,
    separateIc,
    separateBytecodes,
    separateBuiltins,
    separateStubs,
    callGraphSize,
    ignoreUnknown,
    stateFilter,
    distortion,
    range,
    sourceMap,
    timedRange,
    pairwiseTimedRange,
    onlySummary,
    runtimeTimerFilter,
    preprocessJson) {
  this.preprocessJson = preprocessJson;
  LogReader.call(this, {
      'shared-library': { parsers: [parseString, parseInt, parseInt, parseInt],
          processor: this.processSharedLibrary },
      'code-creation': {
          parsers: [parseString, parseInt, parseInt, parseInt, parseInt,
                    parseString, parseVarArgs],
          processor: this.processCodeCreation },
      'code-deopt': {
          parsers: [parseInt, parseInt, parseInt, parseInt, parseInt,
                    parseString, parseString, parseString],
          processor: this.processCodeDeopt },
      'code-move': { parsers: [parseInt, parseInt, ],
          processor: this.processCodeMove },
      'code-delete': { parsers: [parseInt],
          processor: this.processCodeDelete },
      'code-source-info': {
          parsers: [parseInt, parseInt, parseInt, parseInt, parseString,
                    parseString, parseString],
          processor: this.processCodeSourceInfo },
      'script-source': {
          parsers: [parseInt, parseString, parseString],
          processor: this.processScriptSource },
      'sfi-move': { parsers: [parseInt, parseInt],
          processor: this.processFunctionMove },
      'active-runtime-timer': {
        parsers: [parseString],
        processor: this.processRuntimeTimerEvent },
      'tick': {
          parsers: [parseInt, parseInt, parseInt,
                    parseInt, parseInt, parseVarArgs],
          processor: this.processTick },
      'heap-sample-begin': { parsers: [parseString, parseString, parseInt],
          processor: this.processHeapSampleBegin },
      'heap-sample-end': { parsers: [parseString, parseString],
          processor: this.processHeapSampleEnd },
      'timer-event-start' : { parsers: [parseString, parseString, parseString],
                              processor: this.advanceDistortion },
      'timer-event-end' : { parsers: [parseString, parseString, parseString],
                            processor: this.advanceDistortion },
      // Ignored events.
      'profiler': null,
      'function-creation': null,
      'function-move': null,
      'function-delete': null,
      'heap-sample-item': null,
      'current-time': null,  // Handled specially, not parsed.
      // Obsolete row types.
      'code-allocate': null,
      'begin-code-region': null,
      'end-code-region': null },
      timedRange,
      pairwiseTimedRange);
  this.cppEntriesProvider_ = cppEntriesProvider;
  this.callGraphSize_ = callGraphSize;
  this.ignoreUnknown_ = ignoreUnknown;
  this.stateFilter_ = stateFilter;
  this.runtimeTimerFilter_ = runtimeTimerFilter;
  this.sourceMap = sourceMap;
  var ticks = this.ticks_ =
    { total: 0, unaccounted: 0, excluded: 0, gc: 0 };
  distortion = parseInt(distortion);
  // Convert picoseconds to nanoseconds.
  this.distortion_per_entry = isNaN(distortion) ? 0 : (distortion / 1000);
  this.distortion = 0;
  var rangelimits = range ? range.split(",") : [];
  var range_start = parseInt(rangelimits[0]);
  var range_end = parseInt(rangelimits[1]);
  // Convert milliseconds to nanoseconds.
  this.range_start = isNaN(range_start) ? -Infinity : (range_start * 1000);
  this.range_end = isNaN(range_end) ? Infinity : (range_end * 1000)
  V8Profile.prototype.handleUnknownCode = function(
      operation, addr, opt_stackPos) {
    var op = Profile.Operation;
    switch (operation) {
      case op.MOVE:
        printErr('Code move event for unknown code: 0x' + addr.toString(16));
        break;
      case op.DELETE:
        printErr('Code delete event for unknown code: 0x' + addr.toString(16));
        break;
      case op.TICK:
        // Only unknown PCs (the first frame) are reported as unaccounted,
        // otherwise tick balance will be corrupted (this behavior is compatible
        // with the original tickprocessor.py script.)
        if (opt_stackPos == 0) {
          ticks.unaccounted++;
        }
        break;
    }
  };
  if (preprocessJson) {
    this.profile_ = new JsonProfile();
  } else {
    this.profile_ = new V8Profile(separateIc, separateBytecodes,
        separateBuiltins, separateStubs);
  this.codeTypes_ = {};
  // Count each tick as a time unit.
  this.viewBuilder_ = new ViewBuilder(1);
  this.lastLogFileName_ = null;
  this.generation_ = 1;
  this.currentProducerProfile_ = null;
  this.onlySummary_ = onlySummary;
inherits(TickProcessor, LogReader);
TickProcessor.VmStates = {
  JS: 0,
  GC: 1,
  PARSER: 2,
  BYTECODE_COMPILER: 3,
  COMPILER: 4,
  OTHER: 5,
  EXTERNAL: 6,
  IDLE: 7,
TickProcessor.CodeTypes = {
  CPP: 0,
  SHARED_LIB: 1
// Otherwise, this is JS-related code. We are not adding it to
// codeTypes_ map because there can be zillions of them.
TickProcessor.CALL_PROFILE_CUTOFF_PCT = 1.0;
TickProcessor.CALL_GRAPH_SIZE = 5;
 * @override
TickProcessor.prototype.printError = function(str) {
  printErr(str);
TickProcessor.prototype.setCodeType = function(name, type) {
  this.codeTypes_[name] = TickProcessor.CodeTypes[type];
TickProcessor.prototype.isSharedLibrary = function(name) {
  return this.codeTypes_[name] == TickProcessor.CodeTypes.SHARED_LIB;
TickProcessor.prototype.isCppCode = function(name) {
  return this.codeTypes_[name] == TickProcessor.CodeTypes.CPP;
TickProcessor.prototype.isJsCode = function(name) {
  return name !== "UNKNOWN" && !(name in this.codeTypes_);
TickProcessor.prototype.processLogFile = function(fileName) {
  this.lastLogFileName_ = fileName;
  var line;
  while (line = readline()) {
    this.processLogLine(line);
TickProcessor.prototype.processLogFileInTest = function(fileName) {
   // Hack file name to avoid dealing with platform specifics.
  this.lastLogFileName_ = 'v8.log';
  var contents = readFile(fileName);
  this.processLogChunk(contents);
TickProcessor.prototype.processSharedLibrary = function(
    name, startAddr, endAddr, aslrSlide) {
  var entry = this.profile_.addLibrary(name, startAddr, endAddr, aslrSlide);
  this.setCodeType(entry.getName(), 'SHARED_LIB');
  var self = this;
  var libFuncs = this.cppEntriesProvider_.parseVmSymbols(
      name, startAddr, endAddr, aslrSlide, function(fName, fStart, fEnd) {
    self.profile_.addStaticCode(fName, fStart, fEnd);
    self.setCodeType(fName, 'CPP');
  });
TickProcessor.prototype.processCodeCreation = function(
    type, kind, timestamp, start, size, name, maybe_func) {
  if (maybe_func.length) {
    var funcAddr = parseInt(maybe_func[0]);
    var state = parseState(maybe_func[1]);
    this.profile_.addFuncCode(type, name, timestamp, start, size, funcAddr, state);
  } else {
    this.profile_.addCode(type, name, timestamp, start, size);
TickProcessor.prototype.processCodeDeopt = function(
    timestamp, size, code, inliningId, scriptOffset, bailoutType,
    sourcePositionText, deoptReasonText) {
  this.profile_.deoptCode(timestamp, code, inliningId, scriptOffset,
      bailoutType, sourcePositionText, deoptReasonText);
TickProcessor.prototype.processCodeMove = function(from, to) {
  this.profile_.moveCode(from, to);
TickProcessor.prototype.processCodeDelete = function(start) {
  this.profile_.deleteCode(start);
TickProcessor.prototype.processCodeSourceInfo = function(
    start, script, startPos, endPos, sourcePositions, inliningPositions,
    inlinedFunctions) {
  this.profile_.addSourcePositions(start, script, startPos,
    endPos, sourcePositions, inliningPositions, inlinedFunctions);
TickProcessor.prototype.processScriptSource = function(script, url, source) {
  this.profile_.addScriptSource(script, url, source);
TickProcessor.prototype.processFunctionMove = function(from, to) {
  this.profile_.moveFunc(from, to);
TickProcessor.prototype.includeTick = function(vmState) {
  if (this.stateFilter_ !== null) {
    return this.stateFilter_ == vmState;
  } else if (this.runtimeTimerFilter_ !== null) {
    return this.currentRuntimeTimer == this.runtimeTimerFilter_;
  return true;
TickProcessor.prototype.processRuntimeTimerEvent = function(name) {
  this.currentRuntimeTimer = name;
TickProcessor.prototype.processTick = function(pc,
                                               ns_since_start,
                                               is_external_callback,
                                               tos_or_external_callback,
                                               vmState,
                                               stack) {
  this.distortion += this.distortion_per_entry;
  ns_since_start -= this.distortion;
  if (ns_since_start < this.range_start || ns_since_start > this.range_end) {
    return;
  this.ticks_.total++;
  if (vmState == TickProcessor.VmStates.GC) this.ticks_.gc++;
  if (!this.includeTick(vmState)) {
    this.ticks_.excluded++;
    return;
  if (is_external_callback) {
    // Don't use PC when in external callback code, as it can point
    // inside callback's code, and we will erroneously report
    // that a callback calls itself. Instead we use tos_or_external_callback,
    // as simply resetting PC will produce unaccounted ticks.
    pc = tos_or_external_callback;
    tos_or_external_callback = 0;
  } else if (tos_or_external_callback) {
    // Find out, if top of stack was pointing inside a JS function
    // meaning that we have encountered a frameless invocation.
    var funcEntry = this.profile_.findEntry(tos_or_external_callback);
    if (!funcEntry || !funcEntry.isJSFunction || !funcEntry.isJSFunction()) {
      tos_or_external_callback = 0;
    }
  this.profile_.recordTick(
      ns_since_start, vmState,
      this.processStack(pc, tos_or_external_callback, stack));
TickProcessor.prototype.advanceDistortion = function() {
  this.distortion += this.distortion_per_entry;
TickProcessor.prototype.processHeapSampleBegin = function(space, state, ticks) {
  if (space != 'Heap') return;
  this.currentProducerProfile_ = new CallTree();
TickProcessor.prototype.processHeapSampleEnd = function(space, state) {
  if (space != 'Heap' || !this.currentProducerProfile_) return;
  print('Generation ' + this.generation_ + ':');
  var tree = this.currentProducerProfile_;
  tree.computeTotalWeights();
  var producersView = this.viewBuilder_.buildView(tree);
  // Sort by total time, desc, then by name, desc.
  producersView.sort(function(rec1, rec2) {
      return rec2.totalTime - rec1.totalTime ||
          (rec2.internalFuncName < rec1.internalFuncName ? -1 : 1); });
  this.printHeavyProfile(producersView.head.children);
  this.currentProducerProfile_ = null;
  this.generation_++;
TickProcessor.prototype.printStatistics = function() {
  if (this.preprocessJson) {
    this.profile_.writeJson();
    return;
  print('Statistical profiling result from ' + this.lastLogFileName_ +
        ', (' + this.ticks_.total +
        ' ticks, ' + this.ticks_.unaccounted + ' unaccounted, ' +
        this.ticks_.excluded + ' excluded).');
  if (this.ticks_.total == 0) return;
  var flatProfile = this.profile_.getFlatProfile();
  var flatView = this.viewBuilder_.buildView(flatProfile);
  // Sort by self time, desc, then by name, desc.
  flatView.sort(function(rec1, rec2) {
      return rec2.selfTime - rec1.selfTime ||
          (rec2.internalFuncName < rec1.internalFuncName ? -1 : 1); });
  var totalTicks = this.ticks_.total;
  if (this.ignoreUnknown_) {
    totalTicks -= this.ticks_.unaccounted;
  var printAllTicks = !this.onlySummary_;
  // Count library ticks
  var flatViewNodes = flatView.head.children;
  var self = this;
  var libraryTicks = 0;
  if(printAllTicks) this.printHeader('Shared libraries');
  this.printEntries(flatViewNodes, totalTicks, null,
      function(name) { return self.isSharedLibrary(name); },
      function(rec) { libraryTicks += rec.selfTime; }, printAllTicks);
  var nonLibraryTicks = totalTicks - libraryTicks;
  var jsTicks = 0;
  if(printAllTicks) this.printHeader('JavaScript');
  this.printEntries(flatViewNodes, totalTicks, nonLibraryTicks,
      function(name) { return self.isJsCode(name); },
      function(rec) { jsTicks += rec.selfTime; }, printAllTicks);
  var cppTicks = 0;
  if(printAllTicks) this.printHeader('C++');
  this.printEntries(flatViewNodes, totalTicks, nonLibraryTicks,
      function(name) { return self.isCppCode(name); },
      function(rec) { cppTicks += rec.selfTime; }, printAllTicks);
  this.printHeader('Summary');
  this.printLine('JavaScript', jsTicks, totalTicks, nonLibraryTicks);
  this.printLine('C++', cppTicks, totalTicks, nonLibraryTicks);
  this.printLine('GC', this.ticks_.gc, totalTicks, nonLibraryTicks);
  this.printLine('Shared libraries', libraryTicks, totalTicks, null);
  if (!this.ignoreUnknown_ && this.ticks_.unaccounted > 0) {
    this.printLine('Unaccounted', this.ticks_.unaccounted,
                   this.ticks_.total, null);
  if(printAllTicks) {
    print('\n [C++ entry points]:');
    print('   ticks    cpp   total   name');
    var c_entry_functions = this.profile_.getCEntryProfile();
    var total_c_entry = c_entry_functions[0].ticks;
    for (var i = 1; i < c_entry_functions.length; i++) {
      c = c_entry_functions[i];
      this.printLine(c.name, c.ticks, total_c_entry, totalTicks);
    }
    this.printHeavyProfHeader();
    var heavyProfile = this.profile_.getBottomUpProfile();
    var heavyView = this.viewBuilder_.buildView(heavyProfile);
    // To show the same percentages as in the flat profile.
    heavyView.head.totalTime = totalTicks;
    // Sort by total time, desc, then by name, desc.
    heavyView.sort(function(rec1, rec2) {
        return rec2.totalTime - rec1.totalTime ||
            (rec2.internalFuncName < rec1.internalFuncName ? -1 : 1); });
    this.printHeavyProfile(heavyView.head.children);
function padLeft(s, len) {
  s = s.toString();
  if (s.length < len) {
    var padLength = len - s.length;
    if (!(padLength in padLeft)) {
      padLeft[padLength] = new Array(padLength + 1).join(' ');
    }
    s = padLeft[padLength] + s;
  return s;
TickProcessor.prototype.printHeader = function(headerTitle) {
  print('\n [' + headerTitle + ']:');
  print('   ticks  total  nonlib   name');
TickProcessor.prototype.printLine = function(
    entry, ticks, totalTicks, nonLibTicks) {
  var pct = ticks * 100 / totalTicks;
  var nonLibPct = nonLibTicks != null
      ? padLeft((ticks * 100 / nonLibTicks).toFixed(1), 5) + '%  '
      : '        ';
  print('  ' + padLeft(ticks, 5) + '  ' +
        padLeft(pct.toFixed(1), 5) + '%  ' +
        nonLibPct +
        entry);
TickProcessor.prototype.printHeavyProfHeader = function() {
  print('\n [Bottom up (heavy) profile]:');
  print('  Note: percentage shows a share of a particular caller in the ' +
        'total\n' +
        '  amount of its parent calls.');
  print('  Callers occupying less than ' +
        TickProcessor.CALL_PROFILE_CUTOFF_PCT.toFixed(1) +
        '% are not shown.\n');
  print('   ticks parent  name');
TickProcessor.prototype.processProfile = function(
    profile, filterP, func) {
  for (var i = 0, n = profile.length; i < n; ++i) {
    var rec = profile[i];
    if (!filterP(rec.internalFuncName)) {
      continue;
    }
    func(rec);
TickProcessor.prototype.getLineAndColumn = function(name) {
  var re = /:([0-9]+):([0-9]+)$/;
  var array = re.exec(name);
  if (!array) {
    return null;
  return {line: array[1], column: array[2]};
TickProcessor.prototype.hasSourceMap = function() {
  return this.sourceMap != null;
TickProcessor.prototype.formatFunctionName = function(funcName) {
  if (!this.hasSourceMap()) {
    return funcName;
  var lc = this.getLineAndColumn(funcName);
  if (lc == null) {
    return funcName;
  // in source maps lines and columns are zero based
  var lineNumber = lc.line - 1;
  var column = lc.column - 1;
  var entry = this.sourceMap.findEntry(lineNumber, column);
  var sourceFile = entry[2];
  var sourceLine = entry[3] + 1;
  var sourceColumn = entry[4] + 1;
  return sourceFile + ':' + sourceLine + ':' + sourceColumn + ' -> ' + funcName;
TickProcessor.prototype.printEntries = function(
    profile, totalTicks, nonLibTicks, filterP, callback, printAllTicks) {
  var that = this;
  this.processProfile(profile, filterP, function (rec) {
    if (rec.selfTime == 0) return;
    callback(rec);
    var funcName = that.formatFunctionName(rec.internalFuncName);
    if(printAllTicks) {
      that.printLine(funcName, rec.selfTime, totalTicks, nonLibTicks);
    }
  });
TickProcessor.prototype.printHeavyProfile = function(profile, opt_indent) {
  var self = this;
  var indent = opt_indent || 0;
  var indentStr = padLeft('', indent);
  this.processProfile(profile, function() { return true; }, function (rec) {
    // Cut off too infrequent callers.
    if (rec.parentTotalPercent < TickProcessor.CALL_PROFILE_CUTOFF_PCT) return;
    var funcName = self.formatFunctionName(rec.internalFuncName);
    print('  ' + padLeft(rec.totalTime, 5) + '  ' +
          padLeft(rec.parentTotalPercent.toFixed(1), 5) + '%  ' +
          indentStr + funcName);
    // Limit backtrace depth.
    if (indent < 2 * self.callGraphSize_) {
      self.printHeavyProfile(rec.children, indent + 2);
    }
    // Delimit top-level functions.
    if (indent == 0) {
      print('');
    }
  });
function CppEntriesProvider() {
CppEntriesProvider.prototype.parseVmSymbols = function(
    libName, libStart, libEnd, libASLRSlide, processorFunc) {
  this.loadSymbols(libName);
  var prevEntry;
  function addEntry(funcInfo) {
    // Several functions can be mapped onto the same address. To avoid
    // creating zero-sized entries, skip such duplicates.
    // Also double-check that function belongs to the library address space.
    if (prevEntry && !prevEntry.end &&
        prevEntry.start < funcInfo.start &&
        prevEntry.start >= libStart && funcInfo.start <= libEnd) {
      processorFunc(prevEntry.name, prevEntry.start, funcInfo.start);
    }
    if (funcInfo.end &&
        (!prevEntry || prevEntry.start != funcInfo.start) &&
        funcInfo.start >= libStart && funcInfo.end <= libEnd) {
      processorFunc(funcInfo.name, funcInfo.start, funcInfo.end);
    }
    prevEntry = funcInfo;
  while (true) {
    var funcInfo = this.parseNextLine();
    if (funcInfo === null) {
      continue;
    } else if (funcInfo === false) {
      break;
    }
    if (funcInfo.start < libStart - libASLRSlide &&
        funcInfo.start < libEnd - libStart) {
      funcInfo.start += libStart;
    } else {
      funcInfo.start += libASLRSlide;
    }
    if (funcInfo.size) {
      funcInfo.end = funcInfo.start + funcInfo.size;
    }
    addEntry(funcInfo);
  addEntry({name: '', start: libEnd});
CppEntriesProvider.prototype.loadSymbols = function(libName) {
CppEntriesProvider.prototype.parseNextLine = function() {
  return false;
function UnixCppEntriesProvider(nmExec, targetRootFS) {
  this.symbols = [];
  this.parsePos = 0;
  this.nmExec = nmExec;
  this.targetRootFS = targetRootFS;
  this.FUNC_RE = /^([0-9a-fA-F]{8,16}) ([0-9a-fA-F]{8,16} )?[tTwW] (.*)$/;
inherits(UnixCppEntriesProvider, CppEntriesProvider);
UnixCppEntriesProvider.prototype.loadSymbols = function(libName) {
  this.parsePos = 0;
  libName = this.targetRootFS + libName;
  try {
    this.symbols = [
      os.system(this.nmExec, ['-C', '-n', '-S', libName], -1, -1),
      os.system(this.nmExec, ['-C', '-n', '-S', '-D', libName], -1, -1)
    ];
  } catch (e) {
    // If the library cannot be found on this system let's not panic.
    this.symbols = ['', ''];
UnixCppEntriesProvider.prototype.parseNextLine = function() {
  if (this.symbols.length == 0) {
    return false;
  var lineEndPos = this.symbols[0].indexOf('\n', this.parsePos);
  if (lineEndPos == -1) {
    this.symbols.shift();
    this.parsePos = 0;
    return this.parseNextLine();
  var line = this.symbols[0].substring(this.parsePos, lineEndPos);
  this.parsePos = lineEndPos + 1;
  var fields = line.match(this.FUNC_RE);
  var funcInfo = null;
  if (fields) {
    funcInfo = { name: fields[3], start: parseInt(fields[1], 16) };
    if (fields[2]) {
      funcInfo.size = parseInt(fields[2], 16);
    }
  return funcInfo;
function MacCppEntriesProvider(nmExec, targetRootFS) {
  UnixCppEntriesProvider.call(this, nmExec, targetRootFS);
  // Note an empty group. It is required, as UnixCppEntriesProvider expects 3 groups.
  this.FUNC_RE = /^([0-9a-fA-F]{8,16})() (.*)$/;
inherits(MacCppEntriesProvider, UnixCppEntriesProvider);
MacCppEntriesProvider.prototype.loadSymbols = function(libName) {
  this.parsePos = 0;
  libName = this.targetRootFS + libName;
  // It seems that in OS X `nm` thinks that `-f` is a format option, not a
  // "flat" display option flag.
  try {
    this.symbols = [os.system(this.nmExec, ['-n', libName], -1, -1), ''];
  } catch (e) {
    // If the library cannot be found on this system let's not panic.
    this.symbols = '';
function WindowsCppEntriesProvider(_ignored_nmExec, targetRootFS) {
  this.targetRootFS = targetRootFS;
  this.symbols = '';
  this.parsePos = 0;
inherits(WindowsCppEntriesProvider, CppEntriesProvider);
WindowsCppEntriesProvider.FILENAME_RE = /^(.*)\.([^.]+)$/;
WindowsCppEntriesProvider.FUNC_RE =
    /^\s+0001:[0-9a-fA-F]{8}\s+([_\?@$0-9a-zA-Z]+)\s+([0-9a-fA-F]{8}).*$/;
WindowsCppEntriesProvider.IMAGE_BASE_RE =
    /^\s+0000:00000000\s+___ImageBase\s+([0-9a-fA-F]{8}).*$/;
// This is almost a constant on Windows.
WindowsCppEntriesProvider.EXE_IMAGE_BASE = 0x00400000;
WindowsCppEntriesProvider.prototype.loadSymbols = function(libName) {
  libName = this.targetRootFS + libName;
  var fileNameFields = libName.match(WindowsCppEntriesProvider.FILENAME_RE);
  if (!fileNameFields) return;
  var mapFileName = fileNameFields[1] + '.map';
  this.moduleType_ = fileNameFields[2].toLowerCase();
  try {
    this.symbols = read(mapFileName);
  } catch (e) {
    // If .map file cannot be found let's not panic.
    this.symbols = '';
WindowsCppEntriesProvider.prototype.parseNextLine = function() {
  var lineEndPos = this.symbols.indexOf('\r\n', this.parsePos);
  if (lineEndPos == -1) {
    return false;
  var line = this.symbols.substring(this.parsePos, lineEndPos);
  this.parsePos = lineEndPos + 2;
  // Image base entry is above all other symbols, so we can just
  // terminate parsing.
  var imageBaseFields = line.match(WindowsCppEntriesProvider.IMAGE_BASE_RE);
  if (imageBaseFields) {
    var imageBase = parseInt(imageBaseFields[1], 16);
    if ((this.moduleType_ == 'exe') !=
        (imageBase == WindowsCppEntriesProvider.EXE_IMAGE_BASE)) {
      return false;
    }
  var fields = line.match(WindowsCppEntriesProvider.FUNC_RE);
  return fields ?
      { name: this.unmangleName(fields[1]), start: parseInt(fields[2], 16) } :
      null;
 * Performs very simple unmangling of C++ names.
 * Does not handle arguments and template arguments. The mangled names have
 * the form:
 *   ?LookupInDescriptor@JSObject@internal@v8@@...arguments info...
WindowsCppEntriesProvider.prototype.unmangleName = function(name) {
  // Empty or non-mangled name.
  if (name.length < 1 || name.charAt(0) != '?') return name;
  var nameEndPos = name.indexOf('@@');
  var components = name.substring(1, nameEndPos).split('@');
  components.reverse();
  return components.join('::');
class ArgumentsProcessor extends BaseArgumentsProcessor {
  getArgsDispatch() {
    let dispatch = {
      '-j': ['stateFilter', TickProcessor.VmStates.JS,
          'Show only ticks from JS VM state'],
      '-g': ['stateFilter', TickProcessor.VmStates.GC,
          'Show only ticks from GC VM state'],
      '-p': ['stateFilter', TickProcessor.VmStates.PARSER,
          'Show only ticks from PARSER VM state'],
      '-b': ['stateFilter', TickProcessor.VmStates.BYTECODE_COMPILER,
          'Show only ticks from BYTECODE_COMPILER VM state'],
      '-c': ['stateFilter', TickProcessor.VmStates.COMPILER,
          'Show only ticks from COMPILER VM state'],
      '-o': ['stateFilter', TickProcessor.VmStates.OTHER,
          'Show only ticks from OTHER VM state'],
      '-e': ['stateFilter', TickProcessor.VmStates.EXTERNAL,
          'Show only ticks from EXTERNAL VM state'],
      '--filter-runtime-timer': ['runtimeTimerFilter', null,
              'Show only ticks matching the given runtime timer scope'],
      '--call-graph-size': ['callGraphSize', TickProcessor.CALL_GRAPH_SIZE,
          'Set the call graph size'],
      '--ignore-unknown': ['ignoreUnknown', true,
          'Exclude ticks of unknown code entries from processing'],
      '--separate-ic': ['separateIc', parseBool,
          'Separate IC entries'],
      '--separate-bytecodes': ['separateBytecodes', parseBool,
          'Separate Bytecode entries'],
      '--separate-builtins': ['separateBuiltins', parseBool,
          'Separate Builtin entries'],
      '--separate-stubs': ['separateStubs', parseBool,
          'Separate Stub entries'],
      '--unix': ['platform', 'unix',
          'Specify that we are running on *nix platform'],
      '--windows': ['platform', 'windows',
          'Specify that we are running on Windows platform'],
      '--mac': ['platform', 'mac',
          'Specify that we are running on Mac OS X platform'],
      '--nm': ['nm', 'nm',
          'Specify the \'nm\' executable to use (e.g. --nm=/my_dir/nm)'],
      '--target': ['targetRootFS', '',
          'Specify the target root directory for cross environment'],
      '--range': ['range', 'auto,auto',
          'Specify the range limit as [start],[end]'],
      '--distortion': ['distortion', 0,
          'Specify the logging overhead in picoseconds'],
      '--source-map': ['sourceMap', null,
          'Specify the source map that should be used for output'],
      '--timed-range': ['timedRange', true,
          'Ignore ticks before first and after last Date.now() call'],
      '--pairwise-timed-range': ['pairwiseTimedRange', true,
          'Ignore ticks outside pairs of Date.now() calls'],
      '--only-summary': ['onlySummary', true,
          'Print only tick summary, exclude other information'],
      '--preprocess': ['preprocessJson', true,
          'Preprocess for consumption with web interface']
    };
    dispatch['--js'] = dispatch['-j'];
    dispatch['--gc'] = dispatch['-g'];
    dispatch['--compiler'] = dispatch['-c'];
    dispatch['--other'] = dispatch['-o'];
    dispatch['--external'] = dispatch['-e'];
    dispatch['--ptr'] = dispatch['--pairwise-timed-range'];
    return dispatch;
  getDefaultResults() {
    return {
      logFileName: 'v8.log',
      platform: 'unix',
      stateFilter: null,
      callGraphSize: 5,
      ignoreUnknown: false,
      separateIc: true,
      separateBytecodes: false,
      separateBuiltins: true,
      separateStubs: true,
      preprocessJson: null,
      targetRootFS: '',
      nm: 'nm',
      range: 'auto,auto',
      distortion: 0,
      timedRange: false,
      pairwiseTimedRange: false,
      onlySummary: false,
      runtimeTimerFilter: null,
    };
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// This is a copy from blink dev tools, see:
// http://src.chromium.org/viewvc/blink/trunk/Source/devtools/front_end/SourceMap.js
// revision: 153407
// Added to make the file work without dev tools
WebInspector = {};
WebInspector.ParsedURL = {};
WebInspector.ParsedURL.completeURL = function(){};
// start of original file content
 * Copyright (C) 2012 Google Inc. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * Implements Source Map V3 model. See http://code.google.com/p/closure-compiler/wiki/SourceMaps
 * for format description.
 * @constructor
 * @param {string} sourceMappingURL
 * @param {SourceMapV3} payload
WebInspector.SourceMap = function(sourceMappingURL, payload)
    if (!WebInspector.SourceMap.prototype._base64Map) {
        const base64Digits = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        WebInspector.SourceMap.prototype._base64Map = {};
        for (var i = 0; i < base64Digits.length; ++i)
            WebInspector.SourceMap.prototype._base64Map[base64Digits.charAt(i)] = i;
    }
    this._sourceMappingURL = sourceMappingURL;
    this._reverseMappingsBySourceURL = {};
    this._mappings = [];
    this._sources = {};
    this._sourceContentByURL = {};
    this._parseMappingPayload(payload);
 * @param {string} sourceMapURL
 * @param {string} compiledURL
 * @param {function(WebInspector.SourceMap)} callback
WebInspector.SourceMap.load = function(sourceMapURL, compiledURL, callback)
    NetworkAgent.loadResourceForFrontend(WebInspector.resourceTreeModel.mainFrame.id, sourceMapURL, undefined, contentLoaded.bind(this));
    /**
     * @param {?Protocol.Error} error
     * @param {number} statusCode
     * @param {NetworkAgent.Headers} headers
     * @param {string} content
     */
    function contentLoaded(error, statusCode, headers, content)
    {
        if (error || !content || statusCode >= 400) {
            console.error("Could not load content for " + sourceMapURL + " : " + (error || ("HTTP status code: " + statusCode)));
            callback(null);
            return;
        }
        if (content.slice(0, 3) === ")]}")
            content = content.substring(content.indexOf('\n'));
        try {
            var payload = /** @type {SourceMapV3} */ (JSON.parse(content));
            var baseURL = sourceMapURL.startsWith("data:") ? compiledURL : sourceMapURL;
            callback(new WebInspector.SourceMap(baseURL, payload));
        } catch(e) {
            console.error(e.message);
            callback(null);
        }
    }
WebInspector.SourceMap.prototype = {
    /**
     * @return {Array.<string>}
     */
    sources: function()
    {
        return Object.keys(this._sources);
    },
    /**
     * @param {string} sourceURL
     * @return {string|undefined}
     */
    sourceContent: function(sourceURL)
    {
        return this._sourceContentByURL[sourceURL];
    },
    /**
     * @param {string} sourceURL
     * @param {WebInspector.ResourceType} contentType
     * @return {WebInspector.ContentProvider}
     */
    sourceContentProvider: function(sourceURL, contentType)
    {
        var lastIndexOfDot = sourceURL.lastIndexOf(".");
        var extension = lastIndexOfDot !== -1 ? sourceURL.substr(lastIndexOfDot + 1) : "";
        var mimeType = WebInspector.ResourceType.mimeTypesForExtensions[extension.toLowerCase()];
        var sourceContent = this.sourceContent(sourceURL);
        if (sourceContent)
            return new WebInspector.StaticContentProvider(contentType, sourceContent, mimeType);
        return new WebInspector.CompilerSourceMappingContentProvider(sourceURL, contentType, mimeType);
    },
    /**
     * @param {SourceMapV3} mappingPayload
     */
    _parseMappingPayload: function(mappingPayload)
    {
        if (mappingPayload.sections)
            this._parseSections(mappingPayload.sections);
        else
            this._parseMap(mappingPayload, 0, 0);
    },
    /**
     * @param {Array.<SourceMapV3.Section>} sections
     */
    _parseSections: function(sections)
    {
        for (var i = 0; i < sections.length; ++i) {
            var section = sections[i];
            this._parseMap(section.map, section.offset.line, section.offset.column);
        }
    },
    /**
     * @param {number} lineNumber in compiled resource
     * @param {number} columnNumber in compiled resource
     * @return {?Array}
     */
    findEntry: function(lineNumber, columnNumber)
    {
        var first = 0;
        var count = this._mappings.length;
        while (count > 1) {
          var step = count >> 1;
          var middle = first + step;
          var mapping = this._mappings[middle];
          if (lineNumber < mapping[0] || (lineNumber === mapping[0] && columnNumber < mapping[1]))
              count = step;
          else {
              first = middle;
              count -= step;
          }
        }
        var entry = this._mappings[first];
        if (!first && entry && (lineNumber < entry[0] || (lineNumber === entry[0] && columnNumber < entry[1])))
            return null;
        return entry;
    },
    /**
     * @param {string} sourceURL of the originating resource
     * @param {number} lineNumber in the originating resource
     * @return {Array}
     */
    findEntryReversed: function(sourceURL, lineNumber)
    {
        var mappings = this._reverseMappingsBySourceURL[sourceURL];
        for ( ; lineNumber < mappings.length; ++lineNumber) {
            var mapping = mappings[lineNumber];
            if (mapping)
                return mapping;
        }
        return this._mappings[0];
    },
    /**
     * @override
     */
    _parseMap: function(map, lineNumber, columnNumber)
    {
        var sourceIndex = 0;
        var sourceLineNumber = 0;
        var sourceColumnNumber = 0;
        var nameIndex = 0;
        var sources = [];
        var originalToCanonicalURLMap = {};
        for (var i = 0; i < map.sources.length; ++i) {
            var originalSourceURL = map.sources[i];
            var sourceRoot = map.sourceRoot || "";
            if (sourceRoot && !sourceRoot.endsWith("/"))
                sourceRoot += "/";
            var href = sourceRoot + originalSourceURL;
            var url = WebInspector.ParsedURL.completeURL(this._sourceMappingURL, href) || href;
            originalToCanonicalURLMap[originalSourceURL] = url;
            sources.push(url);
            this._sources[url] = true;
            if (map.sourcesContent && map.sourcesContent[i])
                this._sourceContentByURL[url] = map.sourcesContent[i];
        }
        var stringCharIterator = new WebInspector.SourceMap.StringCharIterator(map.mappings);
        var sourceURL = sources[sourceIndex];
        while (true) {
            if (stringCharIterator.peek() === ",")
                stringCharIterator.next();
            else {
                while (stringCharIterator.peek() === ";") {
                    lineNumber += 1;
                    columnNumber = 0;
                    stringCharIterator.next();
                }
                if (!stringCharIterator.hasNext())
                    break;
            }
            columnNumber += this._decodeVLQ(stringCharIterator);
            if (this._isSeparator(stringCharIterator.peek())) {
                this._mappings.push([lineNumber, columnNumber]);
                continue;
            }
            var sourceIndexDelta = this._decodeVLQ(stringCharIterator);
            if (sourceIndexDelta) {
                sourceIndex += sourceIndexDelta;
                sourceURL = sources[sourceIndex];
            }
            sourceLineNumber += this._decodeVLQ(stringCharIterator);
            sourceColumnNumber += this._decodeVLQ(stringCharIterator);
            if (!this._isSeparator(stringCharIterator.peek()))
                nameIndex += this._decodeVLQ(stringCharIterator);
            this._mappings.push([lineNumber, columnNumber, sourceURL, sourceLineNumber, sourceColumnNumber]);
        }
        for (var i = 0; i < this._mappings.length; ++i) {
            var mapping = this._mappings[i];
            var url = mapping[2];
            if (!url)
                continue;
            if (!this._reverseMappingsBySourceURL[url])
                this._reverseMappingsBySourceURL[url] = [];
            var reverseMappings = this._reverseMappingsBySourceURL[url];
            var sourceLine = mapping[3];
            if (!reverseMappings[sourceLine])
                reverseMappings[sourceLine] = [mapping[0], mapping[1]];
        }
    },
    /**
     * @param {string} char
     * @return {boolean}
     */
    _isSeparator: function(char)
    {
        return char === "," || char === ";";
    },
    /**
     * @param {WebInspector.SourceMap.StringCharIterator} stringCharIterator
     * @return {number}
     */
    _decodeVLQ: function(stringCharIterator)
    {
        // Read unsigned value.
        var result = 0;
        var shift = 0;
        do {
            var digit = this._base64Map[stringCharIterator.next()];
            result += (digit & this._VLQ_BASE_MASK) << shift;
            shift += this._VLQ_BASE_SHIFT;
        } while (digit & this._VLQ_CONTINUATION_MASK);
        // Fix the sign.
        var negative = result & 1;
        result >>= 1;
        return negative ? -result : result;
    },
    _VLQ_BASE_SHIFT: 5,
    _VLQ_BASE_MASK: (1 << 5) - 1,
    _VLQ_CONTINUATION_MASK: 1 << 5
 * @constructor
 * @param {string} string
WebInspector.SourceMap.StringCharIterator = function(string)
    this._string = string;
    this._position = 0;
WebInspector.SourceMap.StringCharIterator.prototype = {
    /**
     * @return {string}
     */
    next: function()
    {
        return this._string.charAt(this._position++);
    },
    /**
     * @return {string}
     */
    peek: function()
    {
        return this._string.charAt(this._position);
    },
    /**
     * @return {boolean}
     */
    hasNext: function()
    {
        return this._position < this._string.length;
    }
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Tick Processor's code flow.
function processArguments(args) {
  var processor = new ArgumentsProcessor(args);
  if (processor.parse()) {
    return processor.result();
  } else {
    processor.printUsageAndExit();
function initSourceMapSupport() {
  // Pull dev tools source maps  into our name space.
  SourceMap = WebInspector.SourceMap;
  // Overwrite the load function to load scripts synchronously.
  SourceMap.load = function(sourceMapURL) {
    var content = readFile(sourceMapURL);
    var sourceMapObject = (JSON.parse(content));
    return new SourceMap(sourceMapURL, sourceMapObject);
  };
var entriesProviders = {
  'unix': UnixCppEntriesProvider,
  'windows': WindowsCppEntriesProvider,
  'mac': MacCppEntriesProvider
var params = processArguments(arguments);
var sourceMap = null;
if (params.sourceMap) {
  initSourceMapSupport();
  sourceMap = SourceMap.load(params.sourceMap);
var tickProcessor = new TickProcessor(
  new (entriesProviders[params.platform])(params.nm, params.targetRootFS),
  params.separateIc,
  params.separateBytecodes,
  params.separateBuiltins,
  params.separateStubs,
  params.callGraphSize,
  params.ignoreUnknown,
  params.stateFilter,
  params.distortion,
  params.range,
  sourceMap,
  params.timedRange,
  params.pairwiseTimedRange,
  params.onlySummary,
  params.runtimeTimerFilter,
  params.preprocessJson);
tickProcessor.processLogFile(params.logFileName);
tickProcessor.printStatistics();
 * Copyright Node.js contributors. All rights reserved.
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
'use strict';
const { spawn } = require('child_process');
const { EventEmitter } = require('events');
const net = require('net');
const util = require('util');
const runAsStandalone = typeof __dirname !== 'undefined';
const [ InspectClient, createRepl ] =
  runAsStandalone ?
  // This copy of node-inspect is on-disk, relative paths make sense.
    require('./internal/inspect_client'),
    require('./internal/inspect_repl')
  ] :
  // This copy of node-inspect is built into the node executable.
    require('node-inspect/lib/internal/inspect_client'),
    require('node-inspect/lib/internal/inspect_repl')
  ];
const debuglog = util.debuglog('inspect');
class StartupError extends Error {
  constructor(message) {
    super(message);
    this.name = 'StartupError';
function portIsFree(host, port, timeout = 2000) {
  if (port === 0) return Promise.resolve();  // Binding to a random port.
  const retryDelay = 150;
  let didTimeOut = false;
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      didTimeOut = true;
      reject(new StartupError(
        `Timeout (${timeout}) waiting for ${host}:${port} to be free`));
    }, timeout);
    function pingPort() {
      if (didTimeOut) return;
      const socket = net.connect(port, host);
      let didRetry = false;
      function retry() {
        if (!didRetry && !didTimeOut) {
          didRetry = true;
          setTimeout(pingPort, retryDelay);
        }
      }
      socket.on('error', (error) => {
        if (error.code === 'ECONNREFUSED') {
          resolve();
        } else {
          retry();
        }
      });
      socket.on('connect', () => {
        socket.destroy();
        retry();
      });
    }
    pingPort();
  });
function runScript(script, scriptArgs, inspectHost, inspectPort, childPrint) {
  return portIsFree(inspectHost, inspectPort)
    .then(() => {
      return new Promise((resolve) => {
        const needDebugBrk = process.version.match(/^v(6|7)\./);
        const args = (needDebugBrk ?
                          ['--inspect', `--debug-brk=${inspectPort}`] :
                          [`--inspect-brk=${inspectPort}`])
                         .concat([script], scriptArgs);
        const child = spawn(process.execPath, args);
        child.stdout.setEncoding('utf8');
        child.stderr.setEncoding('utf8');
        child.stdout.on('data', childPrint);
        child.stderr.on('data', childPrint);
        let output = '';
        function waitForListenHint(text) {
          output += text;
          if (/Debugger listening on ws:\/\/\[?(.+?)\]?:(\d+)\//.test(output)) {
            const host = RegExp.$1;
            const port = Number.parseInt(RegExp.$2);
            child.stderr.removeListener('data', waitForListenHint);
            resolve([child, port, host]);
          }
        }
        child.stderr.on('data', waitForListenHint);
      });
    });
function createAgentProxy(domain, client) {
  const agent = new EventEmitter();
  agent.then = (...args) => {
    // TODO: potentially fetch the protocol and pretty-print it here.
    const descriptor = {
      [util.inspect.custom](depth, { stylize }) {
        return stylize(`[Agent ${domain}]`, 'special');
      },
    };
    return Promise.resolve(descriptor).then(...args);
  };
  return new Proxy(agent, {
    get(target, name) {
      if (name in target) return target[name];
      return function callVirtualMethod(params) {
        return client.callMethod(`${domain}.${name}`, params);
      };
    },
  });
class NodeInspector {
  constructor(options, stdin, stdout) {
    this.options = options;
    this.stdin = stdin;
    this.stdout = stdout;
    this.paused = true;
    this.child = null;
    if (options.script) {
      this._runScript = runScript.bind(null,
                                       options.script,
                                       options.scriptArgs,
                                       options.host,
                                       options.port,
                                       this.childPrint.bind(this));
    } else {
      this._runScript =
          () => Promise.resolve([null, options.port, options.host]);
    }
    this.client = new InspectClient();
    this.domainNames = ['Debugger', 'HeapProfiler', 'Profiler', 'Runtime'];
    this.domainNames.forEach((domain) => {
      this[domain] = createAgentProxy(domain, this.client);
    });
    this.handleDebugEvent = (fullName, params) => {
      const [domain, name] = fullName.split('.');
      if (domain in this) {
        this[domain].emit(name, params);
      }
    };
    this.client.on('debugEvent', this.handleDebugEvent);
    const startRepl = createRepl(this);
    // Handle all possible exits
    process.on('exit', () => this.killChild());
    process.once('SIGTERM', process.exit.bind(process, 0));
    process.once('SIGHUP', process.exit.bind(process, 0));
    this.run()
      .then(() => startRepl())
      .then((repl) => {
        this.repl = repl;
        this.repl.on('exit', () => {
          process.exit(0);
        });
        this.paused = false;
      })
      .then(null, (error) => process.nextTick(() => { throw error; }));
  suspendReplWhile(fn) {
    if (this.repl) {
      this.repl.pause();
    }
    this.stdin.pause();
    this.paused = true;
    return new Promise((resolve) => {
      resolve(fn());
    }).then(() => {
      this.paused = false;
      if (this.repl) {
        this.repl.resume();
        this.repl.displayPrompt();
      }
      this.stdin.resume();
    }).then(null, (error) => process.nextTick(() => { throw error; }));
  killChild() {
    this.client.reset();
    if (this.child) {
      this.child.kill();
      this.child = null;
    }
  run() {
    this.killChild();
    return this._runScript().then(([child, port, host]) => {
      this.child = child;
      let connectionAttempts = 0;
      const attemptConnect = () => {
        ++connectionAttempts;
        debuglog('connection attempt #%d', connectionAttempts);
        this.stdout.write('.');
        return this.client.connect(port, host)
          .then(() => {
            debuglog('connection established');
            this.stdout.write(' ok');
          }, (error) => {
            debuglog('connect failed', error);
            // If it's failed to connect 10 times then print failed message
            if (connectionAttempts >= 10) {
              this.stdout.write(' failed to connect, please retry\n');
              process.exit(1);
            }
            return new Promise((resolve) => setTimeout(resolve, 500))
              .then(attemptConnect);
          });
      };
      this.print(`connecting to ${host}:${port} ..`, true);
      return attemptConnect();
    });
  clearLine() {
    if (this.stdout.isTTY) {
      this.stdout.cursorTo(0);
      this.stdout.clearLine(1);
    } else {
      this.stdout.write('\b');
    }
  print(text, oneline = false) {
    this.clearLine();
    this.stdout.write(oneline ? text : `${text}\n`);
  childPrint(text) {
    this.print(
      text.toString()
        .split(/\r\n|\r|\n/g)
        .filter((chunk) => !!chunk)
        .map((chunk) => `< ${chunk}`)
        .join('\n')
    );
    if (!this.paused) {
      this.repl.displayPrompt(true);
    }
    if (/Waiting for the debugger to disconnect\.\.\.\n$/.test(text)) {
      this.killChild();
    }
function parseArgv([target, ...args]) {
  let host = '127.0.0.1';
  let port = 9229;
  let isRemote = false;
  let script = target;
  let scriptArgs = args;
  const hostMatch = target.match(/^([^:]+):(\d+)$/);
  const portMatch = target.match(/^--port=(\d+)$/);
  if (hostMatch) {
    // Connecting to remote debugger
    // `node-inspect localhost:9229`
    host = hostMatch[1];
    port = parseInt(hostMatch[2], 10);
    isRemote = true;
    script = null;
  } else if (portMatch) {
    // start debugee on custom port
    // `node inspect --port=9230 script.js`
    port = parseInt(portMatch[1], 10);
    script = args[0];
    scriptArgs = args.slice(1);
  } else if (args.length === 1 && /^\d+$/.test(args[0]) && target === '-p') {
    // Start debugger against a given pid
    const pid = parseInt(args[0], 10);
    try {
      process._debugProcess(pid);
    } catch (e) {
      if (e.code === 'ESRCH') {
        /* eslint-disable no-console */
        console.error(`Target process: ${pid} doesn't exist.`);
        /* eslint-enable no-console */
        process.exit(1);
      }
      throw e;
    }
    script = null;
    isRemote = true;
  return {
    host, port, isRemote, script, scriptArgs,
  };
function startInspect(argv = process.argv.slice(2),
                      stdin = process.stdin,
                      stdout = process.stdout) {
  /* eslint-disable no-console */
  if (argv.length < 1) {
    const invokedAs = runAsStandalone ?
      'node-inspect' :
      `${process.argv0} ${process.argv[1]}`;
    console.error(`Usage: ${invokedAs} script.js`);
    console.error(`       ${invokedAs} <host>:<port>`);
    console.error(`       ${invokedAs} -p <pid>`);
    process.exit(1);
  const options = parseArgv(argv);
  const inspector = new NodeInspector(options, stdin, stdout);
  stdin.resume();
  function handleUnexpectedError(e) {
    if (!(e instanceof StartupError)) {
      console.error('There was an internal error in node-inspect. ' +
                    'Please report this bug.');
      console.error(e.message);
      console.error(e.stack);
    } else {
      console.error(e.message);
    }
    if (inspector.child) inspector.child.kill();
    process.exit(1);
  process.on('uncaughtException', handleUnexpectedError);
  /* eslint-enable no-console */
exports.start = startInspect;
 * Copyright Node.js contributors. All rights reserved.
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
'use strict';
const Buffer = require('buffer').Buffer;
const crypto = require('crypto');
const { EventEmitter } = require('events');
const http = require('http');
const URL = require('url');
const util = require('util');
const debuglog = util.debuglog('inspect');
const kOpCodeText = 0x1;
const kOpCodeClose = 0x8;
const kFinalBit = 0x80;
const kReserved1Bit = 0x40;
const kReserved2Bit = 0x20;
const kReserved3Bit = 0x10;
const kOpCodeMask = 0xF;
const kMaskBit = 0x80;
const kPayloadLengthMask = 0x7F;
const kMaxSingleBytePayloadLength = 125;
const kMaxTwoBytePayloadLength = 0xFFFF;
const kTwoBytePayloadLengthField = 126;
const kEightBytePayloadLengthField = 127;
const kMaskingKeyWidthInBytes = 4;
function isEmpty(obj) {
  return Object.keys(obj).length === 0;
function unpackError({ code, message, data }) {
  const err = new Error(`${message} - ${data}`);
  err.code = code;
  Error.captureStackTrace(err, unpackError);
  return err;
function encodeFrameHybi17(payload) {
  var i;
  const dataLength = payload.length;
  let singleByteLength;
  let additionalLength;
  if (dataLength > kMaxTwoBytePayloadLength) {
    singleByteLength = kEightBytePayloadLengthField;
    additionalLength = Buffer.alloc(8);
    let remaining = dataLength;
    for (i = 0; i < 8; ++i) {
      additionalLength[7 - i] = remaining & 0xFF;
      remaining >>= 8;
    }
  } else if (dataLength > kMaxSingleBytePayloadLength) {
    singleByteLength = kTwoBytePayloadLengthField;
    additionalLength = Buffer.alloc(2);
    additionalLength[0] = (dataLength & 0xFF00) >> 8;
    additionalLength[1] = dataLength & 0xFF;
  } else {
    additionalLength = Buffer.alloc(0);
    singleByteLength = dataLength;
  const header = Buffer.from([
    kFinalBit | kOpCodeText,
    kMaskBit | singleByteLength,
  ]);
  const mask = Buffer.alloc(4);
  const masked = Buffer.alloc(dataLength);
  for (i = 0; i < dataLength; ++i) {
    masked[i] = payload[i] ^ mask[i % kMaskingKeyWidthInBytes];
  return Buffer.concat([header, additionalLength, mask, masked]);
function decodeFrameHybi17(data) {
  const dataAvailable = data.length;
  const notComplete = { closed: false, payload: null, rest: data };
  let payloadOffset = 2;
  if ((dataAvailable - payloadOffset) < 0) return notComplete;
  const firstByte = data[0];
  const secondByte = data[1];
  const final = (firstByte & kFinalBit) !== 0;
  const reserved1 = (firstByte & kReserved1Bit) !== 0;
  const reserved2 = (firstByte & kReserved2Bit) !== 0;
  const reserved3 = (firstByte & kReserved3Bit) !== 0;
  const opCode = firstByte & kOpCodeMask;
  const masked = (secondByte & kMaskBit) !== 0;
  const compressed = reserved1;
  if (compressed) {
    throw new Error('Compressed frames not supported');
  if (!final || reserved2 || reserved3) {
    throw new Error('Only compression extension is supported');
  if (masked) {
    throw new Error('Masked server frame - not supported');
  let closed = false;
  switch (opCode) {
    case kOpCodeClose:
      closed = true;
      break;
    case kOpCodeText:
      break;
    default:
      throw new Error(`Unsupported op code ${opCode}`);
  let payloadLength = secondByte & kPayloadLengthMask;
  switch (payloadLength) {
    case kTwoBytePayloadLengthField:
      payloadOffset += 2;
      payloadLength = (data[2] << 8) + data[3];
      break;
    case kEightBytePayloadLengthField:
      payloadOffset += 8;
      payloadLength = 0;
      for (var i = 0; i < 8; ++i) {
        payloadLength <<= 8;
        payloadLength |= data[2 + i];
      }
      break;
    default:
      // Nothing. We already have the right size.
  if ((dataAvailable - payloadOffset - payloadLength) < 0) return notComplete;
  const payloadEnd = payloadOffset + payloadLength;
  return {
    payload: data.slice(payloadOffset, payloadEnd),
    rest: data.slice(payloadEnd),
    closed,
  };
class Client extends EventEmitter {
  constructor() {
    super();
    this.handleChunk = this._handleChunk.bind(this);
    this._port = undefined;
    this._host = undefined;
    this.reset();
  _handleChunk(chunk) {
    this._unprocessed = Buffer.concat([this._unprocessed, chunk]);
    while (this._unprocessed.length > 2) {
      const {
        closed,
        payload: payloadBuffer,
        rest
      } = decodeFrameHybi17(this._unprocessed);
      this._unprocessed = rest;
      if (closed) {
        this.reset();
        return;
      }
      if (payloadBuffer === null) break;
      const payloadStr = payloadBuffer.toString();
      debuglog('< %s', payloadStr);
      const lastChar = payloadStr[payloadStr.length - 1];
      if (payloadStr[0] !== '{' || lastChar !== '}') {
        throw new Error(`Payload does not look like JSON: ${payloadStr}`);
      }
      let payload;
      try {
        payload = JSON.parse(payloadStr);
      } catch (parseError) {
        parseError.string = payloadStr;
        throw parseError;
      }
      const { id, method, params, result, error } = payload;
      if (id) {
        const handler = this._pending[id];
        if (handler) {
          delete this._pending[id];
          handler(error, result);
        }
      } else if (method) {
        this.emit('debugEvent', method, params);
        this.emit(method, params);
      } else {
        throw new Error(`Unsupported response: ${payloadStr}`);
      }
    }
  reset() {
    if (this._http) {
      this._http.destroy();
    }
    this._http = null;
    this._lastId = 0;
    this._socket = null;
    this._pending = {};
    this._unprocessed = Buffer.alloc(0);
  callMethod(method, params) {
    return new Promise((resolve, reject) => {
      if (!this._socket) {
        reject(new Error('Use `run` to start the app again.'));
        return;
      }
      const data = { id: ++this._lastId, method, params };
      this._pending[data.id] = (error, result) => {
        if (error) reject(unpackError(error));
        else resolve(isEmpty(result) ? undefined : result);
      };
      const json = JSON.stringify(data);
      debuglog('> %s', json);
      this._socket.write(encodeFrameHybi17(Buffer.from(json)));
    });
  _fetchJSON(urlPath) {
    return new Promise((resolve, reject) => {
      const httpReq = http.get({
        host: this._host,
        port: this._port,
        path: urlPath,
      });
      const chunks = [];
      function onResponse(httpRes) {
        function parseChunks() {
          const resBody = Buffer.concat(chunks).toString();
          if (httpRes.statusCode !== 200) {
            reject(new Error(`Unexpected ${httpRes.statusCode}: ${resBody}`));
            return;
          }
          try {
            resolve(JSON.parse(resBody));
          } catch (parseError) {
            reject(new Error(`Response didn't contain JSON: ${resBody}`));
            return;
          }
        }
        httpRes.on('error', reject);
        httpRes.on('data', (chunk) => chunks.push(chunk));
        httpRes.on('end', parseChunks);
      }
      httpReq.on('error', reject);
      httpReq.on('response', onResponse);
    });
  connect(port, host) {
    this._port = port;
    this._host = host;
    return this._discoverWebsocketPath()
      .then((urlPath) => this._connectWebsocket(urlPath));
  _discoverWebsocketPath() {
    return this._fetchJSON('/json')
      .then(([{ webSocketDebuggerUrl }]) =>
        URL.parse(webSocketDebuggerUrl).path);
  _connectWebsocket(urlPath) {
    this.reset();
    const key1 = crypto.randomBytes(16).toString('base64');
    debuglog('request websocket', key1);
    const httpReq = this._http = http.request({
      host: this._host,
      port: this._port,
      path: urlPath,
      headers: {
        Connection: 'Upgrade',
        Upgrade: 'websocket',
        'Sec-WebSocket-Key': key1,
        'Sec-WebSocket-Version': '13',
      },
    });
    httpReq.on('error', (e) => {
      this.emit('error', e);
    });
    httpReq.on('response', (httpRes) => {
      if (httpRes.statusCode >= 400) {
        process.stderr.write(`Unexpected HTTP code: ${httpRes.statusCode}\n`);
        httpRes.pipe(process.stderr);
      } else {
        httpRes.pipe(process.stderr);
      }
    });
    const handshakeListener = (res, socket) => {
      // TODO: we *could* validate res.headers[sec-websocket-accept]
      debuglog('websocket upgrade');
      this._socket = socket;
      socket.on('data', this.handleChunk);
      socket.on('close', () => {
        this.emit('close');
      });
      this.emit('ready');
    };
    return new Promise((resolve, reject) => {
      this.once('error', reject);
      this.once('ready', resolve);
      httpReq.on('upgrade', handshakeListener);
      httpReq.end();
    });
module.exports = Client;
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory((global.acorn = global.acorn || {}, global.acorn.walk = {})));
}(this, function (exports) { 'use strict';
  // AST walker module for Mozilla Parser API compatible trees
  // A simple walk is one where you simply specify callbacks to be
  // called on specific nodes. The last two arguments are optional. A
  // simple use would be
  //
  //     walk.simple(myTree, {
  //         Expression: function(node) { ... }
  //     });
  //
  // to do something with all expressions. All Parser API node types
  // can be used to identify node types, as well as Expression and
  // Statement, which denote categories of nodes.
  //
  // The base argument can be used to pass a custom (recursive)
  // walker, and state can be used to give this walked an initial
  // state.
  function simple(node, visitors, baseVisitor, state, override) {
    if (!baseVisitor) { baseVisitor = base
    ; }(function c(node, st, override) {
      var type = override || node.type, found = visitors[type];
      baseVisitor[type](node, st, c);
      if (found) { found(node, st); }
    })(node, state, override);
  // An ancestor walk keeps an array of ancestor nodes (including the
  // current node) and passes them to the callback as third parameter
  // (and also as state parameter when no other state is present).
  function ancestor(node, visitors, baseVisitor, state) {
    var ancestors = [];
    if (!baseVisitor) { baseVisitor = base
    ; }(function c(node, st, override) {
      var type = override || node.type, found = visitors[type];
      var isNew = node !== ancestors[ancestors.length - 1];
      if (isNew) { ancestors.push(node); }
      baseVisitor[type](node, st, c);
      if (found) { found(node, st || ancestors, ancestors); }
      if (isNew) { ancestors.pop(); }
    })(node, state);
  // A recursive walk is one where your functions override the default
  // walkers. They can modify and replace the state parameter that's
  // threaded through the walk, and can opt how and whether to walk
  // their child nodes (by calling their third argument on these
  // nodes).
  function recursive(node, state, funcs, baseVisitor, override) {
    var visitor = funcs ? make(funcs, baseVisitor || undefined) : baseVisitor
    ;(function c(node, st, override) {
      visitor[override || node.type](node, st, c);
    })(node, state, override);
  function makeTest(test) {
    if (typeof test === "string")
      { return function (type) { return type === test; } }
    else if (!test)
      { return function () { return true; } }
    else
      { return test }
  var Found = function Found(node, state) { this.node = node; this.state = state; };
  // A full walk triggers the callback on each node
  function full(node, callback, baseVisitor, state, override) {
    if (!baseVisitor) { baseVisitor = base
    ; }(function c(node, st, override) {
      var type = override || node.type;
      baseVisitor[type](node, st, c);
      if (!override) { callback(node, st, type); }
    })(node, state, override);
  // An fullAncestor walk is like an ancestor walk, but triggers
  // the callback on each node
  function fullAncestor(node, callback, baseVisitor, state) {
    if (!baseVisitor) { baseVisitor = base; }
    var ancestors = []
    ;(function c(node, st, override) {
      var type = override || node.type;
      var isNew = node !== ancestors[ancestors.length - 1];
      if (isNew) { ancestors.push(node); }
      baseVisitor[type](node, st, c);
      if (!override) { callback(node, st || ancestors, ancestors, type); }
      if (isNew) { ancestors.pop(); }
    })(node, state);
  // Find a node with a given start, end, and type (all are optional,
  // null can be used as wildcard). Returns a {node, state} object, or
  // undefined when it doesn't find a matching node.
  function findNodeAt(node, start, end, test, baseVisitor, state) {
    if (!baseVisitor) { baseVisitor = base; }
    test = makeTest(test);
    try {
      (function c(node, st, override) {
        var type = override || node.type;
        if ((start == null || node.start <= start) &&
            (end == null || node.end >= end))
          { baseVisitor[type](node, st, c); }
        if ((start == null || node.start === start) &&
            (end == null || node.end === end) &&
            test(type, node))
          { throw new Found(node, st) }
      })(node, state);
    } catch (e) {
      if (e instanceof Found) { return e }
      throw e
    }
  // Find the innermost node of a given type that contains the given
  // position. Interface similar to findNodeAt.
  function findNodeAround(node, pos, test, baseVisitor, state) {
    test = makeTest(test);
    if (!baseVisitor) { baseVisitor = base; }
    try {
      (function c(node, st, override) {
        var type = override || node.type;
        if (node.start > pos || node.end < pos) { return }
        baseVisitor[type](node, st, c);
        if (test(type, node)) { throw new Found(node, st) }
      })(node, state);
    } catch (e) {
      if (e instanceof Found) { return e }
      throw e
    }
  // Find the outermost matching node after a given position.
  function findNodeAfter(node, pos, test, baseVisitor, state) {
    test = makeTest(test);
    if (!baseVisitor) { baseVisitor = base; }
    try {
      (function c(node, st, override) {
        if (node.end < pos) { return }
        var type = override || node.type;
        if (node.start >= pos && test(type, node)) { throw new Found(node, st) }
        baseVisitor[type](node, st, c);
      })(node, state);
    } catch (e) {
      if (e instanceof Found) { return e }
      throw e
    }
  // Find the outermost matching node before a given position.
  function findNodeBefore(node, pos, test, baseVisitor, state) {
    test = makeTest(test);
    if (!baseVisitor) { baseVisitor = base; }
    var max
    ;(function c(node, st, override) {
      if (node.start > pos) { return }
      var type = override || node.type;
      if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))
        { max = new Found(node, st); }
      baseVisitor[type](node, st, c);
    })(node, state);
    return max
  // Fallback to an Object.create polyfill for older environments.
  var create = Object.create || function(proto) {
    function Ctor() {}
    Ctor.prototype = proto;
    return new Ctor
  };
  // Used to create a custom walker. Will fill in all missing node
  // type properties with the defaults.
  function make(funcs, baseVisitor) {
    var visitor = create(baseVisitor || base);
    for (var type in funcs) { visitor[type] = funcs[type]; }
    return visitor
  function skipThrough(node, st, c) { c(node, st); }
  function ignore(_node, _st, _c) {}
  // Node walkers.
  var base = {};
  base.Program = base.BlockStatement = function (node, st, c) {
    for (var i = 0, list = node.body; i < list.length; i += 1)
      {
      var stmt = list[i];
      c(stmt, st, "Statement");
    }
  };
  base.Statement = skipThrough;
  base.EmptyStatement = ignore;
  base.ExpressionStatement = base.ParenthesizedExpression =
    function (node, st, c) { return c(node.expression, st, "Expression"); };
  base.IfStatement = function (node, st, c) {
    c(node.test, st, "Expression");
    c(node.consequent, st, "Statement");
    if (node.alternate) { c(node.alternate, st, "Statement"); }
  };
  base.LabeledStatement = function (node, st, c) { return c(node.body, st, "Statement"); };
  base.BreakStatement = base.ContinueStatement = ignore;
  base.WithStatement = function (node, st, c) {
    c(node.object, st, "Expression");
    c(node.body, st, "Statement");
  };
  base.SwitchStatement = function (node, st, c) {
    c(node.discriminant, st, "Expression");
    for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {
      var cs = list$1[i$1];
      if (cs.test) { c(cs.test, st, "Expression"); }
      for (var i = 0, list = cs.consequent; i < list.length; i += 1)
        {
        var cons = list[i];
        c(cons, st, "Statement");
      }
    }
  };
  base.SwitchCase = function (node, st, c) {
    if (node.test) { c(node.test, st, "Expression"); }
    for (var i = 0, list = node.consequent; i < list.length; i += 1)
      {
      var cons = list[i];
      c(cons, st, "Statement");
    }
  };
  base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {
    if (node.argument) { c(node.argument, st, "Expression"); }
  };
  base.ThrowStatement = base.SpreadElement =
    function (node, st, c) { return c(node.argument, st, "Expression"); };
  base.TryStatement = function (node, st, c) {
    c(node.block, st, "Statement");
    if (node.handler) { c(node.handler, st); }
    if (node.finalizer) { c(node.finalizer, st, "Statement"); }
  };
  base.CatchClause = function (node, st, c) {
    if (node.param) { c(node.param, st, "Pattern"); }
    c(node.body, st, "Statement");
  };
  base.WhileStatement = base.DoWhileStatement = function (node, st, c) {
    c(node.test, st, "Expression");
    c(node.body, st, "Statement");
  };
  base.ForStatement = function (node, st, c) {
    if (node.init) { c(node.init, st, "ForInit"); }
    if (node.test) { c(node.test, st, "Expression"); }
    if (node.update) { c(node.update, st, "Expression"); }
    c(node.body, st, "Statement");
  };
  base.ForInStatement = base.ForOfStatement = function (node, st, c) {
    c(node.left, st, "ForInit");
    c(node.right, st, "Expression");
    c(node.body, st, "Statement");
  };
  base.ForInit = function (node, st, c) {
    if (node.type === "VariableDeclaration") { c(node, st); }
    else { c(node, st, "Expression"); }
  };
  base.DebuggerStatement = ignore;
  base.FunctionDeclaration = function (node, st, c) { return c(node, st, "Function"); };
  base.VariableDeclaration = function (node, st, c) {
    for (var i = 0, list = node.declarations; i < list.length; i += 1)
      {
      var decl = list[i];
      c(decl, st);
    }
  };
  base.VariableDeclarator = function (node, st, c) {
    c(node.id, st, "Pattern");
    if (node.init) { c(node.init, st, "Expression"); }
  };
  base.Function = function (node, st, c) {
    if (node.id) { c(node.id, st, "Pattern"); }
    for (var i = 0, list = node.params; i < list.length; i += 1)
      {
      var param = list[i];
      c(param, st, "Pattern");
    }
    c(node.body, st, node.expression ? "Expression" : "Statement");
  };
  base.Pattern = function (node, st, c) {
    if (node.type === "Identifier")
      { c(node, st, "VariablePattern"); }
    else if (node.type === "MemberExpression")
      { c(node, st, "MemberPattern"); }
    else
      { c(node, st); }
  };
  base.VariablePattern = ignore;
  base.MemberPattern = skipThrough;
  base.RestElement = function (node, st, c) { return c(node.argument, st, "Pattern"); };
  base.ArrayPattern = function (node, st, c) {
    for (var i = 0, list = node.elements; i < list.length; i += 1) {
      var elt = list[i];
      if (elt) { c(elt, st, "Pattern"); }
    }
  };
  base.ObjectPattern = function (node, st, c) {
    for (var i = 0, list = node.properties; i < list.length; i += 1) {
      var prop = list[i];
      if (prop.type === "Property") {
        if (prop.computed) { c(prop.key, st, "Expression"); }
        c(prop.value, st, "Pattern");
      } else if (prop.type === "RestElement") {
        c(prop.argument, st, "Pattern");
      }
    }
  };
  base.Expression = skipThrough;
  base.ThisExpression = base.Super = base.MetaProperty = ignore;
  base.ArrayExpression = function (node, st, c) {
    for (var i = 0, list = node.elements; i < list.length; i += 1) {
      var elt = list[i];
      if (elt) { c(elt, st, "Expression"); }
    }
  };
  base.ObjectExpression = function (node, st, c) {
    for (var i = 0, list = node.properties; i < list.length; i += 1)
      {
      var prop = list[i];
      c(prop, st);
    }
  };
  base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;
  base.SequenceExpression = function (node, st, c) {
    for (var i = 0, list = node.expressions; i < list.length; i += 1)
      {
      var expr = list[i];
      c(expr, st, "Expression");
    }
  };
  base.TemplateLiteral = function (node, st, c) {
    for (var i = 0, list = node.quasis; i < list.length; i += 1)
      {
      var quasi = list[i];
      c(quasi, st);
    }
    for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)
      {
      var expr = list$1[i$1];
      c(expr, st, "Expression");
    }
  };
  base.TemplateElement = ignore;
  base.UnaryExpression = base.UpdateExpression = function (node, st, c) {
    c(node.argument, st, "Expression");
  };
  base.BinaryExpression = base.LogicalExpression = function (node, st, c) {
    c(node.left, st, "Expression");
    c(node.right, st, "Expression");
  };
  base.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {
    c(node.left, st, "Pattern");
    c(node.right, st, "Expression");
  };
  base.ConditionalExpression = function (node, st, c) {
    c(node.test, st, "Expression");
    c(node.consequent, st, "Expression");
    c(node.alternate, st, "Expression");
  };
  base.NewExpression = base.CallExpression = function (node, st, c) {
    c(node.callee, st, "Expression");
    if (node.arguments)
      { for (var i = 0, list = node.arguments; i < list.length; i += 1)
        {
          var arg = list[i];
          c(arg, st, "Expression");
        } }
  };
  base.MemberExpression = function (node, st, c) {
    c(node.object, st, "Expression");
    if (node.computed) { c(node.property, st, "Expression"); }
  };
  base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {
    if (node.declaration)
      { c(node.declaration, st, node.type === "ExportNamedDeclaration" || node.declaration.id ? "Statement" : "Expression"); }
    if (node.source) { c(node.source, st, "Expression"); }
  };
  base.ExportAllDeclaration = function (node, st, c) {
    c(node.source, st, "Expression");
  };
  base.ImportDeclaration = function (node, st, c) {
    for (var i = 0, list = node.specifiers; i < list.length; i += 1)
      {
      var spec = list[i];
      c(spec, st);
    }
    c(node.source, st, "Expression");
  };
  base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.Literal = base.Import = ignore;
  base.TaggedTemplateExpression = function (node, st, c) {
    c(node.tag, st, "Expression");
    c(node.quasi, st, "Expression");
  };
  base.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, "Class"); };
  base.Class = function (node, st, c) {
    if (node.id) { c(node.id, st, "Pattern"); }
    if (node.superClass) { c(node.superClass, st, "Expression"); }
    c(node.body, st);
  };
  base.ClassBody = function (node, st, c) {
    for (var i = 0, list = node.body; i < list.length; i += 1)
      {
      var elt = list[i];
      c(elt, st);
    }
  };
  base.MethodDefinition = base.Property = function (node, st, c) {
    if (node.computed) { c(node.key, st, "Expression"); }
    c(node.value, st, "Expression");
  };
  exports.ancestor = ancestor;
  exports.base = base;
  exports.findNodeAfter = findNodeAfter;
  exports.findNodeAround = findNodeAround;
  exports.findNodeAt = findNodeAt;
  exports.findNodeBefore = findNodeBefore;
  exports.full = full;
  exports.fullAncestor = fullAncestor;
  exports.make = make;
  exports.recursive = recursive;
  exports.simple = simple;
  Object.defineProperty(exports, '__esModule', { value: true });
}));
"use strict"
const acorn = require('internal/deps/acorn/acorn/dist/acorn')
const tt = acorn.tokTypes
const privateClassElements = require('internal/deps/acorn-plugins/acorn-private-class-elements/index')
function maybeParseFieldValue(field) {
  if (this.eat(tt.eq)) {
    const oldInFieldValue = this._inFieldValue
    this._inFieldValue = true
    field.value = this.parseExpression()
    this._inFieldValue = oldInFieldValue
  } else field.value = null
module.exports = function(Parser) {
  Parser = privateClassElements(Parser)
  return class extends Parser {
    // Parse fields
    parseClassElement(_constructorAllowsSuper) {
      if (this.options.ecmaVersion >= 8 && (this.type == tt.name || this.type == this.privateNameToken || this.type == tt.bracketL || this.type == tt.string)) {
        const branch = this._branch()
        if (branch.type == tt.bracketL) {
          let count = 0
          do {
            if (branch.eat(tt.bracketL)) ++count
            else if (branch.eat(tt.bracketR)) --count
            else branch.next()
          } while (count > 0)
        } else branch.next()
        if (branch.type == tt.eq || branch.canInsertSemicolon() || branch.type == tt.semi) {
          const node = this.startNode()
          if (this.type == this.privateNameToken) {
            this.parsePrivateClassElementName(node)
          } else {
            this.parsePropertyName(node)
          }
          if ((node.key.type === "Identifier" && node.key.name === "constructor") ||
              (node.key.type === "Literal" && node.key.value === "constructor")) {
            this.raise(node.key.start, "Classes may not have a field called constructor")
          }
          maybeParseFieldValue.call(this, node)
          this.finishNode(node, "FieldDefinition")
          this.semicolon()
          return node
        }
      }
      return super.parseClassElement.apply(this, arguments)
    }
    // Prohibit arguments in class field initializers
    parseIdent(liberal, isBinding) {
      const ident = super.parseIdent(liberal, isBinding)
      if (this._inFieldValue && ident.name == "arguments") this.raise(ident.start, "A class field initializer may not contain arguments")
      return ident
    }
"use strict"
module.exports = function(Parser) {
  return class extends Parser {
    readInt(radix, len) {
      // Hack: len is only != null for unicode escape sequences,
      // where numeric separators are not allowed
      if (len != null) return super.readInt(radix, len)
      let start = this.pos, total = 0, acceptUnderscore = false
      for (;;) {
        let code = this.input.charCodeAt(this.pos), val
        if (code >= 97) val = code - 97 + 10 // a
        else if (code == 95) {
          if (!acceptUnderscore) this.raise(this.pos, "Invalid numeric separator")
          ++this.pos
          acceptUnderscore = false
          continue
        } else if (code >= 65) val = code - 65 + 10 // A
        else if (code >= 48 && code <= 57) val = code - 48 // 0-9
        else val = Infinity
        if (val >= radix) break
        ++this.pos
        total = total * radix + val
        acceptUnderscore = true
      }
      if (this.pos === start) return null
      if (!acceptUnderscore) this.raise(this.pos - 1, "Invalid numeric separator")
      return total
    }
    readNumber(startsWithDot) {
      const token = super.readNumber(startsWithDot)
      let octal = this.end - this.start >= 2 && this.input.charCodeAt(this.start) === 48
      const stripped = this.getNumberInput(this.start, this.end)
      if (stripped.length < this.end - this.start) {
        if (octal) this.raise(this.start, "Invalid number")
        this.value = parseFloat(stripped)
      }
      return token
    }
    // This is used by acorn-bigint
    getNumberInput(start, end) {
      return this.input.slice(start, end).replace(/_/g, "")
    }
"use strict"
const acorn = require('internal/deps/acorn/acorn/dist/acorn')
if (acorn.version.indexOf("6.") != 0 || acorn.version.indexOf("6.0.") == 0) {
  throw new Error(`acorn-private-class-elements requires acorn@^6.1.0, not ${acorn.version}`)
const tt = acorn.tokTypes
const TokenType = acorn.TokenType
module.exports = function(Parser) {
  // Only load this plugin once.
  if (Parser.prototype.parsePrivateName) {
    return Parser
  // Make sure `Parser` comes from the same acorn as our `tt`,
  // otherwise the comparisons fail.
  let cur = Parser
  while (cur && cur !== acorn.Parser) {
    cur = cur.__proto__
  if (cur !== acorn.Parser) {
    throw new Error("acorn-private-class-elements does not support mixing different acorn copies")
  Parser = class extends Parser {
    _branch() {
      this.__branch = this.__branch || new Parser({ecmaVersion: this.options.ecmaVersion}, this.input)
      this.__branch.end = this.end
      this.__branch.pos = this.pos
      this.__branch.type = this.type
      this.__branch.value = this.value
      this.__branch.containsEsc = this.containsEsc
      return this.__branch
    }
    parsePrivateClassElementName(element) {
      element.computed = false
      element.key = this.parsePrivateName()
      if (element.key.name == "constructor") this.raise(element.key.start, "Classes may not have a private element named constructor")
      const accept = {get: "set", set: "get"}[element.kind]
      const privateBoundNames = this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1]
      if (Object.prototype.hasOwnProperty.call(privateBoundNames, element.key.name) && privateBoundNames[element.key.name] !== accept) {
        this.raise(element.start, "Duplicate private element")
      }
      privateBoundNames[element.key.name] = element.kind || true
      delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][element.key.name]
      return element.key
    }
    parsePrivateName() {
      const node = this.startNode()
      node.name = this.value
      this.next()
      this.finishNode(node, "PrivateName")
      if (this.options.allowReserved == "never") this.checkUnreserved(node)
      return node
    }
    // Parse # token
    getTokenFromCode(code) {
      if (code === 35) {
        ++this.pos
        const word = this.readWord1()
        return this.finishToken(this.privateNameToken, word)
      }
      return super.getTokenFromCode(code)
    }
    // Manage stacks and check for undeclared private names
    parseClass(node, isStatement) {
      this._privateBoundNamesStack = this._privateBoundNamesStack || []
      const privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null)
      this._privateBoundNamesStack.push(privateBoundNames)
      this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || []
      const unresolvedPrivateNames = Object.create(null)
      this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames)
      const _return = super.parseClass(node, isStatement)
      this._privateBoundNamesStack.pop()
      this._unresolvedPrivateNamesStack.pop()
      if (!this._unresolvedPrivateNamesStack.length) {
        const names = Object.keys(unresolvedPrivateNames)
        if (names.length) {
          names.sort((n1, n2) => unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2])
          this.raise(unresolvedPrivateNames[names[0]], "Usage of undeclared private name")
        }
      } else Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames)
      return _return
    }
    // Parse private element access
    parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow) {
      if (!this.eat(tt.dot)) {
        return super.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow)
      }
      let node = this.startNodeAt(startPos, startLoc)
      node.object = base
      node.computed = false
      if (this.type == this.privateNameToken) {
        node.property = this.parsePrivateName()
        if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {
          this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start
        }
      } else {
        node.property = this.parseIdent(true)
      }
      return this.finishNode(node, "MemberExpression")
    }
    // Prohibit delete of private class elements
    parseMaybeUnary(refDestructuringErrors, sawUnary) {
      const _return = super.parseMaybeUnary(refDestructuringErrors, sawUnary)
      if (_return.operator == "delete") {
        if (_return.argument.type == "MemberExpression" && _return.argument.property.type == "PrivateName") {
          this.raise(_return.start, "Private elements may not be deleted")
        }
      }
      return _return
    }
  Parser.prototype.privateNameToken = new TokenType("privateName")
  return Parser
"use strict"
const privateClassElements = require('internal/deps/acorn-plugins/acorn-private-class-elements/index')
module.exports = function(Parser) {
  const ExtendedParser = privateClassElements(Parser)
  return class extends ExtendedParser {
    // Parse private methods
    parseClassElement(_constructorAllowsSuper) {
      const oldInClassMemberName = this._inClassMemberName
      this._inClassMemberName = true
      const result = super.parseClassElement.apply(this, arguments)
      this._inClassMemberName = oldInClassMemberName
      return result
    }
    parsePropertyName(prop) {
      const isPrivate = this.options.ecmaVersion >= 8 && this._inClassMemberName && this.type == this.privateNameToken
      this._inClassMemberName = false
      if (!isPrivate) return super.parsePropertyName(prop)
      return this.parsePrivateClassElementName(prop)
    }
"use strict"
const skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g
const acorn = require('internal/deps/acorn/acorn/dist/acorn')
const tt = acorn.tokTypes
function maybeParseFieldValue(field) {
  if (this.eat(tt.eq)) {
    const oldInFieldValue = this._inStaticFieldValue
    this._inStaticFieldValue = true
    field.value = this.parseExpression()
    this._inStaticFieldValue = oldInFieldValue
  } else field.value = null
const privateClassElements = require("internal/deps/acorn-plugins/acorn-private-class-elements/index")
module.exports = function(Parser) {
  const ExtendedParser = privateClassElements(Parser)
  return class extends ExtendedParser {
    // Parse private fields
    parseClassElement(_constructorAllowsSuper) {
      if (this.eat(tt.semi)) return null
      const node = this.startNode()
      const tryContextual = (k, noLineBreak) => {
        if (typeof noLineBreak == "undefined") noLineBreak = false
        const start = this.start, startLoc = this.startLoc
        if (!this.eatContextual(k)) return false
        if (this.type !== tt.parenL && (!noLineBreak || !this.canInsertSemicolon())) return true
        if (node.key) this.unexpected()
        node.computed = false
        node.key = this.startNodeAt(start, startLoc)
        node.key.name = k
        this.finishNode(node.key, "Identifier")
        return false
      }
      node.static = tryContextual("static")
      if (!node.static) return super.parseClassElement.apply(this, arguments)
      let isGenerator = this.eat(tt.star)
      let isAsync = false
      if (!isGenerator) {
        // Special-case for `async`, since `parseClassMember` currently looks
        // for `(` to determine whether `async` is a method name
        if (this.options.ecmaVersion >= 8 && this.isContextual("async")) {
          skipWhiteSpace.lastIndex = this.pos
          let skip = skipWhiteSpace.exec(this.input)
          let next = this.input.charAt(this.pos + skip[0].length)
          if (next === ";" || next === "=") {
            node.key = this.parseIdent(true)
            node.computed = false
            maybeParseFieldValue.call(this, node)
            this.finishNode(node, "FieldDefinition")
            this.semicolon()
            return node
          } else if (this.options.ecmaVersion >= 8 && tryContextual("async", true)) {
            isAsync = true
            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star)
          }
        } else if (tryContextual("get")) {
          node.kind = "get"
        } else if (tryContextual("set")) {
          node.kind = "set"
        }
      }
      if (this.type === this.privateNameToken) {
        this.parsePrivateClassElementName(node)
        if (this.type !== tt.parenL) {
          if (node.key.name === "prototype") {
            this.raise(node.key.start, "Classes may not have a private static property named prototype")
          }
          maybeParseFieldValue.call(this, node)
          this.finishNode(node, "FieldDefinition")
          this.semicolon()
          return node
        }
      } else if (!node.key) {
        this.parsePropertyName(node)
        if ((node.key.name || node.key.value) === "prototype" && !node.computed) {
          this.raise(node.key.start, "Classes may not have a static property named prototype")
        }
      }
      if (!node.kind) node.kind = "method"
      this.parseClassMethod(node, isGenerator, isAsync)
      if (!node.kind && (node.key.name || node.key.value) === "constructor" && !node.computed) {
        this.raise(node.key.start, "Classes may not have a static field named constructor")
      }
      if (node.kind === "get" && node.value.params.length !== 0) {
        this.raiseRecoverable(node.value.start, "getter should have no params")
      }
      if (node.kind === "set" && node.value.params.length !== 1) {
        this.raiseRecoverable(node.value.start, "setter should have exactly one param")
      }
      if (node.kind === "set" && node.value.params[0].type === "RestElement") {
        this.raiseRecoverable(node.value.params[0].start, "Setter cannot use rest params")
      }
      return node
    }
    // Parse public static fields
    parseClassMethod(method, isGenerator, isAsync, _allowsDirectSuper) {
      if (isGenerator || isAsync || method.kind != "method" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {
        return super.parseClassMethod.apply(this, arguments)
      }
      maybeParseFieldValue.call(this, method)
      delete method.kind
      method = this.finishNode(method, "FieldDefinition")
      this.semicolon()
      return method
    }
    // Prohibit arguments in class field initializers
    parseIdent(liberal, isBinding) {
      const ident = super.parseIdent(liberal, isBinding)
      if (this._inStaticFieldValue && ident.name == "arguments") this.raise(ident.start, "A static class field initializer may not contain arguments")
      return ident
    }
{ "target_defaults": { "cflags": [],
                       "default_configuration": "Release",
                       "defines": [],
                       "include_dirs": [],
                       "libraries": []},
  "variables": { "asan": 0,
                 "build_v8_with_gn": false,
                 "coverage": false,
                 "debug_nghttp2": false,
                 "enable_lto": false,
                 "enable_pgo_generate": false,
                 "enable_pgo_use": false,
                 "force_dynamic_crt": 0,
                 "host_arch": "x64",
                 "icu_data_in": "../../deps/icu-small/source/data/in/icudt64l.dat",
                 "icu_endianness": "l",
                 "icu_gyp_path": "tools/icu/icu-generic.gyp",
                 "icu_locales": "en,root",
                 "icu_path": "deps/icu-small",
                 "icu_small": true,
                 "icu_ver_major": "64",
                 "is_debug": 0,
                 "llvm_version": "0",
                 "napi_build_version": "4",
                 "node_byteorder": "little",
                 "node_debug_lib": false,
                 "node_enable_d8": false,
                 "node_install_npm": true,
                 "node_module_version": 72,
                 "node_no_browser_globals": false,
                 "node_prefix": "/usr/local",
                 "node_release_urlbase": "",
                 "node_report": true,
                 "node_shared": false,
                 "node_shared_cares": false,
                 "node_shared_http_parser": false,
                 "node_shared_libuv": false,
                 "node_shared_nghttp2": false,
                 "node_shared_openssl": false,
                 "node_shared_zlib": false,
                 "node_tag": "",
                 "node_target_type": "executable",
                 "node_use_bundled_v8": true,
                 "node_use_dtrace": true,
                 "node_use_etw": false,
                 "node_use_large_pages": false,
                 "node_use_node_snapshot": false,
                 "node_use_openssl": true,
                 "node_use_v8_platform": true,
                 "node_with_ltcg": false,
                 "node_without_node_options": false,
                 "openssl_fips": "",
                 "openssl_is_fips": false,
                 "shlib_suffix": "72.dylib",
                 "target_arch": "arm64",
                 "v8_enable_gdbjit": 0,
                 "v8_enable_i18n_support": 1,
                 "v8_enable_inspector": 1,
                 "v8_no_strict_aliasing": 1,
                 "v8_optimized_debug": 1,
                 "v8_promise_internal_field_count": 1,
                 "v8_random_seed": 0,
                 "v8_trace_maps": 0,
                 "v8_use_siphash": 1,
                 "v8_use_snapshot": 1,
                 "want_separate_host_toolset": 1,
                 "xcode_version": "11.0"}}
Invalid parameters
NodeWorker
NodeWorker.
NodeTracing
NodeTracing.
NodeRuntime
NodeRuntime.
?There are pending queries.
0Edon
d-exception-linenode-do-not-add-
?456789:;<=
 !"#$%&'()*+,-./0123
Node.js
258EAFA5-E914-47DA-95CA-C5AB0DC85B11
If3HI9
n7Eus
7U|z%a
vd^}
g8,<
21D+
j8G#
n[E.
pKQr_
)'zN%
.hnu
0!<k
b(/G
^*9o
_aIC
cdDx
.d/ 3~
G!`k
dW+g
isN4M
6\/,
R0+iU4=
PHW}
kPqK
;A{|
jOg4
>XwG
)xs!
x@WF
*Rl?
=lmGE
c03 
Lu5w
$uU-
&vV$
w*Tw
NckV*
W+mI
cg#q
MtZUS
n6(-
qE^4
w*Ay
mpAp
@vP
p7"A
J3]6-
YS M6
*v]I
Su;/
N+!~
3S#aP
vra&
RBVF
KV9_
rOk,
f;Ld
|_#7
fMVG
_Q**1[
fL&s
66q9
GN0Z$&
otaH
.7e}
ikFb,(
r7ch`
S|5|uU
g=&a
<2.iT
6u;Lz
0&eq
G?RR
rzx1
.1rp
{2i5
K/%^
b8#F
zO6]u
MhdQ
4kNj
lN>`
>$}@
ZCi/(
pyE_
=M{"
+j8C
y03e
_AW<
A7=>
QKNJ
f^r2
{F~B
~MB]
Rq9b
kLRs
{SpS
<4$*
HoS@
^7@**
%FuU
{|E/
6(vWP
fN8#
)hj=
:x|U
Zf~FK
cDN^
Oxc;
L9Jw|\\i
9rQ
Dn:9
+.f?
y%l~3sD
%cLKZ
HWJ}1V
1U+=
f{th<
_nkes.
"qFH<
Yc.K
[ux|v
Zzb/
>Q{$
V|u]
LA5W5m
jLjX
%J/R
M9Fz
4Z{@/
Gdnm
of*B
-m`)
=;jO
sI}o
K<SN
%8e3
zYOJ
69<F
$/I@B&
jCF
rqD5
VJ5+\
L]R`
^j:i
wWpO
8254
]:Z<
n[%f:
xk2"Id:
]|@Wdi
tJ\]
`8qwgk
tS.)
4+a&o
!G8M 
#]Xl
F]`E
|tUi
LNh9
~DA%
-~ts
R'(~
8/]]>L
DP*c
@D?d
%vRW
0V&*2
qLi\"q
iuu!
W]Aw
<IV6
w8yA3
q\{0
s0${
O=RHE
]\UfdL
ti7[
5mmQ
vb^~
5mmQ
vb^~
I(fQ
5mmQ
vb^~
I(fQ
mg5NJ
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
(|YGNk
v!pH
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
(|YGNk
v!pH
8/A0
%K3 QQ+
^p/F
f?H`
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
(|YGNk
v!pH
8/A0
%K3 QQ+
^p/F
f?H`
Invalid parameters
Console
Console.
Debugger
Debugger.
HeapProfiler
HeapProfiler.
Profiler
Profiler.
Runtime
Runtime.
Schema
Schema.
@wKA
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
333333
333333
$0<H
P?ffffff
\u0000
 \u0001
 \u0002
 \u0003
 \u0004
 \u0005
 \u0006
 \u0007
     \t
     \n
     \u000b
     \r
     \u000e
 \u000f
 \u0010
 \u0011
 \u0012
 \u0013
 \u0014
 \u0015
 \u0016
 \u0017
 \u0018
 \u0019
 \u001a
 \u001b
 \u001c
 \u001d
 \u001e
 \u001f
      !
      \"
     #
      $
      %
      &
      '
      (
      )
      *
      +
      ,
      -
      .
      /
      0
      1
      2
      3
      4
      5
      6
      7
      8
      9
      :
      ;
      <
      =
      >
      ?
      @
      A
      B
      C
      D
      E
      F
      G
      H
      I
      J
      K
      L
      M
      N
      O
      P
      Q
      R
      S
      T
      U
      V
      W
      X
      Y
      Z
      [
      \\
     ]
      ^
      _
      `
      a
      b
      c
      d
      e
      f
      g
      h
      i
      j
      k
      l
      m
      n
      o
      p
      q
      r
      s
      t
      u
      v
      w
      x
      y
      z
      {
      |
      }
      ~
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
/tmp/perf-%d.map
333333
 3@KSZ`fkoswz~
________________
                
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
$0<H
kkkkkkkkkmmmmmkkkkkkkkkkkkkkkkkkm,XjZ("X
'UUUUUUUUUU
kZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZ
 -k
8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88")
%$888888
$0<H
BwWdDfFCqQ
~}|{op
MbP?
name
sourceMappingURL
compilationHints
AsyncCompilationResolver::promise_
InstantiateModuleResultResolver::promise_
AsyncInstantiateCompileResultResolver::promise_
AsyncInstantiateCompileResultResolver::module_
InstantiateBytesResultResolver::promise_
InstantiateBytesResultResolver::module_
~}|{op
  !!
"'""'''
(((*+**+++
vilfdsra??*
DevTools console
consoleEnabled
DevTools console
debuggerEnabled
breakpointsByRegex
breakpointsByUrl
breakpointsByScriptHash
breakpointHints
pauseOnExceptionsState
asyncCallStackDepth
skipAllPauses
blackboxPattern
Debugger agent is not enabled
Can only perform operation while paused.
backtrace
DevTools debugger
heapProfilerEnabled
heapObjectsTrackingEnabled
allocationTrackingEnabled
samplingHeapProfilerEnabled
samplingHeapProfilerInterval
profilerEnabled
samplingInterval
userInitiatedProfiling
preciseCoverageStarted
preciseCoverageCallCount
preciseCoverageDetailed
typeProfileStarted
customObjectFormatterEnabled
bindings
runtimeEnabled
WasmTranslation::TranslatorImpl::script_
UUUUUUUU
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
Z* ,
H$6t
_~6
52F*
#jT$
^6o}
[-&LMb#{'
w+OQvr
R1h58
SKyu
)\ZEo^m/
ru&o
i8P/_
?(3w
H*0"ZOW
{kHw
)T`D
!AxU
l!;b
:1X:
y9*O
kM`~
Vc0a
dQy/
lDa>
7~8A
C-Yn
gqr<
$/o|
f-=v
mj>zjZ
l6qnk
IiGM>nw
1A26b
i91k
ewh/?y
*5KS
6~_'
F*.f
1wsHp
M8MF
Pe6^
#bML"
`F(>
vQO+t
[h1R
XsBI
hPU3
^oEZ_
2%k_
w3Xc
/P8i
OZw3(?
Z"0*
fP~V
D`T
^GP~
b;!l
V_:X1:
NJ2"v
O*9y]
fu`z
/yQA
&]|v
 deflate 1.2.11 Copyright 1995-2017 Jean-loup Gailly and Mark Adler 
 inflate 1.2.11 Copyright 1995-2017 Mark Adler 


%u.%u.%u.%u
0123456789
0123456789abcdef
0123456789ABCDEF
7.5.269-node.16
(?:)
Pa2
() {}
[Symbol.iterator]
[Symbol.asyncIterator]
getOwnPropertyNames
getOwnPropertySymbols
seal
QbNE
defineProperties
freeze
isFrozen
isSealed
__defineGetter__
__defineSetter__
hasOwnProperty
__lookupGetter__
__lookupSetter__
Qbn9AI
isPrototypeOf
propertyIsEnumerable
get __proto__
set __proto__
[Symbol.hasInstance]
get [Symbol.species]
isArray
Qa":
concat
copyWithin
fill
find
findIndex
lastIndexOf
Qa"
QajWd 
push
reverse
shift
unshift
QaN
slice
Qa:
sort
splice
includes
indexOf
forEach
QaJ
filter
QaN8W
flat
flatMap
Qaj
every
QaJ
some
Qa>
reduce
reduceRight
toExponential
toFixed
toPrecision
Qa:
isFinite
isInteger
isNaN
isSafeInteger
parseFloat
QarS
parseInt
fromCharCode
fromCodePoint
QaB
anchor
bold
charAt
charCodeAt
codePointAt
QarF
endsWith
fontcolor
fontsize
fixed
italics
link
localeCompare
match
normalize
Qa2
padEnd
Qa2V
padStart
repeat
replace
search
split
substr
substring
startsWith
trim
trimStart
trimEnd
toLocaleLowerCase
toLocaleUpperCase
Qb2N
toLowerCase
QbZR
toUpperCase
StringIterator
keyFor
get description
[Symbol.toPrimitive]
Qa"
parse
toDateString
toTimeString
toISOString
toUTCString
getDate
setDate
getDay
getFullYear
setFullYear
QaZ
getHours
Qa.
setHours
getMilliseconds
setMilliseconds
getMinutes
setMinutes
Qa:s-
getMonth
setMonth
getSeconds
Qb*S
setSeconds
getTime
Qa")&
setTime
getTimezoneOffset
getUTCDate
QbB8
setUTCDate
getUTCDay
Qbb)sz
getUTCFullYear
setUTCFullYear
getUTCHours
setUTCHours
getUTCMilliseconds
setUTCMilliseconds
getUTCMinutes
setUTCMinutes
getUTCMonth
setUTCMonth
QbV*
getUTCSeconds
Qb.m
setUTCSeconds
getYear
setYear
toLocaleDateString
toLocaleTimeString
get [Symbol.species]
race
Qaj
reject
catch
finally
get dotAll
get flags
get global
get ignoreCase
get multiline
get source
get sticky
get unicode
compile
test
[Symbol.match]
QbNFK
[Symbol.replace]
[Symbol.search]
[Symbol.split]
get [Symbol.species]
get input
set input
get $_
set $_
get lastMatch
set lastMatch
get $&
set $&
get lastParen
set lastParen
get $+
set $+
get leftContext
set leftContext
get $`
set $`
get rightContext
set rightContext
get $'
set $'
get $1
set $1
get $2
set $2
get $3
set $3
get $4
set $4
get $5
set $5
get $6
set $6
get $7
set $7
get $8
set $8
get $9
set $9
captureStackTrace
stringify
QaJ
acos
QaVl}
acosh
asin
asinh
QaZD
atan
atanh
atan2
ceil
cbrt
Qarh\J
expm1
QaRmMa
clz32
cosh
floor
Qar
fround
hypot
imul
log1p
Qaf
log2
Qa6
log10
Qa.
Qa>[
random
Qa6#
round
sign
Qar
sinh
sqrt
tanh
Qa*s
trunc
console
debug
error
info
warn
Qa^
dirxml
Qa2
table
trace
groupCollapsed
Qa6
groupEnd
clear
Qa^
count
countReset
QaFA}
assert
QaF
profile
profileEnd
Qaz
time
timeLog
timeEnd
timeStamp
QaF
context
getCanonicalLocales
DateTimeFormat
supportedLocalesOf
resolvedOptions
formatToParts
get format
NumberFormat
get format
Collator
get compare
v8BreakIterator
get adoptText
get first
get next
get current
get breakType
PluralRules
QaV
select
RelativeTimeFormat
Qbz2s
ListFormat
get byteLength
get [Symbol.species]
arrayBufferConstructor_DoNotInitialize
get byteLength
get [Symbol.species]
QaB
load
Qaz#V
store
Qav
exchange
compareExchange
isLockFree
QazI
wait
wake
notify
get [Symbol.species]
get buffer
get byteLength
get byteOffset
get length
get [Symbol.toStringTag]
subarray
QaF
DataView
get buffer
get byteLength
get byteOffset
getInt8
QaN
setInt8
getUint8
setUint8
getInt16
setInt16
getUint16
setUint16
Qaz|
getInt32
Qabi
setInt32
getUint32
setUint32
getFloat32
setFloat32
getFloat64
Qbjq
setFloat64
getBigInt64
Qb&kE
setBigInt64
getBigUint64
setBigUint64
Qa"
delete
get size
get [Symbol.species]
asUintN
asIntN
get size
get [Symbol.species]
revocable
GeneratorFunction
AsyncGeneratorFunction
Qb*6iX
SetIterator
MapIterator
AsyncFunction
CallSite
getColumnNumber
getEvalOrigin
getFileName
Qbzuy
getFunction
getFunctionName
getLineNumber
getMethodName
Qbj*"
getPosition
getPromiseIndex
getScriptNameOrSourceURL
getThis
getTypeName
isAsync
isConstructor
isEval
QaJY
isNative
isPromiseAll
isToplevel
Qc"@
InternalPackedArray
createPrivateSymbol
uncurryThis
markPromiseAsHandled
promiseState
decodeURI
decodeURIComponent
Qb.:
encodeURI
encodeURIComponent
Qa~
escape
unescape
isTraceCategoryEnabled
DDDD
T"pB
js8A
js8B3I
js8B@
js8B
TBxa
DDDDD
QaN
lastMatch
lastParen
Qa"
leftContext
rightContext
Qa2
Qazr
Qan
QaZ
QaNJsI
Qabn~
BYTES_PER_ELEMENT
toGMTString
trimLeft
trimRight
JSON
asyncIterator
QbNd
hasInstance
isConcatSpreadable
iterator
species
toPrimitive
toStringTag
unscopables
description
QaN!
Intl
Intl.RelativeTimeFormat
Intl.ListFormat
MAX_VALUE
MIN_VALUE
Qcf*
NEGATIVE_INFINITY
POSITIVE_INFINITY
MAX_SAFE_INTEGER
MIN_SAFE_INTEGER
Qan
EPSILON
Reflect
Math
LN10
QaZ
LOG10E
Qa2
LOG2E
SQRT1_2
SQRT2
QcjL{
Async-from-Sync Iterator
AsyncGenerator
Qbr*
kPROMISE_PENDING
Qc>V-
kPROMISE_FULFILLED
kPROMISE_REJECTED
createPromise
rejectPromise
resolvePromise
Qb~g/
isPromise
String Iterator
uninitialized
undefined
hole
true
boolean
false
arguments_marker`
exception
termination_exception
optimized_out
stale_register
self_reference_marker
w?#.
adoptText
baseName
breakType
calendar
Qa&
cardinal
caseFirst
compare
current
dateStyle
Qb2*
dayPeriod
QavY
decimal
first
format
QaZ
fraction
full
granularity
grapheme
group
Qa^
hour
hour12
hourCycle
Qbb6a
collation
QabJ
currency
currencyDisplay
Qan:I
ideo
ignorePunctuation
Qbng
Invalid Date
integer
QaB
kana
language
letter
QaR
list
Qa.
literal
locale
loose
lower
maximumFractionDigits
maximumSignificantDigits
minimumFractionDigits
minimumIntegerDigits
minimumSignificantDigits
minusSign
Qavn
minute
month
none
normal
numberingSystem
Qan
numeric
ordinal
percentSign
plusSign
quarter
Qa.
region
second
segment
Segment Iterator
Qb6,J
sensitivity
Qa6
strict
style
term
timeStyle
Qan
timeZone
timeZoneName
type
unknown
upper
QaV
usage
useGrouping
unit
weekday
year
always
(anonymous function)
Qb:9S
anonymous
apply
Arguments
arguments
[object Arguments]
Array
[object Array]
ArrayBuffer
Qb&p
Array Iterator
Qaj$
Qaj
assign
async
QaZ
auto
await
BigInt
bigint
BigInt64Array
BigUint64Array
Qa.
bind
Boolean
[object Boolean]
bound 
QaB
buffer
byteLength
byteOffset
CompileError
Qaz
call
callee
caller
character
(closure)
code
column
<computed>
configurable
conjunction
construct
constructor
create
Qa^f
Date
QbR-
[object Date]
default
defineProperty
deleteProperty
disjunction
displayName
done
.catch
.default
Qan
.for
.generator_object
.iterator
Qav
.promise
.result
.switch_tag
dotAll
entries
enumerable
Qan
element
Error
[object Error]
Qa*
eval
EvalError
exec
flags
Float32Array
Float64Array
Qa~h
from
Function
Qd2j8B
function () { [native code] }
function
QcNe
[object Function]
Generator
get 
Qa>
getOwnPropertyDescriptor
getOwnPropertyDescriptors
getPrototypeOf
Qa>
global
Qbv&(
globalThis
groups
ignoreCase
illegal access
illegal argument
Qa~z
index
Qan
Infinity
infinity
input
Int16Array
Int32Array
Int8Array
isExtensible
isView
keys
lastIndex
length
Qa.
line
LinkError
long
Map Iterator
QavZr
medium
QaB
message
meta
-Infinity
Qa~
Module
multiline
Qa:
name
QaF
narrow
native
.new.target
Qaz
next
Qa&y
NFKC
NFKD
not-equal
Qa"(
null
[object Null]
Qan
Number
number
[object Number]
Object
QaB<
object
[object Object]
QaN
QaBW*
ownKeys
QaZ&.
percent
Qaz
position
preventExtensions
#constructor
Promise
Qa"a
promise
__proto__
QbJ;E
prototype
QaZI
proxy
Proxy
Qa>w'J
(?:)
RangeError
Qa^_
Qb*H
ReferenceError
Reflect.get
Reflect.has
Qa"
RegExp
[object RegExp]
QaN5J
resolve
return
revoke
RuntimeError
Script
script
QaR{
short
sentence
Qaj
set 
Set Iterator
setPrototypeOf
SharedArrayBuffer
source
QbrL
sourceText
QaF
stack
stackTraceLimit
sticky
Qavx
String
Qaz3<
string
[object String]
[Symbol.species]
QaB
Symbol
Qa&
symbol
QbBrD
SyntaxError
Qar
target
then
Qbj7
.this_function
this
throw
timed-out
QaRz
toJSON
Qa6/
toString
TypeError
Uint16Array
Uint32Array
QbZI
Uint8Array
Uint8ClampedArray
[object Undefined]
unicode
URIError
Qa*
value
valueOf
Qaz
values
QaV
WeakMap
WeakRef
WeakSet
QaF#
week
word
Qa6
writable
O`z
O`:
O`f
O`N
O`&
O`fh
O`Z
Symbol.asyncIterator
Symbol.iterator
O`>
IntlFallback
O`^N
Symbol.matchAll
Symbol.match
Symbol.replace
Symbol.search
O`j
Symbol.species
O`"
Symbol.split
O`~
Symbol.toPrimitive
Symbol.unscopables
Symbol.hasInstance
O`:F%
Symbol.isConcatSpreadable
Symbol.toStringTag
Qabp
Qa:
ToObject
Array Iterator.prototype.next
Boolean.prototype.toString
Boolean.prototype.valueOf
Date.prototype [ @@toPrimitive ]
[Generator].prototype.next
[Generator].prototype.return
[Generator].prototype.throw
Map.prototype.set
Map.prototype.delete
QcF}
Map.prototype.get
Map.prototype.has
Map.prototype.entries
get Map.prototype.size
Map.prototype.forEach
Map.prototype.keys
Map.prototype.values
Map Iterator.prototype.next
Number.prototype.valueOf
Object.prototype.toLocaleString
[object 
Promise.prototype.then
PromiseResolve
PromiseReject
Promise.prototype.finally
QbFjS'
Promise.all
-|c
Promise.race
status
fulfilled
rejected
Qa^5
reason
RegExp.prototype.compile
RegExp.prototype.exec
RegExp.prototype.dotAll
RegExp.prototype.flags
RegExp.prototype.global
RegExp.prototype.ignoreCase
RegExp.prototype.@@match
Qd&C'
RegExp.prototype.@@matchAll
Qd&(
RegExp.prototype.multiline
RegExp.prototype.@@search
RegExp.prototype.source
RegExp.prototype.sticky
RegExp.prototype.test
RegExp.prototype.unicode
RegExp.prototype.@@split
QebVd
%RegExpStringIterator%.prototype.next
Set.prototype.has
Set.prototype.add
Set.prototype.delete
Set.prototype.entries
Qc^|
get Set.prototype.size
Set.prototype.forEach
Set.prototype.values
Set Iterator.prototype.next
String.prototype.charAt
Qdj=
String.prototype.charCodeAt
String.prototype.codePointAt
String.prototype.concat
QcjLq
String.prototype.match
String.prototype.matchAll
QaJ
String.prototype.padEnd
Qd"5
String.prototype.padStart
String.prototype.replace
String.prototype.search
Qcz;5w
String.prototype.slice
String.prototype.split
String.prototype.substr
String.prototype.substring
String.prototype.toString
String.prototype.trim
String.prototype.trimRight
String.prototype.trimLeft
String.prototype.valueOf
String.prototype[Symbol.iterator]
String Iterator.prototype.next
Symbol.prototype.description
Symbol.prototype [ @@toPrimitive ]
Symbol.prototype.toString
Symbol.prototype.valueOf
TypedArray
]TR#
get TypedArray.prototype.byteLength
get TypedArray.prototype.byteOffset
get TypedArray.prototype.length
%TypedArray%.prototype.entries()
Qd6Y
%TypedArray%.prototype.keys()
%TypedArray%.prototype.values()
%TypedArray%.prototype.set
%TypedArray%.prototype.map
%TypedArray%.of
%TypedArray%.from
WeakMap.prototype.get
WeakMap.prototype.has
WeakMap.prototype.set
WeakMap.prototype.delete
WeakSet.prototype.has
WeakSet.prototype.add
WeakSet.prototype.delete
[AsyncGenerator].prototype.next
[AsyncGenerator].prototype.return
[AsyncGenerator].prototype.throw
 Qf.f
[Async-from-Sync Iterator].prototype.next
 Qfb
[Async-from-Sync Iterator].prototype.throw
[Async-from-Sync Iterator].prototype.return
Array.prototype.every
Array.prototype.filter
Array.prototype.find
Array.prototype.findIndex
Array.prototype.forEach
toLocaleString
join
%TypedArray%.prototype.join
%TypedArray%.prototype.toLocaleString
Qc~#f$
Array.prototype.map
Array.prototype.reduce
Array.prototype.reduceRight
Array.prototype.some
get DataView.prototype.buffer
QeZ_
get DataView.prototype.byte_length
get DataView.prototype.byte_offset
DataView.prototype.getUint8
DataView.prototype.getInt8
DataView.prototype.getUint16
DataView.prototype.getInt16
DataView.prototype.getUint32
DataView.prototype.getInt32
DataView.prototype.getFloat32
DataView.prototype.getFloat64
DataView.prototype.getBigUint64
DataView.prototype.getBigInt64
DataView.prototype.setUint8
DataView.prototype.setInt8
QdNY
DataView.prototype.setUint16
DataView.prototype.setInt16
DataView.prototype.setUint32
DataView.prototype.setInt32
DataView.prototype.setFloat32
DataView.prototype.setFloat64
DataView.prototype.setBigUint64
DataView.prototype.setBigInt64
Proxy.revocable
RegExp.prototype.@@replace
QdNrl
String.prototype.endsWith
String.prototype.startsWith
Qa:
String.prototype.anchor
Qc.;
String.prototype.big
Qa*
String.prototype.blink
Qa*85
blink
String.prototype.bold
String.prototype.fontcolor
font
Qaf
color
String.prototype.fontsize
size
String.prototype.fixed
String.prototype.italics
Qaba
String.prototype.link
href
String.prototype.small
small
String.prototype.strike
strike
String.prototype.sub
Qa.
String.prototype.sup
Qa"ALd
String.prototype.repeat
%TypedArray%.prototype.sort
Construct
byte length
Qb:e
start offset
%TypedArray%.prototype.every
%TypedArray%.prototype.filter
%TypedArray%.prototype.find
QdBHU
%TypedArray%.prototype.findIndex
%TypedArray%.prototype.forEach
%TypedArray%.prototype.reduce
%TypedArray%.prototype.reduceRight
%TypedArray%.prototype.slice
%TypedArray%.prototype.some
%TypedArray%.prototype.subarray
Intl.ListFormat.prototype.format
QeB4
Intl.ListFormat.prototype.formatToParts
String.prototype.toLowerCase
(Ja
$a"`
(A5
,A6`
(Ja
<A/`
@!9D
TA7`
DA0F`
DA0F`
DA0F`
(function() {})
666666666666666666666666666666666666666666666666\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\DOWNGRD
DOWNGRD
OpenSSL 1.1.1c  28 May 2019
res binder
ext binder
resumption
resumption
ed master secretextended master 
tls13 
finished
derived
c e traffic
c hs traffic
c ap traffic
s hs traffic
s ap traffic
exp master
res master
e exp master
traffic upd
exporter
exporter
0`P0
g+V}+
&Lj&6lZ6?~A?
4h\4
1bS1
#Fe#
'Ni'
,Xt,
R;vM;
)R{)
/^q/
 @` 
9rK9J
M3fU3
P<xD<
8pH8
!Bc!
~=zG=d
"Df"*T~*
2dV2:tN:
$Hl$\
7nY7m
x%Jo%.\r.
p>|B>
a5j_5W
U(Px(
-Zw-
`P00
ggV}++
Lj&&lZ66~A??
h\44Q
bS11*?
Fe##
Ni''
Xt,,4.
RRvM;;
R{))
^q//
@`  
rK99
MMfU33
PPxD<<%
pH88
Bc!! 0
&5
DD.9
~~zG==
]]2+
Df""T~**;
dV22tN::
Hl$$
nY77
xxJo%%\r..8$
tt>!
pp|B>>q
aaj_55
UUPx((
Zw--
P00`
}++V
=j&&LZ66lA??~
\44h
S11b?
e##F^
i''N
t,,X.
M;;va
}{))R>
q//^
`  @
gK99r
U33f
D<<x
!H88p
c!!B0
G==z
f""D~**T
V22dN::t
l$$H
Y77n
o%%Jr..\$
B>>|
_55j
x((Pz
)w--Z
T00`P
++V}
&&Lj66lZ??~A
O44h\
s11bS
R##Fe
&''Ni
,,Xt
6-nn
;;vM
))R{
>//^q
,  @`
99rKJJ
33fU
<<xD
88pH
u!!Bc
==zGdd
2+ss
""Df**T~
;22dV::tN
$$Hl\\
C77nYmm
%%Jo..\r
>!KK
>>|B
55j_WW
"3ii
((Px
--Zw
QSeA~
!tX)i
XhHp
NrZl
='9-6d
:.6$
aiKwZ
;fD4~
[v)C
cB@"
_jbF~T
11#?*0
,4$8_@
I<(A
t\lHBW
QPeA~S
0 Umv
-!tX
SbEwd
hHpX
Uf*(
+2Hp
rZlN
9-6'
\h!T[
.6$:g
KwZi
[4)C
F~Tb
#?*1
_[o=
>4$8,@
I<(
p\lHtW
A~Se
`3SbE
+HpXhE
pZlNr
-6'9
T6$:.
 wZiK
*"<C
[4~C
~TbF
?*1#
fNt7
$8,4
%<(
lHt\
BWQP
~SeA
!tI)i
k>X'
`3QbE
pXhH
C@gw
lNrZ
6'9-
T[$:.6
ZiKw
;f[4~
_TbF~
*1#?
h8,4$
2Ht\l
lpHP
cU!}ccc
%-18s
00000000000000007777777777777777
                    
!(Ew
~&jE
 iciNWq
x`\`U
S2zw
Qjh/T
w?6r
\^c$j
yr,@
H{1S
"//w
AJsN
*!ec
pzKD)
ilRdV
|sG2
U$qk.
27;C
qUN1
/n[(
Ze2Zh@
Wcr"
T0.S
ap?#
r3A~
;"lY7
@n2w
_g@Cg
%xP(
B*k@5
mK1f
n:2C[
V@E'
::SU
^|1)
A4x{%`
no:7
7,gm;
.97yY
Bh;+j
.x7B
{x`M`
BFUa.X
YnFpW
-f3F2
r9$|
n6j/
HWyn
9)PF
(-}|
W;()f
_xU`u
08bX
w``u N
PANIC 
EMERG 
EMR 
ALERT 
ALR 
CRIT 
CRI 
ERROR 
ERR 
WARNING 
WARN 
WAR 
NOTICE 
NOTE 
NOT 
INFO 
INF 
DEBUG 
DBG 
5mmQ
vb^~
5mmQ
vb^~
I(fQ
5mmQ
vb^~
I(fQ
mg5NJ
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
(|YGNk
v!pH
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
(|YGNk
v!pH
8/A0
%K3 QQ+
^p/F
f?H`
5mmQ
vb^~
I(fQ
mg5NJ
^F.6
Wza]lw
(|YGNk
v!pH
8/A0
%K3 QQ+
^p/F
f?H`
qCJ.
s`a;
i~wKVA\
o&1m&
S#FI
%0nV4
8GZS
w8i_q
&`Pqy?
H5gRR-
XG[r
'#^QTy
`fPw.
\(a8Bk
a/4(
zy:HO
=Uec
3$ae
ucc
<=' V
e;[5
a8Bk
a/4(
zy:HO
=Uec
3$ae
ucc
<=' V
j_e^~
e;[5
a8Bk
a/4(
zy:HO
=Uec
3$ae
ucc
<=' V
1,)b^
KN>v
FN>\
#:*S8,}gNzl
e;[5
a8Bk
a/4(
zy:HO
=Uec
3$ae
ucc
<=' V
Hb{!
&8l~!
|t/[U)
1,)b^
KN>v
FN>\
#:*S8,}gNzl
e;[5
a8Bk
a/4(
zy:HO
=Uec
3$ae
ucc
<=' V
%/1A[_amsw
 ' ) - 3 G M Q _ c e i w } 
!5!A!I!O!Y![!_!s!}!
"!"%"+"1"9"K"O"c"g"s"u"
#'#)#/#3#5#E#Q#S#Y#c#k#
$)$=$A$C$M$_$g$k$y$}$
%'%1%=%C%K%O%s%
&'&)&5&;&?&K&S&Y&e&i&o&{&
'5'7'M'S'U'_'k'm's'w'
(!(1(=(?(I(Q([(](a(g(u(
)!)#)?)G)])e)i)o)u)
*%*/*O*U*_*e*k*m*s*
+'+1+3+=+?+K+O+U+i+m+o+{+
,#,/,5,9,A,W,Y,i,w,
-;-C-I-M-a-e-q-
.%.-.3.7.9.?.W.[.o.y.
/'/)/A/E/K/M/Q/W/o/u/}/
0#0)070;0U0Y0[0g0q0y0}0
1!1'1-191C1E1K1]1a1g1m1s1
2)252Y2]2c2k2o2u2w2{2
3%3+3/353A3G3[3_3g3k3s3y3
474E4U4W4c4i4m4
5-535;5A5Q5e5o5q5w5{5}5
6#6165676;6M6O6S6Y6a6k6m6
7?7E7I7O7]7a7u7
8!83858A8G8K8S8W8_8e8o8q8}8
9#9%9)9/9=9A9M9[9k9y9}9
:':+:1:K:Q:[:c:g:m:y:
;!;#;-;9;E;S;Y;_;q;{;
<)<5<C<O<S<[<e<k<q<
=!=-=3=7=?=C=o=s=u=y={=
>#>)>/>3>A>W>c>e>w>
?7?;?=?A?Y?_?e?g?y?}?
@!@%@+@1@?@C@E@]@a@g@m@
A!A3A5A;A?AYAeAkAwA{A
B#B)B/BCBSBUB[BaBsB}B
C%C'C3C7C9COCWCiC
D#D)D;D?DEDKDQDSDYDeDoD
E+E1EAEIESEUEaEwE}E
E0123456789ABCDEF
l}C.we
SK?Nv
'nU_O_M
uT_Rm#
'`ax
#ETHw
dlCz 
wl]azW
6.F^
JN5gm
Qf(I
~^bv
Qmm5
Hp!v
kNGY|(
wl]azW
6.F^
JN5gm
Qf(I
~^bv
Qmm5
`H?f
F/p^
+QQ 3K%
0A/8
Hp!v
kNGY|(
wl]azW
6.F^
JN5gm
Qf(I
~^bv
Qmm5
`H?f
F/p^
+QQ 3K%
0A/8
Hp!v
kNGY|(
wl]azW
6.F^
JN5gm
Qf(I
~^bv
Qmm5
%?/?!
"o;h(Y
8On
T*_}x:
j Bz
u\B&
y7bT
Ab61
T<*2
a.z9
DGt2
yM;-
jMG\^|Y
C?9z
bcKU
!+g\
"%-U^7
PaH?
dv&4
wj-K
g&H`
~8lI
d^AE
;]>r
^(O= 
*,]I
Fv\;
Eub'z
\j#M
HJI
SRqDIK
_maz
mn`I:T`H
{OJW
z(~c
=;&o
~?Pa w
WFgO
(>nH&p
gTzu
B=!&|
!\1c
)eyC
c8:$
}oaO
]ny`
BN"r
kMxn
FS(l
h,DUu
uU~b
v^FES
SU2`
-7HD
ISgN
Es/#
s%iH
SH6tc
*Y#5
/C~A
^l(
Sj~=eI
PIMAC
gC_7
F_C)x;
a3bt
<tm
OxW2
Zbby
S4n)
lbfL
Tq*+
S9v.i
+LVvuOx39]O#2
}\cm
xzdD]
vOB9`
pqT3^-ZI
$;g9
A^e$
1d[O~
!![z
M:&)
expand 32-byte k
compiler: gcc -fPIC -pthread -m64 -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DNDEBUG
 !"#$% !"#$%&'()*+,-./0123456789:;<=>?@ABCD./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
  ##%%&&))**,,//1122447788;;==>>@@CCEEFFIIJJLLOOQQRRTTWWXX[[]]^^aabbddgghhkkmmnnppssuuvvyyzz||
ggen
$]@W0w
JI)
ZL+i
EoD
bLM%
|0\
tv`"
$=|
-Zw
DZ2s
{[1
MkL
SR!
?UQ
$C(
#di
YE)
\~I
~Ru
@1B
h90
{G0
0&M:
iD8
Gg/
;%W
=U|
&Qe
3p'
SWj
,o|
<1`
vdn
s?H
4ZQ
HJxE
e#A
EEl~5
c?b@A
MinghuaQu)
MinghuaQuS
MinghuaQu
-(`|
MinghuaQu
;L8,
s(Fdi
(U1h
#Q7z
iFjt
E[3M
A2VPD
9C#U
)E\\*=
T*8U
U)l:T^8rv
&,o]
`kM=
9)jx
'>f,
a5<p
r$0I
ihD5
"cs73KI
XW=?'
h2Wl
'pQ 
&)j<
*0fT
m>gh
"o;o
|<C!FReQ
3Wk1^
sao5
(0'yX
zj{&
MinghuaQu
kV!DA
Nm^\
xzxv
Q/xtJ2
\ys$
MinghuaQuw
aybSr
L7~*
K4K 
X!;3; 
6qo~
{*eU
$XI(6
Yb6N4
uw&]
&>1;y
4`x/
MBb!
u;{Gk
Ik`dub`D
`yNT
9IGv
)Urz
$&nN
MinghuaQu
HT%+
{|WM
(fS{ggRcjh
&@'kd
Rbg.E
^3)2
(wMww
C q'O
UUUUUUUUUUUa
xUN'
q~!/
MinghuaQu
]&g''}
f&dy
Vg3LE
bV}TS
UUUUUUUUUUUUUU<o(
F$R-
oMinghuaQu
tfjgvmfv
(q-B
u+,@
b-w#
(ZdOt
+5I 
VggjeK uO5n
FV|FgUV
|I6?
t+c)
8A6j
)TpH
0Z@q
<4E87
9[#l
bmNP
GXqN
Ut]<E
b]jY
A2VPD
9C#U
)E\\*=
^J_spY
?jOb
^J_spY
^J_spY
^J_spY
bzUkm
S[{Q
$Cw!R
^J_spY
/\HS7_
hT.'
<0(.
~,Vg
r8l@
??M|
& ( 
nSw}Z
u0Az
,KH/
2bT~
& ( 
& ( 
nStf,a
/I%j
:eaI
FDA~i
^G 6
^G 6
^G 6
^G 6
M>}I
:z'H>
^G 6
]o~P
FF!w
A&<S
]o~P
]o~P
]o~P
p5Z3
]o~P
`VX:H
dZ!2.
}_|mPG@j^h
8]Vc2
IJ_H^[
pU>\AL
`VX:H
`VX:H
gB>d
pU>\AL
^4MZ
ki!S
6666666666666666jjjjjjjjjjjjjjjj
 !"#
$%&'()*+,-./0123456789:;<=
?456789:;<=
 !"#$%&'()*+,-./0123
\\\\\\\\\\\\\\\\
RRRRRRRR%%%%%%%%
Ag*g*
g+g+
+en+eo+
/+ep+eqU
+o+o
Content-Type: application/ocsp-request
Content-Length: %d
%s %s HTTP/1.0
ENCRYPTED
Proc-Type:
DEK-Info:
-----BEGIN 
-----
-----END 
OpenSSL NIST SP 800-90A DRBG
!"\kN
5Mj*
6[%U
%\QM
`cC#( 
(D@D
xsK;
.pp@0
6tpD4
psC3
, ,
'prB2
``@ PP@
7XRJ
xpH8
`aA!
4@AA
|qM=
=trF6,#
"lbN.
haI)|pL<
>d`D$
.HCK
!hcK+dbF&
3|rN>
xrJ:DCG
'DAE
L@L
<0<pqA1
tqE5
?HAI
9dcG'
l`L,
1H@H
lcO/<1
-@@@
:LBN
h`H(|sO?
tsG7
-DBF
+daE%
*laM-\SO
:XPH
`bB"(!
xqI9
hbJ*("
`@ `QE
DcO/lcK+hSK
bB"`3
64CK
`L,l
((BN
+(bF&drJ:x#
rB2pBB
sC3pcG'd
 ,,
qM=|
bJ*h
`H(hqA1p
aA!`
sK;xPL
cC#`#
# AM
"
bN.l
HpH8x
p@0pqE5tsO?|1
`D$daM-l
pD4t
rF6t
*(RN
HqI9x
\sG7tPD
%$CO
rN>|
aE%d0<<
pL<|
aI)h
@LL
;8BJ
%$!M
C#`c
(( D
K;xs
@0pp
D4tp
$$ 
C3ps
,, 
B2pr
@ ``@
H8xp
A!`a
PRM=|q
F6tr
N.lb
LAI)haL<|p
D$d`
.,"K
! !K+hcF&db
N>|r
J:xrG
DALL@
<<0A1pq
E5tq
981G'dc
L,l`
O/lc
-,!@
H(h`O?|s
TRG7ts
+(#E%da
M-laO
:82H
B"`b
I9xq
J*hb
 ``@
D@D/lcO+hcK
"`bB303
HCK/
,l`L(
DAE!
LBN6
&dbF:xrJ'$#
2prB
3psC'dcG,
,, *
TSG.
=|qM
*hbJ1
(h`H1pqA
!`aA>
;xsK
\PL"
#`cC# #
.,"
.lbN
XRJ2
HAI8xpH
0pp@5tqE?|sO541
$d`D-laM
4tpD
6trF
\RN)
H@H9xqI
\SO7tsG
TPD2
DBF-
PRB+
>|rN
%daE<<06
<|pL
PP@981
)haI
L@L
HBJ7
p09Y
}Ut]
$o,
vRQ>
8STs
LwH'
{i+m
|6*)
g&3g
D7q/;M
}Uo
+Yo,
&\8!
* qW
LwH'
L*~e
Dluespemosmodnarodarenegylsetybdeto
MF?8ib[T
IB;4e^WP
E>70aZSL}voh
A:3,]VOHyrkd
%"|;
'RL6
jrml[Q
9H[[
ETLL
%%Hm
CJAAQ
eeX=
==Ns
3--Jg
6yy_&
aaY8GG
G^]]V
11M|
uu\)
rUUT
9MMR
99Ov
DQ{{
mmZ7EEP
qq],
@E||
Pii[2cc
))Kb00<ZZ
55Ly
V}}^#
!!Ih
F&##
OO!OBn
OO!OBn
?mRRUR
RRUR
0`<
l0`<
\C..
\CKK1Kbz
)KK1Kbz
]WWAW
WWAW
#JJ5Jj
 JJ5Jj
DXX}X
XX}X
R|))
sg<]]i]
]]i]
ZX--
ZZuZ
ZZuZ
II9Irp
;II9Irp
[[q[
[[q[
)>&&
HH=Hzu
2HH=Hzu
=d__a_
__a_
@=  
@=hh
^u}TTMT
TTMT
D/""
D/dd
Vn++
Vnvv
PP]P
PP]P
UUIU
UUIU
^J//
FMM)MRd
MM)MRd
9vuu
YYyY
YYyY
LL-LZa
LL-LZa
^^e^
^^e^
E{B!!
B4!!
$QQYQ
QQYQ
/%mm
NN%NJk
NN%NJk
XQ,,
VVEV
VVEV
Tg**
SSQS
SSQS
Pu((
Pu\\m\
\\m\
0123456789.
0123456789.:abcdefABCDEF
#[Mean    = %12.3f, StdDeviation   = %12.3f]
#[Max     = %12.3f, Total count    = %12llu]
#[Buckets = %12d, SubBuckets     = %12d]
N6icu_6416JapaneseCalendarE
N6icu_6413DecimalFormatE
N6icu_6414TaiwanCalendarE
N6icu_6439FormattedValueFieldPositionIteratorImplE
N6icu_646number4impl18MultiplierProducerE
N6icu_6419CollationRuleParser4SinkE
N6icu_6419CollationRuleParser8ImporterE
 !"#$%&'()*+,-./01
!| H
\5YyV
6m4A2
N6icu_646number4impl20AffixPatternProviderE
N6icu_646number4impl22MutablePatternModifierE
N6icu_646number4impl24ImmutablePatternModifierE
N6icu_6425ContractionsAndExpansions6CESinkE
vH7B
W4vC
N6icu_6413IFixedDecimalE
N6icu_646number4impl15DecimalQuantityE
N6icu_646number4impl32LocalizedNumberFormatterAsFormatE
;N6icu_646number4impl18ScientificModifierE
N6icu_646number4impl17ScientificHandlerE
N6icu_647MeasureE
N6icu_6415PersianCalendarE
calendar
gregorian
monthPatterns
format
wide
abbreviated
narrow
stand-alone
numeric
cyclicNameSets
years
zodiacs
contextTransforms
NumberElements
symbols
timeSeparator
dayPeriod
eras
monthNames
AmPmMarkers
AmPmMarkersNarrow
quarters
dayNames
short
N6icu_6423SharedDateFormatSymbolsE
N6icu_6417DateFormatSymbolsE
N6icu_6412_GLOBAL__N_116CalendarDataSinkE
AmPmMarkersAbbr
N6icu_6414LocaleCacheKeyINS_23SharedDateFormatSymbolsEEE
N6icu_648CacheKeyINS_23SharedDateFormatSymbolsEEE
UCol
N6icu_6424CollationElementIteratorE
N6icu_6412_GLOBAL__N_110MaxExpSinkE
N6icu_6422UIterCollationIteratorE
N6icu_6425FCDUIterCollationIteratorE
AN6icu_6413TimeZoneNamesE
N6icu_6421TimeZoneNamesDelegateE
N6icu_6413TimeZoneNames19MatchInfoCollectionE
 !"#$
%&'(
\]^_`a
efghfgi
????
N6icu_6412TimeZoneRuleE
N6icu_6419InitialTimeZoneRuleE
N6icu_6418AnnualTimeZoneRuleE
N6icu_6421TimeArrayTimeZoneRuleE
N6icu_646number4impl19MicroPropsGeneratorE
N6icu_646number4impl13EmptyModifierE
N6icu_6413MessageFormat11DummyFormatE
N6icu_6413MessageFormatE
N6icu_6421FormatNameEnumerationE
N6icu_6413MessageFormat22PluralSelectorProviderE
N6icu_6412CollationKeyE
N6icu_6415SortKeyByteSinkE
N6icu_6413CollationKeys13LevelCallbackE
N6icu_646number4impl13TokenConsumerE
N6icu_646number4impl14SymbolProviderE
N6icu_6412ChoiceFormatE
OD:A
N6icu_6417GregorianCalendarE
N6icu_6419SharedBreakIteratorE
N6icu_6413FieldPositionE
N6icu_646FormatE
( ) 
 / _ 
N6icu_6422UTF16CollationIteratorE
N6icu_6425FCDUTF16CollationIteratorE
0123456789abcdefghijklmnopqrstuvwxyzN6icu_648numparse4impl13SymbolMatcherE
N6icu_648numparse4impl17IgnorablesMatcherE
N6icu_648numparse4impl15InfinityMatcherE
N6icu_648numparse4impl16MinusSignMatcherE
N6icu_648numparse4impl10NanMatcherE
N6icu_648numparse4impl14PaddingMatcherE
N6icu_648numparse4impl14PercentMatcherE
N6icu_648numparse4impl15PermilleMatcherE
N6icu_648numparse4impl15PlusSignMatcherE
calendar
gregorian
DateTimePatterns
N6icu_6421FormattedDateIntervalE
N6icu_6425FormattedDateIntervalDataE
N6icu_6418DateIntervalFormatE
N6icu_6417CollationSettingsE
N6icu_646number4impl10MicroPropsE
N6icu_6412PluralFormat14PluralSelectorE
N6icu_6412PluralFormat21PluralSelectorAdapterE
N6icu_6412PluralFormatE
gregorian
calendar
intervalFormats
fallback
N6icu_6416DateIntervalInfoE
N6icu_6416DateIntervalInfo16DateIntervalSinkE
MNUW
 :&;&
,^-_-
.*000K0L0
1W[X[
gregorian
calendar
appendItems
fields
availableFormats
DateTimePatterns
N6icu_6412DistanceInfoE
N6icu_6424DateTimePatternGeneratorE
N6icu_6424DateTimePatternGenerator21AppendItemFormatsSinkE
N6icu_6424DateTimePatternGenerator19AppendItemNamesSinkE
N6icu_6424DateTimePatternGenerator20AvailableFormatsSinkE
N6icu_6410PatternMapE
N6icu_6415DateTimeMatcherE
N6icu_6412FormatParserE
N6icu_6418PatternMapIteratorE
N6icu_6411PtnSkeletonE
N6icu_647PtnElemE
N6icu_6421DTSkeletonEnumerationE
N6icu_6422DTRedundantEnumerationE
N6icu_6412_GLOBAL__N_122AllowedHourFormatsSinkE
N6icu_6411FormattableE
@w{A
N6icu_6415ChineseCalendarE
N6icu_6412DateTimeRuleE
N6icu_6416CollationBuilderE
N6icu_6411CEFinalizerE
N6icu_6412_GLOBAL__N_114BundleImporterE
N6icu_6416EthiopicCalendarE
N6icu_6413OlsonTimeZoneE
N6icu_6419CollationCacheEntryE
N6icu_6418CollationTailoringE
N6icu_6425CollationFastLatinBuilderE
pup7@
@N6icu_6418CalendarAstronomer9AngleFuncE
N6icu_6416SunTimeAngleFuncE
N6icu_6418CalendarAstronomer9CoordFuncE
N6icu_6416RiseSetCoordFuncE
N6icu_6417MoonTimeAngleFuncE
N6icu_6420MoonRiseSetCoordFuncE
N6icu_6413CalendarCacheE
N6icu_6418SharedNumberFormatE
N6icu_6412NumberFormatE
N6icu_6414LocaleCacheKeyINS_18SharedNumberFormatEEE
N6icu_648CacheKeyINS_18SharedNumberFormatEEE
N6icu_648numparse4impl21RequireAffixValidatorE
N6icu_648numparse4impl17ValidationMatcherE
N6icu_648numparse4impl24RequireCurrencyValidatorE
N6icu_648numparse4impl32RequireDecimalSeparatorValidatorE
N6icu_648numparse4impl22RequireNumberValidatorE
N6icu_648numparse4impl22MultiplierParseHandlerE
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
N6icu_648TimeZoneE
N6icu_6413TZEnumerationE
NumberElements
patterns
decimalFormat
latn
CurrencyUnitPatterns
N6icu_6418CurrencyPluralInfoE
gregorian
monthNames
N6icu_6414SharedCalendarE
N6icu_648CalendarE
calendar
N6icu_6414LocaleCacheKeyINS_14SharedCalendarEEE
N6icu_648CacheKeyINS_14SharedCalendarEEE
N6icu_646number4impl23MultiplierFormatHandlerE
N6icu_6416SimpleDateFormatE
N6icu_646number4impl11CompactData15CompactDataSinkE
N6icu_646number4impl11CompactDataE
N6icu_646number4impl14CompactHandlerE
N6icu_6420CollationKeyByteSinkE
N6icu_6417RuleBasedCollatorE
N6icu_6412_GLOBAL__N_116UTF16NFDIteratorE
N6icu_6412_GLOBAL__N_111NFDIteratorE
N6icu_6412_GLOBAL__N_119FCDUTF16NFDIteratorE
N6icu_6412_GLOBAL__N_115UTF8NFDIteratorE
N6icu_6412_GLOBAL__N_118FCDUTF8NFDIteratorE
N6icu_6412_GLOBAL__N_116UIterNFDIteratorE
N6icu_6412_GLOBAL__N_119FCDUIterNFDIteratorE
N6icu_6412_GLOBAL__N_120FixedSortKeyByteSinkE
N6icu_6412_GLOBAL__N_117PartLevelCallbackE
N6icu_646number4impl15LongNameHandlerE
N12_GLOBAL__N_115PluralTableSinkE
N6icu_648CollatorE
N6icu_6430CollationLocaleListEnumerationE
N6icu_6412SelectFormatE
vH7B
W4vC
N6icu_648numparse4impl14DecimalMatcherE
N6icu_646NoUnitE
N6icu_6410CECalendarE
N6icu_6421SameValueSubstitutionE
N6icu_6414NFSubstitutionE
N6icu_6422MultiplierSubstitutionE
N6icu_6419ModulusSubstitutionE
N6icu_6424IntegralPartSubstitutionE
N6icu_6426FractionalPartSubstitutionE
N6icu_6425AbsoluteValueSubstitutionE
N6icu_6421NumeratorSubstitutionE
N6icu_648numparse4impl26AffixPatternMatcherBuilderE
N6icu_648numparse4impl16CodePointMatcherE
N6icu_648numparse4impl12AffixMatcherE
native
traditional
NumberElements
desc
radix
algorithmic
numberingSystems
N6icu_6415NumberingSystemE
N6icu_6421NumsysNameEnumerationE
latn
NumberElements
symbols
NumberElements/latn/symbols
currencySpacing
N6icu_6420DecimalFormatSymbolsE
N6icu_6412_GLOBAL__N_117DecFmtSymDataSinkE
N6icu_6412_GLOBAL__N_119CurrencySpacingSinkE
beforeCurrency
afterCurrency
currencyMatch
surroundingMatch
insertBetween
N6icu_6417CollationIteratorE
N6icu_6420FieldPositionHandlerE
N6icu_6424FieldPositionOnlyHandlerE
N6icu_6428FieldPositionIteratorHandlerE
N6icu_6414HebrewCalendarE
keyTypeData
typeMap
timezone
typeAlias
metaZones
primaryZones
metazoneInfo
mapTimezones
N6icu_6418RelativeDateFormatE
N6icu_6412_GLOBAL__N_118RelDateFmtDataSinkE
N6icu_646number15FormattedNumberE
N6icu_646number4impl20UFormattedNumberDataE
N6icu_6421UTF8CollationIteratorE
N6icu_6424FCDUTF8CollationIteratorE
%v@3333
N6icu_6415IslamicCalendarE
N6icu_648numparse4impl17ScientificMatcherE
N6icu_6413DangiCalendarE
N6icu_6414FormattedValueE
N6icu_6412CurrencyUnitE
zoneStrings
gmtFormat
gmtZeroFormat
hourFormat
N6icu_6414GMTOffsetFieldE
N6icu_6414TimeZoneFormatE
N6icu_6418ZoneIdMatchHandlerE
N6icu_6414CopticCalendarE
PD:A
N6icu_6414IndianCalendarE
N6icu_646number4impl30PropertiesAffixPatternProviderE
N6icu_646number4impl31CurrencyPluralInfoAffixProviderE
BN6icu_6413BasicTimeZoneE
N6icu_6422DayPeriodRulesDataSinkE
N6icu_6423DayPeriodRulesCountSinkE
N6icu_646number4impl8ModifierE
N6icu_646number4impl21ConstantAffixModifierE
N6icu_646number4impl14SimpleModifierE
N6icu_646number4impl26ConstantMultiFieldModifierE
N6icu_646number4impl13ModifierStoreE
N6icu_646number4impl21AdoptingModifierStoreE
N6icu_646number4impl30CurrencySpacingEnabledModifierE
N6icu_6416LocalizationInfoE
N6icu_6422StringLocalizationInfoE
N6icu_6421RuleBasedNumberFormatE
collations
N12_GLOBAL__N_112KeywordsSinkE
N6icu_6414LocaleCacheKeyINS_19CollationCacheEntryEEE
N6icu_648CacheKeyINS_19CollationCacheEntryEEE
':T
N6icu_6417SharedPluralRulesE
N6icu_6411PluralRulesE
N6icu_6412OrConstraintE
N6icu_647UMemoryE
N6icu_649RuleChainE
N6icu_6413AndConstraintE
N6icu_6416PluralRuleParserE
N6icu_6424PluralKeywordEnumerationE
N6icu_6412FixedDecimalE
N6icu_6433PluralAvailableLocalesEnumerationE
N6icu_6414LocaleCacheKeyINS_17SharedPluralRulesEEE
N6icu_648CacheKeyINS_17SharedPluralRulesEEE
N6icu_6414SimpleTimeZoneE
N6icu_6437FormattedValueNumberStringBuilderImplE
zoneStrings
<empty>
N6icu_6430TextTrieMapSearchResultHandlerE
N6icu_6411TextTrieMapE
N6icu_646ZNames12ZNamesLoaderE
N6icu_6422MetaZoneIDsEnumerationE
N6icu_6418ZNameSearchHandlerE
N6icu_6417TimeZoneNamesImplE
N6icu_6417TimeZoneNamesImpl17ZoneStringsLoaderE
N6icu_649TZDBNamesE
N6icu_6421TZDBNameSearchHandlerE
N6icu_6417TZDBTimeZoneNamesE
<dummy>
meta:
N6icu_648numparse4impl23CombinedCurrencyMatcherE
N6icu_6421FieldPositionIteratorE
N6icu_648numparse4impl13SeriesMatcherE
N6icu_648numparse4impl18CompositionMatcherE
N6icu_648numparse4impl18ArraySeriesMatcherE
standard
N6icu_6413FormattedListE
N6icu_6417FormattedListDataE
N6icu_6413ListFormatterE
N6icu_6413ListFormatter16ListPatternsSinkE
N6icu_6414CurrencyAmountE
N6icu_6411MeasureUnitE
N6icu_6416BuddhistCalendarE
zoneStrings
regionFormat
fallbackFormat
N6icu_6418GNameSearchHandlerE
N6icu_648TZGNCoreE
N6icu_6420TimeZoneGenericNamesE
N6icu_6418DateFmtBestPatternE
N6icu_6421DateFmtBestPatternKeyE
N6icu_6414LocaleCacheKeyINS_18DateFmtBestPatternEEE
N6icu_648CacheKeyINS_18DateFmtBestPatternEEE
N6icu_6410DateFormatE
@N6icu_6425FormattedRelativeDateTimeE
N6icu_6425RelativeDateTimeCacheDataE
N6icu_6429FormattedRelativeDateTimeDataE
N6icu_6425RelativeDateTimeFormatterE
N6icu_6412_GLOBAL__N_122RelDateTimeFmtDataSinkE
N6icu_6414LocaleCacheKeyINS_25RelativeDateTimeCacheDataEEE
N6icu_648CacheKeyINS_25RelativeDateTimeCacheDataEEE
N6icu_649VTimeZoneE
N6icu_6418TimeZoneTransitionE
N6icu_6420CollationDataBuilder10CEModifierE
N6icu_6428DataBuilderCollationIteratorE
N6icu_6420CollationDataBuilderE
N6icu_646number4impl17ParsedPatternInfoE
N6icu_648numparse4impl18NumberParseMatcherE
N6icu_648numparse4impl16NumberParserImplE
N6icu_648numparse4impl24MutableMatcherCollectionE
N6icu_648numparse4impl19AffixPatternMatcherE
N6icu_6417RuleBasedTimeZoneE
#$%&'
0123456789
abcdefghijklmnopqrstuvwxyz
^_`abcdefghijklmnopqrstuvwxyz
loseeep-alivepgrade
hunked
ectionent-lengthonroxy-connection
ransfer-encodingpgrade
TTP/CE/
CLINDECKOUTNECTELETEETEADNKCKSEARCHRGECTIVITYLENDARVEOTIFYPTIONSTCHSTINDATCHOPGEINDORTARCHURCEBSCRIBERACEINDNKCKUBSCRIBEHTTP/ADTP/
trol-allow-origiaccess-control-a-securit
strict-transportcontent-dispositio
proxy-authorizatif-unmodified-sinc
proxy-authenticatransfer-encodinif-modified-sinc
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
timedownlifeleftbackcodedatashowonlysitecityopenjustlikefreeworktextyearoverbodyloveformbookplaylivelinehelphomesidemorewordlongthemviewfindpagedaysfullheadtermeachareafromtruemarkableuponhighdatelandnewsevennextcasebothpostusedmadehandherewhatnameLinkblogsizebaseheldmakemainuser') +holdendswithNewsreadweresigntakehavegameseencallpathwellplusmenufilmpartjointhislistgoodneedwayswestjobsmindalsologorichuseslastteamarmyfoodkingwilleastwardbestfirePageknowaway.pngmovethanloadgiveselfnotemuchfeedmanyrockicononcelookhidediedHomerulehostajaxinfoclublawslesshalfsomesuchzone100%onescareTimeracebluefourweekfacehopegavehardlostwhenparkkeptpassshiproomHTMLplanTypedonesavekeepflaglinksoldfivetookratetownjumpthusdarkcardfilefearstaykillthatfallautoever.comtalkshopvotedeepmoderestturnbornbandfellroseurl(skinrolecomeactsagesmeetgold.jpgitemvaryfeltthensenddropViewcopy1.0"</a>stopelseliestourpack.gifpastcss?graymean&gt;rideshotlatesaidroadvar feeljohnrickportfast'UA-dead</b>poorbilltypeU.S.woodmust2px;Inforankwidewantwalllead[0];paulwavesure$('#waitmassarmsgoesgainlangpaid!-- lockunitrootwalkfirmwifexml"songtest20pxkindrowstoolfontmailsafestarmapscorerainflowbabyspansays4px;6px;artsfootrealwikiheatsteptriporg/lakeweaktoldFormcastfansbankveryrunsjulytask1px;goalgrewslowedgeid="sets5px;.js?40pxif (soonseatnonetubezerosentreedfactintogiftharm18pxcamehillboldzoomvoideasyringfillpeakinitcost3px;jacktagsbitsrolleditknewnear<!--growJSONdutyNamesaleyou lotspainjazzcoldeyesfishwww.risktabsprev10pxrise25pxBlueding300,ballfordearnwildbox.fairlackverspairjunetechif(!pickevil$("#warmlorddoespull,000ideadrawhugespotfundburnhrefcellkeystickhourlossfuel12pxsuitdealRSS"agedgreyGET"easeaimsgirlaids8px;navygridtips#999warsladycars); }php?helltallwhomzh:
 100hall.
A7px;pushchat0px;crew*/</hash75pxflatrare && tellcampontolaidmissskiptentfinemalegetsplot400,
coolfeet.php<br>ericmostguidbelldeschairmathatom/img&#82luckcent000;tinygonehtmlselldrugFREEnodenick?id=losenullvastwindRSS wearrelybeensamedukenasacapewishgulfT23:hitsslotgatekickblurthey15px''););">msiewinsbirdsortbetaseekT18:ordstreemall60pxfarm
sboys[0].');"POSTbearkids);}}marytend(UK)quadzh:
-siz----prop');
liftT19:viceandydebt>RSSpoolneckblowT16:doorevalT17:letsfailoralpollnovacolsgene 
softrometillross<h3>pourfadepink<tr>mini)|!(minezh:
barshear00);milk -->ironfreddiskwentsoilputs/js/holyT22:ISBNT20:adamsees<h2>json', 'contT21: RSSloopasiamoon</p>soulLINEfortcartT14:<h1>80px!--<9px;T04:mike:46ZniceinchYorkricezh:
'));puremageparatonebond:37Z_of_']);000,zh:
tankyardbowlbush:56ZJava30px
%C3%:34ZjeffEXPIcashvisagolfsnowzh:
quer.csssickmeatmin.binddellhirepicsrent:36ZHTTP-201fotowolfEND xbox:54ZBODYdick;
exit:35Zvarsbeat'});diet999;anne}}</[i].Langkm
wiretoysaddssealalex;
}echonine.org005)tonyjewssandlegsroof000) 200winegeardogsbootgarycutstyletemption.xmlcockgang$('.50pxPh.Dmiscalanloandeskmileryanunixdisc);}
dustclip).
70px-200DVDs7]><tapedemoi++)wageeurophiloptsholeFAQsasin-26TlabspetsURL bulkcook;}
HEAD[0])abbrjuan(198leshtwin</i>sonyguysfuckpipe|-
!002)ndow[1];[];
Log salt
bangtrimbath){
00px
});ko:
feesad>
s:// [];tollplug(){
 .js'200pdualboat.JPG);
}quot);
201420152016201720182019202020212022202320242025202620272028202920302031203220332034203520362037201320122011201020092008200720062005200420032002200120001999199819971996199519941993199219911990198919881987198619851984198319821981198019791978197719761975197419731972197119701969196819671966196519641963196219611960195919581957195619551954195319521951195010001024139400009999comom
sesteestaperotodohacecadaa
obiend
vidacasootroforosolootracualdijosidograntipotemadebealgoqu
estonadatrespococasabajotodasinoaguapuesunosantediceluisellamayozonaamorpisoobraclicellodioshoracasi
firstvideolightworldmediawhitecloseblackrightsmallbooksplacemusicfieldorderpointvalueleveltableboardhousegroupworksyearsstatetodaywaterstartstyledeathpowerphonenighterrorinputabouttermstitletoolseventlocaltimeslargewordsgamesshortspacefocusclearmodelblockguideradiosharewomenagainmoneyimagenamesyounglineslatercolorgreenfront&amp;watchforcepricerulesbeginaftervisitissueareasbelowindextotalhourslabelprintpressbuiltlinksspeedstudytradefoundsenseundershownformsrangeaddedstillmovedtakenaboveflashfixedoftenotherviewschecklegalriveritemsquickshapehumanexistgoingmoviethirdbasicpeacestagewidthloginideaswrotepagesusersdrivestorebreaksouthvoicesitesmonthwherebuildwhichearthforumthreesportpartyClicklowerlivesclasslayerentrystoryusagesoundcourtyour birthpopuptypesapplyImagebeinguppernoteseveryshowsmeansextramatchtrackknownearlybegansuperpapernorthlearngivennamedendedTermspartsGroupbrandusingwomanfalsereadyaudiotakeswhile.com/livedcasesdailychildgreatjudgethoseunitsneverbroadcoastcoverapplefilescyclesceneplansclickwritequeenpieceemailframeolderphotolimitcachecivilscaleenterthemetheretouchboundroyalaskedwholesincestock namefaithheartemptyofferscopeownedmightalbumthinkbloodarraymajortrustcanonunioncountvalidstoneStyleLoginhappyoccurleft:freshquitefilmsgradeneedsurbanfightbasishoverauto;route.htmlmixedfinalYour slidetopicbrownalonedrawnsplitreachRightdatesmarchquotegoodsLinksdoubtasyncthumballowchiefyouthnovel10px;serveuntilhandsCheckSpacequeryjamesequaltwice0,000Startpanelsongsroundeightshiftworthpostsleadsweeksavoidthesemilesplanesmartalphaplantmarksratesplaysclaimsalestextsstarswrong</h3>thing.org/multiheardPowerstandtokensolid(thisbringshipsstafftriedcallsfullyfactsagentThis //-->adminegyptEvent15px;Emailtrue"crossspentblogsbox">notedleavechinasizesguest</h4>robotheavytrue,sevengrandcrimesignsawaredancephase><!--en_US&#39;200px_namelatinenjoyajax.ationsmithU.S. holdspeterindianav">chainscorecomesdoingpriorShare1990sromanlistsjapanfallstrialowneragree</h2>abusealertopera"-//WcardshillsteamsPhototruthclean.php?saintmetallouismeantproofbriefrow">genretrucklooksValueFrame.net/-->
<try {
var makescostsplainadultquesttrainlaborhelpscausemagicmotortheir250pxleaststepsCountcouldglasssidesfundshotelawardmouthmovesparisgivesdutchtexasfruitnull,||[];top">
<!--POST"ocean<br/>floorspeakdepth sizebankscatchchart20px;aligndealswould50px;url="parksmouseMost ...</amongbrainbody none;basedcarrydraftreferpage_home.meterdelaydreamprovejoint</tr>drugs<!-- aprilidealallenexactforthcodeslogicView seemsblankports (200saved_linkgoalsgrantgreekhomesringsrated30px;whoseparse();" Blocklinuxjonespixel');">);if(-leftdavidhorseFocusraiseboxesTrackement</em>bar">.src=toweralt="cablehenry24px;setupitalysharpminortastewantsthis.resetwheelgirls/css/100%;clubsstuffbiblevotes 1000korea});
bandsqueue= {};80px;cking{
aheadclockirishlike ratiostatsForm"yahoo)[0];Aboutfinds</h1>debugtasksURL =cells})();12px;primetellsturns0x600.jpg"spainbeachtaxesmicroangel--></giftssteve-linkbody.});
mount (199FAQ</rogerfrankClass28px;feeds<h1><scotttests22px;drink) || lewisshall#039; for lovedwaste00px;ja:
simon<fontreplymeetsuntercheaptightBrand) != dressclipsroomsonkeymobilmain.Name platefunnytreescom/"1.jpgwmodeparamSTARTleft idden, 201);
form.viruschairtransworstPagesitionpatch<!--
o-cacfirmstours,000 asiani++){adobe')[0]id=10both;menu .2.mi.png"kevincoachChildbruce2.jpgURL)+.jpg|suitesliceharry120" sweettr>
name=diegopage swiss-->
#fff;">Log.com"treatsheet) && 14px;sleepntentfiledja:
id="cName"worseshots-box-delta
&lt;bears:48Z<data-rural</a> spendbakershops= "";php">ction13px;brianhellosize=o=%2F joinmaybe<img img">, fjsimg" ")[0]MTopBType"newlyDanskczechtrailknows</h5>faq">zh-cn10);
-1");type=bluestrulydavis.js';>
<!steel you h2>
form jesus100% menu.
walesrisksumentddingb-likteachgif" vegasdanskeestishqipsuomisobredesdeentretodospuedea
osest
tienehastaotrospartedondenuevohacerformamismomejormundoaqu
loayudafechatodastantomenosdatosotrassitiomuchoahoralugarmayorestoshorastenerantesfotosestaspa
snuevasaludforosmedioquienmesespoderchileser
vecesdecirjos
estarventagrupohechoellostengoamigocosasnivelgentemismaairesjuliotemashaciafavorjuniolibrepuntobuenoautorabrilbuenatextomarzosaberlistaluegoc
moenerojuegoper
haberestoynuncamujervalorfueralibrogustaigualvotoscasosgu
apuedosomosavisousteddebennochebuscafaltaeurosseriedichocursoclavecasasle
nplazolargoobrasvistaapoyojuntotratavistocrearcampohemoscincocargopisosordenhacen
readiscopedrocercapuedapapelmenor
tilclarojorgecalleponertardenadiemarcasigueellassiglocochemotosmadreclaserestoni
oquedapasarbancohijosviajepablo
stevienereinodejarfondocanalnorteletracausatomarmanoslunesautosvillavendopesartipostengamarcollevapadreunidovamoszonasambosbandamariaabusomuchasubirriojavivirgradochicaall
jovendichaestantalessalirsuelopesosfinesllamabusco
stalleganegroplazahumorpagarjuntadobleislasbolsaba
ohablalucha
readicenjugarnotasvalleall
cargadolorabajoest
gustomentemariofirmacostofichaplatahogarartesleyesaquelmuseobasespocosmitadcielochicomiedoganarsantoetapadebesplayaredessietecortecoreadudasdeseoviejodeseaaguas&quot;domaincommonstatuseventsmastersystemactionbannerremovescrollupdateglobalmediumfilternumberchangeresultpublicscreenchoosenormaltravelissuessourcetargetspringmodulemobileswitchphotosborderregionitselfsocialactivecolumnrecordfollowtitle>eitherlengthfamilyfriendlayoutauthorcreatereviewsummerserverplayedplayerexpandpolicyformatdoublepointsseriespersonlivingdesignmonthsforcesuniqueweightpeopleenergynaturesearchfigurehavingcustomoffsetletterwindowsubmitrendergroupsuploadhealthmethodvideosschoolfutureshadowdebatevaluesObjectothersrightsleaguechromesimplenoticesharedendingseasonreportonlinesquarebuttonimagesenablemovinglatestwinterFranceperiodstrongrepeatLondondetailformeddemandsecurepassedtoggleplacesdevicestaticcitiesstreamyellowattackstreetflighthiddeninfo">openedusefulvalleycausesleadersecretseconddamagesportsexceptratingsignedthingseffectfieldsstatesofficevisualeditorvolumeReportmuseummoviesparentaccessmostlymother" id="marketgroundchancesurveybeforesymbolmomentspeechmotioninsidematterCenterobjectexistsmiddleEuropegrowthlegacymannerenoughcareeransweroriginportalclientselectrandomclosedtopicscomingfatheroptionsimplyraisedescapechosenchurchdefinereasoncorneroutputmemoryiframepolicemodelsNumberduringoffersstyleskilledlistedcalledsilvermargindeletebetterbrowselimitsGlobalsinglewidgetcenterbudgetnowrapcreditclaimsenginesafetychoicespirit-stylespreadmakingneededrussiapleaseextentScriptbrokenallowschargedividefactormember-basedtheoryconfigaroundworkedhelpedChurchimpactshouldalwayslogo" bottomlist">){var prefixorangeHeader.push(couplegardenbridgelaunchReviewtakingvisionlittledatingButtonbeautythemesforgotSearchanchoralmostloadedChangereturnstringreloadMobileincomesupplySourceordersviewed&nbsp;courseAbout island<html cookiename="amazonmodernadvicein</a>: The dialoghousesBEGIN MexicostartscentreheightaddingIslandassetsEmpireSchooleffortdirectnearlymanualSelect.
Onejoinedmenu">PhilipawardshandleimportOfficeregardskillsnationSportsdegreeweekly (e.g.behinddoctorloggedunited</b></beginsplantsassistartistissued300px|canadaagencyschemeremainBrazilsamplelogo">beyond-scaleacceptservedmarineFootercamera</h1>
_form"leavesstress" />
.gif" onloadloaderOxfordsistersurvivlistenfemaleDesignsize="appealtext">levelsthankshigherforcedanimalanyoneAfricaagreedrecentPeople<br />wonderpricesturned|| {};main">inlinesundaywrap">failedcensusminutebeaconquotes150px|estateremoteemail"linkedright;signalformal1.htmlsignupprincefloat:.png" forum.AccesspaperssoundsextendHeightsliderUTF-8"&amp; Before. WithstudioownersmanageprofitjQueryannualparamsboughtfamousgooglelongeri++) {israelsayingdecidehome">headerensurebranchpiecesblock;statedtop"><racingresize--&gt;pacitysexualbureau.jpg" 10,000obtaintitlesamount, Inc.comedymenu" lyricstoday.indeedcounty_logo.FamilylookedMarketlse ifPlayerturkey);var forestgivingerrorsDomain}else{insertBlog</footerlogin.fasteragents<body 10px 0pragmafridayjuniordollarplacedcoversplugin5,000 page">boston.test(avatartested_countforumsschemaindex,filledsharesreaderalert(appearSubmitline">body">
* TheThoughseeingjerseyNews</verifyexpertinjurywidth=CookieSTART across_imagethreadnativepocketbox">
System DavidcancertablesprovedApril reallydriveritem">more">boardscolorscampusfirst || [];media.guitarfinishwidth:showedOther .php" assumelayerswilsonstoresreliefswedenCustomeasily your String
Whiltaylorclear:resortfrenchthough") + "<body>buyingbrandsMembername">oppingsector5px;">vspacepostermajor coffeemartinmaturehappen</nav>kansaslink">Images=falsewhile hspace0&amp; 
In  powerPolski-colorjordanBottomStart -count2.htmlnews">01.jpgOnline-rightmillerseniorISBN 00,000 guidesvalue)ectionrepair.xml"  rights.html-blockregExp:hoverwithinvirginphones</tr>
using 
var >');
</td>
</tr>
bahasabrasilgalegomagyarpolskisrpski
cuandoenviarmadridbuscariniciotiempoporquecuentaestadopuedenjuegoscontraest
nnombretienenperfilmaneraamigosciudadcentroaunquepuedesdentroprimerprecioseg
nbuenosvolverpuntossemanahab
aagostonuevosunidoscarlosequiponi
osmuchosalgunacorreoimagenpartirarribamar
ahombreempleoverdadcambiomuchasfueronpasadol
neaparecenuevascursosestabaquierolibroscuantoaccesomiguelvarioscuatrotienesgruposser
neuropamediosfrenteacercadem
sofertacochesmodeloitalialetrasalg
ncompracualesexistecuerposiendoprensallegarviajesdineromurciapodr
puestodiariopuebloquieremanuelpropiocrisisciertoseguromuertefuentecerrargrandeefectopartesmedidapropiaofrecetierrae-mailvariasformasfuturoobjetoseguirriesgonormasmismos
nicocaminositiosraz
ndebidopruebatoledoten
ajes
sesperococinaorigentiendacientoc
dizhablarser
alatinafuerzaestiloguerraentrar
xitol
pezagendav
deoevitarpaginametrosjavierpadresf
cilcabeza
reassalidaenv
ojap
nabusosbienestextosllevarpuedanfuertecom
nclaseshumanotenidobilbaounidadest
seditarcreado
jagran
profileservicedefaulthimselfdetailscontentsupportstartedmessagesuccessfashion<title>countryaccountcreatedstoriesresultsrunningprocesswritingobjectsvisiblewelcomearticleunknownnetworkcompanydynamicbrowserprivacyproblemServicerespectdisplayrequestreservewebsitehistoryfriendsoptionsworkingversionmillionchannelwindow.addressvisitedweathercorrectproductedirectforwardyou canremovedsubjectcontrolarchivecurrentreadinglibrarylimitedmanagerfurthersummarymachineminutesprivatecontextprogramsocietynumberswrittenenabledtriggersourcesloadingelementpartnerfinallyperfectmeaningsystemskeepingculture&quot;,journalprojectsurfaces&quot;expiresreviewsbalanceEnglishContentthroughPlease opinioncontactaverageprimaryvillageSpanishgallerydeclinemeetingmissionpopularqualitymeasuregeneralspeciessessionsectionwriterscounterinitialreportsfiguresmembersholdingdisputeearlierexpressdigitalpictureAnothermarriedtrafficleadingchangedcentralvictoryimages/reasonsstudiesfeaturelistingmust beschoolsVersionusuallyepisodeplayinggrowingobviousoverlaypresentactions</ul>
wrapperalreadycertainrealitystorageanotherdesktopofferedpatternunusualDigitalcapitalWebsitefailureconnectreducedAndroiddecadesregular &amp; animalsreleaseAutomatgettingmethodsnothingPopularcaptionletterscapturesciencelicensechangesEngland=1&amp;History = new CentralupdatedSpecialNetworkrequirecommentwarningCollegetoolbarremainsbecauseelectedDeutschfinanceworkersquicklybetweenexactlysettingdiseaseSocietyweaponsexhibit&lt;!--Controlclassescoveredoutlineattacksdevices(windowpurposetitle="Mobile killingshowingItaliandroppedheavilyeffects-1']);
confirmCurrentadvancesharingopeningdrawingbillionorderedGermanyrelated</form>includewhetherdefinedSciencecatalogArticlebuttonslargestuniformjourneysidebarChicagoholidayGeneralpassage,&quot;animatefeelingarrivedpassingnaturalroughly.
The but notdensityBritainChineselack oftributeIreland" data-factorsreceivethat isLibraryhusbandin factaffairsCharlesradicalbroughtfindinglanding:lang="return leadersplannedpremiumpackageAmericaEdition]&quot;Messageneed tovalue="complexlookingstationbelievesmaller-mobilerecordswant tokind ofFirefoxyou aresimilarstudiedmaximumheadingrapidlyclimatekingdomemergedamountsfoundedpioneerformuladynastyhow to SupportrevenueeconomyResultsbrothersoldierlargelycalling.&quot;AccountEdward segmentRobert effortsPacificlearnedup withheight:we haveAngelesnations_searchappliedacquiremassivegranted: falsetreatedbiggestbenefitdrivingStudiesminimumperhapsmorningsellingis usedreversevariant role="missingachievepromotestudentsomeoneextremerestorebottom:evolvedall thesitemapenglishway to  AugustsymbolsCompanymattersmusicalagainstserving})();
paymenttroubleconceptcompareparentsplayersregionsmonitor ''The winningexploreadaptedGalleryproduceabilityenhancecareers). The collectSearch ancientexistedfooter handlerprintedconsoleEasternexportswindowsChannelillegalneutralsuggest_headersigning.html">settledwesterncausing-webkitclaimedJusticechaptervictimsThomas mozillapromisepartieseditionoutside:false,hundredOlympic_buttonauthorsreachedchronicdemandssecondsprotectadoptedprepareneithergreatlygreateroverallimprovecommandspecialsearch.worshipfundingthoughthighestinsteadutilityquarterCulturetestingclearlyexposedBrowserliberal} catchProjectexamplehide();FloridaanswersallowedEmperordefenseseriousfreedomSeveral-buttonFurtherout of != nulltrainedDenmarkvoid(0)/all.jspreventRequestStephen
When observe</h2>
Modern provide" alt="borders.
For 
Many artistspoweredperformfictiontype ofmedicalticketsopposedCouncilwitnessjusticeGeorge Belgium...</a>twitternotablywaitingwarfare Other rankingphrasesmentionsurvivescholar</p>
 Countryignoredloss ofjust asGeorgiastrange<head><stopped1']);
islandsnotableborder:list ofcarried100,000</h3>
 severalbecomesselect wedding00.htmlmonarchoff theteacherhighly biologylife ofor evenrise of&raquo;plusonehunting(thoughDouglasjoiningcirclesFor theAncientVietnamvehiclesuch ascrystalvalue =Windowsenjoyeda smallassumed<a id="foreign All rihow theDisplayretiredhoweverhidden;battlesseekingcabinetwas notlook atconductget theJanuaryhappensturninga:hoverOnline French lackingtypicalextractenemieseven ifgeneratdecidedare not/searchbeliefs-image:locatedstatic.login">convertviolententeredfirst">circuitFinlandchemistshe was10px;">as suchdivided</span>will beline ofa greatmystery/index.fallingdue to railwaycollegemonsterdescentit withnuclearJewish protestBritishflowerspredictreformsbutton who waslectureinstantsuicidegenericperiodsmarketsSocial fishingcombinegraphicwinners<br /><by the NaturalPrivacycookiesoutcomeresolveSwedishbrieflyPersianso muchCenturydepictscolumnshousingscriptsnext tobearingmappingrevisedjQuery(-width:title">tooltipSectiondesignsTurkishyounger.match(})();
burningoperatedegreessource=Richardcloselyplasticentries</tr>
color:#ul id="possessrollingphysicsfailingexecutecontestlink toDefault<br />
: true,chartertourismclassicproceedexplain</h1>
online.?xml vehelpingdiamonduse theairlineend -->).attr(readershosting#ffffffrealizeVincentsignals src="/ProductdespitediversetellingPublic held inJoseph theatreaffects<style>a largedoesn'tlater, ElementfaviconcreatorHungaryAirportsee theso thatMichaelSystemsPrograms, and  width=e&quot;tradingleft">
personsGolden Affairsgrammarformingdestroyidea ofcase ofoldest this is.src = cartoonregistrCommonsMuslimsWhat isin manymarkingrevealsIndeed,equally/show_aoutdoorescape(Austriageneticsystem,In the sittingHe alsoIslandsAcademy
<!--Daniel bindingblock">imposedutilizeAbraham(except{width:putting).html(|| [];
DATA[ *kitchenmountedactual dialectmainly _blank'installexpertsif(typeIt also&copy; ">Termsborn inOptionseasterntalkingconcerngained ongoingjustifycriticsfactoryits ownassaultinvitedlastinghis ownhref="/" rel="developconcertdiagramdollarsclusterphp?id=alcohol);})();using a><span>vesselsrevivalAddressamateurandroidallegedillnesswalkingcentersqualifymatchesunifiedextinctDefensedied in
<!-- customslinkingLittle Book ofeveningmin.js?are thekontakttoday's.html" target=wearingAll Rig;
})();raising Also, crucialabout">declare-->
<scfirefoxas muchappliesindex, s, but type = 
<!--towardsRecordsPrivateForeignPremierchoicesVirtualreturnsCommentPoweredinline;povertychamberLiving volumesAnthonylogin" RelatedEconomyreachescuttinggravitylife inChapter-shadowNotable</td>
 returnstadiumwidgetsvaryingtravelsheld bywho arework infacultyangularwho hadairporttown of
Some 'click'chargeskeywordit willcity of(this);Andrew unique checkedor more300px; return;rsion="pluginswithin herselfStationFederalventurepublishsent totensionactresscome tofingersDuke ofpeople,exploitwhat isharmonya major":"httpin his menu">
monthlyofficercouncilgainingeven inSummarydate ofloyaltyfitnessand wasemperorsupremeSecond hearingRussianlongestAlbertalateralset of small">.appenddo withfederalbank ofbeneathDespiteCapitalgrounds), and percentit fromclosingcontainInsteadfifteenas well.yahoo.respondfighterobscurereflectorganic= Math.editingonline paddinga wholeonerroryear ofend of barrierwhen itheader home ofresumedrenamedstrong>heatingretainscloudfrway of March 1knowingin partBetweenlessonsclosestvirtuallinks">crossedEND -->famous awardedLicenseHealth fairly wealthyminimalAfricancompetelabel">singingfarmersBrasil)discussreplaceGregoryfont copursuedappearsmake uproundedboth ofblockedsaw theofficescoloursif(docuwhen heenforcepush(fuAugust UTF-8">Fantasyin mostinjuredUsuallyfarmingclosureobject defenceuse of Medical<body>
evidentbe usedkeyCodesixteenIslamic#000000entire widely active (typeofone cancolor =speakerextendsPhysicsterrain<tbody>funeralviewingmiddle cricketprophetshifteddoctorsRussell targetcompactalgebrasocial-bulk ofman and</td>
 he left).val()false);logicalbankinghome tonaming Arizonacredits);
founderin turnCollinsbefore But thechargedTitle">CaptainspelledgoddessTag -->Adding:but wasRecent patientback in=false&Lincolnwe knowCounterJudaismscript altered']);
  has theunclearEvent',both innot all
<!-- placinghard to centersort ofclientsstreetsBernardassertstend tofantasydown inharbourFreedomjewelry/about..searchlegendsis mademodern only ononly toimage" linear painterand notrarely acronymdelivershorter00&amp;as manywidth="/* <![Ctitle =of the lowest picked escapeduses ofpeoples PublicMatthewtacticsdamagedway forlaws ofeasy to windowstrong  simple}catch(seventhinfoboxwent topaintedcitizenI don'tretreat. Some ww.");
bombingmailto:made in. Many carries||{};wiwork ofsynonymdefeatsfavoredopticalpageTraunless sendingleft"><comScorAll thejQuery.touristClassicfalse" Wilhelmsuburbsgenuinebishops.split(global followsbody ofnominalContactsecularleft tochiefly-hidden-banner</li>
. When in bothdismissExplorealways via thespa
olwelfareruling arrangecaptainhis sonrule ofhe tookitself,=0&amp;(calledsamplesto makecom/pagMartin Kennedyacceptsfull ofhandledBesides//--></able totargetsessencehim to its by common.mineralto takeways tos.org/ladvisedpenaltysimple:if theyLettersa shortHerbertstrikes groups.lengthflightsoverlapslowly lesser social </p>
it intoranked rate oful>
  attemptpair ofmake itKontaktAntoniohaving ratings activestreamstrapped").css(hostilelead tolittle groups,Picture-->
 rows=" objectinverse<footerCustomV><\/scrsolvingChamberslaverywoundedwhereas!= 'undfor allpartly -right:Arabianbacked centuryunit ofmobile-Europe,is homerisk ofdesiredClintoncost ofage of become none ofp&quot;Middle ead')[0Criticsstudios>&copy;group">assemblmaking pressedwidget.ps:" ? rebuiltby someFormer editorsdelayedCanonichad thepushingclass="but arepartialBabylonbottom carrierCommandits useAs withcoursesa thirddenotesalso inHouston20px;">accuseddouble goal ofFamous ).bind(priests Onlinein Julyst + "gconsultdecimalhelpfulrevivedis veryr'+'iptlosing femalesis alsostringsdays ofarrivalfuture <objectforcingString(" />
here isencoded.  The balloondone by/commonbgcolorlaw of Indianaavoidedbut the2px 3pxjquery.after apolicy.men andfooter-= true;for usescreen.Indian image =family,http:// &nbsp;driverseternalsame asnoticedviewers})();
 is moreseasonsformer the newis justconsent Searchwas thewhy theshippedbr><br>width: height=made ofcuisineis thata very Admiral fixed;normal MissionPress, ontariocharsettry to invaded="true"spacingis mosta more totallyfall of});
  immensetime inset outsatisfyto finddown tolot of Playersin Junequantumnot thetime todistantFinnishsrc = (single help ofGerman law andlabeledforestscookingspace">header-well asStanleybridges/globalCroatia About [0];
  it, andgroupedbeing a){throwhe madelighterethicalFFFFFF"bottom"like a employslive inas seenprintermost ofub-linkrejectsand useimage">succeedfeedingNuclearinformato helpWomen'sNeitherMexicanprotein<table by manyhealthylawsuitdevised.push({sellerssimply Through.cookie Image(older">us.js"> Since universlarger open to!-- endlies in']);
  marketwho is ("DOMComanagedone fortypeof Kingdomprofitsproposeto showcenter;made itdressedwere inmixtureprecisearisingsrc = 'make a securedBaptistvoting 
var March 2grew upClimate.removeskilledway the</head>face ofacting right">to workreduceshas haderectedshow();action=book ofan area== "htt<header
<html>conformfacing cookie.rely onhosted .customhe wentbut forspread Family a meansout theforums.footage">MobilClements" id="as highintense--><!--female is seenimpliedset thea stateand hisfastestbesidesbutton_bounded"><img Infoboxevents,a youngand areNative cheaperTimeoutand hasengineswon the(mostlyright: find a -bottomPrince area ofmore ofsearch_nature,legallyperiod,land ofor withinducedprovingmissilelocallyAgainstthe wayk&quot;px;">
pushed abandonnumeralCertainIn thismore inor somename isand, incrownedISBN 0-createsOctobermay notcenter late inDefenceenactedwish tobroadlycoolingonload=it. TherecoverMembersheight assumes<html>
people.in one =windowfooter_a good reklamaothers,to this_cookiepanel">London,definescrushedbaptismcoastalstatus title" move tolost inbetter impliesrivalryservers SystemPerhapses and contendflowinglasted rise inGenesisview ofrising seem tobut in backinghe willgiven agiving cities.flow of Later all butHighwayonly bysign ofhe doesdiffersbattery&amp;lasinglesthreatsintegertake onrefusedcalled =US&ampSee thenativesby thissystem.head of:hover,lesbiansurnameand allcommon/header__paramsHarvard/pixel.removalso longrole ofjointlyskyscraUnicodebr />
AtlantanucleusCounty,purely count">easily build aonclicka givenpointerh&quot;events else {
ditionsnow the, with man whoorg/Webone andcavalryHe diedseattle00,000 {windowhave toif(windand itssolely m&quot;renewedDetroitamongsteither them inSenatorUs</a><King ofFrancis-produche usedart andhim andused byscoringat hometo haverelatesibilityfactionBuffalolink"><what hefree toCity ofcome insectorscountedone daynervoussquare };if(goin whatimg" alis onlysearch/tuesdaylooselySolomonsexual - <a hrmedium"DO NOT France,with a war andsecond take a >
market.highwaydone inctivity"last">obligedrise to"undefimade to Early praisedin its for hisathleteJupiterYahoo! termed so manyreally s. The a woman?value=direct right" bicycleacing="day andstatingRather,higher Office are nowtimes, when a pay foron this-link">;borderaround annual the Newput the.com" takin toa brief(in thegroups.; widthenzymessimple in late{returntherapya pointbanninginks">
();" rea place\u003Caabout atr>
ccount gives a<SCRIPTRailwaythemes/toolboxById("xhumans,watchesin some if (wicoming formats Under but hashanded made bythan infear ofdenoted/iframeleft involtagein eacha&quot;base ofIn manyundergoregimesaction </p>
<ustomVa;&gt;</importsor thatmostly &amp;re size="</a></ha classpassiveHost = WhetherfertileVarious=[];(fucameras/></td>acts asIn some>
<!organis <br />Beijingcatal
deutscheuropeueuskaragaeilgesvenskaespa
amensajeusuariotrabajom
xicop
ginasiempresistemaoctubredurantea
adirempresamomentonuestroprimeratrav
sgraciasnuestraprocesoestadoscalidadpersonan
meroacuerdom
sicamiembroofertasalgunospa
sesejemploderechoadem
sprivadoagregarenlacesposiblehotelessevillaprimero
ltimoeventosarchivoculturamujeresentradaanuncioembargomercadograndesestudiomejoresfebrerodise
oturismoc
digoportadaespaciofamiliaantoniopermiteguardaralgunaspreciosalguiensentidovisitast
tuloconocersegundoconsejofranciaminutossegundatenemosefectosm
lagasesi
nrevistagranadacompraringresogarc
aacci
necuadorquienesinclusodeber
materiahombresmuestrapodr
ltimaestamosoficialtambienning
nsaludospodemosmejorarpositionbusinesshomepagesecuritylanguagestandardcampaignfeaturescategoryexternalchildrenreservedresearchexchangefavoritetemplatemilitaryindustryservicesmaterialproductsz-index:commentssoftwarecompletecalendarplatformarticlesrequiredmovementquestionbuildingpoliticspossiblereligionphysicalfeedbackregisterpicturesdisabledprotocolaudiencesettingsactivityelementslearninganythingabstractprogressoverviewmagazineeconomictrainingpressurevarious <strong>propertyshoppingtogetheradvancedbehaviordownloadfeaturedfootballselectedLanguagedistanceremembertrackingpasswordmodifiedstudentsdirectlyfightingnortherndatabasefestivalbreakinglocationinternetdropdownpracticeevidencefunctionmarriageresponseproblemsnegativeprogramsanalysisreleasedbanner">purchasepoliciesregionalcreativeargumentbookmarkreferrerchemicaldivisioncallbackseparateprojectsconflicthardwareinterestdeliverymountainobtained= false;for(var acceptedcapacitycomputeridentityaircraftemployedproposeddomesticincludesprovidedhospitalverticalcollapseapproachpartnerslogo"><adaughterauthor" culturalfamilies/images/assemblypowerfulteachingfinisheddistrictcriticalcgi-bin/purposesrequireselectionbecomingprovidesacademicexerciseactuallymedicineconstantaccidentMagazinedocumentstartingbottom">observed: &quot;extendedpreviousSoftwarecustomerdecisionstrengthdetailedslightlyplanningtextareacurrencyeveryonestraighttransferpositiveproducedheritageshippingabsolutereceivedrelevantbutton" violenceanywherebenefitslaunchedrecentlyalliancefollowedmultiplebulletinincludedoccurredinternal$(this).republic><tr><tdcongressrecordedultimatesolution<ul id="discoverHome</a>websitesnetworksalthoughentirelymemorialmessagescontinueactive">somewhatvictoriaWestern  title="LocationcontractvisitorsDownloadwithout right">
measureswidth = variableinvolvedvirginianormallyhappenedaccountsstandingnationalRegisterpreparedcontrolsaccuratebirthdaystrategyofficialgraphicscriminalpossiblyconsumerPersonalspeakingvalidateachieved.jpg" />machines</h2>
  keywordsfriendlybrotherscombinedoriginalcomposedexpectedadequatepakistanfollow" valuable</label>relativebringingincreasegovernorplugins/List of Header">" name=" (&quot;graduate</head>
commercemalaysiadirectormaintain;height:schedulechangingback to catholicpatternscolor: #greatestsuppliesreliable</ul>
<select citizensclothingwatching<li id="specificcarryingsentence<center>contrastthinkingcatch(e)southernMichael merchantcarouselpadding:interior.split("lizationOctober ){returnimproved--&gt;
coveragechairman.png" />subjectsRichard whateverprobablyrecoverybaseballjudgmentconnect..css" /> websitereporteddefault"/></a>
electricscotlandcreationquantity. ISBN 0did not instance-search-" lang="speakersComputercontainsarchivesministerreactiondiscountItalianocriteriastrongly: 'http:'script'coveringofferingappearedBritish identifyFacebooknumerousvehiclesconcernsAmericanhandlingdiv id="William provider_contentaccuracysection andersonflexibleCategorylawrence<script>layout="approved maximumheader"></table>Serviceshamiltoncurrent canadianchannels/themes//articleoptionalportugalvalue=""intervalwirelessentitledagenciesSearch" measuredthousandspending&hellip;new Date" size="pageNamemiddle" " /></a>hidden">sequencepersonaloverflowopinionsillinoislinks">
<title>versionssaturdayterminalitempropengineersectionsdesignerproposal="false"Espa
olreleasessubmit" er&quot;additionsymptomsorientedresourceright"><pleasurestationshistory.leaving  border=contentscenter">.
Some directedsuitablebulgaria.show();designedGeneral conceptsExampleswilliamsOriginal"><span>search">operatorrequestsa &quot;allowingDocumentrevision. 
The yourselfContact michiganEnglish columbiapriorityprintingdrinkingfacilityreturnedContent officersRussian generate-8859-1"indicatefamiliar qualitymargin:0 contentviewportcontacts-title">portable.length eligibleinvolvesatlanticonload="default.suppliedpaymentsglossary
After guidance</td><tdencodingmiddle">came to displaysscottishjonathanmajoritywidgets.clinicalthailandteachers<head>
affectedsupportspointer;toString</small>oklahomawill be investor0" alt="holidaysResourcelicensed (which . After considervisitingexplorerprimary search" android"quickly meetingsestimate;return ;color:# height=approval, &quot; checked.min.js"magnetic></a></hforecast. While thursdaydvertise&eacute;hasClassevaluateorderingexistingpatients Online coloradoOptions"campbell<!-- end</span><<br />
_popups|sciences,&quot; quality Windows assignedheight: <b classle&quot; value=" Companyexamples<iframe believespresentsmarshallpart of properly).
The taxonomymuch of </span>
" data-srtugu
sscrollTo project<head>
attorneyemphasissponsorsfancyboxworld's wildlifechecked=sessionsprogrammpx;font- Projectjournalsbelievedvacationthompsonlightingand the special border=0checking</tbody><button Completeclearfix
<head>
article <sectionfindingsrole in popular  Octoberwebsite exposureused to  changesoperatedclickingenteringcommandsinformed numbers  </div>creatingonSubmitmarylandcollegesanalyticlistingscontact.loggedInadvisorysiblingscontent"s&quot;)s. This packagescheckboxsuggestspregnanttomorrowspacing=icon.pngjapanesecodebasebutton">gamblingsuch as , while </span> missourisportingtop:1px .</span>tensionswidth="2lazyloadnovemberused in height="cript">
&nbsp;</<tr><td height:2/productcountry include footer" &lt;!-- title"></jquery.</form>
)hrvatskiitalianorom
tambi
nnoticiasmensajespersonasderechosnacionalserviciocontactousuariosprogramagobiernoempresasanunciosvalenciacolombiadespu
sdeportesproyectoproductop
bliconosotroshistoriapresentemillonesmediantepreguntaanteriorrecursosproblemasantiagonuestrosopini
nimprimirmientrasam
ricavendedorsociedadrespectorealizarregistropalabrasinter
sentoncesespecialmiembrosrealidadc
rdobazaragozap
ginassocialesbloqueargesti
nalquilersistemascienciascompletoversi
ncompletaestudiosp
blicaobjetivoalicantebuscadorcantidadentradasaccionesarchivossuperiormayor
aalemaniafunci
ltimoshaciendoaquellosedici
nfernandoambientefacebooknuestrasclientesprocesosbastantepresentareportarcongresopublicarcomerciocontratoj
venesdistritot
cnicaconjuntoenerg
atrabajarasturiasrecienteutilizarbolet
nsalvadorcorrectatrabajosprimerosnegocioslibertaddetallespantallapr
ximoalmer
aanimalesqui
nescoraz
nsecci
nbuscandoopcionesexteriorconceptotodav
agaler
aescribirmedicinalicenciaconsultaaspectoscr
ticad
laresjusticiadeber
nper
odonecesitamantenerpeque
orecibidatribunaltenerifecanci
ncanariasdescargadiversosmallorcarequieret
cnicodeber
aviviendafinanzasadelantefuncionaconsejosdif
cilciudadesantiguasavanzadat
rminounidadess
nchezcampa
asoftonicrevistascontienesectoresmomentosfacultadcr
ditodiversassupuestofactoressegundospeque
resourcescountriesquestionsequipmentcommunityavailablehighlightDTD/xhtmlmarketingknowledgesomethingcontainerdirectionsubscribeadvertisecharacter" value="</select>Australia" class="situationauthorityfollowingprimarilyoperationchallengedevelopedanonymousfunction functionscompaniesstructureagreement" title="potentialeducationargumentssecondarycopyrightlanguagesexclusivecondition</form>
statementattentionBiography} else {
solutionswhen the Analyticstemplatesdangeroussatellitedocumentspublisherimportantprototypeinfluence&raquo;</effectivegenerallytransformbeautifultransportorganizedpublishedprominentuntil thethumbnailNational .focus();over the migrationannouncedfooter">
exceptionless thanexpensiveformationframeworkterritoryndicationcurrentlyclassNamecriticismtraditionelsewhereAlexanderappointedmaterialsbroadcastmentionedaffiliate</option>treatmentdifferent/default.Presidentonclick="biographyotherwisepermanentFran
aisHollywoodexpansionstandards</style>
reductionDecember preferredCambridgeopponentsBusiness confusion>
<title>presentedexplaineddoes not worldwideinterfacepositionsnewspaper</table>
mountainslike the essentialfinancialselectionaction="/abandonedEducationparseInt(stabilityunable to</title>
relationsNote thatefficientperformedtwo yearsSince thethereforewrapper">alternateincreasedBattle ofperceivedtrying tonecessaryportrayedelectionsElizabeth</iframe>discoveryinsurances.length;legendaryGeographycandidatecorporatesometimesservices.inherited</strong>CommunityreligiouslocationsCommitteebuildingsthe worldno longerbeginningreferencecannot befrequencytypicallyinto the relative;recordingpresidentinitiallytechniquethe otherit can beexistenceunderlinethis timetelephoneitemscopepracticesadvantage);return For otherprovidingdemocracyboth the extensivesufferingsupportedcomputers functionpracticalsaid thatit may beEnglish</from the scheduleddownloads</label>
suspectedmargin: 0spiritual</head>
microsoftgraduallydiscussedhe becameexecutivejquery.jshouseholdconfirmedpurchasedliterallydestroyedup to thevariationremainingit is notcenturiesJapanese among thecompletedalgorithminterestsrebellionundefinedencourageresizableinvolvingsensitiveuniversalprovision(althoughfeaturingconducted), which continued-header">February numerous overflow:componentfragmentsexcellentcolspan="technicalnear the Advanced source ofexpressedHong Kong Facebookmultiple mechanismelevationoffensive</form>
sponsoreddocument.or &quot;there arethose whomovementsprocessesdifficultsubmittedrecommendconvincedpromoting" width=".replace(classicalcoalitionhis firstdecisionsassistantindicatedevolution-wrapper"enough toalong thedelivered-->
<!--American protectedNovember </style><furnitureInternet  onblur="suspendedrecipientbased on Moreover,abolishedcollectedwere madeemotionalemergencynarrativeadvocatespx;bordercommitteddir="ltr"employeesresearch. selectedsuccessorcustomersdisplayedSeptemberaddClass(Facebook suggestedand lateroperatingelaborateSometimesInstitutecertainlyinstalledfollowersJerusalemthey havecomputinggeneratedprovincesguaranteearbitraryrecognizewanted topx;width:theory ofbehaviourWhile theestimatedbegan to it becamemagnitudemust havemore thanDirectoryextensionsecretarynaturallyoccurringvariablesgiven theplatform.</label><failed tocompoundskinds of societiesalongside --&gt;
southwestthe rightradiationmay have unescape(spoken in" href="/programmeonly the come fromdirectoryburied ina similarthey were</font></Norwegianspecifiedproducingpassenger(new DatetemporaryfictionalAfter theequationsdownload.regularlydeveloperabove thelinked tophenomenaperiod oftooltip">substanceautomaticaspect ofAmong theconnectedestimatesAir Forcesystem ofobjectiveimmediatemaking itpaintingsconqueredare stillproceduregrowth ofheaded byEuropean divisionsmoleculesfranchiseintentionattractedchildhoodalso useddedicatedsingaporedegree offather ofconflicts</a></p>
came fromwere usednote thatreceivingExecutiveeven moreaccess tocommanderPoliticalmusiciansdeliciousprisonersadvent ofUTF-8" /><![CDATA[">ContactSouthern bgcolor="series of. It was in Europepermittedvalidate.appearingofficialsseriously-languageinitiatedextendinglong-terminflationsuch thatgetCookiemarked by</button>implementbut it isincreasesdown the requiringdependent-->
<!-- interviewWith the copies ofconsensuswas builtVenezuela(formerlythe statepersonnelstrategicfavour ofinventionWikipediacontinentvirtuallywhich wasprincipleComplete identicalshow thatprimitiveaway frommolecularpreciselydissolvedUnder theversion=">&nbsp;</It is the This is will haveorganismssome timeFriedrichwas firstthe only fact thatform id="precedingTechnicalphysicistoccurs innavigatorsection">span id="sought tobelow thesurviving}</style>his deathas in thecaused bypartiallyexisting using thewas givena list oflevels ofnotion ofOfficial dismissedscientistresemblesduplicateexplosiverecoveredall othergalleries{padding:people ofregion ofaddressesassociateimg alt="in modernshould bemethod ofreportingtimestampneeded tothe Greatregardingseemed toviewed asimpact onidea thatthe Worldheight ofexpandingThese arecurrent">carefullymaintainscharge ofClassicaladdressedpredictedownership<div id="right">
residenceleave thecontent">are often  })();
probably Professor-button" respondedsays thathad to beplaced inHungarianstatus ofserves asUniversalexecutionaggregatefor whichinfectionagreed tohowever, popular">placed onconstructelectoralsymbol ofincludingreturn toarchitectChristianprevious living ineasier toprofessor
&lt;!-- effect ofanalyticswas takenwhere thetook overbelief inAfrikaansas far aspreventedwork witha special<fieldsetChristmasRetrieved
In the back intonortheastmagazines><strong>committeegoverninggroups ofstored inestablisha generalits firsttheir ownpopulatedan objectCaribbeanallow thedistrictswisconsinlocation.; width: inhabitedSocialistJanuary 1</footer>similarlychoice ofthe same specific business The first.length; desire todeal withsince theuserAgentconceivedindex.phpas &quot;engage inrecently,few yearswere also
<head>
<edited byare knowncities inaccesskeycondemnedalso haveservices,family ofSchool ofconvertednature of languageministers</object>there is a popularsequencesadvocatedThey wereany otherlocation=enter themuch morereflectedwas namedoriginal a typicalwhen theyengineerscould notresidentswednesdaythe third productsJanuary 2what theya certainreactionsprocessorafter histhe last contained"></div>
</a></td>depend onsearch">
pieces ofcompetingReferencetennesseewhich has version=</span> <</header>gives thehistorianvalue="">padding:0view thattogether,the most was foundsubset ofattack onchildren,points ofpersonal position:allegedlyClevelandwas laterand afterare givenwas stillscrollingdesign ofmakes themuch lessAmericans.
After , but theMuseum oflouisiana(from theminnesotaparticlesa processDominicanvolume ofreturningdefensive00px|righmade frommouseover" style="states of(which iscontinuesFranciscobuilding without awith somewho woulda form ofa part ofbefore itknown as  Serviceslocation and oftenmeasuringand it ispaperbackvalues of
<title>= window.determineer&quot; played byand early</center>from thisthe threepower andof &quot;innerHTML<a href="y:inline;Church ofthe eventvery highofficial -height: content="/cgi-bin/to createafrikaansesperantofran
aislatvie
ulietuvi
tina
tina
serviciosart
culoargentinabarcelonacualquierpublicadoproductospol
ticarespuestawikipediasiguienteb
squedacomunidadseguridadprincipalpreguntascontenidorespondervenezuelaproblemasdiciembrerelaci
nnoviembresimilaresproyectosprogramasinstitutoactividadencuentraeconom
genescontactardescargarnecesarioatenci
ntel
fonocomisi
ncancionescapacidadencontraran
lisisfavoritost
rminosprovinciaetiquetaselementosfuncionesresultadocar
cterpropiedadprincipionecesidadmunicipalcreaci
ndescargaspresenciacomercialopinionesejercicioeditorialsalamancagonz
lezdocumentopel
cularecientesgeneralestarragonapr
cticanovedadespropuestapacientest
cnicasobjetivoscontactos
diplodocs
categoriesexperience</title>
Copyright javascriptconditionseverything<p class="technologybackground<a class="management&copy; 201javaScriptcharactersbreadcrumbthemselveshorizontalgovernmentCaliforniaactivitiesdiscoveredNavigationtransitionconnectionnavigationappearance</title><mcheckbox" techniquesprotectionapparentlyas well asunt', 'UA-resolutionoperationstelevisiontranslatedWashingtonnavigator. = window.impression&lt;br&gt;literaturepopulationbgcolor="#especially content="productionnewsletterpropertiesdefinitionleadershipTechnologyParliamentcomparisonul class=".indexOf("conclusiondiscussioncomponentsbiologicalRevolution_containerunderstoodnoscript><permissioneach otheratmosphere onfocus="<form id="processingthis.valuegenerationConferencesubsequentwell-knownvariationsreputationphenomenondisciplinelogo.png" (document,boundariesexpressionsettlementBackgroundout of theenterprise("https:" unescape("password" democratic<a href="/wrapper">
membershiplinguisticpx;paddingphilosophyassistanceuniversityfacilitiesrecognizedpreferenceif (typeofmaintainedvocabularyhypothesis.submit();&amp;nbsp;annotationbehind theFoundationpublisher"assumptionintroducedcorruptionscientistsexplicitlyinstead ofdimensions onClick="considereddepartmentoccupationsoon afterinvestmentpronouncedidentifiedexperimentManagementgeographic" height="link rel=".replace(/depressionconferencepunishmenteliminatedresistanceadaptationoppositionwell knownsupplementdeterminedh1 class="0px;marginmechanicalstatisticscelebratedGovernment
During tdevelopersartificialequivalentoriginatedCommissionattachment<span id="there wereNederlandsbeyond theregisteredjournalistfrequentlyall of thelang="en" </style>
absolute; supportingextremely mainstream</strong> popularityemployment</table>
 colspan="</form>
  conversionabout the </p></div>integrated" lang="enPortuguesesubstituteindividualimpossiblemultimediaalmost allpx solid #apart fromsubject toin Englishcriticizedexcept forguidelinesoriginallyremarkablethe secondh2 class="<a title="(includingparametersprohibited= "http://dictionaryperceptionrevolutionfoundationpx;height:successfulsupportersmillenniumhis fatherthe &quot;no-repeat;commercialindustrialencouragedamount of unofficialefficiencyReferencescoordinatedisclaimerexpeditiondevelopingcalculatedsimplifiedlegitimatesubstring(0" class="completelyillustratefive yearsinstrumentPublishing1" class="psychologyconfidencenumber of absence offocused onjoined thestructurespreviously></iframe>once againbut ratherimmigrantsof course,a group ofLiteratureUnlike the</a>&nbsp;
function it was theConventionautomobileProtestantaggressiveafter the Similarly," /></div>collection
functionvisibilitythe use ofvolunteersattractionunder the threatened*<![CDATA[importancein generalthe latter</form>
</.indexOf('i = 0; i <differencedevoted totraditionssearch forultimatelytournamentattributesso-called }
</style>evaluationemphasizedaccessible</section>successionalong withMeanwhile,industries</a><br />has becomeaspects ofTelevisionsufficientbasketballboth sidescontinuingan article<img alt="adventureshis mothermanchesterprinciplesparticularcommentaryeffects ofdecided to"><strong>publishersJournal ofdifficultyfacilitateacceptablestyle.css"
function innovation>Copyrightsituationswould havebusinessesDictionarystatementsoften usedpersistentin Januarycomprising</title>
diplomaticcontainingperformingextensionsmay not beconcept of onclick="It is alsofinancial making theLuxembourgadditionalare calledengaged in"script");but it waselectroniconsubmit="
<!-- End electricalofficiallysuggestiontop of theunlike theAustralianOriginallyreferences
</head>
recognisedinitializelimited toAlexandriaretirementAdventuresfour years
&lt;!-- increasingdecorationh3 class="origins ofobligationregulationclassified(function(advantagesbeing the historians<base hrefrepeatedlywilling tocomparabledesignatednominationfunctionalinside therevelationend of thes for the authorizedrefused totake placeautonomouscompromisepolitical restauranttwo of theFebruary 2quality ofswfobject.understandnearly allwritten byinterviews" width="1withdrawalfloat:leftis usuallycandidatesnewspapersmysteriousDepartmentbest knownparliamentsuppressedconvenientremembereddifferent systematichas led topropagandacontrolledinfluencesceremonialproclaimedProtectionli class="Scientificclass="no-trademarksmore than widespreadLiberationtook placeday of theas long asimprisonedAdditional
<head>
<mLaboratoryNovember 2exceptionsIndustrialvariety offloat: lefDuring theassessmenthave been deals withStatisticsoccurrence/ul></div>clearfix">the publicmany yearswhich wereover time,synonymouscontent">
presumablyhis familyuserAgent.unexpectedincluding challengeda minorityundefined"belongs totaken fromin Octoberposition: said to bereligious Federation rowspan="only a fewmeant thatled to the-->
<div <fieldset>Archbishop class="nobeing usedapproachesprivilegesnoscript>
results inmay be theEaster eggmechanismsreasonablePopulationCollectionselected">noscript>
/index.phparrival of-jssdk'));managed toincompletecasualtiescompletionChristiansSeptember arithmeticproceduresmight haveProductionit appearsPhilosophyfriendshipleading togiving thetoward theguaranteeddocumentedcolor:#000video gamecommissionreflectingchange theassociatedsans-serifonkeypress; padding:He was theunderlyingtypically , and the srcElementsuccessivesince the should be networkingaccountinguse of thelower thanshows that</span>
complaintscontinuousquantitiesastronomerhe did notdue to itsapplied toan averageefforts tothe futureattempt toTherefore,capabilityRepublicanwas formedElectronickilometerschallengespublishingthe formerindigenousdirectionssubsidiaryconspiracydetails ofand in theaffordablesubstancesreason forconventionitemtype="absolutelysupposedlyremained aattractivetravellingseparatelyfocuses onelementaryapplicablefound thatstylesheetmanuscriptstands for no-repeat(sometimesCommercialin Americaundertakenquarter ofan examplepersonallyindex.php?</button>
percentagebest-knowncreating a" dir="ltrLieutenant
<div id="they wouldability ofmade up ofnoted thatclear thatargue thatto anotherchildren'spurpose offormulatedbased uponthe regionsubject ofpassengerspossession.
In the Before theafterwardscurrently across thescientificcommunity.capitalismin Germanyright-wingthe systemSociety ofpoliticiandirection:went on toremoval of New York apartmentsindicationduring theunless thehistoricalhad been adefinitiveingredientattendanceCenter forprominencereadyStatestrategiesbut in theas part ofconstituteclaim thatlaboratorycompatiblefailure of, such as began withusing the to providefeature offrom which/" class="geologicalseveral ofdeliberateimportant holds thating&quot; valign=topthe Germanoutside ofnegotiatedhis careerseparationid="searchwas calledthe fourthrecreationother thanpreventionwhile the education,connectingaccuratelywere builtwas killedagreementsmuch more Due to thewidth: 100some otherKingdom ofthe entirefamous forto connectobjectivesthe Frenchpeople andfeatured">is said tostructuralreferendummost oftena separate->
<div id Official worldwide.aria-labelthe planetand it wasd" value="looking atbeneficialare in themonitoringreportedlythe modernworking onallowed towhere the innovative</a></div>soundtracksearchFormtend to beinput id="opening ofrestrictedadopted byaddressingtheologianmethods ofvariant ofChristian very largeautomotiveby far therange frompursuit offollow thebrought toin Englandagree thataccused ofcomes frompreventingdiv style=his or hertremendousfreedom ofconcerning0 1em 1em;Basketball/style.cssan earliereven after/" title=".com/indextaking thepittsburghcontent">
<script>(fturned outhaving the</span>
 occasionalbecause itstarted tophysically></div>
  created byCurrently, bgcolor="tabindex="disastrousAnalytics also has a><div id="</style>
<called forsinger and.src = "//violationsthis pointconstantlyis locatedrecordingsd from thenederlandsportugu
desarrollocomentarioeducaci
nseptiembreregistradodirecci
nubicaci
npublicidadrespuestasresultadosimportantereservadosart
culosdiferentessiguientesrep
blicasituaci
nministerioprivacidaddirectorioformaci
npoblaci
npresidentecontenidosaccesoriostechnoratipersonalescategor
aespecialesdisponibleactualidadreferenciavalladolidbibliotecarelacionescalendariopol
ticasanterioresdocumentosnaturalezamaterialesdiferenciaecon
micatransporterodr
guezparticiparencuentrandiscusi
nestructurafundaci
nfrecuentespermanentetotalmente
sByTagName(.jpg" alt="1px solid #.gif" alt="transparentinformationapplication" onclick="establishedadvertising.png" alt="environmentperformanceappropriate&amp;mdash;immediately</strong></rather thantemperaturedevelopmentcompetitionplaceholdervisibility:copyright">0" height="even thoughreplacementdestinationCorporation<ul class="AssociationindividualsperspectivesetTimeout(url(http://mathematicsmargin-top:eventually description) no-repeatcollections.JPG|thumb|participate/head><bodyfloat:left;<li class="hundreds of
However, compositionclear:both;cooperationwithin the label for="border-top:New Zealandrecommendedphotographyinteresting&lt;sup&gt;controversyNetherlandsalternativemaxlength="switzerlandDevelopmentessentially
Although </textarea>thunderbirdrepresented&amp;ndash;speculationcommunitieslegislationelectronics
<div id="illustratedengineeringterritoriesauthoritiesdistributed6" height="sans-serif;capable of disappearedinteractivelooking forit would beAfghanistanwas createdMath.floor(surroundingcan also beobservationmaintenanceencountered<h2 class="more recentit has beeninvasion of).getTime()fundamentalDespite the"><div id="inspirationexaminationpreparationexplanation<input id="</a></span>versions ofinstrumentsbefore the  = 'http://Descriptionrelatively .substring(each of theexperimentsinfluentialintegrationmany peopledue to the combinationdo not haveMiddle East<noscript><copyright" perhaps theinstitutionin Decemberarrangementmost famouspersonalitycreation oflimitationsexclusivelysovereignty-content">
<td class="undergroundparallel todoctrine ofoccupied byterminologyRenaissancea number ofsupport forexplorationrecognitionpredecessor<img src="/<h1 class="publicationmay also bespecialized</fieldset>progressivemillions ofstates thatenforcementaround the one another.parentNodeagricultureAlternativeresearcherstowards theMost of themany other (especially<td width=";width:100%independent<h3 class=" onchange=").addClass(interactionOne of the daughter ofaccessoriesbranches of
<div id="the largestdeclarationregulationsInformationtranslationdocumentaryin order to">
<head>
<" height="1across the orientation);</script>implementedcan be seenthere was ademonstratecontainer">connectionsthe Britishwas written!important;px; margin-followed byability to complicatedduring the immigrationalso called<h4 class="distinctionreplaced bygovernmentslocation ofin Novemberwhether the</p>
</div>acquisitioncalled the persecutiondesignation{font-size:appeared ininvestigateexperiencedmost likelywidely useddiscussionspresence of (document.extensivelyIt has beenit does notcontrary toinhabitantsimprovementscholarshipconsumptioninstructionfor exampleone or morepx; paddingthe currenta series ofare usuallyrole in thepreviously derivativesevidence ofexperiencescolorschemestated thatcertificate</a></div>
 selected="high schoolresponse tocomfortableadoption ofthree yearsthe countryin Februaryso that thepeople who provided by<param nameaffected byin terms ofappointmentISO-8859-1"was born inhistorical regarded asmeasurementis based on and other : function(significantcelebrationtransmitted/js/jquery.is known astheoretical tabindex="it could be<noscript>
having been
<head>
< &quot;The compilationhe had beenproduced byphilosopherconstructedintended toamong othercompared toto say thatEngineeringa differentreferred todifferencesbelief thatphotographsidentifyingHistory of Republic ofnecessarilyprobabilitytechnicallyleaving thespectacularfraction ofelectricityhead of therestaurantspartnershipemphasis onmost recentshare with saying thatfilled withdesigned toit is often"></iframe>as follows:merged withthrough thecommercial pointed outopportunityview of therequirementdivision ofprogramminghe receivedsetInterval"></span></in New Yorkadditional compression
<div id="incorporate;</script><attachEventbecame the " target="_carried outSome of thescience andthe time ofContainer">maintainingChristopherMuch of thewritings of" height="2size of theversion of mixture of between theExamples ofeducationalcompetitive onsubmit="director ofdistinctive/DTD XHTML relating totendency toprovince ofwhich woulddespite thescientific legislature.innerHTML allegationsAgriculturewas used inapproach tointelligentyears later,sans-serifdeterminingPerformanceappearances, which is foundationsabbreviatedhigher thans from the individual composed ofsupposed toclaims thatattributionfont-size:1elements ofHistorical his brotherat the timeanniversarygoverned byrelated to ultimately innovationsit is stillcan only bedefinitionstoGMTStringA number ofimg class="Eventually,was changedoccurred inneighboringdistinguishwhen he wasintroducingterrestrialMany of theargues thatan Americanconquest ofwidespread were killedscreen and In order toexpected todescendantsare locatedlegislativegenerations backgroundmost peopleyears afterthere is nothe highestfrequently they do notargued thatshowed thatpredominanttheologicalby the timeconsideringshort-lived</span></a>can be usedvery littleone of the had alreadyinterpretedcommunicatefeatures ofgovernment,</noscript>entered the" height="3Independentpopulationslarge-scale. Although used in thedestructionpossibilitystarting intwo or moreexpressionssubordinatelarger thanhistory and</option>
Continentaleliminatingwill not bepractice ofin front ofsite of theensure thatto create amississippipotentiallyoutstandingbetter thanwhat is nowsituated inmeta name="TraditionalsuggestionsTranslationthe form ofatmosphericideologicalenterprisescalculatingeast of theremnants ofpluginspage/index.php?remained intransformedHe was alsowas alreadystatisticalin favor ofMinistry ofmovement offormulationis required<link rel="This is the <a href="/popularizedinvolved inare used toand severalmade by theseems to belikely thatPalestiniannamed afterit had beenmost commonto refer tobut this isconsecutivetemporarilyIn general,conventionstakes placesubdivisionterritorialoperationalpermanentlywas largelyoutbreak ofin the pastfollowing a xmlns:og="><a class="class="textConversion may be usedmanufactureafter beingclearfix">
question ofwas electedto become abecause of some peopleinspired bysuccessful a time whenmore commonamongst thean officialwidth:100%;technology,was adoptedto keep thesettlementslive birthsindex.html"Connecticutassigned to&amp;times;account foralign=rightthe companyalways beenreturned toinvolvementBecause thethis period" name="q" confined toa result ofvalue="" />is actuallyEnvironment
</head>
Conversely,>
<div id="0" width="1is probablyhave becomecontrollingthe problemcitizens ofpoliticiansreached theas early as:none; over<table cellvalidity ofdirectly toonmousedownwhere it iswhen it wasmembers of relation toaccommodatealong with In the latethe Englishdelicious">this is notthe presentif they areand finallya matter of
</div>
</script>faster thanmajority ofafter whichcomparativeto maintainimprove theawarded theer" class="frameborderrestorationin the sameanalysis oftheir firstDuring the continentalsequence offunction(){font-size: work on the</script>
<begins withjavascript:constituentwas foundedequilibriumassume thatis given byneeds to becoordinatesthe variousare part ofonly in thesections ofis a commontheories ofdiscoveriesassociationedge of thestrength ofposition inpresent-dayuniversallyto form thebut insteadcorporationattached tois commonlyreasons for &quot;the can be madewas able towhich meansbut did notonMouseOveras possibleoperated bycoming fromthe primaryaddition offor severaltransferreda period ofare able tohowever, itshould havemuch larger
</script>adopted theproperty ofdirected byeffectivelywas broughtchildren ofProgramminglonger thanmanuscriptswar againstby means ofand most ofsimilar to proprietaryoriginatingprestigiousgrammaticalexperience.to make theIt was alsois found incompetitorsin the U.S.replace thebrought thecalculationfall of thethe generalpracticallyin honor ofreleased inresidentialand some ofking of thereaction to1st Earl ofculture andprincipally</title>
  they can beback to thesome of hisexposure toare similarform of theaddFavoritecitizenshippart in thepeople within practiceto continue&amp;minus;approved by the first allowed theand for thefunctioningplaying thesolution toheight="0" in his bookmore than afollows thecreated thepresence in&nbsp;</td>nationalistthe idea ofa characterwere forced class="btndays of thefeatured inshowing theinterest inin place ofturn of thethe head ofLord of thepoliticallyhas its ownEducationalapproval ofsome of theeach other,behavior ofand becauseand anotherappeared onrecorded inblack&quot;may includethe world'scan lead torefers to aborder="0" government winning theresulted in while the Washington,the subjectcity in the></div>
reflect theto completebecame moreradioactiverejected bywithout anyhis father,which couldcopy of theto indicatea politicalaccounts ofconstitutesworked wither</a></li>of his lifeaccompaniedclientWidthprevent theLegislativedifferentlytogether inhas severalfor anothertext of thefounded thee with the is used forchanged theusually theplace wherewhereas the> <a href=""><a href="themselves,although hethat can betraditionalrole of theas a resultremoveChilddesigned bywest of theSome peopleproduction,side of thenewslettersused by thedown to theaccepted bylive in theattempts tooutside thefrequenciesHowever, inprogrammersat least inapproximatealthough itwas part ofand variousGovernor ofthe articleturned into><a href="/the economyis the mostmost widelywould laterand perhapsrise to theoccurs whenunder whichconditions.the westerntheory thatis producedthe city ofin which heseen in thethe centralbuilding ofmany of hisarea of theis the onlymost of themany of thethe WesternThere is noextended toStatisticalcolspan=2 |short storypossible totopologicalcritical ofreported toa Christiandecision tois equal toproblems ofThis can bemerchandisefor most ofno evidenceeditions ofelements in&quot;. Thecom/images/which makesthe processremains theliterature,is a memberthe popularthe ancientproblems intime of thedefeated bybody of thea few yearsmuch of thethe work ofCalifornia,served as agovernment.concepts ofmovement in
<div id="it" value="language ofas they areproduced inis that theexplain thediv></div>
However thelead to the
<a href="/was grantedpeople havecontinuallywas seen asand relatedthe role ofproposed byof the besteach other.Constantinepeople fromdialects ofto revisionwas renameda source ofthe initiallaunched inprovide theto the westwhere thereand similarbetween twois also theEnglish andconditions,that it wasentitled tothemselves.quantity ofransparencythe same asto join thecountry andthis is theThis led toa statementcontrast tolastIndexOfthrough hisis designedthe term isis providedprotect theng</a></li>The currentthe site ofsubstantialexperience,in the Westthey shouldsloven
inacomentariosuniversidadcondicionesactividadesexperienciatecnolog
aproducci
npuntuaci
naplicaci
ncontrase
acategor
asregistrarseprofesionaltratamientoreg
stratesecretar
aprincipalesprotecci
nimportantesimportanciaposibilidadinteresantecrecimientonecesidadessuscribirseasociaci
ndisponiblesevaluaci
nestudiantesresponsableresoluci
nguadalajararegistradosoportunidadcomercialesfotograf
aautoridadesingenier
atelevisi
ncompetenciaoperacionesestablecidosimplementeactualmentenavegaci
nconformidadline-height:font-family:" : "http://applicationslink" href="specifically//<![CDATA[
Organizationdistribution0px; height:relationshipdevice-width<div class="<label for="registration</noscript>
/index.html"window.open( !important;application/independence//www.googleorganizationautocompleterequirementsconservative<form name="intellectualmargin-left:18th centuryan importantinstitutionsabbreviation<img class="organisationcivilization19th centuryarchitectureincorporated20th century-container">most notably/></a></div>notification'undefined')Furthermore,believe thatinnerHTML = prior to thedramaticallyreferring tonegotiationsheadquartersSouth AfricaunsuccessfulPennsylvaniaAs a result,<html lang="&lt;/sup&gt;dealing withphiladelphiahistorically);</script>
padding-top:experimentalgetAttributeinstructionstechnologiespart of the =function(){subscriptionl.dtd">
<htgeographicalConstitution', function(supported byagriculturalconstructionpublicationsfont-size: 1a variety of<div style="Encyclopediaiframe src="demonstratedaccomplisheduniversitiesDemographics);</script><dedicated toknowledge ofsatisfactionparticularly</div></div>English (US)appendChild(transmissions. However, intelligence" tabindex="float:right;Commonwealthranging fromin which theat least onereproductionencyclopedia;font-size:1jurisdictionat that time"><a class="In addition,description+conversationcontact withis generallyr" content="representing&lt;math&gt;presentationoccasionally<img width="navigation">compensationchampionshipmedia="all" violation ofreference toreturn true;Strict//EN" transactionsinterventionverificationInformation difficultiesChampionshipcapabilities<![endif]-->}
</script>
Christianityfor example,Professionalrestrictionssuggest thatwas released(such as theremoveClass(unemploymentthe Americanstructure of/index.html published inspan class=""><a href="/introductionbelonging toclaimed thatconsequences<meta name="Guide to theoverwhelmingagainst the concentrated,
.nontouch observations</a>
</div>
f (document.border: 1px {font-size:1treatment of0" height="1modificationIndependencedivided intogreater thanachievementsestablishingJavaScript" neverthelesssignificanceBroadcasting>&nbsp;</td>container">
such as the influence ofa particularsrc='http://navigation" half of the substantial &nbsp;</div>advantage ofdiscovery offundamental metropolitanthe opposite" xml:lang="deliberatelyalign=centerevolution ofpreservationimprovementsbeginning inJesus ChristPublicationsdisagreementtext-align:r, function()similaritiesbody></html>is currentlyalphabeticalis sometimestype="image/many of the flow:hidden;available indescribe theexistence ofall over thethe Internet
<ul class="installationneighborhoodarmed forcesreducing thecontinues toNonetheless,temperatures
<a href="close to theexamples of is about the(see below)." id="searchprofessionalis availablethe official
</script>
<div id="accelerationthrough the Hall of Famedescriptionstranslationsinterference type='text/recent yearsin the worldvery popular{background:traditional some of the connected toexploitationemergence ofconstitutionA History ofsignificant manufacturedexpectations><noscript><can be foundbecause the has not beenneighbouringwithout the added to the
<li class="instrumentalSoviet Unionacknowledgedwhich can bename for theattention toattempts to developmentsIn fact, the<li class="aimplicationssuitable formuch of the colonizationpresidentialcancelBubble Informationmost of the is describedrest of the more or lessin SeptemberIntelligencesrc="http://px; height: available tomanufacturerhuman rightslink href="/availabilityproportionaloutside the astronomicalhuman beingsname of the are found inare based onsmaller thana person whoexpansion ofarguing thatnow known asIn the earlyintermediatederived fromScandinavian</a></div>
consider thean estimatedthe National<div id="pagresulting incommissionedanalogous toare required/ul>
</div>
was based onand became a&nbsp;&nbsp;t" value="" was capturedno more thanrespectivelycontinue to >
<head>
<were createdmore generalinformation used for theindependent the Imperialcomponent ofto the northinclude the Constructionside of the would not befor instanceinvention ofmore complexcollectivelybackground: text-align: its originalinto accountthis processan extensivehowever, thethey are notrejected thecriticism ofduring whichprobably thethis article(function(){It should bean agreementaccidentallydiffers fromArchitecturebetter knownarrangementsinfluence onattended theidentical tosouth of thepass throughxml" title="weight:bold;creating thedisplay:nonereplaced the<img src="/ihttps://www.World War IItestimonialsfound in therequired to and that thebetween the was designedconsists of considerablypublished bythe languageConservationconsisted ofrefer to theback to the css" media="People from available onproved to besuggestions"was known asvarieties oflikely to becomprised ofsupport the hands of thecoupled withconnect and border:none;performancesbefore beinglater becamecalculationsoften calledresidents ofmeaning that><li class="evidence forexplanationsenvironments"></a></div>which allowsIntroductiondeveloped bya wide rangeon behalf ofvalign="top"principle ofat the time,</noscript>
said to havein the firstwhile othershypotheticalphilosopherspower of thecontained inperformed byinability towere writtenspan style="input name="the questionintended forrejection ofimplies thatinvented thethe standardwas probablylink betweenprofessor ofinteractionschanging theIndian Ocean class="lastworking with'http://www.years beforeThis was therecreationalentering themeasurementsan extremelyvalue of thestart of the
</script>
an effort toincrease theto the southspacing="0">sufficientlythe Europeanconverted toclearTimeoutdid not haveconsequentlyfor the nextextension ofeconomic andalthough theare producedand with theinsufficientgiven by thestating thatexpenditures</span></a>
thought thaton the basiscellpadding=image of thereturning toinformation,separated byassassinateds" content="authority ofnorthwestern</div>
<div "></div>
  consultationcommunity ofthe nationalit should beparticipants align="leftthe greatestselection ofsupernaturaldependent onis mentionedallowing thewas inventedaccompanyinghis personalavailable atstudy of theon the otherexecution ofHuman Rightsterms of theassociationsresearch andsucceeded bydefeated theand from thebut they arecommander ofstate of theyears of agethe study of<ul class="splace in thewhere he was<li class="fthere are nowhich becamehe publishedexpressed into which thecommissionerfont-weight:territory ofextensions">Roman Empireequal to theIn contrast,however, andis typicallyand his wife(also called><ul class="effectively evolved intoseem to havewhich is thethere was noan excellentall of thesedescribed byIn practice,broadcastingcharged withreflected insubjected tomilitary andto the pointeconomicallysetTargetingare actuallyvictory over();</script>continuouslyrequired forevolutionaryan effectivenorth of the, which was front of theor otherwisesome form ofhad not beengenerated byinformation.permitted toincludes thedevelopment,entered intothe previousconsistentlyare known asthe field ofthis type ofgiven to thethe title ofcontains theinstances ofin the northdue to theirare designedcorporationswas that theone of thesemore popularsucceeded insupport fromin differentdominated bydesigned forownership ofand possiblystandardizedresponseTextwas intendedreceived theassumed thatareas of theprimarily inthe basis ofin the senseaccounts fordestroyed byat least twowas declaredcould not beSecretary ofappear to bemargin-top:1/^\s+|\s+$/ge){throw e};the start oftwo separatelanguage andwho had beenoperation ofdeath of thereal numbers
<link rel="provided thethe story ofcompetitionsenglish (UK)english (US)
informaci
nherramientaselectr
nicodescripci
nclasificadosconocimientopublicaci
nrelacionadasinform
ticarelacionadosdepartamentotrabajadoresdirectamenteayuntamientomercadoLibrecont
ctenoshabitacionescumplimientorestaurantesdisposici
nconsecuenciaelectr
nicaaplicacionesdesconectadoinstalaci
nrealizaci
nutilizaci
nenciclopediaenfermedadesinstrumentosexperienciasinstituci
nparticularessubcategoria
entertainmentunderstanding = function().jpg" width="configuration.png" width="<body class="Math.random()contemporary United Statescircumstances.appendChild(organizations<span class=""><img src="/distinguishedthousands of communicationclear"></div>investigationfavicon.ico" margin-right:based on the Massachusettstable border=internationalalso known aspronunciationbackground:#fpadding-left:For example, miscellaneous&lt;/math&gt;psychologicalin particularearch" type="form method="as opposed toSupreme Courtoccasionally Additionally,North Americapx;backgroundopportunitiesEntertainment.toLowerCase(manufacturingprofessional combined withFor instance,consisting of" maxlength="return false;consciousnessMediterraneanextraordinaryassassinationsubsequently button type="the number ofthe original comprehensiverefers to the</ul>
</div>
philosophicallocation.hrefwas publishedSan Francisco(function(){
<div id="mainsophisticatedmathematical /head>
<bodysuggests thatdocumentationconcentrationrelationshipsmay have been(for example,This article in some casesparts of the definition ofGreat Britain cellpadding=equivalent toplaceholder="; font-size: justificationbelieved thatsuffered fromattempted to leader of thecript" src="/(function() {are available
<link rel=" src='http://interested inconventional " alt="" /></are generallyhas also beenmost popular correspondingcredited withtyle="border:</a></span></.gif" width="<iframe src="table class="inline-block;according to together withapproximatelyparliamentarymore and moredisplay:none;traditionallypredominantly&nbsp;|&nbsp;&nbsp;</span> cellspacing=<input name="or" content="controversialproperty="og:/x-shockwave-demonstrationsurrounded byNevertheless,was the firstconsiderable Although the collaborationshould not beproportion of<span style="known as the shortly afterfor instance,described as /head>
<body starting withincreasingly the fact thatdiscussion ofmiddle of thean individualdifficult to point of viewhomosexualityacceptance of</span></div>manufacturersorigin of thecommonly usedimportance ofdenominationsbackground: #length of thedeterminationa significant" border="0">revolutionaryprinciples ofis consideredwas developedIndo-Europeanvulnerable toproponents ofare sometimescloser to theNew York City name="searchattributed tocourse of themathematicianby the end ofat the end of" border="0" technological.removeClass(branch of theevidence that![endif]-->
Institute of into a singlerespectively.and thereforeproperties ofis located insome of whichThere is alsocontinued to appearance of &amp;ndash; describes theconsiderationauthor of theindependentlyequipped withdoes not have</a><a href="confused with<link href="/at the age ofappear in theThese includeregardless ofcould be used style=&quot;several timesrepresent thebody>
</html>thought to bepopulation ofpossibilitiespercentage ofaccess to thean attempt toproduction ofjquery/jquerytwo differentbelong to theestablishmentreplacing thedescription" determine theavailable forAccording to wide range of
<div class="more commonlyorganisationsfunctionalitywas completed &amp;mdash; participationthe characteran additionalappears to befact that thean example ofsignificantlyonmouseover="because they async = true;problems withseems to havethe result of src="http://familiar withpossession offunction () {took place inand sometimessubstantially<span></span>is often usedin an attemptgreat deal ofEnvironmentalsuccessfully virtually all20th century,professionalsnecessary to determined bycompatibilitybecause it isDictionary ofmodificationsThe followingmay refer to:Consequently,Internationalalthough somethat would beworld's firstclassified asbottom of the(particularlyalign="left" most commonlybasis for thefoundation ofcontributionspopularity ofcenter of theto reduce thejurisdictionsapproximation onmouseout="New Testamentcollection of</span></a></in the Unitedfilm director-strict.dtd">has been usedreturn to thealthough thischange in theseveral otherbut there areunprecedentedis similar toespecially inweight: bold;is called thecomputationalindicate thatrestricted to
<meta name="are typicallyconflict withHowever, the An example ofcompared withquantities ofrather than aconstellationnecessary forreported thatspecificationpolitical and&nbsp;&nbsp;<references tothe same yearGovernment ofgeneration ofhave not beenseveral yearscommitment to
<ul class="visualization19th century,practitionersthat he wouldand continuedoccupation ofis defined ascentre of thethe amount of><div style="equivalent ofdifferentiatebrought aboutmargin-left: automaticallythought of asSome of these
<div class="input class="replaced withis one of theeducation andinfluenced byreputation as
<meta name="accommodation</div>
</div>large part ofInstitute forthe so-called against the In this case,was appointedclaimed to beHowever, thisDepartment ofthe remainingeffect on theparticularly deal with the
<div style="almost alwaysare currentlyexpression ofphilosophy offor more thancivilizationson the islandselectedIndexcan result in" value="" />the structure /></a></div>Many of thesecaused by theof the Unitedspan class="mcan be tracedis related tobecame one ofis frequentlyliving in thetheoreticallyFollowing theRevolutionarygovernment inis determinedthe politicalintroduced insufficient todescription">short storiesseparation ofas to whetherknown for itswas initiallydisplay:blockis an examplethe principalconsists of arecognized as/body></html>a substantialreconstructedhead of stateresistance toundergraduateThere are twogravitationalare describedintentionallyserved as theclass="headeropposition tofundamentallydominated theand the otheralliance withwas forced torespectively,and politicalin support ofpeople in the20th century.and publishedloadChartbeatto understandmember statesenvironmentalfirst half ofcountries andarchitecturalbe consideredcharacterizedclearIntervalauthoritativeFederation ofwas succeededand there area consequencethe Presidentalso includedfree softwaresuccession ofdeveloped thewas destroyedaway from the;
</script>
<although theyfollowed by amore powerfulresulted in aUniversity ofHowever, manythe presidentHowever, someis thought tountil the endwas announcedare importantalso includes><input type=the center of DO NOT ALTERused to referthemes/?sort=that had beenthe basis forhas developedin the summercomparativelydescribed thesuch as thosethe resultingis impossiblevarious otherSouth Africanhave the sameeffectivenessin which case; text-align:structure and; background:regarding thesupported theis also knownstyle="marginincluding thebahasa Melayunorsk bokm
lnorsk nynorsksloven
inainternacionalcalificaci
ncomunicaci
nconstrucci
n"><div class="disambiguationDomainName', 'administrationsimultaneouslytransportationInternational margin-bottom:responsibility<![endif]-->
</><meta name="implementationinfrastructurerepresentationborder-bottom:</head>
<body>=http%3A%2F%2F<form method="method="post" /favicon.ico" });
</script>
.setAttribute(Administration= new Array();<![endif]-->
display:block;Unfortunately,">&nbsp;</div>/favicon.ico">='stylesheet' identification, for example,<li><a href="/an alternativeas a result ofpt"></script>
type="submit" 
(function() {recommendationform action="/transformationreconstruction.style.display According to hidden" name="along with thedocument.body.approximately Communicationspost" action="meaning &quot;--<![endif]-->Prime Ministercharacteristic</a> <a class=the history of onmouseover="the governmenthref="https://was originallywas introducedclassificationrepresentativeare considered<![endif]-->
depends on theUniversity of in contrast to placeholder="in the case ofinternational constitutionalstyle="border-: function() {Because of the-strict.dtd">
<table class="accompanied byaccount of the<script src="/nature of the the people in in addition tos); js.id = id" width="100%"regarding the Roman Catholican independentfollowing the .gif" width="1the following discriminationarchaeologicalprime minister.js"></script>combination of marginwidth="createElement(w.attachEvent(</a></td></tr>src="https://aIn particular, align="left" Czech RepublicUnited Kingdomcorrespondenceconcluded that.html" title="(function () {comes from theapplication of<span class="sbelieved to beement('script'</a>
</li>
<livery different><span class="option value="(also known as
<li><a href="><input name="separated fromreferred to as valign="top">founder of theattempting to carbon dioxide
<div class="class="search-/body>
</html>opportunity tocommunications</head>
<body style="width:Ti
ng Vi
tchanges in theborder-color:#0" border="0" </span></div><was discovered" type="text" );
</script>
Department of ecclesiasticalthere has beenresulting from</body></html>has never beenthe first timein response toautomatically </div>
<div iwas consideredpercent of the" /></a></div>collection of descended fromsection of theaccept-charsetto be confusedmember of the padding-right:translation ofinterpretation href='http://whether or notThere are alsothere are manya small numberother parts ofimpossible to  class="buttonlocated in the. However, theand eventuallyAt the end of because of itsrepresents the<form action=" method="post"it is possiblemore likely toan increase inhave also beencorresponds toannounced thatalign="right">many countriesfor many yearsearliest knownbecause it waspt"></script>
 valign="top" inhabitants offollowing year
<div class="million peoplecontroversial concerning theargue that thegovernment anda reference totransferred todescribing the style="color:although therebest known forsubmit" name="multiplicationmore than one recognition ofCouncil of theedition of the  <meta name="Entertainment away from the ;margin-right:at the time ofinvestigationsconnected withand many otheralthough it isbeginning with <span class="descendants of<span class="i align="right"</head>
<body aspects of thehas since beenEuropean Unionreminiscent ofmore difficultVice Presidentcomposition ofpassed throughmore importantfont-size:11pxexplanation ofthe concept ofwritten in the
<span class="is one of the resemblance toon the groundswhich containsincluding the defined by thepublication ofmeans that theoutside of thesupport of the<input class="<span class="t(Math.random()most prominentdescription ofConstantinoplewere published<div class="seappears in the1" height="1" most importantwhich includeswhich had beendestruction ofthe population
<div class="possibility ofsometimes usedappear to havesuccess of theintended to bepresent in thestyle="clear:b
</script>
<was founded ininterview with_id" content="capital of the
<link rel="srelease of thepoint out thatxMLHttpRequestand subsequentsecond largestvery importantspecificationssurface of theapplied to theforeign policy_setDomainNameestablished inis believed toIn addition tomeaning of theis named afterto protect theis representedDeclaration ofmore efficientClassificationother forms ofhe returned to<span class="cperformance of(function() {
if and only ifregions of theleading to therelations withUnited Nationsstyle="height:other than theype" content="Association of
</head>
<bodylocated on theis referred to(including theconcentrationsthe individualamong the mostthan any other/>
<link rel=" return false;the purpose ofthe ability to;color:#fff}
<span class="the subject ofdefinitions of>
<link rel="claim that thehave developed<table width="celebration ofFollowing the to distinguish<span class="btakes place inunder the namenoted that the><![endif]-->
style="margin-instead of theintroduced thethe process ofincreasing thedifferences inestimated thatespecially the/div><div id="was eventuallythroughout histhe differencesomething thatspan></span></significantly ></script>
environmental to prevent thehave been usedespecially forunderstand theis essentiallywere the firstis the largesthave been made" src="http://interpreted assecond half ofcrolling="no" is composed ofII, Holy Romanis expected tohave their owndefined as thetraditionally have differentare often usedto ensure thatagreement withcontaining theare frequentlyinformation onexample is theresulting in a</a></li></ul> class="footerand especiallytype="button" </span></span>which included>
<meta name="considered thecarried out byHowever, it isbecame part ofin relation topopular in thethe capital ofwas officiallywhich has beenthe History ofalternative todifferent fromto support thesuggested thatin the process  <div class="the foundationbecause of hisconcerned withthe universityopposed to thethe context of<span class="ptext" name="q"
<div class="the scientificrepresented bymathematicianselected by thethat have been><div class="cdiv id="headerin particular,converted into);
</script>
<philosophical srpskohrvatskiti
ng Vi
investigaci
nparticipaci
cursor:pointer;</title>
<meta " href="http://"><span class="members of the window.locationvertical-align:/a> | <a href="<!doctype html>media="screen" <option value="favicon.ico" />
<div class="characteristics" method="get" /body>
</html>
shortcut icon" document.write(padding-bottom:representativessubmit" value="align="center" throughout the science fiction
  <div class="submit" class="one of the most valign="top"><was established);
</script>
return false;">).style.displaybecause of the document.cookie<form action="/}body{margin:0;Encyclopedia ofversion of the .createElement(name" content="</div>
</div>
administrative </body>
</html>history of the "><input type="portion of the as part of the &nbsp;<a href="other countries">
<div class="</span></span><In other words,display: block;control of the introduction of/>
<meta name="as well as the in recent years
<div class="</div>
</div>
inspired by thethe end of the compatible withbecame known as style="margin:.js"></script>< International there have beenGerman language style="color:#Communist Partyconsistent withborder="0" cell marginheight="the majority of" align="centerrelated to the many different Orthodox Churchsimilar to the />
<link rel="swas one of the until his death})();
</script>other languagescompared to theportions of thethe Netherlandsthe most commonbackground:url(argued that thescrolling="no" included in theNorth American the name of theinterpretationsthe traditionaldevelopment of frequently useda collection ofvery similar tosurrounding theexample of thisalign="center">would have beenimage_caption =attached to thesuggesting thatin the form of involved in theis derived fromnamed after theIntroduction torestrictions on style="width: can be used to the creation ofmost important information andresulted in thecollapse of theThis means thatelements of thewas replaced byanalysis of theinspiration forregarded as themost successfulknown as &quot;a comprehensiveHistory of the were consideredreturned to theare referred toUnsourced image>
<div class="consists of thestopPropagationinterest in theavailability ofappears to haveelectromagneticenableServices(function of theIt is important</script></div>function(){var relative to theas a result of the position ofFor example, in method="post" was followed by&amp;mdash; thethe applicationjs"></script>
ul></div></div>after the deathwith respect tostyle="padding:is particularlydisplay:inline; type="submit" is divided into
)responsabilidadadministraci
ninternacionalescorrespondiente
rss+xml" title="-type" content="title" content="at the same time.js"></script>
<" method="post" </span></a></li>vertical-align:t/jquery.min.js">.click(function( style="padding-})();
</script>
</span><a href="<a href="http://); return false;text-decoration: scrolling="no" border-collapse:associated with Bahasa IndonesiaEnglish language<text xml:space=.gif" border="0"</body>
</html>
overflow:hidden;img src="http://addEventListenerresponsible for s.js"></script>
/favicon.ico" />operating system" style="width:1target="_blank">State Universitytext-align:left;
document.write(, including the around the world);
</script>
<" style="height:;overflow:hiddenmore informationan internationala member of the one of the firstcan be found in </div>
</div>
display: none;">" />
<link rel="
  (function() {the 15th century.preventDefault(large number of Byzantine Empire.jpg|thumb|left|vast majority ofmajority of the  align="center">University Pressdominated by theSecond World Wardistribution of style="position:the rest of the characterized by rel="nofollow">derives from therather than the a combination ofstyle="width:100English-speakingcomputer scienceborder="0" alt="the existence ofDemocratic Party" style="margin-For this reason,.js"></script>
sByTagName(s)[0]js"></script>
<.js"></script>
link rel="icon" ' alt='' class='formation of theversions of the </a></div></div>/page>
  <page>
<div class="contbecame the firstbahasa Indonesiaenglish (simple)
robots" content="<div id="footer">the United States<img src="http://.jpg|right|thumb|.js"></script>
<location.protocolframeborder="0" s" />
<meta name="</a></div></div><font-weight:bold;&quot; and &quot;depending on the margin:0;padding:" rel="nofollow" President of the twentieth centuryevision>
  </pageInternet Explorera.async = true;
information about<div id="header">" action="http://<a href="https://<div id="content"</div>
</div>
<derived from the <img src='http://according to the 
</body>
</html>
style="font-size:script language="Arial, Helvetica,</a><span class="</script><script political partiestd></tr></table><href="http://www.interpretation ofrel="stylesheet" document.write('<charset="utf-8">
beginning of the revealed that thetelevision series" rel="nofollow"> target="_blank">claiming that thehttp%3A%2F%2Fwww.manifestations ofPrime Minister ofinfluenced by theclass="clearfix">/div>
</div>
three-dimensionalChurch of Englandof North Carolinasquare kilometres.addEventListenerdistinct from thecommonly known asPhonetic Alphabetdeclared that thecontrolled by theBenjamin Franklinrole-playing gamethe University ofin Western Europepersonal computerProject Gutenbergregardless of thehas been proposedtogether with the></li><li class="in some countriesmin.js"></script>of the populationofficial language<img src="images/identified by thenatural resourcesclassification ofcan be consideredquantum mechanicsNevertheless, themillion years ago</body>
</html>
take advantage ofand, according toattributed to theMicrosoft Windowsthe first centuryunder the controldiv class="headershortly after thenotable exceptiontens of thousandsseveral differentaround the world.reaching militaryisolated from theopposition to thethe Old TestamentAfrican Americansinserted into theseparate from themetropolitan areamakes it possibleacknowledged thatarguably the mosttype="text/css">
the InternationalAccording to the pe="text/css" />
coincide with thetwo-thirds of theDuring this time,during the periodannounced that hethe internationaland more recentlybelieved that theconsciousness andformerly known assurrounded by thefirst appeared inoccasionally usedposition:absolute;" target="_blank" position:relative;text-align:center;jax/libs/jquery/1.background-color:#type="application/anguage" content="<meta http-equiv="Privacy Policy</a>e("%3Cscript src='" target="_blank">On the other hand,.jpg|thumb|right|2</div><div class="<div style="float:nineteenth century</body>
</html>
<img src="http://s;text-align:centerfont-weight: bold; According to the difference between" frameborder="0" " style="position:link href="http://html4/loose.dtd">
during this period</td></tr></table>closely related tofor the first time;font-weight:bold;input type="text" <span style="font-onreadystatechange
<div class="cleardocument.location. For example, the a wide variety of <!DOCTYPE html>
<&nbsp;&nbsp;&nbsp;"><a href="http://style="float:left;concerned with the=http%3A%2F%2Fwww.in popular culturetype="text/css" />it is possible to Harvard Universitytylesheet" href="/the main characterOxford University  name="keywords" cstyle="text-align:the United Kingdomfederal government<div style="margin depending on the description of the<div class="header.min.js"></script>destruction of theslightly differentin accordance withtelecommunicationsindicates that theshortly thereafterespecially in the European countriesHowever, there aresrc="http://staticsuggested that the" src="http://www.a large number of Telecommunications" rel="nofollow" tHoly Roman Emperoralmost exclusively" border="0" alt="Secretary of Stateculminating in theCIA World Factbookthe most importantanniversary of thestyle="background-<li><em><a href="/the Atlantic Oceanstrictly speaking,shortly before thedifferent types ofthe Ottoman Empire><img src="http://An Introduction toconsequence of thedeparture from theConfederate Statesindigenous peoplesProceedings of theinformation on thetheories have beeninvolvement in thedivided into threeadjacent countriesis responsible fordissolution of thecollaboration withwidely regarded ashis contemporariesfounding member ofDominican Republicgenerally acceptedthe possibility ofare also availableunder constructionrestoration of thethe general publicis almost entirelypasses through thehas been suggestedcomputer and videoGermanic languages according to the different from theshortly afterwardshref="https://www.recent developmentBoard of Directors<div class="search| <a href="http://In particular, theMultiple footnotesor other substancethousands of yearstranslation of the</div>
</div>
<a href="index.phpwas established inmin.js"></script>
participate in thea strong influencestyle="margin-top:represented by thegraduated from theTraditionally, theElement("script");However, since the/div>
</div>
<div left; margin-left:protection against0; vertical-align:Unfortunately, thetype="image/x-icon/div>
<div class=" class="clearfix"><div class="footer
</div>
</div>
the motion picture
keywords" content="w3.org/1999/xhtml"><a target="_blank" text/html; charset=" target="_blank"><table cellpadding="autocomplete="off" text-align: center;to last version by background-color: #" href="http://www./div></div><div id=<a href="#" class=""><img src="http://cript" src="http://
<script language="//EN" "http://www.wencodeURIComponent(" href="javascript:<div class="contentdocument.write('<scposition: absolute;script src="http:// style="margin-top:.min.js"></script>
</div>
<div class="w3.org/1999/xhtml" 
</body>
</html>distinction between/" target="_blank"><link href="http://encoding="utf-8"?>
w.addEventListener?action="http://www.icon" href="http:// style="background:type="text/css" />
meta property="og:t<input type="text"  style="text-align:the development of tylesheet" type="tehtml; charset=utf-8is considered to betable width="100%" In addition to the contributed to the differences betweendevelopment of the It is important to </script>
<script  style="font-size:1></span><span id=gbLibrary of Congress<img src="http://imEnglish translationAcademy of Sciencesdiv style="display:construction of the.getElementById(id)in conjunction withElement('script'); <meta property="og:
 type="text" name=">Privacy Policy</a>administered by theenableSingleRequeststyle=&quot;margin:</div></div></div><><img src="http://i style=&quot;float:referred to as the total population ofin Washington, D.C. style="background-among other things,organization of theparticipated in thethe introduction ofidentified with thefictional character Oxford University misunderstanding ofThere are, however,stylesheet" href="/Columbia Universityexpanded to includeusually referred toindicating that thehave suggested thataffiliated with thecorrelation betweennumber of different></td></tr></table>Republic of Ireland
</script>
<script under the influencecontribution to theOfficial website ofheadquarters of thecentered around theimplications of thehave been developedFederal Republic ofbecame increasinglycontinuation of theNote, however, thatsimilar to that of capabilities of theaccordance with theparticipants in thefurther developmentunder the directionis often consideredhis younger brother</td></tr></table><a http-equiv="X-UA-physical propertiesof British Columbiahas been criticized(with the exceptionquestions about thepassing through the0" cellpadding="0" thousands of peopleredirects here. Forhave children under%3E%3C/script%3E"));<a href="http://www.<li><a href="http://site_name" content="text-decoration:nonestyle="display: none<meta http-equiv="X-new Date().getTime() type="image/x-icon"</span><span class="language="javascriptwindow.location.href<a href="javascript:-->
<script type="t<a href='http://www.hortcut icon" href="</div>
<div class="<script src="http://" rel="stylesheet" t</div>
<script type=/a> <a href="http:// allowTransparency="X-UA-Compatible" conrelationship between
</script>
<script </a></li></ul></div>associated with the programming language</a><a href="http://</a></li><li class="form action="http://<div style="display:type="text" name="q"<table width="100%" background-position:" border="0" width="rel="shortcut icon" h6><ul><li><a href="  <meta http-equiv="css" media="screen" responsible for the " type="application/" style="background-html; charset=utf-8" allowtransparency="stylesheet" type="te
<meta http-equiv="></span><span class="0" cellspacing="0">;
</script>
<script sometimes called thedoes not necessarilyFor more informationat the beginning of <!DOCTYPE html><htmlparticularly in the type="hidden" name="javascript:void(0);"effectiveness of the autocomplete="off" generally considered><input type="text" "></script>
<scriptthroughout the worldcommon misconceptionassociation with the</div>
</div>
<div cduring his lifetime,corresponding to thetype="image/x-icon" an increasing numberdiplomatic relationsare often consideredmeta charset="utf-8" <input type="text" examples include the"><img src="http://iparticipation in thethe establishment of
</div>
<div class="&amp;nbsp;&amp;nbsp;to determine whetherquite different frommarked the beginningdistance between thecontributions to theconflict between thewidely considered towas one of the firstwith varying degreeshave speculated that(document.getElementparticipating in theoriginally developedeta charset="utf-8"> type="text/css" />
interchangeably withmore closely relatedsocial and politicalthat would otherwiseperpendicular to thestyle type="text/csstype="submit" name="families residing indeveloping countriescomputer programmingeconomic developmentdetermination of thefor more informationon several occasionsportugu
s (Europeu)
html; charset=UTF-8" setTimeout(function()display:inline-block;<input type="submit" type = 'text/javascri<img src="http://www." "http://www.w3.org/shortcut icon" href="" autocomplete="off" </a></div><div class=</a></li>
<li class="css" type="text/css" <form action="http://xt/css" href="http://link rel="alternate" 
<script type="text/ onclick="javascript:(new Date).getTime()}height="1" width="1" People's Republic of  <a href="http://www.text-decoration:underthe beginning of the </div>
</div>
</div>
establishment of the </div></div></div></d#viewport{min-height:
<script src="http://option><option value=often referred to as /option>
<option valu<!DOCTYPE html>
<!--[International Airport>
<a href="http://www</a><a href="http://w
description" content="document.location.prot.getElementsByTagName(<!DOCTYPE html>
<html <meta charset="utf-8">:url" content="http://.css" rel="stylesheet"style type="text/css">type="text/css" href="w3.org/1999/xhtml" xmltype="text/javascript" method="get" action="link rel="stylesheet"  = document.getElementtype="image/x-icon" />cellpadding="0" cellsp.css" type="text/css" </a></li><li><a href="" width="1" height="1""><a href="http://www.style="display:none;">alternate" type="appli-//W3C//DTD XHTML 1.0 ellspacing="0" cellpad type="hidden" value="/a>&nbsp;<span role="s
<input type="hidden" language="JavaScript"  document.getElementsBg="0" cellspacing="0" ype="text/css" media="type='text/javascript'with the exception of ype="text/css" rel="st height="1" width="1" ='+encodeURIComponent(<link rel="alternate" 
body, tr, input, textmeta name="robots" conmethod="post" action=">
<a href="http://www.css" rel="stylesheet" </div></div><div classlanguage="javascript">aria-hidden="true">
<ript" type="text/javasl=0;})();
(function(){background-image: url(/a></li><li><a href="h
<li><a href="http://ator" aria-hidden="tru> <a href="http://www.language="javascript" /option>
<option value/div></div><div class=rator" aria-hidden="tre=(new Date).getTime()portugu
s (do Brasil)
<!DOCTYPE html PUBLIC "nt-Type" content="text/<meta http-equiv="Conteransitional//EN" "http:<html xmlns="http://www-//W3C//DTD XHTML 1.0 TDTD/xhtml1-transitional//www.w3.org/TR/xhtml1/pe = 'text/javascript';<meta name="descriptionparentNode.insertBefore<input type="hidden" najs" type="text/javascri(document).ready(functiscript type="text/javasimage" content="http://UA-Compatible" content=tml; charset=utf-8" />
link rel="shortcut icon<link rel="stylesheet" </script>
<script type== document.createElemen<a target="_blank" href= document.getElementsBinput type="text" name=a.type = 'text/javascrinput type="hidden" namehtml; charset=utf-8" />dtd">
<html xmlns="http-//W3C//DTD HTML 4.01 TentsByTagName('script')input type="hidden" nam<script type="text/javas" style="display:none;">document.getElementById(=document.createElement(' type='text/javascript'input type="text" name="d.getElementsByTagName(snical" href="http://www.C//DTD HTML 4.01 Transit<style type="text/css">
<style type="text/css">ional.dtd">
<html xmlns=http-equiv="Content-Typeding="0" cellspacing="0"html; charset=utf-8" />
 style="display:none;"><<li><a href="http://www. type='text/javascript'>
 of the 
 of 
 and 
 in 
 to 
 for 
 that 
 with 
 from 
 by 
. The 
 on 
 as 
 is 
ing 
 at 
.com/
. This 
 not 
ful 
ive 
less 
est 
ize 
ous 
 the 
111
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?

    !!!!""""####$$$$%%%%&&&&''''(((())))****++++,,,,----....////0000111122223333444455556666777788889999::::;;;;<<<<====>>>>????
 $,,,,,,,,,,  
04440444044444044444044444
8<<<8<<<8<<<<<8<<<<<8<<<<<
                                                                ((((((((((((((((((((((((((((((((((((((((((((((((0000000000000008
T@Tg]@
T@Tg]@
+@333333-@
T@Tg]@
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?

    !!!!""""####$$$$%%%%&&&&''''(((())))****++++,,,,----....////0000111122223333444455556666777788889999::::;;;;<<<<====>>>>????
 $,,,,,,,,,,  
04440444044444044444044444
8<<<8<<<8<<<<<8<<<<<8<<<<<
                                                                ((((((((((((((((((((((((((((((((((((((((((((((((0000000000000008
T@Tg]@
T@Tg]@
T@Tg]@
F\HE<
I$E!
j)D^
dq*)
HWed
Ef+(
fn4DO
Ku&%
KVg\
cdus
klgc
M/GJ
IHG;
)u$I
l4d(
)O%6
+Y'v
Gui-F
j]&q
QIFg1
J2'y
,3F T
(<g/
H|fN
R*\g
,AGV
i&A
(]E}
kFg
h@g
JQE'
)*&0
+@%*M&
g!*T
H<&Q
)jdW
,R&^
EX+{
)yE,
*8F&k~
*sdy
+1E/
Ezii$q
dEd)a
~DikP
$X-"
k(F>
z(l%X
V(u'>
laGC
+[FS
nkIe
M'Dz
EvH6
L2g3
(9EL
6*ZE
JCGX
5*'SI
*YG0
JM&4
H%'\
Jcdi
<Gp)
Hs'*
fHk%G
)1%
['X(
0'9
)NDu
)D'_
M(KD
hYD|
hX&M
L9D=
T@Tg]@

 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?

    !!!!""""####$$$$%%%%&&&&''''(((())))****++++,,,,----....////0000111122223333444455556666777788889999::::;;;;<<<<====>>>>????
 $,,,,,,,,,,  
04440444044444044444044444
8<<<8<<<8<<<<<8<<<<<8<<<<<
                                                                ((((((((((((((((((((((((((((((((((((((((((((((((0000000000000008
<>
NOP
[^`
ab
8 < 
@ A 
H I 
W [ 
] ^ a d 
e g k l m 
p s 
!!#!
+!-!.!
V!Z!\!
y!z!
{!~!
!"#"
&"'")"2"
5"8"
:";"<"
>"A"B"E"
T"V"
m"n"
o"p"
v"|"}"
%#(#
)#*#
,#1#@#
C#z#
$$'$
.$/$
1$2$
4$7$
<$=$?$
Q$U$
\$]$a$i$j$
n$o$
 %#%
,%-%
C%D%
H%I%
K%L%
[%b%
d%f%g%
i%x%
*&+&
0&1&8&
A&B&
i&l&
w&x&
'#'$'&'
7'8'9':'
='F'
I'J'
\']'
g'j'k'
n'q'
,(0(1(
;(?(
K(M(
N(O(
_(b(
c(m(
')()
9)<)
=)?)
B)C)D)
Y)Z)[)])
@*A*
E*F*G*
J*a*
i*j*k*l*
r*s*x*
0+4+
8+9+
W+X+
Y+Z+
^+d+
j+o+
 ,!,&,
-,.,
M,N,
T,U,
],j,
n,p,
r,w,
 -$-
+-,-
<-=-
>-@-
D-G-
N-Q-
S-T-
j-k-l-n-
.:.;.<.
F.K.
`.b.
d.e.
v.w.y.
!/#/$/
+/,/
1/6/7/
F/G/H/O/
R/T/
W/X/`/
d/f/
2040
6070
C0D0E0
O0R0S0
T0X0
n0s0
"1#1;1
S1f1
+2-2
224252
E2H2I2
T2U2X2
_2`2b2
m2n2
E3F3H3I3
647494
;4<4
=4>4
D4E4J4
K4L4
M4O4S4
Y4a4
v4~4
!5#5
$5%5&5'5
1525
95;5
e5g5
k5u5
|5~5
&6'6
-6.6
1666
@6A6B6
C6F6
I6K6L6P6
X6]6
*7/7
0787
=7>7
L7M7
c7e7
f7i7k7
w7x7
H8I8
)9*9
/929
5969
Z9[9
_9i9
k9q9w9
":.:
T:V:W:
d:e:g:
t:}:
!;";
2;:;
A;B;
J;K;
Q;S;
Z;[;\;
%<&<
-<2<
Q<Y<[<
d<e<
f<h<
}<~<
S=T=
V=W=
`=d=
f=h=
'>+>
4>?>
m>n>o>
w>{>~>
,@2@3@A@
B@C@
H@J@
a@d@
|@}@
HAIA
NATA
VAWA
^AbA
)B*B
,B-B
.B1B
2B5B6B
8B;B
WB]B
bBdBhB
jBlB
pBuBvB
%C'C
+C,C3C4C
5CAC
VCWC
YC\C
wCxC
.D0D6D
KDLD
SDTD
VDWD
hDiDjD
8E:E>E
MENE
OEPEQE
VEWEXEZEaEbE
rEsE
vEwE
8F:F
tFuFvF
'G(G
1G7G
AGBG
CGKG
]G^G_GaGiG
oGqG
.H/H0H
8H:H
ZH[H
]H^H
dHeH
gHiH
lHmHnHoH
yH|H
3I5I
7I8I:I<I
@IAI
BIKI
UIZI[I]I
`IcI
qItI
7J;J
@JCJ
WJXJ
aJjJ
kJoJpJ
sJwJxJ
K K!K'K
0K1K
8K:K;K
NKQKRK
UKWK
XK[K
fKgK
hKiK
.L0L
2L3L
QLRL
WLZL
[L_L
`LaL
hLiL
mLoL
qLrL
<M?M
DMNM
TMUM
nMvMwM
#N%N
+N,N
7N8N
LNMN
PNQN
VNYN
fNgN
iNjN
7O:O
?OBO
EOIO
LOOO
[O\O
(P/P
qPrP
uPvP
!Q)Q
2Q;QAQ
RQTQUQ
]Q^Q_Q
`QdQ
hQjQ
R"R#R$R
'R(R
6R7R
9R=R
ARHRIR
JRKR
ORPR
XRYR
^R_R
lRmRnR
qRtRuR
xRyR
4S6S
FSJSKS
OSPS
jSqS
wS|S~S
#T<T
qTrTsTtT
/U1U
2U3U
9U;U<U
BUHU
IUXUYU
kUnUoUqU
yU~U
 V!V
%V'V(V+V
,V-V
:V;V
=VDVSV
_VgV
hVjV
pVqV
BWHW
KWMW
WWXW
YW^W
bWeW
xW{W|W
'X(X
6X7X9X
`XaX
uXwX
|X}X
)Y*Y
/Y1Y
4Y6Y
HYIY
JYKY
SYTY
YYaYbYdYeY
fYgY
yY{Y
bZeZ
uZwZxZ
/[0[2[
<[>[
?[@[
R[S[
V[W[
\[^[
a[f[
,\.\
2\6\
>\@\
E\J\
X\s\
G]I]
J]K]W]
_]a]
c]n]o]p]
"^%^(^*^
.^/^
3^8^
I^N^
S^U^Z^
e^f^g^
i^j^o^
1_2_
4_5_6_
?_E_
J_K_P_
Q_R_
g_l_
x_z_~_
$`'`(`0`
>`?`
O`P`Q`
W`X`
\`]`
^`b`
p`q`
r`s`
?aAa
Uabaca
qava
 b!b
*b.b
EcGc
mcncoc
#d$d
=d?d
Ndbd
cdfdgd
sdtdud
/e0e1e
4e5e
=eGe
ReVe
ieje
lemene
qese
uewe
4f6f
:f;f
@fAf
8g:g@g
RgTg
UgVg
`gfg
xg}g~g
'h.h/h
=h>h?h
{h|h
}h~h
i!i"i#i$i'i
)i*i
1i2i
YiZi\i
jiki
{i~i
PjSjTjVjWj
YjZj
jjkj
vjwjzj
IkKk
UkZk
fknk
@lAlGlHl
_l`l
albl
cldlglhl
xlzl
+m2m
8m;m
<m=m
AmGm
HmIm
!n.n
/n1n
7n8n9n
?nAn
CnEnHn
XnZn
[n\n
^n_n
fngn
lnmn
nnpnrn
unvn
xnyn{n
FoHo
VoWo
`oaoboio
oopo
yozo
#p$p&p
'p8p
MpNpPpRpTp
WpXp
_p`p
apbp
/q0q
6q7q
8q=qDqEqFq
BrHr`r
frkrlr
prqrrrtr
xr{r
3s4s
>sAs
PsQsYs
[sbs
gshsks
vsys
zs|s
%t&t
6tAt
MtNtOt
u(u7u8u:u
>u@u
GuOu
sutu
 v#v%v
*v,v
?v@v
FvHv
WvXv
Zv[v^v`vbv
lvmv
pvrvvv
w!w"w
-w.w
2w4w
[w\w^w_w`w
cwjwkw
zw{w
x x!x
1x2x3x6x9x
;x<x=x
\xcx
gxhx
uxvx
,y/y0y1y
3y4y5y
<y=y>y
AyCyEy
MyNyOy
\y_y
`yay
eygy
5z7z8z
<z?z
IzLzMzSz
]z_z
vzwz
"{0{3{4{
:{A{G{
H{I{J{
L{O{
T{V{\{]{
^{`{a{b{k{
p{q{
s{t{
x{z{
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?
 !"#$%&'()*+,-./0123456789:;<=>?

    !!!!""""####$$$$%%%%&&&&''''(((())))****++++,,,,----....////0000111122223333444455556666777788889999::::;;;;<<<<====>>>>????
 $,,,,,,,,,,  
04440444044444044444044444
8<<<8<<<8<<<<<8<<<<<8<<<<<
                                                                ((((((((((((((((((((((((((((((((((((((((((((((((0000000000000008
ffffff
T@Tg]@
T@Tg]@
N6icu_6411SymbolTableE
N6icu_6410UnicodeSetE
N6icu_6421DictionaryBreakEngineE
N6icu_6415ThaiBreakEngineE
N6icu_6414LaoBreakEngineE
N6icu_6418BurmeseBreakEngineE
N6icu_6416KhmerBreakEngineE
N6icu_6414CjkBreakEngineE
N6icu_6424ForwardCharacterIteratorE
N6icu_6417CharacterIteratorE
ASCII
Assigned
N6icu_6417CanonicalIteratorE
SCSU
N6icu_6417DictionaryMatcherE
N6icu_6423UCharsDictionaryMatcherE
N6icu_6422BytesDictionaryMatcherE
N6icu_6417StringTrieBuilder4NodeE
N6icu_6417StringTrieBuilder14FinalValueNodeE
N6icu_6417StringTrieBuilder9ValueNodeE
N6icu_6417StringTrieBuilder21IntermediateValueNodeE
N6icu_6417StringTrieBuilder15LinearMatchNodeE
N6icu_6417StringTrieBuilder14ListBranchNodeE
N6icu_6417StringTrieBuilder10BranchNodeE
N6icu_6417StringTrieBuilder15SplitBranchNodeE
N6icu_6417StringTrieBuilder14BranchHeadNodeE
N6icu_6417StringTrieBuilderE
N6icu_646LocaleE
N6icu_6418KeywordEnumerationE
N6icu_6425UnicodeKeywordEnumerationE
unames
root-en-es-pt-zh-ja-ko-de-fr-it-ar+he+fa+ru-nl-pl-th-tr-
UTF-32BE
UTF-32LE
UTF-32
 !"#
N6icu_6413ResourceValueE
N6icu_6412ResourceSinkE
N6icu_647UVectorE
                          
                       
       
        
                
            
         
       
PF 
Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z z z z z z z 
 )!Y!
Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z Z 
"I"y"
#I#y#
*$i$
ZOzO
P:PZP
zPzP
R:RZR
S9SiS
S)TYT
UIUyU
\9\i\
\)]Y]
^I^y^
_9_i_
_)`Y`
aIaya
V9ViV
V)WYW
XIXyX
Y9YiY
Y)ZYZ
[I[y[
N6icu_6422RuleBasedBreakIteratorE
posix
attribute
lvariant
_POSIX
N6icu_6410UStringSetE
N6icu_6431SimpleFilteredSentenceBreakDataE
N6icu_6435SimpleFilteredSentenceBreakIteratorE
N6icu_6434SimpleFilteredBreakIteratorBuilderE
N6icu_6428FilteredBreakIteratorBuilderE
N6icu_6419LanguageBreakEngineE
N6icu_6420LanguageBreakFactoryE
N6icu_6415UnhandledEngineE
N6icu_6423ICULanguageBreakFactoryE
COMPOUND_TEXT
UTF-8
CESU-8
Scripts%stand-alone
Scripts
Countries
Variants
localeDisplayPattern
separator
pattern
Keys
currency
Currencies
Types
Languages
N6icu_6424WholeStringBreakIteratorE
N12_GLOBAL__N_113ParseDataSinkE
N6icu_646BMPSetE
N6icu_6418LocaleDisplayNamesE
N6icu_6422LocaleDisplayNamesImplE
N6icu_6422LocaleDisplayNamesImpl25CapitalizationContextSinkE
N6icu_6418CharStringByteSinkE
N6icu_6422RuleBasedBreakIterator10BreakCacheE
N6icu_6417UCharsTrieBuilderE
N6icu_6417UCharsTrieBuilder18UCTLinearMatchNodeE
N6icu_6412CacheKeyBaseE
N6icu_6412UnifiedCacheE
N6icu_6423StringCharacterIteratorE
N6icu_649UVector64E
ISO-8859-1
US-ASCII
N6icu_644IDNAE
N6icu_645UTS46E
N6icu_6418UnicodeSetIteratorE
vzvjw
c0sb
tartc`
ontinuea
igit
a.eLo
riationselectori
ticalorientation
h2oBs
pace_
itespace_
rdbreak
@iRnXp
per\
case\
mapping
deo[
iedideograph[
ode1name
p0t6u
ace_
rmgi<l
ftdottedW
mple
cPlht
ppercasemapping
asefolding
owercasemapping
itlecasemapping
c4dWenf
extensions
ence
erminalg
reak
itivee
tarts
entstarters
cferi
ailcanonic
alcombiningclass
inalpunctuationY
tlecasemapping
mpnvp
a(e2i
dicalU
gionalindicator
athO
o9o2t
aractercodepointQ
meric
alue
ickcheck
nertm
ickcheck
nertq
ickcheck
nerto
ickcheck
nertk
harQ
pendedc
oncatenationmark
s,t0w
hitespacew
yntaxu
otationmarkS
arkSf
eKgLw
caseL
mapping
alorderexceptionK
adcanonic
alcombiningclass
nebreak
comment
bRtF
inaryoperatorG
rtAD
inaryoperatorE>
ontinue?
graphicC
yllabiccategory
sitionalcategory
roup
ontrolIf
a6eXshy
phen=
ngulsyllabletype
digit;
ullcomp
ositionexclusion3
ink9
b^c0eHl
ink9
lusterbreak
xtend7
ase5
neralcategory
mask
mcmnp
d$r1
pictographic
c@mPp
resentation
omponent
odifier
base
a0bNc
stasianwidth
gDhJlNs
ciihexdigit#
betic!
cTmtp
airedbracket
type
ntrol%
irror
ngglyph
h|hTi
c0k6l
angeswhen
cDlln~t
ppercased
apped
olded
owercased
fkccasefolded
itlecased
mpex3a.c
f:iJs
ensitivee
olding
gnorable
onic
alcombiningclass
a0e4i
c:fXp,
recated-
ompositiontype
aultig
norablecodepoint+*
critic/
f4n>tBy"
es# 
alse! 
rue#
k[o#o<rLv
i$r3
rama3
erlay#
ight
kXltn
k/o0r!u
kta/
treordered!
a$v1
navoicing1
tasubscript
atb|t
ached
elow
left
bove
right
ight
ight
5?6A7C8E9G001<2B3N4=4
5S6U7W8Y9[0I1K2M3O4Q
3c4e5g6i0]1_2a
uble
elow
bove
r_rFs
h$s3
itespace3"
e=iKo?
ghttoleft"
e8iHo
verride?
mbedding=
solateK0
egmentseparator1n
pdirectional
solateM
ormatA
ragraphseparator/
fAiM
nspacingmarkC
herneutral5e
e7iIo9
fttoright 
e8iHo
verride9
mbedding7
solateI
n%s't)u
ropean
n<sFt
erminator)
umber%
eparator'
rststrongisolateGaNb
o$s-
mmonseparator-
l;n+r
abic
umber+
etter;.
undaryneutralE
wawHypz
anabazarsquare
angciti
j<rhs
yllables
hexagramsymbols
adicals
a6ezs
iationselectors
supplement
ticalforms
icext
ensions
ansportandmap
symbols
gXi~k
components
a*b2s
anwa
lRtVv^x
uanjing
symbols
plement
luguK
a$iS
b4f<r
huta
etanW
inagh
ifiedcanadianabo
riginalsyllabicsb
extended
aritic
lPmbr
iac:
plement
otinagri
bolsa
ndpictographsext
ndeda
g4r>y
ombo
dian
asompeng
cials
gmodifierletters-
nHpvt
tonsignwriting
danese
plement
ymbo
lsandpictographs
ptsandsubscriptss
ndsubs
athoperators
ctuation
ementa
yprivateusearea
a\mxp
ymbo
lsandpictographs
rrows
athe
maticaloperators
unctuation
anaext
ension
ariants
rashtra
aritan
rtha
ndformatcontrols
halaP
archaicnumbers
dham
r5rDsdu
ctuationq
ivateuse
area
alterpahlavi
ayingcards
h8lJu
cinhau
awhhmong
myrene
eticext
nsions
supplement
nician
stos
disc
numeralsymbols
jang
pcpVr
omansiyaqnumbers
ticalchar
acterrecognition
amentaldingbats
anya
p8p6sVt
urkic
tharabian
dian
"hBiTn
ortharabian
ungarian
talic
hiki
hame
anmarX
nded
golianj
plement
fier
oneletters
etters-
alsymbols
tani
qs6t
echnical
ymbols
feFm
athsymbols
llaneous
m:slt
echnical
hematicalsymbols
ymbols
ictographs
rrows
rorDsNtby
annumerals
chen
aramgondi
a:eJo
perators
lphanum
matical
perators
hanumericsymbols
]hPk~l
chaean
tiles
jani
asar
ayalamO
dle~n
oitic
ieroglyphs
ursive
efaidrin
teimayek
ensions
dekikakui
k;kVoZudy
kengpuachuehmong
block!
berforms{aDb!e
ailue
dinagari
ataean
a\b)c
nded
a6b)c
dditionalm$
sup$
plement%
terlikesymbolsy
m.n4s
yllabary
deograms
wsurrogates
anese
a<mLodu
dawadi
roshthi
symbols
i:nBt
ahli
a4bvg|n
adaM
plement
ndeda
radicals
akana
oneticextensions
aext*
ensions+
ographic
ymbols
andpunctuation
escr
iptioncharacters
perialaramaic
criptionalpa
thian
lavi
iyaqnumbers
umberforms
j4n>r
mukhiC
aratiE
jalagondi
gianZ
plement
ended
etricshapes
ended
eralpunctuationq
agolitic
plement
thic
endedo
ndcoptic1
ntha
agana
urrogates
surrogates
ateusesurrogates
aXmpw
idtha
ndfullwidthforms
ndfullforms
arks
c<j^s
yllables
ompatibilityjamo
amo\
extended
firohingya
brew7a
hiopic^
plement
nded
oticons
closed
deographicsup
plement
lphanum
rics
upplement
lettersandmonths
DaJgvl
maic
asan
rlyd
ynasticcuneiform
yptianhieroglyph
ormatcontrols
estan
ient
ymbols
reek
umbers
usic
alnotation
olianhieroglyphs
ows}
bic8
eJmfp
plement
ndeda
ematicala
lphabeticsymbols
esentationforms
enian5
cii#d
habeticp
esentationforms
hemical
symbols
geannumbers
oqodr
zantinemusic
alsymbols
drawing
omofo
ended
patterns
inese
ockelements
l4m@sft
inese
plement
avah
clatin#
ngaliA
aiksuki
illic2
plement
nded
riotsyllabary
ntingrod
numerals
atjamo
ining
arksforsymbolsw
iacriticalmarks.
upplement
xtended
alfmarks
indicnumberforms
trolpictures
epactnumbers
rencysymbolsu
eiform
numbers
andpunctuation
nifiedideographs
extension
ompat
eographs
ility
deographs
supplement
orms
adicalssup
plement
mbols
andpunctuation
rokes
nHrdu
casianalbanian
adiansyllabicsc
ssymbols
okee`
plement
e>i~o
ployan
anagari>
ended
eret
gbats
criticals.
e0f6s
orsymbolsw
tiles
m_m:nHszv
ideC
ial3
a@b7o
reak7
row5
m8qFu
b=p>
a$l9
are;
ert@
icalAcXe
lated1
ial/
a6iHo
pat%
onical#
rcle'
i:oDr
ction-
a:fLh^npw*
ide+"
mbiguous#&
ullwidth'$
alfwidth% 
utral!(
rrow)
sms:t
l;p=s9
o(oWp4u
rrogateE
ngmark1
separator9cSkUmQ
itlecaseletter'
percaseletter#
assigned!n
f[iYoOr$sI
ivateuseCa,cMdGeK
ragraphseparator=
d3l5o6
nspacingmark-
l8nBpLs
ymbolW
etter+
umber7
unctuationO
enpunctuationIf
a`c1e/n-o
difier
ymbolU
etter)
thsymbolQ
rmatA
nalpunctuation[
itialpunctuationY
m)o(t'u#*
wercaseletter%e(i<l%
tternumber5
neseparator;cDd
nclosingmark/
n9nFoNsEu
rrencysymbolS 
trl?B
rol?
ectorpunctuationMc?fAl
osepunctuationK
a0eJi
git3
shpunctuationG
cimalnumber3
t"t8wLy
riacwawo
raightwaw
ashkafma.e8h
kathi
marbutat
goal=
hqws
ithtail
arree}mln
hingyayeh
ersedpea
ichaean
nvsQs>t\w
ayin
a8e<hJw
enty
amedh
Sn:o@pFqJr
Ig3g8h@k^lfm
imel
ndred
amedh
Da4bJdPf
amedh
leth
ayalam
n,n4r^sbt
g.n2y
bb<jBl
o,uPy
oininggroup!
fBgzh
adhO
a>eJi
nalsemkath5
rsiyeh
a@e>
goalC
h;m\n
ifirohingya
innaya
zaonhehgoal=
a:hDn
ottedhehK
f<ipl
rican
f0n6q
ushaskiyehbarree
athrish/
n.n,r>tVu!
onjoining!(
ightjoining)*
ransparent+c#d@jVl&
eftjoining'$
ualjoining%
oincausing#
sIsHuxw
paceY
aQgSp(u0yWT
aceU
rrogateS
nknown!
rdjoiner]
x!n`o
e$io
gionalindicatoro
e>l[oFsEuF
mericG
xtline[
nstarterE
enpunctuationI
o>rL
efixnumericMJ
stfixnumericK
otationOh{hPi
andatorybreak-
2_3ae4lmy:
phen;
brewletterm
d(n<sA<
eographic=>
rable?
ixnumericA
lctevg
nefeedCa@bpc
i#l4m
biguous#$
phabetic%
2'a)b+k-r
a6b>s
ymbolsW
fter)
fore+
mQm3o(pir5
ingentbreak/
itiona
ljapanesestarterk
lexcontextQ
iningmark3ajb/jkl0
osep
nctuation1
renthesisi
rriagereturn5
b>mFx6
clamation7p
aseqr
odifiers
o2u&
meric'
e.i$
git%"
cimal#
s4xByHz
yy!a0iXm
bazarsquare
a0cZo
ngciti
iistJu
g6ghhli
b:fJr
e$to
tano
inagh
a$imj
naka0e
l!l2m8nDv
i$lg
g6iRk
a0bz
anwa{
logu
l2t4v
known
itic
_i,j
tinagri
d<gLn
alac
nwriting
g:rRy
sompeng
anese
qa\g
r(v0w
m@rXu
ashtra
ritan
c/i#
e>jHoNu
i$ra
jang
lDrJs
alterpahlavi
}a|e
a>lNn^o
enician
h>lPu
inhau
awhhmong
yrene
k6kVsnuty
kengpuachuehmong
ailue
b.n<r
ataean
inagari
gZllr
a6g<m
p7p6sTt
urkic
tharabian
dian
hBiTn
ortharabian
ungarian
talic]
i,k0y
oFoHrtt
nmarY
d.n2o
olianW
n8n2r\sly
chaean
aramgondi
h6kLl
ayalamU
jani
itic
ieroglyphs
ursive
faidrin
teimayek
ekikakui
o0p6t
i<lDnHtVy
ahli
adaK
akanaL
orhiragana
a<mNoZu
dawadi
oshthi
e$rO
nBoFt
Qi$nS
m.n6s
a0pRu
nese
l4m:rHu
ganaI
noowb
g>iB
firohingya
m.nJt
perialaramaic
dfhjs
criptionalpa
thian
lavi
erited#d
j<nNr
m$uA
ukhiA
a$r?
rati?
jalagondi
gian9
olitic
e$k=
eBohsvu
oyan
nagari5
eret3
g:lrt
opic7
tianhieroglyphs
o=oZpvuzy
i*l1s
llic1
riot
mon!
neiform
ea2h
kLnPrvu
casianalbanian
a$sq
dianaboriginalq
okee-
hJhHnNrvv
stan
olianhieroglyphs
nian'
ic%d0fDg
l<lRoVrfu
nese
mofo+
h.i|
lle}
AaHe
iksuki
l:mHsTt
nese
avah
ali)
oweljamo%"
eTv(
s8t*
syllable+
yllable)
adingjamo#
tapplicable!&
railingjamo'
n,y"
es# 
n,y"
es# 
m0n:y"
es#$
aybe% 
m0n:y"
es#$
aybe% 
r9vv3x*z
x!r(sPt1
e$i9
gionalindicator9
acingmark5l
l<oJp
epend7(
f+v,
ther!cLedg
ueafterzwjA
n#o$r%
ntrol#
b4mNx&
tend':
a$g=
gaz=>
odifier?
nJn4oDs`u
meric+
her!
etter-
c6eFp1t2
erm3<
ontinue=.
per5aFcRedfrl
e-f;o(
wer)
erm#
l$r7$
ose%
tend9
rmat'
r@r6s^wzx
e$i;
gionalindicator;
i$q?
nglequote?
segspaceM
x!l6m<nvo
ther!
e#f5
b7i(l)n+
let7
etter)
e6l9u,
meric-
wline9f?f@gNhpk
takana'
rmat%
ueafterzwjI
e$l=
brewletter=a
bDm^x.
tend2
numlet/B
a$gE
gazEF
odifierG
letter#
o$qA
ublequoteA
c2n<o"
pen#$
lose% 
one!
o\oJr\tdv
isualorderleft=
verstruck-
ight/
b2lPr
ight;
ottom2
andright5
eft6
andright9b,l\n
ottom"
ight'
eft%
eft(
andright+
welb
ndependentg
ependente
argaa
ama_
egistershifterW
yllablemodifierY
ark]
etter[n<o|p
urekillerU
berP
joinerS
njoinerM
ther!g>gJidj
odifyingletterK
eminationmarkE
nvisiblestackerG
oinerIa
nsonant*
kgkHmRp\s
ithstackerC
iller5
edial7
ixed=
edingrepha;
aceholder9
ceedingrephaA
joined?dLfRhZi
nitialpostfixed3
ead-
inal/
eadletter1
ntillationmark)
vagraha#
hmijoiningnumber'
ndu%
r8tFu&
pright' 
otated!
r$u%"
ansformed
pright%
otated#
p:uny
mbol
ngmark
separator
rrogate
parator
itlecaseletter1
percaseletter%
assigned#n
uation
ivateuse
ragraphseparator
mber
nspacingmark
l@nJpVs
ymbol
ettera
umber
unctuation
enpunctuation
difier
ymbol
etterA
hsymbol
rmat
nalpunctuation
itialpunctuation
mAo(t1u%`
wercaseletter)c=e(iBl)
tter
number
neseparator
nclosingmark
nWnRo^s
rrencysymbol
ectorpunctuation
biningmark
osepunctuation
sedletter=
a2ePi
shpunctuation
cimalnumber
Alpha
Alphabetic
False
True
Not_Reordered
Overlay
Nukta
Kana_Voicing
Virama
CCC10
CCC10
CCC11
CCC11
CCC12
CCC12
CCC13
CCC13
CCC14
CCC14
CCC15
CCC15
CCC16
CCC16
CCC17
CCC17
CCC18
CCC18
CCC19
CCC19
CCC20
CCC20
CCC21
CCC21
CCC22
CCC22
CCC23
CCC23
CCC24
CCC24
CCC25
CCC25
CCC26
CCC26
CCC27
CCC27
CCC28
CCC28
CCC29
CCC29
CCC30
CCC30
CCC31
CCC31
CCC32
CCC32
CCC33
CCC33
CCC34
CCC34
CCC35
CCC35
CCC36
CCC36
CCC84
CCC84
CCC91
CCC91
CCC103
CCC103
CCC107
CCC107
CCC118
CCC118
CCC122
CCC122
CCC129
CCC129
CCC130
CCC130
CCC132
CCC132
CCC133
CCC133
ATBL
Attached_Below_Left
Attached_Below
Attached_Above
ATAR
Attached_Above_Right
Below_Left
Below
Below_Right
Left
Right
Above_Left
Above
Above_Right
Double_Below
Double_Above
Iota_Subscript
AHex
ASCII_Hex_Digit
Bidi_C
Bidi_Control
Bidi_M
Bidi_Mirrored
Dash
Dash
Default_Ignorable_Code_Point
Deprecated
Diacritic
Extender
Comp_Ex
Full_Composition_Exclusion
Gr_Base
Grapheme_Base
Gr_Ext
Grapheme_Extend
Gr_Link
Grapheme_Link
Hex_Digit
Hyphen
Hyphen
ID_Continue
ID_Start
Ideo
Ideographic
IDSB
IDS_Binary_Operator
IDST
IDS_Trinary_Operator
Join_C
Join_Control
Logical_Order_Exception
Lower
Lowercase
Math
Math
NChar
Noncharacter_Code_Point
QMark
Quotation_Mark
Radical
Radical
Soft_Dotted
Term
Terminal_Punctuation
UIdeo
Unified_Ideograph
Upper
Uppercase
WSpace
White_Space
space
XIDC
XID_Continue
XIDS
XID_Start
Sensitive
Case_Sensitive
STerm
Sentence_Terminal
Variation_Selector
nfdinert
NFD_Inert
nfkdinert
NFKD_Inert
nfcinert
NFC_Inert
nfkcinert
NFKC_Inert
segstart
Segment_Starter
Pat_Syn
Pattern_Syntax
Pat_WS
Pattern_White_Space
alnum
blank
graph
print
xdigit
Cased
Cased
Case_Ignorable
Changes_When_Lowercased
Changes_When_Uppercased
Changes_When_Titlecased
CWCF
Changes_When_Casefolded
CWCM
Changes_When_Casemapped
CWKCF
Changes_When_NFKC_Casefolded
Emoji
Emoji
EPres
Emoji_Presentation
EMod
Emoji_Modifier
EBase
Emoji_Modifier_Base
EComp
Emoji_Component
Regional_Indicator
Prepended_Concatenation_Mark
ExtPict
Extended_Pictographic
Bidi_Class
Left_To_Right
Right_To_Left
European_Number
European_Separator
European_Terminator
Arabic_Number
Common_Separator
Paragraph_Separator
Segment_Separator
White_Space
Other_Neutral
Left_To_Right_Embedding
Left_To_Right_Override
Arabic_Letter
Right_To_Left_Embedding
Right_To_Left_Override
Pop_Directional_Format
Nonspacing_Mark
Boundary_Neutral
First_Strong_Isolate
Left_To_Right_Isolate
Right_To_Left_Isolate
Pop_Directional_Isolate
Block
No_Block
ASCII
Basic_Latin
Latin_1_Sup
Latin_1_Supplement
Latin_1
Latin_Ext_A
Latin_Extended_A
Latin_Ext_B
Latin_Extended_B
IPA_Ext
IPA_Extensions
Modifier_Letters
Spacing_Modifier_Letters
Diacriticals
Combining_Diacritical_Marks
Greek
Greek_And_Coptic
Cyrillic
Cyrillic
Armenian
Armenian
Hebrew
Hebrew
Arabic
Arabic
Syriac
Syriac
Thaana
Thaana
Devanagari
Devanagari
Bengali
Bengali
Gurmukhi
Gurmukhi
Gujarati
Gujarati
Oriya
Oriya
Tamil
Tamil
Telugu
Telugu
Kannada
Kannada
Malayalam
Malayalam
Sinhala
Sinhala
Thai
Thai
Tibetan
Tibetan
Myanmar
Myanmar
Georgian
Georgian
Jamo
Hangul_Jamo
Ethiopic
Ethiopic
Cherokee
Cherokee
UCAS
Unified_Canadian_Aboriginal_Syllabics
Canadian_Syllabics
Ogham
Ogham
Runic
Runic
Khmer
Khmer
Mongolian
Mongolian
Latin_Ext_Additional
Latin_Extended_Additional
Greek_Ext
Greek_Extended
Punctuation
General_Punctuation
Super_And_Sub
Superscripts_And_Subscripts
Currency_Symbols
Currency_Symbols
Diacriticals_For_Symbols
Combining_Diacritical_Marks_For_Symbols
Combining_Marks_For_Symbols
Letterlike_Symbols
Letterlike_Symbols
Number_Forms
Number_Forms
Arrows
Arrows
Math_Operators
Mathematical_Operators
Misc_Technical
Miscellaneous_Technical
Control_Pictures
Control_Pictures
Optical_Character_Recognition
Enclosed_Alphanum
Enclosed_Alphanumerics
Box_Drawing
Box_Drawing
Block_Elements
Block_Elements
Geometric_Shapes
Geometric_Shapes
Misc_Symbols
Miscellaneous_Symbols
Dingbats
Dingbats
Braille
Braille_Patterns
CJK_Radicals_Sup
CJK_Radicals_Supplement
Kangxi
Kangxi_Radicals
Ideographic_Description_Characters
CJK_Symbols
CJK_Symbols_And_Punctuation
Hiragana
Hiragana
Katakana
Katakana
Bopomofo
Bopomofo
Compat_Jamo
Hangul_Compatibility_Jamo
Kanbun
Kanbun
Bopomofo_Ext
Bopomofo_Extended
Enclosed_CJK
Enclosed_CJK_Letters_And_Months
CJK_Compat
CJK_Compatibility
CJK_Ext_A
CJK_Unified_Ideographs_Extension_A
CJK_Unified_Ideographs
Yi_Syllables
Yi_Syllables
Yi_Radicals
Yi_Radicals
Hangul
Hangul_Syllables
High_Surrogates
High_Surrogates
High_PU_Surrogates
High_Private_Use_Surrogates
Low_Surrogates
Low_Surrogates
Private_Use_Area
Private_Use
CJK_Compat_Ideographs
CJK_Compatibility_Ideographs
Alphabetic_PF
Alphabetic_Presentation_Forms
Arabic_PF_A
Arabic_Presentation_Forms_A
Arabic_Presentation_Forms-A
Half_Marks
Combining_Half_Marks
CJK_Compat_Forms
CJK_Compatibility_Forms
Small_Forms
Small_Form_Variants
Arabic_PF_B
Arabic_Presentation_Forms_B
Specials
Specials
Half_And_Full_Forms
Halfwidth_And_Fullwidth_Forms
Old_Italic
Old_Italic
Gothic
Gothic
Deseret
Deseret
Byzantine_Music
Byzantine_Musical_Symbols
Music
Musical_Symbols
Math_Alphanum
Mathematical_Alphanumeric_Symbols
CJK_Ext_B
CJK_Unified_Ideographs_Extension_B
CJK_Compat_Ideographs_Sup
CJK_Compatibility_Ideographs_Supplement
Tags
Tags
Cyrillic_Sup
Cyrillic_Supplement
Cyrillic_Supplementary
Tagalog
Tagalog
Hanunoo
Hanunoo
Buhid
Buhid
Tagbanwa
Tagbanwa
Misc_Math_Symbols_A
Miscellaneous_Mathematical_Symbols_A
Sup_Arrows_A
Supplemental_Arrows_A
Sup_Arrows_B
Supplemental_Arrows_B
Misc_Math_Symbols_B
Miscellaneous_Mathematical_Symbols_B
Sup_Math_Operators
Supplemental_Mathematical_Operators
Katakana_Ext
Katakana_Phonetic_Extensions
Variation_Selectors
Sup_PUA_A
Supplementary_Private_Use_Area_A
Sup_PUA_B
Supplementary_Private_Use_Area_B
Limbu
Limbu
Tai_Le
Tai_Le
Khmer_Symbols
Khmer_Symbols
Phonetic_Ext
Phonetic_Extensions
Misc_Arrows
Miscellaneous_Symbols_And_Arrows
Yijing
Yijing_Hexagram_Symbols
Linear_B_Syllabary
Linear_B_Syllabary
Linear_B_Ideograms
Linear_B_Ideograms
Aegean_Numbers
Aegean_Numbers
Ugaritic
Ugaritic
Shavian
Shavian
Osmanya
Osmanya
Cypriot_Syllabary
Cypriot_Syllabary
Tai_Xuan_Jing
Tai_Xuan_Jing_Symbols
VS_Sup
Variation_Selectors_Supplement
Ancient_Greek_Music
Ancient_Greek_Musical_Notation
Ancient_Greek_Numbers
Ancient_Greek_Numbers
Arabic_Sup
Arabic_Supplement
Buginese
Buginese
CJK_Strokes
CJK_Strokes
Diacriticals_Sup
Combining_Diacritical_Marks_Supplement
Coptic
Coptic
Ethiopic_Ext
Ethiopic_Extended
Ethiopic_Sup
Ethiopic_Supplement
Georgian_Sup
Georgian_Supplement
Glagolitic
Glagolitic
Kharoshthi
Kharoshthi
Modifier_Tone_Letters
Modifier_Tone_Letters
New_Tai_Lue
New_Tai_Lue
Old_Persian
Old_Persian
Phonetic_Ext_Sup
Phonetic_Extensions_Supplement
Sup_Punctuation
Supplemental_Punctuation
Syloti_Nagri
Syloti_Nagri
Tifinagh
Tifinagh
Vertical_Forms
Vertical_Forms
Balinese
Balinese
Latin_Ext_C
Latin_Extended_C
Latin_Ext_D
Latin_Extended_D
Phags_Pa
Phags_Pa
Phoenician
Phoenician
Cuneiform
Cuneiform
Cuneiform_Numbers
Cuneiform_Numbers_And_Punctuation
Counting_Rod
Counting_Rod_Numerals
Sundanese
Sundanese
Lepcha
Lepcha
Ol_Chiki
Ol_Chiki
Cyrillic_Ext_A
Cyrillic_Extended_A
Cyrillic_Ext_B
Cyrillic_Extended_B
Saurashtra
Saurashtra
Kayah_Li
Kayah_Li
Rejang
Rejang
Cham
Cham
Ancient_Symbols
Ancient_Symbols
Phaistos
Phaistos_Disc
Lycian
Lycian
Carian
Carian
Lydian
Lydian
Mahjong
Mahjong_Tiles
Domino
Domino_Tiles
Samaritan
Samaritan
UCAS_Ext
Unified_Canadian_Aboriginal_Syllabics_Extended
Tai_Tham
Tai_Tham
Vedic_Ext
Vedic_Extensions
Lisu
Lisu
Bamum
Bamum
Indic_Number_Forms
Common_Indic_Number_Forms
Devanagari_Ext
Devanagari_Extended
Jamo_Ext_A
Hangul_Jamo_Extended_A
Javanese
Javanese
Myanmar_Ext_A
Myanmar_Extended_A
Tai_Viet
Tai_Viet
Meetei_Mayek
Meetei_Mayek
Jamo_Ext_B
Hangul_Jamo_Extended_B
Imperial_Aramaic
Imperial_Aramaic
Old_South_Arabian
Old_South_Arabian
Avestan
Avestan
Inscriptional_Parthian
Inscriptional_Parthian
Inscriptional_Pahlavi
Inscriptional_Pahlavi
Old_Turkic
Old_Turkic
Rumi
Rumi_Numeral_Symbols
Kaithi
Kaithi
Egyptian_Hieroglyphs
Egyptian_Hieroglyphs
Enclosed_Alphanum_Sup
Enclosed_Alphanumeric_Supplement
Enclosed_Ideographic_Sup
Enclosed_Ideographic_Supplement
CJK_Ext_C
CJK_Unified_Ideographs_Extension_C
Mandaic
Mandaic
Batak
Batak
Ethiopic_Ext_A
Ethiopic_Extended_A
Brahmi
Brahmi
Bamum_Sup
Bamum_Supplement
Kana_Sup
Kana_Supplement
Playing_Cards
Playing_Cards
Misc_Pictographs
Miscellaneous_Symbols_And_Pictographs
Emoticons
Emoticons
Transport_And_Map
Transport_And_Map_Symbols
Alchemical
Alchemical_Symbols
CJK_Ext_D
CJK_Unified_Ideographs_Extension_D
Arabic_Ext_A
Arabic_Extended_A
Arabic_Math
Arabic_Mathematical_Alphabetic_Symbols
Chakma
Chakma
Meetei_Mayek_Ext
Meetei_Mayek_Extensions
Meroitic_Cursive
Meroitic_Cursive
Meroitic_Hieroglyphs
Meroitic_Hieroglyphs
Miao
Miao
Sharada
Sharada
Sora_Sompeng
Sora_Sompeng
Sundanese_Sup
Sundanese_Supplement
Takri
Takri
Bassa_Vah
Bassa_Vah
Caucasian_Albanian
Caucasian_Albanian
Coptic_Epact_Numbers
Coptic_Epact_Numbers
Diacriticals_Ext
Combining_Diacritical_Marks_Extended
Duployan
Duployan
Elbasan
Elbasan
Geometric_Shapes_Ext
Geometric_Shapes_Extended
Grantha
Grantha
Khojki
Khojki
Khudawadi
Khudawadi
Latin_Ext_E
Latin_Extended_E
Linear_A
Linear_A
Mahajani
Mahajani
Manichaean
Manichaean
Mende_Kikakui
Mende_Kikakui
Modi
Modi
Myanmar_Ext_B
Myanmar_Extended_B
Nabataean
Nabataean
Old_North_Arabian
Old_North_Arabian
Old_Permic
Old_Permic
Ornamental_Dingbats
Ornamental_Dingbats
Pahawh_Hmong
Pahawh_Hmong
Palmyrene
Palmyrene
Pau_Cin_Hau
Pau_Cin_Hau
Psalter_Pahlavi
Psalter_Pahlavi
Shorthand_Format_Controls
Shorthand_Format_Controls
Siddham
Siddham
Sinhala_Archaic_Numbers
Sinhala_Archaic_Numbers
Sup_Arrows_C
Supplemental_Arrows_C
Tirhuta
Tirhuta
Warang_Citi
Warang_Citi
Ahom
Ahom
Anatolian_Hieroglyphs
Anatolian_Hieroglyphs
Cherokee_Sup
Cherokee_Supplement
CJK_Ext_E
CJK_Unified_Ideographs_Extension_E
Early_Dynastic_Cuneiform
Early_Dynastic_Cuneiform
Hatran
Hatran
Multani
Multani
Old_Hungarian
Old_Hungarian
Sup_Symbols_And_Pictographs
Supplemental_Symbols_And_Pictographs
Sutton_SignWriting
Sutton_SignWriting
Adlam
Adlam
Bhaiksuki
Bhaiksuki
Cyrillic_Ext_C
Cyrillic_Extended_C
Glagolitic_Sup
Glagolitic_Supplement
Ideographic_Symbols
Ideographic_Symbols_And_Punctuation
Marchen
Marchen
Mongolian_Sup
Mongolian_Supplement
Newa
Newa
Osage
Osage
Tangut
Tangut
Tangut_Components
Tangut_Components
CJK_Ext_F
CJK_Unified_Ideographs_Extension_F
Kana_Ext_A
Kana_Extended_A
Masaram_Gondi
Masaram_Gondi
Nushu
Nushu
Soyombo
Soyombo
Syriac_Sup
Syriac_Supplement
Zanabazar_Square
Zanabazar_Square
Chess_Symbols
Chess_Symbols
Dogra
Dogra
Georgian_Ext
Georgian_Extended
Gunjala_Gondi
Gunjala_Gondi
Hanifi_Rohingya
Hanifi_Rohingya
Indic_Siyaq_Numbers
Indic_Siyaq_Numbers
Makasar
Makasar
Mayan_Numerals
Mayan_Numerals
Medefaidrin
Medefaidrin
Old_Sogdian
Old_Sogdian
Sogdian
Sogdian
Egyptian_Hieroglyph_Format_Controls
Egyptian_Hieroglyph_Format_Controls
Elymaic
Elymaic
Nandinagari
Nandinagari
Nyiakeng_Puachue_Hmong
Nyiakeng_Puachue_Hmong
Ottoman_Siyaq_Numbers
Ottoman_Siyaq_Numbers
Small_Kana_Ext
Small_Kana_Extension
Symbols_And_Pictographs_Ext_A
Symbols_And_Pictographs_Extended_A
Tamil_Sup
Tamil_Supplement
Wancho
Wancho
Canonical_Combining_Class
Decomposition_Type
None
None
none
Canonical
Compat
Circle
Final
Font
Font
font
Fraction
Init
Initial
init
Isolated
Medial
Narrow
Nobreak
Small
Square
Super
Vert
Vertical
vert
Wide
Wide
wide
East_Asian_Width
Neutral
Ambiguous
Halfwidth
Fullwidth
Narrow
Wide
General_Category
Unassigned
Uppercase_Letter
Lowercase_Letter
Titlecase_Letter
Modifier_Letter
Other_Letter
Nonspacing_Mark
Enclosing_Mark
Spacing_Mark
Decimal_Number
digit
Letter_Number
Other_Number
Space_Separator
Line_Separator
Paragraph_Separator
Control
cntrl
Format
Private_Use
Surrogate
Dash_Punctuation
Open_Punctuation
Close_Punctuation
Connector_Punctuation
Other_Punctuation
Math_Symbol
Currency_Symbol
Modifier_Symbol
Other_Symbol
Initial_Punctuation
Final_Punctuation
Joining_Group
No_Joining_Group
No_Joining_Group
Alaph
Alaph
Alef
Alef
Beth
Beth
Dalath_Rish
Dalath_Rish
Final_Semkath
Final_Semkath
Gamal
Gamal
Teh_Marbuta_Goal
Hamza_On_Heh_Goal
Heh_Goal
Heh_Goal
Heth
Heth
Kaph
Kaph
Knotted_Heh
Knotted_Heh
Lamadh
Lamadh
Meem
Meem
Noon
Noon
Qaph
Qaph
Reversed_Pe
Reversed_Pe
Sadhe
Sadhe
Seen
Seen
Semkath
Semkath
Shin
Shin
Swash_Kaf
Swash_Kaf
Syriac_Waw
Syriac_Waw
Teh_Marbuta
Teh_Marbuta
Teth
Teth
Yeh_Barree
Yeh_Barree
Yeh_With_Tail
Yeh_With_Tail
Yudh
Yudh
Yudh_He
Yudh_He
Zain
Zain
Khaph
Khaph
Zhain
Zhain
Burushaski_Yeh_Barree
Burushaski_Yeh_Barree
Farsi_Yeh
Farsi_Yeh
Rohingya_Yeh
Rohingya_Yeh
Manichaean_Aleph
Manichaean_Aleph
Manichaean_Ayin
Manichaean_Ayin
Manichaean_Beth
Manichaean_Beth
Manichaean_Daleth
Manichaean_Daleth
Manichaean_Dhamedh
Manichaean_Dhamedh
Manichaean_Five
Manichaean_Five
Manichaean_Gimel
Manichaean_Gimel
Manichaean_Heth
Manichaean_Heth
Manichaean_Hundred
Manichaean_Hundred
Manichaean_Kaph
Manichaean_Kaph
Manichaean_Lamedh
Manichaean_Lamedh
Manichaean_Mem
Manichaean_Mem
Manichaean_Nun
Manichaean_Nun
Manichaean_One
Manichaean_One
Manichaean_Pe
Manichaean_Pe
Manichaean_Qoph
Manichaean_Qoph
Manichaean_Resh
Manichaean_Resh
Manichaean_Sadhe
Manichaean_Sadhe
Manichaean_Samekh
Manichaean_Samekh
Manichaean_Taw
Manichaean_Taw
Manichaean_Ten
Manichaean_Ten
Manichaean_Teth
Manichaean_Teth
Manichaean_Thamedh
Manichaean_Thamedh
Manichaean_Twenty
Manichaean_Twenty
Manichaean_Waw
Manichaean_Waw
Manichaean_Yodh
Manichaean_Yodh
Manichaean_Zayin
Manichaean_Zayin
Straight_Waw
Straight_Waw
African_Feh
African_Feh
African_Noon
African_Noon
African_Qaf
African_Qaf
Malayalam_Bha
Malayalam_Bha
Malayalam_Ja
Malayalam_Ja
Malayalam_Lla
Malayalam_Lla
Malayalam_Llla
Malayalam_Llla
Malayalam_Nga
Malayalam_Nga
Malayalam_Nna
Malayalam_Nna
Malayalam_Nnna
Malayalam_Nnna
Malayalam_Nya
Malayalam_Nya
Malayalam_Ra
Malayalam_Ra
Malayalam_Ssa
Malayalam_Ssa
Malayalam_Tta
Malayalam_Tta
Hanifi_Rohingya_Kinna_Ya
Hanifi_Rohingya_Kinna_Ya
Hanifi_Rohingya_Pa
Hanifi_Rohingya_Pa
Joining_Type
Non_Joining
Join_Causing
Dual_Joining
Left_Joining
Right_Joining
Transparent
Line_Break
Unknown
Ambiguous
Alphabetic
Break_Both
Break_After
Break_Before
Mandatory_Break
Contingent_Break
Close_Punctuation
Combining_Mark
Carriage_Return
Exclamation
Glue
Hyphen
Ideographic
Inseparable
Inseperable
Infix_Numeric
Line_Feed
Nonstarter
Numeric
Open_Punctuation
Postfix_Numeric
Prefix_Numeric
Quotation
Complex_Context
Surrogate
Space
Break_Symbols
ZWSpace
Next_Line
Word_Joiner
Close_Parenthesis
Conditional_Japanese_Starter
Hebrew_Letter
E_Base
E_Modifier
Numeric_Type
None
None
Decimal
Digit
Numeric
Script
Zyyy
Common
Zinh
Inherited
Qaai
Arab
Arabic
Armn
Armenian
Beng
Bengali
Bopo
Bopomofo
Cher
Cherokee
Copt
Coptic
Qaac
Cyrl
Cyrillic
Dsrt
Deseret
Deva
Devanagari
Ethi
Ethiopic
Geor
Georgian
Goth
Gothic
Grek
Greek
Gujr
Gujarati
Guru
Gurmukhi
Hani
Hang
Hangul
Hebr
Hebrew
Hira
Hiragana
Knda
Kannada
Kana
Katakana
Khmr
Khmer
Laoo
Latn
Latin
Mlym
Malayalam
Mong
Mongolian
Mymr
Myanmar
Ogam
Ogham
Ital
Old_Italic
Orya
Oriya
Runr
Runic
Sinh
Sinhala
Syrc
Syriac
Taml
Tamil
Telu
Telugu
Thaa
Thaana
Tibt
Tibetan
Cans
Canadian_Aboriginal
Yiii
Tglg
Tagalog
Hano
Hanunoo
Buhd
Buhid
Tagb
Tagbanwa
Brai
Braille
Cprt
Cypriot
Limb
Limbu
Linb
Linear_B
Osma
Osmanya
Shaw
Shavian
Tale
Tai_Le
Ugar
Ugaritic
Hrkt
Katakana_Or_Hiragana
Bugi
Buginese
Glag
Glagolitic
Khar
Kharoshthi
Sylo
Syloti_Nagri
Talu
New_Tai_Lue
Tfng
Tifinagh
Xpeo
Old_Persian
Bali
Balinese
Batk
Batak
Blis
Blis
Brah
Brahmi
Cirt
Cirt
Cyrs
Cyrs
Egyd
Egyd
Egyh
Egyh
Egyp
Egyptian_Hieroglyphs
Geok
Geok
Hans
Hans
Hant
Hant
Hmng
Pahawh_Hmong
Hung
Old_Hungarian
Inds
Inds
Java
Javanese
Kali
Kayah_Li
Latf
Latf
Latg
Latg
Lepc
Lepcha
Lina
Linear_A
Mand
Mandaic
Maya
Maya
Mero
Meroitic_Hieroglyphs
Nkoo
Orkh
Old_Turkic
Perm
Old_Permic
Phag
Phags_Pa
Phnx
Phoenician
Plrd
Miao
Roro
Roro
Sara
Sara
Syre
Syre
Syrj
Syrj
Syrn
Syrn
Teng
Teng
Vaii
Visp
Visp
Xsux
Cuneiform
Zxxx
Zxxx
Zzzz
Unknown
Cari
Carian
Jpan
Jpan
Lana
Tai_Tham
Lyci
Lycian
Lydi
Lydian
Olck
Ol_Chiki
Rjng
Rejang
Saur
Saurashtra
Sgnw
SignWriting
Sund
Sundanese
Moon
Moon
Mtei
Meetei_Mayek
Armi
Imperial_Aramaic
Avst
Avestan
Cakm
Chakma
Kore
Kore
Kthi
Kaithi
Mani
Manichaean
Phli
Inscriptional_Pahlavi
Phlp
Psalter_Pahlavi
Phlv
Phlv
Prti
Inscriptional_Parthian
Samr
Samaritan
Tavt
Tai_Viet
Zmth
Zmth
Zsym
Zsym
Bamu
Bamum
Nkgb
Nkgb
Sarb
Old_South_Arabian
Bass
Bassa_Vah
Dupl
Duployan
Elba
Elbasan
Gran
Grantha
Kpel
Kpel
Loma
Loma
Mend
Mende_Kikakui
Merc
Meroitic_Cursive
Narb
Old_North_Arabian
Nbat
Nabataean
Palm
Palmyrene
Sind
Khudawadi
Wara
Warang_Citi
Afak
Afak
Jurc
Jurc
Mroo
Nshu
Nushu
Shrd
Sharada
Sora
Sora_Sompeng
Takr
Takri
Tang
Tangut
Wole
Wole
Hluw
Anatolian_Hieroglyphs
Khoj
Khojki
Tirh
Tirhuta
Aghb
Caucasian_Albanian
Mahj
Mahajani
Hatr
Hatran
Mult
Multani
Pauc
Pau_Cin_Hau
Sidd
Siddham
Adlm
Adlam
Bhks
Bhaiksuki
Marc
Marchen
Osge
Osage
Hanb
Hanb
Jamo
Jamo
Zsye
Zsye
Gonm
Masaram_Gondi
Soyo
Soyombo
Zanb
Zanabazar_Square
Dogr
Dogra
Gong
Gunjala_Gondi
Maka
Makasar
Medf
Medefaidrin
Rohg
Hanifi_Rohingya
Sogd
Sogdian
Sogo
Old_Sogdian
Elym
Elymaic
Hmnp
Nyiakeng_Puachue_Hmong
Nand
Nandinagari
Wcho
Wancho
Hangul_Syllable_Type
Not_Applicable
Leading_Jamo
Vowel_Jamo
Trailing_Jamo
LV_Syllable
LVT_Syllable
NFD_QC
NFD_Quick_Check
NFKD_QC
NFKD_Quick_Check
NFC_QC
NFC_Quick_Check
Maybe
NFKC_QC
NFKC_Quick_Check
lccc
Lead_Canonical_Combining_Class
tccc
Trail_Canonical_Combining_Class
Grapheme_Cluster_Break
Other
Control
Extend
SpacingMark
Prepend
E_Base_GAZ
Glue_After_Zwj
Sentence_Break
ATerm
Close
Format
Lower
OLetter
STerm
Upper
SContinue
Word_Break
ALetter
Katakana
MidLetter
MidNum
ExtendNumLet
Extend
Extend
MidNumLet
Newline
Single_Quote
Double_Quote
WSegSpace
WSegSpace
Bidi_Paired_Bracket_Type
None
Open
Close
InPC
Indic_Positional_Category
Bottom
Bottom
Bottom_And_Left
Bottom_And_Left
Bottom_And_Right
Bottom_And_Right
Left
Left
Left_And_Right
Left_And_Right
Overstruck
Overstruck
Right
Right
Top_And_Bottom
Top_And_Bottom
Top_And_Bottom_And_Right
Top_And_Bottom_And_Right
Top_And_Left
Top_And_Left
Top_And_Left_And_Right
Top_And_Left_And_Right
Top_And_Right
Top_And_Right
Visual_Order_Left
Visual_Order_Left
InSC
Indic_Syllabic_Category
Other
Other
Avagraha
Avagraha
Bindu
Bindu
Brahmi_Joining_Number
Brahmi_Joining_Number
Cantillation_Mark
Cantillation_Mark
Consonant
Consonant
Consonant_Dead
Consonant_Dead
Consonant_Final
Consonant_Final
Consonant_Head_Letter
Consonant_Head_Letter
Consonant_Initial_Postfixed
Consonant_Initial_Postfixed
Consonant_Killer
Consonant_Killer
Consonant_Medial
Consonant_Medial
Consonant_Placeholder
Consonant_Placeholder
Consonant_Preceding_Repha
Consonant_Preceding_Repha
Consonant_Prefixed
Consonant_Prefixed
Consonant_Subjoined
Consonant_Subjoined
Consonant_Succeeding_Repha
Consonant_Succeeding_Repha
Consonant_With_Stacker
Consonant_With_Stacker
Gemination_Mark
Gemination_Mark
Invisible_Stacker
Invisible_Stacker
Joiner
Joiner
Modifying_Letter
Modifying_Letter
Non_Joiner
Non_Joiner
Nukta
Nukta
Number
Number
Number_Joiner
Number_Joiner
Pure_Killer
Pure_Killer
Register_Shifter
Register_Shifter
Syllable_Modifier
Syllable_Modifier
Tone_Letter
Tone_Letter
Tone_Mark
Tone_Mark
Virama
Virama
Visarga
Visarga
Vowel
Vowel
Vowel_Dependent
Vowel_Dependent
Vowel_Independent
Vowel_Independent
Vertical_Orientation
Rotated
Transformed_Rotated
Transformed_Upright
Upright
General_Category_Mask
Other
Letter
Cased_Letter
Mark
Combining_Mark
Number
Punctuation
punct
Symbol
Separator
Numeric_Value
Bidi_Mirroring_Glyph
Case_Folding
ISO_Comment
Lowercase_Mapping
Name
Simple_Case_Folding
Simple_Lowercase_Mapping
Simple_Titlecase_Mapping
Simple_Uppercase_Mapping
Titlecase_Mapping
Unicode_1_Name
Uppercase_Mapping
Bidi_Paired_Bracket
Script_Extensions
N6icu_6415RBBISymbolTableE
N6icu_6414UnicodeMatcherE
N6icu_6413UnicodeFilterE
N6icu_6417ResourceDataValueE
N6icu_6414MessagePatternE
res_index
InstalledLocales
N6icu_6415RBBIRuleScannerE
BOCU-1
N6icu_6413ParsePositionE
N6icu_6421LoadedNormalizer2ImplE
N6icu_649ErrorCodeE
N6icu_6422UCharCharacterIteratorE
LMBCS-1
  ! 
" $ 
% % 
& & 
' ' 
0 0 
1 1 
2 3 
5 5 
9 : 
; ; 
< < 
t t 
!!!!
"!&!
+!+!
5!5!
S!T!
[!^!
`!y!
 " "
#"*"
+"="
E"H"
L"L"
R"R"
`"a"
b"e"
f"o"
f&f&
g&i&
j&j&
k&l&
m&m&
n&n&
o&o&
LMBCS-2
LMBCS-3
LMBCS-4
LMBCS-5
LMBCS-6
LMBCS-8
LMBCS-11
LMBCS-16
LMBCS-17
LMBCS-18
LMBCS-19
Currencies%narrow
Currencies
CurrencyPlurals
supplementalData
CurrencyMap
CurrencyMeta
DEFAULT
N6icu_6423UnicodeStringAppendableE
N6icu_6411ReplaceableE
N6icu_6413UnicodeStringE
B/|)
[FV
fFdFf[
N6icu_6411Normalizer2E
N6icu_6419Normalizer2WithImplE
N6icu_6420DecomposeNormalizer2E
N6icu_6418ComposeNormalizer2E
N6icu_6414FCDNormalizer2E
N6icu_6415NoopNormalizer2E
9o
,W
BP
^l
&<,<
2<8<
**0*6*
B*H*
H<r*
   * 4 > H R \ f p z 
!"!)!/!4!:!@!F!
O!Y!c!m!
"!"+"5"
?"I"S"]"
g"q"{"
#!#1#A#L#V#e#u#
$)$4$>$M$]$m$}$
%&%5%E%U%e%u%
&%&+&3&
;&C&K&Q&W&
]&c&i&o&u&}&
['a'g'm's'T
W(](
c(i(
o(u(
)#)x
))/)
;)A)G)M)
V<V<V<V<V<V<
+!+%+)+-+1+5+9+=+A+E+I+M+Q+U+Y+]+a+e+i+m+q+u+y+}+
,!,%,),-,
+1,5,9,=,A,E,I,M,Q,U,Y,],a,e,i,m,q,u,y,},
-!-%-)---1-5-9-=-y,A-E-I-M-Q-U-Y-]-9,a-e-i-m-q-u-y-}-
.!.%.).-.1.5.9.=.A.E.I.M.Q.U.Y.].a.e.i.m.q.u.y.}.
%/)/-/1/5/9/=/A/E/I/M/Q/U/Y/]/a/e/i/m/q/u/y/}/
0!0'0
+0/03070;0?0C0G0U/K0O0S0
.W0[0_0c0g0k0o0s0w0{0
1#1'1+1/1
*?1E1K1Q1U1Y1]1c1i1o1s1
2 2&2,22282>2D2
J2T2h2
23$3<3
K3O3S3W3]3=/a3e3i3m3A/q3u3y3E/
3C0I/M/G0
4!4%4)4-4145494=4=4O0A4E4I4M4Y/Q4U4Y4
.]4a4e4i4m4q4u4y4}4
5#5'5+5/53575;5?5E5I5M5Q5a+U5[5_5_5e5i5i5m5q5w5}5
/'6+6165696=6
/A6E6I6M6Q6U6Y6]6e+
0a6e6i6m6s6w6{6
0#7'7-71757;7A7E7
0I7M7Q7U7Y7]7a7g7k7q7u7{7
8!8%8)8/8
03878
/=8C8
/I8M8
/Q8U8Y8_8_8e8i8m8s8w8{8
9#9)9e5/93979;9?9C9G9K9O9S9W9[9
,a9e9i9m9q9u9
/y9}9
:!:%:):-:3:9:=:A:
1E:I:O:S:W:[:_:e:k:o:s:w:}:
;7171
;!;%;);-;1;;17;;;?;C;G;K;Q;U;[;a;g;k;o;s;w;{;
N6icu_6416UnifiedCacheBaseE
N6icu_6412SharedObjectE
NSt3__120__shared_ptr_emplaceINS_5mutexENS_9allocatorIS1_EEEE
UTF-7
?456789:;<=
 !"#$%&'()*+,-./0123
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/d
IMAP-mailbox-name
N6icu_6410AppendableE
##!!((
###!!(
,,,,,,,,7/7,--..
++01
77-,,66
]Z`c^_Ya[\b
-VXW
:<<@@=
AOSCCCD>PEFL;;HHKIIIJ
G?NQB
@ 0d
5p:T
"*27
IO
v~
K4K<KDKLKTK\KdKlKtK,
AK5KE
JxJxJ
K4K4
KxK4
4K4K4
xKyK
xK4K5
RY
/3
im
;BJ@
$!$!$!$!$!$!$!$!'
-------------
----''*
666666666666666666003
<<<<<<<<<<<<<<<<<<99
BBBBBBBBBBBBB
BBB
??
iiiiiiiiiiiiiiil
ffffffffffffffffffff

EEEEEEEEEEEEEEEEEExuxuxu+
HHHHHHHHHHHHHHHHKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKNNKKKKKKKKKKQQQWT~{WTWTWTWTWTWTWTWTWTQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQWTWTQQQQQQQQQQQQQQQQQQQQQQQQQQQQWTQQZZZZZZZZZZZZ`ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ```ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ]ZZZ
N6icu_6415Normalizer2ImplE
ISCII
N6icu_6415RBBIRuleBuilderE
N6icu_6414UnicodeFunctorE
N6icu_646UStackE
.<(+|&
!$*);^-/
,%_>?
`:#@'="
abcdefghi
jklmnopqr
~stuvwxyz
{ABCDEFGHI
}JKLMNOPQR
STUVWXYZ
0123456789
.<(+|&
!$*);^-/
,%_>?
`:#@'="
abcdefghi
jklmnopqr
~stuvwxyz
{abcdefghi
}jklmnopqr
stuvwxyz
0123456789
7-./
<=2&
lP}M]\Nk`Ka
z^L~no
N6icu_648ByteSinkE
N6icu_6420CheckedArrayByteSinkE
UTF-16BE
UTF-16LE
UTF-16
UTF-16,version=2
i-defaultN6icu_6417StringEnumerationE
N6icu_6418UStringEnumerationE
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz
cnvalias
N6icu_647UObjectE
ISO_2022
ISO_2022_JP
!"#$%&'
#!V!W!"!&!r%!%#%%%'%)%c%e%g%C%<!"%$%&%(%*%+%-%/%1%3%5%7%9%;%=%?%A%D%F%H%J%K%L%M%N%O%R%U%X%[%^%_%`%a%b%d%f%h%i%j%k%l%m%o%s%+!,!
ISO_2022_KR
ISO_2022_CN
N6icu_6412DateIntervalE
N6icu_649UVector32E
Returns.
Returns %d.
Returns.  Status = %d.
Returns %d.  Status = %d.
Returns %d.  Status = %p.
N6icu_6413BreakIteratorE
CmnD
 Copyright (C) 2016 and later: Unicode, Inc. and others. License & terms of use: http://www.unicode.org/copyright.html 
icudt64l/brkitr/res_index.res
icudt64l/coll/en.res
icudt64l/coll/res_index.res
icudt64l/coll/root.res
icudt64l/coll/ucadata.icu
icudt64l/curr/en.res
icudt64l/curr/pool.res
icudt64l/curr/res_index.res
icudt64l/curr/root.res
icudt64l/curr/supplementalData.res
icudt64l/currencyNumericCodes.res
icudt64l/dayPeriods.res
icudt64l/en.res
icudt64l/icustd.res
icudt64l/icuver.res
icudt64l/keyTypeData.res
icudt64l/lang/res_index.res
icudt64l/likelySubtags.res
icudt64l/metaZones.res
icudt64l/metadata.res
icudt64l/nfkc.nrm
icudt64l/nfkc_cf.nrm
icudt64l/numberingSystems.res
icudt64l/pluralRanges.res
icudt64l/plurals.res
icudt64l/pool.res
icudt64l/rbnf/res_index.res
icudt64l/rbnf/root.res
icudt64l/region/res_index.res
icudt64l/res_index.res
icudt64l/root.res
icudt64l/supplementalData.res
icudt64l/timezoneTypes.res
icudt64l/translit/en.res
icudt64l/translit/root.res
icudt64l/ulayout.icu
icudt64l/unit/res_index.res
icudt64l/uts46.nrm
icudt64l/windowsZones.res
icudt64l/zone/en.res
icudt64l/zone/pool.res
icudt64l/zone/res_index.res
icudt64l/zone/root.res
icudt64l/zoneinfo64.res
ResB
InstalledLocales
ResB
Version
ResB
InstalledLocales
ResB
UCARules
Version
collations
default
emoji
Sequence
%%CollationBin
private-unihan
search
standard
%%DEPENDENCY
depends
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B&<
 @&<
 B&<
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B&<
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B&<
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&<
 @& 
 @& 
 @& 
 @& 
 @& 
 @&<
`&e&f&c&_&<
"&#&<
!4)5)=
!'8&/&
'&&*&.&=
H&I&J&K&L&M&N&O&P&Q&R&S&
@&B&<
&~&{&
'L'N'
'=03'4'G'< I S'T'U'W'00
  &<
 B& 
 B& 
 B& 
 B& 
 B& 
 B&&
 @& 
 @& 
 @& 
 @& 
 @& 
2 2 <
2 2 2 <
5 5 <
+"+"<
+"+"+"<
."."<
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
 D ;
0h0<
0u0B0<
0z0B0<
0P0<
0a0<
Y0O0
0i0<
0Y0<
0d0h0<
0~0<
0L0<
0d0h0<
0\0D0
0m0<
0Y0<
0}0<
0j0<
D0O0
0P0<
0a0<
0h0<
0Y0<
0W0<
d0h0<
0h0<
0d0<
D0d0<
0B0Y0h0
0S0<
0d0i0<
0h0<
0d0W0H0
0X0<
0_0<
O0_0
0]0<
0k0r0<
0d0<
0Y0<
0h0<
0h0<
0i0<
D0O0
d0o0<
0O0<
L0h0
0i0<
d0h0
0h0R0
d0h0<
O>y&
UCol
2irT
oB&x
!B&'
aB&'
"B&x
uB&x
AB&)
AB&(
AB&*
0B&x
AB&+
+B&x
AB&-
AB&,
AB&.
(B&x
AB&/
WB&x
AB&0
ZB&x
%B&x
AB&2
AB&1
AB&3
AB&4
AB&5
AB&7
AB&6
AB&8
AB&9
AB&:
AB&<
AB&;
AB&=
AB&>
]B&x
AB&?
AB&A
AB&@
AB&B
AB&C
AB&D
AB&F
AB&E
AB&G
<B&x
AB&H
?B&x
AB&I
`B&x
AB&K
AB&J
cB&x
AB&L
aB&Z
aB&Y
!B&Z
xB&x
!B&[
aB&[
{B&x
!B&\
aB&\
!B&^
!B&]
aB&]
BB&x
aB&_
aB&^
!B&_
EB&x
!B&`
aB&`
HB&x
!B&a
aB&a
KB&x
!B&c
!B&b
aB&b
NB&x
QB&x
TB&x
  &!&@&A&B&C&
'd'e'<
:Y:9:
zYzx
:H:(:
zHzp
9;(;
FYGHG:K(K
UYWHW
Z:[([
jykhkYkHk
t9{({
yyzhz
AAAAAAABAAA
hipx
08
H 
UCol
2irT
:Y:9:
:H:(:
9;(;
FYGHG:K(K
UYWHW
Z:[([
fyghgYgHg
l9s(s
qyrhr
AAAAAAABAAA
hipx
08
H 
UCol
2irT
UCol
UCol
2irT
T?b0
a1S9S
UFUAS>X
ISQS
ZaS0
VVX9d
ZgaWa
f$f,f<f@fOb_bobwb
d6XvW
d!dIdiSqS
XQdYdad
Xidpd
^~T0
.VvU
^)d~U
_G`'`
Z=[M[5[U[e[m[][NY}Yu[u[u[u[u[u[u[|[
[fYmY
YVYE[
\\\\/a
`vT_awaGb
iAiii
]nW^WPfxf
].Y6Y>Y
]yhy_Y_
fXfpf9_a_W`_`
,7-l-
.6/~/
536l6
6<7t7
N%OZO
O/PoP
#3;jz
 7 o 
"<"<"D"
",#4#j#<#
$6$V$^${$
%%%m%
%$&t&
'''?'w'
'()(O(g(
)6)F)n)
***P*
+-,P,
-'-/-G-\-
.N/n/
070O0g0o0
171e1
2Y2_2
323R3
3*4R4
5(5H5X5
6+6K6d6d
747L7|7
8"8Q8Q8Q8
8-959z9
;J;R;
;(<P<`<x<
>%>E>M>r>y>
?,?4?L?R?j?
@!@A@=
@=AMAkA~A
A0B^B~B
C5C=CUCeC
DODdD|D
E.ENEuE
E&F,F3FHFNFmF
F5G;GKG[GkGqGxG
H4H\HdH|H
IEI{I
I7JUJ
K7K_K
L(LPL
M<M\M|M
N1NoN
O=OBOkOsO
P'P?POPgP
QKQcQkQ
QM%)R_R
f<\@\G\
WIeQeXe`egejepewe
`o`-Z/`g`
V'c6V
Xf>V
]xd~d^X
c&W.W&Xgb7`5Z?`
4fHf(
e,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\
\,\,\,\,\,\0
bRZZZ
JZVT^T
b7bnT
>D?b?r?
F-GSG
O7P_P
PSQsQ
Q$Q,Q3QCQ
R!R1R9RARGRORgRwR
S%S0
7A8y8
9r:-;
><?z?a@5A
MQNRO
P[Q{Q
$#2Z?V
G'W'g'o'
(9(?(W(o(w(
>)N)^)@
*"*2*8*H*X*`*p*w*
+.+F+O
V+n+v+
,5,8,X,`,g,w,
-?-O-T-d-t-
.!.9.I.Y.q.P
 ' / ? &
!#!)!/!?!G!g!n!v!~!
"["["$"c"j"
#D#D#J#R#z#
O!,"
%D&7'
*~+@,
3"3*3:3Z3]3u3|3
J4b4z4
5 50585P5`5f5n5
;6S6U6t6\6|6
+CJr
]AcAsAvA
B(B8BHBNBVBfBvB
EC]CmC
C?DGDWD\DtD
EV=]=u=
>->5>U>Z>j>
@)@9@I@Z4i@y@
A%AEAz#
$.$F$f$k$
%U%]%u%}%
&<&L&\&d&l&|&
7,7D7T7d7l7^+
8*8.83898i8i8i8i8q8
M9U9]9
E E&E6EFEVEfEmE}E
F;F@FVFVF]F}F
H$H<HDHLHtH
I%I-I]
G g 
!4"z"
"$#b#
MM$M4M,MLMTMdMlMtM
N!N9NINYN_NgNwN
N5OJObOcO{O
O-OGPWPwP5IMITI[IcIsI
J'J/J?JEJ]JeJmJ}J
K#K'K?KGKWKgKoK
L L0L8LHLXL`LhLxL
*>+f+%,
4v5#6
/(/./>/V/^/
f/v/
"0'0G0W0
0'1?1F1M1]1m1}1
2+21292Q2o2w2
-1.i.
3"4r4
:4:j:
?1@q@
9':,:<:B:R:y.b:z:
;%;=;B;b;b;j;q;
< <8<@<X<p<
=/=6=>=F=
KwK@L
R-S0
^W\^\f\j\fW0
(g0g4g
^GaOa
LgDgTgXgng
dvg|g
cnX_^NV
U^V/c
Ug^7c
OcRc
ZcnV
bcvV
U!_0
cvX0
3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h3h
`g`g`gfg
^$\$\4\
T'T.T6T0
e>T0
e>U0
TNT0
g'^0
Y7^0
X?^G^
YO^0
1e9eAe0
!e)e
A_W^
fo^0
V!_0
Y'a?a0
gNWz\0
 gVW0
X$h$h$h$h$h$h+h0
_q_i_0
Y)]0
1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]1]k]k]k]k]k]k]n]v]~]~]~]
9]=]=]A]I]Q]W][]
]!]c]0
fhhhhhhhhhhhhhhhhhhhhhhih0
ChChChChChChChChChChChChChChChChChChJh0
RhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhRhTh\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h\h`h0
i!i1i
hIiQiYiqiyi
34.
]}| 
\{ pf{ 
p2w 
VW
 :&;&
,0-1-K0L0
1W[X[
:Y:9:
:H:(:
9;(;
FYGHG:K(K
UYWHW
Z:[([
jykhkYkHk
t9{({
yyzhz
AAAAAAABAAA
hipx
08
H 
e2e3e
uLuNuOu^u`ubu
v&v(v*v0v4v6v
xLx^x_xex
|V|X|\|]|_|a|b|c|i|s|u|v|w|}|
}"}S}d}
ResB
p,;C
*End
,C~a
GF.e
dG~g
UGUG
ResB
 Currencies
Currencies%narrow
Currencies%variant
CurrencyPlurals
other
CurrencyUnitPatterns
Version
many
zero
%%ALIAS
%%Parent
calendar
default
currencySpacing
afterCurrency
currencyMatch
insertBetween
surroundingMatch
beforeCurrency
Currencies%formal
wcKQKQ
wm0W
^txQKQ
[Wl<\
RaWCQ
zf)R
SYr)R
bTXaS
OKQKQ
TKQ"}
sYrj
^X>r
wcKQ
OKQlxKQ
M-I-M-0-O-J-I-O-I-
b+Y,{
}>rlxc^
}~^gQ
k)RBf
l\~^gQ
<-T-0-O-=- 
Z-I-<-0-
b+Y*c
k)RBf
ZCQ 
ZCQ 
Y-I-7-I- 
V-0-O-0-
Nc^ 
b/Oo
T'YlQ
>rWl
0-J-O-I-@- 
N-I-Z-U-
Pk2m
UMO 
Pk2m
UMO 
Pk2m
UMO 
Pk2m
UMO 
k^XTX
0-7-I-O-0-T- 
\-S-O-Y-
0-T-S-1-I- 
M-@-I-O-7-
0-T-S-1-I- 
N-S-T-I-Y-
0-b-0-O- 
M-b-0-1-0-O-
0-b-0-O- 
[-[-I-O-a-0-
1-I-T- 
I-\-b-S-1-b-0-
<-T-0-O-=- 
=-S-O-3-S-
<-T-0-O-=- 
G-S-N-S-U-
M-S-\-I- 
M-I-Z-S-_-S-
UMO 
0-7-I-O-0-T- 
7-c-0-b-T-
0-7-I-O-0-T- 
M-I-1-b-0-
0-7-T-I-N- 
M-N-V-T-I-1-
0-J-O-I-@- 
Y-Y-S-7-0-O-
0-T-S-1-I- 
Y-Y-I-[-I-M-
0-[-I-M-I-O- 
=-I-O-b-0-
=-a-0-[-0- 
N-0-M-0-a-I-
0-7-I-O-0-T- 
1-C-T-0-b-O-
0-7-I-O-0-T- 
Y-Y-S-7-0-O-
0-7-S-M-0-T- 
=-0-O-0-7-0-
0-7-T-I-N- 
M-I-N-0-T-0-\-
0-<-T-0-O-=- 
T-a-0-O-7-0-
0-<-T-0-O-=- 
Y-a-I-Y-T-0-
0-=-a-0-[-0- 
c-0-N-1-b-0-
0-[-I-M-I-O- 
S-V-0-O-7-0-
0-[-I-M-I-O- 
Z-Z-S-N-0-M-
7-0-M-0-Y-I- 
3-0-N-1-b-0-
<-T-0-O-=- 
1-S-T-S-O-7-I-
<-T-0-O-=- 
7-J-I-1-S-\-I-
=-a-0-O-c-0- 
0-O-3-S-M-0-
O-0-b-T-0- 
O-I-J-I-T-b-0-
k^XTX
[Wl<\ 
ZCQ 
0-1-S-M-0- 
1-S-\-Y-a-0-O-0-
0-7-S-1-T-0- 
Y-0-O-_-S-N-I-
0-7-S-M-0-T- 
M-I-1-I-T-b-0-
0-7-S-M-0-T- 
O-0-N-I-1-b-0-
0-J-O-I-@- 
Y-0-O-\-I-M-I-O-
<-T-0-O-=- 
Z-I-<-0- 
1-I-Y-0-a-
O-0-<-=-0- 
I-T-I-\-I-T-b-0-
b"} 
b"} 
b"} 
0-7-S-M-0-T- 
S-Y-\-T-0-M-b-0-
0-N-I-\-I-=-M- 
N-S-c-O-1-I-G-
0-T-b-0-M- 
Y-Y-0-D-S-7-I-b-0-
0-[-I-M-I-O- 
_-0-O-e-0-O-b-0-
I-Y-=-S-7-S- 
=-0-1-1-I-T-7-I-
LNr^
Y>r1u
efW 
[Nb 
[Nb 
lpQyQW
pr^T
b"} 
<-T-0-O-=- 
N-0-7-0-V-0-[-G-0-T-
S-G-I-b-b-0- 
N-S-U-I-_-0-O-b-0-
KQ>r 
}yr 
b"} 
[Nb 
[Nb 
}>r 
}yr 
YgQ^t
[Nb 
RKQ 
)RTX<\
aS>r 
0-7-S-M-0-T- 
I-a-S-O-0-=- 
I-N-S-O-O-
b+Y9ei
}>r 
0-J-O-I-@- 
0-Y-\-T-M-I-O-I- 
O-O-3-M-I-c-
0-T-0-O-7- 
0-<-T-I-G-b-0- 
I-<-<-S-Y-
0-=-a-0-[-0- 
c-0-N-1-b-0- 
0-7-S-1-T-0- 
Y-0-O-_-S-N-I- 
S-G-I-b-b-0- 
N-S-U-I-_-0-O-b-0- 
ResB
InstalledLocales
ResB
~%|%
~%|%
ResB
CurrencyMap
from
tender
CurrencyMeta
DEFAULT
ResB
codeMap
ResB
locales
es_CO
root
locales_selection
rules
set1
before
from
set10
afternoon1
evening1
midnight
morning1
night1
noon
set100
morning2
set101
set102
set103
set104
set105
set106
set107
set108
set109
set11
set110
set111
afternoon2
night2
set112
set113
set114
set115
set116
set117
set118
set119
evening2
set12
set120
set121
set122
set123
set124
set125
set126
set127
set128
set129
set13
set130
set131
set132
set133
set134
set135
set136
set137
set138
set139
set14
set140
set141
set142
set143
set144
set145
set146
set147
set148
set149
set15
set150
set151
set152
set153
set154
set155
set156
set16
set17
set18
set19
set2
set20
set21
set22
set23
set24
set25
set26
set27
set28
set29
set3
set30
set31
set32
set33
set34
set35
set36
set37
set38
set39
set4
set40
set41
set42
set43
set44
set45
set46
set47
set48
set49
set5
set50
set51
set52
set53
set54
set55
set56
set57
set58
set59
set6
set60
set61
set62
set63
set64
set65
set66
set67
set68
set69
set7
set70
set71
set72
set73
set74
set75
set76
set77
set78
set79
set8
set80
set81
set82
set83
set84
set85
set86
set87
set88
set89
set9
set90
set91
set92
set93
set94
set95
set96
set97
set98
set99
ResB
"5"5
!5!5
 5 5
[h[h
yhyh
lOlOlO
I0={H
VaH|<$=
IhIh
[h[h
yhyh
IhIh
i iI
.=.8,
|Vc\
|Vc@gec
|Vc\
IhIh
[h[h
yhyh
lOlOlO
v#*1h1h
$Q<js
Z4Z4[
N1h1h
{-Ct
Fddd
9`::
9-9-
x@x@
x7x7
YFYF
O-*2Y1
D-D-
5JSK
dXxZ
fFfF
%F%F
2F2F
(JFKvJ
?F?F
LFLF
ResB
StandardICU
ResB
DataVersion
ICUVersion
ResB
bcpTypeAlias
islamicc
keyInfo
deprecated
valueType
keyMap
calendar
colalternate
colbackwards
colcasefirst
colcaselevel
colhiraganaquaternary
collation
colnormalization
colnumeric
colreorder
colstrength
currency
hours
measure
numbers
timezone
variabletop
typeAlias
quarternary
typeInfo
direct
camtr
typeMap
buddhist
chinese
coptic
dangi
ethiopic
ethiopic-amete-alem
gregorian
hebrew
indian
islamic
islamic-civil
islamic-rgsa
islamic-tbla
islamic-umalqura
iso8601
japanese
persian
account
standard
non-ignorable
shifted
lower
upper
big5han
compat
dictionary
ducet
emoji
gb2312han
phonebook
phonetic
pinyin
reformed
search
searchjl
stroke
traditional
unihan
zhuyin
REORDER_CODE
digit
punct
space
symbol
identical
primary
secondary
tertiary
accents
ascii
casefold
fullwidth
halfwidth
name
nfkc
nfkd
null
numericPinyin
publishing
remove
title
zawgyi
default
text
hybrid
handwrit
wubi
101key
102key
600dpi
768dpi
android
azerty
chromeos
colemak
dvorak
dvorakl
dvorakr
el220
el319
extended
googlevk
isiri
legacy
lt1205
lt1582
nutaaq
patta
qwerty
qwertz
ta99
viqr
windows
loose
normal
strict
breakall
keepall
alaloc
buckwalt
ewts
gost
iast
java
mcst
names
percent
perl
plain
satts
ungegn
unicode
xml10
imperial
metric
ussystem
adlm
ahom
arab
arabext
armn
armnlow
bali
beng
bhks
brah
cakm
cham
cyrl
deva
ethi
finance
fullwide
geor
gong
gonm
grek
greklow
gujr
guru
hanidays
hanidec
hans
hansfin
hant
hantfin
hebr
hmng
hmnp
jpan
jpanfin
jpanyear
kali
khmr
knda
lana
lanatham
laoo
latn
lepc
limb
mathbold
mathdbl
mathmono
mathsanb
mathsans
mlym
modi
mong
mroo
mtei
mymr
mymrshan
mymrtlng
native
newa
nkoo
olck
orya
osma
rohg
roman
romanlow
saur
shrd
sind
sinh
sora
sund
takr
talu
taml
tamldec
telu
thai
tibt
tirh
vaii
wara
wcho
RG_KEY_VALUE
SUBDIVISION_CODE
none
posix
CODEPOINTS
PRIVATE_USE
ResB
InstalledLocales
ResB
arc_Nbat
arc_Palm
az_Arab
az_IQ
az_IR
az_RU
cu_Glag
en_Shaw
ff_Adlm
grc_Linb
ha_CM
ha_SD
kk_AF
kk_Arab
kk_CN
kk_IR
kk_MN
ku_Arab
ku_LB
ky_Arab
ky_CN
ky_Latn
ky_TR
lif_Limb
man_GN
man_Nkoo
mis_Medf
mn_CN
mn_Mong
ms_CC
ms_ID
pa_Arab
pa_PK
pal_Phlp
rif_NL
sd_Deva
sd_Khoj
sd_Sind
sr_ME
sr_RO
sr_RU
sr_TR
tg_Arab
tg_PK
ug_Cyrl
ug_KZ
ug_MN
und_002
und_003
und_005
und_009
und_011
und_013
und_014
und_015
und_017
und_018
und_019
und_021
und_029
und_030
und_034
und_035
und_039
und_053
und_054
und_057
und_061
und_142
und_143
und_145
und_150
und_151
und_154
und_155
und_202
und_419
und_AD
und_AE
und_AF
und_AL
und_AM
und_AO
und_AQ
und_AR
und_AS
und_AT
und_AW
und_AX
und_AZ
und_Adlm
und_Aghb
und_Ahom
und_Arab
und_Arab_CC
und_Arab_CN
und_Arab_GB
und_Arab_ID
und_Arab_IN
und_Arab_KH
und_Arab_MM
und_Arab_MN
und_Arab_MU
und_Arab_NG
und_Arab_PK
und_Arab_TG
und_Arab_TH
und_Arab_TJ
und_Arab_TR
und_Arab_YT
und_Armi
und_Armn
und_Avst
und_BA
und_BD
und_BE
und_BF
und_BG
und_BH
und_BI
und_BJ
und_BL
und_BN
und_BO
und_BQ
und_BR
und_BT
und_BV
und_BY
und_Bali
und_Bamu
und_Bass
und_Batk
und_Beng
und_Bhks
und_Bopo
und_Brah
und_Brai
und_Bugi
und_Buhd
und_CD
und_CF
und_CG
und_CH
und_CI
und_CL
und_CM
und_CN
und_CO
und_CP
und_CR
und_CU
und_CV
und_CW
und_CY
und_CZ
und_Cakm
und_Cans
und_Cari
und_Cham
und_Cher
und_Copt
und_Cprt
und_Cyrl
und_Cyrl_AL
und_Cyrl_BA
und_Cyrl_GE
und_Cyrl_GR
und_Cyrl_MD
und_Cyrl_RO
und_Cyrl_SK
und_Cyrl_TR
und_Cyrl_XK
und_DE
und_DJ
und_DK
und_DO
und_DZ
und_Deva
und_Deva_BT
und_Deva_FJ
und_Deva_MU
und_Deva_PK
und_Dogr
und_Dupl
und_EA
und_EC
und_EE
und_EG
und_EH
und_ER
und_ES
und_ET
und_EU
und_EZ
und_Egyp
und_Elba
und_Elym
und_Ethi
und_FI
und_FO
und_FR
und_GA
und_GE
und_GF
und_GH
und_GL
und_GN
und_GP
und_GQ
und_GR
und_GS
und_GT
und_GW
und_Geor
und_Glag
und_Gong
und_Gonm
und_Goth
und_Gran
und_Grek
und_Grek_TR
und_Gujr
und_Guru
und_HK
und_HM
und_HN
und_HR
und_HT
und_HU
und_Hanb
und_Hang
und_Hani
und_Hano
und_Hans
und_Hant
und_Hatr
und_Hebr
und_Hebr_CA
und_Hebr_GB
und_Hebr_SE
und_Hebr_UA
und_Hebr_US
und_Hira
und_Hluw
und_Hmng
und_Hmnp
und_Hung
und_IC
und_ID
und_IL
und_IN
und_IQ
und_IR
und_IS
und_IT
und_Ital
und_JO
und_JP
und_Jamo
und_Java
und_Jpan
und_KE
und_KG
und_KH
und_KM
und_KP
und_KR
und_KW
und_KZ
und_Kali
und_Kana
und_Khar
und_Khmr
und_Khoj
und_Knda
und_Kore
und_Kthi
und_LA
und_LB
und_LI
und_LK
und_LS
und_LT
und_LU
und_LV
und_LY
und_Lana
und_Laoo
und_Latn_AF
und_Latn_AM
und_Latn_CN
und_Latn_CY
und_Latn_DZ
und_Latn_ET
und_Latn_GE
und_Latn_IR
und_Latn_KM
und_Latn_MA
und_Latn_MK
und_Latn_MM
und_Latn_MO
und_Latn_MR
und_Latn_RU
und_Latn_SY
und_Latn_TN
und_Latn_TW
und_Latn_UA
und_Lepc
und_Limb
und_Lina
und_Linb
und_Lisu
und_Lyci
und_Lydi
und_MA
und_MC
und_MD
und_ME
und_MF
und_MG
und_MK
und_ML
und_MM
und_MN
und_MO
und_MQ
und_MR
und_MT
und_MU
und_MV
und_MX
und_MY
und_MZ
und_Mahj
und_Maka
und_Mand
und_Mani
und_Marc
und_Medf
und_Mend
und_Merc
und_Mero
und_Mlym
und_Modi
und_Mong
und_Mroo
und_Mtei
und_Mult
und_Mymr
und_Mymr_IN
und_Mymr_TH
und_NA
und_NC
und_NE
und_NI
und_NL
und_NO
und_NP
und_Nand
und_Narb
und_Nbat
und_Newa
und_Nkoo
und_Nshu
und_OM
und_Ogam
und_Olck
und_Orkh
und_Orya
und_Osge
und_Osma
und_PA
und_PE
und_PF
und_PG
und_PH
und_PK
und_PL
und_PM
und_PR
und_PS
und_PT
und_PW
und_PY
und_Palm
und_Pauc
und_Perm
und_Phag
und_Phli
und_Phlp
und_Phnx
und_Plrd
und_Prti
und_QA
und_QO
und_RE
und_RO
und_RS
und_RU
und_RW
und_Rjng
und_Rohg
und_Runr
und_SA
und_SC
und_SD
und_SE
und_SI
und_SJ
und_SK
und_SM
und_SN
und_SO
und_SR
und_ST
und_SV
und_SY
und_Samr
und_Sarb
und_Saur
und_Sgnw
und_Shaw
und_Shrd
und_Sidd
und_Sind
und_Sinh
und_Sogd
und_Sogo
und_Sora
und_Soyo
und_Sund
und_Sylo
und_Syrc
und_TD
und_TF
und_TG
und_TH
und_TJ
und_TK
und_TL
und_TM
und_TN
und_TO
und_TR
und_TV
und_TW
und_TZ
und_Tagb
und_Takr
und_Tale
und_Talu
und_Taml
und_Tang
und_Tavt
und_Telu
und_Tfng
und_Tglg
und_Thaa
und_Thai
und_Thai_CN
und_Thai_KH
und_Thai_LA
und_Tibt
und_Tirh
und_UA
und_UG
und_UY
und_UZ
und_Ugar
und_VA
und_VE
und_VN
und_VU
und_Vaii
und_WF
und_WS
und_Wara
und_Wcho
und_XK
und_Xpeo
und_Xsux
und_YE
und_YT
und_Yiii
und_ZW
und_Zanb
unr_Deva
unr_NP
uz_AF
uz_Arab
uz_CN
yue_CN
yue_Hans
zh_AU
zh_BN
zh_Bopo
zh_GB
zh_GF
zh_HK
zh_Hanb
zh_Hant
zh_ID
zh_MO
zh_MY
zh_PA
zh_PF
zh_PH
zh_SR
zh_TH
zh_TW
zh_US
zh_VN
!%)K
-159=A
EI@"MQUY
]aeimquy}
 " % ) - 0 4 8 < @ D G K O S 
 W [ _ c g k o s w { 
!#!'!+!/!3!7!;!?!C!G!K!O!S!W![!W
_!c!g!k!o!
s!w!{!5
"#")"/"3"7";"?"C"F")
 2 > J V b n z 
:!F!
R!^!j!v!
N"Z"^
f"r"~"
#&#2#>#
J#V#b#n#z#
$"$.$:$F$R$^$j$v$
%*%6%B%N%
f%r%~%
&&&;
2&>&J&V&b&n&z&o
'"'Q
.'F'R'
^'j'
6(B(N(Z(f(r(
&)2)>)J)V)
b)n).
*"*.*:*F*R*v*
6+B+N+
Z+f+r+~+-
2,>,J,V,b,n,z,
-"-.-:-F-R-^-j-v-
.*.6.B.N.Z.
f.r.~.
&/2/J/
b/n/z/
"0.0:0F0R0^0j0
61B1N1Z1f1r1~1
2&222>2J2b2n2z2
3"3.3:3:
F3R3^3j3v3
4*464B45N4Z4
f4r4~4
5&525>5J5
V5b5n5z5
6"6.6l:6F6
R6^6v6
7*767B7
N7Z7
f7r7~7
8&828>8J8
V8b8n8
"9.9B
R9^9j9v9
:*:r
N:Z:f:t
r:~:
;&;2;
>;J;V;b;
n;z;
<"<.<F<
R<^<j<
=*=6=B=
N=Z=f=r=~=
&>2>>>J>V>!
n>z>
"?.?:?F?R?M
^?j?v?
@*@6@N@Z@f@
r@~@n
A&A2A>AJA
VAbA
nAzA
B"B.B:BFB7
RB^BjBvB
6CBC
B@& 
^*j*
&D2D>DJDVDbDnDzD
E"E.E:EFERE^EjEvE
NFZFfF
G&G2G>GJGVGbGnGzG
H"H.H
:HFHRH^H
ResB
mapTimezones
Acre
Afghanistan
Africa_Central
Africa_Eastern
Africa_FarWestern
Africa_Southern
Africa_Western
Aktyubinsk
Alaska
Alaska_Hawaii
Amazon
America_Central
America_Eastern
America_Mountain
America_Pacific
Arabian
Argentina
Argentina_Western
Armenia
Ashkhabad
Atlantic
Australia_Central
Australia_CentralWestern
Australia_Eastern
Australia_Western
Azerbaijan
Bangladesh
Bering
Bhutan
Bolivia
Borneo
Brasilia
British
Chamorro
Chile
China
Colombia
Cook
Cuba
Dacca
Dominican
Dutch_Guiana
East_Timor
Ecuador
Europe_Central
Europe_Eastern
Europe_Further_Eastern
Europe_Western
Falkland
French_Guiana
French_Southern
Frunze
Gilbert_Islands
Greenland_Central
Greenland_Eastern
Greenland_Western
Gulf
Hawaii_Aleutian
India
Indian_Ocean
Indochina
Indonesia_Central
Indonesia_Eastern
Indonesia_Western
Iran
Irish
Israel
Japan
Kazakhstan_Eastern
Kazakhstan_Western
Kizilorda
Korea
Kuybyshev
Kyrgystan
Lanka
Liberia
Line_Islands
Malaya
Malaysia
Marshall_Islands
Mexico_Northwest
Mexico_Pacific
Mongolia
Myanmar
Nepal
New_Caledonia
New_Zealand
Newfoundland
North_Mariana
Pakistan
Papua_New_Guinea
Paraguay
Peru
Philippines
Phoenix_Islands
Pierre_Miquelon
Samoa
Seychelles
Shevchenko
Solomon
Suriname
Sverdlovsk
Tajikistan
Tokelau
Tonga
Turkey
Turkmenistan
Tuvalu
Uralsk
Uruguay
Uzbekistan
Vanuatu
Venezuela
Yukon
metazoneInfo
Africa:Abidjan
Africa:Accra
Africa:Addis_Ababa
Africa:Algiers
Africa:Asmera
Africa:Bamako
Africa:Bangui
Africa:Banjul
Africa:Bissau
Africa:Blantyre
Africa:Brazzaville
Africa:Bujumbura
Africa:Cairo
Africa:Casablanca
Africa:Ceuta
Africa:Conakry
Africa:Dakar
Africa:Dar_es_Salaam
Africa:Djibouti
Africa:Douala
Africa:El_Aaiun
Africa:Freetown
Africa:Gaborone
Africa:Harare
Africa:Johannesburg
Africa:Juba
Africa:Kampala
Africa:Khartoum
Africa:Kigali
Africa:Kinshasa
Africa:Lagos
Africa:Libreville
Africa:Lome
Africa:Luanda
Africa:Lubumbashi
Africa:Lusaka
Africa:Malabo
Africa:Maputo
Africa:Maseru
Africa:Mbabane
Africa:Mogadishu
Africa:Monrovia
Africa:Nairobi
Africa:Ndjamena
Africa:Niamey
Africa:Nouakchott
Africa:Ouagadougou
Africa:Porto-Novo
Africa:Sao_Tome
Africa:Tripoli
Africa:Tunis
Africa:Windhoek
America:Adak
America:Anchorage
America:Anguilla
America:Antigua
America:Araguaina
America:Argentina:La_Rioja
America:Argentina:Rio_Gallegos
America:Argentina:Salta
America:Argentina:San_Juan
America:Argentina:San_Luis
America:Argentina:Tucuman
America:Argentina:Ushuaia
America:Aruba
America:Asuncion
America:Bahia
America:Bahia_Banderas
America:Barbados
America:Belem
America:Belize
America:Blanc-Sablon
America:Boa_Vista
America:Bogota
America:Boise
America:Buenos_Aires
America:Cambridge_Bay
America:Campo_Grande
America:Cancun
America:Caracas
America:Catamarca
America:Cayenne
America:Cayman
America:Chicago
America:Chihuahua
America:Coral_Harbour
America:Cordoba
America:Costa_Rica
America:Creston
America:Cuiaba
America:Curacao
America:Danmarkshavn
America:Dawson
America:Dawson_Creek
America:Denver
America:Detroit
America:Dominica
America:Edmonton
America:Eirunepe
America:El_Salvador
America:Fort_Nelson
America:Fortaleza
America:Glace_Bay
America:Godthab
America:Goose_Bay
America:Grand_Turk
America:Grenada
America:Guadeloupe
America:Guatemala
America:Guayaquil
America:Guyana
America:Halifax
America:Havana
America:Hermosillo
America:Indiana:Knox
America:Indiana:Marengo
America:Indiana:Petersburg
America:Indiana:Tell_City
America:Indiana:Vevay
America:Indiana:Vincennes
America:Indiana:Winamac
America:Indianapolis
America:Inuvik
America:Iqaluit
America:Jamaica
America:Jujuy
America:Juneau
America:Kentucky:Monticello
America:Kralendijk
America:La_Paz
America:Lima
America:Los_Angeles
America:Louisville
America:Lower_Princes
America:Maceio
America:Managua
America:Manaus
America:Marigot
America:Martinique
America:Matamoros
America:Mazatlan
America:Mendoza
America:Menominee
America:Merida
America:Metlakatla
America:Mexico_City
America:Miquelon
America:Moncton
America:Monterrey
America:Montevideo
America:Montserrat
America:Nassau
America:New_York
America:Nipigon
America:Nome
America:Noronha
America:North_Dakota:Beulah
America:North_Dakota:Center
America:North_Dakota:New_Salem
America:Ojinaga
America:Panama
America:Pangnirtung
America:Paramaribo
America:Phoenix
America:Port-au-Prince
America:Port_of_Spain
America:Porto_Velho
America:Puerto_Rico
America:Punta_Arenas
America:Rainy_River
America:Rankin_Inlet
America:Recife
America:Regina
America:Resolute
America:Rio_Branco
America:Santa_Isabel
America:Santarem
America:Santiago
America:Santo_Domingo
America:Sao_Paulo
America:Scoresbysund
America:Sitka
America:St_Barthelemy
America:St_Johns
America:St_Kitts
America:St_Lucia
America:St_Thomas
America:St_Vincent
America:Swift_Current
America:Tegucigalpa
America:Thule
America:Thunder_Bay
America:Tijuana
America:Toronto
America:Tortola
America:Vancouver
America:Whitehorse
America:Winnipeg
America:Yakutat
America:Yellowknife
Antarctica:Casey
Antarctica:Davis
Antarctica:DumontDUrville
Antarctica:Macquarie
Antarctica:Mawson
Antarctica:McMurdo
Antarctica:Palmer
Antarctica:Rothera
Antarctica:Syowa
Antarctica:Troll
Antarctica:Vostok
Arctic:Longyearbyen
Asia:Aden
Asia:Almaty
Asia:Amman
Asia:Anadyr
Asia:Aqtau
Asia:Aqtobe
Asia:Ashgabat
Asia:Atyrau
Asia:Baghdad
Asia:Bahrain
Asia:Baku
Asia:Bangkok
Asia:Beirut
Asia:Bishkek
Asia:Brunei
Asia:Calcutta
Asia:Chita
Asia:Choibalsan
Asia:Colombo
Asia:Damascus
Asia:Dhaka
Asia:Dili
Asia:Dubai
Asia:Dushanbe
Asia:Famagusta
Asia:Gaza
Asia:Hebron
Asia:Hong_Kong
Asia:Hovd
Asia:Irkutsk
Asia:Jakarta
Asia:Jayapura
Asia:Jerusalem
Asia:Kabul
Asia:Kamchatka
Asia:Karachi
Asia:Katmandu
Asia:Khandyga
Asia:Krasnoyarsk
Asia:Kuala_Lumpur
Asia:Kuching
Asia:Kuwait
Asia:Macau
Asia:Magadan
Asia:Makassar
Asia:Manila
Asia:Muscat
Asia:Nicosia
Asia:Novokuznetsk
Asia:Novosibirsk
Asia:Omsk
Asia:Oral
Asia:Phnom_Penh
Asia:Pontianak
Asia:Pyongyang
Asia:Qatar
Asia:Qostanay
Asia:Qyzylorda
Asia:Rangoon
Asia:Riyadh
Asia:Saigon
Asia:Sakhalin
Asia:Samarkand
Asia:Seoul
Asia:Shanghai
Asia:Singapore
Asia:Srednekolymsk
Asia:Taipei
Asia:Tashkent
Asia:Tbilisi
Asia:Tehran
Asia:Thimphu
Asia:Tokyo
Asia:Ulaanbaatar
Asia:Urumqi
Asia:Ust-Nera
Asia:Vientiane
Asia:Vladivostok
Asia:Yakutsk
Asia:Yekaterinburg
Asia:Yerevan
Atlantic:Azores
Atlantic:Bermuda
Atlantic:Canary
Atlantic:Cape_Verde
Atlantic:Faeroe
Atlantic:Madeira
Atlantic:Reykjavik
Atlantic:South_Georgia
Atlantic:St_Helena
Atlantic:Stanley
Australia:Adelaide
Australia:Brisbane
Australia:Broken_Hill
Australia:Currie
Australia:Darwin
Australia:Eucla
Australia:Hobart
Australia:Lindeman
Australia:Lord_Howe
Australia:Melbourne
Australia:Perth
Australia:Sydney
CST6CDT
EST5EDT
Etc:GMT
Europe:Amsterdam
Europe:Andorra
Europe:Astrakhan
Europe:Athens
Europe:Belgrade
Europe:Berlin
Europe:Bratislava
Europe:Brussels
Europe:Bucharest
Europe:Budapest
Europe:Busingen
Europe:Chisinau
Europe:Copenhagen
Europe:Dublin
Europe:Gibraltar
Europe:Guernsey
Europe:Helsinki
Europe:Isle_of_Man
Europe:Istanbul
Europe:Jersey
Europe:Kaliningrad
Europe:Kiev
Europe:Lisbon
Europe:Ljubljana
Europe:London
Europe:Luxembourg
Europe:Madrid
Europe:Malta
Europe:Mariehamn
Europe:Minsk
Europe:Monaco
Europe:Moscow
Europe:Oslo
Europe:Paris
Europe:Podgorica
Europe:Prague
Europe:Riga
Europe:Rome
Europe:Samara
Europe:San_Marino
Europe:Sarajevo
Europe:Saratov
Europe:Simferopol
Europe:Skopje
Europe:Sofia
Europe:Stockholm
Europe:Tallinn
Europe:Tirane
Europe:Ulyanovsk
Europe:Uzhgorod
Europe:Vaduz
Europe:Vatican
Europe:Vienna
Europe:Vilnius
Europe:Volgograd
Europe:Warsaw
Europe:Zagreb
Europe:Zaporozhye
Europe:Zurich
Indian:Antananarivo
Indian:Chagos
Indian:Christmas
Indian:Cocos
Indian:Comoro
Indian:Kerguelen
Indian:Mahe
Indian:Maldives
Indian:Mauritius
Indian:Mayotte
Indian:Reunion
MST7MDT
PST8PDT
Pacific:Apia
Pacific:Auckland
Pacific:Bougainville
Pacific:Chatham
Pacific:Easter
Pacific:Efate
Pacific:Enderbury
Pacific:Fakaofo
Pacific:Fiji
Pacific:Funafuti
Pacific:Galapagos
Pacific:Gambier
Pacific:Guadalcanal
Pacific:Guam
Pacific:Honolulu
Pacific:Johnston
Pacific:Kiritimati
Pacific:Kosrae
Pacific:Kwajalein
Pacific:Majuro
Pacific:Marquesas
Pacific:Midway
Pacific:Nauru
Pacific:Niue
Pacific:Norfolk
Pacific:Noumea
Pacific:Pago_Pago
Pacific:Palau
Pacific:Pitcairn
Pacific:Ponape
Pacific:Port_Moresby
Pacific:Rarotonga
Pacific:Saipan
Pacific:Tahiti
Pacific:Tarawa
Pacific:Tongatapu
Pacific:Truk
Pacific:Wake
Pacific:Wallis
primaryZones
M!s!
"d#z#
!"$"
*"-"0"3"6"9"
J \ C
!!.!V
m!~!I
,;K]s
 $ 1 B T d x 
!&!6!E!W!e!v!
ResB
alias
language
aa_SAAHO
reason
replacement
art_lojban
az_AZ
bs_BA
cel-gaulish
ha_Latn_GH
ha_Latn_NE
ha_Latn_NG
i-default
i-enochian
i-mingo
i_ami
i_bnn
i_hak
i_klingon
i_lux
i_navajo
i_pwn
i_tao
i_tay
i_tsu
kk_Cyrl_KZ
ks_Arab_IN
ky_Cyrl_KG
mn_Cyrl_MN
ms_Latn_BN
ms_Latn_MY
ms_Latn_SG
no_BOKMAL
no_NYNORSK
no_bok
no_nyn
pa_IN
pa_PK
sgn_BE_FR
sgn_BE_NL
sgn_CH_DE
shi_MA
sr_BA
sr_ME
sr_RS
sr_XK
tzm_Latn_MA
ug_Arab_CN
uz_AF
uz_UZ
vai_LR
yue_CN
yue_HK
zh-min
zh_CN
zh_HK
zh_MO
zh_SG
zh_TW
zh_guoyu
zh_hakka
zh_min_nan
zh_xiang
script
Qaai
subdivision
cn11
cn12
cn13
cn14
cn15
cn21
cn22
cn23
cn31
cn32
cn33
cn34
cn35
cn36
cn37
cn41
cn42
cn43
cn44
cn45
cn46
cn50
cn51
cn52
cn53
cn54
cn61
cn62
cn63
cn64
cn65
cn71
cn91
cn92
cz10a
cz10b
cz10c
cz10d
cz10e
cz10f
cz611
cz612
cz613
cz614
cz615
cz621
cz622
cz623
cz624
cz626
cz627
czjc
czjm
czka
czkr
czli
czmo
czol
czpa
czpl
czpr
czst
czus
czvy
czzl
escn
fi01
frbl
frcp
frgf
frgp
frmf
frmq
frnc
frpf
frpm
frre
frtf
frwf
fryt
laxn
mrnkc
nlaw
nlcw
nlsx
omba
omsh
plds
plkp
pllb
plld
pllu
plma
plmz
plop
plpd
plpk
plpm
plsk
plsl
plwn
plwp
plzp
shta
tteto
ttrcm
ttwto
twkhq
twtnq
twtpq
twtxq
usas
usgu
usmp
uspr
usum
usvi
territory
variant
AALAND
HEPLOC
POLYTONI
arevela
arevmda
heploc
defaultContent
")
ho|
v}
"&*.26:>BFJNRVZ^bfjnrvz~
Nrm2
3irT
%3s
"5#u#
#3$s$
$0%p%
%.&n&
'''3'+
>'N'+
()(6(+
B(P(`(+
),)<)L)\)2)B)R)()8)H)X).)>)N)$)4)D)l)|)
*"*2*B*R*b*q*b*+
+!+1++
A+Q+a+q+
,!,1,A,Q,a,q,
-!-1-A-Q-+
m)q)t){)
 n
.<p
JT
^h
r|
` `.`
* *&*,*2*
9*<*
)@*E*
t)X*
<`H`
s*y*
f8+D+L+X+
, ,A
%,),-,1,5,8,
, ,%,),<,1,5,
E,H,M,Q,
+T,Y,],a,e,i,m,
q,u,
y,},
 ( 2 < F P X ^ d j r | 
/!9!C!M!
W!a!k!u!
")"3"="G"Q"
\`w"d` 
l`}"t`
#-#=#M#]#m#x#
$%$5$E$U$`$j$y$
%-%=%G%M%U%\%e%
o%w%}%
&'&/&5&;&
`A&*-6-?-
I&P&Y&
c&k&
`v&D-J-
U-]-Y)Y)Y)Y)Y)Y)Y)Y)Y)
g-k-q-
)m)q)
8.>.F.
)Y.].a.e.8,
h.q.),u.y.}.
/&/0/6/:/@/
+8,H/N/V/ ,\/b/j/t/@*z/
/<*H,
%'+'L
1'7'
='C'I'O'
U'['a'g'
m's'y'
)m)q)
0'0/070?0I0S0]0g0q0{0
1#1+131;1C1K1S1[1c1k1s1{1
2L.b)
, ,*@*
 2(2.2
E2I2M2Q2U2Y2]2a2e2i2m2q2u2y2}2
3!3%3)3-3135393=3A3E3I3M3Q3U3Y3]3a3e3i3m3q3u3y3}3
4!4%4)4-4145494=4A4E4I4M4Q4U4Y4]4a4e4i4m4q4u4y4}4
5!5%5)5-5155595=5A5E5I5M5Q5U5Y5]5a5e5i5m5q5u5y5}5
5&f*f.f2f6f:f
66>fBfFfJfNfRfVfZf^fbfffjfnfrfvfzf~f
6!6%6)6-6165696=6A6E6I6M6Q6U6Y6]6a6e6i6m6q6u6y6}6
E2]2
7%7-757=7E7M7
a'a1a;aEaOaYacamawa
U7]7e7m7u7}7
8%8-858=8E8M8U8]8e8m8u8y8M3}8
E2]2
9#9'9+9/93979
6;9?9C9G9K9O9S9W9[9_9c9i9o9u9{9
:':+:.:3:7:::>:B:F:J:N:R:V:Z:^:b:f:j:n:r:w:{:
;%;,;7;mbyb
bQ;^;
bk;t;};
;0c<cGc
;Pc`cmc{c
<%<1<;<OdbdudA<
dK<S<[<e<
dp<y<
=%=,=4=:=@=H=N=T=c=s=z=
>&>4>@>L>X>^>d>j>p>v>|>
?$?,?4?<?W?d?j?p?v?|?
@"@(@.@4@:@B@H@N@V@^@e@n@v@|@
A%A-A5A=AEAMAUA]AeAmAuA}A
B!B%B)B-B1B5B9B=BABEBIBMBQBUBYB]BaB54eBiBmBqBuByB}B
C!C%C)C-C1C5C9C=CACECIC
4MCQCUCYC]CaCeCiCmCqCuCyC}C
C!D%D)D-D1D5D9D=DADEDIDMDQDUDYD]DaDeDiDmD
AqDuDyD}D
E!E%E)E-E1E5E9E
4=EAEEEIEMEQEUEYE]EaEeEiEmEqEuEyE
F!F%F)F-F1F5F9F=FAFEFIF
8MFQFUFYF
9]FaFeFiFmF
CqFuFyF}F
F#G'G+G/G3G
E9B7G;Gy3IC
D?GCG9FGG=FKGOGSG
EWG[G_GcGgG
EkGoGsGwG{G
H$H2H8H
?HEHKHQHWH
bHiHY.e.mHqHuHyH}H
I"I(I.I4I:I@IFIMISISIWIWIWIWI[I[I[I[I_I_I_I_IcIcIcIcIgIgIgIgIkIkIkIkIoIoIoIoIsIsIsIsIwIwIwIwI{I{I{I{I
e#e#e#e-e-e-e
I7eAeKe-eTe
J#J)J/J4J;JAJGJLJSJYJ_JeJkJqJwJ}J
K%K+K1K7K=KCKHKOKUK[KaKgKlKsKyK
L L(L0L_eieKese-eTe9L?L
JKLQL)JWL/J4J]LcLAJiLGJLJ
K7K=KCKHKaKgKlKnL
KuL{L
K7eAe}eKe
J#J)J
LAJSJYJ_JeJkJwJ}J
K%K+K1K7K=KOKUK[KaK
LsKyK
L7K=KaK
M#M(M/M4M;M@MGMLMSMXM_MdMkMqMwM
M#M(M/M4M;M@MGMLMSMXM_MdMkMqMwM
MkMqMwM
JkMqMwM
N#N+N+N2N;N;NCNCNKNSNSN[N[NcNjNsN{N{N
#O+O3O;OCOKOKOSOZOcOkOkOrOzO
N"P*P3P:PCPKPCP3PRPZPbPjPrPKPsN#NzP
+Q/Q3Q7QS*;Q?QCQGQOQ
YQ_QcQgQgQ
-kQoQsQwQ{Q
QgQgQgQ+Q/Qg-
S*7Q?Q;Q_Q
-kQoQsQwQ
R R'R
e*R*R/R/R/R/R3R3R7R7R7R7R;R;R;R;R?R?R?R?RCRCRCRCRGRGRGRGRKRKRORORSRSRWRWR[R[R[R[R_R_R_R_RcRcRcRcRgRgRgRkRkRkRkRoRoRoRoRsRsRsRsRwRwRwRwR{R{R{R{R
)m)q)
-7QS*
RgQ?-b)
, ,*@*
R':+:.:3:7:::>:B:F:J:N:R:V:Z:^:b:f:j:n:r:w:{:
S S(S
f1S8S@SHSQSXS`ShSpSxS
g"g*g2g:gBg
JgRgZgbgjgrg
')1)
E)O)
T.TFT^T
lTvT
*@*
, ,*@*
, ,*@*
2L.b)
, ,*@*
-*@*
U%Ui*)U,U1U5U9UP.=U@U%,),-,DUIULU
,QUUU{)YU]U`Uq.<,eUiUmUpU1,5,uUxU}U
U5,uUxU}U
)m)q)
)m)q)
)m)q)
*R/R?RKR
RWRCRkR
R[RsR{RcR
RSR_R7R;RGRORgRoRwR
/R?R
R[RsR{RcR
_R7R;RGR
R[RsR
/R?R
CRkR
R[RsR{RcR
_R7R;RGR
gRoRwR
*R/R?RKR
RWRCRkR
R[RsR{RcR
RSR_R7R;RGRORgRoRwR
/R?RKR
RWRCRkR
R[RsR
V'V/V7V?VGVOVWV_VgVoVwV
"W(WN:
A3/W3W
e]27W;W
6?WCWGWmDKWOWSWWW[W_W
3cWgWkWoWsWwWE2
6{W;9
X!X%X
E+X/X3X7X=XAXSWEXKXOXSXWX
2aXeXiXmX
WqXuX
FyX}X
Y#Y'Y+Y7W/Y3Y7Y=YCYGYKYOYSYWY[Y_YcYcYgYmYqY
CuYyY
Z!Z%Z)Z-Z1Z5Z
F9Z?ZCZGZ
GGZKZ
FOZSZWZ[Z
A_ZcZgZkZoZsZwZ}Z
Z9B7G
[![%[
G)[-[1[5[9[?[C[G[K[Q[U[Y[][ICa[e[k[q[w[{[
\!\%\+\1\5\9\=\A\A\E\I\WGM\Q\U\Y\]\c\g\
Cm\s\w\}\
\}B{G
]!]%])]-]3]7];]?]C]G]K]Q]W][]a]e]k]o]}Fs]y]
^#^)^/^3^7^;^?^E^I^O^S^W^]^c^g^iBk^o^s^w^{^
_!_%_+_/_3_7_;_?_C_G_M_Q_U_Y___c_g_k_o_u_{_
B/|)
[FV
2 2 
2 2 2 
5 5 
5 5 5 
2 2 2 2 
+"+"
+"+"+"
."."
."."."
+"+"+"+"
'Yck
{0K0
fFdFf[
Nrm2
3irT
6 p 
.!n!
 %"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"9"%"-"5"=")"1"q"
#.$n$
$.%n%
d*d*l*
d*d*p*
(+7+
c+r+
+,;,K,[,
g,w,
-%-3-
S-S-a-
/*/:/J/Z/j/z/
0*0:0J0Z0j0z0
0T6T
<TBT
%+19
L&L.L
=C
U[a
nLxL
LnLxL
M*M:MJM
M*M:MJMVM`MnM~M
MVM`MnM~M
M6L.
NFLL
*NNL
>N^L
ZNdNVLlNfL
# ' + / 3 7 ; ? C G K O S W [ _ c g k o s w { 
!#!'!+!/!3!7!;!?!C!G!K!O!S!W![!_!c!g!k!o!s!w!{!
"#"'"+"/"3"7";"?"C"G"K"O"S"W"["_"c"g"k"o"s"w"{"
###'#+#/#3#7#;#?#C#G#K#O#S#W#[#_#c#g#k#o#s#w#
#dThT
#lTpTtTxT|T
$#$'$+$/$3$7$;$?$C$G$K$O$S$W$[$_$c$g$k$o$s$w${$
# ; 
O%O7OIO[OmO
/%7%?%G%O%W%_%g%o%w%
&'&/&7&?&G&O&S&+!W&
Z&c&i&o&u&{&
P$P0PBPNP
# ; 
 G!w!s!K!
'!'%')'-'1'5'9'='C'I'O'U'['a'g'm's'y'
( ($(((,(0(4(8(<(@(D(H(L(Q(U(Y(](a(d(h(l(p(t(y(}(
Q+)8)
Q%Q?QE)N)W)TQ_)i)hQt)|)vQ
)0RBRPR\RjR
R%*-*5*?*
SJ*S*Y*_*e*k*q*w*}*
+"+(+.+5+=+D+K+Q+W+]+c+l+r+x+~+
,",(,.,5,=,E,K,S,[,c,i,p,y,l+
-'-,-2-8-C-J-P-V-\-b-h-.,n-t-z-
.%.-.5.=.E.M.U.].e.m.u.}.
/!/%/)/-/1/5/9/=/A/E/I/M/Q/U/Y/]/a/e/i/m/q/u/y/}/
0!0%0)0-0
TvB(T
1050
"90=0A0E0s#s#I0
"M0Q0U0Y0]0a0e0i0m0q0u0y0}0
1!1%1)1-1115191=1A1E1I1M1Q1U1Y1]1a1e1i1m1q1u1y1}1
2!2%2)2-212k 5292=2A2E2I2M2Q2U2Y2]2a2e2i2m2q2u2y2}2
3!3%3)3-3135393
&=3A3E3I3M3Q3U3Y3]3
1a3e3i3m3q3u3y3}3
!4%4)4-4145494=4A4
M4Q4
U4Y4]4a4e4i4m4q4u4y4}4
5!5%5)5-515M45595=5A5E5K5
O5S5W5[5_5c5g5k5
4o5s5w5
6#6'6+6
5/6I436!5
176%5;6-5?6C6G6K6O655=4S695W6=5[6s#_6e6k6q6u6y6}6
7 7&7,72787>7D7J7P7
V7\7b7h7n7
8#8#8#8#8'8'8'8'8+8+8/8/8/8/8
S2828282878787878:8:8$S$S
?8?8?8?8C8C8G8G8K8K8
O8O8S8S8W8W8[8[8[8[8_8_8,S,S6S6S@S@SKSKSUSUS_S_SiSiSiSsSsSsSc8c8c8c8}S
Sg8m8s8y8
9!9'9-93999?9E9K9Q9W9]9c9i9o9t9{9
:#:(:/:5:;:@:G:M:S:Y:_:d:j:p:v:|:
8o9t9
:#:(:v:
;_:d:}S
Sg8m8s8y8
9!9'9-999?9E9K9Q9W9]9c9i9{9
:%;/:5:*;G:M:S:Y:1;
9=;C;I;
:%;Y:1;N;V;^;g;l;s;x;
<g;l;s;x;
;C;=;I;39
;3999
<'</<7<?<G<G<N<W<_<g<o<w<w<
='=/=6=?=G=G=O=O=W=W=_=g=n=w=
>'>/>7>>>F>N>V>^>f>n>v>~>
?#?-?7?A?K?U?]?
@#@'@
*@0@6@
B@H@N@T@Z@`@f@l@r@x@
@_8_8
?'@Z
(!A%A)A-A1A5A9A=AAAEA
( ($(((,(0(4(8(<(@(D(H(L(Q(U(Y(](a(d(h(l(p(t(y(}(
#dThT
#lTpTtTxT|T
MAQAUA^
YA]AaA
eAhAmApAuAyA}A
'B+B
2B7B:B%
?BCBs
GBKBNB
SBWBZB
cB.B
2B7B:B%
?BCBs
GBKBNB
SBSBWBZB
gB2B%
2B7B:B%
?BCBs
GBKB
gB2B%
kBkB
@oB+8sBwB
C(T; 
2%C)C-C1C5C9C
!=CACECICMCQC# 
"]CaCeCiCmC
&G!qCuCyC}C
D%D)D-D1DS55Dc ;D?DCDGDuCKDODg5y4}4k5SDWD
4_DcDgDkDkDkDoDuDyD}D
E!E%E)E-E1E5E9E=E=EAEGEKE
1OESEYE]EaE
 eEiE
 mEqEuE{E
5!F%F
4)F-F1F5F
4U09F=FAFEFIFMFQFWF[F_FcFgFkFqFuFyF}F
G!G%G+G/G3G7G
1;G?GEGKGQGUG[G_GcGgGkG
4!3oGsGwG{G
5'H+H/H3H7H=HAH
1GHMHQHWH]HcHgH
5kHqHwH}H
I!I%I+I1I5I;I?IEIII
5MISIYI]IcIgImIqIuIyI}I
J#J)J-J1J7J=JAJ
0EJIJMJQJUJYJ#6]JaJeJiJmJqJuJyJc"}J
J76;6
K!K'K+K/K3K9K=KAKEKIKOKUKYK]KaKgKkKW6W6qKuK{K
B/|)
[FV
2 2 
2 2 2 
5 5 
5 5 5 
2 2 2 2 
+"+"
+"+"+"
."."
."."."
+"+"+"+"
'Yck
{0K0
fFdFf[
ResB
numberingSystems
adlm
algorithmic
desc
radix
ahom
arab
arabext
armn
armnlow
bali
beng
bhks
brah
cakm
cham
cyrl
deva
ethi
fullwide
geor
gong
gonm
grek
greklow
gujr
guru
hanidays
hanidec
hans
hansfin
hant
hantfin
hebr
hmng
hmnp
java
jpan
jpanfin
jpanyear
kali
khmr
knda
lana
lanatham
laoo
latn
lepc
limb
mathbold
mathdbl
mathmono
mathsanb
mathsans
mlym
modi
mong
mroo
mtei
mymr
mymrshan
mymrtlng
newa
nkoo
olck
orya
osma
rohg
roman
romanlow
saur
shrd
sind
sinh
sora
sund
takr
talu
taml
tamldec
telu
thai
tibt
tirh
vaii
wara
wcho
fghijklmno
NkQ]N
ResB
locales
rules
set00
set01
set02
set03
set04
set05
set06
set07
set08
set09
set10
set11
set12
set13
set14
set15
set16
set17
set18
ResB
locales
pt_PT
root
locales_ordinals
rules
set0
other
set1
set10
set11
set12
set13
zero
set14
set15
set16
set17
set18
set19
set2
set20
set21
set22
set23
many
set24
set25
set26
set27
set28
set29
set3
set30
set31
set32
set33
set34
set35
set36
set37
set38
set39
set4
set40
set41
set42
set43
set44
set45
set46
set47
set48
set49
set5
set50
set51
set52
set53
set54
set55
set56
set57
set58
set6
set7
set8
set9
-m)T.
.J34+
!'o,
ResB
AuxExemplarCharacters
Ellipsis
word-final
word-initial
word-medial
ExemplarCharactersIndex
ExemplarCharactersNumbers
ExemplarCharactersPunctuation
MoreInformation
NumberElements
miscPatterns
approximately
atLeast
atMost
range
patterns
accountingFormat
currencyFormat
percentFormat
scientificFormat
patternsLong
decimalFormat
1000
other
10000
100000
1000000
10000000
100000000
1000000000
10000000000
100000000000
1000000000000
10000000000000
100000000000000
patternsShort
decimal
exponential
group
infinity
list
perMille
percentSign
superscriptingExponent
timeSeparator
minimalPairs
ordinal
plural
minimumGroupingDigits
Version
calendar
generic
DateTimePatterns
availableFormats
EBhm
EBhms
EHms
Ehms
GyMMM
GyMMMEd
GyMMMd
yyyy
yyyyM
yyyyMEd
yyyyMMM
yyyyMMMEd
yyyyMMMM
yyyyMMMd
yyyyMd
yyyyQQQ
yyyyQQQQ
intervalFormats
fallback
gregorian
AmPmMarkers
AmPmMarkersAbbr
AmPmMarkersNarrow
appendItems
Timezone
Hmsv
MMMMW
hmsv
dayNames
format
abbreviated
stand-alone
dayPeriod
afternoon1
evening1
midnight
morning1
night1
eras
abbreviated%variant
wide%variant
monthNames
quarters
characterLabel
activities
african_scripts
american_scripts
animal
animals_nature
body
box_drawing
braille
building
bullets_stars
consonantal_jamo
currency_symbols
dash_connector
digits
dingbats
divination_symbols
downwards_arrows
downwards_upwards_arrows
emoji
european_scripts
female
flag
flags
food_drink
format_whitespace
full_width_form_variant
geometric_shapes
half_width_form_variant
han_characters
han_radicals
hanja
hanzi_simplified
hanzi_traditional
heart
historic_scripts
ideographic_desc_characters
japanese_kana
kanbun
kanji
keycap
leftwards_arrows
leftwards_rightwards_arrows
letterlike_symbols
limited_use
math_symbols
middle_eastern_scripts
miscellaneous
modern_scripts
modifier
musical_symbols
nonspacing
numbers
objects
paired
person
phonetic_alphabet
pictographs
place
plant
punctuation
sign_standard_symbols
small_form_variant
smiley
smileys_people
south_asian_scripts
southeast_asian_scripts
sport
technical_symbols
tone_marks
travel
travel_places
variant_forms
vocalic_jamo
weather
western_asian_scripts
delimiters
alternateQuotationEnd
alternateQuotationStart
quotationEnd
quotationStart
fields
relative
relativeTime
future
past
dayOfYear
dayOfYear-narrow
dayOfYear-short
dayperiod
dayperiod-narrow
dayperiod-short
era-narrow
era-short
fri-narrow
fri-short
hour
hour-narrow
hour-short
minute
minute-narrow
minute-short
mon-narrow
mon-short
month
month-narrow
month-short
quarter
quarter-narrow
quarter-short
sat-narrow
sat-short
second
second-narrow
second-short
sun-narrow
sun-short
thu-narrow
thu-short
tue-narrow
tue-short
wed-narrow
wed-short
week
relativePeriod
week-narrow
week-short
weekOfMonth
weekOfMonth-narrow
weekOfMonth-short
weekday
weekday-narrow
weekday-short
weekdayOfMonth
weekdayOfMonth-narrow
weekdayOfMonth-short
year
year-narrow
year-short
zone-narrow
zone-short
listPattern
middle
start
standard
standard-short
unit
unit-narrow
unit-short
measurementSystemNames
metric
buddhist
ethiopic
ethiopic-amete-alem
noon
standard-narrow
parse
date
lenient
general
number
stricter
arab
default
default_latn
many
zero
minusSign
plusSign
native
coptic
afternoon2
morning2
night2
hebrew
islamic
japanese
persian
layout
%%ALIAS
beng
arabext
chinese
cyclicNameSets
dayParts
days
solarTerms
years
zodiacs
monthPatterns
leap
numeric
dangi
indian
%%Parent
GyMMMM
GyMMMMEd
GyMMMMd
yyyyMMMMEd
yyyyMMMMd
MMMMdd
Day-Of-Week
Hour
Minute
Quarter
Second
yyyyMM
tibt
months
UMMM
UMMMd
narrow%variant
contextTransforms
typographicNames
cakm
lines
day-format-except-narrow
day-standalone-except-narrow
languages
month-format-except-narrow
month-standalone-except-narrow
currencyGroup
AmPmMarkers%variant
AmPmMarkersAbbr%variant
calendar-field
keyValue
number-spellout
dn%variant
Hmsvvvv
hmsvvvv
HHmmZ
yMMMMEEEEd
yyyyMMMMccccd
currencyDecimal
bali
brah
cham
deva
fullwide
gong
gonm
gujr
guru
hanidec
java
kali
khmr
knda
lana
lanatham
laoo
lepc
limb
mlym
mong
mtei
mymr
mymrshan
nkoo
olck
orya
osma
rohg
saur
shrd
sora
sund
takr
talu
tamldec
telu
thai
vaii
yyyyMMdd
finance
GyMMMEEEEd
yyyyMEEEEd
yyyyMMMEEEEd
GGGGGyM
GGGGGyMEd
GGGGGyMd
or-narrow
or-short
HHmmss
evening2
HHmm
NoonMarker
NoonMarkerNarrow
islamic-civil
islamic-rgsa
islamic-tbla
islamic-umalqura
currencyName
era-abbr
era-name
script
-NHS
YNoS
YN*g
lQCQ
'Yck
2uHS
2uP[
2ub
2u3u
xvoS
xv*g
8lck
lQCQMR
)Ys^^yw
-d!j
NHS/
t^MR
t^MR
c[MR
gmQMR
0-=-U-0-9-b-S-T- 
0-=-U-0-9-b-S-T- 
0-=-U-0-9-b-S-T- 
0-=-U-0-9-b-S-T- 
7-0-\- 
D-I-Y-0-
7-<-<-I-T- 
D-I-Y-0-
0-=-S-7- 
S-3-N-N-0-9-
0-Y-Y- 
I-N-0-M-0-Y-Y-
\-I-c-I- 
a-0-Y-Y-:
\-I-<-0-a-\-/
\-0-7-3-3-o-0-\-
3-o-}
=-o-}
ResB
InstalledLocales
ResB
RBNFRules
DurationRules
NumberingSystemRules
OrdinalRules
SpelloutRules
Version
T
$l
<x
ResB
InstalledLocales
ResB
CLDRVersion
InstalledLocales
ResB
YH's
+RR(9
!K_N
g44
qBqB
H=iq
g44
qBqB
.=.8,
g44
qBqB
|*(C
)E*,k
]9iYj
\yiIj
pN ]
]9iYj
\yiIj
pN ]
bwj4
~d1{
{-Ct
Fddd
9`::
O-*2Y1
5JSK
dXxZ
(JFKvJ
Of
JW_
ResB
calendarData
buddhist
eras
start
system
chinese
coptic
dangi
ethiopic
ethiopic-amete-alem
gregorian
hebrew
indian
islamic
islamic-civil
islamic-rgsa
islamic-tbla
islamic-umalqura
japanese
persian
calendarPreferenceData
cldrVersion
codeMappings
codeMappingsCurrency
idValidity
currency
deprecated
regular
unknown
language
private_use
reserved
special
macroregion
script
subdivision
unit
languageData
primary
scripts
secondary
territories
languageMatching
written
languageMatchingInfo
matchVariable
americas
cnsar
enUS
maghreb
paradigmLocales
languageMatchingNew
measurementData
MeasurementSystem
PaperSize
MeasurementSystemCategory
temperature
parentLocales
en_001
en_150
es_419
pt_PT
root
zh_Hant_HK
subdivisionContainment
aznx
bevlg
bewal
bf01
bf02
bf03
bf04
bf05
bf06
bf07
bf08
bf09
bf10
bf11
bf12
bf13
cz20
cz31
cz32
cz41
cz42
cz51
cz52
cz53
cz63
cz64
cz71
cz72
cz80
do33
do34
do35
do36
do37
do38
do39
do40
do41
do42
esan
esar
esas
escb
escl
escm
escn
esct
esex
esga
esib
esmc
esmd
esnc
espv
esri
esvc
frara
frbfc
frbre
frcor
frcvl
frges
frgua
frhdf
fridf
frlre
frmay
frnaq
frnor
frocc
frpac
frpdl
gbeng
gbnir
gbsct
gbwls
idjw
idka
idml
idnu
idpp
idsl
idsm
it21
it23
it25
it32
it34
it36
it42
it45
it52
it55
it57
it62
it65
it67
it72
it75
it77
it78
it82
it88
ma01
ma02
ma03
ma04
ma05
ma06
ma07
ma08
ma09
ma10
ma11
ma12
ph01
ph02
ph03
ph05
ph06
ph07
ph08
ph09
ph10
ph11
ph12
ph13
ph14
ph15
ph40
ph41
rskm
rsvo
territoryContainment
containedGroupings
grouping
territoryInfo
populationShareF
territoryF
officialStatus
writingShareF
kk_Arab
uz_Arab
literacyShareF
zh_Hant
az_Cyrl
bs_Cyrl
sr_Latn
ff_Adlm
ms_Arab
iu_Latn
ha_Arab
ky_Arab
mn_Mong
uz_Cyrl
yue_Hans
man_Nkoo
sd_Deva
az_Arab
ug_Cyrl
ku_Arab
vai_Latn
rif_Latn
shi_Latn
bm_Nkoo
unr_Deva
pa_Arab
tg_Arab
ky_Latn
timeData
allowed
preferred
af_ZA
ar_001
ca_ES
es_BO
es_BR
es_EC
es_ES
es_GQ
es_PE
fr_CA
gl_ES
gu_IN
hi_IN
it_CH
it_IT
kn_IN
ml_IN
mr_IN
pa_IN
ta_IN
te_IN
zu_ZA
unitPreferenceData
area-land-agricult
area-land-commercl
area-land-residntl
concentr-blood-glucose
consumption-vehicle-fuel
duration-music-track
duration-person-age
duration-tv-program
energy-food
energy-person-usage
length-person
length-person-small
length-rainfall
length-road
length-road-small
length-snowfall
length-vehicle
length-visiblty
length-visiblty-small
mass-person
mass-person-small
pressure-baromtrc
speed-road-travel
speed-wind
temperature-person
temperature-weather
volume-vehicle-fuel
length-person-informal
consumption-vehicle-fuel-informal
length-person-small-informal
length-road-informal
weekData
weekData%variant
weekOfPreference
zh_TW
i,m;
gi2m
Ej8mw
/37GC
lhD#
'e%w
$)lL)s
/ ; ? l
!W"c"
#/#3#
/$C$
C(H(
'B);
t)?';
&'D~
<l8%
ri~)
y%N'g
C G t
O S 
W [ _ 
c g g'k o 
a(f(
j[!_!
c!g!
k!o!.
s!w!{!
!TDc&
"#"*
'"+"0
3"7";"?"C"H
G"K"O"N
["_"g"l
k"o"s"w"{"
##'# 
G#K#z
S#W#[#_#c#g#k#o#
s#w#
G$K$/(O$S$W$^
[$_$c$j
g$k$o$s$w${$
|kLn
pn8hvn|n
mox
i E%E
/E4E9E>ECEHE}hREWE\E
%kEuE
GhzE
E/k+i
F3jAh
9j3F8F=FOimiU
hjFoFtFEjyFX
Fehl
jKjYk
GFLFQF
1**Eo
;*@*E*MEJ*
%O*T*,%Y*l&^*
&c*g
h*m*r*pE
Ew*|*@%
*q&v&
*&D/
+!+&+
&!&+++D
0+5+o
~F0D
%h%?+D+I+N+
O%X+]+;%E%b+g+l+q+
dGiGnGsGxG}G
G:D?D
P(QP
.ZVZtZyZ
([_[
G_L_
B2B_BsB
o"o(o.o
k4o:o@o
kFoLoRoXo^odojopovo|o
&*p0p6p<pBpHpNp
kZp`pfplprpxp~p
 q&q,q2q8qS&>qDq|%JqPqVq\q
+bqhqnqtqzq
r"r(r4
.r4r:r@rFrLrRrXr^rdrjrpr
kvr|r
, ,%,
&*,/,4,9,>,C,H,M,R,W,\,a,
f,k,p,u,K
-$-u
&.-3-8-=-B-
L-Q-V-[-"%`-e-
)j-X&]&
)m%~-
.#.(.-.2.
r7.<.A.F.K.P.U.Z.
&_.d.
&i.n.
rs.x.}.
/"/'/,/1/6/;/@/E/J/O/T/Y/
'^/c/h/m/r/w/|/
k$s*s0s6s<s
lBsHsNsTs
lZs`sfslsrsk
0!0&0+00050:0?0D0I0N0S0
]0b0g0l0
q0v0l
00&%'
1 1%1*1~s
s/141
91>1
sC1H1M1R1W1
s\1a1/'
sk1p1u1z1
2$2)2.2321&
=2B2G26&L2Q2
%V2[2`2e2j2o2
t t&t,t2
2t8t>tDtJtPtVt
\tbthtntttzt
u"u4l(u$
.u4u:u@uFuLuRuXu^uduju,
:lpupivu|u
v$v*v0v6v<vBv^lHvNvTvZv`vfvlvrvxv~v
w w&w,w2w8wpl>wDwJwPwVw\wbwhwnwtwzw
x"xTj(x
m.x4x
l:x@xFxLxRxXxZj`j
3#3(3-323
A3F3K3P3
C'U3H'Z3_3
M'i3R'
n3W's3x3}3
3\'a'
r%k'
)J%"46%'4,4
)14u'64;4
z'@4E4J4O4T4Y4^4c4h4m4r4w4|4
5!5>
&5+5
0555:5
D5I5N5S5X5S
']5a
q5v5
6 6%6*6
'4696>6C6H6
M6R6W6\6a6f6k6p6u6z6
7$7)7.7
'87=7B7G7L7Q7V7[7`7e7,
j7o7:
t7y7~7
8#8(8
-828
F8K8P8U8
%Z8dxjx
lpxvx|x
xrj_8
?&d8i8n8s8x8}8
9"9'9,91969;9@9
(E9$(J9O9
%T9Y9
x^9c9h9m9
)r9w9|9
9w%)(
y$y*y
j0y6y<yBy
HyNyTyZy
l`yfylyryxy$
z z&z,z2z8z
93(8(=(B(G(L(Q(
:!:&:+:[(0:5:L
::?:D:I:N:
lDzJzPz
\zbzhznztzzz
q:`(e(v:{:
%y(~(
{"{({.{4{:{@{F{
lR{X{^{d{j{
lp{v{|{
; ;%;*;/;4;9;>;F
H;M;R;W;\;a;
(k;p;u;z;
$<)<.<3<8<=<B<G<L<V<[<
`<e<j<
(o<t<y<~<
|$|*|0|6|<|B|H|N|T||
Z|`|f|l|r|x|
} }&},}2}8}>}D}J}
jP}V}
lt}z}
~"~(~.~4~:~@~
jF~L~
mR~X~
i^~d~j~
mp~v~
=#=(=-=2=7=<=A=F=|~
K=P=
m$m*m
j0m6m
~Z=_=d=i=n=s=x=}=
>">'>,>
*6>;>
(J>Bm
Y>^>T
r>w>|>
?!?&?+?
)5?:???D?I?N?S?X?]?
)b?g?
)l?q?v?{?
?#)()
?2)7)
@ @%@*@/@<)4@
Y%9@
%>@C@H@M@R@
*W@^%\@a@f@k@p@u@z@
$A)A.A3A8A=ABAGALAQAVA[A`AeAjAoAtAyA~A
B#BP)(B`
U)7B<BABFBKBPBUBZBdB|
iBnBxB}B
'C,C1C6C;C@CECJCOCTCYC^CcCi)hCmCrCwC|C
Cx)D&
MhShkh
hGh)h
m/k+i/h
m;kAk
i1iR
m5h=i
iCiIi
mqkOi
hGkUi
ieh#h
hAhP
h_hH
jek!j
i'jkkL
-j3j9j?jqkmiEjwkKj
hGh#k
hwh@
hUi,
h)h\
Ahwh@
c*@%
hGhX
kYhwh
aigi?j
|*0+5+
/heh#h
e%V%
o%t%3%%
`%t%3%%
`%o%3%%
`%~%3%%
L%3%
(L%3%
{j)%
Qj8%
ij)%
Wj$%
v($%
oj)%
i3%%
&h8%
|ith
e%V%
o%t%<h%
`%t%<h%
`%o%<h%
`%~%<h%
L%<h
(L%<h
{j)%
Qj8%
ij)%
Wj$%
v($%
oj)%
i<h%
h"i&k
m,k(i,h
m8k>k
i.iZ
m2h:i
i@iFi
hDkRi
ibh h
JhPhN
jdi$jhk*j0j6j<jnkjiBj
tkHj
o"o(o.o
k4o:o@o
kFoLoRoXo^odojopovo|o
G#G
(G-G2G7G<GAGFGKGPGUGZG_G
l"&"D
*p0p6p<pBpHpNp
kZp`pfplprp~p
&q,q2q8qS&>qDq|%JqPqVq\q
+bqhqnqtqzq
qrm*
H"H'H
lIqIvI{I
J J%J*J/J4J
9J>JCJ
+MJRJ
, ,%,
WJ\J
&*,/,4,9,>,C,H,M,R,
W,\,a,
f,k,p,
u,aJfJz,
,kJpJuJzJ
&.-3-8-=-B-
JL-Q-
V-[-"%`-e-
)j-X&]&
)m%~-
.$K)K
.#.(.
-.2.
r7.<.A.F.K.P.U.Z.
&_.d.
&i.n.
3K8K=KBKGKLK
s.x.}.
.QKID
.VK[K
/"/'/,/1/6/;/@/E/J/O/T/Y/
^/c/h/m/r/w/|/
/eKjK
/NDoK
/tKyK
k$s*s0s6s<s
lBsHsNsTs
lZs`sfslsrs
q0v0{0
00&%'
L#L(L-L
2L7L<LALFLKLPLULZL_L
M"M'M,M1M0
6M;M@MEMJMOMTMYM^McMhMmMrMwM|M
wD|D
1 1%1*1
s/141
91>1
sC1H1M1R1W1
s\1a1/'
k1p1u1z1
N!N]D
10N5N
1DN4'
1NNSN
%V2[2`2e2j2o2bNgNt2
y2lNqNvN{N
t t&t,t
)bD5&
3#3(3-323
3\'a'
)J%"46%'4,4
)14u'
64;47Q<Qz'@4E4J4O4T4Y4^4c4h4m4r4w4|4
AQFQKQPQUQZQ_QdQiQnQsQxQ}Q
5JROR
6 6%6*6
'4696>6
C6H6TRYRM6R6W6\6a6f6k6p6u6z6
^RcRhRmRrRwR|R
T T%T*T
8#8(8/
/T4T9T>TCTHTMTRTWT\TaTfTkTpTuTzT
U$U)U.U3U8U=UBUGULUQUVU[U`UeUjUoUtUyU~U
-828
V#V(V-V2V7V<VAVFVKVPV
K8P8U8
dxjx
lpxvx|x
W?&d8i8n8s8x8}8
8'W,W
1W6W;W@WEWJWOWTWYW^W
cWhWmWrWwW|W
X!X&X+X0X5X:X?XDXIXNXSXXX]XbXgXlXqXvX{X
Y Y%Y*Y/Y4Y9Y
9"9'9,9
1969;9@9
(E9$(J9O9
%T9Y9w
Vn\nbn
^9c9h9m9
)r9w9|9
9>YCY
9w%)(
HYMYRYWY\YaYfYkYpYuYzY
93(8(=(B(G(L(Q(
:!:&:+:[(0:5:
Y::?:D:I:N:
Z$Z)Z
3Z8Z=ZBZGZLZQZ[Z`ZeZjZoZS:~Z
[#[-[2[7[<[A[F[K[P[U[Z[]:d[i[n[s[x[}[
\"\'\,\1\6\;\D
@\E\J\O\T\Y\^\c\h\m\r\w\|\
]!]&]+]0]'*5]:]?]D]I]N]S]X]]],*b]g]l]q]v]{]
q:`(e(v:{:
{"{({.{4{:{@{F{
lR{X{^{d{j{
lp{v{|{
^ ^%^*^/^4^9^>^C^H^M^
; ;%;*;/;4;9;>;R^W^C;
H;M;R;W;\;a;
(k;p;u;z;
(\^a^f^k^
<p^u^
<$<)<.<3<8<=<B<G<L<Q<V<[<
_$_)_._3_8_=_B_
|$|*|0|6|<|B|H|N|T|
Z|`|f|l|r|x|
Q_V_[_`_e_j_o_t_y_~_
=#=(=-=2=7=<=A=F=
`#`(`-`2`7`K=P=
m$m*m
j0m6m
<`A`F`K`P`U`Z`U=
Z=_=d=i=n=s=x=}=*
=_`d`
>i`n`
>">'>,>
6>;>
(J>Bm
aNm
Y>^>T
a"a'a,a1a
6a;a@aEaJaOaTaYa^acahamar>
w>|>
>rawa
>.);
3)5'W
b!b&b+b0b5b:b?bDb
?!?&?+?IbNb0?
)5?:???D?I?N?
S?X?]?
)b?g?
)l?q?v?{?
?#)()
?2)7)
%@*@/@<)4@
DSbY%9@
%>@C@H@M@
*W@^%
\@a@f@k@p@u@z@
Xb]bbbgblbqbvb{b
c c%c*c/c4c9c>cCcHcMcRcWc\cacfckcpcuczc
A)d.d3d8d=dBd
GdLdQdVd[dQ
`dedjdodtdyd~d
e#e(e-e2e7e<eAeFeKePeUeZe_edeienesexe}e
D"f'f
D,f1f6f
E;f@fEfJfOfTfYf^fcfhfmf
$A)A.A3A8A=ABAGALAQAVA[A`AeAjAoAtAyA~A
B#BP)(Bwf|f-B
fU)7B<BABFBKBPBUBZB_BdB
fiBnBsBxB}B
!#!'!+!/!3!7!
j?!C!
G!K!O!S!W!?
g!g&g+g0g5g:g?gDgIg
BNgSgXg]gbggglg
Bqgvg{g
'C,C1C
6C;C@CECJCOCTCYC^CcCi)
hCmCrCwC|C
Cx)D&
Tpxp
1HEHJH
H!I&I
,H;HOHTHYH^HwH
hHrH|H
H0I]IbI
@HcH
I5INI
I+I:IgI
HSIXI
@rRr
Fr|r
:rjr
q.r^r
rXrpr
0:0?0I0N0SDg0
0!0&0+00050D0S0
K]0b0l0
nLsL
1XN6&
2)2.2=2L2
1:NIN
1,&1&
132G2
E&?N
O*ORO
OGPePyP~P
O.PjPoP
/O9O
P)P[P`P
O3P8PBP
D9'
WO\OfOuOzO
4O>OCO
OQPVP
O O%OHO
PtVt^
\tbtzt
u.l"u4l
.u:u@uFup
pupivu
v$v*v0v6v<vBv^lHvNvTvZvfvxv
w&w,w2wpl>wJwPwVw\wtwzw
wDn4
m.x4x
l:x@xFxRxXxZj
>tDtht
v`vdl
2tJt
RuXu^uduju:l|u
ulv~v
wDwbwhw
|lTj`j
8tnttt
w w8w
wNjLx
gD73H'Z3
<3P3U3
A3F3C'd3
PM'i3
K3#QW'
P_3R'
Dk'p'
Q0555:5g5
I5S5
R"R,R
QD5]5lD'R1R
5:&
'q5v5{5
5@RER
vDl56R
7?Sy7
6!SDSISV7e7
Do7gS
87G7
D$7)7lS
'B7`7]S
S37bS
S5S{S
0SL7
S&S.7[7
+S:S~7
UVZV_VnVxV}V
dViVsV
y0yTy
y6yHyZy
lyxy
xviBy
y*yNyry
y$y
lDzJzPz
jVz\zbz~j
l>zhznztzzz
:y(~(
:T%'%
`<o<
e<t<
V}\}
2}8}
}&}b}
>}j~
lt}z}
}4~:~
}R~X~
}F~^~
},}D}
P}h}
x`}`
m&mn
kXnRn^n
j_kgi
i?jmi
wkKj
vn|n
jAk%
j'jkk-j3j9jEj
h7iYh
eh#h
kekm
+i5k
mqkMk
wh_h8
IiGk
=iOi
m)k/k
MhShkh
kXnRn^n
MhSh
hGh)h
hAhP
h_hH
MhSh
hAhwh_hH
j}hL
hGh0
ikkX
-j7i
5h3jAh4
9j?jIi
whOimiU
GkUi
h_hH
kEj7
iehl
h[i=
"&
*.
159=
IMQs
TX\`dhlp
tx|
EX9
Q9
Q9
=\
p9
Q9
"99
Je
ResB
bcpTypeAlias
aqams
cnckg
cnhrb
cnkhg
usnavajo
typeAlias
timezone
Africa:Asmara
Africa:Timbuktu
America:Argentina:Buenos_Aires
America:Argentina:Catamarca
America:Argentina:ComodRivadavia
America:Argentina:Cordoba
America:Argentina:Jujuy
America:Argentina:Mendoza
America:Atikokan
America:Atka
America:Ensenada
America:Fort_Wayne
America:Indiana:Indianapolis
America:Kentucky:Louisville
America:Knox_IN
America:Porto_Acre
America:Rosario
America:Shiprock
America:Virgin
Antarctica:South_Pole
Asia:Ashkhabad
Asia:Chongqing
Asia:Chungking
Asia:Dacca
Asia:Harbin
Asia:Ho_Chi_Minh
Asia:Istanbul
Asia:Kashgar
Asia:Kathmandu
Asia:Kolkata
Asia:Macao
Asia:Tel_Aviv
Asia:Thimbu
Asia:Ujung_Pandang
Asia:Ulan_Bator
Asia:Yangon
Atlantic:Faroe
Atlantic:Jan_Mayen
Australia:ACT
Australia:Canberra
Australia:LHI
Australia:NSW
Australia:North
Australia:Queensland
Australia:South
Australia:Tasmania
Australia:Victoria
Australia:West
Australia:Yancowinna
Brazil:Acre
Brazil:DeNoronha
Brazil:East
Brazil:West
Canada:Atlantic
Canada:Central
Canada:East-Saskatchewan
Canada:Eastern
Canada:Mountain
Canada:Newfoundland
Canada:Pacific
Canada:Saskatchewan
Canada:Yukon
Chile:Continental
Chile:EasterIsland
Etc:GMT+0
Etc:GMT-0
Etc:GMT0
Etc:Greenwich
Etc:UCT
Etc:Universal
Etc:Zulu
Europe:Belfast
Europe:Nicosia
Europe:Tiraspol
Mexico:BajaNorte
Mexico:BajaSur
Mexico:General
Pacific:Chuuk
Pacific:Pohnpei
Pacific:Samoa
Pacific:Yap
US:Alaska
US:Aleutian
US:Arizona
US:Central
US:East-Indiana
US:Eastern
US:Hawaii
US:Indiana-Starke
US:Michigan
US:Mountain
US:Pacific
US:Pacific-New
US:Samoa
Cuba
Egypt
GB-Eire
Hongkong
Iceland
Iran
Israel
Japan
Libya
NZ-CHAT
Navajo
Poland
Portugal
Turkey
W-SU
typeMap
Africa:Abidjan
Africa:Accra
Africa:Addis_Ababa
Africa:Algiers
Africa:Asmera
Africa:Bamako
Africa:Bangui
Africa:Banjul
Africa:Bissau
Africa:Blantyre
Africa:Brazzaville
Africa:Bujumbura
Africa:Cairo
Africa:Casablanca
Africa:Ceuta
Africa:Conakry
Africa:Dakar
Africa:Dar_es_Salaam
Africa:Djibouti
Africa:Douala
Africa:El_Aaiun
Africa:Freetown
Africa:Gaborone
Africa:Harare
Africa:Johannesburg
Africa:Juba
Africa:Kampala
Africa:Khartoum
Africa:Kigali
Africa:Kinshasa
Africa:Lagos
Africa:Libreville
Africa:Lome
Africa:Luanda
Africa:Lubumbashi
Africa:Lusaka
Africa:Malabo
Africa:Maputo
Africa:Maseru
Africa:Mbabane
Africa:Mogadishu
Africa:Monrovia
Africa:Nairobi
Africa:Ndjamena
Africa:Niamey
Africa:Nouakchott
Africa:Ouagadougou
Africa:Porto-Novo
Africa:Sao_Tome
Africa:Tripoli
Africa:Tunis
Africa:Windhoek
America:Adak
America:Anchorage
America:Anguilla
America:Antigua
America:Araguaina
America:Argentina:La_Rioja
America:Argentina:Rio_Gallegos
America:Argentina:Salta
America:Argentina:San_Juan
America:Argentina:San_Luis
America:Argentina:Tucuman
America:Argentina:Ushuaia
America:Aruba
America:Asuncion
America:Bahia
America:Bahia_Banderas
America:Barbados
America:Belem
America:Belize
America:Blanc-Sablon
America:Boa_Vista
America:Bogota
America:Boise
America:Buenos_Aires
America:Cambridge_Bay
America:Campo_Grande
America:Cancun
America:Caracas
America:Catamarca
America:Cayenne
America:Cayman
America:Chicago
America:Chihuahua
America:Coral_Harbour
America:Cordoba
America:Costa_Rica
America:Creston
America:Cuiaba
America:Curacao
America:Danmarkshavn
America:Dawson
America:Dawson_Creek
America:Denver
America:Detroit
America:Dominica
America:Edmonton
America:Eirunepe
America:El_Salvador
America:Fort_Nelson
America:Fortaleza
America:Glace_Bay
America:Godthab
America:Goose_Bay
America:Grand_Turk
America:Grenada
America:Guadeloupe
America:Guatemala
America:Guayaquil
America:Guyana
America:Halifax
America:Havana
America:Hermosillo
America:Indiana:Knox
America:Indiana:Marengo
America:Indiana:Petersburg
America:Indiana:Tell_City
America:Indiana:Vevay
America:Indiana:Vincennes
America:Indiana:Winamac
America:Indianapolis
America:Inuvik
America:Iqaluit
America:Jamaica
America:Jujuy
America:Juneau
America:Kentucky:Monticello
America:Kralendijk
America:La_Paz
America:Lima
America:Los_Angeles
America:Louisville
America:Lower_Princes
America:Maceio
America:Managua
America:Manaus
America:Marigot
America:Martinique
America:Matamoros
America:Mazatlan
America:Mendoza
America:Menominee
America:Merida
America:Metlakatla
America:Mexico_City
America:Miquelon
America:Moncton
America:Monterrey
America:Montevideo
America:Montreal
America:Montserrat
America:Nassau
America:New_York
America:Nipigon
America:Nome
America:Noronha
America:North_Dakota:Beulah
America:North_Dakota:Center
America:North_Dakota:New_Salem
America:Ojinaga
America:Panama
America:Pangnirtung
America:Paramaribo
America:Phoenix
America:Port-au-Prince
America:Port_of_Spain
America:Porto_Velho
America:Puerto_Rico
America:Punta_Arenas
America:Rainy_River
America:Rankin_Inlet
America:Recife
America:Regina
America:Resolute
America:Rio_Branco
America:Santa_Isabel
America:Santarem
America:Santiago
America:Santo_Domingo
America:Sao_Paulo
America:Scoresbysund
America:Sitka
America:St_Barthelemy
America:St_Johns
America:St_Kitts
America:St_Lucia
America:St_Thomas
America:St_Vincent
America:Swift_Current
America:Tegucigalpa
America:Thule
America:Thunder_Bay
America:Tijuana
America:Toronto
America:Tortola
America:Vancouver
America:Whitehorse
America:Winnipeg
America:Yakutat
America:Yellowknife
Antarctica:Casey
Antarctica:Davis
Antarctica:DumontDUrville
Antarctica:Macquarie
Antarctica:Mawson
Antarctica:McMurdo
Antarctica:Palmer
Antarctica:Rothera
Antarctica:Syowa
Antarctica:Troll
Antarctica:Vostok
Arctic:Longyearbyen
Asia:Aden
Asia:Almaty
Asia:Amman
Asia:Anadyr
Asia:Aqtau
Asia:Aqtobe
Asia:Ashgabat
Asia:Atyrau
Asia:Baghdad
Asia:Bahrain
Asia:Baku
Asia:Bangkok
Asia:Barnaul
Asia:Beirut
Asia:Bishkek
Asia:Brunei
Asia:Calcutta
Asia:Chita
Asia:Choibalsan
Asia:Colombo
Asia:Damascus
Asia:Dhaka
Asia:Dili
Asia:Dubai
Asia:Dushanbe
Asia:Famagusta
Asia:Gaza
Asia:Hebron
Asia:Hong_Kong
Asia:Hovd
Asia:Irkutsk
Asia:Jakarta
Asia:Jayapura
Asia:Jerusalem
Asia:Kabul
Asia:Kamchatka
Asia:Karachi
Asia:Katmandu
Asia:Khandyga
Asia:Krasnoyarsk
Asia:Kuala_Lumpur
Asia:Kuching
Asia:Kuwait
Asia:Macau
Asia:Magadan
Asia:Makassar
Asia:Manila
Asia:Muscat
Asia:Nicosia
Asia:Novokuznetsk
Asia:Novosibirsk
Asia:Omsk
Asia:Oral
Asia:Phnom_Penh
Asia:Pontianak
Asia:Pyongyang
Asia:Qatar
Asia:Qostanay
Asia:Qyzylorda
Asia:Rangoon
Asia:Riyadh
Asia:Saigon
Asia:Sakhalin
Asia:Samarkand
Asia:Seoul
Asia:Shanghai
Asia:Singapore
Asia:Srednekolymsk
Asia:Taipei
Asia:Tashkent
Asia:Tbilisi
Asia:Tehran
Asia:Thimphu
Asia:Tokyo
Asia:Tomsk
Asia:Ulaanbaatar
Asia:Urumqi
Asia:Ust-Nera
Asia:Vientiane
Asia:Vladivostok
Asia:Yakutsk
Asia:Yekaterinburg
Asia:Yerevan
Atlantic:Azores
Atlantic:Bermuda
Atlantic:Canary
Atlantic:Cape_Verde
Atlantic:Faeroe
Atlantic:Madeira
Atlantic:Reykjavik
Atlantic:South_Georgia
Atlantic:St_Helena
Atlantic:Stanley
Australia:Adelaide
Australia:Brisbane
Australia:Broken_Hill
Australia:Currie
Australia:Darwin
Australia:Eucla
Australia:Hobart
Australia:Lindeman
Australia:Lord_Howe
Australia:Melbourne
Australia:Perth
Australia:Sydney
Etc:GMT
Etc:GMT+1
Etc:GMT+10
Etc:GMT+11
Etc:GMT+12
Etc:GMT+2
Etc:GMT+3
Etc:GMT+4
Etc:GMT+5
Etc:GMT+6
Etc:GMT+7
Etc:GMT+8
Etc:GMT+9
Etc:GMT-1
Etc:GMT-10
Etc:GMT-11
Etc:GMT-12
Etc:GMT-13
Etc:GMT-14
Etc:GMT-2
Etc:GMT-3
Etc:GMT-4
Etc:GMT-5
Etc:GMT-6
Etc:GMT-7
Etc:GMT-8
Etc:GMT-9
Etc:UTC
Etc:Unknown
Europe:Amsterdam
Europe:Andorra
Europe:Astrakhan
Europe:Athens
Europe:Belgrade
Europe:Berlin
Europe:Bratislava
Europe:Brussels
Europe:Bucharest
Europe:Budapest
Europe:Busingen
Europe:Chisinau
Europe:Copenhagen
Europe:Dublin
Europe:Gibraltar
Europe:Guernsey
Europe:Helsinki
Europe:Isle_of_Man
Europe:Istanbul
Europe:Jersey
Europe:Kaliningrad
Europe:Kiev
Europe:Kirov
Europe:Lisbon
Europe:Ljubljana
Europe:London
Europe:Luxembourg
Europe:Madrid
Europe:Malta
Europe:Mariehamn
Europe:Minsk
Europe:Monaco
Europe:Moscow
Europe:Oslo
Europe:Paris
Europe:Podgorica
Europe:Prague
Europe:Riga
Europe:Rome
Europe:Samara
Europe:San_Marino
Europe:Sarajevo
Europe:Saratov
Europe:Simferopol
Europe:Skopje
Europe:Sofia
Europe:Stockholm
Europe:Tallinn
Europe:Tirane
Europe:Ulyanovsk
Europe:Uzhgorod
Europe:Vaduz
Europe:Vatican
Europe:Vienna
Europe:Vilnius
Europe:Volgograd
Europe:Warsaw
Europe:Zagreb
Europe:Zaporozhye
Europe:Zurich
Indian:Antananarivo
Indian:Chagos
Indian:Christmas
Indian:Cocos
Indian:Comoro
Indian:Kerguelen
Indian:Mahe
Indian:Maldives
Indian:Mauritius
Indian:Mayotte
Indian:Reunion
Pacific:Apia
Pacific:Auckland
Pacific:Bougainville
Pacific:Chatham
Pacific:Easter
Pacific:Efate
Pacific:Enderbury
Pacific:Fakaofo
Pacific:Fiji
Pacific:Funafuti
Pacific:Galapagos
Pacific:Gambier
Pacific:Guadalcanal
Pacific:Guam
Pacific:Honolulu
Pacific:Johnston
Pacific:Kiritimati
Pacific:Kosrae
Pacific:Kwajalein
Pacific:Majuro
Pacific:Marquesas
Pacific:Midway
Pacific:Nauru
Pacific:Niue
Pacific:Norfolk
Pacific:Noumea
Pacific:Pago_Pago
Pacific:Palau
Pacific:Pitcairn
Pacific:Ponape
Pacific:Port_Moresby
Pacific:Rarotonga
Pacific:Saipan
Pacific:Tahiti
Pacific:Tarawa
Pacific:Tongatapu
Pacific:Truk
Pacific:Wake
Pacific:Wallis
CST6CDT
EST5EDT
MST7MDT
PST8PDT
;-/
eg
!1@Pbx
O#W#x
 % 3 G U f s 
 _#g#
! !/!=!O!_!l!}!
"%"7"F"T"a"q"
#&#3#@#
ResB
TransliteratorNamePattern
%Translit%Hex
%Translit%UnicodeName
%Translit%UnicodeChar
ResB
RuleBasedTransliteratorIDs
Tone-Digit
alias
Digit-Tone
Amharic-Latin/BGN
am-Latn-t-am-m0-bgn
am-am_Latn/BGN
file
resource
direction
und-t-d0-accents
Any-Accents
und-t-s0-accents
Accents-Any
und-t-d0-publish
Any-Publishing
und-t-s0-publish
Publishing-Any
Arabic-Latin
und-Latn-t-und-arab
Arab-Latn
Latin-Arabic
und-Arab-t-und-latn
Latn-Arab
Arabic-Latin/BGN
ar-Latn-t-ar-m0-bgn
ar-ar_Latn/BGN
Armenian-Latin/BGN
hy-Latn-t-hy-m0-bgn
hy-hy_Latn/BGN
Azerbaijani-Latin/BGN
az-t-az-cyrl-m0-bgn
az_Cyrl-az/BGN
Belarusian-Latin/BGN
be-Latn-t-be-m0-bgn
be-be_Latn/BGN
Bengali-Arabic
und-Arab-t-und-beng
Beng-Arab
Bengali-Devanagari
und-Deva-t-und-beng
Beng-Deva
Bengali-Gujarati
und-Gujr-t-und-beng
Beng-Gujr
Bengali-Gurmukhi
und-Guru-t-und-beng
Beng-Guru
Bengali-InterIndic
internal
Bengali-Kannada
und-Knda-t-und-beng
Beng-Knda
Bengali-Latin
und-Latn-t-und-beng
Beng-Latn
Bengali-Malayalam
und-Mlym-t-und-beng
Beng-Mlym
Bengali-Oriya
und-Orya-t-und-beng
Beng-Orya
Bengali-Tamil
und-Taml-t-und-beng
Beng-Taml
Bengali-Telugu
und-Telu-t-und-beng
Beng-Telu
ur-t-und-beng
Beng-ur
Bulgarian-Latin/BGN
bg-Latn-t-bg-m0-bgn
bg-bg_Latn/BGN
Cyrillic-Latin
und-Latn-t-und-cyrl
Cyrl-Latn
Latin-Cyrillic
und-Cyrl-t-und-latn
Latn-Cyrl
Devanagari-Arabic
und-Arab-t-und-deva
Deva-Arab
Devanagari-Bengali
und-Beng-t-und-deva
Deva-Beng
Devanagari-Gujarati
und-Gujr-t-und-deva
Deva-Gujr
Devanagari-Gurmukhi
und-Guru-t-und-deva
Deva-Guru
Devanagari-InterIndic
Devanagari-Kannada
und-Knda-t-und-deva
Deva-Knda
Devanagari-Latin
und-Latn-t-und-deva
Deva-Latn
Devanagari-Malayalam
und-Mlym-t-und-deva
Deva-Mlym
Devanagari-Oriya
und-Orya-t-und-deva
Deva-Orya
Devanagari-Tamil
und-Taml-t-und-deva
Deva-Taml
Devanagari-Telugu
und-Telu-t-und-deva
Deva-Telu
ur-t-und-deva
Deva-ur
und-t-d0-hwidth
Fullwidth-Halfwidth
und-t-d0-fwidth
Halfwidth-Fullwidth
Georgian-Latin
und-Latn-t-und-geor
Geor-Latn
Latin-Georgian
und-Geor-t-und-latn
Latn-Geor
Georgian-Latin/BGN
ka-Latn-t-ka-m0-bgn
ka-Latn-t-ka-m0-bgn-2009
ka-ka_Latn/BGN
ka-Latn-t-ka-m0-bgn-1981
ka-ka_Latn/BGN_1981
Greek-Latin
und-Latn-t-und-grek
Grek-Latn
Latin-Greek
und-Grek-t-und-latn
Latn-Grek
Greek-Latin/BGN
el-Latn-t-el-m0-bgn
el-el_Latn/BGN
Greek-Latin/UNGEGN
und-Latn-t-und-grek-m0-ungegn
Grek-Latn/UNGEGN
Latin-Greek/UNGEGN
und-Grek-t-und-latn-m0-ungegn
Latn-Grek/UNGEGN
Gujarati-Arabic
und-Arab-t-und-gujr
Gujr-Arab
Gujarati-Bengali
und-Beng-t-und-gujr
Gujr-Beng
Gujarati-Devanagari
und-Deva-t-und-gujr
Gujr-Deva
Gujarati-Gurmukhi
und-Guru-t-und-gujr
Gujr-Guru
Gujarati-InterIndic
Gujarati-Kannada
und-Knda-t-und-gujr
Gujr-Knda
Gujarati-Latin
und-Latn-t-und-gujr
Gujr-Latn
Gujarati-Malayalam
und-Mlym-t-und-gujr
Gujr-Mlym
Gujarati-Oriya
und-Orya-t-und-gujr
Gujr-Orya
Gujarati-Tamil
und-Taml-t-und-gujr
Gujr-Taml
Gujarati-Telugu
und-Telu-t-und-gujr
Gujr-Telu
ur-t-und-gujr
Gujr-ur
Gurmukhi-Arabic
und-Arab-t-und-guru
Guru-Arab
Gurmukhi-Bengali
und-Beng-t-und-guru
Guru-Beng
Gurmukhi-Devanagari
und-Deva-t-und-guru
Guru-Deva
Gurmukhi-Gujarati
und-Gujr-t-und-guru
Guru-Gujr
Gurmukhi-InterIndic
Gurmukhi-Kannada
und-Knda-t-und-guru
Guru-Knda
Gurmukhi-Latin
und-Latn-t-und-guru
Guru-Latn
Gurmukhi-Malayalam
und-Mlym-t-und-guru
Guru-Mlym
Gurmukhi-Oriya
und-Orya-t-und-guru
Guru-Orya
Gurmukhi-Tamil
und-Taml-t-und-guru
Guru-Taml
Gurmukhi-Telugu
und-Telu-t-und-guru
Guru-Telu
ur-t-und-guru
Guru-ur
Han-Latin
und-Latn-t-und-hani
Hani-Latn
und-Latn-t-und-hani-m0-prprname
Han-Latin/Names
Han-Spacedhan
Spacedhan-Han
Hangul-Latin
und-Latn-t-und-hang
Hang-Latn
Hebrew-Latin
und-Latn-t-und-hebr
Hebr-Latn
Latin-Hebrew
und-Hebr-t-und-latn
Latn-Hebr
Hebrew-Latin/BGN
he-Latn-t-he-m0-bgn
he-he_Latn/BGN
Hiragana-Katakana
und-Kana-t-und-hira
Hira-Kana
Katakana-Hiragana
und-Hira-t-und-kana
Kana-Hira
Hiragana-Latin
und-Latn-t-und-hira
Hira-Latn
Latin-Hiragana
und-Hira-t-und-latn
Latn-Hira
IPA-XSampa
und-fonxsamp-t-und-fonipa
und_FONIPA-und_FONXSAMP
XSampa-IPA
und-fonipa-t-und-fonxsamp
und_FONXSAMP-und_FONIPA
InterIndic-Arabic
InterIndic-Bengali
InterIndic-Devanagari
InterIndic-Gujarati
InterIndic-Gurmukhi
InterIndic-Kannada
InterIndic-Latin
InterIndic-Malayalam
InterIndic-Oriya
InterIndic-Tamil
InterIndic-Telugu
InterIndic-ur
und-Latn-t-und-jamo
Jamo-Latn
Kannada-Arabic
und-Arab-t-und-knda
Knda-Arab
Kannada-Bengali
und-Beng-t-und-knda
Knda-Beng
Kannada-Devanagari
und-Deva-t-und-knda
Knda-Deva
Kannada-Gujarati
und-Gujr-t-und-knda
Knda-Gujr
Kannada-Gurmukhi
und-Guru-t-und-knda
Knda-Guru
Kannada-InterIndic
Kannada-Latin
und-Latn-t-und-knda
Knda-Latn
Kannada-Malayalam
und-Mlym-t-und-knda
Knda-Mlym
Kannada-Oriya
und-Orya-t-und-knda
Knda-Orya
Kannada-Tamil
und-Taml-t-und-knda
Knda-Taml
Kannada-Telugu
und-Telu-t-und-knda
Knda-Telu
ur-t-und-knda
Knda-ur
Katakana-Latin/BGN
ja-Latn-t-ja-hrkt-m0-bgn
ja_Hrkt-ja_Latn/BGN
Kazakh-Latin/BGN
kk-Latn-t-kk-m0-bgn
kk-kk_Latn/BGN
Kirghiz-Latin/BGN
ky-Latn-t-ky-m0-bgn
ky-ky_Latn/BGN
Korean-Latin/BGN
ko-Latn-t-ko-m0-bgn
ko-ko_Latn/BGN
und-t-d0-ascii
und-Latn-t-s0-ascii
Latin-ASCII
ASCII-Latin
Latin-Armenian
und-Armn-t-und-latn
Latn-Armn
Armenian-Latin
und-Latn-t-und-armn
Armn-Latn
Latin-Bengali
und-Beng-t-und-latn
Latn-Beng
Latin-Bopomofo
und-Bopo-t-und-latn
Latn-Bopo
Bopomofo-Latin
und-Latn-t-und-bopo
Bopo-Latn
Latin-ConjoiningJamo
ConjoiningJamo-Latin
Latin-Devanagari
und-Deva-t-und-latn
Latn-Deva
Latin-Gujarati
und-Gujr-t-und-latn
Latn-Gujr
Latin-Gurmukhi
und-Guru-t-und-latn
Latn-Guru
Latin-Hangul
und-Hang-t-und-latn
Latn-Hang
Latin-InterIndic
Latin-Jamo
und-Jamo-t-und-latn
Latn-Jamo
Latin-Kannada
und-Knda-t-und-latn
Latn-Knda
Latin-Katakana
und-Kana-t-und-latn
Latn-Kana
Katakana-Latin
und-Latn-t-und-kana
Kana-Latn
Latin-Malayalam
und-Mlym-t-und-latn
Latn-Mlym
und-pinyin-t-d0-npinyin
Latin-NumericPinyin
und-pinyin-t-s0-npinyin
NumericPinyin-Latin
Latin-Oriya
und-Orya-t-und-latn
Latn-Orya
Latin-Tamil
und-Taml-t-und-latn
Latn-Taml
Latin-Telugu
und-Telu-t-und-latn
Latn-Telu
Latin-Thai
und-Thai-t-und-latn
Latn-Thai
Macedonian-Latin/BGN
mk-Latn-t-mk-m0-bgn
mk-mk_Latn/BGN
Malayalam-Arabic
und-Arab-t-und-mlym
Mlym-Arab
Malayalam-Bengali
und-Beng-t-und-mlym
Mlym-Beng
Malayalam-Devanagari
und-Deva-t-und-mlym
Mlym-Deva
Malayalam-Gujarati
und-Gujr-t-und-mlym
Mlym-Gujr
Malayalam-Gurmukhi
und-Guru-t-und-mlym
Mlym-Guru
Malayalam-InterIndic
Malayalam-Kannada
und-Knda-t-und-mlym
Mlym-Knda
Malayalam-Latin
und-Latn-t-und-mlym
Mlym-Latn
Malayalam-Oriya
und-Orya-t-und-mlym
Mlym-Orya
Malayalam-Tamil
und-Taml-t-und-mlym
Mlym-Taml
Malayalam-Telugu
und-Telu-t-und-mlym
Mlym-Telu
ur-t-und-mlym
Mlym-ur
Maldivian-Latin/BGN
dv-Latn-t-dv-m0-bgn
dv-dv_Latn/BGN
Mongolian-Latin/BGN
mn-Latn-t-mn-m0-bgn
mn-mn_Latn/BGN
Oriya-Arabic
und-Arab-t-und-orya
Orya-Arab
Oriya-Bengali
und-Beng-t-und-orya
Orya-Beng
Oriya-Devanagari
und-Deva-t-und-orya
Orya-Deva
Oriya-Gujarati
und-Gujr-t-und-orya
Orya-Gujr
Oriya-Gurmukhi
und-Guru-t-und-orya
Orya-Guru
Oriya-InterIndic
Oriya-Kannada
und-Knda-t-und-orya
Orya-Knda
Oriya-Latin
und-Latn-t-und-orya
Orya-Latn
Oriya-Malayalam
und-Mlym-t-und-orya
Orya-Mlym
Oriya-Tamil
und-Taml-t-und-orya
Orya-Taml
Oriya-Telugu
und-Telu-t-und-orya
Orya-Telu
ur-t-und-orya
Orya-ur
Pashto-Latin/BGN
ps-Latn-t-ps-m0-bgn
ps-ps_Latn/BGN
Persian-Latin/BGN
fa-Latn-t-fa-m0-bgn
fa-fa_Latn/BGN
Pinyin-NumericPinyin
NumericPinyin-Pinyin
Russian-Latin/BGN
ru-Latn-t-ru-m0-bgn
ru-ru_Latn/BGN
Serbian-Latin/BGN
sr-Latn-t-sr-m0-bgn
sr-sr_Latn/BGN
Simplified-Traditional
und-Hant-t-und-hans
Hans-Hant
Traditional-Simplified
und-Hans-t-und-hant
Hant-Hans
Syriac-Latin
und-Latn-t-und-syrc
Syrc-Latn
Latin-Syriac
und-Syrc-t-und-latn
Latn-Syrc
Tamil-Arabic
und-Arab-t-und-taml
Taml-Arab
Tamil-Bengali
und-Beng-t-und-taml
Taml-Beng
Tamil-Devanagari
und-Deva-t-und-taml
Taml-Deva
Tamil-Gujarati
und-Gujr-t-und-taml
Taml-Gujr
Tamil-Gurmukhi
und-Guru-t-und-taml
Taml-Guru
Tamil-InterIndic
Tamil-Kannada
und-Knda-t-und-taml
Taml-Knda
Tamil-Latin
und-Latn-t-und-taml
Taml-Latn
Tamil-Malayalam
und-Mlym-t-und-taml
Taml-Mlym
Tamil-Oriya
und-Orya-t-und-taml
Taml-Orya
Tamil-Telugu
und-Telu-t-und-taml
Taml-Telu
ur-t-und-taml
Taml-ur
Telugu-Arabic
und-Arab-t-und-telu
Telu-Arab
Telugu-Bengali
und-Beng-t-und-telu
Telu-Beng
Telugu-Devanagari
und-Deva-t-und-telu
Telu-Deva
Telugu-Gujarati
und-Gujr-t-und-telu
Telu-Gujr
Telugu-Gurmukhi
und-Guru-t-und-telu
Telu-Guru
Telugu-InterIndic
Telugu-Kannada
und-Knda-t-und-telu
Telu-Knda
Telugu-Latin
und-Latn-t-und-telu
Telu-Latn
Telugu-Malayalam
und-Mlym-t-und-telu
Telu-Mlym
Telugu-Oriya
und-Orya-t-und-telu
Telu-Orya
Telugu-Tamil
und-Taml-t-und-telu
Telu-Taml
ur-t-und-telu
Telu-ur
Latin-Thaana
und-Thaa-t-und-latn
Latn-Thaa
Thaana-Latin
und-Latn-t-und-thaa
Thaa-Latn
Thai-Latin
und-Latn-t-und-thai
Thai-Latn
Thai-ThaiLogical
ThaiLogical-Thai
Thai-ThaiSemi
ThaiSemi-Thai
ThaiLogical-Latin
Latin-ThaiLogical
Turkmen-Latin/BGN
tk-t-tk-cyrl-m0-bgn
tk_Cyrl-tk/BGN
Ukrainian-Latin/BGN
uk-Latn-t-uk-m0-bgn
uk-uk_Latn/BGN
Uzbek-Latin/BGN
uz-t-uz-cyrl-m0-bgn
uz_Cyrl-uz/BGN
am-fonipa-t-am
am-am_FONIPA
am-t-am-fonipa
am_FONIPA-am
ar-t-am
am-ar
chr-t-am
am-chr
fa-t-am
am-fa
az-t-d0-lower
az-Lower
az-t-d0-title
az-Title
az-t-d0-upper
az-Upper
blt-fonipa-t-blt
blt-blt_FONIPA
am-t-ch
ch-am
ar-t-ch
ch-ar
ch-fonipa-t-ch
ch-ch_FONIPA
chr-t-ch
ch-chr
fa-t-ch
ch-fa
chr-fonipa-t-chr
chr-chr_FONIPA
am-t-cs
cs-am
ar-t-cs
cs-ar
chr-t-cs
cs-chr
cs-fonipa-t-cs
cs-cs_FONIPA
fa-t-cs
cs-fa
ja-t-cs
cs-ja
ko-t-cs
cs-ko
ja-t-cs-fonipa
cs_FONIPA-ja
ko-t-cs-fonipa
cs_FONIPA-ko
cy-fonipa-t-cy
cy-cy_FONIPA
de-t-de-d0-ascii
de-ASCII
dsb-fonipa-t-dsb
dsb-dsb_FONIPA
el-t-d0-lower
el-Lower
el-t-d0-title
el-Title
el-t-d0-upper
el-Upper
am-t-eo
eo-am
ar-t-eo
eo-ar
chr-t-eo
eo-chr
eo-fonipa-t-eo
eo-eo_FONIPA
fa-t-eo
eo-fa
am-t-es
es-am
ar-t-es
es-ar
chr-t-es
es-chr
es-fonipa-t-es
es-es_FONIPA
fa-t-es
es-fa
ja-t-es
es-ja
zh-t-es
es-zh
am-t-es-419
es_419-am
ar-t-es-419
es_419-ar
chr-t-es-419
es_419-chr
fa-t-es-419
es_419-fa
ja-t-es-419
es_419-ja
zh-t-es-419
es_419-zh
am-t-es-fonipa
es_FONIPA-am
es-419-fonipa-t-es-fonipa
es_FONIPA-es_419_FONIPA
ja-t-es-fonipa
es_FONIPA-ja
zh-t-es-fonipa
es_FONIPA-zh
fa-fonipa-t-fa
fa-fa_FONIPA
ha-NE-t-ha
ha-ha_NE
am-t-hy
hy-am
ar-t-hy
hy-ar
chr-t-hy
hy-chr
fa-t-hy
hy-fa
hy-fonipa-t-hy
hy-hy_FONIPA
am-t-hy-arevmda
hy_AREVMDA-am
ar-t-hy-arevmda
hy_AREVMDA-ar
chr-t-hy-arevmda
hy_AREVMDA-chr
fa-t-hy-arevmda
hy_AREVMDA-fa
hy-arevmda-fonipa-t-hy-arevmda
hy_AREVMDA-hy_AREVMDA_FONIPA
am-t-ia
ia-am
ar-t-ia
ia-ar
chr-t-ia
ia-chr
fa-t-ia
ia-fa
ia-fonipa-t-ia
ia-ia_FONIPA
am-t-it
it-am
ja-t-it
it-ja
ko-t-ja-latn
ja_Latn-ko
ru-t-ja-latn
ja_Latn-ru
am-t-kk
kk-am
ar-t-kk
kk-ar
chr-t-kk
kk-chr
fa-t-kk
kk-fa
kk-fonipa-t-kk
kk-kk_FONIPA
am-t-ky
ky-am
ar-t-ky
ky-ar
chr-t-ky
ky-chr
fa-t-ky
ky-fa
ky-fonipa-t-ky
ky-ky_FONIPA
la-fonipa-t-la
la-la_FONIPA
lt-t-d0-lower
lt-Lower
lt-t-d0-title
lt-Title
lt-t-d0-upper
lt-Upper
mn-Latn-t-mn-m0-mns
mn-mn_Latn/MNS
am-t-my
my-am
ar-t-my
my-ar
chr-t-my
my-chr
fa-t-my
my-fa
my-fonipa-t-my
my-my_FONIPA
my-t-my-d0-zawgyi
my-Zawgyi
my-t-my-s0-zawgyi
Zawgyi-my
nl-t-d0-title
nl-Title
nv-fonipa-t-nv
nv-nv_FONIPA
am-t-pl
pl-am
ar-t-pl
pl-ar
chr-t-pl
pl-chr
fa-t-pl
pl-fa
ja-t-pl
pl-ja
pl-fonipa-t-pl
pl-pl_FONIPA
ja-t-pl-fonipa
pl_FONIPA-ja
am-t-rm-sursilv
rm_SURSILV-am
ar-t-rm-sursilv
rm_SURSILV-ar
chr-t-rm-sursilv
rm_SURSILV-chr
fa-t-rm-sursilv
rm_SURSILV-fa
rm-fonipa-sursilv-t-rm-sursilv
rm_SURSILV-rm_FONIPA_SURSILV
am-t-ro
ro-am
ar-t-ro
ro-ar
chr-t-ro
ro-chr
fa-t-ro
ro-fa
ja-t-ro
ro-ja
ro-fonipa-t-ro
ro-ro_FONIPA
ja-t-ro-fonipa
ro_FONIPA-ja
ja-t-ru
ru-ja
zh-t-ru
ru-zh
Latin-Russian/BGN
ru-t-ru-latn-m0-bgn
ru_Latn-ru/BGN
am-t-sat
sat-am
ar-t-sat
sat-ar
chr-t-sat
sat-chr
fa-t-sat
sat-fa
sat-fonipa-t-sat-olck
sat_Olck-sat_FONIPA
am-t-si
si-am
ar-t-si
si-ar
chr-t-si
si-chr
fa-t-si
si-fa
si-fonipa-t-si
si-si_FONIPA
si-Latn-t-si
si-si_Latn
am-t-sk
sk-am
ar-t-sk
sk-ar
chr-t-sk
sk-chr
fa-t-sk
sk-fa
ja-t-sk
sk-ja
sk-fonipa-t-sk
sk-sk_FONIPA
ja-t-sk-fonipa
sk_FONIPA-ja
ta-fonipa-t-ta
ta-ta_FONIPA
am-t-tlh
tlh-am
ar-t-tlh
tlh-ar
chr-t-tlh
tlh-chr
fa-t-tlh
tlh-fa
tlh-fonipa-t-tlh
tlh-tlh_FONIPA
tr-t-d0-lower
tr-Lower
tr-t-d0-title
tr-Title
tr-t-d0-upper
tr-Upper
ug-fonipa-t-ug
ug-ug_FONIPA
ar-t-und-fonipa
und_FONIPA-ar
chr-t-und-fonipa
und_FONIPA-chr
fa-t-und-fonipa
und_FONIPA-fa
uz-Latn-t-uz-cyrl
uz_Cyrl-uz_Latn
uz-Cyrl-t-uz-latn
uz_Latn-uz_Cyrl
vec-fonipa-t-vec
vec-vec_FONIPA
am-t-xh
xh-am
ar-t-xh
xh-ar
chr-t-xh
xh-chr
fa-t-xh
xh-fa
xh-fonipa-t-xh
xh-xh_FONIPA
yo-BJ-t-yo
yo-yo_BJ
ru-t-zh-latn-pinyin
zh_Latn_PINYIN-ru
am-t-zu
zu-am
ar-t-zu
zu-ar
chr-t-zu
zu-chr
fa-t-zu
zu-fa
zu-fonipa-t-zu
zu-zu_FONIPA
TransliteratorNamePattern
%Translit%Hex
%Translit%UnicodeName
%Translit%UnicodeChar
TransliterateLATIN
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
?1A1-
C1E1-
2`2-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
(*-
35-
9>-
DF-
HJ-
MU-
V`-
af-
FMV
FV
1 2-
2X3-
p3{3-
!;
! ;
!!;
!";
!#;
!$;
!%;
!&;
!';
!(;
!(;
!*;
!+;
!,;
!-;
!.;
!/;
!1;
!0;
!1;
!2;
!3;
!3;
!5;
!6;
!7;
!8;
!9;
!>;
!?;
!@;
!A;
!B;
!C;
!D;
!F;
!F;
!G;
!H;
!J;
!J;
!K;
!L;
!M;
!U;
!V;
!L;
!";
!";
!+;
!/;
!`;
!a;
!?;
!@;
!f;
!g;
!h;
!i;
!j;
!k;
!l;
!m;
!n;
!o;
!0;
!0;
!5;
!$M;
/ _ 
B0D0F0H0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
K0M0O0Q0S0]
U0W0Y0[0]0]
_0a0d0f0h0]
q0t0w0z0}0]
p0s0v0y0|0q0t0w0z0}0~0
0B0D0F0H0J0]
J0F0 
0F0 
0F0 
S0F0 
0F0 
0F0 
]0F0 
0F0 
0F0 
h0F0 
0F0 
0F0 
n0F0 
0F0 
0F0 
{0F0 
0F0 
0F0 
0F0 
0F0 
0F0 
0F0 
0F0 
0F0 
0F0 
T0F0 
0F0 
0F0 
^0F0 
i0F0 
0F0 
0F0 
|0F0 
0F0 
0F0 
}0F0 
00-
0K0M0O0Q0S0]
0U0W0Y0[0]0]
0W0]
0_0a0d0f0h0]
0j0k0l0m0n0]
0o0r0x0{0]
0u0]
0L0N0P0R0T0V0X0Z0\0^0`0b0e0g0i0p0-
q0s0-
t0v0-
w0y0-
z0|0-
ki` 
kLN 
^i` 
~i` 
~LN 
Ti` 
TLN 
Si` 
Wi` 
WLN 
gi` 
<\lb 
<\eY 
<\eY 
~i` 
<\eY 
vi` 
vLN 
^i` 
NkQ]NAS~vCS
N$N]
NkQ]NAS~vCS,
QiQ]
Nxk;
]q\;
YO0W
YO>k
YOt^
YOtQ
YOmg
YO}[
iRYO
vQYO
!YO;
!HN;
Rxe;
w6q;
!k~^
}k~;
!k~;
|WX;
|WX;
*`#l;
P#l;
O#l;
U#l;
sY#l;
Y#l;
[#l;
m#l;
[#l;
W#l;
)VfU;
!1uh
r^Mb
!y^Mb;
!y^S
Sy^;
Mbr^
!Mby^;
:_r^
!7_y^;
[y^;
!9jy^;
Uy^;
gy^;
;Nr^
!;Ny^;
r^/e
!r^/e;
!r^#
r^pb
)Yr^
!)Yr^;
!!qr^;
vr^;
~NdW
!~NdW;
!~N;
!y^;
!r^;
RLu;
!kuLu;
RV{;
!kuV{;
Rxk;
!kuxk;
!V{ku;
!L|ku;
kku;
!@Sku;
Hr;u
!Hrku;
Hr;u
gku;
;R;u
!ku;
eP[;
hT+g
hTt^
hT8n
!hTJ
,ghT
!,g1
!hT;
~g'}
~gce
~gKb
>e~g
!~g;
RJRb
yue;
b_USq_
!Gy}Y;
!Gy;
!uO|v;
v^eQ
!uOeQ;
TuO;
TuO;
!&N;
!uO;
!vu;
!yV;
!HOS
!HOof;
!HO@\;
!HOn
^@z;
!|vHO;
!lQHO;
[HO;
!HO;
!%Y4O;
!%Y;
PwQ;
xY+Y
Y+Y;
YfZ;
xYal
Yal;
:_xY
!xY;
!wk;
!#l;
6RHr
6RGr
6R\O
yr6R
!6R;
!@z^y
!@zP[;
!Sb@z;
!@z4X;
!@zir;
!@z^
!@zI
!@z.z;
!@zWz;
S@z;
!;z@z;
N@z;
!s|@z;
y@z;
f@z;
!@z;
T7z;
+Rmb
!F_mb;
!%R;
!F_;
!Y_1X;
W[Gl
!W[Y_;
!/S;
!Y_;
!_j;
!:g;
!|vOw;
wS:\
!rc:\;
wSeQ
!rceQ;
wS>k
!rc>k;
!rc>|;
!rc.~;
!rc
!rcp
!rcw
%fwS
!%frc;
!Yqrc;
}rc;
-^wS
!-^rc;
5uwS
1gwS
!CxwS;
!|v;
!rc;
[oS;
NBf;
!\S;
lMz;
l)Y;
li~;
!8h;
[~a;
KQ2k
!KQ~a
S1~;
NKN'Y2k
NKN'Y~a;
w~a;
2kkp
!~akp;
y~a;
)R2k
!)R~a;
`~a;
y~a;
}Q2k
!xs~a;
!1~~a;
'`2k
!'`~a;
mQ2k
!mQ~a;
U~a;
!2k;
!~a;
ni~;
nBf;
jd|;
!GQhV;
!GQKb;
!CQGQ;
!ckGQ;
!GQ;
!Kr;
dSsT
nsT;
!FT;
!Cs;
!>l;
!Nl;
!>w;
!>k;
!5k;
!'g;
!X{;
!"T;
!Nk;
!CR;
!2x;
!.y;
!SU;
!_U;
!~^;
!(a;
!da;
!KQ;
!KR;
[W[WP
t[W[W
[WP[
GSNS
GSs^
fs^;
!GS;
!}P;
!6ekz;
!rs;
!kz;
!'~;
![};
!a~;
!i_;
!Yo;
!2r;
!"u;
!#u;
!;v;
!:v;
!vp;
!U};
!v};
!C~;
!9l;
!@r;
!Fr;
!Ns;
!lY;
!%w;
!&w;
!e`;
8nq\
s4l;
8n4O
8n%f
8nPN
8ngr
8nP[
8nKb
8ntQ
8n;S
8nf[
Eu8n
2N8n
!2NJ
%f8n
!%fJ
&P8n
!&PJ
+o8n
!+oJ
!"YJ
jm8n
!jmJ
^y8n
!^yJ
!8n;
5uP[h
YIQh
YIQ6
!Kb6
!\P6
!evP};
!ev;
!av;
!Nb;
!.};
`S\S
!`S\S;
`SfS
!`SfS;
!`S"Y;
!TO;
!`S;
Xb6e
1VXb
!Xb;
!gn;
!/};
!OwON;
!Ow;
!hc;
!`g;
!.R;
ZfZ;
YsY;
Yk[;
!0bDa;
!Da;
V#l;
b_q_
!b_q_
_pa;
aN?a
!?a;
!x^;
b4~;
!4~+Y;
!4~i~;
!4~;
S4g;
4g]x
!4g]x;
!8j;
!4g;
!CS~
!hs~
!"o~
!@b~
OIN }W
!-fW
!'YW
!SSW
!@w;
~NdW
!mbI
~NdW;
e~Nl
e~NI
g~NdW
g~NdW;
bd|;
!d|i
~{ag
~{R{
!d|R{;
Bl~{
!Bld|;
zd|;
d|9~6^;
!d|\
-N~{
!-Nd|;
!=|;
!d|;
!ENJ
!~vJ
! qJ
!vcJ
!KbJ
!Iq;
!al;
!Yl;
!C};
!)V;
!wQ;
!@\;
!|a;
!'d;
PGr;
!>d;
!]};
~zd;
vzd;
!zd;
]tz;
NRv;
uRv;
!BvRv;
uRv;
uRv;
lRv;
!Rv;
!|Tr|;
!r|Bl;
!r|2
!r|;
SyV;
SS_S_
SyVyV;
!wR;
xYq;
!Yq;
!G~y_;
%_+o
!0p+o;
!L_;
!0p;
!Ga;
!n~;
!ZX;
NBf;
NP[;
!P|;
!7|;
!!y;
!@d;
!C[;
!)m;
![OWO;
!#P;
OVg;
dyS;
d`{Q
!yS;
!8U;
!%d;
![k;
!dX;
!(d;
!:tot;
!ot;
!7~;
eHh;
!jw;
!^_;
!ui;
!.z;
!;Q;
!\:;
!|G;
!}L;
!>L;
!GO;
!+P;
!IP;
!tP;
!uP;
!*Q;
!2Q;
!7Q;
!8Q;
!:Q;
!<Q;
!0N;
N0N;
!LQ;
!RQ;
!WQ;
!gQ;
!iQ;
!*R;
!DR;
!GR;
!NR;
!WR;
![R;
!]R;
!nR;
!tR;
!uR;
!-S;
!1S;
!@S;
!TS;
!{S;
!3T;
!6T;
!BT;
!OU;
!^U;
!bU;
!.V;
!/V;
!0V;
!5V;
!8V;
!=V;
!SV;
!ZV;
!]V;
!`V;
!eV;
!fV;
!oV;
!rV;
!tV;
!xV;
!/X;
!1X;
!4X;
!JX;
!KX;
!OX;
!RX;
!WX;
!bX;
!uX;
!yX;
! Y;
!"Y;
!>Y;
!PY;
!gY;
!iY;
!jY;
!nY;
!|Y;
!AZ;
!fZ;
!mZ;
![;
!![;
!$[;
!*[;
!0[;
!8[;
!L[;
!k[;
!x[;
!7\;
!F\;
!M\;
!S\;
!\\;
!b\;
!d\;
!h\;
!l\;
!"];
!,];
!P];
!%^;
!+^;
!3^;
!6^;
!@^;
!C^;
!W^;
!X^;
!_^;
!c^;
!k^;
!l^;
!3_;
!5_;
!7_;
!H_;
!N_;
!e_;
!F`;
!4a;
!7a;
!>a;
!Ka;
!Ma;
!Xa;
!Za;
!_a;
!ca;
!ja;
!ka;
!na;
!sa;
!va;
!'b;
!)b;
!0b;
!1b;
!2b;
!6b;
!)c;
!>c;
!kc;
!5d;
!6d;
!Qd;
!\d;
!_d;
!od;
!sd;
!vd;
!{d;
!"e;
!#e;
!$e;
!*e;
!,e;
!We;
!Xe;
!ue;
!xe;
!Bf;
!If;
!]f;
!qg;
!Ji;
!Si;
!hi;
!mi;
!#j;
!9j;
!:j;
!Hj;
!Kj;
!bj;
!kj;
!=k;
!Pk;
!_k;
!ak;
!rk;
!xk;
!l;
!+l;
!,l;
!3l;
!Mz1
p'Y5
pq\5
n*gr^
p*g~N;
l'Ywm
l'Ywm;
lnmnm
lnmnm;
lnm;
liz;
lxm;
leQ;
law;
l[o;
lMz;
!Uy;
!zl;
!6m;
!ym;
!&n;
!,n;
!>n;
!Jn;
!^n;
!on;
!"o;
!#o;
!,o;
!2o;
!5o;
!8o;
!?o;
!Ao;
!Qo;
!To;
![o;
!do;
!oo;
!po;
!wo;
! p;
!&p;
!'p;
!(p;
!2p;
!>p;
!Cp;
!Dp;
!Qp;
!Up;
!Xp;
!]p;
!`p;
!cp;
!dp;
!gp;
!}p;
!!q;
!Rq;
!bq;
!eq;
!iq;
!lq;
!qq;
!-r;
!:r;
!>r;
!Xr;
!}r;
!6s;
!;s;
!As;
!Ds;
!Es;
!hs;
!js;
!ks;
!ns;
!ps;
!qs;
!us;
!ws;
!xs;
!zs;
!{s;
!|s;
!:t;
!?t;
!Kt;
!Rt;
!ct;
!dt;
!it;
!jt;
!rt;
!u;
!]u;
!bu;
!pu;
!!v;
!'v;
!.v;
!2v;
!Bv;
!Fv;
!Gv;
!Iv;
!Xv;
!_v;
!bv;
!dv;
!gv;
!iv;
!lv;
!mv;
!nv;
!pv;
!qv;
!rv;
!\w;
!^w;
!Ox;
!\x;
!dx;
!hx;
!ox;
!&y;
!*y;
!+y;
!,y;
!1y;
!1z;
!Lz;
!Mz;
!Nz;
!`z;
!az;
!bz;
!iz;
!mz;
!F{;
!M{;
!g{;
!t{;
!!|;
!#|;
!+|;
!9|;
!>|;
!C|;
!L|;
!Y|;
!\|;
!_|;
!`|;
!i|;
!j|;
!l|;
!n|;
!!};
!,};
!0};
!1};
!2};
!3};
!5};
!9};
!:};
!<};
!?};
!@};
!B};
!D};
!E};
!F};
!N};
!P};
!^};
!a};
!b};
!f};
!h};
!p};
!q};
!r};
!s};
!y};
!#~;
!+~;
!-~;
!.~;
!1~;
!2~;
!3~;
!5~;
!6~;
!9~;
!=~;
!>~;
!E~;
!F~;
!R~;
!T~;
!U~;
!Z~;
!^~;
!b~;
!i~;
!j~;
!m~;
!o~;
!p~;
!s~;
!x~;
!y~;
!|~;
!}~;
!~~;
!0;
PO+Y 
keY 
k$\ 
k$\ 
klb 
keY 
~eY 
~$\ 
~$\ 
~lb 
~eY 
TeY 
Tlb 
TeY 
ENi` 
WeY 
Wlb 
WeY 
s|lb 
<\eY 
~i` 
<\lb 
<\eY 
veY 
v$\ 
v$\ 
vlb 
veY 
^lb 
1$1 
1$1;
1%1 
1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1 1 
1 1;
1"1 
1"1;
1#1 
1#1;
1'1#1 
1'1#1
1'1#1;
1(1#1 
1(1#1
1(1#1;
1'1 
1'1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1'1#1 
1'1#1
1'1#1;
1'1 
1'1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1'1!1 
1'1!1
1'1!1;
1'1#1 
1'1#1
1'1#1;
1'1 
1'1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1'1 1 
1'1 1
1'1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1 
1(1;
1'1$1 
1'1$1
1'1$1;
1$1 
1$1;
1%1 
1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1'1!1 
1'1!1
1'1!1;
1'1#1 
1'1#1
1'1#1;
1(1#1 
1(1#1
1(1#1;
1'1 
1'1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1(1#1 
1(1#1
1(1#1;
1'1 
1'1;
1(1 
1(1;
1'1$1 
1'1$1
1'1$1;
1$1 
1$1;
1%1 
1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1'1!1 
1'1!1
1'1!1;
1'1#1 
1'1#1
1'1#1;
1(1#1 
1(1#1
1(1#1;
1'1 
1'1;
1(1 
1(1;
1)1 
1)1;
1'1$1 
1'1$1
1'1$1;
1$1 
1$1
1$1;
1%1 
1%1
1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1)1"1 
1)1"1
1)1"1;
1 1 
1 1
1 1;
1!1 
1!1
1!1;
1"1 
1"1
1"1;
1'1
1'1
1'1
1'1
1'1
1'1
1'1!1 
1'1!1
1'1!1;
1'1#1 
1'1#1
1'1#1;
1(1
1(1
1(1
1(1#1 
1(1#1
1(1#1;
1)1
1)1
1)1
1)1
1)1
1'1 
1'1
1'1;
1(1 
1(1
1(1;
1)1 
1)1
1)1;
1(1$1 
1(1$1
1(1$1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1'1 
1'1;
1(1 
1(1;
1(1$1 
1(1$1
1(1$1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1(1$1 
1(1$1
1(1$1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1'1$1 
1'1$1
1'1$1;
1)1%1 
1)1%1
1)1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1)1"1 
1)1"1
1)1"1;
1'1!1 
1'1!1
1'1!1;
1'1#1 
1'1#1
1'1#1;
1)1#1 
1)1#1
1)1#1;
1'1 
1'1;
1)1 
1)1;
1'1$1 
1'1$1
1'1$1;
1)1%1 
1)1%1
1)1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1)1"1 
1)1"1
1)1"1;
1'1!1 
1'1!1
1'1!1;
1'1#1 
1'1#1
1'1#1;
1)1#1 
1)1#1
1)1#1;
1'1 
1'1;
1)1 
1)1;
1'1$1 
1'1$1
1'1$1;
1)1%1 
1)1%1
1)1%1;
1'1 1 
1'1 1
1'1 1;
1'1"1 
1'1"1
1'1"1;
1'1%1 
1'1%1
1'1%1;
1)1"1 
1)1"1
1)1"1;
1'1!1 
1'1!1
1'1!1;
1'1#1 
1'1#1
1'1#1;
1)1#1 
1)1#1
1)1#1;
1'1 
1'1;
1)1 
1)1;
1(1$1 
1(1$1
1(1$1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1(1$1 
1(1$1
1(1$1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1(1$1 
1(1$1
1(1$1;
1!1%1 
1!1%1
1!1%1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
1$1 
1$1;
1%1 
1%1;
1(1"1 
1(1"1
1(1"1;
1(1%1 
1(1%1
1(1%1;
1 1 
1 1;
1!1 
1!1;
1"1 
1"1;
1#1 
1#1;
1(1#1 
1(1#1
1(1#1;
1(1 
1(1;
)1"1 
)1"1
)1"1;
)1%1 
)1%1
)1%1;
)1#1 
)1#1
)1#1;
'1$1 
'1$1
'1$1;
'1%1 
'1%1
'1%1;
'1 1 
'1 1
'1 1;
'1!1 
'1!1
'1!1;
'1"1 
'1"1
'1"1;
'1#1 
'1#1
'1#1;
(1(1%1 
(1(1%1
(1(1%1;
(1$1 
(1$1
(1$1;
(1%1 
(1%1
(1%1;
(1"1 
(1"1
(1"1;
(1#1 
(1#1
(1#1;
W-Z(c8k
o<9H
Vqcqese
8BD J>Z9f
576v7
?3@lA=E}GO
f1rwt
w9xKx
^Ih(l
7X<AA
DUJyKlS
f;fR
AzKZ
m5`:
^ndVe
qRsSs
,6-6
XaYeYgY
m;->
?>L7N
]RbLc3g
CWJ{J
k^p8r
'T&}N
L}vV
SFpOmcFd
|T}l
@2Bsb,d=e
s"vMv,
}B3KBW
RJSbW
W.^G^Z^k^`c
grq#{
BdIJ
CKKxK
O!X"X
5a?oIQS
cognh
=">,>=>
GvH@J=L
P]PyP
;YY,gMiZu
;1K4PKWLWyc
nVs({=
P#V_Y)]m]
uJyc}
B@FlJ
W#t+tC~
=;JpKtX
KjPD\Ei
JDM6[x
S!TZU6Y
Y|_<g
4 6)6D6@8
?#@y@6A~B
^c^d^
_;_<_C_
_-`6`
rXsYs
t@uAubu
}*~t~|
cxqQr5sqs
u-x>{
9u@>S
b*fsltl
=C@m@zAsF
XV^j_}dSg
nplp
xnz?
;8EJZ
C%HqK%R+R
?*v_v]
CF_H
x}~$
E&NuO
[v^w^
@[GfK
P]ReR
svvwv
x4}=
7g:m:
;';>=
CxCHD
J*KoK
t!y4y
.\S!
UUce
gekhkik
{?|y
$y8y]
HrPGZ
4-MMbPg
R9=C
H8PKU
U [Ln
G9;:Z<
FAFsG
`YaZa
oJs1
}92:M:
bGeKm,n_u'{V{^{t{
;l@UBB\d\
U`b?c
:_@JASE)I
[V]=d
.?$D
rayz
kynyozo
p:pXqQs
;L>}>.DND
I@IvJPM3N
Q,RWRwRtU=V
V|]]^Ld
q"u#u
;%>!@
ard_x
P<Zf
S:W4X
`^e6f
hJ!P1U
sRtEu|u
b)k/q,
onoJr
p#q|q'w
G)LVPob
4-549I9
R|Wn\{_
wixE
r9<@
DcD3H
:4=x?
cPehf
X&Yvx
l~m^n/rZr$t
y1zjz
<)?N@
NWNXNHT
XMXVX
c_f>g
zl{~}
Zh_r_[d!e
uav5w
cmk`l&o
B[D5G;G
W:\e`<kok;
8a9Z?8@
G H2I
S{Us_\`Wa
eXgAn{p
A*FQGtHEQ
4P>,C
;:@7CdZ
V&[1^l^
v zy{L|,}R}
T{g}g
O5Q5
6a8sA
iZini
g*k\k
s!t\u
i{j]
BuM;kXkP
M\U,V
l-sOt
;7?c@ O
2NLl
RPdNrUr
FZKGVb^
^@rC
R1RORYRuR
`4aT
}7KC
Wvc%d
fvg?i
D7G7n=*>
`vw6
hPrT
W2X([Ha
x y`y
LOdk
L:O}O:R>R
^?g(h!kX}&
7V9!B
}q~a
5;?XBzE
SCZn[
`Ra7j
o@ohoGp
QJn`
HDIXI
|,~(
kszI
][agd
PPU[U
k;h?
?XD!H
L>Mo]s]
7\LIRRR
U`V-d
@cMsR
qWucu*{T{
N'YOl
X)vh~]
FTTT
aCsB
Pyk.
^&^/^6^
_ `4b
u$|?}
87=!A7D
R0SUSXS
<"J5JeJ[K
PVUWU
U>VIV
^9_>_H_
zu~E
?F?yVS_
tvu\{9|a
HZQ!c
kYpa
j9lRo
P0RuV
v2z;z
u7+9A9
;wFxF
P:eb}b]
<2E^F
z&|`
D%b)gI{S
NNOrU
W$XCY}_
^Leue
SgTXW
gtr%x\
85??@
CmDoD
EXJZJ
PGUTW
`xaUd
u1wGw
c'eAe
n8u(vkvrvN
VLYpZ_e#i
=-?COkW
X`Y]Z
`BbBj]j
t5u\v
S]Y4_k_
kHl1t
*AFBL\Zb@
U9r:
Y4H9
9x:y:
\}]I^N`
lCrRr
T0w@
:?=uY
N7vU
6vC$L
\ ],]
_8fqg!l-l
minPxg}
.:\Q`Q:T
IrJbR
i<?>
Q5S;[
pMrXr
B5X>^=tyw
7sPlR
:m<*HEX
kEqVt
X`X_]
A4J:J
KJQLQQQ
J(TxV
dfeTj
M6_R
c`eje
U:YjYSeZe
DdF$H*I
c5g6g/i
>\AhDCF;ITJ
L4RAR
gWh5
Y?Z@ZY\
EyJnL
AeDjD
SCT]T
a9b|b$d9d
j^kzkBn't
x(xFx
@Yi`~q
6KSKaKAd]
O?QPQRQ2U
k1m>r
NtO5R
_2jH
lzv|v
y5:6
Y0hCjLm
x){O{Z
lKpE
s:t_
ejuS|Y~
jNj"n*p?p
w,y2{u|
@JB*D
h>lNl
B4k5
N#Pw_
:AJaU
YSZTZIb
q9AE=J*S\Y
5L:R=C>
AlBTD
H5I>J
S T]\
;]QzQ
\i^g
hhj~l
PKYnY
7&81@
g{hSi
C\F|J
Y@cSdrm
QIYWn(qHq.u+~
J5d:j;
DPL8M
B?CVCgDNE F
L~M@N
]E^^^
_+`vb
g?hth
t6uIuPuAv)xSy
y*z&{0{
|1}<}e}
ORT8V
n$q+u
919<;
I1J{K
_1i6rTy
~<-@)D5K
\Pfautyo}D
_9e`}F
S$badZg
ByN~N
QiW2\4\6\7\
_<eFg
z4{3|f
Qr^y^
]/na
i5q9q{{
z>z?z
R?TJT
\nypy
T*WA_
nkrqr
9X;g=
JnOSDT
ac?dKe<h
t>y>
^)imm?qJuZ}
MLNLmLtL)X
@TC5D
_m`)a;e[g
@WHKL
b1h^l
Z8[?fD2K]O
5E7d7:
iyq)
?IB;D0OqT
@&@0@(D{M
Y3\2abb
9}?[C
].]Ee
hDkqq
QPRnR
fSiUlW
cS}c
cQdA
S,Y*```D
F=IPsQ
E[FnFzG1N
c\dj
mEoLp
w6y|yF
YDh8mnp
.*<EA
^R_kd
H%IyO&S-S
^Q`1ewf9g?l@nxv
L=R?R
gBhgh"i
p$sPv
e6jM
tTwtw4
]I_M_
W<^W^Va
hF9M
:'<)<|<
>7=H
KzLi[
pXwm
796F
E4IAI!J
[!]E]Wf
>PCQC
UkmU
fIlWl
oQ3r]
I/YB
{U{N}
U7VQV
oFsKsTs
*6q6
f&fgf
oOp]p
g8hAi
D<?Vvo
YF`R`Ah*jkj
S=TMT
c9ntp
p"qax
GLHOH
_K_ol
l*mdm1nBo
4;'@
UNfI
U?^4s
58><T
K'L#M/MNNoN"S+S|T?U
?k@8B
ItJEKLKMK
iVn+p
r"sZt
|W} ~
O,U{lRm
F5-:
BSCvE<J
`6b-
8b=bHb
9I;"E{L3M
4f5w5
S;YsZ
]fdygfh
o;ukuuuc~
37"8
m$p2
a"kSkak
r8y=
?`GgI
\Sh9m
}o~3
8 Be
;V>+?
UBYPY
[H]{^
`abc
qeqMt
58C8;;.@CX
`{i_nboLq
qZs]t
{'|N
:9 DdQ[Y
[L^3`M`CfDf
q(~d
TEVUVNZ
pppsp
p4y4
7,9c9$:9:h:);q<
P6Q/SIS
[v\w\W_Y_Z_
_Z`u`
lMmOn
{u}b~j~
CcHZZ
mgwowd
n4!:
hQm>n?tI~K
u9YAqA
HxO;m
O%Y7okp
9/:G:
A_B8D%J
K%L[L
prshv
ykz/
GNiN
U0V>W
YP\F]G]
i-j_j
z=zMz
OvOnPYSsS}S
_%`1a"b
hkiui
krlRnWo
rVzn
718m8M9
OHP~Q
QBRdR
^P_Q_
u`vmy
y)z7zDzJzgz
}K~|~
@RE%MkN=OsO
W9Y>Y
lCmym
?+@[E
btbZ
]DGP
d7i>i+j
p8pNq
=/APAMB
KaMdM
V?X?_E_)b,b
b8cac
nUn=pPtQw
{!|[|x}m~
I;KHK
PQRcRqR
e+hWi
o3pnr
|]~q
k_lFm?oUuzu
yn~0
;p@CB
PVYhYlYhh
iNs)
_6_J_~d
=-CJC
yZz%|
p:B;
<q?r?
F^I|O
a"cAc
d*eke}e
fknlnZp
{^}s~
8-;><
V&VMVmV
cNeYe
oPoes
@xE[I
i]noq
y-z;
>*?7@9@
L"P|P
P&R'R<R
RiSjSUZ
\(]e]
]o^*b
fpg@h]hlivi
{P}\}
X4O798
K:LDL
P$T:XF\J\
s>tLuMu
@%B=B
C3F:I
IFIYK
io~t
R+UdV
["dIfKf
kUmxm
NbQUWYW[Z
evfxj
Q-RDRSW
fklll
E|G^M
YYZgZ*_3_
WCbE}
pZq[q
ABH)N
cNd;g
j^rvz
q8ENFN]NcNzYfgclxp
^faDcQe
:UA{G
S5ZnZE\]
w x]
.26L9t:
;|>d?
E/G^H
J,LaL
PyUEZ@\
we{e
7*8?:@:,; @.B
H_LUM
O(P6PwQ
[f\h\
fkk0m
=wS_T
W#^rc
]{aJh
rgs7wJw`wm}y}3~
XVi\
9q:H;~;
E?F`FLG
VR[S[k\
]!_O_
ewh[j\j
lMp3q
r4r5rWs
xU}v}
Y~hnl
5f7+=
DQE-GMG
gOaS
6$IRY
Q@RtR
WOXf]z`7aha
a>a,k
R*XA]!b
j?kAk
i7B<9?
[bCdK
b7e2h
C&D<S
I5N5S7)9
MKQ;RKR
@iHpH
R-TQW
Y3c|d|rAx\x{x
<]A%P
9T[P`J
q@~RD_
4/<MC
[cbBe
:`<`=
X+]]b
88/EHM
TrV&WWWJX
rjsw{
;@EWI
L5k>k@k
R!S)S
TG`Fh-mDxP{z{
#Q<Y
Q]S9W
w?x&ylzK}V}
S6z6kE
fOiQi
r}wu
_5ZEFFLFaF
[/\&a'a
a;j3k
{#|D|i
S8N<
f\fIo
s(t{t
hqxuy
mOwH
oH{?
G5t8
EhLkL
tvJ
N9XA
o(p,p^vivPw^wA|_|
A@CLD
\P]q^
o>pFpap
{C|c|
6+:\:
X>[D[O[
khm$o`p&r
.7k<
tot`x
zd{F
:ZC^E
T U.V
a%gvmbr
AiEdG
LOMlO
YE`3hQjfo
_Pb}i
4#5b=N>cC/D
t~uy'y2~
4|6}=
jEpWv
x(yk}
y{|/}
X#aVw
A{AkB
B`CfC
E#E'E
HXL;MSMiM
RSRzR
ZK[w[
OcQZ
7#8B8!9&9
?A?]?
BeC}C
P.Q7Q
V\W[X
X3ZoZt\
`Da>b.d
e&e-e
ktkwk
uXvgv
x:x>x
x*y+y0y
CzFeI,JQK
R2S3S
URVAYiY
x>|b|h|:~
[Yd[e
kpmEnKo
pIqSt
A>vG
HkJ!N$NiQ!UbU
?6@A@
`~fxn
i6s=
[j\z]
|Z~-
=&A`DMJ
{8|B
\%\&\
9/;^;i;
<9>2?_?}@@AmB
B2GSG
d5hmVm
susYwW
m~o6p
q\s3t
o[v]v
5u8D9
BABVByB"CEC
F2H|H
M+M6O
V}WY
YHZA[
v1x~y
z-{7}
,4^?gB
LVL^L
lAmOm
t`tlt
tDuYuqu
u$vEvkx
h^hzhnj
AmQoX
6k7c8
CjFbI
tCv,w
w;x1y2y
{`|K
Y63=AH1Q
7^8j9
K~L{P
^za|i
75Z\
v:v;v
:T;z<
G\HnJZL*M
R%WtWvX=Z
^T_U_.b]d
viwIx
|,|5|6|Y|
TBTa\b\e\
cKc[c
z^zmz}}7~
'5%8
H7i8M<
ZL[j[
nSpdptvuv
deugu$z
{n|V
<.PFR
f0vsv
A7BSB1C4C
sfx?{a}
Z$[7[V[K
{4+78:
rAspw#yCy
pN*Vl
4b6|A
`ra j
61GX\
;X=UEaGbGlH
XT^baqd
qLs5~&
7[869
_~`Wggg
lRl]m{r
X-oex;
<fAwK^Q%X
l5nfr
\<b4f
IETFW3XzX
hcisi
lDnHndq8s
[D]4c
k|m<n
@KB(L*LbM
wxwYy
Njbkc
9j<M=
AZBCDED
EfFiF
LM?MFM
f&gWj
47q7
D"HBI"Y#Y_[
CXCsEwE
IxI"M
Q%_L_
d e0p"r
e7'8]9
BgKJL
OJ[-_Ie
l#m3n
oVp+ws|
<5=K=
>G@?B
Q'VSX
\B^N^f^
NmPMQ
d4g@
Tm[C
4b:~@<B)C
FOJm^
GQH{H
bCeOeoe
lcnco
v"{={"| 
YOai
D}T'iz
^idyd
d!jEj
=n>|@
U=W{X
lPn o
rOs<v
w=w?w
EPIUL
RH` m_r8w
wF~*
karsrFuRu]u^unu*x
XU^Y^TaUa
f(g0gXi
vfwFz8~R
%:J=
J6TPT
K{[hd
CN7PvY
g`i7uXu
csnuqi
.;{ZJ
x@jN
fbpe
6>QI
d1sGx
o5^A
u2w%
ZA`E
:x>&F=F
FZG*PmW
WWZ<\T\)`
y~|c
X:eE
I1O`O
<k=e@FQMRM2O?S
Z:[p\
`5a5f
n$whw~
-A9A/K
IDS8U
Z"[C[]
457!8d;
[2["j
<?\2
6(6?6^6
687v:
C0C~H
V<W|[}[r]
`pd\e
rps/uM
?-E^O
D|l[r\rc
\Mw~]
c5cQvH
y72J
<BUE
vA+F-L
jss(
6tYe[/{
R)_.x
sYy|
nVqWq*
u'vxxP
Z4.5
P:Q*c
6E8`jE
c&d;d
i,zdz
UbV]
CTFrIxX
j'kPk
44?vP
`jaL
cwgVo,r6tb{M
s0|2|+
[;z=
eXohu
ZK^+d
pIrTu
C&JSN
6]J(R
6xT`
UtVUkC
9lCKI
S-V&`r`
p0xQx
J9v<
XsX8_m_
{Rgc
":_<
R|VoW
L=MdU
N9S}V
uVv4
C@DDD
H_H(I
uew+zl
KDiii
}RSa
<?oE)M
q=~>o_
ohyO
UI?N
Vl]rX
m9u/x
QoTjW@XO\[\
\!^2^H^s^
9hC}IaW
nQoU
\@e"f&m
s4x6x
KVR
{54<
NWVQb
d4e5e}o
>,B;BQD
f4g8j
8S9{:$;f<
`|a}a
hdh|h
<"ArA{B!DtD
ISJvK|K
OvQXR;W
]\]:^
s&t*t
xAyGyHyzy
z1|O|
ETHkKlK^N
O/TGT
USUTU_UMZz\
\uf^g
@H@I@dAC
D>EDF
J4LnT
T-UPVhV!YQY
l#lTl}l
lFnGn
4J8M@
Q6W"^p`
k=mHx
5C:w:
P[QCS1W2WwY\ZE[o[
asafb
j&kXlglur}r
{=|d|
:n:+>n@$BmE
NBPMR
iljlk[o\o
m~~1
BvDEI
JVM[M
X1[L]
i kIk
?I[T
.V:,N
^7_:_/j
oFrb
b6dH~f~
AM4U
Xj]g^
`reGj
xQ~2
CLJALTN
i5jKj
629f9d>$?
K5&6
s4t9t=v
B"T#T
["l+l
k0l u]
BVH,Q
aOhij*q-qbq
wwzyz
z;{G{<
N NuW
ZX`xi
799b9
kBlSl
nmnjq
I9OIO$S:S@SeWH\
f@m[yA{
GvMbO
m nHp
xg|G}
:&<f@
\._n`
7,@OD
G0HzOhQsU
YXZI[
b<dCg~i)j
l$mvnwr
uBxL{_}
A5A:<K<
<6=q>
LtS{S
`(ada
v^xnx
?3E|E
LeT+V6q
tB4Q
R<p}s
yczpz
[ahHj[
q4pb
_ h#h
\hbRg
hcrMy
A6B,F
HFHeH
\X]d]
rbtAzh}
ncqHt
Y,[z[$^
fGh*n
qN{9
9X>>AeQ
ZVbAg3m
GF'X
;1?m?
KQZuh$u
dj`~J
gml^t
Sv]1_Ii
N1c2c
muoQp/
KESKd
L%V{V^X"a
6"B]
Xuj]
.FQhRh
p9Ea
nE~+
4v9G<
>bB<E
hnkpk
t7vQzazozl~r
<:>,IwN9RNR&U@glh
1<<<d=
S<UQUeU
 ;XMRf
@0F R*R|R
Yq\S^a_;c'dIg
=>Hqf
FjHGI
IGLIL.M
d~e+i?jZkUlloWp
xU~.
pM|M$O
WDbLf
0B>B0_Nc
zr{D
C|F0K
ZroDw9}
sluru
GXO
7Khc
G6H.I
\=_Qata
aBdDdud
nDp>y
W4e5*7
O_Q{T
Y Z~\
\_bRe
s!u'u3u
w7x|zv|x|3}
u^y0
TvZ8[
.<U=
O<aNa
wsyg
L$MGSOT
lfn:qrr
JWP;n
GiRpR
XJ]`f
$C3C
M^T1Y8\M\
eImdn
rEsatA}y
MmNAS
\5l>w>
w6{U
4:5A<
<7>]>z@
G-I1ICJDK
_@`C`:b
c/f0f
w!wWw:y;yn{-|
{B|V
S6e@
J7mK
[KbO
rcsxs
.Lb]
P4!>!?9JYLfN
@0M~XLZp[
>UDjG
G^\l\
f{oYv
?@B$F9GBG<H
^7`U`
bRcpexe.g/g_g
l1oDo
zI}g
^57R0UA
<Tdp
`5vB.CDG
S@[G[
k5ym
J}Xaa
j:o=r
9@pW
.4l:lF
h9w?=KhK
g9"@5@^D
;%@{@
7<82=
A.EsH
T6V]V
8R;;>Q>
O)QUQ
Y0Z`[
pmr@y
Z']i]
9&:s:eB,G
`/akadi
-B9DyD
E9IsJ
dIdWd
n@sX
79BdB
U6vV
j&u#zLz
I4[4
UPXQX
[+a,a
nZoeo
| }$~
q-wbw
>WALBAC9E
HuHYI
jrksk
yBzWz_z@~P~x~Z
Y[k[
r;sj
9Z@#D_c
ZMdkh
|.~)
H@MzN"U
t"}(
VLXyY
n`rBy
nmszs(
B3BGC]C
C\D}D
SnW/[
w4m9
Q*Y3Y
`Kapl
AYDMW9`Jd
u+vqv
=N?Q?
cNk`n
R!Vdlon
}4v6
<:?oANB
UzUcW
XXX*d
o{qmt
@1BlD>I2Y
ZM^"_Fa
okt[}
TUUCh
6WYN
_]ayr
DhE.H
L/QP^
uP|X|"~~
8`A6E
J+K>KqLMP
c=oEt
JSO.c
VI\\\
gtiRk
FrQ)YVZ
GRHXHVI
IaXkXG\l`7d
u0uKuQu`u
5I6O9<A=AD
uSwF
8;{O
egyN
h$jRy${
 >7H%[
^oh@l
N\PwZI]
ns{d
s<u!
>'???
^d_Mf
f#gPhfj
lum|o
r^s.w
:Ecvh
jR{q}
x`_a
wPxP~Z
8qEIM
]"`xc
WWX`\
vza{o
NQTQ
NGJMNMMnSq/s
V_jn
@jA5\
O'Zzq
TQTMUKV
T:`>
?IWo\
5=l}uI
G1MGN
TXbab
b)c]cTgQl
0>1> ?
?kCPH
J~K?LWOhW6X
r#x$x
^u_-iUibj
c2d(e<m
n%oVuuz
F\RFX
X`Z5^/_N_~nkocp?
bVcMl
67\?
?KAqD
FyGJJ
`=cZfefif|f
i,tyu
NMSPS
_ecdg
.#\)\-
+\jlA
NfQz_
R5N6W6
J'MNPqS
c3iri(n
8`BJD:E_F
GPGiI
^7^C^
nMoYo
tSvYx
;O;l<
A'BtCwC
J?KKM
O*OIP}P
[>\W\#]T]
h2i'mXm
pRq%s
LsM:NMOkS
a*g-n
?mX7f
R;TaT
b}h3zOziz
H8OU
c5dvl
>5BzJuL
"627Y>%D
RUXcYa]
{>-P)U
m&n's
bpcB
NSPgS
ZD^~c
EgHLNmR\T
U,WK\
_GgMkYlZlal?m
>QBbC
K3T4T>TIT
mom!q
43;r=
QHSNU
aBc@d
eFjfkUo
.34T8~?
R|S^WbXfYzZ
\M]h]
bdbDedfLg
4C5g5
;?<F<d<
U=U;VOV
[V\`]
_8`S`o`
aqbxb
f^fpfsf
i(j@j7k%lPl`m
q,qUq
9W:o?
]-^:i
grjVk
y0~H
v4~6
9a;%<
>@*B
I3J#K
O8SLSlT
XC\m\
_,`D`@a
b1b2b
 5(<0<
5!6`?
sUtVxdx
xkyj{
H6d6:<
uqwE
>59<
y||J~
<j=TEhG
TUcU
Y4Z9ZqZ
uGvNv
w%y4zC}
sksns
>I?B@
DyF<I
J7JdLGM
d[fLj
p.s{s
swMwMx
E6GmO
teyt}
pqprp
u]xcxXz
mJ{$
V(V/V][Heie
e!hWk
cTiGk2sN
5]6f6
:f:j:h;
EuENF}FqGaH
IdJUP
ROSTS
\J`6a
c>c:d
P5M7qI~I
<,=.===
>J?K@OBcB
BHEJF]F
N3O^PpP
PhSxSgVnX
ZQ\S\_\g\
l)m+n
p#pzp
rlsDy
|2}O}l}
6b;}A#G
fzg#kFk
04$5
V^[.q*
fKq)sFt
nNxe
4,?D@
Y^Z9[x^'`
6DQGQ
__`yl6m
Y{e8qW
<{=K>
Y<=g
yM~a~
`9-<s?
[A^b
eGfHi(kTkQn
T4o4
(4[5
^4`d`IaMeXe
n5oJo
pfq]s
w8zn}
hJqDt{w
/5#6
<a>b@
pcvlv
@WC{CnG
IYJpJ0`!feifi
t)w4w
xb}<~O~
BQLtN
Xf[x[
.J0j
KeK7TyWVh%p
:,<L=f?
E)FIFqPZV
hjh3j
k5mTmooep
G@K(O
OBS@V^Y
k[l`o
90A"O
tXtZw{
3<IA_G
c)l,l
.[N@T]
;6>gA
GcPfR
Z.[&]
mnn9o
Y+Z.ZM[
\R]S]
x9yu{7|
:z;Y@
A*C~C
OCP<QVQWQ=S
S^V5YDYC]
a-bJb
l0n7n
u<w/~h
9+;=<
[e_f_eeOf
nNpTpgpip
q0q1q
xoxs
W5]8]
fhgJi
&5iCFD
P{QqW
ggi'l1l
ubv"y;}F
?:KPKnM
`Y`7h
i#j>o
kEyp
x4~41:
Z'\-\
p;r:s
sdtvt
:-=S>O@X@
GK;PNV
f0iqo.
K8L<
DzISc
d7r:r6
R6_N
5w9N:
:I<#>F@
H3I6I_IaI
INK_KRL
gjimiKk
tiuNy
y&zD~
>"?,A
T/W7Y
],_[_-
^_!`^`Eb
hKh,i8i
<;<]B]G
PoP:]
^Fb:e|e
94J4\4e4
6j6o6
7c7k8|8
9E<^<r<
=]=i=
=m>H?
A)A?A
D,EME
F8FXGoG
I%KBK^K
K/L,M]MBNIN
O?OZO~O
SSTmTyT
^ ^F^
g'h:h
j%k-k]k
lBmemsmYn
v1vTv
~v~y~
aGa6hEk
yC{j}
:4B5
5l6Y7
>\>^>
J&MQN
W$YlZ
D8JZN2T9\
o>vnv
mZnsJv
U8P@
M@PhU$V
Z0[F[~[
e g\h1j
j6nPq
BIDfE0I
UKX4[
p p/p4pPp\p
v]|o|
<u>4@
J,KJKWKXK
^q_ld
hgmAo?vmv
^4lF
ItM_V
oIpEr
uUvpv
WNXq]n_:`
a9aBa
mgn,ugx
=(u=x
O*QfT
4q5%6
?CC{D
HdP"\$\
l_m8n
r6s7s1u
L#NcS
iunVrWr
|72<
H}J9U\b
6$9Z9e9
>6?i@
A(ABC
C3D!E
K;LwL
OjQ#X,X
Z/Z1Z)[3]N][]
eEgYhaipi
i$kHk_kvk
vnwbx
415Q6b7
P,SsV
a'cTe
e@i@t
6(8"9T9
9c?L@
F1F;F
UJV+W
a~a+b1f
ojp4q\q
w!xrx
y"z6zez
{^|r|
}X~m
?]HII
nAp"w
7s9I>
I'KrL
n0r(s?sBs
*9P9G;HA
Z(`?a
__`_
.'707&;
G/HGH
H&ICI
g>j9p
{F|e|p|
6kYUf
f2l3ltq
y`{|{
PU[}`
` aMa
bg~]
l%}.}
T=h=n
n}p~p
p>uuw
[=]@
Q(WWb
|C6DBQ*|.|
<UK'Q9QFV
;(SBr
86_XXY
UjVea
hvppq
AIEjE
RGR6UgU
Z;^X^
N(Y1]
fDlB
xR~/
USYNb
K-g`qPr4u
b)d(w
YZcXd
_:1D:P
[5v&xA
IGJsL
7-8j@t@
G@HEJFJ|L
ZU\-]
J`LTOaP`S
b&b0b
Z _5_p_^a
j3oPs
c6t?
^3^[^YbVg
u,v4v
GKOAU
BVG~b
l*r+rutA
B\CnCrDFQ
:Y;o;
GCGUG
bzdbfcf}k
}NkU
E&H~JmM
[*^8d
hbhmhhi
kHmgo
@PD4H
JR\+_
w9z>}%~
O3WfX
hqt=u9w
BuCbL
wAw\w]{
UH8a
dtexf6l
`8g8O<@?
@#BLImI
IcX'^@^?eck
IyMKN
PnS1TgW
iAlel
wWyly
w6<7@9
O$P<P
[yagbmd
yw}6~@
D5s8v8
T@WAW
^>`I`zb
gbkfl
617B7
AEB\B
C-DGD
DLE-F
GyHMI
IbJ9KAKCLeL
P(Q6R
c1dod
eJfzf
u)yQy
z:zIz
zk{)}
A:BfG-N
YR^x_
vf|B}
UZX\X0\qkDq
y.z\z
OEP9X
r>wLyW{=
G4s4
[<f]f
v@|R|U|
R1g*h
mto&p*s
yQ}1
5C}E
G1HnI
5m="F
L6N;N
oQqnq
O4I7
FRGlG
J!KVK+OGOOO
X@]|g
w+x]yiy
zQ{o{
{5}8}
qHh[
dwpQt
{Q|^
?A`W
uwu~x
K,PSS
bIcLh
p[zqz?
SDUEU4W
Y:Zt_
jKlJm^m
oBp|p
r8tzx
{W|q|l
?8#<g?
H5LrNyQ
Y\[s[v[0]k]%h
TpTYU
y+{}|+}
97<t<FA
D3PZRW[c`
n,oxr%w&w
;S@&BxD
E'P+X
[O]U]x]
=E>UFLlP
`!atc
_CKG
|&~1~
5?5u=+HOY
cqi`
75<@=
PFSRS
O(U<r
sVyD}
Lk|d~
8I%eZ
<9Flf
j}y!zJ}j
g]z]
]=j\~G
G}c(f
~7PO
]S~@
64609n;
Ev
;l
+ j 
!2!P
 5 G t 
(F) *
(T).*
-n.!/
0,#C#Z#
#5#L#
t#c#
%2&^'
'j()b)<*
-~.?/
$4$I$%$W$e$z$
%'%F%T%c%y%
&(&?&V&l&
%J&n'
)r)L*
0.'9'
J'X'
(g'v'|'
(1(V(d(s(
O$k$
+E+Q,{,
)$)*)9)
N)\)k)z)
*(*6*E*T*Z*i*v*
+)+#+8+T+
,-,<,K,_,Y,n,
-#-*-@-
-\-j-y-
B.Q.-"A"g.w.
/d"x"^
1/P/o/
0*070B0
,_0y0
Layo
3irTB
3irTB
:HRbr
 #################
"""""""""""""
##""
######
########
"""""
##""
######
#########
""""""
##""
########
"""""
##""
######
########
"""""
##""
########
"""""
##""
########
"""""
###""
##################
""""""
""""""""
""""""""""
""""""
""""""""""
"""""
"""""""""""""
##########""""""
####""""
""""
""""
#############
""""""""""
"""""""""
!!!!!!!!!!!
""""""""""""""""
"""""
"""""""""""""""
 ###########
"""""""""""
 #######
""""""
"""""""""
"""""""

##"###
"""""
"""""""""""
!!!!!!!!!
""""""""
 #####
"""""""""
"""""""""""""""
"""""
""""""""
###########""""""
 ##########
"""""""""
 ####
!!!!!
"""""""""""""
""""
####
"""""""""
########
##""
"""""""""""
##############
""""""
""""
####""
"""""""""""""
 """"""
"""""""""""
"""""""
########
####
"""""""
""""
#""""""""""
#"""""""""""
#########
####
"""""""
""""
"""""
#######
""""""
######
"""""
""""
3irTB
ResB
InstalledLocales
Nrm2
3irT
5t
 0 .
'B't'
',(l(.
()L)
)*(*h*
$4,4
[4[4c4.
[4[4s4.
J5W5c5~
6 6[
06?6
O6_6o6
7"7[
27B7P7]7.
i7w7
-8=8M8]8m8C8S8c898I8Y8i8?858_858E8U8}8
9#939C9Q9a9q9
: :0:@:P:`:
;+;;;K;[;k;{;
<+<;<K<[<k<{<
%+19
=C
U[a
zSzSzSQ
K*K:KJKZKjK
K*K:KJKZKjKvK
L"L2LBLRL
L"L2LBLRL
 # ' + / 3 7 ; ? C G K O S W [ _ c g k o s w { 
!#!'!+!/!3!7!;!?!C!G!K!O!S!W![!_!c!g!k!o!s!w!{!
"#"'"+"/"3"7";"?"C"Q
K"O"
R"X"
j"n"
Rv"z"~"
S S$S(S,S0S4S8S<S@SDSHSLSPSTSXS\S`SdShSQ
###'#+#/#3#7#;#?#C#G#K#O#S#W#[#_#c#Q
g#k#o#s#w#{#
M)M;MMM_MqM
N'NANQ
$'$/$7$?$G$O$W$_$g$o$w$
*%3%9%?%E%K%Q%W%]%c%i%o%u%{%
%j"r"v"~"
"PNXN`NhNpNxN
g#k#
 C ? 
%o#s#w#
&%&+&1&7&=&C&I&O&U&[&a&g&m&s&y&
'!'%')'-'1'4'8'<'@'D'I'M'Q'U'Y']'a'e'i'm'q'u'y'|'
'GOSObOoO
O/(9(
OD(L(
P!PU([(`(h(*P:PGPUPePpP{P
()Q<QOQ
)#)))/)5);)A)G)M)S)Y)_)g)o)w)
*!*'*-*3*<*B*H*N*T*Z*`*f*l*t*~*
+#+++3+9+@+I+<*R+Z+b+j+r+
, ,&,
*,,2,8,>,F,`*L,T,\,Q
b,j,p,v,|,
-!-)-1-9-A-I-Q-Y-a-i-q-x-
.!.%.).-.1.5.9.=.A.E.I.M.Q.U.Y.].a.e.i.m.q.u.y.}.
|S}S|S|S|S|S|S|SQ
|S}S
|S&A
.?"?"
/!/%/)/-/1/5/9/=/A/E/I/M/Q/U/Y/]/a/e/i/m/q/u/y/}/
0!0%0)0-0105090%/=0A0E0I0M0Q0U0Y0]0a0e0i0m0q0u0y0}0
1!1%1)1-1115191=1
0A1E1I1M1Q1U1Y1]1E0a1e1i1m1q1u1y1}1
2!2%2)2-2125292=2A2E2
!I2M2Q2U2Y2]2a2e2i2m2q2u2y2
3!3%3)3-3135393=3A3E3I3M3
Q3U3Y3]3a3e3i3m3q3u3y3}3
493#4'4+4
2/43474;4?4C4G4K4O4S4W4[4Y3_4]3c4g4k4o4s4
2y/w4{4# 
5%5)5-51575=5C5G5Q
J5P5V5\5d5l5l5Q
s5y5
6"6Q
.646Q
:6@6Q
F6L6R6X6^6d6j6p6v6}6
7!7'7-73787?7E7K7Q7W7\7c7i7o7t7{7
8#8(8/858;8@8F8M8S8Y8_8e8k8p8w8}8
9$9*90989@9H9P9X99RCR%RMR
R.Ra9g9-7m93787s9y9Q7
9W7\7
9o7t7#8(8;8@8F8_8e8k8p8
RWR%RaR
7!7'7-7
9?7E7K7Q7
9i7{7
8/858M8S8Y8_8e8w8}8
9%RaR-7
9_8e8
: :':,:3:8:?:D:K:P:W:\:c:h:o:t:{:
: :':,:3:8:?:D:K:P:W:\:c:h:o:t:{:
;#;+;+;3;;;;;C;C;K;S;S;Z;c;c;k;k;s;{;{;
<"<+<3<;<C<Q
K<S<[<c<k<s<s<{<
="=*=2=:=B=
;J=R=[=b=k=s=k=[=z=
>7>I>
zSzSzSzSzSzSzSzSzSzSzSzSzSzSzSzSS>W>Q
_>c>g>k>Q
o>s>w>w>y
w>w>w>S>W>Q
[>c>_>o>y
?"?(?/?jRjRrRrRzRzR
R2?2?7?7?7?7?;?;?????????C?C?C?C?G?G?G?G?K?K?K?K?O?O?O?O?S?S?W?W?[?[?_?_?c?c?c?c?g?g?g?g?k?k?k?k?o?o?o?s?s?s?s?w?w?w?w?{?{?{?{?
'!'%')'-'1'4'8'<'@'D'I'M'Q'U'Y']'a'e'i'm'q'u'y'|'
?nStSQ
j"n"
Rv"z"~"
S S$S(S,S
0S4S8S<S@SDSa
HSLSPSTSXS\S!
`SdShS
@ @%@)@-@i
zSzSzSzSQ
0@:@D@R@`@n@|@
2?7?G?S?Q
?_?K?s?
?c?{?
?[?g???C?O?W?o?w?
6#A'AQ
7?G?Q
?c?{?
g???C?O?Q
?c?{?Q
7?G?Q
K?s?
?c?{?
g???C?O?Q
o?w?
2?7?G?S?
?_?K?s?
?c?{?
?[?g???C?O?W?o?w?
7?G?S?Q
?_?K?s?
?c?{?Q
+A1A7A=ACAIAOAUA[AaA
B#B'BQ
+B3B;BCBKBSB[BcBkBQ
sBwBQ
4-313
C#C'C+C1C5C9C=CACECICMCQCUCYC]CaCaC'4eCiCmCqC=3uCyC}C
D!D'D+D/D3D7D;D?DCDGDKDODSDYD]DaDeDu/iD
oDoDuDyDyD}D
E#E'E+E/E3Ea37E;EAEEEIEMEi3QEUEYE]EaEeEiEmEy/w4qEuEyE}E
F#F'F+F/F
43F7F=FAFEFKFQFUF
4YF]FaFeFiFmFqFwF{F
G#G#G
4-5'G+G/G3G9G
4=GAG
3GGMG
2SGWG
3[G_GcGiGiGQ
oGsGyG}G
H#H)H/HuD5H9H=HAHEHIHMHQHUHYH]HaH
0gHkHoHsHwH{H
I#I'I+I1I7I;I?I
4K!CIIIMIQIUIYI_IeIiImIqIwI
J#J'J+J
51J5J9J=JAJEJKJOJUJ[J
"eJiJmJqJ/"uJQ
B/|)
[FV
2 2 
2 2 2 
5 5 
5 5 5 
2 2 2 2 
+"+"
+"+"+"
."."
."."."
+"+"+"+"
'Yck
{0K0
fFdFf[
ResB
mapTimezones
AUS Central Standard Time
AUS Eastern Standard Time
Afghanistan Standard Time
Alaskan Standard Time
Aleutian Standard Time
Altai Standard Time
Arab Standard Time
Arabian Standard Time
Arabic Standard Time
Argentina Standard Time
Astrakhan Standard Time
Atlantic Standard Time
Aus Central W. Standard Time
Azerbaijan Standard Time
Azores Standard Time
Bahia Standard Time
Bangladesh Standard Time
Belarus Standard Time
Bougainville Standard Time
Canada Central Standard Time
Cape Verde Standard Time
Caucasus Standard Time
Cen. Australia Standard Time
Central America Standard Time
Central Brazilian Standard Time
Central Europe Standard Time
Central European Standard Time
Central Pacific Standard Time
Central Standard Time (Mexico)
Chatham Islands Standard Time
China Standard Time
Cuba Standard Time
Dateline Standard Time
E. Africa Standard Time
E. Australia Standard Time
E. Europe Standard Time
E. South America Standard Time
Easter Island Standard Time
Eastern Standard Time (Mexico)
Egypt Standard Time
Ekaterinburg Standard Time
FLE Standard Time
Fiji Standard Time
GMT Standard Time
GTB Standard Time
Georgian Standard Time
Greenland Standard Time
Greenwich Standard Time
Haiti Standard Time
Hawaiian Standard Time
India Standard Time
Iran Standard Time
Israel Standard Time
Jordan Standard Time
Kaliningrad Standard Time
Libya Standard Time
Line Islands Standard Time
Lord Howe Standard Time
Magadan Standard Time
Magallanes Standard Time
Marquesas Standard Time
Mauritius Standard Time
Middle East Standard Time
Montevideo Standard Time
Morocco Standard Time
Mountain Standard Time (Mexico)
Myanmar Standard Time
N. Central Asia Standard Time
Namibia Standard Time
Nepal Standard Time
New Zealand Standard Time
Newfoundland Standard Time
Norfolk Standard Time
North Asia East Standard Time
North Asia Standard Time
North Korea Standard Time
Omsk Standard Time
Pacific SA Standard Time
Pacific Standard Time (Mexico)
Pakistan Standard Time
Paraguay Standard Time
Romance Standard Time
Russia Time Zone 10
Russia Time Zone 11
Russia Time Zone 3
Russian Standard Time
SA Eastern Standard Time
SA Pacific Standard Time
SA Western Standard Time
SE Asia Standard Time
Saint Pierre Standard Time
Sakhalin Standard Time
Samoa Standard Time
Sao Tome Standard Time
Saratov Standard Time
Singapore Standard Time
South Africa Standard Time
Sri Lanka Standard Time
Sudan Standard Time
Syria Standard Time
Taipei Standard Time
Tasmania Standard Time
Tocantins Standard Time
Tokyo Standard Time
Tomsk Standard Time
Tonga Standard Time
Transbaikal Standard Time
Turkey Standard Time
Turks And Caicos Standard Time
US Mountain Standard Time
UTC+12
UTC+13
UTC-02
UTC-08
UTC-09
UTC-11
Ulaanbaatar Standard Time
Venezuela Standard Time
Vladivostok Standard Time
W. Australia Standard Time
W. Central Africa Standard Time
W. Europe Standard Time
W. Mongolia Standard Time
West Asia Standard Time
West Bank Standard Time
West Pacific Standard Time
Yakutsk Standard Time
uu
dd
SS
11
BB
69<
"?Sj
ResB
6w]U
c8%)b
<:Ym
^f2nh
a$p$
%"%\
 & 1 @ X p { 
!%!4!@!V!j!x!
"*"5"K"Y"c"t"
#%#2#E#S#^#j#v#
$+$5$A$N$
ResB
Version
zoneStrings
Africa:Abidjan
Africa:Accra
Africa:Addis_Ababa
Africa:Algiers
Africa:Asmera
Africa:Bamako
Africa:Bangui
Africa:Banjul
Africa:Bissau
Africa:Blantyre
Africa:Brazzaville
Africa:Bujumbura
Africa:Cairo
Africa:Casablanca
Africa:Ceuta
Africa:Conakry
Africa:Dakar
Africa:Dar_es_Salaam
Africa:Djibouti
Africa:Douala
Africa:El_Aaiun
Africa:Freetown
Africa:Gaborone
Africa:Harare
Africa:Johannesburg
Africa:Juba
Africa:Kampala
Africa:Khartoum
Africa:Kigali
Africa:Kinshasa
Africa:Lagos
Africa:Libreville
Africa:Lome
Africa:Luanda
Africa:Lubumbashi
Africa:Lusaka
Africa:Malabo
Africa:Maputo
Africa:Maseru
Africa:Mbabane
Africa:Mogadishu
Africa:Monrovia
Africa:Nairobi
Africa:Ndjamena
Africa:Niamey
Africa:Nouakchott
Africa:Ouagadougou
Africa:Porto-Novo
Africa:Sao_Tome
Africa:Tripoli
Africa:Tunis
Africa:Windhoek
America:Adak
America:Anchorage
America:Anguilla
America:Antigua
America:Araguaina
America:Argentina:La_Rioja
America:Argentina:Rio_Gallegos
America:Argentina:Salta
America:Argentina:San_Juan
America:Argentina:San_Luis
America:Argentina:Tucuman
America:Argentina:Ushuaia
America:Aruba
America:Asuncion
America:Bahia
America:Bahia_Banderas
America:Barbados
America:Belem
America:Belize
America:Blanc-Sablon
America:Boa_Vista
America:Bogota
America:Boise
America:Buenos_Aires
America:Cambridge_Bay
America:Campo_Grande
America:Cancun
America:Caracas
America:Catamarca
America:Cayenne
America:Cayman
America:Chicago
America:Chihuahua
America:Coral_Harbour
America:Cordoba
America:Costa_Rica
America:Creston
America:Cuiaba
America:Curacao
America:Danmarkshavn
America:Dawson
America:Dawson_Creek
America:Denver
America:Detroit
America:Dominica
America:Edmonton
America:Eirunepe
America:El_Salvador
America:Fort_Nelson
America:Fortaleza
America:Glace_Bay
America:Godthab
America:Goose_Bay
America:Grand_Turk
America:Grenada
America:Guadeloupe
America:Guatemala
America:Guayaquil
America:Guyana
America:Halifax
America:Havana
America:Hermosillo
America:Indiana:Knox
America:Indiana:Marengo
America:Indiana:Petersburg
America:Indiana:Tell_City
America:Indiana:Vevay
America:Indiana:Vincennes
America:Indiana:Winamac
America:Indianapolis
America:Inuvik
America:Iqaluit
America:Jamaica
America:Jujuy
America:Juneau
America:Kentucky:Monticello
America:Kralendijk
America:La_Paz
America:Lima
America:Los_Angeles
America:Louisville
America:Lower_Princes
America:Maceio
America:Managua
America:Manaus
America:Marigot
America:Martinique
America:Matamoros
America:Mazatlan
America:Mendoza
America:Menominee
America:Merida
America:Metlakatla
America:Mexico_City
America:Miquelon
America:Moncton
America:Monterrey
America:Montevideo
America:Montserrat
America:Nassau
America:New_York
America:Nipigon
America:Nome
America:Noronha
America:North_Dakota:Beulah
America:North_Dakota:Center
America:North_Dakota:New_Salem
America:Ojinaga
America:Panama
America:Pangnirtung
America:Paramaribo
America:Phoenix
America:Port-au-Prince
America:Port_of_Spain
America:Porto_Velho
America:Puerto_Rico
America:Punta_Arenas
America:Rainy_River
America:Rankin_Inlet
America:Recife
America:Regina
America:Resolute
America:Rio_Branco
America:Santa_Isabel
America:Santarem
America:Santiago
America:Santo_Domingo
America:Sao_Paulo
America:Scoresbysund
America:Sitka
America:St_Barthelemy
America:St_Johns
America:St_Kitts
America:St_Lucia
America:St_Thomas
America:St_Vincent
America:Swift_Current
America:Tegucigalpa
America:Thule
America:Thunder_Bay
America:Tijuana
America:Toronto
America:Tortola
America:Vancouver
America:Whitehorse
America:Winnipeg
America:Yakutat
America:Yellowknife
Antarctica:Casey
Antarctica:Davis
Antarctica:DumontDUrville
Antarctica:Macquarie
Antarctica:Mawson
Antarctica:McMurdo
Antarctica:Palmer
Antarctica:Rothera
Antarctica:Syowa
Antarctica:Troll
Antarctica:Vostok
Arctic:Longyearbyen
Asia:Aden
Asia:Almaty
Asia:Amman
Asia:Anadyr
Asia:Aqtau
Asia:Aqtobe
Asia:Ashgabat
Asia:Atyrau
Asia:Baghdad
Asia:Bahrain
Asia:Baku
Asia:Bangkok
Asia:Barnaul
Asia:Beirut
Asia:Bishkek
Asia:Brunei
Asia:Calcutta
Asia:Chita
Asia:Choibalsan
Asia:Colombo
Asia:Damascus
Asia:Dhaka
Asia:Dili
Asia:Dubai
Asia:Dushanbe
Asia:Famagusta
Asia:Gaza
Asia:Hebron
Asia:Hong_Kong
Asia:Hovd
Asia:Irkutsk
Asia:Jakarta
Asia:Jayapura
Asia:Jerusalem
Asia:Kabul
Asia:Kamchatka
Asia:Karachi
Asia:Katmandu
Asia:Khandyga
Asia:Krasnoyarsk
Asia:Kuala_Lumpur
Asia:Kuching
Asia:Kuwait
Asia:Macau
Asia:Magadan
Asia:Makassar
Asia:Manila
Asia:Muscat
Asia:Nicosia
Asia:Novokuznetsk
Asia:Novosibirsk
Asia:Omsk
Asia:Oral
Asia:Phnom_Penh
Asia:Pontianak
Asia:Pyongyang
Asia:Qatar
Asia:Qyzylorda
Asia:Rangoon
Asia:Riyadh
Asia:Saigon
Asia:Sakhalin
Asia:Samarkand
Asia:Seoul
Asia:Shanghai
Asia:Singapore
Asia:Srednekolymsk
Asia:Taipei
Asia:Tashkent
Asia:Tbilisi
Asia:Tehran
Asia:Thimphu
Asia:Tokyo
Asia:Tomsk
Asia:Ulaanbaatar
Asia:Urumqi
Asia:Ust-Nera
Asia:Vientiane
Asia:Vladivostok
Asia:Yakutsk
Asia:Yekaterinburg
Asia:Yerevan
Atlantic:Azores
Atlantic:Bermuda
Atlantic:Canary
Atlantic:Cape_Verde
Atlantic:Faeroe
Atlantic:Madeira
Atlantic:Reykjavik
Atlantic:South_Georgia
Atlantic:St_Helena
Atlantic:Stanley
Australia:Adelaide
Australia:Brisbane
Australia:Broken_Hill
Australia:Currie
Australia:Darwin
Australia:Eucla
Australia:Hobart
Australia:Lindeman
Australia:Lord_Howe
Australia:Melbourne
Australia:Perth
Australia:Sydney
Etc:UTC
Etc:Unknown
Europe:Amsterdam
Europe:Andorra
Europe:Astrakhan
Europe:Athens
Europe:Belgrade
Europe:Berlin
Europe:Bratislava
Europe:Brussels
Europe:Bucharest
Europe:Budapest
Europe:Busingen
Europe:Chisinau
Europe:Copenhagen
Europe:Dublin
Europe:Gibraltar
Europe:Guernsey
Europe:Helsinki
Europe:Isle_of_Man
Europe:Istanbul
Europe:Jersey
Europe:Kaliningrad
Europe:Kiev
Europe:Kirov
Europe:Lisbon
Europe:Ljubljana
Europe:London
Europe:Luxembourg
Europe:Madrid
Europe:Malta
Europe:Mariehamn
Europe:Minsk
Europe:Monaco
Europe:Moscow
Europe:Oslo
Europe:Paris
Europe:Podgorica
Europe:Prague
Europe:Riga
Europe:Rome
Europe:Samara
Europe:San_Marino
Europe:Sarajevo
Europe:Saratov
Europe:Simferopol
Europe:Skopje
Europe:Sofia
Europe:Stockholm
Europe:Tallinn
Europe:Tirane
Europe:Ulyanovsk
Europe:Uzhgorod
Europe:Vaduz
Europe:Vatican
Europe:Vienna
Europe:Vilnius
Europe:Volgograd
Europe:Warsaw
Europe:Zagreb
Europe:Zaporozhye
Europe:Zurich
Indian:Antananarivo
Indian:Chagos
Indian:Christmas
Indian:Cocos
Indian:Comoro
Indian:Kerguelen
Indian:Mahe
Indian:Maldives
Indian:Mauritius
Indian:Mayotte
Indian:Reunion
Pacific:Apia
Pacific:Auckland
Pacific:Bougainville
Pacific:Chatham
Pacific:Easter
Pacific:Efate
Pacific:Enderbury
Pacific:Fakaofo
Pacific:Fiji
Pacific:Funafuti
Pacific:Galapagos
Pacific:Gambier
Pacific:Guadalcanal
Pacific:Guam
Pacific:Honolulu
Pacific:Johnston
Pacific:Kiritimati
Pacific:Kosrae
Pacific:Kwajalein
Pacific:Majuro
Pacific:Marquesas
Pacific:Midway
Pacific:Nauru
Pacific:Niue
Pacific:Norfolk
Pacific:Noumea
Pacific:Pago_Pago
Pacific:Palau
Pacific:Pitcairn
Pacific:Ponape
Pacific:Port_Moresby
Pacific:Rarotonga
Pacific:Saipan
Pacific:Tahiti
Pacific:Tarawa
Pacific:Tongatapu
Pacific:Truk
Pacific:Wake
Pacific:Wallis
meta:Afghanistan
meta:Africa_Central
meta:Africa_Eastern
meta:Africa_Southern
meta:Africa_Western
meta:Alaska
meta:Amazon
meta:America_Central
meta:America_Eastern
meta:America_Mountain
meta:America_Pacific
meta:Anadyr
meta:Apia
meta:Arabian
meta:Argentina
meta:Argentina_Western
meta:Armenia
meta:Atlantic
meta:Australia_Central
meta:Australia_CentralWestern
meta:Australia_Eastern
meta:Australia_Western
meta:Azerbaijan
meta:Azores
meta:Bangladesh
meta:Bhutan
meta:Bolivia
meta:Brasilia
meta:Brunei
meta:Cape_Verde
meta:Chamorro
meta:Chatham
meta:Chile
meta:China
meta:Choibalsan
meta:Christmas
meta:Cocos
meta:Colombia
meta:Cook
meta:Cuba
meta:Davis
meta:DumontDUrville
meta:East_Timor
meta:Easter
meta:Ecuador
meta:Europe_Central
meta:Europe_Eastern
meta:Europe_Further_Eastern
meta:Europe_Western
meta:Falkland
meta:Fiji
meta:French_Guiana
meta:French_Southern
meta:GMT
meta:Galapagos
meta:Gambier
meta:Georgia
meta:Gilbert_Islands
meta:Greenland_Eastern
meta:Greenland_Western
meta:Gulf
meta:Guyana
meta:Hawaii_Aleutian
meta:Hong_Kong
meta:Hovd
meta:India
meta:Indian_Ocean
meta:Indochina
meta:Indonesia_Central
meta:Indonesia_Eastern
meta:Indonesia_Western
meta:Iran
meta:Irkutsk
meta:Israel
meta:Japan
meta:Kamchatka
meta:Kazakhstan_Eastern
meta:Kazakhstan_Western
meta:Korea
meta:Kosrae
meta:Krasnoyarsk
meta:Kyrgystan
meta:Line_Islands
meta:Lord_Howe
meta:Macquarie
meta:Magadan
meta:Malaysia
meta:Maldives
meta:Marquesas
meta:Marshall_Islands
meta:Mauritius
meta:Mawson
meta:Mexico_Northwest
meta:Mexico_Pacific
meta:Mongolia
meta:Moscow
meta:Myanmar
meta:Nauru
meta:Nepal
meta:New_Caledonia
meta:New_Zealand
meta:Newfoundland
meta:Niue
meta:Norfolk
meta:Noronha
meta:Novosibirsk
meta:Omsk
meta:Pakistan
meta:Palau
meta:Papua_New_Guinea
meta:Paraguay
meta:Peru
meta:Philippines
meta:Phoenix_Islands
meta:Pierre_Miquelon
meta:Pitcairn
meta:Ponape
meta:Pyongyang
meta:Reunion
meta:Rothera
meta:Sakhalin
meta:Samara
meta:Samoa
meta:Seychelles
meta:Singapore
meta:Solomon
meta:South_Georgia
meta:Suriname
meta:Syowa
meta:Tahiti
meta:Taipei
meta:Tajikistan
meta:Tokelau
meta:Tonga
meta:Truk
meta:Turkmenistan
meta:Tuvalu
meta:Uruguay
meta:Uzbekistan
meta:Vanuatu
meta:Venezuela
meta:Vladivostok
meta:Volgograd
meta:Vostok
meta:Wake
meta:Wallis
meta:Yakutsk
meta:Yekaterinburg
fallbackFormat
gmtFormat
gmtZeroFormat
hourFormat
regionFormat
regionFormatDaylight
regionFormatStandard
Asia:Qostanay
meta:Guam
meta:North_Mariana
%%ALIAS
meta:Acre
meta:Almaty
meta:Aqtau
meta:Aqtobe
meta:Casey
meta:Lanka
meta:Macau
meta:Qyzylorda
%%Parent
ec%formal
ec%secondary
calendar
default
parseRegions
meta:Africa_FarWestern
meta:Aktyubinsk
meta:Alaska_Hawaii
meta:Ashkhabad
meta:Baku
meta:Bering
meta:Borneo
meta:British
meta:Changbai
meta:Dacca
meta:Dominican
meta:Dushanbe
meta:Dutch_Guiana
meta:Frunze
meta:Goose_Bay
meta:Greenland_Central
meta:Karachi
meta:Kizilorda
meta:Kuybyshev
meta:Kwajalein
meta:Liberia
meta:Malaya
meta:Oral
meta:Samarkand
meta:Shevchenko
meta:Tashkent
meta:Tbilisi
meta:Turkey
meta:Uralsk
meta:Urumqi
meta:Yerevan
meta:Yukon
*YP[/n
$\KQ
KQWY
$\i`
Xb(g
mHY+Y
sYr/n
efW!X
e,gBf
-g<h^t
KQXb
/nBf
eyr9N
)R[O
baSyr
W0WBf
q\@SBf
pS,{
eXbKQ
ll\-W
pS,{
q\@S
q\@S
Z7Y-
Yu3uBf
^!kKQ
^!kKQ
pS,{
SaSwc3t!X
SaSwc3t!X
Z7Y-
Yu3u
}~^gQ
/O)R
/O)R
/O)R
/O)R
SWSuiBf
ecpwm
o2m-N
o2m-N
yKQpQ
yKQpQ
yKQ-
yKQ-
aSwc3t!X
aSwc3t!X
KQ\[
RgY>rT
KQ\[
RgY>rT
eKQBf
T*Ys^
T*Ys^
T*Ys^
T*Ys^
Z7Y-
Yu3u
Z7Y-
Yu3u
Z7Y-
Yu3u
Z7Y-
Yu3u
eKQBf
>rWS
>rWS
>rWS
ResB
InstalledLocales
ResB
a$p$z$
ResB
TZVersion
Zones
trans
typeOffsets
typeMap
links
transPre32
finalRule
finalRaw
finalYear
transPost32
Names
Rules
Brazil
C-Eur
Canada
Chatham
Chile
Cuba
EUAsia
Fiji
Haiti
Iran
Jordan
Lebanon
Mexico
Moldova
Palestine
Para
Syria
SystemV
Thule
Troll
Zion
Regions
&/&5'
%A%[%
8"s#M"
K&g&S
_mA
a!p\z"
 D#p'b$
S%%p
>PWs?
>QDP
 1FPj
AHp"
SXY 6
^ Xr`
?b $wb
k =5m
Xx "
AHp"
SXY 6
^ Xr`
?b $wb
k =5m
Xx "
@A{m
pJp 
~a!p
4$`7%%
N2p6D3
<&p'
xK{m
@Gv 
!@)V"0
@s2@
"S4@r'5
36@T
09v 
2s20
S40d'5
260F
{DE0
3 0i
X# p
 W2 j
30T84 
N>0e
9 Q3
'@&&(0
'@&&(0
S"@XD#0;4$@;A%
n00h61
Z?0zo@@
pP0lNQ@
3 0i
X# p
2k+0
F/0y
 W2 j
30T84 
3 0i
9=^
3 @w
3 @w
X#0~
@k+@
.W20x
3@b840
4@- 6
N>@
IO@s
G Q@UcR
S@7CT0F
#V0(
1`@O
b@1gc0
j0Szk
l05Zm
{or0
]Ot0
t@z8v
gg1`
IG3`
+'5`
OBpodC
/DpQDE
Fp3$G
Y~/p&
vg1p
XG3p
:'5p
OBpodC
/DpQDE
vg1p
XG3p
3 @w
X#0~
@k+@
.W20x
3@b840
4@- 6
IO@s
G Q@UcR
S@7CT0F
#V0(
1`@O
b@1gc0
j0Szk
l05Zm
{or0
]Ot0
t@z8v
d00N
 +v 
$s2 tG3
S4 V'5
26 8
mDE 
8t=^
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
z"P}<#
 +v 
$s2 tG3
S4 V'5
26 8
mDE 
3 0i
X# p
e*'`
.`=~/P
Yg1P
;G3P
o@Pq
OBPSdC`h/DP5DE
u li
I*'|
.|!~/l
=g1l
o@lU
A|jOBl7dC|L/Dl
L|A|MP
N`?\OP
$<=^
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
Lpk|M`"
NpM\O`
Pp/<Q`
(`RTDPK
e*'`
.`=~/P
Yg1P
;G3P
o@Pq
OBPSdC`h/DP5DE
P5Z @
QC"@
3#$@
.P/~/
-G3PY@4P
[f@P5DE
pv/D`CDE
)pv/DpQDE
pv/D`CDE
pv/DpQDE
pv/DpQDE
pv/D`CDE
pv/DpQDE
pv/DpQDE
|-G<
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
09v 
2s20
S40d'5
260F
{DE0
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
Y~/p&
vg1p
XG3p
:'5p
OB`adCpv/D`CDE
 +v 
$s2 tG3
S4 V'5
26 8
mDE 
3 0i
X# p
a)PK
XBPi?C
nTD`Y
3 @w
vg1p
XG3p
:'5p
OBpodC
/DpQDE
Fp3$G
Y~/p&
vg1p
XG3p
:'5p
OBpodC
/DpQDE
cIwa
vg1p
XG3p
:'5p
5V0H
FD\0
vg1p
XG3p
:'5p
u @w
W*'P
.P/~/@
Kg1@
-G3@
o@@c
APxOB@EdCPZ/D@'DE
e*'`
.|!~/l
=g1l
o@lU
A|jOBl7dC|L/Dl
vg1p
XG3p
:'5p
! x'"
gJ% <
L@A|M
N@#\OPqP@
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
09v 
2s20
S40d'5
260F
{DE0
3  [
y|Mp0
Y~/p&
vg1p
XG3p
:'5p
OBpodC
/DpQDE
OBpodC
/DpQDE
vg1p
XG3p
e*'`
.`=~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
s*'`
.`=~/`
Yg1`
;G3`
R4PxOB@EdCPZ/D@'DEpM\O`
Pp/<Q`
3 @w
cb/@
EB1@i`20
=3@K@40D
r\S@
Y~/p&
vg1p
XG3p
:'5p
OBpodC
/DpQDE
Y~/p&
vg1p
XG3p
:'5p
OBpodC
/DpQDE
3 0i
X# p
Y~/p&
vg1p
XG3p
:'5p
OBpodC
/DpQDE
3 @w
"@q`H
cb/@
EB1@i`20
=3@K@40D
r\S@
3 0i
X# p
2k+0
F/0y
 W2 j
30T84 
IO0e
9 Q0GcR
S0)CT 8
1`0A
b0#gc 
j Ezk
l 'Zm
mor 
OOt 
t0l8v
qb|0
09v 
2s20
S40d'5
260F
{DE0
u db
B*'t
6g1d
o@dN
AtcOBd0dCtE/Dd
Lt:|MH
NX8\OH
z"P}<#
.`=~/P
Yg1P
;G3P
o@Pq
OBPSdC`h/DP5DE
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
 +v 
$s2 tG3
S4 V'5
26 8
O$G 
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
 +v 
$s2 tG3
S4 V'5
26 8
mDE 
 +v 
$s2 tG3
S4 V'5
26 8
mDE 
/DpQDE
09v 
2s20
S40d'5
260F
{DE0
|-G=
cb/@
EB1@i`20
=3@K@40D
r\S@
.@vt/@gd0
+%`o7&
x.`d
X0`Fd1`
A2`(D3`
?`Vc@
tOP^
d0`>]1`
r2` =3`
jEB`
L%D`bCE
F`D#G`K
t/Pud0
t/Pud0
.0ht/
/@gd0
 P7u!
W#`_g$
<&P#
t/Pud0
/ Kd00
( kx)
d0pL]1`/M2p.=3`
2$pE%%
.`{|/
4P2`
>3Ph14`
y?`?k@
rLBP
6FP>*G`S
t/Pud0
^"P] #`0Z$P?
H0`Fd1`
A2`(D3`
4SPlIT
UPN)V
^"P] #`0Z$P?
H0`Fd1`
A2`(D3`
4SPlIT
UPN)V
A$D _
(0yx) 
. Zt/ Kd0
CE g
^"P] #`0Z$P?
H1Pn<2`
|?p6s@`
LBpOHC
TQpIlR
d0`>]1`
r2` =3`
jEB`
L%D`bCE
F`D#G`K
( kx)
.0ht/0Yd0
CE0u
 d0pL]1p'r2p.=3p
xEBp
Z%DppCE
FpR#GpY
t/Pud0
.0ht/0Yd0
CE0u
.@vt/@gd0
.@vt/@gd0
t/Pud0
t/Pud0
 d0pL]1p'r2p.=3
}I! 
_)# 
% e'&
)C6~
 d0pL]1p'r2p.=3p
xEBp
Z%DppCE
FpR#GpY
.@vt/0Yd0
.H7o/8
u%4H#
=Hv{>8
M8;zN
,S8'
2JaH
8b8f+c
eHG
bo8 UpH
n~8_a
.0ht/0Yd0
Z]1p=M2
<=3p
 d0pL]1p'r2p.=3p
xEBp
Z%DppCE
FpR#GpY
( kx)
t/Pud0
l  q\! bL" S<# D,$ 5
% &&
e*'`
.`=~/P
Yg1P
;G3P
o@Pq
OBPSdC`h/DP5DE
Y3@a
h95@C
q=P)
AD`o
!F`Q
ppY x
x-xj
X/xL
0pL]1x.r2p.=3x
xEBx
.DxwCE
FxY#G
\%) 
qE g
Y~/p&
vg1p
XG3p
:'5p
OBpodC
/DpQDE
s*'p
.pK~/`
gg1`
IG3`
+'5`
OB`adCpv/D`CDE
_-GX
t/Pud0
t/Pud0
Mp+LT
LTpNCX@
t/@gd0
^7S`
t/Pud0
bsU|
|-GX
 +v 
$s2 tG3
S4 V'5
26 8
mDE 
j/`Mm0`
iV2`
K64`
1s>`
~?`N\@`
^A`0<B`
j/`Mm0`
iV2`
K64`
1s>`
~?`N\@`
^A`0<B`
cb/@
EB1@i`20
=3@K@40D
r\S@
+$P~
*@3a+
dU7~
6`4$8`
ArM`
L-6~
LT7~
ToCP
UUUUUU
?DR>
UUUUU
?v<y5
v<y5
=UUUUUU
UUUUUU
v$K{
?n L
UUUUU
?/lj,D
LUUUUU
?IUUUUU
-Dt>
?1cb
@Q0-
ri7f>
>UUUUU
IUUUUU
<sS`
DC?(
"mm?7
?cUUUUU
NEJ(~
33333
?UUUUUU
a\ 
v<y5
=v<y5
!)@:F,@zj/@\G1@|
:@:F<@Z
=@zj?@L~@@\GA@l
////////////////
disabled-by-default-v8.turbofan,disabled-by-default-v8.wasm
M@js_to_wasm:
c-wasm-entry:
vilfdsra??*
internal/bootstrap/environment
internal/bootstrap/loaders
internal/bootstrap/node
internal/bootstrap/pre_execution
internal/per_context/primordials
internal/per_context/setup
internal/per_context/domexception
async_hooks
assert
child_process
console
constants
crypto
cluster
dgram
domain
events
http
http2
_http_agent
_http_client
_http_common
_http_incoming
_http_outgoing
_http_server
https
inspector
module
path
perf_hooks
process
punycode
querystring
readline
repl
stream
_stream_readable
_stream_writable
_stream_duplex
_stream_transform
_stream_passthrough
_stream_wrap
string_decoder
timers
_tls_common
_tls_wrap
trace_events
util
worker_threads
zlib
internal/assert
internal/assert/assertion_error
internal/async_hooks
internal/buffer
internal/cli_table
internal/child_process
internal/cluster/child
internal/cluster/master
internal/cluster/round_robin_handle
internal/cluster/shared_handle
internal/cluster/utils
internal/cluster/worker
internal/console/constructor
internal/console/global
internal/crypto/certificate
internal/crypto/cipher
internal/crypto/diffiehellman
internal/crypto/hash
internal/crypto/keygen
internal/crypto/keys
internal/crypto/pbkdf2
internal/crypto/random
internal/crypto/scrypt
internal/crypto/sig
internal/crypto/util
internal/constants
internal/dgram
internal/dns/promises
internal/dns/utils
internal/dtrace
internal/encoding
internal/errors
internal/error-serdes
internal/fixed_queue
internal/freelist
internal/freeze_intrinsics
internal/fs/promises
internal/fs/read_file_context
internal/fs/streams
internal/fs/sync_write_stream
internal/fs/utils
internal/fs/watchers
internal/http
internal/idna
internal/inspector_async_hook
internal/js_stream_socket
internal/linkedlist
internal/main/check_syntax
internal/main/eval_string
internal/main/eval_stdin
internal/main/inspect
internal/main/print_bash_completion
internal/main/print_help
internal/main/prof_process
internal/main/repl
internal/main/run_main_module
internal/main/run_third_party_main
internal/main/worker_thread
internal/modules/cjs/helpers
internal/modules/cjs/loader
internal/modules/esm/loader
internal/modules/esm/create_dynamic_module
internal/modules/esm/default_resolve
internal/modules/esm/module_job
internal/modules/esm/module_map
internal/modules/esm/translators
internal/net
internal/options
internal/policy/manifest
internal/policy/sri
internal/priority_queue
internal/process/esm_loader
internal/process/execution
internal/process/main_thread_only
internal/process/per_thread
internal/process/policy
internal/process/promises
internal/process/stdio
internal/process/warning
internal/process/worker_thread_only
internal/process/report
internal/process/task_queues
internal/querystring
internal/readline/utils
internal/repl
internal/repl/await
internal/repl/history
internal/repl/utils
internal/socket_list
internal/test/binding
internal/timers
internal/tls
internal/trace_events_async_hooks
internal/tty
internal/url
internal/util
internal/util/comparisons
internal/util/debuglog
internal/util/inspect
internal/util/inspector
internal/util/types
internal/http2/core
internal/http2/compat
internal/http2/util
internal/v8_prof_polyfill
internal/v8_prof_processor
internal/validators
internal/stream_base_commons
internal/vm/source_text_module
internal/worker
internal/worker/io
internal/streams/lazy_transform
internal/streams/async_iterator
internal/streams/buffer_list
internal/streams/duplexpair
internal/streams/legacy
internal/streams/destroy
internal/streams/state
internal/streams/pipeline
internal/streams/end-of-stream
internal/deps/v8/tools/splaytree
internal/deps/v8/tools/codemap
internal/deps/v8/tools/consarray
internal/deps/v8/tools/csvparser
internal/deps/v8/tools/profile
internal/deps/v8/tools/profile_view
internal/deps/v8/tools/logreader
internal/deps/v8/tools/arguments
internal/deps/v8/tools/tickprocessor
internal/deps/v8/tools/SourceMap
internal/deps/v8/tools/tickprocessor-driver
internal/deps/node-inspect/lib/_inspect
internal/deps/node-inspect/lib/internal/inspect_client
internal/deps/node-inspect/lib/internal/inspect_repl
internal/deps/acorn/acorn/dist/acorn
internal/deps/acorn/acorn-walk/dist/walk
internal/deps/acorn-plugins/acorn-class-fields/index
internal/deps/acorn-plugins/acorn-numeric-separator/index
internal/deps/acorn-plugins/acorn-private-class-elements/index
internal/deps/acorn-plugins/acorn-private-methods/index
internal/deps/acorn-plugins/acorn-static-class-features/index
null
true
false
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Binaries/XCSNodeJS/install/Symbols/DerivedSources/Release/src/node/inspector/protocol/Protocol.cpp:664
it != m_data.end()
virtual void node::inspector::protocol::DictionaryValue::writeJSON(node::inspector::protocol::StringBuilder *) const
Message must be a valid JSON
Message must have integer 'id' property
method
' wasn't found
result
JSON: unprocessed input remains
JSON: stack limit exceeded
JSON: no input
JSON: invalid token
JSON: invalid number
JSON: invalid string
JSON: unexpected array end
JSON: comma or array end expected
JSON: string literal expected
JSON: colon expected
JSON: unexpected map end
JSON: comma or map end expected
JSON: value expected
CBOR: invalid int32
CBOR: invalid double
CBOR: invalid envelope
CBOR: invalid string8
CBOR: invalid string16
CBOR: invalid binary
CBOR: unsupported value
CBOR: no input
CBOR: invalid start byte
CBOR: unexpected eof expected value
CBOR: unexpected eof in array
CBOR: unexpected eof in map
CBOR: invalid map key
CBOR: stack limit exceeded
CBOR: trailing junk
CBOR: map start expected
CBOR: map stop expected
CBOR: envelope size limit exceeded
INVALID ERROR CODE
 at position 
EnterEnvelope
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Binaries/XCSNodeJS/install/Symbols/DerivedSources/Release/src/node/inspector/protocol/Protocol.cpp
token_tag_ == CBORTokenTag::ENVELOPE
GetInt32
token_tag_ == CBORTokenTag::INT32
GetDouble
token_tag_ == CBORTokenTag::DOUBLE
GetString8
token_tag_ == CBORTokenTag::STRING8
GetString16WireRep
GetBinary
token_tag_ == CBORTokenTag::BINARY
GetEnvelopeContents
ParseCBOR
tokenizer.TokenTag() == CBORTokenTag::ENVELOPE
src/inspector/node_string.h:98
"Unreachable code reached" __VA_OPT__(": ")
static node::inspector::protocol::Binary node::inspector::protocol::Binary::fromSpan(const uint8_t *, size_t)
src/inspector/node_string.h:94
node::inspector::protocol::String node::inspector::protocol::Binary::toBase64() const
src/inspector/node_string.h:92
const uint8_t *node::inspector::protocol::Binary::data() const
error
ParseMap
ParseUTF8String
tokenizer->TokenTag() == CBORTokenTag::STRING8
0123456789ABCDEF
ReadBytesMostSignificantByteFirst
in.size() >= sizeof(T)
EncodeStartTmpl
*byte_size_pos == 0
EncodeStopTmpl
*byte_size_pos != 0
HandleMapEnd
HandleMapBegin
StartElementTmpl
container_ != Container::NONE || size_ == 0
state_.size() >= 2 && state_.top().container() == Container::MAP
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
HandleError
!error.ok()
HexToInt
workerId
type
sessionId
workerInfo
waitingForDebugger
NodeWorker.attachedToWorker
NodeWorker.detachedFromWorker
NodeWorker.receivedMessageFromWorker
waitForDebuggerOnStart
string value expected
boolean value expected
NodeWorker.sendMessageToWorker
NodeWorker.enable
NodeWorker.disable
NodeWorker.detach
recordUntilFull
recordContinuously
recordAsMuchAsPossible
recordMode
includedCategories
value
NodeTracing.dataCollected
NodeTracing.tracingComplete
categories
traceConfig
NodeTracing.getCategories
NodeTracing.start
NodeTracing.stop
array expected
NodeRuntime.waitingForDisconnect
enabled
NodeRuntime.notifyWhenWaitingForDisconnect
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/async_resource.cc:20
(env_) != nullptr
node::AsyncResource::AsyncResource(v8::Isolate *, Local<v8::Object>, const char *, node::async_id)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/callback.cc:50
!(expect == kRequireResource) || (!object.IsEmpty())
node::InternalCallbackScope::InternalCallbackScope(node::Environment *, Local<v8::Object>, const node::async_context &, node::InternalCallbackScope::ResourceExpectation)
(env) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/callback.cc:60
(Environment::GetCurrent(env->isolate())) == (env)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/callback.cc:109
(env_->execution_async_id()) == (0)
void node::InternalCallbackScope::Close()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/callback.cc:110
(env_->trigger_async_id()) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/callback.cc:126
!tick_callback.IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/callback.cc:139
!recv.IsEmpty()
MaybeLocal<v8::Value> node::InternalMakeCallback(node::Environment *, Local<v8::Object>, const Local<v8::Function>, int, Local<v8::Value> *, node::async_context)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/callback.cc:216
MaybeLocal<v8::Value> node::MakeCallback(v8::Isolate *, Local<v8::Object>, Local<v8::Function>, int, Local<v8::Value> *, node::async_context)
src/env-inl.h:134
(async_id) >= (-1)
void node::AsyncHooks::push_async_ids(double, double)
src/env-inl.h:135
(trigger_async_id) >= (-1)
Error: async hook stack has become corrupted (actual: %.f, expected: %.f)
16le
tin1
nary
ffer
utf8
utf-8
ascii
base64
ucs2
ucs-2
utf16le
utf-16le
latin1
binary
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/encoding.cc:92
!encoding_v.IsEmpty()
enum encoding node::ParseEncoding(v8::Isolate *, Local<v8::Value>, enum encoding)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/encoding.cc:106
(encoding) != (UCS2)
Local<v8::Value> node::Encode(v8::Isolate *, const char *, size_t, enum encoding)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/environment.cc:87
allocations_.empty()
virtual node::DebuggingArrayBufferAllocator::~DebuggingArrayBufferAllocator()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/environment.cc:123
(it) != (allocations_.end())
virtual void *node::DebuggingArrayBufferAllocator::Reallocate(void *, size_t, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/environment.cc:145
void node::DebuggingArrayBufferAllocator::UnregisterPointerInternal(void *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/environment.cc:149
(it->second) == (size)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/environment.cc:157
(allocations_.count(data)) == (0)
void node::DebuggingArrayBufferAllocator::RegisterPointerInternal(void *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/environment.cc:209
void node::SetIsolateUpForNode(v8::Isolate *, node::IsolateSettingCategories)
markBootstrapComplete
node:per_context_binding_exports
primordials
global
exports
src/tracing/agent.h:87
(controller) != nullptr
node::tracing::TracingController *node::tracing::Agent::GetTracingController()
__metadata
process_name
version
thread_name
JavaScriptMainThread
versions
brotli
ares
modules
nghttp2
napi
llhttp
http_parser
openssl
cldr
unicode
arch
platform
release
src/node_v8_platform-inl.h:70
virtual void node::NodeTraceStateObserver::OnTraceDisabled()
src/node_mutex.h:151
node::MutexBase<node::LibuvMutexTraits>::MutexBase() [Traits = node::LibuvMutexTraits]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/exceptions.cc:29
Local<v8::Value> node::ErrnoException(v8::Isolate *, int, const char *, const char *, const char *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/exceptions.cc:101
Local<v8::Value> node::UVException(v8::Isolate *, int, const char *, const char *, const char *, const char *)
 -> '
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/hooks.cc:28
void node::AtExit(node::Environment *, void (*)(void *), void *)
beforeExit
_exiting
exit
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/hooks.cc:72
void node::AddEnvironmentCleanupHook(v8::Isolate *, void (*)(void *), void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/hooks.cc:80
void node::RemoveEnvironmentCleanupHook(v8::Isolate *, void (*)(void *), void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/api/hooks.cc:114
node::async_context node::EmitAsyncInit(v8::Isolate *, Local<v8::Object>, Local<v8::String>, node::async_id)
(insertion_info.second) == (true)
void node::Environment::AddCleanupHook(void (*)(void *), void *)
SIGHUP
SIGINT
SIGQUIT
SIGILL
SIGTRAP
SIGABRT
SIGBUS
SIGFPE
SIGKILL
SIGUSR1
SIGSEGV
SIGUSR2
SIGPIPE
SIGALRM
SIGTERM
SIGCHLD
SIGCONT
SIGSTOP
SIGTSTP
SIGTTIN
SIGTTOU
SIGURG
SIGXCPU
SIGXFSZ
SIGVTALRM
SIGPROF
SIGWINCH
SIGIO
SIGINFO
SIGSYS
node,node.async_hooks
NONE_CALLBACK
DNSCHANNEL_CALLBACK
FILEHANDLE_CALLBACK
FILEHANDLECLOSEREQ_CALLBACK
FSEVENTWRAP_CALLBACK
FSREQCALLBACK_CALLBACK
FSREQPROMISE_CALLBACK
GETADDRINFOREQWRAP_CALLBACK
GETNAMEINFOREQWRAP_CALLBACK
HEAPSNAPSHOT_CALLBACK
HTTP2SESSION_CALLBACK
HTTP2STREAM_CALLBACK
HTTP2PING_CALLBACK
HTTP2SETTINGS_CALLBACK
HTTPINCOMINGMESSAGE_CALLBACK
HTTPCLIENTREQUEST_CALLBACK
JSSTREAM_CALLBACK
MESSAGEPORT_CALLBACK
PIPECONNECTWRAP_CALLBACK
PIPESERVERWRAP_CALLBACK
PIPEWRAP_CALLBACK
PROCESSWRAP_CALLBACK
PROMISE_CALLBACK
QUERYWRAP_CALLBACK
SHUTDOWNWRAP_CALLBACK
SIGNALWRAP_CALLBACK
STATWATCHER_CALLBACK
STREAMPIPE_CALLBACK
TCPCONNECTWRAP_CALLBACK
TCPSERVERWRAP_CALLBACK
TCPWRAP_CALLBACK
TTYWRAP_CALLBACK
UDPSENDWRAP_CALLBACK
UDPWRAP_CALLBACK
WORKER_CALLBACK
WRITEWRAP_CALLBACK
ZLIB_CALLBACK
PBKDF2REQUEST_CALLBACK
KEYPAIRGENREQUEST_CALLBACK
RANDOMBYTESREQUEST_CALLBACK
SCRYPTREQUEST_CALLBACK
TLSWRAP_CALLBACK
INSPECTORJSBINDING_CALLBACK
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:144
void node::AsyncWrap::EmitTraceEventBefore()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:166
static void node::AsyncWrap::EmitTraceEventAfter(node::AsyncWrap::ProviderType, double)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:210
(promise->GetAlignedPointerFromInternalField(0)) == nullptr
static node::PromiseWrap *node::PromiseWrap::New(node::Environment *, Local<v8::Promise>, node::PromiseWrap *, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:413
args[0]->IsObject()
static void node::AsyncWrap::AsyncReset(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:440
static void node::AsyncWrap::QueueDestroyAsyncId(const FunctionCallbackInfo<v8::Value> &)
AsyncWrap
getAsyncId
asyncReset
getProviderType
setupHooks
pushAsyncIds
popAsyncIds
queueDestroyAsyncId
enablePromiseHook
disablePromiseHook
registerDestroyHook
async_hook_fields
async_id_fields
owner_symbol
kInit
kBefore
kAfter
kDestroy
kPromiseResolve
kTotals
kCheck
kExecutionAsyncId
kTriggerAsyncId
kAsyncIdCounter
kDefaultTriggerAsyncId
kStackLength
NONE
DNSCHANNEL
FILEHANDLE
FILEHANDLECLOSEREQ
FSEVENTWRAP
FSREQCALLBACK
FSREQPROMISE
GETADDRINFOREQWRAP
GETNAMEINFOREQWRAP
HEAPSNAPSHOT
HTTP2SESSION
HTTP2STREAM
HTTP2PING
HTTP2SETTINGS
HTTPINCOMINGMESSAGE
HTTPCLIENTREQUEST
JSSTREAM
MESSAGEPORT
PIPECONNECTWRAP
PIPESERVERWRAP
PIPEWRAP
PROCESSWRAP
PROMISE
QUERYWRAP
SHUTDOWNWRAP
SIGNALWRAP
STATWATCHER
STREAMPIPE
TCPCONNECTWRAP
TCPSERVERWRAP
TCPWRAP
TTYWRAP
UDPSENDWRAP
UDPWRAP
WORKER
WRITEWRAP
ZLIB
PBKDF2REQUEST
KEYPAIRGENREQUEST
RANDOMBYTESREQUEST
SCRYPTREQUEST
TLSWRAP
INSPECTORJSBINDING
Providers
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:581
(provider) != (PROVIDER_NONE)
node::AsyncWrap::AsyncWrap(node::Environment *, Local<v8::Object>, node::AsyncWrap::ProviderType, double, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:634
void node::AsyncWrap::EmitTraceEventDestroy()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:660
(provider_type()) != (PROVIDER_NONE)
void node::AsyncWrap::AsyncReset(Local<v8::Object>, double, bool)
executionAsyncId
triggerAsyncId
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:693
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:709
!object.IsEmpty()
static void node::AsyncWrap::EmitAsyncInit(node::Environment *, Local<v8::Object>, Local<v8::String>, double, double)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:710
!type.IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:765
!obj.IsEmpty()
static Local<v8::Object> node::AsyncWrap::GetOwner(node::Environment *, Local<v8::Object>)
PromiseWrap
(obj->InternalFieldCount()) > (0)
static node::BaseObject *node::BaseObject::FromJSObject(v8::Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:288
void node::SetupHooks(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:293
env->async_hooks_init_function().IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:307
v->IsFunction()
before
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:308
after
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:309
destroy
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:310
promise_resolve
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:311
isChainedPromise
node,node.environment
EnvPromiseHook
src/env-inl.h:195
(default_trigger_async_id) >= (0)
node::AsyncHooks::DefaultTriggerAsyncIdScope::DefaultTriggerAsyncIdScope(node::Environment *, double)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:373
void node::RegisterDestroyHook(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:374
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:375
args[2]->IsObject()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:75
static void node::AsyncWrapObject::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:76
env->async_wrap_object_ctor_template()->HasInstance(args.This())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc:77
AsyncWrapObject
(false) == (object.IsEmpty())
node::BaseObject::BaseObject(node::Environment *, v8::Local<v8::Object>)
(object->InternalFieldCount()) > (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/async_wrap.cc
async_wrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc
cares_wrap
getaddrinfo
getnameinfo
canonicalizeIP
strerror
AF_INET
AF_INET6
AF_UNSPEC
AI_ADDRCONFIG
AI_V4MAPPED
GetAddrInfoReqWrap
GetNameInfoReqWrap
QueryReqWrap
queryAny
queryA
queryAaaa
queryCname
queryMx
queryNs
queryTxt
querySrv
queryPtr
queryNaptr
querySoa
getHostByAddr
getServers
setServers
cancel
ChannelWrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1943
void node::cares_wrap::(anonymous namespace)::GetAddrInfo(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1944
args[1]->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1945
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1946
args[4]->IsBoolean()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1968
0 && "bad address family"
node,node.dns,node.dns.native
lookup
hostname
family
ipv4
ipv6
unspec
src/req_wrap-inl.h:27
(false) == (persistent().IsEmpty())
virtual node::ReqWrap<uv_getaddrinfo_s>::~ReqWrap() [T = uv_getaddrinfo_s]
src/req_wrap-inl.h:129
(req_wrap->original_callback_) == nullptr
static node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F node::MakeLibuvRequestCallback<uv_getaddrinfo_s, void (*)(uv_getaddrinfo_s *, int, addrinfo *)>::For(ReqWrap<ReqT> *, node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F) [ReqT = uv_getaddrinfo_s, T = void (*)(uv_getaddrinfo_s *, int, addrinfo *)]
count
verbatim
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1833
(p->ai_socktype) == (1)
auto node::cares_wrap::(anonymous namespace)::AfterGetAddrInfo(uv_getaddrinfo_t *, int, struct addrinfo *)::(anonymous class)::operator()(bool, bool) const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2003
void node::cares_wrap::(anonymous namespace)::GetNameInfo(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2004
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2005
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2012
uv_ip4_addr(*ip, port, reinterpret_cast<sockaddr_in*>(&addr)) == 0 || uv_ip6_addr(*ip, port, reinterpret_cast<sockaddr_in6*>(&addr)) == 0
lookupService
port
virtual node::ReqWrap<uv_getnameinfo_s>::~ReqWrap() [T = uv_getnameinfo_s]
static node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F node::MakeLibuvRequestCallback<uv_getnameinfo_s, void (*)(uv_getnameinfo_s *, int, const char *, const char *)>::For(ReqWrap<ReqT> *, node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F) [ReqT = uv_getnameinfo_s, T = void (*)(uv_getnameinfo_s *, int, const char *, const char *)]
service
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1934
(0) == (uv_inet_ntop(af, &result, canonical_ip, sizeof(canonical_ip)))
void node::cares_wrap::(anonymous namespace)::CanonicalizeIP(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:210
static void node::cares_wrap::(anonymous namespace)::ChannelWrap::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:211
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:355
task && "When an ares socket is closed we should have a handle for it"
void node::cares_wrap::(anonymous namespace)::ares_sockstate_cb(void *, ares_socket_t, int, int)
channel
src/memory_tracker-inl.h:246
(CurrentNode()) == (n)
void node::MemoryTracker::Track(const node::MemoryRetainer *, const char *)
src/memory_tracker-inl.h:247
(n->size_) != (0)
wrapped
wrapper
src/memory_tracker-inl.h:27
(retainer_) != nullptr
node::MemoryRetainerNode::MemoryRetainerNode(node::MemoryTracker *, const node::MemoryRetainer *)
Node /
node_ares_task
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:260
(channel->timer_handle()) == (handle)
static void node::cares_wrap::(anonymous namespace)::ChannelWrap::AresTimeout(uv_timer_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:261
(false) == (channel->task_list()->empty())
EADDRGETNETWORKPARAMS
EBADFAMILY
EBADFLAGS
EBADHINTS
EBADNAME
EBADQUERY
EBADRESP
EBADSTR
ECANCELLED
ECONNREFUSED
EDESTRUCTION
EFILE
EFORMERR
ELOADIPHLPAPI
ENODATA
ENOMEM
ENONAME
ENOTFOUND
ENOTIMP
ENOTINITIALIZED
EREFUSED
ESERVFAIL
ETIMEOUT
UNKNOWN_ARES_ERROR
timer_handle
task_list
node_ares_task_list
uv_timer_t
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1790
(false) == (args.IsConstructCall())
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryAnyWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1791
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1792
resolveAny
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:594
virtual int node::cares_wrap::(anonymous namespace)::QueryWrap::Send(const char *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:731
virtual void node::cares_wrap::(anonymous namespace)::QueryWrap::Parse(unsigned char *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:585
virtual node::cares_wrap::(anonymous namespace)::QueryWrap::~QueryWrap()
QueryAnyWrap
src/util-inl.h:380
!(n > 0) || (ret != nullptr)
T *node::Malloc(size_t) [T = unsigned char]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:623
response_data_
void node::cares_wrap::(anonymous namespace)::QueryWrap::AfterResponse()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:718
(status) != (0)
void node::cares_wrap::(anonymous namespace)::QueryWrap::ParseError(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:639
(callback_ptr_) == nullptr
void *node::cares_wrap::(anonymous namespace)::QueryWrap::MakeCallbackPointer()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:599
virtual int node::cares_wrap::(anonymous namespace)::QueryWrap::Send(const char *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1214
(static_cast<uint32_t>(naddrttls)) == (a_count)
virtual void node::cares_wrap::(anonymous namespace)::QueryAnyWrap::Parse(unsigned char *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1260
(aaaa_count) == (static_cast<uint32_t>(naddr6ttls))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:1261
(ret->Length()) == (a_count + aaaa_count)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:803
0 && "Bad NS type"
int node::cares_wrap::(anonymous namespace)::ParseGeneralReply(node::Environment *, const unsigned char *, int, int *, Local<v8::Array>, void *, int *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:735
virtual void node::cares_wrap::(anonymous namespace)::QueryWrap::Parse(struct hostent *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:522
(active_query_count_) >= (0)
void node::cares_wrap::(anonymous namespace)::ChannelWrap::ModifyActivityQueryCount(int)
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryAWrap]
resolve4
QueryAWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryAaaaWrap]
resolve6
QueryAaaaWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryCnameWrap]
resolveCname
QueryCnameWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryMxWrap]
resolveMx
QueryMxWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryNsWrap]
resolveNs
QueryNsWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryTxtWrap]
resolveTxt
QueryTxtWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QuerySrvWrap]
resolveSrv
QuerySrvWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryPtrWrap]
resolvePtr
QueryPtrWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QueryNaptrWrap]
resolveNaptr
QueryNaptrWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::QuerySoaWrap]
resolveSoa
QuerySoaWrap
void node::cares_wrap::(anonymous namespace)::Query(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::cares_wrap::(anonymous namespace)::GetHostByAddrWrap]
reverse
GetHostByAddrWrap
T *node::Malloc(size_t) [T = hostent]
T *node::Malloc(size_t) [T = char]
T *node::Malloc(size_t) [T = char *]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2042
void node::cares_wrap::(anonymous namespace)::GetServers(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2051
(err) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2077
args[0]->IsArray()
void node::cares_wrap::(anonymous namespace)::SetServers(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2094
arr->Get(env->context(), i).ToLocalChecked()->IsArray()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2100
elm->Get(env->context(), 0).ToLocalChecked()->Int32Value(env->context()).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2101
elm->Get(env->context(), 1).ToLocalChecked()->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2103
elm->Get(env->context(), 2).ToLocalChecked()->Int32Value(env->context()).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/cares_wrap.cc:2125
0 && "Bad address family."
virtual node::ReqWrap<uv_connect_s>::~ReqWrap() [T = uv_connect_s]
ConnectWrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/connection_wrap.cc:36
(wrap_data) != nullptr
static void node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::OnConnection(uv_stream_t *, int) [WrapType = node::PipeWrap, UVType = uv_pipe_s]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/connection_wrap.cc:37
(&wrap_data->handle_) == (reinterpret_cast<UVType*>(handle))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/connection_wrap.cc:45
(wrap_data->persistent().IsEmpty()) == (false)
static void node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::OnConnection(uv_stream_t *, int) [WrapType = node::TCPWrap, UVType = uv_tcp_s]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/connection_wrap.cc:82
(req_wrap) != nullptr
static void node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::AfterConnect(uv_connect_t *, int) [WrapType = node::PipeWrap, UVType = uv_pipe_s]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/connection_wrap.cc:84
(req_wrap->env()) == (wrap->env())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/connection_wrap.cc:91
(req_wrap->persistent().IsEmpty()) == (false)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/connection_wrap.cc:92
(wrap->persistent().IsEmpty()) == (false)
static void node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::AfterConnect(uv_connect_t *, int) [WrapType = node::TCPWrap, UVType = uv_tcp_s]
%2d: %p %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/debug_utils.cc:289
0 && "uv_loop_close() while having open handles"
void node::CheckedUvLoopClose(uv_loop_t *)
uv loop at [%p] has %d active handles
[%p] %s
Close callback: %p %s
Data: %p %s
(First field): %p %s
Failed to deserialize alpn_buffer_private_symbol
Failed to deserialize arrow_message_private_symbol
Failed to deserialize contextify_context_private_symbol
Failed to deserialize contextify_global_private_symbol
Failed to deserialize decorated_private_symbol
Failed to deserialize napi_wrapper
Failed to deserialize sab_lifetimepartner_symbol
Failed to deserialize handle_onclose_symbol
Failed to deserialize no_message_symbol
Failed to deserialize oninit_symbol
Failed to deserialize owner_symbol
Failed to deserialize address_string
Failed to deserialize aliases_string
Failed to deserialize args_string
Failed to deserialize asn1curve_string
Failed to deserialize async_ids_stack_string
Failed to deserialize bits_string
Failed to deserialize buffer_string
Failed to deserialize bytes_parsed_string
Failed to deserialize bytes_read_string
Failed to deserialize bytes_written_string
Failed to deserialize cached_data_produced_string
Failed to deserialize cached_data_rejected_string
Failed to deserialize cached_data_string
Failed to deserialize cache_key_string
Failed to deserialize change_string
Failed to deserialize channel_string
Failed to deserialize chunks_sent_since_last_write_string
Failed to deserialize clone_unsupported_type_str
Failed to deserialize code_string
Failed to deserialize commonjs_string
Failed to deserialize config_string
Failed to deserialize constants_string
Failed to deserialize crypto_dsa_string
Failed to deserialize crypto_ec_string
Failed to deserialize crypto_ed25519_string
Failed to deserialize crypto_ed448_string
Failed to deserialize crypto_x25519_string
Failed to deserialize crypto_x448_string
Failed to deserialize crypto_rsa_string
Failed to deserialize crypto_rsa_pss_string
Failed to deserialize cwd_string
Failed to deserialize data_string
Failed to deserialize dest_string
Failed to deserialize destroyed_string
Failed to deserialize detached_string
Failed to deserialize dns_a_string
Failed to deserialize dns_aaaa_string
Failed to deserialize dns_cname_string
Failed to deserialize dns_mx_string
Failed to deserialize dns_naptr_string
Failed to deserialize dns_ns_string
Failed to deserialize dns_ptr_string
Failed to deserialize dns_soa_string
Failed to deserialize dns_srv_string
Failed to deserialize dns_txt_string
Failed to deserialize duration_string
Failed to deserialize emit_warning_string
Failed to deserialize encoding_string
Failed to deserialize entries_string
Failed to deserialize entry_type_string
Failed to deserialize env_pairs_string
Failed to deserialize env_var_settings_string
Failed to deserialize errno_string
Failed to deserialize error_string
Failed to deserialize exchange_string
Failed to deserialize exit_code_string
Failed to deserialize expire_string
Failed to deserialize exponent_string
Failed to deserialize exports_string
Failed to deserialize ext_key_usage_string
Failed to deserialize external_stream_string
Failed to deserialize family_string
Failed to deserialize fatal_exception_string
Failed to deserialize fd_string
Failed to deserialize file_string
Failed to deserialize fingerprint256_string
Failed to deserialize fingerprint_string
Failed to deserialize flags_string
Failed to deserialize fragment_string
Failed to deserialize function_string
Failed to deserialize get_data_clone_error_string
Failed to deserialize get_shared_array_buffer_id_string
Failed to deserialize gid_string
Failed to deserialize h2_string
Failed to deserialize handle_string
Failed to deserialize help_text_string
Failed to deserialize homedir_string
Failed to deserialize host_string
Failed to deserialize hostmaster_string
Failed to deserialize http_1_1_string
Failed to deserialize ignore_string
Failed to deserialize infoaccess_string
Failed to deserialize inherit_string
Failed to deserialize input_string
Failed to deserialize internal_binding_string
Failed to deserialize internal_string
Failed to deserialize ipv4_string
Failed to deserialize ipv6_string
Failed to deserialize isclosing_string
Failed to deserialize issuer_string
Failed to deserialize issuercert_string
Failed to deserialize kill_signal_string
Failed to deserialize kind_string
Failed to deserialize library_string
Failed to deserialize mac_string
Failed to deserialize main_string
Failed to deserialize max_buffer_string
Failed to deserialize message_port_constructor_string
Failed to deserialize message_port_string
Failed to deserialize message_string
Failed to deserialize minttl_string
Failed to deserialize module_string
Failed to deserialize modulus_string
Failed to deserialize name_string
Failed to deserialize netmask_string
Failed to deserialize nistcurve_string
Failed to deserialize nsname_string
Failed to deserialize ocsp_request_string
Failed to deserialize oncertcb_string
Failed to deserialize onchange_string
Failed to deserialize onclienthello_string
Failed to deserialize oncomplete_string
Failed to deserialize onconnection_string
Failed to deserialize ondone_string
Failed to deserialize onerror_string
Failed to deserialize onexit_string
Failed to deserialize onhandshakedone_string
Failed to deserialize onhandshakestart_string
Failed to deserialize onkeylog_string
Failed to deserialize onmessage_string
Failed to deserialize onnewsession_string
Failed to deserialize onocspresponse_string
Failed to deserialize onreadstart_string
Failed to deserialize onreadstop_string
Failed to deserialize onshutdown_string
Failed to deserialize onsignal_string
Failed to deserialize onunpipe_string
Failed to deserialize onwrite_string
Failed to deserialize openssl_error_stack
Failed to deserialize options_string
Failed to deserialize order_string
Failed to deserialize output_string
Failed to deserialize parse_error_string
Failed to deserialize password_string
Failed to deserialize path_string
Failed to deserialize pending_handle_string
Failed to deserialize pid_string
Failed to deserialize pipe_source_string
Failed to deserialize pipe_string
Failed to deserialize pipe_target_string
Failed to deserialize port1_string
Failed to deserialize port2_string
Failed to deserialize port_string
Failed to deserialize preference_string
Failed to deserialize primordials_string
Failed to deserialize priority_string
Failed to deserialize process_string
Failed to deserialize promise_string
Failed to deserialize pubkey_string
Failed to deserialize query_string
Failed to deserialize raw_string
Failed to deserialize read_host_object_string
Failed to deserialize readable_string
Failed to deserialize reason_string
Failed to deserialize refresh_string
Failed to deserialize regexp_string
Failed to deserialize rename_string
Failed to deserialize replacement_string
Failed to deserialize require_string
Failed to deserialize retry_string
Failed to deserialize scheme_string
Failed to deserialize scopeid_string
Failed to deserialize serial_number_string
Failed to deserialize serial_string
Failed to deserialize servername_string
Failed to deserialize service_string
Failed to deserialize session_id_string
Failed to deserialize shell_string
Failed to deserialize signal_string
Failed to deserialize sink_string
Failed to deserialize size_string
Failed to deserialize sni_context_err_string
Failed to deserialize sni_context_string
Failed to deserialize source_string
Failed to deserialize stack_string
Failed to deserialize start_time_string
Failed to deserialize status_string
Failed to deserialize stdio_string
Failed to deserialize subject_string
Failed to deserialize subjectaltname_string
Failed to deserialize syscall_string
Failed to deserialize target_string
Failed to deserialize thread_id_string
Failed to deserialize ticketkeycallback_string
Failed to deserialize timeout_string
Failed to deserialize tls_ticket_string
Failed to deserialize ttl_string
Failed to deserialize type_string
Failed to deserialize uid_string
Failed to deserialize unknown_string
Failed to deserialize url_string
Failed to deserialize username_string
Failed to deserialize valid_from_string
Failed to deserialize valid_to_string
Failed to deserialize value_string
Failed to deserialize verify_error_string
Failed to deserialize version_string
Failed to deserialize weight_string
Failed to deserialize windows_hide_string
Failed to deserialize windows_verbatim_arguments_string
Failed to deserialize wrap_string
Failed to deserialize writable_string
Failed to deserialize write_host_object_string
Failed to deserialize write_queue_size_string
Failed to deserialize x_forwarded_string
Failed to deserialize zero_return_string
node:alpnBuffer
node:arrowMessage
node:contextify:context
node:contextify:global
node:decorated
node:napi:wrapper
node:sharedArrayBufferLifetimePartner
handle_onclose
no_message_symbol
oninit
owner
address
aliases
args
asn1Curve
async_ids_stack
bits
bytesParsed
bytesRead
bytesWritten
cachedDataProduced
cachedDataRejected
cachedData
cacheKey
change
chunksSentSinceLastWrite
Cannot transfer object of unsupported type.
commonjs
config
ed25519
ed448
x25519
x448
rsa-pss
dest
destroyed
detached
AAAA
CNAME
NAPTR
duration
emitWarning
encoding
entries
entryType
envPairs
envVarSettings
errno
exchange
exitCode
expire
exponent
ext_key_usage
_externalStream
_fatalException
file
fingerprint256
fingerprint
flags
fragment
function
_getDataCloneError
_getSharedArrayBufferId
handle
helpText
homedir
host
hostmaster
http/1.1
ignore
infoAccess
inherit
input
internalBinding
internal
IPv4
IPv6
isClosing
issuer
issuerCertificate
killSignal
kind
library
main
maxBuffer
MessagePort
messagePort
minttl
modulus
netmask
nistCurve
nsname
OCSPRequest
oncertcb
onchange
onclienthello
oncomplete
onconnection
ondone
onerror
onexit
onhandshakedone
onhandshakestart
onkeylog
onmessage
onnewsession
onocspresponse
onreadstart
onreadstop
onshutdown
onsignal
onunpipe
onwrite
opensslErrorStack
options
order
output
Parse Error
password
pendingHandle
pipeSource
pipe
pipeTarget
port1
port2
preference
priority
promise
pubkey
query
_readHostObject
readable
reason
refresh
regexp
rename
replacement
require
retry
scheme
scopeid
serialNumber
serial
servername
shell
signal
sink
size
Invalid SNI context
sni_context
stack
startTime
status
stdio
subject
subjectaltname
syscall
target
threadId
onticketkeycallback
timeout
tlsTicket
<unknown>
username
valid_from
valid_to
weight
windowsHide
windowsVerbatimArguments
wrap
writable
_writeHostObject
writeQueueSize
x-forwarded-for
ZERO_RETURN
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:167
(allocator_) != nullptr
node::IsolateData::IsolateData(v8::Isolate *, uv_loop_t *, node::MultiIsolatePlatform *, node::ArrayBufferAllocator *, const std::vector<size_t> *)
handle_onclose_symbol
oninit_symbol
address_string
aliases_string
args_string
asn1curve_string
async_ids_stack_string
bits_string
buffer_string
bytes_parsed_string
bytes_read_string
bytes_written_string
cached_data_produced_string
cached_data_rejected_string
cached_data_string
cache_key_string
change_string
channel_string
chunks_sent_since_last_write_string
clone_unsupported_type_str
code_string
commonjs_string
config_string
constants_string
crypto_dsa_string
crypto_ec_string
crypto_ed25519_string
crypto_ed448_string
crypto_x25519_string
crypto_x448_string
crypto_rsa_string
crypto_rsa_pss_string
cwd_string
data_string
dest_string
destroyed_string
detached_string
dns_a_string
dns_aaaa_string
dns_cname_string
dns_mx_string
dns_naptr_string
dns_ns_string
dns_ptr_string
dns_soa_string
dns_srv_string
dns_txt_string
duration_string
emit_warning_string
encoding_string
entries_string
entry_type_string
env_pairs_string
env_var_settings_string
errno_string
error_string
exchange_string
exit_code_string
expire_string
exponent_string
exports_string
ext_key_usage_string
external_stream_string
family_string
fatal_exception_string
fd_string
file_string
fingerprint256_string
fingerprint_string
flags_string
fragment_string
function_string
get_data_clone_error_string
get_shared_array_buffer_id_string
gid_string
h2_string
handle_string
help_text_string
homedir_string
host_string
hostmaster_string
http_1_1_string
ignore_string
infoaccess_string
inherit_string
input_string
internal_binding_string
internal_string
ipv4_string
ipv6_string
isclosing_string
issuer_string
issuercert_string
kill_signal_string
kind_string
library_string
mac_string
main_string
max_buffer_string
message_port_constructor_string
message_port_string
message_string
minttl_string
module_string
modulus_string
name_string
netmask_string
nistcurve_string
nsname_string
ocsp_request_string
oncertcb_string
onchange_string
onclienthello_string
oncomplete_string
onconnection_string
ondone_string
onerror_string
onexit_string
onhandshakedone_string
onhandshakestart_string
onkeylog_string
onmessage_string
onnewsession_string
onocspresponse_string
onreadstart_string
onreadstop_string
onshutdown_string
onsignal_string
onunpipe_string
onwrite_string
openssl_error_stack
options_string
order_string
output_string
parse_error_string
password_string
path_string
pending_handle_string
pid_string
pipe_source_string
pipe_string
pipe_target_string
port1_string
port2_string
port_string
preference_string
primordials_string
priority_string
process_string
promise_string
pubkey_string
query_string
raw_string
read_host_object_string
readable_string
reason_string
refresh_string
regexp_string
rename_string
replacement_string
require_string
retry_string
scheme_string
scopeid_string
serial_number_string
serial_string
servername_string
service_string
session_id_string
shell_string
signal_string
sink_string
size_string
sni_context_err_string
sni_context_string
source_string
stack_string
start_time_string
status_string
stdio_string
subject_string
subjectaltname_string
syscall_string
target_string
thread_id_string
ticketkeycallback_string
timeout_string
tls_ticket_string
ttl_string
type_string
uid_string
unknown_string
url_string
username_string
valid_from_string
valid_to_string
value_string
verify_error_string
version_string
weight_string
windows_hide_string
windows_verbatim_arguments_string
wrap_string
writable_string
write_host_object_string
write_queue_size_string
x_forwarded_string
zero_return_string
node_allocator
NodeArrayBufferAllocator
allocator
v8::ArrayBuffer::Allocator
MultiIsolatePlatform
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:203
(0) == (uv_key_create(&Environment::thread_local_env))
void node::InitThreadLocalOnce()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:256
primordials->IsObject()
void node::Environment::CreateProperties()
exec_args
Environment
NODE_DEBUG_NATIVE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:394
file_handle_read_wrap_freelist_.empty()
virtual node::Environment::~Environment()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:439
(0) == (uv_timer_init(event_loop(), timer_handle()))
void node::Environment::InitializeLibuv(bool)
(node:%d) WARNING: Detected use of sync API
RunCleanup
BeforeExit
AtExit
RunAndClearNativeImmediates
RunTimers
CheckImmediate
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:801
(now) >= (timer_base())
Local<v8::Value> node::Environment::GetNow()
INSPECTOR_SERVER
INSPECTOR_PROFILER
fields
providers
CleanupHookCallback
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:957
void node::MemoryTracker::TrackField(const char *, const node::CleanupHookCallback &, const char *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:958
isolate_data
native_modules_with_cache
native_modules_without_cache
destroy_async_id_list
exec_argv
should_abort_on_uncaught_toggle
stream_base_state
fs_stats_field_array
fs_stats_field_bigint_array
thread_stopper
cleanup_hooks
immediate_info
tick_info
as_callback_data
async_hooks_after_function
async_hooks_before_function
async_hooks_binding
async_hooks_destroy_function
async_hooks_init_function
async_hooks_promise_resolve_function
buffer_prototype_object
crypto_key_object_constructor
domain_callback
domexception_function
enhance_fatal_stack_after_inspector
enhance_fatal_stack_before_inspector
fs_use_promises_symbol
host_import_module_dynamically_callback
host_initialize_import_meta_object_callback
http2session_on_altsvc_function
http2session_on_error_function
http2session_on_frame_error_function
http2session_on_goaway_data_function
http2session_on_headers_function
http2session_on_origin_function
http2session_on_ping_function
http2session_on_priority_function
http2session_on_select_padding_function
http2session_on_settings_function
http2session_on_stream_close_function
http2session_on_stream_trailers_function
internal_binding_loader
immediate_callback_function
inspector_console_extension_installer
message_port
native_module_require
performance_entry_callback
performance_entry_template
prepare_stack_trace_callback
process_object
promise_reject_callback
script_data_constructor_function
tick_callback_function
timers_callback_function
tls_wrap_constructor_function
trace_category_state_function
udp_constructor_function
url_constructor_function
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:1040
(async_) == nullptr
void node::AsyncRequest::Install(node::Environment *, void *, uv_async_cb)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:1044
(uv_async_init(env_->event_loop(), async_, target)) == (0)
async_request
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/env.cc:1068
virtual node::AsyncRequest::~AsyncRequest()
src/aliased_buffer.h:37
(count) > (0)
node::AliasedBufferBase<unsigned char, v8::Uint8Array, void>::AliasedBufferBase(v8::Isolate *, const size_t) [NativeT = unsigned char, V8T = v8::Uint8Array]
uv_async_t
AsyncHooks
ImmediateInfo
TickInfo
IsolateData
AsyncRequest
node::AliasedBufferBase<double, v8::Float64Array, void>::AliasedBufferBase(v8::Isolate *, const size_t) [NativeT = double, V8T = v8::Float64Array]
node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::AliasedBufferBase(v8::Isolate *, const size_t) [NativeT = unsigned int, V8T = v8::Uint32Array]
std::basic_string
node::AliasedBufferBase<int, v8::Int32Array, void>::AliasedBufferBase(v8::Isolate *, const size_t) [NativeT = int, V8T = v8::Int32Array]
node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void>::AliasedBufferBase(v8::Isolate *, const size_t) [NativeT = unsigned long long, V8T = v8::BigUint64Array]
src/aliased_buffer.h:72
(byte_offset & (sizeof(NativeT) - 1)) == (0)
node::AliasedBufferBase<double, v8::Float64Array, void>::AliasedBufferBase(v8::Isolate *, const size_t, const size_t, const AliasedBufferBase<uint8_t, v8::Uint8Array> &) [NativeT = double, V8T = v8::Float64Array]
src/aliased_buffer.h:75
(MultiplyWithOverflowCheck(sizeof(NativeT), count)) <= (ab->ByteLength() - byte_offset)
node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::AliasedBufferBase(v8::Isolate *, const size_t, const size_t, const AliasedBufferBase<uint8_t, v8::Uint8Array> &) [NativeT = unsigned int, V8T = v8::Uint32Array]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc
fs_event_wrap
FSEvent
start
initialized
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:127
static void node::(anonymous namespace)::FSEventWrap::New(const FunctionCallbackInfo<v8::Value> &)
FSEventWrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:137
(wrap) != nullptr
static void node::(anonymous namespace)::FSEventWrap::Start(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:138
wrap->IsHandleClosing()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:141
(argc) >= (4)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:144
(*path) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:182
static void node::(anonymous namespace)::FSEventWrap::OnEvent(uv_fs_event_t *, const char *, int, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:203
0 && "bad fs events flag"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/fs_event_wrap.cc:89
static void node::(anonymous namespace)::FSEventWrap::GetInitialized(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/handle_wrap.cc:75
virtual void node::HandleWrap::Close(Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/handle_wrap.cc:119
static void node::HandleWrap::OnClose(uv_handle_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/handle_wrap.cc:120
(wrap->state_) == (kClosing)
HandleWrap
hasRef
unref
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/heap_utils.cc:346
(snapshot) != nullptr
void node::heap::CreateHeapSnapshotStream(const FunctionCallbackInfo<v8::Value> &)
Heap
heapsnapshot
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/heap_utils.cc:375
void node::heap::TriggerHeapSnapshot(const FunctionCallbackInfo<v8::Value> &)
buildEmbedderGraph
triggerHeapSnapshot
createHeapSnapshotStream
HeapSnapshotStream
void node::StreamResource::RemoveStreamListener(node::StreamListener *)
src/stream_base-inl.h:98
(current) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/heap_utils.cc:47
!val.IsEmpty()
node::heap::JSGraphJSNode::JSGraphJSNode(v8::Isolate *, Local<v8::Value>)
<JS Node>
edges
isRoot
wraps
snapshot
HeapSnapshot
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/heap_utils.cc:276
(snapshot_) != (nullptr)
virtual int node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStart()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/heap_utils.cc:286
virtual int node::heap::(anonymous namespace)::HeapSnapshotStream::DoShutdown(node::ShutdownWrap *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/heap_utils.cc:293
virtual int node::heap::(anonymous namespace)::HeapSnapshotStream::DoWrite(node::WriteWrap *, uv_buf_t *, size_t, uv_stream_t *)
src/stream_base-inl.h:27
(req_wrap_obj->GetAlignedPointerFromInternalField(kStreamReqField)) == (nullptr)
void node::StreamReq::AttachToObject(v8::Local<v8::Object>)
SimpleShutdownWrap
SimpleWriteWrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/heap_utils.cc
heap_utils
src/stream_base-inl.h:61
(previous_listener_) != nullptr
virtual void node::StreamListener::OnStreamAfterWrite(node::WriteWrap *, int)
src/stream_base-inl.h:56
virtual void node::StreamListener::OnStreamAfterShutdown(node::ShutdownWrap *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_native_api_v8.cc:696
(env->last_error.error_code) <= (last_status)
napi_status napi_get_last_error_info(napi_env, const napi_extended_error_info **)
Maximum BigInt size exceeded
ERR_NAPI_CONS_FUNCTION
Constructor must be a function
ERR_NAPI_INVALID_TYPEDARRAY_LENGTH
Invalid typed array length
ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT
start offset of Int16Array should be a multiple of 2
start offset of Uint16Array should be a multiple of 2
start offset of Int32Array should be a multiple of 4
start offset of Uint32Array should be a multiple of 4
start offset of Float32Array should be a multiple of 4
start offset of Float64Array should be a multiple of 8
start offset of BigInt64Array should be a multiple of 8
start offset of BigUint64Array should be a multiple of 8
ERR_NAPI_INVALID_DATAVIEW_ARGS
byte_offset + byte_length should be less than or equal to the size in bytes of the array passed in
Invalid argument
An object was expected
A string was expected
A string or symbol was expected
A function was expected
A number was expected
A boolean was expected
An array was expected
Unknown failure
An exception is pending
The async work item was cancelled
napi_escape_handle already called on scope
Invalid handle scope usage
Invalid callback scope usage
Thread-safe function queue is full
Thread-safe function handle is closing
A bigint was expected
A date was expected
src/js_native_api_v8.h:42
(open_handle_scopes) == (open_handle_scopes_before)
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_native_api_v8.cc:453:30) &, U = (lambda at src/js_native_api_v8.h:52:26)]
src/js_native_api_v8.h:43
(open_callback_scopes) == (open_callback_scopes_before)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_native_api_v8.cc:366
obj->DeletePrivate(context, (node::Environment::GetCurrent((context))->napi_wrapper())) .FromJust()
napi_status v8impl::(anonymous namespace)::Unwrap(napi_env, napi_value, void **, v8impl::(anonymous namespace)::UnwrapAction)
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_native_api_v8.cc:309:44) &, U = (lambda at src/js_native_api_v8.h:52:26)]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_native_api_v8.cc:649
obj->SetPrivate(context, (node::Environment::GetCurrent((context))->napi_wrapper()), v8::External::New(env->isolate, reference)).FromJust()
napi_status v8impl::(anonymous namespace)::Wrap(napi_env, napi_value, void *, napi_finalize, void *, napi_ref *) [wrap_type = v8impl::(anonymous namespace)::retrievable]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_stream.cc:115
(send_handle) == nullptr
virtual int node::JSStream::DoWrite(node::WriteWrap *, uv_buf_t *, size_t, uv_stream_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_stream.cc:150
static void node::JSStream::New(const FunctionCallbackInfo<v8::Value> &)
JSStream
finishWrite
finishShutdown
readBuffer
emitEOF
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_stream.cc
js_stream
src/util-inl.h:494
node::ArrayBufferViewContents<char, 64>::ArrayBufferViewContents(v8::Local<v8::Value>) [T = char, kStackStorageSize = 64]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_stream.cc:158
static void node::JSStream::Finish(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::WriteWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/js_stream.cc:161
args[1]->IsInt32()
static void node::JSStream::Finish(const FunctionCallbackInfo<v8::Value> &) [Wrap = node::ShutdownWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:105
static void node::loader::ModuleWrap::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:109
(argc) >= (2)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:111
args[0]->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:114
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:126
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:130
(sandbox) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:134
args[3]->IsNumber()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:137
args[4]->IsNumber()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:171
!try_catch.Message().IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:172
!try_catch.Exception().IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:201
(args.Length()) == (1)
static void node::loader::ModuleWrap::Link(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:202
args[0]->IsFunction()
linking error, expected resolver to return a promise
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:264
static void node::loader::ModuleWrap::Instantiate(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:265
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:282
(args.Length()) == (2)
static void node::loader::ModuleWrap::Evaluate(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:284
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:287
args[1]->IsBoolean()
cannot get namespace, Module has not been instantiated
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:397
static MaybeLocal<v8::Module> node::loader::ModuleWrap::ResolveCallback(Local<v8::Context>, Local<v8::String>, Local<v8::Module>)
linking error, null dep
linking error, not in local cache
linking error, dependency promises must be resolved on instantiate
linking error, expected a valid module object from resolver
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:955
static void node::loader::ModuleWrap::Resolve(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:957
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:961
second argument is not a URL string
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:979
!(resolution.flags() & URL_FLAGS_FAILED)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:990
static void node::loader::ModuleWrap::GetPackageType(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:992
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1078
static void node::loader::ModuleWrap::SetImportModuleDynamicallyCallback(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1079
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1089
static void node::loader::ModuleWrap::HostInitializeImportMetaObjectCallback(Local<v8::Context>, Local<v8::Module>, Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1109
static void node::loader::ModuleWrap::SetInitializeImportMetaObjectCallback(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1110
ModuleWrap
link
instantiate
evaluate
namespace
getStatus
getError
getStaticDependencySpecifiers
resolve
getPackageType
setImportModuleDynamicallyCallback
setInitializeImportMetaObjectCallback
kUninstantiated
kInstantiating
kInstantiated
kEvaluating
kEvaluated
kErrored
Script execution timed out after 
ERR_SCRIPT_EXECUTION_TIMEOUT
Script execution was interrupted by `SIGINT`
ERR_SCRIPT_EXECUTION_INTERRUPTED
Invalid package name '
' imported from 
./node_modules/
/package.json
../../../../node_modules/
../../../node_modules/
Cannot find package '
ERR_INVALID_MODULE_SPECIFIER
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:499
(0) == (uv_fs_close(nullptr, &fs_req, fd, nullptr))
void node::loader::(anonymous namespace)::CloseDescriptor(uv_file)
Invalid JSON in '
ERR_INVALID_PACKAGE_CONFIG
index
Cannot find main entry point for '
.json
.node
/index.js
/index.json
/index.node
./index.js
./index.json
./index.node
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:808
env->options()->experimental_exports
Maybe<node::url::URL> node::loader::(anonymous namespace)::PackageExportsResolve(node::Environment *, const node::url::URL &, const std::string &, const node::loader::PackageConfig &, const node::url::URL &)
Package exports for '
' do not define a '
' subpath, imported from 
ERR_MODULE_NOT_FOUND
Cannot find module '
.mjs
.cjs
./package.json
../package.json
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1012
MaybeLocal<v8::Promise> node::loader::ImportModuleDynamically(Local<v8::Context>, Local<v8::ScriptOrModule>, Local<v8::String>)
Invalid host defined options
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1048
(it) != (env->id_to_function_map.end())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1051
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc:1065
result->IsPromise()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/module_wrap.cc
module_wrap
resolve_cache
pair
first
second
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:172
(0) == (sigaction(nr, &act, nullptr))
void node::WaitForInspectorDisconnect(node::Environment *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:236
!inspector_agent_->IsListening()
int node::Environment::InitializeInspector(inspector::ParentInspectorHandle *)
Break at bootstrap
getLinkedBinding
getInternalBinding
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:294
loader_exports->IsObject()
MaybeLocal<v8::Value> node::Environment::BootstrapInternalLoaders()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:299
internal_binding_loader->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:303
require->IsFunction()
isMainThread
ownsProcessState
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:353
!has_run_bootstrapping_code()
MaybeLocal<v8::Value> node::Environment::RunBootstrapping()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:367
req_wrap_queue()->IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:368
handle_wrap_queue()->IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:383
(main_script_id) != nullptr
MaybeLocal<v8::Value> node::StartExecution(node::Environment *, const char *)
_third_party_main
inspect
debug
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:460
env->is_main_thread()
void node::LoadEnvironment(node::Environment *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:483
(sigaction(signal, &sa, nullptr)) == (0)
void node::RegisterSignalHandler(int, void (*)(int), bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:612
((*__error())) == (9)
void node::ResetStdio()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:624
(flags) != (-1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:635
(err) != (-1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:647
(0) == (pthread_sigmask(1, &sa, nullptr))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:651
(0) == (pthread_sigmask(2, &sa, nullptr))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:652
(0) == (err)
--abort-on-uncaught-exception
--abort_on_uncaught_exception
--prof
bad option: 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:735
!init_called.exchange(true)
int node::InitializeNodeWithArgs(std::vector<std::string> *, std::vector<std::string> *, std::vector<std::string> *)
NODE_PENDING_DEPRECATION
NODE_PRESERVE_SYMLINKS
NODE_PRESERVE_SYMLINKS_MAIN
NODE_REDIRECT_WARNINGS
OPENSSL_CONF
NODE_OPTIONS
invalid value for NODE_OPTIONS (invalid escape)
invalid value for NODE_OPTIONS (unterminated string)
NODE_ICU_DATA
could not initialize ICU (check NODE_ICU_DATA or --icu-data-dir parameters)
%s: %s
v12.8.0
--help
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:901
void node::Init(int *, const char **, int *, const char ***)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:920
(argc) > (0)
node::InitializationResult node::InitializeOncePerProcess(int, char **)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:958
NODE_EXTRA_CA_CERTS
Error: Attempt to revert an unknown CVE [
/dev/null
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:523
void node::PlatformInit()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:538
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:552
(s.flags) != (-1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node.cc:560
T *node::Malloc(size_t) [T = const char *]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:460
(node_env) != nullptr
void napi_module_register_by_symbol(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, napi_addon_register_func)
Module has no declared entry point.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:1053
(func) != nullptr
napi_status napi_get_threadsafe_function_context(napi_threadsafe_function, void **)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:1054
(result) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:1064
napi_status napi_call_threadsafe_function(napi_threadsafe_function, void *, napi_threadsafe_function_call_mode)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:1071
napi_status napi_acquire_threadsafe_function(napi_threadsafe_function)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:1078
napi_status napi_release_threadsafe_function(napi_threadsafe_function, napi_threadsafe_function_release_mode)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:1084
napi_status napi_unref_threadsafe_function(napi_env, napi_threadsafe_function)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:1090
napi_status napi_ref_threadsafe_function(napi_env, napi_threadsafe_function)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:17
(node_env()) != nullptr
node_napi_env__::node_napi_env__(v8::Local<v8::Context>)
src/js_native_api_v8.h:15
(isolate) == (context->GetIsolate())
napi_env__::napi_env__(v8::Local<v8::Context>)
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at src/js_native_api_v8.h:19:27) &, U = (lambda at src/js_native_api_v8.h:52:26)]
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:52:44) &, U = (lambda at src/js_native_api_v8.h:52:26)]
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:876:26), U = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:878:8)]
ERR_NAPI_TSFN_GET_UNDEFINED
Failed to retrieve undefined value
ERR_NAPI_TSFN_CALL_JS
Failed to call JS callback
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:333:32) &, U = (lambda at src/js_native_api_v8.h:52:26)]
ERR_NAPI_TSFN_START_IDLE_LOOP
Failed to start the idle loop
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:325
napi_throw_error(env, "ERR_NAPI_TSFN_START_IDLE_LOOP", "Failed to start the idle loop") == napi_ok
void v8impl::(anonymous namespace)::ThreadSafeFunction::MaybeStartIdle()
ERR_NAPI_TSFN_STOP_IDLE_LOOP
Failed to stop the idle loop
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:304
napi_throw_error(env, "ERR_NAPI_TSFN_STOP_IDLE_LOOP", "Failed to stop the idle loop") == napi_ok
void v8impl::(anonymous namespace)::ThreadSafeFunction::DispatchOne()
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:312:34) &, U = (lambda at src/js_native_api_v8.h:52:26)]
src/node_mutex.h:126
(0) == (Traits::cond_init(&cond_))
node::ConditionVariableBase<node::LibuvMutexTraits>::ConditionVariableBase() [Traits = node::LibuvMutexTraits]
void napi_env__::CallIntoModule(T &&, U &&) [T = (lambda at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_api.cc:471:28) &, U = (lambda at src/js_native_api_v8.h:52:26)]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:418
(thread_local_modpending) == nullptr
void node::binding::DLOpen(const FunctionCallbackInfo<v8::Value> &)
process.dlopen needs at least 2 arguments.
flag argument must be an integer.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:575
void node::binding::GetInternalBinding(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:587
exports->SetPrototype(env->context(), Null(env->isolate())).FromJust()
natives
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:598
exports ->Set(env->context(), env->config_string(), native_module::NativeModuleEnv::GetConfigString( env->isolate())) .FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:609
void node::binding::GetLinkedBinding(const FunctionCallbackInfo<v8::Value> &)
No such module was linked: %s
Linked module has no declared entry point.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:298
(handle) != (nullptr)
void node::binding::global_handle_map_t::erase(void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:303
(it->second.refcount) >= (1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:273
void node::binding::global_handle_map_t::set(void *, node::node_module *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:288
node::node_module *node::binding::global_handle_map_t::get_and_increase_refcount(void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:543
mp == nullptr || (mp->nm_flags & flag) != 0
struct node_module *node::binding::FindModule(struct node_module *, const char *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:559
(mod->nm_register_func) == nullptr
Local<v8::Object> node::binding::InitModule(node::Environment *, node::node_module *, Local<v8::String>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:560
(mod->nm_context_register_func) != nullptr
No such module: %s
Module did not self-register.
The module '%s'
was compiled against a different Node.js version using
NODE_MODULE_VERSION %d. This version of Node.js requires
NODE_MODULE_VERSION %d. Please try re-compiling or re-installing
the module (for instance, using `npm rebuild` or `npm install`).
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_binding.cc:513
(mp->nm_flags & NM_F_BUILTIN) == (0)
auto node::binding::DLOpen(const FunctionCallbackInfo<v8::Value> &)::(anonymous class)::operator()(node::binding::DLib *) const
node_register_module_v72
napi_register_module_v1
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:201
val->IsArrayBufferView()
char *node::Buffer::Data(Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:209
obj->IsArrayBufferView()
char *node::Buffer::Data(Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:217
size_t node::Buffer::Length(Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:224
size_t node::Buffer::Length(Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:264
actual <= length
MaybeLocal<v8::Object> node::Buffer::New(v8::Isolate *, Local<v8::String>, enum encoding)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:339
(data) != nullptr
MaybeLocal<v8::Object> node::Buffer::Copy(node::Environment *, const char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:419
MaybeLocal<v8::Object> node::Buffer::New(node::Environment *, char *, size_t, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:420
length <= kMaxLength
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:432
(env->isolate_data()->node_allocator()) != nullptr
Failed to allocate memory
ERR_MEMORY_ALLOCATION_FAILED
Buffer is not available for the current Context
ERR_BUFFER_CONTEXT_NOT_AVAILABLE
ERR_BUFFER_TOO_LARGE
src/env-inl.h:899
(ret) != (nullptr)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:234
!env->buffer_prototype_object().IsEmpty()
MaybeLocal<v8::Uint8Array> node::Buffer::New(node::Environment *, Local<v8::ArrayBuffer>, size_t, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:134
(data_) == (static_cast<char*>(obj_c.Data()))
node::Buffer::(anonymous namespace)::CallbackInfo::CallbackInfo(v8::Isolate *, Local<v8::ArrayBuffer>, node::Buffer::FreeCallback, char *, void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:136
(data_) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc
setBufferPrototype
createFromString
byteLengthUtf8
copy
compare
compareOffset
fill
indexOfBuffer
indexOfNumber
indexOfString
swap16
swap32
swap64
encodeUtf8String
kMaxLength
kStringMaxLength
asciiSlice
base64Slice
latin1Slice
hexSlice
ucs2Slice
utf8Slice
asciiWrite
base64Write
latin1Write
hexWrite
ucs2Write
utf8Write
zeroFill
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:1120
target ->Set(env->context(), FIXED_ONE_BYTE_STRING(env->isolate(), "zeroFill"), Uint32Array::New(array_buffer, 0, 1)) .FromJust()
void node::Buffer::(anonymous namespace)::Initialize(Local<v8::Object>, Local<v8::Value>, Local<v8::Context>, void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:1057
void node::Buffer::(anonymous namespace)::SetBufferPrototype(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:448
void node::Buffer::(anonymous namespace)::CreateFromString(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:449
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:663
void node::Buffer::(anonymous namespace)::ByteLengthUtf8(const FunctionCallbackInfo<v8::Value> &)
argument must be a buffer
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:497
(target_obj)->IsArrayBufferView()
void node::Buffer::(anonymous namespace)::Copy(const FunctionCallbackInfo<v8::Value> &)
(target_data) != (nullptr)
Index out of range
The value of "sourceStart" is out of range.
ERR_OUT_OF_RANGE
The value of "targetStart" is out of range.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:713
(source_start) <= (source_end)
void node::Buffer::(anonymous namespace)::CompareOffset(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:714
(target_start) <= (target_end)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:533
(args[0])->IsArrayBufferView()
void node::Buffer::(anonymous namespace)::Fill(const FunctionCallbackInfo<v8::Value> &)
(ts_obj_data) != (nullptr)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:550
(args[1])->IsArrayBufferView()
(fill_obj_data) != (nullptr)
src/util-inl.h:207
(nbytes % 2) == (0)
void node::SwapBytes16(char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:901
args[1]->IsObject()
void node::Buffer::(anonymous namespace)::IndexOfBuffer(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:902
args[2]->IsNumber()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:903
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:940
(offset) < (haystack_length)
src/string_search.h:23
length > 0 && data != nullptr
node::stringsearch::Vector<const unsigned short>::Vector(T *, size_t, bool) [T = const unsigned short]
src/string_search.h:100
(pattern_length) > (0)
node::stringsearch::StringSearch<unsigned short>::StringSearch(node::stringsearch::StringSearch::Vector) [Char = unsigned short]
src/string_search.h:277
(1) == (pattern_.length())
size_t node::stringsearch::StringSearch<unsigned short>::SingleCharSearch(node::stringsearch::StringSearch::Vector, size_t) [Char = unsigned short]
src/string_search.h:213
(pos) <= (max_n)
size_t node::stringsearch::FindFirstCharacter(Vector<const Char>, Vector<const Char>, size_t) [Char = unsigned short]
src/string_search.h:214
(max_n - pos) <= (18446744073709551615UL / sizeof(Char))
src/string_search.h:217
(pos) <= (subject.length())
src/string_search.h:218
(subject.length() - pos) <= (18446744073709551615UL / sizeof(Char))
src/string_search.h:290
(pattern_.length()) > (1)
size_t node::stringsearch::StringSearch<unsigned short>::LinearSearch(node::stringsearch::StringSearch::Vector, size_t) [Char = unsigned short]
src/string_search.h:296
(i) <= (n)
src/string_search.h:537
size_t node::stringsearch::StringSearch<unsigned short>::InitialSearch(node::stringsearch::StringSearch::Vector, size_t) [Char = unsigned short]
node::stringsearch::Vector<const unsigned char>::Vector(T *, size_t, bool) [T = const unsigned char]
node::stringsearch::StringSearch<unsigned char>::StringSearch(node::stringsearch::StringSearch::Vector) [Char = unsigned char]
size_t node::stringsearch::StringSearch<unsigned char>::SingleCharSearch(node::stringsearch::StringSearch::Vector, size_t) [Char = unsigned char]
size_t node::stringsearch::StringSearch<unsigned char>::LinearSearch(node::stringsearch::StringSearch::Vector, size_t) [Char = unsigned char]
size_t node::stringsearch::StringSearch<unsigned char>::InitialSearch(node::stringsearch::StringSearch::Vector, size_t) [Char = unsigned char]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:975
void node::Buffer::(anonymous namespace)::IndexOfNumber(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:976
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:977
args[3]->IsBoolean()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:992
(offset) < (buffer.length())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:787
void node::Buffer::(anonymous namespace)::IndexOfString(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:788
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:789
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:827
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:1009
void node::Buffer::(anonymous namespace)::Swap16(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:1018
void node::Buffer::(anonymous namespace)::Swap32(const FunctionCallbackInfo<v8::Value> &)
src/util-inl.h:231
(nbytes % 4) == (0)
void node::SwapBytes32(char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:1027
void node::Buffer::(anonymous namespace)::Swap64(const FunctionCallbackInfo<v8::Value> &)
src/util-inl.h:255
(nbytes % 8) == (0)
void node::SwapBytes64(char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:1038
(args.Length()) >= (1)
void node::Buffer::(anonymous namespace)::EncodeUtf8String(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:1039
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:481
!error.IsEmpty()
void node::Buffer::(anonymous namespace)::StringSlice(const FunctionCallbackInfo<v8::Value> &) [encoding = node::ASCII]
src/util-inl.h:501
node::ArrayBufferViewContents<char, 64>::ArrayBufferViewContents(v8::Local<v8::Object>) [T = char, kStackStorageSize = 64]
void node::Buffer::(anonymous namespace)::StringSlice(const FunctionCallbackInfo<v8::Value> &) [encoding = node::BASE64]
void node::Buffer::(anonymous namespace)::StringSlice(const FunctionCallbackInfo<v8::Value> &) [encoding = node::BINARY]
void node::Buffer::(anonymous namespace)::StringSlice(const FunctionCallbackInfo<v8::Value> &) [encoding = node::HEX]
void node::Buffer::(anonymous namespace)::StringSlice(const FunctionCallbackInfo<v8::Value> &) [encoding = node::UCS2]
void node::Buffer::(anonymous namespace)::StringSlice(const FunctionCallbackInfo<v8::Value> &) [encoding = node::UTF8]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_buffer.cc:629
(args.This())->IsArrayBufferView()
void node::Buffer::(anonymous namespace)::StringWrite(const FunctionCallbackInfo<v8::Value> &) [encoding = node::ASCII]
argument must be a string
"offset" is outside of buffer bounds
ERR_BUFFER_OUT_OF_BOUNDS
void node::Buffer::(anonymous namespace)::StringWrite(const FunctionCallbackInfo<v8::Value> &) [encoding = node::BASE64]
void node::Buffer::(anonymous namespace)::StringWrite(const FunctionCallbackInfo<v8::Value> &) [encoding = node::BINARY]
void node::Buffer::(anonymous namespace)::StringWrite(const FunctionCallbackInfo<v8::Value> &) [encoding = node::HEX]
void node::Buffer::(anonymous namespace)::StringWrite(const FunctionCallbackInfo<v8::Value> &) [encoding = node::UCS2]
void node::Buffer::(anonymous namespace)::StringWrite(const FunctionCallbackInfo<v8::Value> &) [encoding = node::UTF8]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_config.cc
isDebugBuild
hasOpenSSL
hasIntl
hasSmallICU
hasTracing
hasNodeOptions
hasInspector
noBrowserGlobals
hasDtrace
hasCachedBuiltins
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1323
os_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
void node::DefineConstants(v8::Isolate *, Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1327
err_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1331
sig_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1335
priority_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1339
fs_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1343
crypto_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1347
zlib_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1351
dlopen_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_constants.cc:1355
trace_constants->SetPrototype(env->context(), Null(env->isolate())).FromJust()
UV_UDP_REUSEADDR
dlopen
signals
trace
E2BIG
EACCES
EADDRINUSE
EADDRNOTAVAIL
EAFNOSUPPORT
EAGAIN
EALREADY
EBADF
EBADMSG
EBUSY
ECANCELED
ECHILD
ECONNABORTED
ECONNRESET
EDEADLK
EDESTADDRREQ
EDOM
EDQUOT
EEXIST
EFAULT
EFBIG
EHOSTUNREACH
EIDRM
EILSEQ
EINPROGRESS
EINTR
EINVAL
EISCONN
EISDIR
ELOOP
EMFILE
EMLINK
EMSGSIZE
EMULTIHOP
ENAMETOOLONG
ENETDOWN
ENETRESET
ENETUNREACH
ENFILE
ENOBUFS
ENODEV
ENOENT
ENOEXEC
ENOLCK
ENOLINK
ENOMSG
ENOPROTOOPT
ENOSPC
ENOSR
ENOSTR
ENOSYS
ENOTCONN
ENOTDIR
ENOTEMPTY
ENOTSOCK
ENOTSUP
ENOTTY
ENXIO
EOPNOTSUPP
EOVERFLOW
EPERM
EPIPE
EPROTO
EPROTONOSUPPORT
EPROTOTYPE
ERANGE
EROFS
ESPIPE
ESRCH
ESTALE
ETIME
ETIMEDOUT
ETXTBSY
EWOULDBLOCK
EXDEV
SIGIOT
PRIORITY_LOW
PRIORITY_BELOW_NORMAL
PRIORITY_NORMAL
PRIORITY_ABOVE_NORMAL
PRIORITY_HIGH
PRIORITY_HIGHEST
UV_FS_SYMLINK_DIR
UV_FS_SYMLINK_JUNCTION
O_RDONLY
O_WRONLY
O_RDWR
UV_DIRENT_UNKNOWN
UV_DIRENT_FILE
UV_DIRENT_DIR
UV_DIRENT_LINK
UV_DIRENT_FIFO
UV_DIRENT_SOCKET
UV_DIRENT_CHAR
UV_DIRENT_BLOCK
S_IFMT
S_IFREG
S_IFDIR
S_IFCHR
S_IFBLK
S_IFIFO
S_IFLNK
S_IFSOCK
O_CREAT
O_EXCL
O_NOCTTY
O_TRUNC
O_APPEND
O_DIRECTORY
O_NOFOLLOW
O_SYNC
O_DSYNC
O_SYMLINK
O_NONBLOCK
S_IRWXU
S_IRUSR
S_IWUSR
S_IXUSR
S_IRWXG
S_IRGRP
S_IWGRP
S_IXGRP
S_IRWXO
S_IROTH
S_IWOTH
S_IXOTH
F_OK
R_OK
W_OK
X_OK
UV_FS_COPYFILE_EXCL
COPYFILE_EXCL
UV_FS_COPYFILE_FICLONE
COPYFILE_FICLONE
UV_FS_COPYFILE_FICLONE_FORCE
COPYFILE_FICLONE_FORCE
OPENSSL_VERSION_NUMBER
SSL_OP_ALL
SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION
SSL_OP_CIPHER_SERVER_PREFERENCE
SSL_OP_CISCO_ANYCONNECT
SSL_OP_COOKIE_EXCHANGE
SSL_OP_CRYPTOPRO_TLSEXT_BUG
SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS
SSL_OP_EPHEMERAL_RSA
SSL_OP_LEGACY_SERVER_CONNECT
SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER
SSL_OP_MICROSOFT_SESS_ID_BUG
SSL_OP_MSIE_SSLV2_RSA_PADDING
SSL_OP_NETSCAPE_CA_DN_BUG
SSL_OP_NETSCAPE_CHALLENGE_BUG
SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG
SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG
SSL_OP_NO_COMPRESSION
SSL_OP_NO_QUERY_MTU
SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
SSL_OP_NO_SSLv2
SSL_OP_NO_SSLv3
SSL_OP_NO_TICKET
SSL_OP_NO_TLSv1
SSL_OP_NO_TLSv1_1
SSL_OP_NO_TLSv1_2
SSL_OP_PKCS1_CHECK_1
SSL_OP_PKCS1_CHECK_2
SSL_OP_SINGLE_DH_USE
SSL_OP_SINGLE_ECDH_USE
SSL_OP_SSLEAY_080_CLIENT_DH_BUG
SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG
SSL_OP_TLS_BLOCK_PADDING_BUG
SSL_OP_TLS_D5_BUG
SSL_OP_TLS_ROLLBACK_BUG
ENGINE_METHOD_RSA
ENGINE_METHOD_DSA
ENGINE_METHOD_DH
ENGINE_METHOD_RAND
ENGINE_METHOD_EC
ENGINE_METHOD_CIPHERS
ENGINE_METHOD_DIGESTS
ENGINE_METHOD_PKEY_METHS
ENGINE_METHOD_PKEY_ASN1_METHS
ENGINE_METHOD_ALL
ENGINE_METHOD_NONE
DH_CHECK_P_NOT_SAFE_PRIME
DH_CHECK_P_NOT_PRIME
DH_UNABLE_TO_CHECK_GENERATOR
DH_NOT_SUITABLE_GENERATOR
ALPN_ENABLED
RSA_PKCS1_PADDING
RSA_SSLV23_PADDING
RSA_NO_PADDING
RSA_PKCS1_OAEP_PADDING
RSA_X931_PADDING
RSA_PKCS1_PSS_PADDING
RSA_PSS_SALTLEN_DIGEST
RSA_PSS_SALTLEN_MAX_SIGN
RSA_PSS_SALTLEN_AUTO
defaultCoreCipherList
TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA
TLS1_VERSION
TLS1_1_VERSION
TLS1_2_VERSION
TLS1_3_VERSION
POINT_CONVERSION_COMPRESSED
POINT_CONVERSION_UNCOMPRESSED
POINT_CONVERSION_HYBRID
defaultCipherList
RTLD_LAZY
RTLD_NOW
RTLD_GLOBAL
RTLD_LOCAL
TRACE_EVENT_PHASE_BEGIN
TRACE_EVENT_PHASE_END
TRACE_EVENT_PHASE_COMPLETE
TRACE_EVENT_PHASE_INSTANT
TRACE_EVENT_PHASE_ASYNC_BEGIN
TRACE_EVENT_PHASE_ASYNC_STEP_INTO
TRACE_EVENT_PHASE_ASYNC_STEP_PAST
TRACE_EVENT_PHASE_ASYNC_END
TRACE_EVENT_PHASE_NESTABLE_ASYNC_BEGIN
TRACE_EVENT_PHASE_NESTABLE_ASYNC_END
TRACE_EVENT_PHASE_NESTABLE_ASYNC_INSTANT
TRACE_EVENT_PHASE_FLOW_BEGIN
TRACE_EVENT_PHASE_FLOW_STEP
TRACE_EVENT_PHASE_FLOW_END
TRACE_EVENT_PHASE_METADATA
TRACE_EVENT_PHASE_COUNTER
TRACE_EVENT_PHASE_SAMPLE
TRACE_EVENT_PHASE_CREATE_OBJECT
TRACE_EVENT_PHASE_SNAPSHOT_OBJECT
TRACE_EVENT_PHASE_DELETE_OBJECT
TRACE_EVENT_PHASE_MEMORY_DUMP
TRACE_EVENT_PHASE_MARK
TRACE_EVENT_PHASE_CLOCK_SYNC
TRACE_EVENT_PHASE_ENTER_CONTEXT
TRACE_EVENT_PHASE_LEAVE_CONTEXT
TRACE_EVENT_PHASE_LINK_IDS
makeContext
isContext
compileFunction
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:245
(args.Length()) == (5)
static void node::contextify::ContextifyContext::MakeContext(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:246
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:253
!sandbox->HasPrivate( env->context(), env->contextify_context_private_symbol()).FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:257
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:260
args[2]->IsString() || args[2]->IsUndefined()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:265
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:268
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:293
static void node::contextify::ContextifyContext::IsContext(const FunctionCallbackInfo<v8::Value> &)
ContextifyScript
createCachedData
runInContext
runInThisContext
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:643
static void node::contextify::ContextifyScript::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:646
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:648
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:651
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:663
(argc) == (7)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:664
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:666
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:669
args[4]->IsArrayBufferView()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:672
args[5]->IsBoolean()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:675
args[6]->IsObject()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:679
node,node.vm,node.vm.script
ContextifyScript::New
filename
RunInThisContext
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:821
static void node::contextify::ContextifyScript::RunInThisContext(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:823
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:826
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:829
args[2]->IsBoolean()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:832
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:853
static void node::contextify::ContextifyScript::RunInContext(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:855
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:860
(contextify_context) != nullptr
RunInContext
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:868
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:871
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:874
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:877
Script methods can only be called on script instances.
Break on start
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:993
static void node::contextify::ContextifyContext::CompileFunction(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:997
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1001
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1005
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1011
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1016
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1022
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1026
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1035
args[7]->IsArray()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1042
args[8]->IsArray()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1096
val->IsObject()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc:1107
val->IsString()
startSigintWatchdog
stopSigintWatchdog
watchdogHasPendingSigint
CompiledFnEntry
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_contextify.cc
contextify
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc
credentials
safeGetenv
implementsPosixCredentials
getuid
geteuid
getgid
getegid
getgroups
initgroups
setegid
seteuid
setgid
setuid
setgroups
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:73
void node::credentials::SafeGetenv(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:178
env->has_run_bootstrapping_code()
void node::credentials::GetUid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:192
void node::credentials::GetEUid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:185
void node::credentials::GetGid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:199
void node::credentials::GetEGid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:282
void node::credentials::GetGroups(const FunctionCallbackInfo<v8::Value> &)
!IsInvalidated()
src/util.h:376
void node::MaybeStackBuffer<v8::Local<v8::Value>, 128>::SetLength(size_t) [T = v8::Local<v8::Value>, kStackStorageSize = 128]
src/util.h:336
T &node::MaybeStackBuffer<v8::Local<v8::Value>, 128>::operator[](size_t) [T = v8::Local<v8::Value>, kStackStorageSize = 128]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:335
void node::credentials::InitGroups(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:336
args[0]->IsUint32() || args[0]->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:337
args[1]->IsUint32() || args[1]->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:225
env->owns_process_state()
void node::credentials::SetEGid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:227
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:228
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:263
void node::credentials::SetEUid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:265
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:266
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:206
void node::credentials::SetGid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:208
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:209
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:244
void node::credentials::SetUid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:246
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:247
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:305
void node::credentials::SetGroups(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_credentials.cc:306
void node::MaybeStackBuffer<unsigned int, 64>::AllocateSufficientStorage(size_t) [T = unsigned int, kStackStorageSize = 64]
T *node::Realloc(T *, size_t) [T = unsigned int]
T &node::MaybeStackBuffer<unsigned int, 64>::operator[](size_t) [T = unsigned int, kStackStorageSize = 64]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_domain.cc:18
void node::domain::Enable(const FunctionCallbackInfo<v8::Value> &)
enable
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_domain.cc
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_env_var.cc:216
key->IsString()
virtual std::shared_ptr<KVStore> node::KVStore::Clone(v8::Isolate *) const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_env_var.cc:308
property->IsString()
void node::EnvGetter(Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
Assigning any value other than a string, number, or boolean to a process.env property is deprecated. Please make sure to convert the value to a string before setting process.env with it.
DEP0104
    at [eval]:%i:%i
    at [eval] (%s:%i:%i)
    at %s:%i:%i
    at %s (%s:%i:%i)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:198
try_catch.HasCaught()
void node::PrintCaughtException(v8::Isolate *, Local<v8::Context>, const v8::TryCatch &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:242
err_obj ->SetPrivate(env->context(), env->arrow_message_private_symbol(), arrow_str.ToLocalChecked()) .FromMaybe(false)
void node::AppendExceptionLine(node::Environment *, Local<v8::Value>, Local<v8::Message>, enum ErrorHandlingMode)
%s: %s:%s%s Assertion `%s' failed.
FATAL ERROR: %s %s
FATAL ERROR: %s
FatalError
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:816
void node::errors::SetPrepareStackTraceCallback(const FunctionCallbackInfo<v8::Value> &)
setPrepareStackTraceCallback
setEnhanceStackForFatalException
noSideEffectsToString
triggerUncaughtException
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:906
void node::errors::TriggerUncaughtException(v8::Isolate *, Local<v8::Value>, Local<v8::Message>, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:911
isolate->InContext()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:1006
!try_catch.HasTerminated()
void node::errors::TriggerUncaughtException(v8::Isolate *, const v8::TryCatch &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:1007
node-do-not-add-exception-line
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:101
(end) >= (start)
std::string node::GetErrorSource(v8::Isolate *, Local<v8::Context>, Local<v8::Message>, bool *)
%s:%i
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:115
(off) >= (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:135
(off) <= (max_off)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:282
void node::ReportFatalException(node::Environment *, Local<v8::Value>, Local<v8::Message>, node::EnhanceFatalException)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:283
!message.IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:331
<toString() threw exception>
%s: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:823
void node::errors::SetEnhanceStackForFatalException(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc:824
args[1]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_errors.cc
errors
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:141
static void node::fs::FileHandle::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:142
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:154
!closing_
virtual node::fs::FileHandle::~FileHandle()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:156
closed_
file_handle
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:472
void node::fs::NewFSReqCallback(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:482
(wrap_->req()) == (req)
node::fs::FSReqAfterScope::FSReqAfterScope(node::fs::FSReqBase *, uv_fs_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:772
void node::fs::Access(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:774
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:778
access
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:785
(argc) == (4)
node,node.fs,node.fs.sync
fs.sync.access
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:798
void node::fs::Close(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:800
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:808
(argc) == (3)
fs.sync.close
open
openFileHandle
read
fdatasync
fsync
ftruncate
rmdir
mkdir
readdir
internalModuleReadJSON
internalModuleStat
stat
lstat
fstat
symlink
readlink
unlink
writeBuffer
writeBuffers
writeString
realpath
copyFile
chmod
fchmod
chown
fchown
lchown
utimes
futimes
mkdtemp
kFsStatsFieldsNumber
statValues
bigintStatValues
FSReqCallback
FileHandleReqWrap
FSReqPromise
releaseFD
FileHandle
FileHandleCloseReq
use promises
kUsePromises
Closing file descriptor %d on garbage collection failed
Closing file descriptor %d on garbage collection
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:238
!maybe_resolver.IsEmpty()
MaybeLocal<v8::Promise> node::fs::FileHandle::ClosePromise()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:241
!reading_
virtual node::ReqWrap<uv_fs_s>::~ReqWrap() [T = uv_fs_s]
CloseReq
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:254
(close) != nullptr
auto node::fs::FileHandle::ClosePromise()::(anonymous class)::operator()(uv_fs_t *) const
uv_buf_t
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:367
(handle->current_read_.get()) == (req_wrap)
auto node::fs::FileHandle::ReadStart()::(anonymous class)::operator()(uv_fs_t *) const
src/node_file.h:251
finished_
virtual node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise() [AliasedBufferT = node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void>]
stats_field_array
continuation_data
virtual node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise() [AliasedBufferT = node::AliasedBufferBase<double, v8::Float64Array, void>]
paths
FSContinuationData
src/node_file.h:44
(paths.size()) > (0)
std::string node::fs::FSContinuationData::PopPath()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1555
(argc) >= (3)
void node::fs::Open(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1558
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1560
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1563
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1571
(argc) == (5)
fs.sync.open
src/node_file.h:84
!has_data_
void node::fs::FSReqBase::Init(const char *, const char *, size_t, enum encoding)
void node::MaybeStackBuffer<char, 64>::AllocateSufficientStorage(size_t) [T = char, kStackStorageSize = 64]
src/util.h:382
(length + 1) <= (capacity())
void node::MaybeStackBuffer<char, 64>::SetLengthAndZeroTerminate(size_t) [T = char, kStackStorageSize = 64]
void node::MaybeStackBuffer<char, 64>::SetLength(size_t) [T = char, kStackStorageSize = 64]
static node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F node::MakeLibuvRequestCallback<uv_fs_s, void (*)(uv_fs_s *)>::For(ReqWrap<ReqT> *, node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F) [ReqT = uv_fs_s, T = void (*)(uv_fs_s *)]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1586
void node::fs::OpenFileHandle(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1589
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1591
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1594
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1602
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1862
(argc) >= (5)
void node::fs::Read(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1864
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1867
Buffer::HasInstance(args[1])
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1872
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1874
(off) < (buffer_length)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1876
args[3]->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1878
Buffer::IsWithinBounds(off, len, buffer_length)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1880
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1891
fs.sync.read
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1154
void node::fs::Fdatasync(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1156
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1164
fs.sync.fdatasync
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1176
void node::fs::Fsync(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1178
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1186
fs.sync.fsync
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1102
void node::fs::Rename(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1105
(*old_path) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1107
(*new_path) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1115
fs.sync.rename
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1128
void node::fs::FTruncate(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1130
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1133
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1141
fs.sync.ftruncate
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1220
void node::fs::RMDir(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1223
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1230
fs.sync.rmdir
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1388
void node::fs::MKDir(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1391
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1393
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1396
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1404
fs.sync.mkdir
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1467
void node::fs::ReadDir(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1470
scandir
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1486
fs.sync.readdir
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1496
(req_wrap_sync.req.result) >= (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:825
void node::fs::InternalModuleReadJSON(const FunctionCallbackInfo<v8::Value> &)
"main"
"exports"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:841
(0) == (uv_fs_close(loop, &close_req, fd, nullptr))
auto node::fs::InternalModuleReadJSON(const FunctionCallbackInfo<v8::Value> &)::(anonymous class)::operator()(...) const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:893
void node::fs::InternalModuleStat(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:911
void node::fs::Stat(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:914
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:922
fs.sync.stat
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:941
void node::fs::LStat(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:944
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:952
fs.sync.lstat
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:972
void node::fs::FStat(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:974
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:983
fs.sync.fstat
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1032
void node::fs::Link(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1035
(*src) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1038
(*dest) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1045
fs.sync.link
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1003
void node::fs::Symlink(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1006
(*target) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1008
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1010
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1018
fs.sync.symlink
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1059
void node::fs::ReadLink(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1062
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1071
fs.sync.readlink
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1198
void node::fs::Unlink(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1201
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1208
fs.sync.unlink
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1662
void node::fs::WriteBuffer(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1664
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1667
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1672
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1674
(off) <= (buffer_length)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1676
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1678
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1679
(len) <= (buffer_length)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1680
(off + len) >= (off)
write
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1692
fs.sync.write
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1714
void node::fs::WriteBuffers(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1716
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1719
args[1]->IsArray()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1728
Buffer::HasInstance(chunk)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1737
void node::MaybeStackBuffer<uv_buf_t, 1024>::AllocateSufficientStorage(size_t) [T = uv_buf_t, kStackStorageSize = 1024]
T *node::Realloc(T *, size_t) [T = uv_buf_t]
T &node::MaybeStackBuffer<uv_buf_t, 1024>::operator[](size_t) [T = uv_buf_t, kStackStorageSize = 1024]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1761
void node::fs::WriteString(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1763
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1823
(argc) == (6)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1423
void node::fs::RealPath(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1426
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1435
fs.sync.realpath
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1622
void node::fs::CopyFile(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1625
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1628
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1630
copyfile
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1639
fs.sync.copyfile
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1909
void node::fs::Chmod(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1912
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1914
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1922
fs.sync.chmod
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1939
void node::fs::FChmod(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1941
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1944
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1952
fs.sync.fchmod
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1969
void node::fs::Chown(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1972
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1974
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1977
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:1985
fs.sync.chown
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2002
void node::fs::FChown(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2004
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2007
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2010
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2018
fs.sync.fchown
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2032
void node::fs::LChown(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2035
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2037
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2040
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2048
fs.sync.lchown
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2062
void node::fs::UTimes(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2065
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2067
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2070
utime
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2078
fs.sync.utimes
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2091
void node::fs::FUTimes(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2093
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2096
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2099
futime
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2107
fs.sync.futimes
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2121
void node::fs::Mkdtemp(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2124
(*tmpl) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc:2133
fs.sync.mkdtemp
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_file.cc
current_read
FileHandleReadWrap
1.1.4
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http_parser_llhttp.cc
http_parser_llhttp
HTTPParser
REQUEST
RESPONSE
kOnHeaders
kOnHeadersComplete
kOnBody
kOnMessageComplete
kOnExecute
DELETE
HEAD
POST
CONNECT
OPTIONS
TRACE
COPY
LOCK
MKCOL
MOVE
PROPFIND
PROPPATCH
SEARCH
UNLOCK
BIND
REBIND
UNBIND
REPORT
MKACTIVITY
CHECKOUT
MERGE
M-SEARCH
NOTIFY
SUBSCRIBE
UNSUBSCRIBE
PATCH
PURGE
MKCALENDAR
LINK
UNLINK
SOURCE
methods
free
execute
finish
initialize
pause
resume
consume
unconsume
getCurrentBuffer
current_buffer
Parser
src/env-inl.h:587
(http_parser_buffer_) == nullptr
void node::Environment::set_http_parser_buffer(char *)
src/stream_base-inl.h:51
void node::StreamListener::PassReadErrorToPreviousListener(ssize_t)
src/node_http_parser_impl.h:654
(execute_depth_) == (0)
Local<v8::Value> node::(anonymous namespace)::Parser::Execute(const char *, size_t)
src/node_http_parser_impl.h:735
(colon) != nullptr
src/node_http_parser_impl.h:466
parser->current_buffer_.IsEmpty()
static void node::(anonymous namespace)::Parser::Execute(const FunctionCallbackInfo<v8::Value> &)
src/node_http_parser_impl.h:467
(parser->current_buffer_len_) == (0)
src/node_http_parser_impl.h:468
(parser->current_buffer_data_) == nullptr
src/node_http_parser_impl.h:488
static void node::(anonymous namespace)::Parser::Finish(const FunctionCallbackInfo<v8::Value> &)
src/node_http_parser_impl.h:499
static void node::(anonymous namespace)::Parser::Initialize(const FunctionCallbackInfo<v8::Value> &)
src/node_http_parser_impl.h:500
src/node_http_parser_impl.h:505
type == HTTP_REQUEST || type == HTTP_RESPONSE
src/node_http_parser_impl.h:509
(env) == (parser->env())
src/node_http_parser_impl.h:832
(execute_depth_) != (0)
int node::(anonymous namespace)::Parser::MaybePause()
Paused in callback
HPE_HEADER_OVERFLOW:Header overflow
src/node_http_parser_impl.h:219
(num_fields_) < (kMaxHeaderFieldsCount)
int node::(anonymous namespace)::Parser::on_header_field(const char *, size_t)
src/node_http_parser_impl.h:220
(num_fields_) == (num_values_ + 1)
src/node_http_parser_impl.h:240
(num_values_) < (arraysize(values_))
int node::(anonymous namespace)::Parser::on_header_value(const char *, size_t)
src/node_http_parser_impl.h:241
(num_values_) == (num_fields_)
HPE_JS_EXCEPTION:JS Exception
src/node_http_parser_impl.h:527
static void node::(anonymous namespace)::Parser::Pause(const FunctionCallbackInfo<v8::Value> &) [should_pause = true]
static void node::(anonymous namespace)::Parser::Pause(const FunctionCallbackInfo<v8::Value> &) [should_pause = false]
src/node_http_parser_impl.h:549
static void node::(anonymous namespace)::Parser::Consume(const FunctionCallbackInfo<v8::Value> &)
src/node_http_parser_impl.h:551
(stream) != nullptr
void node::StreamResource::PushStreamListener(node::StreamListener *)
src/stream_base-inl.h:80
(listener->stream_) == nullptr
2.8.0
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http_parser_traditional.cc
src/node_http_parser_impl.h:690
(len) == (0)
src/node_http_parser_impl.h:699
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:86
!session_handle_.IsEmpty()
node::http2::Http2Scope::Http2Scope(node::http2::Http2Session *)
setting header table size: %d
setting max concurrent streams: %d
setting max frame size: %d
setting initial window size: %d
setting max header list size: %d
setting enable push: %d
setting enable connect protocol: %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:308
(nghttp2_submit_settings(**session_, NGHTTP2_FLAG_NONE, &entries_[0], count_)) == (0)
void node::http2::Http2Session::Http2Settings::Send()
Http2Priority: parent: %d, weight: %d, exclusive: %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:361
(header_string_len) == (0)
node::http2::Headers::Headers(v8::Isolate *, Local<v8::Context>, Local<v8::Array>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:377
(header_contents + header_string_len) <= (*buf_ + buf_.length())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:384
(header_string.As<String>()->WriteOneByte( isolate, reinterpret_cast<uint8_t*>(header_contents), 0, header_string_len, String::NO_NULL_TERMINATION)) == (header_string_len)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:416
(origin_string_len) == (0)
node::http2::Origins::Origins(v8::Isolate *, Local<v8::Context>, Local<v8::String>, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:435
(origin_contents + origin_string_len) <= (*buf_ + buf_.length())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:442
(origin_string->WriteOneByte( isolate, reinterpret_cast<uint8_t*>(origin_contents), 0, origin_string_len, String::NO_NULL_TERMINATION)) == (origin_string_len)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:638
(fn(&session_, callbacks, this, *opts, *allocator_info)) == (0)
node::http2::Http2Session::Http2Session(node::Environment *, Local<v8::Object>, node::http2::nghttp2_session_type)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:645
(flags_ & SESSION_STATE_HAS_SCOPE) == (0)
virtual node::http2::Http2Session::~Http2Session()
freeing nghttp2 session
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:650
(current_nghttp2_memory_) == (0)
Http2Session 
closing session
terminating session with code %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:743
(nghttp2_session_terminate_session(session_, code)) == (0)
void node::http2::Http2Session::Close(uint32_t, bool)
using frame size padding: %d
using max frame size padding: %d
using callback to determine padding
using padding size %d
receiving %d bytes [wants data? %d]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:873
(ret) != (NGHTTP2_ERR_NOMEM)
ssize_t node::http2::Http2Session::Write(const uv_buf_t *, size_t)
beginning headers for stream %d
complete frame received: type: %d
invalid frame received, code: %d
frame type %d was not sent, code: %d
stream %d closed with code: %d
buffering data chunk for stream %d, size: %d, flags: %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1137
(nghttp2_session_consume_connection(handle, len)) == (0)
static int node::http2::Http2Session::OnDataChunkReceived(nghttp2_session *, uint8_t, int32_t, const uint8_t *, size_t, void *)
Error '%.*s'
Remote peer returned unexpected data while we expected SETTINGS frame.  Perhaps, peer does not support HTTP/2 properly.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1251
!session->stream_buf_ab_.IsEmpty()
virtual void node::http2::Http2StreamListener::OnStreamRead(ssize_t, const uv_buf_t &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1259
(offset) <= (session->stream_buf_.len)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1260
(offset + buf.len) <= (session->stream_buf_.len)
handle headers frame for stream %d
handle priority frame for stream %d
handling data frame for stream %d
handling goaway frame
handling altsvc frame
handling origin frame
write finished with status %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1519
(flags_ & SESSION_STATE_WRITE_SCHEDULED) == (0)
void node::http2::Http2Session::MaybeScheduleWrite()
scheduling write
wants read? %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1554
(flags_ & SESSION_STATE_SENDING) != (0)
void node::http2::Http2Session::ClearOutgoing(int)
sending pending data
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1630
(outgoing_buffers_.size()) == (0)
uint8_t node::http2::Http2Session::SendPendingData()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1631
(outgoing_storage_.size()) == (0)
nghttp2 has %d bytes to send
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1640
(src_length) != (NGHTTP2_ERR_NOMEM)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1708
(padding_byte) == (frame->data.padlen - 1)
static int node::http2::Http2Session::OnSendData(nghttp2_session *, nghttp2_frame *, const uint8_t *, size_t, nghttp2_data_source *, void *)
nghttp2 has %d bytes to send directly
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1716
!stream->queue_.empty()
submitting request
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1758
(*ret) != (NGHTTP2_ERR_NOMEM)
node::http2::Http2Stream *node::http2::Http2Session::SubmitRequest(nghttp2_priority_spec *, nghttp2_nv *, size_t, int32_t *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1773
(stream_) != nullptr
virtual void node::http2::Http2Session::OnStreamRead(ssize_t, const uv_buf_t &)
receiving %d bytes
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1775
stream_buf_ab_.IsEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1801
(stream_buf_.base) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1802
(stream_buf_.len) == (0)
fatal error receiving data: %d
i/o stream consumed
tearing down stream
HttpStream 
starting headers, category: %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1921
!this->IsDestroyed()
void node::http2::Http2Stream::StartHeaders(nghttp2_headers_category)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1933
void node::http2::Http2Stream::Close(int32_t)
closed with code %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1947
(nghttp2_session_resume_data(**session_, id_)) != (NGHTTP2_ERR_NOMEM)
virtual int node::http2::Http2Stream::DoShutdown(node::ShutdownWrap *)
writable side shutdown
destroying stream
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:1997
int node::http2::Http2Stream::SubmitResponse(nghttp2_nv *, size_t, int)
submitting response
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2008
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2015
int node::http2::Http2Stream::SubmitInfo(nghttp2_nv *, size_t)
sending %d informational headers
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2022
let javascript know we are ready for trailers
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2028
void node::http2::Http2Stream::OnTrailers()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2039
int node::http2::Http2Stream::SubmitTrailers(nghttp2_nv *, size_t)
sending %d trailers
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2052
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2059
int node::http2::Http2Stream::SubmitPriority(nghttp2_priority_spec *, bool)
sending priority spec
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2068
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2075
void node::http2::Http2Stream::SubmitRstStream(const uint32_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2094
(nghttp2_submit_rst_stream(**session_, NGHTTP2_FLAG_NONE, id_, code_)) == (0)
void node::http2::Http2Stream::FlushRstStream()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2103
node::http2::Http2Stream *node::http2::Http2Stream::SubmitPushPromise(nghttp2_nv *, size_t, int32_t *, int)
sending push promise
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2108
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2120
virtual int node::http2::Http2Stream::ReadStart()
reading starting
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2138
virtual int node::http2::Http2Stream::ReadStop()
reading stopped
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2160
virtual int node::http2::Http2Stream::DoWrite(node::WriteWrap *, uv_buf_t *, size_t, uv_stream_t *)
queuing %d buffers to send
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2176
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2188
bool node::http2::Http2Stream::AddHeader(nghttp2_rcbuf *, nghttp2_rcbuf *, uint8_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2213
!stream->IsDestroyed()
node::http2::Http2Stream::Provider::Provider(node::http2::Http2Stream *, int)
reading outbound data for stream %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2251
(id) == (stream->id())
static ssize_t node::http2::Http2Stream::Provider::Stream::OnRead(nghttp2_session *, int32_t, uint8_t *, size_t, uint32_t *, nghttp2_data_source *, void *)
stream %d has pending outbound data
sending %d bytes for data frame on stream %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2279
stream->queue_.empty()
deferring stream %d
no more data for stream %d
failed to set next stream id to %d
set next stream id to %d
refreshing state
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2415
static void node::http2::Http2Session::New(const FunctionCallbackInfo<v8::Value> &)
session created
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2428
static void node::http2::Http2Session::Consume(const FunctionCallbackInfo<v8::Value> &)
destroying session
request submitted
could not submit request: %s
request submitted, new stream id %d
submitting goaway
sending rst_stream with code %d
response submitted
%d informational headers sent
%d trailing headers sent
data flushed to js
creating push promise
failed to create push stream: %d
push stream %d created
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2655
(stream->SubmitPriority(*priority, silent)) == (0)
static void node::http2::Http2Stream::Priority(const FunctionCallbackInfo<v8::Value> &)
priority submitted
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2704
(nghttp2_submit_altsvc(session_, NGHTTP2_FLAG_NONE, id, origin, origin_len, value, value_len)) == (0)
void node::http2::Http2Session::AltSvc(int32_t, uint8_t *, size_t, uint8_t *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2709
(nghttp2_submit_origin(session_, NGHTTP2_FLAG_NONE, ov, count)) == (0)
void node::http2::Http2Session::Origin(nghttp2_origin_entry *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2727
(origin_len + value_len) <= (16382)
static void node::http2::Http2Session::AltSvc(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2730
(origin_len != 0 && id == 0) || (origin_len == 0 && id != 0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2769
(payload.length()) == (8)
static void node::http2::Http2Session::Ping(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2870
(session_) != nullptr
void node::http2::Http2Session::Http2Ping::Send(const uint8_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2877
(nghttp2_submit_ping(**session_, NGHTTP2_FLAG_NONE, payload)) == (0)
req_wrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2921
(args.Length()) == (12)
void node::http2::SetCallbackFunctions(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2927
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2928
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2929
args[2]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2930
args[3]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2931
args[4]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2932
args[5]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2933
args[6]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2934
args[7]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2935
args[8]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2936
args[9]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2937
args[10]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:2938
args[11]->IsFunction()
paddingBuffer
sessionState
streamState
settingsBuffer
optionsBuffer
streamStats
sessionStats
PADDING_BUF_FRAME_LENGTH
PADDING_BUF_MAX_PAYLOAD_LENGTH
PADDING_BUF_RETURN_VALUE
nghttp2ErrorString
Http2Session
Http2Ping
Http2Setting
Http2Stream
flushData
pushPromise
info
trailers
respond
rstStream
refreshState
origin
altsvc
ping
goaway
settings
request
setNextStreamID
updateChunksSent
localSettings
remoteSettings
NGHTTP2_SESSION_SERVER
NGHTTP2_SESSION_CLIENT
NGHTTP2_STREAM_STATE_IDLE
NGHTTP2_STREAM_STATE_OPEN
NGHTTP2_STREAM_STATE_RESERVED_LOCAL
NGHTTP2_STREAM_STATE_RESERVED_REMOTE
NGHTTP2_STREAM_STATE_HALF_CLOSED_LOCAL
NGHTTP2_STREAM_STATE_HALF_CLOSED_REMOTE
NGHTTP2_STREAM_STATE_CLOSED
NGHTTP2_NO_ERROR
NGHTTP2_PROTOCOL_ERROR
NGHTTP2_INTERNAL_ERROR
NGHTTP2_FLOW_CONTROL_ERROR
NGHTTP2_SETTINGS_TIMEOUT
NGHTTP2_STREAM_CLOSED
NGHTTP2_FRAME_SIZE_ERROR
NGHTTP2_REFUSED_STREAM
NGHTTP2_CANCEL
NGHTTP2_COMPRESSION_ERROR
NGHTTP2_CONNECT_ERROR
NGHTTP2_ENHANCE_YOUR_CALM
NGHTTP2_INADEQUATE_SECURITY
NGHTTP2_HTTP_1_1_REQUIRED
NGHTTP2_HCAT_REQUEST
NGHTTP2_HCAT_RESPONSE
NGHTTP2_HCAT_PUSH_RESPONSE
NGHTTP2_HCAT_HEADERS
NGHTTP2_NV_FLAG_NONE
NGHTTP2_NV_FLAG_NO_INDEX
NGHTTP2_ERR_DEFERRED
NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE
NGHTTP2_ERR_INVALID_ARGUMENT
NGHTTP2_ERR_STREAM_CLOSED
NGHTTP2_ERR_FRAME_SIZE_ERROR
STREAM_OPTION_EMPTY_PAYLOAD
STREAM_OPTION_GET_TRAILERS
NGHTTP2_FLAG_NONE
NGHTTP2_FLAG_END_STREAM
NGHTTP2_FLAG_END_HEADERS
NGHTTP2_FLAG_ACK
NGHTTP2_FLAG_PADDED
NGHTTP2_FLAG_PRIORITY
DEFAULT_SETTINGS_HEADER_TABLE_SIZE
DEFAULT_SETTINGS_ENABLE_PUSH
DEFAULT_SETTINGS_INITIAL_WINDOW_SIZE
DEFAULT_SETTINGS_MAX_FRAME_SIZE
MAX_MAX_FRAME_SIZE
MIN_MAX_FRAME_SIZE
MAX_INITIAL_WINDOW_SIZE
NGHTTP2_DEFAULT_WEIGHT
NGHTTP2_SETTINGS_HEADER_TABLE_SIZE
NGHTTP2_SETTINGS_ENABLE_PUSH
NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS
NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE
NGHTTP2_SETTINGS_MAX_FRAME_SIZE
NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE
NGHTTP2_SETTINGS_ENABLE_CONNECT_PROTOCOL
PADDING_STRATEGY_NONE
PADDING_STRATEGY_ALIGNED
PADDING_STRATEGY_MAX
PADDING_STRATEGY_CALLBACK
HTTP2_HEADER_STATUS
:status
HTTP2_HEADER_METHOD
:method
HTTP2_HEADER_AUTHORITY
:authority
HTTP2_HEADER_SCHEME
:scheme
HTTP2_HEADER_PATH
:path
HTTP2_HEADER_PROTOCOL
:protocol
HTTP2_HEADER_ACCEPT_CHARSET
accept-charset
HTTP2_HEADER_ACCEPT_ENCODING
accept-encoding
HTTP2_HEADER_ACCEPT_LANGUAGE
accept-language
HTTP2_HEADER_ACCEPT_RANGES
accept-ranges
HTTP2_HEADER_ACCEPT
accept
HTTP2_HEADER_ACCESS_CONTROL_ALLOW_CREDENTIALS
access-control-allow-credentials
HTTP2_HEADER_ACCESS_CONTROL_ALLOW_HEADERS
access-control-allow-headers
HTTP2_HEADER_ACCESS_CONTROL_ALLOW_METHODS
access-control-allow-methods
HTTP2_HEADER_ACCESS_CONTROL_ALLOW_ORIGIN
access-control-allow-origin
HTTP2_HEADER_ACCESS_CONTROL_EXPOSE_HEADERS
access-control-expose-headers
HTTP2_HEADER_ACCESS_CONTROL_MAX_AGE
access-control-max-age
HTTP2_HEADER_ACCESS_CONTROL_REQUEST_HEADERS
access-control-request-headers
HTTP2_HEADER_ACCESS_CONTROL_REQUEST_METHOD
access-control-request-method
HTTP2_HEADER_AGE
HTTP2_HEADER_ALLOW
allow
HTTP2_HEADER_AUTHORIZATION
authorization
HTTP2_HEADER_CACHE_CONTROL
cache-control
HTTP2_HEADER_CONNECTION
connection
HTTP2_HEADER_CONTENT_DISPOSITION
content-disposition
HTTP2_HEADER_CONTENT_ENCODING
content-encoding
HTTP2_HEADER_CONTENT_LANGUAGE
content-language
HTTP2_HEADER_CONTENT_LENGTH
content-length
HTTP2_HEADER_CONTENT_LOCATION
content-location
HTTP2_HEADER_CONTENT_MD5
content-md5
HTTP2_HEADER_CONTENT_RANGE
content-range
HTTP2_HEADER_CONTENT_TYPE
content-type
HTTP2_HEADER_COOKIE
cookie
HTTP2_HEADER_DATE
date
HTTP2_HEADER_DNT
HTTP2_HEADER_ETAG
etag
HTTP2_HEADER_EXPECT
expect
HTTP2_HEADER_EXPIRES
expires
HTTP2_HEADER_FORWARDED
forwarded
HTTP2_HEADER_FROM
from
HTTP2_HEADER_HOST
HTTP2_HEADER_IF_MATCH
if-match
HTTP2_HEADER_IF_MODIFIED_SINCE
if-modified-since
HTTP2_HEADER_IF_NONE_MATCH
if-none-match
HTTP2_HEADER_IF_RANGE
if-range
HTTP2_HEADER_IF_UNMODIFIED_SINCE
if-unmodified-since
HTTP2_HEADER_LAST_MODIFIED
last-modified
HTTP2_HEADER_LINK
HTTP2_HEADER_LOCATION
location
HTTP2_HEADER_MAX_FORWARDS
max-forwards
HTTP2_HEADER_PREFER
prefer
HTTP2_HEADER_PROXY_AUTHENTICATE
proxy-authenticate
HTTP2_HEADER_PROXY_AUTHORIZATION
proxy-authorization
HTTP2_HEADER_RANGE
range
HTTP2_HEADER_REFERER
referer
HTTP2_HEADER_REFRESH
HTTP2_HEADER_RETRY_AFTER
retry-after
HTTP2_HEADER_SERVER
server
HTTP2_HEADER_SET_COOKIE
set-cookie
HTTP2_HEADER_STRICT_TRANSPORT_SECURITY
strict-transport-security
HTTP2_HEADER_TRAILER
trailer
HTTP2_HEADER_TRANSFER_ENCODING
transfer-encoding
HTTP2_HEADER_TE
HTTP2_HEADER_TK
HTTP2_HEADER_UPGRADE_INSECURE_REQUESTS
upgrade-insecure-requests
HTTP2_HEADER_UPGRADE
upgrade
HTTP2_HEADER_USER_AGENT
user-agent
HTTP2_HEADER_VARY
vary
HTTP2_HEADER_VIA
HTTP2_HEADER_WARNING
warning
HTTP2_HEADER_WWW_AUTHENTICATE
www-authenticate
HTTP2_HEADER_X_CONTENT_TYPE_OPTIONS
x-content-type-options
HTTP2_HEADER_X_FRAME_OPTIONS
x-frame-options
HTTP2_HEADER_HTTP2_SETTINGS
http2-settings
HTTP2_HEADER_KEEP_ALIVE
keep-alive
HTTP2_HEADER_PROXY_CONNECTION
proxy-connection
HTTP2_METHOD_ACL
HTTP2_METHOD_BASELINE_CONTROL
BASELINE-CONTROL
HTTP2_METHOD_BIND
HTTP2_METHOD_CHECKIN
CHECKIN
HTTP2_METHOD_CHECKOUT
HTTP2_METHOD_CONNECT
HTTP2_METHOD_COPY
HTTP2_METHOD_DELETE
HTTP2_METHOD_GET
HTTP2_METHOD_HEAD
HTTP2_METHOD_LABEL
LABEL
HTTP2_METHOD_LINK
HTTP2_METHOD_LOCK
HTTP2_METHOD_MERGE
HTTP2_METHOD_MKACTIVITY
HTTP2_METHOD_MKCALENDAR
HTTP2_METHOD_MKCOL
HTTP2_METHOD_MKREDIRECTREF
MKREDIRECTREF
HTTP2_METHOD_MKWORKSPACE
MKWORKSPACE
HTTP2_METHOD_MOVE
HTTP2_METHOD_OPTIONS
HTTP2_METHOD_ORDERPATCH
ORDERPATCH
HTTP2_METHOD_PATCH
HTTP2_METHOD_POST
HTTP2_METHOD_PRI
HTTP2_METHOD_PROPFIND
HTTP2_METHOD_PROPPATCH
HTTP2_METHOD_PUT
HTTP2_METHOD_REBIND
HTTP2_METHOD_REPORT
HTTP2_METHOD_SEARCH
HTTP2_METHOD_TRACE
HTTP2_METHOD_UNBIND
HTTP2_METHOD_UNCHECKOUT
UNCHECKOUT
HTTP2_METHOD_UNLINK
HTTP2_METHOD_UNLOCK
HTTP2_METHOD_UPDATE
UPDATE
HTTP2_METHOD_UPDATEREDIRECTREF
UPDATEREDIRECTREF
HTTP2_METHOD_VERSION_CONTROL
VERSION-CONTROL
HTTP_STATUS_CONTINUE
HTTP_STATUS_SWITCHING_PROTOCOLS
HTTP_STATUS_PROCESSING
HTTP_STATUS_EARLY_HINTS
HTTP_STATUS_OK
HTTP_STATUS_CREATED
HTTP_STATUS_ACCEPTED
HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION
HTTP_STATUS_NO_CONTENT
HTTP_STATUS_RESET_CONTENT
HTTP_STATUS_PARTIAL_CONTENT
HTTP_STATUS_MULTI_STATUS
HTTP_STATUS_ALREADY_REPORTED
HTTP_STATUS_IM_USED
HTTP_STATUS_MULTIPLE_CHOICES
HTTP_STATUS_MOVED_PERMANENTLY
HTTP_STATUS_FOUND
HTTP_STATUS_SEE_OTHER
HTTP_STATUS_NOT_MODIFIED
HTTP_STATUS_USE_PROXY
HTTP_STATUS_TEMPORARY_REDIRECT
HTTP_STATUS_PERMANENT_REDIRECT
HTTP_STATUS_BAD_REQUEST
HTTP_STATUS_UNAUTHORIZED
HTTP_STATUS_PAYMENT_REQUIRED
HTTP_STATUS_FORBIDDEN
HTTP_STATUS_NOT_FOUND
HTTP_STATUS_METHOD_NOT_ALLOWED
HTTP_STATUS_NOT_ACCEPTABLE
HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED
HTTP_STATUS_REQUEST_TIMEOUT
HTTP_STATUS_CONFLICT
HTTP_STATUS_GONE
HTTP_STATUS_LENGTH_REQUIRED
HTTP_STATUS_PRECONDITION_FAILED
HTTP_STATUS_PAYLOAD_TOO_LARGE
HTTP_STATUS_URI_TOO_LONG
HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE
HTTP_STATUS_RANGE_NOT_SATISFIABLE
HTTP_STATUS_EXPECTATION_FAILED
HTTP_STATUS_TEAPOT
HTTP_STATUS_MISDIRECTED_REQUEST
HTTP_STATUS_UNPROCESSABLE_ENTITY
HTTP_STATUS_LOCKED
HTTP_STATUS_FAILED_DEPENDENCY
HTTP_STATUS_UNORDERED_COLLECTION
HTTP_STATUS_UPGRADE_REQUIRED
HTTP_STATUS_PRECONDITION_REQUIRED
HTTP_STATUS_TOO_MANY_REQUESTS
HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE
HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS
HTTP_STATUS_INTERNAL_SERVER_ERROR
HTTP_STATUS_NOT_IMPLEMENTED
HTTP_STATUS_BAD_GATEWAY
HTTP_STATUS_SERVICE_UNAVAILABLE
HTTP_STATUS_GATEWAY_TIMEOUT
HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED
HTTP_STATUS_VARIANT_ALSO_NEGOTIATES
HTTP_STATUS_INSUFFICIENT_STORAGE
HTTP_STATUS_LOOP_DETECTED
HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED
HTTP_STATUS_NOT_EXTENDED
HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED
refreshDefaultSettings
packSettings
setCallbackFunctions
nameForErrorCode
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:464
(nghttp2_session_callbacks_new(&callbacks)) == (0)
node::http2::Http2Session::Callbacks::Callbacks(bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:521
(result) == nullptr
static void node::http2::Http2Session::MemoryAllocatorInfo::H2Free(void *, void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:546
(session->current_nghttp2_memory_) >= (previous_size)
static void *node::http2::Http2Session::MemoryAllocatorInfo::H2Realloc(void *, size_t, void *)
client
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:43
node::http2::Http2Stream *node::http2::(anonymous namespace)::GetStream(node::http2::Http2Session *, int32_t, nghttp2_data_source *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:44
src/env-inl.h:984
v8::Local<v8::ArrayBuffer> node::AllocatedBuffer::ToArrayBuffer()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc:786
(++statistics_.stream_count) >= (0)
void node::http2::Http2Session::AddStream(node::http2::Http2Stream *)
src/env-inl.h:605
!http2_state_
void node::Environment::set_http2_state(std::unique_ptr<http2::Http2State>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_http2.cc
nghttp2_stream_write
streams
outstanding_pings
outstanding_settings
outgoing_buffers
outgoing_storage
pending_rst_streams
current_headers
queue
nghttp2_header
void node::MaybeStackBuffer<char, 3000>::AllocateSufficientStorage(size_t) [T = char, kStackStorageSize = 3000]
void node::MaybeStackBuffer<char, 512>::AllocateSufficientStorage(size_t) [T = char, kStackStorageSize = 512]
mark
measure
void node::MaybeStackBuffer<uv_buf_t, 32>::AllocateSufficientStorage(size_t) [T = uv_buf_t, kStackStorageSize = 32]
T &node::MaybeStackBuffer<uv_buf_t, 32>::operator[](size_t) [T = uv_buf_t, kStackStorageSize = 32]
void node::MaybeStackBuffer<unsigned char, 1024>::AllocateSufficientStorage(size_t) [T = unsigned char, kStackStorageSize = 1024]
T *node::Realloc(T *, size_t) [T = unsigned char]
settings refreshed for session
session
Http2Settings
toUnicode
toASCII
getStringWidth
icuErrName
transcode
getConverter
decode
hasConverter
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:650
void node::i18n::ToUnicode(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:651
Cannot convert name to Unicode
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:670
void node::i18n::ToASCII(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:671
Cannot convert name to ASCII
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:504
void node::i18n::(anonymous namespace)::ICUErrorName(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:124
U_SUCCESS(status)
node::i18n::(anonymous namespace)::Converter::Converter(const char *, const char *)
T &node::MaybeStackBuffer<char, 1024>::operator[](size_t) [T = char, kStackStorageSize = 1024]
void node::MaybeStackBuffer<char16_t, 1024>::AllocateSufficientStorage(size_t) [T = char16_t, kStackStorageSize = 1024]
T *node::Realloc(T *, size_t) [T = char16_t]
void node::MaybeStackBuffer<char16_t, 1024>::SetLength(size_t) [T = char16_t, kStackStorageSize = 1024]
us-ascii
iso8859-1
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:178
(args.Length()) >= (2)
static void node::i18n::(anonymous namespace)::ConverterObject::Create(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:132
(conv) != nullptr
node::i18n::(anonymous namespace)::Converter::Converter(UConverter *, const char *)
ConverterObject
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:204
(args.Length()) >= (3)
static void node::i18n::(anonymous namespace)::ConverterObject::Decode(const FunctionCallbackInfo<v8::Value> &)
T &node::MaybeStackBuffer<char16_t, 1024>::operator[](size_t) [T = char16_t, kStackStorageSize = 1024]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc:160
static void node::i18n::(anonymous namespace)::ConverterObject::Has(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_i18n.cc
void node::MaybeStackBuffer<char, 1024>::SetLength(size_t) [T = char, kStackStorageSize = 1024]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_main_instance.cc:59
(isolate_) != nullptr
node::NodeMainInstance::NodeMainInstance(Isolate::CreateParams *, uv_loop_t *, node::MultiIsolatePlatform *, const std::vector<std::string> &, const std::vector<std::string> &, const std::vector<size_t> *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_main_instance.cc:68
!(deserialize_mode_) || (params->external_references != nullptr)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_main_instance.cc:83
!owns_isolate_
void node::NodeMainInstance::Dispose()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_main_instance.cc:103
int node::NodeMainInstance::Run()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_main_instance.cc:187
!context.IsEmpty()
std::unique_ptr<Environment> node::NodeMainInstance::CreateMainEnvironment(int *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:100
!IsCloseMessage()
MaybeLocal<v8::Value> node::worker::Message::Deserialize(node::Environment *, Local<v8::Context>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:313
main_message_buf_.is_empty()
Maybe<bool> node::worker::Message::Serialize(node::Environment *, Local<v8::Context>, Local<v8::Value>, Local<v8::Value>, Local<v8::Object>)
Transfer list contains duplicate ArrayBuffer
Transfer list contains source port
MessagePort in transfer list is already detached
Transfer list contains duplicate MessagePort
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:400
env->isolate_data()->uses_node_allocator()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:412
(data.first) != nullptr
array_buffer_contents
shared_array_buffers
message_ports
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:428
(owner_) == nullptr
virtual node::worker::MessagePortData::~MessagePortData()
incoming_messages
Adding message to incoming queue
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:449
(a->sibling_) == nullptr
static void node::worker::MessagePortData::Entangle(node::worker::MessagePortData *, node::worker::MessagePortData *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:450
(b->sibling_) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:498
(uv_async_init(env->event_loop(), &async_, onmessage)) == (0)
node::worker::MessagePort::MessagePort(node::Environment *, Local<v8::Context>, Local<v8::Object>)
Created message port
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:519
(uv_async_send(&async_)) == (0)
void node::worker::MessagePort::TriggerAsync()
Closing message port, data set = %d
(port) != nullptr
MessagePort has message
Running MessagePort::OnMessage()
MessagePort drains queue because !can_call_into_js()
MessagePort::OnClose()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:658
data_
std::unique_ptr<MessagePortData> node::worker::MessagePort::Detach()
The target port was posted to itself, and the communication channel was lost
Not enough arguments to MessagePort.postMessage
Optional transferList argument must be an array
Start receiving messages
Stop receiving messages
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:763
static void node::worker::MessagePort::Stop(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:778
static void node::worker::MessagePort::ReceiveMessage(const FunctionCallbackInfo<v8::Value> &)
First argument needs to be a MessagePort instance
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:801
static void node::worker::MessagePort::MoveToContext(const FunctionCallbackInfo<v8::Value> &)
Invalid context argument
postMessage
MessageEvent
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:71
(id) <= (message_ports_.size())
virtual MaybeLocal<v8::Object> node::worker::(anonymous namespace)::DeserializerDelegate::ReadHostObject(v8::Isolate *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:83
(transfer_id) <= (wasm_modules_.size())
virtual MaybeLocal<v8::WasmModuleObject> node::worker::(anonymous namespace)::DeserializerDelegate::GetWasmModuleFromId(v8::Isolate *, uint32_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:77
(clone_id) <= (shared_array_buffers_.size())
virtual MaybeLocal<v8::SharedArrayBuffer> node::worker::(anonymous namespace)::DeserializerDelegate::GetSharedArrayBufferFromId(v8::Isolate *, uint32_t)
MessagePort was found in message but not listed in transferList
ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST
DataCloneError
DOMException
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc:200
domexception_ctor_val->IsFunction()
MaybeLocal<v8::Function> node::worker::(anonymous namespace)::GetDOMException(Local<v8::Context>)
Found invalid object in transferList
ERR_INVALID_TRANSFER_OBJECT
Constructor cannot be called
ERR_CONSTRUCT_CALL_INVALID
ERR_MISSING_ARGS
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_messaging.cc
messaging
MessageChannel
stopMessagePort
drainMessagePort
receiveMessageOnPort
moveMessagePortToContext
Cannot call constructor without `new`
ERR_CONSTRUCT_CALL_REQUIRED
Message
MessagePortData
MallocedBuffer
OpenSSL 1.1.1c  28 May 2019
%.*s
12.8.0
1.2.11
1.15.0
1.39.1
64.2
12.1
https://nodejs.org/download/release/v12.8.0/node-v12.8.0.tar.gz
https://nodejs.org/download/release/v12.8.0/node-v12.8.0-headers.tar.gz
arm64
darwin
internal/bootstrap/
internal/per_context/
internal/deps/
internal/main/
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_native_module.cc:188
(source_it) != (source_.end())
MaybeLocal<v8::Function> node::native_module::NativeModuleLoader::LookupAndCompile(Local<v8::Context>, const char *, std::vector<Local<String> > *, NativeModuleLoader::Result *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_native_module.cc:246
(new_cached_data) != nullptr
src/node_union_bytes.h:84
(one_bytes_) != nullptr
v8::Local<v8::String> node::UnionBytes::ToStringChecked(v8::Isolate *) const
src/node_union_bytes.h:89
(two_bytes_) != nullptr
cannotBeRequired
canBeRequired
compiledWithCache
compiledWithoutCache
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_native_module_env.cc:123
static void node::native_module::NativeModuleEnv::CompileFunction(const FunctionCallbackInfo<v8::Value> &)
moduleIds
moduleCategories
getCacheUsage
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_native_module_env.cc
native_module
[DEP0062]: `node --debug` and `node --debug-brk` are invalid. Please use `node --inspect` and `node --inspect-brk` instead.
stderr
--inspect-publish-uid destination can be stderr or http
either --use-openssl-ca or --use-bundled-ca can be used, not both
--report-directory option is valid only when --experimental-report is set
--report-filename option is valid only when --experimental-report is set
--report-signal option is valid only when --experimental-report is set
--report-on-fatalerror option is valid only when --experimental-report is set
--report-on-signal option is valid only when --experimental-report is set
--report-uncaught-exception option is valid only when --experimental-report is set
--loader requires --experimental-modules be enabled
--policy-integrity requires --experimental-policy be enabled
--policy-integrity cannot be empty
--input-type requires --experimental-modules to be enabled
--input-type must be "module" or "commonjs"
--experimental-wasm-modules requires --experimental-modules be enabled
--es-module-specifier-resolution requires --experimental-modules be enabled
explicit
invalid value for --es-module-specifier-resolution
either --check or --eval can be used, not both
legacy
invalid value for --http-parser
strict
warn
none
invalid value for --unhandled-rejections
either --tls-min-v1.3 or --tls-max-v1.2 can be used, not both
--cpu-prof-name must be used with --cpu-prof
--cpu-prof-dir must be used with --cpu-prof
--cpu-prof-interval must be used with --cpu-prof
--heap-prof-name must be used with --heap-prof
--heap-prof-dir must be used with --heap-prof
--heap-prof-interval must be used with --heap-prof
--inspect-port
set host:port for inspector
--debug-port
--inspect
activate inspector on host:port (default: 127.0.0.1:9229)
--inspect=
--debug
--debug=
--debug-brk
--debug-brk=
--inspect-brk
activate inspector on host:port and break at start of user script
--inspect-brk=
--inspect-brk-node
--inspect-brk-node=
--inspect-publish-uid
comma separated list of destinations for inspector uid(default: stderr,http)
--experimental-exports
experimental support for exports in package.json
--experimental-modules
experimental ES Module support and caching modules
--experimental-wasm-modules
experimental ES Module support for webassembly modules
--experimental-policy
use the specified file as a security policy
[has_policy_integrity_string]
--policy-integrity
ensure the security policy contents match the specified integrity
--experimental-repl-await
experimental await keyword support in REPL
--experimental-vm-modules
experimental ES Module support in vm module
--experimental-worker
--experimental-report
enable report generation
--expose-internals
--frozen-intrinsics
experimental frozen intrinsics support
--heapsnapshot-signal
Generate heap snapshot on specified signal
--http-parser
Select which HTTP parser to use; either 'legacy' or 'llhttp' (default: llhttp).
--http-server-default-timeout
Default http server socket timeout in ms (default: 120000)
--input-type
set module type for string input
--loader
(with --experimental-modules) use the specified file as a custom loader
--es-module-specifier-resolution
Select extension resolution algorithm for es modules; either 'explicit' (default) or 'node'
--no-deprecation
silence deprecation warnings
--no-force-async-hooks-checks
disable checks for async_hooks
--no-warnings
silence all process warnings
--pending-deprecation
emit pending deprecation warnings
--preserve-symlinks
preserve symbolic links when resolving
--preserve-symlinks-main
preserve symbolic links when resolving the main module
--prof-process
process V8 profiler output generated using --prof
--cpu-prof
Start the V8 CPU profiler on start up, and write the CPU profile to disk before exit. If --cpu-prof-dir is not specified, write the profile to the current working directory.
--cpu-prof-name
specified file name of the V8 CPU profile generated with --cpu-prof
--cpu-prof-interval
specified sampling interval in microseconds for the V8 CPU profile generated with --cpu-prof. (default: 1000)
--cpu-prof-dir
Directory where the V8 profiles generated by --cpu-prof will be placed. Does not affect --prof.
--heap-prof
Start the V8 heap profiler on start up, and write the heap profile to disk before exit. If --heap-prof-dir is not specified, write the profile to the current working directory.
--heap-prof-name
specified file name of the V8 CPU profile generated with --heap-prof
--heap-prof-dir
Directory where the V8 heap profiles generated by --heap-prof will be placed.
--heap-prof-interval
specified sampling interval in bytes for the V8 heap profile generated with --heap-prof. (default: 512 * 1024)
--redirect-warnings
write warnings to file instead of stderr
--throw-deprecation
throw an exception on deprecations
--trace-deprecation
show stack traces on deprecations
--trace-sync-io
show stack trace when use of sync IO is detected after the first tick
--trace-tls
prints TLS packet trace information to stderr
--trace-warnings
show stack traces on process warnings
--unhandled-rejections
define unhandled rejections behavior. Options are 'strict' (raise an error), 'warn' (enforce warnings) or 'none' (silence warnings)
--check
syntax check script without executing
[has_eval_string]
--eval
evaluate script
--print
evaluate script and print result
--print <arg>
--require
module to preload (option can be repeated)
--interactive
always enter the REPL even if stdin does not appear to be a terminal
--napi-modules
--tls-min-v1.0
set default TLS minimum to TLSv1.0 (default: TLSv1.2)
--tls-min-v1.1
set default TLS minimum to TLSv1.1 (default: TLSv1.2)
--tls-min-v1.2
set default TLS minimum to TLSv1.2 (default: TLSv1.2)
--tls-min-v1.3
set default TLS minimum to TLSv1.3 (default: TLSv1.2)
--tls-max-v1.2
set default TLS maximum to TLSv1.2 (default: TLSv1.3)
--tls-max-v1.3
set default TLS maximum to TLSv1.3 (default: TLSv1.3)
--track-heap-objects
track heap object allocations for heap snapshots
--no-node-snapshot
aborting instead of exiting causes a core file to be generated for analysis
--max-old-space-size
--perf-basic-prof
--perf-basic-prof-only-functions
--perf-prof
--perf-prof-unwinding-info
--stack-trace-limit
--report-uncaught-exception
generate diagnostic report on uncaught exceptions
--report-on-signal
generate diagnostic report upon receiving signals
--report-on-fatalerror
generate diagnostic report on fatal (internal) errors
--report-signal
causes diagnostic report to be produced on provided signal, unsupported in Windows. (default: SIGUSR2)
--report-filename
define custom report file name. (default: YYYYMMDD.HHMMSS.PID.SEQUENCE#.txt)
--report-directory
define custom report pathname. (default: current working directory of Node.js process)
--title
the process title to use on startup
--trace-event-categories
comma separated list of trace event categories to record
--trace-event-file-pattern
Template string specifying the filepath for the trace-events data, it supports ${rotation} and ${pid}.
--trace-events-enabled
v8,node,node.async_hooks
--max-http-header-size
set the maximum size of HTTP headers (default: 8KB)
--v8-pool-size
set V8's thread pool size
--zero-fill-buffers
automatically zero-fill all newly allocated Buffer and SlowBuffer instances
--debug-arraybuffer-allocations
--security-reverts
--completion-bash
print source-able bash completion script
print node command line options
--version
print Node.js version
--v8-options
print V8 command line options
--icu-data-dir
set ICU data load path to dir (overrides NODE_ICU_DATA)
--openssl-config
load OpenSSL configuration from the specified file (overrides OPENSSL_CONF)
--tls-cipher-list
use an alternative default TLS cipher list
--use-openssl-ca
use OpenSSL's default CA store
--use-bundled-ca
use bundled CA store (default)
[ssl_openssl_cert_store]
Should not query options before bootstrapping is done
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_options.cc:855
void node::options_parser::GetOptions(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_options.cc:857
!value.IsEmpty()
getOptions
kAllowedInEnvironment
kDisallowedInEnvironment
envSettings
kNoOp
kV8Option
kBoolean
kInteger
kUInteger
kString
kHostPort
kStringList
types
node_trace.${rotation}.log
stderr,http
127.0.0.1
 must be 0 or in range 1024 to 65535.
src/node_options.h:33
(port_) >= (0)
int node::HostPort::port() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_options.cc
 <arg>
src/node_options-inl.h:438
void node::options_parser::OptionsParser<node::DebugOptions>::Parse(std::vector<std::string> *const, std::vector<std::string> *const, std::vector<std::string> *const, Options *const, node::options_parser::OptionEnvvarSettings, std::vector<std::string> *const) const [Options = node::DebugOptions]
 is not allowed in NODE_OPTIONS
 requires an argument
void node::options_parser::OptionsParser<node::PerIsolateOptions>::Parse(std::vector<std::string> *const, std::vector<std::string> *const, std::vector<std::string> *const, Options *const, node::options_parser::OptionEnvvarSettings, std::vector<std::string> *const) const [Options = node::PerIsolateOptions]
void node::options_parser::OptionsParser<node::PerProcessOptions>::Parse(std::vector<std::string> *const, std::vector<std::string> *const, std::vector<std::string> *const, Options *const, node::options_parser::OptionEnvvarSettings, std::vector<std::string> *const) const [Options = node::PerProcessOptions]
src/node_options-inl.h:148
(it) != (options_.end())
void node::options_parser::OptionsParser<node::DebugOptions>::Implies(const char *, const char *) [Options = node::DebugOptions]
src/node_options-inl.h:149
(it->second.type) == (kBoolean)
void node::options_parser::OptionsParser<node::EnvironmentOptions>::Implies(const char *, const char *) [Options = node::EnvironmentOptions]
void node::options_parser::OptionsParser<node::PerIsolateOptions>::Implies(const char *, const char *) [Options = node::PerIsolateOptions]
void node::options_parser::OptionsParser<node::PerProcessOptions>::Implies(const char *, const char *) [Options = node::PerProcessOptions]
src/node_options-inl.h:159
void node::options_parser::OptionsParser<node::PerProcessOptions>::ImpliesNot(const char *, const char *) [Options = node::PerProcessOptions]
src/node_options-inl.h:160
getHostname
getLoadAvg
getUptime
getTotalMem
getFreeMem
getCPUs
getOSType
getOSRelease
getInterfaceAddresses
getHomeDirectory
getUserInfo
setPriority
getPriority
isBigEndian
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:67
void node::os::GetHostname(const FunctionCallbackInfo<v8::Value> &)
uv_os_gethostname
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:170
args[0]->IsFloat64Array()
void node::os::GetLoadAvg(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:172
(array->Length()) == (3)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:85
void node::os::GetOSType(const FunctionCallbackInfo<v8::Value> &)
uv_os_uname
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:102
void node::os::GetOSRelease(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:195
void node::os::GetInterfaceAddresses(const FunctionCallbackInfo<v8::Value> &)
uv_interface_addresses
%02x:%02x:%02x:%02x:%02x:%02x
<unknown sa family>
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:265
void node::os::GetHomeDirectory(const FunctionCallbackInfo<v8::Value> &)
uv_os_homedir
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:299
void node::os::GetUserInfo(const FunctionCallbackInfo<v8::Value> &)
uv_os_get_passwd
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:327
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:353
(args.Length()) == (3)
void node::os::SetPriority(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:354
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:355
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:362
uv_os_setpriority
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:373
void node::os::GetPriority(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:374
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc:381
uv_os_getpriority
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_os.cc
node,node.bootstrap
node,node.perf,node.perf.usertiming
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:227
void node::performance::SetupPerformanceObservers(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:314
void node::performance::TimerFunctionCall(const FunctionCallbackInfo<v8::Value> &)
node,node.perf,node.perf.timerify
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:360
void node::performance::Timerify(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:361
node,node.perf,node.perf.event_loop
mean
stddev
delay
Event loop delay exceeded 1 hour: %lld nanoseconds
observerCounts
milestones
PerformanceEntry
clearMark
markMilestone
setupObservers
timerify
setupGarbageCollectionTracking
notify
NODE_PERFORMANCE_GC_MAJOR
NODE_PERFORMANCE_GC_MINOR
NODE_PERFORMANCE_GC_INCREMENTAL
NODE_PERFORMANCE_GC_WEAKCB
NODE_PERFORMANCE_ENTRY_TYPE_NODE
NODE_PERFORMANCE_ENTRY_TYPE_MARK
NODE_PERFORMANCE_ENTRY_TYPE_MEASURE
NODE_PERFORMANCE_ENTRY_TYPE_GC
NODE_PERFORMANCE_ENTRY_TYPE_FUNCTION
NODE_PERFORMANCE_ENTRY_TYPE_HTTP2
NODE_PERFORMANCE_ENTRY_TYPE_HTTP
NODE_PERFORMANCE_MILESTONE_ENVIRONMENT
NODE_PERFORMANCE_MILESTONE_NODE_START
NODE_PERFORMANCE_MILESTONE_V8_START
NODE_PERFORMANCE_MILESTONE_LOOP_START
NODE_PERFORMANCE_MILESTONE_LOOP_EXIT
NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE
timeOrigin
timeOriginTimestamp
ELDHistogram
exceeds
percentile
percentiles
disable
reset
environment
nodeStart
v8Start
loopStart
loopExit
bootstrapComplete
src/node_perf.h:35
const char *node::performance::GetPerformanceMilestoneName(enum PerformanceMilestone)
void node::MaybeStackBuffer<v8::Local<v8::Value>, 1024>::AllocateSufficientStorage(size_t) [T = v8::Local<v8::Value>, kStackStorageSize = 1024]
T &node::MaybeStackBuffer<v8::Local<v8::Value>, 1024>::operator[](size_t) [T = v8::Local<v8::Value>, kStackStorageSize = 1024]
src/histogram-inl.h:12
(0) == (hdr_init(lowest, highest, figures, &histogram_))
node::Histogram::Histogram(int64_t, int64_t, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:460
void node::performance::(anonymous namespace)::ELDHistogramNew(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:462
(resolution) > (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:422
void node::performance::(anonymous namespace)::ELDHistogramPercentile(const FunctionCallbackInfo<v8::Value> &)
src/histogram-inl.h:44
(percentile) > (0)
double node::Histogram::Percentile(double)
src/histogram-inl.h:45
(percentile) <= (100)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc:431
args[0]->IsMap()
void node::performance::(anonymous namespace)::ELDHistogramPercentiles(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_perf.cc
performance
histogram
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:216
(0) == (uv_thread_join(threads_[i].get()))
void node::WorkerThreadsTaskRunner::Shutdown()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:228
(0) == (uv_async_init(loop, flush_tasks_, FlushTasks))
node::PerIsolatePlatformData::PerIsolatePlatformData(v8::Isolate *, uv_loop_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:239
virtual void node::PerIsolatePlatformData::PostIdleTask(std::unique_ptr<v8::IdleTask>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:243
(flush_tasks_) != nullptr
virtual void node::PerIsolatePlatformData::PostTask(std::unique_ptr<Task>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:250
virtual void node::PerIsolatePlatformData::PostDelayedTask(std::unique_ptr<Task>, double)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:282
(foreground_delayed_tasks_.Pop()) == nullptr
void node::PerIsolatePlatformData::Shutdown()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:283
(foreground_tasks_.Pop()) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:313
!existing
virtual void node::NodePlatform::RegisterIsolate(v8::Isolate *, uv_loop_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:321
existing
virtual void node::NodePlatform::UnregisterIsolate(v8::Isolate *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:331
it->second
virtual void node::NodePlatform::AddIsolateFinishedCallback(v8::Isolate *, void (*)(void *), void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:370
(it) != (scheduled_delayed_tasks_.end())
void node::PerIsolatePlatformData::DeleteFromScheduledTasks(node::DelayedTask *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:444
std::shared_ptr<PerIsolatePlatformData> node::NodePlatform::ForIsolate(v8::Isolate *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:473
(tracing_controller_) != nullptr
virtual node::tracing::TracingController *node::NodePlatform::GetTracingController()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:63
(0) == (uv_thread_create(t.get(), start_thread, this))
std::unique_ptr<uv_thread_t> node::WorkerThreadsTaskRunner::DelayedTaskScheduler::Start()
WorkerThreadsTaskRunner::DelayedTaskScheduler
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:85
(0) == (uv_loop_init(&loop_))
void node::WorkerThreadsTaskRunner::DelayedTaskScheduler::Run()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:87
(0) == (uv_async_init(&loop_, &flush_tasks_, FlushTasks))
PlatformWorkerThread
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:131
(0) == (uv_timer_init(&scheduler_->loop_, timer.get()))
virtual void node::WorkerThreadsTaskRunner::DelayedTaskScheduler::ScheduleTask::Run()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_platform.cc:133
(0) == (uv_timer_start(timer.get(), RunTask, delay_millis, 0))
src/node_platform.h:149
virtual void node::NodePlatform::CallOnForegroundThread(v8::Isolate *, v8::Task *)
src/node_platform.h:154
virtual void node::NodePlatform::CallDelayedOnForegroundThread(v8::Isolate *, v8::Task *, double)
emit
DeprecationWarning
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:206
args.Length() == 1 && args[0]->IsString() && "must be called with a single string"
void node::RawDebug(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc
process_methods
_debugProcess
_debugEnd
abort
chdir
_startProfilerIdleNotifier
_stopProfilerIdleNotifier
umask
_rawDebug
memoryUsage
cpuUsage
hrtime
hrtimeBigInt
resourceUsage
_getActiveRequests
_getActiveHandles
_kill
reallyExit
uptime
patchProcessObject
Invalid number of arguments.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:321
void node::DebugProcess(const FunctionCallbackInfo<v8::Value> &)
kill
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:68
void node::Chdir(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:70
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:71
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:224
void node::Umask(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:225
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:226
args[0]->IsUndefined() || args[0]->IsUint32()
uv_resident_set_memory
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:192
void node::MemoryUsage(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:194
(array->Length()) == (4)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:101
void node::CPUUsage(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:103
(array->Length()) == (2)
uv_getrusage
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:289
void node::ResourceUsage(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:291
(array->Length()) == (16)
Bad argument.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_methods.cc:114
void node::Cwd(const FunctionCallbackInfo<v8::Value> &)
uv_cwd
sourceUrl
headersUrl
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_object.cc:138
void node::PatchProcessObject(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_object.cc:152
process ->SetAccessor( context, FIXED_ONE_BYTE_STRING(isolate, "title"), ProcessTitleGetter, env->owns_process_state() ? ProcessTitleSetter : nullptr, env->as_callback_data(), DEFAULT, None, SideEffectType::kHasNoSideEffect) .FromJust()
argv
execArgv
ppid
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_object.cc:170
process->SetAccessor(context, FIXED_ONE_BYTE_STRING(isolate, "ppid"), GetParentProcessId).FromJust()
execPath
debugPort
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_process_object.cc:200
process ->SetAccessor(context, FIXED_ONE_BYTE_STRING(isolate, "debugPort"), DebugPortGetter, env->owns_process_state() ? DebugPortSetter : nullptr, env->as_callback_data()) .FromJust()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_serdes.cc
serdes
writeHeader
writeValue
releaseBuffer
transferArrayBuffer
writeUint32
writeUint64
writeDouble
writeRawBytes
_setTreatArrayBufferViewsAsHostObjects
Serializer
readHeader
readValue
getWireFormatVersion
readUint32
readUint64
readDouble
_readRawBytes
Deserializer
SerializerContext
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_serdes.cc:110
get_data_clone_error->IsFunction()
virtual void node::(anonymous namespace)::SerializerContext::ThrowDataCloneError(Local<v8::String>)
arrayBuffer must be an ArrayBuffer
source must be a TypedArray or a DataView
buffer must be a TypedArray or a DataView
DeserializerContext
readHostObject must return an object
arrayBuffer must be an ArrayBuffer or SharedArrayBuffer
ReadUint32() failed
ReadUint64() failed
ReadDouble() failed
ReadRawBytes() failed
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_serdes.cc:437
(position) >= (ctx->data_)
static void node::(anonymous namespace)::DeserializerContext::ReadRawBytes(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_serdes.cc:438
(position + length) <= (ctx->data_ + ctx->length_)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_serdes.cc:441
(ctx->data_ + offset) == (position)
StatWatcher
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_stat_watcher.cc:71
(0) == (uv_fs_poll_init(env->event_loop(), &watcher_))
node::StatWatcher::StatWatcher(node::Environment *, Local<v8::Object>, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_stat_watcher.cc:93
static void node::StatWatcher::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_stat_watcher.cc:100
static void node::StatWatcher::Start(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_stat_watcher.cc:104
!uv_is_active(wrap->GetHandle())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_stat_watcher.cc:107
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_stat_watcher.cc:109
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_symbols.cc
symbols
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_task_queue.cc:51
!callback.IsEmpty()
bool node::task_queue::RunNextTicksNative(node::Environment *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_task_queue.cc:81
void node::task_queue::PromiseRejectCallback(v8::PromiseRejectMessage)
node,node.promises,node.promises.rejections
rejections
unhandled
handledAfter
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_task_queue.cc
task_queue
enqueueMicrotask
setTickCallback
runMicrotasks
tickInfo
kPromiseRejectWithNoHandler
kPromiseHandlerAddedAfterReject
kPromiseResolveAfterResolved
kPromiseRejectAfterResolved
promiseRejectEvents
setPromiseRejectCallback
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_task_queue.cc:37
void node::task_queue::EnqueueMicrotask(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_task_queue.cc:62
void node::task_queue::SetTickCallback(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_task_queue.cc:121
void node::task_queue::SetPromiseRejectCallback(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_trace_events.cc:61
static void node::NodeCategorySet::New(const FunctionCallbackInfo<v8::Value> &)
getEnabledCategories
setTraceCategoryStateUpdateHandler
CategorySet
isTraceCategoryEnabled
NodeCategorySet
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_trace_events.cc:115
void node::SetTraceCategoryStateUpdateHandler(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_trace_events.cc
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_types.cc
isExternal
isDate
isArgumentsObject
isBigIntObject
isBooleanObject
isNumberObject
isStringObject
isSymbolObject
isNativeError
isRegExp
isAsyncFunction
isGeneratorFunction
isGeneratorObject
isPromise
isMap
isSet
isMapIterator
isSetIterator
isWeakMap
isWeakSet
isArrayBuffer
isDataView
isSharedArrayBuffer
isProxy
isWebAssemblyCompiledModule
isModuleNamespaceObject
isAnyArrayBuffer
isBoxedPrimitive
file:
file://
ftp:
gopher:
http:
https:
wss:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:1017
(type_) == (HostType::H_FAILED)
void node::url::(anonymous namespace)::URLHost::ParseHost(const char *, size_t, bool, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:941
void node::url::(anonymous namespace)::URLHost::ParseIPv4Host(const char *, size_t, bool *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:975
(parts) > (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc
parse
encodeAuth
toUSVString
domainToASCII
domainToUnicode
setURLConstructor
URL_FLAGS_NONE
URL_FLAGS_FAILED
URL_FLAGS_CANNOT_BE_BASE
URL_FLAGS_INVALID_PARSE_STATE
URL_FLAGS_TERMINATED
URL_FLAGS_SPECIAL
URL_FLAGS_HAS_USERNAME
URL_FLAGS_HAS_PASSWORD
URL_FLAGS_HAS_HOST
URL_FLAGS_HAS_PATH
URL_FLAGS_HAS_QUERY
URL_FLAGS_HAS_FRAGMENT
URL_FLAGS_IS_DEFAULT_SCHEME_PORT
kSchemeStart
kScheme
kNoScheme
kSpecialRelativeOrAuthority
kPathOrAuthority
kRelative
kRelativeSlash
kSpecialAuthoritySlashes
kSpecialAuthorityIgnoreSlashes
kAuthority
kHost
kHostname
kPort
kFile
kFileSlash
kFileHost
kPathStart
kPath
kCannotBeBase
kQuery
kFragment
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2177
(args.Length()) >= (5)
void node::url::Parse(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2178
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2181
args[2]->IsUndefined() || args[2]->IsNull() || args[2]->IsObject()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2184
args[3]->IsUndefined() || args[3]->IsNull() || args[3]->IsObject()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2185
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2186
args[5]->IsUndefined() || args[5]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:1274
username->IsString()
node::url::url_data node::url::(anonymous namespace)::HarvestContext(node::Environment *, Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:1282
password->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2206
void node::url::EncodeAuthSet(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2207
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2224
void node::url::ToUSVString(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2225
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2226
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2232
(start) >= (0)
T &node::MaybeStackBuffer<unsigned short, 1024>::operator[](size_t) [T = unsigned short, kStackStorageSize = 1024]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2259
void node::url::DomainToASCII(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2260
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2279
void node::url::DomainToUnicode(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2280
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2416
void node::url::SetURLConstructor(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_url.cc:2417
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:165
args[0]->IsArrayBufferView()
void node::util::ArrayBufferViewHasBuffer(const FunctionCallbackInfo<v8::Value> &)
alpn_buffer_private_symbol
arrow_message_private_symbol
contextify_context_private_symbol
contextify_global_private_symbol
decorated_private_symbol
napi_wrapper
sab_lifetimepartner_symbol
kPending
kFulfilled
kRejected
getHiddenValue
setHiddenValue
getPromiseDetails
getProxyDetails
previewEntries
getOwnNonIndexProperties
getConstructorName
arrayBufferViewHasBuffer
ALL_PROPERTIES
ONLY_WRITABLE
ONLY_ENUMERABLE
ONLY_CONFIGURABLE
SKIP_STRINGS
SKIP_SYMBOLS
propertyFilter
shouldAbortOnUncaughtToggle
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:302
target ->Set(env->context(), should_abort_on_uncaught_toggle, env->should_abort_on_uncaught_toggle().GetJSArray()) .FromJust()
void node::util::Initialize(Local<v8::Object>, Local<v8::Value>, Local<v8::Context>, void *)
WeakReference
incRef
decRef
guessHandleType
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:139
void node::util::GetHiddenValue(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:140
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:132
(index) < (arraysize(methods))
Local<v8::Private> node::util::IndexToPrivateSymbol(node::Environment *, uint32_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:153
void node::util::SetHiddenValue(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:154
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:41
void node::util::GetOwnNonIndexProperties(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:42
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:63
void node::util::GetConstructorName(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:180
static void node::util::WeakReference::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:181
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:200
(weak_ref->reference_count_) >= (1)
static void node::util::WeakReference::DecRef(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc:218
(fd) >= (0)
void node::util::GuessHandleType(const FunctionCallbackInfo<v8::Value> &)
FILE
PIPE
UNKNOWN
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_util.cc
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_v8.cc:140
void node::SetFlagsFromString(const FunctionCallbackInfo<v8::Value> &)
cachedDataVersionTag
updateHeapStatisticsArrayBuffer
heapStatisticsArrayBuffer
kTotalHeapSizeIndex
kTotalHeapSizeExecutableIndex
kTotalPhysicalSizeIndex
kTotalAvailableSize
kUsedHeapSizeIndex
kHeapSizeLimitIndex
kMallocedMemoryIndex
kPeakMallocedMemoryIndex
kDoesZapGarbageIndex
kNumberOfNativeContextsIndex
kNumberOfDetachedContextsIndex
updateHeapCodeStatisticsArrayBuffer
heapCodeStatisticsArrayBuffer
kCodeAndMetadataSizeIndex
kBytecodeAndMetadataSizeIndex
kExternalScriptSourceSizeIndex
kHeapSpaceStatisticsPropertiesCount
kHeapSpaces
updateHeapSpaceStatisticsArrayBuffer
heapSpaceStatisticsArrayBuffer
kSpaceSizeIndex
kSpaceUsedSizeIndex
kSpaceAvailableSizeIndex
kPhysicalSpaceSizeIndex
setFlagsFromString
src/env-inl.h:553
(heap_statistics_buffer_) != nullptr
double *node::Environment::heap_statistics_buffer() const
src/env-inl.h:563
(heap_space_statistics_buffer_) != nullptr
double *node::Environment::heap_space_statistics_buffer() const
src/env-inl.h:573
(heap_code_statistics_buffer_) != nullptr
double *node::Environment::heap_code_statistics_buffer() const
src/env-inl.h:558
(heap_statistics_buffer_) == nullptr
void node::Environment::set_heap_statistics_buffer(double *)
src/env-inl.h:578
(heap_code_statistics_buffer_) == nullptr
void node::Environment::set_heap_code_statistics_buffer(double *)
src/env-inl.h:568
(heap_space_statistics_buffer_) == nullptr
void node::Environment::set_heap_space_statistics_buffer(double *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_v8.cc
node::Watchdog::Watchdog()
Failed to initialize uv loop.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:48
(0) == (rc)
node::Watchdog::Watchdog(v8::Isolate *, uint64_t, bool *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:51
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:54
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:57
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:180
(has_running_thread_) == (false)
int node::SigintWatchdogHelper::Start()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:187
(0) == (pthread_sigmask(3, &sigmask, &savemask))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:190
(0) == (pthread_sigmask(3, &sigmask, nullptr))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:241
(0) == (pthread_join(thread_, nullptr))
bool node::SigintWatchdogHelper::Stop()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:275
(it) != (watchdogs_.end())
void node::SigintWatchdogHelper::Unregister(node::SigintWatchdog *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:286
(0) == (uv_sem_init(&sem_, 0))
node::SigintWatchdogHelper::SigintWatchdogHelper()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_watchdog.cc:298
node::SigintWatchdogHelper::~SigintWatchdogHelper()
Creating new worker instance with thread id %llu
Preparation for worker %llu finished
WorkerThread 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:181
(platform_) != nullptr
void node::worker::Worker::Run()
Creating isolate for worker with id %llu
Starting worker with id %llu
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:242
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:253
Created Environment for worker with id %llu
Created message port for worker %llu
Loaded environment for worker %llu
Exiting thread for worker %llu with exit code %d
Worker %llu thread stops
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:351
(uv_thread_join(&tid_)) == (0)
void node::worker::Worker::JoinThread()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:378
stopped_
virtual node::worker::Worker::~Worker()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:379
(env_) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:380
thread_joined_
Worker %llu destroyed
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:388
static void node::worker::Worker::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:401
invalidExecArgv
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:473
w->thread_joined_
static void node::worker::Worker::CloneParentEnvVars(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:481
static void node::worker::Worker::SetEnvVars(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:483
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:525
(uv_thread_create_ex(&w->tid_, &thread_options, [](void* arg) { Worker* w = static_cast<Worker*>(arg); const uintptr_t stack_top = reinterpret_cast<uintptr_t>(&arg); w->stack_base_ = stack_top - (kStackSize - kStackBufferSize); w->Run(); Mutex::ScopedLock lock(w->mutex_); w->on_thread_finished_.Stop(); }, static_cast<void*>(w))) == (0)
static void node::worker::Worker::StartThread(const FunctionCallbackInfo<v8::Value> &)
Worker %llu is getting stopped by parent
Worker %llu called Exit(%d)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:113
(uv_loop_init(&loop_)) == (0)
node::worker::WorkerThreadData::WorkerThreadData(node::worker::Worker *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:116
(isolate) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:128
isolate_data_
src/env-inl.h:863
(worker_context_) == nullptr
void node::Environment::set_worker_context(worker::Worker *)
Worker %llu dispose isolate
The V8 platform used by this instance of Node does not support creating Workers
ERR_MISSING_PLATFORM_FOR_WORKER
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:504
w_->is_stopped()
auto node::worker::Worker::StartThread(const FunctionCallbackInfo<v8::Value> &)::(anonymous class)::operator()(uv_async_t *) const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc
worker
setEnvVars
cloneParentEnvVars
startThread
stopThread
Worker
getEnvMessagePort
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_worker.cc:567
(port->CreationContext()->GetIsolate()) == (args.GetIsolate())
void node::worker::(anonymous namespace)::GetEnvMessagePort(const FunctionCallbackInfo<v8::Value> &)
parent_port
on_thread_finished_
src/memory_tracker-inl.h:254
CurrentNode()
void node::MemoryTracker::TrackInlineField(const node::MemoryRetainer *, const char *)
Z_NO_FLUSH
Z_PARTIAL_FLUSH
Z_SYNC_FLUSH
Z_FULL_FLUSH
Z_FINISH
Z_BLOCK
Z_OK
Z_STREAM_END
Z_NEED_DICT
Z_ERRNO
Z_STREAM_ERROR
Z_DATA_ERROR
Z_MEM_ERROR
Z_BUF_ERROR
Z_VERSION_ERROR
Z_NO_COMPRESSION
Z_BEST_SPEED
Z_BEST_COMPRESSION
Z_DEFAULT_COMPRESSION
Z_FILTERED
Z_HUFFMAN_ONLY
Z_RLE
Z_FIXED
Z_DEFAULT_STRATEGY
ZLIB_VERNUM
DEFLATE
INFLATE
GZIP
GUNZIP
DEFLATERAW
INFLATERAW
UNZIP
BROTLI_DECODE
BROTLI_ENCODE
Z_MIN_WINDOWBITS
Z_MAX_WINDOWBITS
Z_DEFAULT_WINDOWBITS
Z_MIN_CHUNK
Z_MAX_CHUNK
Z_DEFAULT_CHUNK
Z_MIN_MEMLEVEL
Z_MAX_MEMLEVEL
Z_DEFAULT_MEMLEVEL
Z_MIN_LEVEL
Z_MAX_LEVEL
Z_DEFAULT_LEVEL
BROTLI_OPERATION_PROCESS
BROTLI_OPERATION_FLUSH
BROTLI_OPERATION_FINISH
BROTLI_OPERATION_EMIT_METADATA
BROTLI_PARAM_MODE
BROTLI_MODE_GENERIC
BROTLI_MODE_TEXT
BROTLI_MODE_FONT
BROTLI_DEFAULT_MODE
BROTLI_PARAM_QUALITY
BROTLI_MIN_QUALITY
BROTLI_MAX_QUALITY
BROTLI_DEFAULT_QUALITY
BROTLI_PARAM_LGWIN
BROTLI_MIN_WINDOW_BITS
BROTLI_MAX_WINDOW_BITS
BROTLI_LARGE_MAX_WINDOW_BITS
BROTLI_DEFAULT_WINDOW
BROTLI_PARAM_LGBLOCK
BROTLI_MIN_INPUT_BLOCK_BITS
BROTLI_MAX_INPUT_BLOCK_BITS
BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING
BROTLI_PARAM_SIZE_HINT
BROTLI_PARAM_LARGE_WINDOW
BROTLI_PARAM_NPOSTFIX
BROTLI_PARAM_NDIRECT
BROTLI_DECODER_RESULT_ERROR
BROTLI_DECODER_RESULT_SUCCESS
BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT
BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT
BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION
BROTLI_DECODER_PARAM_LARGE_WINDOW
BROTLI_DECODER_NO_ERROR
BROTLI_DECODER_SUCCESS
BROTLI_DECODER_NEEDS_MORE_INPUT
BROTLI_DECODER_NEEDS_MORE_OUTPUT
BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE
BROTLI_DECODER_ERROR_FORMAT_RESERVED
BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE
BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET
BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME
BROTLI_DECODER_ERROR_FORMAT_CL_SPACE
BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE
BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT
BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1
BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2
BROTLI_DECODER_ERROR_FORMAT_TRANSFORM
BROTLI_DECODER_ERROR_FORMAT_DICTIONARY
BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS
BROTLI_DECODER_ERROR_FORMAT_PADDING_1
BROTLI_DECODER_ERROR_FORMAT_PADDING_2
BROTLI_DECODER_ERROR_FORMAT_DISTANCE
BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET
BROTLI_DECODER_ERROR_INVALID_ARGUMENTS
BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES
BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS
BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP
BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1
BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2
BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES
BROTLI_DECODER_ERROR_UNREACHABLE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc
Zlib
BrotliEncoder
BrotliDecoder
ZLIB_VERSION
writeSync
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:548
static void node::(anonymous namespace)::ZlibStream::New(const FunctionCallbackInfo<v8::Value> &)
dictionary
ZlibContext
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:253
(false) == (write_in_progress_ && "write in progress")
virtual node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::~CompressionStream() [CompressionContext = node::(anonymous namespace)::ZlibContext]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:255
(zlib_memory_) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:256
(unreported_allocations_) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:267
init_done_ && "close before init"
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::Close() [CompressionContext = node::(anonymous namespace)::ZlibContext]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:721
(mode_) <= (UNZIP)
void node::(anonymous namespace)::ZlibContext::Close()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:731
status == 0 || status == (-3)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:501
!(report < 0) || (zlib_memory_ >= static_cast<size_t>(-report))
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::AdjustAmountOfExternalAllocatedMemory() [CompressionContext = node::(anonymous namespace)::ZlibContext]
compression context
zlib_memory
ZlibStream
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:791
0 && "invalid number of gzip magic number bytes read"
void node::(anonymous namespace)::ZlibContext::DoThreadPoolWork()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:834
Failed to reset stream
Z_UNKNOWN_ERROR
Failed to set dictionary
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:398
virtual void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::AfterThreadPoolWork(int) [CompressionContext = node::(anonymous namespace)::ZlibContext]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:520
(refs_) > (0)
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::Unref() [CompressionContext = node::(anonymous namespace)::ZlibContext]
unexpected end of file
Missing dictionary
Bad dictionary
Zlib error
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:420
(env()->context()) == (env()->isolate()->GetCurrentContext())
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::EmitError(const node::(anonymous namespace)::CompressionError &) [CompressionContext = node::(anonymous namespace)::ZlibContext]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:286
(args.Length()) == (7)
static void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::Write(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::ZlibContext, async = true]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:292
(false) == (args[0]->IsUndefined() && "must provide flush value")
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:301
0 && "Invalid flush value"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:310
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:315
Buffer::IsWithinBounds(in_off, in_len, Buffer::Length(in_buf))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:319
Buffer::HasInstance(args[4])
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:323
Buffer::IsWithinBounds(out_off, out_len, Buffer::Length(out_buf))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:338
init_done_ && "write before init"
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::Write(uint32_t, char *, uint32_t, char *, uint32_t) [CompressionContext = node::(anonymous namespace)::ZlibContext, async = true]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:339
!closed_ && "already finalized"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:341
(false) == (write_in_progress_)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:342
(false) == (pending_close_)
static void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::Write(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::ZlibContext, async = false]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::ZlibContext>::Write(uint32_t, char *, uint32_t, char *, uint32_t) [CompressionContext = node::(anonymous namespace)::ZlibContext, async = false]
WARNING: You are likely using a version of node-tar or npm that is incompatible with this version of Node.js.
Please use either the version of npm that is bundled with Node.js, or a version of npm (> 5.5.1 or < 5.4.0) or node-tar (> 4.0.1) that is compatible with Node.js 9 and above.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:568
args.Length() == 7 && "init(windowBits, level, memLevel, strategy, writeResult, writeCallback," " dictionary)"
static void node::(anonymous namespace)::ZlibStream::Init(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:590
args[4]->IsUint32Array()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:595
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:936
(window_bits >= 8 && window_bits <= 15) && "invalid windowBits"
node::(anonymous namespace)::CompressionError node::(anonymous namespace)::ZlibContext::Init(int, int, int, int, std::vector<unsigned char> &&)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:940
(level >= -1 && level <= 9) && "invalid compression level"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:943
(mem_level >= 1 && mem_level <= 9) && "invalid memlevel"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:948
(strategy == 1 || strategy == 2 || strategy == 3 || strategy == 4 || strategy == 0) && "invalid strategy"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:989
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:622
args.Length() == 2 && "params(level, strategy)"
static void node::(anonymous namespace)::ZlibStream::Params(const FunctionCallbackInfo<v8::Value> &)
Failed to set parameters
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:658
static void node::(anonymous namespace)::BrotliCompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::New(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
BrotliEncoderContext
virtual node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::~CompressionStream() [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::Close() [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::AdjustAmountOfExternalAllocatedMemory() [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
BrotliCompressionStream
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:1078
(mode_) == (BROTLI_ENCODE)
void node::(anonymous namespace)::BrotliEncoderContext::DoThreadPoolWork()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:1079
state_
virtual void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::AfterThreadPoolWork(int) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::Unref() [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
Compression failed
ERR_BROTLI_COMPRESSION_FAILED
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::EmitError(const node::(anonymous namespace)::CompressionError &) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
static void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::Write(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext, async = true]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::Write(uint32_t, char *, uint32_t, char *, uint32_t) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext, async = true]
static void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::Write(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext, async = false]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::Write(uint32_t, char *, uint32_t, char *, uint32_t) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext, async = false]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:667
args.Length() == 3 && "init(params, writeResult, writeCallback)"
static void node::(anonymous namespace)::BrotliCompressionStream<node::(anonymous namespace)::BrotliEncoderContext>::Init(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliEncoderContext]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:669
args[1]->IsUint32Array()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:672
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:688
args[0]->IsUint32Array()
Could not initialize Brotli instance
ERR_ZLIB_INITIALIZATION_FAILED
Setting parameter failed
ERR_BROTLI_PARAM_SET_FAILED
static void node::(anonymous namespace)::BrotliCompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::New(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
BrotliDecoderContext
virtual node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::~CompressionStream() [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::Close() [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::AdjustAmountOfExternalAllocatedMemory() [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:1146
(mode_) == (BROTLI_DECODE)
void node::(anonymous namespace)::BrotliDecoderContext::DoThreadPoolWork()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_zlib.cc:1147
ERR_
virtual void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::AfterThreadPoolWork(int) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::Unref() [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
Decompression failed
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::EmitError(const node::(anonymous namespace)::CompressionError &) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
static void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::Write(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext, async = true]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::Write(uint32_t, char *, uint32_t, char *, uint32_t) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext, async = true]
static void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::Write(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext, async = false]
void node::(anonymous namespace)::CompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::Write(uint32_t, char *, uint32_t, char *, uint32_t) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext, async = false]
static void node::(anonymous namespace)::BrotliCompressionStream<node::(anonymous namespace)::BrotliDecoderContext>::Init(const FunctionCallbackInfo<v8::Value> &) [CompressionContext = node::(anonymous namespace)::BrotliDecoderContext]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:56
(false) == (env->pipe_constructor_template().IsEmpty())
static MaybeLocal<v8::Object> node::PipeWrap::Instantiate(node::Environment *, node::AsyncWrap *, PipeWrap::SocketType)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:60
(false) == (constructor.IsEmpty())
Pipe
bind
listen
connect
PipeConnectWrap
SOCKET
SERVER
UV_READABLE
UV_WRITABLE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:124
static void node::PipeWrap::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:125
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:147
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:160
node::PipeWrap::PipeWrap(node::Environment *, Local<v8::Object>, node::AsyncWrap::ProviderType, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:188
static void node::PipeWrap::Fchmod(const v8::FunctionCallbackInfo<v8::Value> &)
uv_pipe_open
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:232
static void node::PipeWrap::Connect(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc:233
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/pipe_wrap.cc
pipe_wrap
static node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F node::MakeLibuvRequestCallback<uv_connect_s, void (*)(uv_connect_s *, int)>::For(ReqWrap<ReqT> *, node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F) [ReqT = uv_connect_s, T = void (*)(uv_connect_s *, int)]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc
process_wrap
Process
spawn
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:79
static void node::(anonymous namespace)::ProcessWrap::New(const FunctionCallbackInfo<v8::Value> &)
ProcessWrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:159
uid_v->IsInt32()
static void node::(anonymous namespace)::ProcessWrap::Spawn(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:169
gid_v->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:180
file_v->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:190
(argc + 1) > (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:198
(options.args[i]) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:218
(envc + 1) > (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:224
(options.env[i]) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:261
(wrap->process_.data) == (wrap)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:295
static void node::(anonymous namespace)::ProcessWrap::OnExit(uv_process_t *, int64_t, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:296
(&wrap->process_) == (handle)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:133
fd_value->IsNumber()
static void node::(anonymous namespace)::ProcessWrap::ParseStdioOptions(node::Environment *, Local<v8::Object>, uv_process_options_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/process_wrap.cc:99
static uv_stream_t *node::(anonymous namespace)::ProcessWrap::StreamForWrap(node::Environment *, Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/sharedarraybuffer_metadata.cc:78
source->IsExternal()
static node::worker::SharedArrayBufferMetadataReference node::worker::SharedArrayBufferMetadata::ForSharedArrayBuffer(node::Environment *, Local<v8::Context>, Local<v8::SharedArrayBuffer>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/sharedarraybuffer_metadata.cc:81
(partner) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/sharedarraybuffer_metadata.cc:104
target->IsExternal()
Maybe<bool> node::worker::SharedArrayBufferMetadata::AssignToSharedArrayBuffer(node::Environment *, Local<v8::Context>, Local<v8::SharedArrayBuffer>)
Cannot serialize externalized SharedArrayBuffer
ERR_TRANSFERRING_EXTERNALIZED_SHAREDARRAYBUFFER
SABLifetimePartner
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/signal_wrap.cc
signal_wrap
Signal
stop
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/signal_wrap.cc:74
static void node::(anonymous namespace)::SignalWrap::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/signal_wrap.cc:85
node::(anonymous namespace)::SignalWrap::SignalWrap(node::Environment *, Local<v8::Object>)
SignalWrap
process.on(SIGPROF) is reserved while debugging
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:112
readable || writable
node::SyncProcessStdioPipe::SyncProcessStdioPipe(node::SyncProcessRunner *, bool, bool, uv_buf_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:117
lifecycle_ == kUninitialized || lifecycle_ == kClosed
node::SyncProcessStdioPipe::~SyncProcessStdioPipe()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:130
(lifecycle_) == (kUninitialized)
int node::SyncProcessStdioPipe::Initialize(uv_loop_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:144
(lifecycle_) == (kInitialized)
int node::SyncProcessStdioPipe::Start()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:152
(input_buffer_.base) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:179
lifecycle_ == kInitialized || lifecycle_ == kStarted
void node::SyncProcessStdioPipe::Close()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:418
(lifecycle_) == (kHandlesClosed)
node::SyncProcessRunner::~SyncProcessRunner()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:436
MaybeLocal<v8::Object> node::SyncProcessRunner::Run(Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:452
Maybe<bool> node::SyncProcessRunner::TryInitializeAndRunLoop(Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:460
(uv_loop_init(uv_loop_)) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:515
(exit_status_) >= (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:521
(lifecycle_) < (kHandlesClosed)
void node::SyncProcessRunner::CloseHandlesAndDeleteLoop()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:549
(false) == (stdio_pipes_initialized_)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:550
(false) == (kill_timer_initialized_)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:558
void node::SyncProcessRunner::CloseStdioPipes()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:561
!stdio_pipes_.empty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:562
(uv_loop_) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:575
void node::SyncProcessRunner::CloseKillTimer()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:578
(timeout_) > (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:579
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:611
r >= 0 || r == UV_ESRCH
void node::SyncProcessRunner::Kill()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:720
(lifecycle_) >= (kInitialized)
Local<v8::Array> node::SyncProcessRunner::BuildOutputArray()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:721
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:780
js_uid->IsInt32()
Maybe<int> node::SyncProcessRunner::ParseOptions(Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:789
js_gid->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:815
js_timeout->IsNumber()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:823
js_max_buffer->IsNumber()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:830
js_kill_signal->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:924
0 && "invalid child stdio type"
int node::SyncProcessRunner::ParseStdioOption(int, Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:219
(lifecycle_) < (kClosing)
uv_pipe_t *node::SyncProcessStdioPipe::uv_pipe() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:310
(error) != (0)
void node::SyncProcessStdioPipe::SetError(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:64
(buf->base) == (data_ + used())
void node::SyncProcessOutputBuffer::OnRead(const uv_buf_t *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:931
(child_fd) < (stdio_count_)
int node::SyncProcessRunner::AddStdioIgnore(uint32_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:932
!stdio_pipes_[child_fd]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:944
int node::SyncProcessRunner::AddStdioPipe(uint32_t, bool, bool, uv_buf_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:945
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:966
int node::SyncProcessRunner::AddStdioInheritFD(uint32_t, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc:967
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/spawn_sync.cc
spawn_sync
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:55
int node::StreamBase::Shutdown(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:69
int node::StreamBase::Writev(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:70
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:137
(offset) <= (storage_size)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:165
int node::StreamBase::WriteBuffer(const FunctionCallbackInfo<v8::Value> &)
Second argument must be a buffer
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:317
void node::StreamBase::CallJSOnreadMethod(ssize_t, Local<v8::ArrayBuffer>, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:319
onread->IsFunction()
readStart
readStop
shutdown
writev
writeAsciiString
writeUtf8String
writeUcs2String
writeLatin1String
isStreamBase
onread
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:449
virtual uv_buf_t node::EmitToJSStreamListener::OnStreamAlloc(size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:455
virtual void node::EmitToJSStreamListener::OnStreamRead(ssize_t, const uv_buf_t &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:468
(static_cast<size_t>(nread)) <= (buf.size())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:482
!async_wrap->persistent().IsEmpty()
void node::ReportWritesToJSStreamListener::OnStreamAfterReqFinished(node::StreamReq *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:190
int node::StreamBase::WriteString(const FunctionCallbackInfo<v8::Value> &) [enc = node::ASCII]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:191
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:245
(count) == (1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_base.cc:265
(data_size) <= (storage_size)
int node::StreamBase::WriteString(const FunctionCallbackInfo<v8::Value> &) [enc = node::UTF8]
int node::StreamBase::WriteString(const FunctionCallbackInfo<v8::Value> &) [enc = node::UCS2]
int node::StreamBase::WriteString(const FunctionCallbackInfo<v8::Value> &) [enc = node::BINARY]
src/stream_base-inl.h:282
(storage_.data()) == nullptr
void node::WriteWrap::SetAllocatedStorage(node::AllocatedBuffer &&)
void node::MaybeStackBuffer<uv_buf_t, 16>::AllocateSufficientStorage(size_t) [T = uv_buf_t, kStackStorageSize = 16]
T &node::MaybeStackBuffer<uv_buf_t, 16>::operator[](size_t) [T = uv_buf_t, kStackStorageSize = 16]
src/base_object-inl.h:140
((*value)->*typecheck)()
static void node::BaseObject::InternalFieldSet(v8::Local<v8::String>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<void> &) [Field = 2, typecheck = &v8::Value::IsFunction]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:22
(sink) != nullptr
node::StreamPipe::StreamPipe(node::StreamBase *, node::StreamBase *, Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:28
sink->HasWantsWrite()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:114
(size) > (0)
virtual uv_buf_t node::StreamPipe::ReadableListener::OnStreamAlloc(size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:128
virtual void node::StreamPipe::ReadableListener::OnStreamRead(ssize_t, const uv_buf_t &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:172
virtual void node::StreamPipe::WritableListener::OnStreamAfterWrite(node::WriteWrap *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:183
virtual void node::StreamPipe::WritableListener::OnStreamAfterShutdown(node::ShutdownWrap *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:215
virtual uv_buf_t node::StreamPipe::WritableListener::OnStreamAlloc(size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:221
virtual void node::StreamPipe::WritableListener::OnStreamRead(ssize_t, const uv_buf_t &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:226
static void node::StreamPipe::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:227
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc:228
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_pipe.cc
stream_pipe
StreamPipe
unpipe
ShutdownWrap
callback
WriteWrap
kReadBytesOrError
kArrayBufferOffset
kBytesWritten
kLastWriteWasAsync
streamBaseState
LibuvStreamWrap
setBlocking
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:160
!sw.IsEmpty() && sw->HasInstance(object)
static node::LibuvStreamWrap *node::LibuvStreamWrap::From(node::Environment *, Local<v8::Object>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:257
(persistent().IsEmpty()) == (false)
void node::LibuvStreamWrap::OnUvRead(ssize_t, const uv_buf_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:269
(type) == (UV_UNKNOWN_HANDLE)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:304
(args.Length()) > (0)
static void node::LibuvStreamWrap::SetBlocking(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:333
static void node::LibuvStreamWrap::AfterUvShutdown(uv_shutdown_t *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:398
static void node::LibuvStreamWrap::AfterUvWrite(uv_write_t *, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:62
auto node::LibuvStreamWrap::Initialize(Local<v8::Object>, Local<v8::Value>, Local<v8::Context>, void *)::(anonymous class)::operator()(const FunctionCallbackInfo<v8::Value> &) const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc
stream_wrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:234
MaybeLocal<v8::Object> node::AcceptHandle(node::Environment *, node::LibuvStreamWrap *) [WrapType = node::TCPWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/stream_wrap.cc:236
MaybeLocal<v8::Object> node::AcceptHandle(node::Environment *, node::LibuvStreamWrap *) [WrapType = node::PipeWrap]
MaybeLocal<v8::Object> node::AcceptHandle(node::Environment *, node::LibuvStreamWrap *) [WrapType = node::UDPWrap]
virtual node::ReqWrap<uv_shutdown_s>::~ReqWrap() [T = uv_shutdown_s]
virtual node::ReqWrap<uv_write_s>::~ReqWrap() [T = uv_write_s]
static node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F node::MakeLibuvRequestCallback<uv_shutdown_s, void (*)(uv_shutdown_s *, int)>::For(ReqWrap<ReqT> *, node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F) [ReqT = uv_shutdown_s, T = void (*)(uv_shutdown_s *, int)]
static node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F node::MakeLibuvRequestCallback<uv_write_s, void (*)(uv_write_s *, int)>::For(ReqWrap<ReqT> *, node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F) [ReqT = uv_write_s, T = void (*)(uv_write_s *, int)]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:287
(reinterpret_cast<uintptr_t>(aligned_dst) % sizeof(*dst)) == (0)
static size_t node::StringBytes::WriteUCS2(v8::Isolate *, char *, size_t, Local<v8::String>, int, size_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:293
(nchars) == (max_chars - 1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:300
(str->Write(isolate, &last, nchars, 1, flags)) == (1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:322
val->IsString() == true
static size_t node::StringBytes::Write(v8::Isolate *, char *, size_t, Local<v8::Value>, enum encoding, int *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:387
0 && "unknown encoding"
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:445
str->Length() % 2 == 0 && "invalid hex string length"
static Maybe<size_t> node::StringBytes::StorageSize(v8::Isolate *, Local<v8::Value>, enum encoding)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:450
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:490
static Maybe<size_t> node::StringBytes::Size(v8::Isolate *, Local<v8::Value>, enum encoding)
static MaybeLocal<v8::Value> node::StringBytes::Encode(v8::Isolate *, const char *, size_t, enum encoding, Local<v8::Value> *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_bytes.cc:739
Cannot create a Buffer larger than 0x%zx bytes
code
src/util-inl.h:324
T node::MultiplyWithOverflowCheck(T, T) [T = unsigned long]
Cannot create a string longer than 0x%x characters
ERR_STRING_TOO_LONG
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
0123456789abcdef
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:73
(MissingBytes() + BufferedBytes()) <= (kIncompleteCharactersEnd)
MaybeLocal<v8::String> node::StringDecoder::DecodeData(v8::Isolate *, const char *, size_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:221
Encoding() == ASCII || Encoding() == HEX || Encoding() == LATIN1
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:228
(MissingBytes()) == (0)
MaybeLocal<v8::String> node::StringDecoder::FlushData(v8::Isolate *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:229
(BufferedBytes()) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:47
MaybeLocal<v8::String> node::(anonymous namespace)::MakeString(v8::Isolate *, const char *, size_t, enum encoding)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc
kIncompleteCharactersStart
kIncompleteCharactersEnd
kMissingBytes
kBufferedBytes
kEncodingField
kNumFields
encodings
kSize
flush
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:258
(decoder) != nullptr
void node::(anonymous namespace)::DecodeData(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:260
args[1]->IsArrayBufferView()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/string_decoder.cc:273
void node::(anonymous namespace)::FlushData(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:60
(env->tcp_constructor_template().IsEmpty()) == (false)
static MaybeLocal<v8::Object> node::TCPWrap::Instantiate(node::Environment *, node::AsyncWrap *, TCPWrap::SocketType)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:64
(constructor.IsEmpty()) == (false)
reading
bind6
connect6
getsockname
getpeername
setNoDelay
setKeepAlive
TCPConnectWrap
UV_TCP_IPV6ONLY
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:139
static void node::TCPWrap::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:140
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:155
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:165
node::TCPWrap::TCPWrap(node::Environment *, Local<v8::Object>, node::AsyncWrap::ProviderType)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:281
static void node::TCPWrap::Connect(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:292
static void node::TCPWrap::Connect6(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc
tcp_wrap
src/node_internals.h:78
void node::GetSockOrPeerName(const v8::FunctionCallbackInfo<v8::Value> &) [T = node::TCPWrap, F = &uv_tcp_getsockname]
void node::GetSockOrPeerName(const v8::FunctionCallbackInfo<v8::Value> &) [T = node::TCPWrap, F = &uv_tcp_getpeername]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:311
static void node::TCPWrap::Connect(const FunctionCallbackInfo<v8::Value> &, std::function<int (const char *, T *)>) [T = sockaddr_in]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tcp_wrap.cc:312
static void node::TCPWrap::Connect(const FunctionCallbackInfo<v8::Value> &, std::function<int (const char *, T *)>) [T = sockaddr_in6]
TCPSocketWrap
TCPServerWrap
src/tcp_wrap.h:57
virtual std::string node::TCPWrap::MemoryInfoName() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/timers.cc
getLibuvNow
setupTimers
scheduleTimer
toggleTimerRef
toggleImmediateRef
immediateInfo
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/timers.cc:20
void node::(anonymous namespace)::SetupTimers(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/timers.cc:21
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/agent.cc:55
(uv_loop_init(&tracing_loop_)) == (0)
node::tracing::Agent::Agent()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/agent.cc:61
(uv_async_init(&tracing_loop_, &initialize_writer_async_, [](uv_async_t* async) { Agent* agent = ContainerOf(&Agent::initialize_writer_async_, async); agent->InitializeWritersOnThread(); })) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/agent.cc:100
(0) == (uv_thread_create(&thread_, [](void* arg) { Agent* agent = static_cast<Agent*>(arg); uv_run(&agent->tracing_loop_, UV_RUN_DEFAULT); }, this))
void node::tracing::Agent::Start()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/agent.cc:18
agent_->started_
node::tracing::Agent::ScopedSuspendTracing::ScopedSuspendTracing(node::tracing::TracingController *, node::tracing::Agent *, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_buffer.cc:108
node::tracing::NodeTraceBuffer::NodeTraceBuffer(size_t, node::tracing::Agent *, uv_loop_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_buffer.cc:112
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:15
(tracing_loop_) == nullptr
virtual void node::tracing::NodeTraceWriter::InitializeOnThread(uv_loop_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:25
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:29
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:53
(0) == (uv_fs_close(nullptr, &req, fd_, nullptr))
virtual node::tracing::NodeTraceWriter::~NodeTraceWriter()
${pid}
${rotation}
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:84
(uv_fs_close(nullptr, &req, fd_, nullptr)) == (0)
void node::tracing::NodeTraceWriter::OpenNewFileForStreaming()
Could not open trace file %s: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:151
virtual void node::tracing::NodeTraceWriter::Flush(bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:192
void node::tracing::NodeTraceWriter::StartWrite(uv_buf_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tracing/node_trace_writer.cc:196
(write_req_.result) >= (0)
void node::tracing::NodeTraceWriter::AfterWrite()
"NaN"
"-Infinity"
"Infinity"
 000000000000
\u%04X
getWindowSize
setRawMode
isTTY
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tty_wrap.cc:75
static void node::TTYWrap::IsTTY(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tty_wrap.cc:88
static void node::TTYWrap::GetWindowSize(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tty_wrap.cc:119
static void node::TTYWrap::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tty_wrap.cc:123
uv_tty_init
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tty_wrap.cc
tty_wrap
TTYWrap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:83
node::UDPWrap::UDPWrap(node::Environment *, Local<v8::Object>)
send
send6
disconnect
recvStart
recvStop
addMembership
dropMembership
setMulticastInterface
setMulticastTTL
setMulticastLoopback
setBroadcast
setTTL
bufferSize
SendWrap
UV_UDP_IPV6ONLY
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:166
static void node::UDPWrap::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:192
0 && "unexpected address family"
int node::sockaddr_for_family(int, const char *, const unsigned short, struct sockaddr_storage *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:203
static void node::UDPWrap::DoBind(const FunctionCallbackInfo<v8::Value> &, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:229
static void node::UDPWrap::DoConnect(const FunctionCallbackInfo<v8::Value> &, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:252
static void node::UDPWrap::Open(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:277
static void node::UDPWrap::BufferSize(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:278
uv_recv_buffer_size
uv_send_buffer_size
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:322
static void node::UDPWrap::Disconnect(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:342
static void node::UDPWrap::SetTTL(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:343
static void node::UDPWrap::SetBroadcast(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:344
static void node::UDPWrap::SetMulticastTTL(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:345
static void node::UDPWrap::SetMulticastLoopback(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:355
static void node::UDPWrap::SetMulticastInterface(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:356
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:373
static void node::UDPWrap::SetMembership(const FunctionCallbackInfo<v8::Value> &, uv_membership)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:409
args.Length() == 4 || args.Length() == 6
static void node::UDPWrap::DoSend(const FunctionCallbackInfo<v8::Value> &, int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:410
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:411
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:412
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:417
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:418
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:419
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:422
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc:577
(env->udp_constructor_function().IsEmpty()) == (false)
static MaybeLocal<v8::Object> node::UDPWrap::Instantiate(node::Environment *, node::AsyncWrap *, UDPWrap::SocketType)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/udp_wrap.cc
udp_wrap
void node::GetSockOrPeerName(const v8::FunctionCallbackInfo<v8::Value> &) [T = node::UDPWrap, F = &uv_udp_getpeername]
void node::GetSockOrPeerName(const v8::FunctionCallbackInfo<v8::Value> &) [T = node::UDPWrap, F = &uv_udp_getsockname]
static node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F node::MakeLibuvRequestCallback<uv_udp_send_s, void (*)(uv_udp_send_s *, int)>::For(ReqWrap<ReqT> *, node::MakeLibuvRequestCallback<type-parameter-0-0, void (*)(type-parameter-0-0 *, type-parameter-0-1...)>::F) [ReqT = uv_udp_send_s, T = void (*)(uv_udp_send_s *, int)]
virtual node::ReqWrap<uv_udp_send_s>::~ReqWrap() [T = uv_udp_send_s]
UDPWrap
%s[%d]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/util.cc:170
(0) == (uv_gettimeofday(&tv))
double node::GetCurrentTimeInMicroseconds()
void node::MaybeStackBuffer<unsigned short, 1024>::AllocateSufficientStorage(size_t) [T = unsigned short, kStackStorageSize = 1024]
T *node::Realloc(T *, size_t) [T = unsigned short]
void node::MaybeStackBuffer<unsigned short, 1024>::SetLengthAndZeroTerminate(size_t) [T = unsigned short, kStackStorageSize = 1024]
void node::MaybeStackBuffer<unsigned short, 1024>::SetLength(size_t) [T = unsigned short, kStackStorageSize = 1024]
src/util.h:394
!IsAllocated()
void node::MaybeStackBuffer<char, 1024>::Invalidate() [T = char, kStackStorageSize = 1024]
void node::MaybeStackBuffer<char, 1024>::SetLengthAndZeroTerminate(size_t) [T = char, kStackStorageSize = 1024]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/uv.cc
errname
getErrorMap
Directly calling process.binding('uv').errname(<val>) is being deprecated. Please make sure to use util.getSystemErrorName() instead.
DEP0119
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/uv.cc:74
(err) < (0)
void node::(anonymous namespace)::ErrName(const FunctionCallbackInfo<v8::Value> &)
argument list too long
permission denied
address already in use
address not available
address family not supported
resource temporarily unavailable
EAI_ADDRFAMILY
EAI_AGAIN
temporary failure
EAI_BADFLAGS
bad ai_flags value
EAI_BADHINTS
invalid value for hints
EAI_CANCELED
request canceled
EAI_FAIL
permanent failure
EAI_FAMILY
ai_family not supported
EAI_MEMORY
out of memory
EAI_NODATA
no address
EAI_NONAME
unknown node or service
EAI_OVERFLOW
argument buffer overflow
EAI_PROTOCOL
resolved protocol is unknown
EAI_SERVICE
service not available for socket type
EAI_SOCKTYPE
socket type not supported
connection already in progress
bad file descriptor
resource busy or locked
operation canceled
ECHARSET
invalid Unicode character
software caused connection abort
connection refused
connection reset by peer
destination address required
file already exists
bad address in system call argument
file too large
host is unreachable
interrupted system call
invalid argument
i/o error
socket is already connected
illegal operation on a directory
too many symbolic links encountered
too many open files
message too long
name too long
network is down
network is unreachable
file table overflow
no buffer space available
no such device
no such file or directory
not enough memory
ENONET
machine is not on the network
protocol not available
no space left on device
function not implemented
socket is not connected
not a directory
directory not empty
socket operation on non-socket
operation not supported on socket
operation not permitted
broken pipe
protocol error
protocol not supported
protocol wrong type for socket
result too large
read-only file system
ESHUTDOWN
cannot send after transport endpoint shutdown
invalid seek
no such process
connection timed out
text file is busy
cross-device link not permitted
unknown error
end of file
no such device or address
too many links
EHOSTDOWN
host is down
EREMOTEIO
remote I/O error
inappropriate ioctl for device
EFTYPE
inappropriate file type or format
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:753
start_io_thread_async_initialized.exchange(false)
node::inspector::Agent::~Agent()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:766
(host_port) != nullptr
bool node::inspector::Agent::Start(const std::string &, const node::DebugOptions &, std::shared_ptr<HostPort>, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:771
(start_io_thread_async_initialized.exchange(true)) == (false)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:774
(0) == (uv_async_init(parent_env_->event_loop(), &start_io_thread_async, StartIoThreadAsyncCallback))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:792
!parent_env_->has_serialized_options()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:804
(client_) != nullptr
bool node::inspector::Agent::StartIoThread()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:824
std::unique_ptr<InspectorSession> node::inspector::Agent::Connect(std::unique_ptr<InspectorSessionDelegate>, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:832
void node::inspector::Agent::WaitForDisconnect()
Waiting for the debugger to disconnect...
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:868
!pending_disable_async_hook_
void node::inspector::Agent::RegisterAsyncHook(v8::Isolate *, Local<v8::Function>, Local<v8::Function>)
!pending_enable_async_hook_
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:882
void node::inspector::Agent::EnableAsyncHook()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:893
void node::inspector::Agent::DisableAsyncHook()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:902
parent_env_->has_run_bootstrapping_code()
void node::inspector::Agent::ToggleAsyncHook(v8::Isolate *, const Global<v8::Function> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:904
!fn.IsEmpty()
node::inspector::Agent::ToggleAsyncHook
Cannot toggle Inspector's AsyncHook, please report this.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:940
start_io_thread_async_initialized
void node::inspector::Agent::RequestIoThreadStart()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:948
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:986
void node::inspector::Agent::WaitForConnect()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:991
std::shared_ptr<WorkerManager> node::inspector::Agent::GetWorkerManager()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:112
(0) == (uv_sem_init(&start_io_thread_semaphore, 0))
int node::inspector::(anonymous namespace)::StartDebugSignalHandler()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:114
(0) == (pthread_attr_init(&attr))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:125
(0) == (pthread_attr_setstacksize(&attr, stack_size))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:127
(0) == (pthread_attr_setdetachstate(&attr, 2))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:132
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:138
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:139
(0) == (pthread_attr_destroy(&attr))
node[%u]: pthread_create: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:152
(0) == (pthread_sigmask(2, &sigmask, nullptr))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:100
void *node::inspector::(anonymous namespace)::StartIoThreadMain(void *)
NODE_DEBUG_ENABLED
internalMessage
Uncaught
{"isDefault":true}
{"isDefault":false}
Worker[
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_agent.cc:408
(timer_) != nullptr
node::inspector::(anonymous namespace)::InspectorTimerHandle::~InspectorTimerHandle()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_io.cc:266
(uv_thread_create(&thread_, InspectorIo::ThreadMain, this)) == (0)
node::inspector::InspectorIo::InspectorIo(std::shared_ptr<MainThreadHandle>, const std::string &, std::shared_ptr<HostPort>, const node::InspectPublishUid &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_io.cc:273
node::inspector::InspectorIo::~InspectorIo()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_io.cc:289
void node::inspector::InspectorIo::ThreadMain()
Debugger attached.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_io.cc:50
crypto::EntropySource(reinterpret_cast<unsigned char*>(buffer), sizeof(buffer))
std::string node::inspector::(anonymous namespace)::GenerateID()
%04x%04x-%04x-%04x-%04x-%04x%04x%04x
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_io.cc:119
(0) == (uv_async_send(&async_))
void node::inspector::(anonymous namespace)::RequestQueueData::Post(int, node::inspector::(anonymous namespace)::TransportAction, std::unique_ptr<StringBuffer>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_io.cc:107
node::inspector::(anonymous namespace)::RequestQueueData::RequestQueueData(uv_loop_t *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_io.cc:36
(req.ptr) != nullptr
std::string node::inspector::(anonymous namespace)::ScriptPath(uv_loop_t *, const std::string &)
{ "id": 
, "method": "
, "params": 
Dispatching message %s
Receive %s profile message, ending = %s
Failed to convert %s profile message
coverage-%s-%s-%s.json
Failed to stringify %s profile result
Profiler.enable
Profiler.startPreciseCoverage
{ "callCount": true, "detailed": true }
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc:217
(ending_) == (false)
virtual void node::profiler::V8CoverageConnection::End()
Profiler.takePreciseCoverage
profile
'profile' from CPU profile result is undefined
'profile' from CPU profile result is not an Object
Profiler.start
{ "interval": 
Profiler.setSamplingInterval
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc:256
virtual void node::profiler::V8CpuProfilerConnection::End()
Profiler.stop
'profile' from heap profile result is undefined
'profile' from heap profile result is not an Object
HeapProfiler.enable
{ "samplingInterval": 
HeapProfiler.startSampling
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc:294
virtual void node::profiler::V8HeapProfilerConnection::End()
HeapProfiler.stopSampling
EndStartedProfilers
Ending cpu profiling
Ending heap profiling
Ending coverage collection
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc:329
std::string node::profiler::GetCwd(node::Environment *)
NODE_V8_COVERAGE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc:344
(env->coverage_connection()) == nullptr
void node::profiler::StartProfilers(node::Environment *)
cpuprofile
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc:358
(env->cpu_profiler_connection()) == nullptr
heapprofile
Failed to parse %s profile result as JSON object
Failed to get 'result' from %s profile message
'result' from %s profile message is not an object
%s: Failed to create %s profile directory %s
%s: Failed to write file %s
Written result to %s
src/env-inl.h:659
(coverage_connection_) == nullptr
void node::Environment::set_coverage_connection(std::unique_ptr<profiler::V8CoverageConnection>)
src/env-inl.h:673
(cpu_profiler_connection_) == nullptr
void node::Environment::set_cpu_profiler_connection(std::unique_ptr<profiler::V8CpuProfilerConnection>)
src/env-inl.h:708
(heap_profiler_connection_) == nullptr
void node::Environment::set_heap_profiler_connection(std::unique_ptr<profiler::V8HeapProfilerConnection>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc
profiler
setCoverageDirectory
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_profiler.cc:380
void node::profiler::SetCoverageDirectory(const FunctionCallbackInfo<v8::Value> &)
coverage
heap
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc
consoleCall
setConsoleExtensionInstaller
callAndPauseOnStart
waitForDebugger
asyncTaskScheduled
asyncTaskCanceled
asyncTaskStarted
asyncTaskFinished
registerAsyncHook
isEnabled
Connection
dispatch
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:157
(info.Length()) >= (2)
void node::inspector::(anonymous namespace)::InspectorConsoleCall(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:161
inspector_method->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:176
node_method->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:133
(info.Length()) == (1)
void node::inspector::(anonymous namespace)::SetConsoleExtensionInstaller(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:134
info[0]->IsFunction()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:141
(args.Length()) > (1)
void node::inspector::(anonymous namespace)::CallAndPauseOnStart(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:142
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:206
void node::inspector::(anonymous namespace)::AsyncTaskScheduledWrapper(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:211
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:215
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:198
void node::inspector::(anonymous namespace)::InvokeAsyncTaskFnWithId(const FunctionCallbackInfo<v8::Value> &) [asyncTaskFn = &node::inspector::Agent::AsyncTaskCanceled]
void node::inspector::(anonymous namespace)::InvokeAsyncTaskFnWithId(const FunctionCallbackInfo<v8::Value> &) [asyncTaskFn = &node::inspector::Agent::AsyncTaskStarted]
void node::inspector::(anonymous namespace)::InvokeAsyncTaskFnWithId(const FunctionCallbackInfo<v8::Value> &) [asyncTaskFn = &node::inspector::Agent::AsyncTaskFinished]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:224
void node::inspector::(anonymous namespace)::RegisterAsyncHookWrapper(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:226
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:83
static void node::inspector::(anonymous namespace)::JSBindingsConnection::New(const FunctionCallbackInfo<v8::Value> &)
InspectorSession
JSBindingsConnection
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_js_api.cc:103
info[0]->IsString()
static void node::inspector::(anonymous namespace)::JSBindingsConnection::Dispatch(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket.cc:606
(tcp_) != nullptr
node::inspector::ProtocolHandler::ProtocolHandler(node::inspector::InspectorSocket *, TcpHolder::Pointer)
Sec-WebSocket-Key
Host
HTTP/1.1 101 Switching Protocols
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Accept: 
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket.cc:227
(0) == (remaining)
std::vector<char> node::inspector::(anonymous namespace)::encode_frame_hybi17(const std::vector<char> &)
localhost
localhost6
HTTP/1.0 400 Bad Request
Content-Type: text/html; charset=UTF-8
WebSockets request was expected
Debugger listening on %s
For help, see: %s
https://nodejs.org/en/docs/inspector
/json
list
protocol
node.js instance
description
https://nodejs.org/static/favicon.ico
faviconUrl
title
node
devtoolsFrontendUrl
devtoolsFrontendUrlCompat
webSocketDebuggerUrl
chrome-devtools://devtools/bundled/
js_app
.html?experiments=true&v8only=true&ws=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:383
(delegate_) != nullptr
bool node::inspector::InspectorSocketServer::Start()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:384
(state_) == (ServerState::kNew)
Unable to resolve "%s": %s
Starting inspector on %s:%d failed: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:435
(state_) == (ServerState::kRunning)
void node::inspector::InspectorSocketServer::Stop()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:534
(0) == (uv_tcp_init(loop, server))
int node::inspector::ServerSocket::Listen(sockaddr *, uv_loop_t *)
ws://
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:131
(0) == (inflateInit_((&strm), "1.2.11", (int)sizeof(z_stream)))
void node::inspector::(anonymous namespace)::SendProtocolJson(node::inspector::InspectorSocket *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:141
(1) == (inflate(&strm, 4))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:142
(0) == (strm.avail_out)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector_socket_server.cc:143
(0) == (inflateEnd(&strm))
node.js/v12.8.0
Browser
Protocol-Version
": "
HTTP/1.0 %d OK
Content-Type: application/json; charset=UTF-8
Cache-Control: no-cache
Content-Length: %zu
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector/main_thread_interface.cc:287
(object) != nullptr
void node::inspector::MainThreadInterface::AddObject(int, std::unique_ptr<Deletable>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector/main_thread_interface.cc:292
(1) == (managed_objects_.erase(id))
void node::inspector::MainThreadInterface::RemoveObject(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector/main_thread_interface.cc:299
(pointer) != nullptr
node::inspector::Deletable *node::inspector::MainThreadInterface::GetObject(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector/main_thread_interface.h:49
(main_thread_) == nullptr
node::inspector::MainThreadHandle::~MainThreadHandle()
Call NodeTracing::end to stop tracing before updating the config
Tracing properties can only be changed through main thread sessions
At least one category should be enabled
node.async
node.bootstrap
node.fs.sync
node.perf
node.perf.usertiming
node.perf.timerify
{"method":"NodeTracing.dataCollected","params":
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/inspector/worker_agent.cc:88
(manager) != nullptr
void node::inspector::protocol::WorkerAgent::Wire(node::inspector::protocol::UberDispatcher *)
Worker 
expected argument args[0] to be a connection object
_handle
expected object for _handle.As<Object>() to contain integer member fd
expected object for _conn to contain string member remoteAddress
remoteAddress
expected object for _conn to contain integer member remotePort
remotePort
expected object for _conn to contain integer member bufferSize
expected object for arg0 to contain string member url
expected object for arg0 to contain string member method
expected object for arg0 to contain object member headers
headers
expected object for request to contain string member headers
expected argument args[1] to be a connection object
expected object for arg0 to contain string member _header
_header
expected object for _conn to contain integer member fd
expected object for _conn to contain string member host
expected object for _conn to contain integer member port
DTRACE_NET_SERVER_CONNECTION
DTRACE_NET_STREAM_END
DTRACE_HTTP_SERVER_REQUEST
DTRACE_HTTP_SERVER_RESPONSE
DTRACE_HTTP_CLIENT_REQUEST
DTRACE_HTTP_CLIENT_RESPONSE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_dtrace.cc
dtrace
OSSL_
SYS_
RSA_
EVP_
BUF_
OBJ_
PEM_
DSA_
X509_
ASN1_
CONF_
CRYPTO_
SSL_
BIO_
PKCS7_
X509V3_
PKCS12_
RAND_
DSO_
ENGINE_
OCSP_
COMP_
ECDSA_
ECDH_
OSSL_STORE_
FIPS_
CMS_
HMAC_
ASYNC_
KDF_
SM2_
USER_
ERR_%s%s%s
SecureContext
init
setKey
setCert
addCACert
addCRL
addRootCerts
setCipherSuites
setCiphers
setECDHCurve
setDHParam
setMaxProto
setMinProto
getMaxProto
getMinProto
setOptions
setSessionIdContext
setSessionTimeout
close
loadPKCS12
setClientCertEngine
getTicketKeys
setTicketKeys
setFreeListLength
enableTicketKeyCallback
getCertificate
getIssuer
kTicketKeyReturnIndex
kTicketKeyHMACIndex
kTicketKeyAESIndex
kTicketKeyNameIndex
kTicketKeyIVIndex
_external
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:545
static void node::crypto::SecureContext::Init(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:546
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:547
args[2]->IsInt32()
SSLv2_method
SSLv2 methods disabled
SSLv2_server_method
SSLv2_client_method
SSLv3_method
SSLv3 methods disabled
SSLv3_server_method
SSLv3_client_method
SSLv23_method
SSLv23_server_method
SSLv23_client_method
TLS_method
TLS_server_method
TLS_client_method
TLSv1_method
TLSv1_server_method
TLSv1_client_method
TLSv1_1_method
TLSv1_1_server_method
TLSv1_1_client_method
TLSv1_2_method
TLSv1_2_server_method
TLSv1_2_client_method
Unknown method: 
Error generating ticket keys
Private key argument is mandatory
Only private key and pass phrase are expected
Pass phrase must be a string
PEM_read_bio_PrivateKey
SSL_CTX_use_PrivateKey
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:764
!*issuer_
int node::crypto::SSL_CTX_use_certificate_chain(SSL_CTX *, node::crypto::X509Pointer &&, struct stack_st_X509 *, node::crypto::X509Pointer *, node::crypto::X509Pointer *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:765
!*cert
Certificate argument is mandatory
SSL_CTX_use_certificate_chain
CA certificate argument is mandatory
CRL argument is mandatory
Failed to parse CRL
Warning: Ignoring extra certs from `%s`, load failed: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1109
static void node::crypto::SecureContext::SetCipherSuites(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1110
Failed to set ciphers
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1131
static void node::crypto::SecureContext::SetCiphers(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1132
ECDH curve name argument is mandatory
ECDH curve name must be a string
auto
Failed to set ECDH curve
DH argument is mandatory
DH parameter is less than 1024 bits
DH parameter is less than 2048 bits
Error setting temp DH parameter
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1221
static void node::crypto::SecureContext::SetMinProto(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1222
args[0]->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1226
SSL_CTX_ctrl(sc->ctx_.get(), 123, version, __null)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1234
static void node::crypto::SecureContext::SetMaxProto(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1235
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1239
SSL_CTX_ctrl(sc->ctx_.get(), 124, version, __null)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1247
(args.Length()) == (0)
static void node::crypto::SecureContext::GetMinProto(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1259
static void node::crypto::SecureContext::GetMaxProto(const FunctionCallbackInfo<v8::Value> &)
Options must be an integer value
Session ID context argument is mandatory
Session ID context must be a string
SSL_CTX_set_session_id_context error
Session timeout must be a 32-bit integer
PFX certificate argument is mandatory
Unable to load BIO
Pass phrase must be a buffer
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1429
static void node::crypto::SecureContext::SetClientCertEngine(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1430
Multiple calls to SetClientCertEngine are not allowed
Ticket keys argument is mandatory
Ticket keys must be a buffer
Ticket keys length must be 48 bytes
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3256
str->IsString()
static node::crypto::ByteSource node::crypto::ByteSource::FromString(node::Environment *, Local<v8::String>, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3267
buffer->IsArrayBufferView()
static node::crypto::ByteSource node::crypto::ByteSource::FromBuffer(Local<v8::Value>, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3286
handle->IsObject()
static node::crypto::ByteSource node::crypto::ByteSource::FromSymmetricKeyObject(Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3288
getSymmetricKeySize
getAsymmetricKeyType
export
KeyObject
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3625
(key_type) != (kKeyTypeSecret)
static MaybeLocal<v8::Object> node::crypto::KeyObject::Create(node::Environment *, node::crypto::KeyType, const node::crypto::ManagedEVPPKey &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3635
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3644
(key_type_) != (kKeyTypeSecret)
node::crypto::ManagedEVPPKey node::crypto::KeyObject::GetAsymmetricKey() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3649
(key_type_) == (kKeyTypeSecret)
const char *node::crypto::KeyObject::GetSymmetricKey() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3654
size_t node::crypto::KeyObject::GetSymmetricKeySize() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3659
args.IsConstructCall()
static void node::crypto::KeyObject::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3660
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3680
static void node::crypto::KeyObject::Init(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3681
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3685
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3694
(args.Length()) == (4)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3703
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3708
(this->key_type_) == (kKeyTypeSecret)
void node::crypto::KeyObject::InitSecret(v8::Local<v8::ArrayBufferView>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3721
(this->key_type_) == (kKeyTypePublic)
void node::crypto::KeyObject::InitPublic(const node::crypto::ManagedEVPPKey &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3722
pkey
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3727
(this->key_type_) == (kKeyTypePrivate)
void node::crypto::KeyObject::InitPrivate(const node::crypto::ManagedEVPPKey &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3728
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3733
(this->key_type_) != (kKeyTypeSecret)
Local<v8::Value> node::crypto::KeyObject::GetAsymmetricKeyType() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3780
(offset) == (static_cast<unsigned int>(args.Length()))
static void node::crypto::KeyObject::Export(const v8::FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3783
(key->key_type_) == (kKeyTypePrivate)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3789
initiv
update
final
setAutoPadding
getAuthTag
setAuthTag
setAAD
CipherBase
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3834
static void node::crypto::CipherBase::New(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3847
!ctx_
void node::crypto::CipherBase::CommonInit(const char *, const EVP_CIPHER *, const unsigned char *, int, const unsigned char *, int, unsigned int)
Failed to initialize cipher
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3862
(iv_len) >= (0)
Invalid key length
Unknown cipher
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3907
(key_len) != (0)
void node::crypto::CipherBase::Init(const char *, const char *, int, unsigned int)
Use Cipheriv for counter mode of %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3929
static void node::crypto::CipherBase::Init(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3940
args[2]->IsInt32() && args[2].As<Int32>()->Value() == -1
Missing IV for cipher %s
Invalid IV length
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3978
has_iv
void node::crypto::CipherBase::InitIv(const char *, const unsigned char *, int, const unsigned char *, int, unsigned int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4005
(args.Length()) >= (4)
static void node::crypto::CipherBase::InitIv(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4013
args[2]->IsArrayBufferView()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4024
args[3]->IsInt32() && args[3].As<Int32>()->Value() == -1
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4043
IsAuthenticatedMode()
bool node::crypto::CipherBase::InitAuthenticated(const char *, int, unsigned int)
Invalid authentication tag length: %u
authTagLength required for %s
Invalid authentication tag length
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4096
iv_len >= 7 && iv_len <= 13
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4108
ctx_
bool node::crypto::CipherBase::CheckCCMMessageLength(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4109
(EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(ctx_.get())) & 0xF0007) == 0x7
Message exceeds maximum size
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4122
bool node::crypto::CipherBase::IsAuthenticatedMode() const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4168
IsSupportedAuthenticatedMode(cipher->ctx_.get())
static void node::crypto::CipherBase::SetAuthTag(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4169
(cipher->auth_tag_len_) != (kNoAuthTagLength)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4182
(cipher->auth_tag_len_) <= (sizeof(cipher->auth_tag_))
plaintextLength required for CCM mode with AAD
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4247
static void node::crypto::CipherBase::SetAAD(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4248
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4273
MaybePassAuthTagToOpenSSL()
CipherBase::UpdateResult node::crypto::CipherBase::Update(const char *, int, node::AllocatedBuffer *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4295
(static_cast<size_t>(buf_len)) <= (out->size())
Trying to add data in unsupported state
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4337
out.data() != nullptr || out.size() == 0
static void node::crypto::CipherBase::Update(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4394
mode == 0x6
bool node::crypto::CipherBase::Final(node::AllocatedBuffer *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4399
(1) == (EVP_CIPHER_CTX_ctrl(ctx_.get(), 0x10, auth_tag_len_, reinterpret_cast<unsigned char*>(auth_tag_)))
Unsupported state
Unsupported state or unable to authenticate data
digest
Hmac
Unknown message digest
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4527
static void node::crypto::Hmac::HmacDigest(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4545
Hash
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4574
args[1]->IsUint32()
static void node::crypto::Hash::New(const FunctionCallbackInfo<v8::Value> &)
Digest method not supported
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4699
static void node::crypto::Hash::HashDigest(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4708
(mdctx_) == nullptr
SignBase::Error node::crypto::SignBase::Init(const char *)
dss1
DSS1
SHA1
Not initialised
EVP_SignInit_ex failed
EVP_SignUpdate failed
PEM_read_bio_PrivateKey failed
PEM_read_bio_PUBKEY failed
sign
Sign
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4935
args[offset]->IsInt32()
static void node::crypto::Sign::SignFinal(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4941
args[offset + 1]->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5006
args[offset + 2]->IsInt32()
void node::crypto::SignOneShot(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5012
args[offset + 3]->IsInt32()
verify
Verify
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5138
static void node::crypto::Verify::VerifyFinal(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5144
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5181
void node::crypto::VerifyOneShot(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5187
args[offset + 4]->IsInt32()
DiffieHellman
DiffieHellmanGroup
Group name argument is mandatory
Group name must be a string
Initialization failed
Unknown group
Key generation failed
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5454
(size) >= (0)
static void node::crypto::DiffieHellman::GenerateKeys(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5458
(size) == (BN_bn2binpad( pub_key, reinterpret_cast<unsigned char*>(data.data()), size))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5475
static void node::crypto::DiffieHellman::GetField(const FunctionCallbackInfo<v8::Value> &, const BIGNUM *(*)(const DH *), const char *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5479
(size) == (BN_bn2binpad(num, reinterpret_cast<unsigned char*>(data.data()), size))
p is null
g is null
No public key - did you forget to generate one?
No private key - did you forget to generate one?
Other party's public key argument is mandatory
Other party's public key must be a buffer
Invalid Key
Supplied key is too small
Supplied key is too large
Invalid key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5567
static void node::crypto::DiffieHellman::ComputeSecret(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5574
(ret.size()) > (static_cast<size_t>(size))
%s argument is mandatory
%s must be a buffer
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5604
(num) != nullptr
static void node::crypto::DiffieHellman::SetKey(const FunctionCallbackInfo<v8::Value> &, int (*)(DH *, BIGNUM *), const char *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5605
(1) == (set_field(dh->dh_.get(), num))
Public key
Private key
generateKeys
computeSecret
getPublicKey
getPrivateKey
setPublicKey
setPrivateKey
ECDH
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5667
static void node::crypto::ECDH::New(const FunctionCallbackInfo<v8::Value> &)
First argument should be a valid curve name
Failed to create EC_KEY using curve name
Failed to generate EC_KEY
Failed to allocate EC_POINT for a public key
Data must be a buffer
Invalid key pair
ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY
Failed to compute ECDH key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5762
static void node::crypto::ECDH::GetPublicKey(const FunctionCallbackInfo<v8::Value> &)
Failed to get ECDH public key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5772
args[0]->IsUint32()
Failed to get ECDH private key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5798
(size) == (BN_bn2binpad(b, reinterpret_cast<unsigned char*>(out.data()), size))
static void node::crypto::ECDH::GetPrivateKey(const FunctionCallbackInfo<v8::Value> &)
Private key must be a buffer
Failed to convert Buffer to BN
Private key is not valid for specified curve.
Failed to convert BN to a private key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5838
(priv_key) != nullptr
static void node::crypto::ECDH::SetPrivateKey(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5841
Failed to generate ECDH public key
Failed to set generated public key
Public key must be a buffer
Failed to convert Buffer to EC_POINT
Failed to set EC_POINT as the public key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5877
group_
bool node::crypto::ECDH::IsKeyValidForCurve(const node::crypto::BignumPointer &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5878
private_key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5885
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5967
void node::crypto::RandomBytes(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5968
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5969
args[2]->IsUint32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5970
args[3]->IsObject() || args[3]->IsUndefined()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5973
(offset + size) >= (offset)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5974
(offset + size) <= (Buffer::Length(args[0]))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6112
void node::crypto::Scrypt(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6113
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6114
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6115
args[3]->IsUint32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6116
args[4]->IsUint32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6117
args[5]->IsUint32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6118
args[6]->IsNumber()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6119
args[7]->IsObject() || args[7]->IsUndefined()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6450
void node::crypto::GenerateKeyPairRSA(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6452
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6462
void node::crypto::GenerateKeyPairRSAPSS(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6464
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6469
args[2]->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6478
args[3]->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6487
args[4]->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6498
void node::crypto::GenerateKeyPairDSA(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6500
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6508
void node::crypto::GenerateKeyPairEC(const FunctionCallbackInfo<v8::Value> &)
Invalid ECDH curve name
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6518
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6521
param_encoding == 0x001 || param_encoding == 0x000
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6528
void node::crypto::GenerateKeyPairNid(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6540
void node::crypto::GetSSLCiphers(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6543
tls_aes_256_gcm_sha384
tls_chacha20_poly1305_sha256
tls_aes_128_gcm_sha256
tls_aes_128_ccm_8_sha256
tls_aes_128_ccm_sha256
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6665
(input.data()) != nullptr
void node::crypto::VerifySpkac(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6706
void node::crypto::ExportPublicKey(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6753
void node::crypto::ConvertKey(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6754
Failed to get EC_GROUP
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6779
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6795
(buf1.length()) == (buf2.length())
void node::crypto::TimingSafeEqual(const FunctionCallbackInfo<v8::Value> &)
openssl config failed: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6861
args.Length() >= 2 && args[0]->IsString()
void node::crypto::SetEngine(const FunctionCallbackInfo<v8::Value> &)
certVerifySpkac
certExportPublicKey
certExportChallenge
getRootCertificates
isExtraRootCertsFileLoaded
ECDHConvertKey
setEngine
pbkdf2
generateKeyPairRSA
generateKeyPairRSAPSS
generateKeyPairDSA
generateKeyPairEC
generateKeyPairNid
EVP_PKEY_ED25519
EVP_PKEY_ED448
EVP_PKEY_X25519
EVP_PKEY_X448
OPENSSL_EC_NAMED_CURVE
OPENSSL_EC_EXPLICIT_CURVE
kKeyEncodingPKCS1
kKeyEncodingPKCS8
kKeyEncodingSPKI
kKeyEncodingSEC1
kKeyFormatDER
kKeyFormatPEM
kKeyTypeSecret
kKeyTypePublic
kKeyTypePrivate
randomBytes
signOneShot
verifyOneShot
timingSafeEqual
getSSLCiphers
getCiphers
getHashes
getCurves
publicEncrypt
privateDecrypt
privateEncrypt
publicDecrypt
scrypt
getPeerCertificate
getFinished
getPeerFinished
getSession
setSession
loadSession
isSessionReused
verifyError
getCipher
endParser
certCbDone
renegotiate
getTLSTicket
newSessionDone
setOCSPResponse
requestOCSP
getEphemeralKeyInfo
getProtocol
setMaxSendFragment
getALPNNegotiatedProtocol
setALPNProtocols
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2904
(SSL_set_SSL_CTX(ssl_.get(), sc->ctx_.get())) == (sc->ctx_.get())
void node::crypto::SSLWrap<node::TLSWrap>::SetSNIContext(node::crypto::SecureContext *) [Base = node::TLSWrap]
no error
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:368
!exception_v.IsEmpty()
MaybeLocal<v8::Value> node::crypto::CryptoErrorVector::ToException(node::Environment *, Local<v8::String>) const
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:371
exception_v->IsObject()
src/util.h:361
void node::MaybeStackBuffer<v8::Local<v8::Value>, 128>::AllocateSufficientStorage(size_t) [T = v8::Local<v8::Value>, kStackStorageSize = 128]
src/util-inl.h:373
T *node::Realloc(T *, size_t) [T = v8::Local<v8::Value>]
(b) == (ret / a)
(length) <= (capacity())
(index) < (length())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:436
(status) >= (0)
void node::crypto::CheckEntropy()
src/base_object-inl.h:37
src/base_object-inl.h:38
src/env-inl.h:1110
src/base_object-inl.h:85
ERR_TLS_INVALID_PROTOCOL_METHOD
ERR_INVALID_ARG_TYPE
-----BEGIN CERTIFICATE-----
MIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkGA1UEBhMC
QkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jvb3QgQ0ExGzAZBgNV
BAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAwMDBaFw0yODAxMjgxMjAwMDBa
MFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMRAwDgYDVQQLEwdS
b290IENBMRswGQYDVQQDExJHbG9iYWxTaWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQDaDuaZjc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtI
K+6NiY6arymAZavpxy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCO
XkNz8kHp1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG
snUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJU26Qzns3
dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N89iFo7+ryUp9/k5DP
AgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRg
e2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0BAQUFAAOCAQEA1nPnfE920I2/7LqivjTF
KDK1fPxsnCwrvQmeU79rXqoRSLblCKOzyj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY7
76BQVvnGCv04zcQLcFGUl5gE38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9
LhJIZJrglfCm7ymPAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr
+WymXUadDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME
HMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDujCCAqKgAwIBAgILBAAAAAABD4Ym5g0wDQYJKoZIhvcNAQEFBQAwTDEgMB4GA1UECxMX
R2xvYmFsU2lnbiBSb290IENBIC0gUjIxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNVBAMT
Ckdsb2JhbFNpZ24wHhcNMDYxMjE1MDgwMDAwWhcNMjExMjE1MDgwMDAwWjBMMSAwHgYDVQQL
ExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMjETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UE
AxMKR2xvYmFsU2lnbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKbPJA6+Lm8o
mUVCxKs+IVSbC9N/hHD6ErPLv4dfxn+G07IwXNb9rfF73OX4YJYJkhD10FPe+3t+c4isUoh7
SqbKSaZeqKeMWhG8eoLrvozps6yWJQeXSpkqBy+0Hne/ig+1AnwblrjFuTosvNYSuetZfeLQ
BoZfXklqtTleiDTsvHgMCJiEbKjNS7SgfQx5TfC4LcshytVsW33hoCmEofnTlEnLJGKRILzd
C9XZzPnqJworc5HGnRusyMvo4KD0L5CLTfuwNhv2GXqF4G3yYROIXJ/gkwpRl4pazq+r1feq
CapgvdzZX99yqWATXgAByUr6P6TqBwMhAo6CygPCm48CAwEAAaOBnDCBmTAOBgNVHQ8BAf8E
BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUm+IHV2ccHsBqBt5ZtJot39wZhi4w
NgYDVR0fBC8wLTAroCmgJ4YlaHR0cDovL2NybC5nbG9iYWxzaWduLm5ldC9yb290LXIyLmNy
bDAfBgNVHSMEGDAWgBSb4gdXZxwewGoG3lm0mi3f3BmGLjANBgkqhkiG9w0BAQUFAAOCAQEA
mYFThxxol4aR7OBKuEQLq4GsJ0/WwbgcQ3izDJr86iw8bmEbTUsp9Z8FHSbBuOmDAGJFtqkI
k7mpM0sYmsL4h4hO291xNBrBVNpGP+DTKqttVCL1OmLNIG+6KYnX3ZHu01yiPqFbQfXf5WRD
LenVOavSot+3i9DAgBkcRcAtjOj4LaR0VknFBbVPFd5uRHg5h6h+u/N5GJG79G+dwfCMNYxd
AfvDbbnvRG15RjF+Cv6pgsH/76tuIMRQyV+dTZsXjAzlAcmgQWpzU/qlULRuJQ/7TBj0/VLZ
jmmx6BEP3ojY+x1J96relc8geMJgEtslQIxq/H5COEBkEveegeGTLg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0
IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVibGljIFByaW1h
cnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3
MTYyMzU5NTlaMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAd
BgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlT
aWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu
IENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMu6nFL8eB8aHm8bN3O9+MlrlBIwT/A2
R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1EUGO+i2tKmFZpGcmTNDovFJbcCAEWNF6
yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGukxUccLwgTS8Y3pKI6GyFVxEa6X7jJhFU
okWWVYPKMIno3Nij7SqAP395ZVc+FSBmCC+Vk7+qRy+oRpfwEuL+wgorUeZ25rdGt+INpsyo
w0xZVYnm6FNcHOqd8GIWC6fJXwzw3sJ2zq/3avL6QaaiMxTJ5Xpj055iN9WFZZ4O5lMkdBte
HRJTW8cs54NJOxWuimi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAERSWwauSCPc/L8my
/uRan2Te2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5fj267Cz3qWhMe
DGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC/Y4wjylG
sB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565pF4ErWjfJXir0xuKh
XFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGtTxzhT5yvDwyd93gN2PQ1VoDa
t20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVz
dC5uZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJl
Zi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0
ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4
KTAeFw05OTEyMjQxNzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0
Lm5ldDFAMD4GA1UECxQ3d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVm
LiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRl
ZDEzMDEGA1UEAxMqRW50cnVzdC5uZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgp
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtK
TY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOLGp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/EC
DNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSrhRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ
/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzWnLLPKQP5L6RQstRIzgUyVYr9smRM
DuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUiVBcAkCaTvA5JaJG/+EfTnZVC
wQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/
BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJKoZIhvcNAQEFBQAD
ggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPyT/4xmf3IDExo
U8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6YfzX1XEC+b
BAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZyxKTJ1wD
LW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8eS9e
nNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVE=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJRTESMBAG
A1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYDVQQDExlCYWx0aW1v
cmUgQ3liZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoXDTI1MDUxMjIzNTkwMFowWjEL
MAkGA1UEBhMCSUUxEjAQBgNVBAoTCUJhbHRpbW9yZTETMBEGA1UECxMKQ3liZXJUcnVzdDEi
MCAGA1UEAxMZQmFsdGltb3JlIEN5YmVyVHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAKMEuyKrmD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2ygu
zmKiYv60iNoS6zjrIZ3AQSsBUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo
6vWrJYeKmpYcqWe4PwzV9/lSEy/CG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSu
XmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9XbIGevOF6uvUA65ehD5f/xXtabz5OTZydc93Uk3z
yZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjprl3RjM71oGDHweI12v/yejl0qhqdNkNwnGjkC
AwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoIVDaGezq1BE3wMBIGA1UdEwEB/wQIMAYB
Af8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQCFDF2O5G9RaEIFoN27
TyclhAO992T9Ldcw46QQF+vaKSm2eT929hkTI7gQCvlYpNRhcL0EYWoSihfVCr3FvDB81ukM
JY2GQE/szKN+OMY3EU/t3WgxjkzSswF07r51XgdIGn9w/xZchMB5hbgF/X++ZRGjD8ACtPhS
NzkE1akxehi/oCr0Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsaY71k5h+3zvDyny67
G7fyUIhzksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9HRCwBXbsdtTLS
R9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEUMBIGA1UE
ChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFsIFRUUCBOZXR3b3Jr
MSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290MB4XDTAwMDUzMDEwNDgzOFoX
DTIwMDUzMDEwNDgzOFowbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMSYw
JAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1
c3QgRXh0ZXJuYWwgQ0EgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3
GjPm8gAELTngTlvtH7xsD821+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCw
SXrbLpX9uMq/NzgtHj6RQa1wVsfwTz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzX
mk6vBbOmcZSccbNQYArHE504B4YCqOmoaSYYkKtMsE8jqzpPhNjfzp/haW+710LXa0Tkx63u
bUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy2xSoRcRdKn23tNbE7qzNE0S3ySvdQwAl+mG5
aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv77+ldU9U0WicCAwEAAaOB3DCB2TAdBgNV
HQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYDVR0PBAQDAgEGMA8GA1UdEwEB/wQFMAMB
Af8wgZkGA1UdIwSBkTCBjoAUrb2YejS0Jvf6xCZU7wO94CTLVBqhc6RxMG8xCzAJBgNVBAYT
AlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3QgRXh0ZXJuYWwg
VFRQIE5ldHdvcmsxIjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3SCAQEwDQYJ
KoZIhvcNAQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZlj7DYd7usQWxH
YINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw56wwCURQt
jr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvCNr4TDea9Y355e6cJ
DUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEXc4g/VhsxOBi0cQ+azcgOno4u
G+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5amnkPIAou1Z5jJh5VkpTYghdae9C8x49O
hgQ=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMCVVMxFjAU
BgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0Lm5ldC9DUFMgaXMg
aW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMWKGMpIDIwMDYgRW50cnVzdCwg
SW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4X
DTA2MTEyNzIwMjM0MloXDTI2MTEyNzIwNTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQK
Ew1FbnRydXN0LCBJbmMuMTkwNwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29y
cG9yYXRlZCBieSByZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4x
LTArBgNVBAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBALaVtkNC+sZtKm9I35RMOVcF7sN5EUFoNu3s/poB
j6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYszA9u3g3s+IIRe7bJWKKf44LlAcTfFy0cOlypo
wCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOwwCj0Yzfv9KlmaI5UXLEWeH25DeW0MXJj+
SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGIrb68j6xSlkuqUY3kEzEZ6E5Nn9uss2rV
vDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi94DkZfs0Nw4pgHBNrziGLp5/V6+eF67rHMsoIV+2
HNjnogQi+dPa2MsCAwEAAaOBsDCBrTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zArBgNVHRAEJDAigA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1MzQyWjAfBgNVHSME
GDAWgBRokORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DHhmak8fdLQ/uE
vW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUAA4IBAQCT
1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9tO1KzKtvn1ISMY/YP
yyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6ZuaAGAT/3B+XxFNSRuzFVJ7yVTa
v52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE
2jTSW3iDVuycNsMm4hH2Z0kdkquM++v/eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPc
j2A781q0tHuu2guQOHXvgR1m0vdXcDazv/wor3ElhVsT/h5/WrQ8
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDVDCCAjygAwIBAgIDAjRWMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVTMRYwFAYD
VQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9iYWwgQ0EwHhcNMDIw
NTIxMDQwMDAwWhcNMjIwNTIxMDQwMDAwWjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2Vv
VHJ1c3QgSW5jLjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEH
CIjaWC9mOSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIu
T8rxh0PBFpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6cJmTM386D
GXHKTubU1XupGc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmRCw7+OC7RHQWa9k0+
bw8HHa8sHo9gOeL6NlMTOdReJivbPagUvTLrGAMoUgRx5aszPeE4uwc2hGKceeoWMPRfwCvo
cWvk+QIDAQABo1MwUTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTAephojYn7qwVkDBF9
qn1luMrMTjAfBgNVHSMEGDAWgBTAephojYn7qwVkDBF9qn1luMrMTjANBgkqhkiG9w0BAQUF
AAOCAQEANeMpauUvXVSOKVCUn5kaFOSPeCpilKInZ57QzxpeR+nBsqTP3UEaBU6bS+5Kb1VS
syShNwrrZHYqLizz/Tt1kL/6cdjHPTfStQWVYrmm3ok9Nns4d0iXrKYgjy6myQzCsplFAMfO
EVEiIuCl6rYVSAlk6l5PdPcFPseKUgzbFbS9bZvlxrFUaKnjaZC2mqUPuLk/IH2uSrW4nOQd
tqvmlKXBx4Ot2/Unhw4EbNX/3aBd7YdStysVAq45pmp06drE57xNNB6pXE0zX5IJL4hmXXeX
xx12E6nV5fEWCRE11azbJHFwLJhWC9kXtNHjUStedejV0NxPNO3CBWaAocvmMw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFaDCCA1CgAwIBAgIBATANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEWMBQGA1UE
ChMNR2VvVHJ1c3QgSW5jLjEeMBwGA1UEAxMVR2VvVHJ1c3QgVW5pdmVyc2FsIENBMB4XDTA0
MDMwNDA1MDAwMFoXDTI5MDMwNDA1MDAwMFowRTELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdl
b1RydXN0IEluYy4xHjAcBgNVBAMTFUdlb1RydXN0IFVuaXZlcnNhbCBDQTCCAiIwDQYJKoZI
hvcNAQEBBQADggIPADCCAgoCggIBAKYVVaCjxuAfjJ0hUNfBvitbtaSeodlyWL0AG0y/YckU
HUWCq8YdgNY96xCcOq9tJPi8cQGeBvV8Xx7BDlXKg5pZMK4ZyzBIle0iN430SppyZj6tlcDg
FgDgEB8rMQ7XlFTTQjOgNB0eRXbdT8oYN+yFFXoZCPzVx5zw8qkuEKmS5j1YPakWaDwvdSEY
fyh3peFhF7em6fgemdtzbvQKoiFs7tqqhZJmr/Z6a4LauiIINQ/PQvE1+mrufislzDoR5G2v
c7J2Ha3QsnhnGqQ5HFELZ1aD/ThdDc7d8Lsrlh/eezJS/R27tQahsiFepdaVaH/wmZ7cRQg+
59IJDTWU3YBOU5fXtQlEIGQWFwMCTFMNaN7VqnJNk22CDtucvc+081xdVHppCZbW2xHBjXWo
tM85yM48vCR85mLK4b19p71XZQvk/iXttmkQ3CgaRr0BHdCXteGYO8A3ZNY9lO4L4fUorgtW
v3GLIylBjobFS1J72HGrH4oVpjuDWtdYAVHGTEHZf9hBZ3KiKN9gg6meyHv8U3NyWfWTehd2
Ds735VzZC1U0oqpbtWpU5xPKV+yXbfReBi9Fi1jUIxaS5BZuKGNZMN9QAZxjiRqf2xeUgnA3
wySemkfWWspOqGmJch+RbNt+nhutxx9z3SxPGWX9f5NAEC7S8O08ni4oPmkmM8V7AgMBAAGj
YzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNq7LqqwDLiIJlF0XG0D08DYj3rWMB8G
A1UdIwQYMBaAFNq7LqqwDLiIJlF0XG0D08DYj3rWMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG
9w0BAQUFAAOCAgEAMXjmx7XfuJRAyXHEqDXsRh3ChfMoWIawC/yOsjmPRFWrZIRcaanQmjg8
+uUfNeVE44B5lGiku8SfPeE0zTBGi1QrlaXv9z+ZhP015s8xxtxqv6fXIwjhmF7DWgh2qaav
dy+3YL1ERmrvl/9zlcGO6JP7/TG37FcREUWbMPEaiDnBTzynANXH/KttgCJwpQzgXQQpAvvL
oJHRfNbDflDVnVi+QTjruXU8FdmbyUqDWcDaU/0zuzYYm4UPFd3uLax2k7nZAY1IEKj79TiG
8dsKxr2EoyNB3tZ3b4XUhRxQ4K5RirqNPnbiucon8l+f725ZDQbYKxek0nxru18UGkiPGkzn
s0ccjkxFKyDuSN/n3QmOGKjaQI2SJhFTYXNd673nxE0pN2HrrDktZy4W1vUAg4WhzH92xH3k
t0tm7wNFYGm2DFKWkoRepqO1pD4r2czYG0eq8kTaT/kD6PAUyz/zg97QwVTjt+gKN02LIFkD
MBmhLMi9ER/frslKxfMnZmaGrGiR/9nmUxwPi1xpZQomyB40w11Re9epnAahNt3ViZS82eQt
DF4JbAiXfKM9fJP/P6EUp8+1Xevb2xzEdt+Iub1FBZUbrvxGakyvSOPOrg/SfuvmbJxPgWp6
ZKy7PtXny3YuxadIwVyQD8vIP/rmMuGNG2+k5o7Y+SlIis5z/iw=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFbDCCA1SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBHMQswCQYDVQQGEwJVUzEWMBQGA1UE
ChMNR2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVyc2FsIENBIDIwHhcN
MDQwMzA0MDUwMDAwWhcNMjkwMzA0MDUwMDAwWjBHMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN
R2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVyc2FsIENBIDIwggIiMA0G
CSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCzVFLByT7y2dyxUxpZKeexw0Uo5dfR7cXFS6Gq
dHtXr0om/Nj1XqduGdt0DE81WzILAePb63p3NeqqWuDW6KFXlPCQo3RWlEQwAx5cTiuFJnSC
egx2oG9NzkEtoBUGFF+3Qs17j1hhNNwqCPkuwwGmIkQcTAeC5lvO0Ep8BNMZcyfwqph/Lq9O
64ceJHdqXbboW0W63MOhBW9Wjo8QJqVJwy7XQYci4E+GymC16qFjwAGXEHm9ADwSbSsVsaxL
se4YuU6W3Nx2/zu+z18DwPw76L5GG//aQMJS9/7jOvdqdzXQ2o3rXhhqMcceujwbKNZrVMaq
W9eiLBsZzKIC9ptZvTdrhrVtgrrY6slWvKk2WP0+GfPtDCapkzj4T8FdIgbQl+rhrcZV4IEr
KIM6+vR7IVEAvlI4zs1meaj0gVbi0IMJR1FbUGrP20gaXT73y/Zl92zxlfgCOzJWgjl6W70v
iRu/obTo/3+NjN8D8WBOWBFM66M/ECuDmgFz2ZRthAAnZqzwcEAJQpKtT5MNYQlRJNiS1QuU
YbKHsu3/mjX/hVTK7URDrBs8FmtISgocQIgfksILAAX/8sgCSqSqqcyZlpwvWOB94b67B9xf
BHJcMTTD7F8t4D1kkCLm0ey4Lt1ZrtmhN79UNdxzMk+MBB4zsslG8dhcyFVQyWi9qLo2CQID
AQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR281Xh+qQ2+/CfXGJx7Tz0RzgQ
KzAfBgNVHSMEGDAWgBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAOBgNVHQ8BAf8EBAMCAYYwDQYJ
KoZIhvcNAQEFBQADggIBAGbBxiPz2eAubl/oz66wsCVNK/g7WJtAJDday6sWSf+zdXkzoS9t
cBc0kf5nfo/sm+VegqlVHy/c1FEHEv6sFj4sNcZj/NwQ6w2jqtB8zNHQL1EuxBRa3ugZ4T7G
zKQp5y6EqgYweHZUcyiYWTjgAA1i00J9IZ+uPTqM1fp3DRgrFg5fNuH8KrUwJM/gYwx7WBr+
mbpCErGR9Hxo4sjoryzqyX6uuyo9DRXcNJW2GHSoag/HtPQTxORb7QrSpJdMKu0vbBKJPfEn
cKpqA1Ihn0CoZ1Dy81of398j9tx4TuaYT1U6U+Pv8vSfx3zYWK8pIpe44L2RLrB27FcRz+8p
RPPphXpgY+RdM4kX2TGq2tbzGDVyz4crL2MjhF2EjD9XoIj8mZEoJmmZ1I+XRL6O1UixpCgp
8RW04eWe3fiPpm8m1wk8OhwRDqZsN/etRIcsKMfYdIKz0G9KV7s1KSegi+ghp4dkNl3M2Bas
x7InQJJVOCiNUW7dFGdTbHFcJoRNdVq2fmBWqU2t+5sel/MN2dKXVHfaPRK34B7vCAas+YWH
6aLcr34YEoP9VhdBLtUpgn2Z9DH2canPLAEnpQW5qrJITirvn5NSUZU8UnOOVkwXQMAJKOSL
akhT2+zNVVXxxvjpoixMptEmX36vWkzaH6byHCx+rgIW0lbQL1dTR+iS
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEbMBkGA1UE
CAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21v
ZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTA0
MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdy
ZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENB
IExpbWl0ZWQxITAfBgNVBAMMGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686td
UIoWMQuaBtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe
3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4YgNW8Ioa
E+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZRrOme9Hg6jc8P2ULi
mAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cmez6KJcfA3Z3mNWgQIJ2P2N7S
w4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQUoBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYD
VR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDov
L2NybC5jb21vZG9jYS5jb20vQUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0
dHA6Ly9jcmwuY29tb2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG
9w0BAQUFAAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q
GE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLzRt0vxuBq
w8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2G9w84FoVxp7Z8VlI
MCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsil2D4kF501KKaU73yqWjgom7C
12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF0DCCBLigAwIBAgIEOrZQizANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJCTTEZMBcG
A1UEChMQUXVvVmFkaXMgTGltaXRlZDElMCMGA1UECxMcUm9vdCBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eTEuMCwGA1UEAxMlUXVvVmFkaXMgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
eTAeFw0wMTAzMTkxODMzMzNaFw0yMTAzMTcxODMzMzNaMH8xCzAJBgNVBAYTAkJNMRkwFwYD
VQQKExBRdW9WYWRpcyBMaW1pdGVkMSUwIwYDVQQLExxSb290IENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MS4wLAYDVQQDEyVRdW9WYWRpcyBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv2G1lVO6V/z68mcLOhrfEYBklbTR
vM16z/Ypli4kVEAkOPcahdxYTMukJ0KX0J+DisPkBgNbAKVRHnAEdOLB1Dqr1607BxgFjv2D
rOpm2RgbaIr1VxqYuvXtdj182d6UajtLF8HVj71lODqV0D1VNk7feVcxKh7YWWVJWCCYfqtf
fp/p1k3sg3Spx2zY7ilKhSoGFPlU5tPaZQeLYzcS19Dsw3sgQUSj7cugF+FxZc4dZjH3dgEZ
yH0DWLaVSR2mEiboxgx24ONmy+pdpibu5cxfvWenAScOospUxbF6lR1xHkopigPcakXBpBle
bzbNw6Kwt/5cOOJSvPhEQ+aQuwIDAQABo4ICUjCCAk4wPQYIKwYBBQUHAQEEMTAvMC0GCCsG
AQUFBzABhiFodHRwczovL29jc3AucXVvdmFkaXNvZmZzaG9yZS5jb20wDwYDVR0TAQH/BAUw
AwEB/zCCARoGA1UdIASCAREwggENMIIBCQYJKwYBBAG+WAABMIH7MIHUBggrBgEFBQcCAjCB
xxqBxFJlbGlhbmNlIG9uIHRoZSBRdW9WYWRpcyBSb290IENlcnRpZmljYXRlIGJ5IGFueSBw
YXJ0eSBhc3N1bWVzIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFuZGFy
ZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIGNlcnRpZmljYXRpb24gcHJhY3RpY2Vz
LCBhbmQgdGhlIFF1b1ZhZGlzIENlcnRpZmljYXRlIFBvbGljeS4wIgYIKwYBBQUHAgEWFmh0
dHA6Ly93d3cucXVvdmFkaXMuYm0wHQYDVR0OBBYEFItLbe3TKbkGGew5Oanwl4Rqy+/fMIGu
BgNVHSMEgaYwgaOAFItLbe3TKbkGGew5Oanwl4Rqy+/foYGEpIGBMH8xCzAJBgNVBAYTAkJN
MRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMSUwIwYDVQQLExxSb290IENlcnRpZmljYXRp
b24gQXV0aG9yaXR5MS4wLAYDVQQDEyVRdW9WYWRpcyBSb290IENlcnRpZmljYXRpb24gQXV0
aG9yaXR5ggQ6tlCLMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAitQUtf70
mpKnGdSkfnIYj9lofFIk3WdvOXrEql494liwTXCYhGHoG+NpGA7O+0dQoE7/8CQfvbLO9Sf8
7C9TqnN7Az10buYWnuulLsS/VidQK2K6vkscPFVcQR0kvoIgR13VRH56FmjffU1RcHhXHTMe
/QKZnAzNCgVPx7uOpHX6Sm2xgI4JVrmcGmD+XcHXetwReNDWXcG31a0ymQM6isxUJTkxgXsT
IlG6Rmyhu576BGxJJnSP0nPrzDCi5upZIof4l/UO/erMkqQWxFIY6iHOsfHmhIHluqmGKPJD
Wl0Snawe2ajlCmqnf6CHKc/yiU3U7MXi5nrQNiOKSnQ2+Q==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFtzCCA5+gAwIBAgICBQkwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0xGTAXBgNV
BAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJvb3QgQ0EgMjAeFw0w
NjExMjQxODI3MDBaFw0zMTExMjQxODIzMzNaMEUxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBR
dW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9WYWRpcyBSb290IENBIDIwggIiMA0GCSqG
SIb3DQEBAQUAA4ICDwAwggIKAoICAQCaGMpLlA0ALa8DKYrwD4HIrkwZhR0In6spRIXzL4Gt
Mh6QRr+jhiYaHv5+HBg6XJxgFyo6dIMzMH1hVBHL7avg5tKifvVrbxi3Cgst/ek+7wrGsxDp
3MJGF/hd/aTa/55JWpzmM+Yklvc/ulsrHHo1wtZn/qtmUIttKGAr79dgw8eTvI02kfN/+NsR
E8Scd3bBrrcCaoF6qUWD4gXmuVbBlDePSHFjIuwXZQeVikvfj8ZaCuWw419eaxGrDPmF60Tp
+ARz8un+XJiM9XOva7R+zdRcAitMOeGylZUtQofX1bOQQ7dsE/He3fbE+Ik/0XX1ksOR1YqI
0JDs3G3eicJlcZaLDQP9nL9bFqyS2+r+eXyt66/3FsvbzSUr5R/7mp/iUcw6UwxI5g69ybR2
BlLmEROFcmMDBOAENisgGQLodKcftslWZvB1JdxnwQ5hYIizPtGo/KPaHbDRsSNU30R2be1B
2MGyIrZTHN81Hdyhdyox5C315eXbyOD/5YDXC2Og/zOhD7osFRXql7PSorW+8oyWHhqPHWyk
YTe5hnMz15eWniN9gqRMgeKh0bpnX5UHoycR7hYQe7xFSkyyBNKr79X9DFHOUGoIMfmR2gyP
ZFwDwzqLID9ujWc9Otb+fVuIyV77zGHcizN300QyNQliBJIWENieJ0f7OyHj+OsdWwIDAQAB
o4GwMIGtMA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBQahGK8SEwz
JQTU7tD2A8QZRtGUazBuBgNVHSMEZzBlgBQahGK8SEwzJQTU7tD2A8QZRtGUa6FJpEcwRTEL
MAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1Zh
ZGlzIFJvb3QgQ0EgMoICBQkwDQYJKoZIhvcNAQEFBQADggIBAD4KFk2fBluornFdLwUvZ+YT
RYPENvbzwCYMDbVHZF34tHLJRqUDGCdViXh9duqWNIAXINzng/iN/Ae42l9NLmeyhP3ZRPx3
UIHmfLTJDQtyU/h2BwdBR5YM++CCJpNVjP4iH2BlfF/nJrP3MpCYUNQ3cVX2kiF495V5+vgt
JodmVjB3pjd4M1IQWK4/YY7yarHvGH5KWWPKjaJW1acvvFYfzznB4vsKqBUsfU16Y8Zsl0Q8
0m/DShcK+JDSV6IZUaUtl0HaB0+pUNqQjZRG4T7wlP0QADj1O+hA4bRuVhogzG9Yje0uRY/W
6ZM/57Es3zrWIozchLsib9D45MY56QSIPMO661V6bYCZJPVsAfv4l7CUW+v90m/xd2gNNWQj
rLhVoQPRTUIZ3Ph1WVaj+ahJefivDrkRoHy3au000LYmYjgahwz46P0u05B/B5EqHdZ+XIWD
mbA4CD/pXvk1B+TJYm5Xf6dQlfe6yJvmjqIBxdZmv3lh8zwc4bmCXF2gw+nYSL0ZohEUGW6y
hhtoPkg3Goi3XZZenMfvJ2II4pEZXNLxId26F0KCl3GBUzGpn/Z9Yr9y4aOTHcyKJloJONDO
1w2AFrR4pTqHTI2KpdVGl/IsELm8VCLAAVBpQ570su9t+Oza8eOx79+Rj1QqCyXBJhnEUhAF
ZdWCEOrCMc0u
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIGnTCCBIWgAwIBAgICBcYwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0xGTAXBgNV
BAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJvb3QgQ0EgMzAeFw0w
NjExMjQxOTExMjNaFw0zMTExMjQxOTA2NDRaMEUxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBR
dW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9WYWRpcyBSb290IENBIDMwggIiMA0GCSqG
SIb3DQEBAQUAA4ICDwAwggIKAoICAQDMV0IWVJzmmNPTTe7+7cefQzlKZbPoFog02w1ZkXTP
krgEQK0CSzGrvI2RaNggDhoB4hp7Thdd4oq3P5kazethq8Jlph+3t723j/z9cI8LoGe+AaJZ
z3HmDyl2/7FWeUUrH556VOijKTVopAFPD6QuN+8bv+OPEKhyq1hX51SGyMnzW9os2l2Objyj
Ptr7guXd8lyyBTNvijbO0BNO/79KDDRMpsMhvVAEVeuxu537RR5kFd5VAYwCdrXLoT9Cabwv
vWhDFlaJKjdhkf2mrk7AyxRllDdLkgbvBNDInIjbC3uBr7E9KsRlOni27tyAsdLTmZw67mta
a7ONt9XOnMK+pUsvFrGeaDsGb659n/je7Mwpp5ijJUMv7/FfJuGITfhebtfZFG4ZM2mnO4SJ
k8RTVROhUXhA+LjJou57ulJCg54U7QVSWllWp5f8nT8KKdjcT5EOE7zelaTfi5m+rJsziO+1
ga8bxiJTyPbH7pcUsMV8eFLI8M5ud2CEpukqdiDtWAEXMJPpGovgc2PZapKUSU60rUqFxKMi
MPwJ7Wgic6aIDFUhWMXhOp8q3crhkODZc6tsgLjoC2SToJyMGf+z0gzskSaHirOi4XCPLArl
zW1oUevaPwV/izLmE1xr/l9A4iLItLRkT9a6fUg+qGkM17uGcclzuD87nSVL2v9A6wIDAQAB
o4IBlTCCAZEwDwYDVR0TAQH/BAUwAwEB/zCB4QYDVR0gBIHZMIHWMIHTBgkrBgEEAb5YAAMw
gcUwgZMGCCsGAQUFBwICMIGGGoGDQW55IHVzZSBvZiB0aGlzIENlcnRpZmljYXRlIGNvbnN0
aXR1dGVzIGFjY2VwdGFuY2Ugb2YgdGhlIFF1b1ZhZGlzIFJvb3QgQ0EgMyBDZXJ0aWZpY2F0
ZSBQb2xpY3kgLyBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudC4wLQYIKwYBBQUH
AgEWIWh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL2NwczALBgNVHQ8EBAMCAQYwHQYD
VR0OBBYEFPLAE+CCQz777i9nMpY1XNu4ywLQMG4GA1UdIwRnMGWAFPLAE+CCQz777i9nMpY1
XNu4ywLQoUmkRzBFMQswCQYDVQQGEwJCTTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDEb
MBkGA1UEAxMSUXVvVmFkaXMgUm9vdCBDQSAzggIFxjANBgkqhkiG9w0BAQUFAAOCAgEAT62g
LEz6wPJv92ZVqyM07ucp2sNbtrCD2dDQ4iH782CnO11gUyeim/YIIirnv6By5ZwkajGxkHon
24QRiSemd1o417+shvzuXYO8BsbRd2sPbSQvS3pspweWyuOEn62Iix2rFo1bZhfZFvSLgNLd
+LJ2w/w4E6oM3kJpK27zPOuAJ9v1pkQNn1pVWQvVDVJIxa6f8i+AxeoyUDUSly7B4f/xI4hR
OJ/yZlZ25w9Rl6VSDE1JUZU2Pb+iSwwQHYaZTKrzchGT5Or2m9qoXadNt54CrnMAyNojA+j5
6hl0YgCUyyIgvpSnWbWCar6ZeXqp8kokUvd0/bpO5qgdAm6xDYBEwa7TIzdfu4V8K5Iu6H6l
i92Z4b8nby1dqnuH/grdS/yO9SbkbnBCbjPsMZ57k8HkyWkaPcBrTiJt7qtYTcbQQcEr6k8S
h17rRdhs9ZgC06DYVYoGmRmioHfRMJ6szHXug/WwYjnPbFfiTNKRCw51KBuav/0aQ/HKd/s7
j2G4aSgWQgRecCocIdiP4b0jWy10QJLZYxkNc91pvGJHvOB0K7Lrfb5BG7XARsWhIstfTsEo
kt4YutUqKLsRixeTmJlglFwjz1onl14LBQaTNx47aTbrqZ5hHY8y2o4M1nQ+ewkk2gF3R8Q7
zTSMmfXK4SVhM7JZG+Ju1zdXtg2pEto=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDWjCCAkKgAwIBAgIBADANBgkqhkiG9w0BAQUFADBQMQswCQYDVQQGEwJKUDEYMBYGA1UE
ChMPU0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJv
b3RDQTEwHhcNMDMwOTMwMDQyMDQ5WhcNMjMwOTMwMDQyMDQ5WjBQMQswCQYDVQQGEwJKUDEY
MBYGA1UEChMPU0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0
aW9uIFJvb3RDQTEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzs/5/022x7xZ8
V6UMbXaKL0u/ZPtM7orw8yl89f/uKuDp6bpbZCKamm8sOiZpUQWZJtzVHGpxxpp9Hp3dfGzG
jGdnSj74cbAZJ6kJDKaVv0uMDPpVmDvY6CKhS3E4eayXkmmziX7qIWgGmBSWh9JhNrxtJ1ae
V+7AwFb9Ms+k2Y7CI9eNqPPYJayX5HA49LY6tJ07lyZDo6G8SVlyTCMwhwFY9k6+HGhWZq/N
QV3Is00qVUarH9oe4kA92819uZKAnDfdDJZkndwi92SL32HeFZRSFaB9UslLqCHJxrHty8OV
YNEP8Ktw+N/LTX7s1vqr2b1/VPKl6Xn62dZ2JChzAgMBAAGjPzA9MB0GA1UdDgQWBBSgc0mZ
aNyFW2XjmygvV5+9M7wHSDALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG
9w0BAQUFAAOCAQEAaECpqLvkT115swW1F7NgE+vGkl3g0dNq/vu+m22/xwVtWSDEHPC32oRY
AmP6SBbvT6UL90qY8j+eG61Ha2POCEfrUj94nK9NrvjVT8+amCoQQTlSxN3Zmw7vkwGusi7K
aEIkQmywszo+zenaSMQVy+n5Bw+SUEmK3TGXX8npN6o7WWWXlDLJs58+OmJYxUmtYg5xpTKq
L8aJdkNAExNnPaJUJRDL8Try2frbSVa7pv6nQTXD4IhhyYjH3zYQIphZ6rBK+1YWc26sTfci
oU+tHXotRSflMMFe8toTyyVCUZVHA4xsIcx0Qu1T/zOLjw9XARYvz6buyXAiFL39vmwLAw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDIDCCAgigAwIBAgIBHTANBgkqhkiG9w0BAQUFADA5MQswCQYDVQQGEwJGSTEPMA0GA1UE
ChMGU29uZXJhMRkwFwYDVQQDExBTb25lcmEgQ2xhc3MyIENBMB4XDTAxMDQwNjA3Mjk0MFoX
DTIxMDQwNjA3Mjk0MFowOTELMAkGA1UEBhMCRkkxDzANBgNVBAoTBlNvbmVyYTEZMBcGA1UE
AxMQU29uZXJhIENsYXNzMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJAX
SjWdyvANlsdE+hY3/Ei9vX+ALTU74W+oZ6m/AxxNjG8yR9VBaKQTBME1DJqEQ/xcHf+Js+gX
GM2RX/uJ4+q/Tl18GybTdXnt5oTjV+WtKcT0OijnpXuENmmz/V52vaMtmdOQTiMofRhj8VQ7
Jp12W5dCsv+u8E7s3TmVToMGf+dJQMjFAbJUWmYdPfz56TwKnoG4cPABi+QjVHzIrviQHgCW
ctRUz2EjvOr7nQKV0ba5cTppCD8PtOFCx4j1P5iop7oc4HFx71hXgVB6XGt0Rg6DA5jDjqhu
8nYybieDwnPz3BjotJPqdURrBGAgcVeHnfO+oJAjPYok4doh28MCAwEAAaMzMDEwDwYDVR0T
AQH/BAUwAwEB/zARBgNVHQ4ECgQISqCqWITTXjwwCwYDVR0PBAQDAgEGMA0GCSqGSIb3DQEB
BQUAA4IBAQBazof5FnIVV0sd2ZvnoiYw7JNn39Yt0jSv9zilzqsWuasvfDXLrNAPtEwr/IDv
a4yRXzZ299uzGxnq9LIR/WFxRL8oszodv7ND6J+/3DEIcbCdjdY0RzKQxmUk96BKfARzjzlv
F4xytb1LyHr4e4PDKE6cCepnP7JnBBvDFNr450kkkdAdavphOe9r5yF1BgfYErQhIHBCcYHa
PJo2vqZbDWpsmh+Re/n570K6Tk6ezAyNlNzZRZxe7EJQY670XcSxEtzKO6gunRRaBXW37Ndj
4ro1tgQIkejanZz2ZrUYrAqmVCY0M9IbwdR/GjqOC6oybtv8TyWf2TLHllpwrN9M
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEMDCCAxigAwIBAgIQUJRs7Bjq1ZxN1ZfvdY+grTANBgkqhkiG9w0BAQUFADCBgjELMAkG
A1UEBhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJh
bXAgU2VjdXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkwHhcNMDQxMTAxMTcxNDA0WhcNMzUwMTAxMDUzNzE5WjCBgjEL
MAkGA1UEBhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMb
WFJhbXAgU2VjdXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCY
JB69FbS638eMpSe2OAtp87ZOqCwuIR1cRN8hXX4jdP5efrRKt6atH67gBhbim1vZZ3RrXYCP
KZ2GG9mcDZhtdhAoWORlsH9KmHmf4MMxfoArtYzAQDsRhtDLooY2YKTVMIJt2W7QDxIEM5df
T2Fa8OT5kavnHTu86M/0ay00fOJIYRyO82FEzG+gSqmUsE3a56k0enI4qEHMPJQRfevIpoy3
hsvKMzvZPTeL+3o+hiznc9cKV6xkmxnr9A8ECIqsAxcZZPRaJSKNNCyy9mgdEm3Tih4U2sSP
puIjhdV6Db1q4Ons7Be7QhtnqiXtRYMh/MHJfNViPvryxS3T/dRlAgMBAAGjgZ8wgZwwEwYJ
KwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0O
BBYEFMZPoj0GY4QJnM5i5ASsjVy16bYbMDYGA1UdHwQvMC0wK6ApoCeGJWh0dHA6Ly9jcmwu
eHJhbXBzZWN1cml0eS5jb20vWEdDQS5jcmwwEAYJKwYBBAGCNxUBBAMCAQEwDQYJKoZIhvcN
AQEFBQADggEBAJEVOQMBG2f7Shz5CmBbodpNl2L5JFMn14JkTpAuw0kbK5rc/Kh4ZzXxHfAR
vbdI4xD2Dd8/0sm2qlWkSLoC295ZLhVbO50WfUfXN+pfTXYSNrsf16GBBEYgoyxtqZ4Bfj8p
zgCT3/3JknOJiWSe5yvkHJEs0rnOfc5vMZnT5r7SHpDwCRR5XCOrTdLaIR9NmXmd4c8nnxCb
HIgNsIpkQTG4DmyQJKSbXHGPurt+HBvbaoAPIbzp26a3QPSyi6mx5O+aGtA9aZnuqCij4Tyz
8LIRnM98QObd50N9otg6tamN8jSZxNQQ4Qb9CYQQO+7ETPTsJ3xCwnR8gooJybQDJbw=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEADCCAuigAwIBAgIBADANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEhMB8GA1UE
ChMYVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAy
IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA0MDYyOTE3MDYyMFoXDTM0MDYyOTE3MDYy
MFowYzELMAkGA1UEBhMCVVMxITAfBgNVBAoTGFRoZSBHbyBEYWRkeSBHcm91cCwgSW5jLjEx
MC8GA1UECxMoR28gRGFkZHkgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASAw
DQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBAN6d1+pXGEmhW+vXX0iG6r7d/+TvZxz0ZWiz
V3GgXne77ZtJ6XCAPVYYYwhv2vLM0D9/AlQiVBDYsoHUwHU9S3/Hd8M+eKsaA7Ugay9qK7HF
iH7Eux6wwdhFJ2+qN1j3hybX2C32qRe3H3I2TqYXP2WYktsqbl2i/ojgC95/5Y0V4evLOtXi
EqITLdiOr18SPaAIBQi2XKVlOARFmR6jYGB0xUGlcmIbYsUfb18aQr4CUWWoriMYavx4A6lN
f4DD+qta/KFApMoZFv6yyO9ecw3ud72a9nmYvLEHZ6IVDd2gWMZEewo+YihfukEHU1jPEX44
dMX4/7VpkI+EdOqXG68CAQOjgcAwgb0wHQYDVR0OBBYEFNLEsNKR1EwRcbNhyz2h/t2oatTj
MIGNBgNVHSMEgYUwgYKAFNLEsNKR1EwRcbNhyz2h/t2oatTjoWekZTBjMQswCQYDVQQGEwJV
UzEhMB8GA1UEChMYVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBEYWRk
eSBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJ
KoZIhvcNAQEFBQADggEBADJL87LKPpH8EsahB4yOd6AzBhRckB4Y9wimPQoZ+YeAEW5p5JYX
MP80kWNyOO7MHAGjHZQopDH2esRU1/blMVgDoszOYtuURXO1v0XJJLXVggKtI3lpjbi2Tc7P
TMozI+gciKqdi0FuFskg5YmezTvacPd+mSYgFFQlq25zheabIZ0KbIIOqPjCDPoQHmyW74cN
xA9hi63ugyuV+I6ShHI56yDqg+2DzZduCLzrTia2cyvk0/ZM/iZx4mERdEr/VxqHD3VILs9R
aRegAhJhldXRQLIQTO7ErBBDpqWeCtWVYpoNz4iCxTIM5CufReYNnyicsbkqWletNw+vHX/b
vZ8=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEDzCCAvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzElMCMGA1UE
ChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZpZWxkIENs
YXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQwNjI5MTczOTE2WhcNMzQwNjI5
MTczOTE2WjBoMQswCQYDVQQGEwJVUzElMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2ll
cywgSW5jLjEyMDAGA1UECxMpU3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkwggEgMA0GCSqGSIb3DQEBAQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N
78gDGIc/oav7PKaf8MOh2tTYbitTkPskpD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMe
j2YcOadN+lq2cwQlZut3f+dZxkqZJRRU6ybH838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0
X9tDkYI22WY8sbi5gv2cOj4QyDvvBmVmepsZGD3/cVE8MC5fvj13c7JdBmzDI1aaK4Umkhyn
ArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSNF4Azbl5KXZnJHoe0nRrA1W4TNSNe35tfPe/W
93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HFMIHCMB0GA1UdDgQWBBS/X7fRzt0fhvRb
Vazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fRzt0fhvRbVazc1xDCDqmI56FspGowaDEL
MAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xMjAw
BgNVBAsTKVN0YXJmaWVsZCBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggEAMAwG
A1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGsafPzWdqbAYcaT1ep
oXkJKtv3L7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLMPUxA2IGvd56D
eruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJlxy16paq8
U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynpVSJYACPq4xJDKVtH
CN2MQWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEYWQPJIrSPnNVeKtelttQKbfi3
QBFGmh95DmK/D5fs4C8fF5Q=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFcjCCA1qgAwIBAgIQH51ZWtcvwgZEpYAIaeNe9jANBgkqhkiG9w0BAQUFADA/MQswCQYD
VQQGEwJUVzEwMC4GA1UECgwnR292ZXJubWVudCBSb290IENlcnRpZmljYXRpb24gQXV0aG9y
aXR5MB4XDTAyMTIwNTEzMjMzM1oXDTMyMTIwNTEzMjMzM1owPzELMAkGA1UEBhMCVFcxMDAu
BgNVBAoMJ0dvdmVybm1lbnQgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCAiIwDQYJ
KoZIhvcNAQEBBQADggIPADCCAgoCggIBAJoluOzMonWoe/fOW1mKydGGEghU7Jzy50b2iPN8
6aXfTEc2pBsBHH8eV4qNw8XRIePaJD9IK/ufLqGU5ywck9G/GwGHU5nOp/UKIXZ3/6m3xnOU
T0b3EEk3+qhZSV1qgQdW8or5BtD3cCJNtLdBuTK4sfCxw5w/cP1T3YGq2GN49thTbqGsaoQk
clSGxtKyyhwOeYHWtXBiCAEuTk8O1RGvqa/lmr/czIdtJuTJV6L7lvnM4T9TjGxMfptTCAts
F/tnyMKtsc2AtJfcdgEWFelq16TheEfOhtX7MfP6Mb40qij7cEwdScevLJ1tZqa2jWR+tSBq
nTuBto9AAGdLiYa4zGX+FVPpBMHWXx1E1wovJ5pGfaENda1UhhXcSTvxls4Pm6Dso3pdvtUq
dULle96ltqqvKKyskKw4t9VoNSZ63Pc78/1Fm9G7Q3hub/FCVGqY8A2tl+lSXunVanLeavcb
YBT0peS2cWeqH+riTcFCQP5nRhc4L0c/cZyu5SHKYS1tB6iEfC3uUSXxY5Ce/eFXiGvviiNt
sea9P63RPZYLhY3Naye7twWb7LuRqQoHEgKXTiCQ8P8NHuJBO9NAOueNXdpm5AKwB1KYXA6O
M5zCppX7VRluTI6uSw+9wThNXo+EHWbNxWCWtFJaBYmOlXqYwZE8lSOyDvR5tMl8wUohAgMB
AAGjajBoMB0GA1UdDgQWBBTMzO/MKWCkO7GStjz6MmKPrCUVOzAMBgNVHRMEBTADAQH/MDkG
BGcqBwAEMTAvMC0CAQAwCQYFKw4DAhoFADAHBgVnKgMAAAQUA5vwIhP/lSg209yewDL7MTqK
UWUwDQYJKoZIhvcNAQEFBQADggIBAECASvomyc5eMN1PhnR2WPWus4MzeKR6dBcZTulStbng
CnRiqmjKeKBMmo4sIy7VahIkv9Ro04rQ2JyftB8M3jh+Vzj8jeJPXgyfqzvS/3WXy6TjZwj/
5cAWtUgBfen5Cv8b5Wppv3ghqMKnI6mGq3ZW6A4M9hPdKmaKZEk9GhiHkASfQlK3T8v+R0F2
Ne//AHY2RTKbxkaFXeIksB7jSJaYV0eUVXoPQbFEJPPB/hprv4j9wabak2BegUqZIJxIZhm1
AHlUD7gsL0u8qV1bYH+Mh6XgUmMqvtg7hUAV/h62ZT/FS9p+tXo1KaMuephgIqP0fSdOLeq0
dDzpD6QzDxARvBMB1uUO07+1EqLhRSPAzAhuYbeJq4PjJB7mXQfnHyA+z2fI56wwbSdLaG5L
KlwCCDTb+HbkZ6MmnD+iMsJKxYEYMRBWqoTvLQr/uB930r+lWKBi5NdLkXWNiYCYfm3LU05e
r/ayl4WXudpVBrkk7tfGOB5jGxI7leFYrPLfhNVfmS8NVVvmONsuP3LpSIXLuykTjx44Vbnz
ssQwmSNOXfJIoRIM3BKQCZBUkQM8R+XVyWXgt0t97EfTsws+rZ7QdAAO671RrcDeLMDDav7v
3Aun+kbfYNucpllQdSNpc5Oy+fwC00fmcc4QAu4njIT/rEUNE1yDMuAlpYYsfPQS
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDtzCCAp+gAwIBAgIQDOfg5RfYRv6P5WD8G/AwOTANBgkqhkiG9w0BAQUFADBlMQswCQYD
VQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
Y29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0EwHhcNMDYxMTEwMDAw
MDAwWhcNMzExMTEwMDAwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQg
SW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1
cmVkIElEIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtDhXO5EOA
XLGH87dg+XESpa7cJpSIqvTO9SA5KFhgDPiA2qkVlTJhPLWxKISKityfCgyDF3qPkKyK53lT
XDGEKvYPmDI2dsze3Tyoou9q+yHyUmHfnyDXH+Kx2f4YZNISW1/5WBg1vEfNoTb5a3/UsDg+
wRvDjDPZ2C8Y/igPs6eD1sNuRMBhNZYW/lmci3Zt1/GiSw0r/wty2p5g0I6QNcZ4VYcgoc/l
bQrISXwxmDNsIumH0DJaoroTghHtORedmTpyoeb6pNnVFzF1roV9Iq4/AUaG9ih5yLHa5FcX
xH4cDrC0kqZWs72yl+2qp/C3xag/lRbQ/6GW6whfGHdPAgMBAAGjYzBhMA4GA1UdDwEB/wQE
AwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRF66Kv9JLLgjEtUYunpyGd823IDzAf
BgNVHSMEGDAWgBRF66Kv9JLLgjEtUYunpyGd823IDzANBgkqhkiG9w0BAQUFAAOCAQEAog68
3+Lt8ONyc3pklL/3cmbYMuRCdWKuh+vy1dneVrOfzM4UKLkNl2BcEkxY5NM9g0lFWJc1aRqo
R+pWxnmrEthngYTffwk8lOa4JiwgvT2zKIn3X/8i4peEH+ll74fg38FnSbNd67IJKusm7Xi+
fT8r87cmNW1fiQG2SVufAQWbqz0lwcy2f8Lxb4bG+mRo64EtlOtCt/qMHt1i8b5QZ7dsvfPx
H2sMNgcWfzd8qVttevESRmCD1ycEvkvOl77DZypoEd+A5wwzZr8TDRRu838fYxAe+o0bJW1s
j6W3YQGx0qMmoRBxna3iw/nDmVG3KwcIzi7mULKn+gpFL6Lw8g==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBhMQswCQYD
VQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
Y29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBDQTAeFw0wNjExMTAwMDAwMDBa
Fw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMx
GTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBS
b290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKP
C3eQyaKl7hLOllsBCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscF
s3YnFo97nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt
43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7PT19sdl6g
SzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4gdW7jVg/tRvoSSii
cNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAYYwDwYD
VR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbRTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgw
FoAUA95QNVbRTLtm8KPiGxvDl7I90VUwDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1E
nE9SsPTfrgT1eXkIoyQY/EsrhMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDi
qw8cvpOp/2PV5Adg06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBA
I+0tKIJFPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls
YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQkCAUw7C29
C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBsMQswCQYD
VQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
Y29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5jZSBFViBSb290IENBMB4XDTA2
MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDELMAkGA1UEBhMCVVMxFTATBgNVBAoTDERp
Z2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNl
cnQgSGlnaCBBc3N1cmFuY2UgRVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBAMbM5XPm+9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlB
WTrT3JTWPNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM
xChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFBIk5lYYeB
QVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3hzBWBOURtCmAEvF5
OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsgEsxBu24LUTi4S8sCAwEAAaNj
MGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9H
AdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaAFLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3
DQEBBQUAA4IBAQAcGgaX3NecnzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1
ntlMMUu4kehDLI6zeM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VH
MWEZ71jFhS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2
Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCevEsXCS+0
yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep+OkuE6N36B9K
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDkjCCAnqgAwIBAgIRAIW9S/PY2uNp9pTXX8OlRCMwDQYJKoZIhvcNAQEFBQAwPTELMAkG
A1UEBhMCRlIxETAPBgNVBAoTCENlcnRwbHVzMRswGQYDVQQDExJDbGFzcyAyIFByaW1hcnkg
Q0EwHhcNOTkwNzA3MTcwNTAwWhcNMTkwNzA2MjM1OTU5WjA9MQswCQYDVQQGEwJGUjERMA8G
A1UEChMIQ2VydHBsdXMxGzAZBgNVBAMTEkNsYXNzIDIgUHJpbWFyeSBDQTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBANxQltAS+DXSCHh6tlJw/W/uz7kRy1134ezpfgSN1sxv
c0NXYKwzCkTsA18cgCSR5aiRVhKC9+Ar9NuuYS6JEI1rbLqzAr3VNsVINyPi8Fo3UjMXEuLR
YE2+L0ER4/YXJQyLkcAbmXuZVg2v7tK8R1fjeUl7NIknJITesezpWE7+Tt9avkGtrAjFGA7v
0lPubNCdEgETjdyAYveVqUSISnFOYFWe2yMZeVYHDD9jC1yw4r5+FfyUM1hBOHTE4Y+L3yas
H7WLO7dDWWuwJKZtkIvEcupdM5i3y95ee++U8Rs+yskhwcWYAqqi9lt3m/V+llU0HGdpwPFC
40es/CgcZlUCAwEAAaOBjDCBiTAPBgNVHRMECDAGAQH/AgEKMAsGA1UdDwQEAwIBBjAdBgNV
HQ4EFgQU43Mt38sOKAze3bOkynm4jrvoMIkwEQYJYIZIAYb4QgEBBAQDAgEGMDcGA1UdHwQw
MC4wLKAqoCiGJmh0dHA6Ly93d3cuY2VydHBsdXMuY29tL0NSTC9jbGFzczIuY3JsMA0GCSqG
SIb3DQEBBQUAA4IBAQCnVM+IRBnL39R/AN9WM2K191EBkOvDP9GIROkkXe/nFL0gt5o8AP5t
n9uQ3Nf0YtaLcF3n5QRIqWh8yfFC82x/xXp8HVGIutIKPidd3i1RTtMTZGnkLuPT55sJmabg
lZvOGtd/vjzOUrMRFcEPF80Du5wlFbqidon8BvEY0JNLDnyCt6X09l/+7UCmnYR0ObncHoUW
2ikbhiMAybuJfm6AiB4vFLQDJKgybwOaRywwvlbGp0ICcBvqQNi6BQNwB6SW//1IMwrh3KWB
kJtN3X3n57LNXMhqlfil9o3EXXgIvnsG1knPGTZQIy4I5p4FTUcY1Rbpsda2ENW7l7+ijrRU
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/MSQwIgYD
VQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMTDkRTVCBSb290IENB
IFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVowPzEkMCIGA1UEChMbRGlnaXRh
bCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQDEw5EU1QgUm9vdCBDQSBYMzCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdA
wRgUi+DoM3ZJKuM/IUmTrE4Orz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwG
MoOifooUMM0RoOEqOLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4X
Lh7dIN9bxiqKqy69cK3FCxolkHRyxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw
7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaDaeQQmxkq
tilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
HQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQMA0GCSqGSIb3DQEBBQUAA4IBAQCjGiyb
FwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69ikugdB/OEIKcdBodfpga3csTS7MgROSR
6cz8faXbauX+5v3gTt23ADq1cEmv8uXrAvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaL
bumR9YbK+rlmM6pZW87ipxZzR8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir
/md2cXjbDaJWFBM5JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06Xyx
V3bqxbYoOb8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFujCCA6KgAwIBAgIJALtAHEP1Xk+wMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNVBAYTAkNI
MRUwEwYDVQQKEwxTd2lzc1NpZ24gQUcxHzAdBgNVBAMTFlN3aXNzU2lnbiBHb2xkIENBIC0g
RzIwHhcNMDYxMDI1MDgzMDM1WhcNMzYxMDI1MDgzMDM1WjBFMQswCQYDVQQGEwJDSDEVMBMG
A1UEChMMU3dpc3NTaWduIEFHMR8wHQYDVQQDExZTd2lzc1NpZ24gR29sZCBDQSAtIEcyMIIC
IjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAr+TufoskDhJuqVAtFkQ7kpJcyrhdhJJC
Eyq8ZVeCQD5XJM1QiyUqt2/876LQwB8CJEoTlo8jE+YoWACjR8cGp4QjK7u9lit/VcyLwVcf
DmJlD909Vopz2q5+bbqBHH5CjCA12UNNhPqE21Is8w4ndwtrvxEvcnifLtg+5hg3Wipy+dpi
kJKVyh+c6bM8K8vzARO/Ws/BtQpgvd21mWRTuKCWs2/iJneRjOBiEAKfNA+k1ZIzUd6+jbqE
emA8atufK+ze3gE/bk3lUIbLtK/tREDFylqM2tIrfKjuvqblCqoOpd8FUrdVxyJdMmqXl2MT
28nbeTZ7hTpKxVKJ+STnnXepgv9VHKVxaSvRAiTysybUa9oEVeXBCsdtMDeQKuSeFDNeFhdV
xVu1yzSJkvGdJo+hB9TGsnhQ2wwMC3wLjEHXuendjIj3o02yMszYF9rNt85mndT9Xv+9lz4p
ded+p2JYryU0pUHHPbwNUMoDAw8IWh+Vc3hiv69yFGkOpeUDDniOJihC8AcLYiAQZzlG+qkD
zAQ4embvIIO1jEpWjpEA/I5cgt6IoMPiaG59je883WX0XaxR7ySArqpWl2/5rX3aYT+Ydzyl
kbYcjCbaZaIJbcHiVOO5ykxMgI93e2CaHt+28kgeDrpOVG2Y4OGiGqJ3UM/EY5LsRxmd6+Zr
zsECAwEAAaOBrDCBqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E
FgQUWyV7lqRlUX64OfPAeGZe6Drn8O4wHwYDVR0jBBgwFoAUWyV7lqRlUX64OfPAeGZe6Drn
8O4wRgYDVR0gBD8wPTA7BglghXQBWQECAQEwLjAsBggrBgEFBQcCARYgaHR0cDovL3JlcG9z
aXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIBACe645R88a7A3hfm5djV
9VSwg/S7zV4Fe0+fdWavPOhWfvxyeDgD2StiGwC5+OlgzczOUYrHUDFu4Up+GC9pWbY9ZIEr
44OE5iKHjn3g7gKZYbge9LgriBIWhMIxkziWMaa5O1M/wySTVltpkuzFwbs4AOPsF6m43Md8
AYOfMke6UiI0HTJ6CVanfCU2qT1L2sCCbwq7EsiHSycR+R4tx5M/nttfJmtS2S6K8RTGRI0V
qbe/vd6mGu6uLftIdxf+u+yvGPUqUfA5hJeVbG4bwyvEdGB5JbAKJ9/fXtI5z0V9Qkvfsywe
xcZdylU6oJxpmo/a77KwPJ+HbBIrZXAVUjEaJM9vMSNQH4xPjyPDdEFjHFWoFN0+4FFQz/Eb
MFYOkrCChdiDyyJkvC24JdVUorgG6q2SpCSgwYa1ShNqR88uC1aVVMvOmttqtKay20EIhid3
92qgQmwLOM7XdVAyksLfKzAiSNDVQTglXaTpXZ/GlHXQRf0wl0OPkKsKx4ZzYEppLd6leNcG
2mqeSz53OiATIgHQv2ieY2BrNU0LbbqhPcCT4H8js1WtciVORvnSFu+wZMEBnunKoGqYDs/Y
YPIvSbjkQuE4NRb0yG5P94FW6LqjviOvrv1vA+ACOzB2+httQc8Bsem4yWb02ybzOqR08kkk
W8mw0FfB+j564ZfJ
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFvTCCA6WgAwIBAgIITxvUL1S7L0swDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UEBhMCQ0gx
FTATBgNVBAoTDFN3aXNzU2lnbiBBRzEhMB8GA1UEAxMYU3dpc3NTaWduIFNpbHZlciBDQSAt
IEcyMB4XDTA2MTAyNTA4MzI0NloXDTM2MTAyNTA4MzI0NlowRzELMAkGA1UEBhMCQ0gxFTAT
BgNVBAoTDFN3aXNzU2lnbiBBRzEhMB8GA1UEAxMYU3dpc3NTaWduIFNpbHZlciBDQSAtIEcy
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxPGHf9N4Mfc4yfjDmUO8x/e8N+dO
cbpLj6VzHVxumK4DV644N0MvFz0fyM5oEMF4rhkDKxD6LHmD9ui5aLlV8gREpzn5/ASLHvGi
TSf5YXu6t+WiE7brYT7QbNHm+/pe7R20nqA1W6GSy/BJkv6FCgU+5tkL4k+73JU3/JHpMjUi
0R86TieFnbAVlDLaYQ1HTWBCrpJH6INaUFjpiou5XaHc3ZlKHzZnu0jkg7Y360g6rw9njxcH
6ATK72oxh9TAtvmUcXtnZLi2kUpCe2UuMGoM9ZDulebyzYLs2aFK7PayS+VFheZteJMELpyC
bTapxDFkH4aDCyr0NQp4yVXPQbBH6TCfmb5hqAaEuSh6XzjZG6k4sIN/c8HDO0gqgg8hm7jM
qDXDhBuDsz6+pJVpATqJAHgE2cn0mRmrVn5bi4Y5FZGkECwJMoBgs5PAKrYYC51+jUnyEEp/
+dVGLxmSo5mnJqy7jDzmDrxHB9xzUfFwZC8I+bRHHTBsROopN4WSaGa8gzj+ezku01DwH/te
YLappvonQfGbGHLy9YR0SslnxFSuSGTfjNFusB3hB48IHpmccelM2KX3RxIfdNFRnobzwqIj
QAtz20um53MGjMGg6cFZrEb65i/4z3GcRm25xBWNOHkDRUjvxF3XCO6HOSKGsg0PWEP3calI
Lv3q1h8CAwEAAaOBrDCBqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV
HQ4EFgQUF6DNweRBtjpbO8tFnb0cwpj6hlgwHwYDVR0jBBgwFoAUF6DNweRBtjpbO8tFnb0c
wpj6hlgwRgYDVR0gBD8wPTA7BglghXQBWQEDAQEwLjAsBggrBgEFBQcCARYgaHR0cDovL3Jl
cG9zaXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIBAHPGgeAn0i0P4JUw
4ppBf1AsX19iYamGamkYDHRJ1l2E6kFSGG9YrVBWIGrGvShpWJHckRE1qTodvBqlYJ7YH39F
kWnZfrt4csEGDyrOj4VwYaygzQu4OSlWhDJOhrs9xCrZ1x9y7v5RoSJBsXECYxqCsGKrXlcS
H9/L3XWgwF15kIwb4FDm3jH+mHtwX6WQ2K34ArZv02DdQEsixT2tOnqfGhpHkXkzuoLcMmkD
lm4fS/Bx/uNncqCxv1yL5PqZIseEuRuNI5c/7SXgz2W79WEE790eslpBIlqhn10s6FvJbakM
DHiqYMZWjwFaDGi8aRl5xB9+lwW/xekkUV7U1UtT7dkjWjYDZaPBA61BMPNGG4WQr2W11bHk
Flt4dR2Xem1ZqSqPe97Dh4kQmUlzeMg9vVE1dCrV8X5pGyq7O70luJpaPXJhkGaH7gzWTdQR
dAtq/gsD/KNVV4n+SsuuWxcFyPKNIzFTONItaj+CuY0IavdeQXRuwxF+B6wpYJE/OMpXEA29
MC/HpeZBoNquBYeaoKRlbEwJDIm6uNO5wJOKMPqN5ZprFQFOZ6raYlY+hAhm0sQ2fac+EPyI
4NSA5QC9qvNOBqN6avlicuMJT+ubDgEj8Z+7fNzcbBGXJbLytGMU0gYqZ4yD9c7qB9iaah7s
5Aq7KkzrCWA5zspi2C5u
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDfDCCAmSgAwIBAgIQGKy1av1pthU6Y2yv2vrEoTANBgkqhkiG9w0BAQUFADBYMQswCQYD
VQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UEAxMoR2VvVHJ1c3QgUHJp
bWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjExMjcwMDAwMDBaFw0zNjA3MTYy
MzU5NTlaMFgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTEwLwYDVQQD
EyhHZW9UcnVzdCBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvrgVe//UfH1nrYNke8hCUy3f9oQIIGHWAVlqnEQRr+92
/ZV+zmEwu3qDXwK9AWbK7hWNb6EwnL2hhZ6UOvNWiAAxz9juapYC2e0DjPt1befquFUWBRaa
9OBesYjAZIVcFU2Ix7e64HXprQU9nceJSOC7KMgD4TCTZF5SwFlwIjVXiIrxlQqD17wxcwE0
7e9GceBrAqg1cmuXm2bgyxx5X9gaBGgeRwLmnWDiNpcB3841kt++Z8dtd1k7j53WkBWUvEI0
EME5+bEnPn7WinXFsq+W06Lem+SYvn3h6YGttm/81w7a4DSwDRp35+MImO9Y+pyEtzavwt+s
0vQQBnBxNQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNV
HQ4EFgQULNVQQZcVi/CPNmFbSvtr2ZnJM5IwDQYJKoZIhvcNAQEFBQADggEBAFpwfyzdtzRP
9YZRqSa+S7iq8XEN3GHHoOo0Hnp3DwQ16CePbJC/kRYkRj5KTs4rFtULUh38H2eiAkUxT87z
+gOneZ1TatnaYzr4gNfTmeGl4b7UVXGYNTq+k+qurUKykG/g/CFNNWMziUnWm07Kx+dOCQD3
2sfvmWKZd7aVIl6KoKv0uHiYyjgZmclynnjNS6yvGaBzEi38wkG6gZHaFloxt/m0cYASSJly
c1pZU8FjUjPtp8nSOQJw+uCxQmYpqptR7TBUIhRf2asdweSU8Pj1K/fqynhG1riR/aYNKxoU
AT6A8EKglQdebc3MS6RFjasS6LPeWuWgfOgPIh1a6Vk=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEIDCCAwigAwIBAgIQNE7VVyDV7exJ9C/ON9srbTANBgkqhkiG9w0BAQUFADCBqTELMAkG
A1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlv
biBTZXJ2aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDYgdGhhd3RlLCBJbmMuIC0g
Rm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAMTFnRoYXd0ZSBQcmltYXJ5IFJvb3Qg
Q0EwHhcNMDYxMTE3MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCBqTELMAkGA1UEBhMCVVMxFTAT
BgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBE
aXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDYgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhvcml6
ZWQgdXNlIG9ubHkxHzAdBgNVBAMTFnRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCsoPD7gFnUnMekz52hWXMJEEUMDSxuaPFsW0hoSVk3
/AszGcJ3f8wQLZU0HObrTQmnHNK4yZc2AreJ1CRfBsDMRJSUjQJib+ta3RGNKJpchJAQeg29
dGYvajig4tVUROsdB58Hum/u6f1OCyn1PoSgAfGcq/gcfomk6KHYcWUNo1F77rzSImANuVud
37r8UVsLr5iy6S7pBOhih94ryNdOwUxkHt3Ph1i6Sk/KaAcdHJ1KxtUvkcx8cXIcxcBn6zL9
yZJclNqFwJu/U30rCfSMnZEfl2pSy94JNqR32HuHUETVPm4pafs5SSYeCaWAe0At6+gnhcn+
Yf1+5nyXHdWdAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0G
A1UdDgQWBBR7W0XPr87Lev0xkhpqtvNG61dIUDANBgkqhkiG9w0BAQUFAAOCAQEAeRHAS7OR
tvzw6WfUDW5FvlXok9LOAz/t2iWwHVfLHjp2oEzsUHboZHIMpKnxuIvW1oeEuzLlQRHAd9mz
YJ3rG9XRbkREqaYB7FViHXe4XI5ISXycO1cRrK1zN44veFyQaEfZYGDm/Ac9IiAXxPcW6cTY
cvnIc3zfFi8VqT79aie2oetaupgf1eNNZAqdE8hhuvU5HIe6uL17In/2/qxAeeWsEG89jxt5
dovEN7MhGITlNgDrYyCZuen+MwS7QcjBAvlEYyCegc5C09Y/LHbTY5xZ3Y+m4Q6gLkH3LpVH
z7z9M/P2C2F+fpErgUfCJzDupxBdN49cOSvkBPB7jVaMaA==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCByjELMAkG
A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU
cnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAtIEZvciBh
dXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQ
cmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcN
MzYwNzE2MjM1OTU5WjCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMu
MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBW
ZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp
U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0g
RzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvJAgIKXo1nmAMqudLO07cfLw8
RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKzj/i5Vbext0uz/o9+B1fs70PbZmIVYc9g
DaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIzSdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ0
23tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQGBO+QueQA5N06tRn/Arr0PO7gi+s3i+z016zy9vA9
r911kTMZHRxAy3QkGSGT2RT+rCpSx4/VBEnkjWNHiDxpg8v+R70rfk/Fla4OndTRQ8Bnc+MU
CH7lP59zuDMKz10/NIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNV
HQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAH
BgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVyaXNpZ24u
Y29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKvMzEzMA0GCSqGSIb3
DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzEp6B4Eq1iDkVwZMXnl2YtmAl+
X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU
7qKEKQsTb47bDN0lAtukixlE0kF6BWlKWE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMt
EMze/aiCKm0oHw0LxOXnGiYZ4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7
MzVIcbidJ4vEZV8NhnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDuDCCAqCgAwIBAgIQDPCOXAgWpa1Cf/DrJxhZ0DANBgkqhkiG9w0BAQUFADBIMQswCQYD
VQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xFzAVBgNVBAMTDlNl
Y3VyZVRydXN0IENBMB4XDTA2MTEwNzE5MzExOFoXDTI5MTIzMTE5NDA1NVowSDELMAkGA1UE
BhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9uMRcwFQYDVQQDEw5TZWN1
cmVUcnVzdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKukgeWVzfX2FI7C
T8rU4niVWJxB4Q2ZQCQXOZEzZum+4YOvYlyJ0fwkW2Gz4BERQRwdbvC4u/jep4G6pkjGnx29
vo6pQT64lO0pGtSO0gMdA+9tDWccV9cGrcrI9f4Or2YlSASWC12juhbDCE/RRvgUXPLIXgGZ
bf2IzIaowW8xQmxSPmjL8xk037uHGFaAJsTQ3MBv396gwpEWoGQRS0S8Hvbn+mPeZqx2pHGj
7DaUaHp3pLHnDi+BeuK1cobvomuL8A/b01k/unK8RCSc43Oz969XL0Imnal0ugBS8kvNU3xH
CzaFDmapCJcWNFfBZveA4+1wVMeT4C4oFVmHursCAwEAAaOBnTCBmjATBgkrBgEEAYI3FAIE
Bh4EAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUQjK2FvoE
/f5dS3rD/fdMQB1aQ68wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5zZWN1cmV0cnVz
dC5jb20vU1RDQS5jcmwwEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggEBADDt
T0rhWDpSclu1pqNlGKa7UTt36Z3q059c4EVlew3KW+JwULKUBRSuSceNQQcSc5R+DCMh/bwQ
f2AQWnL1mA6s7Ll/3XpvXdMc9P+IBWlCqQVxyLesJugutIxq/3HcuLHfmbx8IVQr5Fiiu1cp
rp6poxkmD5kuCLDv/WnPmRoJjeOnnyvJNjR7JLN4TJUXpAYmHrZkUjZfYGfZnMUFdAvnZyPS
CPyI6a6Lf+Ew9Dd+/cYy2i2eRDAwbO4H3tI0/NL/QPZL9GZGBlSm8jIKYyYwa5vR3ItHuuG5
1WLQoqD0ZwV4KWMabwTW+MZMo5qxN7SN5ShLHZ4swrhovO0C7jE=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDvDCCAqSgAwIBAgIQB1YipOjUiolN9BPI8PjqpTANBgkqhkiG9w0BAQUFADBKMQswCQYD
VQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNl
Y3VyZSBHbG9iYWwgQ0EwHhcNMDYxMTA3MTk0MjI4WhcNMjkxMjMxMTk1MjA2WjBKMQswCQYD
VQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNl
Y3VyZSBHbG9iYWwgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvNS7YrGxV
aQZx5RNoJLNP2MwhR/jxYDiJiQPpvepeRlMJ3Fz1Wuj3RSoC6zFh1ykzTM7HfAo3fg+6Mpjh
HZevj8fcyTiW89sa/FHtaMbQbqR8JNGuQsiWUGMu4P51/pinX0kuleM5M2SOHqRfkNJnPLLZ
/kG5VacJjnIFHovdRIWCQtBJwB1g8NEXLJXr9qXBkqPFwqcIYA1gBBCWeZ4WNOaptvolRTnI
HmX5k/Wq8VLcmZg9pYYaDDUz+kulBAYVHDGA76oYa8J719rO+TMg1fW9ajMtgQT7sFzUnKPi
XB3jqUJ1XnvUd+85VLrJChgbEplJL4hL/VBi0XPnj3pDAgMBAAGjgZ0wgZowEwYJKwYBBAGC
NxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK9E
BMJBfkiD2045AuzshHrmzsmkMDQGA1UdHwQtMCswKaAnoCWGI2h0dHA6Ly9jcmwuc2VjdXJl
dHJ1c3QuY29tL1NHQ0EuY3JsMBAGCSsGAQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBBQUAA4IB
AQBjGghAfaReUw132HquHw0LURYD7xh8yOOvaliTFGCRsoTciE6+OYo68+aCiV0BN7OrJKQV
DpI1WkpEXk5X+nXOH0jOZvQ8QCaSmGwb7iRGDBezUqXbpZGRzzfTb+cnCDpOGR86p1hcF895
P4vkp9MmI50mD1hp/Ed+stCNi5O/KU9DaXR2Z0vPB4zmAve14bRDtUstFJ/53CYNv6ZHdAbY
iNE6KTCEztI5gGIbqMdXSbxqVVFnFUq+NQfk1XWYN3kwFNspnWzFacxHVaIw98xcf8LDmBxr
ThaA63p4ZUWiABqvDA1VZDRIuJK58bRQKfJPIx/abKwfROHdI3hRW8cW
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCBgTELMAkG
A1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9y
ZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNVBAMTHkNPTU9ETyBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAwMDBaFw0yOTEyMzEyMzU5NTlaMIGBMQsw
CQYDVQQGEwJHQjEbMBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxm
b3JkMRowGAYDVQQKExFDT01PRE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECL
i3LjkRv3UcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI
2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8Q5sVW7eu
NJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp+2dtQem8Ob0y2WIC
8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+DT+nHbrTUcELpNqsOO9VUCQF
ZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5OnKVIrLsm9wIDAQABo4GOMIGLMB0GA1Ud
DgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW/zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUw
AwEB/zBJBgNVHR8EQjBAMD6gPKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9D
ZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5
t3iuHXIYSdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAv
IC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/RxdMosIG
lgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4zJVSk/BwJVmcIGfE
7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5ddBA6+C4OmF4O5MBKgxTMVBbkN
+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IBZQ==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIID5jCCAs6gAwIBAgIQV8szb8JcFuZHFhfjkDFo4DANBgkqhkiG9w0BAQUFADBiMQswCQYD
VQQGEwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMuMTAwLgYDVQQDEydO
ZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYxMjAxMDAwMDAw
WhcNMjkxMjMxMjM1OTU5WjBiMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1
dGlvbnMgTC5MLkMuMTAwLgYDVQQDEydOZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBB
dXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkvH6SMG3G2I4rC7xG
zuAnlt7e+foS0zwzc7MEL7xxjOWftiJgPl9dzgn/ggwbmlFQGiaJ3dVhXRncEg8tCqJDXRfQ
NJIg6nPPOCwGJgl6cvf6UDL4wpPTaaIjzkGxzOTVHzbRijr4jGPiFFlp7Q3Tf2vouAPlT2rl
mGNpSAW+Lv8ztumXWWn4Zxmuk2GWRBXTcrA/vGp97Eh/jcOrqnErU2lBUzS1sLnFBgrEsEX1
QV1uiUV7PTsmjHTC5dLRfbIR1PtYMiKagMnc/Qzpf14Dl847ABSHJ3A4qY5usyd2mFHgBeMh
qxrVhSI8KbWaFsWAqPS7azCPL0YCorEMIuDTAgMBAAGjgZcwgZQwHQYDVR0OBBYEFCEwyfsA
106Y2oeqKtCnLrFAMadMMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MFIGA1Ud
HwRLMEkwR6BFoEOGQWh0dHA6Ly9jcmwubmV0c29sc3NsLmNvbS9OZXR3b3JrU29sdXRpb25z
Q2VydGlmaWNhdGVBdXRob3JpdHkuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQC7rkvnt1frf6ot
t3NHhWrB5KUd5Oc86fRZZXe1eltajSU24HqXLjjAV2CDmAaDn7l2em5Q4LqILPxFzBiwmZVR
DuwduIj/h1AcgsLj4DKAv6ALR8jDMe+ZZzKATxcheQxpXN5eNK4CtSbqUN9/GGUsyfJj4akH
/nxxH2szJGoeBfcFaMBqEssuXmHLrijTfsK0ZpEmXzwuJF/LWA/rKOyvEZbz3HtvwKeI8lN3
s2Berq4o2jUsbzRF0ybh3uxbTydrFny9RAQYgrOJeRcQcT16ohZO9QHNpGxlaKFJdlxDydi8
NmdspZS11My5vWo1ViHe2MPr+8ukYEywVaCge1ey
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICiTCCAg+gAwIBAgIQH0evqmIAcFBUTAGem2OZKjAKBggqhkjOPQQDAzCBhTELMAkGA1UE
BhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEa
MBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwMzA2MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTEL
MAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2Fs
Zm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0Mg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQDR3svdcmC
FYX7deSRFtSrYpn1PlILBs5BAH+X4QokPB0BBO490o0JlwzgdeT6+3eKKvUDYEs2ixYjFq0J
cfRK9ChQtP6IHG4/bC8vCVlbpVsLM5niwz2J+Wos77LTBumjQjBAMB0GA1UdDgQWBBR1cacZ
SBm8nZ3qQUfflMRId5nTeTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAKBggq
hkjOPQQDAwNoADBlAjEA7wNbeqy3eApyt4jf/7VGFAkK+qDmfQjGGoe9GKhzvSbKYAydzpmf
z1wPMOG+FDHqAjAU9JM8SaczepBGR7NjfRObTrdvGDeAU/7dIOA1mjbRxwG55tzd8/8dLDoW
V9mSOdY=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIID8TCCAtmgAwIBAgIQQT1yx/RrH4FDffHSKFTfmjANBgkqhkiG9w0BAQUFADCBijELMAkG
A1UEBhMCQ0gxEDAOBgNVBAoTB1dJU2VLZXkxGzAZBgNVBAsTEkNvcHlyaWdodCAoYykgMjAw
NTEiMCAGA1UECxMZT0lTVEUgRm91bmRhdGlvbiBFbmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUg
V0lTZUtleSBHbG9iYWwgUm9vdCBHQSBDQTAeFw0wNTEyMTExNjAzNDRaFw0zNzEyMTExNjA5
NTFaMIGKMQswCQYDVQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEbMBkGA1UECxMSQ29weXJp
Z2h0IChjKSAyMDA1MSIwIAYDVQQLExlPSVNURSBGb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYD
VQQDEx9PSVNURSBXSVNlS2V5IEdsb2JhbCBSb290IEdBIENBMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAy0+zAJs9Nt350UlqaxBJH+zYK7LG+DKBKUOVTJoZIyEVRd7jyBxR
VVuuk+g3/ytr6dTqvirdqFEr12bDYVxgAsj1znJ7O7jyTmUIms2kahnBAbtzptf2w93NvKSL
tZlhuAGio9RN1AU9ka34tAhxZK9w8RxrfvbDd50kc3vkDIzh2TbhmYsFmQvtRTEJysIA2/dy
oJaqlYfQjse2YXMNdmaM3Bu0Y6Kff5MTMPGhJ9vZ/yxViJGg4E8HsChWjBgbl0SOid3gF27n
Ku+POQoxhILYQBRJLnpB5Kf+42TMwVlxSywhp1t94B3RLoGbw9ho972WG6xwsRYUC9tguSYB
BQIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUswN+
rja8sHnR3JQmthG+IbJphpQwEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggEB
AEuh/wuHbrP5wUOxSPMowB0uyQlB+pQAHKSkq0lPjz0e701vvbyk9vImMMkQyh2I+3QZH4VF
vbBsUfk2ftv1TDI6QU9bR8/oCy22xBmddMVHxjtqD6wU2zz0c5ypBd8A3HR4+vg1YFkCExh8
vPtNsCBtQ7tgMHpnM1zFmdH4LTlSc/uMqpclXHLZCB6rTjzjgTGfA6b7wP4piFXahNVQA7bi
hKOmNqoROgHhGEvWRGizPflTdISzRpFGlgC3gCy24eMQ4tui5yiPAZZiFj4A4xylNoEYokxS
dsARo27mHbrjWr42U8U+dY+GaSlYU7Wcu2+fXMUY7N0v4ZjJ/L7fCg0=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDqDCCApCgAwIBAgIJAP7c4wEPyUj/MA0GCSqGSIb3DQEBBQUAMDQxCzAJBgNVBAYTAkZS
MRIwEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hMB4XDTA3MDYyOTE1MTMw
NVoXDTI3MDYyOTE1MTMwNVowNDELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCURoaW15b3RpczER
MA8GA1UEAwwIQ2VydGlnbmEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDIaPHJ
1tazNHUmgh7stL7qXOEm7RFHYeGifBZ4QCHkYJ5ayGPhxLGWkv8YbWkj4Sti993iNi+RB7lI
zw7sebYs5zRLcAglozyHGxnygQcPOJAZ0xH+hrTy0V4eHpbNgGzOOzGTtvKg0KmVEn2lmsxr
yIRWijOp5yIVUxbwzBfsV1/pogqYCd7jX5xv3EjjhQsVWqa6n6xI4wmy9/Qy3l40vhx4XUJb
zg4ij02Q130yGLMLLGq/jj8UEYkgDncUtT2UCIf3JR7VsmAA7G8qKCVuKj4YYxclPz5EIBb2
JsglrgVKtOdjLPOMFlN+XPsRGgjBRmKfIrjxwo1p3Po6WAbfAgMBAAGjgbwwgbkwDwYDVR0T
AQH/BAUwAwEB/zAdBgNVHQ4EFgQUGu3+QTmQtCRZvgHyUtVF9lo53BEwZAYDVR0jBF0wW4AU
Gu3+QTmQtCRZvgHyUtVF9lo53BGhOKQ2MDQxCzAJBgNVBAYTAkZSMRIwEAYDVQQKDAlEaGlt
eW90aXMxETAPBgNVBAMMCENlcnRpZ25hggkA/tzjAQ/JSP8wDgYDVR0PAQH/BAQDAgEGMBEG
CWCGSAGG+EIBAQQEAwIABzANBgkqhkiG9w0BAQUFAAOCAQEAhQMeknH2Qq/ho2Ge6/PAD/Kl
1NqV5ta+aDY9fm4fTIrv0Q8hbV6lUmPOEvjvKtpv6zf+EwLHyzs+ImvaYS5/1HI93TDhHkxA
GYwP15zRgzB7mFncfca5DClMoTOi62c6ZYTTluLtdkVwj7Ur3vkj1kluPBS1xp81HlDQwY9q
cEQCYsuuHWhBp6pX6FOqB9IG9tUUBguRA3UsbHK1YZWaDYu5Def131TN3ubY1gkIl2PlwS6w
t0QmwCbAr1UwnjvVNioZBPRcHv/PLLf/0P2HQBHVESO7SMAhqaQoLf0V+LBOK/QwWyH8EZE0
vkHve52Xdf+XlcCWWC/qu0bXu+TZLg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDnzCCAoegAwIBAgIBJjANBgkqhkiG9w0BAQUFADBxMQswCQYDVQQGEwJERTEcMBoGA1UE
ChMTRGV1dHNjaGUgVGVsZWtvbSBBRzEfMB0GA1UECxMWVC1UZWxlU2VjIFRydXN0IENlbnRl
cjEjMCEGA1UEAxMaRGV1dHNjaGUgVGVsZWtvbSBSb290IENBIDIwHhcNOTkwNzA5MTIxMTAw
WhcNMTkwNzA5MjM1OTAwWjBxMQswCQYDVQQGEwJERTEcMBoGA1UEChMTRGV1dHNjaGUgVGVs
ZWtvbSBBRzEfMB0GA1UECxMWVC1UZWxlU2VjIFRydXN0IENlbnRlcjEjMCEGA1UEAxMaRGV1
dHNjaGUgVGVsZWtvbSBSb290IENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQCrC6M14IspFLEUha88EOQ5bzVdSq7d6mGNlUn0b2SjGmBmpKlAIoTZ1KXleJMOaAGtuU1c
Os7TuKhCQN/Po7qCWWqSG6wcmtoIKyUn+WkjR/Hg6yx6m/UTAtB+NHzCnjwAWav12gz1Mjwr
rFDa1sPeg5TKqAyZMg4ISFZbavva4VhYAUlfckE8FQYBjl2tqriTtM2e66foai1SNNs671x1
Udrb8zH57nGYMsRUFUQM+ZtV7a3fGAigo4aKSe5TBY8ZTNXeWHmb0mocQqvF1afPaA+W5OFh
mHZhyJF81j4A4pFQh+GdCuatl9Idxjp9y7zaAzTVjlsB9WoHtxa2bkp/AgMBAAGjQjBAMB0G
A1UdDgQWBBQxw3kbuvVT1xfgiXotF2wKsyudMzAPBgNVHRMECDAGAQH/AgEFMA4GA1UdDwEB
/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAlGRZrTlk5ynrE/5aw4sTV8gEJPB0d8Bg42f7
6Ymmg7+Wgnxu1MM9756AbrsptJh6sTtU6zkXR34ajgv8HzFZMQSyzhfzLMdiNlXiItiJVbSY
SKpk+tYcNthEeFpaIzpXl/V6ME+un2pMSyuOoAPjPuCp1NJ70rOo4nI8rZ7/gFnkm0W09juw
zTkZmDLl6iFhkOQxIY40sfcvNUqFENrnijchvllj4PKFiDFT1FQUhXB59C4Gdyd1Lx+4ivn+
xbrYNuSD7Odlt79jWvNGr4GUN9RBjNYj1h7P9WgbRGOiWrqnNVmh5XAFmw4jV5mUCm26OWMo
hpLzGITY+9HPBVZkVw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDoTCCAomgAwIBAgILBAAAAAABD4WqLUgwDQYJKoZIhvcNAQEFBQAwOzEYMBYGA1UEChMP
Q3liZXJ0cnVzdCwgSW5jMR8wHQYDVQQDExZDeWJlcnRydXN0IEdsb2JhbCBSb290MB4XDTA2
MTIxNTA4MDAwMFoXDTIxMTIxNTA4MDAwMFowOzEYMBYGA1UEChMPQ3liZXJ0cnVzdCwgSW5j
MR8wHQYDVQQDExZDeWJlcnRydXN0IEdsb2JhbCBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEA+Mi8vRRQZhP/8NN57CPytxrHjoXxEnOmGaoQ25yiZXRadz5RfVb23CO2
1O1fWLE3TdVJDm71aofW0ozSJ8bi/zafmGWgE07GKmSb1ZASzxQG9Dvj1Ci+6A74q05IlG2O
lTEQXO2iLb3VOm2yHLtgwEZLAfVJrn5GitB0jaEMAs7u/OePuGtm839EAL9mJRQr3RAwHQeW
P032a7iPt3sMpTjr3kfb1V05/Iin89cqdPHoWqI7n1C6poxFNcJQZZXcY4Lv3b93TZxiyWNz
FtApD0mpSPCzqrdsxacwOUBdrsTiXSZT8M4cIwhhqJQZugRiQOwfOHB3EgZxpzAYXSUnpQID
AQABo4GlMIGiMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS2
CHsNesysIEyGVjJez6tuhS1wVzA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vd3d3Mi5wdWJs
aWMtdHJ1c3QuY29tL2NybC9jdC9jdHJvb3QuY3JsMB8GA1UdIwQYMBaAFLYIew16zKwgTIZW
Ml7Pq26FLXBXMA0GCSqGSIb3DQEBBQUAA4IBAQBW7wojoFROlZfJ+InaRcHUowAl9B8Tq7ej
hVhpwjCt2BWKLePJzYFa+HMjWqd8BfP9IjsO0QbE2zZMcwSO5bAi5MXzLqXZI+O4Tkogp24C
JJ8iYGd7ix1yCcUxXOl5n4BHPa2hCwcUPUf/A2kaDAtE52Mlp3+yybh2hO0j9n0Hq0V+09+z
v+mKts2oomcrUtW3ZfA5TGOgkXmTUg9U3YO7n9GPp1Nzw8v/MOx8BLjYRB+TX3EJIrduPuoc
A06dGiBh+4E37F78CkWr1+cXVdCg6mCbpvbjjFspwgZgFJ0tl0ypkxWdYcQBX0jWWL1WMRJO
Ecgh4LMRkWXbtKaIOM5V
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFsDCCA5igAwIBAgIQFci9ZUdcr7iXAF7kBtK8nTANBgkqhkiG9w0BAQUFADBeMQswCQYD
VQQGEwJUVzEjMCEGA1UECgwaQ2h1bmdod2EgVGVsZWNvbSBDby4sIEx0ZC4xKjAoBgNVBAsM
IWVQS0kgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNDEyMjAwMjMxMjdaFw0z
NDEyMjAwMjMxMjdaMF4xCzAJBgNVBAYTAlRXMSMwIQYDVQQKDBpDaHVuZ2h3YSBUZWxlY29t
IENvLiwgTHRkLjEqMCgGA1UECwwhZVBLSSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA4SUP7o3biDN1Z82tH306Tm2d0y8U
82N0ywEhajfqhFAHSyZbCUNsIZ5qyNUD9WBpj8zwIuQf5/dqIjG3LBXy4P4AakP/h2XGtRrB
p0xtInAhijHyl3SJCRImHJ7K2RKilTza6We/CKBk49ZCt0Xvl/T29de1ShUCWH2YWEtgvM3X
DZoTM1PRYfl61dd4s5oz9wCGzh1NlDivqOx4UXCKXBCDUSH3ET00hl7lSM2XgYI1TBnsZfZr
xQWh7kcT1rMhJ5QQCtkkO7q+RBNGMD+XPNjX12ruOzjjK9SXDrkb5wdJfzcq+Xd4z1TtW0ad
o4AOkUPB1ltfFLqfpo0kR0BZv3I4sjZsN/+Z0V0OWQqraffAsgRFelQArr5T9rXn4fg8ozHS
qf4hUmTFpmfwdQcGlBSBVcYn5AGPF8Fqcde+S/uUWH1+ETOxQvdibBjWzwloPn9s9h6PYq2l
Y9sJpx8iQkEeb5mKPtf5P0B6ebClAZLSnT0IFaUQAS2zMnaolQ2zepr7BxB4EW/hj8e6DyUa
dCrlHJhBmd8hh+iVBmoKs2pHdmX2Os+PYhcZewoozRrSgx4hxyy/vv9haLdnG7t4TY3OZ+Xk
wY63I2binZB1NJipNiuKmpS5nezMirH4JYlcWrYvjB9teSSnUmjDhDXiZo1jDiVN1Rmy5nk3
pyKdVDECAwEAAaNqMGgwHQYDVR0OBBYEFB4M97Zn8uGSJglFwFU5Lnc/QkqiMAwGA1UdEwQF
MAMBAf8wOQYEZyoHAAQxMC8wLQIBADAJBgUrDgMCGgUAMAcGBWcqAwAABBRFsMLHClZ87lt4
DJX5GFPBphzYEDANBgkqhkiG9w0BAQUFAAOCAgEACbODU1kBPpVJufGBuvl2ICO1J2B01GqZ
NF5sAFPZn/KmsSQHRGoqxqWOeBLoR9lYGxMqXnmbnwoqZ6YlPwZpVnPDimZI+ymBV3QGypzq
KOg4ZyYr8dW1P2WT+DZdjo2NQCCHGervJ8A9tDkPJXtoUHRVnAxZfVo9QZQlUgjgRywVMRnV
vwdVxrsStZf0X4OFunHB2WyBEXYKCrC/gpf36j36+uwtqSiUO1bd0lEursC9CBWMd1I0ltab
rNMdjmEPNXubrjlpC2JgQCA2j6/7Nu4tCEoduL+bXPjqpRugc6bY+G7gMwRfaKonh+3ZwZCc
7b3jajWvY9+rGNm65ulK6lCKD2GTHuItGeIwlDWSXQ62B68ZgI9HkFFLLk3dheLSClIKF5r8
GrBQAuUBo2M3IUxExJtRmREOc5wGj1QupyheRDmHVi03vYVElOEMSyycw5KFNGHLD7ibSkNS
/jQ6fbjpKdx2qcgw+BRxgMYeNkh0IkFch4LoGHGLQYlE535YW6i4jRPpp2zDR+2zGp1iro2C
6pSe3VkQw63d4k3jMdXH7OjysP6SHhYKGvzZ8/gntsm+HbRsZJB/9OTEW9c3rkIO3aQab3yI
VMUWbuF6aC74Or8NpDyJO3inTmODBCEIZ43ygknQW/2xzQ+DhNQ+IIX3Sj0rnP0qCglN6oH4
EZw=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDODCCAiCgAwIBAgIGIAYFFnACMA0GCSqGSIb3DQEBBQUAMDsxCzAJBgNVBAYTAlJPMREw
DwYDVQQKEwhjZXJ0U0lHTjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBDQTAeFw0wNjA3MDQx
NzIwMDRaFw0zMTA3MDQxNzIwMDRaMDsxCzAJBgNVBAYTAlJPMREwDwYDVQQKEwhjZXJ0U0lH
TjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBALczuX7IJUqOtdu0KBuqV5Do0SLTZLrTk+jUrIZhQGpgV2hUhE28alQCBf/fm5oq
rl0Hj0rDKH/v+yv6efHHrfAQUySQi2bJqIirr1qjAOm+ukbuW3N7LBeCgV5iLKECZbO9xSsA
fsT8AzNXDe3i+s5dRdY4zTW2ssHQnIFKquSyAVwdj1+ZxLGt24gh65AIgoDzMKND5pCCrlUo
Se1b16kQOA7+j0xbm0bqQfWwCHTD0IgztnzXdN/chNFDDnU5oSVAKOp4yw4sLjmdjItuFhwv
JoIQ4uNllAoEwF73XVv4EOLQunpL+943AAAaWyjj0pxzPjKHmKHJUS/X3qwzs08CAwEAAaNC
MEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAcYwHQYDVR0OBBYEFOCMm9slSbPx
fIbWskKHC9BroNnkMA0GCSqGSIb3DQEBBQUAA4IBAQA+0hyJLjX8+HXd5n9liPRyTMks1zJO
890ZeUe9jjtbkw9QSSQTaxQGcu8J06Gh40CEyecYMnQ8SG4Pn0vU9x7Tk4ZkVJdjclDVVc/6
IJMCopvDI5NOFlV2oHB5bc0hH88vLbwZ44gx+FkagQnIl6Z0x2DEW8xXjrJ1/RsCCdtZb3KT
afcxQdaIOL+Hsr0Wefmq5L6IJd1hJyMctTEHBDa0GpC9oHRxUIltvBTjD4au8as+x6AJzKNI
0eDbZOeStc+vckNwi/nDhDwTqn6Sm1dTk/pwwpEOMfmbZ13pljheX7NzTogVZ96edhBiIL5V
aZVDADlN9u6wWk5JRFRYX0KD
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCBmDELMAkG
A1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA4IEdl
b1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1
c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMB4XDTA4MDQwMjAwMDAw
MFoXDTM3MTIwMTIzNTk1OVowgZgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJ
bmMuMTkwNwYDVQQLEzAoYykgMjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQg
dXNlIG9ubHkxNjA0BgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkgLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz
+uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5jK/BGvESyiaHAKAxJcCGVn2TAppMSAmUmhsalifD6
14SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdEc5IiaacDiGydY8hS2pgn5whMcD60yRLBxWeD
XTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3CIShwiP/WJmxsYAQlTlV+fe+/lEjetx3d
cI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exALDmKudlW/X3e+PkkBUz2YJQN2JFodtNuJ
6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZChuOl1UcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB
/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMR5yo6hTgMdHNxr2zFblD4/MH8tMA0GCSqG
SIb3DQEBCwUAA4IBAQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9cr5HqQ6XErhK8WTT
Od8lNNTBzU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbEAp7aDHdlDkQN
kv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGDAWh9jUGh
lBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUHSJsMC8tJP33st/3L
jWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2Gspki4cErx5z481+oghLrGREt
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICiDCCAg2gAwIBAgIQNfwmXNmET8k9Jj1Xm67XVjAKBggqhkjOPQQDAzCBhDELMAkGA1UE
BhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjE4MDYGA1UECxMvKGMpIDIwMDcgdGhhd3Rl
LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmlt
YXJ5IFJvb3QgQ0EgLSBHMjAeFw0wNzExMDUwMDAwMDBaFw0zODAxMTgyMzU5NTlaMIGEMQsw
CQYDVQQGEwJVUzEVMBMGA1UEChMMdGhhd3RlLCBJbmMuMTgwNgYDVQQLEy8oYykgMjAwNyB0
aGF3dGUsIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEkMCIGA1UEAxMbdGhhd3Rl
IFByaW1hcnkgUm9vdCBDQSAtIEcyMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEotWcgnuVnfFS
eIf+iha/BebfowJPDQfGAFG6DAJSLSKkQjnE/o/qycG+1E3/n3qe4rF8mq2nhglzh9HnmuN6
papu+7qzcMBniKI11KOasf2twu8x+qi58/sIxpHR+ymVo0IwQDAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUmtgAMADna3+FGO6Lts6KDPgR4bswCgYIKoZI
zj0EAwMDaQAwZgIxAN344FdHW6fmCsO99YCKlzUNG4k8VIZ3KMqh9HneteY4sPBlcIx/AlTC
v//YoT7ZzwIxAMSNlPzcU9LcnXgWHxUzI1NS41oxXZ3Krr0TKUQNJ1uo52icEvdYPy5yAlej
j6EULg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEKjCCAxKgAwIBAgIQYAGXt0an6rS0mtZLL/eQ+zANBgkqhkiG9w0BAQsFADCBrjELMAkG
A1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlv
biBTZXJ2aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDggdGhhd3RlLCBJbmMuIC0g
Rm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3Qg
Q0EgLSBHMzAeFw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIGuMQswCQYDVQQGEwJV
UzEVMBMGA1UEChMMdGhhd3RlLCBJbmMuMSgwJgYDVQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZp
Y2VzIERpdmlzaW9uMTgwNgYDVQQLEy8oYykgMjAwOCB0aGF3dGUsIEluYy4gLSBGb3IgYXV0
aG9yaXplZCB1c2Ugb25seTEkMCIGA1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAtIEcz
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsr8nLPvb2FvdeHsbnndmgcs+vHyu
86YnmjSjaDFxODNi5PNxZnmxqWWjpYvVj2AtP0LMqmsywCPLLEHd5N/8YZzic7IilRFDGF/E
th9XbAoFWCLINkw6fKXRz4aviKdEAhN0cXMKQlkC+BsUa0Lfb1+6a4KinVvnSr0eAXLbS3To
O39/fR8EtCab4LRarEc9VbjXsCZSKAExQGbY2SS99irY7CFJXJv2eul/VTV+lmuNk5Mny5K7
6qxAwJ/C+IDPXfRa3M50hqY+bAtTyr2SzhkGcuYMXDhpxwTWvGzOW/b3aJzcJRVIiKHpqfiY
nODz1TEoYRFsZ5aNOZnLwkUkOQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjAdBgNVHQ4EFgQUrWyqlGCc7eT/+j4KdCtjA/e2Wb8wDQYJKoZIhvcNAQELBQAD
ggEBABpA2JVlrAmSicY59BDlqQ5mU1143vokkbvnRFHfxhY0Cu9qRFHqKweKA3rD6z8KLFIW
oCtDuSWQP3CpMyVtRRooOyfPqsMpQhvfO0zAMzRbQYi/aytlryjvsvXDqmbOe1but8jLZ8HJ
nBoYuMTDSQPxYA5QzUbF83d597YV4Djbxy8ooAw/dyZ02SUS2jHaGh7cKUGRIjxpp7sC8rZc
JwOJ9Abqm+RyguOhCcHpABnTPtRwa7pxpqpYrvS76Wy274fMm7v/OeZWYdMKp8RcTGB7BXcm
er/YB1IsYvdwY9k5vG8cwnncdimvzsUsZAReiDZuMdRAGmI0Nj81Aa6sY6A=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDELMAkGA1UE
BhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA3IEdlb1Ry
dXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1c3Qg
UHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoX
DTM4MDExODIzNTk1OVowgZgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMu
MTkwNwYDVQQLEzAoYykgMjAwNyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNl
IG9ubHkxNjA0BgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkgLSBHMjB2MBAGByqGSM49AgEGBSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcL
So17VDs6bl8VAsBQps8lL33KSLjHUGMcKiEIfJo22Av+0SbFWDEwKCXzXV2juLaltJLtbCyf
691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
AQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+EVXVMAoGCCqGSM49BAMDA2cAMGQCMGSW
WaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGTqQ7mndwxHLKgpxgceeHHNgIwOlavmnRs
9vuD4DPTCF+hnMJbn0bWtsuRBmOiBuczrD6ogRLQy7rQkgu2npaqBA+K
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCBvTELMAkG
A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU
cnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJpU2lnbiwgSW5jLiAtIEZvciBh
dXRob3JpemVkIHVzZSBvbmx5MTgwNgYDVQQDEy9WZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTla
MIG9MQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl
cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMu
IC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNh
bCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj1mCOkdeQmIN65lgZOIzF9uVkhbSicfvtvbna
zU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGPMiJhgsWHH26MfF8WIFFE0XBPV+rjHOPM
ee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+HLL729fdC4uW/h2KJXwBL38Xd5HVEMkE6
HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN/BMReYTtXlT2NJ8IAfMQJQYXStrxHXpma5hgZqTZ
79IugvHw7wnqRMkVauIDbjPTrJ9VAMf2CGqUuV/c4DPxhGD5WycRtPwW8rtWaoAljQIDAQAB
o4GyMIGvMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0GCCsGAQUFBwEMBGEw
X6FdoFswWTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2Oa8PPgGrUSBgs
exkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1UdDgQWBBS2
d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4sAPmLGd75JR3Y8xu
TPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+seQxIcaBlVZaDrHC1LGmWazx
Y8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahf
YtTxP/jgdFcrGJ2BtMQo2pSXpXDrrB2+BxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tew
XDpPaj+PwGZsY6rp2aQW9IHRlRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WI
g0vvBZIGcfK4mJO37M2CYfE45k+XmCpajQ==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjELMAkGA1UE
BhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVz
dCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRo
b3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmlt
YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgw
MTE4MjM1OTU5WjCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8w
HQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJp
U2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2ln
biBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzQw
djAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8Utpkmw4tXNherJI9/gHmGUo9FANL+mAnINmD
iWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGzrl0Bp3vefLK+ymVhAIau2o970ImtTR1Z
mkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYI
KwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoas
jY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5naWYw
HQYDVR0OBBYEFLMWkf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMDA2gAMGUCMGYhDBgm
YFo4e1ZC4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIxAJw9SDkjOVga
FRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEFTCCAv2gAwIBAgIGSUEs5AAQMA0GCSqGSIb3DQEBCwUAMIGnMQswCQYDVQQGEwJIVTER
MA8GA1UEBwwIQnVkYXBlc3QxFTATBgNVBAoMDE5ldExvY2sgS2Z0LjE3MDUGA1UECwwuVGFu
w7pzw610dsOhbnlraWFkw7NrIChDZXJ0aWZpY2F0aW9uIFNlcnZpY2VzKTE1MDMGA1UEAwws
TmV0TG9jayBBcmFueSAoQ2xhc3MgR29sZCkgRsWRdGFuw7pzw610dsOhbnkwHhcNMDgxMjEx
MTUwODIxWhcNMjgxMjA2MTUwODIxWjCBpzELMAkGA1UEBhMCSFUxETAPBgNVBAcMCEJ1ZGFw
ZXN0MRUwEwYDVQQKDAxOZXRMb2NrIEtmdC4xNzA1BgNVBAsMLlRhbsO6c8OtdHbDoW55a2lh
ZMOzayAoQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcykxNTAzBgNVBAMMLE5ldExvY2sgQXJhbnkg
KENsYXNzIEdvbGQpIEbFkXRhbsO6c8OtdHbDoW55MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEAxCRec75LbRTDofTjl5Bu0jBFHjzuZ9lk4BqKf8owyoPjIMHj9DrTlF8afFtt
vzBPhCf2nx9JvMaZCpDyD/V/Q4Q3Y1GLeqVw/HpYzY6b7cNGbIRwXdrzAZAj/E4wqX7hJ2Pn
7WQ8oLjJM2P+FpD/sLj916jAwJRDC7bVWaaeVtAkH3B5r9s5VA1lddkVQZQBr17s9o3x/61k
/iCa11zr/qYfCGSji3ZVrR47KGAuhyXoqq8fxmRGILdwfzzeSNuWU7c5d+Qa4scWhHaXWy+7
GRWF+GmF9ZmnqfI0p6m2pgP8b4Y9VHx2BJtr+UBdADTHLpl1neWIA6pN+APSQnbAGwIDAKiL
o0UwQzASBgNVHRMBAf8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUzPpn
k/C2uNClwB7zU/2MU9+D15YwDQYJKoZIhvcNAQELBQADggEBAKt/7hwWqZw8UQCgwBEIBaeZ
5m8BiFRhbvG5GK1Krf6BQCOUL/t1fC8oS2IkgYIL9WHxHG64YTjrgfpioTtaYtOUZcTh5m2C
+C8lcLIhJsFyUR+MLMOEkMNaj7rP9KdlpeuY0fsFskZ1FSNqb4VjMIDw1Z4fKRzCbLBQWV2Q
WzuoDTDPv31/zvGdg73JRm4gpvlhUbohL3u+pRVjodSVh/GeufOJ8z2FuLjbvrW5KfnaNwUA
SZQDhETnv0Mxz3WLJdH0pmT1kvarBes96aULNmLazAZfNou2XjG4Kvte9nHfRCaexOYNkbQu
dZWAUWpLMKawYqGT8ZvYzsRjdT9ZR7E=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFyjCCA7KgAwIBAgIEAJiWjDANBgkqhkiG9w0BAQsFADBaMQswCQYDVQQGEwJOTDEeMBwG
A1UECgwVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSswKQYDVQQDDCJTdGFhdCBkZXIgTmVkZXJs
YW5kZW4gUm9vdCBDQSAtIEcyMB4XDTA4MDMyNjExMTgxN1oXDTIwMDMyNTExMDMxMFowWjEL
MAkGA1UEBhMCTkwxHjAcBgNVBAoMFVN0YWF0IGRlciBOZWRlcmxhbmRlbjErMCkGA1UEAwwi
U3RhYXQgZGVyIE5lZGVybGFuZGVuIFJvb3QgQ0EgLSBHMjCCAiIwDQYJKoZIhvcNAQEBBQAD
ggIPADCCAgoCggIBAMVZ5291qj5LnLW4rJ4L5PnZyqtdj7U5EILXr1HgO+EASGrP2uEGQxGZ
qhQlEq0i6ABtQ8SpuOUfiUtnvWFI7/3S4GCI5bkYYCjDdyutsDeqN95kWSpGV+RLufg3fNU2
54DBtvPUZ5uW6M7XxgpT0GtJlvOjCwV3SPcl5XCsMBQgJeN/dVrlSPhOewMHBPqCYYdu8DvE
pMfQ9XQ+pV0aCPKbJdL2rAQmPlU6Yiile7Iwr/g3wtG61jj99O9JMDeZJiFIhQGp5Rbn3JBV
3w/oOM2ZNyFPXfUib2rFEhZgF1XyZWampzCROME4HYYEhLoaJXhena/MUGDWE4dS7WMfbWV9
whUYdMrhfmQpjHLYFhN9C0lK8SgbIHRrxT3dsKpICT0ugpTNGmXZK4iambwYfp/ufWZ8Pr2U
uIHOzZgweMFvZ9C+X+Bo7d7iscksWXiSqt8rYGPy5V6548r6f1CGPqI0GAwJaCgRHOThuVw+
R7oyPxjMW4T182t0xHJ04eOLoEq9jWYv6q012iDTiIJh8BIitrzQ1aTsr1SIJSQ8p22xcik/
Plemf1WvbibG/ufMQFxRRIEKeN5KzlW/HdXZt1bv8Hb/C3m1r737qWmRRpdogBQ2HbN/uymY
NqUg+oJgYjOk7Na6B6duxc8UpufWkjTYgfX8HV2qXB72o007uPc5AgMBAAGjgZcwgZQwDwYD
VR0TAQH/BAUwAwEB/zBSBgNVHSAESzBJMEcGBFUdIAAwPzA9BggrBgEFBQcCARYxaHR0cDov
L3d3dy5wa2lvdmVyaGVpZC5ubC9wb2xpY2llcy9yb290LXBvbGljeS1HMjAOBgNVHQ8BAf8E
BAMCAQYwHQYDVR0OBBYEFJFoMocVHYnitfGsNig0jQt8YojrMA0GCSqGSIb3DQEBCwUAA4IC
AQCoQUpnKpKBglBu4dfYszk78wIVCVBR7y29JHuIhjv5tLySCZa59sCrI2AGeYwRTlHSeYAz
+51IvuxBQ4EffkdAHOV6CMqqi3WtFMTC6GY8ggen5ieCWxjmD27ZUD6KQhgpxrRW/FYQoAUX
vQwjf/ST7ZwaUb7dRUG/kSS0H4zpX897IZmflZ85OkYcbPnNe5yQzSipx6lVu6xiNGI1E0sU
OlWDuYaNkqbG9AclVMwWVxJKgnjIFNkXgiYtXSAfea7+1HAWFpWD2DU5/1JddRwWxRNVz0fM
dWVSSt7wsKfkCpYL+63C4iWEst3kvX5ZbJvw8NjnyvLplzh+ib7M+zkXYT9y2zqR2GUBGR2t
UKRXCnxLvJxxcypFURmFzI79R6d0lR2o0a9OF7FpJsKqeFdbxU2n5Z4FF5TKsl+gSRiNNOkm
bEgeqmiSBeGCc1qb3AdbCG19ndeNIdn8FCCqwkXfP+cAslHkwvgFuXkajDTznlvkN1trSt8s
V4pAWja63XVECDdCcAz+3F4hoKOKwJCcaNpQ5kUQR3i2TtJlycM33+FCY7BXN0Ute4qcvwXq
ZVUz9zkQxSgqIXobisQk+T8VyJoVIPVVYpbtbZNQvOSqeK3Zywplh6ZmwcSBo3c6WB4L7oOL
nR7SUqTMHW+wmG2UMbX4cQrcufx9MmDm66+KAQ==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDMDCCAhigAwIBAgICA+gwDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UEBhMCSEsxFjAUBgNV
BAoTDUhvbmdrb25nIFBvc3QxIDAeBgNVBAMTF0hvbmdrb25nIFBvc3QgUm9vdCBDQSAxMB4X
DTAzMDUxNTA1MTMxNFoXDTIzMDUxNTA0NTIyOVowRzELMAkGA1UEBhMCSEsxFjAUBgNVBAoT
DUhvbmdrb25nIFBvc3QxIDAeBgNVBAMTF0hvbmdrb25nIFBvc3QgUm9vdCBDQSAxMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP84tulmAknjorThkPlAj3n54r15/gK97iSS
HSL22oVyaf7XPwnU3ZG1ApzQjVrhVcNQhrkpJsLj2aDxaQMoIIBFIi1WpztUlVYiWR8o3x8g
PW2iNr4joLFutbEnPzlTCeqrauh0ssJlXI6/fMN4hM2eFvz1Lk8gKgifd/PFHsSaUmYeSF7j
EAaPIpjhZY4bXSNmO7ilMlHIhqqhqZ5/dpTCpmy3QfDVyAY45tQM4vM7TG1QjMSDJ8EThFk9
nnV0ttgCXjqQesBCNnLsak3c78QA3xMYV18meMjWCnl3v/evt3a5pQuEF10Q6m/hq5URX208
o1xNg1vysxmKgIsLhwIDAQABoyYwJDASBgNVHRMBAf8ECDAGAQH/AgEDMA4GA1UdDwEB/wQE
AwIBxjANBgkqhkiG9w0BAQUFAAOCAQEADkbVPK7ih9legYsCmEEIjEy82tvuJxuC52pF7BaL
T4Wg87JwvVqWuspube5Gi27nKi6Wsxkz67SfqLI37piol7Yutmcn1KZJ/RyTZXaeQi/cImya
T/JaFTmxcdcrUehtHJjA2Sr0oYJ71clBoiMBdDhViw+5LmeiIAQ32pwL0xch4I+XeTRvhEgC
IDMb5jREn5Fw9IBehEPCKdJsEhTkYY2sEJCehFC78JZvRZ+K88psT/oROhUVRsPNH4NbLUES
7VBnQRM9IauUiqpOfMGx+6fWtScvl6tu4B3i0RwsH0Ti/L6RoZz71ilTc4afU9hDDl3WY4Jx
HYB0yvbiAmvZWg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDbTCCAlWgAwIBAgIBATANBgkqhkiG9w0BAQUFADBYMQswCQYDVQQGEwJKUDErMCkGA1UE
ChMiSmFwYW4gQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcywgSW5jLjEcMBoGA1UEAxMTU2VjdXJl
U2lnbiBSb290Q0ExMTAeFw0wOTA0MDgwNDU2NDdaFw0yOTA0MDgwNDU2NDdaMFgxCzAJBgNV
BAYTAkpQMSswKQYDVQQKEyJKYXBhbiBDZXJ0aWZpY2F0aW9uIFNlcnZpY2VzLCBJbmMuMRww
GgYDVQQDExNTZWN1cmVTaWduIFJvb3RDQTExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEA/XeqpRyQBTvLTJszi1oURaTnkBbR31fSIRCkF/3frNYfp+TbfPfs37gD2pRY/V1y
fIw/XwFndBWW4wI8h9uuywGOwvNmxoVF9ALGOrVisq/6nL+k5tSAMJjzDbaTj6nU2DbysPyK
yiyhFTOVMdrAG/LuYpmGYz+/3ZMqg6h2uRMft85OQoWPIucuGvKVCbIFtUROd6EgvanyTgp9
UK31BQ1FT0Zx/Sg+U/sE2C3XZR1KG/rPO7AxmjVuyIsG0wCR8pQIZUyxNAYAeoni8McDWc/V
1uinMrPmmECGxc0nEovMe863ETxiYAcjPitAbpSACW22s293bzUIUPsCh8U+iQIDAQABo0Iw
QDAdBgNVHQ4EFgQUW/hNT7KlhtQ60vFjmqC+CfZXt94wDgYDVR0PAQH/BAQDAgEGMA8GA1Ud
EwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAKChOBZmLqdWHyGcBvod7bkixTgm2E5P
7KN/ed5GIaGHd48HCJqypMWvDzKYC3xmKbabfSVSSUOrTC4rbnpwrxYO4wJs+0LmGJ1F2FXI
6Dvd5+H0LgscNFxsWEr7jIhQX5Ucv+2rIrVls4W6ng+4reV6G4pQOh29Dbx7VFALuUKvVaAY
ga1lme++5Jy/xIWrQbJUb9wlze144o4MjQlJ3WN7WmmWAiGovVJZ6X01y8hSyn+B/tlr0/cR
7SXf+Of5pPpyl4RTDaXQMhhRdlkUbA/r7F+AjHVDg8OFmP9Mni0N5HeDk061lgeLKBObjBmN
QSdJQO7e5iNEOdyhIta6A/I=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIECjCCAvKgAwIBAgIJAMJ+QwRORz8ZMA0GCSqGSIb3DQEBCwUAMIGCMQswCQYDVQQGEwJI
VTERMA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMM
Hk1pY3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0Bl
LXN6aWduby5odTAeFw0wOTA2MTYxMTMwMThaFw0yOTEyMzAxMTMwMThaMIGCMQswCQYDVQQG
EwJIVTERMA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNV
BAMMHk1pY3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5m
b0BlLXN6aWduby5odTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOn4j/NjrdqG
2KfgQvvPkd6mJviZpWNwrZuuyjNAfW2WbqEORO7hE52UQlKavXWFdCyoDh2Tthi3jCyoz/tc
cbna7P7ofo/kLx2yqHWH2Leh5TvPmUpG0IMZfcChEhyVbUr02MelTTMuhTlAdX4UfIASmFDH
QWe4oIBhVKZsTh/gnQ4H6cm6M+f+wFUoLAKApxn1ntxVUwOXewdI/5n7N4okxFnMUBBjjqqp
GrCEGob5X7uxUG6k0QrM1XF+H6cbfPVTbiJfyyvm1HxdrtbCxkzlBQHZ7Vf8wSN5/PrIJIOV
87VqUQHQd9bpEqH5GoP7ghu5sJf0dgYzQ0mg/wu1+rUCAwEAAaOBgDB+MA8GA1UdEwEB/wQF
MAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBTLD8bfQkPMPcu1SCOhGnqmKrs0aDAf
BgNVHSMEGDAWgBTLD8bfQkPMPcu1SCOhGnqmKrs0aDAbBgNVHREEFDASgRBpbmZvQGUtc3pp
Z25vLmh1MA0GCSqGSIb3DQEBCwUAA4IBAQDJ0Q5eLtXMs3w+y/w9/w0olZMEyL/azXm4Q5Dw
pL7v8u8hmLzU1F0G9u5C7DBsoKqpyvGvivo/C3NqPuouQH4frlRheesuCDfXI/OMn74dseGk
ddug4lQUsbocKaQY9hK6ohQU4zE1yED/t+AFdlfBHFny+L/k7SViXITwfn4fs775tyERzAMB
VnCnEJIeGzSBHq2cGsMEPO0CYdYeBvNfOofyK/FFh+U9rNHHV4S9a67c2Pm2G2JwCz02yULy
Mtd6YebS2z3PyKnJm9zbWETXbzivf3jTo60adbocwTZ8jx5tHMN1Rq41Bab2XD0h7lbwyYIi
LXpUq3DDfSJlgnCW
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4GA1UECxMX
R2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNVBAMT
Ckdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4MTAwMDAwWjBMMSAwHgYDVQQL
ExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UE
AxMKR2xvYmFsU2lnbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5Bngi
FvXAg7aEyiie/QV2EcWtiHL8RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0M
K66X17YUhhB5uzsTgHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL
0gRgykmmKPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd
QQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZXriX7613
t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAwDgYDVR0PAQH/BAQD
AgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+oLkUkrk1Q+mOai97i3Ru8MA0G
CSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZURUm7lgAJQayzE4aGKAczymvmdLm6AC2u
pArT9fHxD4q/c2dKg8dEe3jgr25sbwMpjjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdW
PoO4zzUhw8lo/s7awlOqzJCK6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0
095MJ6RMG3NzdvQXmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJr
lAGomecsMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH
WD9f
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIGFDCCA/ygAwIBAgIIU+w77vuySF8wDQYJKoZIhvcNAQEFBQAwUTELMAkGA1UEBhMCRVMx
QjBABgNVBAMMOUF1dG9yaWRhZCBkZSBDZXJ0aWZpY2FjaW9uIEZpcm1hcHJvZmVzaW9uYWwg
Q0lGIEE2MjYzNDA2ODAeFw0wOTA1MjAwODM4MTVaFw0zMDEyMzEwODM4MTVaMFExCzAJBgNV
BAYTAkVTMUIwQAYDVQQDDDlBdXRvcmlkYWQgZGUgQ2VydGlmaWNhY2lvbiBGaXJtYXByb2Zl
c2lvbmFsIENJRiBBNjI2MzQwNjgwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDK
lmuO6vj78aI14H9M2uDDUtd9thDIAl6zQyrET2qyyhxdKJp4ERppWVevtSBC5IsP5t9bpgOS
L/UR5GLXMnE42QQMcas9UX4PB99jBVzpv5RvwSmCwLTaUbDBPLutN0pcyvFLNg4kq7/DhHf9
qFD0sefGL9ItWY16Ck6WaVICqjaY7Pz6FIMMNx/Jkjd/14Et5cS54D40/mf0PmbR0/RAz15i
NA9wBj4gGFrO93IbJWyTdBSTo3OxDqqHECNZXyAFGUftaI6SEspd/NYrspI8IM/hX68gvqB2
f3bl7BqGYTM+53u0P6APjqK5am+5hyZvQWyIplD9amML9ZMWGxmPsu2bm8mQ9QEM3xk9Dz44
I8kvjwzRAv4bVdZO0I08r0+k8/6vKtMFnXkIoctXMbScyJCyZ/QYFpM6/EfY0XiWMR+6Kwxf
XZmtY4laJCB22N/9q06mIqqdXuYnin1oKaPnirjaEbsXLZmdEyRG98Xi2J+Of8ePdG1asuhy
9azuJBCtLxTa/y2aRnFHvkLfuwHb9H/TKI8xWVvTyQKmtFLKbpf7Q8UIJm+K9Lv9nyiqDdVF
8xM6HdjAeI9BZzwelGSuewvF6NkBiDkal4ZkQdU7hwxu+g/GvUgUvzlN1J5Bto+WHWOWk9mV
BngxaJ43BjuAiUVhOSPHG0SjFeUc+JIwuwIDAQABo4HvMIHsMBIGA1UdEwEB/wQIMAYBAf8C
AQEwDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRlzeurNR4APn7VdMActHNHDhpkLzCBpgYD
VR0gBIGeMIGbMIGYBgRVHSAAMIGPMC8GCCsGAQUFBwIBFiNodHRwOi8vd3d3LmZpcm1hcHJv
ZmVzaW9uYWwuY29tL2NwczBcBggrBgEFBQcCAjBQHk4AUABhAHMAZQBvACAAZABlACAAbABh
ACAAQgBvAG4AYQBuAG8AdgBhACAANAA3ACAAQgBhAHIAYwBlAGwAbwBuAGEAIAAwADgAMAAx
ADcwDQYJKoZIhvcNAQEFBQADggIBABd9oPm03cXF661LJLWhAqvdpYhKsg9VSytXjDvlMd3+
xDLx51tkljYyGOylMnfX40S2wBEqgLk9am58m9Ot/MPWo+ZkKXzR4Tgegiv/J2Wv+xYVxC5x
hOW1//qkR71kMrv2JYSiJ0L1ILDCExARzRAVukKQKtJE4ZYm6zFIEv0q2skGz3QeqUvVhyj5
eTSSPi5E6PaPT481PyWzOdxjKpBrIF/EUhJOlywqrJ2X3kjyo2bbwtKDlaZmp54lD+kLM5Fl
ClrD2VQS3a/DTg4fJl4N3LON7NWBcN7STyQF82xO9UxJZo3R/9ILJUFI/lGExkKvgATP0H5k
SeTy36LssUzAKh3ntLFlosS88Zj0qnAHY7S42jtM+kAiMFsRpvAFDsYCA0irhpuF3dvd6qJ2
gHN99ZwExEWN57kci57q13XRcrHedUTnQn3iV2t93Jm8PYMo6oCTjcVMZcFwgbg4/EMxsvYD
NEeyrPsiBsse3RdHHF9mudMaotoRsaS8I8nkvof/uZS2+F0gStRf571oe2XyFR7SOqkt6dhr
JKyXWERHrVkY8SFlcN7ONGCoQPHzPKTDKCOM/iczQ0CgFzzr6juwcqajuUpLXhZI9LK8yIyS
xZ2frHI2vDSANGupi5LAuBft7HZT9SQBjLMi6Et8Vcad+qMUu2WFbm5PEn4KPJ2V
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF8TCCA9mgAwIBAgIQALC3WhZIX7/hy/WL1xnmfTANBgkqhkiG9w0BAQsFADA4MQswCQYD
VQQGEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6ZW5wZS5jb20wHhcN
MDcxMjEzMTMwODI4WhcNMzcxMjEzMDgyNzI1WjA4MQswCQYDVQQGEwJFUzEUMBIGA1UECgwL
SVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6ZW5wZS5jb20wggIiMA0GCSqGSIb3DQEBAQUAA4IC
DwAwggIKAoICAQDJ03rKDx6sp4boFmVqscIbRTJxldn+EFvMr+eleQGPicPK8lVx93e+d5Tz
cqQsRNiekpsUOqHnJJAKClaOxdgmlOHZSOEtPtoKct2jmRXagaKH9HtuJneJWK3W6wyyQXpz
bm3benhB6QiIEn6HLmYRY2xU+zydcsC8Lv/Ct90NduM61/e0aL6i9eOBbsFGb12N4E3GVFWJ
GjMxCrFXuaOKmMPsOzTFlUFpfnXCPCDFYbpRR6AgkJOhkEvzTnyFRVSa0QUmQbC1TR0zvsQD
yCV8wXDbO/QJLVQnSKwv4cSsPsjLkkxTOTcj7NMB+eAJRE1NZMDhDVqHIrytG6P+JrUV86f8
hBnp7KGItERphIPzidF0BqnMC9bC3ieFUCbKF7jJeodWLBoBHmy+E60QrLUk9TiRodZL2vG7
0t5HtfG8gfZZa88ZU+mNFctKy6lvROUbQc/hhqfK0GqfvEyNBjNaooXlkDWgYlwWTvDjovoD
GrQscbNYLN57C9saD+veIR8GdwYDsMnvmfzAuU8Lhij+0rnq49qlw0dpEuDb8PYZi+17cNcC
1u2HGCgsBCRMd+RIihrGO5rUD8r6ddIBQFqNeb+Lz0vPqhbBleStTIo+F5HUsWLlguWABKQD
fo2/2n+iD5dPDNMN+9fR5XJ+HMh3/1uaD7euBUbl8agW7EekFwIDAQABo4H2MIHzMIGwBgNV
HREEgagwgaWBD2luZm9AaXplbnBlLmNvbaSBkTCBjjFHMEUGA1UECgw+SVpFTlBFIFMuQS4g
LSBDSUYgQTAxMzM3MjYwLVJNZXJjLlZpdG9yaWEtR2FzdGVpeiBUMTA1NSBGNjIgUzgxQzBB
BgNVBAkMOkF2ZGEgZGVsIE1lZGl0ZXJyYW5lbyBFdG9yYmlkZWEgMTQgLSAwMTAxMCBWaXRv
cmlhLUdhc3RlaXowDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE
FB0cZQ6o8iV7tJHP5LGx5r1VdGwFMA0GCSqGSIb3DQEBCwUAA4ICAQB4pgwWSp9MiDrAyw6l
Fn2fuUhfGI8NYjb2zRlrrKvV9pF9rnHzP7MOeIWblaQnIUdCSnxIOvVFfLMMjlF4rJUT3sb9
fbgakEyrkgPH7UIBzg/YsfqikuFgba56awmqxinuaElnMIAkejEWOVt+8Rwu3WwJrfIxwYJO
ubv5vr8qhT/AQKM6WfxZSzwoJNu0FXWuDYi6LnPAvViH5ULy617uHjAimcs30cQhbIHsvm0m
5hzkQiCeR7Csg1lwLDXWrzY0tM07+DKo7+N4ifuNRSzanLh+QBxh5z6ikixL8s36mLYp//Py
e6kfLqCTVyvehQP5aTfLnnhqBbTFMXiJ7HqnheG5ezzevh55hM6fcA5ZwjUukCox2eRFekGk
LhObNA5me0mrZJfQRsN5nXJQY6aYWwa9SG3YOYNw6DXwBdGqvOPbyALqfP2C2sJbUjWumDqt
ujWTI6cfSN01RpiyEGjkpTHCClguGYEQyVB1/OpaFs4R1+7vUIgtYf8/QnMFlEPVjjxOAToZ
pR9GTnfQXeWBIiGH/pR9hNiTrdZoQ0iy2+tzJOeRf1SktoA+naM8THLCV8Sg1Mw4J87VBp6i
SNnpn86CcDaTmjvfliHjWbcM2pE38P1ZWrOZyGlsQyYBNWNgVYkDOnXYukrZVP/u3oDYLdE4
1V4tC5h9Pmzb/CaIxw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIHTzCCBTegAwIBAgIJAKPaQn6ksa7aMA0GCSqGSIb3DQEBBQUAMIGuMQswCQYDVQQGEwJF
VTFDMEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZp
cm1hLmNvbS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1l
cmZpcm1hIFMuQS4xKTAnBgNVBAMTIENoYW1iZXJzIG9mIENvbW1lcmNlIFJvb3QgLSAyMDA4
MB4XDTA4MDgwMTEyMjk1MFoXDTM4MDczMTEyMjk1MFowga4xCzAJBgNVBAYTAkVVMUMwQQYD
VQQHEzpNYWRyaWQgKHNlZSBjdXJyZW50IGFkZHJlc3MgYXQgd3d3LmNhbWVyZmlybWEuY29t
L2FkZHJlc3MpMRIwEAYDVQQFEwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENhbWVyZmlybWEg
Uy5BLjEpMCcGA1UEAxMgQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdCAtIDIwMDgwggIiMA0G
CSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCvAMtwNyuAWko6bHiUfaN/Gh/2NdW928sNRHI+
JrKQUrpjOyhYb6WzbZSm891kDFX29ufyIiKAXuFixrYp4YFs8r/lfTJqVKAyGVn+H4vXPWCG
hSRv4xGzdz4gljUha7MI2XAuZPeEklPWDrCQiorjh40G072QDuKZoRuGDtqaCrsLYVAGUvGe
f3bsyw/QHg3PmTA9HMRFEFis1tPo1+XqxQEHd9ZR5gN/ikilTWh1uem8nk4ZcfUyS5xtYBkL
+8ydddy/Js2Pk3g5eXNeJQ7KXOt3EgfLZEFHcpOrUMPrCXZkNNI5t3YRCQ12RcSprj1qr7V9
ZS+UWBDsXHyvfuK2GNnQm05aSd+pZgvMPMZ4fKecHePOjlO+Bd5gD2vlGts/4+EhySnB8esH
nFIbAURRPHsl18TlUlRdJQfKFiC4reRB7noI/plvg6aRArBsNlVq5331lubKgdaX8ZSD6e2w
sWsSaR6s+12pxZjptFtYer49okQ6Y1nUCyXeG0+95QGezdIp1Z8XGQpvvwyQ0wlf2eOKNcx5
Wk0ZN5K3xMGtr/R5JJqyAQuxr1yW84Ay+1w9mPGgP0revq+ULtlVmhduYJ1jbLhjya6BXBg1
4JC7vjxPNyK5fuvPnnchpj04gftI2jE9K+OJ9dC1vX7gUMQSibMjmhAxhduub+84Mxh2EQID
AQABo4IBbDCCAWgwEgYDVR0TAQH/BAgwBgEB/wIBDDAdBgNVHQ4EFgQU+SSsD7K1+HnA+mCI
G8TZTQKeFxkwgeMGA1UdIwSB2zCB2IAU+SSsD7K1+HnA+mCIG8TZTQKeFxmhgbSkgbEwga4x
CzAJBgNVBAYTAkVVMUMwQQYDVQQHEzpNYWRyaWQgKHNlZSBjdXJyZW50IGFkZHJlc3MgYXQg
d3d3LmNhbWVyZmlybWEuY29tL2FkZHJlc3MpMRIwEAYDVQQFEwlBODI3NDMyODcxGzAZBgNV
BAoTEkFDIENhbWVyZmlybWEgUy5BLjEpMCcGA1UEAxMgQ2hhbWJlcnMgb2YgQ29tbWVyY2Ug
Um9vdCAtIDIwMDiCCQCj2kJ+pLGu2jAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRV
HSAAMCowKAYIKwYBBQUHAgEWHGh0dHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZI
hvcNAQEFBQADggIBAJASryI1wqM58C7e6bXpeHxIvj99RZJe6dqxGfwWPJ+0W2aeaufDuV2I
6A+tzyMP3iU6XsxPpcG1Lawk0lgH3qLPaYRgM+gQDROpI9CF5Y57pp49chNyM/WqfcZjHwj0
/gF/JM8rLFQJ3uIrbZLGOU8W6jx+ekbURWpGqOt1glanq6B8aBMz9p0w8G8nOSQjKpD9kCk1
8pPfNKXG9/jvjA9iSnyu0/VU+I22mlaHFoI6M6taIgj3grrqLuBHmrS1RaMFO9ncLkVAO+rc
f+g769HsJtg1pDDFOqxXnrN2pSB7+R5KBWIBpih1YJeSDW4+TTdDDZIVnBgizVGZoCkaPF+K
MjNbMMeJL0eYD6MDxvbxrN8y8NmBGuScvfaAFPDRLLmF9dijscilIeUcE5fuDr3fKanvNFNb
0+RqE4QGtjICxFKuItLcsiFCGtpA8CnJ7AoMXOLQusxI0zcKzBIKinmwPQN/aUv0NCB9szTq
jktk9T79syNnFQ0EuPAtwQlRPLJsFfClI9eDdOTlLsn+mCdCxqvGnrDQWzilm1DefhiYtUU7
9nm06PcaewaD+9CL2rvHvRirCG88gGtAPxkZumWK5r7VXNM21+9AUiRgOGcEMeyP84LG3rlV
8zsxkVrctQgVrXYlCg17LofiDKYGvCYQbTed7N14jHyAxfDZd0jQ
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIHSTCCBTGgAwIBAgIJAMnN0+nVfSPOMA0GCSqGSIb3DQEBBQUAMIGsMQswCQYDVQQGEwJF
VTFDMEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZp
cm1hLmNvbS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1l
cmZpcm1hIFMuQS4xJzAlBgNVBAMTHkdsb2JhbCBDaGFtYmVyc2lnbiBSb290IC0gMjAwODAe
Fw0wODA4MDExMjMxNDBaFw0zODA3MzExMjMxNDBaMIGsMQswCQYDVQQGEwJFVTFDMEEGA1UE
BxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNvbS9h
ZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMu
QS4xJzAlBgNVBAMTHkdsb2JhbCBDaGFtYmVyc2lnbiBSb290IC0gMjAwODCCAiIwDQYJKoZI
hvcNAQEBBQADggIPADCCAgoCggIBAMDfVtPkOpt2RbQT2//BthmLN0EYlVJH6xedKYiONWwG
Mi5HYvNJBL99RDaxccy9Wglz1dmFRP+RVyXfXjaOcNFccUMd2drvXNL7G706tcuto8xEpw2u
IRU/uXpbknXYpBI4iRmKt4DS4jJvVpyR1ogQC7N0ZJJ0YPP2zxhPYLIj0Mc7zmFLmY/CDNBA
spjcDahOo7kKrmCgrUVSY7pmvWjg+b4aqIG7HkF4ddPB/gBVsIdU6CeQNR1MM62X/JcumIS/
LMmjv9GYERTtY/jKmIhYF5ntRQOXfjyGHoiMvvKRhI9lNNgATH23MRdaKXoKGCQwoze1eqkB
fSbW+Q6OWfH9GzO1KTsXO0G2Id3UwD2ln58fQ1DJu7xsepeY7s2MH/ucUa6LcL0nn3HAa6x9
kGbo1106DbDVwo3VyJ2dwW3Q0L9R5OP4wzg2rtandeavhENdk5IMagfeOx2YItaswTXbo6Al
/3K1dh3ebeksZixShNBFks4c5eUzHdwHU1SjqoI7mjcv3N2gZOnm3b2u/GSFHTynyQbehP9r
6GsaPMWis0L7iwk+XwhSx2LE1AVxv8Rk5Pihg+g+EpuoHtQ2TS9x9o0o9oOpE9JhwZG7SMA0
j0GMS0zbaRL/UJScIINZc+18ofLx/d33SdNDWKBWY8o9PeU1VlnpDsogzCtLkykPAgMBAAGj
ggFqMIIBZjASBgNVHRMBAf8ECDAGAQH/AgEMMB0GA1UdDgQWBBS5CcqcHtvTbDprru1U8VuT
BjUuXjCB4QYDVR0jBIHZMIHWgBS5CcqcHtvTbDprru1U8VuTBjUuXqGBsqSBrzCBrDELMAkG
A1UEBhMCRVUxQzBBBgNVBAcTOk1hZHJpZCAoc2VlIGN1cnJlbnQgYWRkcmVzcyBhdCB3d3cu
Y2FtZXJmaXJtYS5jb20vYWRkcmVzcykxEjAQBgNVBAUTCUE4Mjc0MzI4NzEbMBkGA1UEChMS
QUMgQ2FtZXJmaXJtYSBTLkEuMScwJQYDVQQDEx5HbG9iYWwgQ2hhbWJlcnNpZ24gUm9vdCAt
IDIwMDiCCQDJzdPp1X0jzjAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRVHSAAMCow
KAYIKwYBBQUHAgEWHGh0dHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZIhvcNAQEF
BQADggIBAICIf3DekijZBZRG/5BXqfEv3xoNa/p8DhxJJHkn2EaqbylZUohwEurdPfWbU1Rv
4WCiqAm57OtZfMY18dwY6fFn5a+6ReAJ3spED8IXDneRRXozX1+WLGiLwUePmJs9wOzL9dWC
koQ10b42OFZyMVtHLaoXpGNR6woBrX/sdZ7LoR/xfxKxueRkf2fWIyr0uDldmOghp+G9PUIa
dJpwr2hsUF1Jz//7Dl3mLEfXgTpZALVza2Mg9jFFCDkO9HB+QHBaP9BrQql0PSgvAm11cpUJ
jUhjxsYjV5KTXjXBjfkK9yydYhz2rXzdpjEetrHHfoUm+qRqtdpjMNHvkzeyZi99Bffnt0uY
lDXA2TopwZ2yUDMdSqlapskD7+3056huirRXhOukP9DuqqqHW2Pok+JrqNS4cnhrG+055F3L
m6qH1U9OAP7Zap88MQ8oAgF9mOinsKJknnn4SPIVqczmyETrP3iZ8ntxPjzxmKfFGBI/5rso
M0LpRQp8bfKGeS/Fghl9CYl8slR2iK7ewfPM4W7bMdaTrpmg7yVqc5iJWzouE4gev8CSlDQb
4ye3ix5vQv/n6TebUB0tovkC7stYWDpxvGjjqsGvHCgfotwjZT+B6q6Z09gwzxMNTxXJhLyn
SC34MCN32EZLeW32jO06f2ARePTpm67VVMB0gNELQp/B
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDxTCCAq2gAwIBAgIBADANBgkqhkiG9w0BAQsFADCBgzELMAkGA1UEBhMCVVMxEDAOBgNV
BAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29t
LCBJbmMuMTEwLwYDVQQDEyhHbyBEYWRkeSBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAt
IEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgYMxCzAJBgNVBAYTAlVTMRAw
DgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5
LmNvbSwgSW5jLjExMC8GA1UEAxMoR28gRGFkZHkgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3Jp
dHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL9xYgjx+lk09xvJGKP3
gElY6SKDE6bFIEMBO4Tx5oVJnyfq9oQbTqC023CYxzIBsQU+B07u9PpPL1kwIuerGVZr4oAH
/PMWdYA5UXvl+TW2dE6pjYIT5LY/qQOD+qK+ihVqf94Lw7YZFAXK6sOoBJQ7RnwyDfMAZiLI
jWltNowRGLfTshxgtDj6AozO091GB94KPutdfMh8+7ArU6SSYmlRJQVhGkSBjCypQ5Yj36w6
gZoOKcUcqeldHraenjAKOc7xiID7S13MMuyFYkMlNAJWJwGRtDtwKj9useiciAF9n9T521Nt
YJ2/LOdYq7hfRvzOxBsDPAnrSTFcaUaz4EcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO
BgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDqahQcQZyi27/a9BUFuIMGU2g/eMA0GCSqGSIb3
DQEBCwUAA4IBAQCZ21151fmXWWcDYfF+OwYxdS2hII5PZYe096acvNjpL9DbWu7PdIxztDhC
2gV7+AJ1uP2lsdeu9tfeE8tTEH6KRtGX+rcuKxGrkLAngPnon1rpN5+r5N9ss4UXnT3ZJE95
kTXWXwTrgIOrmgIttRD02JDHBHNA7XIloKmf7J6raBKZV8aPEjoJpL1E/QYVN8Gb5DKj7Tjo
2GTzLH4U/ALqn83/B2gX2yKQOC16jdFU8WnjXzPKej17CuPKf1855eJ1usV2GDPOLPAvTK33
sefOT6jEm0pUBsV/fdUID+Ic/n4XuKxe9tQWskMJDE32p2u0mYRlynqI4uJEvlz36hz1
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIID3TCCAsWgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxEDAOBgNV
BAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBU
ZWNobm9sb2dpZXMsIEluYy4xMjAwBgNVBAMTKVN0YXJmaWVsZCBSb290IENlcnRpZmljYXRl
IEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgY8xCzAJ
BgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYD
VQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIwMAYDVQQDEylTdGFyZmllbGQg
Um9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBAL3twQP89o/8ArFvW59I2Z154qK3A2FWGMNHttfKPTUuiUP3oWmb3ooa/RMg
nLRJdzIpVv257IzdIvpy3Cdhl+72WoTsbhm5iSzchFvVdPtrX8WJpRBSiUZV9Lh1HOZ/5FSu
S/hVclcCGfgXcVnrHigHdMWdSL5stPSksPNkN3mSwOxGXn/hbVNMYq/NHwtjuzqd+/x5AJhh
dM8mgkBj87JyahkNmcrUDnXMN/uLicFZ8WJ/X7NfZTD4p7dNdloedl40wOiWVpmKs/B/pM29
3DIxfJHP4F8R+GuqSVzRmZTRouNjWwl2tVZi4Ut0HZbUJtQIBFnQmA4O5t78w+wfkPECAwEA
AaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFHwMMh+n
2TB/xH1oo2Kooc6rB1snMA0GCSqGSIb3DQEBCwUAA4IBAQARWfolTwNvlJk7mh+ChTnUdgWU
XuEok21iXQnCoKjUsHU48TRqneSfioYmUeYs0cYtbpUgSpIB7LiKZ3sx4mcujJUDJi5DnUox
9g61DLu34jd/IroAow57UvtruzvE03lRTs2Q9GcHGcg8RnoNAX3FWOdt5oUwF5okxBDgBPfg
8n/Uqgr/Qh037ZTlZFkSIHc40zI+OIF1lnP6aI+xy84fxez6nH7PfrHxBy22/L/KpL/QlwVK
vOoYKAKQvVR4CSFx09F9HdkWsKlhPdAKACL8x3vLCWRFCztAgfd9fDL1mMpYjn0q7pBZc2T5
NnReJaH1ZgUufzkVqSr7UIuOhWn0
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIID7zCCAtegAwIBAgIBADANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMxEDAOBgNV
BAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBU
ZWNobm9sb2dpZXMsIEluYy4xOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENl
cnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1
OVowgZgxCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNk
YWxlMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJT
dGFyZmllbGQgU2VydmljZXMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANUMOsQq+U7i9b4Zl1+OiFOxHz/Lz58gE20p
OsgPfTz3a3Y4Y9k2YKibXlwAgLIvWX/2h/klQ4bnaRtSmpDhcePYLQ1Ob/bISdm28xpWriu2
dBTrz/sm4xq6HZYuajtYlIlHVv8loJNwU4PahHQUw2eeBGg6345AWh1KTs9DkTvnVtYAcMtS
7nt9rjrnvDH5RfbCYM8TWQIrgMw0R9+53pBlbQLPLJGmpufehRhJfGZOozptqbXuNC66DQO4
M99H67FrjSXZm86B0UVGMpZwh94CDklDhbZsc7tk6mFBrMnUVN+HL8cisibMn1lUaJ/8viov
xFUcdUBgF4UCVTmLfwUCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
AQYwHQYDVR0OBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMA0GCSqGSIb3DQEBCwUAA4IBAQBL
NqaEd2ndOxmfZyMIbw5hyf2E3F/YNoHN2BtBLZ9g3ccaaNnRbobhiCPPE95Dz+I0swSdHynV
v/heyNXBve6SbzJ08pGCL72CQnqtKrcgfU28elUSwhXqvfdqlS5sdJ/PHLTyxQGjhdByPq1z
qwubdQxtRbeOlKyWN7Wg0I8VRw7j6IPdj/3vQQF3zCepYoUz8jcI73HPdwbeyBkdiEDPfUYd
/x7H4c7/I9vG+o1VTqkC50cRRj70/b17KSa7qWFiNyi2LSr2EIZkyXCn0q23KXB56jzaYyWf
/Wi3MOxw+3WKt21gZ7IeyLnp2KhvAotnDU0mV3HaIPzBSlCNsSi6
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDTDCCAjSgAwIBAgIId3cGJyapsXwwDQYJKoZIhvcNAQELBQAwRDELMAkGA1UEBhMCVVMx
FDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBDb21tZXJjaWFs
MB4XDTEwMDEyOTE0MDYwNloXDTMwMTIzMTE0MDYwNlowRDELMAkGA1UEBhMCVVMxFDASBgNV
BAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBDb21tZXJjaWFsMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA9htPZwcroRX1BiLLHwGy43NFBkRJLLtJJRTW
zsO3qyxPxkEylFf6EqdbDuKPHx6GGaeqtS25Xw2Kwq+FNXkyLbscYjfysVtKPcrNcV/pQr6U
6Mje+SJIZMblq8Yrba0F8PrVC8+a5fBQpIs7R6UjW3p6+DM/uO+Zl+MgwdYoic+U+7lF7eNA
FxHUdPALMeIrJmqbTFeurCA+ukV6BfO9m2kVrn1OIGPENXY6BwLJN/3HR+7o8XYdcxXyl6S1
yHp52UKqK39c/s4mT6NmgTWvRLpUHhwwMmWd5jyTXlBOeuM61G7MGvv50jeuJCqrVwMiKA1J
dX+3KNp1v47j3A55MQIDAQABo0IwQDAdBgNVHQ4EFgQUnZPGU4teyq8/nx4P5ZmVvCT2lI8w
DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQELBQADggEBAFis
9AQOzcAN/wr91LoWXym9e2iZWEnStB03TX8nfUYGXUPGhi4+c7ImfU+TqbbEKpqrIZcUsd6M
06uJFdhrJNTxFq7YpFzUf1GO7RgBsZNjvbz4YYCanrHOQnDiqX0GJX0nof5v7LMeJNrjS1Ua
ADs1tDvZ110w/YETifLCBivtZ8SOyUOyXGsViQK8YvxO8rUzqrJv0wqiUOP2O+guRMLbZjip
M1ZI8W0bM40NjD9gN53Tym1+NH4Nn3J2ixufcv1SNUFFApYvHLKac0khsUlHRUe072o0EclN
msxZt9YCnlpOZbWUrhvfKbAW8b8Angc6F2S1BLUjIZkKlTuXfO8=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDTDCCAjSgAwIBAgIIfE8EORzUmS0wDQYJKoZIhvcNAQEFBQAwRDELMAkGA1UEBhMCVVMx
FDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBOZXR3b3JraW5n
MB4XDTEwMDEyOTE0MDgyNFoXDTMwMTIzMTE0MDgyNFowRDELMAkGA1UEBhMCVVMxFDASBgNV
BAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBOZXR3b3JraW5nMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtITMMxcua5Rsa2FSoOujz3mUTOWUgJnLVWRE
ZY9nZOIG41w3SfYvm4SEHi3yYJ0wTsyEheIszx6e/jarM3c1RNg1lho9Nuh6DtjVR6FqaYvZ
/Ls6rnla1fTWcbuakCNrmreIdIcMHl+5ni36q1Mr3Lt2PpNMCAiMHqIjHNRqrSK6mQEubWXL
viRmVSRLQESxG9fhwoXA3hA/Pe24/PHxI1Pcv2WXb9n5QHGNfb2V1M6+oF4nI979ptAmDgAp
6zxG8D1gvz9Q0twmQVGeFDdCBKNwV6gbh+0t+nvujArjqWaJGctB+d1ENmHP4ndGyH329JKB
Nv3bNPFyfvMMFr20FQIDAQABo0IwQDAdBgNVHQ4EFgQUBx/S55zawm6iQLSwelAQUHTEyL0w
DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEBAIlX
shZ6qML91tmbmzTCnLQyFE2npN/svqe++EPbkTfOtDIuUFUaNU52Q3Eg75N3ThVwLofDwR1t
3Mu1J9QsVtFSUzpE0nPIxBsFZVpikpzuQY0x2+c06lkh1QF612S4ZDnNye2v7UsDSKegmQGA
3GWjNq5lWUhPgkvIZfFXHeVZLgo/bNjR9eUJtGxUAArgFU2HdW23WJZa3W3SAKD0m0i+wzek
ujbgfIeFlxoVot4uolu9rxj5kFDNcFn4J2dHy8egBzp90SxdbBk6ZrV9/ZFvgrG+CJPbFEfx
ojfHRZ48x3evZKiT3/Zpg4Jg8klCNO1aAFSFHBY2kgxc+qatv9s=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFRjCCAy6gAwIBAgIIbYwURrGmCu4wDQYJKoZIhvcNAQEMBQAwQTELMAkGA1UEBhMCVVMx
FDASBgNVBAoMC0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVzdCBQcmVtaXVtMB4X
DTEwMDEyOTE0MTAzNloXDTQwMTIzMTE0MTAzNlowQTELMAkGA1UEBhMCVVMxFDASBgNVBAoM
C0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVzdCBQcmVtaXVtMIICIjANBgkqhkiG
9w0BAQEFAAOCAg8AMIICCgKCAgEAxBLfqV/+Qd3d9Z+K4/as4Tx4mrzY8H96oDMq3I0gW64t
b+eT2TZwamjPjlGjhVtnBKAQJG9dKILBl1fYSCkTtuG+kU3fhQxTGJoeJKJPj/CihQvL9Cl/
0qRY7iZNyaqoe5rZ+jjeRFcV5fiMyNlI4g0WJx0eyIOFJbe6qlVBzAMiSy2RjYvmia9mx+n/
K+k8rNrSs8PhaJyJ+HoAVt70VZVs+7pk3WKL3wt3MutizCaam7uqYoNMtAZ6MMgpv+0GTZe5
HMQxK9VfvFMSF5yZVylmd2EhMQcuJUmdGPLu8ytxjLW6OQdJd/zvLpKQBY0tL3d770O/Nbua
2Plzpyzy0FfuKE4mX4+QaAkvuPjcBukumj5Rp9EixAqnOEhss/n/fauGV+O61oV4d7pD6kh/
9ti+I20ev9E2bFhc8e6kGVQa9QPSdubhjL08s9NIS+LI+H+SqHZGnEJlPqQewQcDWkYtuJfz
t9WyVSHvutxMAJf7FJUnM7/oQ0dG0giZFmA7mn7S5u046uwBHjxIVkkJx0w3AJ6IDsBz4W9m
6XJHMD4Q5QsDyZpCAGzFlH5hxIrff4IaC1nEWTJ3s7xgaVY5/bQGeyzWZDbZvUjthB9+pSKP
KrhC9IK31FOQeE4tGv2Bb0TXOwF0lkLgAOIua+rF7nKsu7/+6qqo+Nz2snmKtmcCAwEAAaNC
MEAwHQYDVR0OBBYEFJ3AZ6YMItkm9UWrpmVSESfYRaxjMA8GA1UdEwEB/wQFMAMBAf8wDgYD
VR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBDAUAA4ICAQCzV00QYk465KzquByvMiPIs0laUZx2
KI15qldGF9X1Uva3ROgIRL8YhNILgM3FEv0AVQVhh0HctSSePMTYyPtwni94loMgNt58D2kT
iKV1NpgIpsbfrM7jWNa3Pt668+s0QNiigfV4Py/VpfzZotReBA4Xrf5B8OWycvpEgjNC6C1Y
91aMYj+6QrCcDFx+LmUmXFNPALJ4fqENmS2NuB2OosSw/WDQMKSOyARiqcTtNd56l+0OOF6S
L5Nwpamcb6d9Ex1+xghIsV5n61EIJenmJWtSKZGc0jlzCFfemQa0W50QBuHCAKi4HEoCChTQ
wUHK+4w1IX2COPKpVJEZNZOUbWo6xbLQu4mGk+ibyQ86p3q4ofB4Rvr8Ny/lioTz3/4E2aFo
oC8k4gmVBtWVyuEklut89pMFu+1z6S3RdTnX5yTb2E5fQ4+e0BQ5v1VwSJlXMbSc7kqYA5Yw
H2AG7hsj/oFgIxpHYoWlzBk0gG+zrBrjn/B7SK3VAdlntqlyk+otZrWyuOQ9PLLvTIzq6we/
qzWaVYa8GKa1qF60g2xraUDTn9zxw2lrueFtCfTxqlB2Cnp9ehehVZZCmTEJ3WARjQUwfuaO
RtGdFNrHF+QFlozEJLUbzxQHskD4o55BhrwE0GuWyCqANP2/7waj3VjFhT0+j/6eKeC2uAlo
GRwYQw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIB/jCCAYWgAwIBAgIIdJclisc/elQwCgYIKoZIzj0EAwMwRTELMAkGA1UEBhMCVVMxFDAS
BgNVBAoMC0FmZmlybVRydXN0MSAwHgYDVQQDDBdBZmZpcm1UcnVzdCBQcmVtaXVtIEVDQzAe
Fw0xMDAxMjkxNDIwMjRaFw00MDEyMzExNDIwMjRaMEUxCzAJBgNVBAYTAlVTMRQwEgYDVQQK
DAtBZmZpcm1UcnVzdDEgMB4GA1UEAwwXQWZmaXJtVHJ1c3QgUHJlbWl1bSBFQ0MwdjAQBgcq
hkjOPQIBBgUrgQQAIgNiAAQNMF4bFZ0D0KF5Nbc6PJJ6yhUczWLznCZcBz3lVPqj1swS6vQU
X+iOGasvLkjmrBhDeKzQN8O9ss0s5kfiGuZjuD0uL3jET9v0D6RoTFVya5UdThhClXjMNzyR
4ptlKymjQjBAMB0GA1UdDgQWBBSaryl6wBE1NSZRMADDav5A1a7WPDAPBgNVHRMBAf8EBTAD
AQH/MA4GA1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAwNnADBkAjAXCfOHiFBar8jAQr9HX/Vs
aobgxCd05DhT1wV/GzTjxi+zygk8N53X57hG8f2h4nECMEJZh0PUUd+60wkyWs6Iflc9nF9C
a/UHLbXwgpP5WW+uZPpY5Yse42O+tYHNbwKMeQ==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDuzCCAqOgAwIBAgIDBETAMA0GCSqGSIb3DQEBBQUAMH4xCzAJBgNVBAYTAlBMMSIwIAYD
VQQKExlVbml6ZXRvIFRlY2hub2xvZ2llcyBTLkEuMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkxIjAgBgNVBAMTGUNlcnR1bSBUcnVzdGVkIE5ldHdvcmsgQ0Ew
HhcNMDgxMDIyMTIwNzM3WhcNMjkxMjMxMTIwNzM3WjB+MQswCQYDVQQGEwJQTDEiMCAGA1UE
ChMZVW5pemV0byBUZWNobm9sb2dpZXMgUy5BLjEnMCUGA1UECxMeQ2VydHVtIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MSIwIAYDVQQDExlDZXJ0dW0gVHJ1c3RlZCBOZXR3b3JrIENBMIIB
IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4/t9o3K6wvDJFIf1awFO4W5AB7ptJ11/
91sts1rHUV+rpDKmYYe2bg+G0jACl/jXaVehGDldamR5xgFZrDwxSjh80gTSSyjoIF87B6LM
TXPb865Px1bVWqeWifrzq2jUI4ZZJ88JJ7ysbnKDHDBy3+Ci6dLhdHUZvSqeexVUBBvXQzmt
VSjF4hq79MDkrjhJM8x2hZ85RdKknvISjFH4fOQtf/WsX+sWn7Et0brMkUJ3TCXJkDhv2/DM
+44el1k+1WBO5gUo7Ul5E0u6SNsv+XLTOcr+H9g0cvW0QM8xAcPs3hEtF10fuFDRXhmnad4H
MyjKUJX5p1TLVIZQRan5SQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQI
ds3LB/8k9sXN7buQvOKEN0Z19zAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEB
AKaorSLOAT2mo/9i0Eidi15ysHhE49wcrwn9I0j6vSrEuVUEtRCjjSfeC4Jj0O7eDDd5QVsi
srCaQVymcODU0HfLI9MA4GxWL+FpDQ3Zqr8hgVDZBqWo/5U30Kr+4rP1mS1FhIrlQgnXdAIv
94nYmem8J9RHjboNRhx3zxSkHLmkMcScKHQDNP8zGSal6Q10tz6XxnboJ5ajZt3hrvJBW8qY
VoNzcOSGGtIxQbovvi0TWnZvTuhOgQ4/WwMioBK+ZlgRSssDxLQqKi2WF+A5VLxI03YnnZot
BqbJ7DnSq9ufmgsnAjUpsUCV5/nonFWIGUbWtzT1fs45mtk48VH3Tyw=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDezCCAmOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQGEwJUVzESMBAGA1UE
CgwJVEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFUV0NBIFJvb3QgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwODI4MDcyNDMzWhcNMzAxMjMxMTU1OTU5WjBf
MQswCQYDVQQGEwJUVzESMBAGA1UECgwJVEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSow
KAYDVQQDDCFUV0NBIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCwfnK4pAOU5qfeCTiRShFAh6d8WWQUe7UREN3+v9XAu1bi
hSX0NXIP+FPQQeFEAcK0HMMxQhZHhTMidrIKbw/lJVBPhYa+v5guEGcevhEFhgWQxFnQfHgQ
sIBct+HHK3XLfJ+utdGdIzdjp9xCoi2SBBtQwXu4PhvJVgSLL1KbralW6cH/ralYhzC2gfeX
RfwZVzsrb+RH9JlF/h3x+JejiB03HFyP4HYlmlD4oFT/RJB2I9IyxsOrBr/8+7/zrX2SYgJb
KdM1o5OaQ2RgXbL6Mv87BK9NQGr5x+PvI/1ry+UPizgN7gr8/g+YnzAx3WxSZfmLgb4i4RxY
A7qRG4kHAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud
DgQWBBRqOFsmjd6LWvJPelSDGRjjCDWmujANBgkqhkiG9w0BAQUFAAOCAQEAPNV3PdrfibqH
DAhUaiBQkr6wQT25JmSDCi/oQMCXKCeCMErJk/9q56YAf4lCmtYR5VPOL8zy2gXE/uJQxDqG
fczafhAJO5I1KlOy/usrBdlsXebQ79NqZp4VKIV66IIArB6nCWlWQtNoURi+VJq/REG6Sb4g
umlc7rh3zc5sH62Dlhh9DrUUOYTxKOkto557HnpyWoOzeW/vtPzQCqVYT0bf+215WfKEIlKu
D8z7fDvnaspHYcN6+NOSBB+4IIThNlQWx0DeO4pz3N/GCUzf7Nr/1FNCocnyYh0igzyXxfkZ
YiesZSLX0zzG5Y6yU8xJzrww/nsOM5D77dIUkR8Hrw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDdzCCAl+gAwIBAgIBADANBgkqhkiG9w0BAQsFADBdMQswCQYDVQQGEwJKUDElMCMGA1UE
ChMcU0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEnMCUGA1UECxMeU2VjdXJpdHkgQ29t
bXVuaWNhdGlvbiBSb290Q0EyMB4XDTA5MDUyOTA1MDAzOVoXDTI5MDUyOTA1MDAzOVowXTEL
MAkGA1UEBhMCSlAxJTAjBgNVBAoTHFNFQ09NIFRydXN0IFN5c3RlbXMgQ08uLExURC4xJzAl
BgNVBAsTHlNlY3VyaXR5IENvbW11bmljYXRpb24gUm9vdENBMjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANAVOVKxUrO6xVmCxF1SrjpDZYBLx/KWvNs2l9amZIyoXvDjChz3
35c9S672XewhtUGrzbl+dp+++T42NKA7wfYxEUV0kz1XgMX5iZnK5atq1LXaQZAQwdbWQonC
v/Q4EpVMVAX3NuRFg3sUZdbcDE3R3n4MqzvEFb46VqZab3ZpUql6ucjrappdUtAtCms1FgkQ
hNBqyjoGADdH5H5XTz+L62e4iKrFvlNVspHEfbmwhRkGeC7bYRr6hfVKkaHnFtWOojnflLhw
Hyg/i/xAXmODPIMqGplrz95Zajv8bxbXH/1KEOtOghY6rCcMU/Gt1SSwawNQwS08Ft1ENCca
dfsCAwEAAaNCMEAwHQYDVR0OBBYEFAqFqXdlBZh8QIH4D5csOPEK7DzPMA4GA1UdDwEB/wQE
AwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBMOqNErLlFsceTfsgL
CkLfZOoc7llsCLqJX2rKSpWeeo8HxdpFcoJxDjrSzG+ntKEju/Ykn8sX/oymzsLS28yN/HH8
AynBbF0zX2S2ZTuJbxh2ePXcokgfGT+Ok+vx+hfuzU7jBBJV1uXk3fs+BXziHV7Gp7yXT2g6
9ekuCkO2r1dcYmh8t/2jioSgrGK+KwmHNPBqAbubKVY8/gA3zyNs8U6qtnRGEmyR7jTV7JqR
50S+kDFy1UkC9gLl9B/rfNmWVan/7Ir5mUf/NVoCqgTLiluHcSmRvaS0eg29mvVXIwAHIRc/
SjnRBUkLp7Y3gaVdjKozXoEofKd9J+sAro03
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFVjCCBD6gAwIBAgIQ7is969Qh3hSoYqwE893EATANBgkqhkiG9w0BAQUFADCB8zELMAkG
A1UEBhMCRVMxOzA5BgNVBAoTMkFnZW5jaWEgQ2F0YWxhbmEgZGUgQ2VydGlmaWNhY2lvIChO
SUYgUS0wODAxMTc2LUkpMSgwJgYDVQQLEx9TZXJ2ZWlzIFB1YmxpY3MgZGUgQ2VydGlmaWNh
Y2lvMTUwMwYDVQQLEyxWZWdldSBodHRwczovL3d3dy5jYXRjZXJ0Lm5ldC92ZXJhcnJlbCAo
YykwMzE1MDMGA1UECxMsSmVyYXJxdWlhIEVudGl0YXRzIGRlIENlcnRpZmljYWNpbyBDYXRh
bGFuZXMxDzANBgNVBAMTBkVDLUFDQzAeFw0wMzAxMDcyMzAwMDBaFw0zMTAxMDcyMjU5NTla
MIHzMQswCQYDVQQGEwJFUzE7MDkGA1UEChMyQWdlbmNpYSBDYXRhbGFuYSBkZSBDZXJ0aWZp
Y2FjaW8gKE5JRiBRLTA4MDExNzYtSSkxKDAmBgNVBAsTH1NlcnZlaXMgUHVibGljcyBkZSBD
ZXJ0aWZpY2FjaW8xNTAzBgNVBAsTLFZlZ2V1IGh0dHBzOi8vd3d3LmNhdGNlcnQubmV0L3Zl
cmFycmVsIChjKTAzMTUwMwYDVQQLEyxKZXJhcnF1aWEgRW50aXRhdHMgZGUgQ2VydGlmaWNh
Y2lvIENhdGFsYW5lczEPMA0GA1UEAxMGRUMtQUNDMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEAsyLHT+KXQpWIR4NA9h0X84NzJB5R85iKw5K4/0CQBXCHYMkAqbWUZRkiFRfC
Q2xmRJoNBD45b6VLeqpjt4pEndljkYRm4CgPukLjbo73FCeTae6RDqNfDrHrZqJyTxIThmV6
PttPB/SnCWDaOkKZx7J/sxaVHMf5NLWUhdWZXqBIoH7nF2W4onW4HvPlQn2v7fOKSGRdghST
2MDk/7NQcvJ29rNdQlB50JQ+awwAvthrDk4q7D7SzIKiGGUzE3eeml0aE9jD2z3Il3rucO2n
5nzbcc8tlGLfbdb1OL4/pYUKGbio2Al1QnDE6u/LDsg0qBIimAy4E5S2S+zw0JDnJwIDAQAB
o4HjMIHgMB0GA1UdEQQWMBSBEmVjX2FjY0BjYXRjZXJ0Lm5ldDAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUoMOLRKo3pUW/l4Ba0fF4opvpXY0wfwYDVR0g
BHgwdjB0BgsrBgEEAfV4AQMBCjBlMCwGCCsGAQUFBwIBFiBodHRwczovL3d3dy5jYXRjZXJ0
Lm5ldC92ZXJhcnJlbDA1BggrBgEFBQcCAjApGidWZWdldSBodHRwczovL3d3dy5jYXRjZXJ0
Lm5ldC92ZXJhcnJlbCAwDQYJKoZIhvcNAQEFBQADggEBAKBIW4IB9k1IuDlVNZyAelOZ1Vr/
sXE7zDkJlF7W2u++AVtd0x7Y/X1PzaBB4DSTv8vihpw3kpBWHNzrKQXlxJ7HNd+KDM3FIUPp
qojlNcAZQmNaAl6kSBg6hW/cnbw/nZzBh7h6YQjpdwt/cKt63dmXLGQehb+8dJahw3oS7Awa
boMMPOhyRp/7SNVel+axofjk70YllJyJ22k4vuxcDlbHZVHlUIiIv0LVKz3l+bqeLrPK9HOS
Agu+TGbrIP65y7WZf+a2E/rKS03Z7lNGBjvGTq2TWoF+bCpLagVFjPIhpDGQh2xlnJ2lYJU6
Un/10asIbvPuW/mIPX64b24D5EI=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEMTCCAxmgAwIBAgIBADANBgkqhkiG9w0BAQUFADCBlTELMAkGA1UEBhMCR1IxRDBCBgNV
BAoTO0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2VydC4g
QXV0aG9yaXR5MUAwPgYDVQQDEzdIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5z
dGl0dXRpb25zIFJvb3RDQSAyMDExMB4XDTExMTIwNjEzNDk1MloXDTMxMTIwMTEzNDk1Mlow
gZUxCzAJBgNVBAYTAkdSMUQwQgYDVQQKEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFy
Y2ggSW5zdGl0dXRpb25zIENlcnQuIEF1dGhvcml0eTFAMD4GA1UEAxM3SGVsbGVuaWMgQWNh
ZGVtaWMgYW5kIFJlc2VhcmNoIEluc3RpdHV0aW9ucyBSb290Q0EgMjAxMTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAKlTAOMupvaO+mDYLZU++CwqVE7NuYRhlFhPjz2L5EPz
dYmNUeTDN9KKiE15HrcS3UN4SoqS5tdI1Q+kOilENbgH9mgdVc04UfCMJDGFr4PJfel3r+0a
e50X+bOdOFAPplp5kYCvN66m0zH7tSYJnTxa71HFK9+WXesyHgLacEnsbgzImjeN9/E2YEsm
LIKe0HjzDQ9jpFEw4fkrJxIH2Oq9GGKYsFk3fb7u8yBRQlqD75O6aRXxYp2fmTmCobd0LovU
xQt7L/DICto9eQqakxylKHJzkUOap9FNhYS5qXSPFEDH3N6sQWRstBmbAmNtJGSPRLIl6s5d
dAxjMlyNh+UCAwEAAaOBiTCBhjAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIBBjAdBgNV
HQ4EFgQUppFC/RNhSiOeCKQp5dgTBCPuQSUwRwYDVR0eBEAwPqA8MAWCAy5ncjAFggMuZXUw
BoIELmVkdTAGggQub3JnMAWBAy5ncjAFgQMuZXUwBoEELmVkdTAGgQQub3JnMA0GCSqGSIb3
DQEBBQUAA4IBAQAf73lB4XtuP7KMhjdCSk4cNx6NZrokgclPEg8hwAOXhiVtXdMiKahsog2p
6z0GW5k6x8zDmjR/qw7IThzh+uTczQ2+vyT+bOdrwg3IBp5OjWEopmr95fZi6hg8TqBTnbI6
nOulnJEWtk2C4AwFSKls9cz4y51JtPACpf1wA+2KIaWuE4ZJwzNzvoc7dIsXRSZMFpGD/md9
zU1jZ/rzAxKWeAaNsWftjj++n08C9bMJL/NMh98qy5V8AcysNnq/onN694/BtZqhFLKPM58N
7yLcZnuEvUUXBj08yrl3NI/K6s8/MT7jiOOASSXIl7WdmplNsDz4SgCbZN2fOUvRJ9e4
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFuzCCA6OgAwIBAgIIVwoRl0LE48wwDQYJKoZIhvcNAQELBQAwazELMAkGA1UEBhMCSVQx
DjAMBgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlzIFMucC5BLi8wMzM1ODUyMDk2NzEn
MCUGA1UEAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290IENBMB4XDTExMDkyMjExMjIw
MloXDTMwMDkyMjExMjIwMlowazELMAkGA1UEBhMCSVQxDjAMBgNVBAcMBU1pbGFuMSMwIQYD
VQQKDBpBY3RhbGlzIFMucC5BLi8wMzM1ODUyMDk2NzEnMCUGA1UEAwweQWN0YWxpcyBBdXRo
ZW50aWNhdGlvbiBSb290IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAp8bE
pSmkLO/lGMWwUKNvUTufClrJwkg4CsIcoBh/kbWHuUA/3R1oHwiD1S0eiKD4j1aPbZkCkpAW
1V8IbInX4ay8IMKx4INRimlNAJZaby/ARH6jDuSRzVju3PvHHkVH3Se5CAGfpiEd9UEtL0z9
KK3giq0itFZljoZUj5NDKd45RnijMCO6zfB9E1fAXdKDa0hMxKufgFpbOr3JpyI/gCczWw63
igxdBzcIy2zSekciRDXFzMwujt0q7bd9Zg1fYVEiVRvjRuPjPdA1YprbrxTIW6HMiRvhMCb8
oJsfgadHHwTrozmSBp+Z07/T6k9QnBn+locePGX2oxgkg4YQ51Q+qDp2JE+BIcXjDwL4k5RH
ILv+1A7TaLndxHqEguNTVHnd25zS8gebLra8Pu2Fbe8lEfKXGkJh90qX6IuxEAf6ZYGyojnP
9zz/GPvG8VqLWeICrHuS0E4UT1lF9gxeKF+w6D9Fz8+vm2/7hNN3WpVvrJSEnu68wEqPSpP4
RCHiMUVhUE4Q2OM1fEwZtN4Fv6MGn8i1zeQf1xcGDXqVdFUNaBr8EBtiZJ1t4JWgw5QHVw0U
5r0F+7if5t+L4sbnfpb2U8WANFAoWPASUHEXMLrmeGO89LKtmyuy/uE5jF66CyCU3nuDuP/j
Vo23Eek7jPKxwV2dpAtMK9myGPW1n0sCAwEAAaNjMGEwHQYDVR0OBBYEFFLYiDrIn3hm7Ynz
ezhwlMkCAjbQMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUUtiIOsifeGbtifN7OHCU
yQICNtAwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQALe3KHwGCmSUyIWOYd
iPcUZEim2FgKDk8TNd81HdTtBjHIgT5q1d07GjLukD0R0i70jsNjLiNmsGe+b7bAEzlgqqI0
JZN1Ut6nna0Oh4lScWoWPBkdg/iaKWW+9D+a2fDzWochcYBNy+A4mz+7+uAwTc+G02UQGRjR
lwKxK3JCaKygvU5a2hi/a5iB0P2avl4VSM0RFbnAKVy06Ij3Pjaut2L9HmLecHgQHEhb2ryk
OLpn7VU+Xlff1ANATIGk0k9jpwlCCRT8AKnCgHNPLsBA2RF7SOp6AsDT6ygBJlh0wcBzIm2T
lf05fbsq4/aC4yyXX04fkZT6/iyj2HYauE2yOE+b+h1IYHkm4vP9qdCa6HCPSXrW5b0KDtst
842/6+OkfcvHlXHo2qN8xcL4dJIEG4aspCJTQLas/kx2z/uUMsA1n3Y/buWQbqCmJqK4LL7R
K4X9p2jIugErsWx0Hbhzlefut8cl8ABMALJ+tguLHPPAUJ4lueAI3jZm/zel0btUZCzJJ7VL
kn5l/9Mt4blOvH+kQSGQQXemOR/qnuOf0GZvBeyqdn6/axag67XH/JJULysRJyU3eExRarDz
zFhdFPFqSBX/wge2sY0PjlxQRrM9vwGYT7JZVEc+NHt4bVaTLnPqZih4zR0Uv6CPLy64Lo7y
FIrM6bV8+2ydDKXhlg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDZzCCAk+gAwIBAgIQGx+ttiD5JNM2a/fH8YygWTANBgkqhkiG9w0BAQUFADBFMQswCQYD
VQQGEwJHQjEYMBYGA1UEChMPVHJ1c3RpcyBMaW1pdGVkMRwwGgYDVQQLExNUcnVzdGlzIEZQ
UyBSb290IENBMB4XDTAzMTIyMzEyMTQwNloXDTI0MDEyMTExMzY1NFowRTELMAkGA1UEBhMC
R0IxGDAWBgNVBAoTD1RydXN0aXMgTGltaXRlZDEcMBoGA1UECxMTVHJ1c3RpcyBGUFMgUm9v
dCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMVQe547NdDfxIzNjpvto8A2
mfRC6qc+gIMPpqdZh8mQRUN+AOqGeSoDvT03mYlmt+WKVoaTnGhLaASMk5MCPjDSNzoiYYkc
hU59j9WvezX2fihHiTHcDnlkH5nSW7r+f2C/revnPDgpai/lkQtV/+xvWNUtyd5MZnGPDNcE
2gfmHhjjvSkCqPoc4Vu5g6hBSLwacY3nYuUtsuvffM/bq1rKMfFMIvMFE/eC+XN5DL7XSxzA
0RU8k0Fk0ea+IxciAIleH2ulrG6nS4zto3Lmr2NNL4XSFDWaLk6M6jKYKIahkQlBOrTh4/L6
8MkKokHdqeMDx4gVOxzUGpTXn2RZEm0CAwEAAaNTMFEwDwYDVR0TAQH/BAUwAwEB/zAfBgNV
HSMEGDAWgBS6+nEleYtXQSUhhgtx67JkDoshZzAdBgNVHQ4EFgQUuvpxJXmLV0ElIYYLceuy
ZA6LIWcwDQYJKoZIhvcNAQEFBQADggEBAH5Y//01GX2cGE+esCu8jowU/yyg2kdbw++BLa8F
6nRIW/M+TgfHbcWzk88iNVy2P3UnXwmWzaD+vkAMXBJV+JOCyinpXj9WV4s4NvdFGkwozZ5B
uO1WTISkQMi4sKUraXAEasP41BIy+Q7DsdwyhEQsb8tGD+pmQQ9P8Vilpg0ND2HepZ5dfWWh
PBfnqFVO76DH7cZEf1T1o+CP8HxVIo8ptoGj4W1OLBuAZ+ytIJ8MYmHVl/9D7S3B2l0pKoU/
rGXuhg8FjZBf3+6f9L/uHfuY5H+QK4R4EA5sSVPvFVtlRkpdr7r7OnIdzfYliB6XzCGcKQEN
ZetX2fNXlrtIzYE=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEdMBsGA1UE
CgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3MgQ2xhc3MgMiBSb290
IENBMB4XDTEwMTAyNjA4MzgwM1oXDTQwMTAyNjA4MzgwM1owTjELMAkGA1UEBhMCTk8xHTAb
BgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MSAwHgYDVQQDDBdCdXlwYXNzIENsYXNzIDIg
Um9vdCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANfHXvfBB9R3+0Mh9PT1
aeTuMgHbo4Yf5FkNuud1g1Lr6hxhFUi7HQfKjK6w3Jad6sNgkoaCKHOcVgb/S2TwDCo3SbXl
zwx87vFKu3MwZfPVL4O2fuPn9Z6rYPnT8Z2SdIrkHJasW4DptfQxh6NR/Md+oW+OU3fUl8FV
M5I+GC911K2GScuVr1QGbNgGE41b/+EmGVnAJLqBcXmQRFBoJJRfuLMR8SlBYaNByyM21cHx
MlAQTn/0hpPshNOOvEu/XAFOBz3cFIqUCqTqc/sLUegTBxj6DvEr0VQVfTzh97QZQmdiXnfg
olXsttlpF9U6r0TtSsWe5HonfOV116rLJeffawrbD02TTqigzXsu8lkBarcNuAeBfos4Gzjm
CleZPe4h6KP1DBbdi+w0jpwqHAAVF41og9JwnxgIzRFo1clrUs3ERo/ctfPYV3Me6ZQ5BL/T
3jjetFPsaRyifsSP5BtwrfKi+fv3FmRmaZ9JUaLiFRhnBkp/1Wy1TbMz4GHrXb7pmA8y1x1L
PC5aAVKRCfLf6o3YBkBjqhHk/sM3nhRSP/TizPJhk9H9Z2vXUq6/aKtAQ6BXNVN48FP4YUIH
ZMbXb5tMOA1jrGKvNouicwoN9SG9dKpN6nIDSdvHXx1iY8f93ZHsM+71bbRuMGjeyNYmsHVe
e7QHIJihdjK4TWxPAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMmAd+Bi
koL1RpzzuvdMw964o605MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAU18h
9bqwOlI5LJKwbADJ784g7wbylp7ppHR/ehb8t/W2+xUbP6umwHJdELFx7rxP462sA20ucS6v
xOOto70MEae0/0qyexAQH6dXQbLArvQsWdZHEIjzIVEpMMpghq9Gqx3tOluwlN5E40EIosHs
Hdb9T7bWR9AUC8rmyrV7d35BH16Dx7aMOZawP5aBQW9gkOLo+fsicdl9sz1Gv7SEr5AcD48S
aq/v7h56rgJKihcrdv6sVIkkLE8/trKnToyokZf7KcZ7XC25y2a2t6hbElGFtQl+Ynhw/qlq
YLYdDnkM/crqJIByw5c/8nerQyIKx+u2DISCLIBrQYoIwOula9+ZEsuK1V6ADJHgJgg2SMX6
OBE1/yWDLfJ6v9r9jv6ly0UsH8SIU653DtmadsWOLB2jutXsMq7Aqqz30XpN69QH4kj3Io6w
pJ9qzo6ysmD0oyLQI+uUWnpp3Q+/QFesa1lQ2aOZ4W7+jQF5JyMV3pKdewlNWudLSDBaGOYK
beaP4NK75t98biGCwWg5TbSYWGZizEqQXsP6JwSxeRV0mcy+rSDeJmAc61ZRpqPq5KM/p/9h
3PFaTWwyI0PurKju7koSCTxdccK+efrCh2gdC/1cacwG0Jp9VJkqyTkaGa9LKkPzY11aWOIv
4x3kqdbQCtCev9eBCfHJxyYNrJgWVqA=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEdMBsGA1UE
CgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3MgQ2xhc3MgMyBSb290
IENBMB4XDTEwMTAyNjA4Mjg1OFoXDTQwMTAyNjA4Mjg1OFowTjELMAkGA1UEBhMCTk8xHTAb
BgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MSAwHgYDVQQDDBdCdXlwYXNzIENsYXNzIDMg
Um9vdCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKXaCpUWUOOV8l6ddjEG
Mnqb8RB2uACatVI2zSRHsJ8YZLya9vrVediQYkwiL944PdbgqOkcLNt4EemOaFEVcsfzM4fk
oF0LXOBXByow9c3EN3coTRiR5r/VUv1xLXA+58bEiuPwKAv0dpihi4dVsjoT/Lc+JzeOIuOo
TyrvYLs9tznDDgFHmV0ST9tD+leh7fmdvhFHJlsTmKtdFoqwNxxXnUX/iJY2v7vKB3tvh2PX
0DJq1l1sDPGzbjniazEuOQAnFN44wOwZZoYS6J1yFhNkUsepNxz9gjDthBgd9K5c/3ATAOux
9TN6S9ZV+AWNS2mw9bMoNlwUxFFzTWsL8TQH2xc519woe2v1n/MuwU8XKhDzzMro6/1rqy6a
ny2CbgTUUgGTLT2G/H783+9CHaZr77kgxve9oKeV/afmiSTYzIw0bOIjL9kSGiG5VZFvC5F5
GQytQIgLcOJ60g7YaEi7ghM5EFjp2CoHxhLbWNvSO1UQRwUVZ2J+GGOmRj8JDlQyXr8NYnon
74Do29lLBlo3WiXQCBJ31G8JUJc9yB3D34xFMFbG02SrZvPAXpacw8Tvw3xrizp5f7NJzz3i
iZ+gMEuFuZyUJHmPfWupRWgPK9Dx2hzLabjKSWJtyNBjYt1gD1iqj6G8BaVmos8bdrKEZLFM
OVLAMLrwjEsCsLa3AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFEe4zf/l
b+74suwvTg75JbCOPGvDMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAACAj
QTUEkMJAYmDv4jVM1z+s4jSQuKFvdvoWFqRINyzpkMLyPPgKn9iB5btb2iUspKdVcSQy9sgL
8rxq+JOssgfCX5/bzMiKqr5qb+FJEMwx14C7u8jYog5kV+qi9cKpMRXSIGrs/CIBKM+GuIAe
qcwRpTzyFrNHnfzSgCHEy9BHcEGhyoMZCCxt8l13nIoUE9Q2HJLw5QY33KbmkJs4j1xrG0aG
Q0JfPgEHU1RdZX33inOhmlRaHylDFCfChQ+1iHsaO5S3HWCntZznKWlXWpuTekMwGwPXYshA
pqr8ZORK15FTAaggiG6cX0S5y2CBNOxv033aSF/rtJC8LakcC6wc1aJoIIAE1vyxjy+7SjEN
SoYc6+I2KSb12tjE8nVhz36udmNKekBlk4f4HoCMhuWG1o8O/FMsYOgWYRqiPkN7zTlgVGr1
8okmAWiDSKIz6MkEkbIRNBE+6tBDGR8Dk5AM/1E9V/RBbuHLoL7ryWPNbczk+DaqaJ3tvV2X
cEQNtg413OEMXbugUZTLfhbrES+jkkXITHHZvMmZUldGL1DPvTVp9D0VzgalLA8+9oG6lLvD
u79leNKGef9JOxqDDPDeeOzI8k1MGt6CKfjBWtrt7uYnXuhF0J0cUahoq0Tj0Itq4/g7u9xN
12TyUb7mqqta6THuBrxzvxNiCp/HuZc=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUxKzApBgNV
BAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lz
dGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNz
IDMwHhcNMDgxMDAxMTAyOTU2WhcNMzMxMDAxMjM1OTU5WjCBgjELMAkGA1UEBhMCREUxKzAp
BgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQt
U3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENs
YXNzIDMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9dZPwYiJvJK7genasfb3Z
JNW4t/zN8ELg63iIVl6bmlQdTQyK9tPPcPRStdiTBONGhnFBSivwKixVA9ZIw+A5OO3yXDw/
RLyTPWGrTs0NvvAgJ1gORH8EGoel15YUNpDQSXuhdfsaa3Ox+M6pCSzyU9XDFES4hqX2iys5
2qMzVNn6chr3IhUciJFrf2blw2qAsCTz34ZFiP0Zf3WHHx+xGwpzJFu5ZeAsVMhg02YXP+HM
VDNzkQI6pn97djmiH5a2OK61yJN0HZ65tOVgnS9W0eDrXltMEnAMbEQgqxHY9Bn20pxSN+f6
tsIxO0rUFJmtxxr1XV/6B7h8DR/Wgx6zAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYD
VR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS1A/d2O2GCahKqGFPrAyGUv/7OyjANBgkqhkiG9w0B
AQsFAAOCAQEAVj3vlNW92nOyWL6ukK2YJ5f+AbGwUgC4TeQbIXQbfsDuXmkqJa9c1h3a0nnJ
85cp4IaH3gRZD/FZ1GSFS5mvJQQeyUapl96Cshtwn5z2r3Ex3XsFpSzTucpH9sry9uetuUg/
vBa3wW306gmv7PO15wWeph6KU1HWk4HMdJP2udqmJQV0eVp+QD6CSyYRMG7hP0HHRwA11fXT
91Q+gT3aSWqas+8QPebrb9HIIkfLzM8BMZLZGOMivgkeGj5asuRrDFR6fUNOuImle9eiPZaG
zPImNC1qkp2aGtAw4l1OBLBfiyB+d8E9lYLRRpo7PHi4b6HQDWSieB4pTpPDpFQUWw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEAzCCAuugAwIBAgIQVID5oHPtPwBMyonY43HmSjANBgkqhkiG9w0BAQUFADB1MQswCQYD
VQQGEwJFRTEiMCAGA1UECgwZQVMgU2VydGlmaXRzZWVyaW1pc2tlc2t1czEoMCYGA1UEAwwf
RUUgQ2VydGlmaWNhdGlvbiBDZW50cmUgUm9vdCBDQTEYMBYGCSqGSIb3DQEJARYJcGtpQHNr
LmVlMCIYDzIwMTAxMDMwMTAxMDMwWhgPMjAzMDEyMTcyMzU5NTlaMHUxCzAJBgNVBAYTAkVF
MSIwIAYDVQQKDBlBUyBTZXJ0aWZpdHNlZXJpbWlza2Vza3VzMSgwJgYDVQQDDB9FRSBDZXJ0
aWZpY2F0aW9uIENlbnRyZSBSb290IENBMRgwFgYJKoZIhvcNAQkBFglwa2lAc2suZWUwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDIIMDs4MVLqwd4lfNE7vsLDP90jmG7sWLq
I9iroWUyeuuOF0+W2Ap7kaJjbMeMTC55v6kF/GlclY1i+blw7cNRfdCT5mzrMEvhvH2/UpvO
bntl8jixwKIy72KyaOBhU8E2lf/slLo2rpwcpzIP5Xy0xm90/XsY6KxX7QYgSzIwWFv9zajm
ofxwvI6Sc9uXp3whrj3B9UiHbCe9nyV0gVWw93X2PaRka9ZP585ArQ/dMtO8ihJTmMmJ+xAd
TX7Nfh9WDSFwhfYggx/2uh8Ej+p3iDXE/+pOoYtNP2MbRMNE1CV2yreN1x5KZmTNXMWcg+HC
CIia7E6j8T4cLNlsHaFLAgMBAAGjgYowgYcwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E
BAMCAQYwHQYDVR0OBBYEFBLyWj7qVhy/zQas8fElyalL1BSZMEUGA1UdJQQ+MDwGCCsGAQUF
BwMCBggrBgEFBQcDAQYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYIKwYBBQUHAwkw
DQYJKoZIhvcNAQEFBQADggEBAHv25MANqhlHt01Xo/6tu7Fq1Q+e2+RjxY6hUFaTlrg4wCQi
ZrxTFGGVv9DHKpY5P30osxBAIWrEr7BSdxjhlthWXePdNl4dp1BUoMUq5KqMlIpPnTX/dqQG
E5Gion0ARD9V04I8GtVbvFZMIi5GQ4okQC3zErg7cBqklrkar4dBGmoYDQZPxz5uuSlNDUmJ
EYcyW+ZLBMjkXOZ0c5RdFpgTlf7727FE5TpwrDdr5rMzcijJs1eg9gIWiAYLtqZLICjU3j2L
rTcFU3T+bsy8QxdxXvnFzBqpYe73dgzzcvRyrc9yAjYHR8/vGVCJYMzpJJUPwssd8m92kMfM
dcGWxZ0=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEMzCCAxugAwIBAgIDCYPzMA0GCSqGSIb3DQEBCwUAME0xCzAJBgNVBAYTAkRFMRUwEwYD
VQQKDAxELVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIg
MjAwOTAeFw0wOTExMDUwODM1NThaFw0yOTExMDUwODM1NThaME0xCzAJBgNVBAYTAkRFMRUw
EwYDVQQKDAxELVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBDbGFzcyAzIENB
IDIgMjAwOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANOySs96R+91myP6Oi/W
UEWJNTrGa9v+2wBoqOADER03UAifTUpolDWzU9GUY6cgVq/eUXjsKj3zSEhQPgrfRlWLJ23D
EE0NkVJD2IfgXU42tSHKXzlABF9bfsyjxiupQB7ZNoTWSPOSHjRGICTBpFGOShrvUD9pXRl/
RcPHAY9RySPocq60vFYJfxLLHLGvKZAKyVXMD9O0Gu1HNVpK7ZxzBCHQqr0ME7UAyiZsxGsM
lFqVlNpQmvH/pStmMaTJOKDfHR+4CS7zp+hnUquVH+BGPtikw8paxTGA6Eian5Rp/hnd2HN8
gcqW3o7tszIFZYQ05ub9VxC1X3a/L7AQDcUCAwEAAaOCARowggEWMA8GA1UdEwEB/wQFMAMB
Af8wHQYDVR0OBBYEFP3aFMSfMN4hvR5COfyrYyNJ4PGEMA4GA1UdDwEB/wQEAwIBBjCB0wYD
VR0fBIHLMIHIMIGAoH6gfIZ6bGRhcDovL2RpcmVjdG9yeS5kLXRydXN0Lm5ldC9DTj1ELVRS
VVNUJTIwUm9vdCUyMENsYXNzJTIwMyUyMENBJTIwMiUyMDIwMDksTz1ELVRydXN0JTIwR21i
SCxDPURFP2NlcnRpZmljYXRlcmV2b2NhdGlvbmxpc3QwQ6BBoD+GPWh0dHA6Ly93d3cuZC10
cnVzdC5uZXQvY3JsL2QtdHJ1c3Rfcm9vdF9jbGFzc18zX2NhXzJfMjAwOS5jcmwwDQYJKoZI
hvcNAQELBQADggEBAH+X2zDI36ScfSF6gHDOFBJpiBSVYEQBrLLpME+bUMJm2H6NMLVwMeni
acfzcNsgFYbQDfC+rAF1hM5+n02/t2A7nPPKHeJeaNijnZflQGDSNiH+0LS4F9p0o3/U37CY
Aqxva2ssJSRyoWXuJVrl5jLn8t+rSfrzkGkj2wTZ51xY/GXUl77M/C4KzCUqNQT4YJEVdT1B
/yMfGchs64JTBKbkTCJNjYy6zltz7GRUUG3RnFX7acM2w4y8PIWmawomDeCTmGCufsYkl4ph
X5GOZpIJhzbNi5stPvZR1FDUWSi9g/LMKHtThm3YJohw1+qRzT65ysCQblrGXnRl11z+o+I=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEQzCCAyugAwIBAgIDCYP0MA0GCSqGSIb3DQEBCwUAMFAxCzAJBgNVBAYTAkRFMRUwEwYD
VQQKDAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIg
RVYgMjAwOTAeFw0wOTExMDUwODUwNDZaFw0yOTExMDUwODUwNDZaMFAxCzAJBgNVBAYTAkRF
MRUwEwYDVQQKDAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAz
IENBIDIgRVYgMjAwOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJnxhDRwui+3
MKCOvXwEz75ivJn9gpfSegpnljgJ9hBOlSJzmY3aFS3nBfwZcyK3jpgAvDw9rKFs+9Z5JUut
8Mxk2og+KbgPCdM03TP1YtHhzRnp7hhPTFiu4h7WDFsVWtg6uMQYZB7jM7K1iXdODL/ZlGsT
l28So/6ZqQTMFexgaDbtCHu39b+T7WYxg4zGcTSHThfqr4uRjRxWQa4iN1438h3Z0S0NL2lR
p75mpoo6Kr3HGrHhFPC+Oh25z1uxav60sUYgovseO3Dvk5h9jHOW8sXvhXCtKSb8HgQ+HKDY
D8tSg2J87otTlZCpV6LqYQXY+U3EJ/pure3511H3a6UCAwEAAaOCASQwggEgMA8GA1UdEwEB
/wQFMAMBAf8wHQYDVR0OBBYEFNOUikxiEyoZLsyvcop9NteaHNxnMA4GA1UdDwEB/wQEAwIB
BjCB3QYDVR0fBIHVMIHSMIGHoIGEoIGBhn9sZGFwOi8vZGlyZWN0b3J5LmQtdHJ1c3QubmV0
L0NOPUQtVFJVU1QlMjBSb290JTIwQ2xhc3MlMjAzJTIwQ0ElMjAyJTIwRVYlMjAyMDA5LE89
RC1UcnVzdCUyMEdtYkgsQz1ERT9jZXJ0aWZpY2F0ZXJldm9jYXRpb25saXN0MEagRKBChkBo
dHRwOi8vd3d3LmQtdHJ1c3QubmV0L2NybC9kLXRydXN0X3Jvb3RfY2xhc3NfM19jYV8yX2V2
XzIwMDkuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQA07XtaPKSUiO8aEXUHL7P+PPoeUSbrh/Yp
3uDx1MYkCenBz1UbtDDZzhr+BlGmFaQt77JLvyAoJUnRpjZ3NOhk31KxEcdzes05nsKtjHEh
8lprr988TlWvsoRlFIm5d8sqMb7Po23Pb0iUMkZv53GMoKaEGTcH8gNFCSuGdXzfX2lXANtu
2KZyIktQ1HWYVt+3GP9DQ1CuekR78HlR10M9p9OB0/DJT7naxpeG0ILD5EJt/rDiZE4OJudA
NCa1CInXCGNjOCd1HjPqbqjdn5lPdE2BiYBL3ZqXKVwvvoFBuYz/6n1gBp7N1z3TLqMVvKjm
JuVvw9y4AyHqnxbxLFS1
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFaTCCA1GgAwIBAgIJAJK4iNuwisFjMA0GCSqGSIb3DQEBCwUAMFIxCzAJBgNVBAYTAlNL
MRMwEQYDVQQHEwpCcmF0aXNsYXZhMRMwEQYDVQQKEwpEaXNpZyBhLnMuMRkwFwYDVQQDExBD
QSBEaXNpZyBSb290IFIyMB4XDTEyMDcxOTA5MTUzMFoXDTQyMDcxOTA5MTUzMFowUjELMAkG
A1UEBhMCU0sxEzARBgNVBAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xGTAX
BgNVBAMTEENBIERpc2lnIFJvb3QgUjIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
AQCio8QACdaFXS1tFPbCw3OeNcJxVX6B+6tGUODBfEl45qt5WDza/3wcn9iXAng+a0EE6UG9
vgMsRfYvZNSrXaNHPWSb6WiaxswbP7q+sos0Ai6YVRn8jG+qX9pMzk0DIaPY0jSTVpbLTAwA
FjxfGs3Ix2ymrdMxp7zo5eFm1tL7A7RBZckQrg4FY8aAamkw/dLukO8NJ9+flXP04SXabBbe
QTg06ov80egEFGEtQX6sx3dOy1FU+16SGBsEWmjGycT6txOgmLcRK7fWV8x8nhfRyyX+hk4k
LlYMeE2eARKmK6cBZW58Yh2EhN/qwGu1pSqVg8NTEQxzHQuyRpDRQjrOQG6Vrf/GlK1ul4SO
fW+eioANSW1z4nuSHsPzwfPrLgVv2RvPN3YEyLRa5Beny912H9AZdugsBbPWnDTYltxhh5EF
5EQIM8HauQhl1K6yNg3ruji6DOWbnuuNZt2Zz9aJQfYEkoopKW1rOhzndX0CcQ7zwOe9yxnd
nWCywmZgtrEE7snmhrmaZkCo5xHtgUUDi/ZnWejBBhG93c+AAk9lQHhcR1DIm+YfgXvkRKhb
hZri3lrVx/k6RGZL5DJUfORsnLMOPReisjQS1n6yqEm70XooQL6iFh/f5DcfEXP7kAplQ6IN
fPgGAVUzfbANuPT1rqVCV3w2EYx7XsQDnYx5nQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUtZn4r7CU9eMg1gqtzk5WpC5uQu0wDQYJKoZI
hvcNAQELBQADggIBACYGXnDnZTPIgm7ZnBc6G3pmsgH2eDtpXi/q/075KMOYKmFMtCQSin1t
ERT3nLXK5ryeJ45MGcipvXrA1zYObYVybqjGom32+nNjf7xueQgcnYqfGopTpti72TVVsRHF
qQOzVju5hJMiXn7B9hJSi+osZ7z+Nkz1uM/Rs0mSO9MpDpkblvdhuDvEK7Z4bLQjb/D907Je
dR+Zlais9trhxTF7+9FGs9K8Z7RiVLoJ92Owk6Ka+elSLotgEqv89WBW7xBci8QaQtyDW2QO
y7W81k/BfDxujRNt+3vrMNDcTa/F1balTFtxyegxvug4BkihGuLq0t4SOVga/4AOgnXmt8kH
bA7v/zjxmHHEt38OFdAlab0inSvtBfZGR6ztwPDUO+Ls7pZbkBNOHlY667DvlruWIxG68kOG
dGSVyCh13x01utI3gzhTODY7z2zp+WsO0PsE6E9312UBeIYMej4hYvF/Y3EMyZ9E26gnonW+
boE+18DrG5gPcFw0sorMwIUY6256s/daoQe/qUKS82Ail+QUoQebTnbAjn39pCXHR+3/H3Os
zMOl6W8KjptlwlCFtaOgUxLMVYdh84GuEEZhvUQhuMI9dM9+JDX6HAcOmz0iyu8xL4ysEr3v
QCj8KWefshNPZiTEUxnpHikV7+ZtsH8tZ/3zbBt1RqPlShfppNcL
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJKoZIhvcNAQEFBQAwQjESMBAGA1UEAwwJQUND
VlJBSVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYDVQQKDARBQ0NWMQswCQYDVQQGEwJFUzAe
Fw0xMTA1MDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIxEjAQBgNVBAMMCUFDQ1ZSQUlaMTEQ
MA4GA1UECwwHUEtJQUNDVjENMAsGA1UECgwEQUNDVjELMAkGA1UEBhMCRVMwggIiMA0GCSqG
SIb3DQEBAQUAA4ICDwAwggIKAoICAQCbqau/YUqXry+XZpp0X9DZlv3P4uRm7x8fRzPCRKPf
mt4ftVTdFXxpNRFvu8gMjmoYHtiP2Ra8EEg2XPBjs5BaXCQ316PWywlxufEBcoSwfdtNgM38
02/J+Nq2DoLSRYWoG2ioPej0RGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyxCQ0jVn8ETdkX
hBilyNpAlHPrzg5XPAOBOp0KoVdDaaxXbXmQeOW1tDvYvEyNKKGno6e6Ak4l0Squ7a4DIrhr
IA8wKFSVf+DuzgpmndFALW4ir50awQUZ0m/A8p/4e7MCQvtQqR0tkw8jq8bBD5L/0KIV9VMJ
cRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDGWuzndN9wrqODJerWx5eHk6fGioozl2A3ED6X
Pm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs78yM2x/474KElB0iryYl0/wiPgL/AlmXz
7uxLaL2diMMxs0Dx6M/2OLuc5NF/1OVYm3z61PMOm3WR5LpSLhl+0fXNWhn8ugb2+1KoS5kE
3fj5tItQo05iifCHJPqDQsGH+tUtKSpacXpkatcnYGMN285J9Y0fkIkyF/hzQ7jSWpOGYdbh
dQrqeWZ2iE9x6wQl1gpaepPluUsXQA+xtrn13k/c4LOsOxFwYIRKQ26ZIMApcQrAZQIDAQAB
o4ICyzCCAscwfQYIKwYBBQUHAQEEcTBvMEwGCCsGAQUFBzAChkBodHRwOi8vd3d3LmFjY3Yu
ZXMvZmlsZWFkbWluL0FyY2hpdm9zL2NlcnRpZmljYWRvcy9yYWl6YWNjdjEuY3J0MB8GCCsG
AQUFBzABhhNodHRwOi8vb2NzcC5hY2N2LmVzMB0GA1UdDgQWBBTSh7Tj3zcnk1X2VuqB5TbM
jB4/vTAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNKHtOPfNyeTVfZW6oHlNsyMHj+9
MIIBcwYDVR0gBIIBajCCAWYwggFiBgRVHSAAMIIBWDCCASIGCCsGAQUFBwICMIIBFB6CARAA
QQB1AHQAbwByAGkAZABhAGQAIABkAGUAIABDAGUAcgB0AGkAZgBpAGMAYQBjAGkA8wBuACAA
UgBhAO0AegAgAGQAZQAgAGwAYQAgAEEAQwBDAFYAIAAoAEEAZwBlAG4AYwBpAGEAIABkAGUA
IABUAGUAYwBuAG8AbABvAGcA7QBhACAAeQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4A
IABFAGwAZQBjAHQAcgDzAG4AaQBjAGEALAAgAEMASQBGACAAUQA0ADYAMAAxADEANQA2AEUA
KQAuACAAQwBQAFMAIABlAG4AIABoAHQAdABwADoALwAvAHcAdwB3AC4AYQBjAGMAdgAuAGUA
czAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5hY2N2LmVzL2xlZ2lzbGFjaW9uX2MuaHRtMFUG
A1UdHwROMEwwSqBIoEaGRGh0dHA6Ly93d3cuYWNjdi5lcy9maWxlYWRtaW4vQXJjaGl2b3Mv
Y2VydGlmaWNhZG9zL3JhaXphY2N2MV9kZXIuY3JsMA4GA1UdDwEB/wQEAwIBBjAXBgNVHREE
EDAOgQxhY2N2QGFjY3YuZXMwDQYJKoZIhvcNAQEFBQADggIBAJcxAp/n/UNnSEQU5CmH7Uwo
ZtCPNdpNYbdKl02125DgBS4OxnnQ8pdpD70ER9m+27Up2pvZrqmZ1dM8MJP1jaGo/AaNRPTK
FpV8M9xii6g3+CfYCS0b78gUJyCpZET/LtZ1qmxNYEAZSUNUY9rizLpm5U9EelvZaoErQNV/
+QEnWCzI7UiRfD+mAM/EKXMRNt6GGT6d7hmKG9Ww7Y49nCrADdg9ZuM8Db3VlFzi4qc1GwQA
9j9ajepDvV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJTS+xJlsndQAJxGJ3KQhfnlms
tn6tn1QwIgPBHnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3sCPdK6jT2iWH7ehVRE2I
9DZ+hJp4rPcOVkkO1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5hI6zppSSMEYCUWqKi
uUnSwdzRp+0xESyeGabu4VXhwOrPDYTkF7eifKXeVSUG7szAh1xA2syVP1XgNce4hL60Xc16
gwFy7ofmXx2utYXGJt/mwZrpHgJHnyqobalbz+xFd3+YJ5oyXSrjhO7FmGYvliAd3djDJ9ew
+f7Zfc3Qn48LFFhRny+Lwzgt3uiP1o2HpPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3pEfbR
D0tVNEYqi4Y7
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFQTCCAymgAwIBAgICDL4wDQYJKoZIhvcNAQELBQAwUTELMAkGA1UEBhMCVFcxEjAQBgNV
BAoTCVRBSVdBTi1DQTEQMA4GA1UECxMHUm9vdCBDQTEcMBoGA1UEAxMTVFdDQSBHbG9iYWwg
Um9vdCBDQTAeFw0xMjA2MjcwNjI4MzNaFw0zMDEyMzExNTU5NTlaMFExCzAJBgNVBAYTAlRX
MRIwEAYDVQQKEwlUQUlXQU4tQ0ExEDAOBgNVBAsTB1Jvb3QgQ0ExHDAaBgNVBAMTE1RXQ0Eg
R2xvYmFsIFJvb3QgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCwBdvI64zE
booh745NnHEKH1Jw7W2CnJfF10xORUnLQEK1EjRsGcJ0pDFfhQKX7EMzClPSnIyOt7h52yvV
avKOZsTuKwEHktSz0ALfUPZVr2YOy+BHYC8rMjk1Ujoog/h7FsYYuGLWRyWRzvAZEk2tY/XT
P3VfKfChMBwqoJimFb3u/Rk28OKRQ4/6ytYQJ0lM793B8YVwm8rqqFpD/G2Gb3PpN0Wp8DbH
zIh1HrtsBv+baz4X7GGqcXzGHaL3SekVtTzWoWH1EfcFbx39Eb7QMAfCKbAJTibc46KokWof
wpFFiFzlmLhxpRUZyXx1EcxwdE8tmx2RRP1WKKD+u4ZqyPpcC1jcxkt2yKsi2XMPpfRaAok/
T54igu6idFMqPVMnaR1sjjIsZAAmY2E2TqNGtz99sy2sbZCilaLOz9qC5wc0GZbpuCGqKX6m
OL6OKUohZnkfs8O1CWfe1tQHRvMq2uYiN2DLgbYPoA/pyJV/v1WRBXrPPRXAb94JlAGD1zQb
zECl8LibZ9WYkTunhHiVJqRaCPgrdLQABDzfuBSO6N+pjWxnkjMdwLfS7JLIvgm/LCkFbwJr
nu+8vyq8W8BQj0FwcYeyTbcEqYSjMq+u7msXi7Kx/mzhkIyIqJdIzshNy/MGz19qCkKxHh53
L46g5pIOBvwFItIm4TFRfTLcDwIDAQABoyMwITAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/
BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAXzSBdu+WHdXltdkCY4QWwa6gcFGn90xHNcgL
1yg9iXHZqjNB6hQbbCEAwGxCGX6faVsgQt+i0trEfJdLjbDorMjupWkEmQqSpqsnLhpNgb+E
1HAerUf+/UqdM+DyucRFCCEK2mlpc3INvjT+lIutwx4116KD7+U4x6WFH6vPNOw/KP4M8VeG
TslV9xzU2KV9Bnpv1d8Q34FOIWWxtuEXeZVFBs5fzNxGiWNoRI2T9GRwoD2dKAXDOXC4Ynsg
/eTb6QihuJ49CcdP+yz4k3ZB3lLg4VfSnQO8d57+nile98FRYB/e2guyLXW3Q0iT5/Z5xoRd
gFlglPx4mI88k1HtQJAH32RjJMtOcQWh15QaiDLxInQirqWm2BJpTGCjAu4r7NRjkgtevi92
a6O2JryPA9gK8kxkRr05YuWW6zRjESjMlfGt7+/cgFhI6Uu46mWs6fyAtbXIRfmswZ/Zuepi
iI7E8UuDEq3mi4TWnsLrgxifarsbJGAzcMzs9zLzXNl5fe+epP7JI8Mk7hWSsT2RTyaGvWZz
JBPqpK5jwa19hAM8EHiGG3njxPPyBJUgriOCxLM6AGK/5jYk4Ve6xx6QddVfP5VhK8E7zeWz
aGHQRiapIVJpLesux+t3zqY6tQMzT3bR51xUAV3LePTJDL/PEo4XLSNolOer/qmyKwbQBM0=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFODCCAyCgAwIBAgIRAJW+FqD3LkbxezmCcvqLzZYwDQYJKoZIhvcNAQEFBQAwNzEUMBIG
A1UECgwLVGVsaWFTb25lcmExHzAdBgNVBAMMFlRlbGlhU29uZXJhIFJvb3QgQ0EgdjEwHhcN
MDcxMDE4MTIwMDUwWhcNMzIxMDE4MTIwMDUwWjA3MRQwEgYDVQQKDAtUZWxpYVNvbmVyYTEf
MB0GA1UEAwwWVGVsaWFTb25lcmEgUm9vdCBDQSB2MTCCAiIwDQYJKoZIhvcNAQEBBQADggIP
ADCCAgoCggIBAMK+6yfwIaPzaSZVfp3FVRaRXP3vIb9TgHot0pGMYzHw7CTww6XScnwQbfQ3
t+XmfHnqjLWCi65ItqwA3GV17CpNX8GH9SBlK4GoRz6JI5UwFpB/6FcHSOcZrr9FZ7E3GwYq
/t75rH2D+1665I+XZ75Ljo1kB1c4VWk0Nj0TSO9P4tNmHqTPGrdeNjPUtAa9GAH9d4RQAEX1
jF3oI7x+/jXh7VB7qTCNGdMJjmhnXb88lxhTuylixcpecsHHltTbLaC0H2kD7OriUPEMPPCs
81Mt8Bz17Ww5OXOAFshSsCPN4D7c3TxHoLs1iuKYaIu+5b9y7tL6pe0S7fyYGKkmdtwoSxAg
HNN/Fnct7W+A90m7UwW7XWjH1Mh1Fj+JWov3F0fUTPHSiXk+TT2YqGHeOh7S+F4D4MHJHIzT
jU3TlTazN19jY5szFPAtJmtTfImMMsJu7D0hADnJoWjiUIMusDor8zagrC/kb2HCUQk5PotT
ubtn2txTuXZZNp1D5SDgPTJghSJRt8czu90VL6R4pgd7gUY2BIbdeTXHlSw7sKMXNeVzH7Rc
We/a6hBle3rQf5+ztCo3O3CLm1u5K7fsslESl1MpWtTwEhDcTwK7EpIvYtQ/aUN8Ddb8WHUB
iJ1YFkveupD/RwGJBmr2X7KQarMCpgKIv7NHfirZ1fpoeDVNAgMBAAGjPzA9MA8GA1UdEwEB
/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBTwj1k4ALP1j5qWDNXr+nuqF+gTEjAN
BgkqhkiG9w0BAQUFAAOCAgEAvuRcYk4k9AwI//DTDGjkk0kiP0Qnb7tt3oNmzqjMDfz1mgbl
dxSR651Be5kqhOX//CHBXfDkH1e3damhXwIm/9fH907eT/j3HEbAek9ALCI18Bmx0GtnLLCo
4MBANzX2hFxc469CeP6nyQ1Q6g2EdvZR74NTxnr/DlZJLo961gzmJ1TjTQpgcmLNkQfWpb/I
mWvtxBnmq0wROMVvMeJuScg/doAmAyYp4Db29iBT4xdwNBedY2gea+zDTYa4EzAvXUYNR0PV
G6pZDrlcjQZIrXSHX8f8MVRBE+LHIQ6e4B4N4cB7Q4WQxYpYxmUKeFfyxiMPAdkgS94P+5KF
dSpcc41teyWRyu5FrgZLAMzTsVlQ2jqIOylDRl6XK1TOU2+NSueW+r9xDkKLfP0ooNBIytrE
gUy7onOTJsjrDNYmiLbAJM+7vVvrdX3pCI6GMyx5dwlppYn8s3CQh3aP0yK7Qs69cwsgJirQ
mz1wHiRszYd2qReWt88NkvuOGKmYSdGe/mBEciG5Ge3C9THxOUiIkCR1VBatzvT4aRRkOfuj
uLpwQMcnHL/EVlP6Y2XQ8xwOFvVrhlhNGNTkDY6lnVuR3HYkUD/GKvvZt5y11ubQ2egZixVx
SK236thZiNSQvxaz2emsWWFUyBy6ysHK4bkgTI86k4mloMy/0/Z1pHWWbVY=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIGSzCCBDOgAwIBAgIIamg+nFGby1MwDQYJKoZIhvcNAQELBQAwgbIxCzAJBgNVBAYTAlRS
MQ8wDQYDVQQHDAZBbmthcmExQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtu
b2xvamlsZXJpIHZlIEhpem1ldGxlcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlm
aWthc3lvbiBNZXJrZXppMSgwJgYDVQQDDB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9y
aXR5MB4XDTEzMDMwNTEyMDk0OFoXDTIzMDMwMzEyMDk0OFowgbIxCzAJBgNVBAYTAlRSMQ8w
DQYDVQQHDAZBbmthcmExQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtub2xv
amlsZXJpIHZlIEhpem1ldGxlcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlmaWth
c3lvbiBNZXJrZXppMSgwJgYDVQQDDB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA4vU/kwVRHoViVF56C/UYB4Oufq98
99SKa6VjQzm5S/fDxmSJPZQuVIBSOTkHS0vdhQd2h8y/L5VMzH2nPbxHD5hw+IyFHnSOkm0b
QNGZDbt1bsipa5rAhDGvykPL6ys06I+XawGb1Q5KCKpbknSFQ9OArqGIW66z6l7LFpp3RMih
9lRozt6Plyu6W0ACDGQXwLWTzeHxE2bODHnv0ZEoq1+gElIwcxmOj+GMB6LDu0rw6h8VqO4l
zKRG+Bsi77MOQ7osJLjFLFzUHPhdZL3Dk14opz8n8Y4e0ypQBaNV2cvnOVPAmJ6MVGKLJrD3
fY185MaeZkJVgkfnsliNZvcHfC425lAcP9tDJMW/hkd5s3kc91r0E+xs+D/iWR+V7kI+ua2o
MoVJl0b+SzGPWsutdEcf6ZG33ygEIqDUD13ieU/qbIWGvaimzuT6w+Gzrt48Ue7LE3wBf4QO
XVGUnhMMti6lTPk5cDZvlsouDERVxcr6XQKj39ZkjFqzAQqptQpHF//vkUAqjqFGOjGY5RH8
zLtJVor8udBhmm9lbObDyz51Sf6Pp+KJxWfXnUYTTjF2OySznhFlhqt/7x3U+LznrFpct1pH
XFXOVbQicVtbC/DP3KBhZOqp12gKY6fgDT+gr9Oq0n7vUaDmUStVkhUXU8u3Zg5mTPj5dUyQ
5xJwx0UCAwEAAaNjMGEwHQYDVR0OBBYEFC7j27JJ0JxUeVz6Jyr+zE7S6E5UMA8GA1UdEwEB
/wQFMAMBAf8wHwYDVR0jBBgwFoAULuPbsknQnFR5XPonKv7MTtLoTlQwDgYDVR0PAQH/BAQD
AgEGMA0GCSqGSIb3DQEBCwUAA4ICAQAFNzr0TbdF4kV1JI+2d1LoHNgQk2Xz8lkGpD4eKexd
0dCrfOAKkEh47U6YA5n+KGCRHTAduGN8qOY1tfrTYXbm1gdLymmasoR6d5NFFxWfJNCYExL/
u6Au/U5Mh/jOXKqYGwXgAEZKgoClM4so3O0409/lPun++1ndYYRP0lSWE2ETPo+Aab6TR7U1
Q9Jauz1c77NCR807VRMGsAnb/WP2OogKmW9+4c4bU2pEZiNRCHu8W1Ki/QY3OEBhj0qWuJA3
+GbHeJAAFS6LrVE1Uweoa2iu+U48BybNCAVwzDk/dr2l02cmAYamU9JgO3xDf1WKvJUawSg5
TB9D0pH0clmKuVb8P7Sd2nCcdlqMQ1DujjByTd//SffGqWfZbawCEeI6FiWnWAjLb1NBnEg4
R2gz0dfHj9R0IdTDBZB6/86WiLEVKV0jq9BgoRJP3vQXzTLlyb/IQ639Lo7xr+L0mPoSHyDY
wKcMhcWQ9DstliaxLL5Mq+ux0orJ23gTDx4JnW2PAJ8C2sH6H3p6CcRK5ogql5+Ji/03X186
zjhZhkuvcQu02PJwT58yE+Owp1fl2tpDy4Q08ijE6m30Ku/Ba3ba+367hTzSU8JNvnHhRdH9
I2cNE3X7z2VnIp2usAnRCf8dNL/+I5c30jn6PQ0GC7TbO6Orb1wdtn7os4I07QZcJA==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUxKzApBgNV
BAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lz
dGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNz
IDIwHhcNMDgxMDAxMTA0MDE0WhcNMzMxMDAxMjM1OTU5WjCBgjELMAkGA1UEBhMCREUxKzAp
BgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQt
U3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENs
YXNzIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqX9obX+hzkeXaXPSi5kfl
82hVYAUdAqSzm1nzHoqvNK38DcLZSBnuaY/JIPwhqgcZ7bBcrGXHX+0CfHt8LRvWurmAwhiC
FoT6ZrAIxlQjgeTNuUk/9k9uN0goOA/FvudocP05l03Sx5iRUKrERLMjfTlH6VJi1hKTXrcx
lkIF+3anHqP1wvzpesVsqXFP6st4vGCvx9702cu+fjOlbpSD8DT6IavqjnKgP6TeMFvvhk1q
lVtDRKgQFRzlAVfFmPHmBiiRqiDFt1MmUUOyCxGVWOHAD3bZwI18gfNycJ5v/hqO2V81xrJv
NHy+SE/iWjnX2J14np+GPgNeGYtEotXHAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYD
VR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS/WSA2AHmgoCJrjNXyYdK4LMuCSjANBgkqhkiG9w0B
AQsFAAOCAQEAMQOiYQsfdOhyNsZt+U2e+iKo4YFWz827n+qrkRk4r6p8FU3ztqONpfSO9kSp
p+ghla0+AGIWiPACuvxhI+YzmzB6azZie60EI4RYZeLbK4rnJVM3YlNfvNoBYimipidx5joi
fsFvHZVwIEoHNN/q/xWA5brXethbdXwFeilHfkCoMRN3zUA7tFFHei4R40cR3p1m0IvVVGb6
g1XqfMIpiRvpb7PO4gWEyS8+eIVibslfwXhjdFjASBgMmTnrpMwatXlajRWc2BQN9noHV8ci
gwUtPJslJj0Ys6lDfMjIq2SPDqO/nBudMNva0Bkuqjzx+zOAduTNrRlPBSeOE6Fuwg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDdzCCAl+gAwIBAgIIXDPLYixfszIwDQYJKoZIhvcNAQELBQAwPDEeMBwGA1UEAwwVQXRv
cyBUcnVzdGVkUm9vdCAyMDExMQ0wCwYDVQQKDARBdG9zMQswCQYDVQQGEwJERTAeFw0xMTA3
MDcxNDU4MzBaFw0zMDEyMzEyMzU5NTlaMDwxHjAcBgNVBAMMFUF0b3MgVHJ1c3RlZFJvb3Qg
MjAxMTENMAsGA1UECgwEQXRvczELMAkGA1UEBhMCREUwggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQCVhTuXbyo7LjvPpvMpNb7PGKw+qtn4TaA+Gke5vJrf8v7MPkfoepbCJI41
9KkM/IL9bcFyYie96mvr54rMVD6QUM+A1JX76LWC1BTFtqlVJVfbsVD2sGBkWXppzwO3bw2+
yj5vdHLqqjAqc2K+SZFhyBH+DgMq92og3AIVDV4VavzjgsG1xZ1kCWyjWZgHJ8cblithdHFs
Q/H3NYkQ4J7sVaE3IqKHBAUsR320HLliKWYoyrfhk/WklAOZuXCFteZI6o1Q/NnezG8HDt0L
cp2AMBYHlT8oDv3FdU9T1nSatCQujgKRz3bFmx5VdJx4IbHwLfELn8LVlhgf8FQieowHAgMB
AAGjfTB7MB0GA1UdDgQWBBSnpQaxLKYJYO7Rl+lwrrw7GWzbITAPBgNVHRMBAf8EBTADAQH/
MB8GA1UdIwQYMBaAFKelBrEspglg7tGX6XCuvDsZbNshMBgGA1UdIAQRMA8wDQYLKwYBBAGw
LQMEAQEwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IBAQAmdzTblEiGKkGdLD4G
kGDEjKwLVLgfuXvTBznk+j57sj1O7Z8jvZfza1zv7v1Apt+hk6EKhqzvINB5Ab149xnYJDE0
BAGmuhWawyfc2E8PzBhj/5kPDpFrdRbhIfzYJsdHt6bPWHJxfrrhTZVHO8mvbaG0weyJ9rQP
OLXiZNwlz6bb65pcmaHFCN795trV1lpFDMS3wrUU77QR/w4VtfX128a961qn8FYiqTxlVMYV
qL2Gns2Dlmh6cYGJ4Qvh6hEbaAjMaZ7snkGeRDImeuKHCnE96+RapNLbxc3G3mB/ufNPRJLv
KrcYPqcZ2Qt9sTdBQrC6YB3y/gkRsPCHe6ed
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIUeFhfLq0sGUvjNwc1NBMotZbUZZMwDQYJKoZIhvcNAQELBQAwSDEL
MAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1Zh
ZGlzIFJvb3QgQ0EgMSBHMzAeFw0xMjAxMTIxNzI3NDRaFw00MjAxMTIxNzI3NDRaMEgxCzAJ
BgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRp
cyBSb290IENBIDEgRzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCgvlAQjuny
bEC0BJyFuTHK3C3kEakEPBtVwedYMB0ktMPvhd6MLOHBPd+C5k+tR4ds7FtJwUrVu4/sh6x/
gpqG7D0DmVIB0jWerNrwU8lmPNSsAgHaJNM7qAJGr6Qc4/hzWHa39g6QDbXwz8z6+cZM5cOG
MAqNF34168Xfuw6cwI2H44g4hWf6Pser4BOcBRiYz5P1sZK0/CPTz9XEJ0ngnjybCKOLXSoh
4Pw5qlPafX7PGglTvF0FBM+hSo+LdoINofjSxxR3W5A2B4GbPgb6Ul5jxaYA/qXpUhtStZI5
cgMJYr2wYBZupt0lwgNm3fME0UDiTouG9G/lg6AnhF4EwfWQvTA9xO+oabw4m6SkltFi2mnA
AZauy8RRNOoMqv8hjlmPSlzkYZqn0ukqeI1RPToV7qJZjqlc3sX5kCLliEVx3ZGZbHqfPT2Y
fF72vhZooF6uCyP8Wg+qInYtyaEQHeTTRCOQiJ/GKubX9ZqzWB4vMIkIG1SitZgj7Ah3HJVd
YdHLiZxfokqRmu8hqkkWCKi9YSgxyXSthfbZxbGL0eUQMk1fiyA6PEkfM4VZDdvLCXVDaXP7
a3F98N/ETH3Goy7IlXnLc6KOTk0k+17kBL5yG6YnLUlamXrXXAkgt3+UuU/xDRxeiEIbEbfn
kduebPRq34wGmAOtzCjvpUfzUwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjAdBgNVHQ4EFgQUo5fW816iEOGrRZ88F2Q87gFwnMwwDQYJKoZIhvcNAQELBQAD
ggIBABj6W3X8PnrHX3fHyt/PX8MSxEBd1DKquGrX1RUVRpgjpeaQWxiZTOOtQqOCMTaIzen7
xASWSIsBx40Bz1szBpZGZnQdT+3Btrm0DWHMY37XLneMlhwqI2hrhVd2cDMT/uFPpiN3GPoa
jOi9ZcnPP/TJF9zrx7zABC4tRi9pZsMbj/7sPtPKlL92CiUNqXsCHKnQO18LwIE6PWThv6ct
Tr1NxNgpxiIY0MWscgKCP6o6ojoilzHdCGPDdRS5YCgtW2jgFqlmgiNR9etT2DGbe+m3nUvr
iBbP+V04ikkwj+3x6xn0dxoxGE1nVGwvb2X52z3sIexe9PSLymBlVNFxZPT5pqOBMzYzcfCk
eF9OrYMh3jRJjehZrJ3ydlo28hP0r+AJx2EqbPfgna67hkooby7utHnNkDPDs3b69fBsnQGQ
+p6Q9pxyz0fawx/kNSBT8lTR32GDpgLiJTjehTItXnOQUl1CxM49S+H5GYQd1aJQzEH7QRTD
vdbJWqNjZgKAvQU6O0ec7AAmTPWIUb+oI38YB7AL7YsmoWTTYUrrXJ/es69nA7Mf3W1daWhp
q1467HxpvMc7hU6eFbm0FU/DlXpY18ls6Wy58yljXrQs8C097Vpl4KlbQMJImYFtnh8GKjwS
tIsPm6Ik8KaN1nrgS7ZklmOVhMJKzRwuJIczYOXD
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIURFc0JFuBiZs18s64KztbpybwdSgwDQYJKoZIhvcNAQELBQAwSDEL
MAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1Zh
ZGlzIFJvb3QgQ0EgMiBHMzAeFw0xMjAxMTIxODU5MzJaFw00MjAxMTIxODU5MzJaMEgxCzAJ
BgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRp
cyBSb290IENBIDIgRzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQChriWyARjc
V4g/Ruv5r+LrI3HimtFhZiFfqq8nUeVuGxbULX1QsFN3vXg6YOJkApt8hpvWGo6t/x8Vf9WV
HhLL5hSEBMHfNrMWn4rjyduYNM7YMxcoRvynyfDStNVNCXJJ+fKH46nafaF9a7I6JaltUkSs
+L5u+9ymc5GQYaYDFCDy54ejiK2toIz/pgslUiXnFgHVy7g1gQyjO/Dh4fxaXc6AcW34Sas+
O7q414AB+6XrW7PFXmAqMaCvN+ggOp+oMiwMzAkd056OXbxMmO7FGmh77FOm6RQ1o9/NgJ8M
SPsc9PG/Srj61YxxSscfrf5BmrODXfKEVu+lV0POKa2Mq1W/xPtbAd0jIaFYAI7D0GoT7RPj
EiuA3GfmlbLNHiJuKvhB1PLKFAeNilUSxmn1uIZoL1NesNKqIcGY5jDjZ1XHm26sGahVpkUG
0CM62+tlXSoREfA7T8pt9DTEceT/AFr2XK4jYIVz8eQQsSWu1ZK7E8EM4DnatDlXtas1qnIh
O4M15zHfeiFuuDIIfR0ykRVKYnLP43ehvNURG3YBZwjgQQvD6xVu+KQZ2aKrr+InUlYrAoos
FCT5v0ICvybIxo/gbjh9Uy3l7ZizlWNof/k19N+IxWA1ksB8aRxhlRbQ694Lrz4EEEVlWFA4
r0jyWbYW8jwNkALGcC4BrTwV1wIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjAdBgNVHQ4EFgQU7edvdlq/YOxJW8ald7tyFnGbxD0wDQYJKoZIhvcNAQELBQAD
ggIBAJHfgD9DCX5xwvfrs4iP4VGyvD11+ShdyLyZm3tdquXK4Qr36LLTn91nMX66AarHakE7
kNQIXLJgapDwyM4DYvmL7ftuKtwGTTwpD4kWilhMSA/ohGHqPHKmd+RCroijQ1h5fq7KpVMN
qT1wvSAZYaRsOPxDMuHBR//47PERIjKWnML2W2mWeyAMQ0GaW/ZZGYjeVYg3UQt4XAoeo0L9
x52ID8DyeAIkVJOviYeIyUqAHerQbj5hLja7NQ4nlv1mNDthcnPxFlxHBlRJAHpYErAK74X9
sbgzdWqTHBLmYF5vHX/JHyPLhGGfHoJE+V+tYlUkmlKY7VHnoX6XOuYvHxHaU4AshZ6rNRDb
Il9qxV6XU/IyAgkwo1jwDQHVcsaxfGl7w/U2Rcxhbl5MlMVerugOXou/983g7aEOGzPuVBj+
D77vfoRrQ+NwmNtddbINWQeFFSM51vHfqSYP1kjHs6Yi9TM3WpVHn3u6GBVv/9YUZINJ0gpn
IdsPNWNgKCLjsZWDzYWm3S8P52dSbrsvhXz1SnPnxT7AvSESBT/8twNJAlvIJebiVDj1eYeM
HVOyToV7BjjHLPj4sHKNJeV3UvQDHEimUF+IIDBu8oJDqz2XhOdT+yHBTw8imoa4WSr2Rz0Z
iC3oheGe7IUIarFsNMkd7EgrO3jtZsSOeWmD3n+M
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIULvWbAiin23r/1aOp7r0DoM8Sah0wDQYJKoZIhvcNAQELBQAwSDEL
MAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1Zh
ZGlzIFJvb3QgQ0EgMyBHMzAeFw0xMjAxMTIyMDI2MzJaFw00MjAxMTIyMDI2MzJaMEgxCzAJ
BgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRp
cyBSb290IENBIDMgRzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCzyw4QZ47q
FJenMioKVjZ/aEzHs286IxSR/xl/pcqs7rN2nXrpixurazHb+gtTTK/FpRp5PIpM/6zfJd5O
2YIyC0TeytuMrKNuFoM7pmRLMon7FhY4futD4tN0SsJiCnMK3UmzV9KwCoWdcTzeo8vAMvMB
OSBDGzXRU7Ox7sWTaYI+FrUoRqHe6okJ7UO4BUaKhvVZR74bbwEhELn9qdIoyhA5CcoTNs+c
ra1AdHkrAj80//ogaX3T7mH1urPnMNA3I4ZyYUUpSFlob3emLoG+B01vr87ERRORFHAGjx+f
+IdpsQ7vw4kZ6+ocYfx6bIrc1gMLnia6Et3UVDmrJqMz6nWB2i3ND0/kA9HvFZcba5DFApCT
ZgIhsUfei5pKgLlVj7WiL8DWM2fafsSntARE60f75li59wzweyuxwHApw0BiLTtIadwjPEjr
ewl5qW3aqDCYz4ByA4imW0aucnl8CAMhZa634RylsSqiMd5mBPfAdOhx3v89WcyWJhKLhZVX
GqtrdQtEPREoPHtht+KPZ0/l7DxMYIBpVzgeAVuNVejH38DMdyM0SXV89pgR6y3e7UEuFAUC
f+D+IOs15xGsIs5XPd7JMG0QA4XN8f+MFrXBsj6IbGB/kE+V9/YtrQE5BwT6dYB9v0lQ7e/J
xHwc64B+27bQ3RP+ydOc17KXqQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjAdBgNVHQ4EFgQUxhfQvKjqAkPyGwaZXSuQILnXnOQwDQYJKoZIhvcNAQELBQAD
ggIBADRh2Va1EodVTd2jNTFGu6QHcrxfYWLopfsLN7E8trP6KZ1/AvWkyaiTt3pxKGmPc+FS
kNrVvjrlt3ZqVoAh313m6Tqe5T72omnHKgqwGEfcIHB9UqM+WXzBusnIFUBhynLWcKzSt/Ac
5IYp8M7vaGPQtSCKFWGafoaYtMnCdvvMujAWzKNhxnQT5WvvoxXqA/4Ti2Tk08HS6IT7SdEQ
TXlm66r99I0xHnAUrdzeZxNMgRVhvLfZkXdxGYFgu/BYpbWcC/ePIlUnwEsBbTuZDdQdm2Nn
L9DuDcpmvJRPpq3t/O5jrFc/ZSXPsoaP0Aj/uHYUbt7lJ+yreLVTubY/6CD50qi+YUbKh4yE
8/nxoGibIh6BJpsQBJFxwAYf3KDTuVan45gtf4Od34wrnDKOMpTwATwiKp9Dwi7DmDkHOHv8
XgBCH/MyJnmDhPbl8MFREsALHgQjDFSlTC9JxUrRtm5gDWv8a4uFJGS3iQ6rJUdbPM9+Sb3H
6QrG2vd+DhcI00iX0HGS8A85PjRqHH3Y8iKuu2n0M7SmSFXRDw4m6Oy2Cy2nhTXN/VnIn9HN
PlopNLk9hM6xZdRZkZFWdSHBd575euFgndOtBBj0fOtek49TSiIp+EgrPk2GrFt/ywaZWWDY
WGWVjUTR939+J399roD1B0y2PpxxVJkES/1Y+Zj0
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDljCCAn6gAwIBAgIQC5McOtY5Z+pnI7/Dr5r0SzANBgkqhkiG9w0BAQsFADBlMQswCQYD
VQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
Y29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzIwHhcNMTMwODAxMTIw
MDAwWhcNMzgwMTE1MTIwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQg
SW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1
cmVkIElEIFJvb3QgRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ5ygvUj82
ckmIkzTz+GoeMVSAn61UQbVH35ao1K+ALbkKz3X9iaV9JPrjIgwrvJUXCzO/GU1BBpAAvQxN
EP4HteccbiJVMWWXvdMX0h5i89vqbFCMP4QMls+3ywPgym2hFEwbid3tALBSfK+RbLE4E9Hp
EgjAALAcKxHad3A2m67OeYfcgnDmCXRwVWmvo2ifv922ebPynXApVfSr/5Vh88lAbx3RvpO7
04gqu52/clpWcTs/1PPRCv4o76Pu2ZmvA9OPYLfykqGxvYmJHzDNw6YuYjOuFgJ3RFrngQo8
p0Quebg/BLxcoIfhG69Rjs3sLPr4/m3wOnyqi+RnlTGNAgMBAAGjQjBAMA8GA1UdEwEB/wQF
MAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBTOw0q5mVXyuNtgv6l+vVa1lzan1jAN
BgkqhkiG9w0BAQsFAAOCAQEAyqVVjOPIQW5pJ6d1Ee88hjZv0p3GeDgdaZaikmkuOGybfQTU
iaWxMTeKySHMq2zNixya1r9I0jJmwYrA8y8678Dj1JGG0VDjA9tzd29KOVPt3ibHtX2vK0LR
dWLjSisCx1BL4GnilmwORGYQRI+tBev4eaymG+g3NJ1TyWGqolKvSnAWhsI6yLETcDbYz+70
CjTVW0z9B5yiutkBclzzTcHdDrEcDcRjvq30FPuJ7KJBDkzMyFdA0G4Dqs0MjomZmWzwPDCv
ON9vvKO+KSAnq3T/EyJ43pdSVR6DtVQgA+6uwE9W3jfMw3+qBCe703e4YtsXfJwoIhNzbM8m
9Yop5w==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICRjCCAc2gAwIBAgIQC6Fa+h3foLVJRK/NJKBs7DAKBggqhkjOPQQDAzBlMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29t
MSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzMwHhcNMTMwODAxMTIwMDAw
WhcNMzgwMTE1MTIwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5j
MRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVk
IElEIFJvb3QgRzMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQZ57ysRGXtzbg/WPuNsVepRC0F
FfLvC/8QdJ+1YlJfZn4f5dwbRXkLzMZTCp2NXQLZqVneAlr2lSoOjThKiknGvMYDOAdfVdp+
CW7if17QRSAPWXYQ1qAk8C3eNvJsKTmjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/
BAQDAgGGMB0GA1UdDgQWBBTL0L2p4ZgFUaFNN6KDec6NHSrkhDAKBggqhkjOPQQDAwNnADBk
AjAlpIFFAmsSS3V0T8gj43DydXLefInwz5FyYZ5eEJJZVrmDxxDnOOlYJjZ91eQ0hjkCMHw2
U/Aw5WJjOpnitqM7mzT6HtoQknFekROn3aRukswy1vUhZscv6pZjamVFkpUBtA==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBhMQswCQYD
VQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
Y29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMjAeFw0xMzA4MDExMjAwMDBa
Fw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMx
GTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBS
b290IEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/
RrohCgiN9RlUyfuI2/Ou8jqJkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxps
MNzaHxmx1x7e/dfgy5SDN67sH0NO3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQ
q2EGnI/yuum06ZIya7XzV+hdG82MHauVBJVJ8zUtluNJbd134/tJS7SsVQepj5WztCO7TG1F
8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyMUNGPHgm+F6HmIcr9g+UQvIOlCsRnKPZzFBQ9
RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4G
A1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV5uNu5g/6+rkS7QYXjzkwDQYJKoZIhvcN
AQELBQADggEBAGBnKJRvDkhj6zHd6mcY1Yl9PMWLSn/pvtsrF9+wX3N3KjITOYFnQoQj8kVn
NeyIv/iPsGEMNKSuIEyExtv4NeF22d+mQrvHRAiGfzZ0JFrabA0UWTW98kndth/Jsw1HKj2Z
L7tcu7XUIOGZX1NGFdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBHQRFXGU7Aj64GxJUT
Fy8bJZ918rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/iyK5S9kJRaTe
pLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTflMrY=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICPzCCAcWgAwIBAgIQBVVWvPJepDU1w6QP1atFcjAKBggqhkjOPQQDAzBhMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29t
MSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMzAeFw0xMzA4MDExMjAwMDBaFw0z
ODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAX
BgNVBAsTEHd3dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290
IEczMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE3afZu4q4C/sLfyHS8L6+c/MzXRq8NOrexpu8
0JX28MzQC7phW1FGfp4tn+6OYwwX7Adw9c+ELkCDnOg/QW07rdOkFFk2eJ0DQ+4QE2xy3q6I
p6FrtUPOZ9wj/wMco+I+o0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAd
BgNVHQ4EFgQUs9tIpPmhxdiuNkHMEWNpYim8S8YwCgYIKoZIzj0EAwMDaAAwZQIxAK288mw/
EkrRLTnDCgmXc/SINoyIJ7vmiI1Qhadj+Z4y3maTD/HMsQmP3Wyr+mt/oAIwOWZbwmSNuJ5Q
3KjVSaLtx9zRSX8XAbjIho9OjIgrqJqpisXRAL34VOKa5Vt8sycX
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFkDCCA3igAwIBAgIQBZsbV56OITLiOQe9p3d1XDANBgkqhkiG9w0BAQwFADBiMQswCQYD
VQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
Y29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3QgRzQwHhcNMTMwODAxMTIwMDAw
WhcNMzgwMTE1MTIwMDAwWjBiMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5j
MRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVk
IFJvb3QgRzQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC/5pBzaN675F1KPDAi
MGkz7MKnJS7JIT3yithZwuEppz1Yq3aaza57G4QNxDAf8xukOBbrVsaXbR2rsnnyyhHS5F/W
BTxSD1Ifxp4VpX6+n6lXFllVcq9ok3DCsrp1mWpzMpTREEQQLt+C8weE5nQ7bXHiLQwb7iDV
ySAdYyktzuxeTsiT+CFhmzTrBcZe7FsavOvJz82sNEBfsXpm7nfISKhmV1efVFiODCu3T6cw
2Vbuyntd463JT17lNecxy9qTXtyOj4DatpGYQJB5w3jHtrHEtWoYOAMQjdjUN6QuBX2I9YI+
EJFwq1WCQTLX2wRzKm6RAXwhTNS8rhsDdV14Ztk6MUSaM0C/CNdaSaTC5qmgZ92kJ7yhTzm1
EVgX9yRcRo9k98FpiHaYdj1ZXUJ2h4mXaXpI8OCiEhtmmnTK3kse5w5jrubU75KSOp493ADk
RSWJtppEGSt+wJS00mFt6zPZxd9LBADMfRyVw4/3IbKyEbe7f/LVjHAsQWCqsWMYRJUadmJ+
9oCw++hkpjPRiQfhvbfmQ6QYuKZ3AeEPlAwhHbJUKSWJbOUOUlFHdL4mrLZBdd56rF+NP8m8
00ERElvlEFDrMcXKchYiCd98THU/Y+whX8QgUWtvsauGi0/C1kVfnSD8oR7FwI+isX4KJpn1
5GkvmB0t9dmpsh3lGwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB
hjAdBgNVHQ4EFgQU7NfjgtJxXWRM3y5nP+e6mK4cD08wDQYJKoZIhvcNAQEMBQADggIBALth
2X2pbL4XxJEbw6GiAI3jZGgPVs93rnD5/ZpKmbnJeFwMDF/k5hQpVgs2SV1EY+CtnJYYZhsj
DT156W1r1lT40jzBQ0CuHVD1UvyQO7uYmWlrx8GnqGikJ9yd+SeuMIW59mdNOj6PWTkiU0Tr
yF0Dyu1Qen1iIQqAyHNm0aAFYF/opbSnr6j3bTWcfFqK1qI4mfN4i/RN0iAL3gTujJtHgXIN
wBQy7zBZLq7gcfJW5GqXb5JQbZaNaHqasjYUegbyJLkJEVDXCLG4iXqEI2FCKeWjzaIgQdfR
nGTZ6iahixTXTBmyUEFxPT9NcCOGDErcgdLMMpSEDQgJlxxPwO5rIHQw0uA5NBCFIRUBCOhV
Mt5xSdkoF1BN5r5N0XWs0Mr7QbhDparTwwVETyw2m+L64kW4I1NsBm9nVX9GtUw/bihaeSbS
pKhil9Ie4u1Ki7wb/UdKDd9nZn6yW0HQO+T0O/QEY+nvwlQAUaCKKsnOeMzV6ocEGLPOr0mI
r/OSmbaz5mEP0oUA51Aa5BuVnRmhuZyxm7EAHu/QD09CbMkKvO5D+jpxpchNJqU1/YldvIVi
HTLSoCtU7ZpXwdv6EM8Zt4tKG48BtieVU+i2iW1bvGjUI+iLUaJW+fCmgKDWHrO8Dw9TdSmq
6hN35N6MgSGtBxBHEa2HPQfRdbzP82Z+
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCBhTELMAkG
A1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9y
ZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMTE5MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCB
hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMH
U2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBS
U0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK
AoICAQCR6FSS0gpWsawNJN3Fz0RndJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8X
pz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC9BR++b7E
pi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+5eNu/Nio5JIk2kNrYrhV/erBvGy2i/MOjZrk
m2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pGx8cgoLEfZd5ICLqkTqnyg0Y3hOvozIFI
Q2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z+pUX2nwzV0E8jVHtC7ZcryxjGt9XyD+8
6V3Em69FmeKjWiS0uqlWPc9vqv9JWL7wqP/0uK3pN/u6uPQLOvnoQ0IeidiEyxPx2bvhiWC4
jChWrBQdnArncevPDt09qZahSL0896+1DSJMwBGB7FY79tOi4lu3sgQiUpWAk2nojkxl8ZED
LXB0AuqLZxUpaVICu9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+CGCe01a60y1Dma/RM
hnEw6abfFobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5WdYgGq/yapiq
crxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4EFgQUu69+
Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJ
KoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvlwFTPoCWOAvn9sKIN9SCYPBMt
rFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA
1sj+nq6PK7o9mfjYcwlYRm6mnPTXJ9OV2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4
sjn8OoSgtZx8jb8uk2IntznaFxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrr
kguhxuhoqEwWsRqZCuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpj
IXUDgIiKboHGhfKppC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmcke
jkk9u+UJueBPSZI9FoJAzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yLS0Zj/gA0
QHDBw7mh3aZw4gSzQbzpgJHqZJx64SIDqZxubw5lT2yHh17zbqD5daWbQOhTsiedSrnAdyGN
/4fy3ryM7xfft0kL0fJuMAsaDk527RH89elWsn2/x20Kk4yl0MC2Hb46TpSi125sC8KKfPog
88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7ILaZRfyHBNVOFBkpdn627G190
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF3jCCA8agAwIBAgIQAf1tMPyjylGoG7xkDjUDLTANBgkqhkiG9w0BAQwFADCBiDELMAkG
A1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4w
HAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0Eg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMjAxMDAwMDAwWhcNMzgwMTE4MjM1OTU5
WjCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNl
eSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJU
cnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4IC
DwAwggIKAoICAQCAEmUXNg7D2wiz0KxXDXbtzSfTTK1Qg2HiqiBNCS1kCdzOiZ/MPans9s/B
3PHTsdZ7NygRK0faOca8Ohm0X6a9fZ2jY0K2dvKpOyuR+OJv0OwWIJAJPuLodMkYtJHUYmTb
f6MG8YgYapAiPLz+E/CHFHv25B+O1ORRxhFnRghRy4YUVD+8M/5+bJz/Fp0YvVGONaanZshy
Z9shZrHUm3gDwFA66Mzw3LyeTP6vBZY1H1dat//O+T23LLb2VN3I5xI6Ta5MirdcmrS3ID3K
fyI0rn47aGYBROcBTkZTmzNg95S+UzeQc0PzMsNT79uq/nROacdrjGCT3sTHDN/hMq7MkztR
eJVni+49Vv4M0GkPGw/zJSZrM233bkf6c0Plfg6lZrEpfDKEY1WJxA3Bk1QwGROs0303p+td
Omw1XNtB1xLaqUkL39iAigmTYo61Zs8liM2EuLE/pDkP2QKe6xJMlXzzawWpXhaDzLhn4ugT
ncxbgtNMs+1b/97lc6wjOy0AvzVVdAlJ2ElYGn+SNuZRkg7zJn0cTRe8yexDJtC/QV9AqURE
9JnnV4eeUB9XVKg+/XRjL7FQZQnmWEIuQxpMtPAlR1n6BB6T1CZGSlCBst6+eLf8ZxXhyVeE
Hg9j1uliutZfVS7qXMYoCAQlObgOK6nyTJccBz8NUvXt7y+CDwIDAQABo0IwQDAdBgNVHQ4E
FgQUU3m/WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMB
Af8wDQYJKoZIhvcNAQEMBQADggIBAFzUfA3P9wF9QZllDHPFUp/L+M+ZBn8b2kMVn54CVVeW
FPFSPCeHlCjtHzoBN6J2/FNQwISbxmtOuowhT6KOVWKR82kV2LyI48SqC/3vqOlLVSoGIG1V
eCkZ7l8wXEskEVX/JJpuXior7gtNn3/3ATiUFJVDBwn7YKnuHKsSjKCaXqeYalltiz8I+8jR
Ra8YFWSQEg9zKC7F4iRO/Fjs8PRF/iKz6y+O0tlFYQXBl2+odnKPi4w2r78NBc5xjeambx9s
pnFixdjQg3IM8WcRiQycE0xyNN+81XHfqnHd4blsjDwSXWXavVcStkNr/+XeTWYRUc+ZruwX
tuhxkYzeSf7dNXGiFSeUHM9h4ya7b6NnJSFd5t0dCy5oGzuCr+yDZ4XUmFF0sbmZgIn/f3gZ
XHlKYC6SQK5MNyosycdiyA5d9zZbyuAlJQG03RoHnHcAP9Dc1ew91Pq7P8yF1m9/qS3fuQL3
9ZeatTXaw2ewh0qpKJ4jjv9cJ2vhsE/zB+4ALtRZh8tSQZXq9EfX7mRBVXyNWQKV3WKdwrnu
Wih0hKWbt5DHDAff9Yk2dDLWKMGwsAvgnEzDHNb842m1R0aBL6KCq9NjRHDEjf8tM7qtj3u1
cIiuPhnPQCjY/MiQu12ZIvVS5ljFH4gxQ+6IHdfGjjxDah2nGN59PRbxYvnKkKj9
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICjzCCAhWgAwIBAgIQXIuZxVqUxdJxVt7NiYDMJjAKBggqhkjOPQQDAzCBiDELMAkGA1UE
BhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYD
VQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBFQ0MgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMjAxMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCB
iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBD
aXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVz
dCBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQa
rFRaqfloI+d61SRvU8Za2EurxtW20eZzca7dnNYMYf3boIkDuAUU7FfO7l0/4iGzzvfUinng
o4N+LZfQYcTxmdwlkWOrfzCjtHDix6EznPO/LlxTsV+zfTJ/ijTjeXmjQjBAMB0GA1UdDgQW
BBQ64QmG1M8ZwpZ2dEl23OA1xmNjmjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zAKBggqhkjOPQQDAwNoADBlAjA2Z6EWCNzklwBBHU6+4WMBzzuqQhFkoJ2UOQIReVx7Hfpk
ue4WQrO/isIJxOzksU0CMQDpKmFHjFJKS04YcPbWRNZu9YO6bVi9JNlWSOrvxKJGgYhqOkbR
qZtNyWHa0V1Xahg=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIB4TCCAYegAwIBAgIRKjikHJYKBN5CsiilC+g0mAIwCgYIKoZIzj0EAwIwUDEkMCIGA1UE
CxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI0MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMw
EQYDVQQDEwpHbG9iYWxTaWduMB4XDTEyMTExMzAwMDAwMFoXDTM4MDExOTAzMTQwN1owUDEk
MCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI0MRMwEQYDVQQKEwpHbG9iYWxT
aWduMRMwEQYDVQQDEwpHbG9iYWxTaWduMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEuMZ5
049sJQ6fLjkZHAOkrprlOQcJFspjsbmG+IpXwVfOQvpzofdlQv8ewQCybnMO/8ch5Rikqtlx
P6jUuc6MHaNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
FFSwe61FuOJAf/sKbvu+M8k8o4TVMAoGCCqGSM49BAMCA0gAMEUCIQDckqGgE6bPA7DmxCGX
kPoUVy0D7O48027KqGx2vKLeuwIgJ6iFJzWbVsaj8kfSt24bAgAXqmemFZHe+pTsewv4n4Q=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICHjCCAaSgAwIBAgIRYFlJ4CYuu1X5CneKcflK2GwwCgYIKoZIzj0EAwMwUDEkMCIGA1UE
CxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI1MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMw
EQYDVQQDEwpHbG9iYWxTaWduMB4XDTEyMTExMzAwMDAwMFoXDTM4MDExOTAzMTQwN1owUDEk
MCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI1MRMwEQYDVQQKEwpHbG9iYWxT
aWduMRMwEQYDVQQDEwpHbG9iYWxTaWduMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAER0UOlvt9
Xb/pOdEh+J8LttV7HpI6SFkc8GIxLcB6KP4ap1yztsyX50XUWPrRd21DosCHZTQKH3rd6zwz
ocWdTaRvQZU4f8kehOvRnkmSh5SHDDqFSmafnVmTTZdhBoZKo0IwQDAOBgNVHQ8BAf8EBAMC
AQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUPeYpSJvqB8ohREom3m7e0oPQn1kwCgYI
KoZIzj0EAwMDaAAwZQIxAOVpEslu28YxuglB4Zf4+/2a4n0Sye18ZNPLBSWLVtmg515dTguD
nFt2KaAJJiFqYgIwcdK1j1zqO+F4CYWodZI7yFz9SO8NdCKoCOJuxUnOxwy8p2Fp8fc74SrL
+SvzZpA3
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFdDCCA1ygAwIBAgIEAJiiOTANBgkqhkiG9w0BAQsFADBaMQswCQYDVQQGEwJOTDEeMBwG
A1UECgwVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSswKQYDVQQDDCJTdGFhdCBkZXIgTmVkZXJs
YW5kZW4gUm9vdCBDQSAtIEczMB4XDTEzMTExNDExMjg0MloXDTI4MTExMzIzMDAwMFowWjEL
MAkGA1UEBhMCTkwxHjAcBgNVBAoMFVN0YWF0IGRlciBOZWRlcmxhbmRlbjErMCkGA1UEAwwi
U3RhYXQgZGVyIE5lZGVybGFuZGVuIFJvb3QgQ0EgLSBHMzCCAiIwDQYJKoZIhvcNAQEBBQAD
ggIPADCCAgoCggIBAL4yolQPcPssXFnrbMSkUeiFKrPMSjTysF/zDsccPVMeiAho2G89rcKe
zIJnByeHaHE6n3WWIkYFsO2tx1ueKt6c/DrGlaf1F2cY5y9JCAxcz+bMNO14+1Cx3Gsy8KL+
tjzk7FqXxz8ecAgwoNzFs21v0IJyEavSgWhZghe3eJJg+szeP4TrjTgzkApyI/o1zCZxMdFy
KJLZWyNtZrVtB0LrpjPOktvA9mxjeM3KTj215VKb8b475lRgsGYeCasH/lSJEULR9yS6YHga
mPfJEf0WwTUaVHXvQ9Plrk7O53vDxk5hUUurmkVLoR9BvUhTFXFkC4az5S6+zqQbwSmEorXL
CCN2QyIkHxcE1G6cxvx/K2Ya7Irl1s9N9WMJtxU51nus6+N86U78dULI7ViVDAZCopz35HCz
33JvWjdAidiFpNfxC95DGdRKWCyMijmev4SH8RY7Ngzp07TKbBlBUgmhHbBqv4LvcFEhMtwF
dozL92TkA1CvjJFnq8Xy7ljY3r735zHPbMk7ccHViLVlvMDoFxcHErVc0qsgk7TmgoNwNsXN
o42ti+yjwUOH5kPiNL6VizXtBznaqB16nzaeErAMZRKQFWDZJkBE41ZgpRDUajz9QdwOWke2
75dhdU/Z/seyHdTtXUmzqWrLZoQT1Vyg3N9udwbRcXXIV2+vD3dbAgMBAAGjQjBAMA8GA1Ud
EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRUrfrHkleuyjWcLhL75Lpd
INyUVzANBgkqhkiG9w0BAQsFAAOCAgEAMJmdBTLIXg47mAE6iqTnB/d6+Oea31BDU5cqPco8
R5gu4RV78ZLzYdqQJRZlwJ9UXQ4DO1t3ApyEtg2YXzTdO2PCwyiBwpwpLiniyMMB8jPqKqrM
CQj3ZWfGzd/TtiunvczRDnBfuCPRy5FOCvTIeuXZYzbB1N/8Ipf3YF3qKS9Ysr1YvY2WTxB1
v0h7PVGHoTx0IsL8B3+A3MSs/mrBcDCw6Y5p4ixpgZQJut3+TcCDjJRYwEYgr5wfAvg1VUkv
RtTA8KCWAg8zxXHzniN9lLf9OtMJgwYh/WA9rjLA0u6NpvDntIJ8CsxwyXmA+P5M9zWEGYox
+wrZ13+b8KKaa8MFSu1BYBQw0aoRQm7TIwIEC8Zl3d1Sd9qBa7Ko+gE4uZbqKmxnl4mUnrzh
VNXkanjvSr0rmj1AfsbAddJu+2gw7OyLnflJNZoaLNmzlTnVHpL3prllL+U9bTpITAjc5CgS
KL59NVzq4BZ+Extq1z7XnvwtdbLBFNUjA9tbbws+eC8N3jONFrdI54OagQ97wUNNVQQXOEpR
1VmiiXTTn74eS9fGbbeIJG9gkaSChVtWQbzQRKtqE77RLFi3EjNYsjdj3BP1lB0/QFH1T/U6
7cjF68IeHRaVesd+QnGTbksVtzDfqu1XhUisHWrdOWnk4Xl4vs4Fv6EM94B7IWcnMFk=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFcDCCA1igAwIBAgIEAJiWjTANBgkqhkiG9w0BAQsFADBYMQswCQYDVQQGEwJOTDEeMBwG
A1UECgwVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSkwJwYDVQQDDCBTdGFhdCBkZXIgTmVkZXJs
YW5kZW4gRVYgUm9vdCBDQTAeFw0xMDEyMDgxMTE5MjlaFw0yMjEyMDgxMTEwMjhaMFgxCzAJ
BgNVBAYTAk5MMR4wHAYDVQQKDBVTdGFhdCBkZXIgTmVkZXJsYW5kZW4xKTAnBgNVBAMMIFN0
YWF0IGRlciBOZWRlcmxhbmRlbiBFViBSb290IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8A
MIICCgKCAgEA48d+ifkkSzrSM4M1LGns3Amk41GoJSt5uAg94JG6hIXGhaTK5skuU6TJJB79
VWZxXSzFYGgEt9nCUiY4iKTWO0Cmws0/zZiTs1QUWJZV1VD+hq2kY39ch/aO5ieSZxeSAgMs
3NZmdO3dZ//BYY1jTw+bbRcwJu+r0h8QoPnFfxZpgQNH7R5ojXKhTbImxrpsX23Wr9GxE46p
rfNeaXUmGD5BKyF/7otdBwadQ8QpCiv8Kj6GyzyDOvnJDdrFmeK8eEEzduG/L13lpJhQDBXd
4Pqcfzho0LKmeqfRMb1+ilgnQ7O6M5HTp5gVXJrm0w912fxBmJc+qiXbj5IusHsMX/FjqTf5
m3VpTCgmJdrV8hJwRVXj33NeN/UhbJCONVrJ0yPr08C+eKxCKFhmpUZtcALXEPlLVPxdhkqH
z3/KRawRWrUgUY0viEeXOcDPusBCAUCZSCELa6fS/ZbV0b5GnUngC6agIk440ME8MLxwjyx1
zNDFjFE7PZQIZCZhfbnDZY8UnCHQqv0XcgOPvZuM5l5Tnrmd74K74bzickFbIZTTRTeU0d8J
OV3nI6qaHcptqAqGhYqCvkIH1vI4gnPah1vlPNOePqc7nvQDs/nxfRN0Av+7oeX6AHkcpmZB
iFxgV6YuCcS6/ZrPpx9Aw7vMWgpVSzs4dlG4Y4uElBbmVvMCAwEAAaNCMEAwDwYDVR0TAQH/
BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFP6rAJCYniT8qcwaivsnuL8wbqg7
MA0GCSqGSIb3DQEBCwUAA4ICAQDPdyxuVr5Os7aEAJSrR8kN0nbHhp8dB9O2tLsIeK9p0gtJ
3jPFrK3CiAJ9Brc1AsFgyb/E6JTe1NOpEyVa/m6irn0F3H3zbPB+po3u2dfOWBfoqSmuc0iH
55vKbimhZF8ZE/euBhD/UcabTVUlT5OZEAFTdfETzsemQUHSv4ilf0X8rLiltTMMgsT7B/Zq
5SWEXwbKwYY5EdtYzXc7LMJMD16a4/CrPmEbUCTCwPTxGfARKbalGAKb12NMcIxHowNDXLld
RqANb/9Zjr7dn3LDWyvfjFvO5QxGbJKyCqNMVEIYFRIYvdr8unRu/8G2oGTYqV9Vrp9canaW
2HNnh/tNf1zuacpzEPuKqf2evTY4SUmH9A4U8OmHuD+nT3pajnnUk+S7aFKErGzp85hwVXIy
+TSrK0m1zSBi5Dp6Z2Orltxtrpfs/J92VoguZs9btsmksNcFuuEnL5O7Jiqik7Ab846+HUCj
uTaPPoIaGl6I6lD4WeKDRikL40Rc4ZW2aZCaFG+XroHPaO+Zmr615+F/+PoTRxZMzG0IQOeL
eG9QgkRQP2YGiqtDhFZKDyAthg710tvSeopLzaXoTvFeJiUBWSOgftL2fiFX1ye8FVdMpEbB
4IMeDExNH08GGeL5qPQ6gqGyeUN51q1veieQA6TqJIc/2b3Z6fJfUEkc7uzXLg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIQCgFCgAAAAUUjyES1AAAAAjANBgkqhkiG9w0BAQsFADBKMQswCQYD
VQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVy
Y2lhbCBSb290IENBIDEwHhcNMTQwMTE2MTgxMjIzWhcNMzQwMTE2MTgxMjIzWjBKMQswCQYD
VQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVy
Y2lhbCBSb290IENBIDEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCnUBneP5k9
1DNG8W9RYYKyqU+PZ4ldhNlT3Qwo2dfw/66VQ3KZ+bVdfIrBQuExUHTRgQ18zZshq0PirK1e
hm7zCYofWjK9ouuU+ehcCuz/mNKvcbO0U59Oh++SvL3sTzIwiEsXXlfEU8L2ApeN2WIrvyQf
Yo3fw7gpS0l4PJNgiCL8mdo2yMKi1CxUAGc1bnO/AljwpN3lsKImesrgNqUZFvX9t++uP0D1
bVoE/c40yiTcdCMbXTMTEl3EASX2MN0CXZ/g1Ue9tOsbobtJSdifWwLziuQkkORiT0/Br4sO
dBeo0XKIanoBScy0RnnGF7HamB4HWfp1IYVl3ZBWzvurpWCdxJ35UrCLvYf5jysjCiN2O/cz
4ckA82n5S6LgTrx+kzmEB/dEcH7+B1rlsazRGMzyNeVJSQjKVsk9+w8YfYs7wRPCTY/JTw43
6R+hDmrfYi7LNQZReSzIJTj0+kuniVyc0uMNOYZKdHzVWYfCP04MXFL0PfdSgvHqo6z9STQa
KPNBiDoT7uje/5kdX7rL6B7yuVBgwDHTc+XvvqDtMwt0viAgxGds8AgDelWAf0ZOlqf0Hj7h
9tgJ4TNkK2PXMl6f+cB7D3hvl7yTmvmcEpB4eoCHFddydJxVdHixuuFucAS6T6C6aMN7/zHw
cz09lCqxC0EOoP5NiGVreTO01wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/
BAUwAwEB/zAdBgNVHQ4EFgQU7UQZwNPwBovupHu+QucmVMiONnYwDQYJKoZIhvcNAQELBQAD
ggIBAA2ukDL2pkt8RHYZYR4nKM1eVO8lvOMIkPkp165oCOGUAFjvLi5+U1KMtlwH6oi6mYtQ
lNeCgN9hCQCTrQ0U5s7B8jeUeLBfnLOic7iPBZM4zY0+sLj7wM+x8uwtLRvM7Kqas6pgghst
O8OEPVeKlh6cdbjTMM1gCIOQ045U8U1mwF10A0Cj7oV+wh93nAbowacYXVKV7cndJZ5t+qnt
ozo00Fl72u1Q8zW/7esUTTHHYPTa8Yec4kjixsU3+wYQ+nVZZjFHKdp2mhzpgq7vmrlR94gj
mmmVYjzlVYA211QC//G5Xc7UI2/YRYRKW2XviQzdFKcgyxilJbQN+QHwotL0AMh0jqEqSI5l
2xPE4iUXfeu+h1sXIFRRk0pTAwvsXcoz7WL9RccvW9xYoIA55vrX/hMUpu09lEpCdNTDd1lz
zY9GvlU47/rokTLql1gEIt44w8y8bckzOmoKaT+gyOpyj4xjhiO9bTyWnpXgSUyqorkqG5w2
gXjtw+hG4iZZRHUe2XWJUc0QhJ1hYMtd+ZciTY6Y5uN/9lu7rs3KSoFrXgvzUeF0K+l+J6fZ
mUlO+KWA2yUPHGNiiskzZ2s8EIPGrd6ozRaOjfAHN3Gf8qv8QfXBi+wAN10J5U6A7/qxXDgG
pRtK4dw4LTzcqx+QGtVKnO7RcGzM7vRX+Bi6hG6H
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFZjCCA06gAwIBAgIQCgFCgAAAAUUjz0Z8AAAAAjANBgkqhkiG9w0BAQsFADBNMQswCQYD
VQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MSowKAYDVQQDEyFJZGVuVHJ1c3QgUHVibGlj
IFNlY3RvciBSb290IENBIDEwHhcNMTQwMTE2MTc1MzMyWhcNMzQwMTE2MTc1MzMyWjBNMQsw
CQYDVQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MSowKAYDVQQDEyFJZGVuVHJ1c3QgUHVi
bGljIFNlY3RvciBSb290IENBIDEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2
IpT8pEiv6EdrCvsnduTyP4o7ekosMSqMjbCpwzFrqHd2hCa2rIFCDQjrVVi7evi8ZX3yoG2L
qEfpYnYeEe4IFNGyRBb06tD6Hi9e28tzQa68ALBKK0CyrOE7S8ItneShm+waOh7wCLPQ5CQ1
B5+ctMlSbdsHyo+1W/CD80/HLaXIrcuVIKQxKFdYWuSNG5qrng0M8gozOSI5Cpcu81N3uURF
/YTLNiCBWS2ab21ISGHKTN9T0a9SvESfqy9rg3LvdYDaBjMbXcjaY8ZNzaxmMc3R3j6HEDbh
uaR672BQssvKplbgN6+rNBM5Jeg5ZuSYeqoSmJxZZoY+rfGwyj4GD3vwEUs3oERte8uojHH0
1bWRNszwFcYr3lEXsZdMUD2xlVl8BX0tIdUAvwFnol57plzy9yLxkA2T26pEUWbMfXYD62qo
KjgZl3YNa4ph+bz27nb9cCvdKTz4Ch5bQhyLVi9VGxyhLrXHFub4qjySjmm2AcG1hp2JDws4
lFTo6tyePSW8Uybt1as5qsVATFSrsrTZ2fjXctscvG29ZV/viDUqZi/u9rNl8DONfJhBaUYP
Qxxp+pu10GFqzcpL2UyQRqsVWaFHVCkugyhfHMKiq3IXAAaOReyL4jM9f9oZRORicsPfIsby
VtTdX5Vy7W1f90gDW/3FKqD2cyOEEBsB5wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYD
VR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU43HgntinQtnbcZFrlJPrw6PRFKMwDQYJKoZIhvcN
AQELBQADggIBAEf63QqwEZE4rU1d9+UOl1QZgkiHVIyqZJnYWv6IAcVYpZmxI1Qjt2odIFfl
AWJBF9MJ23XLblSQdf4an4EKwt3X9wnQW3IV5B4Jaj0z8yGa5hV+rVHVDRDtfULAj+7AmgjV
QdZcDiFpboBhDhXAuM/FSRJSzL46zNQuOAXeNf0fb7iAaJg9TaDKQGXSc3z1i9kKlT/YPyNt
GtEqJBnZhbMX73huqVjRI9PHE+1yJX9dsXNw0H8GlwmEKYBhHfpe/3OsoOOJuBxxFcbeMX8S
3OFtm6/n6J91eEyrRjuazr8FGF1NFTwWmhlQBJqymm9li1JfPFgEKCXAZmExfrngdbkaqIHW
chezxQMxNRF4eKLg6TCMf4DfWN88uieW4oA0beOY02QnrEh+KHdcxiVhJfiFDGX6xDIvpZgF
5PgLZxYWxoK4Mhn5+bl53B/N66+rDt0b20XkeucC4pVd/GnwU2lhlXV5C15V5jgclKlZM57I
cXR5f1GJtshquDDIajjDbp7hNxbqBWJMWxJH7ae0s1hWx0nzfxJoCTFx8G34Tkf71oXuxVhA
GaQdp/lLQzfcaFpPz+vCZHTetBXZ9FRUGi8c15dxVJCO2SCdUyt/q4/i6jC8UDfv8Ue1fXws
BOxonbRJRBD0ckscZOf85muQ3Wl9af0AVqW3rLatt8o+Ae+c
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMCVVMxFjAU
BgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVn
YWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9y
aXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0
aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcyNTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UE
BhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVz
dC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBm
b3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC6
hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/TRU4cctZOMvJyig/3
gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWNcCG0szLni6LVhjkCsbjSR87k
yUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hWwcKUs/Ja5CeanyTXxuzQmyWC48zCxEXF
jJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1U1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+
tVOxMyLlbc9wPBr64ptntoP0jaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1Ud
DwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2f
kBJmqzANBgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/
jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZRkfz6/dj
wUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v1fN2D807iDginWyT
msQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4RnAuknZoh8/CbCzB428Hch0P+
vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmHVHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ
19xOe4pIb4tF9g==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIC+TCCAoCgAwIBAgINAKaLeSkAAAAAUNCR+TAKBggqhkjOPQQDAzCBvzELMAkGA1UEBhMC
VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5u
ZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDEyIEVudHJ1c3QsIEluYy4gLSBmb3Ig
YXV0aG9yaXplZCB1c2Ugb25seTEzMDEGA1UEAxMqRW50cnVzdCBSb290IENlcnRpZmljYXRp
b24gQXV0aG9yaXR5IC0gRUMxMB4XDTEyMTIxODE1MjUzNloXDTM3MTIxODE1NTUzNlowgb8x
CzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQLEx9TZWUgd3d3
LmVudHJ1c3QubmV0L2xlZ2FsLXRlcm1zMTkwNwYDVQQLEzAoYykgMjAxMiBFbnRydXN0LCBJ
bmMuIC0gZm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxMzAxBgNVBAMTKkVudHJ1c3QgUm9vdCBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEVDMTB2MBAGByqGSM49AgEGBSuBBAAiA2IABIQT
ydC6bUF74mzQ61VfZgIaJPRbiWlH47jCffHyAsWfoPZb1YsGGYZPUxBtByQnoaD41UcZYUx9
ypMn6nQM72+WCf5j7HBdNq1nd67JnXxVRDqiY1Ef9eNi1KlHBz7MIKNCMEAwDgYDVR0PAQH/
BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFLdj5xrdjekIplWDpOBqUEFlEUJJ
MAoGCCqGSM49BAMDA2cAMGQCMGF52OVCR98crlOZF7ZvHH3hvxGU0QOIdeSNiaSKd0bebWHv
AvX7td/M/k7//qnmpwIwW5nXhTcGtXsI/esni0qU+eH6p44mCOh8kmhtc9hvJqwhAriZtyZB
WyVgrtBIGu4G
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFjTCCA3WgAwIBAgIEGErM1jANBgkqhkiG9w0BAQsFADBWMQswCQYDVQQGEwJDTjEwMC4G
A1UECgwnQ2hpbmEgRmluYW5jaWFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRUwEwYDVQQD
DAxDRkNBIEVWIFJPT1QwHhcNMTIwODA4MDMwNzAxWhcNMjkxMjMxMDMwNzAxWjBWMQswCQYD
VQQGEwJDTjEwMC4GA1UECgwnQ2hpbmEgRmluYW5jaWFsIENlcnRpZmljYXRpb24gQXV0aG9y
aXR5MRUwEwYDVQQDDAxDRkNBIEVWIFJPT1QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK
AoICAQDXXWvNED8fBVnVBU03sQ7smCuOFR36k0sXgiFxEFLXUWRwFsJVaU2OFW2fvwwbwuCj
Z9YMrM8irq93VCpLTIpTUnrD7i7es3ElweldPe6hL6P3KjzJIx1qqx2hp/Hz7KDVRM8Vz3Iv
HWOX6Jn5/ZOkVIBMUtRSqy5J35DNuF++P96hyk0g1CXohClTt7GIH//62pCfCqktQT+x8Rgp
7hZZLDRJGqgG16iI0gNyejLi6mhNbiyWZXvKWfry4t3uMCz7zEasxGPrb382KzRzEpR/38wm
nvFyXVBlWY9ps4deMm/DGIq1lY+wejfeWkU7xzbh72fROdOXW3NiGUgthxwG+3SYIElz8AXS
G7Ggo7cbcNOIabla1jj0Ytwli3i/+Oh+uFzJlU9fpy25IGvPa931DfSCt/SyZi4QKPaXWnuW
Fo8BGS1sbn85WAZkgwGDg8NNkt0yxoekN+kWzqotaK8KgWU6cMGbrU1tVMoqLUuFG7OA5nBF
DWteNfB/O7ic5ARwiRIlk9oKmSJgamNgTnYGmE69g60dWIolhdLHZR4tjsbftsbhf4oEIRUp
dPA+nJCdDC7xij5aqgwJHsfVPKPtl8MeNPo4+QgO48BdK4PRVmrJtqhUUy54Mmc9gn900Pvh
tgVguXDbjgv5E1hvcWAQUhC5wUEJ73IfZzF4/5YFjQIDAQABo2MwYTAfBgNVHSMEGDAWgBTj
/i39KNALtbq2osS/BqoFjJP7LzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAd
BgNVHQ4EFgQU4/4t/SjQC7W6tqLEvwaqBYyT+y8wDQYJKoZIhvcNAQELBQADggIBACXGumvr
h8vegjmWPfBEp2uEcwPenStPuiB/vHiyz5ewG5zz13ku9Ui20vsXiObTej/tUxPQ4i9qecsA
IyjmHjdXNYmEwnZPNDatZ8POQQaIxffu2Bq41gt/UP+TqhdLjOztUmCypAbqTuv0axn96/Ua
4CUqmtzHQTb3yHQFhDmVOdYLO6Qn+gjYXB74BGBSESgoA//vU2YApUo0FmZ8/Qmkrp5nGm9B
C2sGE5uPhnEFtC+NiWYzKXZUmhH4J/qyP5Hgzg0b8zAarb8iXRvTvyUFTeGSGn+ZnzxEk8rU
QElsgIfXBDrDMlI1Dlb4pd19xIsNER9Tyx6yF7Zod1rg1MvIB671Oi6ON7fQAUtDKXeMOZeP
glr4UeWJoBjnaH9dCi77o0cOPaYjesYBx4/IXr9tgFa+iiS6M+qf4TIRnvHST4D2G0CvOJ4R
UHlzEhLN5mydLIhyPDCBBpEi6lmt2hkuIsKNuYyH4Ga8cyNfIWRjgEj1oDwYPZTISEEdQLpe
/v5WOaHIz16eGWRGENoXkbcFgKyLmZJ956LYBws2J+dIeWCKw9cTXPhyQN9Ky8+ZAAoACxGV
2lZFA4gKn2fQ1XmxqI1AbQ3CekD6819kR5LLU7m7Wc5P/dAVUwHY3+vZ5nbv0CO7O6l5s9UC
Kc2Jo5YPSjXnTkLAdc0Hz+Ys63su
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDtTCCAp2gAwIBAgIQdrEgUnTwhYdGs/gjGvbCwDANBgkqhkiG9w0BAQsFADBtMQswCQYD
VQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEiMCAGA1UECxMZT0lTVEUgRm91bmRhdGlvbiBF
bmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9iYWwgUm9vdCBHQiBDQTAeFw0x
NDEyMDExNTAwMzJaFw0zOTEyMDExNTEwMzFaMG0xCzAJBgNVBAYTAkNIMRAwDgYDVQQKEwdX
SVNlS2V5MSIwIAYDVQQLExlPSVNURSBGb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9P
SVNURSBXSVNlS2V5IEdsb2JhbCBSb290IEdCIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEA2Be3HEokKtaXscriHvt9OO+Y9bI5mE4nuBFde9IllIiCFSZqGzG7qFshISvY
D06fWvGxWuR51jIjK+FTzJlFXHtPrby/h0oLS5daqPZI7H17Dc0hBt+eFf1Biki3IPShehtX
1F1Q/7pn2COZH8g/497/b1t3sWtuuMlk9+HKQUYOKXHQuSP8yYFfTvdv37+ErXNku7dCjmn2
1HYdfp2nuFeKUWdy19SouJVUQHMD9ur06/4oQnc/nSMbsrY9gBQHTC5P99UKFg29ZkM3fiND
ecNAhvVMKdqOmq0NpQSHiB6F4+lT1ZvIiwNjeOvgGUpuuy9rM2RYk61pv48b74JIxwIDAQAB
o1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUNQ/INmNe4qPs
+TtmFc5RUuORmj0wEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQELBQADggEBAEBM+4ey
mYGQfp3FsLAmzYh7KzKNbrghcViXfa43FK8+5/ea4n32cZiZBKpDdHij40lhPnOMTZTg+XHE
thYOU3gf1qKHLwI5gSk8rxWYITD+KJAAjNHhy/peyP34EEY7onhCkRd0VQreUGdNZtGn//3Z
wLWoo4rOZvUPQ82nK1d7Y0Zqqi5S2PTt4W2tKZB4SLrhI6qjiey1q5bAtEuiHZeeevJuQHHf
aPFlTc58Bd9TZaml8LGXBHAVRgOY1NK/VLSgWH1Sb9pWJmLU2NuJMW8c8CLC02IcNc1MaRVU
GpCY3useX8p3x8uOPUNpnJpY0CQ73xtAln41rYHHTnG6iBM=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDcjCCAlqgAwIBAgIUPopdB+xV0jLVt+O2XwHrLdzk1uQwDQYJKoZIhvcNAQELBQAwUTEL
MAkGA1UEBhMCUEwxKDAmBgNVBAoMH0tyYWpvd2EgSXpiYSBSb3psaWN6ZW5pb3dhIFMuQS4x
GDAWBgNVBAMMD1NaQUZJUiBST09UIENBMjAeFw0xNTEwMTkwNzQzMzBaFw0zNTEwMTkwNzQz
MzBaMFExCzAJBgNVBAYTAlBMMSgwJgYDVQQKDB9LcmFqb3dhIEl6YmEgUm96bGljemVuaW93
YSBTLkEuMRgwFgYDVQQDDA9TWkFGSVIgUk9PVCBDQTIwggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQC3vD5QqEvNQLXOYeeWyrSh2gwisPq1e3YAd4wLz32ohswmUeQgPYUM1ljj
5/QqGJ3a0a4m7utT3PSQ1hNKDJA8w/Ta0o4NkjrcsbH/ON7Dui1fgLkCvUqdGw+0w8LBZwPd
3BucPbOw3gAeqDRHu5rr/gsUvTaE2g0gv/pby6kWIK05YO4vdbbnl5z5Pv1+TW9NL++IDWr6
3fE9biCloBK0TXC5ztdyO4mTp4CEHCdJckm1/zuVnsHMyAHs6A6KCpbns6aH5db5BSsNl0Bw
PLqsdVqc1U2dAgrSS5tmS0YHF2Wtn2yIANwiieDhZNRnvDF5YTy7ykHNXGoAyDw4jlivAgMB
AAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBQuFqlK
GLXLzPVvUPMjX/hd56zwyDANBgkqhkiG9w0BAQsFAAOCAQEAtXP4A9xZWx126aMqe5Aosk3A
M0+qmrHUuOQn/6mWmc5G4G18TKI4pAZw8PRBEew/R40/cof5O/2kbytTAOD/OblqBw7rHRz2
onKQy4I9EYKL0rufKq8h5mOGnXkZ7/e7DDWQw4rtTw/1zBLZpD67oPwglV9PJi8RI4NOdQcP
v5vRtB3pEAT+ymCPoky4rc/hkA/NrgrHXXu3UNLUYfrVFdvXn4dRVOul4+vJhaAlIDf7js4M
NIThPIGyd05DpYhfhmehPea0XGG2Ptv+tyjFogeutcrKjSoS75ftwjCkySp6+/NNIxuZMzSg
LvWpCz/UXeHPhJ/iGcJfitYgHuNztw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF0jCCA7qgAwIBAgIQIdbQSk8lD8kyN/yqXhKN6TANBgkqhkiG9w0BAQ0FADCBgDELMAkG
A1UEBhMCUEwxIjAgBgNVBAoTGVVuaXpldG8gVGVjaG5vbG9naWVzIFMuQS4xJzAlBgNVBAsT
HkNlcnR1bSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEkMCIGA1UEAxMbQ2VydHVtIFRydXN0
ZWQgTmV0d29yayBDQSAyMCIYDzIwMTExMDA2MDgzOTU2WhgPMjA0NjEwMDYwODM5NTZaMIGA
MQswCQYDVQQGEwJQTDEiMCAGA1UEChMZVW5pemV0byBUZWNobm9sb2dpZXMgUy5BLjEnMCUG
A1UECxMeQ2VydHVtIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSQwIgYDVQQDExtDZXJ0dW0g
VHJ1c3RlZCBOZXR3b3JrIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC9
+Xj45tWADGSdhhuWZGc/IjoedQF97/tcZ4zJzFxrqZHmuULlIEub2pt7uZld2ZuAS9eEQCsn
0+i6MLs+CRqnSZXvK0AkwpfHp+6bJe+oCgCXhVqqndwpyeI1B+twTUrWwbNWuKFBOJvR+zF/
j+Bf4bE/D44WSWDXBo0Y+aomEKsq09DRZ40bRr5HMNUuctHFY9rnY3lEfktjJImGLjQ/KUxS
iyqnwOKRKIm5wFv5HdnnJ63/mgKXwcZQkpsCLL2puTRZCr+ESv/f/rOf69me4Jgj7KZrdxYq
28ytOxykh9xGc14ZYmhFV+SQgkK7QtbwYeDBoz1mo130GO6IyY0XRSmZMnUCMe4pJshrAua1
YkV/NxVaI2iJ1D7eTiew8EAMvE0Xy02isx7QBlrd9pPPV3WZ9fqGGmd4s7+W/jTcvedSVuWz
5XV710GRBdxdaeOVDUO5/IOWOZV7bIBaTxNyxtd9KXpEulKkKtVBRgkg/iKgtlswjbyJDNXX
cPiHUv3a76xRLgezTv7QCdpw75j6VuZt27VXS9zlLCUVyJ4ueE742pyehizKV/Ma5ciSixqC
lnrDvFASadgOWkaLOusm+iPJtrCBvkIApPjW/jAux9JG9uWOdf3yzLnQh1vMBhBgu4M1t15n
3kfsmUjxpKEV/q2MYo45VU85FrmxY53/twIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G
A1UdDgQWBBS2oVQ5AsOgP46KvPrU+Bym0ToO/TAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcN
AQENBQADggIBAHGlDs7k6b8/ONWJWsQCYftMxRQXLYtPU2sQF/xlhMcQSZDe28cmk4gmb3DW
Al45oPePq5a1pRNcgRRtDoGCERuKTsZPpd1iHkTfCVn0W3cLN+mLIMb4Ck4uWBzrM9DPhmDJ
2vuAL55MYIR4PSFk1vtBHxgP58l1cb29XN40hz5BsA72udY/CROWFC/emh1auVbONTqwX3BN
XuMp8SMoclm2q8KMZiYcdywmdjWLKKdpoPk79SPdhRB0yZADVpHnr7pH1BKXESLjokmUbOe3
lEu6LaTaM4tMpkT/WjzGHWTYtTHkpjx6qFcL2+1hGsvxznN3Y6SHb0xRONbkX8eftoEq5IVI
eVheO/jbAoJnwTnbw3RLPTYe+SmTiGhbqEQZIfCn6IENLOiTNrQ3ssqwGyZ6miUfmpqAnksq
P/ujmv5zMnHCnsZy4YpoJ/HkD7TETKVhk/iXEAcqMCWpuchxuO9ozC1+9eB+D4Kob7a6bIND
d82Kkhehnlt4Fj1F4jNy3eFmypnTycUm/Q1oBEauttmbjL4ZvrHG8hnjXALKLNhvSgfZyTXa
QHXyxKcZb55CEJh15pWLYLztxRLXis7VmFxWlgPF7ncGNf/P5O4/E2Hu29othfDNrp2yGAlF
w5Khchf8R7agCyzxxN5DaAhqXzvwdmP7zAYspsbiDrW5viSP
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIGCzCCA/OgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBpjELMAkGA1UEBhMCR1IxDzANBgNV
BAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNoIElu
c3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkxQDA+BgNVBAMTN0hlbGxlbmljIEFjYWRlbWlj
IGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgUm9vdENBIDIwMTUwHhcNMTUwNzA3MTAxMTIx
WhcNNDAwNjMwMTAxMTIxWjCBpjELMAkGA1UEBhMCR1IxDzANBgNVBAcTBkF0aGVuczFEMEIG
A1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0
LiBBdXRob3JpdHkxQDA+BgNVBAMTN0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJ
bnN0aXR1dGlvbnMgUm9vdENBIDIwMTUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
AQDC+Kk/G4n8PDwEXT2QNrCROnk8ZlrvbTkBSRq0t89/TSNTt5AA4xMqKKYx8ZEA4yjsriFB
zh/a/X0SWwGDD7mwX5nh8hKDgE0GPt+sr+ehiGsxr/CL0BgzuNtFajT0AoAkKAoCFZVedioN
mToUW/bLy1O8E00BiDeUJRtCvCLYjqOWXjrZMts+6PAQZe104S+nfK8nNLspfZu2zwnI5dMK
/IhlZXQK3HMcXM1AsRzUtoSMTFDPaI6oWa7CJ06CojXdFPQf/7J31Ycvqm59JCfnxssm5uX+
Zwdj2EUN3TpZZTlYepKZcj2chF6IIbjV9Cz82XBST3i4vTwri5WY9bPRaM8gFH5MXF/ni+X1
NYEZN9cRCLdmvtNKzoNXADrDgfgXy5I2XdGj2HUb4Ysn6npIQf1FGQatJ5lOwXBH3bWfgVMS
5bGMSF0xQxfjjMZ6Y5ZLKTBOhE5iGV48zpeQpX8B653g+IuJ3SWYPZK2fu/Z8VFRfS0myGlZ
YeCsargqNhEEelC9MoS+L9xy1dcdFkfkR2YgP/SWxa+OAXqlD3pk9Q0Yh9muiNX6hME6wGko
LfINaFGq46V3xqSQDqE3izEjR8EJCOtu93ib14L8hCCZSRm2Ekax+0VVFqmjZaycBw/qa9wf
LgZy7IaIEuQt218FL+TwA9MmM+eAws1CoRc0CwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUcRVnyMjJvXVdctA4GGqd83EkVAswDQYJKoZI
hvcNAQELBQADggIBAHW7bVRLqhBYRjTyYtcWNl0IXtVsyIe9tC5G8jH4fOpCtZMWVdyhDBKg
2mF+D1hYc2Ryx+hFjtyp8iY/xnmMsVMIM4GwVhO+5lFc2JsKT0ucVlMC6U/2DWDqTUJV6Hwb
ISHTGzrMd/K4kPFox/la/vot9L/J9UUbzjgQKjeKeaO04wlshYaT/4mWJ3iBj2fjRnRUjtkN
aeJK9E10A/+yd+2VZ5fkscWrv2oj6NSU4kQoYsRL4vDY4ilrGnB+JGGTe08DMiUNRSQrlrRG
ar9KC/eaj8GsGsVn82800vpzY4zvFrCopEYq+OsS7HK07/grfoxSwIuEVPkvPuNVqNxmsdnh
X9izjFk0WaSrT2y7HxjbdavYy5LNlDhhDgcGH0tGEPEVvo2FXDtKK4F5D7Rpn0lQl033DlZd
wJVqwjbDG2jJ9SrcR5q+ss7FJej6A7na+RZukYT1HCjI/CbM1xyQVqdfbzoEvM14iQuODy+j
qk+iGxI9FghAD/FGTNeqewjBCvVtJ94Cj8rDtSvK6evIIVM4pcw72Hc3MKJP2W/R8kCtQXoX
xdZKNYm3QdV8hn9VTYNKpXMgwDqvkPGaJI7ZjnHKe7iG2rKPmT4dEw0SEe7Uq/DpFXYC5ODf
qiAeW2GFZECpkJcNrVPSWh2HagCXZWK0vm9qp/UsQu0yrbYhnr68
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICwzCCAkqgAwIBAgIBADAKBggqhkjOPQQDAjCBqjELMAkGA1UEBhMCR1IxDzANBgNVBAcT
BkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNoIEluc3Rp
dHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkxRDBCBgNVBAMTO0hlbGxlbmljIEFjYWRlbWljIGFu
ZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgRUNDIFJvb3RDQSAyMDE1MB4XDTE1MDcwNzEwMzcx
MloXDTQwMDYzMDEwMzcxMlowgaoxCzAJBgNVBAYTAkdSMQ8wDQYDVQQHEwZBdGhlbnMxRDBC
BgNVBAoTO0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2Vy
dC4gQXV0aG9yaXR5MUQwQgYDVQQDEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2gg
SW5zdGl0dXRpb25zIEVDQyBSb290Q0EgMjAxNTB2MBAGByqGSM49AgEGBSuBBAAiA2IABJKg
QehLgoRc4vgxEZmGZE4JJS+dQS8KrjVPdJWyUWRrjWvmP3CV8AVER6ZyOFB2lQJajq4onvkt
TpnvLEhvTCUp6NFxW98dwXU3tNf6e3pCnGoKVlp8aQuqgAkkbH7BRqNCMEAwDwYDVR0TAQH/
BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFLQiC4KZJAEOnLvkDv2/+5cgk5kq
MAoGCCqGSM49BAMCA2cAMGQCMGfOFmI4oqxiRaeplSTAGiecMjvAwNW6qef4BENThe5SId6d
9SWDPp5YSy/XZxMOIQIwBeF1Ad5o7SofTUwJCA3sS61kFyjndc5FZXIhF8siQQ6ME5g4mlRt
m8rifOoCWCKR
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAwTzELMAkG
A1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2VhcmNoIEdyb3VwMRUw
EwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4WhcNMzUwNjA0MTEwNDM4WjBP
MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3Jv
dXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAK3oJHP0FDfzm54rVygch77ct984kIxuPOZXoHj3dcKi/vVqbvYATyjb3miGbESTtrFj
/RQSa78f0uoxmyF+0TM8ukj13Xnfs7j/EvEhmkvBioZxaUpmZmyPfjxwv60pIgbz5MDmgK7i
S4+3mX6UA5/TR5d8mUgjU+g4rk8Kb4Mu0UlXjIB0ttov0DiNewNwIRt18jA8+o+u3dpjq+sW
T8KOEUt+zwvo/7V3LvSye0rgTBIlDHCNAymg4VMk7BPZ7hm/ELNKjD+Jo2FR3qyHB5T0Y3Hs
LuJvW5iB4YlcNHlsdu87kGJ55tukmi8mxdAQ4Q7e2RCOFvu396j3x+UCB5iPNgiV5+I3lg02
dZ77DnKxHZu8A/lJBdiB3QW0KtZB6awBdpUKD9jf1b0SHzUvKBds0pjBqAlkd25HN7rOrFle
aJ1/ctaJxQZBKT5ZPt0m9STJEadao0xAH0ahmbWnOlFuhjuefXKnEgV4We0+UXgVCwOPjdAv
BbI+e0ocS3MFEvzG6uBQE3xDk3SzynTnjh8BCNAw1FtxNrQHusEwMFxIt4I7mKZ9YIqioymC
zLq9gwQbooMDQaHWBfEbwrbwqHyGO0aoSCqI3Haadr8faqU9GY/rOPNk3sgrDQoo//fb4hVC
1CLQJ13hef4Y53CIrU7m2Ys6xt0nUW7/vGT1M0NPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIB
BjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5tFnme7bl5AFzgAiIyBpY9umbbjANBgkq
hkiG9w0BAQsFAAOCAgEAVR9YqbyyqFDQDLHYGmkgJykIrGF1XIpu+ILlaS/V9lZLubhzEFnT
IZd+50xx+7LSYK05qAvqFyFWhfFQDlnrzuBZ6brJFe+GnY+EgPbk6ZGQ3BebYhtF8GaV0nxv
wuo77x/Py9auJ/GpsMiu/X1+mvoiBOv/2X/qkSsisRcOj/KKNFtY2PwByVS5uCbMiogziUwt
hDyC3+6WVwW6LLv3xLfHTjuCvjHIInNzktHCgKQ5ORAzI4JMPJ+GslWYHb4phowim57iaztX
OoJwTdwJx4nLCgdNbOhdjsnvzqvHu7UrTkXWStAmzOVyyghqpZXjFaH3pO3JLF+l+/+sKAIu
vtd7u+Nxe5AW0wdeRlN8NwdCjNPElpzVmbUq4JUagEiuTDkHzsxHpFKVK7q4+63SM1N95R1N
bdWhscdCb+ZAJzVcoyi3B43njTOQ5yOf+1CceWxG1bQVs5ZufpsMljq4Ui0/1lvh+wjChP4k
qKOJ2qxq4RgqsahDYVvTH9w7jXbyLeiNdd8XM2w9U/t7y0Ff/9yi0GE44Za4rF2LN9d11TPA
mRGunUHBcnWEvgJBQl9nJEiU0Zsnvgc/ubhPgXRR4Xq37Z0j4r7g1SgEEzwxA57demyPxgcY
xn/eR44/KJ4EBs+lVDR3veyJm+kXQ99b21/+jh5Xos1AnX5iItreGCc=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFgzCCA2ugAwIBAgIPXZONMGc2yAYdGsdUhGkHMA0GCSqGSIb3DQEBCwUAMDsxCzAJBgNV
BAYTAkVTMREwDwYDVQQKDAhGTk1ULVJDTTEZMBcGA1UECwwQQUMgUkFJWiBGTk1ULVJDTTAe
Fw0wODEwMjkxNTU5NTZaFw0zMDAxMDEwMDAwMDBaMDsxCzAJBgNVBAYTAkVTMREwDwYDVQQK
DAhGTk1ULVJDTTEZMBcGA1UECwwQQUMgUkFJWiBGTk1ULVJDTTCCAiIwDQYJKoZIhvcNAQEB
BQADggIPADCCAgoCggIBALpxgHpMhm5/yBNtwMZ9HACXjywMI7sQmkCpGreHiPibVmr75nuO
i5KOpyVdWRHbNi63URcfqQgfBBckWKo3Shjf5TnUV/3XwSyRAZHiItQDwFj8d0fsjz50Q7qs
NI1NOHZnjrDIbzAzWHFctPVrbtQBULgTfmxKo0nRIBnuvMApGGWn3v7v3QqQIecaZ5JCEJhf
TzC8PhxFtBDXaEAUwED653cXeuYLj2VbPNmaUtu1vZ5Gzz3rkQUCwJaydkxNEJY7kvqcfw+Z
374jNUUeAlz+taibmSXaXvMiwzn15Cou08YfxGyqxRxqAQVKL9LFwag0Jl1mpdICIfkYtwb1
TplvqKtMUejPUBjFd8g5CSxJkjKZqLsXF3mwWsXmo8RZZUc1g16p6DULmbvkzSDGm0oGObVo
/CK67lWMK07q87Hj/LaZmtVC+nFNCM+HHmpxffnTtOmlcYF7wk5HlqX2doWjKI/pgG6BU6Vt
X7hI+cL5NqYuSf+4lsKMB7ObiFj86xsc3i1w4peSMKGJ47xVqCfWS+2QrYv6YyVZLag13cqX
M7zlzced0ezvXg5KkAYmY6252TUtB7p2ZSysV4999AeU14ECll2jB0nVetBX+RvnU0Z1qrB5
QstocQjpYL05ac70r8NWQMetUqIJ5G+GR4of6ygnXYMgrwTJbFaai0b1AgMBAAGjgYMwgYAw
DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFPd9xf3E6Jobd2Sn
9R2gzL+HYJptMD4GA1UdIAQ3MDUwMwYEVR0gADArMCkGCCsGAQUFBwIBFh1odHRwOi8vd3d3
LmNlcnQuZm5tdC5lcy9kcGNzLzANBgkqhkiG9w0BAQsFAAOCAgEAB5BK3/MjTvDDnFFlm5wi
oooMhfNzKWtN/gHiqQxjAb8EZ6WdmF/9ARP67Jpi6Yb+tmLSbkyU+8B1RXxlDPiyN8+sD8+N
b/kZ94/sHvJwnvDKuO+3/3Y3dlv2bojzr2IyIpMNOmqOFGYMLVN0V2Ue1bLdI4E7pWYjJ2cJ
j+F3qkPNZVEI7VFY/uY5+ctHhKQV8Xa7pO6kO8Rf77IzlhEYt8llvhjho6Tc+hj507wTmzl6
NLrTQfv6MooqtyuGC2mDOL7Nii4LcK2NJpLuHvUBKwrZ1pebbuCoGRw6IYsMHkCtA+fdZn71
uSANA+iW+YJF1DngoABd15jmfZ5nc8OaKveri6E6FO80vFIOiZiaBECEHX5FaZNXzuvO+FB8
TxxuBEOb+dY7Ixjp6o7RTUaN8Tvkasq6+yO3m/qZASlaWFot4/nUbQ4mrcFuNLwy+AwF+mWj
2zs3gyLp1txyM/1d8iC9djwj2ij3+RvrWWTV3F9yfiD8zYm1kGdNYno/Tq0dwzn+evQoFt9B
9kiABdcPUXmsEKvU7ANm5mqwujGSQkBqvjrTcuFqN1W8rB2Vt2lh8kORdOag0wokRqEIr9ba
RRmW1FMdW4R58MD3R++Lj8UGrp1MYp3/RgT408m2ECVAdf4WqslKYIYvuu8wd+RU4riEmViA
qhOLUTpPSPaLtrM=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsFADA5MQsw
CQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24gUm9vdCBDQSAx
MB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTELMAkGA1UEBhMCVVMxDzANBgNV
BAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALJ4gHHKeNXjca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOg
Q3pOsqTQNroBvo3bSMgHFzZM9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9
tBb6dNqcmzU5L/qwIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAw
hmahRWa6VOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L
93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQmjgSubJrI
qg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0OBBYE
FIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUAA4IBAQCY8jdaQZChGsV2USgg
NiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDIU5PMCCjjmCXPI6T53iHTfIUJrU6adTrC
C2qJeHZERxhlbI1Bjjt/msv0tadQ1wUsN+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V
8viTO96LXFvKWlJbYK8U90vvo/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJc
JmApzyMZFo6IQ6XU5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeX
eGADbkpyrqXRfboQnoZsG4q5WTP468SQvvG5
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFQTCCAymgAwIBAgITBmyf0pY1hp8KD+WGePhbJruKNzANBgkqhkiG9w0BAQwFADA5MQsw
CQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24gUm9vdCBDQSAy
MB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkGA1UEBhMCVVMxDzANBgNV
BAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3QgQ0EgMjCCAiIwDQYJKoZIhvcNAQEB
BQADggIPADCCAgoCggIBAK2Wny2cSkxKgXlRmeyKy2tgURO8TW0G/LAIjd0ZEGrHJgw12MBv
IITplLGbhQPDW9tK6Mj4kHbZW0/jTOgGNk3Mmqw9DJArktQGGWCsN0R5hYGCrVo34A3MnaZM
UnbqQ523BNFQ9lXg1dKmSYXpN+nKfq5clU1Imj+uIFptiJXZNLhSGkOQsL9sBbm2eLfq0OQ6
PBJTYv9K8nu+NQWpEjTj82R0Yiw9AElaKP4yRLuH3WUnAnE72kr3H9rN9yFVkE8P7K6C4Z9r
2UXTu/Bfh+08LDmG2j/e7HJV63mjrdvdfLC6HM783k81ds8P+HgfajZRRidhW+mez/CiVX18
JYpvL7TFz4QuK/0NURBs+18bvBt+xa47mAExkv8LV/SasrlX6avvDXbR8O70zoan4G7ptGmh
32n2M8ZpLpcTnqWHsFcQgTfJU7O7f/aS0ZzQGPSSbtqDT6ZjmUyl+17vIWR6IF9sZIUVyzfp
YgwLKhbcAS4y2j5L9Z469hdAlO+ekQiG+r5jqFoz7Mt0Q5X5bGlSNscpb/xVA1wf+5+9R+vn
SUeVC06JIglJ4PVhHvG/LopyboBZ/1c6+XUyo05f7O0oYtlNc/LMgRdg7c3r3NunysV+Ar3y
VAhU/bQtCSwXVEqY0VThUWcI0u1ufm8/0i2BWSlmy5A5lREedCf+3euvAgMBAAGjQjBAMA8G
A1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBSwDPBMMPQFWAJI/TPl
Uq9LhONmUjANBgkqhkiG9w0BAQwFAAOCAgEAqqiAjw54o+Ci1M3m9Zh6O+oAA7CXDpO8Wqj2
LIxyh6mx/H9z/WNxeKWHWc8w4Q0QshNabYL1auaAn6AFC2jkR2vHat+2/XcycuUY+gn0oJMs
XdKMdYV2ZZAMA3m3MSNjrXiDCYZohMr/+c8mmpJ5581LxedhpxfL86kSk5Nrp+gvU5LEYFiw
zAJRGFuFjWJZY7attN6a+yb3ACfAXVU3dJnJUH/jWS5E4ywl7uxMMne0nxrpS10gxdr9HIcW
xkPo1LsmmkVwXqkLN1PiRnsn/eBG8om3zEK2yygmbtmlyTrIQRNg91CMFa6ybRoVGld45pIq
2WWQgj9sAq+uEjonljYE1x2igGOpm/HlurR8FLBOybEfdF849lHqm/osohHUqS0nGkWxr7JO
cQ3AWEbWaQbLU8uz/mtBzUF+fUwPfHJ5elnNXkoOrJupmHN5fLT0zLm4BwyydFy4x2+IoZCn
9Kr5v2c69BoVYh63n749sSmvZ6ES8lgQGVMDMBu4Gon2nL2XA46jCfMdiyHxtN/kHNGfZQIG
6lzWE7OE76KlXIx3KadowGuuQNKotOrN8I1LOJwZmhsoVLiJkO/KdYE+HvJkJMcYr07/R54H
9jVlpNMKVv/1F2Rs76giJUmTtt8AF9pYfl3uxRuw0dFfIRDH+fO6AgonB8Xx1sfT4PsJYGw=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIBtjCCAVugAwIBAgITBmyf1XSXNmY/Owua2eiedgPySjAKBggqhkjOPQQDAjA5MQswCQYD
VQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24gUm9vdCBDQSAzMB4X
DTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkGA1UEBhMCVVMxDzANBgNVBAoT
BkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3QgQ0EgMzBZMBMGByqGSM49AgEGCCqGSM49
AwEHA0IABCmXp8ZBf8ANm+gBG1bG8lKlui2yEujSLtf6ycXYqm0fc4E7O5hrOXwzpcVOho6A
F2hiRVd9RFgdszflZwjrZt6jQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGG
MB0GA1UdDgQWBBSrttvXBp43rDCGB5Fwx5zEGbF4wDAKBggqhkjOPQQDAgNJADBGAiEA4IWS
oxe3jfkrBqWTrBqYaGFy+uGh0PsceGCmQ5nFuMQCIQCcAu/xlJyzlvnrxir4tiz+OpAUFteM
YyRIHN8wfdVoOw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIB8jCCAXigAwIBAgITBmyf18G7EEwpQ+Vxe3ssyBrBDjAKBggqhkjOPQQDAzA5MQswCQYD
VQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24gUm9vdCBDQSA0MB4X
DTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkGA1UEBhMCVVMxDzANBgNVBAoT
BkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3QgQ0EgNDB2MBAGByqGSM49AgEGBSuBBAAi
A2IABNKrijdPo1MN/sGKe0uoe0ZLY7Bi9i0b2whxIdIA6GO9mif78DluXeo9pcmBqqNbIJhF
XRbb/egQbeOc4OO9X4Ri83BkM6DLJC9wuoihKqB1+IGuYgbEgds5bimwHvouXKNCMEAwDwYD
VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0OBBYEFNPsxzplbszh2naaVvuc
84ZtV+WBMAoGCCqGSM49BAMDA2gAMGUCMDqLIfG9fhGt0O9Yli/W651+kI0rz2ZVwyzjKKlw
CkcO8DdZEv8tmZQoTipPNU0zWgIxAOp1AE47xDqUEpHJWEadIRNyp4iciuRMStuW1KyLa2tJ
ElMzrdfkviT8tQp21KW8EA==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFwzCCA6ugAwIBAgIUCn6m30tEntpqJIWe5rgV0xZ/u7EwDQYJKoZIhvcNAQELBQAwRjEL
MAkGA1UEBhMCTFUxFjAUBgNVBAoMDUx1eFRydXN0IFMuQS4xHzAdBgNVBAMMFkx1eFRydXN0
IEdsb2JhbCBSb290IDIwHhcNMTUwMzA1MTMyMTU3WhcNMzUwMzA1MTMyMTU3WjBGMQswCQYD
VQQGEwJMVTEWMBQGA1UECgwNTHV4VHJ1c3QgUy5BLjEfMB0GA1UEAwwWTHV4VHJ1c3QgR2xv
YmFsIFJvb3QgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANeFl78RmOnwYoNM
PIf5U2o3C/IPPIfOb9wmKb3FibrJgz337spbxm1Jc7TJRqMbNBM/wYlFV/TZsfs2ZUv7COJI
cRHIbjuend+JZTemhfY7RBi2xjcwYkSSl2l9QjAk5A0MiWtj3sXh306pFGxT4GHO9hcvHTy9
5iJMHZP1EMShduxq3sVs35a0VkBCwGKSMKEtFZSg0iAGCW5qbeXrt77U8PEVfIvmTroTzEsn
Xpk8F12PgX8zPU/TPxvsXD/wPEx1bvKm1Z3aLQdjAsZy6ZS8TEmVT4hSyNvoaYL4zDRbIvCG
p4m9SAptZoFtyMhk+wHh9OHe2Z7d21vUKpkmFRseTJIpgp7VkoGSQXAZ96Tlk0u8d2cx3Rz9
MXANF5kM+Qw5GSoXtTBxVdUPrljhPS80m8+f9niFwpN6cj5mj5wWEWCPnolvZ77gR1o7DJpn
i89Gxq44o/KnvObWhWszJHAiS8sIm7vI+AIpHb4gDEa/a4ebsypmQjVGbKq6rfmYe+lQVRQx
v7HaLe2ArWgk+2mr2HETMOZns4dA/Yl+8kPREd8vZS9kzl8UubG/Mb2HeFpZZYiq/FkySIbW
TLkpS5XTdvN3JW1CHDiDTf2jX5t/Lax5Gw5CMZdjpPuKadUiDTSQMC6otOBttpSsvItO13D8
xTiOZCXhTTmQzsmHhFhxAgMBAAGjgagwgaUwDwYDVR0TAQH/BAUwAwEB/zBCBgNVHSAEOzA5
MDcGByuBKwEBAQowLDAqBggrBgEFBQcCARYeaHR0cHM6Ly9yZXBvc2l0b3J5Lmx1eHRydXN0
Lmx1MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBT/GCh2+UgFLKGu8SsbK7JT+Et8szAd
BgNVHQ4EFgQU/xgodvlIBSyhrvErGyuyU/hLfLMwDQYJKoZIhvcNAQELBQADggIBAGoZFO1u
ecEsh9QNcH7X9njJCwROxLHOk3D+sFTAMs2ZMGQXvw/l4jP9BzZAcg4atmpZ1gDlaCDdLnIN
H2pkMSCEfUmmWjfrRcmF9dTHF5kH5ptV5AzoqbTOjFu1EVzPig4N1qx3gf4ynCSecs5U89Bv
olbW7MM3LGVYvlcAGvI1+ut7MV3CwRI9loGIlonBWVx65n9wNOeD4rHh4bhY79SV5GCc8JaX
cozrhAIuZY+kt9J/Z93I055cqqmkoCUUBpvsT34tC38ddfEz2O3OuHVtPlu5mB0xDVbYQw8w
kbIEa91WvpWAVWe+2M2D2RjuLg+GLZKecBPs3lHJQ3gCpU3I+V/EkVhGFndadKpAvAefMLmx
9xIX3eP/JEAdemrRTxgKqpAd60Ae36EeRJIQmvKN4dFLRp7oRUKX6kWZ8+xm1QL68qZKJKre
zrnK+T+Tb/mjuuqlPpmt/f97mfVl7vBZKGfXkJWkE4SphMHozs51k2MavDzq1WQfLSoSOcbD
WjLtR5EWDrw4wVDej8oqkDQc7kGUnF4ZLvhFSZl0kbAEb+MEWrGrKqv+x9CWttrhSmQGbmBN
vUJO/3jaJMobtNeWOWyu8Q6qp31IiyBMz2TWuJdGsE7RKlY6oJO9r4Ak4Ap+58rVyuiFVdw2
KuGUaJPHZnJED4AhMmwlxyOAgwrr
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEYzCCA0ugAwIBAgIBATANBgkqhkiG9w0BAQsFADCB0jELMAkGA1UEBhMCVFIxGDAWBgNV
BAcTD0dlYnplIC0gS29jYWVsaTFCMEAGA1UEChM5VHVya2l5ZSBCaWxpbXNlbCB2ZSBUZWtu
b2xvamlrIEFyYXN0aXJtYSBLdXJ1bXUgLSBUVUJJVEFLMS0wKwYDVQQLEyRLYW11IFNlcnRp
ZmlrYXN5b24gTWVya2V6aSAtIEthbXUgU00xNjA0BgNVBAMTLVRVQklUQUsgS2FtdSBTTSBT
U0wgS29rIFNlcnRpZmlrYXNpIC0gU3VydW0gMTAeFw0xMzExMjUwODI1NTVaFw00MzEwMjUw
ODI1NTVaMIHSMQswCQYDVQQGEwJUUjEYMBYGA1UEBxMPR2ViemUgLSBLb2NhZWxpMUIwQAYD
VQQKEzlUdXJraXllIEJpbGltc2VsIHZlIFRla25vbG9qaWsgQXJhc3Rpcm1hIEt1cnVtdSAt
IFRVQklUQUsxLTArBgNVBAsTJEthbXUgU2VydGlmaWthc3lvbiBNZXJrZXppIC0gS2FtdSBT
TTE2MDQGA1UEAxMtVFVCSVRBSyBLYW11IFNNIFNTTCBLb2sgU2VydGlmaWthc2kgLSBTdXJ1
bSAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr3UwM6q7a9OZLBI3hNmNe5eA
027n/5tQlT6QlVZC1xl8JoSNkvoBHToP4mQ4t4y86Ij5iySrLqP1N+RAjhgleYN1Hzv/bKjF
xlb4tO2KRKOrbEz8HdDc72i9z+SqzvBV96I01INrN3wcwv61A+xXzry0tcXtAA9TNypN9E8M
g/uGz8v+jE69h/mniyFXnHrfA2eJLJ2XYacQuFWQfw4tJzh03+f92k4S400VIgLI4OD8D62K
18lUUMw7D8oWgITQUVbDjlZ/iSIzL+aFCr2lqBs23tPcLG07xxO9WSMs5uWk99gL7eqQQESo
lbuT1dCANLZGeA4fAJNG4e7p+exPFwIDAQABo0IwQDAdBgNVHQ4EFgQUZT/HiobGPN08VFw1
+DrtUgxHV8gwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEL
BQADggEBACo/4fEyjq7hmFxLXs9rHmoJ0iKpEsdeV31zVmSAhHqT5Am5EM2fKifhAHe+SMg1
qIGf5LgsyX8OsNJLN13qudULXjS99HMpw+0mFZx+CFOKWI3QSyjfwbPfIPP54+M638yclNhO
T8NrF7f3cuitZjO1JVOr4PhMqZ398g26rrnZqsZr+ZO7rqu4lzwDGrpDxpa5RXI4s6ehlj2R
e37AIVNMh+3yC1SVUZPVIqUNivGTDj5UDrDYyU7c8jEyVupk+eq1nRZmQnLzf9OxMUP8pI4X
8W0jq5Rm+K37DwhuJi1/FwcJsoz7UMCflo3Ptv0AnVoUmr8CRPXBwp8iXqIPoeM=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFiDCCA3CgAwIBAgIIfQmX/vBH6nowDQYJKoZIhvcNAQELBQAwYjELMAkGA1UEBhMCQ04x
MjAwBgNVBAoMKUdVQU5HIERPTkcgQ0VSVElGSUNBVEUgQVVUSE9SSVRZIENPLixMVEQuMR8w
HQYDVQQDDBZHRENBIFRydXN0QVVUSCBSNSBST09UMB4XDTE0MTEyNjA1MTMxNVoXDTQwMTIz
MTE1NTk1OVowYjELMAkGA1UEBhMCQ04xMjAwBgNVBAoMKUdVQU5HIERPTkcgQ0VSVElGSUNB
VEUgQVVUSE9SSVRZIENPLixMVEQuMR8wHQYDVQQDDBZHRENBIFRydXN0QVVUSCBSNSBST09U
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA2aMW8Mh0dHeb7zMNOwZ+Vfy1YI92
hhJCfVZmPoiC7XJjDp6L3TQsAlFRwxn9WVSEyfFrs0yw6ehGXTjGoqcuEVe6ghWinI9tsJlK
CvLriXBjTnnEt1u9ol2x8kECK62pOqPseQrsXzrj/e+APK00mxqriCZ7VqKChh/rNYmDf1+u
KU49tm7srsHwJ5uu4/Ts765/94Y9cnrrpftZTqfrlYwiOXnhLQiPzLyRuEH3FMEjqcOtmkVE
s7LXLM3GKeJQEK5cy4KOFxg2fZfmiJqwTTQJ9Cy5WmYqsBebnh52nUpmMUHfP/vFBu8btn4a
Rjb3ZGM74zkYI+dndRTVdVeSN72+ahsmUPI2JgaQxXABZG12ZuGR224HwGGALrIuL4xwp9E7
PLOR5G62xDtw8mySlwnNR30YwPO7ng/Wi64HtloPzgsMR6flPri9fcebNaBhlzpBdRfMK5Z3
KpIhHtmVdiBnaM8Nvd/WHwlqmuLMc3GkL30SgLdTMEZeS1SZD2fJpcjyIMGC7J0R38IC+xo7
0e0gmu9lZJIQDSri3nDxGGeCjGHeuLzRL5z7D9Ar7Rt2ueQ5Vfj4oR24qoAATILnsn8JuLww
oC8N9VKejveSswoAHQBUlwbgsQfZxw9cZX08bVlX5O2ljelAU58VS6Bx9hoh49pwBiFYFIeF
d3mqgnkCAwEAAaNCMEAwHQYDVR0OBBYEFOLJQJ9NzuiaoXzPDj9lxSmIahlRMA8GA1UdEwEB
/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQDRSVfgp8xoWLoB
DysZzY2wYUWsEe1jUGn4H3++Fo/9nesLqjJHdtJnJO29fDMylyrHBYZmDRd9FBUb1Ov9H5r2
XpdptxolpAqzkT9fNqyL7FeoPueBihhXOYV0GkLH6VsTX4/5COmSdI31R9KrO9b7eGZONn35
6ZLpBN79SWP8bfsUcZNnL0dKt7n/HipzcEYwv1ryL3ml4Y0M2fmyYzeMN2WFcGpcWwlyua1j
PLHd+PwyvzeG5LuOmCd+uh8W4XAR8gPfJWIyJyYYMoSf/wA6E7qaTfRPuBRwIrHKK5DOKcFw
9C+df/KQHtZa37dG/OaG+svgIHZ6uqbL9XzeYqWxi+7egmaKTjowHz+Ay60nugxe19CxVsp3
cbK1daFQqUBDF8Io2c9Si1vIY9RCPqAzekYu9wogRlR+ak8x8YF+QnQ4ZXMn7sZ8uI7XpTrX
mKGcjBBV09tL7ECQ8s1uV9JiDnxXk7Gnbc2dg7sq5+W2O3FYrf3RRbxake5TFW/TRQl1brqQ
XR4EzzffHqhmsYzmIGrv/EhOdJhCrylvLmrH+33RZjEizIYAfmaDDEL0vTSSwxrqT8p+ck0L
cIymSLumoRT2+1hEmRSuqguTaaApJUqlyyvdimYHFngVV3Eb7PVHhPOeMTd61X8kreS8/f3M
boPoDKi3QWwH3b08hpcv0g==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEMDCCAxigAwIBAgIJANqb7HHzA7AZMA0GCSqGSIb3DQEBCwUAMIGkMQswCQYDVQQGEwJQ
QTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEgQ2l0eTEkMCIGA1UECgwbVHJ1
c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYDVQQLDB5UcnVzdENvciBDZXJ0aWZpY2F0
ZSBBdXRob3JpdHkxHzAdBgNVBAMMFlRydXN0Q29yIFJvb3RDZXJ0IENBLTEwHhcNMTYwMjA0
MTIzMjE2WhcNMjkxMjMxMTcyMzE2WjCBpDELMAkGA1UEBhMCUEExDzANBgNVBAgMBlBhbmFt
YTEUMBIGA1UEBwwLUGFuYW1hIENpdHkxJDAiBgNVBAoMG1RydXN0Q29yIFN5c3RlbXMgUy4g
ZGUgUi5MLjEnMCUGA1UECwweVHJ1c3RDb3IgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MR8wHQYD
VQQDDBZUcnVzdENvciBSb290Q2VydCBDQS0xMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEAv463leLCJhJrMxnHQFgKq1mqjQCj/IDHUHuO1CAmujIS2CNUSSUQIpidRtLByZ5O
Gy4sDjjzGiVoHKZaBeYei0i/mJZ0PmnK6bV4pQa81QBeCQryJ3pS/C3Vseq0iWEk8xoT26nP
Uu0MJLq5nux+AHT6k61sKZKuUbS701e/s/OojZz0JEsq1pme9J7+wH5COucLlVPat2gOkEz7
cD+PSiyU8ybdY2mplNgQTsVHCJCZGxdNuWxu72CVEY4hgLW9oHPY0LJ3xEXqWib7ZnZ2+AYf
YW0PVcWDtxBWcgYHpfOxGgMFZA6dWorWhnAbJN7+KIor0Gqw/Hqi3LJ5DotlDwIDAQABo2Mw
YTAdBgNVHQ4EFgQU7mtJPHo/DeOxCbeKyKsZn3MzUOcwHwYDVR0jBBgwFoAU7mtJPHo/DeOx
CbeKyKsZn3MzUOcwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcN
AQELBQADggEBACUY1JGPE+6PHh0RU9otRCkZoB5rMZ5NDp6tPVxBb5UrJKF5mDo4Nvu7Zp5I
/5CQ7z3UuJu0h3U/IJvOcs+hVcFNZKIZBqEHMwwLKeXx6quj7LUKdJDHfXLy11yfke+Ri7fc
7Waiz45mO7yfOgLgJ90WmMCV1Aqk5IGadZQ1nJBfiDcGrVmVCrDRZ9MZyonnMlo2HD6CqFqT
vsbQZJG2z9m2GM/bftJlo6bEjhcxwft+dtvTheNYsnd6djtsL1Ac59v2Z3kf9YKVmgenFK+P
3CghZwnS1k1aHBkcjndcw5QkPTJrS37UeJSDvjdNzl/HHk484IkzlQsPpTLWPFp5LBk=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIGLzCCBBegAwIBAgIIJaHfyjPLWQIwDQYJKoZIhvcNAQELBQAwgaQxCzAJBgNVBAYTAlBB
MQ8wDQYDVQQIDAZQYW5hbWExFDASBgNVBAcMC1BhbmFtYSBDaXR5MSQwIgYDVQQKDBtUcnVz
dENvciBTeXN0ZW1zIFMuIGRlIFIuTC4xJzAlBgNVBAsMHlRydXN0Q29yIENlcnRpZmljYXRl
IEF1dGhvcml0eTEfMB0GA1UEAwwWVHJ1c3RDb3IgUm9vdENlcnQgQ0EtMjAeFw0xNjAyMDQx
MjMyMjNaFw0zNDEyMzExNzI2MzlaMIGkMQswCQYDVQQGEwJQQTEPMA0GA1UECAwGUGFuYW1h
MRQwEgYDVQQHDAtQYW5hbWEgQ2l0eTEkMCIGA1UECgwbVHJ1c3RDb3IgU3lzdGVtcyBTLiBk
ZSBSLkwuMScwJQYDVQQLDB5UcnVzdENvciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHzAdBgNV
BAMMFlRydXN0Q29yIFJvb3RDZXJ0IENBLTIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK
AoICAQCnIG7CKqJiJJWQdsg4foDSq8GbZQWU9MEKENUCrO2fk8eHyLAnK0IMPQo+QVqedd2N
yuCb7GgypGmSaIwLgQ5WoD4a3SwlFIIvl9NkRvRUqdw6VC0xK5mC8tkq1+9xALgxpL56JAfD
QiDyitSSBBtlVkxs1Pu2YVpHI7TYabS3OtB0PAx1oYxOdqHp2yqlO/rOsP9+aij9JxzIsekp
8VduZLTQwRVtDr4uDkbIXvRR/u8OYzo7cbrPb1nKDOObXUm4TOJXsZiKQlecdu/vvdFoqNL0
Cbt3Nb4lggjEFixEIFapRBF37120Hapeaz6LMvYHL1cEksr1/p3C6eizjkxLAjHZ5DxIgif3
GIJ2SDpxsROhOdUuxTTCHWKF3wP+TfSvPd9cW436cOGlfifHhi5qjxLGhF5DUVCcGZt45vz2
7Ud+ez1m7xMTiF88oWP7+ayHNZ/zgp6kPwqcMWmLmaSISo5uZk3vFsQPeSghYA2FFn3XVDjx
klb9tTNMg9zXEJ9L/cb4Qr26fHMC4P99zVvh1Kxhe1fVSntb1IVYJ12/+CtgrKAmrhQhJ8Z3
mjOAPF5GP/fDsaOGM8boXg25NSyqRsGFAnWAoOsk+xWq5Gd/bnc/9ASKL3x74xdh8N0JqSDI
vgmk0H5Ew7IwSjiqqewYmgeCK9u4nBit2uBGF6zPXQIDAQABo2MwYTAdBgNVHQ4EFgQU2f4h
QG6UnrybPZx9mCAZ5YwwYrIwHwYDVR0jBBgwFoAU2f4hQG6UnrybPZx9mCAZ5YwwYrIwDwYD
VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBAJ5Fngw7
tu/hOsh80QA9z+LqBrWyOrsGS2h60COXdKcs8AjYeVrXWoSK2BKaG9l9XE1wxaX5q+WjiYnd
Afrs3fnpkpfbsEZC89NiqpX+MWcUaViQCqoL7jcjx1BRtPV+nuN79+TMQjItSQzL/0kMmx40
/W5ulop5A7Zv2wnL/V9lFDfhOPXzYRZY5LVtDQsEGz9QLX+zx3oaFoBg+Iof6Rsqxvm6ARpp
v9JYx1RXCI/hOWB3S6xZhBqI8d3LT3jX5+EzLfzuQfogsL7L9ziUwOHQhQ+77Sxzq+3+knYa
ZH9bDTMJBzN7Bj8RpFxwPIXAz+OQqIN3+tvmxYxoZxBnpVIt8MSZj3+/0WvitUfW2dCFmU2U
mw9Lje4AWkcdEQOsQRivh7dvDDqPys/cA8GiCcjl/YBeyGBCARsaU1q7N6a3vLqE6R5sGtRk
2tRD/pOLS/IseRYQ1JMLiI+h2IYURpFHmygk71dSTlxCnKr3Sewn6EAes6aJInKc9Q0ztFij
MDvd1GpUk74aTfOTlPf8hAs/hCBcNANExdqtvArBAs8e5ZTZ845b2EzwnexhF7sUMlQMAimT
HpKG9n/v55IFDlndmQguLvqcAFLTxWYp5KeXRKQOKIETNcX2b2TmQcTVL8w0RSXPQQCWPUou
wpaYT05KnJe32x+SMsj/D1Fu1uwJ
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIEIDCCAwigAwIBAgIJAISCLF8cYtBAMA0GCSqGSIb3DQEBCwUAMIGcMQswCQYDVQQGEwJQ
QTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEgQ2l0eTEkMCIGA1UECgwbVHJ1
c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYDVQQLDB5UcnVzdENvciBDZXJ0aWZpY2F0
ZSBBdXRob3JpdHkxFzAVBgNVBAMMDlRydXN0Q29yIEVDQS0xMB4XDTE2MDIwNDEyMzIzM1oX
DTI5MTIzMTE3MjgwN1owgZwxCzAJBgNVBAYTAlBBMQ8wDQYDVQQIDAZQYW5hbWExFDASBgNV
BAcMC1BhbmFtYSBDaXR5MSQwIgYDVQQKDBtUcnVzdENvciBTeXN0ZW1zIFMuIGRlIFIuTC4x
JzAlBgNVBAsMHlRydXN0Q29yIENlcnRpZmljYXRlIEF1dGhvcml0eTEXMBUGA1UEAwwOVHJ1
c3RDb3IgRUNBLTEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDPj+ARtZ+odnbb
3w9U73NjKYKtR8aja+3+XzP4Q1HpGjORMRegdMTUpwHmspI+ap3tDvl0mEDTPwOABoJA6LHi
p1GnHYMma6ve+heRK9jGrB6xnhkB1Zem6g23xFUfJ3zSCNV2HykVh0A53ThFEXXQmqc04L/N
yFIduUd+Dbi7xgz2c1cWWn5DkR9VOsZtRASqnKmcp0yJF4OuowReUoCLHhIlERnXDH19MURB
6tuvsBzvgdAsxZohmz3tQjtQJvLsznFhBmIhVE5/wZ0+fyCMgMsq2JdiyIMzkX2woloPV+g7
zPIlstR8L+xNxqE6FXrntl019fZISjZFZtS6mFjBAgMBAAGjYzBhMB0GA1UdDgQWBBREnkj1
zG1I1KBLf/5ZJC+Dl5mahjAfBgNVHSMEGDAWgBREnkj1zG1I1KBLf/5ZJC+Dl5mahjAPBgNV
HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAQEABT41XBVw
m8nHc2FvcivUwo/yQ10CzsSUuZQRg2dd4mdsdXa/uwyqNsatR5Nj3B5+1t4u/ukZMjgDfxT2
AHMsWbEhBuH7rBiVDKP/mZb3Kyeb1STMHd3BOuCYRLDE5D53sXOpZCz2HAF8P11FhcCF5yWP
ldwX8zyfGm6wyuMdKulMY/okYWLW2n62HGz1Ah3UKt1VkOsqEUc8Ll50soIipX1TH0XsJ5F9
5yIW6MBoNtjG8U+ARDL54dHRHareqKucBK+tIA5kmE2la8BIWJZpTdwHjFGTot+fDz2LYLSC
jaoITmJF4PkL0uDgPFveXHEnJcLmA4GLEFPjx1WitJ/X5g==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF3TCCA8WgAwIBAgIIeyyb0xaAMpkwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UEBhMCVVMx
DjAMBgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQKDA9TU0wgQ29ycG9y
YXRpb24xMTAvBgNVBAMMKFNTTC5jb20gUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBS
U0EwHhcNMTYwMjEyMTczOTM5WhcNNDEwMjEyMTczOTM5WjB8MQswCQYDVQQGEwJVUzEOMAwG
A1UECAwFVGV4YXMxEDAOBgNVBAcMB0hvdXN0b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlv
bjExMC8GA1UEAwwoU1NMLmNvbSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IFJTQTCC
AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAPkP3aMrfcvQKv7sZ4Wm5y4bunfh4/Wv
pOz6Sl2RxFdHaxh3a3by/ZPkPQ/CFp4LZsNWlJ4Xg4XOVu/yFv0AYvUiCVToZRdOQbngT0aX
qhvIuG5iXmmxX9sqAn78bMrzQdjt0Oj8P2FI7bADFB0QDksZ4LtO7IZl/zbzXmcCC52GVWH9
ejjt/uIZALdvoVBidXQ8oPrIJZK0bnoix/geoeOy3ZExqysdBP+lSgQ36YWkMyv94tZVNHwZ
pEpox7Ko07fKoZOI68GXvIz5HdkihCR0xwQ9aqkpk8zruFvh/l8lqjRYyMEjVJ0bmBHDOJx+
PYZspQ9AhnwC9FwCTyjLrnGfDzrIM/4RJTXq/LrFYD3ZfBjVsqnTdXgDciLKOsMf7yzlLqn6
niy2UUb9rwPW6mBo6oUWNmuF6R7As93EJNyAKoFBbZQ+yODJgUEAnl6/f8UImKIYLEJAs/lv
OCdLToD0PYFH4Ih86hzOtXVcUS4cK38acijnALXRdMbX5J+tB5O2UzU1/Dfkw/ZdFr4hc96S
CvigY2q8lpJqPvi8ZVWb3vUNiSYE/CUapiVpy8JtynziWV+XrOvvLsi81xtZPCvM8hnIk2sn
YxnP/Okm+Mpxm3+T/jRnhE6Z6/yzeAkzcLpmpnbtG3PrGqUNxCITIJRWCk4sbE6x/c+cCbqi
M+2HAgMBAAGjYzBhMB0GA1UdDgQWBBTdBAkHovV6fVJTEpKV7jiAJQ2mWTAPBgNVHRMBAf8E
BTADAQH/MB8GA1UdIwQYMBaAFN0ECQei9Xp9UlMSkpXuOIAlDaZZMA4GA1UdDwEB/wQEAwIB
hjANBgkqhkiG9w0BAQsFAAOCAgEAIBgRlCn7Jp0cHh5wYfGVcpNxJK1ok1iOMq8bs3AD/CUr
dIWQPXhq9LmLpZc7tRiRux6n+UBbkflVma8eEdBcHadm47GUBwwyOabqG7B52B2ccETjit3E
+ZUfijhDPwGFpUenPUayvOUiaPd7nNgsPgohyC0zrL/FgZkxdMF1ccW+sfAjRfSda/wZY52j
vATGGAslu1OJD7OAUN5F7kR/q5R4ZJjT9ijdh9hwZXT7DrkT66cPYakylszeu+1jTBi7qUD3
oFRuIIhxdRjqerQ0cuAjJ3dctpDqhiVAq+8zD8ufgr6iIPv2tS0a5sKFsXQP+8hlAqRSAUfd
SSLBv9jra6x+3uxjMxW3IwiPxg+NQVrdjsW5j+VFP3jbutIbQLH+cU0/4IGiul607BXgk90I
H37hVZkLId6Tngr75qNJvTYw/ud3sqB1l7UtgYgXZSD32pAAn8lSzDLKNXz1PQ/YK9f1JmzJ
BjSWFupwWRoyeXkLtoh/D1JIPb9s2KJELtFOt3JY04kTlf5Eq/jXixtunLwsoFvVagCvXzfh
1foQC5ichucmj87w7G6KVwuA406ywKBjYZC6VWg3dGq2ktufoYYitmUnDuy2n0Jg5GfCtdpB
C8TTi2EbvPofkSvXRAdeuims2cXp71NIWuuA8ShYIc2wBlX7Jz9TkHCpBB5XJ7k=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICjTCCAhSgAwIBAgIIdebfy8FoW6gwCgYIKoZIzj0EAwIwfDELMAkGA1UEBhMCVVMxDjAM
BgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQKDA9TU0wgQ29ycG9yYXRp
b24xMTAvBgNVBAMMKFNTTC5jb20gUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBFQ0Mw
HhcNMTYwMjEyMTgxNDAzWhcNNDEwMjEyMTgxNDAzWjB8MQswCQYDVQQGEwJVUzEOMAwGA1UE
CAwFVGV4YXMxEDAOBgNVBAcMB0hvdXN0b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlvbjEx
MC8GA1UEAwwoU1NMLmNvbSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IEVDQzB2MBAG
ByqGSM49AgEGBSuBBAAiA2IABEVuqVDEpiM2nl8ojRfLliJkP9x6jh3MCLOicSS6jkm5BBtH
llirLZXI7Z4INcgn64mMU1jrYor+8FsPazFSY0E7ic3s7LaNGdM0B9y7xgZ/wkWV7Mt/qCPg
CemB+vNH06NjMGEwHQYDVR0OBBYEFILRhXMw5zUE044CkvvlpNHEIejNMA8GA1UdEwEB/wQF
MAMBAf8wHwYDVR0jBBgwFoAUgtGFczDnNQTTjgKS++Wk0cQh6M0wDgYDVR0PAQH/BAQDAgGG
MAoGCCqGSM49BAMCA2cAMGQCMG/n61kRpGDPYbCWe+0F+S8Tkdzt5fxQaxFGRrMcIQBiu77D
5+jNB5n5DQtdcj7EqgIwH7y6C+IwJPt8bYBVCpk+gA0z5Wajs6O7pdWLjwkspl1+4vAHCGht
0nxpbl/f5Wpl
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIF6zCCA9OgAwIBAgIIVrYpzTS8ePYwDQYJKoZIhvcNAQELBQAwgYIxCzAJBgNVBAYTAlVT
MQ4wDAYDVQQIDAVUZXhhczEQMA4GA1UEBwwHSG91c3RvbjEYMBYGA1UECgwPU1NMIENvcnBv
cmF0aW9uMTcwNQYDVQQDDC5TU0wuY29tIEVWIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkgUlNBIFIyMB4XDTE3MDUzMTE4MTQzN1oXDTQyMDUzMDE4MTQzN1owgYIxCzAJBgNVBAYT
AlVTMQ4wDAYDVQQIDAVUZXhhczEQMA4GA1UEBwwHSG91c3RvbjEYMBYGA1UECgwPU1NMIENv
cnBvcmF0aW9uMTcwNQYDVQQDDC5TU0wuY29tIEVWIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkgUlNBIFIyMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAjzZlQOHWTcDX
tOlG2mvqM0fNTPl9fb69LT3w23jhhqXZuglXaO1XPqDQCEGD5yhBJB/jchXQARr7XnAjssuf
OePPxU7Gkm0mxnu7s9onnQqG6YE3Bf7wcXHswxzpY6IXFJ3vG2fThVUCAtZJycxa4bH3bzKf
ydQ7iEGonL3Lq9ttewkfokxykNorCPzPPFTOZw+oz12WGQvE43LrrdF9HSfvkusQv1vrO6/P
gN3B0pYEW3p+pKk8OHakYo6gOV7qd89dAFmPZiw+B6KjBSYRaZfqhbcPlgtLyEDhULouisv3
D5oi53+aNxPN8k0TayHRwMwi8qFG9kRpnMphNQcAb9ZhCBHqurj26bNg5U257J8UZslXWNvN
h2n4ioYSA0e/ZhN2rHd9NCSFg83XqpyQGp8hLH94t2S42Oim9HizVcuE0jLEeK6jj2HdzghT
reyI/BXkmg3mnxp3zkyPuBQVPWKchjgGAGYS5Fl2WlPAApiiECtoRHuOec4zSnaqW4EWG7WK
2NAAe15itAnWhmMOpgWVSbooi4iTsjQc2KRVbrcc0N6ZVTsj9CLg+SlmJuwgUHfbSguPvuUC
YHBBXtSuUDkiFCbLsjtzdFVHB3mBOagwE0TlBIqulhMlQg+5U8Sb/M3kHN48+qvWBkofZ6aY
MBzdLNvcGJVXZsb/XItW9XcCAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAW
gBT5YLvU49U09rj1BoAlp3PbRmmonjAdBgNVHQ4EFgQU+WC71OPVNPa49QaAJadz20ZpqJ4w
DgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBWs47LCp1Jjr+kxJG7ZhcFUZh1
++VQLHqe8RT6q9OKPv+RKY9ji9i0qVQBDb6Thi/5Sm3HXvVX+cpVHBK+Rw82xd9qt9t1wkcl
f7nxY/hoLVUE0fKNsKTPvDxeH3jnpaAgcLAExbf3cqfeIg29MyVGjGSSJuM+LmOW2puMPfgY
CdcDzH2GguDKBAdRUNf/ktUM79qGn5nX67evaOI5JpS6aLe/g9Pqemc9YmeuJeVy6OLk7K4S
9ksrPJ/psEDzOFSz/bdoyNrGj1E8svuR3Bznm53htw1yj+KkxKl4+esUrMZDBcJlOSgYAsOC
sp0FvmXtll9ldDz7CTUue5wT/RsPXcdtgTpWD8w74a8CLyKsRspGPKAcTNZEtF4uXBVmCeEm
Kf7GUmG6sXP/wwyc5WxqlD8UykAWlYTzWamsX0xhk23RO8yilQwipmdnRC652dKKQbNmC1r7
fSOl8hqw/96bg5Qu0T/fkreRrwU7ZcegbLHNYhLDkBvjJc40vG93drEQw/cFGsDWr3RiSBd3
kmmQYRzelYB0VI8YHMPzA9C/pEN1hlMYegouCRw2n5H9gooiS9EOUCXdywMMF8mDAAhONU2K
i+3wApRmLER/y5UnlhetCTCstnEXbosX9hwJ1C07mKVx01QT2WDz9UtmT/rx7iASjbSsV7FF
Y6GsdqnC+w==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIClDCCAhqgAwIBAgIILCmcWxbtBZUwCgYIKoZIzj0EAwIwfzELMAkGA1UEBhMCVVMxDjAM
BgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQKDA9TU0wgQ29ycG9yYXRp
b24xNDAyBgNVBAMMK1NTTC5jb20gRVYgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBF
Q0MwHhcNMTYwMjEyMTgxNTIzWhcNNDEwMjEyMTgxNTIzWjB/MQswCQYDVQQGEwJVUzEOMAwG
A1UECAwFVGV4YXMxEDAOBgNVBAcMB0hvdXN0b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlv
bjE0MDIGA1UEAwwrU1NMLmNvbSBFViBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IEVD
QzB2MBAGByqGSM49AgEGBSuBBAAiA2IABKoSR5CYG/vvw0AHgyBO8TCCogbR8pKGYfL2IWjK
AMTH6kMAVIbc/R/fALhBYlzccBYy3h+Z1MzFB8gIH2EWB1E9fVwHU+M1OIzfzZ/ZLg1Kthku
WnBaBu2+8KGwytAJKaNjMGEwHQYDVR0OBBYEFFvKXuXe0oGqzagtZFG22XKbl+ZPMA8GA1Ud
EwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUW8pe5d7SgarNqC1kUbbZcpuX5k8wDgYDVR0PAQH/
BAQDAgGGMAoGCCqGSM49BAMCA2gAMGUCMQCK5kCJN+vp1RPZytRrJPOwPYdGWBrssd9v+1a6
cGvHOMzosYxPD/fxZ3YOg9AeUY8CMD32IygmTMZgh5Mmm7I1HrrW9zzRHM76JTymGoEVW/MS
D2zuZYrJh6j5B+BimoxcSg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFgzCCA2ugAwIBAgIORea7A4Mzw4VlSOb/RVEwDQYJKoZIhvcNAQEMBQAwTDEgMB4GA1UE
CxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjYxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNV
BAMTCkdsb2JhbFNpZ24wHhcNMTQxMjEwMDAwMDAwWhcNMzQxMjEwMDAwMDAwWjBMMSAwHgYD
VQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSNjETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEG
A1UEAxMKR2xvYmFsU2lnbjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJUH6HPK
ZvnsFMp7PPcNCPG0RQssgrRIxutbPK6DuEGSMxSkb3/pKszGsIhrxbaJ0cay/xTOURQh7Erd
G1rG1ofuTToVBu1kZguSgMpE3nOUTvOniX9PeGMIyBJQbUJmL025eShNUhqKGoC3GYEOfsSK
vGRMIRxDaNc9PIrFsmbVkJq3MQbFvuJtMgamHvm566qjuL++gmNQ0PAYid/kD3n16qIfKtJw
LnvnvJO7bVPiSHyMEAc4/2ayd2F+4OqMPKq0pPbzlUoSB239jLKJz9CgYXfIWHSw1CM69106
yqLbnQneXUQtkPGBzVeS+n68UARjNN9rkxi+azayOeSsJDa38O+2HBNXk7besvjihbdzorg1
qkXy4J02oW9UivFyVm4uiMVRQkQVlO6jxTiWm05OWgtH8wY2SXcwvHE35absIQh1/OZhFj93
1dmRl4QKbNQCTXTAFO39OfuD8l4UoQSwC+n+7o/hbguyCLNhZglqsQY6ZZZZwPA1/cnaKI0a
EYdwgQqomnUdnjqGBQCe24DWJfncBZ4nWUx2OVvq+aWh2IMP0f/fMBH5hc8zSPXKbWQULHpY
T9NLCEnFlWQaYw55PfWzjMpYrZxCRXluDocZXFSxZba/jJvcE+kNb7gu3GduyYsRtYQUigAZ
cIN5kZeR1BonvzceMgfYFGM8KEyvAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
Af8EBTADAQH/MB0GA1UdDgQWBBSubAWjkxPioufi1xzWx/B/yGdToDAfBgNVHSMEGDAWgBSu
bAWjkxPioufi1xzWx/B/yGdToDANBgkqhkiG9w0BAQwFAAOCAgEAgyXt6NH9lVLNnsAEoJFp
5lzQhN7craJP6Ed41mWYqVuoPId8AorRbrcWc+ZfwFSY1XS+wc3iEZGtIxg93eFyRJa0lV7A
e46ZeBZDE1ZXs6KzO7V33EByrKPrmzU+sQghoefEQzd5Mr6155wsTLxDKZmOMNOsIeDjHfrY
BzN2VAAiKrlNIC5waNrlU/yDXNOd8v9EDERm8tLjvUYAGm0CuiVdjaExUd1URhxN25mW7xoc
BFymFe944Hn+Xds+qkxV/ZoVqW/hpvvfcDDpw+5CRu3CkwWJ+n1jez/QcYF8AOiYrg54NMMl
+68KnyBr3TsTjxKM4kEaSHpzoHdpx7Zcf4LIHv5YGygrqGytXm3ABdJ7t+uA/iU3/gKbaKxC
XcPu9czc8FB10jZpnOZ7BN9uBmm23goJSFmH63sUYHpkqmlD75HHTOwY3WzvUy2MmeFe8nI+
z1TIvWfspA9MRf/TuTAjB0yPEL+GltmZWrSZVxykzLsViVO6LAUP5MSeGbEYNNVMnbrt9x+v
JJUEeKgDu+6B5dpffItKoZB0JaezPkvILFa9x8jvOOJckvB595yEunQtYQEgfn7R8k8HWV+L
LUNS60YMlOH1Zkd5d9VUWx+tJDfLRVpOoERIyNiwmcUVhAn21klJwGW45hpxbqCo8YLoRT5s
1gLXCmeDBVrJpBA=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICaTCCAe+gAwIBAgIQISpWDK7aDKtARb8roi066jAKBggqhkjOPQQDAzBtMQswCQYDVQQG
EwJDSDEQMA4GA1UEChMHV0lTZUtleTEiMCAGA1UECxMZT0lTVEUgRm91bmRhdGlvbiBFbmRv
cnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9iYWwgUm9vdCBHQyBDQTAeFw0xNzA1
MDkwOTQ4MzRaFw00MjA1MDkwOTU4MzNaMG0xCzAJBgNVBAYTAkNIMRAwDgYDVQQKEwdXSVNl
S2V5MSIwIAYDVQQLExlPSVNURSBGb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNU
RSBXSVNlS2V5IEdsb2JhbCBSb290IEdDIENBMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAETOlQ
wMYPchi82PG6s4nieUqjFqdrVCTbUf/q9Akkwwsin8tqJ4KBDdLArzHkdIJuyiXZjHWd8dvQ
mqJLIX4Wp2OQ0jnUsYd4XxiWD1AbNTcPasbc2RNNpI6QN+a9WzGRo1QwUjAOBgNVHQ8BAf8E
BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUSIcUrOPDnpBgOtfKie7TrYy0UGYw
EAYJKwYBBAGCNxUBBAMCAQAwCgYIKoZIzj0EAwMDaAAwZQIwJsdpW9zV57LnyAyMjMPdeYwb
Y9XJUpROTYJKcx6ygISpJcBMWm1JKWB4E+J+SOtkAjEA2zQgMgj/mkkCtojeFK9dbJlxjRo/
i9fgojaGHAeCOnZT/cKi7e97sIBPWA9LUzm9
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFWjCCA0KgAwIBAgIQbkepxUtHDA3sM9CJuRz04TANBgkqhkiG9w0BAQwFADBHMQswCQYD
VQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxML
R1RTIFJvb3QgUjEwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAwWjBHMQswCQYDVQQG
EwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RT
IFJvb3QgUjEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2EQKLHuOhd5s73L+U
PreVp0A8of2C+X0yBoJx9vaMf/vo27xqLpeXo4xL+Sv2sfnOhB2x+cWX3u+58qPpvBKJXqeq
Uqv4IyfLpLGcY9vXmX7wCl7raKb0xlpHDU0QM+NOsROjyBhsS+z8CZDfnWQpJSMHobTSPS5g
4M/SCYe7zUjwTcLCeoiKu7rPWRnWr4+wB7CeMfGCwcDfLqZtbBkOtdh+JhpFAz2weaSUKK0P
fyblqAj+lug8aJRT7oM6iCsVlgmy4HqMLnXWnOunVmSPlk9orj2XwoSPwLxAwAtcvfaHszVs
rBhQf4TgTM2S0yDpM7xSma8ytSmzJSq0SPly4cpk9+aCEI3oncKKiPo4Zor8Y/kB+Xj9e1x3
+naH+uzfsQ55lVe0vSbv1gHR6xYKu44LtcXFilWr06zqkUspzBmkMiVOKvFlRNACzqrOSbTq
n3yDsEB750Orp2yjj32JgfpMpf/VjsPOS+C12LOORc92wO1AK/1TD7Cn1TsNsYqiA94xrcx3
6m97PtbfkSIS5r762DL8EGMUUXLeXdYWk70paDPvOmbsB4om3xPXV2V4J95eSRQAogB/mqgh
tqmxlbCluQ0WEdrHbEg8QOB+DVrNVjzRlwW5y0vtOUucxD/SVRNuJLDWcfr0wbrM7Rv1/oFB
2ACYPTrIrnqYNxgFlQIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zAdBgNVHQ4EFgQU5K8rJnEaK0gnhS9SZizv8IkTcT4wDQYJKoZIhvcNAQEMBQADggIBADiW
Cu49tJYeX++dnAsznyvgyv3SjgofQXSlfKqE1OXyHuY3UjKcC9FhHb8owbZEKTV1d5iyfNm9
dKyKaOOpMQkpAWBz40d8U6iQSifvS9efk+eCNs6aaAyC58/UEBZvXw6ZXPYfcX3v73svfuo2
1pdwCxXu11xWajOl40k4DLh9+42FpLFZXvRq4d2h9mREruZRgyFmxhE+885H7pwoHyXa/6xm
ld01D1zvICxi/ZG6qcz8WpyTgYMpl0p8WnK0OdC3d8t5/Wk6kjftbjhlRn7pYL15iJdfOBL0
7q9bgsiG1eGZbYwE8na6SfZu6W0eX6DvJ4J2QPim01hcDyxC2kLGe4g0x8HYRZvBPsVhHdlj
UEn2NIVq4BjFbkerQUIpm/ZgDdIx02OYI5NaAIFItO/Nis3Jz5nu2Z6qNuFoS3FJFDYoOj0d
zpqPJeaAcWErtXvM+SUWgeExX6GjfhaknBZqlxi9dnKlC54dNuYvoS++cJEPqOba+MSSQGwl
fnuzCdyyF62ARPBopY+Udf90WuioAnwMCeKpSwughQtiue+hMZL77/ZRBIls6Kl0obsXs7X9
SQ98POyDGCBDTtWTurQ0sR8WNh8M5mQ5Fkzc4P4dyKliPUDqysU0ArSuiYgzNdwsE3PYJ/HQ
cu51OyLemGhmW/HGY0dVHLqlCFF1pkgl
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFWjCCA0KgAwIBAgIQbkepxlqz5yDFMJo/aFLybzANBgkqhkiG9w0BAQwFADBHMQswCQYD
VQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxML
R1RTIFJvb3QgUjIwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAwWjBHMQswCQYDVQQG
EwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RT
IFJvb3QgUjIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDO3v2m++zsFDQ8BwZa
bFn3GTXd98GdVarTzTukk3LvCvptnfbwhYBboUhSnznFt+4orO/LdmgUud+tAWyZH8QiHZ/+
cnfgLFuv5AS/T3KgGjSY6Dlo7JUle3ah5mm5hRm9iYz+re026nO8/4Piy33B0s5Ks40FnotJ
k9/BW9BuXvAuMC6C/Pq8tBcKSOWIm8Wba96wyrQD8Nr0kLhlZPdcTK3ofmZemde4wj7I0BOd
re7kRXuJVfeKH2JShBKzwkCX44ofR5GmdFrS+LFjKBC4swm4VndAoiaYecb+3yXuPuWgf9Rh
D1FLPD+M2uFwdNjCaKH5wQzpoeJ/u1U8dgbuak7MkogwTZq9TwtImoS1mKPV+3PBV2HdKFZ1
E66HjucMUQkQdYhMvI35ezzUIkgfKtzra7tEscszcTJGr61K8YzodDqs5xoic4DSMPclQsci
OzsSrZYuxsN2B6ogtzVJV+mSSeh2FnIxZyuWfoqjx5RWIr9qS34BIbIjMt/kmkRtWVtd9QCg
HJvGeJeNkP+byKq0rxFROV7Z+2et1VsRnTKaG73VululycslaVNVJ1zgyjbLiGH7HrfQy+4W
+9OmTN6SpdTi3/UGVN4unUu0kzCqgc7dGtxRcw1PcOnlthYhGXmy5okLdWTK1au8CcEYof/U
VKGFPP0UJAOyh9OktwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zAdBgNVHQ4EFgQUu//KjiOfT5nK2+JopqUVJxce2Q4wDQYJKoZIhvcNAQEMBQADggIBALZp
8KZ3/p7uC4Gt4cCpx/k1HUCCq+YEtN/L9x0Pg/B+E02NjO7jMyLDOfxA325BS0JTvhaI8dI4
XsRomRyYUpOM52jtG2pzegVATX9lO9ZY8c6DR2Dj/5epnGB3GFW1fgiTz9D2PGcDFWEJ+YF5
9exTpJ/JjwGLc8R3dtyDovUMSRqodt6Sm2T4syzFJ9MHwAiApJiS4wGWAqoC7o87xdFtCjMw
c3i5T1QWvwsHoaRc5svJXISPD+AVdyx+Jn7axEvbpxZ3B7DNdehyQtaVhJ2Gg/LkkM0JR9SL
A3DaWsYDQvTtN6LwG1BUSw7YhN4ZKJmBR64JGz9I0cNv4rBgF/XuIwKl2gBbbZCr7qLpGzvp
x0QnRY5rn/WkhLx3+WuXrD5RRaIRpsyF7gpo8j5QOHokYh4XIDdtak23CZvJ/KRY9bb7nE4Y
u5UC56GtmwfuNmsk0jmGwZODUNKBRqhfYlcsu2xkiAhu7xNUX90txGdj08+JN7+dIPT7eoOb
oB6BAFDC5AwiWVIQ7UNWhwD4FFKnHYuTjKJNRn8nxnGbJN7k2oaLDX5rIMHAnuFl2GqjpuiF
izoHCBy69Y9Vmhh1fuXsgWbRIXOhNUQLgD1bnF5vKheW0YMjiGZt5obicDIvUiLnyOd/xCxg
XS/Dr55FBcOEArf9LAhST4Ldo/DUhgkC
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICDDCCAZGgAwIBAgIQbkepx2ypcyRAiQ8DVd2NHTAKBggqhkjOPQQDAzBHMQswCQYDVQQG
EwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RT
IFJvb3QgUjMwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAwWjBHMQswCQYDVQQGEwJV
UzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJv
b3QgUjMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQfTzOHMymKoYTey8chWEGJ6ladK0uFxh1M
J7x/JlFyb+Kf1qPKzEUURout736GjOyxfi//qXGdGIRFBEFVbivqJn+7kAHjSxm65FSWRQmx
1WyRRK2EE46ajA2ADDL24CejQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/
MB0GA1UdDgQWBBTB8Sa6oC2uhYHP0/EqEr24Cmf9vDAKBggqhkjOPQQDAwNpADBmAjEAgFuk
fCPAlaUs3L6JbyO5o91lAFJekazInXJ0glMLfalAvWhgxeG4VDvBNhcl2MG9AjEAnjWSdIUl
UfUk7GRSJFClH9voy8l27OyCbvWFGFPouOOaKaqW04MjyaR7YbPMAuhd
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICCjCCAZGgAwIBAgIQbkepyIuUtui7OyrYorLBmTAKBggqhkjOPQQDAzBHMQswCQYDVQQG
EwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RT
IFJvb3QgUjQwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAwWjBHMQswCQYDVQQGEwJV
UzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJv
b3QgUjQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATzdHOnaItgrkO4NcWBMHtLSZ37wWHO5t5G
vWvVYRg1rkDdc/eJkTBa6zzuhXyiQHY7qca4R9gq55KRanPpsXI5nymfopjTX15YhmUPoYRl
BtHci8nHc8iMai/lxKvRHYqjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/
MB0GA1UdDgQWBBSATNbrdP9JNqPV2Py1PsVq8JQdjDAKBggqhkjOPQQDAwNnADBkAjBqUFJ0
CMRw3J5QdCHojXohw0+WbhXRIjVhLfoIN+4Zba3bssx9BzT1YBkstTTZbyACMANxsbqjYAuG
7ZoIapVon+Kz4ZNkfF6Tpt95LY2F45TPI11xzPKwTdb+mciUqXWi4w==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFRjCCAy6gAwIBAgIQXd+x2lqj7V2+WmUgZQOQ7zANBgkqhkiG9w0BAQsFADA9MQswCQYD
VQQGEwJDTjERMA8GA1UECgwIVW5pVHJ1c3QxGzAZBgNVBAMMElVDQSBHbG9iYWwgRzIgUm9v
dDAeFw0xNjAzMTEwMDAwMDBaFw00MDEyMzEwMDAwMDBaMD0xCzAJBgNVBAYTAkNOMREwDwYD
VQQKDAhVbmlUcnVzdDEbMBkGA1UEAwwSVUNBIEdsb2JhbCBHMiBSb290MIICIjANBgkqhkiG
9w0BAQEFAAOCAg8AMIICCgKCAgEAxeYrb3zvJgUno4Ek2m/LAfmZmqkywiKHYUGRO8vDaBsG
xUypK8FnFyIdK+35KYmToni9kmugow2ifsqTs6bRjDXVdfkX9s9FxeV67HeToI8jrg4aA3++
1NDtLnurRiNb/yzmVHqUwCoV8MmNsHo7JOHXaOIxPAYzRrZUEaalLyJUKlgNAQLx+hVRZ2zA
+te2G3/RVogvGjqNO7uCEeBHANBSh6v7hn4PJGtAnTRnvI3HLYZveT6OqTwXS3+wmeOwcWDc
C/Vkw85DvG1xudLeJ1uK6NjGruFZfc8oLTW4lVYa8bJYS7cSN8h8s+1LgOGN+jIjtm+3SJUI
sUROhYw6AlQgL9+/V087OpAh18EmNVQg7Mc/R+zvWr9LesGtOxdQXGLYD0tK3Cv6brxzks3s
x1DoQZbXqX5t2Okdj4q1uViSukqSKwxW/YDrCPBeKW4bHAyvj5OJrdu9o54hyokZ7N+1wxrr
Fv54NkzWbtA+FxyQF2smuvt6L78RHBgOLXMDj6DlNaBa4kx1HXHhOThTeEDMg5PXCp6dW4+K
5OXgSORIskfNTip1KnvyIvbJvgmRlld6iIis7nCs+dwp4wwcOxJORNanTrAmyPPZGpeRaOrv
jUYG0lZFWJo8DA+DuAUlwznPO6Q0ibd5Ei9Hxeepl2n8pndntd978XplFeRhVmUCAwEAAaNC
MEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFIHEjMz15DD/
pQwIX4wVZyF0Ad/fMA0GCSqGSIb3DQEBCwUAA4ICAQATZSL1jiutROTL/7lo5sOASD0Ee/oj
L3rtNtqyzm325p7lX1iPyzcyochltq44PTUbPrw7tgTQvPlJ9Zv3hcU2tsu8+Mg51eRfB70V
VJd0ysrtT7q6ZHafgbiERUlMjW+i67HM0cOU2kTC5uLqGOiiHycFutfl1qnN3e92mI0ADs0b
+gO3joBYDic/UvuUospeZcnWhNq5NXHzJsBPd+aBJ9J3O5oUb3n09tDh05S60FdRvScFDcH9
yBIw7m+NESsIndTUv4BFFJqIRNow6rSn4+7vW4LVPtateJLbXDzz2K36uGt/xDYotgIVilQs
nLAXc47QN6MUPJiVAAwpBVueSUmxX8fjy88nZY41F7dXyDDZQVu5FLbowg+UMaeUmMxq67Xh
J/UQqAHojhJi6IjMtX9Gl8CbEGY4GjZGXyJoPd/JxhMnq1MGrKI8hgZlb7F+sSlEmqO6SWko
aY/X5V+tBIZkbxqgDMUIYs6Ao9Dz7GjevjPHF1t/gMRMTLGmhIrDO7gJzRSBuhjjVFc2/tsv
fEehOjPI+Vg7RE+xygKJBJYoaMVLuCaJu9YzL1DV/pqJuhgyklTGW+Cd+V7lDSKb9triyCGy
YiGqhkCyLmTTX8jjfhFnRR8F/uOi77Oos/N9j/gMHyIfLXC0uAE0djAA5SN4p1bXUB+K+wb1
whnw0A==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFWjCCA0KgAwIBAgIQT9Irj/VkyDOeTzRYZiNwYDANBgkqhkiG9w0BAQsFADBHMQswCQYD
VQQGEwJDTjERMA8GA1UECgwIVW5pVHJ1c3QxJTAjBgNVBAMMHFVDQSBFeHRlbmRlZCBWYWxp
ZGF0aW9uIFJvb3QwHhcNMTUwMzEzMDAwMDAwWhcNMzgxMjMxMDAwMDAwWjBHMQswCQYDVQQG
EwJDTjERMA8GA1UECgwIVW5pVHJ1c3QxJTAjBgNVBAMMHFVDQSBFeHRlbmRlZCBWYWxpZGF0
aW9uIFJvb3QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCpCQcoEwKwmeBkqh5D
FnpzsZGgdT6o+uM4AHrsiWogD4vFsJszA1qGxliG1cGFu0/GnEBNyr7uaZa4rYEwmnySBesF
K5pI0Lh2PpbIILvSsPGP2KxFRv+qZ2C0d35qHzwaUnoEPQc8hQ2E0B92CvdqFN9y4zR8V05W
AT558aopO2z6+I9tTcg1367r3CTueUWnhbYFiN6IXSV8l2RnCdm/WhUFhvMJHuxYMjMR83dk
sHYf5BA1FxvyDrFspCqjc/wJHx4yGVMR59mzLC52LqGj3n5qiAno8geK+LLNEOfic0CTuwjR
P+H8C5SzJe98ptfRr5//lpr1kXuYC3fUfugH0mK1lTnj8/FtDw5lhIpjVMWAtuCeS31HJqcB
CF3RiJ7XwzJE+oJKCmhUfzhTA8ykADNkUVkLo4KRel7sFsLzKuZi2irbWWIQJUoqgQtHB0MG
cIfS+pMRKXpITeuUx3BNr2fVUbGAIAEBtHoIppB/TuDvB0GHr2qlXov7z1CymlSvw4m6WC31
MJixNnI5fkkE/SmnTHnkBVfblLkWU41Gsx2VYVdWf6/wFlthWG82UBEL2KwrlRYaDh8IzTY0
ZRBiZtWAXxQgXy0MoHgKaNYs1+lvK9JKBZP8nm9rZ/+I8U6laUpSNwXqxhaN0sSZ0YIrO7o1
dfdRUVjzyAfd5LQDfwIDAQABo0IwQDAdBgNVHQ4EFgQU2XQ65DA9DfcS3H5aBZ8eNJr34RQw
DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBADaN
l8xCFWQpN5smLNb7rhVpLGsaGvdftvkHTFnq88nIua7Mui563MD1sC3AO6+fcAURap8lTwEp
cOPlDOHqWnzcSbvBHiqB9RZLcpHIojG5qtr8nR/zXUACE/xOHAbKsxSQVBcZEhrxH9cMaVr2
cXj0lH2RC47skFSOvG+hTKv8dGT9cZr4QQehzZHkPJrgmzI5c6sq1WnIeJEmMX3ixzDx/BR4
dxIOE/TdFpS/S2d7cFOFyrC78zhNLJA5wA3CXWvp4uXViI3WLL+rG761KIcSF3Ru/H38j9CH
JrAb+7lsq+KePRXBOy5nAliRn+/4Qh8st2j1da3Ptfb/EX3C8CSlrdP6oDyp+l3cpaDvRKS+
1ujl5BOWF3sGPjLtx7dCvHaj2GU4Kzg1USEODm8uNBNA4StnDG1KQTAYI1oyVZnJF+A83vbs
ea0rWBmirSwiGpWOvpaQXUJXxPkUAzUrHC1RVwinOt4/5Mi0A3PCwSaAuwtCH60NryZy2sy+
s6ODWA2CxR9GUeOcGMyNm43sSet1UNWMKFnKdDTajAshqx7qG+XH/RU+wBeq+yNuJkbL+vmx
cmtpzyKEC2IPrNkZAJSidjzULZrtBJ4tBmIQN1IchXIbJ+XMxjHsN+xjWZsLHXbMfjKaiJUI
NlK73nZfdklJrX+9ZSCyycErdhh2n1ax
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIGWzCCBEOgAwIBAgIRAMrpG4nxVQMNo+ZBbcTjpuEwDQYJKoZIhvcNAQELBQAwWjELMAkG
A1UEBhMCRlIxEjAQBgNVBAoMCURoaW15b3RpczEcMBoGA1UECwwTMDAwMiA0ODE0NjMwODEw
MDAzNjEZMBcGA1UEAwwQQ2VydGlnbmEgUm9vdCBDQTAeFw0xMzEwMDEwODMyMjdaFw0zMzEw
MDEwODMyMjdaMFoxCzAJBgNVBAYTAkZSMRIwEAYDVQQKDAlEaGlteW90aXMxHDAaBgNVBAsM
EzAwMDIgNDgxNDYzMDgxMDAwMzYxGTAXBgNVBAMMEENlcnRpZ25hIFJvb3QgQ0EwggIiMA0G
CSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDNGDllGlmx6mQWDoyUJJV8g9PFOSbcDO8WV43X
2KyjQn+Cyu3NW9sOty3tRQgXstmzy9YXUnIo245Onoq2C/mehJpNdt4iKVzSs9IGPjA5qXSj
klYcoW9MCiBtnyN6tMbaLOQdLNyzKNAT8kxOAkmhVECe5uUFoC2EyP+YbNDrihqECB63aCPu
I9Vwzm1RaRDuoXrC0SIxwoKF0vJVdlB8JXrJhFwLrN1CTivngqIkicuQstDuI7pmTLtipPlT
WmR7fJj6o0ieD5Wupxj0auwuA0Wv8HT4Ks16XdG+RCYyKfHx9WzMfgIhC59vpD++nVPiz32p
LHxYGpfhPTc3GGYo0kDFUYqMwy3OU4gkWGQwFsWq4NYKpkDfePb1BHxpE4S80dGnBs8B92jA
qFe7OmGtBIyT46388NtEbVncSVmurJqZNjBBe3YzIoejwpKGbvlw7q6Hh5UbxHq9MfPU0uWZ
/75I7HX1eBYdpnDBfzwboZL7z8g81sWTCo/1VTp2lc5ZmIoJlXcymoO6LAQ6l73UL77XbJui
yn1tJslV1c/DeVIICZkHJC1kJWumIWmbat10TWuXekG9qxf5kBdIjzb5LdXF2+6qhUVB+s06
RbFo5jZMm5BX7CO5hwjCxAnxl4YqKE3idMDaxIzb3+KhF1nOJFl0Mdp//TBt2dzhauH8XwID
AQABo4IBGjCCARYwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE
FBiHVuBud+4kNTxOc5of1uHieX4rMB8GA1UdIwQYMBaAFBiHVuBud+4kNTxOc5of1uHieX4r
MEQGA1UdIAQ9MDswOQYEVR0gADAxMC8GCCsGAQUFBwIBFiNodHRwczovL3d3d3cuY2VydGln
bmEuZnIvYXV0b3JpdGVzLzBtBgNVHR8EZjBkMC+gLaArhilodHRwOi8vY3JsLmNlcnRpZ25h
LmZyL2NlcnRpZ25hcm9vdGNhLmNybDAxoC+gLYYraHR0cDovL2NybC5kaGlteW90aXMuY29t
L2NlcnRpZ25hcm9vdGNhLmNybDANBgkqhkiG9w0BAQsFAAOCAgEAlLieT/DjlQgi581oQfcc
VdV8AOItOoldaDgvUSILSo3L6btdPrtcPbEo/uRTVRPPoZAbAh1fZkYJMyjhDSSXcNMQH+pk
V5a7XdrnxIxPTGRGHVyH41neQtGbqH6mid2PHMkwgu07nM3A6RngatgCdTer9zQoKJHyBApP
NeNgJgH60BGM+RFq7q89w1DTj18zeTyGqHNFkIwgtnJzFyO+B2XleJINugHA64wcZr+shncB
lA2c5uk5jR+mUYyZDDl34bSb+hxnV29qao6pK0xXeXpXIs/NX2NGjVxZOob4Mkdio2cNGJHc
+6Zr9UhhcyNZjgKnvETq9Emd8VRY+WCv2hikLyhF3HqgiIZd8zvn/yk1gPxkQ5Tm4xxvvq0O
KmOZK8l+hfZx6AYDlf7ej0gcWtSS6Cvu5zHbugRqh5jnxV/vfaci9wHYTfmJ0A6aBVmknpjZ
byvKcL5kwlWj9Omvw5Ip3IgWJJk8jSaYtlu3zM63Nwf9JtmYhST/WSMDmu2dnajkXjjO11IN
b9I/bbEFa0nOipFGc/T2L/Coc3cOZayhjWZSaX5LaAzHHjcng6WMxwLkFM1JAbBzs/3GkDpv
0mztO+7skb6iQ12LAEpmJURw3kAP+HwV96LOPNdeE4yBFxgX0b3xdxA61GU5wSesVywlVP+i
2k+KYTlerj1KjL0=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDlDCCAnygAwIBAgIKMfXkYgxsWO3W2DANBgkqhkiG9w0BAQsFADBnMQswCQYDVQQGEwJJ
TjETMBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBUZWNobm9sb2dpZXMg
TGltaXRlZDEcMBoGA1UEAxMTZW1TaWduIFJvb3QgQ0EgLSBHMTAeFw0xODAyMTgxODMwMDBa
Fw00MzAyMTgxODMwMDBaMGcxCzAJBgNVBAYTAklOMRMwEQYDVQQLEwplbVNpZ24gUEtJMSUw
IwYDVQQKExxlTXVkaHJhIFRlY2hub2xvZ2llcyBMaW1pdGVkMRwwGgYDVQQDExNlbVNpZ24g
Um9vdCBDQSAtIEcxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAk0u76WaK7p1b
1TST0Bsew+eeuGQzf2N4aLTNLnF115sgxk0pvLZoYIr3IZpWNVrzdr3YzZr/k1ZLpVkGoZM0
Kd0WNHVO8oG0x5ZOrRkVUkr+PHB1cM2vK6sVmjM8qrOLqs1D/fXqcP/tzxE7lM5OMhbTI0Aq
d7OvPAEsbO2ZLIvZTmmYsvePQbAyeGHWDV/D+qJAkh1cF+ZwPjXnorfCYuKrpDhMtTk1b+oD
afo6VGiFbdbyL0NVHpENDtjVaqSW0RM8LHhQ6DqS0hdW5TUaQBw+jSztOd9C4INBdN+jzcKG
YEho42kLVACL5HZpIQ15TjQIXhTCzLG3rdd8cIrHhQIDAQABo0IwQDAdBgNVHQ4EFgQU++8N
hp6w492pufEhF38+/PB3KxowDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJ
KoZIhvcNAQELBQADggEBAFn/8oz1h31xPaOfG1vR2vjTnGs2vZupYeveFix0PZ7mddrXuqe8
QhfnPZHr5X3dPpzxz5KsbEjMwiI/aTvFthUvozXGaCocV685743QNcMYDHsAVhzNixl03r4P
EuDQqqE/AjSxcM6dGNYIAwlG7mDgfrbESQRRfXBgvKqy/3lyeqYdPV8q+Mri/Tm3R7nrft8E
I6/6nAYH6ftjk4BAtcZsCjEozgyfz7MjNYBBjWzEN3uBL4ChQEKF6dk4jeihU80Bv2noWgby
RQuQ+q7hv53yrlc8pa6yVvSLZUDp/TGBLPQ5Cdjua6e0ph0VpZj3AYHYhX3zUVxxiN66zB+A
fko=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICTjCCAdOgAwIBAgIKPPYHqWhwDtqLhDAKBggqhkjOPQQDAzBrMQswCQYDVQQGEwJJTjET
MBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBUZWNobm9sb2dpZXMgTGlt
aXRlZDEgMB4GA1UEAxMXZW1TaWduIEVDQyBSb290IENBIC0gRzMwHhcNMTgwMjE4MTgzMDAw
WhcNNDMwMjE4MTgzMDAwWjBrMQswCQYDVQQGEwJJTjETMBEGA1UECxMKZW1TaWduIFBLSTEl
MCMGA1UEChMcZU11ZGhyYSBUZWNobm9sb2dpZXMgTGltaXRlZDEgMB4GA1UEAxMXZW1TaWdu
IEVDQyBSb290IENBIC0gRzMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQjpQy4LRL1KPOxst3i
AhKAnjlfSU2fySU0WXTsuwYc58Byr+iuL+FBVIcUqEqy6HyC5ltqtdyzdc6LBtCGI79G1Y4P
PwT01xySfvalY8L1X44uT6EYGQIrMgqCZH0Wk9GjQjBAMB0GA1UdDgQWBBR8XQKEE9TMipuB
zhccLikenEhjQjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjOPQQD
AwNpADBmAjEAvvNhzwIQHWSVB7gYboiFBS+DCBeQyh+KTOgNG3qxrdWBCUfvO6wIBHxcmbHt
RwfSAjEAnbpV/KlK6O3t5nYBQnvI+GDZjVGLVTv7jHvrZQnD+JbNR6iC8hZVdyR+EhCVBCyj
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDczCCAlugAwIBAgILAK7PALrEzzL4Q7IwDQYJKoZIhvcNAQELBQAwVjELMAkGA1UEBhMC
VVMxEzARBgNVBAsTCmVtU2lnbiBQS0kxFDASBgNVBAoTC2VNdWRocmEgSW5jMRwwGgYDVQQD
ExNlbVNpZ24gUm9vdCBDQSAtIEMxMB4XDTE4MDIxODE4MzAwMFoXDTQzMDIxODE4MzAwMFow
VjELMAkGA1UEBhMCVVMxEzARBgNVBAsTCmVtU2lnbiBQS0kxFDASBgNVBAoTC2VNdWRocmEg
SW5jMRwwGgYDVQQDExNlbVNpZ24gUm9vdCBDQSAtIEMxMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAz+upufGZBczYKCFK83M0UYRWEPWgTywS4/oTmifQz/l5GnRfHXk5/Fv4
cI7gklL35CX5VIPZHdPIWoU/Xse2B+4+wM6ar6xWQio5JXDWv7V7Nq2s9nPczdcdioOl+yuQ
FTdrHCZH3DspVpNqs8FqOp099cGXOFgFixwR4+S0uF2FHYP+eF8LRWgYSKVGczQ7/g/IdrvH
GPMF0Ybzhe3nudkyrVWIzqa2kbBPrH4VI5b2P/AgNBbeCsbEBEV5f6f9vtKppa+cxSMq9zwh
bL2vj07FOrLzNBL834AaSaTUqZX3noleoomslMuoaJuvimUnzYnu3Yy1aylwQ6BpC+S5DwID
AQABo0IwQDAdBgNVHQ4EFgQU/qHgcB4qAzlSWkK+XJGFehiqTbUwDgYDVR0PAQH/BAQDAgEG
MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAMJKVvoVIXsoounlHfv4LcQ5
lkFMOycsxGwYFYDGrK9HWS8mC+M2sO87/kOXSTKZEhVb3xEp/6tT+LvBeA+snFOvV71ojD1p
M/CjoCNjO2RnIkSt1XHLVip4kqNPEjE2NuLe/gDEo2APJ62gsIq1NnpSob0n9CAnYuhNlCQT
5AoE6TyrLshDCUrGYQTlSTR+08TI9Q/Aqum6VF7zYytPT1DU/rl7mYw9wC68AivTxEDkigcx
HpvOJpkT+xHqmiIMERnHXhuBUDDIlhJu58tBf5E7oke3VIAb3ADMmpDqw8NQBmIMMMAVSKeo
WXzhriKi4gp6D/piq1JM4fHfyr6DDUI=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIICKzCCAbGgAwIBAgIKe3G2gla4EnycqDAKBggqhkjOPQQDAzBaMQswCQYDVQQGEwJVUzET
MBEGA1UECxMKZW1TaWduIFBLSTEUMBIGA1UEChMLZU11ZGhyYSBJbmMxIDAeBgNVBAMTF2Vt
U2lnbiBFQ0MgUm9vdCBDQSAtIEMzMB4XDTE4MDIxODE4MzAwMFoXDTQzMDIxODE4MzAwMFow
WjELMAkGA1UEBhMCVVMxEzARBgNVBAsTCmVtU2lnbiBQS0kxFDASBgNVBAoTC2VNdWRocmEg
SW5jMSAwHgYDVQQDExdlbVNpZ24gRUNDIFJvb3QgQ0EgLSBDMzB2MBAGByqGSM49AgEGBSuB
BAAiA2IABP2lYa57JhAd6bciMK4G9IGzsUJxlTm801Ljr6/58pc1kjZGDoeVjbk5Wum739D+
yAdBPLtVb4OjavtisIGJAnB9SMVK4+kiVCJNk7tCDK93nCOmfddhEc5lx/h//vXyqaNCMEAw
HQYDVR0OBBYEFPtaSNCAIEDyqOkAB2kZd6fmw/TPMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
Af8EBTADAQH/MAoGCCqGSM49BAMDA2gAMGUCMQC02C8Cif22TGK6Q04ThHK1rt0c3ta13FaP
WEBaLd4gTCKDypOofu4SQMfWh0/434UCMBwUZOR8loMRnLDRWmFLpg9J0wD8ofzkpf9/rdcw
0Md3f76BB1UwUCAU9Vc4CqgxUQ==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFzzCCA7egAwIBAgIUCBZfikyl7ADJk0DfxMauI7gcWqQwDQYJKoZIhvcNAQELBQAwbzEL
MAkGA1UEBhMCSEsxEjAQBgNVBAgTCUhvbmcgS29uZzESMBAGA1UEBxMJSG9uZyBLb25nMRYw
FAYDVQQKEw1Ib25na29uZyBQb3N0MSAwHgYDVQQDExdIb25na29uZyBQb3N0IFJvb3QgQ0Eg
MzAeFw0xNzA2MDMwMjI5NDZaFw00MjA2MDMwMjI5NDZaMG8xCzAJBgNVBAYTAkhLMRIwEAYD
VQQIEwlIb25nIEtvbmcxEjAQBgNVBAcTCUhvbmcgS29uZzEWMBQGA1UEChMNSG9uZ2tvbmcg
UG9zdDEgMB4GA1UEAxMXSG9uZ2tvbmcgUG9zdCBSb290IENBIDMwggIiMA0GCSqGSIb3DQEB
AQUAA4ICDwAwggIKAoICAQCziNfqzg8gTr7m1gNt7ln8wlffKWihgw4+aMdoWJwcYEuJQwy5
1BWy7sFOdem1p+/l6TWZ5Mwc50tfjTMwIDNT2aa71T4Tjukfh0mtUC1Qyhi+AViiE3CWu4mI
VoBc+L0sPOFMV4i707mV78vH9toxdCim5lSJ9UExyuUmGs2C4HDaOym71QP1mbpV9WTRYA6z
iUm4ii8F0oRFKHyPaFASePwLtVPLwpgchKOesL4jpNrcyCse2m5FHomY2vkALgbpDDtw1VAl
iJnLzXNg99X/NWfFobxeq81KuEXryGgeDQ0URhLj0mRiikKYvLTGCAj4/ahMZJx2Ab0vqWwz
D9g/KLg8aQFChn5pwckGyuV6RmXpwtZQQS4/t+TtbNe/JgERohYpSms0BpDsE9K2+2p20jzt
8NYt3eEV7KObLyzJPivkaTv/ciWxNoZbx39ri1UbSsUgYT2uy1DhCDq+sI9jQVMwCFk8mB13
umOResoQUGC/8Ne8lYePl8X+l2oBlKN8W4UdKjk60FSh0Tlxnf0h+bV78OLgAo9uliQlLKAe
LKjEiafv7ZkGL7YKTE/bosw3Gq9HhS2KX8Q0NEwA/RiTZxPRN+ZItIsGxVd7GYYKecsAyVKv
Qv83j+GjHno9UKtjBucVtT+2RTeUN7F+8kjDf8V1/peNRY8apxpyKBpADwIDAQABo2MwYTAP
BgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQXnc0ei9Y5K3DT
XNSguB+wAPzFYTAdBgNVHQ4EFgQUF53NHovWOStw01zUoLgfsAD8xWEwDQYJKoZIhvcNAQEL
BQADggIBAFbVe27mIgHSQpsY1Q7XZiNc4/6gx5LS6ZStS6LG7BJ8dNVI0lkUmcDrudHr9Egw
W62nV3OZqdPlt9EuWSRY3GguLmLYauRwCy0gUCCkMpXRAJi70/33MvJJrsZ64Ee+bs7Lo3I6
LWldy8joRTnU+kLBEUx3XZL7av9YROXrgZ6voJmtvqkBZss4HTzfQx/0TW60uhdG/H39h4F5
ag0zD/ov+BS5gLNdTaqX4fnkGMX41TiMJjz98iji7lpJiCzfeT2OnpA8vUFKOt1b9pq0zj8l
MH8yfaIDlNDceqFS3m6TjRgm/VWsvY+b0s+v54Ysyx8Jb6NvqYTUc79NoXQbTiNg8swOqn+k
nEwlqLJmOzj/2ZQw9nKEvmhVEA/GcywWaZMH/rFF7buiVWqw2rVKAiUnhde3t4ZEFolsgCs+
l6mc1X5VTMbeRRAc6uk7nwNT7u56AQIWeNTowr5GdogTPyK7SBIdUgC0An4hGh6cJfTzPV4e
0hz5sy229zdcxsshTrD3mUcYhcErulWuBurQB7Lcq9CClnXO0lD+mefPL5/ndtFhKvshuzHQ
qp9HpLIiyhY6UFfEW0NnxWViA0kB60PZ2Pierc+xYw5F9KBaLJstxabArahH9CdMOA0uG0k7
UvToiIMrVCjU8jVStDKDYmlkDJGcn5fqdBb9HxEGmpv0
-----END CERTIFICATE-----
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:926
(x509) != nullptr
X509_STORE *node::crypto::NewRootCertStore()
(0) == (Traits::mutex_init(&mutex_))
ERR_INVALID_ARG_VALUE
dynamic
SO_PATH
LOAD
Engine "%s" was not found
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3479
"Unreachable code reached" __VA_OPT__(": ") "Invalid key encoding type"
node::crypto::ManagedEVPPKey node::crypto::GetPublicOrPrivateKeyFromJs(const FunctionCallbackInfo<v8::Value> &, unsigned int *)
Failed to read asymmetric key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3492
args[*offset]->IsObject()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3494
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3495
(key->GetKeyType()) != (kKeyTypeSecret)
PUBLIC KEY
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3008
(int)BIO_ctrl(bp.get(),1,0,__null)
node::crypto::ParseKeyResult node::crypto::ParsePublicKeyPEM(node::crypto::EVPKeyPointer *, const char *, int)
RSA PUBLIC KEY
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3017
CERTIFICATE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3175
(config.format_) == (kKeyFormatDER)
node::crypto::ParseKeyResult node::crypto::ParsePrivateKey(node::crypto::EVPKeyPointer *, const node::crypto::PrivateKeyEncodingConfig &, const char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3197
(config.type_.ToChecked()) == (kKeyEncodingSEC1)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3032
node::crypto::ParseKeyResult node::crypto::ParsePublicKey(node::crypto::EVPKeyPointer *, const node::crypto::PublicKeyEncodingConfig &, const char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3038
(config.type_.ToChecked()) == (kKeyEncodingSPKI)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3357
node::crypto::ManagedEVPPKey node::crypto::GetParsedKey(node::Environment *, node::crypto::EVPKeyPointer &&, node::crypto::ParseKeyResult, const char *)
Passphrase required for encrypted key
ERR_MISSING_PASSPHRASE
Failed to read private key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3432
args[*offset]->IsObject() && allow_key_object
node::crypto::ManagedEVPPKey node::crypto::GetPrivateKeyFromJs(const FunctionCallbackInfo<v8::Value> &, unsigned int *, bool)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3435
(key->GetKeyType()) == (kKeyTypePrivate)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3319
(context) == (kKeyContextGenerate)
void node::crypto::GetKeyFormatAndTypeFromJs(node::crypto::AsymmetricKeyEncodingConfig *, const FunctionCallbackInfo<v8::Value> &, unsigned int *, node::crypto::KeyEncodingContext)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3320
args[*offset + 1]->IsUndefined()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3325
args[*offset]->IsInt32()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3333
context == kKeyContextInput && config->format_ == kKeyFormatPEM
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3334
args[*offset + 1]->IsNullOrUndefined()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3395
args[*offset]->IsNullOrUndefined()
NonCopyableMaybe<node::crypto::PrivateKeyEncodingConfig> node::crypto::GetPrivateKeyEncodingFromJs(const FunctionCallbackInfo<v8::Value> &, unsigned int *, node::crypto::KeyEncodingContext)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3402
!(context != kKeyContextInput) || (result.cipher_ != nullptr)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3406
args[*offset]->IsNullOrUndefined() && !needs_passphrase
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3096
MaybeLocal<v8::Value> node::crypto::WritePublicKey(node::Environment *, EVP_PKEY *, const node::crypto::PublicKeyEncodingConfig &)
Failed to encode public key
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3069
(EVP_PKEY_id(pkey)) == (6)
bool node::crypto::WritePublicKeyInner(EVP_PKEY *, const node::crypto::BIOPointer &, const node::crypto::PublicKeyEncodingConfig &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3076
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3080
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3086
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3058
(format) == (kKeyFormatDER)
Local<v8::Value> node::crypto::BIOToStringOrBuffer(node::Environment *, BIO *, node::crypto::PKFormatType)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3506
MaybeLocal<v8::Value> node::crypto::WritePrivateKey(node::Environment *, EVP_PKEY *, const node::crypto::PrivateKeyEncodingConfig &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3512
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3526
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3527
(config.cipher_) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3541
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3550
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3553
(EVP_PKEY_id(pkey)) == (408)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3567
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:3568
Failed to encode private key
char *node::Environment::Allocate(size_t)
src/env-inl.h:921
(new_data) != nullptr
void node::AllocatedBuffer::Resize(size_t)
Bad input string
void node::MaybeStackBuffer<char, 1024>::AllocateSufficientStorage(size_t) [T = char, kStackStorageSize = 1024]
T *node::Realloc(T *, size_t) [T = char]
src/env-inl.h:977
v8::MaybeLocal<v8::Object> node::AllocatedBuffer::ToBuffer()
src/node_crypto.h
SignBase
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:4857
(signed_sig_len) >= (0)
node::AllocatedBuffer node::crypto::Node_SignFinal(node::Environment *, node::crypto::EVPMDPointer &&, const node::crypto::ManagedEVPPKey &, int, Maybe<int>)
getPrime
getGenerator
modp1
modp2
modp5
modp14
modp15
modp16
modp17
modp18
src/node_crypto.h:794
(group_) != nullptr
node::crypto::ECDH::ECDH(node::Environment *, v8::Local<v8::Object>, node::crypto::ECKeyPointer &&)
Failed to get public key length
Failed to get public key
src/node_internals.h:244
node::ThreadPoolWork::ThreadPoolWork(node::Environment *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5911
status == 0 || status == UV_ECANCELED
virtual void node::crypto::CryptoJob::AfterThreadPoolWork(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5916
(false) == (async_wrap->persistent().IsWeak())
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5922
wrap->IsObject()
static void node::crypto::CryptoJob::Run(std::unique_ptr<CryptoJob>, Local<v8::Value>)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5923
(job->async_wrap) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5925
(false) == (job->async_wrap->persistent().IsWeak())
src/threadpoolwork-inl.h:46
(status) == (0)
void node::ThreadPoolWork::ScheduleWork()
src/env-inl.h:408
(request_waiting_) >= (0)
void node::Environment::DecreaseWaitingRequestCounter()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:5932
buf->IsArrayBufferView()
void node::crypto::CopyBuffer(Local<v8::Value>, std::vector<char> *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6369
errors_.empty()
void node::crypto::GenerateKeyPairJob::ToResult(Local<v8::Value> *, Local<v8::Value> *, Local<v8::Value> *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6374
!errors_.empty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6172
(bn.get()) != nullptr
virtual bool node::crypto::RSAKeyPairGenerationConfig::Configure(const node::crypto::EVPKeyCtxPointer &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6173
BN_set_word(bn.get(), exponent_)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6032
void node::crypto::PBKDF2(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6033
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6034
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6035
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6036
args[4]->IsString()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:6037
args[5]->IsObject() || args[5]->IsUndefined()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2224
cert
static void node::crypto::SSLWrap<node::TLSWrap>::GetPeerCertificate(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1943
(ext) != nullptr
Local<v8::Object> node::crypto::X509ToObject(node::Environment *, X509 *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:1946
(1) == (X509V3_EXT_print(bio.get(), ext, 0, 0))
0x%x
0x%x%08x
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2004
DNS:
0123456789ABCDEF
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2280
(len) == (SSL_get_finished(w->ssl_.get(), buf.data(), len))
static void node::crypto::SSLWrap<node::TLSWrap>::GetFinished(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2303
(len) == (SSL_get_peer_finished(w->ssl_.get(), buf.data(), len))
static void node::crypto::SSLWrap<node::TLSWrap>::GetPeerFinished(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2320
(slen) > (0)
static void node::crypto::SSLWrap<node::TLSWrap>::GetSession(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
Session argument is mandatory
Session must be a buffer
SSL_set_session error
UNABLE_TO_GET_ISSUER_CERT
UNABLE_TO_GET_CRL
UNABLE_TO_DECRYPT_CERT_SIGNATURE
UNABLE_TO_DECRYPT_CRL_SIGNATURE
UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY
CERT_SIGNATURE_FAILURE
CRL_SIGNATURE_FAILURE
CERT_NOT_YET_VALID
CERT_HAS_EXPIRED
CRL_NOT_YET_VALID
CRL_HAS_EXPIRED
ERROR_IN_CERT_NOT_BEFORE_FIELD
ERROR_IN_CERT_NOT_AFTER_FIELD
ERROR_IN_CRL_LAST_UPDATE_FIELD
ERROR_IN_CRL_NEXT_UPDATE_FIELD
OUT_OF_MEM
DEPTH_ZERO_SELF_SIGNED_CERT
SELF_SIGNED_CERT_IN_CHAIN
UNABLE_TO_GET_ISSUER_CERT_LOCALLY
UNABLE_TO_VERIFY_LEAF_SIGNATURE
CERT_CHAIN_TOO_LONG
CERT_REVOKED
INVALID_CA
PATH_LENGTH_EXCEEDED
INVALID_PURPOSE
CERT_UNTRUSTED
CERT_REJECTED
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2829
w->is_waiting_cert_cb() && w->cert_cb_running_
static void node::crypto::SSLWrap<node::TLSWrap>::CertCbDone(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
CertCbDone
OCSP response argument is mandatory
OCSP response must be a buffer
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2469
w->ssl_
static void node::crypto::SSLWrap<node::TLSWrap>::GetEphemeralKeyInfo(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2527
args.Length() >= 1 && args[0]->IsNumber()
static void node::crypto::SSLWrap<node::TLSWrap>::SetMaxSendFragment(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
Must give a Buffer as first argument
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2704
(r) == (0)
static void node::crypto::SSLWrap<node::TLSWrap>::SetALPNProtocols(const FunctionCallbackInfo<v8::Value> &) [Base = node::TLSWrap]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:2710
w->object()->SetPrivate( env->context(), env->alpn_buffer_private_symbol(), args[0]).FromJust()
value->IsArrayBufferView()
node::ArrayBufferViewContents<unsigned char, 64>::ArrayBufferViewContents(v8::Local<v8::Value>) [T = unsigned char, kStackStorageSize = 64]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto.cc:460
!(mem == nullptr) || (count == 0)
T *node::crypto::MallocOpenSSL(size_t) [T = char]
T *node::crypto::MallocOpenSSL(size_t) [T = unsigned char]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:191
0 && "Can't use SET_BUF_MEM_PTR with NodeBIO"
static long node::crypto::NodeBIO::Ctrl(BIO *, int, long, void *)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:194
0 && "Can't use GET_BUF_MEM_PTR with NodeBIO"
node.js SSL buffer
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:269
(read_head_->read_pos_) <= (read_head_->write_pos_)
size_t node::crypto::NodeBIO::Read(char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:286
(expected) == (bytes_read)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:308
(cur) != (write_head_)
void node::crypto::NodeBIO::FreeEmpty()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:309
(cur->write_pos_) == (cur->read_pos_)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:326
(current->read_pos_) <= (current->write_pos_)
size_t node::crypto::NodeBIO::IndexOf(char, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:353
(max) == (bytes_read)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:368
(write_head_->write_pos_) <= (write_head_->len_)
void node::crypto::NodeBIO::Write(const char *, size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:384
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:388
(write_head_->write_pos_) == (write_head_->len_)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:415
void node::crypto::NodeBIO::Commit(size_t)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:460
read_head_->write_pos_ > read_head_->read_pos_
void node::crypto::NodeBIO::Reset()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:469
(length_) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_crypto_bio.cc:490
(BIO_get_data(bio)) != nullptr
static node::crypto::NodeBIO *node::crypto::NodeBIO::FromBIO(BIO *)
NodeBIO::Buffer
NodeBIO
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:66
(sc) != nullptr
node::TLSWrap::TLSWrap(node::Environment *, Local<v8::Object>, node::crypto::SSLWrap<node::TLSWrap>::Kind, node::StreamBase *, node::crypto::SecureContext *)
Created new TLSWrap
~TLSWrap()
InvokeQueued(%d, %s)
NewSessionDoneCb()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:161
static void node::TLSWrap::Wrap(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:162
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:163
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:164
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:171
Receiving %zu bytes injected from JS
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:213
!wrap->started_
static void node::TLSWrap::Start(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:218
wrap->is_client()
SSLInfoCallback(SSL_CB_HANDSHAKE_START);
SSLInfoCallback(SSL_CB_HANDSHAKE_DONE);
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:257
!SSL_renegotiate_pending(ssl)
static void node::TLSWrap::SSLInfoCallback(const SSL *, int, int)
Trying to write encrypted output
Returning from EncOut(), hello_parser_ active
Returning from EncOut(), write currently in progress
Returning from EncOut(), awaiting new session
EncOut() setting write_callback_scheduled_
Returning from EncOut(), ssl_ == nullptr
No pending encrypted output
No pending cleartext input, not inside DoWrite()
No pending cleartext input, inside DoWrite()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:333
write_size_ != 0 && count != 0
void node::TLSWrap::EncOut()
Writing %zu buffers to the underlying stream
Write finished synchronously
OnStreamAfterWrite(status = %d)
Had empty write
ssl_ == nullptr, marking as cancelled
Ignoring error after shutdown
ERR_SSL_
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:473
Local<v8::Value> node::TLSWrap::GetSSLError(int, int *, std::string *)
Trying to read cleartext output
Returning from ClearOut(), hello_parser_ active
Returning from ClearOut(), EOF reached
Returning from ClearOut(), ssl_ == nullptr
Read %d bytes of cleartext output
Returning from read loop, ssl_ == nullptr
Got SSL error (%d), calling onerror
Trying to write cleartext input
Returning from ClearIn(), hello_parser_ active
Returning from ClearIn(), ssl_ == nullptr
Returning from ClearIn(), no pending data
Writing %zu bytes, written = %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:586
written == -1 || written == static_cast<int>(data.size())
void node::TLSWrap::ClearIn()
Successfully wrote all data to SSL
Got SSL error (%d)
Pushing data back
TLSWrap 
server (
client (
ReadStart()
ReadStop()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:687
virtual int node::TLSWrap::DoWrite(node::WriteWrap *, uv_buf_t *, size_t, uv_stream_t *)
DoWrite()
Write after DestroySSL
Empty write
No pending encrypted output, writing to underlying stream
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:716
(current_empty_write_) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:730
(current_write_) == nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:760
written == -1 || written == static_cast<int>(length)
Got SSL error (%d), returning UV_EPROTO
Saving data for later write
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:776
(pending_cleartext_input_.size()) == (0)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:791
(ssl_) != nullptr
virtual uv_buf_t node::TLSWrap::OnStreamAlloc(size_t)
Read %zd bytes from underlying stream
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:819
ssl_
virtual void node::TLSWrap::OnStreamRead(ssize_t, const uv_buf_t &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:833
!(data == nullptr) || (avail == 0)
Passing %zu bytes to the hello parser
DoShutdown()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:865
static void node::TLSWrap::SetVerifyMode(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:866
args[0]->IsBoolean()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:867
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:868
(wrap->ssl_) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:898
static void node::TLSWrap::EnableSessionCallbacks(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:915
(wrap->sc_) != nullptr
static void node::TLSWrap::EnableKeylogCallback(const FunctionCallbackInfo<v8::Value> &)
DestroySSL()
Canceled because of SSL destruction
DestroySSL() finished
OnClientHelloParseEnd()
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:996
static void node::TLSWrap::GetServername(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:1014
static void node::TLSWrap::SetServername(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:1015
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:1016
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:1017
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:1019
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc:1068
static int node::TLSWrap::SelectSNIContextCallback(SSL *, int *, void *)
pending_cleartext_input
AllocatedBuffer
enc_in
enc_out
HAVE_SSL_TRACE
TLSWrap
receive
setVerifyMode
enableSessionCallbacks
enableKeylogCallback
enableTrace
destroySSL
enableCertCb
getServername
setServername
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/tls_wrap.cc
tls_wrap
src/node_crypto.h:206
node::crypto::SSLWrap<node::TLSWrap>::SSLWrap(node::Environment *, node::crypto::SecureContext *, node::crypto::SSLWrap::Kind) [Base = node::TLSWrap]
report
json
stdout
Failed to open Node.js report file: 
 directory: 
 (errno: 
Writing Node.js report to file: 
Node.js report completed
header
reportVersion
event
trigger
%4d-%02d-%02dT%02d:%02d:%02dZ
dumpEventTime
dumpEventTimeStamp
processId
commandLine
libuv
loop
is_active
nodejsVersion
gnu_get_libc_version
glibcVersionRuntime
wordSize
osName
osRelease
osVersion
osMachine
componentVersions
cpus
model
speed
user
nice
idle
networkInterfaces
javascriptStack
No stack.
Unavailable.
nativeStack
javascriptHeap
totalMemory
totalCommittedMemory
usedMemory
availableMemory
memoryLimit
heapSpaces
memorySize
committedMemory
capacity
used
available
userCpuSeconds
kernelCpuSeconds
cpuConsumptionPercent
maxRss
pageFaults
IORequired
IONotRequired
fsActivity
reads
writes
core_file_size_blocks
data_seg_size_kbytes
file_size_blocks
max_locked_memory_bytes
max_memory_size_kbytes
open_files
stack_size_bytes
cpu_time_seconds
max_user_processes
virtual_memory_kbytes
environmentVariables
userLimits
soft
unlimited
hard
sharedObjects
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc:38
(info.Length()) == (4)
void report::WriteReport(const FunctionCallbackInfo<v8::Value> &)
JavaScript API
GetReport
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc
writeReport
getReport
getDirectory
setDirectory
getFilename
setFilename
getSignal
setSignal
shouldReportOnFatalError
setReportOnFatalError
shouldReportOnSignal
setReportOnSignal
shouldReportOnUncaughtException
setReportOnUncaughtException
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc:82
void report::SetDirectory(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc:98
void report::SetFilename(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc:114
void report::SetSignal(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc:127
info[0]->IsBoolean()
void report::SetReportOnFatalError(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc:138
void report::SetReportOnSignal(const FunctionCallbackInfo<v8::Value> &)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/src/node_report_module.cc:152
void report::SetReportOnUncaughtException(const FunctionCallbackInfo<v8::Value> &)
is_referenced
repeat
firesInMsFromNow
expired
width
height
signum
sendBufferSize
recvBufferSize
stdin
\u0000
\u0001
\u0002
\u0003
\u0004
\u0005
\u0006
\u0007
\u000e
\u000f
\u0010
\u0011
\u0012
\u0013
\u0014
\u0015
\u0016
\u0017
\u0018
\u0019
\u001a
\u001b
\u001c
\u001d
\u001e
\u001f
localEndpoint
remoteEndpoint
object expected
Internal error
Message must be an object
Message must have string 'method' property
params
EncodeStart
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Binaries/XCSNodeJS/install/Symbols/DerivedSources/Release/inspector-generated-output-root/src/inspector/protocol/Protocol.cpp
byte_size_pos_ == 0
EncodeStop
byte_size_pos_ != 0
token_tag_ == CBORTokenTag::STRING16
ReadNextToken
!remainder.empty()
unimplemented code
message
data
!envelopes_.empty()
HandleArrayEnd
tokenizer->TokenTag() == CBORTokenTag::MAP_START
!state_.empty()
StartElement
state_.size() >= 2 && state_.top().container() == Container::ARRAY
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
0123456789ABCDEF
static_cast<std::size_t>(in.size()) >= sizeof(T)
javascript
network
console-api
storage
appcache
rendering
security
other
deprecation
level
text
line
column
Console.messageAdded
integer value expected
Console.clearMessages
Console.disable
Console.enable
scriptId
lineNumber
columnNumber
callFrameId
functionName
functionLocation
scopeChain
this
returnValue
local
with
closure
catch
block
script
eval
object
startLocation
endLocation
lineContent
debuggerStatement
call
return
breakpointId
EventListener
exception
debugCommand
promiseRejection
ambiguous
callFrames
hitBreakpoints
asyncStackTrace
asyncStackTraceId
asyncCallStackTraceId
startLine
startColumn
endLine
endColumn
executionContextId
hash
executionContextAuxData
sourceMapURL
hasSourceURL
isModule
length
stackTrace
isLiveEdit
current
uncaught
Debugger.breakpointResolved
Debugger.paused
Debugger.resumed
Debugger.scriptFailedToParse
Debugger.scriptParsed
targetCallFrames
maxScriptsCacheSize
debuggerId
expression
objectGroup
includeCommandLineAPI
silent
returnByValue
generatePreview
throwOnSideEffect
exceptionDetails
restrictToFunction
locations
scriptSource
stackTraceId
parentStackTraceId
caseSensitive
isRegex
maxDepth
patterns
positions
condition
actualLocation
urlRegex
scriptHash
objectId
active
state
newValue
dryRun
stackChanged
skip
scopeNumber
variableName
breakOnAsyncCall
double value expected
Debugger.continueToLocation
Debugger.disable
Debugger.enable
Debugger.evaluateOnCallFrame
Debugger.getPossibleBreakpoints
Debugger.getScriptSource
Debugger.getStackTrace
Debugger.pause
Debugger.pauseOnAsyncCall
Debugger.removeBreakpoint
Debugger.restartFrame
Debugger.resume
Debugger.searchInContent
Debugger.setAsyncCallStackDepth
Debugger.setBlackboxPatterns
Debugger.setBlackboxedRanges
Debugger.setBreakpoint
Debugger.setBreakpointByUrl
Debugger.setBreakpointOnFunctionCall
Debugger.setBreakpointsActive
Debugger.setPauseOnExceptions
Debugger.setReturnValue
Debugger.setScriptSource
Debugger.setSkipAllPauses
Debugger.setVariableValue
Debugger.stepInto
Debugger.stepOut
Debugger.stepOver
callFrame
selfSize
children
nodeId
ordinal
head
samples
chunk
statsUpdate
lastSeenObjectId
timestamp
done
total
finished
HeapProfiler.addHeapSnapshotChunk
HeapProfiler.heapStatsUpdate
HeapProfiler.lastSeenObjectId
HeapProfiler.reportHeapSnapshotProgress
HeapProfiler.resetProfiles
heapObjectId
heapSnapshotObjectId
samplingInterval
trackAllocations
reportProgress
HeapProfiler.addInspectedHeapObject
HeapProfiler.collectGarbage
HeapProfiler.disable
HeapProfiler.getHeapObjectId
HeapProfiler.getObjectByHeapObjectId
HeapProfiler.getSamplingProfile
HeapProfiler.startTrackingHeapObjects
HeapProfiler.stopTrackingHeapObjects
HeapProfiler.takeHeapSnapshot
hitCount
deoptReason
positionTicks
nodes
endTime
timeDeltas
ticks
startOffset
endOffset
ranges
isBlockCoverage
functions
offset
Profiler.consoleProfileFinished
Profiler.consoleProfileStarted
interval
callCount
detailed
Profiler.disable
Profiler.getBestEffortCoverage
Profiler.startTypeProfile
Profiler.stopPreciseCoverage
Profiler.stopTypeProfile
Profiler.takeTypeProfile
string
boolean
bigint
array
weakmap
weakset
iterator
generator
proxy
typedarray
arraybuffer
dataview
subtype
className
unserializableValue
preview
customPreview
bodyGetterId
overflow
properties
accessor
valuePreview
configurable
enumerable
wasThrown
isOwn
auxData
exceptionId
parentId
payload
dirxml
table
clear
startGroup
startGroupCollapsed
endGroup
profileEnd
timeEnd
hints
Runtime.bindingCalled
Runtime.consoleAPICalled
Runtime.exceptionRevoked
Runtime.exceptionThrown
Runtime.executionContextCreated
Runtime.executionContextDestroyed
Runtime.executionContextsCleared
Runtime.inspectRequested
promiseObjectId
functionDeclaration
arguments
userGesture
awaitPromise
sourceURL
persistScript
contextId
usedSize
totalSize
ownProperties
accessorPropertiesOnly
internalProperties
privateProperties
names
prototypeObjectId
objects
Runtime.awaitPromise
Runtime.callFunctionOn
Runtime.compileScript
Runtime.disable
Runtime.discardConsoleEntries
Runtime.enable
Runtime.evaluate
Runtime.getIsolateId
Runtime.getHeapUsage
Runtime.getProperties
Runtime.globalLexicalScopeNames
Runtime.queryObjects
Runtime.releaseObject
Runtime.releaseObjectGroup
Runtime.runIfWaitingForDebugger
Runtime.runScript
Runtime.setAsyncCallStackDepth
Runtime.setCustomObjectFormatterEnabled
Runtime.setMaxCallStackSizeToCapture
Runtime.terminateExecution
Runtime.addBinding
Runtime.removeBinding
domains
Schema.getDomains
it.HasAccess()
LookupIterator::ACCESSOR == it.state()
array->length()->ToArrayLength(&actual_new_len)
Malloced operator new
AlignedAlloc
InVM(address, size)
InVM(free_start, free_size)
ReleasePages(page_allocator_, reinterpret_cast<void*>(region_.begin()), old_size, region_.size())
FreePages(page_allocator, reinterpret_cast<void*>(region.begin()), RoundUp(region.size(), page_allocator->AllocatePageSize()))
!obj->GetInstanceCallHandler()->IsUndefined(isolate)
parent_prototype->IsHeapObject()
DisableAccessChecks
EnableAccessChecks
ApiNatives::InstantiateObject
!constructor_or_backpointer()->IsMap()
Fatal process out of memory: %s
<--- Last few GCs --->
<--- JS stacktrace --->
API fatal error handler returned after process out of memory
# Fatal error in %s
# %s
# Fatal %s OOM in %s
Allocation failed - JavaScript heap out of memory
Allocation failed - process out of memory
isolate == context->GetIsolate()
handle_checker.CheckGlobalAndEternalHandles()
source != nullptr || source_length_ == 0
v8::Persistent::New
v8::TracedGlobal::New
v8::FromJust
Maybe value is Nothing.
v8::ToLocalChecked
Empty MaybeLocal.
WeakCallbackInfo::GetInternalField
Internal field out of bounds.
HandleScope::HandleScope
Entering the V8 API without proper locking in place
EscapableHandleScope::Escape
Escape value set twice
v8::Context::Exit()
Cannot exit non-entered context
context->IsNativeContext()
v8::Context::GetEmbedderData()
v8::Context::SetEmbedderData()
v8::Context::GetAlignedPointerFromEmbedderData()
Pointer is not aligned
v8::Context::SetAlignedPointerInEmbedderData()
!value_obj->IsJSReceiver() || value_obj->IsTemplateInfo()
info->GetPrototypeTemplate()->IsUndefined(i_isolate)
info->GetParentTemplate()->IsUndefined(i_isolate)
v8::FunctionTemplate::Inherit
info->GetPrototypeProviderTemplate()->IsUndefined(i_isolate)
v8::FunctionTemplate::New
v8::FunctionTemplate::NewWithCache
v8::FunctionTemplate::SetCallHandler
v8::FunctionTemplate::InstanceTemplate()
Reading from empty handle
v8::FunctionTemplate::SetLength
v8::FunctionTemplate::SetClassName
v8::FunctionTemplate::SetAcceptAnyReceiver
v8::FunctionTemplate::SetHiddenPrototype
v8::FunctionTemplate::ReadOnlyPrototype
v8::FunctionTemplate::RemovePrototype
v8::ObjectTemplate::MarkAsUndetectable
v8::ObjectTemplate::SetAccessCheckCallback
v8::ObjectTemplate::SetAccessCheckCallbackWithHandler
v8::ObjectTemplate::SetHandler
v8::ObjectTemplate::SetCallAsFunctionHandler
v8::ObjectTemplate::SetInternalFieldCount()
Invalid embedder field count
v8::UnboundScript::GetId
v8::UnboundScript::GetLineNumber
v8::UnboundScript::GetName
v8::UnboundScript::GetSourceURL
v8::UnboundScript::GetSourceMappingURL
V8.Execute
v8::Script::Run
v8::PrimitiveArray::New
length must be equal or greater than zero
v8::PrimitiveArray::Set
index must be greater than or equal to 0 and less than the array length
v8::PrimitiveArray::Get
v8::Module::GetException
Module status must be kErrored
i >= 0
i < module_requests->length()
i < module_request_positions->length()
v8::Module::GetModuleNamespace
v8::Module::GetModuleNamespace must be used on an instantiated module
v8::Module::GetUnboundScript
v8::Module::GetUnboundScript must be used on an unevaluated module
v8::Module::InstantiateModule
v8::Module::Evaluate
self->status() >= i::Module::kInstantiated
V8.ScriptCompiler
v8::ScriptCompiler::CompileUnbound
disabled-by-default-v8.compile
V8.CompileScript
v8::ScriptCompiler::CompileUnboundScript
v8::ScriptCompiler::CompileModule must be used to compile modules
v8::ScriptCompiler::Compile
options == kNoCompileOptions || options == kConsumeCodeCache
v8::ScriptCompiler::CompileModule
Invalid ScriptOrigin: is_module must be true
v8::ScriptCompiler::CompileFunctionInContext
options == ScriptCompiler::kNoCompileOptions
V8.CompileStreamedScript
shared->is_wrapped()
v8::TryCatch::StackTrace
v8::JSON::Parse
v8::JSON::Stringify
v8::ValueSerializer::WriteValue
v8::ValueDeserializer::ReadHeader
!private_->has_aborted
v8::ValueDeserializer::ReadValue
v8::Object::ToString
v8::Object::ToDetailString
v8::Object::ToObject
v8::Object::ToBigInt
v8::Object::ToNumber
v8::Object::ToInteger
v8::Object::ToInt32
v8::Object::ToUint32
v8::internal::Internals::CheckInitialized
Isolate is not initialized or V8 has died
v8::External::Cast
Could not convert to external
v8::Object::Cast
Could not convert to object
v8::Function::Cast
Could not convert to function
v8::Boolean::Cast
Could not convert to boolean
v8::Name::Cast
Could not convert to name
v8::String::Cast
Could not convert to string
v8::Symbol::Cast
Could not convert to symbol
v8::Private::Cast
Could not convert to private
v8::Number::Cast()
Could not convert to number
v8::Integer::Cast
v8::Int32::Cast
Could not convert to 32-bit signed integer
v8::Uint32::Cast
Could not convert to 32-bit unsigned integer
v8::BigInt::Cast
Could not convert to BigInt
v8::Array::Cast
Could not convert to array
v8::Map::Cast
Could not convert to Map
v8_Set_Cast
Could not convert to Set
v8::Promise::Cast
Could not convert to promise
v8::Promise::Resolver::Cast
Could not convert to promise resolver
v8::Proxy::Cast
Could not convert to proxy
v8::WasmModuleObject::Cast
Could not convert to wasm module object
v8::ArrayBuffer::Cast()
Could not convert to ArrayBuffer
v8::ArrayBufferView::Cast()
Could not convert to ArrayBufferView
v8::TypedArray::Cast()
Could not convert to TypedArray
v8::Uint8Array::Cast()
Could not convert to Uint8Array
v8::Int8Array::Cast()
Could not convert to Int8Array
v8::Uint16Array::Cast()
Could not convert to Uint16Array
v8::Int16Array::Cast()
Could not convert to Int16Array
v8::Uint32Array::Cast()
Could not convert to Uint32Array
v8::Int32Array::Cast()
Could not convert to Int32Array
v8::Float32Array::Cast()
Could not convert to Float32Array
v8::Float64Array::Cast()
Could not convert to Float64Array
v8::Uint8ClampedArray::Cast()
Could not convert to Uint8ClampedArray
v8::BigUint64Array::Cast()
Could not convert to BigUint64Array
v8::BigInt64Array::Cast()
Could not convert to BigInt64Array
v8::DataView::Cast()
Could not convert to DataView
v8::SharedArrayBuffer::Cast()
Could not convert to SharedArrayBuffer
v8::Date::Cast()
Could not convert to date
v8::StringObject::Cast()
Could not convert to StringObject
v8::SymbolObject::Cast()
Could not convert to SymbolObject
v8::NumberObject::Cast()
Could not convert to NumberObject
v8::BigIntObject::Cast()
Could not convert to BigIntObject
v8::BooleanObject::Cast()
Could not convert to BooleanObject
v8::RegExp::Cast()
Could not convert to regular expression
v8::Value::NumberValue
v8::Value::IntegerValue
v8::Value::Int32Value
v8::Value::Uint32Value
v8::Object::ToArrayIndex
v8::Value::TypeOf
v8::Value::InstanceOf
v8::Object::Set
v8::Object::CreateDataProperty
v8::Object::DefineOwnProperty
v8::Object::SetPrivate
v8::Object::Get
v8::Object::GetPropertyAttributes
v8::Object::GetOwnPropertyDescriptor
v8::Object::SetPrototype
v8::Object::GetPropertyNames
v8::Object::ObjectProtoToString
v8::Object::SetIntegrityLevel
v8::Object::Delete
v8::Object::Has
v8::Object::HasOwnProperty
v8::Object::HasRealNamedProperty
v8::Object::HasRealIndexedProperty
v8::Object::HasRealNamedCallbackProperty
v8::Object::GetRealNamedPropertyInPrototypeChain
v8::Object::GetRealNamedPropertyAttributesInPrototypeChain
v8::Object::GetRealNamedProperty
v8::Object::GetRealNamedPropertyAttributes
!result.is_null()
v8::Object::CallAsFunction
v8::Object::CallAsConstructor
v8::Function::New
v8::Function::NewInstance
self->IsJSFunction() && i::JSFunction::cast(*self)->shared()->IsApiFunction()
v8::Function::Call
Function to be called is a null pointer
displayName
v8::String::WriteUtf8
expected == value
expectedEncoding == encoding
v8::Object::GetInternalField()
v8::Object::SetInternalField()
v8::Object::GetAlignedPointerFromInternalField()
Unaligned pointer
v8::Object::SetAlignedPointerInInternalField()
v8::Object::SetAlignedPointerInInternalFields()
Internal field out of bounds
isolate->builtins()->builtin(i::Builtins::kIllegal)->IsCode()
V8.NewContext
v8::Context::New
v8::Context::NewRemoteContext
Global template needs to have access checks enabled.
Global template needs to have access check handlers.
v8::ObjectTemplate::NewInstance
v8::ObjectTemplate::Cast
Could not convert to object template
v8::FunctionTemplate::Cast
Could not convert to function template
v8::Signature::Cast
Could not convert to signature
v8::AccessorSignature::Cast
Could not convert to accessor signature
v8::FunctionTemplate::GetFunction
v8::FunctionTemplate::NewRemoteInstance
InstanceTemplate needs to have access checks enabled.
InstanceTemplate needs to have access check handlers.
v8::External::New
v8::String::NewFromUtf8
v8::String::NewFromOneByte
v8::String::NewFromTwoByte
v8::String::Concat
resource && resource->data()
v8::String::NewExternalTwoByte
v8::String::NewExternalOneByte
v8::Object::New
prototype must be null or object
v8::NumberObject::New
v8::NumberObject::NumberValue
v8::BigIntObject::New
v8::BigIntObject::BigIntValue
v8::BooleanObject::New
v8::BooleanObject::BooleanValue
v8::StringObject::New
v8::StringObject::StringValue
v8::SymbolObject::New
v8::SymbolObject::SymbolValue
v8::Date::New
v8::Date::NumberValue
v8::RegExp::New
v8::Array::New
v8::Map::New
v8::Map::Clear
v8::Map::Get
v8::Map::Set
v8::Map::Has
v8::Map::Delete
v8::Map::AsArray
v8::Set::New
v8::Set::Clear
v8::Set::Add
v8::Set::Has
v8::Set::Delete
v8::Set::AsArray
v8::Promise_Resolver::New
v8::Promise_Resolver::Resolve
v8::Promise_Resolver::Reject
v8::Promise::Catch
v8::Promise::Then
v8::Promise::HasRejectHandler
v8::Promise::Result
v8_Promise_Result
Promise is still pending
v8::Promise::Status
v8::Proxy::New
(native_module_) != nullptr
WasmModuleObject::Compile()
maybe_compiled.is_null() == i_isolate->has_pending_exception()
v8_ArrayBuffer_Externalize
ArrayBuffer already externalized
engine->memory_tracker()->FreeMemoryIfIsWasmMemory(nullptr, buffer)
v8::ArrayBuffer::Detach
Only externalized ArrayBuffers can be detached
Only detachable ArrayBuffers can be detached
v8::ArrayBuffer::New
byte_length == 0 || data != nullptr
byte_length <= i::JSArrayBuffer::kMaxByteLength
v8::Uint8Array::New
v8::Uint8Array::New(Local<ArrayBuffer>, size_t, size_t)
length exceeds max allowed value
i::FLAG_harmony_sharedarraybuffer
v8::Uint8Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Int8Array::New
v8::Int8Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::Int8Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Uint16Array::New
v8::Uint16Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::Uint16Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Int16Array::New
v8::Int16Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::Int16Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Uint32Array::New
v8::Uint32Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::Uint32Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Int32Array::New
v8::Int32Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::Int32Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Float32Array::New
v8::Float32Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::Float32Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Float64Array::New
v8::Float64Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::Float64Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::Uint8ClampedArray::New
v8::Uint8ClampedArray::New(Local<ArrayBuffer>, size_t, size_t)
v8::Uint8ClampedArray::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::BigUint64Array::New
v8::BigUint64Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::BigUint64Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::BigInt64Array::New
v8::BigInt64Array::New(Local<ArrayBuffer>, size_t, size_t)
v8::BigInt64Array::New(Local<SharedArrayBuffer>, size_t, size_t)
v8::DataView::New
v8_SharedArrayBuffer_Externalize
SharedArrayBuffer already externalized
v8::SharedArrayBuffer::New
v8::Symbol::New
v8::Private::New
v8::BigInt::NewFromWords
i::FLAG_expose_gc
(params.array_buffer_allocator) != nullptr
Failed to deserialize the V8 snapshot blob. This can mean that the snapshot blob file is corrupted or missing.
[Initializing isolate from scratch took %0.3f ms]
v8::Isolate::Dispose()
Disposing the isolate that is entered by a thread.
V8.GCLowMemoryNotification
stack_limit
v8::Isolate::DateTimeConfigurationChangeNotification
v8::Isolate::LocaleConfigurationChangeNotification
v8::RangeError::New
v8::ReferenceError::New
v8::SyntaxError::New
v8::TypeError::New
v8::Error::New
v8::debug::GetPrivateFields
isolate->debug()->CheckExecutionState()
script->line_ends()->IsFixedArray()
!start.IsEmpty()
line_ends->length()
current_line_end_index < line_ends->length()
script->IsWasm()
obj->is_suspended()
value->IsGeneratorObject()
v8::WeakMap::Get
v8::WeakMap::Set
v8::WeakMap::New
Unknown
Builtin
Callback
Eval
Function
InterpretedFunction
Handler
BytecodeHandler
LazyCompile
RegExp
Script
Stub
v8::HeapSnapshot::Serialize
Unknown serialization format
Invalid stream chunk size
--prepare-always-opt --max-inlined-bytecode-size=999999 --max-inlined-bytecode-size-cumulative=999999 --noalways-opt
--always-opt
--deopt-every-n-times=13
isolate_
Not a native context
Negative index
Index too large
FunctionTemplate already instantiated
v8::ObjectTemplate::New
V8.ExternalCallback
(location_) != nullptr
V8.External
value != SideEffectType::kHasNoSideEffect
ObjectTemplateSetNamedPropertyHandler
v8::Object::SetAccessor
APISetAccessor
v8::String::Write
__single_function__
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/asmjs/asm-js.cc:235
[asm.js translation successful: time=%0.3fms, translate_zone=%zuKB, compile_zone+=%zuKB]
AsmJs::Compile
Requires standard library
Unexpected stdlib member
Requires heap buffer
Invalid heap size
AsmJs::Instantiate
Internal wasm failure: %s
Internal wasm failure
success, asm->wasm: %0.3f ms, compile: %0.3f ms, %zu bytes
-1 != length
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/asmjs/asm-js.cc:194
fround
acos
asin
atan
atan2
imul
clz32
ceil
floor
sqrt
LN10
LOG2E
LOG10E
SQRT1_2
SQRT2
Int8Array
Uint8Array
Int16Array
Uint16Array
Int32Array
Uint32Array
Float32Array
Float64Array
Math
success, %0.3f ms
Expected ;
Stack overflow while parsing asm.js module.
Unexpected token
Undefined function
Undefined function table
Expected stdlib parameter
Expected foreign parameter
Expected heap parameter
Expected identifier
Redefinition of variable
Numeric literal out of range
Expected numeric literal
Bad variable declaration
Can only use immutable variables in global definition
Can only define immutable variables with other immutables
Expected int, float, double, or fround for global definition
Expected |0 type annotation for foreign integer import
Expected ArrayBuffer view
Invalid member of stdlib.Math
Invalid member of stdlib
Illegal export name
Expected function name
Expected function
Single function export must be a function name
Single function export must be a function
Expected table name
Function table redefined
Function table name collides
Exceeded function table size
Function table definition doesn't match use
Function table size does not match uses
Function name collides with variable
Function redefined
Number of parameters exceeds internal limit
Expected return at end of non-void function
Number of local variables exceeds internal limit
Size of function body exceeds internal limit
Function definition doesn't match use
Expected parameter name
Duplicate parameter name
Bad integer parameter annotation.
Expected fround
Expected local variable identifier
Duplicate local variable name
Expected variable initial value
Initializing from global requires const variable
Bad local variable definition
expected fround or const global
Invalid return type
Invalid void return type
Illegal break
Illegal continue
Double label unsupported
Expected signed for switch value
Expected actual type
Unexpected type
Expected numeric literal.
Undefined local variable
Undefined global variable
Expected valid heap load
Invalid assignment target
Illegal type stored to heap view
Undeclared assignment target
Expected mutable variable in assignment
Type mismatch in assignment
Integer numeric literal out of range.
expected int/double?/float?
expected signed/unsigned/double?/float?
expected int
expected double or float?
operator ~ expects intish
Expected int
Constant multiple out of range
Integer multiply of expects int
expected doubles or floats
more than 2^20 additive values
illegal types for +
Expected intish for operator >>.
Expected intish for operator "<<".
Expected intish for operator ">>>".
Expected signed, unsigned, double, or float for operator "<".
Expected signed, unsigned, double, or float for operator "<=".
Expected signed, unsigned, double, or float for operator ">".
Expected signed, unsigned, double, or float for operator ">=".
Expected signed, unsigned, double, or float for operator "==".
Expected signed, unsigned, double, or float for operator "!=".
Expected intish for operator &.
Expected |0 type annotation for call
Expected intish for operator |.
Expected int in condition of ternary operator.
Type mismatch in ternary operator.
Expected mask literal
Expected power of 2 mask
Exceeded maximum function table size
Expected call table
Mask size mismatch
Expected function as call target
Bad function argument type
Imported function args must be type extern
Imported function can't be called as float
Expected callable function
Function use doesn't match definition
Heap access out of range
Expected shift of word size
Expected valid heap access shift
Expected heap access shift to match heap view
Expected intish index
Illegal conversion to float
break
const
default
switch
while
global_count_ < kMaxIdentifierCount
local_names_.size() < kMaxIdentifierCount
use asm
floatish|double?
float?|double?
extern
double?
double
intish
signed
fixnum
float?
float
<none>
) -> 
 /\ 
...) -> 
expected_size_ == assembler_->pc_offset() - start_offset_
Cannot grow external assembler buffer
StringToArrayIndex(&stream, index)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/ast/ast-value-factory.cc:186
anonymous
(anonymous function)
async
await
<computed>
.default
.for
.generator_object
.iterator
.promise
.result
.switch_tag
.catch
get 
meta
native
.new.target
next
#constructor
__proto__
set 
.this_function
throw
(new_string) != nullptr
(context function)
Smi::IsValid(module_request)
(intermediate value)
(var)
yield* 
(...)
(...
ImportCall(
super
enclosingSourceRanges->HasRange(SourceRangeKind::kContinuation)
no reason
Bailed out due to dependency change
Code generation failed
Cyclic object state detected by escape analysis
Function is being debugged
Optimized graph construction failed
Function is too big to be optimized
LiveEdit
Native function literal
Not enough virtual registers (regalloc)
Optimization disabled
Optimization is always disabled
32 bit value in register is not zero-extended
API call returned invalid object
Allocating non-empty packed array
Allocation is not double aligned
Expected optimized code cell or optimization sentinel
Expected undefined or cell in register
The function_data field should be a BytecodeArray on interpreter entry
Input string too long
Invalid bytecode
Cannot advance current bytecode, 
Invalid ElementsKind for InternalPackedArray
Invalid HandleScope level
Invalid jump table index
invalid parameters and registers in generator
Missing bytecode array from function
The object is not tagged
The object is tagged
Offset out of range
Operand is a smi
Operand is a smi and not a bound function
Operand is a smi and not a constructor
Operand is a smi and not a function
Operand is a smi and not a generator object
Operand is not a bound function
Operand is not a constructor
Operand is not a fixed array
Operand is not a function
Operand is not a generator object
Operand is not a smi
Promise already settled
Received invalid return address
Register did not match expected root
Register was clobbered
Return address not found in frame
Should not directly enter OSR-compiled function
Stack access below stack pointer
Stack frame types must match
Unaligned cell in write barrier
Unexpected ElementsKind in array constructor
Unexpected FPCR mode.
Unexpected runtime function id for the InvokeIntrinsic bytecode
Unexpected initial map for Array function
Unexpected initial map for InternalArray function
Unexpected level after return from api call
Unexpected negative value
Unexpectedly returned from dropping frames
Unexpectedly returned from a throw
Should not return after throwing a wasm trap
The stack pointer is not the expected value
Unexpected value
Unsupported module operation
Unsupported non-primitive compare
Wrong address or value passed to RecordWrite
Wrong number of arguments for intrinsic
Wrong value in code start register passed
Wrong context passed to function
Wrong number of arguments for InternalPackedArray
thread_in_wasm flag was already set
thread_in_wasm flag was not set
---- Start Profiling Data ----
---- End Profiling Data ----
unknown function
schedule for 
 (B0 entered 
 times)
block counts for 
block B
() {}
Bootstrapping
EmptyObjectPrototype
[Symbol.iterator]
GeneratorFunction
Generator
GeneratorFunction with name
GeneratorFunction with home object
GeneratorFunction with name and home object
[Symbol.asyncIterator]
Async-from-Sync Iterator
AsyncGeneratorFunction
AsyncGenerator
AsyncGeneratorFunction with name
AsyncGeneratorFunction with home object
AsyncGeneratorFunction with name and home object
AsyncFunction
AsyncFunction with name
AsyncFunction with home object
AsyncFunction with name and home object
callable Proxy
constructor Proxy
assign
getOwnPropertyDescriptor
getOwnPropertyDescriptors
getOwnPropertyNames
getOwnPropertySymbols
preventExtensions
seal
create
defineProperties
defineProperty
freeze
getPrototypeOf
setPrototypeOf
isExtensible
isFrozen
isSealed
keys
values
__defineGetter__
__defineSetter__
hasOwnProperty
__lookupGetter__
__lookupSetter__
isPrototypeOf
propertyIsEnumerable
toString
valueOf
toLocaleString
apply
[Symbol.hasInstance]
Array
isArray
concat
copyWithin
find
findIndex
lastIndexOf
push
shift
unshift
slice
sort
splice
includes
indexOf
join
forEach
filter
flat
flatMap
every
some
reduce
reduceRight
Number
toExponential
toFixed
toPrecision
isFinite
isInteger
isNaN
isSafeInteger
parseFloat
parseInt
MAX_VALUE
MIN_VALUE
NEGATIVE_INFINITY
POSITIVE_INFINITY
MAX_SAFE_INTEGER
MIN_SAFE_INTEGER
EPSILON
Boolean
String
fromCharCode
fromCodePoint
anchor
blink
bold
charAt
charCodeAt
codePointAt
endsWith
fontcolor
fontsize
fixed
italics
localeCompare
match
normalize
padEnd
padStart
replace
search
small
split
strike
substr
substring
startsWith
trim
trimStart
trimLeft
trimEnd
trimRight
toLocaleLowerCase
toLocaleUpperCase
toLowerCase
toUpperCase
String Iterator
StringIterator
Symbol
keyFor
asyncIterator
hasInstance
isConcatSpreadable
species
toPrimitive
toStringTag
unscopables
[Symbol.toPrimitive]
Date
toDateString
toTimeString
toISOString
toUTCString
toGMTString
getDate
setDate
getDay
getFullYear
setFullYear
getHours
setHours
getMilliseconds
setMilliseconds
getMinutes
setMinutes
getMonth
setMonth
getSeconds
setSeconds
getTime
setTime
getTimezoneOffset
getUTCDate
setUTCDate
getUTCDay
getUTCFullYear
setUTCFullYear
getUTCHours
setUTCHours
getUTCMilliseconds
setUTCMilliseconds
getUTCMinutes
setUTCMinutes
getUTCMonth
setUTCMonth
getUTCSeconds
setUTCSeconds
getYear
setYear
toJSON
toLocaleDateString
toLocaleTimeString
Promise
race
reject
then
finally
exec
compile
test
[Symbol.match]
[Symbol.replace]
[Symbol.search]
[Symbol.split]
lastMatch
lastParen
leftContext
rightContext
JSON
stringify
acosh
asinh
atanh
cbrt
expm1
cosh
hypot
log1p
log2
log10
random
round
sinh
tanh
trunc
group
groupCollapsed
groupEnd
countReset
time
timeLog
timeStamp
Object
Intl
getCanonicalLocales
DateTimeFormat
supportedLocalesOf
resolvedOptions
formatToParts
NumberFormat
Collator
v8BreakIterator
PluralRules
select
RelativeTimeFormat
Intl.RelativeTimeFormat
format
ListFormat
Intl.ListFormat
arrayBufferConstructor_DoNotInitialize
load
store
compareExchange
isLockFree
wait
wake
TypedArray
subarray
Uint8ClampedArray
BigUint64Array
BigInt64Array
DataView
getInt8
setInt8
getUint8
setUint8
getInt16
setInt16
getUint16
setUint16
getInt32
setInt32
getUint32
setUint32
getFloat32
setFloat32
getFloat64
setFloat64
getBigInt64
setBigInt64
getBigUint64
setBigUint64
delete
BigInt
asUintN
asIntN
WeakMap
WeakSet
Proxy
revocable
Reflect
deleteProperty
construct
ownKeys
IsConstructor
FastAliasedArguments
SlowAliasedArguments
JSObject::SetPrototype(result, typed_array_function, false, kDontThrow) .FromJust()
BYTES_PER_ELEMENT
JSObject::SetPrototype(prototype, typed_array_prototype, false, kDontThrow) .FromJust()
SetIterator
JS_SET_KEY_VALUE_ITERATOR_TYPE
MapIterator
JS_MAP_KEY_VALUE_ITERATOR_TYPE
JS_MAP_VALUE_ITERATOR_TYPE
CallSite
getColumnNumber
getEvalOrigin
getFileName
getFunction
getFunctionName
getLineNumber
getMethodName
getPosition
getPromiseIndex
getScriptNameOrSourceURL
getThis
getTypeName
isAsync
isConstructor
isEval
isNative
isPromiseAll
isToplevel
SharedArrayBuffer
Atomics
matchAll
[Symbol.matchAll]
RegExp String Iterator
RegExpStringIterator
FinalizationGroup
register
unregister
cleanupSome
deref
WeakRef
JSFinalizationGroupCleanupIterator
allSettled
formatRange
formatRangeToParts
Locale
Intl.Locale
maximize
minimize
Segmenter
Intl.Segmenter
segment
following
preceding
fromEntries
isView
InternalArray
OptimizeInternalPackedArrayPrototypeForAdding
InternalPackedArray
createPrivateSymbol
uncurryThis
markPromiseAsHandled
promiseState
kPROMISE_PENDING
kPROMISE_FULFILLED
kPROMISE_REJECTED
createPromise
rejectPromise
resolvePromise
decodeURI
decodeURIComponent
encodeURI
encodeURIComponent
escape
unescape
length->IsSmi()
Smi::ToInt(length) == 0
proto->HasSmiOrObjectElements()
v8/free-buffer
v8/gc
v8/externalize
v8/statistics
v8/trigger-failure
v8/ignition-statistics
v8::Context::New()
Cannot find required extension
Circular extension dependency
Error installing extension '%s'.
[Initializing context from scratch took %0.3f ms]
static_cast<int>(elements_kind) < kElementsKindCount
static_cast<unsigned>(value) < 256
IsJSObjectMap()
0 == value
0 <= value
static_cast<unsigned>(value) <= 255
static_cast<unsigned>(number) <= static_cast<unsigned>(kMaxNumberOfDescriptors)
static_cast<unsigned>(unused_in_property_array) < JSObject::kFieldsAdded
captureStackTrace
JSReceiver::SetPrototype(error_fun, global_error, false, kThrowOnError) .FromMaybe(false)
JSReceiver::SetPrototype(prototype, handle(global_error->prototype(), isolate), false, kThrowOnError) .FromMaybe(false)
LookupIterator::ACCESS_CHECK != it.state()
native function freeBuffer();
native function %s();
V8.Builtin_HandleApiCall
V8.Builtin_HandleApiCallAsFunction
call non-function
V8.Builtin_HandleApiCallAsConstructor
V8.Builtin_ArrayPrototypeFill
DoubleToUint32IfEqualToSelf(start_index, &start)
DoubleToUint32IfEqualToSelf(end_index, &end)
V8.Builtin_ArrayPush
V8.Builtin_ArrayPop
V8.Builtin_ArrayShift
V8.Builtin_ArrayUnshift
V8.Builtin_ArrayConcat
Array.prototype.concat
V8.Builtin_ArrayBufferConstructor
V8.Builtin_ArrayBufferConstructor_DoNotInitialize
V8.Builtin_ArrayBufferPrototypeGetByteLength
get ArrayBuffer.prototype.byteLength
V8.Builtin_SharedArrayBufferPrototypeGetByteLength
get SharedArrayBuffer.prototype.byteLength
V8.Builtin_ArrayBufferIsView
V8.Builtin_SharedArrayBufferPrototypeSlice
SharedArrayBuffer.prototype.slice
TryNumberToSize(*first_obj, &first_size)
TryNumberToSize(*new_len_obj, &new_len_size)
V8.Builtin_ArrayBufferPrototypeSlice
ArrayBuffer.prototype.slice
V8.Builtin_BigIntConstructor
V8.Builtin_BigIntAsUintN
V8.Builtin_BigIntAsIntN
V8.Builtin_BigIntPrototypeToLocaleString
BigInt.prototype.toLocaleString
V8.Builtin_BigIntPrototypeToString
BigInt.prototype.toString
V8.Builtin_BigIntPrototypeValueOf
BigInt.prototype.valueOf
V8.Builtin_BooleanConstructor
V8.Builtin_CallSitePrototypeGetColumnNumber
V8.Builtin_CallSitePrototypeGetEvalOrigin
V8.Builtin_CallSitePrototypeGetFileName
V8.Builtin_CallSitePrototypeGetFunction
V8.Builtin_CallSitePrototypeGetFunctionName
V8.Builtin_CallSitePrototypeGetLineNumber
V8.Builtin_CallSitePrototypeGetMethodName
V8.Builtin_CallSitePrototypeGetPosition
V8.Builtin_CallSitePrototypeGetPromiseIndex
V8.Builtin_CallSitePrototypeGetScriptNameOrSourceURL
getScriptNameOrSourceUrl
V8.Builtin_CallSitePrototypeGetThis
V8.Builtin_CallSitePrototypeGetTypeName
V8.Builtin_CallSitePrototypeIsAsync
V8.Builtin_CallSitePrototypeIsConstructor
V8.Builtin_CallSitePrototypeIsEval
V8.Builtin_CallSitePrototypeIsNative
V8.Builtin_CallSitePrototypeIsPromiseAll
V8.Builtin_CallSitePrototypeIsToplevel
V8.Builtin_CallSitePrototypeToString
V8.Builtin_MapPrototypeClear
Map.prototype.clear
V8.Builtin_SetPrototypeClear
Set.prototype.clear
V8.Builtin_ConsoleDebug
!isolate->has_pending_exception()
!isolate->has_scheduled_exception()
V8.Builtin_ConsoleError
V8.Builtin_ConsoleInfo
V8.Builtin_ConsoleLog
V8.Builtin_ConsoleWarn
V8.Builtin_ConsoleDir
V8.Builtin_ConsoleDirXml
V8.Builtin_ConsoleTable
V8.Builtin_ConsoleTrace
V8.Builtin_ConsoleGroup
V8.Builtin_ConsoleGroupCollapsed
V8.Builtin_ConsoleGroupEnd
V8.Builtin_ConsoleClear
V8.Builtin_ConsoleCount
V8.Builtin_ConsoleCountReset
V8.Builtin_ConsoleAssert
V8.Builtin_ConsoleProfile
V8.Builtin_ConsoleProfileEnd
V8.Builtin_ConsoleTimeLog
V8.Builtin_ConsoleTime
V8.Builtin_ConsoleTimeEnd
V8.Builtin_ConsoleTimeStamp
V8.Builtin_ConsoleContext
Context
dirXml
V8.Builtin_DataViewConstructor
V8.Builtin_DateConstructor
Invalid Date
%s %s %02d %05d
%s %s %02d %04d
%02d:%02d:%02d GMT%c%02d%02d (%s)
%s %s %02d %05d %02d:%02d:%02d GMT%c%02d%02d (%s)
%s %s %02d %04d %02d:%02d:%02d GMT%c%02d%02d (%s)
V8.Builtin_DateNow
V8.Builtin_DateParse
V8.Builtin_DateUTC
V8.Builtin_DatePrototypeSetDate
Date.prototype.setDate
V8.Builtin_DatePrototypeSetFullYear
Date.prototype.setFullYear
V8.Builtin_DatePrototypeSetHours
Date.prototype.setHours
V8.Builtin_DatePrototypeSetMilliseconds
Date.prototype.setMilliseconds
V8.Builtin_DatePrototypeSetMinutes
Date.prototype.setMinutes
V8.Builtin_DatePrototypeSetMonth
Date.prototype.setMonth
V8.Builtin_DatePrototypeSetSeconds
Date.prototype.setSeconds
V8.Builtin_DatePrototypeSetTime
Date.prototype.setTime
V8.Builtin_DatePrototypeSetUTCDate
Date.prototype.setUTCDate
V8.Builtin_DatePrototypeSetUTCFullYear
Date.prototype.setUTCFullYear
V8.Builtin_DatePrototypeSetUTCHours
Date.prototype.setUTCHours
V8.Builtin_DatePrototypeSetUTCMilliseconds
Date.prototype.setUTCMilliseconds
V8.Builtin_DatePrototypeSetUTCMinutes
Date.prototype.setUTCMinutes
V8.Builtin_DatePrototypeSetUTCMonth
Date.prototype.setUTCMonth
V8.Builtin_DatePrototypeSetUTCSeconds
Date.prototype.setUTCSeconds
V8.Builtin_DatePrototypeToDateString
Date.prototype.toDateString
V8.Builtin_DatePrototypeToISOString
Date.prototype.toISOString
%04d-%02d-%02dT%02d:%02d:%02d.%03dZ
-%06d-%02d-%02dT%02d:%02d:%02d.%03dZ
+%06d-%02d-%02dT%02d:%02d:%02d.%03dZ
V8.Builtin_DatePrototypeToString
Date.prototype.toString
V8.Builtin_DatePrototypeToTimeString
Date.prototype.toTimeString
V8.Builtin_DatePrototypeToLocaleDateString
Date.prototype.toLocaleDateString
V8.Builtin_DatePrototypeToLocaleString
Date.prototype.toLocaleString
V8.Builtin_DatePrototypeToLocaleTimeString
Date.prototype.toLocaleTimeString
V8.Builtin_DatePrototypeToUTCString
Date.prototype.toUTCString
%s, %02d %s %05d %02d:%02d:%02d GMT
%s, %02d %s %04d %02d:%02d:%02d GMT
V8.Builtin_DatePrototypeGetYear
Date.prototype.getYear
V8.Builtin_DatePrototypeSetYear
Date.prototype.setYear
V8.Builtin_DatePrototypeToJson
V8.Builtin_ErrorConstructor
V8.Builtin_ErrorCaptureStackTrace
V8.Builtin_ErrorPrototypeToString
V8.Builtin_MakeError
V8.Builtin_MakeRangeError
V8.Builtin_MakeSyntaxError
V8.Builtin_MakeTypeError
V8.Builtin_MakeURIError
V8.Builtin_ExtrasUtilsUncurryThis
V8.Builtin_ExtrasUtilsCallReflectApply
V8.Builtin_FunctionConstructor
V8.Builtin_GeneratorFunctionConstructor
function*
V8.Builtin_AsyncFunctionConstructor
async function
V8.Builtin_AsyncGeneratorFunctionConstructor
async function*
V8.Builtin_FunctionPrototypeBind
V8.Builtin_FunctionPrototypeToString
Function.prototype.toString
V8.Builtin_GlobalDecodeURI
V8.Builtin_GlobalDecodeURIComponent
V8.Builtin_GlobalEncodeURI
V8.Builtin_GlobalEncodeURIComponent
V8.Builtin_GlobalEscape
V8.Builtin_GlobalUnescape
V8.Builtin_GlobalEval
V8.Builtin_Illegal
V8.Builtin_EmptyFunction
V8.Builtin_UnsupportedThrower
V8.Builtin_StrictPoisonPillThrower
V8.Builtin_StringPrototypeToUpperCaseIntl
String.prototype.toUpperCase
V8.Builtin_StringPrototypeNormalizeIntl
String.prototype.normalize
V8.Builtin_V8BreakIteratorSupportedLocalesOf
Intl.v8BreakIterator.supportedLocalesOf
V8.Builtin_NumberFormatSupportedLocalesOf
Intl.NumberFormat.supportedLocalesOf
V8.Builtin_NumberFormatPrototypeFormatToParts
Intl.NumberFormat.prototype.formatToParts
V8.Builtin_DateTimeFormatPrototypeResolvedOptions
Intl.DateTimeFormat.prototype.resolvedOptions
V8.Builtin_DateTimeFormatSupportedLocalesOf
Intl.DateTimeFormat.supportedLocalesOf
V8.Builtin_DateTimeFormatPrototypeFormatToParts
Intl.DateTimeFormat.prototype.formatToParts
V8.Builtin_DateTimeFormatPrototypeFormatRange
Intl.DateTimeFormat.prototype.formatRange
V8.Builtin_DateTimeFormatPrototypeFormatRangeToParts
Intl.DateTimeFormat.prototype.formatRangeToParts
V8.Builtin_NumberFormatConstructor
Intl.NumberFormat
success.FromJust()
V8.Builtin_NumberFormatPrototypeResolvedOptions
Intl.NumberFormat.prototype.resolvedOptions
V8.Builtin_NumberFormatPrototypeFormatNumber
get Intl.NumberFormat.prototype.format
V8.Builtin_NumberFormatInternalFormatNumber
(icu_number_format) != nullptr
V8.Builtin_DateTimeFormatConstructor
Intl.DateTimeFormat
V8.Builtin_DateTimeFormatPrototypeFormat
get Intl.DateTimeFormat.prototype.format
V8.Builtin_DateTimeFormatInternalFormat
V8.Builtin_IntlGetCanonicalLocales
V8.Builtin_ListFormatConstructor
V8.Builtin_ListFormatPrototypeResolvedOptions
Intl.ListFormat.prototype.resolvedOptions
V8.Builtin_ListFormatSupportedLocalesOf
Intl.ListFormat.supportedLocalesOf
V8.Builtin_LocaleConstructor
V8.Builtin_LocalePrototypeMaximize
Intl.Locale.prototype.maximize
V8.Builtin_LocalePrototypeMinimize
Intl.Locale.prototype.minimize
V8.Builtin_RelativeTimeFormatSupportedLocalesOf
Intl.RelativeTimeFormat.supportedLocalesOf
V8.Builtin_RelativeTimeFormatPrototypeFormat
Intl.RelativeTimeFormat.prototype.format
V8.Builtin_RelativeTimeFormatPrototypeFormatToParts
Intl.RelativeTimeFormat.prototype.formatToParts
V8.Builtin_LocalePrototypeLanguage
Intl.Locale.prototype.language
V8.Builtin_LocalePrototypeScript
Intl.Locale.prototype.script
V8.Builtin_LocalePrototypeRegion
Intl.Locale.prototype.region
V8.Builtin_LocalePrototypeBaseName
Intl.Locale.prototype.baseName
V8.Builtin_LocalePrototypeCalendar
Intl.Locale.prototype.calendar
V8.Builtin_LocalePrototypeCaseFirst
Intl.Locale.prototype.caseFirst
V8.Builtin_LocalePrototypeCollation
Intl.Locale.prototype.collation
V8.Builtin_LocalePrototypeHourCycle
Intl.Locale.prototype.hourCycle
V8.Builtin_LocalePrototypeNumeric
Intl.Locale.prototype.numeric
V8.Builtin_LocalePrototypeNumberingSystem
Intl.Locale.prototype.numberingSystem
V8.Builtin_LocalePrototypeToString
Intl.Locale.prototype.toString
V8.Builtin_RelativeTimeFormatConstructor
V8.Builtin_RelativeTimeFormatPrototypeResolvedOptions
Intl.RelativeTimeFormat.prototype.resolvedOptions
V8.Builtin_StringPrototypeToLocaleLowerCase
String.prototype.toLocaleLowerCase
V8.Builtin_StringPrototypeToLocaleUpperCase
String.prototype.toLocaleUpperCase
V8.Builtin_PluralRulesConstructor
Intl.PluralRules
V8.Builtin_PluralRulesPrototypeResolvedOptions
Intl.PluralRules.prototype.resolvedOptions
V8.Builtin_PluralRulesPrototypeSelect
Intl.PluralRules.prototype.select
V8.Builtin_PluralRulesSupportedLocalesOf
Intl.PluralRules.supportedLocalesOf
V8.Builtin_CollatorConstructor
V8.Builtin_CollatorPrototypeResolvedOptions
Intl.Collator.prototype.resolvedOptions
V8.Builtin_CollatorSupportedLocalesOf
Intl.Collator.supportedLocalesOf
V8.Builtin_CollatorPrototypeCompare
get Intl.Collator.prototype.compare
V8.Builtin_CollatorInternalCompare
(icu_collator) != nullptr
V8.Builtin_SegmentIteratorPrototypeBreakType
get %SegmentIteratorPrototype%.breakType
V8.Builtin_SegmentIteratorPrototypeFollowing
%SegmentIteratorPrototype%.following
V8.Builtin_SegmentIteratorPrototypeNext
%SegmentIteratorPrototype%.next
V8.Builtin_SegmentIteratorPrototypePreceding
%SegmentIteratorPrototype%.preceding
V8.Builtin_SegmentIteratorPrototypeIndex
get %SegmentIteratorPrototype%.index
V8.Builtin_SegmenterConstructor
V8.Builtin_SegmenterSupportedLocalesOf
Intl.Segmenter.supportedLocalesOf
V8.Builtin_SegmenterPrototypeResolvedOptions
Intl.Segmenter.prototype.resolvedOptions
V8.Builtin_SegmenterPrototypeSegment
Intl.Segmenter.prototype.segment
V8.Builtin_V8BreakIteratorConstructor
V8.Builtin_V8BreakIteratorPrototypeResolvedOptions
Intl.v8BreakIterator.prototype.resolvedOptions
V8.Builtin_V8BreakIteratorPrototypeAdoptText
get Intl.v8BreakIterator.prototype.adoptText
V8.Builtin_V8BreakIteratorInternalAdoptText
V8.Builtin_V8BreakIteratorPrototypeFirst
get Intl.v8BreakIterator.prototype.first
V8.Builtin_V8BreakIteratorInternalFirst
V8.Builtin_V8BreakIteratorPrototypeNext
get Intl.v8BreakIterator.prototype.next
V8.Builtin_V8BreakIteratorInternalNext
V8.Builtin_V8BreakIteratorPrototypeCurrent
get Intl.v8BreakIterator.prototype.current
V8.Builtin_V8BreakIteratorInternalCurrent
V8.Builtin_V8BreakIteratorPrototypeBreakType
get Intl.v8BreakIterator.prototype.breakType
V8.Builtin_V8BreakIteratorInternalBreakType
V8.Builtin_JsonParse
V8.Builtin_JsonStringify
V8.Builtin_MathHypot
disabled-by-default-v8.runtime
V8.Builtin_NumberPrototypeToExponential
Number.prototype.toExponential
toExponential()
V8.Builtin_NumberPrototypeToFixed
Number.prototype.toFixed
toFixed() digits
V8.Builtin_NumberPrototypeToLocaleString
Number.prototype.toLocaleString
V8.Builtin_NumberPrototypeToPrecision
Number.prototype.toPrecision
V8.Builtin_NumberPrototypeToString
Number.prototype.toString
0123456789abcdefghijklmnopqrstuvwxyz
V8.Builtin_ObjectPrototypePropertyIsEnumerable
V8.Builtin_ObjectDefineProperties
V8.Builtin_ObjectDefineProperty
V8.Builtin_ObjectDefineGetter
V8.Builtin_ObjectDefineSetter
V8.Builtin_ObjectLookupGetter
V8.Builtin_ObjectLookupSetter
V8.Builtin_ObjectFreeze
V8.Builtin_ObjectGetPrototypeOf
V8.Builtin_ObjectSetPrototypeOf
Object.setPrototypeOf
V8.Builtin_ObjectPrototypeGetProto
V8.Builtin_ObjectPrototypeSetProto
set Object.prototype.__proto__
V8.Builtin_ObjectGetOwnPropertySymbols
V8.Builtin_ObjectIsExtensible
V8.Builtin_ObjectIsFrozen
V8.Builtin_ObjectIsSealed
V8.Builtin_ObjectGetOwnPropertyDescriptors
V8.Builtin_ObjectPreventExtensions
V8.Builtin_ObjectSeal
V8.Builtin_IsPromise
V8.Builtin_ReflectDefineProperty
Reflect.defineProperty
V8.Builtin_ReflectDeleteProperty
Reflect.deleteProperty
V8.Builtin_ReflectGet
Reflect.get
V8.Builtin_ReflectGetOwnPropertyDescriptor
Reflect.getOwnPropertyDescriptor
V8.Builtin_ReflectGetPrototypeOf
Reflect.getPrototypeOf
V8.Builtin_ReflectIsExtensible
Reflect.isExtensible
V8.Builtin_ReflectOwnKeys
Reflect.ownKeys
V8.Builtin_ReflectPreventExtensions
Reflect.preventExtensions
V8.Builtin_ReflectSet
Reflect.set
V8.Builtin_ReflectSetPrototypeOf
Reflect.setPrototypeOf
V8.Builtin_RegExpPrototypeToString
RegExp.prototype.toString
V8.Builtin_RegExpCapture1Getter
V8.Builtin_RegExpCapture2Getter
V8.Builtin_RegExpCapture3Getter
V8.Builtin_RegExpCapture4Getter
V8.Builtin_RegExpCapture5Getter
V8.Builtin_RegExpCapture6Getter
V8.Builtin_RegExpCapture7Getter
V8.Builtin_RegExpCapture8Getter
V8.Builtin_RegExpCapture9Getter
V8.Builtin_RegExpInputGetter
V8.Builtin_RegExpInputSetter
V8.Builtin_RegExpLastMatchGetter
V8.Builtin_RegExpLastParenGetter
V8.Builtin_RegExpLeftContextGetter
V8.Builtin_RegExpRightContextGetter
V8.Builtin_AtomicsIsLockFree
V8.Builtin_AtomicsWake
V8.Builtin_AtomicsNotify
V8.Builtin_AtomicsWait
V8.Builtin_StringFromCodePoint
V8.Builtin_StringPrototypeLastIndexOf
V8.Builtin_StringPrototypeLocaleCompare
String.prototype.localeCompare
V8.Builtin_StringRaw
V8.Builtin_SymbolConstructor
V8.Builtin_SymbolFor
V8.Builtin_SymbolKeyFor
V8.Builtin_IsTraceCategoryEnabled
V8.Builtin_Trace
V8.Builtin_TypedArrayPrototypeBuffer
get %TypedArray%.prototype.buffer
V8.Builtin_TypedArrayPrototypeCopyWithin
%TypedArray%.prototype.copyWithin
V8.Builtin_TypedArrayPrototypeFill
%TypedArray%.prototype.fill
V8.Builtin_TypedArrayPrototypeIncludes
%TypedArray%.prototype.includes
V8.Builtin_TypedArrayPrototypeIndexOf
%TypedArray%.prototype.indexOf
V8.Builtin_TypedArrayPrototypeLastIndexOf
%TypedArray%.prototype.lastIndexOf
V8.Builtin_TypedArrayPrototypeReverse
%TypedArray%.prototype.reverse
V8.Builtin_FinalizationGroupConstructor
V8.Builtin_FinalizationGroupRegister
FinalizationGroup.prototype.register
V8.Builtin_FinalizationGroupUnregister
FinalizationGroup.prototype.unregister
V8.Builtin_FinalizationGroupCleanupSome
FinalizationGroup.prototype.cleanupSome
V8.Builtin_FinalizationGroupCleanupIteratorNext
V8.Builtin_WeakRefConstructor
V8.Builtin_WeakRefDeref
WeakRef.prototype.deref
%s Builtin, %s, %d
RecordWrite
EphemeronKeyBarrier
AdaptorWithExitFrame
AdaptorWithBuiltinExitFrame
ArgumentsAdaptorTrampoline
CallFunction_ReceiverIsNullOrUndefined
CallFunction_ReceiverIsNotNullOrUndefined
CallFunction_ReceiverIsAny
CallBoundFunction
Call_ReceiverIsNullOrUndefined
Call_ReceiverIsNotNullOrUndefined
Call_ReceiverIsAny
CallProxy
CallVarargs
CallWithSpread
CallWithArrayLike
CallForwardVarargs
CallFunctionForwardVarargs
CallFunctionTemplate_CheckAccess
CallFunctionTemplate_CheckCompatibleReceiver
CallFunctionTemplate_CheckAccessAndCompatibleReceiver
ConstructFunction
ConstructBoundFunction
ConstructedNonConstructable
Construct
ConstructVarargs
ConstructWithSpread
ConstructWithArrayLike
ConstructForwardVarargs
ConstructFunctionForwardVarargs
JSConstructStubGeneric
JSBuiltinsConstructStub
FastNewObject
FastNewClosure
FastNewFunctionContextEval
FastNewFunctionContextFunction
CreateRegExpLiteral
CreateEmptyArrayLiteral
CreateShallowArrayLiteral
CreateShallowObjectLiteral
ConstructProxy
JSEntry
JSConstructEntry
JSRunMicrotasksEntry
JSEntryTrampoline
JSConstructEntryTrampoline
ResumeGeneratorTrampoline
StringCharAt
StringCodePointAtUTF16
StringCodePointAtUTF32
StringEqual
StringGreaterThan
StringGreaterThanOrEqual
StringIndexOf
StringLessThan
StringLessThanOrEqual
StringSubstring
OrderedHashTableHealIndex
InterpreterEntryTrampoline
InterpreterPushArgsThenCall
InterpreterPushUndefinedAndArgsThenCall
InterpreterPushArgsThenCallWithFinalSpread
InterpreterPushArgsThenConstruct
InterpreterPushArgsThenConstructArrayFunction
InterpreterPushArgsThenConstructWithFinalSpread
InterpreterEnterBytecodeAdvance
InterpreterEnterBytecodeDispatch
InterpreterOnStackReplacement
CompileLazy
CompileLazyDeoptimizedCode
InstantiateAsmJs
NotifyDeoptimized
ContinueToCodeStubBuiltin
ContinueToCodeStubBuiltinWithResult
ContinueToJavaScriptBuiltin
ContinueToJavaScriptBuiltinWithResult
CallApiCallback
CallApiGetter
HandleApiCall
HandleApiCallAsFunction
HandleApiCallAsConstructor
AllocateInYoungGeneration
AllocateInOldGeneration
CopyFastSmiOrObjectElements
GrowFastDoubleElements
GrowFastSmiOrObjectElements
NewArgumentsElements
DebugBreakTrampoline
FrameDropperTrampoline
HandleDebuggerStatement
ToObject
ToBoolean
OrdinaryToPrimitive_Number
OrdinaryToPrimitive_String
NonPrimitiveToPrimitive_Default
NonPrimitiveToPrimitive_Number
NonPrimitiveToPrimitive_String
StringToNumber
ToName
NonNumberToNumber
NonNumberToNumeric
ToNumber
ToNumberConvertBigInt
ToNumeric
NumberToString
ToString
ToInteger
ToInteger_TruncateMinusZero
ToLength
Typeof
GetSuperConstructor
BigIntToI64
I64ToBigInt
ToBooleanLazyDeoptContinuation
KeyedLoadIC_PolymorphicName
KeyedLoadIC_Slow
KeyedStoreIC_Megamorphic
KeyedStoreIC_Slow
LoadGlobalIC_Slow
LoadIC_FunctionPrototype
LoadIC_Slow
LoadIC_StringLength
LoadIC_StringWrapperLength
LoadIC_Uninitialized
StoreGlobalIC_Slow
StoreIC_Uninitialized
StoreInArrayLiteralIC_Slow
KeyedLoadIC_SloppyArguments
LoadIndexedInterceptorIC
StoreInterceptorIC
KeyedStoreIC_SloppyArguments_Standard
KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
StoreInArrayLiteralIC_Slow_Standard
StoreFastElementIC_Standard
StoreFastElementIC_GrowNoTransitionHandleCOW
StoreFastElementIC_NoTransitionIgnoreOOB
StoreFastElementIC_NoTransitionHandleCOW
StoreInArrayLiteralIC_Slow_GrowNoTransitionHandleCOW
StoreInArrayLiteralIC_Slow_NoTransitionIgnoreOOB
StoreInArrayLiteralIC_Slow_NoTransitionHandleCOW
KeyedStoreIC_Slow_Standard
KeyedStoreIC_Slow_GrowNoTransitionHandleCOW
KeyedStoreIC_Slow_NoTransitionIgnoreOOB
KeyedStoreIC_Slow_NoTransitionHandleCOW
ElementsTransitionAndStore_Standard
ElementsTransitionAndStore_GrowNoTransitionHandleCOW
ElementsTransitionAndStore_NoTransitionIgnoreOOB
ElementsTransitionAndStore_NoTransitionHandleCOW
KeyedHasIC_PolymorphicName
KeyedHasIC_SloppyArguments
HasIndexedInterceptorIC
HasIC_Slow
EnqueueMicrotask
RunMicrotasksTrampoline
RunMicrotasks
HasProperty
DeleteProperty
Abort
AbortJS
EmptyFunction
Illegal
StrictPoisonPillThrower
UnsupportedThrower
ReturnReceiver
ArrayConstructor
ArrayConstructorImpl
ArrayNoArgumentConstructor_PackedSmi_DontOverride
ArrayNoArgumentConstructor_HoleySmi_DontOverride
ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
ArrayNoArgumentConstructor_Packed_DisableAllocationSites
ArrayNoArgumentConstructor_Holey_DisableAllocationSites
ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
ArraySingleArgumentConstructor_PackedSmi_DontOverride
ArraySingleArgumentConstructor_HoleySmi_DontOverride
ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
ArraySingleArgumentConstructor_Packed_DisableAllocationSites
ArraySingleArgumentConstructor_Holey_DisableAllocationSites
ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
ArrayNArgumentsConstructor
InternalArrayConstructor
InternalArrayConstructorImpl
InternalArrayNoArgumentConstructor_Packed
ArrayConcat
ArrayIsArray
ArrayPrototypeFill
ArrayFrom
ArrayIncludesSmiOrObject
ArrayIncludesPackedDoubles
ArrayIncludesHoleyDoubles
ArrayIncludes
ArrayIndexOfSmiOrObject
ArrayIndexOfPackedDoubles
ArrayIndexOfHoleyDoubles
ArrayIndexOf
ArrayPop
ArrayPrototypePop
ArrayPush
ArrayPrototypePush
ArrayShift
ArrayUnshift
CloneFastJSArray
CloneFastJSArrayFillingHoles
ExtractFastJSArray
ArrayPrototypeEntries
ArrayPrototypeKeys
ArrayPrototypeValues
ArrayIteratorPrototypeNext
FlattenIntoArray
FlatMapIntoArray
ArrayPrototypeFlat
ArrayPrototypeFlatMap
ArrayBufferConstructor
ArrayBufferConstructor_DoNotInitialize
ArrayBufferPrototypeGetByteLength
ArrayBufferIsView
ArrayBufferPrototypeSlice
AsyncFunctionEnter
AsyncFunctionReject
AsyncFunctionResolve
AsyncFunctionLazyDeoptContinuation
AsyncFunctionAwaitCaught
AsyncFunctionAwaitUncaught
AsyncFunctionAwaitRejectClosure
AsyncFunctionAwaitResolveClosure
BigIntConstructor
BigIntAsUintN
BigIntAsIntN
BigIntPrototypeToLocaleString
BigIntPrototypeToString
BigIntPrototypeValueOf
BooleanConstructor
BooleanPrototypeToString
BooleanPrototypeValueOf
CallSitePrototypeGetColumnNumber
CallSitePrototypeGetEvalOrigin
CallSitePrototypeGetFileName
CallSitePrototypeGetFunction
CallSitePrototypeGetFunctionName
CallSitePrototypeGetLineNumber
CallSitePrototypeGetMethodName
CallSitePrototypeGetPosition
CallSitePrototypeGetPromiseIndex
CallSitePrototypeGetScriptNameOrSourceURL
CallSitePrototypeGetThis
CallSitePrototypeGetTypeName
CallSitePrototypeIsAsync
CallSitePrototypeIsConstructor
CallSitePrototypeIsEval
CallSitePrototypeIsNative
CallSitePrototypeIsPromiseAll
CallSitePrototypeIsToplevel
CallSitePrototypeToString
ConsoleDebug
ConsoleError
ConsoleInfo
ConsoleLog
ConsoleWarn
ConsoleDir
ConsoleDirXml
ConsoleTable
ConsoleTrace
ConsoleGroup
ConsoleGroupCollapsed
ConsoleGroupEnd
ConsoleClear
ConsoleCount
ConsoleCountReset
ConsoleAssert
FastConsoleAssert
ConsoleProfile
ConsoleProfileEnd
ConsoleTime
ConsoleTimeLog
ConsoleTimeEnd
ConsoleTimeStamp
ConsoleContext
DataViewConstructor
DateConstructor
DatePrototypeGetDate
DatePrototypeGetDay
DatePrototypeGetFullYear
DatePrototypeGetHours
DatePrototypeGetMilliseconds
DatePrototypeGetMinutes
DatePrototypeGetMonth
DatePrototypeGetSeconds
DatePrototypeGetTime
DatePrototypeGetTimezoneOffset
DatePrototypeGetUTCDate
DatePrototypeGetUTCDay
DatePrototypeGetUTCFullYear
DatePrototypeGetUTCHours
DatePrototypeGetUTCMilliseconds
DatePrototypeGetUTCMinutes
DatePrototypeGetUTCMonth
DatePrototypeGetUTCSeconds
DatePrototypeValueOf
DatePrototypeToPrimitive
DatePrototypeGetYear
DatePrototypeSetYear
DateNow
DateParse
DatePrototypeSetDate
DatePrototypeSetFullYear
DatePrototypeSetHours
DatePrototypeSetMilliseconds
DatePrototypeSetMinutes
DatePrototypeSetMonth
DatePrototypeSetSeconds
DatePrototypeSetTime
DatePrototypeSetUTCDate
DatePrototypeSetUTCFullYear
DatePrototypeSetUTCHours
DatePrototypeSetUTCMilliseconds
DatePrototypeSetUTCMinutes
DatePrototypeSetUTCMonth
DatePrototypeSetUTCSeconds
DatePrototypeToDateString
DatePrototypeToISOString
DatePrototypeToUTCString
DatePrototypeToString
DatePrototypeToTimeString
DatePrototypeToJson
DateUTC
ErrorConstructor
ErrorCaptureStackTrace
ErrorPrototypeToString
MakeError
MakeRangeError
MakeSyntaxError
MakeTypeError
MakeURIError
ExtrasUtilsUncurryThis
ExtrasUtilsCallReflectApply
FunctionConstructor
FunctionPrototypeApply
FunctionPrototypeBind
FastFunctionPrototypeBind
FunctionPrototypeCall
FunctionPrototypeHasInstance
FunctionPrototypeToString
CreateIterResultObject
CreateGeneratorObject
GeneratorFunctionConstructor
GeneratorPrototypeNext
GeneratorPrototypeReturn
GeneratorPrototypeThrow
AsyncFunctionConstructor
GlobalDecodeURI
GlobalDecodeURIComponent
GlobalEncodeURI
GlobalEncodeURIComponent
GlobalEscape
GlobalUnescape
GlobalEval
GlobalIsFinite
GlobalIsNaN
JsonParse
JsonStringify
LoadIC
LoadIC_Megamorphic
LoadIC_Noninlined
LoadICTrampoline
LoadICTrampoline_Megamorphic
KeyedLoadIC
KeyedLoadIC_Megamorphic
KeyedLoadICTrampoline
KeyedLoadICTrampoline_Megamorphic
StoreGlobalIC
StoreGlobalICTrampoline
StoreIC
StoreICTrampoline
KeyedStoreIC
KeyedStoreICTrampoline
StoreInArrayLiteralIC
LoadGlobalIC
LoadGlobalICInsideTypeof
LoadGlobalICTrampoline
LoadGlobalICInsideTypeofTrampoline
CloneObjectIC
CloneObjectIC_Slow
KeyedHasIC
KeyedHasIC_Megamorphic
IterableToList
IterableToListWithSymbolLookup
IterableToListMayPreserveHoles
FindOrderedHashMapEntry
MapConstructor
MapPrototypeSet
MapPrototypeDelete
MapPrototypeGet
MapPrototypeHas
MapPrototypeClear
MapPrototypeEntries
MapPrototypeGetSize
MapPrototypeForEach
MapPrototypeKeys
MapPrototypeValues
MapIteratorPrototypeNext
MapIteratorToList
MathAbs
MathAcos
MathAcosh
MathAsin
MathAsinh
MathAtan
MathAtanh
MathAtan2
MathCbrt
MathCeil
MathClz32
MathCos
MathCosh
MathExp
MathExpm1
MathFloor
MathFround
MathHypot
MathImul
MathLog
MathLog1p
MathLog10
MathLog2
MathMax
MathMin
MathPow
MathRandom
MathRound
MathSign
MathSin
MathSinh
MathTan
MathTanh
MathSqrt
MathTrunc
AllocateHeapNumber
NumberConstructor
NumberIsFinite
NumberIsInteger
NumberIsNaN
NumberIsSafeInteger
NumberParseFloat
NumberParseInt
ParseInt
NumberPrototypeToExponential
NumberPrototypeToFixed
NumberPrototypeToLocaleString
NumberPrototypeToPrecision
NumberPrototypeToString
NumberPrototypeValueOf
Subtract
Multiply
Divide
Modulus
Exponentiate
BitwiseAnd
BitwiseOr
BitwiseXor
ShiftLeft
ShiftRight
ShiftRightLogical
LessThan
LessThanOrEqual
GreaterThan
GreaterThanOrEqual
Equal
SameValue
StrictEqual
BitwiseNot
Decrement
Increment
Negate
ObjectConstructor
ObjectAssign
ObjectCreate
CreateObjectWithoutProperties
ObjectDefineGetter
ObjectDefineProperties
ObjectDefineProperty
ObjectDefineSetter
ObjectEntries
ObjectFreeze
ObjectGetOwnPropertyDescriptor
ObjectGetOwnPropertyDescriptors
ObjectGetOwnPropertyNames
ObjectGetOwnPropertySymbols
ObjectGetPrototypeOf
ObjectSetPrototypeOf
ObjectIs
ObjectIsExtensible
ObjectIsFrozen
ObjectIsSealed
ObjectKeys
ObjectLookupGetter
ObjectLookupSetter
ObjectPreventExtensions
ObjectPrototypeToString
ObjectPrototypeValueOf
ObjectPrototypeHasOwnProperty
ObjectPrototypeIsPrototypeOf
ObjectPrototypePropertyIsEnumerable
ObjectPrototypeGetProto
ObjectPrototypeSetProto
ObjectPrototypeToLocaleString
ObjectSeal
ObjectToString
ObjectValues
OrdinaryHasInstance
InstanceOf
ForInEnumerate
ForInFilter
FulfillPromise
RejectPromise
ResolvePromise
PromiseCapabilityDefaultReject
PromiseCapabilityDefaultResolve
PromiseGetCapabilitiesExecutor
NewPromiseCapability
PromiseConstructorLazyDeoptContinuation
PromiseConstructor
IsPromise
PromisePrototypeThen
PerformPromiseThen
PromisePrototypeCatch
PromiseRejectReactionJob
PromiseFulfillReactionJob
PromiseResolveThenableJob
PromiseResolveTrampoline
PromiseResolve
PromiseReject
PromisePrototypeFinally
PromiseThenFinally
PromiseCatchFinally
PromiseValueThunkFinally
PromiseThrowerFinally
PromiseAll
PromiseAllResolveElementClosure
PromiseRace
PromiseAllSettled
PromiseAllSettledResolveElementClosure
PromiseAllSettledRejectElementClosure
PromiseInternalConstructor
PromiseInternalReject
PromiseInternalResolve
ProxyConstructor
ProxyGetProperty
ProxyHasProperty
ProxySetProperty
ReflectApply
ReflectConstruct
ReflectDefineProperty
ReflectDeleteProperty
ReflectGet
ReflectGetOwnPropertyDescriptor
ReflectGetPrototypeOf
ReflectHas
ReflectIsExtensible
ReflectOwnKeys
ReflectPreventExtensions
ReflectSet
ReflectSetPrototypeOf
RegExpCapture1Getter
RegExpCapture2Getter
RegExpCapture3Getter
RegExpCapture4Getter
RegExpCapture5Getter
RegExpCapture6Getter
RegExpCapture7Getter
RegExpCapture8Getter
RegExpCapture9Getter
RegExpConstructor
RegExpInputGetter
RegExpInputSetter
RegExpLastMatchGetter
RegExpLastParenGetter
RegExpLeftContextGetter
RegExpPrototypeCompile
RegExpPrototypeExec
RegExpPrototypeDotAllGetter
RegExpPrototypeFlagsGetter
RegExpPrototypeGlobalGetter
RegExpPrototypeIgnoreCaseGetter
RegExpPrototypeMatch
RegExpPrototypeMatchAll
RegExpPrototypeMultilineGetter
RegExpPrototypeSearch
RegExpPrototypeSourceGetter
RegExpPrototypeStickyGetter
RegExpPrototypeTest
RegExpPrototypeTestFast
RegExpPrototypeToString
RegExpPrototypeUnicodeGetter
RegExpRightContextGetter
RegExpPrototypeSplit
RegExpExecAtom
RegExpExecInternal
RegExpMatchFast
RegExpPrototypeExecSlow
RegExpSearchFast
RegExpSplit
RegExpStringIteratorPrototypeNext
SetConstructor
SetPrototypeHas
SetPrototypeAdd
SetPrototypeDelete
SetPrototypeClear
SetPrototypeEntries
SetPrototypeGetSize
SetPrototypeForEach
SetPrototypeValues
SetIteratorPrototypeNext
SetOrSetIteratorToList
SharedArrayBufferPrototypeGetByteLength
SharedArrayBufferPrototypeSlice
AtomicsLoad
AtomicsStore
AtomicsExchange
AtomicsCompareExchange
AtomicsAdd
AtomicsSub
AtomicsAnd
AtomicsOr
AtomicsXor
AtomicsNotify
AtomicsIsLockFree
AtomicsWait
AtomicsWake
StringConstructor
StringFromCodePoint
StringFromCharCode
StringPrototypeCharAt
StringPrototypeCharCodeAt
StringPrototypeCodePointAt
StringPrototypeConcat
StringPrototypeIncludes
StringPrototypeIndexOf
StringPrototypeLastIndexOf
StringPrototypeMatch
StringPrototypeMatchAll
StringPrototypeLocaleCompare
StringPrototypePadEnd
StringPrototypePadStart
StringPrototypeReplace
StringPrototypeSearch
StringPrototypeSlice
StringPrototypeSplit
StringPrototypeSubstr
StringPrototypeSubstring
StringPrototypeToString
StringPrototypeTrim
StringPrototypeTrimEnd
StringPrototypeTrimStart
StringPrototypeValueOf
StringRaw
StringPrototypeIterator
StringIteratorPrototypeNext
StringToList
SymbolConstructor
SymbolFor
SymbolKeyFor
SymbolPrototypeDescriptionGetter
SymbolPrototypeToPrimitive
SymbolPrototypeToString
SymbolPrototypeValueOf
TypedArrayBaseConstructor
GenericConstructorLazyDeoptContinuation
TypedArrayConstructor
TypedArrayPrototypeBuffer
TypedArrayPrototypeByteLength
TypedArrayPrototypeByteOffset
TypedArrayPrototypeLength
TypedArrayPrototypeEntries
TypedArrayPrototypeKeys
TypedArrayPrototypeValues
TypedArrayPrototypeCopyWithin
TypedArrayPrototypeFill
TypedArrayPrototypeIncludes
TypedArrayPrototypeIndexOf
TypedArrayPrototypeLastIndexOf
TypedArrayPrototypeReverse
TypedArrayPrototypeSet
TypedArrayPrototypeToStringTag
TypedArrayPrototypeMap
TypedArrayOf
TypedArrayFrom
WasmCompileLazy
WasmAllocateHeapNumber
WasmAtomicNotify
WasmI32AtomicWait
WasmI64AtomicWait
WasmCallJavaScript
WasmMemoryGrow
WasmTableGet
WasmTableSet
WasmRecordWrite
WasmStackGuard
WasmStackOverflow
WasmToNumber
WasmThrow
ThrowWasmTrapUnreachable
ThrowWasmTrapMemOutOfBounds
ThrowWasmTrapUnalignedAccess
ThrowWasmTrapDivByZero
ThrowWasmTrapDivUnrepresentable
ThrowWasmTrapRemByZero
ThrowWasmTrapFloatUnrepresentable
ThrowWasmTrapFuncInvalid
ThrowWasmTrapFuncSigMismatch
ThrowWasmTrapDataSegmentDropped
ThrowWasmTrapElemSegmentDropped
ThrowWasmTrapTableOutOfBounds
WasmI64ToBigInt
WasmBigIntToI64
WeakMapConstructor
WeakMapLookupHashIndex
WeakMapGet
WeakMapPrototypeHas
WeakMapPrototypeSet
WeakMapPrototypeDelete
WeakSetConstructor
WeakSetPrototypeHas
WeakSetPrototypeAdd
WeakSetPrototypeDelete
WeakCollectionDelete
WeakCollectionSet
AsyncGeneratorResolve
AsyncGeneratorReject
AsyncGeneratorYield
AsyncGeneratorReturn
AsyncGeneratorResumeNext
AsyncGeneratorFunctionConstructor
AsyncGeneratorPrototypeNext
AsyncGeneratorPrototypeReturn
AsyncGeneratorPrototypeThrow
AsyncGeneratorAwaitCaught
AsyncGeneratorAwaitUncaught
AsyncGeneratorAwaitResolveClosure
AsyncGeneratorAwaitRejectClosure
AsyncGeneratorYieldResolveClosure
AsyncGeneratorReturnClosedResolveClosure
AsyncGeneratorReturnClosedRejectClosure
AsyncGeneratorReturnResolveClosure
AsyncFromSyncIteratorPrototypeNext
AsyncFromSyncIteratorPrototypeThrow
AsyncFromSyncIteratorPrototypeReturn
AsyncIteratorValueUnwrap
CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
DirectCEntry
StringAdd_CheckNone
StringAdd_ConvertLeft
StringAdd_ConvertRight
SubString
StackCheck
DoubleToI
GetProperty
SetProperty
SetPropertyInLiteral
MemCopyUint8Uint8
MemCopyUint16Uint8
MemMove
IsTraceCategoryEnabled
Trace
FinalizationGroupCleanupIteratorNext
FinalizationGroupCleanupSome
FinalizationGroupConstructor
FinalizationGroupRegister
FinalizationGroupUnregister
WeakRefConstructor
WeakRefDeref
FastCreateDataProperty
ArrayPrototypeCopyWithin
ArrayEveryLoopEagerDeoptContinuation
ArrayEveryLoopLazyDeoptContinuation
ArrayEveryLoopContinuation
ArrayEvery
ArrayFilterLoopEagerDeoptContinuation
ArrayFilterLoopLazyDeoptContinuation
ArrayFilterLoopContinuation
ArrayFilter
ArrayFindLoopEagerDeoptContinuation
ArrayFindLoopLazyDeoptContinuation
ArrayFindLoopAfterCallbackLazyDeoptContinuation
ArrayFindLoopContinuation
ArrayPrototypeFind
ArrayFindIndexLoopEagerDeoptContinuation
ArrayFindIndexLoopLazyDeoptContinuation
ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
ArrayFindIndexLoopContinuation
ArrayPrototypeFindIndex
ArrayForEachLoopEagerDeoptContinuation
ArrayForEachLoopLazyDeoptContinuation
ArrayForEachLoopContinuation
ArrayForEach
LoadJoinElement20ATDictionaryElements
LoadJoinElement25ATFastSmiOrObjectElements
LoadJoinElement20ATFastDoubleElements
ConvertToLocaleString
JoinStackPush
JoinStackPop
ArrayPrototypeJoin
ArrayPrototypeToLocaleString
ArrayPrototypeToString
TypedArrayPrototypeJoin
TypedArrayPrototypeToLocaleString
ArrayPrototypeLastIndexOf
ArrayOf
ArrayMapLoopEagerDeoptContinuation
ArrayMapLoopLazyDeoptContinuation
ArrayMapLoopContinuation
ArrayMap
ArrayReducePreLoopEagerDeoptContinuation
ArrayReduceLoopEagerDeoptContinuation
ArrayReduceLoopLazyDeoptContinuation
ArrayReduceLoopContinuation
ArrayReduce
ArrayReduceRightPreLoopEagerDeoptContinuation
ArrayReduceRightLoopEagerDeoptContinuation
ArrayReduceRightLoopLazyDeoptContinuation
ArrayReduceRightLoopContinuation
ArrayReduceRight
ArrayPrototypeReverse
ArrayPrototypeShift
ArrayPrototypeSlice
ArraySomeLoopEagerDeoptContinuation
ArraySomeLoopLazyDeoptContinuation
ArraySomeLoopContinuation
ArraySome
ArrayPrototypeSplice
ArrayPrototypeUnshift
DataViewPrototypeGetBuffer
DataViewPrototypeGetByteLength
DataViewPrototypeGetByteOffset
DataViewPrototypeGetUint8
DataViewPrototypeGetInt8
DataViewPrototypeGetUint16
DataViewPrototypeGetInt16
DataViewPrototypeGetUint32
DataViewPrototypeGetInt32
DataViewPrototypeGetFloat32
DataViewPrototypeGetFloat64
DataViewPrototypeGetBigUint64
DataViewPrototypeGetBigInt64
DataViewPrototypeSetUint8
DataViewPrototypeSetInt8
DataViewPrototypeSetUint16
DataViewPrototypeSetInt16
DataViewPrototypeSetUint32
DataViewPrototypeSetInt32
DataViewPrototypeSetFloat32
DataViewPrototypeSetFloat64
DataViewPrototypeSetBigUint64
DataViewPrototypeSetBigInt64
ExtrasUtilsCreatePrivateSymbol
ExtrasUtilsMarkPromiseAsHandled
ExtrasUtilsPromiseState
ObjectFromEntries
ProxyRevocable
ProxyRevoke
RegExpReplace
RegExpPrototypeReplace
StringPrototypeEndsWith
CreateHTML
StringPrototypeAnchor
StringPrototypeBig
StringPrototypeBlink
StringPrototypeBold
StringPrototypeFontcolor
StringPrototypeFontsize
StringPrototypeFixed
StringPrototypeItalics
StringPrototypeLink
StringPrototypeSmall
StringPrototypeStrike
StringPrototypeSub
StringPrototypeSup
StringRepeat
StringPrototypeRepeat
StringPrototypeStartsWith
TypedArrayMergeSort
TypedArrayPrototypeSort
CreateTypedArray
TypedArrayPrototypeEvery
TypedArrayPrototypeFilter
TypedArrayPrototypeFind
TypedArrayPrototypeFindIndex
TypedArrayPrototypeForEach
TypedArrayPrototypeReduce
TypedArrayPrototypeReduceRight
TypedArrayPrototypeSlice
TypedArrayPrototypeSome
TypedArrayPrototypeSubArray
Load23ATFastPackedSmiElements
Load25ATFastSmiOrObjectElements
Load20ATFastDoubleElements
Load20ATDictionaryElements
Store23ATFastPackedSmiElements
Store25ATFastSmiOrObjectElements
Store20ATFastDoubleElements
Store20ATDictionaryElements
SortCompareDefault
SortCompareUserFn
CanUseSameAccessor25ATGenericElementsAccessor
CanUseSameAccessor20ATDictionaryElements
Copy
MergeAt
GallopLeft
GallopRight
ArrayTimSort
ArrayPrototypeSort
LoadJoinElement25ATGenericElementsAccessor
LoadJoinTypedElement17ATFixedInt32Array
LoadJoinTypedElement19ATFixedFloat32Array
LoadJoinTypedElement19ATFixedFloat64Array
LoadJoinTypedElement24ATFixedUint8ClampedArray
LoadJoinTypedElement21ATFixedBigUint64Array
LoadJoinTypedElement20ATFixedBigInt64Array
LoadJoinTypedElement17ATFixedUint8Array
LoadJoinTypedElement16ATFixedInt8Array
LoadJoinTypedElement18ATFixedUint16Array
LoadJoinTypedElement17ATFixedInt16Array
LoadJoinTypedElement18ATFixedUint32Array
LoadFixedElement17ATFixedInt32Array
LoadFixedElement19ATFixedFloat32Array
LoadFixedElement19ATFixedFloat64Array
LoadFixedElement24ATFixedUint8ClampedArray
LoadFixedElement21ATFixedBigUint64Array
LoadFixedElement20ATFixedBigInt64Array
LoadFixedElement17ATFixedUint8Array
LoadFixedElement16ATFixedInt8Array
LoadFixedElement18ATFixedUint16Array
LoadFixedElement17ATFixedInt16Array
LoadFixedElement18ATFixedUint32Array
StoreFixedElement17ATFixedInt32Array
StoreFixedElement19ATFixedFloat32Array
StoreFixedElement19ATFixedFloat64Array
StoreFixedElement24ATFixedUint8ClampedArray
StoreFixedElement21ATFixedBigUint64Array
StoreFixedElement20ATFixedBigInt64Array
StoreFixedElement17ATFixedUint8Array
StoreFixedElement16ATFixedInt8Array
StoreFixedElement18ATFixedUint16Array
StoreFixedElement17ATFixedInt16Array
StoreFixedElement18ATFixedUint32Array
Load25ATGenericElementsAccessor
Store25ATGenericElementsAccessor
CanUseSameAccessor20ATFastDoubleElements
CanUseSameAccessor23ATFastPackedSmiElements
CanUseSameAccessor25ATFastSmiOrObjectElements
CollatorConstructor
CollatorInternalCompare
CollatorPrototypeCompare
CollatorSupportedLocalesOf
CollatorPrototypeResolvedOptions
DatePrototypeToLocaleDateString
DatePrototypeToLocaleString
DatePrototypeToLocaleTimeString
DateTimeFormatConstructor
DateTimeFormatInternalFormat
DateTimeFormatPrototypeFormat
DateTimeFormatPrototypeFormatRange
DateTimeFormatPrototypeFormatRangeToParts
DateTimeFormatPrototypeFormatToParts
DateTimeFormatPrototypeResolvedOptions
DateTimeFormatSupportedLocalesOf
IntlGetCanonicalLocales
ListFormatConstructor
ListFormatPrototypeFormat
ListFormatPrototypeFormatToParts
ListFormatPrototypeResolvedOptions
ListFormatSupportedLocalesOf
LocaleConstructor
LocalePrototypeBaseName
LocalePrototypeCalendar
LocalePrototypeCaseFirst
LocalePrototypeCollation
LocalePrototypeHourCycle
LocalePrototypeLanguage
LocalePrototypeMaximize
LocalePrototypeMinimize
LocalePrototypeNumeric
LocalePrototypeNumberingSystem
LocalePrototypeRegion
LocalePrototypeScript
LocalePrototypeToString
NumberFormatConstructor
NumberFormatInternalFormatNumber
NumberFormatPrototypeFormatNumber
NumberFormatPrototypeFormatToParts
NumberFormatPrototypeResolvedOptions
NumberFormatSupportedLocalesOf
PluralRulesConstructor
PluralRulesPrototypeResolvedOptions
PluralRulesPrototypeSelect
PluralRulesSupportedLocalesOf
RelativeTimeFormatConstructor
RelativeTimeFormatPrototypeFormat
RelativeTimeFormatPrototypeFormatToParts
RelativeTimeFormatPrototypeResolvedOptions
RelativeTimeFormatSupportedLocalesOf
SegmenterConstructor
SegmenterPrototypeResolvedOptions
SegmenterPrototypeSegment
SegmenterSupportedLocalesOf
SegmentIteratorPrototypeBreakType
SegmentIteratorPrototypeFollowing
SegmentIteratorPrototypePreceding
SegmentIteratorPrototypeIndex
SegmentIteratorPrototypeNext
StringPrototypeNormalizeIntl
StringPrototypeToLocaleLowerCase
StringPrototypeToLocaleUpperCase
StringPrototypeToLowerCaseIntl
StringPrototypeToUpperCaseIntl
StringToLowerCaseIntl
V8BreakIteratorConstructor
V8BreakIteratorInternalAdoptText
V8BreakIteratorInternalBreakType
V8BreakIteratorInternalCurrent
V8BreakIteratorInternalFirst
V8BreakIteratorInternalNext
V8BreakIteratorPrototypeAdoptText
V8BreakIteratorPrototypeBreakType
V8BreakIteratorPrototypeCurrent
V8BreakIteratorPrototypeFirst
V8BreakIteratorPrototypeNext
V8BreakIteratorPrototypeResolvedOptions
V8BreakIteratorSupportedLocalesOf
WideHandler
ExtraWideHandler
DebugBreakWideHandler
DebugBreakExtraWideHandler
DebugBreak0Handler
DebugBreak1Handler
DebugBreak2Handler
DebugBreak3Handler
DebugBreak4Handler
DebugBreak5Handler
DebugBreak6Handler
LdaZeroHandler
LdaSmiHandler
LdaUndefinedHandler
LdaNullHandler
LdaTheHoleHandler
LdaTrueHandler
LdaFalseHandler
LdaConstantHandler
LdaGlobalHandler
LdaGlobalInsideTypeofHandler
StaGlobalHandler
PushContextHandler
PopContextHandler
LdaContextSlotHandler
LdaImmutableContextSlotHandler
LdaCurrentContextSlotHandler
LdaImmutableCurrentContextSlotHandler
StaContextSlotHandler
StaCurrentContextSlotHandler
LdaLookupSlotHandler
LdaLookupContextSlotHandler
LdaLookupGlobalSlotHandler
LdaLookupSlotInsideTypeofHandler
LdaLookupContextSlotInsideTypeofHandler
LdaLookupGlobalSlotInsideTypeofHandler
StaLookupSlotHandler
LdarHandler
StarHandler
MovHandler
LdaNamedPropertyHandler
LdaNamedPropertyNoFeedbackHandler
LdaKeyedPropertyHandler
LdaModuleVariableHandler
StaModuleVariableHandler
StaNamedPropertyHandler
StaNamedPropertyNoFeedbackHandler
StaNamedOwnPropertyHandler
StaKeyedPropertyHandler
StaInArrayLiteralHandler
StaDataPropertyInLiteralHandler
CollectTypeProfileHandler
AddHandler
SubHandler
MulHandler
DivHandler
ModHandler
ExpHandler
BitwiseOrHandler
BitwiseXorHandler
BitwiseAndHandler
ShiftLeftHandler
ShiftRightHandler
ShiftRightLogicalHandler
AddSmiHandler
SubSmiHandler
MulSmiHandler
DivSmiHandler
ModSmiHandler
ExpSmiHandler
BitwiseOrSmiHandler
BitwiseXorSmiHandler
BitwiseAndSmiHandler
ShiftLeftSmiHandler
ShiftRightSmiHandler
ShiftRightLogicalSmiHandler
IncHandler
DecHandler
NegateHandler
BitwiseNotHandler
ToBooleanLogicalNotHandler
LogicalNotHandler
TypeOfHandler
DeletePropertyStrictHandler
DeletePropertySloppyHandler
GetSuperConstructorHandler
CallAnyReceiverHandler
CallPropertyHandler
CallProperty0Handler
CallProperty1Handler
CallProperty2Handler
CallUndefinedReceiverHandler
CallUndefinedReceiver0Handler
CallUndefinedReceiver1Handler
CallUndefinedReceiver2Handler
CallNoFeedbackHandler
CallWithSpreadHandler
CallRuntimeHandler
CallRuntimeForPairHandler
CallJSRuntimeHandler
InvokeIntrinsicHandler
ConstructHandler
ConstructWithSpreadHandler
TestEqualHandler
TestEqualStrictHandler
TestLessThanHandler
TestGreaterThanHandler
TestLessThanOrEqualHandler
TestGreaterThanOrEqualHandler
TestReferenceEqualHandler
TestInstanceOfHandler
TestInHandler
TestUndetectableHandler
TestNullHandler
TestUndefinedHandler
TestTypeOfHandler
ToNameHandler
ToNumberHandler
ToNumericHandler
ToObjectHandler
ToStringHandler
CreateRegExpLiteralHandler
CreateArrayLiteralHandler
CreateArrayFromIterableHandler
CreateEmptyArrayLiteralHandler
CreateObjectLiteralHandler
CreateEmptyObjectLiteralHandler
CloneObjectHandler
GetTemplateObjectHandler
CreateClosureHandler
CreateBlockContextHandler
CreateCatchContextHandler
CreateFunctionContextHandler
CreateEvalContextHandler
CreateWithContextHandler
CreateMappedArgumentsHandler
CreateUnmappedArgumentsHandler
CreateRestParameterHandler
JumpLoopHandler
JumpHandler
JumpConstantHandler
JumpIfNullConstantHandler
JumpIfNotNullConstantHandler
JumpIfUndefinedConstantHandler
JumpIfNotUndefinedConstantHandler
JumpIfTrueConstantHandler
JumpIfFalseConstantHandler
JumpIfJSReceiverConstantHandler
JumpIfToBooleanTrueConstantHandler
JumpIfToBooleanFalseConstantHandler
JumpIfToBooleanTrueHandler
JumpIfToBooleanFalseHandler
JumpIfTrueHandler
JumpIfFalseHandler
JumpIfNullHandler
JumpIfNotNullHandler
JumpIfUndefinedHandler
JumpIfNotUndefinedHandler
JumpIfJSReceiverHandler
SwitchOnSmiNoFeedbackHandler
ForInEnumerateHandler
ForInPrepareHandler
ForInContinueHandler
ForInNextHandler
ForInStepHandler
StackCheckHandler
SetPendingMessageHandler
ThrowHandler
ReThrowHandler
ReturnHandler
ThrowReferenceErrorIfHoleHandler
ThrowSuperNotCalledIfHoleHandler
ThrowSuperAlreadyCalledIfNotHoleHandler
SwitchOnGeneratorStateHandler
SuspendGeneratorHandler
ResumeGeneratorHandler
DebuggerHandler
IncBlockCounterHandler
AbortHandler
IllegalHandler
DebugBreak1WideHandler
DebugBreak2WideHandler
DebugBreak3WideHandler
DebugBreak4WideHandler
DebugBreak5WideHandler
DebugBreak6WideHandler
LdaSmiWideHandler
LdaConstantWideHandler
LdaGlobalWideHandler
LdaGlobalInsideTypeofWideHandler
StaGlobalWideHandler
PushContextWideHandler
PopContextWideHandler
LdaContextSlotWideHandler
LdaImmutableContextSlotWideHandler
LdaCurrentContextSlotWideHandler
LdaImmutableCurrentContextSlotWideHandler
StaContextSlotWideHandler
StaCurrentContextSlotWideHandler
LdaLookupSlotWideHandler
LdaLookupContextSlotWideHandler
LdaLookupGlobalSlotWideHandler
LdaLookupSlotInsideTypeofWideHandler
LdaLookupContextSlotInsideTypeofWideHandler
LdaLookupGlobalSlotInsideTypeofWideHandler
StaLookupSlotWideHandler
LdarWideHandler
StarWideHandler
MovWideHandler
LdaNamedPropertyWideHandler
LdaNamedPropertyNoFeedbackWideHandler
LdaKeyedPropertyWideHandler
LdaModuleVariableWideHandler
StaModuleVariableWideHandler
StaNamedPropertyWideHandler
StaNamedPropertyNoFeedbackWideHandler
StaNamedOwnPropertyWideHandler
StaKeyedPropertyWideHandler
StaInArrayLiteralWideHandler
StaDataPropertyInLiteralWideHandler
CollectTypeProfileWideHandler
AddWideHandler
SubWideHandler
MulWideHandler
DivWideHandler
ModWideHandler
ExpWideHandler
BitwiseOrWideHandler
BitwiseXorWideHandler
BitwiseAndWideHandler
ShiftLeftWideHandler
ShiftRightWideHandler
ShiftRightLogicalWideHandler
AddSmiWideHandler
SubSmiWideHandler
MulSmiWideHandler
DivSmiWideHandler
ModSmiWideHandler
ExpSmiWideHandler
BitwiseOrSmiWideHandler
BitwiseXorSmiWideHandler
BitwiseAndSmiWideHandler
ShiftLeftSmiWideHandler
ShiftRightSmiWideHandler
ShiftRightLogicalSmiWideHandler
IncWideHandler
DecWideHandler
NegateWideHandler
BitwiseNotWideHandler
DeletePropertyStrictWideHandler
DeletePropertySloppyWideHandler
GetSuperConstructorWideHandler
CallAnyReceiverWideHandler
CallPropertyWideHandler
CallProperty0WideHandler
CallProperty1WideHandler
CallProperty2WideHandler
CallUndefinedReceiverWideHandler
CallUndefinedReceiver0WideHandler
CallUndefinedReceiver1WideHandler
CallUndefinedReceiver2WideHandler
CallNoFeedbackWideHandler
CallWithSpreadWideHandler
CallRuntimeWideHandler
CallRuntimeForPairWideHandler
CallJSRuntimeWideHandler
InvokeIntrinsicWideHandler
ConstructWideHandler
ConstructWithSpreadWideHandler
TestEqualWideHandler
TestEqualStrictWideHandler
TestLessThanWideHandler
TestGreaterThanWideHandler
TestLessThanOrEqualWideHandler
TestGreaterThanOrEqualWideHandler
TestReferenceEqualWideHandler
TestInstanceOfWideHandler
TestInWideHandler
ToNameWideHandler
ToNumberWideHandler
ToNumericWideHandler
ToObjectWideHandler
CreateRegExpLiteralWideHandler
CreateArrayLiteralWideHandler
CreateEmptyArrayLiteralWideHandler
CreateObjectLiteralWideHandler
CloneObjectWideHandler
GetTemplateObjectWideHandler
CreateClosureWideHandler
CreateBlockContextWideHandler
CreateCatchContextWideHandler
CreateFunctionContextWideHandler
CreateEvalContextWideHandler
CreateWithContextWideHandler
JumpLoopWideHandler
JumpWideHandler
JumpConstantWideHandler
JumpIfNullConstantWideHandler
JumpIfNotNullConstantWideHandler
JumpIfUndefinedConstantWideHandler
JumpIfNotUndefinedConstantWideHandler
JumpIfTrueConstantWideHandler
JumpIfFalseConstantWideHandler
JumpIfJSReceiverConstantWideHandler
JumpIfToBooleanTrueConstantWideHandler
JumpIfToBooleanFalseConstantWideHandler
JumpIfToBooleanTrueWideHandler
JumpIfToBooleanFalseWideHandler
JumpIfTrueWideHandler
JumpIfFalseWideHandler
JumpIfNullWideHandler
JumpIfNotNullWideHandler
JumpIfUndefinedWideHandler
JumpIfNotUndefinedWideHandler
JumpIfJSReceiverWideHandler
SwitchOnSmiNoFeedbackWideHandler
ForInEnumerateWideHandler
ForInPrepareWideHandler
ForInContinueWideHandler
ForInNextWideHandler
ForInStepWideHandler
ThrowReferenceErrorIfHoleWideHandler
SwitchOnGeneratorStateWideHandler
SuspendGeneratorWideHandler
ResumeGeneratorWideHandler
IncBlockCounterWideHandler
AbortWideHandler
DebugBreak1ExtraWideHandler
DebugBreak2ExtraWideHandler
DebugBreak3ExtraWideHandler
DebugBreak4ExtraWideHandler
DebugBreak5ExtraWideHandler
DebugBreak6ExtraWideHandler
LdaSmiExtraWideHandler
LdaConstantExtraWideHandler
LdaGlobalExtraWideHandler
LdaGlobalInsideTypeofExtraWideHandler
StaGlobalExtraWideHandler
PushContextExtraWideHandler
PopContextExtraWideHandler
LdaContextSlotExtraWideHandler
LdaImmutableContextSlotExtraWideHandler
LdaCurrentContextSlotExtraWideHandler
LdaImmutableCurrentContextSlotExtraWideHandler
StaContextSlotExtraWideHandler
StaCurrentContextSlotExtraWideHandler
LdaLookupSlotExtraWideHandler
LdaLookupContextSlotExtraWideHandler
LdaLookupGlobalSlotExtraWideHandler
LdaLookupSlotInsideTypeofExtraWideHandler
LdaLookupContextSlotInsideTypeofExtraWideHandler
LdaLookupGlobalSlotInsideTypeofExtraWideHandler
StaLookupSlotExtraWideHandler
LdarExtraWideHandler
StarExtraWideHandler
MovExtraWideHandler
LdaNamedPropertyExtraWideHandler
LdaNamedPropertyNoFeedbackExtraWideHandler
LdaKeyedPropertyExtraWideHandler
LdaModuleVariableExtraWideHandler
StaModuleVariableExtraWideHandler
StaNamedPropertyExtraWideHandler
StaNamedPropertyNoFeedbackExtraWideHandler
StaNamedOwnPropertyExtraWideHandler
StaKeyedPropertyExtraWideHandler
StaInArrayLiteralExtraWideHandler
StaDataPropertyInLiteralExtraWideHandler
CollectTypeProfileExtraWideHandler
AddExtraWideHandler
SubExtraWideHandler
MulExtraWideHandler
DivExtraWideHandler
ModExtraWideHandler
ExpExtraWideHandler
BitwiseOrExtraWideHandler
BitwiseXorExtraWideHandler
BitwiseAndExtraWideHandler
ShiftLeftExtraWideHandler
ShiftRightExtraWideHandler
ShiftRightLogicalExtraWideHandler
AddSmiExtraWideHandler
SubSmiExtraWideHandler
MulSmiExtraWideHandler
DivSmiExtraWideHandler
ModSmiExtraWideHandler
ExpSmiExtraWideHandler
BitwiseOrSmiExtraWideHandler
BitwiseXorSmiExtraWideHandler
BitwiseAndSmiExtraWideHandler
ShiftLeftSmiExtraWideHandler
ShiftRightSmiExtraWideHandler
ShiftRightLogicalSmiExtraWideHandler
IncExtraWideHandler
DecExtraWideHandler
NegateExtraWideHandler
BitwiseNotExtraWideHandler
DeletePropertyStrictExtraWideHandler
DeletePropertySloppyExtraWideHandler
GetSuperConstructorExtraWideHandler
CallAnyReceiverExtraWideHandler
CallPropertyExtraWideHandler
CallProperty0ExtraWideHandler
CallProperty1ExtraWideHandler
CallProperty2ExtraWideHandler
CallUndefinedReceiverExtraWideHandler
CallUndefinedReceiver0ExtraWideHandler
CallUndefinedReceiver1ExtraWideHandler
CallUndefinedReceiver2ExtraWideHandler
CallNoFeedbackExtraWideHandler
CallWithSpreadExtraWideHandler
CallRuntimeExtraWideHandler
CallRuntimeForPairExtraWideHandler
CallJSRuntimeExtraWideHandler
InvokeIntrinsicExtraWideHandler
ConstructExtraWideHandler
ConstructWithSpreadExtraWideHandler
TestEqualExtraWideHandler
TestEqualStrictExtraWideHandler
TestLessThanExtraWideHandler
TestGreaterThanExtraWideHandler
TestLessThanOrEqualExtraWideHandler
TestGreaterThanOrEqualExtraWideHandler
TestReferenceEqualExtraWideHandler
TestInstanceOfExtraWideHandler
TestInExtraWideHandler
ToNameExtraWideHandler
ToNumberExtraWideHandler
ToNumericExtraWideHandler
ToObjectExtraWideHandler
CreateRegExpLiteralExtraWideHandler
CreateArrayLiteralExtraWideHandler
CreateEmptyArrayLiteralExtraWideHandler
CreateObjectLiteralExtraWideHandler
CloneObjectExtraWideHandler
GetTemplateObjectExtraWideHandler
CreateClosureExtraWideHandler
CreateBlockContextExtraWideHandler
CreateCatchContextExtraWideHandler
CreateFunctionContextExtraWideHandler
CreateEvalContextExtraWideHandler
CreateWithContextExtraWideHandler
JumpLoopExtraWideHandler
JumpExtraWideHandler
JumpConstantExtraWideHandler
JumpIfNullConstantExtraWideHandler
JumpIfNotNullConstantExtraWideHandler
JumpIfUndefinedConstantExtraWideHandler
JumpIfNotUndefinedConstantExtraWideHandler
JumpIfTrueConstantExtraWideHandler
JumpIfFalseConstantExtraWideHandler
JumpIfJSReceiverConstantExtraWideHandler
JumpIfToBooleanTrueConstantExtraWideHandler
JumpIfToBooleanFalseConstantExtraWideHandler
JumpIfToBooleanTrueExtraWideHandler
JumpIfToBooleanFalseExtraWideHandler
JumpIfTrueExtraWideHandler
JumpIfFalseExtraWideHandler
JumpIfNullExtraWideHandler
JumpIfNotNullExtraWideHandler
JumpIfUndefinedExtraWideHandler
JumpIfNotUndefinedExtraWideHandler
JumpIfJSReceiverExtraWideHandler
SwitchOnSmiNoFeedbackExtraWideHandler
ForInEnumerateExtraWideHandler
ForInPrepareExtraWideHandler
ForInContinueExtraWideHandler
ForInNextExtraWideHandler
ForInStepExtraWideHandler
ThrowReferenceErrorIfHoleExtraWideHandler
SwitchOnGeneratorStateExtraWideHandler
SuspendGeneratorExtraWideHandler
ResumeGeneratorExtraWideHandler
IncBlockCounterExtraWideHandler
AbortExtraWideHandler
!map_->is_iterable()
map_->is_iterable()
canceled_
kInvalidTaskId != id
GetCommentSize() == strlen(comment_string) + 1
CodeComments (size = 
 comment
eval-global
eval-contextual
totals
                Turbofan phase            Time (ms)    
                   Space (bytes)             Function
                                                       
          Total          Max.     Abs. max.
"%s_time"=%.3f
"%s_space"=%zu
%34s %10.3f (%5.1f%%)  %10zu (%5.1f%%) %10zu %10zu
                                   -----------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
CompilerDispatcher: dispatcher is disabled
task_manager_->canceled()
V8.CompilerDispatcherEnqueue
CompilerDispatcher: enqueued job %zu for function literal id %d
CompilerDispatcher: registering 
 with job id %zu
V8.CompilerDispatcherWaitForBackgroundJob
V8.CompilerDispatcherFinishNow
CompilerDispatcher: finishing 
 now
it != jobs_.end()
CompilerDispatcher: aborted job %zu
V8.CompilerDispatcherScheduleMoreWorkerTasksIfNeeded
V8.CompilerDispatcherDoBackgroundWork
CompilerDispatcher: doing background work
V8.CompilerDispatcherDoIdleWork
CompilerDispatcher: received %0.1lfms of idle time
  ** Flushed concurrent recompilation queues (not blocking).
  ** Flushed concurrent recompilation queues.
  ** Aborting compilation for 
 as it has already been optimized.
V8.RecompileConcurrent
[compiling method 
 using 
 OSR
[optimizing 
 - took %0.3f, %0.3f, %0.3f ms]
Compiled: %d functions with %d byte source size in %fms.
BackgroundCompileTask::Run
V8.CollectSourcePositions
outer_function_job->FinalizeJob(shared_info, isolate) == CompilationJob::SUCCEEDED
V8.CompileCode
 because --always-opt]
V8.FinalizeBackgroundCompileTask
V8.CompileDeserialize
V8.RecompileSynchronous
[completed optimizing 
[aborted optimizing 
 because: %s]
optimize
-eval
-lazy
V8.CompileCodeBackground
[found optimized code for 
 at OSR AST id %d
V8.OptimizeCode
GetCodeFromOptimizedCodeCache
  ** Compilation queue full, will retry optimizing 
 later.
  ** High memory pressure, will retry optimizing 
  ** Queued 
 for concurrent optimization.
V8.CompileEval
V8.Compile
used >= 0 && length > 0 && used < length
length < Smi::kMaxValue / 2
Code generation from strings disallowed for this context
async_function_promise_create
is_arraylike
make_range_error
object_create
object_define_properties
object_get_prototype_of
object_is_extensible
object_is_sealed
math_pow
promise_internal_constructor
promise_then
-Infinity
Infinity
0123456789abcdefghijklmnopqrstuvwxyz
'.' == buffer[fraction_cursor]
NewArray
c:V8.WasmGeneratedCodeBytes
c:V8.WasmRelocBytes
c:V8.WasmLazilyCompiledFunctions
c:V8.LiftoffCompiledFunctions
c:V8.LiftoffUnsupportedFunctions
V8.GCBackgroundMarking
V8.GCBackgroundScavenger
V8.GCBackgroundSweeping
V8.DetachedContextAgeInGC
V8.CodeCacheRejectReason
V8.ErrorsThrownPerContext
V8.DebugFeatureUsage
V8.GCIncrementalMarkingReason
V8.GCIncrementalMarkingSum
V8.GCMarkCompactReason
V8.GCFinalizeMC.Clear
V8.GCFinalizeMC.Epilogue
V8.GCFinalizeMC.Evacuate
V8.GCFinalizeMC.Finish
V8.GCFinalizeMC.Mark
V8.GCFinalizeMC.Prologue
V8.GCFinalizeMC.Sweep
V8.GCScavenger.ScavengeMain
V8.GCScavenger.ScavengeRoots
V8.GCMarkCompactor
V8.GCMarkingSum
V8.GCMainThreadMarkingThroughput
V8.GCScavengeReason
V8.GCYoungGenerationHandling
V8.WasmFunctionsPerModule.asm
V8.WasmFunctionsPerModule.wasm
V8.ArrayBufferLargeAllocations
V8.ArrayBufferNewSizeFailures
V8.SharedArrayAllocationSizes
V8.WasmFunctionSizeBytes.asm
V8.WasmFunctionSizeBytes.wasm
V8.WasmModuleSizeBytes.asm
V8.WasmModuleSizeBytes.wasm
V8.WasmMinMemPagesCount.asm
V8.WasmMinMemPagesCount.wasm
V8.WasmMaxMemPagesCount.wasm
V8.WasmDecodeModulePeakMemoryBytes.asm
V8.WasmDecodeModulePeakMemoryBytes.wasm
V8.AsmWasmTranslationPeakMemoryBytes
V8.WasmCompileFunctionPeakMemoryBytes
V8.AsmModuleSizeBytes
V8.AsmWasmTranslationThroughput
V8.WasmLazyCompilationThroughput
V8.CompileScript.CacheBehaviour
V8.WasmMemoryAllocationResult
V8.WasmAddressSpaceUsageMiB
V8.WasmModuleCodeSizeMiB
V8.WasmModuleCodeSizeBaselineMiB
V8.WasmModuleCodeSizeTopTierMiB
V8.GCContext
V8.GCIdleNotification
V8.GCIncrementalMarking
V8.GCIncrementalMarkingStart
V8.GCIncrementalMarkingFinalize
V8.CompileMicroSeconds
V8.CompileEvalMicroSeconds
V8.CompileSerializeMicroSeconds
V8.CompileDeserializeMicroSeconds
V8.CompileScriptMicroSeconds
V8.AsmWasmTranslationMicroSeconds
V8.WasmLazyCompilationMicroSeconds
V8.GCCompactor
V8.GCCompactorBackground
V8.GCCompactorForeground
V8.GCFinalizeMC
V8.GCFinalizeMCBackground
V8.GCFinalizeMCForeground
V8.GCFinalizeMCReduceMemory
V8.GCFinalizeMCReduceMemoryBackground
V8.GCFinalizeMCReduceMemoryForeground
V8.GCScavenger
V8.GCScavengerBackground
V8.GCScavengerForeground
V8.TurboFanOptimizePrepare
V8.TurboFanOptimizeExecute
V8.TurboFanOptimizeFinalize
V8.TurboFanOptimizeTotalForeground
V8.TurboFanOptimizeTotalBackground
V8.TurboFanOptimizeTotalTime
V8.TurboFanOptimizeForOnStackReplacementPrepare
V8.TurboFanOptimizeForOnStackReplacementExecute
V8.TurboFanOptimizeForOnStackReplacementFinalize
V8.TurboFanOptimizeForOnStackReplacementTotalTime
V8.WasmDecodeModuleMicroSeconds.asm
V8.WasmDecodeModuleMicroSeconds.wasm
V8.WasmDecodeFunctionMicroSeconds.asm
V8.WasmDecodeFunctionMicroSeconds.wasm
V8.WasmCompileModuleMicroSeconds.asm
V8.WasmCompileModuleMicroSeconds.wasm
V8.WasmCompileFunctionMicroSeconds.asm
V8.WasmCompileFunctionMicroSeconds.wasm
V8.LiftoffCompileMicroSeconds
V8.WasmInstantiateModuleMicroSeconds.wasm
V8.WasmInstantiateModuleMicroSeconds.asm
V8.CompileScriptMicroSeconds.ProduceCache
V8.CompileScriptMicroSeconds.IsolateCacheHit
V8.CompileScriptMicroSeconds.ConsumeCache
V8.CompileScriptMicroSeconds.ConsumeCache.Failed
V8.CompileScriptMicroSeconds.NoCache.Other
V8.CompileScriptMicroSeconds.NoCache.InlineScript
V8.CompileScriptMicroSeconds.NoCache.ScriptTooSmall
V8.CompileScriptMicroSeconds.NoCache.CacheTooCold
V8.CompileScriptMicroSeconds.BackgroundThread
V8.CompileFunctionMicroSeconds.BackgroundThread
V8.CompileLazyMicroSeconds
V8.MemoryExternalFragmentationTotal
V8.MemoryExternalFragmentationOldSpace
V8.MemoryExternalFragmentationCodeSpace
V8.MemoryExternalFragmentationMapSpace
V8.MemoryExternalFragmentationLoSpace
V8.MemoryHeapSampleTotalCommitted
V8.MemoryHeapSampleTotalUsed
V8.MemoryHeapSampleMapSpaceCommitted
V8.MemoryHeapSampleCodeSpaceCommitted
V8.MemoryHeapSampleMaximumCommitted
c:V8.GlobalHandles
c:V8.OsMemoryAllocated
c:V8.MapsNormalized
c:V8.MapsCreated
c:V8.ObjectElementsTransitions
c:V8.ObjectPropertiesToDictionary
c:V8.ObjectElementsToDictionary
c:V8.AliveAfterLastGC
c:V8.ObjsSinceLastYoung
c:V8.ObjsSinceLastFull
c:V8.StringTableCapacity
c:V8.NumberOfSymbols
c:V8.InlinedCopiedElements
c:V8.CompilationCacheHits
c:V8.CompilationCacheMisses
c:V8.TotalEvalSize
c:V8.TotalLoadSize
c:V8.TotalParseSize
c:V8.TotalPreparseSkipped
c:V8.TotalCompileSize
c:V8.ContextsCreatedFromScratch
c:V8.ContextsCreatedBySnapshot
c:V8.PcToCode
c:V8.PcToCodeCached
c:V8.StoreBufferOverflows
c:V8.TotalCompiledCodeSize
c:V8.GCCompactorCausedByRequest
c:V8.GCCompactorCausedByPromotedData
c:V8.GCCompactorCausedByOldspaceExhaustion
c:V8.GCLastResortFromJS
c:V8.GCLastResortFromHandles
c:V8.COWArraysConverted
c:V8.ConstructedObjectsRuntime
c:V8.MegamorphicStubCacheUpdates
c:V8.EnumCacheHits
c:V8.EnumCacheMisses
c:V8.StringAddRuntime
c:V8.SubStringRuntime
c:V8.RegExpEntryRuntime
c:V8.StackInterrupts
c:V8.RuntimeProfilerTicks
c:V8.SoftDeoptsExecuted
c:V8.MemoryNewSpaceBytesAvailable
c:V8.MemoryNewSpaceBytesCommitted
c:V8.MemoryNewSpaceBytesUsed
c:V8.MemoryOldSpaceBytesAvailable
c:V8.MemoryOldSpaceBytesCommitted
c:V8.MemoryOldSpaceBytesUsed
c:V8.MemoryCodeSpaceBytesAvailable
c:V8.MemoryCodeSpaceBytesCommitted
c:V8.MemoryCodeSpaceBytesUsed
c:V8.MemoryMapSpaceBytesAvailable
c:V8.MemoryMapSpaceBytesCommitted
c:V8.MemoryMapSpaceBytesUsed
c:V8.MemoryLoSpaceBytesAvailable
c:V8.MemoryLoSpaceBytesCommitted
c:V8.MemoryLoSpaceBytesUsed
c:V8.TotalBaselineCodeSize
c:V8.TotalBaselineCompileCount
c:V8.WriteBarriers
c:V8.ConstructedObjects
c:V8.FastNewClosureTotal
c:V8.RegExpEntryNative
c:V8.StringAddNative
c:V8.SubStringNative
c:V8.ICKeyedLoadGenericSmi
c:V8.ICKeyedLoadGenericSymbol
c:V8.ICKeyedLoadGenericSlow
c:V8.MegamorphicStubCacheProbes
c:V8.MegamorphicStubCacheMisses
c:V8.CountOf_INTERNALIZED_STRING_TYPE
c:V8.SizeOf_INTERNALIZED_STRING_TYPE
c:V8.CountOf_EXTERNAL_INTERNALIZED_STRING_TYPE
c:V8.SizeOf_EXTERNAL_INTERNALIZED_STRING_TYPE
c:V8.CountOf_ONE_BYTE_INTERNALIZED_STRING_TYPE
c:V8.SizeOf_ONE_BYTE_INTERNALIZED_STRING_TYPE
c:V8.CountOf_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
c:V8.SizeOf_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
c:V8.CountOf_UNCACHED_EXTERNAL_INTERNALIZED_STRING_TYPE
c:V8.SizeOf_UNCACHED_EXTERNAL_INTERNALIZED_STRING_TYPE
c:V8.CountOf_UNCACHED_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
c:V8.SizeOf_UNCACHED_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
c:V8.CountOf_STRING_TYPE
c:V8.SizeOf_STRING_TYPE
c:V8.CountOf_CONS_STRING_TYPE
c:V8.SizeOf_CONS_STRING_TYPE
c:V8.CountOf_EXTERNAL_STRING_TYPE
c:V8.SizeOf_EXTERNAL_STRING_TYPE
c:V8.CountOf_SLICED_STRING_TYPE
c:V8.SizeOf_SLICED_STRING_TYPE
c:V8.CountOf_THIN_STRING_TYPE
c:V8.SizeOf_THIN_STRING_TYPE
c:V8.CountOf_ONE_BYTE_STRING_TYPE
c:V8.SizeOf_ONE_BYTE_STRING_TYPE
c:V8.CountOf_CONS_ONE_BYTE_STRING_TYPE
c:V8.SizeOf_CONS_ONE_BYTE_STRING_TYPE
c:V8.CountOf_EXTERNAL_ONE_BYTE_STRING_TYPE
c:V8.SizeOf_EXTERNAL_ONE_BYTE_STRING_TYPE
c:V8.CountOf_SLICED_ONE_BYTE_STRING_TYPE
c:V8.SizeOf_SLICED_ONE_BYTE_STRING_TYPE
c:V8.CountOf_THIN_ONE_BYTE_STRING_TYPE
c:V8.SizeOf_THIN_ONE_BYTE_STRING_TYPE
c:V8.CountOf_UNCACHED_EXTERNAL_STRING_TYPE
c:V8.SizeOf_UNCACHED_EXTERNAL_STRING_TYPE
c:V8.CountOf_UNCACHED_EXTERNAL_ONE_BYTE_STRING_TYPE
c:V8.SizeOf_UNCACHED_EXTERNAL_ONE_BYTE_STRING_TYPE
c:V8.CountOf_EMPTY_STRING_TYPE
c:V8.SizeOf_EMPTY_STRING_TYPE
c:V8.CountOf_SYMBOL_TYPE
c:V8.SizeOf_SYMBOL_TYPE
c:V8.CountOf_HEAP_NUMBER_TYPE
c:V8.SizeOf_HEAP_NUMBER_TYPE
c:V8.CountOf_BIGINT_TYPE
c:V8.SizeOf_BIGINT_TYPE
c:V8.CountOf_ODDBALL_TYPE
c:V8.SizeOf_ODDBALL_TYPE
c:V8.CountOf_MAP_TYPE
c:V8.SizeOf_MAP_TYPE
c:V8.CountOf_CODE_TYPE
c:V8.SizeOf_CODE_TYPE
c:V8.CountOf_MUTABLE_HEAP_NUMBER_TYPE
c:V8.SizeOf_MUTABLE_HEAP_NUMBER_TYPE
c:V8.CountOf_FOREIGN_TYPE
c:V8.SizeOf_FOREIGN_TYPE
c:V8.CountOf_BYTE_ARRAY_TYPE
c:V8.SizeOf_BYTE_ARRAY_TYPE
c:V8.CountOf_BYTECODE_ARRAY_TYPE
c:V8.SizeOf_BYTECODE_ARRAY_TYPE
c:V8.CountOf_FREE_SPACE_TYPE
c:V8.SizeOf_FREE_SPACE_TYPE
c:V8.CountOf_FIXED_INT8_ARRAY_TYPE
c:V8.SizeOf_FIXED_INT8_ARRAY_TYPE
c:V8.CountOf_FIXED_UINT8_ARRAY_TYPE
c:V8.SizeOf_FIXED_UINT8_ARRAY_TYPE
c:V8.CountOf_FIXED_INT16_ARRAY_TYPE
c:V8.SizeOf_FIXED_INT16_ARRAY_TYPE
c:V8.CountOf_FIXED_UINT16_ARRAY_TYPE
c:V8.SizeOf_FIXED_UINT16_ARRAY_TYPE
c:V8.CountOf_FIXED_INT32_ARRAY_TYPE
c:V8.SizeOf_FIXED_INT32_ARRAY_TYPE
c:V8.CountOf_FIXED_UINT32_ARRAY_TYPE
c:V8.SizeOf_FIXED_UINT32_ARRAY_TYPE
c:V8.CountOf_FIXED_FLOAT32_ARRAY_TYPE
c:V8.SizeOf_FIXED_FLOAT32_ARRAY_TYPE
c:V8.CountOf_FIXED_FLOAT64_ARRAY_TYPE
c:V8.SizeOf_FIXED_FLOAT64_ARRAY_TYPE
c:V8.CountOf_FIXED_UINT8_CLAMPED_ARRAY_TYPE
c:V8.SizeOf_FIXED_UINT8_CLAMPED_ARRAY_TYPE
c:V8.CountOf_FIXED_BIGINT64_ARRAY_TYPE
c:V8.SizeOf_FIXED_BIGINT64_ARRAY_TYPE
c:V8.CountOf_FIXED_BIGUINT64_ARRAY_TYPE
c:V8.SizeOf_FIXED_BIGUINT64_ARRAY_TYPE
c:V8.CountOf_FIXED_DOUBLE_ARRAY_TYPE
c:V8.SizeOf_FIXED_DOUBLE_ARRAY_TYPE
c:V8.CountOf_FEEDBACK_METADATA_TYPE
c:V8.SizeOf_FEEDBACK_METADATA_TYPE
c:V8.CountOf_FILLER_TYPE
c:V8.SizeOf_FILLER_TYPE
c:V8.CountOf_ACCESS_CHECK_INFO_TYPE
c:V8.SizeOf_ACCESS_CHECK_INFO_TYPE
c:V8.CountOf_ACCESSOR_INFO_TYPE
c:V8.SizeOf_ACCESSOR_INFO_TYPE
c:V8.CountOf_ACCESSOR_PAIR_TYPE
c:V8.SizeOf_ACCESSOR_PAIR_TYPE
c:V8.CountOf_ALIASED_ARGUMENTS_ENTRY_TYPE
c:V8.SizeOf_ALIASED_ARGUMENTS_ENTRY_TYPE
c:V8.CountOf_ALLOCATION_MEMENTO_TYPE
c:V8.SizeOf_ALLOCATION_MEMENTO_TYPE
c:V8.CountOf_ASM_WASM_DATA_TYPE
c:V8.SizeOf_ASM_WASM_DATA_TYPE
c:V8.CountOf_ASYNC_GENERATOR_REQUEST_TYPE
c:V8.SizeOf_ASYNC_GENERATOR_REQUEST_TYPE
c:V8.CountOf_CLASS_POSITIONS_TYPE
c:V8.SizeOf_CLASS_POSITIONS_TYPE
c:V8.CountOf_DEBUG_INFO_TYPE
c:V8.SizeOf_DEBUG_INFO_TYPE
c:V8.CountOf_FUNCTION_TEMPLATE_INFO_TYPE
c:V8.SizeOf_FUNCTION_TEMPLATE_INFO_TYPE
c:V8.CountOf_FUNCTION_TEMPLATE_RARE_DATA_TYPE
c:V8.SizeOf_FUNCTION_TEMPLATE_RARE_DATA_TYPE
c:V8.CountOf_INTERCEPTOR_INFO_TYPE
c:V8.SizeOf_INTERCEPTOR_INFO_TYPE
c:V8.CountOf_INTERPRETER_DATA_TYPE
c:V8.SizeOf_INTERPRETER_DATA_TYPE
c:V8.CountOf_MODULE_INFO_ENTRY_TYPE
c:V8.SizeOf_MODULE_INFO_ENTRY_TYPE
c:V8.CountOf_MODULE_TYPE
c:V8.SizeOf_MODULE_TYPE
c:V8.CountOf_OBJECT_TEMPLATE_INFO_TYPE
c:V8.SizeOf_OBJECT_TEMPLATE_INFO_TYPE
c:V8.CountOf_PROMISE_CAPABILITY_TYPE
c:V8.SizeOf_PROMISE_CAPABILITY_TYPE
c:V8.CountOf_PROMISE_REACTION_TYPE
c:V8.SizeOf_PROMISE_REACTION_TYPE
c:V8.CountOf_PROTOTYPE_INFO_TYPE
c:V8.SizeOf_PROTOTYPE_INFO_TYPE
c:V8.CountOf_SCRIPT_TYPE
c:V8.SizeOf_SCRIPT_TYPE
c:V8.CountOf_STACK_FRAME_INFO_TYPE
c:V8.SizeOf_STACK_FRAME_INFO_TYPE
c:V8.CountOf_STACK_TRACE_FRAME_TYPE
c:V8.SizeOf_STACK_TRACE_FRAME_TYPE
c:V8.CountOf_TUPLE2_TYPE
c:V8.SizeOf_TUPLE2_TYPE
c:V8.CountOf_TUPLE3_TYPE
c:V8.SizeOf_TUPLE3_TYPE
c:V8.CountOf_ARRAY_BOILERPLATE_DESCRIPTION_TYPE
c:V8.SizeOf_ARRAY_BOILERPLATE_DESCRIPTION_TYPE
c:V8.CountOf_WASM_DEBUG_INFO_TYPE
c:V8.SizeOf_WASM_DEBUG_INFO_TYPE
c:V8.CountOf_WASM_EXCEPTION_TAG_TYPE
c:V8.SizeOf_WASM_EXCEPTION_TAG_TYPE
c:V8.CountOf_WASM_EXPORTED_FUNCTION_DATA_TYPE
c:V8.SizeOf_WASM_EXPORTED_FUNCTION_DATA_TYPE
c:V8.CountOf_CALLABLE_TASK_TYPE
c:V8.SizeOf_CALLABLE_TASK_TYPE
c:V8.CountOf_CALLBACK_TASK_TYPE
c:V8.SizeOf_CALLBACK_TASK_TYPE
c:V8.CountOf_PROMISE_FULFILL_REACTION_JOB_TASK_TYPE
c:V8.SizeOf_PROMISE_FULFILL_REACTION_JOB_TASK_TYPE
c:V8.CountOf_PROMISE_REJECT_REACTION_JOB_TASK_TYPE
c:V8.SizeOf_PROMISE_REJECT_REACTION_JOB_TASK_TYPE
c:V8.CountOf_PROMISE_RESOLVE_THENABLE_JOB_TASK_TYPE
c:V8.SizeOf_PROMISE_RESOLVE_THENABLE_JOB_TASK_TYPE
c:V8.CountOf_FINALIZATION_GROUP_CLEANUP_JOB_TASK_TYPE
c:V8.SizeOf_FINALIZATION_GROUP_CLEANUP_JOB_TASK_TYPE
c:V8.CountOf_ALLOCATION_SITE_TYPE
c:V8.SizeOf_ALLOCATION_SITE_TYPE
c:V8.CountOf_EMBEDDER_DATA_ARRAY_TYPE
c:V8.SizeOf_EMBEDDER_DATA_ARRAY_TYPE
c:V8.CountOf_FIXED_ARRAY_TYPE
c:V8.SizeOf_FIXED_ARRAY_TYPE
c:V8.CountOf_OBJECT_BOILERPLATE_DESCRIPTION_TYPE
c:V8.SizeOf_OBJECT_BOILERPLATE_DESCRIPTION_TYPE
c:V8.CountOf_CLOSURE_FEEDBACK_CELL_ARRAY_TYPE
c:V8.SizeOf_CLOSURE_FEEDBACK_CELL_ARRAY_TYPE
c:V8.CountOf_HASH_TABLE_TYPE
c:V8.SizeOf_HASH_TABLE_TYPE
c:V8.CountOf_ORDERED_HASH_MAP_TYPE
c:V8.SizeOf_ORDERED_HASH_MAP_TYPE
c:V8.CountOf_ORDERED_HASH_SET_TYPE
c:V8.SizeOf_ORDERED_HASH_SET_TYPE
c:V8.CountOf_ORDERED_NAME_DICTIONARY_TYPE
c:V8.SizeOf_ORDERED_NAME_DICTIONARY_TYPE
c:V8.CountOf_NAME_DICTIONARY_TYPE
c:V8.SizeOf_NAME_DICTIONARY_TYPE
c:V8.CountOf_GLOBAL_DICTIONARY_TYPE
c:V8.SizeOf_GLOBAL_DICTIONARY_TYPE
c:V8.CountOf_NUMBER_DICTIONARY_TYPE
c:V8.SizeOf_NUMBER_DICTIONARY_TYPE
c:V8.CountOf_SIMPLE_NUMBER_DICTIONARY_TYPE
c:V8.SizeOf_SIMPLE_NUMBER_DICTIONARY_TYPE
c:V8.CountOf_STRING_TABLE_TYPE
c:V8.SizeOf_STRING_TABLE_TYPE
c:V8.CountOf_EPHEMERON_HASH_TABLE_TYPE
c:V8.SizeOf_EPHEMERON_HASH_TABLE_TYPE
c:V8.CountOf_SCOPE_INFO_TYPE
c:V8.SizeOf_SCOPE_INFO_TYPE
c:V8.CountOf_SCRIPT_CONTEXT_TABLE_TYPE
c:V8.SizeOf_SCRIPT_CONTEXT_TABLE_TYPE
c:V8.CountOf_AWAIT_CONTEXT_TYPE
c:V8.SizeOf_AWAIT_CONTEXT_TYPE
c:V8.CountOf_BLOCK_CONTEXT_TYPE
c:V8.SizeOf_BLOCK_CONTEXT_TYPE
c:V8.CountOf_CATCH_CONTEXT_TYPE
c:V8.SizeOf_CATCH_CONTEXT_TYPE
c:V8.CountOf_DEBUG_EVALUATE_CONTEXT_TYPE
c:V8.SizeOf_DEBUG_EVALUATE_CONTEXT_TYPE
c:V8.CountOf_EVAL_CONTEXT_TYPE
c:V8.SizeOf_EVAL_CONTEXT_TYPE
c:V8.CountOf_FUNCTION_CONTEXT_TYPE
c:V8.SizeOf_FUNCTION_CONTEXT_TYPE
c:V8.CountOf_MODULE_CONTEXT_TYPE
c:V8.SizeOf_MODULE_CONTEXT_TYPE
c:V8.CountOf_NATIVE_CONTEXT_TYPE
c:V8.SizeOf_NATIVE_CONTEXT_TYPE
c:V8.CountOf_SCRIPT_CONTEXT_TYPE
c:V8.SizeOf_SCRIPT_CONTEXT_TYPE
c:V8.CountOf_WITH_CONTEXT_TYPE
c:V8.SizeOf_WITH_CONTEXT_TYPE
c:V8.CountOf_WEAK_FIXED_ARRAY_TYPE
c:V8.SizeOf_WEAK_FIXED_ARRAY_TYPE
c:V8.CountOf_TRANSITION_ARRAY_TYPE
c:V8.SizeOf_TRANSITION_ARRAY_TYPE
c:V8.CountOf_CALL_HANDLER_INFO_TYPE
c:V8.SizeOf_CALL_HANDLER_INFO_TYPE
c:V8.CountOf_CELL_TYPE
c:V8.SizeOf_CELL_TYPE
c:V8.CountOf_CODE_DATA_CONTAINER_TYPE
c:V8.SizeOf_CODE_DATA_CONTAINER_TYPE
c:V8.CountOf_DESCRIPTOR_ARRAY_TYPE
c:V8.SizeOf_DESCRIPTOR_ARRAY_TYPE
c:V8.CountOf_FEEDBACK_CELL_TYPE
c:V8.SizeOf_FEEDBACK_CELL_TYPE
c:V8.CountOf_FEEDBACK_VECTOR_TYPE
c:V8.SizeOf_FEEDBACK_VECTOR_TYPE
c:V8.CountOf_LOAD_HANDLER_TYPE
c:V8.SizeOf_LOAD_HANDLER_TYPE
c:V8.CountOf_PREPARSE_DATA_TYPE
c:V8.SizeOf_PREPARSE_DATA_TYPE
c:V8.CountOf_PROPERTY_ARRAY_TYPE
c:V8.SizeOf_PROPERTY_ARRAY_TYPE
c:V8.CountOf_PROPERTY_CELL_TYPE
c:V8.SizeOf_PROPERTY_CELL_TYPE
c:V8.CountOf_SHARED_FUNCTION_INFO_TYPE
c:V8.SizeOf_SHARED_FUNCTION_INFO_TYPE
c:V8.CountOf_SMALL_ORDERED_HASH_MAP_TYPE
c:V8.SizeOf_SMALL_ORDERED_HASH_MAP_TYPE
c:V8.CountOf_SMALL_ORDERED_HASH_SET_TYPE
c:V8.SizeOf_SMALL_ORDERED_HASH_SET_TYPE
c:V8.CountOf_SMALL_ORDERED_NAME_DICTIONARY_TYPE
c:V8.SizeOf_SMALL_ORDERED_NAME_DICTIONARY_TYPE
c:V8.CountOf_STORE_HANDLER_TYPE
c:V8.SizeOf_STORE_HANDLER_TYPE
c:V8.CountOf_UNCOMPILED_DATA_WITHOUT_PREPARSE_DATA_TYPE
c:V8.SizeOf_UNCOMPILED_DATA_WITHOUT_PREPARSE_DATA_TYPE
c:V8.CountOf_UNCOMPILED_DATA_WITH_PREPARSE_DATA_TYPE
c:V8.SizeOf_UNCOMPILED_DATA_WITH_PREPARSE_DATA_TYPE
c:V8.CountOf_WEAK_ARRAY_LIST_TYPE
c:V8.SizeOf_WEAK_ARRAY_LIST_TYPE
c:V8.CountOf_WEAK_CELL_TYPE
c:V8.SizeOf_WEAK_CELL_TYPE
c:V8.CountOf_JS_PROXY_TYPE
c:V8.SizeOf_JS_PROXY_TYPE
c:V8.CountOf_JS_GLOBAL_OBJECT_TYPE
c:V8.SizeOf_JS_GLOBAL_OBJECT_TYPE
c:V8.CountOf_JS_GLOBAL_PROXY_TYPE
c:V8.SizeOf_JS_GLOBAL_PROXY_TYPE
c:V8.CountOf_JS_MODULE_NAMESPACE_TYPE
c:V8.SizeOf_JS_MODULE_NAMESPACE_TYPE
c:V8.CountOf_JS_SPECIAL_API_OBJECT_TYPE
c:V8.SizeOf_JS_SPECIAL_API_OBJECT_TYPE
c:V8.CountOf_JS_VALUE_TYPE
c:V8.SizeOf_JS_VALUE_TYPE
c:V8.CountOf_JS_API_OBJECT_TYPE
c:V8.SizeOf_JS_API_OBJECT_TYPE
c:V8.CountOf_JS_OBJECT_TYPE
c:V8.SizeOf_JS_OBJECT_TYPE
c:V8.CountOf_JS_ARGUMENTS_TYPE
c:V8.SizeOf_JS_ARGUMENTS_TYPE
c:V8.CountOf_JS_ARRAY_BUFFER_TYPE
c:V8.SizeOf_JS_ARRAY_BUFFER_TYPE
c:V8.CountOf_JS_ARRAY_ITERATOR_TYPE
c:V8.SizeOf_JS_ARRAY_ITERATOR_TYPE
c:V8.CountOf_JS_ARRAY_TYPE
c:V8.SizeOf_JS_ARRAY_TYPE
c:V8.CountOf_JS_ASYNC_FROM_SYNC_ITERATOR_TYPE
c:V8.SizeOf_JS_ASYNC_FROM_SYNC_ITERATOR_TYPE
c:V8.CountOf_JS_ASYNC_FUNCTION_OBJECT_TYPE
c:V8.SizeOf_JS_ASYNC_FUNCTION_OBJECT_TYPE
c:V8.CountOf_JS_ASYNC_GENERATOR_OBJECT_TYPE
c:V8.SizeOf_JS_ASYNC_GENERATOR_OBJECT_TYPE
c:V8.CountOf_JS_CONTEXT_EXTENSION_OBJECT_TYPE
c:V8.SizeOf_JS_CONTEXT_EXTENSION_OBJECT_TYPE
c:V8.CountOf_JS_DATE_TYPE
c:V8.SizeOf_JS_DATE_TYPE
c:V8.CountOf_JS_ERROR_TYPE
c:V8.SizeOf_JS_ERROR_TYPE
c:V8.CountOf_JS_GENERATOR_OBJECT_TYPE
c:V8.SizeOf_JS_GENERATOR_OBJECT_TYPE
c:V8.CountOf_JS_MAP_TYPE
c:V8.SizeOf_JS_MAP_TYPE
c:V8.CountOf_JS_MAP_KEY_ITERATOR_TYPE
c:V8.SizeOf_JS_MAP_KEY_ITERATOR_TYPE
c:V8.CountOf_JS_MAP_KEY_VALUE_ITERATOR_TYPE
c:V8.SizeOf_JS_MAP_KEY_VALUE_ITERATOR_TYPE
c:V8.CountOf_JS_MAP_VALUE_ITERATOR_TYPE
c:V8.SizeOf_JS_MAP_VALUE_ITERATOR_TYPE
c:V8.CountOf_JS_MESSAGE_OBJECT_TYPE
c:V8.SizeOf_JS_MESSAGE_OBJECT_TYPE
c:V8.CountOf_JS_PROMISE_TYPE
c:V8.SizeOf_JS_PROMISE_TYPE
c:V8.CountOf_JS_REGEXP_TYPE
c:V8.SizeOf_JS_REGEXP_TYPE
c:V8.CountOf_JS_REGEXP_STRING_ITERATOR_TYPE
c:V8.SizeOf_JS_REGEXP_STRING_ITERATOR_TYPE
c:V8.CountOf_JS_SET_TYPE
c:V8.SizeOf_JS_SET_TYPE
c:V8.CountOf_JS_SET_KEY_VALUE_ITERATOR_TYPE
c:V8.SizeOf_JS_SET_KEY_VALUE_ITERATOR_TYPE
c:V8.CountOf_JS_SET_VALUE_ITERATOR_TYPE
c:V8.SizeOf_JS_SET_VALUE_ITERATOR_TYPE
c:V8.CountOf_JS_STRING_ITERATOR_TYPE
c:V8.SizeOf_JS_STRING_ITERATOR_TYPE
c:V8.CountOf_JS_WEAK_REF_TYPE
c:V8.SizeOf_JS_WEAK_REF_TYPE
c:V8.CountOf_JS_FINALIZATION_GROUP_CLEANUP_ITERATOR_TYPE
c:V8.SizeOf_JS_FINALIZATION_GROUP_CLEANUP_ITERATOR_TYPE
c:V8.CountOf_JS_FINALIZATION_GROUP_TYPE
c:V8.SizeOf_JS_FINALIZATION_GROUP_TYPE
c:V8.CountOf_JS_WEAK_MAP_TYPE
c:V8.SizeOf_JS_WEAK_MAP_TYPE
c:V8.CountOf_JS_WEAK_SET_TYPE
c:V8.SizeOf_JS_WEAK_SET_TYPE
c:V8.CountOf_JS_TYPED_ARRAY_TYPE
c:V8.SizeOf_JS_TYPED_ARRAY_TYPE
c:V8.CountOf_JS_DATA_VIEW_TYPE
c:V8.SizeOf_JS_DATA_VIEW_TYPE
c:V8.CountOf_JS_INTL_V8_BREAK_ITERATOR_TYPE
c:V8.SizeOf_JS_INTL_V8_BREAK_ITERATOR_TYPE
c:V8.CountOf_JS_INTL_COLLATOR_TYPE
c:V8.SizeOf_JS_INTL_COLLATOR_TYPE
c:V8.CountOf_JS_INTL_DATE_TIME_FORMAT_TYPE
c:V8.SizeOf_JS_INTL_DATE_TIME_FORMAT_TYPE
c:V8.CountOf_JS_INTL_LIST_FORMAT_TYPE
c:V8.SizeOf_JS_INTL_LIST_FORMAT_TYPE
c:V8.CountOf_JS_INTL_LOCALE_TYPE
c:V8.SizeOf_JS_INTL_LOCALE_TYPE
c:V8.CountOf_JS_INTL_NUMBER_FORMAT_TYPE
c:V8.SizeOf_JS_INTL_NUMBER_FORMAT_TYPE
c:V8.CountOf_JS_INTL_PLURAL_RULES_TYPE
c:V8.SizeOf_JS_INTL_PLURAL_RULES_TYPE
c:V8.CountOf_JS_INTL_RELATIVE_TIME_FORMAT_TYPE
c:V8.SizeOf_JS_INTL_RELATIVE_TIME_FORMAT_TYPE
c:V8.CountOf_JS_INTL_SEGMENT_ITERATOR_TYPE
c:V8.SizeOf_JS_INTL_SEGMENT_ITERATOR_TYPE
c:V8.CountOf_JS_INTL_SEGMENTER_TYPE
c:V8.SizeOf_JS_INTL_SEGMENTER_TYPE
c:V8.CountOf_WASM_EXCEPTION_TYPE
c:V8.SizeOf_WASM_EXCEPTION_TYPE
c:V8.CountOf_WASM_GLOBAL_TYPE
c:V8.SizeOf_WASM_GLOBAL_TYPE
c:V8.CountOf_WASM_INSTANCE_TYPE
c:V8.SizeOf_WASM_INSTANCE_TYPE
c:V8.CountOf_WASM_MEMORY_TYPE
c:V8.SizeOf_WASM_MEMORY_TYPE
c:V8.CountOf_WASM_MODULE_TYPE
c:V8.SizeOf_WASM_MODULE_TYPE
c:V8.CountOf_WASM_TABLE_TYPE
c:V8.SizeOf_WASM_TABLE_TYPE
c:V8.CountOf_JS_BOUND_FUNCTION_TYPE
c:V8.SizeOf_JS_BOUND_FUNCTION_TYPE
c:V8.CountOf_JS_FUNCTION_TYPE
c:V8.SizeOf_JS_FUNCTION_TYPE
c:V8.CountOf_CODE_TYPE-OPTIMIZED_FUNCTION
c:V8.SizeOf_CODE_TYPE-OPTIMIZED_FUNCTION
c:V8.CountOf_CODE_TYPE-BYTECODE_HANDLER
c:V8.SizeOf_CODE_TYPE-BYTECODE_HANDLER
c:V8.CountOf_CODE_TYPE-STUB
c:V8.SizeOf_CODE_TYPE-STUB
c:V8.CountOf_CODE_TYPE-BUILTIN
c:V8.SizeOf_CODE_TYPE-BUILTIN
c:V8.CountOf_CODE_TYPE-REGEXP
c:V8.SizeOf_CODE_TYPE-REGEXP
c:V8.CountOf_CODE_TYPE-WASM_FUNCTION
c:V8.SizeOf_CODE_TYPE-WASM_FUNCTION
c:V8.CountOf_CODE_TYPE-WASM_TO_JS_FUNCTION
c:V8.SizeOf_CODE_TYPE-WASM_TO_JS_FUNCTION
c:V8.CountOf_CODE_TYPE-JS_TO_WASM_FUNCTION
c:V8.SizeOf_CODE_TYPE-JS_TO_WASM_FUNCTION
c:V8.CountOf_CODE_TYPE-WASM_INTERPRETER_ENTRY
c:V8.SizeOf_CODE_TYPE-WASM_INTERPRETER_ENTRY
c:V8.CountOf_CODE_TYPE-C_WASM_ENTRY
c:V8.SizeOf_CODE_TYPE-C_WASM_ENTRY
c:V8.CountOf_FIXED_ARRAY-BYTECODE_ARRAY_CONSTANT_POOL_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-BYTECODE_ARRAY_CONSTANT_POOL_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-BYTECODE_ARRAY_HANDLER_TABLE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-BYTECODE_ARRAY_HANDLER_TABLE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-CODE_STUBS_TABLE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-CODE_STUBS_TABLE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-COMPILATION_CACHE_TABLE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-COMPILATION_CACHE_TABLE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-CONTEXT_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-CONTEXT_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-COPY_ON_WRITE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-COPY_ON_WRITE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-DEOPTIMIZATION_DATA_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-DEOPTIMIZATION_DATA_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-DESCRIPTOR_ARRAY_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-DESCRIPTOR_ARRAY_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-EMBEDDED_OBJECT_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-EMBEDDED_OBJECT_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-ENUM_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-ENUM_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-ENUM_INDICES_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-ENUM_INDICES_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-DEPENDENT_CODE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-DEPENDENT_CODE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-DICTIONARY_ELEMENTS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-DICTIONARY_ELEMENTS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-DICTIONARY_PROPERTIES_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-DICTIONARY_PROPERTIES_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-EMPTY_PROPERTIES_DICTIONARY_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-EMPTY_PROPERTIES_DICTIONARY_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-PACKED_ELEMENTS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-PACKED_ELEMENTS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-FAST_PROPERTIES_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-FAST_PROPERTIES_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-FAST_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-FAST_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-HANDLER_TABLE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-HANDLER_TABLE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-JS_COLLECTION_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-JS_COLLECTION_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-JS_WEAK_COLLECTION_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-JS_WEAK_COLLECTION_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-NOSCRIPT_SHARED_FUNCTION_INFOS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-NOSCRIPT_SHARED_FUNCTION_INFOS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-NUMBER_STRING_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-NUMBER_STRING_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-OBJECT_TO_CODE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-OBJECT_TO_CODE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-OPTIMIZED_CODE_LITERALS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-OPTIMIZED_CODE_LITERALS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-OPTIMIZED_CODE_MAP_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-OPTIMIZED_CODE_MAP_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-PROTOTYPE_USERS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-PROTOTYPE_USERS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-REGEXP_MULTIPLE_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-REGEXP_MULTIPLE_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-RETAINED_MAPS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-RETAINED_MAPS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-SCOPE_INFO_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-SCOPE_INFO_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-SCRIPT_LIST_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-SCRIPT_LIST_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-SERIALIZED_OBJECTS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-SERIALIZED_OBJECTS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-SHARED_FUNCTION_INFOS_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-SHARED_FUNCTION_INFOS_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-SINGLE_CHARACTER_STRING_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-SINGLE_CHARACTER_STRING_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-SLOW_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-SLOW_TEMPLATE_INSTANTIATIONS_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-STRING_SPLIT_CACHE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-STRING_SPLIT_CACHE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-STRING_TABLE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-STRING_TABLE_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-TEMPLATE_INFO_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-TEMPLATE_INFO_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-FEEDBACK_METADATA_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-FEEDBACK_METADATA_SUB_TYPE
c:V8.CountOf_FIXED_ARRAY-WEAK_NEW_SPACE_OBJECT_TO_CODE_SUB_TYPE
c:V8.SizeOf_FIXED_ARRAY-WEAK_NEW_SPACE_OBJECT_TO_CODE_SUB_TYPE
GC_MC_INCREMENTAL
GC_MC_INCREMENTAL_EMBEDDER_PROLOGUE
GC_MC_INCREMENTAL_EMBEDDER_TRACING
GC_MC_INCREMENTAL_EXTERNAL_EPILOGUE
GC_MC_INCREMENTAL_EXTERNAL_PROLOGUE
GC_MC_INCREMENTAL_FINALIZE
GC_MC_INCREMENTAL_FINALIZE_BODY
GC_MC_INCREMENTAL_LAYOUT_CHANGE
GC_MC_INCREMENTAL_START
GC_MC_INCREMENTAL_SWEEPING
GC_HEAP_EMBEDDER_TRACING_EPILOGUE
GC_HEAP_EPILOGUE
GC_HEAP_EPILOGUE_REDUCE_NEW_SPACE
GC_HEAP_EXTERNAL_EPILOGUE
GC_HEAP_EXTERNAL_PROLOGUE
GC_HEAP_EXTERNAL_WEAK_GLOBAL_HANDLES
GC_HEAP_PROLOGUE
GC_MC_CLEAR
GC_MC_EPILOGUE
GC_MC_EVACUATE
GC_MC_FINISH
GC_MC_MARK
GC_MC_PROLOGUE
GC_MC_SWEEP
GC_MC_CLEAR_DEPENDENT_CODE
GC_MC_CLEAR_FLUSHABLE_BYTECODE
GC_MC_CLEAR_FLUSHED_JS_FUNCTIONS
GC_MC_CLEAR_MAPS
GC_MC_CLEAR_SLOTS_BUFFER
GC_MC_CLEAR_STORE_BUFFER
GC_MC_CLEAR_STRING_TABLE
GC_MC_CLEAR_WEAK_COLLECTIONS
GC_MC_CLEAR_WEAK_LISTS
GC_MC_CLEAR_WEAK_REFERENCES
GC_MC_EVACUATE_CANDIDATES
GC_MC_EVACUATE_CLEAN_UP
GC_MC_EVACUATE_COPY
GC_MC_EVACUATE_EPILOGUE
GC_MC_EVACUATE_PROLOGUE
GC_MC_EVACUATE_REBALANCE
GC_MC_EVACUATE_UPDATE_POINTERS
GC_MC_EVACUATE_UPDATE_POINTERS_SLOTS_MAIN
GC_MC_EVACUATE_UPDATE_POINTERS_SLOTS_MAP_SPACE
GC_MC_EVACUATE_UPDATE_POINTERS_TO_NEW_ROOTS
GC_MC_EVACUATE_UPDATE_POINTERS_WEAK
GC_MC_MARK_EMBEDDER_PROLOGUE
GC_MC_MARK_EMBEDDER_TRACING
GC_MC_MARK_EMBEDDER_TRACING_CLOSURE
GC_MC_MARK_FINISH_INCREMENTAL
GC_MC_MARK_MAIN
GC_MC_MARK_ROOTS
GC_MC_MARK_WEAK_CLOSURE
GC_MC_MARK_WEAK_CLOSURE_EPHEMERON
GC_MC_MARK_WEAK_CLOSURE_EPHEMERON_MARKING
GC_MC_MARK_WEAK_CLOSURE_EPHEMERON_LINEAR
GC_MC_MARK_WEAK_CLOSURE_WEAK_HANDLES
GC_MC_MARK_WEAK_CLOSURE_WEAK_ROOTS
GC_MC_MARK_WEAK_CLOSURE_HARMONY
GC_MC_SWEEP_CODE
GC_MC_SWEEP_MAP
GC_MC_SWEEP_OLD
GC_MINOR_MC
GC_MINOR_MC_CLEAR
GC_MINOR_MC_CLEAR_STRING_TABLE
GC_MINOR_MC_CLEAR_WEAK_LISTS
GC_MINOR_MC_EVACUATE
GC_MINOR_MC_EVACUATE_CLEAN_UP
GC_MINOR_MC_EVACUATE_COPY
GC_MINOR_MC_EVACUATE_EPILOGUE
GC_MINOR_MC_EVACUATE_PROLOGUE
GC_MINOR_MC_EVACUATE_REBALANCE
GC_MINOR_MC_EVACUATE_UPDATE_POINTERS
GC_MINOR_MC_EVACUATE_UPDATE_POINTERS_SLOTS
GC_MINOR_MC_EVACUATE_UPDATE_POINTERS_TO_NEW_ROOTS
GC_MINOR_MC_EVACUATE_UPDATE_POINTERS_WEAK
GC_MINOR_MC_MARK
GC_MINOR_MC_MARK_GLOBAL_HANDLES
GC_MINOR_MC_MARK_SEED
GC_MINOR_MC_MARK_ROOTS
GC_MINOR_MC_MARK_WEAK
GC_MINOR_MC_MARKING_DEQUE
GC_MINOR_MC_RESET_LIVENESS
GC_MINOR_MC_SWEEPING
GC_SCAVENGER_FAST_PROMOTE
GC_SCAVENGER_SCAVENGE
GC_SCAVENGER_PROCESS_ARRAY_BUFFERS
GC_SCAVENGER_SCAVENGE_WEAK_GLOBAL_HANDLES_IDENTIFY
GC_SCAVENGER_SCAVENGE_WEAK_GLOBAL_HANDLES_PROCESS
GC_SCAVENGER_SCAVENGE_PARALLEL
GC_SCAVENGER_SCAVENGE_ROOTS
GC_SCAVENGER_SCAVENGE_UPDATE_REFS
GC_SCAVENGER_SCAVENGE_WEAK
GC_SCAVENGER_SCAVENGE_FINALIZE
GC_BACKGROUND_ARRAY_BUFFER_FREE
GC_BACKGROUND_STORE_BUFFER
GC_BACKGROUND_UNMAPPER
GC_MC_BACKGROUND_EVACUATE_COPY
GC_MC_BACKGROUND_EVACUATE_UPDATE_POINTERS
GC_MC_BACKGROUND_MARKING
GC_MC_BACKGROUND_SWEEPING
GC_MINOR_MC_BACKGROUND_EVACUATE_COPY
GC_MINOR_MC_BACKGROUND_EVACUATE_UPDATE_POINTERS
GC_MINOR_MC_BACKGROUND_MARKING
GC_SCAVENGER_BACKGROUND_SCAVENGE_PARALLEL
AccessorGetterCallback
AccessorSetterCallback
ArrayLengthGetter
ArrayLengthSetter
BoundFunctionLengthGetter
BoundFunctionNameGetter
CompileAnalyse
CompileBackgroundAnalyse
CompileBackgroundCompileTask
CompileBackgroundEval
CompileBackgroundFunction
CompileBackgroundIgnition
CompileBackgroundRewriteReturnResult
CompileBackgroundScopeAnalysis
CompileBackgroundScript
CompileCollectSourcePositions
CompileDeserialize
CompileEnqueueOnDispatcher
CompileEval
CompileFinalizeBackgroundCompileTask
CompileFinishNowOnDispatcher
CompileFunction
CompileGetFromOptimizedCodeMap
CompileIgnition
CompileIgnitionFinalization
CompileRewriteReturnResult
CompileScopeAnalysis
CompileScript
CompileSerialize
CompileWaitForDispatcher
DeoptimizeCode
DeserializeContext
DeserializeIsolate
FunctionCallback
FunctionLengthGetter
FunctionPrototypeGetter
FunctionPrototypeSetter
GC_Custom_AllAvailableGarbage
GC_Custom_IncrementalMarkingObserver
GC_Custom_SlowAllocateRaw
GCEpilogueCallback
GCPrologueCallback
Genesis
GetMoreDataCallback
IndexedDefinerCallback
IndexedDeleterCallback
IndexedDescriptorCallback
IndexedEnumeratorCallback
IndexedGetterCallback
IndexedQueryCallback
IndexedSetterCallback
Invoke
InvokeApiFunction
InvokeApiInterruptCallbacks
InvokeFunctionCallback
JS_Execution
Map_SetPrototype
Map_TransitionToAccessorProperty
Map_TransitionToDataProperty
MessageListenerCallback
NamedDefinerCallback
NamedDeleterCallback
NamedDescriptorCallback
NamedEnumeratorCallback
NamedGetterCallback
NamedQueryCallback
NamedSetterCallback
Object_DeleteProperty
ObjectVerify
OptimizeCode
ParseArrowFunctionLiteral
ParseBackgroundArrowFunctionLiteral
ParseBackgroundFunctionLiteral
ParseBackgroundProgram
ParseEval
ParseFunction
ParseFunctionLiteral
ParseProgram
PreParseArrowFunctionLiteral
PreParseBackgroundArrowFunctionLiteral
PreParseBackgroundWithVariableResolution
PreParseWithVariableResolution
PropertyCallback
PrototypeMap_TransitionToAccessorProperty
PrototypeMap_TransitionToDataProperty
PrototypeObject_DeleteProperty
RecompileConcurrent
RecompileSynchronous
ReconfigureToDataProperty
StringLengthGetter
TestCounter1
TestCounter2
TestCounter3
DebugBreakOnBytecode
LoadLookupSlotForCall
ArrayIncludes_Slow
ArraySpeciesConstructor
EstimateNumberOfElements
GetArrayKeys
GrowArrayElements
HasComplexElements
IsArray
NormalizeElements
PrepareElementsForSort
TransitionElementsKind
TransitionElementsKindWithKind
TrySliceSimpleNonFastElements
AtomicsLoad64
AtomicsStore64
AtomicsNumWaitersForTesting
SetAllowAtomicsWait
BigIntBinaryOp
BigIntCompareToBigInt
BigIntCompareToNumber
BigIntCompareToString
BigIntEqualToBigInt
BigIntEqualToNumber
BigIntEqualToString
BigIntToBoolean
BigIntToNumber
BigIntUnaryOp
ToBigInt
DefineClass
HomeObjectSymbol
LoadFromSuper
LoadKeyedFromSuper
StoreKeyedToSuper
StoreToSuper
ThrowConstructorNonCallableError
ThrowNotSuperConstructor
ThrowStaticPrototypeError
ThrowSuperAlreadyCalledError
ThrowSuperNotCalled
ThrowUnsupportedSuperError
MapGrow
MapShrink
SetGrow
SetShrink
TheHole
CompileForOnStackReplacement
CompileOptimized_Concurrent
CompileOptimized_NotConcurrent
EvictOptimizedCodeSlot
FunctionFirstExecution
ResolvePossiblyDirectEval
DateCurrentTime
ClearStepping
CollectGarbage
DebugBreakAtEntry
DebugCollectCoverage
DebugGetLoadedScriptIds
DebugOnFunctionCall
DebugPopPromise
DebugPrepareStepInSuspendedGenerator
DebugPushPromise
DebugAsyncFunctionEntered
DebugAsyncFunctionFinished
DebugAsyncFunctionSuspended
DebugToggleBlockCoverage
DebugTogglePreciseCoverage
FunctionGetInferredName
GetBreakLocations
GetGeneratorScopeCount
GetGeneratorScopeDetails
GetHeapUsage
IncBlockCounter
IsBreakOnException
ScheduleBreak
ScriptLocationFromLine2
SetGeneratorScopeVariableValue
LiveEditPatchScript
ForInHasProperty
Call
FunctionGetScriptSource
FunctionGetScriptId
FunctionGetScriptSourcePosition
FunctionGetSourceCode
FunctionIsAPIFunction
IsFunction
AsyncGeneratorHasCatchHandlerForPC
CreateJSGeneratorObject
GeneratorClose
GeneratorGetFunction
GeneratorGetResumeMode
ElementsTransitionAndStoreIC_Miss
KeyedLoadIC_Miss
KeyedStoreIC_Miss
StoreInArrayLiteralIC_Miss
LoadAccessorProperty
LoadCallbackProperty
LoadElementWithInterceptor
LoadGlobalIC_Miss
LoadIC_Miss
LoadPropertyWithInterceptor
StoreCallbackProperty
StoreGlobalIC_Miss
StoreGlobalICNoFeedback_Miss
StoreIC_Miss
StorePropertyWithInterceptor
CloneObjectIC_Miss
KeyedHasIC_Miss
HasElementWithInterceptor
AccessCheck
AllocateSeqOneByteString
AllocateSeqTwoByteString
AllowDynamicFunction
CheckIsBootstrapping
CreateAsyncFromSyncIterator
CreateListFromArrayLike
FatalProcessOutOfMemoryInAllocateRaw
FatalProcessOutOfMemoryInvalidArrayLength
GetAndResetRuntimeCallStats
GetTemplateObject
IncrementUseCounter
Interrupt
BytecodeBudgetInterrupt
NewReferenceError
NewSyntaxError
NewTypeError
PromoteScheduledException
ReportMessage
ReThrow
RunMicrotaskCallback
PerformMicrotaskCheckpoint
StackGuard
Throw
ThrowApplyNonFunction
ThrowCalledNonCallable
ThrowConstructedNonConstructable
ThrowConstructorReturnedNonObject
ThrowInvalidStringLength
ThrowInvalidTypedArrayAlignment
ThrowIteratorError
ThrowIteratorResultNotAnObject
ThrowNotConstructor
ThrowPatternAssignmentNonCoercible
ThrowRangeError
ThrowReferenceError
ThrowAccessedUninitializedVariable
ThrowStackOverflow
ThrowSymbolAsyncIteratorInvalid
ThrowSymbolIteratorInvalid
ThrowThrowMethodMissing
ThrowTypeError
ThrowTypeErrorIfStrict
UnwindAndFindExceptionHandler
FinalizationGroupCleanupJob
FormatList
FormatListToParts
StringToUpperCaseIntl
CreateArrayLiteral
CreateArrayLiteralWithoutAllocationSite
CreateObjectLiteral
CreateObjectLiteralWithoutAllocationSite
DynamicImportCall
GetImportMetaObject
GetModuleNamespace
GetHoleNaNLower
GetHoleNaNUpper
IsSmi
IsValidSmi
MaxSmi
SmiLexicographicCompare
StringParseFloat
StringParseInt
AddDictionaryProperty
AddPrivateField
ClassOf
CollectTypeProfile
CompleteInobjectSlackTrackingForMap
CopyDataProperties
CopyDataPropertiesWithExcludedProperties
CreateDataProperty
DefineAccessorPropertyUnchecked
DefineDataPropertyInLiteral
DefineGetterPropertyUnchecked
DefineSetterPropertyUnchecked
GetFunctionName
GetOwnPropertyDescriptor
GetOwnPropertyKeys
HasFastPackedElements
HasInPrototypeChain
InternalSetPrototype
IsJSReceiver
NewObject
ObjectEntriesSkipFastPath
ObjectHasOwnProperty
ObjectGetOwnPropertyNamesTryFast
ObjectValuesSkipFastPath
OptimizeObjectForAddingMultipleProperties
PerformSideEffectCheckForObject
SetDataProperties
SetKeyedProperty
SetNamedProperty
StoreDataPropertyInLiteral
ShrinkPropertyDictionary
ToFastProperties
TryMigrateInstance
NotEqual
StrictNotEqual
PromiseHookAfter
PromiseHookBefore
PromiseHookInit
AwaitPromisesInit
AwaitPromisesInitOld
PromiseMarkAsHandled
PromiseRejectEventFromStack
PromiseRevokeReject
PromiseStatus
PromiseRejectAfterResolved
PromiseResolveAfterResolved
CheckProxyGetSetTrapResult
CheckProxyHasTrap
GetPropertyWithReceiver
IsJSProxy
JSProxyGetHandler
JSProxyGetTarget
SetPropertyWithReceiver
IsRegExp
RegExpExec
RegExpExecMultiple
RegExpInitializeAndCompile
RegExpReplaceRT
StringReplaceNonGlobalRegExpWithFunction
StringSplit
DeclareEvalFunction
DeclareEvalVar
DeclareGlobals
DeleteLookupSlot
LoadLookupSlot
LoadLookupSlotInsideTypeof
NewClosure
NewClosure_Tenured
NewFunctionContext
NewRestParameter
NewScriptContext
NewSloppyArguments
NewSloppyArguments_Generic
NewStrictArguments
PushBlockContext
PushCatchContext
PushModuleContext
PushWithContext
StoreLookupSlot_Sloppy
StoreLookupSlot_SloppyHoisting
StoreLookupSlot_Strict
ThrowConstAssignError
FlattenString
GetSubstitution
InternalizeString
StringAdd
StringBuilderConcat
StringCharCodeAt
StringEscapeQuotes
StringIncludes
StringIndexOfUnchecked
StringLastIndexOf
StringMaxLength
StringReplaceOneCharWithString
StringCompareSequence
StringToArray
StringTrim
CreatePrivateNameSymbol
CreatePrivateSymbol
SymbolDescriptiveString
SymbolIsPrivate
ClearMegamorphicStubCache
ClearFunctionFeedback
CompleteInobjectSlackTracking
ConstructConsString
ConstructSlicedString
ConstructDouble
DebugPrint
DebugTrace
DebugTrackRetainingPath
DeoptimizeFunction
DeoptimizeNow
DeserializeWasmModule
DisallowCodegenFromStrings
DisallowWasmCodegen
DisassembleFunction
FreezeWasmLazyCompilation
GetCallable
GetDeoptCount
GetInitializerFunction
GetOptimizationStatus
GetUndetectable
GetWasmExceptionId
GetWasmExceptionValues
GetWasmRecoveredTrapCount
GlobalPrint
HasDictionaryElements
HasPackedElements
HasDoubleElements
HasFastElements
HasFastProperties
HasFixedBigInt64Elements
HasFixedBigUint64Elements
HasFixedFloat32Elements
HasFixedFloat64Elements
HasFixedInt16Elements
HasFixedInt32Elements
HasFixedInt8Elements
HasFixedUint16Elements
HasFixedUint32Elements
HasFixedUint8ClampedElements
HasFixedUint8Elements
HasHoleyElements
HasObjectElements
HasSloppyArgumentsElements
HasSmiElements
HasSmiOrObjectElements
HaveSameMap
HeapObjectVerify
ICsAreEnabled
InNewSpace
IsAsmWasmCode
IsConcurrentRecompilationSupported
WasmTierUpFunction
IsLiftoffFunction
IsWasmCode
IsWasmTrapHandlerEnabled
IsThreadInWasm
NeverOptimizeFunction
NotifyContextDisposed
OptimizeFunctionOnNextCall
OptimizeOsr
EnsureFeedbackVectorForFunction
PrepareFunctionForOptimization
PrintWithNameForAssert
RedirectToWasmInterpreter
RunningInSimulator
SerializeWasmModule
SetAllocationTimeout
SetForceSlowPath
SetWasmCompileControls
SetWasmInstantiateControls
ArraySpeciesProtector
MapIteratorProtector
SetIteratorProtector
StringIteratorProtector
SystemBreak
TraceEnter
TraceExit
UnblockConcurrentRecompilation
WasmGetNumberOfInstances
WasmNumInterpretedCalls
WasmTraceMemory
WasmMemoryHasFullGuardRegion
SetWasmThreadsEnabled
ArrayBufferDetach
ArrayBufferViewWasDetached
IsTypedArray
TypedArrayCopyElements
TypedArrayGetBuffer
TypedArraySet
TypedArraySortFast
ThrowWasmError
ThrowWasmStackOverflow
WasmExceptionGetValues
WasmExceptionGetTag
WasmRunInterpreter
WasmThrowCreate
WasmThrowTypeError
WasmFunctionTableGet
WasmFunctionTableSet
WasmTableInit
WasmTableCopy
WasmIndirectCallCheckSignatureAndGetTargetInstance
WasmIndirectCallGetTargetAddress
WasmIsValidAnyFuncValue
API_ArrayBuffer_Cast
API_ArrayBuffer_Detach
API_ArrayBuffer_New
API_Array_CloneElementAt
API_Array_New
API_BigInt64Array_New
API_BigInt_NewFromWords
API_BigIntObject_BigIntValue
API_BigIntObject_New
API_BigUint64Array_New
API_BooleanObject_BooleanValue
API_BooleanObject_New
API_Context_New
API_Context_NewRemoteContext
API_DataView_New
API_Date_New
API_Date_NumberValue
API_Debug_Call
API_debug_GetPrivateFields
API_Error_New
API_External_New
API_Float32Array_New
API_Float64Array_New
API_Function_Call
API_Function_New
API_Function_NewInstance
API_FunctionTemplate_GetFunction
API_FunctionTemplate_New
API_FunctionTemplate_NewRemoteInstance
API_FunctionTemplate_NewWithCache
API_FunctionTemplate_NewWithFastHandler
API_Int16Array_New
API_Int32Array_New
API_Int8Array_New
API_Isolate_DateTimeConfigurationChangeNotification
API_Isolate_LocaleConfigurationChangeNotification
API_JSON_Parse
API_JSON_Stringify
API_Map_AsArray
API_Map_Clear
API_Map_Delete
API_Map_Get
API_Map_Has
API_Map_New
API_Map_Set
API_Message_GetEndColumn
API_Message_GetLineNumber
API_Message_GetSourceLine
API_Message_GetStartColumn
API_Module_Evaluate
API_Module_InstantiateModule
API_NumberObject_New
API_NumberObject_NumberValue
API_Object_CallAsConstructor
API_Object_CallAsFunction
API_Object_CreateDataProperty
API_Object_DefineOwnProperty
API_Object_DefineProperty
API_Object_Delete
API_Object_DeleteProperty
API_Object_ForceSet
API_Object_Get
API_Object_GetOwnPropertyDescriptor
API_Object_GetOwnPropertyNames
API_Object_GetPropertyAttributes
API_Object_GetPropertyNames
API_Object_GetRealNamedProperty
API_Object_GetRealNamedPropertyAttributes
API_Object_GetRealNamedPropertyAttributesInPrototypeChain
API_Object_GetRealNamedPropertyInPrototypeChain
API_Object_Has
API_Object_HasOwnProperty
API_Object_HasRealIndexedProperty
API_Object_HasRealNamedCallbackProperty
API_Object_HasRealNamedProperty
API_Object_New
API_Object_ObjectProtoToString
API_Object_Set
API_Object_SetAccessor
API_Object_SetIntegrityLevel
API_Object_SetPrivate
API_Object_SetPrototype
API_ObjectTemplate_New
API_ObjectTemplate_NewInstance
API_Object_ToArrayIndex
API_Object_ToBigInt
API_Object_ToDetailString
API_Object_ToInt32
API_Object_ToInteger
API_Object_ToNumber
API_Object_ToObject
API_Object_ToString
API_Object_ToUint32
API_Persistent_New
API_Private_New
API_Promise_Catch
API_Promise_Chain
API_Promise_HasRejectHandler
API_Promise_Resolver_New
API_Promise_Resolver_Reject
API_Promise_Resolver_Resolve
API_Promise_Result
API_Promise_Status
API_Promise_Then
API_Proxy_New
API_RangeError_New
API_ReferenceError_New
API_RegExp_New
API_ScriptCompiler_Compile
API_ScriptCompiler_CompileFunctionInContext
API_ScriptCompiler_CompileUnbound
API_Script_Run
API_Set_Add
API_Set_AsArray
API_Set_Clear
API_Set_Delete
API_Set_Has
API_Set_New
API_SharedArrayBuffer_New
API_String_Concat
API_String_NewExternalOneByte
API_String_NewExternalTwoByte
API_String_NewFromOneByte
API_String_NewFromTwoByte
API_String_NewFromUtf8
API_StringObject_New
API_StringObject_StringValue
API_String_Write
API_String_WriteUtf8
API_Symbol_New
API_SymbolObject_New
API_SymbolObject_SymbolValue
API_SyntaxError_New
API_TracedGlobal_New
API_TryCatch_StackTrace
API_TypeError_New
API_Uint16Array_New
API_Uint32Array_New
API_Uint8Array_New
API_Uint8ClampedArray_New
API_UnboundScript_GetId
API_UnboundScript_GetLineNumber
API_UnboundScript_GetName
API_UnboundScript_GetSourceMappingURL
API_UnboundScript_GetSourceURL
API_ValueDeserializer_ReadHeader
API_ValueDeserializer_ReadValue
API_ValueSerializer_WriteValue
API_Value_InstanceOf
API_Value_Int32Value
API_Value_IntegerValue
API_Value_NumberValue
API_Value_TypeOf
API_Value_Uint32Value
API_WeakMap_Get
API_WeakMap_New
API_WeakMap_Set
KeyedLoadIC_KeyedLoadSloppyArgumentsStub
KeyedLoadIC_LoadElementDH
KeyedLoadIC_LoadIndexedInterceptorStub
KeyedLoadIC_LoadIndexedStringDH
KeyedLoadIC_SlowStub
KeyedStoreIC_ElementsTransitionAndStoreStub
KeyedStoreIC_KeyedStoreSloppyArgumentsStub
KeyedStoreIC_SlowStub
KeyedStoreIC_StoreElementStub
KeyedStoreIC_StoreFastElementStub
LoadGlobalIC_LoadScriptContextField
LoadGlobalIC_SlowStub
LoadIC_FunctionPrototypeStub
LoadIC_HandlerCacheHit_Accessor
LoadIC_LoadAccessorDH
LoadIC_LoadAccessorFromPrototypeDH
LoadIC_LoadApiGetterFromPrototypeDH
LoadIC_LoadCallback
LoadIC_LoadConstantDH
LoadIC_LoadConstantFromPrototypeDH
LoadIC_LoadFieldDH
LoadIC_LoadFieldFromPrototypeDH
LoadIC_LoadGlobalDH
LoadIC_LoadGlobalFromPrototypeDH
LoadIC_LoadIntegerIndexedExoticDH
LoadIC_LoadInterceptorDH
LoadIC_LoadInterceptorFromPrototypeDH
LoadIC_LoadNativeDataPropertyDH
LoadIC_LoadNativeDataPropertyFromPrototypeDH
LoadIC_LoadNonexistentDH
LoadIC_LoadNonMaskingInterceptorDH
LoadIC_LoadNormalDH
LoadIC_LoadNormalFromPrototypeDH
LoadIC_NonReceiver
LoadIC_Premonomorphic
LoadIC_SlowStub
StoreGlobalIC_SlowStub
StoreGlobalIC_StoreScriptContextField
StoreGlobalIC_Premonomorphic
StoreIC_HandlerCacheHit_Accessor
StoreIC_NonReceiver
StoreIC_Premonomorphic
StoreIC_SlowStub
StoreIC_StoreAccessorDH
StoreIC_StoreAccessorOnPrototypeDH
StoreIC_StoreApiSetterOnPrototypeDH
StoreIC_StoreFieldDH
StoreIC_StoreGlobalDH
StoreIC_StoreGlobalTransitionDH
StoreIC_StoreInterceptorStub
StoreIC_StoreNativeDataPropertyDH
StoreIC_StoreNativeDataPropertyOnPrototypeDH
StoreIC_StoreNormalDH
StoreIC_StoreTransitionDH
StoreInArrayLiteralIC_SlowStub
stack_top == timer
disabled-by-default-v8.runtime_stats
V8.RuntimeStats
runtime-call-stats
Runtime Function/C++ Builtin
Time
Count
Total
[debug-evaluate] Checking function %s for side effect.
[debug-evaluate] bytecode %s may cause side effect.
[debug-evaluate] intrinsic %s may cause side effect.
[debug-evaluate] built-in %s may cause side effect.
!handle_.is_null()
function_->shared()->IsSubjectToDebugging()
DeclarationScope::Analyze(info_)
isolate_->has_pending_exception()
Object::SetDataProperty(&it, new_value).ToChecked()
last_step_action() >= StepIn || break_on_next_function_call()
has_suspended_generator()
AbstractCode::INTERPRETED_FUNCTION == code->kind()
candidate->HasBreakInfo()
[debug-evaluate] Function %s failed side effect check.
[debug-evaluate] API Callback '
' may cause side effect.
[debug-evaluate] API Interceptor may cause side effect.
[debug-evaluate] API CallHandlerInfo may cause side effect.
[debug-evaluate] failed runtime side effect check.
ArrayBufferWasDetached
CowArrayElementsChanged
CouldNotGrowElements
DivisionByZero
Hole
InstanceMigrationFailed
InsufficientTypeFeedbackForCall
InsufficientTypeFeedbackForConstruct
InsufficientTypeFeedbackForForIn
InsufficientTypeFeedbackForBinaryOperation
InsufficientTypeFeedbackForCompareOperation
InsufficientTypeFeedbackForGenericNamedAccess
InsufficientTypeFeedbackForGenericKeyedAccess
InsufficientTypeFeedbackForUnaryOperation
LostPrecision
LostPrecisionOrNaN
MinusZero
NoCache
NotAHeapNumber
NotAJavaScriptObject
NotAJavaScriptObjectOrNullOrUndefined
NotANumberOrOddball
NotASmi
NotAString
NotASymbol
OutOfBounds
Overflow
ReceiverNotAGlobalProxy
ValueMismatch
WrongCallTarget
WrongEnumIndices
WrongInstanceType
WrongLength
WrongMap
WrongName
WrongValue
NoInitialElement
array buffer was detached
copy-on-write array's elements changed
failed to grow elements store
%_DeoptimizeNow
division by zero
hole
instance migration failed
Insufficient type feedback for call
Insufficient type feedback for construct
Insufficient type feedback for for-in
Insufficient type feedback for binary operation
Insufficient type feedback for compare operation
Insufficient type feedback for generic named access
Insufficient type feedback for generic keyed access
Insufficient type feedback for unary operation
lost precision
lost precision or NaN
minus zero
no cache
not a heap number
not a JavaScript object
not a JavaScript object, Null or Undefined
not a Number or Oddball
not a Smi
not a String
not a Symbol
out of bounds
receiver was not a global proxy
(unknown)
value mismatch
wrong call target
wrong enum indices
wrong instance type
wrong length
wrong map
wrong name
wrong value
no initial element
code->kind() == Code::OPTIMIZED_FUNCTION
(isolate->deoptimizer_data()->current_) == nullptr
frame->is_optimized()
frame_it != translated_values.end()
frame_it->kind() == TranslatedFrame::kInterpretedFunction
V8.DeoptimizeCode
[deoptimize all code in all contexts]
[deoptimize marked code in all contexts]
unlinking code marked for deopt
eager
lazy
Unsupported deopt kind
kind <= DeoptimizerData::kLastDeoptimizeKind
!data->deopt_entry_code(kind).is_null()
type <= DeoptimizerData::kLastDeoptimizeKind
[deoptimizing (DEOPT %s): begin 
 (opt #%d) @%d, FP to SP delta: %d, caller sp: 0x%012lx]
            ;;; deoptimize at 
catch_handler_frame_index < count
invalid frame
[deoptimizing (%s): end 
 @%d => node=%d, pc=0x%012lx, caller sp=0x%012lx, took %0.3f ms]
  translating interpreted frame 
 => bytecode_offset=%d, height=%d%s
 (throw)
frame_index >= 0 && frame_index < output_count_
(output_[frame_index]) == nullptr
padding
stack parameter
    -------------------------
bytecode array
bytecode offset
return value 0
return_value_first_reg + return_value_count <= register_count
return_index == 1
return value 1
accumulator
translated_frame->return_value_count() == 1
accumulator
translated_frame->end() == value_iterator
0u == frame_writer.top_offset()
  translating arguments adaptor => height=%d
frame_index < output_count_ - 1
context (adaptor sentinel)
function
argc
!is_topmost || deopt_kind_ == DeoptimizeKind::kLazy
  translating construct stub => bailout_id=%d (%s), height=%d
invoke
context (construct stub sentinel)
constructor function
bailout_id == BailoutId::ConstructStubCreate() || bailout_id == BailoutId::ConstructStubInvoke()
new target
allocated receiver
subcall result
code == kJavaScriptCallArgCountRegister.code()
IsAnyTagged(type.representation())
BuiltinContinuationModeIsJavaScript(mode) == has_argc
  translating BuiltinContinuation to %s, register param count %d, stack param count %d
placeholder for exception on lazy deopt
exception (from accumulator)
placeholder for return result on lazy deopt
context (builtin continuation sentinel)
JSFunction
unused
frame height at deoptimization
builtin JavaScript context
builtin address
tagged argument count %s (will be untagged by continuation)
builtin register argument %s
callback result
Materialization [0x%012lx] <- 0x%012lx ;  
Feedback updated
 from deoptimization at 
fixed_size_above_fp + (stack_slots * kSystemPointerSize) - CommonFrameConstants::kFixedFrameSizeAboveFp + outgoing_size == result
kind == DeoptimizeKind::kEager || kind == DeoptimizeKind::kSoft || kind == DeoptimizeKind::kLazy
isolate->heap()->IsImmovable(*code)
data->deopt_entry_code(kind).is_null()
Unexpected translation type
BEGIN
INTERPRETED_FRAME
BUILTIN_CONTINUATION_FRAME
JAVA_SCRIPT_BUILTIN_CONTINUATION_FRAME
JAVA_SCRIPT_BUILTIN_CONTINUATION_WITH_CATCH_FRAME
CONSTRUCT_STUB_FRAME
ARGUMENTS_ADAPTOR_FRAME
DUPLICATED_OBJECT
ARGUMENTS_ELEMENTS
ARGUMENTS_LENGTH
CAPTURED_OBJECT
REGISTER
INT32_REGISTER
INT64_REGISTER
UINT32_REGISTER
BOOL_REGISTER
FLOAT_REGISTER
DOUBLE_REGISTER
STACK_SLOT
INT32_STACK_SLOT
INT64_STACK_SLOT
UINT32_STACK_SLOT
BOOL_STACK_SLOT
FLOAT_STACK_SLOT
DOUBLE_STACK_SLOT
LITERAL
UPDATE_FEEDBACK
array->length() > index
index < array->length()
stack_it == frame_it->end()
code->InstructionStart() <= pc && pc <= code->InstructionEnd()
1U == uint32_value()
unexpected case
internal error: value missing
internal error: unexpected materialization.
  reading input frame %s
 => bytecode_offset=%d, args=%d, height=%d, retval=%i(#%i); inputs:
  reading arguments adaptor frame %s
 => height=%d; inputs:
  reading construct stub frame %s
 => bailout_id=%d, height=%d; inputs:
  reading builtin continuation frame %s
  reading JavaScript builtin continuation frame %s
  reading JavaScript builtin continuation frame with catch %s
We should never get here - unexpected deopt info.
arguments elements object #%d (type = %d, length = %d)
duplicated object #%d
arguments length field (type = %d, length = %d)
captured object #%d (length = %d)
0x%012lx ; %s 
%ld ; %s (int32)
%ld ; %s (int64)
%lxu ; %s (uint32)
%ld ; %s (bool)
%e ; %s (float)
%e ; %s (double)
0x%012lx ;  [fp %c %3d]  
%d ; (int32) [fp %c %3d] 
%ld ; (int64) [fp %c %3d] 
%u ; (uint32) [fp %c %3d] 
%u ; (bool) [fp %c %3d] 
%e ; (float) [fp %c %3d] 
%e ; (double) [fp %c %d] 
0x%012lx ; (literal %2d) 
opcode == Translation::BEGIN
update_feedback_count >= 0
update_feedback_count <= 1
    %3i: 
         
!iterator->HasNext() || static_cast<Translation::Opcode>(iterator->Next()) == Translation::BEGIN
static_cast<size_t>(object_index) < object_positions_.size()
TranslatedValue::kFinished == slot->materialization_state()
TranslatedValue::kCapturedObject == slot->kind()
frame->values_[value_index].kind() == TranslatedValue::kTagged
map->IsMap()
map->IsJSObjectMap()
value_index == children_init_index
length > 0
TranslatedValue::kCapturedObject != frame->values_[*value_index].kind()
value.is_identical_to(isolate()->factory()->the_hole_value())
value->IsNumber()
TranslatedValue::kAllocated == slot->materialization_state()
instance_size == slot->GetChildrenCount() * kTaggedSize
TranslatedValue::kUninitialized == properties_slot->materialization_state()
!map->IsUnboxedDoubleField(index)
map->instance_size() == slot->GetChildrenCount() * kTaggedSize
index.index() >= FixedArray::kHeaderSize / kTaggedSize
TranslatedValue::kUninitialized != slot->materialization_state()
slot->GetChildrenCount() >= 2
field_value->IsHeapNumber()
field_value->IsMutableHeapNumber()
kStoreTagged == marker
2 == slot->GetChildrenCount()
*length_value == Smi::FromInt(0)
marker == kStoreTagged || i == 1
!field_value->IsMutableHeapNumber()
length == previously_materialized_objects->length()
value_info->IsMaterializedObject()
previously_materialized_objects->get(i) == *value
frames_[0].kind() == TranslatedFrame::kInterpretedFunction
frame->function() == frames_[0].front().GetRawValue()
!feedback_slot_.IsInvalid()
Translation::UPDATE_FEEDBACK == iterator->Next()
  reading FeedbackVector (slot %d)
!raw_shared_info_.is_null()
    0x%012lx: [top + %3d] <- 
0x%012lx <Smi %d>
 ;  %s
 (input #%d)
caller's pc
    0x%012lx: [top + %3d] <- 0x%012lx ;  %s
caller's fp
(!IsSmi() && (*layout_word_index < length())) || (IsSmi() && (*layout_word_index < 1))
%p  (%s)
%p  <+0x%x>
root (%s)
external reference (%s)
builtin (%s)
external value (%s)
WAAT??? What are we accessing here???
!code.is_null()
%08x       constant
%08x       constant pool begin (num_const = %d)
%08lx      jump table entry %4zu
                  %s
[33;1m
%p  %4tx  
    ;; debug: deopt position, script offset '%d'
    ;; debug: deopt position, inlining id '%d'
    ;; debug: deopt reason '%s'
    ;; debug: deopt index %d
    ;; object: %s
    ;; external reference (%s)
    ;; code:
 Builtin::%s
    ;; wasm stub: %s
    ;; %s deoptimization bailout
    ;; %s
| pc_offset=
 (delta=
 saved at base
 follows rule in CIE
| base_register=
, base_offset=
| base_offset=
 not modified from previous frame
| nop
  .eh_frame: CIE
  .eh_frame: FDE
  | procedure_offset=
  | procedure_size=
  .eh_frame: terminator
  .eh_frame_hdr
[OOB %s %s (%s length = %d, element accessed = %d) in 
[%s elements length not integer value in 
[%s elements length not a number in 
FixedUint8ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedInt8ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedUint16ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedInt16ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedUint32ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedInt32ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedFloat32ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedFloat64ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedUint8ClampedElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedBigUint64ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
FixedBigInt64ElementsAccessor::TryCopyElementsFastNumber( context, source, destination, length, static_cast<uint32_t>(offset))
PACKED_SMI_ELEMENTS
HOLEY_SMI_ELEMENTS
PACKED_ELEMENTS
HOLEY_ELEMENTS
PACKED_DOUBLE_ELEMENTS
HOLEY_DOUBLE_ELEMENTS
PACKED_SEALED_ELEMENTS
PACKED_FROZEN_ELEMENTS
DICTIONARY_ELEMENTS
FAST_SLOPPY_ARGUMENTS_ELEMENTS
SLOW_SLOPPY_ARGUMENTS_ELEMENTS
FAST_STRING_WRAPPER_ELEMENTS
SLOW_STRING_WRAPPER_ELEMENTS
UINT8_ELEMENTS
INT8_ELEMENTS
UINT16_ELEMENTS
INT16_ELEMENTS
UINT32_ELEMENTS
INT32_ELEMENTS
FLOAT32_ELEMENTS
FLOAT64_ELEMENTS
UINT8_CLAMPED_ELEMENTS
BIGUINT64_ELEMENTS
BIGINT64_ELEMENTS
unknown location (no JavaScript frames present)
apply from 
array->length()->ToArrayIndex(&old_length)
Subclass::kind() == receiver->GetElementsKind()
array->length()->ToArrayLength(&old_length)
!destination->WasDetached()
index >= 0
!source->WasDetached()
start <= end
end <= array->length()
!destination_ta->WasDetached()
v8.execute
V8.HandleInterrupts
disabled-by-default-v8.gc
V8.GCHandleGCRequest
disabled-by-default-v8.wasm
V8.WasmGrowSharedMemory
V8.TerminateExecution
V8.GCDeoptMarkedAllocationSites
V8.InstallOptimizedFunctions
V8.InvokeApiInterruptCallbacks
AllowJavascriptExecution::IsAllowed(isolate)
native function externalizeString();native function isOneByteString();function x() { return 1; }
externalizeString
First parameter to externalizeString() must be a string.
Second parameter to externalizeString() must be a boolean.
string does not support externalization.
externalizeString() failed.
isOneByteString() requires a single string argument.
native function getIgnitionDispatchCounters();
native function getV8Statistics();
global_handles
memory_allocated
maps_normalized
maps_created
elements_transitions
props_to_dictionary
elements_to_dictionary
alive_after_last_gc
objs_since_last_young
objs_since_last_full
string_table_capacity
number_of_symbols
inlined_copied_elements
compilation_cache_hits
compilation_cache_misses
total_eval_size
total_load_size
total_parse_size
total_preparse_skipped
total_compile_size
contexts_created_from_scratch
contexts_created_by_snapshot
pc_to_code
pc_to_code_cached
store_buffer_overflows
total_compiled_code_size
gc_compactor_caused_by_request
gc_compactor_caused_by_promoted_data
gc_compactor_caused_by_oldspace_exhaustion
gc_last_resort_from_js
gc_last_resort_from_handles
cow_arrays_converted
constructed_objects_runtime
megamorphic_stub_cache_updates
enum_cache_hits
enum_cache_misses
string_add_runtime
sub_string_runtime
regexp_entry_runtime
stack_interrupts
runtime_profiler_ticks
soft_deopts_executed
new_space_bytes_available
new_space_bytes_committed
new_space_bytes_used
old_space_bytes_available
old_space_bytes_committed
old_space_bytes_used
code_space_bytes_available
code_space_bytes_committed
code_space_bytes_used
map_space_bytes_available
map_space_bytes_committed
map_space_bytes_used
lo_space_bytes_available
lo_space_bytes_committed
lo_space_bytes_used
total_baseline_code_size
total_baseline_compile_count
write_barriers
constructed_objects
fast_new_closure_total
regexp_entry_native
string_add_native
sub_string_native
ic_keyed_load_generic_smi
ic_keyed_load_generic_symbol
ic_keyed_load_generic_slow
megamorphic_stub_cache_probes
megamorphic_stub_cache_misses
total_committed_bytes
new_space_live_bytes
new_space_available_bytes
new_space_commited_bytes
old_space_live_bytes
old_space_available_bytes
old_space_commited_bytes
code_space_live_bytes
code_space_available_bytes
code_space_commited_bytes
lo_space_live_bytes
lo_space_available_bytes
lo_space_commited_bytes
code_lo_space_live_bytes
code_lo_space_available_bytes
code_lo_space_commited_bytes
amount_of_external_allocated_memory
reloc_info_total_size
source_position_table_total_size
native function triggerCheckFalse();native function triggerAssertFalse();native function triggerSlowAssertFalse();
triggerCheckFalse
triggerAssertFalse
triggerSlowAssertFalse
0 == strcmp(*v8::String::Utf8Value(isolate, str), "triggerSlowAssertFalse")
nullptr
abort_with_reason
double_absolute_constant
double_negate_constant
float_absolute_constant
float_negate_constant
FLAG_harmony_await_optimization
LDoubleConstant::min_int
FLAG_mock_arraybuffer_allocator
LDoubleConstant::one_half
TracingFlags::runtime_stats
the_hole_nan
uint32_bias
Bytecodes::bytecode_size_table_address
check_object_type
ComputeSeededHash
Deoptimizer::ComputeOutputFrames()
copy_fast_number_jsarray_elements_to_typed_array
copy_typed_array_elements_slice
copy_typed_array_elements_to_typed_array
cpu_features
HandleScope::DeleteExtensions
Heap::EphemeronKeyWriteBarrierFromCode
f64_acos_wrapper
f64_asin_wrapper
f64_mod_wrapper
JSDate::GetField
get_or_create_hash_raw
base::ieee754::acos
base::ieee754::acosh
base::ieee754::asin
base::ieee754::asinh
base::ieee754::atan
base::ieee754::atan2
base::ieee754::atanh
base::ieee754::cbrt
base::ieee754::cos
base::ieee754::cosh
base::ieee754::exp
base::ieee754::expm1
base::ieee754::log
base::ieee754::log10
base::ieee754::log1p
base::ieee754::log2
base::ieee754::pow
base::ieee754::sin
base::ieee754::sinh
base::ieee754::tan
base::ieee754::tanh
IncrementalMarking::RecordWrite
JSObject::InvalidatePrototypeChains()
InvokeAccessorGetterCallback
jsarray_array_join_concat_to_sequential_string
jsreceiver_create_identity_hash
libc_memchr
libc_memcpy
libc_memmove
libc_memset
Logger::EnterExternal
Logger::LeaveExternal
mod_two_doubles
Deoptimizer::New()
orderedhashmap_gethash_raw
printf
MathRandom::RefillCache
search_string_raw_one_one
search_string_raw_one_two
search_string_raw_two_one
search_string_raw_two_two
smi_lexicographic_compare_function
StoreBuffer::StoreBufferOverflow
try_internalize_string_function
wasm::call_trap_callback_for_testing
wasm::f32_ceil_wrapper
wasm::f32_floor_wrapper
wasm::f32_nearest_int_wrapper
wasm::f32_trunc_wrapper
wasm::f64_ceil_wrapper
wasm::f64_floor_wrapper
wasm::f64_nearest_int_wrapper
wasm::f64_trunc_wrapper
wasm::float32_to_int64_wrapper
wasm::float32_to_uint64_wrapper
wasm::float64_pow
wasm::float64_to_int64_wrapper
wasm::float64_to_uint64_wrapper
wasm::int64_div
wasm::int64_mod
wasm::int64_to_float32_wrapper
wasm::int64_to_float64_wrapper
wasm::uint64_div
wasm::uint64_mod
wasm::uint64_to_float32_wrapper
wasm::uint64_to_float64_wrapper
wasm::word32_ctz
wasm::word32_popcnt
wasm::word32_rol
wasm::word32_ror
wasm::word64_ctz
wasm::word64_popcnt
wasm::memory_copy
wasm::memory_fill
MicrotaskQueue::CallEnqueueMicrotask
call_enter_context_function
atomic_pair_load_function
atomic_pair_store_function
atomic_pair_add_function
atomic_pair_sub_function
atomic_pair_and_function
atomic_pair_or_function
atomic_pair_xor_function
atomic_pair_exchange_function
atomic_pair_compare_exchange_function
intl_convert_one_byte_to_lower
intl_to_latin1_lower_table
isolate
builtins
Isolate::handle_scope_implementer_address
Address of the InterpreterEntryTrampoline instruction start
Interpreter::dispatch_counters
Interpreter::dispatch_table_address
date_cache_stamp
Isolate::stress_deopt_count_address()
Isolate::force_slow_path_address()
Isolate::isolate_root()
Heap::allocation_sites_list_address()
StackGuard::address_of_jslimit()
StackGuard::address_of_real_jslimit()
store_buffer_top
heap_is_marking_flag_address
Heap::NewSpaceAllocationTopAddress()
Heap::NewSpaceAllocationLimitAddress()
Heap::OldSpaceAllocationTopAddress
Heap::OldSpaceAllocationLimitAddress
HandleScope::level
HandleScope::next
HandleScope::limit
Isolate::scheduled_exception
address_of_pending_message_obj
Isolate::promise_hook_address()
Isolate::async_event_delegate_address()
Isolate::promise_hook_or_async_event_delegate_address()
Isolate::promise_hook_or_debug_is_active_or_async_event_delegate_address()
Isolate::debug_execution_mode_address()
Debug::is_active_address()
Debug::hook_on_function_call_address()
Runtime::runtime_function_table_address()
Isolate::is_profiling
Debug::step_suspended_generator_address()
Debug::restart_fp_address()
IsolateData::fast_c_call_caller_fp_address
IsolateData::fast_c_call_caller_pc_address
RegExpStack::limit_address()
RegExpStack::memory_address()
RegExpStack::memory_size()
OffsetsVector::static_offsets_vector
NativeRegExpMacroAssembler::CaseInsensitiveCompareUC16()
RegExpMacroAssembler*::CheckStackGuardState()
NativeRegExpMacroAssembler::GrowStack()
NativeRegExpMacroAssembler::word_character_map
Builtin_HandleApiCall
Builtin_HandleApiCallAsFunction
Builtin_HandleApiCallAsConstructor
Builtin_EmptyFunction
Builtin_Illegal
Builtin_StrictPoisonPillThrower
Builtin_UnsupportedThrower
Builtin_ArrayConcat
Builtin_ArrayPrototypeFill
Builtin_ArrayPop
Builtin_ArrayPush
Builtin_ArrayShift
Builtin_ArrayUnshift
Builtin_ArrayBufferConstructor
Builtin_ArrayBufferConstructor_DoNotInitialize
Builtin_ArrayBufferPrototypeGetByteLength
Builtin_ArrayBufferIsView
Builtin_ArrayBufferPrototypeSlice
Builtin_BigIntConstructor
Builtin_BigIntAsUintN
Builtin_BigIntAsIntN
Builtin_BigIntPrototypeToLocaleString
Builtin_BigIntPrototypeToString
Builtin_BigIntPrototypeValueOf
Builtin_BooleanConstructor
Builtin_CallSitePrototypeGetColumnNumber
Builtin_CallSitePrototypeGetEvalOrigin
Builtin_CallSitePrototypeGetFileName
Builtin_CallSitePrototypeGetFunction
Builtin_CallSitePrototypeGetFunctionName
Builtin_CallSitePrototypeGetLineNumber
Builtin_CallSitePrototypeGetMethodName
Builtin_CallSitePrototypeGetPosition
Builtin_CallSitePrototypeGetPromiseIndex
Builtin_CallSitePrototypeGetScriptNameOrSourceURL
Builtin_CallSitePrototypeGetThis
Builtin_CallSitePrototypeGetTypeName
Builtin_CallSitePrototypeIsAsync
Builtin_CallSitePrototypeIsConstructor
Builtin_CallSitePrototypeIsEval
Builtin_CallSitePrototypeIsNative
Builtin_CallSitePrototypeIsPromiseAll
Builtin_CallSitePrototypeIsToplevel
Builtin_CallSitePrototypeToString
Builtin_ConsoleDebug
Builtin_ConsoleError
Builtin_ConsoleInfo
Builtin_ConsoleLog
Builtin_ConsoleWarn
Builtin_ConsoleDir
Builtin_ConsoleDirXml
Builtin_ConsoleTable
Builtin_ConsoleTrace
Builtin_ConsoleGroup
Builtin_ConsoleGroupCollapsed
Builtin_ConsoleGroupEnd
Builtin_ConsoleClear
Builtin_ConsoleCount
Builtin_ConsoleCountReset
Builtin_ConsoleAssert
Builtin_ConsoleProfile
Builtin_ConsoleProfileEnd
Builtin_ConsoleTime
Builtin_ConsoleTimeLog
Builtin_ConsoleTimeEnd
Builtin_ConsoleTimeStamp
Builtin_ConsoleContext
Builtin_DataViewConstructor
Builtin_DateConstructor
Builtin_DatePrototypeGetYear
Builtin_DatePrototypeSetYear
Builtin_DateNow
Builtin_DateParse
Builtin_DatePrototypeSetDate
Builtin_DatePrototypeSetFullYear
Builtin_DatePrototypeSetHours
Builtin_DatePrototypeSetMilliseconds
Builtin_DatePrototypeSetMinutes
Builtin_DatePrototypeSetMonth
Builtin_DatePrototypeSetSeconds
Builtin_DatePrototypeSetTime
Builtin_DatePrototypeSetUTCDate
Builtin_DatePrototypeSetUTCFullYear
Builtin_DatePrototypeSetUTCHours
Builtin_DatePrototypeSetUTCMilliseconds
Builtin_DatePrototypeSetUTCMinutes
Builtin_DatePrototypeSetUTCMonth
Builtin_DatePrototypeSetUTCSeconds
Builtin_DatePrototypeToDateString
Builtin_DatePrototypeToISOString
Builtin_DatePrototypeToUTCString
Builtin_DatePrototypeToString
Builtin_DatePrototypeToTimeString
Builtin_DatePrototypeToJson
Builtin_DateUTC
Builtin_ErrorConstructor
Builtin_ErrorCaptureStackTrace
Builtin_ErrorPrototypeToString
Builtin_MakeError
Builtin_MakeRangeError
Builtin_MakeSyntaxError
Builtin_MakeTypeError
Builtin_MakeURIError
Builtin_ExtrasUtilsUncurryThis
Builtin_ExtrasUtilsCallReflectApply
Builtin_FunctionConstructor
Builtin_FunctionPrototypeBind
Builtin_FunctionPrototypeToString
Builtin_GeneratorFunctionConstructor
Builtin_AsyncFunctionConstructor
Builtin_GlobalDecodeURI
Builtin_GlobalDecodeURIComponent
Builtin_GlobalEncodeURI
Builtin_GlobalEncodeURIComponent
Builtin_GlobalEscape
Builtin_GlobalUnescape
Builtin_GlobalEval
Builtin_JsonParse
Builtin_JsonStringify
Builtin_MapPrototypeClear
Builtin_MathHypot
Builtin_NumberPrototypeToExponential
Builtin_NumberPrototypeToFixed
Builtin_NumberPrototypeToLocaleString
Builtin_NumberPrototypeToPrecision
Builtin_NumberPrototypeToString
Builtin_ObjectDefineGetter
Builtin_ObjectDefineProperties
Builtin_ObjectDefineProperty
Builtin_ObjectDefineSetter
Builtin_ObjectFreeze
Builtin_ObjectGetOwnPropertyDescriptors
Builtin_ObjectGetOwnPropertySymbols
Builtin_ObjectGetPrototypeOf
Builtin_ObjectSetPrototypeOf
Builtin_ObjectIsExtensible
Builtin_ObjectIsFrozen
Builtin_ObjectIsSealed
Builtin_ObjectLookupGetter
Builtin_ObjectLookupSetter
Builtin_ObjectPreventExtensions
Builtin_ObjectPrototypePropertyIsEnumerable
Builtin_ObjectPrototypeGetProto
Builtin_ObjectPrototypeSetProto
Builtin_ObjectSeal
Builtin_IsPromise
Builtin_ReflectDefineProperty
Builtin_ReflectDeleteProperty
Builtin_ReflectGet
Builtin_ReflectGetOwnPropertyDescriptor
Builtin_ReflectGetPrototypeOf
Builtin_ReflectIsExtensible
Builtin_ReflectOwnKeys
Builtin_ReflectPreventExtensions
Builtin_ReflectSet
Builtin_ReflectSetPrototypeOf
Builtin_RegExpCapture1Getter
Builtin_RegExpCapture2Getter
Builtin_RegExpCapture3Getter
Builtin_RegExpCapture4Getter
Builtin_RegExpCapture5Getter
Builtin_RegExpCapture6Getter
Builtin_RegExpCapture7Getter
Builtin_RegExpCapture8Getter
Builtin_RegExpCapture9Getter
Builtin_RegExpInputGetter
Builtin_RegExpInputSetter
Builtin_RegExpLastMatchGetter
Builtin_RegExpLastParenGetter
Builtin_RegExpLeftContextGetter
Builtin_RegExpPrototypeToString
Builtin_RegExpRightContextGetter
Builtin_SetPrototypeClear
Builtin_SharedArrayBufferPrototypeGetByteLength
Builtin_SharedArrayBufferPrototypeSlice
Builtin_AtomicsNotify
Builtin_AtomicsIsLockFree
Builtin_AtomicsWait
Builtin_AtomicsWake
Builtin_StringFromCodePoint
Builtin_StringPrototypeLastIndexOf
Builtin_StringPrototypeLocaleCompare
Builtin_StringRaw
Builtin_SymbolConstructor
Builtin_SymbolFor
Builtin_SymbolKeyFor
Builtin_TypedArrayPrototypeBuffer
Builtin_TypedArrayPrototypeCopyWithin
Builtin_TypedArrayPrototypeFill
Builtin_TypedArrayPrototypeIncludes
Builtin_TypedArrayPrototypeIndexOf
Builtin_TypedArrayPrototypeLastIndexOf
Builtin_TypedArrayPrototypeReverse
Builtin_AsyncGeneratorFunctionConstructor
Builtin_IsTraceCategoryEnabled
Builtin_Trace
Builtin_FinalizationGroupCleanupIteratorNext
Builtin_FinalizationGroupCleanupSome
Builtin_FinalizationGroupConstructor
Builtin_FinalizationGroupRegister
Builtin_FinalizationGroupUnregister
Builtin_WeakRefConstructor
Builtin_WeakRefDeref
Builtin_CollatorConstructor
Builtin_CollatorInternalCompare
Builtin_CollatorPrototypeCompare
Builtin_CollatorSupportedLocalesOf
Builtin_CollatorPrototypeResolvedOptions
Builtin_DatePrototypeToLocaleDateString
Builtin_DatePrototypeToLocaleString
Builtin_DatePrototypeToLocaleTimeString
Builtin_DateTimeFormatConstructor
Builtin_DateTimeFormatInternalFormat
Builtin_DateTimeFormatPrototypeFormat
Builtin_DateTimeFormatPrototypeFormatRange
Builtin_DateTimeFormatPrototypeFormatRangeToParts
Builtin_DateTimeFormatPrototypeFormatToParts
Builtin_DateTimeFormatPrototypeResolvedOptions
Builtin_DateTimeFormatSupportedLocalesOf
Builtin_IntlGetCanonicalLocales
Builtin_ListFormatConstructor
Builtin_ListFormatPrototypeResolvedOptions
Builtin_ListFormatSupportedLocalesOf
Builtin_LocaleConstructor
Builtin_LocalePrototypeBaseName
Builtin_LocalePrototypeCalendar
Builtin_LocalePrototypeCaseFirst
Builtin_LocalePrototypeCollation
Builtin_LocalePrototypeHourCycle
Builtin_LocalePrototypeLanguage
Builtin_LocalePrototypeMaximize
Builtin_LocalePrototypeMinimize
Builtin_LocalePrototypeNumeric
Builtin_LocalePrototypeNumberingSystem
Builtin_LocalePrototypeRegion
Builtin_LocalePrototypeScript
Builtin_LocalePrototypeToString
Builtin_NumberFormatConstructor
Builtin_NumberFormatInternalFormatNumber
Builtin_NumberFormatPrototypeFormatNumber
Builtin_NumberFormatPrototypeFormatToParts
Builtin_NumberFormatPrototypeResolvedOptions
Builtin_NumberFormatSupportedLocalesOf
Builtin_PluralRulesConstructor
Builtin_PluralRulesPrototypeResolvedOptions
Builtin_PluralRulesPrototypeSelect
Builtin_PluralRulesSupportedLocalesOf
Builtin_RelativeTimeFormatConstructor
Builtin_RelativeTimeFormatPrototypeFormat
Builtin_RelativeTimeFormatPrototypeFormatToParts
Builtin_RelativeTimeFormatPrototypeResolvedOptions
Builtin_RelativeTimeFormatSupportedLocalesOf
Builtin_SegmenterConstructor
Builtin_SegmenterPrototypeResolvedOptions
Builtin_SegmenterPrototypeSegment
Builtin_SegmenterSupportedLocalesOf
Builtin_SegmentIteratorPrototypeBreakType
Builtin_SegmentIteratorPrototypeFollowing
Builtin_SegmentIteratorPrototypePreceding
Builtin_SegmentIteratorPrototypeIndex
Builtin_SegmentIteratorPrototypeNext
Builtin_StringPrototypeNormalizeIntl
Builtin_StringPrototypeToLocaleLowerCase
Builtin_StringPrototypeToLocaleUpperCase
Builtin_StringPrototypeToUpperCaseIntl
Builtin_V8BreakIteratorConstructor
Builtin_V8BreakIteratorInternalAdoptText
Builtin_V8BreakIteratorInternalBreakType
Builtin_V8BreakIteratorInternalCurrent
Builtin_V8BreakIteratorInternalFirst
Builtin_V8BreakIteratorInternalNext
Builtin_V8BreakIteratorPrototypeAdoptText
Builtin_V8BreakIteratorPrototypeBreakType
Builtin_V8BreakIteratorPrototypeCurrent
Builtin_V8BreakIteratorPrototypeFirst
Builtin_V8BreakIteratorPrototypeNext
Builtin_V8BreakIteratorPrototypeResolvedOptions
Builtin_V8BreakIteratorSupportedLocalesOf
Runtime::DebugBreakOnBytecode
Runtime::LoadLookupSlotForCall
Runtime::ArrayIncludes_Slow
Runtime::ArrayIndexOf
Runtime::ArrayIsArray
Runtime::ArraySpeciesConstructor
Runtime::EstimateNumberOfElements
Runtime::GetArrayKeys
Runtime::GrowArrayElements
Runtime::HasComplexElements
Runtime::IsArray
Runtime::NewArray
Runtime::NormalizeElements
Runtime::PrepareElementsForSort
Runtime::TransitionElementsKind
Runtime::TransitionElementsKindWithKind
Runtime::TrySliceSimpleNonFastElements
Runtime::AtomicsLoad64
Runtime::AtomicsStore64
Runtime::AtomicsAdd
Runtime::AtomicsAnd
Runtime::AtomicsCompareExchange
Runtime::AtomicsExchange
Runtime::AtomicsNumWaitersForTesting
Runtime::AtomicsOr
Runtime::AtomicsSub
Runtime::AtomicsXor
Runtime::SetAllowAtomicsWait
Runtime::BigIntBinaryOp
Runtime::BigIntCompareToBigInt
Runtime::BigIntCompareToNumber
Runtime::BigIntCompareToString
Runtime::BigIntEqualToBigInt
Runtime::BigIntEqualToNumber
Runtime::BigIntEqualToString
Runtime::BigIntToBoolean
Runtime::BigIntToNumber
Runtime::BigIntUnaryOp
Runtime::ToBigInt
Runtime::DefineClass
Runtime::HomeObjectSymbol
Runtime::LoadFromSuper
Runtime::LoadKeyedFromSuper
Runtime::StoreKeyedToSuper
Runtime::StoreToSuper
Runtime::ThrowConstructorNonCallableError
Runtime::ThrowNotSuperConstructor
Runtime::ThrowStaticPrototypeError
Runtime::ThrowSuperAlreadyCalledError
Runtime::ThrowSuperNotCalled
Runtime::ThrowUnsupportedSuperError
Runtime::MapGrow
Runtime::MapShrink
Runtime::SetGrow
Runtime::SetShrink
Runtime::TheHole
Runtime::WeakCollectionDelete
Runtime::WeakCollectionSet
Runtime::CompileForOnStackReplacement
Runtime::CompileLazy
Runtime::CompileOptimized_Concurrent
Runtime::CompileOptimized_NotConcurrent
Runtime::EvictOptimizedCodeSlot
Runtime::FunctionFirstExecution
Runtime::InstantiateAsmJs
Runtime::NotifyDeoptimized
Runtime::ResolvePossiblyDirectEval
Runtime::DateCurrentTime
Runtime::ClearStepping
Runtime::CollectGarbage
Runtime::DebugBreakAtEntry
Runtime::DebugCollectCoverage
Runtime::DebugGetLoadedScriptIds
Runtime::DebugOnFunctionCall
Runtime::DebugPopPromise
Runtime::DebugPrepareStepInSuspendedGenerator
Runtime::DebugPushPromise
Runtime::DebugAsyncFunctionEntered
Runtime::DebugAsyncFunctionFinished
Runtime::DebugAsyncFunctionSuspended
Runtime::DebugToggleBlockCoverage
Runtime::DebugTogglePreciseCoverage
Runtime::FunctionGetInferredName
Runtime::GetBreakLocations
Runtime::GetGeneratorScopeCount
Runtime::GetGeneratorScopeDetails
Runtime::GetHeapUsage
Runtime::HandleDebuggerStatement
Runtime::IncBlockCounter
Runtime::IsBreakOnException
Runtime::ScheduleBreak
Runtime::ScriptLocationFromLine2
Runtime::SetGeneratorScopeVariableValue
Runtime::LiveEditPatchScript
Runtime::ForInEnumerate
Runtime::ForInHasProperty
Runtime::Call
Runtime::FunctionGetScriptSource
Runtime::FunctionGetScriptId
Runtime::FunctionGetScriptSourcePosition
Runtime::FunctionGetSourceCode
Runtime::FunctionIsAPIFunction
Runtime::IsFunction
Runtime::AsyncFunctionAwaitCaught
Runtime::AsyncFunctionAwaitUncaught
Runtime::AsyncFunctionEnter
Runtime::AsyncFunctionReject
Runtime::AsyncFunctionResolve
Runtime::AsyncGeneratorAwaitCaught
Runtime::AsyncGeneratorAwaitUncaught
Runtime::AsyncGeneratorHasCatchHandlerForPC
Runtime::AsyncGeneratorReject
Runtime::AsyncGeneratorResolve
Runtime::AsyncGeneratorYield
Runtime::CreateJSGeneratorObject
Runtime::GeneratorClose
Runtime::GeneratorGetFunction
Runtime::GeneratorGetResumeMode
Runtime::ElementsTransitionAndStoreIC_Miss
Runtime::KeyedLoadIC_Miss
Runtime::KeyedStoreIC_Miss
Runtime::StoreInArrayLiteralIC_Miss
Runtime::KeyedStoreIC_Slow
Runtime::LoadAccessorProperty
Runtime::LoadCallbackProperty
Runtime::LoadElementWithInterceptor
Runtime::LoadGlobalIC_Miss
Runtime::LoadGlobalIC_Slow
Runtime::LoadIC_Miss
Runtime::LoadPropertyWithInterceptor
Runtime::StoreCallbackProperty
Runtime::StoreGlobalIC_Miss
Runtime::StoreGlobalICNoFeedback_Miss
Runtime::StoreGlobalIC_Slow
Runtime::StoreIC_Miss
Runtime::StoreInArrayLiteralIC_Slow
Runtime::StorePropertyWithInterceptor
Runtime::CloneObjectIC_Miss
Runtime::KeyedHasIC_Miss
Runtime::HasElementWithInterceptor
Runtime::AccessCheck
Runtime::AllocateInYoungGeneration
Runtime::AllocateInOldGeneration
Runtime::AllocateSeqOneByteString
Runtime::AllocateSeqTwoByteString
Runtime::AllowDynamicFunction
Runtime::CheckIsBootstrapping
Runtime::CreateAsyncFromSyncIterator
Runtime::CreateListFromArrayLike
Runtime::FatalProcessOutOfMemoryInAllocateRaw
Runtime::FatalProcessOutOfMemoryInvalidArrayLength
Runtime::GetAndResetRuntimeCallStats
Runtime::GetTemplateObject
Runtime::IncrementUseCounter
Runtime::Interrupt
Runtime::BytecodeBudgetInterrupt
Runtime::NewReferenceError
Runtime::NewSyntaxError
Runtime::NewTypeError
Runtime::OrdinaryHasInstance
Runtime::PromoteScheduledException
Runtime::ReportMessage
Runtime::ReThrow
Runtime::RunMicrotaskCallback
Runtime::PerformMicrotaskCheckpoint
Runtime::StackGuard
Runtime::Throw
Runtime::ThrowApplyNonFunction
Runtime::ThrowCalledNonCallable
Runtime::ThrowConstructedNonConstructable
Runtime::ThrowConstructorReturnedNonObject
Runtime::ThrowInvalidStringLength
Runtime::ThrowInvalidTypedArrayAlignment
Runtime::ThrowIteratorError
Runtime::ThrowIteratorResultNotAnObject
Runtime::ThrowNotConstructor
Runtime::ThrowPatternAssignmentNonCoercible
Runtime::ThrowRangeError
Runtime::ThrowReferenceError
Runtime::ThrowAccessedUninitializedVariable
Runtime::ThrowStackOverflow
Runtime::ThrowSymbolAsyncIteratorInvalid
Runtime::ThrowSymbolIteratorInvalid
Runtime::ThrowThrowMethodMissing
Runtime::ThrowTypeError
Runtime::ThrowTypeErrorIfStrict
Runtime::Typeof
Runtime::UnwindAndFindExceptionHandler
Runtime::FinalizationGroupCleanupJob
Runtime::FormatList
Runtime::FormatListToParts
Runtime::StringToLowerCaseIntl
Runtime::StringToUpperCaseIntl
Runtime::CreateArrayLiteral
Runtime::CreateArrayLiteralWithoutAllocationSite
Runtime::CreateObjectLiteral
Runtime::CreateObjectLiteralWithoutAllocationSite
Runtime::CreateRegExpLiteral
Runtime::DynamicImportCall
Runtime::GetImportMetaObject
Runtime::GetModuleNamespace
Runtime::GetHoleNaNLower
Runtime::GetHoleNaNUpper
Runtime::IsSmi
Runtime::IsValidSmi
Runtime::MaxSmi
Runtime::NumberToString
Runtime::SmiLexicographicCompare
Runtime::StringParseFloat
Runtime::StringParseInt
Runtime::StringToNumber
Runtime::AddDictionaryProperty
Runtime::AddPrivateField
Runtime::AllocateHeapNumber
Runtime::ClassOf
Runtime::CollectTypeProfile
Runtime::CompleteInobjectSlackTrackingForMap
Runtime::CopyDataProperties
Runtime::CopyDataPropertiesWithExcludedProperties
Runtime::CreateDataProperty
Runtime::CreateIterResultObject
Runtime::DefineAccessorPropertyUnchecked
Runtime::DefineDataPropertyInLiteral
Runtime::DefineGetterPropertyUnchecked
Runtime::DefineSetterPropertyUnchecked
Runtime::DeleteProperty
Runtime::GetFunctionName
Runtime::GetOwnPropertyDescriptor
Runtime::GetOwnPropertyKeys
Runtime::GetProperty
Runtime::HasFastPackedElements
Runtime::HasInPrototypeChain
Runtime::HasProperty
Runtime::InternalSetPrototype
Runtime::IsJSReceiver
Runtime::NewObject
Runtime::ObjectCreate
Runtime::ObjectEntries
Runtime::ObjectEntriesSkipFastPath
Runtime::ObjectHasOwnProperty
Runtime::ObjectKeys
Runtime::ObjectGetOwnPropertyNames
Runtime::ObjectGetOwnPropertyNamesTryFast
Runtime::ObjectValues
Runtime::ObjectValuesSkipFastPath
Runtime::OptimizeObjectForAddingMultipleProperties
Runtime::PerformSideEffectCheckForObject
Runtime::SetDataProperties
Runtime::SetKeyedProperty
Runtime::SetNamedProperty
Runtime::StoreDataPropertyInLiteral
Runtime::ShrinkPropertyDictionary
Runtime::ToFastProperties
Runtime::ToLength
Runtime::ToName
Runtime::ToNumber
Runtime::ToNumeric
Runtime::ToObject
Runtime::ToString
Runtime::TryMigrateInstance
Runtime::Add
Runtime::Equal
Runtime::GreaterThan
Runtime::GreaterThanOrEqual
Runtime::LessThan
Runtime::LessThanOrEqual
Runtime::NotEqual
Runtime::StrictEqual
Runtime::StrictNotEqual
Runtime::EnqueueMicrotask
Runtime::PromiseHookAfter
Runtime::PromiseHookBefore
Runtime::PromiseHookInit
Runtime::AwaitPromisesInit
Runtime::AwaitPromisesInitOld
Runtime::PromiseMarkAsHandled
Runtime::PromiseRejectEventFromStack
Runtime::PromiseRevokeReject
Runtime::PromiseStatus
Runtime::RejectPromise
Runtime::ResolvePromise
Runtime::PromiseRejectAfterResolved
Runtime::PromiseResolveAfterResolved
Runtime::CheckProxyGetSetTrapResult
Runtime::CheckProxyHasTrap
Runtime::GetPropertyWithReceiver
Runtime::IsJSProxy
Runtime::JSProxyGetHandler
Runtime::JSProxyGetTarget
Runtime::SetPropertyWithReceiver
Runtime::IsRegExp
Runtime::RegExpExec
Runtime::RegExpExecMultiple
Runtime::RegExpInitializeAndCompile
Runtime::RegExpReplaceRT
Runtime::RegExpSplit
Runtime::StringReplaceNonGlobalRegExpWithFunction
Runtime::StringSplit
Runtime::DeclareEvalFunction
Runtime::DeclareEvalVar
Runtime::DeclareGlobals
Runtime::DeleteLookupSlot
Runtime::LoadLookupSlot
Runtime::LoadLookupSlotInsideTypeof
Runtime::NewArgumentsElements
Runtime::NewClosure
Runtime::NewClosure_Tenured
Runtime::NewFunctionContext
Runtime::NewRestParameter
Runtime::NewScriptContext
Runtime::NewSloppyArguments
Runtime::NewSloppyArguments_Generic
Runtime::NewStrictArguments
Runtime::PushBlockContext
Runtime::PushCatchContext
Runtime::PushModuleContext
Runtime::PushWithContext
Runtime::StoreLookupSlot_Sloppy
Runtime::StoreLookupSlot_SloppyHoisting
Runtime::StoreLookupSlot_Strict
Runtime::ThrowConstAssignError
Runtime::FlattenString
Runtime::GetSubstitution
Runtime::InternalizeString
Runtime::StringAdd
Runtime::StringBuilderConcat
Runtime::StringCharCodeAt
Runtime::StringEqual
Runtime::StringEscapeQuotes
Runtime::StringGreaterThan
Runtime::StringGreaterThanOrEqual
Runtime::StringIncludes
Runtime::StringIndexOf
Runtime::StringIndexOfUnchecked
Runtime::StringLastIndexOf
Runtime::StringLessThan
Runtime::StringLessThanOrEqual
Runtime::StringMaxLength
Runtime::StringReplaceOneCharWithString
Runtime::StringCompareSequence
Runtime::StringSubstring
Runtime::StringToArray
Runtime::StringTrim
Runtime::CreatePrivateNameSymbol
Runtime::CreatePrivateSymbol
Runtime::SymbolDescriptiveString
Runtime::SymbolIsPrivate
Runtime::ClearMegamorphicStubCache
Runtime::Abort
Runtime::AbortJS
Runtime::ClearFunctionFeedback
Runtime::CompleteInobjectSlackTracking
Runtime::ConstructConsString
Runtime::ConstructSlicedString
Runtime::ConstructDouble
Runtime::DebugPrint
Runtime::DebugTrace
Runtime::DebugTrackRetainingPath
Runtime::DeoptimizeFunction
Runtime::DeoptimizeNow
Runtime::DeserializeWasmModule
Runtime::DisallowCodegenFromStrings
Runtime::DisallowWasmCodegen
Runtime::DisassembleFunction
Runtime::FreezeWasmLazyCompilation
Runtime::GetCallable
Runtime::GetDeoptCount
Runtime::GetInitializerFunction
Runtime::GetOptimizationStatus
Runtime::GetUndetectable
Runtime::GetWasmExceptionId
Runtime::GetWasmExceptionValues
Runtime::GetWasmRecoveredTrapCount
Runtime::GlobalPrint
Runtime::HasDictionaryElements
Runtime::HasPackedElements
Runtime::HasDoubleElements
Runtime::HasFastElements
Runtime::HasFastProperties
Runtime::HasFixedBigInt64Elements
Runtime::HasFixedBigUint64Elements
Runtime::HasFixedFloat32Elements
Runtime::HasFixedFloat64Elements
Runtime::HasFixedInt16Elements
Runtime::HasFixedInt32Elements
Runtime::HasFixedInt8Elements
Runtime::HasFixedUint16Elements
Runtime::HasFixedUint32Elements
Runtime::HasFixedUint8ClampedElements
Runtime::HasFixedUint8Elements
Runtime::HasHoleyElements
Runtime::HasObjectElements
Runtime::HasSloppyArgumentsElements
Runtime::HasSmiElements
Runtime::HasSmiOrObjectElements
Runtime::HaveSameMap
Runtime::HeapObjectVerify
Runtime::ICsAreEnabled
Runtime::InNewSpace
Runtime::IsAsmWasmCode
Runtime::IsConcurrentRecompilationSupported
Runtime::WasmTierUpFunction
Runtime::IsLiftoffFunction
Runtime::IsWasmCode
Runtime::IsWasmTrapHandlerEnabled
Runtime::IsThreadInWasm
Runtime::NeverOptimizeFunction
Runtime::NotifyContextDisposed
Runtime::OptimizeFunctionOnNextCall
Runtime::OptimizeOsr
Runtime::EnsureFeedbackVectorForFunction
Runtime::PrepareFunctionForOptimization
Runtime::PrintWithNameForAssert
Runtime::RedirectToWasmInterpreter
Runtime::RunningInSimulator
Runtime::SerializeWasmModule
Runtime::SetAllocationTimeout
Runtime::SetForceSlowPath
Runtime::SetWasmCompileControls
Runtime::SetWasmInstantiateControls
Runtime::ArraySpeciesProtector
Runtime::MapIteratorProtector
Runtime::SetIteratorProtector
Runtime::StringIteratorProtector
Runtime::SystemBreak
Runtime::TraceEnter
Runtime::TraceExit
Runtime::UnblockConcurrentRecompilation
Runtime::WasmGetNumberOfInstances
Runtime::WasmNumInterpretedCalls
Runtime::WasmTraceMemory
Runtime::WasmMemoryHasFullGuardRegion
Runtime::SetWasmThreadsEnabled
Runtime::ArrayBufferDetach
Runtime::ArrayBufferViewWasDetached
Runtime::IsTypedArray
Runtime::TypedArrayCopyElements
Runtime::TypedArrayGetBuffer
Runtime::TypedArraySet
Runtime::TypedArraySortFast
Runtime::ThrowWasmError
Runtime::ThrowWasmStackOverflow
Runtime::WasmI32AtomicWait
Runtime::WasmI64AtomicWait
Runtime::WasmAtomicNotify
Runtime::WasmExceptionGetValues
Runtime::WasmExceptionGetTag
Runtime::WasmMemoryGrow
Runtime::WasmRunInterpreter
Runtime::WasmStackGuard
Runtime::WasmThrowCreate
Runtime::WasmThrowTypeError
Runtime::WasmFunctionTableGet
Runtime::WasmFunctionTableSet
Runtime::WasmTableInit
Runtime::WasmTableCopy
Runtime::WasmIndirectCallCheckSignatureAndGetTargetInstance
Runtime::WasmIndirectCallGetTargetAddress
Runtime::WasmIsValidAnyFuncValue
Runtime::WasmCompileLazy
Isolate::handler_address
Isolate::c_entry_fp_address
Isolate::c_function_address
Isolate::context_address
Isolate::pending_exception_address
Isolate::pending_handler_context_address
Isolate::pending_handler_entrypoint_address
Isolate::pending_handler_constant_pool_address
Isolate::pending_handler_fp_address
Isolate::pending_handler_sp_address
Isolate::external_caught_exception_address
Isolate::js_entry_sp_address
Accessors::ArgumentsIteratorGetter
Accessors::ArrayLengthGetter
Accessors::BoundFunctionLengthGetter
Accessors::BoundFunctionNameGetter
Accessors::ErrorStackGetter
Accessors::FunctionArgumentsGetter
Accessors::FunctionCallerGetter
Accessors::FunctionNameGetter
Accessors::FunctionLengthGetter
Accessors::FunctionPrototypeGetter
Accessors::StringLengthGetter
Accessors::ArrayLengthSetter
Accessors::ErrorStackSetter
Accessors::FunctionPrototypeSetter
Accessors::ModuleNamespaceEntrySetter
Accessors::ReconfigureToDataProperty
Load StubCache::primary_->key
Load StubCache::primary_->value
Load StubCache::primary_->map
Load StubCache::secondary_->key
Load StubCache::secondary_->value
Load StubCache::secondary_->map
Store StubCache::primary_->key
Store StubCache::primary_->value
Store StubCache::primary_->map
Store StubCache::secondary_->key
Store StubCache::secondary_->value
Store StubCache::secondary_->map
StatsCounter::write_barriers
StatsCounter::constructed_objects
StatsCounter::fast_new_closure_total
StatsCounter::regexp_entry_native
StatsCounter::string_add_native
StatsCounter::sub_string_native
StatsCounter::ic_keyed_load_generic_smi
StatsCounter::ic_keyed_load_generic_symbol
StatsCounter::ic_keyed_load_generic_slow
StatsCounter::megamorphic_stub_cache_probes
StatsCounter::megamorphic_stub_cache_misses
kSize == index
<unresolved>
kSpecialReferenceCount == *index
kSpecialReferenceCount + kExternalReferenceCount == *index
kSpecialReferenceCount + kExternalReferenceCount + kBuiltinsReferenceCount == *index
kSpecialReferenceCount + kExternalReferenceCount + kBuiltinsReferenceCount + kRuntimeReferenceCount == *index
kSpecialReferenceCount + kExternalReferenceCount + kBuiltinsReferenceCount + kRuntimeReferenceCount + kIsolateAddressReferenceCount == *index
kSpecialReferenceCount + kExternalReferenceCount + kBuiltinsReferenceCount + kRuntimeReferenceCount + kIsolateAddressReferenceCount + kAccessorReferenceCount == *index
kSpecialReferenceCount + kExternalReferenceCount + kBuiltinsReferenceCount + kRuntimeReferenceCount + kIsolateAddressReferenceCount + kAccessorReferenceCount + kStubCacheReferenceCount == *index
kSpecialReferenceCount + kExternalReferenceCount + kBuiltinsReferenceCount + kRuntimeReferenceCount + kIsolateAddressReferenceCount + kAccessorReferenceCount + kStubCacheReferenceCount + kStatsCountersReferenceCount == *index
.entry>
abort: %s
abort: <unknown reason: %d>
FeedbackVectorSpec::kTypeProfileSlotIndex == FeedbackVector::GetIndex(slot)
Invalid
LoadProperty
LoadGlobalInsideTypeof
LoadGlobalNotInsideTypeof
LoadKeyed
HasKeyed
StoreNamedSloppy
StoreNamedStrict
StoreOwnNamed
StoreGlobalSloppy
StoreGlobalStrict
StoreKeyedSloppy
StoreKeyedStrict
StoreInArrayLiteral
BinaryOp
CompareOp
Literal
TypeProfile
ForIn
CloneObject
[evicting optimizing code marked for deoptimization (%s) for 
feedback == MaybeObject::FromObject( *FeedbackVector::UninitializedSentinel(isolate))
call_count->IsSmi()
None
Class(
armv8
Hello, world!
v8.log
/tmp/__v8_gc__
arm64_inst.csv
--no
Error: unrecognized flag %s
Error: missing value for flag %s of type %s
Error: illegal value for flag %s of type %s
To set or unset a boolean flag, use --flag or --no-flag.
The remaining arguments were ignored:
Try --help for options
Synopsis:
  shell [options] [--shell] [<file>...]
  d8 [options] [-e <string>] [--shell] [[--module] <file>...]
  -e        execute a string in V8
  --shell   run an interactive JavaScript shell
  --module  execute a file as a JavaScript module
Note: the --module option is implicitly enabled for *.mjs files.
The following syntax for options is accepted (both '-' and '--' are ok):
  --flag        (bool flags only)
  --no-flag     (bool flags only)
  --flag=value  (non-bool flags only, no spaces around '=')
  --flag value  (non-bool flags only)
  --            (captures all remaining args in JavaScript)
Options:
  --
        type: 
  default: 
embedded
use_strict
enforce strict mode
es_staging
enable test-worthy harmony features (for internal use only)
harmony
enable all completed harmony features
harmony_shipping
enable all shipped harmony features
harmony_class_fields
enable "harmony fields in class literals" (in progress)
harmony_private_methods
enable "harmony private methods in class literals" (in progress)
harmony_regexp_sequence
enable "RegExp Unicode sequence properties" (in progress)
harmony_weak_refs
enable "harmony weak references" (in progress)
harmony_intl_date_format_range
enable "DateTimeFormat formatRange" (in progress)
harmony_promise_all_settled
enable "harmony Promise.allSettled"
harmony_intl_bigint
enable "BigInt.prototype.toLocaleString"
harmony_intl_datetime_style
enable "dateStyle timeStyle for DateTimeFormat"
harmony_intl_segmenter
enable "Intl.Segmenter"
harmony_namespace_exports
enable "harmony namespace exports (export * as foo from 'bar')"
harmony_sharedarraybuffer
enable "harmony sharedarraybuffer"
harmony_import_meta
enable "harmony import.meta property"
harmony_dynamic_import
enable "harmony dynamic import"
harmony_global
enable "harmony global"
harmony_json_stringify
enable "well-formed JSON.stringify"
harmony_public_fields
enable "harmony public instance fields in class literals"
harmony_static_fields
enable "harmony static fields in class literals"
harmony_string_matchall
enable "harmony String.prototype.matchAll"
harmony_object_from_entries
enable "harmony Object.fromEntries()"
harmony_await_optimization
enable "harmony await taking 1 tick"
harmony_private_fields
enable "harmony private fields in class literals"
harmony_hashbang
enable "harmony hashbang syntax"
harmony_numeric_separator
enable "harmony numeric separator between digits"
harmony_locale
enable "Intl.Locale"
icu_timezone_data
get information about timezones from ICU
future
Implies all staged features that we want to ship in the not-too-far future
allocation_site_pretenuring
pretenure with allocation sites
page_promotion
promote pages based on utilization
page_promotion_threshold
min percentage of live bytes on a page to enable fast evacuation
trace_pretenuring
trace pretenuring decisions of HAllocate instructions
trace_pretenuring_statistics
trace allocation site pretenuring statistics
track_fields
track fields with only smi values
track_double_fields
track fields with double values
track_heap_object_fields
track fields with heap values
track_computed_fields
track computed boilerplate fields
track_field_types
track field types
trace_block_coverage
trace collected block coverage information
feedback_normalization
feed back normalization to constructors
fast_calls_with_arguments_mismatches
skip arguments adaptor frames when it's provably safe
enable_one_shot_optimization
Enable size optimizations for the code that will only be executed once
unbox_double_arrays
automatically unbox arrays of doubles
interrupt_budget
interrupt budget which should be used for the profiler counter
budget_for_feedback_vector_allocation
The budget in amount of bytecode executed by a function before we decide to allocate feedback vectors
lazy_feedback_allocation
Allocate feedback vectors lazily
ignition_elide_noneffectful_bytecodes
elide bytecodes which won't have any external effect
ignition_reo
use ignition register equivalence optimizer
ignition_filter_expression_positions
filter expression positions before the bytecode pipeline
ignition_share_named_property_feedback
share feedback slots when loading the same named property from the same object
print_bytecode
print bytecode generated by ignition interpreter
enable_lazy_source_positions
skip generating source positions during initial compile but regenerate when actually required
print_bytecode_filter
filter for selecting which functions to print bytecode
trace_ignition_codegen
trace the codegen of ignition interpreter bytecode handlers
trace_ignition_dispatches
traces the dispatches to bytecode handlers by the ignition interpreter
trace_ignition_dispatches_output_file
the file to which the bytecode handler dispatch table is written (by default, the table is not written to a file)
fast_math
faster (but maybe less accurate) math functions
trace_track_allocation_sites
trace the tracking of allocation sites
trace_migration
trace object migration
trace_generalization
trace map generalization
concurrent_recompilation
optimizing hot functions asynchronously on a separate thread
trace_concurrent_recompilation
track concurrent recompilation
concurrent_recompilation_queue_length
the length of the concurrent compilation queue
concurrent_recompilation_delay
artificial compilation delay in ms
block_concurrent_recompilation
block queued jobs until released
concurrent_inlining
run optimizing compiler's inlining phase on a separate thread
trace_heap_broker_verbose
trace the heap broker verbosely (all reports)
trace_heap_broker
trace the heap broker (reports on missing data only)
stress_runs
number of stress runs
deopt_every_n_times
deoptimize every n times a deopt point is passed
print_deopt_stress
print number of possible deopt points
turbo_sp_frame_access
use stack pointer-relative access to frame wherever possible
turbo_preprocess_ranges
run pre-register allocation heuristics
turbo_control_flow_aware_allocation
consider control flow while allocating registers
turbo_filter
optimization filter for TurboFan compiler
trace_turbo
trace generated TurboFan IR
trace_turbo_path
directory to dump generated TurboFan IR to
trace_turbo_filter
filter for tracing turbofan compilation
trace_turbo_graph
trace generated TurboFan graphs
trace_turbo_scheduled
trace TurboFan IR with schedule
trace_turbo_cfg_file
trace turbo cfg graph (for C1 visualizer) to a given file name
trace_turbo_types
trace TurboFan's types
trace_turbo_scheduler
trace TurboFan's scheduler
trace_turbo_reduction
trace TurboFan's various reducers
trace_turbo_trimming
trace TurboFan's graph trimmer
trace_turbo_jt
trace TurboFan's jump threading
trace_turbo_ceq
trace TurboFan's control equivalence
trace_turbo_loop
trace TurboFan's loop optimizations
trace_alloc
trace register allocator
trace_all_uses
trace all use positions
trace_representation
trace representation types
turbo_verify
verify TurboFan graphs at each phase
turbo_verify_machine_graph
verify TurboFan machine graph before instruction selection
trace_verify_csa
trace code stubs verification
csa_trap_on_node
trigger break point when a node with given id is created in given stub. The format is: StubName,NodeId
turbo_stats
print TurboFan statistics
turbo_stats_nvp
print TurboFan statistics in machine-readable format
turbo_stats_wasm
print TurboFan statistics of wasm compilations
turbo_splitting
split nodes during scheduling in TurboFan
function_context_specialization
enable function context specialization in TurboFan
turbo_inlining
enable inlining in TurboFan
max_inlined_bytecode_size
maximum size of bytecode for a single inlining
max_inlined_bytecode_size_cumulative
maximum cumulative size of bytecode considered for inlining
max_inlined_bytecode_size_absolute
reserve_inline_budget_scale_factor
max_inlined_bytecode_size_small
maximum size of bytecode considered for small function inlining
max_optimized_bytecode_size
maximum bytecode size to be considered for optimization; too high values may cause the compiler to hit (release) assertions
min_inlining_frequency
minimum frequency for inlining
polymorphic_inlining
polymorphic inlining
stress_inline
set high thresholds for inlining to inline as much as possible
trace_turbo_inlining
trace TurboFan inlining
inline_accessors
inline JavaScript accessors
inline_into_try
inline into try blocks
turbo_inline_array_builtins
inline array builtins in TurboFan code
use_osr
use on-stack replacement
trace_osr
trace on-stack replacement
analyze_environment_liveness
analyze liveness of environment slots and zap dead values
trace_environment_liveness
trace liveness of local variable slots
turbo_load_elimination
enable load elimination in TurboFan
trace_turbo_load_elimination
trace TurboFan load elimination
turbo_profiling
enable profiling in TurboFan
turbo_verify_allocation
verify register allocation in TurboFan
turbo_move_optimization
optimize gap moves in TurboFan
turbo_jt
enable jump threading in TurboFan
turbo_loop_peeling
Turbofan loop peeling
turbo_loop_variable
Turbofan loop variable optimization
turbo_loop_rotation
Turbofan loop rotation
turbo_cf_optimization
optimize control flow in TurboFan
turbo_escape
enable escape analysis
turbo_allocation_folding
Turbofan allocation folding
turbo_instruction_scheduling
enable instruction scheduling in TurboFan
turbo_stress_instruction_scheduling
randomly schedule instructions to stress dependency tracking
turbo_store_elimination
enable store-store elimination in TurboFan
trace_store_elimination
trace store elimination
turbo_rewrite_far_jumps
rewrite far to near jumps (ia32,x64)
experimental_inline_promise_constructor
inline the Promise constructor in TurboFan
stress_gc_during_compilation
simulate GC/compiler thread race related to https://crbug.com/v8/8520
untrusted_code_mitigations
Enable mitigations for executing untrusted code
expose_wasm
expose wasm interface to JavaScript
assume_asmjs_origin
force wasm decoder to assume input is internal asm-wasm format
wasm_disable_structured_cloning
disable wasm structured cloning
wasm_num_compilation_tasks
number of parallel compilation tasks for wasm
wasm_write_protect_code_memory
write protect code memory on the wasm native heap
trace_wasm_serialization
trace serialization/deserialization
wasm_async_compilation
enable actual asynchronous compilation for WebAssembly.compile
wasm_test_streaming
use streaming compilation instead of async compilation for tests
wasm_max_mem_pages
maximum number of 64KiB memory pages of a wasm instance
wasm_max_table_size
maximum table size of a wasm instance
wasm_max_code_space
maximum committed code space for wasm (in MB)
wasm_tier_up
enable wasm baseline compilation and tier up to the optimizing compiler
trace_wasm_ast_start
start function for wasm AST trace (inclusive)
trace_wasm_ast_end
end function for wasm AST trace (exclusive)
liftoff
enable Liftoff, the baseline compiler for WebAssembly
trace_wasm_memory
print all memory updates performed in wasm code
wasm_tier_mask_for_testing
bitmask of functions to compile with TurboFan instead of Liftoff
validate_asm
validate asm.js modules before compiling
suppress_asm_messages
don't emit asm.js related messages (for golden file testing)
trace_asm_time
log asm.js timing info to the console
trace_asm_scanner
log tokens encountered by asm.js scanner
trace_asm_parser
verbose logging of asm.js parse failures
stress_validate_asm
try to validate everything as asm.js
dump_wasm_module_path
directory to dump wasm modules to
experimental_wasm_mv
enable prototype multi-value support for wasm
experimental_wasm_eh
enable prototype exception handling opcodes for wasm
experimental_wasm_se
enable prototype sign extension opcodes for wasm
experimental_wasm_sat_f2i_conversions
enable prototype saturating float conversion opcodes for wasm
experimental_wasm_threads
enable prototype thread opcodes for wasm
experimental_wasm_simd
enable prototype SIMD opcodes for wasm
experimental_wasm_anyref
enable prototype anyref opcodes for wasm
experimental_wasm_bigint
enable prototype JS BigInt support for wasm
experimental_wasm_bulk_memory
enable prototype bulk memory opcodes for wasm
experimental_wasm_return_call
enable prototype return call opcodes for wasm
experimental_wasm_type_reflection
enable prototype wasm type reflection in JS for wasm
experimental_wasm_compilation_hints
enable prototype compilation hints section for wasm
wasm_opt
enable wasm optimization
wasm_no_bounds_checks
disable bounds checks (performance testing only)
wasm_no_stack_checks
disable stack checks (performance testing only)
wasm_math_intrinsics
intrinsify some Math imports into wasm
wasm_shared_engine
shares one wasm engine between all isolates within a process
wasm_shared_code
shares code underlying a wasm module when it is transferred
wasm_trap_handler
use signal handlers to catch out of bounds memory access in wasm (currently Linux x86_64 only)
wasm_trap_handler_fallback
Use bounds checks if guarded memory is not available
wasm_fuzzer_gen_test
Generate a test case when running a wasm fuzzer
print_wasm_code
Print WebAssembly code
print_wasm_stub_code
Print WebAssembly stub code
wasm_interpret_all
Execute all wasm code in the wasm interpreter
asm_wasm_lazy_compilation
enable lazy compilation for asm-wasm modules
wasm_lazy_compilation
enable lazy compilation for all wasm modules
wasm_code_gc
enable garbage collection of wasm code
frame_count
number of stack frames inspected by the profiler
stress_sampling_allocation_profiler
Enables sampling allocation profiler with X as a sample interval
min_semi_space_size
min size of a semi-space (in MBytes), the new space consists of two semi-spaces
max_semi_space_size
max size of a semi-space (in MBytes), the new space consists of two semi-spaces
semi_space_growth_factor
factor by which to grow the new space
experimental_new_space_growth_heuristic
Grow the new space based on the percentage of survivors instead of their absolute value.
max_old_space_size
max size of the old space (in Mbytes)
initial_old_space_size
initial old space size (in Mbytes)
gc_global
always perform global GCs
random_gc_interval
Collect garbage after random(0, X) allocations. It overrides gc_interval.
gc_interval
garbage collect after <n> allocations
retain_maps_for_n_gc
keeps maps alive for <n> old space garbage collections
trace_gc
print one trace line following each garbage collection
trace_gc_nvp
print one detailed trace line in name=value format after each garbage collection
trace_gc_ignore_scavenger
do not print trace line after scavenger collection
trace_idle_notification
print one trace line following each idle notification
trace_idle_notification_verbose
prints the heap state used by the idle notification
trace_gc_verbose
print more details following each garbage collection
trace_allocation_stack_interval
print stack trace after <n> free-list allocations
trace_duplicate_threshold_kb
print duplicate objects in the heap if their size is more than given threshold
trace_fragmentation
report fragmentation for old space
trace_fragmentation_verbose
report fragmentation for old space (detailed)
trace_evacuation
report evacuation statistics
trace_mutator_utilization
print mutator utilization, allocation speed, gc speed
incremental_marking
use incremental marking
incremental_marking_wrappers
use incremental marking for marking wrappers
trace_unmapper
Trace the unmapping
parallel_scavenge
parallel scavenge
trace_parallel_scavenge
trace parallel scavenge
write_protect_code_memory
write protect code memory
concurrent_marking
use concurrent marking
parallel_marking
use parallel marking in atomic pause
ephemeron_fixpoint_iterations
number of fixpoint iterations it takes to switch to linear ephemeron algorithm
trace_concurrent_marking
trace concurrent marking
concurrent_store_buffer
use concurrent store buffer processing
concurrent_sweeping
use concurrent sweeping
parallel_compaction
use parallel compaction
parallel_pointer_update
use parallel pointer update during compaction
detect_ineffective_gcs_near_heap_limit
trigger out-of-memory failure to avoid GC storm near heap limit
trace_incremental_marking
trace progress of the incremental marking
trace_stress_marking
trace stress marking progress
trace_stress_scavenge
trace stress scavenge progress
track_gc_object_stats
track object counts and memory usage
trace_gc_object_stats
trace object counts and memory usage
trace_zone_stats
trace zone memory usage
track_retaining_path
enable support for tracking retaining path
concurrent_array_buffer_freeing
free array buffer allocations on a background thread
gc_stats
Used by tracing internally to enable gc statistics
track_detached_contexts
track native contexts that are expected to be garbage collected
trace_detached_contexts
trace native contexts that are expected to be garbage collected
move_object_start
enable moving of object starts
memory_reducer
use memory reducer
memory_reducer_for_small_heaps
use memory reducer for small heaps
heap_growing_percent
specifies heap growing factor as (1 + heap_growing_percent/100)
v8_os_page_size
override OS page size (in KBytes)
always_compact
Perform compaction on every full GC
never_compact
Never perform compaction on full GC - testing only
compact_code_space
Compact code space on full collections
flush_bytecode
flush of bytecode when it has not been executed recently
stress_flush_bytecode
stress bytecode flushing
use_marking_progress_bar
Use a progress bar to scan large objects in increments when incremental marking is active.
force_marking_deque_overflows
force overflows of marking deque by reducing it's size to 64 words
stress_compaction
stress the GC compactor to flush out bugs (implies --force_marking_deque_overflows)
stress_compaction_random
Stress GC compaction by selecting random percent of pages as evacuation candidates. It overrides stress_compaction.
stress_incremental_marking
force incremental marking for small heaps and run it more often
fuzzer_gc_analysis
prints number of allocations and enables analysis mode for gc fuzz testing, e.g. --stress-marking, --stress-scavenge
stress_marking
force marking at random points between 0 and X (inclusive) percent of the regular marking start limit
stress_scavenge
force scavenge at random points between 0 and X (inclusive) percent of the new space capacity
disable_abortjs
disables AbortJS runtime function
manual_evacuation_candidates_selection
Test mode only flag. It allows an unit test to select evacuation candidates pages (requires --stress_compaction).
fast_promotion_new_space
fast promote new space on high survival rates
clear_free_memory
initialize free memory with 0
young_generation_large_objects
allocates large objects by default in the young generation large object space
idle_time_scavenge
Perform scavenges in idle time.
debug_code
generate extra code (assertions) for debugging
code_comments
emit comments in code disassembly; for more readable source positions you should add --no-concurrent_recompilation
enable_sse3
enable use of SSE3 instructions if available
enable_ssse3
enable use of SSSE3 instructions if available
enable_sse4_1
enable use of SSE4.1 instructions if available
enable_sahf
enable use of SAHF instruction if available (X64 only)
enable_avx
enable use of AVX instructions if available
enable_fma3
enable use of FMA3 instructions if available
enable_bmi1
enable use of BMI1 instructions if available
enable_bmi2
enable use of BMI2 instructions if available
enable_lzcnt
enable use of LZCNT instruction if available
enable_popcnt
enable use of POPCNT instruction if available
arm_arch
generate instructions for the selected ARM architecture if available: armv6, armv7, armv7+sudiv or armv8
force_long_branches
force all emitted branches to be in long mode (MIPS/PPC only)
mcpu
enable optimization for specific cpu
partial_constant_pool
enable use of partial constant pools (X64 only)
enable_source_at_csa_bind
Include source information in the binary at CSA bind locations.
enable_armv7
deprecated (use --arm_arch instead)
enable_vfp3
enable_32dregs
enable_neon
enable_sudiv
enable_armv8
enable_regexp_unaligned_accesses
enable unaligned accesses for the regexp engine
script_streaming
enable parsing on background
disable_old_api_accessors
Disable old-style API accessors whose setters trigger through the prototype chain
expose_free_buffer
expose freeBuffer extension
expose_gc
expose gc extension
expose_gc_as
expose gc extension under the specified name
expose_externalize_string
expose externalize string extension
expose_trigger_failure
expose trigger-failure extension
stack_trace_limit
number of stack frames to capture
builtins_in_stack_traces
show built-in functions in stack traces
disallow_code_generation_from_strings
disallow eval and friends
expose_async_hooks
expose async_hooks object
allow_unsafe_function_constructor
allow invoking the function constructor without security checks
force_slow_path
always take the slow path for builtins
test_small_max_function_context_stub_size
enable testing the function context size overflow path by making the maximum size smaller
inline_new
use fast inline allocation
trace function calls
use lazy compilation
max_lazy
ignore eager compilation hints
trace_opt
trace lazy optimization
trace_opt_verbose
extra verbose compilation tracing
trace_opt_stats
trace lazy optimization statistics
trace_deopt
trace optimize function deoptimization
trace_file_names
include file names in trace-opt/trace-deopt output
always_opt
always try to optimize functions
always_osr
always try to OSR functions
prepare_always_opt
prepare for turning on always opt
trace_serializer
print code serializer trace
compilation_cache
enable compilation cache
cache_prototype_transitions
cache prototype transitions
parallel_compile_tasks
enable parallel compile tasks
compiler_dispatcher
enable compiler dispatcher
trace_compiler_dispatcher
trace compiler dispatcher activity
cpu_profiler_sampling_interval
CPU profiler sampling interval in microseconds
trace_js_array_abuse
trace out-of-bounds accesses to JS arrays
trace_external_array_abuse
trace out-of-bounds-accesses to external arrays
trace_array_abuse
trace out-of-bounds accesses to all arrays
trace_side_effect_free_debug_evaluate
print debug messages for side-effect-free debug-evaluate for testing
hard_abort
abort by crashing
expose_inspector_scripts
expose injected-script-source.js for debugging
stack_size
default size of stack region v8 is allowed to use (in kBytes)
max_stack_trace_source_length
maximum length of function source code printed in a stack trace.
clear_exceptions_on_js_entry
clear pending exceptions when entering JavaScript
histogram_interval
time interval in ms for aggregating memory histograms
heap_profiler_trace_objects
Dump heap object allocations/movements/size_updates
heap_profiler_use_embedder_graph
Use the new EmbedderGraph API to get embedder nodes
heap_snapshot_string_limit
truncate strings to this length in the heap snapshot
sampling_heap_profiler_suppress_randomness
Use constant sample intervals to eliminate test flakiness
use_idle_notification
Use idle notification to reduce memory footprint.
trace_ic
trace inline cache state transitions for tools/ic-processor
modify_field_representation_inplace
enable in-place field representation updates
max_polymorphic_map_count
maximum number of maps to track in POLYMORPHIC state
native_code_counters
generate extra code for manipulating stats counters
thin_strings
Enable ThinString support
trace_prototype_users
Trace updates to prototype user tracking
use_verbose_printer
allows verbose printing
trace_for_in_enumerate
Trace for-in enumerate slow-paths
trace_maps
trace map creation
trace_maps_details
also log map details
allow_natives_syntax
allow natives syntax
parse_only
only parse the sources
trace_sim
Trace simulator execution
debug_sim
Enable debugging the simulator
check_icache
Check icache flushes in ARM and MIPS simulator
stop_sim_at
Simulator stop after x number of instructions
sim_stack_alignment
Stack alignment in bytes in simulator. This must be a power of two and it must be at least 16. 16 is default.
sim_stack_size
Stack size of the ARM64, MIPS64 and PPC64 simulator in kBytes (default is 2 MB)
log_colour
When logging, try to use coloured output.
ignore_asm_unimplemented_break
Don't break for ASM_UNIMPLEMENTED_BREAK macros.
trace_sim_messages
Trace simulator debug messages. Implied by --trace-sim.
async_stack_traces
include async stack traces in Error.stack
stack_trace_on_illegal
print stack trace when an illegal exception is thrown
abort_on_uncaught_exception
abort program (dump core) when an uncaught exception is thrown
abort_on_stack_or_string_length_overflow
Abort program when the stack overflows or a string exceeds maximum length (as opposed to throwing RangeError). This is useful for fuzzing where the spec behaviour would introduce nondeterminism.
randomize_hashes
randomize hashes to avoid predictable hash collisions (with snapshots this option cannot override the baked-in seed)
rehash_snapshot
rehash strings from the snapshot to override the baked-in seed
hash_seed
Fixed seed to use to hash property keys (0 means random)(with snapshots this option cannot override the baked-in seed)
random_seed
Default seed for initializing random generator (0, the default, means to use system random).
fuzzer_random_seed
Default seed for initializing fuzzer random generator (0, the default, means to use v8's random number generator seed).
trace_rail
trace RAIL mode
print_all_exceptions
print exception object and stack trace on each thrown exception
detailed_error_stack_trace
includes arguments for each function call in the error stack frames array
runtime_call_stats
report runtime call counts and times
profile_deserialization
Print the time it takes to deserialize the snapshot.
serialization_statistics
Collect statistics on serialized objects.
serialization_chunk_size
Custom size for serialization chunks
regexp_optimization
generate optimized regexp code
regexp_mode_modifiers
enable inline flags in regexp.
regexp_interpret_all
interpret all regexp code
testing_bool_flag
testing_maybe_bool_flag
testing_int_flag
testing_float_flag
float-flag
testing_string_flag
string-flag
testing_prng_seed
Seed used for threading test randomness
embedded_src
Path for the generated embedded data file. (mksnapshot only)
embedded_variant
Label to disambiguate symbols in embedded data file. (mksnapshot only)
startup_src
Write V8 startup as C++ src. (mksnapshot only)
startup_blob
Write V8 startup blob file. (mksnapshot only)
target_os
The mksnapshot target os. (mksnapshot only)
minor_mc_parallel_marking
use parallel marking for the young generation
trace_minor_mc_parallel_marking
trace parallel marking for the young generation
minor_mc
perform young generation mark compact GCs
help
Print usage message, including flags, on console
dump_counters
Dump counters on exit
dump_counters_nvp
Dump counters as name-value pairs on exit
use_external_strings
Use external strings for source code
map_counters
Map counters to a file
mock_arraybuffer_allocator
Use a mock ArrayBuffer allocator for testing.
mock_arraybuffer_allocator_limit
Memory limit for mock ArrayBuffer allocator used to simulate OOM for testing.
jitless
Disable runtime allocation of executable memory.
use adaptive optimizations
use_ic
use inline caching
optimize_for_size
Enables optimizations which favor memory size over execution speed
Minimal logging (no API, code, GC, suspect, or handles samples).
log_all
Log all events to the log file.
log_api
Log API events to the log file.
log_code
Log code events to the log file without profiling.
log_handles
Log global handle events.
log_suspect
Log suspect operations.
log_source_code
Log source code.
log_function_events
Log function events (parse, compile, execute) separately.
prof
Log statistical profiling information (implies --log-code).
detailed_line_info
Always generate detailed line information for CPU profiling.
prof_sampling_interval
Interval for --prof samples (in microseconds).
prof_cpp
Like --prof, but ignore generated code.
prof_browser_mode
Used with --prof, turns on browser-compatible mode for profiling.
logfile
Specify the name of the log file.
logfile_per_isolate
Separate log files for each isolate.
ll_prof
Enable low-level linux profiler.
perf_basic_prof
Enable perf linux profiler (basic support).
perf_basic_prof_only_functions
Only report function code ranges to perf (i.e. no stubs).
perf_prof
Enable perf linux profiler (experimental annotate support).
perf_prof_unwinding_info
Enable unwinding info for perf linux profiler (experimental).
gc_fake_mmap
Specify the name of the file for fake gc mmap used in ll_prof
log_internal_timer_events
Time internal events.
log_timer_events
Time events including external callbacks.
log_instruction_stats
Log AArch64 instruction statistics.
log_instruction_file
AArch64 instruction statistics log file.
log_instruction_period
AArch64 instruction statistics logging period.
redirect_code_traces
output deopt information and disassembly into file code-<pid>-<isolate id>.asm
redirect_code_traces_to
output deopt information and disassembly into the given file
print_opt_source
print source code of optimized and inlined functions
win64_unwinding_info
Enable unwinding info for Windows/x64 (experimental).
interpreted_frames_native_stack
Show interpreted frames on the native stack (useful for external profilers).
trace_elements_transitions
trace elements transitions
trace_creation_allocation_sites
trace the creation of allocation sites
print_code
print generated code
print_opt_code
print optimized code
print_opt_code_filter
filter for printing optimized code
print_code_verbose
print more information for code
print_builtin_code
print generated code for builtins
print_builtin_code_filter
filter for printing builtin code
print_builtin_size
print code size for builtins
sodium
print generated code output suitable for use with the Sodium code viewer
print_all_code
enable all flags related to printing code
predictable
enable predictable mode
predictable_gc_schedule
Predictable garbage collection schedule. Fixes heap growing, idle, and memory reducing behavior.
single_threaded
disable the use of background tasks
single_threaded_gc
disable the use of background gc tasks
unset
n < static_cast<size_t>(buffer_size)
bool
maybe_bool
uint
uint64
size_t
Error: Value for flag %s of type %s is out of bounds [0-%llu]
 [pc: %p]
builtin exit frame: 
new 
(this=%o
 at %s:%d
 at <unknown>:%d
 at <unknown>:<unknown>
(this=
ReadOnlyRoots(isolate()).the_hole_value() == Object(Memory<Address>(exception_argument_slot))
data.is_null()
Missing deoptimization information for OptimizedFrame::Summarize.
builtin frame: 
WASM [
], function #%u ('%s'), pc=%p (+0x%x), pos=%d (+%d)
WASM INTERPRETER ENTRY [
 [%p]
:%d] [bytecode=%p offset=%d]
:~%d] [pc=%p]
// optimized frame
  // heap-allocated locals
  var 
// warning: missing context slot - inconsistent frame?
// warning: no context found - inconsistent frame?
  // expression stack (top to bottom)
  [%02d] : %o
arguments adaptor frame: %d->%d
  // actual arguments
  [%02d] : %o
  // not passed to callee
%5d: 
[%d]: 
EntryFrame
ConstructEntryFrame
ExitFrame
OptimizedFrame
WasmCompiledFrame
WasmToJsFrame
JsToWasmFrame
WasmInterpreterEntryFrame
CWasmEntryFrame
WasmCompileLazyFrame
InterpretedFrame
StubFrame
BuiltinContinuationFrame
JavaScriptBuiltinContinuationFrame
JavaScriptBuiltinContinuationWithCatchFrame
InternalFrame
ConstructFrame
ArgumentsAdaptorFrame
BuiltinFrame
BuiltinExitFrame
NativeFrame
--------- s o u r c e   c o d e ---------
-----------------------------------------
callback_result != AtomicsWaitEvent::kTerminatedExecution
V8.GCPhantomHandleProcessingCallback
object_ != kGlobalHandleZapValue
IsPendingFinalizer()
!is_active()
NEAR_DEATH != state()
Handle not reset in first callback. See comments on |v8::WeakCallbackInfo|.
;;; Exception handler table.
   from   to       hdlr (prediction,   data)
)  ->  
 (prediction=
, data=
  offset   handler
    
  ->  
v8::HandleScope::CreateHandle()
Cannot create a handle without a HandleScope
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/handles.cc:136
array_buffers_.empty()
empty
Starting concurrent marking task %d
ConcurrentMarking::Run Preempted
Task %d concurrently marked %dKB in %.2fms
Scheduling concurrent marking task %d
invalid array length
self_reference_marker
String::kMaxLength >= length
String::kMaxLength >= str.length()
byte_length <= kMaxInt - FixedTypedArrayBase::kDataOffset
map->instance_type() == JS_REGEXP_TYPE || map->instance_type() == JS_OBJECT_TYPE || map->instance_type() == JS_ERROR_TYPE || map->instance_type() == JS_ARRAY_TYPE || map->instance_type() == JS_API_OBJECT_TYPE || map->instance_type() == WASM_GLOBAL_TYPE || map->instance_type() == WASM_INSTANCE_TYPE || map->instance_type() == WASM_MEMORY_TYPE || map->instance_type() == WASM_MODULE_TYPE || map->instance_type() == WASM_TABLE_TYPE || map->instance_type() == JS_SPECIAL_API_OBJECT_TYPE
invalid BigInt length
Aborting on invalid string length
new function from shared function info
(isolate()->embedded_blob()) != nullptr
0 != isolate()->embedded_blob_size()
Builtins::IsIsolateIndependentBuiltin(*code)
ObjectWithNullProto
byte_offset % element_size == 0
length <= (std::numeric_limits<size_t>::max() / element_size)
length <= static_cast<size_t>(Smi::kMaxValue)
number_of_elements <= (std::numeric_limits<size_t>::max() / element_size)
number_of_elements <= static_cast<size_t>(Smi::kMaxValue)
CopyAsPrototypeForJSGlobalProxy
SharedFunctionInfo
!object->IsSmi()
IsAligned(value, kTaggedSize)
static_cast<unsigned>(id) < 256
0 <= stack_slots && stack_slots < StackSlotsField::kMax
contexts_disposed=%d 
contexts_disposal_rate=%f 
size_of_objects=%zu 
incremental_marking_stopped=%d 
V8.GC_MC_INCREMENTAL
V8.GC_MC_INCREMENTAL_EMBEDDER_PROLOGUE
V8.GC_MC_INCREMENTAL_EMBEDDER_TRACING
V8.GC_MC_INCREMENTAL_EXTERNAL_EPILOGUE
V8.GC_MC_INCREMENTAL_EXTERNAL_PROLOGUE
V8.GC_MC_INCREMENTAL_FINALIZE
V8.GC_MC_INCREMENTAL_FINALIZE_BODY
V8.GC_MC_INCREMENTAL_LAYOUT_CHANGE
V8.GC_MC_INCREMENTAL_START
V8.GC_MC_INCREMENTAL_SWEEPING
V8.GC_HEAP_EMBEDDER_TRACING_EPILOGUE
V8.GC_HEAP_EPILOGUE
V8.GC_HEAP_EPILOGUE_REDUCE_NEW_SPACE
V8.GC_HEAP_EXTERNAL_EPILOGUE
V8.GC_HEAP_EXTERNAL_PROLOGUE
V8.GC_HEAP_EXTERNAL_WEAK_GLOBAL_HANDLES
V8.GC_HEAP_PROLOGUE
V8.GC_MC_CLEAR
V8.GC_MC_EPILOGUE
V8.GC_MC_EVACUATE
V8.GC_MC_FINISH
V8.GC_MC_MARK
V8.GC_MC_PROLOGUE
V8.GC_MC_SWEEP
V8.GC_MC_CLEAR_DEPENDENT_CODE
V8.GC_MC_CLEAR_FLUSHABLE_BYTECODE
V8.GC_MC_CLEAR_FLUSHED_JS_FUNCTIONS
V8.GC_MC_CLEAR_MAPS
V8.GC_MC_CLEAR_SLOTS_BUFFER
V8.GC_MC_CLEAR_STORE_BUFFER
V8.GC_MC_CLEAR_STRING_TABLE
V8.GC_MC_CLEAR_WEAK_COLLECTIONS
V8.GC_MC_CLEAR_WEAK_LISTS
V8.GC_MC_CLEAR_WEAK_REFERENCES
V8.GC_MC_EVACUATE_CANDIDATES
V8.GC_MC_EVACUATE_CLEAN_UP
V8.GC_MC_EVACUATE_COPY
V8.GC_MC_EVACUATE_EPILOGUE
V8.GC_MC_EVACUATE_PROLOGUE
V8.GC_MC_EVACUATE_REBALANCE
V8.GC_MC_EVACUATE_UPDATE_POINTERS
V8.GC_MC_EVACUATE_UPDATE_POINTERS_SLOTS_MAIN
V8.GC_MC_EVACUATE_UPDATE_POINTERS_SLOTS_MAP_SPACE
V8.GC_MC_EVACUATE_UPDATE_POINTERS_TO_NEW_ROOTS
V8.GC_MC_EVACUATE_UPDATE_POINTERS_WEAK
V8.GC_MC_MARK_EMBEDDER_PROLOGUE
V8.GC_MC_MARK_EMBEDDER_TRACING
V8.GC_MC_MARK_EMBEDDER_TRACING_CLOSURE
V8.GC_MC_MARK_FINISH_INCREMENTAL
V8.GC_MC_MARK_MAIN
V8.GC_MC_MARK_ROOTS
V8.GC_MC_MARK_WEAK_CLOSURE
V8.GC_MC_MARK_WEAK_CLOSURE_EPHEMERON
V8.GC_MC_MARK_WEAK_CLOSURE_EPHEMERON_MARKING
V8.GC_MC_MARK_WEAK_CLOSURE_EPHEMERON_LINEAR
V8.GC_MC_MARK_WEAK_CLOSURE_WEAK_HANDLES
V8.GC_MC_MARK_WEAK_CLOSURE_WEAK_ROOTS
V8.GC_MC_MARK_WEAK_CLOSURE_HARMONY
V8.GC_MC_SWEEP_CODE
V8.GC_MC_SWEEP_MAP
V8.GC_MC_SWEEP_OLD
V8.GC_MINOR_MC
V8.GC_MINOR_MC_CLEAR
V8.GC_MINOR_MC_CLEAR_STRING_TABLE
V8.GC_MINOR_MC_CLEAR_WEAK_LISTS
V8.GC_MINOR_MC_EVACUATE
V8.GC_MINOR_MC_EVACUATE_CLEAN_UP
V8.GC_MINOR_MC_EVACUATE_COPY
V8.GC_MINOR_MC_EVACUATE_EPILOGUE
V8.GC_MINOR_MC_EVACUATE_PROLOGUE
V8.GC_MINOR_MC_EVACUATE_REBALANCE
V8.GC_MINOR_MC_EVACUATE_UPDATE_POINTERS
V8.GC_MINOR_MC_EVACUATE_UPDATE_POINTERS_SLOTS
V8.GC_MINOR_MC_EVACUATE_UPDATE_POINTERS_TO_NEW_ROOTS
V8.GC_MINOR_MC_EVACUATE_UPDATE_POINTERS_WEAK
V8.GC_MINOR_MC_MARK
V8.GC_MINOR_MC_MARK_GLOBAL_HANDLES
V8.GC_MINOR_MC_MARK_SEED
V8.GC_MINOR_MC_MARK_ROOTS
V8.GC_MINOR_MC_MARK_WEAK
V8.GC_MINOR_MC_MARKING_DEQUE
V8.GC_MINOR_MC_RESET_LIVENESS
V8.GC_MINOR_MC_SWEEPING
V8.GC_SCAVENGER_FAST_PROMOTE
V8.GC_SCAVENGER_SCAVENGE
V8.GC_SCAVENGER_PROCESS_ARRAY_BUFFERS
V8.GC_SCAVENGER_SCAVENGE_WEAK_GLOBAL_HANDLES_IDENTIFY
V8.GC_SCAVENGER_SCAVENGE_WEAK_GLOBAL_HANDLES_PROCESS
V8.GC_SCAVENGER_SCAVENGE_PARALLEL
V8.GC_SCAVENGER_SCAVENGE_ROOTS
V8.GC_SCAVENGER_SCAVENGE_UPDATE_REFS
V8.GC_SCAVENGER_SCAVENGE_WEAK
V8.GC_SCAVENGER_SCAVENGE_FINALIZE
V8.GC_BACKGROUND_ARRAY_BUFFER_FREE
V8.GC_BACKGROUND_STORE_BUFFER
V8.GC_BACKGROUND_UNMAPPER
V8.GC_MC_BACKGROUND_EVACUATE_COPY
V8.GC_MC_BACKGROUND_EVACUATE_UPDATE_POINTERS
V8.GC_MC_BACKGROUND_MARKING
V8.GC_MC_BACKGROUND_SWEEPING
V8.GC_MINOR_MC_BACKGROUND_EVACUATE_COPY
V8.GC_MINOR_MC_BACKGROUND_EVACUATE_UPDATE_POINTERS
V8.GC_MINOR_MC_BACKGROUND_MARKING
V8.GC_SCAVENGER_BACKGROUND_SCAVENGE_PARALLEL
Scavenge
Mark-sweep
Minor Mark-Compact
Start
Unknown Event Type
[Finished reentrant %s during %s.]
 (+ %.1f ms in %d steps since start of marking, biggest step %.1f ms, walltime since start of marking %.f ms)
[%d:%p] %8.0f ms: %s %.1f (%.1f) -> %.1f (%.1f) MB, %.1f / %.1f ms %s (average mu = %.3f, current mu = %.3f) %s %s
pause=%.1f mutator=%.1f gc=%s reduce_memory=%d heap.prologue=%.2f heap.epilogue=%.2f heap.epilogue.reduce_new_space=%.2f heap.external.prologue=%.2f heap.external.epilogue=%.2f heap.external_weak_global_handles=%.2f fast_promote=%.2f scavenge=%.2f scavenge.process_array_buffers=%.2f scavenge.roots=%.2f scavenge.weak=%.2f scavenge.weak_global_handles.identify=%.2f scavenge.weak_global_handles.process=%.2f scavenge.parallel=%.2f scavenge.update_refs=%.2f background.scavenge.parallel=%.2f background.array_buffer_free=%.2f background.store_buffer=%.2f background.unmapper=%.2f incremental.steps_count=%d incremental.steps_took=%.1f scavenge_throughput=%.f total_size_before=%zu total_size_after=%zu holes_size_before=%zu holes_size_after=%zu allocated=%zu promoted=%zu semi_space_copied=%zu nodes_died_in_new=%d nodes_copied_in_new=%d nodes_promoted=%d promotion_ratio=%.1f%% average_survival_ratio=%.1f%% promotion_rate=%.1f%% semi_space_copy_rate=%.1f%% new_space_allocation_throughput=%.1f unmapper_chunks=%d context_disposal_rate=%.1f
pause=%.1f mutator=%.1f gc=%s reduce_memory=%d minor_mc=%.2f finish_sweeping=%.2f mark=%.2f mark.seed=%.2f mark.roots=%.2f mark.weak=%.2f mark.global_handles=%.2f clear=%.2f clear.string_table=%.2f clear.weak_lists=%.2f evacuate=%.2f evacuate.copy=%.2f evacuate.update_pointers=%.2f evacuate.update_pointers.to_new_roots=%.2f evacuate.update_pointers.slots=%.2f background.mark=%.2f background.evacuate.copy=%.2f background.evacuate.update_pointers=%.2f background.array_buffer_free=%.2f background.store_buffer=%.2f background.unmapper=%.2f update_marking_deque=%.2f reset_liveness=%.2f
pause=%.1f mutator=%.1f gc=%s reduce_memory=%d heap.prologue=%.2f heap.embedder_tracing_epilogue=%.2f heap.epilogue=%.2f heap.epilogue.reduce_new_space=%.2f heap.external.prologue=%.1f heap.external.epilogue=%.1f heap.external.weak_global_handles=%.1f clear=%1.f clear.dependent_code=%.1f clear.maps=%.1f clear.slots_buffer=%.1f clear.store_buffer=%.1f clear.string_table=%.1f clear.weak_collections=%.1f clear.weak_lists=%.1f clear.weak_references=%.1f epilogue=%.1f evacuate=%.1f evacuate.candidates=%.1f evacuate.clean_up=%.1f evacuate.copy=%.1f evacuate.prologue=%.1f evacuate.epilogue=%.1f evacuate.rebalance=%.1f evacuate.update_pointers=%.1f evacuate.update_pointers.to_new_roots=%.1f evacuate.update_pointers.slots.main=%.1f evacuate.update_pointers.slots.map_space=%.1f evacuate.update_pointers.weak=%.1f finish=%.1f mark=%.1f mark.finish_incremental=%.1f mark.roots=%.1f mark.main=%.1f mark.weak_closure=%.1f mark.weak_closure.ephemeron=%.1f mark.weak_closure.ephemeron.marking=%.1f mark.weak_closure.ephemeron.linear=%.1f mark.weak_closure.weak_handles=%.1f mark.weak_closure.weak_roots=%.1f mark.weak_closure.harmony=%.1f mark.embedder_prologue=%.1f mark.embedder_tracing=%.1f prologue=%.1f sweep=%.1f sweep.code=%.1f sweep.map=%.1f sweep.old=%.1f incremental=%.1f incremental.finalize=%.1f incremental.finalize.body=%.1f incremental.finalize.external.prologue=%.1f incremental.finalize.external.epilogue=%.1f incremental.layout_change=%.1f incremental.start=%.1f incremental.sweeping=%.1f incremental.embedder_prologue=%.1f incremental.embedder_tracing=%.1f incremental_wrapper_tracing_longest_step=%.1f incremental_finalize_longest_step=%.1f incremental_finalize_steps_count=%d incremental_longest_step=%.1f incremental_steps_count=%d incremental_marking_throughput=%.f incremental_walltime_duration=%.f background.mark=%.1f background.sweep=%.1f background.evacuate.copy=%.1f background.evacuate.update_pointers=%.1f background.array_buffer_free=%.2f background.store_buffer=%.2f background.unmapper=%.1f total_size_before=%zu total_size_after=%zu holes_size_before=%zu holes_size_after=%zu allocated=%zu promoted=%zu semi_space_copied=%zu nodes_died_in_new=%d nodes_copied_in_new=%d nodes_promoted=%d promotion_ratio=%.1f%% average_survival_ratio=%.1f%% promotion_rate=%.1f%% semi_space_copy_rate=%.1f%% new_space_allocation_throughput=%.1f unmapper_chunks=%d context_disposal_rate=%.1f compaction_speed=%.f
V8.GCMarkCompactorSummary
background_duration
V8.GCMarkCompactorMarkingSummary
Scavenger
Mark-Compact
Unknown collector
%s factor %.1f based on mu=%.3f, speed_ratio=%.f (gc=%.f, mutator=%.f)
1.0 < factor
0 < curr_size
%s Limit: old size: %zu KB, new limit: %zu KB (%.1f)
GC in old space requested
GC in old space forced by flags
Incremental marking needs finalization
scavenge might not succeed
Memory allocator,       used: %6zu KB, available: %6zu KB
Read-only space,        used: %6zu KB, available: %6zu KB, committed: %6zu KB
New space,              used: %6zu KB, available: %6zu KB, committed: %6zu KB
New large object space, used: %6zu KB, available: %6zu KB, committed: %6zu KB
Old space,              used: %6zu KB, available: %6zu KB, committed: %6zu KB
Code space,             used: %6zu KB, available: %6zu KB, committed: %6zuKB
Map space,              used: %6zu KB, available: %6zu KB, committed: %6zu KB
Large object space,     used: %6zu KB, available: %6zu KB, committed: %6zu KB
Code large object space,     used: %6zu KB, available: %6zu KB, committed: %6zu KB
All spaces,             used: %6zu KB, available: %6zu KB, committed: %6zuKB
Unmapper buffering %zu chunks of committed: %6zu KB
External memory reported: %6lld KB
Backing store memory: %6zu KB
External memory global %zu KB
Total time spent in GC  : %.1f ms
Retaining path tracking requires --track-retaining-path
#################################################
Retaining path for %p:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Distance from root %d%s: 
 (ephemeron)
Root: %s
-------------------------------------------------
new_space
old_space
map_space
code_space
large_object_space
new_large_object_space
code_large_object_space
read_only_space
pretenuring: deopt_maybe_tenured=%d visited_sites=%d active_sites=%d mementos=%d tenured=%d not_tenured=%d
[IncrementalMarking] Scavenge during marking.
insufficient memory to create an Isolate
Committing semi space failed.
markcompact
begin
MinorMarkCompact
scavenge
NewSpace::Rebalance
Fast promotion mode: %s survival rate: %zu%%
memory_allocator()->IsMemoryChunkExecutable(*chunk)
Deopt all allocation sites dependent code due to low survival rate in the old generation %f
!object.is_null()
elements_to_trim != len
Young generation mutator utilization = %.3f (mutator_speed=%.f, gc_speed=%.f)
Old generation mutator utilization = %.3f (mutator_speed=%.f, gc_speed=%.f)
Ineffective mark-compacts near heap limit
[IncrementalMarking] (%s).
Idle notification: requested idle time %.2f ms, used idle time %.2f ms, deadline usage %.2f ms [
incremental step
full GC
HasBeenSetUp()
near_heap_limit_callbacks_.size() < kMaxCallbacks
callback_data.first != callback
Heap::CollectCodeStatistics
allocation failure
allocation limit
context disposal
counters extension
debugger
deserialize
external memory pressure
finalize incremental marking via stack guard
finalize incremental marking via task
full hash-table
heap profiler
idle task
last resort
low memory notification
make heap iterable
memory pressure
memory reducer
runtime
sampling profiler
snapshot creator
testing
external finalize
Min semi-space size cannot be more than the maximum semi-space size of %zu MB
Cannot get stack trace in GC.
[IncrementalMarking] %.2lf%% of the memory limit reached
CALL_AND_RETRY_LAST
heap-capacity
heap-available
### Allocations = %u, hash = 0x%08x
### Maximum marking limit reached = %.02lf
### Maximum new space size reached = %.02lf
INTERNALIZED_STRING_TYPE
EXTERNAL_INTERNALIZED_STRING_TYPE
ONE_BYTE_INTERNALIZED_STRING_TYPE
EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
UNCACHED_EXTERNAL_INTERNALIZED_STRING_TYPE
UNCACHED_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
STRING_TYPE
CONS_STRING_TYPE
EXTERNAL_STRING_TYPE
SLICED_STRING_TYPE
THIN_STRING_TYPE
ONE_BYTE_STRING_TYPE
CONS_ONE_BYTE_STRING_TYPE
EXTERNAL_ONE_BYTE_STRING_TYPE
SLICED_ONE_BYTE_STRING_TYPE
THIN_ONE_BYTE_STRING_TYPE
UNCACHED_EXTERNAL_STRING_TYPE
UNCACHED_EXTERNAL_ONE_BYTE_STRING_TYPE
EMPTY_STRING_TYPE
SYMBOL_TYPE
HEAP_NUMBER_TYPE
BIGINT_TYPE
ODDBALL_TYPE
MAP_TYPE
CODE_TYPE
MUTABLE_HEAP_NUMBER_TYPE
FOREIGN_TYPE
BYTE_ARRAY_TYPE
BYTECODE_ARRAY_TYPE
FREE_SPACE_TYPE
FIXED_INT8_ARRAY_TYPE
FIXED_UINT8_ARRAY_TYPE
FIXED_INT16_ARRAY_TYPE
FIXED_UINT16_ARRAY_TYPE
FIXED_INT32_ARRAY_TYPE
FIXED_UINT32_ARRAY_TYPE
FIXED_FLOAT32_ARRAY_TYPE
FIXED_FLOAT64_ARRAY_TYPE
FIXED_UINT8_CLAMPED_ARRAY_TYPE
FIXED_BIGINT64_ARRAY_TYPE
FIXED_BIGUINT64_ARRAY_TYPE
FIXED_DOUBLE_ARRAY_TYPE
FEEDBACK_METADATA_TYPE
FILLER_TYPE
ACCESS_CHECK_INFO_TYPE
ACCESSOR_INFO_TYPE
ACCESSOR_PAIR_TYPE
ALIASED_ARGUMENTS_ENTRY_TYPE
ALLOCATION_MEMENTO_TYPE
ASM_WASM_DATA_TYPE
ASYNC_GENERATOR_REQUEST_TYPE
CLASS_POSITIONS_TYPE
DEBUG_INFO_TYPE
FUNCTION_TEMPLATE_INFO_TYPE
FUNCTION_TEMPLATE_RARE_DATA_TYPE
INTERCEPTOR_INFO_TYPE
INTERPRETER_DATA_TYPE
MODULE_INFO_ENTRY_TYPE
MODULE_TYPE
OBJECT_TEMPLATE_INFO_TYPE
PROMISE_CAPABILITY_TYPE
PROMISE_REACTION_TYPE
PROTOTYPE_INFO_TYPE
SCRIPT_TYPE
STACK_FRAME_INFO_TYPE
STACK_TRACE_FRAME_TYPE
TUPLE2_TYPE
TUPLE3_TYPE
ARRAY_BOILERPLATE_DESCRIPTION_TYPE
WASM_DEBUG_INFO_TYPE
WASM_EXCEPTION_TAG_TYPE
WASM_EXPORTED_FUNCTION_DATA_TYPE
CALLABLE_TASK_TYPE
CALLBACK_TASK_TYPE
PROMISE_FULFILL_REACTION_JOB_TASK_TYPE
PROMISE_REJECT_REACTION_JOB_TASK_TYPE
PROMISE_RESOLVE_THENABLE_JOB_TASK_TYPE
FINALIZATION_GROUP_CLEANUP_JOB_TASK_TYPE
ALLOCATION_SITE_TYPE
EMBEDDER_DATA_ARRAY_TYPE
FIXED_ARRAY_TYPE
OBJECT_BOILERPLATE_DESCRIPTION_TYPE
CLOSURE_FEEDBACK_CELL_ARRAY_TYPE
HASH_TABLE_TYPE
ORDERED_HASH_MAP_TYPE
ORDERED_HASH_SET_TYPE
ORDERED_NAME_DICTIONARY_TYPE
NAME_DICTIONARY_TYPE
GLOBAL_DICTIONARY_TYPE
NUMBER_DICTIONARY_TYPE
SIMPLE_NUMBER_DICTIONARY_TYPE
STRING_TABLE_TYPE
EPHEMERON_HASH_TABLE_TYPE
SCOPE_INFO_TYPE
SCRIPT_CONTEXT_TABLE_TYPE
AWAIT_CONTEXT_TYPE
BLOCK_CONTEXT_TYPE
CATCH_CONTEXT_TYPE
DEBUG_EVALUATE_CONTEXT_TYPE
EVAL_CONTEXT_TYPE
FUNCTION_CONTEXT_TYPE
MODULE_CONTEXT_TYPE
NATIVE_CONTEXT_TYPE
SCRIPT_CONTEXT_TYPE
WITH_CONTEXT_TYPE
WEAK_FIXED_ARRAY_TYPE
TRANSITION_ARRAY_TYPE
CALL_HANDLER_INFO_TYPE
CELL_TYPE
CODE_DATA_CONTAINER_TYPE
DESCRIPTOR_ARRAY_TYPE
FEEDBACK_CELL_TYPE
FEEDBACK_VECTOR_TYPE
LOAD_HANDLER_TYPE
PREPARSE_DATA_TYPE
PROPERTY_ARRAY_TYPE
PROPERTY_CELL_TYPE
SHARED_FUNCTION_INFO_TYPE
SMALL_ORDERED_HASH_MAP_TYPE
SMALL_ORDERED_HASH_SET_TYPE
SMALL_ORDERED_NAME_DICTIONARY_TYPE
STORE_HANDLER_TYPE
UNCOMPILED_DATA_WITHOUT_PREPARSE_DATA_TYPE
UNCOMPILED_DATA_WITH_PREPARSE_DATA_TYPE
WEAK_ARRAY_LIST_TYPE
WEAK_CELL_TYPE
JS_PROXY_TYPE
JS_GLOBAL_OBJECT_TYPE
JS_GLOBAL_PROXY_TYPE
JS_MODULE_NAMESPACE_TYPE
JS_SPECIAL_API_OBJECT_TYPE
JS_VALUE_TYPE
JS_API_OBJECT_TYPE
JS_OBJECT_TYPE
JS_ARGUMENTS_TYPE
JS_ARRAY_BUFFER_TYPE
JS_ARRAY_ITERATOR_TYPE
JS_ARRAY_TYPE
JS_ASYNC_FROM_SYNC_ITERATOR_TYPE
JS_ASYNC_FUNCTION_OBJECT_TYPE
JS_ASYNC_GENERATOR_OBJECT_TYPE
JS_CONTEXT_EXTENSION_OBJECT_TYPE
JS_DATE_TYPE
JS_ERROR_TYPE
JS_GENERATOR_OBJECT_TYPE
JS_MAP_TYPE
JS_MAP_KEY_ITERATOR_TYPE
JS_MESSAGE_OBJECT_TYPE
JS_PROMISE_TYPE
JS_REGEXP_TYPE
JS_REGEXP_STRING_ITERATOR_TYPE
JS_SET_TYPE
JS_SET_VALUE_ITERATOR_TYPE
JS_STRING_ITERATOR_TYPE
JS_WEAK_REF_TYPE
JS_FINALIZATION_GROUP_CLEANUP_ITERATOR_TYPE
JS_FINALIZATION_GROUP_TYPE
JS_WEAK_MAP_TYPE
JS_WEAK_SET_TYPE
JS_TYPED_ARRAY_TYPE
JS_DATA_VIEW_TYPE
JS_INTL_V8_BREAK_ITERATOR_TYPE
JS_INTL_COLLATOR_TYPE
JS_INTL_DATE_TIME_FORMAT_TYPE
JS_INTL_LIST_FORMAT_TYPE
JS_INTL_LOCALE_TYPE
JS_INTL_NUMBER_FORMAT_TYPE
JS_INTL_PLURAL_RULES_TYPE
JS_INTL_RELATIVE_TIME_FORMAT_TYPE
JS_INTL_SEGMENT_ITERATOR_TYPE
JS_INTL_SEGMENTER_TYPE
WASM_EXCEPTION_TYPE
WASM_GLOBAL_TYPE
WASM_INSTANCE_TYPE
WASM_MEMORY_TYPE
WASM_MODULE_TYPE
WASM_TABLE_TYPE
JS_BOUND_FUNCTION_TYPE
JS_FUNCTION_TYPE
OPTIMIZED_FUNCTION
BYTECODE_HANDLER
STUB
BUILTIN
REGEXP
WASM_FUNCTION
WASM_TO_JS_FUNCTION
JS_TO_WASM_FUNCTION
WASM_INTERPRETER_ENTRY
C_WASM_ENTRY
ARRAY_BOILERPLATE_DESCRIPTION_ELEMENTS_TYPE
ARRAY_DICTIONARY_ELEMENTS_TYPE
ARRAY_ELEMENTS_TYPE
BOILERPLATE_ELEMENTS_TYPE
BOILERPLATE_PROPERTY_ARRAY_TYPE
BOILERPLATE_PROPERTY_DICTIONARY_TYPE
BYTECODE_ARRAY_CONSTANT_POOL_TYPE
BYTECODE_ARRAY_HANDLER_TABLE_TYPE
COW_ARRAY_TYPE
DEOPTIMIZATION_DATA_TYPE
DEPENDENT_CODE_TYPE
DEPRECATED_DESCRIPTOR_ARRAY_TYPE
EMBEDDED_OBJECT_TYPE
ENUM_CACHE_TYPE
ENUM_INDICES_CACHE_TYPE
FEEDBACK_VECTOR_ENTRY_TYPE
FEEDBACK_VECTOR_HEADER_TYPE
FEEDBACK_VECTOR_SLOT_CALL_TYPE
FEEDBACK_VECTOR_SLOT_CALL_UNUSED_TYPE
FEEDBACK_VECTOR_SLOT_ENUM_TYPE
FEEDBACK_VECTOR_SLOT_LOAD_TYPE
FEEDBACK_VECTOR_SLOT_LOAD_UNUSED_TYPE
FEEDBACK_VECTOR_SLOT_OTHER_TYPE
FEEDBACK_VECTOR_SLOT_STORE_TYPE
FEEDBACK_VECTOR_SLOT_STORE_UNUSED_TYPE
FUNCTION_TEMPLATE_INFO_ENTRIES_TYPE
GLOBAL_ELEMENTS_TYPE
GLOBAL_PROPERTIES_TYPE
JS_ARRAY_BOILERPLATE_TYPE
JS_COLLECTION_TABLE_TYPE
JS_OBJECT_BOILERPLATE_TYPE
JS_UNCOMPILED_FUNCTION_TYPE
MAP_ABANDONED_PROTOTYPE_TYPE
MAP_DEPRECATED_TYPE
MAP_DICTIONARY_TYPE
MAP_PROTOTYPE_DICTIONARY_TYPE
MAP_PROTOTYPE_TYPE
MAP_STABLE_TYPE
NOSCRIPT_SHARED_FUNCTION_INFOS_TYPE
NUMBER_STRING_CACHE_TYPE
OBJECT_DICTIONARY_ELEMENTS_TYPE
OBJECT_ELEMENTS_TYPE
OBJECT_PROPERTY_ARRAY_TYPE
OBJECT_PROPERTY_DICTIONARY_TYPE
OBJECT_TO_CODE_TYPE
OPTIMIZED_CODE_LITERALS_TYPE
OTHER_CONTEXT_TYPE
PROTOTYPE_DESCRIPTOR_ARRAY_TYPE
PROTOTYPE_PROPERTY_ARRAY_TYPE
PROTOTYPE_PROPERTY_DICTIONARY_TYPE
PROTOTYPE_USERS_TYPE
REGEXP_MULTIPLE_CACHE_TYPE
RELOC_INFO_TYPE
RETAINED_MAPS_TYPE
SCRIPT_LIST_TYPE
SCRIPT_SHARED_FUNCTION_INFOS_TYPE
SCRIPT_SOURCE_EXTERNAL_ONE_BYTE_TYPE
SCRIPT_SOURCE_EXTERNAL_TWO_BYTE_TYPE
SCRIPT_SOURCE_NON_EXTERNAL_ONE_BYTE_TYPE
SCRIPT_SOURCE_NON_EXTERNAL_TWO_BYTE_TYPE
SERIALIZED_OBJECTS_TYPE
SINGLE_CHARACTER_STRING_CACHE_TYPE
STRING_SPLIT_CACHE_TYPE
STRING_EXTERNAL_RESOURCE_ONE_BYTE_TYPE
STRING_EXTERNAL_RESOURCE_TWO_BYTE_TYPE
SOURCE_POSITION_TABLE_TYPE
UNCOMPILED_SHARED_FUNCTION_INFO_TYPE
WEAK_NEW_SPACE_OBJECT_TO_CODE_TYPE
NEW_SPACE
OLD_SPACE
CODE_SPACE
MAP_SPACE
LO_SPACE
NEW_LO_SPACE
RO_SPACE
(*current)->IsSmi()
pretenuring: AllocationSite(%p): (created, found, ratio) (%d, %d, %f) %s => %s
%d duplicates of size %d each (%dKB)
Sample object: 
============================
heap_->memory_allocator()->IsMemoryChunkExecutable(page)
HeapController
HandleScope::kCheckHandleThreshold > handle_count_
heap_->Contains(heap_object)
heap_object->map()->IsMap()
V8.Task
V8.GCIncrementalMarkingLayoutChange
[IncrementalMarking] Start (%s): old generation %dMB, limit %dMB, slack %dMB
[IncrementalMarking] Start sweeping.
[IncrementalMarking] Start delayed - serializer
[IncrementalMarking] Start marking
[IncrementalMarking] Running
[IncrementalMarking] Black allocation started
[IncrementalMarking] Black allocation paused
[IncrementalMarking] Black allocation finished
[IncrementalMarking] Finalize incrementally spent %.1f ms.
[IncrementalMarking] Hurry
[IncrementalMarking] Complete (hurry), spent %d ms.
[IncrementalMarking] Stopping: old generation %dMB, limit %dMB, overshoot %dMB
[IncrementalMarking] requesting finalization of incremental marking.
[IncrementalMarking] Complete (normal).
[IncrementalMarking] Fast-forwarded schedule
[IncrementalMarking] Scheduled %zuKB to mark based on time delta %.1fms
[IncrementalMarking] Scheduled %zuKB to mark based on allocation (progress=%zuKB, allocation=%zuKB)
[IncrementalMarking] Marked %zuKB on background threads
[IncrementalMarking] Marker is %zuKB behind schedule
[IncrementalMarking] Marker is %zuKB ahead of schedule
[IncrementalMarking] Marking speed %.fKB/ms
[IncrementalMarking] Step %s %zuKB (%zuKB) in %.1f
in v8
in task
[IncrementalMarking] Restarting (new grey objects)
item->IsFinished()
ItemParallelJob::Run
num_tasks
num_items
!p->IsEvacuationCandidate()
(p->slot_set<OLD_TO_OLD>()) == nullptr
(p->typed_slot_set<OLD_TO_OLD>()) == nullptr
p->SweepingDone()
compaction-selection-page: space=%s free_bytes_page=%zu fragmentation_limit_kb=%zu fragmentation_limit_percent=%d sum_compaction_kb=%zu compaction_limit_kb=%zu
compaction-selection: space=%s reduce_memory=%d pages=%d total_live_bytes=%zu
marking_worklist()->IsEmpty()
weak_objects_.current_ephemerons.IsEmpty()
weak_objects_.discovered_ephemerons.IsEmpty()
heap()->concurrent_marking()->IsStopped()
heap()->local_embedder_heap_tracer()->IsRemoteTracingDone()
disabled-by-default-v8.gc_stats
V8.GC_Objects_Stats
live
dead
incremental_marking->IsStopped()
weak objects
Evacuator::EvacuatePage
evacuation[%p]: page=%p new_space=%d page_evacuation=%d executable=%d contains_age_mark=%d live_bytes=%ld time=%f success=%d
FullEvacuator::RawEvacuatePage
evacuation_mode
%8.0f ms: evacuation: aborted=%d
Worklist %s: %d
  [%s]: %d
!p->IsLargePage()
free_end > free_start
p->area_end() > free_start
IsEmpty()
[%s]: %d pages, %d (%.1f%%) free
Unknown type: %d
ArrayBufferTrackerUpdatingItem::Process
EvacuationState
kProcessing == state_.exchange(kFinished)
EphemeronTableUpdatingItem::Process
marking[%p]: time=%f
!allocation.IsRetry()
MarkCompactCollector: semi-space copy, fallback in old gen
AreLocalsEmpty()
other.AreLocalsEmpty()
end_offset <= 1 << kPageSizeBits
LiveObjectVisitor::VisitBlackObjectsNoFail
LiveObjectVisitor::VisitBlackObjects
%8.0f ms: evacuation-summary: parallel=%s pages=%d wanted_tasks=%d tasks=%d cores=%d live_bytes=%ld compaction_speed=%.f
ToSpaceUpdatingItem::ProcessVisitLive
ToSpaceUpdatingItem::ProcessVisitAll
RememberedSetUpdatingItem::Process
chunk_->owner() != heap_->map_space()
PageMarkingItem::Process
YoungGenerationEvacuator::RawEvacuatePage
LiveObjectVisitor::VisitGreyObjectsNoFail
%d: 
%d: %dx%d
Memory reducer: %s, %s
low alloc
high alloc
background
foreground
Memory reducer: started GC #%d
Memory reducer: waiting for %.f ms
Memory reducer: finished GC #%d (%s)
will do more
"isolate": "%p", "id": %d, "key": "%s", 
"type": "instance_type_data", 
"instance_type": %d, 
"instance_type_name": "%s", 
"overall": %zu, 
"count": %zu, 
"over_allocated": %zu, 
"histogram": 
"over_allocated_histogram": 
"type": "gc_descriptor", "time": %f }
"type": "field_data"
, "tagged_fields": %zu
, "embedder_fields": %zu
, "unboxed_double_fields": %zu
, "other_raw_fields": %zu
"type": "bucket_sizes", "sizes": [ 
 ] }
"type":
"overall":
"count":
"over_allocated":
"histogram":
,"over_allocated_histogram":
"isolate":"
"id":
"time":
"field_data":{
"tagged_fields":
,"embedder_fields":
,"unboxed_double_fields": 
,"other_raw_fields":
"bucket_sizes":[
"type_data":{
"END":{}}}
over_allocated < size
calculated_size == vector->Size()
scavenge[%p]: time=%.2f copied=%zu promoted=%zu
Scavenger: semi-space copy
CodeRange setup: allocate virtual memory
CodeRange
Unmapper::FreeQueuedChunks: reached task limit (%d)
Unmapper::FreeQueuedChunks: new task id=%llu
Unmapper::CancelAndWaitForPendingTasks: no tasks remaining
0 == pending_unmapping_tasks_
FreePages(page_allocator, reinterpret_cast<void*>(base), size)
page_allocator->DiscardSystemPages( reinterpret_cast<void*>(memory_area.begin()), memory_area.size())
reservation_.SetPermissions(protect_start, protect_size, permission)
reservation_.SetPermissions(unprotect_start, unprotect_size, PageAllocator::kReadWrite)
reservation.SetPermissions(area_start, area_size, DefaultWritableCodePermissions())
Code page is too large.
MemoryChunk
!last_chunk_.IsReserved()
last_chunk_.IsReserved()
filler->IsFiller()
Shrinking page %p: end %p -> %p
filler->address() + filler->Size() == area_end()
page->SweepingDone()
heap()->memory_allocator()->IsMemoryChunkExecutable(page)
New space setup
FreeList[%p, top=%p, %d] 
%p -> 
null
limit() >= top()
SetPermissions(page_allocator, page->address(), page->size(), access)
size == static_cast<int>(end - start)
LargeObjectChunk
page->Contains(a)
Unmapper::PerformFreeMemoryOnQueuedChunks: %d queued chunks
UnmapFreeMemoryTask Done: id=%llu
StoreBuffer::SetUp
[StressScavenge] %d%% is the new limit
[Scavenge] %.2lf%% of the new space capacity reached
[Scavenge] GC requested
[Scavenge] %d%% is the new limit
!stop_sweeper_tasks_
sweeping_list_[GetSweepSpaceIndex(space)].empty()
disabled-by-default-v8.ic_stats
V8.ICStats
ic-stats
optimized
scriptName
lineNum
dict
instanceType
Keyed
[resetting ticks for 
 due from %d due to IC change: %s]
Megamorphic
Premonomorphic
LoadGlobal
Monomorphic
Polymorphic
JSValue
JSProxy
same map added twice
max polymorph exceeded
LookupForWrite said 'false'
accessor on slow map
setter == kNullAddress
special data property in prototype chain
incompatible receiver type
setter not a function
incompatible receiver
setter non-simple template
constant property
store mode mismatch
unsupported combination of external and normal arrays
unhandled internalized string key
map in array prototype
arguments receiver
receiver with prototype map
dictionary or proxy prototype
non-smi-like key
non-JSObject receiver
index out of Smi range
.IGNORE_OOB
.COW
.STORE+COW
.GROW
JSObject::DefineOwnPropertyIgnoreAttributes( &it, value, NONE, Just(ShouldThrow::kThrowOnError)) .FromJust()
V8.Runtime_Runtime_LoadIC_Miss
V8.Runtime_Runtime_LoadGlobalIC_Miss
args[3]->ToInt32(&typeof_value)
V8.Runtime_Runtime_LoadGlobalIC_Slow
V8.Runtime_Runtime_KeyedLoadIC_Miss
V8.Runtime_Runtime_StoreIC_Miss
V8.Runtime_Runtime_StoreGlobalIC_Miss
V8.Runtime_Runtime_StoreGlobalICNoFeedback_Miss
V8.Runtime_Runtime_StoreGlobalIC_Slow
V8.Runtime_Runtime_KeyedStoreIC_Miss
V8.Runtime_Runtime_StoreInArrayLiteralIC_Miss
V8.Runtime_Runtime_KeyedStoreIC_Slow
V8.Runtime_Runtime_StoreInArrayLiteralIC_Slow
V8.Runtime_Runtime_ElementsTransitionAndStoreIC_Miss
V8.Runtime_Runtime_CloneObjectIC_Miss
InitializeClonedDescriptors
V8.Runtime_Runtime_StoreCallbackProperty
accessor-setter
V8.Runtime_Runtime_LoadCallbackProperty
accessor-getter
V8.Runtime_Runtime_LoadAccessorProperty
V8.Runtime_Runtime_LoadPropertyWithInterceptor
interceptor-named-getter
V8.Runtime_Runtime_StorePropertyWithInterceptor
interceptor-named-set
V8.Runtime_Runtime_LoadElementWithInterceptor
interceptor-indexed-getter
V8.Runtime_Runtime_KeyedHasIC_Miss
V8.Runtime_Runtime_HasElementWithInterceptor
result->ToInt32(&value)
interceptor-indexed-query
!is_iterable()
is_iterable()
address != ReadOnlyRoots(heap_).not_mapped_symbol().ptr()
static_cast<size_t>(register_parameter_count) <= (sizeof(ArraySizeHelper(default_js_stub_registers)))
Abort Descriptor
Allocate Descriptor
AllocateHeapNumber Descriptor
ApiCallback Descriptor
ApiGetter Descriptor
ArgumentsAdaptor Descriptor
ArrayConstructor Descriptor
ArrayNArgumentsConstructor Descriptor
ArrayNoArgumentConstructor Descriptor
ArraySingleArgumentConstructor Descriptor
AsyncFunctionStackParameter Descriptor
BigIntToI64 Descriptor
I64ToBigInt Descriptor
BinaryOp Descriptor
CallForwardVarargs Descriptor
CallFunctionTemplate Descriptor
CallTrampoline Descriptor
CallVarargs Descriptor
CallWithArrayLike Descriptor
CallWithSpread Descriptor
CEntry1ArgvOnStack Descriptor
CloneObjectWithVector Descriptor
Compare Descriptor
ConstructForwardVarargs Descriptor
ConstructStub Descriptor
ConstructVarargs Descriptor
ConstructWithArrayLike Descriptor
ConstructWithSpread Descriptor
ContextOnly Descriptor
CppBuiltinAdaptor Descriptor
EphemeronKeyBarrier Descriptor
FastNewFunctionContext Descriptor
FastNewObject Descriptor
FrameDropperTrampoline Descriptor
GetProperty Descriptor
GrowArrayElements Descriptor
InterpreterCEntry1 Descriptor
InterpreterCEntry2 Descriptor
InterpreterDispatch Descriptor
InterpreterPushArgsThenCall Descriptor
InterpreterPushArgsThenConstruct Descriptor
JSTrampoline Descriptor
Load Descriptor
LoadGlobal Descriptor
LoadGlobalWithVector Descriptor
LoadWithVector Descriptor
NewArgumentsElements Descriptor
NoContext Descriptor
RecordWrite Descriptor
ResumeGenerator Descriptor
RunMicrotasksEntry Descriptor
RunMicrotasks Descriptor
Store Descriptor
StoreGlobal Descriptor
StoreGlobalWithVector Descriptor
StoreTransition Descriptor
StoreWithVector Descriptor
StringAt Descriptor
StringSubstring Descriptor
TypeConversion Descriptor
TypeConversionStackParameter Descriptor
Typeof Descriptor
Void Descriptor
WasmAtomicNotify Descriptor
WasmI32AtomicWait Descriptor
WasmI64AtomicWait Descriptor
WasmMemoryGrow Descriptor
WasmTableGet Descriptor
WasmTableSet Descriptor
WasmThrow Descriptor
FastNewClosure Descriptor
CreateRegExpLiteral Descriptor
CreateEmptyArrayLiteral Descriptor
CreateShallowArrayLiteral Descriptor
CreateShallowObjectLiteral Descriptor
StringIndexOf Descriptor
OrderedHashTableHealIndex Descriptor
CopyFastSmiOrObjectElements Descriptor
EnqueueMicrotask Descriptor
HasProperty Descriptor
DeleteProperty Descriptor
ArrayIncludesSmiOrObject Descriptor
ArrayIncludesPackedDoubles Descriptor
ArrayIncludesHoleyDoubles Descriptor
ArrayIndexOfSmiOrObject Descriptor
ArrayIndexOfPackedDoubles Descriptor
ArrayIndexOfHoleyDoubles Descriptor
CloneFastJSArray Descriptor
CloneFastJSArrayFillingHoles Descriptor
ExtractFastJSArray Descriptor
FlattenIntoArray Descriptor
FlatMapIntoArray Descriptor
AsyncFunctionEnter Descriptor
AsyncFunctionReject Descriptor
AsyncFunctionResolve Descriptor
AsyncFunctionAwaitCaught Descriptor
AsyncFunctionAwaitUncaught Descriptor
CreateIterResultObject Descriptor
CreateGeneratorObject Descriptor
IterableToList Descriptor
IterableToListWithSymbolLookup Descriptor
IterableToListMayPreserveHoles Descriptor
FindOrderedHashMapEntry Descriptor
MapIteratorToList Descriptor
ParseInt Descriptor
BitwiseNot Descriptor
Decrement Descriptor
Increment Descriptor
Negate Descriptor
CreateObjectWithoutProperties Descriptor
ObjectToString Descriptor
ForInEnumerate Descriptor
ForInFilter Descriptor
FulfillPromise Descriptor
RejectPromise Descriptor
ResolvePromise Descriptor
NewPromiseCapability Descriptor
PerformPromiseThen Descriptor
PromiseRejectReactionJob Descriptor
PromiseFulfillReactionJob Descriptor
PromiseResolveThenableJob Descriptor
PromiseResolve Descriptor
ProxyGetProperty Descriptor
ProxyHasProperty Descriptor
ProxySetProperty Descriptor
RegExpPrototypeTestFast Descriptor
RegExpExecAtom Descriptor
RegExpExecInternal Descriptor
RegExpMatchFast Descriptor
RegExpPrototypeExecSlow Descriptor
RegExpSearchFast Descriptor
RegExpSplit Descriptor
SetOrSetIteratorToList Descriptor
StringToList Descriptor
ThrowWasmTrapUnreachable Descriptor
ThrowWasmTrapMemOutOfBounds Descriptor
ThrowWasmTrapUnalignedAccess Descriptor
ThrowWasmTrapDivByZero Descriptor
ThrowWasmTrapDivUnrepresentable Descriptor
ThrowWasmTrapRemByZero Descriptor
ThrowWasmTrapFloatUnrepresentable Descriptor
ThrowWasmTrapFuncInvalid Descriptor
ThrowWasmTrapFuncSigMismatch Descriptor
ThrowWasmTrapDataSegmentDropped Descriptor
ThrowWasmTrapElemSegmentDropped Descriptor
ThrowWasmTrapTableOutOfBounds Descriptor
WeakMapLookupHashIndex Descriptor
WeakCollectionDelete Descriptor
WeakCollectionSet Descriptor
AsyncGeneratorResolve Descriptor
AsyncGeneratorReject Descriptor
AsyncGeneratorYield Descriptor
AsyncGeneratorReturn Descriptor
AsyncGeneratorResumeNext Descriptor
AsyncGeneratorAwaitCaught Descriptor
AsyncGeneratorAwaitUncaught Descriptor
StringAdd_CheckNone Descriptor
StringAdd_ConvertLeft Descriptor
StringAdd_ConvertRight Descriptor
SubString Descriptor
SetProperty Descriptor
SetPropertyInLiteral Descriptor
FastCreateDataProperty Descriptor
ArrayEveryLoopContinuation Descriptor
ArrayFilterLoopContinuation Descriptor
ArrayFindLoopContinuation Descriptor
ArrayFindIndexLoopContinuation Descriptor
ArrayForEachLoopContinuation Descriptor
LoadJoinElement20ATDictionaryElements Descriptor
LoadJoinElement25ATFastSmiOrObjectElements Descriptor
LoadJoinElement20ATFastDoubleElements Descriptor
ConvertToLocaleString Descriptor
JoinStackPush Descriptor
JoinStackPop Descriptor
ArrayMapLoopContinuation Descriptor
ArrayReduceLoopContinuation Descriptor
ArrayReduceRightLoopContinuation Descriptor
ArraySomeLoopContinuation Descriptor
RegExpReplace Descriptor
CreateHTML Descriptor
StringRepeat Descriptor
TypedArrayMergeSort Descriptor
CreateTypedArray Descriptor
Load23ATFastPackedSmiElements Descriptor
Load25ATFastSmiOrObjectElements Descriptor
Load20ATFastDoubleElements Descriptor
Load20ATDictionaryElements Descriptor
Store23ATFastPackedSmiElements Descriptor
Store25ATFastSmiOrObjectElements Descriptor
Store20ATFastDoubleElements Descriptor
Store20ATDictionaryElements Descriptor
SortCompareDefault Descriptor
SortCompareUserFn Descriptor
CanUseSameAccessor25ATGenericElementsAccessor Descriptor
CanUseSameAccessor20ATDictionaryElements Descriptor
Copy Descriptor
MergeAt Descriptor
GallopLeft Descriptor
GallopRight Descriptor
ArrayTimSort Descriptor
LoadJoinElement25ATGenericElementsAccessor Descriptor
LoadJoinTypedElement17ATFixedInt32Array Descriptor
LoadJoinTypedElement19ATFixedFloat32Array Descriptor
LoadJoinTypedElement19ATFixedFloat64Array Descriptor
LoadJoinTypedElement24ATFixedUint8ClampedArray Descriptor
LoadJoinTypedElement21ATFixedBigUint64Array Descriptor
LoadJoinTypedElement20ATFixedBigInt64Array Descriptor
LoadJoinTypedElement17ATFixedUint8Array Descriptor
LoadJoinTypedElement16ATFixedInt8Array Descriptor
LoadJoinTypedElement18ATFixedUint16Array Descriptor
LoadJoinTypedElement17ATFixedInt16Array Descriptor
LoadJoinTypedElement18ATFixedUint32Array Descriptor
LoadFixedElement17ATFixedInt32Array Descriptor
LoadFixedElement19ATFixedFloat32Array Descriptor
LoadFixedElement19ATFixedFloat64Array Descriptor
LoadFixedElement24ATFixedUint8ClampedArray Descriptor
LoadFixedElement21ATFixedBigUint64Array Descriptor
LoadFixedElement20ATFixedBigInt64Array Descriptor
LoadFixedElement17ATFixedUint8Array Descriptor
LoadFixedElement16ATFixedInt8Array Descriptor
LoadFixedElement18ATFixedUint16Array Descriptor
LoadFixedElement17ATFixedInt16Array Descriptor
LoadFixedElement18ATFixedUint32Array Descriptor
StoreFixedElement17ATFixedInt32Array Descriptor
StoreFixedElement19ATFixedFloat32Array Descriptor
StoreFixedElement19ATFixedFloat64Array Descriptor
StoreFixedElement24ATFixedUint8ClampedArray Descriptor
StoreFixedElement21ATFixedBigUint64Array Descriptor
StoreFixedElement20ATFixedBigInt64Array Descriptor
StoreFixedElement17ATFixedUint8Array Descriptor
StoreFixedElement16ATFixedInt8Array Descriptor
StoreFixedElement18ATFixedUint16Array Descriptor
StoreFixedElement17ATFixedInt16Array Descriptor
StoreFixedElement18ATFixedUint32Array Descriptor
Load25ATGenericElementsAccessor Descriptor
Store25ATGenericElementsAccessor Descriptor
CanUseSameAccessor20ATFastDoubleElements Descriptor
CanUseSameAccessor23ATFastPackedSmiElements Descriptor
CanUseSameAccessor25ATFastSmiOrObjectElements Descriptor
StringToLowerCaseIntl Descriptor
index < locals_count()
AlreadyBoolean
ConvertToBoolean
current_offset >= loop_header->offset()
current_offset <= static_cast<size_t>(kMaxUInt32)
global_proxy_object
embedder_data
accessor_property_descriptor_map
array_buffer_map
array_join_stack
async_function_await_reject_shared_fun
async_function_object_map
async_generator_function_function
async_iterator_value_unwrap_shared_fun
async_generator_yield_resolve_shared_fun
async_generator_return_closed_reject_shared_fun
atomics_object
biguint64_array_fun
boolean_function
call_as_constructor_delegate
data_property_descriptor_map
empty_function
fast_template_instantiations_cache
async_generator_object_prototype_map
initial_array_iterator_prototype
initial_map_iterator_prototype
initial_set_iterator_prototype
initial_weakmap_prototype_map
initial_weakset_prototype_map
int16_array_fun
int32_array_fun
int8_array_fun
intl_date_time_format_function
intl_segment_iterator_map
iterator_result_map
js_array_packed_smi_elements_map
js_array_holey_elements_map
js_array_packed_double_elements_map
js_array_holey_double_elements_map
js_map_map
js_set_map
js_weak_map_fun
js_weak_ref_map
js_weak_set_fun
map_cache
map_key_iterator_map
map_value_iterator_map
number_function
object_function
object_function_prototype_map
opaque_reference_function
proxy_callable_map
proxy_map
proxy_revocable_result_map
promise_capability_default_reject_shared_fun
promise_value_thunk_finally_shared_fun
promise_all_resolve_element_shared_fun
promise_all_settled_reject_element_shared_fun
promise_prototype
regexp_exec_function
regexp_prototype_map
regexp_result_map
regexp_prototype
security_token
set_value_iterator_map
shared_array_buffer_fun
sloppy_arguments_map
strict_arguments_map
sloppy_function_map
sloppy_function_with_name_map
sloppy_function_without_prototype_map
sloppy_function_with_readonly_prototype_map
strict_function_map
strict_function_with_name_map
strict_function_with_readonly_prototype_map
strict_function_without_prototype_map
method_with_name_map
async_function_map
async_function_with_home_object_map
async_function_with_name_and_home_object_map
generator_function_with_name_map
async_generator_function_map
async_generator_function_with_home_object_map
async_generator_function_with_name_and_home_object_map
string_function
string_function_prototype_map
symbol_function
native_function_map
wasm_exception_constructor
template_weakmap
typed_array_prototype
uint16_array_fun
uint8_array_fun
uint8_clamped_array_fun
array_entries_iterator
error_to_string
eval_error_function
global_eval_fun
global_proxy_function
map_delete
promise_all
promise_catch
promise_function
reference_error_function
set_has
syntax_error_function
type_error_function
uri_error_function
wasm_runtime_error_function
weakmap_set
weakmap_get
weakset_add
reciever_arg_count + expr->arguments()->length() == args.register_count()
reg.index() == reg_list->last_register().index()
Read
Write
ReadWrite
Byte
Short
Quad
Single
Double
Quadruple
Flag8
IntrinsicId
RuntimeId
NativeContextIndex
UImm
RegCount
RegList
RegPair
RegOut
RegOutList
RegOutPair
RegOutTriple
<context>
<closure>
<this>
Wide
ExtraWide
DebugBreakWide
DebugBreakExtraWide
DebugBreak0
DebugBreak1
DebugBreak2
DebugBreak3
DebugBreak4
DebugBreak5
DebugBreak6
LdaZero
LdaSmi
LdaUndefined
LdaNull
LdaTheHole
LdaTrue
LdaFalse
LdaConstant
LdaGlobal
LdaGlobalInsideTypeof
StaGlobal
PushContext
PopContext
LdaContextSlot
LdaImmutableContextSlot
LdaCurrentContextSlot
LdaImmutableCurrentContextSlot
StaContextSlot
StaCurrentContextSlot
LdaLookupSlot
LdaLookupContextSlot
LdaLookupGlobalSlot
LdaLookupSlotInsideTypeof
LdaLookupContextSlotInsideTypeof
LdaLookupGlobalSlotInsideTypeof
StaLookupSlot
Ldar
Star
LdaNamedProperty
LdaNamedPropertyNoFeedback
LdaKeyedProperty
LdaModuleVariable
StaModuleVariable
StaNamedProperty
StaNamedPropertyNoFeedback
StaNamedOwnProperty
StaKeyedProperty
StaInArrayLiteral
StaDataPropertyInLiteral
AddSmi
SubSmi
MulSmi
DivSmi
ModSmi
ExpSmi
BitwiseOrSmi
BitwiseXorSmi
BitwiseAndSmi
ShiftLeftSmi
ShiftRightSmi
ShiftRightLogicalSmi
ToBooleanLogicalNot
LogicalNot
TypeOf
DeletePropertyStrict
DeletePropertySloppy
CallAnyReceiver
CallProperty
CallProperty0
CallProperty1
CallProperty2
CallUndefinedReceiver
CallUndefinedReceiver0
CallUndefinedReceiver1
CallUndefinedReceiver2
CallNoFeedback
CallRuntime
CallRuntimeForPair
CallJSRuntime
InvokeIntrinsic
TestEqual
TestEqualStrict
TestLessThan
TestGreaterThan
TestLessThanOrEqual
TestGreaterThanOrEqual
TestReferenceEqual
TestInstanceOf
TestIn
TestUndetectable
TestNull
TestUndefined
TestTypeOf
CreateArrayFromIterable
CreateEmptyObjectLiteral
CreateClosure
CreateBlockContext
CreateCatchContext
CreateFunctionContext
CreateEvalContext
CreateWithContext
CreateMappedArguments
CreateUnmappedArguments
CreateRestParameter
JumpLoop
Jump
JumpConstant
JumpIfNullConstant
JumpIfNotNullConstant
JumpIfUndefinedConstant
JumpIfNotUndefinedConstant
JumpIfTrueConstant
JumpIfFalseConstant
JumpIfJSReceiverConstant
JumpIfToBooleanTrueConstant
JumpIfToBooleanFalseConstant
JumpIfToBooleanTrue
JumpIfToBooleanFalse
JumpIfTrue
JumpIfFalse
JumpIfNull
JumpIfNotNull
JumpIfUndefined
JumpIfNotUndefined
JumpIfJSReceiver
SwitchOnSmiNoFeedback
ForInPrepare
ForInContinue
ForInNext
ForInStep
SetPendingMessage
Return
ThrowReferenceErrorIfHole
ThrowSuperNotCalledIfHole
ThrowSuperAlreadyCalledIfNotHole
SwitchOnGeneratorState
SuspendGenerator
ResumeGenerator
Debugger
i < NumberOfOperands(bytecode)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/interpreter/interpreter.cc:179
V8.CompileIgnition
V8.CompileIgnitionFinalization
[generated bytecode for function: 
counters_row ->DefineOwnProperty(context, to_name_object, counter_object) .IsJust()
counters_map->DefineOwnProperty(context, from_name_object, counters_row) .IsJust()
mode == IsolateAllocationMode::kInCppHeap
padded_reservation.InVM(address, reservation_size)
reservation_.size() == reservation_size
Failed to reserve memory for new V8 Isolate
reservation_.InVM(heap_address, kPtrComprHeapReservationSize)
IsAligned(isolate_root, kPtrComprIsolateRootAlignment)
page_allocator_instance_->AllocatePagesAt( reserved_region_address, reserved_region_size, PageAllocator::Permission::kNoAccess)
reservation_.SetPermissions(committed_region_address, committed_region_size, PageAllocator::kReadWrite)
!enable_embedded_blob_refcounting_
StickyEmbeddedBlob() == Isolate::CurrentEmbeddedBlob()
(blob) != nullptr
enable_embedded_blob_refcounting_
embedded_blob_ == CurrentEmbeddedBlob()
embedded_blob_ == StickyEmbeddedBlob()
Attempt to print stack while printing stack (double fault)
If you are lucky you may find a partial stack dump on stdout.
Stacktrace:
   ptr1=%p
    ptr2=%p
    ptr3=%p
    ptr4=%p
    failure_message_object=%p
generator_object->is_suspended()
promise_or_capability->IsUndefined(isolate)
==== JS stack trace =========================================
==== Details ================================================
=====================
Aborting on stack overflow
Exception thrown during bootstrapping
Extension or internal compilation error: %s in %s at line %d.
Extension or internal compilation error in %s at line %d.
Extension or internal compilation error: %s.
Extension or internal compilation error.
<anonymous>
, line %d
FROM
wasm::WasmCode::kRuntimeStub == wasm_code->kind()
0 == wasm_code->handler_table_offset()
-1 == JavaScriptFrame::cast(frame)->LookupExceptionHandlerInTable( nullptr, nullptr)
inserted
=== Stress deopt counter: %u
0 == size
embedded_blob() == StickyEmbeddedBlob()
CurrentEmbeddedBlob() == StickyEmbeddedBlob()
0 == current_embedded_blob_refs_
heap object creation
Concurrent recompilation has been disabled for tracing.
turbo-
.cfg
%d detached contexts are collected out of %d
detached context %p
 survived %d GCs (leak?)
RAIL mode: %s
[%d:%p] %8.0f ms: 
{"type": "zone", "isolate": "%p", "time": %f, "allocated": %zu}
zonecreation
{"type": "%s", "isolate": "%p", "time": %f, "ptr": "%p", "name": "%s", "size": %zu,"nesting": %zu}
zonedestruction
code-%d-%d.asm
code-%d.asm
ANIMATION
IDLE
Exception thrown:
Stack Trace:
=========================================================
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/json-parser.cc:142
object->length()->ToArrayLength(&length)
starting at object with constructor 
 -> object with constructor 
 closes the circle
| strings=%d symbols=0 elements=0 || prototypes>=1 ||
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/keys.cc:886
static_cast<unsigned>(length) <= static_cast<unsigned>(kMaxNumberOfDescriptors)
interceptor-indexed-enumerator
interceptor-named-enumerator
element->ToUint32(&number)
element->IsName()
attributes->ToInt32(&value)
interceptor-named-query
| strings=%d symbols=0 elements=%u || prototypes>=1 ||
GetIndexes(field_index, &layout_word_index, &layout_bit_index)
v8-version
\u%04x
\x2C
\x%02x
symbol(
hash 
symbol(hash 
<wasm-unknown>
size != -1
(perf_output_handle_) != nullptr
%lx %x %.*s
v8:Profiler
check-security
shared-library
code-deopt
current-time
timer-event-start
timer-event-end
timer-event
<unknown wasm>
code-source-info
%.0f
suspect-read
compilation-cache
reserve-id
background-compile
streaming-compile
script-details
script-source
active-runtime-timer
map-create
map-details
Unknown code from before profiling
STUB code
Regular expression code
A Wasm function
A JavaScript to Wasm adapter
A Wasm to JavaScript adapter
A Wasm to Interpreter adapter
A C to Wasm entry stub
V8.CompileFullCode
code-creation
code-disable-optimization
code-move
code-delete
code-moving-gc
sfi-move
snapshot-code-name
tick
isolate-
SamplingThread
DeletingProperty
TransitionToAccessorPair
state() == LookupIterator::DATA
kMachNone
kRepBit
kRepWord8
kRepWord16
kRepWord32
kRepWord64
kRepFloat32
kRepFloat64
kRepSimd128
kRepTaggedSigned
kRepTaggedPointer
kRepTagged
kRepCompressedSigned
kRepCompressedPointer
kRepCompressed
kTypeBool
kTypeInt32
kTypeUint32
kTypeInt64
kTypeUint64
kTypeNumber
kTypeAny
uninitialized field
old_map_->NumberOfOwnDescriptors() == integrity_source_map_->NumberOfOwnDescriptors()
GenAll_NotEquivalent
GenAll_PrivateSymbolsOnNonExtensible
GenAll_InvalidElementsTransition
GenAll_RootModification1
GenAll_RootModification2
GenAll_RootModification4
GenAll_Incompatible
is_transitionable_fast_elements_kind_ implies Map::IsMostGeneralFieldType(next_representation, *next_field_type)
has_integrity_level_transition_
GenAll_CantHaveMoreTransitions
CopyForPreventExtensions
state.s0 != 0 || state.s1 != 0
%s:%i: %s
<static_fields_initializer>
Promise.all (index 
prepareStackTrace
<error>
Cyclic __proto__ value
Debugger: %
Error loading debugger
Internal % error. Default options are missing.
Private fields can not be deleted
Uncaught %
Not supported
Internal error, wrong service type: %
Internal error. Wrong value type.
Internal error. Icu error.
Function.prototype.apply was called on %, which is a % and not a function
'arguments' is not allowed in class field initializer
Derived ArrayBuffer constructor created a buffer which was too small
ArrayBuffer subclass returned this from species constructor
array %[%] is not type %
await is only valid in async function
Atomics.wait cannot be called in this context
The comparison function must be either a function or undefined
The number % cannot be converted to a BigInt because it is not an integer
Cannot convert % to a BigInt
Cannot mix BigInt and other types, use explicit conversions
Do not know how to serialize a BigInt
BigInts have no unsigned right shift, use >> instead
Cannot convert a BigInt value to a number
% is not a function
% called on non-object
% called on null or undefined
CallSite expects wasm object as first or function as second argument, got <%, %>
CallSite method % expects CallSite as receiver
Cannot convert object to primitive value
Cannot prevent extensions
Cannot freeze
Cannot freeze array buffer views with elements
Cannot seal
Converting circular structure to JSON%
Abstract class % not directly constructable
Assignment to constant variable.
Classes may not have a field named 'constructor'
Class constructor % cannot be invoked without 'new'
Constructor % requires 'new'
The .constructor property is not an object
Currency code is required with currency style.
Detected cycle while resolving name '%' in '%'
First argument to DataView constructor must be an ArrayBuffer
this is not a Date object.
Debugger: Invalid frame index.
Debugger: Parameters have wrong types.
Missing initializer in % declaration
Cannot define property %, object is not extensible
Cannot perform % on a neutered ArrayBuffer
Object template has duplicate property '%'
Class extends value % is not a constructor or null
First argument to % must not be a regular expression
Bind must be called on a function
Generator is already running
Illegal invocation
Immutable prototype object '%' cannot have their prototype set
Cannot use new with import
Cannot use 'import.meta' outside a module
import() requires a specifier
Method % called on incompatible receiver %
Function has non-object prototype '%' in instanceof check
invalid_argument
Cannot use 'in' operator to search for '%' in %
RegExp exec method returned something other than an Object or null
Invalid unit argument for %() '%'
Iterator result % is not an object
Found non-callable @@iterator
Iterator value % is not an entry object
Language ID should be string or object.
First argument to Intl.Locale constructor can't be empty or missing
Incorrect locale information provided
Incorrect ListFormat information provided
flatMap mapper function is not callable
Method % called on a non-object or on a wrong type of object.
Method invoked on undefined or null value.
Method invoked on an object that is not %.
no access
Right-hand side of 'instanceof' is not callable
Cannot destructure 'undefined' or 'null'.
Cannot destructure property `%` of 'undefined' or 'null'.
% is not extensible
Right-hand side of 'instanceof' is not an object
Cannot read property '%' of %
Cannot set property '%' of %
Cannot set property % of % which has only a getter
% is not an iterator
% is not a promise
% is not a constructor
% requires that 'this' be a %
% is not a function or its return value is not iterable
% is not a function or its return value is not async iterable
Value need to be finite number for %()
% is not iterable
% is not iterable (cannot read property %)
% is not async iterable
% is not a valid property name
this is not a typed array.
Super constructor % of % is not a constructor
Super constructor % of anonymous class is not a constructor
% is not an integer shared typed array.
% is not an int32 shared typed array.
Object.prototype.__defineGetter__: Expecting function
Getter must be a function: %
Cannot add property %, object is not extensible
Object.prototype.__defineSetter__: Expecting function
Setter must be a function: %
Function object that's not a constructor was created with new
Chaining cycle detected for promise %
Promise executor has already been invoked with non-undefined arguments
Promise resolve or reject function is not callable
Property description must be an object: %
'%' returned for property '%' of object '%' is not a function
Object prototype may only be an Object or null: %
Class extends value does not have valid prototype property %
'construct' on proxy: trap returned non-object ('%')
'defineProperty' on proxy: trap returned truish for defining non-configurable property '%' which is either non-existent or configurable in the proxy target
'defineProperty' on proxy: trap returned truish for adding property '%'  to the non-extensible proxy target
'defineProperty' on proxy: trap returned truish for adding property '%'  that is incompatible with the existing property in the proxy target
'deleteProperty' on proxy: trap returned truish for property '%' which is non-configurable in the proxy target
'get' on proxy: property '%' is a read-only and non-configurable data property on the proxy target but the proxy did not return its actual value (expected '%' but got '%')
'get' on proxy: property '%' is a non-configurable accessor property on the proxy target and does not have a getter function, but the trap did not return 'undefined' (got '%')
'getOwnPropertyDescriptor' on proxy: trap returned descriptor for property '%' that is incompatible with the existing property in the proxy target
'getOwnPropertyDescriptor' on proxy: trap returned neither object nor undefined for property '%'
'getOwnPropertyDescriptor' on proxy: trap reported non-configurability for property '%' which is either non-existent or configurable in the proxy target
'getOwnPropertyDescriptor' on proxy: trap returned undefined for property '%' which exists in the non-extensible proxy target
'getOwnPropertyDescriptor' on proxy: trap returned undefined for property '%' which is non-configurable in the proxy target
'getPrototypeOf' on proxy: trap returned neither object nor null
'getPrototypeOf' on proxy: proxy target is non-extensible but the trap did not return its actual prototype
Cannot create proxy with a revoked proxy as target or handler
'has' on proxy: trap returned falsish for property '%' which exists in the proxy target as non-configurable
'has' on proxy: trap returned falsish for property '%' but the proxy target is not extensible
'isExtensible' on proxy: trap result does not reflect extensibility of proxy target (which is '%')
Cannot create proxy with a non-object as target or handler
'ownKeys' on proxy: trap result did not include '%'
'ownKeys' on proxy: trap returned extra keys but proxy target is non-extensible
'ownKeys' on proxy: trap returned duplicate entries
'preventExtensions' on proxy: trap returned truish but the proxy target is extensible
Cannot pass private property name to proxy trap
Cannot perform '%' on a proxy that has been revoked
'set' on proxy: trap returned truish for property '%' which exists in the proxy target as a non-configurable and non-writable data property with a different value
'set' on proxy: trap returned truish for property '%' which exists in the proxy target as a non-configurable and non-writable accessor property without a setter
'setPrototypeOf' on proxy: trap returned truish for setting a new prototype on the non-extensible proxy target
'%' on proxy: trap returned falsish
'%' on proxy: trap returned falsish for property '%'
Cannot redefine property: %
Cannot redefine a property of an object with external array elements
Reduce of empty array with no initial value
Cannot supply flags when constructing one RegExp from another
% getter called on non-object %
% getter called on non-RegExp object
Incorrect RelativeDateTimeFormatter provided
Promise resolver % is not a function
The iterator's 'return' method is not callable
Derived SharedArrayBuffer constructor created a buffer which was too small
SharedArrayBuffer subclass returned this from species constructor
Classes may not have a static property named 'prototype'
Cannot delete property '%' of %
'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them
Cannot assign to read only property '%' of % '%'
Cannot create property '%' on % '%'
Result of the Symbol.iterator method is not an object
Result of the Symbol.asyncIterator method is not an object
% is not a symbol
Cannot convert a Symbol value to a number
Cannot convert a Symbol value to a string
The iterator does not provide a 'throw' method.
Cannot convert undefined or null to object
Invalid property descriptor. Cannot both specify accessors and a value or writable attribute, %
Identifier '%' has already been declared
%: Arguments list has wrong type
% is not defined
Super constructor may only be called once
Cannot access '%' before initialization
Unsupported reference to 'super'
Division by zero
Exponent must be positive
Provided date is not in valid range.
Expected letters optionally connected with underscores or hyphens for a location, got %
Invalid array buffer length
Array buffer allocation failed
Invalid array length
Invalid atomic access index
Invalid code point %
Invalid count value
Invalid currency code: %
Offset is outside the bounds of the DataView
Invalid DataView length %
Start offset % is outside the bounds of the buffer
Invalid hint: %
Invalid value: not (convertible to) a safe integer
Invalid language tag: %
Invalid value used as weak map key
Invalid value used in weak set
Invalid string length
Invalid time value
Invalid time zone specified: %
% of % should be a multiple of %
Invalid typed array index
Invalid typed array length: %
let is disallowed as a lexically bound name
Illegal value for localeMatcher:%
The normalization form should be one of %.
Paramenter % of function %() is % and out of range
Numeric separator can not be used after leading 0.
% argument must be between 0 and 100
Numeric separators are not allowed at the end of numeric literals
Only one underscore is allowed as numeric separator
% value is out of range.
Maximum call stack size exceeded
toPrecision() argument must be between 1 and 100
toString() radix argument must be between 2 and 36
offset is out of bounds
Source is too large
Value % out of range for % options property %
The requested module '%' contains conflicting star exports for name '%'
Getter must not have any formal parameters.
Setter must have exactly one formal parameter.
Invalid BigInt string
Class constructor may not be an accessor
Class constructor may not be a generator
Class constructor may not be an async method
Class constructor may not be a private method
Derived constructors may only return object or undefined
A class may only have one constructor
Duplicate export of '%'
Duplicate __proto__ fields are not allowed in object literals
% loop variable declaration may not have an initializer.
Invalid left-hand side in % loop: Must have a single binding.
Generators can only be declared at the top level or inside a block.
Async functions can only be declared at the top level or inside a block.
Illegal break statement
Illegal continue statement: no surrounding iteration statement
Illegal continue statement: '%' does not denote an iteration statement
Illegal '%' directive in function with non-simple parameter list
Illegal return statement
Intrinsic calls do not support spread arguments
`...` must be followed by an identifier in declaration contexts
Illegal property in declaration context
`...` must be followed by an assignable reference in assignment contexts
Keyword must not contain escaped characters
'%' must not contain escaped characters
Invalid left-hand side in assignment
Invalid shorthand property initializer
Invalid destructuring assignment target
Invalid left-hand side in for-loop
Invalid left-hand side expression in postfix operation
Invalid left-hand side expression in prefix operation
Invalid flags supplied to RegExp constructor '%'
Invalid or unexpected token
Undefined private field %: must be declared in an enclosing class
Read of private field % from an object which did not contain the field
Write of private field % to an object which did not contain the field
Unexpected end of JSON input
Unexpected token % in JSON at position %
Unexpected number in JSON at position %
Unexpected string in JSON at position %
Label '%' has already been declared
Labelled function declaration not allowed as the body of a control flow structure
Malformed arrow function parameter list
Invalid regular expression: /%/: %
Invalid regular expression flags
Export '%' is not defined in module
Function statements require a function name
HTML comments are not allowed in modules
More than one default clause in switch statement
Illegal newline after throw
Missing catch or finally after try
Rest parameter must be last formal parameter
Flattening % elements on an array-like of length % is disallowed, as the total surpasses 2**53-1
Pushing % elements on an array-like of length % is disallowed, as the total surpasses 2**53-1
Rest element must be last element
Setter function argument must not be a rest parameter
Duplicate parameter name not allowed in this context
Function arg string contains parenthesis
Arg string terminates parameters early
Unexpected end of arg string
Rest parameter may not have a default initializer
Runtime function given wrong number of arguments
Must call super constructor in derived class before accessing 'this' or returning from derived constructor
Single function literal required
In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.
object.constructor[Symbol.species] is not a constructor
Delete of an unqualified identifier in strict mode.
Unexpected eval or arguments in strict mode
In strict mode code, functions can only be declared at top level or inside a block.
Octal literals are not allowed in strict mode.
Decimals with leading zeros are not allowed in strict mode.
Octal escape sequences are not allowed in strict mode.
Strict mode code may not include a with statement
Octal escape sequences are not allowed in template strings.
'this' is not a valid formal parameter name
'await' is not a valid identifier name in an async function
Illegal await-expression in formal parameters of async function
Too many arguments in function call (only 65535 allowed)
Too many parameters in function definition (only 65534 allowed)
Literal containing too many nested spreads (up to 65534 allowed)
Too many variables declared (only 4194303 allowed)
Too many elements passed to Promise.all
Derived TypedArray constructor created an array which was too small
Unexpected end of input
Unexpected private field
Unexpected reserved word
Unexpected strict mode reserved word
'super' keyword unexpected here
new.target expression is not allowed here
Unexpected template string
Unexpected token %
Unary operator used immediately before exponentiation expression. Parenthesis must be used to disambiguate operator precedence
Unexpected identifier
Unexpected number
Unexpected string
Unexpected regular expression
Lexical declaration cannot appear in a single-statement context
Undefined label '%'
The requested module '%' does not provide an export named '%'
missing ) after argument list
Invalid regular expression: missing /
Unterminated template literal
Missing } in template expression
Found non-callable @@hasInstance
Invalid hexadecimal escape sequence
Invalid Unicode escape sequence
Undefined Unicode code-point
Yield expression not allowed in formal parameter
Possible side-effect in debug-evaluate
URI malformed
unreachable
memory access out of bounds
operation does not support unaligned accesses
divide by zero
divide result unrepresentable
remainder by zero
float unrepresentable in integer range
invalid index into function table
function signature mismatch
wasm function signature contains illegal type
data segment has been dropped
element segment has been dropped
table access out of bounds
wasm exception
Invalid asm.js: %
Converted asm.js to WebAssembly: %
Instantiated asm.js: %
Linking failure in asm.js: %
% could not be cloned.
Data cannot be cloned, out of memory.
An ArrayBuffer is neutered and could not be cloned.
A SharedArrayBuffer could not be cloned. SharedArrayBuffer must not be transferred.
Unable to deserialize cloned data.
Unable to deserialize cloned data due to invalid or unsupported version.
Trace event category must be a string.
Trace event name must be a string.
Trace event name must not be an empty string.
Trace event phase must be a number.
Trace event id must be a number.
FinalizationGroup: cleanup must be callable
FinalizationGroup.prototype.register: target must be an object
FinalizationGroup.prototype.register: target and holdings must not be same
WeakRef: target must be an object
Error.prototype.toString
V8.RunMicrotasks
microtask_count
#<%s>
<%s>
Map=
 - type: 
 - instance size: 
variable
 - inobject properties: 
 - elements kind: 
 - unused property fields: 
 - enum length: 
invalid
 - deprecated_map
 - stable_map
 - migration_target
 - dictionary_map
 - has_hidden_prototype
 - named_interceptor
 - indexed_interceptor
 - may_have_interesting_symbols
 - undetectable
 - callable
 - constructor
 - has_prototype_slot
 (non-instance prototype)
 - access_check_needed
 - non-extensible
 - prototype_map
 - prototype info: 
 - back pointer: 
 - prototype_validity cell: 
 - instance descriptors 
(own) 
 - layout descriptor: 
 - transitions #
 - prototype: 
 - constructor: 
 - dependent code: 
 - construction counter: 
(get: 
, set: 
%p is not within the current isolate's large object, code or embedded spaces
No code object found containing %p
Please provide a layout descriptor
Please provide a valid Map
invalid table size
length == properties
<a very large BigInt>
[object Unknown]
[cleared]
[weak] 
<Map
<AwaitContext generator= 
<BlockContext[
<CatchContext[
<DebugEvaluateContext[
<EvalContext[
<FunctionContext[
<ModuleContext[
<NativeContext[
<ScriptContext[
<WithContext[
<ScriptContextTable[
<HashTable[
<OrderedHashMap[
<OrderedHashSet[
<OrderedNameDictionary[
<NameDictionary[
<GlobalDictionary[
<NumberDictionary[
<SimpleNumberDictionary[
<StringTable[
<FixedArray[
<ObjectBoilerplateDescription[
<FixedDoubleArray[
<ByteArray[
<BytecodeArray[
<DescriptorArray[
<TransitionArray[
<PropertyArray[
<FeedbackCell[
no feedback
no closures
one closure
many closures
!!!INVALID MAP!!!
<ClosureFeedbackCellArray[
<FeedbackVector[
<FreeSpace[
<FixedUint8Array[
<FixedInt8Array[
<FixedUint16Array[
<FixedInt16Array[
<FixedUint32Array[
<FixedInt32Array[
<FixedFloat32Array[
<FixedFloat64Array[
<FixedUint8ClampedArray[
<FixedBigUint64Array[
<FixedBigInt64Array[
<PreparseData[data=
 children=
<UncompiledDataWithoutPreparseData (
<UncompiledDataWithPreparseData (
) preparsed=
<SharedFunctionInfo 
<SharedFunctionInfo>
<JSMessageObject>
<AccessCheckInfo
<AccessorInfo
<AccessorPair
<AliasedArgumentsEntry
<AllocationMemento
<AsmWasmData
<AsyncGeneratorRequest
<ClassPositions
<DebugInfo
<FunctionTemplateInfo
<FunctionTemplateRareData
<InterceptorInfo
<InterpreterData
<ModuleInfoEntry
<Module
<ObjectTemplateInfo
<PromiseCapability
<PromiseReaction
<PrototypeInfo
<Script
<StackFrameInfo
<StackTraceFrame
<Tuple2
<Tuple3
<ArrayBoilerplateDescription
<WasmDebugInfo
<WasmExceptionTag
<WasmExportedFunctionData
<CallableTask
<CallbackTask
<PromiseFulfillReactionJobTask
<PromiseRejectReactionJobTask
<PromiseResolveThenableJobTask
<FinalizationGroupCleanupJobTask
<AllocationSite
<ScopeInfo
<Code 
<undefined>
<the_hole>
<null>
<true>
<false>
<Odd Oddball: 
<HeapNumber 
<MutableHeapNumber 
<BigInt 
<JSProxy>
<Foreign>
<Cell value= 
<PropertyCell name=
 value=
<CallHandlerInfo 
callback= 
, js_callback= 
, data= 
, side_effect_free= true>
, side_effect_free= false>
<Other heap object (
 callable=
typed elements write
elements write
old_len_desc.value()->ToArrayLength(&old_len)
uint32_v->ToArrayLength(output)
a->length()->ToArrayLength(&actual_new_len)
empty_slot < array->length()
fun->function_literal_id() != kFunctionLiteralIdInvalid
fun->function_literal_id() < shared_function_infos()->length()
lineOffset
columnOffset
sourceMappingURL
v8::internal::Script
id_ref
scope
inferredName
formalParameterCount
languageMode
sourcePosition
v8::internal::SharedFunctionInfo
noscript_list->RemoveOne(MaybeObjectHandle::Weak(shared))
function 
false (no Script associated with it)
false (requires precise binary coverage)
false (optimization disabled)
false (is a builtin)
false (is not user code)
false (has no BytecodeArray)
false (length > FLAG_max_inlined_bytecode_size)
false (may contain break points)
<No Source>
<Invalid Source>
[disabled optimization for 
, reason: %s]
undecided
don't tenure
maybe tenure
tenure
zombie
array->length()->ToArrayLength(&length)
call_site_frame_array_symbol
call_site_frame_index_symbol
console_context_id_symbol
console_context_name_symbol
class_fields_symbol
class_positions_symbol
detailed_stack_trace_symbol
elements_transition_symbol
error_end_pos_symbol
error_script_symbol
error_start_pos_symbol
frozen_symbol
generic_symbol
home_object_symbol
interpreter_trampoline_symbol
megamorphic_symbol
native_context_index_symbol
nonextensible_symbol
not_mapped_symbol
premonomorphic_symbol
promise_debug_marker_symbol
promise_forwarding_handler_symbol
promise_handled_by_symbol
sealed_symbol
stack_trace_symbol
strict_function_transition_symbol
wasm_exception_tag_symbol
wasm_exception_values_symbol
uninitialized_symbol
<Symbol:
resolved
pending
rejected
Promise::kPending == promise->status()
reactions->IsSmi() || reactions->IsPromiseReaction()
!string.is_null()
is_suspended()
key->is_private_name()
EVAL_SCOPE
FUNCTION_SCOPE
MODULE_SCOPE
SCRIPT_SCOPE
CATCH_SCOPE
BLOCK_SCOPE
CLASS_SCOPE
WITH_SCOPE
sloppy
NormalFunction
ArrowFunction
ConciseMethod
DerivedConstructor
BaseConstructor
GetterFunction
SetterFunction
Module
ClassMembersInitializerFunction
DefaultBaseConstructor
DefaultDerivedConstructor
AsyncArrowFunction
AsyncConciseMethod
ConciseGeneratorMethod
AsyncConciseGeneratorMethod
: IsInlineable? 
length <= fixed_array->length()
StringShape(separator).IsSequentialOneByte()
element->ToUint32(&num_separators)
carry + high == 0
0123456789abcdefghijklmnopqrstuvwxyz
, %s
INTERPRETED_FUNCTION
target->IsCode()
Deoptimization Input Data invalidated by lazy deoptimization
Inlined functions (count = 
Deoptimization Input Data (deopt points = 
 index  bytecode-offset    pc
  commands
 {frame count=
, js frame count=
, update_feedback_count=
{bytecode_offset=
, function=
, height=
, retval=@
{bailout_id=
{function=
{input=
 (int32)}
 (int64)}
 (uint32)}
 (bool)}
{literal_id=
{object_index=
{arguments_type=
{length=
{feedback={vector_index=
, slot=
kind = 
name = 
stack_slots = 
compiler = 
turbofan
address = 
Trampoline (size = 
Instructions (size = 
Source positions:
 pc offset  position
  statement
External Source positions:
 pc offset  fileid  line
Safepoints (size = 
 (sp -> fp)  
Handler Table (size = 
RelocInfo (size = 
UnwindingInfo (size = 
Parameter count 
Register count 
Frame size 
 S> 
 E> 
Constant pool (size = 
[marking dependent code 0x%012lx (opt #%d) for deoptimization, reason: %s]
prototype-check
property-cell-changed
field-owner
initial-map-changed
allocation-site-tenuring-changed
allocation-site-transition-changed
MAPPED_ARGUMENTS
UNMAPPED_ARGUMENTS
REST_PARAMETER
Coverage info (
{anonymous}
Failed to create ICU locale, are ICU data files missing?
-true
(number_format) != nullptr
minimumIntegerDigits
minimumFractionDigits
maximumFractionDigits
nfkc
NFC, NFD, NFKC, NFKD
(normalizer) != nullptr
caseFirst
upper
lower
hourCycle
localeMatcher
best fit
zh-min
cel-gaulish
enochian
mingo
en_US_POSIX
en-US
locale[0] == 'x' || locale[0] == 'i'
normal
loose
calendar
collation
finance
is_detachable()
!was_detached()
is_external()
(isolate->array_buffer_allocator()) != nullptr
JSTypedArray::MaterializeArrayBuffer
Intl.JSV8BreakIterator
Intl.v8BreakIterator
word
character
sentence
Failed to create ICU break iterator, are ICU data files missing?
(break_iterator.get()) != nullptr
(break_iterator) != nullptr
case
base
accent
variant
Intl.Collator
usage
numeric
Failed to create ICU collator, are ICU data files missing?
sensitivity
ignorePunctuation
(value) != nullptr
JSReceiver::CreateDataProperty(isolate, options, key, value_str, Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty(isolate, options, key, value_obj, Just(kDontThrow)) .FromJust()
ETC/UTC
ETC/GMT
!date_time_format->icu_locale().is_null()
(date_time_format->icu_locale()->raw()) != nullptr
gregorian
gregory
ethiopic-amete-alem
ethioaa
JSReceiver::CreateDataProperty(isolate, options, factory->locale_string(), locale, Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->calendar_string(), factory->NewStringFromAsciiChecked(calendar_str.c_str()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->numberingSystem_string(), factory->NewStringFromAsciiChecked(numbering_system.c_str()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty(isolate, options, factory->timeZone_string(), timezone_value, Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->hourCycle_string(), date_time_format->HourCycleAsString(), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->hour12_string(), factory->true_value(), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->hour12_string(), factory->false_value(), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->NewStringFromAsciiChecked(item.property.c_str()), factory->NewStringFromAsciiChecked(pair.value.c_str()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->dateStyle_string(), DateTimeStyleAsString(isolate, date_time_format->date_style()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->timeStyle_string(), DateTimeStyleAsString(isolate, date_time_format->time_style()), Just(kDontThrow)) .FromJust()
date->IsNumber()
weekday
month
hour
minute
UnwrapDateTimeFormat
hour12
timeZone
jjmm
dateStyle
full
long
medium
short
timeStyle
formatMatcher
basic
Failed to create ICU date format, are ICU data files missing?
(format) != nullptr
(date_interval_format) != nullptr
Etc/GMT
Antarctica/Dumontdurville
Antarctica/DumontDUrville
narrow
2-digit
EEEEE
ccccc
GGGGG
MMMMM
LLLLL
timeZoneName
Etc/Unknown
(calendar.get()) != nullptr
(date_interval_format.get()) != nullptr
(date_format.get()) != nullptr
arrow
hort
onjunction
isjunction
conjunction
disjunction
unit
style
Failed to create ICU list formatter, are ICU data files missing?
(formatter) != nullptr
standard
standard-short
standard-narrow
or-short
or-narrow
unit-short
unit-narrow
pos.getBeginIndex() >= prev_item_end_index
pos.getField() == ULISTFMT_ELEMENT_FIELD
0 < bcp47_tag.length()
(*bcp47_tag) != nullptr
language
ApplyOptionsToTag
region
!icu_locale->isBogus()
numberingSystem
locale
!icu_locale.isBogus()
JSReceiver::CreateDataProperty( isolate, options, factory->style_string(), number_format_holder->StyleAsString(), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->currency_string(), factory ->NewStringFromTwoByte(Vector<const uint16_t>( reinterpret_cast<const uint16_t*>(currency.getBuffer()), currency.length())) .ToHandleChecked(), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->currencyDisplay_string(), number_format_holder->CurrencyDisplayAsString(), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->minimumIntegerDigits_string(), factory->NewNumberFromInt(number_format->getMinimumIntegerDigits()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->minimumFractionDigits_string(), factory->NewNumberFromInt(number_format->getMinimumFractionDigits()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->maximumFractionDigits_string(), factory->NewNumberFromInt(number_format->getMaximumFractionDigits()), Just(kDontThrow)) .FromJust()
number_format->getDynamicClassID() == icu::DecimalFormat::getStaticClassID()
JSReceiver::CreateDataProperty( isolate, options, factory->minimumSignificantDigits_string(), factory->NewNumberFromInt( decimal_format->getMinimumSignificantDigits()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->maximumSignificantDigits_string(), factory->NewNumberFromInt( decimal_format->getMaximumSignificantDigits()), Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty( isolate, options, factory->useGrouping_string(), factory->ToBoolean((number_format->isGroupingUsed() == TRUE)), Just(kDontThrow)) .FromJust()
UnwrapNumberFormat
decimal
percent
currency
currencyDisplay
Failed to create ICU number_format, are ICU data files missing?
icu_number_format->getDynamicClassID() == icu::DecimalFormat::getStaticClassID()
useGrouping
numeric_obj->IsNumeric()
(fmt) != nullptr
success
JSObject::CreateDataProperty(&it, prop_value, Just(kThrowOnError)) .FromJust()
receiver->IsJSFunction()
Object.defineProperty
Object.defineProperties
status.FromJust()
<JSArray[%u]>
<JSBoundFunction
 (BoundTargetFunction %p)>
<JSWeakMap>
<JSWeakSet>
<JSRegExp
<JSFunction 
<JSFunction
 (sfi = %p)
<JSGenerator>
<JSAsyncFunctionObject>
<JS AsyncGenerator>
!!!INVALID CONSTRUCTOR!!!
!!!INVALID SHARED ON CONSTRUCTOR!!!
<GlobalObject 
 %smap = %p
deprecated-
<RemoteObject>
<JS%sObject
Global 
 value = 
elements transition [
 -> 
] in 
 for 
 from 
 to 
[migrating to slow]
[migrating]
:%s->%s 
{symbol %p}
elements_kind[%i->%i]
Moving prototype_info %p from map %p to map %p.
new_map->is_dictionary_map()
ForceSetPrototype
Object::AddDataProperty(&it, value, attributes, Just(ShouldThrow::kThrowOnError), StoreOrigin::kNamed) .IsJust()
SlowToFast
k->IsUniqueName()
PreventExtensions
GetPropertyAttributes(&it).IsJust()
NormalizeAsPrototype
OptimizeAsPrototype
CopyAsPrototype
Registering %p as a user of prototype %p (map=%p).
Unregistering %p as a user of prototype %p.
JSArray::cast(*object)->length()->ToArrayLength(&old_length)
  ** Not marking 
 -- already in optimization queue.
  ** Marking 
 for concurrent recompilation.
SetPrototype
InitialMap
prototype->IsJSReceiver()
has_initial_map()
max_nof_fields <= JSObject::kMaxInObjectProperties
static_cast<unsigned>(requested_embedder_fields) <= static_cast<unsigned>(max_nof_fields)
*in_object_properties == ((*instance_size - header_size) >> kTaggedSizeLog2) - requested_embedder_fields
static_cast<unsigned>(*instance_size) <= static_cast<unsigned>(JSObject::kMaxInstanceSize)
ClearTypeFeedbackInfo
interceptor-indexed-define
interceptor-named-define
v8::IndexedPropertyDescriptorCallback
v8::NamedPropertyDescriptorCallback
Invalid property descriptor.
interceptor-indexed-descriptor
interceptor-named-descriptor
interceptor-indexed-set
is_prototype_map()
static_cast<unsigned>(value) < JSObject::kFieldsAdded
interceptor-indexed-deleter
interceptor-named-deleter
Invalidating prototype map %p 's cell
SetInstancePrototype
constructor_initial_map->UsedInstanceSize() <= instance_size
() { [native code] }
SlowPreventExtensions
SlowCopyForPreventExtensions
boilerplate->length()->ToArrayLength(&length)
AllocationSite: JSArray %p boilerplate %supdated %s->%s
(nested)
AllocationSite: JSArray %p site updated %s->%s
cardinal
(icu_plural_rules) != nullptr
(icu_decimal_format) != nullptr
minimumSignificantDigits
maximumSignificantDigits
pluralCategories
Failed to create ICU PluralRules, are ICU data files missing?
((*plural_rules).get()) != nullptr
((*number_format).get()) != nullptr
JSPluralRules::Type::CARDINAL == type
(plural_rules.get()) != nullptr
(number_format.get()) != nullptr
JSReceiver::CreateDataProperty(isolate, options, key_str, value, Just(kDontThrow)) .FromJust()
always
Failed to create ICU number format, are ICU data files missing?
Failed to create ICU relative date time formatter, are ICU data files missing?
(icu_formatter) != nullptr
seconds
minutes
hours
days
week
weeks
months
quarter
quarters
year
years
(icu_break_iterator) != nullptr
JSReceiver::CreateDataProperty(isolate, result, factory->segment_string(), segment, Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty(isolate, result, factory->breakType_string(), break_type, Just(kDontThrow)) .FromJust()
JSReceiver::CreateDataProperty(isolate, result, factory->index_string(), new_index, Just(kDontThrow)) .FromJust()
grapheme
granularity
(icu_break_iterator.get()) != nullptr
*dict == *dictionary
[reconfiguring]
{symbol 
kData
ACCESSORS
, attrs: 
[generalizing]
 maps
Deprecate
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/objects/map.cc:734
field type generalization
Normalize
ImmutablePrototype
Transition
ReplaceDescriptors
CopyAsElementsKind
MapCreate
TooManyFastProperties
GenAll_AttributesMismatchProtoMap
TransitionToAccessorFromNonPair
TransitionToDifferentAccessor
AccessorsOverwritingNonLast
AccessorsOverwritingNonAccessors
AccessorsWithAttributes
AccessorsOverwritingNonPair
AccessorsOverwritingAccessors
TooManyAccessors
CopyAddDescriptor
CopyReplaceDescriptor
GetConstructor() == other->GetConstructor()
instance_type() == other->instance_type()
has_hidden_prototype() == other->has_hidden_prototype()
TransitionToPrototype
map->NumberOfOwnDescriptors() == source_map->NumberOfOwnDescriptors()
0 <= max_slack
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/objects/module.cc:453
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/objects/module.cc:679
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/objects/module.cc:851
JSModuleNamespace
key->IsName()
STACK
CONTEXT
UNUSED
<Very long string[%s%u]>
<Invalid String>
<String[%s%u]: 
<String[%s%u]\: 
String.prototype.indexOf
String.prototype.lastIndexOf
V8.AbortOptimization
V8.RetryOptimization
functionContextSpecialized
bailoutReason
disableFutureOptimization
optimizationId
inlinedFunctions
%s%.*llx
\u{%06x}
names_stack_.size() > 0
names_stack_.back().name()->IsOneByteEqualTo("async")
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/parsing/parse-info.cc:24
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/parsing/parser.cc:394
V8.ParseProgram
parse-eval
parse-script
V8.ParseFunction
parse-function
stack_overflow()
.ns-export
preparse-no-resolution
preparse-resolution
full-parse
V8.PreParse
<instance_members_initializer>
use strict
new.target
import.meta
has_error()
arrow function
for-await-of
destructuring
for-of
for-in
.class-field-
data_->children_length() > child_index
scope_data_->HasRemainingBytes( PreparseByteDataConstants::kSkippableFunctionMinDataSize)
start_position == start_position_from_data
scope_data_->HasRemainingBytes(ByteData::kUint8Size)
(closure_scope()) != nullptr
can_be_cloned()
enum
interface
instanceof
continue
package
public
static
private
protected
else
yield
extends
class
void
import
implements
typeof
TEMPLATE_SPAN
TEMPLATE_TAIL
PERIOD
LBRACK
LPAREN
RPAREN
RBRACK
LBRACE
COLON
ELLIPSIS
CONDITIONAL
SEMICOLON
RBRACE
ARROW
INIT
ASSIGN
ASSIGN_BIT_OR
ASSIGN_BIT_XOR
ASSIGN_BIT_AND
ASSIGN_SHL
ASSIGN_SAR
ASSIGN_SHR
ASSIGN_MUL
ASSIGN_DIV
ASSIGN_MOD
ASSIGN_EXP
ASSIGN_ADD
ASSIGN_SUB
COMMA
BIT_OR
BIT_XOR
BIT_AND
BIT_NOT
TYPEOF
VOID
EQ_STRICT
NE_STRICT
INSTANCEOF
BREAK
CASE
CATCH
CONTINUE
DEBUGGER
DEFAULT
ELSE
FINALLY
FUNCTION
RETURN
SWITCH
THROW
WHILE
WITH
THIS
NULL_LITERAL
TRUE_LITERAL
FALSE_LITERAL
NUMBER
BIGINT
STRING
SUPER
IDENTIFIER
ASYNC
AWAIT
YIELD
STATIC
FUTURE_STRICT_RESERVED_WORD
ESCAPED_STRICT_RESERVED_WORD
ENUM
CLASS
CONST
EXPORT
EXTENDS
IMPORT
PRIVATE_NAME
ILLEGAL
ESCAPED_KEYWORD
WHITESPACE
UNINITIALIZED
REGEXP_LITERAL
=init
>>>=
%10u %10u %*c
%s #%u
%u #%u
[AllocationTraceTree:]
Total size | Allocation count | Function id | id
[AddressToTraceMap (%zu): 
[%p - %p] => %u
(root)
(V8 API)
v8:ProfEvntProc
native V8Runtime
CpuProfiler::StartProfiling
(head_) != nullptr
(n) != nullptr
%d / %s
%6zu @%6u %*c %s%s: 
%s %.40s
!!! unknown edge type: %d 
/hidden/
/object/
/closure/
/string/
/code/
/array/
/regexp/
/number/
/native/
/synthetic/
/concatenated string/
/sliced string/
/symbol/
/bigint/
(GC roots)
is_complete()
Move object from %p to %p old size %6d new size %6d
Update object size : %p with old size %d and new size %d
Begin HeapObjectsMap::UpdateHeapObjectsMap. map has %d entries.
Update object      : %p %6d. Next address is %p
End HeapObjectsMap::UpdateHeapObjectsMap. map has %d entries.
native_bind
%s / %s
(concatenated string)
(sliced string)
private symbol
symbol
system / NativeContext
system / Context
number
system / Map (String)
system / Map (OneByteString)
system / Map (ConsString)
system / Map (ConsOneByteString)
system / Map (SlicedString)
system / Map (SlicedOneByteString)
system / Map (ExternalString)
system / Map (ExternalOneByteString)
system / Map (UncachedExternalString)
system / Map (UncachedExternalOneByteString)
system / Map (InternalizedString)
system / Map (OneByteInternalizedString)
system / Map (ExternalInternalizedString)
system / Map (ExternalOneByteInternalizedString)
system / Map (UncachedExternalInternalizedString)
system / Map (UncachedExternalOneByteInternalizedString)
system / Map (ThinString)
system / Map (ThinOneByteString)
system / Map (EmptyString)
system / Map
system / Cell
system / PropertyCell
system / Foreign
system / Oddball
system / AllocationSite
system / AccessCheckInfo
system / AccessorInfo
system / AccessorPair
system / AliasedArgumentsEntry
system / AllocationMemento
system / AsmWasmData
system / AsyncGeneratorRequest
system / ClassPositions
system / DebugInfo
system / FunctionTemplateInfo
system / FunctionTemplateRareData
system / InterceptorInfo
system / InterpreterData
system / ModuleInfoEntry
system / Module
system / ObjectTemplateInfo
system / PromiseCapability
system / PromiseReaction
system / PrototypeInfo
system / Script
system / StackFrameInfo
system / StackTraceFrame
system / Tuple2
system / Tuple3
system / ArrayBoilerplateDescription
system / WasmDebugInfo
system / WasmExceptionTag
system / WasmExportedFunctionData
system / CallableTask
system / CallbackTask
system / PromiseFulfillReactionJobTask
system / PromiseRejectReactionJobTask
system / PromiseResolveThenableJobTask
system / FinalizationGroupCleanupJobTask
system
native_context
(bound arguments)
bindings
bound_this
bound_function
bound_argument_%d
initial_map
(function feedback cell)
feedback_cell
(shared function info)
shared
(context)
context
global_proxy
buffer
(object properties)
(object elements)
elements
parent
actual
name
key %s in WeakMap
scope_info
previous
extension
(context norm. map cache)
(context data)
optimized_code_list
deoptimized_code_list
transition
(prototype transitions)
(transition array)
transitions
(transition)
prototype_info
(map descriptors)
descriptors
prototype
layout_descriptor
(back pointer)
back_pointer
(constructor function data)
constructor_function_data
constructor
(dependent code)
dependent_code
(code for %s)
(%s code)
(function scope info)
name_or_scope_info
script_or_debug_info
function_data
raw_outer_scope_info_or_feedback_metadata
source
context_data
(script line ends)
line_ends
expected_receiver_type
getter
setter
(%s builtin)
(code relocation info)
relocation_info
(code deopt data)
deoptimization_data
(source position table)
source_position_table
(feedback cell)
transition_info
nested_site
constant_elements
backing_store
reactions_or_result
receiver
parameters_and_registers
optimized code
enum_cache
get %s
set %s
!strong_gc_subroot_names_.empty()
"snapshot":{
"nodes":[
"edges":[
"trace_function_infos":[
"trace_tree":[
"samples":[
"locations":[
"strings":[
"meta":
{"node_fields":["type","name","id","self_size","edge_count","trace_node_id"],"node_types":[["hidden","array","string","object","code","closure","regexp","number","native","synthetic","concatenated string","sliced string","symbol","bigint"],"string","number","number","number","number","number"],"edge_fields":["type","name_or_index","to_node"],"edge_types":[["context","element","property","internal","hidden","shortcut","weak"],"string_or_number","node"],"trace_function_info_fields":["function_id","name","script_name","script_id","line","column"],"trace_node_fields":["id","function_info_index","count","size","children"],"sample_fields":["timestamp_us","last_assigned_id"],"location_fields":["object_index","script_id","line","column"]}
,"node_count":
,"edge_count":
,"trace_function_count":
"<dummy>"
allow_code_gen_from_strings
array_buffer_fun
array_buffer_noinit_fun
array_function
async_from_sync_iterator_map
async_function_await_resolve_shared_fun
async_function_constructor
async_generator_await_reject_shared_fun
async_generator_await_resolve_shared_fun
async_generator_return_resolve_shared_fun
async_generator_return_closed_resolve_shared_fun
bigint_function
bigint64_array_fun
bound_function_with_constructor_map
bound_function_without_constructor_map
call_as_function_delegate
callsite_function
context_extension_function
data_view_fun
date_function
debug_context_id
error_message_for_code_gen_from_strings
errors_thrown
extras_binding_object
extras_utils_object
fast_aliased_arguments_map
float32_array_fun
float64_array_fun
function_function
generator_function_function
generator_object_prototype_map
initial_array_iterator_map
initial_array_prototype
initial_error_prototype
initial_generator_prototype
initial_async_generator_prototype
initial_iterator_prototype
initial_map_prototype_map
initial_object_prototype
initial_set_prototype
initial_set_prototype_map
initial_string_iterator_map
initial_string_iterator_prototype
initial_string_prototype
intl_collator_function
intl_number_format_function
intl_locale_function
js_array_holey_smi_elements_map
js_array_packed_elements_map
js_map_fun
js_module_namespace_map
js_set_fun
weak_cell_map
js_finalization_group_cleanup_iterator_map
map_key_value_iterator_map
math_random_index
math_random_state
math_random_cache
message_listeners
normalized_map_cache
proxy_constructor_map
proxy_function
proxy_revoke_shared_fun
promise_get_capabilities_executor_shared_fun
promise_capability_default_resolve_shared_fun
promise_then_finally_shared_fun
promise_catch_finally_shared_fun
promise_thrower_finally_shared_fun
promise_all_settled_resolve_element_shared_fun
regexp_function
regexp_last_match_info
initial_regexp_string_iterator_prototype_map
script_context_table
serialized_objects
set_key_value_iterator_map
slow_aliased_arguments_map
slow_object_with_null_prototype_map
slow_object_with_object_prototype_map
slow_template_instantiations_cache
method_with_home_object_map
method_with_name_and_home_object_map
async_function_with_name_map
generator_function_map
generator_function_with_home_object_map
generator_function_with_name_and_home_object_map
async_generator_function_with_name_map
class_function_map
wasm_global_constructor
wasm_instance_constructor
wasm_memory_constructor
wasm_module_constructor
wasm_table_constructor
typed_array_function
uint32_array_fun
array_for_each_iterator
array_keys_iterator
array_values_iterator
error_function
map_get
map_has
map_set
function_has_instance
object_to_string
range_error_function
set_add
set_delete
wasm_compile_error_function
wasm_link_error_function
generator_next_internal
make_error
make_syntax_error
make_type_error
make_uri_error
object_define_property
object_is_frozen
object_keys
reflect_apply
reflect_construct
reflect_define_property
reflect_delete_property
math_floor
new_promise_capability
is_promise
system / JSArrayBufferData
parent_start_ <= start
end <= parent_end_
address < start || address >= end
%s %s
0123456789ABCDEF
Out of memory: HashMap::Initialize
 - source position table at %p
    %d --> line_number: %d inlining_id: %d
wasm 
(program)
(idle)
(garbage collector)
(unresolved function)
CodeEntry: at %p
 - name: %s
 - resource_name: %s
 - line_number: %d
 - column_number: %d
 - script_id: %d
 - position: %d
 - instruction_start: %p
 - deopt_reason: %s
 - bailout_reason: %s
 - deopt_id: %d
 - inline stacks:
    inlining_id: [%d]
     %s --> %d
 - inline stacks: (empty)
 - deopt inlined frames:
script_id: %d position: %zu
 - deopt inlined frames: (empty)
%5u %*s %s:%d %d %d #%d
 %s:%d
%*s;;; deopted at script_id: %d position: %zu with reason '%s'.
%*s;;;     Inline point: script_id %d position: %zu.
%*s bailed out due to '%s'
disabled-by-default-v8.cpu_profiler
Profile
cpuProfile
lines
ProfileChunk
[Top down]:
%p %5d %s
RegExp: 
rate_ > 0u
(GC)
(PARSER)
(COMPILER)
(BYTECODE_COMPILER)
(EXTERNAL)
(IDLE)
(JS)
(deopt)
<symbol>
%s%s
TickSample: at %p
 - state: %s
 - pc: %p
 - stack: (%u frames)
    %p
 - has_external_callback: %d
 - %s: %p
external_callback_entry
 - update_stats: %d
PARSER
BYTECODE_COMPILER
COMPILER
OTHER
EXTERNAL
disabled-by-default-v8.cpu_profiler.hires
result.IsJust() && result.FromJust()
const 
, dict_index: 
 field
 descriptor
, p: 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/regexp/jsregexp.cc:136
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/regexp/jsregexp.cc:314
Stack overflow
RegExp too big
end - start + items <= letter_length
(?: 
(<- 
IA32
ARM64
MIPS
S390
Bytecode
RegExpMacroAssembler%s();
 AbortedCodeGeneration
label[%08x]: (Bind)
 AdvanceCurrentPosition(by=%d);
 CheckGreedyLoop(label[%08x]);
 PopCurrentPosition();
 PushCurrentPosition();
 Backtrack();
 GoTo(label[%08x]);
 PushBacktrack(label[%08x]);
 Succeed();%s
 [restart for global match]
 Fail();
 PopRegister(register=%d);
 PushRegister(register=%d, %s);
check stack limit
 AdvanceRegister(register=%d, by=%d);
 SetCurrentPositionFromEnd(by=%d);
 SetRegister(register=%d, to=%d);
 WriteCurrentPositionToRegister(register=%d,cp_offset=%d);
 ClearRegister(from=%d, to=%d);
 ReadCurrentPositionFromRegister(register=%d);
 WriteStackPointerToRegister(register=%d);
 ReadStackPointerFromRegister(register=%d);
 (unchecked)
 LoadCurrentCharacter(cp_offset=%d, label[%08x]%s (%d chars));
 CheckCharacterLT(c=0x%04x%s, label[%08x]);
 CheckCharacterGT(c=0x%04x%s, label[%08x]);
 CheckCharacter(c=0x%04x%s, label[%08x]);
 CheckAtStart(label[%08x]);
 CheckNotAtStart(cp_offset=%d, label[%08x]);
 CheckNotCharacter(c=0x%04x%s, label[%08x]);
 CheckCharacterAfterAnd(c=0x%04x%s, mask=0x%04x, label[%08x]);
 CheckNotCharacterAfterAnd(c=0x%04x%s, mask=0x%04x, label[%08x]);
 CheckNotCharacterAfterMinusAnd(c=0x%04x, minus=%04x, mask=0x%04x, label[%08x]);
 CheckCharacterInRange(from=0x%04x%s, to=0x%04x%s, label[%08x]);
 CheckCharacterNotInRange(from=0x%04x%s, to=%04x%s, label[%08x]);
 CheckBitInTable(label[%08x] 
                                 
 CheckNotBackReference(register=%d, %s, label[%08x]);
backward
forward
 CheckNotBackReferenceIgnoreCase(register=%d, %s %s, label[%08x]);
non-unicode
 CheckPosition(cp_offset=%d, label[%08x]);
 CheckSpecialCharacterClass(type='%c', label[%08x]): %s;
 IfRegisterLT(register=%d, number=%d, label[%08x]);
 IfRegisterEqPos(register=%d, label[%08x]);
 IfRegisterGE(register=%d, number=%d, label[%08x]);
 GetCode(%s);
Regular expression too large
Unterminated group
Unmatched ')'
Nothing to repeat
\ at end of pattern
Invalid property name
Invalid escape
Invalid decimal escape
Invalid unicode escape
Invalid Unicode escape
Lone quantifier brackets
numbers out of order in {} quantifier
Incomplete quantifier
Invalid quantifier
Invalid group
Multiple dashes in flag group
Repeated flag in flag group
Invalid flag group
Too many captures
Invalid capture group name
Duplicate capture group name
Invalid named reference
Invalid named capture referenced
Emoji_Flag_Sequence
Emoji_Tag_Sequence
Emoji_ZWJ_Sequence
Emoji_Keycap_Sequence
Emoji_Modifier_Sequence
Invalid class escape
Invalid property name in character class
Unterminated character class
Invalid character class
Range out of order in character class
ASCII
Assigned
Unassigned
RegExp.prototype.exec
DEOPTIMIZATION PADDING
no reloc
embedded object
code target
relative code target
runtime entry
external reference
internal reference
encoded internal reference
off heap target
deopt script offset
deopt inlining id
deopt reason
deopt index
constant pool
veneer pool
internal wasm call
wasm stub call
unknown relocation type
)  (
 deoptimization bailout)
 (size 
free_space_map
one_pointer_filler_map
two_pointer_filler_map
uninitialized_value
undefined_value
the_hole_value
null_value
true_value
false_value
empty_string
meta_map
byte_array_map
fixed_array_map
fixed_cow_array_map
hash_table_map
symbol_map
one_byte_string_map
one_byte_internalized_string_map
scope_info_map
shared_function_info_map
code_map
function_context_map
cell_map
global_property_cell_map
foreign_map
heap_number_map
transition_array_map
feedback_vector_map
empty_scope_info
empty_fixed_array
empty_descriptor_array
arguments_marker
termination_exception
optimized_out
stale_register
native_context_map
module_context_map
eval_context_map
script_context_map
await_context_map
block_context_map
catch_context_map
with_context_map
debug_evaluate_context_map
script_context_table_map
closure_feedback_cell_array_map
feedback_metadata_map
array_list_map
bigint_map
object_boilerplate_description_map
bytecode_array_map
code_data_container_map
descriptor_array_map
fixed_double_array_map
global_dictionary_map
many_closures_cell_map
module_info_map
mutable_heap_number_map
name_dictionary_map
no_closures_cell_map
number_dictionary_map
one_closure_cell_map
ordered_hash_map_map
ordered_hash_set_map
ordered_name_dictionary_map
preparse_data_map
property_array_map
side_effect_call_handler_info_map
side_effect_free_call_handler_info_map
next_call_side_effect_free_call_handler_info_map
simple_number_dictionary_map
sloppy_arguments_elements_map
small_ordered_hash_map_map
small_ordered_hash_set_map
small_ordered_name_dictionary_map
string_table_map
uncompiled_data_without_preparse_data_map
uncompiled_data_with_preparse_data_map
weak_fixed_array_map
weak_array_list_map
ephemeron_hash_table_map
embedder_data_array_map
empty_string_map
native_source_string_map
string_map
cons_one_byte_string_map
cons_string_map
thin_one_byte_string_map
thin_string_map
sliced_string_map
sliced_one_byte_string_map
external_string_map
external_one_byte_string_map
uncached_external_string_map
internalized_string_map
external_internalized_string_map
external_one_byte_internalized_string_map
uncached_external_internalized_string_map
uncached_external_one_byte_internalized_string_map
uncached_external_one_byte_string_map
fixed_uint8_array_map
fixed_int8_array_map
fixed_uint16_array_map
fixed_int16_array_map
fixed_uint32_array_map
fixed_int32_array_map
fixed_float32_array_map
fixed_float64_array_map
fixed_uint8_clamped_array_map
fixed_biguint64_array_map
fixed_bigint64_array_map
undefined_map
the_hole_map
null_map
boolean_map
uninitialized_map
arguments_marker_map
exception_map
termination_exception_map
optimized_out_map
stale_register_map
self_reference_marker_map
empty_enum_cache
empty_property_array
empty_byte_array
empty_object_boilerplate_description
empty_array_boilerplate_description
empty_closure_feedback_cell_array
empty_fixed_uint8_array
empty_fixed_int8_array
empty_fixed_uint16_array
empty_fixed_int16_array
empty_fixed_uint32_array
empty_fixed_int32_array
empty_fixed_float32_array
empty_fixed_float64_array
empty_fixed_uint8_clamped_array
empty_fixed_biguint64_array
empty_fixed_bigint64_array
empty_sloppy_arguments_elements
empty_slow_element_dictionary
empty_ordered_hash_map
empty_ordered_hash_set
empty_feedback_metadata
empty_property_cell
empty_property_dictionary
noop_interceptor_info
empty_weak_fixed_array
empty_weak_array_list
nan_value
hole_nan_value
infinity_value
minus_zero_value
minus_infinity_value
off_heap_trampoline_relocation_info
adoptText_string
baseName_string
breakType_string
calendar_string
cardinal_string
caseFirst_string
compare_string
current_string
dateStyle_string
day_string
dayPeriod_string
decimal_string
era_string
first_string
format_string
fraction_string
full_string
granularity_string
grapheme_string
group_string
h11_string
h12_string
h23_string
h24_string
hour_string
hour12_string
hourCycle_string
collation_string
currency_string
currencyDisplay_string
ideo_string
ignorePunctuation_string
Invalid_Date_string
integer_string
kana_string
language_string
letter_string
list_string
literal_string
locale_string
loose_string
lower_string
maximumFractionDigits_string
maximumSignificantDigits_string
minimumFractionDigits_string
minimumIntegerDigits_string
minimumSignificantDigits_string
minusSign_string
minute_string
month_string
nan_string
none_string
normal_string
numberingSystem_string
numeric_string
ordinal_string
percentSign_string
plusSign_string
quarter_string
region_string
second_string
segment_string
SegmentIterator_string
sensitivity_string
sep_string
strict_string
style_string
term_string
timeStyle_string
timeZone_string
timeZoneName_string
upper_string
usage_string
useGrouping_string
UTC_string
unit_string
weekday_string
year_string
add_string
always_string
anonymous_function_string
anonymous_string
apply_string
Arguments_string
arguments_string
arguments_to_string
Array_string
array_to_string
ArrayBuffer_string
ArrayIterator_string
as_string
assign_string
async_string
auto_string
await_string
BigInt_string
bigint_string
BigInt64Array_string
BigUint64Array_string
bind_string
Boolean_string
boolean_string
boolean_to_string
bound__string
byte_length_string
byte_offset_string
CompileError_string
call_string
callee_string
caller_string
character_string
closure_string
column_string
computed_string
configurable_string
conjunction_string
construct_string
constructor_string
create_string
Date_string
date_to_string
default_string
defineProperty_string
deleteProperty_string
disjunction_string
display_name_string
done_string
dot_catch_string
dot_default_string
dot_for_string
dot_generator_object_string
dot_iterator_string
dot_promise_string
dot_result_string
dot_string
dot_switch_tag_string
dotAll_string
enumerable_string
element_string
Error_string
eval_string
EvalError_string
exec_string
false_string
Float32Array_string
Float64Array_string
from_string
Function_string
function_native_code_string
function_to_string
Generator_string
get_space_string
get_string
getOwnPropertyDescriptor_string
getOwnPropertyDescriptors_string
getPrototypeOf_string
global_string
globalThis_string
groups_string
has_string
ignoreCase_string
illegal_access_string
illegal_argument_string
index_string
Infinity_string
infinity_string
Int16Array_string
Int32Array_string
Int8Array_string
isExtensible_string
isView_string
keys_string
lastIndex_string
length_string
let_string
line_string
LinkError_string
long_string
Map_string
MapIterator_string
medium_string
meta_string
minus_Infinity_string
Module_string
multiline_string
NaN_string
narrow_string
native_string
new_target_string
next_string
NFC_string
NFD_string
NFKC_string
NFKD_string
not_equal
null_string
null_to_string
Number_string
number_string
number_to_string
Object_string
object_string
of_string
one_string
ownKeys_string
percent_string
position_string
preventExtensions_string
private_constructor_string
Promise_string
proto_string
prototype_string
proxy_string
Proxy_string
query_colon_string
RangeError_string
ReferenceError_string
ReflectGet_string
ReflectHas_string
RegExp_string
regexp_to_string
resolve_string
return_string
revoke_string
RuntimeError_string
Script_string
script_string
short_string
Set_string
sentence_string
set_space_string
set_string
SetIterator_string
setPrototypeOf_string
SharedArrayBuffer_string
sourceText_string
stackTraceLimit_string
sticky_string
String_string
string_string
string_to_string
symbol_species_string
Symbol_string
symbol_string
SyntaxError_string
then_string
this_function_string
this_string
throw_string
timed_out
toJSON_string
toString_string
true_string
TypeError_string
Uint16Array_string
Uint32Array_string
Uint8Array_string
Uint8ClampedArray_string
undefined_string
undefined_to_string
unicode_string
URIError_string
valueOf_string
values_string
WeakMap_string
WeakRef_string
WeakSet_string
week_string
word_string
zero_string
async_iterator_symbol
iterator_symbol
intl_fallback_symbol
match_all_symbol
match_symbol
replace_symbol
search_symbol
species_symbol
split_symbol
to_primitive_symbol
unscopables_symbol
has_instance_symbol
is_concat_spreadable_symbol
to_string_tag_symbol
access_check_info_map
accessor_info_map
accessor_pair_map
aliased_arguments_entry_map
allocation_memento_map
asm_wasm_data_map
async_generator_request_map
class_positions_map
debug_info_map
function_template_info_map
function_template_rare_data_map
interceptor_info_map
interpreter_data_map
module_info_entry_map
module_map
object_template_info_map
promise_capability_map
promise_reaction_map
prototype_info_map
script_map
stack_frame_info_map
stack_trace_frame_map
tuple2_map
tuple3_map
array_boilerplate_description_map
wasm_debug_info_map
wasm_exception_tag_map
wasm_exported_function_data_map
callable_task_map
callback_task_map
promise_fulfill_reaction_job_task_map
promise_reject_reaction_job_task_map
promise_resolve_thenable_job_task_map
finalization_group_cleanup_job_task_map
allocation_site_map
allocation_site_without_weaknext_map
load_handler1_map
load_handler2_map
load_handler3_map
store_handler0_map
store_handler1_map
store_handler2_map
store_handler3_map
arguments_iterator_accessor
array_length_accessor
bound_function_length_accessor
bound_function_name_accessor
error_stack_accessor
function_arguments_accessor
function_caller_accessor
function_name_accessor
function_length_accessor
function_prototype_accessor
string_length_accessor
external_map
message_object_map
empty_script
many_closures_cell
invalid_prototype_validity_cell
array_constructor_protector
no_elements_protector
is_concat_spreadable_protector
array_species_protector
typed_array_species_protector
regexp_species_protector
promise_species_protector
string_length_protector
array_iterator_protector
array_buffer_detaching_protector
promise_hook_protector
promise_resolve_protector
map_iterator_protector
promise_then_protector
set_iterator_protector
string_iterator_protector
single_character_string_cache
string_split_cache
regexp_multiple_cache
builtins_constants_table
number_string_cache
public_symbol_table
api_symbol_table
api_private_symbol_table
script_list
materialized_objects
detached_contexts
retaining_path_targets
retained_maps
feedback_vectors_for_profiling_tools
noscript_shared_function_infos
serialized_global_proxy_sizes
current_microtask
dirty_js_finalization_groups
weak_refs_keep_during_job
interpreter_entry_trampoline_for_profiling
pending_optimize_for_test_bytecode
string_table
real_stack_limit
last_script_id
last_debugging_id
next_template_serial_number
arguments_adaptor_deopt_pc_offset
construct_stub_create_deopt_pc_offset
construct_stub_invoke_deopt_pc_offset
interpreter_entry_return_pc_offset
do not optimize
hot and stable
small function
[OSR - arming back edges in 
[function 
 is already in optimization queue]
[not yet optimizing 
, not enough ticks: %d/%d and 
ICs changed]
 too large for small function optimization: %d/%d]
V8.MarkCandidatesForOptimization
[marking 
 for %s recompilation, reason: %s
V8.Runtime_Runtime_TransitionElementsKind
args[1]->IsMap()
V8.Runtime_Runtime_TransitionElementsKindWithKind
args[1]->IsSmi()
V8.Runtime_Runtime_PrepareElementsForSort
V8.Runtime_Runtime_EstimateNumberOfElements
args[0]->IsJSArray()
V8.Runtime_Runtime_GetArrayKeys
V8.Runtime_Runtime_TrySliceSimpleNonFastElements
args[2]->IsSmi()
V8.Runtime_Runtime_NewArray
args[0]->IsJSFunction()
args[argc + 1]->IsJSReceiver()
args[argc + 2]->IsHeapObject()
V8.Runtime_Runtime_NormalizeElements
!array->HasFixedTypedArrayElements()
!array->IsJSGlobalProxy()
V8.Runtime_Runtime_GrowArrayElements
V8.Runtime_Runtime_HasComplexElements
V8.Runtime_Runtime_ArrayIsArray
V8.Runtime_Runtime_IsArray
V8.Runtime_Runtime_ArraySpeciesConstructor
V8.Runtime_Runtime_ArrayIncludes_Slow
V8.Runtime_Runtime_ArrayIndexOf
Array.prototype.indexOf
V8.Runtime_Runtime_AtomicsLoad64
V8.Runtime_Runtime_AtomicsStore64
V8.Runtime_Runtime_AtomicsExchange
V8.Runtime_Runtime_AtomicsCompareExchange
V8.Runtime_Runtime_AtomicsAdd
V8.Runtime_Runtime_AtomicsSub
V8.Runtime_Runtime_AtomicsAnd
V8.Runtime_Runtime_AtomicsOr
V8.Runtime_Runtime_AtomicsXor
V8.Runtime_Runtime_BigIntCompareToBigInt
args[1]->IsBigInt()
args[2]->IsBigInt()
V8.Runtime_Runtime_BigIntCompareToNumber
V8.Runtime_Runtime_BigIntCompareToString
V8.Runtime_Runtime_BigIntEqualToBigInt
args[0]->IsBigInt()
V8.Runtime_Runtime_BigIntEqualToNumber
V8.Runtime_Runtime_BigIntEqualToString
V8.Runtime_Runtime_BigIntToBoolean
V8.Runtime_Runtime_BigIntToNumber
V8.Runtime_Runtime_ToBigInt
V8.Runtime_Runtime_BigIntBinaryOp
V8.Runtime_Runtime_BigIntUnaryOp
V8.Runtime_Runtime_ThrowUnsupportedSuperError
V8.Runtime_Runtime_ThrowConstructorNonCallableError
V8.Runtime_Runtime_ThrowStaticPrototypeError
V8.Runtime_Runtime_ThrowSuperAlreadyCalledError
V8.Runtime_Runtime_ThrowSuperNotCalled
V8.Runtime_Runtime_ThrowNotSuperConstructor
args[1]->IsJSFunction()
V8.Runtime_Runtime_HomeObjectSymbol
V8.Runtime_Runtime_DefineClass
args[0]->IsClassBoilerplate()
init class constructor
init class prototype
*dict == *properties_dictionary
method->map()->instance_descriptors()->GetKey(kPropertyIndex) == ReadOnlyRoots(isolate).home_object_symbol()
V8.Runtime_Runtime_LoadFromSuper
args[2]->IsName()
V8.Runtime_Runtime_LoadKeyedFromSuper
V8.Runtime_Runtime_StoreToSuper
V8.Runtime_Runtime_StoreKeyedToSuper
V8.Runtime_Runtime_TheHole
V8.Runtime_Runtime_SetGrow
args[0]->IsJSSet()
V8.Runtime_Runtime_SetShrink
V8.Runtime_Runtime_MapShrink
args[0]->IsJSMap()
V8.Runtime_Runtime_MapGrow
V8.Runtime_Runtime_WeakCollectionDelete
args[0]->IsJSWeakCollection()
V8.Runtime_Runtime_WeakCollectionSet
args[3]->IsSmi()
V8.Runtime_Runtime_CompileLazy
V8.Runtime_Runtime_CompileOptimized_Concurrent
V8.Runtime_Runtime_FunctionFirstExecution
first-execution
V8.Runtime_Runtime_CompileOptimized_NotConcurrent
V8.Runtime_Runtime_EvictOptimizedCodeSlot
Runtime_EvictOptimizedCodeSlot
V8.Runtime_Runtime_InstantiateAsmJs
V8.Runtime_Runtime_NotifyDeoptimized
V8.Runtime_Runtime_CompileForOnStackReplacement
FLAG_use_osr
[OSR - Compiling: 
 at AST id %d]
[OSR - Entry at AST id %d, offset %d in optimized code]
[OSR - Re-marking 
[OSR - Failed: 
V8.Runtime_Runtime_ResolvePossiblyDirectEval
V8.Runtime_Runtime_DateCurrentTime
[[TargetFunction]]
[[BoundThis]]
[[BoundArgs]]
suspended
closed
running
[[GeneratorStatus]]
[[GeneratorFunction]]
[[GeneratorReceiver]]
[[PromiseStatus]]
[[PromiseValue]]
[[Handler]]
[[Target]]
[[IsRevoked]]
[[PrimitiveValue]]
V8.Runtime_Runtime_DebugBreakOnBytecode
V8.Runtime_Runtime_DebugBreakAtEntry
V8.Runtime_Runtime_HandleDebuggerStatement
V8.Runtime_Runtime_ScheduleBreak
V8.Runtime_Runtime_GetGeneratorScopeCount
args[0]->IsJSGeneratorObject()
V8.Runtime_Runtime_GetGeneratorScopeDetails
V8.Runtime_Runtime_SetGeneratorScopeVariableValue
V8.Runtime_Runtime_GetBreakLocations
isolate->debug()->is_active()
V8.Runtime_Runtime_IsBreakOnException
V8.Runtime_Runtime_ClearStepping
V8.Runtime_Runtime_DebugGetLoadedScriptIds
V8.Runtime_Runtime_FunctionGetInferredName
V8.Runtime_Runtime_CollectGarbage
V8.Runtime_Runtime_GetHeapUsage
V8.Runtime_Runtime_ScriptLocationFromLine2
GetScriptById(isolate, scriptid, &script)
opt_line->IsNumber()
opt_column->IsNumber()
V8.Runtime_Runtime_DebugOnFunctionCall
V8.Runtime_Runtime_DebugPrepareStepInSuspendedGenerator
V8.Runtime_Runtime_DebugPushPromise
V8.Runtime_Runtime_DebugPopPromise
V8.Runtime_Runtime_DebugCollectCoverage
V8.Runtime_Runtime_DebugTogglePreciseCoverage
V8.Runtime_Runtime_DebugToggleBlockCoverage
V8.Runtime_Runtime_IncBlockCounter
V8.Runtime_Runtime_DebugAsyncFunctionEntered
args[0]->IsJSPromise()
V8.Runtime_Runtime_DebugAsyncFunctionFinished
args[1]->IsJSPromise()
V8.Runtime_Runtime_DebugAsyncFunctionSuspended
V8.Runtime_Runtime_LiveEditPatchScript
LiveEdit failed: COMPILE_ERROR
LiveEdit failed: BLOCKED_BY_RUNNING_GENERATOR
LiveEdit failed: BLOCKED_BY_FUNCTION_ABOVE_BREAK_FRAME
LiveEdit failed: BLOCKED_BY_FUNCTION_BELOW_NON_DROPPABLE_FRAME
LiveEdit failed: BLOCKED_BY_ACTIVE_FUNCTION
LiveEdit failed: BLOCKED_BY_NEW_TARGET_IN_RESTART_FRAME
LiveEdit failed: FRAME_RESTART_IS_NOT_SUPPORTED
V8.Runtime_Runtime_PerformSideEffectCheckForObject
[[IteratorHasMore]]
[[IteratorIndex]]
[[IteratorKind]]
V8.Runtime_Runtime_ForInEnumerate
V8.Runtime_Runtime_ForInHasProperty
V8.Runtime_Runtime_FunctionGetScriptSource
V8.Runtime_Runtime_FunctionGetScriptId
V8.Runtime_Runtime_FunctionGetSourceCode
V8.Runtime_Runtime_FunctionGetScriptSourcePosition
V8.Runtime_Runtime_FunctionIsAPIFunction
V8.Runtime_Runtime_Call
V8.Runtime_Runtime_IsFunction
V8.Runtime_Runtime_AtomicsNumWaitersForTesting
args[0]->IsJSTypedArray()
TryNumberToSize(*index_object, &index)
!sta->WasDetached()
sta->GetBuffer()->is_shared()
index < sta->length()
sta->type() == kExternalInt32Array
V8.Runtime_Runtime_SetAllowAtomicsWait
V8.Runtime_Runtime_AsyncFunctionAwaitCaught
V8.Runtime_Runtime_AsyncFunctionAwaitUncaught
V8.Runtime_Runtime_AsyncFunctionEnter
V8.Runtime_Runtime_AsyncFunctionReject
V8.Runtime_Runtime_AsyncFunctionResolve
V8.Runtime_Runtime_CreateJSGeneratorObject
IsAsyncFunction(function->shared()->kind()) implies IsAsyncGeneratorFunction(function->shared()->kind())
IsResumableFunction(function->shared()->kind())
V8.Runtime_Runtime_GeneratorClose
V8.Runtime_Runtime_GeneratorGetFunction
V8.Runtime_Runtime_AsyncGeneratorAwaitCaught
V8.Runtime_Runtime_AsyncGeneratorAwaitUncaught
V8.Runtime_Runtime_AsyncGeneratorResolve
V8.Runtime_Runtime_AsyncGeneratorReject
V8.Runtime_Runtime_AsyncGeneratorYield
V8.Runtime_Runtime_GeneratorGetResumeMode
V8.Runtime_Runtime_AsyncGeneratorHasCatchHandlerForPC
args[0]->IsJSAsyncGeneratorObject()
V8.Runtime_Runtime_AccessCheck
V8.Runtime_Runtime_CheckIsBootstrapping
isolate->bootstrapper()->IsActive()
V8.Runtime_Runtime_FatalProcessOutOfMemoryInAllocateRaw
CodeStubAssembler::AllocateRaw
V8.Runtime_Runtime_FatalProcessOutOfMemoryInvalidArrayLength
V8.Runtime_Runtime_Throw
V8.Runtime_Runtime_ReThrow
V8.Runtime_Runtime_ThrowStackOverflow
V8.Runtime_Runtime_ThrowSymbolAsyncIteratorInvalid
V8.Runtime_Runtime_ThrowRangeError
V8.Runtime_Runtime_ThrowTypeError
V8.Runtime_Runtime_ThrowTypeErrorIfStrict
V8.Runtime_Runtime_ThrowInvalidTypedArrayAlignment
V8.Runtime_Runtime_UnwindAndFindExceptionHandler
V8.Runtime_Runtime_PromoteScheduledException
V8.Runtime_Runtime_ThrowReferenceError
V8.Runtime_Runtime_ThrowAccessedUninitializedVariable
V8.Runtime_Runtime_NewTypeError
args[0]->ToInt32(&template_index)
V8.Runtime_Runtime_NewReferenceError
V8.Runtime_Runtime_NewSyntaxError
V8.Runtime_Runtime_ThrowInvalidStringLength
V8.Runtime_Runtime_ThrowIteratorResultNotAnObject
V8.Runtime_Runtime_ThrowThrowMethodMissing
V8.Runtime_Runtime_ThrowSymbolIteratorInvalid
V8.Runtime_Runtime_ThrowNotConstructor
V8.Runtime_Runtime_ThrowApplyNonFunction
V8.Runtime_Runtime_StackGuard
V8.StackGuard
V8.Runtime_Runtime_BytecodeBudgetInterrupt
V8.Runtime_Runtime_Interrupt
V8.Interrupt
V8.Runtime_Runtime_AllocateInYoungGeneration
IsAligned(size, kTaggedSize)
size > 0
FLAG_young_generation_large_objects || size <= kMaxRegularHeapObjectSize
V8.Runtime_Runtime_AllocateInOldGeneration
V8.Runtime_Runtime_AllocateSeqOneByteString
V8.Runtime_Runtime_AllocateSeqTwoByteString
V8.Runtime_Runtime_ThrowIteratorError
V8.Runtime_Runtime_ThrowCalledNonCallable
V8.Runtime_Runtime_ThrowConstructedNonConstructable
V8.Runtime_Runtime_ThrowPatternAssignmentNonCoercible
V8.Runtime_Runtime_ThrowConstructorReturnedNonObject
V8.Runtime_Runtime_CreateListFromArrayLike
V8.Runtime_Runtime_IncrementUseCounter
V8.Runtime_Runtime_GetAndResetRuntimeCallStats
V8.Runtime_Runtime_OrdinaryHasInstance
V8.Runtime_Runtime_Typeof
V8.Runtime_Runtime_AllowDynamicFunction
V8.Runtime_Runtime_CreateAsyncFromSyncIterator
V8.Runtime_Runtime_GetTemplateObject
args[0]->IsTemplateObjectDescription()
args[1]->IsSharedFunctionInfo()
V8.Runtime_Runtime_ReportMessage
V8.Runtime_Runtime_GetInitializerFunction
V8.Runtime_Runtime_FormatList
args[0]->IsJSListFormat()
args[1]->IsJSArray()
V8.Runtime_Runtime_FormatListToParts
V8.Runtime_Runtime_StringToLowerCaseIntl
V8.Runtime_Runtime_StringToUpperCaseIntl
V8.Runtime_Runtime_CreateObjectLiteral
args[2]->IsObjectBoilerplateDescription()
literals_slot.ToInt() < vector->length()
FastLiteral
*** Creating top level %s AllocationSite %p
*** Creating nested %s AllocationSite (top, current, new) (%p, %p, %p)
Slim
*** Setting AllocationSite %p transition_info %p
*** Setting AllocationSite (%p, %p) transition_info %p
*** Creating Memento for %s %p
JSArray
JSObject
V8.Runtime_Runtime_CreateObjectLiteralWithoutAllocationSite
args[0]->IsObjectBoilerplateDescription()
V8.Runtime_Runtime_CreateArrayLiteralWithoutAllocationSite
args[0]->IsArrayBoilerplateDescription()
V8.Runtime_Runtime_CreateArrayLiteral
args[2]->IsArrayBoilerplateDescription()
V8.Runtime_Runtime_CreateRegExpLiteral
V8.Runtime_Runtime_DynamicImportCall
V8.Runtime_Runtime_GetModuleNamespace
V8.Runtime_Runtime_GetImportMetaObject
V8.Runtime_Runtime_IsValidSmi
V8.Runtime_Runtime_StringToNumber
V8.Runtime_Runtime_StringParseInt
V8.Runtime_Runtime_StringParseFloat
V8.Runtime_Runtime_NumberToString
V8.Runtime_Runtime_SmiLexicographicCompare
V8.Runtime_Runtime_MaxSmi
V8.Runtime_Runtime_IsSmi
V8.Runtime_Runtime_GetHoleNaNUpper
V8.Runtime_Runtime_GetHoleNaNLower
V8.Runtime_Runtime_ObjectKeys
V8.Runtime_Runtime_ObjectGetOwnPropertyNames
V8.Runtime_Runtime_ObjectGetOwnPropertyNamesTryFast
V8.Runtime_Runtime_ObjectHasOwnProperty
V8.Runtime_Runtime_AddDictionaryProperty
V8.Runtime_Runtime_ObjectCreate
V8.Runtime_Runtime_InternalSetPrototype
V8.Runtime_Runtime_OptimizeObjectForAddingMultipleProperties
OptimizeForAdding
V8.Runtime_Runtime_ObjectValues
V8.Runtime_Runtime_ObjectValuesSkipFastPath
V8.Runtime_Runtime_ObjectEntries
V8.Runtime_Runtime_ObjectEntriesSkipFastPath
V8.Runtime_Runtime_GetProperty
V8.Runtime_Runtime_SetKeyedProperty
V8.Runtime_Runtime_SetNamedProperty
V8.Runtime_Runtime_StoreDataPropertyInLiteral
V8.Runtime_Runtime_DeleteProperty
V8.Runtime_Runtime_ShrinkPropertyDictionary
V8.Runtime_Runtime_HasProperty
V8.Runtime_Runtime_GetOwnPropertyKeys
V8.Runtime_Runtime_ToFastProperties
RuntimeToFastProperties
V8.Runtime_Runtime_AllocateHeapNumber
V8.Runtime_Runtime_NewObject
args[1]->IsJSReceiver()
V8.Runtime_Runtime_CompleteInobjectSlackTrackingForMap
V8.Runtime_Runtime_TryMigrateInstance
V8.Runtime_Runtime_DefineAccessorPropertyUnchecked
!obj->IsNull(isolate)
args[1]->IsName()
IsValidAccessor(isolate, getter)
IsValidAccessor(isolate, setter)
args[4]->IsSmi()
args.smi_at(4) & ~(READ_ONLY | DONT_ENUM | DONT_DELETE) == 0
V8.Runtime_Runtime_DefineDataPropertyInLiteral
args[4]->IsHeapObject()
args[5]->IsSmi()
!IsClassConstructor(function->shared()->kind()) implies *function_map == function->map()
JSObject::DefineOwnPropertyIgnoreAttributes(&it, value, attrs, Just(kDontThrow)) .IsJust()
V8.Runtime_Runtime_CollectTypeProfile
args[2]->IsFeedbackVector()
V8.Runtime_Runtime_HasFastPackedElements
V8.Runtime_Runtime_IsJSReceiver
V8.Runtime_Runtime_ClassOf
V8.Runtime_Runtime_GetFunctionName
V8.Runtime_Runtime_DefineGetterPropertyUnchecked
args[2]->IsJSFunction()
args.smi_at(3) & ~(READ_ONLY | DONT_ENUM | DONT_DELETE) == 0
*getter_map == getter->map()
V8.Runtime_Runtime_SetDataProperties
V8.Runtime_Runtime_CopyDataProperties
V8.Runtime_Runtime_CopyDataPropertiesWithExcludedProperties
V8.Runtime_Runtime_DefineSetterPropertyUnchecked
*setter_map == setter->map()
V8.Runtime_Runtime_ToObject
V8.Runtime_Runtime_ToNumber
V8.Runtime_Runtime_ToNumeric
V8.Runtime_Runtime_ToLength
V8.Runtime_Runtime_ToString
V8.Runtime_Runtime_ToName
V8.Runtime_Runtime_HasInPrototypeChain
V8.Runtime_Runtime_CreateIterResultObject
V8.Runtime_Runtime_CreateDataProperty
V8.Runtime_Runtime_GetOwnPropertyDescriptor
V8.Runtime_Runtime_AddPrivateField
args[1]->IsSymbol()
Object::AddDataProperty(&it, value, NONE, Just(kDontThrow), StoreOrigin::kMaybeKeyed) .FromJust()
V8.Runtime_Runtime_Add
V8.Runtime_Runtime_Equal
V8.Runtime_Runtime_NotEqual
V8.Runtime_Runtime_StrictEqual
V8.Runtime_Runtime_StrictNotEqual
V8.Runtime_Runtime_LessThan
V8.Runtime_Runtime_GreaterThan
V8.Runtime_Runtime_LessThanOrEqual
V8.Runtime_Runtime_GreaterThanOrEqual
V8.Runtime_Runtime_PromiseRejectEventFromStack
V8.Runtime_Runtime_PromiseRejectAfterResolved
V8.Runtime_Runtime_PromiseResolveAfterResolved
V8.Runtime_Runtime_PromiseRevokeReject
!promise->has_handler()
V8.Runtime_Runtime_EnqueueMicrotask
V8.Runtime_Runtime_PerformMicrotaskCheckpoint
V8.Runtime_Runtime_RunMicrotaskCallback
V8.Runtime_Runtime_PromiseStatus
V8.Runtime_Runtime_PromiseMarkAsHandled
V8.Runtime_Runtime_PromiseHookInit
V8.Runtime_Runtime_AwaitPromisesInit
args[2]->IsJSPromise()
args[3]->IsJSFunction()
V8.Runtime_Runtime_AwaitPromisesInitOld
V8.Runtime_Runtime_PromiseHookBefore
V8.Runtime_Runtime_PromiseHookAfter
V8.Runtime_Runtime_RejectPromise
args[2]->IsOddball()
V8.Runtime_Runtime_ResolvePromise
V8.Runtime_Runtime_IsJSProxy
V8.Runtime_Runtime_JSProxyGetHandler
args[0]->IsJSProxy()
V8.Runtime_Runtime_JSProxyGetTarget
V8.Runtime_Runtime_GetPropertyWithReceiver
V8.Runtime_Runtime_SetPropertyWithReceiver
V8.Runtime_Runtime_CheckProxyGetSetTrapResult
args[0]->IsName()
V8.Runtime_Runtime_CheckProxyHasTrap
V8.Runtime_Runtime_StringSplit
0 < limit
0 < pattern_length
V8.Runtime_Runtime_RegExpExec
args[0]->IsJSRegExp()
args[2]->ToInt32(&index)
args[3]->IsRegExpMatchInfo()
0 <= index
subject->length() >= index
V8.Runtime_Runtime_RegExpExecMultiple
args[2]->IsRegExpMatchInfo()
args[3]->IsJSArray()
result_array->HasObjectElements()
regexp->GetFlags() & JSRegExp::kGlobal
V8.Runtime_Runtime_StringReplaceNonGlobalRegExpWithFunction
args[1]->IsJSRegExp()
args[2]->IsJSReceiver()
V8.Runtime_Runtime_RegExpSplit
V8.Runtime_Runtime_RegExpReplaceRT
!functional_replace
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/runtime/runtime-regexp.cc:1741
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/runtime/runtime-regexp.cc:624
V8.Runtime_Runtime_RegExpInitializeAndCompile
V8.Runtime_Runtime_IsRegExp
V8.Runtime_Runtime_ThrowConstAssignError
V8.Runtime_Runtime_DeclareGlobals
args[0]->IsFixedArray()
V8.Runtime_Runtime_DeclareEvalFunction
V8.Runtime_Runtime_DeclareEvalVar
V8.Runtime_Runtime_NewSloppyArguments_Generic
!IsDerivedConstructor(callee->shared()->kind())
V8.Runtime_Runtime_NewStrictArguments
V8.Runtime_Runtime_NewRestParameter
V8.Runtime_Runtime_NewSloppyArguments
V8.Runtime_Runtime_NewArgumentsElements
V8.Runtime_Runtime_NewClosure
args[0]->IsSharedFunctionInfo()
args[1]->IsFeedbackCell()
V8.Runtime_Runtime_NewClosure_Tenured
V8.Runtime_Runtime_NewScriptContext
args[0]->IsScopeInfo()
V8.Runtime_Runtime_NewFunctionContext
V8.Runtime_Runtime_PushWithContext
args[1]->IsScopeInfo()
V8.Runtime_Runtime_PushModuleContext
args[0]->IsModule()
V8.Runtime_Runtime_PushCatchContext
V8.Runtime_Runtime_PushBlockContext
V8.Runtime_Runtime_DeleteLookupSlot
V8.Runtime_Runtime_LoadLookupSlot
V8.Runtime_Runtime_LoadLookupSlotInsideTypeof
V8.Runtime_Runtime_LoadLookupSlotForCall
V8.Runtime_Runtime_StoreLookupSlot_Sloppy
V8.Runtime_Runtime_StoreLookupSlot_Strict
V8.Runtime_Runtime_StoreLookupSlot_SloppyHoisting
V8.Runtime_Runtime_GetSubstitution
V8.Runtime_Runtime_StringReplaceOneCharWithString
V8.Runtime_Runtime_StringTrim
V8.Runtime_Runtime_StringIncludes
String.prototype.includes
V8.Runtime_Runtime_StringIndexOf
V8.Runtime_Runtime_StringIndexOfUnchecked
V8.Runtime_Runtime_StringLastIndexOf
V8.Runtime_Runtime_StringSubstring
args[1]->ToInt32(&start)
args[2]->ToInt32(&end)
V8.Runtime_Runtime_StringAdd
V8.Runtime_Runtime_InternalizeString
V8.Runtime_Runtime_StringCharCodeAt
V8.Runtime_Runtime_StringBuilderConcat
TryNumberToSize(array->length(), &actual_array_length)
array_length >= 0
static_cast<size_t>(array_length) <= actual_array_length
array->HasFastElements()
V8.Runtime_Runtime_StringToArray
V8.Runtime_Runtime_StringLessThan
V8.Runtime_Runtime_StringLessThanOrEqual
V8.Runtime_Runtime_StringGreaterThan
V8.Runtime_Runtime_StringGreaterThanOrEqual
V8.Runtime_Runtime_StringEqual
V8.Runtime_Runtime_FlattenString
V8.Runtime_Runtime_StringMaxLength
V8.Runtime_Runtime_StringCompareSequence
V8.Runtime_Runtime_StringEscapeQuotes
&quot;
V8.Runtime_Runtime_CreatePrivateSymbol
name->IsString() || name->IsUndefined(isolate)
V8.Runtime_Runtime_CreatePrivateNameSymbol
V8.Runtime_Runtime_SymbolDescriptiveString
args[0]->IsSymbol()
V8.Runtime_Runtime_SymbolIsPrivate
V8.Runtime_Runtime_ClearMegamorphicStubCache
V8.Runtime_Runtime_ConstructDouble
Check failed: %s.
args[0]->IsNumber()
args[1]->IsNumber()
V8.Runtime_Runtime_ConstructConsString
left->IsOneByteRepresentation()
right->IsOneByteRepresentation()
V8.Runtime_Runtime_ConstructSlicedString
string->IsOneByteRepresentation()
index->value() < string->length()
sliced_string->IsSlicedString()
V8.Runtime_Runtime_DeoptimizeFunction
V8.Runtime_Runtime_DeoptimizeNow
V8.Runtime_Runtime_RunningInSimulator
V8.Runtime_Runtime_ICsAreEnabled
V8.Runtime_Runtime_IsConcurrentRecompilationSupported
V8.Runtime_Runtime_OptimizeFunctionOnNextCall
concurrent
[manually marking 
 for %s optimization]
non-concurrent
V8.Runtime_Runtime_EnsureFeedbackVectorForFunction
V8.Runtime_Runtime_PrepareFunctionForOptimization
V8.Runtime_Runtime_OptimizeOsr
[OSR - OptimizeOsr marking 
 for non-concurrent optimization]
V8.Runtime_Runtime_NeverOptimizeFunction
V8.Runtime_Runtime_GetOptimizationStatus
no sync
V8.Runtime_Runtime_UnblockConcurrentRecompilation
V8.Runtime_Runtime_GetDeoptCount
V8.Runtime_Runtime_GetUndetectable
V8.Runtime_Runtime_GetCallable
V8.Runtime_Runtime_ClearFunctionFeedback
V8.Runtime_Runtime_SetWasmCompileControls
args.length() == 2
args[0]->IsSmi()
Sync compile not allowed
V8.Runtime_Runtime_SetWasmInstantiateControls
args.length() == 0
Sync instantiate not allowed
V8.Runtime_Runtime_NotifyContextDisposed
V8.Runtime_Runtime_SetAllocationTimeout
V8.Runtime_Runtime_DebugPrint
[weak cleared]
V8.Runtime_Runtime_PrintWithNameForAssert
V8.Runtime_Runtime_DebugTrace
V8.Runtime_Runtime_DebugTrackRetainingPath
DebugTrackRetainingPath requires --track-retaining-path flag.
args[0]->IsHeapObject()
track-ephemeron-path
Unexpected second argument of DebugTrackRetainingPath.
Expected an empty string or '%s', got '%s'.
V8.Runtime_Runtime_GlobalPrint
V8.Runtime_Runtime_SystemBreak
V8.Runtime_Runtime_SetForceSlowPath
V8.Runtime_Runtime_Abort
V8.Runtime_Runtime_AbortJS
[disabled] abort: %s
V8.Runtime_Runtime_DisassembleFunction
V8.Runtime_Runtime_TraceEnter
%4d:%*s
V8.Runtime_Runtime_TraceExit
} -> 
V8.Runtime_Runtime_HaveSameMap
args[0]->IsJSObject()
args[1]->IsJSObject()
V8.Runtime_Runtime_InNewSpace
V8.Runtime_Runtime_IsAsmWasmCode
V8.Runtime_Runtime_DisallowCodegenFromStrings
V8.Runtime_Runtime_DisallowWasmCodegen
V8.Runtime_Runtime_IsWasmCode
V8.Runtime_Runtime_IsWasmTrapHandlerEnabled
V8.Runtime_Runtime_IsThreadInWasm
V8.Runtime_Runtime_GetWasmRecoveredTrapCount
V8.Runtime_Runtime_GetWasmExceptionId
args[0]->IsJSReceiver()
args[1]->IsWasmInstanceObject()
V8.Runtime_Runtime_GetWasmExceptionValues
values_obj->IsFixedArray()
V8.Runtime_Runtime_SetWasmThreadsEnabled
V8.Runtime_Runtime_HasFastElements
V8.Runtime_Runtime_HasSmiElements
V8.Runtime_Runtime_HasObjectElements
V8.Runtime_Runtime_HasSmiOrObjectElements
V8.Runtime_Runtime_HasDoubleElements
V8.Runtime_Runtime_HasHoleyElements
V8.Runtime_Runtime_HasDictionaryElements
V8.Runtime_Runtime_HasPackedElements
V8.Runtime_Runtime_HasSloppyArgumentsElements
V8.Runtime_Runtime_HasFastProperties
V8.Runtime_Runtime_HasFixedUint8Elements
V8.Runtime_Runtime_HasFixedInt8Elements
V8.Runtime_Runtime_HasFixedUint16Elements
V8.Runtime_Runtime_HasFixedInt16Elements
V8.Runtime_Runtime_HasFixedUint32Elements
V8.Runtime_Runtime_HasFixedInt32Elements
V8.Runtime_Runtime_HasFixedFloat32Elements
V8.Runtime_Runtime_HasFixedFloat64Elements
V8.Runtime_Runtime_HasFixedUint8ClampedElements
V8.Runtime_Runtime_HasFixedBigUint64Elements
V8.Runtime_Runtime_HasFixedBigInt64Elements
V8.Runtime_Runtime_ArraySpeciesProtector
V8.Runtime_Runtime_MapIteratorProtector
V8.Runtime_Runtime_SetIteratorProtector
V8.Runtime_Runtime_StringIteratorProtector
V8.Runtime_Runtime_SerializeWasmModule
args[0]->IsWasmModuleObject()
V8.Runtime_Runtime_DeserializeWasmModule
args[0]->IsJSArrayBuffer()
args[1]->IsJSTypedArray()
!buffer->was_detached()
!wire_bytes->WasDetached()
V8.Runtime_Runtime_HeapObjectVerify
HeapObject::cast(*object)->map()->IsMap()
V8.Runtime_Runtime_WasmGetNumberOfInstances
V8.Runtime_Runtime_WasmNumInterpretedCalls
args[0]->IsWasmInstanceObject()
V8.Runtime_Runtime_RedirectToWasmInterpreter
V8.Runtime_Runtime_WasmTraceMemory
V8.Runtime_Runtime_WasmTierUpFunction
!native_module->compilation_state()->failed()
V8.Runtime_Runtime_IsLiftoffFunction
WasmExportedFunction::IsWasmExportedFunction(*function)
V8.Runtime_Runtime_CompleteInobjectSlackTracking
V8.Runtime_Runtime_FreezeWasmLazyCompilation
V8.Runtime_Runtime_WasmMemoryHasFullGuardRegion
args[0]->IsWasmMemoryObject()
V8.Runtime_Runtime_ArrayBufferDetach
0 == array_buffer->byte_length()
!array_buffer->is_shared()
V8.Runtime_Runtime_TypedArrayCopyElements
TryNumberToSize(*length_obj, &length)
V8.Runtime_Runtime_ArrayBufferViewWasDetached
V8.Runtime_Runtime_TypedArrayGetBuffer
V8.Runtime_Runtime_TypedArraySortFast
%TypedArray%.prototype.sort
V8.Runtime_Runtime_IsTypedArray
V8.Runtime_Runtime_TypedArraySet
DoubleToUint32IfEqualToSelf(len->Number(), &int_l)
V8.Runtime_Runtime_WasmIsValidAnyFuncValue
V8.Runtime_Runtime_WasmMemoryGrow
args[1]->ToUint32(&delta_pages)
V8.Runtime_Runtime_ThrowWasmError
V8.Runtime_Runtime_ThrowWasmStackOverflow
V8.Runtime_Runtime_WasmThrowTypeError
V8.Runtime_Runtime_WasmThrowCreate
args[0]->IsWasmExceptionTag()
!Object::SetProperty(isolate, exception, isolate->factory()->wasm_exception_tag_symbol(), tag, StoreOrigin::kMaybeKeyed, Just(ShouldThrow::kThrowOnError)) .is_null()
!Object::SetProperty(isolate, exception, isolate->factory()->wasm_exception_values_symbol(), values, StoreOrigin::kMaybeKeyed, Just(ShouldThrow::kThrowOnError)) .is_null()
V8.Runtime_Runtime_WasmExceptionGetTag
V8.Runtime_Runtime_WasmExceptionGetValues
V8.Runtime_Runtime_WasmRunInterpreter
!arg_buffer_obj->IsHeapObject()
V8.Runtime_Runtime_WasmStackGuard
V8.Runtime_Runtime_WasmCompileLazy
V8.Runtime_Runtime_WasmAtomicNotify
V8.Runtime_Runtime_WasmI32AtomicWait
V8.Runtime_Runtime_WasmI64AtomicWait
V8.Runtime_Runtime_WasmFunctionTableGet
args[1]->ToUint32(&table_index)
args[2]->ToUint32(&entry_index)
V8.Runtime_Runtime_WasmFunctionTableSet
V8.Runtime_Runtime_WasmIndirectCallCheckSignatureAndGetTargetInstance
args[0]->ToUint32(&table_index)
args[1]->ToUint32(&entry_index)
args[2]->ToUint32(&sig_index)
is_valid
V8.Runtime_Runtime_WasmIndirectCallGetTargetAddress
!is_null
HAS_SMI_TAG(call_target)
V8.Runtime_Runtime_WasmTableInit
args[1]->ToUint32(&elem_segment_index)
args[2]->ToUint32(&dst)
args[3]->ToUint32(&src)
args[4]->ToUint32(&count)
V8.Runtime_Runtime_WasmTableCopy
args[0]->ToUint32(&table_src_index)
args[1]->ToUint32(&table_dst_index)
V8.Runtime_Runtime_FinalizationGroupCleanupJob
args[0]->IsJSFinalizationGroup()
_IsArray
_Call
_AsyncFunctionAwaitCaught
_AsyncFunctionAwaitUncaught
_AsyncFunctionEnter
_AsyncFunctionReject
_AsyncFunctionResolve
_AsyncGeneratorAwaitCaught
_AsyncGeneratorAwaitUncaught
_AsyncGeneratorReject
_AsyncGeneratorResolve
_AsyncGeneratorYield
_CreateJSGeneratorObject
_GeneratorClose
_GeneratorGetResumeMode
_CreateAsyncFromSyncIterator
_GetImportMetaObject
_IsSmi
_CreateDataProperty
_CreateIterResultObject
_HasProperty
_IsJSReceiver
_ToLength
_ToNumber
_ToObject
_ToString
_IsRegExp
_DeoptimizeNow
_IsTypedArray
len > 0
;;; Safepoint table.
V8.CompileSerialize
[Serializing from
[Serializing to %d bytes took %0.3f ms]
SerializeBackReference(obj)
!obj->IsCode()
!obj->IsMap()
!obj->IsJSGlobalProxy() && !obj->IsJSGlobalObject()
obj->NeedsRehashing() implies obj->CanBeRehashed()
!obj->IsJSFunction() && !obj->IsContext()
[Cached code failed check]
[Deserializing failed]
[Deserializing from %d bytes took %0.3f ms]
CodeSerializer
reservation[chunk_index].end == high_water_[space]
chunk_index < reservation.size()
!IsRetry()
magic_number_ == SerializedData::kMagicNumber
expected == source_.Get()
filled
typed_array->byte_offset() <= Smi::kMaxValue
data == kExternalReference
data == kInternalReference
data == kOffHeapTarget
(isolate_->embedded_blob()) != nullptr
kNullAddress != address
current == limit
(backing_store) != nullptr
limit == current
No external references provided via API
(allocated_bytes) != nullptr
SetPermissions(page_allocator, allocated_bytes, allocated_size, PageAllocator::kReadExecute)
FreePages(page_allocator, data, RoundUp(size, page_size))
%s is not isolate-independent.
%s is a wasm runtime stub but needs relocation.
%s aliases the off-heap trampoline register.
One or more builtins marked as isolate-independent either contains isolate-dependent code or aliases the off-heap trampoline register. If in doubt, ask jgruber@
EmbeddedData:
  Total size:                         %d
  Metadata size:                      %d
  Instruction size:                   %d
  Padding:                            %d
  Embedded builtin count:             %d
  Instruction size (50th percentile): %d
  Instruction size (75th percentile): %d
  Instruction size (90th percentile): %d
  Instruction size (99th percentile): %d
Builtins::IsIsolateIndependentBuiltin(target)
EXTRAS == type_
new_internalized_strings().size() <= kMaxInt
PartialDeserializer
start_address == code_space->top()
PartialSerializer
embedder fields data
embedder_fields_count > 0
BackRefChunkIndex
BackRefChunkOffset
embedder field index
embedder fields data size
ReadOnlyDeserializer
ReadOnlySerializer
ReadOnlyHeap::Contains(obj)
obj->IsString() implies obj->IsInternalizedString()
(isolate()->thread_manager()->FirstThreadStateInUse()) == nullptr
isolate()->handle_scope_implementer()->blocks()->empty()
read_only_object_cache_index
  Spaces (bytes):
%16s
%16zu
%16d
%16d
Unknown external reference %p.
<from api>
 Encoding hot object %d:
 Encoding attached reference %d
 Encoding back reference to: 
 Encoding root %d:
root_index
BackRefMapIndex
BackRefLargeObjectIndex
AttachedRefIndex
repeat count
ObjectSizeInWords
!object_->IsCode()
BackingStore
buffer->byte_length() <= Smi::kMaxValue
StringContent
 Encoding heap object: 
0 == bytes_processed_so_far_
 Encoding deferred heap object: 
deferred object size
reference index
internal ref value
kNullAddress != addr
builtin index
Bytes
Code
VerifyChecksum(blob)
[Deserializing isolate (%d bytes) took %0.3f ms]
[Deserializing context #%zu (%d bytes) took %0.3f ms]
Deserialization will reserve:
%10d bytes per isolate
%10d bytes per context #%zu
Snapshot blob consists of:
%10d bytes in %d chunks for startup
%10d bytes for read-only
%10d bytes in %d chunks for context #%d
kNumberOfContextsOffset < data->raw_size
[Verifying snapshot checksum took %0.3f ms]
context_offset < static_cast<uint32_t>(data->raw_size)
kRehashabilityOffset < static_cast<uint32_t>(data->raw_size)
index < num_contexts
kVersionStringOffset + kVersionStringLength < static_cast<uint32_t>(data->raw_size)
Version mismatch between V8 binary and snapshot.
#   V8 binary version: %.*s
#    Snapshot version: %.*s
# The snapshot consists of %d bytes and contains %d context(s).
start_offset < end_offset
end_offset < snapshot->raw_size
position_ + size <= length_
StartupDeserializer
StartupSerializer
(isolate->thread_manager()->FirstThreadStateInUse()) == nullptr
isolate->handle_scope_implementer()->blocks()->empty()
partial_snapshot_cache_index
%s handle not serialized: 
eternal
 inlined at 
<inlined(
<not inlined:
{ "line" : 
  "fileId" : 
  "inliningId" : 
{ "scriptOffset" : 
DelayedStringConstant: 
bytes <= length_
#%d#
StackDump
/* anonymous */
<unboxed double> %.16g
%d: %o
                  ...
             %d: %3d 0x%02x
 '%c'
 ^%c
==== Key         ============================================
 #%d# %p: 
           value(): %o
Security context: %o
(aka 
1 <= thread_id
disabled-by-default-v8.runtime_stats_sampling
new_nof <= kMaxNumberOfTransitions
instance_type() >= FIRST_JS_RECEIVER_TYPE
value->IsMap()
GetBackPointer()->IsUndefined()
value->IsMap() implies Map::cast(value)->GetConstructor() == constructor_or_backpointer()
root_array_available_
isolate()->IsGeneratingEmbeddedBuiltins()
!v.is_from_api()
-- Inlined Trampoline to 
SignedSmall
SignedSmallInputs
Signed32
NumberOrOddball
ConsOneByteString
ConsTwoByteString
ConsString
InternalizedString
Receiver
ReceiverOrNullOrUndefined
EnumCacheKeys
EnumCacheKeysAndIndices
CheckNone
ConvertLeft
ConvertRight
[%d] 
[%d:%p] 
Cannot open file %s for writing.
Cannot read from file %s.
!platform_
platform_
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/value-serializer.cc:193
std::numeric_limits<uint32_t>::max() >= module_size
ValueDeserializer::ReadWasmModule
properties.size() < std::numeric_limits<uint32_t>::max()
VectorSlotPair(
VectorSlotPair(INVALID)
NOFEEDBACK
PREMONOMORPHIC
MONOMORPHIC
RECOMPUTE_HANDLER
POLYMORPHIC
MEGAMORPHIC
GENERIC
-node.16
7.5.269-node.16
 (candidate)
%d.%d.%d.%d%s%s
%d.%d.%d%s%s
-candidate
libv8-%d.%d.%d.%d%s%s.so
libv8-%d.%d.%d%s%s.so
(Internalized strings)
(External strings)
(Read-only roots)
(Strong roots)
(Smi roots)
(Bootstrapper)
(Isolate)
(Relocatable)
(Debugger)
(Compilation cache)
(Handle scope)
(Dispatch table)
(Builtins)
(Global handles)
(Eternal handles)
(Thread manager)
(Extensions)
(Code flusher)
(Partial snapshot cache)
(Read-only object cache)
(Weak collections)
(Wrapper tracing)
(Unknown)
anyfunc
nullref
s128
<var>
ExecuteLiftoffCompilation
LiftoffCompilationZone
function body end < start
unterminated control structure
function body must end with "end" opcode
0 < len
local decls count
local count
local count too large
invalid local type
local type 'anyfunc' is not enabled with --experimental-wasm-anyref
expected %s
extra bits in varint
expected %u bytes, fell off end
Invalid opcode (enable with --experimental-wasm-eh)
catch does not match any try
catch already present for try
else does not match any if
else does not match an if
else already present for if
end does not match any if, try, or block
missing catch or catch-all in try
start-arity and end-arity of one-armed if must match
trailing code after function end
improper branch in br_table target %u (depth %u)
inconsistent arity in br_table target %u (previous was %u, this one %u)
Invalid opcode (enable with --experimental-wasm-anyref)
immutable global #%u cannot be assigned
grow_memory is not supported for asmjs modules
Invalid opcode (enable with --experimental-wasm-return_call)
%s: %s
tail call return types mismatch
numeric index
Invalid opcode (enable with --experimental-wasm-sat_f2i_conversions)
Invalid opcode (enable with --experimental-wasm-bulk_memory)
Invalid opcode (enable with --experimental-wasm-simd)
simd index
Invalid opcode (enable with --experimental-wasm-threads)
atomic index
Invalid opcode
Beyond end of code
param
unsupported liftoff operation: %s
block type
invalid block type
block arity
invalid block type index
block type index %u out of bounds (%zu signatures)
%s[%d] expected type %s, found %s of type %s
<end>
rethrow
exception index
Invalid exception index: %u
invalid branch depth: %u
expected %u elements on the stack for br to @%d, found %u
type error in merge[%u] (expected %s, got %s)
br_on_exn
%s found empty stack
multi-value if
expected %u elements on the stack for fallthru to @%d, found %u
multi-return
branch depth
table count
invalid table count (> max function size): %u
branch table entry
expected %u elements on the stack for return, found %u
type error in return[%u] (expected %s, got %s)
immi32
immi64
immf32
immf64
ref_null
local index
invalid local index: %u
global index
invalid global index: %u
table index
invalid table index: %u
table_get
table_set
alignment
invalid alignment; expected maximum alignment is %u, actual alignment is %u
memory instruction with no memory
memory index
expected memory index 0, found %u
function index
invalid function index: %u
signature index
expected table index 0, found %u
function table has to exist to execute call_indirect
table of call_indirect must be of type anyfunc
invalid signature index: #%u
table index != 0
return_call
return_call_indirect
invalid numeric opcode
data segment index
invalid data segment index: %u
memory.init
data.drop
memory.copy
memory.fill
elem segment index
invalid element segment index: %u
table.init
elem.drop
table.copy
invalid simd opcode
lane
invalid lane index
simd
invalid shift amount
shuffle
invalid shuffle mask
Atomic opcodes used without shared memory
invalid atomic opcode
atomicop
Invalid opcode (enable with --experimental-wasm-se)
arm64 Stack too big
arm64 Stack limited to 512 bytes to avoid a bug in StackCheck
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/wasm/function-body-decoder.cc:49
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/wasm/function-body-decoder.cc:100
// signature: 
// locals:
// body: 
 kWasmI32,
 kWasmI64,
 kWasmF32,
 kWasmF64,
 kWasmS128,
 kWasmStmt,
   // @
   // depth=
 // entries=
   // sig #
 // function #
kExprUnreachable
kExprNop
kExprBlock
kExprLoop
kExprIf
kExprElse
kExprTry
kExprCatch
kExprThrow
kExprRethrow
kExprBrOnExn
kExprEnd
kExprBr
kExprBrIf
kExprBrTable
kExprReturn
kExprCallFunction
kExprCallIndirect
kExprReturnCall
kExprReturnCallIndirect
kExprDrop
kExprSelect
kExprGetLocal
kExprSetLocal
kExprTeeLocal
kExprGetGlobal
kExprSetGlobal
kExprGetTable
kExprSetTable
kExprI32Const
kExprI64Const
kExprF32Const
kExprF64Const
kExprRefNull
kExprRefFunc
kExprI32Eqz
kExprI32Eq
kExprI32Ne
kExprI32LtS
kExprI32LtU
kExprI32GtS
kExprI32GtU
kExprI32LeS
kExprI32LeU
kExprI32GeS
kExprI32GeU
kExprI64Eqz
kExprI64Eq
kExprI64Ne
kExprI64LtS
kExprI64LtU
kExprI64GtS
kExprI64GtU
kExprI64LeS
kExprI64LeU
kExprI64GeS
kExprI64GeU
kExprF32Eq
kExprF32Ne
kExprF32Lt
kExprF32Gt
kExprF32Le
kExprF32Ge
kExprF64Eq
kExprF64Ne
kExprF64Lt
kExprF64Gt
kExprF64Le
kExprF64Ge
kExprI32Clz
kExprI32Ctz
kExprI32Popcnt
kExprI32Add
kExprI32Sub
kExprI32Mul
kExprI32DivS
kExprI32DivU
kExprI32RemS
kExprI32RemU
kExprI32And
kExprI32Ior
kExprI32Xor
kExprI32Shl
kExprI32ShrS
kExprI32ShrU
kExprI32Rol
kExprI32Ror
kExprI64Clz
kExprI64Ctz
kExprI64Popcnt
kExprI64Add
kExprI64Sub
kExprI64Mul
kExprI64DivS
kExprI64DivU
kExprI64RemS
kExprI64RemU
kExprI64And
kExprI64Ior
kExprI64Xor
kExprI64Shl
kExprI64ShrS
kExprI64ShrU
kExprI64Rol
kExprI64Ror
kExprF32Abs
kExprF32Neg
kExprF32Ceil
kExprF32Floor
kExprF32Trunc
kExprF32NearestInt
kExprF32Sqrt
kExprF32Add
kExprF32Sub
kExprF32Mul
kExprF32Div
kExprF32Min
kExprF32Max
kExprF32CopySign
kExprF64Abs
kExprF64Neg
kExprF64Ceil
kExprF64Floor
kExprF64Trunc
kExprF64NearestInt
kExprF64Sqrt
kExprF64Add
kExprF64Sub
kExprF64Mul
kExprF64Div
kExprF64Min
kExprF64Max
kExprF64CopySign
kExprI32ConvertI64
kExprI32SConvertF32
kExprI32UConvertF32
kExprI32SConvertF64
kExprI32UConvertF64
kExprI64SConvertI32
kExprI64UConvertI32
kExprI64SConvertF32
kExprI64UConvertF32
kExprI64SConvertF64
kExprI64UConvertF64
kExprF32SConvertI32
kExprF32UConvertI32
kExprF32SConvertI64
kExprF32UConvertI64
kExprF32ConvertF64
kExprF64SConvertI32
kExprF64UConvertI32
kExprF64SConvertI64
kExprF64UConvertI64
kExprF64ConvertF32
kExprI32ReinterpretF32
kExprI64ReinterpretF64
kExprF32ReinterpretI32
kExprF64ReinterpretI64
kExprI32SExtendI8
kExprI32SExtendI16
kExprI64SExtendI8
kExprI64SExtendI16
kExprI64SExtendI32
kExprRefIsNull
kExprI32StoreMem
kExprI64StoreMem
kExprF32StoreMem
kExprF64StoreMem
kExprI32StoreMem8
kExprI32StoreMem16
kExprI64StoreMem8
kExprI64StoreMem16
kExprI64StoreMem32
kExprI32LoadMem
kExprI64LoadMem
kExprF32LoadMem
kExprF64LoadMem
kExprI32LoadMem8S
kExprI32LoadMem8U
kExprI32LoadMem16S
kExprI32LoadMem16U
kExprI64LoadMem8S
kExprI64LoadMem8U
kExprI64LoadMem16S
kExprI64LoadMem16U
kExprI64LoadMem32S
kExprI64LoadMem32U
kExprMemorySize
kExprMemoryGrow
kExprF64Acos
kExprF64Asin
kExprF64Atan
kExprF64Cos
kExprF64Sin
kExprF64Tan
kExprF64Exp
kExprF64Log
kExprF64Atan2
kExprF64Pow
kExprF64Mod
kExprI32AsmjsDivS
kExprI32AsmjsDivU
kExprI32AsmjsRemS
kExprI32AsmjsRemU
kExprI32AsmjsLoadMem8S
kExprI32AsmjsLoadMem8U
kExprI32AsmjsLoadMem16S
kExprI32AsmjsLoadMem16U
kExprI32AsmjsLoadMem
kExprF32AsmjsLoadMem
kExprF64AsmjsLoadMem
kExprI32AsmjsStoreMem8
kExprI32AsmjsStoreMem16
kExprI32AsmjsStoreMem
kExprF32AsmjsStoreMem
kExprF64AsmjsStoreMem
kExprI32AsmjsSConvertF32
kExprI32AsmjsUConvertF32
kExprI32AsmjsSConvertF64
kExprI32AsmjsUConvertF64
numeric_index
simd_index
invalid SIMD opcode
atomic_index
invalid Atomics opcode
../../deps/v8/src/wasm/function-body-decoder-impl.h
unimplemented opcode: %x (%s)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/wasm/graph-builder-interface.cc:906
 i8:%d / %02x
i16:%d / %04x
i32:%d / %08x
i64:%lld / %016llx
f32:%f / %08x
f64:%f / %016llx
interpreter
%-11s func:%6d+0x%-6x%s %08x val: %s
 store to
load from
!compilation_state->failed()
WebAssembly.compile()
wasm-%08x
thrower->error()
ExecuteCompilationUnits
storage_.is_populated_
%s @+%u
Compiling function #%d failed: %s @+%u
Compiling function #%d:"%.*s" failed: %s @+%u
AsyncCompileJob::DecodeModule
Type
Import
Table
Memory
Global
Export
Element
Data
Exception
DataCount
module_start <= module_end
size > maximum module size (%zu): %zu
section name
function_start <= function_end
size > maximum function size (%zu): %zu
functions count
table size
illegal asm function offset table size
locals size
function start pos
byte offset delta
call position delta
to_number position delta
broken asm offset table
unexpected additional bytes
section length
name length
invalid section length
name payload length
function name
local names count
namings count
local name
end is less than start
unknown section code #0x%02x
shorter
longer
section was %s than expected size (%u bytes expected, %zu decoded)
(module_) == nullptr
signatures
expected magic word %02x %02x %02x %02x, found %02x %02x %02x %02x
expected version %02x %02x %02x %02x, found %02x %02x %02x %02x
unexpected section <%s>
section was %s than expected size (%zu bytes expected, %zu decoded)
Multiple %s sections not allowed
The %s section must appear before the %s section
types count
%s of %u exceeds internal limit of %zu
type form
param count
return count
expected %s 0x%02x, got 0x%02x
imports count
module name
field name
invalid table type
element count
memory
pages
unknown import kind 0x%02x
signature index %u out of bounds (%d signatures)
At most one table is supported
Invalid type. Set --experimental-wasm-anyref to use 'AnyRef'
invalid reference type
invalid %s limits flags
initial size
initial %s size (%u %s) is larger than implementation limit (%u)
maximum size
maximum %s size (%u %s) is larger than implementation limit (%u)
maximum %s size (%u %s) is less than initial (%u %s)
At most one memory is supported
invalid memory limits flags
memory limits flags should have maximum defined if shared is true
invalid mutability
exception attribute
exception attribute %u not supported
exception signature %u has non-void return
table elements
memory count
globals count
invalid global index in init expression, index %u, other_index %u
type mismatch in global initialization (from global #%u), expected %s, got %s
type error in global initialization, expected %s, got %s
global index is out of bounds
only immutable imported globals can be used in initializer expressions
invalid opcode in initialization expression
end opcode
type error in init expression, expected %s, got %s
exports count
export function index
invalid memory index != 0
invalid export kind 0x%02x
Duplicate export name '%.*s' for %s %d and %s %d
%s %u out of bounds (%d entr%s)
start function index
invalid start function: non-zero parameter or return count
body size
size %u > maximum function size %zu
The element section requires a table
out of bounds table index %u
Invalid element segment. Table %u is not of type AnyFunc
invalid element segment type
number of elements
illegal flag value %u. Must be 0, 1, or 2
element function index
invalid opcode in element
data segments count
cannot load data without memory
illegal memory index %u != 0
source size
data segments count %u mismatch (%u expected)
name type if not varuint7
compilation hint count
Expected %u compilation hints (%u found)
Invalid compilation hint %#x (unknown strategy)
Invalid compilation hint %#x (forbidden downgrade)
exception count
in function 
function body count %u mismatch (%u expected)
function count is %u, but code section is absent
string length
%s: no valid UTF-8 string
InstanceBuilder::Build
Imports argument must be present and must be an object
Provided memory is lacking guard regions but fallback was disabled.
recompile
Out of memory: wasm globals
instance->memory_size() == memory->byte_length()
instance->memory_start() == memory->backing_store()
table initializer is out of bounds
data segment is out of bounds
InstanceBuilder::ExecuteStartFunction
module not found
module is not an object or function
import not found
missing imports object
not a data property
Could not resolve module name for import %zu
Could not resolve import name for import %zu
Could not find value for import %zu
function import requires a callable
imported function does not match the expected type
table import requires a WebAssembly.Table
table import %d is smaller than initial %d, got %u
table import %d has no maximum length, expected %d
table import %d has a larger maximum size %llx than the module's declared maximum %u
table import %d[%d] is not a wasm function
memory import must be a WebAssembly.Memory object
memory import %d is smaller than initial %u, got %u
memory import %d has no maximum limit, expected at most %u
memory import %d has a larger maximum size %u than the module's declared maximum %u
mismatch in shared state of memory, declared = %d, imported = %d
imported global does not match the expected type
imported global does not match the expected mutability
global import cannot have type i64
imported mutable global must be a WebAssembly.Global object
imported anyfunc global must be null or an exported function
global import must be a number or WebAssembly.Global object
exception import requires a WebAssembly.Exception
imported exception does not match the expected type
Out of memory: wasm memory too large
Out of memory: wasm shared memory
Out of memory: wasm memory
global_addr >= backing_store && global_addr < backing_store + buffer_size
export of %.*s failed.
Import #%d module="%s" error: %s
Import #%d module="%s" function="%s" error: %s
!obj->IsUndefined(isolate)
!frozen_
kMaxInt >= map_.size()
unexpected end of stream
function size > maximum function size: 
code section cannot have size 0
code section can only appear once
invalid code section length
not all code section bytes were used
read past code section end
invalid function length (0)
not enough code section bytes
HasTrapHandlerIndex()
<name too long>
wasm-function[%d]
--- WebAssembly code ---
--- End code ---
name: 
index: 
kind: 
compiler: 
Liftoff
TurboFan
Body (size = 
 padding)
Exception Handler Table (size = 
Protected instructions:
 pc offset  land pad
 (sp -> fp)
 trampoline: 
 deopt: 
wasm function
wasm-to-js
runtime-stub
interpreter entry
jump table
unknown kind
trap_handler_index() < static_cast<size_t>(std::numeric_limits<int>::max())
embedded_data.ContainsBuiltin(pair.first)
NativeModule::AllocateForCode reservation
NativeModule::AllocateForCode commit
WasmCodeManager::NewNativeModule
c-wasm-entry
locals
arg#%d
local#%d
len > 0 && len < value.length()
%lld
WebAssembly.instantiate()
WasmCompile
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/wasm/wasm-interpreter.cc:3881
0 == id
Unknown or unimplemented opcode #%d:%s
InternalBreakpoint
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/wasm/wasm-interpreter.cc:671
WebAssembly
validate
compileStreaming
instantiateStreaming
imports
customSections
WebAssembly.Module
Instance
WebAssembly.Instance
grow
WebAssembly.Table
WebAssembly.Memory
WebAssembly.Global
Wasm code generation disallowed by embedder
promise_result.is_null() == promise_->GetIsolate()->has_pending_exception()
Argument 0 must be a buffer source
BufferSource argument is empty
buffer source exceeds maximum size of %zu (is %zu)
WebAssembly.validate()
Argument 0 must be a buffer source or a WebAssembly.Module object
Argument 1 must be an object
instance
promise_result.is_null() == isolate_->has_pending_exception()
!thrower.error()
WebAssembly.instantiateStreaming()
WebAssembly.Module()
WebAssembly.Module must be invoked with 'new'
WebAssembly.Module.imports()
Argument 0 must be a WebAssembly.Module
WebAssembly.Module.exports()
WebAssembly.Module.customSections()
Argument 1 is required
WebAssembly.Instance()
WebAssembly.Instance must be invoked with 'new'
Argument 0 must be a WebAssembly.Module object
WebAssembly.Instance.exports()
Receiver is not a %s
WebAssembly.Table must be invoked with 'new'
Argument 0 must be a table descriptor
element
Descriptor property 'element' must be 'anyfunc'
maximum
initial
minimum
Property 'initial' is required
Property '%s': value %u is below the lower bound %llx
Property '%s': value %u is above the upper bound %llu
%s must be convertible to a number
%s must be convertible to a valid number
%s must be non-negative
%s must be in the unsigned long range
Property '
WebAssembly.Table.length()
WebAssembly.Table.grow()
Argument 0
maximum table size exceeded
WebAssembly.Table.get()
invalid index %u into function table
WebAssembly.Table.set()
Argument 1 must be null or a WebAssembly function
WebAssembly.Table.type()
Argument 0 must be a WebAssembly.Table
WebAssembly.Memory()
WebAssembly.Memory must be invoked with 'new'
Argument 0 must be a memory descriptor
If shared is true, maximum property should be defined.
could not allocate memory
Status of setting SetIntegrityLevel of buffer is false.
WebAssembly.Memory.grow()
Maximum memory size exceeded
Unable to grow instance memory.
WebAssembly.Memory.buffer
WebAssembly.Memory.type()
Argument 0 must be a WebAssembly.Memory
WebAssembly.Global()
WebAssembly.Global must be invoked with 'new'
Argument 0 must be a global descriptor
mutable
Descriptor property 'value' must be 'i32', 'i64', 'f32', or 'f64'
Can't set the value of i64 WebAssembly.Global
The value of anyfunc globals must be null or an exported function
WebAssembly.Global.valueOf()
Can't get the value of i64 WebAssembly.Global
get WebAssembly.Global.value
set WebAssembly.Global.value
Can't set the value of an immutable global.
Argument 0 is required
value of an anyfunc reference must be either null or an exported function
WebAssembly.Global.type()
Argument 0 must be a WebAssembly.Global
WebAssembly.Exception()
WebAssembly.Exception cannot be called
FreePages(GetPlatformPageAllocator(), reinterpret_cast<void*>(memory.begin()), memory.size())
find_result != allocations_.end()
FreePages(GetPlatformPageAllocator(), allocation.allocation_base, allocation.allocation_length)
entry->second <= new_size
result != allocations_.end() && result->second.is_shared
could not allocate wasm memory
TryAllocateBackingStore
BoundsCheck(ref.offset(), ref.length())
out of memory allocating custom section data
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/wasm/wasm-objects.cc:612
wasm-function[%u]
!function.exported
(allocation) != nullptr
GrowMemory
wasm::max_mem_pages() >= maximum_pages
0 == old_size % wasm::kWasmPageSize
wasm::max_mem_pages() >= old_pages
offset == 0
offset + type_size <= untagged_buffer->byte_length()
mem_size <= wasm::max_mem_bytes()
0 == table_src_index
0 == table_dst_index
!Object::SetProperty(isolate, exception, isolate->factory()->wasm_exception_tag_symbol(), exception_tag, StoreOrigin::kMaybeKeyed, Just(ShouldThrow::kThrowOnError)) .is_null()
i32.eqz
i64.eqz
f32.eq
f64.eq
i32.eq
i64.eq
f32.ne
f64.ne
i32.ne
i64.ne
f32.add
f64.add
i32.add
i64.add
f32.sub
f64.sub
i32.sub
i64.sub
f32.mul
f64.mul
i32.mul
i64.mul
f32.lt
f64.lt
i32.lt_s
i64.lt_s
i32.lt_u
i64.lt_u
f32.gt
f64.gt
i32.gt_s
i64.gt_s
i32.gt_u
i64.gt_u
f32.le
f64.le
i32.le_s
i64.le_s
i32.le_u
i64.le_u
f32.ge
f64.ge
i32.ge_s
i64.ge_s
i32.ge_u
i64.ge_u
i32.clz
i64.clz
i32.ctz
i64.ctz
i32.popcnt
i64.popcnt
f32.div
f64.div
i32.div_s
i64.div_s
i32.div_u
i64.div_u
i32.rem_s
i64.rem_s
i32.rem_u
i64.rem_u
i32.and
i64.and
i32.or
i64.or
i32.xor
i64.xor
i32.shl
i64.shl
i32.shr_s
i64.shr_s
i32.shr_u
i64.shr_u
i32.rol
i64.rol
i32.ror
i64.ror
f32.abs
f64.abs
f32.neg
f64.neg
f32.ceil
f64.ceil
f32.floor
f64.floor
f32.trunc
f64.trunc
f32.nearest
f64.nearest
f32.sqrt
f64.sqrt
f32.min
f64.min
f32.max
f64.max
f32.copysign
f64.copysign
ref.null
ref.is_null
ref.func
i32.wrap/i64
i32.trunc_u/f32
i64.trunc_u/f32
i32.trunc_s/f32
i64.trunc_s/f32
i32.trunc_u/f64
i64.trunc_u/f64
i32.trunc_s/f64
i64.trunc_s/f64
i64.extend_u/i32
i64.extend_s/i32
f32.convert_u/i32
f32.convert_s/i32
f32.convert_u/i64
f32.convert_s/i64
f32.demote/f64
f64.convert_u/i32
f64.convert_s/i32
f64.convert_u/i64
f64.convert_s/i64
f64.promote/f32
i32.reinterpret/f32
i64.reinterpret/f64
f32.reinterpret/i32
f64.reinterpret/i64
i32.sign_extend8
i64.sign_extend8
i32.sign_extend16
i64.sign_extend16
i64.sign_extend32
br_if
br_table
call_indirect
drop
get_local
set_local
tee_local
get_global
set_global
get_table
set_table
f32.const
f64.const
i32.const
i64.const
memory.size
memory.grow
f32.load
f64.load
i32.load
i64.load
i32.load8_s
i64.load8_s
i32.load8_u
i64.load8_u
i32.load16_s
i64.load16_s
i32.load16_u
i64.load16_u
i64.load32_s
i64.load32_u
s128.load128
f32.store
f64.store
i32.store
i64.store
i32.store8
i64.store8
i32.store16
i64.store16
i64.store32
s128.store128
f64.acos
f64.asin
f64.atan
f64.cos
f64.sin
f64.tan
f64.exp
f64.log
f64.atan2
f64.pow
f64.mod
f32.asmjs_load
f64.asmjs_load
i32.asmjs_load8_s
i32.asmjs_load8_u
i32.asmjs_load16_s
i32.asmjs_load16_u
i32.asmjs_load32
i32.asmjs_store
f32.asmjs_store
f64.asmjs_store
i32.asmjs_store8
i32.asmjs_store16
i32.asmjs_div_s
i32.asmjs_div_u
i32.asmjs_rem_s
i32.asmjs_rem_u
i32.asmjs_convert_s/f32
i32.asmjs_convert_u/f32
i32.asmjs_convert_s/f64
i32.asmjs_convert_u/f64
i32.trunc_u:sat/f32
i32.trunc_s:sat/f32
i32.trunc_u:sat/f64
i32.trunc_s:sat/f64
i64.trunc_u:sat/f32
i64.trunc_s:sat/f32
i64.trunc_u:sat/f64
i64.trunc_s:sat/f64
f32x4.splat
i32x4.splat
i16x8.splat
i8x16.splat
f32x4.neg
i32x4.neg
i16x8.neg
i8x16.neg
f32x4.eq
i32x4.eq
i16x8.eq
i8x16.eq
f32x4.ne
i32x4.ne
i16x8.ne
i8x16.ne
f32x4.add
i32x4.add
i16x8.add
i8x16.add
f32x4.sub
i32x4.sub
i16x8.sub
i8x16.sub
f32x4.mul
i32x4.mul
i16x8.mul
i8x16.mul
f32x4.abs
f32x4.add_horizontal
f32x4.recip_approx
f32x4.recip_sqrt_approx
f32x4.min
f32x4.max
f32x4.lt
f32x4.le
f32x4.gt
f32x4.ge
f32x4.convert_u/i32
f32x4.convert_s/i32
i32x4.convert_u/f32
i32x4.convert_s/f32
i32x4.convert_u/i32
i32x4.convert_s/i32
i16x8.convert_u/i32
i16x8.convert_s/i32
i8x16.convert_u/i32
i8x16.convert_s/i32
f32x4.extract_lane
f32x4.replace_lane
i32x4.extract_lane
i16x8.extract_lane
i8x16.extract_lane
i32x4.replace_lane
i16x8.replace_lane
i8x16.replace_lane
i32x4.min_s
i16x8.min_s
i8x16.min_s
i32x4.min_u
i16x8.min_u
i8x16.min_u
i32x4.max_s
i16x8.max_s
i8x16.max_s
i32x4.max_u
i16x8.max_u
i8x16.max_u
i32x4.lt_s
i16x8.lt_s
i8x16.lt_s
i32x4.lt_u
i16x8.lt_u
i8x16.lt_u
i32x4.le_s
i16x8.le_s
i8x16.le_s
i32x4.le_u
i16x8.le_u
i8x16.le_u
i32x4.gt_s
i16x8.gt_s
i8x16.gt_s
i32x4.gt_u
i16x8.gt_u
i8x16.gt_u
i32x4.ge_s
i16x8.ge_s
i8x16.ge_s
i32x4.ge_u
i16x8.ge_u
i8x16.ge_u
i32x4.shr_s
i16x8.shr_s
i8x16.shr_s
i32x4.shr_u
i16x8.shr_u
i8x16.shr_u
i32x4.shl
i16x8.shl
i8x16.shl
i32x4.add_horizontal
i16x8.add_horizontal
i16x8.add_saturate_s
i16x8.add_saturate_u
i8x16.add_saturate_s
i8x16.add_saturate_u
i16x8.sub_saturate_s
i16x8.sub_saturate_u
i8x16.sub_saturate_s
i8x16.sub_saturate_u
s128.and
s128.or
s128.xor
s128.not
s128.select
s8x16.shuffle
s1x4.any_true
s1x4.all_true
s1x8.any_true
s1x8.all_true
s1x16.any_true
s1x16.all_true
atomic_notify
i32.atomic_wait
i64.atomic_wait
i32.atomic_load32
i32.atomic_load8_u
i32.atomic_load16_u
i64.atomic_load64
i64.atomic_load8_u
i64.atomic_load16_u
i64.atomic_load32_u
i32.atomic_store32
i32.atomic_store8_u
i32.atomic_store16_u
i64.atomic_store64
i64.atomic_store8_u
i64.atomic_store16_u
i64.atomic_store32_u
i32.atomic_add32
i32.atomic_add8_u
i32.atomic_add16_u
i64.atomic_add64
i64.atomic_add8_u
i64.atomic_add16_u
i64.atomic_add32_u
i32.atomic_sub32
i32.atomic_sub8_u
i32.atomic_sub16_u
i64.atomic_sub64
i64.atomic_sub8_u
i64.atomic_sub16_u
i64.atomic_sub32_u
i32.atomic_and32
i32.atomic_and8_u
i32.atomic_and16_u
i64.atomic_and64
i64.atomic_and8_u
i64.atomic_and16_u
i64.atomic_and32_u
i32.atomic_or32
i32.atomic_or8_u
i32.atomic_or16_u
i64.atomic_or64
i64.atomic_or8_u
i64.atomic_or16_u
i64.atomic_or32_u
i32.atomic_xor32
i32.atomic_xor8_u
i32.atomic_xor16_u
i64.atomic_xor64
i64.atomic_xor8_u
i64.atomic_xor16_u
i64.atomic_xor32_u
i32.atomic_xchng32
i32.atomic_xchng8_u
i32.atomic_xchng16_u
i64.atomic_xchng64
i64.atomic_xchng8_u
i64.atomic_xchng16_u
i64.atomic_xchng32_u
i32.atomic_cmpxchng32
i32.atomic_cmpxchng8_u
i32.atomic_cmpxchng16_u
i64.atomic_cmpxchng64
i64.atomic_cmpxchng8_u
i64.atomic_cmpxchng16_u
i64.atomic_cmpxchng32_u
%s: 
(decode_result.value()) != nullptr
wrote: 
 sized: 
wrote vector of 
 elements
read: 
read vector of 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/wasm/wasm-text.cc:43
func
 (param
 (result
(local
                                                                
 (type 
call_indirect 
call 
i32.const 
i64.const 
f32.const 
f64.const 
 offset=
 align=
_.+-*/\^~=<>!?@#$%&|:'`
anyref
<stmt>
!sealed_
Zone
devtoolsFormatters
hasBody
formatter should be an Object
header should be a Function
formatter
groupName
cannot find context with specified id
Custom Formatter Failed: 
Too deep hierarchy of inlined custom previews
attributes should be an Object
obligatory attribute "object" isn't specified
cannot wrap value
object should be an Object
body
body should be a Function
sessionId should be an Int32
groupName should be a string
body should return an Array
Execution context was destroyed.
Could not find object with given id
Argument should belong to the same JavaScript world as target object
Number("
Couldn't parse value object in call argument
Execution was terminated
{"injectedScriptId":
,"id":
Cannot find context with specified id
Promise was collected
Uncaught (in promise)
m_injectedScripts.find(sessionId) == m_injectedScripts.end()
injectedScriptId
Invalid remote object id
Invalid call frame id
{"ordinal":
,"injectedScriptId":
%016llx
%08x
(%08llX%08llX)
console.trace
console.group
console.groupCollapsed
console.groupEnd
console.clear
Count for '
' does not exist
console.assert
console.log("function 
 called" + (arguments.length > 0 ? " with arguments: " + Array.prototype.join.call(arguments, ", ") : "")) && false
function dir(value) { [Command Line API] }
function dirxml(value) { [Command Line API] }
function profile(title) { [Command Line API] }
function profileEnd(title) { [Command Line API] }
function clear() { [Command Line API] }
function table(data, [columns]) { [Command Line API] }
function keys(object) { [Command Line API] }
function values(object) { [Command Line API] }
function debug(function, condition) { [Command Line API] }
undebug
function undebug(function) { [Command Line API] }
monitor
function monitor(function) { [Command Line API] }
unmonitor
function unmonitor(function) { [Command Line API] }
function inspect(object) { [Command Line API] }
function copy(value) { [Command Line API] }
queryObjects
function queryObjects(constructor) { [Command Line API] }
Timer '
' already exists
copyToClipboard
<message collected>
[object Proxy]
Symbol(
v8.console
V8ConsoleMessage::Exception
V8ConsoleMessage::Error
V8ConsoleMessage::Assert
There is current termination request in progress
Cannot continue to specified location
Promise.then
Promise.catch
Promise.finally
Local
With Block
Closure
Catch
Block
!isKeyValue || wrappedEntries->Length() % 2 == 0
[[Entries]]
[[Scopes]]
Async stacks count: %d
Scheduled async tasks: %zu
Recurring async tasks: %zu
Script execution is prohibited
Either url or urlRegex or scriptHash must be specified.
Incorrect column number
Breakpoint at specified location already exists.
Could not resolve breakpoint
Could not find function with given id
start.lineNumber and start.columnNumber should be >= 0
Locations should contain the same scriptId
end.lineNumber and end.columnNumber should be >= 0
Script not found
Cannot retrive script context
Invalid stack trace id
Stack trace with given id is not found
No script for id: 
No script with given id found
Could not find call frame with given id
Unknown pause on exceptions mode: 
Could not find scope with given number
Could not find top call frame
Could not update return value at non-return position
Pattern parser error: 
No script with passed id.
Position missing 'line' or 'line' < 0.
Position missing 'column' or 'column' < 0.
Input positions array is not sorted or contains duplicate values.
reasons
lineEnds.size()
Cannot access v8 heap profiler
Failed to take heap snapshot
Invalid heap snapshot object id
Object is not available
V8 sampling heap profiler was not started.
use_binary_protocol
Cannot change sampling interval when profiling.
Profiler is not enabled
No recording profiles found
Profile is not found
Precise coverage has not been started.
Type profile has not been started.
disabled-by-default-devtools.timeline
EvaluateScript
Could not find promise with given id
ObjectId must not be specified together with executionContextId
Either ObjectId or executionContextId must be specified
Value with given id is not an object
Runtime agent is not enabled
maxCallStackSizeToCapture should be non-negative
Script compilation failed
No script with given id
Script execution failed
Prototype should be instance of Object
%llx
Cannot find execution context with given executionContextId
Invalid arguments: should be exactly one string.
Cannot find default execution context
Given expression does not evaluate to a function
    at 
[[FunctionLocation]]
[[IsGenerator]]
[[GeneratorLocation]]
nodeName
nodeType
<!DOCTYPE 
internal#scopeList
internal#entry
internal#scope
Request
Response
internal#location
Scopes[
 => 
[[Int8Array]]
[[Uint8Array]]
[[Int16Array]]
[[Int32Array]]
Object reference chain is too long
Object couldn't be returned by value
wasm://wasm/
[ Constant Pool
(str) != nullptr
prev_link->IsTargetInImmPCOffsetRange(next_link)
Assembler::GrowBuffer
[ Veneers
expected_adr->IsAdr() && (expected_adr->ImmPCRel() == 0)
InstructionAt((i + 1) * kInstrSize)->IsNop(ADR_FAR_NOP)
expected_movz->IsMovz() && (expected_movz->ImmMoveWide() == 0) && (expected_movz->ShiftMoveWide() == 0)
expected_adr->IsAddSubImmediate()
is_int19(imm19)
is_int26(imm26)
is_int14(imm14)
is_int21(imm21)
'Rds, 'Rns, 'IAddSub
'Rns, 'IAddSub
'Rds, 'Rns
adds
subs
unreachable code
'Rd, 'Rn, 'Rm'NDP
'Rn, 'Rm'NDP
'Rd, 'Rm'NDP
negs
'Rds, 'Rns, 'Xm'Ext
'Rds, 'Rns, 'Wm'Ext
'Rns, 'Xm'Ext
'Rns, 'Wm'Ext
'Rd, 'Rn, 'Rm
'Rd, 'Rm
adcs
sbcs
ngcs
'Rds, 'Rn, 'ITri
unallocated
(LogicalImmediate)
'Rds, 'ITri
ands
'Rn, 'ITri
'Rd, 'Rn, 'Rm'NLo
bics
'Rn, 'Rm'NLo
'Rd, 'Rm'NLo
'Rn, 'Rm, 'INzcv, 'Cond
ccmn
ccmp
'Rn, 'IP, 'INzcv, 'Cond
'Rd, 'Rn, 'Rm, 'Cond
'Rd, 'CInv
'Rd, 'Rn, 'CInv
csel
csinc
cset
cinc
csinv
csetm
cinv
csneg
cneg
'Rd, 'Rn, 'IBr
'Rd, 'Wn
'Rd, 'Rn, 'IBZ-r, 'IBs+1
'Rd, 'Rn, 'IBr, 'IBs-r+1
'Rd, 'Rn, 'IBZ-r
sbfx
sxtb
sxth
sxtw
sbfiz
ubfx
uxtb
uxth
ubfiz
bfxil
'Rd, 'Rn, 'Rm, 'IExtract
'Rd, 'Rn, 'IExtract
extr
'Xd, 'AddrPCRelByte
unimplemented
(PCRelAddressing)
b.'CBrn
'TImmCond
(UnconditionalBranchToRegister)
'TImmUncn
'Rd, 'Rn
rbit
rev16
rev32
udiv
sdiv
(DataProcessing2Source)
'Xd, 'Wn, 'Wm, 'Xa
'Rd, 'Rn, 'Rm, 'Ra
'Xd, 'Wn, 'Wm
'Xd, 'Xn, 'Xm
madd
msub
mneg
smaddl
smull
smsubl
smnegl
umaddl
umull
umsubl
umnegl
smulh
umulh
'Rt, 'TImmCmpa
cbnz
'Rt, 'IS, 'TImmTest
tbnz
'Rd, 'IMoveImm
movn
movz
movk
'Rd, 'IMoveLSL
(LoadStorePreIndex)
strb
'Wt, ['Xns'ILS]!
strh
'Xt, ['Xns'ILS]!
ldrb
ldrh
ldrsb
ldrsh
ldrsw
'Bt, ['Xns'ILS]!
'Ht, ['Xns'ILS]!
'St, ['Xns'ILS]!
'Dt, ['Xns'ILS]!
'Qt, ['Xns'ILS]!
(LoadStorePostIndex)
'Wt, ['Xns]'ILS
'Xt, ['Xns]'ILS
'Bt, ['Xns]'ILS
'Ht, ['Xns]'ILS
'St, ['Xns]'ILS
'Dt, ['Xns]'ILS
'Qt, ['Xns]'ILS
(LoadStoreUnsignedOffset)
'Wt, ['Xns'ILU]
'Xt, ['Xns'ILU]
'Bt, ['Xns'ILU]
'Ht, ['Xns'ILU]
'St, ['Xns'ILU]
'Dt, ['Xns'ILU]
'Qt, ['Xns'ILU]
prfm
'PrefOp, ['Xn'ILU]
(LoadStoreRegisterOffset)
'Wt, ['Xns, 'Offsetreg]
'Xt, ['Xns, 'Offsetreg]
'Bt, ['Xns, 'Offsetreg]
'Ht, ['Xns, 'Offsetreg]
'St, ['Xns, 'Offsetreg]
'Dt, ['Xns, 'Offsetreg]
'Qt, ['Xns, 'Offsetreg]
'PrefOp, ['Xns, 'Offsetreg]
(LoadStoreUnscaledOffset)
sturb
'Wt, ['Xns'ILS]
sturh
stur
'Xt, ['Xns'ILS]
ldurb
ldurh
ldur
ldursb
ldursh
ldursw
'Bt, ['Xns'ILS]
'Ht, ['Xns'ILS]
'St, ['Xns'ILS]
'Dt, ['Xns'ILS]
'Qt, ['Xns'ILS]
(LoadLiteral)
'Wt, 'ILLiteral 'LValue
'Xt, 'ILLiteral 'LValue
'St, 'ILLiteral 'LValue
'Dt, 'ILLiteral 'LValue
(LoadStorePairPostIndex)
'Wt, 'Wt2, ['Xns]'ILP2
ldpsw
'Xt, 'Xt2, ['Xns]'ILP2
'Xt, 'Xt2, ['Xns]'ILP3
'St, 'St2, ['Xns]'ILP2
'Dt, 'Dt2, ['Xns]'ILP3
'Qt, 'Qt2, ['Xns]'ILP4
(LoadStorePairPreIndex)
'Wt, 'Wt2, ['Xns'ILP2]!
'Xt, 'Xt2, ['Xns'ILP2]!
'Xt, 'Xt2, ['Xns'ILP3]!
'St, 'St2, ['Xns'ILP2]!
'Dt, 'Dt2, ['Xns'ILP3]!
'Qt, 'Qt2, ['Xns'ILP4]!
(LoadStorePairOffset)
'Wt, 'Wt2, ['Xns'ILP2]
'Xt, 'Xt2, ['Xns'ILP2]
'Xt, 'Xt2, ['Xns'ILP3]
'St, 'St2, ['Xns'ILP2]
'Dt, 'Dt2, ['Xns'ILP3]
'Qt, 'Qt2, ['Xns'ILP4]
'Wt, ['Xns]
'Xt, ['Xns]
'Ws, 'Wt, ['Xns]
'Ws, 'Xt, ['Xns]
ldaxrb
stlrb
ldarb
ldaxrh
stlrh
ldarh
ldaxr
stlr
ldar
stlxrh
stlxrb
stlxr
(LoadStoreAcquireRelease)
'Fn, 'Fm
'Fn, #0.0
fcmp
(FPCompare)
'Fn, 'Fm, 'INzcv, 'Cond
fccmp
fccmpe
(FPConditionalCompare)
'Fd, 'Fn, 'Fm, 'Cond
fcsel
'Fd, 'Fn
fmov
fabs
fneg
fsqrt
frintn
frintp
frintm
frintz
frinta
frintx
frinti
fcvt
'Dd, 'Sn
'Sd, 'Dn
'Hd, 'Sn
'Sd, 'Hn
'Dd, 'Hn
'Hd, 'Dn
(FPDataProcessing1Source)
'Fd, 'Fn, 'Fm
fmul
fdiv
fadd
fsub
fmax
fmin
fmaxnm
fminnm
fnmul
'Fd, 'Fn, 'Fm, 'Fa
fmadd
fmsub
fnmadd
fnmsub
'Sd, 'IFPSingle
'Dd, 'IFPDouble
(FPIntegerConvert)
'Rd, 'Fn
'Fd, 'Rn
'Vd.D[1], 'Rn
'Rd, 'Vn.D[1]
fcvtas
fcvtau
fcvtms
fcvtmu
fcvtns
fcvtnu
fcvtzu
fcvtzs
fcvtpu
fcvtps
scvtf
ucvtf
'Rd, 'Fn, 'IFPFBits
'Fd, 'Rn, 'IFPFBits
(System)
'Xt, nzcv
'Xt, fpcr
'Xt, (unknown)
nzcv, 'Xt
fpcr, 'Xt
(unknown), 'Xt
csdb
'IDebug
dcps1
{'IDebug}
dcps2
dcps3
(Exception)
'Vd.%s, 'Vn.%s, 'Vm.%s
'Vd.%s, 'Vn.%s
(NEON3Same)
shadd
uhadd
sqadd
uqadd
srhadd
urhadd
shsub
uhsub
sqsub
uqsub
cmgt
cmhi
cmge
cmhs
sshl
ushl
sqshl
uqshl
srshl
urshl
sqrshl
uqrshl
smax
umax
smin
umin
sabd
uabd
saba
uaba
cmtst
cmeq
pmul
smaxp
umaxp
sminp
uminp
sqdmulh
sqrdmulh
addp
fmaxnmp
fminnmp
fmla
fmls
faddp
fabd
fmulx
fcmeq
fcmge
fcmgt
facge
facgt
fmaxp
fminp
frecps
frsqrts
'Vd.%s, 'Vn.%s, #0
'Vd.%s, 'Vn.%s, #0.0
rev64
saddlp
uaddlp
suqadd
usqadd
sadalp
uadalp
sqabs
sqneg
cmle
cmlt
(NEON2RegMisc)
fcvtn2
fcvtn
fcvtxn2
fcvtxn
fcvtl2
fcvtl
ursqrte
urecpe
frsqrte
frecpe
fcmle
fcmlt
sqxtn
uqxtn
sqxtun
shll
'Vd.%s, 'Vn.%s, #8
'Vd.%s, 'Vn.%s, #16
'Vd.%s, 'Vn.%s, #32
pmull
sabal
sabdl
saddl
smlal
smlsl
ssubl
sqdmlal
sqdmlsl
sqdmull
uabal
uabdl
uaddl
umlal
umlsl
usubl
saddw
ssubw
uaddw
usubw
addhn
raddhn
rsubhn
subhn
(NEON3Different)
%sd, 'Vn.%s
fmaxv
fminv
fmaxnmv
fminnmv
(NEONAcrossLanes)
addv
smaxv
sminv
umaxv
uminv
saddlv
uaddlv
'Vd.%s, 'Vn.%s, 'Ve.%s['IVByElemIndex]
(NEONCopy)
'Vd.%s['IVInsIndex1], 'Vn.%s['IVInsIndex2]
'Vd.%s['IVInsIndex1], 'Xn
'Vd.%s['IVInsIndex1], 'Wn
umov
'Xd, 'Vn.%s['IVInsIndex1]
'Wd, 'Vn.%s['IVInsIndex1]
smov
'Rdq, 'Vn.%s['IVInsIndex1]
'Vd.%s, 'Vn.%s['IVInsIndex1]
'Vd.%s, 'Xn
'Vd.%s, 'Wn
(NEONExtract)
'Vd.%s, 'Vn.%s, 'Vm.%s, 'IVExtract
{'Vt.%1$s}, ['Xns]
{'Vt.%1$s, 'Vt2.%1$s}, ['Xns]
{'Vt.%1$s, 'Vt2.%1$s, 'Vt3.%1$s}, ['Xns]
{'Vt.%1$s, 'Vt2.%1$s, 'Vt3.%1$s, 'Vt4.%1$s}, ['Xns]
(NEONLoadStoreMultiStruct)
{'Vt.%1$s}, ['Xns], 'Xmr1
{'Vt.%1$s, 'Vt2.%1$s}, ['Xns], 'Xmr2
{'Vt.%1$s, 'Vt2.%1$s, 'Vt3.%1$s}, ['Xns], 'Xmr3
{'Vt.%1$s, 'Vt2.%1$s, 'Vt3.%1$s, 'Vt4.%1$s}, ['Xns], 'Xmr4
(NEONLoadStoreMultiStructPostIndex)
{'Vt.b}['IVLSLane0], ['Xns]
{'Vt.h}['IVLSLane1], ['Xns]
{'Vt.s}['IVLSLane2], ['Xns]
{'Vt.d}['IVLSLane3], ['Xns]
ld1r
{'Vt.%s}, ['Xns]
{'Vt.b, 'Vt2.b}['IVLSLane0], ['Xns]
{'Vt.h, 'Vt2.h}['IVLSLane1], ['Xns]
{'Vt.s, 'Vt2.s}['IVLSLane2], ['Xns]
{'Vt.d, 'Vt2.d}['IVLSLane3], ['Xns]
ld2r
{'Vt.%s, 'Vt2.%s}, ['Xns]
{'Vt.b, 'Vt2.b, 'Vt3.b}['IVLSLane0], ['Xns]
{'Vt.h, 'Vt2.h, 'Vt3.h}['IVLSLane1], ['Xns]
{'Vt.s, 'Vt2.s, 'Vt3.s}['IVLSLane2], ['Xns]
{'Vt.d, 'Vt2.d, 'Vt3.d}['IVLSLane3], ['Xns]
ld3r
{'Vt.%s, 'Vt2.%s, 'Vt3.%s}, ['Xns]
{'Vt.b, 'Vt2.b, 'Vt3.b, 'Vt4.b}['IVLSLane0], ['Xns]
{'Vt.h, 'Vt2.h, 'Vt3.h, 'Vt4.h}['IVLSLane1], ['Xns]
{'Vt.s, 'Vt2.s, 'Vt3.s, 'Vt4.s}['IVLSLane2], ['Xns]
{'Vt.d, 'Vt2.d, 'Vt3.d, 'Vt4.d}['IVLSLane3], ['Xns]
ld4r
(NEONLoadStoreSingleStruct)
{'Vt.b}['IVLSLane0], ['Xns], 'Xmb1
{'Vt.h}['IVLSLane1], ['Xns], 'Xmb2
{'Vt.s}['IVLSLane2], ['Xns], 'Xmb4
{'Vt.d}['IVLSLane3], ['Xns], 'Xmb8
{'Vt.%s}, ['Xns], 'Xmz1
{'Vt.b, 'Vt2.b}['IVLSLane0], ['Xns], 'Xmb2
{'Vt.h, 'Vt2.h}['IVLSLane1], ['Xns], 'Xmb4
{'Vt.s, 'Vt2.s}['IVLSLane2], ['Xns], 'Xmb8
{'Vt.d, 'Vt2.d}['IVLSLane3], ['Xns], 'Xmb16
{'Vt.%s, 'Vt2.%s}, ['Xns], 'Xmz2
{'Vt.b, 'Vt2.b, 'Vt3.b}['IVLSLane0], ['Xns], 'Xmb3
{'Vt.h, 'Vt2.h, 'Vt3.h}['IVLSLane1], ['Xns], 'Xmb6
{'Vt.s, 'Vt2.s, 'Vt3.s}['IVLSLane2], ['Xns], 'Xmb12
{'Vt.d, 'Vt2.d, 'Vt3.d}['IVLSLane3], ['Xns], 'Xmb24
{'Vt.%s, 'Vt2.%s, 'Vt3.%s}, ['Xns], 'Xmz3
{'Vt.b, 'Vt2.b, 'Vt3.b, 'Vt4.b}['IVLSLane0], ['Xns], 'Xmb4
{'Vt.h, 'Vt2.h, 'Vt3.h, 'Vt4.h}['IVLSLane1], ['Xns], 'Xmb8
{'Vt.s, 'Vt2.s, 'Vt3.s, 'Vt4.s}['IVLSLane2], ['Xns], 'Xmb16
{'Vt.d, 'Vt2.d, 'Vt3.d, 'Vt4.d}['IVLSLane3], ['Xns], 'Xmb32
{'Vt.%1$s, 'Vt2.%1$s, 'Vt3.%1$s, 'Vt4.%1$s}, ['Xns], 'Xmz4
(NEONLoadStoreSingleStructPostIndex)
'Vt.%s, 'IVMIImm8, lsl 'IVMIShiftAmt1
mvni
movi
'Vt.%s, 'IVMIImm8, msl 'IVMIShiftAmt2
'Vt.%s, 'IVMIImm8
'Dd, 'IVMIImm
'Vt.2d, 'IVMIImm
'Vt.%s, 'IVMIImmFPSingle
'Vt.2d, 'IVMIImmFPDouble
(NEONModifiedImmediate)
trn1
trn2
uzp1
uzp2
zip1
zip2
(NEONPerm)
%sd, %sn
%sd, %sn, #0
%sd, %sn, #0.0
(NEONScalar2RegMisc)
frecpx
%sd, %sn, %sm
(NEONScalar3Diff)
(NEONScalar3Same)
%sd, %sn, 'Ve.%s['IVByElemIndex]
(NEONScalarByIndexedElement)
(NEONScalarCopy)
%sd, 'Vn.%s['IVInsIndex1]
(NEONScalarPairwise)
%sd, %sn, 'Is1
%sd, %sn, 'Is2
sshr
ushr
srshr
urshr
ssra
usra
srsra
ursra
sqshlu
uqshrn
uqrshrn
sqshrn
sqrshrn
sqshrun
sqrshrun
(NEONScalarShiftImmediate)
'Vd.%s, 'Vn.%s, 'Is1
'Vd.%s, 'Vn.%s, 'Is2
shrn2
shrn
rshrn2
rshrn
uqshrn2
uqrshrn2
sqshrn2
sqrshrn2
sqshrun2
sqrshrun2
sxtl2
sxtl
sshll2
sshll
uxtl2
uxtl
ushll2
ushll
(NEONShiftImmediate)
(NEONTable)
'Vd.%%s, {'Vn.16b}, 'Vm.%%s
'Vd.%%s, {'Vn.16b, v%d.16b}, 'Vm.%%s
'Vd.%%s, {'Vn.16b, v%d.16b, v%d.16b}, 'Vm.%%s
'Vd.%%s, {'Vn.16b, v%d.16b, v%d.16b, v%d.16b}, 'Vm.%%s
(Unimplemented)
(Unallocated)
%c%d
%czr
#0x%llx
, lsl #%d
pc%+d
, #%d
#%c0x%llx
#0x%llx (%lld)
#0x%x (%.4f)
#%c%c%c%c
#0x%x
#%lld
IVInsIndex
IVInsIndex1
IVInsIndex2
IVMIImmFPSingle
IVMIImmFPDouble
IVMIImm8
IVMIImm
IVMIShiftAmt1
IVMIShiftAmt2
(addr 0x%016lx)
, %s #%d
#%c0x%x (addr %p)
#%c0x%llx (addr %p)
uxtw
uxtx
sxtx
, %s
 #%d
undefined
strm
keep
p%sl%d%s
sy (0b0000)
oshld
oshst
sy (0b0100)
nshld
nshst
sy (0b1000)
ishld
ishst
sy (0b1100)
0x%016llx  %08x
noreg
%08x       %s
Can't open output file %s. Using stderr.
# counters=%d
# sample_period=%llu
Instruction
%llu,
# %c%c @ %lld
# Error: Unknown counter "%s". Exiting.
PC Addressing
Add/Sub DP
Logical DP
Move Immediate
Other Int DP
Unconditional Branch
Compare and Branch
Test and Branch
Conditional Branch
Other
Load Pair
Store Pair
Load Literal
Load Integer
Store Integer
Load FP
Store FP
Load Acquire
Store Release
Conditional Compare
Conditional Select
FP DP
NEON
static_cast<size_t>(register_parameter_count) <= (sizeof(ArraySizeHelper(default_stub_registers)))
f->nargs < 0 || f->nargs == num_arguments
builtin_index != Builtins::kNoBuiltinId
[ DecompressTaggedSigned
[ DecompressTaggedPointer
[ DecompressAnyTagged
!available->IsEmpty()
UNREACHABLE
!FLAG_trace_sim && !FLAG_log_instruction_stats
Call to host function at %p
  with unaligned stack 0x%016llx.
ALIGNMENT EXCEPTION
Type: Unknown.
Type: BUILTIN_CALL
Arguments: 0x%016llx, 0x%016llx, 0x%016llx, 0x%016llx, 0x%016llx, 0x%016llx, 0x%016llx, 0x%016llx, 0x%016llx
Returned: {%p, %p}
Type: DIRECT_API_CALL
Arguments: 0x%016llx
No return value.
Type: BUILTIN_COMPARE_CALL
Arguments: %f, %f
Returned: %lld
Type: BUILTIN_FP_CALL
Argument: %f
Returned: %f
Type: BUILTIN_FP_FP_CALL
Type: BUILTIN_FP_INT_CALL
Arguments: %f, %d
Type: DIRECT_GETTER_CALL
Arguments: 0x%016llx, 0x%016llx
Type: PROFILING_API_CALL
Arguments: 0x%016llx, %p
Type: PROFILING_GETTER_CALL
Arguments: 0x%016llx, 0x%016llx, %p
Existing breakpoint at %p was %s
disabled
Set a breakpoint at %p
Breakpoints:
%p  : %s
Hit and disabled a breakpoint at %p.
# %s%5s: %s
%02x
 (%s%s: 
 (..., 
%s%s%#g%s
, ...
<15:0>
<7:0>
# %s%5s%s: 
%s0x%0*llx%s
# %sNZCV: %sN:%d Z:%d C:%d V:%d%s
0b00 (Round to Nearest)
0b01 (Round towards Plus Infinity)
0b10 (Round towards Minus Infinity)
0b11 (Round towards Zero)
# %sFPCR: %sAHP:%d DN:%d FZ:%d RMode:%s%s
 <- %s0x%016lx%s
 -> %s0x%016lx%s
Unimplemented instruction at %p: 0x%08x
Unallocated instruction at %p: 0x%08x
ACCESS BELOW STACK POINTER:
  sp is here:          0x%016llx
  access was here:     0x%016llx
  stack limit is here: 0x%016llx
ACCESS BELOW STACK POINTER
%llu
%s sp:%s 0x%016llx%s
%s wsp:%s 0x%08x%s
%s %s:%s 0x%016llx%s (%s%s:%s %g%s %s:%s %g%s)
%s %s:%s %g%s
%s %s:%s 0x%08x%s
%s %s:%s 0x%016llx%s
sim> 
%63s %255s %255s
stepi
cont
disassemble
disasm
print
%s unrecognized
print <register>
    Print the content of a register. (alias 'p')
    'print all' will print all registers.
    Use 'printobject' to get more details about the value.
printobject
 unrecognized
printobject <value>
printobject <register>
    Print details about the value. (alias 'po')
Printing 10 double words by default
  0x%016llx:  0x%016llx %10lld
smi %d
Enabling disassembly and registers tracing
Disabling disassembly and registers tracing
Use `break <address>` to set or disable a breakpoint
Relinquishing control to gdb.
Regaining control from gdb.
stepi / si
    stepi <n>
    Step <n> instructions.
next / n
    Continue execution until a BL instruction is reached.
    At this point a breakpoint is set just after this BL.
    Then execution is resumed. It will probably later hit the
    breakpoint just set.
continue / cont / c
    Continue execution from here.
disassemble / disasm / di
    disassemble <n> <address>
    Disassemble <n> instructions from current <address>.
    By default <n> is 20 and <address> is the current pc.
print / p
    print <register>
    Print the content of a register.
    'print all' will print all registers.
    Use 'printobject' to get more details about the value.
printobject / po
    printobject <value>
    printobject <register>
    Print details about the value.
stack
    stack [<words>]
    Dump stack content, default dump 10 words
    mem <address> [<words>]
    Dump memory content, default dump 10 words
trace / t
    Toggle disassembly and register tracing
break / b
    break : list all breakpoints
    break <address> : set / enable / disable a breakpoint.
    Enter gdb.
sysregs
    Print all system registers (including NZCV).
Unknown command: %s
Use 'help' for more information.
# %sDebugger hit %d: %s%s%s
Hit UNREACHABLE marker at PC=%p.
placeholder_count < arg_count
placeholder_count == arg_count
[1;35m
[0;35m
[0;m
[1;36m
[0;36m
[1;37m
[1;34m
Run --debug-sim to dynamically turn on disassembler
[1;33m
[0;33m
[0;32m
!instr->InputAt(0)->IsImmediate()
kArchDebugAbort
kArchDebugBreak
-- OSR entrypoint --
poisoning_level_ != PoisoningMitigationLevel::kDontPoison
<fd:%d>
%s%s%s
request does not fit in an int
request does not fit in a size_t
out of room to push characters
internal error: inflate stream corrupt
compressed data error
requested length does not fit in int
internal error: deflate stream corrupt
invalid stored block lengths
too many length or distance symbols
invalid code lengths set
invalid bit length repeat
invalid code -- missing end-of-block
invalid literal/lengths set
invalid distances set
invalid literal/length code
invalid distance code
invalid distance too far back
incorrect header check
unknown compression method
invalid window size
unknown header flags set
header crc mismatch
incorrect data check
incorrect length check
need dictionary
stream end
file error
stream error
data error
insufficient memory
buffer error
incompatible version
uv_fs_poll_stop
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/fs-poll.c
ctx != NULL
ctx->parent_handle == handle
uv_fs_poll_getpath
timer_cb
ctx->parent_handle != NULL
ctx->parent_handle->poll_ctx == ctx
timer_close_cb
last->previous != NULL
abcdefghijklmnopqrstuvwxyz0123456789
UV_THREADPOOL_SIZE
uv__queue_done
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/threadpool.c
uv__has_active_reqs(req->loop)
check
fs_event
fs_poll
poll
prepare
timer
udp_send
work
Unknown system error %d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/uv-common.c
uv_loop_delete
err == 0
Unknown system error
[%c%c%c] %-8s %p
1.30.1
uv__async_io
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/async.c
w == &loop->async_io_watcher
uv_close
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/core.c
!uv__is_closing(handle)
uv__make_close_pending
handle->flags & UV_HANDLE_CLOSING
!(handle->flags & UV_HANDLE_CLOSED)
uv__accept
sockfd >= 0
uv__close_nocheckstdio
fd > -1
uv__close
fd > STDERR_FILENO
uv__io_init
cb != NULL
fd >= -1
uv__io_start
0 == (events & ~(POLLIN | POLLOUT | UV__POLLRDHUP | UV__POLLPRI))
0 != events
w->fd >= 0
w->fd < INT_MAX
uv__io_stop
loop->watchers[w->fd] == w
loop->nfds > 0
uv__io_active
HOME
TMPDIR
TEMP
TEMPDIR
/tmp
uv__finish_close
uv_fs_access
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/fs.c
path != NULL
uv_fs_chmod
uv_fs_chown
uv_fs_lchown
uv_fs_lstat
uv_fs_mkdir
uv_fs_open
uv_fs_scandir
uv_fs_opendir
uv_fs_readlink
uv_fs_realpath
uv_fs_rmdir
uv_fs_stat
uv_fs_unlink
uv_fs_utime
uv__fs_preadv
nbufs > 0
uv__fs_done
req->result == 0
uv__getaddrinfo_translate_error
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/getaddrinfo.c
!"unknown EAI_* error code"
uv__getaddrinfo_done
req->retcode == 0
uv__getnameinfo_done
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/getnameinfo.c
uv__loop_close
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/loop.c
QUEUE_EMPTY(&loop->wq) && "thread pool work queue not empty!"
!uv__has_active_reqs(loop)
uv_poll_stop
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/poll.c
uv_poll_start
(pevents & ~(UV_READABLE | UV_WRITABLE | UV_DISCONNECT | UV_PRIORITIZED)) == 0
uv_spawn
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/process.c
options->file != NULL
!(options->flags & ~(UV_PROCESS_DETACHED | UV_PROCESS_SETGID | UV_PROCESS_SETUID | UV_PROCESS_WINDOWS_HIDE | UV_PROCESS_WINDOWS_HIDE_CONSOLE | UV_PROCESS_WINDOWS_HIDE_GUI | UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS))
err == pid
uv__process_init_stdio
container->data.stream != NULL
0 && "Unexpected flags"
uv__chld
signum == SIGCHLD
QUEUE_EMPTY(&pending)
uv__write_int
n == sizeof(val)
uv_signal_stop
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/signal.c
uv__signal_event
!(handle->flags & UV_HANDLE_CLOSING)
uv__signal_start
uv__signal_handler
r == sizeof msg || (r == -1 && (errno == EAGAIN || errno == EWOULDBLOCK))
uv__signal_stop
ret == 0
(libuv) kqueue()
uv__stream_open
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/stream.c
fd >= 0
uv__stream_destroy
!uv__io_active(&stream->io_watcher, POLLIN | POLLOUT)
stream->flags & UV_HANDLE_CLOSED
uv__has_active_reqs(stream->loop)
stream->write_queue_size == 0
uv__server_io
events & POLLIN
stream->accepted_fd == -1
!(stream->flags & UV_HANDLE_CLOSING)
uv_accept
server->loop == client->loop
queued_fds->offset > 0
uv_shutdown
stream->type == UV_TCP || stream->type == UV_TTY || stream->type == UV_NAMED_PIPE
uv__stream_fd(stream) >= 0
uv_write2
(stream->type == UV_TCP || stream->type == UV_NAMED_PIPE || stream->type == UV_TTY) && "uv_write (unix) does not yet support other types of streams"
!(stream->flags & UV_HANDLE_BLOCKING_WRITES)
uv_try_write
uv_read_start
stream->type == UV_TCP || stream->type == UV_NAMED_PIPE || stream->type == UV_TTY
alloc_cb
uv___stream_fd
handle->type == UV_TCP || handle->type == UV_TTY || handle->type == UV_NAMED_PIPE
uv__stream_close
!uv__io_active(&handle->io_watcher, POLLIN | POLLOUT)
uv__stream_osx_select_cb
events != 0
events == (events & (POLLIN | POLLOUT))
uv__stream_osx_select
events != 0 || FD_ISSET(s->int_fd, s->sread)
(s->events == 0) || (stream->flags & UV_HANDLE_CLOSING)
uv__write_callbacks
uv__stream_osx_interrupt_select
r == 1
uv__stream_io
uv__stream_connect
stream->type == UV_TCP || stream->type == UV_NAMED_PIPE
uv__read
stream->alloc_cb != NULL
ignoring non-SCM_RIGHTS ancillary data: %d
uv__stream_recv_cmsg
start + CMSG_LEN(count * sizeof(*pi)) == end
uv__drain
stream->shutdown_req
uv__write
req->handle == stream
fd_to_send >= 0
uv__write_req_update
n <= stream->write_queue_size
uv__write_req_size
req->bufs != NULL
req->handle->write_queue_size >= size
uv__tcp_connect
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/tcp.c
handle->type == UV_TCP
UV_TCP_SINGLE_ACCEPT
uv_barrier_destroy
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/thread.c
b->in == 0
b->out == 0
uv__udp_finish_close
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/udp.c
handle->io_watcher.fd == -1
handle->send_queue_size == 0
handle->send_queue_count == 0
uv__udp_send
addrlen <= sizeof(req->addr)
uv__has_active_reqs(handle->loop)
uv__udp_try_send
handle->flags & UV_HANDLE_UDP_CONNECTED
uv_udp_set_multicast_interface
uv__udp_run_completed
!(handle->flags & UV_HANDLE_UDP_PROCESSING)
uv__udp_maybe_deferred_bind
0 && "unsupported address family"
uv__udp_sendmsg
q != NULL
uv__udp_io
handle->type == UV_UDP
uv__udp_recvmsg
handle->recv_cb != NULL
handle->alloc_cb != NULL
uv_setup_args
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/proctitle.c
process_title.len + 1 == size
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/darwin.c
err == KERN_SUCCESS
machdep.cpu.brand_string
hw.model
hw.cpufrequency
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/fsevents.c
uv__cf_loop_signal
state != NULL
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
CFArrayCreate
CFRelease
CFRunLoopAddSource
CFRunLoopGetCurrent
CFRunLoopRemoveSource
CFRunLoopRun
CFRunLoopSourceCreate
CFRunLoopSourceSignal
CFRunLoopStop
CFRunLoopWakeUp
CFStringCreateWithFileSystemRepresentation
CFStringGetSystemEncoding
kCFRunLoopDefaultMode
FSEventStreamCreate
FSEventStreamFlushSync
FSEventStreamInvalidate
FSEventStreamRelease
FSEventStreamScheduleWithRunLoop
FSEventStreamStart
FSEventStreamStop
uv__fsevents_reschedule
q != &state->fsevent_handles
curr->realpath != NULL
uv__fsevents_create_stream
ref != NULL
uv__fsevents_event_cb
uv__fsevents_push_event
events != NULL || err != 0
pthread_setname_np
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
CFStringCreateWithCString
CFBundleGetBundleWithIdentifier
CFBundleGetDataPointerForName
CFBundleGetFunctionPointerForName
com.apple.LaunchServices
_LSGetCurrentApplicationASN
_LSSetApplicationInformationItem
_kLSDisplayNameKey
CFBundleGetInfoDictionary
CFBundleGetMainBundle
com.apple.HIServices
SetApplicationIsDaemon
_LSApplicationCheckIn
_LSSetApplicationLaunchServicesServerConnectionStatus
uv__io_poll
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/uv/src/unix/kqueue.c
QUEUE_EMPTY(&loop->watcher_queue)
w->pevents != 0
w->fd < (int) loop->nwatchers
timeout >= -1
timeout != -1
loop->watchers != NULL
w->events == POLLIN
w->pevents == POLLIN
timeout > 0
uv__platform_invalidate_fd
!create_heap_objects_
dummy
native dummy.js
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/bio_ssl.c
client finished
server finished
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/d1_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/d1_msg.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/d1_srtp.c
SRTP_AES128_CM_SHA1_80
SRTP_AES128_CM_SHA1_32
SRTP_AEAD_AES_128_GCM
SRTP_AEAD_AES_256_GCM
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/packet.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/pqueue.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/record/rec_layer_d1.c
SSL alert number 
read header
read body
read done
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/record/rec_layer_s3.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/record/ssl3_buffer.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/record/ssl3_record.c
GET 
POST 
HEAD 
PUT 
CONNE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/record/ssl3_record_tls13.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/s3_enc.c
CLNT
SRVR
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/s3_lib.c
TLS_AES_128_GCM_SHA256
TLS_AES_256_GCM_SHA384
TLS_CHACHA20_POLY1305_SHA256
TLS_AES_128_CCM_SHA256
TLS_AES_128_CCM_8_SHA256
NULL-MD5
TLS_RSA_WITH_NULL_MD5
NULL-SHA
TLS_RSA_WITH_NULL_SHA
AES128-SHA
TLS_RSA_WITH_AES_128_CBC_SHA
DHE-DSS-AES128-SHA
TLS_DHE_DSS_WITH_AES_128_CBC_SHA
DHE-RSA-AES128-SHA
TLS_DHE_RSA_WITH_AES_128_CBC_SHA
ADH-AES128-SHA
TLS_DH_anon_WITH_AES_128_CBC_SHA
AES256-SHA
TLS_RSA_WITH_AES_256_CBC_SHA
DHE-DSS-AES256-SHA
TLS_DHE_DSS_WITH_AES_256_CBC_SHA
DHE-RSA-AES256-SHA
TLS_DHE_RSA_WITH_AES_256_CBC_SHA
ADH-AES256-SHA
TLS_DH_anon_WITH_AES_256_CBC_SHA
NULL-SHA256
TLS_RSA_WITH_NULL_SHA256
AES128-SHA256
TLS_RSA_WITH_AES_128_CBC_SHA256
AES256-SHA256
TLS_RSA_WITH_AES_256_CBC_SHA256
DHE-DSS-AES128-SHA256
TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
DHE-RSA-AES128-SHA256
TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
DHE-DSS-AES256-SHA256
TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
DHE-RSA-AES256-SHA256
TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
ADH-AES128-SHA256
TLS_DH_anon_WITH_AES_128_CBC_SHA256
ADH-AES256-SHA256
TLS_DH_anon_WITH_AES_256_CBC_SHA256
AES128-GCM-SHA256
TLS_RSA_WITH_AES_128_GCM_SHA256
AES256-GCM-SHA384
TLS_RSA_WITH_AES_256_GCM_SHA384
DHE-RSA-AES128-GCM-SHA256
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
DHE-RSA-AES256-GCM-SHA384
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
DHE-DSS-AES128-GCM-SHA256
TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
DHE-DSS-AES256-GCM-SHA384
TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
ADH-AES128-GCM-SHA256
TLS_DH_anon_WITH_AES_128_GCM_SHA256
ADH-AES256-GCM-SHA384
TLS_DH_anon_WITH_AES_256_GCM_SHA384
AES128-CCM
TLS_RSA_WITH_AES_128_CCM
AES256-CCM
TLS_RSA_WITH_AES_256_CCM
DHE-RSA-AES128-CCM
TLS_DHE_RSA_WITH_AES_128_CCM
DHE-RSA-AES256-CCM
TLS_DHE_RSA_WITH_AES_256_CCM
AES128-CCM8
TLS_RSA_WITH_AES_128_CCM_8
AES256-CCM8
TLS_RSA_WITH_AES_256_CCM_8
DHE-RSA-AES128-CCM8
TLS_DHE_RSA_WITH_AES_128_CCM_8
DHE-RSA-AES256-CCM8
TLS_DHE_RSA_WITH_AES_256_CCM_8
PSK-AES128-CCM
TLS_PSK_WITH_AES_128_CCM
PSK-AES256-CCM
TLS_PSK_WITH_AES_256_CCM
DHE-PSK-AES128-CCM
TLS_DHE_PSK_WITH_AES_128_CCM
DHE-PSK-AES256-CCM
TLS_DHE_PSK_WITH_AES_256_CCM
PSK-AES128-CCM8
TLS_PSK_WITH_AES_128_CCM_8
PSK-AES256-CCM8
TLS_PSK_WITH_AES_256_CCM_8
DHE-PSK-AES128-CCM8
TLS_PSK_DHE_WITH_AES_128_CCM_8
DHE-PSK-AES256-CCM8
TLS_PSK_DHE_WITH_AES_256_CCM_8
ECDHE-ECDSA-AES128-CCM
TLS_ECDHE_ECDSA_WITH_AES_128_CCM
ECDHE-ECDSA-AES256-CCM
TLS_ECDHE_ECDSA_WITH_AES_256_CCM
ECDHE-ECDSA-AES128-CCM8
TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
ECDHE-ECDSA-AES256-CCM8
TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8
ECDHE-ECDSA-NULL-SHA
TLS_ECDHE_ECDSA_WITH_NULL_SHA
ECDHE-ECDSA-AES128-SHA
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
ECDHE-ECDSA-AES256-SHA
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
ECDHE-RSA-NULL-SHA
TLS_ECDHE_RSA_WITH_NULL_SHA
ECDHE-RSA-AES128-SHA
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
ECDHE-RSA-AES256-SHA
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
AECDH-NULL-SHA
TLS_ECDH_anon_WITH_NULL_SHA
AECDH-AES128-SHA
TLS_ECDH_anon_WITH_AES_128_CBC_SHA
AECDH-AES256-SHA
TLS_ECDH_anon_WITH_AES_256_CBC_SHA
ECDHE-ECDSA-AES128-SHA256
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
ECDHE-ECDSA-AES256-SHA384
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
ECDHE-RSA-AES128-SHA256
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
ECDHE-RSA-AES256-SHA384
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
ECDHE-ECDSA-AES128-GCM-SHA256
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
ECDHE-ECDSA-AES256-GCM-SHA384
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
ECDHE-RSA-AES128-GCM-SHA256
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
ECDHE-RSA-AES256-GCM-SHA384
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
PSK-NULL-SHA
TLS_PSK_WITH_NULL_SHA
DHE-PSK-NULL-SHA
TLS_DHE_PSK_WITH_NULL_SHA
RSA-PSK-NULL-SHA
TLS_RSA_PSK_WITH_NULL_SHA
PSK-AES128-CBC-SHA
TLS_PSK_WITH_AES_128_CBC_SHA
PSK-AES256-CBC-SHA
TLS_PSK_WITH_AES_256_CBC_SHA
DHE-PSK-AES128-CBC-SHA
TLS_DHE_PSK_WITH_AES_128_CBC_SHA
DHE-PSK-AES256-CBC-SHA
TLS_DHE_PSK_WITH_AES_256_CBC_SHA
RSA-PSK-AES128-CBC-SHA
TLS_RSA_PSK_WITH_AES_128_CBC_SHA
RSA-PSK-AES256-CBC-SHA
TLS_RSA_PSK_WITH_AES_256_CBC_SHA
PSK-AES128-GCM-SHA256
TLS_PSK_WITH_AES_128_GCM_SHA256
PSK-AES256-GCM-SHA384
TLS_PSK_WITH_AES_256_GCM_SHA384
DHE-PSK-AES128-GCM-SHA256
TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
DHE-PSK-AES256-GCM-SHA384
TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
RSA-PSK-AES128-GCM-SHA256
TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
RSA-PSK-AES256-GCM-SHA384
TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
PSK-AES128-CBC-SHA256
TLS_PSK_WITH_AES_128_CBC_SHA256
PSK-AES256-CBC-SHA384
TLS_PSK_WITH_AES_256_CBC_SHA384
PSK-NULL-SHA256
TLS_PSK_WITH_NULL_SHA256
PSK-NULL-SHA384
TLS_PSK_WITH_NULL_SHA384
DHE-PSK-AES128-CBC-SHA256
TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
DHE-PSK-AES256-CBC-SHA384
TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
DHE-PSK-NULL-SHA256
TLS_DHE_PSK_WITH_NULL_SHA256
DHE-PSK-NULL-SHA384
TLS_DHE_PSK_WITH_NULL_SHA384
RSA-PSK-AES128-CBC-SHA256
TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
RSA-PSK-AES256-CBC-SHA384
TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
RSA-PSK-NULL-SHA256
TLS_RSA_PSK_WITH_NULL_SHA256
RSA-PSK-NULL-SHA384
TLS_RSA_PSK_WITH_NULL_SHA384
ECDHE-PSK-AES128-CBC-SHA
TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
ECDHE-PSK-AES256-CBC-SHA
TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
ECDHE-PSK-AES128-CBC-SHA256
TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
ECDHE-PSK-AES256-CBC-SHA384
TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
ECDHE-PSK-NULL-SHA
TLS_ECDHE_PSK_WITH_NULL_SHA
ECDHE-PSK-NULL-SHA256
TLS_ECDHE_PSK_WITH_NULL_SHA256
ECDHE-PSK-NULL-SHA384
TLS_ECDHE_PSK_WITH_NULL_SHA384
SRP-AES-128-CBC-SHA
TLS_SRP_SHA_WITH_AES_128_CBC_SHA
SRP-RSA-AES-128-CBC-SHA
TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA
SRP-DSS-AES-128-CBC-SHA
TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA
SRP-AES-256-CBC-SHA
TLS_SRP_SHA_WITH_AES_256_CBC_SHA
SRP-RSA-AES-256-CBC-SHA
TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA
SRP-DSS-AES-256-CBC-SHA
TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA
DHE-RSA-CHACHA20-POLY1305
TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
ECDHE-RSA-CHACHA20-POLY1305
TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
ECDHE-ECDSA-CHACHA20-POLY1305
TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
PSK-CHACHA20-POLY1305
TLS_PSK_WITH_CHACHA20_POLY1305_SHA256
ECDHE-PSK-CHACHA20-POLY1305
TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
DHE-PSK-CHACHA20-POLY1305
TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256
RSA-PSK-CHACHA20-POLY1305
TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256
CAMELLIA128-SHA256
TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
DHE-DSS-CAMELLIA128-SHA256
TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256
DHE-RSA-CAMELLIA128-SHA256
TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
ADH-CAMELLIA128-SHA256
TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256
CAMELLIA256-SHA256
TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256
DHE-DSS-CAMELLIA256-SHA256
TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256
DHE-RSA-CAMELLIA256-SHA256
TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256
ADH-CAMELLIA256-SHA256
TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256
CAMELLIA256-SHA
TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
DHE-DSS-CAMELLIA256-SHA
TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
DHE-RSA-CAMELLIA256-SHA
TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
ADH-CAMELLIA256-SHA
TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA
CAMELLIA128-SHA
TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
DHE-DSS-CAMELLIA128-SHA
TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
DHE-RSA-CAMELLIA128-SHA
TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
ADH-CAMELLIA128-SHA
TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA
ECDHE-ECDSA-CAMELLIA128-SHA256
TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
ECDHE-ECDSA-CAMELLIA256-SHA384
TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
ECDHE-RSA-CAMELLIA128-SHA256
TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
ECDHE-RSA-CAMELLIA256-SHA384
TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384
PSK-CAMELLIA128-SHA256
TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256
PSK-CAMELLIA256-SHA384
TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384
DHE-PSK-CAMELLIA128-SHA256
TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
DHE-PSK-CAMELLIA256-SHA384
TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
RSA-PSK-CAMELLIA128-SHA256
TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256
RSA-PSK-CAMELLIA256-SHA384
TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384
ECDHE-PSK-CAMELLIA128-SHA256
TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
ECDHE-PSK-CAMELLIA256-SHA384
TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
IDEA-CBC-SHA
TLS_RSA_WITH_IDEA_CBC_SHA
SEED-SHA
TLS_RSA_WITH_SEED_CBC_SHA
DHE-DSS-SEED-SHA
TLS_DHE_DSS_WITH_SEED_CBC_SHA
DHE-RSA-SEED-SHA
TLS_DHE_RSA_WITH_SEED_CBC_SHA
ADH-SEED-SHA
TLS_DH_anon_WITH_SEED_CBC_SHA
ARIA128-GCM-SHA256
TLS_RSA_WITH_ARIA_128_GCM_SHA256
ARIA256-GCM-SHA384
TLS_RSA_WITH_ARIA_256_GCM_SHA384
DHE-RSA-ARIA128-GCM-SHA256
TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256
DHE-RSA-ARIA256-GCM-SHA384
TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384
DHE-DSS-ARIA128-GCM-SHA256
TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256
DHE-DSS-ARIA256-GCM-SHA384
TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384
ECDHE-ECDSA-ARIA128-GCM-SHA256
TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256
ECDHE-ECDSA-ARIA256-GCM-SHA384
TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384
ECDHE-ARIA128-GCM-SHA256
TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256
ECDHE-ARIA256-GCM-SHA384
TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384
PSK-ARIA128-GCM-SHA256
TLS_PSK_WITH_ARIA_128_GCM_SHA256
PSK-ARIA256-GCM-SHA384
TLS_PSK_WITH_ARIA_256_GCM_SHA384
DHE-PSK-ARIA128-GCM-SHA256
TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256
DHE-PSK-ARIA256-GCM-SHA384
TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384
RSA-PSK-ARIA128-GCM-SHA256
TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256
RSA-PSK-ARIA256-GCM-SHA384
TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384
TLS_EMPTY_RENEGOTIATION_INFO_SCSV
TLS_FALLBACK_SCSV
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/s3_msg.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_asn1.c
SSL_SESSION_ASN1
ssl_version
cipher
session_id
master_key
key_arg
peer
session_id_context
verify_result
tlsext_hostname
psk_identity_hint
psk_identity
tlsext_tick_lifetime_hint
tlsext_tick
comp_id
srp_username
tlsext_tick_age_add
max_early_data
alpn_selected
tlsext_max_fragment_len_mode
ticket_appdata
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_cert.c
ssl_client
ssl_server
%s/%s
OPENSSL_DIR_read(&ctx, '
Verify error:
SSL for verify callback
gost-mac
gost-mac-12
gost2001
gost2012_256
gost2012_512
RC4-HMAC-MD5
AES-128-CBC-HMAC-SHA1
AES-256-CBC-HMAC-SHA1
AES-128-CBC-HMAC-SHA256
AES-256-CBC-HMAC-SHA256
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_ciph.c
ALL:!COMPLEMENTOFDEFAULT:!eNULL
%-23s %s Kx=%-8s Au=%-4s Enc=%-9s Mac=%-4s
RSAPSK
ECDHEPSK
DHEPSK
GOST
ECDSA
GOST01
GOST12
DES(56)
3DES(168)
RC4(128)
RC2(128)
IDEA(128)
AES(128)
AES(256)
AESGCM(128)
AESGCM(256)
AESCCM(128)
AESCCM(256)
AESCCM8(128)
AESCCM8(256)
Camellia(128)
Camellia(256)
ARIAGCM(128)
ARIAGCM(256)
SEED(128)
GOST89(256)
CHACHA20/POLY1305(256)
SHA256
SHA384
AEAD
GOST89
GOST94
GOST2012
(NONE)
TLSv1.0
SUITEB128ONLY
SUITEB128C2
SUITEB128
SUITEB192
ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384
COMPLEMENTOFALL
COMPLEMENTOFDEFAULT
kRSA
kEDH
kDHE
kEECDH
kECDHE
kPSK
kRSAPSK
kECDHEPSK
kDHEPSK
kSRP
kGOST
aRSA
aDSS
aNULL
aECDSA
aPSK
aGOST01
aGOST12
aGOST
aSRP
EECDH
ECDHE
NULL
AECDH
3DES
IDEA
SEED
eNULL
AES128
AES256
AESGCM
AESCCM
AESCCM8
CAMELLIA128
CAMELLIA256
CAMELLIA
CHACHA20
ARIA
ARIAGCM
ARIA128
ARIA256
GOST89MAC
SSLv3
TLSv1
TLSv1.2
MEDIUM
HIGH
FIPS
EDH-DSS-DES-CBC3-SHA
EDH-RSA-DES-CBC3-SHA
STRENGTH
SECLEVEL=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_conf.c
cmd=
, value=
no_ssl3
no_tls1
no_tls1_1
no_tls1_2
no_tls1_3
bugs
no_comp
comp
ecdh_single
no_ticket
serverpref
legacy_renegotiation
legacy_server_connect
no_renegotiation
no_resumption_on_reneg
no_legacy_server_connect
allow_no_dhe_kex
prioritize_chacha
no_middlebox
anti_replay
no_anti_replay
SignatureAlgorithms
sigalgs
ClientSignatureAlgorithms
client_sigalgs
Curves
curves
Groups
groups
ECDHParameters
named_curve
CipherString
Ciphersuites
ciphersuites
Protocol
MinProtocol
min_protocol
MaxProtocol
max_protocol
Options
VerifyMode
Certificate
PrivateKey
ServerInfoFile
ChainCAPath
chainCApath
ChainCAFile
chainCAfile
VerifyCAPath
verifyCApath
VerifyCAFile
verifyCAfile
RequestCAFile
requestCAFile
ClientCAFile
RequestCAPath
ClientCAPath
DHParameters
dhparam
RecordPadding
record_padding
NumTickets
num_tickets
+automatic
automatic
SSLv2
TLSv1.1
TLSv1.3
DTLSv1
DTLSv1.2
SessionTicket
EmptyFragments
Bugs
Compression
ServerPreference
NoResumptionOnRenegotiation
DHSingle
ECDHSingle
UnsafeLegacyRenegotiation
EncryptThenMac
NoRenegotiation
AllowNoDHEKEX
PrioritizeChaCha
MiddleboxCompat
AntiReplay
Peer
Require
Once
RequestPostHandshake
RequirePostHandshake
add_key_share
bytes_to_cipher_list
check_suiteb_cipher_list
ciphersuite_cb
construct_ca_names
construct_key_exchange_tbs
construct_stateful_ticket
construct_stateless_ticket
create_synthetic_message_hash
create_ticket_prequel
ct_move_scts
ct_strict
custom_ext_add
custom_ext_parse
d2i_SSL_SESSION
dane_ctx_enable
dane_mtype_set
dane_tlsa_add
derive_secret_key_and_iv
do_dtls1_write
do_ssl3_write
dtls1_buffer_record
dtls1_check_timeout_num
dtls1_hm_fragment_new
dtls1_preprocess_fragment
dtls1_process_buffered_records
dtls1_process_record
dtls1_read_bytes
dtls1_read_failed
dtls1_retransmit_message
dtls1_write_app_data_bytes
dtls1_write_bytes
DTLSv1_listen
dtls_construct_change_cipher_spec
dtls_construct_hello_verify_request
dtls_get_reassembled_message
dtls_process_hello_verify
DTLS_RECORD_LAYER_new
dtls_wait_for_dry
early_data_count_ok
final_early_data
final_ec_pt_formats
final_ems
final_key_share
final_maxfragmentlen
final_renegotiate
final_server_name
final_sig_algs
get_cert_verify_tbs_data
nss_keylog_int
OPENSSL_init_ssl
ossl_statem_client13_write_transition
ossl_statem_client_post_process_message
ossl_statem_client_process_message
ossl_statem_client_read_transition
ossl_statem_client_write_transition
ossl_statem_server13_write_transition
ossl_statem_server_post_process_message
ossl_statem_server_post_work
ossl_statem_server_process_message
ossl_statem_server_read_transition
ossl_statem_server_write_transition
parse_ca_names
pitem_new
pqueue_new
read_state_machine
set_client_ciphersuite
srp_generate_client_master_secret
srp_generate_server_master_secret
srp_verify_server_param
ssl3_change_cipher_state
ssl3_check_cert_and_algorithm
ssl3_ctrl
ssl3_ctx_ctrl
ssl3_digest_cached_records
ssl3_do_change_cipher_spec
ssl3_enc
ssl3_final_finish_mac
ssl3_finish_mac
ssl3_generate_key_block
ssl3_generate_master_secret
ssl3_get_record
ssl3_init_finished_mac
ssl3_output_cert_chain
ssl3_read_bytes
ssl3_read_n
ssl3_setup_key_block
ssl3_setup_read_buffer
ssl3_setup_write_buffer
ssl3_write_bytes
ssl3_write_pending
ssl_add_cert_chain
ssl_add_cert_to_wpacket
SSL_add_dir_cert_subjects_to_stack
SSL_add_file_cert_subjects_to_stack
ssl_bad_method
ssl_build_cert_chain
SSL_bytes_to_cipher_list
ssl_cache_cipherlist
ssl_cert_add0_chain_cert
ssl_cert_dup
ssl_cert_new
ssl_cert_set0_chain
SSL_check_private_key
ssl_check_srp_ext_ClientHello
ssl_check_srvr_ecc_cert_and_alg
ssl_choose_client_version
SSL_CIPHER_description
ssl_cipher_list_to_bytes
ssl_cipher_process_rulestr
ssl_cipher_strength_sort
SSL_clear
SSL_client_hello_get1_extensions_present
SSL_COMP_add_compression_method
SSL_CONF_cmd
ssl_create_cipher_list
SSL_ctrl
SSL_CTX_check_private_key
SSL_CTX_enable_ct
ssl_ctx_make_profiles
SSL_CTX_new
SSL_CTX_set_alpn_protos
SSL_CTX_set_cipher_list
SSL_CTX_set_client_cert_engine
SSL_CTX_set_ct_validation_callback
SSL_CTX_set_session_id_context
SSL_CTX_set_ssl_version
SSL_CTX_set_tlsext_max_fragment_length
SSL_CTX_use_certificate
SSL_CTX_use_certificate_ASN1
SSL_CTX_use_certificate_file
SSL_CTX_use_PrivateKey_ASN1
SSL_CTX_use_PrivateKey_file
SSL_CTX_use_psk_identity_hint
SSL_CTX_use_RSAPrivateKey
SSL_CTX_use_RSAPrivateKey_ASN1
SSL_CTX_use_RSAPrivateKey_file
SSL_CTX_use_serverinfo
SSL_CTX_use_serverinfo_ex
SSL_CTX_use_serverinfo_file
ssl_dane_dup
SSL_dane_enable
ssl_derive
ssl_do_config
SSL_do_handshake
SSL_dup_CA_list
SSL_enable_ct
ssl_generate_pkey_group
ssl_generate_session_id
ssl_get_new_session
ssl_get_prev_session
ssl_handshake_hash
ssl_init_wbio_buffer
SSL_key_update
SSL_load_client_CA_file
ssl_log_rsa_client_key_exchange
ssl_module_init
SSL_new
ssl_next_proto_validate
SSL_peek
SSL_peek_ex
ssl_peek_internal
SSL_read
SSL_read_early_data
SSL_read_ex
ssl_read_internal
SSL_renegotiate
SSL_renegotiate_abbreviated
ssl_session_dup
SSL_SESSION_new
SSL_SESSION_print_fp
SSL_SESSION_set1_id
SSL_SESSION_set1_id_context
SSL_set_alpn_protos
ssl_set_cert
ssl_set_cert_and_key
SSL_set_cipher_list
SSL_set_ct_validation_callback
SSL_set_fd
ssl_set_pkey
SSL_set_rfd
SSL_set_session
SSL_set_session_id_context
SSL_set_session_ticket_ext
SSL_set_tlsext_max_fragment_length
SSL_set_wfd
SSL_shutdown
SSL_SRP_CTX_init
ssl_start_async_job
ssl_undefined_function
ssl_undefined_void_function
SSL_use_certificate
SSL_use_certificate_ASN1
SSL_use_certificate_file
SSL_use_PrivateKey
SSL_use_PrivateKey_ASN1
SSL_use_PrivateKey_file
SSL_use_psk_identity_hint
SSL_use_RSAPrivateKey
SSL_use_RSAPrivateKey_ASN1
SSL_use_RSAPrivateKey_file
ssl_validate_ct
ssl_verify_cert_chain
SSL_verify_client_post_handshake
SSL_write
SSL_write_early_data
SSL_write_ex
ssl_write_internal
state_machine
tls12_check_peer_sigalg
tls12_copy_sigalgs
tls13_change_cipher_state
tls13_enc
tls13_final_finish_mac
tls13_generate_secret
tls13_hkdf_expand
tls13_restore_handshake_digest_for_pha
tls13_save_handshake_digest_for_pha
tls13_setup_key_block
tls1_change_cipher_state
tls1_enc
tls1_export_keying_material
tls1_get_curvelist
tls1_PRF
tls1_save_u16
tls1_setup_key_block
tls1_set_groups
tls1_set_raw_sigalgs
tls1_set_server_sigalgs
tls1_set_shared_sigalgs
tls1_set_sigalgs
tls_choose_sigalg
tls_client_key_exchange_post_work
tls_collect_extensions
tls_construct_certificate_authorities
tls_construct_certificate_request
tls_construct_cert_status_body
tls_construct_cert_verify
tls_construct_change_cipher_spec
tls_construct_cke_dhe
tls_construct_cke_ecdhe
tls_construct_cke_gost
tls_construct_cke_psk_preamble
tls_construct_cke_rsa
tls_construct_cke_srp
tls_construct_client_certificate
tls_construct_client_hello
tls_construct_client_key_exchange
tls_construct_ctos_alpn
tls_construct_ctos_cookie
tls_construct_ctos_early_data
tls_construct_ctos_ec_pt_formats
tls_construct_ctos_ems
tls_construct_ctos_etm
tls_construct_ctos_key_share
tls_construct_ctos_maxfragmentlen
tls_construct_ctos_npn
tls_construct_ctos_padding
tls_construct_ctos_post_handshake_auth
tls_construct_ctos_psk
tls_construct_ctos_psk_kex_modes
tls_construct_ctos_renegotiate
tls_construct_ctos_sct
tls_construct_ctos_server_name
tls_construct_ctos_session_ticket
tls_construct_ctos_sig_algs
tls_construct_ctos_srp
tls_construct_ctos_status_request
tls_construct_ctos_supported_groups
tls_construct_ctos_supported_versions
tls_construct_ctos_use_srtp
tls_construct_encrypted_extensions
tls_construct_end_of_early_data
tls_construct_extensions
tls_construct_finished
tls_construct_hello_retry_request
tls_construct_key_update
tls_construct_new_session_ticket
tls_construct_next_proto
tls_construct_server_certificate
tls_construct_server_hello
tls_construct_server_key_exchange
tls_construct_stoc_alpn
tls_construct_stoc_cookie
tls_construct_stoc_cryptopro_bug
tls_construct_stoc_early_data
tls_construct_stoc_ec_pt_formats
tls_construct_stoc_ems
tls_construct_stoc_etm
tls_construct_stoc_key_share
tls_construct_stoc_maxfragmentlen
tls_construct_stoc_next_proto_neg
tls_construct_stoc_psk
tls_construct_stoc_renegotiate
tls_construct_stoc_server_name
tls_construct_stoc_session_ticket
tls_construct_stoc_status_request
tls_construct_stoc_supported_groups
tls_construct_stoc_supported_versions
tls_construct_stoc_use_srtp
tls_early_post_process_client_hello
tls_finish_handshake
tls_get_message_body
tls_get_message_header
tls_handle_alpn
tls_handle_status_request
tls_parse_certificate_authorities
tls_parse_ctos_alpn
tls_parse_ctos_cookie
tls_parse_ctos_early_data
tls_parse_ctos_ec_pt_formats
tls_parse_ctos_ems
tls_parse_ctos_key_share
tls_parse_ctos_maxfragmentlen
tls_parse_ctos_post_handshake_auth
tls_parse_ctos_psk
tls_parse_ctos_psk_kex_modes
tls_parse_ctos_renegotiate
tls_parse_ctos_server_name
tls_parse_ctos_session_ticket
tls_parse_ctos_sig_algs
tls_parse_ctos_sig_algs_cert
tls_parse_ctos_srp
tls_parse_ctos_status_request
tls_parse_ctos_supported_groups
tls_parse_ctos_use_srtp
tls_parse_stoc_alpn
tls_parse_stoc_cookie
tls_parse_stoc_early_data
tls_parse_stoc_ec_pt_formats
tls_parse_stoc_key_share
tls_parse_stoc_maxfragmentlen
tls_parse_stoc_npn
tls_parse_stoc_psk
tls_parse_stoc_renegotiate
tls_parse_stoc_sct
tls_parse_stoc_server_name
tls_parse_stoc_session_ticket
tls_parse_stoc_status_request
tls_parse_stoc_supported_versions
tls_parse_stoc_use_srtp
tls_post_process_client_hello
tls_post_process_client_key_exchange
tls_prepare_client_certificate
tls_process_as_hello_retry_request
tls_process_certificate_request
tls_process_cert_status_body
tls_process_cert_verify
tls_process_change_cipher_spec
tls_process_cke_dhe
tls_process_cke_ecdhe
tls_process_cke_gost
tls_process_cke_psk_preamble
tls_process_cke_rsa
tls_process_cke_srp
tls_process_client_certificate
tls_process_client_hello
tls_process_client_key_exchange
tls_process_encrypted_extensions
tls_process_end_of_early_data
tls_process_finished
tls_process_hello_req
tls_process_hello_retry_request
tls_process_initial_server_flight
tls_process_key_exchange
tls_process_key_update
tls_process_new_session_ticket
tls_process_next_proto
tls_process_server_certificate
tls_process_server_done
tls_process_server_hello
tls_process_ske_dhe
tls_process_ske_ecdhe
tls_process_ske_psk_preamble
tls_process_ske_srp
tls_psk_do_binder
tls_setup_handshake
use_certificate_chain_file
wpacket_intern_init_len
WPACKET_start_sub_packet_len__
write_state_machine
application data after close notify
app data in handshake
attempt to reuse session in different context
at least TLS 1.0 needed in FIPS mode
at least (D)TLS 1.2 needed in Suite B mode
bad change cipher spec
bad cipher
bad data
bad data returned by callback
bad decompression
bad dh value
bad digest length
bad early data
bad ecc cert
bad ecpoint
bad extension
bad handshake length
bad handshake state
bad hello request
bad hrr version
bad key share
bad key update
bad legacy version
bad length
bad packet
bad packet length
bad protocol version number
bad psk
bad psk identity
bad record type
bad rsa encrypt
bad signature
bad srp a length
bad srp parameters
bad srtp mki value
bad srtp protection profile list
bad ssl filetype
bad value
bad write retry
binder does not verify
bio not set
block cipher pad is wrong
bn lib
callback failed
cannot change cipher
ca dn length mismatch
ca key too small
ca md too weak
ccs received early
certificate verify failed
cert cb error
cert length mismatch
ciphersuite digest has changed
cipher code wrong length
cipher or hash unavailable
clienthello tlsext
compressed length too long
compression disabled
compression failure
compression id not within private range
compression library error
connection type not set
context not dane enabled
cookie gen callback failure
cookie mismatch
custom ext handler already installed
dane already enabled
dane cannot override mtype full
dane not enabled
dane tlsa bad certificate
dane tlsa bad certificate usage
dane tlsa bad data length
dane tlsa bad digest length
dane tlsa bad matching type
dane tlsa bad public key
dane tlsa bad selector
dane tlsa null data
data between ccs and finished
data length too long
decryption failed
decryption failed or bad record mac
dh key too small
dh public value length is wrong
digest check failed
dtls message too big
duplicate compression id
ecc cert not for signing
ecdh required for suiteb mode
ee key too small
empty srtp protection profile list
encrypted length too long
error in received cipher list
error setting tlsa base domain
exceeds max fragment size
excessive message size
extension not received
extra data in message
ext length mismatch
failed to init async
fragmented client hello
got a fin before a ccs
https proxy request
http request
illegal point compression
illegal Suite B digest
inappropriate fallback
inconsistent compression
inconsistent early data alpn
inconsistent early data sni
inconsistent extms
insufficient security
invalid alert
invalid ccs message
invalid certificate or alg
invalid command
invalid compression algorithm
invalid config
invalid configuration name
invalid context
invalid ct validation type
invalid key update type
invalid max early data
invalid null cmd name
invalid sequence number
invalid serverinfo data
invalid session id
invalid srp username
invalid status response
invalid ticket keys length
length mismatch
length too long
length too short
library bug
library has no ciphers
missing dsa signing cert
missing ecdsa signing cert
missing fatal
missing parameters
missing rsa certificate
missing rsa encrypting cert
missing rsa signing cert
missing sigalgs extension
missing signing cert
can't find SRP server param
missing supported groups extension
missing tmp dh key
missing tmp ecdh key
mixed handshake and non handshake data
not on record boundary
not replacing certificate
not server
no application protocol
no certificates returned
no certificate assigned
no certificate set
no change following hrr
no ciphers available
no ciphers specified
no cipher match
no client cert method
no compression specified
no cookie callback set
Peer haven't sent GOST certificate, required for selected ciphersuite
no method specified
no pem extensions
no private key assigned
no protocols available
no renegotiation
no required digest
no shared cipher
no shared groups
no shared signature algorithms
no srtp profiles
no suitable key share
no suitable signature algorithm
no valid scts
no verify cookie callback
null ssl ctx
null ssl method passed
old session cipher not returned
old session compression algorithm not returned
overflow error
packet length too long
parse tlsext
path too long
peer did not return a certificate
pem name bad prefix
pem name too short
pipeline failure
post handshake auth encoding err
private key mismatch
protocol is shutdown
psk identity not found
psk no client cb
psk no server cb
read bio not set
read timeout expired
record length mismatch
record too small
renegotiate ext too long
renegotiation encoding err
renegotiation mismatch
request pending
request sent
required cipher missing
required compression algorithm missing
scsv received when renegotiating
sct verification failed
serverhello tlsext
session id context uninitialized
shutdown while in init
signature algorithms error
signature for non signing certificate
error with the srp params
srtp could not allocate profiles
srtp protection profile list too long
srtp unknown protection profile
ssl3 ext invalid max fragment length
ssl3 ext invalid servername
ssl3 ext invalid servername type
ssl3 session id too long
sslv3 alert bad certificate
sslv3 alert bad record mac
sslv3 alert certificate expired
sslv3 alert certificate revoked
sslv3 alert certificate unknown
sslv3 alert decompression failure
sslv3 alert handshake failure
sslv3 alert illegal parameter
sslv3 alert no certificate
sslv3 alert unexpected message
sslv3 alert unsupported certificate
ssl command section empty
ssl command section not found
ssl ctx has no default ssl version
ssl handshake failure
ssl library has no ciphers
ssl negative length
ssl section empty
ssl section not found
ssl session id callback failed
ssl session id conflict
ssl session id context too long
ssl session id has bad length
ssl session id too long
ssl session version mismatch
still in init
tlsv13 alert certificate required
tlsv13 alert missing extension
tlsv1 alert access denied
tlsv1 alert decode error
tlsv1 alert decryption failed
tlsv1 alert decrypt error
tlsv1 alert export restriction
tlsv1 alert inappropriate fallback
tlsv1 alert insufficient security
tlsv1 alert internal error
tlsv1 alert no renegotiation
tlsv1 alert protocol version
tlsv1 alert record overflow
tlsv1 alert unknown ca
tlsv1 alert user cancelled
tlsv1 bad certificate hash value
tlsv1 bad certificate status response
tlsv1 certificate unobtainable
tlsv1 unrecognized name
tlsv1 unsupported extension
peer does not accept heartbeats
heartbeat request already pending
tls illegal exporter label
tls invalid ecpointformat list
too many key updates
too many warn alerts
too much early data
unable to find ecdh parameters
unable to find public key parameters
unable to load ssl3 md5 routines
unable to load ssl3 sha1 routines
unexpected ccs message
unexpected end of early data
unexpected message
unexpected record
uninitialized
unknown alert type
unknown certificate type
unknown cipher returned
unknown cipher type
unknown cmd name
unknown command
unknown digest
unknown key exchange type
unknown pkey type
unknown protocol
unknown ssl version
unknown state
unsafe legacy renegotiation disabled
unsolicited extension
unsupported compression algorithm
unsupported elliptic curve
unsupported protocol
unsupported ssl version
unsupported status type
use srtp not negotiated
version too high
version too low
wrong certificate type
wrong cipher returned
wrong curve
wrong signature length
wrong signature size
wrong signature type
wrong ssl version
wrong version number
x509 lib
x509 verification setup problems
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_init.c
ssl3-md5
ssl3-sha1
RSA-SHA1-2
RSA-SHA1
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_lib.c
TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
DTLSv0.9
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/packet_locl.h
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_mcnf.c
system_default
name=
section=
, cmd=
, arg=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_rsa.c
SERVERINFO FOR 
SERVERINFOV2 FOR 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_sess.c
SSL SESSION PARAMETERS
SSLv3/TLS read certificate status
SSLv3/TLS write next proto
SSLv3/TLS read next proto
SSLv3/TLS write certificate status
before SSL initialization
SSL negotiation finished successfully
SSLv3/TLS write client hello
SSLv3/TLS read server hello
SSLv3/TLS read server certificate
SSLv3/TLS read server key exchange
SSLv3/TLS read server certificate request
SSLv3/TLS read server session ticket
SSLv3/TLS read server done
SSLv3/TLS write client certificate
SSLv3/TLS write client key exchange
SSLv3/TLS write certificate verify
SSLv3/TLS write change cipher spec
SSLv3/TLS write finished
SSLv3/TLS read change cipher spec
SSLv3/TLS read finished
SSLv3/TLS read client hello
SSLv3/TLS write hello request
SSLv3/TLS write server hello
SSLv3/TLS write certificate
SSLv3/TLS write key exchange
SSLv3/TLS write certificate request
SSLv3/TLS write session ticket
SSLv3/TLS write server done
SSLv3/TLS read client certificate
SSLv3/TLS read client key exchange
SSLv3/TLS read certificate verify
DTLS1 read hello verify request
DTLS1 write hello verify request
TLSv1.3 write encrypted extensions
TLSv1.3 read encrypted extensions
TLSv1.3 read server certificate verify
TLSv1.3 write server certificate verify
SSLv3/TLS read hello request
TLSv1.3 write server key update
TLSv1.3 write client key update
TLSv1.3 read client key update
TLSv1.3 read server key update
TLSv1.3 early data
TLSv1.3 pending early data end
TLSv1.3 write end of early data
TLSv1.3 read end of early data
SSLERR
TRNP
TWST
TWCS
TRCS
TRST
TWNP
PINIT 
SSLOK 
TWCH
TRSH
TRSC
TRSKE
TRCR
TRSD
TWCC
TWCKE
TWCV
TWCCS
TWFIN
TRCCS
TRFIN
TWHR
TRCH
TWSH
TWSC
TWSKE
TWCR
TWSD
TRCC
TRCKE
TRCV
DRCHV
DWCHV
TWEE
TREE
TRSCV
TRHR
TWSKU
TWCKU
TRCKU
TRSKU
TPEDE
TWEOED
UNKWN 
fatal
close notify
unexpected_message
bad record mac
decompression failure
handshake failure
no certificate
bad certificate
unsupported certificate
certificate revoked
certificate expired
certificate unknown
illegal parameter
record overflow
unknown CA
access denied
decode error
decrypt error
export restriction
protocol version
internal error
user canceled
unsupported extension
certificate unobtainable
unrecognized name
bad certificate status response
bad certificate hash value
unknown PSK identity
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/ssl_txt.c
SSL-Session:
    Protocol  : %s
    Cipher    : %06lX
    Cipher    : %04lX
    Cipher    : %s
    Session-ID: 
%02X
    Session-ID-ctx: 
    Resumption PSK: 
    Master-Key: 
    PSK identity: 
    PSK identity hint: 
    SRP username: 
    TLS session ticket lifetime hint: %ld (seconds)
    TLS session ticket:
    Start Time: %ld
    Timeout   : %ld (sec)
    Verify return code: 
%ld (%s)
    Extended master secret: %s
    Max Early Data: %u
RSA 
Session-ID:
 Master-Key:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/extensions.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/extensions_clnt.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/../packet_locl.h
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/extensions_cust.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/extensions_srvr.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/statem.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/statem_clnt.c
No ciphers enabled for max supported SSL/TLS version
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/statem_dtls.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/statem_lib.c
CLIENT_RANDOM
TLS 1.3, server CertificateVerify
TLS 1.3, client CertificateVerify
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/statem/statem_srvr.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/t1_enc.c
extended master secret
master secret
key expansion
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/t1_lib.c
rsa_pkcs1_md5_sha1
RSA-PSS
ecdsa_secp256r1_sha256
ecdsa_secp384r1_sha384
ecdsa_secp521r1_sha512
rsa_pss_rsae_sha256
rsa_pss_rsae_sha384
rsa_pss_rsae_sha512
rsa_pss_pss_sha256
rsa_pss_pss_sha384
rsa_pss_pss_sha512
rsa_pkcs1_sha256
rsa_pkcs1_sha384
rsa_pkcs1_sha512
rsa_pkcs1_sha224
rsa_pkcs1_sha1
Sent
Received
 too short message
 Record
Header:
  Version = %s (0x%x)
  epoch=%d, sequence_number=%04x%04x%04x
  Content Type = %s (%d)
  Length = %d
  Inner Content Type = %s (%d)
Message length parse error!
    change_cipher_spec (1)
unknown value
    Illegal Alert Length
    Level=%s(%d), description=%s(%d)
%s (len=%d): 
SSL 3.0
TLS 1.0
TLS 1.1
TLS 1.2
TLS 1.3
DTLS 1.0
DTLS 1.2
DTLS 1.0 (bad)
ChangeCipherSpec
Alert
Handshake
ApplicationData
%s, Length=%d
message_seq=%d, fragment_offset=%d, fragment_length=%d
verify_data
unexpected value
Unsupported, hex dump follows:
HelloRequest
ClientHello
ServerHello
HelloVerifyRequest
NewSessionTicket
EndOfEarlyData
EncryptedExtensions
ServerKeyExchange
CertificateRequest
ServerHelloDone
CertificateVerify
ClientKeyExchange
Finished
CertificateUrl
CertificateStatus
SupplementalData
KeyUpdate
NextProto
MessageHash
client_version
cipher_suites (len=%d)
{0x%02X, 0x%02X} %s
compression_methods (len=%d)
%s (0x%02X)
%s=0x%x (%s)
Random:
gmt_unix_time=0x%08X
random_bytes
TLS_NULL_WITH_NULL_NULL
TLS_RSA_EXPORT_WITH_RC4_40_MD5
TLS_RSA_WITH_RC4_128_MD5
TLS_RSA_WITH_RC4_128_SHA
TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5
TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
TLS_RSA_WITH_DES_CBC_SHA
TLS_RSA_WITH_3DES_EDE_CBC_SHA
TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
TLS_DH_DSS_WITH_DES_CBC_SHA
TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
TLS_DH_RSA_WITH_DES_CBC_SHA
TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
TLS_DHE_DSS_WITH_DES_CBC_SHA
TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
TLS_DHE_RSA_WITH_DES_CBC_SHA
TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
TLS_DH_anon_WITH_RC4_128_MD5
TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
TLS_DH_anon_WITH_DES_CBC_SHA
TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
TLS_KRB5_WITH_3DES_EDE_CBC_SHA
TLS_KRB5_WITH_RC4_128_SHA
TLS_KRB5_WITH_IDEA_CBC_SHA
TLS_KRB5_WITH_DES_CBC_MD5
TLS_KRB5_WITH_3DES_EDE_CBC_MD5
TLS_KRB5_WITH_RC4_128_MD5
TLS_KRB5_WITH_IDEA_CBC_MD5
TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA
TLS_KRB5_EXPORT_WITH_RC4_40_SHA
TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5
TLS_KRB5_EXPORT_WITH_RC4_40_MD5
TLS_DH_DSS_WITH_AES_128_CBC_SHA
TLS_DH_RSA_WITH_AES_128_CBC_SHA
TLS_DH_DSS_WITH_AES_256_CBC_SHA
TLS_DH_RSA_WITH_AES_256_CBC_SHA
TLS_DH_DSS_WITH_AES_128_CBC_SHA256
TLS_DH_RSA_WITH_AES_128_CBC_SHA256
TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA
TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA
TLS_DH_DSS_WITH_AES_256_CBC_SHA256
TLS_DH_RSA_WITH_AES_256_CBC_SHA256
TLS_GOSTR341001_WITH_28147_CNT_IMIT
TLS_GOSTR341001_WITH_NULL_GOSTR3411
TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA
TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA
TLS_PSK_WITH_RC4_128_SHA
TLS_PSK_WITH_3DES_EDE_CBC_SHA
TLS_DHE_PSK_WITH_RC4_128_SHA
TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA
TLS_RSA_PSK_WITH_RC4_128_SHA
TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA
TLS_DH_DSS_WITH_SEED_CBC_SHA
TLS_DH_RSA_WITH_SEED_CBC_SHA
TLS_DH_RSA_WITH_AES_128_GCM_SHA256
TLS_DH_RSA_WITH_AES_256_GCM_SHA384
TLS_DH_DSS_WITH_AES_128_GCM_SHA256
TLS_DH_DSS_WITH_AES_256_GCM_SHA384
TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256
TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256
TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256
TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256
TLS_ECDH_ECDSA_WITH_NULL_SHA
TLS_ECDH_ECDSA_WITH_RC4_128_SHA
TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
TLS_ECDH_RSA_WITH_NULL_SHA
TLS_ECDH_RSA_WITH_RC4_128_SHA
TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
TLS_ECDHE_RSA_WITH_RC4_128_SHA
TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
TLS_ECDH_anon_WITH_RC4_128_SHA
TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA
TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA
TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
TLS_ECDHE_PSK_WITH_RC4_128_SHA
TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA
TLS_RSA_WITH_ARIA_128_CBC_SHA256
TLS_RSA_WITH_ARIA_256_CBC_SHA384
TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256
TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384
TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256
TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384
TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256
TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384
TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256
TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384
TLS_DH_anon_WITH_ARIA_128_CBC_SHA256
TLS_DH_anon_WITH_ARIA_256_CBC_SHA384
TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256
TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384
TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256
TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384
TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256
TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384
TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256
TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384
TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256
TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384
TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256
TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384
TLS_DH_anon_WITH_ARIA_128_GCM_SHA256
TLS_DH_anon_WITH_ARIA_256_GCM_SHA384
TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256
TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384
TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256
TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384
TLS_PSK_WITH_ARIA_128_CBC_SHA256
TLS_PSK_WITH_ARIA_256_CBC_SHA384
TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256
TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384
TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256
TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384
TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256
TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384
TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256
TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384
TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256
TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384
TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256
TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384
TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256
TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384
TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256
TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384
TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256
TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384
TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256
TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384
TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256
TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384
TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256
TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384
SSL_RSA_FIPS_WITH_DES_CBC_SHA
SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA
GOST2012-GOST8912-GOST8912
GOST2012-NULL-GOST12
No Compression
Zlib Compression
server_version
cipher_suite {0x%02X, 0x%02X} %s
compression_method: %s (0x%02X)
KeyExchangeAlgorithm=%s
rsa_modulus
rsa_exponent
dh_p
dh_g
dh_Ys
explicit_prime
explicit_char2
named_curve: %s (%d)
point
UNKNOWN CURVE PARAMETER TYPE %d
sect163k1 (K-163)
sect163r1
sect163r2 (B-163)
sect193r1
sect193r2
sect233k1 (K-233)
sect233r1 (B-233)
sect239k1
sect283k1 (K-283)
sect283r1 (B-283)
sect409k1 (K-409)
sect409r1 (B-409)
sect571k1 (K-571)
sect571r1 (B-571)
secp160k1
secp160r1
secp160r2
secp192k1
secp192r1 (P-192)
secp224k1
secp224r1 (P-224)
secp256k1
secp256r1 (P-256)
secp384r1 (P-384)
secp521r1 (P-521)
brainpoolP256r1
brainpoolP384r1
brainpoolP512r1
ecdh_x25519
ecdh_x448
ffdhe2048
ffdhe3072
ffdhe4096
ffdhe6144
ffdhe8192
arbitrary_explicit_prime_curves
arbitrary_explicit_char2_curves
EncryptedPreMasterSecret
dh_Yc
ecdh_Yc
certificate_list, length=%d
ASN.1Cert, length=%d
<UNPARSEABLE CERTIFICATE>
------details-----
------------------
<TRAILING GARBAGE AFTER CERTIFICATE>
Signature Algorithm: %s (0x%04x)
Signature
ecdsa_sha224
ecdsa_sha1
dsa_sha256
dsa_sha384
dsa_sha512
dsa_sha224
dsa_sha1
gost2001_gost94
request_context
certificate_types (len=%d)
signature_algorithms (len=%d)
%s (0x%04x)
certificate_authorities (len=%d)
DistinguishedName (len=%d): 
<UNPARSEABLE DN>
request_extensions
rsa_sign
dss_sign
rsa_fixed_dh
dss_fixed_dh
rsa_ephemeral_dh
dss_ephemeral_dh
fortezza_dms
ecdsa_sign
rsa_fixed_ecdh
ecdsa_fixed_ecdh
No Ticket
ticket_lifetime_hint=%u
ticket_age_add=%u
ticket_nonce
ticket
No extensions
extensions, length = %d
extensions, extype = %d, extlen = %d
extension_type=%s(%d), length=%d
client_verify_data
server_verify_data
<EMPTY>
NamedGroup: %s (%d)
key_exchange: 
%s (%d)
max_early_data=%u
server_name
max_fragment_length
client_certificate_url
trusted_ca_keys
truncated_hmac
status_request
user_mapping
client_authz
server_authz
cert_type
supported_groups
ec_point_formats
signature_algorithms
use_srtp
tls_heartbeat
application_layer_protocol_negotiation
signed_certificate_timestamps
padding
encrypt_then_mac
extended_master_secret
session_ticket
early_data
supported_versions
cookie_ext
psk_key_exchange_modes
certificate_authorities
post_handshake_auth
signature_algorithms_cert
key_share
next_proto_neg
max_fragment_length := 2^9 (512 bytes)
max_fragment_length := 2^10 (1024 bytes)
max_fragment_length := 2^11 (2048 bytes)
max_fragment_length := 2^12 (4096 bytes)
uncompressed
ansiX962_compressed_prime
ansiX962_compressed_char2
psk_ke
psk_dhe_ke
update_not_requested
update_requested
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/tls13_enc.c
CLIENT_EARLY_TRAFFIC_SECRET
EARLY_EXPORTER_SECRET
CLIENT_HANDSHAKE_TRAFFIC_SECRET
CLIENT_TRAFFIC_SECRET_0
SERVER_HANDSHAKE_TRAFFIC_SECRET
SERVER_TRAFFIC_SECRET_0
EXPORTER_SECRET
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/ssl/tls_srp.c
assertion failed: in && out && key && ivec
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/aes/aes_ige.c
assertion failed: (AES_ENCRYPT == enc) || (AES_DECRYPT == enc)
assertion failed: (length % AES_BLOCK_SIZE) == 0
aes(partial)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_bitstr.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_d2i_fp.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_digest.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_dup.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_i2d_fp.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_int.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_mbstr.c
minsize=
maxsize=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_object.c
<INVALID>
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_sign.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_strex.c
0123456789ABCDEF
\W%08lX
\U%04lX
\%02X
MASK:
nombstr
pkix
utf8only
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_strnid.c
ASN1_TIME
%04d%02d%02d%02d%02d%02dZ
%02d%02d%02d%02d%02d%02dZ
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_time.c
%s %2d %02d:%02d:%02d%.*s %d%s
 GMT
%s %2d %02d:%02d:%02d %d%s
Bad time value
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/a_verify.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/ameth_lib.c
a2d_ASN1_OBJECT
a2i_ASN1_INTEGER
a2i_ASN1_STRING
append_exp
asn1_bio_init
ASN1_BIT_STRING_set_bit
asn1_cb
asn1_check_tlen
asn1_collect
asn1_d2i_ex_primitive
ASN1_d2i_fp
asn1_d2i_read_bio
ASN1_digest
asn1_do_adb
asn1_do_lock
ASN1_dup
asn1_enc_save
asn1_ex_c2i
asn1_find_end
ASN1_GENERALIZEDTIME_adj
ASN1_generate_v3
asn1_get_int64
ASN1_get_object
asn1_get_uint64
ASN1_i2d_bio
ASN1_i2d_fp
ASN1_item_d2i_fp
ASN1_item_dup
asn1_item_embed_d2i
asn1_item_embed_new
asn1_item_flags_i2d
ASN1_item_i2d_bio
ASN1_item_i2d_fp
ASN1_item_pack
ASN1_item_sign
ASN1_item_sign_ctx
ASN1_item_unpack
ASN1_item_verify
ASN1_mbstring_ncopy
ASN1_OBJECT_new
asn1_output_data
ASN1_PCTX_new
asn1_primitive_new
ASN1_SCTX_new
ASN1_sign
asn1_str2type
asn1_string_get_int64
asn1_string_get_uint64
ASN1_STRING_set
ASN1_STRING_TABLE_add
asn1_string_to_bn
ASN1_STRING_type_new
asn1_template_ex_d2i
asn1_template_new
asn1_template_noexp_d2i
ASN1_TIME_adj
ASN1_TYPE_get_int_octetstring
ASN1_TYPE_get_octetstring
ASN1_UTCTIME_adj
ASN1_verify
b64_read_asn1
B64_write_ASN1
BIO_new_NDEF
bitstr_cb
bn_to_asn1_string
c2i_ASN1_BIT_STRING
c2i_ASN1_INTEGER
c2i_ASN1_OBJECT
c2i_ibuf
c2i_uint64_int
collect_data
d2i_ASN1_OBJECT
d2i_ASN1_UINTEGER
d2i_AutoPrivateKey
d2i_PrivateKey
d2i_PublicKey
do_buf
do_create
do_dump
do_tcreate
i2a_ASN1_OBJECT
i2d_ASN1_bio_stream
i2d_ASN1_OBJECT
i2d_DSA_PUBKEY
i2d_EC_PUBKEY
i2d_PrivateKey
i2d_PublicKey
i2d_RSA_PUBKEY
long_c2i
ndef_prefix
ndef_suffix
oid_module_init
parse_tagging
PKCS5_pbe2_set_iv
PKCS5_pbe2_set_scrypt
PKCS5_pbe_set
PKCS5_pbe_set0_algor
PKCS5_pbkdf2_set
pkcs5_scrypt_set
SMIME_read_ASN1
SMIME_text
stable_get
stbl_module_init
uint32_c2i
uint32_new
uint64_c2i
uint64_new
X509_CRL_add0_revoked
X509_INFO_new
x509_name_encode
x509_name_ex_d2i
x509_name_ex_new
X509_PKEY_new
adding object
asn1 parse error
asn1 sig parse error
aux error
bad object header
bmpstring is wrong length
boolean is wrong length
buffer too small
cipher has no object identifier
context not initialised
data is wrong
depth exceeded
digest and key type not supported
encode error
error getting time
error loading section
error setting cipher params
expecting an integer
expecting an object
explicit length mismatch
explicit tag not constructed
field missing
first num too large
header too long
illegal bitstring format
illegal boolean
illegal characters
illegal format
illegal hex
illegal implicit tag
illegal integer
illegal negative value
illegal nested tagging
illegal null
illegal null value
illegal object
illegal optional any
illegal options on item template
illegal padding
illegal tagged any
illegal time value
illegal zero content
integer not ascii format
integer too large for long
invalid bit string bits left
invalid bmpstring length
invalid digit
invalid mime type
invalid modifier
invalid number
invalid object encoding
invalid scrypt parameters
invalid separator
invalid string table value
invalid universalstring length
invalid utf8string
invalid value
list error
mime no content type
mime parse error
mime sig parse error
missing eoc
missing second number
missing value
mstring not universal
mstring wrong tag
nested asn1 string
nested too deep
non hex characters
not ascii format
not enough data
no content type
no matching choice type
no multipart body failure
no multipart boundary
no sig content type
null is wrong length
object not ascii format
odd number of chars
second number too large
sequence length mismatch
sequence not constructed
sequence or set needs config
short line
sig invalid mime type
streaming not supported
string too long
string too short
the asn1 object identifier is not known for this md
time not ascii format
too large
too long
too small
type not constructed
type not primitive
unexpected eoc
universalstring is wrong length
unknown format
unknown message digest algorithm
unknown object type
unknown public key type
unknown signature algorithm
unknown tag
unsupported any defined by type
unsupported cipher
unsupported public key type
unsupported type
wrong integer type
wrong public key type
wrong tag
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/asn1_gen.c
tag=
UTF8
BITLIST
BOOL
BOOLEAN
INTEGER
ENUMERATED
OBJECT
UTCTIME
GENERALIZEDTIME
GENTIME
OCTETSTRING
BITSTR
BITSTRING
UNIVERSALSTRING
UNIV
IA5STRING
UTF8String
BMPSTRING
VISIBLESTRING
VISIBLE
PRINTABLESTRING
PRINTABLE
T61STRING
TELETEXSTRING
GeneralString
GENSTR
NUMERIC
NUMERICSTRING
SEQUENCE
EXPLICIT
IMPLICIT
OCTWRAP
SEQWRAP
SETWRAP
BITWRAP
FORM
FORMAT
Char=
string=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/asn1_lib.c
BIT STRING
OCTET STRING
OBJECT DESCRIPTOR
REAL
<ASN1 11>
UTF8STRING
<ASN1 13>
<ASN1 14>
<ASN1 15>
VIDEOTEXSTRING
GRAPHICSTRING
GENERALSTRING
<ASN1 29>
BAD RECURSION DEPTH
Error in encoding
%5ld:
d=%-2d hl=%ld l=%4ld 
d=%-2d hl=%ld l=inf  
length is greater than %ld
:BAD OBJECT
:BAD BOOLEAN
[HEX DUMP]:
:BAD INTEGER
:BAD ENUMERATED
cons: 
prim: 
priv [ %d ] 
cont [ %d ]
appl [ %d ]
<ASN1 %d>
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/asn_mime.c
-----BEGIN %s-----
-----END %s-----
smime.p7m
application/x-pkcs7-
application/pkcs7-
MIME-Version: 1.0%s
Content-Type: multipart/signed;
 protocol="%ssignature";
 micalg="
"; boundary="----%s"%s%s
This is an S/MIME signed message%s%s
------%s%s
%s------%s%s
Content-Type: %ssignature;
 name="smime.p7s"%s
Content-Transfer-Encoding: base64%s
Content-Disposition: attachment;
 filename="smime.p7s"%s%s
%s------%s--%s%s
enveloped-data
signed-receipt
signed-data
certs-only
compressed-data
smime.p7z
 filename="%s"%s
Content-Type: %smime;
 smime-type=%s;
 name="%s"%s
Content-Transfer-Encoding: base64%s%s
multipart/signed
boundary
application/x-pkcs7-signature
application/pkcs7-signature
type: 
application/x-pkcs7-mime
application/pkcs7-mime
Content-Type: text/plain
text/plain
sha1
sha-256
sha-384
sha-512
gostr3411-94
oid_section
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/asn_moid.c
stbl_section
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/asn_mstbl.c
mask
nomask
field=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/asn_pack.c
asn1
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/bio_asn1.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/bio_ndef.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/d2i_pr.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/d2i_pu.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/evp_asn1.c
asn1_int_oct
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/f_int.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/f_string.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/i2d_pr.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/i2d_pu.c
NETSCAPE_ENCRYPTED_PKEY
enckey
NETSCAPE_PKEY
algor
NETSCAPE_CERT_SEQUENCE
certs
PBEPARAM
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/p5_pbe.c
salt
iter
PBE2PARAM
PBKDF2PARAM
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/p5_pbev2.c
keyfunc
encryption
keylength
SCRYPT_PARAMS
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/p5_scrypt.c
costParameter
blockSize
parallelizationParameter
keyLength
PKCS8_PRIV_KEY_INFO
pkeyalg
attributes
%02x%s
%s 0
%s %s%lu (%s0x%lx)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/t_pkey.c
%s%s
 (Negative)
Netscape SPKI:
  Public Key Algorithm: %s
  Unable to load public key
  Challenge String: %s
  Signature Algorithm: %s
      
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/tasn_dec.c
Field=
, Type=
Type=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/tasn_enc.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/tasn_fre.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/tasn_new.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/tasn_prn.c
<ABSENT>
:EXTERNAL TYPE %s
ERROR: selector [%d] invalid
%*s}
Unprocessed type %d
 (%s)
%*s%s OF %s {
%*s%s:
%*s<%s>
ABSENT
EMPTY
NULL
BOOL ABSENT
FALSE
TRUE
%s (%s)
 (%ld unused bits)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/tasn_scn.c
ASN1_OCTET_STRING
ASN1_INTEGER
ASN1_ENUMERATED
ASN1_BIT_STRING
ASN1_UTF8STRING
ASN1_PRINTABLESTRING
ASN1_T61STRING
ASN1_IA5STRING
ASN1_GENERALSTRING
ASN1_UTCTIME
ASN1_GENERALIZEDTIME
ASN1_VISIBLESTRING
ASN1_UNIVERSALSTRING
ASN1_BMPSTRING
ASN1_NULL
ASN1_OBJECT
ASN1_ANY
ASN1_SEQUENCE
ASN1_PRINTABLE
DISPLAYTEXT
DIRECTORYSTRING
ASN1_BOOLEAN
ASN1_TBOOLEAN
ASN1_FBOOLEAN
ASN1_OCTET_STRING_NDEF
ASN1_SEQUENCE_ANY
ASN1_SET_ANY
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/tasn_utl.c
X509_ALGOR
X509_ALGORS
algorithm
parameter
algorithms
BIGNUM
CBIGNUM
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/x_info.c
INT32
UINT32
INT64
UINT64
ZINT32
ZUINT32
ZINT64
ZUINT64
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/x_int64.c
LONG
ZLONG
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/x_long.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/asn1/x_pkey.c
X509_SIG
NETSCAPE_SPKAC
NETSCAPE_SPKI
challenge
spkac
sig_algor
signature
X509_VAL
notBefore
notAfter
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/async/arch/async_posix.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/async/async.c
async_ctx_new
ASYNC_init_thread
async_job_new
ASYNC_pause_job
async_start_func
ASYNC_start_job
ASYNC_WAIT_CTX_set_wait_fd
failed to set pool
failed to swap context
init failed
invalid pool size
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/async/async_wait.c
blowfish(ptr)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/b_addr.c
%*s%04x - 
%02x%c
%02X:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/b_print.c
0123456789abcdef
0123456789
<NULL>
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/b_sock.c
host=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/b_sock2.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bf_buff.c
linebuffer
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bf_lbuf.c
non-blocking IO test filter
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bf_nbio.c
NULL filter
BIO[%p]: 
Free - %s
read(%d,%lu) - %s fd=%d
read(%d,%lu) - %s
write(%d,%lu) - %s fd=%d
write(%d,%lu) - %s
puts() - %s
gets(%lu) - %s
ctrl(%lu) - %s
read return %ld
write return %ld
gets return %ld
puts return %ld
ctrl return %ld
bio callback - unknown type (%d)
acpt_state
addrinfo_wrap
addr_strings
BIO_accept
BIO_accept_ex
BIO_ACCEPT_new
BIO_ADDR_new
BIO_bind
BIO_callback_ctrl
BIO_connect
BIO_CONNECT_new
BIO_ctrl
BIO_gets
BIO_get_host_ip
BIO_get_new_index
BIO_get_port
BIO_listen
BIO_lookup
BIO_lookup_ex
bio_make_pair
BIO_meth_new
BIO_new
BIO_new_dgram_sctp
BIO_new_file
BIO_new_mem_buf
BIO_nread
BIO_nread0
BIO_nwrite
BIO_nwrite0
BIO_parse_hostserv
BIO_puts
BIO_read
BIO_read_ex
bio_read_intern
BIO_socket
BIO_socket_nbio
BIO_sock_info
BIO_sock_init
BIO_write
BIO_write_ex
bio_write_intern
buffer_ctrl
conn_ctrl
conn_state
dgram_sctp_new
dgram_sctp_read
dgram_sctp_write
doapr_outch
file_ctrl
file_read
linebuffer_ctrl
linebuffer_new
mem_write
nbiof_new
slg_write
accept error
addrinfo addr is not af inet
ambiguous host or service
bad fopen mode
connect error
gethostbyname addr is not af inet
getsockname error
getsockname truncated address
getting socktype
invalid socket
in use
listen v6 only
lookup returned nothing
malformed host or service
nbio connect error
no accept addr or service specified
no hostname or service specified
no port defined
no such file
null parameter
unable to bind socket
unable to create socket
unable to keepalive
unable to listen socket
unable to nodelay
unable to reuseaddr
unavailable ip family
unknown info type
unsupported ip family
unsupported method
unsupported protocol family
write to read only BIO
WSAStartup
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bio_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bio_meth.c
socket accept
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bss_acpt.c
hostname=
 service=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bss_bio.c
BIO pair
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bss_conn.c
socket connect
datagram socket
getsockopt
assertion failed: sz.s <= sizeof(data->socket_timeout)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bss_dgram.c
setsockopt
assertion failed: sz.s <= sizeof(struct timeval)
file descriptor
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bss_file.c
fopen('
FILE pointer
fflush()
syslog
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bss_log.c
application
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bio/bss_mem.c
memory buffer
secure memory buffer
socket
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_add.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_blind.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_ctx.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_div.c
bnrand
bnrand_range
BN_BLINDING_convert_ex
BN_BLINDING_create_param
BN_BLINDING_invert_ex
BN_BLINDING_new
BN_BLINDING_update
BN_bn2dec
BN_bn2hex
bn_compute_wNAF
BN_CTX_get
BN_CTX_new
BN_CTX_start
BN_div
BN_div_recp
BN_exp
bn_expand_internal
BN_GENCB_new
BN_generate_dsa_nonce
BN_generate_prime_ex
BN_GF2m_mod
BN_GF2m_mod_exp
BN_GF2m_mod_mul
BN_GF2m_mod_solve_quad
BN_GF2m_mod_solve_quad_arr
BN_GF2m_mod_sqr
BN_GF2m_mod_sqrt
BN_lshift
BN_mod_exp2_mont
BN_mod_exp_mont
BN_mod_exp_mont_consttime
BN_mod_exp_mont_word
BN_mod_exp_recp
BN_mod_exp_simple
BN_mod_inverse
BN_mod_inverse_no_branch
BN_mod_lshift_quick
BN_mod_sqrt
BN_MONT_CTX_new
BN_mpi2bn
BN_new
BN_POOL_get
BN_rand
BN_rand_range
BN_RECP_CTX_new
BN_rshift
bn_set_words
BN_STACK_push
BN_usub
arg2 lt arg3
bad reciprocal
bignum too long
bits too small
called with even modulus
div by zero
encoding error
expand on static bignum data
input not reduced
invalid length
invalid range
invalid shift
not a square
not initialized
no inverse
no solution
private key too large
p is not prime
too many iterations
too many temporary variables
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_exp.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_exp2.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_gcd.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_gf2m.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_intern.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_mod.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_mont.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_mpi.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_prime.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_print.c
%019lu
bn(%zu,%zu)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_rand.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_recp.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_shift.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/bn/bn_sqrt.c
BUF_MEM_grow
BUF_MEM_grow_clean
BUF_MEM_new
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/buffer/buffer.c
CMAC
OpenSSL CMAC method
hexkey
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cmac/cmac.c
CMS_IssuerAndSerialNumber
CMS_CertificateChoices
CMS_SignerInfo
CMS_RevocationInfoChoice
CMS_SignedData
CMS_KeyTransRecipientInfo
CMS_OtherKeyAttribute
CMS_RecipientKeyIdentifier
CMS_RecipientEncryptedKey
CMS_OriginatorPublicKey
CMS_KeyAgreeRecipientInfo
CMS_KEKRecipientInfo
CMS_PasswordRecipientInfo
CMS_RecipientInfo
CMS_EnvelopedData
CMS_DigestedData
CMS_EncryptedData
CMS_CompressedData
CMS_ContentInfo
CMS_Attributes_Sign
CMS_Attributes_Verify
CMS_ReceiptRequest
CMS_Receipt
d.certificate
d.extendedCertificate
d.v1AttrCert
d.v2AttrCert
d.other
CMS_OtherCertificateFormat
otherCertFormat
otherCert
digestAlgorithm
signedAttrs
signatureAlgorithm
unsignedAttrs
CMS_SignerIdentifier
d.issuerAndSerialNumber
d.subjectKeyIdentifier
d.crl
CMS_OtherRevocationInfoFormat
otherRevInfoFormat
otherRevInfo
digestAlgorithms
encapContentInfo
certificates
crls
signerInfos
CMS_EncapsulatedContentInfo
eContentType
eContent
keyEncryptionAlgorithm
encryptedKey
keyAttrId
keyAttr
subjectKeyIdentifier
CMS_KeyAgreeRecipientIdentifier
d.rKeyId
publicKey
originator
recipientEncryptedKeys
CMS_OriginatorIdentifierOrKey
d.originatorKey
kekid
CMS_KEKIdentifier
keyIdentifier
keyDerivationAlgorithm
d.ktri
d.kari
d.kekri
d.pwri
d.ori
CMS_OtherRecipientInfo
oriType
oriValue
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_asn1.c
originatorInfo
recipientInfos
encryptedContentInfo
unprotectedAttrs
CMS_OriginatorInfo
CMS_EncryptedContentInfo
contentType
contentEncryptionAlgorithm
encryptedContent
compressionAlgorithm
d.data
d.signedData
d.envelopedData
d.digestedData
d.encryptedData
d.authenticatedData
d.compressedData
CMS_AuthenticatedData
macAlgorithm
authAttrs
unauthAttrs
CMS_ATTRIBUTES
signedContentIdentifier
receiptsFrom
receiptsTo
CMS_ReceiptsFrom
d.allOrFirstTier
d.receiptList
originatorSignatureValue
CMS_SharedInfo
keyInfo
entityUInfo
suppPubInfo
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_dd.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_enc.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_env.c
check_content
CMS_add0_cert
CMS_add0_recipient_key
CMS_add0_recipient_password
CMS_add1_ReceiptRequest
CMS_add1_recipient_cert
CMS_add1_signer
cms_add1_signingTime
CMS_compress
cms_CompressedData_create
cms_CompressedData_init_bio
cms_copy_content
cms_copy_messageDigest
CMS_data
CMS_dataFinal
CMS_dataInit
CMS_decrypt
CMS_decrypt_set1_key
CMS_decrypt_set1_password
CMS_decrypt_set1_pkey
cms_DigestAlgorithm_find_ctx
cms_DigestAlgorithm_init_bio
cms_DigestedData_do_final
CMS_digest_verify
cms_encode_Receipt
CMS_encrypt
cms_EncryptedContent_init
cms_EncryptedContent_init_bio
CMS_EncryptedData_decrypt
CMS_EncryptedData_encrypt
CMS_EncryptedData_set1_key
CMS_EnvelopedData_create
cms_EnvelopedData_init_bio
cms_enveloped_data_init
cms_env_asn1_ctrl
CMS_final
cms_get0_certificate_choices
CMS_get0_content
cms_get0_econtent_type
cms_get0_enveloped
cms_get0_revocation_choices
cms_get0_signed
cms_msgSigDigest_add1
CMS_ReceiptRequest_create0
cms_Receipt_verify
CMS_RecipientInfo_decrypt
CMS_RecipientInfo_encrypt
cms_RecipientInfo_kari_encrypt
CMS_RecipientInfo_kari_get0_alg
CMS_RecipientInfo_kari_get0_orig_id
CMS_RecipientInfo_kari_get0_reks
CMS_RecipientInfo_kari_orig_id_cmp
cms_RecipientInfo_kekri_decrypt
cms_RecipientInfo_kekri_encrypt
CMS_RecipientInfo_kekri_get0_id
CMS_RecipientInfo_kekri_id_cmp
CMS_RecipientInfo_ktri_cert_cmp
cms_RecipientInfo_ktri_decrypt
cms_RecipientInfo_ktri_encrypt
CMS_RecipientInfo_ktri_get0_algs
CMS_RecipientInfo_ktri_get0_signer_id
cms_RecipientInfo_pwri_crypt
CMS_RecipientInfo_set0_key
CMS_RecipientInfo_set0_password
CMS_RecipientInfo_set0_pkey
cms_sd_asn1_ctrl
cms_set1_ias
cms_set1_keyid
cms_set1_SignerIdentifier
CMS_set_detached
CMS_sign
cms_signed_data_init
cms_SignerInfo_content_sign
CMS_SignerInfo_sign
CMS_SignerInfo_verify
cms_signerinfo_verify_cert
CMS_SignerInfo_verify_content
CMS_sign_receipt
CMS_stream
CMS_uncompress
CMS_verify
kek_unwrap_key
add signer error
certificate already present
certificate has no keyid
certificate verify error
cipher initialisation error
cipher parameter initialisation error
cms datafinal error
cms lib
contentidentifier mismatch
content not found
content type mismatch
content type not compressed data
content type not enveloped data
content type not signed data
content verify error
ctrl error
ctrl failure
error getting public key
error reading messagedigest attribute
error setting key
error setting recipientinfo
invalid encrypted key length
invalid key encryption parameter
invalid key length
md bio init error
messagedigest attribute wrong length
messagedigest wrong length
msgsigdigest error
msgsigdigest verification failure
msgsigdigest wrong length
need one signer
not a signed receipt
not encrypted data
not kek
not key agreement
not key transport
not pwri
not supported for this key type
no cipher
no content
no default digest
no digest set
no key
no key or cert
no matching digest
no matching recipient
no matching signature
no msgsigdigest
no password
no private key
no public key
no receipt request
no signers
private key does not match certificate
receipt decode error
recipient error
signer certificate not found
signfinal error
smime text error
store init error
type not compressed data
type not data
type not digested data
type not encrypted data
type not enveloped data
unable to finalize context
unknown cipher
unknown digest algorithm
unknown id
unsupported content type
unsupported kek algorithm
unsupported key encryption algorithm
unsupported recipientinfo type
unsupported recipient type
unwrap error
unwrap failure
verification failure
wrap error
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_ess.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_io.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_kari.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_pwri.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_sd.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/cms/cms_smime.c
smime_sign
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/conf/conf_api.c
OpenSSL default
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/conf/conf_def.c
.include
line 
.conf
.cnf
[%s] %s=%s
[[%s]]
WIN32
CONF_dump_fp
CONF_load
CONF_load_fp
CONF_parse_list
def_load
def_load_bio
get_next_file
module_add
module_init
module_load_dso
module_run
NCONF_dump_bio
NCONF_dump_fp
NCONF_get_number_e
NCONF_get_section
NCONF_get_string
NCONF_load
NCONF_load_bio
NCONF_load_fp
NCONF_new
process_include
str_copy
error loading dso
list cannot be null
missing close square bracket
missing equal sign
missing init function
module initialization error
no close brace
no conf
no conf or environment variable
no section
no value
number too large
recursive directory include
unable to create new section
unknown module name
variable expansion too long
variable has no value
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/conf/conf_lib.c
group=
 name=
openssl_conf
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/conf/conf_mod.c
openssl.cnf
module=
%-8d
, retcode=
OPENSSL_init
OPENSSL_finish
, path=
ssl_conf
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/conf/conf_ssl.c
CMAC_CTX_new
CRYPTO_dup_ex_data
CRYPTO_free_ex_data
CRYPTO_get_ex_new_index
CRYPTO_memdup
CRYPTO_new_ex_data
CRYPTO_ocb128_copy_ctx
CRYPTO_ocb128_init
CRYPTO_set_ex_data
FIPS_mode_set
get_and_lock
OPENSSL_atexit
OPENSSL_buf2hexstr
openssl_fopen
OPENSSL_hexstr2buf
OPENSSL_init_crypto
OPENSSL_LH_new
OPENSSL_sk_deep_copy
OPENSSL_sk_dup
pkey_hmac_init
pkey_poly1305_init
pkey_siphash_init
sk_reserve
fips mode not supported
illegal hex digit
odd number of digits
%s:%d: OpenSSL internal error: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_b64.c
CTLOG_new
CTLOG_new_from_base64
ctlog_new_from_conf
ctlog_store_load_ctx_new
CTLOG_STORE_load_file
ctlog_store_load_log
CTLOG_STORE_new
ct_base64_decode
CT_POLICY_EVAL_CTX_new
ct_v1_log_id_from_pkey
i2o_SCT
i2o_SCT_LIST
i2o_SCT_signature
o2i_SCT
o2i_SCT_LIST
o2i_SCT_signature
SCT_CTX_new
SCT_CTX_verify
SCT_new
SCT_new_from_base64
SCT_set0_log_id
SCT_set1_extensions
SCT_set1_log_id
SCT_set1_signature
SCT_set_log_entry_type
SCT_set_signature_nid
SCT_set_version
base64 decode error
invalid log id length
log conf invalid
log conf invalid key
log conf missing description
log conf missing key
log key invalid
sct future timestamp
sct invalid
sct invalid signature
sct list invalid
sct log id mismatch
sct not set
sct unsupported version
unrecognized signature nid
unsupported entry type
unsupported version
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_log.c
CTLOG_FILE
/System/Library/OpenSSL//ct_log_list.cnf
enabled_logs
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_oct.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_policy.c
not set
unknown version
unknown log
unverified
valid
unknown status
%*sSigned Certificate Timestamp:
%*sVersion   : 
unknown
v1 (0x0)
%*sLog       : %s
%*sLog ID    : 
%*sTimestamp : 
%*sExtensions: 
%*sSignature : 
%*s            
%.14s.%03dZ
%02X%02X
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_sct.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_sct_ctx.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_vfy.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ct/ct_x509v3.c
built on: Wed Jun 12 20:55:24 2019 UTC
platform: linux-x86_64
OPENSSLDIR: "/System/Library/OpenSSL/"
ENGINESDIR: "/dev/null"
not available
des(int)
OpenSSL PKCS#3 DH method
X9.42 DH
OpenSSL X9.42 DH method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_ameth.c
DH Private-Key
DH Public-Key
DH Parameters
%s: (%d bit)
private-key:
public-key:
prime:
generator:
subgroup order:
subgroup factor:
seed:
counter:
recommended-private-length: %d bits
DHparams
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_asn1.c
int_dhx942_dh
vparams
int_dhvparams
seed
counter
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_check.c
compute_key
DHparams_print_fp
dh_builtin_genparams
DH_check_ex
DH_check_params_ex
DH_check_pub_key_ex
dh_cms_decrypt
dh_cms_set_peerkey
dh_cms_set_shared_info
DH_meth_dup
DH_meth_new
DH_meth_set1_name
DH_new_by_nid
DH_new_method
dh_param_decode
dh_pkey_public_check
dh_priv_decode
dh_priv_encode
dh_pub_decode
dh_pub_encode
do_dh_print
generate_key
pkey_dh_ctrl_str
pkey_dh_derive
pkey_dh_init
pkey_dh_keygen
bad generator
bn decode error
bn error
check invalid j value
check invalid q value
check pubkey invalid
check pubkey too large
check pubkey too small
check p not prime
check p not safe prime
check q not prime
invalid parameter name
invalid parameter nid
invalid public key
kdf parameter error
keys not set
missing pubkey
modulus too large
not suitable generator
no parameters set
no private value
parameter encoding error
peer key error
shared info error
unable to check generator
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_gen.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_kdf.c
OpenSSL DH Method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_key.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_meth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_pmeth.c
dh_paramgen_prime_len
dh_rfc5114
dh_param
dh_paramgen_generator
dh_paramgen_subprime_len
dh_paramgen_type
dh_pad
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_prn.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dh/dh_rfc7919.c
OpenSSL DSA method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_ameth.c
Private-Key
priv:
pub: 
P:   
Q:   
G:   
r:   
s:   
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_asn1.c
DSA_SIG
pub_key
priv_key
DSAparams_print
DSAparams_print_fp
dsa_builtin_paramgen
dsa_builtin_paramgen2
DSA_do_sign
DSA_do_verify
DSA_meth_dup
DSA_meth_new
DSA_meth_set1_name
DSA_new_method
dsa_param_decode
DSA_print_fp
dsa_priv_decode
dsa_priv_encode
dsa_pub_decode
dsa_pub_encode
DSA_sign
DSA_sign_setup
DSA_SIG_new
old_dsa_priv_decode
pkey_dsa_ctrl
pkey_dsa_ctrl_str
pkey_dsa_keygen
bad q value
invalid digest type
invalid parameters
q not prime
seed_len is less than the length of q
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_gen.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_meth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_ossl.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_pmeth.c
dsa_paramgen_bits
dsa_paramgen_q_bits
dsa_paramgen_md
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dsa/dsa_prn.c
OpenSSL 'dlfcn' shared library method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dso/dso_dlfcn.c
filename(
symname(
lib%s.dylib
%s.dylib
dlfcn_pathbyaddr(): 
dlfcn_bind_func
dlfcn_load
dlfcn_merger
dlfcn_name_converter
dlfcn_unload
dl_bind_func
dl_load
dl_merger
dl_name_converter
dl_unload
DSO_bind_func
DSO_convert_filename
DSO_ctrl
DSO_free
DSO_get_filename
DSO_global_lookup
DSO_load
DSO_merge
DSO_new_method
DSO_pathbyaddr
DSO_set_filename
DSO_up_ref
vms_bind_sym
vms_load
vms_merger
vms_unload
win32_bind_func
win32_globallookup
win32_joiner
win32_load
win32_merger
win32_name_converter
win32_splitter
win32_unload
control command failed
dso already loaded
empty file structure
failure
filename too big
cleanup method function failed
incorrect file syntax
could not load the shared library
name translation failed
no filename
a null shared library handle was used
set filename failed
the meth_data stack is corrupt
could not bind to the requested symbol name
could not unload the shared library
functionality not supported
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/dso/dso_lib.c
SigEd448
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec2_oct.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec2_smpl.c
OpenSSL EC algorithm
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_ameth.c
Public-Key
ECDSA-Parameters
%*spriv:
%*spub:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_asn1.c
ECPARAMETERS
ECPKPARAMETERS
X9_62_PENTANOMIAL
X9_62_CHARACTERISTIC_TWO
p.onBasis
p.tpBasis
p.ppBasis
p.other
fieldID
curve
cofactor
X9_62_FIELDID
fieldType
p.prime
p.char_two
X9_62_CURVE
value.named_curve
value.parameters
value.implicitlyCA
EC_PRIVATEKEY
privateKey
parameters
ECDSA_SIG
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_check.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_curve.c
SECG/WTLS curve over a 112 bit prime field
SECG curve over a 112 bit prime field
SECG curve over a 128 bit prime field
SECG curve over a 160 bit prime field
SECG/WTLS curve over a 160 bit prime field
SECG curve over a 192 bit prime field
SECG curve over a 224 bit prime field
NIST/SECG curve over a 224 bit prime field
SECG curve over a 256 bit prime field
NIST/SECG curve over a 384 bit prime field
NIST/SECG curve over a 521 bit prime field
NIST/X9.62/SECG curve over a 192 bit prime field
X9.62 curve over a 192 bit prime field
X9.62 curve over a 239 bit prime field
X9.62/SECG curve over a 256 bit prime field
SECG curve over a 113 bit binary field
SECG/WTLS curve over a 131 bit binary field
SECG curve over a 131 bit binary field
NIST/SECG/WTLS curve over a 163 bit binary field
SECG curve over a 163 bit binary field
NIST/SECG curve over a 163 bit binary field
SECG curve over a 193 bit binary field
NIST/SECG/WTLS curve over a 233 bit binary field
SECG curve over a 239 bit binary field
NIST/SECG curve over a 283 bit binary field
NIST/SECG curve over a 409 bit binary field
NIST/SECG curve over a 571 bit binary field
X9.62 curve over a 163 bit binary field
X9.62 curve over a 176 bit binary field
X9.62 curve over a 191 bit binary field
X9.62 curve over a 208 bit binary field
X9.62 curve over a 239 bit binary field
X9.62 curve over a 272 bit binary field
X9.62 curve over a 304 bit binary field
X9.62 curve over a 359 bit binary field
X9.62 curve over a 368 bit binary field
X9.62 curve over a 431 bit binary field
WTLS curve over a 113 bit binary field
WTLS curve over a 112 bit prime field
WTLS curve over a 160 bit prime field
WTLS curve over a 224 bit prime field
IPSec/IKE/Oakley curve #3 over a 155 bit binary field.
Not suitable for ECDSA.
Questionable extension field!
IPSec/IKE/Oakley curve #4 over a 185 bit binary field.
Not suitable for ECDSA.
Questionable extension field!
RFC 5639 curve over a 160 bit prime field
RFC 5639 curve over a 192 bit prime field
RFC 5639 curve over a 224 bit prime field
RFC 5639 curve over a 256 bit prime field
RFC 5639 curve over a 320 bit prime field
RFC 5639 curve over a 384 bit prime field
RFC 5639 curve over a 512 bit prime field
SM2 curve over a 256 bit prime field
B-163
B-233
B-283
B-409
B-571
K-163
K-233
K-283
K-409
K-571
P-192
P-224
P-256
P-384
P-521
BN_to_felem
d2i_ECParameters
d2i_ECPKParameters
d2i_ECPrivateKey
do_EC_KEY_print
ecdh_cms_decrypt
ecdh_cms_set_shared_info
ECDH_compute_key
ecdh_simple_compute_key
ECDSA_do_sign_ex
ECDSA_do_verify
ECDSA_sign_ex
ECDSA_sign_setup
ECDSA_SIG_new
ECDSA_verify
ecd_item_verify
eckey_param2type
eckey_param_decode
eckey_priv_decode
eckey_priv_encode
eckey_pub_decode
eckey_pub_encode
eckey_type2param
ECParameters_print
ECParameters_print_fp
ECPKParameters_print
ECPKParameters_print_fp
ecp_nistz256_get_affine
ecp_nistz256_inv_mod_ord
ecp_nistz256_mult_precompute
ecp_nistz256_points_mul
ecp_nistz256_pre_comp_new
ecp_nistz256_windowed_mul
ecx_key_op
ecx_priv_encode
ecx_pub_encode
ec_asn1_group2curve
ec_asn1_group2fieldid
ec_GF2m_montgomery_point_multiply
ec_GF2m_simple_field_inv
ec_GF2m_simple_group_check_discriminant
ec_GF2m_simple_group_set_curve
ec_GF2m_simple_ladder_post
ec_GF2m_simple_ladder_pre
ec_GF2m_simple_oct2point
ec_GF2m_simple_point2oct
ec_GF2m_simple_points_mul
ec_GF2m_simple_point_get_affine_coordinates
ec_GF2m_simple_point_set_affine_coordinates
ec_GF2m_simple_set_compressed_coordinates
ec_GFp_mont_field_decode
ec_GFp_mont_field_encode
ec_GFp_mont_field_inv
ec_GFp_mont_field_mul
ec_GFp_mont_field_set_to_one
ec_GFp_mont_field_sqr
ec_GFp_mont_group_set_curve
ec_GFp_nistp224_group_set_curve
ec_GFp_nistp224_points_mul
ec_GFp_nistp224_point_get_affine_coordinates
ec_GFp_nistp256_group_set_curve
ec_GFp_nistp256_points_mul
ec_GFp_nistp256_point_get_affine_coordinates
ec_GFp_nistp521_group_set_curve
ec_GFp_nistp521_points_mul
ec_GFp_nistp521_point_get_affine_coordinates
ec_GFp_nist_field_mul
ec_GFp_nist_field_sqr
ec_GFp_nist_group_set_curve
ec_GFp_simple_blind_coordinates
ec_GFp_simple_field_inv
ec_GFp_simple_group_check_discriminant
ec_GFp_simple_group_set_curve
ec_GFp_simple_make_affine
ec_GFp_simple_oct2point
ec_GFp_simple_point2oct
ec_GFp_simple_points_make_affine
ec_GFp_simple_point_get_affine_coordinates
ec_GFp_simple_point_set_affine_coordinates
ec_GFp_simple_set_compressed_coordinates
EC_GROUP_check
EC_GROUP_check_discriminant
EC_GROUP_copy
EC_GROUP_get_curve
EC_GROUP_get_curve_GF2m
EC_GROUP_get_curve_GFp
EC_GROUP_get_degree
EC_GROUP_get_ecparameters
EC_GROUP_get_ecpkparameters
EC_GROUP_get_pentanomial_basis
EC_GROUP_get_trinomial_basis
EC_GROUP_new
EC_GROUP_new_by_curve_name
ec_group_new_from_data
EC_GROUP_new_from_ecparameters
EC_GROUP_new_from_ecpkparameters
EC_GROUP_set_curve
EC_GROUP_set_curve_GF2m
EC_GROUP_set_curve_GFp
EC_GROUP_set_generator
EC_GROUP_set_seed
EC_KEY_check_key
EC_KEY_copy
EC_KEY_generate_key
EC_KEY_new
EC_KEY_new_method
EC_KEY_oct2priv
EC_KEY_print
EC_KEY_print_fp
EC_KEY_priv2buf
EC_KEY_priv2oct
EC_KEY_set_public_key_affine_coordinates
ec_key_simple_check_key
ec_key_simple_oct2priv
ec_key_simple_priv2oct
ec_pkey_check
ec_pkey_param_check
EC_POINTs_make_affine
EC_POINTs_mul
EC_POINT_add
EC_POINT_bn2point
EC_POINT_cmp
EC_POINT_copy
EC_POINT_dbl
EC_POINT_get_affine_coordinates
EC_POINT_get_affine_coordinates_GF2m
EC_POINT_get_affine_coordinates_GFp
EC_POINT_get_Jprojective_coordinates_GFp
EC_POINT_invert
EC_POINT_is_at_infinity
EC_POINT_is_on_curve
EC_POINT_make_affine
EC_POINT_new
EC_POINT_oct2point
EC_POINT_point2buf
EC_POINT_point2oct
EC_POINT_set_affine_coordinates
EC_POINT_set_affine_coordinates_GF2m
EC_POINT_set_affine_coordinates_GFp
EC_POINT_set_compressed_coordinates
EC_POINT_set_compressed_coordinates_GF2m
EC_POINT_set_compressed_coordinates_GFp
EC_POINT_set_Jprojective_coordinates_GFp
EC_POINT_set_to_infinity
ec_pre_comp_new
ec_scalar_mul_ladder
ec_wNAF_mul
ec_wNAF_precompute_mult
i2d_ECParameters
i2d_ECPKParameters
i2d_ECPrivateKey
i2o_ECPublicKey
nistp224_pre_comp_new
nistp256_pre_comp_new
nistp521_pre_comp_new
o2i_ECPublicKey
old_ec_priv_decode
ossl_ecdh_compute_key
ossl_ecdsa_sign_sig
ossl_ecdsa_verify_sig
pkey_ecd_ctrl
pkey_ecd_digestsign
pkey_ecd_digestsign25519
pkey_ecd_digestsign448
pkey_ecx_derive
pkey_ec_ctrl
pkey_ec_ctrl_str
pkey_ec_derive
pkey_ec_init
pkey_ec_kdf_derive
pkey_ec_keygen
pkey_ec_paramgen
pkey_ec_sign
validate_ecx_derive
asn1 error
bignum out of range
cannot invert
coordinates out of range
curve does not support ecdh
curve does not support signing
d2i ecpkparameters failure
discriminant is zero
ec group new by name failure
field too large
gf2m not supported
group2pkparameters failure
i2d ecpkparameters failure
incompatible objects
invalid compressed point
invalid compression bit
invalid curve
invalid digest
invalid encoding
invalid field
invalid form
invalid group order
invalid key
invalid output length
invalid peer key
invalid pentanomial basis
invalid private key
invalid trinomial basis
ladder post failure
ladder pre failure
ladder step failure
missing private key
need new setup values
not a NIST prime
not implemented
operation not supported
passed null parameter
pkparameters2group failure
point arithmetic failure
point at infinity
point coordinates blind failure
point is not on curve
random number generation failed
slot full
undefined generator
undefined order
unknown cofactor
unknown group
unknown order
unsupported field
wrong curve parameters
wrong order
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_key.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_kmeth.c
OpenSSL EC_KEY method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_mult.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_oct.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_pmeth.c
ec_paramgen_curve
ec_param_enc
ecdh_kdf_md
ecdh_cofactor_mode
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ec_print.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecdh_ossl.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecdsa_ossl.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecdsa_sign.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecdsa_vrf.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/eck_prn.c
Generator (compressed):
Generator (uncompressed):
Generator (hybrid):
ASN1 OID: %s
NIST CURVE: %s
Field Type: %s
Basis Type: %s
Polynomial:
Prime:
A:   
B:   
Order: 
Cofactor: 
Seed:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecp_mont.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecp_nist.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecp_oct.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecp_smpl.c
X25519
OpenSSL X25519 algorithm
X448
OpenSSL X448 algorithm
ED25519
OpenSSL ED25519 algorithm
ED448
OpenSSL ED448 algorithm
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ec/ecx_meth.c
%*s<INVALID PRIVATE KEY>
%*s%s Private-Key:
%*s<INVALID PUBLIC KEY>
%*s%s Public-Key:
engines
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_cnf.c
engine_id
soft_load
dynamic_path
LIST_ADD
default_algorithms
, name=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_ctrl.c
Dynamic engine loading support
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_dyn.c
v_check
bind_engine
Specifies the path to the new ENGINE shared library
NO_VCHECK
Specifies to continue even if version checking fails (boolean)
Specifies an ENGINE id name for loading
Whether to add a loaded ENGINE to the internal list (0=no,1=yes,2=mandatory)
DIR_LOAD
Specifies whether to load from 'DIR_ADD' directories (0=no,1=yes,2=mandatory)
DIR_ADD
Adds a directory from which ENGINEs can be loaded
Load up the ENGINE specified by other settings
digest_update
dynamic_ctrl
dynamic_get_data_ctx
dynamic_load
dynamic_set_data_ctx
ENGINE_add
ENGINE_by_id
ENGINE_cmd_is_executable
ENGINE_ctrl
ENGINE_ctrl_cmd
ENGINE_ctrl_cmd_string
ENGINE_finish
ENGINE_get_cipher
ENGINE_get_digest
ENGINE_get_first
ENGINE_get_last
ENGINE_get_next
ENGINE_get_pkey_asn1_meth
ENGINE_get_pkey_meth
ENGINE_get_prev
ENGINE_init
engine_list_add
engine_list_remove
ENGINE_load_private_key
ENGINE_load_public_key
ENGINE_load_ssl_client_cert
ENGINE_new
ENGINE_pkey_asn1_find_str
ENGINE_remove
ENGINE_set_default_string
ENGINE_set_id
ENGINE_set_name
engine_table_register
engine_unlocked_finish
ENGINE_up_ref
int_cleanup_item
int_ctrl_helper
int_engine_configure
int_engine_module_init
ossl_hmac_init
already loaded
argument is not a number
cmd not executable
command takes input
command takes no input
conflicting engine id
ctrl command not implemented
DSO failure
dso not found
engines section error
engine configuration error
engine is not in the list
engine section error
failed loading private key
failed loading public key
finish failed
'id' or 'name' missing
internal list error
invalid cmd name
invalid cmd number
invalid init value
invalid string
not initialised
not loaded
no control function
no index
no load function
no reference
no such engine
unimplemented cipher
unimplemented digest
unimplemented public key method
version incompatibility
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_fat.c
str=
RAND
CIPHERS
DIGESTS
PKEY
PKEY_CRYPTO
PKEY_ASN1
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_init.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_list.c
OPENSSL_ENGINES
Software engine support
(TEST_ENG_OPENSSL_RC4) test_init_key() called
(TEST_ENG_OPENSSL_PKEY)Loading Private key %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_pkey.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/eng_table.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/tb_asnmth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/tb_cipher.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/tb_digest.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/engine/tb_pkmeth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/err/err.c
lib(%lu)
func(%lu)
reason(%lu)
error:%08lX:%s:%s:%s
err:%lx:%lx:%lx:%lx
unknown library
system library
bignum routines
rsa routines
Diffie-Hellman routines
digital envelope routines
memory buffer routines
object identifier routines
PEM routines
dsa routines
x509 certificate routines
asn1 encoding routines
configuration file routines
common libcrypto routines
elliptic curve routines
ECDSA routines
ECDH routines
SSL routines
BIO routines
PKCS7 routines
X509 V3 routines
PKCS12 routines
random number generator
DSO support routines
time stamp routines
engine routines
OCSP routines
UI routines
FIPS routines
CMS routines
HMAC routines
CT routines
ASYNC routines
KDF routines
STORE routines
SM2 routines
system lib
BN lib
RSA lib
DH lib
EVP lib
BUF lib
OBJ lib
PEM lib
DSA lib
X509 lib
ASN1 lib
EC lib
BIO lib
PKCS7 lib
X509V3 lib
ENGINE lib
UI lib
STORE lib
ECDSA lib
nested asn1 error
missing asn1 eos
malloc failure
called a function you should not call
passed a null parameter
called a function that was disabled at compile-time
init fail
operation fail
fopen
getservbyname
ioctlsocket
opendir
fread
gethostbyname
fflush
ioctl
fcntl
%lu:%s:%s:%d:%s
base64 encoding
assertion failed: ctx->buf_off < (int)sizeof(ctx->buf)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/bio_b64.c
assertion failed: ctx->buf_len <= (int)sizeof(ctx->buf)
assertion failed: ctx->buf_len >= ctx->buf_off
assertion failed: i <= n
assertion failed: ctx->buf_off <= (int)sizeof(ctx->buf)
assertion failed: ctx->tmp_len <= 3
assertion failed: ctx->buf_off + i < (int)sizeof(ctx->buf)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/bio_enc.c
message digest
reliable
The quick brown fox jumped over the lazy dog's back.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/bio_ok.c
DESX
DESX-CBC
desx
DES-CBC
DES3
DES-EDE3-CBC
des3
DES-EDE-ECB
DES-EDE
des-ede-ecb
DES-EDE3-ECB
DES-EDE3
des-ede3-ecb
des3-wrap
id-smime-alg-CMS3DESwrap
IDEA-CBC
idea
SEED-CBC
SM4-CBC
RC2-CBC
rc2-128
rc2-64
RC2-64-CBC
rc2-40
RC2-40-CBC
BF-CBC
blowfish
CAST
CAST5-CBC
cast
CAST-cbc
cast-cbc
aes128-wrap
id-aes128-wrap
AES-128-CBC
aes128
aes192-wrap
id-aes192-wrap
AES192
AES-192-CBC
aes192
aes256-wrap
id-aes256-wrap
AES-256-CBC
aes256
ARIA-128-CBC
aria128
ARIA192
ARIA-192-CBC
aria192
ARIA-256-CBC
aria256
CAMELLIA-128-CBC
camellia128
CAMELLIA192
CAMELLIA-192-CBC
camellia192
CAMELLIA-256-CBC
camellia256
ripemd
RIPEMD160
rmd160
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/cmeth_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/digest.c
assertion failed: ctx->digest->md_size <= EVP_MAX_MD_SIZE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/e_aes.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/e_aria.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/e_camellia.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/e_chacha20_poly1305.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/e_des3.c
assertion failed: l <= sizeof(iv)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/e_rc2.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/encode.c
assertion failed: ctx->length <= (int)sizeof(ctx->enc_data)
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz./
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
alg_section
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/evp_cnf.c
fips_mode
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/evp_enc.c
assertion failed: ctx->cipher->block_size == 1 || ctx->cipher->block_size == 8 || ctx->cipher->block_size == 16
assertion failed: EVP_CIPHER_CTX_iv_length(ctx) <= (int)sizeof(ctx->iv)
assertion failed: b <= sizeof(ctx->buf)
assertion failed: b <= sizeof(ctx->final)
assertion failed: bl <= (int)sizeof(ctx->buf)
aesni_init_key
aes_gcm_ctrl
aes_init_key
aes_ocb_cipher
aes_t4_init_key
aes_wrap_cipher
alg_module_init
aria_ccm_init_key
aria_gcm_ctrl
aria_gcm_init_key
aria_init_key
b64_new
camellia_init_key
chacha20_poly1305_ctrl
cmll_t4_init_key
des_ede3_wrap_cipher
do_sigver_init
enc_new
EVP_CipherInit_ex
EVP_CIPHER_asn1_to_param
EVP_CIPHER_CTX_copy
EVP_CIPHER_CTX_ctrl
EVP_CIPHER_CTX_set_key_length
EVP_CIPHER_param_to_asn1
EVP_DecryptFinal_ex
EVP_DecryptUpdate
EVP_DigestFinalXOF
EVP_DigestInit_ex
evp_EncryptDecryptUpdate
EVP_EncryptFinal_ex
EVP_EncryptUpdate
EVP_MD_CTX_copy_ex
EVP_MD_size
EVP_OpenInit
EVP_PBE_alg_add
EVP_PBE_alg_add_type
EVP_PBE_CipherInit
EVP_PBE_scrypt
EVP_PKCS82PKEY
EVP_PKEY2PKCS8
EVP_PKEY_asn1_add0
EVP_PKEY_check
EVP_PKEY_copy_parameters
EVP_PKEY_CTX_ctrl
EVP_PKEY_CTX_ctrl_str
EVP_PKEY_CTX_dup
EVP_PKEY_CTX_md
EVP_PKEY_decrypt
EVP_PKEY_decrypt_init
EVP_PKEY_decrypt_old
EVP_PKEY_derive
EVP_PKEY_derive_init
EVP_PKEY_derive_set_peer
EVP_PKEY_encrypt
EVP_PKEY_encrypt_init
EVP_PKEY_encrypt_old
EVP_PKEY_get0_DH
EVP_PKEY_get0_DSA
EVP_PKEY_get0_EC_KEY
EVP_PKEY_get0_hmac
EVP_PKEY_get0_poly1305
EVP_PKEY_get0_RSA
EVP_PKEY_get0_siphash
EVP_PKEY_get_raw_private_key
EVP_PKEY_get_raw_public_key
EVP_PKEY_keygen
EVP_PKEY_keygen_init
EVP_PKEY_meth_add0
EVP_PKEY_meth_new
EVP_PKEY_new
EVP_PKEY_new_CMAC_key
EVP_PKEY_new_raw_private_key
EVP_PKEY_new_raw_public_key
EVP_PKEY_paramgen
EVP_PKEY_paramgen_init
EVP_PKEY_param_check
EVP_PKEY_public_check
EVP_PKEY_set1_engine
EVP_PKEY_set_alias_type
EVP_PKEY_sign
EVP_PKEY_sign_init
EVP_PKEY_verify
EVP_PKEY_verify_init
EVP_PKEY_verify_recover
EVP_PKEY_verify_recover_init
EVP_SignFinal
EVP_VerifyFinal
int_ctx_new
ok_new
PKCS5_PBE_keyivgen
PKCS5_v2_PBE_keyivgen
PKCS5_v2_PBKDF2_keyivgen
PKCS5_v2_scrypt_keyivgen
pkey_set_type
rc2_magic_to_meth
rc5_ctrl
s390x_aes_gcm_ctrl
aes key setup failed
aria key setup failed
bad decrypt
camellia key setup failed
cipher parameter error
command not supported
copy error
ctrl not implemented
ctrl operation not implemented
data not multiple of block length
different key types
different parameters
error setting fips mode
expecting an hmac key
expecting an rsa key
expecting a dh key
expecting a dsa key
expecting a ec key
expecting a poly1305 key
expecting a siphash key
get raw key failed
illegal scrypt parameters
initialization error
input not initialized
invalid fips mode
invalid operation
keygen failure
key setup failed
memory limit exceeded
message digest is null
method not supported
not XOF or invalid length
no cipher set
no key set
no operation set
only oneshot supported
operation not supported for this keytype
operaton not initialized
partially overlapping buffers
pbkdf2 error
pkey application asn1 method already registered
private key decode error
private key encode error
public key not rsa
unknown option
unknown pbe algorithm
unsupported algorithm
unsupported keylength
unsupported key derivation function
unsupported key size
unsupported number of rounds
unsupported prf
unsupported private key algorithm
unsupported salt type
wrap mode not allowed
wrong final block length
assertion failed: nkey <= EVP_MAX_KEY_LENGTH
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/evp_key.c
assertion failed: niv <= EVP_MAX_IV_LENGTH
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/evp_lib.c
assertion failed: l <= sizeof(c->iv)
assertion failed: j <= sizeof(c->iv)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/evp_pbe.c
TYPE=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/evp_pkey.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/m_sigver.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p5_crpt.c
assertion failed: EVP_CIPHER_key_length(cipher) <= (int)sizeof(md_tmp)
assertion failed: EVP_CIPHER_iv_length(cipher) <= 16
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p5_crpt2.c
assertion failed: keylen <= sizeof(key)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p_dec.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p_enc.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p_lib.c
Public Key
Private Key
Parameters
%s algorithm "%s" unsupported
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p_open.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p_sign.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/p_verify.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/pbe_scrypt.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/pmeth_fn.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/pmeth_gn.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/evp/pmeth_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ex_data.c
HMAC
OpenSSL HMAC method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/hmac/hm_pmeth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/hmac/hmac.c
idea(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/init.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/kdf/hkdf.c
mode
EXTRACT_AND_EXPAND
EXTRACT_ONLY
EXPAND_ONLY
hexsalt
hexinfo
pkey_hkdf_ctrl_str
pkey_hkdf_derive
pkey_hkdf_init
pkey_scrypt_ctrl_str
pkey_scrypt_ctrl_uint64
pkey_scrypt_derive
pkey_scrypt_init
pkey_scrypt_set_membuf
pkey_tls1_prf_ctrl_str
pkey_tls1_prf_derive
pkey_tls1_prf_init
tls1_prf_alg
missing iteration count
missing key
missing message digest
missing parameter
missing pass
missing salt
missing secret
missing seed
unknown parameter type
value error
value missing
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/kdf/scrypt.c
pass
hexpass
maxmem_bytes
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/kdf/tls1_prf.c
secret
hexsecret
hexseed
num_items             = %lu
num_nodes             = %u
num_alloc_nodes       = %u
num_expands           = %lu
num_expand_reallocs   = %lu
num_contracts         = %lu
num_contract_reallocs = %lu
num_hash_calls        = %lu
num_comp_calls        = %lu
num_insert            = %lu
num_replace           = %lu
num_delete            = %lu
num_no_delete         = %lu
num_retrieve          = %lu
num_retrieve_miss     = %lu
num_hash_comps        = %lu
node %6u -> %3u
%lu nodes used out of %u
%lu items
load %d.%02d  actual load %d.%02d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/lhash/lhash.c
assertion failed: size > 0
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/mem_sec.c
assertion failed: (size & (size - 1)) == 0
assertion failed: minsize > 0
assertion failed: (minsize & (minsize - 1)) == 0
assertion failed: sh.freelist != NULL
assertion failed: sh.bittable != NULL
assertion failed: sh.bitmalloc != NULL
assertion failed: list >= 0 && list < sh.freelist_size
assertion failed: ((ptr - sh.arena) & ((sh.arena_size >> list) - 1)) == 0
assertion failed: bit > 0 && bit < sh.bittable_size
assertion failed: !TESTBIT(table, bit)
assertion failed: WITHIN_FREELIST(list)
assertion failed: WITHIN_ARENA(ptr)
assertion failed: temp->next == NULL || WITHIN_ARENA(temp->next)
assertion failed: (char **)temp->next->p_next == list
assertion failed: !sh_testbit(temp, slist, sh.bitmalloc)
assertion failed: temp != sh.freelist[slist]
assertion failed: sh.freelist[slist] == temp
assertion failed: temp-(sh.arena_size >> slist) == sh_find_my_buddy(temp, slist)
assertion failed: sh_testbit(chunk, list, sh.bittable)
assertion failed: WITHIN_ARENA(chunk)
assertion failed: TESTBIT(table, bit)
assertion failed: WITHIN_FREELIST(temp2->p_next) || WITHIN_ARENA(temp2->p_next)
assertion failed: sh_testbit(ptr, list, sh.bittable)
assertion failed: ptr == sh_find_my_buddy(buddy, list)
assertion failed: !sh_testbit(ptr, list, sh.bitmalloc)
assertion failed: sh.freelist[list] == ptr
assertion failed: (bit & 1) == 0
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/modes/gcm128.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/modes/ocb128.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/o_fips.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/o_str.c
0123456789ABCDEF
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/objects/o_names.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/objects/obj_dat.c
.%lu
UNDEF
rsadsi
RSA Data Security, Inc.
pkcs
RSA Data Security, Inc. PKCS
rsaEncryption
RSA-MD2
md2WithRSAEncryption
RSA-MD5
md5WithRSAEncryption
PBE-MD2-DES
pbeWithMD2AndDES-CBC
PBE-MD5-DES
pbeWithMD5AndDES-CBC
X500
directory services (X.500)
X509
commonName
countryName
localityName
stateOrProvinceName
organizationName
organizationalUnitName
pkcs7
pkcs7-data
pkcs7-signedData
pkcs7-envelopedData
pkcs7-signedAndEnvelopedData
pkcs7-digestData
pkcs7-encryptedData
pkcs3
dhKeyAgreement
DES-ECB
des-ecb
DES-CFB
des-cfb
des-cbc
des-ede
des-ede3
idea-cbc
IDEA-CFB
idea-cfb
IDEA-ECB
idea-ecb
rc2-cbc
RC2-ECB
rc2-ecb
RC2-CFB
rc2-cfb
RC2-OFB
rc2-ofb
RSA-SHA
shaWithRSAEncryption
DES-EDE-CBC
des-ede-cbc
des-ede3-cbc
DES-OFB
des-ofb
IDEA-OFB
idea-ofb
pkcs9
emailAddress
unstructuredName
messageDigest
signingTime
countersignature
challengePassword
unstructuredAddress
extendedCertificateAttributes
Netscape
Netscape Communications Corp.
nsCertExt
Netscape Certificate Extension
nsDataType
Netscape Data Type
DES-EDE-CFB
des-ede-cfb
DES-EDE3-CFB
des-ede3-cfb
DES-EDE-OFB
des-ede-ofb
DES-EDE3-OFB
des-ede3-ofb
sha1WithRSAEncryption
DSA-SHA
dsaWithSHA
DSA-old
dsaEncryption-old
PBE-SHA1-RC2-64
pbeWithSHA1AndRC2-CBC
PBKDF2
DSA-SHA1-old
dsaWithSHA1-old
nsCertType
Netscape Cert Type
nsBaseUrl
Netscape Base Url
nsRevocationUrl
Netscape Revocation Url
nsCaRevocationUrl
Netscape CA Revocation Url
nsRenewalUrl
Netscape Renewal Url
nsCaPolicyUrl
Netscape CA Policy Url
nsSslServerName
Netscape SSL Server Name
nsComment
Netscape Comment
nsCertSequence
Netscape Certificate Sequence
desx-cbc
id-ce
X509v3 Subject Key Identifier
keyUsage
X509v3 Key Usage
privateKeyUsagePeriod
X509v3 Private Key Usage Period
subjectAltName
X509v3 Subject Alternative Name
issuerAltName
X509v3 Issuer Alternative Name
basicConstraints
X509v3 Basic Constraints
crlNumber
X509v3 CRL Number
certificatePolicies
X509v3 Certificate Policies
authorityKeyIdentifier
X509v3 Authority Key Identifier
bf-cbc
BF-ECB
bf-ecb
BF-CFB
bf-cfb
BF-OFB
bf-ofb
MDC2
mdc2
RSA-MDC2
mdc2WithRSA
RC4-40
rc4-40
rc2-40-cbc
givenName
surname
initials
uniqueIdentifier
crlDistributionPoints
X509v3 CRL Distribution Points
RSA-NP-MD5
md5WithRSA
cast5-cbc
CAST5-ECB
cast5-ecb
CAST5-CFB
cast5-cfb
CAST5-OFB
cast5-ofb
pbeWithMD5AndCast5CBC
DSA-SHA1
dsaWithSHA1
MD5-SHA1
md5-sha1
sha1WithRSA
dsaEncryption
ripemd160
RSA-RIPEMD160
ripemd160WithRSA
RC5-CBC
rc5-cbc
RC5-ECB
rc5-ecb
RC5-CFB
rc5-cfb
RC5-OFB
rc5-ofb
zlib compression
extendedKeyUsage
X509v3 Extended Key Usage
PKIX
id-kp
serverAuth
TLS Web Server Authentication
clientAuth
TLS Web Client Authentication
codeSigning
Code Signing
emailProtection
E-mail Protection
timeStamping
Time Stamping
msCodeInd
Microsoft Individual Code Signing
msCodeCom
Microsoft Commercial Code Signing
msCTLSign
Microsoft Trust List Signing
msSGC
Microsoft Server Gated Crypto
msEFS
Microsoft Encrypted File System
nsSGC
Netscape Server Gated Crypto
deltaCRL
X509v3 Delta CRL Indicator
CRLReason
X509v3 CRL Reason Code
invalidityDate
Invalidity Date
SXNetID
Strong Extranet ID
PBE-SHA1-RC4-128
pbeWithSHA1And128BitRC4
PBE-SHA1-RC4-40
pbeWithSHA1And40BitRC4
PBE-SHA1-3DES
pbeWithSHA1And3-KeyTripleDES-CBC
PBE-SHA1-2DES
pbeWithSHA1And2-KeyTripleDES-CBC
PBE-SHA1-RC2-128
pbeWithSHA1And128BitRC2-CBC
PBE-SHA1-RC2-40
pbeWithSHA1And40BitRC2-CBC
keyBag
pkcs8ShroudedKeyBag
certBag
crlBag
secretBag
safeContentsBag
friendlyName
localKeyID
x509Certificate
sdsiCertificate
x509Crl
PBES2
PBMAC1
hmacWithSHA1
id-qt-cps
Policy Qualifier CPS
id-qt-unotice
Policy Qualifier User Notice
rc2-64-cbc
SMIME-CAPS
S/MIME Capabilities
PBE-MD2-RC2-64
pbeWithMD2AndRC2-CBC
PBE-MD5-RC2-64
pbeWithMD5AndRC2-CBC
PBE-SHA1-DES
pbeWithSHA1AndDES-CBC
msExtReq
Microsoft Extension Request
extReq
Extension Request
dnQualifier
id-pe
id-ad
authorityInfoAccess
Authority Information Access
OCSP
caIssuers
CA Issuers
OCSPSigning
OCSP Signing
member-body
ISO Member Body
ISO-US
ISO US Member Body
X9-57
X9.57
X9cm
X9.57 CM ?
pkcs1
pkcs5
SMIME
S/MIME
id-smime-mod
id-smime-ct
id-smime-aa
id-smime-alg
id-smime-cd
id-smime-spq
id-smime-cti
id-smime-mod-cms
id-smime-mod-ess
id-smime-mod-oid
id-smime-mod-msg-v3
id-smime-mod-ets-eSignature-88
id-smime-mod-ets-eSignature-97
id-smime-mod-ets-eSigPolicy-88
id-smime-mod-ets-eSigPolicy-97
id-smime-ct-receipt
id-smime-ct-authData
id-smime-ct-publishCert
id-smime-ct-TSTInfo
id-smime-ct-TDTInfo
id-smime-ct-contentInfo
id-smime-ct-DVCSRequestData
id-smime-ct-DVCSResponseData
id-smime-aa-receiptRequest
id-smime-aa-securityLabel
id-smime-aa-mlExpandHistory
id-smime-aa-contentHint
id-smime-aa-msgSigDigest
id-smime-aa-encapContentType
id-smime-aa-contentIdentifier
id-smime-aa-macValue
id-smime-aa-equivalentLabels
id-smime-aa-contentReference
id-smime-aa-encrypKeyPref
id-smime-aa-signingCertificate
id-smime-aa-smimeEncryptCerts
id-smime-aa-timeStampToken
id-smime-aa-ets-sigPolicyId
id-smime-aa-ets-commitmentType
id-smime-aa-ets-signerLocation
id-smime-aa-ets-signerAttr
id-smime-aa-ets-otherSigCert
id-smime-aa-ets-contentTimestamp
id-smime-aa-ets-CertificateRefs
id-smime-aa-ets-RevocationRefs
id-smime-aa-ets-certValues
id-smime-aa-ets-revocationValues
id-smime-aa-ets-escTimeStamp
id-smime-aa-ets-certCRLTimestamp
id-smime-aa-ets-archiveTimeStamp
id-smime-aa-signatureType
id-smime-aa-dvcs-dvc
id-smime-alg-ESDHwith3DES
id-smime-alg-ESDHwithRC2
id-smime-alg-3DESwrap
id-smime-alg-RC2wrap
id-smime-alg-ESDH
id-smime-alg-CMSRC2wrap
id-smime-cd-ldap
id-smime-spq-ets-sqt-uri
id-smime-spq-ets-sqt-unotice
id-smime-cti-ets-proofOfOrigin
id-smime-cti-ets-proofOfReceipt
id-smime-cti-ets-proofOfDelivery
id-smime-cti-ets-proofOfSender
id-smime-cti-ets-proofOfApproval
id-smime-cti-ets-proofOfCreation
id-pkix-mod
id-qt
id-it
id-pkip
id-alg
id-cmc
id-on
id-pda
id-aca
id-qcs
id-cct
id-pkix1-explicit-88
id-pkix1-implicit-88
id-pkix1-explicit-93
id-pkix1-implicit-93
id-mod-crmf
id-mod-cmc
id-mod-kea-profile-88
id-mod-kea-profile-93
id-mod-cmp
id-mod-qualified-cert-88
id-mod-qualified-cert-93
id-mod-attribute-cert
id-mod-timestamp-protocol
id-mod-ocsp
id-mod-dvcs
id-mod-cmp2000
biometricInfo
Biometric Info
qcStatements
ac-auditEntity
ac-targeting
aaControls
sbgp-ipAddrBlock
sbgp-autonomousSysNum
sbgp-routerIdentifier
textNotice
ipsecEndSystem
IPSec End System
ipsecTunnel
IPSec Tunnel
ipsecUser
IPSec User
DVCS
dvcs
id-it-caProtEncCert
id-it-signKeyPairTypes
id-it-encKeyPairTypes
id-it-preferredSymmAlg
id-it-caKeyUpdateInfo
id-it-currentCRL
id-it-unsupportedOIDs
id-it-subscriptionRequest
id-it-subscriptionResponse
id-it-keyPairParamReq
id-it-keyPairParamRep
id-it-revPassphrase
id-it-implicitConfirm
id-it-confirmWaitTime
id-it-origPKIMessage
id-regCtrl
id-regInfo
id-regCtrl-regToken
id-regCtrl-authenticator
id-regCtrl-pkiPublicationInfo
id-regCtrl-pkiArchiveOptions
id-regCtrl-oldCertID
id-regCtrl-protocolEncrKey
id-regInfo-utf8Pairs
id-regInfo-certReq
id-alg-des40
id-alg-noSignature
id-alg-dh-sig-hmac-sha1
id-alg-dh-pop
id-cmc-statusInfo
id-cmc-identification
id-cmc-identityProof
id-cmc-dataReturn
id-cmc-transactionId
id-cmc-senderNonce
id-cmc-recipientNonce
id-cmc-addExtensions
id-cmc-encryptedPOP
id-cmc-decryptedPOP
id-cmc-lraPOPWitness
id-cmc-getCert
id-cmc-getCRL
id-cmc-revokeRequest
id-cmc-regInfo
id-cmc-responseInfo
id-cmc-queryPending
id-cmc-popLinkRandom
id-cmc-popLinkWitness
id-cmc-confirmCertAcceptance
id-on-personalData
id-pda-dateOfBirth
id-pda-placeOfBirth
id-pda-gender
id-pda-countryOfCitizenship
id-pda-countryOfResidence
id-aca-authenticationInfo
id-aca-accessIdentity
id-aca-chargingIdentity
id-aca-group
id-aca-role
id-qcs-pkixQCSyntax-v1
id-cct-crs
id-cct-PKIData
id-cct-PKIResponse
ad_timestamping
AD Time Stamping
AD_DVCS
ad dvcs
basicOCSPResponse
Basic OCSP Response
Nonce
OCSP Nonce
CrlID
OCSP CRL ID
acceptableResponses
Acceptable OCSP Responses
noCheck
OCSP No Check
archiveCutoff
OCSP Archive Cutoff
serviceLocator
OCSP Service Locator
extendedStatus
Extended OCSP Status
trustRoot
Trust Root
rsaSignature
X500algorithms
directory services - algorithms
IANA
iana
directory
Directory
mgmt
Management
experimental
Experimental
Private
Security
snmpv2
SNMPv2
Mail
enterprises
Enterprises
dcobject
dcObject
domainComponent
Domain
selected-attribute-types
Selected Attribute Types
clearance
RSA-MD4
md4WithRSAEncryption
ac-proxying
subjectInfoAccess
Subject Information Access
id-aca-encAttrs
role
policyConstraints
X509v3 Policy Constraints
targetInformation
X509v3 AC Targeting
noRevAvail
X509v3 No Revocation Available
ansi-X9-62
ANSI X9.62
prime-field
characteristic-two-field
id-ecPublicKey
prime192v1
prime192v2
prime192v3
prime239v1
prime239v2
prime239v3
prime256v1
ecdsa-with-SHA1
CSPName
Microsoft CSP Name
AES-128-ECB
aes-128-ecb
aes-128-cbc
AES-128-OFB
aes-128-ofb
AES-128-CFB
aes-128-cfb
AES-192-ECB
aes-192-ecb
aes-192-cbc
AES-192-OFB
aes-192-ofb
AES-192-CFB
aes-192-cfb
AES-256-ECB
aes-256-ecb
aes-256-cbc
AES-256-OFB
aes-256-ofb
AES-256-CFB
aes-256-cfb
holdInstructionCode
Hold Instruction Code
holdInstructionNone
Hold Instruction None
holdInstructionCallIssuer
Hold Instruction Call Issuer
holdInstructionReject
Hold Instruction Reject
pilot
pilotAttributeType
pilotAttributeSyntax
pilotObjectClass
pilotGroups
iA5StringSyntax
caseIgnoreIA5StringSyntax
pilotObject
pilotPerson
account
document
room
documentSeries
rFC822localPart
dNSDomain
domainRelatedObject
friendlyCountry
simpleSecurityObject
pilotOrganization
pilotDSA
qualityLabelledData
userId
textEncodedORAddress
mail
rfc822Mailbox
favouriteDrink
roomNumber
photo
userClass
manager
documentIdentifier
documentTitle
documentVersion
documentAuthor
documentLocation
homeTelephoneNumber
secretary
otherMailbox
lastModifiedTime
lastModifiedBy
aRecord
pilotAttributeType27
mXRecord
nSRecord
sOARecord
cNAMERecord
associatedDomain
associatedName
homePostalAddress
personalTitle
mobileTelephoneNumber
pagerTelephoneNumber
friendlyCountryName
organizationalStatus
janetMailbox
mailPreferenceOption
buildingName
dSAQuality
singleLevelQuality
subtreeMinimumQuality
subtreeMaximumQuality
personalSignature
dITRedirect
audio
documentPublisher
x500UniqueIdentifier
mime-mhs
MIME MHS
mime-mhs-headings
mime-mhs-bodies
id-hex-partial-message
id-hex-multipart-message
generationQualifier
pseudonym
id-set
Secure Electronic Transactions
set-ctype
content types
set-msgExt
message extensions
set-attr
set-policy
set-certExt
certificate extensions
set-brand
setct-PANData
setct-PANToken
setct-PANOnly
setct-OIData
setct-PI
setct-PIData
setct-PIDataUnsigned
setct-HODInput
setct-AuthResBaggage
setct-AuthRevReqBaggage
setct-AuthRevResBaggage
setct-CapTokenSeq
setct-PInitResData
setct-PI-TBS
setct-PResData
setct-AuthReqTBS
setct-AuthResTBS
setct-AuthResTBSX
setct-AuthTokenTBS
setct-CapTokenData
setct-CapTokenTBS
setct-AcqCardCodeMsg
setct-AuthRevReqTBS
setct-AuthRevResData
setct-AuthRevResTBS
setct-CapReqTBS
setct-CapReqTBSX
setct-CapResData
setct-CapRevReqTBS
setct-CapRevReqTBSX
setct-CapRevResData
setct-CredReqTBS
setct-CredReqTBSX
setct-CredResData
setct-CredRevReqTBS
setct-CredRevReqTBSX
setct-CredRevResData
setct-PCertReqData
setct-PCertResTBS
setct-BatchAdminReqData
setct-BatchAdminResData
setct-CardCInitResTBS
setct-MeAqCInitResTBS
setct-RegFormResTBS
setct-CertReqData
setct-CertReqTBS
setct-CertResData
setct-CertInqReqTBS
setct-ErrorTBS
setct-PIDualSignedTBE
setct-PIUnsignedTBE
setct-AuthReqTBE
setct-AuthResTBE
setct-AuthResTBEX
setct-AuthTokenTBE
setct-CapTokenTBE
setct-CapTokenTBEX
setct-AcqCardCodeMsgTBE
setct-AuthRevReqTBE
setct-AuthRevResTBE
setct-AuthRevResTBEB
setct-CapReqTBE
setct-CapReqTBEX
setct-CapResTBE
setct-CapRevReqTBE
setct-CapRevReqTBEX
setct-CapRevResTBE
setct-CredReqTBE
setct-CredReqTBEX
setct-CredResTBE
setct-CredRevReqTBE
setct-CredRevReqTBEX
setct-CredRevResTBE
setct-BatchAdminReqTBE
setct-BatchAdminResTBE
setct-RegFormReqTBE
setct-CertReqTBE
setct-CertReqTBEX
setct-CertResTBE
setct-CRLNotificationTBS
setct-CRLNotificationResTBS
setct-BCIDistributionTBS
setext-genCrypt
generic cryptogram
setext-miAuth
merchant initiated auth
setext-pinSecure
setext-pinAny
setext-track2
setext-cv
additional verification
set-policy-root
setCext-hashedRoot
setCext-certType
setCext-merchData
setCext-cCertRequired
setCext-tunneling
setCext-setExt
setCext-setQualf
setCext-PGWYcapabilities
setCext-TokenIdentifier
setCext-Track2Data
setCext-TokenType
setCext-IssuerCapabilities
setAttr-Cert
setAttr-PGWYcap
payment gateway capabilities
setAttr-TokenType
setAttr-IssCap
issuer capabilities
set-rootKeyThumb
set-addPolicy
setAttr-Token-EMV
setAttr-Token-B0Prime
setAttr-IssCap-CVM
setAttr-IssCap-T2
setAttr-IssCap-Sig
setAttr-GenCryptgrm
generate cryptogram
setAttr-T2Enc
encrypted track 2
setAttr-T2cleartxt
cleartext track 2
setAttr-TokICCsig
ICC or token signature
setAttr-SecDevSig
secure device signature
set-brand-IATA-ATA
set-brand-Diners
set-brand-AmericanExpress
set-brand-JCB
set-brand-Visa
set-brand-MasterCard
set-brand-Novus
DES-CDMF
des-cdmf
rsaOAEPEncryptionSET
ITU-T
itu-t
JOINT-ISO-ITU-T
joint-iso-itu-t
international-organizations
International Organizations
msSmartcardLogin
Microsoft Smartcardlogin
msUPN
Microsoft Universal Principal Name
AES-128-CFB1
aes-128-cfb1
AES-192-CFB1
aes-192-cfb1
AES-256-CFB1
aes-256-cfb1
AES-128-CFB8
aes-128-cfb8
AES-192-CFB8
aes-192-cfb8
AES-256-CFB8
aes-256-cfb8
DES-CFB1
des-cfb1
DES-CFB8
des-cfb8
DES-EDE3-CFB1
des-ede3-cfb1
DES-EDE3-CFB8
des-ede3-cfb8
street
streetAddress
postalCode
id-ppl
proxyCertInfo
Proxy Certificate Information
id-ppl-anyLanguage
Any language
id-ppl-inheritAll
Inherit all
nameConstraints
X509v3 Name Constraints
id-ppl-independent
Independent
RSA-SHA256
sha256WithRSAEncryption
RSA-SHA384
sha384WithRSAEncryption
RSA-SHA512
sha512WithRSAEncryption
RSA-SHA224
sha224WithRSAEncryption
sha256
sha384
SHA512
sha512
SHA224
sha224
identified-organization
certicom-arc
wap-wsg
id-characteristic-two-basis
onBasis
tpBasis
ppBasis
c2pnb163v1
c2pnb163v2
c2pnb163v3
c2pnb176v1
c2tnb191v1
c2tnb191v2
c2tnb191v3
c2onb191v4
c2onb191v5
c2pnb208w1
c2tnb239v1
c2tnb239v2
c2tnb239v3
c2onb239v4
c2onb239v5
c2pnb272w1
c2pnb304w1
c2tnb359v1
c2pnb368w1
c2tnb431r1
secp112r1
secp112r2
secp128r1
secp128r2
secp224r1
secp384r1
secp521r1
sect113r1
sect113r2
sect131r1
sect131r2
sect163k1
sect163r2
sect233k1
sect233r1
sect283k1
sect283r1
sect409k1
sect409r1
sect571k1
sect571r1
wap-wsg-idm-ecid-wtls1
wap-wsg-idm-ecid-wtls3
wap-wsg-idm-ecid-wtls4
wap-wsg-idm-ecid-wtls5
wap-wsg-idm-ecid-wtls6
wap-wsg-idm-ecid-wtls7
wap-wsg-idm-ecid-wtls8
wap-wsg-idm-ecid-wtls9
wap-wsg-idm-ecid-wtls10
wap-wsg-idm-ecid-wtls11
wap-wsg-idm-ecid-wtls12
anyPolicy
X509v3 Any Policy
policyMappings
X509v3 Policy Mappings
inhibitAnyPolicy
X509v3 Inhibit Any Policy
Oakley-EC2N-3
ipsec3
Oakley-EC2N-4
ipsec4
camellia-128-cbc
camellia-192-cbc
camellia-256-cbc
CAMELLIA-128-ECB
camellia-128-ecb
CAMELLIA-192-ECB
camellia-192-ecb
CAMELLIA-256-ECB
camellia-256-ecb
CAMELLIA-128-CFB
camellia-128-cfb
CAMELLIA-192-CFB
camellia-192-cfb
CAMELLIA-256-CFB
camellia-256-cfb
CAMELLIA-128-CFB1
camellia-128-cfb1
CAMELLIA-192-CFB1
camellia-192-cfb1
CAMELLIA-256-CFB1
camellia-256-cfb1
CAMELLIA-128-CFB8
camellia-128-cfb8
CAMELLIA-192-CFB8
camellia-192-cfb8
CAMELLIA-256-CFB8
camellia-256-cfb8
CAMELLIA-128-OFB
camellia-128-ofb
CAMELLIA-192-OFB
camellia-192-ofb
CAMELLIA-256-OFB
camellia-256-ofb
subjectDirectoryAttributes
X509v3 Subject Directory Attributes
issuingDistributionPoint
X509v3 Issuing Distribution Point
certificateIssuer
X509v3 Certificate Issuer
KISA
kisa
SEED-ECB
seed-ecb
seed-cbc
SEED-OFB
seed-ofb
SEED-CFB
seed-cfb
HMAC-MD5
hmac-md5
HMAC-SHA1
hmac-sha1
id-PasswordBasedMAC
password based MAC
id-DHBasedMac
Diffie-Hellman based MAC
id-it-suppLangTags
caRepository
CA Repository
id-smime-ct-compressedData
id-ct-asciiTextWithCRLF
ecdsa-with-Recommended
ecdsa-with-Specified
ecdsa-with-SHA224
ecdsa-with-SHA256
ecdsa-with-SHA384
ecdsa-with-SHA512
hmacWithMD5
hmacWithSHA224
hmacWithSHA256
hmacWithSHA384
hmacWithSHA512
dsa_with_SHA224
dsa_with_SHA256
whirlpool
cryptopro
cryptocom
id-GostR3411-94-with-GostR3410-2001
GOST R 34.11-94 with GOST R 34.10-2001
id-GostR3411-94-with-GostR3410-94
GOST R 34.11-94 with GOST R 34.10-94
md_gost94
GOST R 34.11-94
id-HMACGostR3411-94
HMAC GOST 34.11-94
GOST R 34.10-2001
gost94
GOST R 34.10-94
gost89
GOST 28147-89
gost89-cnt
GOST 28147-89 MAC
prf-gostr3411-94
GOST R 34.11-94 PRF
id-GostR3410-2001DH
GOST R 34.10-2001 DH
id-GostR3410-94DH
GOST R 34.10-94 DH
id-Gost28147-89-CryptoPro-KeyMeshing
id-Gost28147-89-None-KeyMeshing
id-GostR3411-94-TestParamSet
id-GostR3411-94-CryptoProParamSet
id-Gost28147-89-TestParamSet
id-Gost28147-89-CryptoPro-A-ParamSet
id-Gost28147-89-CryptoPro-B-ParamSet
id-Gost28147-89-CryptoPro-C-ParamSet
id-Gost28147-89-CryptoPro-D-ParamSet
id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet
id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet
id-Gost28147-89-CryptoPro-RIC-1-ParamSet
id-GostR3410-94-TestParamSet
id-GostR3410-94-CryptoPro-A-ParamSet
id-GostR3410-94-CryptoPro-B-ParamSet
id-GostR3410-94-CryptoPro-C-ParamSet
id-GostR3410-94-CryptoPro-D-ParamSet
id-GostR3410-94-CryptoPro-XchA-ParamSet
id-GostR3410-94-CryptoPro-XchB-ParamSet
id-GostR3410-94-CryptoPro-XchC-ParamSet
id-GostR3410-2001-TestParamSet
id-GostR3410-2001-CryptoPro-A-ParamSet
id-GostR3410-2001-CryptoPro-B-ParamSet
id-GostR3410-2001-CryptoPro-C-ParamSet
id-GostR3410-2001-CryptoPro-XchA-ParamSet
id-GostR3410-2001-CryptoPro-XchB-ParamSet
id-GostR3410-94-a
id-GostR3410-94-aBis
id-GostR3410-94-b
id-GostR3410-94-bBis
id-Gost28147-89-cc
GOST 28147-89 Cryptocom ParamSet
gost94cc
GOST 34.10-94 Cryptocom
gost2001cc
GOST 34.10-2001 Cryptocom
id-GostR3411-94-with-GostR3410-94-cc
GOST R 34.11-94 with GOST R 34.10-94 Cryptocom
id-GostR3411-94-with-GostR3410-2001-cc
GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom
id-GostR3410-2001-ParamSet-cc
GOST R 3410-2001 Parameter Set Cryptocom
hmac
LocalKeySet
Microsoft Local Key set
freshestCRL
X509v3 Freshest CRL
id-on-permanentIdentifier
Permanent Identifier
searchGuide
businessCategory
postalAddress
postOfficeBox
physicalDeliveryOfficeName
telephoneNumber
telexNumber
teletexTerminalIdentifier
facsimileTelephoneNumber
x121Address
internationaliSDNNumber
registeredAddress
destinationIndicator
preferredDeliveryMethod
presentationAddress
supportedApplicationContext
member
roleOccupant
seeAlso
userPassword
userCertificate
cACertificate
authorityRevocationList
certificateRevocationList
crossCertificatePair
enhancedSearchGuide
protocolInformation
distinguishedName
uniqueMember
houseIdentifier
supportedAlgorithms
deltaRevocationList
dmdName
id-alg-PWRI-KEK
cmac
id-aes128-GCM
aes-128-gcm
id-aes128-CCM
aes-128-ccm
id-aes128-wrap-pad
id-aes192-GCM
aes-192-gcm
id-aes192-CCM
aes-192-ccm
id-aes192-wrap-pad
id-aes256-GCM
aes-256-gcm
id-aes256-CCM
aes-256-ccm
id-aes256-wrap-pad
AES-128-CTR
aes-128-ctr
AES-192-CTR
aes-192-ctr
AES-256-CTR
aes-256-ctr
id-camellia128-wrap
id-camellia192-wrap
id-camellia256-wrap
anyExtendedKeyUsage
Any Extended Key Usage
MGF1
mgf1
RSASSA-PSS
rsassaPss
AES-128-XTS
aes-128-xts
AES-256-XTS
aes-256-xts
rc4-hmac-md5
aes-128-cbc-hmac-sha1
AES-192-CBC-HMAC-SHA1
aes-192-cbc-hmac-sha1
aes-256-cbc-hmac-sha1
RSAES-OAEP
rsaesOaep
dhpublicnumber
brainpoolP160r1
brainpoolP160t1
brainpoolP192r1
brainpoolP192t1
brainpoolP224r1
brainpoolP224t1
brainpoolP256t1
brainpoolP320r1
brainpoolP320t1
brainpoolP384t1
brainpoolP512t1
PSPECIFIED
pSpecified
dhSinglePass-stdDH-sha1kdf-scheme
dhSinglePass-stdDH-sha224kdf-scheme
dhSinglePass-stdDH-sha256kdf-scheme
dhSinglePass-stdDH-sha384kdf-scheme
dhSinglePass-stdDH-sha512kdf-scheme
dhSinglePass-cofactorDH-sha1kdf-scheme
dhSinglePass-cofactorDH-sha224kdf-scheme
dhSinglePass-cofactorDH-sha256kdf-scheme
dhSinglePass-cofactorDH-sha384kdf-scheme
dhSinglePass-cofactorDH-sha512kdf-scheme
dh-std-kdf
dh-cofactor-kdf
aes-128-cbc-hmac-sha256
AES-192-CBC-HMAC-SHA256
aes-192-cbc-hmac-sha256
aes-256-cbc-hmac-sha256
ct_precert_scts
CT Precertificate SCTs
ct_precert_poison
CT Precertificate Poison
ct_precert_signer
CT Precertificate Signer
ct_cert_scts
CT Certificate SCTs
jurisdictionL
jurisdictionLocalityName
jurisdictionST
jurisdictionStateOrProvinceName
jurisdictionC
jurisdictionCountryName
AES-128-OCB
aes-128-ocb
AES-192-OCB
aes-192-ocb
AES-256-OCB
aes-256-ocb
CAMELLIA-128-GCM
camellia-128-gcm
CAMELLIA-128-CCM
camellia-128-ccm
CAMELLIA-128-CTR
camellia-128-ctr
CAMELLIA-128-CMAC
camellia-128-cmac
CAMELLIA-192-GCM
camellia-192-gcm
CAMELLIA-192-CCM
camellia-192-ccm
CAMELLIA-192-CTR
camellia-192-ctr
CAMELLIA-192-CMAC
camellia-192-cmac
CAMELLIA-256-GCM
camellia-256-gcm
CAMELLIA-256-CCM
camellia-256-ccm
CAMELLIA-256-CTR
camellia-256-ctr
CAMELLIA-256-CMAC
camellia-256-cmac
id-scrypt
id-tc26
gost89-cnt-12
id-tc26-algorithms
id-tc26-sign
GOST R 34.10-2012 with 256 bit modulus
GOST R 34.10-2012 with 512 bit modulus
id-tc26-digest
md_gost12_256
GOST R 34.11-2012 with 256 bit hash
md_gost12_512
GOST R 34.11-2012 with 512 bit hash
id-tc26-signwithdigest
id-tc26-signwithdigest-gost3410-2012-256
GOST R 34.10-2012 with GOST R 34.11-2012 (256 bit)
id-tc26-signwithdigest-gost3410-2012-512
GOST R 34.10-2012 with GOST R 34.11-2012 (512 bit)
id-tc26-mac
id-tc26-hmac-gost-3411-2012-256
HMAC GOST 34.11-2012 256 bit
id-tc26-hmac-gost-3411-2012-512
HMAC GOST 34.11-2012 512 bit
id-tc26-cipher
id-tc26-agreement
id-tc26-agreement-gost-3410-2012-256
id-tc26-agreement-gost-3410-2012-512
id-tc26-constants
id-tc26-sign-constants
id-tc26-gost-3410-2012-512-constants
id-tc26-gost-3410-2012-512-paramSetTest
GOST R 34.10-2012 (512 bit) testing parameter set
id-tc26-gost-3410-2012-512-paramSetA
GOST R 34.10-2012 (512 bit) ParamSet A
id-tc26-gost-3410-2012-512-paramSetB
GOST R 34.10-2012 (512 bit) ParamSet B
id-tc26-digest-constants
id-tc26-cipher-constants
id-tc26-gost-28147-constants
id-tc26-gost-28147-param-Z
GOST 28147-89 TC26 parameter set
OGRN
SNILS
subjectSignTool
Signing Tool of Subject
issuerSignTool
Signing Tool of Issuer
gost89-cbc
gost89-ecb
gost89-ctr
grasshopper-ecb
grasshopper-ctr
grasshopper-ofb
grasshopper-cbc
grasshopper-cfb
grasshopper-mac
ChaCha20-Poly1305
chacha20-poly1305
ChaCha20
chacha20
tlsfeature
TLS Feature
TLS1-PRF
tls1-prf
ipsecIKE
ipsec Internet Key Exchange
capwapAC
Ctrl/provision WAP Access
capwapWTP
Ctrl/Provision WAP Termination
secureShellClient
SSH Client
secureShellServer
SSH Server
sendRouter
Send Router
sendProxiedRouter
Send Proxied Router
sendOwner
Send Owner
sendProxiedOwner
Send Proxied Owner
id-pkinit
pkInitClientAuth
PKINIT Client Auth
pkInitKDC
Signing KDC Response
HKDF
hkdf
KxRSA
kx-rsa
KxECDHE
kx-ecdhe
KxDHE
kx-dhe
KxECDHE-PSK
kx-ecdhe-psk
KxDHE-PSK
kx-dhe-psk
KxRSA_PSK
kx-rsa-psk
KxPSK
kx-psk
KxSRP
kx-srp
KxGOST
kx-gost
AuthRSA
auth-rsa
AuthECDSA
auth-ecdsa
AuthPSK
auth-psk
AuthDSS
auth-dss
AuthGOST01
auth-gost01
AuthGOST12
auth-gost12
AuthSRP
auth-srp
AuthNULL
auth-null
BLAKE2b512
blake2b512
BLAKE2s256
blake2s256
id-smime-ct-contentCollection
id-smime-ct-authEnvelopedData
id-ct-xml
Poly1305
poly1305
SipHash
siphash
KxANY
kx-any
AuthANY
auth-any
ARIA-128-ECB
aria-128-ecb
aria-128-cbc
ARIA-128-CFB
aria-128-cfb
ARIA-128-OFB
aria-128-ofb
ARIA-128-CTR
aria-128-ctr
ARIA-192-ECB
aria-192-ecb
aria-192-cbc
ARIA-192-CFB
aria-192-cfb
ARIA-192-OFB
aria-192-ofb
ARIA-192-CTR
aria-192-ctr
ARIA-256-ECB
aria-256-ecb
aria-256-cbc
ARIA-256-CFB
aria-256-cfb
ARIA-256-OFB
aria-256-ofb
ARIA-256-CTR
aria-256-ctr
ARIA-128-CFB1
aria-128-cfb1
ARIA-192-CFB1
aria-192-cfb1
ARIA-256-CFB1
aria-256-cfb1
ARIA-128-CFB8
aria-128-cfb8
ARIA-192-CFB8
aria-192-cfb8
ARIA-256-CFB8
aria-256-cfb8
id-smime-aa-signingCertificateV2
organizationIdentifier
countryCode3c
countryCode3n
dnsName
x509ExtAdmission
Professional Information or basis for Admission
SHA512-224
sha512-224
SHA512-256
sha512-256
SHA3-224
sha3-224
SHA3-256
sha3-256
SHA3-384
sha3-384
SHA3-512
sha3-512
SHAKE128
shake128
SHAKE256
shake256
id-hmacWithSHA3-224
hmac-sha3-224
id-hmacWithSHA3-256
hmac-sha3-256
id-hmacWithSHA3-384
hmac-sha3-384
id-hmacWithSHA3-512
hmac-sha3-512
id-dsa-with-sha384
dsa_with_SHA384
id-dsa-with-sha512
dsa_with_SHA512
id-dsa-with-sha3-224
dsa_with_SHA3-224
id-dsa-with-sha3-256
dsa_with_SHA3-256
id-dsa-with-sha3-384
dsa_with_SHA3-384
id-dsa-with-sha3-512
dsa_with_SHA3-512
id-ecdsa-with-sha3-224
ecdsa_with_SHA3-224
id-ecdsa-with-sha3-256
ecdsa_with_SHA3-256
id-ecdsa-with-sha3-384
ecdsa_with_SHA3-384
id-ecdsa-with-sha3-512
ecdsa_with_SHA3-512
id-rsassa-pkcs1-v1_5-with-sha3-224
RSA-SHA3-224
id-rsassa-pkcs1-v1_5-with-sha3-256
RSA-SHA3-256
id-rsassa-pkcs1-v1_5-with-sha3-384
RSA-SHA3-384
id-rsassa-pkcs1-v1_5-with-sha3-512
RSA-SHA3-512
ARIA-128-CCM
aria-128-ccm
ARIA-192-CCM
aria-192-ccm
ARIA-256-CCM
aria-256-ccm
ARIA-128-GCM
aria-128-gcm
ARIA-192-GCM
aria-192-gcm
ARIA-256-GCM
aria-256-gcm
cmcCA
CMC Certificate Authority
cmcRA
CMC Registration Authority
SM4-ECB
sm4-ecb
sm4-cbc
SM4-OFB
sm4-ofb
SM4-CFB1
sm4-cfb1
SM4-CFB
sm4-cfb
SM4-CFB8
sm4-cfb8
SM4-CTR
sm4-ctr
ISO-CN
ISO CN Member Body
oscca
sm-scheme
RSA-SM3
sm3WithRSAEncryption
RSA-SHA512/224
sha512-224WithRSAEncryption
RSA-SHA512/256
sha512-256WithRSAEncryption
id-tc26-gost-3410-2012-256-constants
id-tc26-gost-3410-2012-256-paramSetA
GOST R 34.10-2012 (256 bit) ParamSet A
id-tc26-gost-3410-2012-512-paramSetC
GOST R 34.10-2012 (512 bit) ParamSet C
ISO-UA
ua-pki
dstu28147
DSTU Gost 28147-2009
dstu28147-ofb
DSTU Gost 28147-2009 OFB mode
dstu28147-cfb
DSTU Gost 28147-2009 CFB mode
dstu28147-wrap
DSTU Gost 28147-2009 key wrap
hmacWithDstu34311
HMAC DSTU Gost 34311-95
dstu34311
DSTU Gost 34311-95
dstu4145le
DSTU 4145-2002 little endian
dstu4145be
DSTU 4145-2002 big endian
uacurve0
DSTU curve 0
uacurve1
DSTU curve 1
uacurve2
DSTU curve 2
uacurve3
DSTU curve 3
uacurve4
DSTU curve 4
uacurve5
DSTU curve 5
uacurve6
DSTU curve 6
uacurve7
DSTU curve 7
uacurve8
DSTU curve 8
uacurve9
DSTU curve 9
ieee
ieee-siswg
IEEE Security in Storage Working Group
id-tc26-cipher-gostr3412-2015-magma
id-tc26-cipher-gostr3412-2015-magma-ctracpkm
id-tc26-cipher-gostr3412-2015-magma-ctracpkm-omac
id-tc26-cipher-gostr3412-2015-kuznyechik
id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm
id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm-omac
id-tc26-wrap
id-tc26-wrap-gostr3412-2015-magma
id-tc26-wrap-gostr3412-2015-magma-kexp15
id-tc26-wrap-gostr3412-2015-kuznyechik
id-tc26-wrap-gostr3412-2015-kuznyechik-kexp15
id-tc26-gost-3410-2012-256-paramSetB
GOST R 34.10-2012 (256 bit) ParamSet B
id-tc26-gost-3410-2012-256-paramSetC
GOST R 34.10-2012 (256 bit) ParamSet C
id-tc26-gost-3410-2012-256-paramSetD
GOST R 34.10-2012 (256 bit) ParamSet D
magma-ecb
magma-ctr
magma-ofb
magma-cbc
magma-cfb
magma-mac
hmacWithSHA512-224
hmacWithSHA512-256
OBJ_add_object
OBJ_add_sigid
OBJ_create
OBJ_dup
OBJ_NAME_new_index
OBJ_nid2ln
OBJ_nid2obj
OBJ_nid2sn
OBJ_txt2obj
oid exists
unknown nid
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/objects/obj_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/objects/obj_xref.c
OCSP_SIGNATURE
OCSP_CERTID
OCSP_ONEREQ
OCSP_REQINFO
OCSP_REQUEST
OCSP_RESPBYTES
OCSP_RESPONSE
OCSP_RESPID
OCSP_REVOKEDINFO
OCSP_CERTSTATUS
OCSP_SINGLERESP
OCSP_RESPDATA
OCSP_BASICRESP
OCSP_CRLID
OCSP_SERVICELOC
hashAlgorithm
issuerNameHash
issuerKeyHash
reqCert
singleRequestExtensions
requestorName
requestList
requestExtensions
tbsRequest
optionalSignature
responseType
response
responseStatus
responseBytes
value.byName
value.byKey
revocationTime
revocationReason
value.good
value.revoked
value.unknown
certId
certStatus
thisUpdate
nextUpdate
singleExtensions
responderId
producedAt
responses
responseExtensions
tbsResponseData
crlUrl
crlNum
crlTime
locator
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ocsp/ocsp_cl.c
d2i_ocsp_nonce
OCSP_basic_add1_status
OCSP_basic_sign
OCSP_basic_sign_ctx
OCSP_basic_verify
OCSP_cert_id_new
ocsp_check_delegated
ocsp_check_ids
ocsp_check_issuer
OCSP_check_validity
ocsp_match_issuerid
OCSP_parse_url
OCSP_request_sign
OCSP_request_verify
OCSP_response_get1_basic
parse_http_line1
digest err
error in nextupdate field
error in thisupdate field
error parsing url
missing ocspsigning usage
nextupdate before thisupdate
not basic response
no certificates in chain
no response data
no revoked time
no signer key
request not signed
response contains no revocation data
root ca not trusted
server response error
server response parse error
signature failure
status expired
status not yet valid
status too old
unknown message digest
unsupported requestorname type
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ocsp/ocsp_ext.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ocsp/ocsp_ht.c
Code=
,Reason=
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ocsp/ocsp_lib.c
successful
malformedrequest
internalerror
trylater
sigrequired
unauthorized
good
revoked
unspecified
keyCompromise
cACompromise
affiliationChanged
superseded
cessationOfOperation
certificateHold
removeFromCRL
OCSP Request Data:
    Version: %lu (0x%lx)
    Requestor Name: 
    Requestor List:
Request Single Extensions
Request Extensions
OCSP Response Data:
    OCSP Response Status: %s (0x%lx)
    Response Type: 
 (unknown response type)
    Version: %lu (0x%lx)
    Responder Id: 
    Produced At: 
    Responses:
    Cert Status: %s
    Revocation Time: 
    Revocation Reason: %s (0x%lx)
    This Update: 
    Next Update: 
Response Single Extensions
Response Extensions
(UNKNOWN)
%*sCertificate ID:
%*sHash Algorithm: 
%*sIssuer Name Hash: 
%*sIssuer Key Hash: 
%*sSerial Number: 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ocsp/ocsp_srv.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ocsp/ocsp_vfy.c
%*scrlUrl: 
%*scrlNum: 
%*scrlTime: 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ocsp/v3_ocsp.c
%*sIssuer: 
CERTIFICATE REQUEST
NEW CERTIFICATE REQUEST
X509 CRL
PKCS7
RSA PRIVATE KEY
DSA PRIVATE KEY
DSA PARAMETERS
EC PARAMETERS
EC PRIVATE KEY
DH PARAMETERS
X9.42 DH PARAMETERS
b2i_dss
b2i_PVK_bio
b2i_rsa
check_bitlen_dsa
check_bitlen_rsa
d2i_PKCS8PrivateKey_bio
d2i_PKCS8PrivateKey_fp
do_b2i
do_b2i_bio
do_blob_header
do_i2b
do_pk8pkey
do_pk8pkey_fp
do_PVK_body
do_PVK_header
get_header_and_data
get_name
i2b_PVK
i2b_PVK_bio
load_iv
PEM_ASN1_read
PEM_ASN1_read_bio
PEM_ASN1_write
PEM_ASN1_write_bio
PEM_def_callback
PEM_do_header
PEM_get_EVP_CIPHER_INFO
PEM_read
PEM_read_bio
PEM_read_bio_DHparams
PEM_read_bio_ex
PEM_read_bio_Parameters
PEM_read_DHparams
PEM_read_PrivateKey
PEM_SignFinal
PEM_write
PEM_write_bio
PEM_write_PrivateKey
PEM_X509_INFO_read
PEM_X509_INFO_read_bio
PEM_X509_INFO_write_bio
bad base64 decode
bad end line
bad iv chars
bad magic number
bad password read
bad version number
bio write failure
cipher is null
error converting private key
expecting private key blob
expecting public key blob
inconsistent header
keyblob header parse error
keyblob too short
missing dek iv
not dek info
not encrypted
not proc type
no start line
problems getting password
pvk data too short
pvk too short
read key
short header
unexpected dek iv
unsupported encryption
unsupported key components
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pem/pem_info.c
X509 CERTIFICATE
TRUSTED CERTIFICATE
Enter PEM pass phrase:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pem/pem_lib.c
MIC-CLEAR
MIC-ONLY
BAD-TYPE
Proc-Type: 4,%s
DEK-Info: %s,
Expecting: 
ANY PRIVATE KEY
ENCRYPTED PRIVATE KEY
PRIVATE KEY
PARAMETERS
PKCS #7 SIGNED DATA
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pem/pem_oth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pem/pem_pk8.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pem/pem_pkey.c
%s PRIVATE KEY
%s PARAMETERS
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pem/pem_sign.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pem/pvkfmt.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_add.c
PKCS12
PKCS12_MAC_DATA
PKCS12_BAGS
PKCS12_SAFEBAG
PKCS12_SAFEBAGS
PKCS12_AUTHSAFES
authsafes
dinfo
value.x509cert
value.x509crl
value.sdsicert
value.other
attrib
value.keybag
value.shkeybag
value.safes
value.bag
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_crpt.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_crt.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_decr.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_init.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_key.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_kiss.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_mutl.c
LEGACY_GOST_PKCS12
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_npas.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_p8e.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_sbag.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs12/p12_utl.c
OPENSSL_asc2uni
OPENSSL_uni2asc
OPENSSL_uni2utf8
OPENSSL_utf82uni
PKCS12_create
PKCS12_gen_mac
PKCS12_init
PKCS12_item_decrypt_d2i
PKCS12_item_i2d_encrypt
PKCS12_item_pack_safebag
PKCS12_key_gen_asc
PKCS12_key_gen_uni
PKCS12_key_gen_utf8
PKCS12_newpass
PKCS12_pack_p7data
PKCS12_pack_p7encdata
PKCS12_parse
PKCS12_pbe_crypt
PKCS12_PBE_keyivgen
PKCS12_SAFEBAG_create0_p8inf
PKCS12_SAFEBAG_create0_pkcs8
PKCS12_SAFEBAG_create_pkcs8_encrypt
PKCS12_setup_mac
PKCS12_set_mac
PKCS12_unpack_authsafes
PKCS12_unpack_p7data
PKCS12_verify_mac
PKCS8_encrypt
PKCS8_set0_pbe
cant pack structure
content type not data
encrypt error
error setting encrypted data type
invalid null argument
invalid null pkcs12 pointer
iv gen error
key gen error
mac absent
mac generation error
mac setup error
mac string set error
mac verify failure
parse error
pkcs12 algor cipherinit error
pkcs12 cipherfinal error
pkcs12 pbe crypt error
unsupported pkcs12 mode
PKCS7_SIGNED
PKCS7_SIGNER_INFO
PKCS7_ISSUER_AND_SERIAL
PKCS7_ENVELOPE
PKCS7_RECIP_INFO
PKCS7_ENC_CONTENT
PKCS7_SIGN_ENVELOPE
PKCS7_ENCRYPT
PKCS7_DIGEST
PKCS7_ATTR_SIGN
PKCS7_ATTR_VERIFY
d.sign
d.enveloped
d.signed_and_enveloped
d.digest
d.encrypted
md_algs
contents
signer_info
issuer_and_serial
digest_alg
auth_attr
digest_enc_alg
enc_digest
unauth_attr
recipientinfo
enc_data
key_enc_algor
enc_key
content_type
PKCS7_ATTRIBUTES
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs7/pk7_attr.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs7/pk7_doit.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs7/pk7_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/pkcs7/pk7_smime.c
do_pkcs7_signed_attrib
PKCS7_add0_attrib_signing_time
PKCS7_add_attrib_smimecap
PKCS7_add_certificate
PKCS7_add_crl
PKCS7_add_recipient_info
PKCS7_add_signature
PKCS7_add_signer
PKCS7_bio_add_digest
pkcs7_copy_existing_digest
PKCS7_ctrl
PKCS7_dataDecode
PKCS7_dataFinal
PKCS7_dataInit
PKCS7_dataVerify
PKCS7_decrypt
pkcs7_decrypt_rinfo
pkcs7_encode_rinfo
PKCS7_encrypt
PKCS7_final
PKCS7_find_digest
PKCS7_get0_signers
PKCS7_RECIP_INFO_set
PKCS7_set_cipher
PKCS7_set_content
PKCS7_set_digest
PKCS7_set_type
PKCS7_sign
PKCS7_signatureVerify
PKCS7_SIGNER_INFO_set
PKCS7_SIGNER_INFO_sign
PKCS7_sign_add_signer
PKCS7_simple_smimecap
PKCS7_verify
cipher not initialized
content and data present
digest failure
encryption ctrl failure
encryption not supported for this key type
error adding recipient
error setting cipher
invalid null pointer
invalid signed data type
no matching digest type found
no recipient matches certificate
no signatures on data
operation not supported on this type
pkcs7 add signature error
pkcs7 add signer error
pkcs7 datasign
signing ctrl failure
signing not supported for this key type
unable to find certificate
unable to find mem bio
unable to find message digest
unknown digest type
unknown operation
unsupported cipher type
wrong content type
wrong pkcs7 type
POLY1305
OpenSSL POLY1305 method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/poly1305/poly1305_pmeth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rand/drbg_lib.c
drbg_bytes
drbg_get_entropy
drbg_setup
get_entropy
RAND_bytes
rand_drbg_enable_locking
RAND_DRBG_generate
rand_drbg_get_entropy
rand_drbg_get_nonce
RAND_DRBG_instantiate
RAND_DRBG_new
RAND_DRBG_reseed
rand_drbg_restart
RAND_DRBG_set
RAND_DRBG_set_defaults
RAND_DRBG_uninstantiate
RAND_load_file
rand_pool_acquire_entropy
rand_pool_add
rand_pool_add_begin
rand_pool_add_end
rand_pool_attach
rand_pool_bytes_needed
rand_pool_new
RAND_write_file
additional input too long
already instantiated
argument out of range
Cannot open file
drbg already initialized
drbg not initialised
entropy input too long
entropy out of range
error entropy pool was ignored
error initialising drbg
error instantiating drbg
error retrieving additional input
error retrieving entropy
error retrieving nonce
failed to create lock
Function not implemented
Error writing file
generate error
in error state
Not a regular file
not instantiated
no drbg implementation selected
parent locking not enabled
parent strength too weak
personalisation string too long
prediction resistance not supported
PRNG not seeded
random pool overflow
random pool underflow
request too large for drbg
reseed error
selftest failure
too little nonce requested
too much nonce requested
unsupported drbg flags
unsupported drbg type
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rand/rand_lib.c
getentropy
/dev/urandom
/dev/random
/dev/hwrng
/dev/srandom
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rand/randfile.c
Filename=
RANDFILE
.rnd
rc4(int)
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_ameth.c
OpenSSL RSA method
OpenSSL RSA-PSS method
Private-Key: (%d bit, %d primes)
modulus:
publicExponent:
Public-Key: (%d bit)
Modulus:
Exponent:
privateExponent:
prime1:
prime2:
exponent1:
exponent2:
coefficient:
prime%d:
exponent%d:
coefficient%d:
No PSS parameter restrictions
PSS parameter restrictions:
(INVALID PSS PARAMETERS)
Hash Algorithm: 
sha1 (default)
Mask Algorithm: 
 with 
INVALID
mgf1 with sha1 (default)
%s Salt Length: 0x
Minimum
14 (default)
Trailer Field: 0x
BC (default)
RSA_PRIME_INFO
RSAPrivateKey
RSAPublicKey
RSA_PSS_PARAMS
RSA_OAEP_PARAMS
dmp1
dmq1
iqmp
prime_infos
maskGenAlgorithm
saltLength
trailerField
hashFunc
maskGenFunc
pSourceFunc
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_chk.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_crpt.c
check_padding_md
encode_pkcs1
int_rsa_verify
old_rsa_priv_decode
pkey_pss_init
pkey_rsa_ctrl
pkey_rsa_ctrl_str
pkey_rsa_sign
pkey_rsa_verify
pkey_rsa_verifyrecover
rsa_algor_to_md
rsa_builtin_keygen
RSA_check_key
RSA_check_key_ex
rsa_cms_decrypt
rsa_cms_verify
rsa_item_verify
RSA_meth_dup
RSA_meth_new
RSA_meth_set1_name
rsa_multip_info_new
RSA_new_method
rsa_ossl_private_decrypt
rsa_ossl_private_encrypt
rsa_ossl_public_decrypt
rsa_ossl_public_encrypt
RSA_padding_add_none
RSA_padding_add_PKCS1_OAEP
RSA_padding_add_PKCS1_OAEP_mgf1
RSA_padding_add_PKCS1_PSS
RSA_padding_add_PKCS1_PSS_mgf1
RSA_padding_add_PKCS1_type_1
RSA_padding_add_PKCS1_type_2
RSA_padding_add_SSLv23
RSA_padding_add_X931
RSA_padding_check_none
RSA_padding_check_PKCS1_OAEP
RSA_padding_check_PKCS1_OAEP_mgf1
RSA_padding_check_PKCS1_type_1
RSA_padding_check_PKCS1_type_2
RSA_padding_check_SSLv23
RSA_padding_check_X931
rsa_param_decode
RSA_print
RSA_print_fp
rsa_priv_decode
rsa_priv_encode
rsa_pss_get_param
rsa_pss_to_ctx
rsa_pub_decode
RSA_setup_blinding
RSA_sign
RSA_sign_ASN1_OCTET_STRING
RSA_verify
RSA_verify_ASN1_OCTET_STRING
RSA_verify_PKCS1_PSS_mgf1
setup_tbuf
algorithm mismatch
bad e value
bad fixed header decrypt
bad pad byte count
block type is not 01
block type is not 02
data greater than mod len
data too large
data too large for key size
data too large for modulus
data too small
data too small for key size
digest does not match
digest not allowed
digest too big for rsa key
dmp1 not congruent to d
dmq1 not congruent to d
d e not congruent to 1
first octet invalid
illegal or unsupported padding mode
invalid digest length
invalid header
invalid label
invalid message length
invalid mgf1 md
invalid multi prime key
invalid oaep parameters
invalid padding
invalid padding mode
invalid pss parameters
invalid pss saltlen
invalid salt length
invalid trailer
invalid x931 digest
iqmp not inverse of q
key prime num invalid
key size too small
last octet invalid
mgf1 digest not allowed
mp coefficient not inverse of r
mp exponent not congruent to d
mp r not prime
no public exponent
null before block missing
n does not equal product of primes
n does not equal p q
oaep decoding error
padding check failed
pkcs decoding error
pss saltlen too small
p not prime
rsa operations not supported
salt length check failed
salt length recovery failed
sslv3 rollback attack
unknown algorithm type
unknown mask digest
unknown padding type
unsupported encryption type
unsupported label source
unsupported mask algorithm
unsupported mask parameter
unsupported signature type
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_gen.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_lib.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_meth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_mp.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_none.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_oaep.c
OpenSSL PKCS#1 RSA
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_ossl.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_pk1.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_pmeth.c
rsa_padding_mode
sslv23
oeap
oaep
x931
rsa_pss_saltlen
rsa_keygen_bits
rsa_keygen_pubexp
rsa_keygen_primes
rsa_mgf1_md
rsa_pss_keygen_mgf1_md
rsa_pss_keygen_md
rsa_pss_keygen_saltlen
rsa_oaep_md
rsa_oaep_label
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_prn.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_pss.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_saos.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_sign.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_ssl.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/rsa/rsa_x931.c
SIPHASH
OpenSSL SIPHASH method
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/siphash/siphash_pmeth.c
digestsize
SM2_Ciphertext
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/sm2/sm2_crypt.c
pkey_sm2_copy
pkey_sm2_ctrl
pkey_sm2_ctrl_str
pkey_sm2_digest_custom
pkey_sm2_init
pkey_sm2_sign
sm2_compute_msg_hash
sm2_compute_userid_digest
sm2_compute_z_digest
sm2_decrypt
sm2_encrypt
sm2_plaintext_size
sm2_sign
sm2_sig_gen
sm2_sig_verify
sm2_verify
dist id too large
id not set
id too large
user id too large
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/sm2/sm2_pmeth.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/sm2/sm2_sign.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/srp/srp_lib.c
8192
6144
4096
3072
2048
1536
1024
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/srp/srp_vfy.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/stack/stack.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/store/loader_file.c
localhost/
-----BEGIN 
%08lx
PEM type is '
pass phrase
PKCS12 import password
PKCS8Encrypted
PKCS8 decrypt password
X509Certificate
X509CRL
PUBKEY
file_find
file_get_pass
file_load
file_load_try_decode
file_name_to_uri
file_open
ossl_store_attach_pem_bio
OSSL_STORE_expect
ossl_store_file_attach_pem_bio_int
OSSL_STORE_find
ossl_store_get0_loader_int
OSSL_STORE_INFO_get1_CERT
OSSL_STORE_INFO_get1_CRL
OSSL_STORE_INFO_get1_NAME
OSSL_STORE_INFO_get1_NAME_description
OSSL_STORE_INFO_get1_PARAMS
OSSL_STORE_INFO_get1_PKEY
OSSL_STORE_INFO_new_CERT
OSSL_STORE_INFO_new_CRL
ossl_store_info_new_EMBEDDED
OSSL_STORE_INFO_new_NAME
OSSL_STORE_INFO_new_PARAMS
OSSL_STORE_INFO_new_PKEY
OSSL_STORE_INFO_set0_NAME_description
ossl_store_init_once
OSSL_STORE_LOADER_new
OSSL_STORE_open
ossl_store_register_loader_int
OSSL_STORE_SEARCH_by_alias
OSSL_STORE_SEARCH_by_issuer_serial
OSSL_STORE_SEARCH_by_key_fingerprint
OSSL_STORE_SEARCH_by_name
ossl_store_unregister_loader_int
try_decode_params
try_decode_PKCS12
try_decode_PKCS8Encrypted
ambiguous content type
error verifying pkcs12 mac
fingerprint size does not match digest
invalid scheme
is not a
loader incomplete
loading started
not a certificate
not a crl
not a key
not a name
not parameters
passphrase callback error
path must be absolute
search only supported for directories
ui process interrupted or cancelled
unregistered scheme
unsupported operation
unsupported search type
uri authority unsupported
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/store/store_init.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/store/store_lib.c
 size is 
, fingerprint size is 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/store/store_register.c
scheme=
Name
Pkey
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/threads_pthread.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_asn1.c
TS_MSG_IMPRINT
hash_algo
hashed_msg
TS_REQ
msg_imprint
policy_id
nonce
cert_req
extensions
TS_ACCURACY
millis
micros
TS_TST_INFO
accuracy
ordering
TS_STATUS_INFO
failure_info
TS_RESP
status_info
token
ESS_ISSUER_SERIAL
ESS_CERT_ID
issuer_serial
ESS_SIGNING_CERT
cert_ids
policy_info
ESS_CERT_ID_V2
hash_alg
ESS_SIGNING_CERT_V2
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_conf.c
default_tsa
crypto_device
builtin
chil
engine:
signer_cert
signer_key
signer_digest
default_policy
other_policies
digests
secs
millisecs
microsecs
clock_precision_digits
tsa_name
ess_cert_id_chain
ess_cert_id_alg
def_serial_cb
def_time_cb
ess_add_signing_cert
ess_add_signing_cert_v2
ess_CERT_ID_new_init
ess_cert_id_v2_new_init
ess_SIGNING_CERT_new_init
ess_signing_cert_v2_new_init
int_ts_RESP_verify_token
PKCS7_to_TS_TST_INFO
TS_ACCURACY_set_micros
TS_ACCURACY_set_millis
TS_ACCURACY_set_seconds
ts_check_imprints
ts_check_nonces
ts_check_policy
ts_check_signing_certs
ts_check_status_info
ts_compute_imprint
ts_CONF_invalid
TS_CONF_load_cert
TS_CONF_load_certs
TS_CONF_load_key
ts_CONF_lookup_fail
TS_CONF_set_default_engine
ts_get_status_text
TS_MSG_IMPRINT_set_algo
TS_REQ_set_msg_imprint
TS_REQ_set_nonce
TS_REQ_set_policy_id
TS_RESP_create_response
ts_RESP_create_tst_info
TS_RESP_CTX_add_failure_info
TS_RESP_CTX_add_md
TS_RESP_CTX_add_policy
TS_RESP_CTX_new
TS_RESP_CTX_set_accuracy
TS_RESP_CTX_set_certs
TS_RESP_CTX_set_def_policy
TS_RESP_CTX_set_signer_cert
TS_RESP_CTX_set_status_info
ts_RESP_get_policy
TS_RESP_set_genTime_with_precision
TS_RESP_set_status_info
TS_RESP_set_tst_info
ts_RESP_sign
TS_RESP_verify_signature
TS_TST_INFO_set_accuracy
TS_TST_INFO_set_msg_imprint
TS_TST_INFO_set_nonce
TS_TST_INFO_set_policy_id
TS_TST_INFO_set_serial
TS_TST_INFO_set_time
TS_TST_INFO_set_tsa
ts_verify_cert
TS_VERIFY_CTX_new
bad pkcs7 type
bad type
cannot load certificate
cannot load private key
could not set engine
could not set time
detached content
ess add signing cert error
ess add signing cert v2 error
ess signing certificate error
invalid signer certificate purpose
message imprint mismatch
nonce mismatch
nonce not returned
no time stamp token
pkcs7 add signed attr error
pkcs7 to ts tst info failed
policy mismatch
response setup error
there must be one signer
time syscall error
token not present
token present
tsa name mismatch
tsa untrusted
tst info setup error
ts datasign
unacceptable policy
unsupported md algorithm
var bad value
cannot find config variable
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_lib.c
Extensions:
 critical
Hash Algorithm: %s
Message data:
Version: %d
Policy OID: 
unspecified
Nonce: 
Certificate required: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_req_utils.c
Status info:
TST info:
Not included.
Granted.
Granted with modifications.
Rejected.
Waiting.
Revocation warning.
Revoked.
unrecognized or unsupported algorithm identifier
transaction not permitted or supported
the data submitted has the wrong format
the TSA's time source is not available
the requested TSA policy is not supported by the TSA
the requested extension is not supported by the TSA
the additional information requested could not be understood or is not available
the request cannot be handled due to system failure
Status: 
out of bounds
Status description: 
Failure info: 
Serial number: 
Time stamp: 
Accuracy: 
Ordering: %s
TSA: 
 seconds, 
 millis, 
 micros
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_rsp_sign.c
Bad request format or system error.
Error during response generation.
Error during serial number generation.
Time is not available.
Unsupported extension.
Bad request version.
Message digest algorithm is not supported.
Superfluous message digest parameter.
Bad message digest.
Requested policy is not supported.
Error during TSTInfo generation.
%04d%02d%02d%02d%02d%02d
.%06ld
Error during signature generation.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_rsp_utils.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_rsp_verify.c
unknown code
status code: 
, status text: 
, failure codes: 
granted
grantedWithMods
rejection
waiting
revocationWarning
revocationNotification
badAlg
badRequest
badDataFormat
timeNotAvailable
unacceptedPolicy
unacceptedExtension
addInfoNotAvailable
systemFailure
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ts/ts_verify_ctx.c
assertion failed: ctx != NULL
assertion failed: req != NULL
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/txt_db/txt_db.c
close_console
echo_console
general_allocate_boolean
general_allocate_prompt
noecho_console
open_console
UI_construct_prompt
UI_create_method
UI_ctrl
UI_dup_error_string
UI_dup_info_string
UI_dup_input_boolean
UI_dup_input_string
UI_dup_user_data
UI_dup_verify_string
UI_get0_result
UI_get_result_length
UI_new_method
UI_process
UI_set_result
UI_set_result_ex
common ok and cancel characters
index too large
index too small
no result buffer
processing error
result too small
sys$assign error
sys$dassgn error
sys$qiow error
unknown control command
unknown ttyget errno value
user data duplication unsupported
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ui/ui_lib.c
Enter 
processing
opening session
writing strings
flushing
reading strings
while 
You must type in 
 characters
OpenSSL NULL UI
OpenSSL default user interface
/dev/tty
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ui/ui_openssl.c
errno=
Verifying - %s
Verify failure
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/ui/ui_util.c
PEM password callback wrapper
Load certs from files in a directory
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/by_dir.c
%s%c%08lx.%s%d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/by_file.c
Load file into cache
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/t_crl.c
Certificate Revocation List (CRL):
%8sVersion %ld (0x%lx)
%8sVersion unknown (%ld)
%8sIssuer: 
%8sLast Update: 
%8sNext Update: 
CRL extensions
Revoked Certificates:
No Revoked Certificates.
    Serial Number: 
        Revocation Date: 
CRL entry extensions
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/t_req.c
Certificate Request:
    Data:
%8sVersion: %ld (0x%lx)
%8sVersion: Unknown (%ld)
        Subject:%c
        Subject Public Key Info:
%12sPublic Key Algorithm: 
%12sUnable to load Public Key
%8sAttributes:
%12sa0:00
%12s
unable to print attribute
%8sRequested Extensions:
: %s
critical
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/t_x509.c
Certificate:
        Serial Number:
 %s%lu (%s0x%lx)
%12s%s
        Issuer:%c
        Validity
            Not Before: 
            Not After : 
%8sIssuer Unique ID: 
%8sSubject Unique ID: 
X509v3 extensions
        Subject OCSP hash: 
        Public key OCSP hash: 
    Signature Algorithm: 
%*sTrusted Uses:
%*sNo Trusted Uses.
%*sRejected Uses:
%*sNo Rejected Uses.
%*sAlias: %s
%*sKey Id: 
%s%02X
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_att.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_cmp.c
/System/Library/OpenSSL//private
/System/Library/OpenSSL/
/System/Library/OpenSSL//certs
/System/Library/OpenSSL//cert.pem
SSL_CERT_DIR
SSL_CERT_FILE
add_cert_dir
build_chain
by_file_ctrl
check_name_constraints
check_policy
dane_i2d
dir_ctrl
get_cert_by_subject
i2d_X509_AUX
lookup_certs_sk
NETSCAPE_SPKI_b64_decode
NETSCAPE_SPKI_b64_encode
new_dir
X509at_add1_attr
X509v3_add_ext
X509_ATTRIBUTE_create_by_NID
X509_ATTRIBUTE_create_by_OBJ
X509_ATTRIBUTE_create_by_txt
X509_ATTRIBUTE_get0_data
X509_ATTRIBUTE_set1_data
X509_check_private_key
X509_CRL_diff
X509_CRL_METHOD_new
X509_CRL_print_fp
X509_EXTENSION_create_by_NID
X509_EXTENSION_create_by_OBJ
X509_get_pubkey_parameters
X509_load_cert_crl_file
X509_load_cert_file
X509_load_crl_file
X509_LOOKUP_meth_new
X509_LOOKUP_new
X509_NAME_add_entry
x509_name_canon
X509_NAME_ENTRY_create_by_NID
X509_NAME_ENTRY_create_by_txt
X509_NAME_ENTRY_set_object
X509_NAME_oneline
X509_NAME_print
X509_OBJECT_new
X509_print_ex_fp
x509_pubkey_decode
X509_PUBKEY_get0
X509_PUBKEY_set
X509_REQ_check_private_key
X509_REQ_print_ex
X509_REQ_print_fp
X509_REQ_to_X509
X509_STORE_add_cert
X509_STORE_add_crl
X509_STORE_add_lookup
X509_STORE_CTX_get1_issuer
X509_STORE_CTX_init
X509_STORE_CTX_new
X509_STORE_CTX_purpose_inherit
X509_STORE_new
X509_to_X509_REQ
X509_TRUST_add
X509_TRUST_set
X509_verify_cert
X509_VERIFY_PARAM_new
akid mismatch
bad selector
bad x509 filetype
cant check dh key
cert already in hash table
crl already delta
crl verify failure
idp mismatch
invalid directory
invalid field name
invalid trust
issuer mismatch
key type mismatch
key values mismatch
loading cert dir
loading defaults
newer crl not newer
no certificate found
no certificate or crl found
no cert set for us to verify
no crl found
no crl number
public key decode error
public key encode error
should retry
unable to find parameters in chain
unable to get certs public key
unknown key type
unknown purpose id
unknown trust id
wrong lookup type
wrong type
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_lu.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_meth.c
0123456789ABCDEF
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_obj.c
NO X509_NAME
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_r2x.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_req.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_trs.c
compatible
SSL Client
SSL Server
S/MIME email
Object Signer
OCSP responder
OCSP request
TSA server
unspecified certificate verification error
unable to get issuer certificate
unable to get certificate CRL
unable to decrypt certificate's signature
unable to decrypt CRL's signature
unable to decode issuer public key
certificate signature failure
CRL signature failure
certificate is not yet valid
certificate has expired
CRL is not yet valid
CRL has expired
format error in certificate's notBefore field
format error in certificate's notAfter field
format error in CRL's lastUpdate field
format error in CRL's nextUpdate field
self signed certificate
self signed certificate in certificate chain
unable to get local issuer certificate
unable to verify the first certificate
certificate chain too long
invalid CA certificate
path length constraint exceeded
unsupported certificate purpose
certificate not trusted
certificate rejected
subject issuer mismatch
authority and subject key identifier mismatch
authority and issuer serial number mismatch
key usage does not include certificate signing
unable to get CRL issuer certificate
unhandled critical extension
key usage does not include CRL signing
unhandled critical CRL extension
invalid non-CA certificate (has CA markings)
proxy path length constraint exceeded
key usage does not include digital signature
proxy certificates not allowed, please set the appropriate flag
invalid or inconsistent certificate extension
invalid or inconsistent certificate policy extension
no explicit policy
Different CRL scope
Unsupported extension feature
RFC 3779 resource not subset of parent's resources
permitted subtree violation
excluded subtree violation
name constraints minimum and maximum not supported
application verification failure
unsupported name constraint type
unsupported or invalid name constraint syntax
unsupported or invalid name syntax
CRL path validation error
Path Loop
Suite B: certificate version invalid
Suite B: invalid public key algorithm
Suite B: invalid ECC curve
Suite B: invalid signature algorithm
Suite B: curve not allowed for this LOS
Suite B: cannot sign P-384 with P-256
Hostname mismatch
Email address mismatch
IP address mismatch
No matching DANE TLSA records
EE certificate key too weak
CA certificate key too weak
CA signature digest algorithm too weak
Invalid certificate verification context
Issuer certificate lookup error
Certificate Transparency required, but no valid SCTs found
proxy subject name violation
OCSP verification needed
OCSP verification failed
OCSP unknown cert
unknown certificate verification error
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_v3.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_vfy.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509_vpm.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509name.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x509spki.c
X509_ATTRIBUTE
X509_REVOKED
X509_CRL_INFO
X509_CRL
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x_crl.c
revocationDate
sig_alg
lastUpdate
X509_EXTENSION
X509_EXTENSIONS
Extension
X509_NAME_ENTRY
X509_NAME
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x_name.c
X509_NAME_INTERNAL
X509_NAME_ENTRIES
RDNS
X509_PUBKEY
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x_pubkey.c
public_key
X509_REQ_INFO
X509_REQ
req_info
X509_CINF
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509/x_x509.c
validity
issuerUID
subjectUID
cert_info
X509_CERT_AUX
trust
alias
keyid
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/pcy_cache.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/pcy_data.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/pcy_node.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/pcy_tree.c
IPAddressRange
IPAddressOrRange
IPAddressChoice
IPAddressFamily
u.addressPrefix
u.addressRange
u.inherit
u.addressesOrRanges
addressFamily
ipAddressChoice
IPAddrBlocks
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_addr.c
IPv4-SAFI
IPv6-SAFI
section:
,name:
,value:
%*sIPv4
%*sIPv6
%*sUnknown AFI %u
 (Unicast)
 (Multicast)
 (Unicast/Multicast)
 (MPLS)
 (Tunnel)
 (VPLS)
 (BGP MDT)
 (MPLS-labeled VPN)
 (Unknown SAFI %u)
: inherit
%d.%d.%d.%d
%x%s
%s%02x
[%d]
NAMING_AUTHORITY
PROFESSION_INFO
ADMISSIONS
ADMISSION_SYNTAX
namingAuthorityId
namingAuthorityUrl
namingAuthorityText
namingAuthority
professionItems
professionOIDs
registrationNumber
addProfessionInfo
admissionAuthority
professionInfos
contentsOfAdmissions
%*sadmissionAuthority:
%*s  
%*sEntry %0d:
%*s  admissionAuthority:
%*s    
%*s  Profession Info Entry %0d:
%*s    registrationNumber: 
%*s    Info Entries:
%*s      
%*s    Profession OIDs:
%*s      %s%s%s%s
%*snamingAuthority: 
%*s  admissionAuthorityId: 
%s%s%s%s
%*s  namingAuthorityText: 
%*s  namingAuthorityUrl: 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_akey.c
AUTHORITY_KEYID
othername
<unsupported>
X400Name
EdiPartyName
email
DirName
IP Address
<invalid>
Registered ID
othername:<unsupported>
X400Name:<unsupported>
EdiPartyName:<unsupported>
email:%s
DNS:%s
URI:%s
DirName:
IP Address:%d.%d.%d.%d
IP Address:<invalid>
Registered ID:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_alt.c
value=
dirName
otherName
move
ASRange
ASIdOrRange
ASIdentifierChoice
ASIdentifiers
u.id
u.range
u.asIdsOrRanges
asnum
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_asid.c
Autonomous System Numbers
Routing Domain Identifiers
%*sinherit
%*s%s
%*s%s-
BASIC_CONSTRAINTS
pathlen
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_bcons.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_bitst.c
Object Signing
objsign
Unused
reserved
SSL CA
sslCA
S/MIME CA
emailCA
Object Signing CA
objCA
Digital Signature
digitalSignature
Non Repudiation
nonRepudiation
Key Encipherment
keyEncipherment
Data Encipherment
dataEncipherment
Key Agreement
keyAgreement
Certificate Sign
keyCertSign
CRL Sign
cRLSign
Encipher Only
encipherOnly
Decipher Only
decipherOnly
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_conf.c
,section=
critical,
DER:
ASN1:
CERTIFICATEPOLICIES
POLICYINFO
POLICYQUALINFO
USERNOTICE
NOTICEREF
%*sPolicy: 
Critical
Non Critical
%*sNo Qualifiers
policyid
qualifiers
pqualid
d.cpsuri
d.usernotice
noticeref
exptext
organization
noticenos
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_cpols.c
ia5org
policyIdentifier
userNotice
explicitText
noticeNumbers
%*sCPS: %s
%*sUser Notice:
%*sUnknown Qualifier: 
%*sOrganization: %s
%*sNumber%s: 
(null)
%*sExplicit Text: %s
DIST_POINT_NAME
DIST_POINT
CRL_DIST_POINTS
ISSUING_DIST_POINT
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_crld.c
CRLissuer
fullname
relativename
unused
Key Compromise
CA Compromise
CACompromise
Affiliation Changed
Superseded
Cessation Of Operation
Certificate Hold
Privilege Withdrawn
privilegeWithdrawn
AA Compromise
AACompromise
name.fullname
name.relativename
distpoint
CRLDistributionPoints
onlyuser
onlyCA
onlysomereasons
indirectCRL
onlyattr
onlyAA
%*sOnly User Certificates
%*sOnly CA Certificates
%*sIndirect CRL
Only Some Reasons
%*sOnly Attribute Certificates
%*s<EMPTY>
%*sFull Name:
%*sRelative Name:
%*s%s:
Reasons
%*sCRL Issuer:
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_enum.c
Unspecified
Remove From CRL
EXTENDED_KEY_USAGE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_extku.c
OTHERNAME
EDIPARTYNAME
GENERAL_NAME
GENERAL_NAMES
type_id
nameAssigner
partyName
d.otherName
d.rfc822Name
d.dNSName
d.x400Address
d.directoryName
d.ediPartyName
d.uniformResourceIdentifier
d.iPAddress
d.registeredID
GeneralNames
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_ia5.c
ACCESS_DESCRIPTION
AUTHORITY_INFO_ACCESS
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_info.c
%s - %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_lib.c
GENERAL_SUBTREE
NAME_CONSTRAINTS
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_ncons.c
permittedSubtrees
excludedSubtrees
permitted
excluded
Permitted
Excluded
%d.%d.%d.%d/%d.%d.%d.%d
%*sPath Length Constraint: 
infinite
%*sPolicy Language: 
%*sPolicy Text: %s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_pci.c
policy
hex:
text:
PROXY_POLICY
PROXY_CERT_INFO_EXTENSION
policyLanguage
pcPathLengthConstraint
proxyPolicy
POLICY_CONSTRAINTS
requireExplicitPolicy
inhibitPolicyMapping
Require Explicit Policy
Inhibit Policy Mapping
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_pcons.c
PKEY_USAGE_PERIOD
Not Before: 
Not After: 
POLICY_MAPPING
POLICY_MAPPINGS
issuerDomainPolicy
subjectDomainPolicy
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_pmaps.c
%s:%s
%*s%s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_prn.c
%*s<Parse Error>
%*s<Not Supported>
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_purp.c
SSL client
sslclient
SSL server
sslserver
Netscape SSL server
nssslserver
S/MIME signing
smimesign
S/MIME encryption
smimeencrypt
CRL signing
crlsign
Any Purpose
OCSP helper
ocsphelper
Time Stamp signing
timestampsign
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_skey.c
SXNETID
SXNET
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_sxnet.c
zone
%*sVersion: %ld (0x%lX)
%*sZone: %s, User: 
TLS_FEATURE
status_request_v2
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_tlsf.c
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/openssl/openssl/crypto/x509v3/v3_utl.c
xn--
a2i_GENERAL_NAME
addr_validate_path_internal
ASIdentifierChoice_canonize
ASIdentifierChoice_is_canonical
bignum_to_string
copy_email
copy_issuer
do_dirname
do_ext_i2d
do_ext_nconf
gnames_from_sectname
i2s_ASN1_ENUMERATED
i2s_ASN1_IA5STRING
i2s_ASN1_INTEGER
i2v_AUTHORITY_INFO_ACCESS
level_add_node
notice_section
nref_nos
policy_cache_create
policy_cache_new
policy_data_new
policy_section
process_pci_value
r2i_certpol
r2i_pci
s2i_ASN1_IA5STRING
s2i_ASN1_INTEGER
s2i_ASN1_OCTET_STRING
s2i_skey_id
set_dist_point_name
SXNET_add_id_asc
SXNET_add_id_INTEGER
SXNET_add_id_ulong
SXNET_get_id_asc
SXNET_get_id_ulong
tree_init
v2i_ASIdentifiers
v2i_ASN1_BIT_STRING
v2i_AUTHORITY_INFO_ACCESS
v2i_AUTHORITY_KEYID
v2i_BASIC_CONSTRAINTS
v2i_crld
v2i_EXTENDED_KEY_USAGE
v2i_GENERAL_NAMES
v2i_GENERAL_NAME_ex
v2i_idp
v2i_IPAddrBlocks
v2i_issuer_alt
v2i_NAME_CONSTRAINTS
v2i_POLICY_CONSTRAINTS
v2i_POLICY_MAPPINGS
v2i_subject_alt
v2i_TLS_FEATURE
v3_generic_extension
X509V3_add1_i2d
X509V3_add_value
X509V3_EXT_add
X509V3_EXT_add_alias
X509V3_EXT_i2d
X509V3_EXT_nconf
X509V3_get_section
X509V3_get_string
X509V3_get_value_bool
X509V3_parse_list
X509_PURPOSE_add
X509_PURPOSE_set
bad ip address
bad object
bn dec2bn error
bn to asn1 integer error
dirname error
distpoint already set
duplicate zone id
error converting zone
error creating extension
error in extension
expected a section name
extension exists
extension name error
extension not found
extension setting not supported
extension value error
illegal empty extension
incorrect policy syntax tag
invalid asnumber
invalid asrange
invalid boolean string
invalid extension string
invalid inheritance
invalid ipaddress
invalid multiple rdns
invalid name
invalid null name
invalid null value
invalid numbers
invalid object identifier
invalid option
invalid policy identifier
invalid proxy policy setting
invalid purpose
invalid safi
invalid section
invalid syntax
issuer decode error
need organization and numbers
no config database
no issuer certificate
no issuer details
no policy identifier
no proxy cert policy language defined
no subject details
operation not defined
othername error
policy language already defined
policy path length
policy path length already defined
policy when proxy language requires no policy
section not found
unable to get issuer details
unable to get issuer keyid
unknown bit string argument
unknown extension
unknown extension name
unsupported option
user too long
Value
Percentile
TotalCount
1/(1-Percentile)
%s%d%s
f,%f,%d,%.2f
%12.
f %12f %12d %12.2f
%s,%s,%s,%s
%12s %12s %12s %12s
"nullptr"
traceEvents
{"pid":
,"tid":
,"ts":
,"tts":
,"ph":"
","cat":"
","name":"
","dur":
,"tdur":
,"bind_id":"0x
,"flow_in":true
,"flow_out":true
,"scope":"
,"id":"0x
,"args":{
toplevel
tracing categories exhausted; must increase kMaxCategoryGroups
ICU_ENABLE_TENTATIVE_ERA
@calendar=roc
expected a reset or setting or comment
reset not followed by a relation
reset-before strength differs from its first relation
reset-before strength followed by a stronger relation
reset without position
in 'prefix|str', prefix and str must each start with an NFC boundary
missing starred-relation string
starred-relation string is not all NFD-inert
range without start in starred-relation string
range without end in starred-relation string
range start greater than end in starred-relation string
starred-relation string range is not all NFD-inert
starred-relation string range contains a surrogate
starred-relation string range contains U+FFFD, U+FFFE or U+FFFF
missing relation string
quoted literal text missing terminating apostrophe
backslash escape at the end of the rule string
string contains an unpaired surrogate
string contains U+FFFD, U+FFFE or U+FFFF
not a valid special reset position
expected a setting/option at '['
[hiraganaQ on] is not supported
expected language tag in [import langTag]
[import langTag] is not supported
[import langTag] failed
not a valid setting/option
unknown script or reorder code
others
unbalanced UnicodeSet pattern brackets
not a valid UnicodeSet pattern
missing option-terminating ']' after UnicodeSet pattern
first tertiary ignorable
last tertiary ignorable
first secondary ignorable
last secondary ignorable
first primary ignorable
last primary ignorable
first variable
last variable
first regular
last regular
first implicit
last implicit
first trailing
last trailing
INFINITY
+Normal
-Normal
+Zero
-Zero
+Subnormal
-Subnormal
+Infinity
sNaN
decNumber 3.61
inity
2.302585092994045684017991454684364207601
0.6931471805599453094172321214581765680755
9.223372036854775808E+18
<DecimalQuantity %d:%d %s %s%s%s%d>
bytes
@calendar=persian
day-format-except-narrow
day-narrow
day-standalone-except-narrow
era-abbr
era-name
era-narrow
metazone-long
metazone-short
month-format-except-narrow
month-narrow
month-standalone-except-narrow
zone-long
zone-short
Currencies/
%.*g
supplementalData
timeData
allowed
preferred
Year
Quarter
Month
Week
Day-Of-Week
Hour
Minute
Second
Timezone
-short
-narrow
weekOfMonth
dayOfYear
weekdayOfMonth
dayperiod
@calendar=chinese
icudt64l-lang
ExemplarCharacters
AuxExemplarCharacters
ExemplarCharactersIndex
ExemplarCharactersPunctuation
quotationStart
quotationEnd
alternateQuotationStart
alternateQuotationEnd
delimiters
MeasurementSystem
PaperSize
cldrVersion
localeDisplayPattern
pattern
separator
measurementData
CollationBuilder fields initialization failed
CollationBuilder initialization failed
missing root elements data, tailoring not supported
normalizing the reset position
reset position maps to too many collation elements (more than 31)
reset primary-before ignorable not possible
reset primary-before first non-ignorable not supported
reset primary-before [first trailing] not supported
reset secondary-before secondary ignorable not possible
reset tertiary-before completely ignorable not possible
inserting reset position for &[before n]
reset to [last implicit] not supported
LDML forbids tailoring to U+FFFF
normalizing the relation prefix
normalizing the relation string
contractions starting with conjoining Jamo L or V not supported
contractions ending with conjoining Jamo L or L+V not supported
tailoring primary after ignorables not supported
tailoring quaternary after tertiary ignorables not supported
modifying collation elements
normalizing the relation extension
extension string adds too many collation elements (more than 31 total)
writing collation elements
tailoring relative to an unassigned code point not supported
fetching root CEs for tailored string
application of [suppressContractions [set]] failed
quaternary tailoring gap too small
tertiary tailoring gap too small
secondary tailoring gap too small
primary tailoring gap too small
NumberElements/minimumGroupingDigits
ther
zero
many
@calendar=ethiopic
transPre32
trans
transPost32
typeOffsets
typeMap
finalRule
finalRaw
finalYear
Rules
links
Names
zoneinfo64
Zones
Regions
windowsZones
mapTimezones
TZVersion
calendarData
eras
named
coptic
weekData
calendarPreferenceData
buddhist
persian
islamic-civil
islamic
indian
ethiopic
iso8601
islamic-umalqura
islamic-tbla
islamic-rgsa
calendar/
/DateTimePatterns
calendar/gregorian/DateTimePatterns
japanese
numbers=
hebrew
chinese
dangi
hebr
numbers=jpanyear
/patternsShort
/patternsLong
/decimalFormat
/currencyFormat
1234...........IXO..SN..LU......
icudt64l-unit
-person
units
Narrow
unitsShort/
dnam
/compound/per
CurrencyUnitPatterns
colHiraganaQuaternary
variableTop
colReorder
colStrength
colBackwards
colCaseLevel
colCaseFirst
colAlternate
colNormalization
colNumeric
primary
secondary
tertiary
quaternary
identical
shifted
non-ignorable
space
punct
digit
icudt64l-coll
res_index
InstalledLocales
latn
numbers
Currencies
percentSign
minusSign
plusSign
currencyDecimal
exponential
perMille
infinity
currencyGroup
superscriptingExponent
[:letter:]
[:digit:]
@calendar=hebrew
contextTransforms/relative
fields/day/relative
collations
@collation=
@sp=
@calendar=islamic-civil
ucadata
Conversion syntax
Division impossible
Division undefined
Inexact
Insufficient storage
Invalid context
Invalid operation
Clamped
Rounded
Subnormal
Underflow
No status
Multiple status
decimalFormat
currencyFormat
accountingFormat
percentFormat
scientificFormat
latn
NumberElements/
/patterns/
icudt64l-zone
@calendar=coptic
@calendar=Indian
dayPeriods
midnight
noon
morning1
afternoon1
evening1
night1
morning2
afternoon2
evening2
night2
RBNFRules
SpelloutRules
OrdinalRules
DurationRules
NumberingSystemRules
icudt64l-rbnf
contextTransforms
number-spellout
UCARules
Sequence
%%CollationBin
collations/default
private-
plurals
locales
locales_ordinals
rules
%1.15e
parseRegions
tzdbNames
listPattern
middle
acceleration
angle
area
concentr
consumption
digital
electric
energy
force
frequency
light
mass
power
pressure
temperature
torque
volume
g-force
meter-per-second-squared
arc-minute
arc-second
degree
radian
revolution
acre
dunam
hectare
square-centimeter
square-foot
square-inch
square-kilometer
square-meter
square-mile
square-yard
karat
milligram-per-deciliter
millimole-per-liter
mole
part-per-million
permille
permyriad
liter-per-100kilometers
liter-per-kilometer
mile-per-gallon
mile-per-gallon-imperial
byte
gigabit
gigabyte
kilobit
kilobyte
megabit
megabyte
petabyte
terabit
terabyte
century
day-person
microsecond
millisecond
month-person
nanosecond
week-person
year-person
ampere
milliampere
volt
british-thermal-unit
calorie
electronvolt
foodcalorie
joule
kilocalorie
kilojoule
kilowatt-hour
newton
pound-force
gigahertz
hertz
kilohertz
megahertz
astronomical-unit
centimeter
decimeter
fathom
foot
furlong
inch
kilometer
light-year
meter
micrometer
mile
mile-scandinavian
millimeter
nanometer
nautical-mile
parsec
picometer
solar-radius
yard
solar-luminosity
carat
dalton
earth-mass
gram
kilogram
metric-ton
microgram
milligram
ounce
ounce-troy
pound
solar-mass
stone
gigawatt
horsepower
kilowatt
megawatt
milliwatt
watt
atmosphere
hectopascal
inch-hg
kilopascal
megapascal
millibar
millimeter-of-mercury
pound-per-square-inch
kilometer-per-hour
knot
meter-per-second
mile-per-hour
celsius
fahrenheit
generic
kelvin
newton-meter
pound-foot
acre-foot
barrel
bushel
centiliter
cubic-centimeter
cubic-foot
cubic-inch
cubic-kilometer
cubic-meter
cubic-mile
cubic-yard
cup-metric
deciliter
fluid-ounce
fluid-ounce-imperial
gallon
gallon-imperial
hectoliter
liter
megaliter
milliliter
pint
pint-metric
quart
tablespoon
teaspoon
@calendar=buddhist
relative
relativeTime
past
calendar/default
chunked
HPE_OK
HPE_CB_message_begin
the on_message_begin callback failed
HPE_CB_url
the on_url callback failed
HPE_CB_header_field
the on_header_field callback failed
HPE_CB_header_value
the on_header_value callback failed
HPE_CB_headers_complete
the on_headers_complete callback failed
HPE_CB_body
the on_body callback failed
HPE_CB_message_complete
the on_message_complete callback failed
HPE_CB_status
the on_status callback failed
HPE_CB_chunk_header
the on_chunk_header callback failed
HPE_CB_chunk_complete
the on_chunk_complete callback failed
HPE_INVALID_EOF_STATE
stream ended at an unexpected time
HPE_HEADER_OVERFLOW
too many header bytes seen; overflow detected
HPE_CLOSED_CONNECTION
data received after completed connection: close message
HPE_INVALID_VERSION
invalid HTTP version
HPE_INVALID_STATUS
invalid HTTP status code
HPE_INVALID_METHOD
invalid HTTP method
HPE_INVALID_URL
invalid URL
HPE_INVALID_HOST
invalid host
HPE_INVALID_PORT
invalid port
HPE_INVALID_PATH
invalid path
HPE_INVALID_QUERY_STRING
invalid query string
HPE_INVALID_FRAGMENT
invalid fragment
HPE_LF_EXPECTED
LF character expected
HPE_INVALID_HEADER_TOKEN
invalid character in header
HPE_INVALID_CONTENT_LENGTH
invalid character in content-length header
HPE_UNEXPECTED_CONTENT_LENGTH
unexpected content-length header
HPE_INVALID_CHUNK_SIZE
invalid character in chunk size header
HPE_INVALID_CONSTANT
invalid constant string
HPE_INVALID_INTERNAL_STATE
encountered unexpected internal state
HPE_STRICT
strict mode assertion failed
HPE_PAUSED
parser is paused
HPE_UNKNOWN
an unknown error occurred
Pause on CONNECT/Upgrade
Content-Length overflow
Invalid character in Content-Length
Invalid characters in url
on_message_complete pause
`on_message_complete` callback error
on_chunk_complete pause
`on_chunk_complete` callback error
Content-Length can't be present with chunked encoding
Chunk size overflow
on_chunk_header pause
`on_chunk_header` callback error
Invalid character in chunk size
Paused by on_headers_complete
User callback error
Missing expected LF after header value
Invalid header value char
Duplicate Content-Length
Invalid header token
Expected CRLF
Expected CRLF after version
Invalid minor version
Expected dot
Invalid major version
Expected HTTP/
Expected SOURCE method for ICE/x.x request
Invalid char in url fragment start
Invalid char in url query
Invalid char in url path
Double @ in url
Unexpected char in url server
Unexpected char in url schema
Unexpected start char in url
Expected space after method
Invalid method encountered
Response overflow
Invalid response status
Expected space after version
Invalid word encountered
on_message_begin pause
`on_message_begin` callback error
Invalid EOF state
Paused
HPE_INTERNAL
HPE_CB_MESSAGE_BEGIN
HPE_CB_HEADERS_COMPLETE
HPE_CB_MESSAGE_COMPLETE
HPE_CB_CHUNK_HEADER
HPE_CB_CHUNK_COMPLETE
HPE_PAUSED_UPGRADE
HPE_USER
p=%p type=%d flags=%02x next=null debug=%s
p=%p type=%d flags=%02x next=%02x   debug=%s
ares_destroy
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/cares/src/ares_destroy.c
ares__is_list_empty(&(channel->all_queries))
ares__is_list_empty(&(channel->queries_by_qid[i]))
ares__is_list_empty(&(channel->queries_by_timeout[i]))
ares__destroy_servers_state
ares__is_list_empty(&server->queries_to_server)
%lu.%lu.%lu.%lu.in-addr.arpa
%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.
%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.ip6.arpa
/etc/hosts
.onion
.onion.
sctp
dccp
LOCALDOMAIN
RES_OPTIONS
ndots:
retrans:
retry:
rotate
/etc/resolv.conf
nameserver
sortlist
/etc/nsswitch.conf
hosts:
files
/etc/host.conf
hosts
/etc/svc.conf
hosts=
255.255.255.255
handle_error
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/cares/src/ares_process.c
query->server == whichserver
ares__is_list_empty(&list_head)
end_query
sendreq->data_storage == NULL
Successful completion
DNS server returned answer with no data
DNS server claims query was misformatted
DNS server returned general failure
Domain name not found
DNS server does not implement requested operation
DNS server refused query
Misformatted DNS query
Misformatted domain name
Unsupported address family
Misformatted DNS reply
Could not contact DNS servers
Timeout while contacting DNS servers
End of file
Error reading file
Out of memory
Channel is being destroyed
Misformatted string
Illegal flags specified
Given hostname is not numeric
Illegal hints flags specified
c-ares library initialization not yet performed
Error loading iphlpapi.dll
Could not find GetNetworkParams function
DNS query cancelled
nghttp2_frame_pack_headers
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_frame.c
nghttp2_frame_pack_priority
nghttp2_buf_avail(buf) >= NGHTTP2_PRIORITY_SPECLEN
nghttp2_frame_pack_rst_stream
nghttp2_buf_avail(buf) >= 4
nghttp2_frame_pack_settings
nghttp2_frame_pack_push_promise
nghttp2_frame_pack_ping
nghttp2_buf_avail(buf) >= 8
nghttp2_frame_pack_goaway
nghttp2_frame_pack_window_update
nghttp2_frame_pack_altsvc
nghttp2_buf_avail(buf) >= 2 + altsvc->origin_len + altsvc->field_value_len
nghttp2_frame_pack_origin
nghttp2_buf_len(buf) == NGHTTP2_FRAME_HDLEN + frame->hd.length
nghttp2_frame_add_pad
nghttp2_buf_avail(buf) >= padlen - 1
nghttp2_hd_table_get
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_hd.c
INDEX_RANGE_VALID(context, idx)
hd_ringbuf_pop_back
ringbuf->len > 0
hd_ringbuf_get
idx < ringbuf->len
/index.html
gzip, deflate
rang
:pat
allo
cooki
serve
accep
expec
:metho
:schem
upgrad
refres
refere
:statu
if-rang
if-matc
locatio
:protoco
keep-aliv
set-cooki
connectio
user-agen
:authorit
retry-afte
content-typ
max-forward
last-modifie
content-rang
if-none-matc
cache-contro
authorizatio
accept-range
content-lengt
accept-charse
accept-languag
accept-encodin
content-languag
www-authenticat
content-encodin
content-locatio
proxy-connectio
if-modified-sinc
transfer-encodin
proxy-authenticat
if-unmodified-sinc
content-dispositio
proxy-authorizatio
strict-transport-securit
access-control-allow-origi
pack_first_byte
nghttp2_hd_huff_encode
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_hd_huffman.c
avail
nghttp2_increase_local_window_size
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_helper.c
delta >= 0
Success
Out of buffer space
Unsupported SPDY version
Operation would block
Protocol error
Invalid frame octets
Data transfer deferred
No more Stream ID available
Stream was already closed or invalid
Stream is closing
The transmission is not allowed for this stream
Stream ID is invalid
Invalid stream state
Another DATA frame has already been deferred
request HEADERS is not allowed
GOAWAY has already been sent
Invalid header block
Invalid state
The user callback function failed due to the temporal error
The length of the frame is invalid
Header compression/decompression error
Flow control error
Insufficient buffer size given to function
Callback was paused by the application
Too many inflight SETTINGS
Server push is disabled by peer
DATA or HEADERS frame has already been submitted for the stream
The current session is closing
Invalid HTTP header field was received
Violation in HTTP messaging rule
Stream was refused
Cancel
When a local endpoint expects to receive SETTINGS frame, it receives an other type of frame
The user callback function failed
Received bad client magic byte string
Flooding was detected in this HTTP/2 session, and it must be closed
Unknown error code
PROTOCOL_ERROR
INTERNAL_ERROR
FLOW_CONTROL_ERROR
SETTINGS_TIMEOUT
STREAM_CLOSED
FRAME_SIZE_ERROR
REFUSED_STREAM
CANCEL
COMPRESSION_ERROR
CONNECT_ERROR
ENHANCE_YOUR_CALM
INADEQUATE_SECURITY
HTTP_1_1_REQUIRED
nghttp2_http_on_header
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_http.c
nv->name->len > 0
nghttp2_outbound_item_free
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_outbound_item.c
nghttp2_pq_remove
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_pq.c
pq->q[item->index] == item
nghttp2_rcbuf_decref
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_rcbuf.c
rcbuf->ref > 0
nghttp2_session_reprioritize_stream
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_session.c
pri_spec->stream_id != stream->stream_id
dep_stream
nghttp2_session_add_rst_stream
headers_frame->hd.type == NGHTTP2_HEADERS
nghttp2_session_open_stream
stream->state == NGHTTP2_STREAM_IDLE
nghttp2_stream_in_dep_tree(stream)
nghttp2_session_adjust_closed_stream
head_stream
nghttp2_session_adjust_idle_stream
nghttp2_session_mem_send
nghttp2_is_fatal(rv)
request HEADERS: stream_id == 0
request HEADERS: client received request
request HEADERS: invalid stream_id
HEADERS: stream closed
request HEADERS: max concurrent streams exceeded
request HEADERS: depend on itself
nghttp2_session_on_response_headers_received
stream->state == NGHTTP2_STREAM_OPENING && nghttp2_session_is_my_stream_id(session, frame->hd.stream_id)
nghttp2_session_on_push_response_headers_received
stream->state == NGHTTP2_STREAM_RESERVED
push response HEADERS: stream_id == 0
HEADERS: no HEADERS allowed from client in reserved state
push response HEADERS: max concurrent streams exceeded
HEADERS: stream_id == 0
PRIORITY: stream_id == 0
depend on itself
RST_STREAM: stream_id == 0
RST_STREAM: stream in idle
SETTINGS: stream_id != 0
SETTINGS: ACK and payload != 0
SETTINGS: unexpected ACK
SETTINGS: invalid SETTINGS_ENBLE_PUSH
SETTINGS: server attempted to enable push
SETTINGS: too large SETTINGS_INITIAL_WINDOW_SIZE
SETTINGS: invalid SETTINGS_MAX_FRAME_SIZE
SETTINGS: invalid SETTINGS_ENABLE_CONNECT_PROTOCOL
SETTINGS: server attempted to disable SETTINGS_ENABLE_CONNECT_PROTOCOL
PUSH_PROMISE: stream_id == 0
PUSH_PROMISE: push disabled
PUSH_PROMISE: invalid stream_id
PUSH_PROMISE: invalid promised_stream_id
PUSH_PROMISE: stream in idle
PUSH_PROMISE: stream closed
PING: stream_id != 0
GOAWAY: stream_id != 0
GOAWAY: invalid last_stream_id
PRI * HTTP/2.0
SETTINGS expected
too large frame size
DATA: insufficient padding space
HEADERS: insufficient padding space
PUSH_PROMISE: insufficient padding space
CONTINUATION: unexpected
HEADERS: invalid padding
PUSH_PROMISE: invalid padding
nghttp2_session_mem_recv
iframe->state == NGHTTP2_IB_IGN_ALL
nghttp2_buf_avail(&iframe->lbuf) > 0
unexpected non-CONTINUATION frame or stream_id is invalid
DATA: invalid padding
nghttp2_session_recv
proclen == readlen
nghttp2_session_add_settings
nghttp2_session_pack_data
bufs->head == bufs->cur
&session->aob.framebufs == bufs
nghttp2_buf_avail(buf) >= datamax
nghttp2_session_set_stream_user_data
frame->hd.type == NGHTTP2_HEADERS
nghttp2_session_get_remote_settings
nghttp2_session_get_local_settings
nghttp2_session_upgrade
nghttp2_session_upgrade2
nghttp2_session_mem_send_internal
session_prep_frame
stream->item == item
session->remote_window_size > 0
session->last_sent_stream_id < frame->hd.stream_id
session->obq_flood_counter_ > 0
session->last_sent_stream_id + 2 <= frame->push_promise.promised_stream_id
session_pack_extension
session->callbacks.pack_extension_callback
buf->pos == buf->last
session_after_frame_sent1
session_close_stream_on_goaway
rv == 0
find_stream_on_goaway_func
stream->closed_next == NULL
stream->closed_prev == NULL
WINDOW_UPDATE: window_size_increment == 0
WINDOW_UPDATE to idle stream
WINDOW_UPADATE to reserved stream
DATA: stream_id == 0
DATA: stream in idle
DATA: stream closed
DATA: stream in half-closed(remote)
DATA: stream not opened
DATA: stream in reserved
HEADERS: could not unpack
PUSH_PROMISE: could not unpack
Ignoring received invalid HTTP header field: frame type: %u, stream: %d, name: [%.*s], value: [%.*s]
Invalid HTTP header field was received: frame type: %u, stream: %d, name: [%.*s], value: [%.*s]
session_after_header_block_received
!session->server
session_process_settings_frame
i < iframe->niv
nghttp2_stream_reschedule
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_stream.c
stream->queued
nghttp2_stream_attach_item
(stream->flags & NGHTTP2_STREAM_FLAG_DEFERRED_ALL) == 0
stream->item == NULL
nghttp2_stream_defer_item
stream->item
nghttp2_stream_resume_deferred_item
nghttp2_stream_dep_remove
stream->dep_prev
nghttp2_stream_dep_remove_subtree
insert_link_dep
stream->sib_prev == NULL
stream_obq_remove
prev
unlink_dep
nghttp2_submit_origin
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/nghttp2/lib/nghttp2_submit.c
(size_t)(p - (uint8_t *)ov_copy) == nov * sizeof(nghttp2_origin_entry) + len + nov
NO_ERROR
SUCCESS
NEEDS_MORE_INPUT
NEEDS_MORE_OUTPUT
EXUBERANT_NIBBLE
RESERVED
EXUBERANT_META_NIBBLE
SIMPLE_HUFFMAN_ALPHABET
SIMPLE_HUFFMAN_SAME
CL_SPACE
HUFFMAN_SPACE
CONTEXT_MAP_REPEAT
BLOCK_LENGTH_1
BLOCK_LENGTH_2
TRANSFORM
DICTIONARY
WINDOW_BITS
PADDING_1
PADDING_2
DISTANCE
DICTIONARY_NOT_SET
INVALID_ARGUMENTS
CONTEXT_MODES
TREE_GROUPS
CONTEXT_MAP
RING_BUFFER_1
RING_BUFFER_2
BLOCK_TYPE_TREES
SCSU,locale=ja
udict_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as dictionary data
udict_swap(): too few bytes (%d after header) for dictionary data
udict_swap(): too few bytes (%d after header) for all of dictionary data
udict_swap(): unknown trie type!
uchar_swapNames(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as unames.icu
uchar_swapNames(): too few bytes (%d after header) for unames.icu
out of memory swapping %u unames.icu tokens
uchar_swapNames(token strings) failed
uchar_swapNames(): too few bytes (%d after header) for unames.icu algorithmic range %u
uchar_swapNames(prefix string of algorithmic range %u) failed
uchar_swapNames(): unknown type %u of algorithmic range %u
unknown
unassigned
uppercase letter
lowercase letter
titlecase letter
modifier letter
other letter
non spacing mark
enclosing mark
combining spacing mark
decimal digit number
letter number
other number
space separator
line separator
paragraph separator
private use area
surrogate
dash punctuation
start punctuation
end punctuation
connector punctuation
other punctuation
math symbol
currency symbol
modifier symbol
other symbol
initial punctuation
final punctuation
noncharacter
lead surrogate
trail surrogate
0123456789ABCDEF<>-
unames/makeTokenMap() finds variant character 0x%02x used (input charset family %d)
ZZZZ
Zzzz
likelySubtags
/etc/localtime
/zoneinfo/
/var/db/timezone/zoneinfo/
POSIX
nynorsk
PST8PDT
MST7MDT
CST6CDT
EST5EDT
posix/
right/
posixrules
localtime
CHAST
CHADT
Pacific/Chatham
PETT
PETST
Asia/Kamchatka
NZST
NZDT
Pacific/Auckland
ANAT
ANAST
Asia/Anadyr
MAGT
MAGST
Asia/Magadan
LHST
Australia/Lord_Howe
Australia/Sydney
SAKT
SAKST
Asia/Sakhalin
VLAT
VLAST
Asia/Vladivostok
Australia/South
YAKT
YAKST
Asia/Yakutsk
CHOT
CHOST
Asia/Choibalsan
CWST
Australia/Eucla
IRKT
IRKST
Asia/Irkutsk
ULAT
ULAST
Asia/Ulaanbaatar
Australia/West
HOVT
HOVST
Asia/Hovd
KRAT
KRAST
Asia/Krasnoyarsk
NOVT
NOVST
Asia/Novosibirsk
OMST
OMSST
Asia/Omsk
YEKT
YEKST
Asia/Yekaterinburg
SAMT
SAMST
Europe/Samara
AMST
Asia/Yerevan
AZST
Asia/Baku
Asia/Baghdad
Europe/Moscow
VOLT
VOLST
Europe/Volgograd
CEST
Africa/Tripoli
EEST
Europe/Athens
Asia/Jerusalem
WEST
Africa/Algiers
WAST
Africa/Windhoek
Europe/Dublin
Europe/London
Africa/Casablanca
Africa/El_Aaiun
AZOT
AZOST
Atlantic/Azores
EGST
America/Scoresbysund
PMST
PMDT
America/Miquelon
UYST
America/Montevideo
WGST
America/Godthab
BRST
Brazil/East
America/St_Johns
Canada/Atlantic
America/Cuiaba
CLST
Chile/Continental
FKST
Atlantic/Stanley
PYST
America/Asuncion
America/Havana
US/Eastern
EAST
EASST
Chile/EasterIsland
Canada/Saskatchewan
America/Guatemala
US/Central
US/Mountain
Pacific/Pitcairn
US/Pacific
AKST
AKDT
US/Alaska
HAST
HADT
US/Aleutian
ICU_DATA
ICU_TIMEZONE_FILES_DIR
LC_ALL
LC_MESSAGES
LANG
art-lojban
en-gb-oed
en-gb-oxendict
i-ami
i-bnn
i-hak
i-klingon
i-lux
i-navajo
i-pwn
i-tao
i-tay
i-tsu
no-bok
no-nyn
sgn-be-fr
sgn-be-nl
sgn-ch-de
zh-guoyu
zh-hakka
zh-min-nan
zh-xiang
xtg-x-cel-gaulish
i-default
en-x-i-default
i-enochian
und-x-i-enochian
i-mingo
see-x-i-mingo
nan-x-zh-min
sgn-br
sgn-co
sgn-de
sgn-dk
sgn-es
sgn-fr
sgn-gb
sgn-gr
sgn-ie
sgn-it
sgn-jp
sgn-mx
sgn-ni
sgn-nl
sgn-no
sgn-pt
sgn-se
sgn-us
sgn-za
zh-cmn
zh-cmn-hans
cmn-hans
zh-cmn-hant
cmn-hant
zh-gan
zh-wuu
zh-yue
ja-latn-hepburn-heploc
ja-latn-alalc97
exceptions
SentenceBreak
ucnv_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not recognized as an ICU .cnv conversion table
ucnv_swap(): too few bytes (%d after header) for an ICU .cnv conversion table
ucnv_swap(): error swapping converter name
ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table
ucnv_swap(): unsupported _MBCSHeader.version %d.%d
ucnv_swap(): unsupported combination of makeconv --small with SBCS
ucnv_swap(): unsupported MBCS output type 0x%x
ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table with extension data
ucnv_swap(): unknown conversionType=%d!=UCNV_MBCS
locale=
version=
swaplfnl
bocu1
cesu8
imapmailboxname
iscii
iso2022
iso88591
lmbcs1
lmbcs11
lmbcs16
lmbcs17
lmbcs18
lmbcs19
lmbcs2
lmbcs3
lmbcs4
lmbcs5
lmbcs6
lmbcs8
scsu
usascii
utf16
utf16be
utf16oppositeendian
utf16platformendian
utf32
utf32be
utf32le
utf32oppositeendian
utf32platformendian
utf7
x11compoundtext
dictionaries
keyTypeData
keyMap
typeAlias
bcpTypeAlias
timezone
CODEPOINTS
REORDER_CODE
RG_KEY_VALUE
icu-internal-compound-s1
icu-internal-compound-s2
icu-internal-compound-s3
icu-internal-compound-d1
icu-internal-compound-d2
icu-internal-compound-d3
icu-internal-compound-d4
icu-internal-compound-d5
icu-internal-compound-d6
icu-internal-compound-d7
icu-internal-compound-t
ibm-915_P100-1995
ibm-916_P100-1995
ibm-914_P100-1995
ibm-874_P100-1995
ibm-912_P100-1995
ibm-913_P100-2000
iso-8859_14-1998
ibm-923_P100-1998
x11-compound-text
icudt64l-region
lenient
{0}, {1}
{0} ({1})
keyTypePattern
{0}={1}
Languages%short
Scripts%short
Scripts
Countries%short
Variants
Keys
Types%short
Types
keyValue
languages
territory
UTF-16BE
UTF-32LE
UTF-16LE
UTF-8
UTF-32BE
SCSU
BOCU-1
UTF-7
UTF-EBCDIC
ibm-
ibm-897_P100-1995
ibm-942_P120-1999
ibm-943_P130-1999
ibm-946_P100-1995
ibm-33722_P120-1999
ibm-1041_P100-1995
ibm-944_P100-1995
ibm-949_P110-1999
ibm-1363_P110-1997
ISO_2022,locale=ko,version=0
ibm-1088_P100-1995
uts46
18030
gb18030
GB18030
KEIS
keis
JIPS
jips
,swaplfnl
Countries
Languages
Fallback
characters
layout
ulayout
ures_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not a resource bundle
ures_swap(): too few bytes (%d after header) for a resource bundle
ures_swap(): too few indexes for a 1.1+ resource bundle
ures_swap(): resource top %d exceeds bundle length %d
ures_swap(): unable to allocate memory for tracking resources
ures_swap().udata_swapInvStringBlock(keys[%d]) failed
ures_swap().swapArray16(16-bit units[%d]) failed
ures_swap(): unable to allocate memory for sorting tables (max length: %d)
ures_swapResource(root res=%08x) failed
ures_swapResource(table res=%08x)[%d].recurse(%08x) failed
ures_swapResource(table res=%08x).uprv_sortArray(%d items) failed
ures_swapResource(array res=%08x)[%d].recurse(%08x) failed
nfkc_cf
.dat
ICUDATA
icudt64l-
ICUDATA-
icudt64l
timezoneTypes
metaZones
lmb-excp
ibm-850
ibm-851
windows-1255
windows-1256
windows-1251
ibm-852
windows-1254
windows-874
windows-932
windows-949
windows-950
windows-936
zhTW
icudt64l-curr
currencyNumericCodes
codeMap
en_GB
udata_swapDataHeader(): initial bytes do not look like ICU data
udata_swapDataHeader(): header size mismatch - headerSize %d infoSize %d length %d
unique_lock::unlock: not locked
UTF-7,version=1
[BOGUS UErrorCode]
U_ZERO_ERROR
U_ILLEGAL_ARGUMENT_ERROR
U_MISSING_RESOURCE_ERROR
U_INVALID_FORMAT_ERROR
U_FILE_ACCESS_ERROR
U_INTERNAL_PROGRAM_ERROR
U_MESSAGE_PARSE_ERROR
U_MEMORY_ALLOCATION_ERROR
U_INDEX_OUTOFBOUNDS_ERROR
U_PARSE_ERROR
U_INVALID_CHAR_FOUND
U_TRUNCATED_CHAR_FOUND
U_ILLEGAL_CHAR_FOUND
U_INVALID_TABLE_FORMAT
U_INVALID_TABLE_FILE
U_BUFFER_OVERFLOW_ERROR
U_UNSUPPORTED_ERROR
U_RESOURCE_TYPE_MISMATCH
U_ILLEGAL_ESCAPE_SEQUENCE
U_UNSUPPORTED_ESCAPE_SEQUENCE
U_NO_SPACE_AVAILABLE
U_CE_NOT_FOUND_ERROR
U_PRIMARY_TOO_LONG_ERROR
U_STATE_TOO_OLD_ERROR
U_TOO_MANY_ALIASES_ERROR
U_ENUM_OUT_OF_SYNC_ERROR
U_INVARIANT_CONVERSION_ERROR
U_INVALID_STATE_ERROR
U_COLLATOR_VERSION_MISMATCH
U_USELESS_COLLATOR_ERROR
U_NO_WRITE_PERMISSION
U_USING_FALLBACK_WARNING
U_USING_DEFAULT_WARNING
U_SAFECLONE_ALLOCATED_WARNING
U_STATE_OLD_WARNING
U_STRING_NOT_TERMINATED_WARNING
U_SORT_KEY_TOO_SHORT_WARNING
U_AMBIGUOUS_ALIAS_WARNING
U_DIFFERENT_UCA_VERSION
U_PLUGIN_CHANGED_LEVEL_WARNING
U_BAD_VARIABLE_DEFINITION
U_MALFORMED_RULE
U_MALFORMED_SET
U_MALFORMED_SYMBOL_REFERENCE
U_MALFORMED_UNICODE_ESCAPE
U_MALFORMED_VARIABLE_DEFINITION
U_MALFORMED_VARIABLE_REFERENCE
U_MISMATCHED_SEGMENT_DELIMITERS
U_MISPLACED_ANCHOR_START
U_MISPLACED_CURSOR_OFFSET
U_MISPLACED_QUANTIFIER
U_MISSING_OPERATOR
U_MISSING_SEGMENT_CLOSE
U_MULTIPLE_ANTE_CONTEXTS
U_MULTIPLE_CURSORS
U_MULTIPLE_POST_CONTEXTS
U_TRAILING_BACKSLASH
U_UNDEFINED_SEGMENT_REFERENCE
U_UNDEFINED_VARIABLE
U_UNQUOTED_SPECIAL
U_UNTERMINATED_QUOTE
U_RULE_MASK_ERROR
U_MISPLACED_COMPOUND_FILTER
U_MULTIPLE_COMPOUND_FILTERS
U_INVALID_RBT_SYNTAX
U_INVALID_PROPERTY_PATTERN
U_MALFORMED_PRAGMA
U_UNCLOSED_SEGMENT
U_ILLEGAL_CHAR_IN_SEGMENT
U_VARIABLE_RANGE_EXHAUSTED
U_VARIABLE_RANGE_OVERLAP
U_ILLEGAL_CHARACTER
U_INTERNAL_TRANSLITERATOR_ERROR
U_INVALID_ID
U_INVALID_FUNCTION
U_UNEXPECTED_TOKEN
U_MULTIPLE_DECIMAL_SEPARATORS
U_MULTIPLE_EXPONENTIAL_SYMBOLS
U_MALFORMED_EXPONENTIAL_PATTERN
U_MULTIPLE_PERCENT_SYMBOLS
U_MULTIPLE_PERMILL_SYMBOLS
U_MULTIPLE_PAD_SPECIFIERS
U_PATTERN_SYNTAX_ERROR
U_ILLEGAL_PAD_POSITION
U_UNMATCHED_BRACES
U_UNSUPPORTED_PROPERTY
U_UNSUPPORTED_ATTRIBUTE
U_ARGUMENT_TYPE_MISMATCH
U_DUPLICATE_KEYWORD
U_UNDEFINED_KEYWORD
U_DEFAULT_KEYWORD_MISSING
U_DECIMAL_NUMBER_SYNTAX_ERROR
U_FORMAT_INEXACT_ERROR
U_NUMBER_ARG_OUTOFBOUNDS_ERROR
U_NUMBER_SKELETON_SYNTAX_ERROR
U_BRK_INTERNAL_ERROR
U_BRK_HEX_DIGITS_EXPECTED
U_BRK_SEMICOLON_EXPECTED
U_BRK_RULE_SYNTAX
U_BRK_UNCLOSED_SET
U_BRK_ASSIGN_ERROR
U_BRK_VARIABLE_REDFINITION
U_BRK_MISMATCHED_PAREN
U_BRK_NEW_LINE_IN_QUOTED_STRING
U_BRK_UNDEFINED_VARIABLE
U_BRK_INIT_ERROR
U_BRK_RULE_EMPTY_SET
U_BRK_UNRECOGNIZED_OPTION
U_BRK_MALFORMED_RULE_TAG
U_REGEX_INTERNAL_ERROR
U_REGEX_RULE_SYNTAX
U_REGEX_INVALID_STATE
U_REGEX_BAD_ESCAPE_SEQUENCE
U_REGEX_PROPERTY_SYNTAX
U_REGEX_UNIMPLEMENTED
U_REGEX_MISMATCHED_PAREN
U_REGEX_NUMBER_TOO_BIG
U_REGEX_BAD_INTERVAL
U_REGEX_MAX_LT_MIN
U_REGEX_INVALID_BACK_REF
U_REGEX_INVALID_FLAG
U_REGEX_LOOK_BEHIND_LIMIT
U_REGEX_SET_CONTAINS_STRING
U_REGEX_OCTAL_TOO_BIG
U_REGEX_MISSING_CLOSE_BRACKET
U_REGEX_INVALID_RANGE
U_REGEX_STACK_OVERFLOW
U_REGEX_TIME_OUT
U_REGEX_STOPPED_BY_CALLER
U_REGEX_PATTERN_TOO_BIG
U_REGEX_INVALID_CAPTURE_GROUP_NAME
U_STRINGPREP_PROHIBITED_ERROR
U_STRINGPREP_UNASSIGNED_ERROR
U_STRINGPREP_CHECK_BIDI_ERROR
U_IDNA_STD3_ASCII_RULES_ERROR
U_IDNA_ACE_PREFIX_ERROR
U_IDNA_VERIFICATION_ERROR
U_IDNA_LABEL_TOO_LONG_ERROR
U_IDNA_ZERO_LENGTH_LABEL_ERROR
U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR
U_PLUGIN_TOO_HIGH
U_PLUGIN_DIDNT_SET_LEVEL
Version
LOCALE
%%ALIAS
pool
%%ParentIsRoot
%%Parent
ubrk_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized
ubrk_swap(): RBBI Data header is invalid.
ubrk_swap(): too few bytes (%d after ICU Data header) for break data.
unorm2_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as Normalizer2 data
unorm2_swap(): too few bytes (%d after header) for Normalizer2 data
unorm2_swap(): too few bytes (%d after header) for all of Normalizer2 data
ISCII,version=
uprv_ebcdicFromAscii() string[%d] contains a variant character in position %d
uprv_copyFromAscii() string[%d] contains a variant character in position %d
uprv_asciiFromEbcdic() string[%d] contains a variant character in position %d
uprv_copyEbcdic() string[%] contains a variant character in position %d
UTF-16BE,version=1
UTF-16LE,version=1
UTF-16
UTF-16,version=1
UTF-16,version=2
root
und_
art_LOJBAN
hy__AREVELA
hy__AREVMDA
zh_GAN
zh_GUOYU
zh_HAKKA
zh_MIN_NAN
zh_WUU
zh_XIANG
zh_YUE
%+1.1f
ucnv_swapAliases(): data format %02x.%02x.%02x.%02x (format version %02x) is not an alias table
ucnv_swapAliases(): too few bytes (%d after header) for an alias table
ucnv_swapAliases(): table of contents contains unsupported number of sections (%u sections)
ucnv_swapAliases().swapInvChars(charset names) failed
ucnv_swapAliases(): unable to allocate memory for sorting tables (max length: %u)
ucnv_swapAliases().uprv_sortArray(%u items) failed
ISO8859_7
Shift-JIS
jisx-212
ibm-5478
ksc_5601
ISO_2022,locale=ja,version=
icu-internal-25546
ibm-949
ISO_2022,locale=ko,version=1
iso-ir-165
cns-11643-1992
ISO_2022,locale=zh,version=0
ISO_2022,locale=zh,version=1
ISO_2022,locale=zh,version=2
ucol_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not recognized as collation data
ucol_swapInverseUCA(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not an inverse UCA collation file
ucol_swapInverseUCA(): too few bytes (%d after header) for inverse UCA collation data
ucol_swap(formatVersion=3): too few bytes (%d after header) for collation data
ucol_swap(formatVersion=3): magic 0x%08x or format version %02x.%02x is not a collation binary
ucol_swap(formatVersion=3): endianness %d or charset %d does not match the swapper
ucol_swap(formatVersion=4): too few bytes (%d after header) for collation data
ucol_swap(formatVersion=4): unknown data at IX_RESERVED8_OFFSET
ucol_swap(formatVersion=4): unknown data at IX_RESERVED10_OFFSET
ucol_swap(formatVersion=4): unknown data at IX_RESERVED18_OFFSET
af_ZA
am_ET
ar_AE
ar_BH
ar_DZ
ar_EG
ar_IQ
ar_JO
ar_KW
ar_LB
ar_LY
ar_MA
ar_MO
ar_OM
ar_QA
ar_SA
ar_SY
ar_TN
ar_YE
arn_CL
as_IN
az_Cyrl_AZ
az_Cyrl
az_Latn_AZ
az_Latn
az_AZ
ba_RU
be_BY
bg_BG
bin_NG
bn_BD
bn_IN
bo_BT
bo_CN
dz_BT
br_FR
ca_ES
ca_ES_VALENCIA
chr_Cher
chr_Cher_US
chr_US
ckb_Arab
ckb_Arab_IQ
co_FR
cs_CZ
cy_GB
da_DK
de_AT
de_CH
de_DE
de_LI
de_LU
de_DE@collation=phonebook
de@collation=phonebook
dv_MV
el_GR
en_AU
en_BZ
en_CA
en_HK
en_ID
en_IE
en_IN
en_JM
en_MY
en_NZ
en_PH
en_SG
en_TT
en_US
en_029
en_ZA
en_ZW
en_VI
en_AS
en_GU
en_MH
en_MP
en_UM
es_AR
es_BO
es_CL
es_CO
es_CR
es_CU
es_DO
es_EC
es_ES
es_GT
es_HN
es_MX
es_NI
es_PA
es_PE
es_PR
es_PY
es_SV
es_US
es_UY
es_VE
es_419
es_ES@collation=traditional
es@collation=traditional
et_EE
eu_ES
fa_IR
fa_AF
ff_Latn
ff_Latn_SN
ff_NG
fi_FI
fil_PH
fo_FO
fr_BE
fr_CA
fr_CD
fr_CG
fr_CH
fr_CI
fr_CM
fr_FR
fr_HT
fr_LU
fr_MA
fr_MC
fr_ML
fr_RE
fr_SN
fr_015
fr_029
fuv_NG
fy_NL
ga_IE
gd_GB
gl_ES
gn_PY
gsw_FR
gu_IN
ha_Latn
ha_Latn_NG
haw_US
he_IL
hi_IN
bs_Latn_BA
bs_Latn
bs_BA
bs_Cyrl_BA
bs_Cyrl
hr_BA
hr_HR
sr_Latn_ME
sr_Latn_RS
sr_Latn_BA
sr_Latn_CS
sr_Latn
sr_Cyrl_BA
sr_Cyrl_CS
sr_Cyrl_ME
sr_Cyrl_RS
sr_Cyrl
hsb_DE
dsb_DE
hu_HU
hy_AM
ibb_NG
id_ID
ig_NG
ii_CN
is_IS
it_CH
it_IT
iu_Cans_CA
iu_Cans
iu_Latn_CA
iu_Latn
iw_IL
ja_JP
ka_GE
kk_KZ
kl_GL
km_KH
kn_IN
ko_KP
ko_KR
kok_IN
kr_NG
ks_Arab_IN
ks_Deva_IN
ky_KG
lb_LU
la_001
la_IT
lo_LA
lt_LT
lv_LV
mi_NZ
mk_MK
ml_IN
mn_MN
mn_Mong
mn_Mong_CN
mn_CN
mn_Cyrl
mn_Mong_MN
mni_IN
moh_CA
mr_IN
ms_BN
ms_MY
mt_MT
my_MM
ne_IN
ne_NP
nl_BE
nl_NL
nb_NO
no_NO
nn_NO
no_NO_NY
nso_ZA
oc_FR
om_ET
gaz_ET
or_IN
pa_IN
pa_Arab_PK
pa_PK
pap_029
pap_AN
pl_PL
ps_AF
pt_BR
pt_PT
qu_BO
qu_EC
qu_PE
quz_BO
quz_EC
quz_PE
quc_CO
quc_Latn_GT
qut_GT
rm_CH
ro_RO
ro_MD
ru_RU
ru_MD
rw_RW
sa_IN
sah_RU
sd_Deva_IN
sd_IN
sd_Arab_PK
sd_PK
sd_Arab
se_FI
se_NO
se_SE
sma_NO
sma_SE
smj_NO
smj_SE
smn_FI
sms_FI
si_LK
sk_SK
sl_SI
so_SO
sq_AL
st_ZA
sv_FI
sv_SE
sw_KE
syr_SY
ta_IN
ta_LK
te_IN
tg_Cyrl
tg_Cyrl_TJ
th_TH
ti_ER
ti_ET
tk_TM
tn_BW
tn_ZA
tr_TR
ts_ZA
tt_RU
tzm_Latn
tzm_Latn_DZ
tzm_Tfng_MA
tzm_Arab_MA
ug_CN
ug_Arab_CN
uk_UA
ur_IN
ur_PK
uz_Cyrl_UZ
uz_Cyrl
uz_UZ
uz_Latn_UZ
uz_Latn
ve_ZA
ven_ZA
vi_VN
wo_SN
xh_ZA
yi_001
yo_NG
zh_Hans
zh_CN
zh_Hans_CN
zh_Hant_HK
zh_HK
zh_Hant_MO
zh_MO
zh_Hans_SG
zh_SG
zh_Hant_TW
zh_Hant
zh_TW
zh@collation=stroke
zh_Hant@collation=stroke
zh_Hant_TW@collation=stroke
zh_TW@collation=stroke
zh_Hans@collation=stroke
zh_Hans_CN@collation=stroke
zh_CN@collation=stroke
zu_ZA
*NULL* 
[BOGUS Trace Function Number]
*NULL*
0123456789abcdef
u_init
u_cleanup
ucnv_open
ucnv_openPackage
ucnv_openAlgorithmic
ucnv_clone
ucnv_close
ucnv_flushCache
ucnv_load
ucnv_unload
ucol_open
ucol_close
ucol_strcoll
ucol_getSortKey
ucol_getLocale
ucol_nextSortKeyPart
ucol_strcollIter
ucol_openFromShortString
ucol_strcollUTF8
icudt64l-brkitr
boundaries
(page_allocator) != nullptr
IsAligned(allocate_page_size, page_allocator->AllocatePageSize())
IsAligned(allocate_page_size_, commit_page_size_)
IsAligned(alignment, region_allocator_.page_size())
alignment <= allocate_page_size_
page_allocator_->SetPermissions(reinterpret_cast<void*>(address), size, access)
IsAligned(address, allocate_page_size_)
IsAligned(size, allocate_page_size_)
region_allocator_.contains(address, size)
page_allocator_->SetPermissions(raw_address, size, PageAllocator::kNoAccess)
 vs. 
# Fatal error in %s, line %d
#FailureMessage Object: %p
Debug check failed: %s.
'\0'
'\''
'\\'
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'
kr == 0
thread_info_data.user_time.seconds <= std::numeric_limits<int64_t>::max() - thread_info_data.system_time.seconds
begin() < end()
base::bits::IsPowerOfTwo(page_size_)
IsAligned(size(), page_size_)
IsAligned(begin(), page_size_)
contains(address, size)
), size: 
RegionAllocator: [
size: 
free_size: 
page_size: 
all regions: 
free regions: 
n <= max
x < max
max - excluded.size() >= n
x < result.size()
state0_ != 0 || state1_ != 0
Free(base, prefix_size)
Free(aligned_base + size, suffix_size)
OS::Free(memory_, RoundUp(size_, OS::AllocatePageSize()))
V8 failed to get kernel version
V8 failed to initialize fast TLS on current kernel
__TEXT
__text
StoreInLiteral
!receiver_maps.empty()
name->IsUniqueName()
map->is_stable()
receiver_maps_.size() == 1
info->is_osr() == osr_helper_.has_value()
-- Prologue: check code start register --
-- Prologue: check for deoptimization --
-- B
 start
 (deferred)
 (no frame)
 (construct frame)
 (deconstruct frame)
 (loop up to 
 (in loop 
-- Out of line code --
deoptimization_state
MachineRepresentation::kTagged == type.representation()
MachineRepresentation::kFloat32 == type.representation()
op->IsImmediate()
-- Prologue: generate speculation poison --
Unexpected operator #%d:%s @ node #%d
InputCountField::is_valid(input_count)
[constant:
[immediate:
[stack:
[fp_stack:
|w16
|w32
|w64
|f32
|f64
|s128
ArchCallCodeObject
ArchTailCallCodeObjectFromJSFunction
ArchTailCallCodeObject
ArchCallJSFunction
ArchTailCallAddress
ArchPrepareCallCFunction
ArchSaveCallerRegisters
ArchRestoreCallerRegisters
ArchCallCFunction
ArchPrepareTailCall
ArchCallWasmFunction
ArchTailCallWasm
ArchCallBuiltinPointer
ArchJmp
ArchBinarySearchSwitch
ArchLookupSwitch
ArchTableSwitch
ArchNop
ArchDebugAbort
ArchDebugBreak
ArchComment
ArchThrowTerminator
ArchDeoptimize
ArchRet
ArchStackPointer
ArchFramePointer
ArchParentFramePointer
ArchTruncateDoubleToI
ArchStoreWithWriteBarrier
ArchStackSlot
ArchWordPoisonOnSpeculation
Word32AtomicLoadInt8
Word32AtomicLoadUint8
Word32AtomicLoadInt16
Word32AtomicLoadUint16
Word32AtomicLoadWord32
Word32AtomicStoreWord8
Word32AtomicStoreWord16
Word32AtomicStoreWord32
Word32AtomicExchangeInt8
Word32AtomicExchangeUint8
Word32AtomicExchangeInt16
Word32AtomicExchangeUint16
Word32AtomicExchangeWord32
Word32AtomicCompareExchangeInt8
Word32AtomicCompareExchangeUint8
Word32AtomicCompareExchangeInt16
Word32AtomicCompareExchangeUint16
Word32AtomicCompareExchangeWord32
Word32AtomicAddInt8
Word32AtomicAddUint8
Word32AtomicAddInt16
Word32AtomicAddUint16
Word32AtomicAddWord32
Word32AtomicSubInt8
Word32AtomicSubUint8
Word32AtomicSubInt16
Word32AtomicSubUint16
Word32AtomicSubWord32
Word32AtomicAndInt8
Word32AtomicAndUint8
Word32AtomicAndInt16
Word32AtomicAndUint16
Word32AtomicAndWord32
Word32AtomicOrInt8
Word32AtomicOrUint8
Word32AtomicOrInt16
Word32AtomicOrUint16
Word32AtomicOrWord32
Word32AtomicXorInt8
Word32AtomicXorUint8
Word32AtomicXorInt16
Word32AtomicXorUint16
Word32AtomicXorWord32
Ieee754Float64Acos
Ieee754Float64Acosh
Ieee754Float64Asin
Ieee754Float64Asinh
Ieee754Float64Atan
Ieee754Float64Atanh
Ieee754Float64Atan2
Ieee754Float64Cbrt
Ieee754Float64Cos
Ieee754Float64Cosh
Ieee754Float64Exp
Ieee754Float64Expm1
Ieee754Float64Log
Ieee754Float64Log1p
Ieee754Float64Log10
Ieee754Float64Log2
Ieee754Float64Pow
Ieee754Float64Sin
Ieee754Float64Sinh
Ieee754Float64Tan
Ieee754Float64Tanh
Arm64Add
Arm64Add32
Arm64And
Arm64And32
Arm64Bic
Arm64Bic32
Arm64Clz
Arm64Clz32
Arm64Cmp
Arm64Cmp32
Arm64Cmn
Arm64Cmn32
Arm64Tst
Arm64Tst32
Arm64Or
Arm64Or32
Arm64Orn
Arm64Orn32
Arm64Eor
Arm64Eor32
Arm64Eon
Arm64Eon32
Arm64Sub
Arm64Sub32
Arm64Mul
Arm64Mul32
Arm64Smull
Arm64Umull
Arm64Madd
Arm64Madd32
Arm64Msub
Arm64Msub32
Arm64Mneg
Arm64Mneg32
Arm64Idiv
Arm64Idiv32
Arm64Udiv
Arm64Udiv32
Arm64Imod
Arm64Imod32
Arm64Umod
Arm64Umod32
Arm64Not
Arm64Not32
Arm64Lsl
Arm64Lsl32
Arm64Lsr
Arm64Lsr32
Arm64Asr
Arm64Asr32
Arm64Ror
Arm64Ror32
Arm64Mov32
Arm64Sxtb32
Arm64Sxth32
Arm64Sxtb
Arm64Sxth
Arm64Sxtw
Arm64Sbfx32
Arm64Ubfx
Arm64Ubfx32
Arm64Ubfiz32
Arm64Bfi
Arm64Rbit
Arm64Rbit32
Arm64Rev
Arm64Rev32
Arm64TestAndBranch32
Arm64TestAndBranch
Arm64CompareAndBranch32
Arm64CompareAndBranch
Arm64Claim
Arm64Poke
Arm64PokePair
Arm64Peek
Arm64Float32Cmp
Arm64Float32Add
Arm64Float32Sub
Arm64Float32Mul
Arm64Float32Div
Arm64Float32Abs
Arm64Float32Neg
Arm64Float32Sqrt
Arm64Float32RoundDown
Arm64Float32Max
Arm64Float32Min
Arm64Float64Cmp
Arm64Float64Add
Arm64Float64Sub
Arm64Float64Mul
Arm64Float64Div
Arm64Float64Mod
Arm64Float64Max
Arm64Float64Min
Arm64Float64Abs
Arm64Float64Neg
Arm64Float64Sqrt
Arm64Float64RoundDown
Arm64Float32RoundUp
Arm64Float64RoundUp
Arm64Float64RoundTiesAway
Arm64Float32RoundTruncate
Arm64Float64RoundTruncate
Arm64Float32RoundTiesEven
Arm64Float64RoundTiesEven
Arm64Float64SilenceNaN
Arm64Float32ToFloat64
Arm64Float64ToFloat32
Arm64Float32ToInt32
Arm64Float64ToInt32
Arm64Float32ToUint32
Arm64Float64ToUint32
Arm64Float32ToInt64
Arm64Float64ToInt64
Arm64Float32ToUint64
Arm64Float64ToUint64
Arm64Int32ToFloat32
Arm64Int32ToFloat64
Arm64Int64ToFloat32
Arm64Int64ToFloat64
Arm64Uint32ToFloat32
Arm64Uint32ToFloat64
Arm64Uint64ToFloat32
Arm64Uint64ToFloat64
Arm64Float64ExtractLowWord32
Arm64Float64ExtractHighWord32
Arm64Float64InsertLowWord32
Arm64Float64InsertHighWord32
Arm64Float64MoveU64
Arm64U64MoveFloat64
Arm64LdrS
Arm64StrS
Arm64LdrD
Arm64StrD
Arm64LdrQ
Arm64StrQ
Arm64Ldrb
Arm64Ldrsb
Arm64Strb
Arm64Ldrh
Arm64Ldrsh
Arm64Strh
Arm64Ldrsw
Arm64LdrW
Arm64StrW
Arm64Ldr
Arm64LdrDecompressTaggedSigned
Arm64LdrDecompressTaggedPointer
Arm64LdrDecompressAnyTagged
Arm64Str
Arm64StrCompressTagged
Arm64DecompressSigned
Arm64DecompressPointer
Arm64DecompressAny
Arm64CompressSigned
Arm64CompressPointer
Arm64CompressAny
Arm64DsbIsb
Arm64F32x4Splat
Arm64F32x4ExtractLane
Arm64F32x4ReplaceLane
Arm64F32x4SConvertI32x4
Arm64F32x4UConvertI32x4
Arm64F32x4Abs
Arm64F32x4Neg
Arm64F32x4RecipApprox
Arm64F32x4RecipSqrtApprox
Arm64F32x4Add
Arm64F32x4AddHoriz
Arm64F32x4Sub
Arm64F32x4Mul
Arm64F32x4Min
Arm64F32x4Max
Arm64F32x4Eq
Arm64F32x4Ne
Arm64F32x4Lt
Arm64F32x4Le
Arm64I32x4Splat
Arm64I32x4ExtractLane
Arm64I32x4ReplaceLane
Arm64I32x4SConvertF32x4
Arm64I32x4SConvertI16x8Low
Arm64I32x4SConvertI16x8High
Arm64I32x4Neg
Arm64I32x4Shl
Arm64I32x4ShrS
Arm64I32x4Add
Arm64I32x4AddHoriz
Arm64I32x4Sub
Arm64I32x4Mul
Arm64I32x4MinS
Arm64I32x4MaxS
Arm64I32x4Eq
Arm64I32x4Ne
Arm64I32x4GtS
Arm64I32x4GeS
Arm64I32x4UConvertF32x4
Arm64I32x4UConvertI16x8Low
Arm64I32x4UConvertI16x8High
Arm64I32x4ShrU
Arm64I32x4MinU
Arm64I32x4MaxU
Arm64I32x4GtU
Arm64I32x4GeU
Arm64I16x8Splat
Arm64I16x8ExtractLane
Arm64I16x8ReplaceLane
Arm64I16x8SConvertI8x16Low
Arm64I16x8SConvertI8x16High
Arm64I16x8Neg
Arm64I16x8Shl
Arm64I16x8ShrS
Arm64I16x8SConvertI32x4
Arm64I16x8Add
Arm64I16x8AddSaturateS
Arm64I16x8AddHoriz
Arm64I16x8Sub
Arm64I16x8SubSaturateS
Arm64I16x8Mul
Arm64I16x8MinS
Arm64I16x8MaxS
Arm64I16x8Eq
Arm64I16x8Ne
Arm64I16x8GtS
Arm64I16x8GeS
Arm64I16x8UConvertI8x16Low
Arm64I16x8UConvertI8x16High
Arm64I16x8ShrU
Arm64I16x8UConvertI32x4
Arm64I16x8AddSaturateU
Arm64I16x8SubSaturateU
Arm64I16x8MinU
Arm64I16x8MaxU
Arm64I16x8GtU
Arm64I16x8GeU
Arm64I8x16Splat
Arm64I8x16ExtractLane
Arm64I8x16ReplaceLane
Arm64I8x16Neg
Arm64I8x16Shl
Arm64I8x16ShrS
Arm64I8x16SConvertI16x8
Arm64I8x16Add
Arm64I8x16AddSaturateS
Arm64I8x16Sub
Arm64I8x16SubSaturateS
Arm64I8x16Mul
Arm64I8x16MinS
Arm64I8x16MaxS
Arm64I8x16Eq
Arm64I8x16Ne
Arm64I8x16GtS
Arm64I8x16GeS
Arm64I8x16ShrU
Arm64I8x16UConvertI16x8
Arm64I8x16AddSaturateU
Arm64I8x16SubSaturateU
Arm64I8x16MinU
Arm64I8x16MaxU
Arm64I8x16GtU
Arm64I8x16GeU
Arm64S128Zero
Arm64S128Dup
Arm64S128And
Arm64S128Or
Arm64S128Xor
Arm64S128Not
Arm64S128Select
Arm64S32x4ZipLeft
Arm64S32x4ZipRight
Arm64S32x4UnzipLeft
Arm64S32x4UnzipRight
Arm64S32x4TransposeLeft
Arm64S32x4TransposeRight
Arm64S32x4Shuffle
Arm64S16x8ZipLeft
Arm64S16x8ZipRight
Arm64S16x8UnzipLeft
Arm64S16x8UnzipRight
Arm64S16x8TransposeLeft
Arm64S16x8TransposeRight
Arm64S8x16ZipLeft
Arm64S8x16ZipRight
Arm64S8x16UnzipLeft
Arm64S8x16UnzipRight
Arm64S8x16TransposeLeft
Arm64S8x16TransposeRight
Arm64S8x16Concat
Arm64S8x16Shuffle
Arm64S32x2Reverse
Arm64S16x4Reverse
Arm64S16x2Reverse
Arm64S8x8Reverse
Arm64S8x4Reverse
Arm64S8x2Reverse
Arm64S1x4AnyTrue
Arm64S1x4AllTrue
Arm64S1x8AnyTrue
Arm64S1x8AllTrue
Arm64S1x16AnyTrue
Arm64S1x16AllTrue
Arm64Word64AtomicLoadUint8
Arm64Word64AtomicLoadUint16
Arm64Word64AtomicLoadUint32
Arm64Word64AtomicLoadUint64
Arm64Word64AtomicStoreWord8
Arm64Word64AtomicStoreWord16
Arm64Word64AtomicStoreWord32
Arm64Word64AtomicStoreWord64
Arm64Word64AtomicAddUint8
Arm64Word64AtomicAddUint16
Arm64Word64AtomicAddUint32
Arm64Word64AtomicAddUint64
Arm64Word64AtomicSubUint8
Arm64Word64AtomicSubUint16
Arm64Word64AtomicSubUint32
Arm64Word64AtomicSubUint64
Arm64Word64AtomicAndUint8
Arm64Word64AtomicAndUint16
Arm64Word64AtomicAndUint32
Arm64Word64AtomicAndUint64
Arm64Word64AtomicOrUint8
Arm64Word64AtomicOrUint16
Arm64Word64AtomicOrUint32
Arm64Word64AtomicOrUint64
Arm64Word64AtomicXorUint8
Arm64Word64AtomicXorUint16
Arm64Word64AtomicXorUint32
Arm64Word64AtomicXorUint64
Arm64Word64AtomicExchangeUint8
Arm64Word64AtomicExchangeUint16
Arm64Word64AtomicExchangeUint32
Arm64Word64AtomicExchangeUint64
Arm64Word64AtomicCompareExchangeUint8
Arm64Word64AtomicCompareExchangeUint16
Arm64Word64AtomicCompareExchangeUint32
Arm64Word64AtomicCompareExchangeUint64
Operand2_R_LSL_I
Operand2_R_LSR_I
Operand2_R_ASR_I
Operand2_R_ROR_I
Operand2_R_UXTB
Operand2_R_UXTH
Operand2_R_SXTB
Operand2_R_SXTH
Operand2_R_SXTW
Root
branch
branch_and_poison
deoptimize
deoptimize_and_poison
trap
equal
not equal
signed less than
signed greater than or equal
signed less than or equal
signed greater than
unsigned less than
unsigned greater than or equal
unsigned less than or equal
unsigned greater than
less than or unordered (FP)
greater than or equal (FP)
less than or equal (FP)
greater than or unordered (FP)
less than (FP)
greater than, equal or unordered (FP)
less than, equal or unordered (FP)
greater than (FP)
unordered equal
unordered not equal
not overflow
positive or zero
negative
gap 
          
) = 
 && 
 if 
: AO#
: AO#?
 loop blocks: [
  instructions: [
 predecessors:
     phi: 
 successors:
successor->PredecessorCount() == 1 && successor->predecessors()[0] == block->rpo_number()
InstructionBlockAt(successor_id)->IsDeferred()
InstructionBlockAt(predecessor_id)->IsDeferred()
!definitions.Contains(vreg)
virtual_register != InstructionOperand::kInvalidVirtualRegister
current_block_->code_start() >= 0 && current_block_->code_start() < end
block->rpo_number() == rpo
IMM#
CST#
jt [%d] B%d
  parallel move
  flags
  nop
  jmp
  other
B%d 
-> B%d
jt-fw nop @%d
  xx %d
  fw %d -> %d (recurse)
  fw %d -> %d (cycle)
  fw %d -> %d (forward)
creating splinter %d for range %d between %d and %d
0 < instr->InputCount()
kSameAsFirst != constraint.type_
InstructionOperand::kInvalidVirtualRegister != constraint.virtual_register_
kImmediate != constraint.type_
kExplicit != constraint.type_
kConstant != constraint.type_
sequence()->instructions().size() == constraints()->size()
instr == *instr_it
operand_count == OperandCount(instr)
op->IsUnallocated()
ConstantOperand::cast(op)->virtual_register() == constraint->value_
value == constraint->value_
LocationOperand::cast(op)->register_code() == constraint->value_
LocationOperand::cast(op)->index() == constraint->value_
ElementSizeLog2Of(LocationOperand::cast(op)->representation()) == constraint->value_
map_for_moves_.empty()
it != map_.end()
map_for_moves_.find(move->destination()) == map_for_moves_.end()
pred_id >= current_block_id
block->IsLoopHeader()
(pred_assessments) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/backend/register-allocator-verifier.cc:385
origin->PredecessorCount() > 1 || origin->phis().size() > 0
origin->IsLoopHeader()
found_contribution != pred_assessments->map().end()
FinalAssessment::cast(contribution)->virtual_register() == expected
iterator != current_assessments->map().end()
FinalAssessment::cast(assessment)->virtual_register() == virtual_register
assessments_.empty()
outstanding_assessments_.empty()
found_op != block_assessments->map().end()
FinalAssessment::cast(found_op->second)->virtual_register() == vreg
(instr->GetParallelMove(inner_pos)) == nullptr
assessment->kind() == Final
map_.empty()
(other) != nullptr
it->second == vreg
Start() <= pos->pos()
pos->pos() <= End()
(interval) != nullptr
temp != first
Shorten live range %d to [%d
Ensure live range %d in interval [%d %d[
Add to live range %d interval [%d %d[
Add to live range %d use position %d
Range: 
phi 
nlphi 
start.value() >= position
end.value() >= position
Register allocator error: live v%d reached first block.
  (first use is at %d)
  (function: %s)
live_ranges_size == live_ranges().size()
Allocating fixed reg for op %d
Fixed reg is tagged at %d
live_ranges_size == data()->live_ranges().size()
hint.second->IsResolved()
(current->next()) == nullptr
NextIntervalStartsInDifferentBlocks(first)
IntervalStartsAtBlockBoundary(i)
IntervalPredecessorsCoveredByRange(i, current)
NextIntervalStartsInDifferentBlocks(i)
Build bundles
Block B%d
Processing phi for v%d with %d:%d
Input value v%d with range %d:%d
Merge
Merged %d and %d to %d
Added %d and %d to %d
Done block B%d
No merge %d:%d %d:%d
initial_range_count == data()->live_ranges().size()
Live range %d:%d is defined by a spill operand.
Splitting live range %d:%d at %d
Splitting live range %d:%d in position between [%d, %d]
Spilling live range %d:%d mode %d
Starting spill type is %d
New spill range needed
Upgrading
Final spill type is %d
Recombining %d:%d with %d
No recombine for %d:%d to %d
Keeping reactivated fixed range for %s
Putting back %d:%d
Next use at %d
Marking %d:%d to recombine
Keeping %d:%d in %s
Scheduling %d:%d
Found new end for %d:%d at %d
No candidate for %d at %d
Reload %d:%d starting at %d itself
Reload %d:%d starting at %d as %d
Looking at only uses
Vote went %zu vs %zu
result.second
!data()->is_turbo_preprocess_ranges()
Processing boundary at %d leaving %d
Single predecessor for B%d
Two predecessors for B%d
Processing interval %d:%d start=%d
Add live range %d:%d in %s to active
Add live range %d:%d to inactive
Add live range %d:%d to unhandled
Moving live range %d:%d from active to handled
Moving live range %d:%d from active to inactive
Moving live range %d:%d from inactive to handled
Moving live range %d:%d from inactive to active
Register %s is free until pos %d (1) due to %d
Register %s is free until pos %d (2)
Found reg hint %s (free until [%d) for live range %d:%d (end %d[).
Assigning preferred reg %s to live range %d:%d
Register %s in free until %d
Assigning free reg %s to live range %d:%d
Assigning blocked reg %s to live range %d:%d
start < end
Live range %d is spilled and alive in deferred code only
Live range %d is spilled deferred code only but alive outside
Pointer for range %d (spilled at %d) at safe point %d
Pointer in register for range %d:%d (start at %d) at safe point %d
Adding B%d to list of spill blocks for %d
Live Range %d will be spilled only in deferred blocks.
Spilling deferred spill for range %d at B%d
(deferred)
[-B%d-%s
Reset %d as live due vote %zu in %s
Resolving conflict of %d with deferred fixed for register %s
Using information from B%d
Not a fallthrough. Adding %zu elements...
BranchElimination
Size() > 0
%this
%new.target
0 == first_reg.index()
MachineRepresentation::kFloat32 != rep
MachineRepresentation::kFloat64 != rep
2 >= locations.return_count_
c-call
CheckpointElimination
descriptor.GetParameterCount() + 1 == (sizeof(ArraySizeHelper(nodes)))
0 == value & ((static_cast<intptr_t>(1) << kSmiShiftSize) - 1)
descriptor.GetParameterCount() + 2 == (sizeof(ArraySizeHelper(nodes)))
PoisoningMitigationLevel::kPoisonAll != poisoning_level_
CommonOperatorReducer
True
False
CriticalSafetyCheck
SafetyCheck
NoSafetyCheck
TrapUnreachable
TrapMemOutOfBounds
TrapUnalignedAccess
TrapDivByZero
TrapDivUnrepresentable
TrapRemByZero
TrapFloatUnrepresentable
TrapFuncInvalid
TrapFuncSigMismatch
TrapDataSegmentDropped
TrapElemSegmentDropped
TrapTableOutOfBounds
DelayedStringConstant
|size:
dense
sparse:
observable
not-observable
 (order 
, hint 
Deoptimize
DeoptimizeIf
DeoptimizeUnless
TrapIf
TrapUnless
Switch
IfValue
IfDefault
Loop
Merge
Parameter
OsrValue
Int32Constant
Int64Constant
Float32Constant
Float64Constant
ExternalConstant
NumberConstant
PointerConstant
HeapConstant
RelocatableInt32Constant
RelocatableInt64Constant
ObjectId
Select
TypeGuard
EffectPhi
InductionVariablePhi
StateValues
TypedStateValues
ArgumentsElementsState
ArgumentsLengthState
ObjectState
TypedObjectState
FrameState
Projection
DeadValue
Eager
Soft
Lazy
Dead
Unreachable
IfTrue
IfFalse
IfSuccess
IfException
Terminate
OsrNormalEntry
OsrLoopEntry
LoopExit
LoopExitValue
LoopExitEffect
Checkpoint
FinishRegion
Retain
Branch
BeginRegion
CallWithCallerSavedRegisters
TailCall
current.nested_site().AsSmi() == 0
proto.map().oddball_type() == OddballType::kNull
ConstantFoldingReducer
CEQ: Pre-visit of #%d:%s
CEQ: Mid-visit of #%d:%s
  Assigned class number is %zu
CEQ: Post-visit of #%d:%s
CEQ: Backedge from #%d:%s to #%d:%s
  BList erased: {%d->%d}
  BList: 
{%d->%d} 
DeadCodeElimination
process node
No frame state (zapped by #%d: %s)
Effect control linearizer lowering of '%s': value output count does not agree.
machine()->Is64()
clone branch
(field) != nullptr
Escape analysis failed to remove node %s#%d
EscapeAnalysisReducer
var != Variable::Invalid()
vobject->size() == size
IsAligned(offset, kTaggedSize)
!HasEscaped()
Ignore
PokeAt(
ARGUMENTS_ADAPTOR
CONSTRUCT_STUB
machine()->Float64RoundDown().IsSupported()
machine()->Float64RoundTruncate().IsSupported()
- In-place update of 
 by reducer 
- Replacement of 
DeadLink: 
" : 
"sourceId": 
, "functionName": "
, "sourceName": "
, "sourceText": "
, "sourceName": ""
, "sourceText": ""
, "startPosition": 
, "endPosition": 
"sources" : {
"inlinings" : {
turbo-%s-%i
turbo-%p-%i
turbo-none-%i
%s%c
%s%s.%s
%s%s-%s.%s
%s%s_%s.%s
%s%s_%s-%s.%s
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/graph-visualizer.cc:409
"nodes":[
"edges":[
compilation
method "
stub
 Ctx:
 FS:
 Eff:
 Ctrl:
 type:
from_bci
to_bci
predecessors
successors
xhandlers
flags
dominator
loop_depth
first_lir_id
last_lir_id
states
 pos:
inlining(
 <|@
0 0 
 Goto
intervals
 "const(nostack):
 "fp_stack:
 "stack:
 unknown
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/graph-visualizer.cc:809
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/graph-visualizer.cc:817
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/graph-visualizer.cc:827
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/graph-visualizer.cc:838
  [Type: 
"type": "unallocated", 
"text": "v
,"tooltip": "FIXED_SLOT: 
,"tooltip": "FIXED_REGISTER: 
,"tooltip": "FIXED_FP_REGISTER: 
,"tooltip": "MUST_HAVE_REGISTER"
,"tooltip": "MUST_HAVE_SLOT"
,"tooltip": "SAME_AS_FIRST_INPUT"
,"tooltip": "REGISTER_OR_SLOT"
,"tooltip": "REGISTER_OR_SLOT_OR_CONSTANT"
"type": "constant", 
"tooltip": "
"type": "immediate", 
"text": "#
"text": "imm:
"type": 
"explicit", 
"allocated", 
"text": "
stack:
fp_stack:
"id": 
"opcode": "
"flags": "
"gaps": [
"outputs": [
"inputs": [
"temps": [
"deferred": 
"loop_header": 
"loop_end": 
"predecessors": [
"successors": [
"phis": [
{"output" : 
"operands": [
"instructions": [
"blocks": [
{ "inliningId" : 
, "sourceId" : 
, "inliningPosition" : 
{"id":
,"label":"
,"title":"
,"live": 
,"properties":"
,"rankInputs":[0,
,"rankWithInput":[
,"rankInputs":[
,"rankInputs":[0]
, "sourcePosition" : 
, "origin" : 
,"opcode":"
,"control":
,"opinfo":"
 eff 
 ctrl in, 
 ctrl out"
,"type":"
only_inputs_
frame-state
effect
control
{"source":
,"target":
,"index":
begin_
end_
  + Block B
 (pred:
, loop until B
, in loop B
Goto
     
!base::bits::UnsignedAddOverflow32(id, 1, &next_node_id_)
placeholder
JSCallReducer
JSContextSpecialization
ReduceNewArray
!instance_map.IsInobjectSlackTrackingInProgress()
JSCreateLowering
JSGenericLowering
PropertyCellData::Serialize
FunctionTemplateInfoData::Serialize
CallHandlerInfoData::Serialize
JSObjectData::SerializeObjectCreateMap
GetOwnConstantElement
: missing 
knowledge about index 
 on 
JSTypedArrayData::Serialize
ContextData::SerializeContextChain
ContextData::SerializeSlot
Serializing script context slot 
index >= 0 && index < context->length()
GetCharAsString
AllocationSiteData::SerializeBoilerplate
IsFastLiteral_
broker->SerializingAllowed()
JSFunctionData::Serialize
MapData::SerializeElementsKindGeneralizations
FeedbackVectorData::SerializeSlots
Copied 
 slots
JSBoundFunctionData::Serialize
FixedArrayData::SerializeContents
array->length() == length()
contents_.empty()
FixedDoubleArrayData::SerializeContents
self->length() == length()
JSArrayData::Serialize
GetOwnElement
serialized_for_compilation_.insert(feedback.object()).second
Set function 
 as serialized for compilation
serialized_
(cell) != nullptr
ModuleData::Serialize
 imports
 exports
CellData::Serialize
(name) != nullptr
GetPropertyCell
knowledge about global property 
kind() == kSerializedHeapObject
IsJSArray()
IsJSBoundFunction()
IsJSDataView()
IsJSFunction()
IsJSGlobalProxy()
IsJSRegExp()
IsJSTypedArray()
IsNativeContext()
IsContext()
IsScopeInfo()
IsScriptContextTable()
IsBytecodeArray()
IsFixedArray()
IsFixedDoubleArray()
IsInternalizedString()
IsString()
IsSymbol()
IsAllocationSite()
IsCallHandlerInfo()
IsCell()
IsCode()
IsDescriptorArray()
IsFeedbackVector()
IsFixedArrayBase()
IsFunctionTemplateInfo()
IsHeapNumber()
IsJSObject()
IsMap()
IsModule()
IsMutableHeapNumber()
IsName()
IsPropertyCell()
IsSharedFunctionInfo()
static_cast<size_t>(property_index) < inobject_fields_.size()
JSObjectData::SerializeElements
MapData::SerializeConstructor
MapData::SerializeBackPointer
MapData::SerializePrototype
MapData::SerializeOwnDescriptors
*descriptors == map->instance_descriptors()
number_of_own == contents.size()
Handle<Map>::cast(d.field_owner->object())->NumberOfOwnDescriptors() <= number_of_own
 descriptors into 
 total)
JSObjectData::SerializeRecursive
depth > 0
!boilerplate->map()->is_deprecated()
boilerplate->HasDoubleElements()
elements_object->Size() <= kMaxRegularHeapObjectSize
boilerplate->HasFastProperties() && boilerplate->property_array()->length() == 0
inobject_fields_.size() == 0u
 in-object fields
JSRegExpData::SerializeAsRegExpBoilerplate
Constructing heap broker
mode_ == kDisabled
Starting serialization
mode_ == kSerializing
Stopping serialization
mode_ == kSerialized
Retiring
JSHeapBroker::SerializeShareableObjects (building snapshot)
IsShareable(p->value->object(), isolate())
mode() == kSerializing
array_and_object_prototypes_.empty()
!array_and_object_prototypes_.empty()
JSHeapBroker::SerializeStandardObjects
Finished serializing standard objects
SerializingAllowed()
(*data_storage) != nullptr
broker()->mode() == JSHeapBroker::kSerializing
MapData::SerializeForElementLoad
MapData::SerializeForElementStore
index.is_inobject()
data()->AsJSObject()->cow_or_empty_elements_tenured()
!data()->AsFixedDoubleArray()->Get(i).is_hole_nan()
IsPrimitiveMap()
NumberOfOwnDescriptors() > 0
map.IsPrimitiveMap()
'elements' on data 
Object is not known to the heap broker
i < static_cast<int>(contents_.size())
(contents_[i]) != nullptr
data_->kind() != kSerializedHeapObject
data_->kind() != kUnserializedHeapObject
NoChangeBecauseOfMissingData
data in function 
 at line 
NativeContextData::Serialize
broker()->mode() != JSHeapBroker::kDisabled
IsScriptContextSlot()
processed.receiver_maps.size() < std::numeric_limits<size_t>::max() - processed.transitions.size()
!done()
insertion.second
it != feedback_.end()
feedback->kind() == ProcessedFeedback::kElementAccess
feedback->kind() == ProcessedFeedback::kGlobalAccess
!result->receiver_maps.empty()
!contents.equals( ObjectRef(this, isolate()->factory()->the_hole_value()))
feedback_value->IsPropertyCell()
Running 
Creating data 
 for handle 
(broker->isolate()->handle_scope_data()->canonical_scope) != nullptr
serialized_context_chain_
search != slots_.end()
Compiler zone
serialized_object_create_map_
serialized_elements_kind_generalizations_
IsDouble()
IsObject()
serialized_own_descriptors_
serialized_prototype_
serialized_constructor_
serialized_backpointer_
InstanceTypeChecker::IsJSObject(instance_type())
JSHeapCopyReducer
Not considering call site #%d:%s, because polymorphic inlining is disabled
Missing bytecode array trying to inline function 
Missing bytecode array trying to inline function with SFI 
Not considering call site #%d:%s, because of recursive inlining
Inlining small function(s) at call site #%d:%s
Candidates for inlining (size=
, frequency: 
  - size:%d, name: %s
JSInliningHeuristic
Inlinee contains %d calls without local exception handler; linking to surrounding exception handler
function->has_feedback_vector()
Not inlining %s into %s because constructor is not constructable.
Not inlining %s into %s because callee is a class constructor.
Not inlining %s into %s because call has exceeded the maximum depth for function inlining
Try block surrounds #%d:%s and --no-inline-into-try active, so not inlining %s into %s.
is_compiled_scope.is_compiled()
Inlining %s into %s%s
 (inside try-block)
Missed opportunity to inline a function (
JSIntrinsicLowering
ReduceJSGetSuperConstructor
data for map 
descriptor_index != DescriptorArray::kNotFound
processed->IsPropertyCell()
ReduceJSLoadNamed
data for function 
ReduceElementAccess
data for typed array 
JSNativeContextSpecialization
UseEnumCacheKeysAndIndices
UseEnumCacheKeys
Generic
JSStoreDataPropertyInLiteral
JSStoreInArrayLiteral
JSCallForwardVarargs
JSCall
JSCallWithArrayLike
JSCallWithSpread
JSCallRuntime
JSConstructForwardVarargs
JSConstruct
JSConstructWithArrayLike
JSConstructWithSpread
JSLoadNamed
JSLoadProperty
JSHasProperty
JSInstanceOf
JSForInNext
JSForInPrepare
JSGeneratorStore
JSGeneratorRestoreRegister
JSStoreNamed
JSStoreProperty
JSStoreNamedOwn
JSDeleteProperty
JSCreateGeneratorObject
JSLoadGlobal
JSStoreGlobal
JSLoadContext
JSStoreContext
JSLoadModule
JSStoreModule
JSCreateArguments
JSCreateArray
JSCreateArrayIterator
JSCreateAsyncFunctionObject
JSCreateCollectionIterator
JSCreateBoundFunction
JSCreateClosure
JSCreateLiteralArray
JSCreateEmptyLiteralArray
JSCreateArrayFromIterable
JSCreateLiteralObject
JSCloneObject
JSCreateEmptyLiteralObject
JSCreateLiteralRegExp
JSCreateFunctionContext
JSCreateCatchContext
JSCreateWithContext
JSCreateBlockContext
IterationKind::kKeys
IterationKind::kValues
IterationKind::kEntries
CollectionKind::kMap
CollectionKind::kSet
JSBitwiseOr
JSBitwiseXor
JSBitwiseAnd
JSShiftLeft
JSShiftRight
JSShiftRightLogical
JSSubtract
JSMultiply
JSDivide
JSModulus
JSExponentiate
JSBitwiseNot
JSDecrement
JSIncrement
JSNegate
JSToLength
JSToName
JSToNumber
JSToNumberConvertBigInt
JSToNumeric
JSToObject
JSToString
JSCreate
JSCreateIterResultObject
JSCreateStringIterator
JSCreateKeyValueArray
JSCreatePromise
JSCreateTypedArray
JSCreateObject
JSObjectIsArray
JSHasInPrototypeChain
JSOrdinaryHasInstance
JSForInEnumerate
JSAsyncFunctionEnter
JSAsyncFunctionReject
JSAsyncFunctionResolve
JSLoadMessage
JSStoreMessage
JSGeneratorRestoreContinuation
JSGeneratorRestoreContext
JSGeneratorRestoreInputOrDebugPos
JSStackCheck
JSDebugger
JSFulfillPromise
JSPerformPromiseThen
JSPromiseResolve
JSRejectPromise
JSResolvePromise
JSGetSuperConstructor
JSParseInt
JSRegExpTest
JSAdd
JSEqual
JSStrictEqual
JSLessThan
JSGreaterThan
JSLessThanOrEqual
JSGreaterThanOrEqual
!(collection_kind == CollectionKind::kSet && iteration_kind == IterationKind::kKeys)
ReduceJSToNumberInput
JSTypedLowering
Addr
WasmFunction
WasmImportWrapper
BuiltinPointer
js-call
incoming_->IsJSFunctionCall()
 visit #%d:%s
  state[%i]: #%d:%s
  no state[%i]: #%d:%s
    #%d:%s @ #%d:%s -> #%d:%s
    #%d:%s -> #%d:%s
    #
     - 
   maps:
   elements:
   field %zu:
LoadElimination
ni.node->opcode() != IrOpcode::kReturn
 #%d:%s
Loop %d headed at #%d
Loop depth = %d 
 H#%d
 B#%d
 E#%d
Cannot peel loop %i. Loop exit without explicit mark: Node %i (%s) is inside loop, but its use %i (%s) is outside.
Peeling loop with header: 
copy nodes
New upper bound for 
 (loop 
New lower bound for 
Loop variables for loop %i:
index <= static_cast<size_t>(1)
MachineRepresentation::kBit == inferrer_->GetRepresentation(node->InputAt(0))
MachineRepresentation::kTagged == inferrer_->GetRepresentation(node->InputAt(0))
Node #
 in the machine graph is not being checked.
 has wrong type for:
 * input 
) has a 
 representation (expected: 
 is untyped.
 uses node #
 which doesn't have a kWord64 representation.
 which doesn't have a 
 representation.
 which doesn't have a tagged representation.
 which doesn't have a kFloat64 representation.
 which doesn't have a tagged or pointer representation.
 which doesn't have an int32-compatible representation.
 which doesn't have a kFloat32 representation.
MachineOperatorReducer
Extract lane
Replace lane
Shift left
Arithmetic shift right
Shift right
Shuffle
NoWriteBarrier
MapWriteBarrier
PointerWriteBarrier
EphemeronKeyWriteBarrier
FullWriteBarrier
Word32And
Word32Or
Word32Xor
Word32Shl
Word32Shr
Word32Sar
Word32Ror
Word32Equal
Int32Add
Int32Sub
Int32Mul
Int32MulHigh
Int32Div
Int32Mod
Int32LessThan
Int32LessThanOrEqual
Uint32Div
Uint32LessThan
Uint32LessThanOrEqual
Uint32Mod
Uint32MulHigh
Word64And
Word64Or
Word64Xor
Word64Shl
Word64Shr
Word64Sar
Word64Ror
Word64Equal
Int64Add
Int64Sub
Int64Mul
Int64Div
Int64Mod
Int64LessThan
Int64LessThanOrEqual
Uint64Div
Uint64Mod
Uint64LessThan
Uint64LessThanOrEqual
Word32Clz
Word64Clz
Word32ReverseBytes
Word64ReverseBytes
BitcastWordToTaggedSigned
TruncateFloat64ToWord32
ChangeFloat32ToFloat64
ChangeFloat64ToInt32
ChangeFloat64ToInt64
ChangeFloat64ToUint32
ChangeFloat64ToUint64
TruncateFloat64ToInt64
TruncateFloat64ToUint32
TruncateFloat32ToInt32
TruncateFloat32ToUint32
TryTruncateFloat32ToInt64
TryTruncateFloat64ToInt64
TryTruncateFloat32ToUint64
TryTruncateFloat64ToUint64
ChangeInt32ToFloat64
ChangeInt64ToFloat64
Float64SilenceNaN
RoundFloat64ToInt32
RoundInt32ToFloat32
RoundInt64ToFloat32
RoundInt64ToFloat64
RoundUint32ToFloat32
RoundUint64ToFloat32
RoundUint64ToFloat64
ChangeInt32ToInt64
ChangeUint32ToFloat64
ChangeUint32ToUint64
ChangeTaggedToCompressed
ChangeTaggedPointerToCompressedPointer
ChangeTaggedSignedToCompressedSigned
ChangeCompressedToTagged
ChangeCompressedPointerToTaggedPointer
ChangeCompressedSignedToTaggedSigned
TruncateFloat64ToFloat32
TruncateInt64ToInt32
BitcastFloat32ToInt32
BitcastFloat64ToInt64
BitcastInt32ToFloat32
BitcastInt64ToFloat64
SignExtendWord8ToInt32
SignExtendWord16ToInt32
SignExtendWord8ToInt64
SignExtendWord16ToInt64
SignExtendWord32ToInt64
Float32Abs
Float32Add
Float32Sub
Float32Mul
Float32Div
Float32Neg
Float32Sqrt
Float32Max
Float32Min
Float64Abs
Float64Acos
Float64Acosh
Float64Asin
Float64Asinh
Float64Atan
Float64Atan2
Float64Atanh
Float64Cbrt
Float64Cos
Float64Cosh
Float64Exp
Float64Expm1
Float64Log
Float64Log1p
Float64Log2
Float64Log10
Float64Max
Float64Min
Float64Neg
Float64Add
Float64Sub
Float64Mul
Float64Div
Float64Mod
Float64Pow
Float64Sin
Float64Sinh
Float64Sqrt
Float64Tan
Float64Tanh
Float32Equal
Float32LessThan
Float32LessThanOrEqual
Float64Equal
Float64LessThan
Float64LessThanOrEqual
Float64ExtractLowWord32
Float64ExtractHighWord32
Float64InsertLowWord32
Float64InsertHighWord32
LoadStackPointer
LoadFramePointer
LoadParentFramePointer
Int32PairAdd
Int32PairSub
Int32PairMul
Word32PairShl
Word32PairShr
Word32PairSar
F32x4Splat
F32x4SConvertI32x4
F32x4UConvertI32x4
F32x4Abs
F32x4Neg
F32x4RecipApprox
F32x4RecipSqrtApprox
F32x4Add
F32x4AddHoriz
F32x4Sub
F32x4Mul
F32x4Min
F32x4Max
F32x4Eq
F32x4Ne
F32x4Lt
F32x4Le
I32x4Splat
I32x4SConvertF32x4
I32x4SConvertI16x8Low
I32x4SConvertI16x8High
I32x4Neg
I32x4Add
I32x4AddHoriz
I32x4Sub
I32x4Mul
I32x4MinS
I32x4MaxS
I32x4Eq
I32x4Ne
I32x4GtS
I32x4GeS
I32x4UConvertF32x4
I32x4UConvertI16x8Low
I32x4UConvertI16x8High
I32x4MinU
I32x4MaxU
I32x4GtU
I32x4GeU
I16x8Splat
I16x8SConvertI8x16Low
I16x8SConvertI8x16High
I16x8Neg
I16x8SConvertI32x4
I16x8Add
I16x8AddSaturateS
I16x8AddHoriz
I16x8Sub
I16x8SubSaturateS
I16x8Mul
I16x8MinS
I16x8MaxS
I16x8Eq
I16x8Ne
I16x8GtS
I16x8GeS
I16x8UConvertI8x16Low
I16x8UConvertI8x16High
I16x8UConvertI32x4
I16x8AddSaturateU
I16x8SubSaturateU
I16x8MinU
I16x8MaxU
I16x8GtU
I16x8GeU
I8x16Splat
I8x16Neg
I8x16SConvertI16x8
I8x16Add
I8x16AddSaturateS
I8x16Sub
I8x16SubSaturateS
I8x16Mul
I8x16MinS
I8x16MaxS
I8x16Eq
I8x16Ne
I8x16GtS
I8x16GeS
I8x16UConvertI16x8
I8x16AddSaturateU
I8x16SubSaturateU
I8x16MinU
I8x16MaxU
I8x16GtU
I8x16GeU
S128Load
S128Store
S128Zero
S128And
S128Or
S128Xor
S128Not
S128Select
S1x4AnyTrue
S1x4AllTrue
S1x8AnyTrue
S1x8AllTrue
S1x16AnyTrue
S1x16AllTrue
Word32Ctz
Word64Ctz
Word32ReverseBits
Word64ReverseBits
Int32AbsWithOverflow
Int64AbsWithOverflow
Word32Popcnt
Word64Popcnt
Float32RoundDown
Float64RoundDown
Float32RoundUp
Float64RoundUp
Float32RoundTruncate
Float64RoundTruncate
Float64RoundTiesAway
Float32RoundTiesEven
Float64RoundTiesEven
Int32AddWithOverflow
Int32SubWithOverflow
Int32MulWithOverflow
Int64AddWithOverflow
Int64SubWithOverflow
Load
PoisonedLoad
UnalignedLoad
ProtectedLoad
StackSlot
Store
UnalignedStore
Word32AtomicLoad
Word64AtomicLoad
Word32AtomicStore
Word64AtomicStore
Word32AtomicAdd
Word32AtomicSub
Word32AtomicAnd
Word32AtomicOr
Word32AtomicXor
Word32AtomicExchange
Word64AtomicAdd
Word64AtomicSub
Word64AtomicAnd
Word64AtomicOr
Word64AtomicXor
Word64AtomicExchange
Word32AtomicCompareExchange
Word64AtomicCompareExchange
Word32AtomicPairLoad
Word32AtomicPairStore
Word32AtomicPair##op
Word32AtomicPairCompareExchange
BitcastWordToTagged
BitcastTaggedToWord
BitcastMaybeObjectToWord
TaggedPoisonOnSpeculation
Word32PoisonOnSpeculation
Word64PoisonOnSpeculation
DebugAbort
DebugBreak
UnsafePointerAdd
Comment
"nodeId" : 
"bytecodePosition" : 
, "reducer" : "
, "phase" : "
ProtectedStore
Word32AtomicPairAdd
Word32AtomicPairSub
Word32AtomicPairAnd
Word32AtomicPairOr
Word32AtomicPairXor
Word32AtomicPairExchange
F32x4ExtractLane
F32x4ReplaceLane
F32x4Gt
F32x4Ge
I32x4ExtractLane
I32x4ReplaceLane
I32x4Shl
I32x4ShrS
I32x4LtS
I32x4LeS
I32x4ShrU
I32x4LtU
I32x4LeU
I16x8ExtractLane
I16x8ReplaceLane
I16x8Shl
I16x8ShrS
I16x8LtS
I16x8LeS
I16x8ShrU
I16x8LtU
I16x8LeU
I8x16ExtractLane
I8x16ReplaceLane
I8x16Shl
I8x16ShrS
I8x16LtS
I8x16LeS
I8x16ShrU
I8x16LtU
I8x16LeU
S8x16Shuffle
UnknownOpcode
Commutative
Associative
Idempotent
NoRead
NoWrite
NoThrow
NoDeopt
val <= std::min(static_cast<size_t>(std::numeric_limits<N>::max()), static_cast<size_t>(kMaxInt))
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:893
v8.optimizingCompile.start
v8.optimizingCompile.end
compilationInfo
v8.optimizingCompile.prepare
v8.optimizingCompile.execute
v8.optimizingCompile.finalize
, "nodeIdToInstructionRange": {
": [
, "blockIdtoInstructionRange": {
V8.TFGraphCreation
---------------------------------------------------
Begin compiling method 
 using TurboFan
V8.TFLowering
V8.TFBlockBuilding
V8.TFStubCodegen
Begin compiling 
{"function" : 
"phases":[
V8.TFMachineCode
V8.WasmStubCodegen
-- wasm stub 
 graph -- 
{"function":"
", "source":"",
"phases":[
V8.WasmNativeStubMachineCode
pipeline.SelectInstructions(&linkage)
{"name":"disassembly","type":"disassembly","data":"
Finished compiling method 
V8.WasmMachineCode
V8.TFTestCodegen
V8.WasmOptimization
V8.WasmFullOptimization
V8.WasmBaseOptimization
schedule
--------------------------------------------------
--- Verifying 
 generated by TurboFan
--- End of 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:2631
CodeGen
"NodeOrigins" : 
V8.TFRegisterAllocation
hash_code == jump_opt->hash_code()
, "instructionOffsetToPCOffset": {
V8.TFCodeGeneration
{"name":"code generation"
, "type":"instructions"
, "blockIdToOffset": {
{"name":"disassembly","type":"disassembly"
"data":"
"nodePositions":
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:2902
before register allocation
!data->register_allocation_data()->ExistsUseWithoutDefinition()
data->register_allocation_data() ->RangesDefinedInDeferredStayInDeferred()
PreAllocation
PostSplinter
Immediately after CommitAssignmentPhase.
after register allocation
End of regalloc pipeline.
disabled-by-default-v8.turbofan
V8.TFInitializing
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:110
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:112
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:114
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:116
V8.TFInitPipelineData
V8.TFBytecodeGraphBuilder
V8.TFInlining
V8.TFEarlyTrimming
V8.TFTyper
V8.TFTypedLowering
V8.TFLoopPeeling
V8.TFLoopExitElimination
V8.TFLoadElimination
V8.TFEscapeAnalysis
V8.TFSimplifiedLowering
V8.TFGenericLowering
V8.TFEarlyOptimization
V8.TFEffectLinearization
V8.TFStoreStoreElimination
V8.TFControlFlowOptimization
V8.TFLateOptimization
V8.TFMemoryOptimization
V8.TFMachineOperatorOptimization
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:181
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:187
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:189
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:191
V8.CSAOptimization
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:154
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:162
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:164
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:166
V8.WasmInitializing
", "source":"
"sourceLineToBytecodePosition" : [
"phases":[
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:776
unnamed
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:214
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:215
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:218
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/pipeline.cc:220
V8.TFLateGraphTrimming
{"name":"
","type":"schedule"
,"data":"
-- Schedule --------------------------------------
--- Raw source ---
--- Optimized code ---
optimization_id = 
--- Code ---
source_position = 
--- FUNCTION SOURCE (
) id{
} start{
} ---
--- END ---
INLINE (
} AS 
 AT 
","type":"sequence",
----- Instruction sequence 
 -----
","type":"graph","data":
-- Graph after 
 -- 
V8.TFSerializeStandardObjects
V8.TFSerializeBytecode
V8.TFSerializeMetadata
JSInliner
effect linearization schedule
V8.TFScheduling
V8.TFSelectInstructions
","type":"instructions"
V8.TFFrameElision
V8.TFJumpThreading
V8.TFAssembleCode
V8.TFFinalizeCode
V8.TFMeetRegisterConstraints
V8.TFResolvePhis
V8.TFBuildLiveRanges
V8.TFBuildLiveRangeBundles
V8.TFSplinterLiveRanges
V8.TFAllocateGeneralRegisters
V8.TFAllocateFPRegisters
V8.TFMergeSplinteredRanges
V8.TFDecideSpillingMode
V8.TFAssignSpillSlots
V8.TFCommitAssignment
V8.TFPopulatePointerMaps
V8.TFConnectRanges
V8.TFResolveControlFlow
V8.TFOptimizeMoves
V8.TFLocateSpillSlots
--- RAW SCHEDULE -------------------------------------------
--- EDGE SPLIT AND PROPAGATED DEFERRED SCHEDULE ------------
--- SCHEDULE BEFORE GRAPH CREATION -------------------------
RedundancyElimination
no-value-use
truncate-to-bool
truncate-to-word32
truncate-to-float64 (identify zeros)
truncate-to-float64 (distinguish zeros)
no-truncation (but identify zeros)
no-truncation (but distinguish zeros)
output_type.Is(Type::Boolean())
use_info.type_check() != TypeCheckKind::kNone
Truncation::Any(kIdentifyZeros) .IsLessGeneralThan(use_info.truncation())
RepresentationChangerError: node #%d:%s of %s cannot be changed to %s
goto
tailcall
Planning #
 for future add to B
Adding #
 to B
--- BLOCK id:
--- BLOCK B
 <- 
 ---
  Use count of #%d:%s (used by #%d:%s)++ = %d
  Use count of #%d:%s (used by #%d:%s)-- = %d
    newly eligible #%d:%s
--- CREATING CFG -------------------------------------------
--- COMPUTING SPECIAL RPO ----------------------------------
Block id:%d's idom is id:%d, depth = %d
--- IMMEDIATE BLOCK DOMINATORS -----------------------------
--- PREPARE USES -------------------------------------------
--- SCHEDULE EARLY -----------------------------------------
roots: 
#%d:%s 
--- SCHEDULE LATE ------------------------------------------
--- SEAL FINAL SCHEDULE ------------------------------------
--- FUSE FLOATING CONTROL ----------------------------------
Schedule before control flow fusion:
propagation roots: 
Schedule after control flow fusion:
Move planned nodes from id:%d to id:%d
Create block id:%d for #%d:%s
Connect #%d:%s, id:%d -> end
Connect #%d:%s, id:%d -> id:%d
kBlockUnvisited1 == schedule_->start()->loop_number()
kBlockUnvisited1 == schedule_->start()->rpo_number()
0 == static_cast<int>(schedule_->rpo_order()->size())
id:%d is a loop header, increment loop depth to %d
id:%d is not in a loop (depth == %d)
id:%d has loop header id:%d, (depth == %d)
Scheduling fixed position node #%d:%s
Fixing #%d:%s minimum_block = id:%d, dominator_depth = %d
Propagating #%d:%s minimum_block = id:%d, dominator_depth = %d
Scheduling #%d:%s
Schedule late of #%d:%s is id:%d at loop depth %d, minimum = id:%d
  hoisting #%d:%s to block id:%d
  inspecting uses of coupled #%d:%s
  input@%d into a fixed phi #%d:%s
  input@%d into a fixed merge #%d:%s
  must dominate use #%d:%s in id:%d
  not splitting #%d:%s, it is used in id:%d
  not splitting #%d:%s, its common dominator id:%d is perfect
  pushing #%d:%s down to id:%d
  cloning #%d:%s for id:%d
clone #%d:%s -> #%d
IrOpcode::kFinishRegion == region_end->opcode()
Found SESE at #%d:%s
SelectLowering
closure->has_feedback_vector()
Constants (
Maps (
Blueprints (
parameter_count() == other->parameter_count()
register_count() == other->register_count()
Function 
Parameter count: 
Register count: 
Hints (
Slot 
Return value:
===========================================
Will run child serializer with environment:
mode != AccessMode::kStoreInLiteral
nexus.GetName().is_null()
--{Simplified lowering phase}--
 visit #%d: %s
simplified lowering
--{Propagation phase}--
 visit #%d: %s (trunc: %s)
--{Type propagation phase}--
  ==> output 
  [Static type: 
, Feedback type: 
Representation inference: unsupported opcode %i (%s), node #%i
killing #%d:%s
  initial #%i: 
   queue #%i?: 
   added: 
 inqueue: 
  change: #%d:%s(@%d #%d:%s) 
defer replacement #%d:%s with #%d:%s
SimplifiedOperatorReducer
untagged base
tagged base
Safe
Unsafe
allow-return-hole
never-return-hole
check-for-minus-zero
dont-check-for-minus-zero
DoubleElements
SmiOrObjectElements
fast-transition from 
slow-transition from 
CheckBounds
CheckNumber
CheckSmi
CheckString
CheckedInt32ToTaggedSigned
CheckedInt64ToInt32
CheckedInt64ToTaggedSigned
CheckedTaggedSignedToInt32
CheckedTaggedToTaggedPointer
CheckedTaggedToTaggedSigned
CheckedCompressedToTaggedPointer
CheckedCompressedToTaggedSigned
CheckedTaggedToCompressedPointer
CheckedTaggedToCompressedSigned
CheckedUint32ToInt32
CheckedUint32ToTaggedSigned
CheckedUint64Bounds
CheckedUint64ToInt32
CheckedUint64ToTaggedSigned
RuntimeAbort
CheckIf
CheckedFloat64ToInt32
CheckedFloat64ToInt64
CheckedTaggedToInt32
CheckedTaggedToInt64
CheckedTaggedToFloat64
CheckedTruncateTaggedToWord32
CheckMaps
MapGuard
CompareMaps
CheckFloat64Hole
SpeculativeToNumber
MaybeGrowFastElements
ArgumentsLength
(CHECKED_WITH_FEEDBACK_OP_LIST(MAKE_OR) false)
deopt
op->opcode() == IrOpcode::kCheckedUint32Bounds
op->opcode() == IrOpcode::kCheckIf
NewDoubleElements
NewSmiOrObjectElements
Allocate
AllocateRaw
LoadField
StoreField
LoadElement
StoreElement
LoadTypedElement
StoreTypedElement
LoadDataViewElement
StoreDataViewElement
TransitionAndStoreElement
StoreSignedSmallElement
TransitionAndStoreNumberElement
TransitionAndStoreNonNumberElement
Young
ReadOnly
BooleanNot
NumberEqual
NumberLessThan
NumberLessThanOrEqual
NumberAdd
NumberSubtract
NumberMultiply
NumberDivide
NumberModulus
NumberBitwiseOr
NumberBitwiseXor
NumberBitwiseAnd
NumberShiftLeft
NumberShiftRight
NumberShiftRightLogical
NumberImul
NumberAbs
NumberClz32
NumberCeil
NumberFloor
NumberFround
NumberAcos
NumberAcosh
NumberAsin
NumberAsinh
NumberAtan
NumberAtan2
NumberAtanh
NumberCbrt
NumberCos
NumberCosh
NumberExp
NumberExpm1
NumberLog
NumberLog1p
NumberLog10
NumberLog2
NumberMax
NumberMin
NumberPow
NumberRound
NumberSign
NumberSin
NumberSinh
NumberSqrt
NumberTan
NumberTanh
NumberTrunc
NumberToBoolean
NumberToInt32
NumberToUint32
NumberToUint8Clamped
NumberSilenceNaN
StringConcat
StringFromSingleCharCode
StringLength
PlainPrimitiveToNumber
PlainPrimitiveToWord32
PlainPrimitiveToFloat64
ChangeTaggedSignedToInt32
ChangeTaggedSignedToInt64
ChangeTaggedToInt32
ChangeTaggedToInt64
ChangeTaggedToUint32
ChangeTaggedToFloat64
ChangeTaggedToTaggedSigned
ChangeCompressedToTaggedSigned
ChangeTaggedToCompressedSigned
ChangeFloat64ToTaggedPointer
ChangeInt31ToTaggedSigned
ChangeInt32ToTagged
ChangeInt64ToTagged
ChangeUint32ToTagged
ChangeUint64ToTagged
ChangeTaggedToBit
ChangeBitToTagged
TruncateTaggedToBit
TruncateTaggedPointerToBit
TruncateTaggedToWord32
TruncateTaggedToFloat64
ObjectIsArrayBufferView
ObjectIsBigInt
ObjectIsCallable
ObjectIsConstructor
ObjectIsDetectableCallable
ObjectIsMinusZero
NumberIsMinusZero
ObjectIsNaN
ObjectIsNonCallable
ObjectIsNumber
ObjectIsReceiver
ObjectIsSmi
ObjectIsString
ObjectIsSymbol
ObjectIsUndetectable
NumberIsFloat64Hole
ObjectIsFiniteNumber
ObjectIsSafeInteger
ObjectIsInteger
ConvertTaggedHoleToUndefined
NumberSameValue
ReferenceEqual
NewConsOneByteString
NewConsTwoByteString
NewConsString
PoisonIndex
CheckEqualsInternalizedString
CheckEqualsSymbol
CheckHeapObject
CheckNonEmptyString
CheckNonEmptyOneByteString
CheckNonEmptyTwoByteString
CheckInternalizedString
CheckNotTaggedHole
CheckReceiver
CheckReceiverOrNullOrUndefined
CheckSymbol
CheckedInt32Add
CheckedInt32Div
CheckedInt32Mod
CheckedInt32Sub
CheckedUint32Div
CheckedUint32Mod
StringCodePointAt
UTF16
UTF32
StringFromSingleCodePoint
FindOrderedHashMapEntryForInt32Key
ArgumentsFrame
ChangeFloat64ToTagged
CheckedInt32Mul
ConvertReceiver
NULL_OR_UNDEFINED
NOT_NULL_OR_UNDEFINED
EnsureWritableFastElements
LoadFieldByIndex
LoadStackArgument
LoadMessage
StoreMessage
SpeculativeNumberAdd
SpeculativeNumberSubtract
SpeculativeNumberMultiply
SpeculativeNumberDivide
SpeculativeNumberModulus
SpeculativeNumberBitwiseAnd
SpeculativeNumberBitwiseOr
SpeculativeNumberBitwiseXor
SpeculativeNumberShiftLeft
SpeculativeNumberShiftRight
SpeculativeNumberShiftRightLogical
SpeculativeSafeIntegerAdd
SpeculativeSafeIntegerSubtract
SpeculativeNumberEqual
SpeculativeNumberLessThan
SpeculativeNumberLessThanOrEqual
CheckedUint32Bounds
rest length
not rest length
fast-map
 double-map
double-map
, fast-map
kMaxInlineDepth > current_depth_
other.done()
StoreStoreElimination::Run: Eliminating node #%d:%s
RedundantStoreFinder: - Revisiting: #%d:%s
RedundantStoreFinder: + No change: stabilized. Not visiting effect inputs.
RedundantStoreFinder:     marking #%d:%s for revisit
RedundantStoreFinder:   #%d is StoreField[+%d,%s](#%d), unobservable
RedundantStoreFinder:   #%d is StoreField[+%d,%s](#%d), repeated in future but too big to optimize away
RedundantStoreFinder:   #%d is StoreField[+%d,%s](#%d), observable, recording in set
RedundantStoreFinder:   #%d is StoreField[+%d,%s](#%d), observable but too small to record
RedundantStoreFinder:   #%d is LoadField[+%d,%s](#%d), removing all offsets [+%d] from set
RedundantStoreFinder:   #%d:%s can observe nothing, set stays unchanged
RedundantStoreFinder:   #%d:%s might observe anything, recording empty set
0 <= offset
../../deps/v8/src/compiler/type-cache.h:27
TypeNarrowingReducer
TypedOptimization
Typer
Previous UpdateType run (inputs first):
untyped
Current (output) type:  
This UpdateType run (inputs first):
UpdateType error for node %s
Loop (
) variable bounds in 
addition
subtraction
 for phi 
Negative31
Null
Undefined
Unsigned30
EmptyString
NonEmptyInternalizedOneByteString
NonEmptyInternalizedTwoByteString
OtherCallable
OtherObject
OtherUndetectable
CallableProxy
OtherProxy
BoundFunction
OtherInternal
ExternalPointer
Signed31
Signed32OrMinusZero
Signed32OrMinusZeroOrNaN
Negative32
Unsigned31
Unsigned32
Unsigned32OrMinusZero
Unsigned32OrMinusZeroOrNaN
Integral32
Integral32OrMinusZero
Integral32OrMinusZeroOrNaN
PlainNumber
OrderedNumber
MinusZeroOrNaN
Numeric
InternalizedOneByteString
OneByteString
NonEmptyOneByteString
NonEmptyTwoByteString
NonEmptyString
UniqueName
InternalizedStringOrNull
BooleanOrNumber
BooleanOrNullOrNumber
BooleanOrNullOrUndefined
Oddball
NullOrNumber
NullOrUndefined
Undetectable
NumberOrHole
NumericOrString
NumberOrUndefined
NumberOrUndefinedOrNullOrBoolean
PlainPrimitive
NonBigIntPrimitive
Primitive
OtherUndetectableOrUndefined
ArrayOrOtherObject
ArrayOrProxy
DetectableCallable
Callable
NonCallable
NonCallableOrNull
DetectableObject
DetectableReceiver
DetectableReceiverOrNull
ReceiverOrUndefined
SymbolOrReceiver
StringOrReceiver
Unique
Internal
NonInternal
NonBigInt
NonNumber
OtherUnsigned31
OtherUnsigned32
OtherSigned32
OtherNumber
OtherOneByteString
OtherTwoByteString
HeapConstant(
OtherNumberConstant(
Range(
IsOtherNumberConstant(value)
ValueNumberingReducer
input_count == node->InputCount()
frame_state->opcode() == IrOpcode::kFrameState || (node->opcode() == IrOpcode::kFrameState && frame_state->opcode() == IrOpcode::kStart)
node->opcode() == IrOpcode::kParameter || node->opcode() == IrOpcode::kProjection || value->op()->ValueOutputCount() <= 1
(discovered_if_success) == nullptr
(discovered_if_exception) == nullptr
#%d:%s should be followed by IfSuccess/IfException, but is only followed by single #%d:%s
#%d:%s if followed by IfSuccess/IfException, there should be no direct control uses, but direct use #%d:%s was found
0 == input_count
0 == node->op()->ValueOutputCount()
0 == node->op()->EffectOutputCount()
0 == node->op()->ControlOutputCount()
IrOpcode::IsGraphTerminator(input->opcode())
IrOpcode::kDeadValue == use->opcode()
all.IsLive(use) && (use->opcode() == IrOpcode::kIfTrue || use->opcode() == IrOpcode::kIfFalse)
1 == count_true
1 == count_false
IrOpcode::kBranch == control->opcode()
!input->op()->HasProperty(Operator::kNoThrow)
all.IsLive(use)
IfValueParametersOf(use->op()).value() != IfValueParametersOf(user->op()).value()
Switch #%d illegally used by #%d:%s
1 == count_default
node->op()->ControlOutputCount() == count_case + count_default
IrOpcode::kSwitch == NodeProperties::GetControlInput(node)->opcode()
control_count == input_count
has_terminate
IrOpcode::kEnd == use->opcode()
1 == control_count
1 == effect_count
2 == input_count
IrOpcode::kLoop == NodeProperties::GetControlInput(node)->opcode()
1 == input_count
IrOpcode::kStart == start->opcode()
-1 <= index
index + 1 < start->op()->ValueOutputCount()
input->op()->ValueOutputCount() > index
0 == effect_count
0 == control_count
3 == value_count
value_count == control->op()->ControlInputCount()
input_count == 1 + value_count
0 == value_count
effect_count == control->op()->ControlInputCount()
input_count == 1 + effect_count
non_phi_use_found
2 == control_count
IrOpcode::kLoop == loop->opcode()
IrOpcode::kLoopExit == loop_exit->opcode()
NodeProperties::GetType(val).Is(NodeProperties::GetType(node))
5 == value_count
6 == input_count
NodeProperties::GetValueInput(node, i)->opcode() == IrOpcode::kStateValues || NodeProperties::GetValueInput(node, i)->opcode() == IrOpcode::kTypedStateValues
PropertyAccessOf(node->op()).feedback().IsValid()
LoadGlobalParametersOf(node->op()).feedback().IsValid()
StoreGlobalParametersOf(node->op()).feedback().IsValid()
StoreNamedOwnParametersOf(node->op()).feedback().IsValid()
FeedbackParameterOf(node->op()).feedback().IsValid()
(graph->start()) != nullptr
(graph->end()) != nullptr
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/verifier.cc:1856
Node #%d:%s has duplicate projections #%d and #%d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/verifier.cc:1944
count >= rpo_order->size()
(*b) == schedule->GetBlockById((*b)->id())
predecessor->rpo_number() >= 0
predecessor == schedule->GetBlockById(predecessor->id())
successor->rpo_number() >= 0
successor == schedule->GetBlockById(successor->id())
start == rpo_order->at(0)
static_cast<int>(b) == block->rpo_number()
(dom) == nullptr
(dom) != nullptr
dom->rpo_number() < block->rpo_number()
block->rpo_number() >= 0
block == rpo_order->at(block->rpo_number())
marked[rpo_order->at(b)->id().ToSize()]
Block B%d is not dominated by B%d
Block B%d is not immediately dominated by B%d
control->opcode() == IrOpcode::kMerge || control->opcode() == IrOpcode::kLoop
(*b) == schedule->block(control)
block == schedule->block(control)
GraphError: node #
 does not produce 
 output used by node #
TypeError: node #
 type 
 is not 
 should never have a type
(input @
) type 
 must intersect 
Node #%d:%s in B%d is not dominated by input@%d #%d:%s
Node #%d:%s in B%d is not dominated by control input #%d:%s
Unsupported opcode 0x%x:%s
#%d:%s
CompileJSToWasmWrapper
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/wasm-compiler.cc:5702
WasmMathIntrinsic:F64Acos
WasmMathIntrinsic:F64Asin
WasmMathIntrinsic:F64Atan
WasmMathIntrinsic:F64Cos
WasmMathIntrinsic:F64Sin
WasmMathIntrinsic:F64Tan
WasmMathIntrinsic:F64Exp
WasmMathIntrinsic:F64Log
WasmMathIntrinsic:F64Atan2
WasmMathIntrinsic:F64Pow
WasmMathIntrinsic:F64Ceil
WasmMathIntrinsic:F64Floor
WasmMathIntrinsic:F64Sqrt
WasmMathIntrinsic:F64Min
WasmMathIntrinsic:F64Max
WasmMathIntrinsic:F64Abs
WasmMathIntrinsic:F32Min
WasmMathIntrinsic:F32Max
WasmMathIntrinsic:F32Abs
WasmMathIntrinsic:F32Ceil
WasmMathIntrinsic:F32Floor
WasmMathIntrinsic:F32Sqrt
WasmMathIntrinsic:F32ConvertF64
CompileWasmMathIntrinsic
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/wasm-compiler.cc:5898
CompileWasmImportCallWrapper
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/wasm-compiler.cc:5984
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/wasm-compiler.cc:6034
wasm-interpreter-entry#%d
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/wasm-compiler.cc:6073
ExecuteTurbofanCompilation
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/wasm-compiler.cc:6195
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCSNodeJS/XCSNodeJS-11/deps/v8/src/compiler/wasm-compiler.cc:6266
wasm-call
wasm graph creation
%closure
%context
wasm-function#%d
{.kPn
333333
333333
