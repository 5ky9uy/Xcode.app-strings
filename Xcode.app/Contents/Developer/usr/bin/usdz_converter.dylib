recursive_mutex::scoped_lock: pthread_mutex_lock failed
recursive_mutex: pthread_mutexattr_init failed
recursive_mutex: pthread_mutex_init failed
pthread_join
pthread_detach
thread_monitor %s in %s
pthread_attr_init
pthread_attr_setstack_size
pthread_create
pthread_attr_destroy
mutex::scoped_lock: pthread_mutex_lock failed
mutex: pthread_mutex_init failed
FastDtoa
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/fast-dtoa.cc
v > 0
!Double(v).IsSpecial()
Grisu3
mode == FAST_DTOA_SHORTEST_SINGLE
boundary_plus.e() == w.e()
(kMinimalTargetExponent <= w.e() + ten_mk.e() + DiyFp::kSignificandSize) && (kMaximalTargetExponent >= w.e() + ten_mk.e() + DiyFp::kSignificandSize)
scaled_w.e() == boundary_plus.e() + ten_mk.e() + DiyFp::kSignificandSize
AsNormalizedDiyFp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/ieee.h
value() > 0.0
NormalizedBoundaries
AsDiyFp
Sign() > 0
!IsSpecial()
Normalize
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/diy-fp.h
f_ != 0
DigitGen
low.e() == w.e() && w.e() == high.e()
low.f() + 1 <= high.f() - 1
kMinimalTargetExponent <= w.e() && w.e() <= kMaximalTargetExponent
digit <= 9
one.e() >= -60
(((static_cast<uint64_t>(0xFFFFFFFF) << 32) + 0xFFFFFFFFu)) / 10 >= one.f()
Subtract
e_ == other.e_
f_ >= other.f_
BiggestPowerTen
number < (1u << (number_bits + 1))
RoundWeed
rest <= unsafe_interval
Grisu3Counted
DigitGenCounted
RoundWeedCounted
rest < ten_kappa
operator[]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/utils.h
0 <= index && index < length_
1.8.0
__RML_open_factory
__TBB_make_rml_server
__RML_close_factory
__TBB_call_with_my_server_info
libirml.dylib
libcilkrts.so
TBB failed to initialize task scheduler TLS
failed to destroy task scheduler TLS: %s
rml::tbb_factory::make_server failed with status %x, falling back on private rml
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/tbb/src/tbb/governor.cpp
BlockingTSI!=tsi_ptr
Attempt to terminate nested scheduler in blocking mode
private
shared
CILK
!my_scheduler
task_scheduler_init already initialized
number_of_threads==automatic || number_of_threads > 0
number_of_threads for task_scheduler_init must be automatic or positive
!thread_stack_size
deferred initialization ignores stack size setting
task_scheduler_init::terminate without corresponding task_scheduler_init::initialize()
__cilkrts_watch_stack
BignumDtoa
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/bignum-dtoa.cc
f == v
NormalizedExponent
significand != 0
GenerateShortestDigits
buffer[(*length) - 1] != '9'
buffer[(*length) -1] != '9'
GenerateCountedDigits
count >= 0
digit <= 10
BignumToFixed
*decimal_point == -requested_digits
InitialScaledStartValuesPositiveExponent
estimated_power >= 0
_MDL_DarwinHelper__internal
.data/usd_plugins
asset_validation: error: %s
asset_validation: warning: %s
Converting asset file '%s' ...
Mesh: %@
+---->: %s vertices.
+----> sub-mesh: %@
+---->: The dimensions of texture file '%s' are: %d x %d.
+---->Material already found: %@
There are %s vertices in this asset file '%s'.
.usda
.data
%@_%@
color.tga
def Shader "color_map"
normal.tga
def Shader "normal_map"
emissive.tga
def Shader "emissive_map"
metallic.tga
def Shader "metallic_map"
roughness.tga
def Shader "roughness_map"
ao.tga
def Shader "ao_map"
/template/prefixTemplate.usda
/template/materialTemplate.usda
/template/meshTemplate.usda
No groups or objects found in source file
Groups:
usemtl 
StingrayPBS
add references = @./cube.obj@</pCube1>
Object reference not found in template
add references = @%@@
</%@>
<%@>
"Mesh_%@
"Mesh
baseColor
specularExponent
emission
%@%@
template/materialTemplate.usda
template/usage.txt
%@ : omit group: %@
%@ : group: %@
%@ : Leave generated .usda file
%@ : Verbose output
%@ : Create the .usda file in the same folder as the output .usdc file
-color_map
%@ : color map path: %@
-normal_map
%@ : normal map path: %@
-emissive_map
%@ : emissive map path: %@
-metallic_map
%@ : metallic map path: %@
-roughness_map
%@ : roughness map path: %@
-ao_map
%@ : ao map path: %@
input file: %@
output file: %@
MDLUtility
convertToUSDZ:writeToURL:
usda
usdc
%s cannot process input asset format of '%s'.
No data found in file
usdz
%s cannot convert to asset format of '%s'.
Error removing temporary .usda file: %@
Strtof
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/strtod.cc
f1 <= f2 && f2 <= f3 && f3 <= f4
(f1 != f2 && f2 == f3 && f3 == f4) || (f1 == f2 && f2 != f3 && f3 == f4) || (f1 == f2 && f2 == f3 && f3 != f4)
SubVector
to <= length_
from < to
0 <= from
CutToMaxSignificantDigits
buffer[buffer.length() - 1] != '0'
Vector
len == 0 || (len > 0 && data != __null)
DoubleStrtod
read_digits == trimmed.length()
ReadUint64
0 <= digit && digit <= 9
DiyFpStrtod
exponent <= PowersOfTenCache::kMaxDecimalExponent
AdjustmentPowerOfTen
0 < exponent
exponent < PowersOfTenCache::kDecimalExponentDistance
PowersOfTenCache::kDecimalExponentDistance == 8
UpperBoundary
CompareBufferWithDiyFp
buffer.length() + exponent <= kMaxDecimalPower + 1
buffer.length() + exponent > kMinDecimalPower
buffer.length() <= kMaxSignificantDecimalDigits
__itt_api_fini
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_init
pthread_mutexattr_destroy
__itt_api_init
__itt_domain_create
__itt_string_handle_create
__itt_pause
__itt_resume
__itt_thread_set_name
__itt_thread_ignore
__itt_thr_name_set
__itt_thr_ignore
__itt_enable_attach
__itt_detach
__itt_sync_create
__itt_sync_rename
__itt_sync_destroy
__itt_sync_prepare
__itt_sync_cancel
__itt_sync_acquired
__itt_sync_releasing
__itt_suppress_push
__itt_suppress_pop
__itt_suppress_mark_range
__itt_suppress_clear_range
__itt_model_site_begin
__itt_model_site_end
__itt_model_task_begin
__itt_model_task_end
__itt_model_lock_acquire
__itt_model_lock_release
__itt_model_record_allocation
__itt_model_record_deallocation
__itt_model_induction_uses
__itt_model_reduction_uses
__itt_model_observe_uses
__itt_model_clear_uses
__itt_model_site_beginA
__itt_model_site_beginAL
__itt_model_task_beginA
__itt_model_task_beginAL
__itt_model_iteration_taskA
__itt_model_iteration_taskAL
__itt_model_site_end_2
__itt_model_task_end_2
__itt_model_lock_acquire_2
__itt_model_lock_release_2
__itt_model_aggregate_task
__itt_model_disable_push
__itt_model_disable_pop
__itt_heap_function_create
__itt_heap_allocate_begin
__itt_heap_allocate_end
__itt_heap_free_begin
__itt_heap_free_end
__itt_heap_reallocate_begin
__itt_heap_reallocate_end
__itt_heap_internal_access_begin
__itt_heap_internal_access_end
__itt_heap_record_memory_growth_begin
__itt_heap_record_memory_growth_end
__itt_heap_reset_detection
__itt_heap_record
__itt_id_create
__itt_id_destroy
__itt_get_timestamp
__itt_region_begin
__itt_region_end
__itt_frame_begin_v3
__itt_frame_end_v3
__itt_frame_submit_v3
__itt_task_group
__itt_task_begin
__itt_task_begin_fn
__itt_task_end
__itt_counter_inc_v3
__itt_counter_inc_delta_v3
__itt_marker
__itt_metadata_add
__itt_metadata_str_add
__itt_relation_add_to_current
__itt_relation_add
__itt_event_create
__itt_event_start
__itt_event_end
__itt_sync_set_name
__itt_notify_sync_name
__itt_notify_sync_prepare
__itt_notify_sync_cancel
__itt_notify_sync_acquired
__itt_notify_sync_releasing
__itt_memory_read
__itt_memory_write
__itt_memory_update
__itt_state_get
__itt_state_set
__itt_obj_mode_set
__itt_thr_mode_set
__itt_frame_create
__itt_frame_begin
__itt_frame_end
__itt_counter_create
__itt_counter_destroy
__itt_counter_inc
__itt_counter_inc_delta
__itt_mark_create
__itt_mark
__itt_mark_off
__itt_mark_global
__itt_mark_global_off
__itt_stack_caller_create
__itt_stack_caller_destroy
__itt_stack_callee_enter
__itt_stack_callee_leave
__itt_clock_domain_create
__itt_clock_domain_reset
__itt_id_create_ex
__itt_id_destroy_ex
__itt_task_begin_ex
__itt_task_begin_fn_ex
__itt_task_end_ex
__itt_task_begin_overlapped
__itt_task_begin_overlapped_ex
__itt_task_end_overlapped
__itt_task_end_overlapped_ex
__itt_marker_ex
__itt_metadata_add_with_scope
__itt_metadata_str_add_with_scope
__itt_relation_add_to_current_ex
__itt_relation_add_ex
__itt_track_group_create
__itt_track_create
__itt_set_track
__itt_api_version
__itt_av_save
INTEL_LIBITTNOTIFY64
INTEL_ITTNOTIFY_GROUPS
control
thread
mark
sync
fsync
model
counter
frame
stitch
heap
structure
suppress
arrays
KMP_FOR_TPROFILE
KMP_FOR_TCHECK
libittnotify.dylib
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/bignum.cc
AddBignum
IsClamped()
other.IsClamped()
bigit_pos >= 0
SubtractBignum
LessEqual(other, *this)
MultiplyByPowerOfTen
exponent >= 0
Square
accumulator == 0
AssignPowerUInt16
base != 0
power_exponent >= 0
DivideModuloIntBignum
other.used_digits_ > 0
other.bigits_[other.used_digits_ - 1] >= ((1 << kBigitSize) / 16)
bigits_[used_digits_ - 1] < 0x10000
BigitLength() == other.BigitLength()
quotient < 0x10000
division_estimate < 0x10000
ToHexString
Compare
a.IsClamped()
b.IsClamped()
PlusCompare
c.IsClamped()
Align
used_digits_ >= 0
exponent_ >= 0
BigitsShiftLeft
shift_amount < kBigitSize
shift_amount >= 0
SubtractTimes
exponent_ <= other.exponent_
ReadUInt64
HexCharValue
'A' <= c && c <= 'F'
SizeInHexChars
number > 0
GetCachedPowerForBinaryExponentRange
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/cached-powers.cc
0 <= index && index < static_cast<int>(((sizeof(kCachedPowers) / sizeof(*(kCachedPowers))) / static_cast<size_t>(!(sizeof(kCachedPowers) % sizeof(*(kCachedPowers))))))
min_exponent <= cached_power.binary_exponent
cached_power.binary_exponent <= max_exponent
GetCachedPowerForDecimalExponent
kMinDecimalExponent <= requested_exponent
requested_exponent < kMaxDecimalExponent + kDecimalExponentDistance
*found_exponent <= requested_exponent
requested_exponent < *found_exponent + kDecimalExponentDistance
Failed to destroy filter TLS
TLS not allocated for filter
Infinity
CreateExponentialRepresentation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/double-conversion.cc
length != 0
exponent < 1e4
CreateDecimalRepresentation
length <= digits_after_point - (-decimal_point)
digits_after_point > 0
length - decimal_point <= digits_after_point
ToShortestIeeeNumber
mode == SHORTEST || mode == SHORTEST_SINGLE
ToExponential
decimal_rep_length <= requested_digits + 1
ToPrecision
decimal_rep_length <= precision
DoubleToAscii
mode == SHORTEST || mode == SHORTEST_SINGLE || requested_digits >= 0
AddCharacter
c != '\0'
!is_finalized() && position_ < buffer_.length()
StrLength
length == static_cast<size_t>(static_cast<int>(length))
AddSubstring
!is_finalized() && position_ + n < buffer_.length()
static_cast<size_t>(n) <= strlen(s)
StringToIeee
buffer_pos < kBufferSize
-max_exponent / 2 <= exponent && exponent <= max_exponent / 2
!result_is_junk
ConsumeSubString
**current == *substring
RadixStringToIeee
*current != end
number < ((int64_t)1 << kSignificandSize)
static_cast<int64_t>(static_cast<double>(number)) == number
number != 0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/fixed-dtoa.cc
FillFractionals
-128 <= exponent && exponent <= 0
fractionals >> 56 == 0
Shift
-64 <= shift_amount && shift_amount <= 64
Multiply
(accumulator >> 32) == 0
Unidentified exception
tbb_thread::join
tbb_thread::detach
pthread_attr_setstacksize
libtbbmalloc.dylib
ALLOCATOR
scalable_malloc
malloc
scalable_free
scalable_aligned_malloc
scalable_aligned_free
TBB_VERSION
Tools support
disabled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/tbb/src/tbb/tbb_main.cpp
my_param < global_control::parameter_max
param < global_control::parameter_max
The number of workers is currently limited to %u. The request for %u workers is ignored. Further requests for more workers will be silently ignored until the limit changes.
Thread stack size has been already set to %u. The request for larger stack (%u) cannot be satisfied.
RML might limit the number of workers to %u while %u is requested.
Assertion %s failed on line %d of file %s
Detailed description: %s
TBB Warning: %s
bad allocation in previous or concurrent attempt
attempted recursive lock on critical section or non-recursive mutex
User-initiated abort has terminated this operation
The same task_handle object cannot be executed more than once
wait() was not called on the structured_task_group
%s: %s
Step must be positive
Index out of requested size range
Index out of allocated segment slots
Index is not allocated
Resource deadlock would occur
Operation not permitted
Wait on condition variable failed
Invalid hash load factor
[backward compatibility] Invalid number of buckets
swap() is invalid on non-equal allocators
reservation size exceeds permitted max size
invalid key
Illegal tagged_msg cast
Nesting of blocking termination is impossible
TBB: %s
PXR_AR_DEFAULT_SEARCH_PATH
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/ar/defaultResolver.cpp
_BeginCacheScope
virtual void ArDefaultResolver::_BeginCacheScope(VtValue *)
cacheScopeData && (cacheScopeData->IsEmpty() || cacheScopeData->IsHolding<_CachePtr>())
_EndCacheScope
virtual void ArDefaultResolver::_EndCacheScope(VtValue *)
!cacheStack.empty()
_BindContext
virtual void ArDefaultResolver::_BindContext(const ArResolverContext &, VtValue *)
Unknown resolver context object: %s
_UnbindContext
virtual void ArDefaultResolver::_UnbindContext(const ArResolverContext &, VtValue *)
Unbinding resolver context in unexpected order: %s
VtValue::_Counted<std::__1::shared_ptr<ArDefaultResolver::_Cache> >::_Counted(const T &) [T = std::__1::shared_ptr<ArDefaultResolver::_Cache>]
PXR_AR_DISABLE_PLUGIN_RESOLVER
Disables plugin resolver implementation, falling back to default supplied by Ar.
ArGetResolver(): Plugin asset resolver disabled via PXR_AR_DISABLE_PLUGIN_RESOLVER. Using default resolver.
ArGetResolver(): No plugin asset resolver found. Using default resolver.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/ar/resolver.cpp
_ResolverHolder
(anonymous namespace)::_ResolverHolder::_ResolverHolder()
ArGetResolver(): Preferred resolver %s not found. Using default resolver.
ArGetResolver(): Preferred resolver %s does not derive from ArResolver. Using default resolver.
ArGetResolver(): Using preferred resolver %s
ArGetResolver(): Found asset resolver types: [%s]
ArGetResolver(): Found multiple plugin asset resolvers, using %s
_CreatePluginResolver
ArResolver *(anonymous namespace)::_ResolverHolder::_CreatePluginResolver(const TfType &)
plugin
Failed to find plugin for %s
plugin->Load()
Failed to load plugin %s for %s
Cannot manufacture plugin asset resolver
Failed to manufacture plugin asset resolver
ArGetResolver(): Using asset resolver %s from plugin %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/ar/defaultResolverContext.cpp
ArDefaultResolverContext
ArDefaultResolverContext::ArDefaultResolverContext(const std::vector<std::string> &)
Could not determine absolute path for search path prefix '%s'
Search path: 
    
empty pattern
unknown reason
uncompiled pattern
std::
 ArchError: %s
  Function: %s
      File: %s
      Line: %zu
 ArchWarn: %s
 Function: %s
     File: %s
     Line: %zu
%s/%s.%d%s
%s/%s.%d.%d%s
%s/%s.XXXXXX
TMPDIR
/tmp
failed call to posix_madvise(%zd, %zd)ret=%d, errno=%d '%s'
bad arguments to mmap()
system limit on mapped regions exceeded, or out of memory
 [with 
 =,;
__pxmalloc_malloc
__ptmalloc3_malloc
__jemalloc_malloc
GLIBCXX_FORCE_NEW
ArchMallocHook functionality not implemented for non-linux systems
libArch
This stack trace was requested because: 
Postmortem Stack Trace
------------------------ '
' is dying ------------------------
The stack can be found in 
done.
------------------------------------------------------------------
%s_%s
--------------------------------------------------------------
A stack trace has been requested by %s because of %s
The stack can be found in %s:%s
--------------------------------------------------------------
--------------------------------------------------------------
==============================================================
 A stack trace has been requested by 
 because: 
FAIL: Unable to fork() crash handler: errno=
FAIL: Unable to exec crash handler 
: errno=
FAIL: Crash handler wait failed: errno=
FAIL: Crash handler failed to exec
FAIL: Crash handler died: signal=
FAIL: Crash handler unexpected wait status=
FAIL: Crash handler timed out
ARCH_LOGSESSION
$pid
$time
$prog
$stack
$cmd
... full diagnostics reported in the stack trace file.
ARCH_POSTMORTEM
$log
********** Session Log **********
No frames saved, stack traces probably not supported on this architecture.
 #%-3i 0x%016lx in %s
%s+%#0lx
%#016lx
can't determine working directory
ArchGetCwd
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/arch/systemInfo.cpp
\$\{([^}]+)\}
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/frustum.cpp
ComputeNarrowedFrustum
GfFrustum GfFrustum::ComputeNarrowedFrustum(const GfVec3d &, const GfVec2d &) const
Given worldPoint is behind or at the eye
GfFrustum::Orthographic
GfFrustum::Perspective
point:
direction:
point 1:
point 2:
), (
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/matrix3d.cpp
Orthonormalize
bool GfMatrix3d::Orthonormalize(bool)
OrthogonalizeBasis did not converge, matrix may not be orthonormal.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/matrix3f.cpp
bool GfMatrix3f::Orthonormalize(bool)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/matrix4d.cpp
bool GfMatrix4d::Orthonormalize(bool)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/matrix4f.cpp
bool GfMatrix4f::Orthonormalize(bool)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/range2d.cpp
GetCorner
GfVec2d GfRange2d::GetCorner(size_t) const
Invalid corner %zu > 3.
GetQuadrant
GfRange2d GfRange2d::GetQuadrant(size_t) const
Invalid quadrant %zu > 3.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/range2f.cpp
GfVec2f GfRange2f::GetCorner(size_t) const
GfRange2f GfRange2f::GetQuadrant(size_t) const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/range3d.cpp
GfVec3d GfRange3d::GetCorner(size_t) const
Invalid corner %zu > 7.
GetOctant
GfRange3d GfRange3d::GetOctant(size_t) const
Invalid octant %zu > 7.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/range3f.cpp
GfVec3f GfRange3f::GetCorner(size_t) const
GfRange3f GfRange3f::GetOctant(size_t) const
 >> 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/gf/rotation.cpp
Decompose
GfVec3d GfRotation::Decompose(const GfVec3d &, const GfVec3d &, const GfVec3d &) const
Rotation axes are not orthogonal.
DecomposeRotation
static void GfRotation::DecomposeRotation(const GfMatrix4d &, const GfVec3d &, const GfVec3d &, const GfVec3d &, double, double *, double *, double *, double *, bool, const double *)
Need three angles to correctly decompose rotation
A swing shift was provided but we're not decomposing into four angles.  The swing shift will be ignored.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/json.cpp
JsParseStream
JsValue JsParseStream(std::istream &, JsParseError *)
Stream error
JsParseString
JsValue JsParseString(const std::string &, JsParseError *)
JSON string is empty
handler.values.size() == 1
Unexpected value count: %zu
JsWriteToStream
void JsWriteToStream(const JsValue &, std::ostream &)
No error.
The document is empty.
The document root must not follow by other values.
Invalid value.
Missing a name for object member.
Missing a colon after a name of object member.
Missing a comma or '}' after an object member.
Missing a comma or ']' after an array element.
Incorrect hex digit after \u escape in string.
The surrogate pair in string is invalid.
Invalid escape character in string.
Missing a closing quotation mark in string.
Invalid encoding in string.
Number too big to be stored in double.
Miss fraction part in number.
Miss exponent in number.
Terminate parsing due to Handler error.
Unspecific syntax error.
Unknown error.
Parse
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/reader.h
!HasParseError()
ParseNull
is.Peek() == 'n'
ParseTrue
is.Peek() == 't'
ParseFalse
is.Peek() == 'f'
ParseString
s.Peek() == '\"'
ParseStringToStream
PushUnsafe
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/internal/stack.h
stackTop_ + sizeof(T) * count <= stackEnd_
ParseHex4
Encode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/encodings.h
codepoint <= 0x10FFFF
GetSize() >= count * sizeof(T)
ParseObject
is.Peek() == '{'
ParseArray
is.Peek() == '['
ParseNumber
Pow10
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/internal/pow10.h
n >= 0 && n <= 308
GetAllocator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/document.h
allocator_
_JsValueToImplValue
rj::Value _JsValueToImplValue(const JsValue &, Allocator &) [Allocator = PXRJS::rapidjson::MemoryPoolAllocator<PXRJS::rapidjson::CrtAllocator>]
Unknown JsValue type
GenericValue
type <= kNumberType
AddMember
IsObject()
name.IsString()
Realloc
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/allocators.h
newBuffer != 0
PushBack
IsArray()
Reserve
GenericStringRef
s != 0
Accept
m->name.IsString()
GetType() == kNumberType
PrettyPrefix
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/prettywriter.h
type == kStringType
!Base::hasRoot_
GetSize() >= sizeof(T)
MemberBegin
MemberEnd
IsString()
GetStringLength
EndObject
Base::level_stack_.GetSize() >= sizeof(typename Base::Level)
!Base::level_stack_.template Top<typename Base::Level>()->inArray
ret == true
Begin
EndArray
Base::level_stack_.template Top<typename Base::Level>()->inArray
dtoa
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/rapidjson/internal/dtoa.h
maxDecimalPlaces >= 1
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/js/value.cpp
GetJsObject
const JsObject &JsValue::GetJsObject() const
GetJsArray
const JsArray &JsValue::GetJsArray() const
GetString
const std::string &JsValue::GetString() const
GetBool
bool JsValue::GetBool() const
GetInt
int JsValue::GetInt() const
GetInt64
int64_t JsValue::GetInt64() const
GetUInt64
uint64_t JsValue::GetUInt64() const
GetReal
double JsValue::GetReal() const
Attempt to get %s from value holding %s
object
array
real
null
unknown
boost::bad_get: failed value get using boost::get
static void TfSingleton<KindRegistry>::SetInstanceConstructed(T &) [T = KindRegistry]
component
group
assembly
subcomponent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/kind/registry.cpp
void KindRegistry::_Register(const TfToken &, const TfToken &)
Invalid kind: '%s'
Kind '%s' has already been registered
_GetBaseKind
TfToken KindRegistry::_GetBaseKind(const TfToken &) const
Unknown kind: '%s'
_RegisterDefaults
void KindRegistry::_RegisterDefaults()
Expected dict for kind '%s'
baseKind
Expected string for baseKind
Kinds
PCP_CULLING
Controls whether culling is enabled in Pcp caches.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/cache.cpp
RequestPayloads
void PcpCache::RequestPayloads(const SdfPathSet &, const SdfPathSet &, PcpChanges *)
Path <%s> must be a prim path
RequestLayerMuting
void PcpCache::RequestLayerMuting(const std::vector<std::string> &, const std::vector<std::string> &, PcpChanges *)
Cannot mute cache's root layer @%s@
ComputeRelationshipTargetPaths
void PcpCache::ComputeRelationshipTargetPaths(const SdfPath &, SdfPathVector *, bool, const SdfSpecHandle &, bool, PcpErrorVector *)
Path <%s> must be a relationship path
ComputeAttributeConnectionPaths
void PcpCache::ComputeAttributeConnectionPaths(const SdfPath &, SdfPathVector *, bool, const SdfSpecHandle &, bool, PcpErrorVector *)
Path <%s> must be an attribute path
FindSiteDependencies
PcpDependencyVector PcpCache::FindSiteDependencies(const PcpLayerStackPtr &, const SdfPath &, PcpDependencyFlags, bool, bool, bool) const
depMask must include at least one of {PcpDependencyTypeVirtual, PcpDependencyTypeNonVirtual}
depMask must include at least one of {PcpDependencyTypeRoot, PcpDependencyTypePurelyDirect, PcpDependencyTypePartlyDirect, PcpDependencyTypeAncestral}
depMask of PcpDependencyTypeRoot requires PcpDependencyTypeNonVirtual
PcpLayerStack does not belong to this PcpCache
PcpCache::FindSiteDependencies - recurseOnIndex
GetInvalidSublayerIdentifiers
std::vector<std::string> PcpCache::GetInvalidSublayerIdentifiers() const
IsInvalidSublayerIdentifier
bool PcpCache::IsInvalidSublayerIdentifier(const std::string &) const
GetInvalidAssetPaths
std::map<SdfPath, std::vector<std::string>, SdfPath::FastLessThan> PcpCache::GetInvalidAssetPaths() const
IsInvalidAssetPath
bool PcpCache::IsInvalidAssetPath(const std::string &) const
Apply
void PcpCache::Apply(const PcpCacheChanges &, PcpLifeboat *)
Reload
void PcpCache::Reload(PcpChanges *)
ReloadReferences
void PcpCache::ReloadReferences(PcpChanges *, const SdfPath &)
_ComputePrimIndexesInParallel
void PcpCache::_ComputePrimIndexesInParallel(const SdfPathVector &, PcpErrorVector *, PcpCache::_UntypedIndexingChildrenPredicate, PcpCache::_UntypedIndexingPayloadPredicate, const char *, const char *)
Computing prim indexes in parallel only supported for USD caches.
_ComputePrimIndexWithCompatibleInputs
const PcpPrimIndex &PcpCache::_ComputePrimIndexWithCompatibleInputs(const SdfPath &, const PcpPrimIndexInputs &, PcpErrorVector *)
ComputePropertyIndex
const PcpPropertyIndex &PcpCache::ComputePropertyIndex(const SdfPath &, PcpErrorVector *)
Path <%s> must be a property path
PcpCache will not compute a cached property index in USD mode; use PcpBuildPropertyIndex() instead.  Path was <%s>
TfIterator<T, Reverse> &TfIterator<const std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, false>::operator++() [T = const std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, false>::operator->() [T = const std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, false>::operator*() [T = const std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, Reverse = false]
../ModelKit/extern/usd/pxr/usd/pcp/dependencies.h
Pcp_ForEachDependentNode
void Pcp_ForEachDependentNode(const SdfPath &, const PcpLayerStackPtr &, const SdfPath &, const PcpCache &, const FN &) [FN = (lambda at /BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/cache.cpp:639:28)]
nodeUsingSite
Unable to find node that introduced dependency on site <%s>%s for prim <%s> in %s
auto PcpCache::FindSiteDependencies(const PcpLayerStackPtr &, const SdfPath &, PcpDependencyFlags, bool, bool, bool)::(anonymous class)::operator()(const SdfPath &, const SdfPath &)::(anonymous class)::operator()(const SdfPath &, const PcpNodeRef &) const
!depIndexPath.IsEmpty()
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, false>::operator++() [T = std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, false>::operator*() [T = std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >, false>::operator++() [T = std::__1::map<SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >, false>::operator->() [T = std::__1::map<SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfPathTable<PcpPrimIndex>, false>::operator++() [T = SdfPathTable<PcpPrimIndex>, Reverse = false]
TfIterator::ArrowReturnType TfIterator<SdfPathTable<PcpPrimIndex>, false>::operator->() [T = SdfPathTable<PcpPrimIndex>, Reverse = false]
_ConsumeIndexes
void Pcp_ParallelIndexer<PcpCache::_UntypedIndexingChildrenPredicate>::_ConsumeIndexes(bool) [ChildrenPredicate = PcpCache::_UntypedIndexingChildrenPredicate]
!entry.IsValid()
PrimIndex for %s already exists in cache
ComputeIndex
void Pcp_ParallelIndexer<PcpCache::_UntypedIndexingChildrenPredicate>::ComputeIndex(const PcpPrimIndex *, const SdfPath &) [ChildrenPredicate = PcpCache::_UntypedIndexingChildrenPredicate]
parentIndex || path == SdfPath::AbsoluteRootPath()
_ComputeIndex
void Pcp_ParallelIndexer<PcpCache::_UntypedIndexingChildrenPredicate>::_ComputeIndex(const PcpPrimIndex *, SdfPath, bool) [ChildrenPredicate = PcpCache::_UntypedIndexingChildrenPredicate]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<std::__1::pair<const PcpPrimIndex *, SdfPath>, std::__1::allocator<std::__1::pair<const PcpPrimIndex *, SdfPath> > >, false>::operator->() [T = std::__1::vector<std::__1::pair<const PcpPrimIndex *, SdfPath>, std::__1::allocator<std::__1::pair<const PcpPrimIndex *, SdfPath> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::pair<const PcpPrimIndex *, SdfPath>, std::__1::allocator<std::__1::pair<const PcpPrimIndex *, SdfPath> > >, false>::operator++() [T = std::__1::vector<std::__1::pair<const PcpPrimIndex *, SdfPath>, std::__1::allocator<std::__1::pair<const PcpPrimIndex *, SdfPath> > >, Reverse = false]
SdfPathTable::_IterBoolPair SdfPathTable<PcpPrimIndex>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = PcpPrimIndex]
void SdfPathTable<PcpPrimIndex>::_Grow() [MappedType = PcpPrimIndex]
SdfPathTable::_IterBoolPair SdfPathTable<PcpPropertyIndex>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = PcpPropertyIndex]
void SdfPathTable<PcpPropertyIndex>::_Grow() [MappedType = PcpPropertyIndex]
DidChange
void PcpChanges::DidChange(const std::vector<PcpCache *> &, const SdfLayerChangeListMap &)
  Caches:
    %s
  Layer @%s@ changed:  skipping non-prim changes
  Layer @%s@ changed:  unused
  Changes to layer %s:
  Layer @%s@ changed sublayers
invalid
  Layer @%s@ changed:  significant
  Layer @%s@ changed:  layer offsets (significant)
  Renamed @%s@<%s> to <%s>
PcpChanges::DidChange -- Checking layer stack relocations against significant prim resyncs
  renameChanges <%s> to <%s>
PcpChanges::DidChange
  Did mute layer @%s@
PcpChanges::DidMuteLayer
  Did unmute layer @%s@
PcpChanges::DidUnmuteLayer
  Layer @%s@ changed sublayer @%s@
PcpChanges::DidMaybeFixSublayer
  Asset @%s@ %s
insignificant
significant
Resync following in @%s@ significantly due to loading asset used by @%s@<%s>:
    <%s>
PcpChanges::DidMaybeFixAsset
PcpChanges::DidChangeLayers: @%s@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/changes.cpp
DidChangeSpecs
void PcpChanges::DidChangeSpecs(PcpCache *, const SdfPath &, const SdfLayerHandle &, const SdfPath &)
changedPath.IsPrimOrPrimVariantSelectionPath()
PcpChanges::DidChangePaths: @%s@<%s> to <%s>
DidChangeFieldsForDecorator
void PcpChanges::DidChangeFieldsForDecorator(PcpCache *, const SdfPath &, const SdfLayerHandle &, const SdfPath &, const SdfChangeList &)
changes
decorator
  Sd only path change @%s@<%s> to <%s>
PcpChanges::_Optimize:
   Resync following in @%s@ %s due to Sd site @%s@<%s>%s:
 (restricted to existing caches)
 (not restricted to existing caches)
    <%s> depends on <%s>
   Resync end
  %s sublayer @%s@ %s
added
removed
_DidChangeSublayer
bool PcpChanges::_DidChangeSublayer(PcpCache *, const PcpLayerStackPtrVector &, const SdfLayerHandle &, PcpChanges::_SublayerChangeType, std::string *, bool *)
Can't find or open sublayer
  %s following in @%s@ due to %s reload in sublayer @%s@:
Resync
Spec changes
  Relocation change in %s affects:
  and dependent paths in %s
      <%s>
   Resync following in @%s@ significant due to layer resolved path change:
Pcp_PrimSpecOrDescendantHasRelocates
bool Pcp_PrimSpecOrDescendantHasRelocates(const SdfLayerHandle &, const SdfPath &)
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType> > >, false>::operator++() [T = const std::__1::vector<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::vector<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType> > >, false>::operator->() [T = const std::__1::vector<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, SdfChangeList::SubLayerChangeType> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > >, std::__1::allocator<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > > > >, false>::operator++() [T = std::__1::vector<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > >, std::__1::allocator<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > >, std::__1::allocator<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > > > >, false>::operator->() [T = std::__1::vector<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > >, std::__1::allocator<std::__1::pair<PcpCache *, std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > > > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, false>::operator++() [T = std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, false>::operator*() [T = std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, false>::operator++() [T = const std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, false>::operator*() [T = const std::__1::vector<TfWeakPtr<PcpLayerStack>, std::__1::allocator<TfWeakPtr<PcpLayerStack> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges, std::__1::less<TfWeakPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges> > >, false>::operator++() [T = const std::__1::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges, std::__1::less<TfWeakPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges, std::__1::less<TfWeakPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges> > >, false>::operator->() [T = const std::__1::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges, std::__1::less<TfWeakPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, false>::operator++() [T = const std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, false>::operator->() [T = const std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<PcpCache *, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, false>::operator++() [T = std::__1::map<PcpCache *, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<PcpCache *, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, false>::operator->() [T = std::__1::map<PcpCache *, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, false>::operator++() [T = std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, false>::operator->() [T = std::__1::map<PcpCache *, PcpCacheChanges, std::__1::less<PcpCache *>, std::__1::allocator<std::__1::pair<PcpCache *const, PcpCacheChanges> > >, Reverse = false]
auto PcpChanges::_DidChangeLayerStackResolvedPath(const std::vector<PcpCache *> &, const PcpLayerStackPtr &, std::string *)::(anonymous class)::operator()(const PcpDependency &) const
primIndex
Pcp_Dependencies::Add
Pcp_Dependencies: Adding deps for index <%s>:
 - Node %i (%s %s): <%s> %s
    None
Pcp_Dependencies: Removing deps for index <%s>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/dependencies.cpp
void Pcp_Dependencies::Remove(const PcpPrimIndex &, PcpLifeboat *)
i != deps.end()
      Removed last dep on site
      No subtree deps
    Removing empty parent entry <%s>
    Removed last dep on %s
Pcp_Dependencies::RemoveAll: Clearing all dependencies
SdfPathTable::_IterBoolPair SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >::_InsertInTable(const SdfPathTable::value_type &) [MappedType = std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >]
void SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >::_Grow() [MappedType = std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >]
TfIterator<T, Reverse> &TfIterator<boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, false>::operator++() [T = boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, false>::operator->() [T = boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, false>::operator++() [T = const boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, false>::operator->() [T = const boost::unordered::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >, boost::hash<TfRefPtr<PcpLayerStack> >, std::__1::equal_to<TfRefPtr<PcpLayerStack> >, std::__1::allocator<std::__1::pair<const TfRefPtr<PcpLayerStack>, SdfPathTable<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > > > > >, Reverse = false]
Node %d:
    Parent node:              %s
NONE
    Type:                     %s
    DependencyType:           
    Source path:              <%s>
    Source layer stack:       %s
    Target path:              <%s>
    Target layer stack:       %s
    Origin node:              %d
    Sibling # at origin:      %d
    Map to parent:
        %s
        
    Map to root:
    Namespace depth:          %d
    Depth below introduction: %d
    Permission:               %s
    Is restricted:            %s
    Is inert:                 %s
    Contribute specs:         %s
    Has specs:                %s
    Has symmetry:             %s
    Prim stack:
      <%s> %s - @%s@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/diagnostic.cpp
PcpDumpDotGraph
void PcpDumpDotGraph(const PcpNodeRef &, const char *, bool, bool)
Could not write to %s
Computing prim index for %s
PopIndex
void Pcp_IndexingOutputManager::PopIndex(const PcpPrimIndex *)
!info->indexStack.empty()
!info->indexStack.back().phases.empty()
DONE - 
TRUE
FALSE
digraph PcpPrimIndex {
0 [label="...",shape=box,style=dotted];
permission denied
inert
culled
\nCANNOT contribute specs
\ndepth: %i
solid
dotted
, filled
%zu [label="%s (%i)\n%s", shape="box", style="%s"];
-- mapToParent:
-- mapToRoot:
color=green, label="local inherit%s"
color=green, label="global inherit%s"
color=red, label="reference%s"
color=purple, label="relocate%s"
color=orange, label="variant"
color=indigo, label="payload%s"
color=sienna, label="local specializes%s"
color=sienna, label="global specializes%s"
_WriteGraph
int _WriteGraph(std::ostream &, const PcpNodeRef &, bool, bool, const Pcp_NodeSet &, int)
Invalid arc type
style=dashed
%zu -> %zu [%s];
%zu -> %zu [style=dotted label="origin" constraint="false"];
OutputGraph
void Pcp_IndexingOutputManager::_DebugInfo::OutputGraph() const
!indexStack.empty()
pcp.%s.%06d.dot
Unable to open %s to write graph
label = <
labelloc = b
BeginPhase
void Pcp_IndexingOutputManager::_DebugInfo::BeginPhase(std::string &&, const PcpNodeRef &)
UpdateCurrentDotGraph
void Pcp_IndexingOutputManager::_DebugInfo::UpdateCurrentDotGraph()
!indexStack.back().phases.empty()
UpdateCurrentDotGraphLabel
void Pcp_IndexingOutputManager::_DebugInfo::UpdateCurrentDotGraphLabel()
<table cellborder="0" border="0">
<tr><td balign="left" align="left">
</td></tr>
<tr><td bgcolor="black" height="1" cellpadding="0">
</td></tr>
<tr><td balign="left" align="left">
Tasks:<br/>
</td></tr>
</table>
%d. %s
<br/>
TfIterator::ArrowReturnType TfIterator<std::__1::vector<Pcp_IndexingOutputManager::_IndexInfo, std::__1::allocator<Pcp_IndexingOutputManager::_IndexInfo> >, true>::operator->() [T = std::__1::vector<Pcp_IndexingOutputManager::_IndexInfo, std::__1::allocator<Pcp_IndexingOutputManager::_IndexInfo> >, Reverse = true]
TfIterator::StarReturnType TfIterator<std::__1::vector<Pcp_IndexingOutputManager::_Phase, std::__1::allocator<Pcp_IndexingOutputManager::_Phase> >, true>::operator*() [T = std::__1::vector<Pcp_IndexingOutputManager::_Phase, std::__1::allocator<Pcp_IndexingOutputManager::_Phase> >, Reverse = true]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<Pcp_IndexingOutputManager::_Phase, std::__1::allocator<Pcp_IndexingOutputManager::_Phase> >, true>::operator->() [T = std::__1::vector<Pcp_IndexingOutputManager::_Phase, std::__1::allocator<Pcp_IndexingOutputManager::_Phase> >, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<Pcp_IndexingOutputManager::_Phase, std::__1::allocator<Pcp_IndexingOutputManager::_Phase> >, true>::operator++() [T = std::__1::vector<Pcp_IndexingOutputManager::_Phase, std::__1::allocator<Pcp_IndexingOutputManager::_Phase> >, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<Pcp_IndexingOutputManager::_IndexInfo, std::__1::allocator<Pcp_IndexingOutputManager::_IndexInfo> >, true>::operator++() [T = std::__1::vector<Pcp_IndexingOutputManager::_IndexInfo, std::__1::allocator<Pcp_IndexingOutputManager::_IndexInfo> >, Reverse = true]
EndPhase
void Pcp_IndexingOutputManager::_DebugInfo::EndPhase()
Update
void Pcp_IndexingOutputManager::_DebugInfo::Update(const PcpNodeRef &, std::string &&)
void Pcp_IndexingOutputManager::_DebugInfo::Msg(std::string &&, const Pcp_NodeSet &)
TfIterator::StarReturnType TfIterator<std::__1::pair<PcpPrimIterator, PcpPrimIterator>, false>::operator*() [T = std::__1::pair<PcpPrimIterator, PcpPrimIterator>, Reverse = false]
Cycle detected:
inherits from:
is relocated from:
uses variant:
references:
gets payload from:
refers to:
CANNOT 
inherit from:
be relocated from:
use variant:
reference:
get payload from:
refer to:
which 
CANNOT 
which is private.
The property <%s> has inconsistent spec types.  The defining spec is @%s@<%s> and is %s spec.  The conflicting spec is @%s@<%s> and is %s spec.  The conflicting spec will be ignored.
The attribute <%s> has specs with inconsistent value types.  The defining spec is @%s@<%s> with value type '%s'.  The conflicting spec is @%s@<%s> with value type '%s'.  The conflicting spec will be ignored.
The attribute <%s> has specs with inconsistent variability.  The defining spec is @%s@<%s> with variability '%s'.  The conflicting spec is @%s@<%s> with variability '%s'.  The conflicting variability will be ignored.
Ignoring %s path on prim <%s> because asset @%s@ is internal.
Invalid %s path <%s> on prim %s -- must be an absolute prim path.
Could not open asset @%s@ for %s on prim %s%s%s.
Asset @%s@ was muted for %s on prim %s.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/errors.cpp
ToString
virtual std::string PcpErrorInvalidInstanceTargetPath::ToString() const
ownerSpecType == SdfSpecTypeAttribute || ownerSpecType == SdfSpecTypeRelationship
The %s <%s> from <%s> in layer @%s@ is authored in a class but refers to an instance of that class.  Ignoring.
virtual std::string PcpErrorInvalidExternalTargetPath::ToString() const
The %s <%s> from <%s> in layer @%s@ refers to a path outside the scope of the %s from <%s>.  Ignoring.
virtual std::string PcpErrorInvalidTargetPath::ToString() const
The %s <%s> from <%s> in layer @%s@ is invalid.  This may be because the path is the pre-relocated source path of a relocated prim.  Ignoring.
Invalid sublayer offset %s in sublayer @%s@ of layer @%s@. Using no offset instead.
Invalid reference offset %s at %s on asset path '%s'. Using no offset instead.
The following sublayers for layer @%s@ have the same owner '%s': %s
Could not load sublayer @%s@ of layer @%s@%s%s; skipping.
Invalid variant selection {%s = %s} at <%s> in @%s@.
The layer @%s@ has an invalid opinion at the relocation source path <%s>, which will be ignored.
will be ignored because:
is private and overrides its opinions.
The layer at @%s@ has an illegal opinion about %s <%s> which is private across a reference, inherit, or variant.  Ignoring.
Sublayer hierarchy with root layer @%s@ has cycles. Detected when layer @%s@ was seen in the layer stack for the second time.
virtual std::string PcpErrorTargetPermissionDenied::ToString() const
The %s <%s> from <%s> in layer @%s@ targets an object that is private on the far side of a reference or inherit.  This %s will be ignored.
connection
Unresolved %s path <%s> on prim %s.
PcpRaiseErrors
void PcpRaiseErrors(const PcpErrorVector &)
PcpErrorType_ArcCycle
PcpErrorType_ArcPermissionDenied
PcpErrorType_InconsistentPropertyType
PcpErrorType_InconsistentAttributeType
PcpErrorType_InconsistentAttributeVariability
PcpErrorType_InternalAssetPath
PcpErrorType_InvalidPrimPath
PcpErrorType_InvalidAssetPath
PcpErrorType_InvalidInstanceTargetPath
PcpErrorType_InvalidExternalTargetPath
PcpErrorType_InvalidTargetPath
PcpErrorType_InvalidReferenceOffset
PcpErrorType_InvalidSublayerOffset
PcpErrorType_InvalidSublayerOwnership
PcpErrorType_InvalidSublayerPath
PcpErrorType_InvalidVariantSelection
PcpErrorType_OpinionAtRelocationSource
PcpErrorType_PrimPermissionDenied
PcpErrorType_PropertyPermissionDenied
PcpErrorType_SublayerCycle
PcpErrorType_TargetPermissionDenied
PcpErrorType_UnresolvedPrimPath
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfWeakPtr<SdfLayer>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, false>::operator++() [T = const std::__1::vector<TfWeakPtr<SdfLayer>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfWeakPtr<SdfLayer>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, false>::operator*() [T = const std::__1::vector<TfWeakPtr<SdfLayer>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, false>::operator++() [T = const std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, false>::operator*() [T = const std::__1::vector<std::__1::shared_ptr<PcpErrorBase>, std::__1::allocator<std::__1::shared_ptr<PcpErrorBase> > >, Reverse = false]
PcpInstanceKey
PcpInstanceKey::PcpInstanceKey(const PcpPrimIndex &)
Arcs:
  (none)
  %s%s : %s
 (offset: %f scale: %f)
Variant selections:
  (none)
  %s = %s
PCP_OVERRIDE_INSTANCEABLE
Overrides Pcp's default computation for whether a PrimIndex is instanceable:
 -1: (the default) computes instanceable only in USD mode
  0: NEVER computes instanceable (always returns false)
  1: always compute instanceable, whether in USD mode or not.
Pcp_PrimIndexIsInstanceable
bool Pcp_PrimIndexIsInstanceable(const PcpPrimIndex &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/iterator.cpp
void PcpNodeIterator::increment()
Cannot increment invalid iterator
decrement
void PcpNodeIterator::decrement()
Cannot decrement invalid iterator
advance
void PcpNodeIterator::advance(boost::iterators::detail::iterator_facade_base<PcpNodeIterator, PcpNodeRef, boost::iterators::random_access_traversal_tag, PcpNodeRef, long, true, true>::difference_type)
Cannot advance invalid iterator
distance_to
PcpNodeIterator::difference_type PcpNodeIterator::distance_to(const PcpNodeIterator &) const
Invalid iterator
Cannot compute distance for iterators from different graphs
void PcpPrimIterator::increment()
void PcpPrimIterator::decrement()
void PcpPrimIterator::advance(boost::iterators::detail::iterator_facade_base<PcpPrimIterator, SdfSite, boost::iterators::random_access_traversal_tag, SdfSite, long, true, true>::difference_type)
PcpPrimIterator::difference_type PcpPrimIterator::distance_to(const PcpPrimIterator &) const
Cannot compute distance for iterators from different prim indexes.
void PcpPropertyIterator::increment()
void PcpPropertyIterator::decrement()
void PcpPropertyIterator::advance(boost::iterators::detail::iterator_facade_base<PcpPropertyIterator, const SdfHandle<SdfPropertySpec>, boost::iterators::random_access_traversal_tag, const SdfHandle<SdfPropertySpec> &, long, true, true>::difference_type)
PcpPropertyIterator::difference_type PcpPropertyIterator::distance_to(const PcpPropertyIterator &) const
Cannot compute distance for iterators from different property indexes
GetNode
PcpNodeRef PcpPrimIndex_Graph::GetNode(const Pcp_CompressedSdSite &)
site.nodeIndex < _GetNumNodes()
TfIterator::StarReturnType TfIterator<SdfListProxy<SdfSubLayerTypePolicy>, false>::operator*() [T = SdfListProxy<SdfSubLayerTypePolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfListProxy<SdfSubLayerTypePolicy>, false>::operator++() [T = SdfListProxy<SdfSubLayerTypePolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::set<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >, std::__1::less<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >, std::__1::allocator<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > >, false>::operator++() [T = std::__1::set<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >, std::__1::less<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >, std::__1::allocator<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::set<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >, std::__1::less<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >, std::__1::allocator<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > >, false>::operator->() [T = std::__1::set<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >, std::__1::less<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >, std::__1::allocator<std::__1::pair<TfRefPtr<SdfLayer>, std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > >, Reverse = false]
PCP_ENABLE_PARALLEL_LAYER_PREFETCH
Enables parallel, threaded pre-fetch of sublayers.
Pcp_ComputeRelocationsForLayerStack
void Pcp_ComputeRelocationsForLayerStack(const SdfLayerRefPtrVector &, SdfRelocatesMap *, SdfRelocatesMap *, SdfRelocatesMap *, SdfRelocatesMap *, SdfPathVector *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/layerStack.cpp
Field '%s' in <%s> in layer @%s@does not contain an SdfRelocatesMap
PcpLayerStack::PcpLayerStack
PcpLayerStack
PcpLayerStack::PcpLayerStack(const PcpLayerStackIdentifier &, const std::string &, const Pcp_MutedLayers &, bool)
_identifier
GetSessionLayers
SdfLayerHandleVector PcpLayerStack::GetSessionLayers() const
rootLayerIt != _layers.end()
GetLayerOffsetForLayer
const SdfLayerOffset *PcpLayerStack::GetLayerOffsetForLayer(size_t) const
layerIdx < _mapFunctions.size()
_Compute
void PcpLayerStack::_Compute(const std::string &, const Pcp_MutedLayers &)
@<expired>@
@NULL@
T *TfRefPtr<SdfLayerTree>::operator->() const [T = SdfLayerTree]
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfRefPtr<SdfLayerTree>, std::__1::allocator<TfRefPtr<SdfLayerTree> > >, false>::operator*() [T = const std::__1::vector<TfRefPtr<SdfLayerTree>, std::__1::allocator<TfRefPtr<SdfLayerTree> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfRefPtr<SdfLayerTree>, std::__1::allocator<TfRefPtr<SdfLayerTree> > >, false>::operator++() [T = const std::__1::vector<TfRefPtr<SdfLayerTree>, std::__1::allocator<TfRefPtr<SdfLayerTree> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, false>::operator++() [T = std::__1::map<SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, false>::operator->() [T = std::__1::map<SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > > > >, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, Pcp_LayerStackRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = Pcp_LayerStackRegistry]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, false>::operator++() [T = std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, false>::operator*() [T = std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable> > > >, false>::operator++() [T = std::__1::map<SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable> > > >, false>::operator->() [T = std::__1::map<SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::shared_ptr<PcpMapExpression::Variable> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<Pcp_SublayerInfo, std::__1::allocator<Pcp_SublayerInfo> >, false>::operator++() [T = std::__1::vector<Pcp_SublayerInfo, std::__1::allocator<Pcp_SublayerInfo> >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<Pcp_SublayerInfo, std::__1::allocator<Pcp_SublayerInfo> >, false>::operator->() [T = std::__1::vector<Pcp_SublayerInfo, std::__1::allocator<Pcp_SublayerInfo> >, Reverse = false]
<expired>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/layerStackRegistry.cpp
FindOrCreate
PcpLayerStackRefPtr Pcp_LayerStackRegistry::FindOrCreate(const PcpLayerStackIdentifier &, PcpErrorVector *)
Cannot build layer stack with null rootLayer
GetAllLayerStacks
std::vector<PcpLayerStackPtr> Pcp_LayerStackRegistry::GetAllLayerStacks() const
i->second
Unexpected dead layer stack %s
void Pcp_LayerStackRegistry::_Remove(const PcpLayerStackIdentifier &, const PcpLayerStack *)
i != _data->identifierToLayerStack.end()
i->second.operator->() == layerStack
delete_buckets
../ModelKit/extern/boost/boost/unordered/detail/table.hpp
!size_
delete_nodes
prev->next_ != end
get_bucket
buckets_
construct
../ModelKit/extern/boost/boost/unordered/detail/buckets.hpp
node_constructed_
../ModelKit/extern/boost/boost/unordered/detail/allocate.hpp
!ptr_
min_buckets_for_size
mlf_ >= minimum_max_load_factor
rehash_impl
../ModelKit/extern/boost/boost/unordered/detail/unique.hpp
this->buckets_
node_ && node_constructed_
TfIterator<T, Reverse> &TfIterator<boost::unordered::unordered_map<PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack>, boost::hash<PcpLayerStackIdentifier>, std::__1::equal_to<PcpLayerStackIdentifier>, std::__1::allocator<std::__1::pair<const PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack> > > >, false>::operator++() [T = boost::unordered::unordered_map<PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack>, boost::hash<PcpLayerStackIdentifier>, std::__1::equal_to<PcpLayerStackIdentifier>, std::__1::allocator<std::__1::pair<const PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<boost::unordered::unordered_map<PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack>, boost::hash<PcpLayerStackIdentifier>, std::__1::equal_to<PcpLayerStackIdentifier>, std::__1::allocator<std::__1::pair<const PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack> > > >, false>::operator->() [T = boost::unordered::unordered_map<PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack>, boost::hash<PcpLayerStackIdentifier>, std::__1::equal_to<PcpLayerStackIdentifier>, std::__1::allocator<std::__1::pair<const PcpLayerStackIdentifier, TfWeakPtr<PcpLayerStack> > > >, Reverse = false]
PcpMapExpresion
PcpMapExpression::_Node::EvaluateAndCache - cache miss
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/mapExpression.cpp
_EvaluateUncached
PcpMapExpression::Value PcpMapExpression::_Node::_EvaluateUncached() const
unhandled case
SetValueForVariable
void PcpMapExpression::_Node::SetValueForVariable(const PcpMapExpression::Value &)
Cannot set value for non-variable
TfIterator<T, Reverse> &TfIterator<std::__1::set<PcpMapExpression::_Node *, std::__1::less<PcpMapExpression::_Node *>, std::__1::allocator<PcpMapExpression::_Node *> >, false>::operator++() [T = std::__1::set<PcpMapExpression::_Node *, std::__1::less<PcpMapExpression::_Node *>, std::__1::allocator<PcpMapExpression::_Node *> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::set<PcpMapExpression::_Node *, std::__1::less<PcpMapExpression::_Node *>, std::__1::allocator<PcpMapExpression::_Node *> >, false>::operator*() [T = std::__1::set<PcpMapExpression::_Node *, std::__1::less<PcpMapExpression::_Node *>, std::__1::allocator<PcpMapExpression::_Node *> >, Reverse = false]
PcpMapFunction
Create
static PcpMapFunction PcpMapFunction::Create(const PcpMapFunction::PathMap &, const SdfLayerOffset &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/mapFunction.cpp
Cannot construct a PcpMapFunction with %zu entries; limit is %zu
The mapping of '%s' to '%s' is invalid.
Compose
PcpMapFunction PcpMapFunction::Compose(const PcpMapFunction &) const
%s -> %s
_Canonicalize
void _Canonicalize(PcpMapFunction::PathPairVector *)
TfFlyweight::_FindOrCreate
static TfFlyweight::_ElementPairPtr TfFlyweight<PcpMapFunction::_Data, PcpMapFunction::_Data::Hash>::_FindOrCreate(const T &) [T = PcpMapFunction::_Data, HashFn = PcpMapFunction::_Data::Hash]
../ModelKit/extern/usd/pxr/base/tf/flyweight.h
_TryToErase
static void TfFlyweight<PcpMapFunction::_Data, PcpMapFunction::_Data::Hash>::_TryToErase(TfFlyweight::_ElementPairPtr) [T = PcpMapFunction::_Data, HashFn = PcpMapFunction::_Data::Hash]
data->pool.find(acc, ptr->first)
TfIterator<T, Reverse> &TfIterator<const std::__1::map<SdfPath, SdfPath, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, false>::operator++() [T = const std::__1::map<SdfPath, SdfPath, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<SdfPath, SdfPath, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, false>::operator->() [T = const std::__1::map<SdfPath, SdfPath, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, false>::operator++() [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, false>::operator->() [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/node.cpp
HasSpecs
bool PcpNodeRef::HasSpecs() const
_nodeIdx < _graph->_nodeHasSpecs.size()
SetHasSpecs
void PcpNodeRef::SetHasSpecs(bool)
GetPath
const SdfPath &PcpNodeRef::GetPath() const
_nodeIdx < _graph->_nodeSitePaths.size()
../ModelKit/extern/usd/pxr/usd/pcp/primIndex_Graph.h
_GetNode
const PcpPrimIndex_Graph::_Node &PcpPrimIndex_Graph::_GetNode(size_t) const
idx < _GetNumNodes()
PcpTranslatePathFromNodeToRoot
SdfPath PcpTranslatePathFromNodeToRoot(const PcpNodeRef &, const SdfPath &, bool *)
PcpTranslatePathFromRootToNode
SdfPath PcpTranslatePathFromRootToNode(const PcpNodeRef &, const SdfPath &, bool *)
PcpTranslateTargetPathFromRootToNode
SdfPath PcpTranslateTargetPathFromRootToNode(const PcpNodeRef &, const SdfPath &, bool *)
PcpTranslatePathFromRootToNodeUsingFunction
SdfPath PcpTranslatePathFromRootToNodeUsingFunction(const PcpMapFunction &, const SdfPath &, bool *)
PcpTranslatePathFromNodeToRootUsingFunction
SdfPath PcpTranslatePathFromNodeToRootUsingFunction(const PcpMapFunction &, const SdfPath &, bool *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/pathTranslation.cpp
Pcp_TranslatePath
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = true, Mapping = PcpMapExpression]
Null map function
Path to translate <%s> is not absolute.
Path to translate <%s> must not contain a variant selection.
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = false, Mapping = PcpMapExpression]
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = false, Mapping = PcpMapFunction]
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = true, Mapping = PcpMapFunction]
MENV30_ENABLE_NEW_DEFAULT_STANDIN_BEHAVIOR
If enabled then standin preference is weakest opinion.
ComposeAuthoredVariantSelections
SdfVariantSelectionMap PcpPrimIndex::ComposeAuthoredVariantSelections() const
Pcp_RescanForSpecs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/primIndex.cpp
Pcp_NeedToRecomputeDueToAssetPathChange
bool Pcp_NeedToRecomputeDueToAssetPathChange(const PcpPrimIndex &)
refs.size() == sourceInfo.size()
PcpComputePrimIndex
void PcpComputePrimIndex(const SdfPath &, const PcpLayerStackPtr &, const PcpPrimIndexInputs &, PcpPrimIndexOutputs *, ArResolver *)
Path <%s> must be an absolute path to a prim, a prim variant-selection, or the pseudo-root.
ComputePrimChildNames
void PcpPrimIndex::ComputePrimChildNames(TfTokenVector *, PcpTokenSet *) const
ComputePrimPropertyNames
void PcpPrimIndex::ComputePrimPropertyNames(TfTokenVector *) const
Task::EvalNodeRelocations
Task::EvalImpliedRelocations
Task::EvalNodeReferences
Task::EvalNodePayload
Task::EvalNodeInherits
Task::EvalImpliedClasses
Task::EvalNodeSpecializes
Task::EvalImpliedSpecializes
Task::EvalNodeVariantSets
Task::EvalNodeVariantAuthored
Task::EvalNodeVariantFallback
Task::EvalNodeVariantNoneFound
Task::None
../ModelKit/extern/usd/pxr/usd/pcp/types.h
Pcp_CompressedSdSite
Pcp_CompressedSdSite::Pcp_CompressedSdSite(size_t, size_t)
nodeIndex_ < (size_t(1) << 16)
layerIndex_ < (size_t(1) << 16)
_ComputedAssetPathWouldCreateDifferentNode
bool _ComputedAssetPathWouldCreateDifferentNode(const PcpNodeRef &, const std::string &)
SdfLayer::SplitIdentifier( nodeRootLayer->GetIdentifier(), &oldAssetPath, &oldArgs)
Pcp_BuildPrimIndex
void Pcp_BuildPrimIndex(const PcpLayerStackSite &, const PcpLayerStackSite &, int, bool, bool, bool, PcpPrimIndex_StackFrame *, const PcpPrimIndexInputs &, PcpPrimIndexOutputs *)
site.path.IsAbsolutePath() && (site.path.IsAbsoluteRootOrPrimPath() || site.path.IsPrimVariantSelectionPath())
Retrieved index for <%s> from cache
Adjusted ancestral index for %s
TfIterator::StarReturnType TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator*() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
TfIterator<T, Reverse> &TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator++() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
TfIterator::ArrowReturnType TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator->() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
After AddTasksForNode
_FindStartingNodeForImpliedClasses
PcpNodeRef _FindStartingNodeForImpliedClasses(const PcpNodeRef &)
PcpIsClassBasedArc(n.GetArcType())
_FindStartingNodeOfClassHierarchy
std::pair<PcpNodeRef, PcpNodeRef> _FindStartingNodeOfClassHierarchy(const PcpNodeRef &)
instanceNode.GetParentNode()
Evaluating relocations under %s
<%s> was relocated from source <%s>
_EvalNodeRelocations
void _EvalNodeRelocations(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
Unexpected child node encountered
Elided subtree that will be superceded by relocation source <%s>
Adding new %s arc to %s to %s
origin: %s
arcSiblingNum: %d
namespaceDepth: %d
directNodeShouldContributeSpecs: %s
includeAncestralOpinions: %s
requirePrimAtTarget: %s
skipDuplicateNodes: %s
skipImpliedSpecializesCompletedNodes: %s
<None>
_AddArc
PcpNodeRef _AddArc(const PcpArcType, PcpNodeRef, PcpNodeRef, const PcpLayerStackSite &, PcpMapExpression, int, int, bool, bool, bool, bool, bool, Pcp_PrimIndexer *)
!mapExpr.IsNull()
Added new node for site %s to graph
Need to build index for %s source at %s to pick up ancestral opinions
Added subtree for site %s to graph
TfIterator::ArrowReturnType TfIterator<std::__1::vector<SdfSite, std::__1::allocator<SdfSite> >, false>::operator->() [T = std::__1::vector<SdfSite, std::__1::allocator<SdfSite> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfSite, std::__1::allocator<SdfSite> >, false>::operator++() [T = std::__1::vector<SdfSite, std::__1::allocator<SdfSite> >, Reverse = false]
Evaluating relocations implied by %s
_EvalImpliedRelocations
void _EvalImpliedRelocations(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
!gpRelocSource.IsEmpty()
Propagating relocate from %s to %s
Relocate already exists -- skipping
Evaluating references at %s
Found reference to @%s@<%s>
Evaluating payload for %s
Found payload @%s@<%s>
Payload was not included, skipping
Payload <%s> was not included, skipping
Evaluating inherits at %s
Found %s to <%s>
Preparing to add %s arc to %s
origin: %s
inheritArcNum: %d
ignoreIfSameAsSite: %s
<none>
Inheriting from path <%s>
No appropriate site for inheriting opinions
A %s arc to <%s> already exists. Skipping.
_DetermineInheritPath
SdfPath _DetermineInheritPath(const SdfPath &, const PcpMapExpression &)
!varPath.IsEmpty()
Evaluating implied classes at %s
Attempting to propagate %s of %s to %s.
Skipping ancestral class
Transfer function:
Implied class:
Found previously added implied inherit node
Evaluating specializes at %s
Evaluating implied specializes at %s
_FindArcsToPropagateToOrigin
void _FindArcsToPropagateToOrigin(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
PcpIsSpecializesArc(node.GetArcType())
Propagating arcs under %s to specializes origin %s
Propagating specializes arc %s to root
Evaluating variant sets at %s
Evaluating authored selections for variant set %s at %s
Found fallback {%s=%s}
Found variant selection {%s=%s} at %s
Deferring to variant fallback
No variant selection found for set '%s'
_ComposeVariantSelection
void _ComposeVariantSelection(int, PcpPrimIndex_StackFrame *, PcpNodeRef, const SdfPath &, const std::string &, std::string *, PcpNodeRef *, PcpPrimIndexOutputs *)
!pathInNode.IsEmpty()
!pathInNode.ContainsPrimVariantSelection()
_ComposeVariantSelectionForNode
bool _ComposeVariantSelectionForNode(const PcpNodeRef &, const SdfPath &, const std::string &, std::string *, PcpNodeRef *, PcpPrimIndexOutputs *)
Unexpected variant selection in namespace path <%s>
standin
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, false>::operator*() [T = const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, false>::operator++() [T = const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, Reverse = false]
After RetryVariantTasks
Evaluating fallback selections for variant set %s s at %s
No variant fallback found for set '%s'
_EnforcePermissions
void _EnforcePermissions(PcpPrimIndex *, PcpErrorVector *)
rootNode
TfIterator::StarReturnType TfIterator<std::__1::vector<PcpNodeRef, std::__1::allocator<PcpNodeRef> >, true>::operator*() [T = std::__1::vector<PcpNodeRef, std::__1::allocator<PcpNodeRef> >, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<PcpNodeRef, std::__1::allocator<PcpNodeRef> >, true>::operator++() [T = std::__1::vector<PcpNodeRef, std::__1::allocator<PcpNodeRef> >, Reverse = true]
TfIterator::StarReturnType TfIterator<PcpNodeRef_PrivateChildrenConstRange, true>::operator*() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = true]
TfIterator<T, Reverse> &TfIterator<PcpNodeRef_PrivateChildrenConstRange, true>::operator++() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = true]
T *TfRefPtr<PcpPrimIndex_Graph>::operator->() const [U = PcpPrimIndex_Graph]
TfIterator<T, Reverse> &TfIterator<std::__1::pair<PcpPrimIterator, PcpPrimIterator>, false>::operator++() [T = std::__1::pair<PcpPrimIterator, PcpPrimIterator>, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PcpPrimIndex_Graph>::operator->() const [PtrTemplate = TfWeakPtr, Type = PcpPrimIndex_Graph]
TfIterator<T, Reverse> &TfIterator<std::__1::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator++() [T = std::__1::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator->() [T = std::__1::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator*() [T = std::__1::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/primIndex_Graph.cpp
SetArc
void PcpPrimIndex_Graph::_Node::SetArc(const PcpArc &)
static_cast<size_t>(arc.siblingNumAtOrigin) <= ((1lu << _childrenSize) - 1)
static_cast<size_t>(arc.namespaceDepth) <= ((1lu << _depthSize) - 1)
arc.parent._GetNodeIndex() + 1 <= _invalidNodeIndex
arc.origin._GetNodeIndex() + 1 <= _invalidNodeIndex
PcpPrimIndex_Graph
static PcpPrimIndex_GraphRefPtr PcpPrimIndex_Graph::New(const PcpPrimIndex_GraphPtr &)
GetNodeUsingSite
PcpNodeRef PcpPrimIndex_Graph::GetNodeUsingSite(const PcpLayerStackSite &) const
GetNodeIndexesForRange
std::pair<size_t, size_t> PcpPrimIndex_Graph::GetNodeIndexesForRange(PcpRangeType) const
_data->finalized
Invalid range type specified
void PcpPrimIndex_Graph::Finalize()
_data.unique()
_ApplyNodeIndexMapping
void PcpPrimIndex_Graph::_ApplyNodeIndexMapping(const std::vector<size_t> &)
oldNodes.size() == oldSitePaths.size() && oldNodes.size() == oldHasSpecs.size()
nodeIndexMap.size() == oldNodes.size()
newNumNodes <= oldNumNodes
!parentWillBeErased
InsertChildNode
PcpNodeRef PcpPrimIndex_Graph::InsertChildNode(const PcpNodeRef &, const PcpLayerStackSite &, const PcpArc &)
arc.type != PcpArcTypeRoot
arc.parent == parent
InsertChildSubgraph
PcpNodeRef PcpPrimIndex_Graph::InsertChildSubgraph(const PcpNodeRef &, const PcpPrimIndex_GraphPtr &, const PcpArc &)
_InsertChildInStrengthOrder
PcpNodeRef PcpPrimIndex_Graph::_InsertChildInStrengthOrder(size_t, size_t)
parentNodeIdx < _GetNumNodes()
childNodeIdx < _GetNumNodes()
LAST_CHILD(parentNode) == _Node::_invalidNodeIndex
LAST_CHILD(parentNode) != _Node::_invalidNodeIndex
PREV_SIBLING(nextNode) != _Node::_invalidNodeIndex
_DetachSharedNodePool
void PcpPrimIndex_Graph::_DetachSharedNodePool()
_CreateNodesForSubgraph
size_t PcpPrimIndex_Graph::_CreateNodesForSubgraph(const PcpPrimIndex_Graph &, const PcpArc &)
!subgraph.GetRootNode().GetParentNode() && !subgraph.GetRootNode().GetOriginNode()
_GetWriteableNode
PcpPrimIndex_Graph::_Node &PcpPrimIndex_Graph::_GetWriteableNode(size_t)
PcpPrimIndex_Graph::_Node &PcpPrimIndex_Graph::_GetWriteableNode(const PcpNodeRef &)
_ComputeStrengthOrderIndexMapping
bool PcpPrimIndex_Graph::_ComputeStrengthOrderIndexMapping(std::vector<size_t> *) const
_ComputeEraseCulledNodeIndexMapping
bool PcpPrimIndex_Graph::_ComputeEraseCulledNodeIndexMapping(std::vector<size_t> *) const
_ConvertOldToNewIndex
PcpPrimIndex_Graph::_ApplyNodeIndexMapping(const std::vector<size_t> &)::_ConvertOldToNewIndex::_ConvertOldToNewIndex(const std::vector<size_t> &, size_t)
_table[i] < numNewNodes || _table[i] == _Node::_invalidNodeIndex
bool PcpPrimIndex_Graph::_ArcStrengthOrder::operator()(size_t, size_t) const
result != 0
Redundant nodes in prim index for <%s>
size_t PcpPrimIndex_Graph::_CreateNodesForSubgraph(const PcpPrimIndex_Graph &, const PcpArc &)::_ConvertOldToNewIndex::operator()(size_t) const
oldIndex + _base < _numNewNodes
_GetArcTypeForRangeType
PcpArcType _GetArcTypeForRangeType(const PcpRangeType)
Unhandled range type
TfIterator::ArrowReturnType TfIterator<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, false>::operator->() [T = std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/propertyIndex.cpp
GatherRelationalAttributeSpecs
void Pcp_PropertyIndexer::GatherRelationalAttributeSpecs(const PcpPropertyIndex &, bool)
relAttrPath.IsRelationalAttributePath()
PcpBuildPropertyIndex
void PcpBuildPropertyIndex(const SdfPath &, PcpCache *, PcpPropertyIndex *, PcpErrorVector *)
propertyPath.IsPropertyPath()
Cannot build property index for %s with a non-empty property stack.
Error, the property <%s> is owned by something that is not a prim or a relationship.
TfIterator<T, Reverse> &TfIterator<std::__1::pair<PcpPrimIterator, PcpPrimIterator>, true>::operator++() [T = std::__1::pair<PcpPrimIterator, PcpPrimIterator>, Reverse = true]
none
root
purely-direct
partly-direct
ancestral
virtual
non-virtual
PcpDependencyTypeNone
non-dependency
PcpDependencyTypeRoot
root dependency
PcpDependencyTypePurelyDirect
purely-direct dependency
PcpDependencyTypePartlyDirect
partly-direct dependency
PcpDependencyTypeDirect
direct dependency
PcpDependencyTypeAncestral
ancestral dependency
PcpDependencyTypeVirtual
virtual dependency
PcpDependencyTypeNonVirtual
non-virtual dependency
PcpDependencyTypeAnyNonVirtual
any non-virtual dependency
PcpDependencyTypeAnyIncludingVirtual
any dependency
PcpCache Statistics
-------------------
Entries: 
  Prim indexes:                      
  Property indexes:                  
Prim graphs: 
Prim graphs (shared): 
  Graph instances:                   
Memory usage: 
  sizeof(PcpMapFunction):            
  sizeof(PcpLayerStackPtr):          
  sizeof(PcpLayerStackSite):         
  sizeof(PcpPrimIndex):              
  sizeof(PcpPrimIndex_Graph):        
  sizeof(PcpPrimIndex_Graph::_Node): 
PcpMapFunction size histogram: 
SIZE    COUNT
%zu   %zu
PcpLayerStack pathsWithRelocates size histogram: 
TfIterator::ArrowReturnType TfIterator<const SdfPathTable<PcpPrimIndex>, false>::operator->() [T = const SdfPathTable<PcpPrimIndex>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfPathTable<PcpPrimIndex>, false>::operator++() [T = const SdfPathTable<PcpPrimIndex>, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const SdfPathTable<PcpPropertyIndex>, false>::operator->() [T = const SdfPathTable<PcpPropertyIndex>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfPathTable<PcpPropertyIndex>, false>::operator++() [T = const SdfPathTable<PcpPropertyIndex>, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashSet<PcpMapFunction, Pcp_Statistics::MapFuncHash, std::__1::equal_to<PcpMapFunction>, std::__1::allocator<PcpMapFunction> >, false>::operator->() [T = TfHashSet<PcpMapFunction, Pcp_Statistics::MapFuncHash, std::__1::equal_to<PcpMapFunction>, std::__1::allocator<PcpMapFunction> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashSet<PcpMapFunction, Pcp_Statistics::MapFuncHash, std::__1::equal_to<PcpMapFunction>, std::__1::allocator<PcpMapFunction> >, false>::operator++() [T = TfHashSet<PcpMapFunction, Pcp_Statistics::MapFuncHash, std::__1::equal_to<PcpMapFunction>, std::__1::allocator<PcpMapFunction> >, Reverse = false]
T *TfRefPtr<Pcp_LayerStackRegistry>::operator->() const [U = Pcp_LayerStackRegistry]
%'zd
  Total nodes:                       
  Total culled* nodes:               
  By type (total / culled*):         
%*s%s / %s
implied local inherits
implied global inherits
      
  (*) This does not include culled nodes that were erased 
from the graph
%zd B
%4.2f kB
%4.1f kB
%3zd kB
%4.2f MB
%4.1f MB
%3zd MB
%f GB
TfIterator::ArrowReturnType TfIterator<std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, false>::operator->() [T = std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, false>::operator++() [T = std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, Reverse = false]
PcpPrimIndex Statistics - 
-----------------------
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/strengthOrdering.cpp
PcpCompareSiblingNodeStrength
int PcpCompareSiblingNodeStrength(const PcpNodeRef &, const PcpNodeRef &)
Nodes are not siblings
a.GetParentNode() == a.GetRootNode() && b.GetParentNode() == b.GetRootNode()
Did not find node with root layer stack.
aOriginRoot.second != bOriginRoot.second
Should not have sibling specializes nodes with same origin root and distance to origin root.
Did not find either origin
PcpCompareNodeStrength
int PcpCompareNodeStrength(const PcpNodeRef &, const PcpNodeRef &)
Nodes are not part of the same prim index
_CompareNodeStrength
int _CompareNodeStrength(const PcpNodeRef &, const PcpNodeRefVector &, const PcpNodeRef &, const PcpNodeRefVector &)
aNodes.size() <= bNodes.size()
nodesUnderCommonParent.second != bNodes.rend()
nodesUnderCommonParent.first != aNodes.rend() && nodesUnderCommonParent.second != bNodes.rend()
PcpBuildFilteredTargetIndex
void PcpBuildFilteredTargetIndex(const PcpSite &, const PcpPropertyIndex &, const SdfSpecType, const bool, const SdfSpecHandle &, const bool, PcpCache *, PcpTargetIndex *, PcpErrorVector *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/pcp/targetIndex.cpp
relOrAttrType msut be either SdfSpecTypeRelationship or SdfSpecTypeAttribute
(*propertyRange.first)->GetSpecType() == relOrAttrType
<%s> is not %s
an attribute
a relationship
pathValue.IsHolding<SdfPathListOp>()
_TargetInClassAndTargetsInstance
bool _TargetInClassAndTargetsInstance(const SdfPath &, const PcpNodeRef &, Pcp_TargetIndexContext &)
_TargetIsPermitted
(anonymous namespace)::Pcp_PathTranslationError _TargetIsPermitted(const SdfPath &, const SdfPath &, const PcpNodeRef &, Pcp_TargetIndexContext &)
context.GetCache()->GetPrimIndexInputs().cull
Could not find expected node for site %s in prim index for <%s>
TfIterator<T, Reverse> &TfIterator<const std::__1::pair<PcpPropertyIterator, PcpPropertyIterator>, true>::operator++() [T = const std::__1::pair<PcpPropertyIterator, PcpPropertyIterator>, Reverse = true]
TfIterator::StarReturnType TfIterator<const std::__1::pair<PcpPropertyIterator, PcpPropertyIterator>, true>::operator*() [T = const std::__1::pair<PcpPropertyIterator, PcpPropertyIterator>, Reverse = true]
<internal error>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/plug/info.cpp
Plug_RegistrationMetadata
Plug_RegistrationMetadata::Plug_RegistrationMetadata(const JsValue &, const std::string &, const std::string &)
Plugin info %s doesn't hold an object; plugin ignored
doesn't hold a string
library
resource
doesn't hold a valid type
is missing
doesn't hold a valid name
doesn't hold a valid path
doesn't hold an object
Plugin info %s: ignoring unknown key '%s'
Plugin info %s key '%s' %s; plugin ignored
Will check plugin info paths
Did check plugin info paths
_ReadPlugInfoWithWildcards
void (anonymous namespace)::_ReadPlugInfoWithWildcards((anonymous namespace)::_ReadContext *, const std::string &)
Plugin info file %s is not absolute
Globbing plugin info path %s
%s/%s%s
Failed to compile regex for %s: %s (%s)
Recursively walking plugin info path %s
Ignore already read plugin info %s
Will read plugin info %s
Did read plugin info %s
_ReadPlugInfo
bool (anonymous namespace)::_ReadPlugInfo((anonymous namespace)::_ReadContext *, std::string)
Plugin info file %s key '%s' doesn't hold an array
Plugin info file %s key '%s' index %zd doesn't hold a string
Plugin info file %s has unknown key %s
Failed to open plugin info %s
_ReadPlugInfoObject
bool (anonymous namespace)::_ReadPlugInfoObject(const std::string &, JsObject *)
Plugin info file %s couldn't be read (line %d, col %d): %s
Plugin info file %s did not contain a JSON object
file %s %s[%zd]
[^/]*
plugInfo.json
Includes
Plugins
Type
Name
Info
Root
LibraryPath
ResourcePath
PluginDependencies
PlugPlugin::_Load
Load %s
_Load
bool PlugPlugin::_Load()
Loading plugin '%s'
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/plug/plugin.cpp
Loading plugin '%s'.
_LoadWithDependents
bool PlugPlugin::_LoadWithDependents(PlugPlugin::_SeenPlugins *)
Load failed because of cyclic dependency for '%s'
Load failed: unknown base class '%s'
Load failed: dependency list has wrong type
Load failed: unknown dependent class '%s'
Load failed: unknown dependent plugin '%s'
Load failed: unable to load dependent plugin '%s'
Loaded plugin '%s' in a secondary thread.
Types
_DefineType
static void PlugPlugin::_DefineType(TfType)
unknown plugin type %s
alias
_DeclareAliases
void PlugPlugin::_DeclareAliases(TfType, const JsObject &)
Expected string for alias name, but found %s
bases
_DeclareType
void PlugPlugin::_DeclareType(const std::string &, const JsObject &)
Invalid bases for type %s specified by plugin %s. Expected list of strings.
The metadata for plugin '%s' defined in %s declares type '%s' with base type '%s', but the type has already been declared with a different set of bases that does not include that type.  The existing bases are: (%s).  Please fix the plugin.
Plugin '%s' defined in %s has metadata claiming that it provides type %s, but this was previously provided by plugin '%s' defined in %s.
_NewPlugin
static pair<PlugPluginPtr, bool> PlugPlugin::_NewPlugin(const Plug_RegistrationMetadata &, PlugPlugin::_Type, const std::string &, PluginMap *) [PluginMap = TfHashMap<std::__1::basic_string<char>, TfRefPtr<PlugPlugin>, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, TfRefPtr<PlugPlugin> > > >]
it->second
Already registered %s plugin '%s' - not registering '%s'.
Registering %s plugin '%s' at '%s'.
shared library
<invalid enum value>
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, false>::operator++() [T = const std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, false>::operator*() [T = const std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<std::__1::basic_string<char>, TfRefPtr<PlugPlugin>, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, TfRefPtr<PlugPlugin> > > >, false>::operator++() [T = TfHashMap<std::__1::basic_string<char>, TfRefPtr<PlugPlugin>, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, TfRefPtr<PlugPlugin> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashMap<std::__1::basic_string<char>, TfRefPtr<PlugPlugin>, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, TfRefPtr<PlugPlugin> > > >, false>::operator->() [T = TfHashMap<std::__1::basic_string<char>, TfRefPtr<PlugPlugin>, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, TfRefPtr<PlugPlugin> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, false>::operator++() [T = const std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, false>::operator->() [T = const std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, Reverse = false]
../ModelKit/extern/usd/pxr/base/tf/singleton.h
SetInstanceConstructed
static void TfSingleton<PlugRegistry>::SetInstanceConstructed(T &) [T = PlugRegistry]
this function may not be called after GetInstance() has completed
TfSingleton::_CreateInstance
Create Singleton 
Registering plugins
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/plug/registry.cpp
_RegisterPlugins
PlugPluginPtrVector PlugRegistry::_RegisterPlugins(const std::vector<std::string> &)
Plug
PlugRegistry::RegisterPlugins
GetPluginForType
PlugPluginPtr PlugRegistry::GetPluginForType(TfType) const
Unknown base type
plug
../ModelKit/extern/usd/pxr/base/tf/refPtr.h
operator->
T *TfRefPtr<Tf_Remnant>::operator->() const [T = Tf_Remnant]
attempted member lookup on NULL %s
../ModelKit/extern/usd/pxr/base/tf/weakPtrFacade.h
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PlugRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = PlugRegistry]
Dereferenced an invalid %s
_RegisterPlugin
void PlugRegistry::_RegisterPlugin(const Plug_RegistrationMetadata &, ConcurrentVector *) [ConcurrentVector = tbb::concurrent_vector<TfWeakPtr<PlugPlugin>, tbb::cache_aligned_allocator<TfWeakPtr<PlugPlugin> > >]
Tried to register a plugin of unknown type (maybe from %s)
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PlugPlugin>::operator->() const [PtrTemplate = TfWeakPtr, Type = PlugPlugin]
PXR_DISABLE_STANDARD_PLUG_SEARCH_PATH
Equals
virtual bool SdfAbstractData::Equals(const SdfAbstractDataRefPtr &) const
WriteToStream
virtual void SdfAbstractData::WriteToStream(std::ostream &) const
    
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/abstractData.cpp
VisitSpecs
void SdfAbstractData::VisitSpecs(SdfAbstractDataSpecVisitor *) const
visitor
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfAbstractData>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfAbstractData]
TfIterator<T, Reverse> &TfIterator<const std::__1::set<TfToken, std::__1::less<TfToken>, std::__1::allocator<TfToken> >, false>::operator++() [T = const std::__1::set<TfToken, std::__1::less<TfToken>, std::__1::allocator<TfToken> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::set<TfToken, std::__1::less<TfToken>, std::__1::allocator<TfToken> >, false>::operator*() [T = const std::__1::set<TfToken, std::__1::less<TfToken>, std::__1::allocator<TfToken> >, Reverse = false]
cannot create a new layer with an empty identifier.
cannot create a new layer with arguments in the identifier
Sdf_ResolvePath
std::__1::string Sdf_ResolvePath(const std::__1::string &, ArAssetInfo *)
Sdf_ComputeFilePath
std::__1::string Sdf_ComputeFilePath(const std::__1::string &, ArAssetInfo *)
Sdf_ComputeAssetInfoFromIdentifier('%s', '%s', '%s')
Sdf_ComputeAssetInfoFromIdentifier:
  assetInfo->identifier = '%s'
  assetInfo->realPath = '%s'
  assetInfo->repoPath = '%s'
  assetInfo->assetName = '%s'
  assetInfo->version = '%s'
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/assetPathResolver.cpp
Sdf_ComputeAnonLayerIdentifier
std::__1::string Sdf_ComputeAnonLayerIdentifier(const std::__1::string &, const SdfLayer *)
Sdf_DecodeArguments
bool Sdf_DecodeArguments(const std::__1::string &, SdfLayer::FileFormatArguments *)
argStringLength > _Tokens->ArgsDelimiter.size()
Invalid file format arguments: %s
anon:
:SDF_FORMAT_ARGS:
static SdfAttributeSpecHandle SdfAttributeSpec::New(const SdfPrimSpecHandle &, const std::string &, const SdfValueTypeName &, SdfVariability, bool)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/attributeSpec.cpp
Cannot create an SdfAttributeSpec with a null owner
Cannot create attribute on %s with invalid name: %s
Cannot create attribute at invalid path <%s.%s>
static SdfAttributeSpecHandle SdfAttributeSpec::New(const SdfRelationshipSpecHandle &, const SdfPath &, const std::string &, const SdfValueTypeName &, SdfVariability, bool)
NULL owner relationship
static SdfAttributeSpecHandle SdfAttributeSpec::_New(const SdfSpecHandle &, const SdfPath &, const SdfValueTypeName &, SdfVariability, bool)
NULL owner
Cannot create attribute spec <%s> with invalid type
specPtr
static SdfAttributeSpecHandle SdfAttributeSpec::_New(const SdfRelationshipSpecHandle &, const SdfPath &, const std::string &, const SdfValueTypeName &, SdfVariability, bool)
connection mappers
ChangeMapperPath
void SdfAttributeSpec::ChangeMapperPath(const SdfPath &, const SdfPath &)
Change mapper path: Permission denied.
cannot change connection path for attribute %s's mapper at connection path <%s> to <%s> because it's not a property path
Change mapper path: No mapper exists for connection path <%s>.
Change mapper path: Mapper already exists for connection path <%s>.
SdfHandle::SpecType *SdfHandle<SdfMapperSpec>::operator->() const [T = SdfMapperSpec]
bool SdfListProxy<SdfPathKeyPolicy>::_Validate() const [_TypePolicy = SdfPathKeyPolicy]
void SdfListProxy<SdfPathKeyPolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfPathKeyPolicy]
bool SdfListProxy<SdfPathKeyPolicy>::_Validate() [_TypePolicy = SdfPathKeyPolicy]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<SdfPath, std::__1::basic_string<char>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::basic_string<char> > > >, false>::operator++() [T = const std::__1::map<SdfPath, std::__1::basic_string<char>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::basic_string<char> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<SdfPath, std::__1::basic_string<char>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::basic_string<char> > > >, false>::operator->() [T = const std::__1::map<SdfPath, std::__1::basic_string<char>, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::basic_string<char> > > >, Reverse = false]
static void TfSingleton<SdfChangeList>::SetInstanceConstructed(T &) [T = SdfChangeList]
   infoKey: 
     oldValue: 
     newValue: 
    sublayer 
   oldPath: <
   didRename
   didChangeIdentifier
   didChangeResolvedPath
   didReplaceContent
   didReloadContent
   didReorderChildren
   didReorderProperties
   didChangePrimVariantSets
   didChangePrimInheritPaths
   didChangePrimSpecializes
   didChangePrimReferences
   didChangeAttributeTimeSamples
   didChangeAttributeConnection
   didChangeMapperArgument
   didChangeRelationshipTargets
   didAddTarget
   didRemoveTarget
   didAddInertPrim
   didAddNonInertPrim
   didRemoveInertPrim
   didRemoveNonInertPrim
   didAddPropertyWithOnlyRequiredFields
   didAddProperty
   didRemovePropertyWithOnlyRequiredFields
   didRemoveProperty
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/changeList.cpp
GetEntry
SdfChangeList::Entry &SdfChangeList::GetEntry(const SdfPath &)
path != SdfPath::EmptyPath()
SdfChangeList::SubLayerAdded
SdfChangeList::SubLayerRemoved
SdfChangeList::SubLayerOffset
static void TfSingleton<Sdf_ChangeManager>::SetInstanceConstructed(T &) [T = Sdf_ChangeManager]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/changeManager.cpp
CloseChangeBlock
void Sdf_ChangeManager::CloseChangeBlock()
changeBlockDepth == 0
changeBlockDepth > 0
_ProcessRemoveIfInert
void Sdf_ChangeManager::_ProcessRemoveIfInert()
data.changeBlockDepth == 1
data.removeIfInert.empty()
Changes to layer %s:
DidChangeField
void Sdf_ChangeManager::DidChangeField(const SdfLayerHandle &, const SdfPath &, const TfToken &, const VtValue &, const VtValue &)
Unknown spec type for marker value change at path <%s>
newOffsets.size() == subLayers.size()
DidAddSpec
void Sdf_ChangeManager::DidAddSpec(const SdfLayerHandle &, const SdfPath &, bool)
Unsupported Spec Type for <
DidRemoveSpec
void Sdf_ChangeManager::DidRemoveSpec(const SdfLayerHandle &, const SdfPath &, bool)
Sdf_ChangeManager::DidChangeField - Comparing old/new PrimChildren order
TfIterator<T, Reverse> &TfIterator<const std::__1::map<SdfPath, SdfChangeList::Entry, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfChangeList::Entry> > >, false>::operator++() [T = const std::__1::map<SdfPath, SdfChangeList::Entry, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfChangeList::Entry> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<SdfPath, SdfChangeList::Entry, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfChangeList::Entry> > >, false>::operator->() [T = const std::__1::map<SdfPath, SdfChangeList::Entry, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfChangeList::Entry> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<TfToken, std::__1::pair<VtValue, VtValue>, TfTokenFastArbitraryLessThan, std::__1::allocator<std::__1::pair<const TfToken, std::__1::pair<VtValue, VtValue> > > >, false>::operator++() [T = const std::__1::map<TfToken, std::__1::pair<VtValue, VtValue>, TfTokenFastArbitraryLessThan, std::__1::allocator<std::__1::pair<const TfToken, std::__1::pair<VtValue, VtValue> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<TfToken, std::__1::pair<VtValue, VtValue>, TfTokenFastArbitraryLessThan, std::__1::allocator<std::__1::pair<const TfToken, std::__1::pair<VtValue, VtValue> > > >, false>::operator->() [T = const std::__1::map<TfToken, std::__1::pair<VtValue, VtValue>, TfTokenFastArbitraryLessThan, std::__1::allocator<std::__1::pair<const TfToken, std::__1::pair<VtValue, VtValue> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfSpec, std::__1::allocator<SdfSpec> >, false>::operator++() [T = std::__1::vector<SdfSpec, std::__1::allocator<SdfSpec> >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<SdfSpec, std::__1::allocator<SdfSpec> >, false>::operator->() [T = std::__1::vector<SdfSpec, std::__1::allocator<SdfSpec> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfSpec, std::__1::allocator<SdfSpec> >, false>::operator*() [T = std::__1::vector<SdfSpec, std::__1::allocator<SdfSpec> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, false>::operator++() [T = std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, false>::operator->() [T = std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/children.cpp
GetChild
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_AttributeChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_AttributeChildPolicy]
IsValid()
size_t Sdf_Children<Sdf_AttributeChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_AttributeChildPolicy]
FindKey
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_AttributeChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_AttributeChildPolicy]
Copy
bool Sdf_Children<Sdf_AttributeChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_AttributeChildPolicy]
Insert
bool Sdf_Children<Sdf_AttributeChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_AttributeChildPolicy]
Erase
bool Sdf_Children<Sdf_AttributeChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_AttributeChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_MapperChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_MapperChildPolicy]
size_t Sdf_Children<Sdf_MapperChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_MapperChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_MapperChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_MapperChildPolicy]
bool Sdf_Children<Sdf_MapperChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_MapperChildPolicy]
bool Sdf_Children<Sdf_MapperChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_MapperChildPolicy]
bool Sdf_Children<Sdf_MapperChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_MapperChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_MapperArgChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_MapperArgChildPolicy]
size_t Sdf_Children<Sdf_MapperArgChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_MapperArgChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_MapperArgChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_MapperArgChildPolicy]
bool Sdf_Children<Sdf_MapperArgChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_MapperArgChildPolicy]
bool Sdf_Children<Sdf_MapperArgChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_MapperArgChildPolicy]
bool Sdf_Children<Sdf_MapperArgChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_MapperArgChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_PrimChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_PrimChildPolicy]
size_t Sdf_Children<Sdf_PrimChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_PrimChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_PrimChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_PrimChildPolicy]
bool Sdf_Children<Sdf_PrimChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_PrimChildPolicy]
bool Sdf_Children<Sdf_PrimChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_PrimChildPolicy]
bool Sdf_Children<Sdf_PrimChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_PrimChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_PropertyChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_PropertyChildPolicy]
size_t Sdf_Children<Sdf_PropertyChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_PropertyChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_PropertyChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_PropertyChildPolicy]
bool Sdf_Children<Sdf_PropertyChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_PropertyChildPolicy]
bool Sdf_Children<Sdf_PropertyChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_PropertyChildPolicy]
bool Sdf_Children<Sdf_PropertyChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_PropertyChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_RelationshipChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_RelationshipChildPolicy]
size_t Sdf_Children<Sdf_RelationshipChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_RelationshipChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_RelationshipChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_RelationshipChildPolicy]
bool Sdf_Children<Sdf_RelationshipChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_RelationshipChildPolicy]
bool Sdf_Children<Sdf_RelationshipChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_RelationshipChildPolicy]
bool Sdf_Children<Sdf_RelationshipChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_RelationshipChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_VariantChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_VariantChildPolicy]
size_t Sdf_Children<Sdf_VariantChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_VariantChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_VariantChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_VariantChildPolicy]
bool Sdf_Children<Sdf_VariantChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_VariantChildPolicy]
bool Sdf_Children<Sdf_VariantChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_VariantChildPolicy]
bool Sdf_Children<Sdf_VariantChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_VariantChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_VariantSetChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_VariantSetChildPolicy]
size_t Sdf_Children<Sdf_VariantSetChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_VariantSetChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_VariantSetChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_VariantSetChildPolicy]
bool Sdf_Children<Sdf_VariantSetChildPolicy>::Copy(const std::vector<ValueType> &, const std::string &) [ChildPolicy = Sdf_VariantSetChildPolicy]
bool Sdf_Children<Sdf_VariantSetChildPolicy>::Insert(const Sdf_Children::ValueType &, size_t, const std::string &) [ChildPolicy = Sdf_VariantSetChildPolicy]
bool Sdf_Children<Sdf_VariantSetChildPolicy>::Erase(const Sdf_Children::KeyType &, const std::string &) [ChildPolicy = Sdf_VariantSetChildPolicy]
SdfHandle::SpecType *SdfHandle<SdfMapperArgSpec>::operator->() const [T = SdfMapperArgSpec]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/childrenUtils.cpp
CanRename
static SdfAllowed Sdf_ChildrenUtils<Sdf_MapperChildPolicy>::CanRename(const SdfSpec &, const SdfPath &) [ChildPolicy = Sdf_MapperChildPolicy]
Cannot rename mappers
Rename
static bool Sdf_ChildrenUtils<Sdf_MapperChildPolicy>::Rename(const SdfSpec &, const SdfPath &) [ChildPolicy = Sdf_MapperChildPolicy]
static SdfAllowed Sdf_ChildrenUtils<Sdf_AttributeConnectionChildPolicy>::CanRename(const SdfSpec &, const SdfPath &) [ChildPolicy = Sdf_AttributeConnectionChildPolicy]
Cannot rename attribute connections
static bool Sdf_ChildrenUtils<Sdf_AttributeConnectionChildPolicy>::Rename(const SdfSpec &, const SdfPath &) [ChildPolicy = Sdf_AttributeConnectionChildPolicy]
static SdfAllowed Sdf_ChildrenUtils<Sdf_RelationshipTargetChildPolicy>::CanRename(const SdfSpec &, const SdfPath &) [ChildPolicy = Sdf_RelationshipTargetChildPolicy]
Cannot rename relationship targets
static bool Sdf_ChildrenUtils<Sdf_RelationshipTargetChildPolicy>::Rename(const SdfSpec &, const SdfPath &) [ChildPolicy = Sdf_RelationshipTargetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_AttributeChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_AttributeChildPolicy]
Invalid object type
Failed to create spec of type '%s' at <%s>
Layer is not editable
Cannot rename %s to invalid name '%s'
An object with that name already exists
static bool Sdf_ChildrenUtils<Sdf_AttributeChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_AttributeChildPolicy]
Cannot rename %s to %s because a sibling with that name already exists
SetChildren
static bool Sdf_ChildrenUtils<Sdf_AttributeChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_AttributeChildPolicy]
Invalid child
Duplicate child
Cannot reparent to another layer
Cannot reparent child under itself
An object was not in its parent's list of children
InsertChild
static bool Sdf_ChildrenUtils<Sdf_AttributeChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_AttributeChildPolicy]
Attempt to insert spec %s at an invalid index %zd
Attempt to insert duplicate spec %s
Object does not exist
Invalid name
Cannot reparent object under itself
Invalid index
Coding error: Object is not in its parent's children
static bool Sdf_ChildrenUtils<Sdf_MapperChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_MapperChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_MapperChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_MapperChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_MapperChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_MapperChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_MapperArgChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_MapperArgChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_MapperArgChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_MapperArgChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_MapperArgChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_MapperArgChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_MapperArgChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_MapperArgChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_ExpressionChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_ExpressionChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_ExpressionChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_ExpressionChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_ExpressionChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_ExpressionChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_ExpressionChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_ExpressionChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PrimChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_PrimChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PrimChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_PrimChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PrimChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_PrimChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PrimChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_PrimChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PropertyChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_PropertyChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PropertyChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_PropertyChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PropertyChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_PropertyChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_PropertyChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_PropertyChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_RelationshipChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_RelationshipChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_RelationshipChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_RelationshipChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_VariantChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_VariantChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_VariantChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_VariantChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantSetChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_VariantSetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantSetChildPolicy>::Rename(const SdfSpec &, const typename ChildPolicy::FieldType &) [ChildPolicy = Sdf_VariantSetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantSetChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_VariantSetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantSetChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_VariantSetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipTargetChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_RelationshipTargetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipTargetChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_RelationshipTargetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipTargetChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_RelationshipTargetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_AttributeConnectionChildPolicy>::CreateSpec(const SdfLayerHandle &, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_AttributeConnectionChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_AttributeConnectionChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::ValueType> &) [ChildPolicy = Sdf_AttributeConnectionChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_AttributeConnectionChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, size_t) [ChildPolicy = Sdf_AttributeConnectionChildPolicy]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfAttributeSpec>, std::__1::allocator<SdfHandle<SdfAttributeSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfMapperSpec>, std::__1::allocator<SdfHandle<SdfMapperSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfMapperArgSpec>, std::__1::allocator<SdfHandle<SdfMapperArgSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfSpec>, std::__1::allocator<SdfHandle<SdfSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfPropertySpec>, std::__1::allocator<SdfHandle<SdfPropertySpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfRelationshipSpec>, std::__1::allocator<SdfHandle<SdfRelationshipSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfVariantSetSpec>, std::__1::allocator<SdfHandle<SdfVariantSetSpec> > >, Reverse = false]
../ModelKit/extern/usd/pxr/base/tf/stacked.h
static void TfStacked<SdfCleanupEnabler, false, Tf_ExportedStackedStorage<SdfCleanupEnabler, false> >::_Pop(const Derived *) [Derived = SdfCleanupEnabler, PerThread = false, Holder = Tf_ExportedStackedStorage<SdfCleanupEnabler, false>]
Destroyed %s out of stack order.
static void TfSingleton<Sdf_CleanupTracker>::SetInstanceConstructed(T &) [T = Sdf_CleanupTracker]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/connectionListEditor.cpp
_OnEditShared
void Sdf_ConnectionListEditor<Sdf_AttributeConnectionChildPolicy>::_OnEditShared(SdfListOpType, SdfSpecType, const std::vector<SdfPath> &, const std::vector<SdfPath> &) const [ConnectionChildPolicy = Sdf_AttributeConnectionChildPolicy]
Failed to remove spec at <%s>
Failed to create spec at <%s>
void Sdf_ConnectionListEditor<Sdf_RelationshipTargetChildPolicy>::_OnEditShared(SdfListOpType, SdfSpecType, const std::vector<SdfPath> &, const std::vector<SdfPath> &) const [ConnectionChildPolicy = Sdf_RelationshipTargetChildPolicy]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/data.cpp
virtual void SdfData::EraseSpec(const SdfAbstractDataSpecId &)
i != _data.end()
No spec to erase at <%s>
virtual void SdfData::MoveSpec(const SdfAbstractDataSpecId &, const SdfAbstractDataSpecId &)
old != _data.end()
No spec to move at <%s>
virtual void SdfData::CreateSpec(const SdfAbstractDataSpecId &, SdfSpecType)
SdfData::Set
_GetOrCreateFieldValue
VtValue *SdfData::_GetOrCreateFieldValue(const SdfAbstractDataSpecId &, const TfToken &)
No spec at <%s> when trying to set field '%s'
TfIterator<T, Reverse> &TfIterator<const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfData::_SpecData> > >, false>::operator++() [T = const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfData::_SpecData> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfData::_SpecData> > >, false>::operator->() [T = const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfData::_SpecData> > >, Reverse = false]
target
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/fileFormat.cpp
IsStreamingLayer
bool SdfFileFormat::IsStreamingLayer(const SdfLayerBase &) const
Layer does not use file format '%s'
GetPrimaryFileExtension
const std::string &SdfFileFormat::GetPrimaryFileExtension() const
!_extensions.empty()
temp_file_name
_IssueNewLayerFailError
void SdfFileFormat::_IssueNewLayerFailError(const SdfLayerBaseRefPtr &, const std::type_info &, const std::string &, const std::string &) const
NewLayer: expected %s to create a %s, got %s%s instead (identifier: %s, realPath: %s)
NULL
TfTypeid
const std::type_info &TfTypeid(const TfRefPtr<T> &) [T = SdfLayerBase]
called TfTypeid on NULL TfRefPtr
FindById
SdfFileFormatConstPtr Sdf_FileFormatRegistry::FindById(const TfToken &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/fileFormatRegistry.cpp
Cannot find file format for empty id
FindByExtension
SdfFileFormatConstPtr Sdf_FileFormatRegistry::FindByExtension(const std::__1::string &, const std::__1::string &)
Cannot find file format for empty string
Unable to determine extension for '%s'
_RegisterFormatPlugins
void Sdf_FileFormatRegistry::_RegisterFormatPlugins()
Sdf_FileFormatRegistry::_RegisterFormatPlugins
Registering file format plugins
!formatBaseType.IsUnknown()
_RegisterFormatPlugins: Type '%s'
_RegisterFormatPlugins:   plugin '%s'
_RegisterFormatPlugins: No format identifier for type '%s', skipping.
Unexpected value type for key '%s' in plugin meta data for file format type '%s'
File format '%s' plugin meta data '%s' is empty
_RegisterFormatPlugins:   formatId '%s'
_RegisterFormatPlugins: No extensions registered for type '%s', skipping.
_RegisterFormatPlugins:     Found target for type '%s' from type '%s'
_RegisterFormatPlugins: No target for type '%s', skipping.
_RegisterFormatPlugins:   target '%s'
Duplicate registration for file format '%s'
_RegisterFormatPlugins:   extension '%s'
Multiple file formats with target '%s' registered for extension '%s', skipping.
!infos.empty()
Multiple primary file formats specified for extension '%s', skipping.
No primary file format specified for extension '%s', skipping.
_formatInfo.empty()
_extensionIndex.empty()
_fullExtensionIndex.empty()
SdfFileFormatConstPtr Sdf_FileFormatRegistry::_GetFileFormat(const Sdf_FileFormatRegistry::_InfoSharedPtr &)
info
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, false>::operator++() [T = const std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, false>::operator*() [T = const std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, Reverse = false]
formatId
extensions
primary
TfIterator<T, Reverse> &TfIterator<std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, false>::operator++() [T = std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, false>::operator*() [T = std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > > > > >, false>::operator++() [T = TfHashMap<std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashMap<std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > > > > >, false>::operator->() [T = TfHashMap<std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > >, TfHash, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>, std::__1::allocator<boost::shared_ptr<Sdf_FileFormatRegistry::_Info> > > > > >, Reverse = false]
variantSet 
 = {
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/fileIO.cpp
Sdf_WriteToStream
bool Sdf_WriteToStream(const SdfSpec &, std::ostream &, size_t)
Cannot write spec of type %s to stream
permission = %s
permission = %s
symmetryFunction = %s%s
payload = 
../ModelKit/extern/usd/pxr/usd/sdf/fileIO_Common.h
Sdf_WritePrimMetadata
bool Sdf_WritePrimMetadata(const SdfPrimSpec &, std::ostream &, size_t)
'%s' field holding unexpected type '%s'
variantSets = 
delete variantSets = 
add variantSets = 
prepend variantSets = 
append variantSets = 
reorder variantSets = 
inherits
prefixSubstitutions = 
suffixSubstitutions = 
variants = 
bool SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>::_Validate() const [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
TfIterator::ArrowReturnType TfIterator<const SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>, false>::operator->() [T = const SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>, Reverse = false]
Dereference
static const SdfMapEditProxy::value_type &SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>::Traits::Dereference(const SdfMapEditProxy::This *, const SdfMapEditProxy::Type *, SdfMapEditProxy::const_inner_iterator) [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
Dereferenced an invalid map proxy iterator
TfIterator<T, Reverse> &TfIterator<const SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>, false>::operator++() [T = const SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>, Reverse = false]
bool SdfMapEditProxy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >::_Validate() const [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >]
TfIterator::ArrowReturnType TfIterator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, false>::operator->() [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, false>::operator++() [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, Reverse = false]
reorder properties = 
reorder nameChildren = 
%s%s%s 
%s%s%s %s
custom 
permission = %s%s
displayUnit = %s%s
%s%s %s.timeSamples = {
Sdf_WriteAttribute
bool Sdf_WriteAttribute(const SdfAttributeSpec &, std::ostream &, size_t)
%s%s %s.mapper[ 
 ] = %s
symmetryArguments = 
%s %s = %s
delete 
add 
prepend 
append 
reorder 
%s%s%s %s.connect = 
None
bool SdfListProxy<SdfPathKeyPolicy>::_Iterator<const SdfListProxy<SdfPathKeyPolicy> *, SdfListProxy<SdfPathKeyPolicy>::_ConstGetHelper>::equal(const SdfListProxy::_Iterator::This &) const [_TypePolicy = SdfPathKeyPolicy, Owner = const SdfListProxy<SdfPathKeyPolicy> *, GetItem = SdfListProxy<SdfPathKeyPolicy>::_ConstGetHelper]
TfIterator::StarReturnType TfIterator<const SdfListProxy<SdfPathKeyPolicy>, false>::operator*() [T = const SdfListProxy<SdfPathKeyPolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfListProxy<SdfPathKeyPolicy>, false>::operator++() [T = const SdfListProxy<SdfPathKeyPolicy>, Reverse = false]
bool SdfChildrenProxy<SdfChildrenView<Sdf_MapperArgChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfMapperArgSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfMapperArgSpec> > > >::_Validate() const [_View = SdfChildrenView<Sdf_MapperArgChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfMapperArgSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfMapperArgSpec> > >]
TfIterator::ArrowReturnType TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_MapperArgChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfMapperArgSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfMapperArgSpec> > > >, false>::operator->() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_MapperArgChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfMapperArgSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfMapperArgSpec> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_MapperArgChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfMapperArgSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfMapperArgSpec> > > >, false>::operator++() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_MapperArgChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfMapperArgSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfMapperArgSpec> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > >, false>::operator->() [T = std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > >, false>::operator++() [T = std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > >, Reverse = false]
varying 
custom %srel %s
%srel %s
 = None
custom %srel %s
delete %srel %s
add %srel %s
prepend %srel %s
append %srel %s
reorder %srel %s
%srel %s.timeSamples = {
%srel %s.default = 
 = [
reorder attributes = 
bool SdfListProxy<SdfPathKeyPolicy>::_Iterator<SdfListProxy<SdfPathKeyPolicy> *, SdfListProxy<SdfPathKeyPolicy>::_GetHelper>::equal(const SdfListProxy::_Iterator::This &) const [_TypePolicy = SdfPathKeyPolicy, Owner = SdfListProxy<SdfPathKeyPolicy> *, GetItem = SdfListProxy<SdfPathKeyPolicy>::_GetHelper]
rel 
 = %s
<%s>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/fileIO_Common.cpp
WriteSdfPath
static void Sdf_FileIOUtility::WriteSdfPath(std::__1::ostream &, size_t, const SdfPath &, const std::__1::string &)
Encountered 'None' marker, this should not happen.
Authored markers can't be authored in menva as by object modelling.
<%s> @ %s
<%s> @ <%s>
%s: 
relocates = %s
_WriteDictionary
static void Sdf_FileIOUtility::_WriteDictionary(std::__1::ostream &, size_t, bool, Sdf_FileIOUtility::_OrderedDictionary &, bool)
Dictionary has a non-string value under key "%s"; skipping
dictionary %s = 
%s %s = 
offset = %s%s
scale = %s%s
0123456789abcedf
Stringify
static const char *Sdf_FileIOUtility::Stringify(SdfPermission)
unknown value
over
class
static const char *Sdf_FileIOUtility::Stringify(SdfSpecifier)
uniform
config
static const char *Sdf_FileIOUtility::Stringify(SdfVariability)
\@@@
TfIterator<T, Reverse> &TfIterator<std::__1::map<const std::__1::basic_string<char> *, const VtValue *, Sdf_FileIOUtility::_StringLessThan, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char> *const, const VtValue *> > >, false>::operator++() [T = std::__1::map<const std::__1::basic_string<char> *, const VtValue *, Sdf_FileIOUtility::_StringLessThan, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char> *const, const VtValue *> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<const std::__1::basic_string<char> *, const VtValue *, Sdf_FileIOUtility::_StringLessThan, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char> *const, const VtValue *> > >, false>::operator->() [T = std::__1::map<const std::__1::basic_string<char> *, const VtValue *, Sdf_FileIOUtility::_StringLessThan, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char> *const, const VtValue *> > >, Reverse = false]
delete
prepend
append
reorder
%s%s%s = 
customData = 
TfIterator<T, Reverse> &TfIterator<const std::__1::basic_string<char>, false>::operator++() [T = const std::__1::basic_string<char>, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::basic_string<char>, false>::operator*() [T = const std::__1::basic_string<char>, Reverse = false]
Sdf_IdentityRegistry::Identify
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/identity.cpp
MoveIdentity
void Sdf_IdentityRegistry::MoveIdentity(const SdfPath &, const SdfPath &)
newIdStatus.first->second
TfIterator<T, Reverse> &TfIterator<TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, Sdf_Identity *> > >, false>::operator++() [T = TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, Sdf_Identity *> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, Sdf_Identity *> > >, false>::operator*() [T = TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, Sdf_Identity *> > >, Reverse = false]
SdfLayer::SdfLayer('%s', '%s')
SdfLayer::~SdfLayer('%s')
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/layer.cpp
CreateAnonymous
static SdfLayerRefPtr SdfLayer::CreateAnonymous(const std::__1::string &)
Cannot determine file format for anonymous SdfLayer
SdfLayer::CreateNew('%s', '%s', '%s')
SdfLayer::CreateNew('%s', '%s', '%s', '%s')
_CreateNew
static SdfLayerRefPtr SdfLayer::_CreateNew(SdfFileFormatConstPtr, const std::__1::string &, const std::__1::string &, const ArAssetInfo &, const SdfLayerBase::FileFormatArguments &)
Cannot create a new layer with anonymous layer identifier '%s'.
Cannot create new layer '%s': %s
A layer already exists with identifier '%s'
Failed to compute local path for new layer with identifier '%s'
fileFormat
static SdfLayerRefPtr SdfLayer::New(const SdfFileFormatConstPtr &, const std::__1::string &, const std::__1::string &, const SdfLayerBase::FileFormatArguments &)
Invalid file format
Cannot construct a layer with an empty identifier.
_ComputeInfoToFindOrOpenLayer
static bool SdfLayer::_ComputeInfoToFindOrOpenLayer(const std::__1::string &, const SdfLayer::FileFormatArguments &, SdfLayer::_FindOrOpenLayerInfo *)
FindOrOpen
static SdfLayerRefPtr SdfLayer::FindOrOpen(const std::__1::string &, const SdfLayerBase::FileFormatArguments &)
SdfLayer::FindOrOpen('%s', '%s')
OpenAsAnonymous
static SdfLayerRefPtr SdfLayer::OpenAsAnonymous(const std::string &, bool, const std::string &)
Cannot locate file format plugin for reading @%s@
_Reload
SdfLayer::_ReloadResult SdfLayer::_Reload(bool)
Can't reload a layer with no identifier
Cannot determine real path for '%s', skipping reload.
Unable to get modification time for '%s (%s)'
Reloading %zu layer(s)
ReloadLayers
static bool SdfLayer::ReloadLayers(const set<SdfLayerHandle> &, bool)
Unable to re-read @%s@
_Read
bool SdfLayer::_Read(const std::__1::string &, const std::__1::string &, bool)
SdfLayer::_Read
Loading layer '%s'
SdfLayer::_Read('%s', '%s', metadataOnly=%s)
SdfLayer::_Read - unable to fetch '%s' to local path '%s'
SdfLayer::_Read - fetched '%s' to local path '%s'
static SdfLayerHandle SdfLayer::Find(const std::__1::string &, const SdfLayerBase::FileFormatArguments &)
FindRelativeToLayer
static SdfLayerHandle SdfLayer::FindRelativeToLayer(const SdfLayerHandle &, const std::__1::string &, const SdfLayerBase::FileFormatArguments &)
Anchor layer is invalid
SetTimeSample
void SdfLayer::SetTimeSample(const SdfAbstractDataSpecId &, double, const VtValue &)
Cannot set time sample on <%s>.  Layer @%s@ is not editable.
Can't set time sample on <%s> to %s: expected a value of type "%s"
void SdfLayer::SetTimeSample(const SdfAbstractDataSpecId &, double, const SdfAbstractDataConstValue &)
EraseTimeSample
void SdfLayer::EraseTimeSample(const SdfAbstractDataSpecId &, double)
Cannot SetTimeSample at <%s> since spec does not exist
_PrimSetTimeSample
void SdfLayer::_PrimSetTimeSample(const SdfAbstractDataSpecId &, double, const T &, bool) [T = VtValue]
_stateDelegate
void SdfLayer::_PrimSetTimeSample(const SdfAbstractDataSpecId &, double, const T &, bool) [T = SdfAbstractDataConstValue]
_InitializeFromIdentifier
void SdfLayer::_InitializeFromIdentifier(const std::__1::string &, const std::__1::string &, const std::__1::string &, const ArAssetInfo &)
GetSubLayerOffset
SdfLayerOffset SdfLayer::GetSubLayerOffset(int) const
Invalid sublayer index
SetSubLayerOffset
void SdfLayer::SetSubLayerOffset(const SdfLayerOffset &, int)
SetIdentifier
void SdfLayer::SetIdentifier(const std::__1::string &)
SdfLayer::SetIdentifier('%s')
Sdf_SplitIdentifier( GetIdentifier(), &oldLayerPath, &oldArguments)
Invalid identifier '%s'
Identifier '%s' contains arguments that differ from the layer's current arguments ('%s').
UpdateAssetInfo
void SdfLayer::UpdateAssetInfo(const std::__1::string &)
SdfLayer::UpdateAssetInfo('%s')
AddToMutedLayers
static void SdfLayer::AddToMutedLayers(const std::__1::string &)
(*_mutedLayerData).find(path) == (*_mutedLayerData).end()
layer->IsDirty()
RemoveFromMutedLayers
static void SdfLayer::RemoveFromMutedLayers(const std::__1::string &)
i != _mutedLayerData->end()
mutedData
Clear
void SdfLayer::Clear()
Clear: Permission denied.
IsDirty
bool SdfLayer::IsDirty() const
SetStateDelegate
void SdfLayer::SetStateDelegate(const SdfLayerStateDelegateBaseRefPtr &)
Invalid layer state delegate
_MarkCurrentStateAsClean
void SdfLayer::_MarkCurrentStateAsClean() const
TransferContent
void SdfLayer::TransferContent(const SdfLayerHandle &)
TransferContent of '%s': Permission denied.
_UpdateReferencePaths
void SdfLayer::_UpdateReferencePaths(const SdfPrimSpecHandle &, const std::__1::string &, const std::__1::string &)
!oldLayerPath.empty()
Layer Registry Dump:
SetField
void SdfLayer::SetField(const SdfAbstractDataSpecId &, const TfToken &, const VtValue &)
Cannot set %s on <%s>. Layer @%s@ is not editable.
void SdfLayer::SetField(const SdfAbstractDataSpecId &, const TfToken &, const SdfAbstractDataConstValue &)
SetFieldDictValueByKey
void SdfLayer::SetFieldDictValueByKey(const SdfAbstractDataSpecId &, const TfToken &, const TfToken &, const VtValue &)
Cannot set %s:%s on <%s>. Layer @%s@ is not editable.
void SdfLayer::SetFieldDictValueByKey(const SdfAbstractDataSpecId &, const TfToken &, const TfToken &, const SdfAbstractDataConstValue &)
EraseField
void SdfLayer::EraseField(const SdfAbstractDataSpecId &, const TfToken &)
Cannot erase %s on <%s>. Layer @%s@ is not editable.
EraseFieldDictValueByKey
void SdfLayer::EraseFieldDictValueByKey(const SdfAbstractDataSpecId &, const TfToken &, const TfToken &)
Cannot erase %s:%s on <%s>. Layer @%s@ is not editable.
_SetData
void SdfLayer::_SetData(const SdfAbstractDataPtr &)
Setting layer data
!newData->IsEmpty()
_PrimSetField
void SdfLayer::_PrimSetField(const SdfAbstractDataSpecId &, const TfToken &, const T &, const VtValue *, bool) [T = VtValue]
void SdfLayer::_PrimSetField(const SdfAbstractDataSpecId &, const TfToken &, const T &, const VtValue *, bool) [T = SdfAbstractDataConstValue]
_PrimPushChild
void SdfLayer::_PrimPushChild(const SdfPath &, const TfToken &, const T &, bool) [T = TfToken]
void SdfLayer::_PrimPushChild(const SdfPath &, const TfToken &, const T &, bool) [T = SdfPath]
_PrimPopChild
void SdfLayer::_PrimPopChild(const SdfPath &, const TfToken &, bool) [T = TfToken]
SdfLayer::_PrimPopChild failed: field %s is empty vector
SdfLayer::_PrimPopChild failed: field %s is non-vector
SdfLayer::_PrimPopChild failed: %s is empty
void SdfLayer::_PrimPopChild(const SdfPath &, const TfToken &, bool) [T = SdfPath]
_PrimSetFieldDictValueByKey
void SdfLayer::_PrimSetFieldDictValueByKey(const SdfAbstractDataSpecId &, const TfToken &, const TfToken &, const T &, const VtValue *, bool) [T = VtValue]
void SdfLayer::_PrimSetFieldDictValueByKey(const SdfAbstractDataSpecId &, const TfToken &, const TfToken &, const T &, const VtValue *, bool) [T = SdfAbstractDataConstValue]
_MoveSpec
bool SdfLayer::_MoveSpec(const SdfPath &, const SdfPath &)
Cannot move <%s> to <%s>. Layer @%s@ is not editable.
Cannot move <%s> to <%s>. Source and destination must be non-empty paths
Cannot move <%s> to <%s>. Source and destination must not overlap
_PrimMoveSpec
void SdfLayer::_PrimMoveSpec(const SdfPath &, const SdfPath &, bool)
_CreateSpec
bool SdfLayer::_CreateSpec(const SdfPath &, SdfSpecType, bool)
Cannot create spec at <%s>. Layer @%s@ is not editable.
Cannot create spec <%s> because it already exists in @%s@
_DeleteSpec
bool SdfLayer::_DeleteSpec(const SdfPath &)
Cannot delete <%s>. Layer @%s@ is not editable
_PrimDeleteSpec
void SdfLayer::_PrimDeleteSpec(const SdfPath &, bool, bool)
_PrimCreateSpec
void SdfLayer::_PrimCreateSpec(const SdfPath &, SdfSpecType, bool, bool)
_IsInert
bool SdfLayer::_IsInert(const SdfPath &, bool, bool) const
specDefinition
ExportToString
bool SdfLayer::ExportToString(std::string *) const
Writing layer @%s@
_WriteToFile
bool SdfLayer::_WriteToFile(const std::__1::string &, const std::__1::string &, SdfFileFormatConstPtr, const SdfLayerBase::FileFormatArguments &) const
Cannot save layer @%s@, saving not allowed
Cannot create destination directory %s
Unknown file format when attempting to write '%s'
_Save
bool SdfLayer::_Save(bool) const
Cannot save muted layer @%s@
Cannot save anonymous layer @%s@
Unable to get modification timestamp for '%s (%s)'
_GetExpectedTimeSampleValueType
TfType _GetExpectedTimeSampleValueType(const SdfLayer &, const SdfAbstractDataSpecId &)
Cannot set time sample at <%s> since spec does not exist
Cannot set time sample at <%s> because spec is not an attribute or relationship
Cannot determine value type for <%s>
_GetVtValue
VtValue _GetVtValue(const SdfAbstractDataConstValue &)
v.GetValue(&value)
Object is not an attribute
TfIterator<T, Reverse> &TfIterator<const std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, false>::operator++() [T = const std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, false>::operator->() [T = const std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, Reverse = false]
SdfLayer::_OpenLayerAndUnlockRegistry 
_OpenLayerAndUnlockRegistry
static SdfLayerRefPtr SdfLayer::_OpenLayerAndUnlockRegistry(Lock &, const SdfLayer::_FindOrOpenLayerInfo &, bool, const std::__1::string &, const ArAssetInfo &, bool) [Lock = tbb::queuing_rw_mutex::scoped_lock]
SdfLayer::_OpenLayerAndUnlockRegistry('%s', '%s', '%s', '%s', metadataOnly=%s)
unknown file format
True
False
Cannot determine file format for @%s@
_layerRegistry-> FindByIdentifier(layer->GetIdentifier()) == layer
Could not find %s
Opened anonymous layer ('%s' with format id '%s') but resulting layer is not anonymous.
Opened layer without anonymous prefix ('%s' with format id '%s') but resulting layer is anonymous.
TfIterator<T, Reverse> &TfIterator<const std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, false>::operator++() [T = const std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, false>::operator*() [T = const std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, Reverse = false]
T *TfRefPtr<SdfLayerStateDelegateBase>::operator->() const [U = SdfLayerStateDelegateBase]
void SdfListProxy<SdfSubLayerTypePolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfSubLayerTypePolicy]
bool SdfListProxy<SdfSubLayerTypePolicy>::_Validate() [_TypePolicy = SdfSubLayerTypePolicy]
bool SdfListProxy<SdfSubLayerTypePolicy>::_Validate() const [_TypePolicy = SdfSubLayerTypePolicy]
TfIterator<T, Reverse> &TfIterator<SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec> > >, false>::operator++() [T = SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec> > >, false>::operator*() [T = SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, false>::operator++() [T = std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, false>::operator*() [T = std::__1::vector<SdfHandle<SdfPrimSpec>, std::__1::allocator<SdfHandle<SdfPrimSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, false>::operator++() [T = SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, false>::operator->() [T = SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, false>::operator++() [T = const std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, false>::operator*() [T = const std::__1::vector<SdfHandle<SdfVariantSpec>, std::__1::allocator<SdfHandle<SdfVariantSpec> > >, Reverse = false]
T *TfRefPtr<SdfData>::operator->() const [U = SdfData]
equal
bool SdfListProxy<SdfSubLayerTypePolicy>::_Iterator<SdfListProxy<SdfSubLayerTypePolicy> *, SdfListProxy<SdfSubLayerTypePolicy>::_GetHelper>::equal(const SdfListProxy::_Iterator::This &) const [_TypePolicy = SdfSubLayerTypePolicy, Owner = SdfListProxy<SdfSubLayerTypePolicy> *, GetItem = SdfListProxy<SdfSubLayerTypePolicy>::_GetHelper]
Comparing SdfListProxy iterators from different proxies!
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfAbstractData>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfAbstractData]
TfIterator<T, Reverse> &TfIterator<std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, true>::operator++() [T = std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, Reverse = true]
TfIterator::StarReturnType TfIterator<std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, true>::operator*() [T = std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, Reverse = true]
TfIterator::StarReturnType TfIterator<std::__1::vector<TfToken, std::__1::allocator<TfToken> >, false>::operator*() [T = std::__1::vector<TfToken, std::__1::allocator<TfToken> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, false>::operator++() [T = std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, false>::operator*() [T = std::__1::set<SdfPath, std::__1::less<SdfPath>, std::__1::allocator<SdfPath> >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/layerBase.cpp
SdfLayerBase
SdfLayerBase::SdfLayerBase(const SdfFileFormatConstPtr &, const SdfLayerBase::FileFormatArguments &)
_fileFormat
SdfLayerOffset(
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/layerRegistry.cpp
Sdf_LayerRegistry::layer_repository_path::result_type Sdf_LayerRegistry::layer_repository_path::operator()(const SdfLayerHandle &) const
Sdf_SplitIdentifier( layer->GetIdentifier(), &layerPath, &arguments)
Sdf_LayerRegistry::layer_real_path::result_type Sdf_LayerRegistry::layer_real_path::operator()(const SdfLayerHandle &) const
InsertOrUpdate
void Sdf_LayerRegistry::InsertOrUpdate(const SdfLayerHandle &)
Expired layer handle
Sdf_LayerRegistry::InsertOrUpdate(%s)
Cannot insert duplicate registry entry for %s layer %s over existing entry for %s layer %s
Sdf_LayerRegistry::Erase(%s) => %s
Success
Failed
SdfLayerHandle Sdf_LayerRegistry::Find(const std::__1::string &, const std::__1::string &) const
Sdf_LayerRegistry::Find('%s') => %s
FindByIdentifier
SdfLayerHandle Sdf_LayerRegistry::FindByIdentifier(const std::__1::string &) const
Sdf_LayerRegistry::FindByIdentifier('%s') => %s
Found
Not Found
FindByRepositoryPath
SdfLayerHandle Sdf_LayerRegistry::FindByRepositoryPath(const std::__1::string &) const
Sdf_LayerRegistry::FindByRepositoryPath('%s') => %s
FindByRealPath
SdfLayerHandle Sdf_LayerRegistry::FindByRealPath(const std::__1::string &, const std::__1::string &) const
Sdf_LayerRegistry::FindByRealPath('%s') => %s
GetLayers
SdfLayerHandleSet Sdf_LayerRegistry::GetLayers() const
Found expired layer in registry
%1%[ref=%2%]:
    format           = %3%
    identifier       = '%4%'
    repositoryPath   = '%5%'
    realPath         = '%6%'
    version          = '%7%'
    assetInfo        = 
'%8%'
    muted            = %9%
    anonymous        = %10%
SdfLayer('
seekpos
../ModelKit/extern/boost/boost/format/alt_sstream_impl.hpp
TfIterator<T, Reverse> &TfIterator<const boost::multi_index::detail::hashed_index<boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, std::__1::equal_to<TfWeakPtr<SdfLayer> >, boost::multi_index::detail::nth_layer<1, TfWeakPtr<SdfLayer>, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identity, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, mpl_::na>, boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_real_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_real_path, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identifier, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_identifier, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_repository_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_repository_path, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, boost::mpl::v_item<Sdf_LayerRegistry::by_identity, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>, false>::operator++() [T = const boost::multi_index::detail::hashed_index<boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, std::__1::equal_to<TfWeakPtr<SdfLayer> >, boost::multi_index::detail::nth_layer<1, TfWeakPtr<SdfLayer>, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identity, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, mpl_::na>, boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_real_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_real_path, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identifier, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_identifier, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_repository_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_repository_path, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, boost::mpl::v_item<Sdf_LayerRegistry::by_identity, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>, Reverse = false]
TfIterator::StarReturnType TfIterator<const boost::multi_index::detail::hashed_index<boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, std::__1::equal_to<TfWeakPtr<SdfLayer> >, boost::multi_index::detail::nth_layer<1, TfWeakPtr<SdfLayer>, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identity, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, mpl_::na>, boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_real_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_real_path, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identifier, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_identifier, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_repository_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_repository_path, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, boost::mpl::v_item<Sdf_LayerRegistry::by_identity, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>, false>::operator*() [T = const boost::multi_index::detail::hashed_index<boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, std::__1::equal_to<TfWeakPtr<SdfLayer> >, boost::multi_index::detail::nth_layer<1, TfWeakPtr<SdfLayer>, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identity, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::identity<TfWeakPtr<SdfLayer> >, TfHash, mpl_::na>, boost::multi_index::hashed_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_real_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_real_path, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_identifier, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_identifier, mpl_::na, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<Sdf_LayerRegistry::by_repository_path, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Sdf_LayerRegistry::layer_repository_path, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::__1::allocator<TfWeakPtr<SdfLayer> > >, boost::mpl::v_item<Sdf_LayerRegistry::by_identity, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, false>::operator++() [T = std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, false>::operator*() [T = std::__1::set<TfWeakPtr<SdfLayer>, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<TfWeakPtr<SdfLayer> > >, Reverse = false]
parse
../ModelKit/extern/boost/boost/format/parsing.hpp
static_cast<unsigned int>(cur_item) < items_.size() || cur_item==0
cur_item == num_items
compute_states
../ModelKit/extern/boost/boost/format/internals.hpp
!(fmtstate_.flags_ &(std::ios_base::adjustfield ^std::ios_base::left))
boost::format_error: format generic failure
boost::bad_format_string: format-string is ill-formed
../ModelKit/extern/boost/boost/format/format_implementation.hpp
bound_.size()==0 || num_args_ == static_cast<int>(bound_.size())
boost::too_many_args: format-string referred to less arguments than were passed
../ModelKit/extern/boost/boost/format/feed_args.hpp
i+(tmp_size-i)+(std::max)(d,(std::streamsize)0) == static_cast<size_type>(w)
res.size() == static_cast<size_type>(w)
boost::too_few_args: format-string referred to more arguments than were passed
item.pad_scheme_ & format_item_t::tabulation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/layerUtils.cpp
SdfComputeAssetPathRelativeToLayer
std::__1::string SdfComputeAssetPathRelativeToLayer(const SdfLayerHandle &, const std::__1::string &)
Invalid anchor layer
Layer path is empty
SdfFindOrOpenRelativeToLayer
SdfLayerRefPtr SdfFindOrOpenRelativeToLayer(const SdfLayerHandle &, std::__1::string *, const SdfLayer::FileFormatArguments &)
Invalid layer path pointer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/listOp.cpp
GetItems
const typename SdfListOp<T>::ItemVector &SdfListOp<int>::GetItems(SdfListOpType) const [T = int]
Got out-of-range type value: %d
ApplyOperations
void SdfListOp<int>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = int]
ReplaceOperations
bool SdfListOp<int>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = int]
Invalid start index %zd (size is %zd)
Invalid end index %zd (size is %zd)
const typename SdfListOp<T>::ItemVector &SdfListOp<unsigned int>::GetItems(SdfListOpType) const [T = unsigned int]
void SdfListOp<unsigned int>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = unsigned int]
bool SdfListOp<unsigned int>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = unsigned int]
const typename SdfListOp<T>::ItemVector &SdfListOp<long long>::GetItems(SdfListOpType) const [T = long long]
void SdfListOp<long long>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = long long]
bool SdfListOp<long long>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = long long]
const typename SdfListOp<T>::ItemVector &SdfListOp<unsigned long long>::GetItems(SdfListOpType) const [T = unsigned long long]
void SdfListOp<unsigned long long>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = unsigned long long]
bool SdfListOp<unsigned long long>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = unsigned long long]
const typename SdfListOp<T>::ItemVector &SdfListOp<std::__1::basic_string<char> >::GetItems(SdfListOpType) const [T = std::__1::basic_string<char>]
void SdfListOp<std::__1::basic_string<char> >::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = std::__1::basic_string<char>]
bool SdfListOp<std::__1::basic_string<char> >::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = std::__1::basic_string<char>]
const typename SdfListOp<T>::ItemVector &SdfListOp<TfToken>::GetItems(SdfListOpType) const [T = TfToken]
void SdfListOp<TfToken>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = TfToken]
bool SdfListOp<TfToken>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = TfToken]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfUnregisteredValue>::GetItems(SdfListOpType) const [T = SdfUnregisteredValue]
void SdfListOp<SdfUnregisteredValue>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfUnregisteredValue]
bool SdfListOp<SdfUnregisteredValue>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfUnregisteredValue]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfPath>::GetItems(SdfListOpType) const [T = SdfPath]
void SdfListOp<SdfPath>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfPath]
bool SdfListOp<SdfPath>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfPath]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfReference>::GetItems(SdfListOpType) const [T = SdfReference]
void SdfListOp<SdfReference>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfReference]
bool SdfListOp<SdfReference>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfReference]
SdfTokenListOp
SdfPathListOp
SdfStringListOp
SdfReferenceListOp
SdfIntListOp
SdfUIntListOp
SdfInt64ListOp
SdfUInt64ListOp
SdfUnregisteredValueListOp
SdfListOpTypeExplicit
SdfListOpTypeAdded
SdfListOpTypePrepended
SdfListOpTypeAppended
SdfListOpTypeDeleted
SdfListOpTypeOrdered
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<int, std::__1::allocator<int> >, false>::operator++() [T = const std::__1::vector<int, std::__1::allocator<int> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<int, std::__1::allocator<int> >, false>::operator*() [T = const std::__1::vector<int, std::__1::allocator<int> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<int, std::__1::allocator<int> >, false>::operator++() [T = std::__1::vector<int, std::__1::allocator<int> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<int, std::__1::allocator<int> >, false>::operator*() [T = std::__1::vector<int, std::__1::allocator<int> >, Reverse = false]
SdfListOp
Explicit
Deleted
Added
Prepended
Appended
Ordered
 Items: [
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, false>::operator++() [T = const std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, false>::operator*() [T = const std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, false>::operator++() [T = std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, false>::operator*() [T = std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<long long, std::__1::allocator<long long> >, false>::operator++() [T = const std::__1::vector<long long, std::__1::allocator<long long> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<long long, std::__1::allocator<long long> >, false>::operator*() [T = const std::__1::vector<long long, std::__1::allocator<long long> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<long long, std::__1::allocator<long long> >, false>::operator++() [T = std::__1::vector<long long, std::__1::allocator<long long> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<long long, std::__1::allocator<long long> >, false>::operator*() [T = std::__1::vector<long long, std::__1::allocator<long long> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, false>::operator++() [T = const std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, false>::operator*() [T = const std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, false>::operator++() [T = std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, false>::operator*() [T = std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, false>::operator++() [T = const std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, false>::operator*() [T = const std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, false>::operator++() [T = std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, false>::operator*() [T = std::__1::vector<SdfUnregisteredValue, std::__1::allocator<SdfUnregisteredValue> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, false>::operator++() [T = std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, false>::operator*() [T = std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/mapEditor.cpp
Sdf_LsdMapEditor
Sdf_LsdMapEditor<VtDictionary>::Sdf_LsdMapEditor(const SdfSpecHandle &, const TfToken &) [T = VtDictionary]
%s does not hold value of expected type.
field '%s' in <%s>
Sdf_LsdMapEditor::_UpdateDataInSpec
_UpdateDataInSpec
void Sdf_LsdMapEditor<VtDictionary>::_UpdateDataInSpec() [T = VtDictionary]
_owner
Sdf_LsdMapEditor<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >::Sdf_LsdMapEditor(const SdfSpecHandle &, const TfToken &) [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >]
void Sdf_LsdMapEditor<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >::_UpdateDataInSpec() [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >]
Sdf_LsdMapEditor<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > >::Sdf_LsdMapEditor(const SdfSpecHandle &, const TfToken &) [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >]
void Sdf_LsdMapEditor<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > >::_UpdateDataInSpec() [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >]
VtValue::_Counted<SdfPath>::_Counted(const T &) [T = SdfPath]
static SdfMapperArgSpecHandle SdfMapperArgSpec::New(const SdfMapperSpecHandle &, const std::string &, const VtValue &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/mapperArgSpec.cpp
NULL owner mapper
Cannot create mapper arg on %s with invalid name: '%s'
Cannot create mapper arg '%s' on <%s>: %s
static SdfMapperSpecHandle SdfMapperSpec::New(const SdfAttributeSpecHandle &, const SdfPath &, const std::string &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/mapperSpec.cpp
NULL owner attribute
A mapper must have a connection path that identifies a property.
mapper args
void SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_Copy(const SdfMapEditProxy::Type &) [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>]
bool SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_ValidateCopy(const SdfMapEditProxy::Type &) [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>]
Permission denied.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/markerUtils.cpp
SetMarker
static void Sdf_MarkerUtils<SdfAttributeSpec>::SetMarker(Spec *, const SdfPath &, const std::string &) [T = SdfAttributeSpec]
Set %s: %s
Set %s: Could not find or create child for marker.
ClearMarker
static void Sdf_MarkerUtils<SdfAttributeSpec>::ClearMarker(Spec *, const SdfPath &) [T = SdfAttributeSpec]
Clear %s: Permission denied.
SetMarkers
static void Sdf_MarkerUtils<SdfAttributeSpec>::SetMarkers(Spec *, const Sdf_MarkerUtils::MarkerMap &) [T = SdfAttributeSpec]
Set %s: Permission denied
static void Sdf_MarkerUtils<SdfRelationshipSpec>::SetMarker(Spec *, const SdfPath &, const std::string &) [T = SdfRelationshipSpec]
static void Sdf_MarkerUtils<SdfRelationshipSpec>::ClearMarker(Spec *, const SdfPath &) [T = SdfRelationshipSpec]
static void Sdf_MarkerUtils<SdfRelationshipSpec>::SetMarkers(Spec *, const Sdf_MarkerUtils::MarkerMap &) [T = SdfRelationshipSpec]
connection marker
target marker
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/namespaceEdit.cpp
bool SdfNamespaceEdit_Namespace::_Node::Remove(std::string *)
!IsRemoved()
Coding error: Node has no parent
_parent
Coding error: Removing root
i != _parent->_children->end()
Coding error: Node not found under parent
_parent->_children->release(i).release() == this
Coding error: Found wrong node by key
Reparent
bool SdfNamespaceEdit_Namespace::_Node::Reparent(SdfNamespaceEdit_Namespace::_Node *, const SdfPath &, std::string *)
_children->find(keyNode) == _children->end()
Coding error: Object with new path already exists
!node->IsRemoved()
Coding error: Object at path has been removed
_children->insert(node).second
bool SdfNamespaceEdit_Namespace::_Remove(const SdfPath &, std::string *)
Coding error: Object at path doesn't exist
_Move
bool SdfNamespaceEdit_Namespace::_Move(const SdfPath &, const SdfPath &, std::string *)
newParent
Coding error: New parent object doesn't exist
_FixBackpointers
void SdfNamespaceEdit_Namespace::_FixBackpointers(const SdfPath &, const SdfPath &)
i == _nodesWithPath.end() || !i->first.HasPrefix(currentPath)
Found backpointers under new path
_AddDeadspace
void SdfNamespaceEdit_Namespace::_AddDeadspace(const SdfPath &)
path != SdfPath::AbsoluteRootPath()
_RemoveDeadspace
void SdfNamespaceEdit_Namespace::_RemoveDeadspace(const SdfPath &)
Unsupported object type
Path type mismatch
Object was removed
New parent was removed
New parent does not exist
Object cannot be an ancestor of itself
Object cannot be a descendant of itself
Object already exists
Current target was edited
New target was edited
SdfNamespaceEditDetail::Error
SdfNamespaceEditDetail::Unbatched
SdfNamespaceEditDetail::Okay
../ModelKit/extern/boost/boost/ptr_container/indirect_fun.hpp
l != 0 && r != 0
Null pointer in 'ptr_set::insert()'
release
../ModelKit/extern/boost/boost/ptr_container/detail/reversible_ptr_container.hpp
where != end()
'release()' on empty container
TfIterator<T, Reverse> &TfIterator<const std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, false>::operator++() [T = const std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, false>::operator->() [T = const std::__1::map<TfWeakPtr<SdfLayer>, SdfChangeList, std::__1::less<TfWeakPtr<SdfLayer> >, std::__1::allocator<std::__1::pair<const TfWeakPtr<SdfLayer>, SdfChangeList> > >, Reverse = false]
Failed to parse value (at sub-part %zd if there are multiple parts)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/parserHelpers.cpp
MakeScalarValueImpl
typename boost::enable_if<boost::is_integral<Int> >::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = bool]
Not enough values to parse value of type %s
Failed to parse at element %zd (at sub-part %zd if there are multiple parts)
TfIterator::StarReturnType TfIterator<VtArray<bool>, false>::operator*() [T = VtArray<bool>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<bool>, false>::operator++() [T = VtArray<bool>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int> >::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned char]
TfIterator::StarReturnType TfIterator<VtArray<unsigned char>, false>::operator*() [T = VtArray<unsigned char>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned char>, false>::operator++() [T = VtArray<unsigned char>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int> >::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = int]
TfIterator::StarReturnType TfIterator<VtArray<int>, false>::operator*() [T = VtArray<int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<int>, false>::operator++() [T = VtArray<int>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int> >::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned int]
TfIterator::StarReturnType TfIterator<VtArray<unsigned int>, false>::operator*() [T = VtArray<unsigned int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned int>, false>::operator++() [T = VtArray<unsigned int>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int> >::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = long long]
TfIterator::StarReturnType TfIterator<VtArray<long long>, false>::operator*() [T = VtArray<long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<long long>, false>::operator++() [T = VtArray<long long>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int> >::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned long long]
TfIterator::StarReturnType TfIterator<VtArray<unsigned long long>, false>::operator*() [T = VtArray<unsigned long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned long long>, false>::operator++() [T = VtArray<unsigned long long>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfHalf *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<pxr_half::half>, false>::operator*() [T = VtArray<pxr_half::half>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<pxr_half::half>, false>::operator++() [T = VtArray<pxr_half::half>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(float *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<float>, false>::operator*() [T = VtArray<float>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<float>, false>::operator++() [T = VtArray<float>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(double *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<double>, false>::operator*() [T = VtArray<double>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<double>, false>::operator++() [T = VtArray<double>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(std::__1::string *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<std::__1::basic_string<char> >, false>::operator*() [T = VtArray<std::__1::basic_string<char> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<std::__1::basic_string<char> >, false>::operator++() [T = VtArray<std::__1::basic_string<char> >, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(TfToken *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<TfToken>, false>::operator*() [T = VtArray<TfToken>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<TfToken>, false>::operator++() [T = VtArray<TfToken>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(SdfAssetPath *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<SdfAssetPath>, false>::operator*() [T = VtArray<SdfAssetPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<SdfAssetPath>, false>::operator++() [T = VtArray<SdfAssetPath>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec2i>, false>::operator*() [T = VtArray<GfVec2i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2i>, false>::operator++() [T = VtArray<GfVec2i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec2h>, false>::operator*() [T = VtArray<GfVec2h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2h>, false>::operator++() [T = VtArray<GfVec2h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec2f>, false>::operator*() [T = VtArray<GfVec2f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2f>, false>::operator++() [T = VtArray<GfVec2f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec2d>, false>::operator*() [T = VtArray<GfVec2d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2d>, false>::operator++() [T = VtArray<GfVec2d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec3i>, false>::operator*() [T = VtArray<GfVec3i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3i>, false>::operator++() [T = VtArray<GfVec3i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec3h>, false>::operator*() [T = VtArray<GfVec3h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3h>, false>::operator++() [T = VtArray<GfVec3h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec3f>, false>::operator*() [T = VtArray<GfVec3f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3f>, false>::operator++() [T = VtArray<GfVec3f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec3d>, false>::operator*() [T = VtArray<GfVec3d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3d>, false>::operator++() [T = VtArray<GfVec3d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec4i>, false>::operator*() [T = VtArray<GfVec4i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4i>, false>::operator++() [T = VtArray<GfVec4i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec4h>, false>::operator*() [T = VtArray<GfVec4h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4h>, false>::operator++() [T = VtArray<GfVec4h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec4f>, false>::operator*() [T = VtArray<GfVec4f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4f>, false>::operator++() [T = VtArray<GfVec4f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfVec4d>, false>::operator*() [T = VtArray<GfVec4d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4d>, false>::operator++() [T = VtArray<GfVec4d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuath *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfQuath>, false>::operator*() [T = VtArray<GfQuath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuath>, false>::operator++() [T = VtArray<GfQuath>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuatf *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfQuatf>, false>::operator*() [T = VtArray<GfQuatf>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuatf>, false>::operator++() [T = VtArray<GfQuatf>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuatd *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfQuatd>, false>::operator*() [T = VtArray<GfQuatd>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuatd>, false>::operator++() [T = VtArray<GfQuatd>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix2d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfMatrix2d>, false>::operator*() [T = VtArray<GfMatrix2d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix2d>, false>::operator++() [T = VtArray<GfMatrix2d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix3d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfMatrix3d>, false>::operator*() [T = VtArray<GfMatrix3d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix3d>, false>::operator++() [T = VtArray<GfMatrix3d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix4d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::StarReturnType TfIterator<VtArray<GfMatrix4d>, false>::operator*() [T = VtArray<GfMatrix4d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix4d>, false>::operator++() [T = VtArray<GfMatrix4d>, Reverse = false]
Unrecognized type name '%s'
Non-square shaped value
Mismatched [ ] in shaped value
Shaped value with a zero dimension
Tuple nesting too deep! Should not be deeper than %d for attribute of type %s.
Mismatched ( ) for attribute of type %s.
Tuple dimensions error for attribute of type %s.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/parserValueContext.cpp
ReportCodingError
void ReportCodingError(const std::string &)
VtValue::_Counted<SdfUnregisteredValue>::_Counted(const T &) [T = SdfUnregisteredValue]
SdfPath::_InitWithString
_InitWithString
void SdfPath::_InitWithString(const std::string &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/path.cpp
Ill-formed SdfPath <%s>: %s
ReplaceName
SdfPath SdfPath::ReplaceName(const TfToken &) const
%s is not a prim, property, or relational attribute path
StripAllVariantSelections
SdfPath SdfPath::StripAllVariantSelections() const
AppendPath
SdfPath SdfPath::AppendPath(const SdfPath &) const
Cannot append to invalid path
Cannot append invalid path to <%s>
Cannot append absolute path <%s> to another path <%s>.
Cannot append a path to another path that is not a root or a prim path.
Cannot append a property path to the absolute root path.
AppendChild
SdfPath SdfPath::AppendChild(const TfToken &) const
Cannot append child '%s' to path '%s'.
Invalid prim name '%s'
AppendProperty
SdfPath SdfPath::AppendProperty(const TfToken &) const
Can only append a property '%s' to a prim path (%s)
AppendVariantSelection
SdfPath SdfPath::AppendVariantSelection(const std::__1::string &, const std::__1::string &) const
Cannot append variant selection %s = %s to <%s>; can only append a variant selection to a prim or prim variant selection path.
AppendTarget
SdfPath SdfPath::AppendTarget(const SdfPath &) const
Can only append a target to a property path.
Target path cannot be invalid.
AppendRelationalAttribute
SdfPath SdfPath::AppendRelationalAttribute(const TfToken &) const
Invalid property name.
Can only append a relational attribute to a target path.
AppendMapper
SdfPath SdfPath::AppendMapper(const SdfPath &) const
Cannnot append mapper '%s' to non-property path <%s>.
Cannot append an empty mapper target path to <%s>
AppendMapperArg
SdfPath SdfPath::AppendMapperArg(const TfToken &) const
Invalid arg name.
Can only append a mapper arg to a mapper path.
AppendExpression
SdfPath SdfPath::AppendExpression() const
Can only append an expression to a property path.
AppendElementToken
SdfPath SdfPath::AppendElementToken(const TfToken &) const
Cannot append element '%s' to the EmptyPath.
Cannot append EmptyPath as a path element.
ReplacePrefix
SdfPath SdfPath::ReplacePrefix(const SdfPath &, const SdfPath &, bool) const
GetCommonPrefix
SdfPath SdfPath::GetCommonPrefix(const SdfPath &) const
GetCommonPrefix(): invalid path.
SdfPath SdfPath::ReplaceTargetPath(const SdfPath &) const
ReplaceTargetPath(): invalid new target path.
MakeAbsolutePath
SdfPath SdfPath::MakeAbsolutePath(const SdfPath &) const
MakeAbsolutePath(): anchor is the empty path.
MakeAbsolutePath() requires an absolute path as an argument.
MakeAbsolutePath() requires a prim path as an argument.
Didn't find relative root
MakeRelativePath
SdfPath SdfPath::MakeRelativePath(const SdfPath &) const
MakeRelativePath(): anchor is the invalid path.
MakeRelativePath() requires an absolute path as an argument.
MakeRelativePath() requires a component path as an argument (got '%s').
thisCount == anchorCount
current
authored
final
initial
GetConciseRelativePaths
static SdfPathVector SdfPath::GetConciseRelativePaths(const SdfPathVector &)
argument to GetConciseRelativePaths contains a relative path.
vector<SdfPath>
_AppendNode
SdfPath _AppendNode(const SdfPath &, const Sdf_PathNodeConstRefPtr &)
Unexpected node type %i
bool Sdf_PathNode::Compare(const Sdf_PathNode &) const [Comp = Sdf_PathNode::LessThan]
TfIterator::ArrowReturnType TfIterator<const std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, false>::operator->() [T = const std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, Reverse = false]
fatal flex scanner internal error--no action found
out of dynamic memory in pathYy_create_buffer()
out of dynamic memory in pathYy_scan_buffer()
out of dynamic memory in pathYy_scan_bytes()
bad buffer in pathYy_scan_bytes()
pathYyset_lineno called with no buffer
pathYyset_column called with no buffer
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in pathYyensure_buffer_stack()
expected property name after '.'
expected a path within [ ]
expected a property for relationship target
syntax error
Error: discarding
Error: popping
memory exhausted
Cleanup: discarding lookahead
Cleanup: popping
Deleting
pxr/usd/sdf/path.yy
pathYyerror
void pathYyerror(Sdf_PathParserContext *, const char *)
context
SdfPath
Sdf_PathNode::GetPathToken
_CreatePathToken
TfToken Sdf_PathNode::_CreatePathToken() const
Sdf_PathNode stats:
num node refs: %i
num nodes:     %i
sizeof(SdfPath), aka node ref:  %zu
sizeof(Sdf_PathNode), aka node: %zu
RootNode
PrimNode
PrimPropertyNode
PrimVariantSelectionNode
TargetNode
RelationalAttributeNode
MapperNode
MapperArgNode
ExpressionNode
------------------------------------------------
-- By Type
%32ss: %8zu -- %6.2f%%
-- By Length
num nodes with %3zu components : %i
avg num components: %g
-- By Number of Children
num nodes with %3zu children : %i
avg num children (for nodes with any children): %g
TfIterator::ArrowReturnType TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<SdfPath> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *> > >, false>::operator->() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<SdfPath> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<SdfPath> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *> > >, false>::operator++() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<SdfPath> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<SdfPath>, const Sdf_PathNode *> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<TfToken> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *> > >, false>::operator->() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<TfToken> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<TfToken> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *> > >, false>::operator++() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<TfToken> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<TfToken>, const Sdf_PathNode *> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> > >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *> > >, false>::operator->() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> > >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> > >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *> > >, false>::operator++() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> > >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<std::__1::pair<TfToken, TfToken> >, const Sdf_PathNode *> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<_ParentAnd<void> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *> > >, false>::operator->() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<_ParentAnd<void> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<_ParentAnd<void> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *> > >, false>::operator++() [T = const tbb::interface5::concurrent_hash_map<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *, (anonymous namespace)::_HashParentAnd<_ParentAnd<void> >, tbb::tbb_allocator<std::__1::pair<(anonymous namespace)::_ParentAnd<void>, const Sdf_PathNode *> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::vector<boost::intrusive_ptr<const Sdf_PathNode>, std::__1::allocator<boost::intrusive_ptr<const Sdf_PathNode> > >, false>::operator->() [T = const std::__1::vector<boost::intrusive_ptr<const Sdf_PathNode>, std::__1::allocator<boost::intrusive_ptr<const Sdf_PathNode> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<boost::intrusive_ptr<const Sdf_PathNode>, std::__1::allocator<boost::intrusive_ptr<const Sdf_PathNode> > >, false>::operator++() [T = const std::__1::vector<boost::intrusive_ptr<const Sdf_PathNode>, std::__1::allocator<boost::intrusive_ptr<const Sdf_PathNode> > >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/pathNode.cpp
_absoluteRootNode_Tf_StaticDataFactoryImpl
void _absoluteRootNode_Tf_StaticDataFactoryImpl(Sdf_PathNodeConstRefPtr *)
(*_absoluteRootNode)->GetCurrentRefCount() == 1
_relativeRootNode_Tf_StaticDataFactoryImpl
void _relativeRootNode_Tf_StaticDataFactoryImpl(Sdf_PathNodeConstRefPtr *)
(*_relativeRootNode)->GetCurrentRefCount() == 1
new Sdf_PrimPathNode
new Sdf_PrimPropertyPathNode
new Sdf_PrimVariantSelectionNode
new Sdf_TargetPathNode
new Sdf_RelationalAttributePathNode
new Sdf_MapperPathNode
new Sdf_MapperArgPathNode
new Sdf_ExpressionPathNode
../ModelKit/extern/usd/pxr/usd/sdf/pathNode.h
bool Sdf_PathNode::Compare(const Sdf_PathNode &) const [Comp = Sdf_PathNode::_Equal]
Unhandled Sdf_PathNode::NodeType enumerant
TfIterator<T, Reverse> &TfIterator<std::__1::vector<const Sdf_PathNode *, std::__1::allocator<const Sdf_PathNode *> >, true>::operator++() [T = std::__1::vector<const Sdf_PathNode *, std::__1::allocator<const Sdf_PathNode *> >, Reverse = true]
TfIterator::StarReturnType TfIterator<std::__1::vector<const Sdf_PathNode *, std::__1::allocator<const Sdf_PathNode *> >, true>::operator*() [T = std::__1::vector<const Sdf_PathNode *, std::__1::allocator<const Sdf_PathNode *> >, Reverse = true]
SdfPayload(
SdfSpecTypeRegistration
static SdfPrimSpecHandle SdfPrimSpec::New(const SdfLayerHandle &, const std::string &, SdfSpecifier, const std::string &)
static SdfPrimSpecHandle SdfPrimSpec::New(const SdfPrimSpecHandle &, const std::string &, SdfSpecifier, const std::string &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/primSpec.cpp
_New
static SdfPrimSpecHandle SdfPrimSpec::_New(const SdfPrimSpecHandle &, const TfToken &, SdfSpecifier, const TfToken &)
Cannot create prim '%s' because the parent prim is NULL
Cannot create prim '%s' because '%s' is not a valid name
_ValidateEdit
bool SdfPrimSpec::_ValidateEdit(const TfToken &) const
Cannot edit %s on a pseudo-root
The pseudo-root cannot be renamed
RemoveNameChild
bool SdfPrimSpec::RemoveNameChild(const SdfPrimSpecHandle &)
Cannot remove child prim '%s' from parent '%s' because it is not a child of that prim
RemoveProperty
void SdfPrimSpec::RemoveProperty(const SdfPropertySpecHandle &)
Cannot remove property '%s' from prim '%s' because it does not belong to that prim
GetObjectAtPath
SdfSpecHandle SdfPrimSpec::GetObjectAtPath(const SdfPath &) const
Cannot get object at the empty path
GetPrimAtPath
SdfPrimSpecHandle SdfPrimSpec::GetPrimAtPath(const SdfPath &) const
Cannot get prim at the empty path
GetPropertyAtPath
SdfPropertySpecHandle SdfPrimSpec::GetPropertyAtPath(const SdfPath &) const
Cannot get property at the empty path
GetAttributeAtPath
SdfAttributeSpecHandle SdfPrimSpec::GetAttributeAtPath(const SdfPath &) const
Cannot get attribute at the empty path
GetRelationshipAtPath
SdfRelationshipSpecHandle SdfPrimSpec::GetRelationshipAtPath(const SdfPath &) const
Cannot get relationship at the empty path
SetTypeName
void SdfPrimSpec::SetTypeName(const std::string &)
Cannot set empty type name on prim '%s'
variant sets
SdfCreatePrimInLayer
SdfPrimSpecHandle SdfCreatePrimInLayer(const SdfLayerHandle &, const SdfPath &)
Cannot create prim at path '%s' because it is not a valid prim or prim variant selection path
SdfPrimSpecHandleVector
map<string, SdfVariantSetSpecHandle>
_FindOrCreateVariantSpec
SdfVariantSpecHandle _FindOrCreateVariantSpec(const SdfPrimSpecHandle &, const pair<std::__1::string, std::__1::string> &)
varSetSpec
Failed to create variant set
../ModelKit/extern/usd/pxr/usd/sdf/childrenProxy.h
_Validate
bool SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >::_Validate() const [_View = SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > >]
Accessing expired %s
TfIterator::ArrowReturnType TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, false>::operator->() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, false>::operator++() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >, Reverse = false]
../ModelKit/extern/usd/pxr/usd/sdf/listEditorProxy.h
bool SdfListEditorProxy<SdfNameKeyPolicy>::_Validate() [_TypePolicy = SdfNameKeyPolicy]
Accessing expired list editor
../ModelKit/extern/boost/boost/smart_ptr/shared_ptr.hpp
../ModelKit/extern/usd/pxr/usd/sdf/listProxy.h
bool SdfListProxy<SdfNameKeyPolicy>::_Validate() const [_TypePolicy = SdfNameKeyPolicy]
_Edit
void SdfListProxy<SdfNameKeyPolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfNameKeyPolicy]
Editing list: %s
Inserting invalid value into list editor
bool SdfListProxy<SdfNameKeyPolicy>::_Validate() [_TypePolicy = SdfNameKeyPolicy]
SdfHandle::SpecType *SdfHandle<SdfVariantSetSpec>::operator->() const [T = SdfVariantSetSpec]
TfIterator::StarReturnType TfIterator<SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec> > >, false>::operator*() [T = SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec> > >, false>::operator++() [T = SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec> > >, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfLayer>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfLayer]
bool SdfListProxy<SdfNameTokenKeyPolicy>::_Validate() const [_TypePolicy = SdfNameTokenKeyPolicy]
void SdfListProxy<SdfNameTokenKeyPolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfNameTokenKeyPolicy]
bool SdfListProxy<SdfNameTokenKeyPolicy>::_Validate() [_TypePolicy = SdfNameTokenKeyPolicy]
List editor is expired
Permission denied
../ModelKit/extern/usd/pxr/usd/sdf/vectorListEditor.h
CopyEdits
virtual bool Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
Cannot copy from list editor of different type
Cannot copy from list editor in different mode
_UpdateFieldData
void Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::_UpdateFieldData(const Sdf_VectorListEditor::value_vector_type &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
Invalid owner.
Layer is not editable.
ApplyList
virtual void Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
Cannot apply from list editor of different type
../ModelKit/extern/usd/pxr/usd/sdf/listEditor.h
virtual bool Sdf_ListEditor<SdfNameTokenKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfNameTokenKeyPolicy]
Duplicate item '%s' not allowed for field '%s' on <%s>
No field definition for field '%s'
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfToken, std::__1::allocator<TfToken> >, false>::operator*() [T = const std::__1::vector<TfToken, std::__1::allocator<TfToken> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfToken, std::__1::allocator<TfToken> >, false>::operator++() [T = const std::__1::vector<TfToken, std::__1::allocator<TfToken> >, Reverse = false]
VtDictionary
../ModelKit/extern/usd/pxr/usd/sdf/mapEditProxy.h
bool SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_Validate() [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>]
Editing an invalid map proxy
_ValidateErase
bool SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_ValidateErase(const SdfMapEditProxy::key_type &) [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>]
Can't erase value from %s: Permission denied.
_ValidateInsert
bool SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_ValidateInsert(const SdfMapEditProxy::value_type &) [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>]
Can't insert value in %s: Permission denied.
Can't insert key in %s: %s
Can't insert value in %s: %s
operator=
SdfMapEditProxy::_ValueProxy &SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_ValueProxy::operator=(const U &) [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>, U = VtValue]
Assignment to invalid map proxy
_ValidateSet
bool SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_ValidateSet(const SdfMapEditProxy::key_type &, const SdfMapEditProxy::mapped_type &) [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>]
Can't set value in %s: Permission denied.
Can't set value in %s: %s
bool SdfListEditorProxy<SdfPathKeyPolicy>::_Validate() const [_TypePolicy = SdfPathKeyPolicy]
bool SdfListEditorProxy<SdfPathKeyPolicy>::_Validate() [_TypePolicy = SdfPathKeyPolicy]
bool SdfListEditorProxy<SdfReferenceTypePolicy>::_Validate() const [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListEditorProxy<SdfReferenceTypePolicy>::_Validate() [_TypePolicy = SdfReferenceTypePolicy]
../ModelKit/extern/usd/pxr/usd/sdf/listOpListEditor.h
virtual bool Sdf_ListOpListEditor<SdfNameKeyPolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameKeyPolicy]
Could not copy from list editor of different type
_UpdateListOp
void Sdf_ListOpListEditor<SdfNameKeyPolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfNameKeyPolicy]
out of range
../ModelKit/extern/boost/boost/array.hpp
(i < N)&&("out of range")
virtual void Sdf_ListOpListEditor<SdfNameKeyPolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameKeyPolicy]
virtual bool Sdf_ListEditor<SdfNameKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfNameKeyPolicy]
bool SdfListEditorProxy<SdfNameKeyPolicy>::_Validate() const [_TypePolicy = SdfNameKeyPolicy]
T *TfRefPtr<SdfAbstractData>::operator->() const [U = SdfAbstractData]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<TfToken, std::__1::allocator<TfToken> >, false>::operator++() [T = std::__1::vector<TfToken, std::__1::allocator<TfToken> >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<TfToken, std::__1::allocator<TfToken> >, false>::operator->() [T = std::__1::vector<TfToken, std::__1::allocator<TfToken> >, Reverse = false]
edit
replace
insert
remove
bool SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > > >::_Validate(int) [_View = SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec> >, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec> > >]
Cannot %s %s
bool SdfMapEditProxy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >::_Validate() [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >]
bool SdfMapEditProxy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >::_ValidateErase(const SdfMapEditProxy::key_type &) [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >]
bool SdfMapEditProxy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >::_ValidateInsert(const SdfMapEditProxy::value_type &) [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >]
SdfMapEditProxy::_ValueProxy &SdfMapEditProxy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >::_ValueProxy::operator=(const U &) [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >, U = std::__1::basic_string<char>]
bool SdfMapEditProxy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > > >::_ValidateSet(const SdfMapEditProxy::key_type &, const SdfMapEditProxy::mapped_type &) [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >]
_Copy
void SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>::_Copy(const SdfMapEditProxy::Type &) [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
Can't copy to %s: Duplicate key '%s' exists in map.
bool SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>::_Validate() [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
TfIterator::StarReturnType TfIterator<const std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, false>::operator*() [T = const std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, false>::operator++() [T = const std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, Reverse = false]
_ValidateCopy
bool SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>::_ValidateCopy(const SdfMapEditProxy::Type &) [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
Can't copy to %s: Permission denied.
bool SdfMapEditProxy<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, SdfRelocatesMapProxyValuePolicy>::_ValidateInsert(const SdfMapEditProxy::value_type &) [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
SdfHandle::SpecType *SdfHandle<SdfVariantSpec>::operator->() const [T = SdfVariantSpec]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/propertySpec.cpp
SetDefaultValue
bool SdfPropertySpec::SetDefaultValue(const VtValue &)
Can't set value on attribute <%s> with unknown type "%s"
Can't set value on <%s> to %s: expected a value of type "%s"
GetValueType
TfType SdfPropertySpec::GetValueType() const
Unrecognized subclass of SdfPropertySpec on <%s>
GetTypeName
SdfValueTypeName SdfPropertySpec::GetTypeName() const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/proxyPolicies.cpp
CanonicalizeType
static SdfRelocatesMapProxyValuePolicy::Type SdfRelocatesMapProxyValuePolicy::CanonicalizeType(const SdfSpecHandle &, const SdfRelocatesMapProxyValuePolicy::Type &)
spec
CanonicalizeKey
static SdfRelocatesMapProxyValuePolicy::key_type SdfRelocatesMapProxyValuePolicy::CanonicalizeKey(const SdfSpecHandle &, const SdfRelocatesMapProxyValuePolicy::key_type &)
CanonicalizeValue
static SdfRelocatesMapProxyValuePolicy::mapped_type SdfRelocatesMapProxyValuePolicy::CanonicalizeValue(const SdfSpecHandle &, const SdfRelocatesMapProxyValuePolicy::mapped_type &)
CanonicalizePair
static SdfRelocatesMapProxyValuePolicy::value_type SdfRelocatesMapProxyValuePolicy::CanonicalizePair(const SdfSpecHandle &, const SdfRelocatesMapProxyValuePolicy::value_type &)
SdfInheritsProxy
SdfReferencesProxy
virtual bool Sdf_ListOpListEditor<SdfPathKeyPolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfPathKeyPolicy]
void Sdf_ListOpListEditor<SdfPathKeyPolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfPathKeyPolicy]
virtual void Sdf_ListOpListEditor<SdfPathKeyPolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfPathKeyPolicy]
virtual bool Sdf_ListEditor<SdfPathKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfPathKeyPolicy]
virtual bool Sdf_ListOpListEditor<SdfReferenceTypePolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfReferenceTypePolicy]
void Sdf_ListOpListEditor<SdfReferenceTypePolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfReferenceTypePolicy]
virtual void Sdf_ListOpListEditor<SdfReferenceTypePolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfReferenceTypePolicy]
virtual bool Sdf_ListEditor<SdfReferenceTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfReferenceTypePolicy]
VtValue::_Counted<SdfReference>::_Counted(const T &) [T = SdfReference]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, false>::operator*() [T = const std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, false>::operator++() [T = const std::__1::vector<SdfReference, std::__1::allocator<SdfReference> >, Reverse = false]
SdfReference(
static SdfRelationshipSpecHandle SdfRelationshipSpec::New(const SdfPrimSpecHandle &, const std::string &, bool, SdfVariability)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/relationshipSpec.cpp
NULL owner prim
Cannot create a relationship on %s with invalid name: %s
Cannot create relationship at invalid path <%s.%s>
_FindOrCreateTargetSpec
SdfSpecHandle SdfRelationshipSpec::_FindOrCreateTargetSpec(const SdfPath &)
Create spec <%s>: %s
ReplaceTargetPath
void SdfRelationshipSpec::ReplaceTargetPath(const SdfPath &, const SdfPath &)
ReplaceTargetPath: Permission denied.
Can't replace target %s with target %s in relationship %s: %s
Target already exists
!layer->HasSpec(newTargetSpecPath)
Cannot move %s to %s
InsertAttributeForTargetPath
bool SdfRelationshipSpec::InsertAttributeForTargetPath(const SdfPath &, const SdfAttributeSpecHandle &, int)
Invalid attribute spec
Insert relational attribute: Failed to create target <%s>
RemoveAttributeForTargetPath
void SdfRelationshipSpec::RemoveAttributeForTargetPath(const SdfPath &, const SdfAttributeSpecHandle &)
'%s' is not an attribute for target <%s>
GetTargetPathForAttribute
SdfPath SdfRelationshipSpec::GetTargetPathForAttribute(const SdfAttributeSpecConstHandle &) const
<%s> is not a relational attribute
<%s> is not an attribute of relationship '<%s>'
SetTargetAttributeOrders
void SdfRelationshipSpec::SetTargetAttributeOrders(const SdfRelationshipSpec::AttributeOrderMap &)
Set target attribute orders: Permission denied
GetOrCreateAttributeOrderForTargetPath
SdfNameOrderProxy SdfRelationshipSpec::GetOrCreateAttributeOrderForTargetPath(const SdfPath &)
Cannot create attribute order for target path <%s> in relationship <%s>: Permission denied.
Can't create attribute ordering for target path <%s> in relationship <%s>: Couldn't create target.
TfIterator<T, Reverse> &TfIterator<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, false>::operator++() [T = std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, false>::operator*() [T = std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, false>::operator++() [T = const std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, false>::operator*() [T = const std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, Reverse = false]
SdfHandle::SpecType *SdfHandle<const SdfAttributeSpec>::operator->() const [T = const SdfAttributeSpec]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> > > > >, false>::operator++() [T = const std::__1::map<SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> > > > >, false>::operator->() [T = const std::__1::map<SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> >, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, std::__1::vector<TfToken, std::__1::allocator<TfToken> > > > >, Reverse = false]
GetFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetFields() const
GetRequiredFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetRequiredFields() const
GetMetadataFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetMetadataFields() const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/schema.cpp
_AddField
void SdfSchemaBase::SpecDefinition::_AddField(const TfToken &, const SdfSchemaBase::_FieldInfo &)
Duplicate registration for field '%s'
connectionChildren
expressionChildren
mapperArgChildren
mapperChildren
primChildren
properties
targetChildren
variantChildren
variantSetChildren
active
allowedTokens
assetInfo
colorConfiguration
colorManagementSystem
colorSpace
comment
connectionPaths
custom
customData
customLayerData
default
defaultPrim
displayGroup
displayName
displayUnit
documentation
endTimeCode
framePrecision
framesPerSecond
hidden
hasOwnedSubLayers
inheritPaths
instanceable
kind
value
marker
primOrder
noLoadHint
owner
payload
permission
prefix
prefixSubstitutions
propertyOrder
references
relocates
script
sessionOwner
specializes
specifier
startTimeCode
subLayers
subLayerOffsets
suffix
suffixSubstitutions
symmetricPeer
symmetryArgs
symmetryArguments
symmetryFunction
targetPaths
timeSamples
timeCodesPerSecond
typeName
variantSelection
variability
variantSetNames
endFrame
startFrame
_CreateField
SdfSchemaBase::FieldDefinition &SdfSchemaBase::_CreateField(const TfToken &, const VtValue &, bool)
Duplicate creation for field '%s'
_DoRegisterField
SdfSchemaBase::FieldDefinition &SdfSchemaBase::_DoRegisterField(const TfToken &, const VtValue &)
Field '%s' has not been created.
Registered fallback value for field '%s' does not match field type definition. (expected: %s, got: %s)
_ExtendSpecDefinition
SdfSchemaBase::_SpecDefiner SdfSchemaBase::_ExtendSpecDefinition(SdfSpecType)
No definition for spec type %s
_CheckAndGetSpecDefinition
const SdfSchemaBase::SpecDefinition *SdfSchemaBase::_CheckAndGetSpecDefinition(SdfSpecType) const
Value for key '%s' does not have a valid scene description type (%s)
Value does not have a valid scene description type (
" is not a valid identifier
"%s" is not a valid variant name due to '%c' at index %d
Root paths not allowed in relocates map
Inherit paths must be an absolute prim path
Specializes paths must be absolute prim path
Attribute connection paths cannot contain variant selections
Connection paths must be absolute prim or property paths: <%s>
Relationship target paths cannot contain variant selections
Relationship target paths must be absolute prim, property or mapper paths
Reference prim path <
> must be either empty or an absolute prim path
Payload prim path <
Payload must specify an asset path and an optional additional prim path, or nothing
Sublayer paths must not be empty
SdfMetadata
_UpdateMetadataFromPlugins
void SdfSchemaBase::_UpdateMetadataFromPlugins(const PlugPluginPtrVector &, const std::string &, const SdfSchemaBase::_DefaultValueFactoryFn &)
Value must be a dictionary (at "%s" in plugin "%s")
type
Could not read a string for "type" (at "%s" in plugin "%s")
"%s" is already a registered field (in plugin "%s")
No default value for metadata (at "%s" in plugin "%s")
Error parsing default value for metadata (at "%s" in plugin "%s")
appliesTo
layers
prims
attributes
relationships
variants
static void TfSingleton<SdfSchema>::SetInstanceConstructed(T &) [T = SdfSchema]
bool
uchar
ushort
uint
int64
uint64
half
float
double
string
token
asset
double2
double3
double4
float2
float3
float4
half2
half3
half4
int2
int3
int4
point3h
point3f
point3d
vector3h
vector3f
vector3d
normal3h
normal3f
normal3d
color3h
color3f
color3d
color4h
color4f
color4d
quath
quatf
quatd
matrix2d
matrix3d
matrix4d
frame4d
Vec2i
Vec2h
Vec2f
Vec2d
Vec3i
Vec3h
Vec3f
Vec3d
Vec4i
Vec4h
Vec4f
Vec4d
Point
PointFloat
Normal
NormalFloat
VectorFloat
Color
ColorFloat
Quath
Quatf
Quatd
Matrix2d
Matrix3d
Matrix4d
Frame
Transform
PointIndex
EdgeIndex
FaceIndex
Schema
bool[]
uchar[]
int[]
uint[]
ushort[]
int64[]
uint64[]
half[]
float[]
double[]
string[]
token[]
asset[]
int2[]
int3[]
int4[]
half2[]
half3[]
half4[]
float2[]
float3[]
float4[]
double2[]
double3[]
double4[]
point3h[]
point3f[]
point3d[]
vector3h[]
vector3f[]
vector3d[]
normal3h[]
normal3f[]
normal3d[]
color3h[]
color3f[]
color3d[]
color4h[]
color4f[]
color4d[]
quath[]
quatf[]
quatd[]
matrix2d[]
matrix3d[]
matrix4d[]
frame4d[]
Expected value of type std::string
Expected value of type SdfPath
Expected value of type double
Value must be greater than 0
Expected value of type TfToken
Expected value of type SdfPayload
Expected non-empty string
Expected value of type string
Expected value of type SdfReference
../ModelKit/extern/usd/pxr/usd/sdf/allowed.h
SdfAllowed
SdfAllowed::SdfAllowed(bool)
dictionary
_GetDefaultMetadataValue
VtValue _GetDefaultMetadataValue(const std::string &, const JsValue &)
Default values are not allowed on fields of type "dictionary", which will always default to an empty dictionary.
Default values are not allowed on fields of type "%s", which will alwaysdefault to an empty list op.
Could not parse default value: %s
"%s" is not a registered value type
VtValue::_Counted<VtDictionary>::_Counted(const T &) [T = VtDictionary]
intlistop
int64listop
uintlistop
uint64listop
stringlistop
tokenlistop
VtValue::_Counted<SdfListOp<int> >::_Counted(const T &) [T = SdfListOp<int>]
VtValue::_Counted<SdfListOp<long long> >::_Counted(const T &) [T = SdfListOp<long long>]
VtValue::_Counted<SdfListOp<unsigned int> >::_Counted(const T &) [T = SdfListOp<unsigned int>]
VtValue::_Counted<SdfListOp<unsigned long long> >::_Counted(const T &) [T = SdfListOp<unsigned long long>]
VtValue::_Counted<SdfListOp<std::__1::basic_string<char> > >::_Counted(const T &) [T = SdfListOp<std::__1::basic_string<char> >]
VtValue::_Counted<SdfListOp<TfToken> >::_Counted(const T &) [T = SdfListOp<TfToken>]
Value was not a string, an int, a double, or a vector of those types
"%s" is not a valid type
forced_return
../ModelKit/extern/boost/boost/variant/detail/forced_return.hpp
false
TfIterator<T, Reverse> &TfIterator<const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor, std::__1::equal_to<TfToken>, std::__1::allocator<std::__1::pair<const TfToken, SdfSchemaBase::_FieldInfo> > >, false>::operator++() [T = const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor, std::__1::equal_to<TfToken>, std::__1::allocator<std::__1::pair<const TfToken, SdfSchemaBase::_FieldInfo> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor, std::__1::equal_to<TfToken>, std::__1::allocator<std::__1::pair<const TfToken, SdfSchemaBase::_FieldInfo> > >, false>::operator->() [T = const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor, std::__1::equal_to<TfToken>, std::__1::allocator<std::__1::pair<const TfToken, SdfSchemaBase::_FieldInfo> > >, Reverse = false]
VtValue::_Counted<VtArray<TfToken> >::_Counted(const T &) [T = VtArray<TfToken>]
VtValue::_Counted<SdfAssetPath>::_Counted(const T &) [T = SdfAssetPath]
VtValue::_Counted<SdfListOp<SdfPath> >::_Counted(const T &) [T = SdfListOp<SdfPath>]
VtValue::_Counted<TfEnum>::_Counted(const T &) [T = TfEnum]
VtValue::_Counted<std::__1::vector<TfToken, std::__1::allocator<TfToken> > >::_Counted(const T &) [T = std::__1::vector<TfToken, std::__1::allocator<TfToken> >]
VtValue::_Counted<SdfPayload>::_Counted(const T &) [T = SdfPayload]
VtValue::_Counted<SdfListOp<SdfReference> >::_Counted(const T &) [T = SdfListOp<SdfReference>]
VtValue::_Counted<std::__1::map<double, VtValue, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, VtValue> > > >::_Counted(const T &) [T = std::__1::map<double, VtValue, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, VtValue> > >]
VtValue::_Counted<std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > > >::_Counted(const T &) [T = std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >]
VtValue::_Counted<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >::_Counted(const T &) [T = std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >]
VtValue::_Counted<std::__1::vector<SdfLayerOffset, std::__1::allocator<SdfLayerOffset> > >::_Counted(const T &) [T = std::__1::vector<SdfLayerOffset, std::__1::allocator<SdfLayerOffset> >]
VtValue::_Counted<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > >::_Counted(const T &) [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >]
VtValue::_Counted<std::__1::vector<SdfPath, std::__1::allocator<SdfPath> > >::_Counted(const T &) [T = std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >]
TfIterator<T, Reverse> &TfIterator<const VtDictionary, false>::operator++() [T = const VtDictionary, Reverse = false]
Attempted invalid increment operation on a VtDictionary iterator
TfIterator::ArrowReturnType TfIterator<const VtDictionary, false>::operator->() [T = const VtDictionary, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfWeakPtr<PlugPlugin>, std::__1::allocator<TfWeakPtr<PlugPlugin> > >, false>::operator++() [T = const std::__1::vector<TfWeakPtr<PlugPlugin>, std::__1::allocator<TfWeakPtr<PlugPlugin> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfWeakPtr<PlugPlugin>, std::__1::allocator<TfWeakPtr<PlugPlugin> > >, false>::operator*() [T = const std::__1::vector<TfWeakPtr<PlugPlugin>, std::__1::allocator<TfWeakPtr<PlugPlugin> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, false>::operator++() [T = std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, false>::operator->() [T = std::__1::map<std::__1::basic_string<char>, JsValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, JsValue> > >, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfSchema>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfSchema]
../ModelKit/extern/usd/pxr/base/tf/notice.h
GetNoticeType
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<SdfSchema>, TfAnyWeakPtr, void (SdfSchema::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins> >::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<SdfSchema>, TfAnyWeakPtr, void (SdfSchema::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>]
notice type 
 undefined in the TfType system
VtValue::_Counted<VtArray<bool> >::_Counted(const T &) [T = VtArray<bool>]
VtValue::_Counted<VtArray<unsigned char> >::_Counted(const T &) [T = VtArray<unsigned char>]
VtValue::_Counted<VtArray<unsigned short> >::_Counted(const T &) [T = VtArray<unsigned short>]
VtValue::_Counted<VtArray<int> >::_Counted(const T &) [T = VtArray<int>]
VtValue::_Counted<VtArray<unsigned int> >::_Counted(const T &) [T = VtArray<unsigned int>]
VtValue::_Counted<VtArray<long long> >::_Counted(const T &) [T = VtArray<long long>]
VtValue::_Counted<VtArray<unsigned long long> >::_Counted(const T &) [T = VtArray<unsigned long long>]
VtValue::_Counted<VtArray<pxr_half::half> >::_Counted(const T &) [T = VtArray<pxr_half::half>]
VtValue::_Counted<VtArray<float> >::_Counted(const T &) [T = VtArray<float>]
VtValue::_Counted<VtArray<double> >::_Counted(const T &) [T = VtArray<double>]
VtValue::_Counted<VtArray<std::__1::basic_string<char> > >::_Counted(const T &) [T = VtArray<std::__1::basic_string<char> >]
VtValue::_Counted<VtArray<SdfAssetPath> >::_Counted(const T &) [T = VtArray<SdfAssetPath>]
VtValue::_Counted<GfVec2d>::_Counted(const T &) [T = GfVec2d]
VtValue::_Counted<VtArray<GfVec2d> >::_Counted(const T &) [T = VtArray<GfVec2d>]
VtValue::_Counted<GfVec3d>::_Counted(const T &) [T = GfVec3d]
VtValue::_Counted<VtArray<GfVec3d> >::_Counted(const T &) [T = VtArray<GfVec3d>]
VtValue::_Counted<GfVec4d>::_Counted(const T &) [T = GfVec4d]
VtValue::_Counted<VtArray<GfVec4d> >::_Counted(const T &) [T = VtArray<GfVec4d>]
VtValue::_Counted<VtArray<GfVec2f> >::_Counted(const T &) [T = VtArray<GfVec2f>]
VtValue::_Counted<GfVec3f>::_Counted(const T &) [T = GfVec3f]
VtValue::_Counted<VtArray<GfVec3f> >::_Counted(const T &) [T = VtArray<GfVec3f>]
VtValue::_Counted<GfVec4f>::_Counted(const T &) [T = GfVec4f]
VtValue::_Counted<VtArray<GfVec4f> >::_Counted(const T &) [T = VtArray<GfVec4f>]
VtValue::_Counted<GfVec2h>::_Counted(const T &) [T = GfVec2h]
VtValue::_Counted<VtArray<GfVec2h> >::_Counted(const T &) [T = VtArray<GfVec2h>]
VtValue::_Counted<GfVec3h>::_Counted(const T &) [T = GfVec3h]
VtValue::_Counted<VtArray<GfVec3h> >::_Counted(const T &) [T = VtArray<GfVec3h>]
VtValue::_Counted<GfVec4h>::_Counted(const T &) [T = GfVec4h]
VtValue::_Counted<VtArray<GfVec4h> >::_Counted(const T &) [T = VtArray<GfVec4h>]
VtValue::_Counted<VtArray<GfVec2i> >::_Counted(const T &) [T = VtArray<GfVec2i>]
VtValue::_Counted<GfVec3i>::_Counted(const T &) [T = GfVec3i]
VtValue::_Counted<VtArray<GfVec3i> >::_Counted(const T &) [T = VtArray<GfVec3i>]
VtValue::_Counted<GfVec4i>::_Counted(const T &) [T = GfVec4i]
VtValue::_Counted<VtArray<GfVec4i> >::_Counted(const T &) [T = VtArray<GfVec4i>]
VtValue::_Counted<GfQuath>::_Counted(const T &) [T = GfQuath]
VtValue::_Counted<VtArray<GfQuath> >::_Counted(const T &) [T = VtArray<GfQuath>]
VtValue::_Counted<GfQuatf>::_Counted(const T &) [T = GfQuatf]
VtValue::_Counted<VtArray<GfQuatf> >::_Counted(const T &) [T = VtArray<GfQuatf>]
VtValue::_Counted<GfQuatd>::_Counted(const T &) [T = GfQuatd]
VtValue::_Counted<VtArray<GfQuatd> >::_Counted(const T &) [T = VtArray<GfQuatd>]
VtValue::_Counted<GfMatrix2d>::_Counted(const T &) [T = GfMatrix2d]
VtValue::_Counted<VtArray<GfMatrix2d> >::_Counted(const T &) [T = VtArray<GfMatrix2d>]
VtValue::_Counted<GfMatrix3d>::_Counted(const T &) [T = GfMatrix3d]
VtValue::_Counted<VtArray<GfMatrix3d> >::_Counted(const T &) [T = VtArray<GfMatrix3d>]
VtValue::_Counted<GfMatrix4d>::_Counted(const T &) [T = GfMatrix4d]
VtValue::_Counted<VtArray<GfMatrix4d> >::_Counted(const T &) [T = VtArray<GfMatrix4d>]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/spec.cpp
SetInfo
void SdfSpec::SetInfo(const TfToken &, const VtValue &)
Cannot set field '%s' of type '%s' to provided value '%s' because the value is an incompatible type '%s', on spec <%s>
clear
GetFallbackForInfo
const VtValue &SdfSpec::GetFallbackForInfo(const TfToken &) const
Unknown field '%s'
Non-metadata key '%s' for type %s
GetInfo
VtValue SdfSpec::GetInfo(const TfToken &) const
Invalid info key: %s
_CanEditInfoOnSpec
bool _CanEditInfoOnSpec(const TfToken &, SdfSpecType, const SdfSchemaBase &, const SdfSchema::FieldDefinition *, const char *)
Cannot %s value for unknown field '%s'
Cannot %s value for read-only field '%s'
Field '%s' is not valid for spec type %s
bool SdfMapEditProxy<VtDictionary, SdfIdentityMapEditProxyValuePolicy<VtDictionary> >::_Validate() const [T = VtDictionary, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<VtDictionary>]
Accessing an invalid map proxy
static void TfSingleton<Sdf_SpecTypeInfo>::SetInstanceConstructed(T &) [T = Sdf_SpecTypeInfo]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/specType.cpp
_RegisterSpecType
static void SdfSpecTypeRegistration::_RegisterSpecType(const std::type_info &, SdfSpecType, const std::type_info &)
Schema type %s must be registered with the TfType system.
_RegisterAbstractSpecType
static void SdfSpecTypeRegistration::_RegisterAbstractSpecType(const std::type_info &, const std::type_info &)
Cast
static TfType Sdf_SpecType::Cast(const SdfSpec &, const std::type_info &)
!schemaType.IsUnknown()
CreateSpecTypeEntry
SpecTypeToBitmask::iterator Sdf_SpecTypeInfo::CreateSpecTypeEntry(const std::type_info &)
Spec type %s must be registered with the TfType system.
Duplicate registration for spec type %s.
TfIterator<T, Reverse> &TfIterator<TfHashMap<TfType, unsigned long, TfHash, std::__1::equal_to<TfType>, std::__1::allocator<std::__1::pair<const TfType, unsigned long> > >, false>::operator++() [T = TfHashMap<TfType, unsigned long, TfHash, std::__1::equal_to<TfType>, std::__1::allocator<std::__1::pair<const TfType, unsigned long> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashMap<TfType, unsigned long, TfHash, std::__1::equal_to<TfType>, std::__1::allocator<std::__1::pair<const TfType, unsigned long> > >, false>::operator->() [T = TfHashMap<TfType, unsigned long, TfHash, std::__1::equal_to<TfType>, std::__1::allocator<std::__1::pair<const TfType, unsigned long> > >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/subLayerListEditor.cpp
_OnEdit
virtual void Sdf_SubLayerListEditor::_OnEdit(SdfListOpType, const std::vector<std::string> &, const std::vector<std::string> &) const
oldValues.size() == oldLayerOffsets.size()
Sublayer offsets do not match sublayer paths
virtual bool Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::__1::basic_string<char> >::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::__1::basic_string<char>]
void Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::__1::basic_string<char> >::_UpdateFieldData(const Sdf_VectorListEditor::value_vector_type &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::__1::basic_string<char>]
virtual void Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::__1::basic_string<char> >::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::__1::basic_string<char>]
virtual bool Sdf_ListEditor<SdfSubLayerTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfSubLayerTypePolicy]
1.4.32
CanRead
virtual bool SdfTextFileFormat::CanRead(const std::__1::string &) const
virtual bool SdfTextFileFormat::Read(const SdfLayerBasePtr &, const std::__1::string &, bool) const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/textFileFormat.cpp
File <%s> is not a valid %s file
WriteToFile
virtual bool SdfTextFileFormat::WriteToFile(const SdfLayerBase *, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
ReadFromString
virtual bool SdfTextFileFormat::ReadFromString(const SdfLayerBasePtr &, const std::string &) const
Write
bool SdfTextFileFormat::Write(const SdfLayerBase *, std::ostream &, const std::__1::string &) const
%s %s
doc = 
subLayers = [
hasOwnedSubLayers = true
reorder rootPrims = 
%s = 
pxr/usd/sdf/textFileFormat.ll
textFileFormatYylex
int textFileFormatYylex(Sdf_ParserHelpers::Value *, yyscan_t)
Integer literal '%s' on line %d%s%s out of range, parsing as double.  Consider exponential notation for large floating point values.
out of dynamic memory in textFileFormatYy_create_buffer()
out of dynamic memory in textFileFormatYy_scan_buffer()
out of dynamic memory in textFileFormatYy_scan_bytes()
bad buffer in textFileFormatYy_scan_bytes()
textFileFormatYyset_lineno called with no buffer
textFileFormatYyset_column called with no buffer
out of dynamic memory in textFileFormatYyensure_buffer_stack()
'%s' is not a valid prim name
Duplicate prim '%s'
Reference asset path must not be empty. If this is intended to be an internal reference, remove the '@' delimiters.
Duplicate mapper
Relational attributes cannot be specified in lists of targets to be deleted or reordered
%s%s in <%s> on line %i
 at '%s'
 in file 
pxr/usd/sdf/textFileFormat.yy
textFileFormatYyerror
void textFileFormatYyerror(Sdf_TextParserContext *, const char *)
Sdf_MemoryFlexBuffer
Sdf_MemoryFlexBuffer::Sdf_MemoryFlexBuffer(FILE *, const std::string &, yyscan_t)
Error retrieving file size for @%s@: %s
Failed to read file contents @%s@: premature end-of-file
Failed to read file contents @%s@: an error occurred while reading
Failed to read file contents @%s@: fread() reported incomplete read but neither feof() nor ferror() returned nonzero
Menva
Menva_Parse
Sdf_ParseMenva
bool Sdf_ParseMenva(const std::string &, FILE *, const std::string &, const std::string &, bool, SdfDataRefPtr)
textFileFormatYyParse
Bad boost:get<T>() in menva parser.
Internal menva parser error.
Sdf_ParseMenvaFromString
bool Sdf_ParseMenvaFromString(const std::string &, const std::string &, const std::string &, SdfDataRefPtr)
_MatchMagicIdentifier
void _MatchMagicIdentifier(const Sdf_ParserHelpers::Value &, Sdf_TextParserContext *)
File '%s' is not the latest %s version (found '%s', expected '%s'). The file may parse correctly and yield incorrect results.
Magic Cookie '%s'. Expected prefix of '%s'
invalid value for field "%s"
"%s" is registered as a non-metadata field
_SetItemsIfListOp
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<int>]
context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()
Duplicate items exist for field '%s' at '%s'
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<long long>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<unsigned int>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<unsigned long long>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<std::__1::basic_string<char> >]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<TfToken>]
auto _GenericMetadataEnd(SdfSpecType, Sdf_TextParserContext *)::(anonymous class)::operator()() const
v.IsHolding<SdfUnregisteredValue>()
public
'%s' is not a valid permission constant
Setting inherit paths to None (or empty list) is only allowed when setting explicit inherit paths, not for list editing
Setting specializes paths to None (or empty list) is only allowed when setting explicit specializes paths, not for list editing
Setting references to None (or an empty list) is only allowed when setting explicit references, not for list editing
variant name must be a string
'%s' is not a valid prim path
'%s' is not a valid attribute name
attribute '%s' already has type '%s', cannot change to '%s'
attribute '%s' already has variability '%s', cannot change to '%s'
Setting connection paths to None (or an empty list) is only allowed when setting explicit connection paths, not for list editing
_AttributeAppendConnectionPath
void _AttributeAppendConnectionPath(Sdf_TextParserContext *)
Connection path <%s> (in file @%s@, line %i) has a variant selection, but variant selections are not meaningful in connection paths.  Stripping the variant selection and using <%s> instead.  Resaving the file will fix this issue.
'%s' is not a valid display unit
Unrecognized value typename '%s' for dictionary
Type name has [] for non-shaped value!
Error parsing simple value: %s
Type name missing [] for shaped value.
Error parsing shaped value: %s
Type name has [] for non-shaped value.
Error parsing tuple value: %s
'%s' is not a valid relationship name
Setting relationship targets to None (or empty list) is only allowed when setting explicit targets, not for list editing
'%s' is not a valid property path
'%s' is not a valid prim or property scene path
__AnyType__
mapper
expression
Internal
Direct Manip
Pipeline
Symmetry
User Interface
SDF_WRITE_OLD_TYPENAMES
Write values using old type-name alias
SDF_CONVERT_TO_NEW_TYPENAMES
Force all serialized type-names to the new style
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/types.cpp
SdfDefaultUnit
const TfEnum &SdfDefaultUnit(const TfEnum &)
Unsupported unit '%s'.
SdfUnitCategory
const std::__1::string &SdfUnitCategory(const TfEnum &)
SdfConvertUnit
double SdfConvertUnit(const TfEnum &, const TfEnum &)
Can not convert from '%s' to '%s'.
SdfGetNameForUnit
const std::__1::string &SdfGetNameForUnit(const TfEnum &)
SdfGetUnitFromName
const TfEnum &SdfGetUnitFromName(const std::string &)
Unknown unit name '%s'.
None
SdfTimeSampleMap
SdfRelocatesMap
map<SdfPath, SdfPath>
SdfSpecTypeUnknown
SdfSpecTypeAttribute
SdfSpecTypeConnection
SdfSpecTypeExpression
SdfSpecTypeMapper
SdfSpecTypeMapperArg
SdfSpecTypePrim
SdfSpecTypePseudoRoot
SdfSpecTypeRelationship
SdfSpecTypeRelationshipTarget
SdfSpecTypeVariant
SdfSpecTypeVariantSet
SdfSpecifierDef
SdfSpecifierOver
Over
SdfSpecifierClass
Class
SdfPermissionPublic
Public
SdfPermissionPrivate
Private
SdfVariabilityVarying
Varying
SdfVariabilityUniform
Uniform
SdfVariabilityConfig
Config
SdfLengthUnitMillimeter
SdfLengthUnitCentimeter
SdfLengthUnitDecimeter
SdfLengthUnitMeter
SdfLengthUnitKilometer
SdfLengthUnitInch
SdfLengthUnitFoot
SdfLengthUnitYard
SdfLengthUnitMile
SdfAngularUnitDegrees
SdfAngularUnitRadians
SdfDimensionlessUnitPercent
SdfDimensionlessUnitDefault
Length
Angular
Dimensionless
TfIterator::ArrowReturnType TfIterator<const std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, false>::operator->() [T = const std::__1::map<SdfPath, SdfPath, std::__1::less<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<double, VtValue, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, VtValue> > >, false>::operator++() [T = const std::__1::map<double, VtValue, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, VtValue> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::map<double, VtValue, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, VtValue> > >, false>::operator->() [T = const std::__1::map<double, VtValue, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, VtValue> > >, Reverse = false]
VtValue::_Counted<SdfListOp<SdfUnregisteredValue> >::_Counted(const T &) [T = SdfListOp<SdfUnregisteredValue>]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/valueTypeRegistry.cpp
_AddType
bool (anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **, Sdf_ValueTypeImpl **, const std::string &, const TfType &, const TfType &, const TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)
!name.empty()
Types must have names
!type.IsUnknown() || !arrayType.IsUnknown()
Type '%s' must have a C++ type
existing == Sdf_ValueTypePrivate::GetEmptyTypeName()
Type '%s' already exists
_AddCoreType
const Registry::CoreType *(anonymous namespace)::Registry::_AddCoreType(const std::string &, const TfType &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)
Internal error: unknown TfType for '%s'
tfType != TfType::Find<void>()
Internal error: TfType<void> for '%s'
coreType.type == tfType
Internal error: unexpected core type for '%s'
coreType.role == role
Mismatched roles '%s' and '%s' for core type '%s'
coreType.dim == dimensions
Mismatched dimensions for core type '%s'
coreType.value == value
Mismatched default value for core type '%s'
coreType.unit == unit
Mismatched unit for core type '%s'
static SdfVariantSetSpecHandle SdfVariantSetSpec::New(const SdfPrimSpecHandle &, const std::string &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/variantSetSpec.cpp
Cannot create variant set spec with invalid identifier: '%s'
Cannot create variant set spec at invalid path <%s{%s=}>
static SdfVariantSetSpecHandle SdfVariantSetSpec::New(const SdfVariantSpecHandle &, const std::string &)
NULL owner variant
RemoveVariant
void SdfVariantSetSpec::RemoveVariant(const SdfVariantSpecHandle &)
Cannot remove a variant that does not belong to this variant set.
Unable to remove child: %s
static SdfVariantSpecHandle SdfVariantSpec::New(const SdfVariantSetSpecHandle &, const std::string &)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/sdf/variantSpec.cpp
NULL owner variant set
Invalid variant name: %s
Stream is already open
Unable to open '%s' for writing: %s
Stream is not open
Buffer is not open
Unable to remove temporary file '%s': %s
static void TfSingleton<Tf_DebugSymbolRegistry>::SetInstanceConstructed(T &) [T = Tf_DebugSymbolRegistry]
TF_DEBUG
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/debug.cpp
SetOutputFile
static void TfDebug::SetOutputFile(FILE *)
TfDebug output must go to either stdout or stderr
_SetParentChild
static void TfDebug::_SetParentChild(TfDebug::_Node *, TfDebug::_Node *)
cannot set parent/child relationship after child node has been given children itself
child node has already been assigned a parent
%*s%s --{
%*s}-- %s
_RegisterDebugSymbol
static void TfDebug::_RegisterDebugSymbol(TfEnum, TfDebug::_Node *, const char *)
description argument for '%s' is NULL
description argument for '%s' is empty -- add description!
TF_ADD_ENUM_NAME() failed to add a name for enum type %s with value %d [%s]
_ComplainAboutInvalidSymbol
static void TfDebug::_ComplainAboutInvalidSymbol(const char *)
TF_DEBUG_ENVIRONMENT_SYMBOL(): symbol '%s' invalid.  (Check the TF_DEBUG_RANGE macro().)
%s: %.3f ms
help
TF_DEBUG_REGISTRY
debug the TfDebug registry
coarse grain debugging of TfRegistryManager
detailed debugging of TfRegistryManager
TF_DLOPEN
show files opened by TfDlopen
TF_DLCLOSE
show files closed by TfDlclose
Tf_DebugSymbolRegistry
Tf_DebugSymbolRegistry::Tf_DebugSymbolRegistry()
list
~Tf_DebugSymbolRegistry
Tf_DebugSymbolRegistry::~Tf_DebugSymbolRegistry()
void Tf_DebugSymbolRegistry::_Set(std::__1::string, const std::__1::string *, vector<std::__1::string> *)
: pattern = 
: set 
 true
 false
%s%s: %s
%s  %s
TfIterator::ArrowReturnType TfIterator<const std::__1::map<std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data> > >, false>::operator->() [T = const std::__1::map<std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::map<std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data> > >, false>::operator++() [T = const std::__1::map<std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Tf_DebugSymbolRegistry::_Data> > >, Reverse = false]
TF_DEBUG_OUTPUT_FILE
stderr
%s: %s
_Add
void Tf_DebugSymbolRegistry::_Add(const std::__1::string &, TfDebug::_Node *, const std::__1::string &)
[TF_DEBUG_ENVIRONMENT_SYMBOL] multiple symbol definitions.  This is usually due to software misconfiguration.  Contact the build team for assistance. (duplicate '%s')
_Remove
void Tf_DebugSymbolRegistry::_Remove(const std::__1::string &)
TfEnum
Failed verification: ' 
 -- 
TF_FATAL_VERIFY
reason unknown
allocation failed (you've run out of memory)
bad_alloc
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/diagnostic.cpp
Tf_TerminateHandler
void Tf_TerminateHandler()
%s : uncaught exception! : '%s'
<empty>
TF_DIAGNOSTIC_CODING_ERROR_TYPE
Coding Error
TF_DIAGNOSTIC_FATAL_CODING_ERROR_TYPE
Fatal Coding Error
TF_DIAGNOSTIC_RUNTIME_ERROR_TYPE
Runtime Error
TF_DIAGNOSTIC_FATAL_ERROR_TYPE
Fatal Error
TF_DIAGNOSTIC_NONFATAL_ERROR_TYPE
Error
TF_DIAGNOSTIC_WARNING_TYPE
Warning
TF_DIAGNOSTIC_STATUS_TYPE
Status
TF_APPLICATION_EXIT_TYPE
Application Exit
_BadThrowHandler
void _BadThrowHandler()
std::terminate() called without a current exception
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/safeOutputFile.cpp
ReleaseUpdatedFile
FILE *TfSafeOutputFile::ReleaseUpdatedFile()
Invalid output file (failed to open, or opened for replace)
void TfSafeOutputFile::Close()
static TfSafeOutputFile TfSafeOutputFile::Update(const std::string &)
Unable to open file '%s' for writing
Replace
static TfSafeOutputFile TfSafeOutputFile::Replace(const std::string &)
Unable to obtain writable FILE pointer: %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/atomicRenameUtil.cpp
Tf_AtomicRenameFileOver
bool Tf_AtomicRenameFileOver(const std::string &, const std::string &, std::string *)
Unable to set permissions for temporary file '%s': %s
Failed to rename temporary file '%s' to '%s': %s
Empty fileName
Unable to determine the real path for '%s': %s
Insufficient permissions to write to destination directory '%s'
Insufficient permissions to write to destination file '%s'
Unable to create temporary file '%s': %s
TfDebug
static void TfSingleton<TfDiagnosticMgr>::SetInstanceConstructed(T &) [T = TfDiagnosticMgr]
ERROR
(%s)%d
Thread %s Pending Diagnostics
TF_LOG_STACK_TRACE_ON_ERROR
issue stack traces for all errors
TF_ERROR_MARK_TRACKING
capture stack traces at TfErrorMark ctor/dtor, enable TfReportActiveMarks debugging API.
TF_PRINT_ALL_POSTED_ERRORS_TO_STDERR
print all posted errors immediately, meaning that even errors that are expected and handled will be printed, producing possibly confusing output
%s%s: %s [%s]
 (secondary thread)
%s%s: in %s at line %zu of %s -- %s
TfDlopen: [opening] '%s' (flag=%x)...
TfDlopen: [opened] '%s' (handle=%p)
TfDlopen: [error on opening] '%s': %s
TfDlclose: handle = %p
static void TfSingleton<Tf_EnumRegistry>::SetInstanceConstructed(T &) [T = Tf_EnumRegistry]
TfEnum::_AddName
int::%d
int::
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/enum.cpp
_FatalGetValueError
void TfEnum::_FatalGetValueError(const std::type_info &) const
Attempted to get a '%s' from a TfEnum holding a '%s'.
- Set _enableTfErrorMarkStackTraces and recompile tf/errorMark.cpp.
- Enable the TF_ERROR_MARK_TRACKING debug code.
Active error mark stack traces are disabled.  To enable, please do the following:
== TfErrorMark @ %p created from ===========================
T *TfRefPtr<TfDiagnosticBase::_Data>::operator->() const [T = TfDiagnosticBase::_Data]
TfIterator<T, Reverse> &TfIterator<TfHashMap<const TfErrorMark *, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, TfHash, std::__1::equal_to<const TfErrorMark *>, std::__1::allocator<std::__1::pair<const TfErrorMark *const, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >, false>::operator++() [T = TfHashMap<const TfErrorMark *, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, TfHash, std::__1::equal_to<const TfErrorMark *>, std::__1::allocator<std::__1::pair<const TfErrorMark *const, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashMap<const TfErrorMark *, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, TfHash, std::__1::equal_to<const TfErrorMark *>, std::__1::allocator<std::__1::pair<const TfErrorMark *const, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >, false>::operator->() [T = TfHashMap<const TfErrorMark *, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, TfHash, std::__1::equal_to<const TfErrorMark *>, std::__1::allocator<std::__1::pair<const TfErrorMark *const, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >, Reverse = false]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/expiryNotifier.cpp
SetNotifier
static void Tf_ExpiryNotifier::SetNotifier(void (*)(const void *))
cannot override already installed notification function
SetNotifier2
static void Tf_ExpiryNotifier::SetNotifier2(void (*)(const void *))
cannot override already installed notification(2) function
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/fileUtils.cpp
TfDeleteFile
bool TfDeleteFile(const std::string &)
Failed to delete '%s'
opendir failed: %s
%s is not a directory
Tf_MakeDirsRec
bool Tf_MakeDirsRec(const std::__1::string &, int)
Path %s exists, and is not a directory
Tf_WalkDirsRec
bool Tf_WalkDirsRec(const std::__1::string &, const TfWalkFunction &, bool, const TfWalkErrorHandler &, bool, Tf_FileIdSet *)
linkTargets
Tf_ReadDir
void Tf_ReadDir(const std::__1::string &, const TfWalkErrorHandler &, vector<std::__1::string> *, vector<std::__1::string> *, vector<std::__1::string> *)
dirnames
filenames
symlinknames
ArchUnlinkFile failed for '%s': %s
rmdir failed for '%s': %s
Tf_RmTreeRaiseErrors
void Tf_RmTreeRaiseErrors(const std::__1::string &, const std::__1::string &)
failed to remove '%s': %s
true
TfGetRootMallocStacks
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/mallocTag.cpp
_MallocWrapper
static void *TfMallocTag::_MallocWrapper(size_t, const void *)
!"Failed to register path for allocated block. " "Memory usage may be miscounted"
_Initialize
static bool TfMallocTag::_Initialize(std::string *)
!_mallocGlobalData
__root
_End
void TfMallocTag::Auto::_End()
_threadData->_callSiteOnStack[node->_callSite->_index] > 0
static void TfMallocTag::Pop(const char *)
mismatched call Pop("%s"); top of stack is "%s"
threadData->_callSiteOnStack[node->_callSite->_index] > 0
WARNING: limit of %zu nodes visted, but only %zu bytes of %zu accounted for.  Running with a larger maxPrintedNodes will produce more accurate results.
Tree view  ==============
      inclusive       exclusive
Tf_GetCallSites
void (anonymous namespace)::Tf_GetCallSites(TfMallocTag::CallTree::PathNode *, (anonymous namespace)::Tf_MallocCallSiteTable *)
node
table
Tf_GetOrCreateCallSite
Tf_MallocCallSite *(anonymous namespace)::Tf_GetOrCreateCallSite((anonymous namespace)::Tf_MallocCallSiteTable *, const char *, size_t *)
TfIterator::StarReturnType TfIterator<std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, false>::operator*() [T = std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, false>::operator++() [T = std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, Reverse = false]
Find
static TfMallocTag::_ThreadData *TfMallocTag::Tls::Find()
TfMallocTag not supported on platforms without thread_local
TF_MALLOC_TAG_IMPL
auto
agnostic
jemalloc
jemalloc force
ptmalloc
ptmalloc force
pxmalloc
pxmalloc force
', '
_UsePtmalloc
bool _UsePtmalloc()
Invalid value '%s' for TF_MALLOC_TAG_IMPL: (not one of '%s')
########################################################################
#  TF_MALLOC_TAG_IMPL is overridden to '%s'.  Default is 'auto'  #
########################################################################
TfMallocTag can only use ptmalloc-specific implementation when ptmalloc is active. Falling back to agnostic implementation.
_RegisterPathNode
bool Tf_MallocGlobalData::_RegisterPathNode(Tf_MallocPathNode *)
maximum no. of TfMallocTag nodes has been reached!
Malloc Tag Report
Total bytes = %s
TfIterator::StarReturnType TfIterator<std::__1::basic_string<char>, false>::operator*() [T = std::__1::basic_string<char>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::basic_string<char>, false>::operator++() [T = std::__1::basic_string<char>, Reverse = false]
%-72s %15s%15s %5s %5s %5s
TAGNAME
BytesIncl
BytesExcl
%Prnt
% Exc
%Totl
%-72s %12s%12s %5s %5s %5s
 --------------
-----
%s %15s%15s 
 %.0f%%
%5s %5s %5s
Call Sites
%%-%lds %%%lds %%%lds
NAME
BYTES
%ROOT
%.1f%%
TfIterator::ArrowReturnType TfIterator<const std::__1::vector<TfMallocTag::CallTree::CallSite, std::__1::allocator<TfMallocTag::CallTree::CallSite> >, false>::operator->() [T = const std::__1::vector<TfMallocTag::CallTree::CallSite, std::__1::allocator<TfMallocTag::CallTree::CallSite> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfMallocTag::CallTree::CallSite, std::__1::allocator<TfMallocTag::CallTree::CallSite> >, false>::operator++() [T = const std::__1::vector<TfMallocTag::CallTree::CallSite, std::__1::allocator<TfMallocTag::CallTree::CallSite> >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::map<unsigned long, const std::__1::basic_string<char> *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, const std::__1::basic_string<char> *> > >, true>::operator->() [T = std::__1::map<unsigned long, const std::__1::basic_string<char> *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, const std::__1::basic_string<char> *> > >, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::__1::map<unsigned long, const std::__1::basic_string<char> *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, const std::__1::basic_string<char> *> > >, true>::operator++() [T = std::__1::map<unsigned long, const std::__1::basic_string<char> *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, const std::__1::basic_string<char> *> > >, Reverse = true]
%13s B %13s B %7ld samples    
../ModelKit/extern/boost/boost/optional/optional.hpp
this->is_initialized()
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, false>::operator*() [T = const std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, false>::operator++() [T = const std::__1::vector<TfMallocTag::CallTree::PathNode, std::__1::allocator<TfMallocTag::CallTree::PathNode> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<const TfMallocTag::CallTree::PathNode *, std::__1::allocator<const TfMallocTag::CallTree::PathNode *> >, false>::operator*() [T = std::__1::vector<const TfMallocTag::CallTree::PathNode *, std::__1::allocator<const TfMallocTag::CallTree::PathNode *> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<const TfMallocTag::CallTree::PathNode *, std::__1::allocator<const TfMallocTag::CallTree::PathNode *> >, false>::operator++() [T = std::__1::vector<const TfMallocTag::CallTree::PathNode *, std::__1::allocator<const TfMallocTag::CallTree::PathNode *> >, Reverse = false]
Captured Malloc Stacks
Number of unique captured malloc stacks:          
Total allocated memory by captured mallocs:       
Total number of allocations by captured mallocs:  
Number of captured malloc stacks in report:       
Allocated memory by mallocs in report:            
Number of allocations by mallocs in report:       
Percentage of allocated memory covered by report: 
Captured malloc stack #
Size:            
Num allocations: 
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, false>::operator++() [T = std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, false>::operator*() [T = std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<Tf_MallocTagStringMatchTable::_MatchString, std::__1::allocator<Tf_MallocTagStringMatchTable::_MatchString> >, true>::operator++() [T = const std::__1::vector<Tf_MallocTagStringMatchTable::_MatchString, std::__1::allocator<Tf_MallocTagStringMatchTable::_MatchString> >, Reverse = true]
TfIterator::ArrowReturnType TfIterator<const std::__1::vector<Tf_MallocTagStringMatchTable::_MatchString, std::__1::allocator<Tf_MallocTagStringMatchTable::_MatchString> >, true>::operator->() [T = const std::__1::vector<Tf_MallocTagStringMatchTable::_MatchString, std::__1::allocator<Tf_MallocTagStringMatchTable::_MatchString> >, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *>, std::__1::allocator<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *> > >, false>::operator++() [T = std::__1::vector<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *>, std::__1::allocator<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *>, std::__1::allocator<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *> > >, false>::operator->() [T = std::__1::vector<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *>, std::__1::allocator<std::__1::pair<Tf_MallocCallSite *, Tf_MallocPathNode *> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<const char *, Tf_MallocCallSite *, TfHashCString, TfEqualCString, std::__1::allocator<std::__1::pair<const char *const, Tf_MallocCallSite *> > >, false>::operator++() [T = TfHashMap<const char *, Tf_MallocCallSite *, TfHashCString, TfEqualCString, std::__1::allocator<std::__1::pair<const char *const, Tf_MallocCallSite *> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashMap<const char *, Tf_MallocCallSite *, TfHashCString, TfEqualCString, std::__1::allocator<std::__1::pair<const char *const, Tf_MallocCallSite *> > >, false>::operator->() [T = TfHashMap<const char *, Tf_MallocCallSite *, TfHashCString, TfEqualCString, std::__1::allocator<std::__1::pair<const char *const, Tf_MallocCallSite *> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<const void *, TfMallocTag::CallStackInfo, TfHash, std::__1::equal_to<const void *>, std::__1::allocator<std::__1::pair<const void *const, TfMallocTag::CallStackInfo> > >, false>::operator++() [T = TfHashMap<const void *, TfMallocTag::CallStackInfo, TfHash, std::__1::equal_to<const void *>, std::__1::allocator<std::__1::pair<const void *const, TfMallocTag::CallStackInfo> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashMap<const void *, TfMallocTag::CallStackInfo, TfHash, std::__1::equal_to<const void *>, std::__1::allocator<std::__1::pair<const void *const, TfMallocTag::CallStackInfo> > >, false>::operator->() [T = TfHashMap<const void *, TfMallocTag::CallStackInfo, TfHash, std::__1::equal_to<const void *>, std::__1::allocator<std::__1::pair<const void *const, TfMallocTag::CallStackInfo> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData, (anonymous namespace)::_HashMallocStack, std::__1::equal_to<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData> > >, false>::operator++() [T = TfHashMap<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData, (anonymous namespace)::_HashMallocStack, std::__1::equal_to<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData> > >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<TfHashMap<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData, (anonymous namespace)::_HashMallocStack, std::__1::equal_to<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData> > >, false>::operator->() [T = TfHashMap<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData, (anonymous namespace)::_HashMallocStack, std::__1::equal_to<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, (anonymous namespace)::_MallocStackData> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<const (anonymous namespace)::_MallocStackData *, std::__1::allocator<const (anonymous namespace)::_MallocStackData *> >, true>::operator++() [T = std::__1::vector<const (anonymous namespace)::_MallocStackData *, std::__1::allocator<const (anonymous namespace)::_MallocStackData *> >, Reverse = true]
TfIterator::StarReturnType TfIterator<std::__1::vector<const (anonymous namespace)::_MallocStackData *, std::__1::allocator<const (anonymous namespace)::_MallocStackData *> >, true>::operator*() [T = std::__1::vector<const (anonymous namespace)::_MallocStackData *, std::__1::allocator<const (anonymous namespace)::_MallocStackData *> >, Reverse = true]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TfNotice::_DelivererBase>::operator->() const [PtrTemplate = TfWeakPtr, Type = TfNotice::_DelivererBase]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<TfNotice::Key, std::__1::allocator<TfNotice::Key> >, false>::operator++() [T = std::__1::vector<TfNotice::Key, std::__1::allocator<TfNotice::Key> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<TfNotice::Key, std::__1::allocator<TfNotice::Key> >, false>::operator*() [T = std::__1::vector<TfNotice::Key, std::__1::allocator<TfNotice::Key> >, Reverse = false]
static void TfSingleton<Tf_NoticeRegistry>::SetInstanceConstructed(T &) [T = Tf_NoticeRegistry]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/noticeRegistry.cpp
_VerifyFailedCast
void Tf_NoticeRegistry::_VerifyFailedCast(const std::type_info &, const TfNotice &, const TfNotice *)
Special handling of notice type '%s' invoked.
Most likely, this class is missing a non-inlined virtual destructor.
Please request that someone modify class '%s' accordingly.
All attempts to cast notice of type '%s' to type '%s' failed.  One possibility is that '%s' has no non-inlined virtual functions and this system's C++ ABI is non-standard.  Verify that class '%s'has at least one non-inline virtual function.
Tf_NoticeRegistry::_Register
_Register
TfNotice::Key Tf_NoticeRegistry::_Register(TfNotice::_DelivererBase *)
notice type is undefined in the TfType system
Class %s (derived from TfNotice) is undefined in the TfType system
TfNotice type '%s' has multiple base types;
it must have a unique parent in the TfType system
TfNotice type '%s' has NO base types;
this should be impossible.
_BadTypeFatalMsg
void Tf_NoticeRegistry::_BadTypeFatalMsg(const TfType &, const std::type_info &)
../ModelKit/extern/usd/pxr/base/tf/noticeRegistry.h
_Prepend
void Tf_NoticeRegistry::_Prepend(Tf_NoticeRegistry::_DelivererContainer *, const TfWeakBase *, TfNotice::_DelivererBase *)
!item->_list
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfWeakPtr<TfNotice::Probe>, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, false>::operator++() [T = const std::__1::vector<TfWeakPtr<TfNotice::Probe>, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfWeakPtr<TfNotice::Probe>, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, false>::operator*() [T = const std::__1::vector<TfWeakPtr<TfNotice::Probe>, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TfNotice::Probe>::operator->() const [PtrTemplate = TfWeakPtr, Type = TfNotice::Probe]
TfIterator<T, Reverse> &TfIterator<TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash, std::__1::equal_to<TfWeakPtr<TfNotice::Probe> >, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, false>::operator++() [T = TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash, std::__1::equal_to<TfWeakPtr<TfNotice::Probe> >, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, Reverse = false]
TfIterator::StarReturnType TfIterator<TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash, std::__1::equal_to<TfWeakPtr<TfNotice::Probe> >, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, false>::operator*() [T = TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash, std::__1::equal_to<TfWeakPtr<TfNotice::Probe> >, std::__1::allocator<TfWeakPtr<TfNotice::Probe> > >, Reverse = false]
encountered dangling symbolic link
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/fastCompression.cpp
CompressToBuffer
static size_t TfFastCompression::CompressToBuffer(const char *, char *, size_t)
Attempted to compress a buffer of %zu bytes, more than the maximum supported %zu
DecompressFromBuffer
static size_t TfFastCompression::DecompressFromBuffer(const char *, char *, size_t, size_t)
Failed to decompress data, possibly corrupt? LZ4 error code: %d
TF_DISCOVERY_TERSE
TF_DISCOVERY_DETAILED
TfRegistryManager: initialized
TfRegistryManager: no functions to run for %s
TfRegistryManager: running %zd functions for %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/registryManager.cpp
_RunRegistrationFunctionsNoLock
void (anonymous namespace)::Tf_RegistryManagerImpl::_RunRegistrationFunctionsNoLock(const std::__1::string &)
i->second.empty()
ClearActiveLibrary
void (anonymous namespace)::Tf_RegistryManagerImpl::ClearActiveLibrary(const char *)
libraryName && libraryName[0]
TfRegistryManager: unloading '%s'
_UnloadNoLock
void (anonymous namespace)::Tf_RegistryManagerImpl::_UnloadNoLock(const char *)
call to empty boost::function
AddRegistrationFunction
void (anonymous namespace)::Tf_RegistryManagerImpl::AddRegistrationFunction(const char *, (anonymous namespace)::Tf_RegistryManagerImpl::RegistrationFunction, const char *)
TfRegistryManager: Ignoring library with no name
typeName && typeName[0]
TfRegistryManager: Ignoring registration with no type in %s
TfRegistryManager: Library %s
active.identifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/scopeDescription.cpp
Remove
void (anonymous namespace)::_StackRegistry::Remove((anonymous namespace)::_Stack *)
it != _stacks.end()
_Pop
void TfScopeDescription::_Pop() const
stack.head == this
Error: cannot generate TfScopeDescription stacks - failed to acquire lock on stack registry mutex.
Error: cannot write TfScopeDescription stack for thread 
 - failed to acquire stack lock.
Thread 
 (main)
 Scope Descriptions
 (from 
 in 
Writing stack for %s to %s because of %s.
Error writing to stack trace file. Printing stack to stderr
%s crashed. %s: %s
in %s at line %zu of %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/stackTrace.cpp
TfGetAppLaunchTime
time_t TfGetAppLaunchTime()
Could not determine application launch time.
st_%s
 seconds
Cannot use quotes as delimiters.
String is missing an end-quote ('%s'): %s
Escape character cannot be a delimiter.
String has unmatched close delimiter ('%c', '%c'): %s
String has unmatched open delimiter ('%c', '%c'): %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/stringUtils.cpp
Tf_ApplyDoubleToStringConverter
void Tf_ApplyDoubleToStringConverter(float, char *, int)
conv.ToShortestSingle(val, &builder)
double_conversion failed
void Tf_ApplyDoubleToStringConverter(double, char *, int)
conv.ToShortest(val, &builder)
&<>"'
&amp;
&lt;
&gt;
&quot;
&apos;
DoubleToStringConverter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/pxrDoubleConversion/double-conversion.h
((flags & EMIT_TRAILING_DECIMAL_POINT) != 0) || !((flags & EMIT_TRAILING_ZERO_AFTER_POINT) != 0)
Finalize
strlen(buffer_.start()) == static_cast<size_t>(position_)
is_finalized()
static void TfSingleton<Tf_TokenRegistry>::SetInstanceConstructed(T &) [T = Tf_TokenRegistry]
vector<TfToken>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/token.cpp
_PossiblyDestroyRep
void Tf_TokenRegistry::_PossiblyDestroyRep(Tf_TokenRegistry::_RepPtr)
repFoundInSet
failed to find token '%s' in table for destruction
TfToken
Set # -- Size
%zu -- %zu
TfIterator::ArrowReturnType TfIterator<std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >, false>::operator->() [T = std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >, false>::operator++() [T = std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >, Reverse = false]
static void TfSingleton<Tf_TypeRegistry>::SetInstanceConstructed(T &) [T = Tf_TypeRegistry]
TfType::_Root
TfType::_Unknown
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/tf/type.cpp
GetAllAncestorTypes
void TfType::GetAllAncestorTypes(vector<TfType> *) const
Cannot ask for ancestor types of Unknown type
Cannot resolve ancestor classes for '%s' because the inheritance hierarchy is inconsistent.  Please check that multiply-inherited types are inherited in the same order throughout the inherited hierarchy.
bool TfType::IsA(TfType) const
IsA() was given an Unknown base type.  This probably means the attempt to look up the base type failed.  (Note: to explicitly check if a type is unknown, use IsUnknown() instead.)
TfType::Declare
Declare
static const TfType &TfType::Declare(const std::__1::string &)
!t._info->IsDefined()
Cannot declare the type '%s'
Type '%s' has been declared to have 0 bases, and therefore inherits directly from the root type.  Cannot add bases.
TfType '%s' was previously declared to have '%s' as a base, but subsequent declaration does not include this as a base.  The newly given bases were: (%s).  If this is a type declared in a plugin, check that the plugin metadata is correct.
TfType '%s' has already had its definitionCallback set; ignoring 2nd declaration
static const TfType &TfType::Declare(const std::__1::string &, const vector<TfType> &, TfType::DefinitionCallback)
_DefineCppType
void TfType::_DefineCppType(const std::type_info &, size_t, bool, bool) const
TfType '%s' already has a defined C++ type; cannot redefine
_AddBase
void TfType::_AddBase(TfType) const
Specified base type is unknown, skipping
SetFactory
void TfType::SetFactory(std::unique_ptr<FactoryBase>) const
Cannot set factory of %s
Cannot change the factory of %s
_GetFactory
TfType::FactoryBase *TfType::_GetFactory() const
Cannot manufacture type %s
AddAlias
void TfType::AddAlias(TfType, const std::__1::string &) const
TfIterator::ArrowReturnType TfIterator<std::__1::vector<std::__1::vector<TfType, std::__1::allocator<TfType> >, std::__1::allocator<std::__1::vector<TfType, std::__1::allocator<TfType> > > >, false>::operator->() [T = std::__1::vector<std::__1::vector<TfType, std::__1::allocator<TfType> >, std::__1::allocator<std::__1::vector<TfType, std::__1::allocator<TfType> > > >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::vector<TfType, std::__1::allocator<TfType> >, std::__1::allocator<std::__1::vector<TfType, std::__1::allocator<TfType> > > >, false>::operator++() [T = std::__1::vector<std::__1::vector<TfType, std::__1::allocator<TfType> >, std::__1::allocator<std::__1::vector<TfType, std::__1::allocator<TfType> > > >, Reverse = false]
Cannot set alias '%s' under '%s', because it is already set to '%s', not '%s'.
There already is a type named '%s'; cannot create an alias of the same name.
size_t
vector<bool>
vector<char>
vector<unsigned char>
vector<short>
vector<unsigned short>
vector<int>
vector<unsigned int>
vector<long>
vector<unsigned long>
vector<size_t>
vector<long long>
vector<unsigned long long>
vector<float>
vector<double>
vector<string>
../ModelKit/extern/boost/boost/smart_ptr/scoped_ptr.hpp
reset
p == 0 || p != px
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfType, std::__1::allocator<TfType> >, false>::operator++() [T = const std::__1::vector<TfType, std::__1::allocator<TfType> >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<const std::__1::vector<TfType, std::__1::allocator<TfType> >, false>::operator->() [T = const std::__1::vector<TfType, std::__1::allocator<TfType> >, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::vector<TfType, std::__1::allocator<TfType> >, false>::operator++() [T = std::__1::vector<TfType, std::__1::allocator<TfType> >, Reverse = false]
TfIterator::StarReturnType TfIterator<std::__1::vector<TfType, std::__1::allocator<TfType> >, false>::operator*() [T = std::__1::vector<TfType, std::__1::allocator<TfType> >, Reverse = false]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<TfType, std::__1::allocator<TfType> >, false>::operator->() [T = std::__1::vector<TfType, std::__1::allocator<TfType> >, Reverse = false]
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfType, std::__1::allocator<TfType> >, false>::operator*() [T = const std::__1::vector<TfType, std::__1::allocator<TfType> >, Reverse = false]
USD_ASSIGN_MASTERS_DETERMINISTICALLY
Set to true to cause instances to be assigned to masters in a deterministic way, ensuring consistency across runs.  This incurs some additional overhead.
InstanceCache::RegisterIndex
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/instanceCache.cpp
RegisterInstancePrimIndex
bool Usd_InstanceCache::RegisterInstancePrimIndex(const PcpPrimIndex &)
index.IsInstanceable()
InstanceCache::UnregisterIndex
UnregisterInstancePrimIndexesUnder
void Usd_InstanceCache::UnregisterInstancePrimIndexesUnder(const SdfPath &)
masterToKeyIt != _masterToInstanceKeyMap.end()
ProcessChanges
void Usd_InstanceCache::ProcessChanges(Usd_InstanceChanges *)
InstanceCache::ProcessChanges
!primIndexes.empty()
keysToProcess.emplace(primIndexes.front(), key).second
Instancing: Creating master <%s> with source prim index <%s>
Instancing: Changing source <%s> -> <%s> for <%s>
_RemoveInstances
void Usd_InstanceCache::_RemoveInstances(const Usd_InstanceKey &, const Usd_InstanceCache::_PrimIndexPaths &, Usd_InstanceChanges *, std::unordered_map<SdfPath, SdfPath, SdfPath::Hash> *)
_masterToSourcePrimIndexMap.erase(masterPath)
_RemoveMasterIfNoInstances
void Usd_InstanceCache::_RemoveMasterIfNoInstances(const Usd_InstanceKey &, Usd_InstanceChanges *)
masterToPrimIndexesIt != _masterToPrimIndexesMap.end()
Instancing: Removing master <%s>
IsPathInMaster
static bool Usd_InstanceCache::IsPathInMaster(const SdfPath &)
IsPathInMaster() requires an absolute path but was given <%s>
__Master_
__Master_%zu
_MasterUsesPrimIndexPath
bool Usd_InstanceCache::_MasterUsesPrimIndexPath(const SdfPath &, vector<SdfPath> *) const
masterToSourceIt != _masterToSourcePrimIndexMap.end()
GetPathInMasterForInstancePath
SdfPath Usd_InstanceCache::GetPathInMasterForInstancePath(const SdfPath &) const
UsdBlockStageCaches
UsdBlockStageCachePopulation
Usd_NoBlock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/attribute.cpp
SdfAttributeSpecHandle UsdAttribute::_CreateSpec(const SdfValueTypeName &, bool, const SdfVariability &) const
UsdAttributes can only possess variability varying or uniform.  Cannot create attribute %s.%s
Cannot refer to a master or an object within a master.
Cannot map <%s> to layer @%s@ via stage's EditTarget
AddConnection
bool UsdAttribute::AddConnection(const SdfPath &, UsdListPosition) const
Cannot append connection <%s> to attribute <%s>: %s
RemoveConnection
bool UsdAttribute::RemoveConnection(const SdfPath &) const
Cannot remove connection <%s> from attribute <%s>: %s
SetConnections
bool UsdAttribute::SetConnections(const SdfPathVector &) const
Cannot set connection <%s> on attribute <%s>: %s
GetConnections
bool UsdAttribute::GetConnections(SdfPathVector *) const
Getting connections for attribute <%s>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/primData.cpp
Usd_PrimData
Usd_PrimData::Usd_PrimData(UsdStage *, const SdfPath &)
Attempted to construct with null stage
Usd_PrimData::ctor<%s,%s,%s>
~Usd_PrimData::dtor<%s,%s,%s>
prim is invalid/expired
GetSourcePrimIndex
const PcpPrimIndex &Usd_PrimData::GetSourcePrimIndex() const
_primIndex
null prim
%s%sprim <%s> %s
expired 
inactive 
'%s' 
on stage %s
Usd_IssueFatalPrimAccessError
void Usd_IssueFatalPrimAccessError(const Usd_PrimData *)
Used %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/attributeQuery.cpp
UsdAttributeQuery
UsdAttributeQuery::UsdAttributeQuery(const UsdPrim &, const TfToken &)
Invalid attribute '%s' on prim <%s>
void UsdAttributeQuery::_Initialize(const UsdAttribute &)
Invalid attribute
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/clipsAPI.cpp
static UsdClipsAPI UsdClipsAPI::Get(const UsdStagePtr &, const SdfPath &)
assetPaths
manifestAssetPath
primPath
templateAssetPath
templateEndTime
templateStartTime
templateStride
templateActiveOffset
times
USD_AUTHOR_LEGACY_CLIPS
If on, clip info will be stored in separate metadata fields instead of in the clips dictionary when using API that does not specify a clip set.
SetClipAssetPaths
bool UsdClipsAPI::SetClipAssetPaths(const VtArray<SdfAssetPath> &, const std::string &)
Empty clip set name not allowed
Clip set name must be a valid identifier (got '%s')
GetClipAssetPaths
bool UsdClipsAPI::GetClipAssetPaths(VtArray<SdfAssetPath> *, const std::string &) const
SetClipManifestAssetPath
bool UsdClipsAPI::SetClipManifestAssetPath(const SdfAssetPath &, const std::string &)
GetClipManifestAssetPath
bool UsdClipsAPI::GetClipManifestAssetPath(SdfAssetPath *, const std::string &) const
SetClipPrimPath
bool UsdClipsAPI::SetClipPrimPath(const std::string &, const std::string &)
GetClipPrimPath
bool UsdClipsAPI::GetClipPrimPath(std::string *, const std::string &) const
SetClipActive
bool UsdClipsAPI::SetClipActive(const VtVec2dArray &, const std::string &)
GetClipActive
bool UsdClipsAPI::GetClipActive(VtVec2dArray *, const std::string &) const
SetClipTimes
bool UsdClipsAPI::SetClipTimes(const VtVec2dArray &, const std::string &)
GetClipTimes
bool UsdClipsAPI::GetClipTimes(VtVec2dArray *, const std::string &) const
GetClipTemplateAssetPath
bool UsdClipsAPI::GetClipTemplateAssetPath(std::string *, const std::string &) const
SetClipTemplateAssetPath
bool UsdClipsAPI::SetClipTemplateAssetPath(const std::string &, const std::string &)
GetClipTemplateStride
bool UsdClipsAPI::GetClipTemplateStride(double *, const std::string &) const
SetClipTemplateStride
bool UsdClipsAPI::SetClipTemplateStride(const double)
bool UsdClipsAPI::SetClipTemplateStride(const double, const std::string &)
GetClipTemplateActiveOffset
bool UsdClipsAPI::GetClipTemplateActiveOffset(double *, const std::string &) const
SetClipTemplateActiveOffset
bool UsdClipsAPI::SetClipTemplateActiveOffset(const double, const std::string &)
GetClipTemplateStartTime
bool UsdClipsAPI::GetClipTemplateStartTime(double *, const std::string &) const
SetClipTemplateStartTime
bool UsdClipsAPI::SetClipTemplateStartTime(const double, const std::string &)
GetClipTemplateEndTime
bool UsdClipsAPI::GetClipTemplateEndTime(double *, const std::string &) const
SetClipTemplateEndTime
bool UsdClipsAPI::SetClipTemplateEndTime(const double, const std::string &)
ClipsAPI
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/object.cpp
bool UsdObject::_SetMetadataImpl(const TfToken &, const T &, const TfToken &) const [T = VtValue]
Unregistered metadata key: %s
bool UsdObject::_SetMetadataImpl(const TfToken &, const T &, const TfToken &) const [T = SdfAbstractDataConstValue]
%sattribute '%s' on 
%srelationship '%s' on 
%sproperty '%s' on 
Unknown object type %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/primFlags.cpp
bool Usd_PrimFlagsPredicate::operator()(const UsdPrim &) const
Applying predicate to invalid prim.
../ModelKit/extern/usd/pxr/usd/usd/object.h
UsdObject
UsdObject::UsdObject(const Usd_PrimDataHandle &, const SdfPath &)
!_prim || _prim->GetPath() != _proxyPrimPath
TfType
0.4.0
USD_WRITE_NEW_USDC_FILES_AS_VERSION
When writing new Usd Crate files, write them as this version.  This must have the same major version as the software and have less or equal minor and patch versions.  This is only for new files; saving edits to an existing file preserves its version.
Tf_EnvSettingRegistry
USDC_MMAP_PREFETCH_KB
If set to a nonzero value, attempt to disable the OS's prefetching behavior for memory-mapped files and instead do simple aligned block fetches of the given size instead.  If necessary the setting value is rounded up to the next whole multiple of the system's page size (typically 4 KB).
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/crateFile.cpp
GetSection
const CrateFile::_Section *Usd_CrateFile::CrateFile::_TableOfContents::GetSection(Usd_CrateFile::_SectionName) const
Crate file missing %s section
USDC_USE_PREAD
_MmapFile
static ArchConstFileMapping Usd_CrateFile::CrateFile::_MmapFile(const char *, FILE *, int64_t, int64_t)
Couldn't map file '%s'
Usd_CrateFile::CrateFile::Open
Open
static std::unique_ptr<CrateFile> Usd_CrateFile::CrateFile::Open(const std::__1::string &, int64_t, int64_t)
Failed to open file '%s'
USDC_DEBUG_DUMP
USDC_DUMP_PAGE_MAPS
~CrateFile
Usd_CrateFile::CrateFile::~CrateFile()
failed to obtain memory residency information
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
page map for %s
%zd pages, %zd used (%.1f%%), %zd in mem (%.1f%%)
used %.1f%% of pages in mem
legend: '+': in mem & used,     '-': in mem & unused
        '!': not in mem & used, ' ': not in mem & unused
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
StartPacking
CrateFile::Packer Usd_CrateFile::CrateFile::StartPacking(const std::__1::string &)
_fileName.empty() || _fileName == fileName
Close
bool Usd_CrateFile::CrateFile::Packer::Close()
_crate && _crate->_packCtx
%zu specs, %zu paths, %zu tokens, %zu strings, %zu unique fields, %zu unique field sets.
#%d: %s = %s
_GetIndexForToken
Usd_CrateFile::TokenIndex Usd_CrateFile::CrateFile::_GetIndexForToken(const TfToken &) const
iter != _packCtx->tokenToTokenIndex.end()
_PackValue
Usd_CrateFile::ValueRep Usd_CrateFile::CrateFile::_PackValue(const VtValue &)
Attempted to pack unsupported type '%s' (%s)
_UnpackValue
void Usd_CrateFile::CrateFile::_UnpackValue(Usd_CrateFile::ValueRep, VtValue *) const
Attempted to unpack unsupported type enum value %d
Usd_CrateFile::CrateFile::_DoAllTypeRegistrations
_Section
Usd_CrateFile::CrateFile::_Section::_Section(const char *, int64_t, int64_t)
strlen(inName) <= _SectionNameMaxLength
ValueRep enum=
 (array)
 payload=
TimeSamples with 
 samples
TfType::Define
%d.%d.%d
Rounded USDC_MMAP_PREFETCH_KB value %d to %d
_GetVersionForNewlyCreatedFiles
CrateFile::Version Usd_CrateFile::_GetVersionForNewlyCreatedFiles()
Invalid value '%s' for USD_WRITE_NEW_USDC_FILES_AS_VERSION - falling back to default '%s'
%u.%u.%u
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
WriteToFd
int64_t WriteToFd(FILE *, const void *, int64_t, int64_t)
Failed writing usdc data: %s
<%s> %s
TOKENS
STRINGS
FIELDS
FIELDSETS
PATHS
SPECS
_GetControlBlock
Vt_ArrayBase::_ControlBlock &Vt_ArrayBase::_GetControlBlock(void *)
_ReadBootStrap
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_PreadStream]
File too small to contain bootstrap structure
Usd crate bootstrap section corrupt
Usd crate file version mismatch -- file is %s, software supports %s
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_MmapStream]
_ReadTokens
_ReadStrings
_ReadFields
_ReadFieldSets
_ReadPaths
_ReadSpecs
get_next_capacity, allocator's max_size reached
SdfPathTable::_FindOrCreate
SdfPathTable::_IterBoolPair SdfPathTable<Usd_CrateFile::PathIndex>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = Usd_CrateFile::PathIndex]
SdfPathTable::_Grow
void SdfPathTable<Usd_CrateFile::PathIndex>::_Grow() [MappedType = Usd_CrateFile::PathIndex]
VtArray::_AllocateNew
VtArray::value_type *VtArray<bool>::_AllocateNew(size_t) [T = bool]
_Set
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = bool, Table = TfType [55]]
!tfType.IsUnknown()
%s not registered with TfType
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<bool>, Table = TfType [55]]
VtArray::value_type *VtArray<unsigned char>::_AllocateNew(size_t) [T = unsigned char]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = unsigned char, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<unsigned char>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = int, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<int>, Table = TfType [55]]
VtArray::value_type *VtArray<unsigned int>::_AllocateNew(size_t) [T = unsigned int]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = unsigned int, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<unsigned int>, Table = TfType [55]]
VtArray::value_type *VtArray<long long>::_AllocateNew(size_t) [T = long long]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = long long, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<long long>, Table = TfType [55]]
VtArray::value_type *VtArray<unsigned long long>::_AllocateNew(size_t) [T = unsigned long long]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = unsigned long long, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<unsigned long long>, Table = TfType [55]]
_ReadPossiblyCompressedArray
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = pxr_half::half]
Corrupt data stream detected reading compressed array in <%s>
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream>, T = pxr_half::half]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = pxr_half::half, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<pxr_half::half>, Table = TfType [55]]
VtArray::value_type *VtArray<float>::_AllocateNew(size_t) [T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream>, T = float]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = float, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<float>, Table = TfType [55]]
VtArray::value_type *VtArray<double>::_AllocateNew(size_t) [T = double]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = double]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream>, T = double]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = double, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<double>, Table = TfType [55]]
VtArray::value_type *VtArray<std::__1::basic_string<char> >::_AllocateNew(size_t) [T = std::__1::basic_string<char>]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = std::__1::basic_string<char>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<std::__1::basic_string<char> >, Table = TfType [55]]
VtArray::value_type *VtArray<TfToken>::_AllocateNew(size_t) [T = TfToken]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = TfToken, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<TfToken>, Table = TfType [55]]
VtArray::value_type *VtArray<SdfAssetPath>::_AllocateNew(size_t) [ELEM = SdfAssetPath]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfAssetPath, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<SdfAssetPath>, Table = TfType [55]]
VtArray::value_type *VtArray<GfQuatd>::_AllocateNew(size_t) [T = GfQuatd]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfQuatd, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfQuatd>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfQuatf, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfQuatf>, Table = TfType [55]]
VtArray::value_type *VtArray<GfQuath>::_AllocateNew(size_t) [T = GfQuath]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfQuath, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfQuath>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec2d, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec2d>, Table = TfType [55]]
VtArray::value_type *VtArray<GfVec2f>::_AllocateNew(size_t) [T = GfVec2f]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec2f, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec2f>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec2h, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec2h>, Table = TfType [55]]
VtArray::value_type *VtArray<GfVec2i>::_AllocateNew(size_t) [T = GfVec2i]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec2i, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec2i>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec3d, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec3d>, Table = TfType [55]]
VtArray::value_type *VtArray<GfVec3f>::_AllocateNew(size_t) [T = GfVec3f]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec3f, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec3f>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec3h, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec3h>, Table = TfType [55]]
VtArray::value_type *VtArray<GfVec3i>::_AllocateNew(size_t) [T = GfVec3i]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec3i, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec3i>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec4d, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec4d>, Table = TfType [55]]
VtArray::value_type *VtArray<GfVec4f>::_AllocateNew(size_t) [T = GfVec4f]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec4f, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec4f>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec4h, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec4h>, Table = TfType [55]]
VtArray::value_type *VtArray<GfVec4i>::_AllocateNew(size_t) [T = GfVec4i]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfVec4i, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfVec4i>, Table = TfType [55]]
VtArray::value_type *VtArray<GfMatrix2d>::_AllocateNew(size_t) [T = GfMatrix2d]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfMatrix2d, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfMatrix2d>, Table = TfType [55]]
VtArray::value_type *VtArray<GfMatrix3d>::_AllocateNew(size_t) [T = GfMatrix3d]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfMatrix3d, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfMatrix3d>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = GfMatrix4d, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtArray<GfMatrix4d>, Table = TfType [55]]
../ModelKit/extern/usd/pxr/base/vt/dictionary.h
increment
void VtDictionary::Iterator<const std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > > *, std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, void *> *, long> > >::increment() [UnderlyingMapPtr = const std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > > *, UnderlyingIterator = std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, void *> *, long> >]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtDictionary, Table = TfType [55]]
A SdfListOp value using a prepended or appended value was detected, which requires crate version 0.2.0.
RequestWriteVersionUpgrade
bool Usd_CrateFile::CrateFile::_PackingContext::RequestWriteVersionUpgrade(Usd_CrateFile::CrateFile::Version, std::string)
Upgrading crate file <%s> from version %s to %s: %s
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<TfToken>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<std::__1::basic_string<char> >, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<SdfPath>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<SdfReference>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<int>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<long long>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<unsigned int>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<unsigned long long>, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = std::__1::vector<SdfPath, std::__1::allocator<SdfPath> >, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = std::__1::vector<TfToken, std::__1::allocator<TfToken> >, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfSpecifier, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfPermission, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfVariability, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = Usd_CrateFile::TimeSamples, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfPayload, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = std::__1::vector<double, std::__1::allocator<double> >, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = std::__1::vector<SdfLayerOffset, std::__1::allocator<SdfLayerOffset> >, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfValueBlock, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = VtValue, Table = TfType [55]]
SdfUnregisteredValue Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(SdfUnregisteredValue *) [ByteStream = Usd_CrateFile::_PreadStream]
SdfUnregisteredValue in crate file contains invalid type '%s' = '%s'; expected string, VtDictionary or SdfUnregisteredValueListOp; returning empty
SdfUnregisteredValue Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream>::Read(SdfUnregisteredValue *) [ByteStream = Usd_CrateFile::_MmapStream]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfUnregisteredValue, Table = TfType [55]]
static void Usd_CrateFile::_EnumToTfTypeTablePopulater::_Set(Table &, Usd_CrateFile::TypeEnum) [T = SdfListOp<SdfUnregisteredValue>, Table = TfType [55]]
TOKENS ================================
FIELDSETS ================================
--------------------------------
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
static void TfSingleton<UsdSchemaRegistry>::SetInstanceConstructed(T &) [T = UsdSchemaRegistry]
registry.usda
../ModelKit/extern/usd/pxr/usd/sdf/declareHandles.h
SdfHandle::SpecType *SdfHandle<SdfAttributeSpec>::operator->() const [T = SdfAttributeSpec]
SdfHandle::SpecType *SdfHandle<SdfRelationshipSpec>::operator->() const [T = SdfRelationshipSpec]
T *TfRefPtr<SdfLayer>::operator->() const [T = SdfLayer]
SdfHandle::SpecType *SdfHandle<SdfPrimSpec>::operator->() const [T = SdfPrimSpec]
SdfHandle::SpecType *SdfHandle<SdfPropertySpec>::operator->() const [T = SdfPropertySpec]
generatedSchema.usda
multipleApplyAPISchemas
VtDictionaryGet
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = VtArray<std::__1::basic_string<char> >]
Attempted to get value for key '
', which is not in the dictionary.
../ModelKit/extern/usd/pxr/base/vt/array.h
const Vt_ArrayBase::_ControlBlock &Vt_ArrayBase::_GetControlBlock(void *) const
!_foreignSource
DEFAULT
format
USD_DEFAULT_FILE_FORMAT
Default file format for new .usd files; one of 'usda', 'usdb', 'usdc'.
virtual bool UsdUsdFileFormat::Read(const SdfLayerBasePtr &, const std::__1::string &, bool) const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/usdFileFormat.cpp
_GetUnderlyingFileFormatForLayer
static SdfFileFormatConstPtr UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(const SdfLayerBase *)
_GetFileFormatForArguments
SdfFileFormatConstPtr _GetFileFormatForArguments(const SdfFileFormat::FileFormatArguments &)
'%s' argument was '%s', must be '%s', '%s', or '%s'. Defaulting to '%s'.
_GetFormatArgumentForFileFormat
TfToken _GetFormatArgumentForFileFormat(const SdfFileFormatConstPtr &)
formatArg == UsdUsdaFileFormatTokens->Id || formatArg == UsdUsdbFileFormatTokens->Id || formatArg == UsdUsdcFileFormatTokens->Id
Unhandled file format '%s'
<null>
_GetDefaultFileFormat
SdfFileFormatConstPtr _GetDefaultFileFormat()
Default file format '%s' set in USD_DEFAULT_FILE_FORMAT must be one of 'usda', 'usdb', or 'usdc'. Falling back to 'usdc'
Default file format '%s' set in USD_DEFAULT_FILE_FORMAT could not be found. Falling back to 'usdc'
defaultFormat
_GetFileFormat
SdfFileFormatConstPtr _GetFileFormat(const TfToken &)
fileFormat || formatId == UsdUsdbFileFormatTokens->Id
SdfHandle::SpecType *SdfHandle<SdfSpec>::operator->() const [T = SdfSpec]
usdb
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfFileFormat>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfFileFormat]
PopulateClipsForPrim
bool Usd_ClipCache::PopulateClipsForPrim(const SdfPath &, const PcpPrimIndex &)
Populated clips for prim <%s>
GetClipsForPrim
const std::vector<Usd_ClipCache::Clips> &Usd_ClipCache::GetClipsForPrim(const SdfPath &) const
No clip manifest specified for prim <%s>. Performance may be improved if a manifest is specified.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/clipCache.cpp
_AddClipsFromClipInfo
void _AddClipsFromClipInfo(const SdfPath &, const Usd_ResolvedClipInfo &, Usd_ClipCache::Clips *)
Invalid clips specified for prim <%s>: %s
startTimeToClip.insert( std::make_pair(entry.startTime, entry)).second
No clip prim path specified
Empty clip asset path in metadata '%s'
Path '%s' in metadata '%s' must be an absolute path to a prim
Invalid clip index %d in metadata '%s'
Clip %d cannot be active at time %.3f in metadata '%s' because clip %d was already specified as active at this time.
mutex: pthread_mutex_lock failed
SdfPathTable::_IterBoolPair SdfPathTable<std::__1::vector<Usd_ClipCache::Clips, std::__1::allocator<Usd_ClipCache::Clips> > >::_InsertInTable(const SdfPathTable::value_type &) [MappedType = std::__1::vector<Usd_ClipCache::Clips, std::__1::allocator<Usd_ClipCache::Clips> >]
void SdfPathTable<std::__1::vector<Usd_ClipCache::Clips, std::__1::allocator<Usd_ClipCache::Clips> > >::_Grow() [MappedType = std::__1::vector<Usd_ClipCache::Clips, std::__1::allocator<Usd_ClipCache::Clips> >]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/prim.cpp
GetPrimDefinition
SdfPrimSpecHandle UsdPrim::GetPrimDefinition() const
No definition for prim type '%s', <%s>
_IsA
bool UsdPrim::_IsA(const TfType &, bool) const
Unknown schema type (%s) is invalid for IsA query
_HasAPI
bool UsdPrim::_HasAPI(const TfType &, bool, const TfToken &) const
HasAPI: Invalid unknown schema type (%s) 
HasAPI: provided schema type ( %s ) is typed.
HasAPI: single application API schemas like %s do not contain an application instanceName ( %s ).
UsdSchemaBase
_MakeProperties
std::vector<UsdProperty> UsdPrim::_MakeProperties(const TfTokenVector &) const
specType == SdfSpecTypeRelationship
Computing expanded prim index for <%s>
_ComputePrimPropertyNames
void _ComputePrimPropertyNames(const PcpPrimIndex &, const UsdPrim::PropertyPredicateFunc &, TfTokenVector *)
TfIterator::StarReturnType TfIterator<std::__1::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, false>::operator*() [T = std::__1::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::__1::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, false>::operator++() [T = std::__1::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, Reverse = false]
Usd_MoveToNextSiblingOrParent
bool Usd_MoveToNextSiblingOrParent(PrimDataPtr &, SdfPath &, PrimDataPtr, const Usd_PrimFlagsPredicate &) [PrimDataPtr = const Usd_PrimData *]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/property.cpp
GetBaseName
TfToken UsdProperty::GetBaseName() const
delim != fullName.size()-1
GetNamespace
TfToken UsdProperty::GetNamespace() const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/primRange.cpp
PruneChildren
void UsdPrimRange::iterator::PruneChildren()
Iterator past-the-end
Cannot prune children during post-visit because thechildren have already been processed. Current node: %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/interpolators.cpp
_Interpolate
bool Usd_UntypedInterpolator::_Interpolate(const Src &, const SdfAbstractDataSpecId &, double, double, double) [Src = TfRefPtr<SdfLayer>]
Unknown value type '%s' for attribute '%s'
bool Usd_UntypedInterpolator::_Interpolate(const Src &, const SdfAbstractDataSpecId &, double, double, double) [Src = std::__1::shared_ptr<Usd_Clip>]
Read
virtual bool UsdUsdzFileFormat::Read(const SdfLayerBasePtr &, const UsdUsdzFileFormat::string &, bool) const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/usdzFileFormat.cpp
layer
fileOffset
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfLayerBase>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfLayerBase]
T *TfRefPtr<Usd_CrateData>::operator->() const [U = Usd_CrateData]
swapped %s with %s
assigning %s from %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/stageCache.cpp
RequestStage
std::pair<UsdStageRefPtr, bool> UsdStageCache::RequestStage(UsdStageCacheRequest &&)
UsdStageCacheRequest failed to manufacture a valid stage.
%s for id=%s in %s
found %s
failed to find stage
%s by rootLayer%s in %s
 @%s@
%s by rootLayer%s, sessionLayer%s in %s
 <null>
%s by rootLayer%s, pathResolverContext in %s
%s by rootLayer%s, sessionLayer%s, pathResolverContext in %s
UsdStageCache::Id UsdStageCache::Insert(const UsdStageRefPtr &)
Inserted null stage in cache
cleared
stage cache %s (size=%zu)
"%s"
%s %s %s (id=%s)
%s %s %zu entries:
      %s (id=%s)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/typed.cpp
static UsdTyped UsdTyped::Get(const UsdStagePtr &, const SdfPath &)
Typed
_schemaBaseTfType_Tf_StaticDataFactoryImpl
void _schemaBaseTfType_Tf_StaticDataFactoryImpl(TfType *)
!_schemaBaseTfType->IsUnknown()
apiSchemas
clipActive
clipAssetPaths
clipManifestAssetPath
clipPrimPath
clips
clipSets
clipTemplateAssetPath
clipTemplateEndTime
clipTemplateStartTime
clipTemplateStride
clipTimes
collection
exclude
expandPrims
expandPrimsAndProperties
expansionRule
explicitOnly
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/editTarget.cpp
ForLocalDirectVariant
static UsdEditTarget UsdEditTarget::ForLocalDirectVariant(const SdfLayerHandle &, const SdfPath &)
Provided varSelPath <%s> must be a prim variant selection path.
USD_RETIRE_LUMOS
Set to true when tools should no longer use lumos/2x.
usdRi
USD_SHADING_MODEL
Set to usdRi when models can interchange UsdShade prims.
USD_AUTHOR_OLD_STYLE_ADD
Set true if USD Append() API's should author Add operations instead of Append, to mimic their historical behavior.
USD_USE_INVERSE_LAYER_OFFSET
Set true if USD should take the inverse of SdfLayerOffset values when applying them.  True matches historical behavior; false is the intended future setting.
UsdListPositionFrontOfPrependList
The front of the prepend list.
UsdListPositionBackOfPrependList
The back of the prepend list.
UsdListPositionFrontOfAppendList
The front of the append list.
UsdListPositionBackOfAppendList
The back of the append list.
UsdListPositionTempDefault
Temporary default; consults USD_AUTHOR_OLD_STYLE_ADD.  Used for staged rollout of this enum.
UsdLoadWithDescendants
Load prim and all descendants
UsdLoadWithoutDescendants
Load prim and no descendants
virtual bool UsdUsdcFileFormat::Read(const SdfLayerBasePtr &, const UsdUsdcFileFormat::string &, bool) const
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/usdcFileFormat.cpp
virtual bool UsdUsdcFileFormat::WriteToFile(const SdfLayerBase *, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
USD_READ_LEGACY_CLIPS
If on, legacy clip metadata will be respected when populating clips. Otherwise, legacy clip metadata will be ignored.
%s<%s> (start: %s end: %s)
-inf
%.3f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/clip.cpp
Usd_Clip
Usd_Clip::Usd_Clip(const PcpLayerStackPtr &, const SdfPath &, size_t, const SdfAssetPath &, const SdfPath &, Usd_Clip::ExternalTime, Usd_Clip::ExternalTime, const Usd_Clip::TimeMappings &)
sourceLayerIndex < sourceLayerStack->GetLayers().size()
_GetLayerForClip
SdfLayerRefPtr Usd_Clip::_GetLayerForClip() const
Unable to open clip layer @%s@
clip
_ResolveLegacyClipInfo
bool _ResolveLegacyClipInfo(const PcpPrimIndex &, Usd_ResolvedClipInfo *)
Both template and non-template clip metadata are authored for prim <%s> in layerStack %s at spec @%s@<%s>
%s for prim <%s> found in LayerStack %s at spec @%s@<%s>
T *TfRefPtr<PcpLayerStack>::operator->() const [U = PcpLayerStack]
VtArray::value_type *VtArray<GfVec2d>::_AllocateNew(size_t) [T = GfVec2d]
_DeriveClipInfo
void _DeriveClipInfo(const std::string &, const double, const double, const double, const double, boost::optional<VtVec2dArray> *, boost::optional<VtVec2dArray> *, boost::optional<VtArray<SdfAssetPath> > *, const SdfPath &, const PcpLayerStackPtr &, const size_t)
Invalid clipTemplateStride %f for prim <%s>. clipTemplateStride must be greater than 0.
Invalid clipTemplateOffset %f for prim <%s>. absolute value of clipTemplateOffset must not exceed clipTemplateStride %f.
Invalid template string specified %s, must be of the form path/basename.###.usd or path/basename.###.###.usd. Note that the number of hash marks is variable in each group.
Invalid range specified in template clip metadata. clipTemplateEndTime (%f) cannot be greater than clipTemplateStartTime (%f).
push_back
void VtArray<GfVec2d>::push_back(const VtArray::ElementType &) [T = GfVec2d]
Array rank %u != 1
void VtArray<SdfAssetPath>::push_back(const VtArray::ElementType &) [ELEM = SdfAssetPath]
%s for prim <%s> derived: %s
_ResolveClipSetsInNode
void _ResolveClipSetsInNode(const PcpNodeRef &, std::map<std::string, _ClipSet> *)
Invalid unnamed clip set for prim <%s> in 'clips' dictionary on spec @%s@<%s>
Expected dictionary for entry '%s' for prim <%s> in 'clips' dictionary on spec @%s@<%s>
void VtDictionary::Iterator<std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > > *, std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, void *> *, long> > >::increment() [UnderlyingMapPtr = std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > > *, UnderlyingIterator = std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, void *> *, long> >]
_GetBracketingTimeSegment
bool _GetBracketingTimeSegment(const Usd_Clip::TimeMappings &, Usd_Clip::ExternalTime, size_t *, size_t *)
*m1 < *m2
0 <= *m1 && *m1 < times.size()
0 <= *m2 && *m2 < times.size()
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PcpLayerStack>::operator->() const [PtrTemplate = TfWeakPtr, Type = PcpLayerStack]
dummy_clip
dummy_clip.%s
UsdStages in aggregate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/stage.cpp
UsdStage
UsdStage::UsdStage(const SdfLayerRefPtr &, const SdfLayerRefPtr &, const ArResolverContext &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
_rootLayer
UsdStage::UsdStage(rootLayer=@%s@, sessionLayer=@%s@)
UsdStage::~UsdStage(rootLayer=@%s@, sessionLayer=@%s@)
UsdStage::_InstantiateStage: Creating new UsdStage
Instantiating stage
UsdStage::_InstantiateStage: Time elapsed (s): %f
static UsdStageRefPtr UsdStage::Open(const std::string &, UsdStage::InitialLoadSet)
Failed to open layer @%s@
static UsdStageRefPtr UsdStage::Open(const std::string &, const ArResolverContext &, UsdStage::InitialLoadSet)
OpenMasked
static UsdStageRefPtr UsdStage::OpenMasked(const std::string &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
static UsdStageRefPtr UsdStage::OpenMasked(const std::string &, const ArResolverContext &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, UsdStage::InitialLoadSet)
Invalid root layer
UsdStage::Open(rootLayer=@%s@, load=%s)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, const SdfLayerHandle &, UsdStage::InitialLoadSet)
UsdStage::Open(rootLayer=@%s@, sessionLayer=@%s@, load=%s)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, const ArResolverContext &, UsdStage::InitialLoadSet)
UsdStage::Open(rootLayer=@%s@, pathResolverContext=%s, load=%s)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, const SdfLayerHandle &, const ArResolverContext &, UsdStage::InitialLoadSet)
UsdStage::Open(rootLayer=@%s@, sessionLayer=@%s@, pathResolverContext=%s, load=%s)
static UsdStageRefPtr UsdStage::OpenMasked(const SdfLayerHandle &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
UsdStage::OpenMasked(rootLayer=@%s@, mask=%s, load=%s)
static UsdStageRefPtr UsdStage::OpenMasked(const SdfLayerHandle &, const SdfLayerHandle &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
UsdStage::OpenMasked(rootLayer=@%s@, sessionLayer=@%s@, mask=%s, load=%s)
static UsdStageRefPtr UsdStage::OpenMasked(const SdfLayerHandle &, const ArResolverContext &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
UsdStage::OpenMasked(rootLayer=@%s@, pathResolverContext=%s, mask=%s, load=%s)
static UsdStageRefPtr UsdStage::OpenMasked(const SdfLayerHandle &, const SdfLayerHandle &, const ArResolverContext &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
UsdStage::OpenMasked(rootLayer=@%s@, sessionLayer=@%s@, pathResolverContext=%s, mask=%s, load=%s)
_ValidateEditPrim
bool UsdStage::_ValidateEditPrim(const UsdPrim &, const char *) const
Cannot %s at path <%s>; authoring to an instancing master is not allowed.
Cannot %s at path <%s>; authoring to an instance proxy is not allowed.
_ValidateEditPrimAtPath
bool UsdStage::_ValidateEditPrimAtPath(const SdfPath &, const char *) const
create prim spec
clear attribute value
_ClearValue
bool UsdStage::_ClearValue(UsdTimeCode, const UsdAttribute &)
EditTarget does not contain a valid layer.
attrSpec
Failed to get attribute spec <%s> in layer @%s@
clear metadata
_ClearMetadata
bool UsdStage::_ClearMetadata(const UsdObject &, const TfToken &, const TfToken &)
No spec at <%s> in layer @%s@
Cannot clear metadata. '%s' is not registered as valid metadata for spec type %s.
_IsValidForUnload
bool UsdStage::_IsValidForUnload(const SdfPath &) const
Attempted to load/unload a relative path <%s>
_IsValidForLoad
bool UsdStage::_IsValidForLoad(const SdfPath &) const
Attempt to load a path <%s> which is not present in the stage
Attempt to load an inactive path <%s>
Attempt to load instance master <%s>
PAYLOAD DISCOVERY: discovered ancestor payload at <%s>
PAYLOAD DISCOVERY: ignored ancestor payload at <%s> because it was already loaded
PAYLOAD: unloadPruneSet: %s
PAYLOAD: terminate recursion
PAYLOAD: Load/Unload payload sets
  Include set:
<%s>
  Final Include set:
  Exclude set:
  Final Exclude set:
Processing Load/Unload changes
GetMasters
vector<UsdPrim> UsdStage::GetMasters() const
Failed to find prim at master path <%s>.
_InstantiatePrim
Usd_PrimDataPtr UsdStage::_InstantiatePrim(const SdfPath &)
result.second
Newly instantiated prim <%s> already present in _primMap
Inactive prim <%s>
Instance prim <%s>
_ComposeChildren
void UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopulationMask *, bool)
prim->_ComposePrimChildNames(&nameOrder)
Children empty <%s>
Children all new <%s>
Children same in same order <%s>
Require general children recomposition <%s>
Removing <%s>
Preserving <%s>
Creating new <%s>
    
_ReportErrors
void UsdStage::_ReportErrors(const PcpErrorVector &, const std::vector<std::string> &, const std::string &) const
_ComposeSubtreesInParallel
void UsdStage::_ComposeSubtreesInParallel(const vector<Usd_PrimDataPtr> &, const vector<SdfPath> *)
Computing prim index <%s>
_DestroyPrimsInParallel
void UsdStage::_DestroyPrimsInParallel(const vector<SdfPath> &)
!_dispatcher && !_primMapMutex
Destroying <%s>
_DestroyPrim
void UsdStage::_DestroyPrim(Usd_PrimDataPtr)
erased
Destroyed prim <%s> not present in stage's data structures
IsSupportedFile
static bool UsdStage::IsSupportedFile(const std::string &)
Empty file path given
void UsdStage::Save()
localLayerStack
SaveSessionLayers
void UsdStage::SaveSessionLayers()
_IsValidPathForCreatingPrim
std::pair<bool, UsdPrim> UsdStage::_IsValidPathForCreatingPrim(const SdfPath &) const
Path must be an absolute path: <%s>
Path must be a prim path: <%s>
Path must not contain variant selections: <%s>
create prim
OverridePrim
UsdPrim UsdStage::OverridePrim(const SdfPath &)
Failed to create PrimSpec for <%s>
_DefinePrim
UsdPrim UsdStage::_DefinePrim(const SdfPath &, const TfToken &)
Failed to create primSpec for <%s>
Failed to define UsdPrim <%s>
CreateClassPrim
UsdPrim UsdStage::CreateClassPrim(const SdfPath &)
Classes must be root prims.  <%s> is not a root prim path
Must create classes in local LayerStack
Non-class prim already exists at <%s>
GetEditTargetForLocalLayer
UsdEditTarget UsdStage::GetEditTargetForLocalLayer(size_t)
Layer index %zu is out of range: only %zu entries in layer stack
SetEditTarget
void UsdStage::SetEditTarget(const UsdEditTarget &)
Attempt to set an invalid UsdEditTarget as current
Layer @%s@ is not in the local LayerStack rooted at @%s@
GetPathResolverContext
ArResolverContext UsdStage::GetPathResolverContext() const
_GetPcpCache()
GetLayerStack
SdfLayerHandleVector UsdStage::GetLayerStack(bool) const
copyBegin != layers.end()
Root layer @%s@ not in LayerStack
_RemoveProperty
bool UsdStage::_RemoveProperty(const SdfPath &)
parent
Prop has no parent
_HandleLayersDidChange
void UsdStage::_HandleLayersDidChange(const SdfNotice::LayersDidChangeSentPerLayer &)
Detected usd threading violation.  Concurrent changes to layer(s) composed in stage %p rooted at @%s@.  (serial=%zu, lastSerial=%zu).
HandleLayersDidChange received
<%s> in @%s@ changed.
Changed field: %s
recomposeChanges.size() == 1
Composing prim indexes: %s%s
 (and %zu more)
_GetDefiningSpecType
SdfSpecType UsdStage::_GetDefiningSpecType(const UsdPrim &, const TfToken &) const
prim
!propName.IsEmpty()
Flatten
SdfLayerRefPtr UsdStage::Flatten(bool) const
rootLayer
flatLayer
Generated from Composed Stage of root layer %s
_FlattenProperty
UsdProperty UsdStage::_FlattenProperty(const UsdProperty &, const UsdPrim &, const TfToken &)
Cannot flatten invalid property <%s>
Cannot flatten property <%s> to invalid %s
Cannot flatten %s to %s because they are different property types
_GetMetadata
bool UsdStage::_GetMetadata(const UsdObject &, const TfToken &, const TfToken &, bool, VtValue *) const
bool UsdStage::_GetMetadata(const UsdObject &, const TfToken &, const TfToken &, bool, SdfAbstractDataValue *) const
_ListMetadataFields
TfTokenVector UsdStage::_ListMetadataFields(const UsdObject &, bool) const
_GetAllMetadata
void UsdStage::_GetAllMetadata(const UsdObject &, bool, UsdMetadataValueMap *) const
GetMetadata
bool UsdStage::GetMetadata(const TfToken &, VtValue *) const
Null out-param 'value' for UsdStage::GetMetadata("%s")
GetMetadataByDictKey
bool UsdStage::GetMetadataByDictKey(const TfToken &, const TfToken &, VtValue *) const
Null out-param 'value' for UsdStage::GetMetadataByDictKey("%s", "%s")
Resolved identifier %s because it was anonymous
Cannot resolve identifier %s because anchoring layer %s isanonymous
Resolved identifier "%s" against layer @%s@ to: "%s"
null stage
stage with rootLayer @%s@%s
, sessionLayer @%s@
UsdStage::LoadAll
Load all loadable prims
UsdStage::LoadNone
Load no loadable prims
UsdStage: @
_CreateNewLayer
SdfLayerRefPtr _CreateNewLayer(const std::string &)
Failed to CreateNew layer with identifier '%s'
-session.usda
_SaveLayers
void (anonymous namespace)::_SaveLayers(const SdfLayerHandleVector &)
Not saving @%s@ because it is an anonymous layer
/Flattened_Master_%lu
map::at:  key not found
../ModelKit/extern/usd/pxr/usd/usd/primRange.h
set_begin
void UsdPrimRange::set_begin(const UsdPrimRange::iterator &)
!newBegin.IsPostVisit()
bool SdfListProxy<SdfReferenceTypePolicy>::_Validate() const [_TypePolicy = SdfReferenceTypePolicy]
void SdfListProxy<SdfReferenceTypePolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListProxy<SdfReferenceTypePolicy>::_Validate() [_TypePolicy = SdfReferenceTypePolicy]
_CopyMetadata
void (anonymous namespace)::_CopyMetadata(const SdfSpecHandle &, const UsdMetadataValueMap &)
Failed copying metadata: %s
UsdObject::UsdObject(UsdObjType, const Usd_PrimDataHandle &, const SdfPath &, const TfToken &)
_CopyProperty
void (anonymous namespace)::_CopyProperty(const UsdProperty &, const SdfPrimSpecHandle &, const TfToken &, const (anonymous namespace)::_PathRemapping &, const SdfLayerOffset &)
Attribute <%s> has unknown value type. It will be omitted from the flattened result.
_RemoveMasterTargetPaths
void (anonymous namespace)::_RemoveMasterTargetPaths(const UsdProperty &, SdfPathVector *)
Some %s paths from <%s> could not be flattened because they targeted objects within an instancing master.
attribute connection
relationship target
_SetStageMetadataOrDictKey
bool _SetStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfToken &, const VtValue &)
Metadata '%s' is not registered as valid Layer metadata, and cannot be set on UsdStage %s.
Cannot set layer metadata '%s' in current edit target "%s", as it is not the root layer or session layer of stage "%s".
_ClearStageMetadataOrDictKey
bool _ClearStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfToken &)
Metadata '%s' is not registered as valid Layer metadata, and cannot be cleared on UsdStage %s.
Cannot clear layer metadata '%s' in current edit target "%s", as it is not the root layer or session layer of stage "%s".
UsdVariantFallbacks
_usdGlobalVariantFallbackMap_Tf_StaticDataFactoryImpl
void _usdGlobalVariantFallbackMap_Tf_StaticDataFactoryImpl(PcpVariantFallbackMap *)
%s[UsdVariantFallbacks] was not a dictionary.
%s[UsdVariantFallbacks] value for %s must be an arrays.
T *TfRefPtr<UsdStage>::operator->() const [U = UsdStage]
_OpenImpl
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>>]
stage
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>, TfWeakPtr<SdfLayer>>]
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>, ArResolverContext>]
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>, TfWeakPtr<SdfLayer>, ArResolverContext>]
create property spec
_CreatePropertySpecForEditing
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfAttributeSpec]
Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  %s already at that location.
Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  Strongest existing spec, %s at <%s> in @%s@
primSpec
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfRelationshipSpec]
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfPropertySpec]
_SetMetadataImpl
bool UsdStage::_SetMetadataImpl(const UsdObject &, const TfToken &, const TfToken &, const T &) [T = SdfAbstractDataConstValue]
Cannot set metadata at path <%s> in layer @%s@; a prim or property is required
Cannot set metadata. Failed to create spec <%s> in layer @%s@
Cannot set metadata. '%s' is not registered as valid metadata for spec type %s.
bool UsdStage::_SetMetadataImpl(const UsdObject &, const TfToken &, const TfToken &, const T &) [T = VtValue]
_SetValueImpl
bool UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) [T = SdfAbstractDataConstValue]
Empty typeName for <%s>
Unknown typename for <%s>: '%s'
Type mismatch for <%s>: expected '%s', got '%s'
Warning: authoring time sample value on uniform attribute <%s> at time %.3f
Cannot set attribute value.  Failed to create attribute spec <%s> in layer @%s@
bool UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) [T = VtValue]
auto UsdStage::_WalkPrimsWithMastersImpl(const UsdPrim &, const (lambda at /BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/stage.cpp:1856:9) &, tbb::concurrent_unordered_set<SdfPath, SdfPath::Hash> *)::(anonymous class)::operator()(const UsdPrim &) const
masterPrim
auto UsdStage::_WalkPrimsWithMastersImpl(const UsdPrim &, const (lambda at /BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/stage.cpp:2026:13) &, tbb::concurrent_unordered_set<SdfPath, SdfPath::Hash> *)::(anonymous class)::operator()(const UsdPrim &) const
TfIterator<T, Reverse> &TfIterator<std::__1::vector<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> >, std::__1::allocator<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> > > >, true>::operator++() [T = std::__1::vector<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> >, std::__1::allocator<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> > > >, Reverse = true]
TfIterator::ArrowReturnType TfIterator<std::__1::vector<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> >, std::__1::allocator<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> > > >, true>::operator->() [T = std::__1::vector<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> >, std::__1::allocator<std::__1::pair<Usd_PrimData *, std::__1::__wrap_iter<const TfToken *> > > >, Reverse = true]
Did Change Significantly: %s
Did Change Prim: %s
No cache changes
Nothing to recompose in cache changes
Ignoring elided prim <%s>
Recomposing stage
Including equivalent payload <%s> -> <%s> for instancing changes.
Recomposing: %s
Skipping non-prim: %s
_RemoveMasterSubtreesSubsumedByInstances
void UsdStage::_RemoveMasterSubtreesSubsumedByInstances(std::vector<Usd_PrimDataPtr> *, const PrimIndexPathMap &) const [PrimIndexPathMap = TfHashMap<SdfPath, SdfPath, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, SdfPath> > >]
Adding paths that use <%s> in layer @%s@: %s
../ModelKit/extern/usd/pxr/usd/usd/primData.h
Usd_MoveToParent
void Usd_MoveToParent(PrimDataPtr &, SdfPath &) [PrimDataPtr = const Usd_PrimData *]
No prim at <%s>
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<UsdStage>, TfWeakPtr<SdfLayer>, void (UsdStage::*)(const SdfNotice::LayersDidChangeSentPerLayer &), SdfNotice::LayersDidChangeSentPerLayer> >::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<UsdStage>, TfWeakPtr<SdfLayer>, void (UsdStage::*)(const SdfNotice::LayersDidChangeSentPerLayer &), SdfNotice::LayersDidChangeSentPerLayer>]
_GetPrimSpecifierImpl
bool UsdStage::_GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<SdfAbstractDataValue *>]
No PrimSpecs for '%s'
TfIterator<T, Reverse> &TfIterator<std::__1::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator++() [T = std::__1::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
TfIterator::ArrowReturnType TfIterator<std::__1::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator->() [T = std::__1::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, true>::operator++() [T = const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, Reverse = true]
TfIterator::StarReturnType TfIterator<const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, true>::operator*() [T = const std::__1::vector<TfRefPtr<SdfLayer>, std::__1::allocator<TfRefPtr<SdfLayer> > >, Reverse = true]
_GetAttrTypeImpl
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<VtValue *>]
_GetAttrVariabilityImpl
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<VtValue *>]
TfIterator::StarReturnType TfIterator<std::__1::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator*() [T = std::__1::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
_GetPropCustomImpl
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<VtValue *>]
_GetPrimTypeNameImpl
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<VtValue *>]
bool UsdStage::_GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<VtValue *>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<SdfAbstractDataValue *>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<SdfAbstractDataValue *>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<SdfAbstractDataValue *>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer<SdfAbstractDataValue *>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
bool UsdStage::_GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
Warning: detected time sample value on uniform attribute <%s>
_GetTimeSampleValue
static bool UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, const UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T = VtValue]
layer->GetBracketingTimeSamplesForPath( specId, localTime, &lower, &upper)
No bracketing time samples for %s on <%s> for time %g between %g and %g
RESOLVE: reading field %s:%s from @%s@, with requested time = %.3f (local time = %.3f) reading from sample %.3f 
RESOLVE: reading field %s:%s from clip %s, with requested time = %.3f reading from sample %.3f 
RESOLVE: reading field %s:%s from @%s@, with t = %.3f as default
_GetValueFromResolveInfoImpl
bool UsdStage::_GetValueFromResolveInfoImpl(const UsdResolveInfo &, UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = VtValue]
layer->HasField(specId, SdfFieldKeys->Default, result)
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfLayer>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfLayer]
../ModelKit/extern/usd/pxr/usd/usd/stage.h
bool UsdStage::GetMetadata(const TfToken &, T *) const [T = double]
Requested type %s for stage metadatum %s does not match retrieved type %s
bool UsdStage::GetMetadata(const TfToken &, T *) const [T = SdfAssetPath]
UsdColorConfigFallbacks
_colorConfigurationFallbacks_Tf_StaticDataFactoryImpl
void _colorConfigurationFallbacks_Tf_StaticDataFactoryImpl(_ColorConfigurationFallbacks *)
%s[UsdColorConfigFallbacks] was not a dictionary.
'colorConfiguration' value in %s[UsdColorConfigFallbacks] must be a string.
'colorManagementSystem' value in %s[UsdColorConfigFallbacks] must be a string.
Unknown key '%s' found in %s[UsdColorConfigFallbacks].
bool UsdStage::GetMetadata(const TfToken &, T *) const [T = TfToken]
static bool UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, const UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T = SdfAbstractDataValue]
bool UsdStage::_GetValueFromResolveInfoImpl(const UsdResolveInfo &, UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = SdfAbstractDataValue]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/apiSchemaBase.cpp
static UsdAPISchemaBase UsdAPISchemaBase::Get(const UsdStagePtr &, const SdfPath &)
Invalid stage
_ApplyAPISchemaImpl
static UsdPrim UsdAPISchemaBase::_ApplyAPISchemaImpl(const UsdPrim &, const TfToken &)
Invalid prim.
Prim at <%s> is an instance proxy or is inside an instance master.
Unable to create primSpec at path <%s> in edit target '%s'. Failed to apply API schema '%s' on the prim.
Failed to prepend api name %s to 'apiSchemas' listOp at path <%s>
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, UsdStage>::operator->() const [PtrTemplate = TfWeakPtr, Type = UsdStage]
APISchemaBase
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/crateData.cpp
Save
bool Usd_CrateData::Save(const std::__1::string &)
Tried to save to empty fileName
Usd_CrateDataImpl::Save
Saving usd binary file @%s@
bool Usd_CrateDataImpl::Save(const std::__1::string &)
fileName == dataFileName || dataFileName.empty()
Usd_CrateDataImpl main hash table
field data
operator()
_SpecToPair::result_type Usd_CrateDataImpl::_PopulateFromCrateFile()::_SpecToPair::operator()(const CrateFile::Spec &) const
!r.first.IsTargetPath()
Usd_CrateDataImpl::Open
Opening usd binary file @%s@
bool Usd_CrateDataImpl::Open(const std::__1::string &, int64_t, int64_t)
EraseSpec
void Usd_CrateDataImpl::EraseSpec(const SdfAbstractDataSpecId &)
_hashData->erase(id.GetFullSpecPath())
iter != _flatData.end()
MoveSpec
void Usd_CrateDataImpl::MoveSpec(const SdfAbstractDataSpecId &, const SdfAbstractDataSpecId &)
oldIter != _hashData->end()
inserted
oldIter != _flatData.end()
iresult.second
CreateSpec
void Usd_CrateDataImpl::CreateSpec(const SdfAbstractDataSpecId &, SdfSpecType)
specType != SdfSpecTypeUnknown
_flatTypes[index].type == specType
bool Usd_CrateDataImpl::Has(const SdfAbstractDataSpecId &, const TfToken &, VtValue *) const
void Usd_CrateDataImpl::Set(const SdfAbstractDataSpecId &, const TfToken &, const VtValue &)
Cannot set fields on relationship target or attribute connection specs: <%s>:%s = %s
_SetHelper
void Usd_CrateDataImpl::_SetHelper(Data &, const SdfAbstractDataSpecId &, typename Data::value_type *&, const TfToken &, const VtValue &) [Data = std::__1::unordered_map<SdfPath, Usd_CrateDataImpl::_MapSpecData, SdfPath::Hash, std::__1::equal_to<SdfPath>, std::__1::allocator<std::__1::pair<const SdfPath, Usd_CrateDataImpl::_MapSpecData> > >]
i != d.end()
Tried to set field '%s' on nonexistent spec at <%s>
void Usd_CrateDataImpl::_SetHelper(Data &, const SdfAbstractDataSpecId &, typename Data::value_type *&, const TfToken &, const VtValue &) [Data = boost::container::flat_map<SdfPath, Usd_CrateDataImpl::_FlatSpecData, SdfPath::FastLessThan, std::__1::allocator<std::__1::pair<SdfPath, Usd_CrateDataImpl::_FlatSpecData> > >]
void Usd_CrateDataImpl::Set(const SdfAbstractDataSpecId &, const TfToken &, const SdfAbstractDataConstValue &)
value.GetValue(&val)
_ListTimeSamplesForPath
const std::vector<double> &Usd_CrateDataImpl::_ListTimeSamplesForPath(const SdfAbstractDataSpecId &) const
QueryTimeSample
bool Usd_CrateDataImpl::QueryTimeSample(const SdfAbstractDataSpecId &, double, VtValue *) const
Cannot target a master or an object within a master.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/relationship.cpp
AddTarget
bool UsdRelationship::AddTarget(const SdfPath &, UsdListPosition) const
Cannot add target <%s> to relationship <%s>: %s
RemoveTarget
bool UsdRelationship::RemoveTarget(const SdfPath &) const
Cannot remove target <%s> from relationship <%s>: %s
SetTargets
bool UsdRelationship::SetTargets(const SdfPathVector &) const
Cannot set target <%s> on relationship <%s>: %s
GetTargets
bool UsdRelationship::GetTargets(SdfPathVector *) const
Getting targets for relationship <%s>
GetForwardedTargets
bool UsdRelationship::GetForwardedTargets(SdfPathVector *) const
Passed null pointer for targets on <%s>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/usd/usd/stagePopulationMask.cpp
GetUnion
UsdStagePopulationMask UsdStagePopulationMask::GetUnion(const SdfPath &) const
Invalid path <%s>; must be an absolute prim path or the absolute root path
GetIncludedChildNames
bool UsdStagePopulationMask::GetIncludedChildNames(const SdfPath &, std::vector<TfToken> *) const
!childName.IsEmpty()
_ValidateAndNormalize
void UsdStagePopulationMask::_ValidateAndNormalize()
UsdStagePopulationMask(
VtDictionary::operator[]
VtDictionary::insert
VtDictionary::_CreateDictIfNeeded
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/vt/dictionary.cpp
VtDictionaryOver
void VtDictionaryOver(VtDictionary *, const VtDictionary &, bool)
VtDictionaryOver: NULL dictionary pointer.
void VtDictionaryOver(const VtDictionary &, VtDictionary *, bool)
VtDictionaryOver: NULL dictionary pointer
VtDictionaryOverRecursive
void VtDictionaryOverRecursive(VtDictionary *, const VtDictionary &, bool)
VtDictionaryOverRecursive: NULL dictionary pointer.
void VtDictionaryOverRecursive(const VtDictionary &, VtDictionary *, bool)
GetUnderlyingIterator
UnderlyingIterator VtDictionary::Iterator<std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > > *, std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, void *> *, long> > >::GetUnderlyingIterator(UnderlyingMapPtr) const [UnderlyingMapPtr = std::__1::map<std::__1::basic_string<char>, VtValue, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, VtValue> > > *, UnderlyingIterator = std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, VtValue>, void *> *, long> >]
!_underlyingMap || _underlyingMap == map
VtDictionary::insert (range)
TfIterator<T, Reverse> &TfIterator<VtDictionary, false>::operator++() [T = VtDictionary, Reverse = false]
TfIterator::ArrowReturnType TfIterator<VtDictionary, false>::operator->() [T = VtDictionary, Reverse = false]
TfIterator::StarReturnType TfIterator<const VtDictionary, false>::operator*() [T = const VtDictionary, Reverse = false]
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = VtDictionary]
<'%s' @ %p>
VtValue
VtValue::_Counted<GfMatrix4f>::_Counted(const T &) [T = GfMatrix4f]
VtArray::value_type *VtArray<pxr_half::half>::_AllocateNew(size_t) [T = pxr_half::half]
VtArray::value_type *VtArray<GfVec2h>::_AllocateNew(size_t) [T = GfVec2h]
VtArray::value_type *VtArray<GfVec3h>::_AllocateNew(size_t) [T = GfVec3h]
VtArray::value_type *VtArray<GfVec3d>::_AllocateNew(size_t) [T = GfVec3d]
VtArray::value_type *VtArray<GfVec4h>::_AllocateNew(size_t) [T = GfVec4h]
VtArray::value_type *VtArray<GfVec4d>::_AllocateNew(size_t) [T = GfVec4d]
VtArray::value_type *VtArray<GfMatrix4d>::_AllocateNew(size_t) [T = GfMatrix4d]
VtArray::value_type *VtArray<GfMatrix4f>::_AllocateNew(size_t) [T = GfMatrix4f]
VtValue::_Counted<VtArray<GfMatrix4f> >::_Counted(const T &) [T = VtArray<GfMatrix4f>]
VtArray::value_type *VtArray<GfQuatf>::_AllocateNew(size_t) [T = GfQuatf]
VtArray::value_type *VtArray<unsigned short>::_AllocateNew(size_t) [T = unsigned short]
VtArray::value_type *VtArray<int>::_AllocateNew(size_t) [T = int]
VtArray::value_type *VtArray<GfRange1d>::_AllocateNew(size_t) [T = GfRange1d]
VtValue::_Counted<VtArray<GfRange1d> >::_Counted(const T &) [T = VtArray<GfRange1d>]
VtArray::value_type *VtArray<GfRange1f>::_AllocateNew(size_t) [T = GfRange1f]
VtValue::_Counted<VtArray<GfRange1f> >::_Counted(const T &) [T = VtArray<GfRange1f>]
VtArray::value_type *VtArray<GfRange2d>::_AllocateNew(size_t) [T = GfRange2d]
VtValue::_Counted<VtArray<GfRange2d> >::_Counted(const T &) [T = VtArray<GfRange2d>]
VtArray::value_type *VtArray<GfRange2f>::_AllocateNew(size_t) [T = GfRange2f]
VtValue::_Counted<VtArray<GfRange2f> >::_Counted(const T &) [T = VtArray<GfRange2f>]
VtArray::value_type *VtArray<GfRange3d>::_AllocateNew(size_t) [T = GfRange3d]
VtValue::_Counted<VtArray<GfRange3d> >::_Counted(const T &) [T = VtArray<GfRange3d>]
VtArray::value_type *VtArray<GfRange3f>::_AllocateNew(size_t) [T = GfRange3f]
VtValue::_Counted<VtArray<GfRange3f> >::_Counted(const T &) [T = VtArray<GfRange3f>]
static void TfSingleton<Vt_CastRegistry>::SetInstanceConstructed(T &) [T = Vt_CastRegistry]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/3DAssetTools/3DAssetTools-18/external/ModelKit/extern/usd/pxr/base/vt/value.cpp
GetType
TfType VtValue::GetType() const
Returning unknown type for VtValue with unregistered C++ type %s
_FailGet
const void *VtValue::_FailGet(Vt_DefaultValueHolder (*)(), const std::type_info &) const
Attempted to get value of type '%s' from empty VtValue.
Attempted to get value of type '%s' from VtValue holding '%s'
bad numeric conversion: overflow
bad numeric conversion: negative overflow
bad numeric conversion: positive overflow
../ModelKit/extern/boost/boost/smart_ptr/intrusive_ptr.hpp
px != 0
../ModelKit/extern/usd/pxr/base/vt/value.h
_Counted
VtValue::_Counted<pxr_half::half>::_Counted(const T &) [T = pxr_half::half]
static_cast<void const *>(this) == static_cast<void const *>(&_obj)
Failed axiom: ' %s '
VtValue::_Counted<std::__1::basic_string<char> >::_Counted(const T &) [T = std::__1::basic_string<char>]
VtValue::_Counted<TfToken>::_Counted(const T &) [T = TfToken]
Register
void Vt_CastRegistry::Register(const std::type_info &, const std::type_info &, VtValue (*)(const VtValue &))
VtValue cast already registered from '%s' to '%s'.  New cast will be ignored.
VtValue _FindOrCreateDefaultValue
_FindOrCreateDefaultValue
const void *_FindOrCreateDefaultValue(const std::type_info &, Vt_DefaultValueHolder (*)())
TfSafeTypeCompare(newValue.GetType(), type)
../ModelKit/extern/usd/pxr/base/tf/iterator.h
operator++
TfIterator<T, Reverse> &TfIterator<const std::__1::vector<VtValue, std::__1::allocator<VtValue> >, false>::operator++() [T = const std::__1::vector<VtValue, std::__1::allocator<VtValue> >, Reverse = false]
iterator exhausted
operator*
TfIterator::StarReturnType TfIterator<const std::__1::vector<VtValue, std::__1::allocator<VtValue> >, false>::operator*() [T = const std::__1::vector<VtValue, std::__1::allocator<VtValue> >, Reverse = false]
PXR_WORK_THREAD_LIMIT
Limits the number of threads the application may spawn. 0 (default) allows for maximum concurrency as determined by the number of physical cores, or the process's affinity mask, whichever is smaller. Note that the environment variable (if set to a non-zero value) will override any value passed to Work thread-limiting API calls.
work
WORK_SYNCHRONIZE_ASYNC_DESTROY_CALLS
Make WorkSwapDestroyAsync and WorkMoveDestroyAsync wait for destruction completion rather than destroying asynchronously
N3tbb4taskE
N3tbb10interface58internal9task_baseE
N3tbb8internal7no_copyE
N3tbb8internal9no_assignE
N3tbb8internal3rml14private_serverE
N3tbb8internal3rml10tbb_serverE
N3rml6serverE
N3rml16versioned_objectE
N8pxr_half4halfE
N3tbb10empty_taskE
N3tbb10interface78internal14delegated_taskE
N3tbb10interface78internal9wait_taskE
vH7B
W4vC
ITT-API-Version 0.0.0 (20111111)
@(#) $Revision: 413915 $
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
N3tbb6filterE
N3tbb8internal10stage_taskE
N3tbb8internal9task_infoE
N3tbb8pipelineE
N3tbb8internal18pipeline_root_taskE
( ) 
 / _ 
N3tbb8internal17generic_schedulerE
N3tbb8internal9schedulerE
N3rml3jobE
N3tbb8internal19intrusive_list_nodeE
N3tbb8internal15scheduler_stateE
N3tbb8internal16custom_schedulerINS0_22DefaultSchedulerTraitsEEE
N3tbb13tbb_exceptionE
N3tbb8internal16custom_schedulerINS0_20IntelSchedulerTraitsEEE
AN3tbb8internal27allowed_parallelism_controlE
N3tbb8internal6paddedINS0_15control_storageELm128EEE
N3tbb8internal11padded_baseINS0_15control_storageELm128ELm32EEE
N3tbb8internal15control_storageE
N3tbb8internal18stack_size_controlE
N3tbb18captured_exceptionE
N3tbb8internal6marketE
N3tbb8internal3rml10tbb_clientE
N3rml6clientE
N3tbb8internal24concurrent_queue_base_v3E
N3tbb14bad_last_allocE
N3tbb12missing_waitE
N3tbb27invalid_multiple_schedulingE
N3tbb13improper_lockE
N3tbb10user_abortE
TBB: VERSION
2017.0
TBB: INTERFACE VERSION
9101
TBB: BUILD_DATE
Mon Oct 31 18:38:14 UTC 2016
TBB: BUILD_HOST
ma0103c-dhcp94 (i386)
TBB: BUILD_OS
Mac OS X version 10.12
TBB: BUILD_KERNEL
Darwin Kernel Version 16.0.0: Mon Aug 29 17:56:21 PDT 2016; root:xnu-3789.1.32~3/DEVELOPMENT_X86_64
TBB: BUILD_CLANG
Apple LLVM version 8.0.0 (clang-800.0.36.1)
TBB: BUILD_XCODE
Xcode 8.0
TBB: BUILD_TARGET
intel64 on cc8.0.0_os10.12
TBB: BUILD_COMMAND
clang++ -g -O2 -DUSE_PTHREAD -stdlib=libc++ -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-non-virtual-dtor -Wno-dangling-else -I../../src -I../../src/rml/include -I../../include -I.
TBB: TBB_USE_DEBUG
TBB: TBB_USE_ASSERT
TBB: DO_ITT_NOTIFY
undefined
@(#)PROGRAM:usdz_converter.dylib  PROJECT:asset_validation-18
17ArDefaultResolver
17ArResolverFactoryI17ArDefaultResolverE
N3tbb10interface626enumerable_thread_specificINSt3__16vectorINS2_10shared_ptrIN17ArDefaultResolver6_CacheEEENS2_9allocatorIS7_EEEENS_23cache_aligned_allocatorISA_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEENS1_20construct_by_defaultISB_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface626enumerable_thread_specificINSt3__16vectorIPK24ArDefaultResolverContextNS2_9allocatorIS6_EEEENS_23cache_aligned_allocatorIS9_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEENS1_20construct_by_defaultISA_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEEEE
N17ArResolverContext6_TypedI24ArDefaultResolverContextEE
24ArDefaultResolverContext
NSt3__120__shared_ptr_pointerIPN17ArResolverContext6_TypedI24ArDefaultResolverContextEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIN17ArResolverContext6_TypedI24ArDefaultResolverContextEEEE
NSt3__110shared_ptrIN17ArDefaultResolver6_CacheEEE
NSt3__120__shared_ptr_emplaceIN17ArDefaultResolver6_CacheENS_9allocatorIS2_EEEE
N7VtValue15_RemoteTypeInfoINSt3__110shared_ptrIN17ArDefaultResolver6_CacheEEEEE
N7VtValue13_TypeInfoImplINSt3__110shared_ptrIN17ArDefaultResolver6_CacheEEEN5boost13intrusive_ptrINS_8_CountedIS5_EEEENS_15_RemoteTypeInfoIS5_EEEE
10ArResolver
NSt3__120__shared_ptr_pointerIP10ArResolverNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10ArResolverEE
21ArResolverFactoryBase
NSt3__120__shared_ptr_pointerIP17ArDefaultResolverNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI17ArDefaultResolverEE
N17ArResolverContext8_UntypedE
Cannot create a log file
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
Too many arguments to log session command
Too many arguments to postmortem command
NSt3__110__function6__funcIPFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmENS5_IS9_EES8_EE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEEE
PFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmE
FNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmE
0123456789
NSt3__110__function6__funcIZ21ArchGetExecutablePathvE3$_0NS_9allocatorIS2_EEFbPcPmEEE
NSt3__110__function6__baseIFbPcPmEEE
Z21ArchGetExecutablePathvE3$_0
=]:].]
9GfFrustum
N9GfFrustum14ProjectionTypeE
6GfLine
9GfLineSeg
7GfPlane
9GfRange2d
9GfRange2f
9GfRange3d
9GfRange3f
5GfRay
@10GfRotation
vH7B
W4vC
9Y>)F$
raB3G
)c=H
]rHa
O8Mr
bnMG
.wN9
[*QmU
mr"iR
R$N(
>S}W
-sSO\
T%L9
hGT.
B}T}
=@[V
!a9X
X5AHx
%4xY
Z~$|7
+\0I
2a\|
\ysK
|M$D
pH_r
(:W"
s\ax}?
pc2g
@BXV
tC7Ddx
EydV
d66
eax~Z
ekhHD
@iZb
k0V(
k*do^
:V!2m
RJqn
bzo=
$qE}
XqkY
quAt
Jugm
~B v
STv/N
_w&2
xg^Jp5|
yMzw
{zel#|67
P/};
[@JO
nQ:B
0123456789ABCDEFuuuuuuuubtnufruuuuuuuuuuuuuuuuuu
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
NSt3__120__shared_ptr_pointerIPN7JsValue7_HolderENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN7JsValue7_HolderEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_7bad_getEEEEE
N5boost16exception_detail19error_info_injectorINS_7bad_getEEE
N5boost7bad_getE
12KindRegistry
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_0JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_1JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_1JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_2JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_2JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_3JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_3JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_4JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_4JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_5JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_5JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_6JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_6JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_7JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_7JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_8JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_8JEEEEE
NSt3__110__function6__funcIN8PcpCache32_UntypedIndexingPayloadPredicateENS_9allocatorIS3_EEFbRK7SdfPathEEE
NSt3__110__function6__baseIFbRK7SdfPathEEE
N8PcpCache32_UntypedIndexingPayloadPredicateE
N3tbb10strict_ppl16concurrent_queueIP19PcpPrimIndexOutputsNS_23cache_aligned_allocatorIS3_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IP19PcpPrimIndexOutputsEE
NSt3__110__function6__funcIN16WorkSingularTask6_WakerI19WorkArenaDispatcherNS_6__bindIM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvbEJPS9_bEEEEENS_9allocatorISE_EEFvRNS_6atomicImEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZNK16WorkSingularTask6_WakerIS3_NS6_IM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvbEJPSC_bEEEEclERNS5_6atomicImEEEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZNK16WorkSingularTask6_WakerI19WorkArenaDispatcherNS2_IM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvbEJPS9_bEEEEclERNS1_6atomicImEEEUlvE_JEEEEE
N16WorkSingularTask6_WakerI19WorkArenaDispatcherNSt3__16__bindIM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvbEJPS7_bEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperINSt3__16vectorINS1_4pairIPK12PcpPrimIndex7SdfPathEENS1_9allocatorIS8_EEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperIN3tbb10strict_ppl16concurrent_queueIP19PcpPrimIndexOutputsNS1_23cache_aligned_allocatorIS5_EEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperINSt3__16vectorI12PcpPrimIndexNS1_9allocatorIS3_EEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeINS_8internal15vector_iteratorINS_17concurrent_vectorI19PcpPrimIndexOutputsNS_23cache_aligned_allocatorIS7_EEEES7_EEEENS4_26parallel_for_each_body_forIZN19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEED1EvEUlRS7_E_SB_EEKNS_16auto_partitionerEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvPK12PcpPrimIndex7SdfPathbEJPSA_RSD_RSE_bEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvPK12PcpPrimIndex7SdfPathbEJPS6_RS9_RSA_bEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvPK12PcpPrimIndex7SdfPathbEJPSA_RSD_SE_RbEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM19Pcp_ParallelIndexerIN8PcpCache33_UntypedIndexingChildrenPredicateEEFvPK12PcpPrimIndex7SdfPathbEJPS6_RS9_SA_RbEEEEE
25SdfAbstractDataTypedValueI9SdfListOpI12SdfReferenceEE
NSt3__16__bindIPFN5boost8optionalI12SdfReferenceEERK9TfWeakPtrI8SdfLayerERK14SdfLayerOffsetPNS_3mapIS3_22PcpSourceReferenceInfoNS_4lessIS3_EENS_9allocatorINS_4pairIKS3_SE_EEEEEE13SdfListOpTypeRSJ_EJNS_17reference_wrapperIS8_EESB_SN_RKNS_12placeholders4__phILi1EEERKNSV_ILi2EEEEEE
NSt3__118__weak_result_typeIPFN5boost8optionalI12SdfReferenceEERK9TfWeakPtrI8SdfLayerERK14SdfLayerOffsetPNS_3mapIS3_22PcpSourceReferenceInfoNS_4lessIS3_EENS_9allocatorINS_4pairIKS3_SE_EEEEEE13SdfListOpTypeRSJ_EEE
25SdfAbstractDataTypedValueI10SdfPayloadE
25SdfAbstractDataTypedValueI13SdfPermissionE
25SdfAbstractDataTypedValueINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEEE
25SdfAbstractDataTypedValueI9SdfListOpI7SdfPathEE
25SdfAbstractDataTypedValueINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
12PcpErrorBase
16PcpErrorArcCycle
27PcpErrorArcPermissionDenied
32PcpErrorInconsistentPropertyBase
32PcpErrorInconsistentPropertyType
33PcpErrorInconsistentAttributeType
40PcpErrorInconsistentAttributeVariability
25PcpErrorInternalAssetPath
23PcpErrorInvalidPrimPath
28PcpErrorInvalidAssetPathBase
24PcpErrorInvalidAssetPath
22PcpErrorMutedAssetPath
22PcpErrorTargetPathBase
33PcpErrorInvalidInstanceTargetPath
33PcpErrorInvalidExternalTargetPath
25PcpErrorInvalidTargetPath
29PcpErrorInvalidSublayerOffset
30PcpErrorInvalidReferenceOffset
32PcpErrorInvalidSublayerOwnership
27PcpErrorInvalidSublayerPath
31PcpErrorInvalidVariantSelection
33PcpErrorOpinionAtRelocationSource
28PcpErrorPrimPermissionDenied
32PcpErrorPropertyPermissionDenied
21PcpErrorSublayerCycle
30PcpErrorTargetPermissionDenied
26PcpErrorUnresolvedPrimPath
12PcpErrorType
NSt3__120__shared_ptr_pointerIP16PcpErrorArcCycleNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI16PcpErrorArcCycleEE
NSt3__120__shared_ptr_pointerIP27PcpErrorArcPermissionDeniedNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI27PcpErrorArcPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP32PcpErrorInconsistentPropertyTypeNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI32PcpErrorInconsistentPropertyTypeEE
NSt3__120__shared_ptr_pointerIP33PcpErrorInconsistentAttributeTypeNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI33PcpErrorInconsistentAttributeTypeEE
NSt3__120__shared_ptr_pointerIP40PcpErrorInconsistentAttributeVariabilityNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI40PcpErrorInconsistentAttributeVariabilityEE
NSt3__120__shared_ptr_pointerIP25PcpErrorInternalAssetPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI25PcpErrorInternalAssetPathEE
NSt3__120__shared_ptr_pointerIP23PcpErrorInvalidPrimPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI23PcpErrorInvalidPrimPathEE
NSt3__120__shared_ptr_pointerIP24PcpErrorInvalidAssetPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI24PcpErrorInvalidAssetPathEE
NSt3__120__shared_ptr_pointerIP22PcpErrorMutedAssetPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI22PcpErrorMutedAssetPathEE
NSt3__120__shared_ptr_pointerIP33PcpErrorInvalidInstanceTargetPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI33PcpErrorInvalidInstanceTargetPathEE
NSt3__120__shared_ptr_pointerIP33PcpErrorInvalidExternalTargetPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI33PcpErrorInvalidExternalTargetPathEE
NSt3__120__shared_ptr_pointerIP25PcpErrorInvalidTargetPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI25PcpErrorInvalidTargetPathEE
NSt3__120__shared_ptr_pointerIP29PcpErrorInvalidSublayerOffsetNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI29PcpErrorInvalidSublayerOffsetEE
NSt3__120__shared_ptr_pointerIP30PcpErrorInvalidReferenceOffsetNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI30PcpErrorInvalidReferenceOffsetEE
NSt3__120__shared_ptr_pointerIP32PcpErrorInvalidSublayerOwnershipNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI32PcpErrorInvalidSublayerOwnershipEE
NSt3__120__shared_ptr_pointerIP27PcpErrorInvalidSublayerPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI27PcpErrorInvalidSublayerPathEE
NSt3__120__shared_ptr_pointerIP31PcpErrorInvalidVariantSelectionNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI31PcpErrorInvalidVariantSelectionEE
NSt3__120__shared_ptr_pointerIP33PcpErrorOpinionAtRelocationSourceNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI33PcpErrorOpinionAtRelocationSourceEE
NSt3__120__shared_ptr_pointerIP28PcpErrorPrimPermissionDeniedNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI28PcpErrorPrimPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP32PcpErrorPropertyPermissionDeniedNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI32PcpErrorPropertyPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP21PcpErrorSublayerCycleNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI21PcpErrorSublayerCycleEE
NSt3__120__shared_ptr_pointerIP30PcpErrorTargetPermissionDeniedNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI30PcpErrorTargetPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP26PcpErrorUnresolvedPrimPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI26PcpErrorUnresolvedPrimPathEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN12_GLOBAL__N_17_OpenerEFvNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERK8TfRefPtrI8SdfLayerERKNS5_3mapISE_SE_NS5_4lessISE_EENSC_INS5_4pairIKSE_SE_EEEEEEEJPS8_N12SdfListProxyI21SdfSubLayerTypePolicyE10_ItemProxyESJ_ST_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN12_GLOBAL__N_17_OpenerEFvNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK8TfRefPtrI8SdfLayerERKNS1_3mapISA_SA_NS1_4lessISA_EENS8_INS1_4pairIKSA_SA_EEEEEEEJPS4_N12SdfListProxyI21SdfSubLayerTypePolicyE10_ItemProxyESF_SP_EEEEE
13PcpLayerStack
8TfRefPtrI12SdfLayerTreeE
9TfWeakPtrI22Pcp_LayerStackRegistryE
15TfWeakPtrFacadeI9TfWeakPtr22Pcp_LayerStackRegistryE
22Pcp_LayerStackRegistry
N16PcpMapExpression8VariableE
16Pcp_VariableImpl
NSt3__120__shared_ptr_pointerIP16Pcp_VariableImplNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI16Pcp_VariableImplEE
11TfFlyweightIN14PcpMapFunction5_DataENS1_4HashEE
19PcpPayloadDecorator
N12_GLOBAL__N_14Task4TypeE
10PcpArcType
8TfRefPtrI18PcpPrimIndex_GraphE
9TfWeakPtrI18PcpPrimIndex_GraphE
15TfWeakPtrFacadeI9TfWeakPtr18PcpPrimIndex_GraphE
18PcpPrimIndex_Graph
NSt3__120__shared_ptr_pointerIPN18PcpPrimIndex_Graph11_SharedDataENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN18PcpPrimIndex_Graph11_SharedDataEEE
17PcpDependencyType
8TfRefPtrI22Pcp_LayerStackRegistryE
NSt3__16__bindIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS3_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISP_EEEEST_EJRKNS_12placeholders4__phILi1EEENS_17reference_wrapperIS7_EES9_RKNSX_ILi2EEENS11_ISH_EERKSJ_RSL_ST_RST_EEE
NSt3__118__weak_result_typeIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS3_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISP_EEEEST_EEE
N3tbb10interface78internal18delegated_functionIKZN12_GLOBAL__N_114_TaskArenaImpl4WaitEvE3$_6EE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_10_AddPluginEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_mRK7JsValueE3$_0EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_110_AddPluginEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_mRK7JsValueE3$_0EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_13_ReadPlugInfoEPNS3_12_ReadContextENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_1EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_113_ReadPlugInfoEPNS2_12_ReadContextENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_1EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_26_ReadPlugInfoWithWildcardsEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_4EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_126_ReadPlugInfoWithWildcardsEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_4EE
NSt3__120__shared_ptr_pointerIPNS_11basic_regexIcNS_12regex_traitsIcEEEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteINS_11basic_regexIcNS_12regex_traitsIcEEEEEE
NSt3__111__end_stateIcEE
NSt3__16__nodeIcEE
NSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteINS_13__empty_stateIcEEEE
NSt3__113__empty_stateIcEE
NSt3__116__owns_one_stateIcEE
NSt3__115__has_one_stateIcEE
NSt3__110__l_anchorIcEE
NSt3__110__r_anchorIcEE
NSt3__115__word_boundaryIcNS_12regex_traitsIcEEEE
NSt3__111__lookaheadIcNS_12regex_traitsIcEEEE
NSt3__123__match_any_but_newlineIcEE
NSt3__118__match_char_icaseIcNS_12regex_traitsIcEEEE
NSt3__120__match_char_collateIcNS_12regex_traitsIcEEEE
NSt3__112__match_charIcEE
NSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEEE
NSt3__118__back_ref_collateIcNS_12regex_traitsIcEEEE
NSt3__110__back_refIcEE
NSt3__120__bracket_expressionIcNS_12regex_traitsIcEEEE
=]:].]
NSt3__128__begin_marked_subexpressionIcEE
NSt3__126__end_marked_subexpressionIcEE
NSt3__16__loopIcEE
NSt3__117__owns_two_statesIcEE
NSt3__117__repeat_one_loopIcEE
NSt3__111__alternateIcEE
NSt3__121__empty_non_own_stateIcEE
NSt3__111__match_anyIcEE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_26_ReadPlugInfoWithWildcardsEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_5EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_126_ReadPlugInfoWithWildcardsEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_5EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_18_TraverseDirectoryEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS7_10shared_ptrINS7_11basic_regexIcNS7_12regex_traitsIcEEEEEEE3$_2EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_118_TraverseDirectoryEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10shared_ptrINS5_11basic_regexIcNS5_12regex_traitsIcEEEEEEE3$_2EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_18_TraverseDirectoryEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS7_10shared_ptrINS7_11basic_regexIcNS7_12regex_traitsIcEEEEEEE3$_3EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_118_TraverseDirectoryEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10shared_ptrINS5_11basic_regexIcNS5_12regex_traitsIcEEEEEEE3$_3EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunINSt3__16__bindIRFvPNS3_12_ReadContextERKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJS8_SE_EEEEEEE
N3tbb8internal13function_taskINSt3__16__bindIRFvPN12_GLOBAL__N_112_ReadContextERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJS6_SC_EEEEE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunINSt3__16__bindIRFvPNS3_12_ReadContextERKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJS8_SG_EEEEEEE
N3tbb8internal13function_taskINSt3__16__bindIRFvPN12_GLOBAL__N_112_ReadContextERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJS6_SE_EEEEE
N10PlugNotice4BaseE
N10PlugNotice18DidRegisterPluginsE
10PlugPlugin
PFv6TfTypeE
Fv6TfTypeE
12PlugRegistry
10TfWeakBase
N5boost12noncopyable_11noncopyableE
8TfRefPtrI10Tf_RemnantE
9TfWeakPtrI12PlugRegistryE
15TfWeakPtrFacadeI9TfWeakPtr12PlugRegistryE
19TfWeakPtrFacadeBase
NSt3__110__function6__funcINS_6__bindIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJPS3_RKNS_12placeholders4__phILi1EEEEEENS7_ISK_EEFbSB_EEE
NSt3__110__function6__baseIFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__16__bindIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJPS1_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__115binary_functionIP12PlugRegistryRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbEE
NSt3__110__function6__funcINS_6__bindIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS7_23cache_aligned_allocatorISB_EEEEEJPS3_RKNS_12placeholders4__phILi1EEESF_EEENS_9allocatorISO_EEFvS6_EEE
NSt3__110__function6__baseIFvRK25Plug_RegistrationMetadataEEE
NSt3__16__bindIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS5_23cache_aligned_allocatorIS9_EEEEEJPS1_RKNS_12placeholders4__phILi1EEESD_EEE
NSt3__118__weak_result_typeIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS5_23cache_aligned_allocatorIS9_EEEEEEE
9TfWeakPtrI10PlugPluginE
15TfWeakPtrFacadeI9TfWeakPtr10PlugPluginE
16TfDiagnosticType
15SdfAbstractData
26SdfAbstractDataSpecVisitor
30SdfAbstractData_IsEmptyChecker
25SdfAbstractData_CopySpecs
34SdfAbstractData_CheckAllSpecsExist
34SdfAbstractData_CheckAllSpecsMatch
35SdfAbstractData_SortedPathCollector
9TfWeakPtrIK15SdfAbstractDataE
15TfWeakPtrFacadeI9TfWeakPtrK15SdfAbstractDataE
12SdfAssetPath
NSt3__120__shared_ptr_pointerIP7VtArrayI7TfTokenENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7TfTokenEEE
25SdfAbstractDataTypedValueI6TfEnumE
N13SdfChangeList18SubLayerChangeTypeE
13SdfChangeList
NSt3__120__shared_ptr_pointerIPNS_6vectorI7TfTokenNS_9allocatorIS2_EEEENS_14default_deleteIS5_EENS3_IS5_EEEE
NSt3__114default_deleteINS_6vectorI7TfTokenNS_9allocatorIS2_EEEEEE
17Sdf_ChangeManager
N3tbb10interface626enumerable_thread_specificIN17Sdf_ChangeManager5_DataENS_23cache_aligned_allocatorIS3_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN17Sdf_ChangeManager5_DataENS1_20construct_by_defaultIS4_EEEE
N3tbb10interface68internal13callback_baseIN17Sdf_ChangeManager5_DataEEE
N3tbb10interface68internal20construct_by_defaultIN17Sdf_ChangeManager5_DataEEE
16SdfMapperArgSpec
11SdfSpecType
17SdfCleanupEnabler
9TfStackedI17SdfCleanupEnablerLb0E25Tf_ExportedStackedStorageIS0_Lb0EEE
18Sdf_CleanupTracker
33Sdf_AttributeConnectionListEditor
24Sdf_ConnectionListEditorI34Sdf_AttributeConnectionChildPolicyE
32Sdf_RelationshipTargetListEditor
24Sdf_ConnectionListEditorI33Sdf_RelationshipTargetChildPolicyE
7SdfData
20Work_DetachedInvokerI23Work_AsyncDestroyHelperI9TfHashMapI7SdfPathN7SdfData9_SpecDataENS2_4HashENSt3__18equal_toIS2_EENS6_9allocatorINS6_4pairIKS2_S4_EEEEEEE
13SdfFileFormat
N5boost6detail17sp_counted_impl_pIN22Sdf_FileFormatRegistry5_InfoEEE
8SdfLayer
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE14_SpecsToDelete
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE14_SpecsToCreate
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE12_SpecUpdater
8TfRefPtrI25SdfLayerStateDelegateBaseE
NSt3__120__shared_ptr_pointerIP12SdfAssetPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI12SdfAssetPathEE
NSt3__120__shared_ptr_pointerIPiNS_14default_deleteIiEENS_9allocatorIiEEEE
NSt3__114default_deleteIiEE
N5boost6detail17sp_counted_impl_pI22Sdf_SubLayerListEditorEE
NSt3__16__bindIPFbRK9TfWeakPtrI8SdfLayerERK7SdfPathEJRS3_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFbRK9TfWeakPtrI8SdfLayerERK7SdfPathEEE
NSt3__115binary_functionIRK9TfWeakPtrI8SdfLayerERK7SdfPathbEE
NSt3__16__bindIPFbRK9TfWeakPtrI8SdfLayerERK16SdfNamespaceEditPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJRS3_RKNS_12placeholders4__phILi1EEERKNSK_ILi2EEEEEE
NSt3__118__weak_result_typeIPFbRK9TfWeakPtrI8SdfLayerERK16SdfNamespaceEditPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
8TfRefPtrI7SdfDataE
NSt3__16__bindIPFN5boost8optionalI12SdfReferenceEERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESC_RKS3_EJSC_SC_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFN5boost8optionalI12SdfReferenceEERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESC_RKS3_EEE
9TfWeakPtrI15SdfAbstractDataE
15TfWeakPtrFacadeI9TfWeakPtr15SdfAbstractDataE
NSt3__16__bindIRFv8TfRefPtrI15SdfAbstractDataEP20Sdf_IdentityRegistryRK7SdfPathS8_S8_EJRS3_S5_RKNS_12placeholders4__phILi1EEES8_S8_EEE
NSt3__118__weak_result_typeIPFv8TfRefPtrI15SdfAbstractDataEP20Sdf_IdentityRegistryRK7SdfPathS8_S8_EEE
NSt3__16__bindIPFvP15SdfAbstractDataRK7SdfPathEJS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFvP15SdfAbstractDataRK7SdfPathEEE
NSt3__115binary_functionIP15SdfAbstractDataRK7SdfPathvEE
12SdfLayerBase
14SdfLayerOffset
N5boost15totally_orderedI14SdfLayerOffsetS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost16totally_ordered1I14SdfLayerOffsetNS_6detail10empty_baseIS1_EEEE
N5boost21less_than_comparable1I14SdfLayerOffsetNS_20equality_comparable1IS1_NS_6detail10empty_baseIS1_EEEEEE
N5boost20equality_comparable1I14SdfLayerOffsetNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI14SdfLayerOffsetEE
N5boost2io18basic_altstringbufIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_2io17bad_format_stringEEEEE
N5boost16exception_detail19error_info_injectorINS_2io17bad_format_stringEEE
N5boost2io17bad_format_stringE
N5boost2io12format_errorE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_2io13too_many_argsEEEEE
N5boost16exception_detail19error_info_injectorINS_2io13too_many_argsEEE
N5boost2io13too_many_argsE
N5boost2io22basic_oaltstringstreamIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEE
N5boost16base_from_memberINS_10shared_ptrINS_2io18basic_altstringbufIcNSt3__111char_traitsIcEENS4_9allocatorIcEEEEEELi0EEE
N5boost6detail18sp_counted_impl_pdIPNS_2io18basic_altstringbufIcNSt3__111char_traitsIcEENS4_9allocatorIcEEEENS2_22basic_oaltstringstreamIcS6_S8_E5No_OpEEE
N5boost2io22basic_oaltstringstreamIcNSt3__111char_traitsIcEENS2_9allocatorIcEEE5No_OpE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_2io12too_few_argsEEEEE
N5boost16exception_detail19error_info_injectorINS_2io12too_few_argsEEE
N5boost2io12too_few_argsE
25SdfLayerStateDelegateBase
27SdfSimpleLayerStateDelegate
12SdfLayerTree
13SdfListOpType
13Sdf_MapEditorI12VtDictionaryE
16Sdf_LsdMapEditorI12VtDictionaryE
13Sdf_MapEditorINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
16Sdf_LsdMapEditorINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
13Sdf_MapEditorINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEEE
16Sdf_LsdMapEditorINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEEE
N5boost6detail17sp_counted_impl_pI16Sdf_LsdMapEditorI12VtDictionaryEEE
NSt3__120__shared_ptr_pointerIPNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_NS_4lessIS7_EENS5_INS_4pairIKS7_S7_EEEEEENS_14default_deleteISE_EENS5_ISE_EEEE
NSt3__114default_deleteINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_NS_4lessIS7_EENS5_INS_4pairIKS7_S7_EEEEEEEE
N5boost6detail17sp_counted_impl_pI16Sdf_LsdMapEditorINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEEEE
NSt3__120__shared_ptr_pointerIPNS_3mapI7SdfPathS2_NS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S2_EEEEEENS_14default_deleteISA_EENS5_ISA_EEEE
NSt3__114default_deleteINS_3mapI7SdfPathS2_NS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S2_EEEEEEEE
N7VtValue15_RemoteTypeInfoI7SdfPathEE
N7VtValue13_TypeInfoImplI7SdfPathN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
N5boost6detail17sp_counted_impl_pI16Sdf_LsdMapEditorINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEEEEE
13SdfMapperSpec
N22SdfNamespaceEditDetail6ResultE
N5boost11bad_pointerE
N5boost27bad_ptr_container_operationE
N9SdfNotice4BaseE
N9SdfNotice27LayersDidChangeSentPerLayerE
N9SdfNotice19BaseLayersDidChangeE
N9SdfNotice15LayersDidChangeE
N9SdfNotice18LayerInfoDidChangeE
N9SdfNotice20LayerMutenessChangedE
N9SdfNotice24LayerIdentifierDidChangeE
N9SdfNotice22LayerDidReplaceContentE
N9SdfNotice21LayerDidReloadContentE
N9SdfNotice23LayerDidSaveLayerToFileE
N9SdfNotice21LayerDirtinessChangedE
NSt3__110__function6__funcINS_6__bindIRF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS4_IN17Sdf_ParserHelpers5ValueENS5_ISB_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEEEJRKNS_12placeholders4__phILi1EEERKNSQ_ILi2EEERKNSQ_ILi3EEERKNSQ_ILi4EEEEEENS5_IS13_EESN_EE
NSt3__110__function6__baseIF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS3_IN17Sdf_ParserHelpers5ValueENS4_ISA_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS4_IcEEEEEEE
NSt3__16__bindIRF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS2_IN17Sdf_ParserHelpers5ValueENS3_IS9_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEEJRKNS_12placeholders4__phILi1EEERKNSO_ILi2EEERKNSO_ILi3EEERKNSO_ILi4EEEEEE
NSt3__118__weak_result_typeIPF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS2_IN17Sdf_ParserHelpers5ValueENS3_IS9_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEEEE
7GfVec2f
PFvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE
FvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE
7SdfPath
Ulg 
g"BD 
! U@
FG:$#.23%(
&6N)78<P
X+K,
&'()*.
7-::
  !!!!"""""""####$$%%&&''())**
"#$%&'()
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIZ28Sdf_ClearPathTableInParallelPPvmPFvS6_EE3$_0EvmOT_E21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
10SdfPayload
NSt3__16vectorI10SdfPayloadNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI10SdfPayloadNS_9allocatorIS1_EEEE
11SdfPrimSpec
NSt3__16vectorI9SdfHandleI11SdfPrimSpecENS_9allocatorIS3_EEEE
NSt3__113__vector_baseI9SdfHandleI11SdfPrimSpecENS_9allocatorIS3_EEEE
NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE9SdfHandleI17SdfVariantSetSpecENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEE
17SdfVariantSetSpec
9TfWeakPtrI8SdfLayerE
15TfWeakPtrFacadeI9TfWeakPtr8SdfLayerE
20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE
14Sdf_ListEditorI21SdfNameTokenKeyPolicyE
ZN20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE15ModifyItemEditsERKN5boost8functionIFNS3_8optionalIS1_EERKS1_EEEEUlS8_E_
N5boost6detail17sp_counted_impl_pI20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenEEE
N5boost6detail15sp_counted_baseE
NSt3__120__shared_ptr_pointerIPbNS_14default_deleteIbEENS_9allocatorIbEEEE
NSt3__114default_deleteIbEE
NSt3__120__shared_ptr_pointerIP12VtDictionaryNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI12VtDictionaryEE
NSt3__120__shared_ptr_pointerIP12SdfSpecifierNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI12SdfSpecifierEE
NSt3__120__shared_ptr_pointerIP13SdfPermissionNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI13SdfPermissionEE
20Sdf_ListOpListEditorI16SdfNameKeyPolicyE
14Sdf_ListEditorI16SdfNameKeyPolicyE
ZN20Sdf_ListOpListEditorI16SdfNameKeyPolicyE15ModifyItemEditsERKN5boost8functionIFNS2_8optionalINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEERKSB_EEEEUlSE_E_
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI16SdfNameKeyPolicyEEE
8TfRefPtrI15SdfAbstractDataE
14SdfVariantSpec
NSt3__120__shared_ptr_pointerIP14SdfVariabilityNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI14SdfVariabilityEE
15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS0_EE
N5boost15totally_orderedI15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS2_EES2_NS_6detail10empty_baseIS5_EENS6_7false_tEEE
N5boost16totally_ordered2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS2_EES2_NS_6detail10empty_baseIS5_EEEE
N5boost21less_than_comparable2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS2_EES2_NS_20equality_comparable2IS5_S2_NS_6detail10empty_baseIS5_EEEEEE
N5boost20equality_comparable2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS2_EES2_NS_6detail10empty_baseIS5_EEEE
N5boost6detail10empty_baseI15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EEEE
15SdfMapEditProxyINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE34SdfIdentityMapEditProxyValuePolicyISE_EE
N5boost15totally_orderedI15SdfMapEditProxyINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEE34SdfIdentityMapEditProxyValuePolicyISG_EESG_NS_6detail10empty_baseISJ_EENSK_7false_tEEE
N5boost16totally_ordered2I15SdfMapEditProxyINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEE34SdfIdentityMapEditProxyValuePolicyISG_EESG_NS_6detail10empty_baseISJ_EEEE
N5boost21less_than_comparable2I15SdfMapEditProxyINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEE34SdfIdentityMapEditProxyValuePolicyISG_EESG_NS_20equality_comparable2ISJ_SG_NS_6detail10empty_baseISJ_EEEEEE
N5boost20equality_comparable2I15SdfMapEditProxyINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEE34SdfIdentityMapEditProxyValuePolicyISG_EESG_NS_6detail10empty_baseISJ_EEEE
N5boost6detail10empty_baseI15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EEEE
15SdfMapEditProxyINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEE31SdfRelocatesMapProxyValuePolicyE
N5boost15totally_orderedI15SdfMapEditProxyINSt3__13mapI7SdfPathS4_NS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S4_EEEEEE31SdfRelocatesMapProxyValuePolicyESC_NS_6detail10empty_baseISE_EENSF_7false_tEEE
N5boost16totally_ordered2I15SdfMapEditProxyINSt3__13mapI7SdfPathS4_NS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S4_EEEEEE31SdfRelocatesMapProxyValuePolicyESC_NS_6detail10empty_baseISE_EEEE
N5boost21less_than_comparable2I15SdfMapEditProxyINSt3__13mapI7SdfPathS4_NS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S4_EEEEEE31SdfRelocatesMapProxyValuePolicyESC_NS_20equality_comparable2ISE_SC_NS_6detail10empty_baseISE_EEEEEE
N5boost20equality_comparable2I15SdfMapEditProxyINSt3__13mapI7SdfPathS4_NS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S4_EEEEEE31SdfRelocatesMapProxyValuePolicyESC_NS_6detail10empty_baseISE_EEEE
N5boost6detail10empty_baseI15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyEEE
18SdfListEditorProxyI16SdfPathKeyPolicyE
18SdfListEditorProxyI22SdfReferenceTypePolicyE
N5boost6detail17sp_counted_impl_pI32Sdf_RelationshipTargetListEditorEE
N5boost6detail17sp_counted_impl_pI33Sdf_AttributeConnectionListEditorEE
20Sdf_ListOpListEditorI16SdfPathKeyPolicyE
14Sdf_ListEditorI16SdfPathKeyPolicyE
ZN20Sdf_ListOpListEditorI16SdfPathKeyPolicyE15ModifyItemEditsERKN5boost8functionIFNS2_8optionalI7SdfPathEERKS5_EEEEUlS8_E_
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI16SdfPathKeyPolicyEEE
20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE
14Sdf_ListEditorI22SdfReferenceTypePolicyE
ZN20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE15ModifyItemEditsERKN5boost8functionIFNS2_8optionalI12SdfReferenceEERKS5_EEEEUlS8_E_
N7VtValue15_RemoteTypeInfoI12SdfReferenceEE
N7VtValue13_TypeInfoImplI12SdfReferenceN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI22SdfReferenceTypePolicyEEE
12SdfReference
NSt3__16vectorI12SdfReferenceNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI12SdfReferenceNS_9allocatorIS1_EEEE
NSt3__16__bindIRFN5boost8optionalI7SdfPathEERKS3_S6_S6_EJRS3_S9_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFN5boost8optionalI7SdfPathEERKS3_S6_S6_EEE
13SdfSchemaBase
9SdfSchema
NSt3__120__shared_ptr_pointerIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EENS4_IS6_EEEE
NSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEE
N5boost15totally_orderedI7SdfPathS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost16totally_ordered1I7SdfPathNS_6detail10empty_baseIS1_EEEE
N5boost21less_than_comparable1I7SdfPathNS_20equality_comparable1IS1_NS_6detail10empty_baseIS1_EEEEEE
N5boost20equality_comparable1I7SdfPathNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI7SdfPathEE
NSt3__120__shared_ptr_pointerIP7SdfPathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7SdfPathEE
NSt3__120__shared_ptr_pointerIPdNS_14default_deleteIdEENS_9allocatorIdEEEE
NSt3__114default_deleteIdEE
NSt3__120__shared_ptr_pointerIP7TfTokenNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7TfTokenEE
N5boost15totally_orderedI10SdfPayloadS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost16totally_ordered1I10SdfPayloadNS_6detail10empty_baseIS1_EEEE
N5boost21less_than_comparable1I10SdfPayloadNS_20equality_comparable1IS1_NS_6detail10empty_baseIS1_EEEEEE
N5boost20equality_comparable1I10SdfPayloadNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI10SdfPayloadEE
NSt3__120__shared_ptr_pointerIP10SdfPayloadNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10SdfPayloadEE
N5boost15totally_orderedI12SdfReferenceS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost16totally_ordered1I12SdfReferenceNS_6detail10empty_baseIS1_EEEE
N5boost21less_than_comparable1I12SdfReferenceNS_20equality_comparable1IS1_NS_6detail10empty_baseIS1_EEEEEE
N5boost20equality_comparable1I12SdfReferenceNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI12SdfReferenceEE
NSt3__120__shared_ptr_pointerIP12SdfReferenceNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI12SdfReferenceEE
N7VtValue15_RemoteTypeInfoI12VtDictionaryEE
N7VtValue13_TypeInfoImplI12VtDictionaryN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
N7VtValue15_RemoteTypeInfoI9SdfListOpIiEEE
N7VtValue13_TypeInfoImplI9SdfListOpIiEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
9SdfListOpIxE
N7VtValue15_RemoteTypeInfoI9SdfListOpIxEEE
N7VtValue13_TypeInfoImplI9SdfListOpIxEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
9SdfListOpIjE
N7VtValue15_RemoteTypeInfoI9SdfListOpIjEEE
N7VtValue13_TypeInfoImplI9SdfListOpIjEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
9SdfListOpIyE
N7VtValue15_RemoteTypeInfoI9SdfListOpIyEEE
N7VtValue13_TypeInfoImplI9SdfListOpIyEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
9SdfListOpINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
N7VtValue15_RemoteTypeInfoI9SdfListOpINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEE
N7VtValue13_TypeInfoImplI9SdfListOpINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEN5boost13intrusive_ptrINS_8_CountedIS9_EEEENS_15_RemoteTypeInfoIS9_EEEE
9SdfListOpI7TfTokenE
N7VtValue15_RemoteTypeInfoI9SdfListOpI7TfTokenEEE
N7VtValue13_TypeInfoImplI9SdfListOpI7TfTokenEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
7VtArrayI7TfTokenE
N7VtValue15_RemoteTypeInfoI7VtArrayI7TfTokenEEE
N7VtValue13_TypeInfoImplI7VtArrayI7TfTokenEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7TfTokenE9_StreamerE
N5boost15totally_orderedI12SdfAssetPathS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost16totally_ordered1I12SdfAssetPathNS_6detail10empty_baseIS1_EEEE
N5boost21less_than_comparable1I12SdfAssetPathNS_20equality_comparable1IS1_NS_6detail10empty_baseIS1_EEEEEE
N5boost20equality_comparable1I12SdfAssetPathNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI12SdfAssetPathEE
N7VtValue15_RemoteTypeInfoI12SdfAssetPathEE
N7VtValue13_TypeInfoImplI12SdfAssetPathN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
9SdfListOpI7SdfPathE
N7VtValue15_RemoteTypeInfoI9SdfListOpI7SdfPathEEE
N7VtValue13_TypeInfoImplI9SdfListOpI7SdfPathEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N5boost15totally_orderedI6TfEnumS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost16totally_ordered1I6TfEnumNS_6detail10empty_baseIS1_EEEE
N5boost21less_than_comparable1I6TfEnumNS_20equality_comparable1IS1_NS_6detail10empty_baseIS1_EEEEEE
N5boost20equality_comparable1I6TfEnumNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI6TfEnumEE
N7VtValue15_RemoteTypeInfoI6TfEnumEE
N7VtValue13_TypeInfoImplI6TfEnumN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
NSt3__16vectorI7TfTokenNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI7TfTokenNS_9allocatorIS1_EEEE
N7VtValue15_RemoteTypeInfoINSt3__16vectorI7TfTokenNS1_9allocatorIS3_EEEEEE
N7VtValue13_TypeInfoImplINSt3__16vectorI7TfTokenNS1_9allocatorIS3_EEEEN5boost13intrusive_ptrINS_8_CountedIS6_EEEENS_15_RemoteTypeInfoIS6_EEEE
N7VtValue15_RemoteTypeInfoI10SdfPayloadEE
N7VtValue13_TypeInfoImplI10SdfPayloadN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
N7VtValue14_LocalTypeInfoI13SdfPermissionEE
N7VtValue13_TypeInfoImplI13SdfPermissionS1_NS_14_LocalTypeInfoIS1_EEEE
9SdfListOpI12SdfReferenceE
N7VtValue15_RemoteTypeInfoI9SdfListOpI12SdfReferenceEEE
N7VtValue13_TypeInfoImplI9SdfListOpI12SdfReferenceEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
NSt3__13mapId7VtValueNS_4lessIdEENS_9allocatorINS_4pairIKdS1_EEEEEE
N7VtValue15_RemoteTypeInfoINSt3__13mapIdS_NS1_4lessIdEENS1_9allocatorINS1_4pairIKdS_EEEEEEEE
N7VtValue13_TypeInfoImplINSt3__13mapIdS_NS1_4lessIdEENS1_9allocatorINS1_4pairIKdS_EEEEEEN5boost13intrusive_ptrINS_8_CountedISA_EEEENS_15_RemoteTypeInfoISA_EEEE
NSt3__13mapI7SdfPathS1_NS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S1_EEEEEE
N7VtValue15_RemoteTypeInfoINSt3__13mapI7SdfPathS3_NS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S3_EEEEEEEE
N7VtValue13_TypeInfoImplINSt3__13mapI7SdfPathS3_NS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S3_EEEEEEN5boost13intrusive_ptrINS_8_CountedISB_EEEENS_15_RemoteTypeInfoISB_EEEE
N7VtValue14_LocalTypeInfoI12SdfSpecifierEE
N7VtValue13_TypeInfoImplI12SdfSpecifierS1_NS_14_LocalTypeInfoIS1_EEEE
N7VtValue15_RemoteTypeInfoINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEE
N7VtValue13_TypeInfoImplINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN5boost13intrusive_ptrINS_8_CountedISA_EEEENS_15_RemoteTypeInfoISA_EEEE
NSt3__16vectorI14SdfLayerOffsetNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI14SdfLayerOffsetNS_9allocatorIS1_EEEE
N7VtValue15_RemoteTypeInfoINSt3__16vectorI14SdfLayerOffsetNS1_9allocatorIS3_EEEEEE
N7VtValue13_TypeInfoImplINSt3__16vectorI14SdfLayerOffsetNS1_9allocatorIS3_EEEEN5boost13intrusive_ptrINS_8_CountedIS6_EEEENS_15_RemoteTypeInfoIS6_EEEE
NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEE
N7VtValue15_RemoteTypeInfoINSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S8_EEEEEEEE
N7VtValue13_TypeInfoImplINSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S8_EEEEEEN5boost13intrusive_ptrINS_8_CountedISF_EEEENS_15_RemoteTypeInfoISF_EEEE
14SdfVariability
N7VtValue14_LocalTypeInfoI14SdfVariabilityEE
N7VtValue13_TypeInfoImplI14SdfVariabilityS1_NS_14_LocalTypeInfoIS1_EEEE
NSt3__16vectorI7SdfPathNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI7SdfPathNS_9allocatorIS1_EEEE
N7VtValue15_RemoteTypeInfoINSt3__16vectorI7SdfPathNS1_9allocatorIS3_EEEEEE
N7VtValue13_TypeInfoImplINSt3__16vectorI7SdfPathNS1_9allocatorIS3_EEEEN5boost13intrusive_ptrINS_8_CountedIS6_EEEENS_15_RemoteTypeInfoIS6_EEEE
PF10SdfAllowedRK13SdfSchemaBaseRK7VtValueE
F10SdfAllowedRK13SdfSchemaBaseRK7VtValueE
20SdfDimensionlessUnit
NSt3__117bad_function_callE
N8TfNotice10_DelivererI9TfWeakPtrI9SdfSchemaE12TfAnyWeakPtrMS2_FvRKN10PlugNotice18DidRegisterPluginsEES6_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI9SdfSchemaE12TfAnyWeakPtrMS3_FvRKN10PlugNotice18DidRegisterPluginsEES7_EEEE
9TfWeakPtrI9SdfSchemaE
15TfWeakPtrFacadeI9TfWeakPtr9SdfSchemaE
13SdfLengthUnit
6TfType
N7VtValue15_RemoteTypeInfoI7VtArrayIbEEE
N7VtValue13_TypeInfoImplI7VtArrayIbEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIbE9_StreamerE
N7VtValue15_RemoteTypeInfoI7VtArrayIhEEE
N7VtValue13_TypeInfoImplI7VtArrayIhEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIhE9_StreamerE
7VtArrayItE
N7VtValue15_RemoteTypeInfoI7VtArrayItEEE
N7VtValue13_TypeInfoImplI7VtArrayItEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayItE9_StreamerE
7VtArrayIiE
N7VtValue15_RemoteTypeInfoI7VtArrayIiEEE
N7VtValue13_TypeInfoImplI7VtArrayIiEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIiE9_StreamerE
N7VtValue15_RemoteTypeInfoI7VtArrayIjEEE
N7VtValue13_TypeInfoImplI7VtArrayIjEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIjE9_StreamerE
N7VtValue15_RemoteTypeInfoI7VtArrayIxEEE
N7VtValue13_TypeInfoImplI7VtArrayIxEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIxE9_StreamerE
N7VtValue15_RemoteTypeInfoI7VtArrayIyEEE
N7VtValue13_TypeInfoImplI7VtArrayIyEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIyE9_StreamerE
7VtArrayIN8pxr_half4halfEE
N7VtValue15_RemoteTypeInfoI7VtArrayIN8pxr_half4halfEEEE
N7VtValue13_TypeInfoImplI7VtArrayIN8pxr_half4halfEEN5boost13intrusive_ptrINS_8_CountedIS4_EEEENS_15_RemoteTypeInfoIS4_EEEE
N7VtArrayIN8pxr_half4halfEE9_StreamerE
N7VtValue15_RemoteTypeInfoI7VtArrayIfEEE
N7VtValue13_TypeInfoImplI7VtArrayIfEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIfE9_StreamerE
7VtArrayIdE
N7VtValue15_RemoteTypeInfoI7VtArrayIdEEE
N7VtValue13_TypeInfoImplI7VtArrayIdEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtArrayIdE9_StreamerE
N7VtValue15_RemoteTypeInfoI7VtArrayINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEE
N7VtValue13_TypeInfoImplI7VtArrayINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEN5boost13intrusive_ptrINS_8_CountedIS9_EEEENS_15_RemoteTypeInfoIS9_EEEE
N7VtArrayINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE9_StreamerE
7VtArrayI12SdfAssetPathE
N7VtValue15_RemoteTypeInfoI7VtArrayI12SdfAssetPathEEE
N7VtValue13_TypeInfoImplI7VtArrayI12SdfAssetPathEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI12SdfAssetPathE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec2dEE
N7VtValue13_TypeInfoImplI7GfVec2dN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec2dE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec2dEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec2dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec2dE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec3dEE
N7VtValue13_TypeInfoImplI7GfVec3dN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec3dE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec3dEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec3dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec3dE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec4dEE
N7VtValue13_TypeInfoImplI7GfVec4dN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec4dE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec4dEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec4dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec4dE9_StreamerE
N7VtValue14_LocalTypeInfoI7GfVec2fEE
N7VtValue13_TypeInfoImplI7GfVec2fS1_NS_14_LocalTypeInfoIS1_EEEE
7VtArrayI7GfVec2fE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec2fEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec2fEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec2fE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec3fEE
N7VtValue13_TypeInfoImplI7GfVec3fN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec3fE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec3fEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec3fEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec3fE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec4fEE
N7VtValue13_TypeInfoImplI7GfVec4fN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec4fE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec4fEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec4fEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec4fE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec2hEE
N7VtValue13_TypeInfoImplI7GfVec2hN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec2hE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec2hEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec2hEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec2hE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec3hEE
N7VtValue13_TypeInfoImplI7GfVec3hN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec3hE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec3hEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec3hEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec3hE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec4hEE
N7VtValue13_TypeInfoImplI7GfVec4hN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec4hE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec4hEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec4hEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec4hE9_StreamerE
N7VtValue14_LocalTypeInfoI7GfVec2iEE
N7VtValue13_TypeInfoImplI7GfVec2iS1_NS_14_LocalTypeInfoIS1_EEEE
7VtArrayI7GfVec2iE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec2iEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec2iEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec2iE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec3iEE
N7VtValue13_TypeInfoImplI7GfVec3iN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec3iE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec3iEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec3iEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec3iE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfVec4iEE
N7VtValue13_TypeInfoImplI7GfVec4iN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfVec4iE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfVec4iEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfVec4iEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfVec4iE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfQuathEE
N7VtValue13_TypeInfoImplI7GfQuathN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfQuathE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfQuathEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfQuathEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfQuathE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfQuatfEE
N7VtValue13_TypeInfoImplI7GfQuatfN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfQuatfE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfQuatfEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfQuatfEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfQuatfE9_StreamerE
N7VtValue15_RemoteTypeInfoI7GfQuatdEE
N7VtValue13_TypeInfoImplI7GfQuatdN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI7GfQuatdE
N7VtValue15_RemoteTypeInfoI7VtArrayI7GfQuatdEEE
N7VtValue13_TypeInfoImplI7VtArrayI7GfQuatdEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI7GfQuatdE9_StreamerE
N7VtValue15_RemoteTypeInfoI10GfMatrix2dEE
N7VtValue13_TypeInfoImplI10GfMatrix2dN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI10GfMatrix2dE
N7VtValue15_RemoteTypeInfoI7VtArrayI10GfMatrix2dEEE
N7VtValue13_TypeInfoImplI7VtArrayI10GfMatrix2dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI10GfMatrix2dE9_StreamerE
N7VtValue15_RemoteTypeInfoI10GfMatrix3dEE
N7VtValue13_TypeInfoImplI10GfMatrix3dN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI10GfMatrix3dE
N7VtValue15_RemoteTypeInfoI7VtArrayI10GfMatrix3dEEE
N7VtValue13_TypeInfoImplI7VtArrayI10GfMatrix3dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI10GfMatrix3dE9_StreamerE
N7VtValue15_RemoteTypeInfoI10GfMatrix4dEE
N7VtValue13_TypeInfoImplI10GfMatrix4dN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
7VtArrayI10GfMatrix4dE
N7VtValue15_RemoteTypeInfoI7VtArrayI10GfMatrix4dEEE
N7VtValue13_TypeInfoImplI7VtArrayI10GfMatrix4dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI10GfMatrix4dE9_StreamerE
7SdfSpec
23SdfSpecTypeRegistration
16Sdf_SpecTypeInfo
22Sdf_SubLayerListEditor
20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE
14Sdf_ListEditorI21SdfSubLayerTypePolicyE
ZN20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15ModifyItemEditsERKN5boost8functionIFNS9_8optionalIS7_EERKS7_EEEEUlSE_E_
17SdfTextFileFormat
21Sdf_FileFormatFactoryI17SdfTextFileFormatE
20SdfUnregisteredValue
N5boost19equality_comparableI20SdfUnregisteredValueS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost20equality_comparable1I20SdfUnregisteredValueNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI20SdfUnregisteredValueEE
NSt3__120__shared_ptr_pointerIP20SdfUnregisteredValueNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI20SdfUnregisteredValueEE
9SdfListOpI20SdfUnregisteredValueE
 !"#$%&'()*+,-./0123456789
13SdfValueBlock
N5boost3any6holderIiEE
N5boost3any11placeholderE
NSt3__16__bindIRFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__115binary_functionIP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEvEE
MbP?{
L@13SdfPermission
12SdfSpecifier
14SdfAngularUnit
NSt3__120__shared_ptr_pointerIP13SdfLengthUnitNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI13SdfLengthUnitEE
N7VtValue14_LocalTypeInfoI13SdfLengthUnitEE
N7VtValue13_TypeInfoImplI13SdfLengthUnitS1_NS_14_LocalTypeInfoIS1_EEEE
NSt3__120__shared_ptr_pointerIP14SdfAngularUnitNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI14SdfAngularUnitEE
N7VtValue14_LocalTypeInfoI14SdfAngularUnitEE
N7VtValue13_TypeInfoImplI14SdfAngularUnitS1_NS_14_LocalTypeInfoIS1_EEEE
NSt3__120__shared_ptr_pointerIP20SdfDimensionlessUnitNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI20SdfDimensionlessUnitEE
N7VtValue14_LocalTypeInfoI20SdfDimensionlessUnitEE
N7VtValue13_TypeInfoImplI20SdfDimensionlessUnitS1_NS_14_LocalTypeInfoIS1_EEEE
N7VtValue15_RemoteTypeInfoI9SdfListOpI20SdfUnregisteredValueEEE
N7VtValue13_TypeInfoImplI9SdfListOpI20SdfUnregisteredValueEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N12TfAnyWeakPtr12_EmptyHolderE
N12TfAnyWeakPtr18_PointerHolderBaseE
@7TfDebug
ZN22Tf_DebugSymbolRegistry4_AddERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN7TfDebug5_NodeES8_EUlvE_
22Tf_DebugSymbolRegistry
27TfDebugSymbolsChangedNotice
32TfDebugSymbolEnableChangedNotice
15TfDiagnosticMgr
39TF_LOG_STACK_TRACE_ON_ERROR__DebugCodes
N3tbb10interface626enumerable_thread_specificImNS_23cache_aligned_allocatorImEELNS_18ets_key_usage_typeE0EEE
N3tbb10interface68internal8ets_baseILNS_18ets_key_usage_typeE0EEE
N3tbb10interface68internal13callback_leafImNS1_21construct_by_exemplarImEEEE
N3tbb10interface68internal13callback_baseImEE
N3tbb10interface68internal21construct_by_exemplarImEE
N3tbb10interface626enumerable_thread_specificIbNS_23cache_aligned_allocatorIbEELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIbNS1_20construct_by_defaultIbEEEE
N3tbb10interface68internal13callback_baseIbEE
N3tbb10interface68internal20construct_by_defaultIbEE
N3tbb10interface626enumerable_thread_specificINSt3__14listI7TfErrorNS2_9allocatorIS4_EEEENS_23cache_aligned_allocatorIS7_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEENS1_20construct_by_defaultIS8_EEEE
N3tbb10interface68internal13callback_baseINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEEEE
N3tbb10interface626enumerable_thread_specificIN15TfDiagnosticMgr8_LogTextENS_23cache_aligned_allocatorIS3_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN15TfDiagnosticMgr8_LogTextENS1_20construct_by_defaultIS4_EEEE
N3tbb10interface68internal13callback_baseIN15TfDiagnosticMgr8_LogTextEEE
N3tbb10interface68internal20construct_by_defaultIN15TfDiagnosticMgr8_LogTextEEE
6TfEnum
15Tf_EnumRegistry
ZN6TfEnum8_AddNameES_RKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_E3$_0
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
8TfRefPtrIN16TfDiagnosticBase5_DataEE
N16TfDiagnosticBase5_DataE
PFvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_E
FvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_E
NSt3__16__bindIRFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_6vectorIS6_NS4_IS6_EEEERKSB_N5boost8functionIFvS8_S8_EEEEJRKNS_12placeholders4__phILi1EEERKNSM_ILi2EEERKNSM_ILi3EEERSI_EEE
NSt3__118__weak_result_typeIPFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_6vectorIS6_NS4_IS6_EEEERKSB_N5boost8functionIFvS8_S8_EEEEEE
NSt3__16__bindIRFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_6vectorIS6_NS4_IS6_EEEERKSB_SC_bEJRKNS_12placeholders4__phILi1EEERKNSI_ILi2EEERKNSI_ILi3EEESC_RbEEE
NSt3__118__weak_result_typeIPFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_6vectorIS6_NS4_IS6_EEEERKSB_SC_bEEE
N8TfNotice14_DelivererBaseE
8TfNotice
9TfWeakPtrIN8TfNotice14_DelivererBaseEE
15TfWeakPtrFacadeI9TfWeakPtrN8TfNotice14_DelivererBaseEE
17Tf_NoticeRegistry
N3tbb10interface626enumerable_thread_specificImNS_23cache_aligned_allocatorImEELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafImNS1_20construct_by_defaultImEEEE
N3tbb10interface68internal20construct_by_defaultImEE
9TfWeakPtrIN8TfNotice5ProbeEE
15TfWeakPtrFacadeI9TfWeakPtrN8TfNotice5ProbeEE
9TfRefBase
15TfSimpleRefBase
N12_GLOBAL__N_122Tf_RegistryManagerImplE
N3tbb10interface626enumerable_thread_specificIPNSt3__14listIN5boost8functionIFvvEEENS2_9allocatorIS7_EEEENS_23cache_aligned_allocatorISB_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal8ets_baseILNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIPNSt3__14listIN5boost8functionIFvvEEENS3_9allocatorIS8_EEEENS1_20construct_by_defaultISC_EEEE
N3tbb10interface68internal13callback_baseIPNSt3__14listIN5boost8functionIFvvEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface68internal20construct_by_defaultIPNSt3__14listIN5boost8functionIFvvEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface626enumerable_thread_specificIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateENS_23cache_aligned_allocatorIS4_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateENS1_20construct_by_defaultIS5_EEEE
N3tbb10interface68internal13callback_baseIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateEEE
N3tbb10interface68internal20construct_by_defaultIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
N5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
N5boost17bad_function_callE
N5boost9exceptionE
N5boost16exception_detail10clone_baseE
11TfStopwatch
7TfToken
16Tf_TokenRegistry
14_TfUnknownType
N6TfType11FactoryBaseE
NSt3__16vectorIbNS_9allocatorIbEEEE
NSt3__120__vector_base_commonILb1EEE
NSt3__16vectorIcNS_9allocatorIcEEEE
NSt3__113__vector_baseIcNS_9allocatorIcEEEE
NSt3__16vectorIhNS_9allocatorIhEEEE
NSt3__113__vector_baseIhNS_9allocatorIhEEEE
NSt3__16vectorIsNS_9allocatorIsEEEE
NSt3__113__vector_baseIsNS_9allocatorIsEEEE
NSt3__16vectorItNS_9allocatorItEEEE
NSt3__113__vector_baseItNS_9allocatorItEEEE
NSt3__16vectorIiNS_9allocatorIiEEEE
NSt3__113__vector_baseIiNS_9allocatorIiEEEE
NSt3__16vectorIjNS_9allocatorIjEEEE
NSt3__113__vector_baseIjNS_9allocatorIjEEEE
NSt3__16vectorIlNS_9allocatorIlEEEE
NSt3__113__vector_baseIlNS_9allocatorIlEEEE
NSt3__16vectorImNS_9allocatorImEEEE
NSt3__113__vector_baseImNS_9allocatorImEEEE
NSt3__16vectorIxNS_9allocatorIxEEEE
NSt3__113__vector_baseIxNS_9allocatorIxEEEE
NSt3__16vectorIyNS_9allocatorIyEEEE
NSt3__113__vector_baseIyNS_9allocatorIyEEEE
NSt3__16vectorIfNS_9allocatorIfEEEE
NSt3__113__vector_baseIfNS_9allocatorIfEEEE
NSt3__16vectorIdNS_9allocatorIdEEEE
NSt3__113__vector_baseIdNS_9allocatorIdEEEE
NSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
N5boost15totally_orderedI6TfTypeS1_NS_6detail10empty_baseIS1_EENS2_7false_tEEE
N5boost16totally_ordered1I6TfTypeNS_6detail10empty_baseIS1_EEEE
N5boost21less_than_comparable1I6TfTypeNS_20equality_comparable1IS1_NS_6detail10empty_baseIS1_EEEEEE
N5boost20equality_comparable1I6TfTypeNS_6detail10empty_baseIS1_EEEE
N5boost6detail10empty_baseI6TfTypeEE
15Tf_TypeRegistry
23TfTypeWasDeclaredNotice
10Tf_Remnant
29UsdStageCacheContextBlockType
N3tbb10interface626enumerable_thread_specificIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderENS_23cache_aligned_allocatorIS5_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderENS1_20construct_by_defaultIS6_EEEE
N3tbb10interface68internal13callback_baseIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderEEE
N3tbb10interface68internal20construct_by_defaultIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderEEE
N9UsdNotice20StageContentsChangedE
N9UsdNotice11StageNoticeE
N9UsdNotice14ObjectsChangedE
N9UsdNotice22StageEditTargetChangedE
30SdfAbstractDataConstTypedValueI7TfTokenE
30SdfAbstractDataConstTypedValueI14SdfVariabilityE
11UsdClipsAPI
30SdfAbstractDataConstTypedValueI12VtDictionaryE
25SdfAbstractDataConstValue
30SdfAbstractDataConstTypedValueI9SdfListOpINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
30SdfAbstractDataConstTypedValueI7VtArrayI12SdfAssetPathEE
30SdfAbstractDataConstTypedValueI12SdfAssetPathE
30SdfAbstractDataConstTypedValueINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
30SdfAbstractDataConstTypedValueI7VtArrayI7GfVec2dEE
30SdfAbstractDataConstTypedValueIdE
30SdfAbstractDataConstTypedValueIbE
17UsdUsdaFileFormat
21Sdf_FileFormatFactoryI17UsdUsdaFileFormatE
13UsdSchemaBase
BN3tbb10strict_ppl16concurrent_queueIN13Usd_CrateFile9CrateFile15_BufferedOutput7_BufferENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN13Usd_CrateFile9CrateFile15_BufferedOutput7_BufferEEE
N3tbb10strict_ppl16concurrent_queueIN13Usd_CrateFile9CrateFile15_BufferedOutput8_WriteOpENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN13Usd_CrateFile9CrateFile15_BufferedOutput8_WriteOpEEE
NSt3__110__function6__funcIN16WorkSingularTask6_WakerI19WorkArenaDispatcherNS_6__bindIZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEENS_9allocatorISD_EEFvRNS_6atomicImEEEEE
NSt3__110__function6__baseIFvRNS_6atomicImEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZNK16WorkSingularTask6_WakerIS3_NS6_IZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEclERNS5_6atomicImEEEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZNK16WorkSingularTask6_WakerI19WorkArenaDispatcherNS2_IZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEclERNS1_6atomicImEEEUlvE_JEEEEE
N16WorkSingularTask6_WakerI19WorkArenaDispatcherNSt3__16__bindIZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE0_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE1_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE1_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE2_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE2_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE3_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE3_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE4_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE4_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_11_MmapStreamEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_11_MmapStreamEEEEEvT_E9MakeTokenJEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperINSt3__110unique_ptrIcNS1_14default_deleteIA_cEEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_11_MmapStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_11_MmapStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_11_MmapStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_11_MmapStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_12_PreadStreamEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_12_PreadStreamEEEEEvT_E9MakeTokenJEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_12_PreadStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_12_PreadStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_12_PreadStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_12_PreadStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperI12SdfPathTableIN13Usd_CrateFile9PathIndexEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile27_BuildDecompressedPathsImplERKNS5_6vectorIjNS5_9allocatorIjEEEERKNS9_IiNSA_IiEEEESI_m7SdfPathRS3_E4$_15JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile27_BuildDecompressedPathsImplERKNS1_6vectorIjNS1_9allocatorIjEEEERKNS5_IiNS6_IiEEEESE_m7SdfPathR19WorkArenaDispatcherE4$_15JEEEEE
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
NSt3__110__function6__baseIFN13Usd_CrateFile8ValueRepERK7VtValueEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
NSt3__110__function6__baseIFvN13Usd_CrateFile8ValueRepEP7VtValueEEE
7VtArrayIbE
12Vt_ArrayBase
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
7VtArrayIhE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
7VtArrayIjE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
7VtArrayIxE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
7VtArrayIyE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
7VtArrayIfE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlRK7VtValueE_NS8_ISE_EEFNS2_8ValueRepESD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS8_ISE_EEFvSB_SD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS8_ISE_EEFvSB_SD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE0_
7GfQuatd
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlRK7VtValueE_NS9_ISG_EEFNS2_8ValueRepESF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE0_
9SdfListOpIiE
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlRK7VtValueE_NS9_ISM_EEFNS2_8ValueRepESL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlRK7VtValueE_NS6_ISC_EEFNS2_8ValueRepESB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS6_ISC_EEFvS9_SB_EEE
N7VtValue15_RemoteTypeInfoINSt3__16vectorIdNS1_9allocatorIdEEEEEE
N7VtValue13_TypeInfoImplINSt3__16vectorIdNS1_9allocatorIdEEEEN5boost13intrusive_ptrINS_8_CountedIS5_EEEENS_15_RemoteTypeInfoIS5_EEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS6_ISC_EEFvS9_SB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlRK7VtValueE_NS9_ISH_EEFNS2_8ValueRepESG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtValue14_LocalTypeInfoI13SdfValueBlockEE
N7VtValue13_TypeInfoImplI13SdfValueBlockS1_NS_14_LocalTypeInfoIS1_EEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlRKS5_E_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlRKS2_E_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E0_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtValue15_RemoteTypeInfoI20SdfUnregisteredValueEE
N7VtValue13_TypeInfoImplI20SdfUnregisteredValueN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE0_
16SdfAttributeSpec
15SdfPropertySpec
19SdfRelationshipSpec
8TfRefPtrI8SdfLayerE
17UsdSchemaRegistry
11TfSingletonI17UsdSchemaRegistryE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvE3$_0JEEEEEEE
N3tbb10interface78internal13delegate_baseE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvE3$_0JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIZZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvENK3$_0clEvEUlmmE_EvmOT_E21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
N3tbb10interface98internal9flag_taskE
7VtArrayINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
NSt3__120__shared_ptr_pointerIP7VtArrayINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEENS_14default_deleteIS8_EENS5_IS8_EEEE
NSt3__114default_deleteI7VtArrayINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
16UsdUsdFileFormat
21Sdf_FileFormatFactoryI16UsdUsdFileFormatE
9TfWeakPtrIK13SdfFileFormatE
15TfWeakPtrFacadeI9TfWeakPtrK13SdfFileFormatE
NSt3__120__shared_ptr_pointerIP8Usd_ClipNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI8Usd_ClipEE
25SdfAbstractDataTypedValueINSt3__16vectorI7TfTokenNS0_9allocatorIS2_EEEEE
30SdfAbstractDataConstTypedValueINSt3__16vectorI7TfTokenNS0_9allocatorIS2_EEEEE
NSt3__110__function6__funcIZNK7UsdPrim25_GetPropertiesInNamespaceERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbE3$_1NS6_ISB_EEFbRK7TfTokenEEE
NSt3__110__function6__baseIFbRK7TfTokenEEE
ZNK7UsdPrim25_GetPropertiesInNamespaceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbE3$_1
NSt3__110__function6__funcIN16WorkSingularTask6_WakerI19WorkArenaDispatcherNS_6__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderEC1ERK7UsdPrimRKNS_8functionIFbRKS7_EEEbEUlvE_JEEEEENS_9allocatorISM_EEFvRNS_6atomicImEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZNK16WorkSingularTask6_WakerIS3_NS6_IZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderEC1ERK7UsdPrimRKNS5_8functionIFbRKSA_EEEbEUlvE_JEEEEclERNS5_6atomicImEEEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZNK16WorkSingularTask6_WakerI19WorkArenaDispatcherNS2_IZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderEC1ERK7UsdPrimRKNS1_8functionIFbRKS7_EEEbEUlvE_JEEEEclERNS1_6atomicImEEEUlvE_JEEEEE
N16WorkSingularTask6_WakerI19WorkArenaDispatcherNSt3__16__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderEC1ERK7UsdPrimRKNS2_8functionIFbRKS5_EEEbEUlvE_JEEEEE
N3tbb10strict_ppl16concurrent_queueI7SdfPathNS_23cache_aligned_allocatorIS2_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3I7SdfPathEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE5_FindEvEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE5_FindEvEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE10_VisitPrimERK7UsdPrimEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE10_VisitPrimERK7UsdPrimEUlvE_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIPK7SdfPathEEEENS_8internal26parallel_for_each_body_forIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE10_VisitImplERKNS4_6vectorIS6_NS4_9allocatorIS6_EEEEEUlRS7_E_S9_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal23parallel_do_feeder_implINS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE13_VisitSubtreeERK7UsdPrimEUlSB_E_22UsdPrimSubtreeIteratorEES9_EE
N3tbb10interface98internal17do_iteration_taskINS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE13_VisitSubtreeERK7UsdPrimEUlSB_E_22UsdPrimSubtreeIteratorEES9_EE
N3tbb10interface98internal12do_task_iterI22UsdPrimSubtreeIteratorNS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE13_VisitSubtreeERK7UsdPrimEUlSC_E_S3_EESA_EE
N3tbb10interface98internal19do_group_task_inputINS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE13_VisitSubtreeERK7UsdPrimEUlSB_E_22UsdPrimSubtreeIteratorEES9_EE
N3tbb10interface98internal22do_iteration_task_iterIP7UsdPrimNS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE13_VisitSubtreeERKS3_EUlSC_E_22UsdPrimSubtreeIteratorEES3_EE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE5_FindEvEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN20UsdPrim_TargetFinderI12UsdAttribute28UsdPrim_AttrConnectionFinderE5_FindEvEUlvE0_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIP7SdfPathEEEENS1_23quick_sort_pretest_bodyIS8_NS6_12FastLessThanEEEKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS1_16quick_sort_rangeINSt3__111__wrap_iterIP7SdfPathEENS6_12FastLessThanEEENS1_15quick_sort_bodyIS8_S9_EEKNS_16auto_partitionerEEE
NSt3__110__function6__funcIN16WorkSingularTask6_WakerI19WorkArenaDispatcherNS_6__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderEC1ERK7UsdPrimRKNS_8functionIFbRKS7_EEEbEUlvE_JEEEEENS_9allocatorISM_EEFvRNS_6atomicImEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZNK16WorkSingularTask6_WakerIS3_NS6_IZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderEC1ERK7UsdPrimRKNS5_8functionIFbRKSA_EEEbEUlvE_JEEEEclERNS5_6atomicImEEEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZNK16WorkSingularTask6_WakerI19WorkArenaDispatcherNS2_IZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderEC1ERK7UsdPrimRKNS1_8functionIFbRKS7_EEEbEUlvE_JEEEEclERNS1_6atomicImEEEUlvE_JEEEEE
N16WorkSingularTask6_WakerI19WorkArenaDispatcherNSt3__16__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderEC1ERK7UsdPrimRKNS2_8functionIFbRKS5_EEEbEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE5_FindEvEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE5_FindEvEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE10_VisitPrimERK7UsdPrimEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE10_VisitPrimERK7UsdPrimEUlvE_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIPK7SdfPathEEEENS_8internal26parallel_for_each_body_forIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE10_VisitImplERKNS4_6vectorIS6_NS4_9allocatorIS6_EEEEEUlRS7_E_S9_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal23parallel_do_feeder_implINS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE13_VisitSubtreeERK7UsdPrimEUlSB_E_22UsdPrimSubtreeIteratorEES9_EE
N3tbb10interface98internal17do_iteration_taskINS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE13_VisitSubtreeERK7UsdPrimEUlSB_E_22UsdPrimSubtreeIteratorEES9_EE
N3tbb10interface98internal12do_task_iterI22UsdPrimSubtreeIteratorNS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE13_VisitSubtreeERK7UsdPrimEUlSC_E_S3_EESA_EE
N3tbb10interface98internal19do_group_task_inputINS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE13_VisitSubtreeERK7UsdPrimEUlSB_E_22UsdPrimSubtreeIteratorEES9_EE
N3tbb10interface98internal22do_iteration_task_iterIP7UsdPrimNS_8internal25parallel_for_each_body_doIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE13_VisitSubtreeERKS3_EUlSC_E_22UsdPrimSubtreeIteratorEES3_EE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE5_FindEvEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN20UsdPrim_TargetFinderI15UsdRelationship23UsdPrim_RelTargetFinderE5_FindEvEUlvE0_JEEEEE
30SdfAbstractDataConstTypedValueI10SdfPayloadE
23Usd_UntypedInterpolator
20Usd_HeldInterpolatorI7VtValueE
17UsdUsdzFileFormat
21Sdf_FileFormatFactoryI17UsdUsdzFileFormatE
25Sdf_FileFormatFactoryBase
9TfWeakPtrI12SdfLayerBaseE
15TfWeakPtrFacadeI9TfWeakPtr12SdfLayerBaseE
8TfRefPtrI13Usd_CrateDataE
_20UsdStageCacheRequest
8UsdTyped
15UsdListPosition
13UsdLoadPolicy
17UsdUsdcFileFormat
21Sdf_FileFormatFactoryI17UsdUsdcFileFormatE
25SdfAbstractDataTypedValueI7VtArrayI12SdfAssetPathEE
20SdfAbstractDataValue
25SdfAbstractDataTypedValueINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
8TfRefPtrI13PcpLayerStackE
25SdfAbstractDataTypedValueI12SdfAssetPathE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2dEE
25SdfAbstractDataTypedValueIdE
25SdfAbstractDataTypedValueI12VtDictionaryE
N7VtValue14_LocalTypeInfoIPKS_EE
N7VtValue13_TypeInfoImplIPKS_S2_NS_14_LocalTypeInfoIS2_EEEE
25SdfAbstractDataTypedValueI9SdfListOpINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
9TfWeakPtrI13PcpLayerStackE
15TfWeakPtrFacadeI9TfWeakPtr13PcpLayerStackE
25SdfAbstractDataTypedValueIbE
25SdfAbstractDataTypedValueI7VtArrayIbEE
25SdfAbstractDataTypedValueIhE
25SdfAbstractDataTypedValueI7VtArrayIhEE
25SdfAbstractDataTypedValueIiE
25SdfAbstractDataTypedValueI7VtArrayIiEE
25SdfAbstractDataTypedValueIjE
25SdfAbstractDataTypedValueI7VtArrayIjEE
25SdfAbstractDataTypedValueIxE
25SdfAbstractDataTypedValueI7VtArrayIxEE
25SdfAbstractDataTypedValueIyE
25SdfAbstractDataTypedValueI7VtArrayIyEE
25SdfAbstractDataTypedValueIN8pxr_half4halfEE
25SdfAbstractDataTypedValueI7VtArrayIN8pxr_half4halfEEE
25SdfAbstractDataTypedValueIfE
25SdfAbstractDataTypedValueI7VtArrayIfEE
25SdfAbstractDataTypedValueI7VtArrayIdEE
25SdfAbstractDataTypedValueI7VtArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
25SdfAbstractDataTypedValueI7TfTokenE
25SdfAbstractDataTypedValueI7VtArrayI7TfTokenEE
10GfMatrix2d
25SdfAbstractDataTypedValueI10GfMatrix2dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix2dEE
10GfMatrix3d
25SdfAbstractDataTypedValueI10GfMatrix3dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix3dEE
10GfMatrix4d
25SdfAbstractDataTypedValueI10GfMatrix4dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix4dEE
25SdfAbstractDataTypedValueI7GfQuatdE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuatdEE
7GfQuatf
25SdfAbstractDataTypedValueI7GfQuatfE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuatfEE
7GfQuath
25SdfAbstractDataTypedValueI7GfQuathE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuathEE
25SdfAbstractDataTypedValueI7GfVec2dE
25SdfAbstractDataTypedValueI7GfVec2fE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2fEE
7GfVec2h
25SdfAbstractDataTypedValueI7GfVec2hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2hEE
7GfVec2i
25SdfAbstractDataTypedValueI7GfVec2iE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2iEE
7GfVec3d
25SdfAbstractDataTypedValueI7GfVec3dE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3dEE
7GfVec3f
25SdfAbstractDataTypedValueI7GfVec3fE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3fEE
7GfVec3h
25SdfAbstractDataTypedValueI7GfVec3hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3hEE
7GfVec3i
25SdfAbstractDataTypedValueI7GfVec3iE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3iEE
7GfVec4d
25SdfAbstractDataTypedValueI7GfVec4dE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4dEE
7GfVec4f
25SdfAbstractDataTypedValueI7GfVec4fE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4fEE
7GfVec4h
25SdfAbstractDataTypedValueI7GfVec4hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4hEE
7GfVec4i
25SdfAbstractDataTypedValueI7GfVec4iE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4iEE
8UsdStage
N8UsdStage14InitialLoadSetE
20Usd_InterpolatorBase
30SdfAbstractDataConstTypedValueI12SdfSpecifierE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_0JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_1JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_1JEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperINSt3__16vectorI7SdfPathNS1_9allocatorIS3_EEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_2JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_2JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_3JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_3JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_4JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_4JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_5JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_5JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_6JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_6JEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperI9TfHashMapI7SdfPathN5boost13intrusive_ptrI12Usd_PrimDataEENS2_4HashENSt3__18equal_toIS2_EENS8_9allocatorINS8_4pairIKS2_S6_EEEEEEE
8TfRefPtrI8UsdStageE
20Usd_StageOpenRequest
N3tbb10interface98internal23parallel_do_feeder_implINS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNKS5_17_DiscoverPayloadsERK7SdfPath13UsdLoadPolicyPNSt3__13setIS7_NSB_4lessIS7_EENSB_9allocatorIS7_EEEEbSI_E3$_7EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setIS7_NS7_4HashENSB_8equal_toIS7_EENS_13tbb_allocatorIS7_EEEEEUlSM_E_N12UsdPrimRange8iteratorEEESK_EE
N3tbb10interface918parallel_do_feederI7UsdPrimEE
N3tbb10interface98internal17do_iteration_taskINS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNKS5_17_DiscoverPayloadsERK7SdfPath13UsdLoadPolicyPNSt3__13setIS7_NSB_4lessIS7_EENSB_9allocatorIS7_EEEEbSI_E3$_7EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setIS7_NS7_4HashENSB_8equal_toIS7_EENS_13tbb_allocatorIS7_EEEEEUlSM_E_N12UsdPrimRange8iteratorEEESK_EE
N3tbb10interface98internal12do_task_iterIN12UsdPrimRange8iteratorENS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNKS7_17_DiscoverPayloadsERK7SdfPath13UsdLoadPolicyPNSt3__13setIS9_NSD_4lessIS9_EENSD_9allocatorIS9_EEEEbSK_E3$_7EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setIS9_NS9_4HashENSD_8equal_toIS9_EENS_13tbb_allocatorIS9_EEEEEUlSO_E_S4_EESM_EE
N3tbb10interface98internal19do_group_task_inputINS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNKS5_17_DiscoverPayloadsERK7SdfPath13UsdLoadPolicyPNSt3__13setIS7_NSB_4lessIS7_EENSB_9allocatorIS7_EEEEbSI_E3$_7EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setIS7_NS7_4HashENSB_8equal_toIS7_EENS_13tbb_allocatorIS7_EEEEEUlSM_E_N12UsdPrimRange8iteratorEEESK_EE
N3tbb10interface98internal22do_iteration_task_iterIP7UsdPrimNS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNKS7_17_DiscoverPayloadsERK7SdfPath13UsdLoadPolicyPNSt3__13setIS9_NSD_4lessIS9_EENSD_9allocatorIS9_EEEEbSK_E3$_7EEvRKS3_RKT_PNS_10interface524concurrent_unordered_setIS9_NS9_4HashENSD_8equal_toIS9_EENS_13tbb_allocatorIS9_EEEEEUlSN_E_N12UsdPrimRange8iteratorEEES3_EE
N3tbb10interface98internal23parallel_do_feeder_implINS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNS5_14_LoadAndUnloadERKNSt3__13setI7SdfPathNS7_4lessIS9_EENS7_9allocatorIS9_EEEESG_PSE_SH_13UsdLoadPolicyE3$_8EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setIS9_NS9_4HashENS7_8equal_toIS9_EENS_13tbb_allocatorIS9_EEEEEUlSM_E_N12UsdPrimRange8iteratorEEESK_EE
N3tbb10interface98internal17do_iteration_taskINS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNS5_14_LoadAndUnloadERKNSt3__13setI7SdfPathNS7_4lessIS9_EENS7_9allocatorIS9_EEEESG_PSE_SH_13UsdLoadPolicyE3$_8EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setIS9_NS9_4HashENS7_8equal_toIS9_EENS_13tbb_allocatorIS9_EEEEEUlSM_E_N12UsdPrimRange8iteratorEEESK_EE
N3tbb10interface98internal12do_task_iterIN12UsdPrimRange8iteratorENS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNS7_14_LoadAndUnloadERKNSt3__13setI7SdfPathNS9_4lessISB_EENS9_9allocatorISB_EEEESI_PSG_SJ_13UsdLoadPolicyE3$_8EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setISB_NSB_4HashENS9_8equal_toISB_EENS_13tbb_allocatorISB_EEEEEUlSO_E_S4_EESM_EE
N3tbb10interface98internal19do_group_task_inputINS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNS5_14_LoadAndUnloadERKNSt3__13setI7SdfPathNS7_4lessIS9_EENS7_9allocatorIS9_EEEESG_PSE_SH_13UsdLoadPolicyE3$_8EEvRK7UsdPrimRKT_PNS_10interface524concurrent_unordered_setIS9_NS9_4HashENS7_8equal_toIS9_EENS_13tbb_allocatorIS9_EEEEEUlSM_E_N12UsdPrimRange8iteratorEEESK_EE
N3tbb10interface98internal22do_iteration_task_iterIP7UsdPrimNS_8internal25parallel_for_each_body_doIZNK8UsdStage25_WalkPrimsWithMastersImplIZNS7_14_LoadAndUnloadERKNSt3__13setI7SdfPathNS9_4lessISB_EENS9_9allocatorISB_EEEESI_PSG_SJ_13UsdLoadPolicyE3$_8EEvRKS3_RKT_PNS_10interface524concurrent_unordered_setISB_NSB_4HashENS9_8equal_toISB_EENS_13tbb_allocatorISB_EEEEEUlSN_E_N12UsdPrimRange8iteratorEEES3_EE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS8_PK22UsdStagePopulationMaskRK7SdfPathEJPS7_RS9_SB_PSC_SH_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS4_PK22UsdStagePopulationMaskRK7SdfPathEJPS3_RS5_S7_PS8_SD_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS8_PK22UsdStagePopulationMaskRK7SdfPathEJPS7_RS9_RSB_RSE_SH_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS4_PK22UsdStagePopulationMaskRK7SdfPathEJPS3_RS5_RS7_RSA_SD_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS7_S9_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS3_S5_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS7_RS9_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS3_RS5_EEEEE
N8TfNotice10_DelivererI9TfWeakPtrI8UsdStageES1_I8SdfLayerEMS2_FvRKN9SdfNotice27LayersDidChangeSentPerLayerEES7_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI8UsdStageES2_I8SdfLayerEMS3_FvRKN9SdfNotice27LayersDidChangeSentPerLayerEES8_EEEE
25SdfAbstractDataTypedValueI12SdfSpecifierE
25SdfAbstractDataTypedValueI14SdfVariabilityE
25SdfAbstractDataTypedValueI9SdfListOpIiEE
25SdfAbstractDataTypedValueI9SdfListOpIxEE
25SdfAbstractDataTypedValueI9SdfListOpIjEE
25SdfAbstractDataTypedValueI9SdfListOpIyEE
25SdfAbstractDataTypedValueI9SdfListOpI7TfTokenEE
9TfWeakPtrIK8SdfLayerE
15TfWeakPtrFacadeI9TfWeakPtrK8SdfLayerE
20Usd_HeldInterpolatorIbE
20Usd_HeldInterpolatorI7VtArrayIbEE
20Usd_HeldInterpolatorIhE
20Usd_HeldInterpolatorI7VtArrayIhEE
20Usd_HeldInterpolatorIiE
20Usd_HeldInterpolatorI7VtArrayIiEE
20Usd_HeldInterpolatorIjE
20Usd_HeldInterpolatorI7VtArrayIjEE
20Usd_HeldInterpolatorIxE
20Usd_HeldInterpolatorI7VtArrayIxEE
20Usd_HeldInterpolatorIyE
20Usd_HeldInterpolatorI7VtArrayIyEE
22Usd_LinearInterpolatorIN8pxr_half4halfEE
20Usd_HeldInterpolatorIN8pxr_half4halfEE
22Usd_LinearInterpolatorI7VtArrayIN8pxr_half4halfEEE
20Usd_HeldInterpolatorI7VtArrayIN8pxr_half4halfEEE
22Usd_LinearInterpolatorIfE
20Usd_HeldInterpolatorIfE
22Usd_LinearInterpolatorI7VtArrayIfEE
20Usd_HeldInterpolatorI7VtArrayIfEE
22Usd_LinearInterpolatorIdE
20Usd_HeldInterpolatorIdE
22Usd_LinearInterpolatorI7VtArrayIdEE
20Usd_HeldInterpolatorI7VtArrayIdEE
20Usd_HeldInterpolatorINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
20Usd_HeldInterpolatorI7VtArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
20Usd_HeldInterpolatorI7TfTokenE
20Usd_HeldInterpolatorI7VtArrayI7TfTokenEE
20Usd_HeldInterpolatorI12SdfAssetPathE
20Usd_HeldInterpolatorI7VtArrayI12SdfAssetPathEE
22Usd_LinearInterpolatorI10GfMatrix2dE
20Usd_HeldInterpolatorI10GfMatrix2dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix2dEE
20Usd_HeldInterpolatorI7VtArrayI10GfMatrix2dEE
22Usd_LinearInterpolatorI10GfMatrix3dE
20Usd_HeldInterpolatorI10GfMatrix3dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix3dEE
20Usd_HeldInterpolatorI7VtArrayI10GfMatrix3dEE
22Usd_LinearInterpolatorI10GfMatrix4dE
20Usd_HeldInterpolatorI10GfMatrix4dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix4dEE
20Usd_HeldInterpolatorI7VtArrayI10GfMatrix4dEE
22Usd_LinearInterpolatorI7GfQuatdE
20Usd_HeldInterpolatorI7GfQuatdE
22Usd_LinearInterpolatorI7VtArrayI7GfQuatdEE
20Usd_HeldInterpolatorI7VtArrayI7GfQuatdEE
22Usd_LinearInterpolatorI7GfQuatfE
20Usd_HeldInterpolatorI7GfQuatfE
22Usd_LinearInterpolatorI7VtArrayI7GfQuatfEE
20Usd_HeldInterpolatorI7VtArrayI7GfQuatfEE
22Usd_LinearInterpolatorI7GfQuathE
20Usd_HeldInterpolatorI7GfQuathE
22Usd_LinearInterpolatorI7VtArrayI7GfQuathEE
20Usd_HeldInterpolatorI7VtArrayI7GfQuathEE
22Usd_LinearInterpolatorI7GfVec2dE
20Usd_HeldInterpolatorI7GfVec2dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2dEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec2dEE
22Usd_LinearInterpolatorI7GfVec2fE
20Usd_HeldInterpolatorI7GfVec2fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2fEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec2fEE
22Usd_LinearInterpolatorI7GfVec2hE
20Usd_HeldInterpolatorI7GfVec2hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2hEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec2hEE
20Usd_HeldInterpolatorI7GfVec2iE
20Usd_HeldInterpolatorI7VtArrayI7GfVec2iEE
22Usd_LinearInterpolatorI7GfVec3dE
20Usd_HeldInterpolatorI7GfVec3dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3dEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3dEE
22Usd_LinearInterpolatorI7GfVec3fE
20Usd_HeldInterpolatorI7GfVec3fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3fEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3fEE
22Usd_LinearInterpolatorI7GfVec3hE
20Usd_HeldInterpolatorI7GfVec3hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3hEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3hEE
20Usd_HeldInterpolatorI7GfVec3iE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3iEE
22Usd_LinearInterpolatorI7GfVec4dE
20Usd_HeldInterpolatorI7GfVec4dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4dEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec4dEE
22Usd_LinearInterpolatorI7GfVec4fE
20Usd_HeldInterpolatorI7GfVec4fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4fEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec4fEE
22Usd_LinearInterpolatorI7GfVec4hE
20Usd_HeldInterpolatorI7GfVec4hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4hEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec4hEE
20Usd_HeldInterpolatorI7GfVec4iE
20Usd_HeldInterpolatorI7VtArrayI7GfVec4iEE
16UsdAPISchemaBase
9TfWeakPtrI8UsdStageE
15TfWeakPtrFacadeI9TfWeakPtr8UsdStageE
13Usd_CrateData
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIP7SdfPathEEEENS1_23quick_sort_pretest_bodyIS8_ZN17Usd_CrateDataImpl4SaveERKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEUlRKS6_SL_E_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS1_16quick_sort_rangeINSt3__111__wrap_iterIP7SdfPathEEZN17Usd_CrateDataImpl4SaveERKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEUlRKS6_SJ_E_EENS1_15quick_sort_bodyIS8_SK_EEKNS_16auto_partitionerEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIPN13Usd_CrateFile9CrateFile4SpecEEEEENS1_23quick_sort_pretest_bodyISA_ZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE_clEvEUlRKS8_SG_E_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS1_16quick_sort_rangeINSt3__111__wrap_iterIPN13Usd_CrateFile9CrateFile4SpecEEEZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE_clEvEUlRKS8_SE_E_EENS1_15quick_sort_bodyISA_SF_EEKNS_16auto_partitionerEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE0_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE1_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE1_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE2_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE2_JEEEEE
N13Usd_CrateFile8ValueRepE
N7VtValue14_LocalTypeInfoIN13Usd_CrateFile8ValueRepEEE
N7VtValue13_TypeInfoImplIN13Usd_CrateFile8ValueRepES2_NS_14_LocalTypeInfoIS2_EEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE3_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE3_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEENS_8internal17parallel_for_bodyIZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE3_clEvEUlmE_mEEKNS_16auto_partitionerEEE
N13Usd_CrateFile11TimeSamplesE
N7VtValue15_RemoteTypeInfoIN13Usd_CrateFile11TimeSamplesEEE
N7VtValue13_TypeInfoImplIN13Usd_CrateFile11TimeSamplesEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperINSt3__16vectorIN17Usd_CrateDataImpl9_SpecTypeENS1_9allocatorIS4_EEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperIN5boost9container8flat_mapI7SdfPathN17Usd_CrateDataImpl13_FlatSpecDataENS4_12FastLessThanENSt3__19allocatorINS8_4pairIS4_S6_EEEEEEEE
20Work_DetachedInvokerI23Work_AsyncDestroyHelperINSt3__110unique_ptrINS1_13unordered_mapI7SdfPathN17Usd_CrateDataImpl12_MapSpecDataENS4_4HashENS1_8equal_toIS4_EENS1_9allocatorINS1_4pairIKS4_S6_EEEEEENS1_14default_deleteISF_EEEEEE
12VtDictionary
19VtStreamOutIterator
G7VtArrayI10GfMatrix4fE
7VtArrayI10GfMatrix3fE
7VtArrayI10GfMatrix2fE
7VtArrayI9GfRange3fE
7VtArrayI9GfRange3dE
7VtArrayI9GfRange2fE
7VtArrayI9GfRange2dE
7VtArrayI9GfRange1fE
7VtArrayI9GfRange1dE
7VtArrayI10GfIntervalE
7VtArrayI8GfRect2iE
7VtArrayI12GfQuaternionE
7VtArrayIcE
7VtArrayIsE
7GfVec2d
N7VtValue15_RemoteTypeInfoI10GfMatrix4fEE
N7VtValue13_TypeInfoImplI10GfMatrix4fN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
NSt3__120__shared_ptr_pointerIP7VtArrayIN8pxr_half4halfEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteI7VtArrayIN8pxr_half4halfEEEE
PK7VtValue
NSt3__120__shared_ptr_pointerIP7VtArrayIfENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteI7VtArrayIfEEE
NSt3__120__shared_ptr_pointerIP7VtArrayIdENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteI7VtArrayIdEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec2hENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec2hEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec2fENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec2fEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec2dENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec2dEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec3hENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec3hEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec3fENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec3fEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec3dENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec3dEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec4hENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec4hEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec4fENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec4fEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfVec4dENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfVec4dEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI10GfMatrix4fENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI10GfMatrix4fEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI10GfMatrix4dENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI10GfMatrix4dEEE
N7VtValue15_RemoteTypeInfoI7VtArrayI10GfMatrix4fEEE
N7VtValue13_TypeInfoImplI7VtArrayI10GfMatrix4fEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI10GfMatrix4fE9_StreamerE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfQuathENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfQuathEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfQuatfENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfQuatfEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI7GfQuatdENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI7GfQuatdEEE
NSt3__120__shared_ptr_pointerIP7VtArrayIjENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteI7VtArrayIjEEE
NSt3__120__shared_ptr_pointerIP7VtArrayItENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteI7VtArrayItEEE
NSt3__120__shared_ptr_pointerIP7VtArrayIiENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteI7VtArrayIiEEE
NSt3__120__shared_ptr_pointerIP7VtArrayIhENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteI7VtArrayIhEEE
NSt3__120__shared_ptr_pointerIP7VtArrayI9GfRange1fENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI9GfRange1fEEE
9GfRange1d
N7VtValue15_RemoteTypeInfoI7VtArrayI9GfRange1dEEE
N7VtValue13_TypeInfoImplI7VtArrayI9GfRange1dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI9GfRange1dE9_StreamerE
NSt3__120__shared_ptr_pointerIP7VtArrayI9GfRange1dENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI9GfRange1dEEE
9GfRange1f
N7VtValue15_RemoteTypeInfoI7VtArrayI9GfRange1fEEE
N7VtValue13_TypeInfoImplI7VtArrayI9GfRange1fEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI9GfRange1fE9_StreamerE
NSt3__120__shared_ptr_pointerIP7VtArrayI9GfRange2fENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI9GfRange2fEEE
N7VtValue15_RemoteTypeInfoI7VtArrayI9GfRange2dEEE
N7VtValue13_TypeInfoImplI7VtArrayI9GfRange2dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI9GfRange2dE9_StreamerE
NSt3__120__shared_ptr_pointerIP7VtArrayI9GfRange2dENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI9GfRange2dEEE
N7VtValue15_RemoteTypeInfoI7VtArrayI9GfRange2fEEE
N7VtValue13_TypeInfoImplI7VtArrayI9GfRange2fEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI9GfRange2fE9_StreamerE
NSt3__120__shared_ptr_pointerIP7VtArrayI9GfRange3fENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI9GfRange3fEEE
N7VtValue15_RemoteTypeInfoI7VtArrayI9GfRange3dEEE
N7VtValue13_TypeInfoImplI7VtArrayI9GfRange3dEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI9GfRange3dE9_StreamerE
NSt3__120__shared_ptr_pointerIP7VtArrayI9GfRange3dENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteI7VtArrayI9GfRange3dEEE
N7VtValue15_RemoteTypeInfoI7VtArrayI9GfRange3fEEE
N7VtValue13_TypeInfoImplI7VtArrayI9GfRange3fEN5boost13intrusive_ptrINS_8_CountedIS3_EEEENS_15_RemoteTypeInfoIS3_EEEE
N7VtArrayI9GfRange3fE9_StreamerE
C7VtValue
15Vt_CastRegistry
N5boost7numeric16bad_numeric_castE
N5boost7numeric17negative_overflowE
N5boost7numeric17positive_overflowE
N7VtValue14_LocalTypeInfoIcEE
N7VtValue13_TypeInfoImplIccNS_14_LocalTypeInfoIcEEEE
N7VtValue9_TypeInfoE
N7VtValue14_LocalTypeInfoIbEE
N7VtValue13_TypeInfoImplIbbNS_14_LocalTypeInfoIbEEEE
N7VtValue14_LocalTypeInfoIaEE
N7VtValue13_TypeInfoImplIaaNS_14_LocalTypeInfoIaEEEE
N7VtValue14_LocalTypeInfoIhEE
N7VtValue13_TypeInfoImplIhhNS_14_LocalTypeInfoIhEEEE
N7VtValue14_LocalTypeInfoIsEE
N7VtValue13_TypeInfoImplIssNS_14_LocalTypeInfoIsEEEE
N7VtValue14_LocalTypeInfoItEE
N7VtValue13_TypeInfoImplIttNS_14_LocalTypeInfoItEEEE
N7VtValue14_LocalTypeInfoIiEE
N7VtValue13_TypeInfoImplIiiNS_14_LocalTypeInfoIiEEEE
N7VtValue14_LocalTypeInfoIjEE
N7VtValue13_TypeInfoImplIjjNS_14_LocalTypeInfoIjEEEE
N7VtValue14_LocalTypeInfoIlEE
N7VtValue13_TypeInfoImplIllNS_14_LocalTypeInfoIlEEEE
N7VtValue14_LocalTypeInfoImEE
N7VtValue13_TypeInfoImplImmNS_14_LocalTypeInfoImEEEE
N7VtValue14_LocalTypeInfoIxEE
N7VtValue13_TypeInfoImplIxxNS_14_LocalTypeInfoIxEEEE
N7VtValue14_LocalTypeInfoIyEE
N7VtValue13_TypeInfoImplIyyNS_14_LocalTypeInfoIyEEEE
N7VtValue15_RemoteTypeInfoIN8pxr_half4halfEEE
N7VtValue13_TypeInfoImplIN8pxr_half4halfEN5boost13intrusive_ptrINS_8_CountedIS2_EEEENS_15_RemoteTypeInfoIS2_EEEE
N7VtValue14_LocalTypeInfoIfEE
N7VtValue13_TypeInfoImplIffNS_14_LocalTypeInfoIfEEEE
N7VtValue14_LocalTypeInfoIdEE
N7VtValue13_TypeInfoImplIddNS_14_LocalTypeInfoIdEEEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N7VtValue15_RemoteTypeInfoINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
N7VtValue13_TypeInfoImplINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN5boost13intrusive_ptrINS_8_CountedIS7_EEEENS_15_RemoteTypeInfoIS7_EEEE
N7VtValue15_RemoteTypeInfoI7TfTokenEE
N7VtValue13_TypeInfoImplI7TfTokenN5boost13intrusive_ptrINS_8_CountedIS1_EEEENS_15_RemoteTypeInfoIS1_EEEE
NSt3__120__shared_ptr_pointerIP7GfVec4iNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec4iEE
NSt3__120__shared_ptr_pointerIP7GfVec3iNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec3iEE
NSt3__120__shared_ptr_pointerIP7GfVec2iNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec2iEE
NSt3__120__shared_ptr_pointerIP7GfVec4hNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec4hEE
NSt3__120__shared_ptr_pointerIP7GfVec3hNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec3hEE
NSt3__120__shared_ptr_pointerIP7GfVec2hNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec2hEE
NSt3__120__shared_ptr_pointerIP7GfVec4fNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec4fEE
NSt3__120__shared_ptr_pointerIP7GfVec3fNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec3fEE
NSt3__120__shared_ptr_pointerIP7GfVec2fNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec2fEE
NSt3__120__shared_ptr_pointerIP7GfVec4dNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec4dEE
NSt3__120__shared_ptr_pointerIP7GfVec3dNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec3dEE
NSt3__120__shared_ptr_pointerIP7GfVec2dNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfVec2dEE
10GfMatrix4f
NSt3__120__shared_ptr_pointerIP10GfMatrix4fNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10GfMatrix4fEE
10GfMatrix3f
NSt3__120__shared_ptr_pointerIP10GfMatrix3fNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10GfMatrix3fEE
10GfMatrix2f
NSt3__120__shared_ptr_pointerIP10GfMatrix2fNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10GfMatrix2fEE
NSt3__120__shared_ptr_pointerIP10GfMatrix4dNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10GfMatrix4dEE
NSt3__120__shared_ptr_pointerIP10GfMatrix3dNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10GfMatrix3dEE
NSt3__120__shared_ptr_pointerIP10GfMatrix2dNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10GfMatrix2dEE
NSt3__120__shared_ptr_pointerIP7GfQuathNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfQuathEE
NSt3__120__shared_ptr_pointerIP7GfQuatfNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfQuatfEE
NSt3__120__shared_ptr_pointerIP7GfQuatdNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI7GfQuatdEE
12GfQuaternion
NSt3__120__shared_ptr_pointerIP12GfQuaternionNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI12GfQuaternionEE
N3tbb10strict_ppl16concurrent_queueIPNS_10interface710task_arenaENS_23cache_aligned_allocatorIS4_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IPNS_10interface710task_arenaEEE
N3tbb10strict_ppl8internal31concurrent_queue_page_allocatorE
N3tbb10interface78internal18delegated_functionIKNSt3__16__bindIM14WorkDispatcherFvvEJPS5_EEEEE
bundleForClass:
resourcePath
cStringUsingEncoding:
mutableCopy
appendString:
alloc
initWithFormat:arguments:
UTF8String
setNumberStyle:
numberWithInteger:
stringFromNumber:
lastPathComponent
init
initWithURL:vertexDescriptor:bufferAllocator:preserveTopology:error:
class
childObjectsOfClass:
countByEnumeratingWithState:objects:count:
name
addObject:
path
vertexDescriptor
attributes
isKindOfClass:
format
isEqualToString:
layouts
bufferIndex
objectAtIndexedSubscript:
stride
vertexBuffers
length
submeshes
material
count
URLValue
objectForKey:
initWithURL:name:
imageFromTexture
setObject:forKey:
pathComponents
stringByDeletingPathExtension
hasPrefix:
stringByAppendingString:
stringByAppendingPathComponent:
dataWithContentsOfFile:
initWithData:encoding:
rangeOfString:options:range:
characterAtIndex:
appendFormat:
objectAtIndex:
stringWithFormat:
copy
rangeOfString:
stringByReplacingCharactersInRange:withString:
setString:
pathExtension
lowercaseString
fileURLWithPath:
containsObject:
replaceOccurrencesOfString:withString:options:range:
replaceCharactersInRange:withString:
keyEnumerator
nextObject
isEqualTo:
dataUsingEncoding:
writeToURL:atomically:
performSelector:withObject:withObject:
stringWithCString:encoding:
stringWithUTF8String:
defaultManager
isDeletableFileAtPath:
removeItemAtPath:error:
localizedDescription
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
