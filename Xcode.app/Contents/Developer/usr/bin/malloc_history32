NSAutoreleasePool
alloc
init
VMUOptionParser
autorelease
Displays/aggregates allocation histories in a process
setPurposeDescription:
<pid | partial-process-name> [options] <mode> [<address> ...]
setSyntaxDescription:
'mode' should be one of {-callTree, -allBySize, -allByCount, -allEvents, or one or more addresses}
setDiscussion:
setSingleHyphenLongNames:
v4@?0
allBySize
[mode]
allByCount
allEvents
callTree
debug
highWaterMark
showContent
(-calltree only)
invert
ignoreThreads
collapseRecursion
chargeSystemLibraries
consolidateAllBySymbol
consolidateSystemFramesBySymbol
forkCorpse
generate a corpse fork from process and run malloc_history on it
getCorpseFromParent
get_corpse
showTiming
DVT_VMUDebugTimer
initialization
startWithMessage:
hasPrefix:
UTF8String
bad address %@ specified
v12@?0@"NSString"4^@8
parseArgumentsWithBlock:
no process id or name specified
usage:
specify only one mode (-callTree, -allBySize, -allByCount, -allEvents, or one or more addresses)
cannot use -showContent with -highWaterMark, since the malloc heap has probably changed since high water mark
do not pass specific addresses with -allEvents
cannot use call tree options when not passing -callTree
no mode or address specified
DVT_VMUStackLogReader
initWithTask:
The target process has no stack logs.  Run it with the MallocStackLogging environment variable set to get stack logs.
Note: Process %d is marked CS_RESTRICT.
For security, malloc_history will not show memory contents of restricted processes.
usesLiteMode
Can't show high water mark when target process is run in lite mode of malloc stack logging.
create symbolicator for task
malloc_history was unable to acquire a symbolicator for the target process.
create process description
DVT_VMUProcessDescription
initWithPid:orTask:getBinariesList:
description
binaryImagesDescription
release
finding high water mark
NSString
__main_block_invoke.139
stringWithUTF8String:
<Unknown Function>
/Library/Caches/com.apple.xbs/Sources/SamplingTools/SamplingTools-61750/malloc_history/malloc_history_main.m
<Unknown File>
NSAssertionHandler
currentHandler
expected no addresses to be passed with -allEvents
handleFailureInFunction:file:lineNumber:description:
v12@?0i4I8
NSByteCountFormatter
setCountStyle:
stringFromByteCount:
NSNumberFormatter
setNumberStyle:
NSNumber
numberWithLongLong:
stringFromNumber:
High water mark of allocated heap memory: %*s  at malloc stack log record index %*s
     Current total allocated heap memory: %*s  at malloc stack log record index %*s
allKeys
mutableCopy
count
objectAtIndex:
DefaultMallocZone_0x
rangeOfString:
removeObjectAtIndex:
insertObject:atIndex:
countByEnumeratingWithState:objects:count:
isLiteZone:
objectForKey:
%d blocks in zone %s
rangeAtIndex:
getFramesForAddress:size:inLiteZone:stackFramesBuffer:
%i: %#qx %s -- %ld stack frames
 -- NO STACK !!!
 -- SHORT STACK
  %s
  0x%qx 
%d total blocks
DVT_VMUObjectIdentifier
initWithTask:symbolicator:
step 1 -- build map table with live malloc block addresses as keys
i20@?0Q4^{malloc_introspection_t=^?^?^?^?^?^?^?^?^?^?^?^?^?^?}12@"NSString"16
skipping step 2 of enumerating stack log records to record unique backtrace IDs, since for MallocStackLogging=lite that is done in the previous step of zone enumeration
step 2 -- enumerate stack log records to record unique backtrace IDs for objects of interest
skipping step 1 of building map table with live malloc block addresses as keys since we're looking for high water mark
step 2 -- enumerate stack log records to record unique backtrace IDs for objects that were live at high water mark
NSException
name
HighWaterMarkException
isEqualToString:
__printCallTree_block_invoke
Unexpected exception
step 3 -- from uniqueBacktraceToObjectsMap, create uniqueBacktraceToObjectsMap
DVT_VMURangeArray
addRange:
releasing liveObjectToUniqueBacktraceMap
step 4 -- build call tree by iterating the uniqueBacktraceToObjectsMap
DVT_VMUCallTreeRoot
initWithSymbolicator:sampler:options:
DVT_VMUBacktrace
NSCharacterSet
newlineCharacterSet
%qu unique stacks
labelForMallocBlock:
componentsSeparatedByCharactersInSet:
%@' PLUS %lu MORE LINES
stringWithFormat:
classInfoForObjectWithRange:
malloc block
CONTENT:  %@  %@
CONTENT:  %@  size %qu
addBacktrace:count:numBytes:
sort
addChildWithName:address:count:numBytes:toNode:
allBacktracesHaveBeenAdded
releasing uniqueBacktraceToObjectsMap
releasing objectIdentifier
step 5 -- print call tree
invertedNode
retain
stringFromCallTreeIndentIfNoBranches:
releasing call tree
releasing autorelease pool
stop
liteModeStackIDforAddress:size:
stack log enumeration callbacks
exceptionWithName:reason:userInfo:
enumerateRecordsWithEnumerator:context:
void printAllBySizeOrCount(task_t, CSSymbolicatorRef, HighWaterMarkInfo *, BOOL, NSHashTable *, DVT_VMUStackLogReader *)
%d calls for %qd bytes: 
error acquiring stack with identifier: %qd (err == %u, count == %u)
malformed stack; count < 2
thread_%qx | 
0x%qx 
void printAddressHistory(task_t, CSSymbolicatorRef, HighWaterMarkInfo *, mach_vm_address_t, DVT_VMUStackLogReader *)
no stack logs found for 0x%qx
VM_ALLOC
ALLOC
VM_DEALLOC
FREE
%s 0x%qx-0x%qx [size=%qu]: 
OTHER
%s  0x%qx: 
%s  0x%qx-0x%qx [size=%qu]: 
malloc_history Report Version:  2.0
Call graph:
Total number in stack -- this line is here to get the correct format for importing with the Sampler instrument in Instruments.app
----
initWithFormat:arguments:
NSDictionary
dictionaryWithObjects:forKeys:count:
NSError
VMUOptionParserDomain
errorWithDomain:code:userInfo:
NSMutableArray
NSMutableDictionary
NSMutableString
initWithString:
dealloc
/Library/Caches/com.apple.xbs/Sources/SamplingTools/SamplingTools-61750/VMUOptionParser.m
Invalid parameter not satisfying: %@
block && longName || shortName
handleFailureInMethod:object:file:lineNumber:description:
length
characterAtIndex:
!longName || ([longName length] && [longName characterAtIndex:0] != '-')
Option's long-name '%@' is invalid or already in use.
setObject:forKey:
Option's short-name '%c' is invalid or already in use.
appendString:
stringWithString:
appendFormat:
%s%@
%c%c%@%c
[@@@spacing@@@]%@
addObject:
%s flag supplied with no argument
unrecognized option '%s'
removeAllObjects
userInfo
code
[invalid usage]: %s
%s: %s
Usage: %s %s
[@@@spacing@@@]
stringByReplacingOccurrencesOfString:withString:
@8@0:4
v8@0:4
registerOptionWithLongName:shortName:hasArgument:argumentName:optionDescription:handler:
v32@0:4@8c12i16@20@24@?28
@12@0:4@?8
v12@0:4@8
purposeDescription
syntaxDescription
discussion
singleHyphenLongNames
c8@0:4
v12@0:4c8
parametersShowAsAssignment
setParametersShowAsAssignment:
NSObject
_purposeDescription
@"NSString"
_syntaxDescription
_discussionDescription
_optionDescriptions
@"NSMutableArray"
_optionBlockByString
@"NSMutableDictionary"
_longOptStructs
^{__CFArray=}
_shortOpts
@"NSMutableString"
_spacing
_singleHyphenLongNames
_parametersShowAsAssignment
T@"NSString",C,N,V_purposeDescription
T@"NSString",C,N,V_syntaxDescription
T@"NSString",C,N,V_discussionDescription
Tc,N,V_singleHyphenLongNames
Tc,N,V_parametersShowAsAssignment
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
string
NSProcessInfo
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
Command args:    %@
componentsJoinedByString:
Target process:  %s [%u]
Parent process:  %s [%u]
Parent process:  unable to determine
DYLD_ROOT_PATH
DT_NO_RESPAWN
/usr/bin/%s
%s[%d]: [fatal] execve: %s could not be launched: %s (%d)
SAMPLING_TOOLS_TARGET_PID
class
isKindOfClass:
intValue
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: unable to get permission to examine process.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: Unable to deallocate target task port: %d (%s)
/usr/lib/system/libsystem_kernel.dylib
task_generate_corpse
%s[%d]: [fatal] Fail to generate corpse from the task, exiting
is64Bit
valueForEnvVar:
SIMULATOR_UDID
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
__check_mach_ports_lookup
numberWithInt:
stringValue
__check_parent_tool_v1
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal]  child process status could not be determined; exit code unavailable.
v16@?0I4I8I12
v8@?0I4
i12@?0r^v4r^v8
bytes
subdataWithRange:
NSJSONSerialization
JSONObjectWithData:options:error:
%s[%d]: [fatal] unable to parse json header: %s
localizedDescription
%s[%d]: [fatal] invalid IPS header
%s[%d]: [fatal] IPS length is invalid
bug_type
%s[%d]: [fatal] invalid IPS bug type
: terminated; resuming target task
: interrupted; resuming target task
system.privilege.taskport.debug
%s[%d]: [fatal] unable to ask for permission to examine process; run tool using sudo, or without redirecting stdin and stderr.
An admin user name and password is required to enter Developer Mode.
Admin user name (%s): 
Admin user name: 
Password:
username
password
shared
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
%s/usr/bin/%s
%s%s
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_msg_send' failed: %s (%d)
(BacktraceUniquing) allocate_pages(): virtual memory exhausted! (XRBacktraceRepository)
(BacktraceUniquing) expandUniquingTable(): mach_vm_deallocate failed. [%p]
(BacktraceUniquing) expandUniquingTable(): invalid state reached; cannot end expansion
very sad - bad hashing function (reinsert_node)
 a `
//+`
@(#)PROGRAM:malloc_history  PROJECT:SamplingTools-61750
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.SamplingTools</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>SecTaskAccess</key>
<array>
<string>allowed</string>
<string>debug</string>
</array>
</dict>
</plist>
