usage: svnbench <subcommand> [options] [args]
Subversion benchmarking tool.
Type 'svnbench help <subcommand>' for help on a specific subcommand.
Type 'svnbench --version' to see the program version and RA modules
  or 'svnbench --version --quiet' to see just the version number.
Most subcommands take file and/or directory arguments, recursing
on the directories.  If no arguments are supplied to such a
command, it recurses on the current directory (inclusive) by default.
Available subcommands:
Subversion is a tool for version control.
For additional information, see http://subversion.apache.org/
The following repository access (RA) modules are available:
svnbench
    
Skipped missing target: '%s'
Skipped target: '%s' -- copy-source is missing
Skipped '%s'
Skipped '%s' -- An obstructing working copy was found
Skipped '%s' -- Has no versioned parent
Skipped '%s' -- Access denied
Skipped '%s' -- Node remains in conflict
D    %s
B    %s
Removed external '%s': %s
Removed external '%s'
Left local modifications as '%s'
R    %s
C    %s
A    %s
%s %s
Restored '%s'
Reverted '%s'
Failed to revert '%s' -- try updating instead.
Resolved conflicted state of '%s'
A  (bin)  %s
A         %s
D         %s
%s      %s
>         applied hunk ## -%lu,%lu +%lu,%lu ## with offset %s
%llu and fuzz %lu (%s)
>         applied hunk @@ -%lu,%lu +%lu,%lu @@ with offset %s
%llu and fuzz %lu
%llu (%s)
%llu
>         applied hunk ## -%lu,%lu +%lu,%lu ## with fuzz %lu (%s)
>         applied hunk @@ -%lu,%lu +%lu,%lu @@ with fuzz %lu
>         rejected hunk ## -%lu,%lu +%lu,%lu ## (%s)
>         rejected hunk @@ -%lu,%lu +%lu,%lu @@
>         hunk ## -%lu,%lu +%lu,%lu ## already applied (%s)
>         hunk @@ -%lu,%lu +%lu,%lu @@ already applied
Fetching external item into '%s':
svn: 
Error handling externals definition for '%s':
Updating '%s':
Exported external at revision %ld.
Exported revision %ld.
Checked out external at revision %ld.
Checked out revision %ld.
Updated external to revision %ld.
Updated to revision %ld.
External at revision %ld.
At revision %ld.
External export complete.
Export complete.
External checkout complete.
Checkout complete.
External update complete.
Update complete.
Performing status on external item at '%s':
Status against revision: %6ld
Sending copy of       %s
Sending        %s
Adding copy of (bin)  %s
Adding  (bin)  %s
Adding copy of        %s
Adding         %s
Deleting copy of      %s
Deleting       %s
Replacing copy of     %s
Replacing      %s
Transmitting file data 
'%s' locked by user '%s'.
'%s' unlocked.
A [%s] %s
D [%s] %s
--- Merging differences between repository URLs into '%s':
--- Merging r%ld into '%s':
--- Reverse-merging r%ld into '%s':
--- Merging r%ld through r%ld into '%s':
--- Reverse-merging r%ld through r%ld into '%s':
--- Recording mergeinfo for merge between repository URLs into '%s':
--- Recording mergeinfo for merge of r%ld into '%s':
--- Recording mergeinfo for reverse merge of r%ld into '%s':
--- Recording mergeinfo for merge of r%ld through r%ld into '%s':
--- Recording mergeinfo for reverse merge of r%ld through r%ld into '%s':
--- Eliding mergeinfo from '%s':
--- Merging differences between foreign repository URLs into '%s':
--- Merging (from foreign repository) r%ld into '%s':
--- Reverse-merging (from foreign repository) r%ld into '%s':
--- Merging (from foreign repository) r%ld through r%ld into '%s':
--- Reverse-merging (from foreign repository) r%ld through r%ld into '%s':
   C %s
   A %s
   U %s
   D %s
property '%s' set on '%s'
property '%s' deleted from '%s'.
Attempting to delete nonexistent property '%s' on '%s'
property '%s' set on repository revision %ld
property '%s' deleted from repository revision %ld
Upgraded '%s'
Redirecting to URL '%s':
'%s' is not under version control
Could not perform blame on all targets because some targets don't exist
%15s revisions
%15s deltas
%15s bytes in deltas
%15s directories
%15s files
%15s bytes in files
%15s properties
%15s bytes in properties
svn:
URL '%s' doesn't exist
svnbench: 
Number of status notifications received: %d
Could not display info for all targets because some targets don't exist
URL '%s' non-existent in revision %ld
'search-and' option is not supported
%15s directories
%15s files
%15s locks
Could not list all targets because some targets don't exist
-c and -r are mutually exclusive
Only relative paths can be specified after a URL for 'svnbench log', but '%s' is not a relative path
svn:author
svn:date
svn:log
%15s revisions, %15s merged in %s merges
%15s msg lines, %15s in merged revisions
%15s changes,   %15s in merged revisions
%15s revisions
%15s msg lines
%15s changes
help
show help on a subcommand
quiet
print nothing, or only summary information
recursive
descend recursively, same as --depth=infinity
non-recursive
obsolete; try --depth=files or --depth=immediates
change
the change made by revision ARG (like -r ARG-1:ARG)
                             If ARG is negative this is like -r ARG:ARG-1
                             If ARG is of the form ARG1-ARG2 then this is like
                             ARG1:ARG2, where ARG1 is inclusive
revision
ARG (some commands also take ARG1:ARG2 range)
                             A revision argument can be one of:
                                NUMBER       revision number
                                '{' DATE '}' revision at start of the date
                                'HEAD'       latest in repository
                                'BASE'       base rev of item's working copy
                                'COMMITTED'  last commit at or before BASE
                                'PREV'       revision just before COMMITTED
version
show program version information
verbose
print extra information
username
specify a username ARG
password
specify a password ARG
password-from-stdin
read password from stdin
targets
pass contents of file ARG as additional args
depth
limit operation by depth ARG ('empty', 'files',
                             'immediates', or 'infinity')
strict
use strict semantics
stop-on-copy
do not cross copies while traversing history
no-auth-cache
do not cache authentication tokens
trust-server-cert
deprecated; same as
                             --trust-server-cert-failures=unknown-ca
trust-server-cert-failures
with --non-interactive, accept SSL server
                             certificates with failures; ARG is comma-separated
                             list of 'unknown-ca' (Unknown Authority),
                             'cn-mismatch' (Hostname mismatch), 'expired'
                             (Expired certificate), 'not-yet-valid' (Not yet
                             valid certificate) and 'other' (all other not
                             separately classified certificate errors).
non-interactive
do no interactive prompting
config-dir
read user configuration files from directory ARG
config-option
set user configuration option in the format:
                                 FILE:SECTION:OPTION=[VALUE]
                             For example:
                                 servers:global:http-library=serf
limit
maximum number of log entries
with-all-revprops
retrieve all revision properties
with-no-revprops
retrieve no revision properties
with-revprop
set revision property ARG in new revision
                             using the name[=value] format
use-merge-history
use/display additional information from merge
                             history
search
use ARG as search pattern (glob syntax)
Describe the usage of this program or its subcommands.
usage: help [SUBCOMMAND...]
null-blame
Fetch all versions of a file in a batch.
usage: null-blame [-rM:N] TARGET[@REV]...
  With no revision range (same as -r0:REV), or with '-r M:N' where M < N,
  annotate each line that is present in revision N of the file, with
  the last revision at or before rN that changed or added the line,
  looking back no further than rM.
  With a reverse revision range '-r M:N' where M > N,
  annotate each line that is present in revision N of the file, with
  the next revision after rN that changed or deleted the line,
  looking forward no further than rM.
  If specified, REV determines in which revision the target is first
  looked up.
  Write the annotated result to standard output.
null-export
Create an unversioned copy of a tree.
usage: null-export [-r REV] URL[@PEGREV]
  Exports a clean directory tree from the repository specified by
  URL, at revision REV if it is given, otherwise at HEAD.
  If specified, PEGREV determines in which revision the target is first
  looked up.
null-list
List directory entries in the repository.
usage: null-list [TARGET[@REV]...]
  List each TARGET file and the contents of each TARGET directory as
  they exist in the repository.  If TARGET is a working copy path, the
  corresponding repository URL will be used. If specified, REV determines
  in which revision the target is first looked up.
  The default TARGET is '.', meaning the repository URL of the current
  working directory.
  With --verbose, the following fields will be fetched for each item:
    Revision number of the last commit
    Author of the last commit
    If locked, the letter 'O'.  (Use 'svn info URL' to see details)
    Size (in bytes)
    Date and time of the last commit
null-log
Fetch the log messages for a set of revision(s) and/or path(s).
usage: 1. null-log [PATH][@REV]
       2. null-log URL[@REV] [PATH...]
  1. Fetch the log messages for the URL corresponding to PATH
     (default: '.'). If specified, REV is the revision in which the
     URL is first looked up, and the default revision range is REV:1.
     If REV is not specified, the default revision range is BASE:1,
     since the URL might not exist in the HEAD revision.
  2. Fetch the log messages for the PATHs (default: '.') under URL.
     If specified, REV is the revision in which the URL is first
     looked up, and the default revision range is REV:1; otherwise,
     the URL is looked up in HEAD, and the default revision range is
     HEAD:1.
  Multiple '-c' or '-r' options may be specified (but not a
  combination of '-c' and '-r' options), and mixing of forward and
  reverse ranges is allowed.
  With -v, also print all affected paths with each log message.
  With -q, don't print the log message body itself (note that this is
  compatible with -v).
  Each log message is printed just once, even if more than one of the
  affected paths for that revision were explicitly requested.  Logs
  follow copy history by default.  Use --stop-on-copy to disable this
  behavior, which can be useful for determining branchpoints.
retrieve revision property ARG
the change made in revision ARG
null-info
Display information about a local or remote item.
usage: null-info [TARGET[@REV]...]
  Print information about each TARGET (default: '.').
  TARGET may be either a working-copy path or URL.  If specified, REV
  determines in which revision the target is first looked up.
Non-numeric limit argument given
Argument to --limit must be positive
Negative number in range (%s) not supported with -c
Non-numeric change argument (%s) given to -c
There is no change 0
Syntax error in revision argument '%s'
Error converting depth from locale to UTF-8
'%s' is not a valid depth; try 'empty', 'files', 'immediates', or 'infinity'
--version
Subcommand argument required
Unknown subcommand: '%s'
Subcommand '%s' doesn't accept option '%s'
Type 'svnbench help %s' for usage.
Multiple revision arguments encountered; can't specify -c twice, or both -c and -r
--with-all-revprops and --with-no-revprops are mutually exclusive
--with-revprop and --with-no-revprops are mutually exclusive
--trust-server-cert-failures requires --non-interactive
--password-from-stdin requires --non-interactive
config
--config-option
Try 'svnbench help %s' for more information
Please see the 'svn upgrade' command
Run 'svn cleanup' to remove locks (type 'svn help cleanup' for details)
%15.6f seconds taken
%15s bytes transferred over network
svn_subr
svn_client
svn_wc
svn_ra
svn_delta
svn: Skipping argument: 
'%s' is not a local path
