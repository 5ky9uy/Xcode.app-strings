@(#)PROGRAM:atos  PROJECT:SamplingTools-64555.99
[-p pid] [-o executable/dSYM] [-f file-of-input-addresses] [-s slide | -l loadAddress | -offset] [-arch architecture] [-printHeader] [-fullPath] [-inlineFrames] [-d delimiter] [address ...]
help
v8@?0
v24@?0@"NSString"8^@16
cannot read %@
Only one of -s, -l or -offset can be passed
%llx
slide is not a recognized number
arch
Multiple -arch options are not supported
Architecture string containing ':' unrecognized: "%s"; expected -arch name or -arch cputype:cpusubtype
Unknown architecture: "%s"
delimiter
delimiter when outputting inline frames. Defaults to newline.
printHeader
fullPath
show full path to source file
inlineFrames
display inlined functions
offset
treat all following addresses as offsets into the binary
atos cannot load symbols for process %s.
v16@?0i8I12
v24@?0{_CSTypeRef=QQ}8
Looking up symbols in process %d named:  %s
atos cannot load symbols for the file %s for architecture %s.
int main(int, char *const *)
atos_main.m
Sanity
no processes or executables specified
dSYM
/Contents/Resources/DWARF/
atos found no binaries in %s
atos failed to read %s: %s
v16@?0r^v8
v40@?0{_CSTypeRef=QQ}8{_CSTypeRef=QQ}24
0x%016llx
0x%08x
%@ (in %s)
%@ (%s:%d)
%@ + %qu
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
%s[%d]: Unable to deallocate target task port: %d (%s)
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: [fatal] Target task not available for analysis
v12@?0i8
%s[%d]: [fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
SAMPLING_TOOLS_ALL_PROCESSES
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
task from parent for pid %u
%s[%d]: [fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
%s[%d]: Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
generated corpse for pid %u
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s - examining live process instead
BOOL _respawnToolIfNecessaryWithExitStatus(pid_t, task_read_t, VMURespawnToolOptions, int *)
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DT_NO_RESPAWN_TO_OS
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
arm64
x86_64
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal] waitpid: %s
_respawnToolIfNecessaryWithExitStatus_block_invoke
sharedCode.m
WIFSIGNALED(child_status)
v12@?0I8
com.apple.SymbolicationDT
Symbolication.framework/Symbolication
com.apple.CoreSymbolicationDT
CoreSymbolication.framework/CoreSymbolication
64544
/System/Library/PrivateFrameworks/%s
%s/usr/bin/%s
v20@?0I8@?<v@?>12
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
examining %@ [%u]
[fatal] error acquiring target task port from parent.
[fatal] Target task not available for analysis
[fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
[fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
[fatal] %s, exiting
[fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
[fatal] 'mach_ports_register' failed: %s (%d)
[fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
[fatal] waitpid: %s
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.atos</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>MacOSX</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>22A271</string>
<key>DTPlatformName</key>
<string>macosx</string>
<key>DTPlatformVersion</key>
<string>13.0</string>
<key>DTSDKBuild</key>
<string>22A271</string>
<key>DTSDKName</key>
<string>macosx13.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5284a</string>
<key>LSMinimumSystemVersion</key>
<string>10.14.6</string>
</dict>
</plist>
stringWithUTF8String:
objectAtIndexedSubscript:
arguments
length
componentsSeparatedByString:
string
parentProcessPath
isEqualToString:
countByEnumeratingWithState:objects:count:
processName
fileSystemRepresentation
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
initWithTask:getBinariesList:
addObject:
setSyntaxDescription:
defaultManager
allObjects
valueForEnvVar:
initWithPid:
class
intValue
subpathsOfDirectoryAtPath:error:
rangeOfString:
isSemiCriticalProcess
containsString:
array
stringValue
localizedDescription
currentHandler
handleFailureInFunction:file:lineNumber:description:
numberWithUnsignedInt:
stringByAppendingPathComponent:
parseArguments:withBlock:
reverseObjectEnumerator
objectForInfoDictionaryKey:
bundleWithIdentifier:
lastPathComponent
processInfo
objectAtIndex:
appendFormat:
componentsJoinedByString:
stringWithFormat:
parentPid
arrayWithArray:
UTF8String
executablePath
count
usage:
shouldAnalyzeWithCorpse
stringByAppendingString:
setObject:atIndexedSubscript:
addObjectsFromArray:
pathExtension
initWithTask:
is64Bit
stringByStandardizingPath
isKindOfClass:
numberWithInt:
