NSLocalizedString
NSLocalizedStringFromTable
NSLocalizedStringFromTableInBundle
NSLocalizedStringWithDefaultValue
KitString
NXRunLocalizedAlertPanel
NSRunLocalizedAlertPanel
_NXKitString
_NXKitAlert
CFCopyLocalizedString
CFCopyLocalizedStringFromTable
CFCopyLocalizedStringFromTableInBundle
CFCopyLocalizedStringWithDefaultValue
Usage: %s [OPTION] file1.[mc] ... filen.[mc]
Options
 -j                       sets the input language to Java.
 -a                       append output to the old strings files.
 -s substring             substitute 'substring' for NSLocalizedString.
 -skipTable tablename     skip over the file for 'tablename'.
 -noPositionalParameters  turns off positional parameter support.
 -u                       allow unicode characters.
 -macRoman                read files as MacRoman not UTF-8.
 -q                       turns off multiple key/value pairs warning.
 -bigEndian               output generated with big endian byte order.
 -littleEndian            output generated with little endian byte order.
 -o dir                   place output files in 'dir'.
Please see the genstrings(1) man page for full documentation
GENSTRINGS_OUTPUT_BYTE_ORDER
littleEndian
bigEndian
FromTable
FromTableInBundle
WithDefaultValue
%s: couldn't connect to output directory %s
%s: couldn't connect to working dir %s
%s: couldn't find cwd (%s)
Bundle.localizedString
Bundle.localizedStringFromTable
Bundle.localizedStringFromTableInBundle
Bundle.localizedStringWithDefaultValue
-skipTable
%s.strings
-noPositionalParameters
-macRoman
-bigEndian
-littleEndian
%s: can only specify one endian option
MacRoman
UTF-8
Input file %s cannot be read in %s encoding
NULL
()"\,
%@%@
Warning: Key "%s" used with multiple comments %s
0000
invalid unicode sequence: \\U%s
Key "%s" used with multiple values. Value "%s" kept. Value "%s" ignored.
{ Key(%lx):%@
Commentary(%lx):%@
.strings
Localizable.strings
%li$
No comment provided by engineer.
/* %@ */
Keys: %s
Vals: %s
"%@" = "%@";
Uneven number of bytes in UTF16 data
Cannot open output file %s
Bad entry in file %s (line = %ld): %s
Argument is not a literal string.
Output file cannot be opened or created.
No output.
Key count does not match value count.
Unknown error.
invalid unicode sequence: \u%s
00000000
invalid unicode sequence: \U%s
defaultManager
currentDirectoryPath
arrayWithCapacity:
defaultCStringEncoding
stringWithCString:encoding:
retain
stringByAppendingString:
stringWithFileSystemRepresentation:length:
changeCurrentDirectoryPath:
cStringUsingEncoding:
stringWithFormat:
addObject:
removeAllObjects
alloc
init
allocWithZone:
initWithContentsOfMappedFile:
initWithData:encoding:
release
isEqualToString:
count
alphanumericCharacterSet
length
objectAtIndex:
rangeOfString:options:range:
characterAtIndex:
characterIsMember:
array
characterSetWithCharactersInString:
scannerWithString:
setScanLocation:
scanUpToCharactersFromSet:intoString:
scanLocation
isNullOrNil
substringWithRange:
matchMemberOfArray:fromPosition:whichMember:
getArgumentsForRange:
countNewlinesBeforeLocation:
rangeOfUnicodeEscapeSequenceInSearchRange:genstringsUnicodeCheck:
deleteCharactersInRange:
deleteCharacterAtIndex:
stringWithCharacters:length:
appendString:
clear
deleteOuterDoubleQuotes
appendCharacter:
autorelease
copy
initWithCapacity:
stringWithCapacity:
commentary
allKeys
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
UTF8String
string
objectForKey:
value
setObject:forKey:
setKey:
setValue:
commentaryDescription
findEntryInTable:key:value:comments:
setCommentary:
description
arrayWithObjects:
setString:
setCharactersToBeSkipped:
isAtEnd
scanString:intoString:
decimalDigitCharacterSet
scanCharactersFromSet:intoString:
scanUpToString:intoString:
data
keyEnumerator
nextObject
caseInsensitiveCompare:
appendFormat:
fileExistsAtPath:
dataWithContentsOfFile:
bytes
dataUsingEncoding:
dataWithCapacity:
appendBytes:length:
writeToFile:atomically:
initWithBytes:length:encoding:
arrayWithObject:
zone
_newSubstringWithRange:zone:
invertedSet
rangeOfCharacterFromSet:options:range:
stringWithString:
subarrayWithRange:
objectEnumerator
class
isKindOfClass:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
local
HashEntry
c16@0:8
{_NSRange=QQ}40@0:8@16Q24^q32
@24@0:8^{_NSRange=QQ}16
Q24@0:8Q16
{_NSRange=QQ}36@0:8{_NSRange=QQ}16c32
v16@0:8
v24@0:8Q16
v20@0:8S16
@48@0:8@16@24@32@40
@16@0:8
v24@0:8@16
@"NSString"
@"NSMutableDictionary"
@(#)PROGRAM:genstrings  PROJECT:genstrings-14202.1
