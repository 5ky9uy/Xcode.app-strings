@(#)PROGRAM:genstrings  PROJECT:genstrings-21005
copy
init
initWithCapacity:
stringWithCapacity:
commentary
allKeys
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
count
objectAtIndex:
appendString:
stringByReplacingUnicodeCharacterEscapeSequences:
length
rangeOfString:options:range:
string
substringWithRange:
defaultCStringEncoding
cStringUsingEncoding:
isEqualToString:
stringWithCharacters:length:
objectForKey:
value
UTF8String
isNullOrNil
setObject:forKey:
setKey:
setValue:
setAttributed:
commentaryDescription
stringWithFormat:
findEntryInTable:key:value:comments:unicode:attributed:
setCommentary:
attributed
description
_key
_value
_commentary
_attributed
T@"NSString",&,N
T@"NSMutableDictionary",&,N
T@"NSString",R,C,N
objectForKeyedSubscript:
unsignedIntegerValue
dealloc
path
encoding
localizedNameOfStringEncoding:
initWithContentsOfFile:encoding:error:
_fallbackForStringEncoding:
initWithContentsOfFile:usedEncoding:error:
initWithPath:options:
copySourceFileDetectingEncodingIfNecessary:error:
options
_path
_options
_encoding
T@"NSString",R,C,V_path
T@"NSDictionary",R,C,V_options
TQ,R,V_encoding
numberWithUnsignedInteger:
addArgument:forName:
getArgumentForName:useFallbackForNonliteral:
getArgumentForPosition:useFallbackForNonliteral:
deleteCharactersInRange:
clear
defaultManager
currentDirectoryPath
arrayWithCapacity:
processInfo
environment
boolValue
arguments
objectAtIndexedSubscript:
componentsSeparatedByString:
addObjectsFromArray:
changeCurrentDirectoryPath:
stringByAppendingPathExtension:
addObject:
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
removeAllObjects
countByEnumeratingWithState:objects:count:
dictionaryWithObjects:forKeys:count:
enumerateObjectsUsingBlock:
domain
code
firstObject
countNewlinesBeforeLocation:
initWithFormat:arguments:
initWithPattern:options:error:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
replaceOccurrencesOfString:withString:options:range:
pathExtension
initWithObjects:
addIndex:
addIndexesInRange:
stringByAppendingString:
matchMemberOfArray:fromPosition:whichMember:
getArgumentsForRange:inSwiftFile:interpolations:
containsIndex:
setString:
scannerWithString:
setCharactersToBeSkipped:
isAtEnd
scanString:intoString:
decimalDigitCharacterSet
scanCharactersFromSet:intoString:
scanUpToString:intoString:
keyEnumerator
nextObject
caseInsensitiveCompare:
appendFormat:
fileExistsAtPath:
dataWithContentsOfFile:
bytes
dataUsingEncoding:
dataWithCapacity:
appendBytes:length:
writeToFile:atomically:
setSource:
initWithKey:value:comment:
stringByDeletingPathExtension
initWithName:entries:
tables
name
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
stringByAppendingPathComponent:
fileURLWithPath:
writeToURL:error:
array
characterSetWithCharactersInString:
arrayWithObject:
zone
_newSubstringWithRange:zone:
invertedSet
rangeOfCharacterFromSet:options:range:
stringWithString:
subarrayWithRange:
objectEnumerator
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
alphanumericCharacterSet
matchesInString:options:range:
range
characterAtIndex:
characterIsMember:
dictionary
setScanLocation:
scanUpToCharactersFromSet:intoString:
scanLocation
whitespaceAndNewlineCharacterSet
processMultilineSwiftLiteral:escapingLiterals:
rangeOfString:
rangeOfString:options:
substringToIndex:
stringByReplacingOccurrencesOfString:withString:
substringFromIndex:
rangeOfUnicodeEscapeSequenceInSearchRange:genstringsUnicodeCheck:
initWithBytes:length:encoding:
Key "%@" used with multiple comments %@
0000
invalid unicode sequence: \\U%s
Key "%s" used with multiple values. Value "%s" kept. Value "%s" ignored.
{ Key(%lx):%@
Commentary(%lx):%@
encoding
<%@: %p "%@" (%@)>
NONLITERAL_
%@%lu
NONLITERAL_%@
NSLocalizedString
NSLocalizedStringFromTable
NSLocalizedStringFromTableInBundle
NSLocalizedStringWithDefaultValue
NSLocalizedAttributedString
NSLocalizedAttributedStringFromTable
NSLocalizedAttributedStringFromTableInBundle
NSLocalizedAttributedStringWithDefaultValue
KitString
NXRunLocalizedAlertPanel
NSRunLocalizedAlertPanel
_NXKitString
_NXKitAlert
Text
CFCopyLocalizedString
CFCopyLocalizedStringFromTable
CFCopyLocalizedStringFromTableInBundle
CFCopyLocalizedStringWithDefaultValue
GENSTRINGS_OUTPUT_BYTE_ORDER
littleEndian
bigEndian
RC_XBS
GENSTRINGS_BINCOMPAT
couldn't connect to output directory %@
couldn't connect to working dir %@
couldn't find cwd (%@)
Bundle.localizedString
Bundle.localizedStringFromTable
Bundle.localizedStringFromTableInBundle
Bundle.localizedStringWithDefaultValue
-skipTable
strings
-noPositionalParameters
-SwiftUI
-timersupport
-text-replacement
-macRoman
-encoding
unknown string encoding '%@'
-bigEndian
-littleEndian
can only specify one endian option
couldn't read arguments file %@
couldn't interpret arguments file %@
-stringsdata
files
path
options
missing path in arguments file, entry %llu
v32@?0@"NSDictionary"8Q16^c24
cannot append when generating stringsdata
cannot specify endianness when generating stringsdata
cannot specify more than one file when generating stringsdata
failed to read input file %@
input file %@ cannot be read in %@ encoding
cannot open output file %@
bad entry in file %@ (line = %ld): %@
%s: error: %s
%s: warning: %s
v8@?0
,\s*specifier:\s*\"(.*)\"
v32@?0@"NSString"8Q16^c24
swift
%@%@
FromTable
FromTableInBundle
WithDefaultValue
tableName
NONLITERAL_tableName
comment
value
NONLITERAL_1
NONLITERAL_0
.strings
Localizable.strings
%li$
No comment provided by engineer.
 [allows markup]
/* %@ */
Keys: %s
Vals: %s
"%@" = "%@";
Uneven number of bytes in UTF16 data
v32@?0@"NSString"8@"NSDictionary"16^c24
Usage: %s [OPTION] file1.{m,c,cpp,swift} ... filen.{m,c,cpp,swift}
Options
 -h                       shows this message and exits.
 -encoding encoding       assume input files use specified encoding.
 -SwiftUI                 enables SwiftUI Text() support.
 -a                       append output to the old strings files.
 -s substring             substitute 'substring' for NSLocalizedString.
 -skipTable tablename     skip over the file for 'tablename'.
 -noPositionalParameters  turns off positional parameter support.
 -u                       allow unicode characters.
 -macRoman                read files as MacRoman not UTF-8.
 -d                       attempt to detect encoding if read fails.
 -q                       turns off multiple key/value pairs warning.
 -bigEndian               output generated with big endian byte order.
 -littleEndian            output generated with little endian byte order.
 -o dir                   place output files in 'dir'.
Please see the genstrings(1) man page for full documentation
Argument is not a literal string.
No output.
Key count does not match value count.
Table is not a literal string.
Unknown error.
NULL
()"\,:
invalid unicode sequence: \u%s
00000000
invalid unicode sequence: \U%s
ELSHashEntry
ELSSourceFile
ELSAdditions
@56@0:8@16@24@32@40c48c52
@16@0:8
v24@0:8@16
c16@0:8
v20@0:8c16
@"NSString"
@"NSMutableDictionary"
@32@0:8@16@24
v16@0:8
Q24@0:8Q16
@28@0:8c16^@20
Q16@0:8
@"NSDictionary"
v32@0:8@16@24
@28@0:8@16c24
@28@0:8Q16c24
{_NSRange=QQ}40@0:8@16Q24^q32
@36@0:8^{_NSRange=QQ}16c24@28
{_NSRange=QQ}36@0:8{_NSRange=QQ}16c32
@20@0:8c16
@(#)PROGRAM:genstrings  PROJECT:genstrings-21005
bytes
name
appendString:
substringToIndex:
scanUpToString:intoString:
processInfo
count
characterAtIndex:
setObject:forKey:
stringWithCharacters:length:
initWithPattern:options:error:
scanUpToCharactersFromSet:intoString:
enumerateKeysAndObjectsUsingBlock:
initWithFormat:arguments:
removeAllObjects
whitespaceAndNewlineCharacterSet
objectAtIndexedSubscript:
addObject:
stringByAppendingString:
dataWithCapacity:
appendFormat:
matchesInString:options:range:
pathExtension
arrayWithObject:
deleteCharactersInRange:
rangeAtIndex:
substringFromIndex:
stringWithCapacity:
dataUsingEncoding:
appendBytes:length:
initWithContentsOfFile:usedEncoding:error:
fileURLWithPath:
range
addIndexesInRange:
setString:
scanString:intoString:
stringByTrimmingCharactersInSet:
changeCurrentDirectoryPath:
objectAtIndex:
defaultManager
zone
stringByAppendingPathExtension:
subarrayWithRange:
code
setCharactersToBeSkipped:
fileExistsAtPath:
sortedArrayUsingSelector:
substringWithRange:
addObjectsFromArray:
rangeOfCharacterFromSet:options:range:
stringByDeletingPathExtension
dataWithContentsOfFile:
firstMatchInString:options:range:
whitespaceCharacterSet
replaceOccurrencesOfString:withString:options:range:
countByEnumeratingWithState:objects:count:
enumerateObjectsUsingBlock:
stringWithFormat:
initWithBytes:length:encoding:
objectEnumerator
boolValue
nextObject
invertedSet
_newSubstringWithRange:zone:
initWithCapacity:
length
componentsSeparatedByString:
characterIsMember:
setObject:forKeyedSubscript:
arguments
scannerWithString:
initWithKey:value:comment:
writeToFile:atomically:
string
allKeys
objectForKey:
rangeOfString:
firstObject
isAtEnd
dictionary
scanCharactersFromSet:intoString:
environment
keyEnumerator
stringByReplacingOccurrencesOfString:withString:
decimalDigitCharacterSet
numberOfRanges
initWithName:entries:
characterSetWithCharactersInString:
stringWithString:
containsIndex:
writeToURL:error:
tables
setScanLocation:
localizedNameOfStringEncoding:
initWithContentsOfFile:encoding:error:
stringByAppendingPathComponent:
rangeOfString:options:
dictionaryWithObjects:forKeys:count:
unsignedIntegerValue
objectForKeyedSubscript:
propertyListWithData:options:format:error:
isEqualToString:
addIndex:
initWithObjects:
setSource:
array
defaultCStringEncoding
cStringUsingEncoding:
numberWithUnsignedInteger:
alphanumericCharacterSet
rangeOfString:options:range:
copy
UTF8String
domain
scanLocation
currentDirectoryPath
initWithContentsOfFile:options:error:
arrayWithCapacity:
init
localizedCaseInsensitiveCompare:
findEntryInTable:key:value:comments:unicode:attributed:
setKey:
value
setValue:
commentary
setCommentary:
attributed
setAttributed:
commentaryDescription
description
_key
_value
_commentary
_attributed
T@"NSString",&,N
T@"NSMutableDictionary",&,N
T@"NSString",R,C,N
dealloc
initWithPath:options:
_fallbackForStringEncoding:
copySourceFileDetectingEncodingIfNecessary:error:
path
options
encoding
_path
_options
_encoding
T@"NSString",R,C,V_path
T@"NSDictionary",R,C,V_options
TQ,R,V_encoding
addArgument:forName:
getArgumentForName:useFallbackForNonliteral:
getArgumentForPosition:useFallbackForNonliteral:
clear
caseInsensitiveCompare:
isNullOrNil
matchMemberOfArray:fromPosition:whichMember:
getArgumentsForRange:inSwiftFile:interpolations:
countNewlinesBeforeLocation:
rangeOfUnicodeEscapeSequenceInSearchRange:genstringsUnicodeCheck:
stringByReplacingUnicodeCharacterEscapeSequences:
processMultilineSwiftLiteral:escapingLiterals:
Key "%@" used with multiple comments %@
0000
invalid unicode sequence: \\U%s
Key "%s" used with multiple values. Value "%s" kept. Value "%s" ignored.
{ Key(%lx):%@
Commentary(%lx):%@
encoding
<%@: %p "%@" (%@)>
NONLITERAL_
%@%lu
NONLITERAL_%@
NSLocalizedString
NSLocalizedStringFromTable
NSLocalizedStringFromTableInBundle
NSLocalizedStringWithDefaultValue
NSLocalizedAttributedString
NSLocalizedAttributedStringFromTable
NSLocalizedAttributedStringFromTableInBundle
NSLocalizedAttributedStringWithDefaultValue
KitString
NXRunLocalizedAlertPanel
NSRunLocalizedAlertPanel
_NXKitString
_NXKitAlert
Text
CFCopyLocalizedString
CFCopyLocalizedStringFromTable
CFCopyLocalizedStringFromTableInBundle
CFCopyLocalizedStringWithDefaultValue
GENSTRINGS_OUTPUT_BYTE_ORDER
littleEndian
bigEndian
RC_XBS
GENSTRINGS_BINCOMPAT
couldn't connect to output directory %@
couldn't connect to working dir %@
couldn't find cwd (%@)
Bundle.localizedString
Bundle.localizedStringFromTable
Bundle.localizedStringFromTableInBundle
Bundle.localizedStringWithDefaultValue
-skipTable
strings
-noPositionalParameters
-SwiftUI
-timersupport
-text-replacement
-macRoman
-encoding
unknown string encoding '%@'
-bigEndian
-littleEndian
can only specify one endian option
couldn't read arguments file %@
couldn't interpret arguments file %@
-stringsdata
files
path
options
missing path in arguments file, entry %llu
v32@?0@"NSDictionary"8Q16^B24
cannot append when generating stringsdata
cannot specify endianness when generating stringsdata
cannot specify more than one file when generating stringsdata
failed to read input file %@
input file %@ cannot be read in %@ encoding
cannot open output file %@
bad entry in file %@ (line = %ld): %@
%s: error: %s
%s: warning: %s
v8@?0
,\s*specifier:\s*\"(.*)\"
v32@?0@"NSString"8Q16^B24
swift
%@%@
FromTable
FromTableInBundle
WithDefaultValue
tableName
NONLITERAL_tableName
comment
value
NONLITERAL_1
NONLITERAL_0
.strings
Localizable.strings
%li$
No comment provided by engineer.
 [allows markup]
/* %@ */
Keys: %s
Vals: %s
"%@" = "%@";
Uneven number of bytes in UTF16 data
v32@?0@"NSString"8@"NSDictionary"16^B24
Usage: %s [OPTION] file1.{m,c,cpp,swift} ... filen.{m,c,cpp,swift}
Options
 -h                       shows this message and exits.
 -encoding encoding       assume input files use specified encoding.
 -SwiftUI                 enables SwiftUI Text() support.
 -a                       append output to the old strings files.
 -s substring             substitute 'substring' for NSLocalizedString.
 -skipTable tablename     skip over the file for 'tablename'.
 -noPositionalParameters  turns off positional parameter support.
 -u                       allow unicode characters.
 -macRoman                read files as MacRoman not UTF-8.
 -d                       attempt to detect encoding if read fails.
 -q                       turns off multiple key/value pairs warning.
 -bigEndian               output generated with big endian byte order.
 -littleEndian            output generated with little endian byte order.
 -o dir                   place output files in 'dir'.
Please see the genstrings(1) man page for full documentation
Argument is not a literal string.
No output.
Key count does not match value count.
Table is not a literal string.
Unknown error.
NULL
()"\,:
invalid unicode sequence: \u%s
00000000
invalid unicode sequence: \U%s
ELSHashEntry
ELSSourceFile
ELSAdditions
@56@0:8@16@24@32@40B48B52
@16@0:8
v24@0:8@16
B16@0:8
v20@0:8B16
@"NSString"
@"NSMutableDictionary"
@32@0:8@16@24
v16@0:8
Q24@0:8Q16
@28@0:8B16^@20
Q16@0:8
@"NSDictionary"
v32@0:8@16@24
@28@0:8@16B24
@28@0:8Q16B24
{_NSRange=QQ}40@0:8@16Q24^q32
@36@0:8^{_NSRange=QQ}16B24@28
{_NSRange=QQ}36@0:8{_NSRange=QQ}16B32
@20@0:8B16
