13TexturePacker
18ShelfTexturePacker
20MaxRectTexturePacker
NSt3__120__shared_ptr_pointerIP15MaxRectsBinPackNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI15MaxRectsBinPackEE
@(#)PROGRAM:TextureAtlas  PROJECT:IDESpriteKitSupport-11523
addTexture
/Library/Caches/com.apple.xbs/Sources/IDESpriteKitSupport/IDESpriteKitSupport-11523/TextureAtlas/TextureAtlas/TexturePacker.cpp
mTextureIndex < mTextureCount
packTextures
bestFit
t.mLongestEdge <= bestFit->mHeight
mergeNodes
prev
.atlasc
KFilenameHasNoMatchingSuffix
TextureAtlas: error: %s
TextureAtlas: warning: %s
@1080
@3x~iphone
-568h@2x
-568h@2x~iphone
@2x~iphone
@2x~ipad
~iphone
~ipad
.jpg
.png
APPL
format
version
Generated texture atlas size [%d, %d].
.%ld
.pvr.gz
path
size
name
aliases
Extrude texture: %@
spriteOffset
spriteSourceSize
textureRect
textureRotated
isFullyOpaque
subimages
Writing texture atlas '%@' file.
Failed to write image to %@
plist
images
Usage: %s [-c][-p][-g][-v][-f format][-s size] input_textures_folder optional_output_folder
 -g: disable warnings during texture atlas generation.
 format = %d (default): output RGBA8888 format.
 format = %d: output compressed RGBA8888 format.
 format = %d: output compressed RGBA4444 format.
 format = %d: output compressed RGBA5551 format.
 format = %d: output compressed RGB565 format.
 size = 1 (default): %lu x %lu.
cpgvf:s:
Invalid output format specified.
Missing output format with -f flag.
Invalid maximum output size specified.
Missing maximum output size with -s flag.
input textures folder is nil.
/bin/cp
Target texture atlas exists, and no changes have been made to the source texture, exiting.
destination texture atlas bundle is not overwritable.
failed to remove texture atlas bundle '%@', error '%@'.
failed to create texture atlas bundle '%@'.
Loading texture file: '%@'.
Error loading image file '%s'
main
/Library/Caches/com.apple.xbs/Sources/IDESpriteKitSupport/IDESpriteKitSupport-11523/TextureAtlas/TextureAtlas/main.mm
texturesMatchingWithSuffix.count == textureArray.size()
cannot fit input texture into a maximum supported dimension of %lu x %lu.
Splitting '%@' into %d texture atlases due to input texture dimensions.
.plist
Writing texture atlas plist '%@' file.
cannot create plist file '%@'.
 -c: use copy textures instead of generating texture atlas.
 -p: force texture atlas to have power of two dimensions.
 -v: enable verbose output.
 -f format: set texture output format.
 -s size: set maximum output texture dimension.
 size = 2: 4096 x 4096.
1.2.8
alloc
initWithFormat:arguments:
UTF8String
init
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
getResourceValue:forKey:error:
lowercaseString
stringByDeletingPathExtension
hasSuffix:
objectForKey:
addObject:
setObject:forKey:
defaultManager
arrayWithObjects:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
array
compare:
boolValue
numberWithInt:
arrayWithCapacity:
initWithFormat:
length
stringByAppendingString:
lastPathComponent
defaultCStringEncoding
stringWithCString:encoding:
numberWithBool:
fileURLWithPath:
initWithCGImage:encodeFormat:
packToPVR:
stringByAppendingPathComponent:
stringByAppendingPathExtension:
fileExistsAtPath:
attributesOfItemAtPath:error:
dictionaryWithContentsOfFile:
count
unsignedLongLongValue
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
URLByAppendingPathComponent:
path
isDeletableFileAtPath:
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingFormat:
allKeys
isEqualToString:
absoluteString
cStringUsingEncoding:
addObjectsFromArray:
dataWithPropertyList:format:options:error:
createFileAtPath:contents:attributes:
dataWithLength:
bytes
increaseLengthBy:
mutableBytes
setLength:
dataWithData:
gzipInflate
gzipDeflate
initWithBytesNoCopy:length:freeWhenDone:
appendData:
generatePVRDataWithFormat:withWidth:withHeight:
writeToURL:atomically:
.cxx_destruct
_imageData
_textureFormat
_width
_height
GZip
PVRDocument
@16@0:8
@28@0:8^{CGImage=}16i24
@36@0:8i16Q20Q28
c24@0:8@16
v16@0:8
@"NSData"
zPLR
zPLR
zPLR
