St12length_error
St11logic_error
St9exception
St12out_of_range
@(#)PROGRAM:lldb  PROJECT:lldb-900.0.50.1
Driver
%*s%s
lldb
Usage:
%*s%s
 -%c <%s>
 -%c [<%s>]
 -%c
 [-%c <%s>]
 [-%c [<%s>]]
 [-%c]
 [[--] <PROGRAM-ARG-1> [<PROGRAM_ARG-2> ...]]
%*s-%c 
<%s>
%*s--%s 
%*sNotes:
%*sMultiple "-s" and "-o" options can be provided.  They will be processed
%*sfrom left to right in order, with the source files and commands
%*sinterleaved.  The same is true of the "-S" and "-O" options.  The before
%*sfile and after file sets can intermixed freely, the command parser will
%*ssort them out.  The order of the file specifiers ("-c", "-f", etc.) is
%*snot significant in this regard.
%*sIf you don't provide -f then the first argument will be the file to be
%*sdebugged which means that '%s -- <filename> [<ARG1> [<ARG2>]]' also
%*sworks.  But remember to end the options with "--" if any of your
%*sarguments have a "-" in them.
.lldbinit
file specified in --source (-s) option doesn't exist: '%s'
target.load-cwd-lldbinit
warn
There is a .lldbinit file in the current directory which is not being read.
To silence this warning without sourcing in the local .lldbinit,
add the following to the lldbinit file in your home directory:
    settings set target.load-cwd-lldbinit false
To allow lldb to source .lldbinit files in the current working directory,
set the value of this variable to true.  Only do so if you understand and
accept the security risk.
false
command source -s %i '%s'
invalid number of options
invalid long options
unknown or ambiguous option
file specified in --core (-c) option doesn't exist: '%s'
file specified in --file (-f) option doesn't exist: '%s'
invalid architecture in the -a or --arch option: '%s'
Could not convert process PID: "%s" into a pid.
Unrecognized language name: "%s"
unrecognized option %c
invalid option with value %i
<PATH TOO LONG>
<COULD NOT FIND PATH>
Warning: program arguments are ignored when attaching.
target create --arch=%s %s
target create %s
 --core %s
settings set -- target.run-args 
target create --core %s
process attach --name %s
 --waitfor
process attach --pid %llu
error: %s
error: %u
<lldb.driver.main-thread>
help
Prints out the usage information for the LLDB debugger.
version
Prints out the current version number of the LLDB debugger.
arch
Tells the debugger to use the specified architecture when starting and running the program.  <architecture> must be one of the architectures for which the program was compiled.
file
Tells the debugger to use the file <filename> as the program to be debugged.
core
Tells the debugger to use the fullpath to <path> as the core file.
attach-pid
Tells the debugger to attach to a process with the given pid.
attach-name
Tells the debugger to attach to a process with the given name.
wait-for
Tells the debugger to wait for a process with the given pid or name to launch before attaching.
source
Tells the debugger to read in and execute the lldb commands in the given file, after any file provided on the command line has been loaded.
one-line
Tells the debugger to execute this one-line lldb command after any file provided on the command line has been loaded.
source-before-file
Tells the debugger to read in and execute the lldb commands in the given file, before any file provided on the command line has been loaded.
one-line-before-file
Tells the debugger to execute this one-line lldb command before any file provided on the command line has been loaded.
one-line-on-crash
When in batch mode, tells the debugger to execute this one-line lldb command if the target crashes.
source-on-crash
When in batch mode, tells the debugger to source this file of lldb commands if the target crashes.
source-quietly
batch
Tells the debugger to run the commands from -s, -S, -o & -O, and then quit.  However if any run command stopped due to a signal or crash, the debugger will return to the interactive prompt at the place of the crash.
editor
Tells the debugger to open source files using the host's "external editor" mechanism.
no-lldbinit
Do not automatically parse any '.lldbinit' files.
no-use-colors
Do not use colors.
python-path
Prints out the path to the lldb.py file for this version of lldb.
script-language
Tells the debugger to use the specified scripting language for user-defined scripts, rather than the default.  Valid scripting languages that can be specified include Python, Perl, Ruby and Tcl.  Currently only the Python extensions have been implemented.
debug
Tells the debugger to print out extra information for debugging itself.
repl
Runs lldb in REPL mode with a stub process.
repl-language
Chooses the language for the REPL.
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
error: write(%i, %p, %llu) failed (errno = %i) when trying to open LLDB commands pipe
error: fdopen(%i, "r") failed (errno = %i) when trying to open LLDB commands pipe
error: can't create pipe file descriptors for LLDB commands
bitset test argument out of range
bitset set argument out of range
master file descriptor is invalid
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.lldb</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>lldb</string>
<key>CFBundleVersion</key>
<string>900.0.50.1</string>
<key>SecTaskAccess</key>
<array>
<string>allowed</string>
<string>debug</string>
</array>
</dict>
</plist>
zPLR
zPLR
