@(#)PROGRAM:heap  PROJECT:SamplingTools-64550.83
@DYLD_INSERT_LIBRARIES=
.memgraph
%s[%d]: [fatal] unable to read input graph: %s
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
../lib/libLeaksAtExit.dylib
%s[%d]: [fatal] unable to locate required library: %s
DYLD_INSERT_LIBRARIES
DYLD_INSERT_LIBRARIES=%s:%s
DYLD_INSERT_LIBRARIES=%s
%s[%d]: [fatal] --atExit must be followed by " -- <command>"
%s[%d]: [fatal] No command specified after '--atExit -- '
%s[%d]: [fatal] Unable to launch --atExit command '%s': %s
%s[%d]: [fatal] Couldn't get task port for pid %u immediately after launch
%s[%d]: Unable to deallocate target task port: %d (%s)
%s[%d]: [fatal] Couldn't get task port for pid %u after receiving STOP signal
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: [fatal] Target task not available for analysis
SAMPLING_TOOLS_ALL_PROCESSES
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
i24@?0r^v8r^v16
%s-%d-%s
DT_RESPAWN_FOR_NONNATIVE
/tmp/%s-allProcesses[%d].XXXXXX
%s[%d]: [fatal] Couldn't create output directory from template %s, exiting
%s[%d]: [fatal] Couldn't change directory to %s
stderr.txt
Couldn't create error file stderr.txt (%s)
Couldn't replace stderr file with stderr.txt (%s)
Writing output files into %s
Skipping process of wrong architecture:  %d %s
ANALYZING PROCESS %5d: %s
.txt
Couldn't open output file %s (%s)
Couldn't replace output file with %s (%s)
    CHILD ANALYSIS TOOL CRASHED with %s
    %s for %5d: %s
Exception '%s', reason: '%s'
v16@?0i8I12
v40@?0i8r*12B20I24I28^c32
Child analysis tool crashed for these processes:
Wrote output files into %s
To print all files in pid order use:  (cd %s; cat `/bin/ls -tr1 *.txt`) 
v8@?0
: terminated; resuming target task
: interrupted; resuming target task
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
%s[%d]: [fatal] Corpse generated for the process is incomplete, which can happen with processes that use a lot of memory
%s[%d]: Failed to generate corpse from the process: corpse was incomplete which can happen for processes that use a lot of memory
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s - examining live process instead
BOOL _respawnToolIfNecessaryWithExitStatus(pid_t, task_read_t, VMURespawnToolOptions, int *)
sharedCode.m
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
x86_64
i386
arm64
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
v12@?0I8
%s/usr/bin/%s
v20@?0I8@?<v@?>12
Running in DT_RESPAWN_FOR_NONNATIVE mode -- respawning only if necessary to match target process arch and/or platform.
[-sz] [--showSizes] [--noContent] [--addresses=all|<classes-pattern>] <process | memory-graph-file>
<classes-pattern> can be followed by a malloc size specification of the form
[size] or [lowerBound-upperBound], such as 'malloc[1024]' or 'CFData[16k-]'
help
sortBySize
sort output by total size of class instances, rather than by count
zones
show output per-zone instead of an aggregated summary of all zones
kindOfClass
kindOfClass-pattern
filter objects for kind of class (class or superclass matching pattern)
v24@?0@"NSString"8^@16
--kindOfClass option can only be specified once
--kindOfClass
addresses
all|classes-pattern
prints the addresses of matching objects found on the heap in ascending address order
--addresses option can only be specified once
only
--addresses
forkCorpse
generate a corpse fork from process and run heap on it
guessNonObjects
try to identify non-object malloc nodes which are referenced by fields of other objects
diffFrom
memgraph
show only the new objects since the specified memgraph
--diffFrom option can only be specified once
specified memgraph is invalid or nil
layouts
show the object layout for types matching the specified pattern
--layouts option can only be specified once
--layouts
noContent
do not show object content in --addresses mode
readonlyContent
in --addresses mode, only show content backed by readonly memory
showSizes
show distribution of each malloc size for each object, instead of summing and averaging
sumObjectFields
accumulate those fields into the entry for that object
quiet
suppress the process description header
rawNames
show raw class names instead of display names
showInternalFragmentation
print class layouts that have wasted space in allocated instances due to alignment
getCorpseFromParent
noScanOverlay
DT_NO_SCAN_OVERLAY
showTiming
initialization
metadata
print only the contents of metadata allocations, like 'Swift Metadata'
allProcesses
minimumPid
run heap against all processes (or those >= minimumPid), with the given arguments
shortenedOutput
print fewer characters by using tabs instead of spaces (for ExcResource reports)
paths
for debugging, show binary paths rather than just names
excResource
Produce output for ExcResource report
OS_os_transaction
--excResource
unknown argument: %@
no process id or name specified
only one of --noContent or --readonlyContent can be specified
heap
reading/deserializing graph from file
%s[%d]: [fatal] memgraphs are from the same file [%s]
%s[%d]: [fatal] Invalid memgraph format passed in to --diffFrom: %s
%s[%d]: [fatal] Memgraphs are from different process identifiers [%d] and [%d]
Only showing allocations in %s that are not in %s.
%s[%d]: [fatal] mach port for process %d not valid
%s[%d]: [fatal] process %d has not started
generate analysis task
adding root nodes from task
adding malloc nodes from task
Process %d is not debuggable. Due to security restrictions, heap can only show contents of readonly memory of restricted processes.
%s[%d]: [fatal] Live process and memgraph are from different process identifiers [%d] and [%d]
Only showing allocations in live process [%s] that are not in %s.
unable to introspect malloc zones to get allocation information
%s[%d]: %s
%s[%d]: [fatal] %s
counting allocations
printHeap_block_invoke
heap.m
Invalid zone index for block [%#llx-%#llx]: %d
region->zone_index < zoneCount
v24@?0@"DVT_VMUVMRegion"8^c16
enumerating references for guessNonObjects
Storage)
[%llu]
v68@?0I8I12I16{?=^{?}{?=QIQ}^{?}}20^c60
printing zone summary info
Process %d: %u zone%s
Zone %s: Overall size: %quKB
; %u nodes malloced for %quKB (%qu%% of capacity); largest unused: [%#llx-%lldKB]
All zones: %u nodes malloced - %quKB
Zone %s: %u nodes
 - Sizes: 
All zones: %u nodes malloced - Sizes: 
v36@?0Q8@"DVT_VMUClassInfo"16I24^c28
Found %u ObjC classes
Found %u Swift classes
Found %u CFTypes
Shouldn't need to create new delta bucket to decrement size %ld
MapIncrWithCount
delta > 0
v32@?0@"DVT_VMUFieldInfo"8Q16^c24
%gKB[%lu] 
%lu[%lu] 
Zone %s: %u nodes (%llu bytes) 
All zones: %u nodes (%llu bytes) 
Active blocks in Zone %s that match pattern '%s':
Active blocks in all zones that match pattern '%s':
non-object
%#qx
%#qx: %s (%qd bytes)
v52@?0I8{?=Qb60b4@}12@"DVT_VMUVMRegion"36^c44
q24@?0@"DVT_VMUClassInfo"8@"DVT_VMUClassInfo"16
%s -- %s wasted due to alignment (%u bytes * %lu instance%s)
printClassInfo
%8lu  %9lu  %8.1f   
(strlen(buf) + classNameWidth) == defaultTabWidth * 10
%-*s  %-*s  %s
  %-*s  %s
%2.1f GB
%2.1f MB
%2.1f KB
%4llu bytes
No new objects detected between memgraphs.
-----------------------------------------------------------------------
   COUNT      BYTES       AVG   CLASS_NAME                                        TYPE    BINARY
   =====      =====       ===   ==========                                        ====    ======
Entries <class>[<offset>], like __NSCFArray[12], indicate non-objects 
pointed to by instances of <class> at given offset.
__isPlatformOrVariantPlatformVersionAtLeast
os_version_check.c
Platform2 == PLATFORM_MACOS && "unexpected platform"
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
containsString:
hasSuffix:
stringByResolvingSymlinksInPath
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:options:error:
localizedDescription
UTF8String
string
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
count
componentsJoinedByString:
appendFormat:
initWithTask:getBinariesList:
executablePath
parentPid
parentProcessPath
processName
length
mainBundle
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
stringByStandardizingPath
fileExistsAtPath:
class
isKindOfClass:
intValue
initWithTask:
shouldAnalyzeWithCorpse
numberWithInt:
stringValue
initWithPid:
name
reason
callStackSymbols
valueForEnvVar:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
is64Bit
stringWithFormat:
numberWithUnsignedInt:
init
guessNonObjects
setGuessNonObjects:
sumObjectFields
setSumObjectFields:
showSizes
setShowSizes:
showRawClassNames
setShowRawClassNames:
showInternalFragmentation
setShowInternalFragmentation:
showShortenedOutput
setShowShortenedOutput:
showPaths
setShowPaths:
quietMode
setQuietMode:
applyDiffFrom
setApplyDiffFrom:
classesPatternMatcher
setClassesPatternMatcher:
layoutPatternMatcher
setLayoutPatternMatcher:
classFilterPatternMatcher
setClassFilterPatternMatcher:
classesPattern
setClassesPattern:
separateByZone
setSeparateByZone:
showZoneSummaries
setShowZoneSummaries:
onlyShowAddresses
setOnlyShowAddresses:
objectContentLevel
setObjectContentLevel:
debugTimer
setDebugTimer:
.cxx_destruct
_guessNonObjects
_sumObjectFields
_showSizes
_showRawClassNames
_showInternalFragmentation
_showShortenedOutput
_showPaths
_quietMode
_applyDiffFrom
_separateByZone
_showZoneSummaries
_onlyShowAddresses
_objectContentLevel
_classesPatternMatcher
_layoutPatternMatcher
_classFilterPatternMatcher
_classesPattern
_debugTimer
Tc,N,V_guessNonObjects
Tc,N,V_sumObjectFields
Tc,N,V_showSizes
Tc,N,V_showRawClassNames
Tc,N,V_showInternalFragmentation
Tc,N,V_showShortenedOutput
Tc,N,V_showPaths
Tc,N,V_quietMode
Tc,N,V_applyDiffFrom
T@"DVT_VMUClassPatternMatcher",&,N,V_classesPatternMatcher
T@"DVT_VMUClassPatternMatcher",&,N,V_layoutPatternMatcher
T@"DVT_VMUClassPatternMatcher",&,N,V_classFilterPatternMatcher
T@"NSString",&,N,V_classesPattern
Tc,N,V_separateByZone
Tc,N,V_showZoneSummaries
Tc,N,V_onlyShowAddresses
TI,N,V_objectContentLevel
T@"DVT_VMUDebugTimer",&,N,V_debugTimer
largestUnusedRange
reservedTotal
allocatedTotal
blockCount
quantaCounter
classMap
setSyntaxDescription:
setDiscussion:
usage:
initWithPattern:forArgument:error:
setMatchingKindOfClass:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:
isEqualToString:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
sharedTimer
startWithMessage:
parseArguments:withBlock:
signpostID
logHandle
endEvent:
startWithCategory:message:
directedGraphWithData:error:
createMapForMinusGraph:
subgraphWithMarkedNodes:
renormalizedGraph
processDescriptionString
usage:shouldExit:
description
initWithTask:options:
setRecordRuntimeMetadataChunkInfo:
addRootNodesFromTask
addMallocNodesFromTask
printRuntimeMetadataInfo
processSnapshotGraphWithOptions:
detachFromTask
resetCachedMatches
stop
zoneCount
mapTableWithKeyOptions:valueOptions:
classInfoWithClassName:binaryPath:type:
nodeNamespaceSize
nodeDetails:
matchesNodeDetails:orNodeDescription:
genericInfo
enumerateRegionsWithBlock:
className
stringByAppendingFormat:
binaryPath
infoType
enumerateReferencesWithBlock:
zoneNameForIndex:
realizedClasses
enumerateInfosWithBlock:
superclassInfo
instanceSize
offset
size
enumerateTypeFieldsWithBlock:
displayName
binaryName
labelForNode:
objectForKey:
compare:
sortedArrayUsingComparator:
countByEnumeratingWithState:objects:count:
fullIvarDescription
typeName
examining %@ [%u]
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
reading/deserializing graph from file
heap
generate analysis task
adding root nodes from task
adding malloc nodes from task
counting allocations
enumerating references for guessNonObjects
printing zone summary info
HeapGlobals
HeapZoneAggregate
@16@0:8
c16@0:8
v20@0:8c16
v24@0:8@16
I16@0:8
v20@0:8I16
v16@0:8
@"DVT_VMUClassPatternMatcher"
@"NSString"
@"DVT_VMUDebugTimer"
{_VMURange="location"Q"length"Q}
@"NSMapTable"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>21A291b</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.heap</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>MacOSX</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>21A299</string>
<key>DTPlatformName</key>
<string>macosx</string>
<key>DTPlatformVersion</key>
<string>12.0</string>
<key>DTSDKBuild</key>
<string>21A299</string>
<key>DTSDKName</key>
<string>macosx12.0.internal</string>
<key>DTXcode</key>
<string>1310</string>
<key>DTXcodeBuild</key>
<string>13A1029</string>
<key>LSMinimumSystemVersion</key>
<string>10.14.6</string>
</dict>
</plist>
zPLR
zPLR
