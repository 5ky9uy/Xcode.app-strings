@(#)PROGRAM:backgroundassets-debug  PROJECT:BackgroundAssets-1
initWithMessageOperation:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
Tc,R
init
decodeObjectOfClass:forKey:
appBundleIdentifier
encodeObject:forKey:
initWithAppBundleIdentifier:
.cxx_destruct
_appBundleIdentifier
T@"NSString",R,N,V_appBundleIdentifier
setArgumentMode:
setSimulateEvents:
printUsage
stringWithFormat:
setChosenDeviceID:
_baassets_validUTI
setAppBundleID:
printUsageAndExitWithStatus:formatMessage:
_sanitizeInputs
argumentMode
_argumentStringForMode:
_setInitialMode:
simulateEvents
_argumentStringForSimulateEvents:
appBundleID
length
chosenDeviceID
string
appendString:
hasSuffix:
substringToIndex:
copy
initWithFormat:arguments:
UTF8String
parserWithArgVector:argumentCount:
_list_devices_mode
_simulate_mode
_simulate_app_install
_simulate_app_update
_simulate_app_periodic_check
_argumentMode
_simulateEvents
_chosenDeviceID
_appBundleID
Tq,V_argumentMode
Tq,V_simulateEvents
T@"NSString",&,V_chosenDeviceID
T@"NSString",&,V_appBundleID
unsignedIntegerValue
messageVersion
numberWithUnsignedInteger:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedRepresentationWithError:
setMessageVersion:
_messageVersion
TQ,N,V_messageVersion
exceptionWithName:reason:userInfo:
device
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
uniqueDeviceID
arrayWithObjects:count:
objectForKey:
remoteConnection
dealloc
setRemoteConnection:
unarchivedObjectOfClass:fromData:error:
count
objectAtIndex:
initWithMobileAssetDevice:error:
description
addObject:
fetchDevices
connectToBackgroundAssetsDaemonWithError:
sendMessage:error:
awaitMessageWithError:
paired
name
productType
deviceClass
osVersion
osBuild
setDevice:
_paired
_uniqueDeviceID
_name
_productType
_deviceClass
_osVersion
_osBuild
_device
_remoteConnection
T^{_AMDevice=},N,V_device
T^{_AMDServiceConnection=},N,V_remoteConnection
Tc,R,N,V_paired
T@"NSString",R,N,V_uniqueDeviceID
T@"NSString",R,N,V_name
T@"NSString",R,N,V_productType
T@"NSString",R,N,V_deviceClass
T@"NSString",R,N,V_osVersion
T@"NSString",R,N,V_osBuild
decodeBoolForKey:
containsValueForKey:
versionAllowed
encodeBool:forKey:
failureReason
initWithVersionAllowed:failureExplanation:
_versionAllowed
_failureReason
Tc,R,N,V_versionAllowed
T@"NSString",R,N,V_failureReason
countByEnumeratingWithState:objects:count:
caseInsensitiveCompare:
localizedDescription
messageOperation
setWithArray:
rangeOfString:options:
characterSetWithCharactersInString:
invertedSet
stringByTrimmingCharactersInSet:
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTIWithWildcard
decodeIntegerForKey:
encodeInteger:forKey:
classForMessageOperation:
setMessageOperation:
versionSupported
setVersionSupported:
unsupportedVersionFailureMessage
setUnsupportedVersionFailureMessage:
_versionSupported
_messageOperation
_unsupportedVersionFailureMessage
Tq,N,V_messageOperation
Tc,N,V_versionSupported
T@"NSString",&,N,V_unsupportedVersionFailureMessage
BADeveloperDebugClientMessageVersionCheck
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BADCommandLineParser
BADeveloperDebugMessage
BADDevice
BADeveloperDebugServerMessageVersionCheck
BAUtilities
BADeveloperDebugServerMessage
BADeveloperDebugClientMessage
c16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
@28@0:8r^*16i24
@24@0:8q16
v28@0:8i16@20
v24@0:8q16
q16@0:8
@24@0:8^@16
Q16@0:8
v24@0:8Q16
@32@0:8^{_AMDevice=}16^@24
c24@0:8^@16
c32@0:8@16^@24
^{_AMDevice=}16@0:8
v24@0:8^{_AMDevice=}16
^{_AMDServiceConnection=}16@0:8
v24@0:8^{_AMDServiceConnection=}16
^{_AMDevice=}
^{_AMDServiceConnection=}
@28@0:8c16@20
#24@0:8q16
v20@0:8c16
BAApplicationIdentifier
help
list-devices
device-id
app-bundle-id
simulate
app-install
app-update
app-periodic-check
hlsd:b:
An argument that was provided is invalid!
Cannot pass [%@] as [%@] was already provided.
No mode was specified, please refer to the tool usage.
Simulation arguments were provided [%@], but [%@] was not passed in.
[%@] was passed with no events specified to simulate.
[%@] was passed without specifying an app bundle id.
[%@] was passed without specifying a device to debug.
--list-devices, -l
--simulate, -s
--app-install, 
--app-update, 
--app-periodic-check, 
OVERVIEW: A tool that is used to simulate events firing in a BackgroundAssets.framework download extension.
          Most Background Assets extension entry-points fire based on App Store installation, update, or
          system events.
          This tool allows developers to simulate those events in order to debug their extensions.
USAGE:    backgroundassets-debug [options]
OPTIONS:
    --help, -h                    Prints useful information and options that backgroundassets-debug takes in.
    --list-devices, -l            Lists the connected devices paired with your Mac for development.
    --simulate, -s                Simulates installation, update, and periodic-check events for extension.
                                  Required Arguments: --app-bundle-id, --device-id
        --app-install             [*] Simulates the app being installed by the App Store and launches the extension.
        --app-update              [*] Simulates the app being updated by the App Store and launches the extension.
        --app-periodic-check      [*] Simulates the OS asking the extension to periodically check for new assets.
    --app-bundle-id, b <com.foo>  The app bundle identifier that contains a Background Assets extension. This
                                  argument is required for most operations that this tool performs.
    --device-id, d <0000000>      A chosen device's unique identifier to perform actions against. This identifier
                                  can be obtained through the --list-devices sub-command.
BAMessageVersion
BADDeviceErrorDomain
BADDevice being initialized with an invalid AMDDeviceRef.
AMDeviceStartSession error. %s
AMDeviceCopyDeviceIdentifier returned NULL.
DeviceClass
DeviceName
BuildVersion
ProductVersion
ProductType
NULL
SuccessValueKey
com.apple.backgroundassets.lockdownservice
-[BADDevice sendMessage:error] invoked with a non-client message.
-[BADDevice awaitMessageWithError:] returned a response that was not an NSData.
AMDDeviceConnect error. %s
BADDevice init failed. %s
BAServerVersionSupported
BAFailureReason
This tool is only supported on macOS Ventura (13.0) or later.
Device ID:     %s
Device Paired: %s
Device Name:   %s
Device Type:   %s
OS Version:    %s (%s)
(Unknown)
Unknown
The requested device to send simulation events to is not available.
Verify that the device is connected to this Mac.
The requested device to send simulation events to is not paired with this Mac.
Please reconnect the device and tap Trust on your connected device.
A failure occurred connecting to the Background Assets system service on your attached device.
Make sure [Developer Mode] is enabled on the device!
Error: %s.
A failure occurred sending a message to the Background Assets system service on your attached device.
Error: %s
A failure occurred waiting for a response from the Background Assets system service on your attached device.
Error: %s
Tool unsupported for usage with selected device.
Received unknown response message from the Background Assets system service on your attached device.
A failure occurred sending an app install event to the Background Assets system service on your attached device.
Error: %s
Application was installed event was sent for app identifier: (%s).
A failure occurred sending an app updated event to the Background Assets system service on your attached device.
Error: %s
Application was updated event was sent for app identifier: (%s).
A failure occurred sending an app periodic check event to the Background Assets system service on your attached device.
Error: %s
Application extension periodic check event was sent for app identifier: (%s).
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
BAClientMessageOperation
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
%d.%d.%d
@(#)PROGRAM:backgroundassets-debug  PROJECT:BackgroundAssets-1
encodeObject:forKey:
objectAtIndex:
unarchivedObjectOfClass:fromData:error:
hasSuffix:
UTF8String
copy
encodeInteger:forKey:
dictionaryWithObjects:forKeys:count:
appendString:
decodeObjectOfClass:forKey:
countByEnumeratingWithState:objects:count:
length
exceptionWithName:reason:userInfo:
unsignedIntegerValue
addObject:
numberWithUnsignedInteger:
initWithFormat:arguments:
decodeIntegerForKey:
substringToIndex:
containsValueForKey:
characterSetWithCharactersInString:
invertedSet
string
rangeOfString:options:
encodeBool:forKey:
count
objectForKey:
errorWithDomain:code:userInfo:
localizedDescription
stringWithFormat:
caseInsensitiveCompare:
arrayWithObjects:count:
description
decodeBoolForKey:
stringByTrimmingCharactersInSet:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithMessageOperation:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
init
initWithAppBundleIdentifier:
appBundleIdentifier
.cxx_destruct
_appBundleIdentifier
T@"NSString",R,N,V_appBundleIdentifier
parserWithArgVector:argumentCount:
_argumentStringForMode:
_argumentStringForSimulateEvents:
printUsageAndExitWithStatus:formatMessage:
printUsage
_setInitialMode:
_sanitizeInputs
argumentMode
setArgumentMode:
simulateEvents
setSimulateEvents:
chosenDeviceID
setChosenDeviceID:
appBundleID
setAppBundleID:
_list_devices_mode
_simulate_mode
_simulate_app_install
_simulate_app_update
_simulate_app_periodic_check
_argumentMode
_simulateEvents
_chosenDeviceID
_appBundleID
Tq,V_argumentMode
Tq,V_simulateEvents
T@"NSString",&,V_chosenDeviceID
T@"NSString",&,V_appBundleID
archivedRepresentationWithError:
messageVersion
setMessageVersion:
_messageVersion
TQ,N,V_messageVersion
dealloc
fetchDevices
initWithMobileAssetDevice:error:
connectToBackgroundAssetsDaemonWithError:
sendMessage:error:
awaitMessageWithError:
paired
uniqueDeviceID
name
productType
deviceClass
osVersion
osBuild
device
setDevice:
remoteConnection
setRemoteConnection:
_paired
_uniqueDeviceID
_name
_productType
_deviceClass
_osVersion
_osBuild
_device
_remoteConnection
T^{_AMDevice=},N,V_device
T^{_AMDServiceConnection=},N,V_remoteConnection
TB,R,N,V_paired
T@"NSString",R,N,V_uniqueDeviceID
T@"NSString",R,N,V_name
T@"NSString",R,N,V_productType
T@"NSString",R,N,V_deviceClass
T@"NSString",R,N,V_osVersion
T@"NSString",R,N,V_osBuild
initWithVersionAllowed:failureExplanation:
versionAllowed
failureReason
_versionAllowed
_failureReason
TB,R,N,V_versionAllowed
T@"NSString",R,N,V_failureReason
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTI
_baassets_validUTIWithWildcard
classForMessageOperation:
messageOperation
setMessageOperation:
versionSupported
setVersionSupported:
unsupportedVersionFailureMessage
setUnsupportedVersionFailureMessage:
_versionSupported
_messageOperation
_unsupportedVersionFailureMessage
Tq,N,V_messageOperation
TB,N,V_versionSupported
T@"NSString",&,N,V_unsupportedVersionFailureMessage
BADeveloperDebugClientMessageVersionCheck
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BADCommandLineParser
BADeveloperDebugMessage
BADDevice
BADeveloperDebugServerMessageVersionCheck
BAUtilities
BADeveloperDebugServerMessage
BADeveloperDebugClientMessage
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
@28@0:8r^*16i24
@24@0:8q16
v28@0:8i16@20
v24@0:8q16
q16@0:8
@24@0:8^@16
Q16@0:8
v24@0:8Q16
@32@0:8^{_AMDevice=}16^@24
B24@0:8^@16
B32@0:8@16^@24
^{_AMDevice=}16@0:8
v24@0:8^{_AMDevice=}16
^{_AMDServiceConnection=}16@0:8
v24@0:8^{_AMDServiceConnection=}16
^{_AMDevice=}
^{_AMDServiceConnection=}
@28@0:8B16@20
#24@0:8q16
v20@0:8B16
BAApplicationIdentifier
help
list-devices
device-id
app-bundle-id
simulate
app-install
app-update
app-periodic-check
hlsd:b:
An argument that was provided is invalid!
Cannot pass [%@] as [%@] was already provided.
No mode was specified, please refer to the tool usage.
Simulation arguments were provided [%@], but [%@] was not passed in.
[%@] was passed with no events specified to simulate.
[%@] was passed without specifying an app bundle id.
[%@] was passed without specifying a device to debug.
--list-devices, -l
--simulate, -s
--app-install, 
--app-update, 
--app-periodic-check, 
OVERVIEW: A tool that is used to simulate events firing in a BackgroundAssets.framework download extension.
          Most Background Assets extension entry-points fire based on App Store installation, update, or
          system events.
          This tool allows developers to simulate those events in order to debug their extensions.
USAGE:    backgroundassets-debug [options]
OPTIONS:
    --help, -h                    Prints useful information and options that backgroundassets-debug takes in.
    --list-devices, -l            Lists the connected devices paired with your Mac for development.
    --simulate, -s                Simulates installation, update, and periodic-check events for extension.
                                  Required Arguments: --app-bundle-id, --device-id
        --app-install             [*] Simulates the app being installed by the App Store and launches the extension.
        --app-update              [*] Simulates the app being updated by the App Store and launches the extension.
        --app-periodic-check      [*] Simulates the OS asking the extension to periodically check for new assets.
    --app-bundle-id, b <com.foo>  The app bundle identifier that contains a Background Assets extension. This
                                  argument is required for most operations that this tool performs.
    --device-id, d <0000000>      A chosen device's unique identifier to perform actions against. This identifier
                                  can be obtained through the --list-devices sub-command.
BAMessageVersion
BADDeviceErrorDomain
BADDevice being initialized with an invalid AMDDeviceRef.
AMDeviceStartSession error. %s
AMDeviceCopyDeviceIdentifier returned NULL.
DeviceClass
DeviceName
BuildVersion
ProductVersion
ProductType
NULL
SuccessValueKey
com.apple.backgroundassets.lockdownservice
-[BADDevice sendMessage:error] invoked with a non-client message.
-[BADDevice awaitMessageWithError:] returned a response that was not an NSData.
AMDDeviceConnect error. %s
BADDevice init failed. %s
BAServerVersionSupported
BAFailureReason
This tool is only supported on macOS Ventura (13.0) or later.
Device ID:     %s
Device Paired: %s
Device Name:   %s
Device Type:   %s
OS Version:    %s (%s)
(Unknown)
Unknown
The requested device to send simulation events to is not available.
Verify that the device is connected to this Mac.
The requested device to send simulation events to is not paired with this Mac.
Please reconnect the device and tap Trust on your connected device.
A failure occurred connecting to the Background Assets system service on your attached device.
Make sure [Developer Mode] is enabled on the device!
Error: %s.
A failure occurred sending a message to the Background Assets system service on your attached device.
Error: %s
A failure occurred waiting for a response from the Background Assets system service on your attached device.
Error: %s
Tool unsupported for usage with selected device.
Received unknown response message from the Background Assets system service on your attached device.
A failure occurred sending an app install event to the Background Assets system service on your attached device.
Error: %s
Application was installed event was sent for app identifier: (%s).
A failure occurred sending an app updated event to the Background Assets system service on your attached device.
Error: %s
Application was updated event was sent for app identifier: (%s).
A failure occurred sending an app periodic check event to the Background Assets system service on your attached device.
Error: %s
Application extension periodic check event was sent for app identifier: (%s).
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
BAClientMessageOperation
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
%d.%d.%d
