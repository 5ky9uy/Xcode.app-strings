@(#)PROGRAM:backgroundassets-debug  PROJECT:BackgroundAssets-1
T@"NSString",&,V_chosenDeviceID
T@"NSString",&,N,V_unsupportedVersionFailureMessage
_chosenDeviceID
T@"NSString",R,N,V_appBundleIdentifier
_messageVersion
T@"NSString",R,N,V_failureReason
_sanitizeInputs
T@"NSString",R,N,V_osBuild
_uniqueDeviceID
T@"NSString",R,N,V_productType
dealloc
TQ,N,V_messageVersion
T^{_AMDevice=},N,V_device
setWithObjects:
.cxx_destruct
Tc,R,N,V_paired
T@"NSString",&,V_appBundleID
_device
T@"NSString",R,N,V_deviceClass
_paired
T@"NSString",R,N,V_name
_simulateEvents
T@"NSString",R,N,V_osVersion
_versionAllowed
T@"NSString",R,N,V_uniqueDeviceID
osBuild
T^{_AMDServiceConnection=},N,V_remoteConnection
setAppBundleID:
Tc,N,V_versionSupported
Tc,R
Tc,R,N,V_versionAllowed
Tq,N,V_messageOperation
Tq,V_argumentMode
Tq,V_simulateEvents
UTF8String
_appBundleID
_appBundleIdentifier
_argumentMode
_argumentStringForMode:
_argumentStringForSimulateEvents:
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTI
_baassets_validUTIWithWildcard
_deviceClass
_failureReason
_list_devices_mode
_messageOperation
_name
_osBuild
_osVersion
_productType
_remoteConnection
_setInitialMode:
_simulate_app_install
_simulate_app_periodic_check
_simulate_app_update
_simulate_mode
_unsupportedVersionFailureMessage
_versionSupported
addObject:
appBundleID
appBundleIdentifier
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedRepresentationWithError:
argumentMode
arrayWithObjects:count:
awaitMessageWithError:
caseInsensitiveCompare:
characterSetWithCharactersInString:
chosenDeviceID
classForMessageOperation:
connectToBackgroundAssetsDaemonWithError:
containsValueForKey:
copy
count
countByEnumeratingWithState:objects:count:
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
description
device
deviceClass
dictionaryWithObjects:forKeys:count:
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
failureReason
fetchDevices
hasSuffix:
init
initWithAppBundleIdentifier:
initWithCoder:
initWithFormat:arguments:
initWithMessageOperation:
initWithMobileAssetDevice:error:
initWithVersionAllowed:failureExplanation:
invertedSet
length
localizedDescription
messageOperation
messageVersion
name
numberWithUnsignedInteger:
objectAtIndex:
objectForKey:
osVersion
paired
parserWithArgVector:argumentCount:
printUsage
printUsageAndExitWithStatus:formatMessage:
productType
rangeOfString:options:
remoteConnection
sendMessage:error:
setArgumentMode:
setChosenDeviceID:
setDevice:
setMessageOperation:
setMessageVersion:
setRemoteConnection:
setSimulateEvents:
setUnsupportedVersionFailureMessage:
setVersionSupported:
setWithArray:
simulateEvents
string
stringByTrimmingCharactersInSet:
stringWithFormat:
substringToIndex:
supportsSecureCoding
unarchivedObjectOfClass:fromData:error:
uniqueDeviceID
unsignedIntegerValue
unsupportedVersionFailureMessage
versionAllowed
versionSupported
BADeveloperDebugClientMessageVersionCheck
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BADCommandLineParser
BADeveloperDebugMessage
BADDevice
BADeveloperDebugServerMessageVersionCheck
BAUtilities
BADeveloperDebugServerMessage
BADeveloperDebugClientMessage
c16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
@28@0:8r^*16i24
@24@0:8q16
v28@0:8i16@20
v24@0:8q16
q16@0:8
@24@0:8^@16
Q16@0:8
v24@0:8Q16
@32@0:8^{_AMDevice=}16^@24
c24@0:8^@16
c32@0:8@16^@24
^{_AMDevice=}16@0:8
v24@0:8^{_AMDevice=}16
^{_AMDServiceConnection=}16@0:8
v24@0:8^{_AMDServiceConnection=}16
^{_AMDevice=}
^{_AMDServiceConnection=}
@28@0:8c16@20
#24@0:8q16
v20@0:8c16
BAApplicationIdentifier
help
list-devices
device-id
app-bundle-id
simulate
app-install
app-update
app-periodic-check
hlsd:b:
An argument that was provided is invalid!
Cannot pass [%@] as [%@] was already provided.
No mode was specified, please refer to the tool usage.
Simulation arguments were provided [%@], but [%@] was not passed in.
[%@] was passed with no events specified to simulate.
[%@] was passed without specifying an app bundle id.
[%@] was passed without specifying a device to debug.
--list-devices, -l
--simulate, -s
--app-install, 
--app-update, 
--app-periodic-check, 
OVERVIEW: A tool that is used to simulate events firing in a BackgroundAssets.framework download extension.
          Most Background Assets extension entry-points fire based on App Store installation, update, or
          system events.
          This tool allows developers to simulate those events in order to debug their extensions.
USAGE:    backgroundassets-debug [options]
OPTIONS:
    --help, -h                    Prints useful information and options that backgroundassets-debug takes in.
    --list-devices, -l            Lists the connected devices paired with your Mac for development.
    --simulate, -s                Simulates installation, update, and periodic-check events for extension.
                                  Required Arguments: --app-bundle-id, --device-id
        --app-install             [*] Simulates the app being installed by the App Store and launches the extension.
        --app-update              [*] Simulates the app being updated by the App Store and launches the extension.
        --app-periodic-check      [*] Simulates the OS asking the extension to periodically check for new assets.
    --app-bundle-id, b <com.foo>  The app bundle identifier that contains a Background Assets extension. This
                                  argument is required for most operations that this tool performs.
    --device-id, d <0000000>      A chosen device's unique identifier to perform actions against. This identifier
                                  can be obtained through the --list-devices sub-command.
BAMessageVersion
BADDeviceErrorDomain
BADDevice being initialized with an invalid AMDDeviceRef.
AMDeviceStartSession error. %s
AMDeviceCopyDeviceIdentifier returned NULL.
DeviceClass
DeviceName
BuildVersion
ProductVersion
ProductType
NULL
SuccessValueKey
com.apple.backgroundassets.lockdownservice
-[BADDevice sendMessage:error] invoked with a non-client message.
-[BADDevice awaitMessageWithError:] returned a response that was not an NSData.
AMDDeviceConnect error. %s
BADDevice init failed. %s
BAServerVersionSupported
BAFailureReason
This tool is only supported on macOS Ventura (13.0) or later.
Device ID:     %s
Device Paired: %s
Device Name:   %s
Device Type:   %s
OS Version:    %s (%s)
(Unknown)
Unknown
The requested device to send simulation events to is not available.
Verify that the device is connected to this Mac.
The requested device to send simulation events to is not paired with this Mac.
Please reconnect the device and tap Trust on your connected device.
A failure occurred connecting to the Background Assets system service on your attached device.
Make sure [Developer Mode] is enabled on the device!
Error: %s.
A failure occurred sending a message to the Background Assets system service on your attached device.
Error: %s
A failure occurred waiting for a response from the Background Assets system service on your attached device.
Error: %s
Tool unsupported for usage with selected device.
Received unknown response message from the Background Assets system service on your attached device.
A failure occurred sending an app install event to the Background Assets system service on your attached device.
Error: %s
Application was installed event was sent for app identifier: (%s).
A failure occurred sending an app updated event to the Background Assets system service on your attached device.
Error: %s
Application was updated event was sent for app identifier: (%s).
A failure occurred sending an app periodic check event to the Background Assets system service on your attached device.
Error: %s
Application extension periodic check event was sent for app identifier: (%s).
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
BAClientMessageOperation
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
%d.%d.%d
@(#)PROGRAM:backgroundassets-debug  PROJECT:BackgroundAssets-1
T@"NSString",&,V_chosenDeviceID
T@"NSString",&,N,V_unsupportedVersionFailureMessage
_chosenDeviceID
T@"NSString",R,N,V_appBundleIdentifier
_messageVersion
T@"NSString",R,N,V_failureReason
_sanitizeInputs
T@"NSString",R,N,V_osBuild
_uniqueDeviceID
T@"NSString",R,N,V_productType
dealloc
TB,N,V_versionSupported
TB,R,N,V_versionAllowed
.cxx_destruct
TB,R,N,V_paired
T@"NSString",&,V_appBundleID
_device
T@"NSString",R,N,V_deviceClass
_paired
T@"NSString",R,N,V_name
_simulateEvents
T@"NSString",R,N,V_osVersion
_versionAllowed
T@"NSString",R,N,V_uniqueDeviceID
osBuild
TB,R
setAppBundleID:
TQ,N,V_messageVersion
T^{_AMDServiceConnection=},N,V_remoteConnection
T^{_AMDevice=},N,V_device
Tq,N,V_messageOperation
Tq,V_argumentMode
Tq,V_simulateEvents
UTF8String
_appBundleID
_appBundleIdentifier
_argumentMode
_argumentStringForMode:
_argumentStringForSimulateEvents:
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTI
_baassets_validUTIWithWildcard
_deviceClass
_failureReason
_list_devices_mode
_messageOperation
_name
_osBuild
_osVersion
_productType
_remoteConnection
_setInitialMode:
_simulate_app_install
_simulate_app_periodic_check
_simulate_app_update
_simulate_mode
_unsupportedVersionFailureMessage
_versionSupported
addObject:
appBundleID
appBundleIdentifier
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedRepresentationWithError:
argumentMode
arrayWithObjects:count:
awaitMessageWithError:
caseInsensitiveCompare:
characterSetWithCharactersInString:
chosenDeviceID
classForMessageOperation:
connectToBackgroundAssetsDaemonWithError:
containsValueForKey:
copy
count
countByEnumeratingWithState:objects:count:
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
description
device
deviceClass
dictionaryWithObjects:forKeys:count:
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
failureReason
fetchDevices
hasSuffix:
init
initWithAppBundleIdentifier:
initWithCoder:
initWithFormat:arguments:
initWithMessageOperation:
initWithMobileAssetDevice:error:
initWithVersionAllowed:failureExplanation:
invertedSet
length
localizedDescription
messageOperation
messageVersion
name
numberWithUnsignedInteger:
objectAtIndex:
objectForKey:
osVersion
paired
parserWithArgVector:argumentCount:
printUsage
printUsageAndExitWithStatus:formatMessage:
productType
rangeOfString:options:
remoteConnection
sendMessage:error:
setArgumentMode:
setChosenDeviceID:
setDevice:
setMessageOperation:
setMessageVersion:
setRemoteConnection:
setSimulateEvents:
setUnsupportedVersionFailureMessage:
setVersionSupported:
simulateEvents
string
stringByTrimmingCharactersInSet:
stringWithFormat:
substringToIndex:
supportsSecureCoding
unarchivedObjectOfClass:fromData:error:
uniqueDeviceID
unsignedIntegerValue
unsupportedVersionFailureMessage
versionAllowed
versionSupported
BADeveloperDebugClientMessageVersionCheck
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BADCommandLineParser
BADeveloperDebugMessage
BADDevice
BADeveloperDebugServerMessageVersionCheck
BAUtilities
BADeveloperDebugServerMessage
BADeveloperDebugClientMessage
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
@28@0:8r^*16i24
@24@0:8q16
v28@0:8i16@20
v24@0:8q16
q16@0:8
@24@0:8^@16
Q16@0:8
v24@0:8Q16
@32@0:8^{_AMDevice=}16^@24
B24@0:8^@16
B32@0:8@16^@24
^{_AMDevice=}16@0:8
v24@0:8^{_AMDevice=}16
^{_AMDServiceConnection=}16@0:8
v24@0:8^{_AMDServiceConnection=}16
^{_AMDevice=}
^{_AMDServiceConnection=}
@28@0:8B16@20
#24@0:8q16
v20@0:8B16
BAApplicationIdentifier
help
list-devices
device-id
app-bundle-id
simulate
app-install
app-update
app-periodic-check
hlsd:b:
An argument that was provided is invalid!
Cannot pass [%@] as [%@] was already provided.
No mode was specified, please refer to the tool usage.
Simulation arguments were provided [%@], but [%@] was not passed in.
[%@] was passed with no events specified to simulate.
[%@] was passed without specifying an app bundle id.
[%@] was passed without specifying a device to debug.
--list-devices, -l
--simulate, -s
--app-install, 
--app-update, 
--app-periodic-check, 
OVERVIEW: A tool that is used to simulate events firing in a BackgroundAssets.framework download extension.
          Most Background Assets extension entry-points fire based on App Store installation, update, or
          system events.
          This tool allows developers to simulate those events in order to debug their extensions.
USAGE:    backgroundassets-debug [options]
OPTIONS:
    --help, -h                    Prints useful information and options that backgroundassets-debug takes in.
    --list-devices, -l            Lists the connected devices paired with your Mac for development.
    --simulate, -s                Simulates installation, update, and periodic-check events for extension.
                                  Required Arguments: --app-bundle-id, --device-id
        --app-install             [*] Simulates the app being installed by the App Store and launches the extension.
        --app-update              [*] Simulates the app being updated by the App Store and launches the extension.
        --app-periodic-check      [*] Simulates the OS asking the extension to periodically check for new assets.
    --app-bundle-id, b <com.foo>  The app bundle identifier that contains a Background Assets extension. This
                                  argument is required for most operations that this tool performs.
    --device-id, d <0000000>      A chosen device's unique identifier to perform actions against. This identifier
                                  can be obtained through the --list-devices sub-command.
BAMessageVersion
BADDeviceErrorDomain
BADDevice being initialized with an invalid AMDDeviceRef.
AMDeviceStartSession error. %s
AMDeviceCopyDeviceIdentifier returned NULL.
DeviceClass
DeviceName
BuildVersion
ProductVersion
ProductType
NULL
SuccessValueKey
com.apple.backgroundassets.lockdownservice
-[BADDevice sendMessage:error] invoked with a non-client message.
-[BADDevice awaitMessageWithError:] returned a response that was not an NSData.
AMDDeviceConnect error. %s
BADDevice init failed. %s
BAServerVersionSupported
BAFailureReason
This tool is only supported on macOS Ventura (13.0) or later.
Device ID:     %s
Device Paired: %s
Device Name:   %s
Device Type:   %s
OS Version:    %s (%s)
(Unknown)
Unknown
The requested device to send simulation events to is not available.
Verify that the device is connected to this Mac.
The requested device to send simulation events to is not paired with this Mac.
Please reconnect the device and tap Trust on your connected device.
A failure occurred connecting to the Background Assets system service on your attached device.
Make sure [Developer Mode] is enabled on the device!
Error: %s.
A failure occurred sending a message to the Background Assets system service on your attached device.
Error: %s
A failure occurred waiting for a response from the Background Assets system service on your attached device.
Error: %s
Tool unsupported for usage with selected device.
Received unknown response message from the Background Assets system service on your attached device.
A failure occurred sending an app install event to the Background Assets system service on your attached device.
Error: %s
Application was installed event was sent for app identifier: (%s).
A failure occurred sending an app updated event to the Background Assets system service on your attached device.
Error: %s
Application was updated event was sent for app identifier: (%s).
A failure occurred sending an app periodic check event to the Background Assets system service on your attached device.
Error: %s
Application extension periodic check event was sent for app identifier: (%s).
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
BAClientMessageOperation
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
%d.%d.%d
