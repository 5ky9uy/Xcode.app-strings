processInfo
arguments
mutableCopy
xccov_popFirst
lastPathComponent
standardUserDefaults
addSuiteNamed:
alloc
initWithName:usageName:usageDescription:argumentType:argumentKey:handlerBlock:
init
arrayWithObjects:count:
setOptionDefinitions:
setUsageBanner:
dictionaryWithObjects:forKeys:count:
arrayByAddingObjectsFromArray:
usageName
stringWithFormat:
dvt_arrayByRemovingObject:
componentsJoinedByString:
objectForKeyedSubscript:
class
isKindOfClass:
dvt_arrayByApplyingBlock:
usageString
stringByAppendingString:
compare:
sortedArrayUsingSelector:
stringByAppendingFormat:
containsObject:
dictionary
parseArguments:intoOptionsDictionary:error:
isEqualToString:
argumentKey
name
count
generateCoverageReportAndImportIntoProject:workspace:schemeName:profileFilePath:architecture:toolchain:json:inputs:error:
generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:error:
pathExtension
dumpDebugDescriptionForArchiveAtPath:error:
dumpKeysForArchiveAtPath:error:
dumpCoverageArchiveAtPath:forKey:error:
onlyTargets
onlyFilesForTargetsWithName:
onlyFunctionsForFilesWithNameOrPath:
entireReport
setOutputFormat:
dumpReportAtPath:options:error:
retainedWrappedWorkspaceForContainerAtFilePath:fileDataType:error:
retainedContainerAtFilePath:fileDataType:workspace:error:
finishedLoading
waitForCondition:sourceObject:keyPathAffectingConditionBlock:timeout:
testingTypeIdentifier
initWithSectionType:domainType:title:location:
testManager
logStore
schemeIdentifier
mainRunLoop
getCFRunLoop
addLog:entityIdentifier:completionBlock:
recorder
stopRecordingWithInfo:
distantFuture
runMode:beforeDate:
loadWorkspaceAtPath:representsProject:timeout:error:
addTestLogToWorkspace:withTitle:forScheme:error:
initWithFormat:arguments:
UTF8String
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
stringByExpandingTildeInPath
isAbsolutePath
defaultManager
currentDirectoryPath
dvt_stringByMakingAbsolutePathWithBasePath:
initWithColumnName:valueBlock:
.cxx_destruct
columnName
setColumnName:
valueBlock
setValueBlock:
columnWidth
setColumnWidth:
_columnName
_valueBlock
_columnWidth
columnDefinitions
countByEnumeratingWithState:objects:count:
length
objectAtIndexedSubscript:
stringByPaddingToLength:withString:startingAtIndex:
appendString:
initWithColumnDefinitions:
tableForElements:
setColumnDefinitions:
_columnDefinitions
removeObjectAtIndex:
executableLines
numberWithUnsignedInt:
coveredLines
lineCoverage
jsonRepresentation
dictionaryWithDictionary:
removeObjectForKey:
codeCoverageTargets
jsonRepresentationByRecursing:
productPath
sourceFiles
documentLocation
functions
executionCount
numberWithUnsignedLongLong:
lineRange
numberWithUnsignedInteger:
dvt_dictionaryByAddingEntriesFromDictionary:
setMode:
initWithMode:
setTargetNameFilter:
setFileNameFilter:
setFileNameRepresentsFullPath:
outputFormat
mode
targetNameFilter
fileNameFilter
fileNameRepresentsFullPath
_fileNameRepresentsFullPath
_outputFormat
_mode
_targetNameFilter
_fileNameFilter
defaultRegistry
toolchainForIdentifier:
defaultToolchain
array
firstObject
dataUsingEncoding:
JSONObjectWithData:options:error:
addObject:
setProductPath:
setArchitecture:
setToolchains:
setName:
setBuildableIdentifier:
filePathForPathString:
initWithBuildableInfos:coverageReportDestinationPath:coverageArchiveDestinationPath:schemeActionResult:profileFilePath:
start
runContextManager
runContexts
coverageReportFilePath
pathString
coverageArchiveFilePath
releaseContainer
initWithArchivePath:error:
unarchiveCoverageLinesForKey:error:
stringValue
lineNumber
isExecutable
subRanges
column
getKeys:
debugDescription
doubleValue
dataWithJSONObject:options:error:
initWithData:encoding:
dvt_objectsPassingTest:
string
appendFormat:
coverageReportForPath:error:
dumpEntireReport:outputFormat:
dumpTargetsInReport:outputFormat:
dumpSourceFilesInTargetWithName:inReport:outputFormat:
dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:
com.apple.dt.Xcode
--workspace
--workspace <path>
Path to an xcworkspace file. Must be present if --project is not used.
workspace
--project
--project <path>
Path to xcodeproj file. Must be present if --workspace is not used.
project
--scheme
--scheme <name>
Name of the scheme to which the coverage report will be associated. Required.
scheme
--arch
--arch <arch>
If specified, the architecture to use when interpreting the given binaries. If the --json flag is passed, then this architecture can be overriden by the 'arch' field of the binary's json dictionary. Defaults to x86_64.
arch
--toolchain
--toolchain <toolchain ID>
The identifier of a toolchain to use when demangling function names, e.g. 'com.apple.dt.toolchain.OSX10_13'.
toolchain
--json
If specified, the input to the import command will be interpreted as a JSON string. See examples below for the expected format of this JSON.
json
--profile
--profile <path>
The path to a profile file containing the coverage data. Required.
profile
--archive
--archive <path>
If specified, a path where the generated archive will be placed. Defaults to 'archive.xccovarchive' in the current directory.
archive
--report
--report <path>
If specified, a path where the generated report will be placed. Defaults to 'report.xccovreport' in the current directory.
report
--only-targets
Only view the list of targets.
allTargets
--files-for-target
--files-for-target <target name>
Only view the source files in the target(s) with the given name.
targetName
--functions-for-file
--functions-for-file <name or path>
Only view the functions/methods for the file(s) with the given name or path. Note that if a path is supplied, it is the path to the file when the coverage report was created, and the file need not exist on disk.
fileName
View the data in JSON format (default is human readable text).
--file-list
View the list of files for which the archive contains coverage information.
allKeys
--file
--file <path>
View the line and subrange execution counts for the file with the given path. Note that this is the path to the file when the archive was created, and the file need not exist on disk.
--debugDescription
If specified, dumps a debug description of the archive.
debugDescription
import
generate
view
help
[%@ | %@] %@ %@ [%@] [%@] [%@] inputs...
%@ [%@] [%@] [%@] [%@] [%@] inputs...
[%@ | %@] archive.xccovarchive
[%@ | %@ | %@] [%@] report.xccovreport
[%@]
%@ %@ %@
@"NSString"16@?0@"NSString"8
The import command can be used to import code coverage data into an Xcode project/workspace given the raw binaries and a profile file. The binaries can be specified either via listing them on the command line, or by supplying a JSON array of objects describing the binaries. When the generation is finished, a new log will be added to the log navigator that contains the generated report.
The generate command can be used to create Xcode's internal representation of coverage data from raw binaries and a profile file. The binaries can be specified either via listing them on the command line, or by supplying a JSON array of objects describing the binaries.
The view command can be used to view the coverage data in a coverage report or archive. The report contains line coverage percentages for each target, source file, and function/method that has coverage information. The archive contains the raw execution counts for each file in the report.
'[ { "path": "/path/to/binary",
     "arch": "i386",
     "toolchain": "com.apple.dt.toolchain.OSX10_13"
   },
   { "path": "/path/to/another/binary",
     "name": "Custom name"
   } ]'
%1$@ import --workspace MyWorkspace.xcworkspace --scheme MyScheme --profile Coverage.profdata /path/to/binary1 /path/to/binary2
%1$@ import --workspace MyWorkspace.xcworkspace --scheme MyScheme --profile Coverage.profdata --json
%2$@
%1$@ generate --profile Coverage.profdata --archive /path/to/put/archive --report /path/to/put/report /path/to/binary1 /path/to/binary2
%1$@ generate --profile Coverage.profdata --json
%2$@
Examples:
%@ is a command line utility that can %@ Xcode coverage data. For detailed information regarding a particular command, try help <command>.
view and generate
v8@?0
Error: unrecognized command '%@'
Error: %@
Error: missing required option %@
Error: must specify either %@ or %@
Must supply a JSON dictionary describing the binaries to include in the report
Must supply the paths to the binaries for which to generate a report
Error initializing IDE infrastructure: %@
Error: Must supply a report or archive to view
Error: must specify which file should be extracted from the archive with --file
Error: unrecognized file format
com.apple.dt.xccov
c8@?0
finishedLoading
+[XCCovWorkspaceUtils addTestLogToWorkspace:withTitle:forScheme:error:]
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-14161/IDEFoundation/Coverage/xccov/XCCovWorkspaceUtils.m
DVTIsMainThread()
code should be running on main thread
v16@?0@"NSError"8
NSError * _Nonnull MakeErrorWithLocalizedDescription(NSString *__strong _Nonnull, NSError *__strong _Nullable)
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-14161/IDEFoundation/Coverage/xccov/XCCovUtils.m
((desc)) != nil
%@ should not be nil.
(desc)
XCCovErrorDomain
NSString * _Nonnull NormalizePath(NSString *__strong _Nonnull)
((path)) != nil
(path)
columnWidth
TQ,V_columnWidth
columnName
T@"NSString",C,V_columnName
valueBlock
T@?,C,V_valueBlock
columnDefinitions
T@"NSArray",&,V_columnDefinitions
name
executableLines
coveredLines
lineCoverage
jsonRepresentation
T@"NSDictionary",R
targets
@16@?0@"IDESchemeActionCodeCoverageTarget"8
buildProductPath
files
@16@?0@"IDESchemeActionCodeCoverageFile"8
path
functions
@16@?0@"IDESchemeActionCodeCoverageFunction"8
executionCount
lineNumber
mode
TQ,V_mode
targetNameFilter
T@"NSString",&,V_targetNameFilter
fileNameFilter
T@"NSString",&,V_fileNameFilter
fileNameRepresentsFullPath
Tc,V_fileNameRepresentsFullPath
outputFormat
TQ,V_outputFormat
+[XCCovTool generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:error:]
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-14161/IDEFoundation/Coverage/xccov/XCCovTool.m
inputs.count > 0
x86_64
Unknown toolchain %@
report.xccovreport
archive.xccovarchive
Invalid JSON
toolchains
+[XCCovTool generateCoverageReportAndImportIntoProject:workspace:schemeName:profileFilePath:architecture:toolchain:json:inputs:error:]
projectPathOrNil != ((void *)0) || workspacePathOrNil != ((void *)0)
Failed to load workspace
No matching scheme for name '%@'
Test
Error adding test log to scheme
+[XCCovTool dumpCoverageArchiveAtPath:forKey:error:]
((archivePath)) != nil
(archivePath)
((key)) != nil
(key)
Failed to create unarchiver
Failed to unarchive coverage lines
%@%@: %@%@
(%u, %u, %llu)
+[XCCovTool dumpKeysForArchiveAtPath:error:]
Failed to dump keys
+[XCCovTool dumpDebugDescriptionForArchiveAtPath:error:]
+[XCCovTool dumpTargetsInReport:outputFormat:]
((report)) != nil
(report)
@"NSString"24@?0@"IDESchemeActionCodeCoverageTarget"8Q16
Name
# Source Files
Coverage
%.2f%% (%u/%u)
+[XCCovTool dumpSourceFilesInTargetWithName:inReport:outputFormat:]
((targetName)) != nil
(targetName)
c16@?0@"IDESchemeActionCodeCoverageTarget"8
@"NSString"24@?0@"IDESchemeActionCodeCoverageFile"8Q16
# Functions
product
+[XCCovTool dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:]
((fileName)) != nil
(fileName)
@"NSString"24@?0@"IDESchemeActionCodeCoverageFunction"8Q16
Range
file
@"NSString"24@?0@"DVTCoverageDataContainer"8Q16
    
        
+[XCCovTool dumpReportAtPath:options:error:]
((reportPath)) != nil
(reportPath)
((dumpOptions)) != nil
(dumpOptions)
Failed to load coverage report
code which should be unreachable has been reached
@(#)PROGRAM:xccov  PROJECT:IDEFrameworks-14161
XCCovWorkspaceUtils
XCCovTableColumnDefinition
XCCovTableBuilder
XCCovUtility
JSON
XCCovDumpReportOptions
XCCovTool
@44@0:8@16c24d28^@36
@48@0:8@16@24@32^@40
@32@0:8@16@?24
v16@0:8
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
@"NSString"
@24@0:8@16
@"NSArray"
@20@0:8c16
@24@0:8Q16
c16@0:8
v20@0:8c16
c76@0:8@16@24@32c40@44@52@60^@68
c84@0:8@16@24@32@40@48@56c64@68^@76
c40@0:8@16@24^@32
c32@0:8@16^@24
@32@0:8@16Q24
@40@0:8@16@24Q32
@44@0:8@16c24@28Q36
