@(#)PROGRAM:xccov  PROJECT:IDEFrameworks-17219
processInfo
arguments
mutableCopy
xccov_popFirst
lastPathComponent
standardUserDefaults
addSuiteNamed:
initWithName:usageName:usageDescription:argumentType:argumentKey:handlerBlock:
arrayWithObjects:count:
setOptionDefinitions:
setUsageBanner:
dictionaryWithObjects:forKeys:count:
arrayByAddingObjectsFromArray:
usageName
stringWithFormat:
dvt_arrayByRemovingObject:
componentsJoinedByString:
objectForKeyedSubscript:
dvt_arrayByApplyingBlock:
usageString
stringByAppendingString:
newlineCharacterSet
stringByTrimmingCharactersInSet:
compare:
sortedArrayUsingSelector:
stringByAppendingFormat:
containsObject:
dictionary
parseArguments:intoOptionsDictionary:error:
isEqualToString:
argumentKey
name
count
generateCoverageReportAndImportIntoProject:workspace:schemeName:profileFilePath:architecture:toolchain:json:inputs:error:
generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:error:
pathExtension
dumpDebugDescriptionForArchiveAtPath:error:
dumpKeysForArchiveAtPath:error:
dumpCoverageArchiveAtPath:forKey:error:
onlyTargets
onlyFilesForTargetsWithName:
onlyFunctionsForFilesWithNameOrPath:
entireReport
setOutputFormat:
dumpReportAtPath:options:error:
xccov_componentsSeparatedByStringHandlingEscaping:
objectAtIndexedSubscript:
diffCoverageReportAtPath:againstCoverageReportAtPath:mappingSourceFilePathPrefix:toPathPrefix:error:
array
addObject:
dvt_arrayByRemovingObjectsInArray:
mergeCoverageReports:andArchives:destinationReportPath:destinationArchivePath:error:
retainedWrappedWorkspaceForContainerAtFilePath:fileDataType:error:
retainedContainerAtFilePath:fileDataType:workspace:error:
finishedLoading
waitForCondition:sourceObject:keyPathAffectingConditionBlock:timeout:
defaultDeviceManager
localComputer
sharedRunDestinationManager
nativeArchitecture
platform
SDKs
anyObject
runDestinationWithTargetDevice:architecture:SDK:SDKVariant:
initLocalRecordWithWorkspace:
schemeIdentifier
setSchemeIdentifier:
testingTypeIdentifier
setDomainType:
testSchemeCommand
makeActionRecordWithSchemeCommand:schemeCommandName:schemeTask:runDestination:
buildResult
setStatus:
actionResult
setHasCoverageData:
entityName
initWithSectionType:domainType:title:location:
setLog:
recorder
mainRunLoop
getCFRunLoop
stopRecordingWithInfo:completionBlock:
distantFuture
runMode:beforeDate:
testManager
logStore
numberWithBool:
succeedWithResult:
failWithError:
addLog:entityIdentifier:completionBlock:
futureWithBlock:
error
saveWithCompletionBlock:
loadWorkspaceAtPath:representsProject:timeout:error:
addResultBundleToWorkspace:withTitle:forScheme:error:
initWithFormat:arguments:
UTF8String
length
string
rangeOfString:options:range:
substringWithRange:
appendString:
copy
_xccov_errorWithLocalizedDescription:underlyingError:
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
xccov_errorWithLocalizedDescription:
xccov_errorWithUnderlyingError:andLocalizedDescription:
stringByExpandingTildeInPath
isAbsolutePath
defaultManager
currentDirectoryPath
dvt_stringByMakingAbsolutePathWithBasePath:
init
initWithColumnName:valueBlock:
columnName
setColumnName:
valueBlock
setValueBlock:
columnWidth
setColumnWidth:
.cxx_destruct
_columnName
_valueBlock
_columnWidth
columnDefinitions
countByEnumeratingWithState:objects:count:
stringByPaddingToLength:withString:startingAtIndex:
initWithColumnDefinitions:
tableForElements:
setColumnDefinitions:
_columnDefinitions
removeObjectAtIndex:
executableLines
numberWithUnsignedInt:
coveredLines
lineCoverage
jsonRepresentation
jsonRepresentationByRecursing:
dictionaryWithDictionary:
removeObjectForKey:
creationErrors
domain
code
numberWithInteger:
localizedDescription
codeCoverageTargets
productPath
sourceFiles
documentLocation
functions
executionCount
numberWithUnsignedLongLong:
lineRange
numberWithUnsignedInteger:
dvt_dictionaryByAddingEntriesFromDictionary:
executableLinesDelta
numberWithInt:
coveredLinesDelta
lineCoverageDelta
numberWithDouble:
type
capitalizedString
addedChildren
removedChildren
childrenDeltas
identifier
setMode:
initWithMode:
setTargetNameFilter:
setFileNameFilter:
setFileNameRepresentsFullPath:
outputFormat
mode
targetNameFilter
fileNameFilter
fileNameRepresentsFullPath
_fileNameRepresentsFullPath
_outputFormat
_mode
_targetNameFilter
_fileNameFilter
actions
hasCoverageData
dvt_objectsPassingTest:
loadCoverageReportIfNeededWithError:
title
coverageReport
coverageArchiveFilePromise
claimedPath
pathString
initWithArchivePath:error:
unarchiveAllCoverageLines:
addCoverageReport:lines:
filePathForPathString:
initWithFilePath:error:
aggregatedCoverageDataForResultBundle:error:
aggregatedCoverageReport
coverageReportForPath:error:
aggregatedLines
allKeys
getKeys:
unarchiveCoverageLinesForKey:error:
stringWithString:
appendFormat:
defaultRegistry
toolchainForIdentifier:
defaultToolchain
firstObject
dataUsingEncoding:
JSONObjectWithData:options:error:
initWithName:productPath:buildableIdentifier:architecture:toolchains:isStatic:sourceFiles:
initWithBuildableInfos:coverageReportDestinationPath:coverageArchiveDestinationPath:errorLog:profileFilePath:
start
runContextManager
runContexts
coverageReportFilePathForWriting
coverageArchiveFilePathForWriting
releaseContainer
getKeys:orLines:forKey:forArchiveAtPath:error:
stringValue
lineNumber
isExecutable
subRanges
column
debugDescription
doubleValue
dataWithJSONObject:options:error:
initWithData:encoding:
coverageReportAtPath:error:
dumpEntireReport:outputFormat:
dumpTargetsInReport:outputFormat:
dumpSourceFilesInTargetWithName:inReport:outputFormat:
dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:
formatErrors:
rangeOfString:
stringByReplacingCharactersInRange:withString:
copyWithSourceFilePathsMapped:
diffAgainst:
writeToPath:error:
archiveCoverageLines:error:
finish:
com.apple.dt.Xcode
--workspace
--workspace <path>
Path to an xcworkspace file. Must be present if --project is not used.
workspace
--project
--project <path>
Path to xcodeproj file. Must be present if --workspace is not used.
project
--scheme
--scheme <name>
Name of the scheme to which the coverage report will be associated. Required.
scheme
--arch
--arch <arch>
If specified, the architecture to use when interpreting the given binaries. If the --json flag is passed, then this architecture can be overriden by the 'arch' field of the binary's json dictionary. Defaults to x86_64.
arch
--toolchain
--toolchain <toolchain ID>
The identifier of a toolchain to use when demangling function names, e.g. 'com.apple.dt.toolchain.OSX10_13'.
toolchain
--json
If specified, the input to the import command will be interpreted as a JSON string. See examples below for the expected format of this JSON.
json
--profile
--profile <path>
The path to a profile file containing the coverage data. Required.
profile
--archive
--archive <path>
If specified, a path where the generated archive will be placed. Defaults to 'archive.xccovarchive' in the current directory.
archive
--report
--report <path>
If specified, a path where the generated report will be placed. Defaults to 'report.xccovreport' in the current directory.
report
View the coverage report contained within a result bundle. Either this option or the --archive option must be specified when viewing a result bundle.
View the coverage archive contained within a result bundle. Either this option or the --report option must be specified when viewing a result bundle.
--only-targets
Only view the list of targets.
allTargets
--files-for-target
--files-for-target <target name>
Only view the source files in the target(s) with the given name.
targetName
--functions-for-file
--functions-for-file <name or path>
Only view the functions/methods for the file(s) with the given name or path. Note that if a path is supplied, it is the path to the file when the coverage report was created, and the file need not exist on disk.
fileName
View the data in JSON format.
--file-list
View the list of files for which the archive contains coverage information.
allKeys
--file
--file <path>
View the line and subrange execution counts for the file with the given path. Note that this is the path to the file when the archive was created, and the file need not exist on disk.
--debugDescription
If specified, dumps a debug description of the archive.
debugDescription
--outReport
If specified, a path where the merged report will be placed. Defaults to 'merged.xccovreport' in the current directory.
outReport
--outArchive
If specified, a path where the merged archive will be placed. Defaults to 'merged.xccovarchive' in the current directory.
outArchive
--path-equivalence
--path-equivalence <from,to>
If specified, map source file paths in before.xccovreport using the provided equivalence. This allows you to diff coverage reports that were produced from the same set of sources, when the sources existed at different file system locations. For example, if before.xccovreport contains code coverage for a file that existed at location `/some/location` when the report was generated, passing `--path-equivalence /some,/tmp` will cause the file to be treated as if it existed at `/tmp/location`. If after.xccovreport then contains code coverage for the same file, but at `/tmp/location`, then the two files will be diffed together, as expected. Note that if a path prefix contains a comma, then the comma must be escaped with another comma.
pathEquivalence
import
generate
view
diff
merge
help
[%@ | %@] %@ %@ [%@] [%@] [%@] inputs...
%@ [%@] [%@] [%@] [%@] [%@] inputs...
[%@ | %@] archive.xccovarchive
--archive [%@ | %@] result_bundle.xcresult
[%@ | %@ | %@] [%@] report.xccovreport
--report [%@ | %@ | %@] [%@] result_bundle.xcresult
%@ [%@] before.xccovreport after.xccovreport
%@ [%@] before.xcresult after.xcresult
[%@] [%@] report1.xccovreport archive1.xccovarchive report2.xccovreport archive2.xccovarchive ...
[%@]
%@ %@ %@
@"NSString"16@?0@"NSString"8
The import command can be used to import code coverage data into an Xcode project/workspace given the raw binaries and a profile file. The binaries can be specified either via listing them on the command line, or by supplying a JSON array of objects describing the binaries. When the generation is finished, a new log will be added to the log navigator that contains the generated report.
The generate command can be used to create Xcode's internal representation of coverage data from raw binaries and a profile file. The binaries can be specified either via listing them on the command line, or by supplying a JSON array of objects describing the binaries.
The view command can be used to view the coverage data in a coverage report or archive. The report contains line coverage percentages for each target, source file, and function/method that has coverage information. The archive contains the raw execution counts for each file in the report.
The diff command can be used to compare two coverage reports with each other. The diff output lists which targets, source files, or functions were added or removed, as well as those whose line coverage changed.
The merge command can be used to merge multiple coverage reports and archives together into a single aggregate coverage report and archive. Note that the aggregate coverage report and archive may be inaccurate for source files that changed in between the time that the original coverage reports were generated. If there were no source changes, the aggregate coverage report and archive are guaranteed to be accurate.
'[ { "path": "/path/to/binary",
     "arch": "i386",
     "toolchain": "com.apple.dt.toolchain.OSX10_13"
   },
   { "path": "/path/to/another/binary",
     "name": "Custom name"
   } ]'
%1$@ import --workspace MyWorkspace.xcworkspace --scheme MyScheme --profile Coverage.profdata /path/to/binary1 /path/to/binary2
%1$@ import --workspace MyWorkspace.xcworkspace --scheme MyScheme --profile Coverage.profdata --json
%2$@
%1$@ generate --profile Coverage.profdata --archive /path/to/put/archive --report /path/to/put/report /path/to/binary1 /path/to/binary2
%1$@ generate --profile Coverage.profdata --json
%2$@
Examples:
%@ is a command line utility that can %@ Xcode coverage data. For detailed information regarding a particular command, try help <command>.
view and generate
v8@?0
Error: unrecognized command '%@'
Error: %@
Error: missing required option %@
Error: must specify either %@ or %@
Must supply a JSON dictionary describing the binaries to include in the report
Must supply the paths to the binaries for which to generate a report
Error initializing IDE infrastructure: %@
Error: Must supply a report or archive to view
Error: must specify which file should be extracted from the archive with --file
Error: unrecognized file format
Error: Must supply the path to two coverage reports to diff
Error: Must supply the --json option
Error: Must supply two path prefixes to %@ separated by a comma, e.g. %@ /tmp,/var
Error: Must supply at least two pairs of coverage reports and archives to merge together
Error: Invalid number of inputs
com.apple.dt.xccov
c8@?0
finishedLoading
+[XCCovWorkspaceUtils addResultBundleToWorkspace:withTitle:forScheme:error:]
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-17219/IDEFoundation/Coverage/xccov/XCCovWorkspaceUtils.m
DVTIsMainThread()
code should be running on main thread
Test %@
+[XCCovWorkspaceUtils addResultBundleToWorkspace:withTitle:forScheme:error:]_block_invoke
v16@?0@"NSError"8
v16@?0@"DVTPromise"8
v20@?0c8@"NSError"12
XCCovErrorDomain
NSString * _Nonnull NormalizePath(NSString *__strong _Nonnull)
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-17219/IDEFoundation/Coverage/xccov/XCCovUtils.m
((path)) != nil
%@ should not be nil.
(path)
columnWidth
TQ,V_columnWidth
columnName
T@"NSString",C,V_columnName
valueBlock
T@?,C,V_valueBlock
columnDefinitions
T@"NSArray",&,V_columnDefinitions
name
executableLines
coveredLines
lineCoverage
jsonRepresentation
T@"NSDictionary",R
domain
code
localizedDescription
errors
@16@?0@"IDESchemeActionCodeCoverageTarget"8
targets
buildProductPath
@16@?0@"IDESchemeActionCodeCoverageFile"8
files
path
@16@?0@"IDESchemeActionCodeCoverageFunction"8
functions
executionCount
lineNumber
executableLinesDelta
coveredLinesDelta
lineCoverageDelta
added%@s
removed%@s
%@Deltas
@"NSDictionary"16@?0@"DVTCoverageDataContainer"8
@"NSDictionary"16@?0@"IDESchemeActionCodeCoverageDelta"8
documentLocation
target
file
function
unknown
mode
TQ,V_mode
targetNameFilter
T@"NSString",&,V_targetNameFilter
fileNameFilter
T@"NSString",&,V_fileNameFilter
fileNameRepresentsFullPath
Tc,V_fileNameRepresentsFullPath
outputFormat
TQ,V_outputFormat
c16@?0@"IDESchemeActionRecord"8
No coverage data in result bundle
Failed to load coverage report for scheme action '%@' in result bundle
No coverage archive present in scheme action '%@' in result bundle
Failed to load coverage archive in scheme action '%@' in result bundle
Failed to unarchive lines from coverage archive in scheme action '%@' in result bundle
Failed to load result bundle
Failed to load coverage report
Failed to create unarchiver
Failed to dump keys
Failed to unarchive coverage lines
Errors:
+[XCCovTool generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:error:]
/Library/Caches/com.apple.xbs/Sources/IDEFrameworks/IDEFrameworks-17219/IDEFoundation/Coverage/xccov/XCCovTool.m
inputs.count > 0
x86_64
Unknown toolchain %@
report.xccovreport
archive.xccovarchive
Invalid JSON
toolchains
+[XCCovTool generateCoverageReportAndImportIntoProject:workspace:schemeName:profileFilePath:architecture:toolchain:json:inputs:error:]
projectPathOrNil != ((void *)0) || workspacePathOrNil != ((void *)0)
Failed to load workspace
No matching scheme for name '%@'
Test
Error adding result bundle to workspace
+[XCCovTool dumpCoverageArchiveAtPath:forKey:error:]
((archivePath)) != nil
(archivePath)
((key)) != nil
(key)
%@%@: %@%@
(%u, %u, %llu)
+[XCCovTool dumpDebugDescriptionForArchiveAtPath:error:]
+[XCCovTool dumpTargetsInReport:outputFormat:]
((report)) != nil
(report)
@"NSString"24@?0@"IDESchemeActionCodeCoverageTarget"8Q16
Name
# Source Files
Coverage
%.2f%% (%u/%u)
+[XCCovTool dumpSourceFilesInTargetWithName:inReport:outputFormat:]
((targetName)) != nil
(targetName)
c16@?0@"IDESchemeActionCodeCoverageTarget"8
@"NSString"24@?0@"IDESchemeActionCodeCoverageFile"8Q16
# Functions
product
+[XCCovTool dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:]
((fileName)) != nil
(fileName)
@"NSString"24@?0@"IDESchemeActionCodeCoverageFunction"8Q16
Range
@"NSString"24@?0@"DVTCoverageDataContainer"8Q16
    
        
+[XCCovTool dumpReportAtPath:options:error:]
((dumpOptions)) != nil
(dumpOptions)
code which should be unreachable has been reached
Failed to load coverag report at path: %@
Failed to load coverage archive at path: %@
Failed to load coverage data from archive at path: %@
merged.xccovreport
merged.xccovarchive
Failed to write merged report at path %@
Failed to create merged archive
Failed to store coverage data in the merged archive
XCCovWorkspaceUtils
XCCovAdditions
XCCovTableColumnDefinition
XCCovTableBuilder
XCCovUtility
JSON
XCCovDumpReportOptions
XCCovTool
@44@0:8@16c24d28^@36
@48@0:8@16@24@32^@40
@24@0:8@16
@32@0:8@16@24
@32@0:8@16@?24
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
@"NSArray"
@20@0:8c16
@24@0:8Q16
c16@0:8
v20@0:8c16
@32@0:8@16^@24
c56@0:8^@16^@24@32@40^@48
c76@0:8@16@24@32c40@44@52@60^@68
c84@0:8@16@24@32@40@48@56c64@68^@76
c40@0:8@16@24^@32
c32@0:8@16^@24
@32@0:8@16Q24
@40@0:8@16@24Q32
@44@0:8@16c24@28Q36
c56@0:8@16@24@32@40^@48
