--listen=
--port=
--serve
--inetd
--verbose
--syslog
--log-destination=
syslog
stderr
unknown log destination '%s'
--export-all
--access-hook=
--timeout=
--init-timeout=
--max-connections=
--strict-paths
--base-path=
--base-path-relaxed
--interpolated-path=
--reuseaddr
--user-path
--user-path=
--pid-file=
--detach
--user=
--group=
--enable=
--disable=
--allow-override=
--forbid-override=
--informative-errors
--no-informative-errors
git-daemon
--detach, --user and --group are incompatible with --inetd
--listen= and --port= are incompatible with --inetd
--group supplied without --user
option --strict-paths requires a whitelist
base-path '%s' does not exist or is not a directory
failed to redirect stderr to /dev/null
--detach not supported on this platform
No such service %s
upload-archive
uploadarch
upload-pack
uploadpack
receive-pack
receivepack
fdopen of error channel failed
[%ju] 
daemon.c
log destination not initialized correctly
--strict
--timeout=%u
user not found - %s
group not found - %s
REMOTE_ADDR
REMOTE_PORT
Connection from %s:%s
git-
Protocol error: '%s'
unable to set SO_KEEPALIVE on socket: %s
Extended attribute "protocol": %s
GIT_PROTOCOL=%s
host=
Extended attribute "host": %s
Invalid request
Invalid request ('[' without ']')
Garbage after end of host part
Request %s for '%s'
'%s': service not enabled.
service not enabled
no such repository
git-daemon-export-ok
'%s': repository not exported.
repository not exported
daemon.%s
'%s': service not enabled for '%s'
access denied or repository not exported
ERR %s: %s
'%s': aliased
'%s': User-path not allowed
userpath <%s>, request <%s>, namlen %d, restlen %d, slash <%s>
%.*s/%s%.*s
user-path too large: %s
'%s': Non-absolute path denied (interpolated-path active)
interpolated path too large: %s
Interpolated dir '%s'
'%s': Non-absolute path denied (base-path active)
%s%s
base-path too large: %s
'%s' does not appear to be a git repository
'%s': not in whitelist
daemon access hook '%s' failed to start
failed to read from pipe to daemon access hook '%s'
failed to close pipe to daemon access hook '%s'
service rejected
unable to allocate any listen sockets on port %u
Ready to rumble
unable to allocate any listen sockets for host %s on port %u
getaddrinfo() for %s failed: %s
Socket descriptor too large
Could not set SO_REUSEADDR: %s
Could not bind to %s: %s
Could not listen to %s: %s
<unknown>
cannot drop privileges
Poll failed, resuming: %s
accept returned
 (with error)
[%ju] Disconnected%s
Too many children, dropping connection
REMOTE_ADDR=%s
REMOTE_PORT=%d
REMOTE_ADDR=[%s]
unable to fork
common-main.c
The empty string is not a valid path
Invalid path '%s'
More than %d nested symlinks on path '%s'
Invalid symlink '%s'
%shint: %.*s%s
color.advice.
cherry-pick
Cherry-picking is not possible because you have unmerged files.
commit
Committing is not possible because you have unmerged files.
merge
Merging is not possible because you have unmerged files.
pull
Pulling is not possible because you have unmerged files.
revert
Reverting is not possible because you have unmerged files.
It is not possible to %s because you have unmerged files.
Fix them up in the work tree, and then use 'git add/rm <file>'
as appropriate to mark resolution and make a commit.
Exiting because of an unresolved conflict.
You have not concluded your merge (MERGE_HEAD exists).
Please, commit your changes before merging.
Exiting because of unfinished merge.
Note: switching to '%s'.
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
  git switch -c <new-branch-name>
Or undo this operation with:
  git switch -
Turn off this advice by setting config variable advice.detachedHead to false
reset
hint
fetchShowForcedUpdates
pushUpdateRejected
pushNonFFCurrent
pushNonFFMatching
pushAlreadyExists
pushFetchFirst
pushNeedsForce
pushUnqualifiedRefName
statusHints
statusUoption
statusAheadBehindWarning
commitBeforeMerge
resetQuiet
resolveConflict
sequencerInUse
implicitIdentity
detachedHead
setupStreamFailure
objectNameWarning
amWorkDir
rmHints
addEmbeddedRepo
ignoredHook
waitingForEditor
graftFileDeprecated
checkoutAmbiguousRemoteBranchName
nestedTag
pushNonFastForward
%s.%s
alias.
cmdline ends with \
unclosed quote
object
%10s: %8u (%ju kB)
--reject and --3way cannot be used together.
--cached and --3way cannot be used together.
--3way outside a repository
--index outside a repository
--cached outside a repository
@@ -
+++ 
old mode 
new mode 
deleted file mode 
new file mode 
copy from 
copy to 
rename old 
rename new 
rename from 
rename to 
similarity index 
dissimilarity index 
index 
git diff header lacks filename information when removing %d leading pathname component (line %d)
git diff header lacks filename information when removing %d leading pathname components (line %d)
git diff header lacks filename information (line %d)
<stdin>
can't open patch '%s': %s
squelched %d whitespace error
squelched %d whitespace errors
%d line adds whitespace errors.
%d lines add whitespace errors.
%d line applied after fixing whitespace errors.
%d lines applied after fixing whitespace errors.
Unable to write new index file
don't apply changes matching the given path
include
apply changes matching the given path
remove <num> leading slashes from traditional diff paths
no-add
ignore additions made by the patch
instead of applying the patch, output diffstat for the input
allow-binary-replacement
no-op (backward compatibility)
numstat
show number of added and deleted lines in decimal notation
instead of applying the patch, output a summary for the input
instead of applying the patch, see if the patch is applicable
make sure the patch is applicable to the current index
intent-to-add
mark new files with `git add --intent-to-add`
cached
apply a patch without touching the working tree
unsafe-paths
accept a patch that touches outside the working area
also apply the patch (use with --stat/--summary/--check)
3way
attempt three-way merge if a patch does not apply
build-fake-ancestor
build a temporary index based on embedded index information
paths are separated with NUL character
ensure at least <n> lines of context match
whitespace
action
detect new or modified lines that have whitespace errors
ignore changes in whitespace when finding context
ignore-whitespace
apply the patch in reverse
unidiff-zero
don't expect at least one line of context
reject
leave the rejected hunks in corresponding *.rej files
allow-overlap
allow overlapping hunks
verbose
be verbose
inaccurate-eof
tolerate incorrectly detected missing new-line at the end of file
recount
do not trust the line counts in the hunk headers
directory
root
prepend <root> to all filenames
apply.whitespace
apply.ignorewhitespace
warn
nowarn
error
error-all
strip
unrecognized whitespace option '%s'
change
unrecognized whitespace ignore option '%s'
git apply: bad git-diff - expected /dev/null, got %s on line %d
git apply: bad git-diff - inconsistent new filename on line %d
git apply: bad git-diff - inconsistent old filename on line %d
git apply: bad git-diff - expected /dev/null on line %d
/dev/null
invalid mode on line %d: %s
inconsistent header lines %d and %d
.gitattributes
Skipped patch '%s'.
unrecognized input
unable to read index file
git apply: failed to read
 differ
Binary files 
Files 
patch with only garbage at line %d
patch fragment without header at line %d: %.*s
diff --git 
unable to find filename in patch at line %d
^[0-2][0-9]:([0-5][0-9]):00(\.0+)? ([-+][0-2][0-9]:?[0-5][0-9])
1969-12-31 
1970-01-01 
Cannot prepare timestamp regexp %s
regexec returned %d for input: %s
corrupt patch at line %d
new file %s depends on old contents
deleted file %s still has contents
** warning: file %s becomes empty but is not deleted
recount: ignore empty hunk
diff 
recount: unexpected line: %.*s
%s:%d: %s.
%.*s
unrecognized binary patch at line %d
delta 
literal 
corrupt binary patch at line %d: %.*s
 => 
Checking patch %s...
%s: already exists in index
%s: already exists in working directory
new mode (%o) of %s does not match old mode (%o)
new mode (%o) of %s does not match old mode (%o) of %s
affected file '%s' is beyond a symbolic link
%s: patch does not apply
check_preimage
apply.c
patch->is_new <= 0
path %s has been renamed/deleted
%s: does not exist in index
%s: does not match index
%s: wrong type
%s has type %o, expected %o
cannot checkout %s
path_is_beyond_symlink
*name_ != '\0'
removal patch leaves file contents
failed to read %s
reading from '%s' beyond a symbolic link
unable to read symlink %s
unable to open or read %s
patch failed: %s:%ld
cannot apply binary patch to '%s' without full index line
the patch applies to '%s' (%s), which does not match the current contents.
the patch applies to an empty '%s' but it is not empty
the necessary postimage %s for '%s' cannot be read
binary patch does not apply to '%s'
binary patch to '%s' creates incorrect result (expecting %s, got %s)
missing binary patch data for '%s'
cannot reverse-apply a binary patch without the reverse hunk to '%s'
invalid start of line: '%c'
Hunk #%d succeeded at %d (offset %d line).
Hunk #%d succeeded at %d (offset %d lines).
Context reduced to (%ld/%ld) to apply fragment at %d
while searching for:
%.*s
update_pre_post_images
postlen ? fixed_preimage.nr == preimage->nr : fixed_preimage.nr <= preimage->nr
caller miscounted postlen: asked %d, orig = %d, used = %d
size_t underflow: %ju - %ju
repository lacks the necessary blob to fall back on 3-way merge.
Falling back to three-way merge...
cannot read the current contents of '%s'
Failed to fall back on three-way merge...
Applied patch to '%s' with conflicts.
Applied patch to '%s' cleanly.
base
theirs
U %s
unable to remove %s from index
%s~%u
unable to write file '%s' mode %o
failed to write to '%s'
closing file '%s'
unable to add cache entry for %s
Subproject commit 
corrupt patch for submodule %s
unable to stat newly created file '%s'
unable to create backing store for newly created file %s
Applied patch %s cleanly.
internal error
Applying patch %%s with %d reject...
Applying patch %%s with %d rejects...
truncating .rej filename to %.*s.rej
.rej
cannot open %s
diff a/%s b/%s
(rejected hunks)
Hunk #%d applied cleanly.
Rejected hunk #%d.
%.*s
sha1 information is lacking or useless for submodule %s
mode change for %s, which is not in current HEAD
sha1 information is lacking or useless (%s).
make_cache_entry failed for path '%s'
could not add %s to temporary index
could not write temporary index to %s
 %-*s |  Bin
 %-*s |
%5d %.*s%.*s
delete
 rewrite %s (%d%%)
 %s mode %06o %s
 %s %s
copy
 %s %.*s{%s => %s} (%d%%)
 %s %s => %s (%d%%)
 mode change %06o => %06o %s
 mode change %06o => %06o
option callback does not expect negation
attr.c
counted %d != ended at %d
%s: not a valid attribute name
non-INDEX attr direction in a bare repo
git_attr_internal
a->attr_nr == (hashmap_get_size(&g_attr_hashmap.map) - 1)
size_t overflow: %ju + %ju
./hashmap.h
hashmap_get_size: size not set
no entry found
prepare_attr_stack
(*stack)->origin
[builtin]
[attr]
%s not allowed: %s:%d
Negative patterns are ignored in git attributes
Use '\!' for literal leading exclamation.
%.*s is not a valid attribute name
%s: %s:%d
[attr]binary -diff -merge -text
GIT_ATTR_NOSYSTEM
share/git-core/gitattributes
/etc/gitattributes
attributes
info/attributes
interned attributes shouldn't be deleted
invalid base85 alphabet %c
invalid base85 sequence %.5s
good
reading bisect refs failed
%s was both %s and %s
bisect.c
No testable commit found.
Maybe you started with bad path parameters?
%s is the first %s commit
(roughly %d step)
(roughly %d steps)
Bisecting: %d revision left to test after this %s
Bisecting: %d revisions left to test after this %s
BISECT_HEAD
bisect: remove
dist=%d
BISECT_TERMS
skip-
BISECT_ANCESTORS_OK
a %s revision is needed
could not create file '%s'
Not a valid commit name %s
Bisecting: a merge base must be tested
The merge base %s is bad.
This means the bug has been fixed between %s and [%s].
The merge base %s is new.
The property has changed between %s and [%s].
The merge base %s is %s.
This means the first '%s' commit is between %s and [%s].
Some %s revs are not ancestors of the %s rev.
git bisect cannot work properly in this case.
Maybe you mistook %s and %s revs?
the merge base between %s and [%s] must be skipped.
So we cannot be sure the first %s commit is between %s and %s.
We continue anyway.
bisect_rev_setup
Badly quoted content in file '%s': %s
There are only 'skip'ped commits left to test.
The first %s commit could be any of:
We cannot bisect more!
diff-tree
--stat
--summary
BISECT_EXPECTED_REV
show-branch
refs/bisect%s
BISECT_LOG
BISECT_NAMES
BISECT_RUN
head-name
BISECT_START
Not setting branch %s as its own upstream.
branch.%s.remote
branch.%s.merge
branch.%s.rebase
Branch '%s' set up to track remote branch '%s' from '%s' by rebasing.
Branch '%s' set up to track remote branch '%s' from '%s'.
Branch '%s' set up to track local branch '%s' by rebasing.
Branch '%s' set up to track local branch '%s'.
Branch '%s' set up to track remote ref '%s' by rebasing.
Branch '%s' set up to track remote ref '%s'.
Branch '%s' set up to track local ref '%s' by rebasing.
Branch '%s' set up to track local ref '%s'.
Unable to write upstream branch configuration
branch.%s.description
'%s' is not a valid branch name.
A branch named '%s' already exists.
Cannot force update the current branch.
branch.c
Not a valid object name: '%s'.
Ambiguous object name: '%s'.
Not a valid branch point: '%s'.
branch: Reset to %s
branch: Created from %s
'%s' is already checked out at '%s'
HEAD of working tree %s is not updated
Not tracking: ambiguous information for ref %s
cannot find the current offset
bulk-checkin.c
should not happen
cannot seek back
unable to write pack header
failed to read from '%s'
failed to read %d bytes from '%s'
unexpected deflate failure: %d
%s/pack/pack-
could not open '%s'
Repository lacks these prerequisite commits:
need a repository to verify a bundle
%s %s
verify_bundle
bundle.c
The bundle contains this ref:
The bundle contains these %d refs:
The bundle records a complete history.
The bundle requires this ref:
The bundle requires these %d refs:
unrecognized argument: %s
Refusing to create empty bundle.
cannot create '%s'
index-pack died
'%s' does not look like a v2 bundle file
unrecognized header: %s%s (%d)
%s %s
--pretty=oneline
rev-list died
ref '%s' is excluded by the rev-list options
tagger 
--all-progress-implied
--stdout
--thin
--delta-base-offset
unable to dup bundle descriptor
Could not spawn pack-objects
pack-objects died
cache-tree.c
cache_tree_update
BUG: There are unmerged index entries:
BUG: %d %.*s
unmerged index entries when writing inmemory index
%s: unmerged (%s)
You have both %s and %s
update_one
!(dryrun && repair)
index cache-tree records empty sub-tree
cache-tree.c: '%.*s' in '%s' not found
invalid object %06o %s for '%.*s'
%o %.*s%c
%c%d %d
fatal - unsorted cache subtree
cache-tree: internal error
%s with flags 0x%x should not be in cache-tree
bad subtree '%.*s'
cache-tree for path %.*s does not match. Expected %s got %s
chdir-notify.c
setup: chdir from '%s' to '%s'
setup: reparent %s to '%s'
[31m
[32m
[33m
[34m
[35m
[36m
[1;31m
[1;32m
[1;33m
[1;34m
[1;35m
[1;36m
color.c
color parsing ran out of space
invalid color value: %.*s
file descriptor out of range: %d
color.ui
black
green
yellow
blue
magenta
cyan
white
normal
bold
italic
blink
reverse
strike
%c8;5;%d
%c8;2;%d;%d;%d
print_columns
column.c
(colopts & COL_ENABLE_MASK) != COL_AUTO
invalid layout mode %d
column.
--raw-mode=%d
--width=%d
--indent=%s
--padding=%d
%s%s%s
invalid column.%s mode %s
dense
unsupported option '%s'
%06o 
read error '%s'
early EOF '%s'
Subproject commit %s
object '%s' is not a blob!
diff --cc 
diff --combined 
%s%sindex 
..%s%s
%s%snew file mode %06o
%s%sdeleted file 
mode 
%s%06o
..%06o
--- 
unable to generate combined diff for %s
 +%lu,%lu 
%s%s %s%s
 -%lu,%lu
%.*s%s%s
Binary files differ
could not parse %s
%s %s is not a commit!
bad graft data: %s
read_graft_line
commit.c
!graft
cannot read commit object %s
expected commit for %s, got %s
bogus commit object %s
bad tree pointer in commit %s
parent 
bad parents in commit %s
Could not read %s
Object %s not a commit
Commit %s has an untrusted GPG signature, allegedly by %s.
Commit %s has a bad GPG signature allegedly by %s.
Commit %s does not have a GPG signature.
Commit %s has a good GPG signature by %s
mergetag
a NUL byte in commit log message not allowed.
tree %s
parent %s
author %s
committer %s
encoding %s
Conflicts:
Support for <GIT_DIR>/info/grafts is deprecated
and will be removed in a future Git version.
Please use "git replace --convert-graft-file"
to convert the grafts into replace refs.
Turn this message off by running
"git config advice.graftFileDeprecated false"
duplicate graft data: %s
parent
%s/info/commit-graph
commit-graph file is too small
commit-graph signature %X does not match signature %X
commit-graph version %X does not match version %X
commit-graph hash version %X does not match version %X
commit-graph chunk lookup table entry missing; file may be incomplete
commit-graph improper chunk offset %08x%08x
commit-graph chunk id %08x appears multiple times
the commit graph format cannot write %d commits
too many commits to write graph
no commit-graph file loaded
the commit-graph file has incorrect checksum and is likely corrupt
commit-graph has incorrect OID order: %s then %s
commit-graph has incorrect fanout value: fanout[%d] = %u != %u
failed to parse commit %s from commit-graph
Verifying commits in commit graph
failed to parse commit %s from object database for commit-graph
root tree OID for commit %s in commit-graph is %s != %s
commit-graph parent list for commit %s is too long
commit-graph parent for %s is %s != %s
commit-graph parent list for commit %s terminates early
commit-graph has generation number zero for commit %s, but non-zero elsewhere
commit-graph has non-zero generation number for commit %s, but zero elsewhere
commit-graph generation for commit %s is %u != %u
commit date for commit %s in commit-graph is %ju != %ju
commit-graph is missing the OID Fanout chunk
commit-graph is missing the OID Lookup chunk
commit-graph is missing the Commit Data chunk
invalid commit-graph chain: line '%s' not a hash
unable to find all commit-graph files
%s/info/commit-graphs/commit-graph-chain
%s/info/commit-graphs/graph-%s.graph
commit-graph has no base graphs chunk
commit-graph chain does not match
GIT_TEST_COMMIT_GRAPH_DIE_ON_LOAD
dying as requested by the '%s' variable on commit-graph load!
GIT_TEST_COMMIT_GRAPH
invalid commit position. commit-graph is likely corrupt
invalid parent position %u
could not find commit %s
commit-graph.c
NULL commit-graph
get_commit_tree_in_graph_one called from non-commit-graph commit
%s/pack/
Finding commits for commit graph in %d pack
Finding commits for commit graph in %d packs
error adding pack %s
error opening index for %s
unable to get type of object %s
Finding commits for commit graph from %d ref
Finding commits for commit graph from %d refs
invalid commit object id: %s
Finding commits for commit graph among packed objects
Loading known commits in commit graph
Expanding reachable commits in commit graph
Clearing commit marks in commit graph
Counting distinct commits in commit graph
Finding extra edges in commit graph
Merging commit-graph
Scanning merged commits
unexpected duplicate commit id %s
Computing commit graph generation numbers
%s/info/commit-graphs/tmp_graph_XXXXXX
unable to create '%s'
Writing out commit graph in %d passes
unable to open commit-graph chain file
failed to rename base commit-graph file
failed to rename temporary commit-graph file
unable to get tree for %s
missing parent %s for commit %s
failed to write correct number of base graph ids
/info/commit-graphs
.graph
a from object
commit-reach.c
bad generation skip %8x > %8x at %s
compat/obstack.c
/dev/tty
include.path
includeif
path
GIT_CONFIG_PARAMETERS
bogus config parameter: %s
bogus format in %s
failed to expand user dir in: '%s'
'%s' for '%s' is not a valid timestamp
core.
user.
author.
committer.
i18n.
branch.
push.
mailmap.
advice.
color.advice
pager.color
color.pager
pack.packsizelimit
pack.compression
bad pack compression level %d
unable to load config blob object '%s'
reference '%s' does not point to a blob
/etc/gitconfig
share/git-core/gitconfig
failed to parse %s
GIT_CONFIG_NOSYSTEM
git_configset_get_value
config.c
values->nr > 0
Invalid %s: '%s'
core.splitindex
splitindex.maxpercentchange
splitIndex.maxPercentChange value '%d' should be between 0 and 100
core.fsmonitor
GIT_TEST_FSMONITOR
GIT_TEST_INDEX_THREADS
index.threads
unable to parse '%s' from command-line config
bad config variable '%s' in file '%s' at line %d
could not lock config file %s
opening %s
invalid pattern: %s
invalid config file %s
fstat on %s failed
unable to mmap '%s'
chmod on %s failed
could not write config file %s
could not set '%s' to '%s'
could not unset '%s'
missing value for '%s'
current_config_origin_type called outside config callback
file
submodule-blob
command line
unknown config origin type
current_config_name called outside config callback
could not expand include path '%s'
relative config includes must come from files
the command line
gitdir:
gitdir/i:
onbranch:
relative config include conditionals must come from files
how is this possible?
key does not contain a section: %s
key does not contain variable name: %s
invalid key: %s
invalid key (newline): %s
out of range
invalid unit
bad numeric config value '%s' for '%s': %s
GIT_TEST_GETTEXT_POISON
bad numeric config value '%s' for '%s' in blob %s: %s
bad numeric config value '%s' for '%s' in file %s: %s
bad numeric config value '%s' for '%s' in standard input: %s
bad numeric config value '%s' for '%s' in submodule-blob %s: %s
bad numeric config value '%s' for '%s' in command line %s: %s
bad numeric config value '%s' for '%s' in %s: %s
true
false
core.filemode
core.trustctime
core.checkstat
default
minimal
core.quotepath
core.symlinks
core.ignorecase
core.attributesfile
core.hookspath
core.ignorestat
core.prefersymlinkrefs
core.logallrefupdates
always
core.warnambiguousrefs
core.abbrev
auto
abbrev length out of range: %d
core.disambiguate
core.loosecompression
bad zlib compression level %d
core.compression
core.packedgitwindowsize
core.bigfilethreshold
core.packedgitlimit
core.deltabasecachelimit
core.autocrlf
input
core.safecrlf
core.eol
crlf
native
core.checkroundtripencoding
core.notesref
core.editor
core.commentchar
core.commentChar should only be one character
core.askpass
core.excludesfile
core.whitespace
core.fsyncobjectfiles
core.preloadindex
core.createobject
rename
link
invalid mode for object creation: %s
core.sparsecheckout
core.precomposeunicode
core.protecthfs
core.protectntfs
core.usereplacerefs
i18n.commitencoding
i18n.logoutputencoding
branch.autosetupmerge
branch.autosetuprebase
never
local
remote
malformed value for %s
push.default
nothing
matching
simple
upstream
tracking
current
malformed value for %s: %s
must be one of nothing, matching, simple, upstream or current
mailmap.file
mailmap.blob
config_buf can only ungetc the same character
bad config line %d in blob %s
bad config line %d in file %s
bad config line %d in standard input
bad config line %d in submodule-blob %s
bad config line %d in command line %s
bad config line %d in %s
config error action unset
unable to resolve config blob '%s'
~/.gitconfig
git_dir without commondir
config.worktree
unable to parse command-line config
configset_add_value has no source
unknown error occurred while reading the configuration files
[%.*s "
[%.*s]
%.*s = %s
invalid section name '%s'
%s has multiple values
failed to write new configuration file %s
invalid section name: %s
server doesn't support '%s'
server doesn't support feature '%s'
connect.c
invalid packet
protocol error: unexpected '%s'
ls-refs
command=ls-refs
agent
agent=%s
server-option
server-option=%s
peel
symrefs
ref-prefix %s
invalid ls-refs response: %s
expected flush after ref listing
Diag: url=%s
NULL
Diag: protocol=%s
Diag: hostandport=%s
Diag: path=%s
transport/git
strange pathname '%s' blocked
Diag: userandhost=%s
Diag: port=%s
NONE
transport/ssh
transport/file
GIT_PROTOCOL=version=%d
the remote end hung up upon initial contact
Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
expected flush after capabilities
capabilities^{}
.have
protocol error: unexpected capabilities^{}
ignoring capabilities after first line '%s'
shallow 
protocol error: expected shallow sha-1, got '%s'
repository on the other end cannot be shallow
symref
symref-target:
peeled:
%s^{}
no path specified; see 'git help pull' for valid url syntax
git+ssh
ssh+git
protocol '%s' is not supported
unknown protocol
GIT_OVERRIDE_VIRTUAL_HOST
%s %s%chost=%s%c
version=%d%c
GIT_PROXY_COMMAND
core.gitproxy
 for 
9418
strange hostname '%s' blocked
strange port '%s' blocked
cannot start proxy %s
<none>
Looking up %s ... 
unable to look up %s (port %s) (%s)
done.
Connecting to %s (port %s) ... 
%s[%d: %s]: errno=%s
unable to connect to %s:
done.
(unknown)
unable to set SO_KEEPALIVE on socket
GIT_SSH
GIT_SSH_COMMAND
core.sshcommand
ssh.exe
plink
plink.exe
tortoiseplink
tortoiseplink.exe
GIT_SSH_VARIANT
ssh.variant
putty
SendEnv=GIT_PROTOCOL
VARIANT_AUTO passed to push_ssh_options
ssh variant 'simple' does not support -4
ssh variant 'simple' does not support -6
-batch
ssh variant 'simple' does not support setting port
--progress=%s
Checking connectivity
Could not run 'git rev-list'
failed write to rev-list
failed to close rev-list's stdin
async_query_available_blobs
convert.c
subprocess_map_initialized
external filter '%s' is not available anymore although not all paths have been filtered
command=list_available_blobs
pathname=
-text
text
text eol=lf
text eol=crlf
text=auto
text=auto eol=crlf
text=auto eol=lf
%s: clean filter '%s' failed
convert_to_git_filter_fd
ca.drv
ca.drv->clean || ca.drv->process
mixed
abort
external filter '%s' failed
ident
filter
working-tree-encoding
smudge
clean
process
required
true/false are no valid working-tree-encodings
read from external filter '%s' failed
cannot fork to run external filter '%s'
cannot feed the input to external filter '%s'
external filter '%s' failed %d
unexpected filter type
command=%s
path name too long for external filter
pathname=%s
can-delay=1
delayed
delay
git-filter
source
failed to encode '%s' from %s to %s
destination
Checking roundtrip encoding for %s...
reencoded source
encoding '%s' from %s to %s and back is not the same
BOM is prohibited in '%s' if encoded as %s
The file '%s' contains a byte order mark (BOM). Please use UTF-%s as working-tree-encoding.
BOM is required in '%s' if encoded as %s
The file '%s' is missing a byte order mark (BOM). Please use UTF-%sBE or UTF-%sLE (depending on the byte order) as working-tree-encoding.
GIT_TRACE_WORKING_TREE_ENCODING
%s (%s, considered %s):
[2m%2i:
[0m %2x 
[2m%c
[0m%c
CRLF would be replaced by LF in %s
CRLF will be replaced by LF in %s.
The file will have its original line endings in your working directory
LF would be replaced by CRLF in %s
LF will be replaced by CRLF in %s.
The file will have its original line endings in your working directory
%s: smudge filter %s failed
Id: 
: %s $
$Id: 
illegal crlf_action %d
copy-fd: read returned
copy-fd: write returned
%s: close error
invalid credential line: %s
username
password
protocol
host
quit
credential helper '%s' told us to quit
unable to get password from user
erase
url has no scheme: %s
credential url cannot be parsed: %s
credential.c
credential value for %s is missing
credential value for %s contains newline
%s=%s
refusing to work with credential missing host field
refusing to work with credential missing protocol field
credential.
helper
usehttppath
git credential-%s
Username
Password
%s for '%s': 
%s://
url contains a newline in its %s component: %s
%s: sha1 file error on close
%s: error when reading the tail of sha1 file
%s: sha1 file has trailing garbage
unable to open /dev/null
unable to open '%s'
%s: sha1 file read error
%s: sha1 file truncated
sha1 file '%s' validation error
sha1 file '%s' write error. Out of diskspace
sha1 file '%s' write error
in the future
%ju second ago
%ju seconds ago
%ju minute ago
%ju minutes ago
%ju hour ago
%ju hours ago
%ju day ago
%ju days ago
%ju week ago
%ju weeks ago
%ju month ago
%ju months ago
%ju year
%ju years
%s, %ju month ago
%s, %ju months ago
%ju year ago
%ju years ago
date.c
cannot create anonymous strftime date_mode struct
%ju %+05d
%04d-%02d-%02d
%04d-%02d-%02d %02d:%02d:%02d %+05d
%04d-%02d-%02dT%02d:%02d:%02d%c%02d:%02d
%.3s, %d %.3s %d %02d:%02d:%02d %+05d
auto:
default-local
-local
date format missing colon separator: %s
unknown date format %s
GIT_TEST_DATE_NOW
Timestamp too large for this system: %ju
Timestamp+tz too large: %ju +%04d
Timestamp before Unix epoch: %ju %04d
Sundays
Mondays
Tuesdays
Wednesdays
Thursdays
Fridays
Saturdays
January
February
March
April
June
July
August
September
October
November
December
%.3s 
%.3s %d 
%02d:%02d
:%02d
 %+05d
IDLW
MEWT
MEST
CEST
MESZ
EEST
WAST
WADT
EAST
EADT
NZST
NZDT
IDLE
%ju %c%02d%02d
relative
iso8601-strict
iso-strict
iso8601
rfc2822
short
human
unix
format
last
months
years
yesterday
noon
midnight
zero
three
four
five
seven
eight
nine
seconds
minutes
hours
days
weeks
internal error in merge #1
internal error in merge #2
internal error in merge #3
internal error in merge #4
failed to read orderfile '%s'
invalid regex: %s
skipping rename detection, detected duplicate destination '%s'
Performing inexact rename detection
internal error: dst already matched.
create_delta_index
diff-delta.c
packed_entry - (struct index_entry *)mem == entries
diff-lib.c
diff-files
run_diff_index must be passed exactly one tree
bad tree object %s
plain
copies
myers
patience
histogram
diff.indentheuristic
diff.color
color.diff
diff.colormoved
diff.colormovedws
diff.context
diff.interhunkcontext
diff.renames
diff.autorefreshindex
diff.mnemonicprefix
diff.noprefix
diff.statgraphwidth
diff.external
diff.wordregex
diff.orderfile
diff.ignoresubmodules
diff.submodule
Unknown value for 'diff.submodule' config variable: '%s'
diff.algorithm
diff.wserrorhighlight
diff.renamelimit
diff.color.
color.diff.
diff.suppressblankempty
diff.suppress-blank-empty
diff.dirstat
Found errors in 'diff.dirstat' config variable:
internal error: asking to populate invalid file.
unable to read %s
--name-only, --name-status, --check and -s are mutually exclusive
-G, -S and --find-object are mutually exclusive
--follow requires exactly one pathspec
Option '--%s' requires a value
%s%.*s
%s...
diff.renameLimit
unable to read files to diff
diff.c
fill_textconv called with non-textconv driver
context
meta
frag
func
oldMoved
oldMovedAlternative
oldMovedDimmed
oldMovedAlternativeDimmed
newMoved
newMovedAlternative
newMovedDimmed
newMovedAlternativeDimmed
contextDimmed
oldDimmed
newDimmed
contextBold
oldBold
newBold
blocks
zebra
dimmed-zebra
dimmed_zebra
color moved setting must be one of 'no', 'default', 'blocks', 'zebra', 'dimmed-zebra', 'plain'
ignore-space-change
ignore-space-at-eol
ignore-all-space
allow-indentation-change
unknown color-moved-ws mode '%s', possible values are 'ignore-space-change', 'ignore-space-at-eol', 'ignore-all-space', 'allow-indentation-change'
color-moved-ws: allow-indentation-change cannot be combined with other whitespace modes
changes
lines
noncumulative
cumulative
  Failed to parse dirstat cut-off percentage '%s'
  Unknown dirstat parameter '%s'
 No newline at end of file
%s%c
%s%s+++ %s%s%s
%s%s--- %s%s%s
%sGIT binary patch
%sdelta %s
%sliteral %s
%sSubmodule %s contains untracked content
%sSubmodule %s contains modified content
 0 files changed
 ...
unknown diff symbol
print_stat_summary_inserts_deletes
insertions == 0 && deletions == 0
 %d file changed
 %d files changed
, %d insertion(+)
, %d insertions(+)
, %d deletion(-)
, %d deletions(-)
-dirty
Subproject commit %s%s
GIT_EXTERNAL_DIFF
ACDMRTXU*B
Diff output format options
patch
generate patch
no-patch
suppress diff output
unified
generate diffs with <n> lines context
function-context
generate the diff in raw format
patch-with-raw
synonym for '-p --raw'
patch-with-stat
synonym for '-p --stat'
machine friendly --stat
shortstat
output only the last line of --stat
dirstat
<param1,param2>...
output the distribution of relative amount of changes for each sub-directory
synonym for --dirstat=cumulative
dirstat-by-file
synonym for --dirstat=files,param1,param2...
warn if changes introduce conflict markers or whitespace errors
summary
condensed summary such as creations, renames and mode changes
name-only
show only names of changed files
name-status
show only names and status of changed files
stat
<width>[,<name-width>[,<count>]]
generate diffstat
stat-width
<width>
generate diffstat with a given width
stat-name-width
generate diffstat with a given name width
stat-graph-width
generate diffstat with a given graph width
stat-count
<count>
generate diffstat with limited lines
compact-summary
generate compact summary in diffstat
binary
output a binary diff that can be applied
full-index
show full pre- and post-image object names on the "index" lines
color
when
show colored diff
ws-error-highlight
<kind>
highlight whitespace errors in the 'context', 'old' or 'new' lines in the diff
do not munge pathnames and use NULs as output field terminators in --raw or --numstat
abbrev
use <n> digits to display SHA-1s
src-prefix
<prefix>
show the given source prefix instead of "a/"
dst-prefix
show the given destination prefix instead of "b/"
line-prefix
prepend an additional prefix to every line of output
no-prefix
do not show any source or destination prefix
inter-hunk-context
show context between diff hunks up to the specified number of lines
output-indicator-new
<char>
specify the character to indicate a new line instead of '+'
output-indicator-old
specify the character to indicate an old line instead of '-'
output-indicator-context
specify the character to indicate a context instead of ' '
Diff rename options
break-rewrites
<n>[/<m>]
break complete rewrite changes into pairs of delete and create
find-renames
detect renames
irreversible-delete
omit the preimage for deletes
find-copies
detect copies
find-copies-harder
use unmodified files as source to find copies
no-renames
disable rename detection
rename-empty
use empty blobs as rename source
follow
continue listing the history of a file beyond renames
prevent rename/copy detection if the number of rename/copy targets exceeds given limit
Diff algorithm options
produce the smallest possible diff
ignore whitespace when comparing lines
ignore changes in amount of whitespace
ignore changes in whitespace at EOL
ignore-cr-at-eol
ignore carrier-return at the end of line
ignore-blank-lines
ignore changes whose lines are all blank
indent-heuristic
heuristic to shift diff hunk boundaries for easy reading
generate diff using the "patience diff" algorithm
generate diff using the "histogram diff" algorithm
diff-algorithm
<algorithm>
choose a diff algorithm
anchored
<text>
generate diff using the "anchored diff" algorithm
word-diff
<mode>
show word diff, using <mode> to delimit changed words
word-diff-regex
<regex>
use <regex> to decide what a word is
color-words
equivalent to --word-diff=color --word-diff-regex=<regex>
color-moved
moved lines of code are colored differently
color-moved-ws
how white spaces are ignored in --color-moved
Other diff options
when run from subdir, exclude changes outside and show relative paths
treat all files as text
swap two inputs, reverse the diff
exit-code
exit with 1 if there were differences, 0 otherwise
quiet
disable all output of the program
ext-diff
allow an external diff helper to be executed
textconv
run external text conversion filters when comparing binary files
ignore-submodules
<when>
ignore changes to submodules in the diff generation
<format>
specify how differences in submodules are shown
ita-invisible-in-index
hide 'git add -N' entries from the index
ita-visible-in-index
treat 'git add -N' entries as real in the index
<string>
look for differences that change the number of occurrences of the specified string
look for differences that change the number of occurrences of the specified regex
pickaxe-all
show all changes in the changeset with -S or -G
pickaxe-regex
treat <string> in -S as extended POSIX regular expression
control the order in which files appear in the output
find-object
<object-id>
look for differences that change the number of occurrences of the specified object
diff-filter
[(A|C|D|M|R|T|U|X|B)...[*]]
select files by diff type
output
<file>
Output to a specific file
%s expects a numerical value
--unified
how come --cumulative take a value?
Failed to parse --dirstat/-X option parameter:
invalid --stat value: %s
%s should not get here
option callback does not expect an argument
unknown value after ws-error-highlight=%.*s
%s expects a character, got '%s'
%s expects <n>/<m> form
invalid argument to %s
option diff-algorithm accepts "myers", "minimal", "patience" and "histogram"
porcelain
bad --word-diff argument: %s
bad --color-moved argument: %s
invalid mode '%s' in --color-moved-ws
failed to parse --submodule option parameter: '%s'
unable to resolve '%s'
unknown change class '%c' in --diff-filter=%s
oid abbreviation out of range: %d
internal diff status error
diff--git
newfilemode
---/dev/null
+++b/
deletedfilemode
---a/
+++/dev/null
unable to generate patch-id diff for %s
stat '%s'
cannot hash %s
%06o
internal error in diff-resolve-rename-copy
unable to generate checkdiff for %s
%s:%d: %s.
checkdiff_consume
data->o
%s%s:%d: leftover conflict marker
%s%s:%d: %s.
:%06o %06o %s 
%c%03d%c
%c%c
unable to generate diffstat for %s
new +l
new +x
gone
mode -l
mode +l
mode +x
mode -x
 %s%-*s |
 %*s
 %s%ju%s
 -> 
%s%ju%s
 bytes
 Unmerged
 %*ju%s
%s%4d.%01d%% %.*s
create
 rewrite 
 (%d%%)
 %s mode %06o 
 %s 
 %s %s (%d%%)
 mode change %06o => %06o
* Unmerged path %s
%s%ssimilarity index %d%%
%s%scopy from 
%s%scopy to 
%s%srename from 
%s%srename to 
%s%sdissimilarity index %d%%%s
%s%sindex %s..%s
 %06o
GIT_DIFF_PATH_COUNTER=%d
GIT_DIFF_PATH_TOTAL=%d
external diff died, stopping at %s
stat(%s)
readlink(%s)
cannot read data blob for %s
diff is failing to clean up its tempfiles
XXXXXX_
unable to create temp-file
unable to write temp-file
%s%sdiff --git %s %s%s
%s%snew file mode %06o%s
%s%sdeleted file mode %06o%s
%s%sold mode %06o%s
%s%snew mode %06o%s
%sBinary files %s and %s differ
GIT_DIFF_OPTS
--unified=
unable to generate diff for %s
1,%d
invalid regular expression: %s
diff_words_show
unable to generate word diff
fn_out_diff_words_aux
feeding unmodified %s to diffcore
error reading from textconv command '%s'
pathspec '%s' did not match any file(s) known to git
dir.c
read directory %.*s
GIT_TRACE_UNTRACKED_STATS
GIT_FORCE_UNTRACKED_CACHE
node creation: %u
gitignore invalidation: %u
directory invalidation: %u
opendir: %u
do not know how to check file existence in arbitrary repo
dir_inside_of
dir && subdir && *dir && *subdir
.gitignore
ignore
could not create directories for %s
gitdir: %s
could not migrate git directory from '%s' to '%s'
BUG:%s:%d: unsupported magic %x
cannot use %s as an exclude file
last_matching_pattern_from_list
pattern->baselen == 0 || pattern->base[pattern->baselen - 1] == '/'
oops in prep_exclude
prep_exclude
stk->baselen == dir->basebuf.len
failed to get kernel name and information
Location %s, system %s
GIT_DISABLE_UNTRACKED_CACHE
untracked cache is disabled on this system or location
could not open directory '%s'
info/exclude
index file corrupt in repo %s
%s/modules/%s
error reading directory '%s'
error closing directory '%s'
error opening directory '%s'
TERM
dumb
GIT_EDITOR
VISUAL
EDITOR
GIT_SEQUENCE_EDITOR
sequence.editor
Terminal is dumb, but EDITOR unset
hint: Waiting for your editor to close the file...%c
editor
unable to start editor '%s'
There was a problem with the editor '%s'.
could not read file '%s'
Filtering content
external filter '%s' signaled that '%s' is now available although it has not been delayed earlier
'%s' was not filtered properly
entry.c
Can't remove entry to a path
could not stat file '%s'
%s already exists, no checkout
%s is a directory
unable to unlink old '%s'
unable to read sha1 file of %s (%s)
unable to create symlink %s
unable to create file %s
cannot create temporary submodule %s
cannot create submodule directory %s
unknown file mode for %s in index
write_entry
state->istate
unable to stat just-written file %s
.merge_link_XXXXXX
cannot opendir '%s'
cannot lstat '%s'
cannot unlink '%s'
cannot rmdir '%s'
cannot create directory at '%s'
SHIFT-JIS
GIT_ALTERNATE_OBJECT_DIRECTORIES
GIT_CONFIG
GIT_GRAFT_FILE
GIT_INDEX_FILE
GIT_NO_REPLACE_OBJECTS
GIT_REPLACE_REF_BASE
GIT_INTERNAL_SUPER_PREFIX
GIT_SHALLOW_FILE
refs/replace/
GIT_NAMESPACE
environment.c
git environment hasn't been setup
internal error: work tree has already been set
Current worktree: %s
New worktree: %s
objects/%s
UTF-8
core.sharedrepository
GIT_OPTIONAL_LOCKS
GIT_PRINT_SHA1_ELLIPSIS
refs/namespaces/%s
bad git namespace path "%s"
could not set GIT_DIR to '%s'
setup: move $GIT_DIR to '%s'
ewah_set
ewah/ewah_bitmap.c
i >= self->bit_size
ewah_iterator_next
it->literals < it->lw
it->pointer < it->buffer_size
add_empty_word
rlw_get_run_bit(self->rlw) == v
rlw_get_running_len(self->rlw) == 0
rlw_get_run_bit(self->rlw) == 0
rlw_get_literal_words(self->rlw) == 0
corrupt ewah bitmap: eof before bit size
corrupt ewah bitmap: eof before length
corrupt ewah bitmap: eof in data (%ju bytes short)
corrupt ewah bitmap: eof before rlw
exec-cmd.c
trace: could not determine executable path from: %s
trace: resolved executable dir: %s
%s/%s
GIT_EXEC_PATH
libexec/git-core
/usr/local/bin:/usr/bin:/bin
trace: exec:
trace: exec failed: %s
too many args to run %s
trace: could not normalize path: %s
trace: resolved executable path from Darwin stack: %s
trace: resolved executable path from argv0: %s
system_prefix
executable_dirname
is_absolute_path(executable_dirname)
/Applications/Xcode.app/Contents/Developer/usr
RUNTIME_PREFIX requested, but prefix computation failed.  Using static fallback '%s'.
blob:none
no matching remote head
fetch-pack.c
Protocol V2 does not provide shallows at this point in the fetch
remote did not send all necessary objects
no such remote ref %s
Server does not allow request for unadvertised object %s
fetch.unpacklimit
transfer.unpacklimit
repack.usedeltabaseoffset
fetch.fsckobjects
transfer.fsckobjects
fetch.fsck.skiplist
%cskiplist=%s
fetch.fsck.
%c%s=%s
Skipping unknown msg id '%s'
GIT_TEST_SIDEBAND_ALL
sideband-all
fetch-pack
negotiation_v2
shallow-info
wanted-refs
packfile
Marking %s as complete
want %s (%s)
already have %s (%s)
command=fetch
thin-pack
no-progress
include-tag
ofs-delta
Server does not support shallow requests
Server supports filter
filter %s
filtering not recognized by server, ignoring
unable to write request to remote
deepen %d
deepen-since %ju
deepen-not %s
deepen-relative
ref-in-want
want %s
want-ref %s
have %s
done
acknowledgments
ACK 
ready
unexpected acknowledgment line: '%s'
error processing acks: %d
expected packfile to be sent after 'ready'
expected no other sections to be sent after no 'ready'
error reading section header '%s'
expected '%s', received '%s'
invalid shallow line: %s
unshallow 
invalid unshallow line: %s
object not found: %s
error in object: %s
no shallow found: %s
expected shallow/unshallow, got %s
error processing shallow info: %d
expected wanted-ref, got '%s'
unexpected wanted-ref: '%s'
error processing wanted refs: %d
fetch-pack: unable to fork off sideband demultiplexer
protocol error: bad pack header
--shallow-file
index-pack
--fix-thin
localhost
--keep=fetch-pack %ju on %s
--check-self-contained-and-connected
--promisor
unpack-objects
--pack_header=%u,%u
--fsck-objects
--strict%s
fetch-pack: unable to fork off %s
%s failed
error in sideband demultiplexer
Server version is %.*s
Server supports %s
Server does not support shallow clients
multi_ack_detailed
no-done
multi_ack
side-band-64k
side-band
allow-tip-sha1-in-want
allow-reachable-sha1-in-want
Server does not support --shallow-since
Server does not support --shallow-exclude
Server does not support --deepen
no common commits
--stateless-rpc requires multi_ack_detailed
 multi_ack_detailed
 multi_ack
 no-done
 side-band-64k
 side-band
 deepen-relative
 thin-pack
 no-progress
 include-tag
 ofs-delta
 deepen-since
 deepen-not
 agent=%s
 filter
want %s%s
negotiation_v0_v1
have %s
got %s %d %s
invalid commit %s
giving up
got %s (%d) %s
unable to write to remote
git fetch-pack: expected shallow list
git fetch-pack: expected a flush packet after shallow list
git fetch-pack: expected ACK/NAK, got a flush packet
continue
git fetch-pack: expected ACK/NAK, got '%s'
Unhandled message id: %s
Cannot demote %s to %s
skiplist
skiplist requires a path
Missing '=': '%s'
Unknown object type for %s
no valid object to fsck
unknown type '%d' (internal fsck error)
object %s: %s
non-blob found at .gitmodules
unable to read .gitmodules blob
NUL_IN_HEADER
UNTERMINATED_HEADER
BAD_DATE
BAD_DATE_OVERFLOW
BAD_EMAIL
BAD_NAME
BAD_OBJECT_SHA1
BAD_PARENT_SHA1
BAD_TAG_OBJECT
BAD_TIMEZONE
BAD_TREE
BAD_TREE_SHA1
BAD_TYPE
DUPLICATE_ENTRIES
MISSING_AUTHOR
MISSING_COMMITTER
MISSING_EMAIL
MISSING_GRAFT
MISSING_NAME_BEFORE_EMAIL
MISSING_OBJECT
MISSING_PARENT
MISSING_SPACE_BEFORE_DATE
MISSING_SPACE_BEFORE_EMAIL
MISSING_TAG
MISSING_TAG_ENTRY
MISSING_TAG_OBJECT
MISSING_TREE
MISSING_TREE_OBJECT
MISSING_TYPE
MISSING_TYPE_ENTRY
MULTIPLE_AUTHORS
TAG_OBJECT_NOT_TAG
TREE_NOT_SORTED
UNKNOWN_TYPE
ZERO_PADDED_DATE
GITMODULES_MISSING
GITMODULES_BLOB
GITMODULES_LARGE
GITMODULES_NAME
GITMODULES_SYMLINK
GITMODULES_URL
GITMODULES_PATH
GITMODULES_UPDATE
BAD_FILEMODE
EMPTY_NAME
FULL_PATHNAME
HAS_DOT
HAS_DOTDOT
HAS_DOTGIT
NULL_SHA1
ZERO_PADDED_FILEMODE
NUL_IN_COMMIT
GITMODULES_PARSE
BAD_TAG_NAME
MISSING_TAGGER_ENTRY
Unknown fsck message type: '%s'
fsck_msg_type
fsck.c
msg_id >= 0 && msg_id < FSCK_MSG_MAX
in tree %s: entry %s has bad mode %.6o
%s^%d
%.*s~%d
append_msg_id
*msg_id
.gitmodules too large to parse
could not parse gitmodules blob
disallowed submodule name: %s
disallowed submodule url: %s
disallowed submodule path: %s
disallowed submodule update setting: %s
http::
https::
ftp::
ftps::
http://
https://
ftp://
ftps://
cannot be parsed as a tree
.gitmodules is a symbolic link
contains entries pointing to null sha1
contains full pathnames
contains empty pathname
contains '.'
contains '..'
contains '.git'
contains zero-padded file modes
contains bad file modes
contains duplicate file entries
not properly sorted
invalid format - expected 'tree' line
invalid 'tree' line format - bad sha1
invalid 'parent' line format - bad sha1
graft objects missing
parent objects missing
invalid format - expected 'author' line
invalid format - multiple 'author' lines
invalid format - expected 'committer' line
could not load commit's tree %s
NUL byte in the commit object body
unterminated header: NUL at offset %ld
unterminated header
invalid author/committer line - missing space before email
invalid author/committer line - bad name
invalid author/committer line - missing email
invalid author/committer line - bad email
invalid author/committer line - missing space before date
invalid author/committer line - zero-padded date
invalid author/committer line - date causes integer overflow
invalid author/committer line - bad date
invalid author/committer line - bad time zone
could not load tagged object
cannot read tag object
expected tag got %s
invalid format - expected 'object' line
invalid 'object' line format - bad sha1
invalid format - expected 'type' line
invalid format - unexpected end after 'type' line
invalid 'type' value
invalid format - expected 'tag' line
invalid 'tag' name: %.*s
invalid format - expected 'tagger' line
GIT_TRACE_FSMONITOR
corrupt fsmonitor extension (too short)
bad fsmonitor version %d
failed to parse ewah bitmap reading fsmonitor index extension
fsmonitor.c
fsmonitor_dirty has more entries than the index (%ju > %u)
read fsmonitor extension successful
write fsmonitor extension successful
refresh fsmonitor
fsmonitor process '%s'
fsmonitor process '%s' returned %s
failure
add fsmonitor
remove fsmonitor
fsmonitor_refresh_callback '%s'
fsmonitor_dirty has more entries than the index (%ju >= %u)
LANGUAGE
LC_ALL
LC_CTYPE
LANG
user.signingkey
gpg.format
unsupported value for %s: %s
gpg.program
gpg.openpgp.program
openpgp
gpg.x509.program
x509
--status-fd=2
-bsau
[GNUPG:] SIG_CREATED 
gpg failed to sign the data
.git_vtag_tmpXXXXXX
could not create temporary file
failed writing detached signature to '%s'
gpg-interface.c
bad signature '%s'
--status-fd=1
--verify
[GNUPG:] GOODSIG 
[GNUPG:] 
GOODSIG 
BADSIG 
TRUST_NEVER
TRUST_UNDEFINED
ERRSIG 
EXPSIG 
EXPKEYSIG 
REVKEYSIG 
VALIDSIG 
gpgsm
--keyid-format=long
-----BEGIN PGP SIGNATURE-----
-----BEGIN PGP MESSAGE-----
-----BEGIN SIGNED MESSAGE-----
log.graphcolors
graph_next_line
graph.c
diff_output_prefix_callback
ignore invalid color '%.*s' in log.graphColors
graph_output_pre_commit_line
graph->num_parents >= 3
0 <= graph->expansion_row && graph->expansion_row < num_expansion_rows
graph_output_commit_char
graph->revs->boundary
graph_output_post_merge_line
parents
par_column
graph_output_collapsing_line
target * 2 <= i
graph->new_mapping[i] == -1
graph->new_mapping[i - 1] > target
graph->new_mapping[i - 2] < 0
graph->new_mapping[i - 3] == target
match
grep.extendedregexp
grep.patterntype
grep.linenumber
grep.column
grep.fullname
color.grep
color.grep.match
color.grep.matchcontext
color.grep.matchselected
color.grep.
header
function
lineNumber
column
matchContext
matchSelected
selected
basic
extended
fixed
perl
incomplete pattern expression: %s
grep.c
a non-header pattern in grep header list.
unknown header field %d
malformed header expr
unmatched parenthesis
not a pattern expression %s
--and not followed by pattern expression
--not not followed by pattern expression
--not followed by non pattern expression
given pattern contains NULL byte (via -f <file>). This is only supported with -P under PCRE v2
fixed %s
cannot use Perl-compatible regexes when not compiled with USE_LIBPCRE
In '%s' at %d, 
%s, 
%s'%s': %s
grep_splice_or
x->node == GREP_NODE_OR
[all-match]
true
(not
(and
*and*
*not*
*or*
pattern
pattern_head
pattern_body
<head %d>
<body>
grep call which could print a name requires grep_source.name be non-NULL
unknown binary handling mode
Binary file 
 matches
invalid grep_source type to load
'%s': short read
'%s': unable to read %s
attempt to textconv something without a path?
pcre_exec failed with error code %d
regexec_buf
./git-compat-util.h
nmatch > 0 && pmatch
Not a valid grep expression
Unexpected node type (internal error) %d
match_one_pattern
p->field < ARRAY_SIZE(header_field)
regexp returned nonsense
linear-assignment.c
negative j: %d
0123456789abcdef
EMAIL
0123456789
no email was given and auto-detection is disabled
unable to auto-detect email address (got '%s')
no name was given and auto-detection is disabled
unable to auto-detect name (got '%s')
empty ident name (for <%s>) not allowed
name consists only of disallowed characters: %s
invalid date format: %s
GIT_AUTHOR_NAME
GIT_AUTHOR_EMAIL
GIT_COMMITTER_NAME
GIT_COMMITTER_EMAIL
GIT_AUTHOR_DATE
GIT_COMMITTER_DATE
user.useconfigonly
unknown
Unknown
/etc/mailname
cannot read /etc/mailname
cannot get host name
(none)
%s.(none)
*** Please tell me who you are.
  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"
to set your account's default identity.
Omit --global to set the identity only in this repository.
author.name
author.email
committer.name
committer.email
user.name
user.email
null
json-writer.c
json-writer: too many jw_end(): '%s'
json-writer: object: missing jw_object_begin(): '%s'
json-writer: object: not in object: '%s'
\u%04x
%%.%df
json-writer: object: missing jw_end(): '%s'
json-writer: array: missing jw_array_begin()
json-writer: array: not in array
memory exhausted
kwset.c
Cannot allocate a negative amount: %ld
range_set_append_unsafe
line-log.c
a <= b
range_set_append
rs->nr == 0 || rs->ranges[rs->nr-1].end <= a
sort_and_merge_range_set
o <= rs->nr
range_set_check_invariants
rs->ranges[0].start < rs->ranges[0].end
rs->ranges[i-1].end < rs->ranges[i].start
rs->ranges[i].start < rs->ranges[i].end
Non commit %s?
More than one commit to dig from: %s and %s?
No commit specified?
-L argument not 'start,end:file' or ':funcname:file': %s
malformed -L argument '%s'
file %s has only %lu lines
There is no path %s in the commit
Cannot read blob %s
nth_line
d && line <= d->lines
d->spec && d->spec->data
range_set_union
out->nr == 0
line_log_data_copy
line_log_data_copy_one
%s%sdiff --git a/%s b/%s%s
%s%s+++ b/%s%s
%s%s@@ -%ld,%ld +%ld,%ld @@%s
\ No newline at end of file
queue_diffs
move_diff_queue
src != dst
process_all_files
process_diff_filepair
pair->two->path
rg->path
pair->two->oid_valid
parse_range_funcname
line-range.c
*arg == ':'
-L parameter '%s': %s
-L parameter '%s' starting at line %ld: no match
-L parameter '%s' matches at EOF
-L parameter: regexec() failed: %s
-L invalid empty range
-L invalid line number: %ld
-L parameter '%s' starting at line %ld: %s
unable to load root tree for commit %s
traverse_trees_and_blobs
list-objects.c
base->len == 0
unknown pending object %s (%s)
bad tree object
Skipping contents of tree %s...
entry '%s' in tree %s has tree mode, but is not a tree
entry '%s' in tree %s has blob mode, but is not a blob
bad blob object
list-objects-filter.c
invalid list-objects filter choice: %d
unknown filter_situation: %d
filter_blobs_none
obj->type == OBJ_TREE
obj->type == OBJ_BLOB
(obj->flags & SEEN) == 0
filter_blobs_limit
filter_trees_depth
unable to access sparse blob in '%s'
unable to parse sparse filter data in %s
filter_sparse
filter_data->nr > 1
expected oidset to be cleared already
multiple filter-specs cannot be combined
list-objects-filter-options.c
negative growth in ALLOC_GROW_BY
no filter_spec available for this filter
blob:limit=%lu
remote.%s.promisor
remote.%s.partialclonefilter
filter_options already populated
blob:limit=
tree:
expected 'tree:<depth>'
sparse:oid=
sparse:path=
sparse:path filters support has been dropped
combine:
invalid filter-spec '%s'
expected something after combine:
parse_combine_filter
subspecs[sub]->buf[last] == '+'
must escape char in sub-filter-spec: '%c'
~`!@#$^&*()[]{}\;'",<>?
Add to combine filter-spec: %s
conflict-marker-size
merge.default
driver
%s: lacks value
recursive
ll_ext_merge
ll-merge.c
opts
custom merge driver %s lacks command line.
.merge_file_XXXXXX
built-in binary merge
built-in 3-way text merge
union
built-in union merge
ll_binary_merge
Cannot merge binary files: %s (%s vs. %s)
ll_xdl_merge
ll_union_merge
Unable to create '%s.lock': %s.
Another git process seems to be running in this repository, e.g.
an editor opened by 'git commit'. Please make sure all processes
are terminated then try again. If it still fails, a git process
may have crashed in this repository earlier:
remove the file manually to continue.
Unable to create '%s.lock': %s
.lock
lockfile.c
get_locked_file_path() called for malformed lock object
tag: 
v%d-
%04d-%s
Subject: [%s%s%0*d/%d] 
Subject: [%s] 
Subject: 
From %s Mon Sep 17 00:00:00 2001
Message-Id: <%s>
In-Reply-To: <%s>
%s<%s>
References: 
%sMIME-Version: 1.0
Content-Type: multipart/mixed; boundary="%s%s"
This is a multi-part message in MIME format.
--%s%s
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Transfer-Encoding: 8bit
--%s%s
Content-Type: text/x-patch; name="%s"
Content-Transfer-Encoding: 8bit
Content-Disposition: %s; filename="%s"
attachment
inline
commit 
 (from %s)
log size %i
stdout
remoteBranch
stash
grafted
object names
invalid replace ref %s
replaced
refs/stash
No signature
%s%.*s%s%s
malformed mergetag
merged tag '%s'
tag %s names a non-parent %s
parent #%d, tagged '%s'
HEAD:.mailmap
.mailmap
unable to open mailmap at %s
unable to read mailmap object at %s
mailmap is not a blob: %s
cannot find path %s in tree %s
unable to read tree (%s)
%s is not a tree
cannot read tree %s
entry %s in tree %s is not a tree
entry %.*s not found in tree %s
merge-%s
failed to read the cache
unable to write new index file
merge_trees
merge-recursive.c
opt->ancestor != NULL
constructed merge base
merge_recursive
opt->ancestor == NULL || !strcmp(opt->ancestor, "constructed merge base")
Could not parse object '%s'
Unable to write index.
GIT_MERGE_VERBOSITY
subtree=
diff-algorithm=
renormalize
no-renormalize
find-renames=
rename-threshold=
merge_start
opt->repo
opt->branch1 && opt->branch2
opt->detect_renames >= -1 && opt->detect_renames <= DIFF_DETECT_COPY
opt->detect_directory_renames >= MERGE_DIRECTORY_RENAMES_NONE && opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE
opt->rename_limit >= -1
opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE
opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1
opt->xdl_opts >= 0
opt->recursive_variant >= MERGE_VARIANT_NORMAL && opt->recursive_variant <= MERGE_VARIANT_THEIRS
opt->verbosity >= 0 && opt->verbosity <= 5
opt->buffer_output <= 2
opt->obuf.len == 0
opt->priv == NULL
Your local changes to the following files would be overwritten by merge:
  %s
Already up to date!
merging of trees %s and %s failed
unprocessed path??? %s
get_directory_renames
entry->new_dir.len == 0
CONFLICT (rename/rename): Rename directory %s->%s in %s. Rename directory %s->%s in %s
WARNING: Avoiding applying %s -> %s rename to %s, because %s itself was renamed.
entry->non_unqiue_dir not set and !new_path
CONFLICT (directory rename split): Unclear where to place %s because directory %s was renamed to multiple other directories, with no destination getting a majority of the files.
collision_ent is NULL
CONFLICT (implicit dir rename): Existing file/dir at %s in the way of implicit directory rename(s) putting the following path(s) there: %s.
CONFLICT (implicit dir rename): Cannot map more than one path to %s; implicit directory renames tried to put these paths there: %s
Refusing to lose dirty file at %s
ren1_src != ren2_src
ren1_dst != ren2_dst
cannot read object %s '%s'
blob expected for %s '%s'
failed to open '%s': %s
failed to symlink '%s': %s
do not know what to do with %06o %s '%s'
failed to create path '%s'%s
Removing %s to make room for subdirectory
: perhaps a D/F conflict?
refusing to lose untracked file at '%s'
add_cacheinfo failed for path '%s'; merge aborting.
add_cacheinfo failed to refresh for path '%s'; merge aborting.
process_entry
opt->branch1 == ci->ren1->branch
Removing %s
file/directory
directory/file
CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s
Adding %s
CONFLICT (add/add): Merge conflict in %s
fatal merge failure, shouldn't happen.
warn_about_dir_renamed_entries
opt->detect_directory_renames > MERGE_DIRECTORY_RENAMES_NONE
ren->dir_rename_original_type == 'A' || ren->dir_rename_original_type == 'R'
Path updated: %s added in %s inside a directory that was renamed in %s; moving it to %s.
CONFLICT (file location): %s added in %s inside a directory that was renamed in %s, suggesting it should perhaps be moved to %s.
Path updated: %s renamed to %s in %s, inside a directory that was renamed in %s; moving it to %s.
CONFLICT (file location): %s renamed to %s in %s, inside a directory that was renamed in %s, suggesting it should perhaps be moved to %s.
Impossible dir_rename_original_type/clean combination
handle_rename_via_dir
ren->dir_rename_original_dest
Error: Refusing to lose untracked file at %s; writing to %s instead.
CONFLICT (rename/add): Rename %s->%s in %s.  Added %s in %s
version of %s from %s
Failed to execute internal merge
Unable to add %s to database
unsupported object type in the tree
Auto-merging %s
merge_3way
a->path && b->path && o->path && opt->ancestor
Failed to merge submodule %s (not checked out)
Failed to merge submodule %s (commits not present)
Failed to merge submodule %s (commits don't follow merge-base)
Fast-forwarding submodule %s to the following commit:
Fast-forwarding submodule %s
Failed to merge submodule %s (merge following commits not found)
Failed to merge submodule %s (not fast-forward)
Found a possible merge resolution for the submodule:
If this is correct simply add it to the index for example
by using:
  git update-index --cacheinfo 160000 %s "%s"
which will accept this suggestion.
Failed to merge submodule %s (multiple merges found)
virtual %s
(bad commit)
 %h: %m %s
renamed
CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree.
CONFLICT (%s/delete): %s deleted in %s and %s to %s in %s. Version %s of %s left in tree.
CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree at %s.
CONFLICT (%s/delete): %s deleted in %s and %s to %s in %s. Version %s of %s left in tree at %s.
CONFLICT (rename/rename): Rename "%s"->"%s" in branch "%s" rename "%s"->"%s" in "%s"%s
 (left unresolved)
%s and %s, both renamed from %s
%s is a directory in %s adding as %s instead
Refusing to lose untracked file at %s; adding as %s instead
CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s
cannot read object %s
object %s is not a blob
modify
modified
merged
Refusing to lose untracked file at %s, even though it's in the way.
content
add/add
handle_content_merge
o->path && a->path && b->path
Skipped %s (merged same as existing)
CONFLICT (%s): Merge conflict in %s
Adding as %s instead
merge.renamelimit
Merging:
found %u common ancestor:
found %u common ancestors:
ancestor
empty tree
merged common ancestors
Temporary merge branch 1
Temporary merge branch 2
merge returned no commit
merged tree
merge.verbosity
merge.renames
merge.directoryrenames
conflict
multi-pack-index file %s is too small
multi-pack-index signature 0x%08x does not match signature 0x%08x
multi-pack-index version %d not recognized
hash version %u does not match
invalid chunk offset (too large)
terminating multi-pack-index chunk id appears earlier than expected
multi-pack-index missing required pack-name chunk
multi-pack-index missing required OID fanout chunk
multi-pack-index missing required OID lookup chunk
multi-pack-index missing required object offsets chunk
multi-pack-index pack names out of order: '%s' before '%s'
midx.c
midx
load/num_packs
load/num_objects
bad pack-int-id: %u (%u total packs)
%s/pack/%s
GIT_TEST_MULTI_PACK_INDEX
core.multipackindex
failed to clear multi-pack-index at %s
Looking for referenced packfiles
failed to load pack in position %d
oid fanout out of order: fanout[%d] = %x > %x = fanout[%d]
Verifying OID order in MIDX
oid lookup out of order: oid[%d] = %s >= %s = oid[%d]
Sorting objects by packfile
Verifying object offsets
failed to load pack entry for oid[%d] = %s
failed to load pack-index for packfile %s
incorrect object offset for oid[%d] = %s: %llx != %llx
pack-objects
/pack/pack
could not start pack-objects
could not finish pack-objects
%s/pack/multi-pack-index
error preparing packfile from multi-pack-index
pack
unable to create leading directories of %s
did not see pack-file %s to drop
incorrect chunk offsets: %llu before %llu
chunk offset %llu is not properly aligned
incorrect chunk offset (%llu != %llu) for chunk id %x
trying to write unknown chunk id %x
incorrect final offset %llu != %llu
.idx
failed to add packfile '%s'
failed to open pack-index '%s'
failed to locate object %d in packfile
incorrect pack-file order: %s before %s
OIDs not in order: %s >= %s
object %s is in an expired pack with int-id %d
object %s requires a large offset (%llx) but the MIDX is not writing large offsets!
too many large-offset objects
name-hash.c
initialize name hash
unable to create lazy_dir thread: %s
unable to join lazy_dir_thread
unable to create lazy_name thread: %s
unable to join lazy_name thread: %s
handle_range_dir
begin >= 0
cache entry out of order
hash_dir_entry_with_parent_and_prefix
(parent != NULL) ^ (strchr(prefix->buf, '/') == NULL)
negotiator/skipping.c
missing parent in priority queue
received ack for commit %s not sent as 'have'
string_list_add_refs_by_glob
notes.c
list->strdup_strings
notes ref %s is invalid
GIT_NOTES_REF
refs/notes/commits
init_notes
!t->initialized
Cannot use notes ref %s
Failed to read notes tree referenced by %s (%s)
init_display_notes
!display_notes_trees
GIT_NOTES_DISPLAY_REF
add_note
t->initialized
remove_note
get_note
for_each_note
write_notes_tree
prune_notes
format_display_notes
display_notes_trees
notes/
Could not read %s for notes-index
prefix_len (%ju) is out of range
prefix_len (%ju) is too small
Failed to load %s %s into notes tree from %s
note
subtree
notes.displayref
note_tree_insert
GET_PTR_TYPE(entry) == 0
GET_PTR_TYPE(*p) == PTR_TYPE_NOTE || GET_PTR_TYPE(*p) == PTR_TYPE_SUBTREE
note_tree_remove
i == n && parent_stack[i] == tree
note_tree_consolidate
tree && parent
CLR_PTR_TYPE(parent->a[index]) == tree
for_each_note_helper
path_len < FANOUT_PATH_MAX - 1
construct_path_with_fanout
fanout < the_hash_algo->rawsz
write_each_note
note_path_len <= GIT_MAX_HEXSZ + FANOUT_PATH_SEPARATORS
write_each_note_helper
memchr(path + 3 * n, '/', path_len - (3 * n)) == NULL
tree_write_stack_init_subtree
!tws->next
tws->path[0] == '\0' && tws->path[1] == '\0'
Notes:
Notes (%s):
refs/notes/%s
update notes cache
create_notes_commit
notes-utils.c
Failed to write notes tree to database
Failed to find/parse commit %s
Failed to commit notes tree to database
Cannot commit uninitialized/unreferenced notes tree
notes: 
manual
ours
cat_sort_uniq
GIT_NOTES_REWRITE_MODE
GIT_NOTES_REWRITE_REF
Bad %s value: '%s'
overwrite
concatenate
notes.rewrite.
notes.rewritemode
Bad notes.rewriteMode value: '%s'
notes.rewriteref
Refusing to rewrite notes in %s (outside of refs/notes/)
invalid object type "%s"
object %s is a %s, not a %s
object %s has unknown type id %d
unable to parse object: %s
hash mismatch %s
could not open object name list: %s
invalid object name: %s
Could not read '%s'
%s/pack/pack-%s.%s
pack_report: getpagesize()            = %10ju
pack_report: core.packedGitWindowSize = %10ju
pack_report: core.packedGitLimit      = %10ju
pack_report: pack_used_ctr            = %10u
pack_report: pack_mmap_calls          = %10u
pack_report: pack_open_windows        = %10u / %10u
pack_report: pack_mapped              = %10ju / %10ju
index file %s is too small
empty data
index file %s is version %u and is not supported by this binary (try upgrading GIT to a newer version)
non-monotonic index %s
wrong index v1 file size in %s
wrong index v2 file size in %s
.pack
packfile.c
pack_name does not end in .pack
%.*s.idx
pack '%s' still has open windows to it
want to close pack marked 'do-not-close'
.keep
.bitmap
.promisor
packfile %s cannot be accessed
offset beyond end of packfile (truncated pack?)
offset before end of packfile (broken .idx?)
packfile %s cannot be mapped
/pack
unable to open object pack directory: %s
bad object header
delta data unpack-initial failed
bad packed object CRC for %s
failed to validate delta base reference at offset %ju from %s
unpack_entry: left loop at a valid delta
unknown object type %i at offset %ju in %s
failed to read delta base object %s at offset %ju from %s
failed to unpack compressed delta at offset %ju from %s
failed to apply delta
bsearch_pack called without a valid pack-index
offset before start of pack index for %s (corrupt index?)
offset beyond end of pack index for %s (truncated index?)
unable to get sha1 of object %u in %s
packfile %s index unavailable
packfile %s not a regular file
packfile %s size changed
cannot determine file descriptor flags
cannot set FD_CLOEXEC
error reading from %s
file %s is far too short to be a packfile
file %s is not a GIT packfile
packfile %s is version %u and not supported (try upgrading GIT to a newer version)
packfile %s claims to have %u objects while index indicates %u objects
end of packfile %s is unavailable
packfile %s signature is unavailable
packfile %s does not match index
multi-pack-index
I am totally screwed
GIT_TRACE_PACK_ACCESS
%s %ju
packfile %s index not opened
Packfile index for %s hash mismatch
%s pack checksum mismatch
%s pack checksum does not match its index
internal error pack-check nth-packed-object
index CRC mismatch for object %s from %s at offset %ju
cannot unpack %s from %s at offset %ju
packed %s from %s is corrupt
bad offset for revindex
write_idx_file
pack-write.c
index_name
pack/tmp_idx_XXXXXX
The same object %s appears twice in the pack
Failed seeking to start of '%s'
Unable to reread header of '%s'
Unexpected short read for header of '%s'
Failed to checksum '%s'
Unexpected checksum for %s (disk corruption?)
keep
%s/pack/pack-%s.keep
bad type %d
object size is too enormous to format
pack/tmp_pack_XXXXXX
unable to make temporary pack file readable
unable to make temporary index file readable
%s.pack
unable to rename temporary pack file
%s.idx
unable to rename temporary index file
GIT_PAGER
PAGER
less
pager
COLUMNS
GIT_PAGER_IN_USE
core.pager
LESS=FRX LV=-c
malformed build-time PAGER_ENV: %s
malformed build-time PAGER_ENV
pager.
BUG: switch '%c' (--%s) %s
BUG: option '%s' %s
BUG: switch '%c' %s
-git-completion-helper
parse-options.c
parse_short_opt() cannot return these
end-of-options
help-all
help
parse_long_opt() cannot return these
GIT_TEST_DISALLOW_ABBREVIATED_OPTIONS
unknown switch `%c'
unknown non-ascii option in string: `%s'
fatal: %s
switch `%c'
option `no-%s'
option `%s'
STOP_AT_NON_OPTION and KEEP_UNKNOWN don't go together
Can't keep argv0 if you don't have it
uses incompatible flags LASTARG_DEFAULT and OPTARG
invalid short name
short name already used
uses feature not supported for dashless options
should not accept an argument
OPTION_CALLBACK needs one callback
OPTION_CALLBACK can't have two callbacks
OPTION_LOWLEVEL_CALLBACK needs a callback
OPTION_LOWLEVEL_CALLBACK needs no high level callback
OPT_ALIAS() should not remain at this point. Are you using parse_options_step() directly?
That case is not supported yet.
multi-word argh should use dash to separate words
%s takes no value
%s isn't available
BITOP can't have unset form
%s expects a non-negative integer value with an optional k/m/g suffix
opt->type %d should not happen
--%s
%s is incompatible with %s
%s : incompatible with something else
%s requires a value
 --%s%s
 --%s
 --no-%s
did you mean `--%s` (with two dashes ?)
disallowed abbreviated or ambiguous option '%.*s'
ambiguous option: %s (could be --%s%s or --%s%s)
An alias must have long option name
No please. Nested aliases are not supported.
could not find source option '%s' of alias '%s'
cat <<\EOF
usage: %s
   or: %s
    %s
-NUM
alias of --%s
%*s%s
()<>[]|
[=%s]
[=<%s>]
[%s]
[<%s>]
 <%s>
option `%s' expects a numerical value
malformed expiration date '%s'
option `%s' expects "always", "auto", or "never"
parse-options-cb.c
malformed object name %s
no such commit %s
malformed object name '%s'
--no-
unexpected delta opcode 0
delta replay has gone wild
Could not get patch ID for %s
refs/
ref:
HOME
/.git
.git/.git
.git
path.c
Could not make %s writable by group
gitmodules
gi7eba
gitignore
gi250a
gitattributes
gi7d29
xdg_config_home
filename
XDG_CONFIG_HOME
%s/git/%s
%s/.config/git/%s
xdg_cache_home
XDG_CACHE_HOME
%s/.cache/git/%s
CHERRY_PICK_HEAD
REVERT_HEAD
SQUASH_MSG
MERGE_MSG
MERGE_RR
MERGE_MODE
MERGE_HEAD
FETCH_HEAD
shallow
branches
common
hooks
info
info/sparse-checkout
logs
logs/HEAD
logs/refs/bisect
logs/refs/rewritten
logs/refs/worktree
lost-found
objects
refs
refs/bisect
refs/rewritten
refs/worktree
remotes
worktrees
rr-cache
config
gc.pid
packed-refs
worktrees/%s
grafts
index
pathspec.c
PATHSPEC_PREFER_CWD and PATHSPEC_PREFER_FULL are incompatible
PATHSPEC_PREFER_CWD requires arguments
empty string is not a valid pathspec. please use . instead if you meant to match all paths
pathspec '%s' is beyond a symbolic link
PATHSPEC_MAXDEPTH_VALID and PATHSPEC_KEEP_ORDER are incompatible
'prefix' magic is supposed to be used at worktree's root
%s: 'literal' and 'glob' are incompatible
%s: '%s' is outside repository
error initializing pathspec_item
prefix:
invalid parameter for pathspec magic 'prefix'
attr:
Invalid pathspec magic '%.*s' in '%s'
Missing ')' at the end of pathspec magic in '%s'
Only one 'attr:' specification is allowed.
attr spec must not be empty
invalid attribute name %s
should have same number of entries
Escape character '\' not allowed as last character in attr value
cannot use '%c' for value matching
literal
icase
attr
Unimplemented pathspec magic '%c' in '%s'
global 'glob' and 'noglob' pathspec settings are incompatible
global 'literal' pathspec setting is incompatible with all other global pathspec settings
GIT_GLOB_PATHSPECS
GIT_NOGLOB_PATHSPECS
GIT_ICASE_PATHSPECS
GIT_LITERAL_PATHSPECS
,prefix:%d)
'%s' (mnemonic: '%c')
'%s'
%s: pathspec magic not supported by this command: %s
0000
unable to write flush packet
0001
unable to write delim packet
flush packet write failed
0123456789abcdef
packet write failed
protocol error: impossibly long line
protocol error: bad line length character: %.4s
protocol error: bad line length %d
ERR 
remote error: %s
PACK
PACK
PACK ...
packet: %12s%c 
pkt-line.c
GIT_TRACE_PACKET
GIT_TRACE_PACKFILE
sideband
packet write with format failed
packet write failed - data exceeds max packet size
multiple sources given to packet_read
read error
the remote end hung up unexpectedly
./strbuf.h
GIT_TEST_PRELOAD_INDEX
Refreshing index
unable to create threaded lstat: %s
unable to join threaded lstat
preload-index.c
preload index
format:
tformat:
invalid --pretty format: %s
From: 
 <%.*s>
%s: %.*s%.*s <%.*s>
    
Date:   %s
Date: %s
%sDate: %s
MIME-Version: 1.0
Content-Type: text/plain; charset=%s
Content-Transfer-Encoding: 8bit
medium
email
mboxrd
fuller
full
pretty.
invalid --pretty format: '%s' references an alias which points to itself
=?%s?q?
=%02X
 =?%s?q?
encoding 
(auto)
(trailers
separator
unfold
valueonly
auto,
always,
unable to parse --pretty format
trunc)
ltrunc)
mtrunc)
author 
committer 
From 
bad parent line in commit
Author
Commit
Merge:
prio-queue.c
prio_queue_reverse() on non-LIFO queue
done
, %s.
%3u%% (%ju/%ju)%s
%ju%s
  %s%*s
%s:%*s
  %s%s
%s: %s%*s
core.partialclonefilter
promisor
partialclonefilter
promisor remote name cannot begin with '/': %s
Remote with no URL
from-promisor
no-dependents
GIT_ASKPASS
SSH_ASKPASS
GIT_TERMINAL_PROMPT
terminal prompts disabled
could not read %s%s
unable to read askpass response from '%s'
GIT_TEST_PROTOCOL_VERSION
protocol.version
unknown value for config 'protocol.version': %s
unknown value for %s: %s
GIT_PROTOCOL
version 
server is speaking an unknown protocol
protocol error: server explicitly said version 0
could not parse log for '%s'
--no-color
--decorate=no
--no-prefix
--output-indicator-new=>
--output-indicator-old=<
--output-indicator-context=#
could not start `log`
could not read `log` output
diff --git
could not parse git header '%.*s'
 ## 
%s (new)
%s (deleted)
%s => %s
 (mode change %06o => %06o)
Author: 
 ## Metadata ##
 ## Commit message ##
 %s:
range-diff.c
already assigned!
failed to generate diff
%*s:  %s 
%*d:  %s 
 %*s:  %s
 %*d:  %s
^ ## (.*) ##$
^.?@@ (.*)$
cannot create an empty blob in the object database
%s: can only add regular files, symbolic links or git-directories
'%s' does not have a commit checked out
unable to index file '%s'
unable to add '%s' to index
add '%s'
unable to stat '%s'
invalid path '%s'
Refresh index
%s: needs update
%s: needs merge
read-cache.c
refresh index
%s: index file open failed
%s: cannot stat the open index
%s: index file smaller than expected
%s: unable to map index file
unable to create load_index_extensions thread: %s
unable to join load_index_extensions thread: %s
read/version
read/cache_nr
index file corrupt
do_read_index
read cache %s
%s/sharedindex.%s
shared/do_read_index
broken index, expect %s in %s, got %s
cache entry is not allocated from expected memory pool
GIT_TEST_CHECK_CACHE_TREE
GIT_TEST_SPLIT_INDEX
sharedindex_XXXXXX
sharedindex.%s
%s: cannot drop to stage #0
GIT_TEST_VALIDATE_INDEX_CACHE_ENTRIES
./fsmonitor.h
mark_fsmonitor_clean '%s'
unsupported ce_mode: %o
will not add file alias '%s' ('%s' already exists in index)
mark_fsmonitor_invalid '%s'
modules
'%s' appears as both a file and as a directory
overflow: -1 - %ju
bad signature 0x%08x
bad index version %d
bad index file sha1 signature
index uses %.4s extension, which we do not understand
ignoring %.4s extension
the name hash isn't thread safe
unable to create load_cache_entries thread: %s
unable to join load_cache_entries thread: %s
unknown index entry format 0x%08x
malformed name field in the index, near path '%s'
unordered stage entries in index
multiple stage entries for merged file '%s'
unordered stage entries for '%s'
could not freshen shared index '%s'
do_write_index
post-index-change
GIT_ALLOW_NULL_SHA1
write index, changed mask = %x
write/version
write/cache_nr
GIT_INDEX_VERSION
index.version set, but the value is invalid.
Using version %i
GIT_INDEX_VERSION set, but the value is invalid.
Using version %i
index.recordoffsettable
index.recordendofindexentries
shared/do_write_index
cannot fix permission bits on '%s'
unable to open git dir: %s
sharedindex.
unable to unlink: %s
could not stat '%s'
splitindex.sharedindexexpire
2.weeks.ago
invalid IEOT version %d
invalid number of IEOT entries %d
Commands:
p, pick <commit> = use commit
r, reword <commit> = use commit, but edit the commit message
e, edit <commit> = use commit, but stop for amending
s, squash <commit> = use commit, but meld into previous commit
f, fixup <commit> = like "squash", but discard this commit's log message
x, exec <command> = run command (the rest of the line) using shell
b, break = stop here (continue rebase later with 'git rebase --continue')
d, drop <commit> = remove commit
l, label <label> = label current HEAD with a name
t, reset <label> = reset HEAD to a label
m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
.       create a merge commit using the original merge commit's
.       message (or the oneline, if no original merge commit was
.       specified). Use -c <commit> to reword the commit message.
These lines can be re-ordered; they are executed from top to bottom.
Rebase %s onto %s (%d command)
Rebase %s onto %s (%d commands)
Do not remove any line. Use 'drop' explicitly to remove a commit.
If you remove a line here THAT COMMIT WILL BE LOST.
You are editing the todo file of an ongoing interactive rebase.
To continue rebase after editing, run:
    git rebase --continue
However, if you remove everything, the rebase will be aborted.
Note that empty commits are commented out
could not copy '%s' to '%s'.
 - %s %.*s
Warning: some commits may have been dropped accidentally.
Dropped commits (newer to older):
To avoid this message, use "drop" to explicitly remove a commit.
Use 'git config rebase.missingCommitsCheck' to change the level of warnings.
The possible behaviours are: ignore, warn, error.
rebase.missingcommitscheck
unrecognized setting %s for option rebase.missingCommitsCheck. Ignoring.
cannot walk reflogs for %s
no current branch
%s@{
Reflog: %s (%s)
Reflog message: %s
refs/%s
refs.c
sanitizing refname '%s' check returned error
%s does not point to a valid object!
refs/tags/
%sHEAD
pattern must not start with '/'
ignoring dangling symref %s
ignoring broken ref %s
core.filesreflocktimeout
refs_delete_ref
refs == get_main_ref_store(the_repository)
refs/notes/
log for %s is empty
ref_store_transaction_begin
free called on a prepared reference transaction
unexpected reference transaction state
update called for transaction that is not open
ref_transaction_update
refusing to update ref with bad name '%s'
illegal flags 0x%x passed to ref_transaction_update()
create called without valid new_oid
delete called with old_oid set to zeros
verify called with old_oid set to NULL
refs_update_ref
update_ref failed for ref '%s': %s
refs_shorten_unambiguous_ref
offset < total_len
transfer.hiderefs
hiderefs
GIT_REF_PARANOIA
reference iterator is not ordered
%srefs/
attempting to get main_ref_store outside of repository
submodule
worktree
ref_update_reject_duplicates
multiple updates for ref '%s' not allowed
ref_update_reject_duplicates() received unsorted list
prepare called twice on reference transaction
prepare called on a closed reference transaction
GIT_QUARANTINE_PATH
ref updates forbidden inside quarantine environment
abort called on a closed reference transaction
commit called on a closed reference transaction
refs_verify_refname_available
'%s' exists; cannot create '%s'
cannot process '%s' and '%s' at the same time
error while iterating over references
refs/%.*s
refs/tags/%.*s
refs/heads/%.*s
refs/remotes/%.*s
refs/remotes/%.*s/HEAD
refs/worktree/
refs/bisect/
refs/rewritten/
main-worktree/
worktrees/
could not read ref '%s'
unexpected object ID when deleting '%s'
log for ref %s has gap after %s
log for ref %s unexpectedly ended on %s
could not open '%s' for writing: %s
ref '%s' already exists
unexpected object ID when writing '%s'
files
reference backend %s is unknown
%s ref_store '%s' initialized twice
%s/packed-refs
files-backend $GIT_DIR
files-backend $GIT_COMMONDIR
init_db
refs/heads
refs/tags
refs/files-backend.c
ref_store is type "%s" not "files" in %s
operation %s requires abilities 0x%x, but only have 0x%x
ref %s is not a main pseudoref
unknown ref type %d of ref %s
ref_transaction_prepare
files_transaction_prepare
REF_IS_PRUNING set without REF_NO_DEREF
lock_ref_for_update
cannot lock ref '%s': %s
cannot lock ref '%s': error reading reference
cannot update ref '%s': %s
couldn't close '%s.lock'
operation %s only allowed for main ref store
multiple updates for 'HEAD' (including one via its referent '%s') are not allowed
%s unexpectedly not 'HEAD'
lock_raw_ref
unable to resolve reference '%s'
unable to create lock file %s.lock; non-directory in the way
unable to create directory for %s
there is a non-empty directory '%s' blocking reference '%s'
unable to resolve reference '%s': reference broken
unable to resolve reference '%s': %s
cannot lock ref '%s': reference already exists
cannot lock ref '%s': reference is missing but expected %s
cannot lock ref '%s': is at %s but expected %s
multiple updates for '%s' (including one via symref '%s') are not allowed
%s unexpectedly found in affected_refnames
trying to write ref '%s' with nonexistent object %s
trying to write non-commit object %s to branch '%s'
couldn't write '%s'
error aborting transaction: %s
ref_transaction_finish
files_transaction_finish
cannot update the ref '%s': %s
couldn't set '%s'
unable to append to '%s': %s
unable to create directory for '%s': %s
there are still logs under '%s'
%s %s %s
%s/logs/%s
refname %s is not a other-worktree ref
%s/worktrees/%.*s/logs/%s
ref_transaction_abort
initial_ref_transaction_commit
files_initial_transaction_commit
commit called for transaction that is not open
initial ref transaction called with existing refs
initial ref transaction with old_sha1 set
pack_refs
failure preparing to create packed reference %s: %s
unable to write new packed-refs: %s
fill_ref_dir
loose refname is dangerous: %s
create_symref
lock_ref_oid_basic
there are still refs under '%s'
can't verify ref '%s'
ref '%s' is at %s but expected %s
unable to fdopen %s: %s
ref: %s
unable to write symref for %s: %s
no symlink - falling back to symbolic ref
delete_refs
could not remove reference %s
could not delete reference %s: %s
could not delete references: %s
rename_ref
refs/.tmp-renamed-log
reflog for %s is a symlink
refname %s not found
refname %s is a symbolic ref, copying it is not supported
refname %s is a symbolic ref, renaming it is not supported
unable to move logfile logs/%s to logs/refs/.tmp-renamed-log: %s
unable to copy logfile logs/%s to logs/refs/.tmp-renamed-log: %s
unable to delete old %s
Directory not empty: %s
unable to delete existing %s
unable to copy '%s' to '%s': %s
unable to rename '%s' to '%s': %s
unable to write current sha1 into %s: %s
unable to lock %s for rollback: %s
unable to restore logfile %s from %s: %s
unable to restore logfile %s from logs/refs/.tmp-renamed-log: %s
directory not empty: %s
unable to move logfile %s to %s: %s
commit_ref_update
ref_iterator_begin
read_raw_ref
reflog_iterator_begin
%s/logs
bad ref for %s
ref_iterator_peel() called for reflog_iterator
for_each_reflog_ent
for_each_reflog_ent_reverse
cannot seek back reflog for %s: %s
cannot read %d bytes from reflog for %s: %s
reverse reflog parser had leftover data
reflog_exists
create_reflog
delete_reflog
reflog_expire
cannot fdopen %s (%s)
couldn't write %s: %s
couldn't write %s
unable to write reflog '%s' (%s)
couldn't set %s
would prune %s
prune %s
%s %s %s %ju %+05d
keep %s
refs/iterator.c
overlay_ref_iterator requires ordered inputs
peel called for empty iterator
peel called before advance for merge iterator
attempt to trim too many characters
packed_refs_lock
core.packedrefstimeout
unable to close %s: %s
packed_refs_unlock
refs/packed-backend.c
packed_refs_unlock() called when not locked
packed_refs_is_locked
is_packed_transaction_needed
is_packed_transaction_needed() called while unlocked
packed
ref_store is type "%s" not "packed" in %s
unallowed operation (%s), requires %x, has %x
error ummapping packed-refs file %s
# pack-refs with:
fully-peeled
peeled
couldn't read %s
couldn't stat %s
unterminated line in %s: %.*s
unterminated line in %s: %.75s...
unexpected line in %s: %.*s
unexpected line in %s: %.75s...
unterminated line found in packed-refs
unterminated peeled line found in packed-refs
write_with_updates() called while unlocked
%s.new
unable to create file %s: %s
unable to fdopen packed-refs tempfile: %s
cannot update ref '%s': reference already exists
cannot update ref '%s': is at %s but expected %s
cannot update ref '%s': reference is missing but expected %s
unable to write packed-refs file: error iterating over old contents
error closing file %s: %s
error writing to %s: %s
error replacing %s: %s
packed reference store does not support symrefs
packed reference store does not support renaming references
packed reference store does not support copying references
packed refname is dangerous: %s
packed reference store does not support reflogs
get_ref_dir
refs/ref-cache.c
entry->flag & REF_DIR
incomplete ref_store without fill_ref_dir function
Reference directory conflict: %s
Duplicated ref, and SHA1s don't match: %s
Duplicated ref: %s
invalid refspec '%s'
refs/tags/*
remote.c
query_refspecs: need either src or dst
HEAD does not point to a branch
no such branch: '%s'
no upstream configured for branch '%s'
upstream branch '%s' not stored as a remote-tracking branch
couldn't find remote ref %s
* Ignoring funny ref '%s' locally
Your branch is based on '%s', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)
Your branch is up to date with '%s'.
Your branch and '%s' refer to different commits.
  (use "%s" for details)
git status --ahead-behind
Your branch is ahead of '%s' by %d commit.
Your branch is ahead of '%s' by %d commits.
  (use "git push" to publish your local commits)
Your branch is behind '%s' by %d commit, and can be fast-forwarded.
Your branch is behind '%s' by %d commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)
Your branch and '%s' have diverged,
and have %d and %d different commit each, respectively.
Your branch and '%s' have diverged,
and have %d and %d different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
refs/heads/master
make_remote
replaced == NULL
remotes/%s
URL:
Push:
Pull:
branches/%s
master
refs/heads/%s:refs/heads/%s
HEAD:refs/heads/%s
pushremote
insteadof
pushinsteadof
pushdefault
config remote shorthand cannot begin with '/': %s
mirror
skipdefaultupdate
skipfetchall
prune
prunetags
pushurl
more than one receivepack given, using the first
more than one uploadpack given, using the first
tagopt
--no-tags
proxy
proxyauthmethod
Cannot fetch both %s and %s to %s
%s usually tracks %s, not %s
%s tracks both %s and %s
Internal error
key '%s' of pattern had no '*'
value '%s' of pattern has no '*'
src refspec %s does not match any
src refspec %s matches more than one
%s cannot be resolved to branch
unable to delete '%s': remote ref does not exist
dst refspec %s matches more than one
dst ref %s receives from more than one src
The destination you provided is not a full refname (i.e.,
starting with "refs/"). We tried to guess what you meant by:
- Looking for a ref that matches '%s' on the remote side.
- Checking if the <src> being pushed ('%s')
  is a ref in "refs/{heads,tags}/". If so we add a corresponding
  refs/{heads,tags}/ prefix on the remote side.
Neither worked, so we gave up. You must fully qualify the ref.
'%s' is not a valid object, match_explicit_lhs() should catch this!
The <src> part of the refspec is a commit object.
Did you mean to create a new branch by pushing to
'%s:refs/heads/%s'?
The <src> part of the refspec is a tag object.
Did you mean to create a new tag by pushing to
'%s:refs/tags/%s'?
The <src> part of the refspec is a tree object.
Did you mean to tag a new tree by pushing to
'%s:refs/tags/%s'?
The <src> part of the refspec is a blob object.
Did you mean to tag a new blob by pushing to
'%s:refs/tags/%s'?
'%s' should be commit/tag/tree/blob, is '%d'
(delete)
refs/heads/%s
branch '%s' has no remote for pushing
push refspecs for '%s' do not include '%s'
push has no destination (push.default is 'nothing')
cannot resolve 'simple' push to a single destination
unhandled push situation
push destination '%s' on remote '%s' has no local tracking branch
heads/
tags/
remotes/
stat_branch_pair: invalid abf '%d'
%s...%s
query_refspecs_multiple: need either src or dst
cannot parse expected object name '%s'
replace depth too high for object %s
bad replace ref name: %s
duplicate replace ref: %s
core.commitgraph
gc.writecommitgraph
index.version
core.untrackedcache
keep
fetch.negotiationalgorithm
skipping
pack.usesparse
feature.manyfiles
fetch.writecommitgraph
feature.experimental
info/grafts
repository.c
%s/.git
modules/%s
%s%s/
the repo hasn't been setup
rr-cache/%s
rr-cache/%s/%s
rr-cache/%s/%s.%d
gc.rerereresolved
gc.rerereunresolved
unable to open rr-cache directory
rerere.enabled
rerere.autoupdate
corrupt MERGE_RR
there were errors while writing '%s' (%s)
failed to flush '%s'
could not parse conflict hunks in '%s'
postimage
preimage
Recorded resolution for '%s'.
Resolved '%s' using previous resolution.
cannot unlink stray '%s'
Recorded preimage for '%s'
thisimage
failed utime() on '%s'
writing '%s' failed
rerere.c
Staged '%s' using previous resolution.
failed to update conflicted state in '%s'
no remembered resolution for '%s'
Updated preimage for '%s'
Forgot resolution for '%s'
write_rr
rr->items[i].util != RERERE_RESOLVED
id->variant >= 0
%s.%d
%s%c
%s%c
unable to write rerere record
%o%c
Index records invalid resolve-undo information
cannot unmerge '%s'
unknown option `%s'
--stdin
--stdin given twice?
--end-of-options
revision.c
bad revision '%s'
--combined-all-paths makes no sense without -c or --cc
cannot combine --reverse with --walk-reflogs
cannot combine --walk-reflogs with history-limiting options
cannot combine --parents and --children
cannot combine --reverse with --graph
cannot combine --walk-reflogs with --graph
cannot combine --no-walk with --graph
cannot use --grep-reflog without --walk-reflogs
--first-parent is incompatible with --bisect
-L does not yet support diff formats besides -p and -s
treesame
bad object %s
reflog of '%s' references pruned commits
unable to add index blob to traversal
Invalid symmetric difference expression %s
Invalid revision range %s
--branches
--tags
--reflog
--no-walk
--do-walk
--bisect
--glob=
--indexed-objects
--alternate-refs
--exclude=
--branches=
--tags=
--remotes=
--no-walk=
max-count
skip
'%s': not a non-negative integer
-n requires an argument
max-age
since
after
min-age
before
until
--first-parent
--ancestry-path
--walk-reflogs
--default
bad --default argument
--merge
--topo-order
--simplify-merges
--simplify-by-decoration
--date-order
--author-date-order
--early-output
--early-output=
--parents
--dense
--sparse
--in-commit-order
--remove-empty
--merges
--no-merges
--min-parents=
--no-min-parents
--max-parents=
--no-max-parents
--boundary
--left-right
--left-only
--left-only is incompatible with --right-only or --cherry
--right-only
--right-only is incompatible with --left-only
--cherry
--cherry is incompatible with --left-only
--count
--cherry-mark
--cherry-mark is incompatible with --cherry-pick
--cherry-pick
--cherry-pick is incompatible with --cherry-mark
--objects
--objects-edge
--objects-edge-aggressive
--verify-objects
--unpacked
--unpacked=
--unpacked=<packfile> no longer supported.
--combined-all-paths
--cc
--pretty
--pretty=
--format=
--expand-tabs
--no-expand-tabs
--expand-tabs=
--show-notes
--notes
--show-signature
--no-show-signature
--show-linear-break
                    ..........
--show-linear-break=
--show-notes=
--notes=
--no-notes
--standard-notes
--no-standard-notes
--oneline
oneline
--graph
--root
--no-commit-id
--always
--no-abbrev
--abbrev
--abbrev=
--abbrev-commit
--no-abbrev-commit
--full-diff
--full-history
--relative-date
date
--log-size
author
committer
grep-reflog
grep
--grep-debug
--basic-regexp
--extended-regexp
--regexp-ignore-case
--fixed-strings
--perl-regexp
--all-match
--invert-grep
encoding
--reverse
--children
children
--ignore-missing
--exclude-promisor-objects
exclude_promisor_objects can only be used when fetch_if_missing is 0
--show-linear-break and --graph are incompatible
--single-worktree cannot be used together with submodule
glob
exclude
sorted
unsorted
invalid argument to --no-walk
--single-worktree
refs/bisect/%s
.alternate
options not supported in --stdin mode
--merge without HEAD?
--merge without MERGE_HEAD?
your current branch appears to be broken
your current branch '%s' does not have any commits yet
unable to parse commit %s
%s is unknown object
--ancestry-path given but there are no bottom commits
cannot simplify commit %s (because of %s)
cannot simplify commit %s (invalid %s)
bad tree compare for commit %s
update_treesame %s
mark_redundant_parents %d %d %d %d
compact_treesame %u
compact_treesame parents mismatch
reflog 
author 
committer 
%.*s <%.*s>
Failed to traverse parents of commit %s
Failed to simplify parents of commit %s
run-command.c
standard input
standard output
standard error
cannot create %s pipe for %s: %s
cannot run %s
open /dev/null failed
cannot fork() for %s
run_command with a pipe can cause deadlock
cannot create pipe
cannot create async thread: %s
pthread_join failed
hooks/%s
The '%s' hook was ignored because it's not set as executable.
You can disable this warning with `git config advice.ignoredHook false`.
max:%d
PATH
trace: run_command:
 cd 
 git
 unset
 %s=
command is empty
/bin/sh
shell command is empty
|&;<>()$`\"' 
*?[#~=%
%s "$@"
size_t overflow: %ju * %ju
blocking all signals
disabling cancellation
die() should not be called in child
error() should not be called in child
warn() should not be called in child
re-enabling cancellation
restoring signal mask
trace: run_command: running exit handler for pid %ju
waitpid for %s failed
waitpid is confused (%s)
%s died of signal %d
exec '%s': cd to '%s' failed
dup2() in child failed
close() in child failed
sigprocmask failed restoring signals
cannot exec '%s'
fatal: 
unable to block SIGPIPE in async thread
strbuf_setlen
poll failed
run_processes_parallel: preparing to run up to %d tasks
you need to specify a get_next_task function
bookkeeping is hard
poll
read
run_processes_parallel: done
if-asked
report-status
delete-refs
no-thin
atomic
push-options
push-cert
the receiving end does not support --signed push
not sending a push certificate since the receiving end does not support --signed push
No refs in common and none specified; doing nothing.
Perhaps you should specify a branch such as 'master'.
the receiving end does not support --atomic push
the receiving end does not support push options
 report-status
 quiet
 atomic
 push-options
%s %s %s%c%s
send-pack: unable to fork off sideband demultiplexer
the receiving end asked to sign an invalid nonce <%.*s>
certificate version 0.1
pusher %s 
pushee %s
nonce %s
push-option %s
%s %s %s
failed to sign the push certificate
push-cert%c%s
push-cert-end
atomic push failed for ref %s. status: %d
send-pack
--revs
--progress
--shallow
git pack-objects failed
error writing to pack-objects
pack-objects died of signal %d
unexpected flush packet while reading remote unpack status
unpack 
unable to parse remote unpack status: %s
remote unpack failed: %s
invalid ref status from remote: %s
remote reported status on unknown ref: %s
remote reported status on unexpected ref: %s
COMMIT_EDITMSG
sequencer
rebase-merge/git-rebase-todo.backup
(rebase -i) cleanup
could not delete '%s'
could not remove '%s'
verbatim
scissors
Invalid cleanup mode %s
'GIT_AUTHOR_NAME' already given
'GIT_AUTHOR_EMAIL' already given
'GIT_AUTHOR_DATE' already given
unknown variable '%s'
missing 'GIT_AUTHOR_NAME'
missing 'GIT_AUTHOR_EMAIL'
missing 'GIT_AUTHOR_DATE'
amend
Notes added by 'git commit --amend'
couldn't look up newly created commit
could not parse newly created commit
format:%h] %s
%an <%ae>
%cn <%ce>
 Author: 
 Date: 
 Committer: 
unable to resolve HEAD after creating commit
[%s%s 
 (root-commit)
invalid line %d: %.*s
cannot '%s' without a previous commit
cancelling a cherry picking in progress
cancelling a revert in progress
GIT_QUIET
--rerere-autoupdate
--no-rerere-autoupdate
-S%s
--signoff
cannot open '%s'
cannot read '%s': %s
unexpected end of file
stored pre-cherry-pick HEAD file '%s' is corrupt
cannot abort from a branch yet to be born
You seem to have moved HEAD. Not rewinding, check your HEAD!
no revert in progress
no cherry-pick in progress
sequencer.c
unexpected action in sequencer_skip
failed to skip the commit
there is nothing to skip
have you committed already?
try "git %s --continue"
checkout %s
could not checkout %s
sequencer_pick_revisions
opts->revs
%s: can't cherry-pick a %s
%s: bad revision
empty commit set passed
unexpected extra commit from walk
can't revert as initial commit
pick
rebase.instructionFormat
make_script: unhandled options
make_script: error preparing revisions
%s %s 
nothing to do
could not skip unnecessary pick commands
could not write '%s'
the script was already rearranged.
fixup! 
squash! 
fixup!
commit.cleanup
invalid commit message cleanup mode '%s'
commit.gpgsign
rebase-merge/refs-to-delete
no key present in '%.*s'
unable to dequote value of '%s'
post-rewrite
sequencer/todo
edit
reword
fixup
squash
break
drop
%s does not accept arguments: '%s'
missing arguments for %s
could not parse '%.*s'
unknown command: %d
rebase-merge/quiet
rebase-merge/verbose
rebase-merge/strategy
rebase-merge/strategy_opts
rebase-merge/allow_rerere_autoupdate
rebase-merge/gpg_sign_opt
rebase-merge/signoff
rebase-merge/reschedule-failed-exec
sequencer/head
no cherry-pick or revert in progress
cannot resolve HEAD
could not read '%s'
sequencer/abort-safety
rebase -i
unknown action: %d
GIT_REFLOG_ACTION=%s
git %s: failed to read the index
git %s: failed to refresh the index
--rerere-autoupdate
--no-rerere-autoupdate
unusable squash-onto
malformed options sheet: '%s'
rebase-merge/current-fixups
rebase-merge/squash-onto
sequencer/opts
options.no-commit
options.edit
options.allow-empty
options.allow-empty-message
options.keep-redundant-commits
options.signoff
options.record-origin
options.allow-ff
options.mainline
options.strategy
options.gpg-sign
options.strategy-option
options.allow-rerere-auto
options.default-msg-cleanup
invalid value for %s: %s
please fix this using 'git rebase --edit-todo'.
unusable instruction sheet: '%s'
no commits parsed.
cannot cherry-pick during a revert.
cannot revert during a cherry-pick.
rebase-merge/end
cannot rebase: You have unstaged changes.
cannot amend non-existing commit
invalid file: '%s'
invalid contents: '%s'
You have uncommitted changes in your working tree. Please, commit them
first and then run 'git rebase --continue' again.
Incorrect current_fixups:
could not write file: '%s'
squash 
squash 
could not remove CHERRY_PICK_HEAD
could not commit staged changes.
rebase-merge/message-fixup
rebase-merge/message-squash
could not parse HEAD
HEAD %s is not a commit!
could not parse HEAD commit
--amend
-S%s
--cleanup=strip
--cleanup=verbatim
--allow-empty
--allow-empty-message
GIT_AUTHOR_NAME=%s
GIT_AUTHOR_EMAIL=%s
GIT_AUTHOR_DATE=%s
rebase-merge/author-script
rebase-merge/message
your local changes would be overwritten by %s.
commit your changes or stash them to proceed.
rebase-merge/stopped-sha
rebase-merge/rewritten-pending
%.*s %s
rebase-merge/rewritten-list
GIT_REFLOG_ACTION
pick_commits
!(opts->signoff || opts->no_commit || opts->record_origin || opts->edit)
Rebasing (%d/%d)%s
REBASE_HEAD
Stopped at %s...  %.*s
unknown command %d
cannot read HEAD
could not read orig-head
could not read 'onto'
finish
%s onto %s
could not update %s
returning to %s
could not update HEAD to %s
notes
--for-rewrite=rebase
Successfully rebased and updated %s.
could not lock '%s'
failed to finalize '%s'
rebase-merge/msgnum
Stopped at HEAD
Stopped at %s
%s... %s
parent of %s
your index file is unmerged.
cannot fixup root commit
commit %s is a merge but no -m option was given.
commit %s does not have parent %d
%s: cannot parse parent commit %s
Revert "
This reverts commit 
, reversing
changes made to 
could not rename '%s' to '%s'
could not revert %s... %s
could not apply %s... %s
unable to parse commit author
GIT_AUTHOR_NAME='
'\%c'
GIT_AUTHOR_EMAIL='
GIT_AUTHOR_DATE='@
%s: fast-forward
This is a combination of %d commits.
need a HEAD to fixup
could not read HEAD
could not read HEAD's commit message
cannot write '%s'
This is the 1st commit message:
could not read commit message of %s
This is the commit message #%d:
The commit message #%d will be skipped:
%s%s %s
(empty tree)
%s: Unable to write new index file
GIT_CHERRY_PICK_HELP
after resolving the conflicts, mark the corrected paths
with 'git add <paths>' or 'git rm <paths>'
after resolving the conflicts, mark the corrected paths
with 'git add <paths>' or 'git rm <paths>'
and commit the result with 'git commit'
could not resolve HEAD commit
unable to update cache tree
unable to read commit message from '%s'
gpgsig
git write-tree failed to write a tree
prepare-commit-msg
failed to write commit object
GIT_EDITOR=:
message
'prepare-commit-msg' hook failed
unable to copy '%s' to '%s'
You can amend the commit now, with
  git commit --amend %s
Once you are satisfied with your changes, run
  git rebase --continue
Could not apply %s... %.*s
Could not merge %.*s
%s/patch
%s/message
could not copy '%s' to '%s'
Executing: %s
GIT_DIR=%s
GIT_WORK_TREE=%s
could not read index
execution failed: %s
%sYou can fix the problem, and then run
  git rebase --continue
and made changes to the index and/or the working tree
execution succeeded: %s
but left changes to the index and/or the working tree
Commit or stash your changes, and then run
  git rebase --continue
illegal label name: '%.*s'
refs/rewritten/%.*s
rebase -i (label) '%.*s'
[new root]
writing fake root commit
writing squash-onto
failed to find tree of %s
could not write index
'%.*s'
cannot merge without a current revision
unable to parse '%.*s'
nothing to merge: '%.*s'
octopus merge cannot be executed on top of a [new root]
could not get commit message of '%s'
author %s
Merge %s '%.*s'
octopus
-X%s
--no-edit
--no-ff
--no-log
--no-stat
no-ff
could not even attempt to merge '%.*s'
merge: Unable to write new index file
could not resolve '%s'
%s %s %.*s
revert is already in progress
try "git revert (--continue | %s--abort | --quit)"
cherry-pick is already in progress
try "git cherry-pick (--continue | %s--abort | --quit)"
unexpected action in create_seq_dir
--skip | 
could not create sequencer directory '%s'
could not lock HEAD
invalid cleanup_mode provided (%d)
onto
Merge 
Merge pull request 
 from 
%s -C %s
 # %s
branch-point
%s onto
%c Branch %s
%s %s # %s
could not parse commit %s
could not parse parent commit %s
%.*s
 %.*s
could not write eol to '%s'
could not read '%s'.
apply
Applied autostash.
store
autostash
cannot store %s
Applying autostash resulted in conflicts.
Your changes are safe in the stash.
You can run "git stash pop" or "git stash drop" at any time.
rebase-merge/autostash
%s: not a valid OID
could not detach HEAD
could not parse commit '%s'
%.*s%s
'%s' is outside repository
failed to stat '%s'
option '%s' must come before non-option arguments
ambiguous argument '%s': both revision and filename
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
GIT_COMMON_DIR
%s/commondir
HEAD
GIT_OBJECT_DIRECTORY
/refs
is_nonbare_repository_dir
setup.c
orig_path_len != 0
unable to set up work tree using invalid config
this operation must be run in a work tree
GIT_WORK_TREE
Expected git repo version <= %d, found %d
unknown repository extensions found:
error opening '%s'
too large to be a .git file: '%s'
error reading %s
invalid gitfile format: %s
no path in gitfile: %s
not a git repository: %s
unknown error code
gitdir: 
%.*s%.*s
%s/config
ignoring git dir '%s': %s
Unable to read current working directory
cannot change to '%s'
not a git repository (or any of the parent directories): %s
not a git repository (or any parent up to mount point %s)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
unhandled setup_git_directory_1() result
GIT_PREFIX
GIT_DIR
umask
group
world
everybody
problem with core.sharedRepository filemode value (0%.3o).
The owner of files must always have read and write permissions.
open /dev/null or dup failed
fork failed
setsid failed
%s: no such path in the working tree.
Use 'git <command> -- <path>...' to specify paths that do not exist locally.
ambiguous argument '%s': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
core.repositoryformatversion
extensions.
noop
preciousobjects
partialclone
worktreeconfig
core.bare
core.worktree
GIT_CEILING_DIRECTORIES
GIT_DISCOVERY_ACROSS_FILESYSTEM
failed to stat '%*s%s%s'
'$%s' too big
not a git repository: '%s'
core.bare and core.worktree do not make sense
cannot chdir to '%s'
cannot come back to cwd
GIT_IMPLICIT_WORK_TREE
/config
%s/config.worktree
sha1-lookup.c
assertion failed in binary search
sha1
sha256
raceproof_create_file
sha1-file.c
*path
objects/info/alternates
unable to fdopen alternates lockfile
unable to read alternates file
unable to move new alternates file into place
path '%s' does not exist
%s/.git/objects
%s/objects
reference repository '%s' as a linked checkout is not supported yet.
reference repository '%s' is not a local repository.
%s/shallow
reference repository '%s' is shallow
%s/info/grafts
reference repository '%s' is grafted
mmap failed
%s %ju
failed to read object %s
replacement %s not found for %s
loose object %s (stored in %s) is corrupt
packed object %s (stored in %s) is corrupt
tree 
object 
unable to write file %s
unable to set permission to '%s'
cannot read object for %s
open("%s")
%s: failed to insert into database
readlink("%s")
%s: unsupported file type
%s is not a valid object
%s is not a valid '%s' object
invalid loose object subdirectory: %x
%02x
unable to open %s
unable to mmap %s
unable to unpack header of %s
unable to parse header of %s
unable to unpack contents of %s
hash mismatch for %s (expected %s)
trying to init unknown hash
trying to update unknown hash
trying to finalize unknown hash
0123456789abcdef
%s: ignoring alternate object stores, nesting too deep
unable to normalize object directory: %s
unable to normalize alternate object path: %s
object directory %s does not exist; check .git/objects/info/alternates
/objects
invalid line while parsing alternate refs: %s
core.alternateRefsCommand
--git-dir=%s
for-each-ref
--format=%(objectname)
core.alternateRefsPrefixes
%s/info/alternates
GIT_MMAP_LIMIT
attempting to mmap %ju over limit %ju
object file %s is empty
invalid object type
unable to unpack %s header with --allow-unknown-type
unable to unpack %s header
unable to parse %s header with --allow-unknown-type
unable to parse %s header
insufficient permission for adding an object to repository database %s
unable to create temporary file
unable to write loose object file
unable to deflate new object %s (%d)
deflateEnd on object %s failed (%d)
confused by unstable object source data for %s
failed utime() on %s
tmp_obj_XXXXXX
/tmp_obj_XXXXXX
file write error
loose object file
error when closing loose object file
index_stream_convert_blob
would_convert_to_git_filter_fd(istate, path)
corrupt commit
corrupt tag
read error while indexing %s
short read while indexing %s
BUG: strbuf_setlen() beyond buffer
!strbuf_slopbuf[0]
corrupt loose object '%s'
garbage at end of loose object '%s'
none
committish
tree
treeish
blob
unknown hint type for '%s': %s
%.*s: expected %s type, but the object dereferences to %s type
refs/heads/
refs/heads/HEAD
sha1-name.c
incompatible flags for get_sha1_with_context
0123456789abcdef
checkout: moving from 
 to 
refs/remotes/
@{upstream}
@{u}
@{push}
Invalid object name '%.*s'.
commit}
tag}
tree}
blob}
object}
refname '%.*s' is ambiguous.
Git normally never creates a ref that ends with 40 hex characters
because it will be ignored when you just specify 40-hex. These refs
may be created by mistake. For example,
  git switch -c $br $(git rev-parse ...)
where "$br" is somehow empty and a 40-hex ref is created. Please
examine these refs and maybe delete them. Turn this message off by
running "git config advice.objectNameWarning false"
Log for '%.*s' only goes back to %s.
Log for '%.*s' only has %d entries.
multiple get_short_oid disambiguator flags
short SHA1 %s is ambiguous
The candidates are:
show_ambiguous_object shouldn't return non-zero
qsort_s() failed
 %ad - %s
  %s %s%s
unknown type
relative path syntax can't be used outside working tree.
Path '%s' is in the index, but not at stage %d.
Did you mean ':%d:%s'?
Path '%s' is in the index, but not '%s'.
Did you mean ':%d:%s' aka ':%d:./%s'?
Path '%s' exists on disk, but not in the index.
Path '%s' does not exist (neither on disk nor in the index).
Path '%s' exists on disk, but not in '%.*s'.
Path '%s' exists, but not '%s'.
Did you mean '%.*s:%s' aka '%.*s:./%s'?
Path '%s' does not exist in '%.*s'
shallow.c
is_repository_shallow must not be called before set_alternate_shallow_file
bad shallow line: %s
no commits selected for shallow requests
shallow_XXXXXX
failed to write to %s
GIT_TRACE_SHALLOW
shallow: prepare_shallow_info
shallow: remove_nonexistent_theirs_shallow
shallow: assign_shallow_commits_to_refs
Removing %s from .git/shallow
shallow %s
shallow must be initialized by now
shallow file has changed since we read it
shallow %s
pool size too small for %d in paint_alloc()
shallow: post_assign_shallow
        
%s%s: protocol error: no band designator
remote: 
%s%s: protocol error: bad band #%d
%04x
warning
success
color.remote
sigchain.c
signal out of range: %d
corrupt link extension (too short)
corrupt delete bitmap in link extension
corrupt replace bitmap in link extension
garbage at the end of link extension
corrupt link extension, entry %d should have non-zero length name
split-index.c
ce refers to a shared ce at %d, which is beyond the shared index size %d
prepare_to_write_split_index
!(ce->ce_flags & CE_STRIP_NAME)
position for replacement %d exceeds base index size %d
too many replacements (%d vs %d)
entry %d is marked as both replaced and deleted
corrupt link extension, entry %d should have zero length name
position for delete %d exceeds base index size %d
you want to use way too much memory
`pos' is too far after the end of the buffer
`pos + len' is too far after the end of the buffer
strbuf.c
your vsnprintf is broken (returned %d)
your vsnprintf is broken (returns inconsistent lengths)
your vsnprintf is broken (insatiable)
strbuf_getwholeline
r == -1
Out of memory, getdelim failed
"<>&
&quot;
&lt;
&gt;
&amp;
%+05d
%%%02x
%u.%2.2u GiB
%u.%2.2u GiB/s
%u.%2.2u MiB
%u.%2.2u MiB/s
%u.%2.2u KiB
%u.%2.2u KiB/s
%u byte
%u bytes
%u byte/s
%u bytes/s
string-list.c
internal error in string_list_split(): list->strdup_strings must be set
internal error in string_list_split_in_place(): list->strdup_strings must not be set
Cannot change unmerged .gitmodules, resolve merge conflicts first
Could not find section in .gitmodules where path=%s
submodule.
.path
Could not remove .gitmodules entry for %s
staging updated .gitmodules failed
objects/
submodule.%s.ignore
submodule.recurse
submodule.%s.active
submodule.active
submodule.%s.url
in unpopulated submodule '%s'
Pathspec '%s' is in submodule '%.*s'
checkout
rebase
bad --ignore-submodules argument: %s
%s=%s
(revision walker failed)
diff
--submodule=diff
--color=%s
--src-prefix=%s%s/
--dst-prefix=%s%s/
(diff failed)
find_unpushed_submodules
--not
--remotes=%s
Failed to resolve HEAD as a valid ref.
Pushing submodule '%s'
Unable to push submodule '%s'
fetch
--recurse-submodules-default
parallel/fetch
'%s' not recognized as a git repository
status
--porcelain=2
-uno
Could not run 'git status --porcelain=2' in submodule %s
submodule.c
invalid status --porcelain=2 line %s
S..U
'git status --porcelain=2' failed in submodule %s
foreach
--quiet
--recursive
test -f .git
--porcelain
--ignore-submodules=none
-uall
--ignored
could not start 'git status' in submodule '%s'
could not run 'git status' in submodule '%s'
%s/modules/%s/config
Could not unset core.worktree setting in submodule '%s'
could not get submodule information for '%s'
submodule '%s' has dirty index
--super-prefix=%s%s/
read-tree
--recurse-submodules
--reset
Submodule '%s' could not be updated.
update-ref
--no-deref
submodule name '%s' not a suffix of git dir '%s'
submodule git dir '%s' is inside git dir '%.*s'
could not lookup name for submodule '%s'
we don't know how to pass the flags down?
--super-prefix
submodule--helper
absorb-git-dirs
could not recurse into submodule '%s'
--literal-pathspecs
ls-files
--stage
--full-name
could not start ls-files in ..
160000
returned path string doesn't match cwd?
ls-tree returned unexpected return code %d
(new submodule)
(submodule deleted)
(commits not present)
Submodule %s 
 (rewind)
revision walk setup failed
Submodule in commit %s at path: '%s' collides with a submodule named the same. Skipping it.
rev-list
--remotes
Could not run 'git rev-list <commits> --not --remotes -n 1' command in submodule %s
--all
submodule entry '%s' (%s) is a %s, not a commit
push-check
process for submodule '%s' failed
push
--dry-run
--push-option=%s
Fetching submodule %s%s
--submodule-prefix
Could not access submodule '%s'
origin
submodule.%s.fetchRecurseSubmodules
%s=.
callback cookie bogus
diff-index
--cached
could not reset submodule index
relocate_gitdir for submodule '%s' with more than one worktree not supported
refusing to move '%s' into an existing git dir
could not create directory '%s'
Migrating git directory of '%s%s' from
'%s' to
'%s'
negative values not allowed for submodule.fetchjobs
.gitmodules
Could not update .gitmodules entry %s
on-demand
bad %s argument: %s
check
only
:.gitmodules
HEAD:.gitmodules
fetchrecursesubmodules
untracked
dirty
Invalid parameter '%s' for config option 'submodule.%s.ignore'
update
invalid value for %s
branch
ignoring suspicious submodule name: %s
ignoring '%s' which may be interpreted as a command-line option: %s
WORKTREE
%s:.gitmodules, multiple configurations found for 'submodule.%s.%s'. Skipping second one!
%s:.gitmodules
submodule.fetchjobs
fetch.recursesubmodules
status=
subprocess
cannot fork to run subprocess '%s'
initialization for subprocess '%s' failed
%s-client
Could not write client identification
version=%d
Could not write requested version
Could not write flush packet
-server
Unexpected line '%s', expected %s-server
<flush packet>
version=
Unexpected line '%s', expected version
Unexpected line '%s', expected flush
Version %d not supported
capability=%s
Could not write requested capability
capability=
subprocess '%s' requested unsupported capability '%s'
%s: cannot verify a non-tag object of type %s.
%s: unable to read file.
missing object referenced by '%.*s'
type 
Unknown type %s
tag 
tagger 
Object %s not a tag
bad tag
no signature found
cannot fix permission bits on %s
TMPDIR
/tmp
tempfile.c
fdopen_tempfile() called for inactive object
fdopen_tempfile() called for open object
get_tempfile_path() called for inactive object
get_tempfile_fd() called for inactive object
get_tempfile_fp() called for inactive object
reopen_tempfile called for an inactive object
reopen_tempfile called for an open object
rename_tempfile called for inactive object
activate_tempfile called for active object
GIT_TRACE
GIT_TRACE_PERFORMANCE
GIT_TRACE_SETUP
trace.c
Too deep indentation
(null)
setup: git_dir: %s
setup: git_common_dir: %s
setup: worktree: %s
setup: cwd: %s
setup: prefix: %s
unable to write trace for %s: %s
GIT_TRACE_BARE
%02d:%02d:%02d.%06ld 
%s:%d 
performance: %.9f s
:%.*s 
could not open '%s' for tracing: %s
unknown trace value for '%s': %s
         If you want to trace into a file, then please set %s
         to an absolute pathname (starting with /)
git command:%s
thread-proc on main: %s
thread-proc on main
GIT_TRACE2_PARENT_NAME
af_unix:
unable to write trace to '%s': %s
trace2: not opening %s trace file due to too many files in target directory %s
trace2: could not open '%.*s' for '%s' tracing: %s
git-trace2-discard
trace2: could not open '%s' for '%s' tracing: %s
af_unix:stream:
af_unix:dgram:
trace2: invalid AF_UNIX value '%s' for '%s' tracing
trace2: invalid AF_UNIX path '%s' for '%s' tracing
trace2: could not connect to socket '%s' for '%s' tracing: %s
trace2: unknown value for '%s': '%s'
GIT_TRACE2_PARENT_SID
Localhost
-P%08x
trace2/tr2_sysenv.c
tr2_sysenv_get invalid var '%d'
trace2.
GIT_TRACE2_CONFIG_PARAMS
trace2.configparams
GIT_TRACE2_DST_DEBUG
trace2.destinationdebug
GIT_TRACE2
trace2.normaltarget
GIT_TRACE2_BRIEF
trace2.normalbrief
GIT_TRACE2_EVENT
trace2.eventtarget
GIT_TRACE2_EVENT_BRIEF
trace2.eventbrief
GIT_TRACE2_EVENT_NESTING
trace2.eventnesting
GIT_TRACE2_PERF
trace2.perftarget
GIT_TRACE2_PERF_BRIEF
trace2.perfbrief
GIT_TRACE2_MAX_FILES
trace2.maxfiles
%02d:%02d:%02d.%06ld
%4d-%02d-%02dT%02d:%02d:%02d.%06ldZ
%4d%02d%02dT%02d%02d%02d.%06ldZ
version
event
thread
atexit
time
line
repo
too_many_files
start
t_abs
argv
exit
code
signal
trace2/tr2_tgt_event.c
signo
cmd_path
cmd_name
name
hierarchy
cmd_mode
alias
child_start
child_id
child_class
hook
hook_name
use_shell
child_exit
t_rel
thread_start
thread_exit
exec
exec_id
exec_result
def_param
param
value
def_repo
region_enter
nesting
category
label
region_leave
data
data_json
version %s
start 
exit elapsed:%.6f code:%d
signal elapsed:%.6f code:%d
trace2/tr2_tgt_normal.c
atexit elapsed:%.6f code:%d
cmd_path %s
cmd_name %s
 (%s)
cmd_mode %s
alias %s -> 
child_start[%d]
git 
child_exit[%d] pid:%d code:%d elapsed:%.6f
exec[%d] 
exec_result[%d] code:%d
 err:%s
def_param %s=%s
worktree 
%s:%d
d%d | 
%-*s | %-*s | 
r%d 
%9.6f | 
%9s | 
%-*.*s | 
code:%d
signo:%d
trace2/tr2_tgt_perf.c
alias:%s argv:[
[ch%d] class:hook hook:%s
[ch%d] class:%s
 cd:
 argv:[
[ch%d] pid:%d code:%d
id:%d 
argv:[
id:%d code:%d
%s:%s
worktree:
label:%s
printf
th%02d:
trace2/tr2_tls.c
no open regions in thread '%s'
main
addIfDifferent
addIfDifferentNeighbor
replace
doNothing
could not rename temporary file to %s
trailer.
where
unknown value '%s' for key '%s'
ifexists
ifmissing
separators
more than one %s
trailer.c
trailer.c: unhandled type %d
command
could not read input file '%s'
could not read from stdin
file %s is not a regular file
file %s is not writable by user
git-interpret-trailers-XXXXXX
could not open temporary file
empty trailer token in trailer '%.*s'
trailer.c: unhandled value %d
$ARG
running trailer command '%s' failed
%s%c %s
Signed-off-by: 
(cherry picked from commit 
%s: 
updating local tracking ref '%s'
update by push
could not parse transport.color.* config
transport.c
taking over transport requires non-NULL smart_options field.
GIT_PROTOCOL_FROM_USER
invalid protocol_allow_config type
transport '%s' not allowed
No remote provided to transport_get()
rsync:
git-over-rsync is no longer supported
file://
git://
ssh://
git+ssh://
ssh+git://
git-upload-pack
git-receive-pack
transport_push
get_refs_list
push_submodules
failed to push all needed submodules
check_submodules
push_refs
Done
Everything up-to-date
operation not supported by protocol
color.transport.reset
color.transport.rejected
color.transport
To %s
[no match]
[rejected]
remote does not support deleting refs
[up to date]
non-fast-forward
already exists
fetch first
needs force
stale info
new shallow roots not allowed
[remote rejected]
[remote failure]
remote failed to report status
atomic push failed
%s:%s
%s (%s)
 %s%c %-*s%s 
%s -> %s
[deleted]
[new tag]
[new branch]
forced update
unknown protocol version
buffer must be empty at the end of handshake()
see protocol.version in 'git help config' for more details
server options require protocol version 2 or later
support for protocol v2 not implemented yet
GIT_ALLOW_PROTOCOL
protocol.%s.allow
protocol.allow
http
https
user
unknown value for config '%s': %s
could not read bundle '%s'
thin
followtags
updateshallow
depth
transport: invalid depth option '%s'
deepen-since
deepen-not
deepen-relative
pre-push
%s %s %s %s
The following submodule paths contain changes that can
not be found on any remote:
  %s
Please try
git push --recurse-submodules=on-demand
or cd to the path and use
git push
to push them to a remote.
Aborting.
Would set upstream of '%s' to '%s' of '%s'
GIT_TRANSPORT_HELPER_DEBUG
remote input
stdin
remote output
option %s 
git-remote-%s
unable to find remote helper for '%s'
transport-helper.c
can't dup helper output fd
capabilities
Debug: Got cap %s
option
import
bidi-import
export
check-connectivity
refspec 
connect
stateless-connect
signed-tags
export-marks 
import-marks 
no-private-update
unknown mandatory capability %s; this remote helper probably needs newer version of Git
this remote helper should implement refspec capability
Debug: Capabilities complete.
Debug: Remote helper: -> %s
full write to remote helper failed
Debug: Remote helper: Waiting...
Debug: Remote helper quit.
Debug: Remote helper: <- %s
progress
verbosity
family
ipv4
ipv6
unsupported
%s unexpectedly said: '%s'
servpath
setting remote service path not supported by protocol
invalid remote service path
connect %s
stateless-connect %s
Debug: Smart transport connection ready.
fallback
Debug: Falling back to dumb transport.
unknown response to connect: %s
list for-push
list
malformed response in ref list: %s
unchanged
could not read ref %s
Debug: Read ref listing.
cloning
update-shallow
Ignoring --negotiation-tip because the protocol does not support it.
fetch %s %s
lock 
%s also locked %s
connectivity-ok
couldn't run fast-import
import %s
error while running fast-import
fast-import
--allow-unsafe-features
--stats
--cat-blob-fd=%d
push 
dry-run
helper %s does not support dry-run
pushcert
helper %s does not support --signed
helper %s does not support --signed=if-asked
helper %s does not support --atomic
push-option
helper %s does not support 'push-option'
update by helper
error 
expected ok/error, helper said '%s'
no match
up to date
non-fast forward
helper reported unexpected status of %s
remote-helper doesn't support push; refspec needed
force
helper %s does not support 'force'
export
--refspec
couldn't run fast-export
error while running fast-export
%s.tmp
fast-export
--use-done-feature
--signed-tags=verbatim
--signed-tags=warn-strip
--export-marks=%s.tmp
--import-marks=%s
can't connect to subservice %s
Debug: Disconnecting.
can't start thread for copying data: %s
Git to program copy
Program to git copy
%s is readable
read(%s) failed
%s EOF (with %i bytes in buffer)
Read %i bytes from %s (buffer now at %i)
GIT_TRANSLOOP_DEBUG
Transfer loop debugging: %s
%s is writable
write(%s) failed
Wrote %i bytes to %s (buffer now at %i)
Closed %s.
%s thread failed
%s thread failed to join: %s
emit_path
tree-diff.c
t || tp
Object %s not a tree
Commit %s in submodule path %s%s not found
Invalid commit %s in submodule path %s%s
unable to read tree %s
tree-walk.c
too small buffer passed to make_traverse_path
traverse_info pathlen does not match strings
traverse_info ran out of list items
too-short tree object
malformed mode in tree entry
empty filename in tree entry
too-short tree file
Your local changes to the following files would be overwritten by checkout:
%%sPlease commit your changes or stash them before you switch branches.
Your local changes to the following files would be overwritten by checkout:
Your local changes to the following files would be overwritten by merge:
%%sPlease commit your changes or stash them before you merge.
Your local changes to the following files would be overwritten by merge:
Your local changes to the following files would be overwritten by %s:
%%sPlease commit your changes or stash them before you %s.
Your local changes to the following files would be overwritten by %s:
Updating the following directories would lose untracked files in them:
The following untracked working tree files would be removed by checkout:
%%sPlease move or remove them before you switch branches.
The following untracked working tree files would be removed by checkout:
The following untracked working tree files would be removed by merge:
%%sPlease move or remove them before you merge.
The following untracked working tree files would be removed by merge:
The following untracked working tree files would be removed by %s:
%%sPlease move or remove them before you %s.
The following untracked working tree files would be removed by %s:
The following untracked working tree files would be overwritten by checkout:
%%sPlease move or remove them before you switch branches.
The following untracked working tree files would be overwritten by checkout:
The following untracked working tree files would be overwritten by merge:
%%sPlease move or remove them before you merge.
The following untracked working tree files would be overwritten by merge:
The following untracked working tree files would be overwritten by %s:
%%sPlease move or remove them before you %s.
The following untracked working tree files would be overwritten by %s:
Entry '%s' overlaps with '%s'.  Cannot bind.
Cannot update sparse checkout: the following entries are not up to date:
The following working tree files would be overwritten by sparse checkout update:
The following working tree files would be removed by sparse checkout update:
Cannot update submodule:
unpack_trees takes at most %d trees
unpack-trees.c
traverse_trees
Merge requires file-level merging
Sparse checkout leaves no entry on working directory
unpack_trees
Cannot do a twoway merge of %d trees
Cannot do a bind merge of %d trees
Cannot do a oneway merge of %d trees
* unpack mask %lu, dirmask %lu, cnt %d 
ent#%d %06o %s
(missing)
programming error in a caller of mark_ce_used_same_name
Wrong condition to get here buddy
This is a directory and should not exist in index
pos must point at the first entry in this directory
We need cache-tree to do this optimization
Unpacked %d entries from %s to %s using cache-tree
cannot stat '%s'
%.*s/
both update and delete flags are set on %s
check_updates
Updating files
the following paths have collided (e.g. case-sensitive paths
on a case-insensitive filesystem) and only one from the same
colliding group is in the working tree:
  '%s'
Aborting
Entry '%s' would be overwritten by merge. Cannot merge.
Entry '%s' not uptodate. Cannot merge.
Updating '%s' would lose untracked files in it
Untracked working tree file '%s' would be overwritten by merge.
Untracked working tree file '%s' would be removed by merge.
Entry '%s' not uptodate. Cannot update sparse checkout.
Working tree file '%s' would be overwritten by sparse checkout update.
Working tree file '%s' would be removed by sparse checkout update.
Submodule '%s' cannot checkout new HEAD.
%s%s
fatal: recursion detected in die handler
usage.c
fatal: recursion detected in die_errno handler
error: 
warning: 
die() called many times. Recursion error or racy threaded death!
usage: 
_usage_
%s: %s
BUG: %s:%d: 
BUG: 
funcname
xfuncname
cachetextconv
wordregex
textconv/%s
!^(.*[ 
])?(is[ 
]+new|renames|is[ 
]+separate)([ 
].*)?$
!^[ 
]*with[ 
].*$
]*((procedure|function)[ 
]+.*)$
]*((package|protected|task)[ 
]+.*)$
[a-zA-Z][a-zA-Z0-9_]*|[-+]?[0-9][0-9#_.aAbBcCdDeEfF]*([eE][+-]?[0-9_]+)?|=>|\.\.|\*\*|:=|/=|>=|<=|<<|>>|<>|[^[:space:]]|[
]*((/[ 
]*\{|&?[a-zA-Z_]).*)
[a-zA-Z0-9,._+?#-]+|[-+*/%&^|!~]|>>|<<|&&|\|\||[^[:space:]]|[
fortran
!^([C*]|[ 
]*!)
!^[ 
]*MODULE[ 
]+PROCEDURE[ 
]*((END[ 
]+)?(PROGRAM|MODULE|BLOCK[ 
]+DATA|([^'" 
]+[ 
]+)*(SUBROUTINE|FUNCTION))[ 
]+[A-Z].*)$
[a-zA-Z][a-zA-Z0-9_]*|\.([Ee][Qq]|[Nn][Ee]|[Gg][TtEe]|[Ll][TtEe]|[Tt][Rr][Uu][Ee]|[Ff][Aa][Ll][Ss][Ee]|[Aa][Nn][Dd]|[Oo][Rr]|[Nn]?[Ee][Qq][Vv]|[Nn][Oo][Tt])\.|[-+]?[0-9.]+([AaIiDdEeFfLlTtXx][Ss]?[-+]?[0-9.]*)?(_[a-zA-Z0-9][a-zA-Z0-9_]*)?|//|\*\*|::|[/<>=]=|[^[:space:]]|[
fountain
^((\.[^.]|(int|ext|est|int\.?/ext|i/e)[. ]).*)$
-]+|[^[:space:]]|[
golang
]*(func[ 
]*.*(\{[ 
]*)?)
]*(type[ 
].*(struct|interface)[ 
]*(\{[ 
]*)?)
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.eE]+i?|0[xX]?[0-9a-fA-F]+i?|[-+*/<>%&^|=!:]=|--|\+\+|<<=?|>>=?|&\^=?|&&|\|\||<-|\.{3}|[^[:space:]]|[
html
]*(<[Hh][1-6]([ 
].*)?>.*)$
[^<>= 
]+|[^[:space:]]|[
java
!^[ 
]*(catch|do|for|if|instanceof|new|return|switch|throw|while)
]*(([A-Za-z_][A-Za-z_0-9]*[ 
]+)+[A-Za-z_][A-Za-z_0-9]*[ 
]*\([^;]*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>>?=?|&&|\|\||[^[:space:]]|[
matlab
^[[:space:]]*((classdef|function)[[:space:]].*)$|^(%%%?|##)[[:space:]].*$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|[=~<>]=|\.[*/\^']|\|\||&&|[^[:space:]]|[
objc
!^[ 
]*(do|for|if|else|return|switch|while)
]*([-+][ 
]*\([ 
]*[A-Za-z_][A-Za-z_0-9* 
]*\)[ 
]*[A-Za-z_].*)$
]*(([A-Za-z_][A-Za-z_0-9]*[ 
]+)+[A-Za-z_][A-Za-z_0-9]*[ 
]*\([^;]*)$
^(@(implementation|interface|protocol)[ 
].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>=?|&&|\|\||::|->|[^[:space:]]|[
pascal
^(((class[ 
]+)?(procedure|function)|constructor|destructor|interface|implementation|initialization|finalization)[ 
]*.*)$
^(.*=[ 
]*(class|record).*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|<>|<=|>=|:=|\.\.|[^[:space:]]|[
^package .*
^sub [[:alnum:]_':]+[ 
]*(\([^)]*\)[ 
]*)?(:[^;#]*)?(\{[ 
]*)?(#.*)?$
^(BEGIN|END|INIT|CHECK|UNITCHECK|AUTOLOAD|DESTROY)[ 
]*(\{[ 
]*)?(#.*)?$
^=head[0-9] .*
[[:alpha:]_'][[:alnum:]_']*|0[xb]?[0-9a-fA-F_]*|[0-9a-fA-F_]+(\.[0-9a-fA-F_]+)?([eE][-+]?[0-9_]+)?|=>|-[rwxoRWXOezsfdlpSugkbctTBMAC>]|~~|::|&&=|\|\|=|//=|\*\*=|&&|\|\||//|\+\+|--|\*\*|\.\.\.?|[-+*/%.^&<>=!|]=|=~|!~|<<|<>|<=>|>>|[^[:space:]]|[
 ]*(((public|protected|private|static)[
 ]+)*function.*)$
 ]*((((final|abstract)[
 ]+)?class|interface|trait).*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|[-+*/<>%&^|=!.]=|--|\+\+|<<=?|>>=?|===|&&|\|\||::|->|[^[:space:]]|[
python
]*((class|def)[ 
].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[jJlL]?|0[xX]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|//=?|<<=?|>>=?|\*\*=?|[^[:space:]]|[
ruby
]*((class|module|def)[ 
].*)$
(@|@@|\$)?[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|\?(\\C-)?(\\M-)?.|//=?|[-+*/<>%&^|=!]=|<<=?|>>=?|===|\.{1,3}|::|[!=]~|[^[:space:]]|[
rust
 ]*((pub(\([^\)]+\))?[
 ]+)?((async|const|unsafe|extern([
 ]+"[^"]+"))[
 ]+)?(struct|enum|union|mod|trait|fn|impl)[< 
]+[^;]*)$
[a-zA-Z_][a-zA-Z0-9_]*|[0-9][0-9_a-fA-Fiosuxz]*(\.([0-9]*[eE][+-]?)?[0-9_fF]*)?|[-+*\/<>%&^|=!:]=|<<=?|>>=?|&&|\|\||->|=>|\.{2}=|\.{3}|::|[^[:space:]]|[
bibtex
(@[a-zA-Z]{1,}[ 
]*\{{0,1}[ 
]*[^ 
"@',\#}{~%]*).*$
[={}"]|[^={}" 
]+|[^[:space:]]|[
^(\\((sub)*section|chapter|part)\*{0,1}\{.*)$
\\[a-zA-Z@]+|\\.|[a-zA-Z0-9
]+|[^[:space:]]|[
!^[ 
]*[A-Za-z_][A-Za-z_0-9]*:[[:space:]]*($|/[/*])
^((::[[:space:]]*)?[A-Za-z_].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lLuU]*|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>=?|&&|\|\||::|->\*?|\.\*|[^[:space:]]|[
csharp
!^[ 
]*(do|while|for|if|else|instanceof|new|return|switch|case|throw|catch|using)
]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe|async)[ 
]+)*[][<>@.~_[:alnum:]]+[ 
]+[<>@._[:alnum:]]+[ 
]*\(.*\))[ 
]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe)[ 
]+)*[][<>@.~_[:alnum:]]+[ 
]+[@._[:alnum:]]+)[ 
]*(((static|public|internal|private|protected|new|unsafe|sealed|abstract|partial)[ 
]+)*(class|enum|interface|struct)[ 
]+.*)$
]*(namespace[ 
]+.*)$
![:;][[:space:]]*$
^[_a-z0-9].*$
-?[_a-zA-Z][-_a-zA-Z0-9]*|-?[0-9]+|\#[0-9a-fA-F]+|[^[:space:]]|[
diff=true
!diff
utf-8
UTF-16LE-BOM
UTF-16
UTF-16LE
UTF-16BE-BOM
UTF-16BE
UTF-32BE
UTF-32LE
UTF-32
%-*s
%*s%-*s
latin-1
ISO-8859-1
GIT_USER_AGENT
git/2.24.3 (Apple Git-128)
%s/worktrees
worktree_lock_reason
worktree.c
!is_main_worktree(wt)
locked
failed to read '%s'
'%s' at main working tree is not the repository directory
'%s' file does not contain absolute path to the working tree location
worktrees/%s/gitdir
'%s' does not exist
'%s' is not a .git file, error code %d
'%s' does not point back to '%s'
can't relocate main worktree
worktrees/%s/
%s/HEAD
%s/worktrees/%s/HEAD
Out of memory, strdup failed
Out of memory, realloc failed
data too large to fit into virtual memory space
Out of memory, calloc failed
could not open '%s' for reading and writing
could not open '%s' for writing
could not open '%s' for reading
dup failed
Out of memory? fdopen failed
Unable to create temporary file '%s'
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
unlink_or_msg
wrapper.c
unable to unlink '%s': %s
unlink
rmdir
unable to access '%s'
unable to get current working directory
your snprintf is broken
attempt to snprintf into too-small buffer
could not write to '%s'
could not close '%s'
could not stat %s
Out of memory, malloc failed (tried to allocate %lu bytes)
Data too large to fit into virtual memory space.
GIT_ALLOC_LIMIT
attempting to allocate %ju over limit %ju
# GETTEXT POISON #
unable to %s '%s'
GIT_FLUSH
write failure on '%s'
write error
fsync error on '%s'
tabwidth=
tabwidth %.*s out of range
cannot enforce both tab-in-indent and indent-with-non-tab
trailing whitespace
new blank line at EOF
space before tab in indent
indent with spaces
tab in indent
trailing-space
space-before-tab
indent-with-non-tab
cr-at-eol
blank-at-eol
blank-at-eof
tab-in-indent
wt-status.c
initial
%c %s
Do not modify or remove the line above.
Everything below it will be ignored.
rebase-apply
rebase-apply/applying
rebase-apply/patch
rebase-apply/head-name
rebase-apply/onto
rebase-merge
rebase-merge/interactive
rebase-merge/head-name
rebase-merge/onto
count/changed
count/untracked
count/ignored
finalize_deferred_config() should have been called
cannot %s: You have unstaged changes.
additionally, your index contains uncommitted changes.
cannot %s: Your index contains uncommitted changes.
multiple renames on the same target? how?
unhandled diff-files status '%c'
unhandled diff-index status '%c'
detached HEAD
No commits yet on 
HEAD (no branch)
different
behind 
ahead 
, %s
 %s%c
%s -> 
%s %s%c
# branch.oid %s%c
(initial)
# branch.head %s%c
(detached)
# branch.upstream %s%c
# branch.ab +%d -%d%c
# branch.ab +? -?%c
# branch.ab +0 -0%c
2 %s %s %06o %06o %06o %s %s %c%d %s%c%s%c
1 %s %s %06o %06o %06o %s %s %s%c
wt_porcelain_v2_fix_up_changed
d->mode_head == 0
d->mode_worktree == 0
unhandled unmerged status %x
wt_porcelain_v2_print_unmerged_entry
pos < 0
observed stagemask 0x%x != expected stagemask 0x%x
%c %s %s %06o %06o %06o %06o %s %s %s %s%c
%c %s%c
On branch 
interactive rebase in progress; onto 
rebase in progress; onto 
HEAD detached at 
HEAD detached from 
Not currently on any branch.
Initial commit
No commits yet
Untracked files
Ignored files
add -f
It took %.2f seconds to enumerate untracked files. 'status -uno'
may speed it up, but you have to be careful not to forget to add
new files yourself (see 'git help status').
Untracked files not listed%s
 (use -u option to show untracked files)
No changes
no changes added to commit (use "git add" and/or "git commit -a")
no changes added to commit
nothing added to commit but untracked files present (use "git add" to track)
nothing added to commit but untracked files present
nothing to commit (create/copy files and use "git add" to track)
nothing to commit
nothing to commit (use -u to show untracked files)
nothing to commit, working tree clean
wt_longstatus_print_tracking
s->branch && !s->is_initial
It took %.2f seconds to compute the branch ahead/behind values.
You can use '--no-ahead-behind' to avoid this.
rebase-merge/done
rebase-merge/git-rebase-todo
git-rebase-todo is missing.
No commands done.
Last command done (%d command done):
Last commands done (%d commands done):
   %s
  (see more in file %s)
No commands remaining.
Next command to do (%d remaining command):
Next commands to do (%d remaining commands):
  (use "git rebase --edit-todo" to view and edit)
Could not open file %s for reading
exec 
label 
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)
All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)
You are in the middle of an am session.
The current patch is empty.
  (fix conflicts and then run "git am --continue")
  (use "git am --skip" to skip this patch)
  (use "git am --abort" to restore the original branch)
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)
  (all conflicts fixed: run "git rebase --continue")
You are currently splitting a commit while rebasing branch '%s' on '%s'.
You are currently splitting a commit during a rebase.
  (Once your working directory is clean, run "git rebase --continue")
You are currently editing a commit while rebasing branch '%s' on '%s'.
You are currently editing a commit during a rebase.
  (use "git commit --amend" to amend the current commit)
  (use "git rebase --continue" once you are satisfied with your changes)
You are currently rebasing branch '%s' on '%s'.
You are currently rebasing.
ORIG_HEAD
rebase-merge/amend
rebase-merge/orig-head
Cherry-pick currently in progress.
You are currently cherry-picking commit %s.
  (fix conflicts and run "git cherry-pick --continue")
  (run "git cherry-pick --continue" to continue)
  (all conflicts fixed: run "git cherry-pick --continue")
  (use "git cherry-pick --skip" to skip this patch)
  (use "git cherry-pick --abort" to cancel the cherry-pick operation)
Revert currently in progress.
You are currently reverting commit %s.
  (fix conflicts and run "git revert --continue")
  (run "git revert --continue" to continue)
  (all conflicts fixed: run "git revert --continue")
  (use "git revert --skip" to skip this patch)
  (use "git revert --abort" to cancel the revert operation)
You are currently bisecting, started from branch '%s'.
You are currently bisecting.
  (use "git bisect reset" to get back to the original branch)
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
  (use "git restore --source=%s --staged <file>..." to unstage)
  (use "git rm --cached <file>..." to unstage)
new commits, 
modified content, 
untracked content, 
unhandled change_type %d in wt_longstatus_print_change_data
unhandled diff status %c
wt_longstatus_print_change_data
len >= 0
%s%.*s%s -> %s
%s%.*s%s
new file:
copied:
deleted:
modified:
renamed:
typechange:
unknown:
unmerged:
Unmerged paths:
  (use "git add <file>..." to mark resolution)
  (use "git add/rm <file>..." as appropriate to mark resolution)
  (use "git rm <file>..." to mark resolution)
%s%.*s%s
both deleted:
added by us:
deleted by them:
added by them:
deleted by us:
both added:
both modified:
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
GIT_INDEX_FILE=%s
--files
--for-status
--summary-limit
HEAD^
Submodules changed but not updated:
Submodule changes to be committed:
%s%s
  (use "git %s <file>..." to include in what will be committed)
--------------------------------------------------
Your stash currently has %d entry
Your stash currently has %d entries
Could not stat %s
Could not open %s
unable to read blob object %s
Last expression must not be negated: %s
Invalid regexp to look for hunk header: %s
merge.conflictstyle
'%s' is not a boolean
diff3
unknown style '%s' given for '%s'
xdiff-interface.c
xdiff emitted hunk in the middle of a line
1.2.11
inflateInit: %s (%s)
no message
inflateInit2: %s (%s)
inflateEnd: %s (%s)
inflate: out of memory
inflate: %s (%s)
deflateInit: %s (%s)
deflateEnd: %s (%s)
deflate: out of memory
deflate: %s (%s)
zlib.c
total_out mismatch
total_in mismatch
out of memory
wrong version
needs dictionary
data stream error
stream consistency error
unknown error
deflateInit2: %s (%s)
failed to unlink '%s'
iconv_open(%s,%s) failed, but needed:
    precomposed unicode is not supported.
    If you want to use decomposed unicode, run
    "git config core.precomposeunicode false"
UTF-8-MAC
alnum
space
parse_bracket_exp
compat/regex/regcomp.c
upper
lower
alpha
cntrl
digit
print
blank
graph
punct
xdigit
link_nfa_nodes
node->next == NULL
left > -1
right > -1
!IS_EPSILON_NODE (node->token.type)
re_search_stub
compat/regex/regexec.c
pmatch[0].rm_so == start
re_copy_regs
regs_allocated == REGS_FIXED
regs->num_regs >= nregs
re_search_internal
mctx.input.offsets_needed == 0
check_matching
err == REG_ESPACE
pop_fail_stack
num >= 0
group sync broken sliding up
group sync broken sliding down
match disappeared
group sync broken sliding to match
best shift unreached
group sync broken sliding to blank line
group sync broken moving to next group
group sync broken at end of file
BUG: %s
xdiff/xdiffi.c
\ No newline at end of file
git daemon [--verbose] [--syslog] [--export-all]
           [--timeout=<n>] [--init-timeout=<n>] [--max-connections=<n>]
           [--strict-paths] [--base-path=<path>] [--base-path-relaxed]
           [--user-path | --user-path=<path>]
           [--interpolated-path=<path>]
           [--reuseaddr] [--pid-file=<file>]
           [--(enable|disable|allow-override|forbid-override)=<service>]
           [--access-hook=<path>]
           [--inetd | [--listen=<host_or_ipaddr>] [--port=<n>]
                      [--detach] [--user=<user> [--group=<group>]]
           [--log-destination=(stderr|syslog|none)]
           [<directory>...]
GIT binary patchGIT binary patch
-Subproject commit 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
----------------------------------------------------------------------
(builtin)true
(builtin)false
(builtin)unknown
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~
After fixing the error cause you may try to fix up
the remote tracking information by invoking
"git branch --set-upstream-to=%s%s%s".
the requested upstream branch '%s' does not exist
If you are planning on basing your work on an upstream
branch that already exists at the remote, you may need to
run "git fetch" to retrieve it.
If you are planning to push out a new local branch that
will track its remote counterpart, you may want to use
"git push -u" to set the upstream config as you push.
Cannot setup tracking information; starting point '%s' is not a branch.
# v2 git bundle
gpgsig
Warning: commit message did not conform to UTF-8.
You may want to amend it after fixing the message, or set the config
variable i18n.commitencoding to the encoding your project uses.
exceeded maximum include depth (%d) while including
from
This might be due to circular includes.
@@@@@@@@@AA@@A@@@@@@@@@@@@@@@@@@
     
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
NN'C
2waN
mdIP
gwz3
4}@4m
.(uw
OJqj
m"2T
FH9<
x6(T!
h`LK
JbEv
E&)
R;*&
(G]>
pENOXHn
0lY;
F==8
p;I}
=J-f
VYk[(
[x*w1
L<<'2
[<tR
yrhj
>/Vm-ikP I
xj4UWg
 h'$
zyT_
Lv<l
rq{1
A'eW|
3B-9
------------
only found copies from modified paths due to too many files.
inexact rename detection was skipped due to too many files.
you may want to set your %s variable to at least %d and retry the command.
# repo-abbrev:
MANPFDIOLDIOFFOO
utf-8
+,-./:=@_^
abtnvfr
cache entry has null sha1: %s
# pack-refs with: peeled fully-peeled sorted 
Signed-off-by: 
You can fix this with 'git rebase --edit-todo' and then run 'git rebase --continue'.
Or you can abort the rebase with 'git rebase --abort'.
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:
    git config --global user.name "Your Name"
    git config --global user.email you@example.com
After doing this, you may fix the identity used for this commit with:
    git commit --amend --reset-author
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:
    git config --global --edit
After doing this, you may fix the identity used for this commit with:
    git commit --amend --reset-author
you have staged changes in your working tree
If these changes are meant to be squashed into the previous commit, run:
  git commit --amend %s
If they are meant to go into a new commit, run:
  git commit %s
In both cases, once you're done, continue with:
  git rebase --continue
Could not execute the todo command
    %.*s
It has been rescheduled; To edit the command before continuing, please
edit the todo list first:
    git rebase --edit-todo
    git rebase --continue
(cherry picked from commit 
A"\Si
S!G:
~._-
  %m %s
A          
UTF-8
2.24.3 (Apple Git-128)
XXXXXX
------------------------ >8 ------------------------
Success
No match
Invalid regular expression
Invalid collation character
Invalid character class name
Trailing backslash
Invalid back reference
Unmatched [ or [^
Unmatched ( or \(
Unmatched \{
Invalid content of \{\}
Invalid range end
Memory exhausted
Invalid preceding regular expression
Premature end of regular expression
Regular expression too big
Unmatched ) or \)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleShortVersionString</key>
<string>128</string>
<key>CFBundleVersion</key>
<string>128</string>
</dict>
</plist>
%s%s
1ahs
652s
[33m
[36m
[31m
[32m
[33m
[41m
[1;35m
[1;34m
[2;3m
[1;36m
[1;33m
[2;3m
[2;31m
[2;32m
[1;31m
[1;32m
[1;32m
[1;31m
[1;33m
[1;35m
[1;36m
[1;34m
/bad-path/
[33m
[1;33m
[1;32m
[1;31m
[31m
[32m
[31m
[31m
[31m
[31m
[32m
[31m
