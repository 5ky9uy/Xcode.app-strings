http
curl_global_init failed
Pragma: no-cache
Pragma:
GIT_HTTP_MAX_REQUESTS
curl_multi_init failed
GIT_SSL_NO_VERIFY
GIT_SSL_CERT
GIT_SSL_KEY
GIT_SSL_CAPATH
GIT_SSL_CAINFO
GIT_HTTP_USER_AGENT
GIT_HTTP_LOW_SPEED_LIMIT
GIT_HTTP_LOW_SPEED_TIME
GIT_CURL_FTP_NO_EPSV
GIT_SSL_CERT_PASSWORD_PROTECTED
https://
curl_multi_add_handle failed: %s
objects/%.*s/
failed to start HTTP request
ref: 
 pack-
.pack
.pack.temp
BUG: pack tmpfile does not end in .pack.temp?
%.*s.idx.temp
index-pack
objects/pack/pack-%s.pack
%s.temp
Unable to open local file %s for pack
Resuming fetch of pack %s at byte %ju
%s.prev
fd leakage in start: %d
Couldn't create temporary file %s
Couldn't truncate temporary file %s
Resuming fetch of object %s at byte %ju
requested range invalid; we may already have all the data.
GIT_TRACE_CURL
http.c
== Info: %s
=> Send header
=> Send data
=> Send SSL data
<= Recv header
<= Recv data
<= Recv SSL data
%s, %10.10ld bytes (0x%8.8lx)
Authorization:
Proxy-Authorization:
 <redacted>
%s: 
http.sslverify
http.sslcipherlist
http.sslversion
http.sslcert
http.sslkey
http.sslcapath
http.sslcainfo
http.sslcertpasswordprotected
http.ssltry
http.minsessions
http.maxrequests
http.lowspeedlimit
http.lowspeedtime
http.noepsv
http.proxy
http.proxyauthmethod
http.cookiefile
http.savecookies
http.postbuffer
negative value for http.postbuffer; defaulting to %d
http.useragent
http.emptyauth
auto
http.delegation
http.pinnedpubkey
http.extraheader
http.followredirects
initial
curl_easy_init failed
Unknown delegation method '%s': using default
GIT_SSL_VERSION
unsupported ssl version %s: using default
GIT_SSL_CIPHER_LIST
GIT_CURL_VERBOSE
https
HTTPS_PROXY
https_proxy
http_proxy
ALL_PROXY
all_proxy
socks5h
socks5
socks4a
socks
http://%s
Invalid proxy URL '%s'
NO_PROXY
no_proxy
none
policy
always
sslv2
sslv3
tlsv1
tlsv1.0
tlsv1.1
tlsv1.2
cert
ftps
GIT_HTTP_PROXY_AUTHMETHOD
unsupported proxy authentication method %s: using anyauth
basic
digest
negotiate
ntlm
anyauth
Received DONE message for unknown request!
Unknown CURL message received: %d
The requested URL returned error: %ld
BUG: HTTP_KEEP_ERROR is only supported with strbufs
 no-cache
gzip
;q=0.%%0%dd
Accept-Language: 
charset
text/
ISO-8859-1
BUG: update_url_from_redirect: %s is not a superset of %s
unable to update url base from redirection:
  asked for: %s
   redirect: %s
%%%02x
Getting index for pack %s
objects/pack/pack-%s.idx
Unable to get pack index %s
Unable to open local file %s
%ju-
BUG: curl_easy_getinfo for HTTP code failed: %s
--all
--force
--dry-run
--helper-status
--verbose
You must specify only one branch name when deleting a remote branch
info/refs
objects/info/packs
cannot lock existing info/refs
Fetching remote heads...
Unable to delete remote branch %s
error %s cannot remove
No refs in common and none specified; doing nothing.
Could not remove %s
ok %s
'%s': up-to-date
ok %s up to date
remote '%s' is not an ancestor of
local '%s'.
Maybe you are not up-to-date and need to pull first?
error %s non-fast forward
updating '%s'
 using '%s'
  from %s
  to   %s
Unable to lock remote branch %s
error %s lock error
--objects
revision walk setup failed
    sending %d objects
    done
%s %s
error
Updating remote server info
Unable to update server info
<?xml version="1.0" encoding="utf-8" ?>
<D:propfind xmlns:D="DAV:">
<D:prop xmlns:R="%s">
<D:supportedlock/>
</D:prop>
</D:propfind>
Depth: 0
Content-Type: text/xml
PROPFIND
XML error: %s
no DAV locking support on %s
Cannot access URL %s, return code %d
Unable to start PROPFIND request on %s
.multistatus.response.propstat.prop.supportedlock.lockentry
.multistatus.response.propstat.prop.supportedlock.lockentry.locktype.write
.multistatus.response.propstat.prop.supportedlock.lockentry.lockscope.exclusive
Removing remote locks...
unable to access '%s': %s
MKCOL
Unable to create branch path %s
Unable to start MKCOL request
<?xml version="1.0" encoding="utf-8" ?>
<D:lockinfo xmlns:D="DAV:">
<D:lockscope><D:exclusive/></D:lockscope>
<D:locktype><D:write/></D:locktype>
<D:owner>
<D:href>mailto:%s</D:href>
</D:owner>
</D:lockinfo>
Timeout: Second-%ld
LOCK
Unable to start LOCK request
.prop.lockdiscovery.activelock.owner.href
.prop.lockdiscovery.activelock.timeout
Second-
.prop.lockdiscovery.activelock.locktoken.href
Getting pack list
refs/
<?xml version="1.0" encoding="utf-8" ?>
<D:propfind xmlns:D="DAV:">
<D:allprop/>
</D:propfind>
Depth: 1
Unable to start PROPFIND request
.multistatus.response
.multistatus.response.href
Parsed path '%s' does not match url: '%s'
.multistatus.response.propstat.prop.resourcetype.collection
  %s
Unable to fetch ref %s from %s
  fetch %s for %s
objects/XX/
0123456789abcdef
objects/
Unable to start GET request
MKCOL %s failed, aborting (%d/%ld)
PUT %s failed, aborting (%d/%ld)
    sent %s
MOVE %s failed, aborting (%d/%ld)
Unable to get pack file %s
MOVE
Overwrite: T
Unable to fetch %s, will not be able to update server info refs
Fetching pack %s
 which contains %s
%s %lu
Destination: 
No remote branch matches %s
More than one remote branch matches %s
HEAD
Remote HEAD is not a symref
Remote branch %s is the current HEAD
Remote HEAD symrefs too deep
Unable to resolve remote HEAD
Remote HEAD resolves to object %s
which does not exist locally, perhaps you need to fetch?
Unable to resolve remote branch %s
Remote branch %s resolves to object %s
which does not exist locally, perhaps you need to fetch?
The branch '%s' is not an ancestor of your current HEAD.
If you are sure you want to delete it, run:
'git http-push -D %s %s'
Removing remote branch '%s'
DELETE
DELETE request failed (%d/%ld)
Unable to start DELETE request
Couldn't get %s for remote symref
unknown pending object %s (%s)
bad tree object %s
PUT error: curl result=%d, HTTP code=%ld
Unable to start PUT request
If: (<%s>)
Lock-Token: <%s>
strbuf_setlen
./strbuf.h
UNLOCK
UNLOCK HTTP error %ld
Unable to start UNLOCK request
Unable to refresh lock for %s
LOCK HTTP error %ld
Unable to parse object %s for remote ref %s
%s^{}
error null no match
Invalid path '%s'
More than %d nested symlinks on path '%s'
Invalid symlink '%s'
hint: %.*s
cherry-pick
Cherry-picking is not possible because you have unmerged files.
Committing is not possible because you have unmerged files.
Merging is not possible because you have unmerged files.
pull
Pulling is not possible because you have unmerged files.
revert
Reverting is not possible because you have unmerged files.
It is not possible to %s because you have unmerged files.
Fix them up in the work tree, and then use 'git add/rm <file>'
as appropriate to mark resolution and make a commit.
Exiting because of an unresolved conflict.
You have not concluded your merge (MERGE_HEAD exists).
Please, commit your changes before merging.
Exiting because of unfinished merge.
Note: checking out '%s'.
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:
  git checkout -b <new-branch-name>
pushupdaterejected
pushnonffcurrent
pushnonffmatching
pushalreadyexists
pushfetchfirst
pushneedsforce
statushints
statusuoption
commitbeforemerge
resolveconflict
implicitidentity
detachedhead
setupstreamfailure
objectnamewarning
rmhints
addembeddedrepo
pushnonfastforward
alias.
cmdline ends with \
unclosed quote
object
%10s: %8u (%ju kB)
BUG: counted %d != ended at %d
BUG: %s: not a valid attribute name
BUG: non-INDEX attr direction in a bare repo
git_attr_internal
attr.c
a->attr_nr == (hashmap_get_size(&g_attr_hashmap.map) - 1)
./hashmap.h
hashmap_get_size: size not set
BUG: no entry found
prepare_attr_stack
(*stack)->origin
.gitattributes
[builtin]
[attr]
%s not allowed: %s:%d
Negative patterns are ignored in git attributes
Use '\!' for literal leading exclamation.
%.*s is not a valid attribute name
%s: %s:%d
[attr]binary -diff -merge -text
GIT_ATTR_NOSYSTEM
share/git-core/gitattributes
/etc/gitattributes
attributes
info/attributes
BUG: interned attributes shouldn't be deleted
invalid base85 alphabet %c
invalid base85 sequence %.5s
good
could not read file '%s'
reading bisect refs failed
%s was both %s and %s
No testable commit found.
Maybe you started with bad path parameters?
%s is the first %s commit
(roughly %d step)
(roughly %d steps)
Bisecting: %d revision left to test after this %s
Bisecting: %d revisions left to test after this %s
dist=%d
!strbuf_slopbuf[0]
BISECT_TERMS
refs/bisect/
skip-
BISECT_ANCESTORS_OK
a %s revision is needed
could not create file '%s'
size_t overflow: %ju * %ju
Not a valid commit name %s
The merge base %s is bad.
This means the bug has been fixed between %s and [%s].
The merge base %s is new.
The property has changed between %s and [%s].
The merge base %s is %s.
This means the first '%s' commit is between %s and [%s].
Some %s revs are not ancestors of the %s rev.
git bisect cannot work properly in this case.
Maybe you mistook %s and %s revs?
BISECT_EXPECTED_REV
the merge base between %s and [%s] must be skipped.
So we cannot be sure the first %s commit is between %s and %s.
We continue anyway.
bisect_rev_setup
Badly quoted content in file '%s': %s
BISECT_NAMES
There are only 'skip'ped commits left to test.
The first %s commit could be any of:
BISECT_HEAD
show-branch
Bisecting: a merge base must be tested
We cannot bisect more!
Not setting branch %s as its own upstream.
branch.%s.remote
branch.%s.merge
branch.%s.rebase
Branch '%s' set up to track remote branch '%s' from '%s' by rebasing.
Branch '%s' set up to track remote branch '%s' from '%s'.
Branch '%s' set up to track local branch '%s' by rebasing.
Branch '%s' set up to track local branch '%s'.
Branch '%s' set up to track remote ref '%s' by rebasing.
Branch '%s' set up to track remote ref '%s'.
Branch '%s' set up to track local ref '%s' by rebasing.
Branch '%s' set up to track local ref '%s'.
Unable to write upstream branch configuration
branch.%s.description
'%s' is not a valid branch name.
A branch named '%s' already exists.
Cannot force update the current branch.
Not a valid object name: '%s'.
Ambiguous object name: '%s'.
Not a valid branch point: '%s'.
branch: Reset to %s
branch: Created from %s
'%s' is already checked out at '%s'
HEAD of working tree %s is not updated
Not tracking: ambiguous information for ref %s
cannot find the current offset
%s %ju
BUG: should not happen
cannot seek back
unable to write pack header
failed to read from '%s'
failed to read %d bytes from '%s'
unexpected deflate failure: %d
%s/pack/pack-
could not open '%s'
Repository lacks these prerequisite commits:
%s %s
The bundle contains this ref:
The bundle contains these %d refs:
The bundle records a complete history.
The bundle requires this ref:
The bundle requires these %d refs:
unable to dup file descriptor
unrecognized argument: %s
Refusing to create empty bundle.
cannot create '%s'
index-pack died
'%s' does not look like a v2 bundle file
unrecognized header: %s%s (%d)
--pretty=oneline
rev-list died
ref '%s' is excluded by the rev-list options
tagger 
pack-objects
--all-progress-implied
--stdout
--thin
--delta-base-offset
Could not spawn pack-objects
pack-objects died
%s: unmerged (%s)
You have both %s and %s
update_one
cache-tree.c
!(dryrun && repair)
index cache-tree records empty sub-tree
cache-tree.c: '%.*s' in '%s' not found
invalid object %06o %s for '%.*s'
%o %.*s%c
%c%d %d
fatal - unsorted cache subtree
cache-tree: internal error
[33m
[35m
[1;32m
[1;33m
[1;34m
[1;35m
[1;36m
BUG: color parsing ran out of space
invalid color value: %.*s
color.ui
black
yellow
magenta
cyan
white
normal
bold
italic
blink
reverse
strike
%c8;5;%d
%c8;2;%d;%d;%d
TERM
dumb
print_columns
column.c
(colopts & COL_ENABLE_MASK) != COL_AUTO
BUG: invalid layout mode %d
column.
column
--raw-mode=%d
--width=%d
--indent=%s
--padding=%d
%s%s%s
0123456789;
invalid column.%s mode %s
dense
unsupported option '%s'
%s%c
%06o 
 %s 
read error '%s'
early EOF '%s'
Subproject commit %s
object '%s' is not a blob!
diff --cc 
diff --combined 
%s%sindex 
%s%s
..%s%s
%s%snew file mode %06o
%s%sdeleted file 
mode 
%s%06o
..%06o
--- 
+++ 
size_t overflow: %ju + %ju
unable to generate combined diff for %s
 +%lu,%lu 
%s%s %s%s
 -%lu,%lu
%.*s%s%s
Binary files differ
commit
could not parse %s
%s %s is not a commit!
bad graft data: %s
read_graft_line
commit.c
!graft
cannot read commit object %s
expected commit for %s, got %s
bogus commit object %s
bad tree pointer in commit %s
parent 
bad parents in commit %s
Object %s not a commit
(null)
mergetag
a NUL byte in commit log message not allowed.
tree %s
parent %s
author %s
committer %s
encoding %s
Conflicts:
duplicate graft data: %s
parent
/dev/tty
include.path
includeif
path
GIT_CONFIG_PARAMETERS
bogus config parameter: %s
bogus format in GIT_CONFIG_PARAMETERS
failed to expand user dir in: '%s'
core.
user.
i18n.
branch.
push.
mailmap.
advice.
pager.color
color.pager
pack.packsizelimit
pack.compression
bad pack compression level %d
unable to load config blob object '%s'
reference '%s' does not point to a blob
/etc/gitconfig
share/git-core/gitconfig
failed to parse %s
GIT_CONFIG_NOSYSTEM
git_configset_get_value
config.c
values->nr > 0
.gitmodules
Invalid %s: '%s'
core.untrackedcache
keep
unknown core.untrackedCache value '%s'; using 'keep' default value
core.splitindex
splitindex.maxpercentchange
splitIndex.maxPercentChange value '%d' should be between 0 and 100
unable to parse '%s' from command-line config
bad config variable '%s' in file '%s' at line %d
error: 
config
could not lock config file %s
opening %s
invalid pattern: %s
invalid config file %s
fstat on %s failed
unable to mmap '%s'
chmod on %s failed
could not write config file %s
could not set '%s' to '%s'
could not unset '%s'
missing value for '%s'
BUG: current_config_origin_type called outside config callback
blob
file
standard input
submodule-blob
command line
BUG: unknown config origin type
BUG: current_config_name called outside config callback
could not expand include path '%s'
relative config includes must come from files
<unknown>
the command line
gitdir:
gitdir/i:
relative config include conditionals must come from files
BUG: how is this possible?
key does not contain a section: %s
key does not contain variable name: %s
invalid key: %s
invalid key (newline): %s
out of range
invalid unit
bad numeric config value '%s' for '%s': %s
bad numeric config value '%s' for '%s' in blob %s: %s
bad numeric config value '%s' for '%s' in file %s: %s
bad numeric config value '%s' for '%s' in standard input: %s
bad numeric config value '%s' for '%s' in submodule-blob %s: %s
bad numeric config value '%s' for '%s' in command line %s: %s
bad numeric config value '%s' for '%s' in %s: %s
true
false
core.filemode
core.trustctime
core.checkstat
default
minimal
core.quotepath
core.symlinks
core.ignorecase
core.attributesfile
core.hookspath
core.bare
core.ignorestat
core.prefersymlinkrefs
core.logallrefupdates
core.warnambiguousrefs
core.abbrev
abbrev length out of range: %d
core.disambiguate
core.loosecompression
bad zlib compression level %d
core.compression
core.packedgitwindowsize
core.bigfilethreshold
core.packedgitlimit
core.deltabasecachelimit
core.autocrlf
input
core.safecrlf
warn
core.eol
crlf
native
core.notesref
core.editor
core.commentchar
core.commentChar should only be one character
core.askpass
core.excludesfile
core.whitespace
core.fsyncobjectfiles
core.preloadindex
core.createobject
rename
link
invalid mode for object creation: %s
core.sparsecheckout
core.precomposeunicode
core.protecthfs
core.protectntfs
core.hidedotfiles
dotgitonly
i18n.commitencoding
i18n.logoutputencoding
branch.autosetupmerge
branch.autosetuprebase
never
local
malformed value for %s
push.default
nothing
matching
simple
upstream
tracking
current
malformed value for %s: %s
Must be one of nothing, matching, simple, upstream or current.
mailmap.file
mailmap.blob
BUG: config_buf can only ungetc the same character
bad config line %d in blob %s
bad config line %d in file %s
bad config line %d in standard input
bad config line %d in submodule-blob %s
bad config line %d in command line %s
bad config line %d in %s
unable to resolve config blob '%s'
~/.gitconfig
%s/config
unable to parse command-line config
BUG: configset_add_value has no source
unknown error occurred while reading the configuration files
[%.*s "
[%.*s]
%.*s = %s
%s has multiple values
failed to write new configuration file %s
invalid section name: %s
protocol error: expected shallow sha-1, got '%s'
repository on the other end cannot be shallow
protocol error: expected sha/ref, got '%s'
.have
capabilities^{}
protocol error: unexpected capabilities^{}
protocol error: multiple capabilities^{}
protocol error: unexpected ref after capabilities^{}
Diag: url=%s
NULL
Diag: protocol=%s
Diag: hostandport=%s
Diag: path=%s
GIT_OVERRIDE_VIRTUAL_HOST
%s %s%chost=%s%c
strange pathname '%s' blocked
Diag: userandhost=%s
Diag: port=%s
NONE
strange hostname '%s' blocked
GIT_SSH
-batch
unable to fork
The remote end hung up upon initial contact
Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
symref
No path specified. See 'man git-pull' for valid url syntax
git+ssh
ssh+git
I don't handle protocol '%s'
unknown protocol
GIT_PROXY_COMMAND
core.gitproxy
 for 
9418
strange port '%s' blocked
cannot start proxy %s
<none>
Looking up %s ... 
Unable to look up %s (port %s) (%s)
done.
Connecting to %s (port %s) ... 
%s[%d: %s]: errno=%s
unable to connect to %s:
done.
(unknown)
unable to set SO_KEEPALIVE on socket: %s
GIT_SSH_COMMAND
core.sshcommand
plink
plink.exe
tortoiseplink
tortoiseplink.exe
GIT_SSH_VARIANT
ssh.variant
putty
async_query_available_blobs
convert.c
subprocess_map_initialized
external filter '%s' is not available anymore although not all paths have been filtered
command=list_available_blobs
pathname=
success
-text
text
text eol=lf
text eol=crlf
text=auto
text=auto eol=crlf
text=auto eol=lf
%s: clean filter '%s' failed
convert_to_git_filter_fd
ca.drv
ca.drv->clean || ca.drv->process
mixed
abort
external filter '%s' failed
ident
filter
smudge
clean
process
required
read from external filter '%s' failed
cannot fork to run external filter '%s'
cannot feed the input to external filter '%s'
external filter '%s' failed %d
unexpected filter type
apply_multi_file_filter
strlen(filter_type) < LARGE_PACKET_DATA_MAX - strlen("command=\n")
command=%s
path name too long for external filter
pathname=%s
can-delay=1
delayed
delay
git-filter
CRLF will be replaced by LF in %s.
The file will have its original line endings in your working directory.
CRLF would be replaced by LF in %s.
LF will be replaced by CRLF in %s.
The file will have its original line endings in your working directory.
LF would be replaced by CRLF in %s
%s: smudge filter %s failed
Id: 
: %s $
$Id: 
Illegal crlf_action %d
copy-fd: read returned
copy-fd: write returned
%s: close error
invalid credential line: %s
username
password
protocol
host
quit
credential helper '%s' told us to quit
unable to get password from user
store
erase
%s=%s
credential.
helper
usehttppath
git credential-%s
Username
Password
%s for '%s': 
%s://
%s: sha1 file error on close
%s: error when reading the tail of sha1 file
%s: sha1 file has trailing garbage
unable to open /dev/null
unable to open '%s'
%s: sha1 file read error
%s: sha1 file truncated
sha1 file '%s' validation error
sha1 file '%s' write error. Out of diskspace
sha1 file '%s' write error
in the future
%ju second ago
%ju seconds ago
%ju minute ago
%ju minutes ago
%ju hour ago
%ju hours ago
%ju day ago
%ju days ago
%ju week ago
%ju weeks ago
%ju month ago
%ju months ago
%ju year
%ju years
%s, %ju month ago
%s, %ju months ago
%ju year ago
%ju years ago
BUG: cannot create anonymous strftime date_mode struct
%ju %+05d
%04d-%02d-%02d
%04d-%02d-%02d %02d:%02d:%02d %+05d
%04d-%02d-%02dT%02d:%02d:%02d%c%02d:%02d
%.3s, %d %.3s %d %02d:%02d:%02d %+05d
%.3s %.3s %d %02d:%02d:%02d %d%c%+05d
default-local
-local
date format missing colon separator: %s
unknown date format %s
Timestamp too large for this system: %ju
Timestamp+tz too large: %ju +%04d
Timestamp before Unix epoch: %ju %04d
Sundays
Mondays
Tuesdays
Wednesdays
Thursdays
Fridays
Saturdays
January
February
March
April
June
July
August
September
October
November
December
IDLW
MEWT
MEST
CEST
MESZ
EEST
WAST
WADT
EAST
EADT
NZST
NZDT
IDLE
%ju %c%02d%02d
relative
iso8601-strict
iso-strict
iso8601
rfc2822
short
unix
format
last
months
years
yesterday
noon
midnight
zero
three
four
five
seven
eight
nine
seconds
minutes
hours
days
weeks
internal error in merge #1
internal error in merge #2
internal error in merge #3
internal error in merge #4
failed to read orderfile '%s'
invalid regex: %s
skipping rename detection, detected duplicate destination '%s'
Performing inexact rename detection
internal error: dst already matched.
create_delta_index
diff-delta.c
packed_entry - (struct index_entry *)mem == entries
myers
patience
histogram
diff.indentheuristic
diff.color
color.diff
diff.colormoved
diff.context
diff.interhunkcontext
diff.renames
diff.autorefreshindex
diff.mnemonicprefix
diff.noprefix
diff.statgraphwidth
diff.external
diff.wordregex
diff.orderfile
diff.ignoresubmodules
diff.submodule
Unknown value for 'diff.submodule' config variable: '%s'
diff.algorithm
diff.wserrorhighlight
diff.renamelimit
diff.color.
color.diff.
diff.suppressblankempty
diff.suppress-blank-empty
diff.dirstat
Found errors in 'diff.dirstat' config variable:
internal error: asking to populate invalid file.
unable to read %s
--name-only, --name-status, --check and -s are mutually exclusive
--follow requires exactly one pathspec
Option '--%s' requires a value
--patch
unified
--raw
--patch-with-raw
--numstat
--shortstat
--dirstat
--dirstat=
--cumulative
cumulative
--dirstat-by-file
--dirstat-by-file=
--check
--summary
--patch-with-stat
--name-only
--name-status
--no-patch
--stat
--break-rewrites=
--break-rewrites
invalid argument to -B: %s
--find-renames=
--find-renames
invalid argument to -M: %s
--irreversible-delete
--find-copies=
--find-copies
invalid argument to -C: %s
--no-renames
--rename-empty
--no-rename-empty
--relative
--relative=
--minimal
--no-minimal
--ignore-all-space
--ignore-space-change
--ignore-space-at-eol
--ignore-blank-lines
--indent-heuristic
--no-indent-heuristic
--patience
--histogram
diff-algorithm
option diff-algorithm accepts "myers", "minimal", "patience" and "histogram"
--binary
--full-index
--text
--find-copies-harder
--follow
--no-follow
--color
--color=
option `color' expects "always", "auto", or "never"
--no-color
--color-moved
--no-color-moved
--color-moved=
bad --color-moved argument: %s
--color-words
--color-words=
--word-diff
--word-diff=
plain
color
porcelain
bad --word-diff argument: %s
word-diff-regex
--exit-code
--quiet
--ext-diff
--no-ext-diff
--textconv
--no-textconv
--ignore-submodules
--ignore-submodules=
--submodule
--submodule=
--ws-error-highlight=
--ita-invisible-in-index
--ita-visible-in-index
--pickaxe-all
--pickaxe-regex
diff-filter
unknown change class '%c' in --diff-filter=%s
src-prefix
line-prefix
dst-prefix
--no-prefix
inter-hunk-context
--function-context
--no-function-context
output
%s...
diff.renameLimit
unable to read files to diff
BUG: fill_textconv called with non-textconv driver
diff
zebra
dimmed_zebra
color moved setting must be one of 'no', 'default', 'zebra', 'dimmed_zebra', 'plain'
copies
copy
context
meta
frag
whitespace
func
oldmoved
oldmovedalternative
oldmoveddimmed
oldmovedalternativedimmed
newmoved
newmovedalternative
newmoveddimmed
newmovedalternativedimmed
changes
lines
noncumulative
  Failed to parse dirstat cut-off percentage '%s'
  Unknown dirstat parameter '%s'
 No newline at end of file
%s%s+++ %s%s%s
%s%s--- %s%s%s
%sGIT binary patch
%sdelta %s
%sliteral %s
%sSubmodule %s contains untracked content
%sSubmodule %s contains modified content
 0 files changed
 ...
BUG: unknown diff symbol
print_stat_summary_inserts_deletes
diff.c
insertions == 0 && deletions == 0
 %d file changed
 %d files changed
, %d insertion(+)
, %d insertions(+)
, %d deletion(-)
, %d deletions(-)
-dirty
Subproject commit %s%s
GIT_EXTERNAL_DIFF
Failed to parse --dirstat/-X option parameter:
BUG: stat option does not begin with --stat: %s
-width
--stat-width
-name-width
--stat-name-width
-graph-width
--stat-graph-width
-count
--stat-count
option '%s' requires a value
Failed to parse --submodule option parameter: '%s'
unknown value after ws-error-highlight=%.*s
Option '%c' requires a value
ACDMRTXU*B
break-rewrites
find-copies
find-renames
BUG: oid abbreviation out of range: %d
internal diff status error
diff--git
newfilemode
---/dev/null
+++b/
deletedfilemode
---a/
+++/dev/null
unable to generate patch-id diff for %s
stat '%s'
cannot hash %s
%06o
@@ -
internal error in diff-resolve-rename-copy
unable to generate checkdiff for %s
%s:%d: %s.
checkdiff_consume
data->o
%s%s:%d: leftover conflict marker
%s%s:%d: %s.
invalid diff
:%06o %06o %s 
%c%03d%c
%c%c
unable to generate diffstat for %s
 => 
 %s%-*s |
 %*s
 %s%ju%s
 -> 
%s%ju%s
 bytes
 Unmerged
 %*ju%s
%s%4d.%01d%% %.*s
delete
create
 rewrite 
 (%d%%)
 %s mode %06o 
 %s %s (%d%%)
 mode change %06o => %06o
* Unmerged path %s
%s%ssimilarity index %d%%
%s%scopy from 
%s%scopy to 
%s%srename from 
%s%srename to 
%s%sdissimilarity index %d%%%s
%s%sindex %s..%s
 %06o
GIT_DIFF_PATH_COUNTER=%d
GIT_DIFF_PATH_TOTAL=%d
external diff died, stopping at %s
stat(%s)
readlink(%s)
cannot read data blob for %s
BUG: diff is failing to clean up its tempfiles
XXXXXX_
unable to create temp-file
unable to write temp-file
%s%sdiff --git %s %s%s
%s%snew file mode %06o%s
%s%sdeleted file mode %06o%s
%s%sold mode %06o%s
%s%snew mode %06o%s
%sBinary files %s and %s differ
GIT_DIFF_OPTS
--unified=
unable to generate diff for %s
1,%d
Invalid regular expression: %s
diff_words_show
unable to generate word diff
fn_out_diff_words_aux
feeding unmodified %s to diffcore
error reading from textconv command '%s'
pathspec '%s' did not match any file(s) known to git.
GIT_TRACE_UNTRACKED_STATS
dir.c
node creation: %u
gitignore invalidation: %u
directory invalidation: %u
opendir: %u
dir_inside_of
dir && subdir && *dir && *subdir
.gitignore
ignore
could not create directories for %s
gitdir: %s
could not migrate git directory from '%s' to '%s'
cannot use %s as an exclude file
last_exclude_matching_from_list
x->baselen == 0 || x->base[x->baselen - 1] == '/'
oops in prep_exclude
prep_exclude
stk->baselen == dir->basebuf.len
failed to get kernel name and information
Location %s, system %s
GIT_DISABLE_UNTRACKED_CACHE
Untracked cache is disabled on this system or location.
info/exclude
error opening directory %s: %s
error reading directory %s: %s
error closing directory %s: %s
error reading path '%s': %s
BUG: empty path passed to dir_iterator_begin()
Filtering content
external filter '%s' signaled that '%s' is now available although it has not been delayed earlier
'%s' was not filtered properly
could not stat file '%s'
%s already exists, no checkout
unable to unlink old '%s'
unable to read sha1 file of %s (%s)
unable to create symlink %s
unable to create file %s
unable to write file %s
cannot create temporary submodule %s
cannot create submodule directory %s
unknown file mode for %s in index
write_entry
entry.c
state->istate
unable to stat just-written file %s
.merge_link_XXXXXX
cannot opendir '%s'
cannot lstat '%s'
cannot unlink '%s'
cannot rmdir '%s'
cannot create directory at '%s'
GIT_CONFIG
GIT_GRAFT_FILE
GIT_INDEX_FILE
GIT_NO_REPLACE_OBJECTS
GIT_REPLACE_REF_BASE
GIT_INTERNAL_SUPER_PREFIX
GIT_SHALLOW_FILE
refs/replace/
GIT_NAMESPACE
environment.c
git environment hasn't been setup
internal error: work tree has already been set
Current worktree: %s
New worktree: %s
objects/%s
Could not set GIT_DIR to '%s'
UTF-8
core.sharedrepository
GIT_OPTIONAL_LOCKS
refs/namespaces/%s
bad git namespace path "%s"
ewah_set
ewah/ewah_bitmap.c
i >= self->bit_size
ewah_iterator_next
it->literals < it->lw
it->pointer < it->buffer_size
add_empty_word
rlw_get_run_bit(self->rlw) == v
rlw_get_running_len(self->rlw) == run_len + 1
add_literal
rlw_get_literal_words(self->rlw) == current_num + 1
Unable to determine current working directory
git_extract_argv0_path
exec_cmd.c
s >= path_buf
%s/%s
GIT_EXEC_PATH
libexec/git-core
PATH
/usr/local/bin:/usr/bin:/bin
trace: exec:
trace: exec failed: %s
too many args to run %s
system_prefix
argv0_path
is_absolute_path(argv0_path)
/Applications/Xcode.app/Contents/Developer/usr
RUNTIME_PREFIX requested, but prefix computation failed.  Using static fallback '%s'.
no matching remote head
no such remote ref %s
Server does not allow request for unadvertised object %s
fetch.unpacklimit
transfer.unpacklimit
repack.usedeltabaseoffset
fetch.fsckobjects
transfer.fsckobjects
Server does not support shallow clients
multi_ack_detailed
Server supports multi_ack_detailed
no-done
Server supports no-done
multi_ack
Server supports multi_ack
side-band-64k
Server supports side-band-64k
side-band
Server supports side-band
allow-tip-sha1-in-want
Server supports allow-tip-sha1-in-want
allow-reachable-sha1-in-want
Server supports allow-reachable-sha1-in-want
thin-pack
no-progress
include-tag
ofs-delta
Server supports ofs-delta
agent
Server version is %.*s
Server does not support --shallow-since
Server does not support --shallow-exclude
Server does not support --deepen
no common commits
want %s (%s)
already have %s (%s)
Marking %s as complete
--stateless-rpc requires multi_ack_detailed
 multi_ack_detailed
 multi_ack
 no-done
 side-band-64k
 side-band
 deepen-relative
 thin-pack
 no-progress
 include-tag
 ofs-delta
 deepen-since
 deepen-not
 agent=%s
want %s%s
want %s
deepen %d
deepen-since %ju
deepen-not %s
shallow 
invalid shallow line: %s
unshallow 
invalid unshallow line: %s
object not found: %s
error in object: %s
no shallow found: %s
expected shallow/unshallow, got %s
have %s
have %s
got %s %d %s
invalid commit %s
giving up
done
got %s (%d) %s
git fetch-pack: expected shallow list
git fetch-pack: expected ACK/NAK, got EOF
ACK 
continue
common
ready
ERR 
remote error: %s
git fetch-pack: expected ACK/NAK, got '%s'
fetch-pack: unable to fork off sideband demultiplexer
protocol error: bad pack header
--shallow-file
--fix-thin
localhost
--keep=fetch-pack %ju on %s
--check-self-contained-and-connected
unpack-objects
--pack_header=%u,%u
--strict
fetch-pack: unable to fork off %s
%s failed
error in sideband demultiplexer
fetch-pack
LANGUAGE
LC_ALL
LC_CTYPE
LANG
-----BEGIN PGP SIGNATURE-----
-----BEGIN PGP MESSAGE-----
user.signingkey
gpg.program
--status-fd=2
-bsau
[GNUPG:] SIG_CREATED 
gpg failed to sign the data
.git_vtag_tmpXXXXXX
could not create temporary file
failed writing detached signature to '%s'
--status-fd=1
--keyid-format=long
--verify
[GNUPG:] GOODSIG 
[GNUPG:] BADSIG 
[GNUPG:] TRUST_NEVER
[GNUPG:] TRUST_UNDEFINED
[GNUPG:] ERRSIG 
[GNUPG:] EXPSIG 
[GNUPG:] EXPKEYSIG 
[GNUPG:] REVKEYSIG 
log.graphcolors
graph_next_line
graph.c
diff_output_prefix_callback
ignore invalid color '%.*s' in log.graphColors
graph_output_pre_commit_line
graph->num_parents >= 3
0 <= graph->expansion_row && graph->expansion_row < num_expansion_rows
graph_output_commit_char
graph->revs->boundary
graph_output_post_merge_line
parents
par_column
graph_output_collapsing_line
target * 2 <= i
graph->new_mapping[i] == -1
graph->new_mapping[i - 1] > target
graph->new_mapping[i - 2] < 0
graph->new_mapping[i - 3] == target
[1;31m
[36m
grep.extendedregexp
grep.patterntype
grep.linenumber
grep.fullname
color.grep
color.grep.context
color.grep.filename
color.grep.function
color.grep.linenumber
color.grep.matchcontext
color.grep.matchselected
color.grep.selected
color.grep.separator
color.grep.match
header
extended
fixed
perl
bad %s argument: %s
incomplete pattern expression: %s
BUG: a non-header pattern in grep header list.
BUG: unknown header field %d
BUG: malformed header expr
unmatched parenthesis
not a pattern expression %s
--and not followed by pattern expression
--not not followed by pattern expression
--not followed by non pattern expression
fixed %s
cannot use Perl-compatible regexes when not compiled with USE_LIBPCRE
In '%s' at %d, 
%s, 
%s'%s': %s
grep_splice_or
grep.c
x->node == GREP_NODE_OR
[all-match]
true
(not
(and
*and*
*not*
*or*
pattern
pattern_head
pattern_body
<head %d>
<body>
%.*s
BUG: unknown binary handling mode
Binary file 
 matches
BUG: invalid grep_source type to load
'%s': short read
'%s': unable to read %s
BUG: attempt to textconv something without a path?
pcre_exec failed with error code %d
regexec_buf
./git-compat-util.h
nmatch > 0 && pmatch
Not a valid grep expression
Unexpected node type (internal error) %d
match_one_pattern
p->field < ARRAY_SIZE(header_field)
regexp returned nonsense
author 
committer 
0123456789abcdef
EMAIL
0123456789
no email was given and auto-detection is disabled
unable to auto-detect email address (got '%s')
no name was given and auto-detection is disabled
unable to auto-detect name (got '%s')
empty ident name (for <%s>) not allowed
name consists only of disallowed characters: %s
invalid date format: %s
GIT_AUTHOR_NAME
GIT_AUTHOR_EMAIL
GIT_AUTHOR_DATE
GIT_COMMITTER_NAME
GIT_COMMITTER_EMAIL
GIT_COMMITTER_DATE
user.useconfigonly
user.name
user.email
unknown
Unknown
/etc/mailname
cannot read /etc/mailname
cannot get host name
(none)
%s.(none)
*** Please tell me who you are.
  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"
to set your account's default identity.
Omit --global to set the identity only in this repository.
memory exhausted
range_set_append_unsafe
line-log.c
a <= b
range_set_append
rs->nr == 0 || rs->ranges[rs->nr-1].end <= a
sort_and_merge_range_set
o <= rs->nr
range_set_check_invariants
rs->ranges[0].start < rs->ranges[0].end
rs->ranges[i-1].end < rs->ranges[i].start
rs->ranges[i].start < rs->ranges[i].end
Non commit %s?
More than one commit to dig from: %s and %s?
No commit specified?
-L argument not 'start,end:file' or ':funcname:file': %s
malformed -L argument '%s'
file %s has only %lu lines
There is no path %s in the commit
Cannot read blob %s
nth_line
d && line <= d->lines
d->spec && d->spec->data
range_set_union
out->nr == 0
line_log_data_copy
line_log_data_copy_one
%s%sdiff --git a/%s b/%s%s
%s%s+++ b/%s%s
%s%s@@ -%ld,%ld +%ld,%ld @@%s
\ No newline at end of file
queue_diffs
move_diff_queue
src != dst
process_all_files
process_diff_filepair
pair->two->path
rg->path
pair->two->oid_valid
parse_range_funcname
line-range.c
*arg == ':'
-L parameter '%s': %s
-L parameter '%s' starting at line %ld: no match
-L parameter '%s' matches at EOF
-L parameter: regexec() failed: %s
-L invalid empty range
-L invalid line number: %ld
-L parameter '%s' starting at line %ld: %s
bad tree object
bad blob object
conflict-marker-size
merge.default
name
driver
%s: lacks value
ll_ext_merge
ll-merge.c
opts
custom merge driver %s lacks command line.
.merge_file_XXXXXX
binary
built-in binary merge
built-in 3-way text merge
union
built-in union merge
ll_binary_merge
Cannot merge binary files: %s (%s vs. %s)
ll_xdl_merge
ll_union_merge
Unable to create '%s.lock': %s.
Another git process seems to be running in this repository, e.g.
an editor opened by 'git commit'. Please make sure all processes
are terminated then try again. If it still fails, a git process
may have crashed in this repository earlier:
remove the file manually to continue.
Unable to create '%s.lock': %s
BUG: get_locked_file_path() called for malformed lock object
tag: 
v%d-
%04d-%s
Subject: [%s%s%0*d/%d] 
Subject: [%s] 
Subject: 
From %s Mon Sep 17 00:00:00 2001
Message-Id: <%s>
In-Reply-To: <%s>
%s<%s>
References: 
%sMIME-Version: 1.0
Content-Type: multipart/mixed; boundary="%s%s"
This is a multi-part message in MIME format.
--%s%s
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Transfer-Encoding: 8bit
--%s%s
Content-Type: text/x-patch; name="%s"
Content-Transfer-Encoding: 8bit
Content-Disposition: %s; filename="%s"
attachment
inline
commit 
 (from %s)
log size %i
stdout
remoteBranch
stash
object names
add_ref_decoration
log-tree.c
cb_data == NULL
invalid replace ref %s
replaced
refs/stash
grafted
No signature
%s%.*s%s%s
malformed mergetag
merged tag '%s'
tag %s names a non-parent %s
parent #%d, tagged '%s'
HEAD:.mailmap
.mailmap
unable to open mailmap at %s
unable to read mailmap object at %s
mailmap is not a blob: %s
cannot find path %s in tree %s
unable to read tree (%s)
%s is not a tree
cannot read tree %s
entry %s in tree %s is not a tree
entry %.*s not found in tree %s
merge-%s
failed to read the cache
unable to write new index file
BUG: There are unmerged index entries:
BUG: %d %.*s
BUG: unmerged index entries in merge-recursive.c
error building trees
Already up to date!
merging of trees %s and %s failed
BUG: unprocessed path??? %s
Merging:
found %u common ancestor:
found %u common ancestors:
ancestor
Temporary merge branch 1
Temporary merge branch 2
merge returned no commit
merged common ancestors
merged tree
merge.renamelimit
Could not parse object '%s'
Unable to write index.
GIT_MERGE_VERBOSITY
ours
theirs
subtree=
diff-algorithm=
ignore-space-change
ignore-all-space
ignore-space-at-eol
renormalize
no-renormalize
no-renames
find-renames=
rename-threshold=
BUG: ren1_src != ren2_src
BUG: ren1_dst != ren2_dst
CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s
Adding merged %s
Adding as %s instead
setup_rename_conflict_info
merge-recursive.c
!pair2 == !dst_entry2
cannot read object %s '%s'
blob expected for %s '%s'
failed to open '%s': %s
failed to symlink '%s': %s
do not know what to do with %06o %s '%s'
failed to create path '%s'%s
Removing %s to make room for subdirectory
: perhaps a D/F conflict?
refusing to lose untracked file at '%s'
addinfo_cache failed for path '%s'
Failed to execute internal merge
Unable to add %s to database
BUG: unsupported object type in the tree
Removing %s
file/directory
directory/file
CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s
Adding %s
BUG: fatal merge failure, shouldn't happen.
content
add/add
Skipped %s (merged same as existing)
Auto-merging %s
CONFLICT (%s): Merge conflict in %s
renamed
CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree.
CONFLICT (%s/delete): %s deleted in %s and %s to %s in %s. Version %s of %s left in tree.
CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree at %s.
CONFLICT (%s/delete): %s deleted in %s and %s to %s in %s. Version %s of %s left in tree at %s.
CONFLICT (rename/rename): Rename "%s"->"%s" in branch "%s" rename "%s"->"%s" in "%s"%s
 (left unresolved)
%s is a directory in %s adding as %s instead
CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s
Renaming %s to %s and %s to %s instead
blob_unchanged
o_oid && a_oid
cannot read object %s
object %s is not a blob
modify
modified
virtual %s
(bad commit)
%.*s
merge.verbosity
unable to create lazy_dir_thread
unable to join lazy_dir_thread
unable to create lazy_name_thread
unable to join lazy_name_thread
cache entry out of order
hash_dir_entry_with_parent_and_prefix
name-hash.c
(parent != NULL) ^ (strchr(prefix->buf, '/') == NULL)
string_list_add_refs_by_glob
notes.c
list->strdup_strings
notes ref %s is invalid
GIT_NOTES_REF
refs/notes/commits
init_notes
!t->initialized
Cannot use notes ref %s
Failed to read notes tree referenced by %s (%s)
init_display_notes
!display_notes_trees
GIT_NOTES_DISPLAY_REF
add_note
t->initialized
remove_note
get_note
for_each_note
write_notes_tree
prune_notes
format_display_notes
display_notes_trees
notes/
Could not read %s for notes-index
prefix_len (%ju) is out of range
prefix_len (%ju) is too small
Failed to load %s %s into notes tree from %s
note
subtree
notes.displayref
note_tree_insert
GET_PTR_TYPE(entry) == 0
GET_PTR_TYPE(*p) == PTR_TYPE_NOTE || GET_PTR_TYPE(*p) == PTR_TYPE_SUBTREE
note_tree_remove
i == n && parent_stack[i] == tree
note_tree_consolidate
tree && parent
CLR_PTR_TYPE(parent->a[index]) == tree
for_each_note_helper
path_len < FANOUT_PATH_MAX - 1
construct_path_with_fanout
fanout < GIT_SHA1_RAWSZ
write_each_note
note_path_len <= GIT_SHA1_HEXSZ + FANOUT_PATH_SEPARATORS
write_each_note_helper
memchr(path + 3 * n, '/', path_len - (3 * n)) == NULL
tree_write_stack_init_subtree
!tws->next
tws->path[0] == '\0' && tws->path[1] == '\0'
Notes:
Notes (%s):
    
refs/notes/%s
update notes cache
invalid object type "%s"
object %s is a %s, not a %s
object %s has unknown type id %d
unable to parse object: %s
sha1 mismatch %s
%s/pack/pack-%s.%s
pack
pack_report: getpagesize()            = %10ju
pack_report: core.packedGitWindowSize = %10ju
pack_report: core.packedGitLimit      = %10ju
pack_report: pack_used_ctr            = %10u
pack_report: pack_mmap_calls          = %10u
pack_report: pack_open_windows        = %10u / %10u
pack_report: pack_mapped              = %10ju / %10ju
.pack
BUG: pack_name does not end in .pack
%.*s.idx
pack '%s' still has open windows to it
BUG: want to close pack marked 'do-not-close'
packfile %s cannot be accessed
offset beyond end of packfile (truncated pack?)
offset before end of packfile (broken .idx?)
packfile %s cannot be mapped
.idx
.keep
bad object header
delta data unpack-initial failed
bad packed object CRC for %s
failed to validate delta base reference at offset %ju from %s
BUG: unpack_entry: left loop at a valid delta
unknown object type %i at offset %ju in %s
failed to read delta base object %s at offset %ju from %s
failed to unpack compressed delta at offset %ju from %s
failed to apply delta
offset before start of pack index for %s (corrupt index?)
offset beyond end of pack index for %s (truncated index?)
GIT_DEBUG_LOOKUP
%02x%02x%02x... lo %u hi %u nr %u
lo %u hi %u rg %u mi %u
index file %s is too small
index file %s is version %u and is not supported by this binary (try upgrading GIT to a newer version)
non-monotonic index %s
wrong index v1 file size in %s
wrong index v2 file size in %s
packfile %s index unavailable
packfile %s not a regular file
packfile %s size changed
cannot determine file descriptor flags
cannot set FD_CLOEXEC
error reading from %s
file %s is far too short to be a packfile
file %s is not a GIT packfile
packfile %s is version %u and not supported (try upgrading GIT to a newer version)
packfile %s claims to have %u objects while index indicates %u objects
end of packfile %s is unavailable
packfile %s signature is unavailable
packfile %s does not match index
/pack
unable to open object pack directory: %s
.bitmap
I am totally screwed
GIT_TRACE_PACK_ACCESS
packfile.c
%s %ju
unable to get sha1 of object %u in %s
packfile %s index not opened
Packfile index for %s SHA1 mismatch
%s SHA1 checksum mismatch
%s SHA1 does not match its index
internal error pack-check nth-packed-object
index CRC mismatch for object %s from %s at offset %ju
cannot unpack %s from %s at offset %ju
packed %s from %s is corrupt
bad offset for revindex
write_idx_file
pack-write.c
index_name
pack/tmp_idx_XXXXXX
unable to create '%s'
The same object %s appears twice in the pack
Failed seeking to start of '%s'
Unable to reread header of '%s'
Unexpected short read for header of '%s'
Failed to checksum '%s'
Unexpected checksum for %s (disk corruption?)
keep
%s/pack/pack-%s.keep
bad type %d
object size is too enormous to format
pack/tmp_pack_XXXXXX
unable to make temporary pack file readable
unable to make temporary index file readable
%s.pack
unable to rename temporary pack file
%s.idx
unable to rename temporary index file
GIT_PAGER
PAGER
less
GIT_PAGER_IN_USE
COLUMNS
core.pager
LESS=FRX LV=-c
malformed build-time PAGER_ENV: %s
malformed build-time PAGER_ENV
pager.
BUG: switch '%c' (--%s) %s
BUG: option '%s' %s
BUG: switch '%c' %s
STOP_AT_NON_OPTION and KEEP_UNKNOWN don't go together
help-all
help
unknown switch `%c'
unknown non-ascii option in string: `%s'
fatal: %s
switch `%c' %s
option `no-%s' %s
option `%s' %s
uses incompatible flags LASTARG_DEFAULT and OPTARG
invalid short name
short name already used
uses feature not supported for dashless options
should not accept an argument
multi-word argh should use dash to separate words
takes no value
isn't available
expects a numerical value
expects a non-negative integer value with an optional k/m/g suffix
should not happen, someone must be hit on the forehead
--%s
: incompatible with %s
: incompatible with something else
requires a value
did you mean `--%s` (with two dashes ?)
Ambiguous option: %s (could be --%s%s or --%s%s)
cat <<\EOF
usage: %s
   or: %s
    %s
-NUM
%*s%s
[=%s]
[=<%s>]
[%s]
[<%s>]
 <%s>
unexpected delta opcode 0
delta replay has gone wild
Could not get patch ID for %s
ref:
HOME
/.git
.git/.git
Could not make %s writable by group
git~1
gitmodules
gi7eba
gitignore
gi250a
gitattributes
gi7d29
xdg_config_home
path.c
filename
XDG_CONFIG_HOME
%s/git/%s
%s/.config/git/%s
xdg_cache_home
XDG_CACHE_HOME
%s/.cache/git/%s
CHERRY_PICK_HEAD
SQUASH_MSG
MERGE_MSG
MERGE_RR
MERGE_MODE
FETCH_HEAD
shallow
branches
hooks
info
info/sparse-checkout
logs
logs/HEAD
logs/refs/bisect
lost-found
objects
refs
refs/bisect
remotes
worktrees
rr-cache
gc.pid
packed-refs
worktrees/%s
grafts
BUG: PATHSPEC_PREFER_CWD and PATHSPEC_PREFER_FULL are incompatible
BUG: PATHSPEC_PREFER_CWD requires arguments
empty strings as pathspecs will be made invalid in upcoming releases. please use . instead if you meant to match all paths
pathspec '%s' is beyond a symbolic link
BUG: PATHSPEC_MAXDEPTH_VALID and PATHSPEC_KEEP_ORDER are incompatible
BUG: 'prefix' magic is supposed to be used at worktree's root
%s: 'literal' and 'glob' are incompatible
%s: '%s' is outside repository
BUG: error initializing pathspec_item
prefix:
invalid parameter for pathspec magic 'prefix'
attr:
Invalid pathspec magic '%.*s' in '%s'
Missing ')' at the end of pathspec magic in '%s'
Only one 'attr:' specification is allowed.
attr spec must not be empty
invalid attribute name %s
BUG: should have same number of entries
Escape character '\' not allowed as last character in attr value
cannot use '%c' for value matching
literal
icase
attr
Unimplemented pathspec magic '%c' in '%s'
global 'glob' and 'noglob' pathspec settings are incompatible
global 'literal' pathspec setting is incompatible with all other global pathspec settings
GIT_GLOB_PATHSPECS
GIT_NOGLOB_PATHSPECS
GIT_ICASE_PATHSPECS
GIT_LITERAL_PATHSPECS
,prefix:%d)
'%s' (mnemonic: '%c')
'%s'
%s: pathspec magic not supported by this command: %s
0000
flush packet write failed
protocol error: bad line length character: %.4s
protocol error: bad line length %d
PACK
PACK
PACK ...
packet: %12s%c 
pkt-line.c
GIT_TRACE_PACKET
GIT_TRACE_PACKFILE
sideband
packet write with format failed
protocol error: impossibly long line
0123456789abcdef
packet write failed - data exceeds max packet size
packet write failed
BUG: multiple sources given to packet_read
read error
The remote end hung up unexpectedly
unable to create threaded lstat
unable to join threaded lstat
format:
tformat:
invalid --pretty format: %s
From: 
 <%.*s>
%s: %.*s%.*s <%.*s>
Date:   %s
Date: %s
%sDate: %s
MIME-Version: 1.0
Content-Type: text/plain; charset=%s
Content-Transfer-Encoding: 8bit
medium
email
mboxrd
fuller
full
pretty.
invalid --pretty format: '%s' references an alias which points to itself
=?%s?q?
=%02X
 =?%s?q?
encoding 
(auto)
(trailers
only
unfold
auto,
always,
unable to parse --pretty format
[31m
green
[32m
blue
[34m
reset
trunc)
ltrunc)
mtrunc)
From 
bad parent line in commit
Author
Commit
Merge:
BUG: prio_queue_reverse() on non-LIFO queue
done
, %s.
%s: %3u%% (%u/%u)%s%s
%s: %u%s%s
%s...
GIT_ASKPASS
SSH_ASKPASS
GIT_TERMINAL_PROMPT
terminal prompts disabled
could not read %s%s
unable to read askpass response from '%s'
Too many or long arguments
cannot create an empty blob in the object database
%s: can only add regular files, symbolic links or git-directories
unable to index file %s
unable to add %s to index
add '%s'
unable to stat '%s'
%s: needs update
%s needs update
%s: needs merge
%s: index file open failed
cannot stat the open index
index file smaller than expected
unable to map index file
index file corrupt
sharedindex.%s
broken index, expect %s in %s, got %s
GIT_TEST_SPLIT_INDEX
%s: cannot drop to stage #0
internal error: ce_mode is %o
Will not add file alias '%s' ('%s' already exists in index)
modules
'%s' appears as both a file and as a directory
bad signature
bad index version %d
bad index file sha1 signature
Unknown index entry format %08x
malformed name field in the index
index uses %.4s extension, which we do not understand
ignoring %.4s extension
unordered stage entries in index
multiple stage entries for merged file '%s'
unordered stage entries for '%s'
could not freshen shared index '%s'
do_write_locked_index
read-cache.c
(flags & (COMMIT_LOCK | CLOSE_LOCK)) != (COMMIT_LOCK | CLOSE_LOCK)
GIT_ALLOW_NULL_SHA1
GIT_INDEX_VERSION
index.version
index.version set, but the value is invalid.
Using version %i
GIT_INDEX_VERSION set, but the value is invalid.
Using version %i
sharedindex_XXXXXX
cannot fix permission bits on %s
unable to open git dir: %s
sharedindex.
unable to unlink: %s
could not stat '%s'
splitindex.sharedindexexpire
2.weeks.ago
Cannot walk reflogs for %s
No current branch
%s@{
Reflog: %s (%s)
Reflog message: %s
refs/%s
%s does not point to a valid object!
%sHEAD
ignoring dangling symref %s.
ignoring broken ref %s.
core.filesreflocktimeout
refs_delete_ref
refs.c
refs == get_main_ref_store()
refs/notes/
Log for %s is empty.
ref_store_transaction_begin
BUG: free called on a prepared reference transaction
BUG: unexpected reference transaction state
BUG: update called for transaction that is not open
BUG: REF_ISPRUNING set without REF_NODEREF
ref_transaction_update
refusing to update ref with bad name '%s'
BUG: create called without valid new_sha1
BUG: delete called with old_sha1 set to zeros
BUG: verify called with old_sha1 set to NULL
refs_update_ref
update_ref failed for ref '%s': %s
shorten_unambiguous_ref
offset < total_len
transfer.hiderefs
hiderefs
GIT_REF_PARANOIA
reference iterator is not ordered
%srefs/
worktree
ref_update_reject_duplicates
multiple updates for ref '%s' not allowed.
BUG: ref_update_reject_duplicates() received unsorted list
BUG: prepare called twice on reference transaction
BUG: prepare called on a closed reference transaction
GIT_QUARANTINE_PATH
ref updates forbidden inside quarantine environment
BUG: abort called on a closed reference transaction
BUG: commit called on a closed reference transaction
refs_verify_refname_available
'%s' exists; cannot create '%s'
cannot process '%s' and '%s' at the same time
BUG: error while iterating over references
.lock
refs/%.*s
refs/tags/%.*s
refs/heads/%.*s
refs/remotes/%.*s
refs/remotes/%.*s/HEAD
Could not open '%s' for writing
could not read ref '%s'
Unexpected sha1 when deleting %s
Log for ref %s has gap after %s.
Log for ref %s unexpectedly ended on %s.
could not open '%s' for writing: %s
unexpected sha1 when writing '%s'
files
BUG: reference backend %s is unknown
BUG: %s ref_store '%s' initialized twice
%s/packed-refs
init_db
refs/heads
refs/tags
BUG: ref_store is type "%s" not "files" in %s
BUG: operation %s requires abilities 0x%x, but only have 0x%x
BUG: unknown ref type %d of ref %s
ref_transaction_prepare
files_transaction_prepare
refs/files-backend.c
lock_ref_for_update
cannot lock ref '%s': %s
cannot lock ref '%s': error reading reference
cannot update ref '%s': %s
couldn't close '%s.lock'
BUG: operation %s only allowed for main ref store
multiple updates for 'HEAD' (including one via its referent '%s') are not allowed
%s unexpectedly not 'HEAD'
lock_raw_ref
unable to resolve reference '%s'
unable to create lock file %s.lock; non-directory in the way
unable to create directory for %s
there is a non-empty directory '%s' blocking reference '%s'
unable to resolve reference '%s': reference broken
unable to resolve reference '%s': %s
cannot lock ref '%s': reference already exists
cannot lock ref '%s': reference is missing but expected %s
cannot lock ref '%s': is at %s but expected %s
multiple updates for '%s' (including one via symref '%s') are not allowed
%s unexpectedly found in affected_refnames
trying to write ref '%s' with nonexistent object %s
trying to write non-commit object %s to branch '%s'
couldn't write '%s'
error aborting transaction: %s
ref_transaction_finish
files_transaction_finish
cannot update the ref '%s': %s
couldn't set '%s'
unable to append to '%s': %s
unable to create directory for '%s': %s
there are still logs under '%s'
%s/logs/%s
ref_transaction_abort
initial_ref_transaction_commit
files_initial_transaction_commit
BUG: commit called for transaction that is not open
BUG: initial ref transaction called with existing refs
BUG: initial ref transaction with old_sha1 set
pack_refs
failure preparing to create packed reference %s: %s
error while iterating over references
unable to write new packed-refs: %s
fill_ref_dir
loose refname is dangerous: %s
create_symref
lock_ref_sha1_basic
there are still refs under '%s'
can't verify ref '%s'
ref '%s' is at %s but expected %s
unable to fdopen %s: %s
ref: %s
unable to write symref for %s: %s
no symlink - falling back to symbolic ref
delete_refs
could not remove reference %s
could not delete reference %s: %s
could not delete references: %s
rename_ref
refs/.tmp-renamed-log
reflog for %s is a symlink
refname %s not found
refname %s is a symbolic ref, copying it is not supported
refname %s is a symbolic ref, renaming it is not supported
unable to move logfile logs/%s to logs/refs/.tmp-renamed-log: %s
unable to copy logfile logs/%s to logs/refs/.tmp-renamed-log: %s
unable to delete old %s
Directory not empty: %s
unable to delete existing %s
unable to copy '%s' to '%s': %s
unable to rename '%s' to '%s': %s
unable to write current sha1 into %s: %s
unable to lock %s for rollback: %s
unable to restore logfile %s from %s: %s
unable to restore logfile %s from logs/refs/.tmp-renamed-log: %s
directory not empty: %s
unable to move logfile %s to %s: %s
commit_ref_update
ref_iterator_begin
read_raw_ref
reflog_iterator_begin
%s/logs
bad ref for %s
BUG: ref_iterator_peel() called for reflog_iterator
for_each_reflog_ent
for_each_reflog_ent_reverse
cannot seek back reflog for %s: %s
cannot read %d bytes from reflog for %s: %s
BUG: reverse reflog parser had leftover data
reflog_exists
create_reflog
delete_reflog
reflog_expire
cannot fdopen %s (%s)
couldn't write %s: %s
couldn't write %s
unable to write reflog '%s' (%s)
couldn't set %s
would prune %s
prune %s
%s %s %s %ju %+05d
keep %s
refs/iterator.c
overlay_ref_iterator requires ordered inputs
BUG: peel called for empty iterator
BUG: peel called before advance for merge iterator
BUG: attempt to trim too many characters
packed_refs_lock
core.packedrefstimeout
unable to close %s: %s
packed_refs_unlock
BUG: packed_refs_unlock() called when not locked
packed_refs_is_locked
is_packed_transaction_needed
refs/packed-backend.c
is_packed_transaction_needed() called while unlocked
packed
BUG: ref_store is type "%s" not "packed" in %s
BUG: unallowed operation (%s), requires %x, has %x
error ummapping packed-refs file %s
# pack-refs with:
fully-peeled
peeled
couldn't read %s
couldn't stat %s
unterminated line in %s: %.*s
unterminated line in %s: %.75s...
unexpected line in %s: %.*s
unexpected line in %s: %.75s...
unterminated line found in packed-refs
unterminated peeled line found in packed-refs
BUG: write_with_updates() called while unlocked
%s.new
unable to create file %s: %s
unable to fdopen packed-refs tempfile: %s
cannot update ref '%s': reference already exists
cannot update ref '%s': is at %s but expected %s
cannot update ref '%s': reference is missing but expected %s
unable to write packed-refs file: error iterating over old contents
error closing file %s: %s
error writing to %s: %s
error replacing %s: %s
BUG: packed reference store does not support symrefs
BUG: packed reference store does not support renaming references
BUG: packed reference store does not support copying references
packed refname is dangerous: %s
BUG: packed reference store does not support reflogs
get_ref_dir
refs/ref-cache.c
entry->flag & REF_DIR
BUG: incomplete ref_store without fill_ref_dir function
Reference directory conflict: %s
Duplicated ref, and SHA1s don't match: %s
Duplicated ref: %s
origin
query_refspecs: need either src or dst
refs/heads/
refs/tags/
HEAD does not point to a branch
no such branch: '%s'
no upstream configured for branch '%s'
upstream branch '%s' not stored as a remote-tracking branch
Couldn't find remote ref %s
* Ignoring funny ref '%s' locally
--left-right
%s...%s
Your branch is based on '%s', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)
Your branch is up to date with '%s'.
Your branch is ahead of '%s' by %d commit.
Your branch is ahead of '%s' by %d commits.
  (use "git push" to publish your local commits)
Your branch is behind '%s' by %d commit, and can be fast-forwarded.
Your branch is behind '%s' by %d commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)
Your branch and '%s' have diverged,
and have %d and %d different commit each, respectively.
Your branch and '%s' have diverged,
and have %d and %d different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
refs/heads/master
refs/tags/*
Invalid refspec '%s'
make_remote
remote.c
replaced == NULL
remotes/%s
URL:
Push:
Pull:
branches/%s
master
refs/heads/%s:refs/heads/%s
HEAD:refs/heads/%s
branch
remote
pushremote
merge
insteadof
pushinsteadof
pushdefault
Config remote shorthand cannot begin with '/': %s
mirror
skipdefaultupdate
skipfetchall
prune
pushurl
push
fetch
receivepack
more than one receivepack given, using the first
uploadpack
more than one uploadpack given, using the first
tagopt
--no-tags
--tags
proxy
proxyauthmethod
Cannot fetch both %s and %s to %s
%s usually tracks %s, not %s
%s tracks both %s and %s
Internal error
Key '%s' of pattern had no '*'
Value '%s' of pattern has no '*'
src refspec %s does not match any.
src refspec %s matches more than one.
%s cannot be resolved to branch.
unable to delete '%s': remote ref does not exist
unable to push to unqualified destination: %s
The destination refspec neither matches an existing ref on the remote nor
begins with refs/, and we are unable to guess a prefix based on the source ref.
dst refspec %s matches more than one.
dst ref %s receives from more than one src.
(delete)
refs/heads/%s
branch '%s' has no remote for pushing
push refspecs for '%s' do not include '%s'
push has no destination (push.default is 'nothing')
cannot resolve 'simple' push to a single destination
BUG: unhandled push situation
push destination '%s' on remote '%s' has no local tracking branch
heads/
tags/
remotes/
query_refspecs_multiple: need either src or dst
cannot parse expected object name '%s'
replace depth too high for object %s
bad replace ref name: %s
duplicate replace ref: %s
info/grafts
rr-cache/%s
rr-cache/%s/%s
rr-cache/%s/%s.%d
Could not read index
gc.rerereresolved
gc.rerereunresolved
unable to open rr-cache directory
rerere.enabled
rerere.autoupdate
Could not create directory %s
corrupt MERGE_RR
Could not write %s
There were errors while writing %s (%s)
Failed to flush %s
Could not parse conflict hunks in %s
postimage
Recorded resolution for '%s'.
Resolved '%s' using previous resolution.
preimage
cannot unlink stray '%s'
Recorded preimage for '%s'
thisimage
Writing %s failed
Staged '%s' using previous resolution.
Unable to write new index file
Could not parse conflict hunks in '%s'
Failed to update conflicted state in '%s'
no remembered resolution for '%s'
no remembered resolution for %s
cannot unlink %s
Updated preimage for '%s'
Forgot resolution for %s
write_rr
rerere.c
rr->items[i].util != RERERE_RESOLVED
id->variant >= 0
%s.%d
%s%c
%s%c
unable to write rerere record
%o%c
Index records invalid resolve-undo information
cannot unmerge '%s'
index
unknown option `%s'
--stdin
--stdin given twice?
bad revision '%s'
cannot combine --reverse with --walk-reflogs
cannot combine --walk-reflogs with history-limiting options
cannot combine --parents and --children
cannot combine --reverse with --graph
cannot combine --walk-reflogs with --graph
cannot combine --no-walk with --graph
cannot use --grep-reflog without --walk-reflogs
--first-parent is incompatible with --bisect
treesame
bad tree %s
bad object %s
reflog of '%s' references pruned commits
unable to add index blob to traversal
Invalid symmetric difference expression %s
Invalid revision range %s
--branches
--remotes
--reflog
--not
--no-walk
--do-walk
--bisect
--glob=
--indexed-objects
--exclude=
--branches=
--tags=
--remotes=
--no-walk=
max-count
skip
'%s': not a non-negative integer
-n requires an argument
max-age
since
after
min-age
before
until
--first-parent
--ancestry-path
--walk-reflogs
--default
bad --default argument
--merge
--topo-order
--simplify-merges
--simplify-by-decoration
--date-order
--author-date-order
--early-output
--early-output=
--parents
--dense
--sparse
--show-all
--remove-empty
--merges
--no-merges
--min-parents=
--no-min-parents
--max-parents=
--no-max-parents
--boundary
--left-only
--left-only is incompatible with --right-only or --cherry
--right-only
--right-only is incompatible with --left-only
--cherry
--cherry is incompatible with --left-only
--count
--cherry-mark
--cherry-mark is incompatible with --cherry-pick
--cherry-pick
--cherry-pick is incompatible with --cherry-mark
--objects-edge
--objects-edge-aggressive
--verify-objects
--unpacked
--unpacked=
--unpacked=<packfile> no longer supported.
--cc
--pretty
--pretty=
--format=
--expand-tabs
--no-expand-tabs
--expand-tabs=
--show-notes
--notes
--show-signature
--no-show-signature
--show-linear-break
                    ..........
--show-linear-break=
--show-notes=
--notes=
--no-notes
--standard-notes
--no-standard-notes
--oneline
oneline
--graph
--root
--no-commit-id
--always
--no-abbrev
--abbrev
--abbrev=
--abbrev-commit
--no-abbrev-commit
--full-diff
--full-history
--relative-date
date
--log-size
author
committer
grep-reflog
grep
--grep-debug
--basic-regexp
--extended-regexp
--regexp-ignore-case
--fixed-strings
--perl-regexp
--all-match
--invert-grep
encoding
--reverse
--children
children
--ignore-missing
--show-linear-break and --graph are incompatible
BUG: --single-worktree cannot be used together with submodule
glob
exclude
sorted
unsorted
invalid argument to --no-walk
--single-worktree
refs/bisect/%s
options not supported in --stdin mode
--merge without HEAD?
MERGE_HEAD
--merge without MERGE_HEAD?
your current branch appears to be broken
your current branch '%s' does not have any commits yet
bad tag
unable to parse commit %s
%s is unknown object
--ancestry-path given but there are no bottom commits
cannot simplify commit %s (because of %s)
cannot simplify commit %s (invalid %s)
bad tree compare for commit %s
update_treesame %s
mark_redundant_parents %d %d %d %d
compact_treesame %u
compact_treesame parents mismatch
reflog 
author 
committer 
%.*s <%.*s>
Failed to traverse parents of commit %s
Failed to simplify parents of commit %s
standard output
standard error
cannot create %s pipe for %s: %s
run-command.c
trace: run_command:
/dev/null
open /dev/null failed
cannot fork() for %s
BUG: run_command with a pipe can cause deadlock
cannot create pipe
cannot create thread
pthread_join failed
hooks/%s
BUG: command is empty
/bin/sh
BUG: shell command is empty
|&;<>()$`\"' 
*?[#~=%
%s "$@"
blocking all signals
disabling cancellation
BUG: %s
re-enabling cancellation
restoring signal mask
trace: run_command: running exit handler for pid %ju
waitpid for %s failed
waitpid is confused (%s)
%s died of signal %d
exec '%s': cd to '%s' failed
dup2() in child failed
close() in child failed
sigprocmask failed restoring signals
cannot run %s
cannot exec '%s'
unable to block SIGPIPE in async thread
poll failed
run_processes_parallel: preparing to run up to %d tasks
BUG: you need to specify a get_next_task function
BUG: bookkeeping is hard
poll
read
run_processes_parallel: done
if-asked
report-status
delete-refs
quiet
no-thin
atomic
push-options
push-cert
the receiving end does not support --signed push
not sending a push certificate since the receiving end does not support --signed push
No refs in common and none specified; doing nothing.
Perhaps you should specify a branch such as 'master'.
the receiving end does not support --atomic push
the receiving end does not support push options
 report-status
 quiet
 atomic
 push-options
%s %s %s%c%s
%s %s %s
send-pack: unable to fork off sideband demultiplexer
the receiving end asked to sign an invalid nonce <%.*s>
certificate version 0.1
pusher %s 
pushee %s
nonce %s
push-option %s
%s %s %s
failed to sign the push certificate
push-cert%c%s
push-cert-end
atomic push failed for ref %s. status: %d
send-pack
--revs
--progress
--shallow
git pack-objects failed
error writing to pack-objects
pack-objects died of signal %d
unpack 
unable to parse remote unpack status: %s
remote unpack failed: %s
invalid ref status from remote: %s
remote reported status on unknown ref: %s
remote reported status on unexpected ref: %s
sequencer
cannot open '%s'
cannot read '%s': %s
unexpected end of file
stored pre-cherry-pick HEAD file '%s' is corrupt
cannot abort from a branch yet to be born
You seem to have moved HEAD. Not rewinding, check your HEAD!
sequencer_pick_revisions
sequencer.c
opts->revs
%s: can't cherry-pick a %s
%s: bad revision
BUG: expected exactly one commit from walk
can't revert as initial commit
rebase.instructionFormat
make_script: unhandled options
make_script: error preparing revisions
pick %s 
could not read '%s'.
unusable todo list: '%s'
unable to open '%s' for writing
%.*s %s %.*s
.backup
 - %s %.*s
Warning: some commits may have been dropped accidentally.
Dropped commits (newer to older):
To avoid this message, use "drop" to explicitly remove a commit.
Use 'git config rebase.missingCommitsCheck' to change the level of warnings.
The possible behaviours are: ignore, warn, error.
You can fix this with 'git rebase --edit-todo' and then run 'git rebase --continue'.
Or you can abort the rebase with 'git rebase --abort'.
could not read 'onto'
need a HEAD to fixup
could not parse commit '%s'
the script was already rearranged.
fixup! 
squash! 
fixup!
sequencer/head
no cherry-pick or revert in progress
cannot resolve HEAD
could not read '%s'
sequencer/abort-safety
git %s: failed to read the index
git %s: failed to refresh the index
rebase -i
Unknown action: %d
cannot rebase: You have unstaged changes.
could not remove CHERRY_PICK_HEAD
cannot amend non-existing commit
invalid file: '%s'
invalid contents: '%s'
You have uncommitted changes in your working tree. Please, commit them
first and then run 'git rebase --continue' again.
could not commit staged changes.
--amend
-S%s
--cleanup=strip
commit.cleanup
--cleanup=verbatim
--allow-empty
--allow-empty-message
'\\''
rebase-merge/author-script
rebase-merge/message
sequencer/todo
--rerere-autoupdate
--no-rerere-autoupdate
malformed options sheet: '%s'
rebase-merge/gpg_sign_opt
rebase-merge/allow_rerere_autoupdate
rebase-merge/verbose
rebase-merge/strategy
rebase-merge/strategy_opts
sequencer/opts
options.no-commit
options.edit
options.signoff
options.record-origin
options.allow-ff
options.mainline
options.strategy
options.gpg-sign
options.strategy-option
options.allow-rerere-auto
invalid value for %s: %s
please fix this using 'git rebase --edit-todo'.
unusable instruction sheet: '%s'
no commits parsed.
cannot cherry-pick during a revert.
cannot revert during a cherry-pick.
rebase-merge/end
your local changes would be overwritten by %s.
commit your changes or stash them to proceed.
rebase-merge/stopped-sha
rebase-merge/rewritten-pending
%.*s %s
rebase-merge/rewritten-list
GIT_REFLOG_ACTION
pick_commits
!(opts->signoff || opts->no_commit || opts->record_origin || opts->edit)
Rebasing (%d/%d)%s
Stopped at %s...  %.*s
cannot read HEAD
could not read orig-head
finish
%s onto %s
could not update %s
returning to %s
could not update HEAD to %s
post-rewrite
notes
--for-rewrite=rebase
Successfully rebased and updated %s.
could not lock '%s'
failed to finalize '%s'.
rebase-merge/msgnum
 (%s)
Unknown command: %d
your index file is unmerged.
commit %s is a merge but no -m option was given.
commit %s does not have parent %d
mainline was specified but commit %s is not a merge.
%s: cannot parse parent commit %s
Revert "
This reverts commit 
, reversing
changes made to 
could not rename '%s' to '%s'
recursive
could not revert %s... %s
could not apply %s... %s
%s... %s
parent of %s
GIT_AUTHOR_NAME='
'\\%c'
GIT_AUTHOR_EMAIL='
GIT_AUTHOR_DATE='@
%s: fast-forward
0123456789
unexpected 1st line of squash message:
%.*s
invalid 1st line of squash message:
%.*s
This is a combination of %d commits.
could not read HEAD
could not read HEAD's commit message
cannot write '%s'
This is the 1st commit message:
could not read commit message of %s
This is the commit message #%d:
The commit message #%d will be skipped:
unknown command: %d
rebase-merge/message-squash
rebase-merge/message-fixup
(empty tree)
%s: Unable to write new index file
could not write eol to '%s'
GIT_CHERRY_PICK_HELP
after resolving the conflicts, mark the corrected paths
with 'git add <paths>' or 'git rm <paths>'
after resolving the conflicts, mark the corrected paths
with 'git add <paths>' or 'git rm <paths>'
and commit the result with 'git commit'
could not resolve HEAD commit
unable to update cache tree
You can amend the commit now, with
  git commit --amend %s
Once you are satisfied with your changes, run
  git rebase --continue
Could not apply %s... %.*s
%s/patch
%s/message
could not copy '%s' to '%s'
Executing: %s
GIT_DIR=%s
could not read index
execution failed: %s
%sYou can fix the problem, and then run
  git rebase --continue
and made changes to the index and/or the working tree
execution succeeded: %s
but left changes to the index and/or the working tree
Commit or stash your changes, and then run
  git rebase --continue
apply
Applied autostash.
autostash
cannot store %s
Applying autostash resulted in conflicts.
Your changes are safe in the stash.
You can run "git stash pop" or "git stash drop" at any time.
rebase-merge/autostash
%s %s %.*s
empty commit set passed
a cherry-pick or revert is already in progress
try "git cherry-pick (--continue | --quit | --abort)"
could not create sequencer directory '%s'
could not lock HEAD
could not parse commit %s
could not parse parent commit %s
invalid line %d: %.*s
cannot '%s' without a previous commit
rebase.missingcommitscheck
unrecognized setting %s for option rebase.missingCommitsCheck. Ignoring.
pick
edit
reword
fixup
squash
exec
drop
%.*s%s
'%s' is outside repository
failed to stat '%s'
option '%s' must come before non-option arguments
ambiguous argument '%s': both revision and filename
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
GIT_COMMON_DIR
%s/commondir
failed to read %s
GIT_OBJECT_DIRECTORY
is_nonbare_repository_dir
setup.c
orig_path_len != 0
.git
unable to set up work tree using invalid config
This operation must be run in a work tree
GIT_WORK_TREE
Expected git repo version <= %d, found %d
unknown repository extensions found:
Error opening '%s'
Too large to be a .git file: '%s'
Error reading %s
Invalid gitfile format: %s
No path in gitfile: %s
Not a git repository: %s
BUG: unknown error code
gitdir: 
ignoring git dir '%s': %s
Unable to read current working directory
Cannot change to '%s'
Not a git repository (or any parent up to mount point %s)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
BUG: unhandled setup_git_directory_1() result
GIT_PREFIX
GIT_DIR
umask
group
world
everybody
Problem with core.sharedRepository filemode value (0%.3o).
The owner of files must always have read and write permissions.
open /dev/null or dup failed
fork failed
setsid failed
%s: no such path in the working tree.
Use 'git <command> -- <path>...' to specify paths that do not exist locally.
ambiguous argument '%s': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
core.repositoryformatversion
extensions.
noop
preciousobjects
core.worktree
GIT_CEILING_DIRECTORIES
GIT_DISCOVERY_ACROSS_FILESYSTEM
failed to stat '%*s%s%s'
'$%s' too big
Not a git repository: '%s'
core.bare and core.worktree do not make sense
Could not chdir to '%s'
Could not come back to cwd
GIT_IMPLICIT_WORK_TREE
Cannot come back to cwd
Not a git repository (or any of the parent directories): %s
/config
BUG: assertion failed in binary search
raceproof_create_file
sha1_file.c
*path
objects/info/alternates
unable to fdopen alternates lockfile
unable to read alternates file
unable to move new alternates file into place
path '%s' does not exist
%s/.git
%s/.git/objects
%s/objects
reference repository '%s' as a linked checkout is not supported yet.
reference repository '%s' is not a local repository.
%s/shallow
reference repository '%s' is shallow
%s/info/grafts
reference repository '%s' is grafted
GIT_ALTERNATE_OBJECT_DIRECTORIES
mmap failed
failed to read object %s
replacement %s not found for %s
loose object %s (stored in %s) is corrupt
packed object %s (stored in %s) is corrupt
tree 
object 
unable to write sha1 filename %s
unable to set permission to '%s'
cannot read sha1_file for %s
open("%s")
%s: failed to insert into database
readlink("%s")
%s: unsupported file type
%s is not a valid object
%s is not a valid '%s' object
invalid loose object subdirectory: %x
%02x
unable to open %s
%02x%s
unable to mmap %s
unable to unpack header of %s
unable to parse header of %s
unable to unpack contents of %s
sha1 mismatch for %s (expected %s)
0123456789abcdef
%s: ignoring alternate object stores, nesting too deep.
unable to normalize object directory: %s
unable to normalize alternate object path: %s
object directory %s does not exist; check .git/objects/info/alternates.
%s/info/alternates
GIT_MMAP_LIMIT
attempting to mmap %ju over limit %ju
object file %s is empty
invalid object type
unable to unpack %s header with --allow-unknown-type
unable to unpack %s header
unable to parse %s header with --allow-unknown-type
unable to parse %s header
insufficient permission for adding an object to repository database %s
unable to create temporary file
unable to write sha1 file
unable to deflate new object %s (%d)
deflateEnd on object %s failed (%d)
confused by unstable object source data for %s
failed utime() on %s
tmp_obj_XXXXXX
/tmp_obj_XXXXXX
file write error
sha1 file
error when closing sha1 file
index_stream_convert_blob
would_convert_to_git_filter_fd(path)
corrupt commit
corrupt tag
read error while indexing %s
short read while indexing %s
corrupt loose object '%s'
garbage at end of loose object '%s'
committish
treeish
unknown hint type for '%s': %s
%.*s: expected %s type, but the object dereferences to %s type
BUG: incompatible flags for get_sha1_with_context
BUG: multiple get_short_oid disambiguator flags
short SHA1 %s is ambiguous
The candidates are:
 %ad - %s
  %s %s%s
unknown type
 to 
@{upstream}
@{u}
@{push}
Invalid object name '%.*s'.
commit}
tag}
tree}
blob}
object}
refname '%.*s' is ambiguous.
Git normally never creates a ref that ends with 40 hex characters
because it will be ignored when you just specify 40-hex. These refs
may be created by mistake. For example,
  git checkout -b $br $(git rev-parse ...)
where "$br" is somehow empty and a 40-hex ref is created. Please
examine these refs and maybe delete them. Turn this message off by
running "git config advice.objectNameWarning false"
Log for '%.*s' only goes back to %s.
Log for '%.*s' only has %d entries.
relative path syntax can't be used outside working tree.
Path '%s' is in the index, but not at stage %d.
Did you mean ':%d:%s'?
Path '%s' is in the index, but not '%s'.
Did you mean ':%d:%s' aka ':%d:./%s'?
Path '%s' exists on disk, but not in the index.
Path '%s' does not exist (neither on disk nor in the index).
Path '%s' exists on disk, but not in '%.*s'.
Path '%s' exists, but not '%s'.
Did you mean '%.*s:%s' aka '%.*s:./%s'?
Path '%s' does not exist in '%.*s'
BUG: is_repository_shallow must not be called before set_alternate_shallow_file
bad shallow line: %s
shallow_XXXXXX
failed to write to %s
GIT_TRACE_SHALLOW
shallow.c
shallow: prepare_shallow_info
shallow: remove_nonexistent_theirs_shallow
shallow: assign_shallow_commits_to_refs
Removing %s from .git/shallow
shallow %s
BUG: shallow must be initialized by now
shallow file has changed since we read it
shallow %s
BUG: pool size too small for %d in paint_alloc()
shallow: post_assign_shallow
        
%s%s: protocol error: no band designator
remote: 
%.*s%s%c
%s%s: protocol error: bad band #%d
%04x
BUG: signal out of range: %d
corrupt link extension (too short)
corrupt delete bitmap in link extension
corrupt replace bitmap in link extension
garbage at the end of link extension
corrupt link extension, entry %d should have non-zero length name
prepare_to_write_split_index
split-index.c
!(ce->ce_flags & CE_STRIP_NAME)
position for replacement %d exceeds base index size %d
too many replacements (%d vs %d)
entry %d is marked as both replaced and deleted
corrupt link extension, entry %d should have zero length name
position for delete %d exceeds base index size %d
you want to use way too much memory
`pos' is too far after the end of the buffer
`pos + len' is too far after the end of the buffer
BUG: your vsnprintf is broken (returned %d)
BUG: your vsnprintf is broken (insatiable)
strbuf_getwholeline
strbuf.c
r == -1
Out of memory, getdelim failed
"<>&
&quot;
&lt;
&gt;
&amp;
%u.%2.2u GiB
%u.%2.2u MiB
%u.%2.2u KiB
%u bytes
The empty string is not a valid path
%+05d
%s:%p
BUG: qsort_s() failed
internal error in string_list_split(): list->strdup_strings must be set
internal error in string_list_split_in_place(): list->strdup_strings must not be set
Cannot change unmerged .gitmodules, resolve merge conflicts first
Could not find section in .gitmodules where path=%s
submodule.
.path
Could not update .gitmodules entry %s
Could not remove .gitmodules entry for %s
staging updated .gitmodules failed
submodule.%s.ignore
submodule.recurse
submodule.%s.active
submodule.active
submodule.%s.url
in unpopulated submodule '%s'
Pathspec '%s' is in submodule '%.*s'
checkout
rebase
untracked
bad --ignore-submodules argument: %s
%s=%s
(revision walker failed)
--submodule=diff
--color=%s
--src-prefix=%s%s/
--dst-prefix=%s%s/
(diff failed)
find_unpushed_submodules
--remotes=%s
Failed to resolve HEAD as a valid ref.
Pushing submodule '%s'
Unable to push submodule '%s'
--recurse-submodules-default
'%s' not recognized as a git repository
status
--porcelain=2
-uno
Could not run 'git status --porcelain=2' in submodule %s
BUG: invalid status --porcelain=2 line %s
S..U
'git status --porcelain=2' failed in submodule %s
foreach
--recursive
test -f .git
--porcelain
--ignore-submodules=none
-uall
--ignored
could not start 'git status' in submodule '%s'
could not run 'git status' in submodule '%s'
BUG: could not get submodule information for '%s'
submodule '%s' has dirty index
%s/modules/%s
--super-prefix=%s%s/
read-tree
--recurse-submodules
--reset
4b825dc642cb6eb9a060e54bf8d69288fbee4904
update-ref
Failed to merge submodule %s (%s)
not checked out
commits not present
commits don't follow merge-base
merge following commits not found
not fast-forward
Found a possible merge resolution for the submodule:
If this is correct simply add it to the index for example
by using:
  git update-index --cacheinfo 160000 %s "%s"
which will accept this suggestion.
multiple merges found
could not lookup name for submodule '%s'
modules/%s
BUG: we don't know how to pass the flags down?
--super-prefix
submodule--helper
absorb-git-dirs
could not recurse into submodule '%s'
--literal-pathspecs
ls-files
--stage
--full-name
could not start ls-files in ..
160000
BUG: returned path string doesn't match cwd?
ls-tree returned unexpected return code %d
(new submodule)
(submodule deleted)
(commits not present)
Submodule %s 
 (rewind)
rev-list
Could not run 'git rev-list <commits> --not --remotes -n 1' command in submodule %s
submodule entry '%s' (%s) is a %s, not a commit
push-check
process for submodule '%s' failed
--push-option=%s
submodule.%s.fetchRecurseSubmodules
on-demand
%s%s/
Fetching submodule %s%s
--submodule-prefix
diff-index
could not reset submodule index
 %h: %m %s
relocate_gitdir for submodule '%s' with more than one worktree not supported
could not create directory '%s'
Migrating git directory of '%s%s' from
'%s' to
'%s'
negative values not allowed for submodule.fetchjobs
check
fetchrecursesubmodules
Invalid parameter '%s' for config option 'submodule.%s.ignore'
update
invalid value for %s
ignoring suspicious submodule name: %s
WORKTREE
%s:.gitmodules, multiple configurations found for 'submodule.%s.%s'. Skipping second one!
%s:.gitmodules
status=
cannot fork to run subprocess '%s'
initialization for subprocess '%s' failed
%s-client
Could not write client identification
version=%d
Could not write requested version
Could not write flush packet
-server
Unexpected line '%s', expected %s-server
<flush packet>
version=
Unexpected line '%s', expected version
Unexpected line '%s', expected flush
Version %d not supported
capability=%s
Could not write requested capability
capability=
subprocess '%s' requested unsupported capability '%s'
%s: cannot verify a non-tag object of type %s.
%s: unable to read file.
missing object referenced by '%.*s'
type 
Unknown type %s
tag 
tagger 
Could not read %s
Object %s not a tag
no signature found
TMPDIR
/tmp
tempfile.c
fdopen_tempfile() called for inactive object
fdopen_tempfile() called for open object
get_tempfile_path() called for inactive object
get_tempfile_fd() called for inactive object
get_tempfile_fp() called for inactive object
reopen_tempfile called for an inactive object
reopen_tempfile called for an open object
rename_tempfile called for inactive object
activate_tempfile called for active object
GIT_TRACE_SETUP
trace.c
setup: git_dir: %s
setup: git_common_dir: %s
setup: worktree: %s
setup: cwd: %s
setup: prefix: %s
GIT_TRACE
unable to write trace for %s: %s
GIT_TRACE_BARE
%02d:%02d:%02d.%06ld 
%s:%d 
performance: %.9f s
could not open '%s' for tracing: %s
unknown trace value for '%s': %s
         If you want to trace into a file, then please set %s
         to an absolute pathname (starting with /)
GIT_TRACE_PERFORMANCE
git command:%s
start
addIfDifferent
addIfDifferentNeighbor
replace
doNothing
could not rename temporary file to %s
trailer.
where
unknown value '%s' for key '%s'
ifexists
ifmissing
separators
more than one %s
BUG: trailer.c: unhandled type %d
command
could not read input file '%s'
could not read from stdin
could not stat %s
file %s is not a regular file
file %s is not writable by user
git-interpret-trailers-XXXXXX
could not open temporary file
empty trailer token in trailer '%.*s'
BUG: trailer.c: unhandled value %d
$ARG
running trailer command '%s' failed
%s%c %s
Signed-off-by: 
(cherry picked from commit 
%s: %s
updating local tracking ref '%s'
update by push
remote part of refspec is not a valid name in %s
BUG: taking over transport requires non-NULL smart_options field.
GIT_PROTOCOL_FROM_USER
BUG: invalid protocol_allow_config type
transport '%s' not allowed
No remote provided to transport_get()
rsync:
git-over-rsync is no longer supported
file://
git://
ssh://
git+ssh://
ssh+git://
git-upload-pack
git-receive-pack
This transport does not support using --set-upstream
Failed to push all needed submodules!
Done
Everything up-to-date
Operation not supported by protocol
%.*s%.*s
To %s
[no match]
[rejected]
remote does not support deleting refs
[up to date]
non-fast-forward
already exists
fetch first
needs force
stale info
new shallow roots not allowed
[remote rejected]
[remote failure]
remote failed to report status
atomic push failed
%s:%s
%s (%s)
 %c %-*s 
%s -> %s
[deleted]
[new tag]
[new branch]
forced update
GIT_ALLOW_PROTOCOL
protocol.%s.allow
protocol.allow
user
unknown value for config '%s': %s
Could not read bundle '%s'.
thin
followtags
updateshallow
depth
transport: invalid depth option '%s'
deepen-since
deepen-not
deepen-relative
pre-push
%s %s %s %s
The following submodule paths contain changes that can
not be found on any remote:
Please try
git push --recurse-submodules=on-demand
or cd to the path and use
git push
to push them to a remote.
Aborting.
Would set upstream of '%s' to '%s' of '%s'
/objects
/refs
--git-dir=%s
for-each-ref
--format=%(objectname) %(refname)
invalid line while parsing alternate refs: %s
GIT_TRANSPORT_HELPER_DEBUG
remote input
stdin
remote output
option %s 
git-remote-%s
Unable to find remote helper for '%s'
Can't dup helper output fd
capabilities
Debug: Got cap %s
option
import
bidi-import
export
check-connectivity
refspec 
connect
signed-tags
export-marks 
import-marks 
no-private-update
Unknown mandatory capability %s. This remote helper probably needs newer version of Git.
This remote helper should implement refspec capability.
Debug: Capabilities complete.
Debug: Remote helper: -> %s
Full write to remote helper failed
Debug: Remote helper: Waiting...
Debug: Remote helper quit.
Debug: Remote helper: <- %s
progress
verbosity
family
ipv4
ipv6
unsupported
%s unexpectedly said: '%s'
list for-push
list
Malformed response in ref list: %s
unchanged
Could not read ref %s
Debug: Read ref listing.
servpath
Setting remote service path not supported by protocol.
Invalid remote service path.
connect %s
Debug: Smart transport connection ready.
fallback
Debug: Falling back to dumb transport.
Unknown response to connect: %s
cloning
update-shallow
fetch %s %s
lock 
%s also locked %s
connectivity-ok
Couldn't run fast-import
import %s
Error while running fast-import
fast-import
--stats
--cat-blob-fd=%d
push 
%s:%s
dry-run
helper %s does not support dry-run
pushcert
helper %s does not support --signed
helper %s does not support --signed=if-asked
push-option
helper %s does not support 'push-option'
update by helper
error 
expected ok/error, helper said '%s'
no match
up to date
non-fast forward
helper reported unexpected status of %s
remote-helper doesn't support push; refspec needed
force
helper %s does not support 'force'
export
--refspec
Couldn't run fast-export
Error while running fast-export
%s.tmp
fast-export
--use-done-feature
--signed-tags=verbatim
--signed-tags=warn-strip
--export-marks=%s.tmp
--import-marks=%s
Debug: Disconnecting.
Operation not supported by protocol.
Can't connect to subservice %s.
Can't start thread for copying data: %s
Git to program copy
Program to git copy
%s is readable
read(%s) failed
%s EOF (with %i bytes in buffer)
Read %i bytes from %s (buffer now at %i)
GIT_TRANSLOOP_DEBUG
Transfer loop debugging: %s
%s is writable
write(%s) failed
Wrote %i bytes to %s (buffer now at %i)
Closed %s.
%s thread failed
%s thread failed to join: %s
emit_path
tree-diff.c
t || tp
tree
Object %s not a tree
Commit %s in submodule path %s%s not found
Invalid commit %s in submodule path %s%s
unable to read tree %s
too-short tree object
malformed mode in tree entry
empty filename in tree entry
too-short tree file
BUG:%s:%d: unsupported magic %x
tree-walk.c
Your local changes to the following files would be overwritten by checkout:
%%sPlease commit your changes or stash them before you switch branches.
Your local changes to the following files would be overwritten by checkout:
Your local changes to the following files would be overwritten by merge:
%%sPlease commit your changes or stash them before you merge.
Your local changes to the following files would be overwritten by merge:
Your local changes to the following files would be overwritten by %s:
%%sPlease commit your changes or stash them before you %s.
Your local changes to the following files would be overwritten by %s:
Updating the following directories would lose untracked files in them:
The following untracked working tree files would be removed by checkout:
%%sPlease move or remove them before you switch branches.
The following untracked working tree files would be removed by checkout:
The following untracked working tree files would be removed by merge:
%%sPlease move or remove them before you merge.
The following untracked working tree files would be removed by merge:
The following untracked working tree files would be removed by %s:
%%sPlease move or remove them before you %s.
The following untracked working tree files would be removed by %s:
The following untracked working tree files would be overwritten by checkout:
%%sPlease move or remove them before you switch branches.
The following untracked working tree files would be overwritten by checkout:
The following untracked working tree files would be overwritten by merge:
%%sPlease move or remove them before you merge.
The following untracked working tree files would be overwritten by merge:
The following untracked working tree files would be overwritten by %s:
%%sPlease move or remove them before you %s.
The following untracked working tree files would be overwritten by %s:
Entry '%s' overlaps with '%s'.  Cannot bind.
Cannot update sparse checkout: the following entries are not up to date:
The following working tree files would be overwritten by sparse checkout update:
The following working tree files would be removed by sparse checkout update:
Cannot update submodule:
unpack_trees takes at most %d trees
Merge requires file-level merging
Sparse checkout leaves no entry on working directory
Cannot do a twoway merge of %d trees
Cannot do a bind merge of %d trees
Cannot do a oneway merge of %d trees
* unpack mask %lu, dirmask %lu, cnt %d 
ent#%d %06o %s
(missing)
programming error in a caller of mark_ce_used_same_name
cannot stat '%s'
%.*s/
BUG: both update and delete flags are set on %s
Checking out files
Aborting
Entry '%s' would be overwritten by merge. Cannot merge.
Entry '%s' not uptodate. Cannot merge.
Updating '%s' would lose untracked files in it
Untracked working tree file '%s' would be overwritten by merge.
Untracked working tree file '%s' would be removed by merge.
Entry '%s' not uptodate. Cannot update sparse checkout.
Working tree file '%s' would be overwritten by sparse checkout update.
Working tree file '%s' would be removed by sparse checkout update.
Submodule '%s' cannot checkout new HEAD.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+.-
invalid URL scheme name or missing '://' suffix
:/?#[]@!$&'()*+,;=
invalid %XX escape sequence
file:
missing host and scheme is not 'file:'
a 'file:' URL may not have a port number
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.-[:]*
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.-[:]
invalid characters in host name
http:
https:
invalid port number
invalid '..' path segment
 <>"%{}|\^`
%%%02X
%s%s
fatal: recursion detected in die handler
fatal: recursion detected in die_errno handler
fatal: 
warning: 
die() called many times. Recursion error or racy threaded death!
usage: 
%s: %s
BUG: %s:%d: 
BUG: 
funcname
xfuncname
textconv
cachetextconv
wordregex
textconv/%s
!^(.*[ 
])?(is[ 
]+new|renames|is[ 
]+separate)([ 
].*)?$
!^[ 
]*with[ 
].*$
]*((procedure|function)[ 
]+.*)$
]*((package|protected|task)[ 
]+.*)$
[a-zA-Z][a-zA-Z0-9_]*|[-+]?[0-9][0-9#_.aAbBcCdDeEfF]*([eE][+-]?[0-9_]+)?|=>|\.\.|\*\*|:=|/=|>=|<=|<<|>>|<>|[^[:space:]]|[
fortran
!^([C*]|[ 
]*!)
!^[ 
]*MODULE[ 
]+PROCEDURE[ 
]*((END[ 
]+)?(PROGRAM|MODULE|BLOCK[ 
]+DATA|([^'" 
]+[ 
]+)*(SUBROUTINE|FUNCTION))[ 
]+[A-Z].*)$
[a-zA-Z][a-zA-Z0-9_]*|\.([Ee][Qq]|[Nn][Ee]|[Gg][TtEe]|[Ll][TtEe]|[Tt][Rr][Uu][Ee]|[Ff][Aa][Ll][Ss][Ee]|[Aa][Nn][Dd]|[Oo][Rr]|[Nn]?[Ee][Qq][Vv]|[Nn][Oo][Tt])\.|[-+]?[0-9.]+([AaIiDdEeFfLlTtXx][Ss]?[-+]?[0-9.]*)?(_[a-zA-Z0-9][a-zA-Z0-9_]*)?|//|\*\*|::|[/<>=]=|[^[:space:]]|[
fountain
^((\.[^.]|(int|ext|est|int\.?/ext|i/e)[. ]).*)$
-]+|[^[:space:]]|[
html
]*(<[Hh][1-6]([ 
].*)?>.*)$
[^<>= 
]+|[^[:space:]]|[
java
!^[ 
]*(catch|do|for|if|instanceof|new|return|switch|throw|while)
]*(([A-Za-z_][A-Za-z_0-9]*[ 
]+)+[A-Za-z_][A-Za-z_0-9]*[ 
]*\([^;]*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>>?=?|&&|\|\||[^[:space:]]|[
matlab
^[[:space:]]*((classdef|function)[[:space:]].*)$|^%%[[:space:]].*$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|[=~<>]=|\.[*/\^']|\|\||&&|[^[:space:]]|[
objc
!^[ 
]*(do|for|if|else|return|switch|while)
]*([-+][ 
]*\([ 
]*[A-Za-z_][A-Za-z_0-9* 
]*\)[ 
]*[A-Za-z_].*)$
]*(([A-Za-z_][A-Za-z_0-9]*[ 
]+)+[A-Za-z_][A-Za-z_0-9]*[ 
]*\([^;]*)$
^(@(implementation|interface|protocol)[ 
].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>=?|&&|\|\||::|->|[^[:space:]]|[
pascal
^(((class[ 
]+)?(procedure|function)|constructor|destructor|interface|implementation|initialization|finalization)[ 
]*.*)$
^(.*=[ 
]*(class|record).*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|<>|<=|>=|:=|\.\.|[^[:space:]]|[
^package .*
^sub [[:alnum:]_':]+[ 
]*(\([^)]*\)[ 
]*)?(:[^;#]*)?(\{[ 
]*)?(#.*)?$
^(BEGIN|END|INIT|CHECK|UNITCHECK|AUTOLOAD|DESTROY)[ 
]*(\{[ 
]*)?(#.*)?$
^=head[0-9] .*
[[:alpha:]_'][[:alnum:]_']*|0[xb]?[0-9a-fA-F_]*|[0-9a-fA-F_]+(\.[0-9a-fA-F_]+)?([eE][-+]?[0-9_]+)?|=>|-[rwxoRWXOezsfdlpSugkbctTBMAC>]|~~|::|&&=|\|\|=|//=|\*\*=|&&|\|\||//|\+\+|--|\*\*|\.\.\.?|[-+*/%.^&<>=!|]=|=~|!~|<<|<>|<=>|>>|[^[:space:]]|[
 ]*(((public|protected|private|static)[
 ]+)*function.*)$
 ]*(class.*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|[-+*/<>%&^|=!.]=|--|\+\+|<<=?|>>=?|===|&&|\|\||::|->|[^[:space:]]|[
python
]*((class|def)[ 
].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[jJlL]?|0[xX]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|//=?|<<=?|>>=?|\*\*=?|[^[:space:]]|[
ruby
]*((class|module|def)[ 
].*)$
(@|@@|\$)?[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|\?(\\C-)?(\\M-)?.|//=?|[-+*/<>%&^|=!]=|<<=?|>>=?|===|\.{1,3}|::|[!=]~|[^[:space:]]|[
bibtex
(@[a-zA-Z]{1,}[ 
]*\{{0,1}[ 
]*[^ 
"@',\#}{~%]*).*$
[={}"]|[^={}" 
]+|[^[:space:]]|[
^(\\((sub)*section|chapter|part)\*{0,1}\{.*)$
\\[a-zA-Z@]+|\\.|[a-zA-Z0-9
]+|[^[:space:]]|[
!^[ 
]*[A-Za-z_][A-Za-z_0-9]*:[[:space:]]*($|/[/*])
^((::[[:space:]]*)?[A-Za-z_].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lLuU]*|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>=?|&&|\|\||::|->\*?|\.\*|[^[:space:]]|[
csharp
!^[ 
]*(do|while|for|if|else|instanceof|new|return|switch|case|throw|catch|using)
]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe)[ 
]+)*[][<>@.~_[:alnum:]]+[ 
]+[<>@._[:alnum:]]+[ 
]*\(.*\))[ 
]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe)[ 
]+)*[][<>@.~_[:alnum:]]+[ 
]+[@._[:alnum:]]+)[ 
]*(((static|public|internal|private|protected|new|unsafe|sealed|abstract|partial)[ 
]+)*(class|enum|interface|struct)[ 
]+.*)$
]*(namespace[ 
]+.*)$
![:;][[:space:]]*$
^[_a-z0-9].*$
-?[_a-zA-Z][-_a-zA-Z0-9]*|-?[0-9]+|\#[0-9a-fA-F]+|[^[:space:]]|[
diff=true
!diff
utf-8
utf8
%-*s
%*s%-*s
latin-1
GIT_USER_AGENT
git/2.15.2 (Apple Git-101.1)
%s/worktrees
is_worktree_locked
worktree.c
!is_main_worktree(wt)
locked
failed to read '%s'
%s/HEAD
worktrees/%s/gitdir
%s/worktrees/%s/HEAD
Out of memory, strdup failed
Out of memory, realloc failed
data too large to fit into virtual memory space
Out of memory, calloc failed
could not open '%s' for reading and writing
could not open '%s' for writing
could not open '%s' for reading
dup failed
Out of memory? fdopen failed
Unable to create temporary file '%s'
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
XXXXXX
unlink_or_msg
wrapper.c
unable to unlink '%s': %s
unlink
rmdir
unable to access '%s'
unable to get current working directory
BUG: your snprintf is broken
BUG: attempt to snprintf into too-small buffer
could not write to '%s'
could not close '%s'
Out of memory, malloc failed (tried to allocate %lu bytes)
Data too large to fit into virtual memory space.
GIT_ALLOC_LIMIT
attempting to allocate %ju over limit %ju
unable to %s '%s'
GIT_FLUSH
write failure on '%s'
write error
fsync error on '%s'
tabwidth=
tabwidth %.*s out of range
cannot enforce both tab-in-indent and indent-with-non-tab
trailing whitespace
new blank line at EOF
space before tab in indent
indent with spaces
tab in indent
trailing-space
space-before-tab
indent-with-non-tab
cr-at-eol
blank-at-eol
blank-at-eof
tab-in-indent
%c %s
Do not modify or remove the line above.
Everything below it will be ignored.
%c %s
rebase-apply
rebase-apply/applying
rebase-apply/patch
rebase-apply/head-name
rebase-apply/onto
rebase-merge
rebase-merge/interactive
rebase-merge/head-name
rebase-merge/onto
BISECT_LOG
BISECT_START
REVERT_HEAD
BUG: finalize_deferred_config() should have been called
cannot %s: You have unstaged changes.
additionally, your index contains uncommitted changes.
cannot %s: Your index contains uncommitted changes.
BUG: strbuf_setlen() beyond buffer
BUG: worktree status unknown???
dirty
detached HEAD
refs/remotes/
checkout: moving from 
No commits yet on 
HEAD (no branch)
gone
behind 
ahead 
, %s
 %s%c
%s -> 
%s %s%c
# branch.oid %s%c
(initial)
# branch.head %s%c
(detached)
# branch.upstream %s%c
# branch.ab +%d -%d%c
2 %s %s %06o %06o %06o %s %s %c%d %s%c%s%c
1 %s %s %06o %06o %06o %s %s %s%c
wt_porcelain_v2_fix_up_changed
wt-status.c
d->mode_head == 0
d->mode_worktree == 0
BUG: unhandled unmerged status %x
wt_porcelain_v2_print_unmerged_entry
pos < 0
BUG: observed stagemask 0x%x != expected stagemask 0x%x
%c %s %s %06o %06o %06o %06o %s %s %s %s%c
%c %s%c
On branch 
interactive rebase in progress; onto 
rebase in progress; onto 
HEAD detached at 
HEAD detached from 
Not currently on any branch.
Initial commit
No commits yet
Untracked files
Ignored files
add -f
It took %.2f seconds to enumerate untracked files. 'status -uno'
may speed it up, but you have to be careful not to forget to add
new files yourself (see 'git help status').
Untracked files not listed%s
 (use -u option to show untracked files)
No changes
wt_longstatus_print_tracking
s->branch && !s->is_initial
%s%.*s
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)
All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)
You are in the middle of an am session.
The current patch is empty.
  (fix conflicts and then run "git am --continue")
  (use "git am --skip" to skip this patch)
  (use "git am --abort" to restore the original branch)
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)
  (all conflicts fixed: run "git rebase --continue")
You are currently splitting a commit while rebasing branch '%s' on '%s'.
You are currently splitting a commit during a rebase.
  (Once your working directory is clean, run "git rebase --continue")
You are currently editing a commit while rebasing branch '%s' on '%s'.
You are currently editing a commit during a rebase.
  (use "git commit --amend" to amend the current commit)
  (use "git rebase --continue" once you are satisfied with your changes)
rebase-merge/done
rebase-merge/git-rebase-todo
git-rebase-todo is missing.
No commands done.
Last command done (%d command done):
Last commands done (%d commands done):
   %s
  (see more in file %s)
No commands remaining.
Next command to do (%d remaining command):
Next commands to do (%d remaining commands):
  (use "git rebase --edit-todo" to view and edit)
Could not open file %s for reading
exec 
You are currently rebasing branch '%s' on '%s'.
You are currently rebasing.
ORIG_HEAD
rebase-merge/amend
rebase-merge/orig-head
You are currently cherry-picking commit %s.
  (fix conflicts and run "git cherry-pick --continue")
  (all conflicts fixed: run "git cherry-pick --continue")
  (use "git cherry-pick --abort" to cancel the cherry-pick operation)
You are currently reverting commit %s.
  (fix conflicts and run "git revert --continue")
  (all conflicts fixed: run "git revert --continue")
  (use "git revert --abort" to cancel the revert operation)
You are currently bisecting, started from branch '%s'.
You are currently bisecting.
  (use "git bisect reset" to get back to the original branch)
Changes to be committed:
  (use "git reset %s <file>..." to unstage)
  (use "git rm --cached <file>..." to unstage)
new commits, 
modified content, 
untracked content, 
BUG: unhandled change_type %d in wt_longstatus_print_change_data
BUG: unhandled diff status %c
wt_longstatus_print_change_data
len >= 0
%s%.*s%s -> %s
%s%.*s%s
new file:
copied:
deleted:
modified:
renamed:
typechange:
unknown:
unmerged:
Unmerged paths:
  (use "git add <file>..." to mark resolution)
  (use "git add/rm <file>..." as appropriate to mark resolution)
  (use "git rm <file>..." to mark resolution)
%s%.*s%s
both deleted:
added by us:
deleted by them:
added by them:
deleted by us:
both added:
both modified:
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
GIT_INDEX_FILE=%s
submodule
summary
--files
--cached
--for-status
--summary-limit
HEAD^
Submodules changed but not updated:
Submodule changes to be committed:
%s%s
  (use "git %s <file>..." to include in what will be committed)
--------------------------------------------------
Your stash currently has %d entry
Your stash currently has %d entries
no changes added to commit (use "git add" and/or "git commit -a")
no changes added to commit
nothing added to commit but untracked files present (use "git add" to track)
nothing added to commit but untracked files present
nothing to commit (create/copy files and use "git add" to track)
nothing to commit, working tree clean
nothing to commit (use -u to show untracked files)
nothing to commit
malformed diff output: %s
Could not stat %s
Could not open %s
unable to read blob object %s
Last expression must not be negated: %s
Invalid regexp to look for hunk header: %s
merge.conflictstyle
'%s' is not a boolean
diff3
unknown style '%s' given for '%s'
1.2.11
inflateInit: %s (%s)
no message
inflateInit2: %s (%s)
inflateEnd: %s (%s)
inflate: out of memory
inflate: %s (%s)
deflateInit: %s (%s)
deflateEnd: %s (%s)
deflate: out of memory
deflate: %s (%s)
BUG: total_out mismatch
BUG: total_in mismatch
out of memory
wrong version
needs dictionary
data stream error
stream consistency error
unknown error
deflateInit2: %s (%s)
failed to unlink '%s'
iconv_open(%s,%s) failed, but needed:
    precomposed unicode is not supported.
    If you want to use decomposed unicode, run
    "git config core.precomposeunicode false"
UTF-8-MAC
alnum
space
parse_bracket_exp
compat/regex/regcomp.c
upper
lower
alpha
cntrl
digit
print
blank
graph
punct
xdigit
link_nfa_nodes
node->next == NULL
left > -1
right > -1
!IS_EPSILON_NODE (node->token.type)
re_search_stub
compat/regex/regexec.c
pmatch[0].rm_so == start
re_copy_regs
regs_allocated == REGS_FIXED
regs->num_regs >= nregs
re_search_internal
mctx.input.offsets_needed == 0
check_matching
err == REG_ESPACE
pop_fail_stack
num >= 0
group sync broken sliding up
group sync broken sliding down
match disappeared
group sync broken sliding to match
best shift unreached
group sync broken sliding to blank line
group sync broken moving to next group
group sync broken at end of file
BUG: %s
\ No newline at end of file
git http-push [--all] [--dry-run] [--force] [--verbose] <remote> [<head>...]
(builtin)true
(builtin)false
(builtin)unknown
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~
After fixing the error cause you may try to fix up
the remote tracking information by invoking
"git branch --set-upstream-to=%s%s%s".
the requested upstream branch '%s' does not exist
If you are planning on basing your work on an upstream
branch that already exists at the remote, you may need to
run "git fetch" to retrieve it.
If you are planning to push out a new local branch that
will track its remote counterpart, you may want to use
"git push -u" to set the upstream config as you push.
Cannot setup tracking information; starting point '%s' is not a branch.
# v2 git bundle
gpgsig
Warning: commit message did not conform to UTF-8.
You may want to amend it after fixing the message, or set the config
variable i18n.commitencoding to the encoding your project uses.
exceeded maximum include depth (%d) while including
from
Do you have circular includes?
@@@@@@@@@AA@@A@@@@@@@@@@@@@@@@@@
     
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
NN'C
2waN
mdIP
gwz3
4}@4m
.(uw
OJqj
m"2T
FH9<
x6(T!
h`LK
JbEv
E&)
R;*&
(G]>
pENOXHn
0lY;
F==8
p;I}
=J-f
VYk[(
[x*w1
L<<'2
[<tR
yrhj
>/Vm-ikP I
xj4UWg
 h'$
zyT_
Lv<l
rq{1
A'eW|
3B-9
------------
only found copies from modified paths due to too many files.
inexact rename detection was skipped due to too many files.
you may want to set your %s variable to at least %d and retry the command.
# repo-abbrev:
utf-8
abtnvfr
cache entry has null sha1: %s
# pack-refs with: peeled fully-peeled sorted 
die() should not be called in child
error() should not be called in child
warn() should not be called in child
Signed-off-by: 
you have staged changes in your working tree
If these changes are meant to be squashed into the previous commit, run:
  git commit --amend %s
If they are meant to go into a new commit, run:
  git commit %s
In both cases, once you're done, continue with:
  git rebase --continue
(cherry picked from commit 
  %m %s
2.15.2 (Apple Git-101.1)
------------------------ >8 ------------------------
Success
No match
Invalid regular expression
Invalid collation character
Invalid character class name
Trailing backslash
Invalid back reference
Unmatched [ or [^
Unmatched ( or \(
Unmatched \{
Invalid content of \{\}
Invalid range end
Memory exhausted
Invalid preceding regular expression
Premature end of regular expression
Regular expression too big
Unmatched ) or \)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleShortVersionString</key>
<string>101.1</string>
<key>CFBundleVersion</key>
<string>101.1</string>
</dict>
</plist>
[36m
[31m
[32m
[33m
[41m
[1;35m
[1;34m
[2;3m
[1;36m
[1;33m
[2;3m
[1;32m
[1;31m
[1;33m
[1;35m
[1;36m
[1;34m
/bad-path/
[32m
[31m
[31m
[31m
[31m
[32m
[31m
