/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/batch_fsync.c
thread_pool
Can't push task
Can't create fsync thread pool in FSX
Can't create condition variable
Can't broadcast condition variable
Corrupt node-revision '%s'
No representation found at offset %s for item %s in revision %ld
%llu
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/cached_data.c
entry->type >= SVN_FS_X__ITEM_TYPE_FILE_REP && entry->type <= SVN_FS_X__ITEM_TYPE_DIR_PROPS
entry->item_count == 1
malformed property list for node-revision '%s' in '%s'
malformed property list for node-revision '%s'
Reference to non-existent node '%s' in filesystem '%s'
Reading one svndiff window read beyond the end of the representation
get_window_key
revision <= APR_UINT32_MAX
Checksum mismatch while reading representation
svndiff window length is corrupt
rs->chunk_index <= this_chunk
Malformed svndiff data in representation
Corrupt representation '%s'
(null)
Directory for '%s' is too large
Directory entry missing kind in '%s'
Directory entry missing change set in '%s'
Directory entry missing item number in '%s'
Directory length mismatch in '%s'
SVN_IS_VALID_REVNUM(revision)
block_read
!result || *result
Low-level checksum mismatch while reading
%s bytes of meta data at offset %s 
fsx:
NODEREVS
REPHEADER
CHANGES
TEXT
PROP
REVPROP
TXDELTA_WINDOW
COMBINED_WINDOW
NODEREVSCNT
CHANGESCNT
REPSCNT
L2P_HEADER
L2P_PAGE
P2L_HEADER
P2L_PAGE
fsfs-cache-namespace
fsfs-cache-deltas
fsfs-cache-fulltexts
fsfs-cache-revprops
fsfs-cache-nodeprops
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/changes.c
changes->builder
changes->paths == NULL
changes->builder == NULL
changes->paths
Changes list index %%%s exceeds container size %%d
Changes list index %u exceeds container size %d
change
change->path.data
Can't get entries of non-directory
Attempted to open node with an illegal name '%s'
Attempted to set entry in non-directory node
Attempted to set entry in immutable node
Can't set proplist on *immutable* node-revision %s
Can't increment mergeinfo count on *immutable* node-revision %s
Can't increment mergeinfo count on node-revision %%s to negative value %%%s
Can't increment mergeinfo count on *file* node-revision %%s to %%%s (> 1)
Can't set mergeinfo flag on *immutable* node-revision %s
Attempted to clone child of non-mutable node
Attempted to make a child clone with an illegal name '%s'
Attempted to open non-existent child node '%s'
Attempted to delete entry '%s' from *non*-directory node
Attempted to delete entry '%s' from immutable directory node
Attempted to delete a node with an illegal name '%s'
Delete failed--directory has no entry '%s'
Attempted to get textual contents of a *non*-file node
Attempted to get length of a *non*-file node
Attempted to get checksum of a *non*-file node
Attempted to set textual contents of a *non*-file node
Attempted to set textual contents of an immutable node
Checksum mismatch for '%s'
Attempted to update ancestry of non-mutable node
Attempted to create a node with an illegal name '%s'
Attempted to create entry in non-directory parent
File not found: transaction '%s', path '%s'
File not found: revision %ld, path '%s'
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/dag_cache.c
child && child->parent
File is not mutable: filesystem '%s', revision %ld, path '%s'
svn_subr
svn_delta
svn_fs_util
Unsupported FS loader version (%d) for fsx
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/fs.c
fs->uuid
ffd->instance_id
svn-fsx-shared-
Can't fetch FSX shared data
Can't store FSX shared data
@(#)1.10.0 (r1827917)
Module for working with an experimental (FSX) repository.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/fs_id.c
context->svn_fs_open_
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/fs_x.c
1 <= ffd->format && ffd->format <= SVN_FS_X__FORMAT_NUMBER
layout sharded %d
Invalid revision number '%ld'
No such revision %ld
FSX is not compatible with Subversion prior to 1.9
fsx.conf
Can't read first line of format file '%s'
layout sharded 
'%s' contains invalid filesystem format option '%s'
Format
Unsupported experimental FSX format '%d' found; current format is '%d'
Expected FSX format between '%d' and '%d'; found format '%d'
rep-sharing
enable-rep-sharing
deltification
max-deltification-walk
max-linear-deltification
compression-level
packed-revprops
compress-packed-revprops
revprop-pack-size
block-size
l2p-page-size
p2l-page-size
debug
pack-after-commit
caches
fail-stop
%s is too small for fsfs.conf setting '%s'.
%lld
%s is too large for fsfs.conf setting '%s'.
%s is invalid for fsfs.conf setting '%s' because it is not a power of 2.
no-flush-to-disk
### This file controls the configuration of the FSX filesystem.
[memcached-servers]
### These options name memcached servers used to cache internal FSX
### data.  See http://www.danga.com/memcached/ for more information on
### memcached.  To use memcached with FSX, run one or more memcached
### servers, and specify each of them as an option like so:
# first-server = 127.0.0.1:11211
# remote-memcached = mymemcached.corp.example.com:11212
### The option name is ignored; the value is of the form HOST:PORT.
### memcached servers can be shared between multiple repositories;
### however, if you do this, you *must* ensure that repositories have
### distinct UUIDs and paths, or else cached data from one repository
### might be used by another accidentally.  Note also that memcached has
### no authentication for reads or writes, so you must ensure that your
### memcached servers are only accessible by trusted users.
[caches]
### When a cache-related error occurs, normally Subversion ignores it
### and continues, logging an error if the server is appropriately
### configured (and ignoring it with file:// access).  To make
### Subversion never ignore cache errors, uncomment this line.
# fail-stop = true
[rep-sharing]
### To conserve space, the filesystem can optionally avoid storing
### duplicate representations.  This comes at a slight cost in
### performance, as maintaining a database of shared representations can
### increase commit times.  The space savings are dependent upon the size
### of the repository, the number of objects it contains and the amount of
### duplication between them, usually a function of the branching and
### merging process.
### The following parameter enables rep-sharing in the repository.  It can
### be switched on and off at will, but for best space-saving results
### should be enabled consistently over the life of the repository.
### 'svnadmin verify' will check the rep-cache regardless of this setting.
### rep-sharing is enabled by default.
# enable-rep-sharing = true
[deltification]
### To conserve space, the filesystem stores data as differences against
### existing representations.  This comes at a slight cost in performance,
### as calculating differences can increase commit times.  Reading data
### will also create higher CPU load and the data will be fragmented.
### Since deltification tends to save significant amounts of disk space,
### the overall I/O load can actually be lower.
### The options in this section allow for tuning the deltification
### strategy.  Their effects on data size and server performance may vary
### from one repository to another.
### During commit, the server may need to walk the whole change history of
### of a given node to find a suitable deltification base.  This linear
### process can impact commit times, svnadmin load and similar operations.
### This setting limits the depth of the deltification history.  If the
### threshold has been reached, the node will be stored as fulltext and a
### new deltification history begins.
### Note, this is unrelated to svn log.
### Very large values rarely provide significant additional savings but
### can impact performance greatly - in particular if directory
### deltification has been activated.  Very small values may be useful in
### repositories that are dominated by large, changing binaries.
### Should be a power of two minus 1.  A value of 0 will effectively
### disable deltification.
### For 1.9, the default value is 1023.
# max-deltification-walk = 1023
### The skip-delta scheme used by FSX tends to repeatably store redundant
### delta information where a simple delta against the latest version is
### often smaller.  By default, 1.9+ will therefore use skip deltas only
### after the linear chain of deltas has grown beyond the threshold
### specified by this setting.
### Values up to 64 can result in some reduction in repository size for
### the cost of quickly increasing I/O and CPU costs. Similarly, smaller
### numbers can reduce those costs at the cost of more disk space.  For
### rarely read repositories or those containing larger binaries, this may
### present a better trade-off.
### Should be a power of two.  A value of 1 or smaller will cause the
### exclusive use of skip-deltas.
### For 1.8, the default value is 16.
# max-linear-deltification = 16
### After deltification, we compress the data through zlib to minimize on-
### disk size.  That can be an expensive and ineffective process.  This
### setting controls the usage of zlib in future revisions.
### Revisions with highly compressible data in them may shrink in size
### if the setting is increased but may take much longer to commit.  The
### time taken to uncompress that data again is widely independent of the
### compression level.
### Compression will be ineffective if the incoming content is already
### highly compressed.  In that case, disabling the compression entirely
### will speed up commits as well as reading the data.  Repositories with
### many small compressible files (source code) but also a high percentage
### of large incompressible ones (artwork) may benefit from compression
### levels lowered to e.g. 1.
### Valid values are 0 to 9 with 9 providing the highest compression ratio
### and 0 disabling it altogether.
### The default value is 5.
# compression-level = 5
[packed-revprops]
### This parameter controls the size (in kBytes) of packed revprop files.
### Revprops of consecutive revisions will be concatenated into a single
### file up to but not exceeding the threshold given here.  However, each
### pack file may be much smaller and revprops of a single revision may be
### much larger than the limit set here.  The threshold will be applied
### before optional compression takes place.
### Large values will reduce disk space usage at the expense of increased
### latency and CPU usage reading and changing individual revprops.  They
### become an advantage when revprop caching has been enabled because a
### lot of data can be read in one go.  Values smaller than 4 kByte will
### not improve latency any further and quickly render revprop packing
### ineffective.
### revprop-pack-size is 64 kBytes by default for non-compressed revprop
### pack files and 256 kBytes when compression has been enabled.
# revprop-pack-size = 64
### To save disk space, packed revprop files may be compressed.  Standard
### revprops tend to allow for very effective compression.  Reading and
### even more so writing, become significantly more CPU intensive.  With
### revprop caching enabled, the overhead can be offset by reduced I/O
### unless you often modify revprops after packing.
### Compressing packed revprops is enabled by default.
# compress-packed-revprops = true
[io]
### Parameters in this section control the data access granularity in
### format 7 repositories and later.  The defaults should translate into
### decent performance over a wide range of setups.
### When a specific piece of information needs to be read from disk,  a
### data block is being read at once and its contents are being cached.
### If the repository is being stored on a RAID, the block size should be
### either 50% or 100% of RAID block size / granularity.  Also, your file
### system blocks/clusters should be properly aligned and sized.  In that
### setup, each access will hit only one disk (minimizes I/O load) but
### uses all the data provided by the disk in a single access.
### For SSD-based storage systems, slightly lower values around 16 kB
### may improve latency while still maximizing throughput.
### Can be changed at any time but must be a power of 2.
### block-size is given in kBytes and with a default of 64 kBytes.
# block-size = 64
### The log-to-phys index maps data item numbers to offsets within the
### rev or pack file.  This index is organized in pages of a fixed maximum
### capacity.  To access an item, the page table and the respective page
### must be read.
### This parameter only affects revisions with thousands of changed paths.
### If you have several extremely large revisions (~1 mio changes), think
### about increasing this setting.  Reducing the value will rarely result
### in a net speedup.
### This is an expert setting.  Must be a power of 2.
### l2p-page-size is 8192 entries by default.
# l2p-page-size = 8192
### The phys-to-log index maps positions within the rev or pack file to
### to data items,  i.e. describes what piece of information is being
### stored at any particular offset.  The index describes the rev file
### in chunks (pages) and keeps a global list of all those pages.  Large
### pages mean a shorter page table but a larger per-page description of
### data items in it.  The latency sweet spot depends on the change size
### distribution but covers a relatively wide range.
### If the repository contains very large files,  i.e. individual changes
### of tens of MB each,  increasing the page size will shorten the index
### file at the expense of a slightly increased latency in sections with
### smaller changes.
### For source code repositories, this should be about 16x the block-size.
### Must be a power of 2.
### p2l-page-size is given in kBytes and with a default of 1024 kBytes.
# p2l-page-size = 1024
id: 2+0
node: 0+0
copy: 0+0
type: dir
count: 0
cpath: /
%s%s
svn:date
revprop '%s' has unexpected value in filesystem
format
The FSX format (%d) of the hotcopy source does not match the FSX format (%d) of the hotcopy destination; please upgrade both repositories to the same format
The UUID of the hotcopy source does not match the UUID of the hotcopy destination
The sharding layout configuration of the hotcopy source does not match the sharding layout configuration of the hotcopy destination
The hotcopy destination already contains more revisions (%lu) than the hotcopy source contains (%lu); are source and destination swapped?
revs
locks
rep-cache.db
txn-current
The hotcopy destination already contains more packed revisions (%lu) than the hotcopy source contains (%lu)
min-unpacked-rev
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/hotcopy.c
rev == src_min_unpacked_rev
src_min_unpacked_rev == dst_min_unpacked_rev
rev == src_youngest + 1
%ld.pack
Source '%s' is not a directory
Destination '%s' is not a directory
Can't read directory '%s'
Error closing directory '%s'
Error converting entry in directory '%s' to UTF-8
%c%ld
svn_fs_x__change_set_by_rev
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/id.c
revnum >= SVN_FS_X__INVALID_CHANGE_SET
svn_fs_x__change_set_by_txn
txn_id >= SVN_FS_X__INVALID_CHANGE_SET
Malformed ID string
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/index.c
len < sizeof(buffer)
Index stream header prefix mismatch.
  expected: %s  found: %s
offset >= -1
item_index < UINT_MAX / 2
L2P index page size  %s exceeds current limit of 2G entries
Item index %s too large in l2p proto index for revision %ld
L2P-INDEX
entry->offset >= 0
entry->size >= 0
sub_item->change_set >= 0 || sub_item->change_set == SVN_INVALID_REVNUM
P2L-INDEX
result->nelts > 0
APR_ARRAY_IDX(result, last_count, svn_fs_x__p2l_entry_t).offset >= entry->offset + entry->size
svn_fs_x__l2p_index_from_p2l_entries
entry
UINT32 0x%s too large, max = 0x%s
%llx
rle_array
value > 0
Index rev / pack file revision numbers do not match
Invalid number of revisions in L2P index
L2P index page size is not a power of two
Fewer L2P index pages than revisions
L2P index page count implausibly large
Corrupt L2P index for r%ld only covers r%ld:%ld
Revision with no L2P index pages
L2P page table exceeded
Revisions do not cover the full L2P index page table
Empty L2P index page
Page exceeds L2P index page size
Can't read index file '%s' at offset 0x%
Unexpected end of index file %s at offset 0x%
Corrupt index: number too large
written == sizeof(buffer)
File offset 0x%s too large, max = 0x%s
Revision 0x%s too large, max = 0x%s
(eof && *eof) || bytes_read == sizeof(buffer)
block_start < block_end
Last P2L index entry extends beyond the last page in revision %ld.
entries->nelts > 0
prefetch_p2l_page
baton->first_revision <= APR_UINT32_MAX
P2L page description overlaps with next page description
Invalid item type in P2L index
Invalid FNV1 checksum in P2L index
Unused regions must be empty and have checksum 0
Only containers may have more than one sub-item
Changed path list must have item number 1
P2L index entry size overflow.
Offset %s too large in revision %ld
get_p2l_keys
page_info.first_revision <= APR_UINT32_MAX
Index offset and rev / pack file size do not match
P2L index page size is not a power of two
P2L page count does not match rev / pack file size
l2p_index_lookup
Revision %ld not covered by item index
Item index %s exceeds l2p limit of %s for revision %ld
L2P actual page size does not match page table value.
Item index %s too large in revision %ld
prefetch_l2p_pages
compare_p2l_info_rev
lhs != rhs
No username is currently associated with filesystem '%s'
Failed to lock '%s'
opaquelocktoken:
Failed to unlock '%s'
Can't parse lock/entries hashfile '%s'
path
token
owner
is_dav_comment
creation_date
expiration_date
comment
children
Corrupt lockfile for path '%s' in filesystem '%s'
No lock on path '%s' in filesystem '%s'
Lock has expired: lock-token '%s' in filesystem '%s'
Cannot verify lock on path '%s'; no username available
User '%s' does not own lock on path '%s' (currently locked by '%s')
Cannot verify lock on path '%s'; no matching lock-token available
'%s' is not a file in filesystem '%s'
Path '%s' doesn't exist in HEAD revision
Lock failed: newer version of '%s' exists
Path '%s' is already locked by user '%s' in filesystem '%s'
Cannot write lock/entries hashfile '%s'
User '%s' is trying to use a lock owned by '%s' in filesystem '%s'
Invalid r%ld footer
Invalid L2P offset in r%ld footer
Invalid P2L offset in r%ld footer
P2L offset %s must be larger than L2P offset %s in r%ld footer
%lld %s %lld %s
Malformed text representation offset line in node-rev
node
copy
type
file
Missing kind field in node-rev '%s'
count
props
text
cpath
Missing cpath field in node-rev '%s'
Non-canonical cpath field in node-rev '%s'
pred
copyroot
Malformed copyroot line in node-rev '%s'
copyfrom
Malformed copyfrom line in node-rev '%s'
minfo-cnt
minfo-here
%lld %llu %lld %lld %s
%lld %llu %lld %lld %s %s
id: %s
node: %s
copy: %s
type: %s
pred: %s
count: %d
text: %s
props: %s
cpath: %s
copyfrom: %ld %s
copyroot: %ld %s
minfo-cnt: %lld
minfo-here: y
DELTA
Malformed representation header
DELTA
DELTA %ld %lld %lld
Property name not NUL terminated
Property value missing
Property value too long
Property value not NUL terminated
Property count mismatch
Found malformed header '%s' in revision file
Missing %s field in node-rev
While reading representation offsets for node-revision '%s':
Invalid character in revision number
Invalid changes line in rev-file
modify
delete
replace
Invalid change kind in rev file
true
false
Invalid text-mod flag in rev-file
Invalid prop-mod flag in rev-file
Invalid mergeinfo-mod flag in rev-file
Invalid path in changes line
Invalid copy-from path in changes line
Invalid change type %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/low_level.c
change->node_kind == svn_node_dir || change->node_kind == svn_node_file
%s%s %s %s %s %s
%ld %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/noderevs.c
container->builder == NULL
container->paths
Node revision index %%%s exceeds container size %%d
ID part index %d exceeds container size %d
Node revision ID index %d exceeds container size %d
Unexpected MD5 digest size %%%s
Unexpected SHA1 digest size %%%s
%lld.pack
pack
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/pack.c
shard_rev % ffd->max_files_per_dir == 0
index.l2p
index.p2l
entry->type == SVN_FS_X__ITEM_TYPE_UNUSED
add_item_rep_mapping
!APR_ARRAY_IDX(context->reps, idx, void *)
get_item_array_index
revision >= context->start_rev
trunk
branch
compare_p2l_info
*lhs != *rhs
list_index == sub_items->nelts
write_reps_containers
Expected current rev to be <= %ld but found %ld
Revision %ld has a non-file where its revprops file should be
Revision %ld has a revs file but no revprops file
Revision %ld has a revs file but the revprops file is inaccessible
Couldn't open rep-cache database '%s'
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/rep-cache.c
ffd->rep_sharing_allowed
Only SHA1 checksums can be used as keys in the rep_cache table.
Checksum '%s' in rep-cache is beyond HEAD
siiii
PRAGMA PAGE_SIZE = 4096; CREATE TABLE rep_cache (   hash TEXT NOT NULL PRIMARY KEY,   revision INTEGER NOT NULL,   offset INTEGER NOT NULL,   size INTEGER NOT NULL,   expanded_size INTEGER NOT NULL   ); PRAGMA USER_VERSION = 1; 
SELECT revision, offset, size, expanded_size FROM rep_cache WHERE hash = ?1 
INSERT OR FAIL INTO rep_cache (hash, revision, offset, size, expanded_size) VALUES (?1, ?2, ?3, ?4, ?5) 
SELECT hash, revision, offset, size, expanded_size FROM rep_cache WHERE revision >= ?1 AND revision <= ?2 
SELECT MAX(revision) FROM rep_cache 
DELETE FROM rep_cache WHERE revision > ?1 
BEGIN TRANSACTION; INSERT INTO rep_cache VALUES ('dummy', 0, 0, 0, 0) 
ROLLBACK TRANSACTION; 
ffd->rep_cache_db
Text body exceeds star delta container capacity
Instruction count exceeds star delta container capacity
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/reps.c
extractor->missing == NULL
Could not read revprops for revision %ld
manifest
%ld.0
%lld
revprop_generation_fixup
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/revprops.c
ffd->has_write_lock
Revprop file for r%ld is corrupt
File too short
checksum mismatch
Failed to parse revprops for r%ld.
is_generation_valid(fs)
No such packed revision %ld
Revprop pack file for r%ld is corrupt
Failed to read revprop pack file for r%ld
Revprop pack for revision r%ld contains revprops for r%ld .. r%ld
Revprop pack for revision r%ld starts at non-packed revisions r%ld
.tmp
start_rev >= revprops->entry.start_rev
get_entry
manifest->nelts > 0
ffd->revprop_generation % 2
Revprop manifest for r%ld is empty
Revprop manifest for r%ld contains out-of-range revision r%ld
Entries in revprop manifest for r%ld are not ordered
Revprop manifest file for r%ld is corrupt
%ld.%llu
Failed to read revprops for r%ld.
create_table
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/string_table.c
data->len < data->blocksize
table_copy_string
header->head_length <= len
Attempted to write to non-transaction '%s'
svn:client-date
Transaction '%s' cleanup failed
Can't set text contents of a directory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/transaction.c
footer_length == footer->len
.txn
No such transaction '%s'
svn:check-ood
svn:check-locks
Invalid change ordering: non-add change on deleted path
Invalid change ordering: add change on preexisting path
new_change
Internal error: a null transaction id was passed to get_txn_proplist()
malformed property list in transaction '%s'
next-id file corrupt
Unexpected itemidx file length
Cannot write to the prototype revision file of transaction '%s' because a previous representation is currently being written by this process
Cannot write to the prototype revision file of transaction '%s' because a previous representation is currently being written by another process
Can't get exclusive lock on file '%s'
p2l proto index offset %s beyond protorev file size %s for TXN %s
Can't unlock unknown transaction '%s'
Can't unlock nonlocked transaction '%s'
Can't unlock prototype revision lockfile for transaction '%s'
Can't close prototype revision lockfile for transaction '%s'
ENDREP
Rep size %s mismatches rep-cache.db value %s for SHA1 %s.
You should delete the rep-cache.db and verify the repository. The cached rep will not be shared.
SHA1 of reps '%s' and '%s' matches (%s) but contents differ
Transaction out of date
! svn_fs_x__is_packed_revprop(cb->fs, new_rev)
reps_to_cache && reps_pool
rev > 0
predecessor count for the root node-revision is wrong: found (%d+%ld != %d), committing r%ld
noderev->node_id.number == 0 && noderev->copy_id.number == 0
Copying from transactions not allowed
svn_fs_x__root_txn_id
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/tree.c
root->is_txn_root
r%ld's root node's predecessor is unexpectedly '%s'
Transaction '%s''s root node's predecessor is unexpectedly NULL
r%ld's root node's predecessor is r%ld but should be r%ld
Transaction '%s''s root node's predecessor is r%ld but should be r%ld
Bad merge; ancestor, source, and target not all in same fs
Bad merge; target '%s' has id '%s', same as ancestor
Conflict at '%s'
history_prev
reported
Root object must be a transaction root
The root directory cannot be deleted
Cannot copy between two different filesystems ('%s' and '%s')
Copy from mutable tree not currently supported
svn:mergeinfo
Cannot compare property value between two different filesystems
File already exists: filesystem '%s', transaction '%s', path '%s'
File already exists: filesystem '%s', revision %ld, path '%s'
Base checksum mismatch on '%s'
Cannot compare file contents between two different filesystems
'%s' is not a file
Node-revision '%s@%ld' claims to have mergeinfo but doesn't
parent_path_relpath
this_node != NULL
Node-revision #'%s' claims to have mergeinfo but doesn't
Node is its own direct or indirect parent '%s'
Negative mergeinfo-count %lld on node '%s'
Predecessor count mismatch: %s has %d, but %s has %d
Node '%s' has kind 'none'
File node '%s' has inconsistent mergeinfo: has_mergeinfo=%d, mergeinfo_count=%lld
Mergeinfo-count discrepancy on '%s': expected %lld+%d, counted %lld
uuid
current
next
txn-current-lock
write-lock
pack-lock
revprop-generation
svn_fs_x__path_rev_packed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/util.c
svn_fs_x__is_packed_rev(fs, rev)
svn_fs_x__path_rev
! svn_fs_x__is_packed_rev(fs, rev)
svn_fs_x__path_revprops
! svn_fs_x__is_packed_revprop(fs, rev)
Malformed TXN name '%s'
transactions
changes
next-ids
txn-protorevs
itemidx
.rev
.rev-lock
.props
.children
%s file '%s' contains unexpected non-digit '%c' within '%s'
Corrupt 'current' file
Can't read '%s'
Unexpected EOF
Number '%s' invalid or too large
.pack
node.%s%s
L2P index
P2L index
%s checksum mismatch in file %s
p2l index entry not found for PHYS o%s:s%ld returned by l2p index for LOG r%ld:i%ld
p2l index info LOG r%ld:i%ld does not match l2p index for LOG r%ld:i%ld
p2l does not cover offset %s for revision %ld
l2p index entry PHYS o%s:s%ld does not match p2l index value LOG r%ld:i%ld for PHYS o%s:s%ld
File size of %s for revision r%ld does not match p2l index size of %s
p2l index entry for revision r%ld is non-contiguous between offsets  %s and %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/subversion/subversion-81/subversion/subversion/libsvn_fs_x/verify.c
size <= STREAM_THRESHOLD
Empty section in file %s contains non-NUL data at offset %s
Checksum mismatch in item at offset %s of length %s bytes in file %s
