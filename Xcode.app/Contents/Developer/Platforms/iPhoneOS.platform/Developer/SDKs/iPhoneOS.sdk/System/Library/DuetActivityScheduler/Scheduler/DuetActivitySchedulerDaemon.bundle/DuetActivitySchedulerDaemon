In Car Policy
com.apple.duetactivityscheduler.incarpolicy.incar
com.apple.duetactivityscheduler.incarpolicy.nav
identifier
predicate
deviceSet
mustWake
/car/isConnected
/maps/navigationInProgress
v4@?0
navigationInProgress == YES
isIntensive == %u
requiresInactive == %u
priority == %llu && timeUntilDeadline > 0
inCar == YES
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
policyName
T@"NSString",R,N
triggers
T@"NSArray",R,N
T@"NSString",&,N,V_policyName
T@"NSArray",&,N,V_triggers
inCarKeyPath
T@"_CDContextualKeyPath",&,N,V_inCarKeyPath
navigationKeyPath
T@"_CDContextualKeyPath",&,N,V_navigationKeyPath
com.appple.duet.activityscheduler.requestActivityResubmission
com.apple.duet.activityscheduler.allow
com.apple.DuetActivityScheduler
com.apple.duetactivityscheduler
/var/mobile/Library/DuetActivityScheduler
com.apple.dasscheduler.batchingqueue.taskevaluation
com.apple.dasscheduler.triggerbatchingqueue
v8@?0@"NSArray"4
com.apple.dasscheduler.activitycompletionbatchingqueue
com.apple.duetactivityscheduler.timeschedulingqueue
com.apple.Duet.DuetActivityScheduler.ActivityEvaluationTimer
<%@: Listener: %@, Clients: %@, Started Tasks: %@
lifecycle
v8@?0@"_DASDaemonClient"4
v16@?0@"_DASActivity"4@"NSDate"8^c12
scoring
scoreWhenRun
time
leeway
DAS for activity %@
scheduledby
lifecycle(activityGroup)
v16@?0@"NSString"4@"NSMutableArray"8^c12
i12@?0@"_DASActivity"4@"_DASActivity"8
v8@?0@"NSString"4
com.apple.duetactivityscheduler.fileprotectionpolicy.statuschanged
com.apple.duetactivityscheduler.pluggedinpolicy.ispluggedin
c8@?0@"NSString"4
dismissalCondition
Periodic timer fired (%@)
i12@?0@4@8
AssertType
PreventUserIdleSystemSleep
AssertName
com.apple.duetactivityscheduler.triggersRestart
AllowsDeviceRestart
com.apple.duetactivityscheduler.assertion
clients
T@"NSMutableArray",&,N,V_clients
startedTasksToStartTime
T@"NSMutableDictionary",&,N,V_startedTasksToStartTime
triggerToPolicyMap
T@"NSDictionary",&,N,V_triggerToPolicyMap
activityToTriggersMap
T@"NSMutableDictionary",&,N,V_activityToTriggersMap
triggerToActivitiesMap
T@"NSMutableDictionary",&,N,V_triggerToActivitiesMap
activityToIncompatibleActivitiesMap
T@"NSMutableDictionary",&,N,V_activityToIncompatibleActivitiesMap
groups
T@"NSMutableDictionary",&,N,V_groups
groupToPendingTasks
T@"NSMutableDictionary",&,N,V_groupToPendingTasks
groupToRunningTasks
T@"NSMutableDictionary",&,N,V_groupToRunningTasks
applicationLaunchRequests
T@"NSMutableDictionary",&,N,V_applicationLaunchRequests
context
T@"<_CDLocalContext>",&,N,V_context
listener
T@"NSXPCListener",&,N,V_listener
timerSchedulingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_timerSchedulingQueue
wakeTimer
T@"PCPersistentTimer",&,N,V_wakeTimer
timerEarliestFireDate
T@"NSDate",&,N,V_timerEarliestFireDate
timerLatestFireDate
T@"NSDate",&,N,V_timerLatestFireDate
networkEvaluationMonitor
T@"_DASNetworkEvaluationMonitor",&,N,V_networkEvaluationMonitor
sleepWakeMonitor
T@"_DASSleepWakeMonitor",&,N,V_sleepWakeMonitor
store
T@"<_DASDataStore>",&,N,V_store
optimalScoringTimer
T@"NSObject<OS_dispatch_source>",&,N,V_optimalScoringTimer
databaseMaintenanceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_databaseMaintenanceTimer
evaluationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_evaluationQueue
triggerBatchingQueue
T@"_DASBatchingQueue",&,N,V_triggerBatchingQueue
activityCompletedBatchingQueue
T@"_DASBatchingQueue",&,N,V_activityCompletedBatchingQueue
recentlyLaunchedApps
T@"NSMutableDictionary",&,N,V_recentlyLaunchedApps
DefaultPairedNearbyPolicy
com.apple.duetactivityscheduler.defaultpairedpolicy.nearbystatus
/watch/nearby
defaultPairedIsNearby == %@
defaultPaired.likelihood == %@
T@"NSString",C,N,V_policyName
predictor
T@"_DKPredictor",&,N,V_predictor
deviceNearbyTimeline
T@"_DKPredictionTimeline",&,V_deviceNearbyTimeline
lastPredictionTimelineUpdate
T@"NSDate",&,N,V_lastPredictionTimelineUpdate
FileProtectionPolicy
/system/isLocked
com.apple.duetactivityscheduler.fileprotectionpolicy.queue
com.apple.mobile.keybagd.first_unlock
v8@?0i4
PasswordConfigured
classALocked == %@ && activityFileProtection == %@
classCLocked == %@ && activityFileProtection == %@
isClassCLocked
Tc,N,V_isClassCLocked
passwordConfigured
Tc,N,V_passwordConfigured
classCLockedToken
Ti,N,V_classCLockedToken
handleUnlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_handleUnlockQueue
DeviceActivityPolicy
com.apple.duetactivityscheduler.deviceactivitypolicy.inusestatus
deviceInUse
deviceActivity
predictions
deviceActivityPrediction
considerAlwaysActive == YES && requiresDeviceInactivity == YES
deviceActivity == %@
deviceActivityTimeline
T@"_DKPredictionTimeline",&,V_deviceActivityTimeline
inUseStatus
T@"_CDContextualKeyPath",&,N,V_inUseStatus
considerAlwaysActive
Tc,N,V_considerAlwaysActive
DASActivity
DASInfo
DASPrediction
applicationUsagePrediction
com.apple.duetactivityschedulerpowerlog.hourlysyncqueue
queuedTasks
eventsCoalesced
dasTasks
droppedCount
v16@?0@"NSString"4@"_DKPredictionTimeline"8^c12
taskName
priority
startTime
timeWhenRun
endTime
duration
optimalScore
optimalScorePercentage
requiresPlugin
requiresInexpensiveNetworking
networkTaskSize
requiresDeviceInactivity
isCpuIntensive
isMemoryIntensive
application
None
score%@
v16@?0@"NSString"4@8^c12
shortPeriodTimer
T@"NSObject<OS_dispatch_source>",&,N,V_shortPeriodTimer
longPeriodTimer
T@"NSObject<OS_dispatch_source>",&,N,V_longPeriodTimer
syncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
lastCoalesed
T@"NSDate",&,N,V_lastCoalesed
multiplier
T@"NSMutableDictionary",&,N,V_multiplier
Ti,N,V_eventsCoalesced
taskCount
Ti,N,V_taskCount
appPredictionCount
Ti,N,V_appPredictionCount
Ti,N,V_droppedCount
activities
T@"NSMutableArray",&,N,V_activities
T@"NSMutableDictionary",&,N,V_predictions
appPredictions
T@"NSMutableDictionary",&,N,V_appPredictions
_DASCoreDataStore.mocQueue
_DASCoreDataStore.queuePSC
%@/%@
%@%@.db
ClassA
ClassC
ClassD
v12@?0@"NSString"4c8
Missing model URL!
%@ : did not exist and could not be created: %@
Failed to load Managed Object Model from %@
Failed to add persistent store: %@
paths
T@"NSDictionary",R,N,V_paths
managedObjectModel
T@"NSManagedObjectModel",&,N,V_managedObjectModel
managedObjectContexts
T@"NSMutableDictionary",R,N,V_managedObjectContexts
persistentStoreCoordinators
T@"NSMutableDictionary",R,N,V_persistentStoreCoordinators
mocQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_mocQueue
pscQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_pscQueue
dataProtectionMonitor
T@"_DASDataProtectionStateMonitor",R,N,V_dataProtectionMonitor
databaseDirectory
T@"NSString",R,C,N,V_databaseDirectory
databaseName
T@"NSString",R,C,N,V_databaseName
modelURL
T@"NSURL",R,N,V_modelURL
readOnly
Tc,R,N,V_readOnly
DuetActivityScheduler
momd
database
T@"_DASCoreDataStorage",&,N,V_database
[%@]: Required:%3.2f, Observed:%3.2f
condition
T@"NSString",&,N,V_condition
currentValue
Td,N,V_currentValue
requiredValue
Td,N,V_requiredValue
reasons:[
{%@}
,condition:{%@}
T@"NSPredicate",&,N,V_condition
reasons
T@"NSMutableArray",&,N,V_reasons
Can Proceed
Must Not Proceed
Must Proceed
Absolutely Must Not Proceed
Unknown Decision (Proceed)
{Decision: %s, Score:%lf, Rationale:%@}
policyDecision
Ti,N,V_policyDecision
validityDuration
Td,N,V_validityDuration
rationale
T@"_DASPolicyResponseRationale",&,N,V_rationale
score
Td,R,N,V_score
path
networkPathEvaluators
T@"NSMutableDictionary",&,N,V_networkPathEvaluators
evaluatorsBeingObserved
T@"NSMutableSet",&,N,V_evaluatorsBeingObserved
callback
T@?,C,N,V_callback
CarplayConnectedPolicy
com.apple.duetactivityscheduler.carplaypolicy.carplayconnected
carplayConnected = %@
PowerNapPolicy
inADarkWake == %@
darkWakeEligible == %@
appRefresh == %@
runSinceLastWake == YES
ChargerPluggedInPolicy
com.apple.duetactivityscheduler.pluggedinpolicy.watchispluggedin
/watch/isPluggedIn
plugin
powerPluggedInPrediction
%@ == %@
isPluggedInKeyPath
T@"_CDContextualKeyPath",&,N,V_isPluggedInKeyPath
watchIsPluggedInKeyPath
T@"_CDContextualKeyPath",&,N,V_watchIsPluggedInKeyPath
pluginTimeline
T@"_DKPredictionTimeline",&,V_pluginTimeline
com.apple.dasbatchingqueue.executionqueue.%s
com.apple.dasbatchingqueue.syncqueue.%s
maxDelay
Td,N,V_maxDelay
maxQueueDepth
TI,N,V_maxQueueDepth
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
workHandler
T@?,C,N,V_workHandler
workItems
T@"NSMutableArray",&,N,V_workItems
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
default
{name: %@, 
response: N/A}
policyWeight: %2.3lf, response: %@}
date
T@"NSDate",R,&,N,V_date
MemoryPressurePolicy
kern.memorystatus_vm_pressure_level
memoryPressure
T@"NSString",&,D,N
T@"NSSet",&,D,N
ApplicationPolicy
application.topN
application.%@
%@.likelihood == %@
timelines
T@"NSMutableDictionary",&,N,V_timelines
topNPrediction
T@"_DKPredictionTimeline",&,N,V_topNPrediction
lastApplicationTimelineUpdate
T@"NSMutableDictionary",&,N,V_lastApplicationTimelineUpdate
NetworkQualityPolicy
com.apple.duetactivityscheduler.nwquality.wired
com.apple.duetactivityscheduler.nwquality.wifi
com.apple.duetactivityscheduler.nwquality.cell
com.apple.duetactivityscheduler.nwquality.radiohot
com.apple.duetactivityscheduler.wifiqualityprediction
wifiPredictions
wiFiAssociatedPrediction
com.apple.duetactivityscheduler.cellqualityprediction
cellPredictions
cellQualityPrediction
/system/wired/quality
/system/cell/active
wifiQuality
cellQuality
networkPathAvailability
T@"_CDContextualKeyPath",&,N,V_wifiQuality
networkEvaluator
T@"_DASNetworkEvaluationMonitor",&,N,V_networkEvaluator
userContext
T@"<_CDContext>",&,N,V_userContext
wifiPredictionTimeline
T@"_DKPredictionTimeline",&,V_wifiPredictionTimeline
wiredQuality
T@"_CDContextualKeyPath",&,N,V_wiredQuality
T@"_CDContextualKeyPath",&,N,V_cellQuality
cellRadioHot
T@"_CDContextualKeyPath",&,N,V_cellRadioHot
cellPredictionTimeline
T@"_DKPredictionTimeline",&,V_cellPredictionTimeline
Activity
name == %@
TRUEPREDICATE
submitDate > %@ AND submitDate < %@
currentState == %d
requestsApplicationLaunch == %d
currentState <= %@ AND startBefore <= %@
ThermalPolicy
com.apple.duetactivityscheduler.thermalpolicypolicy.thermalpressurechange
com.apple.duetactivityscheduler.thermalpolicypolicy.coldpressurechange
com.apple.duetactivityscheduler.thermalpolicypolicy.watchthermalpressurechange
/system/coldThermalPressure
/watch/thermalpressure
coldTemperature == %@
thermalLevel >= %ld
watchThermalLevel >= %ld
thermalPressureLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_thermalPressureLevelKeyPath
watchThermalPressureLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_watchThermalPressureLevelKeyPath
thermalPressureColdKeyPath
T@"_CDContextualKeyPath",&,N,V_thermalPressureColdKeyPath
EnergyBudgetPolicy
com.apple.duetactivityscheduler.energybudgetpolicy.status
energyBudget
pluginStatus
com.apple.FitnessFriends.PeriodicUpdateActivity
CallInProgressPolicy
com.apple.duetactivityscheduler.callinprogresspolicy.callinprogress
callInProgress = %@
com.apple.mobileslideshow
/app/photos/significantWork
PhotosPolicy
com.apple.dueatctivityscheduler.photospolicy.photoswork
significantWorkRemaining == 1 && pluggedIn == 0
significantRemainingPhotosWorkKeyPath
T@"_CDContextualKeyPath",&,N,V_significantRemainingPhotosWorkKeyPath
WatchBackgroundBudgetPolicy
com.apple.duetactivityscheduler.backgroundbudget.snapshot
com.apple.duetactivityscheduler.backgroundbudget.launch
/watch/budget/snapshots
/watch/budget/launches
budgetKey == nil
budgetValue
snapshotBudgetKeyPath
T@"_CDContextualKeyPath",&,N,V_snapshotBudgetKeyPath
launchBudgetKeyPath
T@"_CDContextualKeyPath",&,N,V_launchBudgetKeyPath
com.apple.networkd.configure_connection_pool
c12@?0@"_DASActivity"4^c8
daemon
T@"_DASDaemon",&,N,V_daemon
connection
T@"NSXPCConnection",&,N,V_connection
submittedTasks
T@"NSMutableSet",&,N,V_submittedTasks
startedTasks
T@"NSMutableSet",&,N,V_startedTasks
DataBudgetPolicy
com.apple.duetactivityscheduler.databudgetpolicy.status
dataBudget
com.apple.DuetActivityScheduler.DataProtection.state
com.apple.DuetActivityScheduler.DataProtection.notify
com.apple.mobile.keybagd.lock_status
PasswordProtected
stateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_stateQueue
deviceFormatedForContentProtection
Tc,R,N,V_deviceFormatedForContentProtection
handlers
T@"NSMutableDictionary",R,N,V_handlers
availableState
T@"NSMutableDictionary",R,N,V_availableState
notifyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notifyQueue
notifyToken
Ti,R,N,V_notifyToken
notifyEnabled
Tc,R,N,V_notifyEnabled
master
T@"_DASDataProtectionMaster",R,N,V_master
handlerUUID
T@"NSUUID",R,N,V_handlerUUID
changeHandler
T@?,C,N,V_changeHandler
Trigger
identifier == %@
BatteryLevelPolicy
com.apple.duetactivityscheduler.batterylevelpolicy.batterylevelchange
com.apple.duetactivityscheduler.batterylevelpolicy.watchbatterylevelchange
/watch/batteryPercentage
batteryLevel == %ld
lowPowerModeEnabled == %@
watchBatteryLevel == %ld
batteryLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_batteryLevelKeyPath
watchBatteryLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_watchBatteryLevelKeyPath
watchPluginStatusKeyPath
T@"_CDContextualKeyPath",&,N,V_watchPluginStatusKeyPath
com.apple.das.startup
com.apple.das.submitcount.all
com.apple.das.submitcount.network
com.apple.das.submitcount.launch
com.apple.das.triggercount
com.apple.das.suspensioncount
com.apple.das.preemptioncount.intensive
com.apple.das.preemptioncount.network
com.apple.dasscheduler.metricqueue
ActivityGroupPolicy
%@.currentAvailableLimit == %ld
com.apple.duetactivityscheduler.predictionGenerationQueue
periodStart
periodEnd
maxConcurrent
TQ,D,N
name
Group
beforeFirstActivityOfDay
Tc,D,N
beforeUserIsActive
budgeted
bundleID
cancelAfterDeadline
completedDate
T@"NSDate",&,D,N
cpuIntensive
currentState
Ti,D,N
diskIntensive
groupName
isUpload
launchReason
memoryIntensive
predictedOptimalScore
Td,D,N
predictedOptimalStartDate
relatedApplications
T@"NSData",&,D,N
relevancy
Tq,D,N
requestsApplicationLaunch
requiresNetwork
schedulerRecommendedApplications
schedulingPriority
Ts,D,N
startAfter
startBefore
startDate
submitDate
supportsAnyApplication
suspendable
targetDevice
transferSize
triggersRestart
userInfo
group
T@"_DASGroupManagedObject",&,D,N
RestartRequiredActivitiesPolicy
com.apple.duetactivityscheduler.restartpolicy.assertionsheld
com.apple.duetactivityscheduler.restartpolicy.inusestatus
com.apple.duetactivityscheduler.restartpolicy.wakerequest
com.apple.softwareupdate.autoinstall.startInstall
DeviceRestartPeriodNotInRange == 1
Is any Assertion Held?
Is User active?
Minimum seconds without any scheduled wake
Minumum seconds since user was last active
deviceAssertionsHeld
T@"_CDContextualKeyPath",&,N,V_deviceAssertionsHeld
nextWakeRequest
T@"_CDContextualKeyPath",&,N,V_nextWakeRequest
lastCacheDate
T@"NSDate",&,V_lastCacheDate
deviceRestartPeriod1
T@"_CDDateRange",&,N,V_deviceRestartPeriod1
deviceRestartPeriod2
T@"_CDDateRange",&,N,V_deviceRestartPeriod2
minDurationAfterLastUserInteraction
Td,N,V_minDurationAfterLastUserInteraction
minDurationBeforeNextScheduledWake
Td,N,V_minDurationBeforeNextScheduledWake
predicateForChangeAtKeyPath:
numberWithUnsignedInteger:
numberWithBool:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
init
ephemeralKeyPathWithKey:
initializeTriggers
class
alloc
isEqualToString:
objectForKeyedSubscript:
boolValue
policyResponseWithDecision:validityDuration:rationale:
isIntensive
requiresDeviceInactivity
initWithPolicyName:
predicateWithFormat:
addRationaleWithCondition:
schedulingPriority
startBefore
timeIntervalSinceNow
policyResponseWithScore:validityDuration:rationale:
policyInstance
appliesToActivity:
weightForActivity:
responseForActivity:withState:
indicatesDeterioratingConditionsForTrigger:withState:
baselineScoreForActivity:
shouldLogScoreToPowerLog
policyName
triggers
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
setPolicyName:
setTriggers:
inCarKeyPath
setInCarKeyPath:
navigationKeyPath
setNavigationKeyPath:
_policyName
_triggers
_inCarKeyPath
_navigationKeyPath
initAsAnonymous:withContext:
array
dictionary
handleTriggers:
queueWithName:maxBatchingDelay:maxQueueDepth:queue:workItemsHandler:
handleCompletedActivities:
userContext
defaultCategory
sharedInstance
sharedMonitorWithDaemon:
registerForNetworkPathEvaluation
allPoliciesForPlatform
registerTriggersWithContextStoreForPolicies:
setupTimers
storageWithDirectory:readOnly:
anonymousListener
initWithMachServiceName:
setDelegate:
loadLastSavedState
solicitActivityResubmission
incrementOccurrencesForKey:byCount:
UTF8String
periodicCalculationForOptimal
scheduleTimerBetween:and:waking:
setupDatabaseMaintenance
keyPathForPluginStatus
invalidate
wakeTimerFired:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
date
dateByAddingTimeInterval:
setMinimumEarlyFireProportion:
setDisableSystemWaking:
scheduleInQueue:
currentLocale
descriptionWithLocale:
deleteOldActivities
deleteActivitiesIfRequired
loadPendingLaunchTasks:
loadAllGroups:
countByEnumeratingWithState:objects:count:
name
setObject:forKeyedSubscript:
allObjects
submitActivities:
maxConcurrent
copy
containsObject:
count
candidateGroupActivityForPreemption:
suspendRequested
setSuspendRequested:
suspendActivities:
relatedApplications
firstObject
_DAS_addOrReplaceObject:
removeObject:
removeObjectForKey:
resume
submittedTasks
allKeys
stringWithFormat:
valueForEntitlement:
clientForDaemon:withConnection:
addObject:
logForCategory:
runActivities:
allClientsDo:
removeActivityFromTriggerMapWithName:
setWithArray:
enumerateKeysAndObjectsUsingBlock:
handleNoLongerRunningActivity:
timeIntervalSinceDate:
objectAtIndex:
setStartDate:
runActivityArray:
timewiseEligibleAtDate:
scoreForActivity:withState:response:
compatibilityWith:
setWithObject:
shouldPreemptTask:withStartDate:atDate:
thresholdScoreForActivity:
bypassesPredictions
policyScores
setPolicyScores:
numberWithDouble:
setObject:forKey:
shouldRunActivityNow:withOtherActivites:
groupName
addRunningActivity:toGroupWithName:
requiresNetworkPathMonitoring:
stopMonitoringActivity:
requestsApplicationLaunch
runApplicationLaunchActivities:
hasManyConstraints
setDateStyle:
setTimeStyle:
compare:
integerValue
numberWithInteger:
objectForKey:
stringFromDate:
addTriggersToActivity:
saveActivity:
addLaunchRequest:
startAfter
setStartAfter:
addPendingActivity:toGroupWithName:
computeOptimalScoreAndDateForActivity:
userInfo
startMonitoringActivity:withNetworkParameters:withEndpoint:
shouldEvaluateTask:atDate:
shouldRunActivityNow:
beginWorkForActivity:
triggersRestart
scheduleSystemWakeAt:forActivity:withLeeway:
predictedOptimalStartDate
startDate
shortDescription
tasksNoLongerEligible
arrayWithObject:
addPendingActivitiesToGroups:
saveActivities:
evaluateScoreAndRunActivities:
removeActivityFromTriggerMap:
removeLaunchRequest:
recordActivity:
deleteActivity:
inADarkWake
recordNoLongerRunningActivity:
addWorkItem:
handleRescindedActivity:
_DAS_addOrReplaceObjectsFromArray:
saveGroup:
submitActivity:
createActivityGroup:
setGroupName:
sortUsingComparator:
arrayWithArray:
startedTasks
allValues
addObjectsFromArray:
getActivityWithName:
currentPredictions
registerForNetworkEvaluationWithCallback:
stringByReplacingOccurrencesOfString:withString:
fileProtection
complete
unionSet:
keyPathForCallInProgressStatus
determineNextTimerFireDateAndSchedule
keyPaths
registrationWithIdentifier:contextualPredicate:dismissalPolicy:deviceSet:mustWake:callback:
registerCallback:
mutableCopy
unsignedIntegerValue
registerWithContextStoreForId:contextualPredicate:dismissalCondition:deviceSet:mustWake:
dictionaryWithDictionary:
associateActivity:withTriggerKeys:
evaluateScoreAndRunAllActivitiesForReason:
stringWithUTF8String:
darkWakeEligible
lastScored
chooseActivitiesToRunFromCandidateActivities:toBeRunActivities:toLaunchApplications:
duration
distantPast
suspendable
listener:shouldAcceptNewConnection:
submitActivity:inGroup:
submitActivity:inGroupWithName:
handleEligibleActivities:
activityCompleted:
activityCanceled:
activityStarted:
submittedActivitiesWithHandler:
runningActivitiesWithHandler:
runningGroupActivitiesWithHandler:
scoresForActivityWithName:withHandler:
activityRunStatisticsWithHandler:
forceRunActivities:
startedActivities:
currentPredictionsWithHandler:
cancelActivities:
additionalCapacityForActivity:inGroupWithName:shouldTryToSuspend:
requestCountForApplication:
start
submittedTaskCount
removeClient:
clearRecentlyLaunchedApps
handleRunningActivities:
activityRunStatistics
evaluateScoreAndRunActivitesForTrigger:
clients
setClients:
startedTasksToStartTime
setStartedTasksToStartTime:
triggerToPolicyMap
setTriggerToPolicyMap:
activityToTriggersMap
setActivityToTriggersMap:
triggerToActivitiesMap
setTriggerToActivitiesMap:
activityToIncompatibleActivitiesMap
setActivityToIncompatibleActivitiesMap:
groups
setGroups:
groupToPendingTasks
setGroupToPendingTasks:
groupToRunningTasks
setGroupToRunningTasks:
applicationLaunchRequests
setApplicationLaunchRequests:
context
setContext:
listener
setListener:
timerSchedulingQueue
setTimerSchedulingQueue:
wakeTimer
setWakeTimer:
timerEarliestFireDate
setTimerEarliestFireDate:
timerLatestFireDate
setTimerLatestFireDate:
networkEvaluationMonitor
setNetworkEvaluationMonitor:
sleepWakeMonitor
setSleepWakeMonitor:
store
setStore:
optimalScoringTimer
setOptimalScoringTimer:
databaseMaintenanceTimer
setDatabaseMaintenanceTimer:
evaluationQueue
setEvaluationQueue:
triggerBatchingQueue
setTriggerBatchingQueue:
activityCompletedBatchingQueue
setActivityCompletedBatchingQueue:
recentlyLaunchedApps
setRecentlyLaunchedApps:
_clients
_startedTasksToStartTime
_triggerToPolicyMap
_activityToTriggersMap
_triggerToActivitiesMap
_activityToIncompatibleActivitiesMap
_groups
_groupToPendingTasks
_groupToRunningTasks
_applicationLaunchRequests
_context
_listener
_timerSchedulingQueue
_wakeTimer
_timerEarliestFireDate
_timerLatestFireDate
_networkEvaluationMonitor
_sleepWakeMonitor
_store
_optimalScoringTimer
_databaseMaintenanceTimer
_evaluationQueue
_triggerBatchingQueue
_activityCompletedBatchingQueue
_recentlyLaunchedApps
keyPathForWatchNearbyStatus
sharedPredictor
predictionForDeviceNearby
predicateForEventsWithStartInDateRangeFrom:to:
predicateForEventsWithIntegerValue:
andPredicateWithSubpredicates:
predictionForStreamWithName:withPredicate:withPredictionType:
targetDevice
predictionGenerationQueue
deviceNearbyTimeline
predictionNeedsUpdating:atDate:lastUpdatedAt:
setDeviceNearbyTimeline:
valueAtDate:
doubleValue
scoreForActivity:atDate:
predictedScoreForActivity:atDate:
predictor
setPredictor:
lastPredictionTimelineUpdate
setLastPredictionTimelineUpdate:
_predictor
_deviceNearbyTimeline
_lastPredictionTimelineUpdate
keyPathWithKey:
indicatesProtection
completeUntilFirstUserAuthentication
isClassCLocked
setIsClassCLocked:
passwordConfigured
setPasswordConfigured:
classCLockedToken
setClassCLockedToken:
handleUnlockQueue
setHandleUnlockQueue:
_isClassCLocked
_passwordConfigured
_classCLockedToken
_handleUnlockQueue
deviceActivityLikelihood
setPrediction:forKey:
recordPrediction:key:valueMultiplier:
keyPathForInUseStatus
initWithSuiteName:
boolForKey:
lowLikelihoodPeriodStartForPredictionWithKey:
lowLikelihoodPeriodEndForPredictionWithKey:
deviceActivityTimeline
setDeviceActivityTimeline:
unsignedIntValue
printLowLikelihoodRegions
inUseStatus
setInUseStatus:
considerAlwaysActive
setConsiderAlwaysActive:
_considerAlwaysActive
_deviceActivityTimeline
_inUseStatus
logActivities
logPredictions
numberWithInt:
removeAllObjects
getValuesFromTimeline:valueMultiplier:
requiresNetwork
shouldLogPrediction:
shouldLogActivity:
createRecordFromActivity:
didCoaleseWithPrevious:
dateWithTimeIntervalSinceNow:
getValuesForPrediction:tillEndDate:withIntervals:
objectAtIndexedSubscript:
intValue
numberFromDouble:
setObject:atIndexedSubscript:
shouldLogAppPrediction:
predictedOptimalScore
requiresPlugin
requiresInexpensiveNetworking
transferSize
cpuIntensive
memoryIntensive
recordAppPrediction:app:
shortPeriodTimer
setShortPeriodTimer:
longPeriodTimer
setLongPeriodTimer:
syncQueue
setSyncQueue:
lastCoalesed
setLastCoalesed:
multiplier
setMultiplier:
eventsCoalesced
setEventsCoalesced:
taskCount
setTaskCount:
appPredictionCount
setAppPredictionCount:
droppedCount
setDroppedCount:
activities
setActivities:
predictions
setPredictions:
appPredictions
setAppPredictions:
_shortPeriodTimer
_longPeriodTimer
_syncQueue
_lastCoalesed
_multiplier
_eventsCoalesced
_taskCount
_appPredictionCount
_droppedCount
_activities
_predictions
_appPredictions
initWithDirectory:databaseName:modelURL:readOnly:
dataProtectionClassA
dataProtectionClassC
dataProtectionClassD
handleDataProtectionChangeFor:willBeAvailable:
setChangeHandler:
invalidateManagedObjectContextFor:
invalidatePersistentStoreCoordinatorFor:
reset
performWithOptions:andBlock:
persistentStores
removePersistentStore:error:
initWithContentsOfURL:
isDataAvailableFor:
createDatabaseDirectory:error:
code
managedObjectModel
fileURLWithPath:
persistentStoreOptionsFor:readOnly:
metadataForPersistentStoreOfType:URL:options:error:
isConfiguration:compatibleWithStoreMetadata:
initWithManagedObjectModel:
destroyPersistentStoreAtURL:withType:options:error:
addPersistentStoreWithType:configuration:URL:options:error:
handleDatabaseErrors:forPSC:protectionClass:
persistentStoreCoordinatorFor:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setMergePolicy:
setUndoManager:
_destroyPersistentStoreAtURL:withType:options:error:
mocForProtectionClass:
deleteDatabaseForPSC:protectionClass:obliterate:
defaultManager
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
storageWithDirectory:databaseName:modelURL:readOnly:
deleteStorageFor:obliterate:
databaseDirectory
databaseName
modelURL
readOnly
paths
setManagedObjectModel:
managedObjectContexts
persistentStoreCoordinators
mocQueue
pscQueue
dataProtectionMonitor
_readOnly
_databaseDirectory
_databaseName
_modelURL
_paths
_managedObjectModel
_managedObjectContexts
_persistentStoreCoordinators
_mocQueue
_pscQueue
_dataProtectionMonitor
initWithDirectory:readOnly:
bundleForClass:
pathForResource:ofType:
hasChanges
save:
createOrUpdateActivity:context:
fetchOrCreateTrigger:managedObjectContext:
addActivitiesObject:
createOrUpdateGroup:context:
mocSaveAndReset:
createMOInMOC:activity:group:triggers:
addActivities:
createMOInMOC:group:activities:
fetchAllActivities:
getActivityFromManagedObject:
updateActivityStarted:
predicateForPendingActivities
predicateForLaunchActivities
fetchActivitiesUsingPredicate:context:
predicateForStartedActivities
fetchAllGroups:
getGroupFromManagedObject:
updateActivityStarted:context:
updateActivityCompleted:context:
updateActivityCanceled:context:
deleteActivity:context:
deleteOldActivities:
deleteActivitiesIfRequired:
saveActivity:triggers:
saveActivities:groups:triggersArray:
saveGroup:activity:
saveGroups:activitiesArray:
loadAllTasks:startedTasks:
saveActivity:group:triggers:hasStarted:
loadStartedTasks:
updateActivityCompleted:
updateActivityCanceled:
deleteStorageWithObliterationOption:
database
setDatabase:
_database
predicateWithFormat:arguments:
arrayWithCapacity:
criterionWithFormat:
criterionWithPredicate:
policyCriteriaWithPredicates:
initWithCondition:withRequiredValue:withCurrentValue:
condition
setCondition:
currentValue
setCurrentValue:
requiredValue
setRequiredValue:
_condition
_currentValue
_requiredValue
string
appendFormat:
appendString:
addRationaleForCondition:withRequiredValue:withCurrentValue:
reasons
setReasons:
_reasons
prettyDecisionDescription:
initWithScore:decision:validityDuration:rationale:
score
policyDecision
setPolicyDecision:
validityDuration
setValidityDuration:
rationale
setRationale:
_policyDecision
_rationale
_score
_validityDuration
initWithEndpoint:parameters:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
status
path
observeValueForKeyPath:ofObject:change:context:
isNetworkPathAvailableForActivity:
networkPathEvaluators
setNetworkPathEvaluators:
evaluatorsBeingObserved
setEvaluatorsBeingObserved:
callback
setCallback:
_networkPathEvaluators
_evaluatorsBeingObserved
_callback
keyPathForCarplayConnectedStatus
managedObjectContext
deleteObject:
willSave
beforeDaysFirstActivity
canRunInCurrentWakeState:
hasFinishedRunningSinceLastWake:
pluginLikelihood
scoreForActivity:isPluggedIn:
pluginTimeline
setPluginTimeline:
isPluggedInKeyPath
setIsPluggedInKeyPath:
watchIsPluggedInKeyPath
setWatchIsPluggedInKeyPath:
_isPluggedInKeyPath
_watchIsPluggedInKeyPath
_pluginTimeline
initializeAllPolicies
allPredictingPoliciesForPlatform
unprotectedExecuteWorkItems
initWithName:maxBatchingDelay:maxQueueDepth:queue:workItemsHandler:
maxDelay
setMaxDelay:
maxQueueDepth
setMaxQueueDepth:
executionQueue
setExecutionQueue:
workHandler
setWorkHandler:
workItems
setWorkItems:
timer
setTimer:
_maxQueueDepth
_executionQueue
_workHandler
_workItems
_timer
_maxDelay
setBypassesPredictions:
getResponseStringForPolicy:response:appliesToActivity:weightForActivity:
setLastScored:
setLastComputedScore:
localTimeZone
setTimeZone:
determineIfActivityBypassesPredictions:
setPredictedOptimalStartDate:
setPredictedOptimalScore:
dateWithTimeInterval:sinceDate:
getTimeSlotForActivity:
getScoreForTimeSlot:activityPriority:activityScore:
relaxationFactorForTimeSlot:activityPriority:
preOptimalRelaxationFactor:
_date
memoryPressureLevelWithContext:
launchLikelihoodForTopNApplications:withLikelihoodGreaterThan:withTemporalResolution:
topNPrediction
supportsAnyApplication
setTopNPrediction:
setSchedulerRecommendedApplications:
scoreForAnyAppActivity:atDate:
launchLikelihoodPredictionForApp:
scoreForActivity:atDate:withRationale:
timelines
setTimelines:
lastApplicationTimelineUpdate
setLastApplicationTimelineUpdate:
_timelines
_topNPrediction
_lastApplicationTimelineUpdate
keyPathForWiFiQualityPrediction
setWifiPredictionTimeline:
wifiPredictionTimeline
localWakingRegistrationWithIdentifier:contextualPredicate:callback:
keyPathForCellQualityPrediction
setCellPredictionTimeline:
cellPredictionTimeline
keyPathForWiFiConnectionQuality
keyPathForCellConnectionQuality
registerForPredictionChanges
minimumQualityForActivity:interface:
scoreForActivity:networkQuality:interface:pluginStatus:radioHot:
predictionForKey:
wifiQuality
setWifiQuality:
networkEvaluator
setNetworkEvaluator:
setUserContext:
wiredQuality
setWiredQuality:
cellQuality
setCellQuality:
cellRadioHot
setCellRadioHot:
_wifiQuality
_networkEvaluator
_userContext
_wifiPredictionTimeline
_wiredQuality
_cellQuality
_cellRadioHot
_cellPredictionTimeline
predicateForActivityWithName:
submitDate
predicateForActivityWithSubmitDate:
entityName
insertNewObjectForEntityForName:inManagedObjectContext:
entityForName:inManagedObjectContext:
setEntity:
predicateForUniqueRecord:
setPredicate:
executeFetchRequest:error:
lastObject
createNewActivity:
copyActivity:toManagedObject:
setFetchBatchSize:
setFetchLimit:
setName:
setStartBefore:
setSubmitDate:
setSchedulingPriority:
setSuspendable:
setTargetDevice:
cancelAfterDeadline
setCancelAfterDeadline:
setDuration:
setTransferSize:
setTriggersRestart:
setRequiresPlugin:
setRequiresNetwork:
setRequiresDeviceInactivity:
setRequiresInexpensiveNetworking:
setRequestsApplicationLaunch:
setSupportsAnyApplication:
setCpuIntensive:
diskIntensive
setDiskIntensive:
setMemoryIntensive:
beforeUserIsActive
setBeforeUserIsActive:
bundleID
setBundleId:
isUpload
setIsUpload:
budgeted
setBudgeted:
relevancy
setRelevancy:
launchReason
setLaunchReason:
unarchiveObjectWithData:
setRelatedApplications:
schedulerRecommendedApplications
setUserInfo:
bundleId
setBundleID:
setCurrentState:
archivedDataWithRootObject:
fetchActivity:context:
setCompletedDate:
updateActivity:value:context:
initWithFetchRequest:
executeRequest:error:
deleteActivites:moc:
countForFetchRequest:error:
keyPathForThermalPressureLevel
isTooColdWithContext:
maxAllowableThermalPressureForActivity:
getScoreForThermalLevel:
thermalPressureLevelKeyPath
setThermalPressureLevelKeyPath:
watchThermalPressureLevelKeyPath
setWatchThermalPressureLevelKeyPath:
thermalPressureColdKeyPath
setThermalPressureColdKeyPath:
_thermalPressureLevelKeyPath
_watchThermalPressureLevelKeyPath
_thermalPressureColdKeyPath
keyPathForEnergyBudgetRemainingStatus
budgetIsPositive:
haveSignificantWorkRemaining:
significantRemainingPhotosWorkKeyPath
setSignificantRemainingPhotosWorkKeyPath:
_significantRemainingPhotosWorkKeyPath
snapshotBudgetKeyPath
setSnapshotBudgetKeyPath:
launchBudgetKeyPath
setLaunchBudgetKeyPath:
_snapshotBudgetKeyPath
_launchBudgetKeyPath
interfaceWithProtocol:
setRemoteObjectInterface:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
handleClientInterruption
setInvalidationHandler:
initWithDaemon:withConnection:
objectsPassingTest:
cancelAllActivities
daemon
unlockedActivitiesWithNames:inSet:
minusSet:
activityNamesFromActivities:
remoteObjectProxy
dealloc
submitActivityInternal:
submitActivitiesInternal:
_DAS_unionSetOverridingExisting:
removeKnownActivitiesFromSet:
connection
setConnection:
setSubmittedTasks:
setStartedTasks:
setDaemon:
_connection
_submittedTasks
_startedTasks
_daemon
keyPathForNetworkingBudgetRemainingStatus
keyPathForWiredConnectionQuality
isDataAvailableForClassA
isDataAvailableForClassC
handleKeyBagLockNotification
deviceHasBeenUnlockedSinceBoot
deviceIsPasswordConfigured
deviceIsLocked
UUID
registerStateChangeHandler:
deregisterStateChangeHandler:
stateQueue
deviceFormatedForContentProtection
handlers
availableState
notifyQueue
notifyToken
notifyEnabled
_deviceFormatedForContentProtection
_notifyEnabled
_stateQueue
_handlers
_availableState
_notifyQueue
_notifyToken
changeHandler
master
handlerUUID
_changeHandler
_master
_handlerUUID
copyTrigger:toManagedObject:
createTrigger:managedObjectContext:
setIdentifier:
keyPathForBatteryLevel
processInfo
isLowPowerModeEnabled
getScoreForActivity:forBatteryLevel:isPluggedIn:isLowPowerModeEnabled:
batteryLevelKeyPath
setBatteryLevelKeyPath:
watchBatteryLevelKeyPath
setWatchBatteryLevelKeyPath:
watchPluginStatusKeyPath
setWatchPluginStatusKeyPath:
_batteryLevelKeyPath
_watchBatteryLevelKeyPath
_watchPluginStatusKeyPath
metricQueue
recordOccurrenceForKey:
updateAverageForKey:withNumerator:withDenominator:
recordPredictionAccuracyForActivityLevel:atDate:
knowledgeStore
predictorWithKnowledgeStore:
endDate
transitionDates
cacheDetailsForPredictionWithKey:
initialize
groupWithName:maxConcurrent:
setMaxConcurrent:
createGroup:
copyGroup:toManagedObject:
fetchGroupsUsingPredicate:context:
predicateForName:
keyPathForDeviceAssertionsHeldStatus
keyPathForNextUserVisibleWakeDate
getDeviceRestartForecast
periodWithStart:end:
currentCalendar
components:fromDate:
setHour:
setMinute:
setSecond:
dateFromComponents:
lastCacheDate
getUnlockAndSoftwareUpdateTimes
cacheSleepPeriod:end:period1:period2:
setLastCacheDate:
contains:
keyPathForLastUseDate
defaultDeviceRestartDateRangeWithDate:
deviceAssertionsHeld
setDeviceAssertionsHeld:
nextWakeRequest
setNextWakeRequest:
deviceRestartPeriod1
setDeviceRestartPeriod1:
deviceRestartPeriod2
setDeviceRestartPeriod2:
minDurationAfterLastUserInteraction
setMinDurationAfterLastUserInteraction:
minDurationBeforeNextScheduledWake
setMinDurationBeforeNextScheduledWake:
_deviceAssertionsHeld
_nextWakeRequest
_lastCacheDate
_deviceRestartPeriod1
_deviceRestartPeriod2
_minDurationAfterLastUserInteraction
_minDurationBeforeNextScheduledWake
_DASInCarPolicy
_DASActivityPolicy
NSObject
_DASDaemon
NSXPCListenerDelegate
_DASActivitySchedulerClient
_DASActivityGroupSchedulingAndIntrospecting
_DASActivityGroupScheduler
_DASActivityScheduler
_DASActivitySchedulerIntrospectingServer
_DASDefaultPairedPolicy
_DASActivityPolicyPredicting
_DASFileProtectionPolicy
_DASDeviceActivityPolicy
_DASPLLogger
_DASCoreDataStorage
_DASCoreDataStore
_DASDataStore
_DASPolicyCriterion
_DASPolicyRequiredValueRationale
_DASPolicyResponseRationale
_DASPolicyResponse
_DASNetworkEvaluationMonitor
_DASCarPlayPolicy
_DASActivityManagedObject
_DASGroupManagedObject
_DASPowerNapPolicy
_DASRequiresPluggedInPolicy
_DASPolicyManager
_DASBatchingQueue
_DASDaemonLogger
_DASConditionScore
_DASMemoryPressurePolicy
CoreDataProperties
_DASApplicationPolicy
_DASTriggerManagedObject
_DASNetworkQualityPolicy
_DASActivityRecorder
_DASThermalPolicy
_DASEnergyBudgetPolicy
_DASSleepWakeMonitor
_DASCallInProgressPolicy
_DASPhotosPolicy
_DASWatchBackgroundBudgetPolicy
_DASDaemonClient
_DASDataBudgetPolicy
_DASDataProtectionMaster
_DASDataProtectionStateMonitor
_DASTriggerRecord
_DASBatteryLevelPolicy
_DASMetricRecorder
_DASGroupSchedulingPolicy
_DASPredictionManager
_DASGroupRecorder
_DASRequiresRestartPolicy
@8@0:4
c12@0:4@8
c12@0:4@"_DASActivity"8
d12@0:4@8
d12@0:4@"_DASActivity"8
@16@0:4@8@12
@"_DASPolicyResponse"16@0:4@"_DASActivity"8@"<_CDContext>"12
c16@0:4@8@12
c16@0:4@"NSString"8@"<_CDContext>"12
c8@0:4
@"NSString"8@0:4
@"NSArray"8@0:4
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
c12@0:4#8
c12@0:4@"Protocol"8
c12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
v8@0:4
v12@0:4@8
@"NSString"
@"NSArray"
@"_CDContextualKeyPath"
c16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v12@0:4@"NSArray"8
v12@0:4@"_DASActivityGroup"8
v16@0:4@8@12
v16@0:4@"_DASActivity"8@"_DASActivityGroup"12
v16@0:4@"_DASActivity"8@"NSString"12
v12@0:4@?8
v12@0:4@?<v@?@"NSArray">8
v12@0:4@"_DASActivity"8
v16@0:4@8@?12
v16@0:4@"NSString"8@?<v@?@"NSArray">12
v12@0:4@?<v@?@"NSDictionary">8
@16@0:4c8@12
v28@0:4d8d16c24
i20@0:4@8@12c16
I12@0:4@8
@12@0:4@8
v20@0:4@8@12i16
v28@0:4@8@12@16I20c24
v20@0:4@8@12@16
c20@0:4@8@12@16
@"NSMutableArray"
@"NSMutableDictionary"
@"NSDictionary"
@"<_CDLocalContext>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"PCPersistentTimer"
@"NSDate"
@"_DASNetworkEvaluationMonitor"
@"_DASSleepWakeMonitor"
@"<_DASDataStore>"
@"NSObject<OS_dispatch_source>"
@"_DASBatchingQueue"
d16@0:4@8@12
d16@0:4@"_DASActivity"8@"NSDate"12
@"_DKPredictor"
@"_DKPredictionTimeline"
v12@0:4c8
i8@0:4
v12@0:4i8
@16@0:4d8
@24@0:4@8@12@16c20
@16@0:4@8c12
c16@0:4@8^@12
v16@0:4@8c12
c20@0:4@8@12c16
c16@0:4@8c12
@"NSURL"
@"NSManagedObjectModel"
@"_DASDataProtectionStateMonitor"
v12@0:4@"NSMutableSet"8
v24@0:4@8@12@16@20
v24@0:4@8@12@16c20
c12@0:4c8
@"_DASCoreDataStorage"
@28@0:4@8d12d20
d8@0:4
v16@0:4d8
v28@0:4@8d12d20
@"NSPredicate"
@12@0:4i8
@24@0:4i8d12@20
@28@0:4d8d16@24
@32@0:4d8i16d20@28
@"_DASPolicyResponseRationale"
v24@0:4@8@12@16^v20
@?8@0:4
@"NSMutableSet"
d16@0:4@8c12
@32@0:4@8d12I20@24@?28
v12@0:4I8
d20@0:4@8@12^i16
i12@0:4@8
d24@0:4i8I12d16
d16@0:4i8I12
d12@0:4I8
@28@0:4@8@12c16d20
d20@0:4@8@12@16
i16@0:4@8i12
d28@0:4@8i12i16c20c24
@"<_CDContext>"
v20@0:4@8i12@16
d12@0:4i8
@"NSXPCConnection"
@"_DASDaemon"
@12@0:4@?8
@"_DASDataProtectionMaster"
@"NSUUID"
d28@0:4@8d12c20c24
v20@0:4@8q12
v16@0:4i8@12
@24@0:4@8@12d16
c24@0:4@8@12^@16^@20
@"_CDDateRange"
Initializing DASDaemon...
Soliciting activities for resubmission.
Setting up timers.
Setting timer (waking=%u) between %s and %s
Loading saved state.
Loading group %@.
Adding a launch request for application %@ by activity %@
Removing a launch request for application %@ by activity %@
Received unentitled XPC connection. Dropping on the floor
Running activities : %@
Unable to run activities. Removing references: %@
Suspending Activites:%@
'%@' has compatibility score of %lf with %@. Bailing  out.
Suspending intensive activity '%@' because it has been running for too long
'%@' has compatibility score of %lf with '%@'. Relaxing scores.
'%@' DecisionToRun:%d (Bypasses Predictions)
'%@' CurrentScore: %lf, ThresholdScore: %lf DecisionToRun:%d
Schedule wake at %@ for activity name '%@'(leeway:%@)
Failed to schedule wake at %@ for activity name '%@'(leeway:%@)(ret:0x%x)
Submitted Activity: %@
Advancing start date for %@ by %3.1lf minutes
Starting group activity %@
Started activities: %@
Submitted activities: %@
NO LONGER RUNNING %@ ...Tasks running in group [%@] are %ld!
COMPLETED %@!
CANCELED: %@!
With %@ ...Tasks running in group %@ are %ld!
Submit activity: %@ in group: %@ with capacity: %ld
Force Running %lu activities
Force run activities unable to find activity %@
Attempting to suspend based on triggers: %@
Ignoring trigger %@ because conditions are deteriorating
Evaluating %llu activities based on triggers
Trigger: %@ is now [%@]
Periodic scoring of activities for optimal date
Arming timer for activity %@
Taking an assertion
Failed to create SystemActive asserion. ret:0x%x
Rescoring all %lu activities [%@]
Rescoring %lu activities due to trigger %@
No tasks blocked on %@
Activity %@ has been running for %@ minutes
Suspending activity %@ as it may block other high priority activities.
Suspending activity %@ because a required criterion is not satisfied.
Device Activity: %@
Low Likelihood is from %@ to %@
CoreData save error:  : %@, %@
Start network path monitoring for '%@'
Stop network path monitoring for '%@'
Plugin Likelihood: %@
%@:[
%@ ] sumScores:%lf, denominator:%f, FinalDecision: %@ FinalScore: %f}
Activity %@ bypasses predictions
Activity %@ start beyond the 18 hour interval
Activity %@: Optimal Score %.4f at %@ (Valid Until: %@)
TopN: %@
Timeline for %@: %@
Updating 'WiFiQualityPredictions' to %@
Updating 'CellQualityPredictions' to %@
Can't complete activity %@! It's not running!
Unentitled client tried to create an Activity Group. Dropping on the floor
In Car Policy
com.apple.duetactivityscheduler.incarpolicy.incar
com.apple.duetactivityscheduler.incarpolicy.nav
identifier
predicate
deviceSet
mustWake
/car/isConnected
/maps/navigationInProgress
v4@?0
navigationInProgress == YES
isIntensive == %u
requiresInactive == %u
priority == %llu && timeUntilDeadline > 0
inCar == YES
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
policyName
T@"NSString",R,N
triggers
T@"NSArray",R,N
T@"NSString",&,N,V_policyName
T@"NSArray",&,N,V_triggers
inCarKeyPath
T@"_CDContextualKeyPath",&,N,V_inCarKeyPath
navigationKeyPath
T@"_CDContextualKeyPath",&,N,V_navigationKeyPath
com.appple.duet.activityscheduler.requestActivityResubmission
com.apple.duet.activityscheduler.allow
com.apple.DuetActivityScheduler
com.apple.duetactivityscheduler
/var/mobile/Library/DuetActivityScheduler
com.apple.dasscheduler.batchingqueue.taskevaluation
com.apple.dasscheduler.triggerbatchingqueue
v8@?0@"NSArray"4
com.apple.dasscheduler.activitycompletionbatchingqueue
com.apple.duetactivityscheduler.timeschedulingqueue
com.apple.Duet.DuetActivityScheduler.ActivityEvaluationTimer
<%@: Listener: %@, Clients: %@, Started Tasks: %@
lifecycle
v8@?0@"_DASDaemonClient"4
v16@?0@"_DASActivity"4@"NSDate"8^c12
scoring
scoreWhenRun
time
leeway
DAS for activity %@
scheduledby
lifecycle(activityGroup)
v16@?0@"NSString"4@"NSMutableArray"8^c12
i12@?0@"_DASActivity"4@"_DASActivity"8
v8@?0@"NSString"4
com.apple.duetactivityscheduler.fileprotectionpolicy.statuschanged
com.apple.duetactivityscheduler.pluggedinpolicy.ispluggedin
c8@?0@"NSString"4
dismissalCondition
Periodic timer fired (%@)
i12@?0@4@8
AssertType
PreventUserIdleSystemSleep
AssertName
com.apple.duetactivityscheduler.triggersRestart
AllowsDeviceRestart
com.apple.duetactivityscheduler.assertion
clients
T@"NSMutableArray",&,N,V_clients
startedTasksToStartTime
T@"NSMutableDictionary",&,N,V_startedTasksToStartTime
triggerToPolicyMap
T@"NSDictionary",&,N,V_triggerToPolicyMap
activityToTriggersMap
T@"NSMutableDictionary",&,N,V_activityToTriggersMap
triggerToActivitiesMap
T@"NSMutableDictionary",&,N,V_triggerToActivitiesMap
activityToIncompatibleActivitiesMap
T@"NSMutableDictionary",&,N,V_activityToIncompatibleActivitiesMap
groups
T@"NSMutableDictionary",&,N,V_groups
groupToPendingTasks
T@"NSMutableDictionary",&,N,V_groupToPendingTasks
groupToRunningTasks
T@"NSMutableDictionary",&,N,V_groupToRunningTasks
applicationLaunchRequests
T@"NSMutableDictionary",&,N,V_applicationLaunchRequests
context
T@"<_CDLocalContext>",&,N,V_context
listener
T@"NSXPCListener",&,N,V_listener
timerSchedulingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_timerSchedulingQueue
wakeTimer
T@"PCPersistentTimer",&,N,V_wakeTimer
timerEarliestFireDate
T@"NSDate",&,N,V_timerEarliestFireDate
timerLatestFireDate
T@"NSDate",&,N,V_timerLatestFireDate
networkEvaluationMonitor
T@"_DASNetworkEvaluationMonitor",&,N,V_networkEvaluationMonitor
sleepWakeMonitor
T@"_DASSleepWakeMonitor",&,N,V_sleepWakeMonitor
store
T@"<_DASDataStore>",&,N,V_store
optimalScoringTimer
T@"NSObject<OS_dispatch_source>",&,N,V_optimalScoringTimer
databaseMaintenanceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_databaseMaintenanceTimer
evaluationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_evaluationQueue
triggerBatchingQueue
T@"_DASBatchingQueue",&,N,V_triggerBatchingQueue
activityCompletedBatchingQueue
T@"_DASBatchingQueue",&,N,V_activityCompletedBatchingQueue
recentlyLaunchedApps
T@"NSMutableDictionary",&,N,V_recentlyLaunchedApps
DefaultPairedNearbyPolicy
com.apple.duetactivityscheduler.defaultpairedpolicy.nearbystatus
/watch/nearby
defaultPairedIsNearby == %@
defaultPaired.likelihood == %@
T@"NSString",C,N,V_policyName
predictor
T@"_DKPredictor",&,N,V_predictor
deviceNearbyTimeline
T@"_DKPredictionTimeline",&,V_deviceNearbyTimeline
lastPredictionTimelineUpdate
T@"NSDate",&,N,V_lastPredictionTimelineUpdate
FileProtectionPolicy
/system/isLocked
com.apple.duetactivityscheduler.fileprotectionpolicy.queue
com.apple.mobile.keybagd.first_unlock
v8@?0i4
PasswordConfigured
classALocked == %@ && activityFileProtection == %@
classCLocked == %@ && activityFileProtection == %@
isClassCLocked
Tc,N,V_isClassCLocked
passwordConfigured
Tc,N,V_passwordConfigured
classCLockedToken
Ti,N,V_classCLockedToken
handleUnlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_handleUnlockQueue
DeviceActivityPolicy
com.apple.duetactivityscheduler.deviceactivitypolicy.inusestatus
deviceInUse
deviceActivity
predictions
deviceActivityPrediction
considerAlwaysActive == YES && requiresDeviceInactivity == YES
deviceActivity == %@
deviceActivityTimeline
T@"_DKPredictionTimeline",&,V_deviceActivityTimeline
inUseStatus
T@"_CDContextualKeyPath",&,N,V_inUseStatus
considerAlwaysActive
Tc,N,V_considerAlwaysActive
DASActivity
DASInfo
DASPrediction
applicationUsagePrediction
com.apple.duetactivityschedulerpowerlog.hourlysyncqueue
queuedTasks
eventsCoalesced
dasTasks
droppedCount
v16@?0@"NSString"4@"_DKPredictionTimeline"8^c12
taskName
priority
startTime
timeWhenRun
endTime
duration
optimalScore
optimalScorePercentage
requiresPlugin
requiresInexpensiveNetworking
networkTaskSize
requiresDeviceInactivity
isCpuIntensive
isMemoryIntensive
application
None
score%@
v16@?0@"NSString"4@8^c12
shortPeriodTimer
T@"NSObject<OS_dispatch_source>",&,N,V_shortPeriodTimer
longPeriodTimer
T@"NSObject<OS_dispatch_source>",&,N,V_longPeriodTimer
syncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
lastCoalesed
T@"NSDate",&,N,V_lastCoalesed
multiplier
T@"NSMutableDictionary",&,N,V_multiplier
Ti,N,V_eventsCoalesced
taskCount
Ti,N,V_taskCount
appPredictionCount
Ti,N,V_appPredictionCount
Ti,N,V_droppedCount
activities
T@"NSMutableArray",&,N,V_activities
T@"NSMutableDictionary",&,N,V_predictions
appPredictions
T@"NSMutableDictionary",&,N,V_appPredictions
_DASCoreDataStore.mocQueue
_DASCoreDataStore.queuePSC
%@/%@
%@%@.db
ClassA
ClassC
ClassD
v12@?0@"NSString"4c8
Missing model URL!
%@ : did not exist and could not be created: %@
Failed to load Managed Object Model from %@
Failed to add persistent store: %@
paths
T@"NSDictionary",R,N,V_paths
managedObjectModel
T@"NSManagedObjectModel",&,N,V_managedObjectModel
managedObjectContexts
T@"NSMutableDictionary",R,N,V_managedObjectContexts
persistentStoreCoordinators
T@"NSMutableDictionary",R,N,V_persistentStoreCoordinators
mocQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_mocQueue
pscQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_pscQueue
dataProtectionMonitor
T@"_DASDataProtectionStateMonitor",R,N,V_dataProtectionMonitor
databaseDirectory
T@"NSString",R,C,N,V_databaseDirectory
databaseName
T@"NSString",R,C,N,V_databaseName
modelURL
T@"NSURL",R,N,V_modelURL
readOnly
Tc,R,N,V_readOnly
DuetActivityScheduler
momd
database
T@"_DASCoreDataStorage",&,N,V_database
[%@]: Required:%3.2f, Observed:%3.2f
condition
T@"NSString",&,N,V_condition
currentValue
Td,N,V_currentValue
requiredValue
Td,N,V_requiredValue
reasons:[
{%@}
,condition:{%@}
T@"NSPredicate",&,N,V_condition
reasons
T@"NSMutableArray",&,N,V_reasons
Can Proceed
Must Not Proceed
Must Proceed
Absolutely Must Not Proceed
Unknown Decision (Proceed)
{Decision: %s, Score:%lf, Rationale:%@}
policyDecision
Ti,N,V_policyDecision
validityDuration
Td,N,V_validityDuration
rationale
T@"_DASPolicyResponseRationale",&,N,V_rationale
score
Td,R,N,V_score
path
networkPathEvaluators
T@"NSMutableDictionary",&,N,V_networkPathEvaluators
evaluatorsBeingObserved
T@"NSMutableSet",&,N,V_evaluatorsBeingObserved
callback
T@?,C,N,V_callback
CarplayConnectedPolicy
com.apple.duetactivityscheduler.carplaypolicy.carplayconnected
carplayConnected = %@
PowerNapPolicy
inADarkWake == %@
darkWakeEligible == %@
appRefresh == %@
runSinceLastWake == YES
ChargerPluggedInPolicy
com.apple.duetactivityscheduler.pluggedinpolicy.watchispluggedin
/watch/isPluggedIn
plugin
powerPluggedInPrediction
%@ == %@
isPluggedInKeyPath
T@"_CDContextualKeyPath",&,N,V_isPluggedInKeyPath
watchIsPluggedInKeyPath
T@"_CDContextualKeyPath",&,N,V_watchIsPluggedInKeyPath
pluginTimeline
T@"_DKPredictionTimeline",&,V_pluginTimeline
com.apple.dasbatchingqueue.executionqueue.%s
com.apple.dasbatchingqueue.syncqueue.%s
maxDelay
Td,N,V_maxDelay
maxQueueDepth
TI,N,V_maxQueueDepth
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
workHandler
T@?,C,N,V_workHandler
workItems
T@"NSMutableArray",&,N,V_workItems
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
default
{name: %@, 
response: N/A}
policyWeight: %2.3lf, response: %@}
date
T@"NSDate",R,&,N,V_date
MemoryPressurePolicy
kern.memorystatus_vm_pressure_level
memoryPressure
T@"NSString",&,D,N
T@"NSSet",&,D,N
ApplicationPolicy
application.topN
application.%@
%@.likelihood == %@
timelines
T@"NSMutableDictionary",&,N,V_timelines
topNPrediction
T@"_DKPredictionTimeline",&,N,V_topNPrediction
lastApplicationTimelineUpdate
T@"NSMutableDictionary",&,N,V_lastApplicationTimelineUpdate
NetworkQualityPolicy
com.apple.duetactivityscheduler.nwquality.wired
com.apple.duetactivityscheduler.nwquality.wifi
com.apple.duetactivityscheduler.nwquality.cell
com.apple.duetactivityscheduler.nwquality.radiohot
com.apple.duetactivityscheduler.wifiqualityprediction
wifiPredictions
wiFiAssociatedPrediction
com.apple.duetactivityscheduler.cellqualityprediction
cellPredictions
cellQualityPrediction
/system/wired/quality
/system/cell/active
wifiQuality
cellQuality
networkPathAvailability
T@"_CDContextualKeyPath",&,N,V_wifiQuality
networkEvaluator
T@"_DASNetworkEvaluationMonitor",&,N,V_networkEvaluator
userContext
T@"<_CDContext>",&,N,V_userContext
wifiPredictionTimeline
T@"_DKPredictionTimeline",&,V_wifiPredictionTimeline
wiredQuality
T@"_CDContextualKeyPath",&,N,V_wiredQuality
T@"_CDContextualKeyPath",&,N,V_cellQuality
cellRadioHot
T@"_CDContextualKeyPath",&,N,V_cellRadioHot
cellPredictionTimeline
T@"_DKPredictionTimeline",&,V_cellPredictionTimeline
Activity
name == %@
TRUEPREDICATE
submitDate > %@ AND submitDate < %@
currentState == %d
requestsApplicationLaunch == %d
currentState <= %@ AND startBefore <= %@
ThermalPolicy
com.apple.duetactivityscheduler.thermalpolicypolicy.thermalpressurechange
com.apple.duetactivityscheduler.thermalpolicypolicy.coldpressurechange
com.apple.duetactivityscheduler.thermalpolicypolicy.watchthermalpressurechange
/system/coldThermalPressure
/watch/thermalpressure
coldTemperature == %@
thermalLevel >= %ld
watchThermalLevel >= %ld
thermalPressureLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_thermalPressureLevelKeyPath
watchThermalPressureLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_watchThermalPressureLevelKeyPath
thermalPressureColdKeyPath
T@"_CDContextualKeyPath",&,N,V_thermalPressureColdKeyPath
EnergyBudgetPolicy
com.apple.duetactivityscheduler.energybudgetpolicy.status
energyBudget
pluginStatus
com.apple.FitnessFriends.PeriodicUpdateActivity
CallInProgressPolicy
com.apple.duetactivityscheduler.callinprogresspolicy.callinprogress
callInProgress = %@
com.apple.mobileslideshow
/app/photos/significantWork
PhotosPolicy
com.apple.dueatctivityscheduler.photospolicy.photoswork
significantWorkRemaining == 1 && pluggedIn == 0
significantRemainingPhotosWorkKeyPath
T@"_CDContextualKeyPath",&,N,V_significantRemainingPhotosWorkKeyPath
WatchBackgroundBudgetPolicy
com.apple.duetactivityscheduler.backgroundbudget.snapshot
com.apple.duetactivityscheduler.backgroundbudget.launch
/watch/budget/snapshots
/watch/budget/launches
budgetKey == nil
budgetValue
snapshotBudgetKeyPath
T@"_CDContextualKeyPath",&,N,V_snapshotBudgetKeyPath
launchBudgetKeyPath
T@"_CDContextualKeyPath",&,N,V_launchBudgetKeyPath
com.apple.networkd.configure_connection_pool
c12@?0@"_DASActivity"4^c8
daemon
T@"_DASDaemon",&,N,V_daemon
connection
T@"NSXPCConnection",&,N,V_connection
submittedTasks
T@"NSMutableSet",&,N,V_submittedTasks
startedTasks
T@"NSMutableSet",&,N,V_startedTasks
DataBudgetPolicy
com.apple.duetactivityscheduler.databudgetpolicy.status
dataBudget
com.apple.DuetActivityScheduler.DataProtection.state
com.apple.DuetActivityScheduler.DataProtection.notify
com.apple.mobile.keybagd.lock_status
PasswordProtected
stateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_stateQueue
deviceFormatedForContentProtection
Tc,R,N,V_deviceFormatedForContentProtection
handlers
T@"NSMutableDictionary",R,N,V_handlers
availableState
T@"NSMutableDictionary",R,N,V_availableState
notifyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notifyQueue
notifyToken
Ti,R,N,V_notifyToken
notifyEnabled
Tc,R,N,V_notifyEnabled
master
T@"_DASDataProtectionMaster",R,N,V_master
handlerUUID
T@"NSUUID",R,N,V_handlerUUID
changeHandler
T@?,C,N,V_changeHandler
Trigger
identifier == %@
BatteryLevelPolicy
com.apple.duetactivityscheduler.batterylevelpolicy.batterylevelchange
com.apple.duetactivityscheduler.batterylevelpolicy.watchbatterylevelchange
/watch/batteryPercentage
batteryLevel == %ld
lowPowerModeEnabled == %@
watchBatteryLevel == %ld
batteryLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_batteryLevelKeyPath
watchBatteryLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_watchBatteryLevelKeyPath
watchPluginStatusKeyPath
T@"_CDContextualKeyPath",&,N,V_watchPluginStatusKeyPath
com.apple.das.startup
com.apple.das.submitcount.all
com.apple.das.submitcount.network
com.apple.das.submitcount.launch
com.apple.das.triggercount
com.apple.das.suspensioncount
com.apple.das.preemptioncount.intensive
com.apple.das.preemptioncount.network
com.apple.dasscheduler.metricqueue
ActivityGroupPolicy
%@.currentAvailableLimit == %ld
com.apple.duetactivityscheduler.predictionGenerationQueue
periodStart
periodEnd
maxConcurrent
TQ,D,N
name
Group
beforeFirstActivityOfDay
Tc,D,N
beforeUserIsActive
budgeted
bundleID
cancelAfterDeadline
completedDate
T@"NSDate",&,D,N
cpuIntensive
currentState
Ti,D,N
diskIntensive
groupName
isUpload
launchReason
memoryIntensive
predictedOptimalScore
Td,D,N
predictedOptimalStartDate
relatedApplications
T@"NSData",&,D,N
relevancy
Tq,D,N
requestsApplicationLaunch
requiresNetwork
schedulerRecommendedApplications
schedulingPriority
Ts,D,N
startAfter
startBefore
startDate
submitDate
supportsAnyApplication
suspendable
targetDevice
transferSize
triggersRestart
userInfo
group
T@"_DASGroupManagedObject",&,D,N
RestartRequiredActivitiesPolicy
com.apple.duetactivityscheduler.restartpolicy.assertionsheld
com.apple.duetactivityscheduler.restartpolicy.inusestatus
com.apple.duetactivityscheduler.restartpolicy.wakerequest
com.apple.softwareupdate.autoinstall.startInstall
DeviceRestartPeriodNotInRange == 1
Is any Assertion Held?
Is User active?
Minimum seconds without any scheduled wake
Minumum seconds since user was last active
deviceAssertionsHeld
T@"_CDContextualKeyPath",&,N,V_deviceAssertionsHeld
nextWakeRequest
T@"_CDContextualKeyPath",&,N,V_nextWakeRequest
lastCacheDate
T@"NSDate",&,V_lastCacheDate
deviceRestartPeriod1
T@"_CDDateRange",&,N,V_deviceRestartPeriod1
deviceRestartPeriod2
T@"_CDDateRange",&,N,V_deviceRestartPeriod2
minDurationAfterLastUserInteraction
Td,N,V_minDurationAfterLastUserInteraction
minDurationBeforeNextScheduledWake
Td,N,V_minDurationBeforeNextScheduledWake
predicateForChangeAtKeyPath:
numberWithUnsignedInteger:
numberWithBool:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
init
ephemeralKeyPathWithKey:
initializeTriggers
class
alloc
isEqualToString:
objectForKeyedSubscript:
boolValue
policyResponseWithDecision:validityDuration:rationale:
isIntensive
requiresDeviceInactivity
initWithPolicyName:
predicateWithFormat:
addRationaleWithCondition:
schedulingPriority
startBefore
timeIntervalSinceNow
policyResponseWithScore:validityDuration:rationale:
policyInstance
appliesToActivity:
weightForActivity:
responseForActivity:withState:
indicatesDeterioratingConditionsForTrigger:withState:
baselineScoreForActivity:
shouldLogScoreToPowerLog
policyName
triggers
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
setPolicyName:
setTriggers:
inCarKeyPath
setInCarKeyPath:
navigationKeyPath
setNavigationKeyPath:
_policyName
_triggers
_inCarKeyPath
_navigationKeyPath
initAsAnonymous:withContext:
array
dictionary
handleTriggers:
queueWithName:maxBatchingDelay:maxQueueDepth:queue:workItemsHandler:
handleCompletedActivities:
userContext
defaultCategory
sharedInstance
sharedMonitorWithDaemon:
registerForNetworkPathEvaluation
allPoliciesForPlatform
registerTriggersWithContextStoreForPolicies:
setupTimers
storageWithDirectory:readOnly:
anonymousListener
initWithMachServiceName:
setDelegate:
loadLastSavedState
solicitActivityResubmission
incrementOccurrencesForKey:byCount:
UTF8String
periodicCalculationForOptimal
scheduleTimerBetween:and:waking:
setupDatabaseMaintenance
keyPathForPluginStatus
invalidate
wakeTimerFired:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
date
dateByAddingTimeInterval:
setMinimumEarlyFireProportion:
setDisableSystemWaking:
scheduleInQueue:
currentLocale
descriptionWithLocale:
deleteOldActivities
deleteActivitiesIfRequired
loadPendingLaunchTasks:
loadAllGroups:
countByEnumeratingWithState:objects:count:
name
setObject:forKeyedSubscript:
allObjects
submitActivities:
maxConcurrent
copy
containsObject:
count
candidateGroupActivityForPreemption:
suspendRequested
setSuspendRequested:
suspendActivities:
relatedApplications
firstObject
_DAS_addOrReplaceObject:
removeObject:
removeObjectForKey:
resume
submittedTasks
allKeys
stringWithFormat:
valueForEntitlement:
clientForDaemon:withConnection:
addObject:
logForCategory:
runActivities:
allClientsDo:
removeActivityFromTriggerMapWithName:
setWithArray:
enumerateKeysAndObjectsUsingBlock:
handleNoLongerRunningActivity:
timeIntervalSinceDate:
objectAtIndex:
setStartDate:
runActivityArray:
timewiseEligibleAtDate:
scoreForActivity:withState:response:
compatibilityWith:
setWithObject:
shouldPreemptTask:withStartDate:atDate:
thresholdScoreForActivity:
bypassesPredictions
policyScores
setPolicyScores:
numberWithDouble:
setObject:forKey:
shouldRunActivityNow:withOtherActivites:
groupName
addRunningActivity:toGroupWithName:
requiresNetworkPathMonitoring:
stopMonitoringActivity:
requestsApplicationLaunch
runApplicationLaunchActivities:
hasManyConstraints
setDateStyle:
setTimeStyle:
compare:
integerValue
numberWithInteger:
objectForKey:
stringFromDate:
addTriggersToActivity:
saveActivity:
addLaunchRequest:
startAfter
setStartAfter:
addPendingActivity:toGroupWithName:
computeOptimalScoreAndDateForActivity:
userInfo
startMonitoringActivity:withNetworkParameters:withEndpoint:
shouldEvaluateTask:atDate:
shouldRunActivityNow:
beginWorkForActivity:
triggersRestart
scheduleSystemWakeAt:forActivity:withLeeway:
predictedOptimalStartDate
startDate
shortDescription
tasksNoLongerEligible
arrayWithObject:
addPendingActivitiesToGroups:
saveActivities:
evaluateScoreAndRunActivities:
removeActivityFromTriggerMap:
removeLaunchRequest:
recordActivity:
deleteActivity:
inADarkWake
recordNoLongerRunningActivity:
addWorkItem:
handleRescindedActivity:
_DAS_addOrReplaceObjectsFromArray:
saveGroup:
submitActivity:
createActivityGroup:
setGroupName:
sortUsingComparator:
arrayWithArray:
startedTasks
allValues
addObjectsFromArray:
getActivityWithName:
currentPredictions
registerForNetworkEvaluationWithCallback:
stringByReplacingOccurrencesOfString:withString:
fileProtection
complete
unionSet:
keyPathForCallInProgressStatus
determineNextTimerFireDateAndSchedule
keyPaths
registrationWithIdentifier:contextualPredicate:dismissalPolicy:deviceSet:mustWake:callback:
registerCallback:
mutableCopy
unsignedIntegerValue
registerWithContextStoreForId:contextualPredicate:dismissalCondition:deviceSet:mustWake:
dictionaryWithDictionary:
associateActivity:withTriggerKeys:
evaluateScoreAndRunAllActivitiesForReason:
stringWithUTF8String:
darkWakeEligible
lastScored
chooseActivitiesToRunFromCandidateActivities:toBeRunActivities:toLaunchApplications:
duration
distantPast
suspendable
listener:shouldAcceptNewConnection:
submitActivity:inGroup:
submitActivity:inGroupWithName:
handleEligibleActivities:
activityCompleted:
activityCanceled:
activityStarted:
submittedActivitiesWithHandler:
runningActivitiesWithHandler:
runningGroupActivitiesWithHandler:
scoresForActivityWithName:withHandler:
activityRunStatisticsWithHandler:
forceRunActivities:
startedActivities:
currentPredictionsWithHandler:
cancelActivities:
additionalCapacityForActivity:inGroupWithName:shouldTryToSuspend:
requestCountForApplication:
start
submittedTaskCount
removeClient:
clearRecentlyLaunchedApps
handleRunningActivities:
activityRunStatistics
evaluateScoreAndRunActivitesForTrigger:
clients
setClients:
startedTasksToStartTime
setStartedTasksToStartTime:
triggerToPolicyMap
setTriggerToPolicyMap:
activityToTriggersMap
setActivityToTriggersMap:
triggerToActivitiesMap
setTriggerToActivitiesMap:
activityToIncompatibleActivitiesMap
setActivityToIncompatibleActivitiesMap:
groups
setGroups:
groupToPendingTasks
setGroupToPendingTasks:
groupToRunningTasks
setGroupToRunningTasks:
applicationLaunchRequests
setApplicationLaunchRequests:
context
setContext:
listener
setListener:
timerSchedulingQueue
setTimerSchedulingQueue:
wakeTimer
setWakeTimer:
timerEarliestFireDate
setTimerEarliestFireDate:
timerLatestFireDate
setTimerLatestFireDate:
networkEvaluationMonitor
setNetworkEvaluationMonitor:
sleepWakeMonitor
setSleepWakeMonitor:
store
setStore:
optimalScoringTimer
setOptimalScoringTimer:
databaseMaintenanceTimer
setDatabaseMaintenanceTimer:
evaluationQueue
setEvaluationQueue:
triggerBatchingQueue
setTriggerBatchingQueue:
activityCompletedBatchingQueue
setActivityCompletedBatchingQueue:
recentlyLaunchedApps
setRecentlyLaunchedApps:
_clients
_startedTasksToStartTime
_triggerToPolicyMap
_activityToTriggersMap
_triggerToActivitiesMap
_activityToIncompatibleActivitiesMap
_groups
_groupToPendingTasks
_groupToRunningTasks
_applicationLaunchRequests
_context
_listener
_timerSchedulingQueue
_wakeTimer
_timerEarliestFireDate
_timerLatestFireDate
_networkEvaluationMonitor
_sleepWakeMonitor
_store
_optimalScoringTimer
_databaseMaintenanceTimer
_evaluationQueue
_triggerBatchingQueue
_activityCompletedBatchingQueue
_recentlyLaunchedApps
keyPathForWatchNearbyStatus
sharedPredictor
predictionForDeviceNearby
predicateForEventsWithStartInDateRangeFrom:to:
predicateForEventsWithIntegerValue:
andPredicateWithSubpredicates:
predictionForStreamWithName:withPredicate:withPredictionType:
targetDevice
predictionGenerationQueue
deviceNearbyTimeline
predictionNeedsUpdating:atDate:lastUpdatedAt:
setDeviceNearbyTimeline:
valueAtDate:
doubleValue
scoreForActivity:atDate:
predictedScoreForActivity:atDate:
predictor
setPredictor:
lastPredictionTimelineUpdate
setLastPredictionTimelineUpdate:
_predictor
_deviceNearbyTimeline
_lastPredictionTimelineUpdate
keyPathWithKey:
indicatesProtection
completeUntilFirstUserAuthentication
isClassCLocked
setIsClassCLocked:
passwordConfigured
setPasswordConfigured:
classCLockedToken
setClassCLockedToken:
handleUnlockQueue
setHandleUnlockQueue:
_isClassCLocked
_passwordConfigured
_classCLockedToken
_handleUnlockQueue
deviceActivityLikelihood
setPrediction:forKey:
recordPrediction:key:valueMultiplier:
keyPathForInUseStatus
initWithSuiteName:
boolForKey:
lowLikelihoodPeriodStartForPredictionWithKey:
lowLikelihoodPeriodEndForPredictionWithKey:
deviceActivityTimeline
setDeviceActivityTimeline:
unsignedIntValue
printLowLikelihoodRegions
inUseStatus
setInUseStatus:
considerAlwaysActive
setConsiderAlwaysActive:
_considerAlwaysActive
_deviceActivityTimeline
_inUseStatus
logActivities
logPredictions
numberWithInt:
removeAllObjects
getValuesFromTimeline:valueMultiplier:
requiresNetwork
shouldLogPrediction:
shouldLogActivity:
createRecordFromActivity:
didCoaleseWithPrevious:
dateWithTimeIntervalSinceNow:
getValuesForPrediction:tillEndDate:withIntervals:
objectAtIndexedSubscript:
intValue
numberFromDouble:
setObject:atIndexedSubscript:
shouldLogAppPrediction:
predictedOptimalScore
requiresPlugin
requiresInexpensiveNetworking
transferSize
cpuIntensive
memoryIntensive
recordAppPrediction:app:
shortPeriodTimer
setShortPeriodTimer:
longPeriodTimer
setLongPeriodTimer:
syncQueue
setSyncQueue:
lastCoalesed
setLastCoalesed:
multiplier
setMultiplier:
eventsCoalesced
setEventsCoalesced:
taskCount
setTaskCount:
appPredictionCount
setAppPredictionCount:
droppedCount
setDroppedCount:
activities
setActivities:
predictions
setPredictions:
appPredictions
setAppPredictions:
_shortPeriodTimer
_longPeriodTimer
_syncQueue
_lastCoalesed
_multiplier
_eventsCoalesced
_taskCount
_appPredictionCount
_droppedCount
_activities
_predictions
_appPredictions
initWithDirectory:databaseName:modelURL:readOnly:
dataProtectionClassA
dataProtectionClassC
dataProtectionClassD
handleDataProtectionChangeFor:willBeAvailable:
setChangeHandler:
invalidateManagedObjectContextFor:
invalidatePersistentStoreCoordinatorFor:
reset
performWithOptions:andBlock:
persistentStores
removePersistentStore:error:
initWithContentsOfURL:
isDataAvailableFor:
createDatabaseDirectory:error:
code
managedObjectModel
fileURLWithPath:
persistentStoreOptionsFor:readOnly:
metadataForPersistentStoreOfType:URL:options:error:
isConfiguration:compatibleWithStoreMetadata:
initWithManagedObjectModel:
destroyPersistentStoreAtURL:withType:options:error:
addPersistentStoreWithType:configuration:URL:options:error:
handleDatabaseErrors:forPSC:protectionClass:
persistentStoreCoordinatorFor:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setMergePolicy:
setUndoManager:
_destroyPersistentStoreAtURL:withType:options:error:
mocForProtectionClass:
deleteDatabaseForPSC:protectionClass:obliterate:
defaultManager
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
storageWithDirectory:databaseName:modelURL:readOnly:
deleteStorageFor:obliterate:
databaseDirectory
databaseName
modelURL
readOnly
paths
setManagedObjectModel:
managedObjectContexts
persistentStoreCoordinators
mocQueue
pscQueue
dataProtectionMonitor
_readOnly
_databaseDirectory
_databaseName
_modelURL
_paths
_managedObjectModel
_managedObjectContexts
_persistentStoreCoordinators
_mocQueue
_pscQueue
_dataProtectionMonitor
initWithDirectory:readOnly:
bundleForClass:
pathForResource:ofType:
hasChanges
save:
createOrUpdateActivity:context:
fetchOrCreateTrigger:managedObjectContext:
addActivitiesObject:
createOrUpdateGroup:context:
mocSaveAndReset:
createMOInMOC:activity:group:triggers:
addActivities:
createMOInMOC:group:activities:
fetchAllActivities:
getActivityFromManagedObject:
updateActivityStarted:
predicateForPendingActivities
predicateForLaunchActivities
fetchActivitiesUsingPredicate:context:
predicateForStartedActivities
fetchAllGroups:
getGroupFromManagedObject:
updateActivityStarted:context:
updateActivityCompleted:context:
updateActivityCanceled:context:
deleteActivity:context:
deleteOldActivities:
deleteActivitiesIfRequired:
saveActivity:triggers:
saveActivities:groups:triggersArray:
saveGroup:activity:
saveGroups:activitiesArray:
loadAllTasks:startedTasks:
saveActivity:group:triggers:hasStarted:
loadStartedTasks:
updateActivityCompleted:
updateActivityCanceled:
deleteStorageWithObliterationOption:
database
setDatabase:
_database
predicateWithFormat:arguments:
arrayWithCapacity:
criterionWithFormat:
criterionWithPredicate:
policyCriteriaWithPredicates:
initWithCondition:withRequiredValue:withCurrentValue:
condition
setCondition:
currentValue
setCurrentValue:
requiredValue
setRequiredValue:
_condition
_currentValue
_requiredValue
string
appendFormat:
appendString:
addRationaleForCondition:withRequiredValue:withCurrentValue:
reasons
setReasons:
_reasons
prettyDecisionDescription:
initWithScore:decision:validityDuration:rationale:
score
policyDecision
setPolicyDecision:
validityDuration
setValidityDuration:
rationale
setRationale:
_policyDecision
_rationale
_score
_validityDuration
initWithEndpoint:parameters:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
status
path
observeValueForKeyPath:ofObject:change:context:
isNetworkPathAvailableForActivity:
networkPathEvaluators
setNetworkPathEvaluators:
evaluatorsBeingObserved
setEvaluatorsBeingObserved:
callback
setCallback:
_networkPathEvaluators
_evaluatorsBeingObserved
_callback
keyPathForCarplayConnectedStatus
managedObjectContext
deleteObject:
willSave
beforeDaysFirstActivity
canRunInCurrentWakeState:
hasFinishedRunningSinceLastWake:
pluginLikelihood
scoreForActivity:isPluggedIn:
pluginTimeline
setPluginTimeline:
isPluggedInKeyPath
setIsPluggedInKeyPath:
watchIsPluggedInKeyPath
setWatchIsPluggedInKeyPath:
_isPluggedInKeyPath
_watchIsPluggedInKeyPath
_pluginTimeline
initializeAllPolicies
allPredictingPoliciesForPlatform
unprotectedExecuteWorkItems
initWithName:maxBatchingDelay:maxQueueDepth:queue:workItemsHandler:
maxDelay
setMaxDelay:
maxQueueDepth
setMaxQueueDepth:
executionQueue
setExecutionQueue:
workHandler
setWorkHandler:
workItems
setWorkItems:
timer
setTimer:
_maxQueueDepth
_executionQueue
_workHandler
_workItems
_timer
_maxDelay
setBypassesPredictions:
getResponseStringForPolicy:response:appliesToActivity:weightForActivity:
setLastScored:
setLastComputedScore:
localTimeZone
setTimeZone:
determineIfActivityBypassesPredictions:
setPredictedOptimalStartDate:
setPredictedOptimalScore:
dateWithTimeInterval:sinceDate:
getTimeSlotForActivity:
getScoreForTimeSlot:activityPriority:activityScore:
relaxationFactorForTimeSlot:activityPriority:
preOptimalRelaxationFactor:
_date
memoryPressureLevelWithContext:
launchLikelihoodForTopNApplications:withLikelihoodGreaterThan:withTemporalResolution:
topNPrediction
supportsAnyApplication
setTopNPrediction:
setSchedulerRecommendedApplications:
scoreForAnyAppActivity:atDate:
launchLikelihoodPredictionForApp:
scoreForActivity:atDate:withRationale:
timelines
setTimelines:
lastApplicationTimelineUpdate
setLastApplicationTimelineUpdate:
_timelines
_topNPrediction
_lastApplicationTimelineUpdate
keyPathForWiFiQualityPrediction
setWifiPredictionTimeline:
wifiPredictionTimeline
localWakingRegistrationWithIdentifier:contextualPredicate:callback:
keyPathForCellQualityPrediction
setCellPredictionTimeline:
cellPredictionTimeline
keyPathForWiFiConnectionQuality
keyPathForCellConnectionQuality
registerForPredictionChanges
minimumQualityForActivity:interface:
scoreForActivity:networkQuality:interface:pluginStatus:radioHot:
predictionForKey:
wifiQuality
setWifiQuality:
networkEvaluator
setNetworkEvaluator:
setUserContext:
wiredQuality
setWiredQuality:
cellQuality
setCellQuality:
cellRadioHot
setCellRadioHot:
_wifiQuality
_networkEvaluator
_userContext
_wifiPredictionTimeline
_wiredQuality
_cellQuality
_cellRadioHot
_cellPredictionTimeline
predicateForActivityWithName:
submitDate
predicateForActivityWithSubmitDate:
entityName
insertNewObjectForEntityForName:inManagedObjectContext:
entityForName:inManagedObjectContext:
setEntity:
predicateForUniqueRecord:
setPredicate:
executeFetchRequest:error:
lastObject
createNewActivity:
copyActivity:toManagedObject:
setFetchBatchSize:
setFetchLimit:
setName:
setStartBefore:
setSubmitDate:
setSchedulingPriority:
setSuspendable:
setTargetDevice:
cancelAfterDeadline
setCancelAfterDeadline:
setDuration:
setTransferSize:
setTriggersRestart:
setRequiresPlugin:
setRequiresNetwork:
setRequiresDeviceInactivity:
setRequiresInexpensiveNetworking:
setRequestsApplicationLaunch:
setSupportsAnyApplication:
setCpuIntensive:
diskIntensive
setDiskIntensive:
setMemoryIntensive:
beforeUserIsActive
setBeforeUserIsActive:
bundleID
setBundleId:
isUpload
setIsUpload:
budgeted
setBudgeted:
relevancy
setRelevancy:
launchReason
setLaunchReason:
unarchiveObjectWithData:
setRelatedApplications:
schedulerRecommendedApplications
setUserInfo:
bundleId
setBundleID:
setCurrentState:
archivedDataWithRootObject:
fetchActivity:context:
setCompletedDate:
updateActivity:value:context:
initWithFetchRequest:
executeRequest:error:
deleteActivites:moc:
countForFetchRequest:error:
keyPathForThermalPressureLevel
isTooColdWithContext:
maxAllowableThermalPressureForActivity:
getScoreForThermalLevel:
thermalPressureLevelKeyPath
setThermalPressureLevelKeyPath:
watchThermalPressureLevelKeyPath
setWatchThermalPressureLevelKeyPath:
thermalPressureColdKeyPath
setThermalPressureColdKeyPath:
_thermalPressureLevelKeyPath
_watchThermalPressureLevelKeyPath
_thermalPressureColdKeyPath
keyPathForEnergyBudgetRemainingStatus
budgetIsPositive:
haveSignificantWorkRemaining:
significantRemainingPhotosWorkKeyPath
setSignificantRemainingPhotosWorkKeyPath:
_significantRemainingPhotosWorkKeyPath
snapshotBudgetKeyPath
setSnapshotBudgetKeyPath:
launchBudgetKeyPath
setLaunchBudgetKeyPath:
_snapshotBudgetKeyPath
_launchBudgetKeyPath
interfaceWithProtocol:
setRemoteObjectInterface:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
handleClientInterruption
setInvalidationHandler:
initWithDaemon:withConnection:
objectsPassingTest:
cancelAllActivities
daemon
unlockedActivitiesWithNames:inSet:
minusSet:
activityNamesFromActivities:
remoteObjectProxy
dealloc
submitActivityInternal:
submitActivitiesInternal:
_DAS_unionSetOverridingExisting:
removeKnownActivitiesFromSet:
connection
setConnection:
setSubmittedTasks:
setStartedTasks:
setDaemon:
_connection
_submittedTasks
_startedTasks
_daemon
keyPathForNetworkingBudgetRemainingStatus
keyPathForWiredConnectionQuality
isDataAvailableForClassA
isDataAvailableForClassC
handleKeyBagLockNotification
deviceHasBeenUnlockedSinceBoot
deviceIsPasswordConfigured
deviceIsLocked
UUID
registerStateChangeHandler:
deregisterStateChangeHandler:
stateQueue
deviceFormatedForContentProtection
handlers
availableState
notifyQueue
notifyToken
notifyEnabled
_deviceFormatedForContentProtection
_notifyEnabled
_stateQueue
_handlers
_availableState
_notifyQueue
_notifyToken
changeHandler
master
handlerUUID
_changeHandler
_master
_handlerUUID
copyTrigger:toManagedObject:
createTrigger:managedObjectContext:
setIdentifier:
keyPathForBatteryLevel
processInfo
isLowPowerModeEnabled
getScoreForActivity:forBatteryLevel:isPluggedIn:isLowPowerModeEnabled:
batteryLevelKeyPath
setBatteryLevelKeyPath:
watchBatteryLevelKeyPath
setWatchBatteryLevelKeyPath:
watchPluginStatusKeyPath
setWatchPluginStatusKeyPath:
_batteryLevelKeyPath
_watchBatteryLevelKeyPath
_watchPluginStatusKeyPath
metricQueue
recordOccurrenceForKey:
updateAverageForKey:withNumerator:withDenominator:
recordPredictionAccuracyForActivityLevel:atDate:
knowledgeStore
predictorWithKnowledgeStore:
endDate
transitionDates
cacheDetailsForPredictionWithKey:
initialize
groupWithName:maxConcurrent:
setMaxConcurrent:
createGroup:
copyGroup:toManagedObject:
fetchGroupsUsingPredicate:context:
predicateForName:
keyPathForDeviceAssertionsHeldStatus
keyPathForNextUserVisibleWakeDate
getDeviceRestartForecast
periodWithStart:end:
currentCalendar
components:fromDate:
setHour:
setMinute:
setSecond:
dateFromComponents:
lastCacheDate
getUnlockAndSoftwareUpdateTimes
cacheSleepPeriod:end:period1:period2:
setLastCacheDate:
contains:
keyPathForLastUseDate
defaultDeviceRestartDateRangeWithDate:
deviceAssertionsHeld
setDeviceAssertionsHeld:
nextWakeRequest
setNextWakeRequest:
deviceRestartPeriod1
setDeviceRestartPeriod1:
deviceRestartPeriod2
setDeviceRestartPeriod2:
minDurationAfterLastUserInteraction
setMinDurationAfterLastUserInteraction:
minDurationBeforeNextScheduledWake
setMinDurationBeforeNextScheduledWake:
_deviceAssertionsHeld
_nextWakeRequest
_lastCacheDate
_deviceRestartPeriod1
_deviceRestartPeriod2
_minDurationAfterLastUserInteraction
_minDurationBeforeNextScheduledWake
_DASInCarPolicy
_DASActivityPolicy
NSObject
_DASDaemon
NSXPCListenerDelegate
_DASActivitySchedulerClient
_DASActivityGroupSchedulingAndIntrospecting
_DASActivityGroupScheduler
_DASActivityScheduler
_DASActivitySchedulerIntrospectingServer
_DASDefaultPairedPolicy
_DASActivityPolicyPredicting
_DASFileProtectionPolicy
_DASDeviceActivityPolicy
_DASPLLogger
_DASCoreDataStorage
_DASCoreDataStore
_DASDataStore
_DASPolicyCriterion
_DASPolicyRequiredValueRationale
_DASPolicyResponseRationale
_DASPolicyResponse
_DASNetworkEvaluationMonitor
_DASCarPlayPolicy
_DASActivityManagedObject
_DASGroupManagedObject
_DASPowerNapPolicy
_DASRequiresPluggedInPolicy
_DASPolicyManager
_DASBatchingQueue
_DASDaemonLogger
_DASConditionScore
_DASMemoryPressurePolicy
CoreDataProperties
_DASApplicationPolicy
_DASTriggerManagedObject
_DASNetworkQualityPolicy
_DASActivityRecorder
_DASThermalPolicy
_DASEnergyBudgetPolicy
_DASSleepWakeMonitor
_DASCallInProgressPolicy
_DASPhotosPolicy
_DASWatchBackgroundBudgetPolicy
_DASDaemonClient
_DASDataBudgetPolicy
_DASDataProtectionMaster
_DASDataProtectionStateMonitor
_DASTriggerRecord
_DASBatteryLevelPolicy
_DASMetricRecorder
_DASGroupSchedulingPolicy
_DASPredictionManager
_DASGroupRecorder
_DASRequiresRestartPolicy
@8@0:4
c12@0:4@8
c12@0:4@"_DASActivity"8
d12@0:4@8
d12@0:4@"_DASActivity"8
@16@0:4@8@12
@"_DASPolicyResponse"16@0:4@"_DASActivity"8@"<_CDContext>"12
c16@0:4@8@12
c16@0:4@"NSString"8@"<_CDContext>"12
c8@0:4
@"NSString"8@0:4
@"NSArray"8@0:4
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
c12@0:4#8
c12@0:4@"Protocol"8
c12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
v8@0:4
v12@0:4@8
@"NSString"
@"NSArray"
@"_CDContextualKeyPath"
c16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v12@0:4@"NSArray"8
v12@0:4@"_DASActivityGroup"8
v16@0:4@8@12
v16@0:4@"_DASActivity"8@"_DASActivityGroup"12
v16@0:4@"_DASActivity"8@"NSString"12
v12@0:4@?8
v12@0:4@?<v@?@"NSArray">8
v12@0:4@"_DASActivity"8
v16@0:4@8@?12
v16@0:4@"NSString"8@?<v@?@"NSArray">12
v12@0:4@?<v@?@"NSDictionary">8
@16@0:4c8@12
v28@0:4d8d16c24
i20@0:4@8@12c16
I12@0:4@8
@12@0:4@8
v20@0:4@8@12i16
v28@0:4@8@12@16I20c24
v20@0:4@8@12@16
c20@0:4@8@12@16
@"NSMutableArray"
@"NSMutableDictionary"
@"NSDictionary"
@"<_CDLocalContext>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"PCPersistentTimer"
@"NSDate"
@"_DASNetworkEvaluationMonitor"
@"_DASSleepWakeMonitor"
@"<_DASDataStore>"
@"NSObject<OS_dispatch_source>"
@"_DASBatchingQueue"
d16@0:4@8@12
d16@0:4@"_DASActivity"8@"NSDate"12
@"_DKPredictor"
@"_DKPredictionTimeline"
v12@0:4c8
i8@0:4
v12@0:4i8
@16@0:4d8
@24@0:4@8@12@16c20
@16@0:4@8c12
c16@0:4@8^@12
v16@0:4@8c12
c20@0:4@8@12c16
c16@0:4@8c12
@"NSURL"
@"NSManagedObjectModel"
@"_DASDataProtectionStateMonitor"
v12@0:4@"NSMutableSet"8
v24@0:4@8@12@16@20
v24@0:4@8@12@16c20
c12@0:4c8
@"_DASCoreDataStorage"
@28@0:4@8d12d20
d8@0:4
v16@0:4d8
v28@0:4@8d12d20
@"NSPredicate"
@12@0:4i8
@24@0:4i8d12@20
@28@0:4d8d16@24
@32@0:4d8i16d20@28
@"_DASPolicyResponseRationale"
v24@0:4@8@12@16^v20
@?8@0:4
@"NSMutableSet"
d16@0:4@8c12
@32@0:4@8d12I20@24@?28
v12@0:4I8
d20@0:4@8@12^i16
i12@0:4@8
d24@0:4i8I12d16
d16@0:4i8I12
d12@0:4I8
@28@0:4@8@12c16d20
d20@0:4@8@12@16
i16@0:4@8i12
d28@0:4@8i12i16c20c24
@"<_CDContext>"
v20@0:4@8i12@16
d12@0:4i8
@"NSXPCConnection"
@"_DASDaemon"
@12@0:4@?8
@"_DASDataProtectionMaster"
@"NSUUID"
d28@0:4@8d12c20c24
v20@0:4@8q12
v16@0:4i8@12
@24@0:4@8@12d16
c24@0:4@8@12^@16^@20
@"_CDDateRange"
Initializing DASDaemon...
Soliciting activities for resubmission.
Setting up timers.
Setting timer (waking=%u) between %s and %s
Loading saved state.
Loading group %@.
Adding a launch request for application %@ by activity %@
Removing a launch request for application %@ by activity %@
Received unentitled XPC connection. Dropping on the floor
Running activities : %@
Unable to run activities. Removing references: %@
Suspending Activites:%@
'%@' has compatibility score of %lf with %@. Bailing  out.
Suspending intensive activity '%@' because it has been running for too long
'%@' has compatibility score of %lf with '%@'. Relaxing scores.
'%@' DecisionToRun:%d (Bypasses Predictions)
'%@' CurrentScore: %lf, ThresholdScore: %lf DecisionToRun:%d
Schedule wake at %@ for activity name '%@'(leeway:%@)
Failed to schedule wake at %@ for activity name '%@'(leeway:%@)(ret:0x%x)
Submitted Activity: %@
Advancing start date for %@ by %3.1lf minutes
Starting group activity %@
Started activities: %@
Submitted activities: %@
NO LONGER RUNNING %@ ...Tasks running in group [%@] are %ld!
COMPLETED %@!
CANCELED: %@!
With %@ ...Tasks running in group %@ are %ld!
Submit activity: %@ in group: %@ with capacity: %ld
Force Running %lu activities
Force run activities unable to find activity %@
Attempting to suspend based on triggers: %@
Ignoring trigger %@ because conditions are deteriorating
Evaluating %llu activities based on triggers
Trigger: %@ is now [%@]
Periodic scoring of activities for optimal date
Arming timer for activity %@
Taking an assertion
Failed to create SystemActive asserion. ret:0x%x
Rescoring all %lu activities [%@]
Rescoring %lu activities due to trigger %@
No tasks blocked on %@
Activity %@ has been running for %@ minutes
Suspending activity %@ as it may block other high priority activities.
Suspending activity %@ because a required criterion is not satisfied.
Device Activity: %@
Low Likelihood is from %@ to %@
CoreData save error:  : %@, %@
Start network path monitoring for '%@'
Stop network path monitoring for '%@'
Plugin Likelihood: %@
%@:[
%@ ] sumScores:%lf, denominator:%f, FinalDecision: %@ FinalScore: %f}
Activity %@ bypasses predictions
Activity %@ start beyond the 18 hour interval
Activity %@: Optimal Score %.4f at %@ (Valid Until: %@)
TopN: %@
Timeline for %@: %@
Updating 'WiFiQualityPredictions' to %@
Updating 'CellQualityPredictions' to %@
Can't complete activity %@! It's not running!
Unentitled client tried to create an Activity Group. Dropping on the floor
MbP?
@Z@333333
^@333333
?ffffff
?333333
?333333
In Car Policy
com.apple.duetactivityscheduler.incarpolicy.incar
com.apple.duetactivityscheduler.incarpolicy.nav
identifier
predicate
deviceSet
mustWake
/car/isConnected
/maps/navigationInProgress
v8@?0
navigationInProgress == YES
isIntensive == %u
requiresInactive == %u
priority == %llu && timeUntilDeadline > 0
inCar == YES
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
policyName
T@"NSString",R,N
triggers
T@"NSArray",R,N
T@"NSString",&,N,V_policyName
T@"NSArray",&,N,V_triggers
inCarKeyPath
T@"_CDContextualKeyPath",&,N,V_inCarKeyPath
navigationKeyPath
T@"_CDContextualKeyPath",&,N,V_navigationKeyPath
com.appple.duet.activityscheduler.requestActivityResubmission
com.apple.duet.activityscheduler.allow
com.apple.DuetActivityScheduler
com.apple.duetactivityscheduler
/var/mobile/Library/DuetActivityScheduler
com.apple.dasscheduler.batchingqueue.taskevaluation
com.apple.dasscheduler.triggerbatchingqueue
v16@?0@"NSArray"8
com.apple.dasscheduler.activitycompletionbatchingqueue
com.apple.duetactivityscheduler.timeschedulingqueue
com.apple.Duet.DuetActivityScheduler.ActivityEvaluationTimer
<%@: Listener: %@, Clients: %@, Started Tasks: %@
lifecycle
v16@?0@"_DASDaemonClient"8
v32@?0@"_DASActivity"8@"NSDate"16^B24
scoring
scoreWhenRun
time
leeway
DAS for activity %@
scheduledby
lifecycle(activityGroup)
v32@?0@"NSString"8@"NSMutableArray"16^B24
q24@?0@"_DASActivity"8@"_DASActivity"16
v16@?0@"NSString"8
com.apple.duetactivityscheduler.fileprotectionpolicy.statuschanged
com.apple.duetactivityscheduler.pluggedinpolicy.ispluggedin
B16@?0@"NSString"8
dismissalCondition
Periodic timer fired (%@)
q24@?0@8@16
AssertType
PreventUserIdleSystemSleep
AssertName
com.apple.duetactivityscheduler.triggersRestart
AllowsDeviceRestart
com.apple.duetactivityscheduler.assertion
clients
T@"NSMutableArray",&,N,V_clients
startedTasksToStartTime
T@"NSMutableDictionary",&,N,V_startedTasksToStartTime
triggerToPolicyMap
T@"NSDictionary",&,N,V_triggerToPolicyMap
activityToTriggersMap
T@"NSMutableDictionary",&,N,V_activityToTriggersMap
triggerToActivitiesMap
T@"NSMutableDictionary",&,N,V_triggerToActivitiesMap
activityToIncompatibleActivitiesMap
T@"NSMutableDictionary",&,N,V_activityToIncompatibleActivitiesMap
groups
T@"NSMutableDictionary",&,N,V_groups
groupToPendingTasks
T@"NSMutableDictionary",&,N,V_groupToPendingTasks
groupToRunningTasks
T@"NSMutableDictionary",&,N,V_groupToRunningTasks
applicationLaunchRequests
T@"NSMutableDictionary",&,N,V_applicationLaunchRequests
context
T@"<_CDLocalContext>",&,N,V_context
listener
T@"NSXPCListener",&,N,V_listener
timerSchedulingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_timerSchedulingQueue
wakeTimer
T@"PCPersistentTimer",&,N,V_wakeTimer
timerEarliestFireDate
T@"NSDate",&,N,V_timerEarliestFireDate
timerLatestFireDate
T@"NSDate",&,N,V_timerLatestFireDate
networkEvaluationMonitor
T@"_DASNetworkEvaluationMonitor",&,N,V_networkEvaluationMonitor
sleepWakeMonitor
T@"_DASSleepWakeMonitor",&,N,V_sleepWakeMonitor
store
T@"<_DASDataStore>",&,N,V_store
optimalScoringTimer
T@"NSObject<OS_dispatch_source>",&,N,V_optimalScoringTimer
databaseMaintenanceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_databaseMaintenanceTimer
evaluationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_evaluationQueue
triggerBatchingQueue
T@"_DASBatchingQueue",&,N,V_triggerBatchingQueue
activityCompletedBatchingQueue
T@"_DASBatchingQueue",&,N,V_activityCompletedBatchingQueue
recentlyLaunchedApps
T@"NSMutableDictionary",&,N,V_recentlyLaunchedApps
DefaultPairedNearbyPolicy
com.apple.duetactivityscheduler.defaultpairedpolicy.nearbystatus
/watch/nearby
defaultPairedIsNearby == %@
defaultPaired.likelihood == %@
T@"NSString",C,N,V_policyName
predictor
T@"_DKPredictor",&,N,V_predictor
deviceNearbyTimeline
T@"_DKPredictionTimeline",&,V_deviceNearbyTimeline
lastPredictionTimelineUpdate
T@"NSDate",&,N,V_lastPredictionTimelineUpdate
FileProtectionPolicy
/system/isLocked
com.apple.duetactivityscheduler.fileprotectionpolicy.queue
com.apple.mobile.keybagd.first_unlock
v12@?0i8
PasswordConfigured
classALocked == %@ && activityFileProtection == %@
classCLocked == %@ && activityFileProtection == %@
isClassCLocked
TB,N,V_isClassCLocked
passwordConfigured
TB,N,V_passwordConfigured
classCLockedToken
Ti,N,V_classCLockedToken
handleUnlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_handleUnlockQueue
DeviceActivityPolicy
com.apple.duetactivityscheduler.deviceactivitypolicy.inusestatus
deviceInUse
deviceActivity
predictions
deviceActivityPrediction
considerAlwaysActive == YES && requiresDeviceInactivity == YES
deviceActivity == %@
deviceActivityTimeline
T@"_DKPredictionTimeline",&,V_deviceActivityTimeline
inUseStatus
T@"_CDContextualKeyPath",&,N,V_inUseStatus
considerAlwaysActive
TB,N,V_considerAlwaysActive
DASActivity
DASInfo
DASPrediction
applicationUsagePrediction
com.apple.duetactivityschedulerpowerlog.hourlysyncqueue
queuedTasks
eventsCoalesced
dasTasks
droppedCount
v32@?0@"NSString"8@"_DKPredictionTimeline"16^B24
taskName
priority
startTime
timeWhenRun
endTime
duration
optimalScore
optimalScorePercentage
requiresPlugin
requiresInexpensiveNetworking
networkTaskSize
requiresDeviceInactivity
isCpuIntensive
isMemoryIntensive
application
None
score%@
v32@?0@"NSString"8@16^B24
shortPeriodTimer
T@"NSObject<OS_dispatch_source>",&,N,V_shortPeriodTimer
longPeriodTimer
T@"NSObject<OS_dispatch_source>",&,N,V_longPeriodTimer
syncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
lastCoalesed
T@"NSDate",&,N,V_lastCoalesed
multiplier
T@"NSMutableDictionary",&,N,V_multiplier
Ti,N,V_eventsCoalesced
taskCount
Ti,N,V_taskCount
appPredictionCount
Ti,N,V_appPredictionCount
Ti,N,V_droppedCount
activities
T@"NSMutableArray",&,N,V_activities
T@"NSMutableDictionary",&,N,V_predictions
appPredictions
T@"NSMutableDictionary",&,N,V_appPredictions
_DASCoreDataStore.mocQueue
_DASCoreDataStore.queuePSC
%@/%@
%@%@.db
ClassA
ClassC
ClassD
v20@?0@"NSString"8B16
Missing model URL!
%@ : did not exist and could not be created: %@
Failed to load Managed Object Model from %@
Failed to add persistent store: %@
paths
T@"NSDictionary",R,N,V_paths
managedObjectModel
T@"NSManagedObjectModel",&,N,V_managedObjectModel
managedObjectContexts
T@"NSMutableDictionary",R,N,V_managedObjectContexts
persistentStoreCoordinators
T@"NSMutableDictionary",R,N,V_persistentStoreCoordinators
mocQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_mocQueue
pscQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_pscQueue
dataProtectionMonitor
T@"_DASDataProtectionStateMonitor",R,N,V_dataProtectionMonitor
databaseDirectory
T@"NSString",R,C,N,V_databaseDirectory
databaseName
T@"NSString",R,C,N,V_databaseName
modelURL
T@"NSURL",R,N,V_modelURL
readOnly
TB,R,N,V_readOnly
DuetActivityScheduler
momd
database
T@"_DASCoreDataStorage",&,N,V_database
[%@]: Required:%3.2f, Observed:%3.2f
condition
T@"NSString",&,N,V_condition
currentValue
Td,N,V_currentValue
requiredValue
Td,N,V_requiredValue
reasons:[
{%@}
,condition:{%@}
T@"NSPredicate",&,N,V_condition
reasons
T@"NSMutableArray",&,N,V_reasons
Can Proceed
Must Not Proceed
Must Proceed
Absolutely Must Not Proceed
Unknown Decision (Proceed)
{Decision: %s, Score:%lf, Rationale:%@}
policyDecision
Tq,N,V_policyDecision
validityDuration
Td,N,V_validityDuration
rationale
T@"_DASPolicyResponseRationale",&,N,V_rationale
score
Td,R,N,V_score
path
networkPathEvaluators
T@"NSMutableDictionary",&,N,V_networkPathEvaluators
evaluatorsBeingObserved
T@"NSMutableSet",&,N,V_evaluatorsBeingObserved
callback
T@?,C,N,V_callback
CarplayConnectedPolicy
com.apple.duetactivityscheduler.carplaypolicy.carplayconnected
carplayConnected = %@
PowerNapPolicy
inADarkWake == %@
darkWakeEligible == %@
appRefresh == %@
runSinceLastWake == YES
ChargerPluggedInPolicy
com.apple.duetactivityscheduler.pluggedinpolicy.watchispluggedin
/watch/isPluggedIn
plugin
powerPluggedInPrediction
%@ == %@
isPluggedInKeyPath
T@"_CDContextualKeyPath",&,N,V_isPluggedInKeyPath
watchIsPluggedInKeyPath
T@"_CDContextualKeyPath",&,N,V_watchIsPluggedInKeyPath
pluginTimeline
T@"_DKPredictionTimeline",&,V_pluginTimeline
com.apple.dasbatchingqueue.executionqueue.%s
com.apple.dasbatchingqueue.syncqueue.%s
maxDelay
Td,N,V_maxDelay
maxQueueDepth
TQ,N,V_maxQueueDepth
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
workHandler
T@?,C,N,V_workHandler
workItems
T@"NSMutableArray",&,N,V_workItems
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
default
{name: %@, 
response: N/A}
policyWeight: %2.3lf, response: %@}
date
T@"NSDate",R,&,N,V_date
MemoryPressurePolicy
kern.memorystatus_vm_pressure_level
memoryPressure
T@"NSString",&,D,N
T@"NSSet",&,D,N
ApplicationPolicy
application.topN
application.%@
%@.likelihood == %@
timelines
T@"NSMutableDictionary",&,N,V_timelines
topNPrediction
T@"_DKPredictionTimeline",&,N,V_topNPrediction
lastApplicationTimelineUpdate
T@"NSMutableDictionary",&,N,V_lastApplicationTimelineUpdate
NetworkQualityPolicy
com.apple.duetactivityscheduler.nwquality.wired
com.apple.duetactivityscheduler.nwquality.wifi
com.apple.duetactivityscheduler.nwquality.cell
com.apple.duetactivityscheduler.nwquality.radiohot
com.apple.duetactivityscheduler.wifiqualityprediction
wifiPredictions
wiFiAssociatedPrediction
com.apple.duetactivityscheduler.cellqualityprediction
cellPredictions
cellQualityPrediction
/system/wired/quality
/system/cell/active
wifiQuality
cellQuality
networkPathAvailability
T@"_CDContextualKeyPath",&,N,V_wifiQuality
networkEvaluator
T@"_DASNetworkEvaluationMonitor",&,N,V_networkEvaluator
userContext
T@"<_CDContext>",&,N,V_userContext
wifiPredictionTimeline
T@"_DKPredictionTimeline",&,V_wifiPredictionTimeline
wiredQuality
T@"_CDContextualKeyPath",&,N,V_wiredQuality
T@"_CDContextualKeyPath",&,N,V_cellQuality
cellRadioHot
T@"_CDContextualKeyPath",&,N,V_cellRadioHot
cellPredictionTimeline
T@"_DKPredictionTimeline",&,V_cellPredictionTimeline
Activity
name == %@
TRUEPREDICATE
submitDate > %@ AND submitDate < %@
currentState == %d
requestsApplicationLaunch == %d
currentState <= %@ AND startBefore <= %@
ThermalPolicy
com.apple.duetactivityscheduler.thermalpolicypolicy.thermalpressurechange
com.apple.duetactivityscheduler.thermalpolicypolicy.coldpressurechange
com.apple.duetactivityscheduler.thermalpolicypolicy.watchthermalpressurechange
/system/coldThermalPressure
/watch/thermalpressure
coldTemperature == %@
thermalLevel >= %ld
watchThermalLevel >= %ld
thermalPressureLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_thermalPressureLevelKeyPath
watchThermalPressureLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_watchThermalPressureLevelKeyPath
thermalPressureColdKeyPath
T@"_CDContextualKeyPath",&,N,V_thermalPressureColdKeyPath
EnergyBudgetPolicy
com.apple.duetactivityscheduler.energybudgetpolicy.status
energyBudget
pluginStatus
com.apple.FitnessFriends.PeriodicUpdateActivity
CallInProgressPolicy
com.apple.duetactivityscheduler.callinprogresspolicy.callinprogress
callInProgress = %@
com.apple.mobileslideshow
/app/photos/significantWork
PhotosPolicy
com.apple.dueatctivityscheduler.photospolicy.photoswork
significantWorkRemaining == 1 && pluggedIn == 0
significantRemainingPhotosWorkKeyPath
T@"_CDContextualKeyPath",&,N,V_significantRemainingPhotosWorkKeyPath
WatchBackgroundBudgetPolicy
com.apple.duetactivityscheduler.backgroundbudget.snapshot
com.apple.duetactivityscheduler.backgroundbudget.launch
/watch/budget/snapshots
/watch/budget/launches
budgetKey == nil
budgetValue
snapshotBudgetKeyPath
T@"_CDContextualKeyPath",&,N,V_snapshotBudgetKeyPath
launchBudgetKeyPath
T@"_CDContextualKeyPath",&,N,V_launchBudgetKeyPath
com.apple.networkd.configure_connection_pool
B24@?0@"_DASActivity"8^B16
daemon
T@"_DASDaemon",&,N,V_daemon
connection
T@"NSXPCConnection",&,N,V_connection
submittedTasks
T@"NSMutableSet",&,N,V_submittedTasks
startedTasks
T@"NSMutableSet",&,N,V_startedTasks
DataBudgetPolicy
com.apple.duetactivityscheduler.databudgetpolicy.status
dataBudget
com.apple.DuetActivityScheduler.DataProtection.state
com.apple.DuetActivityScheduler.DataProtection.notify
com.apple.mobile.keybagd.lock_status
PasswordProtected
stateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_stateQueue
deviceFormatedForContentProtection
TB,R,N,V_deviceFormatedForContentProtection
handlers
T@"NSMutableDictionary",R,N,V_handlers
availableState
T@"NSMutableDictionary",R,N,V_availableState
notifyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notifyQueue
notifyToken
Ti,R,N,V_notifyToken
notifyEnabled
TB,R,N,V_notifyEnabled
master
T@"_DASDataProtectionMaster",R,N,V_master
handlerUUID
T@"NSUUID",R,N,V_handlerUUID
changeHandler
T@?,C,N,V_changeHandler
Trigger
identifier == %@
BatteryLevelPolicy
com.apple.duetactivityscheduler.batterylevelpolicy.batterylevelchange
com.apple.duetactivityscheduler.batterylevelpolicy.watchbatterylevelchange
/watch/batteryPercentage
batteryLevel == %ld
lowPowerModeEnabled == %@
watchBatteryLevel == %ld
batteryLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_batteryLevelKeyPath
watchBatteryLevelKeyPath
T@"_CDContextualKeyPath",&,N,V_watchBatteryLevelKeyPath
watchPluginStatusKeyPath
T@"_CDContextualKeyPath",&,N,V_watchPluginStatusKeyPath
com.apple.das.startup
com.apple.das.submitcount.all
com.apple.das.submitcount.network
com.apple.das.submitcount.launch
com.apple.das.triggercount
com.apple.das.suspensioncount
com.apple.das.preemptioncount.intensive
com.apple.das.preemptioncount.network
com.apple.dasscheduler.metricqueue
ActivityGroupPolicy
%@.currentAvailableLimit == %ld
com.apple.duetactivityscheduler.predictionGenerationQueue
periodStart
periodEnd
maxConcurrent
TQ,D,N
name
Group
beforeFirstActivityOfDay
TB,D,N
beforeUserIsActive
budgeted
bundleID
cancelAfterDeadline
completedDate
T@"NSDate",&,D,N
cpuIntensive
currentState
Ti,D,N
diskIntensive
groupName
isUpload
launchReason
memoryIntensive
predictedOptimalScore
Td,D,N
predictedOptimalStartDate
relatedApplications
T@"NSData",&,D,N
relevancy
Tq,D,N
requestsApplicationLaunch
requiresNetwork
schedulerRecommendedApplications
schedulingPriority
Ts,D,N
startAfter
startBefore
startDate
submitDate
supportsAnyApplication
suspendable
targetDevice
transferSize
triggersRestart
userInfo
group
T@"_DASGroupManagedObject",&,D,N
RestartRequiredActivitiesPolicy
com.apple.duetactivityscheduler.restartpolicy.assertionsheld
com.apple.duetactivityscheduler.restartpolicy.inusestatus
com.apple.duetactivityscheduler.restartpolicy.wakerequest
com.apple.softwareupdate.autoinstall.startInstall
DeviceRestartPeriodNotInRange == 1
Is any Assertion Held?
Is User active?
Minimum seconds without any scheduled wake
Minumum seconds since user was last active
deviceAssertionsHeld
T@"_CDContextualKeyPath",&,N,V_deviceAssertionsHeld
nextWakeRequest
T@"_CDContextualKeyPath",&,N,V_nextWakeRequest
lastCacheDate
T@"NSDate",&,V_lastCacheDate
deviceRestartPeriod1
T@"_CDDateRange",&,N,V_deviceRestartPeriod1
deviceRestartPeriod2
T@"_CDDateRange",&,N,V_deviceRestartPeriod2
minDurationAfterLastUserInteraction
Td,N,V_minDurationAfterLastUserInteraction
minDurationBeforeNextScheduledWake
Td,N,V_minDurationBeforeNextScheduledWake
predicateForChangeAtKeyPath:
numberWithUnsignedInteger:
numberWithBool:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
init
ephemeralKeyPathWithKey:
initializeTriggers
class
alloc
isEqualToString:
objectForKeyedSubscript:
boolValue
policyResponseWithDecision:validityDuration:rationale:
isIntensive
requiresDeviceInactivity
initWithPolicyName:
predicateWithFormat:
addRationaleWithCondition:
schedulingPriority
startBefore
timeIntervalSinceNow
policyResponseWithScore:validityDuration:rationale:
policyInstance
appliesToActivity:
weightForActivity:
responseForActivity:withState:
indicatesDeterioratingConditionsForTrigger:withState:
baselineScoreForActivity:
shouldLogScoreToPowerLog
policyName
triggers
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
setPolicyName:
setTriggers:
inCarKeyPath
setInCarKeyPath:
navigationKeyPath
setNavigationKeyPath:
_policyName
_triggers
_inCarKeyPath
_navigationKeyPath
initAsAnonymous:withContext:
array
dictionary
handleTriggers:
queueWithName:maxBatchingDelay:maxQueueDepth:queue:workItemsHandler:
handleCompletedActivities:
userContext
defaultCategory
sharedInstance
sharedMonitorWithDaemon:
registerForNetworkPathEvaluation
allPoliciesForPlatform
registerTriggersWithContextStoreForPolicies:
setupTimers
storageWithDirectory:readOnly:
anonymousListener
initWithMachServiceName:
setDelegate:
loadLastSavedState
solicitActivityResubmission
incrementOccurrencesForKey:byCount:
UTF8String
periodicCalculationForOptimal
scheduleTimerBetween:and:waking:
setupDatabaseMaintenance
keyPathForPluginStatus
invalidate
wakeTimerFired:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
date
dateByAddingTimeInterval:
setMinimumEarlyFireProportion:
setDisableSystemWaking:
scheduleInQueue:
currentLocale
descriptionWithLocale:
deleteOldActivities
deleteActivitiesIfRequired
loadPendingLaunchTasks:
loadAllGroups:
countByEnumeratingWithState:objects:count:
name
setObject:forKeyedSubscript:
allObjects
submitActivities:
maxConcurrent
copy
containsObject:
count
candidateGroupActivityForPreemption:
suspendRequested
setSuspendRequested:
suspendActivities:
relatedApplications
firstObject
_DAS_addOrReplaceObject:
removeObject:
removeObjectForKey:
resume
submittedTasks
allKeys
stringWithFormat:
valueForEntitlement:
clientForDaemon:withConnection:
addObject:
logForCategory:
runActivities:
allClientsDo:
removeActivityFromTriggerMapWithName:
setWithArray:
enumerateKeysAndObjectsUsingBlock:
handleNoLongerRunningActivity:
timeIntervalSinceDate:
objectAtIndex:
setStartDate:
runActivityArray:
timewiseEligibleAtDate:
scoreForActivity:withState:response:
compatibilityWith:
setWithObject:
shouldPreemptTask:withStartDate:atDate:
thresholdScoreForActivity:
bypassesPredictions
policyScores
setPolicyScores:
numberWithDouble:
setObject:forKey:
shouldRunActivityNow:withOtherActivites:
groupName
addRunningActivity:toGroupWithName:
requiresNetworkPathMonitoring:
stopMonitoringActivity:
requestsApplicationLaunch
runApplicationLaunchActivities:
hasManyConstraints
setDateStyle:
setTimeStyle:
compare:
integerValue
numberWithInteger:
objectForKey:
stringFromDate:
addTriggersToActivity:
saveActivity:
addLaunchRequest:
startAfter
setStartAfter:
addPendingActivity:toGroupWithName:
computeOptimalScoreAndDateForActivity:
userInfo
startMonitoringActivity:withNetworkParameters:withEndpoint:
shouldEvaluateTask:atDate:
shouldRunActivityNow:
beginWorkForActivity:
triggersRestart
scheduleSystemWakeAt:forActivity:withLeeway:
predictedOptimalStartDate
startDate
shortDescription
tasksNoLongerEligible
arrayWithObject:
addPendingActivitiesToGroups:
saveActivities:
evaluateScoreAndRunActivities:
removeActivityFromTriggerMap:
removeLaunchRequest:
recordActivity:
deleteActivity:
inADarkWake
recordNoLongerRunningActivity:
addWorkItem:
handleRescindedActivity:
_DAS_addOrReplaceObjectsFromArray:
saveGroup:
submitActivity:
createActivityGroup:
setGroupName:
sortUsingComparator:
arrayWithArray:
startedTasks
allValues
addObjectsFromArray:
getActivityWithName:
currentPredictions
registerForNetworkEvaluationWithCallback:
stringByReplacingOccurrencesOfString:withString:
fileProtection
complete
unionSet:
keyPathForCallInProgressStatus
determineNextTimerFireDateAndSchedule
keyPaths
registrationWithIdentifier:contextualPredicate:dismissalPolicy:deviceSet:mustWake:callback:
registerCallback:
mutableCopy
unsignedIntegerValue
registerWithContextStoreForId:contextualPredicate:dismissalCondition:deviceSet:mustWake:
dictionaryWithDictionary:
associateActivity:withTriggerKeys:
evaluateScoreAndRunAllActivitiesForReason:
stringWithUTF8String:
darkWakeEligible
lastScored
chooseActivitiesToRunFromCandidateActivities:toBeRunActivities:toLaunchApplications:
duration
distantPast
suspendable
listener:shouldAcceptNewConnection:
submitActivity:inGroup:
submitActivity:inGroupWithName:
handleEligibleActivities:
activityCompleted:
activityCanceled:
activityStarted:
submittedActivitiesWithHandler:
runningActivitiesWithHandler:
runningGroupActivitiesWithHandler:
scoresForActivityWithName:withHandler:
activityRunStatisticsWithHandler:
forceRunActivities:
startedActivities:
currentPredictionsWithHandler:
cancelActivities:
additionalCapacityForActivity:inGroupWithName:shouldTryToSuspend:
requestCountForApplication:
start
submittedTaskCount
removeClient:
clearRecentlyLaunchedApps
handleRunningActivities:
activityRunStatistics
evaluateScoreAndRunActivitesForTrigger:
clients
setClients:
startedTasksToStartTime
setStartedTasksToStartTime:
triggerToPolicyMap
setTriggerToPolicyMap:
activityToTriggersMap
setActivityToTriggersMap:
triggerToActivitiesMap
setTriggerToActivitiesMap:
activityToIncompatibleActivitiesMap
setActivityToIncompatibleActivitiesMap:
groups
setGroups:
groupToPendingTasks
setGroupToPendingTasks:
groupToRunningTasks
setGroupToRunningTasks:
applicationLaunchRequests
setApplicationLaunchRequests:
context
setContext:
listener
setListener:
timerSchedulingQueue
setTimerSchedulingQueue:
wakeTimer
setWakeTimer:
timerEarliestFireDate
setTimerEarliestFireDate:
timerLatestFireDate
setTimerLatestFireDate:
networkEvaluationMonitor
setNetworkEvaluationMonitor:
sleepWakeMonitor
setSleepWakeMonitor:
store
setStore:
optimalScoringTimer
setOptimalScoringTimer:
databaseMaintenanceTimer
setDatabaseMaintenanceTimer:
evaluationQueue
setEvaluationQueue:
triggerBatchingQueue
setTriggerBatchingQueue:
activityCompletedBatchingQueue
setActivityCompletedBatchingQueue:
recentlyLaunchedApps
setRecentlyLaunchedApps:
_clients
_startedTasksToStartTime
_triggerToPolicyMap
_activityToTriggersMap
_triggerToActivitiesMap
_activityToIncompatibleActivitiesMap
_groups
_groupToPendingTasks
_groupToRunningTasks
_applicationLaunchRequests
_context
_listener
_timerSchedulingQueue
_wakeTimer
_timerEarliestFireDate
_timerLatestFireDate
_networkEvaluationMonitor
_sleepWakeMonitor
_store
_optimalScoringTimer
_databaseMaintenanceTimer
_evaluationQueue
_triggerBatchingQueue
_activityCompletedBatchingQueue
_recentlyLaunchedApps
keyPathForWatchNearbyStatus
sharedPredictor
predictionForDeviceNearby
predicateForEventsWithStartInDateRangeFrom:to:
predicateForEventsWithIntegerValue:
andPredicateWithSubpredicates:
predictionForStreamWithName:withPredicate:withPredictionType:
targetDevice
predictionGenerationQueue
deviceNearbyTimeline
predictionNeedsUpdating:atDate:lastUpdatedAt:
setDeviceNearbyTimeline:
valueAtDate:
doubleValue
scoreForActivity:atDate:
predictedScoreForActivity:atDate:
predictor
setPredictor:
lastPredictionTimelineUpdate
setLastPredictionTimelineUpdate:
_predictor
_deviceNearbyTimeline
_lastPredictionTimelineUpdate
keyPathWithKey:
indicatesProtection
completeUntilFirstUserAuthentication
isClassCLocked
setIsClassCLocked:
passwordConfigured
setPasswordConfigured:
classCLockedToken
setClassCLockedToken:
handleUnlockQueue
setHandleUnlockQueue:
_isClassCLocked
_passwordConfigured
_classCLockedToken
_handleUnlockQueue
deviceActivityLikelihood
setPrediction:forKey:
recordPrediction:key:valueMultiplier:
keyPathForInUseStatus
initWithSuiteName:
boolForKey:
lowLikelihoodPeriodStartForPredictionWithKey:
lowLikelihoodPeriodEndForPredictionWithKey:
deviceActivityTimeline
setDeviceActivityTimeline:
unsignedIntValue
printLowLikelihoodRegions
inUseStatus
setInUseStatus:
considerAlwaysActive
setConsiderAlwaysActive:
_considerAlwaysActive
_deviceActivityTimeline
_inUseStatus
logActivities
logPredictions
numberWithInt:
removeAllObjects
getValuesFromTimeline:valueMultiplier:
requiresNetwork
shouldLogPrediction:
shouldLogActivity:
createRecordFromActivity:
didCoaleseWithPrevious:
dateWithTimeIntervalSinceNow:
getValuesForPrediction:tillEndDate:withIntervals:
objectAtIndexedSubscript:
intValue
numberFromDouble:
setObject:atIndexedSubscript:
shouldLogAppPrediction:
predictedOptimalScore
requiresPlugin
requiresInexpensiveNetworking
transferSize
cpuIntensive
memoryIntensive
recordAppPrediction:app:
shortPeriodTimer
setShortPeriodTimer:
longPeriodTimer
setLongPeriodTimer:
syncQueue
setSyncQueue:
lastCoalesed
setLastCoalesed:
multiplier
setMultiplier:
eventsCoalesced
setEventsCoalesced:
taskCount
setTaskCount:
appPredictionCount
setAppPredictionCount:
droppedCount
setDroppedCount:
activities
setActivities:
predictions
setPredictions:
appPredictions
setAppPredictions:
_eventsCoalesced
_taskCount
_appPredictionCount
_droppedCount
_shortPeriodTimer
_longPeriodTimer
_syncQueue
_lastCoalesed
_multiplier
_activities
_predictions
_appPredictions
initWithDirectory:databaseName:modelURL:readOnly:
dataProtectionClassA
dataProtectionClassC
dataProtectionClassD
handleDataProtectionChangeFor:willBeAvailable:
setChangeHandler:
invalidateManagedObjectContextFor:
invalidatePersistentStoreCoordinatorFor:
reset
performWithOptions:andBlock:
persistentStores
removePersistentStore:error:
initWithContentsOfURL:
isDataAvailableFor:
createDatabaseDirectory:error:
code
managedObjectModel
fileURLWithPath:
persistentStoreOptionsFor:readOnly:
metadataForPersistentStoreOfType:URL:options:error:
isConfiguration:compatibleWithStoreMetadata:
initWithManagedObjectModel:
destroyPersistentStoreAtURL:withType:options:error:
addPersistentStoreWithType:configuration:URL:options:error:
handleDatabaseErrors:forPSC:protectionClass:
persistentStoreCoordinatorFor:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setMergePolicy:
setUndoManager:
_destroyPersistentStoreAtURL:withType:options:error:
mocForProtectionClass:
deleteDatabaseForPSC:protectionClass:obliterate:
defaultManager
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
storageWithDirectory:databaseName:modelURL:readOnly:
deleteStorageFor:obliterate:
databaseDirectory
databaseName
modelURL
readOnly
paths
setManagedObjectModel:
managedObjectContexts
persistentStoreCoordinators
mocQueue
pscQueue
dataProtectionMonitor
_readOnly
_databaseDirectory
_databaseName
_modelURL
_paths
_managedObjectModel
_managedObjectContexts
_persistentStoreCoordinators
_mocQueue
_pscQueue
_dataProtectionMonitor
initWithDirectory:readOnly:
bundleForClass:
pathForResource:ofType:
hasChanges
save:
createOrUpdateActivity:context:
fetchOrCreateTrigger:managedObjectContext:
addActivitiesObject:
createOrUpdateGroup:context:
mocSaveAndReset:
createMOInMOC:activity:group:triggers:
addActivities:
createMOInMOC:group:activities:
fetchAllActivities:
getActivityFromManagedObject:
updateActivityStarted:
predicateForPendingActivities
predicateForLaunchActivities
fetchActivitiesUsingPredicate:context:
predicateForStartedActivities
fetchAllGroups:
getGroupFromManagedObject:
updateActivityStarted:context:
updateActivityCompleted:context:
updateActivityCanceled:context:
deleteActivity:context:
deleteOldActivities:
deleteActivitiesIfRequired:
saveActivity:triggers:
saveActivities:groups:triggersArray:
saveGroup:activity:
saveGroups:activitiesArray:
loadAllTasks:startedTasks:
saveActivity:group:triggers:hasStarted:
loadStartedTasks:
updateActivityCompleted:
updateActivityCanceled:
deleteStorageWithObliterationOption:
database
setDatabase:
_database
predicateWithFormat:arguments:
arrayWithCapacity:
criterionWithFormat:
criterionWithPredicate:
policyCriteriaWithPredicates:
initWithCondition:withRequiredValue:withCurrentValue:
condition
setCondition:
currentValue
setCurrentValue:
requiredValue
setRequiredValue:
_condition
_currentValue
_requiredValue
string
appendFormat:
appendString:
addRationaleForCondition:withRequiredValue:withCurrentValue:
reasons
setReasons:
_reasons
prettyDecisionDescription:
initWithScore:decision:validityDuration:rationale:
score
policyDecision
setPolicyDecision:
validityDuration
setValidityDuration:
rationale
setRationale:
_score
_policyDecision
_validityDuration
_rationale
initWithEndpoint:parameters:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
status
path
observeValueForKeyPath:ofObject:change:context:
isNetworkPathAvailableForActivity:
networkPathEvaluators
setNetworkPathEvaluators:
evaluatorsBeingObserved
setEvaluatorsBeingObserved:
callback
setCallback:
_networkPathEvaluators
_evaluatorsBeingObserved
_callback
keyPathForCarplayConnectedStatus
managedObjectContext
deleteObject:
willSave
beforeDaysFirstActivity
canRunInCurrentWakeState:
hasFinishedRunningSinceLastWake:
pluginLikelihood
scoreForActivity:isPluggedIn:
pluginTimeline
setPluginTimeline:
isPluggedInKeyPath
setIsPluggedInKeyPath:
watchIsPluggedInKeyPath
setWatchIsPluggedInKeyPath:
_isPluggedInKeyPath
_watchIsPluggedInKeyPath
_pluginTimeline
initializeAllPolicies
allPredictingPoliciesForPlatform
unprotectedExecuteWorkItems
initWithName:maxBatchingDelay:maxQueueDepth:queue:workItemsHandler:
maxDelay
setMaxDelay:
maxQueueDepth
setMaxQueueDepth:
executionQueue
setExecutionQueue:
workHandler
setWorkHandler:
workItems
setWorkItems:
timer
setTimer:
_maxDelay
_maxQueueDepth
_executionQueue
_workHandler
_workItems
_timer
setBypassesPredictions:
getResponseStringForPolicy:response:appliesToActivity:weightForActivity:
setLastScored:
setLastComputedScore:
localTimeZone
setTimeZone:
determineIfActivityBypassesPredictions:
setPredictedOptimalStartDate:
setPredictedOptimalScore:
dateWithTimeInterval:sinceDate:
getTimeSlotForActivity:
getScoreForTimeSlot:activityPriority:activityScore:
relaxationFactorForTimeSlot:activityPriority:
preOptimalRelaxationFactor:
_date
memoryPressureLevelWithContext:
launchLikelihoodForTopNApplications:withLikelihoodGreaterThan:withTemporalResolution:
topNPrediction
supportsAnyApplication
setTopNPrediction:
setSchedulerRecommendedApplications:
scoreForAnyAppActivity:atDate:
launchLikelihoodPredictionForApp:
scoreForActivity:atDate:withRationale:
timelines
setTimelines:
lastApplicationTimelineUpdate
setLastApplicationTimelineUpdate:
_timelines
_topNPrediction
_lastApplicationTimelineUpdate
keyPathForWiFiQualityPrediction
setWifiPredictionTimeline:
wifiPredictionTimeline
localWakingRegistrationWithIdentifier:contextualPredicate:callback:
keyPathForCellQualityPrediction
setCellPredictionTimeline:
cellPredictionTimeline
keyPathForWiFiConnectionQuality
keyPathForCellConnectionQuality
registerForPredictionChanges
minimumQualityForActivity:interface:
scoreForActivity:networkQuality:interface:pluginStatus:radioHot:
predictionForKey:
wifiQuality
setWifiQuality:
networkEvaluator
setNetworkEvaluator:
setUserContext:
wiredQuality
setWiredQuality:
cellQuality
setCellQuality:
cellRadioHot
setCellRadioHot:
_wifiQuality
_networkEvaluator
_userContext
_wifiPredictionTimeline
_wiredQuality
_cellQuality
_cellRadioHot
_cellPredictionTimeline
predicateForActivityWithName:
submitDate
predicateForActivityWithSubmitDate:
entityName
insertNewObjectForEntityForName:inManagedObjectContext:
entityForName:inManagedObjectContext:
setEntity:
predicateForUniqueRecord:
setPredicate:
executeFetchRequest:error:
lastObject
createNewActivity:
copyActivity:toManagedObject:
setFetchBatchSize:
setFetchLimit:
setName:
setStartBefore:
setSubmitDate:
setSchedulingPriority:
setSuspendable:
setTargetDevice:
cancelAfterDeadline
setCancelAfterDeadline:
setDuration:
setTransferSize:
setTriggersRestart:
setRequiresPlugin:
setRequiresNetwork:
setRequiresDeviceInactivity:
setRequiresInexpensiveNetworking:
setRequestsApplicationLaunch:
setSupportsAnyApplication:
setCpuIntensive:
diskIntensive
setDiskIntensive:
setMemoryIntensive:
beforeUserIsActive
setBeforeUserIsActive:
bundleID
setBundleId:
isUpload
setIsUpload:
budgeted
setBudgeted:
relevancy
setRelevancy:
launchReason
setLaunchReason:
unarchiveObjectWithData:
setRelatedApplications:
schedulerRecommendedApplications
setUserInfo:
bundleId
setBundleID:
setCurrentState:
archivedDataWithRootObject:
fetchActivity:context:
setCompletedDate:
updateActivity:value:context:
initWithFetchRequest:
executeRequest:error:
deleteActivites:moc:
countForFetchRequest:error:
keyPathForThermalPressureLevel
isTooColdWithContext:
maxAllowableThermalPressureForActivity:
getScoreForThermalLevel:
thermalPressureLevelKeyPath
setThermalPressureLevelKeyPath:
watchThermalPressureLevelKeyPath
setWatchThermalPressureLevelKeyPath:
thermalPressureColdKeyPath
setThermalPressureColdKeyPath:
_thermalPressureLevelKeyPath
_watchThermalPressureLevelKeyPath
_thermalPressureColdKeyPath
keyPathForEnergyBudgetRemainingStatus
budgetIsPositive:
haveSignificantWorkRemaining:
significantRemainingPhotosWorkKeyPath
setSignificantRemainingPhotosWorkKeyPath:
_significantRemainingPhotosWorkKeyPath
snapshotBudgetKeyPath
setSnapshotBudgetKeyPath:
launchBudgetKeyPath
setLaunchBudgetKeyPath:
_snapshotBudgetKeyPath
_launchBudgetKeyPath
interfaceWithProtocol:
setRemoteObjectInterface:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
handleClientInterruption
setInvalidationHandler:
initWithDaemon:withConnection:
objectsPassingTest:
cancelAllActivities
daemon
unlockedActivitiesWithNames:inSet:
minusSet:
activityNamesFromActivities:
remoteObjectProxy
dealloc
submitActivityInternal:
submitActivitiesInternal:
_DAS_unionSetOverridingExisting:
removeKnownActivitiesFromSet:
connection
setConnection:
setSubmittedTasks:
setStartedTasks:
setDaemon:
_connection
_submittedTasks
_startedTasks
_daemon
keyPathForNetworkingBudgetRemainingStatus
keyPathForWiredConnectionQuality
isDataAvailableForClassA
isDataAvailableForClassC
handleKeyBagLockNotification
deviceHasBeenUnlockedSinceBoot
deviceIsPasswordConfigured
deviceIsLocked
UUID
registerStateChangeHandler:
deregisterStateChangeHandler:
stateQueue
deviceFormatedForContentProtection
handlers
availableState
notifyQueue
notifyToken
notifyEnabled
_deviceFormatedForContentProtection
_notifyEnabled
_notifyToken
_stateQueue
_handlers
_availableState
_notifyQueue
changeHandler
master
handlerUUID
_changeHandler
_master
_handlerUUID
copyTrigger:toManagedObject:
createTrigger:managedObjectContext:
setIdentifier:
keyPathForBatteryLevel
processInfo
isLowPowerModeEnabled
getScoreForActivity:forBatteryLevel:isPluggedIn:isLowPowerModeEnabled:
batteryLevelKeyPath
setBatteryLevelKeyPath:
watchBatteryLevelKeyPath
setWatchBatteryLevelKeyPath:
watchPluginStatusKeyPath
setWatchPluginStatusKeyPath:
_batteryLevelKeyPath
_watchBatteryLevelKeyPath
_watchPluginStatusKeyPath
metricQueue
recordOccurrenceForKey:
updateAverageForKey:withNumerator:withDenominator:
recordPredictionAccuracyForActivityLevel:atDate:
knowledgeStore
predictorWithKnowledgeStore:
endDate
transitionDates
cacheDetailsForPredictionWithKey:
initialize
groupWithName:maxConcurrent:
setMaxConcurrent:
createGroup:
copyGroup:toManagedObject:
fetchGroupsUsingPredicate:context:
predicateForName:
keyPathForDeviceAssertionsHeldStatus
keyPathForNextUserVisibleWakeDate
getDeviceRestartForecast
periodWithStart:end:
currentCalendar
components:fromDate:
setHour:
setMinute:
setSecond:
dateFromComponents:
lastCacheDate
getUnlockAndSoftwareUpdateTimes
cacheSleepPeriod:end:period1:period2:
setLastCacheDate:
contains:
keyPathForLastUseDate
defaultDeviceRestartDateRangeWithDate:
deviceAssertionsHeld
setDeviceAssertionsHeld:
nextWakeRequest
setNextWakeRequest:
deviceRestartPeriod1
setDeviceRestartPeriod1:
deviceRestartPeriod2
setDeviceRestartPeriod2:
minDurationAfterLastUserInteraction
setMinDurationAfterLastUserInteraction:
minDurationBeforeNextScheduledWake
setMinDurationBeforeNextScheduledWake:
_deviceAssertionsHeld
_nextWakeRequest
_lastCacheDate
_deviceRestartPeriod1
_deviceRestartPeriod2
_minDurationAfterLastUserInteraction
_minDurationBeforeNextScheduledWake
_DASInCarPolicy
_DASActivityPolicy
NSObject
_DASDaemon
NSXPCListenerDelegate
_DASActivitySchedulerClient
_DASActivityGroupSchedulingAndIntrospecting
_DASActivityGroupScheduler
_DASActivityScheduler
_DASActivitySchedulerIntrospectingServer
_DASDefaultPairedPolicy
_DASActivityPolicyPredicting
_DASFileProtectionPolicy
_DASDeviceActivityPolicy
_DASPLLogger
_DASCoreDataStorage
_DASCoreDataStore
_DASDataStore
_DASPolicyCriterion
_DASPolicyRequiredValueRationale
_DASPolicyResponseRationale
_DASPolicyResponse
_DASNetworkEvaluationMonitor
_DASCarPlayPolicy
_DASActivityManagedObject
_DASGroupManagedObject
_DASPowerNapPolicy
_DASRequiresPluggedInPolicy
_DASPolicyManager
_DASBatchingQueue
_DASDaemonLogger
_DASConditionScore
_DASMemoryPressurePolicy
CoreDataProperties
_DASApplicationPolicy
_DASTriggerManagedObject
_DASNetworkQualityPolicy
_DASActivityRecorder
_DASThermalPolicy
_DASEnergyBudgetPolicy
_DASSleepWakeMonitor
_DASCallInProgressPolicy
_DASPhotosPolicy
_DASWatchBackgroundBudgetPolicy
_DASDaemonClient
_DASDataBudgetPolicy
_DASDataProtectionMaster
_DASDataProtectionStateMonitor
_DASTriggerRecord
_DASBatteryLevelPolicy
_DASMetricRecorder
_DASGroupSchedulingPolicy
_DASPredictionManager
_DASGroupRecorder
_DASRequiresRestartPolicy
@16@0:8
B24@0:8@16
B24@0:8@"_DASActivity"16
d24@0:8@16
d24@0:8@"_DASActivity"16
@32@0:8@16@24
@"_DASPolicyResponse"32@0:8@"_DASActivity"16@"<_CDContext>"24
B32@0:8@16@24
B32@0:8@"NSString"16@"<_CDContext>"24
B16@0:8
@"NSString"16@0:8
@"NSArray"16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
v16@0:8
v24@0:8@16
@"NSString"
@"NSArray"
@"_CDContextualKeyPath"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSArray"16
v24@0:8@"_DASActivityGroup"16
v32@0:8@16@24
v32@0:8@"_DASActivity"16@"_DASActivityGroup"24
v32@0:8@"_DASActivity"16@"NSString"24
v24@0:8@?16
v24@0:8@?<v@?@"NSArray">16
v24@0:8@"_DASActivity"16
v32@0:8@16@?24
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSDictionary">16
@28@0:8B16@20
v36@0:8d16d24B32
q36@0:8@16@24B32
Q24@0:8@16
@24@0:8@16
v40@0:8@16@24q32
v52@0:8@16@24@32Q40B48
v40@0:8@16@24@32
B40@0:8@16@24@32
@"NSMutableArray"
@"NSMutableDictionary"
@"NSDictionary"
@"<_CDLocalContext>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"PCPersistentTimer"
@"NSDate"
@"_DASNetworkEvaluationMonitor"
@"_DASSleepWakeMonitor"
@"<_DASDataStore>"
@"NSObject<OS_dispatch_source>"
@"_DASBatchingQueue"
d32@0:8@16@24
d32@0:8@"_DASActivity"16@"NSDate"24
@"_DKPredictor"
@"_DKPredictionTimeline"
v20@0:8B16
i16@0:8
v20@0:8i16
v36@0:8@16@24i32
@24@0:8d16
@44@0:8@16@24@32B40
@28@0:8@16B24
B32@0:8@16^@24
v28@0:8@16B24
B36@0:8@16@24B32
B28@0:8@16B24
@"NSURL"
@"NSManagedObjectModel"
@"_DASDataProtectionStateMonitor"
v24@0:8@"NSMutableSet"16
v48@0:8@16@24@32@40
v44@0:8@16@24@32B40
B20@0:8B16
@"_DASCoreDataStorage"
@40@0:8@16d24d32
d16@0:8
v24@0:8d16
v40@0:8@16d24d32
@"NSPredicate"
@24@0:8q16
@40@0:8q16d24@32
@40@0:8d16d24@32
@48@0:8d16q24d32@40
q16@0:8
v24@0:8q16
@"_DASPolicyResponseRationale"
v48@0:8@16@24@32^v40
@?16@0:8
@"NSMutableSet"
d28@0:8@16B24
@56@0:8@16d24Q32@40@?48
v24@0:8Q16
d40@0:8@16@24^q32
q24@0:8@16
d40@0:8q16Q24d32
d32@0:8q16Q24
d24@0:8Q16
@44@0:8@16@24B32d36
d40@0:8@16@24@32
q32@0:8@16q24
d48@0:8@16q24q32B40B44
@"<_CDContext>"
v36@0:8@16i24@28
d20@0:8i16
i24@0:8@16
@"NSXPCConnection"
@"_DASDaemon"
@24@0:8@?16
@"_DASDataProtectionMaster"
@"NSUUID"
d40@0:8@16d24B32B36
v32@0:8@16q24
v32@0:8q16@24
@40@0:8@16@24d32
B48@0:8@16@24^@32^@40
@"_CDDateRange"
Initializing DASDaemon...
Soliciting activities for resubmission.
Setting up timers.
Setting timer (waking=%u) between %s and %s
Loading saved state.
Loading group %@.
Adding a launch request for application %@ by activity %@
Removing a launch request for application %@ by activity %@
Received unentitled XPC connection. Dropping on the floor
Running activities : %@
Unable to run activities. Removing references: %@
Suspending Activites:%@
'%@' has compatibility score of %lf with %@. Bailing  out.
Suspending intensive activity '%@' because it has been running for too long
'%@' has compatibility score of %lf with '%@'. Relaxing scores.
'%@' DecisionToRun:%d (Bypasses Predictions)
'%@' CurrentScore: %lf, ThresholdScore: %lf DecisionToRun:%d
Schedule wake at %@ for activity name '%@'(leeway:%@)
Failed to schedule wake at %@ for activity name '%@'(leeway:%@)(ret:0x%x)
Submitted Activity: %@
Advancing start date for %@ by %3.1lf minutes
Starting group activity %@
Started activities: %@
Submitted activities: %@
NO LONGER RUNNING %@ ...Tasks running in group [%@] are %ld!
COMPLETED %@!
CANCELED: %@!
With %@ ...Tasks running in group %@ are %ld!
Submit activity: %@ in group: %@ with capacity: %ld
Force Running %lu activities
Force run activities unable to find activity %@
Attempting to suspend based on triggers: %@
Ignoring trigger %@ because conditions are deteriorating
Evaluating %llu activities based on triggers
Trigger: %@ is now [%@]
Periodic scoring of activities for optimal date
Arming timer for activity %@
Taking an assertion
Failed to create SystemActive asserion. ret:0x%x
Rescoring all %lu activities [%@]
Rescoring %lu activities due to trigger %@
No tasks blocked on %@
Activity %@ has been running for %@ minutes
Suspending activity %@ as it may block other high priority activities.
Suspending activity %@ because a required criterion is not satisfied.
Device Activity: %@
Low Likelihood is from %@ to %@
CoreData save error:  : %@, %@
Start network path monitoring for '%@'
Stop network path monitoring for '%@'
Plugin Likelihood: %@
%@:[
%@ ] sumScores:%lf, denominator:%f, FinalDecision: %@ FinalScore: %f}
Activity %@ bypasses predictions
Activity %@ start beyond the 18 hour interval
Activity %@: Optimal Score %.4f at %@ (Valid Until: %@)
TopN: %@
Timeline for %@: %@
Updating 'WiFiQualityPredictions' to %@
Updating 'CellQualityPredictions' to %@
Can't complete activity %@! It's not running!
Unentitled client tried to create an Activity Group. Dropping on the floor
