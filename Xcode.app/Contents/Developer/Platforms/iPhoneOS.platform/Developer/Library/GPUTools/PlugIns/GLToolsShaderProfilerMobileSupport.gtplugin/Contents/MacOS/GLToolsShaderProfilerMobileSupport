DYGLShaderProfilerMobileSupport
DYShaderAnalyzerNextGPU
isRenderBeginWithEvents:type:
isRenderEndWithEvents:type:
isFramebufferFetchWithEvents:type:
initWithDelegate:
deviceInfo
platform
metalPluginForPlatform:
shaderAnalyzer
respondsToSelector:
length
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:
_calculatePerDrawCallCostWithSampleData:targetIndex:
bytes
setTotalCost:
dictionaryWithCapacity:
setDrawCallCost:
numberWithUnsignedInt:
numberWithDouble:
setObject:forKeyedSubscript:
disassembleBinary:
setPerFileCost:
stringWithUTF8String:
_createPerFileCostDictionaryWith:lineOffset:
perFileCost
count
allValues
objectAtIndexedSubscript:
objectForKeyedSubscript:
setTotalPerLineCost:
setDrawCallPerLineCost:
setSourcePath:
setLineIndex:
setDisassembledLineInfo:
setOffset:
setDisasmSource:
setCost:
disassembledLineInfo
addObject:
setDiassemblyInfo:
dictionary
_createPerLineCostDictionaryWith:lineOffset:
supportRendererType:
isDisassemblerAvailable
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:
platformShaderAnalyzer
.cxx_destruct
_platformShaderAnalyzer
dataWithData:
writeToURL:atomically:
path
UTF8String
insructionInfoFromBinary:withStartOffset:forLength:targetIndex:
defaultManager
removeItemAtURL:error:
c28@0:8^v16I24
c20@0:8i16
c16@0:8
@24@0:8@16
@52@0:8@16@24i32@36@44
@28@0:8@16i24
@28@0:8r^{PerLineCost={vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}d}16I24
@28@0:8r^{PerFileCost={PerLineCost={vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}d}{unordered_map<unsigned int, PerFileCost::PerLineCost, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PerFileCost::PerLineCost> > >={__hash_table<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true> >=f}}}}16I24
@16@0:8
v16@0:8
@"<DYPShaderAnalyzer>"
MbP?
St12length_error
St11logic_error
St9exception
NSt3__117bad_function_callE
allDrawCall
perDrawCall
totalCost
perLineCost
__TEXT
__GPU_METADATA
16777235-0
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
