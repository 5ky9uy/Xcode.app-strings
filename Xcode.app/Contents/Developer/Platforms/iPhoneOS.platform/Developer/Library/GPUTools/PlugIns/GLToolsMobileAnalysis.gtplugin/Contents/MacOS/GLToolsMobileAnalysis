DYFKOpaqueAfterTransparent
DYFKAlphaTestWithoutDepthStencil
DYFKRecommendAlphaToCoverage
DYFKGPUWait
DYFKGPUWaitOnTexture
DYFKGPUWaitOnBuffer
DYFKGPUWaitOnReadPixels
DYFKCPUWaitOnGPUForGlFinish
DYFKPunchThrough
DYFKVertexShaderDataSpill
DYFKFragmentShaderDataSpill
DYFKDependentTextureSampling
DYFKProjectedTextureSampling
DYFKVertexShaderDynamicBranching
DYFKFragmentShaderDynamicBranching
DYFKVertexShaderDynamicBranchingAndMemoryAccess
DYFKFragmentShaderDynamicBranchingAndMemoryAccess
DYFKGenerateMipmapTextureSynchronization
DYFKTextureUploadNonOptimalGPUUtilization
DYFKSlowTextureUpload
DYFKSlowTextureUploadOnDraw
DYFKSlowTextureUploadPalettedTexture
DYFKSlowTextureUploadOnCopyTex
DYFKMSAAColorBufferLoad
DYFKLogicalBufferLoad
DYFKUnoptimizedMSAAResolve
DYFKLogicalBufferStore
DYFKNotPrewarmedShaderCompilation
DYFKNotPrewarmedShaderCompilationES11
DYFKOffChipMRT
DYFKValidationError
DYFKValidationComment
DYFKReportExtensionsUsed
DYFDKOpaqueAfterTransparent
DYFDKAlphaTestWithoutDepthStencil
DYFDKRecommendAlphaToCoverage
DYFURLOpaqueAfterTransparent
DYFURLAlphaTestWithoutDepthStencil
DYFURLRecommendAlphaToCoverage
DrawOrder
DYFDKGPUWait
DYFDKGPUWaitOnTexture
DYFDKGPUWaitOnBuffer
DYFDKGPUWaitOnReadPixels
DYFDKCPUWaitOnGPUForGlFinish
DYFDKPunchThrough
DYFDKVertexShaderDataSpill
DYFDKFragmentShaderDataSpill
DYFDKDependentTextureSampling
DYFDKProjectedTextureSampling
DYFDKVertexShaderDynamicBranching
DYFDKFragmentShaderDynamicBranching
DYFDKVertexShaderDynamicBranchingAndMemoryAccess
DYFDKFragmentShaderDynamicBranchingAndMemoryAccess
DYFDKGenerateMipmapTextureSynchronization
DYFDKTextureUploadNonOptimalGPUUtilization
DYFDKSlowTextureUpload
DYFDKSlowTextureUploadOnDraw
DYFDKSlowTextureUploadPalettedTexture
DYFDKSlowTextureUploadOnCopyTex
DYFDKMSAAColorBufferLoad
DYFDKLogicalBufferLoad
DYFDKUnoptimizedMSAAResolve
DYFDKLogicalBufferStore
DYFDKNotPrewarmedShaderCompilation
DYFDKNotPrewarmedShaderCompilationES11
DYFDKOffChipMRT
DYFURLGPUWait
DYFURLGPUWaitOnTexture
DYFURLGPUWaitOnBuffer
DYFURLGPUWaitOnReadPixels
DYFURLCPUWaitOnGPUForGlFinish
DYFURLPunchThrough
DYFURLVertexShaderDataSpill
DYFURLFragmentShaderDataSpill
DYFURLDependentTextureSampling
DYFURLProjectedTextureSampling
DYFURLVertexShaderDynamicBranching
DYFURLFragmentShaderDynamicBranching
DYFURLVertexShaderDynamicBranchingAndMemoryAccess
DYFURLFragmentShaderDynamicBranchingAndMemoryAccess
DYFURLGenerateMipmapTextureSynchronization
DYFURLTextureUploadNonOptimalGPUUtilization
DYFURLSlowTextureUpload
DYFURLSlowTextureUploadOnDraw
DYFURLSlowTextureUploadPalettedTexture
DYFURLSlowTextureUploadOnCopyTex
DYFURLMSAAColorBufferLoad
DYFURLLogicalBufferLoad
DYFURLUnoptimizedMSAAResolve
DYFURLLogicalBufferStore
DYFURLNotPrewarmedShaderCompilation
DYFURLNotPrewarmedShaderCompilationES11
DYFURLOffChipMRT
The fragment shader in %@
The vertex shader in %@
DriverEvents
v28@?0r^{FramebufferAttachment<GPUTools::AnnotatedBaseObjectTypes>=QQiiiiiiiiiiiiiiiii{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}}8i16^B20
 Your application used the following feature
: %@.
these
this
features
feature
 If possible, rework your rendering pipeline to avoid using %@ %@.
 If you must draw using %@ %@, attempt to do so at the end of each frame while covering the fewest number of pixels possible.
GLESExtensionsUsed
APPLE_copy_texture_levels
APPLE_texture_format_BGRA8888
EXT_read_format_bgra
EXT_debug_label
EXT_debug_marker
EXT_texture_filter_anisotropic
IMG_texture_compression_pvrtc
IMG_read_format
APPLE_tile_order_rot
APPLE_get_framebuffer_texture_target
KHR_texture_compression_astc_ldr
APPLE_texture_compression_astc_ldr
APPLE_framebuffer_multisample
APPLE_texture_max_level
EXT_blend_minmax
EXT_map_buffer_range
EXT_discard_framebuffer
EXT_texture_storage
OES_depth24
OES_element_index_uint
OES_mapbuffer
OES_packed_depth_stencil
OES_rgb8_rgba8
OES_vertex_array_object
OES_fbo_render_mipmap
EXT_pvrtc_sRGB
APPLE_rgb_422
EXT_color_buffer_half_float
EXT_separate_shader_objects
EXT_shadow_samplers
APPLE_texture_filter_cubic
APPLE_clip_distance
EXT_shader_framebuffer_fetch
EXT_texture_lod_bias
OES_blend_equation_separate
OES_blend_func_separate
OES_blend_subtract
OES_framebuffer_object
OES_stencil_wrap
OES_stencil8
OES_texture_mirrored_repeat
OES_draw_texture
OES_matrix_palette
APPLE_texture_2D_limited_npot
EXT_instanced_arrays
APPLE_sync
EXT_occlusion_query_boolean
EXT_sRGB
EXT_texture_rg
OES_depth_texture
OES_texture_float
OES_texture_half_float
APPLE_texture_packed_float
APPLE_color_buffer_packed_float
OES_texture_half_float_linear
EXT_draw_instanced
EXT_shader_texture_lod
OES_standard_derivatives
DYFDKReportExtensionsUsed
DYFURLReportExtensionsUsed
i12@?0I8
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
GLESValidator
unsupported OpenGL API version: %d
Unusually high number of %@ objects <%d>
'%@' is 0, Did you mean to pass in a null pointer?
(MaxUnits==%d): Texture-Unit out of range
target
sfactor
dfactor
(invalid size=%d): Invalid size for buffer object
usage
: (invalid offset=0x%08x): Invalid offset for buffer object
(invalid mask=0): Clear mask should not be zero
(invalid mask=0x%08x): Invalid bit set in Clear mask
(invalid stencil=%d): Clear stencil out of range[0..255]
internalformat
Negative mip level only supported with paletted textures when OES_compressed_paletted_texture present
Paletted texture formats do not support level > 0. See documentation on OES_compressed_paletted_texture for more details.
Width<%d> is not a power of two
Height<%d> is not a power of two
Border must be zero
format
xoffset<%d> != 0
yoffset<%d> != 0
xoffset<%d> is not a multiple of four
yoffset<%d> is not a multiple of four
Width<%d> must equal height<%d> for cubemap faces
mode
buffer
texture
func
near
clipplane<%d> out of range [0..%d]
first<%d> < 0
type
%@ not supported without GL_EXT_instanced_arrays.
(invalid index=%d): unit must be >= 0 & <=%d
pname
pname(aka value)
array
Invalid format(0x%@), type(0x%@) combination
value
fail
zfail
zpass
Invalid internal format(%@), format(%@) and type(%@) combination
Invalid format(%@) type(%@) combination
Width<%d> is not a power of two and level != 0
Height<%d> is not a power of two and level != 0
param
GL_TEXTURE_BASE_LEVEL must be positive <%d>
level<%d> > Max levels
%@ not supported without OES_framebuffer_object.
framebuffer
renderbuffer
attachment
renderbuffertarget
textarget
glFramebufferTexture2D() level<%d> not supported without OES_fbo_render_mipmap extension
Width<%d> greater than GL_MAX_RENDERBUFFER_SIZE<%d>
Height<%d> greater than GL_MAX_RENDERBUFFER_SIZE<%d>
%@ not supported without APPLE_framebuffer_multisample.
%@ not supported without OES_blend_subtract or GL_EXT_blend_minmax.
%@ not supported without OES_blend_equation_separate.
modeRGB
modeAlpha
%@ not supported without OES_blend_func_separate.
B12@?0I8
srcRGB
dstRGB
srcAlpha
dstAlpha
%@ not supported without OES_mapbuffer.
access
%@ not supported without EXT_discard_framebuffer.
attachments[]
numAttachments<%d> out of range[0..%d]
%@ not supported without OES_vertex_array_object.
vertex array
%@ not supported without EXT_debug_label.
%@ not supported without EXT_debug_marker.
%@ not supported without EXT_map_buffer_range.
(invalid access=0x%08x): Invalid bits
(invalid access=0x%08x): GL_MAP_INVALIDATE_RANGE_BIT & GL_MAP_INVALIDATE_BUFFER_BIT are not valid with GL_MAP_READ_BIT
(invalid access=0x%08x): GL_MAP_FLUSH_EXPLICIT_BIT is not valid without GL_MAP_WRITE_BIT
%@ not supported without APPLE_copy_texture_levels.
%@ not supported without APPLE_sync.
condition
(invalid flags=0x%08x): Invalid bits
%@ not supported without EXT_texture_storage.
floating point argument '%@' is out of range[%f..%f]
(invalid enum=0x%04x): Invalid enum for argument '%@'
(invalid ref==%f): Alpha Reference out of range [0.0..1.0]
(invalid plane=%d: Clipping plane out of range[0..%d]
green
blue
alpha
left
right
bottom
(invalid light=GL_LIGHT%d: Light out of range[GL_LIGHT0..GL_LIGHT%d]
face
<pname> only allowed when <target> is GL_TEXTURE_ENV
GL_COORD_REPLACE only allowed when <target> is GL_POINT_SPRITE
GL_TEXTURE_LOD_BIAS_EXT only allowed when <target> is GL_TEXTURE_FILTER_CONTROL_EXT
opcode
size
angle
Scale <%f> must be 1.0, 2.0, or 4.0
%@ not supported without GL_OES_draw_texture.
coords.X
coords.Y
coords.Z
coords.W
coords.H
%@ not supported without GL_OES_matrix_palette.
Matrix Palette Index<%d> out of range [0..%d]
Invalid size<%d>, Max supported on this profile is <%d>
(MaxVtxAttribs==%d): Vertex attribute index <%d> is out of range
Uniform location index <%d> is out of range
shaderType
pname=GL_PROGRAM_SEPARABLE not supported without GL_EXT_separate_shader_objects.
precisionType
binaryformat
sfail
dpfail
dppass
%@ not supported without EXT_occlusion_query_boolean.
query
%@ not supported without GL_EXT_separate_shader_objects.
pipeline
program pipeline
(invalid stages=0x%08x): Invalid bits
bufs[]
start(%d) >= end(%d)
Invalid format (%@), type (%@) & internal format (%@) combination
Compressed format (%@) not supported for 3D textures
(invalid mask=0x%08x): Invalid bit set in mask
(invalid mask=0x%08x): GL_LINEAR filter is invalid for depth or stencil blits
filter
readTarget
writeTarget
(invalid buffer=%@): buffer must be GL_COLOR || GL_STENCIL for glClearBufferiv
(invalid drawbuffer=%@): drawbuffer must be >= 0 & <= %d for glClearBufferiv with GL_COLOR
(invalid drawbuffer=%@): drawbuffer must be 0 for glClearBufferiv with GL_STENCIL
(invalid buffer=%@): buffer must be GL_COLOR for glClearBufferuiv
(invalid drawbuffer=%@): drawbuffer must be >= 0 & <= %d for glClearBufferuiv with GL_COLOR
(invalid buffer=%@): buffer must be GL_COLOR || GL_DEPTH for glClearBufferfv
(invalid drawbuffer=%@): drawbuffer must be >= 0 & <= %d for glClearBufferfv with GL_COLOR
(invalid drawbuffer=%@): drawbuffer must be 0 for glClearBufferfv with GL_DEPTH
depth
(invalid buffer=%@): buffer must be GL_DEPTH_STENCIL for glClearBufferfi
(invalid drawbuffer=%@): drawbuffer must be 0 for glClearBufferfi
(invalid name=%@): name must be GL_EXTENSIONS for glGetStringi
(invalid index=%u): index must be < GL_NUM_EXTENSIONS for glGetStringi
sampler
(invalid unit=%d): unit must be >= 0 & <=%d
primitiveMode
transform feedback
(invalid index=%d): index must be >= 0 & <= GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS <%d>
(invalid index=%d): index must be >= 0 & <= GL_MAX_UNIFORM_BUFFER_BINDINGS <%d>
bufferMode
St12length_error
St11logic_error
St9exception
init
startNewRenderTarget
processFunction:stateMirrorRetCode:
engine
heuristicPool
graphicsEngineID
getStateMirrorContext:
reportOpaqueAfterTransparent:
reportAlphaTestWithoutDepthOrStencil:
graphicsEngineInfoProvider
rendererType
isMultiSampledRenderingEnabledForContext:
recommendAlphaToCoverage:
startBlock:
finding
setKind:
setWarningLevel:
setClassification:
appendDetailStrings:fromEngine:
addLinks:fromKey:
addFunctionDerivedDetails:
addFunctionIndex:
findingPool
addFinding:
identifier
enableBlend
enableAlphaTest
enableDepthTest
enableStencilTest
nonZeroDepthMask
nonZeroStencilMask
hasDrawnOpaqueGeometry
hasDrawnAlphaTestedGeometry
hasDrawnTransparentGeometry
hasReportedOpaqueAfterTransparent
hasReportedAlphaTestWithoutDepthOrStencil
lastOpaqueDrawFuncIndex
lastTransparentDrawFuncIndex
lastAlphaTestDrawFuncIndex
lastAlphaTestEnableFuncIndex
lastBindProgramPipelineFuncIndex
perFrameFindingStats
numberWithUnsignedInt:
setObject:forKey:
appendStatistics:
endBlock:
reportGPUWaitOnTexture:
reportGPUWaitOnBuffer:
reportGPUWaitOnReadPixels:
reportGPUWaitOnFinish:
reportGPUWait:
deviceInfo
gputoolsVersionInfo
interposeVersionGL
reportPunchthrough:punchThroughReasons:
reportVertexShaderSpill:
reportFragmentShaderSpill:
reportDependentTextureSampling:
reportProjectedTextureMapping:
reportVertexShaderUsesDynamicBranchingAndMainMemory:
reportVertexShaderUsesDynamicBranching:
reportFragmentShaderUsesDynamicBranchingAndMainMemory:
reportFragmentShaderUsesDynamicBranching:
reportGenMipmapSyncTexture:
reportTextureUploadForcedRenderEnd:
reportSlowTextureUploadOnCopyTex:
reportSlowTextureUploadPalettedTexture:
reportSlowTextureUpload:
reportSlowTextureUploadOnDraw:
frameNum
reportNotPrewarmedShaderCompilationES11:
reportNotPrewarmedShaderCompilation:
reportOffChipMRT:
analyzeBufferLoadsAndStores:stateMirrorRetCode:
reportBufferStore
newSuboptimalMSAAResolveFinding
_drawFramebufferHasRenderbufferColorAttachment
flushSuboptimalMSAAResolveFinding
reportMSAAColorLoad:
_isAnyDrawFramebufferColorAttachmentUsingRetainedBacking
reportBufferLoad:
singleFrameMode
notifyCompletion
initWithPunchThroughReasons:
setGenerator:
setGraphicsEngineID:
setResourceGroupID:
appendBoundObjectDescription:target:andShortDesc:
boundObjectDescription:
stringWithFormat:
appendShortDetails:
numReasons
stringByAppendingString:
reasonsString
stringByAppendingFormat:
.cxx_destruct
_suboptimalMSAAResolveFinding
_renderPasses
_texLoads
_flushes
_suboptimalMSAAResolveCount
_msaaResolveCount
_frameOfFirstCompile
_bDriverHasCompiledShader
_bHasUploadedCubemap
_storeFunction
_lastFBOBind
initWithIsPostMirrorHeuristic:
addObject:
_enableExtension:flag:
_checkForExtension:string:extensionFuncs:count:flag:
_processFunctionShared:
_processFunctionES11AndES20:
_processFunctionES20AndES30:
_processFunctionES11:
_processFunctionES20:
_processFunctionES30:
getLocalizedString:
mutableCopy
localizedStandardCompare:
sortUsingSelector:
componentsJoinedByString:
appendString:
setAdditionalData:
appendDetails:
.cxx_construct
_extensionStrings
_apiDict
_extensionsUsed
_lastProcessedFunc
initWithConstraints:andValidator:
constraints
validator
_constraints
_validator
T@"DYGLProfileConstraints",R,N,V_constraints
T@"<DYGLValidatorProtocol>",R,N,V_validator
doProcessFunction:
platformConstraints
doStartBlock:
doEndBlock:
bindProfile:
activeProfile
_activeProfile
T@"DYGLProfile",R,N,V_activeProfile
bindHeuristic:andProfile:
refToConstraintsData
registerFuncTable
dealloc
functionIndex
performSelector:
_addInternalFinding:withDetails:
_isValidSizedInternalFormat:andFormat:andType:
_isValidUnsizedFormat:andType:
_isValidExtensionFormat:type:
_internalFormatOfReadBufferForContext:
checkValidTextureTarget2D:includingFaces:
checkValidTextureTarget3D:
checkBufferTarget:
checkValidTextureTarget:includingFaces:
checkBufferUsage:
checkTextureCompressedFormat:
isPalettedFormat:
checkETCFormat:
checkCopyTextureFormat:
isCubeFace:
checkDeleteObjects:withDesc:
Xable
checkForFramebufferFetch
checkPrimitiveMode:
checkElementType:
checkEXTInstancedArrays
GetValue
GetBufferParameter
GetTexParameter
checkReadPixelsFormat:andType:
_isStencilEnum:
checkTextureInternalFormat:
checkTextureFormat:
checkTextureType:
checkValidTextureFormat:withType:andInternalFormat:
validateTexParam:name:enumVal:intVal:
getMaxTexLevels:
_checkOES_framebuffer_object
getMaxColorAttachment
checkFramebufferTarget:
checkFramebufferAttachment:
checkRenderbufferInternalFormat:includingDepthStencil:
_checkAPPLE_framebuffer_multisample
_checkOES_blend_subtract
_checkOES_blend_equation_separate
_checkOES_blend_func_separate
_checkOES_mapbufferOrES3
_checkOES_mapbuffer
_checkEXT_discard_framebuffer
InvalidateFramebuffer
_checkOES_vertex_array_object
_checkEXT_debug_label
_isValidObjectLabelType:
_checkEXT_debug_marker
_checkEXT_map_buffer_range
_checkAPPLE_copy_texture_levels
_checkAPPLE_sync
_checkEXT_texture_storage
checkTexStorageInternalFormat:
ActiveTexture
addFunc:forEnum:
BindBuffer
BindTexture
BlendFunc
BufferData
BufferSubData
Clear
ClearColor
ClearDepthf
ClearStencil
ColorMask
CompressedTexImage2D
CompressedTexSubImage2D
CopyTexImage2D
CopyTexSubImage2D
CullFace
DeleteBuffers
DeleteTextures
DepthFunc
DepthMask
DepthRangef
DepthRangex
Disable
DrawArrays
DrawElements
Enable
Finish
Flush
FrontFace
GenBuffers
GenTextures
GetBooleanv
GetFixedv
GetFloatv
GetIntegerv
GetBufferParameteriv
GetError
GetString
GetTexParameterfv
GetTexParameteriv
GetTexParameterxv
Hint
IsBuffer
IsEnabled
IsTexture
LineWidth
PixelStorei
PolygonOffset
ReadPixels
SampleCoverage
Scissor
StencilFunc
StencilMask
StencilOp
TexImage2D
TexParameterf
TexParameteri
TexParameterx
TexParameterfv
TexParameteriv
TexParameterxv
TexSubImage2D
Viewport
BindFramebuffer
BindRenderbuffer
CheckFramebufferStatus
DeleteFramebuffers
DeleteRenderbuffers
GenerateMipmap
GenFramebuffers
GenRenderbuffers
GetFramebufferAttachmentParameteriv
GetRenderbufferParameteriv
IsRenderbuffer
IsFramebuffer
RenderbufferStorage
RenderbufferStorageMultisample
ResolveMultisampleFramebuffer
BlendEquation
BlendEquationSeparate
BlendFuncSeparate
GetBufferPointervOES
MapBufferOES
UnmapBufferOES
DiscardFramebuffer
BindVertexArray
DeleteVertexArrays
GenVertexArrays
IsVertexArray
LabelObject
GetObjectLabel
InsertEventMarker
PushGroupMarker
PopGroupMarker
MapBufferRange
FlushMappedBufferRange
CopyTextureLevels
FenceSync
IsSync
DeleteSync
ClientWaitSync
WaitSync
GetSynciv
GetInteger64v
TexStorage2D
VertexAttribDivisor
DrawArraysInstanced
DrawElementsInstanced
registerCommonFuncTable
doRegisterFuncTable
getHeuristic
addErrorFinding:
initWithFormat:arguments:
addCommentFinding:
isEqual:
class
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
LineWidthx
FramebufferRenderbuffer
FramebufferTexture2D
_heuristic
_currentFunc
_funcTablePrivate
_profile
_constraintsData
_CheckTextureUnit
XableClientState
ClipPlane
checkLightIndex
GetLight
GetMaterial
GetTexEnv
Light
LightV
LightModel
LightModelV
Material
MaterialX
MaterialXv
LoadMatrixf
PointParameter
TexEnv
_checkOES_draw_texture
AlphaFunc
AlphaFuncx
ClientActiveTexture
Color4f
Color4x
Color4ub
ColorPointer
DisableClientState
EnableClientState
Fogf
Fogx
GetClipPlane
GetLightfv
GetLightxv
GetMaterialfv
GetMaterialxv
GetPointerv
GetTexEnvfv
GetTexEnviv
GetTexEnvxv
Lightf
Lightx
Lightfv
Lightxv
LightModelf
LightModelx
LightModelfv
LightModelxv
LoadIdentity
LoadMatrixx
LogicOp
Materialf
Materialx
Materialfv
Materialxv
MatrixMode
MultiTexCoord4f
MultiTexCoord4x
MultMatrixf
MultMatrixx
Normal3f
Normal3x
NormalPointer
Ortho
PointParameterf
PointParameterx
PointSize
PointSizePointerOES
PopMatrix
PushMatrix
Rotatef
Rotatex
Scalef
Scalex
ShadeModel
TexCoordPointer
TexEnvf
TexEnvi
TexEnvx
Translatef
Translatex
VertexPointer
DrawTexsOES
DrawTexiOES
DrawTexfOES
DrawTexxOES
DrawTexsvOES
DrawTexivOES
DrawTexfvOES
DrawTexxvOES
CurrentPaletteMatrixOES
LoadPaletteFromModelViewMatrixOES
MatrixIndexPointerOES
WeightPointerOES
Frustum
MultiTexCoord4
_checkOES_matrix_palette
checkVertexAttribIndex:
checkUniformLocation:
GetVertexAttribV
_checkStencilFace:
_checkStencilOp:
_checkAPPLEOcclusionQueryBoolean
_checkQueryTarget:
_checkEXT_separate_shader_objects
AttachShader
BlendColor
CompileShader
CreateProgram
CreateShader
DeleteProgram
DisableVertexAttribArray
EnableVertexAttribArray
GetActiveAttrib
GetActiveUniform
GetAttachedShaders
GetAttribLocation
GetProgramInfoLog
GetProgramiv
GetShaderInfoLog
GetShaderPrecisionFormat
GetShaderSource
GetShaderiv
GetUniform
GetUniformLocation
GetVertexAttribfv
GetVertexAttribiv
GetVertexAttribPointerv
LinkProgram
ReleaseShaderCompiler
ShaderBinary
ShaderSource
StencilFuncSeparate
StencilMaskSeparate
StencilOpSeparate
Uniform
Uniform1f
Uniform2f
Uniform3f
Uniform4f
UseProgram
ValidateProgram
VertexAttrib1f
VertexAttrib2f
VertexAttrib3f
VertexAttrib4f
VertexAttrib1fv
VertexAttrib2fv
VertexAttrib3fv
VertexAttrib4fv
VertexAttribPointer
BeginQuery
DeleteQueries
EndQuery
GenQueries
GetQuery
GetQueryObjectuiv
IsQuery
ActiveShaderProgram
BindProgramPipeline
CreateShaderProgram
DeleteProgramPipelines
GenProgramPipelines
GetProgramPipelineInfoLog
GetProgramPipelineiv
IsProgramPipeline
ProgramParameteri
UseProgramStages
ValidateProgramPipeline
ProgramUniform
ProgramUniform1f
ProgramUniform2f
ProgramUniform3f
ProgramUniform4f
DeleteShader
_isColorRenderable:
_isDepthRenderable:
_isStencilRenderable:
SamplerParameter
_BindBufferIndexed
ReadBuffer
DrawBuffers
DrawRangeElements
TexImage3D
TexSubImage3D
CopyTexSubImage3D
CompressedTexImage3D
CompressedTexSubImage3D
BlitFramebuffer
FramebufferTextureLayer
GetBufferParameteri64v
GetIntegeri_v
GetInteger64i_v
CopyBufferSubData
VertexAttribI4i
VertexAttribI4ui
VertexAttribI4iv
VertexAttribI4uiv
VertexAttribIPointer
GetVertexAttribIiv
GetVertexAttribIuiv
GetFragDataLocation
ClearBufferiv
ClearBufferuiv
ClearBufferfv
ClearBufferfi
GetStringi
GetUniformIndices
GetActiveUniformsiv
GetUniformBlockIndex
GetActiveUniformBlockiv
GetActiveUniformBlockName
UniformBlockBinding
GenSamplers
DeleteSamplers
IsSampler
BindSampler
SamplerParameteri
SamplerParameteriv
SamplerParameterf
SamplerParameterfv
GetSamplerParameteriv
GetSamplerParameterfv
BeginTransformFeedback
EndTransformFeedback
BindTransformFeedback
GenTransformFeedbacks
IsTransformFeedback
PauseTransformFeedback
ResumeTransformFeedback
BindBufferRange
BindBufferBase
TransformFeedbackVaryings
GetTransformFeedbackVarying
GetProgramBinary
ProgramBinary
InvalidateSubFramebuffer
TexStorage3D
GetInternalFormativ
DeleteTransformFeedbacks
DYGLAnalyzerHeuristic_DrawOrder
DYGLAnalyzerHeuristic_DriverEvents
DYGLAnalyzerHeuristic_ExtensionsUsed
DYGLProfile
DYGLAnalyzerHeuristic_Validate
DYGLValidatorES
DYGLValidatorProtocol
NSObject
DYGLValidatorES11
DYGLValidatorES20
DYGLValidatorES30
@16@0:8
v28@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16I24
v20@0:8i16
v16@0:8
v24@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
B16@0:8
@"DYGLAnalyzerFinding"
@20@0:8c16
v32@0:8@16^B24
v56@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@24r^{ExtensionFunc=IiI}32Q40^B48
@"NSMutableArray"
{unordered_map<unsigned long long, DYOpenGLAPI, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, DYOpenGLAPI>>>="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>>>="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::hash<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::equal_to<unsigned long long>, true>>="__value_"f}}}
{?="mbGL_OES_blend_subtract"B"mbGL_OES_compressed_paletted_texture"B"mbGL_OES_depth24"B"mbGL_OES_draw_texture"B"mbGL_OES_framebuffer_object"B"mbGL_OES_mapbuffer"B"mbGL_OES_matrix_palette"B"mbGL_OES_point_size_array"B"mbGL_OES_point_sprite"B"mbGL_OES_read_format"B"mbGL_OES_rgb8_rgba8"B"mbGL_OES_texture_mirrored_repeat"B"mbGL_EXT_texture_lod_bias"B"mbGL_IMG_read_format"B"mbGL_IMG_texture_compression_pvrtc"B"mbGL_IMG_texture_format_BGRA8888"B"mbGL_EXT_texture_filter_anisotropic"B"mbGL_APPLE_framebuffer_multisample"B"mbGL_APPLE_texture_format_BGRA8888"B"mbGL_APPLE_texture_max_level"B"mbGL_EXT_discard_framebuffer"B"mbGL_EXT_read_format_bgra"B"mbGL_OES_blend_equation_separate"B"mbGL_OES_blend_func_separate"B"mbGL_OES_fbo_render_mipmap"B"mbGL_OES_packed_depth_stencil"B"mbGL_OES_stencil8"B"mbGL_EXT_blend_minmax"B"mbGL_APPLE_texture_2D_limited_npot"B"mbGL_OES_stencil_wrap"B"mbGL_APPLE_rgb_422"B"mbGL_EXT_shader_texture_lod"B"mbGL_OES_depth_texture"B"mbGL_OES_standard_derivatives"B"mbGL_OES_texture_float"B"mbGL_OES_texture_half_float"B"mbGL_APPLE_texture_packed_float"B"mbGL_OES_vertex_array_object"B"mbGL_OES_element_index_uint"B"mbGL_APPLE_clip_distance"B"mbGL_OES_texture_half_float_linear"B"mbGL_EXT_debug_label"B"mbGL_EXT_debug_marker"B"mbGL_EXT_occlusion_query_boolean"B"mbGL_EXT_shadow_samplers"B"mbGL_EXT_texture_rg"B"mbGL_EXT_separate_shader_objects"B"mbGL_EXT_color_buffer_half_float"B"mbGL_EXT_color_buffer_float"B"mbGL_APPLE_color_buffer_packed_float"B"mbGL_EXT_shader_framebuffer_fetch"B"mbGL_EXT_texture_storage"B"mbGL_EXT_map_buffer_range"B"mbGL_APPLE_sync"B"mbGL_APPLE_copy_texture_levels"B"mbGL_EXT_sRGB"B"mbGL_EXT_pvrtc_sRGB"B"mbGL_EXT_instanced_arrays"B"mbGL_EXT_draw_instanced"B"mbGL_APPLE_texture_filter_cubic"B"mbGL_APPLE_tile_order_rot"B"mbGL_APPLE_get_framebuffer_texture_target"B"mbGL_KHR_texture_compression_astc_ldr"B"mbGL_APPLE_texture_compression_astc_ldr"B"mbGL_APPLE_texture_compression_astc_lowprecision"B}
@32@0:8@16@24
@"DYGLProfileConstraints"
@"<DYGLValidatorProtocol>"
v24@0:8@16
@"DYGLProfile"
I24@0:8^{ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes>={DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<int, 4>=[4i]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 2>=[2f]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 3>=[3f]}}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<int, 4>=[4i]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated>=iiI}{DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated>=iiI}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated>=iiI}{DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated>=iiI}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<int, 4>=[4i]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}[32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}][16{DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<double, 4>=[4d]}}][16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}]{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}[8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}][8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}][32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}]{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<int, GPUTools::CStateBaseAnnotated>=iii}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 3>=[3f]}}[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 3>=[3f]}}][8{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}][8{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}][8{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}][8{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}][8{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}]{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated>=ii{VecN<float, 4>=[4f]}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated>=ii{StateEnum=i}}][32{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}][32{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}][32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated>=ii{StateBool=i}}][32{DYStateElement<float, GPUTools::CStateBaseAnnotated>=iif}]{DYStateElement<std::__1::vector<DYMtx>, GPUTools::CStateBaseAnnotated>=ii{vector<DYMtx, std::__1::allocator<DYMtx>>=^{?}^{?}{__compressed_pair<DYMtx *, std::__1::allocator<DYMtx>>=^{?}}}}{DYStateElement<std::__1::vector<DYMtx>, GPUTools::CStateBaseAnnotated>=ii{vector<DYMtx, std::__1::allocator<DYMtx>>=^{?}^{?}{__compressed_pair<DYMtx *, std::__1::allocator<DYMtx>>=^{?}}}}[32{DYStateElement<std::__1::vector<DYMtx>, GPUTools::CStateBaseAnnotated>=ii{vector<DYMtx, std::__1::allocator<DYMtx>>=^{?}^{?}{__compressed_pair<DYMtx *, std::__1::allocator<DYMtx>>=^{?}}}}][16{DYStateElement<DYMtx, GPUTools::CStateBaseAnnotated>=ii{?=[4[4f]]}}][64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnnotated>=iiQ}][64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnnotated>=iiQ}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}]{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}[64{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}]{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}]{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated>=ii{BindingPoint=ii}}{DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnnotated>=ii{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}{DYStateElement<std::__1::vector<std::__1::basic_string<char>>, GPUTools::CStateBaseAnnotated>=ii{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char>>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}}}}{DYStateElement<long long, GPUTools::CStateBaseAnnotated>=iiq}{DYStateElement<long long, GPUTools::CStateBaseAnnotated>=iiq}{DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnnotated>=ii{StateErrorStatus=i}}{ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>>={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>>=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>>=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>>={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>>=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>>=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>>={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>>=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>>=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>>={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>>=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>>=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>>={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>>=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>>=f}}}i}Q^{SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes>}^{StateMirrorManager<GPUTools::AnnotatedBaseObjectTypes>}Q}16
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8^{DYGLValidatorProcFnData=^{Function}I}16
v32@0:8@16@24
v28@0:8:16I24
B20@0:8I16
B24@0:8I16I20
B28@0:8I16I20I24
B24@0:8I16B20
i20@0:8I16
I16@0:8
v32@0:8I16I20I24i28
@"DYGLAnalyzerHeuristic"
r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}
^{_FuncTablePrivate={unordered_map<int, SEL *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, SEL *>>>={__hash_table<std::__1::__hash_value_type<int, SEL *>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SEL *>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SEL *>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SEL *>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SEL *>, std::__1::hash<int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SEL *>, std::__1::equal_to<int>, true>>=f}}}}
r^{?=iiii{?=ii}{?=iii}{?=i}{?=ii}i^{?}ffiiiiiiiiii{?=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}}
v20@0:8I16
