__kIMChatDowngradeStatusChanged
__kIMChatServiceForSendingIDSQueryControllerListenerID
__kIMChatSendingServiceChangedNotification
__kIMChatReceivedDowngradeNotification
__kIMChatRecipientReceivedDowngradeNotification
__kIMChatDowngradeNotificationIMHandleKey
CKChatPreviousAccountsDictionaryKey
ServiceForSending
(-refreshServiceForSending) bailing, current service isn't useful: %@, chat %@
(-refreshServiceForSending) bailing, don't downgrade named iMessage group chat: %@
@16@?0@"IMHandle"8
(-refreshServiceForSending) addresses: %@, chat: %@
(-refreshServiceForSending) bailing, current account once we got the IDS callback service isn't useful: %@
Chat is downgraded, overriding IDS: allAddressesiMessageCapable(%@), chat: %@
Forcing MMS: allAddressesiMessageCapable(%@)
This was iMessage group, don't downgrade: %@
Targeting to iMessage because we weren't iMessage before: %@
%@ was an email, so not retargeting
my caller id was an email, so not retargeting
refresh, current service was iMessage, and a recipient/me was an email, so not retargeting
refresh, will retarget chat to SMS/MMS: %@
Nothing to do, were on the service we wanted: allAddressesiMessageCapable(%@): chat: %@
(-refreshServiceForSending) Old account: %@, new account: %@, chat: %@
v24@?0B8@"NSDictionary"12c20
Chat
Request to send downgrade notification to: %@  in chat: %@
Account is not active, not sending downgrade notification
Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s
-[IMChat(IMChat_ServiceForSending) _handleDeliveredCommand:]
-[IMChat(IMChat_ServiceForSending) _handleIncomingCommand:]
Targeting chat from [%@] to [%@] with preference to previous account: %@
Account returned [%@] did not match the service we wanted [%@], moving to the default account
Account returned [%@] is not operational [%@], moving to the default account
Targeting chat from [%@] to [%@] with using the default account: %@
In (%s), expected to target to a useable account, but didn't have one
-[IMChat(IMChat_ServiceForSending) _targetToService:newComposition:]
Downgrade
Changing downgrade state for chat (%@) from `%@` to `%@` -- initial:%@   checkAgainInterval:%5.2f
Posting downgrade state changed notification
Scheduling timer to recalculate downgrade time in %d seconds
Downgrade state recalculate timer fired
Marking chat (%@) as downgraded because of %@ automatic downgrades, %@ manual downgrades, with %5.2f seconds until next update check.
Marking chat (%@) as upgraded because there are no active downgrade markers.
Marking chat (%@) as upgraded because it's been %5.2f seconds since downgrade, larger than threshold for %ld (%@ auto, %@ manual) consecutive downgraded messages (%5.2f)
Marking self (%@) as upgraded because it's time since downgrade is in the future (%@). This should not happen. File a radar.
Marking self (%@) as upgraded because it does not have a downgrade time specified
iMessage is not operational: %@, chat: %@
pastMaxNumberOfMMSRecipients %lld, participants: %@
suppressAccountRetargetingForNamedGroupConversation
TB,R,N
forceMMS
TB,N
IMChatCalculateServiceForSending iMessage not available, bailing
Calculating cached values for addresses: %@
Finished calculating cached values: %@
destination is invalid: %@
destination is unknown: %@
Previous service was not imessage, saying we aren't iMessage capable
IDS didn't give us back all the results we asked about: %@
Choosing all iMessageable(%@) perRecipientAvailability:(%@): 
B16@?0@"NSDictionary"8
Cache said we weren't imessageable, lets refresh with the server
IDS refresh server status complete: %@
Finished evaluating based on refresh: allAddressesiMessageCapable(%@)
v16@?0@"NSDictionary"8
Cache said we were capable of iMessage, not querying
IMChatCalculateServiceForSending iMessage not available (%@) or no addresses, bailing
IMChatCalculateServiceForSending forcing MMS
NewCompose: Calculating cached values for addresses: %@
NewCompose: destination is invalid: %@
NewCompose: destination is unknown: %@
NewCompose: IDS didn't give us back all the results we asked about: %@
NewCompose allAddressesiMessageCapable: %@
Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): NewCompose: No iMessage, no SMS, !allAddressesiMessageCapable
Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): NewCompose: Not all iMessageable, email recipients, no MMS
Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): NewCompose: Too many recipients
Choosing all iMessageable(%@) perRecipientAvailability:(%@): NewCompose: Last chance to choose service
B20@?0@"NSDictionary"8B16
NewCompose: Finished calculating cached values: %@
NewCompose: Cache said we weren't imessageable, lets refresh with the server
NewCompose: IDS refresh server status complete: %@
NewCompose: Finished evaluating based on refresh: allAddressesiMessageCapable(%@)
NewCompose: Cache said we were capable of iMessage, not querying
Upgraded
Downgraded
Unknown
v8@?0
\$\(([^\$]|\$[^\(])*?\)
@"NSValue"16@?0@"NSTextCheckingResult"8
IDSLookupQueue
Jabber
Bonjour
BuddyList
JabberViewer
SubNetViewer
__kIMBuddyListSortChangedNotification
__kIMCustomStatusMessagesChangedNotification
__kIMServiceDefaultsChangedNotification
__k_IMServiceDidConnectNotification
__kIMPersonNicknameKey
__kIMPersonProfileKey
__kIMPersonAllowedCapabilitiesKey
q24@?0@8@16
__kIMServiceStatusChangedNotification
__kIMMyStatusChangedNotification
__kIMPersonStatusChangedNotification
__kIMPersonInfoChangedNotification
__kIMStatusImagesChangedAppearanceNotification
__kIMServiceInitialSyncPerformedNotification
__kIMPersonServiceNameKey
__kIMPersonScreenNameKey
__kIMPersonStatusKey
__kIMPersonStatusMessageKey
__kIMPersonIdleSinceKey
__kIMPersonFirstNameKey
__kIMPersonLastNameKey
__kIMPersonEmailKey
__kIMPersonPictureDataKey
__kIMPersonAVBusyKey
__kIMPersonCapabilitiesKey
__kIMCapabilityText
__kIMCapabilityDirectIM
__kIMCapabilityFileTransfer
__kIMCapabilityFileSharing
__kIMCapabilityAudioConference
__kIMCapabilityVideoConference
IMService ******* This is unexpected. atSign > [email length]. Email %@ doman %@
com.apple.soagent
com.apple.AddressBook
__kIMPayloadNeedsResizing
__kIMPayloadDidLoadContent
IMBalloonPluginDataSource
Initialized %@(message guid: %@, bundle id: %@) with %tu byte payload, %tu attachments self pointer: %p
IMBalloonPluginDataSource: not setting empty payload.
self:%@ set payload length %@ attachments count %@
messagePayloadDataForSending self:%@ payload length %@ attachments count %@
self %@ sendPayload %@ attachments %@
Bailing, chat wasn't iMessage
IMBalloonPluginDataSource failed to link temporary file URL %@ to %@ (error: %@)
IMBalloonPluginDataSource failed to create temporary directory at %@ (error: %@)
IMBalloonPluginDataSource failed to remove temporary file URL %@ (error: %@)
IMBalloonPluginDataSource NOT removing non-temporary file URL %@
after update messageGUID %@ messageID %@ updateFlags %@ old payload sender %@ old payload isFromMe %@ new sender %@ new isFromMe %@
pluginPayloadDidChange %@(message guid: %@, bundle id: %@) updated: %tu byte payload, %tu attachments (change flags: %tu)
Updating status message for guid: %@
%s (%@)
-[IMBalloonPluginDataSource statusStringNeedsUpdate]
No chat found for message guid: %@
Updating balloon size for guid: %@
-[IMBalloonPluginDataSource needsResize]
Marking message %@ as played for App Message
marking message as played guid: %@
Did mark message as played guid: %@
-[IMBalloonPluginDataSource markAsPlayed]
No chat found for message guid to mark as played: %@
a Handwritten Message
a Photo Message
a Digital Touch Message
1 %@ Message
Handwritten Message
IMCoreLocalizable
Summary of text seen in conversation list and notification for handwriting plugin
Photo Message
Summary of text seen in conversation list and notification for photos
Digital Touch Message
Summary of text seen in conversation list and notification for digital touch plugin
 Summary message for plugins (arg1: plugin name)
IMBalloonPluginDataSource: Could not obtain value for key IMExtensionPayloadAppNameKey
IMBalloonPluginDataSource: Could not unarchive plugin payload data due to the following error:%@
IMBalloonPluginDataSource: Could not obtain value for key IMExtensionPayloadLocalizedDescriptionTextKey
kIMTranscriptPluginBreadcrumbTextSenderIdentifier
kIMTranscriptPluginBreadcrumbTextReceiverIdentifier
ChatItems
Identifier was a uuid, identifierString %@, handle %@
IMBalloonPluginDataSource: %@ attempted to show consumed breadcrumb before the last unconsumed breadcrumb was known.
%@ refreshing most recent message guid: %@ for chat: %@ 
IMBalloonPluginDataSource: %@ no message item with GUID %@ found in chat: %@
<%@ %p> [GUID: %@; bundleID: %@; Payload length: %lu; Num. attachments: %tu]
T@"NSURL",&,N,V_url
dataDetectedResult
T@"DDScannerResult",&,N,V_dataDetectedResult
attachmentGUIDs
T@"NSArray",&,N,V_attachmentGUIDs
pluginPayload
T@"IMPluginPayload",&,N,V_pluginPayload
pendingAttachmentData
T@"NSArray",&,N,V_pendingAttachmentData
temporaryAttachmentURLs
T@"NSMutableSet",&,N,V_temporaryAttachmentURLs
_imMessageGUID
T@"NSString",&,N,V__imMessageGUID
isShowingLatestMessageAsBreadcrumb
TB,N,SsetShowingLatestMessageAsBreadcrumb:,V_isShowingLatestMessageAsBreadcrumb
messageGUID
T@"NSString",&,N,V_messageGUID
sessionGUID
T@"NSString",&,N,V_sessionGUID
bundleID
T@"NSString",R,&,N,V_bundleID
hasInvalidatedSize
TB,N,V_hasInvalidatedSize
payloadInShelf
TB,N,V_payloadInShelf
imMessage
T@"IMMessage",R,N
chat
T@"IMChat",&,N,V_chat
consumedPayloads
T@"NSArray",&,N,V_consumedPayloads
initialMessageIsFromMe
TB,N,V_initialMessageIsFromMe
messagePayloadDataForSending
T@"NSData",R,&,N
isLast
TB,N,SsetLast:,V_isLast
showingLatestMessageAsBreadcrumb
TB,R,N,GisShowingLatestMessageAsBreadcrumb,V_showingLatestMessageAsBreadcrumb
guidOfLastMessageInSession
T@"NSString",R,&,N,V_guidOfLastMessageInSession
messageIDOfLastMessageInSession
Tq,R,N,V_messageIDOfLastMessageInSession
supportsDynamicSize
payload
T@"NSData",&,N
wantsStatusItem
statusString
T@"NSString",R,&,N
statusAttributedString
T@"NSAttributedString",R,&,N
wantsReplyFromContentView
URLToOpenOnTapAction
T@"NSURL",R,N,V_URLToOpenOnTapAction
allPayloads
T@"NSArray",R,N
isFromMe
isPlayed
v16@?0@"NSArray"8
com.apple.Handwriting.HandwritingProvider
v16@?0@"NSURL"8
NotificationActiveAccountChanged
ServiceDidConnect
ServiceDidReconnect
ServiceDidDisconnect
IMPersonKey
IMIDStringKey
FaceTime
iMessage
SubNet
IMServiceImpl
Accounts: %@
Recalculated best account for %@: %@
   Account %@  has not sync'd yet
Service
Service(%@): Disconnecting from agent
Status changed for account: %@             from: %d to: %d
   *** Account %@  has not sync'd yet, forcing the mark
Service: %@  set properties: %@
IDSServerBag
IDSFoundation
md-max-chat-participants
IMService[
CardMap.Verbose
Full Card Map: %@
CardMap
Card map disabled! %@
%@ Updating countryCode from %@ to %@
Clearing cardMap and personToIDMap
-[%@ peopleWithScreenName: %@ called, not supported.
Need to implement screenNamesForIMPerson: %@
-[%@ screenNamesForPerson: %@ called, not supported.
_wantsInternationizedNumbers
_supportsDatabaseStorage
serviceDefaults
T@"NSDictionary",&,N,V_serviceDefaults
accountIDs
countryCode
T@"NSString",&,N
cardMap
T@"NSDictionary",R,N
handlesChatInvites
TB,R,N,V_handlesChatInvites
name
T@"NSString",R,N,V_name
shortName
T@"NSString",R,N,V_localizedShortName
internalName
T@"NSString",R,N
serviceProperties
T@"NSDictionary",&,N
defaultAccountSettings
T@"NSDictionary",&,N,V_defaultSettings
supportsAdding
TB,R,N,V_supportsAdding
supportsPresence
TB,R,N,V_supportsPresence
supportsGroupAttachments
TB,R,N,V_supportsGroupAttachments
supportsMutatingGroupMembers
TB,R,N,V_supportsMutatingGroupMembers
supportsOneSessionForAllAccounts
TB,R,N,V_supportsOneSessionForAllAccounts
supportsRegistration
TB,R,N,V_supportsRegistration
supportsAuthorization
TB,R,N,V_supportsAuthorization
supportsPhoneNumberMapping
TB,R,N,V_supportsPhoneNumberMapping
supportsIDStatusLookup
TB,R,N,V_supportsIDStatusLookup
supportsOfflineTransfers
TB,R,N,V_supportsOfflineTransfers
supportsAudioMessages
TB,R,N,V_supportsAudioMessages
isPersistent
TB,R,N,V_isPersistent
ignoresNetworkConnectivity
TB,R,N,V_ignoresNetworkConnectivity
maxAttachmentSize
Tq,R,N
maxChatParticipants
IDSensitivity
TI,R,N,V_screenNameSensitivity
shouldDisableDeactivation
TB,R,N,V_shouldDisableDeactivation
isPlugInService
TB,R,N,V_isPlugInService
discontinued
TB,R,N,GisDiscontinued
addressBookProperties
T@"NSArray",R,N,V_abProperties
addressBookProperty
siblingServices
emailDomains
T@"NSArray",R,N,V_emailDomains
allowsMultipleConnections
TB,R,N,V_allowsMultipleConnections
buddyNotesMaxByteLength
serviceImageData
T@"NSData",R,N
accountClass
T#,R,N
IMPluginPayload: got nil text to display for chatItem: %@
IMPluginPayload: When creating payload for message %@, expected to find a local URL for transfer: %@
IMPLUGIN_TEXT_KEY
IMPLUGIN_DATA_KEY
IMPLUGIN_URL_KEY
IMPLUGIN_BREADCRUMBTEXT_KEY
IMPLUGIN_STATUSTEXT_KEY
IMPLUGIN_UPDATE_KEY
IMPLUGIN_USERINFO_KEY
IMPLUGIN_MESSAGEGUID_KEY
IMPLUGIN_ASSOCIATEDMESSAGEGUID_KEY
IMPLUGIN_PLUGINSESSIONGUID_KEY
IMPLUGIN_PLUGINBUNDLEID_KEY
IMPLUGIN_ATTACHMENTS_KEY
IMPLUGIN_SHOULD_EXPIRE_KEY
IMPLUGIN_IS_STICKER_KEY
IMPLUGIN_IS_FROM_ME
IMPLUGIN_SENDER
IMPLUGIN_IS_PLAYED
supportsSecureCoding
TB,R
time
T@"NSDate",&,N,V_time
consumedSessionPayloads
T@"NSArray",&,N,V_consumedSessionPayloads
associatedMessageGUID
T@"NSString",&,N,V_associatedMessageGUID
pluginSessionGUID
T@"NSString",&,N,V_pluginSessionGUID
pluginBundleID
T@"NSString",&,N,V_pluginBundleID
attachments
T@"NSArray",&,N,V_attachments
datasource
T@"IMBalloonPluginDataSource",W,N,V_datasource
TB,N,V_isFromMe
TB,N,V_isPlayed
shouldHideAttachments
sender
T@"NSString",C,N,V_sender
text
T@"NSAttributedString",&,N,V_text
data
T@"NSData",&,N,V_data
breadcrumbText
T@"NSString",&,N,V_breadcrumbText
statusText
T@"NSString",&,N,V_statusText
update
TB,N,GisUpdate,V_update
sticker
TB,N,GisSticker,V_sticker
shouldExpire
TB,N,V_shouldExpire
userInfo
T@"NSDictionary",&,N,V_userInfo
IMChatRegistryHasInitializedChatFiltering
IMChatWatermarkDidUpdateNotification
IMChatWatermarkMessageID
IMChatWatermarkDate
CKChatWatermarkMessageID
CKChatWatermarkTime
PinnedChatIdentifiers
q24@?0@"IMChat"8@"IMChat"16
com.apple.MobileSMS
v16@?0@"NSMutableArray"8
@apple.com
NPSManager
NanoPreferencesSync
watermarkMessageID
watermarkDate
T@"NSDate",R,C,N
TB,N,GisVIP
watermarkComparator
T@?,R,N
v32@?0@"IMChat"8Q16^B24
hasInitializedChatFiltering
__kIMBalloonPluginAttributionChangedNotification
B16@?0@"NSString"8
IMBalloonPluginAttributionController: Failed making file class C: %@ with error %@
q24@?0@"NSString"8@"NSString"16
@"NSString"16@?0@"IMBalloonPlugin"8
expiredBundleIDToTimestampMap
T@"NSMutableDictionary",&,N,V_expiredBundleIDToTimestampMap
bundleIDsDisplayingAttribution
T@"NSMutableDictionary",&,N,V_bundleIDsDisplayingAttribution
hasPerformedFirstAppExtensionLoad
TB,N,V_hasPerformedFirstAppExtensionLoad
mobile
Library
AppAttributionRecord.plist
v24@?0@"NSArray"8@"NSArray"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Presence/Suggestions/IMSuggestionsService.m
-[IMSuggestionsService fetchSuggestedRealNameForDisplayName:messageUID:queue:block:]
Unexpected nil '%@' in %s at %s:%d. %@
block
ASSERTION FAILED: %@
-[IMSuggestionsService _startRequestForDisplayName:messageUID:queue:]
displayName
Error getting names for phone number: %@
v24@?0@"NSArray"8@"NSError"16
v24@?0^{__CFRunLoopObserver=}8Q16
v16@?0@"NSString"8
SGSuggestionsService
CoreSuggestions
NSObject<SGSuggestionsServiceContactsProtocol> *_IMDSuggestionsNewConnection(void)
_IMDSuggestionsNewConnection
suggestionsServiceClass
__kkOldValueKey
__kkNewValueKey
__kIMAccountNewStatusKey
__kIMAccountOldStatusKey
__kIMAccountStatusChangedNotification
__kIMAccountStatusMessageChangedNotification
__kIMAccountStatusInfoChangedNotification
__kIMAccountAuthorizationIDChangedNotification
__kIMAccountAuthorizationTokenChangedNotification
__kIMAccountAliasesChangedNotification
__kIMAccountAliasesAddedKey
__kIMAccountAliasesRemovedKey
__kIMAccountAliasValidationStatusChangedNotification
__kIMAccountAliasChangedKey
__kIMAccountAliasValidationStatusFailedReasonKey
title
button
body
action
type
__kIMAccountProfileChangedNotification
__kIMAccountProfileValidationStatusChangedNotification
__kIMAccountProfileValidationStatusFailedReasonKey
__kIMAccountActivatedNotification
__kIMAccountDeactivatedNotification
__kIMAccountLoggedInNotification
__kIMAccountLoggedOutNotification
__kIMAccountLoginStatusChangedNotification
__kIMAccountLoginStatusChangedReasonKey
__kIMAccountLoginStatusChangedErrorMessageKey
__kIMAccountRegistrationStatusChangedNotification
__kIMAccountRegistrationFailedReasonKey
__kIMAccountPropertiesAndPicturesLoadedNotification
__kIMAccountNoLongerJustLoggedInNotification
__kIMAccountGroupsChangedNotification
__kIMAccountCapabilitiesChangedNotification
__kIMAccountPrivacySettingsChangedNotification
__kIMAccountInvisibilityChangedNotification
__kIMAccountSettingsChangedNotification
__kIMAccountDisplayNameChangedNotification
__kIMAccountVettedAliasesChangedNotification
Region
Number
__k_IMAccountPersistentPropertiesChangedNotification
__kIMAccountSMSRelayPinAlertNotification
__kIMAccountSMSRelayPinDismissNotification
IMAccountLoginStatusFromFZServiceStatus: Unknown FZServiceStatus %d
Account
-[%@ clearServicesCache]
FTEntitlementSupport
FTServices
FTDeviceSupport
FaceTimeDeviceRegistrationCapabilityChangedNotification
FTCTRegistrationStatusChangedNotification
Request to autologin account: %@
Request to login account: %@
Request to logout account: %@
-[IMAccount _updateMyStatus:message:]
IMAccount
Now playing info changed: %@
-[IMAccount setCurrentAccountStatus:]
Canonicalization
Canonicalizing non-phone number ID: %@   to %@: 
Created number ref: %@  for ID: %@
    => Country code: %@
      => Normalized: %@
      => Returning lowercase string of: %@
AccountPrefs
-[IMAccount updateCapabilities:]
Registration
IMCore
Client request to set password for account: %@
Successfully updated password for account (%@:%@): %@  (Environment: %@)
v36@?0@"NSString"8@"NSString"16@"NSString"24B32
Client request to remove password for account: %@
Client request to set temporary password for account: %@
Successfully read temporary password for account (%@:%@): %@
v72@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56@"NSNumber"64
Successfully updated temporary password for account (%@:%@): %@
-[IMAccount setInvisible:]
IMAccount: %p [ID: %@ Service: %@ Login: %@ Active: %@ LoginStatus: %@]
-[IMAccount _loadFromDictionary:force:]
-[IMAccount setCachedAllowList:]
-[IMAccount setCachedBlockList:]
-[IMAccount setCachedBlockingMode:]
-[IMAccount setCachedBlockIdleStatus:]
nil group name in -[Account _applyChangesToTemporaryCache:]
Groups
Inserting %@ past end of account list. (Account %@)
Missing group name in groups list
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Accounts/IMAccount.m
<Unknown File>
%@ Unmatched endCoalescedChanges
Sending changes: %@   to account: %@
imbalanced update: called a resume without calling a holdBuddyUpdate!
Buddies
%@: Properties of %@ = %@
%@: Buddy <%@> Picture changed
-[IMAccount setBuddyProperties:buddyPictures:]
Registration status changed, clearing country code
Tried to notify %@ of removal, but we've already been removed... bailing
-[IMAccount _updateRegistrationStatus:error:info:]
Request to register account: %@
Request to unregister account: %@
Offline
Disconnected
Disconnecting...
Connecting...
Connected
-[IMAccount _notJustLoggedIn]
-[IMAccount setIsActive:]
-[%@ setIMAccountLoginStatus:%@ errorMessage:%@ reason:%d]
%@: Login status changed to %@ with message '%@'
-[IMAccount setIMAccountLoginStatus:errorMessage:reason:]
group is not NSDictionary type: %@ (%@)
Members array is not array type: %@ (%@)
Ordering array is not array type: %@ (%@)
oldMembers is not NSDictionary type: %@ (%@)
newMembers is not NSDictionary type: %@ (%@)
-[IMAccount groupsChanged:error:]
Canonicalized for existing %@ => %@
Checking for existing with already canonicalized: %@
   Updating original ID to: %@
Canonicalized %@ => %@
Created with already canonicalized: %@
AddressBook
Not returning person, AB is not enabled in this process
Not returning handle, AB is not enabled in this process
AB.Verbose
Card %@ --> %@
Not adding handle to person, AB is not enabled in this process
-[Account<%p> addIMHandle:%@ toIMPerson:] - pres account %p mismatch
-[Account addIMHandle:%@ toIMPerson:] - pres has location %@
IMHandle/service mismatch when adding %@ to %@ for account: %@
IMHandleWatching
---------- Starting watch queue
Starting to watch: %@
Stopped watching: %@
---------- Forgetting all watches
Login ID has not changed, not refreshing
Login ID and handle are both nil, not refreshing
Old login handle: %@   new ID: %@
%@ detaching old _loginIMHandle <%@> from gMe
...%@: Updating _loginIMHandle's abRecord from %@ to gMe.
Status changed for: %@ (isBuddy: %d)
Current buddy list; %@
Now showing %@ in buddy list
Now not showing %@ in buddy list
----------
New imHandle list; %@
%@@%@
Client request to authenticate account: %@
Updating token for account %@:%@ (Environment: %@)
Successfully updated token for account (%@:%@): %@  (Environment: %@)
This is a telephony device, trying to use phone number: %@
Using apple ID base number: %@
Trying again using apple ID base number: %@
Key provided for profile configuration (%@) must not be nil
Setting profile value: %@   forKey: %@
Requesting validation of profile info: %@
-[IMAccount _updateProfileInfo:]
inbox.appleid.apple.com
@16@?0@8
Client request to add alias: %@   account: %@
Client request to add aliases: %@   account: %@
Client request to remove alias: %@  account: %@
Client request to remove aliases: %@  account: %@
Final set of aliases after removes %@
+1234567890#* -().
Client request to validate alias: %@  account: %@
Client request to validate aliases: %@  account: %@
Key provided for account configuration (%@) must not be nil
AccountSignedOut
*** API client requested a modification of key "%@"  to be "%@", this is being ignored, please file a radar
Key provided for account persistent preferences (%@) must not be nil
Key provided for account preferences (%@) must not be nil
 => Returning Caller ID: %@   (Set: %@   Aliases: %@)
Asked to change display name from: %@  to: %@
Invalid ID passed into caller ID: %@
 Changed display name to: %@
-[IMAccount _updateDisplayName:]
Warning
 Attempted to change display name to %@, but it wasn't in vetted set (%@)
Commands
Command delivered: %@ to handle: %@ properties: %@
-[IMAccount _handleDeliveredCommand:withProperties:fromBuddyInfo:]
Incoming command: %@ from handle: %@ properties: %@
-[IMAccount _handleIncomingCommand:withProperties:fromBuddyInfo:]
isAwaitingTargetGroupState
hasTargetGroupStateBeenMet
hasSyncedWithRemoteBuddies
_persistentProperties
isAsleep
_isUsableForSending
service
T@"IMServiceImpl",R,W,N,V_service
dictionary
uniqueID
serviceName
accountImageData
accountSubtypeInfo
T@"NSDictionary",R,N,V_subtypeInfo
registrationStatus
registrationFailureReason
registrationFailureAlertInfo
isRegistered
isOperational
canSendMessages
authorizationID
authorizationToken
profileInfo
makoAccount
TB,R,N,GisMakoAccount
aliases
vettedAliases
aliasesToRegister
T@"NSString",C,N
accountType
hasCustomDescription
accountDescription
loginStatus
TQ,R,N,V_loginStatus
loginStatusMessage
myStatus
TQ,R,N,V_myStatus
myStatusMessage
T@"NSString",R,N,V_myStatusMessage
myStatusDictionary
T@"NSDictionary",R,N,V_currentAccountStatus
myIdleSince
T@"NSDate",R,N,V_myIdleSince
myPictureData
T@"NSData",R,N,V_myPictureData
myNowPlayingString
myProfile
T@"NSAttributedString",R,N,V_myProfile
isManaged
autoLogin
login
T@"NSString",&,N,V_loginID
strippedLogin
T@"NSString",R,N,V_strippedLogin
server
port
useSSL
goIdle
allowsVCRelay
allowsSMSRelay
allowsMMSRelay
isSMSRelayCapable
isConnecting
isConnected
justLoggedIn
TB,R,N,V_justLoggedIn
invisible
TB,N,GisInvisible
isActive
TB,R,N,V_isActive
canActivate
capabilities
TQ,R,N,V_capabilities
validLogin
validPort
validServer
invalidSettings
password
temporaryPassword
groupList
buddyList
T@"IMPeople",R,N,V_buddyList
makingChanges
blockList
T@"NSArray",&,N
allowList
blockingMode
TI,N,V_cachedBlockingMode
blockIdleStatus
TB,N,V_blockIdleStatus
blockOtherAddresses
accountPreferences
arrayOfAllIMHandles
loginIMHandle
T@,R,N,V_loginIMHandle
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
IMDaemonListener
Notified that my status is now %i, message '%@', idleSince %@
Service: Received my new picture from daemon -- %d bytes
Exception: %@ in handler: %@ while executing: %@
-[IMDaemonListener _reallyProcessMyStatusChanged]
AccountUniqueID
ChatIdentifier
Properties
ChatStyle
Message
DeferType
Messages
Unknown defer type
Account: %@   Login Status Changed: %@
pinCode
deviceName
deviceType
phoneNumber
-[IMDaemonListener displayPinCodeForAccount:pinCode:deviceName:deviceType:phoneNumber:]
responseFromDevice
wasCancelled
-[IMDaemonListener pinCodeAlertCompleted:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:]
-[IMDaemonListener account:postedError:]
Allowing only services: %@
  Skipping: %@
  Allowing: %@
Denying services: %@
Service: %@   all accounts: %@   activeAccounts: %@
  Skipping: %@ (not allowed)
  Skipping: %@ (denied)
IMDaemonListener.Verbose
Setup starting
Setup info: %@
serviceNames
services
Service info: %@
accounts
activeAccounts
accountInfo
Account info: %@
accountID
accountDefaults
status
serviceLoginStatus
serviceLoginStatusMessage
groups
DBModificationStamp
fileTransfers-stamp
fileTransfers
Updating file transfers
Not updating file transfers
Clearing file transfer center
Setup is complete (Services: %@)
chats
personMergedChats
-[IMDaemonListener _deferredSetup:]
didFetchSyncStateStats %@
Attempt to disable iCloud backups resulted in error. Result: %ld, error: %@
did attempt to disable iCloud backups: %ld
did fetch cloudkit sync state debugging info: %@
isSetupComplete
TB,R,N,V_setupComplete
hasPostedSetupComplete
TB,R,N,V_postedSetupComplete
handlers
T@"NSArray",R,N,V_handlers
allServices
_contexts
T@"NSMutableDictionary",R,N,V_contexts
_hidingDisconnect
TB,N,S_setHidingDisconnect:,V_hidingDisconnect
properties
T@"NSDictionary",R,N,V_properties
persistentProperties
T@"NSDictionary",R,N,V_persistentProperties
TQ,R,N
myIdleTime
TI,R,N
vcCapabilities
TQ,R,N,V_vcCapabilities
shouldHoldChatMessages
TB,R,N,V_holdingChatMessages
isHoldingChatMessages
IMDaemonListenerReceivedQOSClassWhileServicingRequestsResponseNotification
Identifier
QOSClass
IMDMessageRecordCloudKitStatisticTotalChatCountKey
IMDMessageRecordCloudKitStatisticSyncedChatCountKey
IMDMessageRecordCloudKitStatisticTotalMessageCountKey
IMDMessageRecordCloudKitStatisticSyncedMessageCountKey
IMDMessageRecordCloudKitStatisticTotalAttachmentCountKey
IMDMessageRecordCloudKitStatisticSyncedAttachmentCountKey
IMDMessageRecordCloudKitStatisticTotalCountKey
IMDMessageRecordCloudKitStatisticAllSyncedCountKey
%@: %@ (%ld of %ld, %ld remaining)
Sync State percent: %@, raw stats: %@, %@, %@, %@
messages
syncedChatCount
TQ,N,V_syncedChatCount
totalChatCount
TQ,N,V_totalChatCount
syncedAttachmentCount
TQ,N,V_syncedAttachmentCount
totalAttachmentCount
TQ,N,V_totalAttachmentCount
syncedMessageCount
TQ,N,V_syncedMessageCount
totalMessageCount
TQ,N,V_totalMessageCount
totalRecordCount
TQ,N,V_totalRecordCount
syncedRecordCount
TQ,N,V_syncedRecordCount
percentSynced
Td,R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Chat/IMChat+MessageAcknowledgments.m
-[IMChat(MessageAcknowledgments) sendMessageAcknowledgment:forChatItem:withMessageSummaryInfo:]
chatItem
[chatItem message]
content
attributedContentString
-[IMChat(MessageAcknowledgments) messageAcknowledgmentSummaryForConversationListWithMessage:]
potentialAcknowledgment
HasPromptedForMessagesInCloud
com.apple.messages
iMessageCloudKitEvents
v24@?0@"<IMCloudKitEventHandler>"8^B16
v24@?0@8@"IMEventListener"16
v32@?0@8@"IMEventListener"16@"<IMEventListenerResponse>"24
set messages in cloud enabled: %@
setEnabledDidReturned with response: %@
beginning periodic sync
set did prompt for cloud kit sync to %@
attempting to disable all icloud devices
tryToDisableAllDeviceReturned with response: %@
Check if additional storage is required
Did check if additional storage is required with response: %@
v24@?0@"IMCloudKitSyncStatistics"8@"NSError"16
Fetched sync state debugging info: %@
sync-statistics-from-database
sync-statistics
sync-state-user-defaults
sync-state
v24@?0@8^B16
eventHandlers
T@"IMWeakReferenceCollection",R,V_eventHandlers
notificationManager
T@"IMEventNotificationManager",&,V_notificationManager
fetchStatsTimer
T@"NSTimer",W,V_fetchStatsTimer
previousState
T@"IMCloudKitSyncState",&,V_previousState
progressToSend
T@"IMCloudKitSyncProgress",&,V_progressToSend
accountInfoProvider
T@"<IMCloudKitEventHandlerAccountInfoProvider>",W,V_accountInfoProvider
didPromptForCloudKitSync
progressPollingInterval
Td,V_progressPollingInterval
syncState
T@"IMCloudKitSyncState",R
IMCoreSimulatedEnvironmentEnabled
q24@?0@"IMItem"8@"IMItem"16
IMItemsController
Assigning sort id %@ for message with guid %@ {messageID %@ date %@ isFromMe %@ isTypingMessage %@}
Setting the sort ID from item before the last item -- lastItemIsTypingMessage %@ lastItemIsErrorCase %@ Last item %@
*** ---- Trying to fix a bad sort ID -- Printing All Items -- Please file a radar ---- ***
ItemsController
last item %@
item %@
set sortID %@ guid %@
v32@?0@"NSString"8Q16^B24
capacity
TQ,N,V_capacity
isMoreToLoad
v32@?0@"IMItem"8Q16^B24
firstMessageItem
T@"IMMessageItem",R,N
lastMessageItem
__kIMDaemonDidConnectNotification
__kIMDaemonWillConnectNotification
__kIMDaemonDidDisconnectNotification
__k_IMDaemonDidDisconnectNotification
__k_IMDaemonDidConnectNotification
__kIMDaemonConnectionLostNotification
__kIMDaemonDidWillConnectNotification
com.apple.IMDaemonControllerLocalLockQueue
com.apple.IMDaemonControllerQueue
com.apple.IMDaemonControllerListenerLockQueue
com.apple.IMDaemonControllerAgentLockQueue
Exception returned from daemon: %@
v24@?0@"NSObject<OS_xpc_object>"8@"NSDictionary"16
IMDaemonController
  Ensuring connection to daemon (will launch: %@   has checked: %@)
  Grabbing remote daemon port (listener ID: %@)
chatContext
context
listenerID
allowedServices
deniedServices
RemoteObjectGathering
DaemonController
Requesting daemon remote object
Done requesting daemon remote object
  Built object: %@
Connection to daemon established
  Failed to build remote object for listener: %@
Failed to launch and connect to daemon
v24@?0@"IMRemoteObject"8@"NSDictionary"16
Ensuring address book is alive
-[IMDaemonController _makeConnectionWithLaunch:completionBlock:]
Flushed send queue
NOPE NOT DISCONNECTING
We're still not connected, kicking off disconnect notification
-[IMDaemonController _disconnectFromDaemonWithForce:]_block_invoke
We're still connected, hiding the disconnect!
-[IMDaemonController _disconnectFromDaemonWithForce:]
Connect to daemon with launch: %@   capabilities: %@
Connect:  Set capabilities: %@
Tried to connect to daemon but we got no remote object ... handling as if the remote object died.
Connecting: Listener set updated to: %@   capabilities: %@
Disconnecting: Listener set updated to: %@   capabilities: %@
Adding listener with ID: %@    capabilities: %@
Removing listener with ID: %@    capabilities: %@
Tried to remove non existent listener with ID: %@
Set capabilities: %@  for listener ID: %@
Request to block until connected
 => Not blocking, already connected
 => Not blocking, shutting down
 => Already blocking, bailing
 => Starting connect
 => No remote object, can't block
IMCoreSetup: Blocking connection
connection timeout: %f
%@ timed out connecting to imagent
************* %@, please file a radar, and attach the stackshots generated ***********************
Done blocking  (Success: %@)
 => Reading listener: %@    capabilities: %@
v32@?0@8@16^B24
Set capabilities: %@  (Previous: %@)
Not updating caps, these were already pushed down: %@
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by main thread
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by main thread
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground (was suspended: %@)
System application did resume (was suspended: %@)
_capabilities
TI,S__setCapabilities:,V_gMyFZListenerCapabilities
_autoReconnect
TB,S_setAutoReconnect:,V_autoReconnect
_remoteMessageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
_servicesToAllow
T@"NSArray",&,S_setServicesToAllow:,V_servicesToAllow
_servicesToDeny
T@"NSArray",&,S_setServicesToDeny:,V_servicesToDeny
_listenerID
T@"NSString",&,N,S_setListenerID:,V_listenerID
delegate
T@,W,N,V_delegate
_blocksConnectionAtResume
TB,N,S_setBlocksConnectionAtResume:,V_blocksConnectionAtResume
requestingConnection
TB,R,N,GisRequestingConnection,V_requestingConnection
requestQOSClassCompletionBlocks
T@"NSMutableDictionary",&,N,V_requestQOSClassCompletionBlocks
listener
T@"IMDaemonListener",R,N,V_daemonListener
IMCoreAutomationHookErrorDomain
chat_guid
group_id
members
IMCoreAutomationHookParameterError
IMCoreAutomationHookParameterErrorLocation
%@ (%@)
Condition failed : '%s'
[handles count] == 0
%s:%d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Automation Hooks/IMCoreAutomationHook.m
CoreAutomation
(chat) == nil
[handleStrings count] == 0
[handleStrings count] != [outArray count]
%s:%ld
IMCoreAutomationHookErrorCodeDomainTimeOut
IMCoreAutomationHookErrorCodeInvalidParameters
IMCoreAutomationHookErrorCodeGroupCreationFailure
IMCoreAutomationHookErrorCodeChatNotFound
IMCoreAutomationHookErrorCodeConditionFailed
bestiMessageAccount
T@"IMAccount",R
__k_IMAccountControllerUpdatedNotification
__kIMAccountControllerUpdatedNotification
__kIMAccountControllerAccountAddedNotification
__kIMAccountControllerAccountWillBeRemovedNotification
__kIMAccountControllerAccountRemovedNotification
__kIMAccountControllerOperationalAccountsChangedNotification
CallerID
Adding account: %@
-[IMAccountController addAccount:locally:]
Client request to delete account: %@
Someone tried to delete an account that can't be deactivated, you can't do this (%@)
Someone tried to delete a phone account, you can't do this
Deleting account: %@  (Locally: %@)
-[IMAccountController deleteAccount:locally:]
Deactivating accounts: %@
Client request to deactivate account: %@
Client request to deactivate accounts: %@
Activating accounts: %@
IMAccountController
Parental controls disabled account: %@   not allowed to activate
Rebuilding operational accounts, old: (%@)  new: (%@)
 ** Posting operational accounts changed
T@"NSArray",C,V_accounts
bestAccountForStatus
T@,R,N
numberOfAccounts
Ti,R,N
activeIMessageAccount
T@"IMAccount",R,N
activeSMSAccount
connectedAccounts
operationalAccounts
Alias %@  matched phone based account: %@, selecting it
Alias %@  matched account: %@, selecting it
Returning selected best account: %@
Couldn't find any account for service: %@, login: %@, guid: %@, accounts: %@
B32@?0@"NSString"8^@16^@24
B48@?0@"NSString"8^@16^@24^B32^B40
Message sent with Invisible Ink
Audio Message
Video Message
%lu Attachments: 
%lu Animated Emoji
%lu Images
%lu Movies
%lu Passes
%lu Locations
%lu Files
%lu Stickers
%lu Audio Files
%lu Contacts
%lu Calendars
%lu Incoming Files
%lu Outgoing Files
Empty message
.emoji
IMCloudKitSyncStateUnknown
IMCloudKitSyncStateUnavailable
IMCloudKitSyncStateDisabled
IMCloudKitSyncStateIdle
IMCloudKitSyncStateSyncing
IMCloudKitSyncStatePaused
CloudKit sync state: %@, account is enabled: %@, isDisablingEnabledState: %@, isDisablingDevices: %@, is in exit state: %@, exit date: %@, last sync date: %@, account status: %@, controller sync state: %@, controller sync type: %@, controller sync record %@, errors: %@
accountIsEnabled
TB,R,N,V_accountIsEnabled
Tq,R,N,V_syncState
isSyncing
isSyncingPaused
syncControllerSyncState
TQ,R,N,V_syncControllerSyncState
syncControllerSyncType
Tq,R,N,V_syncControllerSyncType
syncControllerRecordType
Tq,R,N,V_syncControllerRecordType
isSyncingAvailable
hasExited
TB,R,N,V_hasExited
exitDate
T@"NSDate",R,C,N,V_exitDate
isSyncingEnabled
changingEnabledState
Tq,R,N,V_changingEnabledState
isDisablingDevices
TB,R,N,V_isDisablingDevices
canChangeEnabledSetting
canStartSyncing
canEnableSyncing
isSyncEnabledForDisplayOnly
lastSyncDate
T@"NSDate",R,N,V_lastSyncDate
errors
T@"NSArray",R,N,V_errors
syncingFailed
accountStatus
Tq,R,N,V_accountStatus
__kIMManagedPreferencesChangedNotification
SkipFirstTimeUser
disableService
TB,V_disableService
forceWhiteList
TB,V_forceWhiteList
whitelist
T@"NSSet",&,V_whitelist
T@"NSString",&,V_name
ParentalControls
Active: %@
Disable AV: %@
Force Chat Logging: %@
%@ Disabled: %@
%@ Force Whitelist: %@
%@ Whitelist: %@
_parentalControls
T@"NSMutableDictionary",R,N,V_parentalControls
_disableAV
TB,R,N,V_disableAV
_forceChatLogging
TB,R,N,V_forceChatLogging
active
TB,R,N,V_active
disableAV
forceChatLogging
shouldPostNotifications
TB,N,V_shouldPostNotifications
__kIMStandaloneFileTransferRegisteredNotification
__kIMFileTransferRefreshAllNotification
__kIMFileTransferCreatedNotification
__kIMFileTransferUpdatedNotification
__kIMFileTransferRemovedNotification
__kIMFileTransferFinishedNotification
IMTransferCenterErrorDomain
sPreauthorizedTransferDictionaryOtherPersonKey
sPreauthorizedTransferDictionaryAccountKey
sPreauthorizedTransferDictionaryFilenameKey
sPreauthorizedTransferDictionarySaveToPathKey
IMFileTransferCenter
Adding transfer guid: %@ to message: %@
Not assigning transfer guid: %@   transfer doesn't exist
Not assigning transfer guid: %@ to handle: %@  transfer doesn't exist
Could not register transfer with daemon %@
IMFileTransferCenter_Automation
We tried to accept a file transfer whose transfer state was greater than the accepted state or we got back a nil transfer -- transfer: %@ transfer state: %@
stopping transfer to guid %@
createdDate
filename
Posting transfer created: %@  properties: %@
Nothing changed for create, not posting for: %@
IMFileTransferCenter: number of new file transfers %@ does not match number of local urls %@.
Posting transfer: %@  change: %@
Nothing changed for update, not posting for: %@
High quality download for transfer %@ succeeded at path %@
v32@?0@?<v@?B@"NSString">8Q16^B24
High quality download for transfer %@ failed
Setting Aux image to %@ for transfer %@
Setting Aux video to %@ for transfer %@
MessageService Failed writing attachment to disk on incoming: %@
fetchHighQualityVariantForTransfer:completion: was given no transfer
fetchHighQualityVariantForTransfer:completion: was given no transfer guid
v32@?0@"NSString"8@"NSMutableArray"16^B24
transfers
activeTransferGUIDs
orderedTransfersGUIDs
hasActiveFileTransfers
hasPendingFileTransfers
activeTransfers
T@"NSArray",R,W,N
orderedTransfers
INVocabulary
INThisProcessHasSiriDeveloperEntitlement
Intents
IMChatVocabularyUpdater
Updating the SiriKit group names vocabulary
lastMessage.time
Updated the SiriKit group names vocabulary with %lu groups
m-reply-enabled
Close Session for Business Chat: %@
Deleted payload data at path %@ with error %@ and result %d
mapItem
T@"MKMapItem",R,N
isReplyEnabled
isBusinessChat
isMakoChat
isAppleChat
%f,%f
http://maps.apple.com/?ll=%@&q=%@
map url
Current Location
Default title for current location message
CLLocationCoordinate2DIsValid
CoreLocation
failed
T@"NSDate",R,N
T@"IMHandle",R,N
guid
T@"NSString",C,N,S_setGUID:,V_guid
contiguousType
TC,R,N
attachmentContiguousType
contiguous
TB,R,N,GisContiguous
wasReportedAsSpam
TB,R,N,V_wasReportedAsSpam
extensionName
T@"NSString",R,N,V_extensionName
T@"IMServiceImpl",R,N,V_service
handle
T@"IMHandle",R,N,V_handle
date
message
[%@ text:%@, visibleAssociatedMessageChatItems: %@, messagePartRange: %@]
split
%@:%@
icloud
appsto
richLink-whitelist
Server bag does not have whitelisted urls. Resorting to defaults
Checking URL %@ with domains %@
URL is whitelisted %@
ChatItems: Invalid URL %@
v24@?0@"NSValue"8^B16
Couldn't associate fileTransfer with guid: %@ for message: %@
v40@?0@"NSURL"8{_NSRange=QQ}16^B32
v40@?0@"NSNumber"8{_NSRange=QQ}16^B32
UTTypeConformsTo
MobileCoreServices
kUTTypeImage
Message with parts deleted: %@ from message: %@
v32@?0@"NSValue"8Q16^B24
v40@?0@"NSString"8{_NSRange=QQ}16^B32
p:%ld/%@
visibleAssociatedMessageChatItems
T@"NSArray",&,N,S_setVisibleAssociatedMessageChatItems:
index
Tq,N,V_index
messagePartRange
T{_NSRange=QQ},N,V_messagePartRange
T@"NSAttributedString",R,C,N,V_text
messageEditChatItems
T@"NSArray",R,N,V_messageEditChatItems
isBusiness
TB,N,V_isBusiness
T@"NSArray",&,N,S_setVisibleAssociatedMessageChatItems:,V_visibleAssociatedMessageChatItems
[[%@] subject: %@]
subject
T@"NSAttributedString",R,C,N,V_subject
[{%@] type:%@ payload
dataSource
T@"IMBalloonPluginDataSource",R,&,N
T@"IMBalloonPluginDataSource",&,N,V_dataSource
initialPayload
T@"IMPluginPayload",&,N,V_initialPayload
bundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
hasSetIsLastChatItemOfPluginType
TB,N,V_hasSetIsLastChatItemOfPluginType
isDataSourceInitialized
playbackType
isLastChatItemOfPluginType
TB,N,SsetLastChatItemOfPluginType:,V_isLastChatItemOfPluginType
isSaved
bps:
$(%@) sent %@ message
Default Breadcrumb status format string, arg1=Sender's name, arg2=Application's Display name
Warning, missing %@ to add to %s
additionalIDToHandleNameMap
rawStatusText
T@"NSString",R,N,V_rawStatusText
T@"NSString",R,N,V_statusText
optionFlags
TQ,R,N,V_optionFlags
[[%@] transferGUID: %@]
kUTTypeMovie
kUTTypeGIF
transferGUID
T@"NSString",R,C,N,V_transferGUID
[[%@] subparts: %@]
subparts
T@"NSArray",R,C,N,V_subparts
t:%d/%d
typingIndicatorIcon
T@"NSData",R,N,V_typingIndicatorIcon
T@"NSAttributedString",R,C,N
[[%@] statusType: %d expireStatusType: %d]
Error %ld
messageStatusType
statusType
Tq,R,N,V_statusType
T@"NSDate",R,N,V_time
count
TQ,R,N,V_count
errorText
expireStatusType
Tq,R,N,V_expireStatusType
effectStyleID
T@"NSString",R,C,N,V_effectStyleID
attributionInfo
T@"NSDictionary",R,C,N,V_attributionInfo
attributionType
Tq,R,N,V_attributionType
T@"NSString",R,C,N
T@"IMBalloonPluginDataSource",R,N,V_dataSource
actionType
T@"IMHandle",R,N,V_sender
changeType
otherHandle
T@"IMHandle",R,N,V_otherHandle
offerState
direction
v32@?0@"IMTranscriptChatItem"8Q16^B24
parentMessageIsFromMe
associatedMessageType
associatedMessageRange
T{_NSRange=QQ},R,N
geometryDescriptor
T{IMAssociatedMessageGeometryDescriptor=QQfffff},R,N,V_geometryDescriptor
messageSummaryInfo
editedBody
messageAcknowledgmentType
Tq,R,N,V_messageAcknowledgmentType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Chat/IMTranscriptChatItems.m
-[IMAggregateAcknowledgmentChatItem _initWithAcknowledgments:]
Unexpected false '%@' in %s at %s:%d. %@
acknowledgments.count > 0
acknowledgments array must be nonempty
[self.associatedMessageGUID isEqualToString:acknowledgment.associatedMessageGUID]
all acknowledgments must have the same associated message
acknowledgments
T@"NSArray",R,C,N,V_acknowledgments
fromMeAcknowledgement
T@"IMMessageAcknowledgmentChatItem",R,N,V_fromMeAcknowledgement
includesFromMe
latestIsFromMe
TB,R,N,V_latestIsFromMe
includesMultiple
TB,R,N,V_includesMultiple
latestAcknowledgmentType
Tq,R,N,V_latestAcknowledgmentType
est:
T@"NSString",R,C,N,V_text
IMAVChatInfo
IMAVChatParticipants
IMAVChatIsInitiator
IMAVChatHasAudio
IMAVChatHasVideo
IMAVChatChannelID
IMAVChatVideoStill
IMAVChatVideoStillData
IMAVChatResponseID
IMAVChatResultCode
IMAVChatResultException
UseAlternateStatusIndicators
__kIMDisplayStatusTextNotification
NSStatusAvailable
NSStatusIdle
NSStatusAway
NSStatusOffline
NSStatusUnknown
Flat
OnlineStatuses
plist
StatusList
ImageName
_flat
tiff
myAvailableMessages
myAwayMessages
currentAVChatInfo
T@"NSDictionary",R,W,N
requestAudioReflectorStart
requestAudioReflectorStop
Unsupported init
[IMBalloonPlugin init] is not supported
CKBrowserGroup
CKBrowserShowInBrowser
CKBrowserDisplayImageName
kCKBrowserDisplayImagePath
IMBalloonPluginManager
balloonControllerForChatItem message guid: %@, dataSource: %p, chat item guid: %@
bubbleClass does not conform to IMBalloonPluginController protocol; message guid: %@, dataSource: %p, chat item guid: %@
We did not find a datasource for messageGUID: %@
bundle
T@"NSBundle",&,N,V_bundle
plugin
T@"<PKPlugIn>",&,N,V_plugin
pluginLoaded
TB,N,V_pluginLoaded
T@"IMBalloonApp",&,N,V_app
messageToDatasourceMap
T@"NSMutableDictionary",&,N,V_messageToDatasourceMap
messageToBalloonControllerMap
T@"NSMutableDictionary",&,N,V_messageToBalloonControllerMap
bubbleClass
T#,&,N,V_bubbleClass
browserClass
T#,&,N,V_browserClass
dataSourceClass
T#,&,N,V_dataSourceClass
customTypingIndicatorLayerClass
T#,&,N,V_customTypingIndicatorLayerClass
entryClass
T#,&,N,V_entryClass
browserImageName
T@"NSString",&,N,V_browserImageName
browserImagePath
T@"NSString",&,N,V_browserImagePath
browserGroup
Tq,N,V_browserGroup
balloonControllerPool
T@"NSMutableArray",&,N,V_balloonControllerPool
identifier
browserDisplayName
pluginBundle
T@"NSBundle",R,&,N
appBundle
showInBrowser
isEnabled
shouldHideAppSwitcher
version
betaPlugin
TB,R,N,GisBetaPlugin
IMBalloonPluginEnabledStateChangedNotification
proxy
T@"LSPlugInKitProxy",&,N,V_proxy
requestIdentifier
T@"NSUUID",V_requestIdentifier
canSendDataPayloads
TB,N,V_canSendDataPayloads
shouldBalloonHideAppIcon
TB,N,V_shouldBalloonHideAppIcon
extension
T@"NSExtension",R,&,N,V_extension
itemID
T@"NSNumber",R,&,N
T@"<PKPlugIn>",R,&,N
isLaunchProhibited
__kIMBalloonPluginManagerInstalledAppsChangedNotification
PluginMetaDataCachePath
com.apple.ExtensionTester.NullMessagesAppExtension
com.apple.hellbender.messagesextension
com.apple.PPTPong.MessagesExtension
com.apple.PPTTimeLabel.MessagesExtension
MSMessageExtensionBalloonPlugin.bundle
Failed to load previously blacklisted extension for identifier %@
PluginMetaDataCache
Error = %@ while trying to get contents of folder
Error = %@ while trying to copy file to new folder
com.apple.MobileSMS.AppMetadataFolderDeleted
clearing in memory salt cache due to dispatch notification
v20@?0i8Q12
Un-whitelisted client tried to use IMBalloonPluginManager
Reading plugin metadata from disk for ID %@
No metadataForPluginIdentifer %@
IMBalloonPluginManager invalid args to _storeMetadata %@ identifier %@
IMBalloonPluginManager could not delete file at path %@ error %@
IMBalloonPluginManager could not write metadata %@ to file %@ idenitifier %@
Failed making file class C: %@ with error %@
IMBalloonPluginManager %s appID = nil
-[IMBalloonPluginManager localParticipantIdentifierForAppID:conversationID:]
localID
Generating local ID for app %@
localID %@ for appID %@
IMBalloonPluginManager %s appID: %@ recipient: %@ 
-[IMBalloonPluginManager recipientIDForRecipient:appID:]
Generating recipientID ID for app %@
recipient %@ for appID %@
-[IMBalloonPluginManager conversationID:appID:]
Generating randomConversationID ID for app %@
randomConversationID %@ for appID %@
v32@?0@"NSString"8@"IMBalloonPlugin"16^B24
IMBalloonPluginManager could not read contents of dir %@ error %@
_deleteMetaDataForPlugins %@
Could not delete plugin meta data at path %@ %@
clearing in memory salt cache
beginMatchingExtensionsWithAttributes
matchingExtensions %lu error %@
loadAppExtensionForProxies
3rd party app discovery time: %@
IMBalloonPluginManager encountered error discovering extensions : %@
@"NSBundle"16@?0@"NSURL"8
.bundle
Setting plugins to remove with delay: %@
v32@?0@"NSBundle"8Q16^B24
Clearing extensions to remove after delay
app extension loading time: %@
v32@?0@"NSExtension"8Q16^B24
Posting notification IMBalloonPluginManagerInstalledAppsChangedNotification
isBlackList
createPlugin
Explicitly removing plugin with bundleID: %@
Attempting to explicitly remove a plugin with a nil bundleID
Removing plugins with identifiers after delay: %@
Removing plugin: %@
v24@?0@"NSString"8^B16
AllowAllBalloonPlugins
loadPlugins
Found plugin: %@
Failed to get bundle identifier for %@
Find Plugin time: %@
Loading all internal plugins
B24@?0@"NSURL"8@"NSError"16
Couldn't enumerate %@: %@
loadAllDataSources
/AppleInternal/Library/Bundles/Messages/iMessageBalloons/
Finished loading all data sources: %@
IMBalloonPluginManager. Did not find any plugin for id %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Extensibility/IMBalloonPluginManager.m
-[IMBalloonPluginManager dataSourceForPluginPayload:]
pluginPayload.pluginBundleID != nil
isRunningPPT
pluginsMap
T@"NSMutableDictionary",&,N,V_pluginsMap
extensionMatchingContext
T@,&,N,V_extensionMatchingContext
pluginMetaDataFolder
T@"NSString",&,N,V_pluginMetaDataFolder
pluginIDToMetadataCache
T@"NSMutableDictionary",&,N,V_pluginIDToMetadataCache
pluginsToRemoveAfterExtensionsUpdate
T@"NSMutableSet",&,N,V_pluginsToRemoveAfterExtensionsUpdate
simulatedConversationID1
T@"NSString",&,N,V_simulatedConversationID1
simulatedConversationID2
T@"NSString",&,N,V_simulatedConversationID2
localParticipantID1
T@"NSUUID",&,N,V_localParticipantID1
localParticipantID2
T@"NSUUID",&,N,V_localParticipantID2
LSPlugInKitProxy
__kIMHandlePropertiesChangedNotification
__kIMHandleExtraPropertiesChangedNotification
__kIMHandleIsMobileChangedNotification
__kIMHandleIsBotChangedNotification
__kIMHandleFeedUpdatedDateChangedNotification
__kIMBuddyPropertiesChangedDoneNotification
__kABIMHandlesChangedNotification
__kIMAffectedIMHandlesKey
__kIMHandleAuthorizationRequestNotification
__kIMHandleIdlePulseNotification
__kIMHandleStatusChangedNotification
__kIMHandleCapabilitiesChangedNotification
__kIMHandleInfoChangedNotification
__kIMHandlePictureChangedNotification
__kIMHandleIsBuddyStatusChangedNotification
__kIMHandleGroupsChangedNotification
__kIMHandleSortOrderChangedNotification
__kIMHandleCustomBackgroundColorChangedNotification
__kIMHandleCustomFontColorChangedNotification
__kIMHandleCapabilitiesUserInfoOldCapsKey
__k_IMHandleCommandReceivedNotification
__k_IMHandleCommandReceivedKey
__k_IMHandleCommandPropertiesReceivedKey
__k_IMHandleCommandDeliveredNotification
__k_IMHandleCommandDeliveredKey
__k_IMHandleCommandPropertiesDeliveredKey
IMServiceImpl: Unknown IMPersonStatus %d
IMServiceImpl: Unknown FZPersonStatus %d
ServiceName
AnonymousKey
ServiceLoginID
AccountID
_LOCALIZABLE_
StatusName
IMCoreSetup: IMHandle init
Dealloc ID: %@    Account: %@
IMHandle
 => done
%@ is posting %@
-[IMHandle _postNotification:]
%@ %@
Business
Placeholder text for business name
Buddy Name
Name of sample buddy in message preferences
Updating unformatted ID from %@ to %@ (%@)
%@%@%@
Not authorized
Buddy status: no pending subscription to presence
Waiting for authorization
Buddy status: subscription to presence waiting for approval
 (You are offline)
Explanation when a buddy's status is unknown
IDStatus
Posting ID status change for: %@   from %d to %d
Logged out %@
Logged out ago format string (arg1:date format)
Logged out %@ minutes ago
Logged out ago format string for many minutes(arg1:minutes)
Logged out 1 minute ago
Logged out ago format string for 1 minute
Logged out under a minute ago
Logged out 1 hour %@ minutes ago
Logged out ago format string for 1 hour and many minutes (arg1:minutes)
Logged out 1 hour 1 minute ago
Logged out ago format string for 1 hour and 1 minute
Logged out %@ hours 1 minute ago
Logged out ago format string for many hours and 1 minute (arg1:hours)
Logged out %@ hours %@ minutes ago
Logged out ago format string for many hours and many minutes (arg1:hours, arg2:minutes)
%@ (Since %@)
Idle status format string (arg1:status name (Idle), arg2:date format)
%@ (%@ min)
Idle status format string (arg1:status name (Idle), arg2:minutes idle)
%@ (%@ h)
Idle status format string (arg1:status name (Idle), arg2:hours idle)
%@ (%@ h %@ min)
Idle status format string (arg1:status name (Idle), arg2:hours idle, arg3:minutes idle)
Away
Default auto-away message if user stays idle too long
%@ capabilities changed: %@
AutomationData
Request to send automation data to: %@
message-id
Request to send simple command to: %@
<None>
> (Person: 
<No AB Match>
) (Account: 
Fetching business info for business with messageUID: %@
MKMapService
MapKit
Successfully fetched business info for business with messageUID: %@
Error getting mapItem for business with messageUID: %@
v40@?0@"NSURLResponse"8q16@"NSData"24@"NSError"32
Error getting mapItem image data for business with messageUID: %@
Successfully fetched mapItem image data for business with messageUID: %@
Error getting mapItem banner image data for business with messageUID: %@
Successfully fetched mapItem banner image data for business with messageUID: %@
otherServiceIDs
T@"NSDictionary",&,N,V_otherServiceIDs
priority
Tq,N,V_priority
Tq,N,V_IDStatus
T@"MKMapItem",&,N,V_mapItem
mapItemImageData
T@"NSData",&,N,V_mapItemImageData
mapItemBannerImageData
T@"NSData",&,N,V_mapItemBannerImageData
suggestedName
T@"NSString",C,N,V_suggestedName
hasLocation
_displayNameWithAbbreviation
T@"NSString",R,&,N,V_id
originalID
T@"NSString",R,&,N,V_uncanonicalID
displayID
normalizedID
hasName
fullName
uniqueName
T@"NSString",R,&,N,V_uniqueName
nameAndID
nameAndEmail
firstName
lastName
nickname
account
T@"IMAccount",R,&,N,V_account
T@"IMServiceImpl",R,&,N
statusMessage
nameOfStatus
richStatusMessage
T@"NSAttributedString",R,&,N,V_richStatusMsg
offlineString
previousStatus
TQ,R,N,V_prevStatus
previousStatusMessage
T@"NSString",R,&,N,V_prevStatusMsg
timeSinceWentOffline
timeSinceStatusChanged
authRequestStatus
TI,R,N,V_authRequestStatus
idleTime
idleString
feedUpdatedDate
T@"NSDate",R,&,N,V_feedUpdatedDate
canBeAdded
canBeDeleted
isBot
TB,R,N,V_isBot
isBuddy
isLoginIMHandle
isVisiblyBlocked
isBlocked
TB,N,SsetBlocked:
isAnonymous
isSystemUser
isMobile
TB,R,N,V_isMobile
isLoginIMHandleForAnyAccount
mobileDeviceName
watchingIMHandle
pictureData
T@"NSData",R,&,N,V_pictureData
extraProperties
T@"NSDictionary",R,&,N,V_extraProps
email
emails
T@"NSArray",R,&,N
person
T@"IMPerson",&,N,SsetIMPerson:
addressBookIdentifier
Ti,R,N,V_addressBookIdentifier
groupsArray
T@"NSSet",R,&,N
hasOtherSiblings
siblings
siblingsArray
accountSiblingsArray
existingAccountSiblingsArray
bestSibling
bestAccountSibling
T@,R,&,N
isConferenceAvailable
hasConferencing
hasVideo
hasMultiwayVideo
hasAudio
hasMultiwayAudio
resource
IDWithoutResource
accountTypeName
T@"NSString",R,&,N,V_guid
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Presence/Base/IMHandle.m
%@ unmatched notification queue release
Sending remote dump for session (%@) to handle: %@
__kIMHandleRegistrarAddressBookChangedNotification
_addressBookChanged
v32@?0@8Q16^B24
IMTiming
_addressBookhangedTiming: %@
Not building sibling cache, AB is not enabled in this process
IMHandleRegistrar
** Added: %@   (%d now exist)
IMHandleDebug
All handles: %@
All handles for account: %@
     %@
    Hurray, no handles!
Handle %@
Handle account %@
Account sibling: %@
No GUID, bailing...
size
v32@?0@"NSDictionary"8Q16^B24
q24@?0@"NSNumber"8@"NSNumber"16
IMCloudKitSyncingEnabled
TB,V_IMCloudKitSyncingEnabled
IMCloudKitIsSyncing
TB,V_IMCloudKitIsSyncing
IMCloudKitIsEligibleForTruthZone
TB,V_IMCloudKitIsEligibleForTruthZone
IMCloudKitIsInExitState
TB,V_IMCloudKitIsInExitState
IMCloudKitIsRemovedFromBackup
TB,V_IMCloudKitIsRemovedFromBackup
IMCloudKitSyncDate
T@"NSDate",&,V_IMCloudKitSyncDate
IMCloudKitStartingPeriodicSync
TB,V_IMCloudKitStartingPeriodicSync
IMCloudKitStartingInitialSync
TB,V_IMCloudKitStartingInitialSync
IMCloudKitStartingEnabledSettingChange
Tq,V_IMCloudKitStartingEnabledSettingChange
IMCloudKitStartingDisableDevices
TB,V_IMCloudKitStartingDisableDevices
IMCloudKitSyncControllerSyncState
TQ,V_IMCloudKitSyncControllerSyncState
IMCloudKitSyncControllerSyncType
Tq,V_IMCloudKitSyncControllerSyncType
IMCloudKitSyncControllerSyncRecordType
Tq,V_IMCloudKitSyncControllerSyncRecordType
IMCloudKitSyncErrors
T@"NSArray",&,V_IMCloudKitSyncErrors
__kIMPeopleAddedNotification
__kIMPeopleRemovedNotification
__kIMPeopleChangedNotification
__kIMPeopleChangedUserInfoKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Presence/Collections/IMPeople.m
Unbalanced calls to beginCoalescedChanges and endCoalescedChanges
people
hidePeople
TB,N,SsetShouldHidePeople:,V_hidePeople
coalescingChanges
com.apple.messages.effect.CKHappyBirthdayEffect
com.apple.messages.effect.CKConfettiEffect
com.apple.messages.effect.CKLasersEffect
com.apple.messages.effect.CKFireworksEffect
com.apple.messages.effect.CKShootingStarEffect
com.apple.messages.effect.CKSparklesEffect
com.apple.messages.effect.CKHeartEffect
com.apple.messages.effect.CKEchoEffect
com.apple.messages.effect.CKSpotlightEffect
com.apple.MobileSMS.expressivesend.impact
com.apple.MobileSMS.expressivesend.loud
com.apple.MobileSMS.expressivesend.gentle
com.apple.MobileSMS.expressivesend.invisibleink
com.apple.messages.effect
com.apple.MobileSMS.expressivesend
Balloons
SocialUILocalizable
name of Balloons effect
Confetti
string for Confetti
Lasers
string for Lasers
Fireworks
string for Fireworks
string for Shooting Star
Celebration
string for celebration
Sent With Love
string for sent with love
Echo
string for echo
Spotlight
string for spotlight
Slam Effect
string for Slam Effect
Loud Effect
string for Loud Effect
Gentle Effect
string for Gentle Effect
Invisible Ink
string for Invisible Ink
Replay Balloons
Replay string for Balloons
Replay Confetti
Replay string for Confetti
Replay Lasers
Replay string for Lasers
Replay Fireworks
Replay string for Fireworks
Replay Shooting Star
Replay string for Shooting Star
Replay Celebration
Replay string for celebration
Replay Sent With Love
Replay string for sent with love
Replay Echo
Replay string for for Echo
Replay Spotlight
Replay string for Spotlight
Replay Slam Effect
Replay string for Slam Effect
Replay Loud Effect
Replay string for Loud Effect
Replay Gentle Effect
Replay string for Gentle Effect
SEND WITH BALLOONS
name of SEND WITH BALLOONS FSM in effect picker
SEND WITH CONFETTI
name of SEND WITH CONFETTI FSM in effect picker
SEND WITH LASERS
name of SEND WITH LASERS FSM in effect picker
SEND WITH FIREWORKS
name of SEND WITH FIREWORKS FSM in effect picker
SEND WITH SHOOTING STAR
name of SEND WITH SHOOTING STAR FSM in effect picker
SEND WITH CELEBRATION
name of SEND WITH CELEBRATION FSM in effect picker
SEND WITH LOVE
name of SEND WITH LOVE FSM in effect picker
SEND WITH ECHO
name of SEND WITH ECHO FSM in effect picker
SEND WITH SPOTLIGHT
name of SEND WITH SPOTLIGHT FSM in effect picker
SLAM
name of SLAM impact effect in effect picker
LOUD
name of LOUD impact effect in effect picker
GENTLE
name of GENTLE impact effect in effect picker
INVISIBLE INK
name of INVISIBLE INK impact effect in effect picker
%@: percent complete = %@ (%.0f of %.0f, %.0f remaining), progress label = '%@', user message = '%@', action label = '%@', hidden: %@, state = %@, 
shouldShowProgressBar
TB,N,V_shouldShowProgressBar
shouldShowUserActionLabel
TB,N,V_shouldShowUserActionLabel
shouldShowUserMessageLabel
TB,N,V_shouldShowUserMessageLabel
shouldShowIndeterminateProgress
TB,N,V_shouldShowIndeterminateProgress
progressLabel
T@"NSString",&,N,V_progressLabel
userMessageLabel
T@"NSString",&,N,V_userMessageLabel
actionLabel
T@"NSString",&,N,V_actionLabel
Tq,N,V_actionType
progressBarValue
Td,N,V_progressBarValue
progressBarMax
Td,N,V_progressBarMax
hidden
TB,R,D,N,GisHidden
percentComplete
Td,R,D,N
remainingItems
percentCompleteString
T@"NSString",R,D,N
T@"NSArray",R,D,N
T@"IMCloudKitSyncState",R,N,V_syncState
syncStatistics
T@"IMCloudKitSyncStatistics",R,N,V_syncStatistics
SYNC_PROGRESS_SYNCING_ITEMS
SYNC_PROGRESS_PREPARING_ITEMS
SYNC_PROGRESS_UPLOADING_ITEMS
SYNC_PROGRESS_DOWNLOADING_ITEMS
SYNC_PROGRESS_PAUSED
Syncing with iCloud Paused
SYNC_PROGRESS_CONNECT_TO_WIFI
Plug in your device and connect to Wi-Fi
SYNC_PROGRESS_SYNC_DISABLED_LABEL_TEXT
Messages in iCloud is currently disabled
SYNC_PROGRESS_REPAIR_ACCOUNT_BUTTON_TITLE
Repair Account
SYNC_PROGRESS_DEVICE_STORAGE_FULL
Device storage is full.
SYNC_PROGRESS_MANAGE_STORAGE
SYNC_PROGRESS_ICLOUD_STORAGE_FULL
iCloud storage is full.
HIDDEN PROGRESS
__kIMMeChangedNotification
__kIMMeStatusChangedNotification
__kIMMeNowPlayingInfoChangedNotification
__kIMMePictureChangedNotification
Not returning me person, AB is not enabled in this process
----- 'me' card changed to: %@
<%@> (Person: %@)
T@"IMPerson",R,N
bestIMHandle
imHandles
+15555648583
+18885551212
john-appleseed@mac.com
kate-bell@mac.com
+18885551213
+18885551214
+15557654321
accountdID
chatIdentifier
style
listeners
T@"NSArray",&,N,V_listeners
com.apple.ft.CallerID.changed
arg%d
methodName
No method name was passed in
error
IMAutomation
clearAttachmentsUploadedToCloudkit
deleteAttachmentWithMessageGUID
arg1
arg2
dictionaryFromGUID
fileSizeForMessageGUID
loadHighResolutionFileForMessageGUID
startConversationFrom
uploadAttachmentToCloudkitWithMessageGUID
Could not find method %@
Automation
IMCoreAutomationPerformOperationWithDictionary method call already on main queue
IMCoreAutomationPerformOperationWithDictionary method call not on main queue, calling dispatch_sync
Did not pass in a valid set of arguments
No usable iMessageAccounts found
P:%@
Did not pass in valid alias
Failed to validate alias | 
Failed to add alias to alias array | 
Cannot set apple id caller id if this alias is not in alias list
Failed to validate callerID | 
Preferred account was not set to specified login account
Failed to change display name | 
receivingAliases
receivingVettedAliases
sendingDisplayName
sendingLogin
/var/tmp/%@
simulatedAccount
T@"IMSimulatedAccount",R,N,V_simulatedAccount
currentMessageID
TQ,R,N,V_currentMessageID
simulatedChatIdentifier
T@"NSString",C,N,V_simulatedChatIdentifier
simulatedAttachments
T@"NSMutableArray",R,N,V_simulatedAttachments
simulatedDisplayName
T@"NSString",C,N,V_simulatedDisplayName
T@"<IMSimulatedChatDelegate>",W,N,V_delegate
__kIMPersonChangedNotification
ShowNicknames
ABPersonGetShortNamePreferNicknames
ShowAbbreviatedNames
ABPersonGetShortNameFormatEnabled
CNContactStore
Contacts
CNAvatarView
ContactsUI
IMPerson
Dealloc person: %@
v16@?0^v8
ABPersonCopyShortName
setEmails called on %@ with: %@ Not supported (yet!)
setPhoneNumbers called on %@ with: %@ Not supported (yet!)
setValues: %@ for IMProperty: %@ called on %@ Not supported (yet!)
setValues: %@ for property: %@ called on %@ Not supported (yet!)
> (Name: 
_recordID
Ti,R,N,V_recordID
_registered
TB,R,N,V_registered
cnContact
T@"CNContact",&,N,V_cnContact
_recordRef
T^v,R,N
recordID
cnContactID
isInAddressBook
abbreviatedName
isCompany
companyName
T@"NSArray",C,N
allEmails
phoneNumbers
mobileNumbers
imageData
imageDataWithoutLoading
Not returning person query, AB is not enabled in this process
IMCoreSetup: -[IMPerson allPeople]
Person
All people: %@
IMCoreSetup: existingABPersonWithFirstName:
com.apple.Search.framework
Bundle identifier: %@    cached allowed; %@
Cache hit: %@
  Querying ABAddressBookCopyPeopleWithName with name: %@
  Result: %@
  Querying ABAddressBookFindPersonMatchingEmailAddress with email: %@
Looking up using country code: %@   has plus prefix: %@
  Querying ABAddressBookFindPersonMatchingPhoneNumberWithCountry with number: %@  countryCode: %@
  Querying ABAddressBookFindPersonMatchingPhoneNumberWithCountry with number: %@
loginHandle
T@"IMHandle",&,N,V_loginHandle
CloudKitEventNotificationManagerTests
starting fake periodic sync with error: %@
Showing error progress for 10 seconds
Hiding error progress
T@"NSError",&,N,V_error
__kIMChatComposeTyping
__kIMChatComposeRecording
__kIMChatPropertiesChangedNotification
__kIMChatDisplayNameChangedNotification
__kIMChatIsFilteredChangedNotification
__kIMChatOverallChatStatusDidChangeNotification
__kIMChatJoinStateDidChangeNotification
__kIMChatRecipientDidChangeNotification
__kIMChatParticipantsDidChangeNotification
__kIMChatParticipantStateDidChangeNotification
__kIMChatErrorDidOccurNotification
__kIMChatEngroupFinishedUpdatingNotification
__kIMChatMessageReceivedNotification
__kIMChatMessageSendFailedNotification
__kIMChatMessageFailureCountChangedNotification
__kIMChatUnreadCountChangedNotification
__kIMChatLoadRequestDidCompleteNotification
__kIMChatValueKey
__kIMChatOldValueKey
__kIMChatIndexKey
__kIMChatQueryIDKey
__kIMChatErrorKey
__kIMChatItemsDidChangeNotification
__kIMChatItemsInserted
__kIMChatItemsRemoved
__kIMChatItemsReload
__kIMChatItemsRegenerate
__kIMChatItemsOldItems
__kIMChatMessageDidChangeNotification
HistoryLoading
PagedHistoryLoading
EnableReadReceiptForChat
EnableReadReceiptForChatVersionID
hasBeenAutoSpamReported
wasAutoDetectedForSpam
wasDetectedAsSMSSpam
smsSpamExtensionName
hasViewedPotentialSpamChat
numberOfTimesRespondedtoThread
com.apple.Messages.telemetry
-[IMChat _initWithGUID:account:style:roomName:displayName:items:participants:isFiltered:hasHadSuccessfulQuery:]
guid: %@  account: %@ style: %d roomName: %@ chatItems: %d participants: %@
Created chat: %@
Dealloc: %@
Clearing [DB] unread count for %@ from %d to %d
Unread count [DB] for %@ stayed at: %d
   Posting new unread count of %u for %@
_dbUnreadCount changed to %d: Posting new unread count of %d for %@
_dbFailedCount changed to %d: Posting new failed count of %d for %@
history query
ChatHistory
updating/acting on query ID: %@  insertHistoricalMessages: %@, limit = %d numberOfMessagesBefore: %d numberOfMessagesAfter: %d
Fixing recipient based on last message old recipient: (%@), messageAccount: (%@)
fixing up chat account based on last message: oldAccount: (%@), messageAccount: (%@)
_archivedItemsToReplace archivedItemsCount: %d numberOfMessagesBefore: %d numberOfMessagesAfter: %d
appending archived items to current items array
Going to append the incoming messages to the end of the _items array
Going to append the incoming messages to the beginning of the _items array
Cannot append to either beginning or end as there is a mismatch in messageIDs
DeleteHistory
MarkAsSpam
Marked %ld messages as spam
autoReportSpam on self %@
update isFiltered
update isSpam
Clearing chat: %@
clear transcript
Account Logged Out: chat: %@ account: %@
Posting notification: %@ userInfo: %@
Posting notification: %@
ClientNotificationProcessing
Handle deleted messages: %@  in chat: %@
PKPeerPaymentMessageTypeFromDataURL
PassKitCore
Failed to unarchive message payload data. Exception: %@
Checking for request type in incoming SURF message for spam filtering
we have a typing indicator so setting sortID 0 message id %@ message guid %@
Fixing message time to be found item's time %@
We have a typing indicator or the sort id for an existing item is 0, so resetting {itemIsTyping: %@ nonTypingZero %@}
Need to transfer sort id over from previous item message mid %@ sid %@ item mid %@ sid %@
handle incoming message: %@   chat: %@
-[IMChat _handleIncomingItem:]
update join state for chat guid: %@  old join state: %d  new join state: %d
chat: %@  handle: %@  status: %d
Request to %@ for chat: %@
Starting %@ query for chat: %@
Done loading %@
Posting IMChatEngroupFinishedUpdatingNotification from IMChat
Changing display name from %@ to %@
Updating display name from %@ to %@
Updating engramID string version: %@
EngramIDs are equal, not updating
[%@]Request to change display name from %@ to %@
chat: %@
chat: %@   message: %@  adjusting sender: %@
test@icloud.com
Updating typing guid on IMMessage from %@ to %@
 => Message is finished, clearing typing guid: %@
Adding pending message message %@ for account: %@ (%@)
MessageService
Before splitting up rich links into file for msg guid %@ message payloadad data length %@, original payload data lenght %@
After splitting up rich links into file for msg guid %@ message payloadad data length %@, original payload data lenght %@
Sending message %@ to account: %@ (%@)  (Pending: %@)
message send
itemToUpdateTime: %@ lastIncomingMessage time: %@ lastSentMessageDate: %@
The last recent message was received less than a minute ago, going to use time interval: %@ date: %@ clientSendTime: %@
Client request to send message: %@
Exception fired when trying to signpost send file message. %@
New immessage does not have notificationIDSTokenURI, it is now set to %@ before sending.
Add sending message: %@
Client request to send current location for chat %@
 => we are already sending a current location for this chat, ignoring (%@)
Update current location complete with error: %@
v24@?0@"CLLocation"8@"NSError"16
currentTimeInterval %f, latestTypingIndicatorTimeInterval %f
Setting local user is composing with %@ for chat: %@   supplied guid: %@
Setting typing indicator time to %f
 => Updating existing composeing message to recording message: %@
 => Sending start typing message: %@
 => Not sending, this is a group chat
Dispatching cancel typing indicator after %f seconds
In cancel typing indicator block. _typingGUID %@ _latestTypingIndicatorInterval %f, shouldSendCancelTypingIndicator %@
 => Sending cancel typing message: %@
*** We tried to send a cancel typing indicator, but already had no guid set. shouldSendCancelTypingIndicator set to %@
chat: %@   message: %@
Asked to update empty message in chat: %@
Sending update message %@ to daemon (Chat: %@)
chat: %@   message: %@   flags: 0x%llXlX
Clearing read message cache
mark as read
Request to mark all messages as read: %@
%@ has no unread messages, tell the daemon that we tried to mark it as read since this could affect message suppression
reportSpam
chat: %@   property: %@   value: %@
SkipAutoJoin
ignoreAlertsFlag
com.apple.iChat.LastArchivedMessageDate
com.apple.iChat.LastArchivedMessageID
CKChatConversationKeyboardKey
CKChatLastCanceledMessageTime
CKChatConsecutiveCanceledMessageCount
CKChatConsecutiveManuallyCanceledMessageCount
com.apple.iChat.UnreadMessagesKey
CKChatUnmuteTime
LastCanceledMessageTime
ConsecutiveCanceledMessageCount
ConsecutiveManuallyCanceledMessageCount
Attempt to modify chat property: %@   which is not in the whitelist
Setting chat property: %@  value: %@
User toggled the read receipt setting to: %d for chat: %@ with properties prior to updating: %@
Setting read receipt versionID to: %@ from: %@
Setting read receipt value to: %@
Sending generic notification to update chat properties for properties: %@
Trying to change 1-1 account from %@ to %@
Trying to change group chat account from %@ to %@ (service change: %@)
 Old handle: %@     New handle: %@
 Old participants: %@        New participants: %@
Trying to change recipient from %@ to %@ (Chat: %@)
** Cannot change recipient from %@ => %@, this is not a chat sibling
Request to join chat: %@
Request to leave chat: %@
Request to remove chat: %@
Cannot add participant %@  that would put us over our max size of: %d
Cannot add participants: %@ that would put us over our max size of: %d
Cannot mutate participants on 1-1 chat: %@
Inviting: %@   (Pending: %@)
Request to invite participants to chat: %@   handles: %@  reason: %@
Cannot mutate participants on chat: %@   service doesn't support it: %@
  * No need to invite: %@   - already in chat
  * Need to invite: %@
Failing to invite some participants that would put us over our max size of: %d
  => Will invite: %@
chat: %@   handles: %@  reason: %@
Tried to remove too many participants, ignoring
Failing to add some pending participants that would put us over our max size of: %d
Address book change
This is a 1-1 chat, the account attached to it is gone, we're re-targeting to this account: %@
This is a 1-1 chat, the account attached to it is gone, we're re-targeting from: %@ to: %@ (Chat: %@)
This is a 1-1 chat, the account attached to it is gone, and we found no siblings to fix ourselves with, leaving (Chat: %@)
This is a group chat, found a new account to attach to: %@  (Chat: %@)
This is a group chat, and the account attached to it is gone, leaving it (Chat: %@)
<IMChat %p> [Identifier: %@   GUID: %@ Persistent ID: %@   Account: %@   Style: %c   State: %d  Participants: %d  Room Name: %@  Display Name: %@  Last Addressed: %@ Group ID: %@  Unread Count: %u  Failure Count: %u, isFiltered: %@, hasHadSuccessfulQuery: %@, bizIntent:%@]
chat: _initWithDictionaryRepresentation: %@  dictionary: %@  messages: %@
roomName
lastAddressedLocalHandle
groupID
isFiltered
hasHadSuccessfulQuery
engramID
lastMessageTimeStampOnLoad
state
participants
Setting initial join state: %d
Set send progress delegate for chat %@. Send progress: %@
_guids
T@"NSMutableSet",&,N,S_setGUIDs:,V_guids
latestTypingIndicatorTimeInterval
Td,N,V_latestTypingIndicatorTimeInterval
hasSurfRequest
TB,N,V_hasSurfRequest
_shouldRegisterChat
lastAddressedHandleID
T@"NSString",R,N,V_lastAddressedHandleID
T@"NSString",&,N,V_groupID
contextInfo
T^v,N,V_context
personCentricID
T@"NSString",&,N,V_personCentricID
T@"NSString",R,N,V_guid
T@"IMAccount",R,N,V_account
chatStyle
TC,R,N,V_style
persistentID
deviceIndependentID
T@"NSData",R,N,V_engramID
messageCount
unreadMessageCount
messageFailureCount
canLeaveChat
canHaveMultipleParticipants
overallChatStatus
groupChat
TB,R,N,GisGroupChat
T@"NSString",&,N,V_displayName
T@"NSString",R,N,V_roomName
roomNameWithoutSuffix
frequentReplies
T@"NSArray",&,N,V_frequentReplies
joinState
Tq,R,N,V_joinState
hasUnhandledInvitation
localUserIsTyping
localUserIsRecording
localUserIsComposing
localTypingMessageGUID
firstMessage
lastMessage
lastFinishedMessage
lastIncomingMessage
lastIncomingFinishedMessage
lastIncomingFinishedMessageWithTextContent
lastFinishedMessageDate
lastFinishedMessageID
lastSentMessageDate
Tq,R,N,V_lastMessageTimeStampOnLoad
TB,D,N
T@"NSArray",R,N,V_participants
recipient
T@"IMHandle",&,N
invitationForPendingParticipants
T@"IMMessage",&,N,V_invitationForPendingParticipants
bizIntent
T@"NSDictionary",C,N,V_bizIntent
Trying to loadMessagesBeforeAndAfterGUID with a null messageGUID. Please call loadMessagesUpToGUID if a messageGUID is not specified, Returning early
Begin loadMessagesBeforeAndAfterGUID: %@ numberOfMessagesBeforeGUID: %lu numberOfMessagesAfterGUID: %lu
v20@?0B8@"NSError"12
loadMessagesBeforeAndAfterGUID completion with success: %d error: %@
FrequentRepliesLoading
UnreadLoading
AttachmentPathsLoading
Return %d attachments
Delete transfer guids: %@
numberOfMessagesToKeepLoaded
TQ,N
hasMoreMessagesToLoad
hasMoreRecentMessagesToLoad
T@"NSArray",R,C,N
Not Yet Invited
Invite Failed
Deciding
Declined
Joined
Left
Kicked
Banned
Removing
Unjoined
Leaving
Joining
IMCoreSetup: Generate chat items
chat: <%p> beginHoldingUpdatesForKey: %@
chat: <%p> endHoldingUpdatesForKey: %@
chat: <%p> isHoldingUpdatesForKey: %@ - %@
chat: <%p> endHoldingUpdatesForAllKeys
chat: <%p> chatItemsUpdater: %@ was holding updates
chat: <%p> updateChatItemsIfNeeded
chat: %@ _updateChatItems with block: %@  (%@)
No chatItems yet. Post for compatibility.
v32@?0@"IMChatItem"8Q16^B24
Schedule _replaceStaleChatItems for nextStaleChatItem:%@
inserted: %@
removed: %@
reload: %@
regenerate: %@
new chat items: %@
Don't post. No significant updates to chatItems.
_replaceStaleChatItems
Request to delete chatItem %@ which can't be deleted
Delete chat items: %@
delete chat items
Request to delete subset of chatItems from message. Update message.
Request to delete all chatItems for message. Delete message.
Mark chat item as saved: %@
mark as saved
Mark chat item as played: %@
mark as played
Mark chat item as having played expressive send: %@
mark as played expressive send
mark as unactionable
fmfHandles
T@"NSSet",R,N
allSiblingFMFHandles
hasRecipientsFollowingLocation
hasSiblingRecipientsSharingLocation
allRecipientsFollowingLocation
hasRecipientsSharingLocation
allRecipientsSharingLocation
chatRegistry
T@"IMChatRegistry",R,N
canDelete
balloonBundleID
v24@?0@"IMItem"8^B16
__imLastMessageItem
__kIMMessageErrorDomain
/emote
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Chat/IMMessage.m
Invalid parameter not satisfying: %@
imHandle != nil
flags
plainBody
bodyData
payloadData
expressiveSendStyleID
timeDelivered
timeRead
timePlayed
timeExpressiveSendPlayed
fileTransferGUIDs
messageID
MarcoLoggingStringForMessageData
Marco
%@[from=%@; msg-subject=%@; account:%@; flags=%x; subject='%@' text='%@' messageID: %lld GUID:'%@' sortID: %@ date:'%f' date-delivered:'%f' date-read:'%f' date-played:'%f' empty: %@ finished: %@ sent: %@ read: %@ delivered: %@ audio: %@ played: %@ from-me: %@ emote: %@ dd-results: %@ dd-scanned: %@ error: %@ associatedMessageGUID: %@ associatedMessageType: %lld balloonBundleID: %@ expressiveSendStyleID: %@ timeExpressiveSendStylePlayed: %f bizIntent:%@ locale:%@, ]
_imMessageItem
T@"IMHandle",&,N,S_updateSender:,V_sender
T@"NSError",&,N,S_updateError:,V_error
TQ,N,S_updateFlags:,V_flags
T@"NSDate",&,N,S_updateTime:,V_time
T@"NSDate",&,N,S_updateTimeRead:,V_timeRead
T@"NSDate",&,N,S_updateTimeDelivered:,V_timeDelivered
T@"NSDate",&,N,S_updateTimePlayed:,V_timePlayed
Tq,N,S_updateMessageID:,V_messageID
T@"NSString",&,N,S_updateGUID:,V_guid
T@"NSString",C,N,S_associatedMessageGUID:,V_associatedMessageGUID
Tq,N,S_associatedMessageType:,V_associatedMessageType
T{_NSRange=QQ},N,S_associatedMessageRange:,V_associatedMessageRange
T@"NSDictionary",C,N,S_messageSummaryInfo:,V_messageSummaryInfo
T@"NSDictionary",&,N,S_updateBizIntent:,V_bizIntent
locale
T@"NSString",&,N,S_updateLocale:,V_locale
T@"NSAttributedString",&,N,S_updateText:,V_text
isInvitationMessage
TB,N,V_isInvitationMessage
T@"NSArray",C,N,S_updateFileTransferGUIDs:,V_fileTransferGUIDs
sortID
TQ,N,V_sortID
T@"IMHandle",R,N,V_subject
messageSubject
T@"NSAttributedString",R,N,V_messageSubject
senderName
summaryString
T@"NSString",&,N,V_balloonBundleID
T@"NSData",&,N,V_payloadData
associatedBalloonBundleID
T@"NSString",&,N,V_associatedBalloonBundleID
T@"NSString",&,N,V_expressiveSendStyleID
T@"NSDate",&,N,V_timeExpressiveSendPlayed
hasInlineAttachments
inlineAttachmentAttributesArray
isSent
isFinished
isTypingMessage
isLocatingMessage
isEmote
isEmpty
isDelayed
isAutoReply
isDelivered
isRead
isAudioMessage
isAddressedToMe
isAlert
isSystemMessage
hasDataDetectorResults
wasDowngraded
wasDataDetected
customTypingIndicatorIcon
T@"NSData",&,N,V_customTypingIndicatorIcon
notificationIDSTokenURI
T@"NSString",&,N,V_notificationIDSTokenURI
isSOS
TB,N,V_isSOS
Undefined Error
No Error
Unknown Error
Send Cancelled
Send Timeout
Send Failed
Internal Failure
Network Failure
Network Lookup Failure
Connection Failure
No Network
Network Busy
Network Denied
Signature Error
Server Decode ERror
Server Parse Error
Server Internal Error
Invalid Server Request
Malformed Server Request
Unknown Server Request
Server Token Invalid
Server Rejected
Remote User Invalid
No Remote User
Remote User Incompatible
Remote User Rejected
Transcode Failure
Encryption Error
Decryption Error
OTR Encryption Error
OTR Decryption Error
Account Disabled
No Local Account
Account Needs Update
Account Invalid
File Upload Failure
File Download Failure
Attachment Upload Error
Attachment Download Error
System Needs Update
Agent Crashed
Invalid Local Credentials
Location Timeout
Location Unauthorized
isAssociatedMessage
T@"NSDictionary",R,C,N
http://
https://
bestHandlesForPersons could not find a chat because the persons set being passed is empty
%@ were resolved to %@ because chat %@ is the designated channels for the recipients
%@ were resolved to %@ because chat %@ included all recipients
B32@?0@"NSString"8@"NSDictionary"16^B24
%@ were resolved to %@ because account %@ was previously used to contact all recipients
%@ were resolved to %@ because account %@ was resolved as best account to contact all recipients
%@ were resolved to %@ because all recipients have iMessage compatible IDs
%@ were resolved to %@ because all recipients have SMS compatible phone numbers
Failed to resolve %@. No chat history, iMessage IDs or valid phone numbers could be found
Did not find chat history for persons %@.
B16@?0@"IMChat"8
+[IMHandle bestHandlesForPersons:]
__kIMChatRegistryDidRegisterChatNotification
__kIMChatRegistryDidUnregisterChatNotification
__kIMChatRegistryWillUnregisterChatNotification
__kIMChatRegistryIsIncomingKey
__kIMChatRegistryMessageSentNotification
__kIMChatRegistryMessageSentMessageKey
__kIMChatRegistryMessageSendTimeKey
__kIMChatRegistryContinuityURLKey
com.apple.Messages
__kIMChatRegistryWillLoadNotification
__kIMChatRegistryDidLoadNotification
__kIMChatRegistryDidLoadIsRefreshKey
__kIMChatRegistryUnreadCountChangedNotification
__kIMChatRegistryLastFailedMessageDateChangedNotification
__kIMChatRegistryFailedCountChangedNotification
  => DataDetecting IMMessage: %@
v20@?0B8@"IMMessage"12
DD Complete, wasProcessed: %@    updating message: %@
  => Not DB Backed, not updating
senderInfo
ChatRegistry
Registering...  thread: %@   guid: %@
_chatGUIDToChatMap
_threadNameToChatMap
[self batchProcessingRegistry]->_chatGUIDToChatMap
[self batchProcessingRegistry]->_chatGUIDToCurrentThreadMap
[self batchProcessingRegistry]->_threadNameToChatMap
-[IMChatRegistry _registerChatDictionary:forChat:isIncoming:newGUID:shouldPostNotification:]
 => empty thread name
This call is deprecated, and doesn't do anything anymore, please file bugs if you need some behavior here
Unregistering chat: %@
guid: %@
Unregistering chat with GUID: %@
-[IMChatRegistry _unregisterChatWithGUID:]
handle: %@
No chat found
Found created chat: %@
registering outgoing chat: %@
Joining chat: %@
Redirecting chat %@ to handle: %@
Registering outgoing chat: %@
Found existing chat: %@
handles: %@  name: %@
Failing to invite participants that would put us over our max size of: %d
roomName: %@  account: %@
Account pushed room name to: %@
Registering chat: %@
MessagesURL
generating url for chat: %@, orHandles: %@, text: %@
sms://open?service=%@
&groupid=%@
&displayname=%@
&body=%@
&recipients=%@
&recipient=%@
urlString: %@
sms:/open?address=%@
groupid
address
recipients
addresses
message-guid
finding chat for URL: %@
    => found chat: %@
didn't find chat, lets look for it as a chat identifier
didn't find it, going through participant logic and others
displayname
Active chat URL to %@
INInteraction
INSendMessageIntent
INSendMessageIntentResponse
INPerson
INMessage
Current user activity with chat: %@ handles: %@ title: %@
iMessage map had entry for %@
identifier: %@
handles: %@  groupID: %@
allowRetargeting is YES, attempting to find better handles for addresses: %@
best handles: %@
v32@?0@"NSDictionary"8@"IMAccount"16@"IMChat"24
existingChatForHandles: %@  groupID: %@ displayName %@ isJoined %@ 
   => Found existing 1-1 chat: %@
Looking for chat sibling.
   => Found existing group chat: %@
   => Found existing room chat: %@
ChatLoading
Request to load chat with identifier %@
No exisiting chat. Calling out to daemon to load chat %@
_chatsBeingLoadedMap
ChatLoading failed to load chat in time for chat identifier %@
-[IMChatRegistry handleIMChatParticipantsDidChange:]
Participants changed in [%@]
We already have a blocking load request out, bailing: %@
Blocking to wait for query completions: %@
Done blocking waiting for completions (Remaining: %@)
****** Failed to complete all history queries in a blocking request: %@
queries: %@
Request to block to wait for query completions: %@
  => Blocking now
  => Deferring it
_postMessageSentNotifications
TB,N,S_setPostMessageSentNotifications:,V_postMessageSentNotifications
_defaultNumberOfMessagesToLoad
TQ,N,S_setDefaultNumberOfMessagesToLoad:,V_defaultNumberOfMessagesToLoad
personaKitRetriveAPITimedOut
TB,N,V_personaKitRetriveAPITimedOut
simulatedChats
T@"NSArray",&,N,S_setSimulatedChats:,V_simulatedChats
_isLoading
TB,R,N,V_loading
batchProcessingRegistry
T@"IMChatRegistry",&,N,V_batchProcessingRegistry
batchProcessingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_batchProcessingQueue
isBatchProcessing
updateBlocks
T@"NSMutableArray",&,N,V_updateBlocks
preExistingAllChats
T@"NSArray",&,N,V_preExistingAllChats
allExistingChats
numberOfExistingChats
open?groupid
open?address
open?addresses
open?message-guid
open?recipients
open?recipient
open?service
All Registered IMPersons:
    Person: %@  (%@)
_personMap
T@"NSMutableDictionary",&,V_personMap
Loved
Liked
Disliked
Laughed at
Emphasized
Questioned
Removed a heart from
Removed a like from
Removed a dislike from
Removed a laugh from
Removed an exclamation from
Removed a question mark from
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Chat/IMMessageAcknowledgmentStringHelper.m
+[IMMessageAcknowledgmentStringHelper messageAcknowledgmentString:lowercase:]
Unknown acknowledgment name for type: %lld
an audio message
an image
a contact
an event
a location
a movie
a Wallet pass
an attachment
You %@ "%%@"
You %@ %@
You %@ %%@
%%@ %@ "%%@"
%%@ %@ %@
%%@ %@ %%@
%@ "%%@"
%@ %%@
Starting fake periodic sync
0000000000
IMBalloonPluginVersionUndefined
NSExtension
MSMessagePayloadProviderIdentifier
:%@:%@
IMBalloonApp
EXTENSION INTERRUPTION BLOCK CALLED extensionIdentifier: %@, requestIdentifier: %@
v16@?0@"<NSCopying>"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Public API/IMBalloonApp.m
-[_IMBalloonExtensionApp initWithPluginBundle:extension:pluginKitProxyClass:proxy:]
[self.browserDisplayName length] > 0
MSHideInAppDrawer
MSCanSendDataPayloads
MSShouldBalloonHideAppIcon
MSShouldHideAppSwitcher
v24@?0@"<NSCopying>"8@"NSError"16
LSApplicationIsStickerProvider
T@"NSExtension",&,N,V_extension
CKBrowserDisplayName
CFBundleName
loadAppBundle
Loaded %@, %@
loadPlugin
CKBrowserClass
CKDatasourceClass
IMCustomTypingIndicatorClass
CKEntryClass
DisabledApps
TB,N,V_isLaunchProhibited
TB,N,V_showInBrowser
TB,N,V_shouldHideAppSwitcher
T@"NSBundle",&,N,V_appBundle
T@"NSBundle",&,N,V_pluginBundle
T@"NSNumber",&,N,V_itemID
T@"NSString",&,N,V_browserDisplayName
T@"NSString",&,N,V_identifier
isBetaPlugin
TB,R,N,V_isBetaPlugin
isStickerPackOnly
TB,R,N,V_isStickerPackOnly
T@"NSString",R,N,V_version
com.apple.private.IMCore.IMAutomationMessageSend
createIMMessageToSendWithMessage, setting bundleID value to %@ and attribution info name %@ on transferGUID %@
createIMMessageToSendWithMessage, attribution info %@
sendMessageSync messageText %@ handle %@ filePaths %@ bundleID %@ attributionInfoName %@ timeout: %f
Invalid parameters
SendMessage returning resultDir:%@
GUID
messageToSend body:%@ isTyping message %@ flags %@
Sent IMmessage %@ resultDir:%@
Requesting high resolution image dowbnload for guid %@ with filename %@
filePath
success
Successfully fetched high res image, filename is %@
Error: failed to fetch high res image, filename is %@
Failed to fetch high res image
v20@?0B8@"NSString"12
fileSizeForMessageGUID: error getting size  for msg guid %@ at high res path %@ error was %@
filesize-hq
Found high res image for msg guid %@, filesize for high res path %@ is %lld
fileSizeForMessageGUID: error getting size  for msg guid %@ at low res path %@ error was %@
filesize
Could not find any atatchments with message guid %@
Could not find any atatchments with message guid
Could not find IMDMessageRecordRef with message guid
IMDMessageRecordCopyMessageForGUID
IMDPersistence
IMDMessageRecordBulkCopy
itemType
replaceID
date-read
date-delivered
datePlayed
attributedBody
accountGUID
handleID
hasAttachments
wasDDScanned
roomnames
otherHandleID
groupTitle
groupActionType
shareStatus
shareDirection
expireState
messageActionType
timePlayedExpressiveSend
destinationCallerID
pendingSendGUIDs
T@"NSMutableSet",&,N,V_pendingSendGUIDs
sentMessageInfo
T@"NSMutableDictionary",&,N,V_sentMessageInfo
Error occurred copying attachment files to tmp path: %@
Error occurred deleting tmp attachment file: %@
valid text
IMAddressBookChangedNotification
IMAddressBookAddedIMPersonsKey
IMAddressBookUpdatedIMPersonsKey
IMAddressBookRemovedIMPersonsKey
Could not create address book: %@
Setting address book enabled: %@
IMHandleRegistrarAddressBookChanged!
_IMABThreadedAddressBookExternallyChanged!
__IMABProcessThreadedChange
_IMABThreadedAddressBookChanged!
spokenPhrase
pronunciationHint
vocabularyIdentifier
alternativeSpeakableMatches
com.apple.iChat
com.apple.systemuiserver
com.apple.mobilesms.notification
com.apple.mobilesms.compose
com.apple.MobileSMS.MessagesNotificationExtension
com.apple.springboard
com.apple.Carousel
com.apple.messages.AssistantExtension
com.apple.messages.ReplyExtension
com.apple.messages.ShareExtension
com.apple.PassKit.PassKitIntentsExtension
com.apple.SiriViewService
IMCoreSetup
IMCore setup timing: %@
Requested to replay a database that does not exist at path: %@
Aborting with Error: %@
com.messages.automation
(handles) == nil
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Automation Hooks/IMAutomationGroupChat.m
(groupID) == nil
[participants count] == 0
join us
(message) == nil
(newName) == nil
([handle ID]) == nil
(account) == nil
(handleString) == nil
(outList) == nil
groupParticipantsWithGroupID incoming ID %@ 
groupParticipantsWithGroupID resulting participants %@ 
groupParticipantsWithGroupID resulting chat %@ 
__kIMIDStatusControllerUpdatedNotification
Found IMService %@ for service with name: %@
   Found account: %@
   URI: %@   ID: %@   Existing handle: %@
IDStatus for ID
ID %@  onService: %@   (URI: %@)
v16@?0q8
-[IMIDStatusController _idStatusForID:onAccount:]
ID %@  onAccount: %@
Status for %@ is %ld
IMIDStatusControllerListenerID
ID %@  onService: %@  onAccount: %@
Sending request to daemon for ID %@ onService %@
Received query result for ID: %@  %d
Cannot issue ID status for ID: %@   on service: %@
ID %@  onService: %@
_servicesRegistered
T@"NSMutableSet",&,N,V_servicesRegistered
_servicesLock
T@"NSRecursiveLock",&,N,V_servicesLock
Messenger
Madrid
Venice
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1978.22.16/IMCore/Source/Chat/IMTranscriptChatItemRules.m
-[IMTranscriptChatItemRules _didProcessChatItems:]
[associatedMessageChatItem isKindOfClass:[IMMessageEditChatItem class]]
Expected %@ to emit a IMMessageEditChatItem (got %@ instead).
v32@?0@8@"IMMessageActionItem"16^B24
q24@?0@"IMMessageActionItem"8@"IMMessageActionItem"16
v32@?0@"NSString"8@"NSNumber"16^B24
TranscriptChatItemRules
We should be creating the load more item
@"IMTranscriptChatItem"8@?0
We successfully created the load more chat item
B16@?0@8
Attribution chat items to insert: %@ did not match indices: %@
IMTranscriptChatItemRules
Can only delete message parts. Tried to delete %@ from message:%@
Failed to find plugin data source for identifier '%@'
v40@?0@8{_NSRange=QQ}16^B32
Vegas Trip
emotes
orders.apple.com
Error: %@ getting names for business with messageUID: %@
MKErrorDomain
lock
T@"NSLock",&,V_lock
cache
T@"NSMutableDictionary",&,V_cache
pendingRequests
T@"NSMutableDictionary",&,V_pendingRequests
We have items with the same sortID that have different guids item1 %@ item2 %@
B24@?0@"IMItem"8@"IMItem"16
com.apple.imessage
TypingMessageTimeout
Insert associated item %@
_IMItemsControllerInsertMessageAcknowledgment replaced item %@ at idx %lu
_IMItemsControllerInsertMessageAcknowledgment removed item at idx %lu
_IMItemsControllerInsertMessageAcknowledgment insert item at last idx
Sending fake state: %@
enabled
TB,N,GisEnabled
syncing
TB,N,GisSyncing
T@"NSDate",&,N
eligibleForTruthZone
rampedIntoTruthZone
TB,N,V_rampedIntoTruthZone
isChangingEnabledState
Tq,N,V_isChangingEnabledState
isStartingSync
TB,N,V_isStartingSync
TB,N,V_isDisablingDevices
TQ,N,V_syncControllerSyncState
syncType
Tq,N,V_syncType
syncStats
T@"NSDictionary",&,N,V_syncStats
testState
T@"IMCloudKitMockSyncState",&,N,V_testState
__kIMChatHistoryControllerIsFullNotification
__kIMChatHistoryControllerIsNoLongerFullNotification
_runningQueries
T@"NSMutableDictionary",&,V_runningQueries
Setting up test: %@
Tearing down test: %@
Test got syncState change: %@
Test got syncState progress: %@
cloudKitHooks
T@"IMCloudKitHookTestSingleton",&,N,V_cloudKitHooks
__kIMPreferredAccountForServiceChangedNotification
Registering for preferred account changes
v16@?0@"NSNotification"8
 Returning preferred sendable account for service: %@    account: %@
 Returning default best operational sending account for service: %@    account: %@
 Returning default best account for service: %@    account: %@
Updating preferred account for service: %@    account: %@
Found existing chat for addresses: %@   chat: %@
Found existing chat for addresses: %@   returning chat's account: %@
Found no existing chat for addresses: %@   returning preferred account for service: %@
DDScannerResult
DataDetectorsCore
dd-result
DataDetector
IMCopyDDScannerResultFromAttributedStringData: %@
Could not unarchive DDScannerResult data: %@ error: %@
Could not create keyed unarchiver due to error: %@
DDResultAttributeName
v32@?0@"NSString"8@"NSData"16^B24
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
com.apple.IMDDScannerQueue
Exception scanning message: %@   (%@)
Request to scan message: %@
Not scanning message, it is unfinished or empty: %@
Not scanning string: %@
 => Result message: %@  (%@) Found Results: %@, wasProcessed = %@
%@ - guid: %@ path: %@ fileTransfer: %@, createdDate = %@, isSticker = %d
Hiding cloude kit sync progress because we've had a successful sync within the last seven days.
chat: %@  messages: %@
Sending read receipt for all messages in chat: %@   for account: %@
chat: %@  item: %@
Storing item: %@ in chat: %@
chat: %@ message: %@
Sending played receipt for message %@ in chat: %@   for account: %@
Setting played expressive send for message %@ in chat: %@   for account: %@
Sending saved receipt for message %@ in chat: %@   for account: %@
Marking chat as had successful ID query in chat: %@   for account: %@
chat: %@  message: %@
Bailing sending message as its a typing message and service is not iMessage
IMDisableSlowSendStackshots
Did not store message %@ from process %@ within %f seconds
Before Siri passed in following notificationIDSTokenURI %@ so setting it on immessageitem
Siri passed in following notificationIDSTokenURI %@ so setting it on immessageitem
now it is set to %@
AlwaysSendLasers
Forcing laser due to defaults com.apple.MobileSMS AlwaysSendLasers
Sending message: %@ to %@ account: %@
chat: %@  participants: %@  reason: %@
chat: %@  joinProperties: %@
Forwarding join chat for: %@   to account: %@
Forwarding leave chat for: %@   to account: %@
Unjoining chat locally: %@
Done
Removing chat from the agent too: %@
   Found guid to remove: %@
Forwarding decline chat for: %@   to account: %@
chat: %@  properties: %@  participant: %@
chat: %@  property: %@  value: %@
chat: %@  update display name: %@
-[IMChatRegistry(IMChatRegistry_Sending) _chat:updateIsFiltered:]
chat: %@  update is filtered: %d
chat: %@ limit: %d beforeGUID: %@ afterGUID: %@ queryID: %@
_chat_loadPagedHistory chat: %@ numberOfMessagesBefore: %d numberOfMessagesAfter: %d messageGUID: %@ queryID: %@
chat: %@ beforeGUID: %@ afterGUID: %@ queryID: %@
-[IMChatRegistry(IMChatRegistry_Sending) _chat_markAsSpam:queryID:autoReport:]
chat: %@ limit:%d queryID: %@
chat: %@ limit:%lu queryID: %@
chat: %@ queryID: %@
Close session for business chat: %@
Closing chat session with business with chatIdentifier: %@ chat: %@ on account: %@
ChatRegistry - Cannot close session. Did not find account for chat: %@
     Query with participant: %@
           => Adding handle: %@
           => Adding service: %@
           => Adding identifier: %@
kCLLocationAccuracyNearestTenMeters
IMLocationManager
Location manager got updated location
Location manager failed with error %@
Location update timer fired, got location with desired accuracy
Location update timer fired, did not get desired accuracy before timeout. Firing completion handlers
Location update timer fired, desired accuracy not obtained but we have time left
IMLocationManager Timed Out
IMLocationManager does not have location authorization
Location manager timed out. Reason: %@
Location manager firing completion handlers. Has valid location %@ error %@
CLLocationManager
locationAuthorizationDenied
location
T@"CLLocation",R,N
T@"NSError",R,N
T@"CLLocation",&,N,V_location
locationUpdateTimer
T@"NSTimer",&,N,V_locationUpdateTimer
locationManager
T@"CLLocationManager",&,N,V_locationManager
T@"NSMutableArray",&,N,V_handlers
locateStartTime
T@"NSDate",&,N,V_locateStartTime
__kIMChatFMFStatusDidChangeNotification
__kIMFMFSessionRelationshipStatusDidChangeNotification
__kIMFMFSessionHandleLocationRefreshedNotification
__kIMFMFSessionLocationReceivedNotification
__kIMFMFSessionActiveDeviceChangedNotification
Location
Forwarding mapping packet: %@ to daemon for ID: %@
FMFHandle
refreshLocationForHandles %@ callerId %@ error %@
v24@?0@"NSString"8@"NSError"16
refreshLocationForHandles - Failed to generate FMFHandle for %@
FMF updated active device %@ error %@
v24@?0@"FMFDevice"8@"NSError"16
v16@?0@"NSError"8
FMF setActiveDevice %@
FMF didReceiveLocation %@
FMF friendshipRequestReceived %@
FMF friendshipWasRemoved %@
FMF didStartSharingMyLocationWithHandle %@
FMF didStopSharingMyLocationWithHandle %@
FMF didStartAbilityToGetLocationForHandle %@
FMF didStopAbilityToGetLocationForHandle %@
FMF didChangeActiveLocationSharingDevice %@
willSendFriendshipOfferToHandles %@ untilDate %@ callerId %@ groupId %@
sendFriendshipOfferToHandles %@ untilDate %@ callerId %@ groupId %@ mappingIdentifiers %@ error %@
v24@?0@"NSDictionary"8@"NSError"16
willStopSharingMyLocationWithHandles %@ callerId %@ groupId %@
stopSharingMyLocationWithHandles %@ callerId %@ groupId %@ mappingIdentifier %@ error %@
Posting FMF notification: %@  object: %@ userInfo: %@
FMFSession
FMFGroupIdOneToOne
FMFGroupIdGroup
activeDevice
T@"FMFDevice",&,N,V_activeDevice
session
T@"FMFSession",&,N,V_session
establishingAccountID
T@"NSString",&,N,V_establishingAccountID
restrictLocationSharing
disableLocationSharing
~/Library/SMS
com.apple.demo-settings
StoreDemoMode
com.apple.imabrecordcache
unique_id
Found no ab cache on disk
ClearedABCache
_im_ab_cache
_im_ab_cache_sequence_number
IMPersonABRecordIDCache: failed persisting serialized cache %@ %@
setCachedRecordResult has 0 query length for ab sequence number %d
_record_id
_identifier
coalescingPeriod
Td,N,V_coalescingPeriod
%@.plist
com.apple.messages.abcache.%@
com.apple.MobileSMS.BatchProcessQueue
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _startBackgroundProcessingChats:completion:]_block_invoke_2
account: %@  chat: %@   style: %d  messages: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _account:chat:style:chatProperties:messagesUpdated:]
No chat found for chat ID: %@
account: %@  chat: %@   style: %d  message: %@  properties: %@
 found existing chat: %@
    all chats: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) account:chat:style:chatProperties:notifySentMessage:sendTime:]
account: %@  chat: %@  style: %d  invitation: %@
account: %@  chat: %@  style: %d  properties: %@
account: %@  chat: %@  style: %d  error: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) account:chat:style:chatProperties:chatPersonCentricID:statusChanged:handleInfo:]
account: %@  chat: %@   style: %d  status: %d  handleInfo: %@
found chat: %@
chat %@ personCentricID %@, _chatPersonIDToChatMap %@
Joined chat: %@
We're not in the room, leaving as is
Leaving chat with GUID: %@
Found chat: %@
Chat status changed: account: %@  chat: %@  style: %d  member: %@  status: %d
chat: %@  properties: %@
chat: %@  displayName: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) chat:isFilteredUpdated:]
chat: %@ isFilteredUpdated: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) chat:engramIDUpdated:]
chat: %@ engramIDUpdated: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) engroupParticipantsUpdatedForChat:]
chat: %@ finished updating group chat
unreadCount
Chat [%@] info dictionary has [Unread: %d]
Chat [%@] _setDBUnreadCount to %d
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) chat:updated:]
chat: %@  updated: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) unreadCountChanged:]
Unread count changed from %d to %d
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) lastFailedMessageDateChanged:]
Failed message date changed from %lld to %lld
deletedGUIDs: %@  queryID: %@  chatGUIDs: %@
 ==> completed query: %@
The limit (%lu) of number of messages we loaded is higher than our capacity (%lu), bumping our capactity to the new limit
History query ID: %@   chatID: %@  service: %@  finished with results (%d)
   => Created IMItem: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) historyQuery:chatID:services:finishedWithResult:limit:]
Found no chat object for query: %@   chat ID: %@
Paged history query ID: %@ chatID: %@ service: %@ finished with results count: %d numberOfMessagesBefore: %d numberOfMessagesAfter: %d
Paged history about to call insert historicalMessages numberOfMessagesBefore: %d numberOfMessagesAfter: %d
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) pagedHistoryQuery:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:]
Found no chat object for query: %@  chat ID: %@
 ===> completed query: %@
Media attachment filenames query ID: %@   chatID: %@  service: %@  finished with results (%d)
path
isSticker
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) attachmentQuery:chatID:services:finishedWithResult:]
Mark as Spam query ID: %@   chatID: %@  service: %@  finished with results (%@)
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) markAsSpamQuery:chatID:services:finishedWithResult:]
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) frequentRepliesQuery:chatID:services:finishedWithResult:limit:]
ChatFrequentReplies
Found no chat object for frequent replies query: %@   chat ID: %@
Bailing out of _handleMergedChatReconstructions due to kFZListenerCapPaginatedChatRegistry
Clearing chat registry
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _handleMergedChatReconstructions:]
 => Unregistering chat: %@
Total number of IMChats we expect to create %@
*********** Error creating chat with %@
** Posting did load notification
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) __handleMergedChatReconstructions:]
Bailing out of handle chat reconstructions due to kFZListenerCapPaginatedChatRegistry
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _handleChatReconstructions:]
Not doing 2 step chat registry load
Restoring chats
 => chats: %@
IMCoreSetup: ChatReconstruction
Forcing sanity check on chats
 => no existing chat, we'll create one
   Loaded chat: %@
Not registering: %@, already existing
Reconstruction
IMCoreSetup: Updating unread counts
Done restoring chats
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) __handleChatReconstructions:]
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) setupComplete:info:]
Have pending queries, failing them :-(  %@
New history modification stamp is: %@     old was: %@
   We're out of date, updating as we need
   We're up to date, nothing to do here
This our first launch, just noting the modification stamp: %@
lastFailedMessageDate
Unread count is %d
Last failed message date is %lld
Updating modification stamp to: %@     old was: %@
No modification stamp to update, old is: %@
   history may by out of date at this point, queries will all be non cached
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _daemonReallyDied:]
We got back up the wrong chat. Expected %@, got %@
Bailing out of handle chatLoadedWithChatIdentifier due to kFZListenerCapPaginatedChatRegistry cap not being present
** Posting will load notification
_PostWillLoadIfNecessary
IMSendProgress
Deallocating IMSendProgress %p (delegate: %p, context: %p). Cached progress = %.3f. Is my timer valid? %@.
IMSendProgress: %p initialized with delegate %@ and context %@.
IMSendProgress: %p (delegate: %p, context: %p) is updating sending items from %@ to %@. (removed? %d, inserted? %d, forced? %d, hasSendingMessages? %d)
IMSendProgress: %p (delegate: %p, context: %p) finished! (sendCount = %tu, totalCount = %tu)
IMSendProgress: %p (delegate: %p, context: %p) initialized timer %@.
IMSendProgress: %p (delegate: %p, context: %p) is invalidating timer %@.
sendingItems
T@"NSDictionary",C,N,V_sendingItems
timeDataSource
T@"<IMSendProgressTimeDataSource>",&,N,V_timeDataSource
T@"<IMSendProgressDelegate>",W,N,V_delegate
T@,W,N,V_context
startSendProgressImmediately
TB,N,V_startSendProgressImmediately
timeIntervalSinceReferenceDate
Td,R
v32@?0@8@"IMItem"16^B24
IMChatItemRules
_IMReplaceChatItemsForItem oldItem:%@ newItem:%@ couldn't find oldMessage
_IMReplaceChatItemsForItems oldMessages count:%@ newMessages count:%@
v32@?0{_NSRange=QQ}8^B24
_IMReplaceChatItemsInRange range:%@ newItem:%@
_IMRegenerateChatItemsForMessageAtIndex index:%@
_IMInsertChatItemsForMessagesAtIndex items count:%@ index:%@
installed tests
running tests
repeating tests
v16@?0@"IMRuntimeTestRun"8
cloudkit-sync-ui-tests
will run tests in 2 seconds
__kIMSPIUnreadMessageCountChangedNotification
__kIMSPILastFailedMessageDateChangedNotification
__k_IMSPIListenerID
IMSPIHandle: %p [Address: %@  Display Name: %@]
IMSPIHandle
Business name lookup timed out
T@"NSString",&,V_address
T@"IMPerson",&,V_person
abIdentifier
Ti,V_abIdentifier
T@"NSString",R
IMSPIAttachment: %p [FileUrl: %@  TransferState: %tu]
fileUrl
T@"NSURL",&,V_fileUrl
fileTransferState
Tq,V_fileTransferState
IMSPIMessage: %p [Outgoing: %@  Read: %@  IsAudio: %@  Sender: %@  Recipients: %@  GUID: %@ ChatGUIDs: %@ Attachments: %@]
messages:guid=%@&chatItemGuid=%@
T@"NSString",&,V_guid
Tq,V_messageID
chatGuids
T@"NSArray",&,V_chatGuids
T@"NSString",&,V_groupID
T@"NSString",&,V_chatIdentifier
isGroupChat
TB,V_isGroupChat
T@"NSString",&,V_service
T@"NSString",&,V_text
attributedText
T@"NSAttributedString",&,V_attributedText
T@"NSString",&,V_subject
effect
T@"NSString",&,V_effect
T@"NSString",&,V_displayName
T@"IMSPIHandle",&,V_sender
T@"NSArray",&,V_recipients
T@"NSDate",&,V_date
dateRead
T@"NSDate",&,V_dateRead
lastReadDate
T@"NSDate",&,V_lastReadDate
isOutgoing
TB,V_isOutgoing
TB,V_isRead
TB,V_isAudioMessage
referencedMessage
T@"IMSPIMessage",&,V_referencedMessage
bundleId
T@"NSString",&,V_bundleId
messageType
Tq,V_messageType
displayAppName
T@"NSString",&,V_displayAppName
T@"NSArray",&,V_attachments
T@"NSURL",R
Attempted to create IMSPIMessage from NULL IMDMessageRecordRef.
IMDMessageRecordCopyHandle
Exception caught creating IMMessageItem from IMDMessageRecordRef: %@
Failed to retrieve message %@
IMDAttachmentRecordCopyAttachmentForGUID
IMDAttachmentRecordBulkCopy
Failed to retrieve attachment %@
IMDMessageRecordCopyChats
IMDChatRecordCopyGUID
IMDChatRecordCopyHandles
IMDChatRecordBulkCopy
Empty results block or queue supplied to %s
BOOL IMSPIQueryLastReceivedMessage(__strong IMSPIMessageQueryCallback, __strong dispatch_queue_t)
IMDMessageRecordCopyLastReceivedMessage
Empty queue or callback block provided to IMSPIUnreadMessageCount
IMDMessageRecordCountAllUnreadMessages
Empty queue or callback block provided to IMSPILastFailedMessageDate
IMDMessageRecordLastFailedMessageDate
No recipient provided to send to
No result block supplied
Found messages for person: %d
ID in message: %@
----> Adding: %@
Matched person phone number: %@
Skipping person phone number: %@
Matched person email: %@
Skipped person email: %@
Unable to find a valid destination to send to for person.
Empty message specified to send with no attachments, ignoring
Invalid destination specified to send to: %@
No operational service to use
Account: %@  is not usable for sending, finding a better one...
   => Found: %@
No account found matching service: %@
Using account: %@
Existing handle: %@
No existing handle, created: %@
Could not get handle for %@ on account: %@
About to send to handle: %@
Sent message: %@   to chat: %@
Cache hit, send now
Waiting for registration check before sending
Empty messages to be marked as read, failing
Marking messages as read: %@
 => Message guid: %@
Missing message guid for message: %@, not marking as read
Empty messages to be marked as played, failing
Marking messages as played: %@
Empty messages to be marked as saved, failing
Marking messages as saved: %@
Missing message guid for message: %@, not marking as saved
BOOL IMSPIQueryMessageWithRowID(int64_t, __strong IMSPIMessageQueryCallback, __strong dispatch_queue_t)
IMDMessageRecordCopyMessageForRowID
BOOL IMSPIQueryMessagesWithRowIDs(NSArray<NSNumber *> *__strong, __strong IMSPIMessageQueryCallback, __strong dispatch_queue_t)
IMDMessageRecordCopyMessagesForRowIDs
Got back %lu messages for %lu row IDs
@"IMSPIMessage"16@?0@8
BOOL IMSPIQueryMessageWithGUID(NSString *__strong, __strong IMSPIMessageQueryCallback, __strong dispatch_queue_t)
BOOL IMSPIQueryMessagesWithGUIDs(NSArray<NSString *> *__strong, __strong IMSPIMessageQueryCallback, __strong dispatch_queue_t)
IMDMessageRecordCopyMessagesForGUIDs
Got back %lu messages for %lu GUIDs
Empty results block or queue supplied to IMSPIQueryUnreadMessages
0 limit supplied, no query issued to IMSPIQueryUnreadMessages
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID
Querying for unread messages with limit: %lld, from row id: %lld
Got back %lu unread messages
Empty results block or queue supplied to IMSPIQueryUnreadMessagesWithIDs
Services is not matched with IDs: [%@] [%@] to IMSPIQueryUnreadMessagesWithIDs
Empty services or IDs supplied to IMSPIQueryUnreadMessagesWithIDs
0 limit supplied, no query issued to IMSPIQueryUnreadMessagesWithIDs
IMDMessageRecordCopyMessagesWithHandlesOnServicesLimit
Empty results block or queue supplied to IMSPIQueryMessagesWithIDs
Services is not matched with IDs: [%@] [%@] to IMSPIQueryMessagesWithIDs
Empty services or IDs supplied to IMSPIQueryMessagesWithIDs
0 limit supplied, no query issued to IMSPIQueryMessagesWithIDs
Empty results block or queue supplied to IMSPIQueryMessagesWithChatIdentifiers
Services is not matched with chatIdentifiers: [%@] [%@] to IMSPIQueryMessagesWithIDs
Empty services or chatIdentifiers supplied to IMSPIQueryMessagesWithChatIdentifiers
0 limit supplied, no query issued to IMSPIQueryMessagesWithChatIdentifiers
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesLimit
Empty results block or queue supplied to IMSPIQueryHasConversationWithID
Empty ID passed into IMSPIQueryHasConversationWithID
Empty results block supplied to IMSPIQueryChatsWithUnplayedAudioMessages
IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages
Empty person record passed to to IMSPIQueryMessagesWithPerson
0 limit supplied, no query issued to IMSPIQueryMessagesWithPerson
Unable to resolve person passed to IMSPIQueryMessagesWithPerson
Query messages with IDs:
Services:
IMDMessageRecordCopyMessagesDataDetectionResults
IMDHandleRecordCopyCountry
IMDHandleRecordCopyUncanonicalizedID
IMDHandleRecordCopyID
IMDCreateIMItemFromIMDMessageRecordRefWithServiceResolve
(p:(\d+)\/)?([\dA-F]{8}-[\dA-F]{4}-[\dA-F]{4}-[\dA-F]{4}-[\dA-F]{12})
IMDMessageRecordCopyLastReadMessageForChatIdentifier
/Attachments/
%@/%@
/var/mobile/Library/SMS/Attachments
Attachment filename returned empty
Adding cap assertions
Failed to connect to imagent
Failed to update capabilities
Removing chat caps assertion
IMCloudKitFetchedSyncStatsNotification
IMCloudKitSyncStatsKey
IMCloudKitSyncStatisticsKey
IMCloudKitAttemptedToDisableiCloudBackupsNotification
IMCloudKitBackupDisableBackupAttemptResultKey
IMCloudKitBackupDisableBackupAttemptErrorKey
IMCloudKitFetchedSyncDebuggingInfoNotification
IMCloudKitHooks
%@-CloudKitHooks
shouldShowCloudKitUI - isEnabled(%@) eligibleForTruthZone(%@), rampedIntoTruthZone(%@)
isEnabled returning = isCloudKitEnabled = %@ isInExitState(%@) 
Setting cloudkit enabled to state: %@
Request to check if additinal storage is required to store all messages
Request to try and disable cloudkit on all devices
removedFromiCloudBackup returning = %@
rampedIntoTruthZone always returning YES, this shouldn't be called anymore.
eligibleForTruthZone returning = %@
Requesting MOC Enabled State
_requestMOCEnabledReturned returned:%@
Initiating a manual sync
isStartingSync returning = %@
isSyncing returning = %@
Requesting last sync date: %@
didAttemptToSetEnabledTo returned: targetEnabled:%@ result%@ clients should update values
isChangingEnabledState returning = %@
didPerformAdditionalStorageRequiredCheck returned with success: %@, additionalStorageRequired %llu for iCloud account id %@, error: %@
isDisabling devices returning = %@
_didAttemptToDisableAllDevicesResult returned: result:%@ clients should update values
CloudKitHooks
Metric attachments in cloudkit hooks bytes: %lld
Purge attachments in cloudkit hooks bytes: %lld
Auto collecting logs because:(%@), sending to %@
com.apple.IMCore.IMCloudKitHooks.ValuesChanged
com.apple.IMCore.IMCloudKitHooks.SetEnabledReturned
com.apple.IMCore.IMCloudKitHooks.AdditionalStorageCheckReturned
com.apple.IMCore.IMCloudKitHooks.tryToDisableAllDevicesReturned
com.apple.IMCore.IMCloudKitHooks.MOCEnabledStateReturned
ResultSuccess
ResultKeyNewState
ResultAdditionalStorageRequired
ResultiCloudAccountId
MOCEnabledState
Error
account
service
iMessageService
smsService
suppressAccountRetargetingForNamedGroupConversation
isEqual:
_targetToService:newComposition:
_invalidateDowngradeState
participants
__imArrayByApplyingBlock:
setHasHadSuccessfulQuery:
isDowngraded
forceMMS
_isUsableForSending
countByEnumeratingWithState:objects:count:
lastAddressedHandleID
displayName
count
_setAndIncrementDowngradeMarkersForManual:
objectAtIndex:
sendDowngradeNotificationTo:
isActive
sharedInstance
numberWithUnsignedInt:
uniqueID
guid
chatIdentifier
chatStyle
sendCommand:withProperties:toPerson:account:toChatID:identifier:style:
object
userInfo
objectForKey:
unsignedIntValue
defaultCenter
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
name
reason
alloc
initWithTarget:action:
setNeedsUpdate
isOperational
_accountIsOperational:forService:
valueForChatProperty:
accountForUniqueID:
mutableCopy
init
removeObjectForKey:
setObject:forKey:
setValue:forChatProperty:
_chatHasValidAccount:forService:
_previousAccountForService:
_setPreviousAccount:forService:
arrayByApplyingSelector:
_bestAccountForAddresses:
_setAccount:
_calculateDowngradeState
setLocalUserIsTyping:
_calculateDowngradeStateTimerFired
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
date
timeIntervalSince1970
numberWithDouble:
unsignedIntegerValue
initWithUnsignedInteger:
lastMessage
sender
smsEnabled
recipient
_appearsToBePhoneNumber
doubleValue
dateWithTimeIntervalSince1970:
_consecutiveDowngradeAttemptsViaManualDowngrades:
dateByAddingTimeInterval:
timeIntervalSinceNow
_updateDowngradeState:checkAgainInterval:
_clearDowngradeMarkers
iMessageEnabled
accountsForService:
_hasChat:forService:
hasHadSuccessfulQuery
length
refreshServiceForSending
sendDowngradePingForMessage:manualDowngrade:
_handleDeliveredCommand:
_handleIncomingCommand:
_delayedInvalidateDowngradeState
setForceMMS:
dictionary
_currentIDStatusForDestinations:service:listenerID:
allKeys
removeObject:
valueForKey:
integerValue
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
mmsEnabled
maxChatParticipants
regularExpressionWithPattern:options:error:
__im_handleIdentifierRegex
matchesInString:options:range:
range
valueWithRange:
firstMatchInString:options:range:
substringWithRange:
addObject:
copy
__im_rangesOfHandleIdentifierStrings
__im_IDForHandleIdentifierString
__im_handleIdentifiers
controlCharacterSet
stringByRemovingCharactersFromSet:
idsFormat
mobileNumbers
phoneNumbers
emails
initWithCapacity:
addObjectsFromArray:
idsAddresses
facetimeService
callService
_bestOperationalAccountForSendingForService:
imHandleWithID:alreadyCanonical:
__imQueryIDStatusForDestinations:service:listenerID:queue:completionBlock:
array
__imBlockingCurrrentIDStatusForDestinations:service:listenerID:queue:
__imQueryKnownIDStatusForDestinations:service:listenerID:queue:completionBlock:
__imQueryIDStatusForHandles:service:listenerID:queue:completionBlock:
__imQueryIDStatusForPerson:service:listenerID:queue:completionBlock:
__imQueryKnownIDStatusForHandles:service:listenerID:queue:completionBlock:
__imQueryKnownIDStatusForPerson:service:listenerID:queue:completionBlock:
status
forgetStatusImageAppearance
imageNameForStatus:
imageURLForStatus:
allServices
allServicesNonBlocking
serviceWithName:
listener
myIdleTime
dateWithTimeIntervalSinceNow:
isEqualToString:
hasSuffix:
characterAtIndex:
lowercaseString
stringByReplacingOccurrencesOfString:withString:
notificationCenter
myStatus
isEmailAddress:inDomains:
statusForIMPerson:
statusForABPerson:
canonicalFormOfID:withIDSensitivity:
copyWithZone:
isEnabled
login
logout
initialSyncPerformed
localizedName
localizedShortName
infoForScreenName:
infoForAllScreenNames
infoForPreferredScreenNames
canonicalFormOfID:
peopleWithScreenName:
screenNamesForPerson:
myScreenNames
infoForPerson:
infoForAllPeople
infoForDisplayedPeople
isEqualToIgnoringCase:
messageGUID
data
dataDetectedResult
initWithMessageGUID:payload:dataDetectedResult:url:
setPluginPayload:
pluginBundleID
consumedSessionPayloads
_updateTemporaryAttachmentURLsForPluginPayload
class
bundleID
payload
pluginPayload
attachments
consumedPayloads
arrayByAddingObject:
arrayWithObjects:count:
pluginSessionGUID
containsString:
componentsSeparatedByString:
firstObject
setData:
numberWithUnsignedInteger:
setPendingAttachmentData:
setPayload:
pendingAttachmentData
chat
_imMessageGUID
messageForGUID:
_chatsWithMessageGUID:
sendPayload:attachments:
updatePayload:attachments:
sendBalloonPayload:attachments:withMessageGUID:bundleID:
updateBalloonPayload:attachments:forMessageGUID:
_updateWithPluginPayload:messageID:messageGUID:
pluginPayloadDidChange:
payloadDidChange
isKindOfClass:
path
hasPrefix:
stringGUID
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
lastPathComponent
fileURLWithPath:
copyItemAtURL:toURL:error:
temporaryAttachmentURLs
setAttachments:
containsObject:
removeItemAtPath:error:
setTemporaryAttachmentURLs:
messageIDOfLastMessageInSession
setMessageGUID:
setPluginSessionGUID:
shouldExpire
setShouldExpire:
_senderIsSameBetweenPayload:andOtherPayload:
isFromMe
setSender:
setIsFromMe:
isEqualToArray:
_removeTemporaryAttachmentURLs
isEqualToData:
isPlayed
setIsPlayed:
numberWithLongLong:
setDatasource:
_imMessageItem
_handleIncomingItem:
stringWithFormat:
setHasInvalidatedSize:
__mainThreadPostNotificationName:object:
guidOfLastMessageInSession
_markItemAsPlayed:
playbackType
balloonPluginForBundleID:
identifier
browserDisplayName
dataSourceClassForBundleID:
previewSummary
supportsIndividualPreviewSummaries
initWithPluginPayload:
individualPreviewAttachmentFileAndUTI:
individualPreviewSummary
rangeOfString:
unarchivedObjectOfClasses:fromData:error:
objectForKeyedSubscript:
previewSummaryForPluginBundle:
_summaryText
_replaceHandleWithContactNameInString:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
stringWithString:
existingIMHandleWithID:
_appearsToBeEmail
stringByAppendingString:
existingIMHandleWithID:alreadyCanonical:
hasName
_stripFZIDPrefix
allIMHandles
replaceOccurrencesOfString:withString:options:range:
replaceHandleWithContactNameInString:forAccount:additionalHandles:
isShowingLatestMessageAsBreadcrumb
isUpdate
setShowingLatestMessageAsBreadcrumb:
_reloadLatestUnconsumedBreadcrumb
supportsURL:
unlocalizedPreviewSummaryForPluginBundle:pluginDisplayName:
previewSummaryForPluginPayload:withBundleID:previewAttachmentURL:previewAttachmentUTI:
allPayloads
sessionGUID
setPayload:attachments:
messagePayloadDataForSending
imMessage
sendPayload:
updatePayload:
_updatePayload:messageID:messageGUID:
thumbnailURLWithSize:completion:
payloadWillEnterShelf
payloadWillSendFromShelf
wantsStatusItem
statusString
statusAttributedString
didTapStatusItem
wantsReplyFromContentView
statusStringNeedsUpdate
supportsDynamicSize
needsResize
markAsPlayed
playbackWithCompletionBlock:
stopPlayback
sizeThatFits:
datasourceWasMovedToNewGuid:
beginShowingLastConsumedBreadcrumbForOutgoingPayload:
endShowingLastConsumedBreadcrumb
description
.cxx_destruct
setChat:
payloadInShelf
setPayloadInShelf:
setUrl:
setDataDetectedResult:
attachmentGUIDs
setAttachmentGUIDs:
URLToOpenOnTapAction
initialMessageIsFromMe
setInitialMessageIsFromMe:
isLast
setLast:
set_imMessageGUID:
setSessionGUID:
hasInvalidatedSize
setConsumedPayloads:
_payloadInShelf
_initialMessageIsFromMe
_isLast
_isShowingLatestMessageAsBreadcrumb
_hasInvalidatedSize
_showingLatestMessageAsBreadcrumb
_chat
_pluginPayload
_url
_dataDetectedResult
_attachmentGUIDs
_URLToOpenOnTapAction
_pendingAttachmentData
_temporaryAttachmentURLs
__imMessageGUID
_messageGUID
_sessionGUID
_bundleID
_consumedPayloads
_guidOfLastMessageInSession
_messageIDOfLastMessageInSession
fetchRecentStickersWithCompletion:
payloadData
setPluginBundleID:
dataSourceForPluginPayload:
setFileURL:
fetchRecentItemsForDomain:completion:
loadRecentHandwritingsWithThumbnailSize:completion:
loadRecentStickers:
loadRecentHandwritingsAndStickersWithThumbnailSize:completion:
boolValue
blockUntilConnected
connectToDaemonWithLaunch:
serviceClass
initWithName:
activeAccountsForService:
allObjects
connectedAccountsForService:
accountsWithCapability:
connectedAccountsWithCapability:
operationalAccountsWithCapability:
removeObserver:name:object:
dealloc
bestAccountFromAccounts:
hasSyncedWithRemoteBuddies
activeAccountsChanged:
_syncWithRemoteBuddies
internalName
setIMAccountLoginStatus:
statusChangedForAccount:from:to:
clearIDToCardMap
_calculateBestAccount
localizedCompareToString:
currentRunLoop
runMode:beforeDate:
_markHasSyncedWithRemoteBuddies
loginStatus
_blockUntilInitialSyncPerformed
bestAccountSibling
publicAPIPropertiesDictionary
arrayOfAllIMHandles
initWithArray:
filterIMHandlesForBestAccountSiblings:
arrayWithCapacity:
intValue
_abPropertiesBySanitizingABProperties:
_loadPropertiesIfNeeded
currentLocale
supportsSMS
bestAccountForService:
allowsSMSRelay
supportsMMS
mmsConfigured
allowsMMSRelay
sharedInstanceForBagType:
__imFirstObject
serviceWithInternalName:
arrayWithObjects:
valuesForIMProperty:
supportsPhoneNumberMapping
initWithABRecordID:
_IDsToMapForIMPerson:
cardMap
existingABPersonWithFirstName:andLastName:andNickName:orEmail:orNumber:countryCode:identifier:
existingABPersonWithInstantMessageAddress:onServices:allowSubstringMatch:
imABPeopleWithScreenName:countryCode:identifier:
imABPeopleWithScreenName:identifier:
existingABPeopleWithInstantMessageAddress:onServices:allowSubstringMatch:
initWithObjectsAndKeys:
__mainThreadPostNotificationName:object:userInfo:
arrayWithObject:
setServiceClass:
activeServices
connectedServices
servicesWithCapability:
connectedServicesWithCapability:
operationalServicesWithCapability:
supportedCountryCodes
systemSupportsSMSSending
systemSupportsSendingAttachmentsOfTypes:error:
isDiscontinued
doneSetup
disconnect
equalID:andID:
normalizedFormOfID:
compareNames:
serviceProperties
setServiceProperties:
subtypeInformationForAccount:
serviceImageData
maxAttachmentSize
_supportsDatabaseStorage
_wantsInternationizedNumbers
addressBookProperty
siblingServices
buddyNotesMaxByteLength
accountIDs
_addAddressBookCards:toMap:
_dumpCardMap
_newIDToCardMap
updateIDToCardMapWithNotification:
setCountryCode:
countryCode
imABPeopleWithScreenName:
imABPeopleWithScreenName:options:
_personToIDMap
screenNamesForIMPerson:
defaultsChanged:
accountClass
serviceDefaults
setServiceDefaults:
defaultAccountSettings
setDefaultAccountSettings:
supportsIDStatusLookup
supportsAudioMessages
supportsAuthorization
isPersistent
handlesChatInvites
supportsRegistration
ignoresNetworkConnectivity
supportsOfflineTransfers
supportsPresence
supportsMutatingGroupMembers
supportsOneSessionForAllAccounts
supportsGroupAttachments
supportsAdding
isPlugInService
allowsMultipleConnections
shouldDisableDeactivation
IDSensitivity
addressBookProperties
emailDomains
shortName
_name
_localizedName
_localizedShortName
_cardMap
_countryCode
_bestAccount
_serviceDefaults
_serviceProps
_defaultSettings
_imageData
_abProperties
_emailDomains
_siblingServiceNames
_screenNameSensitivity
_hasLoadedServiceProperties
_handlesChatInvites
_supportsSMS
_supportsPhoneNumberMapping
_supportsGroupAttachments
_supportsMutatingGroupMembers
_supportsOneSessionForAllAccounts
_supportsAuthorization
_supportsRegistration
_supportsAdding
_supportsPresence
_supportsIDStatusLookup
_supportsAudioMessages
_shouldInternationalizeNumbers
_supportsOfflineTransfers
_shouldDisableDeactivation
_ignoresNetworkConnectivity
_isPersistent
_isPlugInService
_allowsMultipleConnections
aimService
subnetService
jabberService
initWithMessageItem:
time
balloonBundleID
_newMessagePartsForMessageItem:
subject
text
appendAttributedString:
transferGUID
transferForGUID:
localURL
fileTransferGUIDs
localPath
null
breadcrumbText
string
_FTOptionallyDecompressData
isSticker
isExpirable
statusText
associatedMessageGUID
hash
isEqualToPluginPayload:
encodeObject:forKey:
encodeBool:forKey:
setWithObjects:
decodeObjectOfClass:forKey:
setText:
setBreadcrumbText:
setStatusText:
decodeBoolForKey:
setUpdate:
decodeObjectOfClasses:forKey:
setUserInfo:
setAssociatedMessageGUID:
setSticker:
decodeObjectForKey:
allocWithZone:
datasource
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithMessage:
addAttachmentsFromFileTransferGUIDs:
shouldHideAttachments
setTime:
setConsumedSessionPayloads:
_update
_sticker
_shouldExpire
_isPlayed
_isFromMe
_text
_data
_breadcrumbText
_statusText
_userInfo
_time
_associatedMessageGUID
_pluginBundleID
_consumedSessionPayloads
_pluginSessionGUID
_attachments
_datasource
_sender
isEqualToAttributedString:
isEqualToDictionary:
isVIP
standardUserDefaults
deviceIndependentID
indexOfObject:
_hasJustSentAMessage
watermarkDate
distantPast
compare:
compareChatByDate:
_NPSManagerClass
setWithObject:
synchronizeUserDefaultsDomain:keys:
removeObjectAtIndex:
insertObject:atIndex:
updateVIPChatIdentifiers:
_storedWatermarkMessageID
lastFinishedMessageID
longLongValue
lastFinishedMessageDate
laterDate:
isEqualToDate:
_postNotification:userInfo:
watermarkMessageID
isFiltered
updateWasDetectedAsSMSSpam:
hasKnownParticipants
updateIsFiltered:
normalizedID
hasInitializedChatFiltering
autoReportSpam
markAsAutoSpamReported
verifyChatShouldBeSMSSpam
lastFinishedMessage
messageID
setVIP:
updateWatermarks
saveWatermark
verifyFiltering
watermarkComparator
moveVIPChatAtIndex:toIndex:
removeAllObjects
cleanWatermarkCache
allExistingChats
enumerateObjectsUsingBlock:
setHasInitializedChatFiltering:
verifyFilteringForAllChats
dictionaryWithContentsOfFile:
_handleInstalledPluginsChanged
addObserver:selector:name:object:
setHasPerformedFirstAppExtensionLoad:
allPlugins
bundleIDsDisplayingAttribution
__imArrayByFilteringWithBlock:
numberWithBool:
_expiryTimeout
expiredBundleIDToTimestampMap
_currentTimestamp
_purgeLeastRecentlySeenAppBundleIDsIfNecessary
_saveToFile
hasPerformedFirstAppExtensionLoad
timeIntervalSinceReferenceDate
writeToFile:atomically:
dictionaryWithObjects:forKeys:count:
setAttributes:ofItemAtPath:error:
sortedArrayUsingComparator:
objectAtIndexedSubscript:
setWithArray:
startExpiryTimer
didShowAttributionForBundleIDs:
shouldShowAttributionForBundleID:
setExpiredBundleIDToTimestampMap:
setBundleIDsDisplayingAttribution:
_hasPerformedFirstAppExtensionLoad
_expiredBundleIDToTimestampMap
_bundleIDsDisplayingAttribution
UTF8String
initWithOptions:capacity:
scheduleFetchIfNecessaryForHandle:
registerContactsChangeObserver:
deregisterContactsChangeObserverWithToken:
_maybePhoneNumber:
_maybeEmailAddress:
isBusiness:
_startRequestForDisplayName:messageUID:queue:
_startRequestForDisplayNameCallbackWithSuggestedName:displayName:queue:
namesForDetail:limitTo:prependMaybe:withCompletion:
immediateNameWithNeedsSuggestedNameFetch:useSuggestedName:
displayID
setSuggestedName:
fetchSuggestedRealNameForDisplayName:messageUID:queue:block:
startUsingLocalLookupsWithTable:
stopUsingLocalLookups
suggestedNameFromCache:wasFound:
_connection
_cache
_queue
_pending
_localTable
_handlesToRetry
_newContactNotificationToken
_notificationObserver
serviceForContacts
setQueuesRequestsIfBusy:
_dumpOutAllIMHandlesForAccount:
removeListener:
lock
unlock
initWithKeyOptions:valueOptions:capacity:
initWithUniqueID:service:
clearServiceCaches
syncWithRemoteBuddies
addListener:
_serviceDidConnect:
_serviceDidReconnect:
_serviceDidDisconnect:
_registrationStatusChanged:
capabilities
autoLoginAccount:
loginAccount:
_loginWithAutoLogin:
logoutAccount:
transfersForAccount:
stopTransfer:
setIMAccountLoginStatus:errorMessage:reason:
_refreshLoginIMHandle
accountType
_setString:forKey:
_updateLogin:
_updateMyStatus:message:
isNull
fullName
accountDescription
canonicalFormOfID:countryCode:
addAccount:
profileInfo
_setObject:forKey:
accountPreferences
writeAccount:defaults:
_loadFromDictionary:force:
setAutoLogin:
addEntriesFromDictionary:
initWithDictionary:
_invalidateCachedAliases
compareAccountNames:
localizedCaseInsensitiveCompare:
compareIDs:
numberWithUnsignedLongLong:
dictionaryWithObjectsAndKeys:
passwordForAccount:forServiceName:
authorizationID
setPassword:forAccount:forAuthID:forServiceName:
passwordUpdatedAccount:
removePassword
setPasswordForProfileID:username:service:password:outRequestID:completionBlock:
removePasswordForAccount:forServiceName:
temporaryPasswordForAccount:forAuthID:forServiceName:
setTemporaryPassword:forAccount:forAuthID:forServiceName:
removeTemporaryPassword
fetchPasswordForProfileID:username:service:outRequestID:completionBlock:
removeTemporaryPasswordForAccount:forServiceName:
boolForKey:
isInvisible
_setBool:forKey:
stringForKey:
loginStatusMessage
substringFromIndex:
useSSL
_serverWithSSL:
integerForKey:
blockIdleStatus
setBlockIdleStatus:
invalidSettings
port
server
validLogin
validServer
validPort
requestProperty:ofPerson:account:
setValue:ofProperty:ofPerson:account:
aliases
vettedAliases
_aliases
_updateProfileInfo:
_updateRegistrationStatus:error:info:
minusSet:
validationErrorReasonForAlias:
numberWithInt:
_updateDisplayName:
blockingMode
blockList
allowList
setBlockList:
setBlockingMode:
setAllowList:
setBlockList:account:
setCachedBlockList:
setAllowList:account:
setCachedAllowList:
setBlockingMode:account:
setCachedBlockingMode:
setBlockIdleStatus:account:
setCachedBlockIdleStatus:
writeSettings
targetGroupStateTimeout
_groupSummaryFromGroupList:
hasTargetGroupStateBeenMet
clearTargetState
groupsChanged:error:
setWaitForTargetState
updateWithTargetGroups
replaceObjectAtIndex:withObject:
nonRetainingArray
setTargetGroupsState:
makingChanges
requestGroups
hasCapability:
requestGroupsAccount:
requestBuddyPicturesAndPropertiesForAccount:
groupList
changeBuddyList:add:groups:atLocation:
_ensureGroupsExists:
authRequestStatus
requestBuddyListAuthorizationFromIMHandle:
isBuddy
groups
isSubsetOfSet:
addPeople:toGroups:atLocation:
beginChanges
arrayWithArray:
propertiesForGroup:
removeObjectsInArray:
reorderGroups:
endChanges
renameGroup:to:account:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_applyChangesToTemporaryCache:
changeGroups:account:
holdBuddyUpdatesAccount:
resumeBuddyUpdatesAccount:
_resumeBuddyUpdatesNow
performSelector:withObject:afterDelay:ignoreMenuTracking:
existingIMHandleWithInfo:
descriptionInStringsFileFormat
setCustomPictureData:key:
setShouldHidePeople:
_copyForEnumerating
beginNotificationQueue
allValues
buddyPropertiesChanged:
releaseNotificationQueue
hookupToDaemon
setIMAccountLoginStatus:errorMessage:
_stopRetainingAccount:
removeLoginIMHandle:
isRegistered
lastObject
accounts
containsObjectIdenticalTo:
registrationStatus
profileValidationStatus
trimmedString
_aliasIsVisible:
registerAccount:
unregisterAccount:
nameOfLoginStatus:
_notJustLoggedIn
numberWithInteger:
forgetAllWatches
nowLoggedIn
nowLoggedOut
isAwaitingTargetGroupState
buddyList
beginCoalescedChanges
dictionaryWithCapacity:
imHandleWithID:
indexOfObjectIdenticalTo:
imHandle:buddyStatusChanged:
isEqualToSet:
postNotificationName:
endCoalescedChanges
watchBuddiesIfNecessary
serviceName
propertiesChanged:
originalID
_updateOriginalID:
_setOriginalID:
unsignedLongLongValue
_imHandleWithID:alreadyCanonical:originalID:countryCode:
initWithAccount:ID:alreadyCanonical:
defaultHandleCapabilities
_setCapabilities:
addressBookEnabled
personForIMHandle:
imHandlesForIMPerson:
acceptSubscriptionRequest:from:account:
requestSubscriptionTo:account:
emailAddressIsID:
resource
otherServiceIDs
appendID:toProperty:
setValues:forProperty:
watchingIMHandle
startWatchingIMHandle:
_watchBuddiesIfNecessary
setHasTemporaryWatch:
startWatchingBuddy:account:
stopWatchingBuddy:account:
resetABPerson
addLoginIMHandle:
_cachedPerson
person
setIMPerson:
people
statusChanged:message:
clearSiblingCacheForIMHandle:
removeIMHandle:
isLoginIMHandle
addIMHandle:
statusChanged:
imHandleWithInfo:
setBuddyListAuthorization:forIMHandle:
_postNotificationName:userInfo:
disconnectAllIMHandles
defaultChatSuffix
fetchAuthTokenForProfileID:username:service:outRequestID:completionBlock:
authenticateAccount
authenticateAccount:
enrollDeviceForSMSRelay:account:
unEnrollDeviceForSMSRelay:account:
enrollSelfDeviceForSMSRelay:
_removeObjectForKey:
setAuthTokenForProfileID:username:service:authToken:selfHandle:outRequestID:completionBlock:
updateAuthorizationCredentials:token:account:
isTelephonyDevice
telephoneNumber
profileValueForKey:
autoupdatingCurrentLocale
setProfileValue:forKey:
profileStringForKey:
validateProfileAccount:
profileValidationErrorReason
aliasesToRegister
hasAlias:
typeForAlias:
addAliases:
_setLocalCachedObject:forKey:
addAliases:account:
addAlias:
removeAliases:
removeAliases:account:
removeAlias:
addCharactersInString:
unvalidateAliases:
unvalidateAliases:account:
validateAliases:
validateAliases:account:
validateAlias:
_aliasInfoForAlias:
validationStatusForAlias:
setObject:forPreferenceKey:
objectForPreferenceKey:
_appearsToBeDSID
allBuddyListIMHandles
systemDidBecomeIdle
systemDidBecomeUnidle
screenSaverDidStart
screenSaverDidStop
screenLocked
screenUnlocked
systemWillSleep
systemDidWake
systemDidEnterMemoryPressure
systemDidLeaveMemoryPressure
systemWillShutdown
systemApplicationDidEnterBackground
systemApplicationWillEnterForeground
systemApplicationDidBecomeActive
systemApplicationWillResignActive
systemApplicationDidSuspend
systemApplicationDidResume
systemApplicationDidSuspendForEventsOnly
systemApplicationDidResumeForEventsOnly
notificationCenterWillAppear
notificationCenterDidDisappear
systemDidStartBackup
systemDidStopBackup
systemDidFinishMigration
systemRestoreStateDidChange
systemDidFastUserSwitchOut
systemDidFastUserSwitchIn
systemDidLogout
systemDidLock
systemDidUnlock
systemScreenDidPowerUp
systemScreenDidPowerDown
systemDidLeaveFirstDataProtectionLock
systemDidLeaveDataProtectionLock
systemDidEnterDataProtectionLock
initWithService:
autoLoginAccount
loginAccount
logoutAccount
loginStatusChanged:message:reason:properties:
setLogin:
setCurrentAccountStatus:
myNowPlayingString
setUniqueID:
accountImageData
resetToDefaults
compareLoginStatus:
compareStatus:
compareServices:
updateCapabilities:
password
setPassword:
temporaryPassword
setTemporaryPassword:
setInvisible:
setAccountDescription:
hasCustomDescription
autoLogin
goIdle
setGoIdle:
allowsVCRelay
setAllowsVCRelay:
isSMSRelayCapable
canActivate
isManaged
requestProperty:ofIMHandle:
setValue:ofExtraProperty:ofIMHandle:
loadFromDictionary:
blockMessages:fromID:
blockOtherAddresses
setBlockOtherAddresses:
removePeople:fromGroups:
addIMHandle:toGroups:atLocation:
removeIMHandle:fromGroups:
addBuddyToBuddyList:
renameGroup:to:
reorderGroup:order:
groupMembers:
memberGroups:
holdBuddyUpdates
resumeBuddyUpdates
buddyPictureChanged:imageData:imageHash:
setBuddyProperties:buddyPictures:
accountWillBeRemoved
accountDidBecomeActive
accountDidDeactivate
canSendMessages
registrationFailureAlertInfo
registrationFailureReason
registerAccount
unregisterAccount
isConnecting
isConnected
setIsActive:
recalculatedSubtypeInfo
_clearImageCache
recalculateSubtypeInfo
imHandleClass
imHandleWithInfo:alreadyCanonical:
existingIMHandleWithInfo:alreadyCanonical:
imHandleWithID:countryCode:
existingIMHandleWithID:countryCode:
personForIMHandle:identifier:
personSibsForIMHandle:
sortOrderForIMHandle:inGroup:
addIMHandle:toIMPerson:
removeIMHandle:fromIMPerson:
stopWatchingIMHandle:
registerIMHandle:
unregisterIMHandleWithID:
handleSubscriptionRequestFrom:withMessage:
chatIDForRoomName:
validityOfChatRoomName:
authorizationToken
requestNewAuthorizationCredentials
enrollDeviceInSMSRelay:
unEnrollDeviceInSMSRelay:
enrollSelfDeviceInSMSRelay
updateAuthorizationCredentials:token:
removeProfileValueForKey:
setProfileString:forKey:
validateProfile
_statuses
isMakoAccount
hasAlias:type:
aliasesForType:
addAlias:type:
removeAlias:type:
unvalidateAlias:
validateAlias:type:
validationStatusForAlias:type:
validationErrorReasonForAlias:type:
setDictionaryData:forKey:
_setDictionaryData:forKey:
dictionaryDataForKey:
setString:forKey:
setBool:forKey:
setInteger:forKey:
_setInteger:forKey:
isAsleep
_persistentProperties
_persistentPropertyForKey:
_setPersistentPropertyObject:forKey:
_removePersistentPropertyForKey:
removeObjectForPreferenceKey:
setDictionaryData:forPreferenceKey:
dictionaryDataForPreferenceKey:
stringForPreferenceKey:
setString:forPreferenceKey:
boolForPreferenceKey:
setBool:forPreferenceKey:
integerForPreferenceKey:
setInteger:forPreferenceKey:
setDisplayName:
_handleDeliveredCommand:withProperties:fromBuddyInfo:
_handleIncomingCommand:withProperties:fromBuddyInfo:
strippedLogin
myStatusDictionary
myProfile
myStatusMessage
myPictureData
myIdleSince
accountSubtypeInfo
loginIMHandle
justLoggedIn
_service
_buddyList
_lock
_imHandles
_loginIMHandle
_cachedAllowList
_cachedBlockList
_loginID
_displayName
_uniqueID
_accountType
_strippedLogin
_dataChanges
_localCache
_profile
_profileChanges
_profileStatus
_accountPreferences
_accountPreferencesChanges
_accountPersistentProperties
_accountPersistentPropertiesChanges
_groups
_sortOrders
_members
_coalescedChanges
_targetGroupState
_lastReceivedGroupState
_subtypeInfo
_vettedAliases
_myStatus
_currentAccountStatus
_myStatusMessage
_myNowPlaying
_myIdleSince
_myPictureData
_accountImageData
_capabilities
_defaultHandleCapabilities
_hasCheckedDefaultHandleCapabilities
_myProfile
_registrationStatus
_registrationFailureReason
_registrationAlertInfo
_loginStatus
_isActive
_hasPostedOfflineNotification
_justLoggedIn
_useMeCardName
_cachedBlockingMode
_blockIdleStatus
_syncedWithRemoteBuddyList
_hasReceivedSync
_numHolding
_coalesceCount
_needToCheckForWatchedIMHandles
_iconChecked
_hasBeenRemoved
_smallImage
_accountImage
_asleep
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
setupComplete:info:
setupComplete
pendingVCRequestComplete
pendingACRequestComplete
vcCapabilitiesChanged:
defaultsChanged:forService:
activeAccountsChanged:forService:
account:defaults:blockList:allowList:blockingMode:blockIdleStatus:status:capabilities:serviceLoginStatus:loginStatusMessage:
account:loginStatusChanged:message:reason:properties:
account:defaultsChanged:
account:capabilitiesChanged:
accountAdded:defaults:service:
accountRemoved:
account:buddyPropertiesChanged:
account:blockListChanged:
account:allowListChanged:
account:blockingModeChanged:
account:blockIdleStatusChanged:
account:buddyPictureChanged:imageData:imageHash:
account:groupsChanged:error:
account:buddyProperties:buddyPictures:
account:handleSubscriptionRequestFrom:withMessage:
account:buddyInfo:commandReceived:properties:
account:buddyInfo:commandDelivered:properties:
chat:updated:
chat:propertiesUpdated:
chat:displayNameUpdated:
chat:isFilteredUpdated:
chat:engramIDUpdated:
leftChat:
engroupParticipantsUpdatedForChat:
loadedChats:
account:chat:style:chatProperties:invitationReceived:
account:chat:style:chatProperties:updateProperties:
account:chat:style:chatProperties:chatPersonCentricID:messageSent:
account:chat:style:chatProperties:chatPersonCentricID:messageReceived:
account:chat:style:chatProperties:chatPersonCentricID:messagesReceived:
account:chat:style:chatProperties:messageUpdated:
account:chat:style:chatProperties:notifySentMessage:sendTime:
account:chat:style:chatProperties:messagesUpdated:
account:chat:style:chatProperties:error:
account:chat:style:chatProperties:chatPersonCentricID:statusChanged:handleInfo:
account:chat:style:chatProperties:member:statusChanged:
messageQuery:finishedWithResult:chatGUIDs:
historyQuery:chatID:services:finishedWithResult:limit:
pagedHistoryQuery:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:
attachmentQuery:chatID:services:finishedWithResult:
markAsSpamQuery:chatID:services:finishedWithResult:
historicalMessageGUIDsDeleted:chatGUIDs:queryID:
frequentRepliesQuery:chatID:services:finishedWithResult:limit:
chatLoadedWithChatIdentifier:chats:
standaloneFileTransferRegistered:
fileTransfer:createdWithProperties:
fileTransfer:updatedWithProperties:
fileTransfers:createdWithLocalPaths:
fileTransfer:updatedWithCurrentBytes:totalBytes:averageTransferRate:
fileTransfer:highQualityDownloadSucceededWithPath:
fileTransferHighQualityDownloadFailed:
account:conference:receivedInvitationFrom:properties:
account:conference:receivedResponseToInvitationFrom:properties:
account:conference:receivedCancelInvitationFrom:properties:
account:conference:receivedCounterProposalFrom:properties:
account:conference:receivedUpdateFrom:data:
account:conference:receivedAVMessage:from:sessionID:userInfo:
account:conference:changedToNewConferenceID:
account:conference:peerIDChangedFromID:toID:
account:conference:peerID:propertiesUpdated:
account:conference:invitationSentSuccessfully:
account:avAction:withArguments:toAVChat:isVideo:
showInvalidCertNotificationForAccount:
showForgotPasswordNotificationForAccount:
property:changedTo:from:
persistentProperty:changedTo:from:
account:statusChanged:
account:postedError:
account:relay:handleInitate:fromPerson:
account:relay:handleUpdate:fromPerson:
account:relay:handleCancel:fromPerson:
databaseUpdated
databaseUpdated:
databaseFull
databaseNoLongerFull
databaseChatSpamUpdated:
unreadCountChanged:
lastFailedMessageDateChanged:
displayPinCodeForAccount:pinCode:deviceName:deviceType:phoneNumber:
pinCodeAlertCompleted:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:
stickerPackUpdated:
stickerPackRemoved:
qosClassWhileServicingRequestsResponse:identifier:
updateCloudKitState
updateCloudKitStateWithDictionary:
returnMOCEnabledState:
didAttemptToSetEnabledTo:result:
didPerformAdditionalStorageRequiredCheckWithSuccess:additionalStorageRequired:forAccountId:error:
didAttemptToDisableAllDevicesResult:
didFetchSyncStateStats:
didAttemptToDisableiCloudBackups:error:
receivedUrgentRequestForMessages:
didFetchCloudKitSyncDebuggingInfo:
initWithProtocol:
removeObjectIdenticalTo:
_reallyProcessMyStatusChanged
bestAccountForStatus
myPictureChanged
myPictureDataChanged:
connectedAccounts
charValue
account:chat:style:chatProperties:messageReceived:
account:chat:style:chatProperties:messagesReceived:
isHoldingChatMessages
_processDeferredInvitationDictionary:
setReadOnly:
activateAccount:locally:
_deactivateAccount:
_processMyStatusChanged
addAccount:locally:
deleteAccount:locally:
shouldHoldChatMessages
numberWithChar:
_deferNotification:
capabilitiesForListenerID:
_handleStandaloneFileTransferRegistered:
_handleFileTransfer:createdWithProperties:
_handleFileTransfers:createdWithLocalPaths:
_handleFileTransfer:updatedWithProperties:
_handleFileTransfer:updatedWithCurrentBytes:totalBytes:averageTransferRate:
_handleFileTransfer:highQualityDownloadSucceededWithPath:
_handleFileTransferHighQualityDownloadFailed:
_cacheValue:forProperty:
_cacheValue:forPersistentProperty:
account:status:capabilities:serviceLoginStatus:loginStatusMessage:
sendABInformationToDaemon
_servicesToAllow
_servicesToDeny
services:properties:persistentProperties:
deactivateAccount:withDisable:
service:properties:defaults:defaultAccountSettings:allAccounts:activeAccounts:
_setStamp:forContext:
_warmupQueryCacheForService:
_handleAllFileTransfers:
rebuildIMHandles
_deferredSetup:
performSelector:withObject:afterDelay:inModes:
_handleMergedChatReconstructions:
_handleChatReconstructions:
_hidingDisconnect
requestPendingMessages
_flushQueryCacheForService:
_noteSetupComplete
localizedDescription
methodSignatureForSelector:
selector
invokeWithTarget:
_didAttemptToSetEnabledTo:result:
_didPerformAdditionalStorageRequiredCheckWithSuccess:additionalStorageRequired:forAccountId:error:
_didAttemptToDisableAllDevicesResult:
_updateCloudKitState
_updateCloudKitStateWithDictionary:
_requestMOCEnabledReturned:
_noteDisconnected
addHandler:
removeHandler:
holdChatMessages
releaseHeldChatMessages
_stampForContext:
valueOfProperty:
valueOfPersistentProperty:
forwardInvocation:
_contexts
_setHidingDisconnect:
handlers
isSetupComplete
vcCapabilities
hasPostedSetupComplete
properties
persistentProperties
_properties
_deferredChatMessages
_handlers
_protocol
_services
_myPicture
_myNowPlayingString
_vcCapabilities
_setupComplete
_postedSetupComplete
_holdingChatMessages
_hasPendingProcessChange
setTotalChatCount:
setSyncedChatCount:
setTotalMessageCount:
setSyncedMessageCount:
setTotalAttachmentCount:
setSyncedAttachmentCount:
setTotalRecordCount:
setSyncedRecordCount:
setNumberStyle:
setMaximumFractionDigits:
setMinimumSignificantDigits:
setMaximumSignificantDigits:
setRoundingIncrement:
setRoundingMode:
stringFromNumber:
calculatePercentageOfTotal:count:
percentStringFromDouble:
totalRecordCount
syncedRecordCount
percentStringFromTotal:count:
percentSynced
_statsString:count:total:
syncedChatCount
totalChatCount
syncedMessageCount
totalMessageCount
syncedAttachmentCount
totalAttachmentCount
initWithStatisticsDictionary:
_syncedChatCount
_totalChatCount
_syncedAttachmentCount
_totalAttachmentCount
_syncedMessageCount
_totalMessageCount
_totalRecordCount
_syncedRecordCount
_createSyncStatisticsDictionary:messageSyncCount:chatCount:chatSyncCount:attachmentCount:attachmentSyncCount:
_syncStatisticsDictionary
_createSyncStatisticsDictionaryForSyncControllerSyncState:syncType:count:max:
__im_associatedMessageSummary
rangeOfComposedCharacterSequenceAtIndex:
substringToIndex:
__im_adjustMessageSummaryInfoForSending:
message
generateBackwardCompatibilityStringForMessageAcknowledgmentType:messageSummaryInfo:
messagePartRange
instantMessageWithAssociatedMessageContent:flags:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:
sendMessage:
sendMessageAcknowledgment:forChatItem:withMessageSummaryInfo:
associatedMessageType
messageSummaryInfo
generatePreviewStringForMessageAcknowledgmentType:acknowledgmentSenderAddress:messageSummaryInfo:
plainBody
sendMessageAcknowledgment:forChatItem:withAssociatedMessageInfo:
messageAcknowledgmentSummaryForConversationListWithMessage:
_createSingleton__im
__setSingleton__im:
_syncStateDidChange:
logHandle
previousState
accountHasiMessageEnabled
syncStateDictionary
initWithAccountEnabled:stateDictionary:
cloudKitEventNotificationManager:syncStateDidChange:
visitEventHandlers:
syncStateWithDictionary:
setPreviousState:
_sendSyncStateChangedEventToEventListeners:
_updateProgressWithState:
cloudKitHooks
broadcastCloudKitState
notificationManager
createEventListenerForNotificationName:object:
startListeningForEventTarget:sendStartingEvent:completion:
didSucceed
cloudKitEventNotificationManager:didChangeEnabled:error:
error
setEnabled:
accountInfoProvider
cloudKitEventNotificationManagerAccountHasiMessageEnabled:
initiatePeriodicSync
initiateSync
cloudKitEventNotificationManager:didDisableAllDevices:error:
tryToDisableAllDevices
cloudKitEventNotificationManager:didPerformAdditionalStorageRequiredCheck:additionalStorageRequired:forAccountId:error:
performAdditionalStorageRequiredCheck
fetchSyncStateStatistics
cloudKitEventNotificationManager:didFetchSyncStatistics:error:
_sendSyncStatisticsToEventHandlers:error:
_fetchSyncStateStatistics:
fetchStatsTimer
invalidate
setFetchStatsTimer:
startFetchingSyncProgress
cloudKitEventNotificationManager:syncProgressDidUpdate:
_cancelStatsFetchingTimer
progressPollingInterval
_timerExpiredForSyncStatsFetching:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
progressToSend
setProgressToSend:
_sendProgressToEventListenersDeferred
_sendProgressToEventListeners:
_hasProgressEventListeners
shouldFetchSyncStatistics
createSyncProgressWithSyncStatistics:
shouldRescheduleSyncSyncProgress
_rescheduleFetchSyncProgress
_sendHiddenProgressToEventListeners
cloudKitEventNotificationManager:didFetchSyncDebuggingInfo:
fetchCloudKitSyncStateDebuggingInfo:
__singleton__im
addEventHandler:
removeEventHandler:
syncState
fetchSyncState
fetchSyncStateWithCompletion:
setCloudKitSyncEnabled:
setCloudKitSyncEnabled:withCompletion:
startPeriodicSync
startInitialSync
didPromptForCloudKitSync
setDidPromptForCloudKitSync:
disableAllSyncEnabledCloudKitDevices
fetchSyncStateStatisticsWithCompletion:
fetchSyncDebuggingInfo:
setAccountInfoProvider:
setProgressPollingInterval:
eventHandlers
setNotificationManager:
_accountInfoProvider
_progressPollingInterval
_eventHandlers
_notificationManager
_fetchStatsTimer
_previousState
_progressToSend
processInfo
environment
_initWithItems:
_trimIfNeeded
_itemsDidChange:
isTypingMessage
setSortID:
sortID
assignSortIDsToItems:
_replaceStaleTypingMessage
__im_dateWithCurrentServerTime
_items
isFirstMessageCandidate
isLastMessageCandidate
characterSetWithCharactersInString:
body
_charactersToIgnoreWhenParsingTextContent
_lastIncomingFinishedMessageWithTextContent
timeIntervalSinceDate:
appendFormat:
enumerateObjectsWithOptions:usingBlock:
setCapacity:
isMoreToLoad
_handleItem:
_removeItem:
_replaceItems:
_removeAllItems
_setSortID:
_indexOfItem:
_member:
_itemForGUID:
_typingMessage
_firstMessage
_lastMessage
_lastSentMessage
_lastFinishedMessage
_lastIncomingMessage
_lastIncomingFinishedMessage
_lastRelatedIncomingFinishedMessageTextContentWithLimit:
capacity
_capacity
type
firstMessageItem
lastMessageItem
_setCachedQueriesEnabled:
_setAutoReconnect:
_addressBookChanged:
autoLoginActiveAccountsIfNecessary
loginAllAccounts
logoutAllAccounts
terminateForcingIfNeeded:
changeMyStatus:forAccount:
setValue:ofProperty:
setValue:ofPersistentProperty:
setVCCapabilities:
requestPendingVCInvites
requestPendingACInvites
activateAccounts:
deactivateAccounts:
addAccount:defaults:service:
removeAccount:
sendStandaloneFileTransfer:
deleteFileTransferWithGUID:
downloadHighQualityVariantOfFileTransferWithGUID:
fileTransfer:acceptedWithPath:autoRename:overwrite:
fileTransferStopped:
fileTransferRemoved:
markAttachment:sender:recipients:isIncoming:
setListenerCapabilities:
loadChatsWithChatID:
loadMessageWithGUID:queryID:
loadHistoryForIDs:style:onServices:limit:beforeGUID:afterGUID:chatID:queryID:
loadPagedHistoryForGUID:chatIdentifiers:style:onServices:numberOfMessagesBefore:numberOfMessagesAfter:chatID:queryID:
deleteMessageWithGUIDs:queryID:
clearHistoryForIDs:style:onServices:beforeGUID:afterGUID:chatID:queryID:
markAsSpamForIDs:style:onServices:chatID:queryID:autoReport:
updateMessage:
markReadForMessageGUID:
markReadForMessageGUID:callerOrigin:
markReadForIDs:style:onServices:messages:clientUnreadCount:
storeItem:inChatGUID:
markPlayedForMessageGUID:
markPlayedForIDs:style:onServices:message:
markPlayedExpressiveSendForIDs:style:onServices:message:
markSavedForMessageGUID:
markSavedForIDs:style:onServices:message:
markHasHadSuccessfulQueryForIDs:style:onServices:
updateUnformattedID:forBuddyID:onService:
loadFrequentRepliesForIDs:style:onServices:limit:chatID:queryID:
loadUnreadForIDs:style:onServices:limit:fallbackGUID:chatId:queryID:
loadAttachmentsForIDs:style:onServices:chatID:queryID:
cleanupAttachments
chat:updateProperties:
chat:updateDisplayName:
chat:updateIsFiltered:
silenceChat:untilDate:
removeChat:
loadChatWithChatIdentifier:
debugUpdateGroupParticipantversion:chatIdentifier:
initiateCNContactBasedChatMerge:
autoReconnectAccount:
sendMappingPacket:toHandle:account:
changeGroup:changes:account:
joinChatID:handleInfo:identifier:style:joinProperties:account:
joinChatID:handleInfo:identifier:style:groupID:joinProperties:account:
leaveChatID:identifier:style:account:
leaveiMessageChatID:identifier:style:account:
removeChatID:identifier:style:account:
invitePersonInfo:withMessage:toChatID:identifier:style:account:
invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:account:
removePersonInfo:chatID:identifier:style:account:
removePersonInfoFromiMessageChat:chatID:identifier:style:account:
declineInvitationToChatID:identifier:style:account:
sendMessage:toChatID:identifier:style:account:
logDumpAndSendMessageTo:forHours:
sendStickerAtPath:toChatID:forNBubbleFromTheBottom:atX:atY:scale:balloonWidth:
sendReadReceiptForMessage:toChatID:identifier:style:account:
sendPlayedReceiptForMessage:toChatID:identifier:style:account:
sendSavedReceiptForMessage:toChatID:identifier:style:account:
setProperties:ofParticipant:inChatID:identifier:style:account:
sendNotificationMessageToUniqueID:withCommand:
sendCommand:withProperties:toPerson:account:
requestVCWithPerson:properties:conference:account:
respondToVCInvitationWithPerson:properties:conference:account:
cancelVCRequestWithPerson:properties:conference:account:
cancelVCRequestWithPerson:properties:conference:reason:account:
sendCounterProposalToPerson:properties:conference:account:
sendVCUpdate:toPerson:conference:account:
sendAVMessageToPerson:sessionID:type:userInfo:conference:account:
relay:sendInitateRequest:toPerson:account:
relay:sendUpdate:toPerson:account:
relay:sendCancel:toPerson:account:
importMessage:isRead:
downloadStickerWithGUID:
downloadStickerPackWithGUID:isIncomingMessage:ignoreCache:
replayMessagesFromDatabasePath:
beginRecordingMessagesToReplayDatabase:
stopRecordingMessagesReplayDatabase
requestQOSClassWhileServicingRequestsWithID:
createChatZone
deleteChatZone
writeDirtyChats
syncChats
markAllChatsAsDirty
clearChatZoneSyncToken
createAttachmentZone
deleteAttachmentZone
writeAttachments
syncAttachments
downloadAttachmentAssets
writeDirtyMessages
deleteMessagesZone
syncMessages
loadDirtyMessagesWithLimit:
loadDeletedMessagesWithLimit:
writeExitRecord
fetchExitRecord
deleteExitRecord
clearLocalCloudKitSyncState
clearDataFromCloudKit
setCloudKitEnabled:
updateCloudKitSyncingState
fetchLatestSalt
printCachedSalt
deleteSalt
purgeAttachments:
metricAttachments:
fetchSyncStateStats
writeCloudKitSyncCounts:
toggleiCloudBackupsIfNeeded
setiCloudBackupsDisabled:
removePathFromiCloudBackups:
fetchLatestRampState
printCachedRampState
syncDeletesToCloudKit
tryToAutoCollectLogsWithErrorString:sendLogsTo:
requestMOCEnabledState
closeSessionChatID:identifier:style:account:
__setCapabilities:
_handleReceivedQOSClassWhileServicingRequestsNotification:
requestQOSClassCompletionBlocks
setRequestQOSClassCompletionBlocks:
UUIDString
setValue:forKey:
removeObserver:
_localObjectCleanup
_remoteObjectCleanup
_disconnectFromDaemonWithForce:
isNonUIInstall
isInternalInstall
connection
initWithConnection:protocol:alreadyConfigured:forceSecureCoding:
mainThread
__im_performBlock:modes:
systemIsShuttingDown
_blocksConnectionAtResume
__isLocalObjectValidOnQueue:
__isRemoteObjectValidOnQueue:
remoteObjectExists
initWithTarget:connection:protocol:forceSecureCoding:
setWhitelistedClasses:
remoteObjectDiedNotification:
localObjectDiedNotification:
standardControls
__im_performBlock:
daemonControllerWillConnect
defaultBroadcaster
blockUntilSendQueueIsEmpty
_blockUntilSendQueueIsEmpty
localObjectExists
makeObjectsPerformSelector:
daemonControllerDidDisconnect
daemonConnectionLost
connectToDaemon
_autoReconnect
daemonControllerDidConnect
_makeConnectionWithLaunch:completionBlock:
_connectToDaemonWithLaunch:capabilities:
connectToDaemonWithLaunch:capabilities:blockUntilConnected:
hasListenerForID:
setCapabilities:forListenerID:
_listenerSetUpdated
setMyStatus:message:forAccount:
setActive:
_addEarlyListener:
_removeEarlyListener:
IMCoreSetupTimingCollection
startTimingForKey:
_connectionTimeout
processName
stopTimingForKey:
isValid
setTarget:
enumerateKeysAndObjectsUsingBlock:
broadcastProxyForTarget:messageContext:protocol:
retainArguments
sharedController
_applicationWillTerminate
_setApplicationWillTerminate
requestQOSClassOfAgentWhileServicingRequests:
_agentDidLaunchNotification:
_handleDaemonException:
killDaemon
disconnectFromDaemonWithForce:
disconnectFromDaemon
addListenerID:capabilities:
removeListenerID:
_remoteObject
setMyPicture:smallPictureData:
setMyStatus:message:
_setBlocksConnectionAtResume:
_acquiringDaemonConnection
listener:setListenerCapabilities:
listener:setValue:ofProperty:
listener:setValue:ofPersistentProperty:
setDaemonTerminatesWithoutListeners:
setDaemonLogsOutWithoutStatusListeners:
delegate
setDelegate:
_listenerID
_setListenerID:
_setServicesToAllow:
_setServicesToDeny:
_remoteMessageQueue
isRequestingConnection
_delegate
_listenerMap
_localObject
_daemonListener
_listenerLockQueue
_remoteDaemonLockQueue
_localObjectLockQueue
_connectionLock
_runLoopSource
_blockingLock
_hasCheckedForDaemon
_preventReconnect
_inBlockingConnect
_hasBeenSuspended
_gMyFZListenerCapabilities
_cachedCapabilities
_lastUpdatedCapabilities
_requestingConnection
_requestQOSClassCompletionBlocks
stringFromAutomationErrorCode:
errorWithDomain:code:userInfo:
chatForIMHandles:
groupID
bestiMessageAccount
existingChatWithGroupID:
chatForHandles:error:results:
handlesFromStrings:error:results:
existingChatForGroupID:error:results:
_imessageAccount
_activeAccountChanged:
_accountRegistrationStatusChanged:
accountActive:
activeAccounts
operationalAccounts
_rebuildOperationalAccountsCache:
setAccounts:
readOnly
okToConnectAccount:
deactivateAccount:
deactivateAccounts:withDisable:
_deactivateAccounts:
canActivateAccounts:
__imSetFromArray
activateAccounts:force:locally:
activateAccount:force:locally:
activateAndHandleReconnectAccounts:
canActivateAccount:
operationalAccountsForService:
bestActiveAccountForService:
activeIMessageAccount
activeSMSAccount
accountAtIndex:
numberOfAccounts
canDeleteAccount:
addAccount:atIndex:
addAccount:atIndex:locally:
deleteAccount:
activateAccount:
activateAccount:force:
activateAndHandleReconnectAccount:
accountConnecting:
accountConnected:
bestAccountForService:login:guid:
bestAccountForService:withLogin:
bestOperationalAccountForService:withLogin:
bestActiveAccountForService:withLogin:
bestConnectedAccountForService:withLogin:
bestOperationalAccountForService:
bestConnectedAccountForService:
bestAccountWithCapability:
mostLoggedInAccount
aimAccount
jabberAccount
_enableCache
_disableCache
_accountMap
_isReadOnly
_cachesEnabled
_operationalAccountsCache
_serviceToActiveAccountsMap
_serviceToAccountsMap
_serviceToConnectedAccountsMap
_serviceToOperationalAccountsMap
_accounts
anyObject
__iCloudSystemAccountForService:
_operationalPhoneAccountForService:
interfaceWithProtocol:
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
_isChatSiblingOf:
equivalentToRecipients:
localizedStringWithFormat:
descriptionForPurpose:inChat:
chatItems
descriptionForPurpose:isGroupMessage:messageDataSource:attachmentDataSource:
descriptionForPurpose:
expressiveSendStyleID
flags
isAudioMessage
appendString:
numberWithUnsignedLong:
attributesAtIndex:longestEffectiveRange:inRange:
pathExtension
integerValueForKey:withDefault:
boolValueForKey:withDefault:
errorArrayFromSerializedErrorArray_im:
syncingFailed
errors
domain
code
isSyncingAvailable
isSyncingEnabled
_isChangingEnabledState
changingEnabledState
isSyncing
isDisablingDevices
isSyncingPaused
syncErrorWithDomain:code:
canEnableSyncing
canStartSyncing
canChangeEnabledSetting
isSyncEnabledForDisplayOnly
syncControllerSyncState
syncControllerSyncType
syncControllerRecordType
hasExited
exitDate
lastSyncDate
accountStatus
accountIsEnabled
_hasExited
_isDisablingDevices
_accountIsEnabled
_syncControllerSyncState
_syncControllerSyncType
_syncControllerRecordType
_exitDate
_changingEnabledState
_lastSyncDate
_errors
_accountStatus
_syncState
setWhitelist:
setName:
disableService
setDisableService:
forceWhiteList
setForceWhiteList:
whitelist
_disableService
_forceWhiteList
_whitelist
setShouldPostNotifications:
_updateParentalSettings
_managedPrefsNotification:
active
disableAV
forceChatLogging
_serviceWithName:
disableService:
whitelistForService:
forceWhitelistForService:
accountIsEnabled:
disableAccount:
whitelistForAccount:
forceWhitelistForAccount:
accountHasWhitelist:
shouldPostNotifications
_parentalControls
_disableAV
_forceChatLogging
_shouldPostNotifications
_active
transferCenterClass
_removePendingTransfer:
_removeActiveTransfer:
_removeAllActiveTransfers
acknowledgeAllPendingTransfers
accountID
_addTransfer:toAccount:
transferState
_addPendingTransfer:
defaultHFSFileManager
attributesOfItemAtPath:error:
_doesLocalURLRequireArchiving:
fileTransferClass
fileSize
fileHFSTypeCode
fileHFSCreatorCode
fileHFSFlags
_initWithGUID:filename:isDirectory:localURL:account:otherPerson:totalBytes:hfsType:hfsCreator:hfsFlags:isIncoming:
_addTransfer:
_setAccount:otherPerson:
chatForTransfer:
isIncoming
_addSpotlightProperties:sender:recipients:incoming:
_dictionaryRepresentation
doesLocalURLRequireArchiving:toHandle:
_setForceArchive:
transferForGUID:includeRemoved:
_addActiveTransfer:
_setTransferState:
_setLocalURL:
postCoreAutomationNotificationFinishedTapToDownload:downloadedFromCloudKitSuccessfully:
acceptTransfer:withPath:autoRename:overwrite:
isFinished
_setError:
initWithKey:ascending:
initWithObjects:
sortedArrayUsingDescriptors:
otherPerson
filename
isFileTransfer:preauthorizedWithDictionary:
setRegisteredAsStandalone:
_clearTransfers
_updateWithDictionaryRepresentation:
acceptFileTransferIfPreauthorzed:
registerGUID:forNewOutgoingTransferWithLocalURL:
wasRegisteredAsStandalone
_setCurrentBytes:totalBytes:
_setAveragedTransferRate:lastAveragedInterval:lastAveragedBytes:
setObject:forKeyedSubscript:
setIsAuxImage:
setIsAuxVideo:
stringByAppendingPathExtension:
_randomTemporaryPathWithFileName:
stringByResolvingAndStandardizingPath
writeToFile:options:error:
fileURLWithPath:isDirectory:
guidForNewOutgoingTransferWithLocalURL:
setHideAttachment:
_fetchHighQualityVariantForTransferGUID:completion:
_daemonRestarted:
_initiateHighQualityVariantDownloadWithDaemonForGUID:
setTransferCenterClass:
hasPendingFileTransfers
acknowledgePendingTransfer:
hasActiveFileTransfers
assignTransfer:toMessage:account:
assignTransfer:toHandle:
registerTransferWithDaemon:
sendTransfer:
acceptTransfer:
removeTransfer:
deleteTransfer:
retargetTransfer:toPath:
transfers
activeTransfers
activeTransferGUIDs
orderedTransfers
orderedTransfersGUIDs
clearFinishedTransfers
preauthorizeFileTransferFromOtherPerson:account:filename:saveToPath:
wasFileTransferPreauthorized:
setAuxImageForTransfer:value:
setAuxVideoForTransfer:value:
guidsForStoredAttachmentPayloadData:messageGUID:
fetchHighQualityVariantForTransfer:completion:
_guidToTransferMap
_guidToRemovedTransferMap
_accountIDToTransferGUIDsMap
_preauthorizedInfos
_preauthorizedGUIDs
_activeTransfers
_pendingTransfers
_disconnectionListenerSetUp
_fetchHighQualityVariantCompletionHandlers
mainBundle
bundleIdentifier
sharedVocabulary
initWithChatRegistry:vocabulary:
syncAllGroupNames:
isGroupChat
joinState
sortDescriptorWithKey:ascending:
sortUsingDescriptors:
setVocabulary:ofType:
_chatRegistry
_vocabulary
isBusiness
mapItem
isBusinessChat
isMakoChat
isMako
isApple
_chat_closeSession:
isReplyEnabled
isAppleChat
closeSession
deleteExtensionPayloadData
coordinate
_item
_initWithItem:
failed
visibleAssociatedMessageChatItems
isContiguousWithChatItem:
isAttachmentContiguousWithChatItem:
contiguousType
attachmentContiguousType
isContiguous
_isContiguousLoaded
_setContiguousLoaded:
_setContiguousType:
_setAttachmentContiguousType:
_setGUID:
_guid
_contiguousType
_attachmentContiguousType
_contiguousLoaded
_initWithItem:wasReportedAsSpam:
wasReportedAsSpam
_wasReportedAsSpam
_initWithItem:withExtensionName:
extensionName
_extensionName
_initWithItem:service:handle:
handle
_handle
_initWithItem:handle:
errorCode
_initWithItem:text:index:messagePartRange:visibleAssociatedMessageChatItems:
absoluteString
_newMessagePartsForMessageItem:shouldDisplayLink:isBusiness:hasKnownParticipants:
pairWithFirst:second:
_defaultRichLinkWhiteList
first
second
__im_conformsToDomain:domainExtension:
initWithAttributedString:
hasDataDetectorResults
determineRichLinksInMessage:
rangeValue
URLWithString:
_isWhiteListedURL:
mutableString
attribute:atIndex:effectiveRange:
_initWithItem:text:index:messagePartRange:transferGUID:
attribute:existsInRange:
attributedSubstringFromRange:
_testingSupportsURL:
member:
_guidForMessage:url:
_initWithItem:initialPayload:messagePartRange:
_initWithItem:text:index:messagePartRange:subject:shouldDisplayLink:
_initWithItem:text:index:messagePartRange:subject:
enumerateAttribute:inRange:options:usingBlock:
initWithString:
index
_initWithItem:messagePartRange:subparts:
setIsBusiness:
addIndex:
containsIndex:
deleteCharactersInRange:
messageSubject
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:
_initWithItem:messagePartRange:
initWithFormat:
_setVisibleAssociatedMessageChatItems:
_setParentMessageIsFromMe:
_messageItemWithPartsDeleted:fromMessageItem:
canDelete
_setMessageEditChatItems:
canSendMessageAcknowledgment
setIndex:
setMessagePartRange:
messageEditChatItems
_index
_messagePartRange
_visibleAssociatedMessageChatItems
_messageEditChatItems
_isBusiness
blockingRichLinks
setBlockingRichLinks:
_initWithItem:text:index:messagePartRange:subject:visibleAssociatedMessageChatItems:
setShouldDisplayRichLink:
shouldDisplayRichLink
_subject
initialPayload
setInitialPayload:
setBundleIdentifier:
isBreadcrumb
dataSource
existingDataSourceForMessageGUID:bundleID:
hasSetIsLastChatItemOfPluginType
isLastChatItemOfPluginType
isUpdatingDataSourcePayload
setUpdatingDataSourcePayload:
expireState
isDataSourceInitialized
setLastChatItemOfPluginType:
isSaved
wantsAutoPlayback
setHasSetIsLastChatItemOfPluginType:
setDataSource:
_isLastChatItemOfPluginType
_hasSetIsLastChatItemOfPluginType
_initialPayload
_bundleIdentifier
_dataSource
alphanumericCharacterSet
nonBaseCharacterSet
formUnionWithCharacterSet:
symbolCharacterSet
invert
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
_senderHandle
_otherHandle
_initWithItem:datasource:statusText:optionFlags:
configureStatusTextWithAccount:
rawStatusText
optionFlags
_rawStatusText
_optionFlags
_initWithItem:text:index:messagePartRange:transferGUID:visibleAssociatedMessageChatItems:
_transferGUID
_wantsAttachmentContiguous
subparts
_subparts
typingIndicatorIcon
_initWithItem:dataSource:
_typingIndicatorIcon
_initWithItem:statusType:time:count:expireStatusType:
initWithTimeInterval:sinceDate:
timePlayed
_timeStale
_timeAdded
_setTimeAdded:
errorText
messageStatusType
_initWithItem:statusType:time:count:
_initWithItem:expireStatusType:count:
statusType
expireStatusType
_statusType
_expireStatusType
_count
_initWithItem:effectStyleID:
effectStyleID
_effectStyleID
_initWithItem:attributionInfo:attributionType:
attributionInfo
attributionType
_attributionInfo
_attributionType
_initWithItem:sender:
actionType
title
_initWithItem:sender:otherHandle:
changeType
otherHandle
_setActionableEclipsed:
restrictLocationSharing
disableLocationSharing
expired
actionable
offerState
_isActionableEclipsed
_actionableEclipsed
direction
indexSet
indexesOfPartsOfMessage:
indexesOfPartsOfMessageItem:
_imAssociatedMessageItem
associatedMessageRange
parentMessageIsFromMe
geometryDescriptor
_geometryDescriptor
_parentMessageIsFromMe
editedBody
_initWithItem:sender:messageAcknowledgmentType:
messageAcknowledgmentType
_messageAcknowledgmentType
_initWithItem:sender:transferGUID:
stickerUserInfo
floatValue
_initWithAcknowledgments:
includesFromMe
acknowledgments
fromMeAcknowledgement
latestIsFromMe
includesMultiple
latestAcknowledgmentType
_latestIsFromMe
_includesMultiple
_acknowledgments
_fromMeAcknowledgement
_latestAcknowledgmentType
_initWithItem:text:
dd_attributedSubstringFromRange:
_IMAppObjectForKey:
_determineStatusImageAppearance
pathForResource:ofType:
sharedAgent
initialize
_statusImageAppearanceChanged:
_daemonConnected:
_daemonDisconnected:
launchIfNecessary
_customMessagesChanged:
myAvailableMessages
myAwayMessages
setMyAvailableMessages:
setMyAwayMessages:
setServiceAgentCapabilities:
serviceAgentCapabilities
serviceWithNameNonBlocking:
currentAVChatInfo
requestAudioReflectorStart
requestAudioReflectorStop
requestVideoStillForPerson:
_currentAVChatInfo
exceptionWithName:reason:userInfo:
appWithPluginBundle:
initWithBundle:app:
setIdentifier:
setPluginLoaded:
setBundle:
infoDictionary
setBrowserGroup:
showInBrowser
setShowInBrowser:
setBrowserImageName:
setBrowserImagePath:
unloadBundle
setBubbleClass:
setBrowserClass:
setDataSourceClass:
setCustomTypingIndicatorLayerClass:
setEntryClass:
initWithDataSource:isFromMe:
removeLastObject
existingBalloonControllerWithMessageGUID:
supportsControllerReuse
_getControllerFromReusePoolForChatItem:
bubbleClass
messageToDatasourceMap
shouldHideAppSwitcher
isStickerPackOnly
browserClass
customTypingIndicatorLayerClass
entryClass
appBundle
pluginBundle
dataSourceClass
pluginLoaded
initWithBundle:
balloonControllerForChatItem:
moveController:toReusePoolFromChatItem:
removeController:forChatItem:
existingDataSourceForMessageGUID:
insertDataSource:forGUID:
version
isBetaPlugin
browserImageName
browserImagePath
browserGroup
bundle
plugin
setPlugin:
setApp:
setMessageToDatasourceMap:
messageToBalloonControllerMap
setMessageToBalloonControllerMap:
balloonControllerPool
setBalloonControllerPool:
_pluginLoaded
_browserImageName
_browserImagePath
_browserGroup
_bundle
_plugin
_app
_messageToDatasourceMap
_messageToBalloonControllerMap
_bubbleClass
_browserClass
_dataSourceClass
_customTypingIndicatorLayerClass
_entryClass
_balloonControllerPool
setBrowserDisplayName:
initWithIdentifier:browserDisplayName:browserImageName:
initWithIdentifier:browserDisplayName:browserImageName:browserClass:
appWithPluginBundle:pluginKitProxy:extension:
_initWithPluginBundle:extension:pluginKitProxyClass:
pluginKitProxyForIdentifier:
initWithPluginBundle:pluginKitProxy:extension:
appWithPluginBundle:appBundle:
extensionConnection
proxyWithErrorHandle:
shouldBalloonHideAppIcon
isLaunchProhibited
itemID
canSendDataPayloads
initWithPluginBundle:extension:
initWithPluginBundle:appBundle:
extension
proxy
setProxy:
requestIdentifier
setRequestIdentifier:
setCanSendDataPayloads:
setShouldBalloonHideAppIcon:
_canSendDataPayloads
_shouldBalloonHideAppIcon
_extension
_proxy
_requestIdentifier
fileURLWithPathComponents:
initWithURL:
_extensionBlacklist
pluginsMap
extensionWithIdentifier:error:
_insertPluginForExtension:balloonProviderBundle:andTimingCollection:
_loadAllDataSources
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
stringByDeletingLastPathComponent
pluginMetaDataFolder
contentsOfDirectoryAtPath:error:
moveItemAtPath:toPath:error:
pluginIDToMetadataCache
endMatchingExtensions:
_pluginPlistPath:
_infoPlistPathForPluginCreatingFolderIfNeeded:
fileExistsAtPath:
simulatedConversationID1
localParticipantID1
simulatedConversationID2
localParticipantID2
UUID
setSimulatedConversationID1:
setLocalParticipantID1:
setSimulatedConversationID2:
setLocalParticipantID2:
_participantIDForSimulator:
_metadataForPluginIdentifier:
_storeMetadata:_forPlugin:
initWithUUIDString:
stringByDeletingPathExtension
_identifiersForAppPlugins
_pluginsForWhichWeHaveMetadata
_deleteMetaDataForPlugins:
_updatePluginsForExtensions:
beginMatchingExtensionsWithAttributes:completion:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
bundleWithURL:
_updatePluginsForBundles:
setPluginsToRemoveAfterExtensionsUpdate:
_removePluginsWithDelay
_appProxyBundleIdentifiersForAppPlugins
_proxyIdentifiersForPlugins
pluginsToRemoveAfterExtensionsUpdate
_insertPluginForAppBundle:balloonProviderBundle:
_setPluginsToRemoveAndCallSelectorWithDelay:
_moveExtensionDataSourcesFromMessagesExtensionPluginToAppExtensions
trackEvent:withCount:
_isServerBlackListedBundle:serverBag:
_isExtensionBlackListed:
_clearPluginMetadataForUninstalledApps
_removePluginsForIdentifiers:
setIsEnabled:
postNotificationName:object:
isRunningPPT
_findPluginsInPaths:
_findPluginsInPathInternal:
_loadAppBundleDataSources
_loadAppExtensionDataSources
_fallBackMessagesExtensionPluginForBundleID:
isSubclassOfClass:
setIsRunningPPT:
pluginChatItem:didRelinquishReusableController:
pluginChatItem:didRelenquishNonResuableController:
localParticipantIdentifierForAppID:conversationID:
recipientIDForRecipient:appID:
conversationID:appID:
removePluginWithBundleID:
setPluginEnabled:identifier:
setPluginsMap:
extensionMatchingContext
setExtensionMatchingContext:
setPluginMetaDataFolder:
setPluginIDToMetadataCache:
_pluginsMap
_extensionMatchingContext
_pluginMetaDataFolder
_pluginIDToMetadataCache
_pluginsToRemoveAfterExtensionsUpdate
_simulatedConversationID1
_simulatedConversationID2
_localParticipantID1
_localParticipantID2
raise:format:
_loadStatusNames
copyStringGUIDForObject:
_registerForNotifications
_fetchBusinessInfo
unregisterIMHandle:
_setOriginalID:updateSiblings:
_setCountryCode:updateSiblings:
existingChatSiblingsArray
setAnonymous:
isAnonymous
groupsArray
bestIMHandleForService:
imHandleForOtherAccount:
shouldQueueNotifications
__mainThreadPostNotification:
notificationWithName:object:userInfo:
_postNotification:
email
isInAddressBook
existingIMHandleWithoutResource
areABPropertiesRecent
resetABProperties
isEqualToIMPerson:
nickname
firstName
lastName
_clearABProperties
sendNotificationABPersonChanged
rangeOfString:options:
localizedCompare:
_hasABName
_hasServiceNameProperties
suggestedName
businessNameForUID:updateHandler:
_formattedPhoneNumber
hasServer
_IDWithTrimmedServer
abbreviatedName
_abPersonCreateIfNeeded
setFirstName:lastName:
imageDataWithoutLoading
setImageData:
_setABPersonFirstName:lastName:
_setBaseFirstName:lastName:fullName:
setEmails:andUpdateABPerson:
setEmails:
setFirstName:lastName:fullName:andUpdateABPerson:
setEmail:andUpdateABPerson:
extraProperties
hasResource
IDWithoutResource
accountSiblingsArray
_createPhoneNumberRefIfNeeded
stringWithCharacters:length:
isMobile
priority
timeSinceWentOffline
bestIMHandleForAccount:onService:inGroup:otherThan:
existingAccountSiblingsArray
bestIMHandleInArray:
isBetterThanIMHandle:
siblings
initWithSet:
setCapabilities:
removeObjectsForKeys:
_setExtraProperties:
isBlocked
_isMyIDInList:
imHandleWithoutResource
setStatus:message:richMessage:
_updateStatusBasedOnAuthRequestStatus
nameOfStatus:
timeSinceStatusChanged
setDay:
setHour:
setMinute:
currentCalendar
dateByAddingComponents:toDate:options:
setFormatterBehavior:
setDateStyle:
setTimeStyle:
stringFromDate:
localizedString
idleTime
setDateFormat:
_filterStatusMessage
_clearStatusMessageURLCache
uniqueName
_nameForComparisonPreferFirst:
caseInsensitiveCompare:
_existingAccountSiblingsForHandle:
_accountSiblingsForHandle:
_existingChatSiblingsForHandle:
_chatSiblingsForHandle:
siblingsForIMHandle:
unionSet:
chatSiblingsArray
_chatSiblingsArray
hasVideo
hasAudio
pictureData
customPictureDataChanged:key:
sharedService
ticketForBrandLookupWithIMessageUid:traits:
_mapItemFetchedWithMapItems:error:
submitWithHandler:networkActivity:
_fetchMapItemImageDataForMapItem:
_fetchMapItemBannerImageDataForMapItem:
setMapItem:
_bestBrandIconURLForSize:allowSmaller:
_mapItemImageDataFetchedWithResponse:statusCode:resultData:remoteURLConnectionError:
initWithURLRequest:completionBlock:
load
setMapItemImageData:
_bestNavbarBrandIconURLForSize:allowSmaller:
valueWithCGSize:
_mapItemBannerImageDataFetchedWithResponse:statusCode:resultData:remoteURLConnectionError:
setMapItemBannerImageData:
setNotificationsEnabled:
notificationsEnabled
filterIMHandlesForAccountSiblings:onAccount:
initWithAccount:ID:
_handleInfo
_setOriginalID:countryCode:updateSiblings:
canBeDeleted
setUniqueName:
nameAndEmail
isContact
clearABPerson
_clearABPersonLookup
displayNameForChat:
_displayNameWithAbbreviation
nameAndID
resetUniqueName
setLocalNickname:
setEmail:
canBeAdded
isSystemUser
setIsMobile:
setIsBot:
mobileDeviceName
hasLocation
isLoginIMHandleForAnyAccount
phoneNumberRef
requestValueOfProperty:
setValue:ofExtraProperty:
bestIMHandleForAccount:
bestSibling
isVisiblyBlocked
setBlocked:
sortOrderInGroup:
accountTypeName
dependentIMHandles
setAuthRequestStatus:
setPersonStatus:
statusMessageChanged:
nameOfStatus
IDStatus
_setIDStatus:
setIdleSince:
setFeedUpdatedDate:
offlineString
idleString
statusMessage
compareFirstNames:
compareLastNames:
compareNormalizedIDs:
matchesIMHandle:
hasOtherSiblings
siblingsArray
isAccountSiblingOf:
isSiblingOf:
_chatSiblings
_bestChatSibling
hasConferencing
isConferenceAvailable
hasMultiwayVideo
hasMultiwayAudio
_sendAutomationData:properties:
_sendCommand:properties:
_imPersonPictureChanged:
customPictureData
setCustomPictureData:
previousStatus
previousStatusMessage
richStatusMessage
feedUpdatedDate
setPriority:
isBot
setOtherServiceIDs:
addressBookIdentifier
mapItemImageData
mapItemBannerImageData
setIDStatus:
_account
_uncanonicalID
_otherServiceIDs
_idleSince
_feedUpdatedDate
_extraProps
_certs
_person
_abFirstName
_abLastName
_abFullName
_abNickname
_displayID
_firstName
_lastName
_fullName
_nickname
_emails
_normalizedFormOfID
_IDWithoutResource
_uniqueName
_pictureData
_statusMsg
_processedStatusMsg
_richStatusMsg
_whenWentOffline
_whenStatusChanged
_prevStatusMsg
_notificationNameQueue
_notificationQueue
_phoneNumberRef
_formattedNumber
_hasCheckedPhoneNumber
_status
_prevStatus
_authRequestStatus
_resourceIndex
_IDStatus
_blockNotifications
_hasTemporaryWatch
_isMobile
_isBot
_isAnonymous
_beingTornDown
_hasCheckedCardMap
_priority
_addressBookIdentifier
_notificationQueueCount
_isMako
_isApple
_mapItem
_mapItemImageData
_mapItemBannerImageData
_suggestedName
_sendRemoteLogDumpRequest:
_sendRemoteLogDumpRequest
abAddressBookRef
weakObjectsHashTable
_emptySiblingCacheForIMHandleGUID:
_buildSiblingsForIMHandle:
_clearSiblingsCacheForIMHandle:rebuildAfter:
_addressBookChanged
_dumpOutAllIMHandles
_siblingsMap
_allIMHandles
_businessNameManager
existingChatWithGUID:
keysSortedByValueUsingComparator:
existingChatWithChatIdentifier:
enumerateAllChatsAndIncludingSyncedAttachmentSizes:usingBlock:
IMCloudKitSyncingEnabled
IMCloudKitIsSyncing
IMCloudKitIsEligibleForTruthZone
IMCloudKitIsInExitState
IMCloudKitIsRemovedFromBackup
IMCloudKitStartingPeriodicSync
IMCloudKitStartingInitialSync
IMCloudKitStartingEnabledSettingChange
IMCloudKitStartingDisableDevices
IMCloudKitSyncControllerSyncState
IMCloudKitSyncControllerSyncType
IMCloudKitSyncControllerSyncRecordType
IMCloudKitSyncDate
IMCloudKitSyncErrors
convertToDictionary
setIMCloudKitSyncingEnabled:
setIMCloudKitIsSyncing:
setIMCloudKitIsEligibleForTruthZone:
setIMCloudKitIsInExitState:
setIMCloudKitIsRemovedFromBackup:
setIMCloudKitSyncDate:
setIMCloudKitStartingPeriodicSync:
setIMCloudKitStartingInitialSync:
setIMCloudKitStartingEnabledSettingChange:
setIMCloudKitStartingDisableDevices:
setIMCloudKitSyncControllerSyncState:
setIMCloudKitSyncControllerSyncType:
setIMCloudKitSyncControllerSyncRecordType:
setIMCloudKitSyncErrors:
_IMCloudKitSyncingEnabled
_IMCloudKitIsSyncing
_IMCloudKitIsEligibleForTruthZone
_IMCloudKitIsInExitState
_IMCloudKitIsRemovedFromBackup
_IMCloudKitStartingPeriodicSync
_IMCloudKitStartingInitialSync
_IMCloudKitStartingDisableDevices
_IMCloudKitSyncDate
_IMCloudKitStartingEnabledSettingChange
_IMCloudKitSyncControllerSyncState
_IMCloudKitSyncControllerSyncType
_IMCloudKitSyncControllerSyncRecordType
_IMCloudKitSyncErrors
initiateCNContactBasedMerging
hidePeople
coalescingChanges
addedIMHandle:
removedIMHandle:
_addedPeople:
addPeopleFromArray:skipMe:
removeNotificationObserver:
addNotificationObserver:selector:
containsIMHandle:
removePeopleFromArray:
addPeopleFromArray:
_people
_hidePeople
identifierNameMap
identifierIsEffectIdentifier:
allEffectIdentifiers
localizedCaseInsensitiveContainsString:
replayStringMap
sendWithEffectStringMap
isFeatureEnabled
effectIdentifierIsFullScreenMoment:
effectIdentifierIsImpactEffect:
findIdentifierByMathcingPartialSufix:
nameForEffectIdentifier:
replayStringForEffectIdentifier:
sendWithStringForEffectIdentifier:
shouldShowReplayButtonForEffectIdentifier:
setFeatureEnabled:
initWithSyncState:syncStatistics:
configureSelf
percentComplete
percentCompleteString
progressBarValue
progressBarMax
remainingItems
progressLabel
userMessageLabel
actionLabel
isHidden
setShouldShowUserMessageLabel:
setShouldShowProgressBar:
setUserMessageLabel:
setActionLabel:
setProgressLabel:
shouldShowProgressBar
shouldShowIndeterminateProgress
setShouldShowIndeterminateProgress:
setProgressBarValue:
setProgressBarMax:
shouldShowUserActionLabel
setShouldShowUserActionLabel:
shouldShowUserMessageLabel
setActionType:
syncStatistics
_shouldShowProgressBar
_shouldShowIndeterminateProgress
_shouldShowUserActionLabel
_shouldShowUserMessageLabel
_progressLabel
_progressBarValue
_progressBarMax
_userMessageLabel
_actionLabel
_actionType
_syncStatistics
allHandlesForProperty:
_imHandlesWithIDs:onAccount:
fallbackUserName
removeFirstObject
imHandles
arrayByAddingObjectsFromArray:
imHandleForService:
loginIMHandles
isIMHandleLoginIMHandle:
bestIMHandle
_abEmails
_abIMHandles
_loginIMHandles
setLoginHandle:
setSimulatedAccounts:forServiceNamed:
initWithIncomingIDs:messageIDOffset:account:
_setSimulatedChats:
dictionaryForChat:
setListeners:
listeners
simulatedDaemon:willSendBalloonPayload:attachments:messageGUID:bundleID:
beginSimulatingDaemon
_listeners
clearAttachmentsUploadedToCloudkit
checkArgumentValidity:forExpectedNumberOfArguments:
deleteAttachmentWithMessageGUID:andFilePathIndex:
dictionaryFromGUID:
fileSizeForMessageGUID:withFilePathIndex:
loadHighResolutionFileForMessageGUID:withFilePathIndex:
startConversationFrom:andReceiveAt:
uploadAttachmentToCloudkitWithMessageGUID:andFilePathIndex:
isMainThread
callIMCoreMethodWithDictionary:
IMCoreAutomationPerformOperationWithDictionary:
_initWithGUID:account:style:roomName:displayName:items:participants:isFiltered:hasHadSuccessfulQuery:
messagesBySeparatingRichLinks
simulatedAccount
loginHandle
_updateSender:
chat:didSendMessage:
simulatedAttachments
initWithPath:guid:
currentMessageID
_updateContextWithSenderHandle:otherHandle:
setAssociatedMessageType:
setBody:
simulatedChatIdentifier
setSimulatedChatIdentifier:
_messageWithGUID:
setPayloadData:
setFileTransferGUIDs:
loadMessagesBeforeDate:limit:loadImmediately:
simulatedDisplayName
setSimulatedDisplayName:
_simulatedAccount
_currentMessageID
_simulatedChatIdentifier
_simulatedAttachments
_simulatedDisplayName
senderInfo
bodyData
roomName
unformattedID
timeExpressiveSendPlayed
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:errorType:associatedMessageGUID:associatedMessageType:associatedMessageRange:bizIntent:locale:messageSummaryInfo:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:errorType:
copyOrSetObject:forKey:
recordID
contactIdentifierFromPersonID:
_recordRef
descriptorForRequiredKeys
contactFromPerson:keysToFetch:
removeObject:key:
performBlock:
isCompany
companyName
setFirstName:
setLastName:
emailHandlesForService:includeBaseEmail:
valuesForProperty:
containsHandle:forServiceProperty:
imageData
cnContactID
cnContact
setNickname:
emailHandlesForService:
allEmails
setPhoneNumbers:
setValues:forIMProperty:
save
_abPersonChanged:
_recordID
_registered
setCnContact:
_cnContact
existingABPersonWithFirstName:andLastName:andNickName:orEmail:orNumber:
existingABPersonWithFirstName:andLastName:orEmail:
cachedRecordResultForQuery:sequenceNumber:
setCachedRecordResult:identifier:forQuery:sequenceNumber:
_cachedRecordResultForQuery:addressBook:
stringByAppendingFormat:
_setCachedRecordResult:identifier:forQuery:addressBook:
existingABPersonWithFirstName:andLastName:andNickName:orEmail:orNumber:identifier:
allPeople
existingABPersonWithFirstName:lastName:
existingABPersonForPerson:
existingABPersonWithFirstName:andLastName:orEmail:orNumber:
_threadedABAddressBookRef
stringByRemovingWhitespace
_loginHandle
singletonOverride
serializedErrorArrayFromErrorArray_im:
finishTest
dispatchAfter:block:
initWithErrorCode:
startTest
setError:
_error
_accountLoggedOut:
_daemonDied:
_daemonAlive:
_accountControllerUpdated:
canHaveMultipleParticipants
_watchHandleStatusChangedForHandle:
_noteChatInit:
_updateChatItems
generatedRoomNameForGroupChat
_isInvitation
_configureLocationShareItem:
_setDisplayName:
_handleAddressBookChange:
_initialize
_noteChatDealloc:
setContext:
cancelPreviousPerformRequestsWithTarget:
_firstLoad
updateForItems:forced:
unreadMessageCount
messageFailureCount
numberOfMessagesToKeepLoaded
_insertHistoricalMessages:queryID:isRefresh:isHistoryQuery:limit:
_insertHistoricalMessages:queryID:isRefresh:isHistoryQuery:limit:numberOfMessagesBeforeGUID:numberOfMessagesAfterGUID:
_setChatHasCommunicatedOveriMessage:
setRecipient:
_setAccount:locally:
_archivedItemsToReplace:numberOfMessagesBeforeGUID:numberOfMessagesAfterGUID:
_updateChatItemsWithReason:block:shouldPost:
_appendArchivedItemsToItemsArray:
initWithIndexesInRange:
objectsAtIndexes:
_chat_clearHistory:beforeGUID:afterGUID:queryID:
_performQueryWithKey:loadImmediately:block:
clear
_chat_markAsSpam:queryID:
_setCountOfMessagesMarkedAsSpam:
_chat_markAsSpamAutomatically:
_copy
_updateChatItemsWithReason:block:
setIsFiltered:
_chat:updateIsFiltered:
_markHasHadSuccessfulQueryForChat:
_postNotification:userInfo:shouldLog:
stateForParticipant:
initWithInteger:
initForReadingWithData:
setRequiresSecureCoding:
paymentTypeForMessage:
hasSurfRequestForPaymentType:
clientSendTime
setClientSendTime:
_isDuplicate:
isSystemMessage
_fixSendingItemDateAndSortID:
isEmpty
isRead
isLocatingMessage
_updateLocationShareItemsForSender:
wasDataDetected
isDelivered
_setJoinState:quietly:
_sendMessage:adjustingSender:shouldQueue:
_setParticipantState:forHandle:quietly:
_registerCompletion:forQueryID:
_blockUntilQueriesComplete:
trackEvent:withStatistic:
_performQueryWithKey:loadImmediately:block:completion:
_handleAttributionChanged
_clearCachedIdentifier
_chat:updateDisplayName:
initWithSender:time:guid:type:
setTitle:
setDestinationCallerID:
_chat_storeItem:inChat:
__im_engramDataRepresentation
persistentID
_setJoinState:
_chat:joinWithProperties:
_chat_declineInvitation:
bizIntent
_updateBizIntent:
setBizIntent:
localeIdentifier
_updateLocale:
wasDowngraded
_updateGUID:
join
_updateFileTransferGUIDs:
chatRegistry
_chat:sendMessage:
useCourierTime
_fixItemForSendingMessageTime:
lastIncomingMessage
lastSentMessageDate
dateWithTimeIntervalSinceReferenceDate:
_setLocalUserIsComposing:suppliedGUID:
notificationIDSTokenURI
setNotificationIDSTokenURI:
_sendCurrentLocationMessageUsingLocationManager:
locatingMessageWithGuid:error:
messageWithLocation:flags:error:guid:
startUpdatingCurrentLocationWithHandler:
latestTypingIndicatorTimeInterval
_setLocalUserIsComposing:suppliedGUID:typingIndicatorData:
setLatestTypingIndicatorTimeInterval:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:
setCustomTypingIndicatorIcon:
_shouldSendCancelTypingIndicator
setLocalUserIsComposing:
canSendTransfer:
locationAuthorizationDenied
_updateFlags:
_updateUnreadCountForChat:
__clearReadMessageCache
markMessagesAsRead:
_chat:sendReadReceiptForMessages:
_setTimerForReadMessageCache
_copyWithFlags:
_chat_sendReadReceiptForAllMessages:
_clearUnreadCount
__imIsMutable
_chat:setValue:forChatProperty:
allPropertiesOfParticipant:
_chat:setProperties:ofParticipant:
setRecipient:locally:
_addParticipants:withState:
_unwatchHandleStatusChangedForHandle:
_leaveChat:
_chat_leave:leavingiMessageChat:
_chat_remove:
_setParticipantState:forHandles:quietly:
canAddParticipant:
participantsWithState:
_pendingParticipants
_chat:inviteParticipants:reason:toiMessageChat:
invitationForPendingParticipants
defaultInvitationMessageFromSender:flags:
_inviteParticipants:reason:toiMessageChat:
setInvitationForPendingParticipants:
_inviteParticipantsToChat:reason:toiMessageChat:
removeObjectsInRange:
_removeParticipantsFromChat:reason:fromiMessageChat:
_chat:removeParticipants:reason:fromiMessageChat:
hasSurfRequestNotFromMe:
leave
_sanityCheckAccounts
_updateEngramID:
context
initWithDelegate:context:
chat:progressDidChange:sendingMessages:sendCount:totalCount:finished:
_initializeFMF
setChatItemRulesClass:
chatItemRulesClass
sendProgress:progressDidChange:sendingMessages:sendCount:totalCount:finished:
_setupObservation
_shouldRegisterChat
_setDBUnreadCount:
_setDBFailedCount:
_shouldAnnouncePeopleJoin
_insertHistoricalMessages:queryID:isRefresh:isHistoryQuery:
firstMessage
lastIncomingFinishedMessage
lastIncomingFinishedMessageWithTextContent
lastRelatedIncomingFinishedMessageTextContentWithLimit:
messageCount
deleteAllHistory
markAsSpam
didUnregisterFromRegistry:
_recomputeOverallChatStatusQuietly:
_handleHandleStatusChanged:
_timingCollection
_startTiming:
_endTiming
_postIMChatItemsDidChangeNotificationWithInserted:removed:reload:regenerate:oldChatItems:shouldLog:
_handleMessageGUIDDeletions:
_participant:statusChanged:
_showErrorMessage:
endListeningToAttributionChanges
beginListeningToAttributionChanges
_engroupParticipantsUpdated
overallChatStatus
setRoomName:
roomNameWithoutSuffix
hasUnhandledInvitation
acceptInvitation
declineInvitation
cancelMessage:
sendCurrentLocationMessage
localUserIsTyping
localUserIsRecording
localTypingMessageGUID
setLocalUserIsComposing:typingIndicatorData:
localUserIsComposing
setLocalUserIsRecording:
canSendMessage:
canSendCurrentLocationMessage
authorizedToSendCurrentLocationMessage
updateMessage:flags:
markMessageAsRead:
markAllMessagesAsRead
_setChatProperties:
allChatProperties
userToggledReadReceiptSwitch:
valueForProperty:ofParticipant:
setValue:forProperty:ofParticipant:
_hasCommunicatedOnService:
leaveiMessageGroup
remove
canLeaveChat
canAddParticipants:
_invitePendingParticipants
inviteParticipants:reason:
inviteParticipantsToiMessageChat:reason:
removeParticipants:reason:
removeParticipantsFromiMessageChat:reason:
addPendingParticipants:
hasStoredMessageWithGUID:
_initWithDictionaryRepresentation:items:participantsHint:accountHint:
setSendProgressDelegate:
sendProgressDelegate
frequentReplies
setFrequentReplies:
setGroupID:
_guids
_setGUIDs:
contextInfo
setContextInfo:
personCentricID
setPersonCentricID:
engramID
hasSurfRequest
setHasSurfRequest:
lastMessageTimeStampOnLoad
_typingGUID
_localUserIsComposing
_currentLocationGUID
_identifier
_roomName
_roomNameWithoutSuffix
_lastAddressedHandleID
_groupID
_engramID
_participants
_participantStates
_invitationForPendingParticipants
_messagesPendingJoin
_chatProperties
_participantProperties
_frequentReplies
_countOfMessagesMarkedAsSpam
_chatItemRules
_chatItemsUpdater
_sendProgress
_downgradeState
_downgradeStateUpdater
_joinState
_style
_dbFailedCount
_dbUnreadCount
_context
_hasBeenConfigured
_isFirstMessageInvitation
_wasInvitationHandled
_didSendAFinishedMessage
_hasPendingMarkRead
_isUpdatingChatItems
_ignoreDowngradeStatusUpdates
_isFiltered
_forceMMS
_hasRefreshedServiceForSending
_hasHadSuccessfulQuery
_lastMessageTimeStampOnLoad
_currentUnreadHistoryQuery
_hasEarlierMessagesToLoad
_hasMoreRecentMessagesToLoad
_hasSurfRequest
_personCentricID
_bizIntent
_latestTypingIndicatorTimeInterval
_privateInitWithAccount:style:roomName:messages:participants:isFiltered:hasHadSuccessfulQuery:
loadMessagesUpToGUID:date:limit:loadImmediately:
_chat_loadHistory:limit:beforeGUID:afterGUID:queryID:
_chat_loadPagedHistory:numberOfMessagesBefore:numberOfMessagesAfter:messageGUID:queryID:
_chat_loadFrequentReplies:limit:queryID:
_chat_loadUnreadMessages:limit:fallbackGUID:queryId:
_chat_loadAttachments:queryID:
_setAttachments:
deleteChatItems:
setNumberOfMessagesToKeepLoaded:
hasMoreMessagesToLoad
hasMoreRecentMessagesToLoad
loadMessagesUpToGUID:limit:
loadMessagesBeforeDate:limit:
loadMessagesBeforeAndAfterGUID:numberOfMessagesToLoadBeforeGUID:numberOfMessagesToLoadAfterGUID:loadImmediately:
loadFrequentRepliesLimit:loadImmediately:
loadUnreadMessagesWithLimit:fallbackToMessagesUpToGUID:
loadAttachments:
deleteTransfers:
_initWithChat:
_chatItems
_didProcessChatItems:
beginHoldingUpdatesForKey:
endHoldingUpdatesForKey:
isHoldingUpdatesForKey:
isHoldingUpdates
endHoldingUpdatesForAllKeys
updateIfNeeded
setNeedsUpdate:
differencesFromArray:removedIndexes:insertedIndexes:
enumerateObjectsAtIndexes:options:usingBlock:
removeIndexes:
firstIndex
_shouldReloadChatItem:oldChatItem:
indexGreaterThanIndex:
earlierDate:
_nextStaleChatItem
_setNextStaleChatItem:
_replaceStaleChatItems
pushObject:forKey:
peekObjectForKey:
_getDeleteChatItemMap:
_getMessageChatItemMap:withDeleteMap:andAllChatItems:
objectsForKey:
_itemWithChatItemsDeleted:fromItem:
_chat:sendSavedReceiptForMessage:
setExpireState:
_chat:sendPlayedReceiptForMessage:
setTimePlayed:
_chat:setPlayedExpressiveSendForMessage:
setTimeExpressiveSendPlayed:
updateChatItemsIfNeeded
markChatItemAsSaved:
markChatItemAsPlayed:
markChatItemAsPlayedExpressiveSend:
chatItemsForItems:
handleIsSharingLocationWithMe:
handleIsFollowingMyLocation:
setExpired:
setActionable:
fmfHandlesForChat:
allSiblingFMFHandlesForChat:
chatHasParticipantsFollowingMyLocation:
allChatParticipantsFollowingMyLocation:
chatHasParticipantsSharingLocationWithMe:
chatHasSiblingParticipantsSharingLocationWithMe:
allChatParticipantsSharingLocationWithMe:
startSharingWithChat:untilDate:
stopSharingWithChat:
startTrackingLocationForChat:
stopTrackingLocationForChat:
fmfHandles
markAllLocationShareItemsAsUnactionable
allSiblingFMFHandles
hasRecipientsFollowingLocation
allRecipientsFollowingLocation
hasRecipientsSharingLocation
hasSiblingRecipientsSharingLocation
allRecipientsSharingLocation
shareLocationUntilDate:
stopSharingLocation
startTrackingParticipantLocations
stopTrackingParticipantLocations
contextClass
_setMessageID:
_setInvitation:
_message
_invitation
messageFromIMMessageItem:sender:subject:
copyWithFlags:
_setInivtation:
testChatItems
canEditChatItem:
__enumerateItemsWithOptions:usingBlock:
__itemForChatItemAtIndex:
__imItems
messageForChatItemAtIndex:
enumerateMessagesWithOptions:usingBlock:
messages
__imLastMessageItem
messageClass
initWithSender:time:text:fileTransferGUIDs:flags:error:guid:subject:
instantMessageWithText:messageSubject:flags:
instantMessageWithText:messageSubject:flags:expressiveSendStyleID:
_initWithSender:time:timeRead:timeDelivered:timePlayed:plainText:text:messageSubject:fileTransferGUIDs:flags:error:guid:messageID:subject:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:
_updateTime:
timeRead
_updateTimeRead:
timeDelivered
_updateTimeDelivered:
_updateTimePlayed:
_updateMessageID:
_associatedMessageGUID:
_associatedMessageType:
_associatedMessageRange:
_messageSummaryInfo:
setBalloonBundleID:
setExpressiveSendStyleID:
locale
isSOS
setIsSOS:
setAssociatedBalloonBundleID:
__stringByStrippingAttachmentAndControlCharacters
commonPrefixWithString:options:
characterIsMember:
initWithString:attributes:
isEmote
senderName
replaceCharactersInRange:withString:
replaceNewlinesWithSpaces
hasInlineAttachments
isInvitationMessage
setMessageSummaryInfo:
removeAttribute:range:
isSent
instantMessageWithText:flags:
instantMessageWithText:messageSubject:fileTransferGUIDs:flags:
instantMessageWithText:messageSubject:fileTransferGUIDs:flags:balloonBundleID:payloadData:expressiveSendStyleID:
fromMeIMHandle:withText:fileTransferGUIDs:flags:
messageFromIMMessageItemDictionary:body:sender:subject:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:
initWithSender:fileTransfer:
summaryString
inlineAttachmentAttributesArray
isDelayed
isAutoReply
setIsAddressedToMe:
isAddressedToMe
isAlert
compare:comparisonType:
_updateText:
_updateError:
setIsInvitationMessage:
associatedBalloonBundleID
customTypingIndicatorIcon
_plainBody
_timeDelivered
_timeRead
_timePlayed
_messageSubject
_fileTransferGUIDs
_balloonBundleID
_payloadData
_expressiveSendStyleID
_timeExpressiveSendPlayed
_flags
_isInvitationMessage
_messageID
_locale
_isSOS
_associatedMessageType
_messageSummaryInfo
_associatedBalloonBundleID
_customTypingIndicatorIcon
_notificationIDSTokenURI
_sortID
_associatedMessageRange
_vCardDataWithCLLocation:
isAssociatedMessage
editedMessageWithOriginalMessage:originalPrefixedGUID:newBody:
breadcrumbMessageWithText:associatedMessageGUID:balloonBundleID:fileTransferGUIDs:payloadData:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:associatedMessageGUID:associatedMessageType:associatedMessageRange:associatedMessageInfo:
attributesAtIndex:effectiveRange:
invertedSet
rangeOfCharacterFromSet:
rangeOfString:options:range:
bestHandlesForPersons:useExtendedAsyncLookup:completion:
handlesForPersons:useBestHandle:useExtendedAsyncLookup:completion:
validHandlesForPersons:useExtendedAsyncLookup:completion:
intersectsSet:
keysOfEntriesPassingTest:
bestHandlesForPersons:completion:
validHandlesForPersons:completion:
scanMessage:completionBlock:
classForMessageItemDictionary:
isBatchProcessing
batchProcessingRegistry
handleIMChatParticipantsDidChange:
_daemonReallyDied:
updateBlocks
initWithBool:
_registerChatDictionary:forChat:isIncoming:newGUID:shouldPostNotification:
_registerChatDictionary:forChat:isIncoming:newGUID:
_allGUIDsForChat:
_unregisterChatWithGUID:
allKeysForObject:
existingChatForIMHandle:
_createdChatForIMHandle:
_registerChat:isIncoming:guid:
chatForIMHandles:displayName:joinedChatsOnly:
existingChatForIMHandles:allowRetargeting:groupID:displayName:joinedChatsOnly:
_createdChatForIMHandles:style:groupID:displayName:joinedChatsOnly:
existingChatForIMHandles:
existingChatForRoom:onAccount:
_createdChatForRoom:onAccount:
resourceSpecifier
initWithActivityType:
setNeedsSave:
becomeCurrent
setUserActivityForChat:message:orHandles:title:
messagesURLWithChat:orHandles:withMessageText:
initWithHandle:displayName:contactIdentifier:
initWithRecipients:content:groupName:serviceName:sender:
initWithCode:userActivity:
initWithIntent:response:
setIntentHandlingStatus:
setInteraction:
setEligibleForHandoff:
setEligibleForSearch:
setEligibleForPublicIndexing:
_allCreatedChats
_createdChatWithIdentifier:style:account:
_hasSameMembers:
simulatedChats
_existingChatWithIdentifier:style:service:
existingChatForIMHandle:allowRetargeting:
existingChatForRoom:onAccount:allowRetargeting:
existingChatForIMHandles:allowRetargeting:groupID:displayName:ignoresDisplayName:joinedChatsOnly:
_existingChatWithIdentifier:style:account:
__blockUntilQueriesComplete
setMessageClass:
_chatInstanceForGUID:
unregisterChat:
unregisterChatWithGUID:
_unregisterChat:
chatForIMHandle:
chatForIMHandles:chatName:
chatForRoom:onAccount:
chatForURL:outMessageText:outRecipientIDs:outService:outMessageGUID:
setActiveChatURL:
setUserActivityForChat:orHandles:title:
unreadCount
lastFailedMessageDate
numberOfExistingChats
_lookupExistingChatWithIMHandle:
existingChatForPersonID:
exisitingChatForGroupID:
existingChatForEngramID:
existingChatForIMHandles:allowRetargeting:groupID:
existingChatForAddresses:allowRetargeting:bestHandles:
existingChatForIMHandles:allowRetargeting:
_chatForChatDictionary:items:allowCreate:createdChat:outGUID:
loadChatFromDaemonWithChatIdentifier:
_chatsWithMessage:
_chatGUIDToChatMap
_chat:handleCompletionOfQuery:withUserInfo:success:error:
_startMarkAsReadTimerIfNecessary
_clearMarkAsReadTimerIfNecessary
_defaultNumberOfMessagesToLoad
_setDefaultNumberOfMessagesToLoad:
_isLoading
_postMessageSentNotifications
_setPostMessageSentNotifications:
personaKitRetriveAPITimedOut
setPersonaKitRetriveAPITimedOut:
setBatchProcessingRegistry:
batchProcessingQueue
setBatchProcessingQueue:
setUpdateBlocks:
preExistingAllChats
setPreExistingAllChats:
_allChats
_chatGUIDToCurrentThreadMap
_chatGUIDToInfoMap
_threadNameToChatMap
_chatGUIDToiMessageSentOrReceivedMap
_allChatsInThreadNameMap
_pendingQueries
_waitingForQueries
_historyModificationStamp
_markAsReadTimer
_queryCompletionBlocks
_timerStartTimeInterval
_loading
_daemonHadTerminated
_wantsHistoryReload
_isInternalInstall
_daemonUnreadCount
_daemonLastFailedMessageDate
_userActivity
_chatsBeingLoadedMap
_chatPersonIDToChatMap
_personaKitRetriveAPITimedOut
_simulatedChats
_batchProcessingRegistry
_batchProcessingQueue
_updateBlocks
_preExistingAllChats
stringByAddingPercentEscapesUsingEncoding:
registerPerson:
unregisterPerson:
personForUniqueID:
_dumpAllPersons
_personMap
set_personMap:
__im_associatedMessageContentType
__im_associatedMessagePluginBundleID
__im_associatedMessagePluginDisplayName
longContentTypeStringForPluginBundleID:pluginDisplayName:
bestAccountForAddress:
handleForAddress:
shouldQuoteContentString:
isLoginAddress:
messageAcknowledgmentString:lowercase:
longContentTypeStringForContentType:
generateFormatStringForMessageAcknowledgmentType:acknowledgmentSenderAddress:messageSummaryInfo:format:
displayNameForAddress:
generateBackwardCompatibilityFormatStringForMessageAcknowledgmentType:messageSummaryInfo:format:
generatePreviewStringForMessageAcknowledgmentType:acknowledgmentSenderAddress:messageSummaryInfo:isGroupMessage:
generateBackwardCompatibilityStringForMessageAcknowledgmentType:messageSummaryInfo:isGroupMessage:
testState
updateSyncState:
setSyncStats:
updateMockStateForProgressPolling
_counter
runTestsIfNeededWithRepeat:
initWithPluginBundle:extension:pluginKitProxyClass:proxy:
containingBundle
teamID
setRequestInterruptionBlock:
objectForInfoDictionaryKey:ofClass:inScope:
setShouldHideAppSwitcher:
beginExtensionRequestWithInputItems:completion:
_extensionContextForUUID:
_auxiliaryConnection
remoteObjectProxyWithErrorHandler:
objectForInfoDictionaryKey:ofClass:
isBetaApp
userElection
setUserElection:
_plugIn
setExtension:
_loadBundle
_loadAppBundle
principalClass
_unremovableDisabledApps
_setUnremovableDisabledApps:
appWithPluginBundle:extension:
setIsLaunchProhibited:
setAppBundle:
setPluginBundle:
setItemID:
_isBetaPlugin
_isLaunchProhibited
_isStickerPackOnly
_showInBrowser
_shouldHideAppSwitcher
_appBundle
_pluginBundle
_itemID
_browserDisplayName
_version
setAttributionInfo:
appendFilePathsWithGUIDs:withText:
sendMessage:destinationID:filePaths:groupID:bundleID:attributionInfoName:service:timeOut:error:
copyFilePathsToTmpLocation:
createIMMessageToSendWithMessage:filePaths:bundleID:attributionInfoName:
sendIMMessage:chat:timeOut:resultDict:error:
pendingSendGUIDs
__im_filePathWithVariant:
sendMessage:destinationID:filePaths:groupID:service:timeOut:error:
setPendingSendGUIDs:
sentMessageInfo
setSentMessageInfo:
_pendingSendGUIDs
_sentMessageInfo
deleteTmpFilePath:
copyItemAtPath:toPath:error:
initWithCharacters:length:
_watchLocaleChanges
_abAddressBookRef
_threadedABAddressBookLock
abAddressBook
setAddressBookEnabled:
spokenPhrase
pronunciationHint
vocabularyIdentifier
alternativeSpeakableMatches
bundleForClass:
IMCoreSetupTimingCollectionEnd
initWithDomain:code:userInfo:
sendMessagesfromReplayDatabase:userInfo:error:
beginRecordingMessagesToReplayDatabase:error:
stopRecordingDatabaseError:
_runChangeParticipantsQueryWithGroupID:participants:timeOut:error:optArguments:addParticipants:
createGroupChatWithDestinationIDs:error:optArguments:
addParticipantsWithGroupID:participants:timeOut:error:optArguments:
removeParticipantsWithGroupID:participants:timeOut:error:optArguments:
changeGroupNameWithGroupID:newName:timeOut:error:optArguments:
groupParticipantsWithGroupID:timeOut:error:optArguments:
groupNameWithGroupID:timeOut:error:optArguments:
_bestGuessURIFromCanicalizedID
_bestGuessURI
addDelegate:forService:listenerID:queue:
_hasCacheForService:
_currentCachedIDStatusForDestination:service:listenerID:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
__statusForID:onService:isCanonicalized:
_idStatusForID:onService:
_processIDStatusResponseForURI:resultStatus:forService:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
_requestStatusForID:onService:onAccount:
_statusForCanonicalizedID:onService:
_idStatusForID:onAccount:
requestStatusForID:onService:
requestStatusForID:onAccount:
statusForID:onService:
_servicesLock
set_servicesLock:
_servicesRegistered
set_servicesRegistered:
shouldGenerateTopLevelChatItem
_newChatItemsWithFilteredChat:isBusiness:hasKnownParticipants:
_newChatItems
chatItemForIMChatItem:
_hasMessageChatItem
_serviceHandle
shouldShowExpressiveMessageTextAsText:
_localizedBackwardsCompatibleExpressiveSendText
_shouldShowEffectPlayButtonForMessage:
originalMessageGUID
_processChatItemsForBreadcrumbs:
countForKey:
shouldShowRaiseMessageStatus
_shouldReloadChatItemWithAssociatedChatItems:oldAssociatedChatItems:
_processChatItemsForReplayButton:
_processChatItemsForAttribution:
removeObjectsAtIndexes:
_shouldDisplayAttributionInfo:
_effectControlForChatItem:
insertObjects:atIndexes:
_attributionChatItemForChatItem:
_setItems:
_chatItemsForItem:previousItem:
_shouldRegenerateChatItemsForItem:previousItem:oldPreviousItem:
isExtensibleMessageWithPluginPayload:
setChangeType:
setStatus:
setDirection:
testShouldShowReportSpamForChat:chatItems:
testShouldShowSMSSpamForChat:chatItems:
cache
pendingRequests
setLock:
setCache:
setPendingRequests:
_pendingRequests
isMessageAcknowledgment
differencesFromArray:usingComparator:removedIndexes:insertedIndexes:
isTypingOrCancelTypingMessage
isIncomingTypingOrCancelTypingMessage
isIncomingTypingMessage
isCancelTypingMessage
sendSyncChangedEvent
syncStats
setSyncing:
setTestState:
eligibleForTruthZone
setEligibleForTruthZone:
isStartingSync
isChangingEnabledState
setLastSyncDate:
isInExitState
setIsInExitState:
setControllerSyncState:
syncType
setControllerSyncType:
rampedIntoTruthZone
setRampedIntoTruthZone:
setIsChangingEnabledState:
setIsStartingSync:
setIsDisablingDevices:
setSyncControllerSyncState:
setSyncType:
_testState
_rampedIntoTruthZone
_isStartingSync
_syncType
_syncStats
loadMessageWithGUID:completionBlock:
_runningQueries
set_runningQueries:
setUp
setCloudKitHooks:
overrideSingletonWithObject:
removeSingletonOverride
_sendSyncStateChangedEventToEventHandlersWithDictionary:
tearDown
_previousInterval
_cloudKitHooks
mainQueue
addObserverForName:object:queue:usingBlock:
initForReadingFromData:error:
finishDecoding
addAttribute:value:range:
enumerateAttributesInRange:options:usingBlock:
scanMessage:waitUntilDone:completionBlock:
_scanMessageUsingScanner:attributedString:
sharedScanner
scannerQueue
_scannerQueue
initWithPath:guid:createdDate:isSticker:
fileTransfer
createdDate
_path
_isSticker
_createdDate
_shouldHideProgressInFirstSevenDays
_IMChatGetIdentifiersAndServicesTestHook:identifiers:services:personCentricEnabled:
_eventForMessage:
trackEvent:
setTypingIndicatorIcon:
_trackUsageForMessage:
removeCharactersWithAttribute:
_chat_markAsSpam:queryID:autoReport:
initWithFirst:second:
__CLLocationManagerClass
setDesiredAccuracy:
setLocation:
_fireCompletionHandlers
locationManager
stopUpdatingLocation
horizontalAccuracy
timestamp
location
locateStartTime
_shouldSendLocation:timeIntervalSinceStart:
_locationManagerTimedOut
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_locationUpdateTimerFired:
setHandlers:
setLocationManager:
setLocateStartTime:
locationUpdateTimer
setLocationUpdateTimer:
_locationManager
_timeoutHandler
_location
_locateStartTime
_locationUpdateTimer
__FMFSessionClass
initWithDelegate:
setDelegateQueue:
_updateActiveDevice
FMFRestricted
fmfHandle
fmfSiblingHandles
establishingAccountID
session
addHandles:
removeHandles:
_startSharingWithFMFHandles:inChat:untilDate:
_stopSharingWithFMFHandles:inChat:
locationForFMFHandle:
cachedLocationForHandle:
getHandlesSharingLocationsWithMe
handleWithId:
locationForHandle:
_callerIDForChat:
_postNotification:object:userInfo:
refreshLocationForHandles:callerId:priority:completion:
fmfHandleIsSharingLocationWithMe:
fmfHandleIsFollowingMyLocation:
getHandlesFollowingMyLocation
fmfGroupIdGroup
canShareLocationWithHandle:groupId:callerId:
fmfGroupIdOneToOne
getOfferExpirationForHandle:groupId:callerId:
setActiveDevice:
getActiveLocationSharingDevice:
setActiveDevice:completion:
fromHandle
_postRelationshipStatusDidChangeNotificationWithHandle:
setEstablishingAccountID:
sendFriendshipOfferToHandles:groupId:callerId:endDate:completion:
stopSharingMyLocationWithHandles:groupId:callerId:completion:
didReceiveLocation:
didFailToFetchLocationForHandle:withError:
connectionError:
didReceiveFriendshipRequest:
didStartSharingMyLocationWithHandle:
didStopSharingMyLocationWithHandle:
didStartAbilityToGetLocationForHandle:
didStopAbilityToGetLocationForHandle:
didUpdateHidingStatus:
sendMappingPacket:toHandle:
mappingPacketProcessingCompleted:
didFailToHandleMappingPacket:error:
didChangeActiveLocationSharingDevice:
didUpdateActiveDeviceList:
didUpdatePendingOffersForHandles:
didReceiveServerError:
didUpdateFavoriteHandles:
startTrackingLocationForHandle:
stopTrackingLocationForHandle:
startSharingWithHandle:inChat:untilDate:
stopSharingWithHandle:inChat:
locationForHandleOrSibling:
refreshLocationForHandle:inChat:
refreshLocationForChat:
timedOfferExpirationForChat:
makeThisDeviceActiveDevice
friendshipRequestReceived:
friendshipWasRemoved:
setSession:
activeDevice
_establishingAccountID
_session
_activeDevice
setWithSet:
clearExistingPreferencesCache
dataWithContentsOfFile:
unarchiveObjectWithData:
abUniqueID
_persistCache
_abCache
archivedDataWithRootObject:
_persistCache:
cacheSequenceNumber
setCacheSequenceNumber:
coalescingPeriod
setCoalescingPeriod:
_cacheDiskQueue
_coalescingPeriod
_forceCachePersist
filePath
setParentPath:
clearInMemoryCache
stringByExpandingTildeInPath
copyForBatchProcessing
__handleChatReconstructions:
mergeWithCopyRegistry:
_startBackgroundProcessingChats:completion:
_account:chat:style:chatProperties:messagesUpdated:
_updateInfo:forGUID:updatingUnreadCount:
_processMessageForAccount:chat:style:chatProperties:chatPersonCentricID:message:
_checkLimitAndSetMessagesToKeepLoadedIfNeeded:chat:
__handleMergedChatReconstructions:
_resetChatRegistry
_chatLoadedWithChatIdentifier:chats:
frequentRepliesQuery:finishedWithResult:limit:
chatPersonIDToChatMap
_timeDataSourceClass
_hasSendingMessages
setSendingItems:
_scheduleSendProgressTimerIfNeeded
_updateSendProgress
timeDataSource
startSendProgressImmediately
_resetSendProgress
_sendProgressTimerFired:
timerWithTimeInterval:target:selector:userInfo:repeats:
setTolerance:
addTimer:forMode:
sendingItems
setStartSendProgressImmediately:
setTimeDataSource:
_sendProgressTimer
_sendingItems
_cachedSendProgress
_wasShowing
_startSendProgressImmediately
_timeDataSource
enumerateRangesUsingBlock:
countOfIndexesInRange:
subarrayWithRange:
getObjects:range:
replaceObjectsInRange:withObjectsFromArray:
setTestStartDelay:
addTest:
runTestSuiteWithRepeat:
runTest:
_simulatedAccountsPerService
address
numberWithLong:
stringValue
setPerson:
setAddress:
abIdentifier
setAbIdentifier:
_address
_abIdentifier
fileUrl
fileTransferState
initWithFileUrl:transferState:
setFileUrl:
setFileTransferState:
_fileUrl
_fileTransferState
setDate:
setDateRead:
setLastReadDate:
setRecipients:
setSubject:
setAttributedText:
setGuid:
setChatGuids:
setChatIdentifier:
setReferencedMessage:
setBundleId:
setDisplayAppName:
isOutgoing
recipients
chatGuids
setMessageID:
attributedText
setIsRead:
setIsOutgoing:
setIsAudioMessage:
setIsGroupChat:
effect
setEffect:
setService:
dateRead
lastReadDate
referencedMessage
bundleId
messageType
setMessageType:
displayAppName
_chatGuids
_attributedText
_effect
_recipients
_date
_dateRead
_lastReadDate
_isOutgoing
_isRead
_isAudioMessage
_isGroupChat
_chatIdentifier
_referencedMessage
_bundleId
_messageType
_displayAppName
newlineCharacterSet
__im_dateWithNanosecondTimeIntervalSinceReferenceDate:
numberOfRanges
rangeAtIndex:
setupIMCloudKitHooks
clearLocalSyncState
shouldShowCloudKitUI
removedFromiCloudBackup
shouldOptimizeAttachmentStorage
setShouldOptimizeAttachmentStorage:
clearTombStoneMessagesTable
IMChat_ServiceForSending
IMAdditions
IMCoreIDSLookupAdditions
IMService
Deprecated
IMBalloonPluginDataSource
FetchUtilities
IMServiceImpl
IMService_GetService
IMPluginPayload
NSSecureCoding
NSCoding
NSCopying
ConversationListSupport
ConversationListSupportTestSupport
IMBalloonPluginAttributionController
IMSuggestionsService
IMAccount
IMSystemMonitorListener
IMDaemonListenerProtocol
NSObject
IMDaemonListener
IMCloudKitSyncStatistics
TEST_ONLY
MessageAcknowledgmentTesting
MessageAcknowledgments
IMCloudKitEventNotificationManager
IMItemsController
IMItems
IMRemoteDaemonProtocol
IMDaemonController
IMCoreAutomationHook
IMAccountController
SpecialSendQueries
AccountCreation
PreferredService
IMAppExtensionContext
IMHostAppExtensionContextProtocol
IMAppExtensionContextProtocol
IMRemoteAppExtensionContextProtocol
IMHostAppExtensionContext
IMRemoteAppExtensionContext
IMHandleUtilities
Description
IMCoreDescription
IMCloudKitSyncState
IMParentalControlsService
IMParentalControls
IMFileTransferCenter
IMChatVocabularyUpdater
Business
IMMessageChatItem
IMTranscriptChatItem
IMLoadMoreChatItem
IMLoadMoreRecentChatItem
IMReportSpamChatItem
IMSMSSpamChatItem
IMServiceChatItem
IMDateChatItem
IMSenderChatItem
0 1D
1 0A
IMMessagePartChatItem
IMVisibleAssociatedMessageHost
IMTextMessagePartChatItem
IMTranscriptPluginChatItem
IMPluginChatItemProtocol
IMTranscriptPluginBreadcrumbChatItem
IMAttachmentMessagePartChatItem
IMAnimatedEmojiMessagePartChatItem
IMErrorMessagePartChatItem
IMExpirableMessageChatItem
IMAudioMessageChatItem
IMAggregateMessagePartChatItem
IMTypingChatItem
IMTypingPluginChatItem
IMLocatingChatItem
IMEmoteMessageChatItem
IMMessageStatusChatItem
IMMessageEffectControlChatItem
IMMessageAttributionChatItem
IMTranscriptPluginStatusChatItem
IMGroupActionChatItem
IMGroupTitleChangeChatItem
IMParticipantChangeChatItem
IMLocationShareOfferChatItem
IMLocationShareActionChatItem
IMMessageActionChatItem
IMTranscriptChatItems
IMAssociatedMessageChatItem
IMMessageEditChatItem
IMMessageAcknowledgmentChatItem
IMAssociatedStickerChatItem
IMAggregateAcknowledgmentChatItem
IMExpressiveSendAsTextChatItem
IMServiceAgentImpl
IMServiceAgent
IMReusableBalloonPluginController
IMBalloonPluginController
IMBalloonPlugin
IMBalloonBrowserPlugin
IMBalloonAppExtension
IMBalloonPluginManager
IMHandle
QueueNotifications
PublicAPIMethods
iMessageLogging
IMHandleRegistrar
IMChatRegistry_StorageManagement
IMCloudKitMockSyncState
IMAutomationPersonCentricChats
IMPeople
IMTranscriptEffectHelper
Testing
IMCloudKitSyncProgress
IMCloudKitSyncProgressIsSyncing
IMCloudKitPausedSyncProgress
IMCloudKitAccountNeedsRepairSyncProgress
IMCloudKitDeviceStorageIsFullSyncProgress
IMCloudKitCloudKitStorageIsFullSyncProgress
IMCloudKitHiddenSyncProgress
IMMe
IMSimulatedDaemonController
IMAutomation
IMSimulatedChat
IMSimulatedChatDelegate
IMSimulatedDaemonListener
IMPerson
0 3@
LookupAdditions
IMSimulatedAccount
IMCloudKitErrorProgressTest
IMChat
IMSendProgressDelegate
ChatNotifierSupportForLion
IMChat_HistoryAdditions
IMChatItems
IMChat_LocationShare_Private
IMChat_LocationShare
TestOverrides
IMItemChatContext
IMChat_Internal
IMMessageItemChatContext
IMChat_EditableMessageSupport
IMChatItem
IMMessage
Location
AssociatedMessages
Persons
IMChatRegistry
NSFastEnumeration
IMPersonRegistrar
IMMessageAcknowledgmentStringHelper
IMCloudKitSyncingProgressTest
IMCloudKitSyncingProgressTestDownloading
IMCloudKitSyncingProgressTestUploading
_IMBalloonExtensionApp
_IMBalloonBundleApp
IMBalloonApp
IMAutomationMessageSend
IMAddressBook
INSpeakable
IMCoreSetupTimingAdditions
IMAutomationBatchMessageOperations
IMAutomationGroupChat
IMIDStatusController
1OEi
IMTranscriptChatItemRules
IMChatItemRules
IMBusinessNameManager
IMCloudKitHookTestSingleton
IMChatHistoryController
IMCloudKitEventNotificationTest
IMCloudKitEventHandler
IMDDController
IMAttachment
ProgressLogic
IMChatRegistry_PersonCentricMergeTestHooks
IMChatRegistry_Sending
IMLocationManager
CLLocationManagerDelegate
IMFMFSession
FMFSessionDelegate
IMPersonABRecordIDCache
IMChatRegistry_DaemonIncoming
IMSendProgress
IMSendProgressRealTimeDataSource
IMSendProgressTimeDataSource
IMCloudKitEventNotificationRuntimeTestSuite
IMSimulatedAccountController
IMSPIHandle
IMSPIAttachment
IMSPIMessage
IMCloudKitHooks
v16@0:8
v28@0:8@16B24
B24@0:8@16
v24@0:8@16
B32@0:8@16@24
@24@0:8@16
v32@0:8@16@24
B16@0:8
v28@0:8c16d20
@20@0:8B16
v20@0:8B16
@16@0:8
v56@0:8@16@24@32@40@?48
@48@0:8@16@24@32@40
@24@0:8Q16
Q16@0:8
Q24@0:8@16
@28@0:8@16i24
@24@0:8^{_NSZone=}16
@32@0:8@16@24
@48@0:8@16@24^@32^@40
@40@0:8@16@24@32
v40@0:8@16q24@32
Q40@0:8@16q24@32
v24@0:8Q16
v40@0:8{CGSize=dd}16@?32
v24@0:8@?16
@24@0:8^@16
{CGSize=dd}32@0:8{CGSize=dd}16
q16@0:8
@"IMChat"
@"IMPluginPayload"
@"NSURL"
@"DDScannerResult"
@"NSArray"
@"NSMutableSet"
@"NSString"
#16@0:8
v24@0:8#16
B32@0:8@16^q24
v40@0:8@16Q24Q32
q24@0:8@16
@40@0:8@16@24^i32
@32@0:8@16^i24
@32@0:8@16Q24
I16@0:8
@"NSMutableDictionary"
@"NSDictionary"
@"IMAccount"
@"NSData"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSAttributedString"
@"NSDate"
@"IMBalloonPluginDataSource"
@?16@0:8
v32@0:8q16q24
d16@0:8
@32@0:8@16^B24
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
@"NSObject<SGSuggestionsServiceContactsProtocol>"
@"NSCache"
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
^{__CFRunLoopObserver=}
v48@0:8@16@24@32@40
v40@0:8I16@20i28@32
v32@0:8Q16@24
B24@0:8Q16
v20@0:8I16
v28@0:8B16@20
B40@0:8@16@24q32
v44@0:8@16B24@28q36
v32@0:8i16i20@24
v36@0:8Q16@24i32
@28@0:8@16B24
@44@0:8@16B24@28@36
Q32@0:8@16@24
{_FZChatRoomValidity=iS}24@0:8@16
B32@0:8@16q24
@24@0:8q16
q32@0:8@16q24
v32@0:8q16@24
i24@0:8@16
v28@0:8i16@20
@"IMServiceImpl"
@"IMPeople"
@"NSRecursiveLock"
@"NSMapTable"
@"IMHandle"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v84@0:8@16@24@32@40I48B52@56Q64I72@76
v48@0:8@16I24@28i36@40
v32@0:8@16Q24
v28@0:8@16I24
v52@0:8@16@24C32@36@44
v60@0:8@16@24C32@36@44@52
v64@0:8@16@24C32@36@44i52@56
v56@0:8@16@24C32@36@44i52
v56@0:8@16@24@32@40Q48
v64@0:8@16@24@32Q40Q48@56
v48@0:8@16Q24Q32Q40
v56@0:8@16@24I32@36I44@48
v36@0:8@16@24B32
v48@0:8@16I24@28@36B44
v24@0:8q16
v56@0:8@16@24@32@40@48
v56@0:8@16@24@32@40B48B52
v28@0:8I16@20
v24@0:8B16B20
v44@0:8B16Q20@28@36
v28@0:8B16@"NSDictionary"20
v32@0:8@"NSDictionary"16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v84@0:8@"NSString"16@"NSDictionary"24@"NSArray"32@"NSArray"40I48B52@"NSDictionary"56Q64I72@"NSString"76
v48@0:8@"NSString"16I24@"NSString"28i36@"NSDictionary"40
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v40@0:8@"NSString"16@"NSDictionary"24@"NSString"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSArray"24
v28@0:8@"NSString"16I24
v28@0:8@"NSString"16B24
v48@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v48@0:8@"NSString"16@"NSDictionary"24@"NSNumber"32@"NSDictionary"40
v32@0:8@"NSString"16@"NSString"24
v24@0:8@"NSArray"16
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSDictionary"44
v60@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"IMMessageItem"52
v60@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"IMItem"52
v60@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSArray"52
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMItem"44
v60@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44@"NSNumber"52
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSArray"44
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSError"44
v64@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44i52@"NSArray"56
v56@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSDictionary"44i52
v40@0:8@"NSString"16@"IMMessageItem"24@"NSArray"32
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40Q48
v64@0:8@"NSString"16@"NSString"24@"NSArray"32Q40Q48@"NSArray"56
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSNumber"40
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v32@0:8@"NSArray"16@"NSArray"24
v48@0:8@"NSString"16Q24Q32Q40
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSData"40
v56@0:8@"NSString"16@"NSString"24I32@"NSDictionary"36I44@"NSDictionary"48
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40
v36@0:8@"NSString"16@"NSString"24B32
v48@0:8@"NSString"16I24@"NSDictionary"28@"NSString"36B44
v40@0:8@"NSString"16@24@32
v32@0:8@"NSString"16@"NSError"24
v56@0:8@"NSString"16@"NSNumber"24@"NSString"32@"NSString"40@"NSString"48
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48B52
v24@0:8@"NSDictionary"16
v28@0:8I16@"NSString"20
v44@0:8B16Q20@"NSString"28@"NSError"36
v32@0:8q16@"NSError"24
v52@0:8@16@24Q32I40@44
v64@0:8@16@24@32@40@48@56
@"NSMutableArray"
@"NSProtocolChecker"
d32@0:8d16d24
@24@0:8d16
@32@0:8d16d24
@40@0:8@16q24q32
@64@0:8q16q24q32q40q48q56
@48@0:8Q16q24d32d40
v40@0:8q16@24@32
v28@0:8B16@?20
v24@0:8d16
@"<IMCloudKitEventHandlerAccountInfoProvider>"
@"IMWeakReferenceCollection"
@"IMEventNotificationManager"
@"NSTimer"
@"IMCloudKitSyncState"
@"IMCloudKitSyncProgress"
^{__CFArray=}
v40@0:8@16@24B32B36
B44@0:8@16@24@32B40
v76@0:8@16C24@28Q36@44@52@60@68
v76@0:8@16@24C32@36Q44Q52@60@68
v68@0:8@16C24@28@36@44@52@60
v56@0:8@16C24@28@36@44B52
v32@0:8@16q24
v52@0:8@16C24@28@36Q44
v44@0:8@16C24@28@36
v36@0:8@16C24@28
v60@0:8@16C24@28Q36@44@52
v68@0:8@16C24@28Q36@44@52@60
v52@0:8@16C24@28@36@44
v36@0:8B16@20@28
v60@0:8@16@24@32C40@44@52
v68@0:8@16@24@32C40@44@52@60
v44@0:8@16@24C32@36
v60@0:8@16@24@32@40C48@52
v52@0:8@16@24@32C40@44
v28@0:8@16i24
v72@0:8@16@24Q32@40@48@56@64
v68@0:8@16@24@32@40@48@56C64
v56@0:8@16I24I28@32@40@48
v32@0:8@16B24B28
v32@0:8@16@"NSString"24
v40@0:8@"NSString"16@"NSString"24B32B36
B44@0:8@"NSString"16@"NSString"24@"NSArray"32B40
v76@0:8@"NSArray"16C24@"NSArray"28Q36@"NSString"44@"NSString"52@"NSString"60@"NSString"68
v76@0:8@"NSString"16@"NSArray"24C32@"NSArray"36Q44Q52@"NSString"60@"NSString"68
v68@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44@"NSString"52@"NSString"60
v56@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44B52
v24@0:8@"IMMessageItem"16
v32@0:8@"NSString"16q24
v52@0:8@"NSArray"16C24@"NSArray"28@"NSArray"36Q44
v32@0:8@"IMItem"16@"NSString"24
v44@0:8@"NSArray"16C24@"NSArray"28@"IMMessageItem"36
v36@0:8@"NSArray"16C24@"NSArray"28
v60@0:8@"NSArray"16C24@"NSArray"28Q36@"NSString"44@"NSString"52
v68@0:8@"NSArray"16C24@"NSArray"28Q36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44
v32@0:8@"NSString"16@"NSDate"24
v32@0:8Q16@"NSString"24
v36@0:8B16@"NSString"20@"NSString"28
v48@0:8@16@"NSString"24@"NSString"32@"NSString"40
v60@0:8@"NSString"16@"NSArray"24@"NSString"32C40@"NSDictionary"44@"NSString"52
v68@0:8@"NSString"16@"NSArray"24@"NSString"32C40@"NSString"44@"NSDictionary"52@"NSString"60
v44@0:8@"NSString"16@"NSString"24C32@"NSString"36
v60@0:8@"NSDictionary"16@"IMMessageItem"24@"NSString"32@"NSString"40C48@"NSString"52
v52@0:8@"NSDictionary"16@"NSString"24@"NSString"32C40@"NSString"44
v52@0:8@"IMMessageItem"16@"NSString"24@"NSString"32C40@"NSString"44
v28@0:8@"NSString"16i24
v72@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64
v48@0:8@"NSData"16@"NSArray"24@"NSString"32@"NSString"40
v40@0:8@"NSData"16@"NSArray"24@"NSString"32
v60@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40C48@"NSString"52
v28@0:8B16@"NSString"20
v48@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40
v68@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56C64
v48@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSNumber"40@"NSString"48
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16I24I28@"NSDictionary"32@"NSString"40@"NSString"48
v28@0:8@"NSDictionary"16B24
v32@0:8@"NSString"16B24B28
B28@0:8B16@?20
v24@0:8B16I20
B20@0:8B16
B28@0:8B16I20B24
B28@0:8@16I24
I24@0:8@16
B28@0:8I16@20
v40@0:8Q16@24@32
@"IMRemoteObject<IMRemoteDaemonProtocol>"
@"IMLocalObject"
@"IMDaemonListener"
^{__CFRunLoopSource=}
@"NSLock"
@40@0:8@16^@24@32
@20@0:8i16
i16@0:8
B28@0:8@16i24
B32@0:8@16i24B28
B28@0:8@16B24
B32@0:8@16B24B28
@32@0:8q16@24
@44@0:8q16B24@?28@?36
@28@0:8B16@20
@32@0:8@16q24
@"NSSet"
v44@0:8@16@24@32B40
v32@0:8@16@?24
@"IMChatRegistry"
@"INVocabulary"
@"NSDate"16@0:8
@"IMHandle"16@0:8
C16@0:8
v20@0:8C16
@36@0:8@16B24B28B32
@"NSArray"16@0:8
@40@0:8@16{_NSRange=QQ}24
@64@0:8@16@24q32{_NSRange=QQ}40@56
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
@68@0:8@16@24q32{_NSRange=QQ}40@56B64
@72@0:8@16@24q32{_NSRange=QQ}40@56@64
@"IMBalloonPluginDataSource"16@0:8
@48@0:8@16@24{_NSRange=QQ}32
@48@0:8@16@24@32Q40
@48@0:8@16{_NSRange=QQ}24@40
@48@0:8@16q24@32Q40
@40@0:8@16q24Q32
@56@0:8@16q24@32Q40q48
@40@0:8@16@24q32
{IMAssociatedMessageGeometryDescriptor=QQfffff}16@0:8
{IMAssociatedMessageGeometryDescriptor="layoutIntent"Q"associatedLayoutIntent"Q"parentPreviewWidth"f"xScalar"f"yScalar"f"scale"f"rotation"f}
@"IMMessageAcknowledgmentChatItem"
@28@0:8@"IMBalloonPluginDataSource"16B24
v24@0:8@"IMBalloonPluginDataSource"16
@"NSBundle"
@"<PKPlugIn>"
@"IMBalloonApp"
@48@0:8@16@24@32#40
@40@0:8@16@24#32
@24@0:8@?16
@"NSExtension"
@"LSPlugInKitProxy"
@"NSUUID"
#24@0:8@16
@36@0:8@16@24B32
@28@0:8^B16B24
^{__CFPhoneNumber=}16@0:8
v48@0:8@16q24@32@40
@"IMPerson"
^{__CFPhoneNumber=}
@"NSNumber"
@"MKMapItem"
@32@0:8@16@?24
@"IMBusinessNameManager"
v32@0:8@16:24
@"IMCloudKitSyncStatistics"
v32@0:8@"IMSimulatedChat"16@"IMMessageItem"24
v56@0:8@"IMSimulatedDaemonController"16@"NSData"24@"NSArray"32@"NSString"40@"NSString"48
@40@0:8@16Q24@32
@36@0:8@16Q24B32
@"<IMSimulatedChatDelegate>"
@"IMSimulatedAccount"
^v16@0:8
@"CNContact"
@64@0:8@16@24@32@40@48^i56
@32@0:8@16^v24
v40@0:8i16i20@24^v32
@72@0:8@16@24@32@40@48@56^i64
@56@0:8@16@24@32@40@48
@"NSError"
v56@0:8@16f24@28Q36Q44B52
v56@0:8@"IMSendProgress"16f24@"NSDictionary"28Q36Q44B52
@76@0:8@16@24C32@36@44@52@60B68B72
v48@0:8@16@24B32B36Q40
v64@0:8@16@24B32B36Q40Q48Q56
@40@0:8@16Q24Q32
v60@0:8@16@24@32@40@48B56
v36@0:8Q16@24B32
v28@0:8q16B24
@44@0:8@16B24@?28@?36
@36@0:8@16B24@?28
v24@0:8^v16
@"IMMessage"
@"IMTimingCollection"
@"<IMChatItemRules>"
@"IMScheduledUpdater"
@"IMSendProgress"
@60@0:8@16C24@28@36@44B52B56
@44@0:8@16@24Q32B40
@44@0:8@16Q24Q32B40
@28@0:8Q16B24
@32@0:8Q16@24
v36@0:8@16@?24B32
@"IMItem"
v32@0:8Q16@?24
@40@0:8@16@24Q32
@48@0:8@16@24Q32@40
@72@0:8@16@24@32Q40@48@56@64
@200@0:8@16@24@32@40@48@56@64@72@80Q88@96@104q112@120@128@136@144@152@160q168{_NSRange=QQ}176@192
@88@0:8@16@24@32@40@48Q56@64@72@80
@80@0:8@16@24@32@40Q48@56@64@72
@112@0:8@16@24@32@40@48Q56@64@72@80@88@96@104
@128@0:8@16@24@32@40@48Q56@64@72@80@88q96{_NSRange=QQ}104@120
@48@0:8@16Q24@32@40
@72@0:8@16Q24@32q40{_NSRange=QQ}48@64
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v48@0:8@16@24B32@36B44
v44@0:8@16@24B32@36
v36@0:8@16B24@28
@56@0:8@16^@24^@32^@40^@48
@36@0:8@16C24@28
@48@0:8@16C24@28@36B44
@36@0:8@16B24@28
@36@0:8@16B24^@28
@52@0:8@16B24@28@36B44B48
@48@0:8@16B24@28@36B44
@52@0:8@16@24B32^B36^@44
v52@0:8@16@24@32B40@44
v32@0:8@?16@24
@"IMTimer"
@"NSUserActivity"
@28@0:8q16B24
@48@0:8q16@24@32^q40
@44@0:8q16@24@32B40
@40@0:8q16@24@32
@40@0:8q16@24^q32
@36@0:8q16@24B32
@48@0:8@16@24#32@40
@72@0:8@16@24@32@40@48d56^@64
@88@0:8@16@24@32@40@48@56@64d72^@80
@56@0:8@16@24d32@40^@48
^@16@0:8
@40@0:8@16@24^@32
@32@0:8@16^@24
@60@0:8@16@24d32^@40@48B56
@56@0:8@16@24d32^@40@48
@48@0:8@16d24^@32@40
q36@0:8@16@24B32
q32@0:8@16@24
B40@0:8@16@24@32
@24@0:8@"IMChat"16
@"NSMutableArray"16@0:8
v24@0:8@"IMChatItem"16
@"IMChatItem"16@0:8
@"NSArray"32@0:8@"IMItem"16@"IMItem"24
B40@0:8@"IMItem"16@"IMItem"24@"IMItem"32
v24@0:8@"NSMutableArray"16
B32@0:8@"IMChatItem"16@"IMChatItem"24
B32@0:8@"NSArray"16@"NSArray"24
@"IMItem"32@0:8@"NSArray"16@"IMItem"24
@"IMChatItem"
@28@0:8B16B20B24
B24@0:8^@16
@"IMCloudKitMockSyncState"
v52@0:8@16B24Q28@36@44
v36@0:8@"IMCloudKitEventNotificationManager"16B24@"NSError"28
v32@0:8@"IMCloudKitEventNotificationManager"16@"IMCloudKitSyncState"24
v40@0:8@"IMCloudKitEventNotificationManager"16@"IMCloudKitSyncStatistics"24@"NSError"32
v32@0:8@"IMCloudKitEventNotificationManager"16@"IMCloudKitSyncProgress"24
v52@0:8@"IMCloudKitEventNotificationManager"16B24Q28@"NSString"36@"NSError"44
@"IMCloudKitHookTestSingleton"
^{__DDScanner=}16@0:8
@44@0:8@16@24@32B40
v44@0:8@16^@24^@32B40
v56@0:8@16Q24@32@40@48
v56@0:8@16Q24Q32@40@48
v40@0:8@16Q24@32
v48@0:8@16Q24@32@40
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v24@0:8@?<v@?@"CLLocation"@"NSError">16
@"CLLocation"16@0:8
@"NSError"16@0:8
B32@0:8@16d24
@"CLLocationManager"
@"CLLocation"
v24@0:8@"FMFLocation"16
v32@0:8@"FMFHandle"16@"NSError"24
v24@0:8@"NSError"16
v24@0:8@"FMFFriendshipRequest"16
v24@0:8@"FMFHandle"16
v32@0:8@"NSString"16@"FMFHandle"24
v24@0:8@"FMFDevice"16
v24@0:8@"NSSet"16
@"FMFSession"
@"FMFDevice"
v40@0:8i16i20@24q32
v40@0:8@16@24Q32
@"<IMSendProgressDelegate>"
@"<IMSendProgressTimeDataSource>"
v20@0:8i16
@"IMSPIHandle"
@"IMSPIMessage"
?ffffff
@(#)PROGRAM:IMCore  PROJECT:IMCore-
Client request to set password for account: %@
Successfully updated password for account (%@:%@): %@  (Environment: %@)
Client request to remove password for account: %@
Client request to set temporary password for account: %@
Successfully read temporary password for account (%@:%@): %@
Successfully updated temporary password for account (%@:%@): %@
Client request to authenticate account: %@
Updating token for account %@:%@ (Environment: %@)
Setting profile value: %@   forKey: %@
Requesting validation of profile info: %@
Client request to add alias: %@   account: %@
Client request to add aliases: %@   account: %@
Client request to remove alias: %@  account: %@
Client request to remove aliases: %@  account: %@
Final set of aliases after removes %@
Client request to validate alias: %@  account: %@
Client request to validate aliases: %@  account: %@
 => Returning Caller ID: %@   (Set: %@   Aliases: %@)
Asked to change display name from: %@  to: %@
 Changed display name to: %@
 Attempted to change display name to %@, but it wasn't in vetted set (%@)
Notified that my status is now %i, message '%@', idleSince %@
received new sync state: %@
set messages in cloud enabled: %@
beginning initial sync
Fetching sync statistics
statistics dictionary is unexpectedly nil
fetched sync state statistics: %@
Got error fetching sync statistics: %@
Rescheduled sync progress for %f seconds in the future
Sending progress to event handlers: %@
Deferring send progress to event listeners for %f sec
Not Rescheduling sync progress
Error encountered while fetching sync stats: %@
NOT fetching sync statistics
state dictionary is nil
_syncState is out of range: %ld
_changingEnabledState is out of range: %ld
isSyncEnabledForDisplayOnly = %@. State: %@
Active: %@
Disable AV: %@
Force Chat Logging: %@
%@ Force Whitelist: %@
%@ Whitelist: %@
 => done
** Added: %@   (%d now exist)
Handle %@
Handle account %@
Account sibling: %@
No GUID, bailing...
Dealloc person: %@
Cache hit: %@
  Querying ABAddressBookCopyPeopleWithName with name: %@
  Querying ABAddressBookFindPersonMatchingEmailAddress with email: %@
  Result: %@
Looking up using country code: %@   has plus prefix: %@
  Querying ABAddressBookFindPersonMatchingPhoneNumberWithCountry with number: %@  countryCode: %@
  Querying ABAddressBookFindPersonMatchingPhoneNumberWithCountry with number: %@
SendFileMessage  enableTelemetry=YES 
Created chat: %@
Account Logged Out: chat: %@ account: %@
handle incoming message: %@   chat: %@
update join state for chat guid: %@  old join state: %d  new join state: %d
chat: %@  handle: %@  status: %d
chat: %@   message: %@  adjusting sender: %@
Setting local user is composing with %@ for chat: %@   supplied guid: %@
chat: %@   message: %@
chat: %@   message: %@   flags: 0x%llXlX
chat: %@   property: %@   value: %@
chat: %@   handles: %@  reason: %@
chat: %@
chat: _initWithDictionaryRepresentation: %@  dictionary: %@  messages: %@
Setting initial join state: %d
chat: <%p> updateChatItemsIfNeeded
chat: %@ _updateChatItems with block: %@  (%@)
No chatItems yet. Post for compatibility.
Schedule _replaceStaleChatItems for nextStaleChatItem:%@
inserted: %@
removed: %@
reload: %@
regenerate: %@
new chat items: %@
Don't post. No significant updates to chatItems.
_replaceStaleChatItems
Registering...  thread: %@   guid: %@
guid: %@
handle: %@
handles: %@  name: %@
roomName: %@  account: %@
identifier: %@
handles: %@  groupID: %@
existingChatForHandles: %@  groupID: %@ displayName %@ isJoined %@ 
queries: %@
ID %@  onService: %@   (URI: %@)
ID %@  onService: %@  onAccount: %@
ID %@  onService: %@
chat: %@  messages: %@
chat: %@  item: %@
chat: %@ message: %@
chat: %@  message: %@
Sending message: %@ to %@ account: %@
chat: %@  participants: %@  reason: %@
chat: %@  joinProperties: %@
chat: %@  properties: %@  participant: %@
chat: %@  property: %@  value: %@
chat: %@  update display name: %@
chat: %@ limit: %d beforeGUID: %@ afterGUID: %@ queryID: %@
_chat_loadPagedHistory chat: %@ numberOfMessagesBefore: %d numberOfMessagesAfter: %d messageGUID: %@ queryID: %@
chat: %@ beforeGUID: %@ afterGUID: %@ queryID: %@
chat: %@ limit:%d queryID: %@
chat: %@ limit:%lu queryID: %@
chat: %@ queryID: %@
account: %@  chat: %@   style: %d  messages: %@
account: %@  chat: %@   style: %d  message: %@  properties: %@
 found existing chat: %@
    all chats: %@
account: %@  chat: %@  style: %d  invitation: %@
account: %@  chat: %@  style: %d  properties: %@
account: %@  chat: %@  style: %d  error: %@
Chat status changed: account: %@  chat: %@  style: %d  member: %@  status: %d
chat: %@  properties: %@
chat: %@  displayName: %@
Chat [%@] info dictionary has [Unread: %d]
Chat [%@] _setDBUnreadCount to %d
deletedGUIDs: %@  queryID: %@  chatGUIDs: %@
 => chats: %@
   Loaded chat: %@
updateCloudKitState was updated by the daemon %@
updateCloudKitState was updated by the daemon, clients should values
