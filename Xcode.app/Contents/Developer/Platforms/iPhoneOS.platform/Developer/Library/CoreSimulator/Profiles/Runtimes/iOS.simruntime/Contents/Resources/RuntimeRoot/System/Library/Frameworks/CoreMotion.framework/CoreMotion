CNSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
N16CLMotionNotifier18CallbackDispatcherIN6CLGyro6SampleEEE
N16CLMotionNotifier10DispatcherE
N16CLMotionNotifier18CallbackDispatcherIN15CLAccelerometer6SampleEEE
.AN16CLMotionNotifier18CallbackDispatcherIN10CLPressure6SampleEEE
15CLNameValuePair
10BasicMutex
5Mutex
11NonCopyable
N16CLMotionNotifier18CallbackDispatcherIbEE
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
N13CLPreferences10OtherPrefsE
13CLPreferences
NSt3__120__shared_ptr_pointerIP19CLConnectionMessageNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI19CLConnectionMessageEE
15CLKeyboardState
EnableWakeGestureLatencyAlert
WakeGestureLatencyAlertThreshold
EnableWakeGestureHaptic
20CMWakeGestureVisitor
N15CLGestureReport7VisitorE
N16CLMotionNotifier18CallbackDispatcherIN19CLPowerStateService6SampleEEE
N16CLMotionNotifier18CallbackDispatcherIN15CLGestureReport6SampleEEE
?31CLGyroCalibrationDatabaseRemote
NSt3__120__shared_ptr_emplaceIN30CLGyroCalibrationDatabase_Type16NotificationDataENS_9allocatorIS2_EEEE
N16CLMotionNotifier18CallbackDispatcherIN23CMCallHandednessService6SampleEEE
?15CMPickupService
17CLRunningVector3dIfE
20CLRunningBufferStatsIfE
16CLMotionNotifier
NSt3__120__shared_ptr_pointerIP10CLSettingsNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10CLSettingsEE
@20CLPocketStateService
N16CLMotionNotifier18CallbackDispatcherIN21CLOrientationNotifier6SampleEEE
N16CLMotionNotifier18CallbackDispatcherIN19CLProximityNotifier6SampleEEE
5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI19CLCircularLogBufferEE
10CLSettings
23CLCompassDatabaseClient
NSt3__120__shared_ptr_emplaceIN22CLCompassDatabase_Type16NotificationDataENS_9allocatorIS2_EEEE
10CLVector3dIfE
14CLNotifierBase
17CLCompassDatabase
10CLNotifierIN22CLCompassDatabase_Type12NotificationENS0_16NotificationDataEccE
kCMActivityAlarmId
kCMActivityAlarmTrigger
kCMActivityAlarmDuration
32CLGeomagneticModelProviderClient
NSt3__120__shared_ptr_emplaceIN31CLGeomagneticModelProvider_Type16NotificationDataENS_9allocatorIS2_EEEE
26CLGeomagneticModelProvider
10CLNotifierIN31CLGeomagneticModelProvider_Type12NotificationENS0_16NotificationDataEccE
?23CMCallHandednessService
G19CLProximityNotifier
N16CLMotionNotifier18CallbackDispatcherIN15CMPickupService6SampleEEE
PocketStateMaxMonitorTime
DisablePocketState
N16CLMotionNotifier18CallbackDispatcherIN20CLPocketStateService25CLPocketStateInternalTypeEEE
21CLOrientationNotifier
9CLLogBase
25CLGyroCalibrationDatabase
10CLNotifierIN30CLGyroCalibrationDatabase_Type12NotificationENS0_16NotificationDataEccE
>fff?
l?gf
/C33s?
)>B`e=
tS>J
Kw>z
19CLPowerStateService
ADDED
16CLIoHidInterface
N16CLIoHidInterface6DeviceE
NSt3__120__shared_ptr_pointerIPN16CLIoHidInterface6DeviceENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN16CLIoHidInterface6DeviceEEE
NSt3__120__shared_ptr_emplaceIN5CMMsl6WriterENS_9allocatorIS2_EEEE
16CLGestureService
@(#)PROGRAM:CoreMotion  PROJECT:CoreLocation-2237.0.18
N5CMMsl5AccelE
N5CMMsl10AccelBatchE
N5CMMsl12AccelGestureE
N5CMMsl8AccelGpsE
N5CMMsl13AccelOscarEmuE
N5CMMsl12BTConnectionE
N5CMMsl13BasebandSpeedE
N5CMMsl11BodyMetricsE
N5CMMsl21CalorimetryPauseEventE
N5CMMsl21CoarseElevationChangeE
N5CMMsl7CompassE
N5CMMsl16CompassAlignmentE
N5CMMsl18CompassCalibrationE
N5CMMsl18CompassConstraintsE
N5CMMsl17CompassCorrectionE
N5CMMsl17CourseConstraintsE
N5CMMsl16CourseCorrectionE
N5CMMsl12DeviceMotionE
N5CMMsl22DeviceMotionCorrectionE
N5CMMsl22DeviceMotionCovarianceE
N5CMMsl15ElevationChangeE
N5CMMsl20EnhancedDeviceMotionE
N5CMMsl9FallStatsE
N5CMMsl11GestureHintE
N5CMMsl18GravityConstraintsE
N5CMMsl17GravityCorrectionE
N5CMMsl4GyroE
N5CMMsl19GyroBiasAndVarianceE
N5CMMsl19GyroBiasConstraintsE
N5CMMsl18GyroBiasCorrectionE
N5CMMsl11GyroBiasFitE
N5CMMsl11GyroCompassE
N5CMMsl6GyroDtE
N5CMMsl7GyroGpsE
N5CMMsl12GyroOscarEmuE
N5CMMsl15GyroTemperatureE
N5CMMsl21IntersiloNSCodingDataE
N5CMMsl4ItemE
N5CMMsl16LocationOscarEmuE
N5CMMsl12MagnetometerE
N5CMMsl8MetsInfoE
N5CMMsl17MotionGPSLocationE
N5CMMsl13MotionLoiDataE
N5CMMsl17MotionStateUpdateE
N5CMMsl21MotionWifiAssociationE
N5CMMsl18MotionWifiLocationE
N5CMMsl11NatalieDataE
N5CMMsl16NonlinearBiasFitE
N5CMMsl8OdometerE
N5CMMsl20OdometerWithAltitudeE
N5CMMsl18OnsetHeartRateDataE
N5CMMsl8PressureE
N5CMMsl16PressureFilteredE
N5CMMsl29PressureFilteredNoTemperatureE
N5CMMsl11PressureGpsE
N5CMMsl16PressureOscarEmuE
N5CMMsl4ProxE
N5CMMsl15SessionOverrideE
N5CMMsl28StepCadenceToStrideLengthBinE
N5CMMsl22StreamingHeartRateDataE
N5CMMsl12StrideCalBinE
N5CMMsl13TouchOscarEmuE
N5CMMsl14VibrationEventE
N5CMMsl24WatchOrientationSettingsE
N5CMMsl12WorkoutEventE
Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 96,mean() on empty buffer.
Assertion failed: i < fCapacity, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMQueue.h, line 207,i,%zu,capacity,%u.
Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 148,back() on empty buffer.
Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 213,variance() on empty buffer.
Empty payload, returning
SedentaryAlarm,Error response,%{public}d
SedentaryAlarm,Error start / stop response,%{public}d
SedentaryAlarm,Error start / stop response.
SedentaryAlarm,Error query response,%{public}d
SedentaryAlarm,Error parsing alarm data.
Error occurred while trying to retrieve motion state update: CMErrorDomain Code:%{public}d
Unable to parse kCLConnectionMessageMotionActivityUpdate message!
***no run loop available***
#Warning Changing CLCommon's runloop after it was already established
#Warning Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %{public}s, errno %{public}d
cannot open target file: %{public}s, errno %{public}d
error reading source file: %{public}s
error writing target file: %{public}s
cannot open compression stream: %{public}s, bzerror %{public}d
error writing target file: %{public}s, bzerror: %{public}d
error closing target file: %{public}s, bzerror: %{public}d
Default handler received message %s
processed %p %d to (%s)
could not create new mutable dictionary
could not deserialize property list from %{public}s
file %s does not exist... clearing, error, %s
#Warning Error reading file %{public}s: %{public}s
Could not create NSURL for file: %{public}s
Could not write data to disk %{public}s
Could not serialize data for file %{public}s
key %{public}s does not have element %{public}d in array of size %{public}ld
key %{public}s does not have element %{public}d in non-array type %{public}lu
type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
specified index is out of range for key %{public}s (%{public}d of %{public}ld)
specified index %{public}d not applicable to type %{public}lu for key %{public}s
could not create cf type for key %{public}s
could not create write stream
could not open write stream
could not write data, error code, %{public}ld, error domain, %{public}s
could not create intermediate property list - %{public}ld (%{public}s)
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %{public}lu vs %{public}lu
could not convert to C string
can't convert %{public}u data bytes
type IDs do not match - %{public}lu
#Warning TIMEOUT: Waited %f seconds to aquire lock '%s' (%p)
{"msg%{public}.0s":"CSI assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning TIMEOUT: Held lock '%s' (%p) for %f seconds
unknown hardware type %{private}d
Workout, pool length %f for workout is too small and may lead to undefined behavior.
could not get mutable store path for type, %{public}d
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#warning Instantiating proxy to abstract consumer, but couldn't guess the relevant protocol extensions", "ExpectedRecipient":%{public, location:escape_only}@, "ExpectedProtocolCandidates":%{public, location:escape_only}@}
{"msg%{public}.0s":"Trigger names must be set before delegate is configured", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Trigger names must be set before delegateName is configured", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Writer may only be set once", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
***not supported***
<empty>
Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
Unable to allocate buffer for sensor recorder.
Error occurred while trying to retrieve accelerometer record!
Error occurred while trying to retrieve accelerometer records!
Successfully wrote accelerometer data to file.
Error occurred while trying to write accelerometer data to file!
Successfully set sensor sample rate.
Error occurred while trying to set sensor sample rate!
Error occurred while trying to retrieve accelerometer data!
Response invalid.
#Notice -[%{public}s %{public}s] fromDate has been adjusted so that the duration requested is <= 12 hours.
#Notice Unable to get file handle for URL %{public}@
registering for keyboard updates
#Warning Failed to register for keyboard updates. Could not register for AppleHIDKeyboardEventDriverV2 service kIOFirstMatchNotification and kIOTerminatedNotification.
#Warning Failed to register for keyboard updates. Could not create KeyboardConnectNotificationPort and KeyboardConnectNotificationPort
unregistering for keyboard updates
CLInternalSetGestureServiceEnabled failed
CL: CLStartStopAdvertisingBeacon
{"msg%{public}.0s":"CLStartStopAdvertisingBeacon", "event":%{public, location:escape_only}s, "region":%{private, location:escape_only}@, "power":%{public, location:escape_only}@}
Could not create instance of CLGestureService. Is wake gesture supported on this platform?
Process: %{public}@, IsPrimary: %{public}d
Failed to register for backlight service notification
Backlight level notification (%{public}llu)
Unable to send display state
Start Wake Gesture Updates
Stop Wake Gesture Updates
Simulating gesture: delay,%f,duration,%f,success,%d
Unable to invoke delegate. Please call startWakeGestureUpdates first.
Loaded Preferences. Latency Alert: %d, Latency Threshold: %d, Audio Alert: %d
Gesture state %{public}zd is invalid!
Gesture state updated to %{public}d
Invalid CMSendWakeGestureNotification payload!
Gesture notification: %{public}d(%{public}@), Mode:%{public}@, Start:%{public}@, End:%{public}@, HostAwake, %{public}d
Gesture state notified,%{public}@,currentTime,%{public}f
No valid delegate found.
Attempt re-enabling detected state recognition
{"msg%{public}.0s":"This is not the SPI you are looking for", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Unable to send reenable-detected hint
Failed with CMError code %{public}d
CMOdometer client connection interrupt, %@, %d, %p
Unable to parse kCLConnectionMessageOdometerUpdate message!
#Warning The requested activity %ld is not yet supported
#Warning Unsupported activity requested
%{public}s; client %{public}d does not exist
%{public}s; notification %{public}s not found
CL: notifyClientsWithData (Fallback)
{"msg%{public}.0s":"notifyClientsWithData", "event":%{public, location:escape_only}s, "name":%{public, location:escape_only}s, "notification":%{public}lld}
%s; client %d has deregistered, not notifying %s
%{public}s; unknown client %{public}d
%s; already shutdown; not listing clients
%s; listing clients, num clients: %zu
%s; clients, id: %d, notification: %d
successfully got GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
Warning: can't get GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
Failed with error, %{public}d
Client connection interrupt, %@, %d, %p
Error responding to start / stop tracking request, handler unavailable.
Error parsing start / stop response.
Error parsing query response.
Started CallHandedness updates. Current Time: %f
CallHandedness service already started!
Stopped CallHandedness updates. Current Time: %f
CallHandedness service already stopped!
CallHandedness Detection: %ld
CMPickupService Spectators, %zd
CMPickupService stopped, %zd
CMPickupService started, %zd
CMPickupService expects only 1 client
#Warning No accelerometer; not starting CMPickupDetector detection!
Starting PickupDetector detection with accelFrequency %.1f
Sending CMPickupDetector notification.
Unrecognized notification
ExericseMinute, Failed with CMError code %{public}d
ExericseMinute, client connection interrupt, %@, %d, %d, %p
ExerciseMinute, Error stopping updates, no active clients.
ExerciseMinute, Unable to parse update.
ExerciseMinute, Unable to parse query.
Requested update interval cannot be == 0.0 and dispatcher cannot be NULL. Use interval < 0.0 for spectator.
CLMotionNotifier::addDispatcherPrivate UpdateInterval is zero!
CLMotionNotifier::addDispatcherPrivate Added dispatcher for notification:%d, Update Interval:%f(%.1fHz)
Unknown (notification,dispatcher) pair: (%d, %p)
CLMotionNotifier::setUpdateIntervalPrivate RequestedUpdateInterval:%f, UpdateInterval:%f
CLMotionNotifier::updateSamplePeriod UpdateInterval:%f
Could not get parent thread parameters
Motion runloop ref still not set!
Could not get scheduling parameters for motion thread, error = %{public}d
could not create runloop source
Ping timer fired, resetting watchdog
Motion thread deadlock watchdog after %d petting
Failed to create watchdog timer
Motion thread exiting
Could not subscribe to system power notifications
enabled detection successfully
Device Stationary?, %s, Orientation, %s, Proximity, %s
Transition, From: %s, To: %s, %s
%f: Device Stationary?, %s, Orientation, %s, Proximity, %s, State, %s
disable Detection
%f: monitorTime, %f, bksMonitorTime, %f, bksDelay, %f, proxStatus, %s
%f: ProxDelay,%f
Proximity detection mask: %u, Last prox state: %s
received WillSleep
received WillPowerOn
received HasPoweredOn
CMMotionAlarmManager client connection interrupt, %@, %d, %d, %p
Tearing down CMMotionAlarmManagerInternal
Unable to stop MotionAlarm data updates as we are are not receiving updates.
Unable to register motion alarm. No delegate assigned.
Unable to register motion alarm. Invalid alarm object.
Unable to parse kCLConnectionMessageMotionAlarmRegister message.
Unable to unregister motion alarm. No delegate assigned.
Unable to unregister motion alarm. Invalid alarm object.
Unable to parse kCLConnectionMessageMotionAlarmUnregister message.
Unable to acknowledge alarm, alarm does not exist.
Unable to call kCLConnectionMessageMotionAlarmAcknowledge message. Code: %d
Unable to parse kCLConnectionMessageMotionAlarmAcknowledge message.
Unable to fire motion alarm. Received invalid message response.
Unable to fire motion alarm %@. Could not locate valid alarm to fire.
Calorie response failed with error %{public}d
Unable to set activity session on interrupted connection.  locationd and framework client states are not in sync!
#Notice %{public}s (%{public}d) setting session %{public}d %{public}p
Unable to set session. Unexpected user error
Unable to set session. Error code %{public}d
#Notice %{public}s (%{public}d) received status %{public}d after setting session %{public}d %{public}p
%@, pid, %d, query since record, %@, %p
%@, pid, %d, update, %@, %p
Error parsing update.
Error stopping calorie updates, not active clients.
Prompts needed response invalid.
Querying for calibration prompts encountered an error: %{public}ld.
UserProfile, Invalid response
UserProfile, Error while setting, %{public}d
Unable to reset calibration data. Error code %{public}ld.
Invalid response to reset calibration.
TimeToActiveCalories is negative: timeToActiveCalories, %f, %{private}@
TimeToActiveCalories, %f, target, %f, workoutType, %ld, %{private}@
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
#Warning stackshot only available on device
Failed with code %{public}d
METMinutes,Unable to parse query response
VO2MaxData,Unable to parse query response
{"msg%{public}.0s":"Motion manager can not start device motion lite updates, use isDeviceMotionLiteAvailable before using this API", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Motion manager asked to start device motion lite updates for device id %@
Motion manager asked to stop device motion lite updates for device id %@
{"msg%{public}.0s":"deferredDelete() should have nulled out connection", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"deferredDelete() should have nulled out handler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"CLConnections must always have event queues", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Unhandled message %s
CL: CLConnection::handleInterruption
{"msg%{public}.0s":"CLConnection::handleInterruption", "event":%{public, location:escape_only}s}
CL: CLConnection::handleDisconnection
{"msg%{public}.0s":"CLConnection::handleDisconnection", "event":%{public, location:escape_only}s}
CL: CLConnection::sendMessageInternal (Fallback)
{"msg%{public}.0s":"CLConnection::sendMessageInternal", "event":%{public, location:escape_only}s, "name":%{public, location:escape_only}s}
Couldn't create XPC message
The received data object is invalid: %{public}s
#Warning Connection interrupted!
#Warning Location connection invalid!
Got unexpected location event
Error on message reply (%{public}s)
Ignoring unexpected event
Setting handler for message %s
CL: CLConnectionClient::sendMessage(cache) (Fallback)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(cache)", "event":%{public, location:escape_only}s}
#Warning Sending an un-cached message '%{public}s' without first clearing the previously cached value
CL: CLConnectionClient::sendMessage(reply) (Fallback)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(reply)", "event":%{public, location:escape_only}s}
received daemon start notification for service %s
Creating connection
Destroying connection
CL: Sending cached messages to daemon
{"msg%{public}.0s":"Sending cached messages to daemon", "event":%{public, location:escape_only}s}
#Warning No cached registration message
Could not get dictionary for kCLConnectionMessageGesture
Unexpected ear gesture state received: %{public}s
#Notice Calling ear gesture handler
Could not get dictionary for kCLConnectionMessageMotionState
Error occurred while trying to retrieve activity update: CMErrorDomain Code:%{public}d
Unable to parse kCLConnectionMessageMotionState message!
Could not parse dictionary for kCLConnectionMessageSidebandOverride
Could not parse dictionary for kCLConnectionMessageMotionStateSim
Timeout occurred after 5 seconds during overrideOscarSideband:withState:.  Wait result = %{public}ld
Unable to parse message (%{public}@) when starting updates to queue
Unable to parse message when starting updates to queue!
nil pedometer event dictionary received
Error pedometer event, %{public}ld
Unrecognizable pedometer event dictionary
CMPedometer client connection interrupt, %@, %d, %p
Error occurred: %{public}@
Unable to parse message (%{public}@) for query response 
Unable to parse message when checking for availability!
Successfully wrote stride calibration data to file.
Error occurred while trying to write stride calibration data to file!
Remote calibrations not available on this platform
handler not set.
fileURL must be a valid fileURL.
File already exists at URL.
URL must point to a file path which you have access to write to.
Unable to dump stride calibration data.
Unable to serialize stride cal data to json. Error: %@
Unable to write stride cal data to output file.
{"msg%{public}.0s":"Return-address-rewritten proxies should be proxies to the message sender", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Superseding prior proxy for connection", "ConnectionKey":%{public, location:escape_only}@}
{"msg%{public}.0s":"Setting up new connection", "ConnectionKey":%{public, location:escape_only}@}
{"msg%{public}.0s":"Replay must not be ongoing when a new recording file is specified", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Could not initialize reading from file", "RecordingFilePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"No valid messages found in recording file", "RecordingFilePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"Shouldn't ever need to call loadNextRecordedMessageOnDeck without knowing you have a reader", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"No outbound connection for on-deck message", "ConnectionKey":%{public, location:escape_only}@}
{"msg%{public}.0s":"Replay shutdown before complete"}
{"msg%{public}.0s":"EOF reached in recording file"}
{"msg%{public}.0s":"lookupBias was called on the base CLCompassDatabase class"}
Invalid parameters received:
%{public}s
fLocationdConnection is not NULL
Could not get geomagnetic model data for message!
fLocationdConnection is NULL
CMFitnessMachine client connection interrupt, %@, %d, %p
Error feeding fitness machine data
Error feeding fitness machine data, %@
CMCallHandednessService Spectators, %zd
CMCallHandednessService stopped, %zd
CMCallHandednessService started, %zd
CMCallHandednessService expects only 1 client
#Warning No accelerometer; not starting CMCallHandedness detection!
Starting CallHandedness detection with accelFrequency %.1f
Sending CMCallHandedness notification.
Started pickup detection updates
Pickup detection already started!
Stopped pickup detection updates
Pickup detection service already stopped!
Pickup Detection: %{public}ld
Orientation Manager initialized
OrientationCallbackMode,%{public}d,EnableOrientationNotification,%{public}d
The orientation %{public}d is not in bounds
Starting orientation updates
Stopping orientation updates
Notifications disabled
Received orientation. (%{public}@ to %{public}@) Timestamp %{public}f
Updating client handler: Orientation %{public}@, Callback mode: %{public}d
Received deviceOrientationBlocking
Pocket state disabled by defaults write
disabling dispatcher
ADClient: %s + %llu
QueryRequest,%f
%f: query started with timeout %f
Query aborted
QueryTimerFire,%f
%f: query response external=%u (%s), cbcount=%lu
timer fired even though fQueryTimer is NULL
Attempted to exceed max monitor time %f, %f
Query timer failed to initialize
The pocket state %d is not in bounds
hwType, %{public}d
form factor %{public}u
Registering for SBHasSeenACaseLatchCoverNotification.
fHasSeenACaseLatchCoverOnce %u
Unrecognized notification request %u
forceAccelOnly for device %{public}d
fOrientationGyroTimeout,%{public}f,fEnableGyroTimeout,%{public}d,fMaxAccelerationVarianceForStability,%{public}f
Not starting orientation detection since requested accelerometer frequency < 0
No accelerometer; not detecting orientation!
No gyro; not detecting orientation!
fHasSeenACaseLatchCoverOnce, %{public}d
Starting orientation detection with accelFrequency %{public}f, form factor, %{public}d, decimationRate, %{public}d
Stopping orientation detection.
Sending orientation changed notification
Device is in motion, re-enabling Gyro.
Device is stationary and OrientationGyroTimeout exceeded, disabling Gyro.
GYRO: Sending orientation changed notification
Received keyboard state %u
AOO update: %u
Invalid dynamics, mag, %.2f, xyVarMax, %.2f, xMean, %.2f
Invalid xyNorm, %.2f
Invalid tilt, %.2f
Invalid swivel, %.2f
Swing1. xMag, %.2f, maxXYVar, %.2f, swingX, %.2f
Swing2. X sign flipping.
Passed swing-detect. hand, %d, xMag, %.2f, maxXYVar, %.3f, swingX, %.3f
Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 142,front() on empty buffer.
#Notice Response invalid.
CMSkiTracker client connection interrupt, %@, %d, %d, %p
Unable to stop Ski data updates as we are are not receiving updates.
Unable to parse kCLConnectionMessageSkiDataQuery message.
Unable to parse kCLConnectionMessageSkiDataUpdate message.
Warning: Not implemented.
Timeout (after 5 seconds) occurred during wait!
Warning - invoking %@ on main may lead to deadlock.
TCCServiceMotionAccess timeouts!
#Notice URL must specify a file.
#Notice File already exists at URL.
#Notice URL must point to a file path which you have access to write to.
#Notice Unable to get file handle for URL %{public}s: %{public}s
{"msg%{public}.0s":"[FastPath] should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
gyroFrequency,%.3f,gyroBufferSize,%d,gyroMeanBufferSize,%d,zRotBufferSize,%d,minRequiredZrots,%d
accelBufferSize,%d
Accelerometer samples data gap or out of order! deltaInterval=%.4f
accel, %.3f, %.3f, %.3f, timestamp, %.20f
Gyro samples data gap or out of order! deltaInterval=%.4f
gyro, %.3f, %.3f, %.3f, gyroMean, %.3f, %.3f, %.3f, fLastDetection,%d,fStartZrot,%d, timestamp, %.10f
zRot (%.3f, %.3f, %.3f), mean(%.3f, %.3f, %.3f), var(%.3f, %.3f, %.3f)
Likely transient.
Slowing. decrement numZRot,delta, %.3f, numZRot, %d
ZDROP detected. deltaDrop, %.3f, fNumZDrops, %d
mostlyZ, %d, zRotMean.z, %.3f, zRot, %.3f, numZRots, %d, estCurr, %.3f, totalZ, %.2f, mag2MinusGrav, %.2f
Going through with 180 turn.
Rotating around Z. numSamples: %d, numAccu, %d, zRotVar, %.3f
SCREEN FLAT. NOT FILLING UP ZROT BUFFER.
Transient!
Rotating! Current max gyro rate %.3f
Setting lastPrimaryOrientation.
Nixed rotationAroundZ state.
Ready for orientation change via rotation
Not filling Zrot buffer.
acc variance, %.3f, %.3f, %.3f, acc mean, %.3f, %.3f, %.3f, maxVar, %.3f, mag2,%.3f
Resetting stable count
Within magic angle limits: Threshold %.4f, Delta %.4f
Ipad %d: screenJustTurnedOn, %d, deltaTime %.5f
allowShallow, %d, magicCaseRest, %d, tiltIn, %d, wasMoving, %d, maxVar, %.5f
onStartup, x, %.3f, y, %.3f, z, %.3f
FaceUp/Down: maxWeight,%.3f, 2ndWeight,%.3f, orientation,%d
deltaWeightThreshold, %.3f, tiltWeightTheshold, %.3f, currAcc, %.3f, %.3f, %.3f, deltaWeight, %.3f, tilt, %.3f, fCurrentOrientation, %d, isMoving, %d, wasMoving, %d, fLastClearOrientation, %d, fStableCount, %d, DetectionTime, %f
Notify from, %{public}s -> %{public}s 
Disabling gyro.
Enabling gyro.
Index out of bound.
#Warning Did not find the triggered activity alarm in the current set of alarms.
Could not get dictionary for kCLConnectionMessageActivityAlarm
#Warning Was not able to listen for alarm.  Activity alarms are not available for this system.
#Warning Cannot unsubscribe from activity alarm (Trigger:%d, Duration:%f).  This alarm is not being listened for.
Unable to create sharedInstance of CMActivityAlarmProxy.
Unable to parse mesage (%{public}@) when starting updates to queue
Unable to parse mesage (%{public}@) for query response
Unable to start additional step updates while it is already active
Unable to stop step updates as we are are not receiving updates
Grabbing reference pose while static, %.3f, %.3f, %.3f, varInfNorm, %.8f
Getting new reference in StableState when no reference is available yet.
Entered Stable state from being static/frozen
fStableCount, %d, maxXYVar, %.8f, xyMeanNorm, %.3f, deltaTiltMean, %.3f
Entered Stable state. timestamp, %.6f
deltaTilt, %.3f, fLiftCount, %d, z2xyRatio, %.3f, dt, %.2f
Entered Lift state. timestamp, %.6f
{"msg%{public}.0s":"Too many arguments to selector in IntersiloInterface", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Methods beginning 'syncget...' must return non-void", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Methods returning non-void must begin 'syncget...'", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Selector extension failed!", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Unable to parse message (%{public}s) when starting updates to queue
{"msg%{public}.0s":"Error receiving filtered elevation updates", "error":%{public}d}
Received empty filtered elevation update
Unable to parse message (%{public}s) for query response
relativeAltitude,%f,pressure,%f
Client connection interrupt, %@, %d, %d, %p
Unable to stop swim data updates as we are are not receiving updates.
Unable to parse query message.
%@, %@, %d, %p
Unable to parse update message.
{"msg%{public}.0s":"Intersilo proxy init changed self", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Delegate is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Silo is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"A delegate must be set before sending messages with byref return address parameters", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"The object passed to byref return address parameters MUST BE the registered delegate", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Didn't expect the arguments to be retained before now", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Once registered, delegate may not be changed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"-peer should never be invoked at this level...", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Adding new Device with usage pair {%{public}d, %{public}d}
[CLIoHidInterface] buildDevice should be called on motion thread, usage pair {%{public}d, %{public}d}
{"msg%{public}.0s":"[CLIoHidInterface] initializeHidIfNecessary should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Could not create event system client. All bets are off
[CLIoHidInterface] Event system client initialized successfully
{"msg%{public}.0s":"[CLIoHidInterface] closeHid should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Hid interface closed
{"msg%{public}.0s":"[CLIoHidInterface] refreshDeviceServiceRefs should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Refreshing service refs
[CLIoHidInterface] Check service ref %{public}p with usage pair {%{public}d,%{public}d} as a potential match
[CLIoHidInterface] Service ref with usage pair {%{public}d,%{public}d} is %{public}p
{"msg%{public}.0s":"[CLIoHidInterface] invalidateDeviceServiceRefs should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] invalidating hid service refs
{"msg%{public}.0s":"[CLIoHidInterface] setPropertyIoHid should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] property can not be set for null hidServiceRef
[CLIoHidInterface] IOHIDServiceClientSetProperty() returned false
{"msg%{public}.0s":"[CLIoHidInterface] applyAllDirtyDeviceProperties should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] apply all dirty device properties
[CLIoHidInterface] Service with for device with usage pair {%{public}d,%{public}d} is not ready
[CLIoHidInterface] Property for usage pair {%{public}d,%{public}d}: {%{public}s = %{public}@} was set %{public}s
[CLIoHidInterface] Could not set all properties. Setting timer to fire %{public}f seconds from now
[CLIoHidInterface] Could not set all properties after too many retries. Giving up.
{"msg%{public}.0s":"[CLIoHidInterface] setMatchingForDevices should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Prox: remove set matching multiple
[CLIoHidInterface] Adding match entry for usage pair {%{public}d,%{public}d}
[CLIoHidInterface] Setting matching multiple for %{public}lu events
[CLIoHidInterface] Received null sender
[CLIoHidInterface] Got null event,sender %{public}p,registryID %{public}llx
[CLIoHidInterface] Fetching historical events
[CLIoHidInterface] Did not fetch historical events
[CLIoHidInterface] It looks like our HID event system just become available (again)
[CLIoHidInterface] New IOHIDServiceClientRef for usage pair {%{public}d,%{public}d} just became available.
[CLIoHidInterface] Device,usagePage,%{public}d,usage,%{public}d,hidserviceref,old,%{public}p,new,%{public}p
[CLIoHidInterface] Releasing value for property %{public}s, address = %{public}p
[CLIoHidInterface] setCallback for {%{public}d, %{public}d} should be called from motion thread
[CLIoHidInterface] Could not set property value for %{public}@
[CLIoHidInterface] setProperty for {%{public}d, %{public}d} should be called from motion thread
[CLIoHidInterface] copyProperty for {%{public}d, %{public}d} should be called from motion thread
{"msg%{public}.0s":"[CLIoHidInterface] must have event type set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] setEventType for {%{public}d, %{public}d} should be called from motion thread
{"msg%{public}.0s":"[CLIoHidInterface] should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Service for usage pair {%{public}d, %{public}d} is not ready
[CLIoHidInterface] Device,hidUsagePage,%{public}d,hidUsage,%{public}d,hasCallback,%{public}d,serviceRef,%{public}p
[CLIoHidInterface] 
%{public}s = %{public}@,dirty,%{public}d
{"msg%{public}.0s":"-becameFatallyBlocked:index: was not overriden", "class":%{public, location:escape_only}@}
{"msg%{public}.0s":"The silo associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"The vendor associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Overrider didn't call up to super for beginService?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Only one payload per key at at time", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"A payload must be ready for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"A payload must be around to remove for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Watch: Gesture Manager Active
Phone: Gesture Manager Active
CMWakeGestureManager is not supported on this platform!
Calling methods directly on an instance of CMWakeGestureManager is not permitted. Please use +[CMWakeGestureManager sharedManager] instead.
_Locationd should come last?!
{"msg%{public}.0s":"Don't message _Locationd", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Heartbeat tracking commenced", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Heartbeat tracking terminated", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Deltafied deficit should be non-negative", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Heartbeat underflow; going to crash now!", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Only living, non-nil services should be heart-beaten", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#warning Heartbeat underflow", "silo":%{public, location:escape_only}@, "deficit":%{public}d}
{"msg%{public}.0s":"Heartbeat tracking already enabled", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking resumed", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking suspended"}
{"msg%{public}.0s":"Heartbeat tracking already disabled"}
{"msg%{public}.0s":"Service replacement map must be non-nil if set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Existing services must not fail to map under new mapping and behavior", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Should be impossible for an existing service to fail to map under existing mapping and behavior, and must be non-nil for next test", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Old and new mappings and behaviors must agree about any service which has started", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Configuring service replacement map", "ReplacementMap":%{public, location:escape_only}@, "MissBehavior":%{public}d}
{"msg%{public}.0s":"Initializing recording file", "FilePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"Failure to open recording file for reading", "FilePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"Test and Mock services may only be looked up indirectly via -setServiceReplacementMap:", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Unavailable service requested", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Service replacement map does not include requested service", "RequestedServiceName":%{public, location:escape_only}@, "ReplacementMap":%{public, location:escape_only}@}
{"msg%{public}.0s":"Looking up service identified by name", "ServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Tried to look up a service by name that doesn't exist", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Requested service not isSupported", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Trying to start an unavailable service", "RequestedServiceName":%{public, location:escape_only}@, "UnavailableServices":%{public, location:escape_only}@}
{"msg%{public}.0s":"Reusing replacement service under new name", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@, "ReusedFromServiceName":%{public, location:escape_only}@}
CL: Manufacturing service
{"msg%{public}.0s":"Manufacturing service", "event":%{public, location:escape_only}s, "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Failed to alloc and init key class for service", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Key class for service failed to hydrate", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"#warning Service retired redundantly or without ever having been started", "RequestedServiceName":%{public, location:escape_only}@}
#Warning Gesture service is not available on this platform
Neither the queue nor the handler can be nil
Workout, client connection interrupt, %@, %d, %d, %p
Workout, START, %@, %@, %d, %p
Trying to start a swim session without using a CMSwimWorkout!  Treating this swim as an open water swim.
Workout, STOP, %@, %@, %d, %p
Workout, Registering suggested stop timeout, %@, %d, %p
Workout, nil event dictionary, %@
Workout, Error, %d, %@
Workout, ERROR, %d, %@
Workout, DID START at %f, %@
Workout, DID STOP at %f, %@
Workout, WILL PAUSE at %f, %@
Workout, WILL RESUME at %f, %@
Workout, SUGGESTED STOP at %f, %@
Workout, Unrecognized event, %@
Workout, Unrecognizable event dictionary, %@
Generic
const Element CMVectorBufferBase<float, 3>::mean(size_t, size_t) const [T = float, N = 3]
CoreLocation: Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 96,mean() on empty buffer.
const T &CMQueue<CMVector<float, 3> >::operator[](const size_t) const [T = CMVector<float, 3>]
CoreLocation: Assertion failed: i < fCapacity, file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMQueue.h, line 207,i,%zu,capacity,%u.
Element CMVectorBufferBase<float, 3>::back() const [T = float, N = 3]
CoreLocation: Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 148,back() on empty buffer.
const Element CMVectorBufferBase<float, 3>::variance(size_t, size_t) const [T = float, N = 3]
CoreLocation: Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 213,variance() on empty buffer.
v8@?0
CoreLocation: Empty payload, returning
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
com.apple.CoreMotion.CMSedentaryTimer.client
com.apple.CoreMotion.CMSedentaryTimer.daemon
-[CMSedentaryTimer_Internal init]_block_invoke
CoreLocation: SedentaryAlarm,Error response,%{public}d
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
kCLConnectionMessageSedentaryTimerIsArmed
-[CMSedentaryTimer_Internal _handleStartStopTimerResponse:withHandler:]_block_invoke
CoreLocation: SedentaryAlarm,Error start / stop response,%{public}d
-[CMSedentaryTimer_Internal _handleStartStopTimerResponse:withHandler:]
CoreLocation: SedentaryAlarm,Error start / stop response.
kCLConnectionMessageSedentaryTimerStart
kCLConnectionMessageSedentaryTimerStop
-[CMSedentaryTimer_Internal _handleAlarmDataResponse:withHandler:]_block_invoke
CoreLocation: SedentaryAlarm,Error query response,%{public}d
-[CMSedentaryTimer_Internal _handleAlarmDataResponse:withHandler:]
CoreLocation: SedentaryAlarm,Error parsing alarm data.
kCLConnectionMessageSedentaryTimerAlarm
kCLConnectionMessageWatchdog
timerArmed
TB,N,GisTimerArmed,V_timerArmed
kCLConnectionMessageSedentaryTimerIsAvailable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMSedentaryTimer.mm
<Unknown File>
Invalid parameter not satisfying: %@
handler
startTime
queryHandler
kCLConnectionMessageSedentaryTimerQuery
updateHandler
kCLConnectionMessageSubscribeKey
_internal
T@"CMSedentaryTimer_Internal",R,N,V_internal
kCLConnectionMessageMotionActivityAvailable
com.apple.CoreMotion.CMMotionActivityManager
kCLConnectionMessageMotionActivityUpdate
-[CMMotionActivityManager init]_block_invoke
CoreLocation: Error occurred while trying to retrieve motion state update: CMErrorDomain Code:%{public}d
CoreLocation: Unable to parse kCLConnectionMessageMotionActivityUpdate message!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMMotionActivityManager.mm
start
queue
kCLConnectionMessageMotionActivityQuery
kNatalieDataCodingKeyStartDate
kNatalieDataCodingKeyRecordId
kNatalieDataCodingKeySession
kNatalieDataCodingKeyMets
kNatalieDataCodingKeyNatalies
kNatalieDataCodingKeyBasalNatalies
kNatalieDataCodingKeySourceId
None
Walking
Running
Cycling
OutdoorCycling
IndoorCycling
Yoga
Dancing
CrossTraining
Elliptical
Climbing
StairClimbing
Rowing
ResistanceTraining
GenericWorkout
OutdoorWalking
IndoorWalking
OutdoorRunning
IndoorRunning
Calisthenics
DownhillSkiing
%@, <recordId %lu, startDate %@, session %@, mets %@, natalies %@, basalNatalies %@, sourceId %@>
recordId
Tq,R,N
sourceId
T@"NSUUID",R,N
startDate
T@"NSDate",R,N
mets
T@"NSNumber",R,N
natalies
basalNatalies
session
kCMAccelerationCodingKeyX
kCMAccelerationCodingKeyY
kCMAccelerationCodingKeyZ
x %f y %f z %f @ %f
acceleration
T{?=ddd},R,N
CMErrorDomain
assert
%s:%d: assertion failure in %s
mode
enabled
CFRunLoopGetCurrent() == CLMotionCore::instance()->getMotionRunLoop()
kCMAltitudeCodingKeyAltitude
kCMAltitudeCodingKeyPressure
Altitude %f Pressure %f @ %f
relativeAltitude
pressure
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMAltitude.mm
sourceId && startDate && endDate && elevationAscended && elevationDescended
kCMSignificantElevationCodingKeyRecordId
kCMSignificantElevationCodingKeySourceId
kCMSignificantElevationCodingKeyStartDate
kCMSignificantElevationCodingKeyEndDate
kCMSignificantElevationCodingKeyElevationAscended
kCMSignificantElevationCodingKeyElevationDescended
%@, <startDate, %@, endDate, %@, elevationAscended, %@ elevationDescended, %@>
supportsSecureCoding
TB,R
TQ,R,N,VfRecordId
T@"NSUUID",R,N,VfSourceId
T@"NSDate",R,N,VfStartDate
endDate
T@"NSDate",R,N,VfEndDate
elevationAscended
T@"NSNumber",R,N,VfElevationAscended
elevationDescended
T@"NSNumber",R,N,VfElevationDescended
activity
kCLConnectionMessageNameKey
kCLConnectionMessageError
kCMVehicleStateDataCodingKeyTimeRange
kCMVehicleStateDataCodingKeyDeviceId
%@,<startDate %@, endDate %@, deviceId %@>
timeRange
T@"CMMotionTimeRange",R,N
deviceId
T@"NSString",R,N
kCLConnectionMessageVehicleStateIsAvailable
kCLConnectionMessageVehicleStateMostRecentVehicleConnection
kCLConnectionMessageVehicleStateMostRecentInVehicle
kCLConnectionMessageVehicularState
com.apple.locationd
com.apple.springboard
com.apple.locationd.DumpDiagnostics
CFRunLoopRef CLCommonGetRunLoop()
CoreLocation: ***no run loop available***
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: #Warning Changing CLCommon's runloop after it was already established
CoreLocation: #Warning Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %{public}s, errno %{public}d
CoreLocation: cannot open target file: %{public}s, errno %{public}d
CoreLocation: error reading source file: %{public}s
CoreLocation: error writing target file: %{public}s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %{public}s, bzerror %{public}d
CoreLocation: error writing target file: %{public}s, bzerror: %{public}d
CoreLocation: error closing target file: %{public}s, bzerror: %{public}d
compress:%@
__TEXT
Binary Images:
armv6
armv7
unknown
%16p - %lld %c%s %s <
%02X
> %s
CoreLocation: Default handler received message %s
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
CLNameValuePair &CLNameValuePair::operator=(const CLNameValuePair &)
virtual bool CLNameValuePair::loadFromFile(const char *)
CoreLocation: could not deserialize property list from %{public}s
CoreLocation: file %s does not exist... clearing, error, %s
CoreLocation: #Warning Error reading file %{public}s: %{public}s
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %{public}s
CoreLocation: Could not write data to disk %{public}s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %{public}s
virtual bool CLNameValuePair::saveToBinaryFile(const char *, CLNVPDataProtection) const
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %{public}s does not have element %{public}d in array of size %{public}ld
CoreLocation: key %{public}s does not have element %{public}d in non-array type %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %{public}s (%{public}d of %{public}ld)
CoreLocation: specified index %{public}d not applicable to type %{public}lu for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
CoreLocation: could not open write stream
CoreLocation: could not write data, error code, %{public}ld, error domain, %{public}s
unknown error
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %{public}ld (%{public}s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %{public}lu vs %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
CoreLocation: can't convert %{public}u data bytes
CoreLocation: type IDs do not match - %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
error == 0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Daemon/Core/CSI/CLMachThreadSupport.mm
lock
<unnamed>
virtual void BasicMutex::lock()
CoreLocation: #Warning TIMEOUT: Waited %f seconds to aquire lock '%s' (%p)
info->fCount >= 0
(info->fCount == 0) || (info->fOwner == curThread)
(info->fCount > 0) || (info->fOwner == __null)
virtual void BasicMutex::unlock()
CoreLocation: #Warning TIMEOUT: Held lock '%s' (%p) for %f seconds
info->fCount > 0
unlock
com.apple.locationd.Motion
Calorimetry
Swimming
Skiing
Activity
ActivityAlarm
Pedometer
Motion
Pocket
Orientation
Gesture
EarGesture
WakeGesture
DeviceMotion
Sensors
Compass
Gyro
Accel
Pressure
Fall
Spring
SensorRecorder
MotionSync
MotionAlarm
Odometer
HeartRate
Health
com.apple.locationd.Position
Position
Proximity
GeneralCLX
WifiPosition
GeoFencing
Gnss
Emergency
Raven
MapMatcher
Microlocation
NMEA
com.apple.locationd.Core
Client
Core
Routine
Harvester
Notifier
RecordReplay
com.apple.locationd.Utility
Database
Network
Utility
com.apple.locationd.Legacy
Direct
Location
Sensor
Fence
IsSimulator
<null>
<name>
<version>
<build>
hw.model
IOPlatformExpertDevice
IOPlatformSerialNumber
CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke
CoreLocation: unknown hardware type %{private}d
watch-companion
InternalBuild
locationd
com.apple.demo-settings
StoreDemoMode
FProgramNumber
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMWorkout.mm
sessionId
type < kCMWorkoutTypeMax
kCMWorkoutDataCodingKeySessionId
kCMWorkoutDataCodingKeyType
OutdoorWheelchairWalk
OutdoorWheelchairRun
Unhandled workout type
%@, <sessionId %@, type, %@>
type >= kCMWorkoutTypeNone && type <= kCMWorkoutTypeMax
session >= kCMNatalieDataSessionNone && session <= kCMNatalieDataSessionMax
type
location < kCMSwimWorkoutLocationMax
-[CMSwimWorkout initWithSessionId:location:poolLength:]
CoreLocation: Workout, pool length %f for workout is too small and may lead to undefined behavior.
kCMWorkoutDataCodingKeySwimLocation
kCMWorkoutDataCodingKeyPoolLength
Pool
OpenWater
%@, <sessionId %@, type, kCMWorkoutTypeSwimming, location, %@, poolLength, %f>
location
poolLength
Td,R,N
workoutType == kCMWorkoutTypeIndoorRunning || workoutType == kCMWorkoutTypeIndoorWalking || workoutType == kCMWorkoutTypeIndoorCycling || workoutType == kCMWorkoutTypeElliptical || workoutType == kCMWorkoutTypeStairClimbing || workoutType == kCMWorkoutTypeRowing
kCMWorkoutDataCodingKeyFitnessMachineManufacturerName
kCMFitnessMachineWorkoutDataCodingKeyModel
%@, <sessionId %@, type, %@, manufacturerName, %@, model, %@>
manufacturerName
model
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: could not get mutable store path for type, %{public}d
/System/Library/Frameworks/CoreLocation.framework
.plist
peer
T@"CLIntersiloRecordingProxy",R,N,V_peer
T@"CLIntersiloRecordingProxy",R,W,N,V_peer
%@ServiceProtocol
%@Protocol
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
valid
TB,N
(id)[NSNull null] == self.delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLIntersiloRecordingProxy.mm
-[CLIntersiloRecordingProxy setProxyPairRecordingInboundTriggerNames:outboundTriggerNames:]
!self.delegateName
!_recordingWriter
-[CLIntersiloRecordingProxy setRecordingWriter:]
triggeringDelegateNames
T@"NSSet",&,N,V_triggeringDelegateNames
delegateName
T@"NSString",R,C,N,V_delegateName
kCMDeviceMotionCodingKeyQuaternionX
kCMDeviceMotionCodingKeyQuaternionY
kCMDeviceMotionCodingKeyQuaternionZ
kCMDeviceMotionCodingKeyQuaternionW
kCMDeviceMotionCodingKeyUserAccelerationX
kCMDeviceMotionCodingKeyUserAccelerationY
kCMDeviceMotionCodingKeyUserAccelerationZ
kCMDeviceMotionCodingKeyRotationRateX
kCMDeviceMotionCodingKeyRotationRateY
kCMDeviceMotionCodingKeyRotationRateZ
kCMDeviceMotionCodingKeyMagneticFieldX
kCMDeviceMotionCodingKeyMagneticFieldY
kCMDeviceMotionCodingKeyMagneticFieldZ
kCMDeviceMotionCodingKeyMagneticFieldCalibrationLevel
kCMDeviceMotionCodingKeyDoingYawCorrection
kCMDeviceMotionCodingKeyDoingBiasEstimation
kCMDeviceMotionCodingKeyHeading
QuaternionX %f QuaternionY %f QuaternionZ %f QuaternionW %f UserAccelX %f UserAccelY %f UserAccelZ %f RotationRateX %f RotationRateY %f RotationRateZ %f MagneticFieldX %f MagneticFieldY %f MagneticFieldZ %f MagneticFieldAccuracy %d Heading %f @ %f
doingYawCorrection
TB,R,N
doingBiasEstimation
magneticFieldCalibrationLevel
Ti,R,N
attitude
T@"CMAttitude",R,N
rotationRate
gravity
userAcceleration
magneticField
T{?={?=ddd}i},R,N
heading
kCMAttitudeCodingKeyQX
kCMAttitudeCodingKeyQY
kCMAttitudeCodingKeyQZ
kCMAttitudeCodingKeyQW
%@ Pitch: %f, Roll: %f, Yaw: %f
roll
pitch
rotationMatrix
T{?=ddddddddd},R,N
quaternion
T{?=dddd},R,N
kCMAmbientPressureCodingKeyPressure
kCMAmbientPressureCodingKeyTemperature
Pressure %f Temeprature %f @ %f
ambientPressure
T{?=dd},R,N
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Daemon/Shared/Utilities/CLPreferences.mm
containsInternal
%llu, %f, %f, (%f, %f, %f)
identifier
TQ,R,V_identifier
T@"NSDate",R
%llu, %f, %f, (%f, %f, %f), %f
temperature
Tf,R
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMSensorRecorder.mm
Unexpected ptr exceeding size of buffer, block id, %llu, block offset %llu, size, %zu
Unexpected sensor type!
-[CMSensorDataList _updatePointers]
CoreLocation: Unable to allocate buffer for sensor recorder.
Data pointer returned should be valid
com.apple.CoreMotion.CMSensorRecorderInternal
kCLConnectionMessageSensorRecorderGetMetaByID
kCLConnectionMessageSensorRecorderGetMetaSinceID
-[CMSensorRecorderInternal _newMetaUsingMessage:withIdentifier:forType:]_block_invoke
CoreLocation: Error occurred while trying to retrieve accelerometer record!
kCLConnectionMessageSensorRecorderGetMetasByDateRange
-[CMSensorRecorderInternal newMetaFrom:to:forType:]_block_invoke
CoreLocation: Error occurred while trying to retrieve accelerometer records!
kCLConnectionMessageSensorRecorderWriteSensorDataToFileByDateRange
-[CMSensorRecorderInternal writeSensorDataToFile:from:to:forType:]_block_invoke
CoreLocation: Successfully wrote accelerometer data to file.
CoreLocation: Error occurred while trying to write accelerometer data to file!
kCLConnectionMessageSensorRecorderSetSensorSampleRate
-[CMSensorRecorderInternal setSensorSampleRate:forType:]_block_invoke
CoreLocation: Successfully set sensor sample rate.
CoreLocation: Error occurred while trying to set sensor sample rate!
kCLConnectionMessageSensorRecorderGetDataByID
-[CMSensorRecorderInternal newDataByID:metaID:forType:]_block_invoke
CoreLocation: Error occurred while trying to retrieve accelerometer data!
kCLConnectionMessageSensorRecorderSensorAvailable
+[CMSensorRecorder isRecordingAvailableForType:]
CoreLocation: Response invalid.
+[CMSensorRecorder isAuthorizedForRecording]
*startTime
endTime
startTime must be <= to endTime
startTime must be within 3 days of today.
-[CMSensorRecorder sensorDataFromDate:toDate:forType:]
CoreLocation: #Notice -[%{public}s %{public}s] fromDate has been adjusted so that the duration requested is <= 12 hours.
-[CMSensorRecorder sendSensorDataToUrl:fromDate:toDate:forType:]
CoreLocation: #Notice Unable to get file handle for URL %{public}@
duration > 0.0
kCLConnectionMessageSensorRecorderRecordFor
-[CMSensorRecorder recordDataType:forDuration:]
rate <= 100
timestamp
accel_x
accel_y
accel_z
rotation_x
rotation_y
rotation_z
CLKeyboardState
void CLKeyboardState::registerForKeyboardUpdates()
CoreLocation: registering for keyboard updates
IOServiceFirstMatch
AppleHIDKeyboardEventDriverV2
IOServiceTerminate
void CLKeyboardState::registerForKeyboardUpdates()_block_invoke
CoreLocation: #Warning Failed to register for keyboard updates. Could not register for AppleHIDKeyboardEventDriverV2 service kIOFirstMatchNotification and kIOTerminatedNotification.
CoreLocation: #Warning Failed to register for keyboard updates. Could not create KeyboardConnectNotificationPort and KeyboardConnectNotificationPort
void CLKeyboardState::unregisterForKeyboardUpdates()
CoreLocation: unregistering for keyboard updates
CLCompassDatabase
kCMLogItemCodingKeyTimestamp
com.apple.locationd.spi
com.apple.locationd.synchronous
void CLInternalSetGestureServiceEnabled(Boolean)
CoreLocation: CLInternalSetGestureServiceEnabled failed
CMSendWakeGestureNotification
CMSendWakeGestureState
-[CMWakeGesturePhone init]
CoreLocation: Could not create instance of CLGestureService. Is wake gesture supported on this platform?
com.apple.CoreMotion.CMWakeGesturePhonePrivateQueue
SpringBoard
CoreLocation: Process: %{public}@, IsPrimary: %{public}d
IOPropertyMatch
backlight-control
IOGeneralInterest
CoreLocation: Failed to register for backlight service notification
com.apple.backboardd.backlight.changed
-[CMWakeGesturePhone init]_block_invoke
CoreLocation: Backlight level notification (%{public}llu)
CoreLocation: Unable to send display state
v12@?0i8
-[CMWakeGesturePhone startWakeGestureUpdates]
CoreLocation: Start Wake Gesture Updates
com.apple.CoreMotion.WakeGesturePreferencesChanged
-[CMWakeGesturePhone stopWakeGestureUpdates]
CoreLocation: Stop Wake Gesture Updates
-[CMWakeGesturePhone simulateGestureWithDelay:Duration:]_block_invoke
CoreLocation: Simulating gesture: delay,%f,duration,%f,success,%d
-[CMWakeGesturePhone invokeDelegateWithState:]_block_invoke
CoreLocation: Unable to invoke delegate. Please call startWakeGestureUpdates first.
-[CMWakeGesturePhone loadPreferences]
CoreLocation: Loaded Preferences. Latency Alert: %d, Latency Threshold: %d, Audio Alert: %d
Unknown
Detected
Dismissed
Rejected
PreDetection
Switched To Running
Switched To Normal
Suppressed
Unexpected
Normal
FaceUpStatic
FaceUpMoving
OtherStatic
OtherMoving
Landscape
VerticalOther
Portrait
PortraitUpsideDown
FaceDownStatic
FaceDownMoving
Invalid
Nominal
Level
FaceUpSlanted
FaceUpPortrait
PortraitSlanted
FaceDown
Peek
-[CMWakeGesturePhone onNotificationControl:]
CoreLocation: Gesture state %{public}zd is invalid!
CoreLocation: Gesture state updated to %{public}d
CoreLocation: Invalid CMSendWakeGestureNotification payload!
-[CMWakeGesturePhone onWakeUpdated:]_block_invoke
CoreLocation: Gesture notification: %{public}d(%{public}@), Mode:%{public}@, Start:%{public}@, End:%{public}@, HostAwake, %{public}d
CoreLocation: Gesture state notified,%{public}@,currentTime,%{public}f
CoreLocation: No valid delegate found.
-[CMWakeGesturePhone(BiometricKit) reenableDetectedStateRecognition]_block_invoke
CoreLocation: Attempt re-enabling detected state recognition
biometrickitd
motmonObjc
[intendedClientList containsObject:fProcessName]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMWakeGesturePhone.mm
CoreLocation: Unable to send reenable-detected hint
com.apple.CoreMotion.CMOdometer.internal
com.apple.CoreMotion.CMOdometer.callback
-[CMOdometerProxy _startDaemonConnection]_block_invoke
CoreLocation: Failed with CMError code %{public}d
kCLConnectionMessageOdometerGpsAvailability
CoreLocation: CMOdometer client connection interrupt, %@, %d, %p
kCLConnectionMessageStartOdometerUpdate
-[CMOdometerProxy _startOdometerUpdatesWithHandler:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageOdometerUpdate message!
odometer
T@"CMOdometer",N,V_odometer
totalDistance
Td,V_totalDistance
averageSpeed
Td,V_averageSpeed
Td,V_startDate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMOdometer.mm
-[CMOdometer startOdometerUpdatesForActivity:withHandler:]
CoreLocation: #Warning The requested activity %ld is not yet supported
CoreLocation: #Warning Unsupported activity requested
odometerProxy
T@"CMOdometerProxy",R,N,V_odometerProxy
delegate
T@"<CMOdometerDelegate>",N,V_delegate
kExerciseMinuteDataCodingKeyStartDate
kExerciseMinuteDataCodingKeyRecordId
kExerciseMinuteDataCodingKeySourceId
%@, <recordId %lu, startDate %@, sourceId %@>
kCMRotationRateCodingKeyX
kCMRotationRateCodingKeyY
kCMRotationRateCodingKeyZ
virtual void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::removeClient(int) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %{public}s; client %{public}d does not exist
virtual bool CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
(fMutex).__assertOwned()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Daemon/Shared/Utilities/CLNotifier.h
invokeClientWithData
virtual bool CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %{public}s; notification %{public}s not found
notifyClientsWithData
virtual void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, bool, int, bool) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %s; client %d has deregistered, not notifying %s
invokeClientsWithData
void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::invokeClientsWithData(const Notification_T &, CLNotifierData *) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %{public}s; unknown client %{public}d
virtual void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::listClients() [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %s; already shutdown; not listing clients
CoreLocation: %s; listing clients, num clients: %zu
CoreLocation: %s; clients, id: %d, notification: %d
virtual bool CLGyroCalibrationDatabaseRemote::getBiasFit(CLMotionTypeGyroBiasFit &)
CoreLocation: successfully got GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
CoreLocation: Warning: can't get GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
kCMCatherineDataCodingKeyCatherine
kCMCatherineDataCodingKeyConfidence
%@,<catherine %f confidence %f @ %f>
catherine
Td,R,N,V_catherine
confidence
Td,R,N,V_confidence
com.apple.CoreMotion.CMSpringTracker
-[CMSpringTrackerInternal init]_block_invoke
CoreLocation: Failed with error, %{public}d
-[CMSpringTrackerInternal init]_block_invoke_2
CoreLocation: Client connection interrupt, %@, %d, %p
kCLConnectionMessageSpringTrackerIsTracking
kCLConnectionMessageSpringTrackerStart
kCLConnectionMessageSpringTrackerStop
-[CMSpringTrackerInternal _handleStartStopResponse:handler:]
CoreLocation: Error responding to start / stop tracking request, handler unavailable.
CoreLocation: Error parsing start / stop response.
00000000-0000-0000-0000-000000000000
kCLConnectionMessageSpringTrackerQuery
-[CMSpringTrackerInternal _querySpringDataFromRecord:handler:]_block_invoke
CoreLocation: Error parsing query response.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMSleepTracker.mm
T@"CMSpringTrackerInternal",R,N,V_internal
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMVO2MaxData.mm
kVO2MaxDataCodingMets
kVO2MaxDataCodingKeyStartDate
kVO2MaxDataCodingKeyMets
kVO2MaxDataCodingKeyMetSource
kVO2MaxDataCodingKeyHeartRate
kVO2MaxDataCodingKeyHeartRateConfidence
kVO2MaxDataCodingKeyGrade
kVO2MaxDataCodingKeyGradeType
kVO2MaxDataCodingKeyCadence
kVO2MaxDataCodingKeyPace
kVO2MaxDataCodingKeyHasGPS
kVO2MaxDataCodingKeyHasStrideCal
kVO2MaxDataCodingKeyWorkoutType
sample
%@, <startDate, %@, mets, %.3f, metSource, %lu, hr, %.3f, hrConf, %.3f, grade, %.3f, gradeType, %lu, cadence, %.3f, pace, %.3f, hasGPS, %d, hasStrideCal, %d, workoutType, %lu>
TQ,R,N
metSource
heartRate
heartRateConfidence
grade
gradeType
cadence
pace
hasGPS
hasStrideCal
workoutType
compass
kCMMotionTimeRangeCodingKeyStartDate
kCMMotionTimeRangeCodingKeyEndDate
%@,<startDate %@, endDate %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMMotionTimeRange.mm
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMCallHandednessManager.mm
CMCallHandednessManager is not supported on this platform. Use isCallHandednessAvailable to avoid this error
com.apple.CoreMotion.CMCallHandednessPrivateQueue
-[CMCallHandednessManager startCallHandednessUpdates]_block_invoke
CoreLocation: Started CallHandedness updates. Current Time: %f
CoreLocation: CallHandedness service already started!
-[CMCallHandednessManager stopCallHandednessUpdates]_block_invoke
CoreLocation: Stopped CallHandedness updates. Current Time: %f
CoreLocation: CallHandedness service already stopped!
-[CMCallHandednessManager onCallHandednessStateUpdated:]_block_invoke
CoreLocation: CallHandedness Detection: %ld
T@"<CMCallHandednessDelegate>",N,V_delegate
CMPickupService
virtual void CMPickupService::numberOfSpectatorsChanged(int, size_t)
CoreLocation: CMPickupService Spectators, %zd
CoreLocation: CMPickupService stopped, %zd
CoreLocation: CMPickupService started, %zd
CoreLocation: CMPickupService expects only 1 client
void CMPickupService::startDetection()
CoreLocation: #Warning No accelerometer; not starting CMPickupDetector detection!
CoreLocation: Starting PickupDetector detection with accelFrequency %.1f
static void CMPickupService::onAccelerometerData(const CLAccelerometer::Sample *, void *)
CoreLocation: Sending CMPickupDetector notification.
kCalorieUserInfoCodingKeyAge
kCalorieUserInfoCodingKeyGender
kCalorieUserInfoCodingKeyHeight
kCalorieUserInfoCodingKeyWeight
kCalorieUserInfoCodingKeyCondition
Male
Female
%@, <age %f, gender %@, height %f, weight %f, condition %ld>
gender
height
weight
condition
com.apple.locationd.vehicle.connected
com.apple.locationd.vehicle.disconnected
com.apple.locationd.vehicle.exit
com.apple.locationd.vehicular.changed
getMedianInPlace
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMPressureUtilities.h
size > 0
silo
T@"CLSilo",R,N
vendor
T@"CLServiceVendor",R,N
T@"CLSilo",R,N,V_silo
T@"CLServiceVendor",R,N,V_vendor
kSedentaryTimerDataCodingKeyStartDate
kSedentaryTimerDataCodingKeyFiredDate
kSedentaryTimerDataCodingKeyAlarmType
kSedentaryTimerDataCodingKeyDidWake
Reminder
Final
Reset
ActiveReminder
InVehicleReminder
%@, <startDate %@, firedDate %@, alarmType %@, didWake %@>
firedDate
alarmType
didWake
PreserveTimestamp
PrimaryUsagePage
PrimaryUsage
successfully
unsuccessfully
CoreLocation: Unrecognized notification
com.apple.CoreMotion.CMExerciseMinute.InternalQueue
com.apple.CoreMotion.CMExerciseMinute.AppQueue
-[CMExerciseMinuteInternal init]_block_invoke
CoreLocation: ExericseMinute, Failed with CMError code %{public}d
-[CMExerciseMinuteInternal init]_block_invoke_2
CoreLocation: ExericseMinute, client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageExerciseMinuteUpdate
-[CMExerciseMinuteInternal _stopUpdates]_block_invoke
CoreLocation: ExerciseMinute, Error stopping updates, no active clients.
-[CMExerciseMinuteInternal _startUpdatesWithHandler:]_block_invoke
CoreLocation: ExerciseMinute, Unable to parse update.
kCLConnectionMessageExerciseMinuteQuery
-[CMExerciseMinuteInternal _queryExerciseMinutesFromRecord:handler:]_block_invoke
CoreLocation: ExerciseMinute, Unable to parse query.
kCLConnectionMessageNatalimetryAvailable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMExerciseMinute.mm
com.apple.locationd.activity
T@"CMExerciseMinuteInternal",R,N,V_internal
bool CLMotionNotifier::addDispatcherPrivate(int, CLMotionNotifier::Dispatcher *, const CFTimeInterval &)
CoreLocation: Requested update interval cannot be == 0.0 and dispatcher cannot be NULL. Use interval < 0.0 for spectator.
CoreLocation: CLMotionNotifier::addDispatcherPrivate UpdateInterval is zero!
CoreLocation: CLMotionNotifier::addDispatcherPrivate Added dispatcher for notification:%d, Update Interval:%f(%.1fHz)
void CLMotionNotifier::setUpdateIntervalPrivate(int, CLMotionNotifier::Dispatcher *, const CFTimeInterval &)
CoreLocation: Unknown (notification,dispatcher) pair: (%d, %p)
CoreLocation: CLMotionNotifier::setUpdateIntervalPrivate RequestedUpdateInterval:%f, UpdateInterval:%f
void CLMotionNotifier::updateSamplePeriods(int)
CoreLocation: CLMotionNotifier::updateSamplePeriod UpdateInterval:%f
null
No value written for object
static void CLMotionCore::create()
CoreLocation: Could not get parent thread parameters
CoreLocation: Motion runloop ref still not set!
CoreLocation: Could not get scheduling parameters for motion thread, error = %{public}d
wrapRunLoopWithAutoreleasePoolHandler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Motion/CLMotionCore.mm
count > 0
com.apple.CoreMotion.MotionThread
com.apple.CoreMotion
MotionThreadPriority
static void *CLMotionCore::runMotionThread(void *)
CoreLocation: could not create runloop source
static void *CLMotionCore::runMotionThread(void *)_block_invoke_2
CoreLocation: Ping timer fired, resetting watchdog
static void *CLMotionCore::runMotionThread(void *)_block_invoke_3
CoreLocation: Motion thread deadlock watchdog after %d petting
com.apple.CoreMotion.ThreadDeadlockCount
%@.%@
CoreLocation: Failed to create watchdog timer
v16@?0^{__CFRunLoopTimer=}8
CoreLocation: Motion thread exiting
CLPocketStateService
com.apple.CoreMotion.CLPocketStateService
v16@?0@"CMMotionActivity"8
void CLPocketStateService::enableDetection()
CoreLocation: Could not subscribe to system power notifications
CoreLocation: enabled detection successfully
void CLPocketStateService::determineState()
CoreLocation: Device Stationary?, %s, Orientation, %s, Proximity, %s
1 prox corroborated
2 not (FaceDown and static)
3 no prox
4 FaceDown only
5 not FaceDown, prox uncovered
OutOfPocket
FaceDownOnTable
InPocket
Uncovered
Covered
Not FaceDown
started
extended
ignored
void CLPocketStateService::transitionToState(CLPocketStateInternalType, const char *)
CoreLocation: Transition, From: %s, To: %s, %s
CoreLocation: %f: Device Stationary?, %s, Orientation, %s, Proximity, %s, State, %s
virtual void CLPocketStateService::numberOfSpectatorsChanged(int, size_t)
CoreLocation: disable Detection
com.apple.CoreMotion.PocketState.%@
void CLPocketStateService::queryInitiated(NSTimeInterval)
CoreLocation: %f: monitorTime, %f, bksMonitorTime, %f, bksDelay, %f, proxStatus, %s
proxStatus.started
proxStatus.extended
proxStatus.ignored
void CLPocketStateService::feedProximityData(const uint32_t)_block_invoke
CoreLocation: %f: ProxDelay,%f
proxBootDelay
CoreLocation: Proximity detection mask: %u, Last prox state: %s
void CLPocketStateService::onSystemPowerChanged(io_service_t, uint32_t, void *)
CoreLocation: received WillSleep
CoreLocation: received WillPowerOn
CoreLocation: received HasPoweredOn
com.apple.CoreMotion.CMMotionAlarmManager
-[CMMotionAlarmManagerInternal init]_block_invoke
-[CMMotionAlarmManagerInternal init]_block_invoke_2
CoreLocation: CMMotionAlarmManager client connection interrupt, %@, %d, %d, %p
-[CMMotionAlarmManagerInternal _teardown]
CoreLocation: Tearing down CMMotionAlarmManagerInternal
kCLConnectionMessageMotionAlarmFire
-[CMMotionAlarmManagerInternal _stopListeners]_block_invoke
CoreLocation: Unable to stop MotionAlarm data updates as we are are not receiving updates.
-[CMMotionAlarmManagerInternal _registerAlarm:error:]
CoreLocation: Unable to register motion alarm. No delegate assigned.
CoreLocation: Unable to register motion alarm. Invalid alarm object.
kCLConnectionMessageMotionAlarmRegister
-[CMMotionAlarmManagerInternal _registerAlarm:error:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageMotionAlarmRegister message.
-[CMMotionAlarmManagerInternal _unregisterAlarm:error:]
CoreLocation: Unable to unregister motion alarm. No delegate assigned.
CoreLocation: Unable to unregister motion alarm. Invalid alarm object.
kCLConnectionMessageMotionAlarmUnregister
-[CMMotionAlarmManagerInternal _unregisterAlarm:error:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageMotionAlarmUnregister message.
-[CMMotionAlarmManagerInternal _acknowledgeAlarm:error:]
CoreLocation: Unable to acknowledge alarm, alarm does not exist.
kCLConnectionMessageMotionAlarmAcknowledge
-[CMMotionAlarmManagerInternal _acknowledgeAlarm:error:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageMotionAlarmAcknowledge message.
CoreLocation: Unable to call kCLConnectionMessageMotionAlarmAcknowledge message. Code: %d
kCLConnectionMessageMotionAlarmLaunchRemoteApplication
-[CMMotionAlarmManagerInternal _handleAlarmFire:]
CoreLocation: Unable to fire motion alarm. Received invalid message response.
CoreLocation: Unable to fire motion alarm %@. Could not locate valid alarm to fire.
_DefaultManager
T@"<CMMotionAlarmDelegateProtocol>",N,V_delegate
name
T@"NSString",R,N,V_name
com.apple.CoreMotion.CMNatalimeter
-[CMNatalimeterInternal init]_block_invoke
CoreLocation: Calorie response failed with error %{public}d
-[CMNatalimeterInternal init]_block_invoke_2
-[CMNatalimeterInternal init]_block_invoke_3
CoreLocation: Unable to set activity session on interrupted connection.  locationd and framework client states are not in sync!
v16@?0q8
-[CMNatalimeterInternal _setSession:withCompletionHandler:]
CoreLocation: #Notice %{public}s (%{public}d) setting session %{public}d %{public}p
kCLConnectionMessageNatalimetrySetSession
-[CMNatalimeterInternal _setSession:withCompletionHandler:]_block_invoke
CoreLocation: Unable to set session. Unexpected user error
CoreLocation: Unable to set session. Error code %{public}d
CoreLocation: #Notice %{public}s (%{public}d) received status %{public}d after setting session %{public}d %{public}p
kCLConnectionMessageNatalimetryQuery
-[CMNatalimeterInternal _queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:]_block_invoke
CoreLocation: %@, pid, %d, query since record, %@, %p
kCLConnectionMessageNatalimetryUpdate
-[CMNatalimeterInternal _startAbsoluteNatalimetryDataUpdatesWithHandler:]_block_invoke
CoreLocation: %@, pid, %d, update, %@, %p
CoreLocation: Error parsing update.
-[CMNatalimeterInternal _stopAbsoluteNatalimetryDataUpdates]_block_invoke
CoreLocation: Error stopping calorie updates, not active clients.
kCLConnectionMessageNatalimetryCalibrationPromptsNeeded
-[CMNatalimeterInternal _promptsNeeded]
CoreLocation: Prompts needed response invalid.
CoreLocation: Querying for calibration prompts encountered an error: %{public}ld.
kCLConnectionMessageNatalimetryGetUserProfile
+[CMNatalimeter userProfile]
CoreLocation: UserProfile, Invalid response
kCLConnectionMessageNatalimetrySetUserProfile
+[CMNatalimeter setUserProfile:error:]
CoreLocation: UserProfile, Error while setting, %{public}d
kCLConnectionMessageNatalimetryResetCalibration
+[CMNatalimeter resetCalibrationDataWithError:]
CoreLocation: Unable to reset calibration data. Error code %{public}ld.
CoreLocation: Invalid response to reset calibration.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMNatalimeter.mm
session >= 0 && session < kCMNatalieDataSessionMax
userInfo
activeCalories
+[CMNatalimeter computeTimeToActiveCalories:user:workoutType:]
CoreLocation: TimeToActiveCalories is negative: timeToActiveCalories, %f, %{private}@
CoreLocation: TimeToActiveCalories, %f, target, %f, workoutType, %ld, %{private}@
T@"CMNatalimeterInternal",R,N,V_internal
ERROR
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
.log
com.apple.locationd.log.compression
vlog
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Logging/CLLog.mm
newFullContentLength == fullContentLength
'\n' == buffer[fullContentLength - 1]
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
.bz2
%s,%s,Failed to move aside log file %s (%d)
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Oct 25 2017
21:07:43
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
com.apple.timed
%s,%s,dumping internal buffer
%s,%s,copying gll.log
LogNatalimetry
LogCalorimetry
userinfo
cache
%s,%s,could not copy %s log
WARNING
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STATUS
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
CLCircularLogBuffer
kCMMagneticFieldCodingKeyX
kCMMagneticFieldCodingKeyY
kCMMagneticFieldCodingKeyZ
void CLWriteStackshot(const char *, _Bool)
CoreLocation: #Warning stackshot only available on device
T@"<CMAnomalyDelegate>",N,V_delegate
com.apple.CoreMotion.CMHealthTracker.InternalQueue
com.apple.CoreMotion.CMHealthTracker.AppQueue
-[CMHealthTrackerInternal init]_block_invoke
CoreLocation: Failed with code %{public}d
-[CMHealthTrackerInternal init]_block_invoke_2
kCLConnectionMessageMetMinutesQuery
-[CMHealthTrackerInternal _queryMetMinutesFromDate:toDate:handler:]_block_invoke
CoreLocation: METMinutes,Unable to parse query response
kCLConnectionMessageVO2MaxInputsQuery
-[CMHealthTrackerInternal _queryVO2MaxInputsFromRecord:handler:]_block_invoke
CoreLocation: VO2MaxData,Unable to parse query response
com.apple.locationd.metminutes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMHealthTracker.mm
fromDate
toDate
com.apple.locationd.vo2max
T@"CMHealthTrackerInternal",R,N,V_internal
fDeviceMotionLiteClientQueue
T@"NSOperationQueue",&,N,V_fDeviceMotionLiteClientQueue
fDeviceMotionLiteFusedHandler
T@?,C,N,V_fDeviceMotionLiteFusedHandler
fDeviceMotionLitePhysicalDeviceID
T@"NSString",&,N,V_fDeviceMotionLitePhysicalDeviceID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMMotionManagerIndigo.mm
-[CMMotionManager startDeviceMotionLiteUpdatesForDeviceID:usingConfiguration:toQueue:withFusedHandler:]
-[CMMotionManager startDeviceMotionLiteFusedUpdatesForDeviceID:toQueue:withHandler:]
CoreLocation: Motion manager asked to start device motion lite updates for device id %@
-[CMMotionManager stopDeviceMotionLiteUpdatesForDeviceID:]
CoreLocation: Motion manager asked to stop device motion lite updates for device id %@
isDeviceMotionLiteAvailable
TB,R,N,GisDeviceMotionLiteAvailable
accelerometerUpdateInterval
Td,D,N
accelerometerAvailable
TB,R,D,N,GisAccelerometerAvailable
accelerometerActive
TB,R,D,N,GisAccelerometerActive
accelerometerData
T@"CMAccelerometerData",R,D
gyroUpdateInterval
gyroAvailable
TB,R,D,N,GisGyroAvailable
gyroActive
TB,R,D,N,GisGyroActive
gyroData
T@"CMGyroData",R,D
magnetometerUpdateInterval
Td,N
magnetometerAvailable
TB,R,N,GisMagnetometerAvailable
magnetometerActive
TB,R,N,GisMagnetometerActive
magnetometerData
T@"CMMagnetometerData",R
deviceMotionUpdateInterval
attitudeReferenceFrame
TQ,R,D,N
deviceMotionAvailable
TB,R,D,N,GisDeviceMotionAvailable
deviceMotionActive
TB,R,D,N,GisDeviceMotionActive
deviceMotion
T@"CMDeviceMotion",R,D
showsDeviceMovementDisplay
__null == fConnection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/IPC/CLConnection.mm
~CLConnection
__null == fDestructionHandler
fEventQueue
initializeConnection_nl
void CLConnection::handleMessage(std::shared_ptr<CLConnectionMessage>)
CoreLocation: #Warning Unhandled message %s
bool CLConnection::sendMessageInternal(std::shared_ptr<CLConnectionMessage>, xpc_handler_t)
CoreLocation: Couldn't create XPC message
v16@?0@"NSObject<OS_xpc_object>"8
kCLConnectionMessageInfoKey
kCLConnectionMessageFileDescriptorKey
id<NSSecureCoding> CLConnectionMessage::getObject() const
CoreLocation: The received data object is invalid: %{public}s
void setEventHandler(xpc_connection_t, CLConnectionMessageHandler, CLConnectionEventHandler, CLConnectionEventHandler, CLConnectionEventHandler *)_block_invoke
CoreLocation: #Warning Connection interrupted!
CoreLocation: #Warning Location connection invalid!
CoreLocation: Got unexpected location event
void handleXPCEvent(xpc_object_t, CLConnectionMessageHandler, CLConnection *)
CoreLocation: Error on message reply (%{public}s)
CoreLocation: Ignoring unexpected event
INFO
VERBOSE
NONE
LOCATION
SENSOR
FENCE
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMElevationData.mm
sourceId && startDate && endDate
kCMElevationDataCodingKeyRecordId
kCMElevationDataCodingKeySourceId
kCMElevationDataCodingKeyStartDate
kCMElevationDataCodingKeyEndDate
kCMElevationDataCodingKeyElevationAscended
kCMElevationDataCodingKeyElevationDescended
%@, <startDate, %@, endDate, %@, elevationAscended, %lu, elevationDescended, %lu>
kCMActivityCodingKeyType
kCMActivityCodingKeyConfidence
kCMActivityCodingKeyMounted
kCMActivityCodingKeyMountedConfidence
kCMActivityCodingKeyIsStanding
kCMActivityCodingKeyTiltAngle
kCMActivityCodingKeyTimestamp
kCMActivityCodingKeyVehicleExitState
kCMActivityCodingKeyEstExitTime
kCMActivityCodingKeyStartTime
%@ @ %f,<startDate,%@,type,%s,confidence,%s,mountedState,%d,mountedConfidence,%s,isStanding,%d,tiltAngle,%f,exitState,%d,estExitTime,%f>
isMoving
isWalking
isRunning
isDriving
maybeExitingVehicle
hasExitedVehicle
com.apple.CoreLocation.ConnectionClient.%p
com.apple.CoreLocation.ConnectionClient.%p.events
B8@?0
void CLConnectionClient::setHandlerForMessage_onQueue(NSString *, CLConnectionMessageHandler)
CoreLocation: Setting handler for message %s
bool CLConnectionClient::sendMessage_onQueue(std::shared_ptr<CLConnectionMessage>, bool)
CoreLocation: #Warning Sending an un-cached message '%{public}s' without first clearing the previously cached value
static void CLConnectionClient::handleDaemonStart(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received daemon start notification for service %s
void CLConnectionClient::createConnection_onQueue()
CoreLocation: Creating connection
v32@?0@8@16^B24
void CLConnectionClient::destroyConnection_onQueue()
CoreLocation: Destroying connection
void CLConnectionClient::sendCachedMessages_onQueue()
CoreLocation: #Warning No cached registration message
com.apple.CoreMotionCMGestureManagerPrivateQueue
kCLConnectionMessageGesture
-[CMGestureManagerInternal startGestureUpdatesWithHandlerPrivate:]_block_invoke
CoreLocation: Could not get dictionary for kCLConnectionMessageGesture
GestureDetected
GestureCanceled
CoreLocation: Unexpected ear gesture state received: %{public}s
kCLConnectionMessagePriorityKey
-[CMGestureManager gestureHandler]_block_invoke
CoreLocation: #Notice Calling ear gesture handler
gestureHandler
T@?,C
com.apple.CoreMotion.CMActivityManagerPrivateQueue
kCLConnectionMessageMotionState
-[CMActivityManagerInternal connect]_block_invoke
CoreLocation: Could not get dictionary for kCLConnectionMessageMotionState
CoreLocation: Error occurred while trying to retrieve activity update: CMErrorDomain Code:%{public}d
CoreLocation: Unable to parse kCLConnectionMessageMotionState message!
kCLConnectionMessageSidebandOverride
CoreLocation: Could not parse dictionary for kCLConnectionMessageSidebandOverride
kCLConnectionMessageMotionStateSim
CoreLocation: Could not parse dictionary for kCLConnectionMessageMotionStateSim
-[CMActivityManagerInternal overrideOscarSideband:withState:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMActivityManager.mm
fSidebandOverrideSemaphore && "fSidbandOverrideSemaphore not initialized."
-[CMActivityManagerInternal simulateMotionState:withState:]
fMotionStateSimSemaphore && "fMotionStateSimSemaphore not initialized."
com.apple.CoreMotion.SidebandOverride
-[CMActivityManager overrideOscarSideband:withState:]_block_invoke
CoreLocation: Timeout occurred after 5 seconds during overrideOscarSideband:withState:.  Wait result = %{public}ld
com.apple.CoreMotion.MotionStateSim
activityHandler
activityAvailable
TB,R,N,GisActivityAvailable
com.apple.CoreMotion.CMPedometerInternalQueue
com.apple.CoreMotion.CMPedometerUpdateQueue
kCLConnectionMessageStartStepCountUpdate
-[CMPedometerProxy init]_block_invoke
CoreLocation: Unable to parse message (%{public}@) when starting updates to queue
CoreLocation: Unable to parse message when starting updates to queue!
kCLConnectionMessagePedometerEvent
-[CMPedometerProxy init]_block_invoke_2
CoreLocation: nil pedometer event dictionary received
CoreLocation: Error pedometer event, %{public}ld
CoreLocation: Unrecognizable pedometer event dictionary
CoreLocation: CMPedometer client connection interrupt, %@, %d, %p
kCLConnectionMessageStepCountQuery
-[CMPedometerProxy _startPedometerUpdatesFromDate:withHandler:]_block_invoke
CoreLocation: Error occurred: %{public}@
v32@?0@"CMPedometerData"8@"NSDictionary"16@"NSError"24
-[CMPedometerProxy _handleQueryResponse:onQueue:withHandler:]
CoreLocation: Unable to parse message (%{public}@) for query response 
CoreLocation: Unable to parse message when checking for availability!
kCLConnectionMessageStepCountRecordQuery
kCLConnectionMessageStrideCalibrationDump
-[CMPedometerProxy _strideCalibrationDump]_block_invoke
CoreLocation: Successfully wrote stride calibration data to file.
CoreLocation: Error occurred while trying to write stride calibration data to file!
-[CMPedometerProxy _queryPedometerCalibrationBinsWithHandler:forType:forRemote:]
CoreLocation: Remote calibrations not available on this platform
kCLConnectionMessagePedometerCalibrationQuery
-[CMPedometerProxy _queryPedometerCalibrationBinsWithHandler:forType:forRemote:]_block_invoke
v16@?0@"NSDictionary"8
kCLConnectionMessageStartStepCountAvailable
kCLConnectionMessagePaceAndCadenceAPIAvailable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMPedometer.mm
-[CMPedometer _queryPedometerDataSinceDataRecord:withHandler:]
CoreLocation: handler not set.
-[CMPedometer sendStrideCalibrationHistoryToFile:]
CoreLocation: fileURL must be a valid fileURL.
CoreLocation: File already exists at URL.
CoreLocation: URL must point to a file path which you have access to write to.
CoreLocation: Unable to dump stride calibration data.
CoreLocation: Unable to serialize stride cal data to json. Error: %@
CoreLocation: Unable to write stride cal data to output file.
pedometerProxy
T@"CMPedometerProxy",R,N,V_pedometerProxy
locationd became fatally blocked. Implicated services: %s
CLIntersiloReplayServiceSilo
%s->%s
returnAddress == senderProxy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLIntersiloReplayService.mm
-[CLIntersiloReplayService handleAbstractInvocation:selectorInfo:selfProxy:senderProxy:]
!_replayReader
-[CLIntersiloReplayService useRecordingFileForPlayback:coordinator:synchronousFilter:]
_replayReader
-[CLIntersiloReplayService loadNextRecordedMessageOnDeck]
outboundTable
T@"NSMapTable",&,N,V_outboundTable
coordinator
T@"<CLIntersiloReplayServiceClientProtocol>",&,N,V_coordinator
filter
T^?,N,V_filter
frozen
static
moving
walking
driving
cycling
semi-stationary
running
moving coarse
in vehicle frozen
in vehicle static
walking slow
vehicular in hand
driving other
cycling leg
Stationary Cycling
Cross Training
Stair Climbing
Indoor Running
Indoor Walking
Pushing Wheelchair
Outdoor Wheelchair Activity
medium
high
virtual void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, bool, int, bool) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::invokeClientsWithData(const Notification_T &, CLNotifierData *) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::removeClient(int) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::listClients() [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CMAvailable
CMAuthorized
CMErrorMessage
CMReturnCode
CMTimeRangeKey
CMOnBodyStatusManagerClassifierTheta0
CMOnBodyStatusManagerClassifierTheta1
CMOnBodyStatusManagerClassifierTheta2
CMOnBodyStatusManagerClassifierTheta3
CMOnBodyStatusManagerClassifierTheta4
CMOnBodyStatusManagerClassifierTheta5
CMOnBodyStatusManagerClassifierMinLowPower
CMOnBodyStatusManagerClassifierMaxLowPower
CMOnBodyStatusManagerClassifierMaxHighPower
CMOnBodyStatusManagerLowBandStart
CMOnBodyStatusManagerLowBandStop
CMOnBodyStatusManagerHighBandStart
CMOnBodyStatusManagerHighBandStop
CMOnBodyStatusManagerWakeThreshold
CMOnBodyStatusManagerOddsThreshold
CMOnBodyStatusManagerMedianFilterSize
CMOnBodyStatusManagerConfidenceThreshold
CMOnBodyStatusManagerUseHysteresis
CMOnBodyStatusManagerUseAngleOverride
CMOnBodyStatusManagerAngleMetricThreshold
CMOnBodyStatusManagerManufacturer
CMPedometerDataObject
CMPedometerDataArray
CMPedometerStartTime
CMPedometerStopTime
CMPedometerSpeedSum
CMPedometerEntryCount
CMPedometerEventKey
CMPedometerCalibrationBins
CLMotionSyncStoreLastUpdate
CMPedometerFetchRemoteCalibrations
CMPedometerCalibrationTypeId
CMNatalimetrySessionId
CMNatalimetryRecordId
CMNatalimetryNatalieData
CMNatalimetryNatalieDataStartDate
CMNatalimetryNatalieDataMets
CMNatalimetryNatalieDataNatalies
CMNatalimetryNatalieDataBasalNatalies
CMNatalimetryNatalieDataSourceId
CMNatalimetryNatalieDataArray
CMNatalimeterSetUserHeightMeter
CMNatalimeterSetUserWeightKG
CMNatalimeterSetUserAgeYr
CMNatalimeterSetUserBiologicalSex
CMNatalimeterSetUserCondition
CMNatalimeterSetUserPal
CMNatalimeterSetUserHrmin
CMNatalimeterSetUserHronset
CMNatalimeterSetUserVo2max
CMNatalimeterSetUserVo2maxReset
CMNatalimeterSetUserHrminReset
CMNatalimeterSetUserRunVo2max
CMNatalimeterSetUserOnsetVo2max
CMOdometerDataObject
CMOdometerGpsAvailability
CMOnBodyStatusData
CMSedentaryTimerIsArmed
CMSedentaryTimerStartTime
CMSedentaryTimerPeriodInterval
CMSedentaryTimerReminderInterval
CMSedentaryTimerAutoReschedule
CMSedentaryTimerAlarmData
CMSedentaryTimerErrorMessage
CMMotionActivityStartTime
CMMotionActivityStopTime
CMMotionActivityData
CMMotionActivityDataArray
CMActivityData
CMOverrideSidebandOverride
CMStateSidebandState
CMOverrideResult
CMSidebandSensorFusionEnable
CMSidebandSensorFusionLatency
CMSidebandSensorFusionSnoop
CMSidebandSensorFusionSuccess
CMMotionStateSim
CMMotionStateSimState
CMMotionStateSimResult
CMVehicleConnectionStartTime
CMVehicleConnectionEndTime
CMVehicleStateDeviceId
CMVehicularStateKey
CMVehicularHintsKey
CMDeviceHasOriginalBackCamera
CMCameraVcmActuatorId
CMCompassCalibrationData
CMExerciseMinuteRecordId
CMExerciseMinuteStartDate
CMExerciseMinuteSourceId
CMExerciseMinuteDataArray
CMWorkoutAttributes
CMWorkoutEventDate
CMWorkoutTimeout
CMSwimKeyDataRecord
CMSwimKeyDataArray
CMSignificantElevationKeyQueryTimeRange
CMSignificantElevationKeySample
CMFilteredElevationKeySample
CMCaptureModeData
CMFallSetStatsEnabled
CMFallSetStatsNumberOfAvailableFiles
CMFallSetStatsNameOfCurrentFile
CMFallSetStatsSizeOfCurrentFile
CMFallStatsMode
CMFallStatsSensorRecordingActive
CMFallStatsSimulateFall
CMSkiKeyDataRecord
CMSkiKeyDataArray
CMSpringKeyDataRecord
CMSpringKeyDataArray
CMFitnessMachineDataRecord
CMDatabaseType
CMExtensions
CMFileSize
CMMotionAlarmKey
CMMetMinutesArray
CMVO2MaxInputsRecord
CMVO2MaxInputsArray
CLCompassDatabaseSilo
__null != self.notifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Daemon/Motion/Compass/CLCompassDatabase.mm
-[CLCompassDatabaseAdapter beginService]
kCLMotionTypeGeomagneticModelDataXKey
kCLMotionTypeGeomagneticModelDataYKey
kCLMotionTypeGeomagneticModelDataZKey
kCLMotionTypeGeomagneticModelDataMagnitudeKey
kCLMotionTypeGeomagneticModelDataHorizontalKey
kCLMotionTypeGeomagneticModelDataDeclinationKey
kCLMotionTypeGeomagneticModelDataInclinationKey
kCLMotionTypeGeomagneticModelDataTimestampKey
class
<%@: %p>
v32@?0@"NSObject"8@"NSObject"16^B24
code
domain
Attempt to write value multiple times
nullptr key not allowed
Infinity
-Infinity
static bool CLOnBodyNotifier_Type::Params::isValid(NSDictionary *)
CoreLocation: Invalid parameters received:
%{public}s
virtual bool CLGeomagneticModelProviderClient::registerForNotificationInternal(const CLGeomagneticModelProvider_Type::Notification &)
CoreLocation: fLocationdConnection is not NULL
com.apple.CoreMotion.CLGeomagneticModelProviderClientPrivateQueue
kCLConnectionMessageGmm
virtual bool CLGeomagneticModelProviderClient::registerForNotificationInternal(const CLGeomagneticModelProvider_Type::Notification &)_block_invoke
CoreLocation: Could not get geomagnetic model data for message!
virtual bool CLGeomagneticModelProviderClient::registerForNotificationInternal(const CLGeomagneticModelProvider_Type::Notification &)_block_invoke_3
virtual bool CLGeomagneticModelProviderClient::unregisterForNotificationInternal(const CLGeomagneticModelProvider_Type::Notification &)
CoreLocation: fLocationdConnection is NULL
virtual void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, bool, int, bool) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::invokeClientsWithData(const Notification_T &, CLNotifierData *) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::removeClient(int) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::listClients() [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
kCMOdometerDataCodingKeyStartDate
kCMOdometerDataCodingKeyEndDate
kCMOdometerDataCodingKeyDistance
kCMOdometerDataCodingKeyCurrentSpeed
kCMOdometerDataCodingKeyAverageSpeed
%@,<startDate %@, endDate %@, distance %@, currentSpeed %@, averageSpeed %@>
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
distance
T@"NSNumber",R,N,V_distance
currentSpeed
T@"NSNumber",R,N,V_currentSpeed
T@"NSNumber",R,N,V_averageSpeed
CLGeomagneticModelProviderSilo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Daemon/Motion/Compass/CLGeomagneticModelProvider.mm
-[CLGeomagneticModelProviderAdapter beginService]
CLGeomagneticModelProvider
write_escaped_str
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Logging/CLJsonLogging.cpp
next.first[0] == '\0'
nullptr != escapedControlChar(next.first[0])
com.apple.CoreMotion.CMFitnessMachine
-[CMFitnessMachineInternal init]_block_invoke
-[CMFitnessMachineInternal init]_block_invoke_2
CoreLocation: CMFitnessMachine client connection interrupt, %@, %d, %p
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMFitnessMachine.mm
fitnessMachineData
kCLConnectionMessageFitnessMachineData
-[CMFitnessMachineInternal _feedFitnessMachineData:]_block_invoke_2
CoreLocation: Error feeding fitness machine data
CoreLocation: Error feeding fitness machine data, %@
T@"CMFitnessMachineInternal",R,N,V_internal
CMCallHandednessService
virtual void CMCallHandednessService::numberOfSpectatorsChanged(int, size_t)
CoreLocation: CMCallHandednessService Spectators, %zd
CoreLocation: CMCallHandednessService stopped, %zd
CoreLocation: CMCallHandednessService started, %zd
CoreLocation: CMCallHandednessService expects only 1 client
void CMCallHandednessService::startDetection()
CoreLocation: #Warning No accelerometer; not starting CMCallHandedness detection!
CoreLocation: Starting CallHandedness detection with accelFrequency %.1f
static void CMCallHandednessService::onAccelerometerData(const CLAccelerometer::Sample *, void *)
CoreLocation: Sending CMCallHandedness notification.
dataIdentifier
offset
dataSize
dataType
movement
%@,<identifier, %llu, startTime, %f, timestamp, %llu, dataIdentifier, %llu, offset, %u, dataSize, %u, dataType, %d, movement, %d>
TQ,V_identifier
Td,V_startTime
TQ,V_timestamp
TQ,V_dataIdentifier
TI,V_offset
TI,V_dataSize
Ti,V_dataType
TB,V_movement
Td,V_endTime
metaIdentifier
TQ,V_metaIdentifier
duration
Td,V_duration
rate
TI,V_rate
CLProximityNotifier
kCMMotionActivityCodingKeyType
kCMMotionActivityCodingKeyConfidence
kCMMotionActivityCodingKeyStartTime
kCMMotionActivityCodingKeyVehicleConnected
kCMMotionActivityCodingKeyVehicularGpsHint
kCMMotionActivityCodingKeyVehicularBasebandHint
kCMMotionActivityCodingKeyVehicularWifiHint
kCMMotionActivityCodingKeyVehicularMotionHint
kCMMotionActivityCodingKeyVehicularBTHint
%@ @ %f,<startDate,%@,confidence,%ld,unknown,%d,stationary,%d,walking,%d,running,%d,automotive,%d,cycling,%d>
vehicleConnected
TB,R,N,GisVehicleConnected
vehicleWifiHint
TB,R,N,GisVehicleWifiHint
vehicleGpsHint
TB,R,N,GisVehicleGpsHint
vehicleBasebandHint
TB,R,N,GisVehicleBasebandHint
vehicleMotionHint
TB,R,N,GisVehicleMotionHint
vehicleBTHint
TB,R,N,GisVehicleBTHint
stationary
automotive
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMPickupManager.mm
Pickup Detection is not supported on this platform. Use isPickupAvailable to avoid this error.
com.apple.CoreMotion.CMPickupDetectorPrivateQueue
-[CMPickupManager startPickupUpdates]_block_invoke
CoreLocation: Started pickup detection updates
CoreLocation: Pickup detection already started!
-[CMPickupManager stopPickupUpdates]_block_invoke
CoreLocation: Stopped pickup detection updates
CoreLocation: Pickup detection service already stopped!
-[CMPickupManager onPickupStateUpdated:]_block_invoke
CoreLocation: Pickup Detection: %{public}ld
T@"<CMPickupDelegate>",N,V_delegate
kCMPedometerDataCodingKeyStartDate
kCMPedometerDataCodingKeyEndDate
kCMPedometerDataCodingKeyNumberOfSteps
kCMPedometerDataCodingKeyDistance
kCMPedometerDataCodingKeyFloorAscended
kCMPedometerDataCodingKeyFloorDescended
kCMPedometerDataCodingKeyRecordId
kCMPedometerDataCodingKeyPace
kCMPedometerDataCodingKeyCurrentCadence
kCMPedometerDataCodingKeyActiveTime
kCMPedometerDatacodingKeyUUID
kCMPedometerDataCodingKeyIsOdometerDistance
kCMPedometerDataCodingKeyIsOdometerPace
kCMPedometerDataCodingKeyNumberOfPushes
kCMPedometerDataCodingKeyWorkoutType
%@,<startDate %@ endDate %@ steps %@ distance %@ floorsAscended %@ floorsDescended %@ currentPace %@ currentCadence %@ averageActivePace %@>
numberOfPushes
numberOfSteps
floorsAscended
floorsDescended
currentPace
currentCadence
averageActivePace
kCMPedometerEventKeyEventDate
kCMPedometerEventKeyEventType
Pause
Resume
%@,<eventDate, %@, eventType, %@>
date
T@"NSDate",R,N,VfDate
Tq,R,N,VfType
ReadyToFire
Pending0
Pending1
Pending2
Pending3
Pending4
Pending5
Pending6
Pending7
Pending8
Pending9
Expired
StateMax
kCMDeviceOrientationCodingKeyOrientation
%@ orientation %d name %@ @ %f
orientation
CMSetDeviceOrientationNotification
CMSetDeviceOrientationTypeKey
CMPersistOrientationCallbackModeKey
+[CMDeviceOrientationManager initialize]
CoreLocation: Orientation Manager initialized
com.apple.backboardd.loggingchanged
OrientationCallbackMode
EnableOrientationNotification
-[CMDeviceOrientationManager onMotionPreferencesUpdated]
CoreLocation: OrientationCallbackMode,%{public}d,EnableOrientationNotification,%{public}d
-[CMDeviceOrientationManager onNotification:]_block_invoke
CoreLocation: The orientation %{public}d is not in bounds
-[CMDeviceOrientationManager startDeviceOrientationUpdatesToQueue:withHandler:]
CoreLocation: Starting orientation updates
-[CMDeviceOrientationManager stopDeviceOrientationUpdates]
CoreLocation: Stopping orientation updates
-[CMDeviceOrientationManager onDeviceOrientation:]
CoreLocation: Notifications disabled
CoreLocation: Received orientation. (%{public}@ to %{public}@) Timestamp %{public}f
CoreLocation: Updating client handler: Orientation %{public}@, Callback mode: %{public}d
-[CMDeviceOrientationManager deviceOrientationBlocking]
CoreLocation: Received deviceOrientationBlocking
%@.%@Time
com.apple.CoreMotion.DeviceOrientation
GyroOnly
6Axis
9Axis
9AxisWithNorthReference
BuildGYTT
3AxisDynamicGyro
6AxisThrottledGyro
CLDeviceMotionProperties<DeviceMotion=%@>
Ti,N,VfMode
CMSetPocketStateNotification
CMSetPocketStateTypeKey
com.apple.CoreMotion.CMPocketStatePrivateQueue
+[CMPocketStateManager isPocketStateAvailable]
CoreLocation: Pocket state disabled by defaults write
-[CMPocketStateManager _disableDispatcher]
CoreLocation: disabling dispatcher
com.apple.CoreMotion.CMPocketStateManager.%@.%@
-[CMPocketStateManager addToAggdScalarWithName:andScalar:]_block_invoke
CoreLocation: ADClient: %s + %llu
-[CMPocketStateManager queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:]
CoreLocation: QueryRequest,%f
com.apple.CoreMotion.PocketState.queryStart
-[CMPocketStateManager queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:]_block_invoke
CoreLocation: %f: query started with timeout %f
queryStart
CoreLocation: Query aborted
queryAbort
-[CMPocketStateManager queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:]_block_invoke_2
CoreLocation: QueryTimerFire,%f
queryTimerFire
queryResponse.%@
CoreLocation: %f: query response external=%u (%s), cbcount=%lu
CoreLocation: timer fired even though fQueryTimer is NULL
CoreLocation: Attempted to exceed max monitor time %f, %f
CoreLocation: Query timer failed to initialize
queryTimerFail
-[CMPocketStateManager onNotification:]_block_invoke
CoreLocation: The pocket state %d is not in bounds
T@"<CMPocketStateDelegate>",N,V_delegate
kCMSpringDataCodingKeyRecordId
kCMSpringDataCodingKeySourceId
kCMSpringDataCodingKeySessionId
kCMSpringDataCodingKeyEventTime
kCMSpringDataCodingKeyEventType
OutOfBid
%@, <eventTime, %@, eventType, %@>
eventTime
eventType
CLOrientationNotifier
CLOrientationNotifier::CLOrientationNotifier()
CoreLocation: hwType, %{public}d
CoreLocation: form factor %{public}u
SBHasSeenACaseLatchCoverOnce
com.apple.springboard.HasSeenACaseLatchCoverNotification
CoreLocation: Registering for SBHasSeenACaseLatchCoverNotification.
CoreLocation: fHasSeenACaseLatchCoverOnce %u
virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)
ReportInterval
CoreLocation: Unrecognized notification request %u
void CLOrientationNotifier::startDetection(bool)
CoreLocation: forceAccelOnly for device %{public}d
OrientationGyroTimeout
OrientationStableVariance
CoreLocation: fOrientationGyroTimeout,%{public}f,fEnableGyroTimeout,%{public}d,fMaxAccelerationVarianceForStability,%{public}f
OrientationAccelDecimation
CoreLocation: Not starting orientation detection since requested accelerometer frequency < 0
CoreLocation: No accelerometer; not detecting orientation!
CoreLocation: No gyro; not detecting orientation!
CoreLocation: fHasSeenACaseLatchCoverOnce, %{public}d
CoreLocation: Starting orientation detection with accelFrequency %{public}f, form factor, %{public}d, decimationRate, %{public}d
void CLOrientationNotifier::stopDetection()
CoreLocation: Stopping orientation detection.
static void CLOrientationNotifier::onAccelerometerData(const CLAccelerometer::Sample *, void *)
CoreLocation: Sending orientation changed notification
CoreLocation: Device is in motion, re-enabling Gyro.
CoreLocation: Device is stationary and OrientationGyroTimeout exceeded, disabling Gyro.
static void CLOrientationNotifier::onGyroData(const CLGyro::Sample *, void *)
CoreLocation: GYRO: Sending orientation changed notification
void CLOrientationNotifier::onCoverNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)
static void CLOrientationNotifier::onKeyboardState(const bool *, void *)
CoreLocation: Received keyboard state %u
void CLOrientationNotifier::onIohidEvent(void *, void *, void *, IOHIDEventRef)
CoreLocation: AOO update: %u
void CMCallHandednessDetector::detect(double)
CoreLocation: Invalid dynamics, mag, %.2f, xyVarMax, %.2f, xMean, %.2f
CoreLocation: Invalid xyNorm, %.2f
CoreLocation: Invalid tilt, %.2f
CoreLocation: Invalid swivel, %.2f
CoreLocation: Swing1. xMag, %.2f, maxXYVar, %.2f, swingX, %.2f
CoreLocation: Swing2. X sign flipping.
CoreLocation: Passed swing-detect. hand, %d, xMag, %.2f, maxXYVar, %.3f, swingX, %.3f
Element CMVectorBufferBase<float, 3>::front() const [T = float, N = 3]
CoreLocation: Assertion failed: !empty(), file /BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Oscar/CMVectorBuffer.h, line 142,front() on empty buffer.
kCLConnectionMessageFallStatsAvailable
kCLConnectionMessageFallStatsSetEnabled
-[CMFall setStatsEnabled:]
CoreLocation: #Notice Response invalid.
-[CMFall setStatsEnabled:onCompletion:]_block_invoke
kCLConnectionMessageFallStatsSendStats
kCLConnectionMessageSimulateFallEvent
com.apple.CoreMotion.CMSkiTracker
-[CMSkiTrackerInternal init]_block_invoke
-[CMSkiTrackerInternal init]_block_invoke_2
CoreLocation: CMSkiTracker client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageSkiDataQuery
kCLConnectionMessageSkiDataUpdate
-[CMSkiTrackerInternal _stopUpdates]_block_invoke
CoreLocation: Unable to stop Ski data updates as we are are not receiving updates.
-[CMSkiTrackerInternal _queryUpdatesFromRecord:handler:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageSkiDataQuery message.
-[CMSkiTrackerInternal _handleUpdates:]
CoreLocation: Unable to parse kCLConnectionMessageSkiDataUpdate message.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMSkiTracker.mm
T@"CMSkiTrackerInternal",R,N,V_internal
com.apple.CoreMotion.CMCatherineFeeder.internal
-[CMCatherineFeederInternal _startDaemonConnection]_block_invoke
kCLConnectionMessageCatherineDataKey
kCLConnectionMessageCatherineData
internal
T@"CMCatherineFeederInternal",R,N,V_internal
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMSkiData.mm
sourceId && sessionId && startDate && endDate
kCMSkiDataCodingKeyRecordId
kCMSkiDataCodingKeySourceId
kCMSkiDataCodingKeySessionId
kCMSkiDataCodingKeyStartDate
kCMSkiDataCodingKeyEndDate
kCMSkiDataCodingKeyRunDistance
kCMSkiDataCodingKeyRunAvgSpeed
kCMSkiDataCodingKeyRunMaxSpeed
kCMSkiDataCodingKeyRunSlope
kCMSkiDataCodingKeyRunElevationDescent
%@, <sessionId %@, startDate %@, endDate %@, runDistance %.2f, runAvgSpeed %.2f, runMaxSpeed %.2f, runSlope %.2f, runElevationDescent %.2f>
runDistance
runAvgSpeed
runMaxSpeed
runSlope
runElevationDescent
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter
Library
Caches
Logs
CrashReporter
move
%s,%s,could not %s log file %s to %s
%s,%s,could not stat %s
CLGyroCalibrationDatabaseSilo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Motion/SensorCalibration/CLGyroCalibrationDatabase.mm
-[CLGyroCalibrationDatabaseAdapter beginService]
CLGyroCalibrationDatabase
virtual bool CLGyroCalibrationDatabase::getGyroStats(CLMotionTypeRotationRate &, CLMotionTypeRotationRate &, CLMotionTypeRotationRate &, bool)
CoreLocation: Warning: Not implemented.
virtual int CLGyroCalibrationDatabase::getMaxDynamicTemperature()
kCMPedometerBinCodingKeyValueOut
kCMPedometerBinCodingKeyBegin
kCMPedometerBinCodingKeyEnd
kCMPedometerBinCodingKeyState
Begin,%.4f,End,%.4f,State,%ld,ValueOut,%.4f
valueOut
Td,R,N,V_valueOut
begin
Td,R,N,V_begin
lowerQuartile
center
upperQuartile
Td,R,N,V_end
state
Tq,R,N,V_state
CoreMotion
com.apple.CoreMotion.CMMotionUtils.AsyncMessageQueue
com.apple.CoreMotion.CMMotionUtils.SyncMessageQueue
+[CMMotionUtils sendMessageWithReplySync:]
CoreLocation: Timeout (after 5 seconds) occurred during wait!
+[CMMotionUtils tccServiceMotionAccessWithLabel:]
CoreLocation: Warning - invoking %@ on main may lead to deadlock.
v12@?0C8
+[CMMotionUtils tccServiceMotionAccessWithLabel:]_block_invoke
CoreLocation: TCCServiceMotionAccess timeouts!
com.apple.CoreMotion.tcc
+[CMMotionUtils tccServiceMotionAccessWithBlock:]_block_invoke
+[CMMotionUtils featureAvailability:]
+[CMMotionUtils fileHandleForWritingToURL:]
CoreLocation: #Notice URL must specify a file.
CoreLocation: #Notice File already exists at URL.
CoreLocation: #Notice URL must point to a file path which you have access to write to.
CoreLocation: #Notice Unable to get file handle for URL %{public}s: %{public}s
CLOrientationDetector::CLOrientationDetector(FormFactor, bool)
CoreLocation: gyroFrequency,%.3f,gyroBufferSize,%d,gyroMeanBufferSize,%d,zRotBufferSize,%d,minRequiredZrots,%d
CoreLocation: accelBufferSize,%d
void CLOrientationDetector::addAccSample(const CLMotionTypeAcceleration &, const CFAbsoluteTime &)
CoreLocation: Accelerometer samples data gap or out of order! deltaInterval=%.4f
CoreLocation: accel, %.3f, %.3f, %.3f, timestamp, %.20f
void CLOrientationDetector::addGyroSample(const CLMotionTypeRotationRate &, const CFAbsoluteTime &)
CoreLocation: Gyro samples data gap or out of order! deltaInterval=%.4f
CoreLocation: gyro, %.3f, %.3f, %.3f, gyroMean, %.3f, %.3f, %.3f, fLastDetection,%d,fStartZrot,%d, timestamp, %.10f
void CLOrientationDetector::fillZRotBuffer(const CLMotionTypeRotationRate &, const CLVector3d<float> &)
CoreLocation: zRot (%.3f, %.3f, %.3f), mean(%.3f, %.3f, %.3f), var(%.3f, %.3f, %.3f)
bool CLOrientationDetector::updateZRotationStatus(float, float, float)
CoreLocation: Likely transient.
CoreLocation: Slowing. decrement numZRot,delta, %.3f, numZRot, %d
CoreLocation: ZDROP detected. deltaDrop, %.3f, fNumZDrops, %d
CoreLocation: mostlyZ, %d, zRotMean.z, %.3f, zRot, %.3f, numZRots, %d, estCurr, %.3f, totalZ, %.2f, mag2MinusGrav, %.2f
CoreLocation: Going through with 180 turn.
CoreLocation: Rotating around Z. numSamples: %d, numAccu, %d, zRotVar, %.3f
void CLOrientationDetector::checkForRotation()
CoreLocation: SCREEN FLAT. NOT FILLING UP ZROT BUFFER.
CoreLocation: Transient!
CoreLocation: Rotating! Current max gyro rate %.3f
void CLOrientationDetector::updateLastPrimaryOrientationForZStats(float, float)
CoreLocation: Setting lastPrimaryOrientation.
void CLOrientationDetector::nixRotationAroundZIfNecessary(float, float, float)
CoreLocation: Nixed rotationAroundZ state.
void CLOrientationDetector::setUpForOrienationChangeViaRotation(CLVector3d<float> &)
CoreLocation: Ready for orientation change via rotation
void CLOrientationDetector::resetZStatsWhenQuiescent(float, float)
CoreLocation: Not filling Zrot buffer.
float CLOrientationDetector::getAccStats(CLVector3d<float> &, float &)
CoreLocation: acc variance, %.3f, %.3f, %.3f, acc mean, %.3f, %.3f, %.3f, maxVar, %.3f, mag2,%.3f
bool CLOrientationDetector::deviceIsMoving(const CLVector3d<float> &, float, float)
CoreLocation: Resetting stable count
static bool CLOrientationDetector::withinMagicAngleLimits(FormFactor, bool, float, bool)
CoreLocation: Within magic angle limits: Threshold %.4f, Delta %.4f
bool CLOrientationDetector::atMagicCoverRestingAngle(const float *, float, float, float)
CoreLocation: Ipad %d: screenJustTurnedOn, %d, deltaTime %.5f
CoreLocation: allowShallow, %d, magicCaseRest, %d, tiltIn, %d, wasMoving, %d, maxVar, %.5f
void CLOrientationDetector::calcCurrentOrientation()
CoreLocation: onStartup, x, %.3f, y, %.3f, z, %.3f
CoreLocation: FaceUp/Down: maxWeight,%.3f, 2ndWeight,%.3f, orientation,%d
CoreLocation: deltaWeightThreshold, %.3f, tiltWeightTheshold, %.3f, currAcc, %.3f, %.3f, %.3f, deltaWeight, %.3f, tilt, %.3f, fCurrentOrientation, %d, isMoving, %d, wasMoving, %d, fLastClearOrientation, %d, fStableCount, %d, DetectionTime, %f
bool CLOrientationDetector::calcOrientation(CMDeviceOrientationType &, CLMotionTypeTimestamp &)
CoreLocation: Notify from, %{public}s -> %{public}s 
void CLOrientationDetector::disableGyro()
CoreLocation: Disabling gyro.
void CLOrientationDetector::enableGyro()
CoreLocation: Enabling gyro.
Ambiguous
LandscapeLeft
LandscapeRight
FaceUp
CLVector3d<T> CLRunningVector3d<float>::getSample(unsigned int) const [T = float]
CoreLocation: Index out of bound.
com.apple.CoreMotion.CMActivityAlarmProxyPrivateQueue
kCLConnectionMessageActivityAlarmStart
-[CMActivityAlarmProxy init]_block_invoke
CoreLocation: #Warning Did not find the triggered activity alarm in the current set of alarms.
CoreLocation: Could not get dictionary for kCLConnectionMessageActivityAlarm
kCLConnectionMessageActivityAlarmAvailable
-[CMActivityAlarmProxy listenForActivityAlarm:]
CoreLocation: #Warning Was not able to listen for alarm.  Activity alarms are not available for this system.
-[CMActivityAlarmProxy stopListeningForActivityAlarm:]
CoreLocation: #Warning Cannot unsubscribe from activity alarm (Trigger:%d, Duration:%f).  This alarm is not being listened for.
kCMVehicleConnectionDataCodingKeyStartDate
kCMVehicleConnectionDataCodingKeyEndDate
kCLConnectionMessageVehicleConnectionMostRecent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMActivityAlarm.mm
trigger < kActivityAlarmTriggerCount
-[CMActivityAlarm initWithTrigger:duration:onQueue:withHandler:]
CoreLocation: Unable to create sharedInstance of CMActivityAlarmProxy.
-[CMActivityAlarm initWithTrigger:duration:onRunLoop:withHandler:]
Td,N,V_duration
trigger
TI,N,V_trigger
CLPowerStateService
CMStepCounterQueue
-[CMStepCounterProxy init]_block_invoke
-[CMStepCounterProxy _startStepCountingUpdatesToQueue:updateOn:withHandler:]_block_invoke
CoreLocation: Unable to parse mesage (%{public}@) when starting updates to queue
-[CMStepCounterProxy _handleQueryResponse:onQueue:withHandler:]
CoreLocation: Unable to parse mesage (%{public}@) for query response
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMStepCounter.mm
-[CMStepCounter startStepCountingUpdatesToQueue:updateOn:withHandler:]_block_invoke
CoreLocation: Unable to start additional step updates while it is already active
-[CMStepCounter stopStepCountingUpdates]_block_invoke
CoreLocation: Unable to stop step updates as we are are not receiving updates
kCLConnectionMessageStepCountReset
stepcounterProxy
T@"CMStepCounterProxy",R,N,V_stepcounterProxy
kCMDeviceMotionLiteCodingKeyQuaternionW
kCMDeviceMotionLiteCodingKeyQuaternionX
kCMDeviceMotionLiteCodingKeyQuaternionY
kCMDeviceMotionLiteCodingKeyQuaternionZ
kCMDeviceMotionLiteCodingKeyUserAccelerationX
kCMDeviceMotionLiteCodingKeyUserAccelerationY
kCMDeviceMotionLiteCodingKeyUserAccelerationZ
kCMDeviceMotionLiteCodingKeyRotationRateX
kCMDeviceMotionLiteCodingKeyRotationRateY
kCMDeviceMotionLiteCodingKeyRotationRateZ
kCMDeviceMotionLiteCodingKeyRawAccelerationX
kCMDeviceMotionLiteCodingKeyRawAccelerationY
kCMDeviceMotionLiteCodingKeyRawAccelerationZ
kCMDeviceMotionLiteCodingKeyRawRotationRateX
kCMDeviceMotionLiteCodingKeyRawRotationRateY
kCMDeviceMotionLiteCodingKeyRawRotationRateZ
kCMDeviceMotionLiteCodingKeyMachTimestamp
kCMDeviceMotionLiteCodingKeyUsingCompass
kCMDeviceMotionLiteCodingKeyGyroTemperature
kCMDeviceMotionLiteCodingKeyCompassTemperature
kCMDeviceMotionLiteCodingKeyRawMagneticFieldX
kCMDeviceMotionLiteCodingKeyRawMagneticFieldY
kCMDeviceMotionLiteCodingKeyRawMagneticFieldZ
kCMDeviceMotionLiteCodingKeyPhysicalDeviceUniqueID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMDeviceMotionLite.mm
[encoder allowsKeyedCoding]
%@,Gravity,%f,%f,%f,UserAcceleration,%f,%f,%f,Tip,%f,Tilt,%f,Attitude,%f,%f,%f,%f,RotationRate,%f,%f,%f,MachTimestamp,%f,UsingCompass,%d,PhysicalDeviceUniqueID,%@
%@,Gravity,%f,%f,%f,UserAcceleration,%f,%f,%f,Tip,%f,Tilt,%f,MachTimestamp,%f,UsingCompass,%d,PhysicalDeviceUniqueID,%@
Carbon,%f,%f,%f,%f,%f,%f,%f,MachTimestamp,%f,PhysicalDeviceUniqueID,%@
Magnesium,%f,%f,%f,%f,MachTimestamp,%f,PhysicalDeviceUniqueID,%@
%@,Quaternion,%f,%f,%f,%f,RotationRate,%f,%f,%f, RawAcceleration,%f,%f,%f,RawRotationRate,%f,%f,%f,MachTimestamp,%f,UsingCompass,%d PhysicalDeviceUniqueID,%@
rawAcceleration
T{?=ddd},R,N,V_rawAcceleration
rawRotationRate
T{?=ddd},R,N,V_rawRotationRate
machTimestamp
TQ,R,N,V_machTimestamp
gyroTemperature
Tf,R,N,V_gyroTemperature
compassTemperature
Tf,R,N,V_compassTemperature
rawMagneticField
T{?=ddd},R,N,V_rawMagneticField
T{?=ddd},R,N,V_gravity
T{?=ddd},R,N,V_userAcceleration
Tf,R,N
tilt
T@"CMAttitude",R,N,V_attitude
T{?=ddd},R,N,V_rotationRate
usingCompass
TB,R,N,GisUsingCompass,V_usingCompass
physicalDeviceUniqueID
T@"NSString",R,C,N,V_physicalDeviceUniqueID
BKDigitizerSignpostsEnabled
com.apple.backboardd
CLSilo: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLSilo.m
-[CLSilo assertInside]
-[CLSilo assertOutside]
-[CLSilo newTimer]
-[CLSilo async:]
-[CLSilo sync:]
-[CLSilo afterInterval:async:]
T@"NSString",R,N,V_identifier
void CMPickupDetector::StaticReference::feedBufferAndCalcReference(const CMVector3d &, uint64_t, uint64_t, CMPickupDetector_Types::DetectionState)
CoreLocation: Grabbing reference pose while static, %.3f, %.3f, %.3f, varInfNorm, %.8f
CoreLocation: Getting new reference in StableState when no reference is available yet.
bool CMPickupDetector::checkForStable(uint64_t)
CoreLocation: Entered Stable state from being static/frozen
CoreLocation: fStableCount, %d, maxXYVar, %.8f, xyMeanNorm, %.3f, deltaTiltMean, %.3f
CoreLocation: Entered Stable state. timestamp, %.6f
bool CMPickupDetector::checkForLift(const CMVector3d &, uint64_t)
CoreLocation: deltaTilt, %.3f, fLiftCount, %d, z2xyRatio, %.3f, dt, %.2f
CoreLocation: Entered Lift state. timestamp, %.6f
-[CLDispatchTimerScheduler reflectNextFireTime:fireInterval:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLDispatchSilo.m
_source
timer
T@"CLTimer",W,N
source
T@"NSObject<OS_dispatch_source>",&,N,V_source
T@"CLTimer",W,N,Vtimer
MainSilo
%@.NSOperationQueue
CLDispatchSilo: %s
_handler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLTimer.m
-[CLTimer shouldFire]
T@?,C,N,V_handler
nextFireTime
Td,N,V_nextFireTime
fireInterval
Td,N,V_fireInterval
32 > numArguments
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLIntersiloInterface.mm
-[CLIntersiloInterfaceSelectorInfo initWithSelector:andMethodSignature:]
syncget
0 != returnValueSize
0 == returnValueSize
withReply:
0 == _returnAddressIndex
T:,R,N,V_sel
replyBlockIndex
Ti,R,N,V_replyBlockIndex
returnAddressIndex
Ti,R,N,V_returnAddressIndex
T@"NSMethodSignature",R,&,N,V_sig
typeStr
T@"NSString",R,C,D,N
__objc_no
-[CLIntersiloInterface extendSelectorInfoWithProtocol:bases:]
Protocol: %p
Name: %s
Selectors: (
protocol
T@"Protocol",R,N,V_protocol
com.apple.CoreMotion.CMAltimeterInternalQueue
com.apple.CoreMotion.CMAltimeterAppQueue
kCLConnectionMessageSignificantElevationUpdate
-[CMAltimeterInternal init]_block_invoke
CoreLocation: Unable to parse message (%{public}s) when starting updates to queue
kCLConnectionMessageFilteredElevationUpdate
CoreLocation: Received empty filtered elevation update
kCLConnectionMessageSignificantElevationDeltaQuery
-[CMAltimeterInternal _querySignificantElevationChangeFromDate:toDate:withHandler:]_block_invoke
CoreLocation: Unable to parse message (%{public}s) for query response
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMAltimeter.mm
-[CMAltimeter onFilteredPressure:]
CoreLocation: relativeAltitude,%f,pressure,%f
T@"CMAltimeterInternal",R,N,V_internal
com.apple.CoreMotion.CMSwimTracker
-[CMSwimTrackerInternal init]_block_invoke
-[CMSwimTrackerInternal init]_block_invoke_2
CoreLocation: Client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageSwimDataQuery
kCLConnectionMessageSwimDataUpdate
-[CMSwimTrackerInternal _stopUpdates]_block_invoke
CoreLocation: Unable to stop swim data updates as we are are not receiving updates.
-[CMSwimTrackerInternal _querySwimUpdatesFromRecord:handler:]_block_invoke
CoreLocation: Unable to parse query message.
-[CMSwimTrackerInternal _handleUpdates:]
CoreLocation: %@, %@, %d, %p
CoreLocation: Unable to parse update message.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMSwimTracker.mm
T@"CMSwimTrackerInternal",R,N,V_internal
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMMotionAlarm.mm
type == kCMMotionAlarmTypeTimer
type < kMotionAlarmTypeCount
kCMMotionAlarmName
kCMMotionAlarmType
kCMMotionAlarmDuration
kCMMotionAlarmRepeats
kCMMotionAlarmId
kCMMotionAlarmBundleId
kCMMotionAlarmState
Name: %@, Type: %d, Duration: %d, Repeats: %d, AlarmID: %llu, BundleID: %@, AlarmState: %@
alarmId
TQ,N,V_alarmId
bundleId
T@"NSString",&,N,V_bundleId
Ti,N,V_state
manager
T@"CMMotionAlarmManager",&,N,V_manager
T@"NSString",R,&,N,V_name
TI,R,N,V_duration
repeats
TB,R,N,V_repeats
TI,R,N,V_type
kMetMinuteDataCodingKeyStartDate
kMetMinuteDataCodingKeyAverageIntensity
%@, <startDate, %@, averageIntensity, %f>
averageIntensity
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMSwimData.mm
sourceId && sessionId && startDate && endDate && strokeType < kCMSwimStrokeTypeMax
kCMSwimDataCodingKeyRecordId
kCMSwimDataCodingKeySourceId
kCMSwimDataCodingKeySessionId
kCMSwimDataCodingKeyStartDate
kCMSwimDataCodingKeyEndDate
kCMSwimDataCodingKeyStrokeCount
kCMSwimDataCodingKeyDistance
kCMSwimDataCodingKeyAvgPace
kCMSwimDataCodingKeyLapCount
kCMSwimDataCodingKeyStrokeType
kCMSwimDataCodingKeySegmentCount
Freestyle
Backstroke
Breaststroke
Butterfly
Mixed
%@, <sessionId %@, startDate %@, endDate %@, strokeCount %lu, distance %.2f, avgPace %.2f, lapCount %lu, strokeType %@, segment %lu>
strokeCount
avgPace
lapCount
strokeType
segment
T@"CLIntersiloProxy",R,N,V_peer
T@"CLIntersiloProxy",R,W,N,V_peer
postInit == initiatorProxy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLIntersiloProxy.m
+[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:withInboundInterface:andOutboundInterface:]
postInit == recipientProxy
![inv argumentsRetained]
-[CLIntersiloProxy forwardInvocation:]
_delegate
_delegateSilo
CLService: Block was not compiled using a compiler that inserts type information about arguments. (%@)
v16@?0@"NSInvocation"8
(id)[NSNull null] != _delegate
_delegate == (id)[NSNull null] && !_delegateSilo
-[CLIntersiloProxy registerDelegate:inSilo:]
<%@: peer silo:%@, peer name:<REDACTED>>
-[CLIntersiloProxy peer]
T@"<CLIntersiloProxyDelegateProtocol>",R,W,N,V_delegate
delegateSilo
T@"CLSilo",R,W,N,V_delegateSilo
proxiedInterface
T@"CLIntersiloInterface",R,C,N,V_proxiedInterface
kCMOnBodyStatusResult
kCMOnBodyStatusConfidence
result %d confidence %d timestamp %f
result
virtual std::shared_ptr<CLIoHidInterface::Device> CLIoHidInterface::buildDevice(CLIoHidInterface::Device::Description)
CoreLocation: [CLIoHidInterface] Adding new Device with usage pair {%{public}d, %{public}d}
CoreLocation: [CLIoHidInterface] buildDevice should be called on motion thread, usage pair {%{public}d, %{public}d}
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Motion/IO/CLIoHidInterface.mm
initializeHidIfNecessary
void CLIoHidInterface::initializeHidIfNecessary()
CoreLocation: [CLIoHidInterface] Could not create event system client. All bets are off
CoreLocation: [CLIoHidInterface] Event system client initialized successfully
closeHid
void CLIoHidInterface::closeHid()
CoreLocation: [CLIoHidInterface] Hid interface closed
refreshDeviceServiceRefs
void CLIoHidInterface::refreshDeviceServiceRefs()
CoreLocation: [CLIoHidInterface] Refreshing service refs
CoreLocation: [CLIoHidInterface] Check service ref %{public}p with usage pair {%{public}d,%{public}d} as a potential match
CoreLocation: [CLIoHidInterface] Service ref with usage pair {%{public}d,%{public}d} is %{public}p
invalidateDeviceServiceRefs
void CLIoHidInterface::invalidateDeviceServiceRefs()
CoreLocation: [CLIoHidInterface] invalidating hid service refs
setPropertyIoHid
bool CLIoHidInterface::setPropertyIoHid(IOHIDServiceClientRef, CFStringRef, CFTypeRef)
CoreLocation: [CLIoHidInterface] property can not be set for null hidServiceRef
CoreLocation: [CLIoHidInterface] IOHIDServiceClientSetProperty() returned false
applyAllDirtyDeviceProperties
void CLIoHidInterface::applyAllDirtyDeviceProperties()
CoreLocation: [CLIoHidInterface] apply all dirty device properties
CoreLocation: [CLIoHidInterface] Service with for device with usage pair {%{public}d,%{public}d} is not ready
CoreLocation: [CLIoHidInterface] Property for usage pair {%{public}d,%{public}d}: {%{public}s = %{public}@} was set %{public}s
CoreLocation: [CLIoHidInterface] Could not set all properties. Setting timer to fire %{public}f seconds from now
CoreLocation: [CLIoHidInterface] Could not set all properties after too many retries. Giving up.
setMatchingForDevices
void CLIoHidInterface::setMatchingForDevices()
CoreLocation: [CLIoHidInterface] Prox: remove set matching multiple
CoreLocation: [CLIoHidInterface] Adding match entry for usage pair {%{public}d,%{public}d}
CoreLocation: [CLIoHidInterface] Setting matching multiple for %{public}lu events
void CLIoHidInterface::onEvent(void *, void *, IOHIDEventRef)
CoreLocation: [CLIoHidInterface] Received null sender
CoreLocation: [CLIoHidInterface] Got null event,sender %{public}p,registryID %{public}llx
CoreLocation: [CLIoHidInterface] Fetching historical events
CoreLocation: [CLIoHidInterface] Did not fetch historical events
void CLIoHidInterface::onEventSystemReset(void *)
CoreLocation: [CLIoHidInterface] It looks like our HID event system just become available (again)
void CLIoHidInterface::onServiceRegistration(void *, IOHIDServiceClientRef)
CoreLocation: [CLIoHidInterface] New IOHIDServiceClientRef for usage pair {%{public}d,%{public}d} just became available.
CoreLocation: [CLIoHidInterface] Device,usagePage,%{public}d,usage,%{public}d,hidserviceref,old,%{public}p,new,%{public}p
virtual CLIoHidInterface::Device::~Device()
CoreLocation: [CLIoHidInterface] Releasing value for property %{public}s, address = %{public}p
void CLIoHidInterface::Device::setCallback(OnIoHidEvent, void *)
CoreLocation: [CLIoHidInterface] setCallback for {%{public}d, %{public}d} should be called from motion thread
virtual void CLIoHidInterface::Device::setProperty(NSString *, id)
CoreLocation: [CLIoHidInterface] Could not set property value for %{public}@
CoreLocation: [CLIoHidInterface] setProperty for {%{public}d, %{public}d} should be called from motion thread
virtual id CLIoHidInterface::Device::copyProperty(NSString *)
CoreLocation: [CLIoHidInterface] copyProperty for {%{public}d, %{public}d} should be called from motion thread
copyEvent
eventType > 0
void CLIoHidInterface::Device::setEventType(IOHIDEventType)
CoreLocation: [CLIoHidInterface] setEventType for {%{public}d, %{public}d} should be called from motion thread
initializeServiceRef
bool CLIoHidInterface::Device::initializeServiceRef()
CoreLocation: [CLIoHidInterface] Service for usage pair {%{public}d, %{public}d} is not ready
void CLIoHidInterface::Device::print()
CoreLocation: [CLIoHidInterface] Device,hidUsagePage,%{public}d,hidUsage,%{public}d,hasCallback,%{public}d,serviceRef,%{public}p
void CLIoHidInterface::Device::printProperties()
CoreLocation: [CLIoHidInterface] 
%{public}s = %{public}@,dirty,%{public}d
((void *)0)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLIntersiloService.m
+[CLIntersiloService getSilo]
+[CLIntersiloService performSyncOnSilo:invoker:]
-[CLIntersiloService init]
((void *)0) == _inboundInterface
-[CLIntersiloService initWithInboundProtocol:outboundProtocol:]
((void *)0) == _outboundInterface
_inboundInterface
_outboundInterface
!_silo
-[CLIntersiloService setSilo:]
!_vendor
-[CLIntersiloService setVendor:]
Silo: %@
Inbound: %@
Outbound: %@
universe
T@"<CLIntersiloUniverse>",R,N
inboundInterface
T@"CLIntersiloInterface",R,N,V_inboundInterface
outboundInterface
T@"CLIntersiloInterface",R,N,V_outboundInterface
TB,N,V_valid
self.keyedPayloads
-[CLIntersiloServiceMock setPayload:forKey:]
![self.keyedPayloads objectForKey:key]
payload
-[CLIntersiloServiceMock getPayloadForKey:]
-[CLIntersiloServiceMock removePayloadForKey:]
keyedPayloads
T@"NSMutableDictionary",&,N,V_keyedPayloads
+[CMWakeGestureManager sharedManager]_block_invoke
CoreLocation: Watch: Gesture Manager Active
CoreLocation: Phone: Gesture Manager Active
CoreLocation: CMWakeGestureManager is not supported on this platform!
-[CMWakeGestureManager logAssert]
CoreLocation: Calling methods directly on an instance of CMWakeGestureManager is not permitted. Please use +[CMWakeGestureManager sharedManager] instead.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMWakeGestureManager.mm
false
T@"<CMWakeGestureDelegate>",N,V_delegate
svcClass
T#,R,N,V_svcClass
residentCount
Ti,N,V_residentCount
synCount
Ti,R,N,V_synCount
ackCount
Ti,R,N,V_ackCount
+[_Locationd becameFatallyBlocked:index:]
CoreLocation: _Locationd should come last?!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Intersilo/CLServiceVendor.mm
+[_Locationd performSyncOnSilo:invoker:]
0 <= dewrappedDeficit
validateTrackedSilos_block_invoke
record.svcClass
v32@?0@"CLSilo"8@"CLServiceVendorHeartbeatRecord"16^B24
HeartAttack
q24@?0@8@16
Adapter
_CLUnSupportedService
CLServiceVendorQueue
CLServiceVendor.HeartbeatCheckInterval
HeartAttackStackshot
remapping
-[CLServiceVendor setServiceReplacementMap:missBehavior:]_block_invoke
newEffectiveSvcName
oldEffectiveSvcName
[oldEffectiveSvcName isEqual:newEffectiveSvcName]
%@_%lld.msl
Test
Mock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMFitnessMachineData.mm
kCMFitnessMachineDataKeyTimestamp
kCMFitnessMachineDataKeyElapsedTime
kCMFitnessMachineDataKeyTotalEnergy
kCMFitnessMachineDataKeyTotalDistance
kCMFitnessMachineDataKeyTotalElevationAscended
kCMFitnessMachineDataKeyTotalStrideCount
kCMFitnessMachineDataKeyTotalStrokeCount
kCMFitnessMachineDataKeyTotalFloorsClimbed
kCMFitnessMachineDataKeyInstantaneousSpeed
kCMFitnessMachineDataKeyInstantaneousCadence
kCMFitnessMachineDataKeyInstantaneousPower
kCMFitnessMachineDataKeyInclination
kCMFitnessMachineDataKeyResistanceLevel
%@, <timestamp, %f, elapsedTime, %f, totalEnergy, %f, totalDistance, %f, totalElevationAscended, %f,  totalStrideCount, %ld, totalStokeCount, %ld,totalFloorsClimbed, %ld, instantaneousSpeed, %f, instantaneousCadence, %f, instantaneousPower, %f, inclination, %f, resistanceLevel, %f>
elapsedTime
Td,N,V_elapsedTime
totalEnergy
Td,N,V_totalEnergy
Td,N,V_totalDistance
totalElevationAscended
Td,N,V_totalElevationAscended
totalStrideCount
Tq,N,V_totalStrideCount
totalStrokeCount
Tq,N,V_totalStrokeCount
totalFloorsClimbed
Tq,N,V_totalFloorsClimbed
instantaneousSpeed
Td,N,V_instantaneousSpeed
instantaneousCadence
Td,N,V_instantaneousCadence
instantaneousPower
Td,N,V_instantaneousPower
inclination
Td,N,V_inclination
resistanceLevel
Td,N,V_resistanceLevel
CLGestureService
bool CLGestureService::sendGestureCommand(const void *, size_t)
CoreLocation: #Warning Gesture service is not available on this platform
notification == kNotificationGestureReport
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Shared/Motion/Notifiers/CLGestureService.mm
numberOfSpectatorsChanged
com.apple.CoreMotion.CMOnBodyStatusManagerPrivateQueue
kCLConnectionMessageOnBodyDetectionParams
kCLConnectionMessageOnBodyDetection
-[CMOnBodyStatusManager connect]_block_invoke
-[CMOnBodyStatusManager startOnBodyStatusDetectionPrivateToQueue:withParameters:handler:]
CoreLocation: Neither the queue nor the handler can be nil
data
T^v,N,V_data
destructor
T@?,C,N,V_destructor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Daemon/Shared/Utilities/CLNotifierClientAdapter.mm
-[CLNotifierClientAdapter init]
_client
-[CLNotifierClientAdapter onNotification:withData:]
CLNotifierClientBase: %p
nullptr == _notifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Daemon/Shared/Utilities/CLNotifierServiceAdapter.mm
-[CLNotifierServiceAdapter setAdaptedNotifier:]
[self valid]
_notifier
-[CLNotifierServiceAdapter notifierClientNumForCoparty:]
ClientIntegerMap: (
%p = %d
notifier
T^{CLNotifierBase=^^?},R,N,V_notifier
com.apple.CoreMotion.CMWorkoutManager
-[CMWorkoutManagerInternal init]_block_invoke
CoreLocation: Workout, client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageWorkoutEvent
-[CMWorkoutManagerInternal _startWorkout:]
CoreLocation: Workout, START, %@, %@, %d, %p
CoreLocation: Trying to start a swim session without using a CMSwimWorkout!  Treating this swim as an open water swim.
kCLConnectionMessageWorkoutStart
-[CMWorkoutManagerInternal _stopWorkout:]
CoreLocation: Workout, STOP, %@, %@, %d, %p
kCLConnectionMessageWorkoutStop
-[CMWorkoutManagerInternal _setSuggestedStopTimeout:]
CoreLocation: Workout, Registering suggested stop timeout, %@, %d, %p
kCLConnectionMessageSetWorkoutTimeout
-[CMWorkoutManagerInternal _handleDaemonResponse:]
CoreLocation: Workout, nil event dictionary, %@
CoreLocation: Workout, Error, %d, %@
-[CMWorkoutManagerInternal _handleDaemonEvent:]
CoreLocation: Workout, ERROR, %d, %@
CoreLocation: Workout, DID START at %f, %@
CoreLocation: Workout, DID STOP at %f, %@
CoreLocation: Workout, WILL PAUSE at %f, %@
CoreLocation: Workout, WILL RESUME at %f, %@
CoreLocation: Workout, SUGGESTED STOP at %f, %@
CoreLocation: Workout, Unrecognized event, %@
CoreLocation: Workout, Unrecognizable event dictionary, %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2237.0.18/Framework/CoreMotion/CMWorkoutManager.mm
workout
seconds > 0
T@"CMWorkoutManagerInternal",R,N,V_internal
T@"<CMWorkoutManagerDelegate>",N
CMMsl.Writer
Cannot open Msl file
Cannot seek to end of Msl file
Cannot seek to start of Msl file
Short signature in Msl file
Bad signature in Msl file
Cannot create dispatch_io for Msl file
zstream status? Msl %d
Msl dispatch io write error %s
v24@?0B8^{dispatch_data_s=}12i20
batch
super
fConnected
fEndTime
fStartTime
reserved
scaledValue
speedRange
speedThreshold
heightM
hrmax
hrmin
hronset
runVo2max
vo2max
weightKG
pause
accuracy
biasX
biasY
biasZ
calibrationLevel
horizontal
magneticFieldX
magneticFieldY
magneticFieldZ
magneticHeading
magnitude
trueHeading
compassJustAlignedToStableField
cost
coverage
earthDiffRatio
hasConsistency
poseX
poseY
poseZ
quality
scaleX
scaleY
scaleZ
calibratedField
predictedField
scale
unitDistance
vertical
correction
writeTo
/BuildRoot/Library/Caches/com.apple.xbs/Binaries/CoreLocationFramework_Sim/install/TempContent/Objects/CoreLocation.build/Msl.build/DerivedSources/CMMslSens.gen.cpp
_correction
clientID
quaternionW
quaternionX
quaternionY
quaternionZ
rotationRateX
rotationRateY
rotationRateZ
status
userAccelerationX
userAccelerationY
userAccelerationZ
variant
estimate
measurement
noisevariance
residual
statevariance
biasvariance
aopTsNow
aopTsSensor
magMax
xMax
xMin
xZCTime
yMax
yMin
yZCTime
zMax
zMin
zZCTime
event
value
gyroMaxMean
magnitudeDiffUnity
maxAccelStdAxis
sampleNumMod3
subType
triggerEnabled
triggerOn
varianceX
varianceY
varianceZ
allowRelaxedGyroMean
gyroMean
gyroVariance
stillOnAll
temperatureBias
axis
intercept
lastMiniCal
slope
fsync
sampleNum
codedInvocation
fromName
toName
accel
accelBatch
accelGesture
accelGps
accelOscarEmu
bTConnection
basebandSpeed
bodyMetrics
calorimetryPauseEvent
cftime
coarseElevationChange
compassAlignment
compassCalibration
compassConstraints
compassCorrection
courseConstraints
courseCorrection
deviceMotionCovariance
elevationChange
enhancedDeviceMotion
fallStats
gestureHint
gravityConstraints
gravityCorrection
gyro
gyroBiasAndVariance
gyroBiasConstraints
gyroBiasCorrection
gyroBiasFit
gyroCompass
gyroDt
gyroGps
gyroOscarEmu
intersiloNSCodingData
locationOscarEmu
magnetometer
metsInfo
motionGPSLocation
motionLoiData
motionStateUpdate
motionWifiAssociation
motionWifiLocation
natalieData
nonlinearBiasFit
odometerWithAltitude
onsetHeartRateData
pressureFiltered
pressureFilteredNoTemperature
pressureGps
pressureOscarEmu
prox
sessionOverride
stepCadenceToStrideLengthBin
streamingHeartRateData
strideCalBin
touchOscarEmu
vibrationEvent
watchOrientationSettings
workoutEvent
altitude
course
courseAccuracy
horizontalAccuracy
latitude
locationLoggingEnabled
longitude
speed
speedAccuracy
verticalAccuracy
metsDiff
metsHR
metsWR
deltaDistance
deltaDistanceAccuracy
horzUncSemiMaj
horzUncSemiMajAz
horzUncSemiMin
originDevice
timestampGps
undulation
undulationModel
arrivalDate
departureDate
caltype
exitState
hidTimestamp
isVehicular
machineFrequency
motionType
mounted
mountedConfidence
rowStrokeAmplitude
rowStrokeFrequency
rowStrokePower
standing
turn
vectorMagnitude
wallStartTime
isWifiAssociated
activityType
fGpsAvailability
fractionalGrade
isStanding
rawGradeType
error
overlap
gpsAltitude
gpsSpeedAccuracy
rawSpeed
groundAltitude
groundAltitudeUncertainty
smoothedGPSAltitude
smoothedGPSAltitudeUncertainty
dataSource
interpolation
sinceLastGood
detectionMask
sessionType
strideLength
kValue
touchDetected
isDeviceVibrating
crown
wrist
1.2.11
CMSedentaryTimer_Internal
CMSedentaryTimer
CMMotionActivityManager
CMNatalieData
CMAccelerometerDataInternal
NSCopying
CMAccelerometerData
CMAltitudeDataInternal
CMAltitudeData
CMSignificantElevationSample
NSSecureCoding
NSCoding
CMVehicleStateData
CMVehicleState
CMWorkout
CMSwimWorkout
CMFitnessMachineWorkout
CLIRPUnencodableArgument
CLIntersiloRecordingProxyToRecipient
CLIntersiloRecordingProxyToInitiator
CLIntersiloServiceProtocol
CLIntersiloProxyDelegateProtocol
NSObject
CLIntersiloClientProtocol
CLIntersiloRecordingProxy
CMDeviceMotionInternal
CMDeviceMotion
CMAttitudeInternal
CMAttitude
CMAmbientPressureDataInternal
CMAmbientPressureData
CMRecordedAccelerometerData
CMRecordedGyroData
CMSensorDataList
NSFastEnumeration
CMSensorRecorderInternal
CMSensorRecorder
CMLogItemInternal
CMLogItem
CMWakeGesturePhone
BiometricKit
CMOdometerProxy
CMOdometer
CMExerciseMinuteData
CMGyroDataInternal
CMGyroData
CMCatherineData
CMSpringTrackerInternal
CMSleepTracker
CMVO2MaxInputs
CMMotionTimeRange
CMCallHandednessManager
CMCalorieUserInfo
CLIntersiloUniverse
CMSedentaryTimerData
CMExerciseMinuteInternal
CMExerciseMinute
CMMotionAlarmManagerInternal
CMMotionAlarmManager
CMNatalimeterInternal
CMNatalimeter
CMMagnetometerDataInternal
CMMagnetometerData
CMAnomalyManager
CMHealthTrackerInternal
CMHealthTracker
CMMotionManagerInternal
CMMotionManager
CMElevationData
CMActivity
CMGestureManagerInternal
CMGestureManager
CMActivityManagerInternal
CMActivityManager
CMPedometerProxy
CMPedometer
CLIntersiloReplayServiceServiceProtocol
CLIntersiloReplayServicePublicProtocol
CLIntersiloReplayServiceClientProtocol
CLIntersiloReplayService
CLCompassDatabaseProtocol
CLNotifierServiceProtocol
CLCompassDatabaseClientProtocol
CLNotifierServiceClientProtocol
CLCompassDatabaseAdapter
CMWakeGestureWatch
CLJsonLogging
IsSupported
CMOdometerData
CLGeomagneticModelProviderProtocol
CLGeomagneticModelProviderClientProtocol
CLGeomagneticModelProviderAdapter
CMFitnessMachineInternal
CMFitnessMachine
CLSensorRecorderSensorMeta
CLSensorRecorderSensorMetaRequestById
CLSensorRecorderSensorMetaRequestByDateRange
CLSensorRecorderSensorDataRequestById
CLSensorRecorderRecordSensorTypeFor
CLSensorRecorderWriteSensorDataToFileForDateRange
CLSensorRecorderSensorAvailable
CLSensorRecorderSensorSampleRate
CMMotionActivity
CMPickupManager
CMPedometerData
CMPedometerEvent
CMDeviceOrientation
CMDeviceOrientationManagerInternal
CMDeviceOrientationManager
CLDeviceMotionProperties
CMPocketStateQueueBlockPair
CMPocketStateManager
CMSleepData
CMFall
CMSkiTrackerInternal
CMSkiTracker
CMCatherineFeederInternal
CMCatherineFeeder
CMSkiData
CLGyroCalibrationDatabaseProtocol
CLGyroCalibrationDatabaseClientProtocol
CLGyroCalibrationDatabaseAdapter
CMPedometerBin
CMMotionUtils
CMActivityAlarmProxy
CMVehicleConnectionData
CMVehicleConnection
CMActivityAlarm
CMStepCounterProxy
CMStepCounter
CMDeviceMotionLite
CLSilo
CLDispatchTimerScheduler
CLTimerScheduler
CLDispatchSilo
MainSilo
CLTimer
CLExtensions
CLIntersiloInterfaceSelectorInfo
CLIntersiloInterface
CMAltimeterInternal
CMAltimeter
CMElevation
CMSwimTrackerInternal
CMSwimTracker
CMMotionAlarm
CMMetMinute
CMSwimData
CLIntersiloProxyToRecipient
CLIntersiloProxyToInitiator
CLIntersiloProxy
CMOnBodyStatus
CLIntersiloService
CLIntersiloServiceMock
CLIntersiloServiceMockProtocol
CMWakeGestureManager
CLServiceVendorHeartbeatRecord
_Locationd
_CLMainService
_CLUnSupportedService
CLServiceVendor
CMFitnessMachineData
CMOnBodyStatusManager
CLNotifierData
CLNotifierClientAdapter
CLNotifierServiceAdapter
CMWorkoutManagerInternal
CMWorkoutManager
numberWithInt:
intValue
stringWithUTF8String:
boolValue
init
objectForKeyedSubscript:
_startWatchdogCheckins
dealloc
_stopWatchdogCheckins
sendMessageWithReplySync:
setTimerArmed:
isTimerArmed
errorWithDomain:code:userInfo:
integerValue
_handleAlarmDataResponse:withHandler:
_teardown
_isActive
_handleStartStopTimerResponse:withHandler:
_registerForAlarmsWithHandler:
fClientQueue
fWatchdogTimer
fDaemonQueue
fLocationdConnection
_timerArmed
alloc
release
featureAvailability:
_internal
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
timeIntervalSinceReferenceDate
numberWithDouble:
numberWithBool:
dictionaryWithObjects:forKeys:count:
isAvailable
isActive
startTimerWithStartTime:periodInterval:reminderInterval:autoReschedule:handler:
stopTimerWithHandler:
queryAlarmDataSince:withHandler:
registerForAlarmsWithHandler:
authorizationStatus
addOperationWithBlock:
_handleQueryResponse:onQueue:withHandler:
tccServiceMotionAccessWithBlock:
retain
isActivityAvailable
queryActivityStartingFromDate:toDate:toQueue:withHandler:
startActivityUpdatesToQueue:withHandler:
stopActivityUpdates
fLocationConnection
fQueue
fHandler
fHandlerQueue
initWithTimestamp:
copy
initWithCoder:
decodeDoubleForKey:
decodeIntegerForKey:
class
decodeObjectOfClass:forKey:
allocWithZone:
initWithStartDate:recordId:session:mets:natalies:basalNatalies:sourceId:
encodeWithCoder:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
dateWithTimeIntervalSinceReferenceDate:
recordId
startDate
sessionName:
mets
stringValue
natalies
basalNatalies
sourceId
stringWithFormat:
supportsSecureCoding
maxNatalieEntries
copyWithZone:
session
description
fRecordId
fStartDate
fSession
fMets
fNatalies
fBasalNatalies
fSourceId
setAcceleration:
initWithAcceleration:
fAcceleration
timestamp
initWithAcceleration:andTimestamp:
acceleration
numberWithUnsignedChar:
getBytes:length:
numberWithUnsignedInt:
setAltitude:andPressure:
initWithAltitude:andPressure:
fAltitude
fPressure
initWithAltitude:andTimestamp:atBaseAltitude:
initWithTimestamp:pressure:relativeAltitude:
relativeAltitude
pressure
initWithUUIDBytes:
initWithTimeIntervalSinceReferenceDate:
initWithDouble:
initWithRecordId:sourceId:startDate:endDate:elevationAscended:elevationDescended:
endDate
elevationAscended
elevationDescended
initWithSignificantElevation:
initWithFilteredElevation:
fEndDate
fElevationAscended
fElevationDescended
UTF8String
cStringUsingEncoding:
mainBundle
objectForInfoDictionaryKey:
timeRange
deviceId
initWithTimeRange:deviceId:
fTimeRange
fDeviceId
doubleValue
initWithStartDate:endDate:
autorelease
objectForKey:
unsignedIntegerValue
mostRecentVehicleConnection
mostRecentInVehicle
vehicularState
vehicularHints
lastPathComponent
fileURLWithPath:isDirectory:
dataWithContentsOfURL:options:error:
domain
isEqual:
code
writeToURL:options:error:
assertInside
sharedApplication
performSelector:
applicationState
processInfo
processName
compare:
initWithSessionId:type:
sessionId
type
workoutName:
CLMotionActivityTypeFromCMWorkoutType:
CMWorkoutTypeFromCLMotionActivityType:
natalieDataSessionFromWorkoutType:
workoutTypeFromNatalieDataSession:
fSessionId
fType
initWithSessionId:location:poolLength:
location
swimLocationName:
poolLength
isMemberOfClass:
swimWorkoutInstance:
fLocation
fPoolLength
initWithSessionId:workoutType:manufacturerName:model:
manufacturerName
model
fitnessMachineWorkoutInstance:
fManufacturerName
fModel
defaultManager
currentDirectoryPath
stringByAppendingString:
silo
nonce
initWithProxiedInterface:
initWithProxiedInterface:andUninitializedPeer:
.cxx_destruct
peer
_peer
initWithProxiedInterface:delegateObject:delegateSilo:
initWithProxiedInterface:delegateObject:delegateSilo:andUninitializedPeer:
handleAbstractInvocation:selectorInfo:selfProxy:senderProxy:
respondsToSelector:
proxyForRecipientObject:inSilo:recipientName:withInboundInterface:andOutboundInterface:
setProxyPairRecordingInboundTriggerNames:outboundTriggerNames:
setProxyPairRecordingWriter:
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
proxiedInterface
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
debugDescription
valid
setValid:
isSupported
getSilo
becameFatallyBlocked:index:
performSyncOnSilo:invoker:
beginService
endService
registerDelegate:inSilo:
setDelegateEntityName:
extendSelectorInfoWithProtocol:bases:
null
delegate
delegateName
setTriggeringDelegateNames:
setRecordingWriter:
triggeringDelegateNames
member:
delegateSilo
invokeWithTarget:
methodSignature
methodReturnLength
async:
offsiloHandleInvocation:selectorInfo:peer:
bytes
length
initiatorRepresentingClass
recipientRepresentingClass
proxyForRecipientObject:inSilo:recipientName:withInboundInterface:inboundTriggerNames:andOutboundInterface:outboundTriggerNames:recordingWriter:
dispatchEncodedInvocation:
.cxx_construct
_specialRole
_delegateName
_recordingWriter
_triggeringDelegateNames
numberOfArguments
arrayWithCapacity:
addObject:
typeStr
getArgumentTypeAtIndex:
getArgument:atIndex:
archivedDataWithRootObject:
unarchiveObjectWithData:
count
objectAtIndexedSubscript:
signatureWithObjCTypes:
invocationWithMethodSignature:
setSelector:
dataWithBytes:length:
mutableBytes
setArgument:atIndex:
array
retainArguments
numberWithChar:
numberWithFloat:
numberWithLong:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithShort:
numberWithUnsignedShort:
charValue
unsignedCharValue
floatValue
unsignedIntValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
shortValue
unsignedShortValue
setQuaternion:
initWithQuaternion:
setDeviceMotion:
initWithDeviceMotion:
fGravity
fUserAcceleration
fRotationRate
fAttitude
fMagneticField
fMagneticFieldCalibrationLevel
fDoingYawCorrection
fDoingBiasEstimation
fHeading
decodeBoolForKey:
quaternion
encodeBool:forKey:
magneticField
initWithDeviceMotion:andTimestamp:
attitude
rotationRate
gravity
userAcceleration
magneticFieldCalibrationLevel
doingYawCorrection
doingBiasEstimation
heading
fQuaternion
pitch
roll
rotationMatrix
multiplyByInverseOfAttitude:
setAmbientPressure:
initWithPressure:
initWithPressure:andTimestamp:
ambientPressure
mutableCopy
addEntriesFromDictionary:
resetWithData:timestamp:walltime:identifier:
decodeFloatForKey:
encodeFloat:forKey:
initWithData:timestamp:walltime:identifier:
identifier
_startDateValue
_accelerationValue
_timestampValue
_identifier
temperature
_rotationRate
_temperatureValue
newMetaSinceID:forType:
initWithCapacity:
_updateCurrentBlockProperties
_updatePointers
newMetaFrom:to:forType:
teardown
dataIdentifier
startTime
offset
setObject:atIndexedSubscript:
dataSize
newMetaByID:forType:
newDataByID:metaID:forType:
initWithIdentifier:andType:
initFrom:to:withType:
fProxy
fDataBuffer
fCurrentBlock
fCurrentBlockIdentifier
fCurrentBlockDataIdentifier
fCurrentBlockStartTime
fCurrentBlockTimestamp
fDataBufferPtr
fDataBufferLength
fCurrentIdentifier
fStartingIdentifier
fRetrievedDataBufferIdentifier
fBlockOffset
fAccelUnpacker
fGyroUnpacker
fCachedData
fMetaArray
fDataType
_newMetaUsingMessage:withIdentifier:forType:
setIdentifier:
setDataType:
sendMessageSync:onConnection:timeoutAfter:withReplyHandler:
setStartTime:
setEndTime:
fileDescriptor
setRate:
setMetaIdentifier:
writeSensorDataToFile:from:to:forType:
setSensorSampleRate:forType:
fInternalQueue
isRecordingAvailableForType:
tccServiceMotionAccessWithLabel:
sensorDataFromDate:toDate:forType:
timeIntervalSinceDate:
dateByAddingTimeInterval:
validateTimesFromDate:toDate:
sendSensorDataToUrl:fromDate:toDate:forType:
fileHandleForWritingToURL:
absoluteString
removeItemAtURL:error:
recordDataType:forDuration:
setDuration:
isAccelerometerRecordingAvailable
isGyroRecordingAvailable
isAuthorizedForRecording
accelerometerDataSinceId:
gyroDataSinceId:
accelerometerDataFromDate:toDate:
gyroDataFromDate:toDate:
sendAccelDataToUrl:fromDate:toDate:
sendGyroDataToUrl:fromDate:toDate:
recordAccelerometerForDuration:
recordGyroForDuration:
accelerometerDataFrom:to:
recordAccelerometerFor:
accelerometerDataSince:
setAccelSampleRate:
setGyroSampleRate:
date
vendor
proxyForService:
dumpDatabase:onCompletion:
initWithMode:
mode
register:forNotification:registrationInfo:
unregister:forNotification:
fTimestamp
_internalLogItem
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
initWithBytesNoCopy:length:freeWhenDone:
handleFailureInFunction:file:lineNumber:description:
clientLocation
timeZoneWithName:
initForWritingWithMutableData:
setRequiresSecureCoding:
finishEncoding
initWithString:
isEqualToString:
loadPreferences
stopWakeGestureUpdates
isWakeGestureAvailable
defaultCenter
onNotificationControl:
addObserver:selector:name:object:suspensionBehavior:
removeObserver:name:object:
wakeGestureManager:didUpdateWakeGesture:
userInfo
invokeDelegateWithState:
onWakeUpdated:
onPowerStateUpdated:
onBacklightServiceUpdated:
stringForNotification:
stringForMode:
stringForStartPose:
stringForViewPose:
stringForGestureState:
playAlert
logWakeLatency
hasSlowBootArgs
startWakeGestureUpdates
simulateGestureWithDelay:Duration:
fPrivateQueue
gestureUpdatesStarted
fWakeDispatcher
fPowerStateDispatcher
fWakeGestureVisitor
fCurrentState
fMeasureLatencyState
fWakePacketTimestamp
fIoNotifyPort
fIoNotification
backlightService
fLastNotificationTime
fScreenDimmingNotificationToken
fLockScreenToken
fLastDisplayOnTime
fProcessName
fIsRunningInPrimaryProcess
fEnableLatencyAlert
fEnableAudioAlert
fLatencyAlertThreshold
containsObject:
reenableDetectedStateRecognition
_stopOdometerUpdates
odometer
odometer:didUpdateGpsAvailability:
getExecutablePathFromPid:
setTotalDistance:
totalDistance
setStartDate:
setAverageSpeed:
distance
currentSpeed
averageSpeed
initWithDistance:startDate:endDate:currentSpeed:averageSpeed:
initWithOdometer:
_startDaemonConnection
_startOdometerUpdatesWithHandler:
setOdometer:
fCallbackQueue
fGpsAvailability
_odometer
_totalDistance
_averageSpeed
_startDate
odometerProxy
startOdometerUpdatesForActivity:withHandler:
stopOdometerUpdates
setDelegate:
_delegate
_odometerProxy
initWithStartDate:recordId:sourceId:
maxExerciseMinuteDataEntries
setRotationRate:
initWithRotationRate:
initWithRotationRate:andTimestamp:
data
setAdaptedNotifier:
initWithData:destructor:
onNotification:withData:
initWithCatherine:confidence:timestamp:
catherine
confidence
_catherine
_confidence
_startWithHandler:
_handleStartStopResponse:handler:
initWithUUIDString:
initWithSessionId:
_isTracking
_stopWithHandler:
_querySpringDataFromRecord:handler:
fTrackingStarted
isTracking
startWithHandler:
stopWithHandler:
querySleepDataFromRecord:handler:
initWithSample:
heartRate
heartRateConfidence
gradeType
grade
hasGPS
hasStrideCal
metSource
workoutType
cadence
pace
VO2MaxInputFromCMVO2MaxInputs:
initWithRecordId:startDate:mets:metSource:heartRate:heartRateConfidence:grade:gradeType:cadence:pace:hasGPS:hasStrideCal:workoutType:
fMetSource
fHeartRate
fHeartRateConfidence
fGrade
fGradeType
fCadence
fPace
fHasGPS
fHasStrideCal
fWorkoutType
resetBytesInRange:
CMMotionTimeRangeFromCLMotionTimeRange:
CLMotionTimeRangeFromCMMotionTimeRange:
isCallHandednessAvailable
onCallHandednessStateUpdated:
callHandednessManager:didUpdateState:
startCallHandednessUpdates
stopCallHandednessUpdates
fDispatcher
resourcePath
initWithAge:gender:height:weight:condition:
gender
genderString:
height
weight
condition
initWithAge:gender:height:weight:
fAge
fGender
fHeight
fWeight
fCondition
initWithKey:silo:vendor:
sharedInstance
newIsolatedUniverseWithOnlySilo:
newSharedVendorUniverseWithSilo:
_silo
_vendor
initWithStartDate:firedDate:alarmType:didWake:
firedDate
didWake
alarmType
fFiredDate
fAlarmType
fDidWake
arrayWithArray:
_startUpdatesFromRecord:handler:
_queryExerciseMinutesFromRecord:handler:
_startUpdatesWithHandler:
lastObject
numberWithInteger:
UUIDString
UUID
_stopUpdates
fAppQueue
fStartedUpdates
fMostRecentRecord
isAuthorizedForEntitlement:
isExerciseMinuteAvailable
startUpdatesFromRecord:handler:
stopUpdates
startUpdatesWithHandler:
queryExerciseMinutesFromRecord:handler:
initWithBool:
main
setUnderlyingQueue:
initWithFormat:
stationary
_startListeners
_stopListeners
_handleAlarmFire:
manager
name
setObject:forKey:
alarmDidRegister:error:
copyPropertiesFromAlarm:
alarmDidUnregister:error:
removeObjectForKey:
repeats
alarmId
remoteAppLaunchedWithResult:error:
isValid
alarmDidFire:error:
instance
_registerAlarm:error:
_unregisterAlarm:error:
_acknowledgeAlarm:error:
_launchRemoteAppWithError:delegate:
fAlarms
fListening
initWithName:
initWithName:type:duration:repeats:
setManager:
unregisterAlarmWithName:error:
acknowledgeAlarmWithName:error:
registerAlarmWithName:type:duration:repeats:error:
launchRemoteAppWithError:
unregisterAlarm:error:
acknowledgeAlarm:error:
_name
_setSession:withCompletionHandler:
_handleQueryResponse:withHandler:
_queryAbsoluteNatalimetryDataSinceRecord:withHandler:
_queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:
_startAbsoluteNatalimetryDataUpdatesWithHandler:
_stopAbsoluteNatalimetryDataUpdates
_promptsNeeded
fResendActivityOverrideOnInterrupt
fActivityOverride
setUserProfile:error:
isPaceAvailable
_shouldAllowMotionCalibrationPromptsForSession:
briskMinuteMetsThreshold
activeMetsThreshold
userProfile
defaultUserProfile
setUserInfo:error:
resetCalibrationDataWithError:
isNatalimeterAvailable
computeRestingCaloriesAtRate:user:duration:
computeTimeToActiveCalories:user:workoutType:
setSession:withCompletionHandler:
queryAbsoluteNatalimetryDataSinceRecord:withHandler:
queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:
startAbsoluteNatalimetryDataUpdatesWithHandler:
stopAbsoluteNatalimetryDataUpdates
getSupportedMetricsForSession:
promptsNeededForSession:
setMagneticField:
initWithMagneticField:
initWithMagneticField:andTimestamp:
isAnomalyDetectionAvailable
startAnomalyDetection
stopAnomalyDetection
ackAnomalyEvent:withResolution:
contentsOfDirectoryAtPath:error:
reverseObjectEnumerator
objectEnumerator
_queryMetMinutesFromDate:toDate:handler:
_queryVO2MaxInputsFromRecord:handler:
isMetMinutesAvailable
isAuthorizedForMetMinutes
isVO2MaxDataAvailable
isAuthorizedForVO2MaxData
queryMetMinutesFromDate:toDate:handler:
queryVO2MaxInputsFromRecord:handler:
fDeviceMotionLiteClientQueue
setFDeviceMotionLiteClientQueue:
fDeviceMotionLiteFusedHandler
setFDeviceMotionLiteFusedHandler:
fDeviceMotionLitePhysicalDeviceID
setFDeviceMotionLitePhysicalDeviceID:
fAccelerometerUpdateInterval
fGyroUpdateInterval
fDeviceMotionUpdateInterval
fMagnetometerUpdateInterval
fShowsDeviceMovementDisplay
fDeviceMotionLiteService
_fDeviceMotionLiteClientQueue
_fDeviceMotionLiteFusedHandler
_fDeviceMotionLitePhysicalDeviceID
initWithDeviceMotionLite:andDeviceID:
availableAttitudeReferenceFrames
sharedManager
isAccelerometerAvailable
isAccelerometerActive
setAccelerometerUpdateInterval:
accelerometerUpdateInterval
accelerometerData
startAccelerometerUpdatesToQueue:withHandler:
startAccelerometerUpdates
stopAccelerometerUpdates
isGyroAvailable
isGyroActive
setGyroUpdateInterval:
gyroUpdateInterval
gyroData
startGyroUpdates
startGyroUpdatesToQueue:withHandler:
stopGyroUpdates
isDeviceMotionAvailable
isDeviceMotionActive
setDeviceMotionUpdateInterval:
deviceMotionUpdateInterval
attitudeReferenceFrame
deviceMotion
startDeviceMotionUpdatesToQueue:withHandler:
startDeviceMotionUpdates
startDeviceMotionUpdatesUsingReferenceFrame:
startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:
stopDeviceMotionUpdates
setShowsDeviceMovementDisplay:
showsDeviceMovementDisplay
dismissDeviceMovementDisplay
isMagnetometerAvailable
isMagnetometerActive
setMagnetometerUpdateInterval:
magnetometerUpdateInterval
magnetometerData
startMagnetometerUpdatesToQueue:withHandler:
startMagnetometerUpdates
stopMagnetometerUpdates
isDeviceMotionLiteAvailable
startDeviceMotionLiteUpdatesForDeviceID:usingConfiguration:toQueue:withFusedHandler:
startDeviceMotionLiteFusedUpdatesForDeviceID:toQueue:withHandler:
stopDeviceMotionLiteUpdatesForDeviceID:
setObject:forKeyedSubscript:
reason
initWithSignificantElevationSample:
activity
initWithMotionActivity:
isMoving
isWalking
isRunning
isDriving
maybeExitingVehicle
hasExitedVehicle
fActivity
enumerateKeysAndObjectsUsingBlock:
startWatchdogCheckinsPrivate
stopWatchdogCheckinsPrivate
initWithPriority:
startGestureUpdatesWithHandlerPrivate:
stopGestureUpdatesPrivate
fPriority
fGestureHandler
fWatchDogTimer
isGestureServiceEnabled
isGestureServiceAvailable
setGestureServiceEnabled:
setGestureHandler:
gestureHandler
disconnect
connect
startActivityUpdatesWithHandlerPrivate:
stopActivityUpdatesPrivate
overrideOscarSideband:withState:
simulateMotionState:withState:
fActivityHandler
fSubscribedToMotionState
fSidebandOverrideSemaphore
fSidebandOverrideQueue
fSidebandOverrideWaiting
fSidebandOverrideResult
fMotionStateSimSemaphore
fMotionStateSimQueue
fMotionStateSimWaiting
fMotionStateSimResult
setActivityHandler:
activityHandler
isFloorCountingAvailable
numberOfSteps
numberOfPushes
floorsAscended
floorsDescended
activeTime
currentPace
currentCadence
isOdometerDistance
isOdometerPace
initWithStartDate:endDate:steps:distance:floorsAscended:floorsDescended:recordID:currentPace:currentCadence:activeTime:sourceId:isOdometerDistance:isOdometerPace:pushes:workoutType:
_internalQueryPedometerDataFromDate:toDate:onQueue:withHandler:
isStepCountingAvailable
localizedDescription
_handleRecordQueryResponse:withHandler:
sendMessage:withReply:
_queryPedometerDataFromDate:toDate:withHandler:
_startPedometerUpdatesFromDate:withHandler:
_stopPedometerUpdates
_queryPedometerDataSinceDataRecord:withHandler:
_startPedometerEventUpdatesWithHandler:
_stopPedometerEventUpdates
_strideCalibrationDump
_queryPedometerCalibrationBinsWithHandler:forType:forRemote:
fStepCountFromStart
fPushCountFromStart
fStepCountOffset
fPushCountOffset
fDistanceFromStart
fDistanceOffset
fFloorAscendedStart
fFloorAscendedOffset
fFloorDescendedStart
fFloorDescendedOffset
fActiveTimeFromStart
fActiveTimeOffset
fValidStartDate
fStopUpdates
fFloorCountingAvailable
fPaceAndCadenceAvailable
fEventHandler
fStopEventUpdates
pedometerProxy
_pedometerDataWithRecordID:
isFileURL
path
fileExistsAtPath:
createFileAtPath:contents:attributes:
dataWithJSONObject:options:error:
writeToURL:atomically:
isDistanceAvailable
isCadenceAvailable
isPedometerEventTrackingAvailable
queryPedometerDataFromDate:toDate:withHandler:
startPedometerUpdatesFromDate:withHandler:
stopPedometerUpdates
queryPedometerDataSinceRecord:withHandler:
queryPedometerDataSinceDataRecord:withHandler:
startPedometerEventUpdatesWithHandler:
stopPedometerEventUpdates
sendStrideCalibrationHistoryToFile:
queryRawSpeedToKValueBinsWithHandler:
queryRemoteRawSpeedToKValueBinsWithHandler:
queryStepCadenceToStrideLengthBinsWithHandler:
queryRemoteStepCadenceToStrideLengthBinsWithHandler:
_pedometerProxy
sync:
initWithIdentifier:
useRecordingFileForPlayback:
useRecordingFileForPlayback:coordinator:synchronousFilter:
receiveConnectionTo:
replayDidBeginSuccessfully:
replayDidBlockAwaitingConnectionFrom:to:
replayDidFinish
initWithInboundProtocol:outboundProtocol:
strongToWeakObjectsMapTable
selector
returnAddressIndex
getConnectionKeyFrom:to:
outboundTable
tryToSendOnDeckMessage
coordinator
filter
setCoordinator:
setFilter:
loadNextRecordedMessageOnDeck
universe
setOutboundTable:
_replayReader
_onDeckMessage
_outboundTable
_coordinator
_filter
getBiasWithMagneticField:acceleration:
setBias:withMagneticField:level:magnitude:inclination:
forget:
doAsync:
doAsync:withReply:
syncgetDoSync:
syncgetPendingSetBiasCount
syncgetLookupBiasWithMagneticField:acceleration:bias:level:noResults:
notifier
adaptee
invalidate
initWithClient:
interfaceWithProtocol:bases:
cl_json_serializeValue:
cl_json_serializeKey
dictionaryWithDictionary:
_endDate
_distance
_currentSpeed
fetchGeomagneticModelData:
showCalibrationAlert
dismissCalibrationAlert
_feedFitnessMachineData:
feedFitnessMachineData:
decodeInt64ForKey:
decodeInt32ForKey:
encodeInt64:forKey:
encodeInt32:forKey:
initWithDataType:
setTimestamp:
setDataIdentifier:
setOffset:
setDataSize:
dataType
movement
setMovement:
_movement
_offset
_dataSize
_dataType
_startTime
_timestamp
_dataIdentifier
endTime
_endTime
metaIdentifier
_metaIdentifier
duration
_duration
rate
_rate
unknown
walking
running
automotive
cycling
isVehicleConnected
isVehicleWifiHint
isVehicleGpsHint
isVehicleBasebandHint
isVehicleMotionHint
isVehicleBTHint
fState
isPickupAvailable
onPickupStateUpdated:
pickupManager:didUpdateState:
startPickupUpdates
stopPickupUpdates
initWithInt:
initWithInteger:
averageActivePace
maxPedometerEntries
fNumberOfSteps
fDistance
fFloorsAscended
fFloorsDescended
fCurrentPace
fCurrentCadence
fActiveTime
fIsOdometerDistance
fIsOdometerPace
fNumberOfPushes
initWithEventDate:type:
eventStringFromType:
fDate
decodeIntForKey:
encodeInt:forKey:
initWithOrientation:andTimestamp:
orientation
fOrientation
onDeviceOrientation:
fSampleLock
fDeviceOrientationDispatcher
fDeviceOrientationHandler
fDeviceOrientationQueue
fDeviceOrientationSemaphore
fDidSignalSemaphore
fOrientationCallbackMode
fEnableOrientationNotification
fLatestDeviceOrientationSample
fLastSignificantOrientationSample
currentThread
isMainThread
isMultiThreaded
dummySelector:
detachNewThreadSelector:toTarget:withObject:
initPrivate
onMotionPreferencesUpdated
deallocPrivate
removeObserver:
stopDeviceOrientationUpdatesPrivate
onNotification:
setDeviceOrientationCallbackModePrivate:
startDeviceOrientationUpdatesPrivateToQueue:withHandler:
isDeviceOrientationAvailable
signalAndReleaseSemaphoreIfNecessaryPrivate
updateAggregateDictionaryPrivate
orientationNotificationsDisabled
stringForOrientation:
initialize
isDeviceOrientationActive
startDeviceOrientationUpdatesToQueue:withHandler:
stopDeviceOrientationUpdates
deviceOrientationBlocking
setMode:
fMode
initWithQueue:andBlock:
dispatchWithState:andError:
fQueryQueue
fQueryBlock
isPocketStateAvailable
onPocketStateUpdated:
queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:
addToAggdScalarWithName:andScalar:
translateInternalState:
externalStateToString:
removeAllObjects
pocketStateManager:didUpdateState:
_disableDispatcher
queryStateOntoQueue:withTimeout:andHandler:
fQueryTimer
fCachedState
fMaxMonitorTime
fQueryBlocks
getUUIDBytes:
initWithRecordId:sourceId:sessionId:eventTime:eventType:
eventTime
eventType
eventTypeName:
convertToSpringTrackerEntry:
initWithSpringEntry:
fEventTime
fEventType
areStatsAvailable
setStatsEnabled:
setStatsEnabled:onCompletion:
sendStatsDataToUrl:
sendStatsDataToUrl:onCompletion:
simulateFallEvent
_handleUpdates:
firstObject
runDistance
runElevationDescent
runAvgSpeed
runMaxSpeed
runSlope
initWithRecordId:sourceId:sessionId:startDate:endDate:runDistance:runAvgSpeed:runMaxSpeed:runSlope:runElevationDescent:
_queryUpdatesFromRecord:handler:
fRunDistanceOffset
fRunElevationDescendedOffset
querySkiUpdatesFromRecord:handler:
_feedCatherine:confidence:timestamp:
internal
feedCatherine:confidence:
initWithSkiEntry:
convertToSkiEntry:
fRunDistance
fRunAvgSpeed
fRunMaxSpeed
fRunSlope
fRunElevationDescent
setDateFormat:
stringFromDate:
componentsJoinedByString:
stringByAppendingPathComponent:
syncgetGyroStatsWithBias:slope:l2Error:isDynamic:deltaBias:deltaSlope:deltaError:isDeltaDynamic:
syncgetMaxDynamicTemperature
startFactoryGYTT
syncgetBiasFit:
syncgetNonFactoryRoundCount
syncgetSupportsMiniCalibration
syncgetLastMiniCalibration
syncgetInsertWithBias:variance:temperature:timestamp:
syncgetWipeDatabase
syncgetNumTemperatures
isServiceEnabled:
begin
state
valueOut
initWithValueOut:begin:end:state:
lowerQuartile
center
upperQuartile
_valueOut
_begin
_end
_state
URLsForDirectory:inDomains:
objectAtIndex:
bundleIdentifier
isMotionActivityEntitled
fileHandleForWritingToURL:error:
seekToFileOffset:
readDataOfLength:
writeData:
logDirectory
copyDataFrom:to:
fire
trigger
activityAlarmAvailable
listenForActivityAlarm:
stopListeningForActivityAlarm:
fAlarmCounter
fReplyQueue
fAlarmAvailable
setTrigger:
activityAlarmInfo
initWithTrigger:duration:onQueue:withHandler:
initWithTrigger:duration:onRunLoop:withHandler:
fIsValid
fRunLoop
_trigger
_queryStepCountStartingFromInternal:to:toQueue:withHandler:
_startStepCountingUpdatesToQueue:updateOn:withHandler:
fPrevStepCount
stepcounterProxy
queryStepCountStartingFrom:to:toQueue:withHandler:
startStepCountingUpdatesToQueue:updateOn:withHandler:
stopStepCountingUpdates
enabled
getTotalCountToQueue:withHandler:
deleteHistory
setEnabled:
_stepcounterProxy
allowsKeyedCoding
tilt
isUsingCompass
physicalDeviceUniqueID
rawAcceleration
rawRotationRate
machTimestamp
gyroTemperature
compassTemperature
rawMagneticField
_usingCompass
_gyroTemperature
_compassTemperature
_attitude
_physicalDeviceUniqueID
_machTimestamp
_gravity
_userAcceleration
_rawAcceleration
_rawRotationRate
_rawMagneticField
assertOutside
newTimer
afterInterval:async:
timer
shouldFire
queue
reflectNextFireTime:fireInterval:
setTimer:
initWithDispatchSilo:
source
setSource:
_source
initInSilo:withScheduler:
setName:
initWithUnderlyingQueue:
initMain
operationQueue
_queue
_operationQueue
updateScheduler
setNextFireAfterDelay:
setNextFireTime:
setFireInterval:
setNextFireAfterDelay:interval:
setNextFireTime:interval:
handler
setHandler:
nextFireTime
fireInterval
_scheduler
_handler
_nextFireTime
_fireInterval
rangeOfString:options:
hasSuffixInsensitive:
hasPrefix:
_typeString
initWithSelector:andMethodSignature:
replyBlockIndex
_replyBlockIndex
_returnAddressIndex
_sel
_sig
initWithProtocol:bases:
appendString:
appendFormat:
getInfoForSelector:
protocol
_selectors
_protocol
_startElevationUpdatesWithHandler:
_stopElevationUpdates
_startSignificantElevationUpdatesWithHandler:
_stopSignificantElevationUpdates
_querySignificantElevationChangeFromDate:toDate:withHandler:
_startRelativeAltitudeUpdates
_stopRelativeAltitudeUpdates
fFilteredPressureDispatcher
fRelativeAltimeterHandler
fRelativeAltimeterQueue
fBaseAltimeterSample
fBarometricBaseAltitude
fBaselineReceived
fMostRecentFilteredPressure
fPressureSamples
fSignificantElevationSampleHandler
fElevationAscendedOffset
fElevationDescendedOffset
fStopSignificantElevationUpdates
fFilteredElevationOffset
fStopRelativeAltitudeUpdates
onFilteredPressure:
cancelAllOperations
stopRelativeAltitudeUpdatesPrivate
isRelativeAltitudeAvailable
startRelativeAltitudeUpdatesPrivateToQueue:withHandler:
isSignificantElevationAvailable
startRelativeAltitudeUpdatesToQueue:withHandler:
stopRelativeAltitudeUpdates
startSignificantElevationUpdatesWithHandler:
stopSignificantElevationUpdates
querySignificantElevationChangeFromDate:toDate:withHandler:
isElevationAvailable
startElevationUpdatesWithHandler:
stopElevationUpdates
strokeCount
lapCount
segment
strokeType
initWithRecordId:sourceId:sessionId:startDate:endDate:strokeCount:distance:avgPace:lapCount:strokeType:segment:
_querySwimUpdatesFromRecord:handler:
fStrokeCountOffset
fLapCountOffset
fSegmentCountOffset
maxSwimDataEntries
querySwimUpdatesFromRecord:handler:
initWithName:type:duration:repeats:alarmId:bundleId:state:
setAlarmId:
bundleId
setBundleId:
setState:
acknowledgeWithError:
unregisterWithError:
_repeats
_type
_alarmId
_bundleId
_manager
initWithStartDate:averageIntensity:
averageIntensity
fAverageIntensity
avgPace
strokeTypeName:
convertToSwimEntry:
initWithSwimEntry:
fStrokeCount
fAvgPace
fLapCount
fStrokeType
fSegment
argumentsRetained
raise:format:
setTarget:
invoke
methodSignatureForSelector:
forwardInvocation:
_delegateSilo
_proxiedInterface
initWithOnBodyResult:confidence:timestamp:
result
fResult
fConfidence
initWithLong:
inboundInterface
outboundInterface
setSilo:
setVendor:
isHydrated
_valid
_inboundInterface
_outboundInterface
setKeyedPayloads:
keyedPayloads
getPayloadForKey:
setPayload:forKey:
removePayloadForKey:
setPayload:forSelector:
removePayloadForSelector:
syncgetPayloadForSelector:
syncgetPayloadForKey:
getPayloadForSelector:
_keyedPayloads
logAssert
initTrackingServiceClass:
svcClass
residentCount
setResidentCount:
synCount
ackCount
_synCount
_ackCount
_residentCount
_svcClass
sortUsingComparator:
dictionary
rereadConfiguration
allKeys
setWithArray:
unionSet:
whitespaceAndNewlineCharacterSet
componentsSeparatedByCharactersInSet:
containsString:
getServiceWithName:
setServiceReplacementMap:missBehavior:
setRecordingTriggerMap:outputPathBase:
retireServiceWithName:
isServiceRunning:
ensureServiceIsRunning:
proxyForService:forClient:
getSiloForService:
_catalog
_serviceReplacementMap
_unavailableServiceNames
_missBehavior
_recordingFromTriggersByTo
_recordingToTriggersByFrom
setElapsedTime:
setTotalEnergy:
setTotalElevationAscended:
setTotalStrideCount:
setTotalStrokeCount:
setTotalFloorsClimbed:
setInstantaneousSpeed:
setInstantaneousCadence:
setInstantaneousPower:
setInclination:
setResistanceLevel:
convertToCLFitnessMachineData:
elapsedTime
totalEnergy
totalElevationAscended
totalStrideCount
totalStrokeCount
totalFloorsClimbed
instantaneousSpeed
instantaneousCadence
instantaneousPower
inclination
resistanceLevel
_elapsedTime
_totalEnergy
_totalElevationAscended
_totalStrideCount
_totalStrokeCount
_totalFloorsClimbed
_instantaneousSpeed
_instantaneousCadence
_instantaneousPower
_inclination
_resistanceLevel
isOnBodyStatusDetectionAvailable
startOnBodyStatusDetectionPrivateToQueue:withParameters:handler:
stopOnBodyStatusDetectionPrivate
sharedOnBodyStatusManager
startOnBodyStatusDetectionToQueue:withParameters:handler:
stopOnBodyStatusDetection
setPropertiesWithDictionary:
fSubscribedToOnBodyStatusDetection
fOnBodyStatusQueue
fOnBodyStatusHandler
setData:
setDestructor:
destructor
_data
_destructor
_client
notifierClientNumForCoparty:
_clients
_notifier
_handleDaemonEvent:
_startWorkout:
_unregisterForWorkoutEvents
_handleDaemonResponse:
workoutManagerDidFail:workout:error:
workoutManagerDidStartWorkout:workout:startDate:
workoutManagerDidStopWorkout:workout:stopDate:
workoutManagerWillPauseWorkout:workout:pauseDate:
workoutManagerWillResumeWorkout:workout:resumeDate:
workoutManagerSuggestedStop:workout:stopDate:
_stopWorkout:
_setSuggestedStopTimeout:
_registerForWorkoutEvents
fDelegate
fSender
fWorkout
fResumeWorkoutOnInterrupt
startWorkout:
stopWorkout:
supportedMetricsForWorkoutType:
setSuggestedStopTimeout:
@16@0:8
v16@0:8
B16@0:8
v40@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16@?32
v24@0:8@?16
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
^{CLConnectionClient={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@^{CLConnection}B{CLNameValuePair=^^?^{__CFDictionary}}{CLNameValuePair=^^?^{__CFDictionary}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@?@?@@?@?}
v52@0:8@16d24d32B40@?44
v32@0:8@16@?24
@"CMSedentaryTimer_Internal"
q16@0:8
v48@0:8@16@24@32@?40
v48@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16@32@?40
@"NSOperationQueue"
@24@0:8q16
@72@0:8d16q24q32d40d48d56@64
@24@0:8@16
@24@0:8^{_NSZone=}16
v24@0:8@16
@"NSUUID"
v28@0:8{?=fff}16
@28@0:8{?=fff}16
{?="x"f"y"f"z"f}
@36@0:8{?=fff}16d28
{?=ddd}16@0:8
v24@0:8f16f20
@24@0:8f16f20
@32@0:8f16d20f28
@32@0:8d16f24f28
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8Q16@24@32@40@48@56
@24@0:8r^{CLSignificantElevation=i[16C]ddII}16
@24@0:8r^{CLElevationChangeEntry=ddIIidiifC}16
Q16@0:8
@"NSDate"
@"NSNumber"
@32@0:8@16@24
@"CMMotionTimeRange"
@"NSString"
i24@0:8q16
q20@0:8i16
q24@0:8q16
@32@0:8@16q24
@40@0:8@16q24d32
d16@0:8
@48@0:8@16q24@32@40
@"CLIntersiloRecordingProxy"
@48@0:8@16@24@32@40
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v32@0:8@16@24
v24@0:8r*16
@"CLSilo"16@0:8
v32@0:8@"NSArray"16Q24
v32@0:8@"CLSilo"16@?<v@?>24
v32@0:8@"<CLIntersiloProxyDelegateProtocol>"16@"CLSilo"24
@88@0:8@16@24@32@40@48@56@64{shared_ptr<CMMsl::Writer>=^{Writer}^{__shared_weak_count}}72
v32@0:8{shared_ptr<CMMsl::Writer>=^{Writer}^{__shared_weak_count}}16
B40@0:8@16@24@32
{shared_ptr<CMMsl::Writer>="__ptr_"^{Writer}"__cntrl_"^{__shared_weak_count}}
@"NSSet"
v96@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}iBBBf}16
@96@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}iBBBf}16
{?="x"d"y"d"z"d}
@"CMAttitude"
@104@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}iBBBf}16d96
{?={?=ddd}i}16@0:8
i16@0:8
v48@0:8{?=dddd}16
@48@0:8{?=dddd}16
{?="w"d"x"d"y"d"z"d}
{?=ddddddddd}16@0:8
{?=dddd}16@0:8
v24@0:8{?=ff}16
@24@0:8{?=ff}16
{?="pressure"f"temperature"f}
@32@0:8{?=ff}16d24
{?=dd}16@0:8
@48@0:8^{CMAccel100=fffQ}16Q24d32Q40
v48@0:8^{CMAccel100=fffQ}16Q24d32Q40
@48@0:8^{CMGyro50=ffffQ}16Q24d32Q40
v48@0:8^{CMGyro50=ffffQ}16Q24d32Q40
f16@0:8
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@28@0:8Q16i24
@36@0:8d16d24i32
@"CMSensorRecorderInternal"
@"NSObject<OS_xpc_object>"
@"CLSensorRecorderSensorMeta"
{AccelUnpacker="fData"*"fBitsLeft"I"fPartial"C"fTimestampLast"Q"fTimestampLastDelta"q"fSampleLast"[3i]}
{GyroUnpacker="fData"*"fBitsLeft"I"fPartial"C"fTimestampLast"Q"fTimestampLastDelta"q"fSampleLast"[4i]}
@"NSMutableArray"
@"NSArray"
@36@0:8r*16Q24i32
B44@0:8@16d24d32i40
B24@0:8I16i20
@36@0:8Q16Q24i32
B20@0:8i16
@24@0:8Q16
B32@0:8^@16@24
@36@0:8@16@24i32
B44@0:8@16@24@32i40
v24@0:8d16
v28@0:8i16d20
B20@0:8I16
@24@0:8d16
@20@0:8C16
B32@0:8d16d24
v24@0:8q16
v24@0:8r^{Sample=d^{CLGestureReport}}16
v24@0:8r^{Sample=I}16
v20@0:8I16
^{Dispatcher=^^?@}
{unique_ptr<CMWakeGestureVisitor, std::__1::default_delete<CMWakeGestureVisitor> >="__ptr_"{__compressed_pair<CMWakeGestureVisitor *, std::__1::default_delete<CMWakeGestureVisitor> >="__first_"^{CMWakeGestureVisitor}}}
^{IONotificationPort=}
@"CMOdometer"
v32@0:8q16@?24
@"<CMOdometerDelegate>"
@"CMOdometerProxy"
@40@0:8d16q24@32
@40@0:8d16d24d32
@"CMSpringTrackerInternal"
{VO2MaxInput=Q[16C]fdffidBBiqddB}24@0:8@16
@112@0:8Q16@24d32q40d48d56d64q72d80d88B96B100q104
@120@0:8{VO2MaxInput=Q[16C]fdffidBBiqddB}16
@32@0:8{?=dd}16
{?=dd}24@0:8@16
@32@0:8d16d24
v24@0:8r^{Sample=Cd}16
@"<CMCallHandednessDelegate>"
@48@0:8d16q24d32d40
@56@0:8d16q24d32d40q48
@"CLServiceVendor"16@0:8
@40@0:8@16@24@32
@"CLSilo"
@"CLServiceVendor"
@44@0:8d16d24q32B40
@"CMExerciseMinuteData"
@"CMExerciseMinuteInternal"
B32@0:8@16^@24
@"NSMutableDictionary"
B44@0:8@16I24I28B32^@36
B24@0:8^@16
@"<CMMotionAlarmDelegateProtocol>"
@40@0:8Q16@24d32
d40@0:8@16@24q32
Q24@0:8q16
B24@0:8q16
@"CMNatalimeterInternal"
v32@0:8@16q24
@"<CMAnomalyDelegate>"
v40@0:8@16@24@?32
@"CMHealthTrackerInternal"
@?16@0:8
{unique_ptr<CLDeviceMotionLiteService, std::__1::default_delete<CLDeviceMotionLiteService> >="__ptr_"{__compressed_pair<CLDeviceMotionLiteService *, std::__1::default_delete<CLDeviceMotionLiteService> >="__first_"^{CLDeviceMotionLiteService}}}
v24@0:8Q16
v40@0:8Q16@24@?32
v44@0:8@16{?=i}24@28@?36
@64@0:8Q16@24@32@40Q48Q56
@96@0:8{CLMotionActivity=iiiiBfdBiddii{?=b1b1b1b1b1}fff}16
{CLMotionActivity=iiiiBfdBiddii{?=b1b1b1b1b1}fff}16@0:8
{CLMotionActivity="type"i"confidence"i"mountedState"i"mountedConfidence"i"isStanding"B"tilt"f"timestamp"d"isVehicleConnected"B"exitState"i"estExitTime"d"startTime"d"rawType"i"rawConfidence"i"vehicularFlags"{?="motionHint"b1"gpsHint"b1"basebandHint"b1"wifiHint"b1"btHint"b1}"drivingStowedLikelihoodSum"f"drivingArmLikelihoodSum"f"ssLikelihoodSum"f}
@20@0:8i16
v28@0:8B16q20
@"NSObject<OS_dispatch_semaphore>"
q28@0:8B16q20
v36@0:8@?16q24B32
@"CMPedometerProxy"
v40@0:8@16R@24^?32
v24@0:8R@16
v24@0:8@"NSString"16
v40@0:8@"NSString"16R@"<CLIntersiloReplayServiceClientProtocol>"24^?32
v32@0:8@"NSString"16@"NSString"24
B48@0:8@16@24@32@40
^?16@0:8
v24@0:8^?16
{unique_ptr<CMMsl::Reader, std::__1::default_delete<CMMsl::Reader> >="__ptr_"{__compressed_pair<CMMsl::Reader *, std::__1::default_delete<CMMsl::Reader> >="__first_"^{Reader}}}
{Item="_vptr$Base"^^?"_accel"{unique_ptr<CMMsl::Accel, std::__1::default_delete<CMMsl::Accel> >="__ptr_"{__compressed_pair<CMMsl::Accel *, std::__1::default_delete<CMMsl::Accel> >="__first_"^{Accel}}}"_accelBatch"{unique_ptr<CMMsl::AccelBatch, std::__1::default_delete<CMMsl::AccelBatch> >="__ptr_"{__compressed_pair<CMMsl::AccelBatch *, std::__1::default_delete<CMMsl::AccelBatch> >="__first_"^{AccelBatch}}}"_accelGesture"{unique_ptr<CMMsl::AccelGesture, std::__1::default_delete<CMMsl::AccelGesture> >="__ptr_"{__compressed_pair<CMMsl::AccelGesture *, std::__1::default_delete<CMMsl::AccelGesture> >="__first_"^{AccelGesture}}}"_accelGps"{unique_ptr<CMMsl::AccelGps, std::__1::default_delete<CMMsl::AccelGps> >="__ptr_"{__compressed_pair<CMMsl::AccelGps *, std::__1::default_delete<CMMsl::AccelGps> >="__first_"^{AccelGps}}}"_accelOscarEmu"{unique_ptr<CMMsl::AccelOscarEmu, std::__1::default_delete<CMMsl::AccelOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::AccelOscarEmu *, std::__1::default_delete<CMMsl::AccelOscarEmu> >="__first_"^{AccelOscarEmu}}}"_bTConnection"{unique_ptr<CMMsl::BTConnection, std::__1::default_delete<CMMsl::BTConnection> >="__ptr_"{__compressed_pair<CMMsl::BTConnection *, std::__1::default_delete<CMMsl::BTConnection> >="__first_"^{BTConnection}}}"_basebandSpeed"{unique_ptr<CMMsl::BasebandSpeed, std::__1::default_delete<CMMsl::BasebandSpeed> >="__ptr_"{__compressed_pair<CMMsl::BasebandSpeed *, std::__1::default_delete<CMMsl::BasebandSpeed> >="__first_"^{BasebandSpeed}}}"_bodyMetrics"{unique_ptr<CMMsl::BodyMetrics, std::__1::default_delete<CMMsl::BodyMetrics> >="__ptr_"{__compressed_pair<CMMsl::BodyMetrics *, std::__1::default_delete<CMMsl::BodyMetrics> >="__first_"^{BodyMetrics}}}"_calorimetryPauseEvent"{unique_ptr<CMMsl::CalorimetryPauseEvent, std::__1::default_delete<CMMsl::CalorimetryPauseEvent> >="__ptr_"{__compressed_pair<CMMsl::CalorimetryPauseEvent *, std::__1::default_delete<CMMsl::CalorimetryPauseEvent> >="__first_"^{CalorimetryPauseEvent}}}"_cftime"d"_coarseElevationChange"{unique_ptr<CMMsl::CoarseElevationChange, std::__1::default_delete<CMMsl::CoarseElevationChange> >="__ptr_"{__compressed_pair<CMMsl::CoarseElevationChange *, std::__1::default_delete<CMMsl::CoarseElevationChange> >="__first_"^{CoarseElevationChange}}}"_compass"{unique_ptr<CMMsl::Compass, std::__1::default_delete<CMMsl::Compass> >="__ptr_"{__compressed_pair<CMMsl::Compass *, std::__1::default_delete<CMMsl::Compass> >="__first_"^{Compass}}}"_compassAlignment"{unique_ptr<CMMsl::CompassAlignment, std::__1::default_delete<CMMsl::CompassAlignment> >="__ptr_"{__compressed_pair<CMMsl::CompassAlignment *, std::__1::default_delete<CMMsl::CompassAlignment> >="__first_"^{CompassAlignment}}}"_compassCalibration"{unique_ptr<CMMsl::CompassCalibration, std::__1::default_delete<CMMsl::CompassCalibration> >="__ptr_"{__compressed_pair<CMMsl::CompassCalibration *, std::__1::default_delete<CMMsl::CompassCalibration> >="__first_"^{CompassCalibration}}}"_compassConstraints"{unique_ptr<CMMsl::CompassConstraints, std::__1::default_delete<CMMsl::CompassConstraints> >="__ptr_"{__compressed_pair<CMMsl::CompassConstraints *, std::__1::default_delete<CMMsl::CompassConstraints> >="__first_"^{CompassConstraints}}}"_compassCorrection"{unique_ptr<CMMsl::CompassCorrection, std::__1::default_delete<CMMsl::CompassCorrection> >="__ptr_"{__compressed_pair<CMMsl::CompassCorrection *, std::__1::default_delete<CMMsl::CompassCorrection> >="__first_"^{CompassCorrection}}}"_courseConstraints"{unique_ptr<CMMsl::CourseConstraints, std::__1::default_delete<CMMsl::CourseConstraints> >="__ptr_"{__compressed_pair<CMMsl::CourseConstraints *, std::__1::default_delete<CMMsl::CourseConstraints> >="__first_"^{CourseConstraints}}}"_courseCorrection"{unique_ptr<CMMsl::CourseCorrection, std::__1::default_delete<CMMsl::CourseCorrection> >="__ptr_"{__compressed_pair<CMMsl::CourseCorrection *, std::__1::default_delete<CMMsl::CourseCorrection> >="__first_"^{CourseCorrection}}}"_deviceMotion"{unique_ptr<CMMsl::DeviceMotion, std::__1::default_delete<CMMsl::DeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::DeviceMotion *, std::__1::default_delete<CMMsl::DeviceMotion> >="__first_"^{DeviceMotion}}}"_deviceMotionCovariance"{unique_ptr<CMMsl::DeviceMotionCovariance, std::__1::default_delete<CMMsl::DeviceMotionCovariance> >="__ptr_"{__compressed_pair<CMMsl::DeviceMotionCovariance *, std::__1::default_delete<CMMsl::DeviceMotionCovariance> >="__first_"^{DeviceMotionCovariance}}}"_elevationChange"{unique_ptr<CMMsl::ElevationChange, std::__1::default_delete<CMMsl::ElevationChange> >="__ptr_"{__compressed_pair<CMMsl::ElevationChange *, std::__1::default_delete<CMMsl::ElevationChange> >="__first_"^{ElevationChange}}}"_enhancedDeviceMotion"{unique_ptr<CMMsl::EnhancedDeviceMotion, std::__1::default_delete<CMMsl::EnhancedDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::EnhancedDeviceMotion *, std::__1::default_delete<CMMsl::EnhancedDeviceMotion> >="__first_"^{EnhancedDeviceMotion}}}"_fallStats"{unique_ptr<CMMsl::FallStats, std::__1::default_delete<CMMsl::FallStats> >="__ptr_"{__compressed_pair<CMMsl::FallStats *, std::__1::default_delete<CMMsl::FallStats> >="__first_"^{FallStats}}}"_gestureHint"{unique_ptr<CMMsl::GestureHint, std::__1::default_delete<CMMsl::GestureHint> >="__ptr_"{__compressed_pair<CMMsl::GestureHint *, std::__1::default_delete<CMMsl::GestureHint> >="__first_"^{GestureHint}}}"_gravityConstraints"{unique_ptr<CMMsl::GravityConstraints, std::__1::default_delete<CMMsl::GravityConstraints> >="__ptr_"{__compressed_pair<CMMsl::GravityConstraints *, std::__1::default_delete<CMMsl::GravityConstraints> >="__first_"^{GravityConstraints}}}"_gravityCorrection"{unique_ptr<CMMsl::GravityCorrection, std::__1::default_delete<CMMsl::GravityCorrection> >="__ptr_"{__compressed_pair<CMMsl::GravityCorrection *, std::__1::default_delete<CMMsl::GravityCorrection> >="__first_"^{GravityCorrection}}}"_gyro"{unique_ptr<CMMsl::Gyro, std::__1::default_delete<CMMsl::Gyro> >="__ptr_"{__compressed_pair<CMMsl::Gyro *, std::__1::default_delete<CMMsl::Gyro> >="__first_"^{Gyro}}}"_gyroBiasAndVariance"{unique_ptr<CMMsl::GyroBiasAndVariance, std::__1::default_delete<CMMsl::GyroBiasAndVariance> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasAndVariance *, std::__1::default_delete<CMMsl::GyroBiasAndVariance> >="__first_"^{GyroBiasAndVariance}}}"_gyroBiasConstraints"{unique_ptr<CMMsl::GyroBiasConstraints, std::__1::default_delete<CMMsl::GyroBiasConstraints> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasConstraints *, std::__1::default_delete<CMMsl::GyroBiasConstraints> >="__first_"^{GyroBiasConstraints}}}"_gyroBiasCorrection"{unique_ptr<CMMsl::GyroBiasCorrection, std::__1::default_delete<CMMsl::GyroBiasCorrection> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasCorrection *, std::__1::default_delete<CMMsl::GyroBiasCorrection> >="__first_"^{GyroBiasCorrection}}}"_gyroBiasFit"{unique_ptr<CMMsl::GyroBiasFit, std::__1::default_delete<CMMsl::GyroBiasFit> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasFit *, std::__1::default_delete<CMMsl::GyroBiasFit> >="__first_"^{GyroBiasFit}}}"_gyroCompass"{unique_ptr<CMMsl::GyroCompass, std::__1::default_delete<CMMsl::GyroCompass> >="__ptr_"{__compressed_pair<CMMsl::GyroCompass *, std::__1::default_delete<CMMsl::GyroCompass> >="__first_"^{GyroCompass}}}"_gyroDt"{unique_ptr<CMMsl::GyroDt, std::__1::default_delete<CMMsl::GyroDt> >="__ptr_"{__compressed_pair<CMMsl::GyroDt *, std::__1::default_delete<CMMsl::GyroDt> >="__first_"^{GyroDt}}}"_gyroGps"{unique_ptr<CMMsl::GyroGps, std::__1::default_delete<CMMsl::GyroGps> >="__ptr_"{__compressed_pair<CMMsl::GyroGps *, std::__1::default_delete<CMMsl::GyroGps> >="__first_"^{GyroGps}}}"_gyroOscarEmu"{unique_ptr<CMMsl::GyroOscarEmu, std::__1::default_delete<CMMsl::GyroOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::GyroOscarEmu *, std::__1::default_delete<CMMsl::GyroOscarEmu> >="__first_"^{GyroOscarEmu}}}"_gyroTemperature"{unique_ptr<CMMsl::GyroTemperature, std::__1::default_delete<CMMsl::GyroTemperature> >="__ptr_"{__compressed_pair<CMMsl::GyroTemperature *, std::__1::default_delete<CMMsl::GyroTemperature> >="__first_"^{GyroTemperature}}}"_intersiloNSCodingData"{unique_ptr<CMMsl::IntersiloNSCodingData, std::__1::default_delete<CMMsl::IntersiloNSCodingData> >="__ptr_"{__compressed_pair<CMMsl::IntersiloNSCodingData *, std::__1::default_delete<CMMsl::IntersiloNSCodingData> >="__first_"^{IntersiloNSCodingData}}}"_locationOscarEmu"{unique_ptr<CMMsl::LocationOscarEmu, std::__1::default_delete<CMMsl::LocationOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::LocationOscarEmu *, std::__1::default_delete<CMMsl::LocationOscarEmu> >="__first_"^{LocationOscarEmu}}}"_magnetometer"{unique_ptr<CMMsl::Magnetometer, std::__1::default_delete<CMMsl::Magnetometer> >="__ptr_"{__compressed_pair<CMMsl::Magnetometer *, std::__1::default_delete<CMMsl::Magnetometer> >="__first_"^{Magnetometer}}}"_metsInfo"{unique_ptr<CMMsl::MetsInfo, std::__1::default_delete<CMMsl::MetsInfo> >="__ptr_"{__compressed_pair<CMMsl::MetsInfo *, std::__1::default_delete<CMMsl::MetsInfo> >="__first_"^{MetsInfo}}}"_motionGPSLocation"{unique_ptr<CMMsl::MotionGPSLocation, std::__1::default_delete<CMMsl::MotionGPSLocation> >="__ptr_"{__compressed_pair<CMMsl::MotionGPSLocation *, std::__1::default_delete<CMMsl::MotionGPSLocation> >="__first_"^{MotionGPSLocation}}}"_motionLoiData"{unique_ptr<CMMsl::MotionLoiData, std::__1::default_delete<CMMsl::MotionLoiData> >="__ptr_"{__compressed_pair<CMMsl::MotionLoiData *, std::__1::default_delete<CMMsl::MotionLoiData> >="__first_"^{MotionLoiData}}}"_motionStateUpdate"{unique_ptr<CMMsl::MotionStateUpdate, std::__1::default_delete<CMMsl::MotionStateUpdate> >="__ptr_"{__compressed_pair<CMMsl::MotionStateUpdate *, std::__1::default_delete<CMMsl::MotionStateUpdate> >="__first_"^{MotionStateUpdate}}}"_motionWifiAssociation"{unique_ptr<CMMsl::MotionWifiAssociation, std::__1::default_delete<CMMsl::MotionWifiAssociation> >="__ptr_"{__compressed_pair<CMMsl::MotionWifiAssociation *, std::__1::default_delete<CMMsl::MotionWifiAssociation> >="__first_"^{MotionWifiAssociation}}}"_motionWifiLocation"{unique_ptr<CMMsl::MotionWifiLocation, std::__1::default_delete<CMMsl::MotionWifiLocation> >="__ptr_"{__compressed_pair<CMMsl::MotionWifiLocation *, std::__1::default_delete<CMMsl::MotionWifiLocation> >="__first_"^{MotionWifiLocation}}}"_natalieData"{unique_ptr<CMMsl::NatalieData, std::__1::default_delete<CMMsl::NatalieData> >="__ptr_"{__compressed_pair<CMMsl::NatalieData *, std::__1::default_delete<CMMsl::NatalieData> >="__first_"^{NatalieData}}}"_nonlinearBiasFit"{unique_ptr<CMMsl::NonlinearBiasFit, std::__1::default_delete<CMMsl::NonlinearBiasFit> >="__ptr_"{__compressed_pair<CMMsl::NonlinearBiasFit *, std::__1::default_delete<CMMsl::NonlinearBiasFit> >="__first_"^{NonlinearBiasFit}}}"_odometer"{unique_ptr<CMMsl::Odometer, std::__1::default_delete<CMMsl::Odometer> >="__ptr_"{__compressed_pair<CMMsl::Odometer *, std::__1::default_delete<CMMsl::Odometer> >="__first_"^{Odometer}}}"_odometerWithAltitude"{unique_ptr<CMMsl::OdometerWithAltitude, std::__1::default_delete<CMMsl::OdometerWithAltitude> >="__ptr_"{__compressed_pair<CMMsl::OdometerWithAltitude *, std::__1::default_delete<CMMsl::OdometerWithAltitude> >="__first_"^{OdometerWithAltitude}}}"_onsetHeartRateData"{unique_ptr<CMMsl::OnsetHeartRateData, std::__1::default_delete<CMMsl::OnsetHeartRateData> >="__ptr_"{__compressed_pair<CMMsl::OnsetHeartRateData *, std::__1::default_delete<CMMsl::OnsetHeartRateData> >="__first_"^{OnsetHeartRateData}}}"_pressure"{unique_ptr<CMMsl::Pressure, std::__1::default_delete<CMMsl::Pressure> >="__ptr_"{__compressed_pair<CMMsl::Pressure *, std::__1::default_delete<CMMsl::Pressure> >="__first_"^{Pressure}}}"_pressureFiltered"{unique_ptr<CMMsl::PressureFiltered, std::__1::default_delete<CMMsl::PressureFiltered> >="__ptr_"{__compressed_pair<CMMsl::PressureFiltered *, std::__1::default_delete<CMMsl::PressureFiltered> >="__first_"^{PressureFiltered}}}"_pressureFilteredNoTemperature"{unique_ptr<CMMsl::PressureFilteredNoTemperature, std::__1::default_delete<CMMsl::PressureFilteredNoTemperature> >="__ptr_"{__compressed_pair<CMMsl::PressureFilteredNoTemperature *, std::__1::default_delete<CMMsl::PressureFilteredNoTemperature> >="__first_"^{PressureFilteredNoTemperature}}}"_pressureGps"{unique_ptr<CMMsl::PressureGps, std::__1::default_delete<CMMsl::PressureGps> >="__ptr_"{__compressed_pair<CMMsl::PressureGps *, std::__1::default_delete<CMMsl::PressureGps> >="__first_"^{PressureGps}}}"_pressureOscarEmu"{unique_ptr<CMMsl::PressureOscarEmu, std::__1::default_delete<CMMsl::PressureOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::PressureOscarEmu *, std::__1::default_delete<CMMsl::PressureOscarEmu> >="__first_"^{PressureOscarEmu}}}"_prox"{unique_ptr<CMMsl::Prox, std::__1::default_delete<CMMsl::Prox> >="__ptr_"{__compressed_pair<CMMsl::Prox *, std::__1::default_delete<CMMsl::Prox> >="__first_"^{Prox}}}"_sessionOverride"{unique_ptr<CMMsl::SessionOverride, std::__1::default_delete<CMMsl::SessionOverride> >="__ptr_"{__compressed_pair<CMMsl::SessionOverride *, std::__1::default_delete<CMMsl::SessionOverride> >="__first_"^{SessionOverride}}}"_stepCadenceToStrideLengthBin"{unique_ptr<CMMsl::StepCadenceToStrideLengthBin, std::__1::default_delete<CMMsl::StepCadenceToStrideLengthBin> >="__ptr_"{__compressed_pair<CMMsl::StepCadenceToStrideLengthBin *, std::__1::default_delete<CMMsl::StepCadenceToStrideLengthBin> >="__first_"^{StepCadenceToStrideLengthBin}}}"_streamingHeartRateData"{unique_ptr<CMMsl::StreamingHeartRateData, std::__1::default_delete<CMMsl::StreamingHeartRateData> >="__ptr_"{__compressed_pair<CMMsl::StreamingHeartRateData *, std::__1::default_delete<CMMsl::StreamingHeartRateData> >="__first_"^{StreamingHeartRateData}}}"_strideCalBin"{unique_ptr<CMMsl::StrideCalBin, std::__1::default_delete<CMMsl::StrideCalBin> >="__ptr_"{__compressed_pair<CMMsl::StrideCalBin *, std::__1::default_delete<CMMsl::StrideCalBin> >="__first_"^{StrideCalBin}}}"_touchOscarEmu"{unique_ptr<CMMsl::TouchOscarEmu, std::__1::default_delete<CMMsl::TouchOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::TouchOscarEmu *, std::__1::default_delete<CMMsl::TouchOscarEmu> >="__first_"^{TouchOscarEmu}}}"_vibrationEvent"{unique_ptr<CMMsl::VibrationEvent, std::__1::default_delete<CMMsl::VibrationEvent> >="__ptr_"{__compressed_pair<CMMsl::VibrationEvent *, std::__1::default_delete<CMMsl::VibrationEvent> >="__first_"^{VibrationEvent}}}"_watchOrientationSettings"{unique_ptr<CMMsl::WatchOrientationSettings, std::__1::default_delete<CMMsl::WatchOrientationSettings> >="__ptr_"{__compressed_pair<CMMsl::WatchOrientationSettings *, std::__1::default_delete<CMMsl::WatchOrientationSettings> >="__first_"^{WatchOrientationSettings}}}"_workoutEvent"{unique_ptr<CMMsl::WorkoutEvent, std::__1::default_delete<CMMsl::WorkoutEvent> >="__ptr_"{__compressed_pair<CMMsl::WorkoutEvent *, std::__1::default_delete<CMMsl::WorkoutEvent> >="__first_"^{WorkoutEvent}}}"_has"{?="cftime"b1}}
@"NSMapTable"
@"<CLIntersiloReplayServiceClientProtocol>"
v36@0:8R@16i24@28
v28@0:8R@16i24
v36@0:8R@"<CLNotifierServiceClientProtocol>"16i24@"CLNotifierData"28
v28@0:8R@"<CLNotifierServiceClientProtocol>"16i24
v24@0:8R@"<CLNotifierServiceClientProtocol>"16
v32@0:8@?16@?24
B24@0:8@?16
v52@0:8{?=fff}16{?=fff}28i40f44f48
v40@0:8{?=fff}16{?=fff}28
B64@0:8{?=fff}16{?=fff}28^{?=fff}40^i48^B56
v24@0:8@?<v@?^{CLCompassDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}>16
v32@0:8@?<v@?^{CLCompassDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}>16@?<v@?>24
B24@0:8@?<v@?^{CLCompassDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}>16
v32@0:8@"NSString"16@?<v@?@"NSString">24
v28@0:8i16@20
v28@0:8i16@"CLNotifierData"20
^{CLCompassDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}16@0:8
v24@0:8^{value_ostream=B^{ostream}}16
@56@0:8@16@24@32@40@48
v24@0:8@?<v@?^{CLGeomagneticModelProvider=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
v32@0:8@?<v@?^{CLGeomagneticModelProvider=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16@?<v@?>24
B24@0:8@?<v@?^{CLGeomagneticModelProvider=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
^{CLGeomagneticModelProvider=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}16@0:8
@"CMFitnessMachineInternal"
I16@0:8
v20@0:8i16
@"<CMPickupDelegate>"
@124@0:8d16d24i32d36@44@52q60@68@76@84@92@100@108i116i120
@28@0:8i16d20
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{Sample="timestamp"d"orientation"i}
v24@0:8r^{Sample=di}16
@32@0:8@16@?24
v32@0:8q16@24
v40@0:8@16d24@?32
v48@0:8@16d24d32@?40
@"<CMPocketStateDelegate>"
v24@0:8^{CLSpringTrackerEntry=Q[16C][16C]dq}16
@56@0:8Q16@24@32@40q48
@24@0:8r^{CLSpringTrackerEntry=Q[16C][16C]dq}16
B20@0:8B16
v28@0:8B16@?20
@"CMSkiData"
@"CMSkiTrackerInternal"
v40@0:8d16d24d32
v32@0:8d16d24
@"CMCatherineFeederInternal"
@96@0:8Q16@24@32@40@48d56d64d72d80d88
@24@0:8r^{CLSkiEntry=Q[16C][16C]ddddddd}16
v24@0:8^{CLSkiEntry=Q[16C][16C]ddddddd}16
B72@0:8^{?=fff}16^{?=fff}24^{?=fff}32B40^{?=fff}44^{?=fff}52^{?=fff}60B68
B24@0:8^{?=id(?={?={?=fff}{?=fff}}{?=B[246c]})}16
B44@0:8r^{?=fff}16r^{?=fff}24f32d36
v24@0:8@?<v@?^{CLGyroCalibrationDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
v32@0:8@?<v@?^{CLGyroCalibrationDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16@?<v@?>24
B24@0:8@?<v@?^{CLGyroCalibrationDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
^{CLGyroCalibrationDatabase=^^?{BasicMutex=^^?^{MutexInfo}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}16@0:8
@48@0:8d16d24d32q40
@32@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16
B56@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16^{CLConnectionClient={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@^{CLConnection}B{CLNameValuePair=^^?^{__CFDictionary}}{CLNameValuePair=^^?^{__CFDictionary}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@?@?@@?@?}32d40@?48
B24@0:8r*16
q24@0:8@16
Q32@0:8@16@24
@44@0:8I16d20@28@?36
@44@0:8I16d20^{__CFRunLoop=}28@?36
^{__CFRunLoop=}
v40@0:8@16q24@?32
@"CMStepCounterProxy"
@144@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}{?=fff}QBff{?=fff}[3C]}16@136
v32@0:8d16@?24
@"CLTimer"16@0:8
v24@0:8@"CLTimer"16
@"CLTimer"
@"<CLTimerScheduler>"
:16@0:8
@"NSMethodSignature"
{map<SEL *, CLIntersiloInterfaceSelectorInfo *, std::__1::less<SEL *>, std::__1::allocator<std::__1::pair<SEL *const, CLIntersiloInterfaceSelectorInfo *> > >="__tree_"{__tree<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true>, std::__1::allocator<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::less<SEL *>, true> >="__first_"Q}}}
@"Protocol"
{Sample="timestamp"d"pressureData"{?="pressure"f"temperature"f}}
{deque<float, std::__1::allocator<float> >="__map_"{__split_buffer<float *, std::__1::allocator<float *> >="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::__1::allocator<float *> >="__first_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<float> >="__first_"Q}}
v24@0:8r^{Sample=d{?=ff}}16
@"CMAltimeterInternal"
@"CMSwimTrackerInternal"
@36@0:8@16I24I28B32
@56@0:8@16I24I28B32Q36@44i52
@"CMMotionAlarmManager"
@32@0:8{CLMetMinute=dd}16
v24@0:8^{CLSwimEntry=Q[16C][16C]ddddddiiiifffi}16
@104@0:8Q16@24@32@40@48Q56d64d72Q80q88Q96
@24@0:8r^{CLSwimEntry=Q[16C][16C]ddddddiiiifffi}16
@"CLIntersiloProxy"
@"<CLIntersiloProxyDelegateProtocol>"
@"CLIntersiloInterface"
@32@0:8i16i20d24
v32@0:8@16:24
v24@0:8:16
v32@0:8@"NSMutableDictionary"16:24
v32@0:8@"NSMutableDictionary"16@"NSString"24
@"NSMutableDictionary"24@0:8:16
@"NSMutableDictionary"24@0:8@"NSString"16
@"<CMWakeGestureDelegate>"
@24@0:8#16
v28@0:8@16i24
@"NSDictionary"
@"NSMutableSet"
v24@0:8^{_CLFitnessMachineData=dddddqqqdddddd}16
@32@0:8^v16@?24
^v16@0:8
v24@0:8^v16
@24@0:8^{CLNotifierClientBase=^^?}16
^{CLNotifierClientBase=^^?}
v24@0:8^{CLNotifierBase=^^?}16
i24@0:8@16
^{CLNotifierBase=^^?}16@0:8
{map<unsigned long, int, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, int> > >="__tree_"{__tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true> >="__first_"Q}}}
^{CLNotifierBase=^^?}
@"<CMWorkoutManagerDelegate>"
@"CMWorkoutManager"
@"CMWorkout"
@"CMWorkoutManagerInternal"
