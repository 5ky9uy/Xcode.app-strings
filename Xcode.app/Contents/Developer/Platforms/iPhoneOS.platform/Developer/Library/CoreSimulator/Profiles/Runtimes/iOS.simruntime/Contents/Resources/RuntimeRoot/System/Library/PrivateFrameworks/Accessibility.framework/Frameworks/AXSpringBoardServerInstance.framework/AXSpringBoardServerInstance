333333
?333333
MbP?
com.apple.springboardservices.eventobserver.internalSBSEventObserverEventDimmed
SBSceneManager
sceneIdentityForApplication
fetchOrCreateApplicationSceneHandleForApplication:withIdentity:
SBDeviceApplicationSceneHandle
currentStatusBarStyle
effectiveStatusBarStyleWithStyle:
SBSceneManagerCoordinator
mainDisplaySceneManager
v8@?0
SBStatusBarReturnToHearingAidNotification
SBMediaNowPlayingChangedNotification
SBMediaNowPlayingTrackElapsedTimeChangedNotification
v16@?0^v8
HearingAidUIClient
HearingAidUIServer
SBLockScreenManager
sharedInstanceIfExists
isUILocked
shouldShow
result
v24@?0@"NSDictionary"8@"NSError"16
statusBarStyle
Should request audio %d, %d, %d, %d, %d
%s:%d %@
-[AXSBHearingAidDeviceController shouldRequestAudioConnectionForCall:]
com.apple.Accessibility
HearingAids
HALoggingQueue
 - [%d, %d, %d, %d]
-[AXSBHearingAidDeviceController _updateHearingAidAfterMediaPlayback:]
Clearing preferred route
-[AXSBHearingAidDeviceController _updateHearingAidAfterMediaPlayback:]_block_invoke
v16@?0@"NSTimer"8
(%d, %d) (%d, %@) - %@
-[AXSBHearingAidDeviceController audioRouteDidChange:]
 - %d, %d
-[AXSBHearingAidDeviceController hearingAidConnectionDidChange:]
MPAVRoutingControllerRouteUserInfoKey
Setting preferred %@ - %@
-[AXSBHearingAidDeviceController userChangedRouteNotification:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isShowingHearingAidControl
TB,N,VisShowingHearingAidControl
hearingAidIsConnected
TB,N,V_hearingAidIsConnected
holdingMediaForConnection
TB,N,V_holdingMediaForConnection
holdingPhoneForConnection
TB,N,V_holdingPhoneForConnection
preferredRoute
T@"NSDictionary",&,N,V_preferredRoute
preferredRouteTimer
T@"NSTimer",&,N,V_preferredRouteTimer
MPAVRoute
initMPAVRoute
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2400.83.21.1/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSBHearingAidDeviceController.m
classMPAVRoute
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
MediaPlayerLibrary
frameworkLibrary
Phone call %@ - [%d, %d, %d] - [%d, %d, %d]
void callStateChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
v32@?0@"NSDictionary"8Q16^B24
Setting preferred %@
void userChangedAudioRoute(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
SBReachabilityManager
SBPrototypeController
sharedInstance
rootSettings
SBRootSettings
reachabilitySettings
SBReachabilitySettings
yOffsetFactor
mass
stiffness
damping
epsilon
reducedMotionSlideDuration
reachabilityEnabled
reachabilityModeActive
_notifyObserversReachabilityModeActive: excludingObserver:
_setKeepAliveTimer
enabled
offset
SBMainDisplaySceneManager
_shouldBreadcrumbApplicationSceneEntity: withTransitionContext:
SBWorkspaceApplicationSceneTransitionContext
SBWorkspaceTransitionContext
applicationSceneEntityForLayoutRole:
previousApplicationSceneEntityForLayoutRole:
request
SBMainWorkspaceTransitionRequest
source
isMainWorkspaceTransitionRequest
SBApplicationSceneEntity
application
SBApplication
bundleIdentifier
Accessibility
SBMainWorkspace
_instanceIfExists
SBBacklightController
SBUIController
_lockScreenViewController
SHAKE_TO_ENABLE
AXSBServerOrientationChange
activeInterfaceOrientation
reorientHUD
UITableViewTexture.png
ask.sheet.option.VoiceOver.on
activate-arrow
SWIPE_TO_ENABLE
delegate
T@"<AXSBVoiceOverSwipeDetectorDelegate>",W,N,V_delegate
SBDashBoardScrollGestureController
setScrollingStrategy:
scrollingStrategy
AccessibilityDisableIdleTimer
SBOrientationLockChangedNotification
_UIAlertControllerActionView
UIAlertController
UIWindow
SBBulletinWindowController
VolumeControl
SBHUDController
UIApplication
SpringBoard
SBAssistantController
SBControlCenterController
buttonIndex
Tq,N,VbuttonIndex
_canDismissWithGestureRecognizer
IsTripleClick
action
UIAlertAction
title
AXDispatchTimer
speaking TC menu item: %@
stopping speak for TC menu
B16@?0@"AXValidationManager"8
SBTelephonyManager
SBConferenceManager
SBInCallAlertManager
UIApplicationRotationFollowingWindow
UIApplicationRotationFollowingController
_reachabilityModeActive
isAssistantVisible
SBMediaController
SBOrientationLockManager
sharedTelephonyManagerCreatingIfNecessary:
SBMainSwitcherViewController
SBSystemGestureManager
isGestureWithTypeAllowed:
mainDisplayManager
SBVoiceControlController
isVoiceControlVisible
handleHomeButtonHeld
switcherContentController:selectedAppLayout:
reactivateAlert
_contentViewController
UIViewController<SBMainAppSwitcherContentViewControlling>
_returnToAppLayout
SBAppLayout
SBFluidSwitcherViewController
switcherPersonality
SBDashBoardPageViewController
view
SBDefaults
localDefaults
dashBoardViewController
SBDashBoardViewController
activatePage:animated:withCompletion:
_indexOfMainPage
suppressesControlCenter
_allowedPageViewControllers
SBApplicationProcessState
_updateProcess:withState:
activateIgnoringTouches
lockUIFromSource:withOptions:
_authenticationStateChanged:
SBIdleTimerGlobalCoordinator
resetIdleTimer
shouldTurnOnScreenForBacklightSource:
setBacklightFactor:source:
SBDashBoardCombinedListViewController
notificationListViewControllerShouldAllowRecentNotificationsReveal:
_notificationDispatcher
SBNCNotificationDispatcher
_bannerDestination
SBNotificationBannerDestination
presentedBanner
NCNotificationViewController
_scrollView
UIScrollView
isPresentingBanner
activateSwitcherNoninteractivelyWithSource:
toggleSwitcherNoninteractivelyWithSource:
handleSiriButtonDownEventFromSource:activationEvent:
shouldEnterAssistant
handleSiriButtonUpEventFromSource:
lockOutController
SBFDeviceLockOutController
isLockedOut
presentHUDView:autoDismissWithDelay:
isPlaying
isRingerMuted
nowPlayingApplication
isUserLocked
lock
unlock
_frontMostAppOrientation
addActiveOrientationObserver:
applicationOpenURL:
removeActiveOrientationObserver:
_toggleSearch
sharedApplication
_setRotatableViewOrientation:duration:force:
_effectiveVolumeChanged:
_presentVolumeHUDWithMode:volume:
isVisible
lockScreenViewController
SBLockScreenViewControllerBase
isMakingEmergencyCall
isPasscodeLockVisible
dismissSwitcherNoninteractively
allowShowTransition
allowShowTransitionSystemGesture
inCall
isEndpointOnCurrentDevice
SBApplicationController
applicationWithPid:
inFaceTime
SBUIPluginManager
handleButtonUpEventFromSource:
presentAnimated:
applicationWithBundleIdentifier:
toggleReachability
setReachabilityEnabled:
SBFloatingDockController
isFloatingDockFullyPresented
_activateApplicationFromAccessibility:
homeScreenAppLayout
visibleItemContainers
layoutContext
unlockUIFromSource:withOptions:
SBLockScreenUnlockRequest
setName:
setSource:
setIntent:
unlockWithRequest:completion:
addIdleTimerDisabledAssertionReason:
removeIdleTimerDisabledAssertionReason:
handleAction:fromSender:
SBDashBoardAction
actionWithType:
_scrollGestureController
_passcodeEntryController
SBPasscodeEntryAlertViewController
presentFloatingDockIfDismissedAnimated:completionHandler:
dismissFloatingDockIfPresentedAnimated:completionHandler:
_allowGestureRecognizers
SBCoverSheetPresentationManager
_coverSheetSlidingViewController
SBCoverSheetSlidingViewController
systemGesturesDelegate
SBCoverSheetSystemGesturesDelegate
gestureRecognizerShouldBegin:
presentGestureRecognizer
dismissGestureRecognizer
setCoverSheetPresented:animated:withCompletion:
coverSheetSlidingViewControllerIfLoaded
UIViewController
_appearState
SBDashBoardMainPageContentViewController
NCNotificationListViewController
mainPageContentViewController
combinedListViewController
notificationSectionList
notificationPriorityList
NCNotificationPriorityList
count
NCNotificationSectionList
sectionCount
_listViewController
NCNotificationCombinedListViewController
_updatePresentation
shouldAllowNotificationsHistoryReveal
_updateShouldAllowNotificationsHistoryReveal
forceNotificationHistoryRevealed:animated:
isShowingNotificationsHistory
dismissModalFullScreenAnimated:
noteMenuButtonDoublePress
SBMainScreenActiveInterfaceOrientationWindow
SBSecureMainScreenActiveInterfaceOrientationWindow
initWithDebugName:
sb_setRootViewController:
isShowingHomescreen
setHighlighted:
isPresented
SBIconController
isIconDragging
isAnyTouchGestureRunning
AXSpringBoardServerHelper
v16@?0@"AXValidationManager"8
AXSB_UIAlertControllerActionViewSafeCategory
AXSB_UIAlertControllerSafeCategory
AXSBServerHelperBulletinWindowController
AXSBUIWindow
AXSBServerHelperSBControlCenterController
AXSBServerVolumeControl
AXSBServerSBHUDController
AXSBServerUIApplication
AXSpringBoardAccessibility
AXSBAssistantController
AXSBLockScreenManager
AXSBReachabilityManagerAccessibility
AXSBHomeHardwareButtonActions
AXSB_SBApplicationSafeCategory
AXSBMainDisplaySceneManagerAccessibility
AXSBDashBoardScrollGestureControllerAccessibility
com.apple.mobile.SubstantialTransition
v16@?0@"NSNotification"8
SBSyncController
SBWallpaperController
Incoming call: %@
Incoming call?: %{public}@
Call status (Before answering call): %lu
Answering call
Call status (After answering call): %lu
Existing calls: %@
Existing call count: %lu
Call status (Before disconnecting call) : %lu
Disconnecting call
Call status (After disconnecting call) : %lu
SBVoiceControlAlertDisplay
reachability state same as desired change, doing nothing
SBUseHardwareSwitchAsOrientationLock
prefs:root=General&path=ACCESSIBILITY/AIR_TOUCH_TITLE/CreateCustomGesture
prefs:root=General&path=ACCESSIBILITY/ScannerSwitchTitle/CustomGesturesIdentifier/CreateCustomGesture
screenIsOn
com.apple.WebKit.WebContent
v12@?0C8
v12@?0i8
toggle NC: will show %d
NC center is visible: %d
CS is visible: %d
Can't toggle dock. GAX is active.
isAppSwitcherShowing
isInUse
model
allApplications
displayName
isInternalApplication
Trying to unlock with intent %d: unlock request did not respond to %s
Accessibility screen unlock
v12@?0B8
NotImplemented
showSpeechPlaybackControls not implemented
Retried media pause, %@
success
fail
Media Pause command %@
Retried media play, %@
Media Play command %@
incomingCallExists
outgoingCallExists
expected SBUIController to respond to _activateApplicationFromAccessibility: %@
SOS: triggering SOS
v16@?0q8
_NCNotificationViewControllerView
Not showing CoverSheet because system gesture delegate said no: %@
Showing CoverSheet and revealing more notifications
Revealing more recent notifications
Not revealing more recent notifications
Not hiding CS because system gesture delegate said no: %@
trying to hide recent notifications
Hiding CS with completion
GAX active or generally not allowed
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
BB window allows: %d
notification.center.showing
AXSBAllowShowNotificationGesture
Show CC: No main switcher view controller is wrong :%@
Show CC: result from mainSwitcher: %d
Show CC: %d
Show CC: Gesture manager said not generally allowed
Show CC: No because GA is active
Show CC: UI is locked, generally allowed: %d, ccAllows: %d
Show CC: controller allows transition: %d
Show CC: Allow transition: %d %{public}@
IsAXActivating
Show CC: Presenting CC
Show CC: Dismiss CC
com.apple.purplebuddy
v32@?0@8Q16^B24
q24@?0@8@16
ordering options: %@
ask.sheet.title
v16@?0@"UIAlertAction"8
ask.sheet.option.cancel
windowContextID
Could not find the class for SBSecureMainScreenActiveInterfaceOrientationWindow. We need this class in order to handle rotation properly (rdar://problem/20780193)
Could not find the class for UIApplicationRotationFollowingController. We need this class in order to handle rotation properly (rdar://problem/20780193)
AccessibilityShortcut
sb_rootViewController
Finished presenting, but we asked to dismiss the alert during this presentation, so hiding it now.
We somehow had disabled system gestures already, before presenting an alert.  Are there multiple alerts being shown simultaneously?  We don't handle that too well right now...
Tried to dismiss alert controller, but it was being presented.  Waiting till it finishes being presented before dismissing.
Tried to dismiss alert controller, but it was already being dismissed.  Cleaning up but not dismissing for real.
We cleaned up an alert, but system gestures had not been disabled for that alert.  This is unexpected.
_accessibilityObjectWithinProximity
ZoomConflictMessage
ZoomConflictTitle
TripleClickMessage
TripleClickMessage-D22
Accessibility-d22
TripleClickEnableTitle
cancel
enable
USAGE_CONFIRMED_TITLE
VoiceOver.confirmation.message.format
VoiceOver.confirmation.message.format_D22
no.home.button.gesture.alert.title
no.home.button.gesture.alert.message
SWITCH_USAGE_CONFIRMED_MESSAGE
SWITCH_USAGE_CONFIRMED_MESSAGE_D22
TURN_OFF_SC_ALERT_MESSAGE
TOUCH_ACCOMMODATIONS_USAGE_CONFIRMED_MESSAGE
TOUCH_ACCOMMODATIONS_USAGE_CONFIRMED_MESSAGE_D22
broken.home.button.title
broken.home.button.message
enable.zoom.purple.buddy.title
enable.zoom.purple.buddy.message
REBOOT_ALERT_MESSAGE_IPHONE
REBOOT_ALERT_MESSAGE_IPAD
REBOOT_ALERT_MESSAGE_IPOD
REBOOT_ALERT_CONFIRM
sideAppManager
T@"AXSpringBoardServerSideAppManager",&,N,V_sideAppManager
alertManager
T@"AXSpringBoardServerAlertManager",&,N,V_alertManager
alertControllerToDismissAfterPresentation
T@"UIAlertController",&,N,V_alertControllerToDismissAfterPresentation
disableSystemGesturesAssertionForAlert
T@"AXAssertion",&,N,V_disableSystemGesturesAssertionForAlert
zoomConflictController
T@"UIAlertController",&,N,V_zoomConflictController
zoomTripleClickController
T@"UIAlertController",&,N,V_zoomTripleClickController
zoomBuddyUsageController
T@"UIAlertController",&,N,V_zoomBuddyUsageController
switchUsageConfirmedController
T@"UIAlertController",&,N,V_switchUsageConfirmedController
voiceOverUsageConfirmedController
T@"UIAlertController",&,N,V_voiceOverUsageConfirmedController
touchAccommodationsUsageConfirmedController
T@"UIAlertController",&,N,V_touchAccommodationsUsageConfirmedController
tripleClickAlertController
T@"UIAlertController",&,N,V_tripleClickAlertController
brokenHomeButtonAlertController
T@"UIAlertController",&,N,V_brokenHomeButtonAlertController
rebootDeviceAlertController
T@"UIAlertController",&,N,V_rebootDeviceAlertController
SBRingerHUDView
SBRotationLockHUDView
PKPassLibrary
/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
### Failed to Soft Linked: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
SOSManager
/System/Library/PrivateFrameworks/SOS.framework/SOS
### Failed to Soft Linked: /System/Library/PrivateFrameworks/SOS.framework/SOS
SBHomeHardwareButtonActions
performSinglePressUpActions
AXSpringBoardServerInstanceDidInitializeNotification
SBFaceTimeStateChangedNotification
identifier
T@"NSString",C,N,V_identifier
type
T@"NSString",C,N,V_type
sb-ax-action-queue
payload
Error sending SpringBoard action: %@
Error sending reachability toggled message: %@
B32@?0@"AXIPCClient"8Q16^B24
B32@?0@8Q16^B24
Proximity Changed triggering an audio route change
-[_AXSpringBoardServerInstance _proximityDidChange:]
Speaker
Receiver
HeadsetBT
CarAudioOutput
BluetoothLEOutput
Headset
Headphone
LineOut
Not changing route because hearing aids aren't connected
-[_AXSpringBoardServerInstance _setCallRoute:ifCurrentlyRoutedTo:]
Changing call route to [%d] %@
Changing route to %@
-[_AXSpringBoardServerInstance _setAVCallRoute:]
You shouldn't have called me
_hasFinishedLaunching
SpringBoard is not done booting. Waiting for notification to start AXSB server.
MPAVRoutingControllerDidPickRouteNotification
PrimaryUsagePage
PrimaryUsage
v20@?0I8@"NSString"12
error starting AX SB IPC server: %@
com.apple.accessibility.voiceover
com.apple.assistivetouch.daemon
com.apple.private.allow-explicit-graphics-priority
com.apple.accessibility.AccessibilityUIServer
com.apple.accessibility.api
com.apple.voiceservices.tts.customvoice
com.apple.accessibility.axctl
com.apple.CoreRoutine.preferences
com.apple.hearingaids
com.apple.accessibility.AXSBServer.assertions
com.apple.private.kernel.jetsam
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2400.83.21.1/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerInstance.m
-[_AXSpringBoardServerInstance acquireAssertionWithType:identifier:clientPort:]
Should have a list of assertion pairs here, not nil!
SB aquired assertion: %@, %@
B32@?0@"AXAssertionIdentifierTypePair"8Q16^B24
SB relinquished assertion: %@, %@
SBSheetController
takeScreenshotAndEdit:
applicationForTopSheet
_accessibilitySetSystemGesturesDisabledByAccessibility:
_isSpringBoardShowingAnAlert
SBUIPluginHost
pluginController
FBScene
FBApplicationProcess
FBProcessManager
FBSceneManager
FBProcess
state
systemApplicationProcess
FBProcessState
visibility
isForeground
clientProcess
display
settings
enumerateScenesWithBlock:
FBSSceneSettings
frame
{CGRect={CGPoint=dd}{CGSize=dd}}
level
isOccluded
AXSpringBoardServerInstance
System gestures enabled: %d
GAX-BB
-[_AXSpringBoardServerInstance _setupAssertionServerIfNeeded]_block_invoke
AXSpringBoardServer did not understand assertion type: %@
v16@?0@"NSString"8
reenabling dashboard system gestures
disabling dashboard system gestures
orientation
alertType
data
remoteViewType
screenLocked
passcode
register
Could not connect client for registering SpringBoard action handler: %{public}@
_accessibilityRetrieveIsSiriListening
talking
locked
active
cancelEnabled
visible
record
bundleId
show
string
query
excludeSiri
gesture
assertionServer
T@"_AXAssertionServer",&,N,V_assertionServer
disableNotificationCenterAssertionHeld
TB,N,V_disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
TB,N,V_disableControlCenterAssertionHeld
T@"<AXSpringBoardServerInstanceDelegate>",W,N,V_delegate
Auto-answering incoming call: %{public}@ , with status: %d
Auto Answer pref val is %{public}@ - call count is %lu, incoming call: %{public}@ , incoming video call: %{public}@
Error opening device: %d
void safeDecrementRef(mach_port_t)
%s: Failure deallocating right %llx: %d! This probably means there is a port right overrelease somewhere!
safeDecrementRef
Activating remote alert service: %@, class: %@
withData: %@
Hiding remote alert service: %@
Remote alert handle did activate: %@
Remote alert handle did deactivate: %@
Remote alert handle did invalidate: %@
Remote alert handle did invalidate with error: %@
SBPlatformController
medusaCapabilities
SBMainDisplaySceneLayoutViewController
SBSceneLayoutViewController
sceneLayoutViewController
layoutState
SBLayoutState
elementWithRole:
SBMainDisplayLayoutState
spaceConfiguration
floatingConfiguration
_floatingApplicationWindow
SBFloatingApplicationRootViewController
activeDeviceApplicationSceneHandle
SBWorkspace
mainWorkspace
requestTransitionWithOptions:builder:validator:
SBWorkspaceTransitionRequest
modifyApplicationContext:
setEntity:forLayoutRole:
setRequestedSpaceConfiguration:
setRequestedFloatingConfiguration:
SBWorkspaceEntity
SBEmptyWorkspaceEntity
SBPreviousWorkspaceEntity
entity
entityWithPreviousLayoutRole:
applicationSceneEntity
SBDeviceApplicationSceneEntity
initWithApplicationForMainDisplay:
SBLayoutElement
layoutAttributes
AXSpringBoardServerHelperSideAppManager
GAXSpringboard
shouldAllowMedusaGestures
workspaceEntity
v24@?0@8q16
Tried to perform invalid side app gesture: %lu.  Allowed gestures: %@
v16@?0@8
v16@?0@"<SBMainWorkspaceTransitionMethods>"8
floatingApplicationController
_viewController
Setting screen contrast to %.0f on display %@
/System/Library/AccessibilityBundles/VisualAlerts.bundle
Audio/Video
com.apple.MobileSMS
%@ said %@
AX: Update SB Server(%d, %lu) {{ Internal Logging }}
Could not read the login session note: %@
Could not property deserialize note as a plist: %@
v24@?0@"NSError"8@"NSData"16
Enabling resting unlock because AST was on and we had never set this before
v16@?0B8B12
AX: Registering for SBAX server launch {{ Internal Logging }}
AccessibilitySettingsLoaderDidUpdateSettings
_restartManager
SBRestartManager
rebootForReason:
AXSpringBoardSettingsLoader
Registering for home button errors
IOProviderClass
IOGeneralInterest
AXBrokenHomeButtonAlreadyRebootedOnce
Setting flag that we already rebooted one time
com.apple.accessibility.sshb.failure.reboot
Home button detected as broken, rebooting gracefully
MESA FAILURE: Home button broke, rebooting
AST already running, no need to enable again
Switch Control already running, no need to enable again
Starting AST in repair incarnation mode
AppleSPUHIDDevice
button-err-state
Found device with button err state %d
Home button error state : %d (check type initial: %d), graceful reboot status? %d
AST Button failure mode: new count: %d
com.apple.accessibility.sshb.failure.assistivetouch.mode
AST is on in repair mode, turning off. No more error state
AST setting failure mode log: %d
Jq+xaurJgFzSwxOfTqtBGw
Did get profile changed notification from MC:%@. Will check to see if GAX should be loaded
whitelistedApps (%{public}@) or appSelfLockIDs (%{public}@) exist. WIll enable GAX (Single App Mode) now
whitelistedApps and appSelfLockIDs both nil.  No need to enable GAX (Single App Mode)
com.apple.accessibility.remote
VOWORK: Registering for remote network update
VOWORK: HIDE ENABLER %@
VOWORK: SWIPE GO AWAY: %@
VOWORK: window is gone
%@/%@
/System/Library/CoreServices/VoiceOverTouch.app
Sounds/FolderClosed.aiff
Sounds/FolderOpened.aiff
VOWORK: start frame: %@
VOWORK: reachability changed, isReachable: %d
VOWORK: force registration again: %d
configuration.apple.com
VOWORK: register for reachability changed %@
com.apple.springboard
com.apple.iapd.videoout.SettingsChanged
Button message handler: %d
AppleSPUHIDDevice property change
DeviceUsagePairs
DeviceUsagePage
DeviceUsage
validateClass:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasClassMethod:withFullSignature:
alloc
init
defaultCenter
liveListenStatusBarActivated:
addObserver:selector:name:object:
mediaPlaybackDidChange:
statusBarDidChange:
pickableAudioRoutesDidChange:
userChangedRouteNotification:
observeStatusBarStyleWithBlock:
removeObserver:
removeAllObservers
dealloc
sharedInstance
startServerWithDelegate:
initWithIdentifier:serviceBundleName:
setDelegate:
isScreenLocked
showHearingAidControl:
safeValueForKey:
safeBoolForKey:
allowHearingAidControlOnLockScreen
server
isControlCenterVisible
showControlCenter:
hearingUIClient
numberWithBool:
dictionaryWithObject:forKey:
backgroundAccessQueue
valueForKey:
boolValue
setIsShowingHearingAidControl:
sendUpdatedStatusBarStyle
isShowingHearingAidControl
setLockScreenDimTimerEnabled:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
class
focusedAppProcess
state
sharedApplication
statusBar
currentStyle
_applicationController
applicationWithPid:
sceneIdentityForApplication:
fetchOrCreateApplicationSceneHandleForApplication:withIdentity:
unsignedIntValue
effectiveStatusBarStyleWithStyle:
effectiveStatusBarStyle
numberWithInteger:
setHearingAidControlIsVisible:
callAudioRoute
mediaAudioRoute
updateReachabilityAndWait:
pairedHearingAids
hearingAidReachableForAudioTransfer
shouldStreamToLeftAid
shouldStreamToRightAid
isPairedWithFakeHearingAids
stringWithFormat:
UTF8String
preferredRouteTimer
invalidate
setPreferredRouteTimer:
shouldRequestAudioConnectionForCall:
_updateHearingAidAfterMediaPlayback:
isMediaPlaying
holdingMediaForConnection
pauseMedia
setHoldingMediaForConnection:
requestHearingAidConnectionWithReason:
dictionaryWithObjects:forKeys:count:
resumeMedia
cancelHearingAidConnectionRequest
setPreferredRoute:
scheduledTimerWithTimeInterval:repeats:block:
preferredRoute
holdingPhoneForConnection
setHoldingPhoneForConnection:
setHearingAidIsConnected:
userInfo
avRouteDescription
_accessibilityPerformValidations:
sharedController
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
serverDidDie:
hearingAidConnectionDidChange:
startServer
_lockStateChanged
audioRouteDidChange:
.cxx_destruct
hearingAidIsConnected
_applicationSceneClientSettingsDiffInspector
_routeChangedTime
_hearingAidIsConnected
_holdingMediaForConnection
_holdingPhoneForConnection
_preferredRoute
_preferredRouteTimer
hasActiveCall
hasActiveOrPendingCall
hasActiveOrPendingCallOrFaceTime
sharedAVSystemController
attributeForKey:
enumerateObjectsUsingBlock:
safeCategoryTargetClassName
safeCategoryBaseClass
_notifyObserversReachabilityModeActive:excludingObserver:
_axReachabilityEnabled
springBoardServerInstance
shouldSendReachabilityToggled
_axDictionaryOfAnimationProperties
setObject:forKeyedSubscript:
_axReachabilitySettings
doubleValue
mainScreen
bounds
numberWithDouble:
_axSendReachabilityToggledActionWithPayload:
dictionary
_axAddReachabilityProperty:toDictionary:
_synchronizeDrawingAcrossProcesses
reachabilityToggledWithPayload:synchronizationPort:completion:
isScreenLockedWithPasscode:
_setKeepAliveTimer
validateClass:isKindOfClass:
validateClass:hasProperty:withType:
isEqualToString:
applicationSceneEntityForLayoutRole:
safeStringForKey:
previousApplicationSceneEntityForLayoutRole:
safeIntegerForKey:
length
_shouldBreadcrumbApplicationSceneEntity:withTransitionContext:
bundleForClass:
localizedStringForKey:value:table:
initWithFrame:
allocWithZone:
setClipsToBounds:
addSubview:
setNumberOfLines:
setFont:
clearColor
setBackgroundColor:
whiteColor
setTextColor:
setTextAlignment:
colorWithRed:green:blue:alpha:
setShadowColor:
setShadowOffset:
setText:
sizeToFit
frame
setFrame:
setAlpha:
orientationChange
reorientHUDIfNeeded:
intValue
beginAnimations:
setAnimationDuration:
setTransform:
commitAnimations
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
setFill
fill
drawRect:
setAutoresizesSubviews:
setMultipleTouchEnabled:
_defaultBackgroundGradient
initWithImage:
setAutoresizingMask:
setUserInteractionEnabled:
kitImageNamed:
colorWithPatternImage:
_swipeDetected:
initWithTarget:action:
setDelaysTouchesEnded:
setCancelsTouchesInView:
setNumberOfTouchesRequired:
setDirection:
addGestureRecognizer:
initWithTitle:
setHidesBackButton:
_cancelVOSwipeActivation:
initWithBarButtonSystemItem:target:action:
setRightBarButtonItem:
pushNavigationItem:animated:
imageNamed:inBundle:
boldSystemFontOfSize:
setLineBreakMode:
setColor:
colorWithAlphaComponent:
setIsAccessibilityElement:
delegate
swipeDetectorDetectedSwipe
swipeDetectorCanceled
touchesBegan:withEvent:
touchesEnded:withEvent:
layoutSubviews
_titleLabel
_bgImageView
_swipeDetected
_delegate
_accessibilitySetSavedScrollingStrategy:
_accessibilityForcedScrollingStrategy
setScrollingStrategy:
_accessibilitySavedScrollingStrategy
_accessibilitySetForcedScrollingStrategy:
integerValue
accessibilitySetSystemDashBoardGesturesEnabled:
_isSecure
actionWithTitle:style:handler:
setButtonIndex:
buttonIndex
initWithStyle:reuseIdentifier:
textLabel
colorWithWhite:alpha:
_topLine
_bottomLine
_accessibilityBoolValueForKey:
_canDismissWithGestureRecognizer
setHighlighted:
numberWithInt:
containsObject:
_accessibilityValueForKey:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
_accessibilitySetRetainedValue:forKey:
cancel
title
notifySpeakServicesForSpeechOutput:
ignoreLogging
identifier
notifySpeakServicesToStopSpeaking
afterDelay:processBlock:
_isChecked
setAccessibilityTraits:
setAccessibilityLabel:
validateClass:hasInstanceVariable:withType:
validateProtocol:hasProperty:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
performValidation
_performValidation
addActiveOrientationObserver:
currentQueue
springBoardActionOccurred:
addObserverForName:object:queue:usingBlock:
addObject:
sideAppManager
medusaApps
count
setSideAppManager:
setAlertManager:
removeActiveOrientationObserver:
countByEnumeratingWithState:objects:count:
_lockScreenManager
copy
mainAccessQueue
_handleTripleClickAskAlert
_handleZoomInBuddyAlert
handleBrokenHomeButtonAlert
_handleVoiceOverUsageConfirmation
_handleZoomConflictAlert:
_handleSwitchUsageConfirmed
_handleTouchAccommodationsUsageConfirmed
_handleZoomTripleClickAfterConflict
_handleDisableBrightnessFiltersAlert:
_handleDisableSwitchControlConfirmation
_handleConfirmRebootDevice
_handleVONoHomeButtonGestureAlert
performAsynchronousWritingBlock:
tripleClickAlertController
_toggleTripleClickDisplay
touchAccommodationsUsageConfirmedController
_dismissAlertController:
setTouchAccommodationsUsageConfirmedController:
switchUsageConfirmedController
setSwitchUsageConfirmedController:
voiceOverUsageConfirmedController
setVoiceOverUsageConfirmedController:
rebootDeviceAlertController
setRebootDeviceAlertController:
alertManager
showAXUIViewService:withData:
hideAXUIViewService:withData:
array
incomingCall
axSafelyAddObject:
incomingVideoCall
firstObject
status
answerCall:
currentCalls
axSafelyAddObjectsFromArray:
currentVideoCalls
disconnectCall:withReason:
keyWindow
subviews
lastObject
performSynchronousReadingBlock:
getActiveCategoryVolume:andName:
toggleReachability
lock
unlock
isScreenLockedWithServerInstance:
initWithString:
applicationOpenURL:
objectForKey:
_globalIdleTimeCoordinator
resetIdleTimer
isGestureWithTypeAllowed:
isGuidedAccessActive
activateSwitcherNoninteractivelyWithSource:
currentDevice
_tapticEngine
actuateFeedback:
handleSiriButtonDownEventFromSource:activationEvent:
handleSiriButtonUpEventFromSource:
_assistantController
dismissAssistantViewIfNecessary:
presentContactlessInterfaceForDefaultPassFromSource:completion:
accessibilityIsNotificationVisible
isNotificationCenterVisibleWithServerInstance:
_accessibilityShowNotificationCenter:serverInstance:
isCoverSheetVisibleWithServerInstance:
dashBoardViewController
_accessibilityCoverSheetPresentationManagerSharedInstance
safeIntForKey:
setReachabilityEnabled:
accessibilityShowControlCenter:
isDockVisibleWithServerInstance:
dismissFloatingDockIfPresentedAnimated:completionHandler:
presentFloatingDockIfDismissedAnimated:completionHandler:
isPasscodeLockVisible
isSystemAppShowingAnAlertWithServerInstance:
isControlCenterVisibleWithServerInstance:
dismissSwitcherNoninteractively
_iconController
_accessibilityIsSpeakThisTemporarilyDisabled
_accessibilityIsSystemGestureActive
_accessibilitySystemGesturesDisabledByAccessibility
numberWithUnsignedInteger:
areSystemGesturesDisabledNativelyWithServerInstance:
areSystemGesturesDisabledByAccessibilityWithServerInstance:
installedAppsWithServerInstance:
isPasscodeRequiredOnLockWithServerInstance:
isAppSwitcherVisibleWithServerInstance:
isSiriVisibleWithServerInstance:
isMakingEmergencyCallWithServerInstance:
isPurpleBuddyAppFrontmostWithServerInstance:
isSystemAppFrontmostExcludingSiri:withServerInstance:
isSystemSleepingWithServerInstance:
isSyncingRestoringResettingOrUpdatingWithServerInstance:
isSystemGestureActiveWithServerInstance:
applicationWithBundleIdentifier:
applicationIconForBundleIdentifier:
isIconVisible:
setObject:forKey:
setName:
setSource:
setIntent:
unlockWithRequest:completion:
_unlockWithIntent:
raise:format:
sharedTelephonyManagerCreatingIfNecessary:
setSiriIsTalking:
allowedMedusaGestures
performMedusaGesture:
medusaAppBundleIdsToLayoutRoles
_toggleSearch
postNotificationName:object:
serverInstance:appWithIdentifier:
_uiController
_activateApplicationFromAccessibility:
bundleIdentifier
visibility
actionWithType:
handleAction:fromSender:
userEventOccurred
addIdleTimerDisabledAssertionReason:
removeIdleTimerDisabledAssertionReason:
triggerSOS
showAlert:withHandler:
launchApplication:
launchApplicationWithFullConfiguration:
launchPinnedApplication:onLeft:
launchFloatingApplication:
view
_accessibilityViewIsVisible
contentOffset
gestureRecognizerShouldBegin:
setCoverSheetPresented:animated:withCompletion:
notificationListViewControllerShouldAllowRecentNotificationsReveal:
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
_updateShouldAllowNotificationsHistoryReveal
forceNotificationHistoryRevealed:animated:
numberWithLong:
initWithString:attributes:
_updatePresentation
safeUnsignedIntegerForKey:
activatePage:animated:withCompletion:
_accessibilityShowCoverSheet:serverInstance:completion:
_accessibilitySetBoolValue:forKey:
_accessibilitySetAllowShowNotificationGestureOverride:
toggleSwitcherNoninteractivelyWithSource:
_accessibilityIsUILocked
_accessibilityShowNewControlCenter:
presentAnimated:
dismissAnimated:
runningAppProcessesWithServerInstance:
hasMultipleApps
hasActiveOrPendingCallOrFaceTimeWithServerInstance:
isBuddyRunning
isPreferencesFrontmost
isMultiTaskingActive
isiCloudPaired
voiceOverActivationWorkaround
isMagnifierVisible
tripleClickOrderedOptions
indexOfObject:
compare:
sortUsingComparator:
titleForTripleClickOption:
localizedCompare:
_cleanupAlertController
removeAllObjects
alertControllerWithTitle:message:preferredStyle:
_shouldShowTCOption:
_sortVisibleItems
_handleAlertActionPress:
setTripleClickAlertController:
valueForTripleClickOption:
_setChecked:
addAction:
actions
_displayAlertController:
_contextId
numberWithUnsignedInt:
postNotificationName:object:userInfo:
initWithDebugName:
sb_setRootViewController:
setRootViewController:
setAutorotates:
setAccessibilityViewIsModal:
setHidden:
setWindowLevel:
rootViewController
alertControllerToDismissAfterPresentation
setAlertControllerToDismissAfterPresentation:
presentViewController:animated:completion:
disableSystemGesturesAssertionForAlert
assertionWithType:identifier:
setDisableSystemGesturesAssertionForAlert:
isBeingPresented
isBeingDismissed
dismissViewControllerAnimated:completion:
dismissAlertWithCancel
setZoomConflictController:
setZoomTripleClickController:
objectForKeyedSubscript:
_handleUsageConfirmationDialogWithMessage:dismissBlock:
brokenHomeButtonAlertController
setBrokenHomeButtonAlertController:
zoomBuddyUsageController
setZoomBuddyUsageController:
notifyZoomHomeButtonWasPressed
zoomConflictController
zoomTripleClickController
initWithInteger:
initWithDouble:
initWithObjectsAndKeys:
springBoardActionOccurred:withPayload:
initialize
sharedServerHelper
_backlightController
_awayController
_syncController
_wallpaperController
serverInstance:showAlertType:withHandler:withData:
serverInstance:showRemoteViewType:withData:
serverInstance:hideRemoteViewType:withData:
hideAlertWithServerInstance:
isVoiceControlRunningWithServerInstance:
handleToggleIncomingCallWithServerInstance:
volumeLevelWithServerInstance:
isSideSwitchUsedForOrientationWithServerInstance:
setReachabilityActive:
isRingerMutedWithServerInstance:
isOrientationLockedWithServerInstance:
serverInstance:setOrientationLocked:
openCustomGestureCreationForASTWithServerInstance:
openCustomGestureCreationForSCATWithServerInstance:
isMediaPlayingWithServerInstance:forBundleId:
resetDimTimerWithServerInstance:
openSiriWithServerInstance:
dismissSiriWithServerInstance:
openVoiceControlWithServerInstance:
toggleNotificationCenterWithServerInstance:
isNotificationVisibleWithServerInstance:
serverInstance:showControlCenter:
serverInstance:showNotificationCenter:
serverInstance:setReachabilityEnabled:
toggleDockWithServerInstance:
armApplePayWithServerInstance:
isShowingHomescreenWithServerInstance:
isPasscodeLockVisibleWithServerInstance:
openAppSwitcherWithServerInstance:
dismissAppSwitcherWithServerInstance:
simulateEdgePressHaptics:
serverInstance:showSpeechPlaybackControls:
serverInstance:pauseMedia:forBundleId:
hasActiveCallWithServerInstance:
hasActiveEndpointCallWithServerInstance:
hasActiveOrPendingCallWithServerInstance:
isSpeakThisTemporarilyDisabledWithServerInstance:
serverInstance:springBoardSystemInfoQuery:
wakeUpDeviceIfNecessaryWithServerInstance:
unlockDeviceWithServerInstance:
reachabilityOffsetWithServerInstance:
setSiriIsTalking:withServerInstance:
allowedMedusaGesturesWithServerInstance:
serverInstance:performMedusaGesture:
medusaAppsWithServerInstance:
revealSpotlightWithServerInstance:
setDashBoardSystemGesturesEnabled:withServerInstance:
activateSOSModeWithServerInstance:
rebootDeviceWithServerInstance:
focusedAppPIDWithServerInstance:
purpleBuddyPIDWithServerInstance:
runningAppPIDsWithServerInstance:
isSettingsAppFrontmostWithServerInstance:
focusedAppsWithServerInstance:
focusedAppProcessWithServerInstance:
forceLoadGAXBundleWithServerInstance:
reactivateInCallServiceWithServerInstance:
launchMagnifierAppWithServerInstance:
isMagnifierVisibleWithServerInstance:
userEventOccurredWithServerInstance:
setLockScreenDimTimerEnabled:withServerInstance:
medusaBundleIDsToLayoutRoles
_accessibilityAllowShowNotificationGestureOverride
frontmostAppProcessWithServerInstance:
_visibleTripleClickItems
shouldOverrideInterfaceOrientation
_accessibilityHandleHomeOrLockButtonPress
activeInterfaceOrientationWillChangeToOrientation:
activeInterfaceOrientationDidChangeToOrientation:willAnimateWithDuration:fromOrientation:
_alertHandler
_presentationWindow
_shouldOverrideInterfaceOrientation
_notificationObservers
_sideAppManager
_alertManager
_alertControllerToDismissAfterPresentation
_disableSystemGesturesAssertionForAlert
_zoomConflictController
_zoomTripleClickController
_zoomBuddyUsageController
_switchUsageConfirmedController
_voiceOverUsageConfirmedController
_touchAccommodationsUsageConfirmedController
_tripleClickAlertController
_brokenHomeButtonAlertController
_rebootDeviceAlertController
lockUIFromSource:withOptions:
_authenticationStateChanged:
takeScreenshotAndEdit:
activeInterfaceOrientation
alertInterfaceOrientation
interfaceOrientation
_setRotatableViewOrientation:duration:force:
_presentWithDuration:completion:
shouldBlockGestureActivation:
allowShowTransition
_allowsShowNotificationsGestureFromBanner:
presentHUDView:autoDismissWithDelay:
floatValue
_effectiveVolumeChanged:
_presentVolumeHUDWithMode:volume:
shouldCancelSiriTouchActivationBlock
activateIgnoringTouches
_updateProcess:withState:
TTYHardwareEnabled
TTYSoftwareEnabled
cancelCallPromptDisplay
performSinglePressUpActions
setIdentifier:
type
setType:
_identifier
_type
initWithKey:payload:
sendSimpleMessage:withError:
currentVideoCall
displayName
axAttributedStringWithString:
setAttribute:forKey:
disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
sendSimpleMessage:synchronizationPort:error:
serviceMachPort
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_setCallRoute:ifCurrentlyRoutedTo:
displayedCall
sharedAudioSystemController
audioCategory
audioMode
pickableRoutesForCategory:andMode:
pickableRoutesForCategory:
arrayByAddingObjectsFromArray:
hasPrefix:
isEqualToDictionary:
_setAVCallRoute:
setAttribute:forKey:error:
_initServer
removeAllHandlersForTarget:
strongToStrongObjectsMapTable
initWithServiceName:perPidService:
_registerServerAndNotifyClients
_springBoardFinishedLaunching:
_startHearingAidServer:
_proximityDidChange:
removeObserver:name:object:
startServerWithError:
setQueueSize:
_initializeHandlers
setClientInvalidationCallback:
_getApplicationOrientation:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
_getPid:
_showAlert:
_hideAlert:
_showRemoteView:
_hideRemoteView:
_screenLocked:
_isMakingEmergencyCall:
_hasActiveCall:
_hasActiveEndpointCall:
_hasActiveOrPendingCall:
_hasActiveOrPendingCallOrFaceTime:
_topEventPidOverride:
_takeScreenshot:
_openAppSwitcher:
_dismissAppSwitcher:
_simulateEdgePressHaptics:
_wakeUpDeviceIfNecessary:
_unlockDevice:
_rebootDevice:
_openSiri:
_dismissSiri:
_toggleNotificationCenter:
_isNotificationCenterVisible:
_openVoiceControl:
_getActiveInterfaceOrientation:
_actionHandling:
_isVoiceControlRunning:
_isSiriTalkingOrListening:
_setSiriIsTalking:
_isSystemSleeping:
_volumeLevel:
_isOrientationLocked:
_setOrientationLocked:
_isSideSwitchUsedForOrientation:
_isRingerMuted:
_openCustomGestureCreationForAST:
_openCustomGestureCreationForSCAT:
_cancelGestureActivation:
_toggleHearingControl:
_isPointInAXInspector:
_isMediaPlaying:
_pauseMedia:
_resumeMedia:
_resetDimTimer:
_showControlCenter:
_toggleDock:
_armApplePay:
_showNotificationCenter:
_isControlCenterVisible:
_copyStringToPasteboard:
_isSiriVisible:
_isAppSwitcherVisible:
_isShowingHomescreen:
_isDockVisible:
_isPasscodeLockVisible:
_isSyncingRestoringResettingOrUpdating:
_areSystemGesturesDisabledNatively:
_areSystemGesturesDisabledByAccessibility:
_handleSpringBoardInfoQuery:
_handleInstalledApps:
_handleIsInspectorMinimized:
_handleCancelReachabilityTimer:
_handleRevealSpotlight:
_handleLoadGAXBundleForUnmanagedASAM:
setHandlerWithTarget:selector:forKey:
_handleReactivateInCallService:
_handleLaunchMagnifierApp:
_handleIsMagnifierVisible:
_setSpeechPlaybackControls:
_isSpeakThisTemporarilyDisabled:
_handleAcquireAssertion:
_handleRelinquishAssertion:
_handleUserEventOccurred:
_handleSetLockScreenDimTimerEnabled:
_activateSOSMode:
_handleIsSystemAppShowingAnAlert:
_handleGetFocusedAppPID:
_handleGetPurpleBuddyPID:
_handleGetRunningAppPIDs:
_handleGetFocusedApps:
_handleIsSystemAppFrontmost:
_handleIsPurpleBuddyAppFrontmost:
_handleIsSettingsAppFrontmost:
_handleIsMultitaskingActive:
_reachabilityOffset:
_reachabilityHandling:
_reachabilityActive:
_handleToggleIncomingCall:
_reachabilityEnabled:
_allowedMedusaGestures:
_performMedusaGesture:
_medusaApps:
addPossibleRequiredEntitlement:forMessageWithKey:
_setupAssertionServerIfNeeded
assertionServer
addHeldAssertionOfType:byClient:
_assertionClientForPort:
initWithPort:
setClientIdentifier:
setTimeout:
connectWithError:
_relinquishAllAssertionsForClientWithPort:
setPortDeathHandler:
callStackSymbols
relinquishAssertionWithType:identifier:clientPort:
removeHeldAssertionOfType:byClient:
removeObjectForKey:
performValidations:withPreValidationHandler:postValidationHandler:
_accessibilitySetSystemGesturesDisabledByAccessibility:
clientsHoldingAssertionOfType:
arrayWithObjects:count:
isEqualToArray:
setAssertionServer:
_setSystemGesturesEnabled:
_accessibilitySetSpeakThisTemporarilyDisabled:
setDisableNotificationCenterAssertionHeld:
setDisableControlCenterAssertionHeld:
_setDashboardSystemGesturesDisabled:
setAssertionWasAcquiredHandler:
setAssertionWasReleasedHandler:
payload
clientPort
sendSimpleMessage:
dictionaryWithObjectsAndKeys:
hasActiveEndpointCall
_hasActionHandlerForClientPort:
_removeActionHandler:
_hasReachabilityHandlerForClientPort:
_removeReachabilityHandler:
_accessibilityIsInspectorMinimized
_accessibilityIsPointInAXInspector:
generalPasteboard
setItems:
unsignedIntegerValue
acquireAssertionWithType:identifier:clientPort:
archivedDataWithRootObject:
springBoardServerInstanceIfExists
registerHandlerForMessageKey:target:selector:entitlements:
onlySystemGesturesDisabledHolderIsGuidedAccess
_server
_client
_actionHandlers
_reachabilityHandlers
_assertionClients
_currentSpeakerClient
_hidManager
_disableNotificationCenterAssertionHeld
_disableControlCenterAssertionHeld
_assertionServer
callAudioRoutingAutoAnswerEnabled
currentAudioAndVideoCallCount
callAudioRoutingAutoAnswerDelay
sb_alertDefinition
setUserInfo:
serviceName
viewControllerClassName
newHandleWithDefinition:configurationContext:
addObserver:
activateWithContext:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
__CGRect__
_mainDisplaySceneLayoutViewController
_mainDisplaySceneManager
isHidden
_addFloatingApplicationGesturesIfAllowed:
window
_hasPinnedApp
_addResizeGestureRecognizerGesturesIfAllowed:
_layoutState
elementWithRole:
_currentFloatingConfiguration
_enumerateAppsAndLayoutRoles:
_hasFloatingApp
_currentSpaceConfiguration
_sbPreviousWorkspaceEntityClass
entityWithPreviousLayoutRole:
_sbEmptyEntity
_sbPreviousEntity
_requestTransactionWithPrimaryEntity:sideEntity:floatingEntity:spaceConfiguration:floatingConfiguration:
_sbWorkspaceMainWorkspace
setEntity:forLayoutRole:
setRequestedSpaceConfiguration:
setRequestedFloatingConfiguration:
modifyApplicationContext:
requestTransitionWithOptions:builder:validator:
initWithApplicationForMainDisplay:
_floatingAppRootViewController
_setVoiceOverTouchSettings:
speakCorrectionsEnabled
setSpeakCorrectionsEnabled:
serverIfRunning
displays
objectAtIndex:
setContrast:
_checkContrastSetting
detachNewThreadSelector:toTarget:withObject:
_checkAccessibilityOptionsSetByiTunes
_checkVoiceOverTouchSetByiTunes
_checkZoomTouchSetByiTunes
_checkInvertColorsSetByiTunes
_checkMonoAudioSetByiTunes
_checkSpeakAutofillSetByiTunes
_checkClosedCaptioningSetByiTunes
_checkAssistiveTouchSetByiTunes
bundleWithPath:
isLoaded
load
speakIncomingNotifications
setObserverFeed:
sectionID
setCategory:withOptions:error:
setActive:error:
message
speechUtteranceWithString:
systemLanguageID
quickSpeakSpeakingRateForLanguage:
quickSpeakSpeakingRate
setRate:
speakUtterance:
_updateAXSettings
_updateSpringBoardHelper
sharedManager
propertyListWithData:options:format:error:
readDataForFileAtAccessibilityContainerPath:completion:
_findNoteFromLoginSessionWithCompletion:
_registerForNotifications
_initializeRemoteSettingsListener
_handleGuidedAccessManagedConfigurationDidChange:
bootstrapGuidedAccessIfNeeded
_registerForHomeButtonBreakage
_performValidations
standardUserDefaults
boolForKey:
setBool:forKey:
synchronize
_setRebootedGracefullyOnce
rebootForReason:
_alreadyRebootedGracefullyOnce
_startAssistiveTouchForBrokenHomeButton
brokenHomeButtonCount
setBrokenHomeButtonCount:
_gracefulRebootForBrokenHomeButton
_registerForHomeButtonBreakageNotification
_checkForHomeButtonBreakage:
sharedConnection
effectiveWhitelistedAppsAndOptions
autonomousSingleAppModePermittedBundleIDs
updateAvailableSpeechAssets
_registerForSpokenNotes
registerUpdateBlock:forRetrieveSelector:withListener:
_isDeviceAffectedByVOActivationWorkaround
_remoteAccessibilitySettingsChanged:
registerNetworkDefaultsForAppID:
_updateRemoteAccessibilitySettings
_hideVoiceOverEnabler
_playVOActivationSoundEnded
animateWithDuration:animations:completion:
initWithContentRect:
setBecomeKeyOnOrderFront:
setEnabled:
orderFront:
setOpaque:
setContentView:
resourcePath
initFileURLWithPath:isDirectory:
_playVOActivationSoundStarted
_voiceOverEnabled:
_makeVoiceOverVibrateWindow
setBounds:
setCenter:
animateWithDuration:animations:
registerNetworkDefaultsForAppIDs:forceUpdate:
sharedNetworkObserver
removeObserver:forHostname:
_reachabilityChanged:
addObserver:selector:forHostname:
checkScreenContrast
checkAccessibilityOptions
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionOrderRule:
observer:updateSectionOrder:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteAlertBehaviorOverridesChanged:
observer:noteAlertBehaviorOverrideStateChanged:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
_showSwipeDetectionEnablerView
_showVibrationVoiceOverEnablerView
_registerReachability
_voiceOverVibrateWindow
_voiceOverActivationCanceler
_managedConfigurationNotificationCoalesceTimer
mutableCopy
%{public}s
%{public}@
AXSBHearingAidDeviceController
AXUIClientDelegate
NSObject
AXHAServerDelegate
AXHeardServerDelegate
__AXSBReachabilityManagerAccessibility_super
SafeCategory
AXSBReachabilityManagerAccessibility
__AXSBMainDisplaySceneManagerAccessibility_super
AXSBMainDisplaySceneManagerAccessibility
AXSBVoiceOverShakeMessage
AXSBVoiceOverSwipeDetectorView
__AXSBDashBoardScrollGestureControllerAccessibility_super
AXSBDashBoardScrollGestureControllerAccessibility
AXSecureWindow
__AXSB_UIAlertControllerActionViewSafeCategory_super
__AXSB_UIAlertControllerSafeCategory_super
__AXSBUIWindow_super
__AXSBServerHelperBulletinWindowController_super
__AXSBServerVolumeControl_super
__AXSBServerSBHUDController_super
__AXSBServerUIApplication_super
__AXSpringBoardAccessibility_super
__AXSBAssistantController_super
__AXSBLockScreenManager_super
__AXSBServerHelperSBControlCenterController_super
__AXSB_SBApplicationSafeCategory_super
AXAlertAction
AXTripleClickTableViewCell
AXSB_UIAlertControllerSafeCategory
AXSB_UIAlertControllerActionViewSafeCategory
AXSpringBoardServerHelper
AXSpringBoardServerInstanceDelegate
AXSBLockScreenManager
AXSpringBoardAccessibility
AXSBServerUIApplication
AXSBUIWindow
AXSBServerHelperSBControlCenterController
AXSBServerHelperBulletinWindowController
AXSBServerSBHUDController
AXSBServerVolumeControl
AXSBAssistantController
AXSB_SBApplicationSafeCategory
__AXSBHomeHardwareButtonActions_super
AXSBHomeHardwareButtonActions
AXAssertionIdentifierTypePair
_AXSpringBoardServerInstance
AXSpringBoardServerAlertManager
SBSRemoteAlertHandleObserver
AXViewServiceHandler
__AXSpringBoardServerSideAppManager
AXSpringBoardServerSideAppManager
AXSpringBoardSettingsLoader
AXSBVoiceOverSwipeDetectorDelegate
BBObserverDelegate
AVSpeechSynthesizerDelegate
v24@0:8@16
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
v24@0:8@"AXHeardServer"16
v20@0:8B16
v16@0:8
q16@0:8
B20@0:8B16
@"UIApplicationSceneClientSettingsDiffInspector"
@"NSDictionary"
@"NSTimer"
v28@0:8B16@20
B32@0:8@16@24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UILabel"
@"UIImageView"
@"<AXSBVoiceOverSwipeDetectorDelegate>"
v24@0:8q16
@40@0:8@16q24@?32
@32@0:8q16@24
@"UIView"
v48@0:8@16q24@?32@40
v40@0:8@16q24@32
d24@0:8@16
v28@0:8@16B24
B28@0:8@16B24
v36@0:8@16B24@28
@32@0:8@16@24
@24@0:8@16
i24@0:8@16
B28@0:8B16@20
v48@0:8@"_AXSpringBoardServerInstance"16q24@?<v@?q>32@40
v40@0:8@"_AXSpringBoardServerInstance"16q24@32
v24@0:8@"_AXSpringBoardServerInstance"16
B24@0:8@"_AXSpringBoardServerInstance"16
d24@0:8@"_AXSpringBoardServerInstance"16
v28@0:8@"_AXSpringBoardServerInstance"16B24
B32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
B28@0:8@"_AXSpringBoardServerInstance"16B24
v36@0:8@"_AXSpringBoardServerInstance"16B24@"NSString"28
@"NSDictionary"32@0:8@"_AXSpringBoardServerInstance"16Q24
@32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
@"NSDictionary"24@0:8@"_AXSpringBoardServerInstance"16
v28@0:8B16@"_AXSpringBoardServerInstance"20
@"NSArray"24@0:8@"_AXSpringBoardServerInstance"16
B32@0:8@"_AXSpringBoardServerInstance"16Q24
@"NSNumber"24@0:8@"_AXSpringBoardServerInstance"16
i24@0:8@"_AXSpringBoardServerInstance"16
B28@0:8B16@"_AXSpringBoardServerInstance"20
@24@0:8@"_AXSpringBoardServerInstance"16
v20@0:8i16
B36@0:8B16@20@?28
B20@0:8i16
@32@0:8@16@?24
v40@0:8q16d24q32
@"UIWindow"
@"NSMutableArray"
@"AXSpringBoardServerSideAppManager"
@"AXSpringBoardServerAlertManager"
@"UIAlertController"
@"AXAssertion"
v28@0:8i16@20
v36@0:8q16d24B32
v32@0:8d16@?24
v32@0:8@16d24
v24@0:8i16f20
@"NSString"
v32@0:8q16@24
B24@0:8Q16
v36@0:8@16I24@?28
B20@0:8I16
v20@0:8I16
B28@0:8i16@20
v44@0:8i16@20:28@36
@20@0:8I16
v36@0:8@16@24I32
@"AXIPCServer"
@"AXIPCClient"
@"<AXSpringBoardServerInstanceDelegate>"
@"NSMapTable"
^{__IOHIDManager=}
@"_AXAssertionServer"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v32@0:8@"AXVSBaseService"16@"NSDictionary"24
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8@?16
v24@0:8Q16
v56@0:8@16@24@32q40q48
v20@0:8C16
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v32@0:8@16q24
v40@0:8@16@24@32
v32@0:8@16Q24
v48@0:8@16@24@32@?40
@40@0:8@16@24@32
@32@0:8@16q24
v56@0:8@16@24@32@40@?48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
@48@0:8@16q24@32@40
{CGSize=dd}48@0:8@16q24f32f36@40
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16q24
v32@0:8@"BBObserver"16@"NSArray"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16Q24
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
@"AXAccessQueueTimer"
@"AXDispatchTimer"
