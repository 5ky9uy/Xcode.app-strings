init
dc_errorWithCode:
fetchOpaqueBlobWithContext:completion:
initWithContext:cryptoProxy:
generateEncryptedBlobWithCompletion:
.cxx_destruct
_cryptoProxy
_context
class
description
stringWithFormat:
allowCatalogRefresh
setAllowCatalogRefresh:
ignoreCachedAsset
setIgnoreCachedAsset:
ignoreCachedMetadata
setIgnoreCachedMetadata:
_allowCatalogRefresh
_ignoreCachedAsset
_ignoreCachedMetadata
alloc
_registerActivityWithInterval:
_performMetadataRefreshForActivity:
numberWithLong:
publicKeyRefreshInterval
_activityCriteriaWithFrequency:
sharedFetcher
updateActivityScheduleWithAsset:
fetchPublicKeyMetadataIgnoringCachesWithCompletion:
sharedInstance
start
_fetchAssetWithContext:completionHandler:
refreshState
_validateAsset:error:
_queryMetadataWithContext:completion:
_assetQuery
queryMetaDataSync
_handleMissingMetadataWithContext:completion:
_handleSuccessForQuery:completion:
errorWithDomain:code:userInfo:
initWithType:
augmentResultsWithState:
startCatalogDownload:then:
results
count
firstObject
state
attributes
assetWithMobileAsset:
fetchPublicKeyAssetWithCompletion:
_assetSerializationQueue
_cachedAsset
publicKey
dataWithBytes:length:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
_fetchPublicKey:
assetProperty:
unsignedIntegerValue
setVersion:
doubleValue
setPublicKeyRefreshInterval:
setPublicKey:
version
_version
_publicKeyRefreshInterval
_publicKey
v24@?0@"NSData"8@"NSError"16
<%@: %p - refreshAllowed: %d, ignoreAssetCache: %d, ignoreMetadataCache: %d>
allowCatalogRefresh
TB,N,V_allowCatalogRefresh
ignoreCachedAsset
TB,N,V_ignoreCachedAsset
ignoreCachedMetadata
TB,N,V_ignoreCachedMetadata
v8@?0
activityInterval
com.apple.deviceCheck
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"DCAsset"8@"NSError"16
com.apple.devicecheck.notify
com.apple.MobileAsset.DeviceCheck
com.apple.twobit.fetcherror
com.apple.twobit.asset-fetch-queue
v16@?0q8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.devicecheck.pubvalue
com.apple.devicecheck.refreshtimer
<%@: %p - version: %lu, refreshInterval: %f>
version
TQ,N,V_version
publicKeyRefreshInterval
Td,N,V_publicKeyRefreshInterval
publicKey
T@"NSData",C,N,V_publicKey
DCDDeviceMetadata
DCAssetFetcherContext
DCXPCActivityController
DCAssetFetcher
DCCryptoProxyImpl
DCCryptoProxy
NSObject
DCAsset
@32@0:8@16@24
v24@0:8@?16
v16@0:8
@"<DCCryptoProxy>"
@"DCContext"
@16@0:8
B16@0:8
v20@0:8B16
v24@0:8@16
v24@0:8d16
@24@0:8d16
v32@0:8@16@?24
@32@0:8@16^@24
@"NSObject<OS_dispatch_queue>"
@"MAAsset"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"DCContext"16@?<v@?@"NSData"@"NSError">24
@24@0:8@16
v24@0:8Q16
d16@0:8
@"NSData"
XPC activity registration complete. State: %@.
Attempting to update refresh interval with: %f
Building activity criteria with interval %f
XPC activity says that it's time refresh stuff!!
Error setting activity continue
Failed to refresh assets in response to XPC activity: %@
Error setting activity done
Validating cached asset... %@
Failed to validate cached asset: %@
Asset cache validated!
Cached asset is missing or invalid, lets query metadata again...
Starting to fetch asset with context: %@
Unexpected query result: %ld
Query sync result indicated missing asset catalog
Attempting to download catalog...
Catalog downloaded with result %ld...
Catalog refetch not allowed, failing...
Query success, results count: %lu
Unexpected result count detected!!!
Updating cache with valid asset
Attempting to validate asset: <%@ - %ld> - %@
Generating certificate...
Fetched remote public key...
Falling back to locally cached key... Asset fetch failed: %@
Returning parsed asset: %@
Failed to parse asset, required fields are missing!
@(#)PROGRAM:DeviceCheckInternal  PROJECT:DeviceCheck-1
