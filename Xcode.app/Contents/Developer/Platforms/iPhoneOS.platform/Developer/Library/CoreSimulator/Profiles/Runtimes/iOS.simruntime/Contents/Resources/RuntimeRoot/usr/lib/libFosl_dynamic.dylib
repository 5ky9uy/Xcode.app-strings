GL_ES
samplePosition
#abc// expected-error{{}} 
 // Begin 
Empty
#define 
Error occurred, aborting diff
Error occurred in second parse, aborting diff
error: prints diff
1st:
2nd:
error: reachability prints diff
// Kernel 
Source
.frag
.fsh
.vert
.vsh
Prelude
-target=
Host
x86_64-apple-darwin10.0
ARM64
-verify
-std=
glsl
glsl_es
-filter-kernel
-stage=
vertex
fragment
-stage
-prelude=
-uniform-table-file=
-uniform-specialization-file=
-code-complete-pos=
-std=glsl_es
-std=glsl
-stage=vertex
-stage=fragment
preprocess
parse
ast-print
opencl-ast-print
metal-ast-print
ast-diff
ast-print-reachable
ast-verify
code-complete
filter-print
(skipping 
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
expanded from here
expanded from macro '
in file included from 
in module '
while building module '
#pragma
#pragma GCC
#pragma clang
<uninit>
#line
 3 4
 /* clang -E: implicit import for "
" */
#ident 
#pragma clang __debug 
#pragma 
message("
warning "
error "
 diagnostic push
 diagnostic pop
 diagnostic 
remark
ignored
fatal
#pragma warning(
#pragma warning(push
#pragma warning(pop)
#undef 
fatal error
(clang)
 (in PCH)
) : 
In file included from 
In included file:
In module '
' imported from 
In module 
While building module '
fix-it:"
  ...
     
<U+>
<XX>
 [-ferror-limit=]
 [-Werror
note
expected
no-diagnostics
string
regex
  File 
 Line *
 Line 
 (directive at 
  (frontend)
 File 
Header Map %s:
  %d buckets, %d entries
  %d. %s -> '%s' '%s'
*** HeaderSearch Stats:
%d files tracked.
  %d #import/#pragma once files.
  %d included exactly once.
  %d max times a file is included.
  %d #include/#include_next/#import.
    %d #includes skipped due to the multi-include optimization.
%d framework lookups.
%d subframework lookups.
.pcm
.framework
.framework/
.system_framework
Headers/
Private
Frameworks/
PrivateHeaders/
Modules
module.modulemap
module.map
module_private.map
module.private.modulemap
include
__include_macros
define
undef
line
error
pragma
import
include_next
warning
ident
sccs
assert
unassert
version
extension
ifdef
ifndef
elif
endif
<<<<<<<
>>>> 
<<<<
>>>>>>>
MacroInfo 
 builtin
 disabled
 used
 allow_redefinitions_without_warning
 warn_if_unused
 imported
 header_guard
    #define <macro>
DefMacroDirective
UndefMacroDirective
VisibilityMacroDirective
 prev 
 from_pch
 ambiguous
 public
 private
Headers
Frameworks
Modules:
Headers:
" -> 
config_macros
conflict
exclude
framework
header
link
module
requires
umbrella
PrivateHeaders
exhaustive
extern_c
system
float.h
iso646.h
limits.h
stdalign.h
stdarg.h
stdbool.h
stddef.h
stdint.h
tgmath.h
unwind.h
ndef
ndif
__public_macro
__private_macro
@import 
'defined'
 to 
.hpp
__LINE__
__FILE__
__VERSION__
__DATE__
__TIME__
__COUNTER__
_Pragma
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__identifier
__pragma
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_include
__has_include_next
__has_warning
__is_identifier
__building_module
__MODULE__
??? ??? ?? ??:??:?? ????
'__has_warning'
"%s %2d %4d"
"%02d:%02d:%02d"
nullability
c_alignas
c_atomic
c_generic_selections
c_static_assert
c_thread_local
cxx_atomic
cxx_deleted_functions
cxx_explicit_conversions
cxx_inline_namespaces
cxx_local_type_template_args
cxx_nonstatic_member_init
cxx_override_control
cxx_range_for
cxx_reference_qualified_functions
cxx_rvalue_references
cxx_binary_literals
cxx_init_captures
cxx_variable_templates
address_sanitizer
assume_nonnull
attribute_analyzer_noreturn
attribute_availability
attribute_availability_with_message
attribute_availability_app_extension
attribute_availability_tvos
attribute_cf_returns_not_retained
attribute_cf_returns_retained
attribute_deprecated_with_message
attribute_ext_vector_type
attribute_ns_returns_not_retained
attribute_ns_returns_retained
attribute_ns_consumes_self
attribute_ns_consumed
attribute_cf_consumed
attribute_objc_ivar_unused
attribute_objc_method_family
attribute_overloadable
attribute_unavailable_with_message
attribute_unused_on_fields
blocks
c_thread_safety_attributes
cxx_exceptions
cxx_rtti
enumerator_attributes
memory_sanitizer
thread_sanitizer
dataflow_sanitizer
objc_arr
objc_arc
objc_arc_weak
objc_default_synthesize_properties
objc_fixed_enum
objc_instancetype
objc_modules
objc_nonfragile_abi
objc_property_explicit_atomic
objc_protocol_qualifier_mangling
objc_weak_class
ownership_holds
ownership_returns
ownership_takes
objc_bool
objc_subscripting
objc_array_literals
objc_dictionary_literals
objc_boxed_expressions
arc_cf_code_audited
objc_bridge_id
objc_bridge_id_on_typedefs
objc_generics
cxx_access_control_sfinae
cxx_alias_templates
cxx_alignas
cxx_attributes
cxx_auto_type
cxx_constexpr
cxx_decltype
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
cxx_defaulted_functions
cxx_delegating_constructors
cxx_generalized_initializers
cxx_implicit_moves
cxx_inheriting_constructors
cxx_lambdas
cxx_noexcept
cxx_nullptr
cxx_raw_string_literals
cxx_strong_enums
cxx_static_assert
cxx_thread_local
cxx_trailing_return
cxx_unicode_literals
cxx_unrestricted_unions
cxx_user_literals
cxx_variadic_templates
cxx_aggregate_nsdmi
cxx_contextual_conversions
cxx_decltype_auto
cxx_generic_lambdas
cxx_relaxed_constexpr
cxx_return_type_deduction
has_nothrow_assign
has_nothrow_copy
has_nothrow_constructor
has_trivial_assign
has_trivial_copy
has_trivial_constructor
has_trivial_destructor
has_virtual_destructor
is_abstract
is_base_of
is_class
is_constructible
is_convertible_to
is_empty
is_enum
is_final
is_literal
is_standard_layout
is_pod
is_polymorphic
is_sealed
is_trivial
is_trivially_assignable
is_trivially_constructible
is_trivially_copyable
is_union
modules
underlying_type
cfe-pth
PTH file uses an older PTH format that is no longer supported
PTH file contains no cached source data
Could not allocate memory for processing PTH file
DEFAULT
clang
STDC
__VA_ARGS__
_exception_info
__exception_info
GetExceptionInformation
_exception_code
__exception_code
GetExceptionCode
_abnormal_termination
__abnormal_termination
AbnormalTermination
 [StartOfLine]
 [LeadingSpace]
 [ExpandDisabled]
 [UnClean='
Loc=<
MACRO: 
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
    
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
<built-in>
<scratch space>
interrupt
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
acquired_after
acquired_before
address_space
alias
aligned
align
always_inline
analyzer_noreturn
annotate
objc_arc_weak_reference_unavailable
argument_with_type_tag
pointer_with_type_tag
assert_capability
assert_shared_capability
assert_exclusive_lock
assert_shared_lock
availability
bounded
cdecl
cf_audited_transfer
cf_consumed
cf_returns_not_retained
cf_returns_retained
cf_unknown_transfer
device
host
launch_bounds
noreturn
callable_when
capability
shared_capability
carries_dependency
cleanup
cold
constructor
consumable
consumable_auto_cast_state
consumable_set_state_on_read
dllexport
dllimport
deprecated
destructor
enable_if
exclusive_trylock_function
ext_vector_type
fallthrough
fastcall
final
sealed
flatten
format
format_arg
gnu_inline
guarded_by
guarded_var
ibaction
iboutlet
iboutletcollection
init_priority
init_seg
intel_ocl_bicc
lock_returned
lockable
locks_excluded
loop
unroll
nounroll
ms_abi
__unspecified_inheritance
may_alias
minsize
mips16
mode
ms_struct
ns_consumed
ns_consumes_self
ns_returns_autoreleased
ns_returns_not_retained
ns_returns_retained
naked
neon_polyvector_type
neon_vector_type
nocommon
nodebug
noduplicate
noescape
no_instrument_function
nomips16
no_address_safety_analysis
no_sanitize_address
no_sanitize_memory
no_sanitize_thread
no_split_stack
no_thread_safety_analysis
nothrow
nonnull
objc_bridge
objc_bridge_mutable
objc_bridge_related
objc_complete_definition
objc_designated_initializer
objc_exception
objc_protocol_requires_explicit_implementation
objc_gc
objc_method_family
NSObject
objc_ownership
objc_precise_lifetime
objc_requires_property_definitions
objc_requires_super
objc_returns_inner_pointer
objc_root_class
objc_runtime_name
objc_subclassing_restricted
optnone
overloadable
override
param_typestate
pascal
pnaclcall
pt_guarded_by
pt_guarded_var
pure
regparm
release_capability
release_shared_capability
release_generic_capability
unlock_function
reqd_work_group_size
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
return_typestate
returns_nonnull
returns_twice
scoped_lockable
section
allocate
selectany
sentinel
set_typestate
shared_trylock_function
stdcall
sysv_abi
tls_model
test_typestate
thiscall
thread
transparent_union
try_acquire_capability
try_acquire_shared_capability
type_tag_for_datatype
type_visibility
unavailable
unused
used
uuid
vecreturn
vec_type_hint
vector_size
visibility
warn_unused
warn_unused_result
weak
weak_import
weakref
work_group_size_hint
force_align_arg_pointer
math.h
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignl
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fmod
__builtin_fmodf
__builtin_fmodl
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_vall
__builtin_inf
__builtin_inff
__builtin_infl
__builtin_labs
LiLi
__builtin_llabs
LLiLLi
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanl
LdcC*
__builtin_nans
__builtin_nansf
__builtin_nansl
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powl
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_ceil
__builtin_ceilf
__builtin_ceill
__builtin_cos
__builtin_cosf
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_cosl
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_exp
__builtin_expf
__builtin_expl
__builtin_exp2
__builtin_exp2f
__builtin_exp2l
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_floor
__builtin_floorf
__builtin_floorl
__builtin_fma
dddd
__builtin_fmaf
ffff
__builtin_fmal
LdLdLdLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxl
__builtin_fmin
__builtin_fminf
__builtin_fminl
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_llrint
LLid
__builtin_llrintf
LLif
__builtin_llrintl
LLiLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10l
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log2
__builtin_log2f
__builtin_log2l
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logf
__builtin_logl
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_rint
__builtin_rintf
__builtin_rintl
__builtin_round
__builtin_roundf
__builtin_roundl
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_sin
__builtin_sinf
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinl
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtl
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanl
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_isgreater
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
iLLi
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_bswap16
UsUs
__builtin_bswap32
UiUi
__builtin_bswap64
ULLiULLi
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_bcmp
iv*v*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_memchr
v*vC*iz
__builtin_memcmp
ivC*vC*z
__builtin_memcpy
v*v*vC*z
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin___clear_cache
vc*c*
__builtin_flt_rounds
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_vsprintf
ic*cC*a
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_expect
LiLiLi
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
ULLi
__builtin_trap
__builtin_debugtrap
__builtin_unreachable
__builtin_shufflevector
__builtin_alloca
__sync_fetch_and_add
__sync_fetch_and_add_1
ccD*c.
__sync_fetch_and_add_2
ssD*s.
__sync_fetch_and_add_4
iiD*i.
__sync_fetch_and_add_8
LLiLLiD*LLi.
__sync_fetch_and_add_16
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_or
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_and
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_xor
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
__sync_val_compare_and_swap_1
ccD*cc.
__sync_val_compare_and_swap_2
ssD*ss.
__sync_val_compare_and_swap_4
iiD*ii.
__sync_val_compare_and_swap_8
LLiLLiD*LLiLLi.
__sync_val_compare_and_swap_16
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
vvD*i
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
izvCD*
__atomic_is_lock_free
__sync_synchronize
__sync_fetch_and_min
iiD*i
__sync_fetch_and_max
__sync_fetch_and_umin
UiUiD*Ui
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
_alloca
__assume
__noop
__debugbreak
__va_start
vc**.
_InterlockedCompareExchange
LiLiD*LiLi
_InterlockedCompareExchangePointer
v*v*D*v*v*
_InterlockedIncrement
LiLiD*
_InterlockedDecrement
_InterlockedExchangeAdd
LiLiD*Li
_InterlockedExchangePointer
v*v*D*v*
_InterlockedExchange
abort
stdlib.h
calloc
v*zz
exit
_Exit
malloc
realloc
v*v*z
memcpy
string.h
memcmp
memmove
strcpy
strncpy
strcmp
strncmp
strcat
strncat
strxfrm
zc*cC*z
memchr
strchr
strcspn
strpbrk
strrchr
strspn
strstr
strtok
memset
strerror
strlen
printf
fp:0:
stdio.h
fprintf
fp:1:
snprintf
fp:2:
sprintf
ic*cC*.
vprintf
icC*a
fP:0:
vfprintf
fP:1:
vsnprintf
fP:2:
vsprintf
scanf
icC*R.
fs:0:
fscanf
iP*RcC*R.
fs:1:
sscanf
icC*RcC*R.
vscanf
icC*Ra
fS:0:
vfscanf
iP*RcC*Ra
fS:1:
vsscanf
icC*RcC*Ra
setjmp
setjmp.h
longjmp
alloca
stpcpy
stpncpy
strdup
strndup
strings.h
rindex
bzero
strcasecmp
strncasecmp
_exit
unistd.h
vfork
_setjmp
__sigsetjmp
iSJi
sigsetjmp
setjmp_syscall
savectx
qsetjmp
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
objc_msgSendSuper
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc_sync_enter
objc/objc-sync.h
objc_sync_exit
__builtin_objc_memmove_collectable
NSLog
Foundation/NSObjCRuntime.h
NSLogv
atan2
atan2f
atan2l
labs
llabs
copysign
copysignf
copysignl
fabs
fabsf
fabsl
fmod
fmodf
fmodl
frexp
frexpf
frexpl
ldexp
ldexpf
ldexpl
modff
modfl
nanf
nanl
powf
powl
acosf
acosl
acoshf
acoshl
asinf
asinl
asinhf
asinhl
atanf
atanl
atanhf
atanhl
cbrt
cbrtf
cbrtl
ceilf
ceill
cosf
cosl
coshf
coshl
erff
erfl
erfc
erfcf
erfcl
expf
expl
exp2f
exp2l
expm1
expm1f
expm1l
fdim
fdimf
fdiml
floorf
floorl
fmaf
fmal
fmax
fmaxf
fmaxl
fmin
fminf
fminl
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
logf
logl
log10
log10f
log10l
log1p
log1pf
log1pl
log2f
log2l
logb
logbf
logbl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nearbyint
nearbyintf
nearbyintl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
rint
rintf
rintl
roundf
roundl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
sinf
sinl
sinhf
sinhl
sqrtf
sqrtl
tanf
tanl
tanhf
tanhl
tgamma
tgammaf
tgammal
truncf
truncl
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__sinpi
__sinpif
__cospi
__cospif
__tanpi
__tanpif
__exp10
__exp10f
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_annotation
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__builtin_operator_new
__builtin_operator_delete
(null)
select
plural
ordinal
<can't format argument>
identifier
ARC 
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
Inline Assembly Issue
Specialization Issue
Command Line Issue
Backend Issue
AST Deserialization Issue
Frontend Issue
Semantic issue
Modules Issue
Nullability Issue
Generics Issue
OpenMP Issue
User-Defined Issue
Parsing Issue
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Related Result Type Issue
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Instrumentation Issue
Unused Entity Issue
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
%0 attribute cannot be applied to types
cannot open file '%0': %1
only special member functions may be defaulted
only functions can have deleted definitions
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute}0
file '%0' modified since it was first processed
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
cyclic dependency in module '%0': %1
module '%0' found in both '%1' and '%2'
could not acquire lock file for module '%0'
timed out waiting to acquire lock file for module '%0'
could not build module '%0'
module '%0' not found
[rewriter] %0
nullability specifier '%select{%select{__|}1nonnull|%select{__|}1nullable|%select{__|}1null_unspecified}0' conflicts with existing specifier '%select{%select{__|}3nonnull|%select{__|}3nullable|%select{__|}3null_unspecified}2'
redefinition of parameter %0
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
the '%0' unit is not supported with this instruction set
the %0 sub-architecture does not support unaligned accesses
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
%0 byte order mark detected in '%1', but encoding is not supported
'long long' is an extension when C99 mode is not enabled
'long long' is a C++11 extension
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
variadic templates are a C++11 extension
too many errors emitted, stopping now
also found
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
'%select{__nonnull|__nullable|__null_unspecified}0' specified here
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
definition of %0 is not complete until the closing '}'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
redeclaration of method parameter %0
redefinition of method parameter %0
duplicate nullability specifier '%select{%select{__|}1nonnull|%select{__|}1nullable|%select{__|}1null_unspecified}0'
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
'%0' not supported, please use -iquote instead
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0' on this platform
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
conflicting deployment targets, both '%0' and '%1' are present in environment
-emit-llvm cannot be used when linking
failing because environment variable '%0' is set
invalid Xarch argument: '%0', cannot change driver behavior inside Xarch argument
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid architecture '%0' for deployment target '%1'
invalid arch name '%0'
invalid Darwin version number: %0
invalid output type '%0' for use with gcc tool
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid linker name in argument '%0'
invalid float ABI '%0'
cannot use '%0' output with multiple -arch options
invalid option '%0' not of the form <from-file>;<to-file>
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
invalid value '%1' in '%0'
invalid version number in '%0'
malformed sanitizer blacklist: '%0'
option '-MG' requires '-M' or '-MM'
argument to '%0' is missing (expected %1 value%s1)
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
'%0': unable to use AST files with this tool
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
no such file or directory: '%0'
cannot specify both '-fobjc-arc' and '%0'
garbage collection is no longer supported
%0 in '%1'
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
'%0' required with '%1' option
unable to remove file: %0
unknown argument: '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
unsupported option '%0'
unsupported option '%0' for target '%1'
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
there is no external assembler that can be used on this platform
the target architecture '%0' is not supported by the target '%1'
diagnostic msg: %0
The last /TC or /TP option takes precedence over earlier instances
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (zlib not installed)
unknown platform, assuming -mfloat-abi=%0
joined argument expects additional value: '%0'
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
falling back to %0
Objective-C garbage collection is not supported on this platform, ignoring '%0'
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
argument unused during compilation: '%0'
optimization flag '%0' is not supported
ignoring invalid -ftabstop value '%0', using default value %1
no such sysroot directory: '%0'
conflicting module names specified: '-fmodule-name=%0' and '-fmodule-implementation-of %1'
action %0 not compiled in
cannot link module '%0': %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
cannot locate code-completion file %0
unable to find plugin '%0'
no suitable precompiled header file found in directory '%0'
PTH file '%0' does not designate an original source header file for -include-pth
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to change standard output to binary
unable to create target: '%0'
unable to interface with target machine
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
cannot use behavior '%select{require|enable}0' with 'all'
Opening uniform table file '%0' failed with error '%1'
invalid version-profile pairing
unrecognized GLSL extension: '%0'
unrecognized behavior '%0'
unrecognized GLSL profile: '%0'
unrecognized GLSL version: '%0'
GLSL shader dialect %0 unsupported
GLSL version '%0' is unsupported
GLSL version '%0' needs profile '%1'
invalid virtual filesystem overlay file '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
cannot create includes file for module %0: %1
%select{|umbrella }0header '%1' not found
module map file '%0' not found
module '%0' %select{is incompatible with|requires}1 feature '%2'
-fapinotes was provided without -fapinotes-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
no analyzer checkers are associated with '%0'
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
could not determine the original source location for %0:%1:%2
instantiated into assembly here
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
use -analyzer-disable-all-checks to disable all static analyzer checkers
building module '%0' as '%1'
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
stack frame size of %0 bytes in %q1
macro '%0' contains embedded newline; text after the newline is ignored
unable to open file %0 for serializing diagnostics (%1)
unable to merge a subprocess's serialized diagnostics
FIX-IT detected errors it could not fix; no output will be generated
GLSL version '%0' support is experimental
-preprocess action deprecated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
input is not a PCH file: '%0'
file '%0' has been modified since the precompiled header '%1' was built
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' imported by AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' imported by AST file '%1' not found
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
instantiation of %q0 is different in different modules
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
'%0' does not appear to be a precompiled header file
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file|current translation unit}0 was compiled with the target feature'%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
after modifying system headers, please delete the module cache at '%0'
definition in module '%0' is here
definition has no member %0
declaration of %0 does not match
please rebuild precompiled header '%0'
'%0' required by '%1'
module '%0' conflicts with already-imported module '%1': %2
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
%0 directive is not permitted in GLSL
reserved macro name %0
#version can only appear on the first line of the shader
#extension must occur before non-preprocessor tokens
#extension directive is missing extension %{name|behavior}0
%0 directive is valid only in GLSL mode
%select{optimize|debug}0 pragma not of the form: #pragma %select{optimize|debug}0([on|off])
unknown action for %select{optimize|debug}0 pragma, expected 'on' or 'off'
#version directive requires a positive integer argument
\%0 used with no following hex digits
hex escape sequence out of range
hexadecimal floating constants require a significand
hexadecimal floating constants require an exponent
invalid digit '%0' in binary constant
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in decimal constant
invalid digit '%0' in octal constant
invalid or corrupt PTH file '%0'
invalid suffix '%0' on floating constant
invalid suffix '%0' on integer constant
source file is not valid UTF-8
failure when lexing a string
macro name too long
configuration macros are only allowed on top-level modules
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
umbrella directory '%0' not found
skipping stray token
Unicode character literals may not contain multiple characters
paste operator (##) not allowed
stringify operator (#) not allowed
non-ASCII characters are not allowed outside of literals and identifiers
octal escape sequence out of range
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> include; use "quotes" instead
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot #include files inside '#pragma clang arc_cf_code_audited'
cannot #include files inside '#pragma clang assume_nonnull'
#include nested too deeply
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker|#version}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
macro name missing
missing ')' in macro parameter list
variadic macros not supported in OpenCL
C++ operator %0 (aka %1) used as a macro name
remainder by zero in preprocessor expression
'#' is not followed by a macro parameter
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
builtin warning check macro requires a parenthesized string
module %0 does not depend on a module exporting '%1'
use of private header from outside its module: '%0'
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
multi-character character constant
hexadecimal floating constants are a C99 feature
imaginary constants are a GNU extension
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable MSVC search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
unknown pragma in STDC namespace
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating ' character
missing terminating '"' character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
cannot use initializer list at the beginning of a macro argument
macro %0 defined here
to match this '{'
to match this ']'
previously defined here
expanding this definition of %0
other definition of %0
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in character literal
null character ignored
null character(s) preserved in string literal
disabled expansion of recursive macro
#elif after #else
#elif without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next with absolute path
#include_next in primary source file
invalid string literal, ignoring final '\'
macro is not used
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
using this character in an identifier is incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
extraneous characters in character constant ignored
unknown pragma '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
unknown attribute '%0'
'/*' within block comment
include of non-modular header inside framework module '%0'
include of non-modular header inside module '%0'
ambiguous expansion of macro %0
left side of operator converted from negative value to unsigned: %0
right side of operator converted from negative value to unsigned: %0
expansion of date or time macro is not reproducible
integer overflow in preprocessor expression
%select{#line|GNU line marker|#version}0 directive interprets number as decimal, not octal
%0 is not defined, evaluates to 0
unexpected debug command '%0'
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
pragma STDC FENV_ACCESS ON is not supported, ignoring pragma
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
anonymous structs are not allowed, provide a variable name
declaration of anonymous %0 must be a definition
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
arrays of arrays are not allowed
__asm used with no assembly instructions
cannot use %select{unicode|wide}0 string literal in 'asm'
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
parentheses must be omitted if %0 attribute's argument list is empty
an attribute list cannot appear here
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macosx'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
bitfield member cannot have an in-class initializer
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets go after the %select{identifier|unqualified-id}0
'centroid' is required to be before 'in' or 'out'
template template parameter requires 'class' after the parameter list
const variables must be initialized
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute '%0' cannot be used as an attribute pack
attribute %0 cannot appear multiple times in an attribute specifier
declaration does not declare a parameter
cannot declare variables in do/while condition expression
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
duplicate 'virtual' in base specifier
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
structs must have at least 1 member
missing ',' between enumerators
unnamed enumeration must be a definition
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected function
expected function body
expected function or type
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected 'in' or 'out' after 'centroid'
expected body of lambda expression
expected layout qualifier
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected constant literal
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected statement
expected template
expected template parameter
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of non-template %1 %2
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
for range declaration must declare a variable
cannot define a type in a friend declaration
'%0' is invalid in friend declarations
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
GLSL version %0 doesn't allow 'varying' or 'attribute'. Use 'in' or 'out'
GLSL doesn't have %0, did you mean %1?
GLSL doesn't have %0
parameters cannot have initializers in GLSL
expected template name after 'template' keyword in nested name specifier
identifier must fit within 1024 characters
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from an in-class initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
invalid attribute key
invalid attribute value
'_Complex %0' is invalid
cannot combine with previous '%0' declaration specifier
'long %0' is invalid
'long long %0' is invalid
cannot use %select{dot|arrow}0 operator on a type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
'%0' qualifier may not be applied to a reference
'short %0' is invalid
'%0' cannot be signed or unsigned
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
cannot use '%0' with '__vector bool'
cannot use '%0' with '__vector'
cannot combine with previous '%0' declaration specifier. '__vector' must be first
__table can only be used with sampler type
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
lambda requires '()' before %select{'mutable'|return type|attribute specifier}0
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after module import
expected ';' after module name
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
Unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
nested namespace definition must define each namespace separately
parameter named %0 is missing
non-uniform interface block
OpenCL does not support the '%0' storage class specifier
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
attributes may not be specified on a category
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
properties are an Objective-C 2 feature
property name cannot be a bitfield
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface or protocol
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
expected identifier specifying the name of the 'omp critical' directive
expected ',' or ')' in '%0' %select{clause|directive}1
'#pragma omp %0' cannot be an immediate substatement
directive '#pragma omp %0' cannot contain more than one '%1' clause
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive '#pragma omp %0'
expected an OpenMP directive
out-of-line constructor for %0 cannot have template arguments
qualified reference to %0 is a constructor name rather than a template name wherever a constructor can be declared
qualified reference to %0 is a constructor name rather than a type wherever a constructor can be declared
'%0' keyword not permitted with interface types
unexpected parenthesis after '::'
missing parentheses around the size of parameter pack %0
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
'#pragma fp_contract' can only appear at file scope or at the start of a compound statement
%select{invalid|missing}0 argument; expected '%select{enable|full}1' or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, or unroll_count
invalid argument; expected a positive integer value
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
default precision statement requires precision qualifier
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
%0 only allowed in __except block
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
structs cannot be forward declared
struct member arrays must be explicitly sized
initializers not allowed on structure members
invalid qualifier for struct member (only precision qualifiers allowed)
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>}1
a static_assert declaration cannot be a template
cannot template a using declaration
cannot template a using directive
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
type not part of shader version %0
typename is allowed for identifiers only
type name does not allow constexpr specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
attributes cannot be specified on namespace alias
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
unkown type or function name: %0
unkown type or variable name: %0
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
must use '%1' tag to refer to type %0%select{| in this scope}2
'using namespace' is not allowed in classes
version number must have non-zero major, minor, or sub-minor version
use of empty enum
property synthesize requires specification of an ivar
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'auto' type specifier is a C++11 extension
%0 is a C11-specific feature
generic selections are a C11-specific feature
_Noreturn functions are a C11-specific feature
_Static_assert is a C11-specific feature
compound literals are a C99-specific feature
variable declaration in for loop is a C99-specific feature
enumeration types with a fixed underlying type are a Microsoft extension
enumeration types with a fixed underlying type are a C++11 extension
'decltype(auto)' type specifier is a C++14 extension
defaulted function definitions are a C++11 extension
deleted function definitions are a C++11 extension
duplicate '%0' declaration specifier
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
range-based for loop is a C++11 extension
range-based for loop with implicit deduced type is a C++1z extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
inline namespaces are a C++11 feature
complex integer types are a GNU extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
'sealed' keyword is a Microsoft extension
in-class initialization of non-static data member is a C++11 extension
type nullability specifier %0 is a Clang extension
'%0' keyword is a C++11 extension
plain '_Complex' requires a type specifier; assuming '_Complex double'
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
template template parameter using 'typename' is a C++1z extension
'__thread' before '%0'
use -fbracket-depth=N to increase maximum nesting level
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
previous default generic association is here
ignored %0 qualifier on asm
'%0' casts have no effect when not using ARC
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'auto' storage class specifier is redundant and incompatible with C++11
'unavailable' availability overrides all other availability information
use of C-style parameters in Objective-C method declarations is deprecated
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
range-based for loop with implicit deduced type is incompatible with C++ standards before C++1z
template template parameter using 'typename' is incompatible with C++ standards before C++1z
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
defaulted function definitions are incompatible with C++98
deleted function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
in-class initialization of non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
'register' storage class specifier is deprecated
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
extra ';' after member function definition
meaningless 'volatile' on asm outside function
GCC does not allow an attribute in this position on a function declaration
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
%0 used as the name of the previous parameter rather than as part of the selector
protocol has no object type specified; defaults to qualified 'id'
extra tokens at the end of '#pragma omp %0' are ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
expected 'enable' or 'disable' - ignoring
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
extra tokens at end of '#pragma %0' - ignored
'#pragma init_seg' is only supported when targeting a Microsoft environment
unknown action for '#pragma %0' - ignored
unknown action '%1' for '#pragma %0' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
Use of 'long' with '__vector' is deprecated
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
%select{read of|assignment to|increment of|decrement of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|assignment to|increment of|decrement of}0 object outside its lifetime is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile-qualified type %1 is not allowed in a constant expression
cannot refer to element %0 of %select{array of %2 elements|non-array object}1 in a constant expression
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
constexpr evaluation exceeded maximum depth of %0 calls
floating point arithmetic produces %select{an infinity|a NaN}0
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|assignment to|increment of|decrement of}0 %select{temporary|variable}1 whose lifetime has ended
signed left shift discards bits
left shift of negative value %0
read of mutable member %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|call member function on|access real component of|access imaginary component of}0 null pointer
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|call member function on|access real component of|access imaginary component of}0 pointer past the end of object
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression
%select{|sub}0object of type %1 is not initialized
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate virtual function call in a constant expression
comparison between unequal pointers to void has unspecified result
division by zero
class has base type %0
bit-field %0 with type %1 and length %2 here
also defined here
enumerator %0 with value %1 here
field %0 has type %1 here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
overflow in expression; result is %0 with type %1
type %0 has incompatible definitions in different translation units
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '\deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
can't form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
alias definition of %0 after tentative definition
only weak aliases are supported on darwin
pack expansion used as argument for non-pack parameter of alias template
extraneous template parameter list in alias template declaration
alias must point to a defined variable or function
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
'aligned' attribute requires integer constant
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
size of anonymous bit-field (%0 bits) exceeds size of its type (%1 bits)
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
member of anonymous struct redeclares %0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
member of anonymous union redeclares %0
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained| assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids %select{Objective-C objects|blocks}0 in %select{struct|interface|union|<<ERROR>>|enum}1
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
the current deployment target does not support automated __weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument should be a value from %0 to %1
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing char array with wide string literal
array size must be specified in new expressions
array of abstract class type %0
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an address space
bad type for named register variable
asm operand has incomplete type %0
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
invalid type %0 in asm input for constraint '%1'
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
unknown register name '%0' in asm
wide string is invalid in 'asm'
$assert precision_is: expected '%0' but got '%1'
$assert sa_failed: expected this code to fail SA, but it passed
$assert type_is: expected '%0' but got '%1'
first argument to $assert must be the identifier 'type_is_<T>', 'precision_is_<P>', or 'sa_failed'
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
address argument to bitwise atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to non-const _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |}0type %1 %select{||||||which is not trivially copyable}0
the type %0 is already explicitly ownership-qualified
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
%0 attribute invalid on this declaration, requires typedef or value
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment is not a power of 2
requested alignment must be %0 bytes or smaller
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
init_priority attribute requires integer constant between 101 and 65535 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
invalid attribute argument %0 - expecting a vector or vectorizable scalar type
Neon vector size must be 64 or 128 bits
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
attribute %q0 cannot be applied to a deleted function
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
definition of dllimport data
dllimport cannot be applied to non-inline function definition
definition of dllimport static field not allowed
%0 attribute is invalid for the implicit this argument
%0 attribute cannot be applied to a statement
vector size not an integral multiple of component size
invalid vector element type %0
multiple garbage collection attributes specified for type
%0 attribute cannot be used with pointers to members
%0 attribute is not supported in %select{C|C++|Objective-C}1
%select{overloaded function|redeclaration of}0 %1 must have the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to pointer arguments
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
argument to 'section' attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
vector size too large
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported for this target
uuid attribute contains a malformed GUID
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|parameters|functions, methods and blocks|functions, methods, and classes|functions, methods, and parameters|classes|variables|methods|variables, functions and labels|fields and global variables|structs|variables, functions and tag types|thread-local variables|variables and fields|variables, data members and tag types|types and namespaces|Objective-C interfaces|methods and properties|struct or union|struct, union or class|types|Objective-C instance methods|init methods of interface or class extension declarations|variables, functions and classes|Objective-C protocols|functions and global variables|structs, unions, and typedefs|structs and typedefs|interface or protocol declarations}1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero vector size
%0 and %1 attributes are not compatible
'%select{auto|decltype(auto)}0' deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 cannot use list-initialization
new expression for type %0 requires a constructor argument
%select{'auto'|'decltype(auto)'}0 not allowed %select{in function prototype|in non-static struct member|in non-static union member|in non-static class member|in interface member|in exception declaration|in template parameter|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %0 with type %1 from parenthesized initializer list
declaration of variable %0 with type %1 requires an initializer
variable %0 declared with 'auto' type cannot appear in its own initializer
%select{const_cast||||C-style cast|functional-style cast}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast|}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast|}0 from scalar %1 to vector %2 of different size
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to vector %2 of different size
%0 is an incomplete type
%0 is not a class
%0 is not polymorphic
%0 is not a pointer
%0 is not a reference or pointer
%0 cannot be used as the type of a kernel parameter
.length() only allowed on arrays, but expression has type %0
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
trying to access member %0 from type %1
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
size of bit-field %0 (%1 bits) exceeds size of its type (%2 bits)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or pick a deployment target that supports them
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
definition of builtin function %0
builtin functions must be directly called
builtin call only valid in fragment shader
function-style cast to a builtin type can only take one argument
inconsistent types in builtin call
argument to __builtin_longjmp must be a constant 1
'%0' is only available in %1
%0 used in %1 shader, but only valid in %2 shader
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with incomplete type %1
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
case expression's type %0 does not match switch's init-expression's type %1
case value is not an integer constant expression
'case' statement not in switch statement
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot define %select{category|class extension}0 for undefined class %1
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
function with no prototype cannot use %0 calling convention
variadic function cannot use %0 calling convention
centroid interpolation invalid on %0 %1
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
%0 redeclared with '%1' access
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
operator only defined over scalar types
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function 'cudaConfigureCall' must have scalar return type
conflicting types for alias %0
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
statement not allowed in constexpr %select{function|constructor}0
no return statement in constexpr function
constexpr constructor must initialize all members
destructor cannot be marked constexpr
function try block not allowed in constexpr %select{function|constructor}0
variables defined in a constexpr %select{function|constructor}0 must be initialized
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared constexpr
non-literal type %0 cannot have constexpr members
constexpr can only be used in variable and function declarations
constexpr %select{function|constructor}1's %ordinal0 parameter type %2 is not a literal type
constexpr function's return type %0 is not a literal type
%select{non-constexpr declaration of %0 follows constexpr declaration|constexpr declaration of %0 follows non-constexpr declaration}1
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked constexpr
constexpr union constructor does not initialize any member
constexpr variable cannot have non-literal type %0
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
must use a typedef to declare a conversion to %0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
constructor does not initialize all elements
%select{constructor|destructor}1 %0 must not return void expression
alias definition is part of a cycle
GNU decimal type extension not supported
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype' cannot be used to name a declaration
cannot decrement expression of type bool
deduced non-type template argument does not have the same type as the its corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
default layout qualifiers only allowed on 'uniform'
non-global default layout declaration
'default' statement not in switch statement
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{<<ERROR>>|copy constructor|move constructor|copy assignment operator|move assignment operator|<<ERROR>>}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
nested name specifier for a declaration cannot depend on a template parameter
non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
designator in initializer for scalar type %0
designator into flexible array member subobject
destructor cannot be declared '%0'
expected the class name after '~' to name a destructor
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
destructor cannot be variadic
destructor cannot have any parameters
declaration of %0 has a different language linkage
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
'discard' is only available in fragment shaders
exception specifications are not allowed beyond a single level of indirection
use of type 'double' requires cl_khr_fp64 extension to be enabled
cannot cast %select{private|protected}2 base class %1 to %0
%select{destructor reference|pseudo-destructor expression}0 must be called immediately with '()'
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
definition with same mangled name as another definition
duplicate member %0
duplicate declaration of method %0
duplicate partial class declaration for class %0
property has a previous declaration
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
'enable_if' attribute expression never produces a constant expression
reference to %select{|scoped }0enumeration must use 'enum' not 'enum class'
non-integral type %0 is an invalid underlying type
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
the event_t type cannot be used to declare a program scope variable
the event_t type cannot be used to declare a structure or union field
exception specifications are not allowed in %select{typedefs|type aliases}0
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in char array initializer
expected a bool for the conditional expression
%0 is not a class%select{ or namespace|, namespace, or scoped enumeration}1
kernel must have void return type
expected l-value
parameter has unexpected type %0 (should be %1)
expected type %0
expected vector argument
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
%select{case value|enumerator value|non-type template argument|array size}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
control reaches end of non-void block
fallthrough annotation is outside switch statement
clang::fallthrough attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has incomplete type %0
data member instantiated with function type %0
field may not be qualified with an address space
filter expression type should be an integral value not %0
declaration of %0 overrides a '%select{final|sealed}1' function
first argument to 'va_arg' is of type %0 and not 'va_list'
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
'begin' and 'end' must return the same type (got %0 and %1)
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
range type %0 has '%select{begin|end}1' member but no '%select{end|begin}1' member
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
arrayed fragment shader outputs must be indexed with constant integral expressions
fragment shader outputs can only be float, integral, vectors, or arrays of these
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
non-precision qualifier on function return type
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
redeclaration of function with same parameter types must have matching qualifiers
function declared with return type %0, but returning type %1
cannot specialize a function %0 within class scope
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
no getter method for read from property
call to global function %0 not configured
global variable initializers must be constant expressions
illegal combination of types to builtin function
builtin function argument types must match; %0 vs %1
Different shader version than in the prelude
Different shader version profile than in the prelude
subscripted value is not an array, matrix, or vector
GLSL extension '%0' is unsupported
language feature '%0' not available in language version '%1'
goto into protected scope
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
integral constant expression must have integral or unscoped enumeration type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
identifier %0 in object destruction expression does not name a type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
array has incomplete element type %0
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot initialize object parameter of type %0 with an expression of type %1
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
cannot use defaulted default constructor of %0 within the class outside of member functions because %1 has an initializer
cannot use defaulted default constructor of %0 within %1 outside of member functions because %2 has an initializer
static const volatile data member must be initialized out of line
target exception specification is not superset of source
base class has incomplete type
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator}0 is not constexpr
exception specification of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 does not match the calculated one
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
%select{array|matrix|vector}0 indexed out of bounds; indexed with %1
indirect goto might cross protected scopes
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %0 from parenthesized initializer list
cannot initialize %select{a variable|a parameter|return object|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)}4
initializer element is not a compile-time constant
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
%select{|non-}0inline namespace cannot be reopened as %select{non-|}0inline
'inline' can only appear on functions
%0 shader %1 can only be integral values or vectors, float values or vectors, matrices, or arrays or structures of these
__int128 is not supported on this target
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
sampler types are invalid in interface blocks
integer literal with value %0 is to large to fit in a 32-bit uint
integer literal is to large to fit in a 32-bit uint
interpolated value containing integral type must be declared 'flat'
varying values cannot be integral
'flat' or 'smooth' cannot be used on fragment outputs
'flat' or 'smooth' can only occur at global scope
'flat' or 'smooth' qualifier only valid before 'in', 'out', 'centroid in' or 'centroid out'
'flat' or 'smooth' cannot be used on vertex inputs
must use a qualified name when declaring a %select{constructor|destructor|conversion operator}0 as a friend
invalid function argument type %0 (valid types are %1)
invalid use of a cast in a inline asm context requiring an l-value: remove the cast or build with -fheinous-gnu-extensions
invalid reinterpretation: sizes of %0 and %1 must match
interface type cannot inherit from %select{'struct|non-public 'interface|'class}0 %1'
invalid call to %0%1
collection element of type %0 is not an Objective-C object
%select{function parameter|typedef|non-static data member}0 cannot be constexpr
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
invalid kernel: %0
invalid kernel return type; valid types are 'vec2' and 'vec4' 
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{static |non-}0member function %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
'invariant' can only occur at global scope
'invariant' only applies to out variables
'invariant' only applies to variables
cannot declare invariant after use
property %0 not found on object of type %1; did you mean to access instance variable %2?
instance variables cannot be of reference type
kernel call to non-global function %0
kernel function type %0 must have void return type
invalid kernel parameter type; valid types are:
  'float', 'vec2', 'vec3', 'vec4', 'sampler
__sample
__color
kernels with samplers must return type 'vec4'
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
variable %0 with variably modified type cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
layout qualifier used on incompatible storage qualifier
layout qualifier on '%0' variables only allowed in %1 shader
struct definitions cannot be nested in interface blocks
layout qualifiers only valid on ins, outs, and uniforms
member declaration cannot have 'shared', 'packed', or 'std140' qualifiers
uniforms with layout qualifiers must be in a uniform block
GLSL doesn't support %0 literals
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
literal operator %0 must be in a namespace or global scope
parameter declaration for literal operator %0 is not valid
'__local' variable cannot have an initializer
location must be positive
location must be a constant integral expression
location %0 is out of range, highest supported location is %1
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
'main' must return void and take no parameters
%0 cannot be a template
std::initializer_list must be a class template with a single type parameter
matrix constructor with matrix argument may not have other arguments
control may reach end of non-void block
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
member function %0 not viable: 'this' argument has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
cannot assign to a value of type %0 with an expression of type %1
exception specification in declaration does not match previous declaration
cannot initialize a value of type %0 with an expression of type %1
inheritance model does not match %select{definition|previous declaration}0
operand types must match for ternary operator (%0 and %1)
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
string literal must be prefixed by '@' 
%select{|implicit default |inheriting }0constructor for %1 must explicitly initialize the %select{base class|member}2 %3 which does not have a default constructor
missing '[' at start of message send expression
C++ requires a type specifier for all declarations
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
import of C++ module '%0' appears within extern "C" language linkage specification
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
declaration of %0 must be imported from module '%1' before it is required
definition of %0 must be imported from module '%1' before it is required
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
import of module '%0' appears within same top-level module '%1'
'__leave' statement not in __try block
multiple initializations given for base %0
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
you need to include <typeinfo> before using the 'typeid' operator
%select{array|matrix|vector}0 indexed with negative value %1
function declaration only valid at global scope
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or scoped enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
nested redefinition of %0
struct declarations cannot be nested
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
allocation of incomplete type %0
no %select{getter|setter}0 defined for property %1
default precision statement not allowed on array-ed types
default precision statement not allowed on type %0
cannot use dynamic_cast with -fno-rtti
no 'main' present in shader
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expecting arguments
no precision qualifier given, and no default set
no suitable member %0 in %1
no template named %0; did you mean %1?
cannot use typeid with -fno-rtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
interface block must occur at global scope
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
declaration of non-local variable in 'for' loop
non-static declaration of %0 follows static declaration
non-thread-local declaration of %0 follows thread-local declaration
qualified name refers into a specialization of %select{function|variable}0 template %1
invalid layout qualifier on uniforms
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
missing return expression for non-void function
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
function declared '[[noreturn]]' after its first declaration
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
overriding method has mismatched ns_consumed attribute on its parameter
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword '%select{nonnull|nullable|null_unspecified}0' cannot be applied to multi-level pointer type %1
nullability specifier '%select{%select{__|}1nonnull|%select{__|}1nullable|%select{__|}1null_unspecified}0' cannot be applied to non-pointer type %2
too %select{few|many}0 arguments, expecting %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
cannot use '%0' with Objective-C exceptions disabled
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
literal construction method %0 has incompatible signature
indexing expression is invalid because subscript type %0 has multiple type conversion functions
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
can't catch an Objective-C object by value
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
no protocol named %0: did you mean %1?
objc_root_class attribute may only be specified on a root class declaration
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
type argument %0 does not satisfy the bound (%1) of type parameter %2
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
redeclaration of type parameter %0
cannot declare variable inside @interface or @protocol
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
a variable cannot appear in more than one aligned clause
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an l-value expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both l-value expressions with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both l-value expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause
the statement for 'atomic%select{| update}0' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is an l-value expression with scalar type
arguments of OpenMP clause 'reduction' with bitwise operators cannot be of floating type
arguments of OpenMP clause 'reduction' for 'min' or 'max' must be of %select{scalar|arithmetic}0 type
arguments of OpenMP clause '%0' cannot be of reference type %1
const-qualified variable cannot be %0
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
expression has incomplete class type %0
a lastprivate variable with incomplete type %0
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', or '>=') of loop variable %0
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop must be of the form 'var = init' or 'T var = init'
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
argument to '%0' clause must be a positive integer value
variable %0 must have explicitly specified data sharing attributes
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
variable can appear only once in OpenMP '%0' clause
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region
variable of type %0 is not valid for specified reduction operation
reduction variables may not be accessed in an explicit task
a reduction variable with incomplete type %0
argument of OpenMP clause 'reduction' must reference the same object in all threads
a reduction variable with array type %0
arguments of '#pragma omp %0' cannot be of reference type %1
%0 variable must be %1
%0 variable must have an accessible, unambiguous %select{default constructor|copy constructor|copy assignment operator|'%2'|destructor}1
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
'%0' statement cannot be used in OpenMP simd region
predetermined as a firstprivate in a task construct variable cannot be of reference type %0
predetermined as a firstprivate in a task construct variable must have an accessible, unambiguous %select{copy constructor|destructor}0
threadprivate variable with incomplete type %0
expected %0 in OpenMP clause '%1'
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max'
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is thread-local
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be %1
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
layout qualifier only valid on uniforms
bitfields are not supported in OpenCL
casting to type %0 is not allowed
variable in constant address space must be initialized
pointers to functions are not allowed
global variables must have a constant address space qualifier
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 is not allowed
declaring function parameter of type %0 is not allowed; did you forget * ?
declaring function return value of type %0 is not allowed; did you forget * ?
attribute %0 can only be applied to a kernel function
%select{function|kernel}0 cannot be called 'main'
kernel parameter cannot be declared as a pointer to the __private address space
kernel parameter cannot be declared as a pointer to a pointer
return value cannot be qualified with address space
invalid application of '%select{sizeof|alignof|vec_step}0' to a void type
taking address of function is not allowed
variable length arrays are not supported in OpenCL
variable length arrays are not supported in GLSL
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to %select{unavailable|deleted}0 function %1%2
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 uses deleted function
call to %select{unavailable|deleted}0 constructor of %1
call to %select{unavailable|deleted}0 member function %1%2
call to %select{unavailable|deleted}0 function call operator in type %1%2
overload resolution selected %select{unavailable|deleted}0 operator '%1'%2
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
static and non-static member functions with the same parameter types cannot be overloaded
reference to overloaded function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
const cannot be used with 'out' or 'inout' parameters
argument may not have 'void' type
parameter name omitted
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
attempting to define an ordinary class for partial class %0
partial class and its complete definition must have same super class
attempting to implement %select{|category of}0 partial class %1
attempting to implement class %0 with an undefined superclass
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
%select{incompatible|duplicate}0 directives '%1' and '%2'
expected a for, while, or do-while loop to follow '%0'
%select{optimize|debug}0 pragma inside function
mac68k alignment pragma is not supported on this target
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
precision qualifiers only valid on sample, integral or floating point types
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 has a variably modified type
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
property cannot have array or function type %0
protocol has circular dependency
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
no function named %0 with type %1 was found in the specified scope
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
only unqualified or 'const' qualifier variables can have initializers
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
call is recursive:%0
trying to recursively use %0 as superclass of %1
redeclaration of built-in function %0
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of built-in %0
redefinition of enumerator %0
redefinition of function with same parameter types
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in %select{__device__|__global__|__host__|__host__ __device__}2 function
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding of reference %diff{to type $ to a value of type $ drops qualifiers|drops qualifiers}0,1
reference %diff{to type $ could not bind to an %select{rvalue|lvalue}1 of type $|could not bind to %select{rvalue|lvalue}1 of incompatible type}0,2
reference to type %0 cannot bind to an initializer list
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
reference to local variable %0 declared in enclosing block literal
reference to local variable %0 declared in enclosing context
reference to local variable %0 declared in enclosing function %1
reference to local variable %0 declared in enclosing lambda expression
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
'%0' requires sampler type '%1'
reserved name %0
cannot subclass a class with objc_subclassing_restricted attribute
returning block that lives on the local stack
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
%select{void function|void method|constructor|destructor}1 %0 must not return a value
function declared with the ns_returns_retained attribute was previously declared without the ns_returns_retained attribute
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler array must be indexed with a constant expression
samplers only allowed for uniforms and function parameters
samplers must be 'in' parameters
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant l-value expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
value of type %0 may only be shifted by a scalar (int, uint); but expression has type %1
value of type %0 may only be shifted by a vector with same size; but expression has type %1
index for __builtin_shufflevector must be less than the total number of vector elements
first two arguments to __builtin_shufflevector must have the same type
first two arguments to __builtin_shufflevector must be vectors
index for __builtin_shufflevector must be a constant integer
invalid application of '%select{sizeof|alignof}0' to bit-field
invalid application of '%select{sizeof|alignof|vec_step}0' to a function type
invalid application of '%select{sizeof|alignof|vec_step}0' to an incomplete type %1
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed%select{ %1|}0
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous struct
static data member %0 not allowed in local class %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
statement expression not allowed at file scope
static data member definition cannot specify a storage class
local variabes are only permitted to use the 'const' qualifier
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
struct referenced directly; did you mean to provide a variable?
subscript of pointer to function type %0
subscript of pointer to incomplete type %0
subscript requires size of interface %0, which is not constant for this architecture and platform
expected statement between last 'case' or 'default' statement and end of switch
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
switch case is in protected scope
multiple conversions from switch condition type %0 to an integral or enumeration type
switch body must start with 'case' or 'default' statement
switch condition must be a scalar integer
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
implicit declaration introduced by elaborated type conflicts with %select{a declaration|a typedef|a type alias|a template}0 of the same name
elaborated type refers to %select{a non-tag type|a typedef|a type alias|a template|a type alias template}0
friend type templates must use an elaborated type
ambiguous constructor call when %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
non-type template argument refers to non-static data member %0
%select{too few|too many}0 template arguments for %select{class template|function template|template template parameter|template}1 %2
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
template argument does not refer to a class template or template template parameter
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
cannot refer to %select{class|variable}0 template %1 without a template argument list
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0 following the 'template' keyword does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of class template %0 requires template arguments
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
explicit specialization of %0 in class scope
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in namespace %2
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in the global scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in a namespace enclosing %2
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition of %0 after alias definition
tentative definition has type %0 that is never completed
texture intrinsic with 'sampler2DArrayShadow' cannot take bias argument
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be explicitly captured when the capture default is '='
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
only one element declaration is allowed
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 cannot be defined in a type alias template
types may not be defined in conditions
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
address of %select{bit-field|vector element|property expression|register variable}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to an incomplete type %0
fast enumeration variables can't be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
read-only variable is not assignable
value of type %0 is not contextually convertible to 'bool'
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where arithmetic or pointer type is required
used type %0 where arithmetic, pointer, or vector type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
variable has incomplete type %0
support for type '__float128' is not yet implemented
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
operand of type %0 where arithmetic or pointer type is required
expression is not assignable
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; maybe you meant to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%diff{ from $ to $|}0,1
no viable conversion%diff{ from $ to incomplete type $|}0,1
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
invalid argument type %0 to unary expression
can't convert between vector values of different size (%0 and %1)
can't convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
unsupported: typedef changes linkage of anonymous type, but linkage was already computed
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable: %1
function reference; did you mean to call it?
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
use of undeclared label %0
NSArray must be available to use Objective-C array literals
NSDictionary must be available to use Objective-C dictionary literals
NSNumber must be available to use Objective-C literals
cannot box a string value because NSString has not been declared
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains an unexpanded parameter pack
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains unexpanded parameter pack %1
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains unexpanded parameter packs %1 and %2
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains unexpanded parameter packs %1, %2, ...
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
invalid storage qualifier inside uniform block
initializer on uniform variable
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 can't use copy assignment operator
%select{|implicit default |inheriting }0constructor for %1 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unkown type or function name %0; did you mean %1?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
array size unspecified
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to namespace
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
cannot inherit constructor, already inherited constructor with the same signature
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using decl
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
'va_start' used in function with fixed args
array types cannot be value-initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'vec_step' requires built-in scalar or vector type, %0 invalid
no more than 4 vector components can be selected; %0 were selected
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
builtin '%0' not available in language version '%1'
vertex shader inputs can only be float, matrices, integral, or vectors
'virtual' cannot be specified on member function templates
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length array of non-POD element type %0
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
return statements from void functions cannot have a return argument
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
sampler type cannot be used with the __local and __global address space qualifiers
array length must be greater than 0
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
property implementation must have its declaration in the category %0
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0
cannot find suitable %select{getter|setter}0 for property %1
property declared in category %0 cannot be implemented in class implementation
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
synthesized properties %0 and %1 both claim instance variable %2
dynamic property cannot have instance variable specification
instance variable %0 cannot be accessed because 'self' has been redeclared
property %0 attempting to use instance variable %1 declared in super class %2
instance variable %0 accessed in class method
%select{instance|class}1 method %0 not found ; did you mean %2?
missing context for method declaration
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
no @interface declaration found in class messaging of %0
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
instance variable %0 is private
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 is already implemented
type of property %0 (%1) does not match type of instance variable %2 (%3)
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
instance variable %0 is protected
assigning to 'readonly' return result of an Objective-C message not allowed
property of reference type is not supported
@throw (rethrow) used outside of a @catch block
%0 cannot use 'super' because it is a root class
existing instance variable %1 for strong property %0 may not be __weak
@synthesize not allowed in a category's implementation
@synthesize of 'weak' property is only allowed in ARC or GC mode
existing instance variable %1 for __weak property %0 must be __weak
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
multiple return statements in constexpr function is a C++14 extension
constexpr %select{function|constructor}0 never produces a constant expression
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
explicit conversion functions are a C++11 extension
explicit instantiation of %0 that occurs after an explicit specialization will be ignored (C++11 extension)
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of identifier %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
explicit specialization of %0 within class scope is a Microsoft extension
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in C99
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
initialized lambda captures are a C++14 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
ISO C does not support '~' for complex conjugation of %0
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around scalar initializer
declaration specifier missing, defaulting to 'int'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
anonymous %select{structs|unions}0 are a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
lookup of %0 in member access expression is ambiguous; using member of %1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
using extended field designator is an extension
offset of on non-POD type %0
offset of on non-standard-layout type %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
redefinition of typedef %0 is a C11 feature
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
'%0' is not permitted on a declaration of a type
static_assert with no message is a C++1z extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
default template arguments for a function template are a C++11 extension
first declaration of %select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is a C++11 extension
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
comparison of distinct pointer types (%0 and %1) uses non-standard composite pointer type %2
incompatible operand types (%0 and %1)
incompatible operand types%diff{ ($ and $)|}0,1 use non-standard composite pointer type %2
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
type conversion function declared here
conformance of forward class %0 to protocol %1 can not be confirmed
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add an explicit initializer to initialize %0
add a pair of parentheses to declare a variable
declared with %0 attribute here
lookup in the object type %0 refers here
lookup from the current scope refers here
candidate found by name lookup is %q0
member found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
assign the value to a strong variable to keep the object alive during use
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
array %0 declared here
conversion to %select{integral|enumeration}0 type %1 declared here
use constraint modifier "%0"
type %0 is incomplete
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
attribute is here
previous overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
maybe you meant to use __block %0
builtin variant has type %0, given argument here
this argument has type %0, but should be one of %1 or %2
%0 declared here
callee declares array parameter as static here
constructor cannot be inherited
declaration missing '[[carries_dependency]]' attribute is here
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
compatible type %0 specified here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
previous return statement is here
member not initialized by constructor
virtual base class declared here
constructor declared here
use 'static' to give inline function %0 internal linkage
this declaration is not a prototype; add 'void' to make it a prototype for a zero-parameter function
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
%0 defined here
conversion to pointer type %0
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
default constructor of %0 is implicitly deleted because all %select{data members|data members of an anonymous union member}1 are const-qualified
default constructor of %0 is implicitly deleted because field %1 of %select{reference|const-qualified}3 type %2 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 of %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0|destructor}5%select{||s||}4
template parameter is used in default argument declared here
must qualify identifier to find this declaration in dependent base class
type %0 is declared here
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
place parentheses around comparison expression to evaluate it first
use '%0' instead
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of retaining variable
jump exits @synchronized block
jump exits @try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit instantiation candidate function template here %0
explicit instantiation definition is here
explicit instantiation refers here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
final overrider of %q0 in %1
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
did you mean to use '%0'?
format string is defined here
forward declaration of class here
found near match '%0'
return type declared here
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template matches specialization %0
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
Previous shader version specified here
Guarded_by declared here.
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}2 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3)}1
type declaration hidden
declaration hides type
field of illegal %select{type|pointer type}0 %1 declared here
%select{class|category}0 implementation is declared here
when implemented by class %0
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
add 'constexpr'
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1|field %1}0 with omitted initializer
include the header <%0> or explicitly provide a declaration for '%1'
possible target of indirect goto
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
inheriting constructor for %0 first required here
deleted constructor was inherited here
insert an explicit cast to silence this issue
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
lambda expression begins here
implicit capture of lambda object due to conversion to block pointer here
default %select{declared here|is 'layout(shared, column_major)'}0
this qualifier is now shadowed
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the comparison first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
'->' applied to return value of the operator->() declared here
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 for %1 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
extern "C" language linkage specification begins here
%0 begins here
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
non-const expression is used here
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-templated declaration is here
because it has a default argument
because type %0 has a virtual %select{member function|base class}1
because field %0 has an initializer
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
declaration missing '[[noreturn]]' attribute is here
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
use nullability type specifier '%select{__nonnull|__nullable|__null_unspecified}0' to affect the innermost pointer type of %1
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
'%0' clause used here
as specified in 'collapse' clause
defined as %0
implicitly determined as %0
loop step is expected to be %select{negative|positive}0 due to this condition
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous 'critical' region starts here
previously referenced here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
overridden method is here
overridden virtual function is here
built-in candidate %0
candidate %select{function|function|constructor|function |function |constructor |is the implicit default constructor|is the implicit copy constructor|is the implicit move constructor|is the implicit copy assignment operator|is the implicit move assignment operator|is an inherited constructor}0%1%select{| has different class%diff{ (expected $ but has $)|}3,4| has different number of parameters (expected %3 but has %4)| has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}4,5| has different return type%diff{ ($ expected but has $)|}3,4| has different qualifiers (expected %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3 but found %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4)}2
candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0 %select{|template }1not viable: requires%select{ at least| at most|}2 %3 argument%s3, but %4 %plural{1:was|:were}4 provided
candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0 %select{|template }1not viable: %select{requires at least|allows at most single|requires single}2 argument %3, but %plural{0:no|:%4}4 arguments were provided
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) is in address space %3, but parameter must be in address space %4
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4 under ARC
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot %select{convert from|convert from|bind}2 %select{base class pointer|superclass|base class object of type}2 %3 to %select{derived class pointer|subclass|derived class reference}2 %4 for %ordinal5 argument
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}6
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}2,3
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %ordinal4 argument (%2) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3 qualifier%select{||s||s|s|s}3
candidate %select{|function|||function|||||function (the implicit copy assignment operator)|function (the implicit move assignment operator)|}0 not viable: 'this' argument has type %2, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}3
candidate template ignored: failed template argument deduction
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__weak|__strong}3 ownership, but parameter has %select{no|__weak|__strong}4 ownership
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot convert initializer list argument to %3
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: expects an l-value for %select{%ordinal3 argument|object argument}2
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: no overload of %3 matching %2 for %ordinal4 argument
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}3 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0 not viable: call to %select{__device__|__global__|__host__|__host__ __device__}1 function from %select{__device__|__global__|__host__|__host__ __device__}2 function
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}2
candidate template ignored: disabled by %0%1
candidate disabled: %0
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate template ignored: couldn't resolve reference to overloaded function %0
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced conflicting %select{types|values|templates}0 for parameter %1%diff{ ($ vs. $)|}2,3
inherited from here
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: can't deduce a type for %0 which would make %2 equal %1
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
during template argument deduction for class template partial specialization %0 %1
partial specialization matches %0
non-deducible template parameter %0
possible target for call
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
for type %0
previous explicit instantiation is here
previous initialization %select{|with side effects }0is here%select{| (side effects may not occur at run time)}0
previous inheritance model specified here
previous template specialization is here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
property %0 is declared %select{deprecated|unavailable}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump bypasses initialization of @finally block
jump bypasses initialization of retaining variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
it could also be property of type %0 declared here
unimplemented pure virtual method %0 in %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
%select{reference|pointer}0 member declared here
member with reference subobject declared here
binding reference variable %0 here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
use function '%0' instead
%select{function|method|block}0 has been explicitly marked sentinel here
attempt to specialize declaration here
explicitly specialized declaration is here
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
conversion to %select{integral|enumeration}0 type %1
for switch statement starting here
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
in instantiation of member class %0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
Thread warning in function '%0'
%select{alignment|size}0 of first field is %1 bits
did you mean to use '.' instead?
use a tag name here to establish linkage prior to definition
referenced member %0 is declared here
'uniform' or '' valid
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
variable %0 is declared here
%select{uninitialized use occurs|variable is captured by block}0 here
silence by adding parentheses to mark code as explicitly dead
use 'thread_local' to allow this
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference}0 instead
conflicting declaration
conflicting constructor
previous constructor
previously inherited here
constructor declared with ellipsis here
target of using declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
vector component select is not an l-value due to duplicate components
%0 %select{field|fields}1 initialized here
%0 %select{field|fields}1 needs initialization
which delegates to
detected while default synthesizing properties in class implementation
within field of type %0 declared here
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
alias will always resolve to %0 even if weak definition of alias %1 is overridden
alias will not be in section '%0' but in the same section as the aliasee
size of anonymous bit-field (%0 bits) exceeds size of its type; value will be truncated to %1 bits
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
the argument to __assume has side effects that will be discarded
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
consumed analysis attribute is attached to member of class '%0' which isn't marked as consumable
attribute %0 after definition is ignored
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template %select{without dll attribute|with different dll attribute}1 is not supported
definition of dllimport static field
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored for field of type %1
'%0' attribute cannot be specified on a definition
'malloc' attribute only applies to functions returning a pointer type
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 only applies to variables with static storage duration and functions
%0 attribute only applies to return values that are pointers
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
binding reference member %0 to stack allocated parameter %1
binding reference %select{|subobject of }1member %0 to a temporary value
size of bit-field %0 (%1 bits) exceeds the size of its type; value will be truncated to %2 bits
'&' within '|'
switch condition has boolean value
braces around scalar initializer
'break' is bound to loop, GCC binds it to switch
previous versions of Clang incorrectly interpreted vfmX_lane(a,b,c,i) as a + b[i]*c. Future releases of Clang will fix this unconditionally. Current behaviour is controlled by the USE_CORRECT_VFMA_INTRINSICS macro, which should be defined before including arm_neon.h. Leaving this undefined will retain the old behaviour with this warning; setting it to 0 will silence this warning but retain the old behaviour; setting it to 1 will emit compliant code.
use of unknown builtin %0
call to pure virtual member function %0; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
nonnull parameter '%0' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
category is implementing a method which will also be implemented by its primary class
calling convention %0 ignored for this target
%0 calling convention ignored on variadic function
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
collection expression type %0 may not respond to %1
%select{self-|array }0comparison always evaluates to %select{false|true|a constant}1
bitwise comparison always evaluates to %select{false|true}0
comparison of two values with different enumeration types%diff{ ($ and $)|}0,1
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
static_assert with no message is incompatible with C++ standards before C++1z
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
explicit instantiation of %0 that occurs after an explicit specialization is incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
goto would jump into protected scope in C++98
indirect goto might cross protected scopes in C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
switch case would be in a protected scope in C++98
%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce MSVC-compatible layouts for classes with base classes or virtual functions
array backing the initializer list will be destroyed at the end of %select{the full-expression|the constructor}0
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2}1
attribute %0 is ignored, place it after "%select{class|struct|union|interface|enum}1" to apply attribute to type declaration
enumeration value %0 not explicitly handled in switch
enumeration values %0 and %1 not explicitly handled in switch
enumeration values %0, %1, and %2 not explicitly handled in switch
%0 enumeration values not explicitly handled in switch: %1, %2, %3...
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
constructor for %0 creates a delegation cycle
delete called on %0 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as delete[]
deleting pointer to incomplete type %0 may cause undefined behavior
delete called on %0 that has virtual functions but non-virtual destructor
%0 is deprecated
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared %select{copy %select{assignment operator|constructor}1|destructor}2
Implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 is deprecated: %1
conversion from string literal to %0 is deprecated
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
division by zero is undefined
double precision constant requires cl_khr_fp64, casting to single precision
acquiring %0 '%1' that is already held
duplicate definition of category %1 on interface %0
attribute %0 is already applied with different parameters
attribute %0 is already applied
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
dynamic exception specifications are deprecated
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
'extern' variable has an initializer
control reaches end of non-void function
control reaches end of non-void lambda
function declared 'noreturn' should not return
fallthrough annotation does not directly precede switch label
fallthrough annotation in unreachable code
field %0 is uninitialized when used here
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
format specifies type %0 but the argument has %select{type|underlying type}2 %1
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
redefinition of forward class %0 of a typedef name of an object type is ignored
cannot call function '%1' while %0 '%2' is held
calling function '%1' requires holding %0 %select{'%2'|'%2' exclusively}3
function definition inside an Objective-C container is deprecated
Objective-C GC does not allow weak variables on the stack
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
size of static array must be an integer constant expression
implicit truncation from %2 to bitfield changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion turns floating-point number into bool: %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of NULL constant to %0
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
incrementing expression of type bool is deprecated
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of parameter %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer overrides prior initialization of this subobject
inline namespace cannot be reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
invalid use of a cast in an inline asm context requiring an l-value: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid capability name '%0'; capability name must be 'mutex' or 'role'
invalid constructor form class in system header, should not be explicit
variable already declared invariant
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
overwriting previously declared layout qualifier
layout qualifier meaningless for non-%0
layout qualifier redundant with default
precision loss on literal
overwriting previously specified location
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this comparison
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
comparison of unsigned%select{| enum}2 expression %0 is always %1
only one parameter on 'main' declaration
control may reach end of non-void function
control may reach end of non-void lambda
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
%0 will always overflow destination buffer
size argument in %0 call is a comparison
availability does not match previous declaration
overriding method %select{introduced after|deprecated before|obsoleted before}0 overridden method on %1 (%2 vs. %3)
overriding method cannot be unavailable on %0 when its overridden method is available
section does not match previous declaration
suggest braces around initialization of subobject
enumeration value %0 not handled in switch
enumeration values %0 and %1 not handled in switch
enumeration values %0, %1, and %2 not handled in switch
no case matching constant switch condition '%0'
%0 enumeration values not handled in switch: %1, %2, %3...
%0 is missing exception specification '%1'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comparison of integers of different signs: %0 and %1
modulus with negative numbers is undefined
multiple methods named %0 found
vector initializers are not compatible with NEON intrinsics in big endian mode
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
%0 '%1' is still held at the end of function
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
comparison of nonnull parameter '%0' %select{not |}1equal to a null pointer is %select{true|false}1 on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
%0 attribute only applies to %select{Objective-C object|pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
'NSObject' attribute may be put on a typedef only; attribute is ignored
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier '%select{__nonnull|__nullable|__null_unspecified}0' cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (__nonnull or __nullable)
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for non-GC object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
use of old-style cast
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
class implementation may not have super class
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %select{false|true}4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has lower precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%select{|s}4 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%select{|s}4 to align %5
padding size of %0 with %1 %select{byte|bit}2%select{|s}3 to alignment boundary
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 no data and %2 %plural{1:has|:have}2 mismatched data that will be ignored
no profile data available for file "%0"
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
property type %0 is incompatible with type %1 inherited from %2
property of type %0 was selected for synthesis
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer decremented by %0 refers before the beginning of the array
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
weak %select{receiver|property|implicit property}0 may be unpredictably set to nil
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
remainder by zero is undefined
returning address of label, which is local
returning address of local temporary object
returning reference to local temporary object
address of stack memory associated with local variable %0 returned
reference to stack memory associated with local variable %0 returned
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
instance method %0 is being used on 'Class' which is not in the root class
comparison of %0 unsigned%select{| enum}2 expression is always %1
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second parameter of 'va_start' not last named argument
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
shift count >= width of type
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; contains %0 elements, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use strncmp instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1
subtraction of pointers to type %0 of zero size has undefined behavior
subobject initialization overrides initialization of other fields within its enclosing subobject
array subscript is of type 'char'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
overlapping comparisons always evaluate to %select{false|true}0
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
pointer is initialized by a temporary array, which will be destroyed at the end of the full-expression
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability("mutex")' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
Thread safety beta warning.
Thread safety verbose warning.
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
qualifier on function type %0 has unspecified behavior
'%0' qualifier on reference type %1 has no effect
'static' has no effect on zero-length arrays
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is uninitialized when captured by block
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
unknown attribute %0 ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
packed attribute is unnecessary for %0
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
code will never be executed
'break' will never be executed
default label in switch which covers all enumeration values
loop will run at most once (loop increment never executed)
'return' will never be executed
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
ignoring return value of function declared with %0 attribute
%select{%select{|in}1equality|relational}0 comparison result unused
unused variable %0
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
ignoring return value of function declared with warn_unused_result attribute
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
expression result would be unused in standard C++98; please switch to C++11 mode or assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
use of out-of-scope declaration of %0
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
inheriting constructor does not inherit ellipsis
using namespace directive in global context in header
'va_start' has undefined behavior with reference types
%select{reading|writing}1 the value pointed to by '%0' requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by '%1' requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}1 variable '%0' requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable '%1' requires holding %0 %select{'%2'|'%2' exclusively}3
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
variable length array used
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
several methods with selector %0 of mismatched types are found for the @selector expression
cannot open uniform specialization file '%0'
fosl requires an action; defaulting to '-parse'
code completion requested but no position specified
code-complete-pos line and column should start from 1
incorrect code-complete-pos format, it should be '<line>:<column>'
redundant action '%0' provided; prior action will be ignored
no input file specified
non-void function should return a value
Error(s) occurred while parsing YAML file '%0'
long double is an invalid floating-point constant type
redeclaration of %0 in current scope
Multiple specializations specified for uniform '%0'
Declaration of uniform '%0' has a different type than the specialization
cannot specialize uniform '%0' because it was not declared in the shader
extraneous 'struct' keyword when referring to existing struct %0
Invalid number of columns '%0' specified for uniform '%1' in YAML file '%2'; numCols must be 2, 3, or 4.
The number of elements specified for uniform '%0' in YAML file '%1' does not match the number of columns and rows
Invalid type '%0' specified for uniform '%1' in YAML file '%2'
Invalid matrix type '%0' specified for uniform '%1' in YAML file '%2'; only float and double matrices are supported
cruft-compatibility: erasing const for variable with non-const expr initializer
magnitude of floating-point constant too large for type float; maximum is %0; Converting to %1
magnitude of floating-point constant too small for type float; minimum is %0; Converting to %1
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
atch
hort
hrow
hile
ctive
uffer
ommon
lete
uble
lter
iend
nline
ernel
ayout
utput
ublic
eturn
mple
ooth
perp
itch
tomic
nt64
able
lign
fault
scard
mage
diump
table
ullptr
rivate
ypedef
niform
rying
rtual
char_t
omplex
eneric
ridge
unc__
lobal
t128
_pod
ascal
ample
hread
uidof
ector
ntroid
erent
tinue
ecltype
xplicit
xcept
perator
donly
ister
urce
rict
mplate
pename
c_step
latile
oreturn
lignof
inally
abel__
onnull
bjc_no
mpler
dcall
ttribute
onstexpr
erface
ariant
amespace
rtition
cision
tected
ampler
riteonly
ecimal
maginary
onstant
eclspec
astcall
rray
mpty
inal
nion
ullable
bjc_yes
hiscall
onst_cast
ubroutine
ecimal128
UNCSIG__
_exists
terface
bject
alar
aled
gned
ead_only
naligned
tomic_uint
DRect
atic_cast
UNCTION__
rray_rank
ase_of
iteral
ointer
rivial
ead_write
rite_only
ynamic_cast
DArray
hread_local
UNCDNAME__
ttribute__
xtension__
orceinline
bstract
ompound
unction
ntegral
nsigned
olatile
DShadow
operspective
atic_assert
tatic_assert
rray_extent
s_reference
DMSArray
ubeArray
ridge_retain
_not_exists
_arithmetic
uiltin_
stype
a_arg
onvertible
undamental
value_expr
olymorphic
einterpret_cast
ridge_
etained
ransfer
s_destructible
nderlying_type
amplerCubeShadow
uiltin_offsetof
othrow_copy
rivial_copy
s_co
plete_type
structible
odule_private__
ull_unspecified
rivate_extern__
DArrayShadow
RETTY_FUNCTION__
onvertible_to
loating_point
ember_pointer
ampler2DRectShadow
othrow_assign
rivial_assign
nterface_class
tandard_layout
ingle_inheritance
uiltin_choose_expr
value_reference
irtual_inheritance
_multiple_inheritance
amplerCubeArrayShadow
uiltin_convertvector
othrow_assignable
rivially_copyable
__has_
rivial_destructor
irtual_destructor
othrow_
onstructor
ove_assign
rivial_
othrow_destructible
rivially_assignable
__is_
ember_object_pointer
othrow_constructible
uiltin_types_compatible_p
ember_function_pointer
rivially_constructible
and_eq
bitand
bitor
compl
not_eq
or_eq
xor_eq
__is_literal_type
global
local
constant
read_only
write_only
read_write
__fp16
__alignof__
__asm
__asm__
__complex
__complex__
__const
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__int8
__int16
__int32
__wchar_t
_asm
_alignof
__builtin_alignof
_cdecl
_fastcall
_stdcall
_thiscall
_uuidof
_inline
_declspec
_pascal
__char16_t
__char32_t
not_keyword
compatibility_alias
defs
encode
implementation
protocol
selector
finally
synchronized
autoreleasepool
property
package
required
optional
synthesize
dynamic
partial_interface
defined
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
<null selector>
autorelease
dealloc
finalize
release
retain
retainCount
self
initialize
performSelector
alloc
copy
init
mutableCopy
array
dictionary
standard
appendFormat
initWithFormat
localizedStringWithFormat
stringByAppendingFormat
stringWithFormat
new[]
delete[]
framework 
explicit 
module 
 [system]
 [extern_c]
requires 
umbrella header "
umbrella "
config_macros 
[exhaustive]
header "
exclude header "
private header "
export 
use 
link 
conflict 
module * {
export *
altivec
cplusplus
cplusplus11
objc
opencl
 <Spelling=
<<<MISSING SOURCE FILE>>>
<invalid>
UTF-16 (BE)
UTF-16 (LE)
UTF-32 (BE)
UTF-32 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SDSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<invalid loc>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
mcount
signed char
unsigned char
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
memory
microsoft
code_completion
cxx_defaultarg_end
comment
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
angle_string_literal
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plus
plusplus
plusequal
minus
arrow
minusminus
minusequal
tilde
exclaim
exclaimequal
slash
slashequal
percent
percentequal
less
lessless
lessequal
lesslessequal
greater
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipe
pipepipe
pipeequal
question
colon
semi
equalequal
comma
hash
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
caretcaret
annot_cxxscope
annot_typename
annot_template_id
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_ms_pointers_to_members
annot_pragma_ms_vtordisp
annot_pragma_ms_pragma
annot_pragma_opencl_extension
annot_pragma_openmp
annot_pragma_openmp_end
annot_pragma_loop_hint
annot_module_include
annot_module_begin
annot_module_end
annot_glsl_pragma_begin
annot_glsl_pragma_end
annot_glsl_version
annot_glsl_extension
annot_glsl_prelude_end
expected root node
expected mapping node
case-sensitive
use-external-names
roots
expected array
expected integer
invalid version number
version mismatch, expected 0
expected string
unknown key
duplicate key '
expected mapping node for file or directory entry
contents
external-contents
use-external-name
file
directory
unknown value for 'type'
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
'use-external-name' is not supported for directories
expected boolean value
missing key '
  'version': 0,
  'case-sensitive': '
  'roots': [
'type': 'directory',
'name': "
'contents': [
'type': 'file',
'external-contents': "
coordinate-transform
sample-with-transform
transform
image
_pos_
_writeLoc
Filter DAG:
// An error occurred, see stderr for the error message
Node: 
  image: 
  printed: 
  constant: 
  value: 
  <transform>
  uniform: 
  <coordinate transform>
  <sample with transform>
  original source: 
  printed AST: 
  children:
  new position: 
  continuation: 
  position use <_dc>
End Filter Node
kernel-pool
destCoord
samplerCoord
sampleImage
samplerTransform
rgba32f
rgba16f
rg32f
rg16f
r11f_g11f_b10f
r32f
r16f
rgba16
rgb10_a2
rgba8
rg16
rgba16_snorm
rgba8_snorm
rg16_snorm
rg8_snorm
r16_snorm
r8_snorm
rgba32i
rgba16i
rgba8i
rg32i
rg16i
rg8i
r32i
r16i
rgba32ui
rgba16ui
rgb10_a2ui
rgba8ui
rg32ui
rg16ui
rg8ui
r32ui
r16ui
r8ui
location
binding
triangles
quads
isolines
equal_spacing
fractional_even_spacing
fractional_odd_spacing
point_mode
points
lines
lines_adjacency
triangles_adjacency
invocations
origin_upper_left
pixel_center_integer
early_fragment_tests
local_size_x
local_size_y
local_size_z
depthAny
depth_greater
depthLess
depth_unchanged
index
vertices
line_strip
triangle_strip
max_vertices
stream
offset
char constants
string literals
'sizeof'
'unsigned'
'uint'
rgba
length()
optimize
debug
STDGL
extension name
extension behavior
do/while
'case'
'default'
auto
case
char
const
default
double
else
enum
extern
goto
inline
long
register
restrict
short
signed
sizeof
static
switch
typedef
union
unsigned
volatile
while
_Alignas
_Alignof
_Atomic
_Bool
_Complex
_Generic
_Imaginary
_Noreturn
_Static_assert
_Thread_local
__func__
__objc_yes
__objc_no
catch
class
const_cast
delete
dynamic_cast
explicit
export
friend
mutable
namespace
operator
private
protected
public
reinterpret_cast
static_cast
template
this
throw
typename
typeid
using
virtual
wchar_t
alignas
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
_Decimal32
_Decimal64
_Decimal128
__null
__alignof
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__imag
__int128
__label__
__real
__thread
__FUNCTION__
__PRETTY_FUNCTION__
typeof
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
__is_interface_class
__is_sealed
__is_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__has_nothrow_assign
__has_nothrow_move_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_move_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_move_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_trivial
__is_union
__is_trivially_constructible
__is_trivially_copyable
__is_trivially_assignable
__underlying_type
__is_lvalue_expr
__is_rvalue_expr
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_standard_layout
__is_signed
__is_unsigned
__is_same
__is_convertible
__array_rank
__array_extent
__private_extern__
__module_private__
__declspec
__cdecl
__stdcall
__fastcall
__thiscall
__forceinline
__unaligned
__global
__local
__constant
__private
__kernel
__read_only
__write_only
__read_write
__builtin_astype
vec_step
__pascal
__vector
__pixel
half
__bridge
__bridge_transfer
__bridge_retained
__bridge_retain
__nonnull
__nullable
__null_unspecified
__ptr64
__ptr32
__sptr
__uptr
__w64
__uuidof
__try
__finally
__leave
__int64
__if_exists
__if_not_exists
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__interface
__builtin_convertvector
active
atomic_uint
attribute
bvec2
bvec3
bvec4
buffer
cast
centroid
coherent
common
dmat2
dmat2x2
dmat2x3
dmat2x4
dmat3
dmat3x2
dmat3x3
dmat3x4
dmat4
dmat4x2
dmat4x3
dmat4x4
dvec2
dvec3
dvec4
filter
fixed
flat
fvec2
fvec3
fvec4
highp
hvec2
hvec3
hvec4
iimage1D
iimage1DArray
iimage2D
iimage2DArray
iimage2DMS
iimage2DMSArray
iimage2DRect
iimage3D
iimageBuffer
iimageCube
iimageCubeArray
image1D
image1DArray
image1DArrayShadow
image1DShadow
image2D
image2DArray
image2DArrayShadow
image2DMS
image2DMSArray
image2DRect
image2DShadow
image3D
imageBuffer
imageCube
imageCubeArray
inout
input
interface
isampler1D
isampler1DArray
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler2DRect
isampler2DShadow
isampler3D
isamplerBuffer
isamplerCube
isamplerCubeArray
ivec2
ivec3
ivec4
layout
lowp
mat2
mat2x2
mat2x3
mat2x4
mat3
mat3x2
mat3x3
mat3x4
mat4
mat4x2
mat4x3
mat4x4
mediump
noinline
noperspective
output
partition
patch
precision
readonly
resource
sample
sampler1D
sampler1DArray
sampler1DArrayShadow
sampler1DShadow
sampler2D
sampler2DArray
sampler2DArrayShadow
sampler2DMS
sampler2DMSArray
sampler2DRect
sampler2DRectShadow
sampler2DShadow
sampler3D
sampler3DRect
samplerBuffer
samplerCube
samplerCubeArray
samplerCubeArrayShadow
samplerCubeShadow
smooth
subroutine
superp
uimage1D
uimage1DArray
uimage2D
uimage2DArray
uimage2DMS
uimage2DMSArray
uimage2DRect
uimage3D
uimageBuffer
uimageCube
uimageCubeArray
usampler1D
usampler1DArray
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler2DRect
usampler3D
usamplerBuffer
usamplerCube
usamplerCubeArray
uvec2
uvec3
uvec4
varying
vec2
vec3
writeonly
kernel
__sample
__sampler
__table
__color
__attribute__
__unknown_anytype
radians
degrees
asin
acos
atan
sinh
cosh
tanh
asinh
acosh
atanh
exp2
log2
sqrt
inversesqrt
sign
floor
trunc
round
roundEven
ceil
fract
modf
clamp
step
smoothstep
isnan
isinf
floatBitsToInt
floatBitsToUint
intBitsToFloat
uintBitsToFloat
packSnorm2x16
unpackSnorm2x16
packUnorm2x16
unpackUnorm2x16
packHalf2x16
unpackHalf2x16
length
distance
cross
normalize
faceforward
reflect
refract
matrixCompMult
outerProduct
transpose
determinant
inverse
lessThan
lessThanEqual
greaterThan
greaterThanEqual
equal
notEqual
$assert
textureSize
texture
textureProj
textureLod
textureOffset
texelFetch
texelFetchOffset
textureProjOffset
textureLodOffset
textureProjLod
textureProjLodOffset
textureGrad
textureGradOffset
textureProjGrad
textureProjGradOffset
texture2D
texture2DProj
texture2DLod
texture2DProjLod
textureCube
textureCubeLod
shadow2DEXT
shadow2DProjEXT
dFdx
dFdy
fwidth
near
diff
gl_DepthRangeParameters
gl_DepthRange
 /* <none> */ 
const 
invariant 
smooth 
flat 
out 
centroid in 
centroid out 
uniform 
attribute 
varying 
layout(
location = 
shared
packed
std140
std430
row_major
column_major
highp 
mediump 
lowp 
struct
 /* <> */ 
void
 /* <unknown> */ 
sampler
Cube
Buffer
Rect
Array
Shadow
vec4
inout 
main
uniform
precision 
gl_VertexID
gl_InstanceID
gl_Position
gl_PointSize
gl_FragCoord
gl_FrontFacing
gl_FragDepth
gl_PointCoord
gl_FragColor
gl_FragData
gl_HelperInvocation
gl_NumWorkGroups
gl_WorkGroupSize
gl_WorkGroupID
gl_LocalInvocationID
gl_GlobalInvocationID
gl_LocalInvocationIndex
#version 
core
compatibility
#extension 
require
enable
warn
disable
/* empty */;
if (
 else 
switch (
case 
default: 
for (
while (
 while (
break
continue
discard
return
 /* <unspecified-op> */ 
<unspecified-op>
gl_MaxVertexAttribs
gl_MaxVertexUniformVectors
gl_MaxVertexOutputVectors
gl_MaxFragmentInputVectors
gl_MaxVertexTextureImageUnits
gl_MaxCombinedTextureImageUnits
gl_MaxTextureImageUnits
gl_MaxFragmentUniformVectors
gl_MinProgramTexelOffset
gl_MaxProgramTexelOffset
gl_MaxVaryingVectors
gl_MaxDrawBuffers
gl_MaxImageUnits
gl_MaxVertexImageUniforms
gl_MaxFragmentImageUniforms
gl_MaxComputeImageUniforms
gl_MaxCombinedImageUniforms
gl_MaxCombinedShaderOutputResources
gl_MaxComputeWorkGroupCount
gl_MaxComputeWorkGroupSize
gl_MaxComputeUniformComponents
gl_MaxComputeTextureImageUnits
gl_MaxComputeAtomicCounters
gl_MaxComputeAtomicCounterBuffers
gl_MaxVertexAtomicCounters
gl_MaxFragmentAtomicCounters
gl_MaxCombinedAtomicCounters
gl_MaxAtomicCounterBindings
gl_MaxFragmentAtomicCounterBuffers
gl_MaxVertexAtomicCounterBuffers
gl_MaxCombinedAtomicCounterBuffers
gl_MaxAtomicCounterBufferSize
.length()
textureSize(
texture(
textureProj(
textureLod(
textureOffset(
texelFetch(
texelFetchOffset(
textureProjOffset(
textureLodOffset(
textureProjLod(
textureProjLodOffset(
textureGrad(
textureGradOffset(
textureProjGrad(
textureProjGradOffset(
texture2D(
texture2DProj(
texture2DLod(
texture2DProjLod(
textureCube(
textureCubeLod(
shadow2DEXT(
shadow2DProjEXT(
radians(
degrees(
sin(
cos(
tan(
asin(
acos(
atan(
sinh(
cosh(
tanh(
asinh(
acosh(
atanh(
pow(
exp(
log(
exp2(
log2(
sqrt(
inversesqrt(
abs(
sign(
floor(
trunc(
round(
roundEven(
ceil(
fract(
mod(
modf(
min(
max(
clamp(
mix(
step(
smoothstep(
isnan(
isinf(
floatBitsToInt(
floatBitsToUint(
intBitsToFloat(
uintBitsToFloat(
packSnorm2x16(
unpackSnorm2x16(
packUnorm2x16(
unpackUnorm2x16(
packHalf2x16(
unpackHalf2x16(
length(
distance(
dot(
cross(
normalize(
faceforward(
reflect(
refract(
matrixCompMult(
outerProduct(
transpose(
determinant(
inverse(
lessThan(
lessThanEqual(
greaterThan(
greaterThanEqual(
equal(
notEqual(
any(
all(
not(
$assert(
dFdx(
dFdy(
fwidth(
invariant
precision convert to same precision
non-lvalue in assignment node
unspecified assignment operator
No opcode
variable marked unused in AST
function marked unused in AST
 * Verify error: 
precision mismatch
precision set on invalid expression
precision not set on expression
#include <metal_stdlib>
using namespace metal;
struct Uniforms 
float4 outputRect;
float3x3 vertexTransform;
cube<
buffer<
, access::sample> 
// uniform 
static inline bool   lessThan(float  x,float  y) { return x < y; }
static inline bool2  lessThan(float2 x,float2 y) { return x < y; }
static inline bool3  lessThan(float3 x,float3 y) { return x < y; }
static inline bool4  lessThan(float4 x,float4 y) { return x < y; }
static inline bool   lessThanEqual(float  x,float  y) { return x <= y; }
static inline bool2  lessThanEqual(float2 x,float2 y) { return x <= y; }
static inline bool3  lessThanEqual(float3 x,float3 y) { return x <= y; }
static inline bool4  lessThanEqual(float4 x,float4 y) { return x <= y; }
static inline bool   greaterThan(float  x,float  y) { return x > y; }
static inline bool2  greaterThan(float2 x,float2 y) { return x > y; }
static inline bool3  greaterThan(float3 x,float3 y) { return x > y; }
static inline bool4  greaterThan(float4 x,float4 y) { return x > y; }
static inline bool   greaterThanEqaul(float  x,float  y) { return x >= y; }
static inline bool2  greaterThanEqaul(float2 x,float2 y) { return x >= y; }
static inline bool3  greaterThanEqaul(float3 x,float3 y) { return x >= y; }
static inline bool4  greaterThanEqaul(float4 x,float4 y) { return x >= y; }
static inline float   mod(float  x,float  y) { return x - y * floor(x / y); }
static inline float2  mod(float2 x,float  y) { return x - y * floor(x / y); }
static inline float2  mod(float2 x,float2 y) { return x - y * floor(x / y); }
static inline float3  mod(float3 x,float  y) { return x - y * floor(x / y); }
static inline float3  mod(float3 x,float3 y) { return x - y * floor(x / y); }
static inline float4  mod(float4 x,float  y) { return x - y * floor(x / y); }
static inline float4  mod(float4 x,float4 y) { return x - y * floor(x / y); }
#define half_exp exp
#define half_exp2 exp2
#define half_log log
#define half_log2 log2
#define half_powr pow
#define half_rsqrt rsqrt
#define half_sqrt sqrt
#define FRACT(A) (fmin((A) - floor(A), 0x1.fffffep-1f))
 =  static_cast<float2>(gid) + params.outputRect.xy + float2(0.5,0.5);
  _dc = (float3(_dc.xy,1.0) * params.vertexTransform).xy;
  gid.y += lessThan(params.outputRect.w, 0) * ((-params.outputRect.w-1)-2*gid.y);
  gid += static_cast<uint2>(params.outputRect.xy)
outputTexture.write(
, gid)
.sample(sampler_
atan2(
half_powr(
half_exp(
half_log(
half_exp2(
half_log2(
half_sqrt(
half_rsqrt(
fabs(
FRACT(
fmod(
fmin(
fmax(
params.
, sampler_
kernel void 
MetalEntryPoint
(texture2d<float, access::write> outputTexture [[texture(0)]]
 [[texture(
)]],
sampler sampler_
 [[sampler(
,constant Uniforms &params [[buffer(0)]],uint2 gid [[thread_position_in_grid]]) 
static 
float2 _dc
__attribute__((
  if (gid.x >= abs(params.outputRect.z) || gid.y >= abs(params.outputRect.w)) return;
compare
inline float2 __attribute__((overloadable)) matMultiply(float2 v,float4 m)  { return (float2)( dot(v, (float2)(m.s0,m.s1)), dot(v, (float2)(m.s2,m.s3)) ); }
inline float3 __attribute__((overloadable)) matMultiply(float3 v,float16 m) { return (float3)( dot(v, (float3)(m.s0,m.s1,m.s2)), dot(v, (float3)(m.s4,m.s5,m.s6)), dot(v, (float3)(m.s8,m.s9,m.sa)) ); }
inline float4 __attribute__((overloadable)) matMultiply(float4 v,float16 m) { return (float4)( dot(v, (float4)(m.s0,m.s1,m.s2,m.s3)), dot(v, (float4)(m.s4,m.s5,m.s6,m.s7)), dot(v, (float4)(m.s8,m.s9,m.sa,m.sb)), dot(v, (float4)(m.sc,m.sd,m.se,m.sf)) ); }
inline float  __attribute__((overloadable)) lessThan(float  x,float  y) { return (1.0f             - step(y,x)); }
inline float2 __attribute__((overloadable)) lessThan(float  x,float2 y) { return (((float2)(1.0f)) - step(y,(float2)(x))); }
inline float3 __attribute__((overloadable)) lessThan(float  x,float3 y) { return (((float3)(1.0f)) - step(y,(float3)(x))); }
inline float4 __attribute__((overloadable)) lessThan(float  x,float4 y) { return (((float4)(1.0f)) - step(y,(float4)(x))); }
inline float2 __attribute__((overloadable)) lessThan(float2 x,float2 y) { return ((float2)(1.0f)   - step(y,x)); }
inline float3 __attribute__((overloadable)) lessThan(float3 x,float3 y) { return ((float3)(1.0f)   - step(y,x)); }
inline float4 __attribute__((overloadable)) lessThan(float4 x,float4 y) { return ((float4)(1.0f)   - step(y,x)); }
inline float  __attribute__((overloadable)) foslMix(float  x,float  y,float  a) { return mix(x,y,a); }
inline float2 __attribute__((overloadable)) foslMix(float2 x,float2 y,float  a) { return mix(x,y,(float2)(a)); }
inline float3 __attribute__((overloadable)) foslMix(float3 x,float3 y,float  a) { return mix(x,y,(float3)(a)); }
inline float4 __attribute__((overloadable)) foslMix(float4 x,float4 y,float  a) { return mix(x,y,(float4)(a)); }
inline float2 __attribute__((overloadable)) foslMix(float2 x,float2 y,float2 a) { return mix(x,y,a); }
inline float3 __attribute__((overloadable)) foslMix(float3 x,float3 y,float3 a) { return mix(x,y,a); }
inline float4 __attribute__((overloadable)) foslMix(float4 x,float4 y,float4 a) { return mix(x,y,a); }
inline float  __attribute__((overloadable)) mod(float  x,float  y) { return x - y * floor(x / y); }
inline float2 __attribute__((overloadable)) mod(float2 x,float  y) { return x - y * floor(x / y); }
inline float2 __attribute__((overloadable)) mod(float2 x,float2 y) { return x - y * floor(x / y); }
inline float3 __attribute__((overloadable)) mod(float3 x,float  y) { return x - y * floor(x / y); }
inline float3 __attribute__((overloadable)) mod(float3 x,float3 y) { return x - y * floor(x / y); }
inline float4 __attribute__((overloadable)) mod(float4 x,float  y) { return x - y * floor(x / y); }
inline float4 __attribute__((overloadable)) mod(float4 x,float4 y) { return x - y * floor(x / y); }
#define _V3_TO_V3(a)   (((float4)(((float3)((a))),_dc.x)).xyz) 
#define FRACT(A) (fmin((A) - floor(A), 0x1.fffffep-1f))
float4
 = (int2)(get_global_id(0),get_global_id(1));
  if ( _writeLoc.x  >= get_image_width(out) || _writeLoc.y >= get_image_height(out)) return;
  float4 inlinedTmp;
 = matMultiply((float3)(_writeLoc.x + outputRect.x + 0.5f, _writeLoc.y + outputRect.y + 0.5f, 1.0f),(float16)(vertexTransform0,vertexTransform1,vertexTransform2,vertexTransform3)).xy
(float4)(0.0f)
inlinedTmp
.xyz
 = ((float4)(
).xyzz)
  { // 
sampler_t sampler_
 = sampler_
inlinedTmp.x = 
inlinedTmp.xy = 
inlinedTmp.xyz = 
inlinedTmp = 
read_only image
cube
((float4)(
_V3_TO_V3(
matMultiply(
half_recip(
 (((float4)((
), _dc.x)).xyz)
), _dc.y)).xyz)
write_imagef(out, _writeLoc, 
).xyz)
0.0, 
0.0, 0.0, 0.0, 0.0
read_imagef(
__ci_gamma_scalar_SPI(
native_powr(
half_sin(
native_sin(
half_cos(
native_cos(
half_tan(
native_tan(
foslMix(
fast_distance(
fast_length(
fast_normalize(
OpenCLEntryPoint
(write_only image2d_t out,float4 outputRect,float4 vertexTransform0,float4 vertexTransform1,float4 vertexTransform2,float4 vertexTransform3
inline 
 __attribute__((overloadable
float
uint
bool
false
name
type
numCols
numRows
values
null
Null
NULL
true
True
TRUE
False
FALSE
.nan
.NaN
.NAN
.inf
.Inf
.INF
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
INFINITY
-inf
-INFINITY
-nan
-NaN
-Inf
+Inf
0.0E+0
APInt(
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
Recycler element size: 
Recycler element alignment: 
Number of elements free for recycling: 
LLVM ERROR: 
UNREACHABLE executed
 at 
<stdin>
Unknown buffer
Program arguments: 
replacement string contained trailing backslash
0123456789
invalid backreference string '
Included from 
<unknown>
error: 
warning: 
note: 
unknown
aarch64
aarch64_be
armeb
hexagon
mips
mipsel
mips64
mips64el
msp430
powerpc64
powerpc64le
powerpc
r600
sparc
sparcv9
s390x
thumb
thumbeb
x86_64
xcore
nvptx
nvptx64
igil32
igil64
air64
amdil64
gpu_32
gpu_64
le32
amdil
spir
spir64
agx0
agx1
kalimba
systemz
igil
apple
scei
nvidia
darwin
dragonfly
freebsd
kfreebsd
linux
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
bitrig
cuda
nvcl
tvos
gnueabihf
gnueabi
gnux32
code16
eabi
eabihf
android
msvc
itanium
cygnus
arm64
ppc64
ppc32
ppc64le
cygwin
mingw
armv6
arm1176jzf-s
cortex-a9
arm2
arm6
arm7m
strongarm
arm7tdmi
arm10tdmi
v5te
arm1022e
v5tej
arm926ej-s
arm1136jf-s
arm1136j-s
v6zk
v6t2
arm1156t2-s
v6-m
cortex-m0
v7-a
v7-l
cortex-a8
v7-k
cortex-a7
v7-s
swift
v7-r
cortex-r4
v7-m
cortex-m3
v7em
v7e-m
cortex-m4
v8-a
cortex-a53
ep9312
iwmmxt
xscale
i586
i786
i886
i986
amd64
x86_64h
armv
armebv
thumbv
thumbebv
mipseb
mipsallegrex
mipsallegrexel
mips64eb
sparc64
win32
coff
macho
empty
rope:
cstring:"
std::string:"
stringref:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
Stream-Start: 
Stream-End: 
Version-Directive: 
Tag-Directive: 
Document-Start: 
Document-End: 
Block-Entry: 
Block-End: 
Block-Sequence-Start: 
Block-Mapping-Start: 
Flow-Entry: 
Flow-Sequence-Start: 
Flow-Sequence-End: 
Flow-Mapping-Start: 
Flow-Mapping-End: 
Key: 
Value: 
Scalar: 
Alias: 
Anchor: 
Tag: 
YAML
#;/?:@&=+$,_.!~*'()[]
Not dealing with this yet
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Got empty block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code!
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
unknown node kind
                
invalid boolean
invalid number
out of range number
invalid floating point number
0x%02X
invalid hex8 number
out of range hex8 number
0x%04X
invalid hex16 number
out of range hex16 number
0x%08X
invalid hex32 number
out of range hex32 number
0x%016llX
invalid hex64 number
Error opening output file '
IO failure on output stream.
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
hyphen
hyphen-minus
full-stop
solidus
zero
three
four
five
seven
eight
nine
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
-darwin
generic
GenuineIntel
i386
i486
pentium
pentium-mmx
pentiumpro
pentium2
pentium3
pentium-m
yonah
core2
i686
penryn
corei7
corei7-avx
core-avx-i
core-avx2
atom
x86-64
pentium4
nocona
prescott
AuthenticAMD
k6-2
k6-3
geode
athlon-tbird
athlon-mp
athlon-xp
athlon
k8-sse3
opteron
athlon-fx
athlon64
amdfam10
btver1
bdver4
bdver3
bdver2
bdver1
btver2
TMPDIR
/tmp
/var/tmp
-%%%%%%
!<arch>
HOME
0123456789abcdef
TEMP
TEMPDIR
/var/tmp/
-%%%%%%.
COLUMNS
PATH
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot dup2
Cannot open file '
' for 
%-2d
 %-*s
 %#0*lx
 + %u
%Y-%m-%d %H:%M:%S
%s.%.9u
GL_ARB_texture_rectangle
GL_ARB_draw_instanced
GL_ARB_geometry_shader4
GL_ARB_uniform_buffer_object
GL_ARB_shader_texture_lod
GL_ARB_fragment_coord_conventions
GL_ARB_texture_multisample
GL_ARB_sample_shading
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_query_lod
GL_ARB_explicit_attrib_location
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_tessellation_shader
GL_ARB_separate_shader_objects
GL_ARB_shader_precision
GL_ARB_vertex_attrib_64bit
GL_ARB_shading_language_420pack
GL_ARB_conservative_depth
GL_ARB_shader_atomic_counters
GL_ARB_shader_image_load_store
GL_ARB_shading_language_packing
GL_ARB_explicit_uniform_location
GL_ARB_fragment_layer_viewport
GL_ARB_shader_image_size
GL_ARB_shader_storage_buffer_object
GL_ARB_texture_query_levels
GL_ARB_enhanced_layouts
GL_ARB_bindless_texture
GL_ARB_compute_variable_group_size
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_ES3_1_compatibility
GL_ARB_cull_distance
GL_ARB_derivative_control
GL_ARB_shader_texture_image_samples
GL_EXT_geometry_shader4
GL_EXT_gpu_shader4
GL_EXT_draw_instanced
GL_EXT_texture_array
GL_EXT_bindable_uniform
GL_NV_explicit_multisample
GL_AMD_vertex_shader_tessellator
GL_AMD_conservative_depth
GL_EXT_shader_image_load_store
GL_EXT_vertex_attrib_64bit
GL_NV_gpu_shader5
GL_NV_bindless_texture
GL_NV_shader_atomic_float
GL_EXT_shader_integer_mix
GL_INTEL_fragment_shader_ordering
GL_NV_shader_thread_group
GL_NV_shader_thread_shuffle
GL_EXT_shader_image_load_formatted
GL_AMD_gpu_shader_int64
GL_NV_shader_atomic_int64
GL_KHR_blend_equation_advanced
GL_EXT_post_depth_coverage
GL_EXT_sparse_texture2
GL_NV_fragment_shader_interlock
GL_NV_geometry_shader_passthrough
GL_NV_sample_mask_override_coverage
GL_NV_shader_atomic_fp16_vector
GL_OES_texture_3D
GL_OES_standard_derivatives
GL_EXT_shader_texture_lod
GL_EXT_frag_depth
GL_EXT_separate_shader_objects
GL_NV_texture_array
GL_NV_draw_instanced
GL_NV_shadow_samplers_array
GL_NV_shadow_samplers_cube
GL_NV_explicit_attrib_location
GL_NV_non_square_matrices
GL_ARM_shader_framebuffer_fetch
GL_ARM_shader_framebuffer_fetch_depth_stencil
GL_EXT_shader_pixel_local_storage
GL_OES_sample_variables
GL_OES_shader_multisample_interpolation
GL_OES_texture_storage_multisample_2d_array
GL_EXT_geometry_shader
GL_EXT_geometry_point_size
GL_EXT_gpu_shader5
GL_EXT_shader_implicit_conversions
GL_EXT_shader_io_blocks
GL_EXT_tessellation_shader
GL_EXT_tessellation_point_size
GL_EXT_texture_buffer
GL_EXT_texture_cube_map_array
GL_EXT_primitive_bounding_box
GL_ANDROID_extension_pack_es31a
GL_APPLE_clip_distance
GL_ARB_shader_objects
GL_ARB_vertex_shader
GL_ARB_fragment_shader
GL_ARB_shading_language_100
GL_ARB_fragment_program_shadow
GL_ARB_draw_buffers
GL_ARB_depth_buffer_float
GL_ARB_framebuffer_sRGB
GL_ARB_texture_compression_rgtc
GL_ARB_provoking_vertex
GL_ARB_vertex_array_bgra
GL_ARB_shading_language_include
GL_ARB_shader_bit_encoding
GL_ARB_shader_subroutine
GL_ARB_transform_feedback2
GL_ARB_ES2_compatibility
GL_ARB_get_program_binary
GL_ARB_viewport_array
GL_ARB_robustness
GL_ARB_shader_stencil_export
GL_ARB_arrays_of_arrays
GL_ARB_compute_shader
GL_ARB_ES3_compatibility
GL_ARB_invalidate_subdata
GL_ARB_robust_buffer_access_behavior
GL_ARB_stencil_texturing
GL_ARB_texture_stencil8
GL_EXT_texture_sRGB
GL_NV_gpu_program4
GL_EXT_packed_float
GL_EXT_texture_compression_latc
GL_EXT_texture_compression_rgtc
GL_EXT_texture_shared_exponent
GL_NV_depth_buffer_float
GL_EXT_framebuffer_sRGB
GL_NV_transform_feedback
GL_EXT_transform_feedback
GL_EXT_vertex_array_bgra
GL_ATI_meminfo
GL_AMD_texture_texture4
GL_EXT_provoking_vertex
GL_EXT_texture_snorm
GL_NV_shader_buffer_load
GL_AMD_shader_stencil_export
GL_NV_gpu_program5
GL_NV_shader_buffer_store
GL_NV_tessellation_program5
GL_NV_vdpau_interop
GL_NV_path_rendering
GL_AMD_vertex_shader_viewport_index
GL_AMD_vertex_shader_layer
GL_AMD_sparse_texture
GL_AMD_shader_trinary_minmax
GL_INTEL_map_texture
GL_AMD_shader_stencil_value_export
GL_AMD_transform_feedback4
GL_AMD_gcn_shader
GL_EXT_raster_multisample
GL_NV_conservative_raster
GL_NV_fill_rectangle
GL_NV_fragment_coverage_to_color
GL_NV_framebuffer_mixed_samples
GL_NV_path_rendering_shared_edge
GL_NV_sample_locations
GL_OES_get_program_binary
GL_AMD_program_binary_Z400
GL_OES_EGL_image_external
GL_NV_draw_buffers
GL_EXT_shadow_samplers
GL_NV_EGL_stream_consumer_external
GL_EXT_sRGB
GL_EXT_robustness
GL_EXT_shader_framebuffer_fetch
GL_EXT_multiview_draw_buffers
GL_EXT_draw_buffers
GL_EXT_pvrtc_sRGB
GL_OES_sample_shading
GL_OES_shader_image_atomic
GL_OES_texture_stencil8
GL_EXT_texture_view
GL_KHR_robust_buffer_access_behavior
GL_KHR_robustness
GL_APPLE_sa_assertions
FOSL_cruft_compatibility
    
' -> 
layout qualifier
matrix
interpolation qualifier
interface block
long long
imaginary
type_is_
precision_is_
sa_failed
unspecified
tesselation control
tesselation evaluation
geometry
compute
switch statement
xyzw
vec2, vec3, vec4
bvec2, bvec3, bvec4
ivec2, ivec3, ivec4
uvec2, uvec3, uvec4
mat2, mat3, mat4
mat2, mat2x3, mat2x4, mat3x2, mat3, mat3x4, mat4x2, mat4x3, mat4
vec3, vec4
a sampler type
, legal parameter types are:
  (genType, genType, genType)
  (genType, genType, float)
  (genType, genType, genBType)
    where 
GenType = float, vec2, vec3, vec4
          
GenBType = bool, bvec2, bvec3, bvec4
N4fosl24CombinedDiagnosticBufferE
N4fosl8CompilerE
N4fosl15CompilerContextE
N12_GLOBAL__N_114GLSLTargetInfoE
N12_GLOBAL__N_116FoslModuleLoaderE
NSt3__120__shared_ptr_emplaceIN5clang13TargetOptionsENS_9allocatorIS2_EEEE
N4fosl18PreludePPCallbacksE
NSt3__120__shared_ptr_pointerIPN4fosl11SpecializerENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN4fosl11SpecializerEEE
N5clang22DiagnosticNoteRendererE
N5clang18DiagnosticRendererE
N12_GLOBAL__N_113FixitReceiverE
N12_GLOBAL__N_124PrintPPOutputPPCallbacksE
N12_GLOBAL__N_120UnknownPragmaHandlerE
N5clang14TextDiagnosticE
N5clang20TextDiagnosticBufferE
N5clang21TextDiagnosticPrinterE
N5clang24VerifyDiagnosticConsumerE
N12_GLOBAL__N_117StandardDirectiveE
N5clang24VerifyDiagnosticConsumer9DirectiveE
N12_GLOBAL__N_114RegexDirectiveE
N5clang4edit13EditsReceiverE
N5clang12FoslConsumerE
N5clang28ExternalHeaderFileInfoSourceE
////////////////
N5clang5LexerE
N5clang18PPChainedCallbacksE
N5clang28PPConditionalDirectiveRecordE
N5clang11PPCallbacksE
N4llvm14format_object3IPKciiEE
N4llvm14format_object3IiiiEE
N5clang8PTHLexerE
N5clang10PTHManagerE
N12_GLOBAL__N_112PTHStatCacheE
N5clang13PragmaHandlerE
N5clang15PragmaNamespaceE
N5clang18EmptyPragmaHandlerE
N5clang33ExternalPreprocessingRecordSourceE
N5clang19PreprocessingRecordE
N5clang12ModuleLoaderE
N5clang26ExternalPreprocessorSourceE
N5clang14CommentHandlerE
N5clang21CodeCompletionHandlerE
N5clang17PreprocessorLexerE
N5clang18DiagnosticConsumerE
N5clang28ForwardingDiagnosticConsumerE
N5clang20IgnoringDiagConsumerE
#pragma-messages
#warnings
CFString-literal
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-array-temporary
address-of-temporary
aggregate-return
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
analyzer-incompatible-plugin
anonymous-pack-parens
arc-abi%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assignarray-bounds
array-bounds-pointer-arithmetic
asm-operand-widths
assign-enum
assume
at-protocol
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attributes
auto-import
auto-storage-class
auto-var-idavailability
backend-plugin
backslash-newline-escape
bad-array-new-length
bad-function-cast
bind-to-temporary-copy
bitfield-constant-conversion
bitwise-op-parentheses
bool-conversion
bool-conversions
bridge-cast
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-long-long
c++11-narrowingc++14-compat
c++14-compat-pedantic
c++14-extensions
c++1y-extensions
c++1z-extensions
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c99-compat
c99-extensions
cast-align
cast-of-sel-type
cast-qual
char-align
char-subscripts
class-varargs
comment
comments
compare-distinct-pointer-types
complex-component-init
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
covered-switch-default
cstring-format-directive
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
dangling-else
dangling-field
dangling-initializer-list
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
delegating-ctor-cycles
delete-incomplete
delete-non-virtual-dtor
deprecated
deprecated-declarations
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-register
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
dynamic-class-memaccess
effc++
embedded-directive
empty-body
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-conversion
enum-too-large
exit-time-destructors
explicit-initialize-call
explicit-ownership-type
extended-offsetof
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semiextra-tokens
fallback
flexible-array-extensions
float-conversion
float-equal
format
format-extra-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-security
format-y2k
format-zero-length
format=2
four-char-constants
frame-larger-than=
function-def-in-objc-container
gcc-compat
global-constructors
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-argumentsheader-guard
header-hygiene
idiomatic-parentheses
ignored-attributes
ignored-optimization-argument
ignored-pragmas
ignored-qualifiers
implicit
implicit-atomic-properties*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-function-declarationimplicit-int
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incomplete-implementation
incomplete-module
incomplete-umbrella
infinite-recursion
inherited-variadic-ctor
init-self
initializer-overrides
inline
inline-asm
inline-new-delete
int-conversion
int-conversions
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-noreturn
invalid-offsetof
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
keyword-compat
knr-promoted-parameter
language-extension-token
large-by-value-copy
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
memsize-comparison
method-signatures
microsoft
microsoft-exists
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-declarations
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noreturn
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarationsmodule-build
module-conflict
mostmsvc-include
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-virtual-dtor
nonnull
nonportable-cfstrings!nonportable-vector-initialization
null-arithmetic
null-character
null-conversion
null-dereference
nullability
nullability-completeness
nullability-declspec
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-cocoa-api
objc-designated-initializers
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-string-compare
objc-string-concatenation
old-style-cast
old-style-definition
openmp-clauses
openmp-loop-form
out-of-line-declarationover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
pass
pass-analysis
pass-failed
pass-missed
pedantic
pointer-arith
pointer-bool-conversionpointer-sign
pointer-to-int-cast
pointer-type-mismatch
pragmas&predefined-identifier-outside-function
private-extern
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
readonly-iboutlet-property
receiver-expr
receiver-forward-class
receiver-is-weak
redeclared-class-member
redundant-decls
reinterpret-base-class
remark-backend-plugin
reorder
requires-super-attribute
reserved-user-defined-literal
retained-language-linkage
return-stack-address
return-type
return-type-c-linkage
section
selector
selector-type-mismatch
self-assign
self-assign-field
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-ivar
shift-count-negative
shift-count-overflow
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-memaccess
sometimes-uninitialized
source-uses-openmp
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5
strict-prototypes
strict-selector-match
string-compare
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
super-class-method-mismatch
switch
switch-bool
switch-default
switch-enum
synth
tautological-compare*tautological-constant-out-of-range-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-undefined-compare$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-verbose
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unavailable-declarations
undeclared-selector
undef
undefined-bool-conversion
undefined-inline
undefined-internal
undefined-reinterpret-cast
unicode
unicode-whitespace
uninitialized
unknown-attributes
unknown-escape-sequence
unknown-pragmas
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-loop-increment
unreachable-code-return
unsequenced#unsupported-dll-base-class-template
unsupported-friend
unsupported-visibility
unused
unused-argument
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-resultunused-value
unused-variable
unused-volatile-lvalue
unused-volatile-lvalue-hack
used-but-marked-unused
user-defined-literals
varargs
variadic-macros
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-ptr-dereference
volatile-register-var
weak-template-vtablesweak-vtables
writable-strings
write-strings
zero-length-array
N5clang19FileSystemStatCacheE
N5clang17MemorizeStatCallsE
N5clang18IdentifierIteratorE
N5clang20IdentifierInfoLookupE
N5clang24ExternalIdentifierLookupE
N12_GLOBAL__N_119EmptyLookupIteratorE
N4llvm10FoldingSetIN5clang20MultiKeywordSelectorEEE
N5clang19PrettyStackTraceLocE
N5clang23ExternalSLocEntrySourceE
N5clang10TargetInfoE
N4llvm14RefCountedBaseIN5clang10TargetInfoEEE
N5clang3vfs4FileE
N5clang3vfs10FileSystemE
N5clang3vfs6detail11DirIterImplE
N5clang3vfs17OverlayFileSystemE
N12_GLOBAL__N_114RealFileSystemE
N12_GLOBAL__N_18RealFileE
NSt3__120__shared_ptr_emplaceIN12_GLOBAL__N_113RealFSDirIterENS_9allocatorIS2_EEEE
N12_GLOBAL__N_113RealFSDirIterE
N12_GLOBAL__N_111VFSFromYAMLE
NSt3__120__shared_ptr_emplaceIN12_GLOBAL__N_122VFSFromYamlDirIterImplENS_9allocatorIS2_EEEE
N12_GLOBAL__N_122VFSFromYamlDirIterImplE
N12_GLOBAL__N_19FileEntryE
N12_GLOBAL__N_15EntryE
N12_GLOBAL__N_114DirectoryEntryE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_114RealFileSystemENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN12_GLOBAL__N_114RealFileSystemEEE
NSt3__120__shared_ptr_emplaceIN12_GLOBAL__N_120OverlayFSDirIterImplENS_9allocatorIS2_EEEE
N12_GLOBAL__N_120OverlayFSDirIterImplE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_111VFSFromYAMLENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN12_GLOBAL__N_111VFSFromYAMLEEE
NSt3__120__shared_ptr_emplaceINS_5stackIN5clang3vfs18directory_iteratorENS_6vectorIS4_NS_9allocatorIS4_EEEEEENS6_IS9_EEEE
NSt3__110__function6__funcIZN4fosl6filter3DAG11parseSubDAGEPNS3_4NodeERNS2_6ParserERN5clang17DiagnosticsEngineERN4llvm11SmallPtrSetIS6_Lj8EEEE3$_0NS_9allocatorISG_EEFPNS9_14IdentifierInfoESK_EEE
ZN4fosl6filter3DAG11parseSubDAGEPNS0_4NodeERNS_6ParserERN5clang17DiagnosticsEngineERN4llvm11SmallPtrSetIS3_Lj8EEEE3$_0
NSt3__110__function6__funcIZN4fosl6filter8analysis17PositionInvariant9calculateEPKNS2_12FunctionDeclEEUlPNS2_4ExprEE_NS_9allocatorISB_EEFbSA_EEE
ZN4fosl6filter8analysis17PositionInvariant9calculateEPKNS_12FunctionDeclEEUlPNS_4ExprEE_
NSt3__110__function6__funcIZN4fosl6filter8analysis14PreservesAlphaC1EPNS2_12FunctionDeclEEUlPNS2_4DeclEE_NS_9allocatorISA_EEFbS9_EEE
ZN4fosl6filter8analysis14PreservesAlphaC1EPNS_12FunctionDeclEEUlPNS_4DeclEE_
NSt3__110__function6__funcIZN4fosl6filter8analysis14PreservesAlphaC1EPNS2_12FunctionDeclEEUlPNS2_4StmtEE_NS_9allocatorISA_EEFbS9_EEE
ZN4fosl6filter8analysis14PreservesAlphaC1EPNS_12FunctionDeclEEUlPNS_4StmtEE_
NSt3__110__function6__funcIZN4fosl6filter8analysis14PreservesAlphaC1EPNS2_12FunctionDeclEEUlPNS2_4ExprEE_NS_9allocatorISA_EEFbS9_EEE
NSt3__110__function6__funcIZN4fosl6filter8analysis14PreservesAlpha10clearDeclsEPNS2_4ExprEEUlS7_E0_NS_9allocatorIS8_EEFbS7_EEE
ZN4fosl6filter8analysis14PreservesAlpha10clearDeclsEPNS_4ExprEEUlS4_E0_
ZN4fosl6filter8analysis14PreservesAlphaC1EPNS_12FunctionDeclEEUlPNS_4ExprEE_
NSt3__110__function6__funcIZN4fosl6filter8analysis14GeneralToColor9calculateEPKNS2_12FunctionDeclEEUlPNS2_4ExprEE_NS_9allocatorISB_EEFbSA_EEE
ZN4fosl6filter8analysis14GeneralToColor9calculateEPKNS_12FunctionDeclEEUlPNS_4ExprEE_
NSt3__110__function6__funcIZN4fosl6filter10KernelPool7addFileEN5clang6FileIDEE3$_0NS_9allocatorIS7_EEFPNS5_14IdentifierInfoESB_EEE
NSt3__110__function6__baseIFPN5clang14IdentifierInfoES4_EEE
ZN4fosl6filter10KernelPool7addFileEN5clang6FileIDEE3$_0
NSt3__110__function6__funcIZN4fosl6filter10KernelPool7addFileEN5clang6FileIDEE3$_1NS_9allocatorIS7_EEFvPNS2_12FunctionDeclEEEE
NSt3__110__function6__baseIFvPN4fosl12FunctionDeclEEEE
ZN4fosl6filter10KernelPool7addFileEN5clang6FileIDEE3$_1
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
6GLSLPH
NSt3__110__function6__funcIZN4fosl28RecursiveReachabilityInvokerC1ENS_8functionIFbPNS2_4DeclEEEENS4_IFbPNS2_4StmtEEEENS4_IFbPNS2_4ExprEEEEEUlS6_E_NS_9allocatorISH_EES7_EE
NSt3__110__function6__baseIFbPN4fosl4DeclEEEE
ZN4fosl28RecursiveReachabilityInvokerC1ENSt3__18functionIFbPNS_4DeclEEEENS2_IFbPNS_4StmtEEEENS2_IFbPNS_4ExprEEEEEUlS4_E_
NSt3__110__function6__funcIZN4fosl28RecursiveReachabilityInvokerC1ENS_8functionIFbPNS2_4DeclEEEENS4_IFbPNS2_4StmtEEEENS4_IFbPNS2_4ExprEEEEEUlSE_E_NS_9allocatorISH_EESF_EE
NSt3__110__function6__baseIFbPN4fosl4ExprEEEE
ZN4fosl28RecursiveReachabilityInvokerC1ENSt3__18functionIFbPNS_4DeclEEEENS2_IFbPNS_4StmtEEEENS2_IFbPNS_4ExprEEEEEUlSC_E_
NSt3__110__function6__funcIPFbPN4fosl4DeclEENS_9allocatorIS6_EES5_EE
PFbPN4fosl4DeclEE
FbPN4fosl4DeclEE
NSt3__110__function6__funcIPFbPN4fosl4StmtEENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFbPN4fosl4StmtEEEE
PFbPN4fosl4StmtEE
FbPN4fosl4StmtEE
NSt3__110__function6__funcIZN4fosl16DeclReachabilityC1ERNS2_10ASTContextEE3$_0NS_9allocatorIS6_EEFbPNS2_4ExprEEEE
ZN4fosl16DeclReachabilityC1ERNS_10ASTContextEE3$_0
NSt3__110__function6__funcIZN12_GLOBAL__N_111ASTVerifierC1ERN4llvm11raw_ostreamEEUlPN4fosl4DeclEE_NS_9allocatorISA_EEFbS9_EEE
ZN12_GLOBAL__N_111ASTVerifierC1ERN4llvm11raw_ostreamEEUlPN4fosl4DeclEE_
NSt3__110__function6__funcIZN12_GLOBAL__N_111ASTVerifierC1ERN4llvm11raw_ostreamEEUlPN4fosl4StmtEE_NS_9allocatorISA_EEFbS9_EEE
ZN12_GLOBAL__N_111ASTVerifierC1ERN4llvm11raw_ostreamEEUlPN4fosl4StmtEE_
NSt3__110__function6__funcIZN12_GLOBAL__N_111ASTVerifierC1ERN4llvm11raw_ostreamEEUlPN4fosl4ExprEE_NS_9allocatorISA_EEFbS9_EEE
ZN12_GLOBAL__N_111ASTVerifierC1ERN4llvm11raw_ostreamEEUlPN4fosl4ExprEE_
?NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_0NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
NSt3__110__function6__baseIFN4fosl10EvalResult13BuiltinScalarES4_S4_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_0
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_1NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_1
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_2NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_2
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_3NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_3
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_4NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_4
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_5NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_5
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_6NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_6
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_7NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_7
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_8NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_8
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE3$_9NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE3$_9
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_10NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_10
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_11NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_11
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_12NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_12
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_13NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_13
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_14NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_14
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_15NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_15
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_16NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_16
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_17NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_17
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_18NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_18
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_19NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_19
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_20NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_20
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_21NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_21
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_22NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_22
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_23NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_23
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_24NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_24
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_25NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_25
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_26NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_26
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_27NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_27
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_28NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_28
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_29NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_29
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_30NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_30
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_31NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_31
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_32NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_32
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_33NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_33
NSt3__110__function6__funcIZN4fosl9Evaluator19visitBinaryOperatorEPKNS2_14BinaryOperatorEE4$_34NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator19visitBinaryOperatorEPKNS_14BinaryOperatorEE4$_34
NSt3__110__function6__funcIZN4fosl9Evaluator17visitInitListExprEPKNS2_12InitListExprEE4$_35NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarENS2_13TypeSpecifierESB_EEE
NSt3__110__function6__baseIFN4fosl10EvalResult13BuiltinScalarENS2_13TypeSpecifierES4_EEE
ZN4fosl9Evaluator17visitInitListExprEPKNS_12InitListExprEE4$_35
NSt3__110__function6__funcIZN4fosl9Evaluator17visitInitListExprEPKNS2_12InitListExprEE4$_36NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarENS2_13TypeSpecifierESB_EEE
ZN4fosl9Evaluator17visitInitListExprEPKNS_12InitListExprEE4$_36
NSt3__110__function6__funcIZN4fosl9Evaluator17visitInitListExprEPKNS2_12InitListExprEE4$_37NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarENS2_13TypeSpecifierESB_EEE
ZN4fosl9Evaluator17visitInitListExprEPKNS_12InitListExprEE4$_37
NSt3__110__function6__funcIZN4fosl9Evaluator17visitInitListExprEPKNS2_12InitListExprEE4$_38NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarENS2_13TypeSpecifierESB_EEE
ZN4fosl9Evaluator17visitInitListExprEPKNS_12InitListExprEE4$_38
NSt3__110__function6__funcIZN4fosl9Evaluator17visitInitListExprEPKNS2_12InitListExprEE4$_39NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarENS2_13TypeSpecifierESB_EEE
ZN4fosl9Evaluator17visitInitListExprEPKNS_12InitListExprEE4$_39
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_40NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
NSt3__110__function6__baseIFN4fosl10EvalResult13BuiltinScalarES4_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_40
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_41NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_41
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_42NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_42
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_43NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_43
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_44NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_44
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_45NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_45
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_46NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_46
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_47NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_47
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_48NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_48
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_49NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_49
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_50NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_50
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_51NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_51
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_52NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_52
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_53NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_53
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_54NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_54
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_55NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_55
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_56NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_56
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_57NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_57
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_58NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_58
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_59NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_59
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_60NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_60
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_61NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_61
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_62NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_62
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_63NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_63
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_64NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_64
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_65NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_65
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_66NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_66
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_67NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_67
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_68NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_68
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_69NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_69
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_70NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_70
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_71NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_71
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_72NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_72
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_73NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_73
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_74NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_74
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_75NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_75
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_76NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_76
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_77NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_77
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_78NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_78
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_79NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_SB_EEE
NSt3__110__function6__baseIFN4fosl10EvalResult13BuiltinScalarES4_S4_S4_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_79
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_80NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_80
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_81NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_81
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_82NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_82
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_83NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_83
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_84NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_84
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_85NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_85
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_86NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_86
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_87NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_87
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_88NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_88
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_89NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_89
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_90NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_90
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_91NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_91
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_92NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_92
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_93NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_93
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_94NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_94
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_95NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_95
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_96NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_96
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_97NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_97
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_98NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_98
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE4$_99NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE4$_99
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_100NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_100
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_101NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_101
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_102NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_102
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_103NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_103
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_104NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_104
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_105NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_105
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_106NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_106
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_107NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_107
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_108NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_108
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_109NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_109
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_110NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_110
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_111NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_111
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_112NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_112
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_113NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_113
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_114NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_114
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_115NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_115
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_116NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_SB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_116
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_117NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_117
NSt3__110__function6__funcIZN4fosl9Evaluator20visitBuiltinCallExprEPKNS2_15BuiltinCallExprEE5$_118NS_9allocatorIS7_EEFNS2_10EvalResult13BuiltinScalarESB_EEE
ZN4fosl9Evaluator20visitBuiltinCallExprEPKNS_15BuiltinCallExprEE5$_118
NSt3__110__function6__funcIZN4fosl4Expr38recursivelyPropagatePrecisionQualifierENS2_18PrecisionQualifierEE3$_0NS_9allocatorIS5_EEFbPS3_EEE
ZN4fosl4Expr38recursivelyPropagatePrecisionQualifierENS_18PrecisionQualifierEE3$_0
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-/^., 
01234567
0123456789abcdefABCDEF
0123456789
0123456789ABCDEF0
0123456789abcdef0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
N4llvm14FoldingSetImplE
N4llvm12MemoryBufferE
N12_GLOBAL__N_115MemoryBufferMemE
N12_GLOBAL__N_120MemoryBufferMMapFileE
N4llvm22PrettyStackTraceStringE
N4llvm21PrettyStackTraceEntryE
N4llvm23PrettyStackTraceProgramE
()^$|*+?.[]\{}
N4llvm4yaml4NodeE
N4llvm4yaml8NullNodeE
N4llvm4yaml10ScalarNodeE
N4llvm4yaml12KeyValueNodeE
N4llvm4yaml11MappingNodeE
N4llvm4yaml12SequenceNodeE
N4llvm4yaml9AliasNodeE
N4llvm4yaml5Input5HNodeE
N4llvm4yaml5Input10EmptyHNodeE
N4llvm4yaml5Input11ScalarHNodeE
N4llvm4yaml5Input8MapHNodeE
N4llvm4yaml5Input13SequenceHNodeE
N4llvm4yaml2IOE
N4llvm4yaml5InputE
N4llvm4yaml6OutputE
N4llvm14format_object1IfEE
N4llvm14format_object1IhEE
N4llvm14format_object1ItEE
N4llvm14format_object1IjEE
N4llvm14format_object1IyEE
                                                                                
N4llvm11raw_ostreamE
N4llvm18raw_string_ostreamE
N4llvm16raw_null_ostreamE
N4llvm18format_object_baseE
N4llvm14raw_fd_ostreamE
N4llvm19raw_svector_ostreamE
N4llvm14format_object1IdEE
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
N4llvm3sys7processE
N4llvm3sys12self_processE
N4fosl18BuiltinTableLookupE
N4llvm14RefCountedBaseIN4fosl18BuiltinTableLookupEEE
N4fosl11LangOptionsE
N4llvm14RefCountedBaseIN4fosl11LangOptionsEEE
NSt3__110__function6__funcIZN4fosl4Sema22verifyNotRedeclarationEPN5clang14IdentifierInfoENS4_14SourceLocationENS_8functionIFbPNS2_4DeclEEEEEd_UlSA_E_NS_9allocatorISD_EESB_EE
ZN4fosl4Sema22verifyNotRedeclarationEPN5clang14IdentifierInfoENS1_14SourceLocationENSt3__18functionIFbPNS_4DeclEEEEEd_UlS8_E_
NSt3__110__function6__funcIZN4fosl4Sema9actOnDeclERNS2_10DeclaratorEbE3$_0NS_9allocatorIS6_EEFbPNS2_4DeclEEEE
ZN4fosl4Sema9actOnDeclERNS_10DeclaratorEbE3$_0
cF
