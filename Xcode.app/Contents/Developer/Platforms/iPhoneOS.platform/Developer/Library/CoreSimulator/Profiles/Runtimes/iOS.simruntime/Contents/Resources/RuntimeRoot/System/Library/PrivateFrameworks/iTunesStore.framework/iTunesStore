com.apple.itunesstored
com.apple.itunesstored.defaults-changed
com.apple.itunesstored.did-dismiss-dialog
com.apple.itunesstored.will-display-dialog
p2-service-terms-url
p2-redeem-service-terms-url
item-id
b64_encode2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1445.0.40.1/src/b64.c
!"Bad line length flag specified to b64_encode2()"
0 == (lineLen % 4)
b64_encode_
NULL != rc
NULL != strchr(b64_chars, *(p-1))
len != lineLen
b64_decode_
NULL != badChar
currIndex < NUM_ENCODED_DATA_BYTES
redirect-url
redirectURL
T@"NSURL",&,N,V_redirectURL
hideableSystemApps
bundle-id
com.apple.calculator
com.apple.mobilecal
com.apple.compass
com.apple.facetime
com.apple.mobileme.fmf1
com.apple.mobileme.fmip1
com.apple.Home
com.apple.iBooks
com.apple.iCloudDriveApp
com.apple.MobileStore
com.apple.mobilemail
com.apple.Maps
com.apple.Music
com.apple.mobilenotes
com.apple.MobileAddressBook
com.apple.podcasts
com.apple.reminders
com.apple.stocks
com.apple.tips
com.apple.videos
com.apple.VoiceMemos
com.apple.Bridge
com.apple.weather
https
itunes.apple.com
/WebObjects/MZStore.woa/wa/viewSoftware
id=%@&mt=8
bundleDictionary
T@"NSDictionary",R,C
com.apple.iTunesStore.ISDevice
v8@?0
CapabilitiesMatch
MismatchedCapabilities
8olRm6C1xqr7AJGpLRnpSw
touch-id
iPad Simulator
iPhone Simulator
K48AP
N90AP
%@: Releasing power assertion: %@
{public}
System/Library/CoreServices/SystemVersion.plist
%@: Taking power assertion: %@
[Device]: Reset location and privacy
xp_ci
DeviceClassNumber
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
deviceName
T@"NSString",R
guid
hardwareName
serialNumber
systemName
com.apple.itunesstore
INCOMPATIBLE_PURCHASE_BODY_IPAD_%@
INCOMPATIBLE_PURCHASE_BODY_IPHONE_%@
INCOMPATIBLE_PURCHASE_BODY_IPOD_%@
INCOMPATIBLE_PURCHASE_TITLE
MobileInstallationCheckCapabilitiesMatch
%@=%@
&%@=%@
?%@=%@
mobile-url-handlers
http
itms
itms-apps
itms-books
its-music
its-videos
itmss
itms-appss
itms-bookss
mailto
prefs
fuse
music
itms-gc
itms-gcs
itms-itunesu
itms-itunesus
its-musics
its-videoss
itms-podcasts
itms-podcastss
shoebox
itsradio
livenation
disneymoviesanywhere
itms-news
itms-newss
?=&+
paymentSheet.plist
ISBiometricStore: Failed to identity biometric style even though biometrics should be available, will not attach TID state header
%{public}@: Initializing singleton: %{public}p
BiometricState
%{public}@: Clearing biometric account identifier
BiometricAccountID
%{public}@: Failed to obtain base directory
%{public}@: Failed to load plist at path: %{public}@
%{public}@: Failed to find file at path: %{public}@
BiometricStateEnabled
%@:%@
%@:%@-ext
ISBiometricStore: Failed to configure label for DSID: %@, purpose: %{public}@
biometricState
biometricStateEnabled
TB,R,GisBiometricStateEnabled
lastRegisteredAccountIdentifier
T@"NSNumber",R
%@: Failing because predecessor failed
%@: Running with background priority for thread: %p
%@ caught %@ exception with stack trace: %@
%@ caught unknown exception: %@
%@: Restoring normal priority for thread: %p
%@: Temporarily disable %lu power assertions
parentOperation
T@"ISOperation",&,V_parentOperation
progress
T@"SSOperationProgress",R,N
operationRunLoop
T@"NSRunLoop",&,V_operationRunLoop
serializationLockIdentifiers
T@"NSArray",C
delegate
T@"<ISOperationDelegate>",W
shouldMessageMainThread
powerAssertionIdentifier
T@"NSString",&,V_powerAssertionIdentifier
uniqueKey
shouldRunWithBackgroundPriority
TB,V_shouldRunWithBackgroundPriority
error
T@"NSError",&,V_error
success
TB,V_success
progressWeight
Tq,R
Set thread to background priority: %p
Set thread to default priority: %p
explanation
isFree
message
username
cancelButtonAction
cancelButtonString
passwordButtonAction
passwordButtonString
paymentSheetInfo
touchIDButtonAction
body
T@"NSString",C,N,V_body
T@"NSString",C,N,V_username
TB,N,V_isFree
fallbackExplanation
T@"NSString",C
fallbackMessage
buttonType
Tq,V_buttonType
delayInterval
Td,N,V_delayInterval
waitUntilDone
TB,N,V_waitUntilDone
com.apple.iTunesStore.ISURLBagLoadingController.accessQueue
v24@?0@"NSDictionary"8@"NSError"16
bagDictionary
T@"NSDictionary",R,N
ISOperationQueueOperationCountChangedNotification
operationCount
adjustsMaxConcurrentOperationCount
Accept-Language
Range
X-Apple-Tz
Cookie
com.apple.iTunesStore.ISURLOperation
%@: Took serialization locks: %@
%@: Releasing serialization locks: %@
%@: Data-driven redirect from %@ to %@
data
POST
Content-Type
application/json
InternalBuild
X-Apple-Issuing-Process
X-Apple-Requesting-Process
X-Apple-NSURLCachePolicy
[%@] [DataProvider: %@] [Streamed Bytes: %llu]
bytes=%lld-
%@: Failed with error: %@ (%@)
%@: Invalid EV trust for challenge: %@
%@: Verified extended validation for challenge: %@
%@: Ignoring authentication challenge for store request
%@: Presenting authentication challenge
%@: Authentication challenge failed
[%@] Bytes Uploaded: %llu [Uploaded: %llu] [Expected: %llu]
[%@] We need a new NSInputStream; [%@]
[%@] We needed a new NSInputStream, but our delegate does not offer that facility; [%@]
%@: Received %ld redirect to %@ from %@
%@: Received headers for %@:
%@: Will not follow redirect: %@
%{public}@: [%{public}@] Attempting to determine the account identifier for %{public}@.
%{public}@: [%{public}@] accountDSIDOverride = %{public}@
%{public}@: [%{public}@] authenticatedAccountDSID = %{public}@
%{public}@: [%{public}@] authenticationContext.requiredUniqueIdentifier = %{public}@
%{public}@: [%{public}@] activeSandboxAccount.uniqueIdentifier = %{public}@
%{public}@: [%{public}@] activeAccount.uniqueIdentifier = %{public}@
%@: Finished loading: [%.2f, %.2fs] %@
%@: Finished loading %@
%@: Retry for error handler, after error: %@
%@: Too many redirects for %@
%@: Received %ld response: [%.2fs] %@
%@: Received %ld response: %@
%@: Did not receive expected %d response, resetting partial download: %@
%@: Skipping download because have entire file: %@
X-Apple-Client-Address
Content-Encoding
gzip
%@: Performing default handling for challenge: %@
%@: Continuing without credentials for challenge: %@
DEFAULT_ERROR_TITLE
CANNOT_CONNECT
CANNOT_CONNECT_TO_HOST_%@
%@: Sending headers for %@:
%@: Sending body for %@:
text
plist
json
%@: Received body for %@:
%@: Performing retry with URL %@
%@: Failed to retry connection: %@
%@: Started request at [%.2f] for %@
%@: Rejecting internal request
%@: Rejecting request due to invalid scheme: %@
%@: Making %@ request, with service type: %lu, for URL: %@
%@: No network connection, giving up: %@
%@: Retrying after a network transition: %@
%@: Giving up after too many retries: %@
%@: Waiting a bit before retry #%ld: %@
com.apple.iTunesStore.NSURLCache
Library
Caches
sharedCaches
kCFURLStorageSessionEnableVaryHeaderSupport
%@: Rejecting redirect due to invalid scheme: %@
NSURLRequestReloadIgnoringCacheData
NSURLRequestReloadIgnoringLocalAndRemoteCacheData
NSURLRequestReturnCacheDataElseLoad
NSURLRequestReloadRevalidatingCacheData
NSURLRequestReturnCacheDataDontLoad
NSURLRequestUseProtocolCachePolicy
Unknown
%@: Not enough space to download asset of size %lld
metricsLoadURLSessionDuration
T@"NSNumber",R,N
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
T@"SSBag",R,N
isURLBagRequest
TB,R,N
rawResponseData
T@"NSData",R,N
requestProperties
T@"SSURLRequestProperties",R,N
shouldDisableCellular
shouldRequireCellular
shouldSetCookies
sourceAppAuditTokenData
sourceAppBundleID
T@"NSString",R,N
URLCache
T@"NSURLCache",R,N
URLCacheID
_accountDSIDOverride
T@"NSNumber",&,N,S_setAccountDSIDOverride:,V__accountDSIDOverride
_loadsHTTPFailures
TB,G_loadsHTTPFailures,S_setLoadsHTTPFailures:,V_loadsHTTPFailures
_usesPrivateCookieStore
TB,G_usesPrivateCookieStore,S_setUsesPrivateCookieStore:,V_usesPrivateCookieStore
response
T@"NSURLResponse",&,V_response
HTTPArchive
T@"SSHTTPArchive",R
performanceMetrics
T@"ISURLRequestPerformance",R
_shouldSetCookies
TB,G_shouldSetCookies,S_setShouldSetCookies:,V_shouldSetCookies
tracksPerformanceMetrics
uploadProgressRequested
TB,N,GisUploadProgressRequested,V_uploadProgressRequested
activeURLRequest
T@"NSURLRequest",R,C,V_activeURLRequest
T@"<ISURLOperationDelegate>",W,D
dataProvider
T@"ISDataProvider",&,V_dataProvider
authenticationContext
T@"SSAuthenticationContext",&,V_authenticationContext
passThroughErrors
T@"NSArray",&,N,V_passThroughErrors
T@"SSURLRequestProperties",C
product
%{public}@: Running ISServerAuthenticationOperation. authenticationContext = %@ | authenticationContext.accountName = %{public}@
%{public}@: Skipping TouchID signature for no server challenge
%{public}@: Skipping TouchID signature because auth context tells us to suppress dialogs
%{public}@: Running ISBiometricAuthorizationDialogOperation. authenticationContext = %@ | authenticationContext.accountName = %{public}@
%{public}@: Server-driven authentication failed. error = %@
errorHandlerResponseType
Tq,V_errorHandlerResponseType
bagContext
T@"SSURLBagContext",&,V_bagContext
T@"ISOperation",W,V_parentOperation
biometricAuthenticationContext
T@"SSBiometricAuthenticationContext",&,V_biometricAuthenticationContext
biometricSessionDelegate
T@"<ISBiometricSessionDelegate>",V_biometricSessionDelegate
contentLength
Tq,V_contentLength
contentType
T@"NSString",&,V_contentType
authenticatedAccountCredentialSource
TQ,V_authenticatedAccountCredentialSource
authenticatedAccountDSID
T@"NSNumber",&,V_authenticatedAccountDSID
output
T@,&,V_output
T@"NSURL",&,V_redirectURL
Resolver: Lookup started
T@"NSURL",C,N,V_URL
resolvedAddresses
T@"NSArray",R
resolvedAddressStrings
Resolver: Lookup completed
Resolver: Lookup error (%ld/%d)
tiff
ISImageResource: Image Source: Failed to find path for bundle: %{public}@, resource: %{public}@
ISImageResource: Image Source: Failed image count: %{public}@
ISImageResource: Image Source: Failed to create image source for bundle: %{public}@, resource: %{public}@
ISImageResource: Image Source: Failed to create image for no resource name
PKPaymentContentItemImageAndScaleAttachment
urlBag
externalURLReplaceKey
externalURLSearchKey
guid-urls
regex
schemes
mobile-connection-type-allows
p2-search-parameters
trustedDomains
/WebObjects/MZ(Buy|Finance|FastFinance)[.]woa/
p2-url-resolution
p2-launch-host-suffix-whitelist
p2-launch-apple-store-host-patterns
p2-launch-apple-store-path-patterns
p2-launch-appstore-host-patterns
p2-launch-appstore-path-patterns
p2-launch-ebookstore-host-patterns
p2-launch-ebookstore-path-patterns
p2-launch-mobilestore-host-patterns
p2-launch-mobilestore-path-patterns
vpp-licensing-invitation-url-pattern
p2-url-section-name
ISURLBagDidLoadNotification
auth-can-post
%@: URL bag version is too old: %lld
viewArtist
audiobooks
podcasts
itunes-u
movies
music-videos
newsstand
ringtones
apps
tv-shows
eBooks
Books
eBook-search-parameters
WiFi-Music
p2-store-ns-search-parameters
p2-store-search-parameters
p2-music-search-parameters
p2-client-url-schemes
Newsstand
timestamp
com.apple.iTunesStore
network-constraints.plist
AppleMusicSubscriber
AppleMusicUndecided
AppleMusicDisabled
Music
MusicNS
UserRequestedSubscriptionHidden
com.apple.mobileipod
%@: Wrote network constraints to cache: %@
Library/Caches/com.apple.itunesstored/url-resolution.plist
%@: Wrote URL resolution information to cache
com.apple.itunesstored.changed-url-resolution
valid
TB,R,N,GisValid
invalidationTime
Td,N,V_invalidationTime
loadedFromDiskCache
TB,N,V_loadedFromDiskCache
storeFrontIdentifier
T@"NSString",C,N,V_storeFrontIdentifier
URLBagContext
T@"SSURLBagContext",C,N
URLBagDictionary
versionIdentifier
Tq,R,N
availableStorefrontItemKinds
T@"NSSet",R
send-content-restrictions-header
X-Apple-Restrictions
X-Apple-Synched-Store-Front
active-system-apps
ISURLBagStorefrontHeaderSuffixes
%@: Found an in-memory bag for %@.
%@: Skipping bag load for cached-only context: %@
%@: Created default URL bag for external requests
itunesstored
%@: Unable to set the store front header suffix because we don't have the correct bundle ID. bagContext.cacheKey = %@
storefront-header-suffix
com.apple.iTunesStore.LoadURLBag-%@
LastSynchedStoreFront
SBIconVisibility
v32@?0@"NSString"8Q16^B24
com.apple.springboard.appIconVisibilityPreferencesChanged
pingUrls
com.apple.iTunesStore.URLBagPingQueue
%@: Pinging URL: %@
%@: Could not create bag from URL response: %@, error: %@
accountDSID
T@"NSNumber",&,N,V_accountDSID
context
T@"SSURLBagContext",R,V_context
URLBag
T@"ISURLBag",R
PROMPT_REASON_NEW_FINGERS_FORMAT_%@
Mesa
PROMPT_REASON_NEW_FACE_FORMAT_%@
%{public}@: Could not determine biometric style with account name
PROMPT_REASON_NEW_FINGERS_ANONYMOUS
PROMPT_REASON_NEW_FACE_ANONYMOUS
%{public}@: Could not determine biometric style
%{public}@: Authentication challenge for invalid identity map did complete
%{public}@: Authentication challenge for invalid identity map timed out
%{public}@: Authentication challenge for invalid identity map failed with error: %{public}@
biometricStore
T@"ISBiometricStore",&,N,V_biometricStore
T@"SSBiometricAuthenticationContext",&,V_context
fallbackDialog
T@"ISDialog",&,N,V_fallbackDialog
touchIDDialog
T@"ISTouchIDDialog",&,N,V_touchIDDialog
outputBlock
T@?,C,V_outputBlock
X-Apple-Client-Versions
X-Apple-Connection-Type
X-Apple-Partner
buster
songId
machine-id
storefront
metricsUrl
eventTime
%llu
%lld
%@: Won't authenticate for non-https URL: %@
%@: URL is not trusted: %@
buyProduct
%{public}@: Re-executing %{public}@ because we had to reprovision machine data.
%@: Authentication failed: %@
AcceptTermsAndConditionsOperation
%@: Could not create term acceptance operation
%@: Terms and conditions acceptance failed: %@
%{public}@: Asked to reprovision machine data while executing %{public}@. We'll re-run the request. account = %{public}@
%{public}@: Asked to reprovision machine data while executing %{public}@, but we've re-run the request too many times. The request will fail.
%{public}@: Request, %{public}@, failed. We're setting authentication to NO for %{public}@.
%{public}@: Attempt retry after token error. error = %@
%{public}@: Attempted to get the storefront in order to run %{public}@. storefront = %{public}@ | account = %{public}@
%{public}@: The request already has a storefront. We'll use it to run the request. existingStorefront = %{public}@
%{public}@: We were told to append the storefront to the URL.
com.apple.springboard
SBParentalControlsEnabled
apps=%ld
movies=%ld
tv=%ld
explicit=off
explicit=on
in-app=off
in-app=on
[%{public}@]: [%{public}@] Handing off authentication to delegate
[%{public}@]: [%{public}@] Performing authentication due to %{public}@.
[%{public}@]: [%{public}@] Delegate successfully completed authentication
[%{public}@]: [%{public}@] Delegate authentication failed with error: %{public}@
[%{public}@]: [%{public}@] Authenticating locally, delegate request failed with error: %{public}@
v24@?0@"SSAuthenticateResponse"8@"NSError"16
tidContinue
v20@?0B8@"NSError"12
%@: Error resolving URL for bag key: %{public}@
%@: Using new bag for trust verfication of bag key: %@ URL: %@
%@: Using old bag for trust verfication of bag key: %@ URL: %@
%@: Could not resolve URL
%{public}@: Setting an account's storefront after running %{public}@. account = %{public}@ | storefrontID = %{public}@
ISStoreURLOperation
%@: Triggering MD action: %@
%@: Re-provisioning TouchID/Biometric token in response to server instruction (RP)
%@: Provisioning TouchID/Biometric enrollment in response to server instruction (EP)
mtTopic
X-Apple-Application-Site
iTunes Store environment is: %@
%{public}@: Reverse push received response header %ld
com.apple.itunesstored.PurchaseOperation
v16@?0@"NSError"8
ISMachineDataActionOperation
v28@?0B8@"NSError"12@"NSString"20
%{public}@: [%{public}@] Determining the storefront for %{public}@.
%{public}@: [%{public}@] The account has a storefront. We'll use it. storefront = %{public}@
%{public}@: [%{public}@] The account has no storefront, but the device does. We'll use it. storefront = %{public}@.
%{public}@: [%{public}@] Unable to determine a storefront.
authenticatedDSID
T@"NSNumber",&,V_authenticatedDSID
ignorePreexistingSecureToken
TB,N
T@"<ISStoreURLOperationDelegate>",W,D
T@"<ISBiometricSessionDelegate>",W,V_biometricSessionDelegate
canSendGUIDParameter
machineDataStyle
Tq,V_machineDataStyle
needsURLBag
TB,V_needsURLBag
needsAuthentication
TB,V_needsAuthentication
needsTermsAndConditionsAcceptance
TB,V_needsTermsAndConditionsAcceptance
performsMachineDataActions
SAPSession
T@"SSVFairPlaySAPSession",&
shouldAppendAuthKitHeaders
TB,N,V_shouldAppendAuthKitHeaders
shouldAppendStorefrontToURL
TB,N,V_shouldAppendStorefrontToURL
shouldSuppressUserInfo
TB,V_shouldSuppressUserInfo
shouldSendAKClientInfoHeaders
TB,V_shouldSendAKClientInfoHeaders
shouldSendDSIDHeader
TB,V_shouldSendDSIDHeader
shouldSendXTokenHeader
useUserSpecificURLBag
TB,V_useUserSpecificURLBag
urlKnownToBeTrusted
TB,V_urlKnownToBeTrusted
T@"SSBag",&,N,V_bag
T@"SSURLBagContext",R
URLBagRequest
TB,N,GisURLBagRequest,V_isURLBagRequest
SSErrorDomain
ISErrorDialogKey
UNTRUSTED_CERT_TITLE
UNTRUSTED_CERT_BODY
ISFatalError
ISClientPartnerHeaderChangedNotification
ISClientValueParameter
Software
GameCenter
iTunesU
Messages
matd
MusicPlayer
News
Podcasts
VideoPlayer
com.apple.gamecenter
com.apple.itunesu
iBooks/%@
iTunesU/%@
GameCenter/%@
Podcasts/%@
lock
T@"NSLock",&,N,V_lock
appleClientApplication
T@"NSString",C,V_appleClientApplication
userAgent
T@"NSString",C,V_userAgent
appleClientVersions
T@"NSString",R,V_appleClientVersions
identifier
T@"NSString",C,V_identifier
partnerHeader
T@"NSString",C,V_partnerHeader
clientProvidedHeaders
T@"NSDictionary",C,V_clientProvidedHeaders
com.apple.AppStore
com.apple.news
com.apple.MobileSMS
com.apple.ios.NewsstandStore
com.apple.WelcomeKit
ISCarrierSettingsDidChangeNotification
ISNetworkObserverCellularRestrictionChangedNotification
ISNetworkObserverModemRegistrationChanged
ISNetworkObserverOperatorNameChangedNotification
ISNetworkTypeChangedNotification
ISNetworkReachabilityFlagsChangedNotification
ISNetworkUsageStateChangedNotification
ShowiTunesStoreAutoDownloadOverCellularSwitch
com.apple.itunesstore.ISNetworkObserver
com.apple.itunesstore.ISNetworkObserver.notifications
UIApplicationDidEnterForegroundNotification
UIApplicationWillEnterForegroundNotification
com.apple.carrier
ISCellularOperatorName
v20@?0@"NSString"8B16
%@: Set network type "%@"
connectionTypeHeader
networkType
wifiEnabled
TB,R,GisWiFiEnabled
dataStatusIndicator
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
modemRegistrationStatus
operatorName
phoneNumber
providerName
networkReachabilityFlags
TI,R
lastNetworkTypeChangeTime
Td,R
usingNetwork
TB,R,GisUsingNetwork
shouldShowCellularAutomaticDownloadsSwitch
TB,R
%@: Reload network type after override change
reachable
wwan
automatic
on-demand
on-traffic
connection-required
direct
local
transient
%@: Reachability change: %d (%@)
%@: Not enough disk space for %lld, only %llu is available: %@
v28@?0C8Q12^{__CFError=}20
%@: Tried to write to invalid fd %d (%@)
%@: Found bytes to resume: %lld
%@: Truncating non-resumable file
%@: Hash mismatch for chunk: (%lld:%lld), %@ should be %@
%@: Write error (%zd should be %lld)
%@: Tried to write %lu bytes, but only wrote %ld bytes
lastHashError
T@"ISHashError",C,V_lastHashError
streamedBytes
Tq,V_totalBytesWritten
validatedBytes
Tq,V_validatedBytes
localFilePath
T@"NSString",&,V_localFilePath
shouldResumeFromLocalBytes
TB,V_shouldResumeFromLocalBytes
hashes
T@"NSArray",&,V_hashes
numberOfBytesToHash
Tq,V_numberOfBytesToHash
bytes=%lld-%lld,md5=%@
actualHashString
T@"NSString",C,N,V_actualHashString
expectedHashString
T@"NSString",C,N,V_expectedHashString
rangeEnd
Tq,N,V_rangeEnd
rangeStart
Tq,N,V_rangeStart
hashFailureHeaderString
%@: Skipping non-displayable dialog
v16@?0@"UITextField"8
cancel
v16@?0@"UIAlertAction"8
v12@?0B8
%@: Cannot present nil dialog
%@: Running process does not have a UIWindow to present dialog
%@: Cannot present dialog over nil view controller
%@: Failed to handle nil button. Index: %ld
UIAlertController
/System/Library/Frameworks/UIKit.framework/UIKit
UIAlertAction
UIWindow
UIScreen
UIViewController
UIApplication
DialogManager
%@: Skipping non-unique dialog
%@: Disabling %lu power assertions before user interaction
Daemon
%@: Retried user notification too many times
%@: Will retry user notification
userNotification
T@,&,V_userNotification
T@"<ISDialogOperationDelegate>",D
dialog
T@"ISDialog",&,V_dialog
performDefaultActions
TB,V_performDefaultActions
selectedButton
T@"ISDialogButton",&,V_selectedButton
textFieldValues
credential
T@"NSURLCredential",&,V_credential
challenge
T@"ISAuthenticationChallenge",&,V_challenge
localizedMessage
T@"NSString",&,V_localizedMessage
localizedTitle
T@"NSString",&,V_localizedTitle
hasPassword
password
T@"NSString",R,&
user
failureCount
userNameIsEditable
userNameIsEmail
sender
T@"<NSURLAuthenticationChallengeSender>",R
ENTER_PASSWORD
Tq,V_failureCount
TB,V_hasPassword
T@"NSString",&,V_password
T@"<NSURLAuthenticationChallengeSender>",V_sender
T@"NSString",&,V_user
TB,V_userNameIsEditable
%@:%ld
PROXY_AUTHENTICATION_MESSAGE_%@_%@
SERVER_AUTHENTICATION_MESSAGE_%@
SECURE_AUTH
INSECURE_AUTH
PROXY_AUTHENTICATION_TITLE
SERVER_AUTHENTICATION_TITLE
%02x
1.2.11
iTunesMetadata.plist
itemId
betaExternalVersionId
softwareVersionExternalIdentifier
variantID
System
%@: (%@, %@:%@)
StoreKit
sandboxReceipt
receipt
appleId
itemName
softwareVersionExternalIdentifiers
FamilyID
didCheckLaunchProhibited
TB,N,V_didCheckLaunchProhibited
receiptExpirationDate
T@"NSDate",R,N,V_receiptExpirationDate
removableStatus
TQ,R,N,V_removableStatus
vppStateFlags
TQ,R,N
accountIdentifier
T@"NSString",C,N,V_accountIdentifier
beta
TB,N,GisBeta,V_beta
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
bundleShortVersionString
T@"NSString",C,N,V_bundleShortVersionString
bundleVersion
T@"NSString",C,N,V_bundleVersion
containerPath
T@"NSString",C,N,V_containerPath
contentRating
T@"SSItemContentRating",C,N,V_contentRating
deviceIdentifierForVendor
T@"NSString",C,N,V_deviceIdentifierForVendor
familyAccountIdentifier
T@"NSNumber",C,N,V_familyAccountIdentifier
itemIdentifier
T@"NSNumber",&,N,V_itemIdentifier
T@"NSString",C,N,V_itemName
launchProhibited
TB,N,GisLaunchProhibited,V_launchProhibited
placeholder
TB,N,GisPlaceholder,V_placeholder
profileValidated
TB,N,GisProfileValidated,V_profileValidated
softwareType
T@"NSString",C,N,V_softwareType
T@"NSNumber",&,N,V_storeFrontIdentifier
vendorName
T@"NSString",C,N,V_vendorName
T@"NSNumber",&,N,V_versionIdentifier
versionOrdering
T@"NSArray",C,N,V_versionOrdering
hasMIDBasedSINF
TB,N,V_hasMIDBasedSINF
missingRequiredSINF
TB,N,V_missingRequiredSINF
%@: Loading software map
%@: Could not load software map
%@: Loaded software map
com.apple.iTunesStore.SoftwareMap
%{public}@: Creating an ISStoreAuthenticateOperation. callStack = %{public}@
%{public}@: Running an ISStoreAuthenticationOperation. authenticationContext = %@ | authenticationContext.accountName = %{public}@
%{public}@: Received authenticate response. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@ | response.responseDictionary = %@
%{public}@: Authentication failed. error = %@
com.apple.iTunesStore.auth.%@
%@: Authentication successful
%@: Storefront changed during authentication
%@: Authentication canceled
%@: Authentication failed
%@: Authentication encountered unhandled authenticateResponseType: %ld
parentViewController
T@,&,V_parentViewController
T@"SSAuthenticationContext",R
authenticateResponse
T@"SSAuthenticateResponse",R
%{public}@: Could not create authentication operation.
[%@]: What do we do with this: %@
assetType
body-max-length
infoURL
itemID
nickname
nicknameConfirmed
nickname-max-length
rating
save-user-review-url
title
title-max-length
metadata
review-info
%@: Could not remove draft: %@
%@: Could not open draft. Error = %{public}@
%@: Could not create directory: %@
%{public}@: Could not save draft: %{public}@
%llu.review
Reviews
supportsSecureCoding
hasSavedDraft
T@"NSString",&,N,V_body
T@"NSString",&,N,V_nickname
Tf,N,V_rating
T@"NSString",&,N,V_title
Tq,N,V_assetType
TQ,N,V_itemIdentifier
T@"NSURL",&,N,V_infoURL
submitURL
T@"NSURL",&,N,V_submitURL
bodyMaxLength
TQ,N,V_bodyMaxLength
nicknameIsConfirmed
TB,N,V_nicknameIsConfirmed
nicknameMaxLength
TQ,N,V_nicknameMaxLength
titleMaxLength
TQ,N,V_titleMaxLength
com.apple.itunesstored.ISBiometricAuthorizationDialogOperation
%{public}@: Failed to load URL bag with error: %{public}@
%{public}@: Failed to install metrics event with error: %{public}@
%{public}@: Failed to flush metrics events with error: %{public}@
%{public}@: Metrics failed with no bag key
%{public}@: Metrics failed with no bag
v24@?0@"NSString"8@"NSError"16
%{public}@: Failed to obtain biometric signature with error: %{public}@
LAErrorDomain
T@"ISDialog",&,V_fallbackDialog
T@"ISTouchIDDialog",&,V_touchIDDialog
buyParams
T@"NSDictionary",C,V_buyParams
metricsDictionary
T@"NSDictionary",C,V_metricsDictionary
T@"ISDialog",R,V_dialog
T@"NSURL",R,V_redirectURL
T@"ISDialogButton",R,V_selectedButton
+[ISSSURLBag URLBagForContext:] is not supported
v24@?0@"ISURLBag"8@"NSError"16
v16@?0@"SSURLBagContext"8
v24@?0@8@"NSError"16
%@: Failed with failure type: %@
backgroundReview
TB,GisBackgroundReview,V_backgroundReview
status-code
%@: Received failure response with no dialog
REVIEW_POST_FAILED_ERROR
%.2f
review
T@"ISReview",&,V_review
%{public}@: Running for request %{public}@.
%{public}@: Unrecognized machine-data action %{public}@.
machineDataRequest
T@"SSMachineDataRequest",R
blocksPurchaseRequests
hidesServerDrivenDialogs
resultBlock
T@?,C
syncState
dictionary
T@"NSDictionary",R
optionFlags
allowedRetryCount
Tq,V_allowedRetryCount
currentRetryCount
Tq,V_currentRetryCount
userInfo
T@"NSDictionary",&,V_userInfo
http://?action=account
&dsid=%@
&continuation=%@
CANCEL
EMAIL
USERNAME
PASSWORD
force-authentication
display-count-key
kind
authorization
cancelButton
max-display-count
noDefaultButton
otherButtonAction
otherButtonString
okButtonAction
okButtonString
okButton
ISDialogReceivedNotification
ISDialogDisplayCount-%@
v32@?0@8Q16^B24
touchIDContinueToken
T@"NSString",C,V_touchIDContinueToken
buttons
T@"NSArray",&,V_buttons
defaultButtonIndex
Tq,V_defaultButtonIndex
oneButtonPerLine
TB,V_oneButtonPerLine
unlockActionButtonIndex
Tq,V_unlockActionButtonIndex
groupsTextFields
TB,V_groupsTextFields
textFields
T@"NSArray",&,V_textFields
T@"NSString",&,V_message
T@"NSString",&,V_title
allowDuplicates
TB,V_allowDuplicates
authorizationIsForced
TB,V_authorizationIsForced
dismissOnHomeButton
TB,V_dismissOnHomeButton
dismissOnLock
TB,V_dismissOnLock
expectsResponse
TB,V_expectsResponse
shouldDismissAfterUnlock
TB,V_shouldDismissAfterUnlock
shouldDisplayAsTopMost
TB,V_shouldDisplayAsTopMost
shouldPendInSetupIfNotAllowed
TB,V_shouldPendInSetupIfNotAllowed
displaysOnLockscreen
TB,V_displaysOnLockscreen
TB,V_noDefaultButton
Tq,V_kind
T@"SSAuthenticationContext",C,V_authenticationContext
displayCountKey
maximumDisplayCount
paymentSheet
T@"SSPaymentSheet",R,V_paymentSheet
displayable
TB,R,GisDisplayable
action
buy-params
OpenURL
goback
redeem-code
RetryRestoreAll
Review
Goto
GotoFinance
ServiceAction
FamilyPermissionAction
code
subtarget
PurchaseController
AskPermissionActionOperation
T@"NSDictionary",&,V_dictionary
actionType
Ti,V_actionType
parameter
T@,&,V_parameter
shouldContinueTouchIDSession
TB,R,V_tidContinue
T@"NSString",C,V_subtarget
urlType
Tq,V_urlType
Tq,V_tag
keyboardType
Tq,V_keyboardType
secure
TB,GisSecure,V_secure
value
T@"NSString",&,V_value
com.apple.itunesstored.invalidatedSoftwareMap
ISSoftwareMapInvalidatedExternalNotification
ISSoftwareMapInvalidatedNotification
v24@?0@"LSBundleProxy"8^B16
v16@?0@"NSObject<OS_xpc_object>"8
local-software
iTunesMetadata
adam-id
installed-version-identifier
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
v16@?0@"ISSoftwareApplication"8
applications
T@"NSArray",R,N
Noticed software map change, invalidating map
com.apple.iTunesStore.URLBagBackend
ISURLBagBackend Diagnostics
KEYS
Total Reused Keys: %li (%f)
Total Copied Keys: %li (%f)
VALUES
Total Delta Values: %li (%f)
Total Duplicate Values: %li (%f)
Copied Keys: %@
v32@?0@"NSString"8@16^B24
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
bagValuesDictionary
T@"NSMutableDictionary",&,N,V_bagValuesDictionary
bagValuesList
T@"SSDoubleLinkedList",&,N,V_bagValuesList
application/x-apple-plist
clientData
machineId
md-sync-machine
dsId
amd-sync-machine
allowsBootstrapCellularData
protocolVersion
com.apple.iTunesStore.ISUniqueOperationQueueAdjusts
Cache-Control
max-age
Expires
Content-Range
ISITunesSyncBeganNotification
%@: Setting badge (%@, %@)
com.apple.iTunesStore.set-app-badge
badgeValue
T@"NSString",&,V_badgeValue
T@"NSString",&,V_bundleIdentifier
ServerAuthenticationOperation
%{public}@: Performing server driven authentication. request = %@ | request.authenticationContext.accountName = %{public}@
v24@?0@"SSVServerAuthenticateResponse"8@"NSError"16
performedButton
T@"ISDialogButton",&,V_performedButton
performsButtonAction
TB,V_performsButtonAction
T@"ISPropertyListProvider",&,V_dataProvider
Could not load library [%ld].  dlerror is: %s
ISWeakLibraryLoaded
libAccessibility.dylib
Frameworks
Accounts.framework
Accounts
PrivateFrameworks
AccountSettings.framework
AccountSettings
AppleAccount.framework
AppleAccount
AppleAccountUI.framework
AppleAccountUI
AskPermission.framework
AskPermission
AssetsLibrary.framework
AssetsLibrary
AudioToolbox.framework
AudioToolbox
BiometricKit.framework
BiometricKit
BulletinBoard.framework
BulletinBoard
Celestial.framework
Celestial
Contacts.framework
Contacts
ContactsUI.framework
ContactsUI
CoreDuet.framework
CoreDuet
CoreMedia.framework
CoreMedia
CoreTelephony.framework
CoreTelephony
ManagedConfiguration.framework
ManagedConfiguration
MediaPlayer.framework
MediaPlayer
MessageUI.framework
MessageUI
MobileBackup.framework
MobileBackup
MobileInstallation.framework
MobileInstallation
MusicLibrary.framework
MusicLibrary
PassKit.framework
PassKit
PhotoLibrary.framework
PhotoLibrary
Radio.framework
Radio
Social.framework
Social
StoreKit.framework
StoreKitUI.framework
StoreKitUI
StreamingZip.framework
StreamingZip
ToneLibrary.framework
ToneLibrary
AppStoreDaemon.framework
AppStoreDaemon
LocalAuthentication.framework
LocalAuthentication
MobileKeyBag.framework
MobileKeyBag
SafariServices.framework
SafariServices
CryptoTokenKit.framework
CryptoTokenKit
BookLibrary.framework
BookLibrary
CoreGraphics.framework
CoreGraphics
DeviceIdentity.framework
DeviceIdentity
properties
retryCount
cachePolicy
headers
method
query
timeout
urls
expectedlength
bagtype
T@"NSString",&
HTTPBody
T@"NSData",&
HTTPBodyStream
T@"NSInputStream",&
HTTPMethod
queryStringDictionary
T@"NSDictionary",&
primaryURL
T@"NSURL",R
URLs
T@"NSArray",&
timeoutInterval
customHeaders
URLBagType
expectedContentLength
Must provide a configuration
%@: Reloaded cache (%@, disk: %lu, memory: %lu)
persistentIdentifier
currentDiskUsage
currentMemoryUsage
diskCapacity
memoryCapacity
TQ,N,V_diskCapacity
TQ,N,V_memoryCapacity
T@"NSString",C,N,V_persistentIdentifier
operationQueue
T@"ISOperationQueue",&,N,V_operationQueue
mainOperation
T@"ISURLOperation",R,N
update-touch-id-settings
touchIdAttestation
extendedAttestation
primaryX509Chain
extendedX509Chain
%{public}@: Failed to find primary cert chain, item count: %@
%{public}@: Failed to find extended cert chain, item count: %@
%{public}@: Authentication prompt style: %{public}@
T@"NSNumber",C,N,V_accountIdentifier
attestationStringPrimary
T@"NSString",C,N,V_attestationStringPrimary
attestationStringExtended
T@"NSString",C,N,V_attestationStringExtended
certChainPrimary
T@"NSArray",C,N,V_certChainPrimary
certChainExtended
T@"NSArray",C,N,V_certChainExtended
regeneratePublicKey
TB,V_regeneratePublicKey
T@?,C,V_resultBlock
shouldSuppressAuthPrompts
TB,V_shouldSuppressAuthPrompts
status
Tq,R,V_status
appExtVrsId
salableAdamId
Invalid request
request
T@"SSRequest",R
com.apple.itunesstored.ISBiometricOptInOperation
BIO_OPT_IN_EXPLANATION
BIO_OPT_IN_FACE_EXPLANATION
%{public}@: Failed to determine biometric style for metrics event
PASSCODE_TITLE
PASSCODE_TITLE_FACE
%{public}@: Failed to identify device biometric style for opt-in operation
DevicePasscodePromptOperation
v32@?0q8@"NSData"16@"NSError"24
PASSCODE_INCORRECT
%{public}@: Failed to determine biometric style for dialog
BIO_OPT_IN_NOT_NOW
BIO_OPT_IN_OK
%{public}@: UpdateTouchIDSettings request completed with status: %{public}@
%{public}@: UpdateTouchIDSettings request failed with status: %{public}@, error: %{public}@
v24@?0q8@"NSError"16
%{public}@: Biometrics enabled and cached for DSID: %@
%{public}@: Biometric opt-in timeout
promptUser
topicName
T@"NSString",C,V_topicName
update-password-settings
md-finish-provisioning
amd-finish-provisioning
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1445.0.40.1/src/ISOpenURLOperation.m
<Unknown File>
Request must be resolvable
%@: No URL to open for request: %@
%@: Opening URL: %@ with client states: %@
%@: Opening converted URL: %@
openURLRequest
T@"ISOpenURLRequest",R
%@: (%@, %@)
T@"NSURL",&,N,V_url
URLBagKey
T@"NSString",C,N,V_urlBagKey
interruptsKeybagRefresh
TB,N,V_interruptsKeybagRefresh
ITunesStoreURL
TB,N,GisITunesStoreURL,V_isITunesStoreURL
targetIdentifier
T@"NSString",C,N,V_targetIdentifier
Terminated
Background Task Suspended
Background Running
Foreground Running
Process Server
Foreground Running Obscured
tidContinueToken
v32@?0@8@16^B24
account
dsid
http://?%@
com.apple.Music.StoreFlowExtension
itms-watch
itms-watchs
p2-capabilities-dialog
%@: No bag key, posting default dialog
vCap%ld
cap%ld
%@: Failed, so posting default dialog
HARDWARE_INCOMPATIBLE_ERROR_BODY_IPOD
HARDWARE_INCOMPATIBLE_ERROR_BODY_IPAD
HARDWARE_INCOMPATIBLE_ERROR_BODY_IPHONE
HARDWARE_INCOMPATIBLE_ERROR_TITLE
mismatches
requiredCapabilities
T@,R
com.apple.itunesstored.lock.createaccount
MCProfileConnection
MCFeatureAccountModificationAllowed
%{public}@: Refusing to create a new account. Account creation is restricted.
%{public}@: Prompting the user to see if they want to create a new account.
com.apple.TestFlight
com.apple.iTunesU
%{public}@: The user chose to use an existing account.
%{public}@: The user chose to create a new account.
%{public}@: The user canceled the prompt.
USE_EXISTING_ACCOUNT
CREATE_NEW_ACCOUNT
SIGN_IN
SIGN_IN_WITH_REASON
responseType
Tq,N,V_responseType
reason
T@"NSString",&,N,V_reason
ACAccountStore
/System/Library/PrivateFrameworks/Accounts.framework/Accounts
%@: Could not parse JSON: %@
parserOptions
TQ,V_options
%@: No account ID, can't personalize offers
%@: Could not load URL bag: %@
personalized-buy-buttons
%@: Missing bag key: %@
owns-data
action-display-name-
button-text-
%@: No URL for item type: %@
ids=
%@: Issuing %lu requests
%@: Invalid URL: %@
personalizeOffersReqeust
T@"ISPersonalizeOffersRequest",R
T@"SSPersonalizeOffersResponse",R
T@"NSNumber",&,N,V_accountIdentifier
allItemTypes
startTime
Td,N,V_startTime
URLResponse
T@"NSURLResponse",C,N,V_urlResponse
finishInterval
Td,R,N
receivedResponseInterval
renderBeginInterval
renderEndInterval
https://init.itunes.apple.com/bag.xml?ix=6
https://sandbox.itunes.apple.com/bag.xml?ix=6
locale
com.apple.iTunesStore.ISURLBagCache.%p
SandboxSessionURL
InitiateSessionURL
AppleLocale
%@: Cached URL bag with cache key: %@
v32@?0@"NSString"8@"ISURLBag"16^B24
%@: Our cached bag is expired, and the context doesn't allow expired bags. Returning nil.
%@: Invalidating URL bags after storefront change
v32@?0@"NSString"8@"NSString"16^B24
ISURLBagCache: Invalidating bags after notification
%{public}@: [%{public}@] Running logout operation.
bookkeeperDomain:com.apple.upp
put-parameters
mzbookkeeper
notification-type
sbsync
logout
%{public}@: [%{public}@] Disabling automatic download kinds.
%{public}@: [%{public}@] Successfully disabled automatic download kinds.
%{public}@: [%{public}@] Failed to disable automatic download kinds. error = %{public}@
%{public}@: [%{public}@] Disabling bookkeeper.
push-notification-types
%{public}@: [%{public}@] Unable to disable bookkeeper. Bag is misconfigured and doesn't contain the push notification types.
add-push-notification-type-url
%{public}@: [%{public}@] Unable to disable bookkeeper. Bag is misconfigured and doesn't contain add push notification type url.
%{public}@: [%{public}@] Successfully disabled bookkeeper.
%{public}@: [%{public}@] Failed to disable bookkeeper. error = %{public}@
%{public}@: [%{public}@] Sending logout request.
%{public}@: [%{public}@] An error occurred while sending logout request. error = %{public}@
T@"SSAccount",&,N,V_account
logKey
T@"NSString",&,N,V_logKey
ISProtocolNotificationSelectFooterSection
ISProtocolKeySection
endId
startId
failureType
metrics
tid-dialog
trigger-download
hasFailedTouchIDChallenge
true
%{public}@: Failing dialog with token error. error = %@
%@: Unsupported protocol version, redirecting to: %@
%@: Pinging %@
%@: Property list serialization failed with nil data
%@: Couldn't parse protocol: %@
%@: Error processing protocol: %@
%@: Triggering queue check
%{public}@: Checking for server verification failure
%{public}@: Did server verification occur? %{public}@
%{public}@: Setting accountName on context to active account
%{public}@: Setting accountIdentifier on context to active account
%@: Trigger in-app queue check: [%ld, %@]
%@: Performing actions: %@
%@: Plist-driven redirect to: %@
%@: Invalidating URL bag
%@: Opening URL action: %@
%{public}@: The server told us to set the active account. Saving %{public}@.
%{public}@: Successfully set %{public}@ as the active account.
%{public}@: Failed to set %{public}@ as the active account. error = %{public}@
%{public}@: Saw token failure: %d
%@: Select footer section: %@
errorNumber
shouldPostFooterSectionChanged
TB,V_shouldPostFooterSectionChanged
shouldProcessAccount
TB,V_shouldProcessAccount
shouldProcessAuthenticationDialogs
TB,V_shouldProcessAuthenticationDialogs
shouldProcessDialogs
TB,V_shouldProcessDialogs
shouldProcessDialogsOutsideDaemon
TB,V_shouldProcessDialogsOutsideDaemon
shouldProcessProtocol
TB,V_shouldProcessProtocol
shouldProcessTouchIDDialogs
shouldTriggerDownloads
TB,V_shouldTriggerDownloads
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
?456789:;<=
 !"#$%&'()*+,-./0123
Operation was successful
The given translation buffer was not of sufficient size
The input did not represent a fully formed stream of octet couplings
Invalid data
init
objectForKey:
alloc
initWithString:
release
dealloc
initWithDictionary:
redirectURL
setRedirectURL:
_redirectURL
defaultCenter
_invalidateLookupCache:
addObserver:selector:name:object:
removeObserver:
lock
_populateBundleDictionary
copy
unlock
_identifierForBundleIdentifier:
_urlForBundleIdentifier:
length
applicationProxyForIdentifier:
isRestricted
dictionary
sharedCache
contextWithBagType:
URLBagForContext:
valueForKey:
class
isKindOfClass:
countByEnumeratingWithState:objects:count:
integerValue
numberWithInteger:
setObject:forKey:
bundleDictionary
_fallbackItemIdentifier:
isEqualToString:
numberWithInt:
setScheme:
setHost:
setPath:
stringValue
stringWithFormat:
setQuery:
urlForBundleIdentifier:
isRestrictedAppBundleIdentifier:
itemIdentifierForBundleIdentifer:
.cxx_destruct
_bundleDictionary
_lock
retain
autorelease
currentDevice
productVersion
setSystemVersion:
_deviceClass
setPlatformName:
sharedInstance
copyDeviceGUID
sharediTunesStoreConfig
sharedConfig
shouldLog
OSLogObject
shouldLogToDisk
stringByReplacingOccurrencesOfString:withString:
stringByAppendingPathComponent:
initWithContentsOfFile:
initWithObjectsAndKeys:
sharedStorage
dictionaryWithObject:forKey:
removeCookiesWithProperties:
deviceIdentifier
setSharedInstance:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retainCount
zone
hash
superclass
description
debugDescription
checkCapabilities:withMismatches:
copyProtocolConditionalContext
deviceBiometricStyle
deviceName
guid
hardwareName
releasePowerAssertion:
serialNumber
systemName
takePowerAssertion:
requestFreeSpace:atPath:withOptions:completionBlock:
resetLocationAndPrivacy
supportedOfferDeviceForDevices:
_biometricStyle
_daemonLaunchCount
_dispatchQueue
_guid
_lastFreeSpaceRequest
bundleWithIdentifier:
localizedStringForKey:value:table:
componentsSeparatedByString:
count
objectAtIndex:
unescapedStringForString:
_URLQueryParameterValueAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
string
keyEnumerator
nextObject
escapedStringForString:
appendFormat:
stringByRemovingPercentEncoding
query
copyDictionaryForQueryString:unescapedValues:
absoluteString
URLWithString:
rangeOfString:
deleteCharactersInRange:
hasSuffix:
appendString:
copyQueryStringDictionaryWithUnescapedValues:
queryStringForDictionary:escapedValues:
scheme
lowercaseString
containsObject:
initWithObjects:
substringFromIndex:
stringByAppendingString:
mutableCopy
replaceOccurrencesOfString:withString:options:range:
URLQueryAllowedCharacterSet
removeCharactersInString:
URLByAppendingQueryParameter:value:
urlBySettingQueryStringDictionary:
isSafeExternalURL
schemeSwizzledURL
urlByReplacingSchemeWithScheme:
enumerateQueryWithBlock:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
initWithUTF8String:
copyUTF8StringOfLength:
canPerformBiometricOptIn
biometricState
setCountLimit:
arrayWithObjects:count:
pathWithComponents:
fileExistsAtPath:
dictionaryWithContentsOfFile:
initWithServerResponse:
removeObjectForKey:
keychainLabelForAccountID:purpose:
currentClient
identifier
diskBasedPaymentSheet
keychainLabelForAccountID:
addContextToCache:withToken:
biometricAvailabilityForAccountIdentifier:
canPerformExtendedBiometricActionsForAccountIdentifier:
clearLastRegisteredAccountIdentifier
fetchContextFromCacheWithToken:evict:
identityMapCount
isBiometricStateEnabled
isIdentityMapValidForAccountIdentifier:
keyCountForAccountIdentifier:
lastRegisteredAccountIdentifier
registerAccountIdentifier:
saveIdentityMapForAccountIdentifier:
setBiometricState:
createAttestationDataForAccountIdentifier:purpose:error:
createX509CertChainDataForAccountIdentifier:purpose:error:
deleteKeychainTokensForAccountIdentifier:error:
publicKeyDataForAccountIdentifier:purpose:error:
signData:context:error:
_contextCache
setError:
setSuccess:
_keepAliveTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
invalidate
isCancelled
setParentOperation:
_addSubOperation:
checkInOperation:
main
dispatchCompletionBlock
_removeSubOperation:
error
success
arrayWithObject:
addOperations:waitUntilFinished:
stopRunLoop
operationRunLoop
getCFRunLoop
cancel
makeObjectsPerformSelector:
uniqueKey
currentQueue
shouldFailAfterUniquePredecessorError:
powerAssertionIdentifier
shouldRunWithBackgroundPriority
currentThread
_main:
callStackReturnAddresses
_failAfterException
checkOutOperation:
parentOperation
copyActivePowerAssertionIdentifiers
addObject:
serializationLockIdentifiers
lockWithIdentifier:
shouldMessageMainThread
completionBlock
delegate
operationDidTakeSerializationLocks:
delegateDispatch:
operation:updatedProgress:
_sendErrorToDelegate:
currentRunLoop
setOperationRunLoop:
setMaxValue:
sendProgressToDelegate
_sendWillStartToDelegate
run:
maxValue
setCurrentValue:
setEstimatedTimeRemaining:
_sendSuccessToDelegate
removeObject:
operation:failedWithError:
operationFinished:
operationWillStart:
progress
progressWeight
runRunLoopUntilStopped
runSubOperation:returningError:
runSubOperation:onQueue:error:
setDelegate:
setShouldMessageMainThread:
copySerializationLocks
releasePowerAssertionsDuringBlock:
sendDidTakeSerializationLocks
setSerializationLockIdentifiers:
setPowerAssertionIdentifier:
setShouldRunWithBackgroundPriority:
_delegate
_error
_operationRunLoop
_parentOperation
_progress
_shouldMessageMainThread
_powerAssertionIdentifier
_serializationLockIdentifiers
_subOperations
_shouldRunWithBackgroundPriority
_stopped
_success
_init
_parseDialogDictionary:
explanation
message
setExplanation:
setMessage:
buttons
buttonType
dictionaryByEvaluatingConditions
setBody:
boolValue
setIsFree:
setTitle:
setUsername:
setButtonType:
loadFromDictionary:
setButtons:
buyParams
initWithServerResponse:buyParams:
initWithDialogDictionary:
fallbackExplanation
fallbackMessage
setFallbackExplanation:
setFallbackMessage:
buttonForButtonType:
paymentSheet
body
username
isFree
_isFree
_paymentSheet
_body
_username
_buttonType
initWithTarget:
setWaitUntilDone:
setDelayInterval:
blockingMainThreadProxy
delayedProxy:
mainThreadProxy
invoke
selector
adjustedTargetForSelector:
setTarget:
invokeInvocation:
methodSignatureForSelector:
forwardInvocation:
_target
retainArguments
performSelector:withObject:afterDelay:
delayInterval
_delayInterval
performSelectorOnMainThread:withObject:waitUntilDone:
waitUntilDone
_waitUntilDone
_reloadURLBagAllowingUpdateUsingExistingBagDictionary:
_handleNetworkReachabilityFlagsDidChangeNotification:
_handleAccountStoreDidChangeNotification:
defaultStore
_handleStoreFrontDidChangeNotification:
removeObserver:name:object:
weakObjectsHashTable
networkReachabilityFlags
isLikelyToReachRemoteServerWithReachabilityFlags:
_updateBagWithDictionary:error:
initWithURLBagContext:
existingBagDictionary
valueWithWeakObject:
weakObjectValue
_didCompleteLoadingBagDictionary:withError:
loadWithCompletionBlock:
isEqualToDictionary:
allObjects
bagDidChange:
sharedBagLoadingController
bagDictionary
addBagObserver:
removeBagObserver:
requestAccessToBagUsingBlock:
_accessQueue
_hasSuccessfullyLoadedBag
_bagDictionary
_bagAccessRequestBlocks
_bagLoadingError
_bagObservers
_URLBag
setMaxConcurrentOperationCount:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
cancelAllOperations
addOperation:
operationCount
maxConcurrentOperationCount
name
operations
setName:
setSuspended:
postNotificationName:object:
mainQueue
adjustsMaxConcurrentOperationCount
setAdjustsMaxConcurrentOperationCount:
observeValueForKeyPath:ofObject:change:context:
_queue
sharedManager
initWithSessionManager:
userAgent
initWithRequestProperties:
requestProperties
_copyAuthenticationContext
dataProvider
beginUsingNetwork
setAuthenticationContext:
_run
isStream
streamCancelled
endUsingNetwork
_activeURL
_sanitizedURLForURL:
_requestProperties
_copyQueryStringDictionaryForRedirect:
setRequestParameters:
newRequestWithURL:
_setActiveURLRequest:
caseInsensitiveCompare:
timeoutInterval
initWithURL:cachePolicy:timeoutInterval:
HTTPBody
HTTPBodyStream
HTTPHeaders
HTTPMethod
requestParameters
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
cachePolicy
setHTTPShouldUsePipelining:
networkServiceType
setNetworkServiceType:
_CFURLRequest
shouldDecodeResponse
_usesPrivateCookieStore
setHTTPShouldHandleCookies:
setHTTPBody:
setHTTPBodyStream:
setHTTPMethod:
URLBagType
_accountIdentifier
cookieHeadersForURL:userIdentifier:scope:
addValue:forHTTPHeaderField:
setValue:forHTTPHeaderField:
valueForHTTPHeaderField:
copyUserAgent
userAgentComponents
insertObject:atIndex:
componentsJoinedByString:
mainBundle
bundleIdentifier
clientBundleIdentifier
_stringForCachePolicy:
currentAcceptLanguage
localTimeZone
secondsFromGMT
numberWithDouble:
setup
streamedBytes
metricsLoadURLSessionDuration
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
shouldDisableCellular
requiresCellularDataNetwork
clientAuditTokenData
clientAuditBundleIdentifier
URLCache
_sharedCacheStorageSession
sharedCFURLCache
_initWithExistingCFURLCache:
URLCacheID
_decodedDataForData:
_handleFinishedLoading
_sanitizedDescriptionForObject:
_errorWithDefaultStringsForError:
_stopConnection
operation:dispositionForAuthenticationChallenge:
operation:credentialForAuthenticationChallenge:
protectionSpace
authenticationMethod
_defaultAuthChallengeDispositionForChallenge:
requiresExtendedValidationCertificates
serverTrust
credentialForTrust:
isITunesStoreRequest
initWithAuthenticationChallenge:
setChallenge:
credential
isUploadProgressRequested
operationType
setCanPause:
resetSnapshots
setOperationType:
setUnits:
_updateProgress
operation:needNewBodyStream:
currentRequest
statusCode
allHeaderFields
sharediTunesStoreConfigOversize
_sanitizedStringForString:
_shouldFollowRedirectWithRequest:error:
_shouldSetCookies
setCookiesForHTTPResponse:userIdentifier:scope:
_handleRedirectRequest:response:
_handleReceivedData:
isStreamComplete
_timingData
eventFromTimingData:delegate:task:error:
URLSession:task:didCompleteWithEvent:error:
_handleReceivedResponse:
sharedAccountsConfig
_accountDSIDOverride
isEqualToNumber:
authenticatedAccountDSID
unsignedLongLongValue
authenticationContext
requiredUniqueIdentifier
activeSandboxAccount
uniqueIdentifier
activeAccount
operation:sanitizedStringForString:
setFinishTime:
finishInterval
closeStream
_processResponseData:error:
operation:processData:error:
response
setResponse:
parseData:returningError:
errorHandlerResponseType
_logResponseBody:
_sendOutputToDelegate:
output
countForObject:
_errorWithDomain:code:
handleRedirectFromDataProvider:error:
_retry
appendData:
setReceivedResponseTime:
setURLResponse:
receivedResponseInterval
handleResponse:
_sendResponseToDelegate:
_isPassThroughStatus:
_loadsHTTPFailures
maxExpectedContentLength
setContentLength:
MIMEType
setContentType:
resetStream
_sendContentLengthToDelegate:
_validateContentLength:error:
allHTTPHeaderFields
_willSendRequest:
numberWithBool:
shouldDisableCellularFallback
isLargeDownload
initWithCapacity:
_iTunesStore_valueForHTTPHeader:
sender
performDefaultHandlingForAuthenticationChallenge:
localizedDescription
domain
code
bundleForClass:
host
initWithFormat:
initWithURL:
resolvedAddresses
bytes
passThroughErrors
initWithData:encoding:
rangeOfString:options:
continueWithoutCredentialForAuthenticationChallenge:
_sendRequestToDelegate:
dataTaskWithRequest:delegate:
resume
_logRequest:
setStartTime:
URLs
_runRequestWithURL:dataConnectionServiceType:
allowedRetryCount
requiresExternal
_isExternalURL:
requiresHTTPS
_stopIfCancelled
cancelPreviousPerformRequestsWithTarget:selector:object:
networkType
lastNetworkTypeChangeTime
sleepForTimeInterval:
operation:didDiscoverContentLength:
initWithLongLong:
operation:finishedWithOutput:
operation:willSendRequest:
operation:didReceiveResponse:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
shouldFollowRedirectWithRequest:returningError:
streamDidFailWithError:
snapshot
canStreamContentLength:error:
URLSession:task:decodedDataForResponseData:
URLSession:task:didFinishCreatingHTTPArchive:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
isURLBagRequest
rawResponseData
shouldRequireCellular
shouldSetCookies
sourceAppAuditTokenData
sourceAppBundleID
request
setRequest:
setRequestProperties:
HTTPArchive
performanceMetrics
setTracksPerformanceMetrics:
tracksPerformanceMetrics
_activeURLRequest
_copyConnectionPropertiesWithDataConnectionServiceType:
_performDefaultHandlingForAuthenticationChallenge:
activeURLRequest
setDataProvider:
_setLoadsHTTPFailures:
_setShouldSetCookies:
_setUsesPrivateCookieStore:
setUploadProgressRequested:
setPassThroughErrors:
_setAccountDSIDOverride:
_authenticationContext
_dataBuffer
_dataProvider
_networkRetryCount
_redirectURLs
_response
_urlSessionManager
_urlSessionTask
_dataBufferAccessQueue
_httpArchive
_performanceMetrics
_uploadProgressRequested
_passThroughErrors
__accountDSIDOverride
allocWithZone:
contentLength
contentType
copyWithZone:
bagContext
setBagContext:
setAuthenticatedAccountDSID:
setOutput:
setDialog:
sharedAccountsAuthenticationConfig
accountName
_runServerAuthenticationOperation:error:
runTouchIDAuthorizationDialog:fallbackDialog:metricsDictionary:error:
setPaymentSheet:
challenge
shouldSuppressDialogs
initWithTouchIDDialog:fallbackDialog:
setBiometricAuthenticationContext:
setMetricsDictionary:
signupRequestParameters
setBuyParams:
setUserAgent:
runSubOperation:error:
selectedButton
dialog
_performActionsForButton:withDialog:
biometricAuthenticationContext
accountIdentifier
actionType
performDefaultActionForDialog:
authenticatedAccountCredentialSource
setAuthenticatedAccountCredentialSource:
provider
configureFromProvider:
migrateOutputFromSubProvider:
runAuthorizationDialog:error:
runTouchIDAuthorizationDialog:fallbackDialog:error:
setErrorHandlerResponseType:
biometricSessionDelegate
setBiometricSessionDelegate:
_authenticatedAccountDSID
_bagContext
_contentLength
_contentType
_output
_biometricAuthenticationContext
_errorHandlerResponseType
_authenticatedAccountCredentialSource
_biometricSessionDelegate
stringWithUTF8String:
_runLookupForHostname:
_resolutionCompletedWithError:
resolvedAddressStrings
setUrl:
setURL:
_host
_url
_URL
URLForResource:withExtension:
screenScale
numberWithUnsignedLong:
_sharedBagBackend
UUID
UUIDString
initWithRawDictionary:
_setBagBackendWithDictionary:
_copyGUIDPatternsFromBagBackend
_copyGUIDSchemesFromBagBackend
_copyHeaderPatternsFromBagBackend
bagType
_networkConstraintsCachePath
disableCellularNetworkTypes
rangeOfFirstMatchInString:options:range:
propertyListWithData:options:format:error:
URLBagDictionary
versionIdentifier
_writeNetworkConstraintsCacheFile
_writeURLResolutionCacheFile
_loadItemKindURLBagKeyMap
urlForKey:
networkConstraintsForDownloadKind:
isAnyNetworkTypeEnabled
invalidationTime
dictionaryRepresentationForBagWithKey:
newNetworkConstraintsByDownloadKindFromURLBag:
valueForKey:forBagWithKey:
setInvalidationTime:
hasPrefix:
replaceCharactersInRange:withString:
timeIntervalSinceReferenceDate
writeToFile:options:error:
copyExtraHeadersForURL:
shouldSendGUIDForURL:
urlIsTrusted:
initWithPattern:options:error:
initWithArray:
lastObject
setWithObjects:
sharedCoordinator
lastKnownStatus
accountStatus
removeBagValuesForBagWithKey:
addBagValues:forBagWithKey:
removeItemAtPath:error:
attributesOfItemAtPath:error:
timeIntervalSinceNow
stringByDeletingLastPathComponent
_preprocessURLResolutionCacheDictionary:
ensureDirectoryExists:
storeFrontURLBagKeyForItemKind:
copyExtraHeadersForURL:inBagContext:
networkConstraintsForDownloadKind:inBagContext:
shouldSendGUIDForURL:inBagContext:
urlBagForContext:
urlForKey:inBagContext:
urlIsTrusted:inBagContext:
valueForKey:inBagContext:
loadFromDictionary:returningError:
availableStorefrontItemKinds
isValid
searchQueryParametersForClientIdentifier:networkType:
setInvalidationTimeWithExprationInterval:
shouldSendAnonymousMachineIdentifierForURL:
URLForURL:clientIdentifier:
sanitizedURLForURL:
setURLBagContext:
URLBagContext
loadedFromDiskCache
setLoadedFromDiskCache:
storeFrontIdentifier
setStoreFrontIdentifier:
_context
_defaultConstraints
_bagBackend
_bagBackendKey
_guidPatterns
_guidSchemes
_headerPatterns
_invalidationTime
_loadedFromDiskCache
_storeFrontIdentifier
sanitizedURL
setBagType:
initWithBagContext:
storeFrontHeaderSuffixForBundleIdentifier:
objectForKeyedSubscript:
context
cacheKey
_setOutputURLBag:
usesCachedBagsOnly
setNeedsURLBag:
setShouldAppendAuthKitHeaders:
setURLBagRequest:
setUrlKnownToBeTrusted:
accountDSID
setShouldProcessProtocol:
URLWithBagContext:
setAllowedRetryCount:
allowsBootstrapCellularData
setAllowsBootstrapCellularData:
setClientAuditTokenData:
ignoresCaches
setCachePolicy:
setITunesStoreRequest:
_addHeadersToRequestProperties:
_setURLBagWithDictionary:response:error:
_analyzeBagForActiveSystemApps:
addURLBag:
containsString:
_addStoreFrontHeaderSuffix:forBundleIdentifier:
allHTTPHeaders
addEntriesFromDictionary:
setHTTPHeaders:
enumerateObjectsUsingBlock:
pingOperationWithUrl:
expirationInterval
userIdentifier
setCachedAvailableItemKinds:
_postBagDidLoadNotificationWithURLBag:
_sendPingsForURLBag:
storeFrontHeaderSuffix
operation:didAuthenticateWithDSID:
operation:shouldAuthenticateWithContext:responseHandler:
operation:shouldSetStoreFrontID:
URLBag
setAccountDSID:
_outputBag
_accountDSID
loadedURLBagWithContext:accountDSID:returningError:
loadedURLBagWithContext:returningError:
loadURLBagWithContext:returningError:
outputBlock
initWithAccountIdentifier:
setCanCreateNewAccount:
setCanSetActiveAccount:
setPromptStyle:
setShouldCreateNewSession:
setReasonDescription:
fallbackDialog
setPerformsButtonAction:
setCompletionBlock:
initWithBiometricAuthenticationContext:touchIDDialog:fallbackDialog:
_promptUserToAuthenticateForIdentityMapChangeWithAccountIdentifier:accountName:
setOutputBlock:
biometricStore
setBiometricStore:
setContext:
setFallbackDialog:
touchIDDialog
setTouchIDDialog:
_outputBlock
_biometricStore
_fallbackDialog
_touchIDDialog
processDialogFromDictionary:error:
processDictionary:error:
processDialogFromPropertyList:returningError:
processPropertyList:returningError:
_addiTunesStoreHeadersToRequest:withURLBag:accountIdentifier:appendAuthKitHeaders:appendStorefrontToURL:clientBundleIdentifier:
accountWithUniqueIdentifier:
_handleResponseHeaders:response:request:account:performsMachineDataActions:shouldRetry:
setQueuePriority:
setURLBagKey:
path
date
timeIntervalSince1970
setTimeoutInterval:
needsAuthentication
useUserSpecificURLBag
_account
setUserIdentifier:
authenticatedDSID
initWithAccount:
setAccountScope:
clientIdentifier
setClientIdentifierHeader:
setUserAgentComponents:
setPersistsPasswordFallback:
setAuthenticatedDSID:
setNeedsAuthentication:
_canSendTokenToURL:
_urlBagForContext:
shouldSuppressUserInfo
canSendGUIDParameter
_ssBag_shouldSendGUIDForURL:withBag:
shouldAppendAuthKitHeaders
shouldAppendStorefrontToURL
_addiTunesStoreHeadersToRequest:withSSBag:account:appendAuthKitHeaders:appendStorefrontToURL:clientBundleIdentifier:
_addiTunesStoreHeadersToRequest:withSSBag:accountIdentifier:appendAuthKitHeaders:appendStorefrontToURL:clientBundleIdentifier:
_addiTunesStoreHeadersToRequest:withURLBag:account:appendAuthKitHeaders:appendStorefrontToURL:clientBundleIdentifier:
shouldSendXTokenHeader
didFallbackToPassword
secureToken
URLBagKey
accounts
SAPSession
_loadURLBagInterpreterWithRequest:requestProperties:
mescalSignaturePolicyForResponseURL:
policyType
initWithBase64EncodedString:options:
verifyData:withSignature:error:
sharedDefaultSession
sharedPrimeSession
ignorePreexistingSecureToken
_copyAuthenticationContextForAttemptNumber:
_authenticateWithContext:error:
needsTermsAndConditionsAcceptance
isUserAccepted
_runURLOperation
machineDataStyle
initWithURLResponse:
_performMachineDataRequest:
actionName
_shouldRetryForTouchIDChallengeWithError:
_continueTouchIDSession
didBuyParamsChange
sender:didFallbackToPassword:
sender:shouldContinueTouchIDSession:
sender:willSendChallenge:andSignature:isPayment:additionalHeaders:
signature
isPayment
xAppleAMDHeader
setObject:forKeyedSubscript:
xAppleAMDMHeader
_isErrorTokenError:
promptStyle
setAuthenticated:
setSecureToken:
saveAccount:verifyCredentials:error:
userInfo
setIgnorePreexistingSecureToken:
writeToDiskWithLogConfig:compressed:error:
urlKnownToBeTrusted
dictionaryForKey:error:
_ssBag_copyGUIDPatternsFromBag:
_ssBag_copyGUIDSchemesFromBag:
arrayForKey:error:
_ssBag_copyHeaderPatternsFromBag:
_ssBag_copyExtraHeadersForURL:bag:
stringForKey:error:
_addiTunesStoreHeadersToRequest:withAccount:appendAuthKitHeaders:appendStorefrontToURL:clientBundleIdentifier:extraHeaders:storefrontSuffix:
setStoreFrontIdentifier:account:
_addAccountDSID:toRequest:
_addPrimaryiCloudDSIDToRequest:
_storeFrontIdentifierForAccount:
sharedAccountsStorefrontConfig
hashedDescription
_appendStorefront:toRequestURL:
partnerHeader
connectionTypeHeader
cloudMediaLibraryIdentifier
mediaLibraryIdentifier
softwareLibraryIdentifier
appleClientApplication
appleClientVersions
clientProvidedHeaders
allKeys
_restrictionsHeaderValue
_authKitSession
appleIDHeadersForRequest:
sharedAccountStore
primaryAppleAccount
aa_personID
_ss_hasQueryParameter:
_ss_URLByRemovingQueryParameter:
longValue
sharedConnection
effectiveRestrictedBoolValueForSetting:
accountWithUniqueIdentifier:scope:
logUUID
copyAccountID:credentialSource:byHandlingAuthenticateResponse:returningError:
copyAccountID:credentialSource:byAuthenticatingWithContext:returningError:
URLResponseAllowsSilentAuthentication:
setAllowsSilentAuthentication:
useSharedBagInterpreter
urlBagInterpreter
setAllowsExpiredBags:
initWithURLBagDictionary:
setAccountIdentifier:
_operationWaitsForPurchases:
setWaitsForPurchaseOperations:
_performMachineDataRequest:requestProperties:completion:
protocolVersion
URLBagURLBlock
needsURLBag
URLIsTrusted:
canHandleTrustedDomains
URLForKey:error:
_resolvedURLInBagContext:bagTrusted:
setURLs:
_addStandardQueryParametersForURL:
didAuthenticate
setSignature:
setStoreFrontIdentifier:forRequest:response:account:
setPartnerHeader:
setPromptUser:
setTopicName:
setAccountName:
handleResponse:forRequest:shouldRetry:
sharedStoreServicesConfig
setShouldDisableReversePush:
startWithCompletionBlock:
initWithMachineDataRequest:
setResultBlock:
addITunesStoreHeadersToRequest:withAccountIdentifier:
handleITunesStoreResponseHeaders:request:withAccountIdentifier:shouldRetry:
itemPingOperationWithIdentifier:urlBagKey:
propertyListOperationWithURLBagKey:
performsMachineDataActions
setCanSendGUIDParameter:
setPerformsMachineDataActions:
setSAPSession:
setShouldSendXTokenHeader:
_setStoreFrontIdentifier:isTransient:
setNeedsTermsAndConditionsAcceptance:
setShouldAppendStorefrontToURL:
setUseUserSpecificURLBag:
setMachineDataStyle:
setShouldSuppressUserInfo:
shouldSendAKClientInfoHeaders
setShouldSendAKClientInfoHeaders:
shouldSendDSIDHeader
setShouldSendDSIDHeader:
setBag:
_activeMachineDataStyle
_authenticatedDSID
_canSendGUIDParameter
_ignorePreexistingSecureToken
_isURLBagRequest
_machineDataStyle
_needsAuthentication
_needsURLBag
_sapSession
_shouldAppendAuthKitHeaders
_shouldAppendStorefrontToURL
_shouldSendXTokenHeader
_urlKnownToBeTrusted
_useUserSpecificURLBag
_needsTermsAndConditionsAcceptance
_shouldSuppressUserInfo
_shouldSendAKClientInfoHeaders
_shouldSendDSIDHeader
_bag
errorBySettingFatalError:
isEqual:compareUserInfo:
isFatalError
_softwareMapInvalidatedNotification:
_appleClientVersions
null
postNotificationName:object:userInfo:
shortVersionString
setAppleClientApplication:
setClientProvidedHeaders:
setIdentifier:
localStoreFrontID
setLock:
_appleClientApplication
_identifier
_partnerHeader
_userAgent
_clientProvidedHeaders
_currentNetworkReachabilityFlags
_networkTypeForReachabilityFlags:
_applicationForegroundNotification:
makeObjectsPerformSelector:withObject:
_ntsIsUsingNetwork
addObserver:
_postUsageChangedToValue:
operatorName
copyValueForCarrierBundleKey:
_dataStatusIndicator
sharedNetworkObserver
isWiFiEnabled
phoneNumber
_reloadNetworkType
_setNetworkType:
_postTypeChangedNotificationFromValue:toValue:
isUsingNetwork
_reloadDataStatusIndicator
_copyConnectionDataStatus:
_networkTypeFromDataIndicator:
numberWithUnsignedInteger:
_reloadNetworkTypeWithReachabilityFlags:
_postReachabilityFlagsChangedNotificationFromValue:toValue:
set3GEnabled:
setAirplaneModeEnabled:
setWiFiEnabled:
downloadQueue:changedWithRemovals:
downloadQueue:downloadStatusChangedAtIndex:
downloadQueueNetworkUsageChanged:
beginObservingDownloadQueue:
endObservingDownloadQueue:
shouldShowCellularAutomaticDownloadsSwitch
dataStatusIndicator
isCellularDataEnabledForBundleIdentifier:
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
modemRegistrationStatus
providerName
reloadNetworkType
setNetworkType:
_handleTelephonyNotificationWithName:userInfo:
_reloadCellularRestriction
_isCellularRestricted
_lastNetworkTypeChangeTime
_networkReachabilityFlags
_networkUsageCount
_networkType
_notificationQueue
_observedDownloadQueues
_operatorName
_reachability
_registrationStatus
_telephonyServer
debugLogsEnabled
_closeFile
hashes
localFilePath
numberOfBytesToHash
fileURLWithPath:
_writeDataWithoutHashing:returningError:
_writeDataWithHashing:returningError:
_openFile
_truncateToSize:
shouldResumeFromLocalBytes
validatedBytes
_verifiedBytesByInitializingHashForFileSize:
setValidatedBytes:
setActualHashString:
setExpectedHashString:
setRangeEnd:
setRangeStart:
setLastHashError:
fileSystemRepresentation
setStreamedBytes:
_checkHashForByteCount:
setHashes:
lastHashError
setLocalFilePath:
setNumberOfBytesToHash:
setShouldResumeFromLocalBytes:
_fileDescriptor
_hashes
_lastHashError
_localFilePath
_md5Context
_numberOfBytesToHash
_shouldResumeFromLocalBytes
_totalBytesWritten
_validatedBytes
hashFailureHeaderString
actualHashString
expectedHashString
rangeEnd
rangeStart
_actualHashString
_expectedHashString
_rangeEnd
_rangeStart
isDisplayable
title
alertControllerWithTitle:message:preferredStyle:
textFields
keyboardType
setKeyboardType:
isSecure
setSecureTextEntry:
setPlaceholder:
value
setText:
addTextFieldWithConfigurationHandler:
handleButtonSelected:withResponseDictionary:
actionWithTitle:style:handler:
addAction:
_showAlertWithCompletion:
setHidden:
mainScreen
bounds
initWithFrame:
setRootViewController:
sharedApplication
window
tintColor
setTintColor:
windows
windowLevel
setWindowLevel:
makeKeyAndVisible
rootViewController
presentViewController:animated:completion:
objectAtIndexedSubscript:
operation:selectedButton:
performDefaultActions
setSelectedButton:
text
_cleanupAlert
_alert
_window
userNotification
setUserNotification:
initWithError:
operationWithDialog:
deviceIsAppleTV
noDefaultButton
copyUserNotification
checkInDialog:
allowDuplicates
daemon
beginShowingDialog
_showUserNotification:
checkOutDialog:
endShowingDialog
_waitForUserNotificationResponse:
currentRetryCount
setCurrentRetryCount:
_handleResponseForNotification:responseFlags:
incrementDisplayCount
operationWithError:
textFieldValues
setPerformDefaultActions:
_dialog
_performDefaultActions
_selectedButton
_textFieldValues
_userNotification
setCredential:
_copyCredentialForSignInResponseDictionary:
initWithAuthenticationChallege:
setAllowDuplicates:
user
initWithUser:password:persistence:
operationWithChallenge:
_challenge
_credential
setLocalizedMessage:
setLocalizedTitle:
cancelAuthenticationChallenge:
useCredential:forAuthenticationChallenge:
cancelAuthentication
failureCount
hasPassword
password
useCredential:
userNameIsEditable
userNameIsEmail
localizedMessage
localizedTitle
_localizedMessage
_localizedTitle
setUserNameIsEditable:
setPassword:
setUser:
setFailureCount:
setHasPassword:
setSender:
_failureCount
_hasPassword
_password
_sender
_user
_userNameIsEditable
_messageForProtectionSpace:
_titleForProtectionSpace:
previousFailureCount
proposedCredential
port
protocol
receivesCredentialSecurely
appendBytes:length:
dataWithBytes:length:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithLength:
mutableBytes
setLength:
bundleContainerURL
initWithLaunchServicesApplication:containerPath:
applicationDSID
isBetaApp
setBeta:
setBundleIdentifier:
setBundleShortVersionString:
bundleVersion
setBundleVersion:
setContainerPath:
isPlaceholder
profileValidated
setProfileValidated:
_loadMetadataFromContainer:
hasMIDBasedSINF
setHasMIDBasedSINF:
missingRequiredSINF
setMissingRequiredSINF:
applicationType
isDeletable
isRemovedSystemApp
itemIdentifier
deviceIdentifierForVendor
didCheckLaunchProhibited
isLaunchProhibited
setDidCheckLaunchProhibited:
vendorName
dataContainerURL
expirationDate
isVPPLicensed
isRevoked
compare:
containerPath
initWithXPCEncoding:
setItemIdentifier:
setItemName:
setContentRating:
setSoftwareType:
setVersionIdentifier:
setVersionOrdering:
familyAccountIdentifier
setFamilyAccountIdentifier:
copyXPCEncoding
initWithLaunchServicesApplication:
resetVPPStateFlags
vppStateFlags
ITunesMetadataDictionary
isBeta
bundleShortVersionString
contentRating
setDeviceIdentifierForVendor:
itemName
isProfileValidated
softwareType
setVendorName:
versionOrdering
receiptExpirationDate
setLaunchProhibited:
removableStatus
_beta
_bundleIdentifier
_bundleShortVersionString
_bundleVersion
_containerPath
_contentRating
_deviceIdentifierForVendor
_familyAccountIdentifier
_hasMIDBasedSINF
_itemIdentifier
_itemName
_missingRequiredSINF
_placeholder
_profileValidated
_softwareType
_vendorName
_versionIdentifier
_versionOrdering
_receiptExpirationDate
_vppStateFlags
_launchProhibited
_didCheckLaunchProhibited
_removableStatus
currentMapIsValid
setCurrentMap:
loadSoftwareMapReturningError:
deviceIsInternalBuild
callStackSymbols
setShouldIgnoreProtocol:
authenticateResponse
authenticatedAccount
initWithAuthenticationContext:
parentViewController
set_parentViewController:
authenticateResponseType
responseDictionary
_handleAuthenticateResponse:
startWithAuthenticateResponseBlock:
initWithPropertyList:
setShouldProcessAccount:
_copyErrorForAuthenticateResponse:error:
request:didFailWithError:
requestDidFinish:
authenticateRequest:didReceiveResponse:
setParentViewController:
_authenticateResponse
_parentViewController
sharedDaemonConfigOversize
credentialSource
decodeIntegerForKey:
decodeObjectOfClass:forKey:
unsignedIntegerValue
itemIdentifierValue
decodeBoolForKey:
decodeFloatForKey:
encodeInteger:forKey:
encodeObject:forKey:
numberWithItemIdentifier:
encodeBool:forKey:
encodeFloat:forKey:
_draftsDirectoryPath
_draftFileName
setNicknameIsConfirmed:
setNickname:
floatValue
setRating:
bodyMaxLength
setBodyMaxLength:
infoURL
setInfoURL:
nicknameIsConfirmed
nickname
nicknameMaxLength
setNicknameMaxLength:
rating
submitURL
setSubmitURL:
titleMaxLength
setTitleMaxLength:
dataWithContentsOfFile:
unarchivedObjectOfClass:fromData:error:
mergeWithReview:preferLocalValues:
archivedDataWithRootObject:requiringSecureCoding:error:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
hasSavedDraft
removeDraft
restoreFromDraft
saveAsDraft
assetType
setAssetType:
_assetType
_bodyMaxLength
_infoURL
_nickname
_nicknameIsConfirmed
_nicknameMaxLength
_rating
_submitURL
_title
_titleMaxLength
setDidBuyParamsChange:
_loadURLBag
metricsDictionary
dialogIdForMetricsDictionary:
authorizationDialogEventForParameters:
initWithGlobalConfiguration:
setGlobalConfiguration:
insertEvent:withCompletionHandler:
flushUnreportedEventsWithCompletionHandler:
passwordEquivalentToken
setPasswordEquivalentToken:
setDidAuthenticate:
setDidFallbackToPassword:
setShouldSendFallbackHeader:
_findSelectedButtonForButtons:
isIdentityMapInvalid
_performMetricsWithBiometricMatch:didBiometricsFail:
_runAuthkitOperationWithError:returningError:
_runSignatureOperationReturningError:
_shouldFallbackToAuthKitForError:
_urlBag
_buyParams
_metricsDictionary
raise:format:
_enqueueOperationWithContext:completionBlock:
dispatchAsync:
loadValueForKey:completionBlock:
dispatchSync:
setIgnoresCaches:
_finishOperationWithURLBag:error:
getTrustForURL:completionBlock:
valueForKey:error:
_completionBlocks
_forceInvalidationForNextLoad
_operation
isBackgroundReview
setShouldProcessDialogs:
setBackgroundReview:
_backgroundReview
review
_httpBody
dataUsingEncoding:
setReview:
_review
cacheDirectoryPathWithName:
_storeMovePath:toPath:
waitsForPurchaseOperations
sharedFairPlayAnisetteConfig
_provisionWithRequest:error:
_syncMachineWithRequest:error:
_eraseProvisioning
resultBlock
syncState
blocksPurchaseRequests
actionData
hidesServerDrivenDialogs
initWithAccountIdentifier:provisioningData:
setHidesServerDrivenDialogs:
setProtocolVersion:
_shouldRetryAfterError:
initWithAccountIdentifier:syncData:
machineDataRequest
setBlocksPurchaseRequests:
_blocksPurchaseRequests
_hidesServerDrivenDialogs
_request
_resultBlock
_syncState
initWithDictionary:options:
optionFlags
setUserInfo:
_allowedRetryCount
_currentRetryCount
_dictionary
_optionFlags
_userInfo
initWithDSID:additionalQueryParams:targetIdentifier:
setInterruptsKeybagRefresh:
setTargetIdentifier:
initWithOpenURLRequest:
buttonWithTitle:
arrayWithObjects:
setDefaultButtonIndex:
setExpectsResponse:
setGroupsTextFields:
setValue:
setSecure:
setTextFields:
setAuthorizationIsForced:
_kindForString:
setKind:
intValue
localizedFailureReason
setActionTypeWithString:
setParameter:
localizedURLTitle
setActionType:
defaultButtonIndex
unlockActionButtonIndex
displaysOnLockscreen
dismissOnHomeButton
dismissOnLock
shouldDisplayAsTopMost
shouldDismissAfterUnlock
shouldPendInSetupIfNotAllowed
isEqual:superficial:
parameter
displayCountForKey:
initWithOfferDeviceError:
initWithTitle:message:
copyValueForCFUserNotificationKey:
displayCountKey
maximumDisplayCount
setButtonsWithTitles:
setDisplayCountKey:
setMaximumDisplayCount:
setValue:forUserInfoKey:
setValue:forCFUserNotificationKey:
valueForUserInfoKey:
authorizationIsForced
setDismissOnHomeButton:
setDismissOnLock:
expectsResponse
groupsTextFields
kind
setNoDefaultButton:
oneButtonPerLine
setOneButtonPerLine:
setShouldDismissAfterUnlock:
setShouldDisplayAsTopMost:
setShouldPendInSetupIfNotAllowed:
setUnlockActionButtonIndex:
setDisplaysOnLockscreen:
touchIDContinueToken
setTouchIDContinueToken:
_allowDuplicates
_authorizationIsForced
_buttons
_defaultButtonIndex
_displayCountKey
_dismissOnHomeButton
_dismissOnLock
_expectsResponse
_groupsTextFields
_kind
_maxDisplayCount
_message
_noDefaultButton
_oneButtonPerLine
_shouldDismissAfterUnlock
_shouldDisplayAsTopMost
_shouldPendInSetupIfNotAllowed
_textFields
_unlockActionButtonIndex
_userNotificationValues
_displaysOnLockscreen
_touchIDContinueToken
urlType
_actionTypeForString:
setSubtarget:
_urlTypeForString:
setUrlType:
shouldContinueTouchIDSession
openURLRequestWithURL:
requestWithURL:
initWithURLRequest:
start
preferredITunesStoreClient
_openURLWithRequest:
setITunesStoreURL:
purchaseWithBuyParameters:
initWithPurchases:
sharedController
addPurchases:
retryAllRestoreDownloads
setDictionary:
subtarget
setTag:
_actionType
_parameter
_urlType
_subtarget
_tidContinue
_tag
textFieldWithTitle:
_keyboardType
_secure
_value
startObservingNotifications
_loadFromMobileInstallation
defaultWorkspace
enumerateApplicationsOfType:block:
applicationForBundleIdentifier:applicationType:
currentMap
applicationForBundleIdentifier:
bundleType
applicationForPluginBundleIdentifier:extensionType:
pluginKitProxyForIdentifier:
containingBundle
copySoftwareUpdatesPropertyListWithUpdatesContext:
copySoftwareUpdatesPropertyListWithApplications:updatesContext:
softwareTypes
removeObjectAtIndex:
_newSoftwareUpdateDictionaryForApplication:
containerPathForApp:homeDirectory:systemMetadataDirectory:
array
enumerateApplicationsOfType:usingBlock:
haveApplicationsOfType:
invalidateCurrentMap
loadedMap
applicationForPluginBundleIdentifier:
enumerateApplicationsForProxies:usingBlock:
removableSystemApplicationsWithCompletionBlock:
_startWatchingInstallationNotifications
applicationForItemIdentifier:
applications
copySoftwareUpdatesPropertyList
_applications
indexOfObject:
initWithServiceName:
sendMessage:withReply:
accessQueue
bagValuesDictionary
object
allValues
_valueForKey:forBagValuesNode:
_bagValuesMapTableWithInitialValues:
initWithObject:
bagValuesList
appendNode:
next
setObject:
removeNode:
isEqualToArray:
strongToStrongObjectsMapTable
tail
_bagValue:equalsBagValue:
enumerateKeysAndObjectsUsingBlock:
previous
deltaDictionaryRepresentationForBagWithKey:
diagnostics
setAccessQueue:
setBagValuesDictionary:
setBagValuesList:
_bagValuesDictionary
_bagValuesList
setShouldProcessAuthenticationDialogs:
numberWithUnsignedLongLong:
setShouldSuppressDialogs:
base64EncodedStringWithOptions:
setValue:forRequestParameter:
_newSyncOperationWithClientData:machineIDData:
_accountID
_allowsBootstrapCellularData
_inputData
_protocolVersion
_activeContext
_contextForOperation:
removeOperation:
countOfOperations
uniqueOperationForKey:
setUniqueOperation:forKey:
containsOperation:
predecessorForKey:operation:
setPredecessorIfNeeded:forKey:
uniqueOperationFinished:forKey:
_contexts
_lockPool
_operations
_uniqueOperations
initWithBool:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
doubleValue
dateWithNaturalLanguageString:
dateWithTimeIntervalSinceNow:
_getCacheControlMaxAge:
_dateFromExpires
expectedContentLength
lastPathComponent
UTF8String
badgeValue
sharedService
setBadgeValue:forBundleID:
setBadgeValue:
_badgeValue
initWithDialog:
performsButtonAction
performedButton
setPerformedButton:
initWithEncodedDialog:
authenticatedAccountIdentifier
performedButtonIndex
selectedButtonIndex
startWithAuthenticateResponse:
_performsButtonAction
_performedButton
_propertyList
dictionaryWithObjectsAndKeys:
methodSignature
invocationWithMethodSignature:
numberOfArguments
getArgument:atIndex:
setArgument:atIndex:
setSelector:
invokeWithTarget:
sendInvocationToDelegate:
_initCommon
allowsKeyedCoding
encodeObject:
containsValueForKey:
decodeObjectOfClasses:forKey:
decodeDoubleForKey:
decodeInt64ForKey:
setExpectedContentLength:
setURLBagType:
decodeObject
mutableCopyWithZone:
setClientIdentifier:
customHeaders
queryStringDictionary
primaryURL
setCustomHeaders:
setQueryStringDictionary:
setValue:forHeaderField:
setValue:forQueryStringParameter:
_properties
initWithCacheConfiguration:
reloadWithCacheConfiguration:
persistentIdentifier
memoryCapacity
diskCapacity
initWithMemoryCapacity:diskCapacity:diskPath:
_CFURLCache
setDiskCapacity:
setMemoryCapacity:
cachedResponseForRequest:
currentDiskUsage
currentMemoryUsage
removeAllCachedResponses
removeCachedResponseForRequest:
storeCachedResponse:forRequest:
cacheDirectoryPath
purgeMemoryCache
saveMemoryCacheToDisk
_cache
_configuration
setPersistentIdentifier:
_diskCapacity
_memoryCapacity
_persistentIdentifier
_poolOperationForOperation:flags:
cancelOperation:
mainOperation
addOperation:withFlags:
operationQueue
setOperationQueue:
_operationQueue
_forwardResponseFromOperation:toOperation:
indexOfObjectIdenticalTo:
_cancelCount
_forwardImmediately
status
certChainPrimary
certChainExtended
shouldSuppressAuthPrompts
_newUpdateTouchIDSettingsOperationWithTwoKeys
regeneratePublicKey
setRegeneratePublicKey:
setShouldSuppressAuthPrompts:
attestationStringPrimary
setAttestationStringPrimary:
attestationStringExtended
setAttestationStringExtended:
setCertChainPrimary:
setCertChainExtended:
_regeneratePublicKey
_shouldSuppressAuthPrompts
_status
_attestationStringPrimary
_attestationStringExtended
_certChainPrimary
_certChainExtended
buyParameters
valueForDownloadProperty:
setValue:forDownloadProperty:
longLongValue
initWithURLBag:SAPVersion:
pathForResource:ofType:
pathForITunesStoreResource:ofType:
initWithRequest:
topicName
_newSourceByStartingTimeoutTimer
setTokenBlock:
_performOptInDialogMetricsWithResult:error:
weakReferenceWithObject:
promptUser
_performPasscodeDialogOperationWithError:
_performOptInDialogOperationWithError:
_updateTouchIDSettingsForAccount:
_promptUser
_topicName
serverPasswordSettingsEnabled:
_finishProvisioningWithResponse:sessionID:error:
_newFinishProvisioningOperationWithData:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isITunesStoreURL
_openURL:
_newSortedTargetsArray
targetIdentifier
initWithTargetIdentifier:
copyURLForURL:
applicationsAvailableForOpeningURL:
sortUsingSelector:
interruptsKeybagRefresh
createClientPort
dictionaryWithObjects:forKeys:count:
openURL:application:options:clientPort:withResult:
openSensitiveURL:withOptions:
openURLRequest
initWithURLBagKey:
_isITunesStoreURL
_targetIdentifier
_urlBagKey
_interruptsKeybagRefresh
applicationStateForApplication:
_applicationState
_targetData
_targetIndex
queryItemWithName:value:
setQueryItems:
shouldPersonalizeResponseActions
_postDefaultDialog
requiredCapabilities
mismatches
initWithRequiredCapabilities:mismatches:
_mismatches
_requiredCapabilities
initWithReason:
effectiveBoolValueForSetting:
_newCreateAccountDialog
_mapCorrectSelectedButtonWithDialog:
setResponseType:
_hasActiveICloudAccount
reason
aa_primaryAppleAccount
responseType
setReason:
_responseType
_reason
parserOptions
JSONObjectWithData:options:error:
setParserOptions:
_options
_runWithURLDictionary:error:
setActionParameters:forItemIdentifier:
setActionDisplayNameString:forItemType:
setPriceDisplayString:forItemType:
allItemTypes
itemIdentifiersForItemType:
_copyResponseForURL:requestString:error:
_addDictionaryToResponse:
initWithPersonalizeOffersRequest:
personalizeOffersReqeust
ITunesStoreIdentifier
itemKind
addItemIdentifier:forItemType:
initWithItems:
_itemIDsByType
renderBeginInterval
renderEndInterval
setRenderBeginTime:
setRenderFinishTime:
startTime
URLResponse
_finishTime
_receivedResponseTime
_renderBeginTime
_renderEndTime
_startTime
_urlResponse
initWithMaxSize:
_storeFrontChangedNotification:
allObjectsAndKeys
_newRequestWithURLBagContext:
allowsExpiredBags
invalidateAllURLBags
setAllHTTPHeaderFields:
accountScope
invalidateURLBagForContext:
URLBagForContext:withOptions:
_cachedBags
sharedAccountsLogoutConfig
logKey
_disableAutomaticDownloadKinds
_disableBookkeeper
_sendLogoutRequest
account
_sbsyncData
_createDisableBookkeeperRequestPropertiesWithURL:
_createLogoutRequestProperties
importSubscriptionKeyBagData:returningError:
initWithAccount:logKey:
setAccount:
setLogKey:
_logKey
purgeableSpace
_purchaseHistoryCache
purge:
__purchaseHistoryCache
objectForKey:matching:
shouldProcessAuthenticationDialogs
shouldProcessTouchIDDialogs
shouldProcessDialogs
initWithResponseDictionary:
actionsWithActionType:
_metricsDictionaryForResponse:
dialogDictionary
setDialogId:
_shouldFailWithTokenErrorForDialog:dictionary:error:
_touchIDDialogForResponse:
_checkBiometricFailureForResponse:
_presentDialog:
shouldProcessProtocol
isSupportedProtocolVersion
versionMismatchURL
_performActionsForResponse:
_processFailureTypeFromDictionary:error:
pingURLs
shouldProcessDialogsOutsideDaemon
shouldTriggerDownloads
_triggerDownloads
actions
_checkDownloadQueues
_refreshSubscriptionStatus
footerSection
_selectFooterSection:
shouldProcessAccount
creditsString
setCreditsString:
setActive:
_checkInAppPurchaseQueueForAction:
getStatusWithOptions:statusBlock:
shouldPostFooterSectionChanged
setShouldPostFooterSectionChanged:
setShouldTriggerDownloads:
setShouldProcessDialogsOutsideDaemon:
_shouldPostFooterSectionChanged
_shouldProcessAccount
_shouldProcessAuthenticationDialogs
_shouldProcessDialogs
_shouldProcessDialogsOutsideDaemon
_shouldProcessProtocol
_shouldProcessTouchIDDialogs
_shouldTriggerDownloads
ISStoreVersion
RemovableSoftwareLookupTable
ISDevice
ISSingleton
NSObject
ISAdditions
ISBiometricStore
ISOperation
ISTouchIDDialog
ISTouchIDDialogButton
ISInvocationAdditions
ISInvocationRecorder
ISDelayedInvocationRecorder
ISMainThreadInvocationRecorder
ISURLBagLoadingController
ISOperationQueue
ISURLOperation
SSURLSessionManagerDelegate
ISDataProvider
NSCopying
ISURLResolverOperation
ISURLBag
ISURLBagAdditions
ISLoadURLBagOperation
ISStoreURLOperationDelegate
ISURLOperationDelegate
ISOperationDelegate
ISLoadURLBagAdditions
ISBiometricSignatureOperation
ISPropertyListProvider
ISStoreURLOperation
ISBiometricSessionDelegate
ISClient
ISNetworkObserver
SSDownloadQueueObserver
ISHashedDownloadProvider
ISHashError
ISUIKitDialogOperation
ISDialogOperation
ISAuthenticationChallengeOperation
ISAuthenticationChallenge
ISStoreAuthenticationChallenge
ISURLAuthenticationChallenge
ISSoftwareApplication
SSXPCCoding
ISLoadSoftwareMapOperation
ISLoadSoftwareMapAdditions
ISStoreAuthenticateOperation
SSAuthenticateRequestDelegate
SSRequestDelegate
ISAuthentication
ISReview
NSSecureCoding
NSCoding
ISBiometricAuthorizationDialogOperation
ISSSURLBag
ISReviewProvider
ISPostReviewOperation
ISMachineDataActionOperation
ISUserNotification
ISCreateAccountOperation
Authentication
ISDialog
ISDialogButton
ISDialogTextField
ISSoftwareMap
ISURLBagBackend
ISMachineDataSyncOperation
ISUniqueOperationManager
ISUniqueOperationContext
ISITunesSyncHelper
ISSetApplicationBadgeOperation
ISServerAuthenticationOperation
ISProcessPropertyListOperation
ISDelegateProxy
ISURLRequest
ISURLCache
ISURLCacheConfiguration
ISURLOperationPool
ISURLOperationPoolOperation
ISBiometricUpdateTouchIDSettingsOperation
ISFairPlaySAPSession
ISStoreServicesRequestOperation
ISBiometricOptInOperation
ISPasswordSettingsUtility
ISMachineDataProvisioningOperation
ISOpenURLOperation
ISOpenURLRequest
OpenURLTarget
ISSoftwareCapabilitiesDialogOperation
ISCreateAccountPromptOperation
ISCookieStorage
ISJSONDataProvider
ISPersonalizeOffersOperation
ISPersonalizeOffersRequest
ISURLRequestPerformance
ISURLBagCache
ISLogoutOperation
ISDeleteDaemonModule
NSDictionaryAdditions
ISProtocolDataProvider
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
@"NSURL"
B24@0:8@16
@"NSDictionary"
@"NSLock"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16^@24
q16@0:8
v48@0:8Q16@24@32@?40
i16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSString"
@20@0:8B16
@32@0:8@16@24
v24@0:8@?16
@28@0:8@16B24
@24@0:8Q16
@32@0:8@16q24
v32@0:8@16@24
q24@0:8@16
Q24@0:8@16
v24@0:8q16
@40@0:8@16q24^@32
@40@0:8@16@24^@32
@"NSCache"
B40@0:8@16@24^@32
v20@0:8B16
@"<ISOperationDelegate>"
@"NSError"
@"NSRunLoop"
@"ISOperation"
@"SSOperationProgress"
@"NSArray"
@"NSMutableArray"
@24@0:8q16
@"SSPaymentSheet"
@24@0:8d16
d16@0:8
v24@0:8d16
@"NSHashTable"
@"SSURLBag"
v28@0:8@16B24
v48@0:8@16@24@32^v40
@"NSOperationQueue"
^{_CFURLCache=}16@0:8
^{__CFURLStorageSession=}16@0:8
@40@0:8@16@24@32
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v40@0:8@16@24@?32
v56@0:8@16@24@32@40@?48
@"NSData"40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSMetricsLoadURLEvent"32@"NSError"40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSHTTPArchive"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
@"NSNumber"16@0:8
@"SSBag"16@0:8
@"NSData"16@0:8
@"SSURLRequestProperties"16@0:8
@"NSURLCache"16@0:8
@24@0:8^{__CFString=}16
B24@0:8q16
B32@0:8@16^{__CFString=}24
B32@0:8q16^@24
@"SSAuthenticationContext"
@"NSMutableData"
@"ISDataProvider"
@"NSCountedSet"
@"SSMutableURLRequestProperties"
@"NSURLResponse"
@"SSURLSessionManager"
@"NSURLSessionTask"
@"NSURLRequest"
@"SSHTTPArchive"
@"ISURLRequestPerformance"
@"NSNumber"
@24@0:8^{_NSZone=}16
B48@0:8@16@24@32^@40
v24@0:8Q16
@"SSURLBagContext"
@"SSBiometricAuthenticationContext"
@"<ISBiometricSessionDelegate>"
^{__CFHost=}
B32@0:8@16@24
B40@0:8@16Q24^@32
@"SSNetworkConstraints"
@"ISURLBagBackend"
@"NSSet"
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
q32@0:8@16@24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
v32@0:8@"ISStoreURLOperation"16@"NSNumber"24
v40@0:8@"ISStoreURLOperation"16@"SSAuthenticationContext"24@?<v@?@"SSAuthenticateResponse"@"NSError">32
B32@0:8@"ISStoreURLOperation"16@"NSString"24
@"ISURLBag"
@32@0:8@16^@24
@?16@0:8
@"ISBiometricStore"
@"ISDialog"
@"ISTouchIDDialog"
v48@0:8@16@24@32^B40
@32@0:8Q16@24
v56@0:8@16@24@32B40B44@48
v64@0:8@16@24B32B36@40@48@56
v60@0:8@16@24@32@40B48^B52
v52@0:8@16@24@32B40@44
v52@0:8@16@"NSString"24@"NSString"32B40@"NSDictionary"44
@32@0:8@16^B24
@"SSVFairPlaySAPSession"
@"SSBag"
B28@0:8@16B24
B20@0:8I16
v32@0:8@16q24
v32@0:8@"SSDownloadQueue"16@"NSSet"24
v32@0:8@"SSDownloadQueue"16q24
v24@0:8@"SSDownloadQueue"16
I16@0:8
v32@0:8^{__CFString=}16^{__CFDictionary=}24
q20@0:8I16
v24@0:8I16I20
v32@0:8q16q24
v20@0:8I16
q24@0:8q16
@"NSMutableSet"
^{__SCNetworkReachability=}
^{__CTServerConnection=}
@"ISHashError"
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
v32@0:8q16@24
@"UIAlertController"
@"UIWindow"
v32@0:8^{__CFUserNotification=}16Q24
v24@0:8^{__CFUserNotification=}16
@"ISDialogButton"
@"ISAuthenticationChallenge"
@"NSURLCredential"
@"NSURLAuthenticationChallenge"
@"<NSURLAuthenticationChallengeSender>"
@24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"16@0:8
@"SSItemContentRating"
@"NSDate"
B24@0:8^@16
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSAuthenticateRequest"16@"SSAuthenticateResponse"24
@"SSMutableAuthenticationContext"
@"SSAuthenticateResponse"
B48@0:8^@16^Q24@32^@40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
f16@0:8
v20@0:8f16
v28@0:8Q16B24
v32@0:8@16@?24
@"ISLoadURLBagOperation"
@"ISReview"
@"SSMachineDataRequest"
@32@0:8@16Q24
^{__CFUserNotification=}16@0:8
^v24@0:8^{__CFString=}16
v32@0:8^v16^{__CFString=}24
@"NSMutableDictionary"
^{__CFDictionary=}
i24@0:8@16
v20@0:8i16
v32@0:8Q16@?24
@"SSDoubleLinkedList"
@"NSData"
@"ISUniqueOperationContext"
B24@0:8^d16
@"ISPropertyListProvider"
@"NSURLCache"
@"ISURLCacheConfiguration"
@"ISOperationQueue"
@"SSRequest"
v28@0:8B16@20
B36@0:8@16I24^@28
@"ISOpenURLRequest"
{?="clientIdentifier"@"NSString""normalScheme"@"NSString""secureScheme"@"NSString"}
@"ISPersonalizeOffersRequest"
@"SSPersonalizeOffersResponse"
@"SSLRUCache"
@"SSAccount"
Q24@0:8Q16
@"SSAppPurchaseHistoryCache"
@32@0:8@16#24
%@: Releasing power assertion: %@
%@: Taking power assertion: %@
[Device]: Reset location and privacy
ISBiometricStore: Failed to identity biometric style even though biometrics should be available, will not attach TID state header
%{public}@: Initializing singleton: %{public}p
%{public}@: Clearing biometric account identifier
%{public}@: Failed to obtain base directory
%{public}@: Failed to load plist at path: %{public}@
%{public}@: Failed to find file at path: %{public}@
ISBiometricStore: Failed to configure label for DSID: %@, purpose: %{public}@
%@: Failing because predecessor failed
%@: Running with background priority for thread: %p
%@ caught %@ exception with stack trace: %@
%@ caught unknown exception: %@
%@: Restoring normal priority for thread: %p
%@: Temporarily disable %lu power assertions
Set thread to background priority: %p
Set thread to default priority: %p
%@: Took serialization locks: %@
%@: Releasing serialization locks: %@
%@: Data-driven redirect from %@ to %@
[%@] [DataProvider: %@] [Streamed Bytes: %llu]
%@: Failed with error: %@ (%@)
%@: Invalid EV trust for challenge: %@
%@: Verified extended validation for challenge: %@
%@: Ignoring authentication challenge for store request
%@: Presenting authentication challenge
%@: Authentication challenge failed
[%@] Bytes Uploaded: %llu [Uploaded: %llu] [Expected: %llu]
[%@] We need a new NSInputStream; [%@]
[%@] We needed a new NSInputStream, but our delegate does not offer that facility; [%@]
%@: Received %ld redirect to %@ from %@
%@: Received headers for %@:
%@: Will not follow redirect: %@
%{public}@: [%{public}@] Attempting to determine the account identifier for %{public}@.
%{public}@: [%{public}@] accountDSIDOverride = %{public}@
%{public}@: [%{public}@] authenticatedAccountDSID = %{public}@
%{public}@: [%{public}@] authenticationContext.requiredUniqueIdentifier = %{public}@
%{public}@: [%{public}@] activeSandboxAccount.uniqueIdentifier = %{public}@
%{public}@: [%{public}@] activeAccount.uniqueIdentifier = %{public}@
%@: Finished loading: [%.2f, %.2fs] %@
%@: Finished loading %@
%@: Retry for error handler, after error: %@
%@: Too many redirects for %@
%@: Received %ld response: [%.2fs] %@
%@: Received %ld response: %@
%@: Did not receive expected %d response, resetting partial download: %@
%@: Skipping download because have entire file: %@
%@: Performing default handling for challenge: %@
%@: Continuing without credentials for challenge: %@
%@: Sending headers for %@:
%@: Sending body for %@:
%@: Received body for %@:
%@: Performing retry with URL %@
%@: Failed to retry connection: %@
%@: Started request at [%.2f] for %@
%@: Rejecting internal request
%@: Rejecting request due to invalid scheme: %@
%@: Making %@ request, with service type: %lu, for URL: %@
%@: No network connection, giving up: %@
%@: Retrying after a network transition: %@
%@: Giving up after too many retries: %@
%@: Waiting a bit before retry #%ld: %@
%@: Rejecting redirect due to invalid scheme: %@
%@: Not enough space to download asset of size %lld
%{public}@: Running ISServerAuthenticationOperation. authenticationContext = %@ | authenticationContext.accountName = %{public}@
%{public}@: Skipping TouchID signature for no server challenge
%{public}@: Skipping TouchID signature because auth context tells us to suppress dialogs
%{public}@: Running ISBiometricAuthorizationDialogOperation. authenticationContext = %@ | authenticationContext.accountName = %{public}@
%{public}@: Server-driven authentication failed. error = %@
Resolver: Lookup started
Resolver: Lookup completed
Resolver: Lookup error (%ld/%d)
ISImageResource: Image Source: Failed to find path for bundle: %{public}@, resource: %{public}@
ISImageResource: Image Source: Failed image count: %{public}@
ISImageResource: Image Source: Failed to create image source for bundle: %{public}@, resource: %{public}@
ISImageResource: Image Source: Failed to create image for no resource name
%@: URL bag version is too old: %lld
%@: Wrote network constraints to cache: %@
%@: Wrote URL resolution information to cache
%@: Found an in-memory bag for %@.
%@: Skipping bag load for cached-only context: %@
%@: Created default URL bag for external requests
%@: Unable to set the store front header suffix because we don't have the correct bundle ID. bagContext.cacheKey = %@
%@: Pinging URL: %@
%@: Could not create bag from URL response: %@, error: %@
%{public}@: Could not determine biometric style with account name
%{public}@: Could not determine biometric style
%{public}@: Authentication challenge for invalid identity map did complete
%{public}@: Authentication challenge for invalid identity map timed out
%{public}@: Authentication challenge for invalid identity map failed with error: %{public}@
%@: Won't authenticate for non-https URL: %@
%@: URL is not trusted: %@
%{public}@: Re-executing %{public}@ because we had to reprovision machine data.
%@: Authentication failed: %@
%@: Could not create term acceptance operation
%@: Terms and conditions acceptance failed: %@
%{public}@: Asked to reprovision machine data while executing %{public}@. We'll re-run the request. account = %{public}@
%{public}@: Asked to reprovision machine data while executing %{public}@, but we've re-run the request too many times. The request will fail.
%{public}@: Request, %{public}@, failed. We're setting authentication to NO for %{public}@.
%{public}@: Attempt retry after token error. error = %@
%{public}@: Attempted to get the storefront in order to run %{public}@. storefront = %{public}@ | account = %{public}@
%{public}@: The request already has a storefront. We'll use it to run the request. existingStorefront = %{public}@
%{public}@: We were told to append the storefront to the URL.
[%{public}@]: [%{public}@] Handing off authentication to delegate
[%{public}@]: [%{public}@] Delegate successfully completed authentication
[%{public}@]: [%{public}@] Delegate authentication failed with error: %{public}@
[%{public}@]: [%{public}@] Authenticating locally, delegate request failed with error: %{public}@
[%{public}@]: [%{public}@] Performing authentication due to %{public}@.
%@: Error resolving URL for bag key: %{public}@
%@: Using new bag for trust verfication of bag key: %@ URL: %@
%@: Using old bag for trust verfication of bag key: %@ URL: %@
%@: Could not resolve URL
%{public}@: Setting an account's storefront after running %{public}@. account = %{public}@ | storefrontID = %{public}@
%@: Triggering MD action: %@
%@: Re-provisioning TouchID/Biometric token in response to server instruction (RP)
%@: Provisioning TouchID/Biometric enrollment in response to server instruction (EP)
iTunes Store environment is: %@
%{public}@: Reverse push received response header %ld
%{public}@: [%{public}@] Determining the storefront for %{public}@.
%{public}@: [%{public}@] The account has a storefront. We'll use it. storefront = %{public}@
%{public}@: [%{public}@] The account has no storefront, but the device does. We'll use it. storefront = %{public}@.
%{public}@: [%{public}@] Unable to determine a storefront.
%@: Set network type "%@"
%@: Reload network type after override change
%@: Reachability change: %d (%@)
%@: Not enough disk space for %lld, only %llu is available: %@
%@: Tried to write to invalid fd %d (%@)
%@: Found bytes to resume: %lld
%@: Truncating non-resumable file
%@: Hash mismatch for chunk: (%lld:%lld), %@ should be %@
%@: Write error (%zd should be %lld)
%@: Tried to write %lu bytes, but only wrote %ld bytes
%@: Skipping non-displayable dialog
%@: Cannot present nil dialog
%@: Running process does not have a UIWindow to present dialog
%@: Cannot present dialog over nil view controller
%@: Failed to handle nil button. Index: %ld
%@: Skipping non-unique dialog
%@: Disabling %lu power assertions before user interaction
%@: Retried user notification too many times
%@: Will retry user notification
%@: Loading software map
%@: Could not load software map
%@: Loaded software map
%{public}@: Creating an ISStoreAuthenticateOperation. callStack = %{public}@
%{public}@: Running an ISStoreAuthenticationOperation. authenticationContext = %@ | authenticationContext.accountName = %{public}@
%{public}@: Received authenticate response. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@ | response.responseDictionary = %@
%{public}@: Authentication failed. error = %@
%@: Authentication successful
%@: Storefront changed during authentication
%@: Authentication canceled
%@: Authentication failed
%@: Authentication encountered unhandled authenticateResponseType: %ld
%{public}@: Could not create authentication operation.
[%@]: What do we do with this: %@
%@: Could not remove draft: %@
%@: Could not open draft. Error = %{public}@
%@: Could not create directory: %@
%{public}@: Could not save draft: %{public}@
%{public}@: Failed to load URL bag with error: %{public}@
%{public}@: Failed to install metrics event with error: %{public}@
%{public}@: Failed to flush metrics events with error: %{public}@
%{public}@: Metrics failed with no bag key
%{public}@: Metrics failed with no bag
%{public}@: Failed to obtain biometric signature with error: %{public}@
%@: Failed with failure type: %@
%@: Received failure response with no dialog
%{public}@: Running for request %{public}@.
%{public}@: Unrecognized machine-data action %{public}@.
Noticed software map change, invalidating map
%@: Setting badge (%@, %@)
%{public}@: Performing server driven authentication. request = %@ | request.authenticationContext.accountName = %{public}@
Could not load library [%ld].  dlerror is: %s
%@: Reloaded cache (%@, disk: %lu, memory: %lu)
%{public}@: Failed to find primary cert chain, item count: %@
%{public}@: Failed to find extended cert chain, item count: %@
%{public}@: Authentication prompt style: %{public}@
%{public}@: Failed to determine biometric style for metrics event
%{public}@: Failed to identify device biometric style for opt-in operation
%{public}@: Failed to determine biometric style for dialog
%{public}@: UpdateTouchIDSettings request completed with status: %{public}@
%{public}@: UpdateTouchIDSettings request failed with status: %{public}@, error: %{public}@
%{public}@: Biometrics enabled and cached for DSID: %@
%{public}@: Biometric opt-in timeout
%@: No URL to open for request: %@
%@: Opening URL: %@ with client states: %@
%@: Opening converted URL: %@
%@: No bag key, posting default dialog
%@: Failed, so posting default dialog
%{public}@: Refusing to create a new account. Account creation is restricted.
%{public}@: Prompting the user to see if they want to create a new account.
%{public}@: The user chose to use an existing account.
%{public}@: The user chose to create a new account.
%{public}@: The user canceled the prompt.
%@: Could not parse JSON: %@
%@: No account ID, can't personalize offers
%@: Could not load URL bag: %@
%@: Missing bag key: %@
%@: No URL for item type: %@
%@: Issuing %lu requests
%@: Invalid URL: %@
%@: Cached URL bag with cache key: %@
%@: Our cached bag is expired, and the context doesn't allow expired bags. Returning nil.
%@: Invalidating URL bags after storefront change
ISURLBagCache: Invalidating bags after notification
%{public}@: [%{public}@] Running logout operation.
%{public}@: [%{public}@] Disabling automatic download kinds.
%{public}@: [%{public}@] Successfully disabled automatic download kinds.
%{public}@: [%{public}@] Failed to disable automatic download kinds. error = %{public}@
%{public}@: [%{public}@] Disabling bookkeeper.
%{public}@: [%{public}@] Unable to disable bookkeeper. Bag is misconfigured and doesn't contain the push notification types.
%{public}@: [%{public}@] Unable to disable bookkeeper. Bag is misconfigured and doesn't contain add push notification type url.
%{public}@: [%{public}@] Successfully disabled bookkeeper.
%{public}@: [%{public}@] Failed to disable bookkeeper. error = %{public}@
%{public}@: [%{public}@] Sending logout request.
%{public}@: [%{public}@] An error occurred while sending logout request. error = %{public}@
%{public}@: Failing dialog with token error. error = %@
%@: Unsupported protocol version, redirecting to: %@
%@: Pinging %@
%@: Property list serialization failed with nil data
%@: Couldn't parse protocol: %@
%@: Error processing protocol: %@
%@: Triggering queue check
%{public}@: Checking for server verification failure
%{public}@: Did server verification occur? %{public}@
%{public}@: Setting accountName on context to active account
%{public}@: Setting accountIdentifier on context to active account
%@: Trigger in-app queue check: [%ld, %@]
%@: Performing actions: %@
%@: Plist-driven redirect to: %@
%@: Invalidating URL bag
%@: Opening URL action: %@
%{public}@: The server told us to set the active account. Saving %{public}@.
%{public}@: Successfully set %{public}@ as the active account.
%{public}@: Failed to set %{public}@ as the active account. error = %{public}@
%{public}@: Saw token failure: %d
%@: Select footer section: %@
