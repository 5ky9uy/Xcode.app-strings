(version 1)
(deny default (with partial-symbolication))
(import "system.sb")
(define (home-literal home-relative-literal)
    (literal (string-append (param "HOME_DIR") home-relative-literal)))
(define relative-path-to-safari-library-directory
    (string-append "/Library/" (param "SAFARI_LIBRARY_DIR_NAME")))
(define path-to-safari-library-directory
    (home-literal relative-path-to-safari-library-directory))
(define (path-to-library-file library-file-name)
    (home-literal (string-append relative-path-to-safari-library-directory "/" library-file-name)))
(define (read-write-directory-contents path-filter)
    (allow file-read* path-filter)
    (allow file-write* (require-all
        (require-any (vnode-type DIRECTORY) (vnode-type REGULAR-FILE))
        path-filter)))
(define (allow-read-directory-and-issue-read-extensions path)
    (if path
        (begin
            (allow file-read* (subpath path))
            (allow file-issue-extension (require-all (extension-class "com.apple.app-sandbox.read") (subpath path))))))
;; On-disk location of the folder containing frameworks needed by Safari, to account for debug
;; installations outside of /System/Library/Frameworks, and to allow issuing extensions.
(allow-read-directory-and-issue-read-extensions (param "FRAMEWORKS_DIR"))
(allow file-read-metadata)
(allow mach-lookup (global-name "com.apple.cloudd"))
(allow mach-lookup (global-name "com.apple.securityd.xpc"))
(allow mach-lookup (global-name "com.apple.CoreServices.coreservicesd"))
(allow mach-lookup (global-name "com.apple.distributed_notifications@Uv3"))
;; Give the service read/write access to the database and its associated files.
;; This won't work for users with unusual setups like a symlinked ~/Library.
(allow file-read-data (path-to-library-file ""))
(allow file-read* file-write*
    (path-to-library-file "History.db")
    (path-to-library-file "History.db-journal")
    (path-to-library-file "History.db-shm")
    (path-to-library-file "History.db-wal")
    (path-to-library-file "History.db-lock")
    (path-to-library-file "History.plist")
    (path-to-library-file "ClearHistoryInProgress"))
;; On a clean install, the Safari folder in ~/Library may not exist yet, so we need to be allowed to create it.
(allow file-write-create (require-all (vnode-type DIRECTORY) path-to-safari-library-directory))
;; SQLite will die if it cannot create temporary files.
(read-write-directory-contents (subpath (param "DARWIN_USER_TEMP_DIR")))
;; Required to verify code signatures
(allow mach-lookup (global-name "com.apple.SecurityServer"))
(allow file-read*
    (subpath "/private/var/db/mds")
    (literal "/private/var/db/DetachedSignatures")
    ; The following are needed until <rdar://problem/11134688> is resolved.
    (literal "/Library/Preferences/com.apple.security.plist")
    (literal "/Library/Preferences/com.apple.security.common.plist")
    (literal "/Library/Preferences/com.apple.security.revocation.plist")
    (home-literal "/Library/Application Support/SyncServices/Local/ClientsWithChanges/com.apple.Keychain")
    (home-literal "/Library/Preferences/com.apple.security.plist")
    (home-literal "/Library/Preferences/com.apple.security.revocation.plist"))
(allow ipc-posix-shm-read* ipc-posix-shm-write-data
    (ipc-posix-name "com.apple.AppleDatabaseChanged"))
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.MobileContainerManager.lookup</key>
<dict>
<key>appData</key>
<array>
<string>com.apple.mobilesafari</string>
</array>
</dict>
<key>keychain-access-groups</key>
<array>
<string>com.apple.safari.history</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>Safari.History</string>
</array>
</dict>
</plist>
