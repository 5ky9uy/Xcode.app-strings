MSCRODMain
VOTEventCommandBraillePanLeft
VOTEventCommandBraillePanRight
VOTEventCommandLeftArrow
VOTEventCommandRightArrow
VOTEventCommandBrailleRouter
VOTEventCommandDelete
VOTEventCommandEscape
VOTEventCommandReturn
VOTEventCommandBrailleTranslate
VOTEventCommandBrailleToggleContractions
VOTEventCommandBrailleToggleEightDot
VoiceOver: Braille: invalid keyboard event posted: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<SCROBrailleDisplayCommandDispatcherDelegate>",W,N
T@"<SCROBrailleDisplayCommandDispatcherDelegate>",W,N,Vdelegate
com.apple.scrod
Mobile Screen Reader Output Server.  Version 2.0.
/System/Library/CoreServices/VoiceOverTouch.app/scrod
server
index
Invalid handler type: %d sent from client.
Error: IORegisterForSystemPower failed
com.apple.springboard.hasBlankedScreen
v8@?0
airplaneMode
TB,N,V_airplaneMode
radiosPrefs
T@"RadiosPreferences",&,N,V_radiosPrefs
Error: could not find bundle while configuring braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver: %{public}@
Error: unable to instantiate braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver (invalid interface version): %{public}@.
Inalidating braille display [%{public}@]
Connecting braille services to device [%{public}@]
Reconnecting braille services to device [%{public}@]
Disconnecting device because reconnection is not enabled [%{public}@]
Reloading braille driver for display [%{public}@]
Failed to connect for display [%{public}@] - %{public}@
Connection succeess for display [%{public}@] - %{public}@
Error: Exception while handling Bluetooth braille display reconnection event: %@
init
allocWithZone:
_handlePanLeftEvent:
valueWithPointer:
_handlePanRightEvent:
_handleMoveLeftEvent:
_handleMoveRightEvent:
_handleRouterEvent:
_handleDeleteEvent:
_handleEscapeEvent:
_handleReturnEvent:
_handleTranslateEvent:
_handleToggleContractedBrailleEvent:
_handleToggleEightDotBrailleEvent:
initWithObjectsAndKeys:
delegate
handleCommandPanLeftForDispatcher:
handleCommandPanRightForDispatcher:
handleCommandMoveLeftForDispatcher:
handleCommandMoveRightForDispatcher:
handleCommandRouterKeyEvent:forDispatcher:
handleCommandDeleteKeyEvent:forDispatcher:
handleCommandForwardDeleteKeyEvent:forDispatcher:
handleCommandEscapeForDispatcher:
handleCommandReturnBrailleEvent:forDispatcher:
handleCommandTranslateForDispatcher:
handleCommandToggleContractedBrailleEvent:forDispatcher:
handleUnsupportedKeyEvent:forDispatcher:
brailleInputManager
class
isKindOfClass:
commandForBrailleKey:
objectForKey:
pointerValue
performSelector:withObject:
_handleUnsupportedEvent:
isEqual:
self
performSelector:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleBrailleKeyEvent:
setDelegate:
_handleForwardDeleteEvent:
.cxx_destruct
_commandDictionary
initWithArgc:argv:
sharedServer
registerWithMach
defaultCenter
_serverTimeoutNotificationHandler:
addObserver:selector:name:object:
removeObserver:
dealloc
setDefaultThreadPriority:
sharedManager
initWithBrailleDisplayManager:
setCallbackDelegate:
serverSource
numberWithInt:
_goDogGo:
detachNewThreadSelector:toTarget:withObject:
lock
invalidate
unlock
integerValue
unregisterWithMach
stop
sendCallback:
_safeHandlerForType:
performWithHandler:trusted:
handleRegisterCallbackForKey:trusted:
handleSetValue:forKey:trusted:
handleGetValue:forKey:trusted:
handleGetValue:forKey:withObject:trusted:
handlePerformActionForKey:trusted:
processIdentifier
versionString
commandPath
handleEvent:handlerType:trusted:
registerCallbackForKey:forClientIdentifier:handlerType:trusted:
setValue:forKey:handlerType:trusted:
getValue:forKey:handlerType:trusted:
getValue:forKey:withObject:handlerType:trusted:
performActionForKey:handlerType:trusted:
handleCallback:
_handlers
_runLoops
_mainRunLoop
_stop
setActiveQueueMaximumSize:
setPrimaryTranslationTableWithTableIdentifier:
primaryTableIdentifier
setVirtualAlignment:
setMasterStatusCellIndex:
setRadiosPrefs:
radiosPrefs
airplaneMode
setAirplaneMode:
_runThread
isEqualToString:
setContractionMode:
setShowEightDotBraille:
setVirtualStatusAlignment:
start
_registerHasBlankedScreenNotification
_registerSleepNotifications
_setupBluetooth
performSelectorOnMainThread:withObject:waitUntilDone:
_enableAutoDetect
_loadStealthDisplay
performSelector:withObject:afterDelay:
data
intValue
virtualAlignment
_setVirtualStatusAlignmentHandler:
masterStatusCellIndex
_setMasterStatusCellIndexHandler:
_contractionModeHandler:
boolValue
_showEightDotHandler:
_setTableHandler:
sharedInstance
powerChangedNotification:
_delayedPowerChangedNotification:
enabled
_loadBluetoothDriverFromPreferences
ioElement
_removeBluetoothDriverWithIOElement:removeFromPreferences:
copyWithZone:
ioObject
transport
identifier
bluetoothAddress
displayWithIOElement:driverIdentifier:delegate:
_loadBluetoothDriverWithAddress:
pairedDevices
countByEnumeratingWithState:objects:count:
address
handleFailedToLoadBluetoothDevice:
count
initWithAddress:
containsObject:
activeDisplays
lastObject
removeDisplay:
primaryDisplay
removeObject:
removeObjectForKey:
setObject:forKey:
setUIDisplayMode
_loadNextDriverForIOElement:
configurationDidChange
connectingDevices
connected
device
available
displayWithIOElement:cachedInfo:delegate:reconnectionEnabled:
configuration
addDisplay:withState:
addObject:
_removeBluetoothDriverWithAddress:
stateForDisplay:
handleBrailleDriverDisconnected
driverConfiguration
resetReconnectionTimer
mutableCopyWithZone:
isConfigured
_rootPowerPort
_handleSystemSleep
_wakeFromSleep
unsleep
_reallyDelayedWakeFromSleep
_delayedWakeFromSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
_disableAutoDetect
_blankOutDisplaysInQueue:
sleep
requiresPersistentConnection
sleepForTimeInterval:
_delayedHandleSystemSleep
initialize
airplaneModeChanged
handleSettingsChange:
_displayWithIOElement:driverIdentifier:delegate:
loadBluetoothDriverWithAddress:
removeBluetoothDriverWithAddress:
_saveBluetoothDisplayConfiguration:
newBrailleDisplayCommandDispatcher
_sleepWake
_notifyLockStateToken
_blankScreenToken
_isScreenBlank
_airplaneMode
_radiosPrefs
brailleDriverDeviceDetectionInfo
arrayWithCapacity:
name
expressionForEvaluatedObject
initWithObject:
initWithLeftExpression:rightExpression:modifier:type:options:
evaluateWithObject:
insertObject:atIndex:
initWithIOObject:
UTF8String
_bluetoothAddress
_displayWithIOElement:driverIdentifier:modelIdentifier:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
brailleDriverBundleWithIdentifier:
ignoreLogging
principalClass
brailleDriverClassIsValid:
interfaceVersion
_initWithDriver:driverIdentifier:modelIdentifier:ioElement:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
_delayedDisplayLoad
_initWithDriver:driverIdentifier:ioElement:delegate:
_enableReconnectionTimer:
_stopWatchingForDevices
unloadDriver
_startWatchingForDevices
hidDevice
loadDriverWithIOElement:
_setupDriverSupport
setBrailleDriverDelegate:
disconnect
brailleDisplay:driverDidLoad:
modelIdentifier
mainSize
statusSize
postsKeyboardEvents
brailleInputMode
initWithDriver:mainSize:statusSize:
supportsBlinkingCursor
isInputEnabled
brailleDriverDisconnected:
_resetReconnectionTimer
connectedServices
addDeviceNotification:
addDeviceFailedNotification:
removeDeviceNotification:
deviceUpdatedNotification:
removeObserver:name:object:
_delayedAddDeviceNotification:
object
_reloadDriver
_delayedRemoveDeviceNotification:
paired
_delayedDeviceUpdatedNotification:
configurationChangedForBrailleDisplay:
dictionaryWithCapacity:
numberWithInteger:
numberWithUnsignedInteger:
numberWithBool:
displayWithIOElement:driverIdentifier:delegate:reconnectionEnabled:
_unloadHandler
_reconnectionEventHandler
_reconnectionEventTimer
_reconnectionInterval
_beganReconnectionInterval
_bluetoothConnectedDevices
_isReconnectionEnabled
_isDriverLoading
_isDriverDisconnected
MSCRODBrailleDisplayCommandDispatcher
SCROBrailleDisplayCommandDispatcherProtocol
NSObject
MSCRODMain
SCROServerDelegate
SCROIOBluetoothElementProtocol
SCROIOElementProtocol
NSCopying
MSCRODBrailleDisplayManager
RadiosPreferencesDelegate
MSCRODIOBluetoothElement
SCROIOHIDElementProtocol
MSCRODBluetoothBrailleDisplay
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
B24@0:8@"SCROBrailleKey"16
@"<SCROBrailleDisplayCommandDispatcherDelegate>"16@0:8
v24@0:8@"<SCROBrailleDisplayCommandDispatcherDelegate>"16
v16@0:8
@"NSDictionary"
@"<SCROBrailleDisplayCommandDispatcherDelegate>"
i32@0:8@16i24B28
i32@0:8i16I20i24B28
i36@0:8@16i24i28B32
i36@0:8^@16i24i28B32
i44@0:8^@16i24@28i36B40
i28@0:8i16i20B24
i32@0:8@"SCROEvent"16i24B28
@28@0:8i16r^*20
@24@0:8^i16
i16@0:8
[3@"SCROHandler"]
^^{__CFRunLoop}
^{__CFRunLoop=}
@24@0:8^{_NSZone=}16
I16@0:8
@40@0:8@16@24@32
v28@0:8@16B24
v20@0:8B16
{?="rootPort"I"notifyPortRef"^{IONotificationPort}"notifierObject"I}
@"RadiosPreferences"
@24@0:8@16
@"NSString"
^{__IOHIDDevice=}16@0:8
@44@0:8@16@24@32B40
@76@0:8@16@24@32@40@48@56@64B72
@48@0:8@16@24@32@40
@80@0:8@16@24@32@40q48q56i64@68B76
^{__CFRunLoopTimer=}
@"NSMutableDictionary"
%{public}@
