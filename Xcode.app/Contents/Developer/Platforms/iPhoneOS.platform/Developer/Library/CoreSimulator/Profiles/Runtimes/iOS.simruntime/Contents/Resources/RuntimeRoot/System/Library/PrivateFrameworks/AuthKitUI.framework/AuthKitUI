@333333
ffffff
?333333
@(#)PROGRAM:AuthKitUI  PROJECT:AuthKit-1
initWithNibName:bundle:
setDelegate:
ak_idpWebViewWithFrame:idpHandler:
webView
setView:
viewDidLoad
setupTitleView
viewWillAppear:
idpHandler
configuration
request
host
_setNavigationTitle:
viewDidAppear:
setEdgesForExtendedLayout:
loadRequest:
cancel
currentDevice
userInterfaceIdiom
navigationController
navigationBar
setBackgroundImage:forBarMetrics:
_setHidesShadow:
alloc
bundleWithIdentifier:
imageNamed:inBundle:
initWithImage:
setSecureIconView:
secureIconView
setContentMode:
systemGreenColor
setTintColor:
setHidden:
setAlpha:
initWithFrame:
setTitleLabel:
title
titleLabel
setText:
_preferredFontForTextStyle:maximumContentSizeCategory:
setFont:
arrayWithObjects:count:
initWithArrangedSubviews:
setTitleStackView:
titleStackView
setSpacing:
navigationItem
setTitleView:
_cancelBarButtonPressed:
initWithBarButtonSystemItem:target:action:
setLeftBarButtonItem:
setPrompt:
hasOnlySecureContent
animateWithDuration:animations:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
IDPHandler:didStartLoadingPageInWebView:
IDPHandler:didFinishLoadingPageInWebView:
initWithIDPHandler:
loadView
.cxx_destruct
setIdpHandler:
_webView
_idpHandler
_secureIconView
_titleLabel
_titleStackView
effectWithStyle:
effectForBlurEffect:
initWithEffect:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
imageNamed:inBundle:compatibleWithTraitCollection:
buttonWithType:
addSubview:
setFrame:
setImage:forState:
_ak_passwordRecoveryButtonTapped:
addTarget:action:forControlEvents:
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
activateConstraints:
ak_passwordRecoveryButton
init
resourceLoadDelegate
isEqualToString:
ak_errorWithCode:
completeWithError:
completeWithFinalResponse:
presentationType
_headerValueFromType:
setValue:forHTTPHeaderField:
signRequest:withCompletionHandler:
signalFromServerResponse:
serverDataHarvester
harvestDataFromServerHTTPResponse:
_completeWithResponse:additionalData:error:
harvestedData
allHeaderFields
ac_secureCodingError
tearDownContext
initWithRequestConfiguration:completion:
handleAuthKitActionAttribute:
processResponse:
completeWithError:additionalData:
serverUIDelegate
initiatingURL
_serverUICompletion
_latestReadResponse
_configuration
_serverUIDelegate
_serverDataHarvester
_initiatingURL
initWithUUIDString:
_initWithIdentifier:
presentBasicLoginUIWithCompletion:
dismissBasicLoginUIWithCompletion:
presentLoginAlertWithError:title:message:completion:
presentSecondFactorUIWithCompletion:
dismissSecondFactorUIWithCompletion:
presentSecondFactorAlertWithError:title:message:completion:
registerSurrogateWithIdentifier:completion:
presentServerProvidedUIWithConfiguration:completion:
dismissServerProvidedUIWithCompletion:
presentNativeRecoveryUIWithContext:completion:
dismissNativeRecoveryUIWithCompletion:
presentKeepUsingUIForAppleID:completion:
dismissKeepUsingUIWithCompletion:
initWithSurrogateID:
username
password
_assertValidPresentingViewController
alertControllerWithTitle:message:preferredStyle:
bundleForClass:
localizedStringForKey:value:table:
actionWithTitle:style:handler:
addAction:
presentingViewController
presentViewController:animated:completion:
remoteUIController:shouldLoadRequest:redirectResponse:
remoteUIController:shouldLoadRequest:redirectResponse:withCompletionHandler:
remoteUIController:objectModel:shouldDisplayNamedElement:page:
remoteUIController:didFinishLoadWithError:
remoteUIController:didReceiveHTTPResponse:
remoteUIController:didReceiveChallenge:completionHandler:
remoteUIController:willPresentObjectModel:modally:
remoteUIController:didPresentObjectModel:modally:
remoteUIController:didRefreshObjectModel:
remoteUIController:didRemoveObjectModel:
remoteUIController:willPresentModalNavigationController:
remoteUIController:didDismissModalNavigationWithObjectModels:
remoteUIControllerDidDismiss:
remoteUIController:createPageWithName:attributes:
remoteUIController:didReceiveObjectModel:actionSignal:
remoteUIController:willLoadRequest:
remoteUIStyle
willPresentModalNavigationController:
setPassword:
setRemoteUIStyle:
_password
_remoteUIStyle
generatorFieldFont
setTextAlignment:
addObject:
copy
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
passcodeFieldTapped:
initWithTarget:action:
addGestureRecognizer:
defaultCenter
_updateFonts:
addObserver:selector:name:object:
removeObserver:name:object:
dealloc
countByEnumeratingWithState:objects:count:
setNeedsUpdateConstraints
length
substringWithRange:
objectAtIndexedSubscript:
deactivateConstraints:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
addObjectsFromArray:
firstObject
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
metricsForTextStyle:
scaledValueForValue:
stringWithFormat:
setObject:forKey:
numberWithDouble:
updateConstraints
firstGeneratorField
stringValue
postNotificationName:object:userInfo:
setString:
_syncStringValueToLabels
emitCodeEnteredNotification
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
becomeFirstResponder
activeKeyboard
setReturnKeyEnabled:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
appendString:
deleteCharactersInRange:
canBecomeFirstResponder
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
autocapitalizationType
setAutocapitalizationType:
autocorrectionType
setAutocorrectionType:
spellCheckingType
setSpellCheckingType:
smartQuotesType
setSmartQuotesType:
smartDashesType
setSmartDashesType:
smartInsertDeleteType
setSmartInsertDeleteType:
keyboardType
setKeyboardType:
keyboardAppearance
setKeyboardAppearance:
returnKeyType
setReturnKeyType:
enablesReturnKeyAutomatically
setEnablesReturnKeyAutomatically:
isSecureTextEntry
setSecureTextEntry:
textContentType
setTextContentType:
passwordRules
setPasswordRules:
insertText:
deleteBackward
hasText
viewForFirstBaselineLayout
viewForLastBaselineLayout
setStringValue:
setPasscodeFieldDisabled:
generatorFields
setGeneratorFields:
activeConstraints
setActiveConstraints:
_stringValue
_tapGestureRecognizer
_passcodeFieldDisabled
_generatorFields
_activeConstraints
contentContainerView
setTitleText:
authenticationContext
_message
setMessageText:
addChildViewController:
view
updateViewConstraints
setWantsBaselineOffset:
messageText
boundingRectWithSize:options:attributes:context:
baselineOffset
descender
extensionContext
inputItems
ak_context
setAuthenticationContext:
_configureTitleHeaderView
_configureCodeGenView
_updateFontContstraints:
viewWillLayoutSubviews
systemLayoutSizeFittingSize:
setPreferredContentSize:
layer
animation
setMass:
setStiffness:
setDamping:
setDuration:
setVelocity:
setFillMode:
numberWithFloat:
setFromValue:
setToValue:
functionWithName:
setValueFunction:
functionWithControlPoints::::
setTimingFunction:
setKeyPath:
addAnimation:forKey:
resignFirstResponder
animationDidStart:
animationDidStop:finished:
jiggleAView
clearSecondFactorEntry
setReason:
reason
generatedCode
codeGeneratorView
setCodeGeneratorView:
titleHeaderViewController
setTitleHeaderViewController:
_codeGeneratorView
_titleHeaderViewController
_authenticationContext
setNumberOfLines:
titleText
_setHyphenationFactor:
setPreferredMaxLayoutWidth:
_configureMessageLabel
array
mainScreen
_defaultTraitCollection
removeFromSuperview
_configureBannerImage
setBannerImage:
bannerImage
bannerView
setBannerView:
messageLabel
setMessageLabel:
_bannerImage
_titleText
_messageText
_bannerView
_messageLabel
_setPasswordFieldHiddenIfNeeded
context
_requiresPasswordInput
presentedViewController
_setPasswordFieldHidden:animated:
isEphemeral
_isAccountModificationRestricted
sharedConnection
effectiveBoolValueForSetting:
isAuthInProgress
_isSignInAllowed
_canBeginAuthenticationWithOption:
setAuthInProgress:
delegate
raise:format:
_startBusyWorkUI
setUsername:
_setPassword:
setNeedsCredentialRecovery:
setNeedsNewAppleID:
setIsUsernameEditable:
setAuthenticationType:
authenticationController
_provideDelegateWithAuthResults:error:
_hidebusyWorkUI
authenticateWithContext:completion:
signInViewController:didAuthenticateWithResults:error:
mutableCopy
_initWithAuthController:
_initWithNibName:bundle:
_beginAuthenticationIfPossibleWithOption:withUsername:password:
usesDarkMode
setUsesDarkMode:
setContext:
_authenticationController
_usesDarkMode
_authInProgress
_context
_delegate
iforgotButton
setTitle:forState:
iForgotButtonWasTapped:
removeTarget:action:forControlEvents:
createAppleIDButton
createAppleIDButtonWasTapped:
_passwordDelegate
_setPasswordDelegate:
_prefillAuthFields
_updateSignInFieldStatuses
allTargets
count
signInButton
signInButtonWasTapped:
appleIDField
setRowIdentifier:
passwordField
entryDescription
entryField
setPlaceholder:
setAdjustsFontSizeToFitWidth:
_appleIDTextFieldDidChange:
_passwordTextFieldDidChange:
_updateVibrancyAndBlurInTextFields
setEnabled:
_updatePlaceholderIfNeeded
_updateSignInButtonState
sharedBag
isPhoneNumberSupportedConfig
isUsernameEditable
fieldBackgroundColor
setUsesVibrancy:
setBlurEffectStyle:
setFieldBackgroundColor:
_beginAuthenticationIfPossibleWithOption:
text
wantsAuthenticationProgress
spinner
startAnimating
stopAnimating
animateWithDuration:animations:completion:
isHidden
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldShouldClear:
textFieldShouldReturn:
context:needsPasswordWithCompletion:
secondaryButtonTitle
setSecondaryButtonTitle:
tertiaryButtonTitle
setTertiaryButtonTitle:
setSecondaryButtonTarget:action:
setTertiaryButtonTarget:action:
usesVibrancy
blurEffectStyle
setWantsAuthenticationProgress:
primaryButtonTitle
loginFieldsContainer
setLoginFieldsContainer:
setAppleIDField:
setPasswordField:
setSignInButton:
setIforgotButton:
setCreateAppleIDButton:
setSpinner:
_usesVibrancy
_blurEffectStyle
_secondaryButtonTitle
_tertiaryButtonTitle
_passwordRequiredCompletion
_wantsAuthenticationProgress
_primaryButtonTitle
_fieldBackgroundColor
_loginFieldsContainer
_appleIDField
_passwordField
_signInButton
_iforgotButton
_createAppleIDButton
_spinner
whiteColor
setTitleColor:forState:
colorWithAlphaComponent:
_signInButtonEdgeInsets
setContentEdgeInsets:
setCornerRadius:
setMasksToBounds:
sizeToFit
setHighlighted:
_updateColor
backgroundColor
isHighlighted
setBackgroundColor:
roundedButton
CGColor
initWithCGImage:
ak_imageWithColor:
_commonInit
initWithCoder:
textFieldStyle
_setupInlineEntryStyleViews
_setupAlertStyleViews
_fieldTextColor
setTextColor:
isEnabled
_backgroundImageForRowIdentifier:blurEffectStyle:backgroundColor:
_cachedImageForRowIdentifier:blurEffectStyle:backgroundColor:usingBlock:
contentView
insertSubview:atIndex:
_setupLabelAndFieldStyles
blackColor
colorWithWhite:alpha:
_systemMidGrayTintColor
_placeholderLabel
setPriority:
_setupBackgroundViewConstriants
drawFillForStyle:pathRect:roundedCorners:cornerRadius:backgroundColor:
drawStrokeForStyle:pathRect:roundedCorners:cornerRadius:pathSegments:
resizableImageWithCapInsets:
imageWithRenderingMode:
_roundedRectBezierPath:withRoundedCorners:cornerRadius:segments:legacyCorners:
scale
setLineWidth:
setUsesEvenOddFillRule:
stroke
fill
removeAllObjects
objectForKeyedSubscript:
setObject:forKeyedSubscript:
setTextFieldStyle:
rowIdentifier
visualEffectView
setVisualEffectView:
backgroundImageView
setBackgroundImageView:
constraints
setConstraints:
_entryDescription
_entryField
_textFieldStyle
_rowIdentifier
_visualEffectView
_backgroundImageView
_constraints
_valueForFieldWithID:inObjectModel:
serverInfo
displayedPages
lastObject
hasTableView
_valueForTextFieldFromPage:rowID:
passcodeViewOM
attributes
passcodeField
tableViewOM
sections
rows
control
valueForFieldWithID:
initWithObjectModel:
_objectModel
ak_jiggleAnimation
textRectForBounds:
editingRectForBounds:
leftViewRectForBounds:
rightViewRectForBounds:
insetSize
setInsetSize:
_insetSize
_setupViews
_setupConstraints
setAlertDelegate:
_createViews
containerView
bodyLabel
serviceType
defaultFontDescriptorWithTextStyle:addingSymbolicTraits:options:
setBodyLabel:
defaultFontForTextStyle:
_interpolatedReason
isMultiUserMode
formattedUsernameFromUsername:
colorWithRed:green:blue:alpha:
_passwordRecoveryButtonWasTapped:
ak_addForgotButtonWithTarget:action:
_passwordFieldDidChange:
_signInButtonTapped:
systemBlueColor
setBackgroundImage:forState:
systemGrayColor
setContainerView:
constraintGreaterThanOrEqualToAnchor:constant:
constraintEqualToAnchor:constant:
firstBaselineAnchor
heightAnchor
constraintGreaterThanOrEqualToConstant:
lastBaselineAnchor
constraintEqualToConstant:
centerXAnchor
bounds
ak_addActivityIndicator
_shouldShowForgotGlyph
setRightView:
viewWillTransitionToSize:withTransitionCoordinator:
animateAlongsideTransition:completion:
rightView
code
domain
displayAlertForContext:error:completion:
_updateViewConstraints
_bodyLabel
_containerView
setRightViewMode:
initWithActivityIndicatorStyle:
scannerWithString:
scanHexInt:
ak_colorWithServerRGBRepresentation:
whitelistedPathURLs
initWithWhitelistedPaths:
_completeFlowWithError:
acsURL
shouldAllowRequest:
absoluteString
hasPrefix:
_samlJavaScriptQuery
_safeAcsDictionaryFromResult:
removeObjectForKey:
ak_urlQueryString
URLWithString:
completion
setCompletion:
evaluateJavaScript:completionHandler:
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
initWithConfiguration:withCompletionHandler:
_redirectApprover
_completion
componentsWithURL:resolvingAgainstBaseURL:
path
stringByAppendingString:
_matchInputAgainstPaths:
numberWithBool:
_whiteListedPaths
userInfo
numberWithInt:
setPreferredStyle:
setAlertStyle:
_setupViewControllerForAlertStyle
_endObservingDidEnterCodeNotifications
_removeAllTextFields
setTitle:
setMessage:
setPreferredAction:
alertStyle
_setupViewControllerForDefaultStyle
_setupViewControllerForNonEditableUsernameFieldStyle
_setupViewControllerForUserOrCreateAppleIDStyle
_setupViewControllerForIForgotStyle
_setupViewControllerForSecondFactorEntryStyle
ak_cancelAction
stringByReplacingOccurrencesOfString:withString:
textFields
authenticateButtonTitle
_syncUsernameAndPasswordPropertiesWithTextFieldContent
authenticateAction
_actionWithTitle:descriptiveText:image:style:handler:shouldDismissHandler:
_wrappedCancelAction
_setActions:
contentViewController
setContentViewController:
authenticateTitle
_interpolatedReasonString
setBorderStyle:
clearColor
addTextFieldWithConfigurationHandler:
_dismissAndShowiForgot:
_setupAuthenticateAndCancelButtons
useIDAction
createIDAction
forgotIDAction
forgotPasswordAction
regenerateCodeAction
basicLoginAlertControllerDidPresent:
viewWillDisappear:
basicLoginAlertControllerWillDismiss:
viewDidDisappear:
basicLoginAlertControllerDidDismiss:
indexOfObjectPassingTest:
_beginPinningInputViews
actions
_isPinningInputViews
_endPinningInputViews
mainQueue
_didEnterCode:
addObserverForName:object:queue:usingBlock:
codeEnteredAction
removeObserver:
initWithAlertStyle:
setAuthenticateTitle:
setAuthenticateButtonTitle:
disablesAutomaticKeyboardDismissal
_jiggleTheAlert
_clearPasswordField
_beginObservingDidEnterCodeNotifications
setAk_cancelAction:
setAuthenticateAction:
setCreateIDAction:
setUseIDAction:
setForgotIDAction:
setForgotPasswordAction:
setRegenerateCodeAction:
setCodeEnteredAction:
setGeneratedCode:
_alertStyle
_didEnterCodeObserver
_ak_cancelAction
_ak_authenticateAction
_ak_createIDAction
_ak_useIDAction
_ak_forgotIDAction
_ak_forgotPasswordAction
_ak_username
_ak_password
_ak_title
_ak_reason
_ak_authenticateButtonTitle
_ak_regenerateCodeAction
_ak_codeEnteredAction
_generatedCode
clientInfo
_harvestDataFromClientInfo:withExtractor:
harvestIDMSRecoveryInfoFromClientInfo:
_harvestIDMSRecoveryHeadersInfo:
harvestIDMSRecoveryInfoFromHeaders:
harvestDataFromServerUIObjectModel:
harvestDataFromCompanionResponse:
_harvestedData
setShouldUpdatePersistentServiceTokens:
setSupportsPiggybacking:
setForceInlinePresentation:
_shortLivedToken
isPresentingServerUI
dismissViewControllerAnimated:completion:
_presentLoginAlertWithError:title:message:waitForInteraction:completion:
setupAssistantStyle
applyToObjectModel:
usernameForCreating
passwordForCreating
setNavigationController:
_overrideFirstActionSignal
_topViewControllerOnLoadStart
_navigationController
_presentBasicLoginUIAlertWithCompletion:
_contextWillBeginPresentingSecondaryUI
requestType
_presentServerProvidedUIWithConfiguration:completion:
_presentIDPProvidedUIWithConfiguration:completion:
cdpUiProvider
initWithContext:uiProvider:
presentNativeRecoveryUIWithCompletion:
_contextDidEndPresentingSecondaryUI
_dismissServerProvidedUIWithCompletion:
contextDidPresentLoginAlertController:
contextWillDismissLoginAlertController:
contextDidDismissLoginAlertController:
contextWillBeginPresentingSecondaryUI:
contextDidEndPresentingSecondaryUI:
authenticationType
isListeningForHSATokenAutoFill
stopListeningForHSATokenAutoFill
defaultButtonString
shouldAllowAppleIDCreation
_interpolatedReasonWithBlame
_cleanUpBasicLogin
setShouldAllowAppleIDCreation:
_cleanUpBasicLoginWithCompletion:
transitionCoordinator
superview
deviceSpecificLocalizedStringWithKey:
alertDelegate
integerValue
numberWithInteger:
forceInlinePresentation
_remoteUIController
setHostViewController:
setHandlerForElementName:handler:
loadRequest:completion:
_contextWillDismissLoginAlertController
showViewController:sender:
_contextDidPresentLoginController
initWithRootViewController:
_navController
viewControllers
containsObject:
accountRecoveryControllerWithPresentingViewController:
topViewController
httpHeadersForRemoteUI
enumerateKeysAndObjectsUsingBlock:
_isDeferrableFinalResponseHarvested
isResponseFinal:
errorWithDomain:code:userInfo:
numberWithUnsignedInteger:
defaultPages
setLeftNavigationBarButtonItem:
_setUseCustomBackButtonAction:
_handleBackButtonTap:
initWithTitle:style:target:action:
setBackBarButtonItem:
protectionSpace
authenticationMethod
serverTrust
isValidCertificateTrust:forHostname:
defaultSessionConfiguration
proxiedDevice
anisetteDataProvider
setAnisetteDataProvider:
setPairedDevice:
set_appleIDContext:
setSessionConfiguration:
setStyle:
initWithRemoteUIController:
setPresentingController:
attachPasscodeHandler:
startListeningForHSATokenAutoFill
setHidesBackButton:
_contextDidDismissLoginAlertController
_isSatisfyingPasswordRequirements
setPresentingViewController:
setPresentingServerUI:
_setCdpUiProvider:
_basicLoginViewController
_modalRemoteUINavController
_currentRemoteOM
_serverUIContextController
_deferredResponse
_nativeRecoveryController
_stingrayController
_forceInlinePresentation
_presentingServerUI
_presentingViewController
_alertDelegate
_cdpUiProvider
__passwordDelegate
nonPersistentDataStore
setWebsiteDataStore:
setSuppressesIncrementalRendering:
setMediaTypesRequiringUserActionForPlayback:
initWithFrame:configuration:
setNavigationDelegate:
tapToSignInViewController:didAuthenticateWithResults:error:
LockIcon
com.apple.AuthKitUI
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
webView
T@"WKWebView",R,N
idpHandler
T@"AKIDPHandler",&,N,V_idpHandler
secureIconView
T@"UIImageView",&,N,V_secureIconView
titleLabel
T@"UILabel",&,N,V_titleLabel
titleStackView
T@"UIStackView",&,N,V_titleStackView
T@"WKWebView",R,N,V_webView
iforgot
com.apple.authkitui.password_recovery_button_tapped
X-Apple-ServerUI-Action
push
showModal
serverUIDelegate
T@"AKAppleIDServerResourceLoadDelegate",R,N,V_serverUIDelegate
serverDataHarvester
T@"AKAppleIDServerUIDataHarvester",R,N,V_serverDataHarvester
initiatingURL
T@"NSURL",R,C,N,V_initiatingURL
Localizable
v16@?0@"UIAlertAction"8
remoteUIStyle
T@"RUIStyle",&,N,V_remoteUIStyle
password
T@"NSString",&,N,V_password
BPSRemoteUISetupStyle
/System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences
BPSApplyStyleToNavBar
V:|[generatorLabel]|
generatorLabel
codeGeneratorLabel%d
GROUP_SEPARATOR_SPACING
DIGIT_SPACING
|[codeGeneratorLabel0]-(DIGIT_SPACING)-[codeGeneratorLabel1]-(DIGIT_SPACING)-[codeGeneratorLabel2]-(GROUP_SEPARATOR_SPACING)-[codeGeneratorLabel3]-(DIGIT_SPACING)-[codeGeneratorLabel4]-(DIGIT_SPACING)-[codeGeneratorLabel5]|
generatedCode
autocapitalizationType
Tq,N
autocorrectionType
spellCheckingType
smartQuotesType
smartDashesType
smartInsertDeleteType
keyboardType
keyboardAppearance
returnKeyType
enablesReturnKeyAutomatically
TB,N
secureTextEntry
TB,N,GisSecureTextEntry
textContentType
T@"NSString",C,N
passwordRules
T@"UITextInputPasswordRules",C,N
hasText
TB,R,N
generatorFields
T@"NSArray",&,N,V_generatorFields
activeConstraints
T@"NSArray",&,N,V_activeConstraints
firstGeneratorField
T@"UILabel",R,N
stringValue
VERIFICATION_HEADER
ENTER_VERIFICATION_CODE
transform
shake
codeGeneratorView
T@"AKCodeEntryView",&,N,V_codeGeneratorView
titleHeaderViewController
T@"AKBasicLoginContentViewController",&,N,V_titleHeaderViewController
authenticationContext
T@"AKAppleIDAuthenticationContext",&,N,V_authenticationContext
reason
T@"NSString",R,N
AKSecondFactorCodeEntryContentViewControllerDidEnterCodeNotification
_titleLabel,_messageLabel
_titleLabel
H_MARGIN
H:|-(H_MARGIN)-[_titleLabel]-(H_MARGIN)-|
H:|-(H_MARGIN)-[_messageLabel]-(H_MARGIN)-|
AppleID
bannerView
T@"UIImageView",&,N,V_bannerView
messageLabel
T@"UILabel",&,N,V_messageLabel
bannerImage
T@"UIImage",&,N,V_bannerImage
titleText
T@"NSString",C,N,V_titleText
messageText
T@"NSString",C,N,V_messageText
contentContainerView
T@"AKBasicLoginContentViewControllerContainerView",R,N
you must set a delegate before the button is pressed
v24@?0@"NSDictionary"8@"NSError"16
authInProgress
TB,N,GisAuthInProgress,V_authInProgress
usesDarkMode
TB,N,V_usesDarkMode
context
T@"AKAppleIDAuthenticationInAppContext",&,V_context
delegate
T@"<AKSignInViewControllerDelegate>",W,V_delegate
authenticationController
T@"AKAppleIDAuthenticationController",R
AKInlineSignInViewController_iOS
SIGN_IN_BUTTON_TITLE
IFORGOT_BUTTON_TITLE
CREATE_APPLE_ID_BUTTON_TITLE
Call -init instead of -initWithNibName:bundle:
APPLE_ID
EMAIL_PLACEHOLDER
CAPITALIZED_PASSWORD
PASSWORD_PLACEHOLDER
EMAIL_OR_PHONE_PLACEHOLDER
v12@?0B8
loginFieldsContainer
T@"UIView",&,V_loginFieldsContainer
appleIDField
T@"AKTextField",&,V_appleIDField
passwordField
T@"AKTextField",&,V_passwordField
signInButton
T@"UIButton",&,V_signInButton
iforgotButton
T@"UIButton",&,V_iforgotButton
createAppleIDButton
T@"UIButton",&,V_createAppleIDButton
spinner
T@"UIActivityIndicatorView",&,V_spinner
wantsAuthenticationProgress
TB,V_wantsAuthenticationProgress
blurEffectStyle
usesVibrancy
primaryButtonTitle
T@"NSString",R,V_primaryButtonTitle
secondaryButtonTitle
T@"NSString",C
tertiaryButtonTitle
fieldBackgroundColor
T@"UIColor",&,N,V_fieldBackgroundColor
Unknown text field style!
@"UIImage"24@?0q8q16
_backgroundImageView
V:|[_backgroundImageView]|
|[_backgroundImageView]|
backgroundView
V:|[backgroundView]|
|[backgroundView]|
containingView,_entryDescription,_entryField
_leadingToEntryDescription
_entryDescriptionMinWidth
_entryDescriptionMaxWidth
_entryDescriptionToEntryField
_entryFieldToTrailing
|-_leadingToEntryDescription-[_entryDescription(>=_entryDescriptionMinWidth,<=_entryDescriptionMaxWidth)]-(_entryDescriptionToEntryField)-[_entryField]-_entryFieldToTrailing-|
containingView,_entryField
|-_leadingToEntryDescription-[_entryField]-_entryFieldToTrailing-|
%llu-%llu-%@
visualEffectView
T@"UIVisualEffectView",&,N,V_visualEffectView
backgroundImageView
T@"UIImageView",&,N,V_backgroundImageView
constraints
T@"NSMutableArray",&,N,V_constraints
entryDescription
T@"UILabel",R,N,V_entryDescription
entryField
T@"UITextField",R,N,V_entryField
textFieldStyle
Tq,N,V_textFieldStyle
rowIdentifier
Tq,N,V_rowIdentifier
TB,N,V_usesVibrancy
Tq,N,V_blurEffectStyle
enabled
TB,N,GisEnabled
insetSize
T{CGSize=dd},N,V_insetSize
DEFAULT_PLACEHOLDER_AUTHENTICATION_REASON
SIGN_IN
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
ak_jiggleAnimation
bodyLabel
T@"UILabel",&,N,V_bodyLabel
T@"UITextField",&,N,V_passwordField
T@"AKRoundedButton",&,N,V_signInButton
containerView
T@"UIView",&,N,V_containerView
 (function () {                                         var result = {};                                         var forms = document.getElementsByTagName('form');                                         for(var i = 0; i < forms.length; i++) {                                             if (forms[i].action.startsWith(`%@`)) {                                                 result['acs_action'] = forms[i].action;                                                 var nodeList = forms[i].querySelectorAll('input[type=hidden]');                                                 for(var i = 0; i < nodeList.length; i++) {                                                     result[nodeList[i].name] = nodeList[i].value;                                                 }                                                 break;                                             }                                         }                                         return result;                                     })();
acs_action
v24@?0@8@"NSError"16
completion
T@?,C,N,V_completion
configuration
T@"AKServerRequestConfiguration",R,N,V_configuration
T@"<AKIDPHandlerDelegate>",W,N,V_delegate
statusCode
ALERT_CANCEL
%username%
B8@?0
APPLE_ID_SIGN_IN_HEADER
APPLE_ID_ALERT_PLACEHOLDER
v16@?0@"UITextField"8
PASSCODE_ALERT_PLACEHOLDER
PASSWORD_ALERT_PLACEHOLDER
APPLE_ID_PASSCODE_HEADER_IPAD
APPLE_ID_PASSWORD_HEADER
USE_APPLE_ID
CREATE_APPLE_ID
FORGOT_APPLE_ID
FORGOT_PASSWORD_ALERT
FORGOT_TITLE
FORGOT_DESCRIPTION
DIDNT_GET_A_CODE
B32@?0@"UITextField"8Q16^B24
jiggle
v16@?0@"NSNotification"8
username
T@"NSString",C,N,V_ak_username
T@"NSString",C,N,V_ak_password
authenticateTitle
T@"NSString",C,N,V_ak_title
T@"NSString",C,N,V_ak_reason
authenticateButtonTitle
T@"NSString",C,N,V_ak_authenticateButtonTitle
T@"NSString",C,N,V_generatedCode
alertStyle
authenticateAction
T@?,C,N,V_ak_authenticateAction
ak_cancelAction
T@?,C,N,V_ak_cancelAction
createIDAction
T@?,C,N,V_ak_createIDAction
useIDAction
T@?,C,N,V_ak_useIDAction
forgotIDAction
T@?,C,N,V_ak_forgotIDAction
forgotPasswordAction
T@?,C,N,V_ak_forgotPasswordAction
regenerateCodeAction
T@?,C,N,V_ak_regenerateCodeAction
codeEnteredAction
T@?,C,N,V_ak_codeEnteredAction
T@"<AKBasicLoginAlertControllerDelegate>",W,N,V_delegate
appleIdRowId
appleIdRowPrefixId
appleIdRowSuffixId
appleIdServerInfoId
appleIdServerInfoSuffixId
passwordRowId
newPasswordRowId
X-Apple-AK-Recovery-URL-Key
(******)
harvestedData
T@"NSDictionary",R,C,N
(null)
navigationController
T@"UINavigationController",W,N,V_navigationController
usernameForCreating
passwordForCreating
v24@?0@"NSString"8@"NSError"16
v20@?0B8@"NSError"12
username must not be nil for pre-filled alert style
v24@?0@"NSString"8@"NSString"16
v16@?0@"NSString"8
FORGOT_PASSWORD_ALERT_MESSAGE
FORGOT_PASSWORD_ALERT_TITLE
FORGOT_PASSWORD_ALERT_CANCEL_BUTTON
FORGOT_PASSWORD_ALERT_RESET_BUTTON
KEEP_USING_ALERT_TITLE
KEEP_USING_ALERT_YES_BUTTON
KEEP_USING_ALERT_NO_BUTTON
KEEP_USING_ALERT_CANCEL_BUTTON
CANCEL
TRY_AGAIN
v32@?0@"RUIObjectModel"8@"RUIElement"16@"NSDictionary"24
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"NSString"8@"NSString"16^B24
VERIFICATION_FAILED
SERVER_ERROR
GENERIC_BACK_BUTTON
presentingServerUI
TB,N,GisPresentingServerUI,V_presentingServerUI
alertDelegate
T@"<AKAppleIDAuthenticationInAppContextAlertDelegate>",W,N,V_alertDelegate
cdpUiProvider
T@"<CDPStateUIProvider>",&,N,S_setCdpUiProvider:,V_cdpUiProvider
_passwordDelegate
T@"<AKAppleIDAuthenticationInAppContextPasswordDelegate>",W,N,S_setPasswordDelegate:,V__passwordDelegate
forceInlinePresentation
TB,N,V_forceInlinePresentation
presentingViewController
T@"UIViewController",W,N,V_presentingViewController
T@"<AKAppleIDAuthenticationInAppContextDelegate>",W,N,V_delegate
AAUICDPStingrayRemoteUIController
/System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI
AKIDPProvidedSignInViewController
AKIDPHandlerDelegate
NSObject
AKIDPPresentationController
AuthKitUI
AKAppleIDServerUIContextController
AKAppleIDAuthenticationUISurrogateContext
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationUIProvider
AKAppleIDAuthenticationLimitedUIProvider
AKAppleIDServerAuthenticationUIProvider
AKAppleIDAuthenticationWatchBuddyContext
RemoteUIControllerDelegate
AKCodeEntryView
UIKeyInput
UITextInputTraits
AKSecondFactorCodeEntryContentViewController
CAAnimationDelegate
AKSecondFactorCodeEntry
AKBasicLoginContentViewControllerContainerView
AKBasicLoginContentViewController
AKBaseSignInViewController
AKInlineSignInViewController
UITextFieldDelegate
AKAppleIDAuthenticationInAppContextPasswordDelegate
Deprecated
AKRoundedButton
AKTextField
AKAppleIDObjectModelFieldExtractor
AKAppleIDServerUIFieldExtractor
AuthKit
_AKInsetTextField
AKModalSignInViewController
AKAppleIDAuthenticationInAppContextAlertDelegate
AKIDPHandler
WKNavigationDelegate
AKURLRequestApprover
AKAppleIDAuthenticationInAppExtensionContext
AKBasicLoginAlertController
AKAppleIDServerUIDataHarvester
AKAppleIDAuthenticationPurpleBuddyContext
AKAppleIDAuthenticationInAppContext
AKBasicLoginAlertControllerDelegate
AKTapToSignInViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"AKIDPHandler"16@"WKWebView"24
@24@0:8@16
@24@0:8@"AKIDPHandler"16
@"WKWebView"16@0:8
v16@0:8
v20@0:8B16
v24@0:8@16
@"WKWebView"
@"AKIDPHandler"
@"UIImageView"
@"UILabel"
@"UIStackView"
@32@0:8@16@?24
v32@0:8@16@?24
@24@0:8Q16
v40@0:8@16@24@32
@"NSHTTPURLResponse"
@"AKServerRequestConfiguration"
@"AKAppleIDServerResourceLoadDelegate"
@"AKAppleIDServerUIDataHarvester"
@"NSURL"
v24@0:8@?16
v48@0:8@16@24@32@?40
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
@24@0:8@"NSString"16
B40@0:8@16@24@32
B48@0:8@16@24@32@40
v40@0:8@16@24@?32
v36@0:8@16@24B32
@40@0:8@16@24@32
v40@0:8@16@24^Q32
B40@0:8@"RemoteUIController"16@"NSMutableURLRequest"24@"NSURLResponse"32
v48@0:8@"RemoteUIController"16@"NSMutableURLRequest"24@"NSURLResponse"32@?<v@?B@"NSError">40
B48@0:8@"RemoteUIController"16@"RUIObjectModel"24@"RUIElement"32@"RUIPage"40
v32@0:8@"RemoteUIController"16@"NSError"24
v32@0:8@"RemoteUIController"16@"NSHTTPURLResponse"24
v40@0:8@"RemoteUIController"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v36@0:8@"RemoteUIController"16@"RUIObjectModel"24B32
v32@0:8@"RemoteUIController"16@"RUIObjectModel"24
v32@0:8@"RemoteUIController"16@"UINavigationController"24
v32@0:8@"RemoteUIController"16@"NSArray"24
v24@0:8@"RemoteUIController"16
@"RUIPage"40@0:8@"RemoteUIController"16@"NSString"24@"NSDictionary"32
v40@0:8@"RemoteUIController"16@"RUIObjectModel"24^Q32
v32@0:8@"RemoteUIController"16@"NSMutableURLRequest"24
@"NSString"
@"RUIStyle"
q16@0:8
v24@0:8q16
v24@0:8@"NSString"16
@"UITextInputPasswordRules"16@0:8
v24@0:8@"UITextInputPasswordRules"16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSMutableString"
@"UITapGestureRecognizer"
@"NSArray"
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@"AKCodeEntryView"
@"AKBasicLoginContentViewController"
@"AKAppleIDAuthenticationContext"
@"UIImage"
@32@0:8@16@24
B24@0:8Q16
v40@0:8Q16@24@32
v24@0:8B16B20
@"AKAppleIDAuthenticationController"
@"AKAppleIDAuthenticationInAppContext"
@"<AKSignInViewControllerDelegate>"
v32@0:8@16q24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v32@0:8@"AKAppleIDAuthenticationInAppContext"16@?<v@?@"NSString"@"NSError">24
v32@0:8@16:24
v24@0:8Q16
@"UIColor"
@"UIView"
@"AKTextField"
@"UIButton"
@"UIActivityIndicatorView"
{UIEdgeInsets=dddd}16@0:8
@40@0:8q16q24@32
v72@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24i56d60i68
v76@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24i56d60@68
@48@0:8q16q24@32@?40
@"UITextField"
@"UIVisualEffectView"
@"NSMutableArray"
@"NSString"24@0:8@"NSString"16
@"RUIObjectModel"
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
v40@0:8@"AKAppleIDAuthenticationInAppContext"16@"NSError"24@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">32
v40@0:8{CGSize=dd}16@32
@"AKRoundedButton"
@32@0:8@16:24
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
@?16@0:8
@"AKURLRequestApprover"
@"<AKIDPHandlerDelegate>"
@24@0:8q16
@"<NSObject>"
@"<AKBasicLoginAlertControllerDelegate>"
@"NSMutableDictionary"
@"NSDictionary"
@"UIViewController"
@"UINavigationController"
v24@0:8@"AKBasicLoginAlertController"16
v52@0:8@16@24@32B40@?44
@"AKBasicLoginAlertController"
@"RemoteUIController"
@"AKAppleIDServerUIContextController"
@"AKNativeAccountRecoveryController"
@"AAUICDPStingrayRemoteUIController"
@"<AKAppleIDAuthenticationInAppContextDelegate>"
@"<AKAppleIDAuthenticationInAppContextAlertDelegate>"
@"<CDPStateUIProvider>"
@"<AKAppleIDAuthenticationInAppContextPasswordDelegate>"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
Detected BuddyML button tap with %@ action
Signing request with presentation action: %@
Processing a server UI response: %@
We're done with the server UI flow client-side, but there's no completion block to call!
Completed server UI request with final response: %@
Final response headers: %@
Completed server UI request with error: %@
Asked to present basic login UI; Forwarding password to akd.
Asked to dismiss basic login UI.
Asked to present login error alert; Title: (%@); Message: (%@).
Clearing Second Factor Entry Field
Authentication is already in progress.
Authentication not possible due to a restriction MCFeatureAccountModificationAllowed.
MCFeatureAccountModificationAllowed is restricted. Disabling UI.
Extracting value for row: %@
Passcode view with ID %@ found
BuddyML contained row with ID %{public}@ but it did not contain a text field.
Context interpolated reason was not providing, falling back to default strings...
Will take user to password-reset flow for %@...
Processing IDP URL navigation: %@
We reached the acsURL path, canceling the webView and providing the request to idMS
Evaluating ACS result: %@
Made redirection decision (%@) for <%@>
Failed to match path: %@ > %@
Received request to clear 2FA Entry Field
Harvesting data from object model: %{private}@
Harvesting data with extractor: %{private}@
Found an Apple ID (%{private}@) with extractor %{private}@
Found a password with extractor %{private}@ - %{private}@
Harvesting data from response: %{private}@
Found continuation data header in HTTP response
Found Apple ID (%{private}@) in HTTP response
Harvested recovery continuation endpoint
Harvested native recovery action: %@
Buddy password from harverster %{private}@ - %{private}@
Suppressing interactive login for SLT upgrade
Suppressing login dismiss for SLT upgrade
Suppressing error for forced failure
Username is present but password is missing and required. Client should provide us with password.
Presenting RUI flow at url: %@
Presenting IDP flow at url: %@
Starting native recovery flow with context: %@
Dismissing native recovery flow
Context was asked to dismiss server provided UI
Presenting view controller is missing!!! Dragons ahead!
Creating new basic login UI instance.
Basic login UI is already on screen.
User is trying to sign in!
User canceled!
User is creating an AppleID!
User is using an AppleID!
User forgot the password!
Attempting to present basic login instance during animation or without a superview... dragons ahead...
Presenting basic login instance...
akd says there was an issue with the login. Will display alert.
User canceled login error alert.
User asked to reset password in response to login error.
Displaying login alert...
User dismissed login error alert.
Will skip showing login error alert.
User is retrying login after error.
Presenting keep using alert for %@
User accepted using the suggested Apple ID.
User declined to use the suggested Apple ID.
User opted to cancel using the suggested Apple ID.
User canceled second-factor entry!
User says they did not get a code.
User entered code %@.
Client was asked to dismiss server-provided UI.
Looks like the server UI has already been dismissed.
We still have basic login UI in our nav stack. Ignoring dismiss request.
Forcing inline presentation with presenter: %@
Starting nav controller: %@
A server UI request load succeeded with response: %@
Final response detected and we are not modal, finishing...
We are inside a modal flow, deferring response processing
A deferrable final response detected, waiting for object model to load before completing
A server UI load failed with error %@
Presenting modal nav controller: %@
Dismissed the modal nav controller
Server UI object model received: %@ - %d
Top view controller has changed since load start. Aborting flow.
Server UI is being dismissed.
We have a deferred server response, waiting until dismissal completion
Starting inline presentation
Incoming signal: %@
Handling first action signal
Handling back button tap, coercing into cancel
Server UI will present an object model: %@
Deferred final response detected, finishing...
Server UI received a challange, validating...
Server cert validity check failed!
Proxying for another device, so attaching secondary Anisette controller to our URL session config.
