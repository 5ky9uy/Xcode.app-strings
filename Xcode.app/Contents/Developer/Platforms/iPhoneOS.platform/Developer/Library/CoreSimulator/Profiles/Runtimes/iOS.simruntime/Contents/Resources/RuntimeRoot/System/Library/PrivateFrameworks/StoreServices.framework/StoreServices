init
alloc
initWithServiceName:
initWithFormat:
UTF8String
_sendMessage:completionBlock:
class
initWithXPCEncoding:
numberWithInt:
isEqualToNumber:
sendMessage:withReply:
createAttestationDataForAccountIdentifier:completionBlock:
deleteKeychainTokensForAccountIdentifier:completionBlock:
getPublicKeyDataForAccountIdentifier:completionBlock:
signData:reason:fallback:cancel:forAccountIdentifier:completionBlock:
signData:context:completionBlock:
.cxx_destruct
_connection
_dispatchQueue
setEventType:
setEventVersion:
propertyForBodyKey:
copy
setProperty:forBodyKey:
actionType
actionURL
details
dialogId
dialogType
eventType
message
result
targetId
userActions
userAgent
setActionType:
setActionURL:
setDetails:
setDialogId:
setDialogType:
setMessage:
setResult:
setTargetId:
setUserActions:
setUserAgent:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
copyXPCEncoding
intValue
sharedStoreServicesConfig
sharedConfig
shouldLog
OSLogObject
shouldLogToDisk
stringByReplacingOccurrencesOfString:withString:
restartApplication:
_serialQueue
objectForKey:
flavor
URLString
stringWithFormat:
isEqualToString:
initWithAssetDictionary:
downloadKey
sinfs
assetDictionary
_assetDictionary
isFieldBlacklistEnabled
countByEnumeratingWithState:objects:count:
unsignedLongLongValue
initWithDownloaderAccountIdentifier:purchaserAccountIdentifier:familyIdentifier:
addObject:
downloaderAccountIdentifier
numberWithUnsignedLongLong:
setObject:forKey:
familyIdentifier
purchaserAccountIdentifier
count
initWithObjectsAndKeys:
notificationPayloadWithAccountPairs:
postDistributedNotificationWithAccountPairs:
initWithNotificationUserInfo:
initWithXPCEventStreamEvent:
deletedAccounts
_deletedAccounts
_downloaderAccountIdentifier
_familyIdentifier
_purchaserAccountIdentifier
initWithManagerOptions:
addObserver:
_handleDownloadsDidChange:
initWithDownloadKinds:
raise:format:
allObjects
setDownloadKinds:
setPersistenceIdentifier:
arrayWithObjects:
setPrefetchedDownloadExternalProperties:
setPrefetchedDownloadProperties:
_initWithDownloadManagerOptions:
removeObserver:
dealloc
setWithObjects:
arrayWithObject:
addDownloads:completionBlock:
canCancelDownload:
cancelDownloads:completionBlock:
managerOptions
downloadKinds
setWithArray:
downloads
getDownloadsUsingBlock:
isUsingNetwork
reloadFromServer
valueForProperty:
downloadPhaseIdentifier
indexOfObject:
_sendDownloadStatusChangedAtIndex:
_handleDownloadsRemoved:
_sendQueueNetworkUsageChanged
_messageObserversWithFunction:context:
containsObject:
_willFinishDownloads:
_sendQueueChangedWithRemovals:
_finishDownloads:
mediaDownloadKinds
softwareApplicationDownloadKinds
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
downloadManager:downloadsDidChange:
initWithDownloadManagerOptions:
addDownload:
cancelDownload:
downloadManager
addPlaceholderDownloads:
downloadForItemIdentifier:
placeholderDownloads
preorders
removePlaceholderDownload:
startPreOrderDownload:
_sendQueuePreOrdersChanged
shouldAutomaticallyFinishDownloads
setShouldAutomaticallyFinishDownloads:
_autoFinishDownloads
_downloadManager
_observers
downloadQueue:downloadStatusChangedAtIndex:
downloadQueue:changedWithRemovals:
downloadQueueNetworkUsageChanged:
downloadQueuePreOrdersChanged:
allocWithZone:
setAccountIdentifier:
setAttachments:
setAttributed:
setAuthorIdentifier:
setAuthorType:
setContentItems:
setExternalServiceDestinations:
setSourceApplicationIdentifier:
setText:
copyWithZone:
accountIdentifier
attachments
isAttributed
authorIdentifier
authorType
contentItems
externalServiceDestinations
sourceApplicationIdentifier
text
_accountIdentifier
_attachments
_attributed
_authorIdentifier
_authorType
_contentItems
_externalServiceDestinations
_sourceApplicationIdentifier
_text
_initWithPersistentIdentifier:
longLongValue
addEntriesFromDictionary:
initWithObjects:
_legacyAssetType
setValue:forProperty:
_becomeManagedOnConnection:
valueForExternalProperty:
doubleValue
_errorWithData:
_isManaged
getValues:forProperties:count:
boolValue
initWithRestoreDownload:
isEligibleForRestore:
downloadPolicy
policyRules
networkTypes
downloadSizeLimit
integerValue
setSizeLimit:forNetworkType:
persistentIdentifier
initWithLongLong:
_errorWithXPCReply:
indexOfObjectIdenticalTo:
removeObjectAtIndex:
removeObjectForKey:
enumerateKeysAndObjectsUsingBlock:
handlerIdentifier
numberWithLongLong:
null
setExternalValuesWithDictionary:
setDownloadPolicy:
initWithNetworkConstraints:
newDownloadProperties
setValuesWithDictionary:
floatValue
setPercentComplete:
_applyPhase:toStatus:
isPausable
setPausable:
setError:
_resetLocalIVars
initWithURL:
setITunesStoreRequest:
initWithURLRequestProperties:
setValuesWithStoreDownloadMetadata:
dataWithPropertyList:format:options:error:
primaryAssetURL
host
length
_newAssetWithURL:assetType:
addAsset:forType:
fullSizeImageURL
podcastFeedURL
setDownloadHandler:completionBlock:
setValuesFromDownload:
setValue:forKey:
setContentRestricted:
setCanPause:
percentComplete
setNormalizedCurrentValue:
setNormalizedMaxValue:
setOperationProgress:
setFailed:
setPaused:
setOperationType:
_existsMessage
_getExternalValuesMessage
_getValueMessage
_setExternalValuesMessage
_setValuesMessage
initWithPersistentIdentifier:
_initWithLocalPropertyValues:
assetsForType:
backgroundNetworkingJobGroupName
bytesDownloaded
bytesTotal
estimatedSecondsRemaining
failureError
isCancelable
networkConstraints
pause
prioritizeAboveDownload:completionBlock:
removeAsset:
resume
restart
setBackgroundNetworkingJobGroupName:
setNetworkConstraints:
_addCachedExternalValues:
_addCachedPropertyValues:
initWithDownloadMetadata:
assets
downloadIdentifier
handleWithDownloadHandler:completionBlock:
isBackgroundNetworkingUserInitiated
isExternal
metadata
setAssets:
setBackgroundNetworkingUserInitiated:
setMetadata:
setStatus:
status
_localAssets
_resetStatus
_XPCConnection
_metadata
_prioritizeAboveDownload
_status
targetApplication
contentKind
_targetApplicationWithContentKind:
_URLSchemeWithApplication:
setScheme:
setPath:
queryItemWithName:value:
stringValue
_stringForContentKind:
insertObject:atIndex:
setQueryItems:
categoryName
setCategoryName:
setContentKind:
itemIdentifier
setItemIdentifier:
itemTitle
setItemTitle:
providerName
setProviderName:
searchTerm
setSearchTerm:
setTargetApplication:
_categoryName
_contentKind
_itemIdentifier
_itemTitle
_providerName
_searchTerm
_targetApplication
initWithDictionary:
mutableCopy
defaultItemOffer
initWithItem:offer:
ITunesStoreIdentifier
isPreorder
preOrderIdentifier
setPreOrderIdentifier:
artistIdentifier
itemIdentifierValue
setArtistIdentifier:
bundleIdentifier
setBundleIdentifier:
collectionArtistName
setCollectionArtistName:
collectionIdentifier
setCollectionIdentifier:
collectionIndexInCollectionGroup
setCollectionIndexInCollectionGroup:
collectionName
setCollectionName:
isCompilation
setCompilation:
composerName
setComposerName:
episodeIdentifier
setEpisodeIdentifier:
episodeSortIdentifier
setEpisodeSortIdentifier:
genreName
setGenre:
genreIdentifier
setGenreIdentifier:
indexInCollection
setIndexInCollection:
longDescription
setLongDescription:
networkName
setNetworkName:
numberOfCollectionsInCollectionGroup
setNumberOfCollectionsInCollectionGroup:
numberOfItemsInCollection
setNumberOfItemsInCollection:
podcastEpisodeGUID
setPodcastEpisodeGUID:
seasonNumber
setSeasonNumber:
seriesName
setSeriesName:
shortDescription
setShortDescription:
artistName
setSubtitle:
setTitle:
videoDetails
setVideoDetailsDictionary:
itemKind
setKind:
softwareType
setValue:forMetadataKey:
contentRating
setContentRating:
isExplicitContent
setExplicitContent:
isHighDefinition
setHighDefinition:
playableMedia
fullDurationInMilliseconds
numberWithInteger:
setDurationInMilliseconds:
imageCollection
bestImageForSize:
setFullSizeImageURL:
imagesForKind:
lastObject
isPrerendered
setArtworkIsPrerendered:
setThumbnailImageURL:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
releaseDate
currentCalendar
components:fromDate:
year
setReleaseYear:
setReleaseDate:
setPodcastType:
setPodcastFeedURL:
setPrimaryAssetURL:
allowsKeyedCoding
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
lock
encodeObject:forKey:
unlock
decodeObjectForKey:
containsValueForKey:
decodeBoolForKey:
setDownloadKey:
setRental:
setSinfs:
setTransactionIdentifier:
mutableCopyWithZone:
valueForFirstAvailableKey:
valueForMetadataKey:
_stringValueForValue:
URLWithString:
initWithImageCollection:
hlsPlaylistURL
isPremium
hasHDR
_urlValueForValue:
_dateValueForValue:
_releaseDateValue
unarchiveTopLevelObjectWithData:error:
numberWithItemIdentifier:
keyStyle
_setValueCopy:forMetadataKey:
numberWithBool:
contentRatingDictionary
absoluteString
setArtistName:
archivedDataWithRootObject:
subtitle
title
_newImageCollectionWithURLString:
_thumbnailArtworkImage
allKeys
isRestricted
kind
betaExternalVersionIdentifier
cloudIdentifier
downloadPermalink
documentTargetIdentifier
durationInMilliseconds
enableExtensions
genre
longSeasonDescription
messagesArtworkURL
pageProgressionDirection
podcastType
releaseYear
purchaseDate
publicationVersion
transactionIdentifier
cancelDownloadURL
thumbnailImageURL
redownloadActionParameters
thumbnailNewsstandBindingEdge
thumbnailNewsstandBindingType
viewStoreItemURL
variantIdentifier
artworkIsPrerendered
hasMessagesExtension
isDeviceBasedVPP
isRental
isSample
isSharedResource
isTvTemplate
launchProhibited
isMusicShow
isHLS
composerIdentifier
rentalID
setLockdownDictionary:
uniqueIdentifier
accountName
_valueForFirstAvailableTopLevelKey:
_newDateFormatter
stringFromDate:
objectAtIndex:
initWithCapacity:
_setValue:forTopLevelKey:
classForCoder
setBetaExternalVersionIdentifier:
setDownloadPermalink:
setCancelDownloadURL:
setCloudIdentifier:
setDocumentTargetIdentifier:
setEnableExtensions:
setLongSeasonDescription:
setMessagesArtworkURL:
setPageProgressionDirection:
setPurchaseDate:
setPublicationVersion:
setRedownloadActionParameters:
setViewStoreItemURL:
setVariantIdentifier:
setComposerIdentifier:
setAutomaticDownload:
setHasMessagesExtension:
setDeviceBasedVPP:
setSample:
setSharedResource:
setTvTemplate:
setLaunchProhibited:
setPreferredAssetFlavor:
valueForKey:
firstObject
currentDevice
supportsDeviceCapability:
addObjectsFromArray:
dictionaryWithObjects:forKeys:count:
dateFromString:
initWithString:
setURL:
setImageKind:
initWithItemImages:
setDateFormat:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
thumbnailImageCollection
encodeWithCoder:
initWithCoder:
initWithItem:
initWithKind:
applicationIdentifier
is32BitOnly
launchExtrasUrl
primaryAssetDictionary
sagaIdentifier
setHlsPlaylistURL:
setLaunchExtrasUrl:
setRentalID:
setSagaIdentifier:
setMusicShow:
setSortArtistName:
setSortCollectionName:
setSortTitle:
sortArtistName
sortCollectionName
sortTitle
videoDetailsDictionary
showComposer
workName
movementName
movementNumber
movementCount
appReceiptData
copyright
copyWritableMetadata
dictionary
epubRightsData
fileExtension
isAutomaticDownload
isContentRestricted
isRedownloadDownload
isSoftwareKind
isVideosKind
MD5HashStrings
numberOfBytesToHash
preferredAssetFlavor
releaseDateString
requestPersistentID
requiredDeviceCapabilities
setCopyright:
setDictionary:
setEpubRightsData:
setFileExtension:
setKeyStyle:
setMD5HashStrings:numberOfBytesToHash:
setRedownloadDownload:
setReleaseDateString:
setRequestPersistentID:
setRequiredDeviceCapabilities:
setShouldDownloadAutomatically:
setTransitMapDataURL:
shouldDownloadAutomatically
transitMapDataURL
_dictionary
_keyStyle
_lock
timeIntervalSinceReferenceDate
numberWithDouble:
dateWithTimeIntervalSinceReferenceDate:
appendString:
appendFormat:
_descriptionWithSubscriptionStatusDescriptorBlock:
subscriptionStatus
setSubscriptionStatus:
supportsMusicCatalogPlayback
setSupportsMusicCatalogPlayback:
supportsAddToCloudMusicLibrary
setSupportsAddToCloudMusicLibrary:
canSubscribeToMusicCatalog
setCanSubscribeToMusicCatalog:
_supportsMusicCatalogPlayback
_supportsAddToCloudMusicLibrary
_canSubscribeToMusicCatalog
_subscriptionStatus
_externalChangeNotification
defaultCenter
_validateLastKnownStatus
addObserver:selector:name:object:
_deviceStoreFrontChangedNotification
removeObserver:name:object:
initWithUserDefaultsRepresentation:
date
timeIntervalSinceDate:
_copyValidStatusForStatus:
_copyStatusDateFromUserDefaults
_copyStatusFromUserDefaults
carrierBundlingStatus
subscriptionExpirationDate
timeIntervalSinceNow
setAuthenticatesIfNecessary:
setCarrierBundleProvisioningStyle:
setLocalizedAuthenticationReason:
setReason:
_handleRequestResponseWithStatus:isFinal:error:
startWithStatusResponseBlock:
copyUserDefaultsRepresentation
defaultStore
activeAccount
phoneNumber
resetAccountBasedProperties
resetCarrierBundlingProperties
postNotificationName:object:
removeAllObjects
_fireStatusBlocksWithStatus:isFinal:error:
sharedCoordinator
copyStatusFromUserDefaults
updateUserDefaultsWithStatus:
_existingSharedCoordinator
getStatusWithOptions:statusBlock:
lastKnownStatus
modifyLastKnownStatusUsingBlock:
reset
_invalidateLastKnownStatus
_activeRequest
_callbackQueue
_didReset
_lastKnownStatus
_lastStatusDate
_notificationToken
_statusBlocks
_shutdownRequest
_startWithMessageID:messageBlock:
initWithQueueType:
startWithResponseBlock:
queueType
_queueType
isCancelled
_sendResponseBlockWithError:
errorWithDomain:code:userInfo:
initWithURLBagDictionary:
setHTTPMethod:
initWithURLRequest:
configureWithURLBagDictionary:
storeFrontSuffix
setStoreFrontSuffix:
setMachineDataStyle:
initWithPolicyType:
setSAPSignaturePolicy:
setOutputBlock:
main
request
dataUsingEncoding:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
setServerPlaybackContextData:
serverPlaybackContextDataDelegate
secureKeyDeliveryRequestOperationDidChangeServerPlaybackContextData:
_streamingKeyDictionaryForID:URI:serverPlaybackContextData:
arrayWithObjects:count:
_streamingRequestDictionaryWithStreamingKeyDictionaries:
dataWithJSONObject:options:error:
requestWithURL:
setHTTPBody:
setValue:forHTTPHeaderField:
consumer
setDataConsumer:
_contentKeyContextForStreamingKeyID:streamingKeyDictionaries:renewAfter:error:
_expirationTimeForStreamingKeyID:streamingKeyDictionaries:
_playbackStartTimeForStreamingKeyID:streamingKeyDictionaries:
persistentContentKeyFromKeyVendorResponse:options:error:
setPersistentContentKeyContext:
contentInformationRequest
setContentType:
dataRequest
respondWithData:
dateByAddingTimeInterval:
setRenewalDate:
isFinished
start
initWithBase64EncodedString:options:
isNSDictionary__
_timeIntervalForStreamingKeyID:responseKey:streamingKeyDictionaries:
base64EncodedStringWithOptions:
rentalId
skippedRentalCheckout
shouldIncludeGUID
uniqueDeviceIdentifier
leaseAction
offline
certificateURL
keyServerURL
persistentContentKeyContext
resourceLoadingRequest
responseBlock
serverPlaybackContextData
setCertificateURL:
setKeyServerURL:
setResourceLoadingRequest:
setResponseBlock:
setShouldIncludeGUID:
isITunesStoreRequest
setRentalId:
setSkippedRentalCheckout:
setLeaseAction:
setOffline:
expirationTime
playbackStartTime
setServerPlaybackContextDataDelegate:
_accessQueue
_certificateURL
_keyServerURL
_resourceLoadingRequest
_responseBlock
_iTunesStoreRequest
_shouldIncludeGUID
_URLBagDictionary
_persistentContentKeyContext
_serverPlaybackContextData
_skippedRentalCheckout
_offline
_rentalId
_leaseAction
_expirationTime
_playbackStartTime
_serverPlaybackContextDataDelegate
scheme
rangeOfString:options:
decodeObjectOfClass:forKey:
supportsSecureCoding
item
setItem:
updateDate
setUpdateDate:
_item
_updateDate
decimalDigitCharacterSet
invertedSet
componentsSeparatedByCharactersInSet:
userInfo
domain
code
bundleForClass:
localizedStringForKey:value:table:
initWithUnsignedLongLong:
initWithItemIdentifier:
stringByAppendingPathExtension:
pathWithComponents:
isFailed
error
operationProgress
canPause
normalizedCurrentValue
normalizedMaxValue
initWithOperationProgress:
isFailedTransient
activePhase
isPaused
_activePhase
_contentRestricted
_error
_failed
_paused
estimatedTimeRemaining
operationType
units
changeRate
currentValue
maxValue
phaseType
progressUnits
progressChangeRate
progressValue
totalProgressValue
_operationProgress
startWithCompletionBlock:
authenticationContext
setAuthenticationContext:
isRequestingOfflineSlot
setRequestingOfflineSlot:
_authenticationContext
_requestingOfflineSlot
_copyURLRequestProperties
copyURLRequest
lastPathComponent
setAllowedRetryCount:
setTimeoutInterval:
propertyListWithData:options:format:error:
setHTTPHeaders:
fileExistsAtPath:
initWithFileAtPath:
setHTTPBodyStream:
setRequestParameters:
setExpectedContentLength:
assetWithURL:type:
bytesUploaded
bytesUploadTotal
URLRequest
URLRequestProperties
_localProperties
initWithURLRequest:type:
assetType
downloadFileName
downloadPath
finalizedPath
fileSize
_assetType
stringByAppendingPathComponent:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
name
_ss_arrayByRemovingObjectsPassingTest:
_ss_any:
_ss_firstObjectPassingTest:
value
_ss_URLByRemovingQueryParameter:
_ss_hasQueryParameter:
_ss_valueForQueryParameter:
initWithDouble:
_updateStatisticsFromSnapshots
resetSnapshots
setChangeRate:
setCurrentValue:
setEstimatedTimeRemaining:
setMaxValue:
setUnits:
snapshot
_canPause
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_operationType
_snapshotTimes
_snapshotValues
_units
initWithFormat:arguments:
writeString:
initWithLogOptions:
deviceIsInternalBuild
logDirectoryPath
setLogDirectoryPath:
logFileBaseName
setLogFileBaseName:
maxLogFileSize
setMaxLogFileSize:
maxNumberOfLogFiles
setMaxNumberOfLogFiles:
_directoryPath
_fileName
_maxNumberOfLogFiles
_maxSizeInBytes
_enumerateItemsUsingBlock:
array
initWithItemDictionary:
fallbackStreamingKeyCertificateURL
setFallbackStreamingKeyCertificateURL:
fallbackStreamingKeyServerURL
setFallbackStreamingKeyServerURL:
enumerateObjectsUsingBlock:
initWithDictionary:URLResponse:
itemForItemIdentifier:
items
responseDictionary
URLResponse
_responseDictionary
_urlResponse
_fallbackStreamingKeyServerURL
_fallbackStreamingKeyCertificateURL
delegate
downloadManifestRequest:didReceiveResponse:
requestDidFinish:
request:didFailWithError:
startWithManifestResponseBlock:
setShouldHideUserPrompts:
shouldHideUserPrompts
manifestFormat
setManifestFormat:
_manifestFormat
_shouldHideUserPrompts
_urlRequest
sessionIdentifier
supportsProcessSharing
_CFURLRequest
_initWithCFCachedURLResponse:
data
isEqualToData:
response
storagePolicy
initWithResponse:data:userInfo:storagePolicy:
cachedConnectionResponseForRequestProperties:cachedResponse:
cachedResponseForRequest:
initWithURLResponse:bodyData:
initWithBodyDictionary:
setMetricsPageEvent:
_CFCachedURLResponse
isEqualToDictionary:
storeConnectionResponse:forRequestProperties:userInfo:
metricsPageEvent
bodyDictionary
bodyData
storeCachedResponse:forRequest:
initWithConfiguration:
cachedConnectionResponseForRequestProperties:
configureRequest:
loadMemoryCacheFromDisk
removeAllCachedResponses
saveMemoryCacheToDisk
storeConnectionResponse:forRequestProperties:
_accessSerialQueue
_cacheStorageSession
_configuration
_urlCache
setSessionIdentifier:
setSupportsProcessSharing:
_supportsProcessSharing
_sessionIdentifier
_calculatedExpiration
ssv_isExpiredResponse
initWithBytesNoCopy:length:freeWhenDone:
validDownloads
setValidDownloads:
_validDownloads
_initSSRequest
endBackgroundTask:
setDisconnectBlock:
setMessageBlock:
_shutdownRequestWithMessageID:
__beginBackgroundTask
__endBackgroundTask
_allowMultipleCallbacks
messageBlock
createXPCEndpoint
sendMessage:
_cancelBackgroundTaskExpirationTimer
weakReferenceWithObject:
object
_endBackgroundTask
disconnectBlock
cancel
disconnect
setUsesTaskCompletionAssertions:
usesTaskCompletionAssertions
setShouldCancelAfterTaskExpiration:
shouldCancelAfterTaskExpiration
_beginBackgroundTask
_expireBackgroundTask
setDelegate:
_backgroundTaskIdentifier
_cancelAfterTaskExpiration
_delegate
_requestConnection
_responseConnection
_backgroundTaskExpirationTimer
_callState
_taskAssertionState
_completionBlock
serialNumber
promiseAccessQueue
promise
setPromise:
addFinishBlock:
executeBlockQueue
finishWithError:
block
callBlockQueue
finishWithResult:error:
resultWithError:
initWithBlock:
addCompletionBlock:
setBlock:
setCallBlockQueue:
setExecuteBlockQueue:
_block
_callBlockQueue
_executeBlockQueue
_promise
_promiseAccessQueue
appAdamId
setAppAdamId:
appVersion
setAppVersion:
chargeCountryCode
setChargeCountryCode:
chargeCurrencyCode
setChargeCurrencyCode:
chargeStoreFrontIdentifier
setChargeStoreFrontIdentifier:
expireDate
setExpireDate:
familyId
setFamilyId:
inAppAdamId
setInAppAdamId:
inAppVersion
setInAppVersion:
isNewsAppPurchase
setNewsAppPurchase:
offerIdentifier
setOfferIdentifier:
originalPurchaseDownloadId
setOriginalPurchaseDownloadId:
purchasabilityType
setPurchasabilityType:
purchaseDownloadId
setPurchaseDownloadId:
quantity
setQuantity:
vendorIdentifier
setVendorIdentifier:
_newsAppPurchase
_appAdamId
_appVersion
_chargeCountryCode
_chargeCurrencyCode
_chargeStoreFrontIdentifier
_expireDate
_familyId
_inAppAdamId
_inAppVersion
_offerIdentifier
_originalPurchaseDownloadId
_purchasabilityType
_purchaseDownloadId
_quantity
_vendorIdentifier
_refreshContentTasteItems
tasteType
setPlaylistGlobalID:
setTasteType:
_contentTasteForItemUpdate:finishedWithError:
_sendUpdateWithItemUpdates:completionHandler:
setStoreAdamID:
responseRevisionID
contentTasteItems
playlistGlobalID
storeAdamID
_handleContentTasteItemsUpdateResponse:allowNotifications:
_isRetryableError:
compare:
_scheduleContentTasteUpdateOperationForFailedItems
allValues
arrayWithCapacity:
_retryOperationForItemUpdates:finishedWithError:
setContentTasteItemUpdates:
defaultMediaTasteController
contentTasteTypeForPlaylistGlobalID:
contentTasteTypeForStoreAdamID:
setContentTasteType:forPlaylistGlobalID:withCompletionHandler:
setContentTasteType:forStoreAdamID:withContentType:completionHandler:
_calloutSerialQueue
_currentResponseRevisionID
_lastNotificationReceivedResponseRevisionID
_havePendingRetryOperation
_itemsDidChangeNotifyToken
_exponentialBackOffSeconds
_pendingMutateRequestCount
_playlistGlobalIDToContentTasteItem
_playlistGlobalIDToPendingContentTasteItem
_contentTasteItemsToRetry
_storeAdamIDToContentTasteItem
_storeAdamIDToPendingContentTasteItem
objectForData:response:error:
dictionaryRepresentation
setBuildVersion:
setDeviceGUID:
setDeviceName:
setTimeZoneName:
setStoreFrontID:
hasBuildVersion
hasDeviceGUID
hasDeviceName
hasTimeZoneName
systemReleaseType
setSystemReleaseType:
setHasSystemReleaseType:
hasSystemReleaseType
systemReleaseTypeAsString:
StringAsSystemReleaseType:
setSBEnabled:
setHasSBEnabled:
hasSBEnabled
setStoreAccountID:
setHasStoreAccountID:
hasStoreAccountID
hasStoreFrontID
setPrivateListeningEnabled:
setHasPrivateListeningEnabled:
hasPrivateListeningEnabled
readFrom:
writeTo:
copyTo:
mergeFrom:
buildVersion
deviceGUID
deviceName
timeZoneName
sBEnabled
storeAccountID
storeFrontID
privateListeningEnabled
_storeAccountID
_buildVersion
_deviceGUID
_deviceName
_storeFrontID
_systemReleaseType
_timeZoneName
_privateListeningEnabled
_sBEnabled
_has
initWithPurchases:
_addPurchasesToManager
cancelPurchases:withCompletionBlock:
_finishPurchasesWithResponses:
setBackgroundPurchase:
setCreatesDownloads:
setCreatesJobs:
setPlaybackRequest:
setPurchase:
addPurchases:withCompletionBlock:
purchase
removeObject:
_purchaseForUniqueIdentifier:
purchaseRequest:purchaseDidFail:withError:
purchaseRequest:purchaseDidSucceed:
purchaseRequest:purchaseDidSucceedWithResponse:
purchaseManager:didFinishPurchasesWithResponses:
purchases
startWithPurchaseBlock:completionBlock:
startWithPurchaseResponseBlock:completionBlock:
isBackgroundRequest
setBackgroundRequest:
createsDownloads
needsAuthentication
setNeedsAuthentication:
isPlaybackRequest
shouldValidatePurchases
setShouldValidatePurchases:
createsJobs
_isBackgroundRequest
_purchases
_shouldValidatePurchases
_createsDownloads
_openPurchaseIdentifiers
_purchaseBlock
_purchaseResponseBlock
_purchaseManager
_needsAuthentication
_playbackRequest
_createsJobs
loadWithCompletionBlock:
initWithSignedActionsDictionary:
cachedValueFromBag:key:withType:updateCache:
arrayForKey:error:
boolForKey:error:
doubleForKey:error:
integerForKey:error:
stringForKey:error:
URLForKey:error:
dictionaryForKey:error:
setObject:forKeyedSubscript:
_valueForKey:withClass:
URLForURLBagKey:
path
mescalSignedRequests
initWithComponentType:key:
initWithPolicyType:signatureComponents:
mescalSignedActions
caseInsensitiveCompare:
mescalSignedResponses
AMDDomains
valueForURLBagKey:
initWithURLBag:
initWithSSBag:
mescalCertificateURL
mescalSetupURL
mescalSignaturePolicyForRequestURL:
mescalSignaturePolicyForResponseURL:
pastisCertificateURL
pastisKeyServerURL
shouldSendAnonymousMachineIdentifierForURL:
mescalPrimingURL
_cachedBagValues
_subscriptionSignedActions
_subscriptionSignaturePolicy
_mescalPrimingURL
hasPrefix:
hasSuffix:
substringFromIndex:
_initSSVLoadURLOperation
recordsMetrics
cachePolicy
timeoutInterval
initWithURL:cachePolicy:timeoutInterval:
HTTPBody
HTTPMethod
networkServiceType
setNetworkServiceType:
HTTPHeaders
shouldDecodeResponse
machineDataStyle
_newURLRequestWithRedirectURL:
sharedURLCache
dispatchAsync:
standardUserDefaults
dispatchSync:
_stopRunLoop
_finishWithData:
_createAuthKitSession
_runOnce
setPrepareRequestBlock:
metricsLoadURLSessionDuration
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
_finishWithOutput:error:
setReferringAppName:
setReferringURL:
timeIntervalSince1970
setResponseEndTime:
connectionReused
setCachedResponse:
clientCorrelationKey
setClientCorrelationKey:
connectionEndTime
setConnectionEndTime:
connectionStartTime
setConnectionStartTime:
connectionStartNStatRXBytes
setConnectionStartNStatRXBytes:
connectionStartNStatTXBytes
setConnectionStartNStatTXBytes:
connectionStopNStatRXBytes
setConnectionStopNStatRXBytes:
connectionStopNStatTXBytes
setConnectionStopNStatTXBytes:
domainLookupEndTime
setDomainLookupEndTime:
domainLookupStartTime
setDomainLookupStartTime:
fetchStartTime
setFetchStartTime:
redirectCount
setRedirectCount:
redirectEndTime
setRedirectEndTime:
redirectStartTime
setRedirectStartTime:
requestStartTime
setRequestStartTime:
responseEndTime
responseStartTime
setResponseStartTime:
secureConnectionStartTime
setSecureConnectionStartTime:
xpSamplingForced
setXPSamplingForced:
xpSessionDuration
setXPSessionDuration:
xpSamplingPercentageUsers
setXPSamplingPercentageUsers:
xpSamplingPercentageCachedResponses
setXPSamplingPercentageCachedResponses:
allHeaderFields
dataToSignWithURLResponse:responseData:
verifyData:withSignature:error:
sharedAccountsConfig
hashedDescription
originalRequest
setStoreFrontIdentifier:forRequest:response:account:
initWithURLResponse:
_shouldRetryAfterMachineDataRequest:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
sender
performDefaultHandlingForAuthenticationChallenge:
sharedStorage
setCookiesForHTTPResponse:userIdentifier:
appendData:
_applyResponseToMetrics:
handleResponse:forRequest:shouldRetry:
policyType
sharedDefaultSession
dataToSignWithURLRequest:
signatureWithData:error:
setPageURL:
setServerApplicationInstance:
setServerTiming:
_outputForData:error:
outputBlock
_releaseOutputBlocks
contextWithBagType:
initWithURLBagContext:
_configureWithURLBagInterpreter:
setHTTPShouldUsePipelining:
valueForHTTPHeaderField:
currentAcceptLanguage
sharedInstance
connectionTypeHeader
sharedAccountStore
primaryAppleAccount
aa_personID
isNewCustomer
UUID
UUIDString
cookieHeadersForURL:userIdentifier:
stringByAppendingFormat:
setHTTPShouldHandleCookies:
stringByAppendingString:
cloudMediaLibraryIdentifier
mediaLibraryIdentifier
softwareLibraryIdentifier
appleIDHeadersForRequest:
objectForKeyedSubscript:
_addMachineDataHeadersToRequest:withAccountIdentifier:
_addSAPSignatureToRequest:
prepareRequestBlock
dataConsumer
currentRunLoop
_loadURLBagInterpreter
sharedManager
dataTaskWithRequest:delegate:
_stopIfCancelled
performSelector:withObject:afterDelay:
_runRunLoopUntilStopped
cancelPreviousPerformRequestsWithTarget:selector:object:
_keepAliveTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
invalidate
actionName
protocolVersion
getCFRunLoop
URLSession:task:decodedDataForResponseData:
URLSession:task:didCompleteWithEvent:error:
URLSession:task:didFinishCreatingHTTPArchive:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
isURLBagRequest
rawResponseData
requestProperties
shouldDisableCellular
shouldRequireCellular
shouldSetCookies
sourceAppAuditTokenData
sourceAppBundleID
URLCache
URLCacheID
initWithData:fromOperation:
cachedURLResponse
configureWithURLBag:
expiredOutputBlock
referrerApplicationName
referrerURLString
SAPSession
SAPSignaturePolicy
setExpiredOutputBlock:
setRecordsMetrics:
setReferrerApplicationName:
setReferrerURLString:
setSAPSession:
_dataForCachedResponse:
setBag:
_authKitSession
_dataBuffer
_dataConsumer
_inputData
_machineDataRetryCount
_machineDataStyle
_metricsPageEvent
_outputBlock
_prepareRequestBlock
_protocolRedirectURLs
_recordsMetrics
_redirectURL
_referrerApplicationName
_referrerURLString
_response
_runLoop
_sapSession
_sapSignaturePolicy
_shouldRetry
_storeFrontSuffix
_stopped
_urlBag
_urlBagInterpreter
_requestProperties
_bag
storeFrontIdentifier
lowercaseString
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
query
_initSSPurchase
buyParameters
setBuyParameters:
containsString:
_buyParametersValueForKey:fromBuyParams:
_setValuesUsingDatabaseEncoding:
_addEntriesToDatabaseEncoding:
componentsSeparatedByString:
objectAtIndexedSubscript:
stringByRemovingPercentEncoding
_createsDownloadsWithOverride
_createsJobsWithOverride
_createsInstallJobsWithOverride
rawItemDictionary
itemOfferForIdentifier:
unarchiveObjectWithData:
decodeInt64ForKey:
encodeBool:forKey:
encodeInt64:forKey:
purchaseWithBuyParameters:
affiliateIdentifier
createsInstallJobs
displaysOnLockScreen
downloadProperties
filteredAssetTypes
ignoresForcedPasswordRestriction
isBackgroundPurchase
placeholderDownloadIdentifier
setAffiliateIdentifier:
setCreatesInstallJobs:
setDisplaysOnLockScreen:
setDownloadProperties:
setFilteredAssetTypes:
setIgnoresForcedPasswordRestriction:
setRequestProperties:
setValue:forDownloadProperty:
valueForDownloadProperty:
initWithDatabaseEncoding:
batchIdentifier
databaseEncoding
buyParametersValueForKey:
enabledServiceType
expectedDownloadFileSize
gratisIdentifiers
itemOffer
isGratisSoftwareClaim
isPreauthenticated
setBatchIdentifier:
setDefaultUserAgent:
setEnabledServiceType:
setExpectedDownloadFileSize:
setGratisIdentifiers:
setPlaceholderDownloadIdentifier:
setPreauthenticated:
setUniqueIdentifier:
setUsesLocalRedownloadParametersIfPossible:
usesLocalRedownloadParametersIfPossible
downloadMetadata
setDownloadMetadata:
_affiliateIdentifier
_backgroundPurchase
_batchIdentifier
_buyParameters
_buyParamsCreatesDownloads
_buyParamsCreatesInstallJobs
_buyParamsCreatesJobs
_createsInstallJobs
_displaysOnLockScreen
_downloadPolicy
_downloadProperties
_enabledServiceType
_expectedDownloadFileSize
_filteredAssetTypes
_gratisIdentifiers
_ignoresForcedPasswordRestriction
_itemOffer
_networkConstraints
_placeholderDownloadIdentifier
_preauthenticated
_requiredDeviceCapabilities
_uniqueIdentifier
_usesLocalRedownloadParametersIfPossible
allowedToneStyles
setAllowedToneStyles:
setAssigneeIdentifier:
setAssigneeContactIdentifier:
setAssigneeToneStyle:
setShouldMakeDefaultRingtone:
setShouldMakeDefaultTextTone:
assigneeIdentifier
assigneeContactIdentifier
assigneeToneStyle
shouldMakeDefaultRingtone
shouldMakeDefaultTextTone
_allowedToneStyles
_assigneeIdentifier
_assigneeContactIdentifier
_assigneeToneStyle
_shouldMakeDefaultRingtone
_shouldMakeDefaultTextTone
newPurchaseWithDatabaseEncoding:
newPurchaseWithXPCEncoding:
_refreshDownloadWithTransactionID:accountID:bagKey:error:
setSuccess:
setURLBagKey:
setValue:forRequestParameter:
initWithRequestProperties:
runChildOperation:
success
initWithDownloadTransactionIdentifier:accountID:
isDownloadTransactionID
accountID
downloadTransactionID
_downloadTrasactionID
_accountID
_downloadTransactionID
_canRunInProcess
urlConnectionRequest:didReceiveResponse:
startWithConnectionResponseBlock:
runsInProcess
destinationFileURL
sendsResponseForHTTPFailures
shouldMescalSign
setSendsResponseForHTTPFailures:
setShouldMescalSign:
setDestinationFileURL:
setRunsInProcess:
_destinationFileURL
_runsInProcess
_sendsResponseForHTTPFailures
_shouldMescalSign
isStoreServicesURL
_convertedValueForValue:
_errorForStatusCode:
_copyItemsFromResponse:expirationDate:
itemLookupRequest:didFindItems:
startWithItemLookupBlock:
_setExpirationDate:
setNumberStyle:
setUsesGroupingSeparator:
stringFromNumber:
componentsJoinedByString:
setValue:forParameter:
valueForParameter:
copyQueryStringParameters
parameters
_parameters
_accountStoreDidChangeNotification:
aa_primaryAppleAccount
_accountStore
_primaryAppleAccount
_setOfferItem:
makeObjectsPerformSelector:withObject:
_offers
_preferredOfferIdentifiers
tellAFriendBody
_tellAFriendDictionary
itemImages
priceDisplay
_finishTellAFriendLoadWithError:
MIMEType
textEncodingName
initWithData:encoding:
initWithOfferIdentifier:dictionary:
allItemOffers
averageUserRating
isGameCenterEnabled
loadTellAFriendMessageWithCompletionHandler:
numberOfPrintedPages
numberOfUserRatings
relatedItemsForRelationType:
tellAFriendBodyMIMEType
tellAFriendBodyURL
tellAFriendSubject
thumbnailImages
tweetInitialText
tweetURL
viewItemURL
bundleVersion
mediaKind
sendGiftURL
viewReviewsURL
expirationDate
_expirationDate
_properties
_tellAFriendBody
_tellAFriendBodyMIMEType
_tellAFriendHandlers
_tellAFriendRequest
_tellAFriendSubject
initWithStoreOfferDictionary:
mediaFileSize
setMediaKind:
isProtectedMedia
_duration
_fullDuration
_mediaFileSize
_mediaKind
_protected
_url
setTimestamp:
setAdamId:
setAppExternalVersionID:
setAppExtensionVersion:
setCohortID:
setDownloadVarietyID:
unsignedIntegerValue
setInstallType:
setModel:
setOsVersion:
setPurchaserDsid:
setUserDsid:
setVersionString:
setWatchGuid:
setWatchSerial:
setWatchSize:
adamId
appExtensionVersion
appExternalVersionID
cohortID
downloadVarietyID
numberWithUnsignedInteger:
installType
model
osVersion
purchaserDsid
userDsid
versionString
watchGuid
watchSerial
watchSize
timestamp
applicationProxyForIdentifier:
itemID
externalVersionIdentifier
purchaserDSID
_appCohortID:
setPid:
bundleContainerURL
dictionaryWithContentsOfFile:
financeDictionaryRepresentation
_appExtensionVersion
_bundleIdentifier
_downloadVarietyID
_eventType
_installType
_model
_osVersion
_versionString
_watchGuid
_watchSerial
_watchSize
_timestamp
_adamId
_cohortID
_pid
_appExternalVersionID
_purchaserDsid
_userDsid
setAppIdentifier:
setShouldLaunchApp:
setLaunchOptions:
setProcessAssertionIdentifier:
setProcessAssertionInterval:
setProcessAssertionReason:
familyContentRemovalRequestWithAppIdentifier:accountPairs:
newsstandFinishRequestWithAppIdentifier:issueIdentifiers:
appIdentifier
launchOptions
processAssertionIdentifier
processAssertionInterval
processAssertionReason
shouldLaunchApp
_appIdentifier
_launchOptions
_processAssertionIdentifier
_processAssertionInterval
_processAssertionReason
_shouldLaunchApp
initWithSinfs:
initWithAccountIdentifier:rentalKeyIdentifier:
initWithDownloadIdentifier:
rentalKeyIdentifier
shouldValidateRentalInfo
setShouldValidateRentalInfo:
shouldCheckoutWithPlay
setCheckoutWithPlay:
checkoutType
setCheckoutType:
_downloadIdentifier
_rentalKeyIdentifier
_sinfs
_shouldValidateRentalInfo
_checkoutWithPlay
_checkoutType
iTunesStoreAccountType
initWithAccountType:
initWithBackingAccount:
setActive:
_accountPropertyForKey:
backingAccountAccessQueue
_backingAccount
username
isDemoAccount
isDirty
dirtyAccountProperties
dirtyDataclassProperties
isAuthenticated
enabledServiceTypes
isActive
backingAccount
backingAccountIsDemoAccount:
_ss_isDuplicate:
credential
credentialItemForKey:
accountPropertyForKey:
identifier
secureTokenForIdentifier:
sharedAccountsAuthenticationConfig
initWithPassword:
setCredential:
setCredentialItem:forKey:
_setAccountProperty:forKey:
setUsername:
setAuthenticated:
secureToken
_addAccountPropertyBitmask:forKey:
_removeAccountPropertyBitmask:forKey:
setStoreFrontIdentifier:forRequest:response:
isLocalAccount
setLogLevel:
setLogSubsystem:
_countryCodeFromStorefrontIdentifier:
sharedAccountsStorefrontConfig
callStackSymbols
allHTTPHeaderFields
simulateCrashWithString:
URLBagForContext:
valueForKey:error:
initWithGlobalConfiguration:
setGlobalConfiguration:
flushUnreportedEventsWithCompletionHandler:
insertEvent:withCompletionHandler:
_setBackingAccount:
altDSID
accountScope
currentVersionIdentifier
initWithAccount:
initWithResponseData:error:
isUserAccepted
setBagType:
setUserIdentifier:
loadValueForKey:completionBlock:
accountStatus
initWithBool:
valueForKeyPath:
_valueForFirstAvailableKeyPath:inDictionary:
backingAccountIsLocalAccount:
setPasswordEquivalentToken:
setRawPassword:
setSecureToken:
saveAccount:verifyCredentials:error:
setAccountProperty:forKey:
creditsString
ITunesPassSerialNumber
firstName
lastName
accountKind
availableServiceTypes
freeDownloadsPasswordSetting
paidPurchasesPasswordSetting
didFallbackToPassword
isSocialEnabled
accountSource
isManagedAppleID
setCreditsString:
setAccountName:
setAltDSID:
setITunesPassSerialNumber:
setStoreFrontIdentifier:
setFirstName:
setLastName:
isActiveLockerAccount
setActiveLockerAccount:
setAccountKind:
setAccountScope:
setAccountSource:
setDidFallbackToPassword:
setFreeDownloadsPasswordSetting:
setManagedAppleID:
setNewCustomer:
setPaidPurchasesPasswordSetting:
setAvailableServiceTypes:
setEnabledServiceTypes:
eligibilityForService:
setEligibility:forServiceType:
setSocialEnabled:
updateAccountPasswordSettingsWithRequestProperties:completionBlock:
accountKindFromAuthenticationResponseDictionary:
accountNameFromAuthenticationResponseDictionary:
altDSIDFromAuthenticationResponseDictionary:
creditsStringFromAuthenticationResponseDictionary:
DSIDFromAuthenticationResponseDictionary:
firstNameFromAuthenticationResponseDictionary:
isManagedAppleIDFromAuthenticationResponseDictionary:
isNewCustomerFromAuthenticationResponseDictionary:
lastNameFromAuthenticationResponseDictionary:
storeFrontIdentifierFromURLResponse:
serverValueForAccountPasswordSettingValue:
demoAccountRawPassword
isDuplicate:
passwordEquivalentToken
rawPassword
setDemoAccountRawPassword:
acceptTermsAndConditions:withCompletionBlock:
getDownloadKindsEligibleForContentRestoreWithBlock:
getEligibilityForService:completionBlock:
getPurchasedItemsForItems:completionBlock:
getTermsAndConditionsWithBlock:
addAvailableServiceTypes:
addEnabledServiceTypes:
getITunesMatchStatusWithCompletionBlock:
getKeybagSyncDataWithType:completionHandler:
hasBrokenDSID
removeAvailableServiceTypes:
removeEnabledServiceTypes:
resetTransientData
copyLockdownRepresentation
mergeValuesFromAccount:
popBiometricToken
setBiometricToken:
updateAccountPasswordSettings:
_sendBlockingXPCMessage:
_sendMessage:withReply:
setBackingAccountAccessQueue:
_bioToken
_didFallbackToPassword
_backingAccountAccessQueue
_resolveCertificateURLReturningError:
certificateURLBagKey
isNSString__
setCertificateURLBagKey:
_bagLoadSemaphore
_certificateURLBagKey
stringRepresentation
_rangeOfPlaceholderInURLString:
substringWithRange:
_substituationVariableInPlaceholder:includeTags:
stringByReplacingOccurrencesOfString:withString:options:range:
exceptionWithName:reason:userInfo:
rangeOfString:
rangeOfString:options:range:
_rangeOfBookmarks:inString:
substitueVariablesInURLString:withBlock:
initWithAuthenticationContext:
_isAuthkitEntitled
logUUID
addErrorBlock:
completionHandlerAdapter
startWithAuthenticateResponseBlock:
resultWithTimeout:error:
mainBundle
forceDaemonAuthentication
unitTestModeEnabled
_performRemoteAuthenticationWithCompletion:
_accountToAuthenticateWithAuthenticationContext:
_shouldRunAuthenticationForAccount:
setAuthenticatedAccount:
setAuthenticateResponseType:
accountStoreOptions
_parentViewController
valueWithNonretainedObject:
updateAccountWithAuthKit:store:options:
_verifyCredentialsOptionsFromUpdateAccountResponse:skipAuthKit:
backingAccountStore
updatedAccount
verifyCredentialsForAccount:options:completion:
thenWithBlock:
_setError:
clearCachedAccounts
tokenType
resetExpirationForTokenType:
authenticatedAccount
authenticateResponseType
addSuccessBlock:
authenticateRequest:didReceiveResponse:
requiredUniqueIdentifier
accountWithAltDSID:uniqueIdentifier:accountName:scope:
password
promptStyle
isExpiredForTokenType:
credentialSource
localAuthenticationAvailable
logConfig
setLogConfig:
set_parentViewController:
_logConfig
__parentViewController
initWithBundleID:accountIdentifier:claimStyle:
accountDSID
claimStyle
bundleID
_claimStyle
_bundleID
_accountDSID
deviceIsAppleWatch
_allowCreateAccount
_initSSAuthenticationContext
accountWithUniqueIdentifier:
allowsSilentAuthentication
canCreateNewAccount
canSetActiveAccount
shouldSuppressDialogs
reasonDescription
promptTitle
okButtonLabel
signupRequestParameters
preferredITunesStoreClient
userAgentComponents
allowsBootstrapCellularData
setAllowsBootstrapCellularData:
_copyIvarsToCopy:withZone:
string
allowsBioAuthentication
allowsRetry
cancelButtonLabel
clientIdentifierHeader
isAccountNameEditable
persistsAcrossDeviceLock
persistsPasswordFallback
requestParameters
shouldCreateNewSession
shouldFollowAccountButtons
shouldIgnoreProtocol
touchIDContinueToken
URLBagContext
contextForSignIn
initialPassword
initWithAccountIdentifier:
_accountName
_accountNameEditable
_accountScope
_allowsBioAuthentication
_allowsBootstrapCellularData
_allowsRetry
_allowsSilentAuthentication
_altDSID
_cancelButtonLabel
_canCreateNewAccount
_canSetActiveAccount
_clientIdentifierHeader
_forceDaemonAuthentication
_httpHeaders
_logUUID
_password
_passwordEquivalentToken
_okButtonLabel
_persistsAcrossDeviceLock
_persistsPasswordFallback
_preferredITunesStoreClient
_promptTitle
_promptStyle
_reasonDescription
_requestParameters
_requiredUniqueIdentifier
_shouldCreateNewSession
_shouldFollowAccountButtons
_shouldIgnoreProtocol
_shouldSuppressDialogs
_signupRequestParameters
_tokenType
_touchIDContinueToken
_userAgentComponents
_demoAccount
setAccountNameEditable:
setCanCreateNewAccount:
setRequiredUniqueIdentifier:
setAllowsRetry:
setAllowsSilentAuthentication:
setCanSetActiveAccount:
setInitialPassword:
setPassword:
setPreferredITunesStoreClient:
setPromptStyle:
setPersistsPasswordFallback:
setShouldCreateNewSession:
setShouldFollowAccountButtons:
setShouldIgnoreProtocol:
setShouldSuppressDialogs:
setSignupRequestParameters:
setTouchIDContinueToken:
setUserAgentComponents:
setAllowsBioAuthentication:
setCancelButtonLabel:
setClientIdentifierHeader:
setForceDaemonAuthentication:
setOkButtonLabel:
setPersistsAcrossDeviceLock:
setPromptTitle:
setReasonDescription:
setTokenType:
setValuesWithAccount:
setDemoAccount:
sharedService
openApplication:options:withResult:
_dispatchQueueSpringBoard
launchApplicationWithIdentifier:options:error:
_getProcessID:forApplicationIdentifier:
initWithPID:flags:reason:name:
valid
sharedDaemonConfig
unsignedIntValue
_setApplicationState:forClientID:
setHandler:
_applicationStateMonitor
applicationInfoForApplication:completion:
_getApplicationInfoForIdentifier:key:
initWithInteger:
_stateCache
_dispatchQueueNotifications
postNotificationName:object:userInfo:
wakeAppUsingRequest:
_setReportingFrequencyOverride:
_initSSMetricsEventConfiguration
_configBooleanForKey:defaultValue:
childConfiguration
blacklistedEventFields
fieldsMap
cookieFields
unionSet:
eventFields
compoundStringWithElements:
isDisabled
initWithArray:
isEventTypeBlacklisted:
isSendDisabled
pingURLs
getReportingFrequencyOverrideWithCompletionBlock:
_reportingFrequencyOverride
valueForConfigurationKey:
reportingURLString
tokenStringWithElements:
setReportingFrequencyOverride:
initWithStorePlatformData:
reportingFrequency
setChildConfiguration:
_decorateITMLEvents
disableEventDecoration
setDisableEventDecoration:
_blacklistedEvents
_childConfiguration
_config
_disabled
_disableEventDecoration
_cookieFieldsUnion
_eventFieldsUnion
_fields
_internalSettingsToken
_sendDisabled
initWithResult:error:
_result
setIdentifier:
setType:
type
_identifier
_type
decodeObjectOfClasses:forKey:
setContentTasteItems:
setExpirationDate:
setResponseRevisionID:
isCachedResponse
_cachedResponse
_contentTasteItems
_responseRevisionID
accountsPromise
isInProcessCacheDisabled
accountsCacheAccessQueue
accountsCache
finishWithResult:
repairAccountWithBrokenDSID:
setAccountsCache:
_unitTestAccountsAccessQueue
iTunesStoreAccountTypePromise
_ss_map:
accountsWithAccountType:options:completion:
accounts
accountWithAltDSID:scope:
accountWithUniqueIdentifier:scope:
accountWithAccountName:scope:
isExpired
promiseWithResult:
accountTypeWithIdentifier:completion:
clientInfo
setClientInfo:
_ss_IDMSAccountForAccount:error:
_ss_DSID
_ss_iCloudAccountForAccount:error:
_ss_appleAuthenticationAccountForAccount:error:
keyValueStore
getValueForDomain:key:usingBlock:
tokenExpirationInterval
_lookupLocalAccountPromise
_createLocalAccountPromise
promiseWithError:
catchWithBlock:
_copyKVSDatabaseWithError:
accountDictionaries
sharedAccountsMigrationConfig
setInProcessCacheDisabled:
iTunesValueForKey:usedDomain:
_shouldRemoveAccountDictionaryWithoutMigration:reason:
_removeAccountDictionary:fromKeyValueStore:
_hashedDescriptionFromAccountDictionary:
_migrateAccountDictionary:fromKeyValueStore:originalActiveDSID:originalActiveLockerDSID:logKey:error:
_cleanupActiveAccountsAfterMigrationWithActiveDSID:activeLockerDSID:
_postAccountsChangedInternalDarwinNotification
_postAccountsChangedDarwinNotification
removeAccount:completion:
_removeAccountFromUnitTestStore:
areAccountStoreChangedNotificationsDisabled
_backingAccountForAccount:
removeAccount:withCompletionHandler:
sharedAccountsCookiesConfig
removeCookiesWithUserIdentifier:
resetExpiration
saveAccount:verifyCredentials:completion:
_saveAccount:verifyCredentials:
setValue:forDomain:key:completionBlock:
signOutAccount:completion:
removeCookiesForAccount:logKey:
boolCompletionHandlerAdapter
initWithUpdatedAccount:credentialSource:
_shouldCreateNewAccountForAccount:options:
initWithDSID:additionalQueryParams:targetIdentifier:
mainQueue
addOperation:
_updateAccountWithAuthKitViaSilentPETAuth:options:
_updateAccountWithAuthKitViaSilentPasswordAuth:options:
_updateAccountWithAuthKitViaSilentAuth:options:
_updateAccountWithAuthKitViaPromptAuth:store:options:
promiseWithAny:
dictionaryWithDictionary:
databasePath
stringByDeletingPathExtension
defaultManager
removeItemAtPath:error:
copyItemAtPath:toPath:error:
setAccountDescription:
_setActiveAccountIsManagedAppleIDPreference:
notificationQueue
metricsQueue
recordAnalyticsForMetricsDialogEvent:withTopic:
refresh
bundleWithPath:
principalClass
instanceMethodSignatureForSelector:
invocationWithMethodSignature:
setTarget:
setSelector:
setArgument:atIndex:
invoke
getReturnValue:
_addAccountToUnitTestStore:
_saveAccountInUnitTestMode:ignoreValidationErrors:
saveAccount:withDataclassActions:doVerify:completion:
_disableAccountStoreChangedNotifications
_enableAccountStoreChangedNotifications
_accountDictionaryRepresentsActiveAccount:inKeyValueStore:
removeAccountFromDomain:
_accountDictionaryRepresentsActiveLockerAccount:inKeyValueStore:
setValue:forDomain:key:
_createAuthenticationController
_createAuthenticationContextForAccount:silentAuthentication:options:
_setPassword:
setShouldPreventInteractiveAuth:
authenticateWithContext:completion:
_currentProcessLinksUIKit
pointerValue
sharedApplication
keyWindow
rootViewController
presentedViewController
setPresentingViewController:
_setProxyingForApp:
setDSID:
setDefaultButtonString:
setIsUsernameEditable:
set_passwordPromptTitle:
setServiceType:
setShouldAllowAppleIDCreation:
setShouldForceInteractiveAuth:
setShouldUpdatePersistentServiceTokens:
_setProxiedAppBundleID:
_setProxiedAppName:
setLinkType:
setServerFriendlyDescription:
setUniqueDeviceIdentifier:
setCompanionDevice:
setServiceIdentifiers:
serializedData
_isBuddyRunning
responseType
setCompletionBlock:
_buyParamsForBuyParamsString:
setTopic:
_recordAnalyticsForMetricsDialogEvent:withTopic:
_createUpdatedAccount:withAuthenticationResults:options:
_allowSilentPasswordAuthForAccount:withOptions:
_convertPasswordToPET:forAccount:options:
_passwordEquivalentTokenFromAlternateAccountWithAltDSID:DSID:username:
saveAccount:error:
_refreshAccount:
activeLockerAccount
signOutAllAccountsWithCompletionBlock:
existingDefaultStore
migrateToAccountsFramework
setAuthenticationStartedDate:
setUnitTestModeEnabled:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
accountWithAccountName:
accountWithAltDSID:
accountWithAltDSID:uniqueIdentifier:accountName:
accountWithUniqueIdentifier:reloadIfNecessary:
getDefaultAccountNameUsingBlock:
isAuthenticationActive
demoAccount
localAccount
removeAccount:error:
removeAllAccountsWithCompletion:
saveAccount:completion:
setDefaultAccountName:completionBlock:
signOutAccount:
_postAccountStoreChangeNotification
_postAuthenticationActivityNotification
_optionsForProxiedAuthenticationWithVerifyCredentialsOptions:
addAccount:
reloadAccounts
setAccountCredits:forAccountWithUniqueIdentifier:
setActiveAccount:
signOutAllAccounts
setAccountsCacheAccessQueue:
setKeyValueStore:
setMetricsQueue:
setNotificationQueue:
_inProcessCacheDisabled
_accountsCache
_accountsCacheAccessQueue
_keyValueStore
_metricsQueue
_notificationQueue
_backingAccountStore
setResponseDictionary:
_authenticatedAccount
_responseType
insertValuesForWatchMetricsEvent:
serialQueue
table
databaseTable
statementDidFinishAfterStepping:
prepareStatementForSQL:cache:usingBlock:
performTransactionWithBlock:
statementHasRowAfterStepping:
initWithUTF8String:
_numberFormatter
numberFromString:
executeSQL:
countChanges
insertWatchMetricEvent:error:
unreportedEventsSinceTimestamp:
discardUnreportableEvents
markAsCompleted:
markAsFailed:
_table
sharedConnection
isAutomaticAppDownloadsAllowed
isAppAnalyticsAllowed
isDiagnosticSubmissionAllowed
effectiveBoolValueForSetting:
effectiveRestrictedBoolValueForSetting:
effectiveValueForSetting:
_isExplicitContentDisallowedInCurrentStoreFront
isSettingLockedDownByRestrictions:
_calculateIsRestrictionsPasscodeSet
setBoolValue:forSetting:
isActiveAccountAllowedToUpdateRestrictions
integerForKey:
_isExplicitContentRestrictedByDefaultInCurrentStoreFront
setInteger:forKey:
settingEnabled
setOfActiveRestrictionUUIDs
isExplicitContentRestrictedByDefaultInCurrentStoreFront:
isExplicitContentDisallowedInCurrentStoreFront:
isRestrictionsPasscodeSet:
setAllowExplicitContent
shouldDisplayExplicitRestrictionAlertOfType:completionBlock:
didDisplayExplicitRestrictionAlertOfType:
softwareTypes
isForced
_forced
_softwareTypes
setForced:
setSoftwareTypes:
updateQueueRequest:didReceiveResponse:
startWithUpdatesResponseBlock:
initWithUpdateQueueContext:
updateQueueContext
_context
copyUpdateItemDictionaries
setUpdateItemsWithItemDictionaries:
initWithError:
updateItems
_updateItems
_applicationWillEnterForeground
allCookiesForUserIdentifier:
configuration
_userType
_cookieValuesForConfiguration:
isBlacklistedByConfiguration:
allTableEntityPropertiesPermittedByConfiguration:externalValues:
decorateReportingURL:
shouldSuppressUserInfo
applicationState
_flushUnreportedEventsIfEnabled
_handleFlushTimer
_setupFlushTimer
insertEvents:withCompletionHandler:
requiresDiagnosticSendingPermission
_serialQueueInsertEvents:withCompletionHandler:
setLocationPosition:
setLocationType:
setValue:forLocationKey:
_enumerateFieldValuesWithMap:fieldData:block:
_valueForField:withFieldData:
recordAnalyticsWithMetricsDialogEvent:forTopic:
setFlushTimerEnabled:
valueForMetricsField:
locationWithPosition:type:fieldData:
setPageConfiguration:
isFlushTimerEnabled
_flushSerialQueue
_flushTimerEnabled
_flushOnForeground
_flushEventsTimer
sharedBagConfig
_bagCacheAccessQueue
_bagCache
sharedBagCacheConfig
_initWithProfileConfig:logKey:
_isExpired
_loadBagIfNeeded
_assertIfProfileConfigIsMisconfigured:
setName:
_loadBagWithAttempt:error:
_deviceStorefrontChanged:
backingDictionaryAccessQueue
setBackingDictionary:
_valueForKey:ofType:completion:
_cookieForName:
initWithMemoryCapacity:diskCapacity:diskPath:
profileConfig
profile
profileVersion
nilValueCompletionHandlerAdapter
arrayForKey:withCompletion:
boolForKey:withCompletion:
dictionaryForKey:withCompletion:
doubleForKey:withCompletion:
integerForKey:withCompletion:
stringForKey:withCompletion:
URLForKey:withCompletion:
arrayPromiseForKey:
boolPromiseForKey:
dictionaryPromiseForKey:
doublePromiseForKey:
integerPromiseForKey:
stringPromiseForKey:
URLPromiseForKey:
_debugBackingDictionariesAccessQueue
_debugBackingDictionaries
infoDictionary
_URLWithCookieNames:
provider
setShouldProcessProtocol:
setDataProvider:
setNeedsURLBag:
setShouldAppendAuthKitHeaders:
setShouldAppendStorefrontToURL:
setURLBagRequest:
setUrlKnownToBeTrusted:
resetCachesForProfileConfig:
deviceIsAppleTV
deviceIsAudioAccessory
deviceIsiPad
deviceIsiPhone
deviceIsiPod
backingDictionary
_backingDictionaryIsExpired:
initWithContentsOfFile:
logKey
bagKeyForStringRepresentation:
_assertIfKeyWasNotRegistered:
_assertIfKey:doesNotReturnValueType:
valueFromDictionary:
_value:isKindOfValueType:
defaultValue
deviceIsSeedBuild
_overriddenURLCookieNames
_defaultURLCookieNames
_OSString
_OSVersionString
_deviceString
clientName
clientVersion
_cookiesForNames:
_URLBuildIdentifier
valueType
bagKeys
loadBagQueue
_URLCookieNamesForProfile:
bagLoadTimeout
_createLoadBagURLOperationWithCookieNames:timeout:
operationQueue
addOperations:waitUntilFinished:
_processLoadBagOperation:error:
_setURLCookieNames:forProfile:
_updateStorefrontSuffixIfNecessaryWithBagOutput:logKey:
_shouldReloadBagForOriginalCookies:newCookies:
_shouldReloadBagForSetStorefront:bagOutput:
_requestStorefrontFromURLResponse:
_storefrontFromURLResponse:bagOutput:
debugLogsEnabled
_isBackingDictionary:equalToBackingDictionary:
notificationsQueue
dataProvider
output
expirationInterval
isEqualToSet:
isEqualToArray:
_storefrontSuffixFromBagOutput:
bagWithProfileConfig:
removeAllDebugBackingDictionaries
setDebugBackingDictionary:forProfileConfig:
_callerVersionString
operation:failedWithError:
operation:updatedProgress:
operationFinished:
operationWillStart:
operation:didDiscoverContentLength:
operation:didReceiveResponse:
operation:finishedWithOutput:
operation:needNewBodyStream:
operation:processData:error:
operation:willSendRequest:
operation:sanitizedStringForString:
operation:dispositionForAuthenticationChallenge:
operation:credentialForAuthenticationChallenge:
operation:didAuthenticateWithDSID:
operation:shouldAuthenticateWithContext:responseHandler:
operation:shouldSetStoreFrontID:
_initWithProfileConfig:
setOperationQueue:
_profileConfig
_backingDictionary
_backingDictionaryAccessQueue
_loadBagQueue
_logKey
_notificationsQueue
_operationQueue
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileURLWithPath:isDirectory:
initWithDatabaseURL:
initWithDatabase:
_setupDatabase
_database
initWithToken:error:
apiToken
setApiToken:
_apiToken
_runBlock
resultBeforeDate:error:
stateLock
condition
executeBlockLock
executedBlock
setExecutedBlock:
setExecuteBlockLock:
_executedBlock
_executeBlockLock
fileSystemRepresentation
bagKeysDictionary
setBagLoadTimeout:
setProfile:
setProfileVersion:
setBagKeysDictionary:
_bagLoadTimeout
_profile
_profileVersion
_bagKeysDictionary
mutableBagKeysDictionary
registerBagKey:valueType:defaultValue:
initWithStringRepresentation:valueType:defaultValue:
registerBagKey:valueType:
setMutableBagKeysDictionary:
_mutableBagKeysDictionary
offerMedia
initWithDialogDictionary:
setSizeLimitsWithStoreConstraintDictionary:
initWithOfferDeviceDicitionary:
initWithDeviceIdentifier:
actionDisplayName
confirmationDialog
documentCannotOpenDialog
documentRequiredHandlers
documentUTI
isOneTapOffer
successDialog
supportedDevices
accountIdentifiers
estimatedDiskSpaceNeeded
requiredSoftwareCapabilities
setActionDisplayName:
setOneTapOffer:
setPriceDisplay:
shouldShowPlusIcon
_offerItem
_offerDictionary
_supportedDevices
_globalPromiseStorageAccessQueue
_globalPromiseStorage
finishWithSuccess
backingPromise
_removeFromGlobalPromiseStorage
waitUntilFinished
waitUntilFinishedWithTimeout:
promiseWithPromise:
promiseWithSuccess
promiseAdapter
setBackingPromise:
_backingPromise
initWithPushNotificationParameters:
pushNotificationParameters
setPushNotificationParameters:
_initWithMessage:title:URLTitle:URL:
deviceIdentifier
incompatibleDeviceError
incompatibleSystemError
minimumProductVersion
_deviceIdentifier
_incompatibleDeviceError
_incompatibleSystemError
_minimumProductVersion
localizedMessage
localizedTitle
localizedURLTitle
_localizedMessage
_localizedTitle
_localizedURLTitle
__book_downloadsForStati:overrideFinished:overrideFailed:
_resetAllDownloads
__book_sendDownloadsChanged:filterBooks:
__book_cancelDownloads:completionBlock:
__book_dispatchBlock:withError:
__book_filterDownloads:withResult:
moveDownload:afterDownload:completionBlock:
moveDownload:beforeDownload:completionBlock:
__book_resumeDownloads:completionBlock:
resumeDownloads:completionBlock:
restartDownloads:completionBlock:
_copyDownloadsForMessage:downloadIDs:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
__book_getAllDownloads
__book_pauseDownloads:completionBlock:
_pauseDownloads:forced:completionBlock:
downloadID
cancelDownloadWithID:withCompletion:
pauseDownloadWithID:withCompletion:
resumeDownloadWithID:withCompletion:
initWithDownloadStatus:
setDownloadPhaseIdentifierOverride:
objectsPassingTest:
_sendDownloadsChanged:
downloadQueue:downloadStatesDidChange:
downloadQueue:downloadStates:didCompleteWithError:
bookDownloads
_downloadQueue
_setSizeLimit:forNetworkType:
_sizeLimitForNetworkType:
_disableAllNetworkTypes
_copySizeLimits
_newModernNetworkConstraintsWithArray:
_newLegacyNetworkConstraintsWithDictionary:
_addNetworkConstraintsToDictionary:forNetworkType:legacyDictionary:
setAllNetworkTypesDisabled
networkConstraintsForDownloadKind:fromBag:
newNetworkConstraintsByDownloadKindFromURLBag:
disableCellularNetworkTypes
hasSizeLimitForNetworkType:
isAnyNetworkTypeEnabled
sizeLimitForNetworkType:
_sizeLimits
newConditionWithDictionary:
evaluateWithContext:
_operator
_value
getLibraryItemForBundleIdentifiers:completionBlock:
_bundleVersion
_externalVersion
documentProxyForName:type:MIMEType:
defaultWorkspace
applicationsAvailableForOpeningDocument:
itemLookupBlock
platformName
_restrictionName
systemVersion
initWithDictionary:conditionalContext:
_dictionaryByEvaluatingWithForcedValue:
_dictionaryByEvaluatingDictionary:withForcedValue:
_arrayByEvaluatingChildrenOfArray:withForcedValue:
_logicalOperatorForString:
defaultConditionalContext
_checkConditions:withOperator:
_dictionaryByEvaluatingChildrenOfDictionary:withForcedValue:
setDefaultConditionalContext:
dictionaryByEvaluatingConditions
dictionaryByRemovingConditions
setItemLookupBlock:
setPlatformName:
setSystemVersion:
_itemLookupBlock
_platformName
_systemVersion
_userAgentClientNameForInfoPlist:
_userAgentClientVersionForInfoPlist:clientName:
_cacheKeyValueStoreValues
_getDeviceType:error:
copyCachedAvailableItemKinds
setIgnoresCaches:
promptNeedsDisplay:
storeFrontIdentifierPromise
_newLegacyUserAgent:
userAgentWithBundleRef:isCachable:
_newModernUserAgentWithClientName:version:isCachable:
_copyCarrierBundleEligibilityWithStatus:
_deviceType
_updateAutomaticDownloadKinds:withValue:completionBlock:
_invalidatePhoneNumber
_copyProductType
_deviceTypeForProductType:
_productVersion
_is720pCapable
_is1080pCapable
sendSynchronousMessage:withReply:
productType
compatibleProductType
copyDeviceGUID
_userAgentClientNameForBundleID:
userAgentWithClientName:version:
setStoreFrontIdentifier:account:
getValuesForDomain:keys:count:usingBlock:
_deviceTypeForUnknownIPad:
_deviceTypeForUnknownIPhone:
_deviceTypeForUnknownIPod:
_deviceTypeForUnknownAppleTV:
_deviceClass
_screenClass
_diskCapacityString
_fairPlayDeviceTypeString
_appleTVProductVersion
setCachedAvailableItemKinds:
_userAgentClientNameForAppleTVBundleID:
setStoreFrontIdentifier:accountIdentifier:
setLastPromptAttemptDate:forPromptWithIdentifier:
setPromptWithIdentifier:needsDisplay:
automaticDownloadKinds
copyStoreFrontRequestHeaders
deviceTypeIdentifier
getAvailableItemKindsWithBlock:
getCellularNetworkingAllowedWithBlock:
loadStoreFrontWithCompletionHandler:
sdk_loadStorefrontCountryCode:
sdk_loadStoreFrontIdentifier:
setCellularNetworkingAllowed:
setStoreFrontWithResponseHeaders:
showPromptWithIdentifier:completionHandler:
legacyUserAgent
batteryLevel
carrierBundleStatusForService:
deviceType
getCarrierBundleStatusForService:completionHandler:
getMachineIdentifier:otp:forAccountIdentifier:
isPluggedIn
enableAllAutomaticDownloadKindsWithCompletionBlock:
minusAutomaticDownloadKinds:withCompletionBlock:
productVersion
setAutomaticDownloadKinds:withCompletionBlock:
setCloudMediaLibraryIdentifier:
setMediaLibraryIdentifier:
setSoftwareLibraryIdentifier:
startPowerMonitoring
stopPowerMonitoring
synchronizeAutomaticDownloadKinds
thinnedApplicationVariantIdentifier
unionAutomaticDownloadKinds:withCompletionBlock:
userAgentWithBundleIdentifier:version:
_copyKeyValueStoreValueForDomain:key:
_invalidateAutomaticDownloadKinds
_invalidateSoftwareCUID
_postStoreFrontDidChangeNotification
_reloadPluggedInState
_updateBatteryLevelFromService:
isStoreFrontIdentifierTransient
reloadStoreFrontIdentifier
setStoreFrontIdentifier:account:isTransient:
setStoreFrontIdentifier:accountIdentifier:isTransient:
setStoreFrontIdentifier:isTransient:
synchedStoreFrontIdentifier
_automaticDownloadKinds
_cloudMediaLibraryIdentifier
_legacyUserAgent
_localStoreFrontIdentifier
_mediaLibraryIdentifier
_phoneNumber
_productType
_softwareLibraryIdentifier
_telephonyCapability
_telephonyServer
_udid
_userAgent
_clientName
initWithClientToken:
clientToken
_clientToken
currentBoolValue
setDomain:
fallbackNumberValue
setFallbackNumberValue:
setKey:
shouldInvertBoolValue
setShouldInvertBoolValue:
_domain
_fallbackNumberValue
_key
_shouldInvertBoolValue
coordinate
setCachePolicy:
_lookupWithRequest:error:
_setMetricsPageEvent:
initWithBaseURL:location:
pointOfInterestIdentifier
pointOfInterestProviderIdentifier
pointOfInterestProviderURL
setPointOfInterestIdentifier:
setPointOfInterestProviderIdentifier:
setPointOfInterestProviderURL:
location
_baseURLString
_location
setBundleVersion:
setExternalVersionIdentifier:
_externalVersionIdentifier
initWithLocaleIdentifier:
setLocale:
_initCommon
HTTPBodyStream
encodeInteger:forKey:
encodeDouble:forKey:
decodeIntegerForKey:
decodeDoubleForKey:
clientAuditBundleIdentifier
clientAuditTokenData
getBytes:length:
URLs
allowedRetryCount
URLBagType
setAllHTTPHeaderFields:
clientIdentifier
expectedContentLength
shouldProcessProtocol
shouldSendSecureToken
clientBundleIdentifier
URLBagKey
canBeResolved
isLargeDownload
KBSyncType
requiresCellularDataNetwork
requiresExtendedValidationCertificates
requiresExternal
requiresHTTPS
shouldAddKBSyncData
shouldDisableCellularFallback
URLBagURLBlock
_allowedRetryCount
_cachePolicy
_clientAuditBundleIdentifier
_clientAuditTokenData
_clientIdentifier
_expectedContentLength
_httpBody
_httpBodyStream
_httpMethod
_isITunesStoreRequest
_kbsyncType
_largeDownload
_networkServiceType
_requiresCellularDataNetwork
_requiresExtendedValidationCertificates
_requiresExternal
_requiresHTTPS
_shouldDecodeResponse
_shouldDisableCellular
_shouldDisableCellularFallback
_shouldProcessProtocol
_shouldSendSecureToken
_shouldSetCookies
_timeoutInterval
_urlBagKey
_urlBagType
_urlBagURLBlock
_urls
setURLs:
setClientIdentifier:
setShouldDisableCellular:
setShouldDisableCellularFallback:
setKBSyncType:
setLargeDownload:
setMultiPartFormDataWithDictionary:
setRequiresCellularDataNetwork:
setRequiresExtendedValidationCertificates:
setRequiresExternal:
setRequiresHTTPS:
setShouldAddKBSyncData:
setShouldDecodeResponse:
setShouldSendSecureToken:
setShouldSetCookies:
setClientAuditBundleIdentifier:
setClientAuditTokenData:
setURLBagType:
setURLBagURLBlock:
setSubscriptionStatus:forAccountUniqueIdentifier:
subscriptionStatusForAccountUniqueIdentifier:
_accountUniqueIdentifierToSubscriptionStatus
phase
storeItemID
persistentID
setJob:
_job
statusCode
suggestedFilename
initForReadingWithData:
setRequiresSecureCoding:
finishDecoding
initWithURL:statusCode:HTTPVersion:headerFields:
_CFURLResponse
initForWritingWithMutableData:
finishEncoding
storeCorrelationID
_bodyData
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
bytes
initWithPlayInfoContext:
SICData
initWithPlayInfoData:error:
playInfoRequest:didReceiveResponse:
startWithPlayInfoResponseBlock:
playInfoContext
playInfoResponse
contentIdentifier
setContentIdentifier:
playbackType
setPlaybackType:
playerGUID
setPlayerGUID:
setSICData:
_contentIdentifier
_playerGUID
_sic
_playbackType
playInfoData
_playInfoData
assetForFlavor:
performMigration:completionBlock:
investigateNetworksWithCompletionBlock:
buttons
initWithTitle:actionDictionary:
buttonTitle
_setValue:forProperty:
defaultButton
setDefaultButton:
dialogDictionary
dialogKind
setButtons:
_buttons
_dialogDictionary
valueForActionProperty:
buttonWithTitle:
actionParameter
buttonAction
URLTarget
_actionDictionary
_title
isVPPLicensed
isRevoked
getReceiptPathWithCompletionBlock:
initWithContainerPath:
_purchaseReceipt
_accountTypesCache
accountTypeWithAccountTypeIdentifier:
_correspondingAccountWithAccountTypeIdentifier:forAccount:error:
_ss_accountTypeWithIdentifier:error:
accountsWithAccountType:
_ss_altDSID
_ss_hashedDescription
initWithAuthorizationToken:accountIdentifier:
authorizationRequest:didReceiveResponse:
startWithAuthorizationResponseBlock:
_init
authorizationToken
familyAccountIdentifier
setFamilyAccountIdentifier:
keybagPath
setKeybagPath:
reason
shouldAddKeysToKeyBag
setShouldAddKeysToKeyBag:
shouldPromptForCredentials
setShouldPromptForCredentials:
_keybagPath
_token
_reason
_shouldAddKeysToKeyBag
_shouldPromptForCredentials
_familyAccountIdentifier
imageScale
width
height
imageKind
numberWithFloat:
_setValue:forKey:
substringToIndex:
imageOrientation
initWithArtworkDictionary:
imageSize
setImageKindWithTypeName:variantName:
_imageKind
_dataToSignWithDataSource:
dataToSignWithRequestProperties:
signatureComponents
_policyType
_signatureComponents
valueForHTTPHeader:
valueForQueryParameter:
componentType
_componentType
_newImagesForDictionary:
imagesForSize:
_imagesForSize:scale:
sortedArrayUsingFunction:context:
_itemImages
sharedClient
popQueuedNotifications
registerForRemoteNotifications
unregisterForRemoteNotifications
_notifyToken
JSONObjectWithData:options:error:
_valueForAlertKey:
_valueForAPSKey:
dateWithTimeIntervalSince1970:
alertBodyString
alertCancelString
alertOKString
alertTitleString
explicitContent
artworkUrl
badgeValue
category
metrics
soundFileName
tapUrl
version
notificationUserInfo
_userInfo
userIdentifier
bagType
cacheKey
allHTTPHeaders
setAllHTTPHeaders:
allowsExpiredBags
setAllowsExpiredBags:
ignoresCaches
usesCachedBagsOnly
setUsesCachedBagsOnly:
_allowsExpiredBags
_bagType
_ignoresCaches
_userIdentifier
_usesCachedBagsOnly
_osVersionString
assetWithName:
_setAssets:
bootstrapAsset
_setBootstrapAsset:
cacheURL
_setCacheURL:
extraInfo
_setExtraInfo:
lastModifiedTimestamp
_setLastModifiedTimestamp:
_setName:
pollInterval
_setPollInterval:
reloadUrgencyType
_setReloadUrgencyType:
serverURL
_setServerURL:
_setVersion:
_assetsByName
_imageCache
_assets
_bootstrapAsset
_cacheURL
_extraInfo
_lastModifiedTimestamp
_name
_pollInterval
_reloadUrgencyType
_serverURL
_version
ratingSystem
rank
_isRatingSystemForApps:
_isRatingSystemForMovies:
_isRatingSystemForTV:
ratingSystemFromString:
_setValueCopy:forProperty:
stringForRatingSystem:
ratingDescription
ratingLabel
setRank:
setRatingDescription:
setRatingLabel:
setRatingSystem:
setShouldHideWhenRestricted:
shouldHideWhenRestricted
ratingSystemLogo
_isRatingSystemForMusic:
_credentialSource
_updatedAccount
enqueuerProperties
isSBEnabled
timeZone
secondsFromGMT
isPrivateListeningEnabled
eventTimeZone
containerType
itemEndTime
endReasonType
featureName
itemDuration
mediaType
isOffline
eventDate
recommendationData
sourceType
itemStartTime
timedMetadata
trackInfo
itemType
requestingBundleIdentifier
requestingBundleVersion
householdID
isSiriInitiated
containerID
externalID
personalizedContainerID
storeID
reasonHintType
itemIDs
radioAdamID
subscriptionAdamID
equivalencySourceAdamID
purchasedAdamID
cloudID
lyricsID
containerIDs
stationHash
stationStringID
stationID
adamID
cloudAlbumID
globalPlaylistID
playlistVersionHash
cloudPlaylistID
defaultOverrideHTTPHeaderFields
propertyListObjectWithPlayActivityEvent:
currentStoreFrontID
setCurrentStoreFrontID:
_currentStoreFrontID
isPayment
biometricAuthorizationAttempts
setBiometricAuthorizationAttempts:
challenge
setChallenge:
consolidatedDialog
setConsolidatedDialog:
didAuthenticate
setDidAuthenticate:
didBuyParamsChange
setDidBuyParamsChange:
isIdentityMapInvalid
setIsIdentityMapInvalid:
paymentSheet
setPaymentSheet:
redirectURL
setRedirectURL:
shouldContinueTouchIDSession
setShouldContinueTouchIDSession:
shouldSendFallbackHeader
setShouldSendFallbackHeader:
signature
setSignature:
_didAuthenticate
_didBuyParamsChange
_isIdentityMapInvalid
_shouldContinueTouchIDSession
_shouldSendFallbackHeader
_biometricAuthorizationAttempts
_challenge
_consolidatedDialog
_dialogId
_paymentSheet
_signature
_enumerateAssetsUsingBlock:
HLSKeyCertificateURL
HLSKeyServerURL
HLSPlaylistURL
isiTunesStoreStream
itemDictionary
_itemDictionary
initWithXPCData:
xpcData
initWithXPCConnection:
_initSSXPCConnection
_reloadEventHandler
copyReplyQueue
setReplyQueue:
_disconnectBlock
_replyQueue
_messageBlock
_connectAfterDaemonLaunch
_connectAsObserver
_initSSDownloadManagerWithOptions:
_sendGlobalHandler:
makeObjectsPerformSelector:
_insertDownloads:before:after:completionBlock:
weakObjectsHashTable
shouldFilterExternalOriginatedDownloads
_sendMessage:withCompletionBlock:
_copyDownloads
_moveDownload:before:after:completionBlock:
setDownloads:forKinds:completionBlock:
EBookDownloadKinds
IPodDownloadKinds
softwareDownloadKinds
retryAllRestoreDownloads
_handleReply:forDownloads:message:isRetry:block:
addIndex:
_sendObserverConnection
_loadDownloadKindsUsingNetwork
_handleMessage:fromServerConnection:
_reloadIsUsingNetworkWithDownloadKinds:
_localExternalValues
_setLocalExternalValues:
_localValues
_setLocalValues:
prefetchedDownloadExternalProperties
prefetchedDownloadProperties
_setDirtyCachedExternalProperties:
_setDirtyCachedProperties:
_handleDownloadKindsUsingNetworkChanged:
_handleDownloadsChanged:
_handleDownloadStatesChanged:
_copyDownloadKindsUsingNetwork
persistenceIdentifier
firstObjectCommonWithArray:
_sendMessageToObservers:
_newOptionsDictionary
reconnectToLSApplicationWorkspace
removePersistenceIdentifier:
setDownloadHandler:
EBookDownloadManager
IPodDownloadManager
softwareDownloadManager
allStoreDownloadKinds
ITunesDownloadKinds
reevaluateBackgroundDownloadsForBundleIdentifiers:
_triggerDownloads
activeDownloads
cancelAllDownloadsWithCompletionBlock:
finishDownloads:
insertDownloads:afterDownload:completionBlock:
insertDownloads:beforeDownload:completionBlock:
pauseDownloads:completionBlock:
setDownloads:completionBlock:
_pauseDownloads:completionBlock:
_supportsSoftwareKind
_activeDownloads
_activeDownloadsChanged
_backgroundQueue
_downloads
_downloadsChanged
_isUsingNetwork
_observerConnection
_observerQueue
_options
_removedDownloads
_launchNotificationToken
ignoreDivertedDownloads
setShouldFilterExternalOriginatedDownloads:
setIgnoreDivertedDownloads:
_downloadKinds
_filterExternalOriginatedDownloads
_persistenceIdentifier
_prefetchedDownloadExternalProperties
_prefetchedDownloadProperties
_ignoreDivertedDownloads
cancelLabel
setCancelLabel:
_cancelLabel
_getValues:forProperties:count:message:
getValues:forExternalProperties:count:
_persistentIdentifier
__addCachedExternalValues:
__addCachedPropertyValues:
exists
resetCachedExternalProperties:count:
resetCachedProperties:count:
_dirtyLocalExternalProperties
_dirtyLocalProperties
_connectToDaemon
_sendDisconnectMessage
_sendAuthenticationSessionWithMessage:
_sendSessionHandleWithMessage:
_sendSessionCancelWithMessage:
_sendSessionPauseWithMessage:
_controlConnection
_initWithMessage:controlConnection:
downloadHandler:handleAuthenticationSession:
downloadHandlerDidDisconnect:
downloadHandler:cancelSession:
_newSessionWithMessage:
downloadHandler:handleSession:
downloadHandler:pauseSession:
downloadPhasesToIgnore
resetDisavowedSessions
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
setDownloadPhasesToIgnore:
setSessionsNeedPowerAssertion:
setSessionsShouldBlockOtherDownloads:
_delegateQueue
_downloadPhasesToIgnore
_handlerID
_sessionsNeedPowerAssertion
_sessionsShouldBlockOtherDownloads
predicateWithFormat:
filteredArrayUsingPredicate:
shouldHandleSafariScriptURL:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
startWithDetailedResponseBlock:
startWithMetadataResponseBlock:
skipDownloads
setSkipDownloads:
_skipDownloads
initWithResponseDictionary:
_valueForProtocolKey:
_dialogActionWithDialog:
_dialogActionWithTouchIDDialog:
_invalidateURLBagsAction
_copyAccount
_setActiveAccountActionWithAccount:
_setCreditsActionWithCredits:account:
_actionWithActionType:
_urlActionWithType:URL:
_selectFooterActionWithSection:
_checkInAppQueueActionWithClientID:environment:
actions
initWithURLResponse:dictionary:
newAccount
actionsWithActionType:
failureType
isSupportedProtocolVersion
versionMismatchURL
account
dialog
footerSection
_account
_actionType
_creditsString
_dialog
_footerSection
checkQueueForClientWithIdentifier:URLBagContext:
initWithLocationResponseDictionary:
dateWithTimeIntervalSinceNow:
_applyValuesToCopy:
_requestWithType:
_actionParameterValue
setKDChannelIdentifier:
_setKDMovieIdentifier:
setParameterValues:
setStartsLeaseSession:
setHTTPHeaderFields:
_setActionType:
_setCertificateData:
_setURL:
_copyWithLeaseType:
_copyBodyDictionaryWithFairPlaySession:
_URLBagKey
KDChannelIdentifier
parameterValues
HTTPHeaderFields
startsLeaseSession
_certificateData
_leaseType
_KDMovieIdentifier
_URL
_httpHeaderFields
_kdChannelIdentifier
_kdMovieIdentifier
_startsLeaseSession
_valueForFirstAvailableKey:
accountUniqueIdentifier
isManagedStudent
token
_responseTypeForFailureType:
_responseTypeForErrorNumber:
_responseTypeForStatusValue:
userMessage
_loadWithCompletionBlock:
indexOfObjectPassingTest:
_drainPendingLookupsWithError:
_loadURLBag
setURLBag:forContext:
getTrustForURL:completionBlock:
existingBagDictionary
_ignoreCacheForNextLookup
_pendingLookups
_storeFrontIdentifier
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:options:range:
insertString:atIndex:
_initSSDownloadSession
_copySessionPropertyWithKey:
download
downloadAsset
_sessionID
_assetID
_downloadID
_finishWithType:error:
_setBool:forSessionProperty:
blocksOtherDownloads
canBePaused
disavowSessionWithError:
downloadPhase
finishSessionWithSuccess:error:
needsPowerAssertion
releaseSessionControl
setBlocksOtherDownloads:
setCanBePaused:
setNeedsPowerAssertion:
setStatusDescription:
duetTimeoutInterval
_downloadPhase
_duetTimeoutInterval
initWithAuthenticationSession:
proposedCredential
previousFailureCount
failureResponse
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
authenticationChallenge
_finishWithType:credential:
authenticationSession
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
cancelAuthenticationChallenge:
rejectProtectionSpaceAndContinueWithChallenge:
_session
initWithClientIdentifier:
pendingFollowUpWithIdentifier:
sharedFollowUpConfig
_dismissFollowUpWithIdentifier:
followUpController
pendingFollowUpItemsWithCompletion:
_postFollowUpWithIdentifier:userInfo:
_createFollowUpItemForRenewCredentialsWithUserInfo:
setLabel:
setActions:
setDisplayStyle:
setGroupIdentifier:
setInformativeText:
setUserInfo:
clearPendingFollowUpItemsWithUniqueIdentifiers:completion:
_createFollowUpItemForIdentifier:userInfo:
postFollowUpItem:completion:
sharedController
dismissFollowUpWithIdentifier:account:
postFollowUpWithIdentifier:account:userInfo:
setFollowUpController:
_followUpController
actionParametersForItemIdentifier:
priceDisplayForItemType:
actionDisplayNameForItemType:
_setPersonalizedItems:
personalizeOffersRequest:didReceiveResponse:
startWithPersonalizedResponseBlock:
initWithItems:
_items
personalizedItems
setActionDisplayNameString:forItemType:
setActionParameters:forItemIdentifier:
setPriceDisplayString:forItemType:
_actionDisplayNames
_actionParameters
_priceDisplayNames
copyReleaseDateStringWithStyle:
_setArtistName:
_setImageCollection:
_setItemKind:
_setReleaseDate:
_setReleaseDateString:
_setStoreAccountIdentifier:
_setStoreItemIdentifier:
_setStorePreorderIdentifier:
_setTitle:
storeAccountIdentifier
storeItemIdentifier
storePreorderIdentifier
_artistName
_imageCollection
_itemID
_itemKind
_releaseDate
_releaseDateString
_preorderID
initWithItemKinds:
_registerAsObserver
preorderManagerPreordersDidChange:
bookStoreItemKinds
musicStoreItemKinds
cancelPreorders:withCompletionBlock:
itemKinds
_itemKinds
_preorders
_initSSRestoreContentItem
setValue:forAssetProperty:
_restoreKeyForAssetProperty:
_restoreKeyForDownloadProperty:
setBundleID:
setStoreAccountAppleID:
setCloudMatchStatus:
cloudItemID
cloudMatchStatus
copyRestoreDictionary
downloadKind
isDRMFree
setCloudItemID:
setDownloadKind:
setDRMFree:
setStoreOriginalPurchaserAccountID:
setStoreFlavor:
setStoreItemID:
setStoreSoftwareVersionID:
setVideoDimensions:
storeAccountAppleID
storeFlavor
storeOriginalPurchaserAccountID
storeSoftwareVersionID
videoDimensions
_originalPurchaserAccountID
_appleID
_cloudMatchStatus
_isRestore
initWithServiceName:entitlement:queue:
setObserver:
_dispatchMessage:connection:
drain
sharedDaemonConfigOversize
observer
selector
mainServer
addObserver:selector:forMessage:
removeObserver:selector:forMessage:
_entitlementName
_listener
_serviceName
_observer
_selector
initWithBytes:length:encoding:
initWithNamedPort:
_distributedNotificationMessage:connection:
initWithName:queue:block:
_sendRegistrationMessage:name:
dispatchQueue
addObserverForName:queue:usingBlock:
namedPort
_portName
_server
_openLogFile
_checkLogFileSize
writeData:
_closeLogFile
_logFilePathWithIndex:
_activeLogFilePath
_rollLogFiles
pathExtension
setSubsystem:
initWithFileDescriptor:closeOnDealloc:
seekToEndOfFile
moveItemAtPath:toPath:error:
logOptions
_lastFileStatTime
_fileHandle
_fileObserverSource
initWithSAPVersion:
exchangeData:error:
primingSignatureForData:error:
signData:error:
verifyPrimeSignature:error:
verifySignature:forData:error:
_teardownSession
isComplete
_complete
removeObjectIdenticalTo:
addChildRequest:
removeChildRequest:
_childOperation
_childRequests
_success
initWithManifestType:
_removeItemsWithAssetPaths:completionBlock:
getPathsForFilesWithClass:completionBlock:
manifestType
rebuildManifestWithCompletionBlock:
removeItemWithAssetPath:completionBlock:
removeItemsWithAssetPaths:completionBlock:
_manifestType
contentTasteItemUpdates
shouldInvalidateLocalCache
setShouldInvalidateLocalCache:
_shouldInvalidateLocalCache
_contentTasteItemUpdates
_connectEventConnection
eventMonitor:receivedEventWithName:userInfo:
_eventConnection
_copyWithMediaContentTasteItemClass:
contentType
_contentType
_playlistGlobalID
_storeAdamID
_tasteType
initWithStorageLocation:
isFileURL
_currentProcessShouldUseRescuedStorageLocationForLocation:
_rescuedStorageLocationForLocation:
_fileURLRepresentsSharedStorageLocation:
_setupCookieDatabase:forCookieStorage:
setSetupBlock:
_sharedStorageLocationPath
fileURLWithPath:
_copyCookiesWithUserIdentifier:
cookieArrayBySettingFeatureEnablerWithArray:userIdentifier:
_copyCookieDictionaryForURL:userIdentifier:
_shouldAddITFECookieToURL:
setFeatureEnablerInDictionary:userIdentifier:
dictionaryWithObjectsAndKeys:
_copyCookieObjectsForURL:userIdentifier:
_cookieDatabaseDidChange
_columnNameForCookieProperty:
_bindStatement:withValues:
_getSetCookiesForResponse:
_getUserSetCookiesForResponse:
_getGlobalSetCookiesForResponse:
_insertCookies:forUserIdentifier:
setCookies:forUserIdentifier:
_allUserIdentifiers
synchronizeFeatureEnablerCookieWithCookieValue:userIdentifier:result:
setObject:atIndexedSubscript:
fetchDefaults
removeCookiesWithProperties:
sortedArrayUsingSelector:
initWithProperties:
isSessionOnly
expiresDate
isSecure
_copyPrivateCookiesForURL:userIdentifier:
sharedHTTPCookieStorage
cookiesForURL:
_copyPrivateCookieObjectsForURL:userIdentifier:
_copyCookiesForPreparedSQLStatement:
cookiesWithResponseHeaderFields:forURL:
_bindInsertStatement:forCookie:userIdentifier:
_fileIsOwnedByRoot:
_currentProcessIsRoot
attributesOfItemAtPath:error:
responseHasSetCookies:
cookiesForURL:userIdentifier:
removeAllCookies
setCookiesFromCookieStorage:
storageLocation
_handleSharedCookieDatabaseDidChangeDarwinNotification
synchronizeCookies
_storageLocation
_usesSharedCookieDatabase
_object
_objectAddress
URLBagDictionary
newLoadURLOperationWithRequest:
_urlBagDictionary
valueForRequestParameter:
copyRequestParameters
keyProfile
setKeyProfile:
localizationStyle
setLocalizationStyle:
setLocation:
_localizationStyle
authenticatesIfNeeded
startWithLookupBlock:
initWithLocation:
setAuthenticatesIfNeeded:
_lookupProperties
_setTimeoutInterval:
personalizationStyle
setPersonalizationStyle:
resultFilters
setResultFilters:
_personalizationStyle
_resultFilters
_enumerateItemsWithBlock:
initWithLookupDictionary:
allItems
appStoreURLWithReason:initialIndex:
itemForKey:
metricsConfiguration
_itemOrder
_createLogConfigWithSubsystem:category:
setCategory:
setEnvironment:
setWriteToDisk:
_createLogConfigWithBaseConfig:subystem:category:
sharediTunesStoreConfig
_debugLogsEnabled:
propertyAccessQueue
backingLogFileOptions
outputDirectory
outputFilename
setBackingLogFileOptions:
subsystem
_logFileDirectoryPathForSubsystem:category:
_logFilenameForSubsystem:category:
backingOSLogObject
setBackingOSLogObject:
environment
_deviceIsRunningInternalBuild
_deviceIsRunningSeedBuild
writeToDisk
_deviceIsRunningInternalOrSeedBuild
setOutputDirectory:
setOutputFilename:
sharedAccountsLogoutConfig
sharedAccountsMigrationConfigOversize
sharedFairPlayAnisetteConfig
sharedFeatureEnablerMigrationConfig
sharediTunesStoreConfigOversize
sharedStoreServicesConfigOversize
sharedWriteToDiskConfig
logFileOptions
setPropertyAccessQueue:
_writeToDisk
_category
_environment
_subsystem
_backingLogFileOptions
_backingOSLogObject
_propertyAccessQueue
_outputDirectory
_outputFilename
setApplicationIdentifier:
applicationStates
initWithApplicationIdentifier:
addApplicationState:
setNotRunningApplicationStates
setApplicationStates:
_applicationIdentifier
_applicationStates
iTunesIdentifier
initWithCacheRepresentation:
newCacheRepresentation
allITunesIdentifiers
allITunesAccountNames
familyMembers
setFamilyMembers:
iTunesAccountNames
setITunesAccountNames:
_familyMembers
_iTunesAccountNames
askToBuy
iCloudAccountName
setICloudAccountName:
iCloudIdentifier
setICloudIdentifier:
setITunesIdentifier:
isMe
setMe:
isSharingPurchases
setSharingPurchases:
_askToBuy
_firstName
_iCloudAccountName
_iCloudIdentifier
_iTunesIdentifier
_lastName
_sharingPurchases
cellularDataStates
powerStates
registrationStates
timeLimitStates
userDefaultStates
encodeFloat:forKey:
decodeFloatForKey:
addNetworkType:
addUserDefaultState:
isCellularAllowed
isWiFiAllowed
unionPolicyRule:
setBatteryLevel:
setCellularDataStates:
setDownloadSizeLimit:
setNetworkTypes:
setPowerStates:
setRegistrationStates:
setTimeLimitStates:
setUserDefaultStates:
_batteryLevel
_cellularDataStates
_downloadSizeLimit
_networkTypes
_powerStates
_registrationStates
_timeLimitStates
_userDefaultStates
unionNetworkConstraints:
_policyRuleForSizeLimit:
replaceObjectAtIndex:withObject:
initWithDownloadKind:URLBagType:
setPolicyRule:
setPolicyRules:
_downloadKind
_policyRules
explanation
_parseResponse:
_inferSalableIconTypeWithBuyParams:
setSalableIconType:
localizedUppercaseString
formattedUsernameFromUsername:
_unlock
_displayPriceLabelForDisplayPrice:
_attributedStringForSalableInfoStringArray:
stringWithFormattedUsernameForString:username:
_salableInfoItemsToUppercase
_attributedStringForString:
_greyAttributedStringForAttributedString:range:
appendAttributedString:
initWithAttributedString:
_replaceMarkupForMutableAttributedString:markupType:
_replaceBreakingSpaceMarkupForMutableAttributedString:
addAttribute:value:range:
_payeeTypeForRequestorValue:
_payeeTypeInferredFromEnumeratedTitle
_salableIconTypeForString:
_confirmationTitleTypeForStringValue:
_attributedStringForStringArray:useGrey:
_stringValuesToUppercase
replaceCharactersInRange:withString:
arrayWithArray:
defaultAuthKitAuthenticationContext
initWithServerResponse:
initWithServerResponse:buyParams:
accountHeader
buyParams
displayPrice
displayPriceLabel
paymentSummary
ratingHeader
ratingValue
salableIconURL
salableIconURLString
salableInfo
salableInfoLabel
setAccountHeader:
setDisplayPrice:
setExplanation:
setPaymentSummary:
setRatingHeader:
setRatingValue:
setSalableIconURLString:
setSalableInfo:
setStoreName:
storeName
confirmationTitleType
setConfirmationTitleType:
countryCode
setCountryCode:
currencyCode
setCurrencyCode:
flexList
payeeType
setPayeeType:
price
setPrice:
salableIconType
shouldUppercaseText
setShouldUppercaseText:
titleType
setTitleType:
_shouldUppercaseText
_accountHeader
_buyParams
_displayPrice
_displayPriceLabel
_explanation
_paymentSummary
_ratingHeader
_ratingValue
_salableIconURL
_salableIconURLString
_salableInfo
_salableInfoLabel
_storeName
_confirmationTitleType
_countryCode
_currencyCode
_flexList
_message
_payeeType
_price
_salableIconType
_titleType
keybagOptions
setKeybagOptions:
ETagForAssetType:
setETag:forAssetType:error:
_initWithITunesMetadata:
isBeta
setBeta:
isPlaceholder
setPlaceholder:
isProfileValidated
setProfileValidated:
isLaunchProhibited
_beta
_etags
_placeholder
_profileValidated
_propertyValues
_launchProhibited
_sendDemotionMessage:completionBlock:
_getItemsWithMessage:completionBlock:
demoteApplicationWithBundleIdentifier:completionBlock:
getLibraryItemsForITunesStoreItemIdentifiers:completionBlock:
getRemovableSytemApplicationsWithCompletionBlock:
hasDemotedApplicationsWithCompletionBlock:
isInstalledApplicationWithBundleIdentifier:completionBlock:
isRemovedSystemApplicationWithBundleIdentifier:completionBlock:
playableApplicationsWithBundleIdentifiers:completionBlock:
refreshReceiptsWithCompletionBlock:
restoreAllDemotedApplicationsWithOptions:completionBlock:
restoreDemotedApplicationWithBundleIdentifier:options:completionBlock:
restoreRemovedSystemApplicationWithBundleIdentifier:completionBlock:
startWithRedeemResponseBlock:
initWithRedeemCodes:
redeemCodes
headless
setHeadless:
cameraRecognized
setCameraRecognized:
_redeemCodes
_headless
_cameraRecognized
extensionIdentifier
getVisibilityWithCompletionBlock:
setResponse:
setMaxConcurrentOperationCount:
boolForKey:
refreshLeaseWithRequest:completionBlock:
_initSSVPlaybackLease
leaseType
initWithURLBag:leaseType:
beginLeaseURL
_addOperationWithRequest:configurationURL:completionBlock:
_endLease
getAssetURL
getCertificateDataWithCompletionBlock:
refreshLeaseURL
_startRefreshTimerIfNecessary
_cancelRefreshTimer
_updateWithLeaseResponseError:
initWithLeaseRequest:configuration:
initWithLeaseRequest:URLBag:
_updateForLeaseResponse:error:
addBarrierOperation:
stopSubscriptionLease:
cancelAllOperations
playbackLease:automaticRefreshDidFinishWithResponse:error:
playbackLeaseAutomaticRefreshDidFinish:
playbackLease:automaticRefreshDidFailWithError:
playbackLeaseDidEnd:
playbackLease:didEndWithReasonType:
_fireRefreshTimer
certificateData
KDMovieIdentifier
leaseDuration
initWithTimeIntervalSinceNow:
isOfflineSlotAvailable
_shouldEndLeaseForError:returningEndReasonType:
_sendLeaseDidEndWithEndReasonType:
initWithLeaseConfiguration:
beginLeaseWithRequest:completionBlock:
cancelAllAssetRequests
endLease
getAssetWithRequest:completionBlock:
preheatLeaseRequestsWithCompletionBlock:
refreshesAutomatically
setCertificateData:
setRefreshesAutomatically:
updateWithExternalLeaseResponseError:
_assetOperations
_fairPlaySubscriptionController
_lastKDLeaseRequest
_leaseDidEndNotificationToken
_leaseExpirationDate
_offlineSlotRequest
_refreshesAutomatically
_refreshTimer
_initWithID:class:length:content:opaque:
readTokenFromBuffer:opaque:
dataWithBytes:length:
readTokenFromBuffer:
readOpaqueTokenFromBuffer:
tokenClass
content
mClass
mIdentifier
mLength
mContent
nextToken
mReadPointer
mValue
dictionaryForCode:
errorForCode:
failedCodes
redeemedCodes
setFailedCodes:
setRedeemedCodes:
_errors
_redeemedCodes
isLocalReadable
initReadOnly
copyValueForDomain:key:
readUsingSessionBlock:
removeAllValuesForDomain:completionBlock:
predicateWithProperty:equalToValue:
database
queryWithDatabase:predicate:
deleteAllEntities
modifyUsingTransactionBlock:
setValuesWithDictionary:forDomain:completionBlock:
copyAccountDictionaryForDomain:
countForObject:
modifyAsyncUsingTransactionBlock:
removeAllValuesForDomain:
removeAllValuesWithCompletionBlock:
setValuesWithDictionary:forDomain:
removeAccountDictionaries
copyAccounts
isLocalWritable
_useLocalRead
_useLocalWrite
initWithMaxSize:
accessQueue
_count
backingList
removeNode:
insertNode:
removeAllNodes
_removeObjectForKey:
_addObject:forKey:
allNodes
initWithKey:object:
insertObject:
maxSize
tail
allObjectsAndKeys
setAccessQueue:
setBackingList:
_maxSize
_backingList
initWithObject:
playActivityEvents
outputStreamToFileAtPath:append:
open
writePropertyList:toStream:format:options:error:
write:maxLength:
close
setPlayActivityEvents:
_playActivityEvents
buffer
_flush
setCurrentIndex:
currentIndex
_rearrangeObjects:forCurrentIndex:
setBuffer:
setMaxSize:
flush
_currentIndex
_buffer
_tearDownConnections
_reconnectToDaemonWithCompletionBlock:
_openSessionWithMessage:
_setControlConnection:
_setSessionID:
_setErrorProperties:
errorHandler:handleSession:
performDefaultHandling
_dispatchToDelegate:
errorHandlerDidDisconnect:
failureTypes
setFailureTypes:
stopWithCompletionBlock:
_failureTypes
dataWithContentsOfFile:
_decodeReceiptData:toDecodedMessage:
_parseReceiptFromMessage:
_extractSignedDataFromMessage:
_verifySignatureForSignedData:onDate:
_checkIfCertificate:containsOID:
_parseTokens:
readFromBuffer:
numberWithUnsignedLong:
_copyCertificatesFromSignedData:
_checkArray:containsCertificateWithOID:
_setPoliciesForTrust:
_anchorTrust:toRootCertificateIn:
receiptWithContentsOfFile:
_cancellationReason
_receiptCreationDate
_renewalDate
contentToken
removeProfileWithIdentifier:
migrate
isValidJSONObject:
_JSONObjectForTaskMetrics:requestData:responseData:
initWithJSONObject:
compressed
backingJSONData
JSONData
JSONObject
_JSONObjectForEntries:
_outputDirectoryForLogConfig:
enumeratorAtPath:
_timeIntervalFromFilename:
applicationStateForApplication:
writeToDiskWithLogConfig:compressed:error:
URLByAppendingPathComponent:
writeToURL:options:error:
JSONString
localeWithLocaleIdentifier:
transactionMetrics
_entryDictionaryForTaskMetrics:requestData:responseData:
fetchStartDate
_stringFromDate:
responseEndDate
requestStartDate
_requestDictionaryForTaskTransactionMetrics:requestData:
_responseDictionaryForTaskMetrics:responseData:
_creatorDictionary
_entriesArrayForTaskMetrics:requestData:responseData:
_headersArrayForHTTPHeaders:
_contentDictionaryForResponse:responseData:
resourceFetchType
localizedStringForStatusCode:
systemTimeZone
_dateFormatterForTimeZone:
scannerWithString:
scanDouble:
merge:
merge:withEstimatedFileSizeLimit:
removeLogsWithLogConfig:olderThanDate:
sendWriteAllLogsToDiskNotification
sendWriteAllLogsToDiskDecompressedNotification
initWithTaskMetrics:requestData:responseData:
writeToDiskError:
setBackingJSONData:
setCompressed:
_compressed
_backingJSONData
redirectToURL:
retry
initWithDataRepresentation:
dataRepresentation
setKDMovieIdentifier:
leaseRequest
_loadCertificateDataIfNecessary:
_resolveConfigurationAndURLReturningError:
_shouldRetryForError:
_bagKey
_request
_retryCount
initWithDatabaseURL:readOnly:
createSchemaInDatabase:
_initReadOnly:
_dispatchBlockAsync:
dispatchBlockAsync:
readAsyncUsingSessionBlock:
setUserVersion:
predicateMatchingAllPredicates:
enumeratePersistentIDsAndProperties:count:usingBlock:
copyDataForDomain:key:
anyInDatabase:predicate:
existingEntityForDomain:key:
_setMD5:
_md5
sharedInstanceWithSessionDelegate:
initWithSessionDelegate:
sharedCache
cachedValues
setCachedValues:
updateQueue
queue
values
isRunningTests
executeBlock
sessionDurationLoadURL
samplingPercentageUsersLoadURL
samplingPercentageCachedResponsesLoadURL
sessionDurationPageRender
samplingPercentageUsersPageRender
update
setUpdateQueue:
setRunningTests:
_runningTests
_updateQueue
_cachedValues
setAccessToken:
setPageAccessToken:
setPageIdentifier:
setServiceIdentifier:
accessToken
pageAccessToken
pageIdentifier
serviceIdentifier
_accessToken
_pageAccessToken
_pageIdentifier
_serviceIdentifier
deleteFromDatabase
initWithPropertyValues:inDatabase:
setData:forDomain:key:
scanHexLongLong:
numberFromHexDigits
isRestore
isPurchase
transferBytesWritten
transferBytesExpected
downloadPhaseIdentifierOverride
downloadStatus
_downloadPhaseIdentifierOverride
_downloadStatus
requestMessage
authenticatesIfNecessary
carrierBundleProvisioningStyle
localizedAuthenticationReason
_authenticatesIfNecessary
_carrierBundleProvisioningStyle
_localizedAuthenticationReason
methodSignatureForSelector:
invokeWithTarget:
isRunningUnitTests
_beginTaskCompletionAssertion
_openDatabase
_endTaskCompletionAssertion
expireBackgroundTask
_stepStatement:hasRow:didFinish:isCorrupt:
_accessDatabaseUsingBlock:
stringWithCString:encoding:
sleepForTimeInterval:
_resetCorruptDatabase
_statementForSQL:cache:
setUserVersion:forDatabase:
userVersionForDatabase:
initWithPID:flags:reason:name:withHandler:
_openFlags
_resetAndReopenDatabaseWithPath:
_resetDatabaseWithPath:
_setTakesTaskCompletionAssertions:
accessDatabaseUsingBlock:
columnName:existsInTable:
dispatchAfter:block:
dispatchBlockSync:
newDispatchSourceWithType:
userVersion
beginTaskCompletionAssertion
endTaskCompletionAssertion
setTakesTaskCompletionAssertions:
takesTaskCompletionAssertions
setupBlock
_databasePath
_readOnly
_isInTransaction
_setupBlock
_statementCache
_takesTaskCompletionAssertions
_taskAssertion
_taskAssertionCount
handleFailureInFunction:file:lineNumber:description:
objCType
initWithBytes:length:
initWithData:
hasContainerType
hasEndReasonType
hasEventDateTimestamp
eventDateTimestamp
hasEventTimeZoneName
eventTimeZoneName
timeZoneWithName:
hasEventSecondsFromGMT
eventSecondsFromGMT
hasFeatureName
hasItemDuration
hasItemEndTime
hasItemStartTime
hasItemType
hasMediaType
hasOffline
hasPersistentID
hasRecommendationData
hasSourceType
hasTimedMetadata
hasTrackInfo
hasEventType
hasReasonHintType
hasRequestingBundleVersion
hasRequestingBundleIdentifier
hasInternalBuild
internalBuild
hasEnqueuerProperties
hasHouseholdID
hasSiriInitiated
siriInitiated
hasContainerID
hasExternalID
hasPersonalizedContainerID
hasStoreID
hasContainerAdamID
containerAdamID
setAdamID:
hasGlobalPlaylistID
setGlobalPlaylistID:
hasPlaylistVersionHash
setPlaylistVersionHash:
hasStationHash
setStationHash:
hasStationStringID
setStationStringID:
hasStationID
setStationID:
hasCloudAlbumID
setCloudAlbumID:
hasCloudPlaylistID
setCloudPlaylistID:
hasSubscriptionAdamID
setSubscriptionAdamID:
hasPurchasedAdamID
setPurchasedAdamID:
hasRadioAdamID
setRadioAdamID:
hasItemCloudID
itemCloudID
setCloudID:
hasLyricsID
setLyricsID:
hasEquivalencySourceAdamID
setEquivalencySourceAdamID:
_mutableCopyClass
setContainerType:
setEndReasonType:
setEventDateTimestamp:
setEventTimeZoneName:
setFeatureName:
setItemDuration:
setItemEndTime:
setItemStartTime:
setItemType:
setMediaType:
setPersistentID:
setRecommendationData:
setSourceType:
setTimedMetadata:
setTrackInfo:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setEnqueuerProperties:
setHouseholdID:
setSiriInitiated:
setContainerID:
setExternalID:
setPersonalizedContainerID:
setStoreID:
setReasonHintType:
setContainerAdamID:
setItemCloudID:
isInternalBuild
_containerID
_containerIDs
_containerType
_endReasonType
_enqueuerProperties
_eventDate
_eventTimeZone
_externalID
_featureName
_householdID
_itemIDs
_itemDuration
_itemEndTime
_itemStartTime
_itemType
_mediaType
_persistentID
_personalizedContainerID
_reasonHintType
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_SBEnabled
_siriInitiated
_sourceType
_storeID
_timedMetadata
_trackInfo
setContainerIDs:
setEventDate:
setEventTimeZone:
setInternalBuild:
setItemIDs:
setVersion:
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:database:
initWithPersistentID:inDatabase:
databasePropertyToSetClientProperty:
databaseValueForProperty:clientValue:
joinClauseForProperty:
databasePropertyToGetClientProperty:
_deleteRowFromTable:usingColumn:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
disambiguatedSQLForProperty:
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
copyDatabaseDictionaryToSetClientDictionary:
memoryEntityClass
copyValuesForClientProperties:
copyXPCEncodedValuesForClientProperties:
existsInDatabase
bindToStatement:bindingIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
setWithObject:
_property
predicateWithProperty:value:comparisonType:
comparisonType
_comparisonTypeString
predicateWithProperty:equalToLongLong:
_comparisonType
bindToSelectStatement:bindingIndex:
isNegative
stringWithString:
copySelectSQLWithProperties:count:
containsPredicateWithProperty:values:
containsPredicateWithProperty:query:queryProperty:
doesNotContainPredicateWithProperty:values:
queryProperty
_negative
_query
_queryProperty
_values
matchesNull
isNotNullPredicateWithProperty:
isNullPredicateWithProperty:
_matchesNull
predicateMatchingAnyPredicates:
predicates
predicateWithProperty:values:comparisonType:
_combinationOperation
_predicates
predicate
limitCount
enumeratePersistentIDsUsingBlock:
entityClass
_newSelectSQLWithProperties:count:columns:
setOrderingDirections:
setOrderingProperties:
defaultProperties
enumerateMemoryEntitiesWithProperties:usingBlock:
setDatabaseID:
getObjects:range:
_newSelectSQLWithProperties:count:
initWithDatabase:descriptor:
copyEntityIdentifiers
countOfEntities
createTemporaryTableWithName:properties:count:
enumerateMemoryEntitiesUsingBlock:
queryDescriptor
_descriptor
setEntityClass:
setLimitCount:
setMemoryEntityClass:
orderingClause
setOrderingClause:
orderingDirections
orderingProperties
setPredicate:
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
_aggregateValueForProperty:function:predicate:database:
queryWithDatabase:predicate:orderingProperties:
countForProperty:predicate:database:
maxValueForProperty:predicate:database:
minValueForProperty:predicate:database:
databaseEntityClass
initWithCondition:
_configureAllPromise:withResults:promises:currentPromiseIndex:
_configureAnyPromise:withPomises:currentPromiseIndex:
_isFinished
promiseResult
_errorIsCanceledError:
completionBlocks
callErrorBlock:withPromiseResult:
_addBlock:orCallWithResult:
callCompletionBlock:withPromiseResult:
callSuccessBlock:withPromiseResult:
lockWhenCondition:beforeDate:
distantFuture
_finishPromise:withPromise:
setPromiseResult:
unlockWithCondition:
flushCompletionBlocksWithPromiseResult:
promiseWithAll:
errorOnlyCompletionHandlerAdapter
setCompletionBlocks:
setStateLock:
_completionBlocks
_promiseResult
_stateLock
reloadFromDatabaseEntity:properties:
setValues:forProperties:count:
setValues:forExternalProperties:count:
databaseID
propertyValues
externalPropertyValues
initWithDatabaseEntity:properties:
setValue:forExternalProperty:
_databaseID
_externalPropertyValues
downloadMetadataForItemIdentifier:
downloadsMetadata
transactionIdentifierForItemIdentifier:
responseMetrics
cancelsPurchaseBatch
setCancelsPurchaseBatch:
downloadIdentifiers
setDownloadIdentifiers:
setURLResponse:
_cancelsPurchaseBatch
_downloadIdentifiers
_purchase
_requestStartTime
_responseEndTime
_responseStartTime
_transactionIdentifiers
initWithEncodedDialog:
startWithAuthenticateResponse:
encodedDialog
authenticatedAccountIdentifier
setAuthenticatedAccountIdentifier:
performedButtonIndex
setPerformedButtonIndex:
selectedButtonIndex
setSelectedButtonIndex:
_authenticatedAccountIdentifier
_performedButtonIndex
_selectedButtonIndex
initWithWritingStyle:
_acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:
_revisionsIndexSetForPlayActivityEvents:
_completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:
_daemonPlayActivityControllerConnection
remoteObjectProxyWithErrorHandler:
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
_revisionsIndexSetForPlayActivityEventPersistentIDs:
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
revisionsIndexSet
_getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:
currentEventsRevision
eventsRevisionVersionToken
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
insertPlayActivityEvent:withRevision:returningError:
setCurrentEventsRevision:
setQualityOfService:
insertPlayActivityEvents:withReplyBlock:
_loadEndpointIdentifierInformationIfNeeded
_requiredEndpointIdentifiers
currentRevision
additionalPendingRevisionsIndexSet
firstIndex
removePlayActivityEventsUpToRevision:withCompletionHandler:
removePlayActivityEventsUpToRevision:returningError:
removePlayActivityEventsUptoRevision:withReplyBlock:
setCurrentRevision:
setRevisionVersionToken:
_setEndpointRevisionInformation:forEndpointIdentifier:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
sessionToken
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
_sessionInformationForSessionToken:
endpointIdentifier
removeIndexes:
_copyEndpointRevisionInformationForEndpointIdentifier:
revisionVersionToken
setAdditionalPendingRevisionsIndexSet:
addIndexes:
setRevisionsIndexSet:
initWithMachServiceName:options:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
lastIndex
setEndpointIdentifier:
setSessionToken:
getRevisionInformationWithCompletionHandler:
_setupNotifyTokenIfNeeded
revisionsIndexSetForPlayActivityEvents:
revisionsIndexSetForPlayActivityEventPersistentIDs:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
writingStyle
_debugLogOperationQueue
_endpointIdentifierToEndpointRevisionInformation
_endpointRevisionInformationDidChangeNotifyToken
_hasAttemptedTableCreation
_hasLoadedEndpointRevisionInformation
_hasSetupEndpointRevisionInformationDidChangeNotifyToken
_hasValidEndpointRevisionInformationDidChangeNotifyToken
_pendingFlushingSessions
_writingStyle
isEqualToIndexSet:
_additionalPendingRevisionsIndexSet
_currentRevision
_revisionVersionToken
_endpointIdentifier
_revisionsIndexSet
_sessionToken
initWithManagerIdentifier:
_sendMessage:withPurchases:afterPurchase:completionBlock:
_sendMessage:withPurchaseIdentifiers:afterPurchase:completionBlock:
_sendCompletionBlock:forGetPurchasesReply:
_handleAuthenticateRequest:fromConnection:
_handlePurchasesFinished:fromConnection:
_shouldInvalidateSubscriptionStatusForPurchaseResponse:
_handleMessage:fromConnection:
_resultForReply:error:
_newEncodedArrayWithPurchaseIdentifiers:
_sendCompletionBlock:forStandardReply:
_newEncodedArrayWithPurchases:
getPurchasesUsingBlock:
insertPurchases:afterPurchase:withCompletionBlock:
managerIdentifier
movePurchases:afterPurchase:withCompletionBlock:
_reconnectForDaemonLaunch
_completionBlockQueue
_managerIdentifier
startWithDetailedCompletionBlock:
initWithMachineDataRequest:
syncState
actionData
setActionData:
setActionName:
setProtocolVersion:
setWaitsForPurchaseOperations:
waitsForPurchaseOperations
_actionData
_actionName
_protocolVersion
_waitsForPurchaseOperations
_ss_isiCloudAccount
_ss_isiTunesAccount
_ss_isIDMSAccount
altDSIDForAccount:
DSIDForAccount:
_ss_isAppleAuthenticationAccount
accountType
_ss_isLocalAccount
_ss_secureToken
_ss_setSecureToken:
reportingDictionary
valueForLocationKey:
locationPosition
locationType
_position
_valueForKey:fromDictionary:ofType:
setAccountISO3Country:
setAccountStoreFrontIdentifier:
setCachedTimestamp:
setEntitledSubscriptions:
accountStoreFrontIdentifier
accountISO3Country
cachedTimestamp
entitledSubscriptions
_parseJSONDictionary:
_accountStoreFrontIdentifier
_accountISO3Country
_entitledSubscriptions
_cachedTimestamp
currentText
setCurrentText:
setCurrentVersionIdentifier:
requiresAuthentication
setUserAccepted:
_requiresAuthentication
_userAccepted
_versionID
setAlbumIdentifier:
setArtists:
setAssetData:
setAssetURL:
setAttachmentDescription:
setDeletesAssetWhenFinished:
setPreviewFrameTimestamp:
setUTI:
attachmentType
childAttachmentForRelationship:
enumerateChildAttachmentsUsingBlock:
setChildAttachment:forRelationship:
albumIdentifier
artists
assetData
assetURL
attachmentDescription
previewFrameTimestamp
deletesAssetWhenFinished
_albumIdentifier
_artists
_assetData
_assetURL
_attachmentDescription
_childAttachments
_deletesAssetWhenFinished
_explicitContent
_previewFrameTimestamp
_subtitle
_uti
artwork
categoryNames
displayName
isPOIBased
numberOfUserRatingsForCurrentVersion
offers
productPageURL
userRating
userRatingForCurrentVersion
lookupDictionary
setAcceptedStoreTermsVersion:
setCarrierBundlingStatus:
setCellularOperatorName:
setDiscoveryModeEligible:
initWithTimeIntervalSinceReferenceDate:
setSubscriptionExpirationDate:
setFamilyOrganizer:
setFamilySubscription:
setFreeTrialIneligible:
setHasFamily:
setHasFamilyMembers:
setHasOfflineSlots:
setLatestStoreTermsVersion:
setPhoneNumber:
setSubscriptionPurchaser:
setAccountStatus:
_setSubscribed:
setAccountPermissions:
setRawResponseData:
initWithTimeIntervalSince1970:
compare:options:
accountPermissions
acceptedStoreTermsVersion
cellularOperatorName
isDiscoveryModeEligible
isFamilyOrganizer
isFamilySubscription
isFreeTrialIneligible
hasFamily
hasFamilyMembers
hasOfflineSlots
latestStoreTermsVersion
isSubscriptionPurchaser
isSubscribed
setSubscribed:
setValuesUsingStatusDictionary:
hasOfflineSlot
_accountPermissions
_accountStatus
_acceptedStoreTermsVersion
_carrierBundlingStatus
_cellularOperatorName
_discoveryModeEligible
_familyOrganizer
_familySubscription
_freeTrialIneligible
_hasFamily
_hasFamilyMembers
_hasOfflineSlots
_latestStoreTermsVersion
_rawResponseData
_subscriptionExpirationTime
_subscriptionPurchaser
_hasOfflineSlot
keyEnumerator
parseJSONData:error:
URLWithHeight:width:format:
URLWithHeight:width:cropStyle:format:
getRed:green:blue:alpha:forColorKind:
URLWithHeight:width:
weakToWeakObjectsMapTable
_shouldCollectNetworkLogs
_listenForLowMemoryWarning
sessionsQueue
sessions
invalidateAndCancel
taskDelegatesQueue
taskDelegates
httpArchiveBuffer
_sessionWithDelegate:collectTimingData:
dataTaskWithRequest:
_setDelegate:forTask:
_setRequestData:forSessionTask:
_setSendTimingData:forSessionTask:
eventFromTimingData:task:error:
eventFromTimingData:delegate:task:error:
setClientError:
_timingDataMetricToServerTimeInterval:
setConnectionReused:
setConnectionType:
_DNSServerIPAddresses
setDNSServers:
_fetchNetworkQualityReports
setNetworkQualityReports:
_messageSizeFromTask:isRequest:delegate:
setRequestMessageSize:
setRequestURL:
_resolvedIPAddressFromTask:
setResolvedIPAddress:
setResponseMessageSize:
_tidStateForTask:delegate:
setTIDState:
setEdgeNodeCacheStatus:
setStatusCode:
setOriginalApp:
_bagPerformanceValues
shouldLogTimingMetrics
_shouldRecordResponseBodyForDataTask:
_appendResponseData:forSessionTask:
_delegateForTask:
_timingData
_sendTimingDataForSessionTask:
shouldReportCachedEventWithSamplingPercentage:
shouldReportCachedEvent
_insertEventIntoDatabase:
_removeDelegateForTask:
_requestDataForSessionTask:
_responseDataForSessionTask:
_removeResponseDataForSessionTask:
_removeRecordResponseDataForSessionTask:
_logCacheHitForTask:metrics:
activeURLRequest
sendTimingDataQueue
sendTimingDataMap
shouldCollectTimingDataWithSessionDuration:samplingPercentage:
shouldCollectTimingDataWithSessionDelegate:
_sessionIDWithDelegate:collectTimingData:
_sessionConfigurationWithDelegate:collectTimingData:
sessionWithConfiguration:delegate:delegateQueue:
_PIDFromAuditTokenData:
_shouldSetCookiesForDelegate:
_shouldRequireCelluarForDelegate:
_shouldDisableCellularForDelegate:
_URLCacheIDForDelegate:
defaultSessionConfiguration
set_CTDataConnectionServiceType:
setAllowsCellularAccess:
setHTTPShouldSetCookies:
set_timingDataOptions:
set_sourceApplicationBundleIdentifier:
set_infersDiscretionaryFromOriginatingClient:
set_sourceApplicationAuditTokenData:
_URLCacheForDelegate:
_shouldCreateLocalCache
setURLCache:
isSubclassOfClass:
protocolClasses
setProtocolClasses:
diskCapacity
responseDataQueue
responseData
investigateNetworks
recordResponseQueue
recordResponseMap
requestDataQueue
requestData
_bagValueForKey:
eventQueue
metricsController
setMetricsController:
requestURL
_localTimeIntervalToServerTimeInterval:
eventFromTimingData:task:
eventFromTimingData:requestProperties:task:error:
cache:willEvictObject:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:willCacheResponse:completionHandler:
httpArchiveBufferSize
setHttpArchiveBufferSize:
flushHTTPArchiveBuffer
_saveHTTPArchiveBufferToDiskDecompressed:
customURLProtocols
setCustomURLProtocols:
setEventQueue:
setHttpArchiveBuffer:
setRequestData:
setRequestDataQueue:
setResponseData:
setResponseDataQueue:
setRecordResponseMap:
setRecordResponseQueue:
setSendTimingDataMap:
setSendTimingDataQueue:
setSessions:
setSessionsQueue:
setTaskDelegates:
setTaskDelegatesQueue:
_memoryPressureSource
_memoryPressureStatus
_memoryPressureCachedMaxSize
_customURLProtocols
_eventQueue
_httpArchiveBuffer
_metricsController
_requestData
_requestDataQueue
_responseData
_responseDataQueue
_recordResponseMap
_recordResponseQueue
_sendTimingDataMap
_sendTimingDataQueue
_sessions
_sessionsQueue
_taskDelegates
_taskDelegatesQueue
hasSubscriptionLease
setHasSubscriptionLease:
hasSubscriptionSlot
setHasSubscriptionSlot:
_hasSubscriptionLease
_hasSubscriptionSlot
timeIntervalFromMilliseconds:
millisecondsFromTimeInterval:
_timingMetricsWindowStartTime
_randomDouble
_setTimingMetricsWindowStartTime:
connectionType
DNSServers
resolvedIPAddress
TIDState
clientError
requestMessageSize
responseMessageSize
shouldCollectTimingData
edgeNodeCacheStatus
networkQualityReports
originalApp
actionTextForType:
formattedPrice
offerType
subscriptionType
getAdminStatusWithOptions:resultBlock:
_adminStatusForAccountID:
_statusIsFresh:
isAdmin
initWithAdminStatus:dateUpdated:
_setAdminStatus:forAccountID:
setRefreshPeriod:
dateUpdated
refreshPeriod
getAdminStatusAndWaitWithOptions:resultBlock:
isCurrentUserAdmin
_refreshPeriod
setHasEventType:
eventTypeAsString:
StringAsEventType:
setHasReasonHintType:
reasonHintTypeAsString:
StringAsReasonHintType:
setHasSubscriptionAdamID:
setHasPurchasedAdamID:
setHasRadioAdamID:
setHasItemCloudID:
setHasEquivalencySourceAdamID:
setHasContainerAdamID:
setHasStationID:
setHasCloudPlaylistID:
setHasContainerType:
containerTypeAsString:
StringAsContainerType:
setHasEndReasonType:
endReasonTypeAsString:
StringAsEndReasonType:
setHasEventDateTimestamp:
setHasItemDuration:
setHasItemEndTime:
setHasItemStartTime:
setHasItemType:
itemTypeAsString:
StringAsItemType:
setHasMediaType:
mediaTypeAsString:
StringAsMediaType:
setHasOffline:
setHasPersistentID:
setHasSourceType:
sourceTypeAsString:
StringAsSourceType:
setHasSiriInitiated:
setTvShowPurchasedAdamID:
setHasTvShowPurchasedAdamID:
hasTvShowPurchasedAdamID
setTvShowSubscriptionAdamID:
setHasTvShowSubscriptionAdamID:
hasTvShowSubscriptionAdamID
setHasInternalBuild:
setEventSecondsFromGMT:
setHasEventSecondsFromGMT:
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
_cloudPlaylistID
_containerAdamID
_equivalencySourceAdamID
_eventDateTimestamp
_eventSecondsFromGMT
_itemCloudID
_purchasedAdamID
_radioAdamID
_stationID
_subscriptionAdamID
_tvShowPurchasedAdamID
_tvShowSubscriptionAdamID
_cloudAlbumID
_eventTimeZoneName
_globalPlaylistID
_lyricsID
_playlistVersionHash
_stationHash
_stationStringID
_internalBuild
isSuspended
setSuspended:
operations
reverseObjectEnumerator
addDependency:
blockOperationWithBlock:
addOperationWithBlock:
clearExpiredUpdateHistoryWithCompletionBlock:
getUpdatesWithCompletionBlock:
hideApplicationBadgeForPendingUpdates
reloadFromServerWithCompletionBlock:
removeUpdateBulletins
showApplicationBadgeForPendingUpdates
_calloutQueue
_didMigration
_mobileCoreServices
initWithCertificateURL:leaseType:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:
initWithURLBagDictionary:leaseType:
setBeginLeaseURL:
setGetAssetURL:
setProvisionMachineURL:
setRefreshLeaseURL:
setSyncMachineURL:
setPastisKeyServerURL:
setPastisCertificateURL:
initWithCertificateURL:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:
provisionMachineURL
syncMachineURL
_beginLeaseURL
_getAssetURL
_provisionMachineURL
_refreshLeaseURL
_syncMachineURL
_pastisCertificateURL
_pastisKeyServerURL
setFamilyCircle:
authenticationPromptStyle
setAuthenticationPromptStyle:
fetchITunesAccountNames
setFetchITunesAccountNames:
_authenticationPromptStyle
_fetchITunesAccountNames
familyCircle
_familyCircle
setEnvironmentName:
setRequestType:
mediaKinds
notificationType
putParameters
setMediaKinds:
setNotificationType:
setPutParameters:
_copyParametersDictionary
environmentName
requestType
_environmentName
_parameterDictionary
_requestType
_copyWithClass:zone:
_timeZone
initWithUploadKinds:
initWithOptions:capacity:
_establishInboundConnection
_sendSimpleMessage:completionBlock:
_outboundConnection
_adoptStatusFromUpload:
_handleInboundMessage:connection:
initWithKeyOptions:valueOptions:capacity:
_sendObserversUploadsDidChange
uploadQueue:statusDidChangeForUploads:
_handleAddUploadsMessage:
_handleChangeUploadsMessage:
_handleRemoveUploadsMessage:
uploadQueue:uploadsDidChange:
addUploadObserver:
cancelAllUploadsWithCompletionBlock:
cancelUploads:completionBlock:
getUploadsWithCompletionBlock:
pauseAllUploadsWithCompletionBlock:
pauseUploads:completionBlock:
removeUploadObserver:
resumeAllUploadsWithCompletionBlock:
resumeUploads:completionBlock:
uploadKinds
_daemonLaunchToken
_inboundConnection
_uploadKinds
_uploads
initWithUpdateDictionary:
parentalControlsRank
installDate
setInstallDate:
updateDictionary
updateState
setUpdateState:
_installDate
_updateState
_xpcData
_copyWithClass:
_adamID
enumerateAccountSubscriptionStatusUsingBlock:
generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:returningSubscriptionBagData:error:
generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:certificateData:assetIDData:returningLeaseData:subscriptionBagData:error:
importSubscriptionKeyBagData:returningError:
importSubscriptionKeyBagData:leaseInfoData:returningError:
_hasValidSubscriptionStatusDidChangeNotifyToken
_subscriptionStatusDidChangeNotifyToken
_createDatabaseDirectory
_setupDatabase:
readUsingTransactionBlock:
accountUniqueIdentifierKey
valueForDatabaseProperty:
setValue:forDatabaseProperty:
removeValueForDatabaseProperty:
modifyUsingAppPurchaseHistoryTransactionBlock:
predicateForAccountIdentifier:
predicateForNotHidden
dictionaryWithCapacity:
newDefaultInstance
readAsyncUsingTransactionBlock:
currentAccountUniqueIdentifier
setCurrentAccountUniqueIdentifier:
localRevisionForAccountUniqueIdentifier:
setLocalRevision:forAccountUniqueIdentifier:
resetCacheForNewAccountID:
allProperties:accountID:includingHidden:
_requestBodyData
assetStoreFrontIdentifier
setAssetStoreFrontIdentifier:
_assetStoreFrontIdentifier
initWithLookupURL:unpersonalizedLookupURL:signedHeaders:signedQueryParameters:
initWithBagDictionary:
bagDictionary
lookupURLString
SAPContext
setSAPContext:
signedHeaders
signedQueryParameters
unpersonalizedLookupURLString
_lookupURLString
_sapContext
_signedHeaders
_signedQueryParameters
_unpersonalizedLookupURLString
supportsPlatformPredicate:
predicateForNotFirstParty
predicateForHasMessagesExtension
predicateForIs32BitOnly:
initWithObjects:count:
sortByDatePurchasedKey
allPropertyKeys
initWithPropertyValues:
datePurchased
isHidden
_tableName
initWithRedeemCodeDictionary:
initWithLookupItem:
codeType
allowsAutoSubmission
inputCode
setInputCode:
redeemCodeDictionary
_inputCode
itemsFromDatabase:forAccount:matching:sortedBy:sortAscending:
iconURL
arrayByAddingObjectsFromArray:
allItemsFromDatabase:forAccount:sortedBy:sortAscending:
sortByNameKey
companyName
contentRatingFlags
iconTitle
isFamilyShareable
isHiddenFromSpringBoard
isNewsstand
longTitle
minimumOS
ovalIconURLString
supportsIPad
supportsIPhone
redownloadParams
humanReadableVersion
iTunesVersion
requiredCapabilitiesString
initWithIdentifier:cacheName:
initWithIdentifier:cacheName:database:cacheEntryClass:
clear
removeDataForKey:
cacheEntryForLookupKey:
initWithLookupKey:inDatabase:
setPersistentCache:
maximumInlineBlobSize
setData:forKey:
statistics
clearCacheForLookupKey:
clearRetiredData
setData:expiring:retiring:lookupKey:userInfo:
cacheEntryProperties:forLookupKeys:
setMaximumInlineBlobSize:
_maximumInlineBlobSize
_cacheName
_path
_persistentCache
_cacheEntryClass
initWithClaimStyle:
_changeNotificationSuspensionAccessQueue
_sendChangeNotification
sendChangeNotification
beginSuspendingSubscriptionStatusChangeNotifications
endSuspendingSubscriptionStatusChangeNotifications
removeUserDefaultsForAccountIdentifier:
updateWithResponseDictionary:accountIdentifier:
_fetchPersistentID:inDatabase:
dataForKey:
dataBlob:
safeKeyForKey:
_pathForKey:
writeToFile:atomically:
_isFileNotFound:
nextObject
skipDescendents
initWithContentsOfFile:options:error:
setFilenameSafeKeys:
_safeKeys
setEnabled:withAuthToken:completionBlock:
getCachedBiometricAuthenticationContextWithToken:evict:completionBlock:
getCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:
getStateWithCompletionBlock:
renewPurchaseTokenWithAuthToken:completionBlock:
resetAccount:withCompletionBlock:
resetWithCompletionBlock:
setEnabled:withCompletionBlock:
setAllowed:completionBlock:
getIdentityMapCountWithCompletionBlock:
isIdentityMapValidForAccountIdentifier:completionBlock:
saveIdentityMapForAccountIdentifier:completionBlock:
_clientQueue
newDefaultDatabaseCache
allUncachedImages:
allUncachedImages
clearCacheForAdamID:
setImageData:forAdamID:imageToken:
imageDataForAdamID:
purgeableSpace
purge:
_databaseCache
_purchaseHistoryDatabase
manifestsDirectoryURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
currentManifestFileURL
dataWithContentsOfURL:
setCacheURLsOnManifestAndAssets:error:
cacheRoot
URLByAppendingPathComponent:isDirectory:
assetsDirectoryURL
assetFileName:
fileURLWithPathComponents:
manifestFileName:
manifestFileURL:
validatePath:
assetFileURL:
allCachedManifests
loadCurrentCachedManifest
_installStatusForString:
_installTypeForString:
_stringForInstallStatus:
_stringForInstallType:
hardwareType
installError
installStatus
jobID
setHardwareType:
setInstallError:
setInstallStatus:
setJobID:
initWithURL:resolvingAgainstBaseURL:
_admin
_dateUpdated
supportsTypeIdentifier:
cacheObjectDataRepresentation
cacheObjectTypeIdentifier
_factoryForTypeIdentifier:
cachedObjectWithDataRepresentation:typeIdentifier:
initWithSessionIdentifier:
clearSession
addObject:withItemIdentifier:
removeObjectWithItemIdentifier:
cacheObjectWithItemIdentifier:
addCacheObjectFactory:
removeCacheObjectFactory:
_factories
initWithCacheObjectDataRepresentation:
setPlist:
plist
_plist
initWithPostDescription:
postDescription
_postDescription
initWithPlatformContext:
_makeLookupRequestWithPersonalizationStyle:
processInfo
processName
_callerValue
itemIdentifiers
bundleIdentifiers
imageProfile
_enumerateQueryParametersUsingBlock:
setImageProfile:
setItemIdentifiers:
setBundleIdentifiers:
_setCaller:
_setUserAgent:
_makeLocalJSSignRequest
_makeLocalMescalRequest
_URLBagContext
_additionalHeaderFields
_additionalParameters
_caller
_itemIdentifiers
_bundleIdentifiers
_imageProfile
_keyProfile
initWithItems:caller:version:
startWithAddItemsResponseBlock:
caller
databasePathWithAccountIdentifier:
setResourceValue:forKey:error:
existsForAccountIdentifier:
deleteBackingStore
lastSyncTime
setLastSyncTime:
startWithDialogResponseBlock:
setTextFieldValues:
textFieldValues
_textFieldValues
_cloudID
_migrate7000to7001InDatabase:
_migrate7001to7002InDatabase:
_initWithType:typeVersion:contentToken:
dataWithBytesNoCopy:length:freeWhenDone:
typeVersion
mType
mTypeVersion
mContentToken
simulateCrashWithFormat:
startWithCapabilitiesResponseBlock:
_globalCanaryLock
_dictionaryRepresentationOfBody
removeObjectsForKeys:
appendPropertiesToBody:
globalEventCanary
setGlobalEventCanary:
allTableEntityPropertiesPermittedByConfiguration:
shouldSuppressDSIDHeader
_shouldSuppressUserInfo
_shouldSuppressDSIDHeader
initWithStringRepresentation:valueType:
_defaultValue
_stringRepresentation
_valueType
setOriginalTimeUsingDate:
localTimeZone
secondsFromGMTForDate:
topic
connection
originalTime
setConnection:
setOriginalTime:
baseVersion
eventVersion
setBaseVersion:
hostApplicationIdentifier
previousClientVersion
setClientVersion:
setHostApplicationIdentifier:
setPreviousClientVersion:
canaryIdentifier
setCanaryIdentifier:
addPropertiesWithDictionary:
setShouldSuppressUserInfo:
_mutableBody
pageContext
pageDescription
pageID
pageType
pageURL
pixelRatio
screenHeight
screenWidth
setPageContext:
setPageDescription:
setPageID:
setPageType:
setPixelRatio:
setScreenHeight:
setScreenWidth:
setWindowHeight:
setWindowOrientation:
setWindowWidth:
windowHeight
windowOrientation
windowWidth
appBundleId
setAppBundleId:
action
setAction:
_appBundleId
_action
initWithURLBag:SAPVersion:
_initSSVFairPlaySAPSession
initWithURLBagDictionary:SAPVersion:
_establishContext
_primeTheConnection
_signData:error:
_shouldRetrySAPOperationForError:
_verifySignature:forData:error:
signData:completionBlock:
verifySignature:forData:completionBlock:
_loadCertificateData
_postExchangeData:
uppercaseString
URLByAppendingQueryParameter:value:
_verifyPrimeResponse:
_initWithURLBagInterpreter:SAPVersion:
establishSessionWithCompletionBlock:
primeSessionWithCompletionBlock:
SAPVersion
primed
_primed
setPageHistoryDescription:
serverApplicationInstance
isUbered
navigationType
pageHistoryDescription
pageRenderTime
referringAppName
referringURL
requestEndTime
serverTiming
setNavigationType:
setPageHistoryDescriptionWithIdentifiers:
setPageRenderTime:
setRequestEndTime:
setUbered:
_initStoreDownloadQueueResponse
initWithDictionary:userIdentifier:preferredAssetFlavor:
_errorWithFailureType:customerMessage:
initWithDictionary:userIdentifier:
initWithError:userIdentifier:
errorForItemIdentifier:
keybag
rangesToLoad
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
shouldCancelPurchaseBatch
triggeredQueueCheck
setStoreCorrelationID:
_itemErrors
_keybag
_rangesToLoad
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_storeCorrelationID
_eventsTableName
_migrateToVersion1
_migrateToVersion2
_migrateToVersion3
_maximumUnreportedToSelect
_collectUnreportedPIDsFromDatabase:matchingReportURLString:since:suppressUserInfo:
unreportedEventsForURL:since:suppressDSID:
deleteEventsInsertedBefore:
deleteReportedEvents
insertEventSummaries:error:
markEventsAsReported:
unreportedEventsForURL:since:suppressUserInfo:
unreportedEventURLsSince:
_displayCriteria
initWithBulletinMetricsDictionary:
clientExplicitEnabled
clientNotificationsEnabled
setExplicitEnabled:
setNotificationsEnabled:
explicitEnabled
notificationsEnabled
_explicitEnabled
_notificationsEnabled
reportingCanaryIdentifier
reportingJSON
_reportingDictionary
initWithRequestStyle:
JSONBodyData
propertyListBodyData
setValue:forBodyParameter:
applications
setApplications:
requestStyle
_applications
_backgroundRequest
_style
_shouldCallImmediately
setMetricsConfiguration:
isEnabled
setSerialQueue:
_metricsConfiguration
setEnabled:
_enabled
initWithReportingURL:insertTimestamp:eventController:
initWithReportingURL:insertTimestamp:suppressUserInfo:eventController:
_unreportedEvents
writeEventsToStream:uncompressedMaxSize:
sessionCanaryIdentifier
_estimateSizeOfJsonObject:
dataWithBytesNoCopy:length:
lengthOfBytesUsingEncoding:
initWithReportingURL:insertTimestamp:suppressDSID:eventController:
anyUnreportedEvents
markEventsAsReported
writeEventsToStream:
_writeString:toData:
_insertTimestamp
_reportingURL
_unreportedEventPIDs
_eventController
_sessionCanaryIdentifier
_suppressUserInfo
initToFileAtPath:append:
initToMemory
_consumeStreamOutput:
_setStreamError:context:
streamStatus
streamError
hasSpaceAvailable
propertyForKey:
setProperty:forKey:
numberWithUnsignedInt:
streamContentLength
_actualOutputStream
_stream
_streamError
_streamOutBuffer
_streamOutBufferSize
_streamContentLength
_transactionType
initWithPurchase:
purchaseResponse
_downloadMetadata
_purchaseResponse
source
setQueue:
setSource:
_queue
_source
itemState
setItemState:
representativeTitle
setRepresentativeTitle:
statusString
setStatusString:
totalNumberOfItems
setTotalNumberOfItems:
transferTypes
setTransferTypes:
_itemState
_representativeTitle
_statusString
_totalNumberOfItems
_transferTypes
_copyItemsWithReply:error:
downloadMonitor:didReloadWithItems:
getMonitorItemsWithCompletionBlock:
pauseMonitorItem:completionBlock:
prioritizeMonitorItem:completionBlock:
resumeMonitorItem:completionBlock:
_reloadForChangeNotification
properties
_preferredAssetFlavor
_migrateToVersion4
_migrateToVersion5
_migrateToVersion6
_migrateToVersion7
setAccountEventType:
accountEventType
setAccountEventTypeWithEventIdentifier:
getSubscriptionEntitlementsIgnoreCaches:entitlementsBlock:
_cachedSubscriptionEntitlements
_loadSubscriptionEntitlementsIgnoreCaches:error:
_setCachedSubscriptionEntitlements:
getSubscriptionEntitlements:
_cachedEntitlements
_logLevelFromString:
_stringFromLogLevel:
logLevel
logSubsystem
initWithBundledManifestURL:clientIdentifier:
newestCachedManifest
_bundledManifestVersion
_bundledManifest
URLByDeletingLastPathComponent
synchronize
initWithBundledManifestURL:
currentManifest
clearCache:
refreshCachedManifest:
bundledManifestURL
manifestURL
setManifestURL:
_currentManifest
_cacheManager
_manifestURL
_bundledManifestURL
addFieldsFromPurchaseResponse:
setPowerAssertionIdentifier:
setRequestIdentifier:
initWithLength:
mutableBytes
setLength:
resolveBagURLForKey:bagContext:error:
_loadDownloadsFromStart:toEnd:url:
removeObjectsInRange:
unionOrderedSet:
requestIdentifier
_newURLOperationWithStartIdentifier:endIdentifier:url:
_handleResponse:
addGUIDToBody:
addKeybagSyncToBody:
newLoadAutomaticDownloadQueueOperation
featureEnabledForBagKey:bagContext:error:
gzipData:
importKeybagSync:
setDownloadsMetadata:
powerAssertionIdentifier
_requestIdentifier
_mdSyncState
_powerAssertionIdentifier
targetType
targetIdentifier
positionX
positionY
impressions
actionDetails
locationDescription
setActionDetails:
setImpressions:
setLocationDescription:
setLocationWithEventLocations:
setPositionX:
setPositionY:
setTargetIdentifier:
setTargetType:
setTargetURL:
targetURL
_dialogEventForPasswordAuthorizationWithDialogId:buyParams:topicName:userAgent:
_dialogEventForBiometricAuthorizationWithDialogId:buyParams:matchState:topicName:userAgent:
_dialogEventForBiometricOptInWithResult:message:topicName:userAgent:error:
_dialogEventForPaymentSheetPresentationErrorWithBuyParams:error:
_clientIdForMetrics
_mtTopicForBuyParams:
_clientIdForUserId:
authorizationDialogEventForParameters:
userActionDictionaryForBiometricMatchState:didBiometricsLockout:
userActionDictionaryForUserAction:didBiometricsLockout:
countOfBytesExpectedToSend
countOfBytesSent
state
setCountOfBytesExpectedToSend:
setCountOfBytesSent:
setPersistentIdentifier:
setState:
_uploadKind
_setUploadKind:
_countOfBytesExpectedToSend
_countOfBytesSent
_state
_thumbnailImageURL
setEnterType:
enterType
setEnterTypeWithLaunchReason:
setExitType:
exitType
exitURL
setExitTypeWithSuspendReason:
setExitURL:
__app_convertOptions:
initWithOptions:
__app_downloadsForJobs:
__app_sendDownloadsChanged:filterSoftware:
__app_cancelDownloads:completionBlock:
__app_dispatchBlock:withError:
__app_filterDownloads:withResult:
__app_finishDownloads:
__app_resumeDownloads:completionBlock:
__app_insertDownloads:before:after:completionBlock:
__app_getAllDownloads
__app_pauseDownloads:completionBlock:
__app_extractJobIDsFromSoftwareDownloads:
cancelJobsWithIDs:completionBlock:
initWithJob:
finishJobs:
getJobsUsingBlock:
__app_newManifestWithType:
__app_newActivityWithDownload:
setExternalOrderKey:
addActivity:withIdentifier:
__app_installManifest:completionBlock:
initWithManifest:
setAssetType:
setBytesTotal:
setExpectedDiskspace:
setHashArrayData:
setHashType:
setNumberOfBytesToHash:
setDPInfo:
setInitialODRSize:
setIsLocallyCacheable:
setIsExternal:
setIsZipStreamable:
__app_setPropertiesForActivity:withDownload:
__app_newAssetWithDownloadAsset:assetType:
pauseJobsWithIDs:completionBlock:
resumeJobsWithIDs:completionBlock:
setArtistID:
setBuyParams:
setCancelIfDuplicate:
setClientID:
setGenreID:
setIsAutomatic:
setIsUpdate:
setIsDeviceBasedVPP:
setIsInQueue:
setIsPurchasedRedownload:
setIsRestore:
setItemID:
setStoreAccountName:
setStoreDownloadKey:
setStoreTransactionID:
setSoftwareIconNeedsShine:
setThumbnailURL:
setStorefront:
setSoftwareVersionExternalIdentifier:
setStoreCohort:
setVariantID:
jobManager:changedJobs:
jobManager:completedJobs:
jobManager:updatedProgressOfJobs:
jobManager:updatedStateOfJobs:
_jobManager
head
next
listIdentifier
setTail:
setHead:
setPrevious:
setNext:
setListIdentifier:
appendNode:
previous
appendObject:
_head
_tail
_listIdentifier
setObject:
_previous
_next
impressionIdentifiers
setImpressionIdentifiers:
mediaEventType
mediaURL
setMediaEventType:
setMediaURL:
_removeDatabaseReturningError:
contentsOfDirectoryAtPath:error:
_valueForDatabasePropertyKey:
_setValue:forDatabasePropertyKey:
_eventsDatabaseTableName
_getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
_revisionsIndexSetUsingPersisentIDGenerationBlock:count:
_propertiesDatabaseTableName
enumerateRangesUsingBlock:
containsIndex:
leaseInfoData
subscriptionKeyBagData
com.apple.StoreServices.SSKeychain.%p
v8@?0
v16@?0@"NSObject<OS_xpc_object>"8
actionType
actionURL
details
dialogId
dialogType
message
result
targetId
userActions
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSString",C,N
T@"NSDictionary",C,N
T@"NSArray",C,N
authenticate
biometricsAnalyze
cancel
enterPassword
navigate
open
BiometricId
EnableTouchIdPurchases
ExistingOrCreate
Password
PaymentSheet
UserNamePassword
error
invalidCredentials
paymentSheetFailedToLoad
paymentSheetTimeout
failure
success
unknown
Biometric
Cancel
CreateNewAppleId
EnterPassword
IForgot
NotNow
Open
UseExistingAppleId
OkCancel
SignIn
com.apple.storeservices.applicationutils
[%@] Restart Application returned error code: %d
{public}
[%@] Restart Application succeeded
LWHQ
hdmv
SDMV
480p
720p
1080p
downloadKey
flavor
sinfs
%@ [Flavor: %@, URL: %@]
assetDictionary
T@"NSDictionary",R,C,N,V_assetDictionary
T@"NSString",R,N
URLString
T@"NSArray",R,N
com.apple.StoreServices.SSVFamilyContentDeletionNotification
UserInfo
pairs
B24@?0Q8@"NSObject<OS_xpc_object>"16
deletedAccounts
T@"NSArray",R,N,V_deletedAccounts
downloaderAccountIdentifier
TQ,R,N,V_downloaderAccountIdentifier
familyIdentifier
TQ,R,N,V_familyIdentifier
purchaserAccountIdentifier
TQ,R,N,V_purchaserAccountIdentifier
SSNotificationTriggerDownloads
A download queue must have download kinds
v16@?0@"NSError"8
%@: Send queue changed with %lu removals
placeholderDownloads
preorders
downloadKinds
T@"NSSet",R
downloadManager
T@"SSDownloadManager",R
downloads
shouldAutomaticallyFinishDownloads
TB,N,V_autoFinishDownloads
usingNetwork
TB,R,GisUsingNetwork
artist
brand
iTunesBrand
user
accountIdentifier
T@"NSNumber",C,N,V_accountIdentifier
attachments
T@"NSArray",C,N,V_attachments
attributed
TB,N,GisAttributed,V_attributed
authorIdentifier
T@"NSString",C,N,V_authorIdentifier
authorType
T@"NSString",C,N,V_authorType
contentItems
T@"NSArray",C,N,V_contentItems
externalServiceDestinations
T@"NSArray",C,N,V_externalServiceDestinations
sourceApplicationIdentifier
T@"NSString",C,N,V_sourceApplicationIdentifier
text
T@"NSString",C,N,V_text
SSDownloadThumbnailAvailableNotification
artwork
delta-package
media
newsstand-artwork
asset-pack-manifest
transit-maps-data
xmlfeed
book
bg-download
bg-upload
coached-audio
ebook
feature-movie
song
music-video
ringtone
software
tv-episode
tone
document
storekit-content
newsstand
nsurlsession
other
podcast
videoPodcast
vpn-plugin
os-update
itunes-u
v32@?0@"NSString"8@"NSMutableArray"16^B24
_localAssets
T@"NSDictionary",R
_XPCConnection
T@"SSXPCConnection",R,G_XPCConnection
external
TB,R,N,GisExternal
downloadIdentifier
T@,R,N
assets
T@"NSArray",&,N
metadata
T@"SSDownloadMetadata",C,N
status
T@"SSDownloadStatus",&,N
persistentIdentifier
Tq,R
cancelable
TB,R,GisCancelable
downloadPolicy
T@"SSDownloadPolicy",C
downloadSizeLimit
com.apple.iBooks
com.apple.AppStore
com.apple.MobileStore
SSDownloadErrorKeyJADownloadQueueToken
SSDownloadErrorKeyRetryInterval
SSDownloadPhaseCanceled
SSDownloadPhaseDataRestore
SSDownloadPhaseDownloading
SSDownloadPhaseFailed
SSDownloadPhaseFinished
SSDownloadPhaseInstalling
SSDownloadPhasePaused
SSDownloadPhasePreflight
SSDownloadPhaseProcessing
SSDownloadPhaseUploading
SSDownloadPhaseWaiting
Must specify target app or content kind
action
lookup
search
term
library-link
kind
itms-appss
itms-bookss
itmss
categoryName
T@"NSString",C,N,V_categoryName
itemIdentifier
T@"NSNumber",C,N,V_itemIdentifier
itemTitle
T@"NSString",C,N,V_itemTitle
providerName
T@"NSString",C,N,V_providerName
searchTerm
T@"NSString",C,N,V_searchTerm
contentKind
Tq,N,V_contentKind
targetApplication
Tq,N,V_targetApplication
T@"NSURL",R,N
com.apple.iTunesStore.downloadInfo
accountInfo
artworkAssetFilename
etags
mediaAssetFilename
preferredAssetFlavor
purchaseDate
referrerApp
referrerURL
requestPersistentID
ringtone-guid
trackPersistentID
xmlAssetFilename
app-receipt
artwork-template-name
asset-info
file-size
betaExternalVersionIdentifier
bundleVersion
cancelIfDuplicate
deltaPackages
fileExtension
chunks
chunkSize
hashes
has-4k
has-dolby-vision
has-hdr
human-friendly-publication-version
iad-attribution
iad-conversion-date
iad-impression-date
initialODRSize
is-hls
is-in-queue
is-matched-redownload
is-premium
is-purchased-redownload
isStreamable
languages
network-constraints
PageProgression
priorVersionExternalIdentifier
publication-version
rating
rental-id
show-composer
work
requires-plugged-in
softwareVersionExternalIdentifier
software-type
storeCohort
thinned-app
transitGeoFileURL
uncompressedSize
variantId
movpkg
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSDownloadMetadata.m
<Unknown File>
Only keyed coding is supported
dict
prerender
playlist
duration
genre
rental
small-image
title
identifier
preorder-id
subtitle
%lld
softwareIconNeedsShine
softwareVersionBundleId
bundle-id
cloud-id
sagaId
playlistArtistName
composerName
document-target-app
download-permalink
enableExtensions
episode-number
episode-sort-id
artworkURL
artwork-urls
genreName
genre-name
hasMessagesExtension
hls-playlist-url
is32BitOnly
compilation
isDeviceBased
explicit
high-definition
isRental
isSample
isSharedResource
isTvTemplateApp
songId
launch-extras-url
launchProhibited
messagesIconUrl
network-name
episode-guid
podcast-feed-url
podcast-type
year
season-number
show-name
longSeasonDescription
is-apple-music-show
sort-artist
sort-album
sort-name
thumbnail-newsstand-binding-edge
thumbnail-newsstand-binding-type
thumbnail-url
unmodified-title
download-id
videoDetails
softwareIcon57x57URL
icon-url
itemName
movement
movement-number
movement-count
cancel-download-url
copyright
DownloaderID
is-auto-download
is-redownload
appleId
page-progression-direction
pageProgressionDirection
buy-params-256
buyParams
action-params
redownload-params
UIRequiredDeviceCapabilities
auto-download
lrpluspub
lrpub
pluspub
yyyy-MM-dd'T'HH:mm:ss'Z'
primaryAssetDictionary
keyStyle
appReceiptData
T@"NSData",R,&
automaticDownload
TB,GisAutomaticDownload
cancelDownloadURL
T@"NSURL",&
T@"NSString",&
deviceBasedVPP
TB,GisDeviceBasedVPP
dictionary
T@"NSDictionary",&
T@"NSNumber",R
epubRightsData
T@"NSData",&
hlsPlaylistURL
T@"NSURL",C
TB,R,GhasHDR
TB,R,GisHLS
tvTemplate
TB,GisTvTemplate
launchExtrasUrl
MD5HashStrings
T@"NSArray",R
numberOfBytesToHash
T@"NSString",C
preOrderIdentifier
premium
TB,R,GisPremium
primaryAssetURL
transitMapDataURL
redownloadActionParameters
redownloadDownload
TB,GisRedownloadDownload
releaseDateString
rentalID
T@"NSNumber",C
requiredDeviceCapabilities
T@,C
contentRestricted
TB,R,GisContentRestricted
shouldDownloadAutomatically
sortArtistName
sortCollectionName
sortTitle
T@"NSArray",&
softwareKind
TB,R,GisSoftwareKind
videosKind
TB,R,GisVideosKind
artistIdentifier
artistName
fullSizeImageURL
genreIdentifier
longDescription
releaseDate
T@"NSDate",&
releaseYear
T@"NSNumber",&
shortDescription
transactionIdentifier
thumbnailImageCollection
T@"SSItemImageCollection",R
thumbnailNewsstandBindingEdge
thumbnailNewsstandBindingType
thumbnailImageURL
artistId
composerId
discCount
discNumber
genreId
itemId
playlistId
playlistName
trackCount
trackNumber
artist-id
artist-name
composer-id
disc-count
disc-number
genre-id
item-id
long-description
collection-id
collection-name
release-date
track-count
track-number
<%@: %p
; supportsMusicCatalogPlayback = YES
; supportsAddToCloudMusicLibrary = YES
; canSubscribeToMusicCatalog = YES
; subscriptionStatus = <%@: %p>
; subscriptionStatus = %@
v16@?0@"NSMutableString"8
subscriptionStatus
T@"SSVSubscriptionStatus",C,N,V_subscriptionStatus
supportsMusicCatalogPlayback
TB,N,V_supportsMusicCatalogPlayback
supportsAddToCloudMusicLibrary
TB,N,V_supportsAddToCloudMusicLibrary
canSubscribeToMusicCatalog
TB,N,V_canSubscribeToMusicCatalog
SSVSubscriptionStatusDidChangeNotification
SSVSubscriptionStatusOptionAllowsExpiredStatuses
SSVSubscriptionStatusOptionAuthenticatesIfNecessary
SSVSubscriptionStatusOptionIgnoreCache
SSVSubscriptionStatusOptionLocalizedAuthenticationReason
reason
com.apple.StoreServices.SSVSubscriptionStatusCoordinator.callback
com.apple.StoreServices.SSVSubscriptionStatusCoordinator
v12@?0i8
FuseSubscriptionStatus
v28@?0@"SSVSubscriptionStatus"8B16@"NSError"20
FuseSubscriptionStatusDate
lastKnownStatus
T@"SSVSubscriptionStatus",R,C
queueType
Tq,R,N,V_queueType
SSVSecureKeyDeliveryErrorDomain
SSVSecureKeyDeliveryErrorUserInfoKeyResponseStatus
SSVSecureKeyDeliveryErrorUserInfoKeyResponseVersion
SSVSecureKeyDeliveryErrorUserInfoKeyServerError
SSVSecureKeyDeliveryErrorUserInfoKeyDialogDictionary
fairplay-streaming-request
streaming-keys
version
fairplay-streaming-response
dialog
expiration-time
failureType
guid
lease-action
offline
playback-start-time
renew-after
skipped-rental-checkout
renew
start
stop
com.apple.StoreServices.SSVSecureKeyDeliveryRequestOperation.accessQueue
v24@?0@"NSData"8@"NSError"16
AVAssetResourceLoadingRequestStreamingContentKeyRequestRequiresPersistentKey
POST
application/json
Content-Type
[%{public}@] Server response returned invalid dictionary object (class is %@)
v24@?0@"NSDictionary"8@"NSError"16
[%{public}@] Server response returned invalid version object (class is %@)
[%{public}@] Server response returned invalid version %lli, current version: %lli
[%{public}@] Server response returned invalid root dictionary (class is %@)
[%{public}@] Unable to create CKC due to streaming request operation error: %@
[%{public}@] Unable to create persistent CKC due to error: %@
AVStreamingKeyDeliveryPersistentContentKeyType
[%{public}@] Unable to create key server request because JSON serialization returned no data without an error.
[%{public}@] Unable to create key server request because JSON serialization returned an error: %@
[%{public}@] Unable to create key server request because creating the SPC failed with error: %@
[%{public}@] Certificate data operation returned no data.
[%{public}@] Certificate data operation failed with error: %@
[%{public}@] Key server returned a streaming key 'dictionary' of the wrong class (class is %@)
[%{public}@] Key server returned an invalid streaming key ID (class is %@)
[%{public}@] Found the streaming key dictionary for ID: %lli
[%{public}@] Streaming key response for ID %lli has a CKC response string that did not successfully decode into data.
[%{public}@] Streaming key response for ID %lli has an invalid CKC response class (class is %@)
[%{public}@] Streaming key response for ID %lli has an invalid status: %lli or failure type: %{public}@. Dialog dictionary is: %{public}@
persistentContentKeyContext
T@"NSData",R,C,N,V_persistentContentKeyContext
leaseAction
Tq,N,V_leaseAction
TB,V_offline
expirationTime
Td,R,N,V_expirationTime
playbackStartTime
Td,R,N,V_playbackStartTime
serverPlaybackContextDataDelegate
T@"<SSVSecureKeyDeliveryRequestOperationDelegate>",W,N,V_serverPlaybackContextDataDelegate
serverPlaybackContextData
T@"NSData",&,N,V_serverPlaybackContextData
certificateURL
T@"NSURL",&,V_certificateURL
keyServerURL
T@"NSURL",&,V_keyServerURL
resourceLoadingRequest
T@"AVAssetResourceLoadingRequest",&,V_resourceLoadingRequest
rentalId
T@"NSNumber",C,V_rentalId
skippedRentalCheckout
TB,V_skippedRentalCheckout
ITunesStoreRequest
TB,GisITunesStoreRequest
shouldIncludeGUID
TB,N
responseBlock
T@?,C,V_responseBlock
SSVMediaContentTasteItemUpdateItem
SSVMediaContentTasteItemUpdateUpdateDate
supportsSecureCoding
TB,R
item
T@"SSVMediaContentTasteItem",C,N,V_item
updateDate
T@"NSDate",C,N,V_updateDate
com.apple.itunesstored
AutoUpdatesEnabled
InAppReviewEnabled
AutoPlayVideoSetting
UserSetAutoPlayVideoSetting
ReduceMotionSetLastAutoPlayVideoValue
LastReduceMotionValue
LowPowerModeSetLastAutoPlayVideoValue
LastLowPowerModeValue
SSErrorDomain
SSErrorAllowBioAuthenticationKey
SSErrorAllowRetryKey
SSErrorAskPermissionRequestIdentifier
SSErrorBiometricStatusCodeKey
SSErrorHTTPStatusCodeKey
SSErrorKeychainStatusCodeKey
SSErrorMinimumNetworkTypeKey
SSErrorNetworkSizeLimitBytesKey
SSErrorNetworkSizeLimitKey
SSErrorInstallErrorNameKey
SSServerErrorDomain
DEFAULT_ERROR_TITLE
NOT_ENOUGH_SPACE_TITLE
NOT_ENOUGH_SPACE_SINGULAR
NOT_ENOUGH_SPACE_PLURAL
NOT_ENOUGH_SPACE_SETTINGS
prefs:root=General&path=USAGE
NOT_ENOUGH_SPACE_SPECIFIC_%@
external-prod
prod
sandbox
wifi_only
Library
Preferences
plist
T@"NSError",&,N,V_error
TB,N,GisContentRestricted,V_contentRestricted
failed
TB,N,GisFailed,V_failed
pausable
TB,N,GisPausable
paused
TB,N,GisPaused,V_paused
failedTransient
TB,R,N,GisFailedTransient
activePhase
T@"SSDownloadPhase",R,N,V_activePhase
percentComplete
Tf,R,N
operationProgress
T@"SSOperationProgress",R
phaseType
progressValue
totalProgressValue
progressUnits
estimatedSecondsRemaining
Td,R
progressChangeRate
Tf,R
v24@?0@"SSVSubscriptionResponse"8@"NSError"16
requestingOfflineSlot
TB,N,GisRequestingOfflineSlot,V_requestingOfflineSlot
authenticationContext
T@"SSAuthenticationContext",C,N,V_authenticationContext
fileSize
downloadFileName
T@"NSString",R
downloadPath
finalizedPath
TB,R,GisExternal
URLRequestProperties
T@"SSURLRequestProperties",R
URLRequest
T@"NSURLRequest",R,&
Media
Downloads
Books
Purchases
Podcasts
Updates
audiobook
epub
image
movie
movierental
music
musicvideo
tvepisode
vpnplugin
feed
B16@?0@"NSURLQueryItem"8
com.apple.StoreServices.SSOperationProgress
%@: %lld / %lld @ %.3f (%.2f seconds)
canPause
operationType
changeRate
currentValue
estimatedTimeRemaining
maxValue
units
normalizedCurrentValue
normalizedMaxValue
com.apple.itunesstored.application_installed
com.apple.itunesstored.autodownloadschanged
com.apple.itunesstored.autodownloaddefaultschange
com.apple.itunesstored.downloadmonitorchanged
com.apple.itunesstored.invalidatebags
com.apple.itunesstored.networktypeoverridechange
com.apple.iTunesStore.daemon.launched
com.apple.itunesstored.accountschanged
com.apple.itunesstored.aps.received
com.apple.StoreServices.StorefrontChanged
com.apple.itunesstored.triggerdownloads
com.apple.itunesstored.updatequeuechanged
com.apple.itunesstored.updatesstorechanged
com.apple.itunesstored.downloadfinished
com.apple.itunesstored.ssvsubscriptionstatuscoordinator.changed
com.apple.StoreServices.SubscriptionEntitlementsChanged
com.apple.itunesstored.assetsupdated
%@ [%d]: %@
yyyy-MM-dd HH:mm:ss.SSS
logDirectoryPath
T@"NSString",C,N,V_directoryPath
logFileBaseName
T@"NSString",C,N,V_fileName
maxLogFileSize
TQ,N,V_maxSizeInBytes
maxNumberOfLogFiles
Tq,N,V_maxNumberOfLogFiles
com.apple.itunesstored.defaultschange
ISAlwaysSendGuid
DebugFileLevel
DebugLevel
LogAppInstallMetrics
LogIncomingHeaders
LogNetworkTimingMetrics
LogOutgoingHeaders
LogXML
DisableNetworkLogging
IncludeFullResponseBodiesInNetworkLogs
AllowDuplicateAccounts
ISAppReceiptRevocationEnabled
ISIgnoreExtendedValidation
ISScoreDevice
ISCacheBuster
ISTrackPerformance
UseAccountsFramework
ISUseApplePayIntegration
UseFileBasedPaymentSheetProxy
UseSSBag
UseAppstored2
UseAppstoredUpdates2
SSVPlaybackResponseErrorUserInfoKeyDialogDictionary
v24@?0@"SSVPlaybackItem"8^B16
songList
v32@?0@"NSDictionary"8Q16^B24
fallbackStreamingKeyServerURL
T@"NSURL",C,N,V_fallbackStreamingKeyServerURL
fallbackStreamingKeyCertificateURL
T@"NSURL",C,N,V_fallbackStreamingKeyCertificateURL
responseDictionary
T@"NSDictionary",R,C,N,V_responseDictionary
URLResponse
T@"NSHTTPURLResponse",R,N,V_urlResponse
items
SSVFairPlayErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSDownloadManifestRequest.m
Must provide a URL request
v24@?0@"SSDownloadManifestResponse"8@"NSError"16
manifestFormat
delegate
T@"<SSDownloadManifestRequestDelegate>",D,N
T@"NSURLRequest",R
shouldHideUserPrompts
metrics-page-event-body-dictionary
com.apple.StoreServices.SSVURLCache.accessQueue
sessionIdentifier
T@"NSString",C,N,V_sessionIdentifier
supportsProcessSharing
TB,N,V_supportsProcessSharing
ssv_isExpiredResponse
TB,R,N
_SSVURLCPEB
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSDownloadManifestResponse.m
valid
validDownloads
T@"NSArray",C
com.apple.StoreServices.%@.%p
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
Request already started
%@: Not running in UIApplication, skipping background task
%@: Beginning background task
%@: Closing background task early
%@: Background task expired
shouldCancelAfterTaskExpiration
T@"<SSRequestDelegate>",W,N,V_delegate
usesTaskCompletionAssertions
com.apple.StoreServices.SSUniqueExecutionQueue.callBlockQueue
com.apple.StoreServices.SSUniqueExecutionQueue.executeBlockQueue
com.apple.StoreServices.SSUniqueExecutionQueue.promiseAccessQueue
SSUniqueExecutionQueue: self is out-of-scope.
v24@?0@8@"NSError"16
SSUniqueExecutionQueue: The promise already finished. Calling the completion block directly.
block
T@?,C,N,V_block
callBlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callBlockQueue
executeBlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executeBlockQueue
promise
T@"SSPromise",&,N,V_promise
promiseAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_promiseAccessQueue
appAdamId
T@"NSNumber",C,N,V_appAdamId
appVersion
T@"NSNumber",C,N,V_appVersion
chargeCountryCode
T@"NSString",C,N,V_chargeCountryCode
chargeCurrencyCode
T@"NSString",C,N,V_chargeCurrencyCode
chargeStoreFrontIdentifier
T@"NSNumber",C,N,V_chargeStoreFrontIdentifier
expireDate
T@"NSDate",C,N,V_expireDate
familyId
T@"NSNumber",C,N,V_familyId
inAppAdamId
T@"NSNumber",C,N,V_inAppAdamId
inAppVersion
T@"NSString",C,N,V_inAppVersion
newsAppPurchase
TB,N,GisNewsAppPurchase,V_newsAppPurchase
offerIdentifier
T@"NSString",C,N,V_offerIdentifier
originalPurchaseDownloadId
T@"NSNumber",C,N,V_originalPurchaseDownloadId
purchasabilityType
T@"NSNumber",C,N,V_purchasabilityType
purchaseDownloadId
T@"NSNumber",C,N,V_purchaseDownloadId
quantity
T@"NSNumber",C,N,V_quantity
vendorIdentifier
T@"NSString",C,N,V_vendorIdentifier
SSVMediaContentTasteControllerItemsDidChangeNotification
com.apple.itunesstored.mediaContentTasteControllerItemsDidChangeNotification
com.apple.StoreServices.SSVMediaContentTasteController.accessSerialQueue
com.apple.StoreServices.SSVMediaContentTasteController.calloutSerialQueue
[%@] Received items did change notification with revision ID: %llu, current revisionID: %llu
[%@] Defering refresh due to in-progress request count: %lli
v24@?0@"SSVMediaContentTasteUpdateResponse"8@"NSError"16
v32@?0@"SSVMediaContentTasteItemUpdate"8Q16^B24
%@ %@
buildVersion
deviceGUID
deviceName
timeZoneName
systemReleaseType
SBEnabled
storeAccountID
storeFrontID
privateListeningEnabled
hasBuildVersion
T@"NSString",&,N,V_buildVersion
hasDeviceGUID
T@"NSString",&,N,V_deviceGUID
hasDeviceName
T@"NSString",&,N,V_deviceName
hasTimeZoneName
T@"NSString",&,N,V_timeZoneName
hasSystemReleaseType
Ti,N,V_systemReleaseType
hasSBEnabled
sBEnabled
TB,N,V_sBEnabled
hasStoreAccountID
TQ,N,V_storeAccountID
hasStoreFrontID
T@"NSString",&,N,V_storeFrontID
hasPrivateListeningEnabled
TB,N,V_privateListeningEnabled
UNKNOWN
CUSTOMER
CARRIER
DEVELOPER
INTERNAL
(unknown: %i)
kSSPurchaseRequestFinishedNotification
SSPurchaseErrorKeyShouldCancelPurchaseBatch
v20@?0B8@"NSError"12
createsDownloads
TB,N,V_createsDownloads
createsJobs
TB,N,V_createsJobs
playbackRequest
TB,N,GisPlaybackRequest,V_playbackRequest
shouldValidatePurchases
TB,N,V_shouldValidatePurchases
T@"<SSPurchaseRequestDelegate>",D,N
purchases
backgroundRequest
TB,N,GisBackgroundRequest,V_isBackgroundRequest
needsAuthentication
TB,N,V_needsAuthentication
amd-domains
sign-sap-setup-cert
sign-sap-setup
primeUrl
signed-actions
sign-sap-request
sign-sap-response
storefront-header-suffix
musicCommon
musicConnect
musicSubscription
fps-cert
fps-request
musicMescal
actions
[%@] Failed to get bag value for key: %@. Error: %@
AMDDomains
T@"NSArray",R,C,N
mescalCertificateURL
T@"NSURL",R,C,N
mescalSetupURL
mescalPrimingURL
T@"NSURL",R,C,N,V_mescalPrimingURL
mescalSignedActions
T@"NSDictionary",R,C,N
mescalSignedRequests
mescalSignedResponses
pastisCertificateURL
pastisKeyServerURL
storeFrontSuffix
T@"NSString",R,C,N
v32@?0@"NSString"8@"NSDictionary"16^B24
SSVNetworkingDidStartNotification
SSVNetworkingDidStopNotification
com.apple.StoreServices.SSVLoadURLOperation
v32@?0@"NSString"8@"NSString"16^B24
AppleLanguages
%{public}@: Setting the active account's storefront after running %{public}@. activeAccount = %{public}@ | storefrontID = %{public}@
X-Apple-Application-Instance
Apple-Timing-App
AKAppleIDSession
%@: URL bag was needed, but none was provided
Accept-Language
User-Agent
ISNetworkObserver
newCustomer
true
buster
; %@
metricsLoadURLSessionDuration
T@"NSNumber",R,N
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
T@"SSBag",R,N
isURLBagRequest
rawResponseData
T@"NSData",R,N
requestProperties
T@"SSURLRequestProperties",R,N
shouldDisableCellular
shouldRequireCellular
shouldSetCookies
sourceAppAuditTokenData
sourceAppBundleID
URLCache
T@"NSURLCache",R,N
URLCacheID
machineDataStyle
SAPSession
T@"SSVFairPlaySAPSession",&
SAPSignaturePolicy
T@"SSVSAPSignaturePolicy",C
T@"<SSVLoadURLOperationDelegate>",W,N,V_delegate
T@"NSURL",R
cachedURLResponse
T@"NSCachedURLResponse",R
dataConsumer
T@"SSVURLDataConsumer",&
metricsPageEvent
T@"SSMetricsPageEvent",R
T@"SSBag",&,N,V_bag
recordsMetrics
referrerApplicationName
referrerURLString
T@"NSHTTPURLResponse",R
expiredOutputBlock
T@?,C
outputBlock
prepareRequestBlock
?%@=%@
&%@=%@
createsInstallJobs
com.apple.StoreServices.SSPurchase
Must provide buy parameters
v32@?0@8@16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSPurchase.m
account
affiliate
background
buyparams
createdl
createjb
createinstalljb
dislkscrn
ensrvtp
fsize
fltassts
gratids
ignfrcpw
plchid
plyreq
reqcap
usesrdl
uniqueid
dlprops
itemdict
offerid
dlpolicy
netcon
requestp
batchIdentifier
enabledServiceType
expectedDownloadFileSize
gratisIdentifiers
gratisSoftwareClaim
TB,R,GisGratisSoftwareClaim
placeholderDownloadIdentifier
TB,GisPlaybackRequest
uniqueIdentifier
usesLocalRedownloadParametersIfPossible
preauthenticated
TB,GisPreauthenticated
databaseEncoding
T@"NSData",R
affiliateIdentifier
buyParameters
filteredAssetTypes
backgroundPurchase
TB,GisBackgroundPurchase
T@"SSURLRequestProperties",C
downloadProperties
T@"NSDictionary",C
displaysOnLockScreen
ignoresForcedPasswordRestriction
networkConstraints
T@"SSNetworkConstraints",C
tonestyles
assignee
contact
tonestyle
makedefault
makedefaulttext
allowedToneStyles
assigneeIdentifier
assigneeContactIdentifier
assigneeToneStyle
shouldMakeDefaultRingtone
shouldMakeDefaultTextTone
pendingApps
endId
startId
%@: Refreshing download: %@ / %@
accountID
downloadTransactionID
T@"NSString",R,V_downloadTransactionID
itms-services
getShareIdentifiers
properties must not be nil
URLRequest must not be nil
v24@?0@"SSURLConnectionResponse"8@"NSError"16
T@"SSAuthenticationContext",C
runsInProcess
sendsResponseForHTTPFailures
T@"<SSURLConnectionRequestDelegate>",D,N
destinationFileURL
shouldMescalSign
Value type not supported
status-code
v24@?0@"NSArray"8@"NSError"16
item-metadata
album-metadata
parameters
T@"NSDictionary",R,C
T@"<SSItemLookupRequestDelegate>",D,N
com.apple.StoreServices.SSVAppleAccountStore
ACAccountStore
ACAccountStoreDidChangeNotification
primaryAppleAccount
T@"ACAccount",R
store-offers
company
average-user-rating
game-center-enabled
rank
explicitContentRestriction
type
link-type
Invalid offer identifier
body-url
number-of-pages
user-rating-count
related-items
body
body-mime-type
text/plain
subject
tweet-info
%@: %@
collection-artist-name
composer-name
episode-id
is-compilation
yyyy-MM-dd HH:mm:ss ZZZ
release-date-string
gifting-button
series-name
view-user-reviews-url
tell-a-friend
ITunesStoreIdentifier
allItemOffers
defaultItemOffer
T@"SSItemOffer",R,N
expirationDate
T@"NSDate",R,N,V_expirationDate
itemKind
restricted
TB,R,N,GisRestricted
highDefinition
TB,R,N,GisHighDefinition
gameCenterEnabled
TB,R,N,GisGameCenterEnabled
viewItemURL
averageUserRating
numberOfUserRatings
Tq,R,N
imageCollection
T@"SSItemImageCollection",R,N
thumbnailImages
%@: (%@) %@
preview-url
preview-duration
asset-url
size
fullDurationInMilliseconds
Tq,R,N,V_fullDuration
mediaFileSize
Tq,R,N,V_mediaFileSize
mediaKind
T@"NSString",C,N,V_mediaKind
durationInMilliseconds
Tq,R,N,V_duration
protectedMedia
TB,R,N,GisProtectedMedia,V_protected
T@"NSURL",R,N,V_url
album
course
eBook
booklet
podcast-episode
tv-season
wemix
link
nagano
software-update
audio
video
texttone
customers-also-bought
itms://?action=audiobooks
itms://?action=itunes-u
itms://?action=movies
itms://?action=music-videos
itms-apps://?action=newsstand
itms://?action=podcasts
itms://?action=ringtones
itms-apps://?action=software
itms-apps://?action=updates
itms://?action=music
itms://?action=tv-shows
adamId
appExtensionVersion
appExternalVersionID
bundleIdentifier
cohortID
downloadVarietyID
eventType
installType
model
osVersion
purchaserDsid
versionString
userDsid
watchGuid
watchSerial
watchSize
timestamp
ADAM_ID
APP_EXTENSION_VERSION_STRING
APP_EXTERNAL_VERSION_ID
BUNDLE_IDENTIFIER
COHORT_ID
DOWNLOAD_VARIETY_ID
WATCH_EVENT_TYPE
WATCH_INSTALL_TYPE
WATCH_MODEL
WATCH_OS_VERSION
APP_PURCHASER_DSID
WATCH_APP_VERSION
WATCH_GUID
WATCH_SERIAL_NUMBER
WATCH_SIZE
EVENT_TIMESTAMP
iTunesMetadata.plist
T@"NSDate",C,N,V_timestamp
T@"NSNumber",C,N,V_adamId
T@"NSString",C,N,V_cohortID
T@"NSNumber",C,N,V_pid
T@"NSNumber",C,N,V_appExternalVersionID
T@"NSNumber",C,N,V_purchaserDsid
T@"NSNumber",C,N,V_userDsid
T@"NSString",C,N,V_appExtensionVersion
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_downloadVarietyID
TQ,N,V_eventType
TQ,N,V_installType
T@"NSString",C,N,V_model
T@"NSString",C,N,V_osVersion
T@"NSString",C,N,V_versionString
T@"NSString",C,N,V_watchGuid
T@"NSString",C,N,V_watchSerial
T@"NSString",C,N,V_watchSize
UIApplicationLaunchOptionsDeletedFamilyContentKey
com.apple.itunesstored.deletefamilycontent
UIApplicationLaunchOptionsNewsstandDownloadsKey
com.apple.itunesstored.finishdownload
appIdentifier
T@"NSString",C,N,V_appIdentifier
launchOptions
T@"NSDictionary",C,N,V_launchOptions
shouldLaunchApp
TB,N,V_shouldLaunchApp
processAssertionIdentifier
T@"NSString",C,N,V_processAssertionIdentifier
processAssertionInterval
Td,N,V_processAssertionInterval
processAssertionReason
T@"NSString",C,N,V_processAssertionReason
ProcessAssertionReasonBackgroundDownload
ProcessAssertionReasonTaskCompletion
Must have a valid account identifier
Must have a valid rental key identifier
Must have a valid download identifier
Must have at least one sinf
rentalKeyIdentifier
shouldValidateRentalInfo
TB,N,V_shouldValidateRentalInfo
checkoutWithPlay
TB,N,GshouldCheckoutWithPlay,V_checkoutWithPlay
checkoutType
TQ,V_checkoutType
iTunesDemo-D080A994-76FD-4BF8-BE64-6C9439D0338E
iTunesLocal-421A04EA-479A-4E46-B49D-556F7144518D
accountCredits
accountSource
altDSID
availableServiceTypes
demoAccountRawPassword
dsid
eligibleServices
enabledServiceTypes
firstName
freeDownloadsPasswordSetting
isActiveLockerAccount
isDemoAccount
isManagedAppleID
isNewCustomer
iTunesPassSerialNumber
lastName
paidPurchasesPasswordSetting
scope
storefrontID
always
never
sometimes
production
=PET
com.apple.StoreServices.SSAccount.backingAccountAccessQueue
SSAccountStore: Setting a non-pet as the password equivalent token. account = %{public}@
SSAccountStore: Setting a password that may be a password equivalent token. account = %{public}@
com.apple.itunesstored.token
com.apple.StoreServices.accounts.storefront
%{public}@: Someone is changing the country code of an account's storefront outside of authentication. account = %{public}@ | oldStorefront = %{public}@ | newStorefront = %{public}@ | callStack = %{public}@
Someone is changing the country code of an account's storefront outside of authentication. account = %@ | oldStorefront = %@ | newStorefront = %@ | url = %@ | request.headers = %@ | response.headers = %@
%{public}@: Someone is setting an account's storefront to nil. account = %{public}@ | callStack = %{public}@
Someone is setting an account's storefront to nil. account = %@ | oldStorefront = %@ | url = %@ | request.headers = %@ | response.headers = %@
SSAccount: Failed to get the metrics dictionary from the bag. We'll be unable to send logs to the server.
SSAccount: Failed to insert the log metric into the controller. error = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSAccount.m
-[SSAccount initWithXPCEncoding:] provided with an invalid xpc_object_t object.
 Local Account
 altDSID = %@ | DSID = %@ | username = %@ | backingIdentifier = %@ | scope = %ld | active = %@ | authenticated = %@
 | storefront = %@>
terms-check
accepted
p2-content-restore
allowed-kinds
nil completionBlock
accountInfo.accountKind
accountInfo.appleId
accountInfo.accountName
personInfo.acAccountName
altDsPersonId
creditDisplay
dsPersonId
accountInfo.address.firstName
isManagedStudent
accountInfo.address.lastName
%{public}@: Failed to reset transient data for an account. account = %{public}@ | error + %{public}@
X-Apple-Request-Store-Front
x-apple-request-store-front
v32@?0@"NSString"8@"NSNumber"16^B24
%{public}@: Merging %{public}@ with %{public}@. creditsString changed.
%{public}@: Merging %{public}@ with %{public}@. uniqueIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. accountName changed.
%{public}@: Merging %{public}@ with %{public}@. altDSID changed.
%{public}@: Merging %{public}@ with %{public}@. iTunesPassSerialNumber changed.
%{public}@: Merging %{public}@ with %{public}@. secureToken changed.
%{public}@: Merging %{public}@ with %{public}@. storeFrontIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. firstName changed.
%{public}@: Merging %{public}@ with %{public}@. lastName changed.
%{public}@: Merging %{public}@ with %{public}@. isActiveLockerAccount changed.
%{public}@: Merging %{public}@ with %{public}@. accountKind changed.
%{public}@: Merging %{public}@ with %{public}@. accountScope changed.
%{public}@: Merging %{public}@ with %{public}@. accountSource changed.
%{public}@: Merging %{public}@ with %{public}@. didFallbackToPassword changed.
%{public}@: Merging %{public}@ with %{public}@. freeDownloadsPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. isManagedAppleID changed.
%{public}@: Merging %{public}@ with %{public}@. isNewCustomer changed.
%{public}@: Merging %{public}@ with %{public}@. paidPurchasesPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. availableServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. enabledServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. eligibilityForService changed.
backingAccountAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_backingAccountAccessQueue
backingAccount
T@"ACAccount",R,N
demoAccount
TB,R,N,GisDemoAccount
dirty
TB,R,N,GisDirty
hasBrokenDSID
localAccount
TB,R,N,GisLocalAccount
secureToken
didFallbackToPassword
active
TB,GisActive
activeLockerAccount
TB,GisActiveLockerAccount
ITunesPassSerialNumber
TB,GisNewCustomer
managedAppleID
TB,GisManagedAppleID
passwordEquivalentToken
rawPassword
accountKind
accountName
accountScope
authenticated
TB,GisAuthenticated
creditsString
socialEnabled
TB,GisSocialEnabled
storeFrontIdentifier
iTunes
device
certificateURLBagKey
AppStore
appstored
BagConfig
NSArray
NSNumber
NSDictionary
NSString
NSURL
Two, and only two, strings should be included.
com.apple.StoreServices.authbegin
com.apple.StoreServices.authfail
com.apple.StoreServices.authfinish
com.apple.StoreServices.authsubmit
SSVerifyCredentialsLogUUID
SSVerifyCredentialsSkipAuthKit
SSVerifyCredentialsAccountScope
%{public}@: You shouldn't call -[SSAuthenticateRequest init] directly. Use initWithAccount: or initWithAuthenticationContext: instead.
%{public}@: [%{public}@] An error occurred while authenticating %{public}@. error = %@
%{public}@: [%{public}@] Starting authentication request. context = %@ | context.accountName = %{public}@
%{public}@: [%{public}@] callStack = %{public}@
com.apple.appstored
%{public}@: Not entitled to talk to AuthKit. Sending request to itunesstored.
%{public}@: [%{public}@] Skiping authentication. %{public}@ doesn't need to be authenticated.
%{public}@: [%{public}@] The device doesn't have an active account. %{public}@ will become the active account.
%{public}@: [%{public}@] Failed to make the account the active account. error = %@
@"SSPromise"16@?0@"SSUpdateAccountResponse"8
%{public}@: [%{public}@] The user cancelled the authentication.
%{public}@: [%{public}@] This is a new account that needs to be reviewed.
%{public}@: [%{public}@] Authentication request failed. error = %@
%{public}@: [%{public}@] Authentication request finished. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@
v16@?0@"ACAccount"8
v24@?0@"SSAuthenticateResponse"8@"NSError"16
%{public}@: [%{public}@] Attempting to find an existing account using: altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
%{public}@: [%{public}@] Found an existing account. account = %{public}@
%{public}@: [%{public}@] There's no existing account matching the information we were given, but since we were given a username (%{public}@), we'll create one.
%{public}@: [%{public}@] An altDSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A DSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A password was provided.
%{public}@: [%{public}@] A PET was provided.
%{public}@: [%{public}@] There's no existing account matching the information we were given. The user will be prompted to enter their username and password.
mach-lookup
com.apple.ak.auth.xpc
com.apple.authkit.client.private
com.apple.authkit.client.internal
%{public}@: XPC connection interrupted while attempting authentication request
%{public}@: An error occurred during authentication. error = %@
logConfig
T@"SSLogConfig",&,N,V_logConfig
logUUID
_parentViewController
T@"UIViewController",W,N,V__parentViewController
T@"<SSAuthenticateRequestDelegate>",D,N
T@"SSAuthenticationContext",R
bundleID
T@"NSString",R,N,V_bundleID
accountDSID
T@"NSNumber",R,N,V_accountDSID
claimStyle
Tq,R,N,V_claimStyle
signIn
SSAccountStoreAuthKitAllowPasswordReuse
  accountName = %@
  accountScope = %ld
  allowsBioAuthentication = %d
  allowsBootstrapCellularData = %d
  allowsRetry = %d
  allowsSilentAuthentication = %d
  altDSID = %@
  cancelButtonLabel = %@
  canCreateNewAccount = %d
  canSetActiveAccount = %d
  clientIdentifierHeader = %@
  displaysOnLockScreen = %d
  HTTPHeaders = %@
  isAccountNameEditable = %d
  logUUID = %@
  okButtonLabel = %@
  persistsAcrossDeviceLock = %d
  persistsPasswordFallback = %d
  preferrediTunesStoreClient = %@
  promptStyle = %ld
  promptTitle = %@
  reasonDescription = %@
  requestParameters = %@
  requiredUniqueIdentifier = %@
  shouldCreateNewSession = %d
  shouldFollowAccountButtons = %d
  shouldIgnoreProtocol = %d
  shouldSuppressDialogs = %d
  signupRequestParameters = %@
  tokenType = %ld
  touchIDContinueToken = %@
  URLBagContext = %@
  userAgentComponents = %@
allowsBioAuthentication
TB,R,N,V_allowsBioAuthentication
allowsBootstrapCellularData
TB,R,N,V_allowsBootstrapCellularData
cancelButtonLabel
T@"NSString",R,C,N,V_cancelButtonLabel
clientIdentifierHeader
T@"NSString",R,C,N,V_clientIdentifierHeader
TB,R,N,V_displaysOnLockScreen
TB,R,N,GisDemoAccount,V_demoAccount
T@"NSString",R,V_logUUID
okButtonLabel
T@"NSString",R,C,N,V_okButtonLabel
persistsAcrossDeviceLock
TB,R,N,V_persistsAcrossDeviceLock
promptTitle
T@"NSString",R,C,N,V_promptTitle
reasonDescription
T@"NSString",R,C,N,V_reasonDescription
shouldIgnoreProtocol
TB,R,N,V_shouldIgnoreProtocol
tokenType
Tq,R,N,V_tokenType
URLBagContext
T@"SSURLBagContext",R,N
forceDaemonAuthentication
TB,R,N,V_forceDaemonAuthentication
T@"NSString",R,C,N,V_accountName
Tq,R,V_accountScope
accountNameEditable
TB,R,N,GisAccountNameEditable,V_accountNameEditable
allowsRetry
TB,R,N,V_allowsRetry
allowsSilentAuthentication
TB,R,N,V_allowsSilentAuthentication
T@"NSString",R,C,N,V_altDSID
canCreateNewAccount
TB,R,N,V_canCreateNewAccount
canSetActiveAccount
TB,R,N,V_canSetActiveAccount
HTTPHeaders
T@"NSDictionary",R,C,N,V_httpHeaders
password
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_passwordEquivalentToken
initialPassword
persistsPasswordFallback
TB,R,N,V_persistsPasswordFallback
preferredITunesStoreClient
T@"NSString",R,C,N,V_preferredITunesStoreClient
promptStyle
Tq,R,N,V_promptStyle
requestParameters
T@"NSDictionary",R,C,N,V_requestParameters
requiredUniqueIdentifier
T@"NSNumber",R,&,N,V_requiredUniqueIdentifier
shouldCreateNewSession
TB,R,N,V_shouldCreateNewSession
shouldFollowAccountButtons
TB,R,N,V_shouldFollowAccountButtons
shouldSuppressDialogs
TB,R,N,V_shouldSuppressDialogs
signupRequestParameters
T@"NSDictionary",R,C,N,V_signupRequestParameters
touchIDContinueToken
T@"NSString",R,C,N,V_touchIDContinueToken
userAgentComponents
T@"NSArray",R,C,N,V_userAgentComponents
%@: Someone is calling setInitialPassword:. This method is deprecated and will be passed to setPasswordEquivalentToken: which may not be what the caller intended.
TB,D,N
T@"NSString",C,D,N
TB,D,N,GisDemoAccount
Tq,D,N
Tq,D
TB,D,N,GisAccountNameEditable
T@"NSDictionary",C,D,N
T@"NSNumber",&,D,N
T@"NSArray",C,D,N
SSSpringBoardUtilityApplicationStateChangeNotification
FBSSystemService
%{public}@: Timed out while launching application %{public}@.
FBSOpenApplicationErrorDomain
FBSOpenApplicationOptionKeyActivateSuspended
FBSOpenApplicationOptionKeyPayloadOptions
%{public}@: Could not launch %{public}@. %{public}@
%{public}@: No PID for app ID %{public}@.
%{public}@: Taking process assertion %{public}@ for %{public}.2f seconds with reason %{public}@.
%{public}@: Could not take process assertion %{public}@.
%{public}@: Releasing power assertion %@.
v16@?0@"NSDictionary"8
com.apple.StoreServices.SSSpringBoardUtility
com.apple.StoreServices.SSSpringBoardUtility.Notifications
com.apple.StoreServices.SSSpringBoardUtility.SpringBoard
%@: Timed out while getting application info. identifier = %{public}@ key = %{public}@
metrics
SSVMetricsInternalSettingReportingFrequency
com.apple.StoreServices.SSMetricsConfiguration
com.apple.StoreServices.metrics-internal-settings-change
disabled
sendDisabled
metricsBase
metrics_base
fields
v32@?0@"NSString"8@16^B24
[%@] initializing with empty config 
config
blacklistedFields
cookies
compoundSeparator
fieldsMap
blacklistedEvents
[%@] Blacklisted event [%@] 
pingUrls
v32@?0@"NSString"8Q16^B24
v16@?0@"NSNumber"8
postFrequency
metricsUrl
tokenSeparator
decorateITMLEvents
T@"NSDictionary",R,N
childConfiguration
T@"SSMetricsConfiguration",&,N,V_childConfiguration
disableEventDecoration
TB,N,V_disableEventDecoration
page
T@"NSError",R,C,N,V_error
T@,R,N,V_result
activity
activityCurator
comment
interview
musicVideo
radio
track
uploadedAudio
uploadedVideo
%@: [ID: %@, Type: %@]
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_type
preorderAlbum
iMix
itunesMix
socialActivity
radioStation
SSVMediaContentTasteUpdateResponseContentTasteItems
SSVMediaContentTasteUpdateResponseExpirationDate
SSVMediaContentTasteUpdateResponseResponseRevisionID
<%@ %p contentTasteItems:%@ expirationDate:%@ responseRevisionID:%llu isCachedResponse:%@>
contentTasteItems
T@"NSArray",C,N,V_contentTasteItems
T@"NSDate",C,N,V_expirationDate
responseRevisionID
TQ,N,V_responseRevisionID
cachedResponse
TB,N,GisCachedResponse,V_cachedResponse
SSAccountStoreAuthKitAllowSilentAuth
SSAccountStoreAuthKitAllowSilentPasswordAuth
SSAccountStoreAuthKitCanCreateNewAccountKey
SSAccountStoreAuthKitCanSetActiveAccountKey
SSAccountStoreAuthKitCreateAccountDSIDKey
SSAccountStoreAuthKitCreateAccountQueryParamsKey
SSAccountStoreAuthKitCreateAccountTargetIdentifierKey
SSAccountStoreAuthKitCredentialSource
SSAccountStoreAuthKitHTTPHeadersKey
SSAccountStoreAuthKitLogUUIDKey
SSAccountStoreAuthKitOKButtonLabel
SSAccountStoreAuthKitPreventPrompt
SSAccountStoreAuthKitPreventSecondaryAccountPETLookup
SSAccountStoreAuthKitPresentingViewController
SSAccountStoreAuthKitPromptTitle
SSAccountStoreAuthKitProxiedAppBundleIDKey
SSAccountStoreAuthKitProxiedAppNameKey
SSAccountStoreAuthKitReasonKey
SSAccountStoreAuthKitSuppressServerDialogs
SSAccountStoreAuthKitSkipAuthKitKey
SSAccountStoreAuthKitUserAgentKey
SSAccountStoreAuthKitUserAgentSuffixesKey
SSAccountStoreAuthenticationActivityNotification
SSAccountStoreChangedNotification
_SSAccountStoreDidChangeNotification
ActiveAccountIsManagedAppleID
AuthenticationStarted
AccountsChangedNotificationsSuppressionStarted
LastAuthTime
SSAccountStoresProxiedDeviceFlagKey
metricsAuthenticationAttempts
product
badServerResponse
maxNumberOfAttemptsReached
responseTime
mtTopic
userAgent
com.apple.itunesstored.accountschanged.internal
com.apple.StoreServices.SSAccountStore.accountsCache
com.apple.StoreServices.SSAccountStore.metricsQueue
com.apple.StoreServices.SSAccountStore.notificationQueue
%{public}@: The in-process cache is disabled. The accounts will be fetched from the backing store.
%{public}@: Returning cached accounts.
%{public}@: We have no cached accounts. We'll load the accounts now.
%{public}@: Caching the accounts.
v16@?0@"NSArray"8
%{public}@: Failed to fetch the backing accounts. error = %{public}@
%{public}@: Unit test mode is enabled. We won't go to the backing account store.
@16@?0@"ACAccount"8
v16@?0@"ACAccountType"8
B16@?0@"SSAccount"8
%{public}@: Someone is attempting to get the active account. activeAccount = %{public}@
%{public}@: Someone is attempting to get the active locker account. activeLockerAccount = %{public}@
%{public}@: Clearing the in-process account cache.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSAccountStore.m
Invalid parameter not satisfying: %@
%{public}@: [%{public}@] %{public}@ has a broken DSID. Attempting to repair it.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding IDMS account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding iCloud account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding AppleAuthentication account.
%{public}@: [%{public}@] Failed to find a valid DSID. Unable to repair the account.
%{public}@: [%{public}@] Successfully repaired an account's broken DSID. account = %{public}@
%{public}@: [%{public}@] We found a valid DSID, but we failed to save the account with the new DSID. account = %{public}@ | error = %{public}@
v16@?0@8
%{public}@: There's no local account. We'll create one.
%{public}@: Unable to get the local account. error = %{public}@
@"SSPromise"16@?0@"NSError"8
%{public}@: It appears that someone created the local account underneath us. Attempting to look it up again.
%{public}@: There are no accounts that need migrating to Accounts.framework.
%{public}@: Disabling the in-process cache.
%{public}@: Migrating %ld account(s).
%{public}@: [%{public}@] Removing an account from the KVS without migrating it because %@.
@"NSString"16@?0@"SSAccount"8
%{public}@: [%{public}@] Beginning migration of %{public}@. currentAccounts = %@
%{public}@: [%{public}@] Successfully migrated the account. Removing it from the KVS.
%{public}@: [%{public}@] Failed to migrate the account. We won't remove it from the KVS. error = %@
%{public}@: Ensuring that we have only a single active account after migration.
%{public}@: Migration is complete. Clearing the in-process cache and re-enabling it.
%{public}@: Posting a com.apple.itunesstored.accountschanged (and its internal varient) notification now that migration is complete.
%{public}@: We didn't migrate any accounts, so we aren't posting a com.apple.itunesstored.accountschanged (and its internal varient) notification.
@"NSString"16@?0@"NSDictionary"8
%{public}@: After migration, there are no accounts remaining in the KVS.
%{public}@: After migration, the KVS contains the following accounts: %@
%{public}@: Timed out while trying to remove %{public}@.
%{public}@: Someone is attempting to remove a nil acount.
%{public}@: Removing %{public}@.
%{public}@: Failed to remove %{public}@. error = %@
com.apple.StoreServices.SSAccountStore.removeAccountsQueue
%{public}@: Timed out while removing account %{public}@.
%{public}@: Timed out while removing accounts %@.
%{public}@: [%{public}@] Removing all cookies for %{public}@.
v24@?0@"NSNumber"8@"NSError"16
v12@?0B8
%{public}@: [%{public}@] Signing out of %{public}@.
%{public}@: [%{public}@] Successfully signed out of %{public}@. We'll now remove its cookies.
%{public}@: [%{public}@] Unable to sign out of %{public}@. error = %@
%{public}@: [%{public}@] We were told to skip the call to AuthKit.
%{public}@: [%{public}@] The user cancelled the create account dialog.
The user cancelled the create account dialog.
%{public}@: [%{public}@] The user opted to create a new account. This authentication will fail and we'll start the create account flow.
ISCreateAccountOperation
ISOperationQueue
The user opted to create a new account.
@"SSPromise"16@?0@"NSNumber"8
com.apple.StoreServices.SSAccountStore.unitTestAccountsAccessQueue
%{public}@: Making a copy of the KVS database for later debugging.
%@-copy
sqlitedb
%{public}@: A copy of the KVS already exists. Removing it so we can create a new one.
%{public}@: Failed to copy the KVS database. error = %@
Local
%{public}@: Failed to create the local account. error = %{public}@
UIApplication
<altDSID = %@ | DSID = %@ | username = %@ | firstName = %@ | lastName = %@ | storefront = %@ | scope = %@>
There's no local account.
@"SSPromise"16@?0@"NSArray"8
%{public}@: Posting a com.apple.itunesstored.accountschanged.internal notification.
%{public}@: Posting a com.apple.itunesstored.accountschanged notification.
%{public}@: The value of SSActiveAccountIsManagedAppleID changed.
%{public}@: Attempted to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: Posting a %{public}@ notification.
%{public}@: Attempted to post metrics event, but our metricsQueue is NULL. Something went wrong
/System/Library/Accounts/Notification/iTunesAccountsNotificationPlugin.bundle
We failed to load the notification plugin.
_canSaveAccount:withOtherAccounts:store:
@16@?0@"SSAccount"8
%{public}@: [%{public}@] Someone is attempting to save a nil acount.
The account must be non-nil.
%{public}@: [%{public}@] Refusing to save %{public}@. None of its properties have changed.
%{public}@: [%{public}@] Refusing to save %{public}@. It's backing account is nil.
The backing account is nil.
%{public}@: [%{public}@] Attempting to save %{public}@. verifyCredentials = %{public}@
%{public}@: [%{public}@] Clearing the in-process cache in preparation of saving the account.
%{public}@: [%{public}@] Successfully saved the account.
%{public}@: [%{public}@] Failed to save the account. error = %@
%{public}@: An account is set to active when it shouldn't be. Deactivating it. account = %{public}@ | activeDSID = %{public}@
%{public}@: An account is set as the active locker account when it shouldn't be. Deactivating it. account = %{public}@ | activeLockerDSID = %{public}@
%{public}@: Failed to save %{public}@ after modifying its active or activeLocker property. error = %@
%{public}@: [%{public}@] Attempting to find an existing account. attempt = %ld
%{public}@: [%{public}@] Found a preexisting account with a broken altDSID or DSID that we can use.
%{public}@: [%{public}@] Refusing to migrate an account because there's already an account with the same username but different altDSID or DSID.
%{public}@: [%{public}@] There's no preexisting account. We'll create a new one.
%{public}@: [%{public}@] Found a pre-existing iTunes token. Setting the new account as authenticated.
%{public}@: [%{public}@] There's no pre-existing iTunes token. The new account will be unauthenticated.
%{public}@: [%{public}@] There's a preexisting account, %{public}@. We'll merge the given properties into it.
%{public}@: [%{public}@] Making the account the active account. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account inactive. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account the active locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] Making the account an inactive locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] It appears that someone created the account while we were attempting to migrate it. We'll perform the migration again.
it's empty
it only has an account source
it has no username
SSAccountStore: [%{public}@] The raw password might actually be a PET.
SSAccountStore: [%{public}@] Successfully converted a raw password into a PET.
SSAccountStore: [%{public}@] Failed to convert a raw password into a PET. error = %{public}@
AKAppleIDAuthenticationInAppContext
kAASaveOptionCompanionDeviceClientInfoKey
kAASaveOptionCompanionDeviceUDIDKey
SSAccountStore: [%{public}@] We were told to update a nil account. We'll try to find an existing account matching the info we got from AuthKit. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
SSAccountStore: [%{public}@] Found an account existing account matching the AuthKit information.
SSAccountStore: [%{public}@] Failed to find an account existing account. We'll create a new account.
SSAccountStore: [%{public}@] The newly created account will be set to active.
SSAccountStore: [%{public}@] The newly created account will be set to inactive.
SSAccountStore: [%{public}@] AuthKit gave us an updated altDSID. oldAltDSID = %{public}@ | newAltDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated DSID. oldDSID = %{public}@ | newDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated username. oldUsername = %{public}@ | newUsername = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us updated identifiers. We'll attempt to find an existing account that matches the new identifiers.
SSAccountStore: [%{public}@] The new identifiers point to the same account we're already working with.
SSAccountStore: [%{public}@] The new identifiers are for a different existing account, %{public}@.
SSAccountStore: [%{public}@] We didn't find an existing account using the new identifiers.
SSAccountStore: [%{public}@] The account is the demo account. Saving the raw password on it.
SSAccountStore: [%{public}@] The account is the demo account, but we don't have a raw password to store on it.
SSAccountStore: [%{public}@] Failed to encode AKDevice. Proxied authentication will fail.
kAAErrorDetailsProxiedDeviceDataKey
%{public}@: [%{public}@] We aren't prompting to create a new account because the account isn't empty.
%{public}@: [%{public}@] We aren't prompting to create a new account because we either shouldn't be prompting or SSAccountStoreAuthKitCanCreateNewAccountKey isn't set to YES.
%{public}@: [%{public}@] We aren't prompting to create a new account because Buddy is still running.
%{public}@: [%{public}@] Prompting the user to see if they want to create a new account.
ISCreateAccountPromptOperation
SSAccountStore: [%{public}@] Buddy is still running. We can't prompt the user to enter their password. Prompt auth won't run.
SSAccountStore: [%{public}@] We were told not to prompt the user.
SSAccountStore: [%{public}@] Prompting the user for their password.
SSAccountStore: [%{public}@] Failed to update the account by prompting the user for their password. The authentication will fail. error = %@
v16@?0@"SSLazyPromise"8
SSAccountStore: [%{public}@] Unable to perform silent authentication if we don't have an account.
SSAccountStore: [%{public}@] Attempting to update the account silently while we're running Buddy.
SSAccountStore: [%{public}@] We aren't allowed to attempt silent authentication.
Silent authentication isn't allowed.
SSAccountStore: [%{public}@] Attempting to update the account silently.
SSAccountStore: [%{public}@] Successfully updated the account silently.
SSAccountStore: [%{public}@] Failed to silently update the account. error = %@
SSAccountStore: [%{public}@] Unable to perform silent password authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent password authentication.
Silent password authentication isn't allowed.
SSAccountStore: [%{public}@] We don't have a raw password to convert into a PET.
SSAccountStore: [%{public}@] We were given a raw password. We'll attempt to convert it into a PET.
SSAccountStore: [%{public}@] Unable to perform silent PET authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent PET authentication.
SSAccountStore: [%{public}@] The account already has a PET we can use.
SSAccountStore: [%{public}@] We weren't given a PET, and we were told not to check alternate accounts for one.
SSAccountStore: [%{public}@] We weren't given a PET. We'll check alternate accounts for one.
SSAccountStore: [%{public}@] Found a PET on an alternate account we can use.
SSAccountStore: [%{public}@] Unable to get a PET from an alternate account.
SSAccountStore: [%{public}@] The PET appears to be misformed and could be a raw password.
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveAccount:] is deprecated. The caller should get the active account, set its active property to NO, and save it.
%{public}@: Failed to deactivate the active account, %{public}@. error = %@
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveLockerAccount:] is deprecated. The caller should get the active locker account, set its activeLocker property to NO, and save it.
%{public}@: Failed to deactivate the active locker account, %{public}@. error = %@
accountsCache
T@"NSArray",&,N,V_accountsCache
accountsCacheAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsCacheAccessQueue
inProcessCacheDisabled
TB,N,GisInProcessCacheDisabled,V_inProcessCacheDisabled
keyValueStore
T@"SSKeyValueStore",&,N,V_keyValueStore
metricsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsQueue
notificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
accountsPromise
T@"SSPromise",R,N
authenticationActive
TB,R,GisAuthenticationActive
backingAccountStore
T@"ACAccountStore",R,N,V_backingAccountStore
T@"SSAccount",R,N
activeAccount
T@"SSAccount",R
accounts
T@"NSArray",R,C
expired
TB,R,GisExpired
InAppPurchase
BYSetupAssistantNeedsToRun
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
SSAccountStore: Received a com.apple.itunesstored.accountschanged notification.
SSAccountStore: Received a com.apple.itunesstored.accountschanged.internal notification.
  authenticatedAccount = %@
  authenticateResponseType = %ld
  error = %@
  responseDictionary = %@
authenticatedAccount
T@"SSAccount",&,N,V_authenticatedAccount
authenticateResponseType
Tq,N,V_responseType
T@"NSDictionary",C,N,V_responseDictionary
T@"NSError",R,N,V_error
com.apple.storeservices.watchAnalytics
INSERT OR REPLACE INTO 
) VALUES (?
[%@] Statement Didn't finish after stepping -- %@ -- %@
v16@?0^{sqlite3_stmt=}8
B16@?0@"SSSQLiteDatabase"8
SELECT %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@ FROM %@ WHERE coalesce(%@, 0) = 0 AND %@ <= %lld ORDER BY %@ ASC
DELETE FROM %@ WHERE %@ > %lu;
[%@] Deleting unreportable events returned: %d [%d rows affected]
DELETE FROM %@ WHERE %@ = %lld;
[%@] Deleting reported events returned: %d [%d rows affected]
SELECT %@ FROM %@ WHERE %@ = %lld;
UPDATE %@ SET %@ = %i WHERE %@ = %lld;
[%@] Update retry count on events returned: %d [%d rows affected]
table
T@"SSWatchMetricsEventTable",R,N
serialQueue
T@"NSObject<OS_dispatch_queue>",R
[SSRestrictions]: Invalid trust status: %ld, or result: %d
InternalBuild
[SSRestrictions]: Ignoring failed extended validation validation
com.apple.itunesstored.ExplicitPreferenceRestriction
ExplicitOffAndPreferencesEnabled
ExplicitOffAndPreferencesDisabled
PSRestrictionsPasscodeController
SSRestrictionsExplicitRestrictionAlertTypeOnLaunchCount
SSRestrictionsExplicitRestrictionAlertTypeOnContainerLoadCount
forced
TB,R,N,GisForced,V_forced
softwareTypes
T@"NSArray",R,C,N,V_softwareTypes
TB,D,N,GisForced
regular
v24@?0@"SSSoftwareUpdatesResponse"8@"NSError"16
T@"<SSSoftwareUpdatesRequestDelegate>",D,N
updateQueueContext
T@"SSSoftwareUpdatesContext",R
reload
reset
%@: Failed with error: %@
%@: Found %ld updates
T@"NSError",R
TB,R,GisFailed
updateItems
com.apple.storeservices.analytics
com.apple.storeservices.analytics.flush
userType
[%@] Dropping event which has no body values after blacklist filtering. [%@]
[%@] Dropping event of a type which is blacklisted. [%@]
[%@] Insert Metrics Events returned error code: %d
[%@] Insert Metrics Events succeeded
[%@] Attempting to insert events with no URL. Dropping [%d] events.
[%@] Flushing Unreported Events on timer
[%@] Flush Unreported Events timer fired -- %@
[%@] Flush Unreported Events timer fired & reported success
[%@] Flush Unreported Events timer fired but was subsequently disabled
[%@] Setting Flush Unreported Events timer: %0.2f
[%@] Report Metrics Events returned error code: %d
[%@] Report Metrics Events succeeded
[%@] User has opted not to send Apple diagnostic information. Dropped %li events that require it.
[%@] Events dropped by Event Controller with no report URL: [%lu events]
[%@] Events dropped by disabled Event Controller: [%lu events]
[%@] Insert Events called with an empty array.
single
multi
custom
location
MetricsController
%@: Connection interrupted
%@: Invalid response
%@: Record analytics events did succeed: %@
v32@?0@"NSString"8@"NSArray"16^B24
notSubscribed
subscribed
flushTimerEnabled
TB,N,GisFlushTimerEnabled,V_flushTimerEnabled
urlCookieKeys
https://bag.itunes.apple.com/bag.xml
SSBagChangedNotification
SSBagExceptionInvalidKey
SSBagExceptionInvalidValueType
SSBagExceptionKeyMisconfigured
SSBagExceptionProfileConfigMisconfigured
SSBagExpirationTimeKey
storefront
%{public}@: [%{public}@] +[SSBag bagWithProfileConfig:] called. profileConfig = %{public}@
%{public}@: [%{public}@] There's a cached bag. profileConfig = %{public}@
%{public}@: [%{public}@] There's no cached SSBag for the given SSBagProfileConfig. We'll create one. profileConfig = %{public}@
%{public}@: [%{public}@] There's a cached bag. Someone else created it while we were waiting to. profileConfig = %{public}@
%{public}@: [%{public}@] Preemptively loading the SSBag. It was either newly created or expired.
com.apple.StoreServices.SSBag.backingDictionaryAccessQueue
com.apple.StoreServices.SSBag.notificationsQueue
com.apple.StoreServices.SSBag.operationQueue
@"NSDictionary"16@?0^@8
%{public}@: Resetting all cached SSBags for profile config %{public}@.
itspod
@"NSString"16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
StoreServices/SSBag
com.apple.StoreServices.SSBag.NSURLCache
[%@ (version=%@)]
%{public}@: Removing all debug backing dictionaries.
%{public}@: Overriding the backing dictionary for any bag with profile %{public}@ and version %{public}@.
.apple.com
ISProtocolDataProvider
ISStoreURLOperation
itma
itfe
AppleTV
Watch
AudioAccessory
iPad
iPhone
iPod
%{public}@: Failed to determine the device type.
Unknown
tvOS
watchOS
%{public}@: Failed to determine the OS type.
System/Library/CoreServices/SystemVersion.plist
SSBagURLCookies
%{public}@: [%{public}@] _valueForKey called. key = %{public}@ | valueType = %{public}@
The completion block cannot be nil.
%{public}@: [%{public}@] Unable to load bag %{public}@. error = %{public}@
%{public}@: [%{public}@] The bag's value for %{public}@ (%{public}@) is missing or the wrong type. Returning the key's default value, %{public}@.
internal
seed
os=%@
&osVersion=%@
&deviceClass=%@
&product=%@
&productVersion=%@
&profile=%@
&profileVersion=%@
&buildVariant=%@
%@?%@
com.apple.StoreServices.SSBag.bagCacheAccessQueue
com.apple.StoreServices.SSBag.debugBackingDictionariesAccessQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSBag.m
%@: [%@] Attempting to access a %@ object using a key (%@) that's supposed to return %@ objects.
%@: [%@] Attempting to access a key (%@) that was never registered.
SSBag: Attempting to use a SSBagProfileConfig that has no registered keys.
%{public}@: [%{public}@] We have a cached backing dictionary, but it's expired.
%{public}@: [%{public}@] We have a cached backing dictionary. We don't need to go to the server.
%{public}@: [%{public}@] We don't have a cached backing dictionary. We need to load the bag from the server.
Attempted the maximum number of bag loads for %@.
%{public}@: [%{public}@] Issuing the ISStoreURLOperation to load the bag. attempt = %ld url = %{public}@
%{public}@: [%{public}@] Someone set a debug backing dictionary. We won't load from the server.
urlCookies
%{public}@: [%{public}@] Attempting to load the bag again due to urlCookies. originalCookies = %{public}@ newCookies = %{public}@
%{public}@: [%{public}@] Attempting to load the bag again because the response had a x-set-apple-store-front header. originalStorefront = %{public}@ | newStorefront = %{public}@
%{public}@: [%{public}@] Successfully loaded the backing dictionary from the server. backingDictionary = %{public}@
%{public}@: [%{public}@] Successfully loaded the backing dictionary from the server.
SSBag: Not posting a SSBagChangedNotification because self is out-of-scope.
%{public}@: [%{public}@] The backing dictionary we got from the server is different than the one we have. Updating the backing dictionary and sending out a SSBagChangedNotification.
%{public}@: [%{public}@] The backing dictionary was nil. Updating it with what we got back from the server and sending out a SSBagChangedNotification.
%{public}@: [%{public}@] The backing dictionary we got from the server is the same than the one we have. We won't send out a SSBagChangedNotification.
%{public}@: [%{public}@] Failed to load the backing dictionary from the server. error = %{public}@
%{public}@: [%{public}@] Unable to set a storefront suffix because we have no bundle identifier.
ISURLBagStorefrontHeaderSuffixes
%{public}@: [%{public}@] Updating a storefront suffix. originalStorefontSuffix = %{public}@ | newStorefrontSuffix = %{public}@ | bundleID = %{public}@
backingDictionary
T@"NSDictionary",&,N,V_backingDictionary
backingDictionaryAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_backingDictionaryAccessQueue
loadBagQueue
T@"SSUniqueExecutionQueue",R,N,V_loadBagQueue
logKey
T@"NSString",R,N,V_logKey
notificationsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationsQueue
operationQueue
T@"ISOperationQueue",&,N,V_operationQueue
profileConfig
T@"SSBagProfileConfig",R,N,V_profileConfig
[%@] -- Error creating directory: %@ -- %@
[%@] -- Error setting up database
[%@] -- nil database argument passed
B8@?0
apiToken
T@"NSString",C,N,V_apiToken
T@"NSError",C,N,V_error
executeBlockLock
T@"NSLock",&,N,V_executeBlockLock
executedBlock
TB,N,V_executedBlock
UIApplicationWillEnterForegroundNotification
UIInvalidBackgroundTask
System
Frameworks
UIKit.framework
UIKit
%@: {
  profile: %@
  profileVersion: %@
bagKeysDictionary
T@"NSDictionary",&,N,V_bagKeysDictionary
bagLoadTimeout
Td,N,V_bagLoadTimeout
profile
T@"NSString",C,N,V_profile
profileVersion
T@"NSString",C,N,V_profileVersion
bagKeys
mutableBagKeysDictionary
T@"NSMutableDictionary",&,N,V_mutableBagKeysDictionary
Td,D,N
exit-after-purchase
is-preorder
%@: (%@: %@)
action-display-name
allowed-tone-styles
buy-params
confirmation-dialog
document-cannot-open-dialog
required-document-handlers
should-show-confirmation
price-display
success-dialog
supported-device-types
supported-devices
ds-ids
action-type
plus-icon-badge
_offerItem
T@"SSItem",N,G_offerItem,S_setOfferItem:,V_item
accountIdentifiers
T@"NSSet",R,N
estimatedDiskSpaceNeeded
requiredSoftwareCapabilities
shouldShowPlusIcon
T@"NSString",R,N,V_offerIdentifier
priceDisplay
actionDisplayName
oneTapOffer
TB,R,N,GisOneTapOffer
preorder
TB,R,N,GisPreorder
offerMedia
T@"SSItemMedia",R,N
confirmationDialog
T@"SSDialog",R,N
successDialog
supportedDevices
T@"SSNetworkConstraints",R,N
STDQ
STDQPRE
STDRDL
HDBUY
HDPRE
HDRDL
HDVOD
LCVOD
SDVOD
SWUPD
PLUS
PLUSPRE
HQRDL
standard-audio
standard-video
standard-document
com.apple.StoreServices.SSBinaryPromise.globalPromiseStorageAccessQueue
backingPromise
T@"SSPromise",&,N,V_backingPromise
pushNotificationParameters
T@"SSVPushNotificationParameters",C,N,V_parameters
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSItemOfferDevice.m
Must provide device dictionary
device-type-id
minimum-product-version
minimum-device-description
minimum-device-title
minimum-device-description-url
minimum-device-description-url-title
minimum-product-version-description
minimum-product-version-title
minimum-product-version-description-url
minimum-product-version-description-url-title
deviceIdentifier
Tq,R,N,V_deviceIdentifier
minimumProductVersion
T@"NSString",R,N,V_minimumProductVersion
incompatibleDeviceError
T@"SSItemOfferDeviceError",R,N,V_incompatibleDeviceError
incompatibleSystemError
T@"SSItemOfferDeviceError",R,N,V_incompatibleSystemError
localizedMessage
T@"NSString",R,N,V_localizedMessage
localizedTitle
T@"NSString",R,N,V_localizedTitle
localizedURLTitle
T@"NSString",R,N,V_localizedURLTitle
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim2
BLDownloadQueue
[%{public}@]: Could not create a BLDownloadQueue sharedInstance
[%{public}@]: Could not retrieve the BLDownloadQueue class
[%{public}@]: downloadStatesDidChange: %@
[%{public}@]: downloadStatesDidChange: -- created SSBookDownloads: %@
v24@?0@"NSArray"8@"NSArray"16
B32@?0@"SSDownload"8Q16^B24
[%{public}@]: __book_sendDownloadsChanged: %@
B24@?0@"SSDownload"8^B16
com.apple.storeservices.SSNetworkConstraints
mobile-network-constraints
mobile-connection-type-allows
p2-music-store-available
music-download-size-limit-in-bytes
eBook-store-available
eBook-download-size-limit-in-bytes
video-download-size-limit-in-bytes
p2-podcasts-enabled
podcast-download-size-limit-in-bytes
p2-software-store-available
software-download-size-limit-in-bytes
WiFi
kinds
enabled
size-limits
v24@?0q8^B16
anyNetworkTypeEnabled
TB,R,GisAnyNetworkTypeEnabled
wi-fi
TOO_BIG_FOR_NETWORK_SPECIFIC_%@
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_ITUNES_%@
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_WIFI_%@
TOO_BIG_FOR_NETWORK_BODY
TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
TOO_BIG_FOR_NETWORK_TITLE
ITEM_TOO_BIG_FOR_NETWORK_BODY
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
ITEM_TOO_BIG_FOR_NETWORK_TITLE
condition-key
%@: Invalid condition: %@
operator
value
bundle-version
external-version
CapabilitiesMatch
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
LSDocumentProxy
LSApplicationWorkspace
restriction-name
account-is-present
SSHasAccountCondition
adam-id-present
SSItemAvailableCondition
app-version
SSApplicationVersionCondition
can-open-document
SSDocumentCondition
capability
SSCapabilityCondition
platform
SSPlatformCondition
product-version
SSSystemVersionCondition
restriction
SSRestrictionCondition
MobileInstallationCheckCapabilitiesMatch
conditions
content
alt-content
itemLookupBlock
T@?,C,N,V_itemLookupBlock
platformName
T@"NSString",C,N,V_platformName
systemVersion
T@"NSString",C,N,V_systemVersion
iPod-Touch
SSDeviceAutomaticDownloadKindsChangedNotification
SSDeviceAvailableItemKindsChangedNotification
SSDeviceBatteryLevelChangedNotification
SSDeviceCellularNetworkingAllowedChangedNotification
SSDevicePluggedInStateChangedNotification
SSDeviceSoftwareLibraryIdentifierChangedNotification
SSDeviceStoreFrontChangedNotification
SSVDeviceCarrierBundlingStatusDidChangeNotification
com.apple.StoreServices.autodownloadprompt
DeviceClassNumber
main-screen-class
com.apple.mobileipod
VideosAllowHDREnabledSetting
AccountsNotificationPlugin.ActiveStorefrontIdentifier
com.apple.storeservices.SSDevice
com.apple.storeservices.SSDevice.notifications
com.apple.StoreServices.SoftwareCUIDChanged
block is nil
com.apple.StoreServices.SSDevice.completion
promptIdentifier is nil
Missing Storefront Identifier
The local account doesn't have a storefront identifier.
@"SSPromise"16@?0@"SSAccount"8
UserAgent
itunesstored
AppleITunesStoreItemKinds
ServerPrompt-%@
ServerPromptDate-%@
%@: Enable all automatic download kinds
%@: Disable automatic download kinds: %@
minus
CellularTelephonyCapability
v16@?0^{__CFDictionary=}8
ISPhoneNumber
SerialNumber
%@: Set automatic download kinds: %@
SSDevice: Failed to update the device's storefront ID. We couldn't get the local account. error = %@
SSDevice: Successfully set the device's storefront to %{public}@
SSDevice: Failed to update the device's storefront ID. error = %@
v16@?0@"SSAccount"8
ThinnedAppVariantID
%@: Enable automatic download kinds: %@
union
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@. %{public}@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@.
%{public}@: [%{public}@] Failed to set a storefront ID on an account.
v16@?0r^@8
iPad1,1
iPhone2,1
dt:%lu
DeviceSupports720p
DeviceSupports1080p
iTunes-
cellular-data
iPad-M
 (%@)
%@/%@
 watchOS/%@
 iOS/%@
ProductType
OverrideProductType
 model/%@
HardwarePlatform
 hwp/%@
BuildVersion
 build/%@
com.apple.
lowtide
com.apple.AppStore2
com.apple.AppStore3
MobileStore
com.apple.Music
com.apple.Music.
Music
com.apple.lowtide
com.apple.ios.StoreKitUIService
StoreKitUIService
iBooks
com.apple.itunesu
iTunesU
com.apple.podcasts
com.apple.Maps
Maps
com.apple.Bridge
com.apple.AppStore.BridgeStoreExtension
com.apple.AppStore3.BridgeStoreExtension
com.apple.Music.MediaSocialShareService
com.apple.WelcomeKit
matd
com.apple.MobileSMS
com.apple.AppStore.MessagesStoreExtension
com.apple.AppStore3.MessagesStoreExtension
Messages
UseNewMusicApp2
TVMusic
UseNewMusicApp
com.apple.TVMusic
10.0
/System/Library/Messages/iMessageBalloons/ASMessagesProvider.bundle
compatibleProductType
deviceType
deviceTypeIdentifier
TI,R
phoneNumber
productType
productVersion
serialNumber
storeFrontIdentifierPromise
thinnedApplicationVariantIdentifier
uniqueDeviceIdentifier
pluggedIn
TB,R,GisPluggedIn
batteryLevel
cloudMediaLibraryIdentifier
mediaLibraryIdentifier
softwareLibraryIdentifier
clientVersion
clientName
legacyUserAgent
automaticDownloadKinds
iPad2,1
iPad2,4
iPad2,2
iPad2,3
iPad3,1
iPad3,2
iPad3,3
iPhone1,1
iPhone1,2
iPhone3,1
iPhone3,2
iPhone3,3
iPhone4,1
iPod1,1
iPod2,1
iPod2,2
iPod3,1
iPod4,1
iPod4,2
AppleTV2,1
AppleTV3,1
CTSettingCopyMyPhoneNumber
CTTelephonyCenterSetDefaultDispatchQueue
bytes
%.0f%@
com.apple.mobile.iTunes.store
AltDSID
AccountAvailableServiceTypes
AccountURLBagType
CreditDisplayString
DidFallbackToPassword
DSPersonID
AccountServiceTypes
FirstName
AccountFreeDownloadsPasswordSetting
AppleID
AccountIsManagedAppleID
AccountIsNewCustomer
AccountSocialEnabled
AccountITunesPassSerial
AccountKind
LastName
AccountPaidPurchasesPasswordSetting
AccountSource
AccountStoreFront
UserName
ActiveLockerAccountID
CloudLibraryCUID
downloaded-apps
KnownAccounts
LastPurchasesCheckDate
LibraryCUID
PurchaseTypes
SoftwareCUID
Storefront
TempStorefront
Eligible:AppleMusic
%012x
clientToken
T@"NSString",R,C,N,V_clientToken
domain
fallnumval
sibv
T@"NSString",C,N,V_domain
fallbackNumberValue
T@"NSNumber",C,N,V_fallbackNumberValue
T@"NSString",C,N,V_key
shouldInvertBoolValue
TB,N,V_shouldInvertBoolValue
currentBoolValue
poiProvider
poiURL
com.apple.StoreServices.SSVLoadNearbyAppsOperation.%p
%.4f
%.0f
X-JS-TIMESTAMP
%@=%@
v24@?0@"SSLookupResponse"8@"NSError"16
 t:native
T@"CLLocation",R,V_location
pointOfInterestIdentifier
pointOfInterestProviderIdentifier
pointOfInterestProviderURL
bvrs
T@"NSString",C,N,V_bundleVersion
externalVersionIdentifier
T@"NSNumber",C,N,V_externalVersionIdentifier
T@"NSString",C,N,V_itemIdentifier
dictionaryRepresentation
Apple-Guid
Apple-Serial-No
iCloud-DSID
If-Modified-Since
Last-Modified
X-Apple-ActionSignature
X-Apple-ADSID
X-Apple-Allow-Lite-Account-Conversion
X-Apple-Client-Application
X-Apple-Connection-Type
X-Apple-Cuid
X-Dsid
X-Apple-Software-Cuid
X-Apple-Store-Front
X-Apple-TA-Device
X-Token
X-Token-T
X-Apple-Requesting-Bundle-Id
X-Apple-Requesting-Bundle-Version
X-Apple-AMD
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-AMD-M
X-Apple-AMD-S
X-Apple-MD
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-MD-M
X-Apple-MD-S
X-Apple-TID-Action
X-Apple-TID-Challenge
X-Apple-TID-Pkey
X-Apple-TID-Signature
X-Apple-TID-SignatureVersion
X-Apple-TID-State
X-MMe-Multi-User
EEE, dd MMM yyyy HH:mm:ss z
en_US_POSIX
com.apple.storeservices.SSURLRequestProperties
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSURLRequestProperties.m
retry
btstrpcll
cache
srcappid
srcapp
client
exclen
headers
method
itunes
kbsynctype
large
srvtype
params
reqcell
requireev
requireext
requireHTTPS
decode
nocell
disablecell
procptcl
sectok
timeout
bagkey
bagtype
urls
uacomps
properties
retryCount
cachePolicy
expectedlength
kbsync
query
post
%@: URLs: %@; Parameters: %@; Headers: %@
canBeResolved
clientAuditBundleIdentifier
clientAuditTokenData
T@"NSData",R,C
clientBundleIdentifier
HTTPBodyStream
T@"NSInputStream",R,&
KBSyncType
largeDownload
TB,R,GisLargeDownload
requiresCellularDataNetwork
requiresExtendedValidationCertificates
requiresExternal
requiresHTTPS
shouldAddKBSyncData
shouldDecodeResponse
shouldDisableCellularFallback
shouldProcessProtocol
shouldSendSecureToken
URLBagType
URLBagURLBlock
T@?,R,C
URLs
allowedRetryCount
clientIdentifier
expectedContentLength
HTTPBody
HTTPMethod
TB,R,GisITunesStoreRequest
networkServiceType
timeoutInterval
URLBagKey
T@"NSURL",R,&
multipart/form-data; boundary=%@
--%@
Content-Disposition: form-data; name="%@"
--%@--
TB,D
T@"NSString",C,D
T@"NSData",C,D
T@"NSInputStream",&,D
TB,D,GisLargeDownload
T@?,C,D
T@"NSArray",C,D
TQ,D
TB,D,GisITunesStoreRequest
Td,D
T@"NSURL",&,D
T@"NSDictionary",C,D
B24@?0r*8@"NSObject<OS_xpc_object>"16
%lli
v32@?0@"NSNumber"8@"SSVFairPlaySubscriptionStatus"16^B24
bytesDownloaded
bytesTotal
T@"ASDJob",&,N,V_job
x-apple-jingle-correlation-key
X-Set-Apple-Store-Front
T@"SSMetricsPageEvent",&,N,V_metricsPageEvent
storeCorrelationID
bodyData
T@"NSData",R,N,V_bodyData
MIMEType
suggestedFilename
textEncodingName
Cache-Control
max-age
[SSCoding] Exception caught encoding object: %@
lease-renew
lease-start
Context must have SIC data
v24@?0@"SSPlayInfoResponse"8@"NSError"16
T@"<SSPlayInfoRequestDelegate>",D,N
playInfoContext
T@"SSPlayInfoRequestContext",R
playInfoResponse
T@"SSPlayInfoResponse",R
playerGUID
T@"NSString",C,N,V_playerGUID
SICData
T@"NSData",C,N,V_sic
T@"NSArray",C,N,V_sinfs
contentIdentifier
T@"NSNumber",C,N,V_contentIdentifier
playbackType
T@"NSString",C,N,V_playbackType
%@: Succeeded with info: %ld bytes @ %p
playInfoData
T@"NSData",R,N,V_playInfoData
performing migration with updateType: %lu
 we are back wit ha reply of %@
Cellular
Ethernet
interface
dataStalls
isKnownGood
isLowInternetDL
isLowInternetUL
lastReportedRxSignalStrength
linkQuality
loadedLQM
radioTechnology
cancelButtonString
cancelButton
cancelButtonAction
okButtonString
okButton
okButtonAction
defaultButton
explanation
dialogDictionary
dialogKind
buttons
T@"SSDialogButton",&,N
Button must have a title
subtarget
actionParameter
buttonAction
URLTarget
buttonTitle
authorization
goback
OpenURL
Goto
RetryRestoreAll
SSDialogErrorKeyRecoveryButtonAction
SSDialogErrorKeyRecoveryButtonParameter
SSDialogErrorKeyRecoveryTitle
StoreKit
receipt
nil block
isVPPLicensed
isRevoked
T@"NSDate",R
Failed to load an ACAccountType for %@
B16@?0@"ACAccount"8
Unable to find a corresponding account. accountTypeIdentifier = %@ | account = %@
Must provide token
Must provide accountIdentifier
T@"<SSAuthorizationRequestDelegate>",D,N
T@"NSNumber",C,V_accountIdentifier
authorizationToken
T@,R
T@"NSString",C,V_clientIdentifierHeader
familyAccountIdentifier
T@"NSNumber",C,V_familyAccountIdentifier
keybagPath
T@"NSString",C,V_keybagPath
T@"NSString",C,V_reason
shouldAddKeysToKeyBag
TB,N,V_shouldAddKeysToKeyBag
shouldPromptForCredentials
TB,N,V_shouldPromptForCredentials
T@"NSString",C,V_userAgent
box-height
image-orientation
landscape
scale
needs-shine
box-width
%@: [%@:%@ %ldx%ld] %@
 (prerendered)
imageSize
T{CGSize=dd},R,N
imageKind
T@"NSString",C,N,V_imageKind
T@"NSURL",&,N
height
width
imageOrientation
imageScale
Td,R,N
prerendered
TB,R,N,GisPrerendered
download-queue-item.default
newsstand-latest-issue-icon.default
software-icon.default
screenshot.default
screenshot.thumbnail
UINewsstandBindingEdge
UINewsstandBindingType
tab-bar-item.default
tab-bar-item.more-list
tab-bar-item.more-list-selected
tab-bar-item.selected
policyType
Tq,R,N,V_policyType
signatureComponents
T@"NSArray",R,C,N,V_signatureComponents
componentType
Tq,R,N,V_componentType
T@"NSString",R,C,N,V_key
image-type
itemImages
T@"NSArray",R,N,V_itemImages
SSRemoteNotificationClientDidReceiveNotifications
SSApplicationLaunchOptionsHasRemoteNotifications
com.apple.storeservices.SSRemoteNotificationClient
alert
isExplicit
artworkUrl
badge
category
schedule
notAfter
sound
tapUrl
notificationUserInfo
alertBodyString
alertCancelString
alertOKString
alertTitleString
badgeValue
soundFileName
explicitContent
T@"NSDate",R,N
application/gzip
clientActionDeepLink
serverAction
ISCopyDecompressedGZipDataForData
/System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
app_purchase_history_accounts
account_unique_identifier
local_revision
%ld-%@-%@-%@
%@: [%@]
com.apple.StoreServices.SSURLBagContext
TB,N,V_allowsBootstrapCellularData
allowsExpiredBags
TB,N,V_allowsExpiredBags
T@"NSData",&,N,V_clientAuditTokenData
usesCachedBagsOnly
TB,N,V_usesCachedBagsOnly
Tq,N,V_allowedRetryCount
bagType
Tq,N,V_bagType
cacheKey
ignoresCaches
TB,N,V_ignoresCaches
userIdentifier
T@"NSNumber",&,N,V_userIdentifier
allHTTPHeaders
%@.%@.%@
T@"NSArray",C,N,S_setAssets:,V_assets
bootstrapAsset
T@"SSUpdatableAsset",&,N,S_setBootstrapAsset:,V_bootstrapAsset
cacheURL
T@"NSURL",&,N,S_setCacheURL:,V_cacheURL
extraInfo
T@"NSDictionary",C,N,S_setExtraInfo:,V_extraInfo
lastModifiedTimestamp
Td,N,S_setLastModifiedTimestamp:,V_lastModifiedTimestamp
name
T@"NSString",C,N,S_setName:,V_name
pollInterval
Td,N,S_setPollInterval:,V_pollInterval
reloadUrgencyType
Tq,N,S_setReloadUrgencyType:,V_reloadUrgencyType
serverURL
T@"NSURL",&,N,S_setServerURL:,V_serverURL
T@"NSString",C,N,S_setVersion:,V_version
label
system
hide-item-if-restricted
logo-artwork-url
contentRatingDictionary
ratingSystemLogo
T@"SSItemArtworkImage",R,N
TB,R,N,GisExplicitContent
Tq,N
ratingDescription
ratingLabel
ratingSystem
shouldHideWhenRestricted
itunes-games
esrb
games
mpaa
bbfc
fr-cnc
de-fsk
ca-chvrs
ie-ifco
au-oflc
jp-eirin
nz-oflc
ch-movies
es-movies
it-movies
gr-movies
be-movies
nl-movies
lu-movies
mx-movies
se-movies
fi-movies
no-movies
dk-movies
pt-movies
ar-movies
bo-movies
br-movies
bg-movies
cl-movies
co-movies
cr-movies
cy-movies
cz-movies
ec-movies
sv-movies
ee-movies
gt-movies
hn-movies
hu-movies
lv-movies
lt-movies
mt-movies
ni-movies
pa-movies
py-movies
pe-movies
pl-movies
ro-movies
sk-movies
si-movies
uy-movies
ve-movies
jm-movies
gy-movies
sr-movies
gf-movies
do-movies
bn-movies
by-movies
cn-movies
ge-movies
hk-movies
id-movies
is-movies
kg-movies
kh-movies
kr-movies
kz-movies
la-movies
lk-movies
md-movies
mk-movies
mo-movies
my-movies
ph-movies
ru-movies
sg-movies
th-movies
tj-movies
tr-movies
tw-movies
ua-movies
uz-movies
vn-movies
us-tv
uk-tv
fr-tv
de-tv
ca-tv
au-tv
jp-tv
riaa
us-cable
apple
credentialSource
TQ,R,N,V_credentialSource
updatedAccount
T@"SSAccount",R,N,V_updatedAccount
events
override-headers
build-version
container-id
container-ids
container-type
device-name
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
household-id
internal-build
media-duration-in-milliseconds
media-type
persistent-id
personalized-container-id
player
private-enabled
event-reason-hint-type
reco-data
sb-enabled
siri-initiated
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
track-info
event-type
utc-offset-in-seconds
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
station-id
auc-adam-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
subscription-adam-id
X-Guid
currentStoreFrontID
T@"NSString",C,N,V_currentStoreFrontID
T@"NSString",C,V_accountName
biometricAuthorizationAttempts
Tq,V_biometricAuthorizationAttempts
challenge
T@"NSString",C,V_challenge
consolidatedDialog
T@"SSConsolidatedDialog",&,V_consolidatedDialog
T@"NSString",C,V_dialogId
didAuthenticate
TB,V_didAuthenticate
didBuyParamsChange
TB,V_didBuyParamsChange
TB,V_didFallbackToPassword
isIdentityMapInvalid
TB,V_isIdentityMapInvalid
isPayment
T@"NSString",C,V_passwordEquivalentToken
paymentSheet
T@"SSPaymentSheet",&,V_paymentSheet
redirectURL
T@"NSURL",C,V_redirectURL
shouldContinueTouchIDSession
TB,V_shouldContinueTouchIDSession
shouldSendFallbackHeader
TB,V_shouldSendFallbackHeader
signature
T@"NSString",C,V_signature
v24@?0@"SSVPlaybackAsset"8^B16
hls-key-cert-url
hls-key-server-url
is-itunes-stream
%@ [ID: %@, Assets: %@]
itemDictionary
T@"NSDictionary",R,C,N,V_itemDictionary
T@,R,C,N
HLSPlaylistURL
HLSKeyCertificateURL
HLSKeyServerURL
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
com.apple.itunesstored.xpc
SSXPCInAppReviewSandboxToken
^v16@?0@"NSObject<OS_xpc_object>"8
com.apple.storeservices.SSXPCConnection
disconnectBlock
messageBlock
com.apple.storeservices.SSDownloadManager.access
com.apple.storeservices.SSDownloadManager.background
com.apple.storeservices.SSDownloadManager.observer
Must have download kinds
Subclassing of SSDownloadManager is not supported
DownloadManager
SSDownloadManager: Reconnect global handler: %@
managerOptions
T@"SSDownloadManagerOptions",R
activeDownloads
prefetchedDownloadExternalProperties
T@"NSArray",C,N,V_prefetchedDownloadExternalProperties
ignoreDivertedDownloads
TB,N,V_ignoreDivertedDownloads
T@"NSArray",C,N,V_downloadKinds
persistenceIdentifier
T@"NSString",C,N,V_persistenceIdentifier
prefetchedDownloadProperties
T@"NSArray",C,N,V_prefetchedDownloadProperties
shouldFilterExternalOriginatedDownloads
TB,N,V_filterExternalOriginatedDownloads
cancelLabel
T@"NSString",C,V_cancelLabel
T@"NSString",C,V_title
com.apple.storeservices.SSEntity
%@: %lld
v32@?0@8Q16^B24
_persistentIdentifier
_localExternalValues
T@"NSDictionary",C,G_localExternalValues,S_setLocalExternalValues:
_localValues
T@"NSDictionary",C,G_localValues,S_setLocalValues:
_managed
TB,R,G_isManaged
exists
com.apple.storeservices.SSDownloadHandler.%p
com.apple.storeservices.SSDownloadHandler.delegate.%p
%@: Blocks: %d, Ignores: (%@)
%@: Connecting download handler: %lld
%@: Received message: (%lld, %lld)
handlerIdentifier
T@"<SSDownloadHandlerDelegate>"
downloadPhasesToIgnore
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
safariscriptdataupdate
SSScriptSafariViewControllerDataUpdateNotification
name=%@
skipDownloads
TB,N,V_skipDownloads
protocol
GoBack
invalidate-url-bags
ping
pings
refresh-subscription-status
selected-footer-section
set-current-user
store-version
redirect-url
tid-dialog
trigger-in-app-purchase-queue
client-id
environment
trigger-download
nil dictionary
T@"NSDictionary",R,N,V_dictionary
pingURLs
supportedProtocolVersion
TB,R,N,GisSupportedProtocolVersion
versionMismatchURL
T@"NSString",R,N,V_actionType
T@"SSAccount",R,N,V_account
T@"NSString",R,N,V_clientIdentifier
T@"NSString",R,N,V_creditsString
T@"SSDialog",R,N,V_dialog
footerSection
T@"NSString",R,N,V_footerSection
Tq,R,N,V_urlBagType
MicroPaymentQueue
SSResponseActionTypeCheckDownloadQueues
SSResponseActionTypeCheckInAppPurchaseQueue
SSResponseActionTypeDismissCurrentPage
SSResponseActionTypeGotoURL
SSResponseActionTypeInvalidateURLBags
SSResponseActionTypeOpenURL
SSResponseActionTypeRefreshSubscriptionStatus
SSResponseActionTypeRetryRestoreDownloads
SSResponseActionTypeSelectFooterSection
SSResponseActionTypeSetAccountCredits
SSResponseActionTypeSetActiveAccount
SSResponseActionTypeShowDialog
SSResponseActionTypeShowTouchIDDialog
pageType
nearbyApps
salableAdamId
assetStoreFront
ottLease
amd-finish-provisioning
subDownload
amd-sync-machine
_actionParameterValue
T@"NSString",R,C,N,G_actionParameterValue
_URLBagKey
T@"NSString",R,C,N,G_URLBagKey
_actionType
Tq,N,G_actionType,S_setActionType:,V_actionType
_leaseType
Tq,R,N,G_leaseType,V_leaseType
_KDMovieIdentifier
TQ,N,G_KDMovieIdentifier,S_setKDMovieIdentifier:,V_kdMovieIdentifier
_certificateData
T@"NSData",C,N,G_certificateData,S_setCertificateData:,V_certificateData
_URL
T@"NSURL",C,N,G_URL,S_setURL:,V_url
KDChannelIdentifier
TQ,N,V_kdChannelIdentifier
parameterValues
T@"NSDictionary",C,N,V_parameters
HTTPHeaderFields
T@"NSDictionary",C,N,V_httpHeaderFields
startsLeaseSession
TB,N,V_startsLeaseSession
address
altDsid
is-cloud-enabled
is-saga-enabled
services
locker
purchase-history
social
passwordToken
xToken
personInfo
acAccountName
customerMessage
errorKey
errorNumber
Tq,V_urlBagType
T@"NSDictionary",R,V_responseDictionary
accountUniqueIdentifier
managedStudent
TB,R,GisManagedStudent
TB,R,GisNewCustomer
token
responseType
userMessage
forgottenPassword
nil bagContext
com.apple.storeservices.SSURLBag
trustedDomains
B32@?0@"SSURLBag"8Q16^B24
T@"SSURLBagContext",R
com.apple.StoreServices.SSDownloadSession
%@: SessionID: %lld
download
T@"SSDownload",R
downloadAsset
T@"SSDownloadAsset",R
downloadPhase
duetTimeoutInterval
T@"NSNumber",R,V_duetTimeoutInterval
blocksOtherDownloads
canBePaused
needsPowerAssertion
authenticationChallenge
T@"NSURLAuthenticationChallenge",R
com.apple.StoreServices.SSDownloadAuthenticationChallengeSender
authenticationSession
T@"SSDownloadAuthenticationSession",R
com.apple.StoreServices.followup
com.apple.SSFollowUpIdentifier.RenewCredentials
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSFollowUpController.m
%{public}@: Refusing to dismiss a pending follow-up. The follow-up was not for the specified account. identifier = %{public}@ | account.identifier = %{public}@ | followUp.accountIdentifier = %{public}@
Refusing to dismiss a pending follow-up. The follow-up was not for the specified account.
@"SSPromise"16@?0@"FLFollowUpItem"8
B16@?0@"FLFollowUpItem"8
Unable to find a pending follow-up.
%{public}@: Failed to create a FLFollowUpItem for %{public}@
%{public}@: Nil altDSID in userInfo for renew credentials FLFollowUpItem.
FOLLOWUP_RENEW_CREDENTIALS_PRIMARY
Localizable
FOLLOWUP_RENEW_CREDENTIALS_MESSAGE
FOLLOWUP_RENEW_CREDENTIALS_MESSAGE_BLAME
FOLLOWUP_RENEW_CREDENTIALS_TITLE
Unable to create a FLFollowUpItem.
SSFollowUpController: Successfully posted the FLFollowUpItem. identifier = %{public}@
SSFollowUpController: Failed to post the FLFollowUpItem. identifier = %{public}@ | error = %{public}@
followUpController
T@"FLFollowUpController",&,N,V_followUpController
FLFollowUpController
Unable to find class %s
/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
AAFollowUpUserInfoAccountIdentifier
/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
AAFollowUpUserInfoAltDSID
FLFollowUpAction
AAFollowUpActionPrimary
AAFollowUpUserInfoClientName
FLFollowUpItem
FLGroupIdentifierAccount
v24@?0@"SSPersonalizeOffersResponse"8@"NSError"16
T@"<SSPersonalizeOffersDelegate>",D,N
personalizedItems
%@: (%lld, "%@")
T@"NSString",R,N,V_artistName
T@"SSItemImageCollection",R,N,V_imageCollection
T@"NSString",R,N,V_itemKind
Tq,R,N,V_pid
T@"NSString",R,N,V_releaseDateString
storeAccountIdentifier
T@"NSNumber",R,N,V_accountID
storeItemIdentifier
TQ,R,N,V_itemID
storePreorderIdentifier
TQ,R,N,V_preorderID
T@"NSString",R,N,V_title
com.apple.StoreServices.SSPreorderManager
com.apple.StoreServices.SSPreorderManager.observerQueue
itemKinds
drm-free
dimensions
store-front-id
ownerDsid
software-external-version-identifier
T@"NSString",C,N,V_bundleID
cloudItemID
T@"NSNumber",&,N
cloudMatchStatus
downloadKind
podcastEpisodeGUID
storeAccountAppleID
storeOriginalPurchaserAccountID
storeItemID
storeSoftwareVersionID
DRMFree
TB,N,GisDRMFree
storeFlavor
videoDimensions
com.apple.itunesstored.accounts
com.apple.itunesstored.askpermission
com.apple.itunesstored.biometrics
com.apple.itunesstored.claim-apps
com.apple.itunesstored.download-monitor
com.apple.itunesstored.downloads
com.apple.itunesstored.kbsync
com.apple.itunesstored.kvs
com.apple.itunesstored.lookup
com.apple.itunesstored.metrics
com.apple.itunesstored.purchase
com.apple.itunesstored.push-notifications
com.apple.itunesstored.software-library
com.apple.itunesstored.updates
com.apple.itunesstored.uploads
com.apple.itunesstored.private
com.apple.storekit.client-override
Invalid service name
com.apple.StoreServices.SSXPCServer
com.apple.StoreServices.SSXPCServer.main
[%@]: %@: Received message: %lld - [%@ %@]
observer
T@,N,V_observer
selector
T:,N,V_selector
Invalid port name
com.apple.StoreServices.SSDistributedNotificationCenter
Invalid name
Invalid block
namedPort
T@?,R,N,V_block
dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"NSString",R,N,V_name
com.apple.StoreServices.SSRollableLog
SSRollableLog
Failed to create directory, %@, for a log file. %@
logOptions
T@"SSLogFileOptions",R
complete
TB,R,N,GisComplete,V_complete
T@"NSNumber",R,V_accountIdentifier
T@"NSNumber",R,V_rentalKeyIdentifier
TB,N,V_success
v28@?0B8@"NSError"12@"NSArray"20
empty assetPaths
manifestType
contentTasteItemUpdates
T@"NSArray",C,N,V_contentTasteItemUpdates
shouldInvalidateLocalCache
TB,N,V_shouldInvalidateLocalCache
com.apple.StoreServices.SSEventMonitor.delegate
com.apple.StoreServices.SSEventMonitor
T@"<SSEventMonitorDelegate>"
SSEventNameDownloadStart
SSEventNameDownloadStop
SSEventNameAppUpdatesPollStart
SSEventNameAppUpdatesPollStop
SSEventKeyClientIdentifier
SSEventKeyDownloadAssetIdentifier
SSEventKeyDownloadClass
SSEventKeyDownloadIdentifier
SSEventKeyDownloadKind
SSEventKeyItemCount
SSEventKeySizeInBytes
SSEventKeyURLString
auto-update
restore
SSVMediaContentTasteItemContentType
SSVMediaContentTasteItemPlaylistGlobalID
SSVMediaContentTasteItemStoreAdamID
SSVMediaContentTasteItemTasteType
<%@ %p contentType:%@
 playlistGlobalID:'%@'
 storeAdamID:%lli
 tasteType:%td>
contentType
TQ,R,N,V_contentType
playlistGlobalID
T@"NSString",R,C,N,V_playlistGlobalID
storeAdamID
Tq,R,N,V_storeAdamID
tasteType
TQ,R,N,V_tasteType
TQ,D,N
SSVCookieStorageSharedCookiesDidChangeNotification
rescued.
Storage location must be a file URL
Attempted to access a database that is now owned by root. It's been abandoned and replaced by %@.
com.apple.StoreServices.SSVCookieStorage
v16@?0@"SSSQLiteDatabase"8
SSVCookieStorageSharedCookieDatabaseDidChangeDarwinNotification
%@: Could not create cookie storage path
Cookie
DELETE FROM cookies
(%@=?)
DELETE FROM cookies WHERE %@
 AND 
Invalid property value(s)
%{public}@: Cannot remove cookies for a nil DSID.
DELETE FROM cookies WHERE user=?
v32@?0@"NSNumber"8@"NSArray"16^B24
v20@?0B8@"NSHTTPCookie"12
https
%@: Feature Enabler removing ITFE cookie
%@: Feature Enabler updating ITFE cookie to value : %@
com.apple.storeservices.itfe
features
additionalFeatures
SELECT DISTINCT user FROM cookies;
discard
path
secure
SELECT discard, domain, expire_time, name, path, secure, value, version FROM cookies WHERE user=?;
SELECT name, value FROM cookies WHERE ((NOT secure OR secure=?) AND ((user=?) OR (user=-1)) AND ((expire_time=0) OR (expire_time>=?)) AND (SUBSTR(?,-LENGTH(domain))=domain) AND (SUBSTR(?,1,LENGTH(path))=path))
SELECT discard, domain, expire_time, name, path, secure, value, version FROM cookies WHERE ((NOT secure OR secure=?) AND ((user=?) OR (user=-1)) AND ((expire_time=0) OR (expire_time>=?)) AND (SUBSTR(?,-LENGTH(domain))=domain) AND (SUBSTR(?,1,LENGTH(path))=path))
X-Apple-Set-Cookie
Set-Cookie
X-Apple-Set-User-Cookie
INSERT OR REPLACE INTO cookies (discard, domain, expire_time, name, path, secure, user, value, version) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)
CREATE TABLE IF NOT EXISTS cookies(discard INTEGER DEFAULT 0, domain TEXT NOT NULL, expire_time REAL, name TEXT NOT NULL, path TEXT NOT NULL, secure INTEGER, user INTEGER DEFAULT 0, value TEXT NOT NULL, version INTEGER DEFAULT 1, PRIMARY KEY(name, domain, path, user))
DELETE FROM cookies WHERE ((expire_time!=0) AND (expire_time<?))
PRAGMA journal_mode=WAL;
Cookies
com.apple.itunesstored.2.sqlitedb
%@%@
storageLocation
object
URLBagDictionary
Invalid parameter value: %@
keyProfile
localizationStyle
Tq,N,V_localizationStyle
T@"CLLocation",C,N,V_location
T@"NSNumber",C,N,V_timeoutInterval
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
_lookupProperties
T@"SSLookupProperties",R,C,N
authenticatesIfNeeded
personalizationStyle
Tq,N,V_personalizationStyle
resultFilters
Tq,N,V_resultFilters
lockup
play
playlist-product
bundleId
storePlatformData
storePlatformPrewarmDataKey
lockup-search
results
poiBased
v32@?0@"SSLookupItem"8Q16^B24
itms-apps2://?action=lookup&i=%ld&r=%ld
&ids=
v32@?0@8@"NSDictionary"16^B24
T@"SSMetricsPageEvent",&,N,S_setMetricsPageEvent:,V_metricsPageEvent
allItems
metricsConfiguration
T@"SSMetricsConfiguration",R,N
isAuthenticated
artistUrl
contentRating
advisories
standard
genreNames
nameRaw
newsstandArtwork
offers
requiredCapabilities
screenshotsByType
ipad
iphone
iphone5
shortUrl
softwareInfo
hasInAppPurchases
isGameCenter
eulaUrl
privacyPolicyUrl
requirementsString
supportUrl
itunesNotes
userRating
ratingCount
ratingCountCurrentVersion
valueCurrentVersion
com.apple.StoreServices
com.apple.StoreServices.SSLogConfig
com.apple.StoreServices.accounts
authentication
logout
migration
migration-oversize
com.apple.StoreServices.bag
Daemon
Daemon-Oversize
com.apple.StoreServices.FairPlay
anisette
com.apple.StoreServices.FeatureEnabler
followup
iTunesStore
iTunesStore-Oversize
StoreServices
StoreServices-Oversize
  category: %@
  environment: %ld
  outputDirectory: %@
  outputFilename: %@
  subsystem: %@
  writeToDisk: %@
Logs
storeservices
%@_%@
backingLogFileOptions
T@"SSLogFileOptions",&,N,V_backingLogFileOptions
backingOSLogObject
T@"NSObject<OS_os_log>",&,N,V_backingOSLogObject
propertyAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_propertyAccessQueue
T@"NSString",C,N,V_category
TQ,N,V_environment
outputDirectory
T@"NSString",C,N,V_outputDirectory
outputFilename
T@"NSString",C,N,V_outputFilename
subsystem
T@"NSString",C,N,V_subsystem
writeToDisk
TB,N,V_writeToDisk
debugLogsEnabled
logFileOptions
T@"SSLogFileOptions",R,N
OSLogObject
T@"NSObject<OS_os_log>",R,N
shouldLog
shouldLogToDisk
appid
appsts
applicationIdentifier
T@"NSString",C,N,V_applicationIdentifier
applicationStates
T@"NSSet",C,N,V_applicationStates
family
accountNames
familyMembers
T@"NSArray",&,N,V_familyMembers
iTunesAccountNames
T@"NSArray",&,N,V_iTunesAccountNames
[%@ %@ %@ me:%d ic:%@ it:%@ atb:%d]
askToBuy
iCloudName
iCloudID
iTunesID
isMe
sharing
iTunesIdentifier
T@"NSNumber",&,N,V_iTunesIdentifier
iCloudIdentifier
T@"NSNumber",&,N,V_iCloudIdentifier
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
iCloudAccountName
T@"NSString",&,N,V_iCloudAccountName
TB,N,GisMe,V_me
sharingPurchases
TB,N,GisSharingPurchases,V_sharingPurchases
TB,R,N,V_askToBuy
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
/System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI
/System/Library/Frameworks/Accounts.framework/Accounts
/System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
/System/Library/PrivateFrameworks/BookLibrary.framework/BookLibrary
/System/Library/Frameworks/CoreTelephony.framework/CoreTelephony
/System/Library/Frameworks/CoreText.framework/CoreText
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
/System/Library/PrivateFrameworks/FTServices.framework/FTServices
/System/Library/PrivateFrameworks/iCloudNotification.framework/iCloudNotification
/System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities
/System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication
/System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
/System/Library/Frameworks/PassKit.framework/PassKit
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
/System/Library/Frameworks/QuartzCore.framework/QuartzCore
/System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomPresentationFeed.framework/SymptomPresentationFeed
/System/Library/Frameworks/UIKit.framework/UIKit
Could not load library [%ld]
SSAccountErrorDomain
bttlvl
cellds
szlmt
nwktps
powsts
regsts
tmlsts
usdfts
Tq,N,V_downloadSizeLimit
networkTypes
T@"NSSet",C,N,V_networkTypes
userDefaultStates
T@"NSSet",C,N,V_userDefaultStates
cellularAllowed
TB,R,N,GisCellularAllowed
wiFiAllowed
TB,R,N,GisWiFiAllowed
Tf,N,V_batteryLevel
cellularDataStates
Tq,N,V_cellularDataStates
powerStates
Tq,N,V_powerStates
registrationStates
Tq,N,V_registrationStates
timeLimitStates
Tq,N,V_timeLimitStates
rules
T@"NSString",R,N,V_downloadKind
Tq,R,N,V_bagType
policyRules
T@"NSArray",C,N,V_policyRules
accountHeader
caseControl
confirmationTitle
confirm
install
rent
countryCode
currency
displayPrice
flexList
header
headerIcon
valueStyle
paymentSummary
price
requestor
salableIcon
salableIconType
merchant
messages
watch
salableInfo
storeName
AppleMusic
AppleNews
gray
grey
enum
mtApp=com.apple.MobileSMS
mtApp=com.apple.AppStore.BridgeStoreExtension
[/b]
[br/]
[/i]
%%appleId%%
%%APPLE_ID%%
%@: Attempting to create AuthKit context with nil username
%@: Failed to lookup username, substituting empty string
%@: Failed to determine display username
PKPaymentContentItemLightColorAttribute
%@: Requestor key not found, attempting to infer requestor from title enumeration.
%@: No requestor identified for title: %@
%@: No requestor identified, title type is not enumeration
kCTFontAttributeName
CTFontCreateWithName
Helvetica-Bold
Helvetica-Italic
T@"NSString",C,V_accountHeader
T@"NSString",R,C,V_buyParams
confirmationTitleType
Tq,V_confirmationTitleType
T@"NSString",C,V_countryCode
currencyCode
T@"NSString",C,V_currencyCode
T@"NSString",C,V_displayPrice
displayPriceLabel
T@"NSAttributedString",R,C,V_displayPriceLabel
T@"NSString",C,V_explanation
T@"NSArray",R,V_flexList
T@"NSString",C,V_message
payeeType
Tq,V_payeeType
T@"NSString",C,V_paymentSummary
T@"NSNumber",C,V_price
ratingHeader
T@"NSString",C,V_ratingHeader
ratingValue
T@"NSString",C,V_ratingValue
Tq,V_salableIconType
salableIconURL
T@"NSURL",R,C,V_salableIconURL
salableIconURLString
T@"NSString",C,V_salableIconURLString
T@"NSArray",C,V_salableInfo
salableInfoLabel
T@"NSAttributedString",R,C,V_salableInfoLabel
shouldUppercaseText
TB,V_shouldUppercaseText
T@"NSString",C,V_storeName
titleType
Tq,V_titleType
T@"NSNumber",R,V_accountID
T@,C,V_contentIdentifier
keybagOptions
Tq,V_options
bundleShortVersionString
accountId
%@$$%@$$%@
beta
TB,N,GisBeta,V_beta
TB,N,GisLaunchProhibited,V_launchProhibited
placeholder
TB,N,GisPlaceholder,V_placeholder
profileValidated
TB,N,GisProfileValidated,V_profileValidated
isbg
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
redeemCodes
headless
TB,V_headless
cameraRecognized
TB,V_cameraRecognized
Send -init before checking visibility
No completion block
extensionIdentifier
response
T@"SSVPlaybackLeaseResponse",&,N,V_response
com.apple.StoreServices.SSVPlaybackLease.delegate
com.apple.StoreServices.SSVPlaybackLease
com.apple.itunesstored.PlaybackLeaseDidEnd
SSVPlaybackLeaseIgnorePushNotifications
v24@?0@"SSVPlaybackLeaseResponse"8@"NSError"16
%@: Schedule refresh in %.0f seconds
T@"<SSVPlaybackLeaseDelegate>",W
refreshesAutomatically
certificateData
T@"NSData",C
Token of class:%d ID:%ld length:%ld data:%@
tokenClass
TC,R,VmClass
TQ,R,VmIdentifier
length
TQ,R,VmLength
Tr*,R,VmContent
SET Token. (length:%ld)
SEQUENCE Token. (length:%ld)
INT Token. Value:%lld (%llx)
TQ,R,VmValue
T@"asn1Token",R,VmValue
multibyte ASN1 identifiers are  not supported.
failedCodes
redeemedCodes
v16@?0@"SSKeyValueStoreSession"8
B16@?0@"SSKeyValueStoreTransaction"8
DELETE FROM kvs_value;
com.apple.Preferences
%@: Removing account with duplicate AppleID: %@ / %@
localReadable
TB,R,GisLocalReadable
localWritable
TB,R,GisLocalWritable
DefaultAccountName
com.apple.StoreServices.SSLRUCache.accessQueue.%p
SSLRUCache
v32@?0@8@"SSDoubleLinkedListNode"16^B24
%@: %@ resulted in a cache miss.
%@: %@,
%@: Cache is full. The oldest object will be evicted.
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSMutableDictionary",&,N,V_backingDictionary
backingList
T@"SSDoubleLinkedList",&,N,V_backingList
count
TQ,R,N
maxSize
TQ,R,N,V_maxSize
T@"<NSCopying>",W,N,V_key
-----------------------------------------
com.apple.PlayActivityFeed
PlayActivityEvents.log
playActivityEvents
T@"NSArray",C,N,V_playActivityEvents
com.apple.StoreServices.SSCircularBuffer
currentIndex
TQ,N,V_currentIndex
buffer
T@"NSMutableArray",&,N,V_buffer
TQ,N
com.apple.StoreServices.SSErrorHandler.%p
com.apple.StoreServices.SSErrorHandler.delegate.%p
T@"<SSErrorHandlerDelegate>"
failureTypes
1.2.840.113635.100.6.2.1
[%@] Invalid receipt [%ld bytes] -- [%@]
Unparsed Data
[%@] Could not create decoder
[%@] Could not read data
[%@] Could not parse data
[%@] No content
[%@] Failed to load data
[%@] Failed to parse data
[%@] Parsing receipt
[%@] Receipt type: %@
[%@] AdamID: %@
[%@] BundleID: %@
[%@] Application version: %@
[%@] DSID: %@
[%@] SHA1: %lu
[%@] Transaction date: %@
[%@] FR tool version: %@
[%@] Parental controls: %@
[%@] DeveloperID: %@
[%@] Receipt created: %@
[%@] FR app version: %@
[%@] HW type: %@
[%@] DownloadID: %@
[%@] Installer versionID: %@
[%@] Receipt expires: %@
[%@] Receipt renewal: %@
[%@] Organization display name: %@
[%@] Cancellation reason: %@
[%@] Could not read certificates
[%@] Unexpected number of certificates
[%@] Intermediate certificate is missing
[%@] Could not create trust
[%@] Failed to update policies
[%@] Failed to anchor Apple root certificate
[%@] Could not set verification date
T@"NSDate",R,V_expirationDate
com.apple.springboard
SBLastSystemVersion
com.apple.migration
LastSystemVersion
[%{public}@] Feature Enabler migrating from version: %{public}@ to version: %{public}@
[%{public}@] Feature Enabler removing enabled features
com.apple.storeservices-itfe
performedMigration11
11.0
[%{public}@]: Enabling AMF by default for iOS 11
.compressed
.har
HTTP/1.1
SSHTTPArchiveShouldSaveToDiskNotification
SSHTTPArchiveShouldSaveToDiskDecompressedNotification
ISCopyGzippedDataForData
entries
%@ doesn't exist. There are no HAR files to cleanup.
Removing %@ to cleanup HAR log files.
Failed to remove %@. %@
App Store states is: %d
Launched App Store error: %@ state: %d
Failed to create directory, %@, for HTTP archive files. %@
%@_%f%@
Failed to write HTTP archive file. %@
Wrote HTTP archive file to: %@
bodySize
mimeType
com.apple.StoreServices.SSHTTPArchive
YYYY-MM-dd'T'HH:mm:ss.SZZZ
startedDateTime
time
request
creator
HTTPArchives
headersSize
httpVersion
/WebObjects/MZFinance.woa/wa/authenticate
REDACTED
postData
X-Apple-Connection-Reused
false
statusText
Content-Length
backingJSONData
T@"NSData",&,N,V_backingJSONData
compressed
TB,N,V_compressed
JSONData
JSONObject
JSONString
com.apple.StoreServices.SSErrorHandlerSession.%p
customerTitleMessage
nextActionUrl
failureClientInfo
SSUserNotificationKeyAccountName
SSUserNotificationKeyAttemptNumber
leaseRequest
T@"SSVPlaybackLeaseRequest",R,C
PRAGMA legacy_file_format = 0;
CREATE TABLE IF NOT EXISTS kvs_value (pid INTEGER, domain TEXT NOT NULL, key TEXT NOT NULL, value BLOB NOT NULL, UNIQUE (domain, key), PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS kvs_value_domain_key ON kvs_value (domain, key);
kvs.sqlitedb
v40@?0q8r^@16Q24^B32
database
T@"SSSQLiteDatabase",R,N,V_database
T@"NSString",C,N,S_setMD5:,V_md5
NetworkTimingMetrics
ISURLBagCache
performance
sessionDuration
samplingPercentageUsers
samplingPercentageCachedResponses
sessionDurationPageRender
samplingPercentageUsersPageRender
updateQueue
T@"SSCoalescingQueue",&,N,V_updateQueue
cachedValues
T@"NSDictionary",&,N,V_cachedValues
runningTests
TB,N,GisRunningTests,V_runningTests
values
sessionDurationLoadURL
samplingPercentageUsersLoadURL
samplingPercentageCachedResponsesLoadURL
facebook
twitter
pageAccessToken
T@"NSString",C,N,V_pageAccessToken
pageIdentifier
T@"NSString",C,N,V_pageIdentifier
accessToken
T@"NSString",C,N,V_accessToken
serviceIdentifier
T@"NSString",C,N,V_serviceIdentifier
[%{public}@]: percentComplete: %f
com.apple.bookassetd
%{public}@ is an unsupported deprecated method for book downloads
%{public}@ is an unsupported method for book downloads
downloadPhaseIdentifierOverride
T@"NSString",&,N,V_downloadPhaseIdentifierOverride
downloadStatus
T@"<SSBookDownloadStatus>",R,N,V_downloadStatus
downloadID
deepLink
authenticatesIfNecessary
TB,N,V_authenticatesIfNecessary
localizedAuthenticationReason
T@"NSString",C,N,V_localizedAuthenticationReason
carrierBundleProvisioningStyle
Tq,N,V_carrierBundleProvisioningStyle
T@"NSString",C,N,V_reason
kvs_value
XCTestProbe
isTesting
Invalid database URL
com.apple.iTunesStore.SSSQLiteDatabase.%p
UIApplicationBackgroundTaskWillExpireNotification
%@: Could not setup database: [%d, %@]
PRAGMA table_info(%@);
%@: Spin for SQL lock: %ld, spin count: [%ld, %s, %@]
%@: Could not execute SQL: %@: [%ld, %s, %@]
BEGIN DEFERRED TRANSACTION;
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
main
PRAGMA %@.user_version=%ld;
PRAGMA %@.user_version;
%@: Step failed: %s: [%d, %s]
%@: Taking process assertion
com.apple.StoreServices.SSSQLiteDatabase.%@
%@: Releasing process assertion
%@: Releasing process assertion, background task expired
%@: Could not open read-only db: [%d, %@]
%@: Could not open database, resetting: [%d, %@]
PRAGMA cache_size=512;
%@: Resetting after error: [%d, %@]
%@: Re-open database: %@
-shm
-wal
%@: Could not prepare statement: %@: [%d, %s, %@]
takesTaskCompletionAssertions
setupBlock
T@?,C,N,V_setupBlock
void SSSQLiteBindFoundationValueToStatement(sqlite3_stmt *, NSInteger, id)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSSQLiteDatabase.m
file-read-data
file-write-data
_ISSQLiteDispatchQueueTag
_SSVPlayActivityEventCoderDataRepresentation
<%@ %p persistentID:%llu
 containerID:'%@'
 containerIDs:'%@'
 containerType:%td
 deviceName:'%@'
 endReasonType:%td
 enqueuerProperties:'%@'
 eventDate:%@
 eventTimeZone:%@
 externalID:'%@'
 featureName:'%@'
 householdID:'%@'
 systemReleaseType: %li
 itemDuration:%f itemStartTime:%f itemEndTime:%f
 itemType:%td
 itemIDs:'%@'
 mediaType:%td
 offline:%@
 personalizedContainerID:'%@'
 hasRecommendationData:true
 privateListeningEnabled: %@
 SBEnabled:%@
 siriInitiated: %@
 sourceType:%td
 storeAccountID:%llu
 storeFrontID:%@
 storeID:'%@'
 requestingBundleIdentifier:'%@'
 requestingBundleVersion:'%@'
 timedMetadata(length):%td
 hasTrackInfo:true
Tq,R,N,V_version
T@"NSString",R,C,N,V_buildVersion
containerIDs
T@"SSVPlayActivityEventContainerIDs",R,C,N,V_containerIDs
containerType
TQ,R,N,V_containerType
dataRepresentation
T@"NSData",R,C,N
T@"NSString",R,C,N,V_deviceName
endReasonType
TQ,R,N,V_endReasonType
enqueuerProperties
T@"SSVPlayActivityEnqueuerProperties",R,C,N,V_enqueuerProperties
eventDate
T@"NSDate",R,C,N,V_eventDate
TQ,R,N,V_eventType
eventTimeZone
T@"NSTimeZone",R,C,N,V_eventTimeZone
featureName
T@"NSString",R,C,N,V_featureName
householdID
T@"NSString",R,C,N,V_householdID
itemIDs
T@"SSVPlayActivityEventItemIDs",R,C,N,V_itemIDs
itemDuration
Td,R,N,V_itemDuration
itemEndTime
Td,R,N,V_itemEndTime
itemStartTime
Td,R,N,V_itemStartTime
itemType
TQ,R,N,V_itemType
mediaType
TQ,R,N,V_mediaType
TB,R,N,GisOffline,V_offline
persistentID
T@"NSNumber",R,C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
reasonHintType
TQ,R,N,V_reasonHintType
recommendationData
T@"NSData",R,C,N,V_recommendationData
requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",R,C,N,V_requestingBundleVersion
TB,R,N,GisSBEnabled,V_SBEnabled
siriInitiated
T@"NSNumber",R,C,N,GisSiriInitiated,V_siriInitiated
sourceType
TQ,R,N,V_sourceType
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_storeFrontID
Tq,R,N,V_systemReleaseType
timedMetadata
T@"NSData",R,C,N,V_timedMetadata
trackInfo
T@"NSData",R,C,N,V_trackInfo
containerID
T@"NSString",R,C,N,V_containerID
externalID
T@"NSString",R,C,N,V_externalID
internalBuild
TB,R,N,GisInternalBuild
personalizedContainerID
T@"NSString",R,C,N,V_personalizedContainerID
storeID
T@"NSString",R,C,N,V_storeID
T@"SSVPlayActivityEventContainerIDs",C,D,N
T@"SSVPlayActivityEnqueuerProperties",C,D,N
T@"NSDate",C,D,N
T@"NSTimeZone",C,D,N
T@"SSVPlayActivityEventItemIDs",C,D,N
TB,D,N,GisOffline
T@"NSNumber",C,D,N,GisPrivateListeningEnabled
T@"NSData",C,D,N
TB,D,N,GisSBEnabled
T@"NSNumber",C,D,N,GisSiriInitiated
TB,D,N,GisInternalBuild
ROWID
%@: Unrecognized client key: %@
+[%@ databaseTable] not implemented
%@.%@
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
SELECT 
 FROM 
 WHERE 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
DELETE FROM %@ WHERE %@ = ?;
Tq,R,N,V_persistentID
existsInDatabase
property
T@"NSString",R,N,V_property
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSSQLitePredicate.m
Unsupported predicate value: %@
%@ %@ ?
 LIKE 
Invalid comparison type: %ld
comparisonType
Tq,R,N,V_comparisonType
T@,R,N,V_value
 NOT IN (
 IN (
negative
TB,R,N,GisNegative,V_negative
T@"SSSQLiteQuery",R,N,V_query
queryProperty
T@"NSString",R,N,V_queryProperty
T@"NSArray",R,N,V_values
IS NULL
IS NOT NULL
matchesNull
TB,R,N,V_matchesNull
 OR 
predicates
T@"NSArray",R,N,V_predicates
DESC
v32@?0q8Q16^B24
CREATE TEMPORARY TABLE 
 AS 
T@"SSSQLiteDatabase",R
queryDescriptor
T@"SSSQLiteQueryDescriptor",R
countOfEntities
DISTINCT 
 FROM %@
 ORDER BY 
 LIMIT ?
entityClass
T#,N,V_entityClass
memoryEntityClass
T#,N,V_memoryEntityClass
limitCount
Tq,N,V_limitCount
orderingClause
T@"NSString",C,N,V_orderingClause
orderingDirections
T@"NSArray",C,N,V_orderingDirections
orderingProperties
T@"NSArray",C,N,V_orderingProperties
returnsDistinctEntities
TB,N,V_returnsDistinctEntities
predicate
T@"SSSQLitePredicate",C,N,V_predicate
%@(%@)
COUNT
v32@?0@"SSMemoryEntity"8Q16^B24
v16@?0@"SSPromiseResult"8
%{public}@: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %{public}@ error = %{public}@
%{public}@: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
%{public}@: Someone is attempting to finish or cancel a finished SSPromise.
com.apple.StoreServices.SSPromise.globalPromiseStorageAccessQueue
completionBlocks
T@"SSPromiseCompletionBlocks",&,N,V_completionBlocks
promiseResult
T@"SSPromiseResult",&,N,V_promiseResult
stateLock
T@"NSConditionLock",&,N,V_stateLock
cancelled
TB,R,N,GisCancelled
finished
TB,R,N,GisFinished
databaseID
Tq,N,V_databaseID
propertyValues
T@"NSDictionary",R,C,N,V_propertyValues
externalPropertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
cancelsPurchaseBatch
TB,N,V_cancelsPurchaseBatch
purchase
T@"SSPurchase",C,N,V_purchase
T@"SSURLConnectionResponse",&,N,V_response
downloadIdentifiers
T@"NSArray",C,N,V_downloadIdentifiers
requestStartTime
Td,N,V_requestStartTime
responseEndTime
Td,N,V_responseEndTime
responseStartTime
Td,N,V_responseStartTime
encodedDialog
T@"NSObject<OS_xpc_object>",R,N,V_dialog
authenticatedAccountIdentifier
T@"NSNumber",C,N,V_authenticatedAccountIdentifier
performedButtonIndex
Tq,N,V_performedButtonIndex
T@"NSURL",C,N,V_redirectURL
selectedButtonIndex
Tq,N,V_selectedButtonIndex
com.apple.itunescloudd.playactivity
SSVPlayActivityControllerEndpointIdentifierJingle
SSVPlayActivityControllerEndpointIdentifierPairedDevice
SSVPlayActivityControllerDidRecordPlayActivityEventsNotification
SSVPlayActivityControllerEndpointRevisionInformationDidChangeNotification
SSVPlayActivityControllerUserInfoKeyEndpointIdentifier
SSVPlayActivityControllerUserInfoKeyEndRevision
SSVPlayActivityControllerUserInfoKeyStartRevision
SSVPlayActivityEndpointRevisionInformation
AdditionalPendingRevisions
CurrentRevision
RevisionVersionToken
com.apple.StoreServices.SSVPlayActivityController.accessQueue
com.apple.StoreServices.SSVPlayActivityController.serialQueue
[%@] Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
[%@] Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
[%@] Error %{public}@ flushing play activity events for %{public}@
[%@] Finished flushing play activity events for %{public}@ with error %{public}@
v32@?0@"_SSVPlayActivityFlushSessionInformation"8@"NSArray"16@"NSError"24
[%@] Recording play activity events: %@
ShouldDebugLogRecordedEvents
com.apple.StoreServices.SSVPlayActivityController.debugLogOperationQueue
[%@] Error %{public}@ recording %lu play activity events
[%@] Finished recording %lu play activity events with error %{public}@
[SSVPlayActivityController] Removing play events up to revision: %llu
[%@] Error %{public}@ removing play activity events upto revision %llu
[%@] Finished removing play activity events upto revision %llu with error %{public}@
[%@] Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
[%@] Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
[%@] Error %{public}@ getting play activity events for end point identifier %{public}@
[%@] Finished getting %lu play activity events for end point identifier %{public}@
v32@?0@"NSArray"8Q16@"NSError"24
[SSVPlayActivityController] Completing pending play events for revision index set: %@ session token: %llu with result: %lu
[SSVPlayActivityController] Session information: %@
[SSVPlayActivityController] Removing pending revisions index set %@ from sessionInformation revisions index set: %@
[SSVPlayActivityController] Resulting index set: %@
[SSVPlayActivityController] Existing additional pending revisions index set: %@
[SSVPlayActivityController] New additional pending revisions index set from flush success: %@
[SSVPlayActivityController] New additional pending revisions index set from flush failure: %@
[SSVPlayActivityController] Revisions version token has changed, clearing out.
[SSVPlayActivityController] Connection to daemon play activity controller lost.
[SSVPlayActivityController] Connection to daemon play activity controller invalidated.
v32@?0Q8@"NSString"16@"NSError"24
writingStyle
TQ,R,N,V_writingStyle
additionalPendingRevisionsIndexSet
T@"NSIndexSet",C,N,V_additionalPendingRevisionsIndexSet
currentRevision
TQ,N,V_currentRevision
revisionVersionToken
T@"NSString",C,N,V_revisionVersionToken
endpointIdentifier
T@"NSString",C,N,V_endpointIdentifier
revisionsIndexSet
T@"NSIndexSet",&,N,V_revisionsIndexSet
sessionToken
TQ,N,V_sessionToken
com.apple.StoreServices.SSVPlayActivityControllerEndpointRevisionInformationDidChange
com.apple.StoreServices.SSPurchaseManager.%@.%p
com.apple.StoreServices.SSPurchaseManager.completion.%@.%p
com.apple.Music.StoreFlowExtension
[%{public}@]: [%{public}@] Initiating authentication request
[%{public}@]: [%{public}@] Authentication request completed with error: %{public}@
[%{public}@]: Received authentication request but context was missing or invalid
buyProduct
managerIdentifier
T@"<SSPurchaseManagerDelegate>"
ISMachineDataActionOperation
actionData
actionName
protocolVersion
waitsForPurchaseOperations
personID
_ss_altDSID
_ss_DSID
_ss_hashedDescription
_ss_isAppleAuthenticationAccount
_ss_isiCloudAccount
_ss_isIDMSAccount
_ss_isiTunesAccount
_ss_isLocalAccount
_ss_secureToken
T@"NSString",C,N,S_ss_setSecureToken:
locationPosition
locationType
Tq,N,V_position
reportingDictionary
fcKind
longName
shortName
cacheTimestamp
ISO3Country
dsId
storeFrontId
subscriptions
inAppSubscriptions
chargeStoreFrontId
EEE MMM dd HH:mm:ss z yyyy
isNewsAppPurchase
cachedTimestamp
T@"NSDate",C,N,V_cachedTimestamp
accountStoreFrontIdentifier
T@"NSNumber",C,N,V_accountStoreFrontIdentifier
accountISO3Country
T@"NSString",C,N,V_accountISO3Country
entitledSubscriptions
T@"NSArray",C,N,V_entitledSubscriptions
latestTermsVersionId
isCurrent
termsContentText
userAccepted
TB,N,GisUserAccepted,V_userAccepted
currentText
T@"NSString",N,V_text
currentVersionIdentifier
Tq,N,V_versionID
requiresAuthentication
TB,R,N,V_requiresAuthentication
coverImage
v32@?0@"NSString"8@"SSVMediaSocialPostAttachment"16^B24
artists
T@"NSArray",C,N,V_artists
albumIdentifier
T@"NSString",C,N,V_albumIdentifier
attachmentDescription
T@"NSString",C,N,V_attachmentDescription
TB,N,GisExplicitContent,V_explicitContent
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_title
assetData
T@"NSData",C,N,V_assetData
assetURL
T@"NSURL",C,N,V_assetURL
attachmentType
T@"NSString",C,N,V_uti
deletesAssetWhenFinished
TB,N,V_deletesAssetWhenFinished
previewFrameTimestamp
Td,N,V_previewFrameTimestamp
com.apple.coreaudio-format
SSEncodingDictionary
categoryNames
displayName
POIBased
TB,R,N,GisPOIBased
productPageURL
numberOfUserRatingsForCurrentVersion
userRatingForCurrentVersion
lookupDictionary
admin
eligible
notEligible
unlinked
needsManualVerification
%@ accountIdentifier %@ accountStatus %@ carrierBundlingStatus: %@
astv
lstv
prms
isPurchaser
hasOfflineSlots
isNotEligibleForFreeTrial
isFuseEnabled
Enabled
Carrier
Family
Disabled
InvalidToken
Discovery
Unlinked
hasFamily
hasFamilyGreaterThanOneMember
isHoH
terms
Store
agreedToTerms
latestTerms
isAdmin
accountPermissions
T@"NSArray",C,N,V_accountPermissions
accountStatus
Tq,N,V_accountStatus
acceptedStoreTermsVersion
TQ,N,V_acceptedStoreTermsVersion
carrierBundlingStatus
Tq,N,V_carrierBundlingStatus
cellularOperatorName
T@"NSString",C,N,V_cellularOperatorName
discoveryModeEligible
TB,N,GisDiscoveryModeEligible,V_discoveryModeEligible
familyOrganizer
TB,N,GisFamilyOrganizer,V_familyOrganizer
familySubscription
TB,N,GisFamilySubscription,V_familySubscription
freeTrialIneligible
TB,N,GisFreeTrialIneligible,V_freeTrialIneligible
TB,N,V_hasFamily
hasFamilyMembers
TB,N,V_hasFamilyMembers
TB,N,V_hasOfflineSlots
latestStoreTermsVersion
TQ,N,V_latestStoreTermsVersion
T@"NSString",C,N,V_phoneNumber
T@"NSDictionary",C,N,V_rawResponseData
TB,N,GisSubscribed
subscriptionExpirationDate
T@"NSDate",C,N
subscriptionPurchaser
TB,N,GisSubscriptionPurchaser,V_subscriptionPurchaser
hasOfflineSlot
TB,R,N,V_hasOfflineSlot
SSUpdatableAssetManifestJSONParserErrorDomain
ignoreMD5s
${OS_VERSION}
reloadUrgency
restart
onResume
mainAssetMD5
dependencies
GetMACAddress returned 0x%08x
FindEthernetInterfaces returned 0x%08x
get_mac_address
[%s] -- Input buffer too small [%d < %d]
IONetworkController
IOServiceMatching kIONetworkControllerClass: %@
IOPrimaryInterface
IOPropertyMatch
CFDictionaryCreateMutable returned a NULL dictionary.
IOServiceMatching returned a NULL dictionary for kIONetworkControllerClass.
IOServiceGetMatchingServices returned 0x%08x
IOServiceGetMatchingServices iterator %u
IOService
IOMACAddress
IORegistryEntryCreateCFProperty produced bytes
IORegistryEntryCreateCFProperty failed
IORegistryEntryGetParentEntry returned 0x%08x
bgColor
textColor1
textColor2
textColor3
textColor4
com.apple.StoreServices.SessionManager.eventqueue
com.apple.StoreServices.SessionManager.sendTimingData
com.apple.StoreServices.SessionManager.sessions
com.apple.StoreServices.SessionManager.taskDelegates
com.apple.StoreServices.SessionManager.requestData
com.apple.StoreServices.SessionManager.responseData
com.apple.StoreServices.SessionManager.recordResponse
%@: Created a nil NSURLSessionTask for %@.
_kCFNTimingDataConnectEnd
_kCFNTimingDataConnectionReused
_kCFNTimingDataConnectStart
_kCFNTimingDataDomainLookupEnd
_kCFNTimingDataDomainLookupStart
_kCFNTimingDataFetchStart
_kCFNTimingDataRedirectCount
_kCFNTimingDataRedirectEnd
_kCFNTimingDataRedirectStart
_kCFNTimingDataRequestStart
_kCFNTimingDataResponseEnd
_kCFNTimingDataResponseStart
_kCFNTimingDataSecureConnectionStart
X-CACHE
_kCFNTimingDataConnectionStartTimeCounts
_kCFNTimingDataNStatRXBytes
_kCFNTimingDataNStatTXBytes
_kCFNTimingDataConnectionStopTimeCounts
Network Timing Metrics: %@
Flushing HTTP Archive (HAR) buffer. Count : %ld
%@: A nil value was loaded from the bag for key %@.
urlcache
[%@] [%@] [%@] [%@]
%@: Creating a new NSURLSession with identifier %@.
com.apple.itunesstore
.client-%@
.auditToken-%d-%ld
.setcookies
.collecttimingdata
.requirescellular
.allowscellular
.cache-%@
[%@]: Metrics network inquiry error occurred. Error: %@
[%@]: Received low memory warning. Reducing HAR buffer size by: %lu
[%@]: No longer in low memory state. Increasing HAR buffer size
Writing %ld HTTP Archive file(s) to disk.
application/javascript
application/x-javascript
text/html
text/xml
text/xml+itml
eventQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_eventQueue
httpArchiveBuffer
T@"SSCircularBuffer",&,N,V_httpArchiveBuffer
metricsController
T@"SSMetricsController",&,N,V_metricsController
requestData
T@"NSMutableDictionary",&,N,V_requestData
requestDataQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestDataQueue
responseData
T@"NSMutableDictionary",&,N,V_responseData
responseDataQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_responseDataQueue
recordResponseMap
T@"NSMutableDictionary",&,N,V_recordResponseMap
recordResponseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordResponseQueue
sendTimingDataMap
T@"NSMutableDictionary",&,N,V_sendTimingDataMap
sendTimingDataQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sendTimingDataQueue
sessions
T@"NSMutableDictionary",&,N,V_sessions
sessionsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionsQueue
taskDelegates
T@"NSMapTable",&,N,V_taskDelegates
taskDelegatesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_taskDelegatesQueue
httpArchiveBufferSize
customURLProtocols
T@"NSArray",C,N,V_customURLProtocols
ISURLOperation
<%@ %p hasSubscriptionLease:%@ hasSubscriptionSlot:%@>
hasSubscriptionLease
TB,N,V_hasSubscriptionLease
hasSubscriptionSlot
TB,N,V_hasSubscriptionSlot
xp_amp_clientperf
clientCorrelationKey
clientError
connectionEndTime
connectionReused
connectionStartNStatRXBytes
connectionStartNStatTXBytes
connectionStopNStatRXBytes
connectionStopNStatTXBytes
connectionStartTime
connectionType
dnsServersIPAddresses
domainLookupEndTime
domainLookupStartTime
edgeNodeCacheStatus
fetchStartTime
networkQualityReports
redirectCount
redirectEndTime
requestMessageSize
redirectStartTime
requestUrl
resolvedIPAddress
responseMessageSize
secureConnectionStartTime
statusCode
tidState
xpSessionDuration
xpSamplingForced
xpSamplingPercentageUsers
xpSamplingPercentageCachedResponses
clientCorrelationKey = %@
requestUrl = %@
connectionType = %@
dnsServers = %@
resolvedIPAddress = %@
statusCode = %ld
tidState = %@
clientError = %@
fetchStartTime = %f
domainLookupStartTime = %f
domainLookupEndTime = %f
connectionStartTime = %f
connectionStartNStatRXBytes = %ld
connectionStartNStatTXBytes = %ld
secureConnectionStartTime = %f
connectionEndTime = %f
connectionStopNStatRXBytes = %ld
connectionStopNStatTXBytes = %ld
connectionReused = %@
requestStartTime = %f
responseStartTime = %f
responseEndTime = %f
redirectStartTime = %f
redirectEndTime = %f
redirectCount = %ld
xpSamplingForced = %@
xpSamplingPercentageCachedResponses = %f
xpSamplingPercentageUsers = %f
xpSessionDuration = %f
requestMessageSize = %lu
esponseMessageSize = %lu
TimingMetricsWindowStartTime
T@"NSString",&,N
Td,N
DNSServers
originalApp
requestURL
TIDState
Td,N,SsetXPSessionDuration:
TB,N,SsetXPSamplingForced:
Td,N,SsetXPSamplingPercentageUsers:
Td,N,SsetXPSamplingPercentageCachedResponses:
actionText
priceFormatted
subscription
formattedPrice
offerType
subscriptionType
downloaded
downloading
long
medium
short
SSVMediaSocialAdminPermissionsOptionIgnoreCache
com.apple.StoreKitUI.SKUIMediaSocialAdminPermissionsCoordinator
v24@?0B8B12@"NSError"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSVMediaSocialAdminPermissionsCoordinator.m
adminStatus
isCurrentUserAdmin
refreshPeriod
Td,V_refreshPeriod
MediaSocialRefreshPeriodKey
MediaSocialSavedAdminStatusesKey
subscriptionAdamID
purchasedAdamID
radioAdamID
itemCloudID
lyricsID
equivalencySourceAdamID
containerAdamID
globalPlaylistID
stationHash
stationStringID
stationID
cloudAlbumID
cloudPlaylistID
playlistVersionHash
eventDateTimestamp
eventTimeZoneName
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
eventSecondsFromGMT
hasEventType
Ti,N,V_eventType
hasReasonHintType
Ti,N,V_reasonHintType
hasSubscriptionAdamID
Tq,N,V_subscriptionAdamID
hasPurchasedAdamID
Tq,N,V_purchasedAdamID
hasRadioAdamID
Tq,N,V_radioAdamID
hasItemCloudID
TQ,N,V_itemCloudID
hasLyricsID
T@"NSString",&,N,V_lyricsID
hasEquivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
hasContainerAdamID
Tq,N,V_containerAdamID
hasGlobalPlaylistID
T@"NSString",&,N,V_globalPlaylistID
hasStationHash
T@"NSString",&,N,V_stationHash
hasStationStringID
T@"NSString",&,N,V_stationStringID
hasStationID
Tq,N,V_stationID
hasCloudAlbumID
T@"NSString",&,N,V_cloudAlbumID
hasCloudPlaylistID
TQ,N,V_cloudPlaylistID
hasPlaylistVersionHash
T@"NSString",&,N,V_playlistVersionHash
hasContainerType
Ti,N,V_containerType
hasEndReasonType
Ti,N,V_endReasonType
hasEventDateTimestamp
Td,N,V_eventDateTimestamp
hasFeatureName
T@"NSString",&,N,V_featureName
hasItemDuration
Td,N,V_itemDuration
hasItemEndTime
Td,N,V_itemEndTime
hasItemStartTime
Td,N,V_itemStartTime
hasItemType
Ti,N,V_itemType
hasMediaType
Ti,N,V_mediaType
hasOffline
TB,N,V_offline
hasPersistentID
Tq,N,V_persistentID
hasSourceType
Ti,N,V_sourceType
hasTimedMetadata
T@"NSData",&,N,V_timedMetadata
hasTrackInfo
T@"NSData",&,N,V_trackInfo
hasRecommendationData
T@"NSData",&,N,V_recommendationData
hasRequestingBundleIdentifier
T@"NSString",&,N,V_requestingBundleIdentifier
hasRequestingBundleVersion
T@"NSString",&,N,V_requestingBundleVersion
hasEnqueuerProperties
T@"SSVPBPlayActivityEnqueuerProperties",&,N,V_enqueuerProperties
hasHouseholdID
T@"NSString",&,N,V_householdID
hasSiriInitiated
TB,N,V_siriInitiated
hasEventTimeZoneName
T@"NSString",&,N,V_eventTimeZoneName
hasContainerID
T@"NSString",&,N,V_containerID
hasPersonalizedContainerID
T@"NSString",&,N,V_personalizedContainerID
hasStoreID
T@"NSString",&,N,V_storeID
hasExternalID
T@"NSString",&,N,V_externalID
hasTvShowPurchasedAdamID
Tq,N,V_tvShowPurchasedAdamID
hasTvShowSubscriptionAdamID
Tq,N,V_tvShowSubscriptionAdamID
hasInternalBuild
TB,N,V_internalBuild
hasEventSecondsFromGMT
Td,N,V_eventSecondsFromGMT
PlayEnd
PlayStart
LyricDisplay
ContainerChanged
RadioStation
Playlist
Album
Artist
NotApplicable
Other
SkipBackward
SkipForward
QueueChange
ManualPause
Interruption
InactivityPause
InactivitySessionEnd
NaturalTransition
AssetLoadFailure
ScrubBegin
ScrubEnd
QuickPlay
iTunesStoreContent
AudioClip
Stream
TimedMetadataPing
UploadedContent
AggregateNonCatalogPlayTime
Movie
TVEpisode
Audio
Video
Device
PairedWatch
RemoteControl
SSSoftwareUpdatesStoreDidChangeNotification
com.apple.StoreServices.SSSoftwareUpdatesStore.%p
com.apple.StoreServices.SSSoftwareUpdatesStore.callout.%p
leaseType
Tq,R,N,V_leaseType
beginLeaseURL
T@"NSURL",C,N,V_beginLeaseURL
T@"NSURL",C,N,V_certificateURL
getAssetURL
T@"NSURL",C,N,V_getAssetURL
refreshLeaseURL
T@"NSURL",C,N,V_refreshLeaseURL
T@"NSURL",C,N,V_pastisCertificateURL
T@"NSURL",C,N,V_pastisKeyServerURL
provisionMachineURL
T@"NSURL",C,N,V_provisionMachineURL
syncMachineURL
T@"NSURL",C,N,V_syncMachineURL
T@"NSString",C,N,V_storeFrontSuffix
v24@?0@"SSFamilyCircleResponse"8@"NSError"16
authenticationPromptStyle
Tq,N,V_authenticationPromptStyle
fetchITunesAccountNames
TB,N,V_fetchITunesAccountNames
familyCircle
T@"SSFamilyCircle",&,N,V_familyCircle
notification-type
media-kinds
put-parameters
environmentName
T@"NSString",C,N,V_environmentName
mediaKinds
notificationType
putParameters
requestType
Tq,N,V_requestType
mzbookkeeper
T@"NSArray",R,V_sinfs
<%@ %p
 buildVersion: %@
 deviceGUID: %@
 deviceName: %@
 SBEnabled: %@
 storeAccountID: %llu
 storeFrontID: %@
 timeZone:%@
timeZone
T@"NSString",R,C,N,V_deviceGUID
T@"NSTimeZone",R,C,N,V_timeZone
Must have upload kinds
com.apple.StoreServices.SSVDirectUploadQueue
com.apple.StoreServices.SSVDirectUploadQueue.observers
%@: Unrecognized message: %lld
B32@?0@"SSVDirectUpload"8Q16^B24
uploadKinds
parental_control_attributes
rating-software
updateDictionary
installDate
T@"NSDate",C,N,V_installDate
parentalControlsRank
updateState
Tq,N,V_updateState
xpcData must be non-nil
xpcData
T@"NSObject<OS_xpc_object>",R,N,V_xpcData
 adamID: %lli
 cloudAlbumID: %@
 cloudPlaylistID: %llu
 globalPlaylistID: %@
 playlistVersionHash: %@
 stationHash: %@
 stationStringID: %@
 stationID: %lli
SSVPlayActivityEventContainerIDsAdamID
SSVPlayActivityEventContainerIDsCloudAlbumID
SSVPlayActivityEventContainerIDsCloudPlaylistID
SSVPlayActivityEventContainerIDsGlobalPlaylistID
SSVPlayActivityEventContainerIDsPlaylistVersionHash
SSVPlayActivityEventContainerIDsStationHash
SSVPlayActivityEventContainerIDsStationStringID
SSVPlayActivityEventContainerIDsStationID
adamID
Tq,R,N,V_adamID
T@"NSString",R,C,N,V_cloudAlbumID
TQ,R,N,V_cloudPlaylistID
T@"NSString",R,C,N,V_globalPlaylistID
T@"NSString",R,C,N,V_playlistVersionHash
T@"NSString",R,C,N,V_stationHash
T@"NSString",R,C,N,V_stationStringID
Tq,R,N,V_stationID
SSVFairPlaySubscriptionControllerSubscriptionStatusDidChangeNotification
com.apple.StoreServices.SSVFairPlaySubscriptionController.accessQueue
sbKeyBag
subKeyBag
SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
[%@] Fatal Error: Failed to create the database schema
B16@?0@"SSAppPurchaseHistoryTransaction"8
[%@] Posting SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
DELETE FROM %@
DELETE FROM %@ WHERE %@ != '%@'
SELECT value FROM db_properties WHERE key = ?
[%s:%d] Unsupported predicate value: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/iTunesStore-1444.3.10/StoreServices/SSAppPurchaseHistoryDatabase.m
INSERT OR REPLACE INTO db_properties (value, key) VALUES (?, ?);
DELETE FROM db_properties WHERE key = ?;
v24@?0@"SSVCloudServiceCapabilitiesResponse"8@"NSError"16
v16@?0@"NSMutableURLRequest"8
accountless-streaming
assetStoreFrontIdentifier
[%@] Unsuccessful database migration function from %ld => %ld [Failure Count: %d]
[%@] Failed to migrate the DB %d times. [%ld vs %ld] Giving up, but nothing will work from this point forward. exit(1) crosses my mind, but probably not the right thing to do.
[%@] Although database migration function failed from %d => %d -- The schema did change. Perhaps another process is updating the database: [Currently at: %d]
Caches
com.apple.storeservices
AppPurchaseHistory.6.sqlitedb
CREATE TABLE IF NOT EXISTS app_purchase_history (pid INTEGER, account_unique_identifier INTEGER,category TEXT, company_title TEXT, content_rating_flags INTEGER, bundle_id TEXT, date_updated INTEGER, date_purchased INTEGER, download_size INTEGER, flavors TEXT, has_messages_extension INTEGER DEFAULT 0, is_hidden_from_springboard INTEGER DEFAULT 0, icon_title TEXT, icon_token TEXT, icon_url TEXT, oval_icon_token TEXT, oval_icon_url TEXT, is_family_shareable INTEGER DEFAULT 0, is_first_party INTEGER DEFAULT 0, is_newsstand INTEGER DEFAULT 0, is_hidden INTEGER DEFAULT 0, long_title TEXT, minimum_os INTEGER, purchased_token INTEGER,store_id INTEGER, supports_ipad INTEGER DEFAULT 0, supports_iphone INTEGER DEFAULT 0, redownload_params TEXT, version_human_readable TEXT, version_itunes INTEGER, vpp_is_licensed INTEGER DEFAULT 0, is_32_bit_only INTEGER DEFAULT 0, is_preorder INTEGER DEFAULT 0, required_capabilities TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS db_properties (key TEXT PRIMARY KEY, value TEXT)
CREATE TABLE IF NOT EXISTS app_purchase_history_accounts (account_unique_identifier INTEGER, local_revision INTEGER, PRIMARY KEY (account_unique_identifier));
CREATE INDEX IF NOT EXISTS app_purchase_history_store_id ON app_purchase_history (store_id);
CREATE INDEX IF NOT EXISTS app_purchase_history_category ON app_purchase_history (category);
CREATE INDEX IF NOT EXISTS app_purchase_history_bundle_id ON app_purchase_history (bundle_id);
CREATE INDEX IF NOT EXISTS app_purchase_history_account_unique_identifier ON app_purchase_history (account_unique_identifier);
SELECT value FROM db_properties WHERE key="app_purchase_history.localRevision";
SELECT value FROM db_properties WHERE key="app_purchase_history.account_unique_identifier";
DELETE FROM db_properties WHERE key="app_purchase_history.localRevision";
ALTER TABLE app_purchase_history ADD COLUMN is_family_shareable INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN vpp_is_licensed INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_first_party INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN has_messages_extension INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_hidden_from_springboard INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN oval_icon_token TEXT;
ALTER TABLE app_purchase_history ADD COLUMN oval_icon_url TEXT;
ALTER TABLE app_purchase_history ADD COLUMN is_32_bit_only INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_preorder INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN required_capabilities TEXT;
com.apple.MediaSocial.adminStatus
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
MZStorePlatform
bagDictionary
lookupURLString
T@"NSString",R,N,V_lookupURLString
unpersonalizedLookupURLString
T@"NSString",R,N,V_unpersonalizedLookupURLString
signedHeaders
T@"NSArray",R,N,V_signedHeaders
signedQueryParameters
T@"NSArray",R,N,V_signedQueryParameters
SAPContext
T@"<SSVSAPContext>",&,N,V_sapContext
app_purchase_history
IFNULL(app_purchase_history.is_first_party, 0)
company_title
content_rating_flags
bundle_id
date_updated
date_purchased
download_size
flavors
has_messages_extension
icon_title
icon_token
icon_url
is_family_shareable
is_first_party
is_hidden
is_hidden_from_springboard
is_newsstand
is_preorder
IFNULL(app_purchase_history.is_preorder, 0)
long_title
minimum_os
oval_icon_token
oval_icon_url
is_32_bit_only
purchased_token
store_id
supports_ipad
supports_iphone
redownload_params
version_human_readable
version_itunes
vpp_is_licensed
required_capabilities
watchMetrics
timestampInstalled
timestampInserted
timestampReported
<%@:%p> [PID: %lld] [Account: %lld] [StoreID: %lld]
MZFreeProductCode
MZGiftCertificate
code
getCodeInfoSrv
codeInfo
codeType
allowAutoSubmission
lockups
salable
allowsAutoSubmission
redeemCodeDictionary
inputCode
T@"NSString",C,N,V_inputCode
 [BundleID: %@] [IconURL: %@]
mobile
[%@] -- Error creating PersistentCache: %@
[%@] -- Error setting up database: %@
[%@] -- Error setting up database.
<%@ : %p> - [ID: %@] [Name: %@] [Max Inline: %u] [DB: %@]
CREATE TABLE IF NOT EXISTS %@ (pid INTEGER, lookup_key TEXT,data_blob BLOB, data_size INTEGER, date_inserted INTEGER, date_expired INTEGER, date_retired INTEGER, user_info TEXT, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS %@_lookup_key ON %@ (lookup_key);
CREATE INDEX IF NOT EXISTS %@_date_inserted ON %@ (date_inserted);
CREATE INDEX IF NOT EXISTS %@_date_expired ON %@ (date_expired);
CREATE INDEX IF NOT EXISTS %@_date_retired ON %@ (date_retired);
CREATE INDEX IF NOT EXISTS %@_date_user_info ON %@ (user_info);
SELECT SUM(%@), COUNT(*) FROM %@ WHERE %@ <= ?;
retired
SELECT SUM(%@), COUNT(*) FROM %@;
total
SELECT %@, LENGTH(HEX(%@)) FROM %@ WHERE %@ <= ?;
DELETE FROM %@ WHERE %@ IN ( ?
[%@] [Updated: %d] [External: %d] [LookupKey: %@]
[%@] Failed to update SSDatabaseCacheEntry: %@
maximumInlineBlobSize
TQ,N,V_maximumInlineBlobSize
com.apple.itunesstored.SSVSubscriptionStatusCoordinator.changeNotificationSuspensionAccessQueue
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim
[%{public}@]: _copyDownloadsForMessage: %@
[%{public}@]: _sendDownloadsChanged: %@
<%@ : %p> - Persistent ID: %llu
SELECT %@ FROM %@ WHERE %@ = ? LIMIT 1;
database_cache
lookup_key
data_blob
data_size
date_inserted
date_expired
date_retired
user_info
<%@ : %p> - [ID: %@] [Name: %@]
%02x
[%@] write bytes (%d) to path: %@
Error clearing cache entry: %@
[%@] -- Failed to read: %@
com.apple.itunesstored.biometricschanged
com.apple.StoreServices.SSBiometrics.%p
SELECT %@.%@,%@.%@,%@.%@,%@.%@,%@.%@,%@.%@,%@.%@ FROM %@ LEFT OUTER JOIN %@ ON %@.%@ = %@.%@ WHERE (%@.%@ IS NULL OR %@.%@ <= %lld) AND (%@ = %@)
 AND (%@.%@ IN ("XX"
%@,"%@"
 AND %@.%@ = "%@" 
app_image_cache
SSUpdatableAssetCacheManagerErrorDomain
[%@] no manifests directory set
[%@] manifest directory doesn't exist %@
[%@] error getting manifest file URLs %@ %@
error setting cache urls for manifest %@ %@
error parsing manifest at %@ %@
Assets
Updatable Assets
Current
Manifests
Cancelled
Failed
FailedAssetBlocked
FailedDownloadRemoved
FailedInstallVerification
FailedKeepSafeHarborContainer
FailedPermanently
Started
Succeeded
AutoStoreQueue
AutoUpdate
External
Internal
ManualUpdate
PerDevice
Restore
RestoreDemoted
StoreQueue
clientId
xp_amp_app_install
hardwareType
installError
installStatus
jobId
buildVersion = %@
bundleID = %@
hardwareType = %@
installError = %@
installStatus = %@
installType = %@
jobID = %lld
jobID
v32@?0@"NSURLQueryItem"8Q16^B24
dateUpdated
T@"NSDate",R,N,V_dateUpdated
TB,R,N,GisAdmin,V_admin
SSAppImageDatabaseCacheEntry
**** No identifier passed to initialization routine [%@]
%@: [Session Identifier: %@] [Factories: %d]
**** No SSCacheObjectFactory for typeIdentifier [%@]
**** Clearing SSCacheObjectStore [%@]
[%@] No data representation when adding object to cache with item identifier %@
[%@] No item identifier
[%@] No type identifier for item identifier %@
[%@] No data representation for item identifier %@
bplist
postDescription
T@"SSVMediaSocialPostDescription",R,N,V_postDescription
caller
com.apple.StoreServices.SSVPlatformRequestOperation.%p
x-request-timestamp
X-Request-TimeStamp
v32@?0@"NSString"8@"NSString"16q24
&version=1
itemIdentifiers
bundleIdentifiers
imageProfile
T@"NSArray",R,C,V_items
T@"NSString",R,C,V_caller
T@"NSString",R,C,V_version
SSWishlistErrorDomain
v16@?0^{sqlite3=}8
SELECT value FROM properties WHERE key="lastSyncTime";
DELETE FROM properties WHERE key="lastSyncTime"
INSERT OR REPLACE INTO properties (key, value) VALUES ("lastSyncTime", ?)
Tq,R,N,V_accountIdentifier
lastSyncTime
T@"NSNumber",C,N
textFieldValues
T@"NSArray",C,N,V_textFieldValues
 cloudID: %llu
 lyricsID: %@
 purchasedAdamID: %lli
 radioAdamID: %lli
 equivalencySourceAdamID: %lli
 subscriptionAdamID: %lli
 tvShowPurchasedAdamID: %lli
 tvShowSubscriptionAdamID: %lli
SSVPlayActivityEventItemIDsCloudID
SSVPlayActivityEventItemIDsLyricsID
SSVPlayActivityEventItemIDsPurchasedAdamID
SSVPlayActivityEventItemIDsRadioAdamID
SSVPlayActivityEventItemIDsEquivalencySourceAdamID
SSVPlayActivityEventItemIDsSubscriptionAdamID
SSVPlayActivityEventItemIDsTVShowPurchasedAdamID
SSVPlayActivityEventItemIDsTVShowSubscriptionAdamID
cloudID
TQ,R,N,V_cloudID
T@"NSString",R,C,N,V_lyricsID
Tq,R,N,V_purchasedAdamID
Tq,R,N,V_radioAdamID
Tq,R,N,V_equivalencySourceAdamID
Tq,R,N,V_subscriptionAdamID
Tq,R,N,V_tvShowPurchasedAdamID
Tq,R,N,V_tvShowSubscriptionAdamID
CREATE TABLE IF NOT EXISTS item (pid INTEGER, item_id INTEGER, sort_order INTEGER DEFAULT 0, state INTEGER DEFAULT 0, item_kind TEXT NOT NULL, item_data BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS properties (key TEXT, value TEXT, PRIMARY KEY (key));
CREATE INDEX IF NOT EXISTS item_item_id ON item (item_id);
CREATE INDEX IF NOT EXISTS item_state ON item (state);
%lld.sqlitedb
Wishlists
ALTER TABLE item ADD COLUMN sort_order INTEGER DEFAULT 0;
ALTER TABLE item ADD COLUMN wishlist_item_id INTEGER DEFAULT 0;
Type:%ld Version:%ld Data:%@
TQ,R,VmType
typeVersion
TQ,R,VmTypeVersion
contentToken
T@"asn1Token",R,VmContentToken
stringValue
T@"NSString",R,D
integerValue
TQ,R,D
item_data
item_id
item_kind
sort_order
state
appInstall
click
enter
exit
impressions
loadUrl
buyConfirmed
canary
com.StoreServices.globalEventCanaryLock
[%@] Configuration field-blacklisting trimmed %d fields from event [%@]
[%@] Error creating PLIST: %@ -- Input: %@
[%@] No Dictionary Representation for: %@
T@"NSString",R,&,N,V_eventType
shouldSuppressUserInfo
TB,R,N,V_shouldSuppressUserInfo
shouldSuppressDSIDHeader
TB,R,N,V_shouldSuppressDSIDHeader
Default values are only supported for primitive types.
defaultValue
T@"<NSObject>",R,N,V_defaultValue
stringRepresentation
T@"NSArray",R,N,V_stringRepresentation
valueType
TQ,R,N,V_valueType
baseVersion
eventVersion
connection
eventTime
topic
hostApp
pClientVersion
timezoneOffset
%@ : %p -- [%d properties] %@
%@/2/%@
bodyDictionary
T@"NSDictionary",R,C,N,V_mutableBody
originalTime
hostApplicationIdentifier
previousClientVersion
TB,N,V_shouldSuppressUserInfo
canaryIdentifier
main-screen-width
main-screen-height
main-screen-scale
screenWidth
screenHeight
pixelRatio
windowInnerWidth
windowInnerHeight
pageContext
pageId
pageUrl
windowOrientation
%@ -- [Type: %@] [eVersion: %@]
windowHeight
windowWidth
pageDescription
pageID
pageURL
appBundleId
T@"NSString",C,N,V_appBundleId
TQ,N,V_action
com.apple.StoreServices.SSVFairPlaySAPSession.completion
com.apple.StoreServices.SSVFairPlaySAPSession
%@: SAP signature failed with bad session, attempting to sign again
%@: SAP signature failed with error: %@
%@: SAP signature verification failed with bad session, attempting to verify signature again
%@: SAP signature verification failed with error: %@
sign-sap-setup-buffer
%@: Failed to obtain SAP context for signing
No SAP context for signing
%@: Verify prime failed: %@
%@: Verify prime finished: %@
%@: Failed to obtain SAP context for signature verification
No SAP context for signature verification
primed
TB,R,N,V_primed
SAPVersion
back
forward
isCachedResponse
isUber
navigation
pageHistory
pageRenderTime
refApp
refUrl
requestEndTime
serverAppInstance
serverTiming
%@: Instance: %@
pageHistoryDescription
TB,N,GisCachedResponse
navigationType
referringAppName
referringURL
serverApplicationInstance
ubered
TB,N,GisUbered
cancel-purchase-batch
failed-items
keybag
more
page-type
template-name
preorder-success
com.apple.storeservices.StoreDownloadQueueResponse
T@"NSOrderedSet",R
T@"NSString",V_storeCorrelationID
T@"NSError",&
rangesToLoad
shouldCancelPurchaseBatch
triggeredQueueCheck
T@"NSString",V_clientIdentifier
com.apple.storeServices.analytics
eventsTable_v1
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER, %@ TEXT,%@ BLOB, %@ REAL, %@ INTEGER, PRIMARY KEY (%@));
CREATE INDEX IF NOT EXISTS %@_%@ ON %@ (%@);
ALTER TABLE %@ ADD COLUMN %@ INTEGER DEFAULT 0;
suppressUserInfo
UPDATE %@ SET %@ = %@;
Metrics User database current version: %@
Metrics Errored out at version %@
Metrics User database migrated to version %@
[%@] Blacklisted fields produced an event with zero properties: %@
[%@] Blacklisted event excluded from insert: %@
DELETE FROM %@ WHERE %@ < %lld;
[%@] Deleting out-of-date events returned: %d [%d rows affected]
DELETE FROM %@ WHERE %@ != 0;
[%@] Direct-access controller is calling through XPC to flush Unreported Events
[%@] Dropping Event Summary which has no value for "%@" -- %@
[%@] Empty input array wastes CPU/Power, but is not fatal
UPDATE %@ SET %@ = %lld WHERE (%@ IN (%@)) AND %@ = 0;
SELECT DISTINCT(%@) FROM %@ WHERE %@ = 0 AND %@ <= %lld ORDER BY %@ ASC
SELECT %@ FROM %@ WHERE %@ = '%@' AND %@ = 0 AND %@ <= %lld AND %@ = %@ ORDER BY %@ ASC LIMIT %d
displayCriteria
explicitEnabled
notificationsEnabled
TB,N,V_explicitEnabled
TB,N,V_notificationsEnabled
[%@] === Already Reported Event: %llu -- [Timestamp Reported: %@]
[%@] Error creating JSON: %@ -- Input: %@
report_url
eventBody
supressDsid
is-background
apps
bundle-ids
claim-item-ids
download-item-ids
ds-id
item-ids
response-content-type
claim-type
serial-no
UniqueDeviceID
udid
InternationalMobileEquipmentIdentity
imei
MobileEquipmentIdentifier
meid
%@: [IDs: %@]
requestStyle
Tq,R,N,V_style
T@"NSNumber",C,N,V_accountID
applications
T@"NSArray",C,N,V_applications
TB,N,GisBackgroundRequest,V_backgroundRequest
T@"NSArray",C,N,V_bundleIdentifiers
T@"NSArray",C,N,V_itemIdentifiers
T@"NSMutableDictionary",R,N
JSONBodyData
propertyListBodyData
com.apple.storeservices.watchanalytics
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"SSWatchMetricsConfiguration",C,N,V_metricsConfiguration
TB,N,GisEnabled,V_enabled
[%@] Marking %d events are reported
[%{public}@] No applicable metric events to report.
deliveryVersion
postTime
[%{public}@] Invalid JSON. Object: %{private}@
[%{public}@] OutputStream did not accept all bytes: %{public}d vs %{public}lu
[%{public}@] Wrote a total of %{public}d bytes to output stream
[%{public}@] Invalid metric json object: %{private}@
[%@] Unreported Event Count: %d
close
[%@] Closed Stream [total_in: %d] [total_out: %d] -- %d
[%@] -- write called on stream with error: %@
write:maxLength:
[%@] -- error deflating stream [%d] [Errno: %d] [Context: %@]
avail_in
avail_out
errno
context
SSGzipOutputStream
1.2.11
[%@] -- error initializing z_stream [%d] [Errno: %d]
downloadMetadata
T@"SSDownloadMetadata",R,N,V_downloadMetadata
purchaseResponse
T@"SSPurchaseResponse",R,N,V_purchaseResponse
com.apple.StoreServices.SSCoalescingQueue
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
source
T@"NSObject<OS_dispatch_source>",&,N,V_source
T@"NSString",C,N,V_clientIdentifier
itemState
Tq,N,V_itemState
representativeTitle
T@"NSString",C,N,V_representativeTitle
statusString
T@"NSString",C,N,V_statusString
totalNumberOfItems
Tq,N,V_totalNumberOfItems
transferTypes
TQ,N,V_transferTypes
com.apple.StoreServices.SSDownloadMonitor.%p
com.apple.StoreServices.SSDownloadMonitor.%p.delegate
T@"<SSDownloadMonitorDelegate>"
T@"NSDictionary",R,N,V_properties
T@"NSString",&,N,V_preferredAssetFlavor
com.apple.storeServices.watchAnalytics
watchEventsTable_v2
Watch Metrics User database current version: %@
Watch Metrics Errored out at version %@
Watch Metrics User database migrated to version %@
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER, %@ TEXT,%@ INTEGER,%@ INTEGER, %@ INTEGER, %@ REAL, %@ REAL, %@ REAL, %@ TEXT, %@ TEXT, %@ TEXT, PRIMARY KEY (%@));
ALTER TABLE %@ ADD COLUMN %@ TEXT;
ALTER TABLE %@ ADD COLUMN tryCount INTEGER DEFAULT 0;
ALTER TABLE %@ ADD COLUMN %@ INTEGER;
signedIn
signedOut
accountEventType
com.apple.StoreServices.SSVSubscriptionEntitlementsCoordinator
%@: Asking daemon for subscription entitlements.
debug
info
warn
xp_amp_appstore_log
level
loggerName
logLevel = %@
logSubsystem = %@
message = %@
logLevel
logSubsystem
SSUpdatableAssetControllerErrorDomain
SSUpdatableAssetControllerAssetsDidUpdateNotification
com.apple.storeservices.updatableasset
[%@] Clear Updatable Asset Cache returned error code: %d
[%@] Clear Updatable Asset Cache succeeded
[%@] Refresh Updatable Asset Cache returned error code: %d
[%@] Refresh Updatable Asset Cache succeeded
error loading bundled manifest at %@ %@
SSUpdatableAssetControllerBundledManifestVersion
bundledManifestVersion
currentManifest
T@"SSUpdatableAssetManifest",R,N
newestCachedManifest
bundledManifestURL
T@"NSURL",R,N,V_bundledManifestURL
manifestURL
T@"NSURL",C,N,V_manifestURL
transactionId
automatic-downloads2
automatic-downloads
discovery-prompt
configurations
media-types
download-time-limit
downloads-url
register-media-types
enabled-media-types
com.apple.storeservices.download-queue
@"NSURL"16@?0@"SSURLBagContext"8
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
[%@]: Loading download queue (%@, %@, %@) with reason: %ld
[%@]: Download queue response (key = %@ startID = %@ endID = %@)
[%@]: storeCorrelationID: %@
%llu
requestIdentifier
T@"NSMutableOrderedSet",R
powerAssertionIdentifier
T@"NSString",&,V_powerAssertionIdentifier
T@"NSString",&,N,V_storeCorrelationID
init
lease
init+lease
actionDetails
positionX
positionY
targetType
actionUrl
%@: %@; [%@, %@]; [%@, %@]; %@
T@,&,N
locationDescription
targetIdentifier
targetURL
focus
clear
delete
dismiss
select
sheet
sort
brick
button
editorial
flowcase
list
listItem
preview
search_related
tabItem
textField
T@"NSString",C,N,V_name
biometricMatchState
dialogID
topicName
xp_ci
xp_its_main
bioLockout
%{public}@: Unknown match state: %{public}@
%{public}@: Failed to instrument metrics dialog with match: %{public}@
%{public}@: Looking up clientId for userId: %@
v32@?0@"NSHTTPCookie"8Q16^B24
%{public}@: Found clientId: %{public}@, userId: %@
%{public}@: Lookup clientId failed with no userId
fuse
%@ [PID: %lld]
countOfBytesExpectedToSend
Tq,N,V_countOfBytesExpectedToSend
countOfBytesSent
Tq,N,V_countOfBytesSent
Tq,N,V_persistentIdentifier
Tq,N,V_state
T@"NSURL",C,N,V_thumbnailImageURL
_uploadKind
T@"NSString",C,N,S_setUploadKind:,V_uploadKind
launch
taskSwitch
%@: Type: %@
enterType
destinationUrl
quit
exitType
exitURL
ASDJobManager
ASDJobManagerOptions
v32@?0@"SSSoftwareDownload"8Q16^B24
ASDInstallManifestRequestOptions
ASDInstallManifestRequest
v28@?0B8@"NSArray"12@"NSError"20
ASDJobAsset
ASDJobActivity
ASDJobManifest
SSDoubleLinkedListInvalidNode
Attempting to add a node that has already been added to another list.
Attempting to remove a node from a list it doesn't belong to.
listIdentifier
T@"NSString",&,N,V_listIdentifier
allNodes
TQ,R,N,V_count
head
T@"SSDoubleLinkedListNode",&,N,V_head
tail
T@"SSDoubleLinkedListNode",&,N,V_tail
previous
T@"SSDoubleLinkedListNode",&,N,V_previous
T@,&,N,V_object
next
T@"SSDoubleLinkedListNode",&,N,V_next
%@: Count: %ld
impressionIdentifiers
%{public}@ is an unsupported method for software downloads
%{public}@ is an unsupported deprecated method for software downloads
T@"ASDJob",R,N,V_job
mediaEventType
mediaURL
ended
pause
revision_id
store_account_id
event_data
events_current_revision
events_revision_version_token
[%@] -- Error creating database, removing if possible...: %@ -- %@
[%@] -- Removing database successful, attempting to recreate...: %@ -- %@
[%@] -- Error creating database for a second time, bailing out: %@
[%@] -- Error removing database: %@ -- %@
play_activity.sqlitedb
unknown-revision-version
[%@] Statement Didn't finish after stepping -- %@
DELETE FROM %@ WHERE %@ <= ?;
[%@] Statement didn't finish after stepping -- %@
Q16@?0Q8
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ BLOB);
CREATE TABLE IF NOT EXISTS %@ (%@ TEXT PRIMARY KEY, %@ TEXT);
DROP TABLE IF EXISTS %@;
INSERT OR IGNORE INTO %@ (%@, %@) VALUES (?, ?);
 FROM %@ WHERE (
(%@ == ?) AND (
%@ BETWEEN ? AND ?
 OR %@ BETWEEN ? AND ?
v32@?0{_NSRange=QQ}8^B24
) ORDER BY 
%@,%@ ASC;
%@ ASC;
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (
INSERT OR REPLACE INTO %@ (%@, %@) VALUES (?, ?);
SELECT %@ FROM %@ WHERE %@ = ?;
currentEventsRevision
eventsRevisionVersionToken
leaseDurationInSeconds
offlineSlotAvailable
TB,R,N,GisOfflineSlotAvailable
leaseInfoData
subscriptionKeyBagData
T@"NSData",C,N,V_certificateData
KDMovieIdentifier
TQ,N,V_kdMovieIdentifier
leaseDuration
yyyy-MM-dd HH:mm:ss.SSSSSSZZZ
SSKeychain
SSMetricsDialogEvent
SSXPCCoding
NSObject
SSApplicationUtil
SSVPlaybackAsset
SSMetricsCustomEvent
SSVFamilyContentDeletionEvent
SSVFamilyAccountPair
SSDownloadQueue
SSDownloadManagerObserverPrivate
SSDownloadManagerObserver
SSVMediaSocialPostDescription
NSCopying
SSDownload
SSVContentLink
SSDownloadMetadata
NSCoding
SSVCloudServiceCapabilitiesResponse
SSVSubscriptionStatusCoordinator
SSVDownloadQueueRequest
SSVSecureKeyDeliveryRequestOperation
SSVMediaContentTasteItemUpdate
NSSecureCoding
SSAdditions
SSDownloadStatus
SSDownloadPhase
SSVRefreshSubscriptionRequest
SSDownloadAsset
SSExtensions
SSOperationProgress
SSLogFileOptions
SSVPlaybackResponse
SSDownloadManifestRequest
SSVURLCache
SSVURLCacheConfiguration
SSVURLCacheAdditions
SSDownloadManifestResponse
SSRequest
SSUniqueExecutionQueue
SSVSubscriptionEntitlementsSubscription
SSVMediaContentTasteController
SSVURLDataConsumer
SSVPBPlayActivityEnqueuerProperties
SSPurchaseRequest
SSPurchaseManagerDelegate
SSVURLBagInterpreter
SSVLoadURLOperation
SSURLSessionManagerDelegate
SSPurchase
SSTonePurchase
SSDecoding
SSRingtonePurchase
SSVRefreshStoreQueueDownloadOperation
SSURLConnectionRequest
SSURLAdditions
SSItemLookupRequest
SSVAppleAccountStore
SSItem
SSURLConnectionRequestDelegate
SSRequestDelegate
SSItemMedia
SSWatchMetricsEvent
SSAppWakeRequest
SSRentalCheckoutRequest
SSAccount
SSVLeaseCertificateRequestOperation
SSVURLConnectionConsumer
SSBagURLParser
SSAuthenticateRequest
SSVRepairApplicationRequest
SSAuthenticationContext
NSMutableCopying
SSMutableAuthenticationContext
SSSpringBoardUtility
SSMetricsConfiguration
SSPromiseResult
SSVMediaSocialPostItem
SSVMediaContentTasteUpdateResponse
SSAccountStore
AKAppleIDAuthenticationDelegate
SSAuthenticateResponse
SSWatchMetricsEventsController
SSRestrictions
SSSoftwareUpdatesContext
SSMutableSoftwareUpdatesContext
SSSoftwareUpdatesRequest
SSSoftwareUpdatesResponse
SSMetricsController
SSBag
ISStoreURLOperationDelegate
ISURLOperationDelegate
ISOperationDelegate
SSEventsTableBase
SSVCloudServiceAPITokenResponse
SSLazyPromise
SSBagProfileConfig
SSMutableBagProfileConfig
SSItemOffer
SSBinaryPromise
SSVPushNotificationRequest
SSItemOfferDevice
SSItemOfferDeviceError
SSDownloadManagerBookShim2
SSNetworkConstraints
SSProtocolCondition
SSApplicationVersionCondition
SSCapabilityCondition
SSDocumentCondition
SSHasAccountCondition
SSItemAvailableCondition
SSPlatformCondition
SSRestrictionCondition
SSSystemVersionCondition
SSProtocolConditionalEvaluator
SSProtocolConditionalContext
SSDevice
SSLockdown
SSVCloudServiceAPITokenRequest
SSDownloadPolicyUserDefaultState
SSVLoadNearbyAppsOperation
SSVGratisApplication
SSURLRequestProperties
SSMutableURLRequestProperties
SSVSubscriptionResponse
SSDivertedDownload
SSURLConnectionResponse
SSPlayInfoRequest
SSPlayInfoRequestContext
SSPlayInfoResponse
SSVPlaybackLeaseItem
SSMigrator
SSNetworkQualityInquiry
SSDialog
SSDialogButton
SSPurchaseReceipt
SSAuthorizationRequest
SSItemArtworkImage
SSVSAPSignaturePolicy
SSVSAPSignatureComponent
SSItemImageCollection
SSRemoteNotificationClient
SSRemoteNotification
SSAppPurchaseHistoryAccount
SSURLBagContext
SSAskPermissionActionRequest
SSUpdatableAssetManifest
SSItemContentRating
SSUpdateAccountResponse
SSVPlayActivityFeedSerialization
SSRentalCheckinRequest
SSBiometricAuthenticationContext
SSVPlaybackItem
SSXPCConnection
SSDownloadManager
SSDownloadManagerOptions
SSConsolidatedDialog
SSEntity
SSDownloadHandler
SSScriptURLHandler
SSVInstallManagedApplicationRequest
SSDictionaryResponse
SSResponseAction
SSVURLLookupResponseConsumer
SSVPlaybackLeaseRequest
SSAuthenticationResponse
SSURLBag
SSDownloadSession
SSDownloadHandlerSession
SSDownloadAuthenticationSession
SSDownloadAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
SSFollowUpController
SSPersonalizeOffersRequest
SSPersonalizeOffersResponse
SSPreorder
SSPreorderManager
SSRestoreContentItem
SSPurchaseHistoryItem
SSXPCServer
SSXPCServerObserver
SSDistributedNotificationCenter
SSDistributedNotificationCenterObserver
SSRollableLog
SSVFairPlaySAPContext
SSRentalInformationRequest
SSVOperation
SSVDisableSubscriptionRequest
SSDownloadFileManifest
SSVMediaContentTasteUpdateRequest
SSEventMonitor
SSVMediaContentTasteItem
SSVMutableMediaContentTasteItem
SSVCookieStorage
SSWeakReference
SSVComplexOperation
SSLookupProperties
SSLookupRequest
SSLookupResponse
SSLogConfig
SSMutableLogConfig
SSDownloadPolicyApplicationState
SSFamilyCircle
SSFamilyMember
SSDownloadPolicyRule
SSDownloadPolicy
SSPaymentSheet
SSKeybagRequest
SSSoftwareLibraryItem
SSSoftwareLibrary
SSRedeemCodesRequest
SSVMediaSocialShareExtension
SSVPlaybackLeaseCallback
SSVPlaybackLease
asn1Token
asn1SetToken
asn1SequenceToken
asn1IntegerToken
asn1OSToken
SSRedeemCodesResponse
SSKeyValueStore
SSLRUCache
SSLRUCacheItem
SSVPlayActivityDebugLogOperation
SSCircularBuffer
SSErrorHandler
SSVKeybagSyncRequest
ISPurchaseReceipt
SSFeatureEnablerMigrator
SSHTTPArchive
SSErrorHandlerSession
SSVLeaseRequestOperation
SSKeyValueStoreDatabase
SSKeyValueStoreSchema
SSKeyValueStoreSession
SSUpdatableAsset
SSMetricsTimingDefaults
SSVMediaSocialPostExternalDestination
SSKeyValueStoreTransaction
HexUtil
SSBookDownload
SSVSubscriptionStatusRequest
SSKeyValueStoreValueEntity
SSUnitTests
SSSQLiteDatabase
SSVPlayActivityEvent
SSVMutablePlayActivityEvent
SSSQLiteEntity
SSSQLitePredicate
SSSQLitePropertyPredicate
SSSQLiteComparisonPredicate
SSSQLiteContainsPredicate
SSSQLiteNullPredicate
SSSQLiteCompoundPredicate
SSSQLiteQuery
SSSQLiteQueryDescriptor
SSSQLiteQueryAdditions
SSPromise
SSVEnableSubscriptionRequest
SSMemoryEntity
SSPurchaseResponse
SSVServerAuthenticateRequest
SSVServerAuthenticateResponse
SSVURLJSONDataConsumer
ICProcessPlayActivityEventsRequestListener
SSVPlayActivityController
_SSVPlayActivityEndpointRevisionInformation
_SSVPlayActivityFlushSessionInformation
SSPurchaseManager
SSMachineDataRequest
SSMetricsEventLocation
SSVSubscriptionEntitlements
SSTermsAndConditions
SSVMediaSocialPostAttachment
SSLookupItem
SSVSubscriptionStatus
SSUpdatableAssetManifestJSONParser
SSLookupItemArtwork
SSURLSessionManager
NSCacheDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
SSVFairPlaySubscriptionStatus
SSMetricsLoadURLEvent
SSLookupItemOffer
SSVMediaSocialAdminPermissionsCoordinator
SSVPBPlayActivityEvent
SSVBarrierOperationQueue
SSSoftwareUpdatesStore
SSVPlaybackLeaseConfiguration
SSFamilyCircleRequest
SSFamilyCircleResponse
SSVPushNotificationParameters
SSRentalSyncRequest
SSVPlayActivityEnqueuerProperties
SSVMutablePlayActivityEnqueuerProperties
SSVDirectUploadQueue
SSSoftwareUpdate
SSXPCData
SSVPlayActivityEventContainerIDs
SSVMutablePlayActivityEventContainerIDs
SSVFairPlaySubscriptionController
SSAppPurchaseHistoryDatabase
SSVCloudServiceCapabilitiesRequest
SSVAccountLessPlaybackOperation
SSAppPurchaseHistoryDatabaseSchema
SSVMediaSocialAdminStatusOperation
SSVPlatformContext
SSAppPurchaseHistoryEntry
SSAppPurchaseHistoryTransaction
SSWatchMetricsEventTableEntity
SSPurchasableItem
SSVRedeemCodeMetadata
SSVRedeemCodeItem
SSPurchasableAppItem
SSDatabaseCache
SSVClaimApplicationsRequest
Private
SSDownloadManagerBookShim
SSDatabaseCacheEntry
SSPersistentCache
SSBiometrics
SSAppPurchaseHistoryCache
SSAppImageDatabaseCacheEntry
SSUpdatableAssetCacheManager
SSMetricsAppInstallEvent
SSVSAPSignatureDataSource
SSVMediaSocialAdminStatus
SSAppIconDatabaseCache
SSCacheObjectStore
SSPlistCacheObjectFactory
SSCacheObjectFactory
SSPlistCacheObject
SSCacheObject
SSVMediaSocialPostRequest
SSVURLProtocolConsumer
SSVPlatformRequestOperation
SSVPlaybackLeaseAsset
SSWishlistAddItemsRequest
SSWishlist
SSVShowDialogRequest
SSVDialogResponse
SSVPlayActivityEventItemIDs
SSVMutablePlayActivityEventItemIDs
SSWishlistDatabaseSchema
asn1ReceiptToken
SSSimulatedCrash
SSVApplicationCapabilitiesRequest
SSWishlistItemEntity
SSMetricsEvent
SSBagKey
SSMetricsMutableEvent
SSMetricsBaseEvent
SSPurchaseIntentActionRequest
SSVFairPlaySAPSession
SSVSAPContext
SSMetricsPageEvent
SSVStoreDownloadQueueResponse
SSMetricsEventTable
SSMetricsEventController
SSMetricsContentBulletinEvent
SSMetricsEventTableEntity
SSVGratisRequestBody
SSPromiseCompletionBlocks
SSWatchMetricsController
SSWatchMetricsConfiguration
SSMetricsEventReportingSession
SSGzipOutputStream
SSVPlaybackSubscriptionLeaseRequest
SSImportDownloadToIPodLibraryRequest
SSCoalescingQueue
SSDownloadMonitorItem
SSDownloadMonitor
SSVStoreDownload
SSWatchMetricsEventTable
SSMetricsAccountEvent
SSVSubscriptionEntitlementsCoordinator
SSMetricsLogEvent
SSUpdatableAssetController
SSMetricsPurchaseEvent
SSVLoadDownloadQueueOperation
SSVPlaybackKDLeaseRequest
SSMetricsClickEvent
SSVMediaSocialPostArtist
SSAuthorizationMetricsController
SSVDirectUpload
SSMetricsEnterEvent
SSMetricsExitEvent
SSDownloadManagerAppShim
ASDJobManagerObserver
SSDoubleLinkedList
SSDoubleLinkedListNode
SSMetricsImpressionsEvent
SSSoftwareDownload
SSMetricsMediaEvent
SSVPlayActivityTable
SSVPlaybackLeaseResponse
SSMetricsSearchEvent
@16@0:8
v32@0:8@16@?24
v64@0:8@16@24@32@40@48@?56
v40@0:8@16@24@?32
v16@0:8
@"SSXPCConnection"
@"NSObject<OS_dispatch_queue>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"16@0:8
v24@0:8@16
v24@0:8@?16
@"NSDictionary"
@"NSArray"
@40@0:8Q16Q24Q32
v32@0:8@16@24
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@"SSDownloadManager"16@"NSSet"24
@24@0:8Q16
v32@0:8^?16^v24
v24@0:8q16
v20@0:8B16
@"SSDownloadManager"
^{__CFSet=}
@24@0:8^{_NSZone=}16
@"NSNumber"
@"NSString"
q16@0:8
@24@0:8q16
B32@0:8@16@24
d16@0:8
B24@0:8^@16
@32@0:8@16@24
@"NSMutableDictionary"
@"SSDownloadMetadata"
@"SSDownloadStatus"
q24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8Q16
@"NSLock"
@24@0:8@?16
@"SSVSubscriptionStatus"
v36@0:8@16B24@28
@"SSVSubscriptionStatusRequest"
@"NSDate"
@"NSMutableArray"
@?16@0:8
@48@0:8q16@24^d32^@40
d32@0:8q16@24
@40@0:8q16@24@32
d40@0:8q16@24@32
@"NSURL"
@"AVAssetResourceLoadingRequest"
@"NSData"
@"<SSVSecureKeyDeliveryRequestOperationDelegate>"
@"SSVMediaContentTasteItem"
f16@0:8
v20@0:8f16
@"SSDownloadPhase"
@"NSError"
@"SSOperationProgress"
@"SSAuthenticationContext"
@32@0:8@16q24
@"SSURLRequestProperties"
v24@0:8d16
@"NSHTTPURLResponse"
@"NSURLRequest"
@32@0:8@16^@24
v40@0:8@16@24@32
^{__CFURLStorageSession=}
@"SSVURLCacheConfiguration"
^{_CFURLCache=}
v32@0:8q16@?24
@"<SSRequestDelegate>"
@"NSObject<OS_dispatch_source>"
@"SSPromise"
Q24@0:8@16
Q24@0:8q16
v40@0:8Q16@24@?32
v48@0:8Q16q24Q32@?40
v28@0:8@16B24
@40@0:8@16@24^@32
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="storeAccountID"b1"systemReleaseType"b1"privateListeningEnabled"b1"sBEnabled"b1}
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@?16@?24
@"NSMutableSet"
@"SSPurchaseManager"
@44@0:8@16@24Q32B40
@32@0:8@16#24
@"SSVSAPSignaturePolicy"
@40@0:8@16@24@32
v48@0:8@16@24@32@40
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v56@0:8@16@24@32@40@?48
@"NSData"40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSMetricsLoadURLEvent"32@"NSError"40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSHTTPArchive"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
@"NSNumber"16@0:8
@"SSBag"16@0:8
@"NSData"16@0:8
@"SSURLRequestProperties"16@0:8
@"NSURLCache"16@0:8
@24@0:8r^{_CFCachedURLResponse=}16
@"AKAppleIDSession"
@"NSMutableData"
@"SSVURLDataConsumer"
@"SSMetricsPageEvent"
@"NSRunLoop"
@"SSVFairPlaySAPSession"
@"SSURLBag"
@"SSVURLBagInterpreter"
@"<SSVLoadURLOperationDelegate>"
@"SSBag"
@"SSDownloadPolicy"
@"SSItem"
@"SSItemOffer"
@"SSNetworkConstraints"
B48@0:8@16@24@32^@40
@"ACAccountStore"
@"ACAccount"
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSURLConnectionRequest"16@"SSURLConnectionResponse"24
@"SSURLConnectionRequest"
q24@0:8@16
v32@0:8@16q24
v32@0:8q16@24
@24@0:8^@16
@"NSObject<OS_dispatch_semaphore>"
@"SSVPlaybackLeaseConfiguration"
@32@0:8@16@?24
{_NSRange=QQ}32@0:8@16@24
{_NSRange=QQ}24@0:8@16
@28@0:8@16B24
@"SSLogConfig"
@"UIViewController"
@40@0:8@16@24q32
v32@0:8@16^{_NSZone=}24
B40@0:8@16@24^@32
B32@0:8^i16@24
v28@0:8I16@20
B28@0:8@16B24
@"NSSet"
@"SSMetricsConfiguration"
B24@0:8q16
@64@0:8@16@24@32@40@48^@56
B32@0:8@16^@24
@36@0:8@16B24@28
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
@48@0:8@16@24@32q40
v36@0:8@16B24@?28
B36@0:8@16B24^@28
@"SSKeyValueStore"
@"SSAccount"
@"SSWatchMetricsEventTable"
@"SSSoftwareUpdatesContext"
@"NSTimer"
B32@0:8@16Q24
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
q32@0:8@16@24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
v32@0:8@"ISStoreURLOperation"16@"NSNumber"24
v40@0:8@"ISStoreURLOperation"16@"SSAuthenticationContext"24@?<v@?@"SSAuthenticateResponse"@"NSError">32
B32@0:8@"ISStoreURLOperation"16@"NSString"24
@32@0:8@16d24
v40@0:8@16Q24@?32
v32@0:8@16Q24
@32@0:8Q16^@24
@"SSBagProfileConfig"
@"SSUniqueExecutionQueue"
@"ISOperationQueue"
@"SSSQLiteDatabase"
@32@0:8d16^@24
v40@0:8@16Q24@32
B32@0:8d16^@24
@"SSVPushNotificationParameters"
@"SSItemOfferDeviceError"
@48@0:8@16@24@32@40
v32@0:8@?16@24
@32@0:8q16@24
@32@0:8@16B24B28
@"<SSBookDownloadQueue>"
v40@0:8@16q24@32
v32@0:8q16q24
@"SSProtocolConditionalContext"
I16@0:8
@32@0:8^{__CFBundle=}16^B24
B40@0:8^@16^@24@32
B32@0:8^I16^@24
@24@0:8^B16
@40@0:8@16@24^B32
v20@0:8I16
v36@0:8@16@24B32
^{__CTServerConnection=}
^{__CFString=}16@0:8
@"CLLocation"
@"NSInputStream"
@"ASDJob"
@"SSPlayInfoRequestContext"
@"SSPlayInfoResponse"
v32@0:8Q16@?24
@"ISPurchaseReceipt"
{CGSize=dd}16@0:8
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@"NSCache"
@"SSUpdatableAsset"
@32@0:8@16Q24
@"SSConsolidatedDialog"
@"SSPaymentSheet"
@"NSObject<OS_xpc_object>"
v52@0:8@16@24@32B40@?44
v24@0:8:16
@"NSHashTable"
@"SSDownloadManagerOptions"
v40@0:8^@16r^@24Q32
v32@0:8r^@16Q24
v48@0:8^@16r^@24Q32q40
v32@0:8@16r*24
@"<SSDownloadHandlerDelegate>"
@52@0:8@16@24@32@40B48
@"SSDialog"
@24@0:8^^v16
@"SSURLBagContext"
@24@0:8r*16
v28@0:8B16@20
v28@0:8i16@20
v28@0:8B16r*20
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"SSDownloadAuthenticationSession"
@"FLFollowUpController"
@"SSItemImageCollection"
^{__CFArray=}
v40@0:8@16:24q32
:16@0:8
@40@0:8@16@24@?32
@"SSXPCServer"
@"NSFileHandle"
@"SSLogFileOptions"
@"NSOperation"
@"<SSEventMonitorDelegate>"
@24@0:8#16
v40@0:8^{sqlite3_stmt=}16@24@32
B32@0:8^{sqlite3_stmt=}16@24
@24@0:8^{sqlite3_stmt=}16
@"SSLookupProperties"
@32@0:8q16q24
@"NSObject<OS_os_log>"
@40@0:8@16{_NSRange=QQ}24
@"NSAttributedString"
@"SSVPlaybackLeaseResponse"
B32@0:8@16^Q24
@"<SSVPlaybackLeaseDelegate>"
@"SSVFairPlaySubscriptionController"
@"SSVPlaybackLeaseRequest"
@"SSVRefreshSubscriptionRequest"
@"SSVBarrierOperationQueue"
@28@0:8r*16B24
@48@0:8Q16C24Q28r*36B44
C16@0:8
r*16@0:8
@"asn1Token"
v48@0:8@16r^@24Q32@?40
@"SSKeyValueStoreDatabase"
@"SSDoubleLinkedList"
@"<NSCopying>"
@"<SSErrorHandlerDelegate>"
B32@0:8^{__SecTrust=}16^{__CFArray=}24
B32@0:8^{__CFArray=}16^{__CFString=}24
B32@0:8^{__SecCertificate=}16^{__CFString=}24
^{__CFArray=}24@0:8^{SecCmsSignedDataStr=}16
B32@0:8@16N^^{SecCmsMessageStr}24
^{SecCmsSignedDataStr=}24@0:8^{SecCmsMessageStr=}16
B24@0:8^{SecCmsMessageStr=}16
B24@0:8^{__SecTrust=}16
q32@0:8^{SecCmsSignedDataStr=}16@24
d24@0:8@16
B24@0:8@?16
@20@0:8B16
@"SSCoalescingQueue"
B40@0:8@16@24@32
@"<SSBookDownloadStatus>"
B24@0:8^{sqlite3_stmt=}16
v48@0:8^{sqlite3_stmt=}16^B24^B32^B40
@24@0:8^{dispatch_source_type_s=}16
B32@0:8q16@24
^{sqlite3_stmt=}28@0:8@16B24
^{sqlite3=}
^{__CFDictionary=}
@"BKSProcessAssertion"
@"SSVPlayActivityEventContainerIDs"
@"SSVPlayActivityEnqueuerProperties"
@"NSTimeZone"
@"SSVPlayActivityEventItemIDs"
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
@"NSDictionary"24@0:8@"NSArray"16
@"NSObject<OS_xpc_object>"24@0:8@"NSArray"16
@32@0:8@"NSString"16@24
@"NSString"24@0:8@"NSString"16
@"NSSet"16@0:8
@"NSMutableDictionary"24@0:8@"NSDictionary"16
v32@0:8^{sqlite3_stmt=}16N^i24
@"SSSQLiteQuery"
@32@0:8r^@16Q24
B40@0:8@16r^@24Q32
v40@0:8r^@16Q24@?32
@"SSSQLiteQueryDescriptor"
@40@0:8r^@16Q24@32
v24@0:8#16
@"SSSQLitePredicate"
v48@0:8@16@24@32Q40
v40@0:8@16@24Q32
@"SSPromiseCompletionBlocks"
@"SSPromiseResult"
@"NSConditionLock"
v40@0:8^@16r^@24q32
@"SSPurchase"
@"SSURLConnectionResponse"
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16Q24Q32@?40
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
v40@0:8Q16Q24@?32
v48@0:8@16B24Q28B36@?40
@"NSOperationQueue"
@"SSVPlayActivityTable"
@"NSXPCConnection"
@"NSIndexSet"
v48@0:8q16@24@32@?40
@"<SSPurchaseManagerDelegate>"
@40@0:8@16@24#32
B56@0:8^d16^d24^d32^d40@48
@40@0:8q16q24@32
@48@0:8q16q24@32@40
Q36@0:8@16B24@28
d24@0:8d16
v32@0:8@"NSCache"16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16^B24
@"SSCircularBuffer"
@"SSMetricsController"
@"NSMapTable"
B32@0:8d16d24
B24@0:8d16
@"SSVPBPlayActivityEnqueuerProperties"
{?="cloudPlaylistID"b1"containerAdamID"b1"equivalencySourceAdamID"b1"eventDateTimestamp"b1"eventSecondsFromGMT"b1"itemCloudID"b1"itemDuration"b1"itemEndTime"b1"itemStartTime"b1"persistentID"b1"purchasedAdamID"b1"radioAdamID"b1"stationID"b1"storeAccountID"b1"subscriptionAdamID"b1"tvShowPurchasedAdamID"b1"tvShowSubscriptionAdamID"b1"containerType"b1"endReasonType"b1"eventType"b1"itemType"b1"mediaType"b1"reasonHintType"b1"sourceType"b1"systemReleaseType"b1"internalBuild"b1"offline"b1"privateListeningEnabled"b1"sBEnabled"b1"siriInitiated"b1}
@64@0:8@16@24@32@40@48@56
@72@0:8@16q24@32@40@48@56@64
@"SSFamilyCircle"
@32@0:8#16^{_NSZone=}24
r^v16@0:8
B52@0:8Q16I24@28^@36^@44
B68@0:8Q16I24@28@36^@44^@52^@60
@36@0:8@16@24B32
@"<SSVSAPContext>"
@44@0:8@16q24@32B40
@52@0:8@16q24@32@40B48
@48@0:8@16@24@32#40
@56@0:8@16d24d32@40@48
@"SSPersistentCache"
Q32@0:8@16@24
@"NSFileManager"
v44@0:8@16@24B32@?36
v28@0:8B16@?20
v36@0:8B16@20@?28
Q24@0:8Q16
@"SSDatabaseCache"
@"SSAppPurchaseHistoryDatabase"
@28@0:8B16@20
@"<SSCacheObject>"32@0:8@"NSData"16@"NSString"24
B24@0:8@"NSString"16
@"SSVMediaSocialPostDescription"
@"SSVPlatformContext"
@40@0:8Q16Q24@32
@24@0:8d16
@40@0:8@16Q24@32
@"<NSObject>"
@"NSData"32@0:8@"NSData"16^@24
B40@0:8@"NSMutableData"16@"NSData"24^@32
@"SSVFairPlaySAPContext"
@"NSMutableOrderedSet"
@36@0:8@16q24B32
@44@0:8@16@24q32B40
@"SSMetricsEventTable"
@"SSWatchMetricsConfiguration"
@40@0:8@16q24@32
@44@0:8@16q24B32@36
@"SSMetricsEventController"
q32@0:8r*16Q24
q20@0:8B16
@"NSOutputStream"
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@"SSPurchaseResponse"
@"<SSDownloadMonitorDelegate>"
@28@0:8B16^@20
@"SSVSubscriptionEntitlements"
@"SSUpdatableAssetManifest"
@"SSUpdatableAssetCacheManager"
@28@0:8Q16B24
@28@0:8q16B24
@56@0:8@16@24q32@40@48
@52@0:8B16@20@28@36@44
v32@0:8@"ASDJobManager"16@"NSArray"24
@"ASDJobManager"
@"SSDoubleLinkedListNode"
B40@0:8@16Q24^@32
B72@0:8^@16^@24Q32Q40@48@56^@64
B80@0:8^@16^@24Q32Q40Q48@56@64^@72
B32@0:8Q16^@24
B84@0:8^@16^@24Q32Q40Q48B56@60@68^@76
@32@0:8@?16Q24
[%@] Restart Application returned error code: %d
[%@] Restart Application succeeded
%@: Send queue changed with %lu removals
[%{public}@] Server response returned invalid dictionary object (class is %@)
[%{public}@] Server response returned invalid version object (class is %@)
[%{public}@] Server response returned invalid version %lli, current version: %lli
[%{public}@] Server response returned invalid root dictionary (class is %@)
[%{public}@] Unable to create CKC due to streaming request operation error: %@
[%{public}@] Unable to create persistent CKC due to error: %@
[%{public}@] Unable to create key server request because JSON serialization returned no data without an error.
[%{public}@] Unable to create key server request because JSON serialization returned an error: %@
[%{public}@] Unable to create key server request because creating the SPC failed with error: %@
[%{public}@] Certificate data operation returned no data.
[%{public}@] Certificate data operation failed with error: %@
[%{public}@] Key server returned a streaming key 'dictionary' of the wrong class (class is %@)
[%{public}@] Key server returned an invalid streaming key ID (class is %@)
[%{public}@] Found the streaming key dictionary for ID: %lli
[%{public}@] Streaming key response for ID %lli has a CKC response string that did not successfully decode into data.
[%{public}@] Streaming key response for ID %lli has an invalid CKC response class (class is %@)
[%{public}@] Streaming key response for ID %lli has an invalid status: %lli or failure type: %{public}@. Dialog dictionary is: %{public}@
%@: Not running in UIApplication, skipping background task
%@: Beginning background task
%@: Closing background task early
%@: Background task expired
SSUniqueExecutionQueue: self is out-of-scope.
SSUniqueExecutionQueue: The promise already finished. Calling the completion block directly.
[%@] Received items did change notification with revision ID: %llu, current revisionID: %llu
[%@] Defering refresh due to in-progress request count: %lli
[%@] Failed to get bag value for key: %@. Error: %@
%{public}@: Setting the active account's storefront after running %{public}@. activeAccount = %{public}@ | storefrontID = %{public}@
%@: URL bag was needed, but none was provided
%@: Refreshing download: %@ / %@
SSAccountStore: Setting a non-pet as the password equivalent token. account = %{public}@
SSAccountStore: Setting a password that may be a password equivalent token. account = %{public}@
%{public}@: Someone is changing the country code of an account's storefront outside of authentication. account = %{public}@ | oldStorefront = %{public}@ | newStorefront = %{public}@ | callStack = %{public}@
%{public}@: Someone is setting an account's storefront to nil. account = %{public}@ | callStack = %{public}@
SSAccount: Failed to get the metrics dictionary from the bag. We'll be unable to send logs to the server.
SSAccount: Failed to insert the log metric into the controller. error = %@
%{public}@: Failed to reset transient data for an account. account = %{public}@ | error + %{public}@
%{public}@: Merging %{public}@ with %{public}@. creditsString changed.
%{public}@: Merging %{public}@ with %{public}@. uniqueIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. accountName changed.
%{public}@: Merging %{public}@ with %{public}@. altDSID changed.
%{public}@: Merging %{public}@ with %{public}@. iTunesPassSerialNumber changed.
%{public}@: Merging %{public}@ with %{public}@. secureToken changed.
%{public}@: Merging %{public}@ with %{public}@. storeFrontIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. firstName changed.
%{public}@: Merging %{public}@ with %{public}@. lastName changed.
%{public}@: Merging %{public}@ with %{public}@. isActiveLockerAccount changed.
%{public}@: Merging %{public}@ with %{public}@. accountKind changed.
%{public}@: Merging %{public}@ with %{public}@. accountScope changed.
%{public}@: Merging %{public}@ with %{public}@. accountSource changed.
%{public}@: Merging %{public}@ with %{public}@. didFallbackToPassword changed.
%{public}@: Merging %{public}@ with %{public}@. freeDownloadsPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. isManagedAppleID changed.
%{public}@: Merging %{public}@ with %{public}@. isNewCustomer changed.
%{public}@: Merging %{public}@ with %{public}@. paidPurchasesPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. availableServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. enabledServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. eligibilityForService changed.
%{public}@: You shouldn't call -[SSAuthenticateRequest init] directly. Use initWithAccount: or initWithAuthenticationContext: instead.
%{public}@: [%{public}@] An error occurred while authenticating %{public}@. error = %@
%{public}@: [%{public}@] Starting authentication request. context = %@ | context.accountName = %{public}@
%{public}@: [%{public}@] callStack = %{public}@
%{public}@: Not entitled to talk to AuthKit. Sending request to itunesstored.
%{public}@: [%{public}@] Skiping authentication. %{public}@ doesn't need to be authenticated.
%{public}@: [%{public}@] The device doesn't have an active account. %{public}@ will become the active account.
%{public}@: [%{public}@] Failed to make the account the active account. error = %@
%{public}@: [%{public}@] The user cancelled the authentication.
%{public}@: [%{public}@] This is a new account that needs to be reviewed.
%{public}@: [%{public}@] Authentication request failed. error = %@
%{public}@: [%{public}@] Authentication request finished. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@
%{public}@: [%{public}@] Attempting to find an existing account using: altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
%{public}@: [%{public}@] Found an existing account. account = %{public}@
%{public}@: [%{public}@] There's no existing account matching the information we were given, but since we were given a username (%{public}@), we'll create one.
%{public}@: [%{public}@] An altDSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A DSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A password was provided.
%{public}@: [%{public}@] A PET was provided.
%{public}@: [%{public}@] There's no existing account matching the information we were given. The user will be prompted to enter their username and password.
%{public}@: XPC connection interrupted while attempting authentication request
%{public}@: An error occurred during authentication. error = %@
%@: Someone is calling setInitialPassword:. This method is deprecated and will be passed to setPasswordEquivalentToken: which may not be what the caller intended.
%{public}@: Timed out while launching application %{public}@.
%{public}@: Could not launch %{public}@. %{public}@
%{public}@: No PID for app ID %{public}@.
%{public}@: Taking process assertion %{public}@ for %{public}.2f seconds with reason %{public}@.
%{public}@: Could not take process assertion %{public}@.
%{public}@: Releasing power assertion %@.
%@: Timed out while getting application info. identifier = %{public}@ key = %{public}@
[%@] initializing with empty config 
[%@] Blacklisted event [%@] 
%{public}@: The in-process cache is disabled. The accounts will be fetched from the backing store.
%{public}@: Returning cached accounts.
%{public}@: We have no cached accounts. We'll load the accounts now.
%{public}@: Caching the accounts.
%{public}@: Failed to fetch the backing accounts. error = %{public}@
%{public}@: Unit test mode is enabled. We won't go to the backing account store.
%{public}@: Someone is attempting to get the active account. activeAccount = %{public}@
%{public}@: Someone is attempting to get the active locker account. activeLockerAccount = %{public}@
%{public}@: Clearing the in-process account cache.
%{public}@: [%{public}@] %{public}@ has a broken DSID. Attempting to repair it.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding IDMS account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding iCloud account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding AppleAuthentication account.
%{public}@: [%{public}@] Failed to find a valid DSID. Unable to repair the account.
%{public}@: [%{public}@] Successfully repaired an account's broken DSID. account = %{public}@
%{public}@: [%{public}@] We found a valid DSID, but we failed to save the account with the new DSID. account = %{public}@ | error = %{public}@
%{public}@: There's no local account. We'll create one.
%{public}@: Unable to get the local account. error = %{public}@
%{public}@: It appears that someone created the local account underneath us. Attempting to look it up again.
%{public}@: There are no accounts that need migrating to Accounts.framework.
%{public}@: Disabling the in-process cache.
%{public}@: Migrating %ld account(s).
%{public}@: [%{public}@] Removing an account from the KVS without migrating it because %@.
%{public}@: [%{public}@] Beginning migration of %{public}@. currentAccounts = %@
%{public}@: [%{public}@] Successfully migrated the account. Removing it from the KVS.
%{public}@: [%{public}@] Failed to migrate the account. We won't remove it from the KVS. error = %@
%{public}@: Ensuring that we have only a single active account after migration.
%{public}@: Migration is complete. Clearing the in-process cache and re-enabling it.
%{public}@: Posting a com.apple.itunesstored.accountschanged (and its internal varient) notification now that migration is complete.
%{public}@: We didn't migrate any accounts, so we aren't posting a com.apple.itunesstored.accountschanged (and its internal varient) notification.
%{public}@: After migration, there are no accounts remaining in the KVS.
%{public}@: After migration, the KVS contains the following accounts: %@
%{public}@: Timed out while trying to remove %{public}@.
%{public}@: Someone is attempting to remove a nil acount.
%{public}@: Removing %{public}@.
%{public}@: Failed to remove %{public}@. error = %@
%{public}@: Timed out while removing account %{public}@.
%{public}@: Timed out while removing accounts %@.
%{public}@: [%{public}@] Removing all cookies for %{public}@.
%{public}@: [%{public}@] Signing out of %{public}@.
%{public}@: [%{public}@] Successfully signed out of %{public}@. We'll now remove its cookies.
%{public}@: [%{public}@] Unable to sign out of %{public}@. error = %@
%{public}@: [%{public}@] We were told to skip the call to AuthKit.
%{public}@: [%{public}@] The user cancelled the create account dialog.
%{public}@: [%{public}@] The user opted to create a new account. This authentication will fail and we'll start the create account flow.
%{public}@: Making a copy of the KVS database for later debugging.
%{public}@: A copy of the KVS already exists. Removing it so we can create a new one.
%{public}@: Failed to copy the KVS database. error = %@
%{public}@: Failed to create the local account. error = %{public}@
%{public}@: Posting a com.apple.itunesstored.accountschanged.internal notification.
%{public}@: Posting a com.apple.itunesstored.accountschanged notification.
%{public}@: The value of SSActiveAccountIsManagedAppleID changed.
%{public}@: Attempted to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: Posting a %{public}@ notification.
%{public}@: Attempted to post metrics event, but our metricsQueue is NULL. Something went wrong
%{public}@: [%{public}@] Someone is attempting to save a nil acount.
%{public}@: [%{public}@] Refusing to save %{public}@. None of its properties have changed.
%{public}@: [%{public}@] Refusing to save %{public}@. It's backing account is nil.
%{public}@: [%{public}@] Attempting to save %{public}@. verifyCredentials = %{public}@
%{public}@: [%{public}@] Clearing the in-process cache in preparation of saving the account.
%{public}@: [%{public}@] Successfully saved the account.
%{public}@: [%{public}@] Failed to save the account. error = %@
%{public}@: An account is set to active when it shouldn't be. Deactivating it. account = %{public}@ | activeDSID = %{public}@
%{public}@: An account is set as the active locker account when it shouldn't be. Deactivating it. account = %{public}@ | activeLockerDSID = %{public}@
%{public}@: Failed to save %{public}@ after modifying its active or activeLocker property. error = %@
%{public}@: [%{public}@] Attempting to find an existing account. attempt = %ld
%{public}@: [%{public}@] Found a preexisting account with a broken altDSID or DSID that we can use.
%{public}@: [%{public}@] Refusing to migrate an account because there's already an account with the same username but different altDSID or DSID.
%{public}@: [%{public}@] There's no preexisting account. We'll create a new one.
%{public}@: [%{public}@] Found a pre-existing iTunes token. Setting the new account as authenticated.
%{public}@: [%{public}@] There's no pre-existing iTunes token. The new account will be unauthenticated.
%{public}@: [%{public}@] There's a preexisting account, %{public}@. We'll merge the given properties into it.
%{public}@: [%{public}@] Making the account the active account. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account inactive. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account the active locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] Making the account an inactive locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] It appears that someone created the account while we were attempting to migrate it. We'll perform the migration again.
SSAccountStore: [%{public}@] The raw password might actually be a PET.
SSAccountStore: [%{public}@] Successfully converted a raw password into a PET.
SSAccountStore: [%{public}@] Failed to convert a raw password into a PET. error = %{public}@
SSAccountStore: [%{public}@] We were told to update a nil account. We'll try to find an existing account matching the info we got from AuthKit. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
SSAccountStore: [%{public}@] Found an account existing account matching the AuthKit information.
SSAccountStore: [%{public}@] Failed to find an account existing account. We'll create a new account.
SSAccountStore: [%{public}@] The newly created account will be set to active.
SSAccountStore: [%{public}@] The newly created account will be set to inactive.
SSAccountStore: [%{public}@] AuthKit gave us an updated altDSID. oldAltDSID = %{public}@ | newAltDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated DSID. oldDSID = %{public}@ | newDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated username. oldUsername = %{public}@ | newUsername = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us updated identifiers. We'll attempt to find an existing account that matches the new identifiers.
SSAccountStore: [%{public}@] The new identifiers point to the same account we're already working with.
SSAccountStore: [%{public}@] The new identifiers are for a different existing account, %{public}@.
SSAccountStore: [%{public}@] We didn't find an existing account using the new identifiers.
SSAccountStore: [%{public}@] The account is the demo account. Saving the raw password on it.
SSAccountStore: [%{public}@] The account is the demo account, but we don't have a raw password to store on it.
SSAccountStore: [%{public}@] Failed to encode AKDevice. Proxied authentication will fail.
%{public}@: [%{public}@] We aren't prompting to create a new account because the account isn't empty.
%{public}@: [%{public}@] We aren't prompting to create a new account because we either shouldn't be prompting or SSAccountStoreAuthKitCanCreateNewAccountKey isn't set to YES.
%{public}@: [%{public}@] We aren't prompting to create a new account because Buddy is still running.
%{public}@: [%{public}@] Prompting the user to see if they want to create a new account.
SSAccountStore: [%{public}@] Buddy is still running. We can't prompt the user to enter their password. Prompt auth won't run.
SSAccountStore: [%{public}@] We were told not to prompt the user.
SSAccountStore: [%{public}@] Prompting the user for their password.
SSAccountStore: [%{public}@] Failed to update the account by prompting the user for their password. The authentication will fail. error = %@
SSAccountStore: [%{public}@] Unable to perform silent authentication if we don't have an account.
SSAccountStore: [%{public}@] Attempting to update the account silently while we're running Buddy.
SSAccountStore: [%{public}@] We aren't allowed to attempt silent authentication.
SSAccountStore: [%{public}@] Attempting to update the account silently.
SSAccountStore: [%{public}@] Successfully updated the account silently.
SSAccountStore: [%{public}@] Failed to silently update the account. error = %@
SSAccountStore: [%{public}@] Unable to perform silent password authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent password authentication.
SSAccountStore: [%{public}@] We don't have a raw password to convert into a PET.
SSAccountStore: [%{public}@] We were given a raw password. We'll attempt to convert it into a PET.
SSAccountStore: [%{public}@] Unable to perform silent PET authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent PET authentication.
SSAccountStore: [%{public}@] The account already has a PET we can use.
SSAccountStore: [%{public}@] We weren't given a PET, and we were told not to check alternate accounts for one.
SSAccountStore: [%{public}@] We weren't given a PET. We'll check alternate accounts for one.
SSAccountStore: [%{public}@] Found a PET on an alternate account we can use.
SSAccountStore: [%{public}@] Unable to get a PET from an alternate account.
SSAccountStore: [%{public}@] The PET appears to be misformed and could be a raw password.
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveAccount:] is deprecated. The caller should get the active account, set its active property to NO, and save it.
%{public}@: Failed to deactivate the active account, %{public}@. error = %@
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveLockerAccount:] is deprecated. The caller should get the active locker account, set its activeLocker property to NO, and save it.
%{public}@: Failed to deactivate the active locker account, %{public}@. error = %@
SSAccountStore: Received a com.apple.itunesstored.accountschanged notification.
SSAccountStore: Received a com.apple.itunesstored.accountschanged.internal notification.
[%@] Statement Didn't finish after stepping -- %@ -- %@
[%@] Deleting unreportable events returned: %d [%d rows affected]
[%@] Deleting reported events returned: %d [%d rows affected]
[%@] Update retry count on events returned: %d [%d rows affected]
[SSRestrictions]: Invalid trust status: %ld, or result: %d
[SSRestrictions]: Ignoring failed extended validation validation
[%@] Dropping event which has no body values after blacklist filtering. [%@]
[%@] Dropping event of a type which is blacklisted. [%@]
[%@] Insert Metrics Events returned error code: %d
[%@] Insert Metrics Events succeeded
[%@] Attempting to insert events with no URL. Dropping [%d] events.
[%@] Flushing Unreported Events on timer
[%@] Flush Unreported Events timer fired -- %@
[%@] Flush Unreported Events timer fired & reported success
[%@] Flush Unreported Events timer fired but was subsequently disabled
[%@] Setting Flush Unreported Events timer: %0.2f
[%@] Report Metrics Events returned error code: %d
[%@] Report Metrics Events succeeded
[%@] User has opted not to send Apple diagnostic information. Dropped %li events that require it.
[%@] Events dropped by Event Controller with no report URL: [%lu events]
[%@] Events dropped by disabled Event Controller: [%lu events]
[%@] Insert Events called with an empty array.
%@: Connection interrupted
%@: Invalid response
%@: Record analytics events did succeed: %@
%{public}@: [%{public}@] +[SSBag bagWithProfileConfig:] called. profileConfig = %{public}@
%{public}@: [%{public}@] There's a cached bag. profileConfig = %{public}@
%{public}@: [%{public}@] There's no cached SSBag for the given SSBagProfileConfig. We'll create one. profileConfig = %{public}@
%{public}@: [%{public}@] There's a cached bag. Someone else created it while we were waiting to. profileConfig = %{public}@
%{public}@: [%{public}@] Preemptively loading the SSBag. It was either newly created or expired.
%{public}@: Resetting all cached SSBags for profile config %{public}@.
%{public}@: Removing all debug backing dictionaries.
%{public}@: Overriding the backing dictionary for any bag with profile %{public}@ and version %{public}@.
%{public}@: Failed to determine the device type.
%{public}@: Failed to determine the OS type.
%{public}@: [%{public}@] _valueForKey called. key = %{public}@ | valueType = %{public}@
%{public}@: [%{public}@] Unable to load bag %{public}@. error = %{public}@
%{public}@: [%{public}@] The bag's value for %{public}@ (%{public}@) is missing or the wrong type. Returning the key's default value, %{public}@.
%{public}@: [%{public}@] We have a cached backing dictionary, but it's expired.
%{public}@: [%{public}@] We have a cached backing dictionary. We don't need to go to the server.
%{public}@: [%{public}@] We don't have a cached backing dictionary. We need to load the bag from the server.
%{public}@: [%{public}@] Issuing the ISStoreURLOperation to load the bag. attempt = %ld url = %{public}@
%{public}@: [%{public}@] Someone set a debug backing dictionary. We won't load from the server.
%{public}@: [%{public}@] Attempting to load the bag again due to urlCookies. originalCookies = %{public}@ newCookies = %{public}@
%{public}@: [%{public}@] Attempting to load the bag again because the response had a x-set-apple-store-front header. originalStorefront = %{public}@ | newStorefront = %{public}@
%{public}@: [%{public}@] Successfully loaded the backing dictionary from the server. backingDictionary = %{public}@
%{public}@: [%{public}@] Successfully loaded the backing dictionary from the server.
SSBag: Not posting a SSBagChangedNotification because self is out-of-scope.
%{public}@: [%{public}@] The backing dictionary we got from the server is different than the one we have. Updating the backing dictionary and sending out a SSBagChangedNotification.
%{public}@: [%{public}@] The backing dictionary was nil. Updating it with what we got back from the server and sending out a SSBagChangedNotification.
%{public}@: [%{public}@] The backing dictionary we got from the server is the same than the one we have. We won't send out a SSBagChangedNotification.
%{public}@: [%{public}@] Failed to load the backing dictionary from the server. error = %{public}@
%{public}@: [%{public}@] Unable to set a storefront suffix because we have no bundle identifier.
%{public}@: [%{public}@] Updating a storefront suffix. originalStorefontSuffix = %{public}@ | newStorefrontSuffix = %{public}@ | bundleID = %{public}@
[%@] -- Error creating directory: %@ -- %@
[%@] -- Error setting up database
[%@] -- nil database argument passed
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim2
[%{public}@]: Could not create a BLDownloadQueue sharedInstance
[%{public}@]: Could not retrieve the BLDownloadQueue class
[%{public}@]: downloadStatesDidChange: %@
[%{public}@]: downloadStatesDidChange: -- created SSBookDownloads: %@
[%{public}@]: __book_sendDownloadsChanged: %@
%@: Invalid condition: %@
%@: Enable all automatic download kinds
%@: Disable automatic download kinds: %@
%@: Set automatic download kinds: %@
SSDevice: Failed to update the device's storefront ID. We couldn't get the local account. error = %@
SSDevice: Successfully set the device's storefront to %{public}@
SSDevice: Failed to update the device's storefront ID. error = %@
%@: Enable automatic download kinds: %@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@. %{public}@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@.
%{public}@: [%{public}@] Failed to set a storefront ID on an account.
[SSCoding] Exception caught encoding object: %@
SSDownloadManager: Reconnect global handler: %@
%@: Connecting download handler: %lld
%@: Received message: (%lld, %lld)
%{public}@: Refusing to dismiss a pending follow-up. The follow-up was not for the specified account. identifier = %{public}@ | account.identifier = %{public}@ | followUp.accountIdentifier = %{public}@
%{public}@: Failed to create a FLFollowUpItem for %{public}@
%{public}@: Nil altDSID in userInfo for renew credentials FLFollowUpItem.
SSFollowUpController: Successfully posted the FLFollowUpItem. identifier = %{public}@
SSFollowUpController: Failed to post the FLFollowUpItem. identifier = %{public}@ | error = %{public}@
[%@]: %@: Received message: %lld - [%@ %@]
Failed to create directory, %@, for a log file. %@
Attempted to access a database that is now owned by root. It's been abandoned and replaced by %@.
%@: Could not create cookie storage path
%{public}@: Cannot remove cookies for a nil DSID.
%@: Feature Enabler removing ITFE cookie
%@: Feature Enabler updating ITFE cookie to value : %@
%@: Attempting to create AuthKit context with nil username
%@: Failed to lookup username, substituting empty string
%@: Failed to determine display username
%@: Requestor key not found, attempting to infer requestor from title enumeration.
%@: No requestor identified for title: %@
%@: No requestor identified, title type is not enumeration
%@: Schedule refresh in %.0f seconds
%@: Removing account with duplicate AppleID: %@ / %@
%@: %@ resulted in a cache miss.
%@: Cache is full. The oldest object will be evicted.
[%@] Invalid receipt [%ld bytes] -- [%@]
[%@] Could not create decoder
[%@] Could not read data
[%@] Could not parse data
[%@] No content
[%@] Failed to load data
[%@] Failed to parse data
[%@] Parsing receipt
[%@] Receipt type: %@
[%@] AdamID: %@
[%@] BundleID: %@
[%@] Application version: %@
[%@] DSID: %@
[%@] SHA1: %lu
[%@] Transaction date: %@
[%@] FR tool version: %@
[%@] Parental controls: %@
[%@] DeveloperID: %@
[%@] Receipt created: %@
[%@] FR app version: %@
[%@] HW type: %@
[%@] DownloadID: %@
[%@] Installer versionID: %@
[%@] Receipt expires: %@
[%@] Receipt renewal: %@
[%@] Organization display name: %@
[%@] Cancellation reason: %@
[%@] Could not read certificates
[%@] Unexpected number of certificates
[%@] Intermediate certificate is missing
[%@] Could not create trust
[%@] Failed to update policies
[%@] Failed to anchor Apple root certificate
[%@] Could not set verification date
[%{public}@] Feature Enabler migrating from version: %{public}@ to version: %{public}@
[%{public}@] Feature Enabler removing enabled features
[%{public}@]: Enabling AMF by default for iOS 11
%@ doesn't exist. There are no HAR files to cleanup.
Removing %@ to cleanup HAR log files.
Failed to remove %@. %@
Failed to create directory, %@, for HTTP archive files. %@
Failed to write HTTP archive file. %@
Wrote HTTP archive file to: %@
[%{public}@]: percentComplete: %f
%{public}@ is an unsupported deprecated method for book downloads
%{public}@ is an unsupported method for book downloads
%@: Could not setup database: [%d, %@]
%@: Spin for SQL lock: %ld, spin count: [%ld, %s, %@]
%@: Could not execute SQL: %@: [%ld, %s, %@]
%@: Step failed: %s: [%d, %s]
%@: Taking process assertion
%@: Releasing process assertion
%@: Releasing process assertion, background task expired
%@: Could not open read-only db: [%d, %@]
%@: Could not open database, resetting: [%d, %@]
%@: Resetting after error: [%d, %@]
%@: Re-open database: %@
%@: Could not prepare statement: %@: [%d, %s, %@]
%@: Unrecognized client key: %@
%{public}@: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %{public}@ error = %{public}@
%{public}@: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
%{public}@: Someone is attempting to finish or cancel a finished SSPromise.
[%@] Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
[%@] Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
[%@] Error %{public}@ flushing play activity events for %{public}@
[%@] Finished flushing play activity events for %{public}@ with error %{public}@
[%@] Recording play activity events: %@
[%@] Error %{public}@ recording %lu play activity events
[%@] Finished recording %lu play activity events with error %{public}@
[SSVPlayActivityController] Removing play events up to revision: %llu
[%@] Error %{public}@ removing play activity events upto revision %llu
[%@] Finished removing play activity events upto revision %llu with error %{public}@
[%@] Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
[%@] Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
[%@] Error %{public}@ getting play activity events for end point identifier %{public}@
[%@] Finished getting %lu play activity events for end point identifier %{public}@
[SSVPlayActivityController] Completing pending play events for revision index set: %@ session token: %llu with result: %lu
[SSVPlayActivityController] Session information: %@
[SSVPlayActivityController] Removing pending revisions index set %@ from sessionInformation revisions index set: %@
[SSVPlayActivityController] Resulting index set: %@
[SSVPlayActivityController] Existing additional pending revisions index set: %@
[SSVPlayActivityController] New additional pending revisions index set from flush success: %@
[SSVPlayActivityController] New additional pending revisions index set from flush failure: %@
[SSVPlayActivityController] Revisions version token has changed, clearing out.
[SSVPlayActivityController] Connection to daemon play activity controller lost.
[SSVPlayActivityController] Connection to daemon play activity controller invalidated.
[%{public}@]: [%{public}@] Initiating authentication request
[%{public}@]: [%{public}@] Authentication request completed with error: %{public}@
[%{public}@]: Received authentication request but context was missing or invalid
GetMACAddress returned 0x%08x
FindEthernetInterfaces returned 0x%08x
[%s] -- Input buffer too small [%d < %d]
IOServiceMatching kIONetworkControllerClass: %@
CFDictionaryCreateMutable returned a NULL dictionary.
IOServiceMatching returned a NULL dictionary for kIONetworkControllerClass.
IOServiceGetMatchingServices returned 0x%08x
IOServiceGetMatchingServices iterator %u
IORegistryEntryCreateCFProperty produced bytes
IORegistryEntryCreateCFProperty failed
IORegistryEntryGetParentEntry returned 0x%08x
%@: Created a nil NSURLSessionTask for %@.
Network Timing Metrics: %@
Flushing HTTP Archive (HAR) buffer. Count : %ld
%@: A nil value was loaded from the bag for key %@.
[%@] [%@] [%@] [%@]
%@: Creating a new NSURLSession with identifier %@.
[%@]: Metrics network inquiry error occurred. Error: %@
[%@]: Received low memory warning. Reducing HAR buffer size by: %lu
[%@]: No longer in low memory state. Increasing HAR buffer size
Writing %ld HTTP Archive file(s) to disk.
[%@] Fatal Error: Failed to create the database schema
[%@] Posting SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
[%@] Unsuccessful database migration function from %ld => %ld [Failure Count: %d]
[%@] Failed to migrate the DB %d times. [%ld vs %ld] Giving up, but nothing will work from this point forward. exit(1) crosses my mind, but probably not the right thing to do.
[%@] Although database migration function failed from %d => %d -- The schema did change. Perhaps another process is updating the database: [Currently at: %d]
[%@] -- Error creating PersistentCache: %@
[%@] -- Error setting up database: %@
[%@] -- Error setting up database.
[%@] [Updated: %d] [External: %d] [LookupKey: %@]
[%@] Failed to update SSDatabaseCacheEntry: %@
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim
[%{public}@]: _copyDownloadsForMessage: %@
[%{public}@]: _sendDownloadsChanged: %@
[%@] write bytes (%d) to path: %@
Error clearing cache entry: %@
[%@] -- Failed to read: %@
[%@] no manifests directory set
[%@] manifest directory doesn't exist %@
[%@] error getting manifest file URLs %@ %@
error setting cache urls for manifest %@ %@
error parsing manifest at %@ %@
**** No identifier passed to initialization routine [%@]
**** No SSCacheObjectFactory for typeIdentifier [%@]
**** Clearing SSCacheObjectStore [%@]
[%@] No data representation when adding object to cache with item identifier %@
[%@] No item identifier
[%@] No type identifier for item identifier %@
[%@] No data representation for item identifier %@
[%@] Configuration field-blacklisting trimmed %d fields from event [%@]
[%@] Error creating PLIST: %@ -- Input: %@
[%@] No Dictionary Representation for: %@
%@: SAP signature failed with bad session, attempting to sign again
%@: SAP signature failed with error: %@
%@: SAP signature verification failed with bad session, attempting to verify signature again
%@: SAP signature verification failed with error: %@
%@: Failed to obtain SAP context for signing
%@: Verify prime failed: %@
%@: Verify prime finished: %@
%@: Failed to obtain SAP context for signature verification
Metrics User database current version: %@
Metrics Errored out at version %@
Metrics User database migrated to version %@
[%@] Blacklisted fields produced an event with zero properties: %@
[%@] Blacklisted event excluded from insert: %@
[%@] Deleting out-of-date events returned: %d [%d rows affected]
[%@] Direct-access controller is calling through XPC to flush Unreported Events
[%@] Dropping Event Summary which has no value for "%@" -- %@
[%@] Empty input array wastes CPU/Power, but is not fatal
[%@] === Already Reported Event: %llu -- [Timestamp Reported: %@]
[%@] Error creating JSON: %@ -- Input: %@
[%@] Marking %d events are reported
[%{public}@] No applicable metric events to report.
[%{public}@] Invalid JSON. Object: %{private}@
[%{public}@] OutputStream did not accept all bytes: %{public}d vs %{public}lu
[%{public}@] Wrote a total of %{public}d bytes to output stream
[%{public}@] Invalid metric json object: %{private}@
[%@] Unreported Event Count: %d
[%@] Closed Stream [total_in: %d] [total_out: %d] -- %d
[%@] -- write called on stream with error: %@
[%@] -- error deflating stream [%d] [Errno: %d] [Context: %@]
[%@] -- error initializing z_stream [%d] [Errno: %d]
Watch Metrics User database current version: %@
Watch Metrics Errored out at version %@
Watch Metrics User database migrated to version %@
%@: Asking daemon for subscription entitlements.
[%@] Clear Updatable Asset Cache returned error code: %d
[%@] Clear Updatable Asset Cache succeeded
[%@] Refresh Updatable Asset Cache returned error code: %d
[%@] Refresh Updatable Asset Cache succeeded
error loading bundled manifest at %@ %@
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
[%@]: Loading download queue (%@, %@, %@) with reason: %ld
[%@]: Download queue response (key = %@ startID = %@ endID = %@)
[%@]: storeCorrelationID: %@
%{public}@: Unknown match state: %{public}@
%{public}@: Failed to instrument metrics dialog with match: %{public}@
%{public}@: Looking up clientId for userId: %@
%{public}@: Found clientId: %{public}@, userId: %@
%{public}@: Lookup clientId failed with no userId
%{public}@ is an unsupported method for software downloads
%{public}@ is an unsupported deprecated method for software downloads
[%@] -- Error creating database, removing if possible...: %@ -- %@
[%@] -- Removing database successful, attempting to recreate...: %@ -- %@
[%@] -- Error creating database for a second time, bailing out: %@
[%@] -- Error removing database: %@ -- %@
[%@] Statement Didn't finish after stepping -- %@
[%@] Statement didn't finish after stepping -- %@
u2A2
?h]#
