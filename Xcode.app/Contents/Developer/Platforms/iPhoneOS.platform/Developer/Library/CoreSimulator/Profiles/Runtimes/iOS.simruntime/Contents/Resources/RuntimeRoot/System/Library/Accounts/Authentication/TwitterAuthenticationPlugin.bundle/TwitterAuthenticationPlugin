identifier
isEqualToString:
dictionaryWithObjectsAndKeys:
setObject:forKey:
copy
hasEntitlement:
credentialForAccount:clientID:
username
credential
credentialType
client
_authenticateAccount:withHandler:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_swapCredentialsForAccount:withHandler:
class
bundleForClass:
localizedStringForKey:value:table:
stringWithFormat:
setAuthenticated:
saveAccount:withHandler:
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
showUserAlertWithTitle:message:cancelButtonTitle:otherButtonTitle:textFieldTitle:keyboardType:withCompletionBlock:
isAuthenticated
localizedAppName
_displayBadCredentialAlertForAccount:clientName:reason:accountStore:resetAuthenticatedOnAlertFailure:handler:
length
_consumerKey
setConsumerKey:
_consumerSecret
setConsumerSecret:
oauthToken
setOauthToken:
oauthTokenSecret
setOauthTokenSecret:
alloc
SLTwitterUserInfoURL
initWithURL:parameters:requestMethod:
setCredential:
userRecordWithDictionaryRepresentation:
performJSONRequestWithHandler:
name
init
password
SLTwitterAccessTokenURL
initWithURL:
setRequestMethod:
setParameter:forKey:
statusCode
JSONObjectWithData:options:error:
isKindOfClass:
objectForKeyedSubscript:
count
objectAtIndexedSubscript:
integerValue
encodeableError
SLDictionaryWithOAuthAccessTokenResponseData:
objectForKey:
initWithOAuthToken:tokenSecret:
setUsername:
setAccountDescription:
setAccountProperty:forKey:
_synchronouslyFetchFullNameForAccount:screenName:
_duplicateAccountExists:
performRequestWithHandler:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
countByEnumeratingWithState:objects:count:
accountPropertyForKey:
supportsAccountType:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
verifyCredentialsForAccount:accountStore:options:completion:
renewCredentialsForAccount:accountStore:options:completion:
isPushSupportedForAccount:
credentialForAccount:client:store:error:
renewalIDForAccount:
renewalIDsForAccount:accountStore:options:
discoverPropertiesForAccount:accountStore:options:completion:
renewCredentialsForAccount:accountStore:reason:completion:
verifyCredentialsForAccount:client:withHandler:
credentialForAccount:client:
credentialForAccount:client:error:
verifyCredentialsForAccount:accountStore:completion:
UTF8String
stringWithUTF8String:
v8@?0
%@ is entitled for all-account access. Returning Twitter credentials.
%@ is a non-entitled client. No credential for you.
The application does not have permission to add Twitter accounts using a password.
The account could not be verified because it does not have the necessary credentials.
TWITTER_AUTH_ALERT_TITLE
Localizable
TWITTER_AUTH_ALERT_CANCEL
TWITTER_AUTH_ALERT_SETTINGS
User cancelled out of Twitter authentication alert
v24@?0@"NSURL"8@"NSError"16
User requested transfer to settings from Twitter authentication alert
prefs:root=TWITTER
v24@?0^{__CFUserNotification=}8Q16
Twitter plugin marking account %@ as un-authenticated
screen_name
*** FullName failed with error: %@
v32@?0@8@"NSURLResponse"16@"NSError"24
Missing username or password passed while trying to authenticate!
x_auth_username
x_auth_password
client_auth
x_auth_mode
true
send_error_codes
json
format
Access token request failed and got responseDict: %@
errors
code
message
Access token request failed: %@
oauth_token
oauth_token_secret
user_id
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Invalid account passed, swapping access token request failed.
x_auth_access_token
x_auth_access_secret
exchange_auth
Swapping access token request failed: %@
Bav5TVOpCZd0XCrn8DuQrMGZbkHivaFYBnsbz3HUJE
XX[E:QjlmkJZqTBNhLOT:g
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
SLTwitterAuthenticationPlugin
ACDAccountAuthenticationPlugin
NSObject
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@?40
@48@0:8@16@24@32^@40
@24@0:8@16
@40@0:8@16@24@32
v40@0:8@16@24@?32
@32@0:8@16@24
@40@0:8@16@24^@32
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?@"ACAccount"@"NSError">40
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?q@"NSError">40
B24@0:8@"ACAccount"16
@"ACAccountCredential"48@0:8@"ACAccount"16@"ACDClient"24@"ACDAccountStore"32^@40
@"NSString"24@0:8@"ACAccount"16
@"NSArray"40@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSString"32@?<v@?q@"NSError">40
v40@0:8@"ACAccount"16@"ACDClient"24@?<v@?@"ACAccount"@"NSError">32
@"ACAccountCredential"32@0:8@"ACAccount"16@"ACDClient"24
@"ACAccountCredential"40@0:8@"ACAccount"16@"ACDClient"24^@32
v40@0:8@"ACAccount"16@"ACDAccountStore"24@?<v@?@"ACAccount"@"NSError">32
v72@0:8@16@24@32@40@48@56@?64
v60@0:8@16@24@32@40B48@?52
v32@0:8@16@?24
