v8@?0
com.apple.MediaControls
didMoveToWindow
setStyle
setSelectedMode
v16@?0q8
mediaControlsRoutingPickerView
T@"UIView",&,N,V_mediaControlsRoutingPickerView
routingViewControllerAnimationCount
Tq,N,V_routingViewControllerAnimationCount
style
Tq,N,V_style
selectedMode
Tq,N,V_selectedMode
mediaControlsContainerView
T@"MediaControlsContainerView",&,N,V_mediaControlsContainerView
routingView
T@"UIView",&,N,V_routingView
audioRoutingCorner
audioRoutingCorner-j71
connected
connectedAnimating
available
availableAnimating
routesAvailable
TB,N,GroutesAreAvailable,V_routesAvailable
routing
TB,N,GisRouting,V_routing
shouldPauseAnimations
TB,N,V_shouldPauseAnimations
SCRUBBER_LIVE
MediaControls
CC-Live
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
elapsedTrack
T@"UIView",&,N,V_elapsedTrack
remainingTrack
T@"UIView",&,N,V_remainingTrack
knobView
T@"UIView",&,N,V_knobView
elapsedTimeLabel
T@"UILabel",&,N,V_elapsedTimeLabel
remainingTimeLabel
T@"UILabel",&,N,V_remainingTimeLabel
liveLabel
T@"UILabel",&,N,V_liveLabel
liveBackground
T@"UIImageView",&,N,V_liveBackground
trackLayoutGuide
T@"UILayoutGuide",&,N,V_trackLayoutGuide
sliderValue
Td,N,V_sliderValue
currentlyTracking
TB,N,GisCurrentlyTracking,V_currentlyTracking
transitioning
TB,N,GisTransitioning,V_transitioning
empty
TB,N,GisEmpty,V_empty
response
T@"MPCPlayerResponse",&,N,V_response
durationSnapshot
T{?=dddddffBB},N,V_durationSnapshot
timeControlOnScreen
TB,N,GisTimeControlOnScreen,V_timeControlOnScreen
MediaControls-CoverSheet
ROUTE_NOT_CONNECTED_TITLE
ROUTE_CONNECTING_TITLE
MEDIA_CONTROLS_EMPTY_STATE_TITLE
COMPOSED_BY_TITLE_%@
MediaControlsHeaderView
v24@?0@"UIImageView"8@"UIImage"16
LIKE_TRACK_DEFAULT_TITLE
CC-Action-Star
v16@?0@"UIAlertAction"8
B8@?0
DISLIKE_TRACK_DEFAULT_TITLE
CC-Action-X
BOOKMARK_TRACK_DEFAULT_TITLE
CC-Action-Plus
CANCEL
backgroundView
T@"UIView",&,N
contentView
T@"UIView",R,N
selected
TB,N,GisSelected
headerView
T@"MediaControlsHeaderView",&,N,V_headerView
routingCornerView
T@"MediaControlsRoutingCornerView",&,N,V_routingCornerView
parentContainerView
T@"MediaControlsParentContainerView",&,N,V_parentContainerView
volumeContainerView
T@"MediaControlsVolumeContainerView",&,N,V_volumeContainerView
topDividerView
T@"UIView",&,N,V_topDividerView
bottomDividerView
T@"UIView",&,N,V_bottomDividerView
secondaryStringComponents
T@"NSMutableArray",&,N,V_secondaryStringComponents
coverSheetRoutingViewController
T@"MPMediaControlsViewController",&,N,V_coverSheetRoutingViewController
coverSheetRoutingViewControllerShouldBePresented
TB,N,V_coverSheetRoutingViewControllerShouldBePresented
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
onScreen
TB,N,GisOnScreen,V_onScreen
isListeningForResponse
TB,N,V_isListeningForResponse
groupSliderCoordinator
T@"MPVolumeGroupSliderCoordinator",&,N,V_groupSliderCoordinator
label
T@"NSString",C,N,V_label
supportedModes
TQ,N,V_supportedModes
endpointController
T@"MediaControlsEndpointController",&,N,V_endpointController
routingCornerViewTappedBlock
T@?,C,N,V_routingCornerViewTappedBlock
delegate
T@"<MediaControlsPanelViewControllerDelegate>",W,N,V_delegate
routingViewController
T@"MPAVRoutingViewController",&,N,V_routingViewController
vibrantStylingProvider
T@"MTVibrantStylingProvider",&,N,V_vibrantStylingProvider
T@"UIView",&,N,V_backgroundView
T@"UIView",R,N,V_contentView
TB,N,GisSelected,V_selected
syncState
Tq,N,V_syncState
positiveFeedbackGenerator
T@"UIImpactFeedbackGenerator",&,N,V_positiveFeedbackGenerator
negativeFeedbackGenerator
T@"UINotificationFeedbackGenerator",&,N,V_negativeFeedbackGenerator
gestureRecognizer
T@"UILongPressGestureRecognizer",&,N,V_gestureRecognizer
syncingEnabled
TB,N,GisSyncingEnabled,V_syncingEnabled
T@"<MediaControlsMasterVolumeSliderDelegate>",W,N,V_delegate
com.apple.Music
WHADoNotExpandOnSelection
AIRPLAY_ERROR_TITLE
AIRPLAY_CONNECTION_ERROR_MESSAGE
OK_BUTTON_TITLE
v12@?0B8
v24@?0@"NSIndexPath"8@"NSIndexPath"16
%@(devices)
preferredExpandedContentHeight
Td,R,N
preferredExpandedContentWidth
providesOwnPlatter
TB,R,N
dismissing
TB,N,GisDismissing,V_dismissing
endpointsManager
T@"MediaControlsEndpointsManager",&,N,V_endpointsManager
selectedRoute
T@"MPAVEndpointRoute",&,N,V_selectedRoute
routingContextUID
T@"NSString",C,N,V_routingContextUID
configuration
T@"MPMediaControlsConfiguration",&,N,V_configuration
MediaControls-ControlCenter
MediaControls-SingleSelect
MediaControls-MultiSelect
MediaControls-SharedQueue
MediaControls-<Unknown>
<%@:%p route: (%@) %@>
v16@?0@"NSError"8
v24@?0@"FBSProcessHandle"8@"NSError"16
requestController
T@"MPRequestResponseController",R,N,V_requestController
hasEverReceivedResponse
TB,N,V_hasEverReceivedResponse
state
Tq,N,V_state
attemptingConnection
TB,N,GisAttemptingConnection,V_attemptingConnection
routingController
T@"MPAVRoutingController",&,N,V_routingController
route
T@"MPAVEndpointRoute",&,N
automaticResponseLoading
TB,N,GisAutomaticResponseLoading,V_automaticResponseLoading
T@"NSString",C,N
bundleID
T@"NSString",R,C,N
representedBundleID
playerPath
T@"MPCPlayerPath",R,N
T@"MPCPlayerResponse",R,N
routeNames
T@"NSArray",R,C,N,V_routeNames
allowsAutomaticResponseLoading
TB,N,V_allowsAutomaticResponseLoading
hasAvailableRoutes
airplaying
TB,R,N,GisAirPlaying
isDeviceSystemRoute
routingToWireless
TB,R,N,GisRoutingToWireless
T@"<MediaControlsEndpointControllerDelegate>",W,N,V_delegate
CC-Volume-Knob
primaryVibrantStyling
T@"MTVibrantStyling",R,N
secondaryVibrantStyling
tertiaryVibrantStyling
T@"MPAVRoutingController",R,N,V_routingController
highlighted
TB,N,GisHighlighted,V_highlighted
v24@?0Q8^B16
B24@?0Q8^B16
v32@?0q8@"UIViewController<MediaControlsCollectionItemViewController>"16^B24
v28@?0@"UIViewController<MediaControlsCollectionItemViewController>"8B16@?<v@?>20
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v32@?0@8Q16^B24
v24@?0@"UIViewController<MediaControlsCollectionItemViewController>"8^B16
v32@?0@"NSNumber"8@"UIViewController<MediaControlsCollectionItemViewController>"16^B24
tapGestureRecognizer
T@"_MediaControlsTapHoldGestureRecognizer",&,N,V_tapGestureRecognizer
scrollView
T@"UIScrollView",&,N,V_scrollView
displayMode
Tq,N,V_displayMode
dataSource
T@"<MediaControlsCollectionViewDataSource>",W,N,V_dataSource
T@"<MediaControlsCollectionViewDelegate>",W,N,V_delegate
scrollViewInsets
T{UIEdgeInsets=dddd},N,V_scrollViewInsets
dismissalBlock
T@?,C,N,V_dismissalBlock
visibleTopViewControllers
T@"NSArray",R,N
visibleBottomViewControllers
visibleViewControllers
selectedItemIndex
Tq,N,V_selectedItemIndex
visibleIndexes
T@"NSIndexSet",R,N
mediaControls_untransformedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N
CS-Volume-Min
CS-Volume-Max
CC-Volume-Min
CC-Volume-Max
volumeSlider
T@"MPVolumeSlider",&,N,V_volumeSlider
numberOfItems
Tq,N,V_numberOfItems
hasPendingChanges
TB,N,V_hasPendingChanges
insertedIndexes
T@"NSIndexSet",R,C,N
deletedIndexes
updatedIndexes
T@"<MediaControlsHomeObserverDelegate>",W,N,V_delegate
com.apple.MediaControls.MediaControlsEndpointsManager/serialQueue
%@(endpoints)
v12@?0I8
B32@?0@"MPAVEndpointRoute"8Q16^B24
v32@?0@"NSIndexPath"8Q16^B24
v16@?0@"MPAVRoute"8
q24@?0@"MPAVEndpointRoute"8@"MPAVEndpointRoute"16
B24@?0@"NSIndexPath"8@"NSIndexPath"16
@"MPChangeDetails"8@?0
homeObserver
T@"MediaControlsHomeObserver",R,N,V_homeObserver
activeSystemRouteUID
T@"NSString",R,C,N,V_activeSystemRouteUID
pendingActiveSystemRouteUID
T@"NSString",R,C,N,V_pendingActiveSystemRouteUID
activeSystemRoute
T@"MPMediaControlsConfiguration",R,C,N,V_configuration
discoveryMode
Tq,N,V_discoveryMode
routes
T@"NSArray",R,C,N,V_routes
T@"<MediaControlsEndpointsManagerDelegate>",W,N,V_delegate
CC-Previous
CC-Play
CC-Next
CC-Stop
CC-Pause
CC-Hamburger
CC-Skip-Backward
CC-Star-Filled
CC-Star
CC-Skip-Forward
middleButton
T@"MediaControlsTransportButton",&,N,V_middleButton
rightButton
T@"MediaControlsTransportButton",&,N,V_rightButton
mediaControlsBundle
T@"NSBundle",&,N,V_mediaControlsBundle
tintColorForCurrentStyle
T@"UIColor",&,N,V_tintColorForCurrentStyle
leftButton
T@"MediaControlsTransportButton",&,N,V_leftButton
ratingActionSheetDelegate
T@"<MediaControlsRatingActionSheet>",W,N,V_ratingActionSheetDelegate
CC-AirPlay
CC-Play-Pause
{CGRect={CGPoint=dd}{CGSize=dd}}48@?0{CGRect={CGPoint=dd}{CGSize=dd}}8d40
artworkBackground
T@"MTMaterialView",&,N,V_artworkBackground
shadow
T@"UIView",&,N,V_shadow
primaryMarqueeView
T@"MPUMarqueeView",&,N,V_primaryMarqueeView
primaryLabel
T@"UILabel",&,N,V_primaryLabel
secondaryMarqueeView
T@"MPUMarqueeView",&,N,V_secondaryMarqueeView
secondaryLabel
T@"UILabel",&,N,V_secondaryLabel
shouldUseOverrideSize
TB,N,V_shouldUseOverrideSize
buttonBackground
T@"MTMaterialView",&,N,V_buttonBackground
T@"MPCPlayerPath",C,N,V_playerPath
artworkView
T@"UIImageView",&,N,V_artworkView
placeholderArtworkView
T@"UIImageView",&,N,V_placeholderArtworkView
routeLabel
T@"MediaControlsRouteLabel",&,N,V_routeLabel
primaryString
T@"NSString",C,N,V_primaryString
secondaryString
T@"NSString",C,N,V_secondaryString
routingButton
T@"MPButton",&,N,V_routingButton
doneButton
T@"MPButton",&,N,V_doneButton
playPauseButton
T@"MPButton",&,N,V_playPauseButton
launchNowPlayingAppButton
T@"UIButton",&,N,V_launchNowPlayingAppButton
marqueeEnabled
TB,N,V_marqueeEnabled
buttonType
Tq,N,V_buttonType
overrideSize
T{CGSize=dd},N,V_overrideSize
touchUpInsideCommandRequest
T@"MPCPlayerCommandRequest",&,N,V_touchUpInsideCommandRequest
holdBeginCommandRequest
T@"MPCPlayerCommandRequest",&,N,V_holdBeginCommandRequest
holdEndCommandRequest
T@"MPCPlayerCommandRequest",&,N,V_holdEndCommandRequest
shouldPresentActionSheet
TB,N,V_shouldPresentActionSheet
performingHighlightAnimation
TB,R,N,GisPerformingHighlightAnimation,V_performingHighlightAnimation
com.apple.MediaControls.displayControlCenterWidget
com.apple.MediaControls.expandPlatters.controlCenter
com.apple.MediaControls.expandPlatters.music
com.apple.MediaControls.expandPlatters.others
com.apple.MediaControls.routesButtonTapped
com.apple.MediaControls.expandPlatter
com.apple.MediaControls.routePicked.local
com.apple.MediaControls.routePicked.remote
com.apple.MediaControls.goToNowPlayingApp
primaryVisualEffectView
T@"UIVisualEffectView",&,N,V_primaryVisualEffectView
T@"MPCPlayerResponse",&,N
TB,N,GisTimeControlOnScreen
mediaControlsTransportStackView
T@"MediaControlsTransportStackView",&,N,V_mediaControlsTransportStackView
mediaControlsTimeControl
T@"MediaControlsTimeControl",&,N,V_mediaControlsTimeControl
bundleWithIdentifier:
localizedStringForKey:value:table:
mediaControls_localizedStringForKey:inTable:
mediaControlsBundle
initWithFrame:
alloc
mediaControlsContainerView
addSubview:
mediaControlsRoutingPickerView
setClipsToBounds:
layoutSubviews
traitCollection
displayScale
bounds
selectedMode
setFrame:
didMoveToWindow
_updateTimeControlVisibility:
setStyle:
_updateRoutingPickerVisibilityAnimated:
setNeedsLayout
setSelectedMode:animated:
_toggleRoutingPickerAnimated:
setHidden:
setAlpha:
_isInAWindow
setTimeControlOnScreen:
style
isTimeControlOnScreen
_setInitialFrameForRoutingView:
performWithoutAnimation:
layoutIfNeeded
initWithMass:stiffness:damping:initialVelocity:
initWithControlPoint1:controlPoint2:
setSpringCubicTimingParameters:
initWithDuration:timingParameters:
addAnimations:
addCompletion:
startAnimation
isDescendantOfView:
removeFromSuperview
setSelectedMode:
setRoutingView:
.cxx_destruct
setMediaControlsContainerView:
routingView
setMediaControlsRoutingPickerView:
routingViewControllerAnimationCount
setRoutingViewControllerAnimationCount:
_style
_selectedMode
_mediaControlsContainerView
_routingView
_mediaControlsRoutingPickerView
_routingViewControllerAnimationCount
initWithFrame:style:endpointRoute:outputDeviceRoute:
_createVolumeSlider
arrayWithObject:
addObject:
copy
countByEnumeratingWithState:objects:count:
animateAlongsideTransition:completion:
performAnimations
performCompletions
_animations
_completions
setUserInteractionEnabled:
currentDevice
ccuiSupportsGroupRendering
URLForResource:withExtension:
packageWithContentsOfURL:type:options:error:
setPackage:
setStateName:
_updateGlyph
routesAreAvailable
isRouting
shouldPauseAnimations
setRouting:
setRoutesAvailable:
setShouldPauseAnimations:
_routesAvailable
_routing
_shouldPauseAnimations
init
setTranslatesAutoresizingMaskIntoConstraints:
setText:
imageNamed:inBundle:
setImage:
setSemanticContentAttribute:
elapsedTrack
remainingTrack
knobView
elapsedTimeLabel
remainingTimeLabel
liveBackground
liveLabel
widthAnchor
constraintEqualToConstant:
heightAnchor
arrayWithObjects:count:
centerXAnchor
leadingAnchor
constraintEqualToAnchor:
setPriority:
centerYAnchor
constraintEqualToAnchor:constant:
trailingAnchor
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
bottomAnchor
arrayByAddingObjectsFromArray:
activateConstraints:
lightGrayColor
setTintColor:
monospacedDigitSystemFontOfSize:weight:
setFont:
layer
setMaskedCorners:
setEnabled:
_updateStyle
viewDidMoveToSuperview
_updateTimeControl
setCornerRadius:
timeIntervalSinceReferenceDate
_updateSliderPosition
_updateLabels:withRemainingDuration:
_updateDisplayLinkPause
locationInView:
frame
deactivateConstraints:
_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:
updateLabelAvoidance
response
tracklist
playingItemIndexPath
items
itemAtIndexPath:
durationSnapshot
sliderValue
seekCommand
changePositionToElapsedInterval:
performRequest:completion:
setDurationSnapshot:
setSliderValue:
setConstant:
stringFromSeconds:
convertRect:fromView:
isCurrentlyTracking
setTransform:
pointInside:withEvent:
primaryVibrantStyling
mc_applyVibrantStyling:
tertiaryVibrantStyling
secondaryVibrantStyling
isEmpty
alpha
isEnabled
duration
setEmpty:
setPaused:
createDisplayLinkIfNeeded
invalidateDisplayLinkIfNeeded
_displayLinkTick:
displayLinkWithTarget:selector:
mainRunLoop
addToRunLoop:forMode:
setPreferredFramesPerSecond:
removeFromRunLoop:forMode:
invalidate
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
beginTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
continueTrackingWithTouch:withEvent:
_updateLabels:withTargetTimestamp:
setTransitioning:
setResponse:
traitCollectionDidChange:
isTransitioning
setElapsedTrack:
setRemainingTrack:
setKnobView:
setElapsedTimeLabel:
setRemainingTimeLabel:
setLiveLabel:
setLiveBackground:
trackLayoutGuide
setTrackLayoutGuide:
setCurrentlyTracking:
_defaultConstraints
_trackingConstraints
_initialConstraints
_knobViewXConstraint
_displayLink
_elapsedTimeFormatter
_remainingTimeFormatter
_lastRecordedTime
_currentTimeInTrack
_elapsedTime
_remainingTime
_debugPreviousDisplayLinkPaused
_transitioning
_empty
_timeControlOnScreen
_currentlyTracking
_response
_elapsedTrack
_remainingTrack
_knobView
_elapsedTimeLabel
_remainingTimeLabel
_liveLabel
_liveBackground
_trackLayoutGuide
_sliderValue
_durationSnapshot
initWithStyle:
initWithNibName:bundle:
initWithFrame:style:
setDelegate:
initWithFrame:slider:
initWithMasterVolumeSlider:individualVolumeSliders:
whiteColor
topDividerView
setBackgroundColor:
bottomDividerView
headerView
routingButton
headerViewButtonPressed:
addTarget:action:forControlEvents:
doneButton
playPauseButton
launchNowPlayingAppButton
headerViewLaunchNowPlayingAppButtonPressed:
parentContainerView
mediaControlsTransportStackView
setRatingActionSheetDelegate:
routingCornerView
vibrantStylingWithStyle:andRecipe:
traitCollectionWithPrimaryVibrantStyling:
traitCollectionWithSecondaryVibrantStyling:
traitCollectionWithTertiaryVibrantStyling:
traitCollectionWithTraitsFromCollections:
setOverrideTraitCollection:
setSupportedModes:
setSelected:
setButtonType:
systemRoute
setAllowsNowPlayingApplicationLaunch:
initWithEndpoint:
setConfiguration:
setEndpointController:
setLabel:
endpointController
setAllowsAutomaticResponseLoading:
viewDidLoad
view
setAutoresizingMask:
backgroundView
_routingCornerViewReceivedTap:
initWithTarget:action:
setCancelsTouchesInView:
addGestureRecognizer:
_mediaControlsPanelViewControllerReceivedInteraction:
mediaControlsTimeControl
volumeContainerView
viewDidLayoutSubviews
sharedApplication
userInterfaceLayoutDirection
metricsForTextStyle:
scaledValueForValue:compatibleWithTraitCollection:
sizeThatFits:
sendSubviewToBack:
viewWillAppear:
setOnScreen:
beginAppearanceTransition:animated:
_updateHeaderUI
viewDidAppear:
endAppearanceTransition
viewWillDisappear:
_dismissRoutingViewControllerFromCoverSheetIfNeeded
viewDidDisappear:
isViewLoaded
insertSubview:atIndex:
superview
_updateSecondaryStringFormat
supportedModes
_setRoutingPickerVisible:animated:
delegate
label
route
volumeSlider
setGroupRoute:
_updateOnScreenForStyle:
vibrantStylingWithStyle:
isOnScreen
setMarqueeEnabled:
_updateConfiguration
_updateRoutingCornerView
_updateRouteNameLabel
isDeviceSystemRoute
representedBundleID
applicationProxyForIdentifier:
localizedName
setPrimaryString:
setSecondaryString:
secondaryStringComponents
removeAllObjects
setArtworkCatalog:
artworkView
clearArtworkCatalogs
metadataObject
song
_updateControlCenterMetadata:
state
_updatePlaceholderArtwork
isExplicitSong
title
stringByAppendingString:
bundleID
shouldShowComposer
composer
name
length
initWithFormat:
artist
album
componentsJoinedByString:
artworkCatalog
routeLabel
setRoute:
isArtworkVisuallyIdenticalToCatalog:
setFittingSize:
setDestinationScale:
setCacheIdentifier:forRequestingContext:
placeholderArtworkView
setDestination:configurationBlock:
image
playerPath
mainScreen
scale
_applicationIconImageForBundleIdentifier:format:scale:
_currentDeviceRoutingIconImage
_route
_iconImageForRoute:
updateArtworkStyle
firstObject
dismissMediaControlsPanelViewController:completion:
_presentRoutingViewControllerFromCoverSheet
mediaControlsPanelViewController:willToggleRoutingPicker:
postAnalyticKind:
animateWithDuration:animations:
mediaControlsPanelViewController:didToggleRoutingPicker:
setPresentingAppBundleID:
setRoutingContextUID:
setShouldPreventAutorotation:
initWithConfiguration:
setCoverSheetRoutingViewController:
coverSheetRoutingViewController
setCoverSheetRoutingViewControllerShouldBePresented:
window
rootViewController
presentViewController:animated:completion:
coverSheetRoutingViewControllerShouldBePresented
dismiss
configuration
allowsNowPlayingApplicationLaunch
launchNowPlayingApp
likeCommand
value
dislikeCommand
wishlistCommand
alertControllerWithTitle:message:preferredStyle:
systemPinkColor
localizedTitle
changeValue:
_actionWithTitle:image:style:handler:shouldDismissHandler:
_setChecked:
addAction:
_addSectionDelimiter
actions
colorWithWhite:alpha:
_setTitleTextColor:
_setTitleTextAlignment:
dismissViewControllerAnimated:completion:
actionWithTitle:style:handler:
leftButton
popoverPresentationController
setSourceView:
setSourceRect:
setOverrideSize:
clearOverrideSize
mediaControlsPanelViewController:didReceiveInteractionEvent:
titleView
subtitleView
setSubtitleViewAlpha:
iconView
separatorView
color
colorWithAlphaComponent:
setSeparatorColor:
setThemeDelegate:
setGroupSliderCoordinator:
individualVolumeSliders
count
synced
syncSliders:
isRoutingToWireless
hasAvailableRoutes
panelViewControllerForCoverSheet
endpointController:didLoadNewResponse:
endpointControllerDidChangeState:
endpointControllerDidUpdateRoutingAvailability:
endpointControllerRouteDidUpdate:
presentRatingActionSheet:
routingViewController:willDisplayCell:
contentInsetsForRoutingViewController:
mediaControlsViewControllerDidReceiveInteraction:
mediaControlsViewController:didSelectRoute:
shouldEnableSyncingForSlider:
slider:syncStateWillChangeFromState:toState:
slider:shouldCancelSnapWithTouch:
willTransitionToSize:withCoordinator:
setBackgroundView:
contentView
isSelected
shouldAutomaticallyForwardAppearanceMethods
setVibrantStylingProvider:
setRoutingViewController:
setRoutingCornerViewTappedBlock:
routingViewController
vibrantStylingProvider
setHeaderView:
setRoutingCornerView:
setParentContainerView:
setVolumeContainerView:
setTopDividerView:
setBottomDividerView:
setSecondaryStringComponents:
isListeningForResponse
setIsListeningForResponse:
groupSliderCoordinator
routingCornerViewTappedBlock
_lastKnownSize
_selected
_coverSheetRoutingViewControllerShouldBePresented
_onScreen
_isListeningForResponse
_contentView
_backgroundView
_routingViewController
_delegate
_vibrantStylingProvider
_headerView
_routingCornerView
_parentContainerView
_volumeContainerView
_topDividerView
_bottomDividerView
_secondaryStringComponents
_coverSheetRoutingViewController
_artworkCatalog
_groupSliderCoordinator
_label
_supportedModes
_endpointController
_routingCornerViewTappedBlock
setSyncState:
thumbView
setShadowRadius:
setShadowOpacity:
handleLongPress:
createThumbView
forceTouchCapability
syncState
impactOccurred
prepare
notificationOccurred:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
shrinkThumb
force
maximumPossibleForce
animateWithDuration:delay:options:animations:completion:
bringSubviewToFront:
volumeController
isVolumeControlAvailable
isSyncingEnabled
setSyncingEnabled:
positiveFeedbackGenerator
setPositiveFeedbackGenerator:
negativeFeedbackGenerator
setNegativeFeedbackGenerator:
gestureRecognizer
setGestureRecognizer:
_growingThumbView
_forcePercent
_initialValue
_syncingEnabled
_syncState
_positiveFeedbackGenerator
_negativeFeedbackGenerator
_gestureRecognizer
dealloc
setDataSource:
reloadData
setDismissing:
presentingAppBundleID
isEqualToString:
stopPrewarming
routingContextUID
_setupEndpointsManager
_setupRoutingViewController
_setSelectedRoute:isUserSelected:
_updateDiscoveryMode
viewControllerForSelectedItem
numberWithInteger:
setDiscoveryModeOverride:
resetDisplayedRoutes
resetScrollPosition
endpointRoute
isDeviceRoute
setDisplayMode:
_transitionToVisibleIfNeeded
visibleViewControllers
_transitionToVisible:
_isReadyForAppearanceTransition
routes
dequeueReusableViewControllerForItemAtIndex:
indexOfObject:
objectAtIndex:
endpointControllerForRoute:
selectedItemIndex
_assignRouteViewControllerToSelectedPanelViewController
_updateSupportedModesForSelectedMediaControlsPanelViewController
setActiveRoute:completion:
dismissalBlock
setActiveSystemRoute:
didSelectRoute:
routeName
stringWithFormat:
initWithOptions:
setAlertHeader:
setAlertMessage:
setDefaultButtonTitle:
presentWithCompletion:
activeSystemRoute
connectAllowingAuthenticationWithCompletion:
_selectActiveSystemRouteIfNeeded
_updateEndpointRouteForOutputDeviceDataSource:
insertedItemIndexPaths
insertItemAtIndex:
deletedItemIndexPaths
deleteItemAtIndex:
updatedItemIndexPaths
reloadItemAtIndex:
moveItemAtIndex:toIndex:
enumerateItemMovesWithBlock:
performBatchUpdates:
displayMode
setDiscoveryMode:
viewControllerForItemAtIndex:
parentViewController
willMoveToParentViewController:
addChildViewController:
didMoveToParentViewController:
setEndpointRoute:
canModifyGroupMembership
supportsGrouping
_supportedModesForSelectedRoute:selectedMode:
setSupportsMultipleSelection:
initWithDataSource:name:
initWithStyle:routingController:
setPlaybackDataSource:
defaultCenter
removeObserver:name:object:
_routeDidChangeNotification:
addObserver:selector:name:object:
setSelectedItemIndex:animated:shouldScroll:
_tableView
_updateModesForSelectedMediaControlsPanelViewController
containsObject:
setSelectedRoute:
_isSelectedRouteInRoutes
routingViewController:didPickRoute:
routingViewControllerDidUpdateContents:
routingViewControllerDidShowAirPlayDebugScreen:
numberOfItemsInCollectionViewController:
mediaControlsCollectionViewController:viewControllerForItemAtIndex:
defaultSelectedItemIndexForCollectionViewController:
mediaControlsCollectionViewController:willDisplayViewController:forItemAtIndex:
mediaControlsCollectionViewController:didDisplayViewController:forItemAtIndex:
mediaControlsCollectionViewController:didEndDisplayingViewController:forItemAtIndex:
mediaControlsCollectionViewController:canSelectItemAtIndex:
mediaControlsCollectionViewController:willSelectItemAtIndex:withReason:
mediaControlsCollectionViewController:didSelectItemAtIndex:withReason:
endpointsManager:activeSystemRouteDidChange:
endpointsManager:defersRoutesReplacement:
preferredExpandedContentHeight
willBecomeActive
willResignActive
shouldBeginTransitionToExpandedContentModule
shouldFinishTransitionToExpandedContentModule
willTransitionToExpandedContentMode:
didTransitionToExpandedContentMode:
canDismissPresentedContent
dismissPresentedContentAnimated:completion:
controlCenterWillPresent
controlCenterDidDismiss
preferredExpandedContentWidth
providesOwnPlatter
startPrewarming
homeObserverDidUpdateKnownUIDs:
isDismissing
endpointsManager
setEndpointsManager:
selectedRoute
_outputDeviceRoutingDataSource
_lastSelectedModeForActivePanelViewController
_didRetrieveActiveSystemRouteOnce
_shouldReselectActiveSystemRoute
_prewarming
_shouldTransitionToVisibleWhenReady
_dismissing
_configuration
_endpointsManager
_selectedRoute
_routingContextUID
_initRoutingController
_createRequestController
_reloadPlayerPathWithRoute:
request
routeOtherThanHandsetAvailable
isAirPlayingToDevice
isRoutingToWirelessDevice
_getConnected:invalid:
_updateState
_connectIfNeeded
connection
isInvalidated
reset
setAttemptingConnection:
setAutomaticResponseLoading:
connectWithOptions:completion:
numberWithBool:
dictionaryWithObjects:forKeys:count:
optionsWithDictionary:
openApplication:withOptions:completion:
routeNames
isEqualToArray:
setHasEverReceivedResponse:
beginAutomaticResponseLoading
endAutomaticResponseLoading
propertySetWithProperties:
initWithProperties:relationships:
setTracklistRange:
setPlayingItemProperties:
setRequest:
initWithName:
isConnected
setState:
connectWithCompletion:
pathWithRoute:bundleID:playerID:
setPlayerPath:
setNeedsReload
_connectionDidInvalidate:
_connectionDidConnect:
updateRoutePropertiesIfNeeded
_connectionHasBecomeInvalid
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
isAirPlaying
allowsAutomaticResponseLoading
requestController
hasEverReceivedResponse
isAttemptingConnection
routingController
setRoutingController:
isAutomaticResponseLoading
_allowsAutomaticResponseLoading
_hasEverReceivedResponse
_attemptingConnection
_automaticResponseLoading
_routeNames
_state
_requestController
_routingController
setHitRectInsets:
blackColor
CGColor
setShadowColor:
setShadowOffset:
thumbRectForBounds:trackRect:value:
bezierPathWithOvalInRect:
CGPath
setShadowPath:
trackRectForBounds:
minimumValueImage
maximumValueImage
hitRectInsets
_minTrackView
_maxTrackView
_minValueView
_maxValueView
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
_thumbImageForStyle:
_traitCollectionWithValue:forTraitNamed:
_valueForTraitNamed:
mt_removeAllVibrantStyling
mt_applyVibrantStyling:
materialViewWithRecipe:options:
_setContinuousCornerRadius:
setHighlighted:
isHighlighted
_materialView
_highlightView
_highlighted
_commonInit
setShowsVerticalScrollIndicator:
setAutoresizesSubviews:
setHitTestsAsOpaque:
panGestureRecognizer
_hysteresis
_setHysteresis:
_handleScrollViewTap:
_wantsTapGestureRecognizer
_updateContentInsets
_beginAppearanceTransitionForChildViewControllers:animated:
_endAppearanceTransitionForChildViewControllers
_adjustForEnvironmentChangeIfNeededWithSize:transitionCoordinator:
anyObject
removeObject:
itemAtPoint:
objectForKey:
array
visibleIndexes
enumerateIndexesUsingBlock:
_setSelectedItemIndex:animated:shouldScroll:shouldNotifyDelegate:withReason:
_tileViews
_updateFramesForActiveViewControllersWithCoordinator:assumingSize:
_reloadDataIfNeeded
insertItemsAtIndexes:
deleteItemsAtIndexes:
reloadItemsAtIndexes:
_canPerformBatchUpdates
hasPendingChanges
_dequeueAndPerformBatchUpdatesIfNeeded
dataSource
validateCountForNumberOfItems:
_setHighlighted:forViewControllerAtIndex:
contentOffset
insertedIndexes
deletedIndexes
updatedIndexes
containsIndex:
removeObjectForKey:
allKeys
compare:
sortedArrayUsingSelector:
integerValue
numberWithLong:
setObject:forKey:
firstIndex
_frameForViewAtIndex:
_verticalSpacing
applyChanges
_updateContentSize
setContentOffset:
_indexesOfItemsInRect:
reverseObjectEnumerator
_insertViewControllerForIndex:
numberWithUnsignedInteger:
indexPassingTest:
indexWithOptions:passingTest:
lastIndex
_setFrame:forVisibleViewAtIndex:
frameAnimator
alphaAnimatorWithAnimations:
position
setPosition:
_enumerateActiveViewControllers:
_updateFrameForViewController:atIndex:withCoordinator:assumingSize:
_reapViewAtIndex:
_populateViewsInFrame:
contentSize
contentInset
setContentOffset:animated:
_removeViewController:
startAnimationAfterDelay:
_reapActiveViews
initWithNumberOfItems:
_removeInactiveViewControllersFromHierarchy
_preferredSelectedItemHeight
_regularItemHeight
numberOfItems
_scrollToSelectedItemAnimated:
_isScrollViewAnimatingScroll
removeObjectAtIndex:
_selectedItemHeightInSize:
_selectedItemHeightInSize:shouldIgnoreInsets:
_rangeOfItemsInRect:
initWithIndexesInRange:
_closestItemAtPoint:
_frameForViewAtIndex:size:
_frameForViewAtIndex:displayMode:size:
mutableCopy
removeIndex:
scrollRectToVisible:animated:
_backgroundCornerRadius
setMediaControls_untransformedFrame:
setContentInset:
_totalHeight
setContentSize:
_adjustForEnvironmentChangeWithSize:transitionCoordinator:
_transitionToDisplayMode:usingTransitionCoordinator:assumingSize:
scrollView
setScrollEnabled:
_transitionTopAndBottomViewControllersToVisible:completion:
_visibleTopViewControllers
_visibleBottomViewControllers
enumerateObjectsUsingBlock:
center
setCenter:
allValues
lastObject
_beginAppearanceTransitionIfNeeded:forChildViewController:animated:
_endAppearanceTransitionForChildViewControllerIfNeeded:
removeFromParentViewController
_setHighlighted:forViewController:
gestureRecognizers
enumerateKeysAndObjectsUsingBlock:
isDecelerating
isDragging
initWithDuration:controlPoint1:controlPoint2:animations:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
viewWillTransitionToSize:withTransitionCoordinator:
viewWillTransitionToSize:
viewControllerForItemAtPoint:
visibleTopViewControllers
visibleBottomViewControllers
setSelectedItemIndex:
setScrollViewInsets:
scrollToSelectedItemAnimated:
scrollViewInsets
setDismissalBlock:
tapGestureRecognizer
setTapGestureRecognizer:
setScrollView:
_activeViewControllers
_inactiveSelectedViewController
_inactiveViewControllers
_pendingUpdates
_controlCenterEdgeInsets
_lastKnownEnvironmentSize
_animatedSelectionCount
_appearanceTransitionCount
_shouldDisableAutoReaping
_shouldIgnoreScrollNotifications
_isAnimatingSelection
_isPerformingBatchUpdates
_needsReloadData
_countData
_highlightedItemIndex
_appeared
_dataSource
_dismissalBlock
_selectedItemIndex
_tapGestureRecognizer
_scrollView
_displayMode
_scrollViewInsets
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
_startingLocation
setBounds:
mediaControls_untransformedFrame
_updateVolumeStyle
didMoveToSuperview
_setIsOffScreen:
_flatImageWithColor:
imageFlippedForRightToLeftLayoutDirection
setMinimumValueImage:
setMaximumValueImage:
setContentMode:
setVolumeSlider:
_volumeSlider
addIndex:
addIndexes:
removeAllIndexes
copyWithZone:
setNumberOfItems:
setHasPendingChanges:
_insertedIndexes
_deletedIndexes
_updatedIndexes
_hasPendingChanges
_numberOfItems
UTF8String
sharedDispatcher
homeManager
_updateUIDs
addHomeObserver:
addHomeManagerObserver:
removeHomeObserver:
removeHomeManagerObserver:
homes
accessories
mediaProfile
routeUID
_notifyDelegate
homeDidUpdateName:
homeDidUpdateAccessControlForCurrentUser:
home:didAddAccessory:
home:didRemoveAccessory:
home:didAddUser:
home:didRemoveUser:
home:didUpdateRoom:forAccessory:
home:didAddRoom:
home:didRemoveRoom:
home:didUpdateNameForRoom:
home:didAddZone:
home:didRemoveZone:
home:didUpdateNameForZone:
home:didAddRoom:toZone:
home:didRemoveRoom:fromZone:
home:didAddServiceGroup:
home:didRemoveServiceGroup:
home:didUpdateNameForServiceGroup:
home:didAddService:toServiceGroup:
home:didRemoveService:fromServiceGroup:
home:didAddActionSet:
home:didRemoveActionSet:
home:didUpdateNameForActionSet:
home:didUpdateActionsForActionSet:
home:didAddTrigger:
home:didRemoveTrigger:
home:didUpdateNameForTrigger:
home:didUpdateTrigger:
home:didUnblockAccessory:
home:didEncounterError:forAccessory:
home:didUpdateHomeHubState:
home:didAddResidentDevice:
home:didRemoveResidentDevice:
home:didUpdateLocation:
home:didUpdateStateForOutgoingInvitations:
home:didUpdateAccesoryInvitationsForUser:
homeDidUpdateApplicationData:
home:didUpdateApplicationDataForRoom:
home:didUpdateApplicationDataForServiceGroup:
home:didUpdateApplicationDataForActionSet:
home:didUpdateLastExecutionDateForActionSet:
home:didUpdateAccessControlForUser:
home:didEnableNotifications:
home:didUpdateAutomaticSoftwareUpdateEnabled:
home:didUpdateMinimumMediaUserPrivilege:
home:didUpdateMediaPeerToPeerEnabled:
home:didUpdateMediaPassword:
home:didAddMediaSystem:
home:didRemoveMediaSystem:
home:didUpdateReprovisionStateForAccessory:
home:willReadValuesForCharacteristics:
home:willWriteValuesForCharacteristics:
home:willExecuteActionSets:
home:didReadValuesForCharacteristics:failedCharacteristics:
home:didWriteValuesForCharacteristics:failedCharacteristics:
home:didExecuteActionSets:failedActionSets:
home:didSelectRoom:
homeDidUpdateWallpaper:
home:didUpdateWallpaperForRoom:
home:remoteAccessStateDidChange:
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
homeManager:didUpdateStateForIncomingInvitations:
homeManagerDidUpdateApplicationData:
homeManagerDidUpdateCurrentHome:
homeManagerDidUpdateDataSyncInProgress:
homeManagerDidUpdateDataSyncState:
homeManager:didUpdateStatus:
homeManager:didUpdateResidentEnabledForThisDevice:
homeManager:didUpdateAccessAllowedWhenLocked:
homeManager:didUpdateThisDeviceIsResidentCapable:
homeManager:residentProvisioningStatusChanged:
homeManagerWillStartBatchNotifications:
homeManagerDidEndBatchNotifications:
homeKitDispatcher:manager:didChangeHome:
homeManagerDidFinishInitialDatabaseLoad:
homeManagerDidFinishUnknownChange:
homeManager:didUpdateLocationSensingAvailability:
beginObserving
stopObserving
hasAccessoryWithUID:
_homeManager
_knownUIDs
_serialQueue
_notifyQueue
_activeSystemRouteDidChange:
systemRouteWithContextUID:
_updateWithRoutes:
availableRoutes
_indexOfRouteWithUID:
_updateActiveRoute
_endpointControllerContainingOutputDevice:endpointWrapper:
supportsRemoteControl
unwrappedValue
indexOfObjectPassingTest:
objectEnumerator
endpointWrapper
item
getActiveRouteWithTimeout:completion:
arrayWithCapacity:
isSmartAudio
_homeHasRoute:
sortName
localizedCaseInsensitiveCompare:
sortUsingComparator:
changeDetailsToSectionedCollection:isEqualBlock:isUpdatedBlock:
_setRoutes:withChangeDetails:
getOutputDeviceIsPlaying:completion:
discoveryMode
homeObserver
activeSystemRouteUID
pendingActiveSystemRouteUID
_lastDiffedRoutes
_endpointControllersMap
_didLoadHomeUIDsOnce
_isRequestingActiveRoute
_discoveryMode
_routes
_homeObserver
_activeSystemRouteUID
_pendingActiveSystemRouteUID
easyTouchButtonWithType:
_updateButtonImage:button:
middleButton
rightButton
touchUpInsideLeftButton:
touchUpInsideMiddleButton:
touchUpInsideRightButton:
buttonHoldBegan:
buttonHoldReleased:
_updateButtonBlendMode:
shouldPresentActionSheet
ratingActionSheetDelegate
isHolding
touchUpInsideCommandRequest
holdBeginCommandRequest
holdEndCommandRequest
_resetTransportButton:
play
pause
stop
setTouchUpInsideCommandRequest:
changeItemCommand
previousItem
presentationStyle
preferredBackwardJumpIntervals
doubleValue
jumpByInterval:
systemFontOfSize:weight:
floatValue
skipIntervalImageForInterval:baseImage:font:scale:
beginSeekWithDirection:
endSeek
setHoldBeginCommandRequest:
setHoldEndCommandRequest:
setShouldPresentActionSheet:
nextItem
preferredForwardJumpIntervals
imageWithRenderingMode:
setImage:forState:
imageView
isUserInteractionEnabled
size
setLeftButton:
setMiddleButton:
setRightButton:
setMediaControlsBundle:
tintColorForCurrentStyle
setTintColorForCurrentStyle:
_leftButton
_ratingActionSheetDelegate
_middleButton
_rightButton
_mediaControlsBundle
_tintColorForCurrentStyle
buttonWithType:
shadow
artworkBackground
primaryMarqueeView
secondaryMarqueeView
buttonBackground
setMinificationFilter:
_handleContentSizeCategoryDidChangeNotification:
setForcesUppercaseText:
primaryLabel
setNumberOfLines:
secondaryLabel
setContentGap:
addCoordinatedMarqueeView:
shouldUseOverrideSize
overrideSize
buttonType
layoutTextInAvailableBounds:setFrames:
setImageEdgeInsets:
preferredContentSizeCategory
traitCollectionWithPreferredContentSizeCategory:
preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
primaryString
boundingRectWithSize:options:attributes:context:
secondaryString
_baselineOffsetFromBottom
setFadeEdgeInsets:
systemBlueColor
tintColor
marqueeEnabled
tintColorDidChange
_updateRTL
setShouldUseOverrideSize:
text
_isNaturallyRTL
setAnimationDirection:
setArtworkView:
setPlaceholderArtworkView:
setRouteLabel:
setRoutingButton:
setDoneButton:
setPlayPauseButton:
setLaunchNowPlayingAppButton:
setArtworkBackground:
setShadow:
setPrimaryMarqueeView:
setPrimaryLabel:
setSecondaryMarqueeView:
setSecondaryLabel:
setButtonBackground:
_marqueeEnabled
_shouldUseOverrideSize
_playerPath
_artworkView
_placeholderArtworkView
_routeLabel
_primaryString
_secondaryString
_routingButton
_doneButton
_playPauseButton
_launchNowPlayingAppButton
_buttonType
_artworkBackground
_shadow
_primaryMarqueeView
_primaryLabel
_secondaryMarqueeView
_secondaryLabel
_buttonBackground
_overrideSize
beginHighlight
endHighlight
contentRectForBounds:
imageRectForContentRect:
_layoutImageView
isPerformingHighlightAnimation
_shouldPresentActionSheet
_performingHighlightAnimation
_touchUpInsideCommandRequest
_holdBeginCommandRequest
_holdEndCommandRequest
initWithEffect:
primaryVisualEffectView
setMediaControlsTransportStackView:
setMediaControlsTimeControl:
setPrimaryVisualEffectView:
_mediaControlsTransportStackView
_mediaControlsTimeControl
_primaryVisualEffectView
titleLabel
MediaControls
MediaControlsParentContainerView
MediaControlsRoutingViewController
MediaControlsStyleCoordinator
MediaControlsRoutingCornerView
MediaControlsTimeControl
UIGestureRecognizerDelegate
NSObject
MediaControlsPanelViewController
MediaControlsEndpointControllerDelegate
MediaControlsRatingActionSheet
MPAVRoutingViewControllerThemeDelegate
MPMediaControlsViewControllerDelegate
MediaControlsMasterVolumeSliderDelegate
MediaControlsCollectionItemViewController
MediaControlsMasterVolumeSlider
MediaControlsEndpointsViewController
MPAVRoutingViewControllerDelegate
MediaControlsPanelViewControllerDelegate
MediaControlsCollectionViewDataSource
MediaControlsCollectionViewDelegate
MediaControlsEndpointsManagerDelegate
CCUIContentModuleContentViewController
MediaControlsEndpointController
MPRequestResponseControllerDelegate
MPAVRoutingControllerDelegate
MediaControlsVolumeSlider
MediaControlsTheme
MediaControlsStandaloneEndpointController
MediaControlsMaterialView
MediaControlsCollectionViewController
UIScrollViewDelegate
_MediaControlsTapHoldGestureRecognizer
MediaControlsVolumeContainerView
MediaControlsCollectionViewCountData
NSCopying
MediaControlsHomeObserver
HFHomeObserver
HMHomeDelegatePrivate
HMHomeDelegate
HFHomeManagerObserver
HMHomeManagerDelegatePrivate
HMHomeManagerDelegate
MediaControlsEndpointsManager
MediaControlsHomeObserverDelegate
MPAVOutputDevicePlaybackDataSource
MediaControlsTransportStackView
MediaControlsHeaderView
MediaControlsTransportButton
MediaControlsAnalytics
MediaControlsContainerView
MediaControlsRouteLabel
@32@0:8@16@24
@16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8q16
v28@0:8q16B24
v20@0:8B16
v24@0:8@16
q16@0:8
@"MediaControlsContainerView"
@"UIView"
v32@0:8@?16@?24
@"NSMutableArray"
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v72@0:8{?=dddddffBB}16
v32@0:8@16@24
v24@0:8d16
v80@0:8{?=dddddffBB}16d72
v32@0:8d16d24
B40@0:8{CGPoint=dd}16@32
{?=dddddffBB}16@0:8
d16@0:8
@"NSArray"
@"NSLayoutConstraint"
@"CADisplayLink"
@"AVTimeFormatter"
@"NSString"
@"MPCPlayerResponse"
@"UILabel"
@"UIImageView"
@"UILayoutGuide"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
v32@0:8@"MediaControlsEndpointController"16@"MPCPlayerResponse"24
v24@0:8@"MediaControlsEndpointController"16
v24@0:8@"MPCPlayerResponseItem"16
{UIEdgeInsets=dddd}24@0:8@16
v32@0:8@"MPAVRoutingViewController"16@"UITableViewCell<MPAVRoutingThemeableCellView>"24
{UIEdgeInsets=dddd}24@0:8@"MPAVRoutingViewController"16
v24@0:8@"MPMediaControlsViewController"16
v32@0:8@"MPMediaControlsViewController"16@"MPAVRoute"24
B40@0:8@16q24q32
B24@0:8@"MediaControlsMasterVolumeSlider"16
B40@0:8@"MediaControlsMasterVolumeSlider"16q24q32
B32@0:8@"MediaControlsMasterVolumeSlider"16@"UITouch"24
v40@0:8{CGSize=dd}16@32
v40@0:8{CGSize=dd}16@"MediaControlsStyleCoordinator"32
@"UIView"16@0:8
v24@0:8@"UIView"16
@24@0:8q16
v24@0:8Q16
v24@0:8B16B20
v24@0:8@?16
@?16@0:8
{CGSize="width"d"height"d}
@"MPAVRoutingViewController"
@"<MediaControlsPanelViewControllerDelegate>"
@"MTVibrantStylingProvider"
@"MediaControlsHeaderView"
@"MediaControlsRoutingCornerView"
@"MediaControlsParentContainerView"
@"MediaControlsVolumeContainerView"
@"MPMediaControlsViewController"
@"MPArtworkCatalog"
@"MPVolumeGroupSliderCoordinator"
@"MediaControlsEndpointController"
@"<MediaControlsMasterVolumeSliderDelegate>"
@"UIImpactFeedbackGenerator"
@"UINotificationFeedbackGenerator"
@"UILongPressGestureRecognizer"
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoute"24
v24@0:8@"MPAVRoutingViewController"16
v32@0:8@16@?24
v28@0:8@16B24
v32@0:8@"MediaControlsPanelViewController"16@?<v@?>24
v32@0:8@"MediaControlsPanelViewController"16@24
v28@0:8@"MediaControlsPanelViewController"16B24
q24@0:8@16
@32@0:8@16q24
q24@0:8@"MediaControlsCollectionViewController"16
@"UIViewController<MediaControlsCollectionItemViewController>"32@0:8@"MediaControlsCollectionViewController"16q24
v40@0:8@16@24q32
B32@0:8@16q24
v40@0:8@16q24q32
v40@0:8@"MediaControlsCollectionViewController"16@"UIViewController<MediaControlsCollectionItemViewController>"24q32
B32@0:8@"MediaControlsCollectionViewController"16q24
v40@0:8@"MediaControlsCollectionViewController"16q24q32
v32@0:8@"MediaControlsEndpointsManager"16@"MPAVEndpointRoute"24
v32@0:8@"MediaControlsEndpointsManager"16@?<@"MPChangeDetails"@?>24
v28@0:8B16@?20
v28@0:8B16@?<v@?>20
v32@0:8^Q16^q24
@"MPAVOutputDeviceRoutingDataSource"
@"MPMediaControlsConfiguration"
@"MediaControlsEndpointsManager"
@"MPAVEndpointRoute"
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v40@0:8@16@24@?32
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v40@0:8@"MPAVRoutingController"16@"MPAVRoute"24@?<v@?B>32
v28@0:8@"MPAVRoutingController"16B24
@24@0:8@16
v32@0:8^B16^B24
@"<MediaControlsEndpointControllerDelegate>"
@"MPRequestResponseController"
@"MPAVRoutingController"
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"MTMaterialView"
@24@0:8@?16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v32@0:8{CGSize=dd}16
@32@0:8{CGPoint=dd}16
v32@0:8q16B24B28
v48@0:8{UIEdgeInsets=dddd}16
v32@0:8q16q24
q32@0:8{CGPoint=dd}16
d32@0:8{CGSize=dd}16
d36@0:8{CGSize=dd}16B32
{_NSRange=QQ}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8q16{CGSize=dd}24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8q16q24{CGSize=dd}32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v40@0:8@16{CGSize=dd}24
v56@0:8@16q24@32{CGSize=dd}40
v48@0:8q16@24{CGSize=dd}32
v28@0:8B16q20
v28@0:8B16@20
v32@0:8B16@20B28
v44@0:8q16B24B28B32q36
{UIEdgeInsets=dddd}16@0:8
@"NSMutableDictionary"
@"UIViewController<MediaControlsCollectionItemViewController>"
@"NSMutableSet"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"MediaControlsCollectionViewCountData"
@"<MediaControlsCollectionViewDataSource>"
@"<MediaControlsCollectionViewDelegate>"
@"_MediaControlsTapHoldGestureRecognizer"
@"UIScrollView"
{CGPoint="x"d"y"d}
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGSize=dd}32@0:8{CGSize=dd}16
@"MPVolumeSlider"
@24@0:8^{_NSZone=}16
B24@0:8q16
@"NSMutableIndexSet"
v40@0:8@16@24@32
v32@0:8@16Q24
v24@0:8@"HMHome"16
v32@0:8@"HMHome"16@"HMAccessory"24
v32@0:8@"HMHome"16@"HMUser"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMAccessory"32
v32@0:8@"HMHome"16@"HMRoom"24
v32@0:8@"HMHome"16@"HMZone"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMZone"32
v32@0:8@"HMHome"16@"HMServiceGroup"24
v40@0:8@"HMHome"16@"HMService"24@"HMServiceGroup"32
v32@0:8@"HMHome"16@"HMActionSet"24
v32@0:8@"HMHome"16@"HMTrigger"24
v40@0:8@"HMHome"16@"NSError"24@"HMAccessory"32
v32@0:8@"HMHome"16Q24
v32@0:8@16q24
v32@0:8@"HMHome"16@"HMResidentDevice"24
v32@0:8@"HMHome"16@"CLLocation"24
v32@0:8@"HMHome"16@"NSArray"24
v28@0:8@"HMHome"16B24
v32@0:8@"HMHome"16q24
v32@0:8@"HMHome"16@"NSString"24
v32@0:8@"HMHome"16@"HMMediaSystem"24
v32@0:8@"HMHome"16@"NSSet"24
v40@0:8@"HMHome"16@"NSSet"24@"NSSet"32
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v32@0:8@"HMHomeManager"16@"NSArray"24
v32@0:8@"HMHomeManager"16Q24
v28@0:8@"HMHomeManager"16B24
v40@0:8@"HFHomeKitDispatcher"16@"HMHomeManager"24@"HMHome"32
@"HMHomeManager"
@"NSObject<OS_dispatch_queue>"
@"<MediaControlsHomeObserverDelegate>"
v24@0:8@"MediaControlsHomeObserver"16
v32@0:8@"MPAVOutputDeviceRoute"16@?<v@?B>24
@32@0:8@16^@24
@"<MediaControlsEndpointsManagerDelegate>"
@"MediaControlsHomeObserver"
@"MediaControlsTransportButton"
@"<MediaControlsRatingActionSheet>"
@"NSBundle"
@"UIColor"
{CGSize=dd}52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
{CGSize=dd}16@0:8
@"MPCPlayerPath"
@"MediaControlsRouteLabel"
@"MPButton"
@"UIButton"
@"MPUMarqueeView"
@"MPCPlayerCommandRequest"
@"MediaControlsTransportStackView"
@"MediaControlsTimeControl"
@"UIVisualEffectView"
ffffff
?fff&ff
333333
@(#)PROGRAM:MediaControls  PROJECT:MediaPlayerFramework-1
MediaControlsCoverSheet _updateTimeControlVisibility Reason: %{public}@ timeControlOnScreen: %{BOOL}u _isInAWindow:%{BOOL}u
MediaControlsCoverSheet _updateDisplayLinkPaused paused: %{BOOL}u
MediaControlsCoverSheet _updateDisplayLinkPaused self.isCurrentlyTracking: %{BOOL}u self.durationSnapshot.rate: %0.2f self.durationSnapshot.isLiveContent: %{BOOL}u self.isEmpty: %{BOOL}u
<EndpointController:%p (%@)> -> Attempting connectWithOptions
<EndpointController:%p (%@)> <- connectWithOptions cb error: %d
<EndpointController:%p (%@)> [state: %ld, connected: %c, invalid: %c, allowsAutoload: %c, autoload: %c, everHadResponse: %c, attemptConnect: %c, delegate: %p]
<EndpointController:%p (%@)>  given nil bundleID. Launching Music by default
<EndpointController:%p (%@)>  cannot launch Now Playing App with bundleID: %@
<EndpointController:%p (%@)> -> defersResponseReplacement
<EndpointController:%p (%@)> changing state from %ld -> %ld
<EndpointController:%p (%@)> -> Attempting connectWithCompletion
<EndpointController:%p (%@)> <- connectWithCompletion cb error: %d
<EndpointController:%p (%@)> connectionDidInvalidate
<EndpointController:%p (%@)> connectionDidConnect
Could not get output device playing information from MediaRemote. MediaRemote Error: %{public}@
