description
element
range
stringByAppendingFormat:
.cxx_destruct
setElement:
setRange:
_element
_range
class
alloc
init
setDelegate:
defaultCenter
_didToggleSpeakScreenSetting
addObserver:selector:name:object:
server
_handleLockButtonPress
setSpringBoardActionHandlerId:
registerSpringBoardActionHandler:withIdentifierCallback:
sharedInstance
_didToggleHighlightContentSetting
quickSpeakHighlightText
registerUpdateBlock:forRetrieveSelector:withListener:
applyElementAttributeCacheScheme:
_observeNotifications:
removeObserver:name:object:
springBoardActionHandlerId
removeActionHandler:
assertionForFetchingMoreContent
invalidate
dealloc
numberWithLong:
arrayWithObjects:count:
registerNotifications:withIdentifier:withHandler:
unregisterNotifications:
systemWideElement
setPassivelyListeningForEvents:
_handlePauseSpeaking
_handleResumeSpeaking
_handleToggleSpeaking
_handleSpeakFaster
_handleSpeakSlower
_handleHideUI
_handleUnknownMessageIdentifier:
objectForKeyedSubscript:
doubleValue
valueWithCGPoint:
_updateCurrentAppWithPoint:
integerValue
_handleLoadUIAtAppPoint:
_handleSpeakThisWithOptions:appPoint:completion:
_handleFastForward:
_handleRewind:
_fetchContentStartingWithPageTurnElement:shouldRefreshContent:completion:
stopButtonPressed
setIdleTimerDisabled:
view
window
_convertPointFromSceneReferenceSpace:
convertPoint:toView:
sharedDisplayManager
removeContentViewController:withUserInteractionEnabled:forService:
hideWithCompletion:
_reallyHideUI
cancelPreviousPerformRequestsWithTarget:selector:object:
sentenceRanges
removeAllObjects
addContentViewController:withUserInteractionEnabled:forService:
highlightWords
quickSpeakWordHighlightColor
uiElement
colorWithAXAttribute:
colorWithCGColor:
setHighlightColor:
colorWithAlphaComponent:
highlightSentences
quickSpeakSentenceHighlightColor
setUnderlineColor:
setAlpha:
showUIForApplication:
showErrorMessage:
finishLoading
countByEnumeratingWithState:objects:count:
initWithAXElement:
elementWithUIElement:
traits
objectWithAXAttribute:
_speakThisAppendStringWithPause:
length
addObject:
isKindOfClass:
callStackSymbols
_dispatchQueueForFetches
string
updateCache:
arrayWithAXAttribute:
array
_appendContentFromElementsAndStrings:toContentString:speakingRanges:startWithPageTurnElement:
setSpeakingRangeAndElements:
setAssertionForFetchingMoreContent:
_clearAssertionForFetchingMoreContent
_assertionFlagsForStayingAlive
initWithPID:flags:reason:name:withHandler:
setInvalidationHandler:
setIsReadingFromFrontmostApp:
_takeAssertionIfNeeded
canResumeWithContent:
resumeSpeakingAfterDelay:error:
code
_stsErrorCodeForOratorErrorCode:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
setContent:
setSpeakingContext:
startSpeakingWithPreferredLanguage:delayBeforeStart:error:
_handleNoSpeakableContent:
startSpeakingWithPreferredLanguage:error:
valueWithRange:
enumerateSubstringsInRange:options:usingBlock:
CGPointValue
convertPointToViewControllerSpace:
_handleFinishShowingUI:
isPausingAssistiveTechnology
postNotification:withData:
setIsPausingAssistiveTechnology:
pauseSpeaking:
resumeSpeaking:
isSpeaking
isPaused
speakFaster
speakSlower
lastSpokenSubstringRange
_findIndexOfRange:
speakingRangeAndElements
count
objectAtIndexedSubscript:
fastForwardWithBoundary:
_readNextPageIfApplicableInForwardDirection:completion:
rewindWithBoundary:
_systemApp
elementForAttribute:parameter:
elementForAttribute:
readNextPageCompletion
setIsWaitingForPageScroll:
_giveUpWaitingForPageToScroll
content
isEqualToString:
setFlags:
_finishHandlingPageScroll:
_assertionFlagsForFetchingContent
performAXAction:
setReadNextPageCompletion:
performSelector:withObject:afterDelay:
sharedApplication
_setIdleTimerDisabled:forReason:
didStop
temporarilyHideUI
animateWithDuration:animations:
windowContextId
arrayWithCapacity:
convertRect:fromContextId:
_convertRectFromSceneReferenceSpace:
convertRect:fromView:
valueWithCGRect:
elementWithAXUIElement:
sendUserEventOccurred
_handleSpeakingStopped
didPause
didResume
_handleIdleTimerReset
substringWithRange:
isReadingFromFrontmostApp
removeObjectAtIndex:
firstObject
rangeValue
numberWithAXAttribute:
unsignedLongLongValue
boolWithAXAttribute:
objectWithAXAttribute:parameter:
lastObject
performAXAction:withValue:
_convertAXValueSceneReferenceRects:toView:fromElement:
setHighlightSelectionRects:
setSentenceHighlightSelectionRects:
quickSpeakHighlightOption
stopSpeaking:
_handleRateChangeSpeechIfNeeded:
_frontmostAppMayHaveChanged:
isWaitingForPageScroll
isEqual:
_handleNewPage
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
oratorDidStartSpeaking:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidCancelSpeaking:
orator:willSpeakRange:ofContent:
processMessage:withIdentifier:fromClientWithIdentifier:error:
messageWithIdentifierShouldBeProcessedAsynchronously:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
accessQueueForProcessingMessageWithIdentifier:
messageWithIdentifierRequiresWritingBlock:
processInitializationMessage:
serviceWasFullyInitialized
connectionWillBeInterruptedForClientWithIdentifier:
requiredEntitlementForProcessingMessageWithIdentifier:
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
fastForwardButtonPressed
rewindButtonPressed
playButtonPressed
pauseButtonPressed
speedUpButtonPressed
slowDownButtonPressed
fetchContentStringStartingWithPageTurnForUnitTest:
_pageDidScroll:
observer
setObserver:
setSentenceRanges:
currentSentenceRange
setCurrentSentenceRange:
lockButtonPressedSinceReadAllStart
setLockButtonPressedSinceReadAllStart:
_orator
_viewController
_currentApp
_currentPageTurnElement
_stopType
_isReadingFromFrontmostApp
_isPausingAssistiveTechnology
_isWaitingForPageScroll
_lockButtonPressedSinceReadAllStart
_speakingRangeAndElements
_springBoardActionHandlerId
_observer
_readNextPageCompletion
_assertionForFetchingMoreContent
_sentenceRanges
_currentSentenceRange
appendString:
isAXAttributedString
hasAttribute:
lowercaseString
bundleForClass:
localizedStringForKey:value:table:
initWithFrame:
initWithActivityIndicatorStyle:
setTranslatesAutoresizingMaskIntoConstraints:
setHidden:
addSubview:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setTextAlignment:
systemFontOfSize:
setFont:
whiteColor
setTextColor:
_accessibilitySetIsScannerElement:
setNumberOfLines:
_loadButtonsAndConstraints:
setUserInteractionEnabled:
controlBarSize
setFrame:
_handlePan:
initWithTarget:action:
addGestureRecognizer:
_headerTapped:
activateConstraints:
_updateAccessibilityElements
_buttons
setHidesMainViews:
startAnimating
stopAnimating
delegate
headerTapped
state
translationInView:
controlBarDragged:
setText:
_updateButton:withImageName:accessibilityLabel:
imageNamed:inBundle:
_flatImageWithColor:
setImage:forState:
setAccessibilityLabel:
buttonWithType:
setTintColor:
initWithImage:
_setDrawsAsBackdropOverlayWithBlendMode:
addTarget:action:forControlEvents:
_squareButtons
setPriority:
_roundButtons
setMaximizedConstraints:
setMinimizedConstraints:
addObjectsFromArray:
_tabModeButtonPressed
_addButtonWithImageName:accessibilityLabel:round:action:
_slowDownButtonPressed
_rewindButtonPressed
_playPauseButtonPressed
_fastForwardButtonPressed
_speedUpButtonPressed
_stopButtonPressed
_addButtonConstraints:
tabModeButtonPressed
maximizedConstraints
deactivateConstraints:
bringSubviewToFront:
minimizedConstraints
setNeedsLayout
arrayByAddingObjectsFromArray:
userInterfaceLayoutDirection
setAccessibilityElements:
nubbitSize
showLoading
showMainUI
setTitleHeader:
changeToPauseButton
changeToResumeButton
setInTabMode:
_activityIndicatorView
_playPauseButton
_tabModeButton
_slowdownButton
_stopButton
_rewindButton
_forwardButton
_speedupButton
_header
_dragView
_errorLabel
_inTabMode
_panGestureAnchor
_delegate
_minimizedConstraints
_maximizedConstraints
mainScreen
scale
bezierPathWithOvalInRect:
setLineWidth:
bezierPathWithRoundedRect:cornerRadius:
colorWithWhite:alpha:
stroke
currentDevice
_graphicsQuality
_unregisterNubbit
bounds
setView:
initWithTargetSerialQueue:
frame
initWithFrame:privateStyle:
layer
setMasksToBounds:
setCornerRadius:
setAutoresizingMask:
contentView
bundleId
setCurrentAppBundleIdentifier:
label
isSpringBoard
_enqueueCollapseTimer
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
highlightColorForColor:
highlightView
setSelectionColor:
sentenceHighlightView
sentenceHighlightColorForColor:
blackColor
highlightColor
insertSubview:atIndex:
setHighlightView:
sentenceHighlightSelectionRects
quickSpeakSentenceHighlightOption
currentUnmodifiedSentenceRects
_sliceRects:withSentenceRects:wordRects:
highlightSelectionRects
setSentenceHighlight:
underlineColor
insertSubview:belowSubview:
setSentenceHighlightView:
setCurrentUnmodifiedSentenceRects:
rectValue
valueWithRect:
cancel
afterDelay:processBlock:
quickSpeakNubbitNormalizedPosition
setQuickSpeakNubbitNormalizedPosition:
registerNubbit:delegate:
unregisterNubbit:
_registerNubbit
pinNubbitToEdge:
animateWithDuration:animations:completion:
moveBackInBounds
sharedService
currentAppBundleIdentifier
openApplication:options:withResult:
_saveNubbitPosition
_denormalizedNubbitPositionForViewSize:
_updateForTabMode
layoutIfNeeded
viewWillTransitionToSize:withTransitionCoordinator:
animateAlongsideTransition:completion:
_shouldForwardViewWillTransitionToSize
nubbitDidUpdatePosition:
loadView
title
panToPosition:
setBar:
nubbitMoveStartPosition
setNubbitMoveStartPosition:
gestureMoveStartPosition
setGestureMoveStartPosition:
_containingView
_collapseTimer
_nubbitMovedOutsideOfTabMode
_highlightColor
_underlineColor
_highlightSelectionRects
_bar
_highlightView
_sentenceHighlightView
_currentAppBundleIdentifier
_currentUnmodifiedSentenceRects
_nubbitMoveStartPosition
_gestureMoveStartPosition
 - %@, %@
element
T@"AXUIElement",&,N,V_element
range
T{_NSRange=QQ},N,V_range
v8@?0
v24@?0q8@"NSDictionary"16
v16@?0@"NSString"8
SpeakScreen
v24@?0q8@"NSData"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2402.6/Source/SpeakThisUIServer/SpeakThisUIServer.m
-[SpeakThisUIServer _appendContentFromElementsAndStrings:toContentString:speakingRanges:startWithPageTurnElement:]
Unexpected type for content item returned by kAXSpeakThisInfoAttribute: %@
-[SpeakThisUIServer _takeAssertionIfNeeded]
Should have cleared out any assertion we held earlier, before speaking new content.
Speak Screen Assertion
Received error when resuming speaking, even though orator claimed we could resume: %@
NO_SPEAKABLE_CONTENT_EXISTS
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
v12@?0B8
Received unknown message identifier %lu.
-[SpeakThisUIServer _readNextPageIfApplicableInForwardDirection:completion:]
Should have had an assertion for fetching more content
SpeakThis
Somehow spoke a string range %@ that contained an entire element's portion of our content string %@.
speakThisRangeInElement
speakThisCurrentString
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
speakingRangeAndElements
T@"NSArray",&,N,V_speakingRangeAndElements
springBoardActionHandlerId
T@"NSString",&,N,V_springBoardActionHandlerId
observer
T^{__AXObserver=},&,N,V_observer
isReadingFromFrontmostApp
TB,N,V_isReadingFromFrontmostApp
isPausingAssistiveTechnology
TB,N,V_isPausingAssistiveTechnology
isWaitingForPageScroll
TB,N,V_isWaitingForPageScroll
readNextPageCompletion
T@?,C,N,V_readNextPageCompletion
assertionForFetchingMoreContent
T@"BKSProcessAssertion",&,N,V_assertionForFetchingMoreContent
sentenceRanges
T@"NSMutableArray",&,N,V_sentenceRanges
currentSentenceRange
T{_NSRange=QQ},N,V_currentSentenceRange
lockButtonPressedSinceReadAllStart
TB,N,V_lockButtonPressedSinceReadAllStart
Localizable
Pause
PAUSE
Play
PLAY
Minimize
MINIMIZE
Tortoise
SLOW_DOWN
Rewind
REWIND
FastForward
FAST_FORWARD
Hare
SPEED_UP
Close
STOP
Maximize
MAXIMIZE
minimizedConstraints
T@"NSArray",&,N,V_minimizedConstraints
maximizedConstraints
T@"NSArray",&,N,V_maximizedConstraints
delegate
T@"<AXSpeakOverlayControlBarDelegate>",W,N,V_delegate
SPEAK_SCREEN
HOME_SCREEN
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
T@"AXSpeakOverlayControlBar",&,N,V_bar
highlightView
T@"QSSelectionHighlightView",&,N,V_highlightView
sentenceHighlightView
T@"QSSelectionHighlightView",&,N,V_sentenceHighlightView
nubbitMoveStartPosition
T{CGPoint=dd},N,V_nubbitMoveStartPosition
gestureMoveStartPosition
T{CGPoint=dd},N,V_gestureMoveStartPosition
currentAppBundleIdentifier
T@"NSString",&,N,V_currentAppBundleIdentifier
currentUnmodifiedSentenceRects
T@"NSArray",&,N,V_currentUnmodifiedSentenceRects
T@"<AXSpeakOverlayViewControllerDelegate>",W,N,V_delegate
highlightSelectionRects
T@"NSArray",&,N,V_highlightSelectionRects
sentenceHighlightSelectionRects
T@"NSArray",&,N
highlightColor
T@"UIColor",&,N,V_highlightColor
underlineColor
T@"UIColor",&,N,V_underlineColor
AXSpeakingRange
SpeakThisUIServer
AXOratorDelegate
NSObject
AXUIService
AXSpeakOverlayViewControllerDelegate
SpeakThisUIServerAdditions
AXSpeakOverlayControlBar
AXSpeakOverlayViewController
AXUINubbitDelegate
AXSpeakOverlayControlBarDelegate
@16@0:8
v16@0:8
v24@0:8@16
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"AXUIElement"
{_NSRange="location"Q"length"Q}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16{_NSRange=QQ}24@40
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
@48@0:8@16Q24@32^@40
B24@0:8Q16
v48@0:8@16Q24@32@?40
@24@0:8Q16
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
v20@0:8B16
v24@0:8@?16
{CGPoint=dd}32@0:8{CGPoint=dd}16
@24@0:8@16
@32@0:8{CGPoint=dd}16
v44@0:8@16@24@32B40
v32@0:8B16B20@?24
I16@0:8
v40@0:8q16@24@?32
q24@0:8q16
v28@0:8B16@?20
Q32@0:8{_NSRange=QQ}16
@40@0:8@16@24@32
^{__AXObserver=}16@0:8
v24@0:8^{__AXObserver=}16
@?16@0:8
@"AXOrator"
@"AXSpeakOverlayViewController"
@"AXElement"
@"NSArray"
@"NSString"
^{__AXObserver=}
@"BKSProcessAssertion"
@"NSMutableArray"
{CGSize=dd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8@16@24@32
@44@0:8@16@24B32:36
@"UIActivityIndicatorView"
@"UIButton"
@"UILabel"
@"UIView"
{CGPoint="x"d"y"d}
@"<AXSpeakOverlayControlBarDelegate>"
v24@0:8@"UIView"16
v32@0:8{CGPoint=dd}16
{CGPoint=dd}32@0:8{CGSize=dd}16
v40@0:8{CGSize=dd}16@32
{CGPoint=dd}16@0:8
@"_UIBackdropView"
@"AXDispatchTimer"
@"UIColor"
@"<AXSpeakOverlayViewControllerDelegate>"
@"AXSpeakOverlayControlBar"
@"QSSelectionHighlightView"
?333333
Received elements and strings: %{public}@
Content string was %{private}@
Speaking ranges were %{private}@
Clearing assertion for fetching more content.
Assertion for fetching more content was unexpectedly invalidated.
Took an assertion to handle page turning.
We were asked to speak the screen, but the setting was off.  Bailing.
ERROR: Application accessibility was disabled even though Speak Screen was in use.  Please file a bug with details about what you were doing before you saw this message.
SpeakThis-FetchContent
SpeakThis-StartSpeaking
Updated current app (app point: %{pubic}@) to %{public}@
Finishing handling page scroll.  Did read next page: %i
No longer allowing suspended app AX because we finished handling a page scroll.
Error speaking next page: %@
Updating assertion flags to keep app alive but not necessarily responsive.
Did not get page scroll notification in %f seconds.
Allowing suspended app AX while we turn the page.
We somehow needed to turn the page but had no assertion to keep the app alive.  Please file a bug with your recent syslog.
Updating flags on assertion so that we can fetch more content.
Page returned NO for scroll action.  No longer allowing suspended app AX.
Will speak range %{public}@ corresponding to "%{public}@"
SpeakThis-FetchRects
Range in element was %{public}@
Got text rects %{public}@
Got sentence rects %{public}@
Not getting text rects because the app being spoken is not foremost
Is reading from frontmost app: %i
Page scroll sent notification of failure.
Pid status changed: %{public}@
Screen changed
Page scrolled
