numberWithUnsignedLong:
stringWithUTF8String:
currentHandler
localizedNameOfStringEncoding:
handleFailureInFunction:file:lineNumber:description:
init
copy
handleFailureInMethod:object:file:lineNumber:description:
headerData
length
_encodedWordStartSequence
rangeOfData:options:range:
_lineSeparator
_encodedWordDelimiter
_encodedWordEndSequence
getBytes:range:
setEncodedWordEncoding:
setStringEncoding:
setLanguage:
setEncodedTextRange:
_encodedWordLanguageDelimiter
subdataWithRange:
alloc
initWithData:encoding:
initWithBytes:length:
encodedWordEncoding
encodedTextRange
_decodeBEncodedTextToData:
_decodeQEncodedTextToData:
initWithBase64EncodedData:options:
appendData:
_enumerateQByteRangesUsingBlock:
increaseLengthBy:
mutableBytes
bytes
initWithHeaderData:
identifyRangeOfEncodedWordAtIndex:
decodeEncodedTextToData:
.cxx_destruct
stringEncoding
language
_stringEncoding
_language
_headerData
_encodedWordEncoding
_encodedTextRange
canBeConvertedToEncoding:
string
description
class
stringWithFormat:
_prepareForEncoding
singleEncodedWordLength
lengthOfBytesUsingEncoding:
dataUsingEncoding:
_lengthOfQEncodedTextForBytes:length:
setCharacterSet:
setDecodedText:
setSingleEncodedWordLength:
_bEncodeToHeaderData:currentLineLength:
_qEncodeToHeaderData:currentLineLength:
characterSet
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
_writeEncodedWordPreambleToBuffer:length:
decodedText
base64EncodedDataWithOptions:
getBytes:length:
initWithCapacity:
setLength:
_writeQEncodedTextAndEndSequenceToHeaderBytes:fromDecodedBytes:length:
_getBytesWithoutSplittingComposedCharacters:targetQEncodedTextLength:usedLength:splitComposedCharacterSequence:usedQEncodedTextLength:extraLength:extraQEncodedTextLength:fromString:stringEncoding:range:remainingRange:
enumerateSubstringsInRange:options:usingBlock:
_findNextByteThatNeedsQEncodingBetweenStartByte:endByte:
initWithString:stringEncoding:language:
minimumLengthOfEncodedWord
encodeToHeaderData:currentLineLength:
_string
_characterSet
_decodedText
_singleEncodedWordLength
rangeOfComposedCharacterSequenceAtIndex:
KS_C_5601-1987
GB2312
ISO-8859-6-i
ISO-8859-8-i
NSString * _Nonnull ECConvertEncodingToCharacterSetName(NSStringEncoding)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3445.6.17/EmailCore/MIME/ECCharacterSet.m
<Unknown File>
No character set name for string encoding %@ (%lu)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3445.6.17/EmailCore/MIME/ECEncodedWord.m
Invalid initializer called, returning nil
Invalid parameter not satisfying: %@
index < headerLength
v8@?0
v32@?0r*8Q16q24
headerData
T@"NSData",R,C,N,V_headerData
stringEncoding
T@"NSNumber",&,N,V_stringEncoding
language
T@"NSString",C,N,V_language
encodedWordEncoding
Tq,N,V_encodedWordEncoding
encodedTextRange
T{_NSRange=QQ},N,V_encodedTextRange
string.length
[string canBeConvertedToEncoding:stringEncoding]
%@ %lu (%@*%@) <%@: %p>
Character set %@ is not encodable in ASCII
Language %@ is not encodable in ASCII
Impossible to make an encoded-word with character set "%@" and language "%@"
Could not determine encoded-word encoding
Failed to get bytes from string
Can't make encoded-word without splitting a composed character sequence
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
TQ,R,N,V_stringEncoding
T@"NSString",R,C,N,V_language
string
T@"NSString",R,C,N,V_string
characterSet
T@"NSString",C,N,V_characterSet
decodedText
T@"NSData",C,N,V_decodedText
singleEncodedWordLength
TQ,N,V_singleEncodedWordLength
minimumLengthOfEncodedWord
TQ,R,N
BOOL getBytesFromStringWithoutSplittingComposedCharacters(NSString * _Nonnull __strong, void * _Nonnull, NSUInteger, NSUInteger * _Nonnull, NSStringEncoding, NSRange, NSRangePointer _Nonnull, BOOL * _Nonnull)
?=?*
0123456789ABCDEF@(#)PROGRAM:EmailCore  PROJECT:Email-3445.6.17
33333
ECEncodedWordDecoder
ECEncodedWordEncoder
@24@0:8@16
@16@0:8
{_NSRange=QQ}24@0:8Q16
B24@0:8@16
v24@0:8@?16
v16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSNumber"
@"NSString"
@"NSData"
{_NSRange="location"Q"length"Q}
@40@0:8@16Q24@32
Q16@0:8
Q32@0:8@16Q24
Q32@0:8*16Q24
B112@0:8^v16Q24^Q32^B40^Q48^Q56^Q64@72Q80{_NSRange=QQ}88^{_NSRange=QQ}104
Q32@0:8r*16Q24
v40@0:8*16r*24Q32
r*32@0:8r*16r*24
v24@0:8Q16
