init
setUpdateCalendarProperties:
setClearChanges:
_setSpinning:
dealloc
backgroundActor
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
alloc
storeExternalId
calendarExternalId
changeTrackingId
removeAlarms
forceRefresh
clearChanges
initWithStoreId:calendarId:changeTrackingID:removeAlarms:forcedRefresh:clearChanges:callbackTarget:
setBackgroundActor:
sharedInstance
calOpenDBWithClientIdentifier:
initializedStoreCopyWithExternalId:
initializedCalendarCopyWithExternalId:inStore:needsSave:
updateCalendarProperties
calendarName
isEqualToString:
colorString
setForceRefresh:
isHolidaySubscribedCalendar
accountId
doubleValue
setTimestamp:
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
calCloseDBAndSave:
_initializeCalendarDatabase
_makeBackgroundActor
finishWithError:
transactionId
subscriptionURL
sharedGateKeeper
class
setWaitingForGateKeeper:
setHoldingGateKeeperLock:
_lockedPrepareToProcessDataWithBlock:
sharedBabysitter
unregisterAccount:forOperationWithName:
relinquishLocksForWaiter:dataclasses:moreComing:
registerWaiter:forDataclassLocks:completionHandler:
processICSData:
_acquireGatekeeperLockAndProcessDataWithBlock:
processICSDataAtPath:removeFileWhenDone:
setUsingTmpICSData:
_processICSData:
setTmpICSData:
taskManager
account
wasUserInitiated
initWithURL:wasUserRequested:
setRequest:
request
statusReport
setStatusReport:
setDelegate:
setUseFileCache:
username
setUsername:
password
setPassword:
timestamp
startConnection
cancel
synchronouslyCancel
waitingForGateKeeper
unregisterWaiterForDataclassLocks:
holdingGateKeeperLock
_syncEndedWithError:
delegate
subCalRefreshTask:finishedWithError:
registerAccount:forOperationWithName:
_syncStarted
tmpICSData
_updateSubscribedCalendarWithTmpICSData:
_updateSubscribedCalendarWithDataFromURL:
subCalRefreshTask:needsUsernamePasswordForHost:continuation:
respondsToSelector:
handleTrustChallenge:forTask:
handleTrustChallenge:forTask:completionHandler:
subCalRefreshTask:didRedirectToURL:
length
filePath
_processICSDataFromFile:
finished
usingTmpICSData
accountID
isSpinning
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
setIsSpinning:
syncStartedForStoreWithExternalID:
syncEndedForStoreWithExternalID:withError:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleTrustChallenge:forSubCalURLRequest:
handleTrustChallenge:forSubCalURLRequest:completionHandler:
subCalURLRequest:finishedWithData:error:
subCalURLRequest:updatedData:
subCalURLRequestNeedsUsernameAndPasswordForHost:continuation:
subCalURLRequest:didRedirectToURL:
subCalICSDataActor:completedWithError:
waiterID
willFinish
performDelegateCallbackWithError:
performTask
.cxx_destruct
setSubscriptionURL:
setStoreExternalId:
setCalendarExternalId:
setChangeTrackingId:
setCalendarName:
setAccountId:
setRemoveAlarms:
setColorString:
setIsHolidaySubscribedCalendar:
_removeAlarms
_forceRefresh
_clearChanges
_isHolidaySubscribedCalendar
_updateCalendarProperties
_waitingForGateKeeper
_holdingGateKeeperLock
_usingTmpICSData
_isSpinning
_delegate
_subscriptionURL
_storeExternalId
_calendarExternalId
_changeTrackingId
_calendarName
_accountId
_username
_password
_tmpICSData
_colorString
_backgroundActor
_request
_timestamp
setExistingEventTags:
setIcsEvents:
setIcsCalendar:
forcedRefresh
count
objectAtIndexedSubscript:
existingEventTags
addObject:
subcalKey
icsEvents
containsObject:
icsCalendar
componentOccurrencesForKey:
reset
populateExistingEventsFromCalendar:
shouldSaveEvent:withComponentKey:
removeNonexistingEventsFromCalendar:
setForcedRefresh:
_forcedRefresh
_icsCalendar
_icsEvents
_existingEventTags
ICSStringWithOptions:
modTagForSubCal
subCalHandlers
setSubCalHandlers:
absoluteString
handleWebcalURLString:withConsumer:
removeObject:
handleWebcalURL:
subCalWebcalHandlerFinishedSetup:
setIsMonitoring:
monitorFoldersWithIDs:
sharedManager
registerDelegate:
stopMonitoringFolders
stopObservingReachability
unregisterDelegate:
isMonitoring
isManagedCalendar
setWasUserInitiated:
shouldFailAllTasks
accountDescription
refreshAllCalendars:
isSubCalReachabilityError
setSyncWhenReachable:
syncFolderIDs:forDataclasses:isUserRequested:
observeReachabilityWithBlock:
delegateDidCompleteRefresh:
allObjects
scheduleIdentifier
onBehalfOfBundleIdentifier
refreshCollections:withReason:
watchedCollections
getDAAccount
saveXpcActivity:
trustHandler
serverTokenRegistrationURL
interfaceWentUp
interfaceWentDown
accountDidCompleteRefresh:withError:
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
backingAccountInfo
parentAccount
identifier
stringWithFormat:
changeTrackingID
objectForKeyedSubscript:
allKeys
calDAVURLString
allTasks
isShutdown
_calendarExistsOnParent
shouldRemoveAlarms
clearTmpICSData
submitQueuedTask:
domain
code
setEnabled:forDADataclass:
saveAccountProperties
setHost:
_refresh:
cancelAllTasks
dropAssertionsAndRenewCredentialsWithHandler:
setChangeTrackingID:
setCallbackTarget:
setActorQueue:
callbackTarget
calDB
calendar
shouldCancel
_updateSubCalWithICSDocument:calendarId:digest:error:
initWithData:options:error:
_processICSDocument:icsData:digest:
digestForSubCal
isEqualToData:
date
numberWithUnsignedInteger:
_reallyProcessICSData:withDigest:
timeIntervalSinceDate:
numberWithDouble:
calSaveDB
calClearSuperfluousChanges
actorQueue
_internalProcessICSData:
_sendResultToCallbackActor:
initWithContentsOfMappedFile:
defaultManager
removeItemAtPath:error:
setShouldCancel:
numProgressCallbacks
setNumProgressCallbacks:
_shouldCancel
_numProgressCallbacks
_actorQueue
_callbackTarget
_changeTrackingID
setCalendarId:
removePendingAccountSetup
consumer
outstandingSetupRequests
urlString
timeIntervalSinceReferenceDate
initWithFormat:
initWithString:
defaultWorkspace
openSensitiveURL:withOptions:
_tellConsumerWereFinished
_receiveWhereTo:
showUserNotification:groupIdentifier:withCompletionBlock:
saveTmpICSData
setAuthenticated:
saveAccountPropertiesWithCompletionHandler:
_showWhereTo
setAccount:
calOpenDBAsGenericClient
_saveAccount
performSelector:withObject:afterDelay:inModes:
_createCalendar
_prepareForSave
checkValidityOnAccountStore:withConsumer:
_receiveSubscribeAccount:
_receiveInvalidAccount:
quickValidate:
host
_receiveAuthPrompt:notification:
haveShownSubscribeAlert
setHaveShownSubscribeAlert:
_showSubscribeAccount
isSubCalAuthError
_showAuthPrompt
haveTriedHTTPS
hasPrefix:
setHaveTriedHTTPS:
substringFromIndex:
stringByAppendingString:
setUrlString:
_showInvalidAccount
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
hasSubscribedCalendarAtURL:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
initWithBackingAccountInfo:
_newAccountWithHost:
_existingAccountLikeAccount:
_showMatchingAccountAlertForAccount:
stringByReplacingPercentEscapesUsingEncoding:
isSubCalURLString
addPendingAccountSetup
setConsumer:
_beginAccountSetupWithSubscriptionAtHost:
account:isValid:validationError:
calendarId
_haveShownSubscribeAlert
_haveTriedHTTPS
_calendarId
_account
_consumer
_urlString
defaultCenter
removeObserver:name:object:
invalidate
_unregisterForNotifications
_tearDownRefreshTimer
setSearchTask:
preferredLanguages
objectAtIndex:
autoupdatingCurrentLocale
objectForKey:
_copyHolidaySubscribedCalendar
propertyListFromData:mutabilityOption:format:errorDescription:
language
region
_reallyRemoveHolidaySubscribedCalendar
mutableCopy
array
payloadAsString
removeObjectsInArray:
lowercaseString
rank
intValue
calendarDescription
rangeOfString:
scheme
setUseSSL:
port
setPort:
relativePath
setPrincipalPath:
setAccountDescription:
_removeHolidaySubscribedCalendar
holidayCalendarURL
initWithLanguages:location:calendarType:url:
setAccountInfoProvider:
error
urlsToResults
_handleCalendarSearchResults:
setCompletionBlock:
submitIndependentTask:
_lastRefreshDate
_calendarHasCorrectLocale
holidayCalendarRefreshInterval
_fetchUpdatedSubscriptionURL
initWithAccount:
_reallyRefresh:
dateWithTimeIntervalSinceReferenceDate:
distantPast
setObject:forKeyedSubscript:
dataFromPropertyList:format:errorDescription:
_saveLastRefreshDate:
_saveCurrentLanguageAndLocale
_refreshTimerFired:
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
_saveHolidayCalMetadata:
_localeDidChange:
addObserver:selector:name:object:
serverRoot
user
identityPersist
principalURL
serverComplianceClasses
userAgentHeader
promptUserForNewCoreDAVPasswordWithCompletionBlock:
handleCertificateError:
additionalHeaderValues
customConnectionProperties
clientCertificateInfoProvider
oauthInfoProvider
handleTrustChallenge:
handleTrustChallenge:withConnection:
handleAuthenticateAgainstProtectionSpace:
handleAuthenticateAgainstProtectionSpace:withConnection:
shouldRetryUnauthorizedConnection:
handleShouldUseCredentialStorage
noteHomeSetOnDifferentHost:
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shouldTurnModalOnBadPassword
shouldTryRenewingCredential
renewCredential
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteFailedNetworkRequestForTask:
noteFailedProtocolRequestForTask:
noteTimeSpentInNetworking:forTask:
noteSuccessfulRequestWithNumDownloadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteTimeSpentInNetworking:
copyStorageSession
shouldUseOpportunisticSockets
shouldCompressRequests
clientTokenRequestedByServer
clientToken
webLoginRequestedAtURL:reasonString:completionBlock:
getAppleIDSession
refreshTimer
setRefreshTimer:
searchTask
_refreshTimer
_searchTask
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-1692/DAMMe/SubCalRefreshTask.m
<Unknown File>
We should never process ICS Data while waiting on a previous processICSData call
Error Code
SubCalRefresh
v20@?0q8B16
v8@?0
WTF? don't try and make a new request before cleaning up the old one
com.apple.mobilecal
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
backgroundActor
T@"SubCalICSDataActor",&,N,V_backgroundActor
request
T@"SubCalURLRequest",&,N,V_request
timestamp
Td,N,V_timestamp
waitingForGateKeeper
TB,N,V_waitingForGateKeeper
holdingGateKeeperLock
TB,N,V_holdingGateKeeperLock
usingTmpICSData
TB,N,V_usingTmpICSData
isSpinning
TB,N,V_isSpinning
delegate
T@"<SubCalRefreshTaskDelegate>",&,N,V_delegate
subscriptionURL
T@"NSURL",&,N,V_subscriptionURL
storeExternalId
T@"NSString",&,N,V_storeExternalId
calendarExternalId
T@"NSString",&,N,V_calendarExternalId
changeTrackingId
T@"NSString",&,N,V_changeTrackingId
calendarName
T@"NSString",&,N,V_calendarName
accountId
T@"NSString",&,N,V_accountId
username
T@"NSString",&,N,V_username
password
T@"NSString",&,N,V_password
tmpICSData
T@"NSData",&,N,V_tmpICSData
removeAlarms
TB,N,V_removeAlarms
forceRefresh
TB,N,V_forceRefresh
clearChanges
TB,N,V_clearChanges
colorString
T@"NSString",&,N,V_colorString
isHolidaySubscribedCalendar
TB,N,V_isHolidaySubscribedCalendar
updateCalendarProperties
TB,N,V_updateCalendarProperties
icsEvents
T@"NSMutableSet",&,N,V_icsEvents
existingEventTags
T@"NSMutableSet",&,N,V_existingEventTags
icsCalendar
T@"ICSCalendar",&,N,V_icsCalendar
forcedRefresh
TB,N,V_forcedRefresh
trustHandler
T@"DATrustHandler",R,N
com.apple.dataaccessd-%@
v24@?0q8@"NSError"16
T@"<SubCalDaemonAccountDelegate>",W,N,V_delegate
SubCalICSDataActorErrorDomain
com.apple.dataaccess.subcal.actor
shouldCancel
TB,N,V_shouldCancel
actorQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_actorQueue
callbackTarget
T@"<SubCalICSDataCallbackActor>",W,N,V_callbackTarget
T@"NSString",C,N,V_storeExternalId
T@"NSString",C,N,V_calendarExternalId
changeTrackingID
T@"NSString",C,N,V_changeTrackingID
numProgressCallbacks
TI,N,V_numProgressCallbacks
calshow:%d?calendarid=%d
v24@?0^{__CFUserNotification=}8Q16
v20@?0B8@"NSError"12
Validated
Could not validate
webcal://
https://
v24@?0@"NSArray"8@"NSError"16
account
T@"SubCalAccount",&,N,V_account
consumer
T@"<SubCalWebcalHandlerConsumer>",W,N,V_consumer
urlString
T@"NSString",C,N,V_urlString
calendarId
Ti,N,V_calendarId
haveShownSubscribeAlert
TB,N,V_haveShownSubscribeAlert
haveTriedHTTPS
TB,N,V_haveTriedHTTPS
LastLanguage
LastRegion
__HolidayCalendar__
https
Holiday
refreshTimer
T@"NSTimer",&,N,V_refreshTimer
searchTask
T@"CalDAVCalendarSearchTask",&,N,V_searchTask
region
T@"NSString",R,N
language
Can't find store with id %@
Failed to initialize the calendar database: %@
DATransaction starting, ID: %@
Grabbing gatekeeper lock before processing the data for the subscribed calendar at %@
%@ (%@) got my lock for dataclasses 0x%lx
Got lock for %ld something other than events?!
Something unknown happened. Relinquishing locks now
%@ aborted locks for dataclasses 0x%lx
New account! attempting to create calendar from tmp ics data
Waiting for ICS data actor to tear down...
Data actor queue is clean. Continuing with teardown
The babysitter put us in timeout. Failing this sync
Error processing tmp ics data %@
Telling springboard to set the spinner to %@ for identifier %@
Finished telling springboard to set the spinner to %@ for identifier %@
%@ asked to start monitoring
%@ asked to stop monitoring
Ignoring refresh for calendar %@ because it is managed by a CalDAV server
Account "%@" thinks it should fail all tasks.  Doing so
Account %@ couldn't reach the server. Monitoring for reachability.
Ignoring request, already refreshing account with ID %@
The parent account doesn't know about the subscribed calendar at %@ (account %@). Skipping refresh.
Refreshing Subscribed Calendar account with ID %@
Refresh completed for account with ID %@ with error %@
The server at %@ returned a 410 status code, which means this calendar is gone gone gone. Disabling calendars for this account.
Refresh completed for account with ID %@
Account "%@" was redirected to "%@"
Refreshing all calendars
%@ asked to monitor these folders: %@
%@ asked to stop monitoring folders
Saving timestamp %@ as external tag
No events after updating calendar?
Processing ics calendar
Did not get a valid ics calendar
Done processing ics data, error: %@
%@ processing data of length %lu
Digests are the same, not saving to db
==== SubCal: Starting processing ICS Data. Size of Data %{public}@ Bytes ====
==== SubCal: Finished processing ICS Data. CPU Time - [%{public}@secs] Size of Data %{public}@ Bytes ====
Initiating SubCal Save CalDatabase
SubCal Saving CalDatabase Success. Clearing superfluouschanges.
SubCal Closing CalDB without saving.
Processing mmapped file %@
Error cleaning up file at %@
Actor queue is clear
_SubCalDBSaveProgressCallback invoked %d times, returning %d
Finished Out of band setup
User chose to go to mobile cal
User chose to stay here
%@ saving account
Failed to save subscribed calendar account: %@
Why was SubCalWebcalHandler given locks for 0x%lx ?
User chose to subscribe to new account
User chose not to subscribe to new account
User responded to invalid account alert
User chose not to input auth for account
%@ account for host %@ %@
Ignoring webcal setup of outstanding URL %@
Could not retrieve Language or Region for the Holiday Calendar AccountID %@ with Subscription-URL %@
Couldn't get a gatekeeper lock in order to remove the holiday subscribed calendar.
Found the following holiday calendars: %@.
Searching for a calendar that matches %@/%@
Removing %@, since our locale is %@
Matching subscription URL found at %@
Couldn't find any matching subscription calendars. Removing the one we have
Couldn't find a holiday calendar URL. Cleaning up.
Fetching an updated subscription URL from %@. Current locale is %@ and language is %@. Request is %@
Error fetching subscribed holiday calendars. Giving up for now. %@
The existing calendar has the correct locale. Continuing with our refresh
Skipping holiday calendar refresh because we last refreshed it at %@, less than our refresh interval of %f
Couldn't get a gatekeeper lock in order to refresh the holiday subscribed calendar.
Setting last holiday calendar refresh time to %@
Saving current locale (%@) and language (%@)
Couldn't get a gatekeeper lock in order to save the last holiday calendar refresh date.
Refresh timer fired.
The current locale changed. Refreshing our holiday calendar
SubCalRefreshTask
SubCalURLRequestDelegate
NSObject
SubCalICSDataCallbackActor
DADataclassLockWatcher
DABabysittable
SubCalChangeTracker
SubCalExtras
SubCalAgent
DARefreshManagerDelegate
SubCalDaemonAccountDelegate
SubCalDaemonAccount
SubCalICSDataActor
SubCalWebcalHandler
DAValidityCheckConsumer
HolidayCalDaemonAccount
CoreDAVAccountInfoProvider
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
v32@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24
v40@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24@?<v@?q@"NSURLCredential">32
v40@0:8@"SubCalURLRequest"16@"NSData"24@"NSError"32
v32@0:8@"SubCalURLRequest"16@"NSData"24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString">24
v32@0:8@"SubCalURLRequest"16@"NSURL"24
v32@0:8@"SubCalICSDataActor"16@"NSError"24
v16@0:8
v24@0:8@?16
v24@0:8@16
v20@0:8B16
d16@0:8
v24@0:8d16
@"<SubCalRefreshTaskDelegate>"
@"NSURL"
@"NSString"
@"NSData"
@"SubCalICSDataActor"
@"SubCalURLRequest"
v24@0:8^v16
B32@0:8@16@24
@"ICSCalendar"
@"NSMutableSet"
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v32@0:8@"SubCalDaemonAccount"16@"NSError"24
v36@0:8@16q24B32
@"<SubCalDaemonAccountDelegate>"
@60@0:8@16@24@32B40B44B48@52
B48@0:8@16@24@32^@40
@40@0:8@16@24@32
@32@0:8@16@24
@24@0:8@16
v28@0:8@16B24
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@"<SubCalICSDataCallbackActor>"
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v24@0:8Q16
v32@0:8Q16^{__CFUserNotification=}24
i16@0:8
v20@0:8i16
@"SubCalAccount"
@"<SubCalWebcalHandlerConsumer>"
q16@0:8
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
^{__CFURLStorageSession=}16@0:8
@"NSData"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B24@0:8@"NSURLAuthenticationChallenge"16
B32@0:8@"NSURLAuthenticationChallenge"16@"NSURLConnection"24
B24@0:8@"NSURLProtectionSpace"16
B32@0:8@"NSURLProtectionSpace"16@"NSURLConnection"24
B24@0:8@"NSURLConnection"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v40@0:8@"NSURL"16@"NSString"24@?<v@?i>32
@"AKAppleIDSession"16@0:8
^v16@0:8
@"NSDate"
@"NSTimer"
@"CalDAVCalendarSearchTask"
