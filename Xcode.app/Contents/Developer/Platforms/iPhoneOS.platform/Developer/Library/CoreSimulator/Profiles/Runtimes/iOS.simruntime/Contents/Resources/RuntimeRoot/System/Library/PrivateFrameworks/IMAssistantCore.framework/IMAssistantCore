INMessage %@
Conversation identifier: %@
Group name: %@
Sender: %@
Recipients (%@): %@
IMAssistantCore
Failed to initialize AVAudioPlayer: %@
Failed to setup AVAudioSession: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
identifier
T@"NSString",R,N,V_identifier
includeRead
TB,R,N
includeUnread
attributes
TQ,R,N,V_attributes
Performing intent: %@
Send Message Intent: Content: %@
Send Message Intent: GroupName: %@
Send Message Intent: Recipients: %@
Send Message Intent: Conversation Identifier: %@
v16@?0q8
Sending message to chat with identifier specified in intent. chat=%@
Using stored conversation identifier that was resolved during recipient resolution. conversationIdentifier=%@
Sending message to chat that has already been resolved. chat=%@
Could not find IMChat matching conversation identifier resolved during recipient resolution. Ignoring. conversationIdentifier=%@
Custom identifier not set, falling back to personHandle.value: %@
Could not send message; recipient had no usable handle: %@
Found existing chat with the recipients; sending
Could not find any existing chat matching addresses. Creating new chat. Addresses: %@
Could not send message; no messaging accounts available
Could not send message; an address could not be resolved to an IMHandle: %@
Resolve recipients results: %@
v16@?0@"NSArray"8
Resolve content result: %@
Intent contains a conversationIdentifier, %@, using that to resolve group name
Intent contains a speakableGroupName.vocabularyIdentifier, %@, using that to resolve group name
speakableGroupName contains %ld alternativeSpeakableMatches: %@
alternativeSpeakableMatch does not contain a vocabularyIdentifier, ignoring. alternativeSpeakableMatch: %@
Intent contains one unique chatGuid: %@
Chat resolved via conversation identifier is a business chat. Not resolving speakableGroupName to the business name, because the business name will be included in the recipients. Returning notRequired for speakableGroupName.
Found a named chat matching chatGuid, %@. Returning success with name "%@".
Could not find a name for the chat with the chatGuid %@, ignoring.
Could not find chat with the chatGuid %@, ignoring
Intent contains %ld unique chatGuids: %@
Could not find chat with guid %@, ignoring
%ld chats match chatGuids. Chats: %@
Returning speakableGroupName resolution result: %@
Intent contains no chat guids.
Intent does not contain a spoken group name. Returning notRequired for resolveSpeakableGroupName.
Attempting to resolve via speakableGroupName.spokenPhrase = "%@"
Using chat name "%@" resolved from matching chat: %@
Could not determine chat name from only matching chat. Returning unsupported/notFound. Matching chat: %@
Found %ld chats matching requested spoken phrase. Producing disambiguation options. matchingChats: %@
Could not find any chats matching requested spokenPhrase. Returning unsupported (a.k.a. notFound)
Resolved group name result: %@
Message content is nil. Returning failure.
Setting IDS identifier on IMMessage: %@ 
canSendMessage check failed for chat: %@
Resolved persons from relevant chats contained an inconsistent number of recipients, ignoring relevant chats.
v32@?0@"INPerson"8Q16^B24
Resolving recipients: %@
A speakableGroupName.vocabularyIdentifier matching a valid chat was provided, extracting recipients from chat and attaching to intent for use in Siri dialog.
Recipients could not be resolved from speakableGroupName.vocabularyIdentifier: %@. Ignoring identifier and continuing with person resolution.
No chat could be found matching speakableGroupName.vocabularyIdentifier: %@. Ignoring identifier and continuing with person resolution.
A conversationIdentifier matching a valid chat was provided, extracting recipients from chat and attaching to intent for use in Siri dialog.
Recipients could not be resolved from conversationIdentifier: %@. Ignoring conversation identifier and continuing with person resolution.
No chat could be found matching conversationIdentifier: %@. Ignoring conversation identifier and continuing with person resolution.
No recipients are required if a group name is present
No recipients provided to resolve, returning needsValue.
@16@?0@"INPerson"8
All recipients already have a resolved handle, ending resolution.
Could not resolve recipient: %@
Found an existing chat matching recipients. Storing conversationIdentifier=%@
Multiple existing recent chats match the requested participant(s).
Returning disambiguation result: %@
Could not construct disambiguation result. Ignoring relevant chats.
Did not find any existing chat matching request.
Could not resolve recipients; no messaging account enabled
Beginning contact resolution for recipient: %@
Already have a resolved contact and handle for this recipient. Returning success: %@
@24@?0@"INPerson"8Q16
Could not resolve a single contact for each recipient, returning resolution result: %@
Beginning handle resolution for recipient: %@
Intent already has a resolved handle for this recipient. Returning success: %@
A handle was already resolved as part of contact resolution (e.g. contacts with duplicate names that only contain one valid handle). Returning success with the resolved handle: %@
More than one matching contact exists after person resolution. Person resolution should have resolved the recipients down to a single contact. Something has gone horribly wrong. Picking the first one and continuing with handle resolution.
Contacts: %@
Completed handle resolution with results: %@
%ld contacts matched chat participant %@. Matching identifiers: %@. Using contact: %@
Could not normalize handle for: %@ (%@)
Could not translate handle (%@) to an IMHandle for recipient %@
%ld contacts have the name "%@". Will use handles for these contacts, rather than just name, when disambiguating. Contacts: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
Attempting to find a matching chat by examining %ld recent chats.
v32@?0@"INPerson"8@"IMHandle"16@"CNContact"24
Beginning evaluation of participants in chat %@.
Cannot creat IMHandle for manually requested phone number or email address: %@
Found a chat participant matching manually requested phone number or email: %@
Found a chat participant matching contact and requested label/handle-type: %@
Found a chat participant matching contact: %@
Chat did not contain any recipients matching contact: %@
Did not find any matching chat participant for requested person %@
Found a matching existing chat: %@
Found %ld contacts matching handle: %@. Using contact identifier %@ from list %@. Contact: %@
Did not find any contacts matching manually requested handle: %@
Could not find a valid 1-1 relationship between chat participants and requested recipients. Ending evaluation of chat %@.
Matching chat participant not found for all recipients. Ending evaluation of chat %@.
Did not find a matching existing chat.
Next chat is beyond maximum relevant time interval. Ending evaluation of relevant chats. TimeSinceLastMessageInMatchingChat: %ld s, TimeSinceLastMessageInNextChat: %ld s, MaximumRelevantTimeInterval: %ld s
B24@?0@"IMAssistantChatParticipant"8@"NSDictionary"16
Multiple contacts match recipient. Contacts: %@
Contact has the same name as another possible disambiguation option, including handles in disambiguation for contact: %@
Could not create INPerson from contant %@ and handle %@
Contacts matching the requested recipient have identical names, but one of the contacts has no valid phone numbers or email addreses for this request. Ignoring that contact, as including it in the list of disambiguation options would make it indistinguishable from the other valid options with the exact same name. Contact: %@
There was more than one contact matching the requested recipient but those contacts had the exact same name, and none of those contacts had a valid handle matching the requested type. We won't offer disambiguation of the contacts, because none of the choices would lead to a successful resolution and the options would be indistinguishable and confusing.
If the user had specified a different label/handle-type, valid options would have been available, returning unsupportedReason = NoHandleForLabel.
None of the ambiguous contacts had any valid handles. Returning unsupportedReason = NoValidHandle.
There was more than one contact matching the requested recipient AND those contacts had the exact same name, but only one of those contacts had a valid handle matching the request. Using that handle.
Requesting disambiguation of %ld options: %@
Manually specified handle. Ready to proceed to handle resolution with person: %@
Only one contact matches recipient. Ready to proceed to handle resolution for contact: %@
Created person handle from anonymous contact. Handle: %@
Could not create INPersonHandle from anonymous contact: %@
Found %ld person handles matching the request label: %@ and type: %ld. Handles: %@
Could not find any matching handles, and contact has no phone numbers or email addresses, returning unsupported.
Could not find any handles matching the requested label/handle-type, returning unsupported with suggested alternatives.
Asking user to disambiguate among the matching handles.
@16@?0@"INPersonHandle"8
Only found one handle matching request, returning success for person.
Found %ld contacts matching manually requested person handle: %@. Using contact identifier %@ from list %@. Contact: %@
Intent contains a conversation identifier. Using that to find an existing chat. conversationIdentifier=%@
Intent contains a group name vocabulary identifier. Using that to find an existing chat. vocabularyIdentifier=%@
Could not find a chat with the vocabularyIdentifier %@, ignoring
speakableGroupName does not contain a vocabularyIdentifier. speakableGroupName=%@
Could not find a chat with the conversationIdentifier %@, ignoring.
Could not find a chat with nil or empty conversationIdentifier, ignoring
Could not find a name for chat, ignoring. chat: %@, isGroupChat: %@, isBusinessChat: %@, displayName: %@
Could not construct disambiguation option for chat: %@, isGroupChat: %@, displayName: %@. Ignoring.
q24@?0@"IMChat"8@"IMChat"16
%ld chats have the name "%@". Presenting disambiguation of chats with the same name is confusing, so using the most recent one, %@.
Only one disambiguation option remains, returning success with resolved name: %@
Asking user to disambiguate among %ld disambiguation options: %@
No disambiguation options remain. Returning unsupported (a.k.a. notFound)
B16@?0@"IMChat"8
Could not determine person handle label or type because [IMHandle normalizedID] was neither a phone number nor an email address: %@
Business
IMCoreLocalizable
v16@?0@"NSString"8
Using cached business name: %@
Business name lookup beginning.
Business name lookup timed out
Business name lookup completed with name: %@
@16@?0@8
resolveRecipients called with intent: %@
Calling resolveRecipients completion handler with result: %@
v24@?0@"NSArray"8@"NSArray"16
v8@?0
resolveSenders called with intent: %@
Calling resolveSenders completion handler with result: %@
resolveAttributes called with intent: %@
intent with read options lacks message identifiers: %@
intent with read options lacks dateTimeRange: %@
Calling resolveAttributes completion handler with result: %@
resolveSpeakableGroupNames called with intent: %@
Calling resolveSpeakableGroupNames completion handler with results: %@
resolveDateTimeRange called with intent: %@
Calling resolveDateTimeRange completion handler with result: %@
Could not search for messages; no messaging accounts available
Intent with %u identifiers, looking at both unread and read messages
Intent with %u notificationIdentifiers, looking at only unread messages from those threads
v32@?0@"NSArray"8@"NSArray"16@"NSArray"24
Returning success response with %ld messages
Message search returned nil results (e.g. an exception was caught). Returning intent failure response.
IMAssistantMessageSearchHandler: Failed to resolve recipients: %@
IMAssistantMessageSearchHandler: Failed to resolve senders: %@
resolveSpeakableGroupName for name:"%@" vocabularyIdentifier:"%@" matches %ld chats: %@
Resolve chatName: %@ and vocabularyIdentifier: %@
Chat search by name resolved to a chat without a displayName. Passing through the input name instead.
Using input as resolved value.
No matching chats were found, returning unsupported/notFound for resolveSpeakableGroupNames
attributeSanitizer
T@"<IMAssistantMessageAttributeSanitizer>",&,N,V_attributeSanitizer
Play audioURL: %@
Started playing audio
Failed to play audio
Could not find audioURL
v16@?0@"NSURL"8
Confirm intent: %@
Confirm intent completion audioURL: %@
Intent Extension initialized
Using %@ %p for intent %@
Received an unknown intent: %@
Intent does not have an intentIdentifier set. Creating new handler.
Found existing handler for intent identifier: %@.
Existing handler not found for intent identifier: %@. Creating new handler.
Updating recently used intent handler cache for an intent with no intentIdentifier.
IMAssistantCoreInstantMessageServiceBusinessChat
Could not create IMHandle with phone number: %@ from contact: %@
Could not create IMHandle with email address: %@ from contact: %@
Could not create IMHandle with phone number: %@ account: %@ from contact: %@ 
Could not create IMHandle with email address: %@ account: %@ from contact: %@
<IMAssistantChatParticipant %p> {IMHandle: %@, Contact: %@}
imHandle
T@"IMHandle",&,N,V_imHandle
contact
T@"CNContact",&,N,V_contact
__kIMAssistantContinuityHandlesKey
__kIMAssistantContinuityChatsKey
Failed to allocate contact store
Person resolved to %ld contacts via siriMatches. Person: %@, Contacts: %@
Person contained siriMatches that did not resolve to any contacts. Person: %@
Person to resolve contains a manually dictated phone number. Person: %@
Person to resolve contains a manually dictated email address. Person: %@
Person to resolve has an businessID as the personHandle.value. Person: %@
Person to resolve has an invalid personHandle.value. Person: %@
Person to resolve contains neither siriMatches nor a personHandle.value. Person: %@
Error fetching contact with identifier %@ from contact store. Error: %@
Error fetching %@ from contact store: %@
Could not find person %@ in contact store with predicate
Returning empty contactID array for nil handleID
Returning empty contactID array for handleID that is a businessID: %@
Could not create CNPhoneNumber from handle ID: %@
Could not create contact search predicate for handle ID that is neither a phone number or an email address: %@
Error fetching contact identifiers matching handle %@ from contact store: %@
Could not search for contacts matching handle because a predicate could not be consrtuced from handle ID: %@
Error fetching me contact: %@
Could not find me contact identifier
%ld contacts matched handle %@. Matching identifiers: %@. Using contact: %@
Connecting to IMDaemonController
IMDaemonController blockUntilConnected completed in %.4f seconds. Connected: %@
Not triggering IMDaemonController reconnect. Connection was established %.4f seconds ago.
Calling IMSystemMonitor _forceSuspended and _forceResumed
IMSystemMonitor _forceResumed completed
Contact store change notification received.
intentIdentifier
T@"NSString",R,C,N
contactStore
T@"CNContactStore",R,N
keysToFetch
T@"NSArray",R,N
chatRegistry
T@"IMChatRegistry",&,N,V_chatRegistry
@"NSString"16@?0@"LPImageMetadata"8
@"NSString"16@?0@"LPIconMetadata"8
LinkPresentation
LPiTunesMediaSongMetadata
LPiTunesMediaAlbumMetadata
LPiTunesMediaMusicVideoMetadata
LPiTunesMediaArtistMetadata
LPiTunesMediaPlaylistMetadata
LPiTunesMediaRadioMetadata
LPiTunesMediaSoftwareMetadata
LPiTunesMediaBookMetadata
LPiTunesMediaAudioBookMetadata
LPiTunesMediaPodcastEpisodeMetadata
LPiTunesMediaPodcastMetadata
LPiTunesMediaTVEpisodeMetadata
LPiTunesMediaTVSeasonMetadata
LPiTunesMediaMovieMetadata
Could not create INSpeakableString, was at lest one chat guid present?: %@ or message did not have a display name %@
@"INPerson"16@?0@"IMSPIHandle"8
Link Metadata: %@
Cannot map balloon plugin message to INMessageType. Using unspecified.
No effect for effect identifier: %@
<IMAssistantRelevantChatMatchingRecipients %p> {Chat: %@, ResolvedPersons: %@}
chat
T@"IMChat",&,N,V_chat
resolvedPersons
T@"NSArray",C,N,V_resolvedPersons
Message marked as read: %@
handle
T@"NSString",R,C,N,V_handle
contactIdentifiers
T@"NSArray",R,C,N,V_contactIdentifiers
isMe
TB,R,N,V_isMe
Resolving persons: %@ for intent: %@
Resolving person: %@
Successfully resolved person to %ld contact identifiers: %@
Successfully resolved person to handle: %@
Could not resolve person %@ for intent %@
@"NSString"16@?0@"IMChat"8
IMSPIQueryMessagesWithChatIdentifiers failed
Performing query for messages from handles: %@ services: %@
IMSPIQueryMessagesWithIDs failed
IMSPIQueryUnreadMessages failed
IMSPIQueryMessagesWithGUIDs failed
IMSPIQueryMessagesWithRowIDs failed
B24@?0@"NSArray"8@"NSDictionary"16
B24@?0@"IMAssistantMessageSearchChatParticipant"8@"NSDictionary"16
 AND 
self LIKE[cd] %@
*%@*
@"NSString"16@?0@"IMHandle"8
Found %ld chats matching participants. Chats: %@
Found exsting chat matching chatGuid/conversationIdentifier: %@
Could not find chat matching chatGuid/conversationIdentifier: %@
Found %ld chats matching chat names:%@ vocabularyIdentifiers:%@ chats:%@
Searching for messages with attributes onlyUnreadMessages: %@ | onlyReadMessages %@
Filter block executed with %ld messages.
Message filtered because it did not fall within the specified date interval: %@
Message filtered due to not being an unread message: %@
Message filtered due to not being a read message: %@
Message filtered because it did not pass the contents predicate: %@
Message filtered because it did not pass the senders predicate: %@
Message filtered because it did not pass the recipients predicate: %@
Message passed filter: %@
Filter block completed with %ld messages.
@"NSArray"16@?0@"NSArray"8
Conversion block executed with %ld messages.
Finished converting message: %@
Performing search via message identifiers search, then filter.
Performing search for messages matching the notification identifiers, then search for unread messages in those chats, then filter.
Message did not contain a chat identifier or service. ChatIdentifier: %@ service: %@
Failed to find any chats matching notification identifiers: %@ matchingMessages: %ld
No matching messages were found when searching for messages from the chat of the notification identifier. Using just the messages matching the notification identifier.
Performing search via chat name search, then filter.
Failed to find any chats matching chatNames: %@
Performing search via chat search, then filter.
Failed to find any chats matching conversation identifiers: %@
Performing search via recipients search, then filter.
Failed to find chats containing all specified persons (recipients + senders) during search: %@
Performing search via senders search, then filter.
Performing search via unread search, then filter.
Performing search via examining all chats, then filter.
x-apple-sms:guid=
Looking up %ld messages with IMSPIQueryMessagesWithRowIDs
@"NSNumber"16@?0@"NSString"8
Looking up %ld messages with IMSPIQueryMessagesWithGUIDs
Could not canonicalize handle "%@" because it is neither a phone number nor an email address.
IMAssistantIMSPIQueue
identifier
conversationIdentifier
groupName
sender
recipients
count
numberWithUnsignedLong:
stringWithFormat:
debugLogString
init
copy
setDelegate:
setupAudioSession
alloc
initWithContentsOfURL:error:
prepareToPlay
play
cleanupAudioSession
stop
isPlaying
sharedInstance
setActive:error:
setCategory:withOptions:error:
imAssistantAudioPlayer:didUpdateState:
respondsToSelector:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
initWithDelegate:identifier:
startPlayingAudioURL:
stopPlaying
playerState
.cxx_destruct
_delegate
_identifier
_player
initWithAttributes:sanitizer:
sanitize:
attributes
initWithAttributes:
optionsWithAttributes:
optionsWithAttributes:sanitizer:
includeRead
includeUnread
_attributes
content
speakableGroupName
spokenPhrase
_metadata
hasOriginatingDeviceIdsIdentifier
originatingDeviceIdsIdentifier
initWithCode:userActivity:
chatRegistry
sendMessageWithText:idsIdentifier:toChat:
length
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
customIdentifier
personHandle
value
addObject:
existingChatForAddresses:allowRetargeting:bestHandles:
__im_assistant_bestMessagingAccount
imHandleWithID:
firstObject
chatForIMHandle:
chatForIMHandles:
resolveRecipients:forIntent:completion:
resolveMessageContentWithString:
vocabularyIdentifier
alternativeSpeakableMatches
existingChatWithGUID:
isBusinessChat
notRequired
successWithResolvedString:
array
unsupported
initWithString:
instantMessageWithText:flags:
setNotificationIDSTokenURI:
refreshServiceForSending
canSendMessage:
sendMessage:
trimmedString
needsValue
resolvedPersons
objectAtIndex:
enumerateObjectsUsingBlock:
containsObject:
successWithResolvedPerson:
disambiguationWithPeopleToDisambiguate:
resolvedRecipientsFromChat:
arrayWithObjects:count:
__imArrayByApplyingBlock:
__imcore__containsNonSuccess:
dictionaryWithCapacity:
contactsMatchingINPerson:
recipientsResolutionFailureResultWithResult:forRecipient:amongRecipients:
setObject:forKeyedSubscript:
resolveRecipientsByFindingExistingRelevantChatsForRecipients:withContacts:fromChats:
chat
guid
recipientDisambiguationResultsFromMultipleRelevantChats:
unsupportedForReason:
objectAtIndexedSubscript:
__imcore__isSuccess
objectForKeyedSubscript:
contactResolutionResultForContacts:matchingRecipient:account:
__im_assistant_arrayByApplyingBlockWithIndex:
resolvedValue
handleResolutionResultForContact:recipient:account:
participantsWithState:
contactIdentifiersMatchingHandle:
lastObject
contactWithIdentifier:
__im_assistant_initWithContact:imHandle:
__im_assistant_initAnonymousRecipientWithIMHandle:
countryCode
__im_assistant_normalizedHandleForAnonymousContactUsingCountryCode:
componentsForContact:
localizedStringFromPersonNameComponents:style:options:
initWithObjects:
addObjectsFromArray:
enumerateKeysAndObjectsUsingBlock:
shouldContinueToExamineRelevantChatsWithMatches:nextChat:
account
strongToStrongObjectsMapTable
objectForKey:
setObject:forKey:
initWithKeyOptions:valueOptions:capacity:
initWithIMHandle:contact:
label
type
imHandleForAnonymousContact:chatAccount:recipient:
__im_assistant_matchingNormalizedHandlesForType:andLabel:forCountryCode:
findValidMappingOfRequestedRecipientToChatParticipantAmongMatches:
imHandle
contact
initWithChat:resolvedPersons:
lastFinishedMessageDate
timeIntervalSinceNow
keyEnumerator
initWithArray:copyItems:
removeObjectForKey:
objectEnumerator
predicateWithBlock:
filterUsingPredicate:
contactsWithDuplicateNamesAmongContacts:
__im_assistant_initWithContact:unformattedPersonHandle:account:
__im_assistant_initForContactResolutionResultWithContact:type:label:
__im_assistant_allValidPersonOptionsWithAccount:
resolutionResultUnsupportedWithReason:alternativeItems:
unsupportedWithReason:
contactIdentifiersMatchingINPersonHandle:
handleSendMessage:completion:
confirmSendMessage:completion:
resolveRecipientsForSendMessage:withCompletion:
resolveRecipientsForSendMessage:completion:
resolveGroupNameForSendMessage:withCompletion:
resolveContentForSendMessage:withCompletion:
resolveSpeakableGroupNameForSendMessage:withCompletion:
_conversationIdentifierResolvedDuringRecipientResolution
allExistingChats
displayName
isEqualToString:
isGroupChat
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
compare:
allValues
sortedArrayUsingComparator:
disambiguationWithStringsToDisambiguate:
isOperational
__imArrayByFilteringWithBlock:
compareChatByDate:
sortedArrayUsingSelector:
initWithValue:type:
initWithStringValue:
phoneNumbers
isLikePhoneNumber:
emailAddresses
initWithValue:type:label:
__im_assistant_initWithUnstructuredValue:
__im_assistant_isEqualIgnoringFormatting:ignoringLabel:
__im_assistant_extractIntentHandleLabelAndTypeFromContact:forNormalizedID:
__im_assistant_initWithContact:imHandle:type:label:
normalizedID
displayID
__im_assistant_initWithContact:displayFormattedHandle:normalizedHandle:type:label:
__im_assistant_displayNameForContact:displayFormattedHandle:normalizedHandle:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
bundleForClass:
isKeyAvailable:
instantMessageAddresses
service
username
__im_assistant_imCoreBundle
localizedStringForKey:value:table:
businessNameForUID:updateHandler:
stringFromContact:style:
contactIdentifier
siriMatches
__im_assistant_allContactIdentifiers
initWithAttributeSanitizer:intentIdentifier:
initWithIntentIdentifier:
resolvePersons:forIntent:completionHandler:
isMainThread
senders
attributeSanitizer
identifiers
dateTimeRange
successWithResolvedMessageAttributeOptions:
speakableGroupNames
resolveSpeakableGroupNames:forIntent:
resolutionResultNotRequired
successWithResolvedDateComponentsRange:
notificationIdentifiers
resolveRecipientsAndSender:withCompletion:
contents
conversationIdentifiers
setMessages:
searchMessagesWithContents:messageIdentifiers:notificationIdentifiers:chatNames:conversationIdentifiers:recipients:senders:dateTimeRange:attributes:completion:
chatsForChatNames:
handleSearchForMessages:completion:
confirmSearchForMessages:completion:
resolveRecipientsForSearchForMessages:withCompletion:
resolveSendersForSearchForMessages:withCompletion:
resolveAttributesForSearchForMessages:withCompletion:
resolveDateTimeRangeForSearchForMessages:withCompletion:
resolveGroupNamesForSearchForMessages:withCompletion:
resolveSpeakableGroupNamesForSearchForMessages:withCompletion:
setAttributeSanitizer:
_attributeSanitizer
iMessageEnabledForSenderLastAddressedHandle:simID:
iMessageService
bestAccountForService:
smsEnabled
smsService
messageIdentifier
createAudioPlayerWithIdentifier:
queryAudioMessageURLForIntent:completion:
attachments
fileUrl
SPIQueryMessagesWithGUIDs:completion:
handlePlayAudioMessage:completion:
confirmPlayAudioMessage:completion:
activeAudioPlayer
_audioPlayer
_completionHandler
connectToIMDaemonController
existingHandlerForIntentIdentifier:
updateRecentlyUsedHandlersWithHandler:
intentIdentifier
indexOfObjectIdenticalTo:
removeObjectAtIndex:
insertObject:atIndex:
removeLastObject
handlerForIntent:
currentApplicationContext
_recentIntentHandlers
stringValue
caseInsensitiveCompare:
localizedStringForLabel:
__im_assistant_labeledContactValue:matchesPersonHandleLabel:
accounts
__im_assistant_allIMHandles
setImHandle:
setContact:
_imHandle
_contact
_initWithContactStore:keysToFetch:intentIdentifier:
forceTriggerResumeNotification
descriptorForRequiredKeysForStyle:
descriptorForUsedKeys
expectedCNContactKeys
predicateForContactsWithIdentifiers:
contactsMatchingPredicate:forPerson:
phoneNumberWithStringValue:
initWithLabel:value:
setPhoneNumbers:
setEmailAddresses:
initWithUsername:service:
setInstantMessageAddresses:
contactStore
keysToFetch
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
handleToContactIdentifierCache
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
contactIdentifiersMatchingHandleID:
isMe
meContactIdentifier
address
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
spiHandleToPersonCache
contactIdentifiersMatchingSPIHandle:
businessName
setIsMe:
date
addListenerID:capabilities:
blockUntilConnected
_setBlocksConnectionAtResume:
timeIntervalSinceDate:
isConnected
_forceSuspended
_forceResumed
removeAllObjects
defaultCenter
contactStoreDidChange:
addObserver:selector:name:object:
registerForContactStoreChangeNotifications
personFromSPIHandle:
initWithContactStore:intentIdentifier:
initWithContactStore:keysToFetch:intentIdentifier:
contactIdentifiersForParticipantsInChat:
setChatRegistry:
_contactStore
_keysToFetch
_intentIdentifier
_chatRegistry
images
absoluteString
icons
specialization
storeFrontIdentifier
storeIdentifier
name
artist
album
genre
curator
platform
author
narrator
episodeName
podcastName
seasonName
siteName
summary
title
itemType
originalURL
creator
initWithSiteName:summary:title:itemType:originalURL:imageURLs:iconURLs:creator:linkMediaType:iTunesStoreIdentifier:iTunesStoreFrontIdentifier:songTitle:songArtist:songAlbum:albumName:albumArtist:musicVideoName:musicVideoArtist:artistName:artistGenre:playlistName:playlistCurator:radioName:radioCurator:softwareName:softwareGenre:softwarePlatform:bookName:bookAuthor:audioBookName:audioBookAuthor:audioBookNarrator:podcastName:podcastArtist:podcastEpisodeName:podcastEpisodePodcastName:podcastEpisodeArtist:podcastEpisodeReleaseDate:tvEpisodeEpisodeName:tvEpisodeSeasonName:tvEpisodeGenre:tvSeasonName:tvSeasonGenre:movieName:movieGenre:
chatGuids
referencedMessage
INMessageForSPIMessage:personProvider:
text
INPersonsForSPIHandles:personProvider:
__INSpeakableStringForMessage:
lastReadDate
messageType
effect
initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:dateMessageWasLastRead:numberOfAttachments:messageType:messageEffectType:referencedMessage:
richLinkMetadata
__INMessageLinkMetadataForLPLinkMetadata:
setLinkMetadata:
peerPaymentAmount
amount
currency
initWithAmount:currencyCode:
setPaymentAmount:
numberWithUnsignedInteger:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
integerValue
setChat:
setResolvedPersons:
_chat
_resolvedPersons
resolutionResultCode
markReadForMessageGUID:callerOrigin:
handleSetMessageAttribute:completion:
confirmSetMessageAttribute:completion:
resolveAttributeForSetMessageAttribute:withCompletion:
initWithHandle:contactIdentifiers:isMe:
matchesPerson:
handle
contactIdentifiers
_isMe
_handle
_contactIdentifiers
chatIdentifier
idenfiersForChats:
serviceNamesForChats:
SPIQueryMessagesForChatsWithIdentifiers:services:limit:completion:
allIMHandlesForHandle:
handlesAndServicesForPersons:services:
spokenPhrasesForSpeakableStrings:
vocabularyIdentifiersFromSpeakableStrings:
string
appendString:
predicateWithFormat:argumentArray:
chatParticipantForSPIHandle:
startDateComponents
endDateComponents
initWithStartDate:endDate:
messageContentsPredicate:
recipientsPredicate:
sendersPredicate:
containsDate:
isRead
isOutgoing
evaluateWithObject:
chatParticipantsForSPIHandles:
messagesMatchingMessageIdentifiers:completion:
SPIQueryMessagesForChats:limit:completion:
chatsWithGuids:
chatsContainingRequiredParticipants:
SPIQueryMessagesForSenders:limit:completion:
SPIQueryUnreadMessages:completion:
hasPrefix:
substringFromIndex:
longLongValue
numberWithLongLong:
SPIQueryMessagesWithRowIDs:completion:
resolveDateTimeRange:
IMAssistantCore
IMAssistantAudioPlayer
AVAudioPlayerDelegate
NSObject
IMAssistantMessageAttributeOptions
IMAssistantMessageSendHandler
INSendMessageIntentHandling
IMAssistantMessageSearchHandler
INSearchForMessagesIntentHandling
IMAssistantMessagePlayAudioHandler
IMAssistantAudioPlayerDelegate
INPlayAudioMessageIntentHandling
IMAssistantIntentHandler
IMAssistantChatParticipant
IMAssistantMessageHandler
IMAssistantINMessageConverterPersonProvider
IMAssistantIdentifiableIntentHandler
IMAssistantINMessageConverter
IMAssistantRelevantChatMatchingRecipients
IMAssistantMessageSetAttributeHandler
INSetMessageAttributeIntentHandling
IMAssistantMessageSearchChatParticipant
IMAssistantMessageQueryHandler
IMAssistantMessageReadAttributeSanitizer
IMAssistantMessageAttributeSanitizer
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v32@0:8@16@24
v24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@32@0:8@16@24
v16@0:8
q16@0:8
@"<IMAssistantAudioPlayerDelegate>"
@"NSString"
@"AVAudioPlayer"
@24@0:8Q16
@32@0:8Q16@24
v32@0:8@16@?24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INSendMessageIntentResponse">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"INSendMessageIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
q40@0:8@16@24@32
@24@0:8@16
v40@0:8@16@24@?32
@40@0:8@16@24@32
B32@0:8@16@24
B28@0:8@16B24
@48@0:8@16@24q32@40
@40@0:8@16q24@32
@56@0:8@16@24@32q40@48
@24@0:8@?16
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INSearchForMessagesIntentResponse">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INMessageAttributeOptionsResolutionResult">24
v32@0:8@"INSearchForMessagesIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
@"<IMAssistantMessageAttributeSanitizer>"
v32@0:8@16q24
v32@0:8@"IMAssistantAudioPlayer"16q24
v32@0:8@"INPlayAudioMessageIntent"16@?<v@?@"INPlayAudioMessageIntentResponse">24
@"IMAssistantAudioPlayer"
@"NSMutableArray"
@40@0:8q16@24@32
@"IMHandle"
@"CNContact"
@"INPerson"24@0:8@"IMSPIHandle"16
@"CNContactStore"
@"NSArray"
@"IMChatRegistry"
@"IMChat"
v32@0:8@"INSetMessageAttributeIntent"16@?<v@?@"INSetMessageAttributeIntentResponse">24
v32@0:8@"INSetMessageAttributeIntent"16@?<v@?@"INMessageAttributeResolutionResult">24
@36@0:8@16@24B32
B40@0:8@16@24@?32
v40@0:8@16q24@?32
v48@0:8@16@24q32@?40
@32@0:8@16^@24
v32@0:8q16@?24
v96@0:8@16@24@32@40@48@56@64@72Q80@?88
Q24@0:8Q16
@(#)PROGRAM:IMAssistantCore  PROJECT:IMAssistantCore-
