%@ %@
value
twoWaySync
-[NPSUserDefaultsMsgKey writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-209/nanoprefsyncd-shared/Protocols/NPSUserDefaultsMsgKey.m
nil != self->_key
T@"NSString",&,N,V_key
hasValue
TB,R,N
T@"NSData",&,N,V_value
hasTwoWaySync
TB,N
TB,N,V_twoWaySync
kind
feature
setting
restriction
userSettingsAndRestrictions
hasKind
T@"NSString",&,N,V_kind
hasFeature
T@"NSString",&,N,V_feature
hasSetting
T@"NSData",&,N,V_setting
hasRestriction
T@"NSData",&,N,V_restriction
hasUserSettingsAndRestrictions
T@"NSData",&,N,V_userSettingsAndRestrictions
container
domain
-[NPSUserDefaultsBackupMsg writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-209/nanoprefsyncd-shared/Protocols/NPSUserDefaultsBackupMsg.m
nil != self->_domain
hasContainer
T@"NSString",&,N,V_container
T@"NSString",&,N,V_domain
keys
T@"NSMutableArray",&,N,V_keys
com.apple.nanoprefsync
com.apple.private.alloy.preferencessync
type
content
com.apple.pairedsync
UserDefaults/
ManagedConfiguration/
UserDefaultsBackup/
FileBackup/
local-device-build-version
paired-device-build-version
mc-data-cache
timestamp
com.apple.nanoprefsync.workQueue
com.apple.pairedsync.nanoprefsyncdfirst
com.apple.pairedsync.nanoprefsyncd
com.apple.notifyd.matching
Notification
com.apple.Preferences.ChangedRestrictionsEnabledStateNotification
v16@?0@"NSObject<OS_xpc_object>"8
v8@?0
com.apple.NanoTimeKit
notificationsIndicatorEnabled
customMonogram
v16@?0@"NSString"8
com.apple.NanoPreferencesSync
v24@?0@"NSString"8@"UserDefaultsKey"16
v32@?0@"NSString"8@"UserDefaultsKey"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"UserDefaultsDomain"16^B24
com.apple.Carousel
DisableWristDetection
NotificationPrivacy
com.apple.nano
mirrorDNDState
workoutDND
dndState
dndStateDate
dndEffectiveOverrides
dndPrivilegedSenderTypes
v32@?0@"NSString"8@"NSMutableSet"16^B24
MessageSendTimeout
PurgeRetryDelay
v28@?0@"NSString"8@"NSSet"16B24
v32@?0@"NSString"8@"NSString"16@"NSSet"24
v32@?0@"NSString"8@"WhitelistedUserDefaultsKey"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NPSUserDefaultsBackupMsgKey"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
@"NSError"24@?0@"NSString"8@"NSString"16
v32@?0@"NSURL"8@"NSURL"16^B24
v32@?0@"NSString"8@16^B24
%@|%@
v44@?0@"NSString"8@"NSString"16@"NSData"24B32d36
com.apple.springboard
SBParentalControlsCapabilities
v32@?0@"NSString"8@"NSArray"16^B24
fileBackupManager
T@"NPSFileBackupManager",&,N,V_fileBackupManager
totalDataToSyncInBytes
TQ,N,V_totalDataToSyncInBytes
remainingDataToSyncInBytes
TQ,N,V_remainingDataToSyncInBytes
syncSessionProgressDictionary
T@"NSMutableDictionary",&,N,V_syncSessionProgressDictionary
pairedSyncCoordinatorFirstSync
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorFirstSync
pairedSyncCoordinatorRemainderSync
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorRemainderSync
activeSyncSession
T@"PSYServiceSyncSession",&,N,V_activeSyncSession
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
settings
T@"NPSSettings",&,N,V_settings
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
idsService
T@"IDSService",&,N,V_idsService
deviceRegistry
T@"NPSDeviceRegistry",&,N,V_deviceRegistry
database
T@"NPSDatabase",&,N,V_database
purgeTimer
T@"NSObject<OS_dispatch_source>",&,N,V_purgeTimer
<%@ %p; uuid = (%@); url = (%@)>
uuid
supportsSecureCoding
TB,R
T@"NSUUID",&,N,V_uuid
T@"NSURL",&,N,V_url
-[NPSUserDefaultsMsg writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-209/nanoprefsyncd-shared/Protocols/NPSUserDefaultsMsg.m
hasTimestamp
Td,N,V_timestamp
fileURL
hasFileURL
T@"NSData",&,N,V_fileURL
(nil)
BEGIN EXCLUSIVE TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
meta
SELECT COUNT(*) FROM meta
Unknown Error
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(domain, key))
CREATE TABLE IF NOT EXISTS backup_msgs (container TEXT NOT NULL DEFAULT (''), domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(container, domain, key))
CREATE TABLE IF NOT EXISTS msgs_type (messageID TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL)
CREATE INDEX sync_msgs_messageID_idx ON sync_msgs (messageID ASC)
CREATE INDEX backup_msgs_messageID_idx ON backup_msgs (messageID ASC)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
CREATE TABLE IF NOT EXISTS file_backup_msgs (path TEXT NOT NULL, messageID TEXT, PRIMARY KEY(path))
CREATE INDEX file_backup_msgs_messageID_idx ON file_backup_msgs (messageID ASC)
CREATE TABLE IF NOT EXISTS stashed_sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, data BLOB, two_way_sync INTEGER, timestamp DOUBLE, PRIMARY KEY(domain, key))
ALTER TABLE sync_msgs ADD COLUMN cloudEnabled INTEGER
SELECT type FROM msgs_type WHERE messageID=?
INSERT INTO msgs_type (messageID, type) VALUES (?, ?)
INSERT OR REPLACE INTO sync_msgs (domain, key, messageID, cloudEnabled) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO backup_msgs (container, domain, key, messageID) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO file_backup_msgs (path, messageID) VALUES (?, ?)
DELETE FROM sync_msgs WHERE domain=? AND key=? AND cloudEnabled=?
DELETE FROM backup_msgs WHERE container=? AND domain=? AND key=?
DELETE FROM file_backup_msgs WHERE path=?
DELETE FROM sync_msgs WHERE messageID=?
DELETE FROM backup_msgs WHERE messageID=?
DELETE FROM file_backup_msgs WHERE messageID=?
DELETE FROM msgs_type WHERE messageID=?
UPDATE sync_msgs SET messageID=NULL WHERE messageID=?
UPDATE backup_msgs SET messageID=NULL WHERE messageID=?
UPDATE file_backup_msgs SET messageID=NULL WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID=?
SELECT container, domain, key FROM backup_msgs WHERE messageID=?
SELECT path FROM file_backup_msgs WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID IS NULL
SELECT container, domain, key FROM backup_msgs WHERE messageID IS NULL
SELECT path FROM file_backup_msgs WHERE messageID IS NULL
INSERT OR REPLACE INTO stashed_sync_msgs (domain, key, data) VALUES (?, ?, ?)
SELECT domain, key, data, two_way_sync, timestamp FROM stashed_sync_msgs
DELETE FROM stashed_sync_msgs
DELETE FROM msgs_type
DELETE FROM sync_msgs
DELETE FROM backup_msgs
DELETE FROM file_backup_msgs
path
T@"NSString",&,N,V_path
T^{sqlite3=},N,V_db
getMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_getMessageTypeForMessageID
setMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setMessageTypeForMessageID
setMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setMessageIDForSettingSync
setMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setMessageIDForSettingBackup
setMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setMessageIDForFileBackup
untrackSettingsSyncMessage
T^{sqlite3_stmt=},N,V_untrackSettingsSyncMessage
untrackSettingsBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsBackupMessage
untrackFileBackupMessage
T^{sqlite3_stmt=},N,V_untrackFileBackupMessage
untrackSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsSyncForMessageID
untrackSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsBackupForMessageID
untrackFileBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackFileBackupForMessageID
removeMessageFromMessageTypeTable
T^{sqlite3_stmt=},N,V_removeMessageFromMessageTypeTable
setNullMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingSync
setNullMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingBackup
setNullMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForFileBackup
getSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncForMessageID
getSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupForMessageID
getFileBackupForMessageID
T^{sqlite3_stmt=},N,V_getFileBackupForMessageID
getSettingsSyncWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncWithNullMessageID
getSettingsBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupWithNullMessageID
getFileBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getFileBackupWithNullMessageID
stashSettingsSyncData
T^{sqlite3_stmt=},N,V_stashSettingsSyncData
getStashedSettingSyncData
T^{sqlite3_stmt=},N,V_getStashedSettingSyncData
flushStashedSettingSyncData
T^{sqlite3_stmt=},N,V_flushStashedSettingSyncData
purgeMessageTypeTable
T^{sqlite3_stmt=},N,V_purgeMessageTypeTable
purgeSettingsSyncTable
T^{sqlite3_stmt=},N,V_purgeSettingsSyncTable
purgeSettingsBackupTable
T^{sqlite3_stmt=},N,V_purgeSettingsBackupTable
purgeFileBackupTable
T^{sqlite3_stmt=},N,V_purgeFileBackupTable
version
TQ,R,N,V_version
System/Library/PreferencesSyncBundles
NPSDomains
NPSAction
NPSDefaultsDomain
NPSDefaultsKeys
NPSDefaultsKeyPrefixes
NPSChangeNotificationName
NPSContainer
NPSAppGroupContainer
NPSCloudEnabled
NPSPerGizmo
NPSPreInitialSyncInit
NPSMirrorableBBDomain
NPSMirrorableDomain
NPSMirrorableKey
OneWaySync
TwoWaySync
Whitelist
<%@: %p key = "%@" twoWaySync = %d
 isPerGizmoSetting = %d preInitialSyncInitialization = %d
%@%@>
BPSNanoBulletinShowsCustomSettings
isPrefix
TB,N,V_isPrefix
appGroupContainer
T@"NSString",&,N,V_appGroupContainer
isCloudEnabled
TB,N,V_isCloudEnabled
isPerGizmoSetting
TB,N,V_isPerGizmoSetting
preInitialSyncInitialization
TB,N,V_preInitialSyncInitialization
mirrorableBBDomain
T@"NSString",&,N,V_mirrorableBBDomain
mirrorableDomain
T@"NSString",&,N,V_mirrorableDomain
mirrorableKey
T@"NSString",&,N,V_mirrorableKey
<%@: %p domain = "%@" _keys = "%@"
T@"NSMutableDictionary",&,N,V_keys
keyPrefixes
T@"NSMutableDictionary",&,N,V_keyPrefixes
<%@: %p key = "%@" notificationNames = "%@" twoWaySync = %d
 isPerGizmoSetting = %d
notificationNames
T@"NSMutableSet",&,N,V_notificationNames
self ENDSWITH '.bundle'
Key %@ not found when expected.
Item in container for key %@ expected to be of type %@.
Key %@ expected to be of type %@.
B44@?0@"NSBundle"8@"NSString"16B24@"<NSObject>"28#36
v28@?0@"NSString"8B16@"NSString"20
com.apple.bulletinboard.apps
syncedUserDefaults
T@"NSMutableDictionary",&,N,V_syncedUserDefaults
whitelisedUserDefaults
T@"NSMutableDictionary",&,N,V_whitelisedUserDefaults
SIMULATOR_ROOT
-[NPSUserDefaultsBackupMsgKey writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-209/nanoprefsyncd-shared/Protocols/NPSUserDefaultsBackupMsgKey.m
NanoPreferencesSync
Cache/
Backup/UserDefaults/
Backup/Files/
index
database.db
-[NPSDeviceRegistry startMonitoringPairingEventsWithQueue:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-209/nanoprefsyncd-shared/NPSDeviceRegistry.m
queue
hasCheckedInWithNanoRegistry
TB,N,V_hasCheckedInWithNanoRegistry
pairedDevice
T@"NRDevice",&,N,V_pairedDevice
pairingID
T@"NSUUID",&,N,V_pairingID
pairingDataStore
T@"NSString",&,N,V_pairingDataStore
domainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
perGizmoCacheDirectoryPath
T@"NSString",&,N,V_perGizmoCacheDirectoryPath
globalCacheDirectoryPath
T@"NSString",&,N,V_globalCacheDirectoryPath
userDefaultsBackupDirectoryPath
T@"NSString",&,N,V_userDefaultsBackupDirectoryPath
filesBackupDirectoryPath
T@"NSString",&,N,V_filesBackupDirectoryPath
filesBackupMetadataIndexPath
T@"NSString",&,N,V_filesBackupMetadataIndexPath
databasePath
T@"NSString",&,N,V_databasePath
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
paired
TB,R,N,GisPaired
hasChangesToWrite
TB,N,V_hasChangesToWrite
Tq,N,V_type
containerPath
T@"NSString",&,N,V_containerPath
nanoDomainAccessor
T@"NPSDomainAccessor",&,N,V_nanoDomainAccessor
apple-internal-install
nil _deviceRegistry
nil pairedDevice
nil pairingID
nil pairingDataStore
other1
other2
v32@?0@"NSURL"8@"NPSFileBackupMetadata"16^B24
metadataIndex
T@"NSMutableDictionary",&,N,V_metadataIndex
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithBool:
setKey:
setValue:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
hasValue
setTwoWaySync:
setHasTwoWaySync:
hasTwoWaySync
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
value
twoWaySync
_key
_value
_twoWaySync
_has
setKind:
setFeature:
setSetting:
setRestriction:
setUserSettingsAndRestrictions:
hasKind
hasFeature
hasSetting
hasRestriction
hasUserSettingsAndRestrictions
kind
feature
setting
restriction
userSettingsAndRestrictions
_feature
_kind
_restriction
_setting
_userSettingsAndRestrictions
removeAllObjects
alloc
addObject:
count
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addKey:
setContainer:
setDomain:
keysCount
clearKeys
keyAtIndex:
keyType
hasContainer
container
domain
keys
setKeys:
_container
_domain
_keys
dataWithContentsOfFile:
unarchiveObjectOfClasses:withData:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClasses:forKey:
finishDecoding
data
initForWritingWithMutableData:
encodeObject:forKey:
finishEncoding
unarchiveObjectOfClasses:withFile:
archiveObject:
startMonitoringPairingEventsWithQueue:
blockUntilPaired
performMigration
loadSettingsBundles
databasePath
initWithPath:
initWithMachServiceName:
setDelegate:
initWithService:
handleUserDefaultsMsg:
setProtobufAction:forIncomingRequestsOfType:
handleFileBackupMessage:
handleUserDefaultsBackupMsg:
syncCoordinatorWithServiceName:
setDelegate:queue:
initWithDeviceRegistry:
resume
addDelegate:queue:
stringWithUTF8String:
isEqualToString:
handlePairedDeviceChangedVersionNotification
handleManagedConfigurationChangedNotification
handleAppChangedRestrictions
checkIfShouldPerformFirstLaunchIntoNewBuildTasks
resendMessagesForMessageID:
checkPairedDeviceChangedVersion
resyncManagedConfigurationIfNeeded
dealloc
initWithDomain:
synchronize
isPaired
domainAccessor
boolForKey:
pairedDevice
valueForProperty:
setBool:forKey:
initWithNanoDomain:
setWithObject:
sendSetting:keys:messageIdentifier:messageData:cloudEnabled:
completeActiveSyncSessionWithError:
length
registerSyncMessageWithIdentifier:size:
syncDidFailWithError:
syncDidComplete
purgePendingOutgoingMessages
syncSessionType
startSyncIsInitialSync:syncType:
setHasPerformedInitialSync:
syncDidCompleteSending
reportProgress:
errorWithDomain:code:userInfo:
numberWithUnsignedLongLong:
numberWithUnsignedInteger:
initDomainKeysToSyncFirstIfNeeded
restoreRemoteFilesFromBackup
restoreRemoteSettingsFromBackup
forceResyncManagedConfigurationIsInitialSync:
syncedUserDefaults
isCloudEnabled
appGroupContainer
null
objectForKeyedSubscript:
setObject:forKeyedSubscript:
isPerGizmoSetting
preInitialSyncInitialization
initWithUserDefaultsDomain:container:appGroupContainer:
synchronizeForReading
objectForKey:
synchronizeForWriting
isPrefix
copyKeyList
hasPrefix:
shouldSyncFirstPerGizmoDomain:withKey:
enumerateKeysAndObjectsUsingBlock:
keyPrefixes
sendSettingsInDomain:keys:isInitialSync:cloudEnabled:
arrayWithObjects:count:
setWithArray:
dictionaryWithObjects:forKeys:count:
containsObject:
hasPerformedInitialSync
systemBuildVersion
stringForKey:
readCacheFromDiskForDomain:isPerGizmo:
timeIntervalSinceReferenceDate
numberWithDouble:
allObjects
updateCacheForDomain:keys:twoWaySyncTimestamp:isPerGizmo:
sendMessageData:messageType:queueOneIdentifier:identifier:urgentPriorityOverride:cloudEnabled:
initWithProtobufData:type:isResponse:
maxSendTimeout
mutableCopy
idsService
sendProtobuf:toDestinations:priority:options:identifier:error:
code
unsignedLongLongValue
removeObjectForKey:
messageWasDelivered:
messageWasPurged:
purgeRetryDelay
endTransaction
beginTransaction
getSettingsSyncDataForMessage:handler:
sendSettingsBackupInDomain:keys:container:isInitialSync:
minusSet:
untrackSettingsBackupMessageForContainer:domain:keys:
getSettingsBackupDataForMessage:handler:
retryFileBackupRestoreForFilePath:
untrackFileBackupMessageForFileAtPath:
getFileBackupDataForMessage:handler:
getMessageType:forMessageID:
removeMessageFromMessageTypeTable:
intValue
handleFileBackupMessage:resourceURL:
context
outgoingResponseIdentifier
initWithData:
handleUnserializedUserDefaultsMsg:
hasTimestamp
timestamp
whitelisedUserDefaults
unserializeObject:error:
doubleValue
compare:
notificationNames
unionSet:
writeCache:toDiskForDomain:isPerGizmo:
backupPathForDomain:container:
createDirectoryIfNeeded:
propertyListWithData:options:format:error:
enumerateObjectsUsingBlock:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
defaultManager
fileExistsAtPath:
removeItemAtPath:error:
fileURL
backupFileAtURL:originalFileURL:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:
synchronizeNanoDomain:keys:cloudEnabled:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
perGizmoCacheDirectoryPath
globalCacheDirectoryPath
stringByAppendingPathComponent:
stringByStandardizingPath
cachePathForDomain:isPerGizmo:
deleteCacheForDomain:isPerGizmo:
contentsOfDirectoryAtPath:error:
fileExistsAtPath:isDirectory:
userDefaultsBackupDirectoryPath
restoreFileBackupForLocalFileURL:originalFileURL:isInitialSync:
enumerateFileBackupsUsingBlock:
getResourceValue:forKey:error:
setFileURL:
queueOneIdentifierForFileBackupMsg:
numberWithInt:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
path
sentFileBackupMessage:forFileAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
setTimestamp:
serializedObjectForKey:error:
type
queueOneIdentifierForUserDefaultsMsg:
sentSettingsSyncMessage:forDomain:keys:cloudEnabled:
sortedArrayUsingSelector:
initWithString:
appendString:
serializeObject:error:
queueOneIdentifierForUserDefaultsBackupMsg:
sendMessageData:messageType:queueOneIdentifier:identifier:cloudEnabled:
sentSettingsBackupMessage:forContainer:domain:keys:
appendFormat:
arrayWithObject:
isMirroring
registerInitialSyncMessage:ofSize:orReportInitialSyncFailureWithError:
getStashedSettingsSyncDataWithHandler:
flushStashedSettingsSyncData
managedConfigurationSettings
debounceInSource:onQueue:block:
synchronizeUserDefaultsDomain:keys:cloudEnabled:
sharedConnection
userSettings
effectiveRestrictions
resyncManagedConfigurationIfNeededIsInitialSync:
managedConfigurationData
isEqualToArray:
sendManagedConfigurationSettings:isInitialSync:
objectAtIndexedSubscript:
logManagedConfigurationDictionary:
fileURLWithPath:isDirectory:
localFileURLForOriginalFileURL:
isManagedConfigurationSettingWhitelistedForKind:feature:
queueOneIdentifierForManagedConfigurationMsg:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
listener:shouldAcceptNewConnection:
applyStashedSettingsSyncMessages
fileBackupManager
setFileBackupManager:
totalDataToSyncInBytes
setTotalDataToSyncInBytes:
remainingDataToSyncInBytes
setRemainingDataToSyncInBytes:
syncSessionProgressDictionary
setSyncSessionProgressDictionary:
pairedSyncCoordinatorFirstSync
setPairedSyncCoordinatorFirstSync:
pairedSyncCoordinatorRemainderSync
setPairedSyncCoordinatorRemainderSync:
activeSyncSession
setActiveSyncSession:
workQueue
setWorkQueue:
settings
setSettings:
xpcListener
setXpcListener:
setIdsService:
deviceRegistry
setDeviceRegistry:
database
setDatabase:
purgeTimer
setPurgeTimer:
_fileBackupManager
_totalDataToSyncInBytes
_remainingDataToSyncInBytes
_syncSessionProgressDictionary
_pairedSyncCoordinatorFirstSync
_pairedSyncCoordinatorRemainderSync
_activeSyncSession
_workQueue
_settings
_xpcListener
_idsService
_deviceRegistry
_database
_purgeTimer
UUIDString
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
uuid
setUuid:
setUrl:
_uuid
_url
setHasTimestamp:
_timestamp
hasFileURL
_fileURL
_openDBAtPath:
setMessageType:forMessageID:
fileSystemRepresentation
copy
_getSchemaVersion
untrackSettingsSyncMessagesForDomain:keys:cloudEnabled:
stashSettingsSyncData:forDomain:key:isTwoWaySync:timestamp:
setPath:
version
setDb:
getMessageTypeForMessageID
setGetMessageTypeForMessageID:
setMessageTypeForMessageID
setSetMessageTypeForMessageID:
setMessageIDForSettingSync
setSetMessageIDForSettingSync:
setMessageIDForSettingBackup
setSetMessageIDForSettingBackup:
setMessageIDForFileBackup
setSetMessageIDForFileBackup:
untrackSettingsSyncMessage
setUntrackSettingsSyncMessage:
untrackSettingsBackupMessage
setUntrackSettingsBackupMessage:
untrackFileBackupMessage
setUntrackFileBackupMessage:
untrackSettingsSyncForMessageID
setUntrackSettingsSyncForMessageID:
untrackSettingsBackupForMessageID
setUntrackSettingsBackupForMessageID:
untrackFileBackupForMessageID
setUntrackFileBackupForMessageID:
removeMessageFromMessageTypeTable
setRemoveMessageFromMessageTypeTable:
setNullMessageIDForSettingSync
setSetNullMessageIDForSettingSync:
setNullMessageIDForSettingBackup
setSetNullMessageIDForSettingBackup:
setNullMessageIDForFileBackup
setSetNullMessageIDForFileBackup:
getSettingsSyncForMessageID
setGetSettingsSyncForMessageID:
getSettingsBackupForMessageID
setGetSettingsBackupForMessageID:
getFileBackupForMessageID
setGetFileBackupForMessageID:
getSettingsSyncWithNullMessageID
setGetSettingsSyncWithNullMessageID:
getSettingsBackupWithNullMessageID
setGetSettingsBackupWithNullMessageID:
getFileBackupWithNullMessageID
setGetFileBackupWithNullMessageID:
stashSettingsSyncData
setStashSettingsSyncData:
getStashedSettingSyncData
setGetStashedSettingSyncData:
flushStashedSettingSyncData
setFlushStashedSettingSyncData:
purgeMessageTypeTable
setPurgeMessageTypeTable:
purgeSettingsSyncTable
setPurgeSettingsSyncTable:
purgeSettingsBackupTable
setPurgeSettingsBackupTable:
purgeFileBackupTable
setPurgeFileBackupTable:
_path
_version
_getMessageTypeForMessageID
_setMessageTypeForMessageID
_setMessageIDForSettingSync
_setMessageIDForSettingBackup
_setMessageIDForFileBackup
_untrackSettingsSyncMessage
_untrackSettingsBackupMessage
_untrackFileBackupMessage
_untrackSettingsSyncForMessageID
_untrackSettingsBackupForMessageID
_untrackFileBackupForMessageID
_removeMessageFromMessageTypeTable
_setNullMessageIDForSettingSync
_setNullMessageIDForSettingBackup
_setNullMessageIDForFileBackup
_getSettingsSyncForMessageID
_getSettingsBackupForMessageID
_getFileBackupForMessageID
_getSettingsSyncWithNullMessageID
_getSettingsBackupWithNullMessageID
_getFileBackupWithNullMessageID
_stashSettingsSyncData
_getStashedSettingSyncData
_flushStashedSettingSyncData
_purgeMessageTypeTable
_purgeSettingsSyncTable
_purgeSettingsBackupTable
_purgeFileBackupTable
UTF8String
bytes
dataWithBytes:length:
bbAppsSettings
boolValue
boolForKey:keyExistsAndHasValidFormat:
setIsPrefix:
setAppGroupContainer:
setIsCloudEnabled:
setIsPerGizmoSetting:
setPreInitialSyncInitialization:
mirrorableBBDomain
setMirrorableBBDomain:
mirrorableDomain
setMirrorableDomain:
mirrorableKey
setMirrorableKey:
_isPrefix
_isCloudEnabled
_isPerGizmoSetting
_preInitialSyncInitialization
_appGroupContainer
_mirrorableBBDomain
_mirrorableDomain
_mirrorableKey
setKeyPrefixes:
_keyPrefixes
setNotificationNames:
_notificationNames
predicateWithFormat:
filteredArrayUsingPredicate:
objectForInfoDictionaryKey:
setSyncedUserDefaults:
setWhitelisedUserDefaults:
_syncedUserDefaults
_whitelisedUserDefaults
processInfo
environment
defaultCenter
_registryChanged:
addObserver:selector:name:object:
sharedInstance
waitForActivePairedDevice
checkInWithNanoRegistryIfNeeded
stringByAppendingString:
initWithDomain:pairingID:pairingDataStore:
filesBackupDirectoryPath
name
forceCheckInWithNanoRegistry
getActivePairedDevice
invalidate
pairingID
pairingDataStore
pairingDevice
filesBackupMetadataIndexPath
queue
setPairedDevice:
hasCheckedInWithNanoRegistry
setHasCheckedInWithNanoRegistry:
setPairingID:
setPairingDataStore:
setDomainAccessor:
setPerGizmoCacheDirectoryPath:
setGlobalCacheDirectoryPath:
setUserDefaultsBackupDirectoryPath:
setFilesBackupDirectoryPath:
setFilesBackupMetadataIndexPath:
setDatabasePath:
_hasCheckedInWithNanoRegistry
_queue
_pairedDevice
_pairingID
_pairingDataStore
_domainAccessor
_perGizmoCacheDirectoryPath
_globalCacheDirectoryPath
_userDefaultsBackupDirectoryPath
_filesBackupDirectoryPath
_filesBackupMetadataIndexPath
_databasePath
applicationProxyForIdentifier:
groupContainerURLs
dataContainerURL
initWithUserDefaultsDomain:containerPath:
allKeys
setType:
containerPath
setContainerPath:
nanoDomainAccessor
setNanoDomainAccessor:
hasChangesToWrite
setHasChangesToWrite:
_hasChangesToWrite
_type
_containerPath
_nanoDomainAccessor
currentRunLoop
metadataIndexReadFromDiskIfNeeded
newFileUUID
persistMetadataIndex
pathToFileWithUUID:
exceptionWithName:reason:userInfo:
moveItemAtPath:toPath:error:
URLWithString:
UUID
fileURLWithUUID:
metadataIndex
setMetadataIndex:
_metadataIndex
NPSUserDefaultsMsgKey
NSCopying
NPSManagedConfigurationMsg
NPSUserDefaultsBackupMsg
NPSKeyedArchiverUtil
NPSCompanionServerProtocol
NPSServerProtocol
NSObject
NPSServer
PSYSyncCoordinatorDelegate
IDSServiceDelegate
NSXPCListenerDelegate
NPSFileBackupMetadata
NSSecureCoding
NSCoding
NPSUserDefaultsMsg
NPSFileBackupMsg
NPSDatabase
UserDefaultsKey
UserDefaultsDomain
WhitelistedUserDefaultsKey
WhitelistedUserDefaultsDomain
NPSSettings
NPSUserDefaultsBackupMsgKey
NPSDeviceRegistry
NPSSettingAccessor
NPSFileBackupManager
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
@"NSString"
@"NSData"
{?="twoWaySync"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v52@0:8@16@24@32@40B48
v52@0:8@"NSString"16@"NSSet"24@"NSString"32@"NSString"40B48
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSSet"24B32
d16@0:8
q16@0:8
v24@0:8^{NSDictionary=#}16
B32@0:8@16@24
v32@0:8@16@24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@16Q24@32
v32@0:8@16Q24
v28@0:8B16Q20
@48@0:8@16i24@28^@36B44
@52@0:8@16i24@28^@36B44B48
@28@0:8@16B24
B36@0:8@16@24B32
B28@0:8@16B24
v44@0:8@16@24@32B40
@36@0:8@16@24B32
@52@0:8@16@24^@32^@40B48
@44@0:8@16@24@32B40
v40@0:8@16@24B32B36
v40@0:8^@16@24@?32
v24@0:8Q16
@"NPSFileBackupManager"
@"NSMutableDictionary"
@"PSYSyncCoordinator"
@"PSYServiceSyncSession"
@"NSObject<OS_dispatch_queue>"
@"NPSSettings"
@"NSXPCListener"
@"IDSService"
@"NPSDeviceRegistry"
@"NPSDatabase"
@"NSObject<OS_dispatch_source>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSUUID"
@"NSURL"
v24@0:8d16
{?="timestamp"b1}
B28@0:8i16@20
B32@0:8^i16@24
v40@0:8@16@24@32
v32@0:8@16@?24
v52@0:8@16@24@32B40d44
v24@0:8@?16
i16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSMutableSet"
@"NRDevice"
@"NPSDomainAccessor"
@32@0:8@16^@24
@40@0:8@16@24@32
v24@0:8q16
Caught exception (%@) unarchiving (%@) of expected classes (%@)
Caught exception (%@) archiving (%@)
Launching; "NanoPreferencesSyncDaemon_Sim-209" "22"
Received notification: %s
Received unexepectedly NULL notification
Received unexpected non-dictionary type event: (%@)
has: (%d)
Reporting sync failure (%@) to sync session: (%@)
Reporting successful sync completion to sync session: (%@)
coordinator: (%@)
Asked to start syncing for sync session (%@) even though there already is an active sync session (%@)
total: (%llu), remaining: (%llu); initialSyncProgressDictionary: (%@)
strongSession: (%p); _activeSyncSession: (%p)
Did not complete syncing before timer expired; Sync Session: (%@); Pending Messages: (%@)
isInitialSync: (%d) syncType: (%@)
Performing initial sync copy for <%@, %@>; Value: (%@)
Detected first launch after pairing; Local build version: (%@)
Detected local device update; Current build version: (%@); Previous: (%@)
Skipping Paired Device Version change check. Not paired.
lastRegisteredPairedDeviceBuildVersion: (%@); pairedDeviceBuildVersion: (%@)
Skipping Paired Device Version change check. Has not performed initial sync yet.
Successfully sent message with identifier: (%@)
Failed sending message with error: (%@)
service: (%@), account: (%@), identifier: (%@), success: (%d), error: (%@)
progress: (%f), total: (%llu), remaining: (%llu)
Message (%@) failed to be delivered with error: (%@)
Purge Timer fired!
messageID: (%@)
Failed re-sending settings backup for container (%@), domain (%@), keys (%@).
Failed re-sending file backup (%@) for identifier (%@)!
service: (%@); account: (%@); incomingResourceAtURL: (%@); metadata: (%@); fromID: (%@); context: (%@)
nil messageType. metadata: (%@)
Un-handled message type: (%@)
idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Could not parse incoming data
Handling User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f)
Domain (%@) not whitelisted; dropping incoming message
Key (%@) in domain (%@) not whitelisted; dropping incoming message
Received User Defaults value for <%@, %@>: (%@)
Discarding cached timestamp for <%@, %@> since it is set to the future; cached: (%f); current: (%f)
Discarding incoming setting for <%@, %@>, local value is more recent
Local expects <%@, %@> to be 2-way-synced, but remote doesn't
Skipping key (%@) since incoming value is un-changed
Posting (%@) for domain (%@)
Kind: (%@)
Feature: (%@); Value: (%@)
Handling User Defaults Backup message for container: (%@); domain: (%@)
Failed to unserialized domain backup (%@) with error: (%@)
Read pre-existing domain (%@) backup: (%@)
Received User Defaults Backup for <%@, %@>; Value: (%@)
Failed to serialize updated domain (%@) backup dictionary (%@) with error: (%@)
Failed to write updated domain (%@) backup at path (%@) with error: (%@)
Failed to delete backup for domain (%@) at path (%@) with error: (%@)
Handling file backup message for path: (%@); Temporary URL: (%@)
listener: (%p); connection: (%p)
Connection invalidated: (%p)
Failed to resolve cache path for domain: (%@); isPerGizmo: (%d)
Reading cache for domain: (%@); isPerGizmo: (%d)
Failed to unserialized domain cache (%@) %@
Read cache: (%@)
Writing cache for domain: (%@); isPerGizmo: (%d)
Cache to be written: (%@)
Failed to serialize updated domain cache dictionary (%@) with error: (%@)
Failed to write updated domain cache (%@) with error: (%@)
Deleting cache for domain: (%@); isPerGizmo: (%d)
Cache for domain (%@) does not exist.
Failed to delete cache for domain: %@
Could not list content of directory (%@)
Unexpectedly found directory (%@) within container (%@) backup
Restoring remote settings from backup at path (%@)
No remote settings backup directory (%@)
Restoring remote file (%@) stored locally at (%@); isInitialSync: (%d)
Failed to retrieve file size for file URL: (%@) with error: (%@); result: (%d)
Failed to send file resource (%@) for backup at (%@) with error: (%@)
Successfully sent file backup with identifier (%@)
Requested to create directory with nil path
Failed to create backup directory (%@) with error: (%@)
Failed to resolve backup path for domain: (%@) for container: (%@)
Key (%@) is not a String.
Remote backup for domain (%@) is empty; Deleting the associated .plist
Failed to unserialize domain (%@) backup (%@) for container (%@) with error: (%@)
Restoring <%@, %@> for container (%@) to (%@)
Failed to create binary data (domain: %@; key: %@) with error: (%@)
source: (%p); *source: (%@); queue: (%@); block: (%@)
Invalid debounce parameter
Debouncing MC-sync for source: (%p)
Could not create dispatch source
Will force re-sync ManagedConfiguration state
Re-syncing MC since changes were detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since no change detected since last sync. isInitialSync: (%d)
Sending MC user settings:
Sending MC restrictions:
File Backup manager did not have an entry for original file path (%@)
domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@); cloudEnabled: (%d)
Domain (%@) should not be nil, and keys (%@) should not be nil or empty.
Container should not be nil when specifing an app group container (%@) for domain (%@) and keys (%@).
domain: (%@); keys: (%@)
SQL Error: (%d) %s
Error fetching schema version: %d (%s)
Error opening SQLite3 DB at (%@): (%d) %s
I/O error: ACCESS
I/O error: BLOCKED
I/O error: CHECKRESERVEDLOCK
I/O error: CLOSE
I/O error: DELETE
I/O error: DIR_CLOSE
I/O error: DIR_FSYNC
I/O error: FSTAT
I/O error: FSYNC
I/O error: LOCK
I/O error: NOMEM
I/O error: RDLOCK
I/O error: READ
I/O error: SEEK
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHORT_READ
I/O error: TRUNCATE
I/O error: UNLOCK
I/O error: WRITE
sqlite3_exec(%s) Error: (%d) %s
Bundle directory (%@) does not exist
Bundle directory (%@) is not a directory
Bundle directory (%@) could not be open
Unable to read bundle: %@
Malformed bundle plist for bundle: %@. %@
Missing %@ or %@ entry for bundle: %@.
Key %@ mutually exclusive with keys %@ and %@ in bundle %@
Keys %@ and %@ must go together in bundle %@
Key %@ already syncing in domain %@ for bundle %@.
Cannot overwrite existing container %@ with %@ for whitelisted <%@, %@> in bundle %@.
Cannot overwrite existing whitelisted <%@, %@> in bundle %@ with a different isPerGizmoSetting value.
Action %@ not supported in bundle (%@).
syncedUserDefaults: (%@)
whitelisedUserDefaults: (%@)
Received notification: (%@)
NanoRegistry returned paired device: (%@)
Failed to create directory (%@) with error: (%@)
Could not resolve containerPath for container (%@)
Synchronized user defaults domain (%@) for containerPath: (%@); ret: (%d).
Synchronized user defaults domain (%@); ret: (%d).
Synchronized nano-setting domain (%@); ret: (%d).
Read containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Read user default <%@, %@>; value: (%@)
Read nano-setting <%@, %@>; value: (%@)
Written containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Written user default <%@, %@>; value: (%@)
Written nano-setting <%@, %@>; value: (%@)
Failed to serialized value (%@) with error: %@ 
Failed to unserialized data (%@) with error: %@
fileURL: (%@); originalURL: (%@)
Error backuping file (%@), originalFileURL is nil
Failed to generate file backup destination path. File will not get backuped!
Failed to delete old file backup (%@) with error: (%@)
Failed to move file (%@) to (%@) with error: (%@)
Removing file (%@) from backup
Failed to remove file (%@) with error: (%@)
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty index file (%@) with error: (%@)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
</array>
<key>com.apple.private.ignore-preferences-size-limits</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
