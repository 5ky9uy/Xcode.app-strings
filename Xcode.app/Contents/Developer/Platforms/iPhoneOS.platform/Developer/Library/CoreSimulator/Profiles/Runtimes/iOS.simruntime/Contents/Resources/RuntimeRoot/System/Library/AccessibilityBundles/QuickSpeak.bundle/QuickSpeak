__CKFullScreenBalloonViewController_QSExtras_super
SafeCategory
CKFullScreenBalloonViewController_QSExtras
QuickSpeakPriv
UITextInput
UIKeyInput
UITextInputTraits
NSObject
AXQuickSpeak
AXOratorDelegate
__CKActionSheetMenuView_QSExtras_super
CKActionSheetMenuView_QSExtras
__CKTextBalloonView_QSExtras_super
CKTextBalloonView_QSExtras
__NSObject_QSExtras_super
NSObject_QSExtras
__UIWebView_QSExtras_super
UIWebView_QSExtras
__UIResponder_QSExtras_super
UIResponder_QSExtras
__UIWebBrowserView_QSExtras_super
UIWebBrowserView_QSExtras
__UICalloutBar_QSExtras_super
UICalloutBar_QSExtras
QuickSpeakLanguageMenuItem
AXQSMenuHelper
__WKWebViewAccessibility_QSExtras_super
WKWebViewAccessibility_QSExtras
__WKContentView_QSExtras_super
WKContentView_QSExtras
__PDFView_QSExtras_super
PDFView_QSExtras
__UITextField_QSExtrasAccessibility_super
UITextField_QSExtrasAccessibility
__CKFullScreenBalloonViewControllerPhone_QSExtras_super
CKFullScreenBalloonViewControllerPhone_QSExtras
CKFullScreenBalloonViewController
performCancelAnimationWithCompletion:
v8@?0
PLStackView
WAllPhotosAlbumViewController
WInteractiveNavigationControllerView
WInteractiveNavigationController
v24@?0@8^B16
QuickSpeak
UIColor
selectionHighlightColor
UICalloutBar
buttonPressed:
delegate
fade
hide
targetForAction:
updateAvailableButtons
UICalloutBarButton
setPage:
UITextSelectionView
setVisible:
showSelectionCommands
m_extraItems
NSArray
m_currentSystemButtons
NSMutableArray
UIWebView
_internal
UIWebViewInternal
browserView
UIWebBrowserView
B16@?0@"AXValidationManager"8
NSObject_QSExtras
UIResponder_QSExtras
UIWebView_QSExtras
UIWebBrowserView_QSExtras
UICalloutBar_QSExtras
UITextField_QSExtrasAccessibility
CKTextBalloonView
CKTextBalloonView_QSExtras
CKActionSheetMenuView_QSExtras
CKFullScreenBalloonViewController_QSExtras
CKFullScreenBalloonViewControllerPhone_QSExtras
v16@?0@"AXValidationManager"8
QuickSpeak PDF
PDFView_QSExtras
PDFKit
QuickSpeak WebKit2
WKContentView_QSExtras
WKWebViewAccessibility_QSExtras
WebKit
Received error trying to start speaking: %{public}@
Received error trying to pause speaking: %{public}@
Received error trying to resume speaking: %{public}@
v12@?0B8
v16@?0@"UIView"8
v32@?0@8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2391/Source/QuickSpeak/QuickSpeak.m
-[AXQuickSpeak _viewsWithBlock:]
Only call this when highlight view is not nil
webSelectionAssistant
_selectionView
interactionAssistant
selectionView
UISelectionGrabberDot
B16@?0@"UIView"8
_accessibilitySpeakTextSelectionViews
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
autocapitalizationType
Tq,N
autocorrectionType
spellCheckingType
smartQuotesType
smartDashesType
smartInsertDeleteType
keyboardType
keyboardAppearance
returnKeyType
enablesReturnKeyAutomatically
TB,N
secureTextEntry
TB,N,GisSecureTextEntry
textContentType
T@"NSString",C,N
hasText
TB,R,N
selectedTextRange
T@"UITextRange",C
markedTextRange
T@"UITextRange",R,N
markedTextStyle
T@"NSDictionary",C,N
beginningOfDocument
T@"UITextPosition",R,N
endOfDocument
inputDelegate
T@"<UITextInputDelegate>",W,N
tokenizer
T@"<UITextInputTokenizer>",R,N
textInputView
T@"UIView",R,N
selectionAffinity
insertDictationResultPlaceholder
T@,R,N
_accessibilityQuickSpeakTokenizer
B16@?0@"UITextPosition"8
QS can't handle range speaking because this isn't UITextInput: %{public}@
no text rect available %{public}@
failed to make start[%{private}@] and end[%{private}@] position start:%{private}@, - start:%{private}@, length: %{private}@
WKContentView
TSDCanvasView
orator
T@"AXOrator",R,N
cachedIdleTimerPref
TB,N,V_cachedIdleTimerPref
paused
TB,N,GisPaused,V_paused
quickSpeakInitiator
T@,&,N,V_quickSpeakInitiator
highlightViewDispatcher
T@"AXDispatchTimer",&,N,V_highlightViewDispatcher
hiddenTextSelectionViews
T@"NSArray",&,N,V_hiddenTextSelectionViews
hiddenTextSelectionViewDelegates
T@"NSArray",&,N,V_hiddenTextSelectionDelegates
content
contentOwner
T@,&,N,V_contentOwner
speakingSentenceRange
T@"UITextRange",&,N,VspeakingSentenceRange
spellOutContent
TB,D,N
selectedContent
T@"AXLanguageTaggedContent",R,N
hasTextBalloonView
TB,N,V_hasTextBalloonView
highlightView
T@"QSSelectionHighlightView",&,N,V_highlightView
sentenceHighlightView
T@"QSSelectionHighlightView",&,N,V_sentenceHighlightView
CKActionSheetMenuView
initWithTitle: interfaceActions:
quickspeak.speak
quickspeak.pause
v24@?0@"UIInterfaceAction"8^B16
_accessibilityInterfaceAction
T@"UIInterfaceAction",&,N,S_accessibilitySetInterfaceAction:
textView
UITextView
text
NSObject
dialect
quickspeak.many.languages
& %@
%@ %@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
Please stop calling _accessibilityQuickSpeakContentIsSpeakable: %{private}@
UIResponder
UIWebDocumentView
UITextInputPrivate
initWithFrame:
{CGRect={CGPoint=dd}{CGSize=dd}}
_UICalloutBarSystemButtonDescription
buttonDescriptionWithTitle: action: type:
_accessibility
copy:
quickspeak.sentence
quickspeak.spell.out
QSMenuButton<%p>. action:%@. dialect:%@
T@"AXDialectMap",&,N,V_dialect
m_extraButtons
thirdPartyMenuItems
T@"NSArray",&,N,V_thirdPartyMenuItems
menuController
T@"UIMenuController",R,N
calloutBar
T@"UICalloutBar",R,N
showingLanguageChoices
TB,N,GisShowingLanguageChoices,V_showingLanguageChoices
WKWebView
_currentContentView
selectedText
accessibilityRetrieveSpeakSelectionContent
WebSelectionRect
rect
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_selectionChanged
AXSpeakSelectionString
AXRetrievingContent
Caught exception while waiting for results... %@
UITextRange
_accessibilityCacheContentIfNecessary
AXRetrievingRects
Caught exception while waiting for rects results... %@
PDFView
currentSelection
PDFPageSelectionLayer
_private
PDFViewPrivate
scrollView
PDFScrollView
UIScrollView
pdfDocumentView
UIView
Got error making selection: %{private}@/%{private}@ %{private}@
PDFView will process range: %d, %d
PDFSelection
PDFView got the following ranges: %{private}@
PDFView got the following sentence ranges: %{private}@
UITextField
CKFullScreenBalloonViewControllerPhone
setBalloonView:
class
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:hasInstanceMethod:withFullSignature:
performCancelAnimationWithCompletion:
sharedInstance
setContent:
_accessibilityPerformValidations:
_accessibilitySpeakSelectionAssociatedScrollView
alloc
init
setDelegate:
orator
content
setPaused:
selectedContent
setSpellOutContent:
spellOutContent
setWithCapacity:
arrayWithObjects:
countByEnumeratingWithState:objects:count:
addObject:
isKindOfClass:
enumerateObjectsUsingBlock:
_accessibilityPauseSpeaking:
_accessibilitySpeak:
_accessibilitySpeakLanguageSelection:
_accessibilitySpeakWithLanguage:
_accessibilitySpeakSentence:
_accessibilitySpeakSpellOut:
bundleForClass:
localizedStringForKey:value:table:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceVariable:withType:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
addHandler:forFramework:
defaultCenter
_handleAppDidEnterBackground:
addObserver:selector:name:object:
_handleAppWillResignActive:
_stopSpeakingQuickSpeak:
removeObserver:
sentenceHighlightView
removeFromSuperview
highlightView
dealloc
clearSelectedContent
stopAction:
isPaused
resumeAction:
setSpeakingContext:
startSpeakingWithPreferredLanguage:error:
setQuickSpeakInitiator:
quickSpeakInitiator
isIdleTimerDisabled
setCachedIdleTimerPref:
setIdleTimerDisabled:
sharedCalloutBar
update
ignoreLogging
identifier
pauseSpeaking:
resumeSpeaking:
stopSpeaking:
setAlpha:
_manipulateOtherTextViews:
setContentOwner:
speakingSentenceRange
setSpeakingSentenceRange:
setHighlightView:
setSentenceHighlightView:
animateWithDuration:animations:completion:
visible
appear
setVisible:
setHidden:
_textSelectionViews
setHiddenTextSelectionViews:
array
hiddenTextSelectionViews
delegate
setHiddenTextSelectionViewDelegates:
callStackSymbols
window
subviews
initWithArray:
sharedTextEffectsWindow
addObjectsFromArray:
count
lastObject
removeLastObject
superview
webSelectionAssistant
respondsToSelector:
safeValueForKey:
interactionAssistant
_viewsWithBlock:
_quickSpeakInputInitiator
_accessibilitySpeakTextSelectionViews
_updateCalloutBar
cachedIdleTimerPref
_cleanupTextSelectionViews
isHidden
contentOffset
bounds
adjustedContentInset
contentSize
setContentOffset:animated:
rangeOfComposedCharacterSequenceAtIndex:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
autocapitalizationType
setAutocapitalizationType:
autocorrectionType
setAutocorrectionType:
spellCheckingType
setSpellCheckingType:
smartQuotesType
setSmartQuotesType:
smartDashesType
setSmartDashesType:
smartInsertDeleteType
setSmartInsertDeleteType:
keyboardType
setKeyboardType:
keyboardAppearance
setKeyboardAppearance:
returnKeyType
setReturnKeyType:
enablesReturnKeyAutomatically
setEnablesReturnKeyAutomatically:
isSecureTextEntry
setSecureTextEntry:
textContentType
setTextContentType:
insertText:
deleteBackward
hasText
textInRange:
replaceRange:withText:
setMarkedText:selectedRange:
unmarkText
textRangeFromPosition:toPosition:
positionFromPosition:offset:
positionFromPosition:inDirection:offset:
comparePosition:toPosition:
offsetFromPosition:toPosition:
positionWithinRange:farthestInDirection:
characterRangeByExtendingPosition:inDirection:
baseWritingDirectionForPosition:inDirection:
setBaseWritingDirection:forRange:
firstRectForRange:
caretRectForPosition:
selectionRectsForRange:
closestPositionToPoint:
closestPositionToPoint:withinRange:
characterRangeAtPoint:
selectedTextRange
setSelectedTextRange:
markedTextRange
markedTextStyle
setMarkedTextStyle:
beginningOfDocument
endOfDocument
inputDelegate
setInputDelegate:
tokenizer
shouldChangeTextInRange:replacementText:
textStylingAtPosition:inDirection:
positionWithinRange:atCharacterOffset:
characterOffsetOfPosition:withinRange:
insertDictationResult:
dictationRecordingDidEnd
dictationRecognitionFailed
frameForDictationResultPlaceholder:
removeDictationResultPlaceholder:willInsertResult:
beginFloatingCursorAtPoint:
updateFloatingCursorAtPoint:
endFloatingCursor
textInputView
selectionAffinity
setSelectionAffinity:
insertDictationResultPlaceholder
_accessibilitySpeakSelectionTextInputResponder
contentOwner
CGRectValue
_unionRects:withRect:
rectValue
valueWithRect:
indexOfObject:
replaceObjectAtIndex:withObject:
start
_accessibilityTextRectsForRange:singleTextRect:
objectAtIndex:
numberWithFloat:
_accessibilityRetrieveRectsForGuanularity:atSelectionOffset:wordText:
_quickSpeakTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_quickSpeakUITextInputTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_accessibilityQuickSpeakTextRectsWithRange:string:highlightRects:sentenceRects:singleTextRect:
_handleQuickSpeakHighlight:sentenceRects:textRect:initiator:
_updatedRangeForComposedCharacters:string:lastKnownWholeCharacterLocation:lastKnownUnicharLocation:
modifiedRange:withString:
substringWithRange:
_rectsByUnionSamelineRects:
axSafelyAddObjectsFromArray:
firstObject
numberWithUnsignedInteger:
_accessibilityTextRectsForRange:singleTextRect:selectedRange:string:
_sentenceRects:speakingRange:
valueWithCGRect:
convertRect:toView:
_scrollToTextRect:withScrollView:
_sentenceHighlightOverlapHeightArray
quickSpeakSentenceHighlightOption
floatValue
quickSpeakHighlightOption
_sliceRects:withSentenceRects:wordRects:
mainBundle
bundleIdentifier
isEqualToString:
quickSpeakHighlightText
initWithFrame:
quickSpeakWordHighlightColor
selectionHighlightColor
colorWithCGColor:
quickSpeakSentenceHighlightColor
colorWithAlphaComponent:
setSelectionColor:
setSentenceHighlight:
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
setUnderlineColor:
blackColor
backgroundColor
addSubview:
insertSubview:atIndex:
animateWithDuration:animations:
setHighlightSelectionRects:
isSpeaking
speakStatusWithLanguage:rate:
contentIsSpeakable
systemLanguageID
unpredictedAmbiguousLangMaps
ambiguousLangMaps
generalLanguageID
associatedAmbiguousLanguages
containsObject:
_accessibilityHandleFinishSpeaking
_handlePauseCallback
highlightViewDispatcher
initWithTargetSerialQueue:
setHighlightViewDispatcher:
_willSpeakRange:string:
quickSpeakClassIsBlacklisted:
isQuickSpeakSelector:
initialize
oratorDidStartSpeaking:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidCancelSpeaking:
orator:willSpeakRange:ofContent:
speakAction:withPreferredLanguage:
pauseAction:
selectedContentIsSpeakable
selectedContentRequiresUserChoice
.cxx_destruct
hiddenTextSelectionViewDelegates
hasTextBalloonView
setHasTextBalloonView:
_lastQuickSpeakOffset
_orator
_lastWholeCharacterLocation
_lastUnicharLocation
_currentSentenceRange
_cachedIdleTimerPref
_paused
_hasTextBalloonView
_quickSpeakInitiator
_highlightView
_hiddenTextSelectionViews
_sentenceHighlightView
_hiddenTextSelectionDelegates
_highlightViewDispatcher
_contentOwner
validateClass:
arrayWithArray:
_axInterfaceActionForSpeakSelection
insertObject:atIndex:
initWithTitle:interfaceActions:
setTitle:
actionWithTitle:type:handler:
_accessibilitySetInterfaceAction:
_accessibilityInterfaceAction
validateClass:hasProperty:withType:
text
_accessibilityQuickSpeakContent
_accessibilityCacheContentIfNecessary
dialect
restoreMenu
specificLanguageID
menuItemForCalloutBarButton:
sharedInputModeController
currentInputModeInPreference
primaryLanguage
_accessibilityQuickSpeakEnclosingSentence:
unambiguousLangMaps
localizedStringWithFormat:
defaultDialect
languageNameInNativeLocale
stringWithFormat:
arrayWithObjects:count:
dialectForCurrentLocale
langMap
initWithTitle:action:
setDialect:
setDontDismiss:
sharedMenuController
menuItems
saveThirdPartyMenuItemsIfNeeded:
setShowingLanguageChoices:
setMenuItems:
isShowingLanguageChoices
_accessibilityShouldUpdateQuickSpeakContent
length
_accessibilitySystemShouldShowSpeakSpellOut
_accessibilitySystemShouldShowSpeakBubbleCommon
initWithTagSchemes:options:
setString:
enumerateTagsInRange:scheme:options:usingBlock:
_accessibilitySystemShouldShowSpeakBubble
_accessibilityShouldShowSpeakBubble
_accessibilitySystemShouldShowSpeakSentence
_accessibilityShouldShowSpeakSpellOut
_accessibilityShouldShowSpeakLanguageBubble
_accessibilitySystemShouldShowSpeakLanguageBubble
_accessibilitySystemShouldShowPauseBubble
_accessibilityShouldShowPauseBubble
_accessibilityQScanPerformAction:withSender:
_accessibilityQuickSpeakContentIsSpeakable
canPerformAction:withSender:
validateClass:isKindOfClass:
validateClass:conformsToProtocol:
_accessibilitySearchTextRangeFromRange:withString:selectedRange:
_rangeStringMatch:wordText:
_adjustedRange:withText:matchText:initiator:
rangeOfString:
fade
hide
action
hasPrefix:
valueForKey:
setValue:forKey:
buttonPressed:
updateAvailableButtons
setHighlighted:
setPage:
copy
targetForAction:
titleForState:
buttonWithTitle:action:type:inView:
_accessibilityAddSpeakItemToExtras:selector:
mutableCopy
axSafelyAddObject:
safeIvarForKey:
accessibilityLanguage
_dialect
thirdPartyMenuItems
menuController
setThirdPartyMenuItems:
calloutBar
_showingLanguageChoices
_thirdPartyMenuItems
_axContentView
_selectionChanged
_accessibilityRemoveValueForKey:
_accessibilityBoolValueForKey:
_accessibilitySetBoolValue:forKey:
isEmpty
_axWaitForSpeakSelectionContentResults
_accessibilitySetRetainedValue:forKey:
_accessibilityValueForKey:
arrayWithCapacity:
_axWaitForSpeakSelectionRectResultsForGuanularity:atSelectionOffset:wordText:
accessibilityQSSentenceRects
accessibilityQSWordRects
accessibilitySetQSWordRects:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_webTextRectsFromWKTextRects:
accessibilitySetQSSentenceRects:
accessibilitySpeakSelectionSetContent:
_accessibilityDidGetSelectionRects:withGranularity:atOffset:
layer
sublayers
removeObjectAtIndex:
selectionForRange:
selectionsByLine
boundsForPage:
convertRect:fromPage:
string
pages
indexOfFirstCharacterOnPage:
_axConvertRange:toRects:operatingPage:
ax_sentenceFromPosition:inDirection:
_accessibilityQuickSpeakTokenizer
setBalloonView:
@16@0:8
#16@0:8
v24@0:8@16
v24@0:8@?16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@"NSString"16
v16@0:8
@24@0:8@16
v32@0:8@16@24
v40@0:8@16{_NSRange=QQ}24
@32@0:8@16@24
@32@0:8@16q24
@40@0:8@16q24q32
q32@0:8@16@24
q32@0:8@16q24
v32@0:8q16@24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16@32
B32@0:8@16@24
v28@0:8@16B24
v32@0:8{CGPoint=dd}16
@"NSString"24@0:8@"UITextRange"16
v32@0:8@"UITextRange"16@"NSString"24
v40@0:8@"NSString"16{_NSRange=QQ}24
@"UITextRange"32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextPosition"16q24
@"UITextPosition"40@0:8@"UITextPosition"16q24q32
q32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextRange"16q24
@"UITextRange"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16q24
v32@0:8q16@"UITextRange"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextRange"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextPosition"16
@"NSArray"24@0:8@"UITextRange"16
@"UITextPosition"32@0:8{CGPoint=dd}16
@"UITextPosition"40@0:8{CGPoint=dd}16@"UITextRange"32
@"UITextRange"32@0:8{CGPoint=dd}16
@"UITextRange"16@0:8
v24@0:8@"UITextRange"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"UITextPosition"16@0:8
@"<UITextInputDelegate>"16@0:8
v24@0:8@"<UITextInputDelegate>"16
@"<UITextInputTokenizer>"16@0:8
B32@0:8@"UITextRange"16@"NSString"24
@"NSDictionary"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16@"UITextRange"24
v24@0:8@"NSArray"16
@"UIView"16@0:8
v48@0:8@16{_NSRange=QQ}24@40
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
@24@0:8@?16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{_NSRange=QQ}56@0:8{_NSRange=QQ}16@32Q40Q48
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v40@0:8{_NSRange=QQ}16@32
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
v72@0:8@16{_NSRange=QQ}24@40@48@56^{CGRect={CGPoint=dd}{CGSize=dd}}64
@40@0:8@16@24@32
v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64
{CGPoint="x"d"y"d}
@"AXOrator"
@"UITextRange"
@"QSSelectionHighlightView"
@"NSArray"
@"AXDispatchTimer"
v64@0:8{_NSRange=QQ}16@32@40@48^{CGRect={CGPoint=dd}{CGSize=dd}}56
B32@0:8:16@24
@48@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24@32@40
@48@0:8@16@24@32@40
v32@0:8@16:24
@"AXDialectMap"
@40@0:8q16q24@32
v40@0:8q16q24@32
v40@0:8@16q24q32
v48@0:8{_NSRange=QQ}16@32@40
MbP?
%{public}@
