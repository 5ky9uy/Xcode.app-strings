v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
generator
T@"LPLinkHTMLGenerator",R,W,N,V_generator
element
T@"DOMElement",R,N,V_element
themePath
T@"NSString",R,N,V_themePath
rgba(%d, %d, %d, %g)
#%02X%02X%02X
<theme-path>
name
T@"NSString",R,C,N,V_name
important
TB,R,N,GisImportant,V_important
var(--%@)
%@ !important
v32@?0@"NSString"8@16^B24
v24@?0@"NSString"8@"NSString"16
lp-rich-link-
    
@media (prefers-dark-interface) {
style
--%@:%@;
v32@?0@"NSString"8@"NSString"16^B24
localVariables
T@"NSMutableDictionary",R,N,V_localVariables
pendingVariables
T@"NSMutableSet",R,N,V_pendingVariables
theme
T@"LPTheme",R,N,V_theme
useCSSVariables
TB,R,N
useInlineStyles
TB,N,V_useInlineStyles
useVariablesWhenUsingInlineStyles
TB,N,V_useVariablesWhenUsingInlineStyles
includeClassNamesWhenUsingInlineStyles
TB,N,V_includeClassNamesWhenUsingInlineStyles
generateEmailCompatibleMarkup
TB,N,V_generateEmailCompatibleMarkup
playable
tracks
duration
completionHandler
T@?,C,N,V_completionHandler
Website: %@ (%@)
Website: %@
metadata
T@"LPLinkMetadata",R,C,N,V_metadata
T@"NSURL",R,C,N,V_URL
previewSummary
T@"NSString",R,C,N
previewImage
T@"LPImage",R,&,N
subscription
anonymousDownload
type
TQ,R,N,V_type
storeIdentifier
T@"NSString",C,N,V_storeIdentifier
storefrontIdentifier
T@"NSString",C,N,V_storefrontIdentifier
previewURL
T@"NSURL",C,N,V_previewURL
offers
T@"NSArray",C,N,V_offers
isAvailableForAnonymousDownload
table
bgcolor
cellpadding
cellspacing
leftIcon
width
textStack
rightIcon
300px
table-layout
fixed
lp-rich-link-captionBar
enabled
timeRange
@"AVPlayerItem"8@?0
status
v16@?0@"AVPlayerItem"8
timeControlStatus
readyForDisplay
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v24@?0@"LPVideo"8@"<_LPResolvable>"16
accessibilityText
T@"NSString",C,N,V_accessibilityText
Trying to create an LPImage with nil data.
Trying to create an LPImage with nil MIME type.
Trying to create an LPImage with nil file URL.
Trying to create an LPImage with URL which is not a file URL.
Trying to create an LPImage from a nil LPPlatformImage.
v16@?0@"UIImage"8
@%lux
v16@?0@?<v@?@"UIImage">8
image/png
supportsSecureCoding
TB,R
platformImage
T@"UIImage",&,N,V_platformImage
_encodedSize
TQ,R,N
_pixelSize
T{CGSize=dd},R,N
_placeholderIcon
TB,N,G_isPlaceholderIcon,V_placeholderIcon
_remoteURLsForEmailCompatibleOutput
T@"NSArray",&,N,V_remoteURLsForEmailCompatibleOutput
fileURL
T@"NSURL",&,N,V_fileURL
data
T@"NSData",R,C,N
MIMEType
properties
T@"LPImageProperties",R,C,N
scale
TQ,R,N,V_scale
T@"NSURL",R,&,N,V_URL
com.apple.LinkPresentation.AsyncImageLoadingRequest
com.apple.LinkPresentation.AsyncImageLoading
local-%@-text-alignment
overflow
hidden
color
<theme-path>-color
font-size
11pt
font-weight
padding
<theme-path>-padding
100%
box-sizing
border-box
white-space
pre-wrap
display
-webkit-box
-webkit-line-clamp
<theme-path>-maximumLines
-webkit-box-orient
vertical
text-align
local-<theme-path>-text-alignment
lp-rich-link-quotedText
%@-%@
%@-%@-%@
@"NSString"24@?0@"NSString"8@"NSString"16
%@ %dx
v32@?0@"LPImageRemoteURLRepresentation"8Q16^B24
srcset
size-width
local
size-height
inline-block
local-<theme-path>-size-width
height
local-<theme-path>-size-height
pointer-events
none !important
lp-rich-link-captionBar-leftIcon
lp-rich-link-captionBar-rightIcon
v24@?0@"LPLinkMetadata"8@"NSError"16
data:%@;base64,%@
lp-rich-link-base-styles
head
captionBar
mediaTopCaptionBar
mediaBottomCaptionBar
tapToLoad
mediaVideo
mediaImage
mediaImageContainer
quotedText
%@%@%@
parentDocument
T@"DOMDocument",R,N,V_parentDocument
cssResolver
T@"LPCSSResolver",R,N,V_cssResolver
Tq,R,N,V_style
isPreliminary
TB,R,N,V_isPreliminary
delegateRespondsToURLForResource
useFlexibleWidth
hasTallMedia
backgroundColor
T@"UIColor",R,N,V_backgroundColor
rootWidth
T@"LPPointUnit",R,N
minimumRootHeight
hasPendingMetadataProvider
_useVariablesWhenUsingInlineStyles
TB,N,S_setUseVariablesWhenUsingInlineStyles:,V_useVariablesWhenUsingInlineStyles
_includeClassNamesWhenUsingInlineStyles
TB,N,S_setIncludeClassNamesWhenUsingInlineStyles:,V_includeClassNamesWhenUsingInlineStyles
_allowsTapToLoad
TB,N,S_setAllowsTapToLoad:,V_allowsTapToLoad
_canTapToLoad
delegate
T@"<LPLinkHTMLGeneratorDelegate>",W,N,V_delegate
documentFragment
T@"DOMDocumentFragment",R,&,N
applyCornerRadiusToLink
TB,N,V_applyCornerRadiusToLink
T@"LPLinkMetadata",C,N,V_metadata
LPMetadataURL
LPMetadataTitle
LPMetadataDescription
LPMetadataSelectedText
LPMetadataSiteName
LPMetadataItemType
LPMetadataRelatedURL
LPMetadataCreator
LPMetadataCreatorFacebookProfile
LPMetadataCreatorTwitterUsername
LPMetadataAppleContentID
LPMetadataAppleDescription
LPMetadataIcons
LPMetadataImages
LPMetadataVideos
LPMetadataStreamingVideos
LPMetadataAudios
version
originalURL
title
summary
selection
siteName
itemType
relatedURL
creator
creatorFacebookProfile
creatorTwitterUsername
appleContentID
appleSummary
icon
iconMetadata
image
imageMetadata
video
videoMetadata
icons
images
videos
streamingVideos
audios
specialization2
specialization
TI,R,N,V_version
T@"NSURL",C,N,V_originalURL
T@"NSURL",C,N,V_URL
T@"NSString",C,N,V_title
T@"NSString",C,N,V_summary
selectedText
T@"NSString",C,N,V_selectedText
T@"NSString",C,N,V_siteName
T@"NSString",C,N,V_itemType
T@"NSURL",C,N,V_relatedURL
T@"NSString",C,N,V_creator
T@"NSString",C,N,V_creatorFacebookProfile
T@"NSString",C,N,V_creatorTwitterUsername
T@"NSString",C,N,V_appleContentID
T@"NSString",C,N,V_appleSummary
T@"LPImage",&,N,V_icon
T@"LPIconMetadata",&,N,V_iconMetadata
T@"LPImage",&,N,V_image
T@"LPImageMetadata",&,N,V_imageMetadata
T@"LPVideo",&,N,V_video
T@"LPVideoMetadata",&,N,V_videoMetadata
T@"NSArray",C,N,V_icons
T@"NSArray",C,N,V_images
T@"NSArray",C,N,V_videos
T@"NSArray",C,N,V_streamingVideos
T@"NSArray",C,N,V_audios
T@"LPSpecializationMetadata",C,N,V_specialization
LPMetadataImageURL
LPMetadataImageType
LPMetadataImageAccessibilityText
LPMetadataImageWidth
LPMetadataImageHeight
size
T@"NSString",C,N,V_type
T{CGSize=dd},N,V_size
colors
T@"NSDictionary",C,N,V_colors
LPMetadataVideoURL
LPMetadataVideoType
LPMetadataVideoWidth
LPMetadataVideoHeight
LPMetadataAudioURL
LPMetadataAudioType
storeFrontIdentifier
artist
album
lyrics
artwork
T@"NSString",C,N,V_storeFrontIdentifier
T@"NSString",C,N,V_name
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
T@"NSString",C,N,V_lyrics
T@"LPImage",&,N,V_artwork
artworkMetadata
T@"LPArtworkMetadata",C,N,V_artworkMetadata
genre
T@"NSString",C,N,V_genre
curator
T@"NSString",C,N,V_curator
platform
screenshots
isMessagesOnlyApp
messagesAppIcon
T@"NSString",C,N,V_platform
T@"NSArray",&,N,V_screenshots
TB,N,V_isMessagesOnlyApp
T@"LPImage",&,N,V_messagesAppIcon
author
T@"NSString",C,N,V_author
narrator
T@"NSString",C,N,V_narrator
episodeName
podcastName
releaseDate
T@"NSString",C,N,V_episodeName
T@"NSString",C,N,V_podcastName
T@"NSDate",C,N,V_releaseDate
seasonName
T@"NSString",C,N,V_seasonName
brandingText
branding
T@"LPImage",&,N,V_branding
T@"NSString",&,N,V_brandingText
application
applicationBundleIdenfier
T@"NSString",C,N,V_applicationBundleIdenfier
T@"NSString",C,N,V_application
game
numberOfPlayers
minimumNumberOfPlayers
maximumNumberOfPlayers
T@"NSString",C,N,V_game
TI,N,V_numberOfPlayers
TI,N,V_minimumNumberOfPlayers
TI,N,V_maximumNumberOfPlayers
subtitle
action
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_action
v16@?0@"LPImage"8
v32@?0@"NSData"8@"NSString"16@"NSError"24
T@"LPLinkMetadata",&,N,V_metadata
T@"<LPLinkMetadataStatusTransformerDelegate>",W,N,V_delegate
wantsStatusItem
TB,R,N,V_wantsStatusItem
statusText
T@"NSAttributedString",R,C,N
actionURL
T@"NSURL",R,C,N
canonicalURL
v24@?0@"NSData"8@"NSError"16
Pages
Notes
Numbers
Keynote
iCloud Drive
com.apple.mobilenotes
com.apple.Pages
com.apple.Numbers
com.apple.Keynote
com.apple.CloudKit.ShareBear
Shared from %@
Shared using iCloud Sharing
Link: Document shared from %@
Link: Document shared using iCloud Sharing
flex
inline-flex
local-%@-display
%@-left
%@-right
aboveTopCaption
topCaption
bottomCaption
belowBottomCaption
v32@?0@"LPCaptionRowPresentationProperties"8Q16^B24
%gpx
local-%@-paddingTop
local-%@-paddingBottom
vertical-align
flex-direction
column
flex-grow
justify-content
center
max-width
<theme-path>-captionTextPadding
padding-bottom
local-<theme-path>-paddingBottom
padding-top
local-<theme-path>-paddingTop
lp-rich-link-captionBar-textStack
local-<theme-path>-display
lp-rich-link-mediaTopCaptionBar-textStack
lp-rich-link-mediaBottomCaptionBar-textStack
nofollow
href
disablePlayback
TB,N,V_disablePlayback
disablePlaybackControls
TB,N,V_disablePlaybackControls
disableAutoPlay
TB,N,V_disableAutoPlay
opacity
fade
fadeIn
active
TB,N,GisActive
muted
TB,R,N,GisMuted
playing
TB,R,N,GisPlaying
fullScreen
TB,R,N,GisFullScreen
usesSharedAudioSession
shouldUnmuteWhenUserAdjustsVolume
lastInteractionTimestamp
unobscuredAreaFraction
Td,R,N
configuration
T@"LPVideoViewConfiguration",R,C,N
shouldAutoPlay
shouldShowMuteButton
TB,R,N,V_usesSharedAudioSession
TB,N,GisMuted
TB,N,GisPlaying
waitingForPlayback
TB,N,GisWaitingForPlayback,V_waitingForPlayback
TB,N,GisFullScreen,V_fullScreen
hasEverPlayed
TB,N,V_hasEverPlayed
volume
Td,N,V_volume
T@"LPVideo",R,N,V_video
playbackView
T@"UIView",R,N,V_playbackView
loggingID
TI,R,N,V_loggingID
text
T@"NSString",C,N,V_text
attributedText
T@"NSAttributedString",C,N,V_attributedText
T@"UIColor",&,N,V_color
textScale
Td,N,V_textScale
maximumNumberOfLines
T@"NSNumber",&,N,V_maximumNumberOfLines
hasAnyContent
leading
T@"LPCaptionPresentationProperties",R,&,N,V_leading
trailing
T@"LPCaptionPresentationProperties",R,&,N,V_trailing
leadingIcon
T@"LPImage",&,N,V_leadingIcon
leadingIconMaskColor
T@"UIColor",&,N,V_leadingIconMaskColor
trailingIcon
T@"LPImage",&,N,V_trailingIcon
trailingIconMaskColor
T@"UIColor",&,N,V_trailingIconMaskColor
belowLeadingIcon
T@"LPImage",&,N,V_belowLeadingIcon
belowLeadingIconMaskColor
T@"UIColor",&,N,V_belowLeadingIconMaskColor
leadingAccessoryType
Tq,N,V_leadingAccessoryType
trailingAccessoryType
Tq,N,V_trailingAccessoryType
aboveTop
T@"LPCaptionRowPresentationProperties",R,&,N,V_aboveTop
T@"LPCaptionRowPresentationProperties",R,&,N,V_top
bottom
T@"LPCaptionRowPresentationProperties",R,&,N,V_bottom
belowBottom
T@"LPCaptionRowPresentationProperties",R,&,N,V_belowBottom
minimumHeight
T@"NSNumber",&,N,V_minimumHeight
@"LPImage"8@?0
com.apple.LinkPresentation.ImageFiltering
Invitation to play %@
%d-%d Players
%d Player(s)
hasFetchedSubresources
TB,N,V_hasFetchedSubresources
lp-rich-link-glyph
url(%@)
local-backgroundImage
local-backgroundImage-darkInterface
local-width
local-height
local-bottom
local-opacity
local-containerWidth
local-padding-left
lp-rich-link-glyph-container
background-size
contain
background-repeat
no-repeat
left
position
absolute
background-image
baseline
relative
normal
local-%@-justify-content
local-%@-minimumWidth
belowLeftIcon
belowRightIcon
leftAccessory
rightAccessory
align-self
stretch
min-width
local-<theme-path>-minimumWidth
local-<theme-path>-justify-content
lp-rich-link-mediaTopCaptionBar
right
lp-rich-link-mediaBottomCaptionBar
<link>
</link>
Subscribe to <link>Apple Music</link>
Buy Song on <link>iTunes</link>
music
itms
Artist: %@
Radio: %@
App Store: %@
Podcasts
Podcast: %@
TV Season: %@
Movie: %@
LPShowDebugIndicators
LPDisableLegacyStoreLookups
showDebugIndicators
disableLegacyStoreLookups
subsampleImagesToScreenSize
space-between
lp-rich-link-%@-textStack-%@
itunes.apple.com
metadateClass
entries
entryName
entryType
entryMetadataName
entryExtractor
entryIsOptional
additionalProperties
song
artistName
collectionName
@16@?0@8
podcastEpisode
podcast
children
@16@?0@"NSDictionary"8
musicVideo
@"LPiTunesMediaAsset"16@?0@"NSDictionary"8
genreNames
@"NSString"16@?0@"NSArray"8
iTunesBrand
radioStation
editorialArtwork
subscriptionCover
subscriptionHero
playlist
curatorName
iosSoftware
hasMessagesExtension
isHiddenFromSpringboard
ovalArtwork
screenshotsByType
@"NSArray"16@?0@"NSDictionary"8
iphone6+
iphone6
iphone5
iphone
desktopApp
epubBook
book
tvEpisode
tvSeason
movie
kind
@8@?0
v32@?0@8@16^B24
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v16@?0@"LPiTunesMediaAsset"8
v24@?0@8@"<_LPResolvable>"16
v32@?0@"NSDictionary"8@"NSString"16@"NSError"24
v24@?0@"NSString"8@"NSError"16
v24@?0Q8@"NSError"16
capabilities
bgColor
textColor1
textColor2
textColor3
textColor4
v32@?0@"NSString"8q16@"NSString"24
Tq,R,N
iconBackgroundImage
iconBackgroundImage-darkInterface
24px
verticalAlignment
background-position
flex-shrink
local-<theme-path>-verticalAlignment
margin
<theme-path>-margin
local-<theme-path>-iconBackgroundImage
lp-rich-link-mediaTopCaptionBar-leftIcon
lp-rich-link-mediaTopCaptionBar-rightIcon
lp-rich-link-mediaBottomCaptionBar-leftIcon
lp-rich-link-mediaBottomCaptionBar-rightIcon
omni
availability
meta
v24@?0@"SSLookupResponse"8@"NSError"16
storefront
data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='%g' height='%g'></svg>
audio
assets
flavor
plusAudio
standardAudio
preview
isEVOD
T@"NSURL",R,C,N,V_previewURL
T@"NSString",R,C,N,V_type
hasAudio
TB,R,N,V_hasAudio
hasVideo
TB,R,N,V_hasVideo
TB,R,N,V_isEVOD
ExplicitVolumeChange
backgroundImage
backgroundImage-darkInterface
local-<theme-path>-backgroundImage
lp-rich-link-captionBar-leftAccessory
lp-rich-link-captionBar-rightAccessory
lp-rich-link-mediaTopCaptionBar-leftAccessory
lp-rich-link-mediaTopCaptionBar-rightAccessory
flex-start
lp-rich-link-mediaBottomCaptionBar-leftAccessory
lp-rich-link-mediaBottomCaptionBar-rightAccessory
Trying to update a text stack after it has been laid out.
T@"NSDictionary",R,C,N,V_colors
string
T@"NSString",R,C,N,V_string
customResolverClass
T#,R,&,N,V_customResolverClass
T@"LPiTunesMediaAsset",&,N,V_artwork
T@"NSArray",&,N,V_offers
T@"NSNumber",C,N,V_isHiddenFromSpringboard
T@"NSNumber",C,N,V_hasMessagesExtension
T@"LPiTunesMediaAsset",&,N,V_icon
T@"LPiTunesMediaAsset",&,N,V_messagesAppIcon
yyyy-MM-dd
T@"NSString",C,N,V_releaseDate
T@"UIImage",&,N,V_image
animationOrigin
Tq,N,V_animationOrigin
imageView
T@"UIView",R,&,N
text/html
image/x-icon
image/jpg
video/
application/
video/webm
video/x-webm
video/x-flv
video/ogg
application/ogg
application/vnd.apple.mpegurl
application/x-mpegurl
video/3gpp
video/3gpp2
video/mp4
video/mpeg
video/mpeg2
video/mpg
video/quicktime
video/x-m4v
video/x-mpeg
video/x-mpg
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.4 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.4 facebookexternalhit/1.1 Facebot Twitterbot/1.0
com.apple.LinkPresentation.MetadataProvider
LinkMetadataFetcher.wkbundle
Trying to start fetching on an LPMetadataProvider that has already started. LPMetadataProvider is a one-shot object.
error
v24@?0@8@"NSError"16
cancelled
TB,V_cancelled
useSpecializedProviders
TB,N,V_useSpecializedProviders
fetchSubresources
TB,N,V_fetchSubresources
timeout
Td,N,V_timeout
fullScreenController
T@"LPFullScreenVideoViewController",W,N,V_fullScreenController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
cornerRadius
cornerAnimation
v12@?0B8
PHSwipeDownTracker
Unable to find class %s
/System/Library/Frameworks/PhotosUI.framework/PhotosUI
T@"<LPMetadataProviderSpecializationDelegate>",W,N,V_delegate
T@"NSURL",R,N,V_URL
T@"LPCaptionBarPresentationProperties",&,N,V_captionBar
T@"LPCaptionBarPresentationProperties",&,N,V_mediaTopCaptionBar
T@"LPCaptionBarPresentationProperties",&,N,V_mediaBottomCaptionBar
T@"NSString",C,N,V_topCaption
T@"NSString",C,N,V_bottomCaption
trailingTopCaption
T@"NSString",C,N,V_trailingTopCaption
trailingBottomCaption
T@"NSString",C,N,V_trailingBottomCaption
mediaTopCaption
T@"NSString",C,N,V_mediaTopCaption
mediaBottomCaption
T@"NSString",C,N,V_mediaBottomCaption
T@"UIColor",&,N,V_backgroundColor
auto
lp-rich-link-mediaImageContainer
local-link-cornerRadius
local-link-backgroundColor
local-link-width
local-link-minimumHeight
lp-rich-link-flexible
lp-rich-link-fixed-width
role
button
click
align-items
background-color
font-family
system-ui
text-decoration
none
word-break
min-height
-webkit-user-select
border-radius
auto !important
143441
143455
143444
143442
143456
143457
143443
143449
143460
143458
143462
143450
143459
143489
143445
143491
143454
143452
143469
143508
143501
143503
143468
143505
143558
143447
143596
143602
143605
143549
143496
143531
143568
143504
143532
143589
143542
143563
143485
143522
143488
143587
143595
143471
143567
143556
143474
143483
143544
143525
143551
143477
143562
143519
143537
143570
143518
143448
143446
143593
143581
143451
143486
143517
143521
143480
143512
143535
143553
143472
143453
143559
143586
143529
143603
143580
143497
143510
143594
143487
143572
143591
143600
143478
143550
143548
143530
143481
143461
143579
143541
143539
143554
143597
143598
143578
143515
143506
143575
143601
143552
143585
143476
143545
143571
143526
143479
143502
143564
143464
143546
143574
143582
143493
143588
143507
143547
143555
143498
143524
143557
143494
143465
143584
143499
143590
143520
143484
143573
143538
143492
143583
143495
143561
143490
143513
143463
143566
143604
143540
143473
143536
143467
143470
143577
143534
143523
143475
143482
143509
143560
143533
143511
143599
143569
143516
143576
143466
143543
143528
143514
143527
143592
143565
143500
_overlappingControlsColor
T@"UIColor",&,N,S_setOverlappingControlsColor:,V__overlappingControlsColor
TB,N,V_hasAudio
overlappingControlsColor
link-presentation-video://video/%@
com.apple.LinkPresentation.MediaFetching
v16@?0@"NSNotification"8
_intrinsicSize
_asset
T@"AVAsset",R,N
streamingURL
T@"NSURL",R,&,N,V_streamingURL
youTubeURL
T@"NSURL",R,&,N,V_youTubeURL
T@"NSString",R,C,N,V_MIMEType
T@"LPVideoProperties",R,C,N
T@"LPTextViewStyle",R,&,N
T{CGSize=dd},R,N,V_size
lp-rich-link-video-container
(function () {    var bounds = this.getBoundingClientRect();    return (bounds.top <= window.innerHeight) && (0 <= bounds.bottom);})
iframe
YouTubeContainer
html
data-src
data-videoURL
loop
preload
loadstart
scroll
local-posterFrame-backgroundImage
brightness(%g)
local-posterFrame-filter
lp-rich-link-media-image-poster
lp-rich-link-media-image-poster-disabled
lp-rich-link-media-video-overlay
play
pause
lp-rich-link-media-video-disabled
lp-rich-link-media-video
lp-rich-link-play-button-container
local-playButtonImage
lp-rich-link-play-button
lp-rich-link-play-button-disabled
lp-rich-link-play-button-after
lp-rich-link-mute-button-container-disabled
lp-rich-link-mute-button-container
lp-rich-link-mute-button-container:hover
local-muteButtonImage
local-unmuteButtonImage
local-muteButtonMaskColor
lp-rich-link-mute-button-muted
lp-rich-link-mute-button-unmuted
visibilitychange
videoId
startsPlayingAutomatically
playerVars
showinfo
controls
iv_load_policy
start
playerState()
startPlaying();
pausePlaying();
call
data-parameters
max-height
500px
border
mediaBackgroundColor
filter
mediaVideo-playButton-backgroundSize-width
mediaVideo-playButton-backgroundSize-height
-webkit-clip-path
circle(50%)
-webkit-transform
translateZ(0)
-webkit-backdrop-filter
blur(30px)
rgba(255, 255, 255, 0.3)
mediaVideo-playButton-size-width
mediaVideo-playButton-size-height
cover
calc(50% - 15px)
mediaVideo-muteButton-size-width
mediaVideo-muteButton-size-height
mediaVideo-muteButtonPadding-trailing
mediaVideo-muteButtonPadding-top
mediaVideo-muteButtonOpacity
mediaVideo-muteButtonHighlightedOpacity
-webkit-mask-image
-webkit-mask-size
100% 100%
lp-rich-link
-apple-system, Helvetica, Arial, sans-serif
-moz-user-select
-ms-user-select
user-select
value
Td,R,N,V_value
T@"LPPointUnit",R,&,N,V_width
T@"LPPointUnit",R,&,N,V_height
asSize
%gpx %gpx %gpx %gpx
T@"LPPointUnit",&,N,V_top
T@"LPPointUnit",&,N,V_leading
T@"LPPointUnit",&,N,V_bottom
T@"LPPointUnit",&,N,V_trailing
font
T@"UIFont",&,N,V_font
maximumLines
TI,N,V_maximumLines
textAlignment
Tq,N,V_textAlignment
firstLineLeading
T@"LPPointUnit",&,N,V_firstLineLeading
leadingGlyph
T@"LPGlyphStyle",&,N,V_leadingGlyph
T@"LPPadding",R,&,N,V_padding
T@"LPTextViewStyle",R,N,V_leading
T@"LPTextViewStyle",R,N,V_trailing
lastLineDescent
T@"LPPointUnit",&,N,V_lastLineDescent
T@"LPTextRowStyle",R,N,V_aboveTopCaption
T@"LPTextRowStyle",R,N,V_topCaption
T@"LPTextRowStyle",R,N,V_bottomCaption
T@"LPTextRowStyle",R,N,V_belowBottomCaption
captionTextPadding
T@"LPPadding",R,&,N,V_captionTextPadding
emailCompatibleMargin
T@"LPPadding",R,&,N,V_emailCompatibleMargin
T@"LPPadding",R,&,N,V_margin
T@"LPSize",&,N,V_size
Tq,N,V_filter
Tq,N,V_verticalAlignment
backgroundInset
T@"LPPointUnit",&,N,V_backgroundInset
foregroundOpacity
Td,N,V_foregroundOpacity
T@"LPPointUnit",&,N,V_cornerRadius
darkeningAmount
Td,N,V_darkeningAmount
maskColor
T@"UIColor",&,N,V_maskColor
Td,N,V_opacity
imageStyle
T@"LPImageViewStyle",R,N,V_imageStyle
baselineOffset
T@"LPPointUnit",&,N,V_baselineOffset
backgroundSize
T@"LPSize",&,N,V_backgroundSize
disabledOpacity
Td,N,V_disabledOpacity
playButton
T@"LPVideoPlayButtonStyle",R,N,V_playButton
muteButton
T@"LPImageViewStyle",R,N,V_muteButton
muteButtonPadding
T@"LPPadding",R,&,N,V_muteButtonPadding
muteButtonOpacity
Td,N,V_muteButtonOpacity
muteButtonHighlightedOpacity
Td,N,V_muteButtonHighlightedOpacity
pulsingLoadIndicatorColor
T@"UIColor",&,N,V_pulsingLoadIndicatorColor
pulsingLoadIndicatorMaximumOpacity
Td,N,V_pulsingLoadIndicatorMaximumOpacity
pulsingLoadIndicatorDuration
Td,N,V_pulsingLoadIndicatorDuration
pulsingLoadIndicatorTimingFunction
T@"CAMediaTimingFunction",&,N,V_pulsingLoadIndicatorTimingFunction
fullScreenBackgroundColor
T@"UIColor",&,N,V_fullScreenBackgroundColor
T@"LPImageViewStyle",R,N,V_leadingIcon
T@"LPImageViewStyle",R,N,V_trailingIcon
T@"LPImageViewStyle",R,N,V_belowLeadingIcon
leadingAccessory
T@"LPCaptionBarAccessoryStyle",R,N,V_leadingAccessory
trailingAccessory
T@"LPCaptionBarAccessoryStyle",R,N,V_trailingAccessory
T@"LPVerticalTextStackViewStyle",R,N,V_textStack
minimumWidth
T@"LPPointUnit",&,N,V_minimumWidth
placeholderIcon
T@"LPImageViewStyle",R,N,V_placeholderIcon
T@"LPMusicPlayButtonStyle",R,N,V_playButton
playButtonPadding
T@"LPPadding",R,&,N,V_playButtonPadding
LPTapToLoadHighlightColor
tapHighlightColor
T@"UIColor",&,N,V_tapHighlightColor
caption
T@"LPTextViewStyle",R,N,V_caption
T@"LPPointUnit",&,N,V_width
T@"LPPointUnit",&,N,V_height
Trying to add a LPThemeClient that is already a client.
v24@?0@"NSString"8^B16
highlightColor
T@"UIColor",&,N,V_highlightColor
T@"LPCaptionBarStyle",R,N,V_captionBar
T@"LPTextViewStyle",R,N,V_quotedText
T@"LPImageViewStyle",R,N,V_mediaImage
T@"LPVideoViewStyle",R,N,V_mediaVideo
T@"UIColor",&,N,V_mediaBackgroundColor
T@"LPCaptionBarStyle",R,N,V_mediaTopCaptionBar
T@"LPCaptionBarStyle",R,N,V_mediaBottomCaptionBar
T@"LPTapToLoadViewStyle",R,N,V_tapToLoad
maximumWidth
T@"LPPointUnit",&,N,V_maximumWidth
maximumIntrinsicHeight
T@"LPPointUnit",&,N,V_maximumIntrinsicHeight
widthFractionForTallMedia
Td,N,V_widthFractionForTallMedia
flex-end
LPLinkMediaBackgroundColor
%ld-%d-%ld
LPLinkBackgroundColor
com.apple.podcasts
v32@?0{?=qiIq}8
podcasts://playPodcast?storeTrackId=%@
podcasts://playPodcast?storeCollectionId=%@
v12@?0I8
1000
MPUNowPlayingController
/System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI
www.
search
webhp
.google.ae
.google.am
.google.as
.google.at
.google.az
.google.ba
.google.be
.google.bg
.google.bi
.google.bs
.google.ca
.google.cd
.google.cg
.google.ch
.google.ci
.google.cl
.google.cn
.google.co.bw
.google.co.ck
.google.co.cr
.google.co.id
.google.co.il
.google.co.im
.google.co.in
.google.co.je
.google.co.jp
.google.co.ke
.google.co.kr
.google.co.ls
.google.co.ma
.google.co.nz
.google.co.th
.google.co.ug
.google.co.uk
.google.co.uz
.google.co.ve
.google.co.vi
.google.co.za
.google.co.zm
.google.com
.google.com.af
.google.com.ag
.google.com.ar
.google.com.au
.google.com.bd
.google.com.bh
.google.com.bo
.google.com.br
.google.com.bz
.google.com.co
.google.com.cu
.google.com.do
.google.com.ec
.google.com.eg
.google.com.et
.google.com.fj
.google.com.gi
.google.com.gt
.google.com.hk
.google.com.jm
.google.com.ly
.google.com.mt
.google.com.mx
.google.com.my
.google.com.na
.google.com.nf
.google.com.ni
.google.com.np
.google.com.om
.google.com.pa
.google.com.pe
.google.com.ph
.google.com.pk
.google.com.pr
.google.com.py
.google.com.qa
.google.com.sa
.google.com.sb
.google.com.sg
.google.com.sv
.google.com.tj
.google.com.tr
.google.com.tw
.google.com.ua
.google.com.uy
.google.com.vc
.google.com.vn
.google.cz
.google.de
.google.dj
.google.dk
.google.dm
.google.ee
.google.es
.google.fi
.google.fm
.google.fr
.google.ge
.google.gg
.google.gl
.google.gm
.google.gr
.google.hn
.google.hr
.google.ht
.google.hu
.google.ie
.google.is
.google.it
.google.jo
.google.kg
.google.kz
.google.li
.google.lk
.google.lt
.google.lu
.google.lv
.google.md
.google.mn
.google.ms
.google.mu
.google.mw
.google.nl
.google.no
.google.nr
.google.nu
.google.off.ai
.google.pl
.google.pn
.google.pt
.google.ro
.google.ru
.google.rw
.google.sc
.google.se
.google.sh
.google.si
.google.sk
.google.sm
.google.sn
.google.tm
.google.to
.google.tp
.google.tt
.google.vg
.google.vu
.google.ws
.yahoo.com
.yahoo.co.jp
search;
.yandex.ru
.ya.ru
.yandex.by
.yandex.kz
.yandex.com.tr
.yandex.ua
.yandex.com
yandsearch
.bing.com
.discoverbing.com
.duckduckgo.com
lite
.baidu.com
word
T@"LPCaptionBarView",&,N,V_captionBar
media
T@"LPComponentView",&,N,V_media
T@"LPCaptionBarView",&,N,V_mediaTopCaptionBar
T@"LPCaptionBarView",&,N,V_mediaBottomCaptionBar
quote
T@"LPTextView",&,N,V_quote
associatedView
widthSpring
heightSpring
bounds.size.width
maskWidthSpring
transform.translation.x
maskViewSpring
bounds.size.height
maskHeightSpring
transform.translation.y
verticalSlide
transform.translation
transformSpring
previousCaptionBarPositionMaintaining
captionBarAdjustedTransformSpring
transform.scale.x
mediaScaleSpring
transform.scale.y
mediaScaleYSpring
CKBalloonView
backgroundColorTransition
_UIPreviewGestureRecognizer
_disableAnimations
TB,N,S_setDisableAnimations:,V_disableAnimations
_animationOrigin
Tq,N,S_setAnimationOrigin:,V_animationOrigin
_disableTapGesture
TB,N,S_setDisableTapGesture:,V_disableTapGesture
_disableHighlightGesture
TB,N,S_setDisableHighlightGesture:,V_disableHighlightGesture
_disablePlayback
TB,N,S_setDisablePlayback:,V_disablePlayback
_disablePlaybackControls
TB,N,S_setDisablePlaybackControls:,V_disablePlaybackControls
_disableAutoPlay
TB,N,S_setDisableAutoPlay:,V_disableAutoPlay
_usesDeferredLayout
TB,N,S_setUsesDeferredLayout:,V_usesDeferredLayout
_forceFlexibleWidth
TB,N,S_setForceFlexibleWidth:,V_forceFlexibleWidth
_applyCornerRadius
TB,N,S_setApplyCornerRadius:,V_applyCornerRadius
_style
T@"<LPLinkViewDelegate>",W,N,V_delegate
contentInset
T{UIEdgeInsets=dddd},N,V_contentInset
local-%@-color
local-%@-font-size
text-decoration: none
local-<theme-path>-color
local-<theme-path>-font-size
<theme-path>-font-_lp_CSSFontWeight
nowrap
text-overflow
ellipsis
lp-rich-link-captionBar-textStack-%@-%@
identifier
T@"NSString",R,C,N,V_identifier
storefrontCountryCode
T@"NSString",R,C,N,V_storefrontCountryCode
LPErrorDomain
LPYouTubePlayerErrorDomain
playerContainer
startPlaying()
pausePlaying()
seekTo(%f)
enterFullScreen()
exitFullScreen()
mute()
unMute()
startsPlayingMuted
window.parameters = %@;
https://www.youtube.com/
message
onReady
onStateChange
onError
onPresentationModeChange
isFullScreen
T@"<LPYouTubePlayerDelegate>",W,N,V_delegate
TB,N,V_startsPlayingAutomatically
showsControls
TB,N,V_showsControls
startTime
Td,N,V_startTime
endTime
Td,N,V_endTime
TB,N,GisMuted,V_muted
%@Item-%@
%@-%@Item-%@
lp-rich-link-%@Item
local-<theme-path>-margin
lp-rich-link-captionBar-leftIconItem
lp-rich-link-captionBar-rightIconItem
lp-rich-link-captionBar-textStackItem
 on Twitter
LPTweetBackgroundColor
LPWeiboBackgroundColor
complete
TB,N,GisComplete,V_complete
allowsTapToLoad
TB,N,V_allowsTapToLoad
forceMiniStyle
TB,N,V_forceMiniStyle
photos
com.apple.cloudkit
notes
pages
numbers
keynote
iclouddrive
v24@?0@"NSArray"8@"NSError"16
v24@?0@"CKShareMetadata"8@"NSError"16
bumper-service-url
marketingText
originatingAsset
T@"LPiTunesMediaAsset",&,N
T@"LPiTunesMediaAsset",&,N,V_originatingAsset
com.apple.LinkPresentation.metadataFetches
com.apple.LinkPresentation.metadataFetches.successful
com.apple.LinkPresentation.metadataFetches.failed
com.apple.LinkPresentation.metadataFetches.failed.timedOut
com.apple.LinkPresentation.metadataFetches.iTunesStore
com.apple.LinkPresentation.metadataFetches.iTunesStore.successful
com.apple.LinkPresentation.metadataFetches.iTunesStore.failed
com.apple.LinkPresentation.music.plays
com.apple.LinkPresentation.music.plays.successful
com.apple.LinkPresentation.video.plays
com.apple.LinkPresentation.video.plays.successful
com.apple.LinkPresentation.video.plays.failed
com.apple.LinkPresentation.video.plays.failed.timedOut
com.apple.LinkPresentation.video.plays.retries
com.apple.LinkPresentation.video.plays.automatic
com.apple.LinkPresentation.video.plays.YouTube
com.apple.LinkPresentation.video.plays.YouTube.successful
com.apple.LinkPresentation.video.plays.YouTube.failed
com.apple.LinkPresentation.metadataFetches.duration
com.apple.LinkPresentation.music.playbackDelay
com.apple.LinkPresentation.video.playbackDelay
com.apple.LinkPresentation.video.automaticPlaybackDelay
videoID
T@"NSString",C,N,V_videoID
twitter.com
mobile.twitter.com
weibo.com
pbs.twimg.com
profile_images
github.com
m.reddit.com
reddit.com
youtube.com
www.youtube.com
watch
embed
m.youtube.com
youtu.be
tv.apple.com
/watch
i.imgur.com
imgur.com
Apple TV App
Apple TV App: %@
lp-rich-link-tap-to-load
lp-rich-link-tap-to-load:active .lp-rich-link-tap-to-load-highlight
lp-rich-link-tap-to-load-label
lp-rich-link-tap-to-load-label-disabled
Click to Load Preview
local-tapToLoadSpinnerImage
local-tapToLoadSpinnerImage-darkInterface
lp-rich-link-tap-to-load-spinner-disabled
lp-rich-link-tap-to-load-spinner
lp-rich-link-tap-to-load-highlight
tapToLoad-width
tapToLoad-height
tapToLoad-backgroundColor
tapToLoad-caption-color
tapToLoad-caption-font-pointSize
tapToLoad-caption-font-_lp_CSSFontWeight
tapToLoad-tapHighlightColor
tapToLoad-caption-padding
Chevron
Safari
https://www.icloud.com/mail_resources/app_icons/pages.png
https://www.icloud.com/mail_resources/app_icons/pages@2x.png
https://www.icloud.com/mail_resources/app_icons/pages@3x.png
https://www.icloud.com/mail_resources/app_icons/notes.png
https://www.icloud.com/mail_resources/app_icons/notes@2x.png
https://www.icloud.com/mail_resources/app_icons/notes@3x.png
https://www.icloud.com/mail_resources/app_icons/numbers.png
https://www.icloud.com/mail_resources/app_icons/numbers@2x.png
https://www.icloud.com/mail_resources/app_icons/numbers@3x.png
https://www.icloud.com/mail_resources/app_icons/keynote.png
https://www.icloud.com/mail_resources/app_icons/keynote@2x.png
https://www.icloud.com/mail_resources/app_icons/keynote@3x.png
iCloudDrive
https://www.icloud.com/mail_resources/app_icons/icloud.png
https://www.icloud.com/mail_resources/app_icons/icloud@2x.png
https://www.icloud.com/mail_resources/app_icons/icloud@3x.png
Search
Play
Pause
Mute
Unmute
MusicPlay
MusicPause
Beats1
IndeterminateProgress
forceRTL
TB,N
forceImageLoadingScaleFactor
TQ,N
forceSubsampleImagesToScreenSize
T@"NSNumber",&,N
customLoader
T@"<LPTestingLoader>",&,N
maxWidth
transparent
local-<theme-path>-width
local-<theme-path>-height
local-<theme-path>-maxWidth
<theme-path>-cornerRadius
local-<theme-path>-backgroundColor
local-<theme-path>-filter
lp-rich-link-captionBar-belowRightIcon
lp-rich-link-mediaImage
lp-rich-link-captionBar-belowLeftIcon
Trying to update a caption bar after it has been laid out.
captionFadeOutSpring
transform.scale.xy
spinnerShrinkOutSpring
d72@?0{CGRect={CGPoint=dd}{CGSize=dd}}8{UIEdgeInsets=dddd}40
useProgressSpinner
TB,N,V_useProgressSpinner
preliminary
TB,N,GisPreliminary,V_preliminary
Tq,N,V_style
T@"NSString",C,N,V_quotedText
iTunesPlaybackInformation
T@"LPiTunesPlaybackInformation",&,N,V_iTunesPlaybackInformation
%@-leading
T@"<LPLinkHTMLTextGeneratorDelegate>",W,N,V_delegate
T@"LPLinkMetadata",C,N
HTMLFragmentString
HTMLDocumentString
Tap to Load Preview
captionShrinkSpring
highlightFadeOut
progressFadeInSpring
progressGrowSpring
fadeOut
scaleOut
highlightFadeOutSpring
T@"<LPTapToLoadViewDelegate>",W,N,V_delegate
B32@?0@"NSString"8Q16^B24
local-%@-maximum-number-of-lines
span
font-size: %gpx; font-family: system-ui;
v40@?0@8{_NSRange=QQ}16^B32
local-<theme-path>-maximum-number-of-lines
lp-rich-link-%@-textStack-%@-%@
alloc
init
null
shared
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
parentDocument
createElement:
addObject:
element
appendChild:
stringByAppendingFormat:
ruleDictionaryForStyle:
styleSet
ruleDictionaryForStyleWithDarkInterface:
initWithTagName:themePath:generator:
addChild:
childThemePathWithName:
.cxx_destruct
generator
themePath
_children
_generator
_element
_themePath
getRed:green:blue:alpha:
colorNamed:inBundle:compatibleWithTraitCollection:
_lp_CSSTextHexFormat
_lp_CSSText
_lp_CSSTextWithAlternatePropertiesForName:
_lp_HTMLAttributeText
_lp_colorNamed:
stringWithFormat:
initWithName:important:
stringByReplacingOccurrencesOfString:withString:
initWithName:
variableByResolvingWithThemePath:
name
isImportant
_important
_name
useCSSVariables
CSSTextForThemeProperty:allowsAlternateProperties:
objectForKeyedSubscript:
resolveCSSValue:
enumerateKeysAndObjectsUsingBlock:
appendString:
enumerateResolvedRulesFromRuleDictionary:withBlock:
buildCSSDeclarationsFromRuleDictionary:withPrefix:suffix:spacer:forBuffer:
count
dictionaryWithCapacity:
setObject:forKey:
arrayWithObjects:count:
components
countByEnumeratingWithState:objects:count:
ruleDictionaryForStyle:forComponentClass:withDarkInterface:
buildPendingVariableSetForRuleDictionary:
buildInlineStyleForRuleDictionary:
length
setAttribute:value:
removeAttribute:
setClassName:
valueForThemeProperty:
CSSTextForProperty:withValue:allowsAlternateProperties:
appendFormat:
CSSCustomPropertiesForThemePropertiesInSet:
initWithTheme:
buildStyleSheet
addStyle:toElement:inComponent:
setStyle:toElement:inComponent:
registerAlternateStyle:inComponent:
localVariablesAsCSSVariables
themeVariablesAsCSSVariables
localVariables
pendingVariables
theme
useInlineStyles
setUseInlineStyles:
useVariablesWhenUsingInlineStyles
setUseVariablesWhenUsingInlineStyles:
includeClassNamesWhenUsingInlineStyles
setIncludeClassNamesWhenUsingInlineStyles:
generateEmailCompatibleMarkup
setGenerateEmailCompatibleMarkup:
_useInlineStyles
_useVariablesWhenUsingInlineStyles
_includeClassNamesWhenUsingInlineStyles
_generateEmailCompatibleMarkup
_localVariables
_pendingVariables
_theme
bundleForClass:
localizedStringForKey:value:table:
_resolveVideo
_completedWithVideo:
isYouTubeEmbedURL:
videoProperties
initWithYouTubeURL:properties:
assetWithURL:
customLoader
resourceLoader
installCustomMediaLoader:
isPlayable
tracksWithMediaCharacteristic:
duration
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithURL:
resume
initWithStreamingURL:properties:
loadValuesAsynchronouslyForKeys:completionHandler:
cancelLoading
invalidateAndCancel
setHasAudio:
accessibilityText
setAccessibilityText:
countOfBytesExpectedToReceive
maximumBytes
countOfBytesReceived
MIMEType
cancel
appendData:
initWithData:MIMEType:properties:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithResolvable:webViewForProcessSharing:completionHandler:
completionHandler
setCompletionHandler:
_resolvable
_asset
_hasAudio
_MIMEType
_session
_receivedData
_completionHandler
specialization
previewSummaryForTransformer:
previewImageForTransformer:
title
_lp_simplifiedDisplayString
initWithMetadata:URL:
previewSummary
previewImage
metadata
_metadata
_URL
isEqualToString:
initWithType:
availability
isAvailableForAnonymousDownload
type
storeIdentifier
setStoreIdentifier:
storefrontIdentifier
setStorefrontIdentifier:
previewURL
setPreviewURL:
offers
setOffers:
_type
_storeIdentifier
_storefrontIdentifier
_previewURL
_offers
backgroundColor
cssResolver
stringByAppendingString:
buildComponents
initWithThemePath:generator:
leftIcon
initWithStyle:themePath:generator:
size
width
initWithImage:style:themePath:generator:
textStack
initWithStyle:presentationProperties:themePath:generator:
rightIcon
dictionaryWithObjects:forKeys:count:
baseRules
setWithArray:
_style
_presentationProperties
initWithVideo:style:posterFrame:posterFrameStyle:configuration:
shouldAutoPlay
destroyPlayer
dealloc
playerItemWithAsset:
loggingID
firstObject
isEnabled
timeRange
setForwardPlaybackEndTime:
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
audioSession
setAudioSession:
setAutomaticallyWaitsToMinimizeStalling:
playerLayerWithPlayer:
setDelegate:
playbackView
layer
setSublayers:
_lp_setNeedsLayout
video
playerLooperWithPlayer:templateItem:
addObserver:forKeyPath:options:context:
createPlayerItemAdjustedForLoopingWithAsset:completionHandler:
setVolume:
setPlaying:
isReadyForDisplay
recreateFullScreenViewControllerIfNeeded
removeObserver:forKeyPath:context:
removeFromSuperlayer
destroyFullScreenViewController
didChangePlayingState:
resetToPlaceholderView
hasEverPlayed
timeControlStatus
rate
setHasEverPlayed:
setWaitingForPlayback:
status
didFailToPlay
observeValueForKeyPath:ofObject:change:context:
releaseDecodingResourcesForInactivePlayers
error
incrementMetric:
createPlayerIfNeeded
isPlaying
setRate:
configuration
disableAutoPlay
data
streamingURL
hasAudio
isMuted
volume
didChangeMutedState:
layoutComponentView
bounds
setFrame:
initWithPlayer:sourceView:
setUserInteractionEnabled:
fullScreenVideoDidPresent
fullScreenVideoWillDismiss
releaseDecodingResourcesIfInactive
usesSharedAudioSession
shouldShowMuteButton
setMuted:
createFullScreenVideoViewController
usesCustomFullScreenImplementation
createVideoPlayerView
prepareForDisplayWithCompletionHandler:
_player
_looper
_playerLayer
_readyForDisplayCallback
_hasCreatedVideoPlayerView
_isWaitingToRetryAfterFailingToPlay
_playbackRetryCountWithoutSuccess
_desiredPlayingState
_desiredVolume
isVideoType:
initWithURL:MIMEType:
initWithURL:
setURL:
setType:
fail
assetImageGeneratorWithAsset:
valueWithCMTime:
setVideo:
setVideoMetadata:
_lp_createImageWithCGImage:
initWithPlatformImage:
setImage:
done
generateCGImagesAsynchronouslyForTimes:completionHandler:
cancelAllCGImageGeneration
delegate
errorWithDomain:code:userInfo:
metadataProviderSpecialization:didFailWithError:
metadataProviderSpecialization:didCompleteWithMetadata:
specializedMetadataProviderForResourceWithMIMEType:URL:
start
_cancelled
_resolver
_videoImageGenerator
allocWithZone:
copy
copyWithZone:
_accessibilityText
raise:format:
initByReferencingFileURL:MIMEType:properties:
isFileURL
checkResourceIsReachableAndReturnError:
setFileURL:
initWithPlatformImage:properties:
forceImageLoadingScaleFactor
imageNamed:inBundle:
_initWithPlatformImageGenerator:
_lp_strictlyDecodeObjectOfClass:forKey:
_createDataFromPlatformImage
_shouldEncodeData
encodeObject:forKey:
_lp_encodeObjectIfNotNil:forKey:
mainScreen
scale
numberWithBool:
initWithObjectsAndKeys:
objectForKey:
doubleValue
numberWithDouble:
setObject:forKeyedSubscript:
_waitForAsynchronouslyLoadedImageIfNeeded
subsampleImagesToScreenSize
_loadImageSubsampledToScreenSizeFromData:
initWithData:
platformImage
_mapDataFromFileURL
dataWithContentsOfURL:options:error:
_PNGImageNamed:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_initWithImage:
initWithData:MIMEType:
initByReferencingFileURL:MIMEType:
_preparePlatformImageWithCompletionHandler:
properties
_encodedSize
_pixelSize
_isPlaceholderIcon
set_placeholderIcon:
_remoteURLsForEmailCompatibleOutput
set_remoteURLsForEmailCompatibleOutput:
fileURL
setPlatformImage:
_originalPlatformImage
_data
_properties
_asynchronousLoadGroup
_placeholderIcon
_fileURL
_platformImage
initWithScale:URL:
_scale
textAlignment
createTextNode:
initWithText:style:themePath:generator:
absoluteString
enumerateObjectsUsingBlock:
filter
asSize
cornerRadius
value
foregroundOpacity
backgroundInset
_URLForImage:
initWithURL:document:
_fetchMetadata
initWithPresentationProperties:URL:document:
_setPresentationProperties:
_setMetadata:isFinal:
linkHTMLGenerator:didFetchMetadata:
requestMetadataForURL:completionHandler:
_rebuildView
ownerDocument
createDocumentFragment
_computePresentationPropertiesFromMetadata
linkHTMLGenerator:URLForResource:withMIMEType:
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
base64EncodedStringWithOptions:
childElementCount
childNodes
item:
removeChild:
getElementById:
getElementsByTagName:
setMetadata:
setComplete:
setAllowsTapToLoad:
setForceMiniStyle:
presentationProperties
isPreliminary
style
topCaption
bottomCaption
trailingTopCaption
trailingBottomCaption
leading
setText:
bottom
trailing
captionBar
icon
setTrailingIcon:
mediaTopCaption
mediaBottomCaption
mediaBottomCaptionBar
mediaTopCaptionBar
quotedText
image
trailingIcon
leadingIcon
themeWithStyle:icon:platform:
minimumHeight
initWithValue:
tapToLoad
hasTallMedia
minimumWidth
initWithStyle:presentationProperties:useProgressSpinner:themePath:generator:
mediaVideo
mediaImage
initWithVideo:style:posterFrame:posterFrameStyle:themePath:generator:
hasAnyContent
_createMediaTopCaptionBar
_createMediaBottomCaptionBar
clearCurrentLayout
injectCSSIfNeeded
initWithURL:generator:
_createMediaComponent
_createQuoteComponent
_createCaptionBar
getAttribute:
initialize
initWithMetadataLoadedFromURL:document:
initWithPresentationProperties:document:
hasPendingMetadataProvider
documentFragment
_setAllowsTapToLoad:
_setUseVariablesWhenUsingInlineStyles:
_setIncludeClassNamesWhenUsingInlineStyles:
setApplyCornerRadiusToLink:
delegateRespondsToURLForResource
_URLForResource:withMIMEType:
useFlexibleWidth
rootWidth
minimumRootHeight
_canTapToLoad
_didFollowLink
_allowsTapToLoad
applyCornerRadiusToLink
_pendingMetadataProvider
_mayReceiveAdditionalMetadata
_usesComputedPresentationProperties
_captionBar
_mediaTopCaptionBar
_mediaBottomCaptionBar
_quotedText
_image
_video
_backgroundColor
_minimumRootHeight
_rootElement
_linkComponent
_videoComponent
_everBuiltView
_applyCornerRadiusToLink
_isPreliminary
_delegate
_parentDocument
_cssResolver
substringToIndex:
attributedSubstringFromRange:
_initWithURL:
_initWithDictionary:
decodeInt32ForKey:
_lp_strictlyDecodeArrayOfObjectsOfClass:forKey:
version
originalURL
setOriginalURL:
setTitle:
summary
setSummary:
selectedText
setSelectedText:
siteName
setSiteName:
itemType
setItemType:
relatedURL
setRelatedURL:
creator
setCreator:
creatorFacebookProfile
setCreatorFacebookProfile:
creatorTwitterUsername
setCreatorTwitterUsername:
appleContentID
setAppleContentID:
appleSummary
setAppleSummary:
setIcon:
iconMetadata
setIconMetadata:
imageMetadata
setImageMetadata:
videoMetadata
icons
setIcons:
images
setImages:
videos
setVideos:
streamingVideos
setStreamingVideos:
audios
setAudios:
setSpecialization:
encodeInt32:forKey:
_lp_encodeArrayIfNotEmpty:forKey:
initForReadingFromData:error:
setDecodingFailurePolicy:
finishDecoding
initRequiringSecureCoding:
encodedData
metadataWithDataRepresentation:
dataRepresentation
_reduceSizeByDroppingResourcesIfNeeded
_version
_originalURL
_title
_summary
_selectedText
_siteName
_itemType
_relatedURL
_creator
_creatorFacebookProfile
_creatorTwitterUsername
_appleContentID
_appleSummary
_icon
_iconMetadata
_imageMetadata
_videoMetadata
_icons
_images
_videos
_streamingVideos
_audios
_specialization
isImageType:
tryToResolveWithWebViewForProcessSharing:completionHandler:
isValidMIMEType:
setSize:
_size
_lp_strictlyDecodeDictionaryOfObjectsWithKeysOfClass:andObjectsOfClass:forKey:
colors
setColors:
_colors
populateLinkMetadataForBackwardCompatibility:
storeFrontIdentifier
setStoreFrontIdentifier:
setName:
artist
setArtist:
album
setAlbum:
lyrics
setLyrics:
artwork
setArtwork:
artworkMetadata
setArtworkMetadata:
_storeFrontIdentifier
_artist
_album
_lyrics
_artwork
_artworkMetadata
genre
setGenre:
_genre
curator
setCurator:
_curator
decodeBoolForKey:
encodeBool:forKey:
platform
setPlatform:
screenshots
setScreenshots:
isMessagesOnlyApp
setIsMessagesOnlyApp:
messagesAppIcon
setMessagesAppIcon:
_isMessagesOnlyApp
_platform
_screenshots
_messagesAppIcon
author
setAuthor:
_author
narrator
setNarrator:
_narrator
episodeName
setEpisodeName:
podcastName
setPodcastName:
releaseDate
setReleaseDate:
_episodeName
_podcastName
_releaseDate
seasonName
setSeasonName:
_seasonName
brandingText
setBrandingText:
branding
setBranding:
_branding
_brandingText
application
setApplication:
applicationBundleIdenfier
setApplicationBundleIdenfier:
_applicationBundleIdenfier
_application
game
setGame:
numberOfPlayers
setNumberOfPlayers:
minimumNumberOfPlayers
setMinimumNumberOfPlayers:
maximumNumberOfPlayers
setMaximumNumberOfPlayers:
_numberOfPlayers
_minimumNumberOfPlayers
_maximumNumberOfPlayers
_game
subtitle
setSubtitle:
action
setAction:
_subtitle
_action
URLWithString:
_lp_isHTTPFamilyOrLinkPresentationTestingURL
decodeCGSizeForKey:
encodeCGSize:forKey:
initWithCapacity:
initWithText:style:
_lp_isLTR
addSubview:
setContentInset:
firstLineLeading
font
ascender
descender
_layoutCaptionPairForSize:applyingLayout:
sizeThatFits:
initWithLeadingText:leadingStyle:trailingText:trailingStyle:
_leftView
_rightView
_contentInset
fontDescriptor
floatValue
_lp_CSSFontWeight
initializeForTransformer:
destroyForTransformer:
statusForTransformer:
actionURLForTransformer:
statusTransformerDidUpdate:
statusText
actionURL
canonicalURL
wantsStatusItem
_wantsStatusItem
_setRelatedWebView:
_copyDefaultWebViewConfiguration
initWithFrame:configuration:
setNavigationDelegate:
_defaultUserAgent
setCustomUserAgent:
requestWithURL:
loadRequest:
request
response
statusCode
isErrorStatusCode:
expectedContentLength
_failedWithErrorCode:underlyingError:
_completedWithData:MIMEType:error:
_getMainResourceDataWithCompletionHandler:
_close
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
_webView
_loggingID
pagesIcon
notesIcon
numbersIcon
keynoteIcon
iCloudDriveIcon
applicationProxyForIdentifier:
localizedNameForContext:
setStyle:
setCaptionBar:
computeIcon
setLeadingIcon:
computeLocalizedApplicationName
presentationPropertiesForTransformer:
setMediaBottomCaptionBar:
sharedApplication
preferredContentSizeCategory
substringFromIndex:
insertString:intoTrieWithCache:
addStringToFailedSuffixes:
hasSuffix:remainingPrefix:
rangeOfString:options:
characterAtIndex:
initWithSuffixes:
hasSuffix:
_trie
_trieNodeCount
_maxLength
_failedSuffixes
CGImage
initWithCGImage:
_flatImageWithColor:
_lp_CGImage
_lp_flatImageWithColor:
text
left
initWithCaption:style:firstLineLeading:themePath:generator:
right
aboveTop
belowBottom
aboveTopCaption
belowBottomCaption
objectAtIndexedSubscript:
componentForRow:style:name:firstLineLeading:
lastLineDescent
addEntriesFromDictionary:
additionalRulesForStyle:
setShowsControls:
play
pause
youTubeURL
youTubeVideoComponentsForEmbedURL:
startTime
setStartTime:
videoID
loadVideoWithID:
didEncounterPlaybackError
setFullScreen:
fullScreenVideoDidDismiss
enterFullScreen
youTubePlayerDidBecomeReady:
youTubePlayer:didChangeToState:
youTubePlayer:didReceiveError:
youTubePlayer:didChangeToFullScreen:
enterCustomFullScreen
_platformYouTubeView
forceRTL
userInterfaceLayoutDirection
disablePlayback
setDisablePlayback:
disablePlaybackControls
setDisablePlaybackControls:
setDisableAutoPlay:
_disablePlayback
_disablePlaybackControls
_disableAutoPlay
setAccessibilityLabel:
addMediaPlayer:
removeMediaPlayer:
window
isParented
isWaitingForPlayback
setMasksToBounds:
showDebugIndicators
yellowColor
CGColor
setBorderColor:
setBorderWidth:
numberWithUnsignedInt:
stringValue
setString:
systemFontOfSize:
setFont:
setFontSize:
blackColor
setForegroundColor:
whiteColor
setShadowColor:
setShadowOpacity:
setShadowRadius:
setShadowOffset:
_lp_backingScaleFactor
setContentsScale:
addSublayer:
_buildVideoPlaceholderView
tapRecognized:
initWithTarget:action:
addGestureRecognizer:
_swapVideoPlaceholderForVideoForAutoPlay:
defaultCenter
applicationDidEnterBackground:
addObserver:selector:name:object:
applicationWillEnterForeground:
superview
playButton
backgroundSize
setBounds:
setPosition:
position
muteButton
muteButtonPadding
asInsetsForView:
updatePlayButtonVisibility
_intrinsicSize
pulsingLoadIndicatorColor
_lp_setBackgroundColor:
setKeyPath:
numberWithInt:
setFromValue:
pulsingLoadIndicatorMaximumOpacity
setToValue:
pulsingLoadIndicatorDuration
setDuration:
setFillMode:
pulsingLoadIndicatorTimingFunction
setTimingFunction:
setRepeatCount:
setRemovedOnCompletion:
setAutoreverses:
addAnimation:forKey:
stopTiming
startTimingForMetric:
_lp_insertSubview:belowSubview:
_createPulsingLoadIndicator
_lp_insertSubview:aboveSubview:
_startPlaybackWatchdogTimer
showMuteButton
convertRect:toView:
_createPosterFrameView
removeFromSuperview
removePlaceholderViews
mediaPlayer:didChangePlayingState:
unmuteButton
_overlappingControlsColor
updateMuteButtonImage
mediaPlayer:didChangeMutedState:
applicationState
showPlayButtonAnimated:
hidePlayButtonAnimated:
setTransform:
setOpacity:
animateWithDuration:delay:options:animations:completion:
animateWithDuration:animations:
muteButtonOpacity
_lp_setOpacity:
_muteButtonHighlightLongPressRecognized:
setMinimumPressDuration:
_muteButtonTapRecognized:
_lp_springWithMass:stiffness:damping:
initWithImage:style:
setImage:forState:
disabledOpacity
setAlpha:
setPath:
initWithPrivateStyle:
setSimulatesMasks:
effectView
setMask:
setMaskMode:
contentView
userInteractedWithVideoView
dismissViewControllerAnimated:completion:
initWithFrame:
setWindowLevel:
clearColor
setBackgroundColor:
setRootViewController:
makeKeyAndVisible
rootViewController
setHidden:
presentViewController:animated:completion:
hideMuteButton
fadeInMuteButton
state
muteButtonHighlightedOpacity
fullScreenBackgroundColor
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
isActive
setActive:
isFullScreen
shouldUnmuteWhenUserAdjustsVolume
lastInteractionTimestamp
unobscuredAreaFraction
componentViewDidMoveToWindow
_posterFrame
_posterFrameStyle
_configuration
_playButtonContainerView
_playButtonView
_muteButtonContainerView
_muteButtonView
_videoPlaceholderView
_visualEffectView
_pulsingLoadView
_containerView
_playbackView
_debugIndicator
_fullScreenViewController
_fullScreenWindow
_playbackDelayTimingToken
_playing
_hasBuilt
_wasPlayingOrWaitingToPlayWhenUnparented
_wasPlayingWhenSuspended
_showingPlayButton
_waitingForPlaybackDueToAutoplay
_lastInteractionTimestamp
_playbackWatchdogTimerID
_usesSharedAudioSession
_waitingForPlayback
_fullScreen
_hasEverPlayed
_volume
initWithString:
string
setTextScale:
setAttributedText:
attributedText
color
setColor:
textScale
maximumNumberOfLines
setMaximumNumberOfLines:
_text
_attributedText
_color
_textScale
_maximumNumberOfLines
_leading
_trailing
leadingIconMaskColor
trailingIconMaskColor
belowLeadingIcon
belowLeadingIconMaskColor
leadingAccessoryType
trailingAccessoryType
leftIconMaskColor
rightIconMaskColor
belowLeftIcon
belowLeftIconMaskColor
belowRightIcon
belowRightIconMaskColor
leftAccessoryType
rightAccessoryType
setLeadingIconMaskColor:
setTrailingIconMaskColor:
setBelowLeadingIcon:
setBelowLeadingIconMaskColor:
setLeadingAccessoryType:
setTrailingAccessoryType:
setMinimumHeight:
_leadingIcon
_leadingIconMaskColor
_trailingIcon
_trailingIconMaskColor
_belowLeadingIcon
_belowLeadingIconMaskColor
_leadingAccessoryType
_trailingAccessoryType
_aboveTop
_top
_bottom
_belowBottom
_minimumHeight
bezierPathWithRoundedRect:cornerRadius:
CGPath
_iconVariantForUIApplicationIconFormat:scale:
imageWithCGImage:scale:orientation:
localizedStringWithFormat:
invitationText
playerCountText
setMediaTopCaptionBar:
hasFetchedSubresources
setHasFetchedSubresources:
_hasFetchedSubresources
imageStyle
maskColor
padding
height
baselineOffset
opacity
initWithStyle:generator:
setFilter:
setMaskColor:
leftAccessory
rightAccessory
initWithType:style:themePath:generator:
initProgressSpinnerIconWithStyle:themePath:generator:
_useProgressSpinner
iTunesPlaybackInformationForURL:
setITunesPlaybackInformation:
registerForStoreAvailablityChangesWithToken:handler:
unregisterForStoreAvailablityChangesWithToken:
transcriptBoldTextFont
systemGrayColor
initWithString:attributes:
systemPinkColor
rangeOfString:
replaceCharactersInRange:withString:
addAttributes:range:
userStateForMediaStorefrontIdentifier:
statusForText:
iTunesStoreURL
storeIdentifierForTransformer:
iTunesPlaybackInformation
colorForColorKind:inColorDictionary:
beatsOneLogo
setDateStyle:
stringFromDate:
storefrontCountryCode
storefrontIdentifierFromCountryCode:
preferredFontDescriptorWithTextStyle:
symbolicTraits
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
initWithURL:resolvingAgainstBaseURL:
setScheme:
standardUserDefaults
boolForKey:
forceSubsampleImagesToScreenSize
boolValue
disableLegacyStoreLookups
host
identifier
initWithIdentifier:storefrontCountryCode:forURL:
sessionWithConfiguration:
integerValue
determineOrientationOfScreenshotsInArray:
assetArrayScreenshotArray:
assetArrayFromScreenshotArray:
array
initWithDictionary:
extractOffers:
allValues
assetArrayFromScreenshotDictionary:usingPreferredPlatformArray:
schema
setValue:forKey:
resolve
assetsToResolve
addObjectsFromArray:
removeObject:
valueForKey:
arrayByAddingObject:
dataTaskWithURL:completionHandler:
customResolverClass
setOriginatingAsset:
containsObject:
initWithIdentifier:storefrontCountryCode:
processResponseDictionary:withStorefrontIdentifier:
start:
completed
specializedMetadataProviderForURL:
specializedMetadataProviderForMetadata:URL:
_identifier
_storefrontCountryCode
_canceled
_lookupTask
_resolvedMetadata
_unresolvedMetadata
_assetsStillResolving
_pendingResolvers
URLWithHeight:width:cropStyle:format:
initWithURL:colors:name:
strongToStrongObjectsMapTable
_setStorefrontIdentifier:
_storefrontDidChangeNotification
requestStorefrontIdentifierWithCompletionHandler:
_setCapabilities:
_capabilitiesDidChangeNotification
requestCapabilitiesWithCompletionHandler:
_convertCapabilities:
_notifyChangeHandlers
_convertNewStorefrontIdentifier:
objectEnumerator
removeObjectForKey:
capabilities
_cloudServiceController
_changeHandlers
_capabilities
_hasUpdatedCapabilities
numberWithInteger:
mutableCopy
UTF8String
colorWithRed:green:blue:alpha:
_dictionary
indeterminateProgressSpinner
indeterminateProgressSpinnerDarkInterface
verticalAlignment
setKeyProfile:
setPersonalizationStyle:
setValue:forRequestParameter:
allItems
lookupDictionary
valueForProperty:
startWithLookupBlock:
imageDataURLMatchingAspectRatioOfSize:
typeForOffer:
previewURLForOffer:
hasAudioForOffer:
hasVideoForOffer:
isEVODForOffer:
hasVideo
isEVOD
_hasVideo
_isEVOD
indexOfObject:
weakObjectsHashTable
volumeChanged:
_deactivateAllPlayingMediaPlayersExcept:
_updateAudioSessionCategory
initAuxiliarySession
setCategory:error:
_sharedSessionHasPlayingAudio
category
userInfo
_mediaPlayers
chevron
_layoutTextStackForSize:applyingLayout:
initWithStyle:
addArrangedSubview:
_items
_hasEverBuilt
initWithString:forName:
initWithName:customStringResolverClass:
_string
_customResolverClass
initWithObjects:
isHiddenFromSpringboard
setIsHiddenFromSpringboard:
hasMessagesExtension
setHasMessagesExtension:
_isHiddenFromSpringboard
_hasMessagesExtension
setDateFormat:
dateFromString:
_needsBrandingText
setNeedsLayout
insertSubview:aboveSubview:
insertSubview:belowSubview:
screen
effectiveUserInterfaceLayoutDirection
_setContinuousCornerRadius:
bringSubviewToFront:
_lp_setCornerRadius:
_lp_bringSubviewToFront:
layoutSubviews
setContents:
anchorPoint
setAnchorPoint:
capInsets
setContentsCenter:
setSublayerTransform:
imageView
setAnimationOrigin:
animationOrigin
_animationOrigin
_imageView
_lp_isEqualIgnoringCase:
_lp_isEqualToAnyIgnoringCase:
_lp_hasCaseInsensitivePrefix:
isHTMLType:
audiovisualMIMETypes
startFetchingMetadataForURL:completionHandler:
startFetchingMetadataForWebView:completionHandler:
_setAllowsJavaScriptMarkup:
_setAllowsMetaRefresh:
_setAlwaysRunsAtForegroundPriority:
setMaximumProcessCount:
builtInPlugInsURL
URLByAppendingPathComponent:
setInjectedBundleURL:
_initWithConfiguration:
setProcessPool:
nonPersistentDataStore
setWebsiteDataStore:
installCustomWebViewLoader:
canonicalMetadataURLForURL:
_incompleteMetadataRequests
_startWatchdogTimer
shouldLoadInsteadOfUsingExistingWebViewForURL:
_fetchMetadataFromWebView
_fetchSubresources
_cancelDueToTimeout
_isDisplayingStandaloneImageDocument
_completedWithMainResourceImageData:MIMEType:URL:
_switchToSpecializationIfPossibleForMIMEType:URL:
metadataExtractorJS
_fetchedMetadata:
evaluateJavaScript:completionHandler:
specializedMetadataForCompleteMetadata:URL:
setCancelled:
targetFrame
isMainFrame
cancelled
_switchToSpecializationIfPossibleForMetadata:URL:
_redistinguishImagesAndIcons
_completedWithResolvedMetadata:error:
_fetchResolvableItems:group:completionHandler:
isTwitterProfileImageURL:
reverseObjectEnumerator
insertObject:atIndex:
removeObjectsInArray:
_fetchFirstSuccessfulItem:group:completionHandler:
_fetchNextSuccessfulItem:currentIndex:group:completionHandler:
objectAtIndex:
_generateSpecializationIfPossibleForCompleteMetadata:URL:
_callbackQueue
requestMetadataForWebView:completionHandler:
startFetchingSubresourcesForPartialMetadata:completionHandler:
useSpecializedProviders
setUseSpecializedProviders:
fetchSubresources
setFetchSubresources:
timeout
setTimeout:
_complete
_fetchingFromExistingWebView
_hasStartedFetching
_specializationState
_specializedMetadataProvider
_fetchTimingToken
_useSpecializedProviders
_timeout
initWithPlayerLayerView:
viewWillAppear:
setShowsPlaybackControls:
dismissNonInteractively
didBeginSlideToDismissTransition
doneButtonTapped:
fullScreenController
setFullScreenController:
_fullScreenController
playerLayer
setPlayer:
setUpFullScreenVideoViewControllerIfNeeded
viewWillTransitionToSize:withTransitionCoordinator:
cancelDismissalGestures
view
setCenter:
layoutIfNeeded
animateAlongsideTransition:completion:
initWithPlayer:
setAllowsPictureInPicturePlayback:
setPlayerController:
viewDidDisappear:
removeFromParentViewController
viewWillDisappear:
addChildViewController:
didMoveToParentViewController:
installGestureRecognizers
animateIn
viewWillLayoutSubviews
slideToDismissGestureRecognized:
setMaximumNumberOfTouches:
setEnabled:
beginSlideToDismissTransitionWithRecognizer:
updateSlideToDismissTransitionWithRecognizer:
completeSlideToDismissTransition
locationInView:
translationInView:
center
transform
startTrackingCenter:bounds:transform:withInitialGestureLocation:
installCornerMaskLayer
velocityInView:
trackGestureTranslation:velocity:
trackedCenter
trackedBounds
trackedTransform
dismissalProgress
colorWithAlphaComponent:
setCornerRadius:
trackedVelocity
finalAnimationSpringDamping
finalAnimationDuration
shouldFinishDismissal
completeTransitionWithInitialVelocity:damping:duration:didComplete:
frame
fadeBackgroundToColor:withDuration:damping:
setMaskedCorners:
ph_animateView:toCenter:bounds:transform:withDuration:delay:usingSpringWithDamping:initialVelocity:options:completion:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
_sourceView
_playerViewController
_slideGesture
_swipeDownTracker
_swipeDownInitialBounds
_videoMaskLayer
_playerLayerView
_playerController
_lp_isHTTPFamilyURL
_lp_componentsNoCopy
componentsWithURL:resolvingAgainstBaseURL:
pathComponents
queryItems
_lp_components
_lp_pathComponentAtIndex:
_lp_valueForQueryKey:
setTopCaption:
setBottomCaption:
setTrailingTopCaption:
setTrailingBottomCaption:
setMediaTopCaption:
setMediaBottomCaption:
_topCaption
_bottomCaption
_trailingTopCaption
_trailingBottomCaption
_mediaTopCaption
_mediaBottomCaption
setBeginTime:
_lp_copyWithBeginTime:
setMass:
setStiffness:
setDamping:
settlingDuration
addEventListener:listener:useCapture:
handleEvent:
uppercaseString
isValidStorefrontCountryCode:
defaultStorefrontCountryCode
_setOverlappingControlsColor:
__overlappingControlsColor
_uninstallMediaServicesResetNotificationHandler
tracksWithMediaType:
naturalSize
_installMediaServicesResetNotificationHandler
UUID
UUIDString
URLAssetWithURL:options:
setDelegate:queue:
mainQueue
addObserverForName:object:queue:usingBlock:
removeObserver:
contentInformationRequest
setContentType:
setContentLength:
setByteRangeAccessSupported:
dataRequest
requestedOffset
requestsAllDataToEndOfResource
requestedLength
subdataWithRange:
respondWithData:
finishLoading
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
_initWithVideo:
initWithData:MIMEType:hasAudio:
initByReferencingFileURL:MIMEType:hasAudio:
initWithStreamingURL:hasAudio:
initWithYouTubeURL:
_mediaLoadingQueue
_mediaServicesResetNotificationHandler
_streamingURL
_youTubeURL
isAppleTVURL:
_createImageViewWithImage:
darkeningAmount
_createOverlayViewWithOpacity:
setContentMode:
setClipsToBounds:
imageSizeThatFits:
colorWithWhite:alpha:
initWithImage:
_overlayView
defaultParagraphStyle
setAlignment:
setLineBreakMode:
_createTextViewWithAttributedString:style:
leadingGlyph
_effectiveContentInset
maximumLines
setNumberOfLines:
setContentCompressionResistancePriority:forAxis:
_textView
_glyphView
initWithType:side:
_accessoryView
_shouldFlipHorizontally
buildComponentWithPosterFrame:posterFrameStyle:
evaluateWebScript:
URLForResource:withExtension:
createVideoElement
dataWithJSONObject:options:error:
initWithData:encoding:
contentFrame
javaScriptContext
evaluateScript:
toInt32
paused
muted
hidden
documentElement
contains:
callWebScriptMethod:withArguments:
isVisible
resolvedVideoElement
updateVisibility
target
stopPropagation
preventDefault
youTubeParametersForVideoURL:
togglePlaying
_playButton
_muteButton
_muteButtonContainer
_videoPosterFrame
_videoOverlay
_videoElement
_youTubeContainerElement
_isVisible
_wasPlayingWhenHidden
_isVisibleFunction
_value
initWithSize:
initWithSquareSize:
_width
_height
setTop:
setLeading:
setBottom:
setTrailing:
setMaximumLines:
setTextAlignment:
setFirstLineLeading:
setLeadingGlyph:
_maximumLines
_font
_textAlignment
_firstLineLeading
_leadingGlyph
_padding
emailCompatibleMargin
initWithPlatform:
setLastLineDescent:
captionTextPadding
_lastLineDescent
_aboveTopCaption
_belowBottomCaption
_captionTextPadding
_emailCompatibleMargin
margin
_margin
setVerticalAlignment:
setBackgroundInset:
setForegroundOpacity:
setDarkeningAmount:
_filter
_verticalAlignment
_backgroundInset
_foregroundOpacity
_cornerRadius
_darkeningAmount
_maskColor
searchGlyph
initSearchGlyph
setBaselineOffset:
_opacity
_imageStyle
_baselineOffset
setBackgroundSize:
setDisabledOpacity:
_backgroundSize
_disabledOpacity
functionWithControlPoints::::
setMuteButtonOpacity:
setMuteButtonHighlightedOpacity:
setPulsingLoadIndicatorColor:
setPulsingLoadIndicatorMaximumOpacity:
setPulsingLoadIndicatorDuration:
setPulsingLoadIndicatorTimingFunction:
setFullScreenBackgroundColor:
_muteButtonPadding
_muteButtonOpacity
_muteButtonHighlightedOpacity
_pulsingLoadIndicatorColor
_pulsingLoadIndicatorMaximumOpacity
_pulsingLoadIndicatorDuration
_pulsingLoadIndicatorTimingFunction
_fullScreenBackgroundColor
leadingAccessory
trailingAccessory
setMinimumWidth:
placeholderIcon
playButtonPadding
_leadingAccessory
_trailingAccessory
_textStack
_minimumWidth
_playButtonPadding
systemBlueColor
tapHighlightColor
setTapHighlightColor:
caption
setWidth:
setHeight:
_tapHighlightColor
_caption
didChangeContentSizeCategory:
didChangeDarkenColorsStatus:
didChangeThemeParameters
removeAllObjects
themeParametersDidChange
addClient:
_clients
allKeys
initWithStyle:icon:platform:
componentsJoinedByString:
valueForKeyPath:
regularTheme
valueForUndefinedKey:
highlightColor
setHighlightColor:
mediaBackgroundColor
setMediaBackgroundColor:
maximumWidth
setMaximumWidth:
maximumIntrinsicHeight
setMaximumIntrinsicHeight:
widthFractionForTallMedia
setWidthFractionForTallMedia:
_highlightColor
_mediaImage
_mediaVideo
_mediaBackgroundColor
_tapToLoad
_maximumWidth
_maximumIntrinsicHeight
_widthFractionForTallMedia
systemFontOfSize:weight:
preferredFontForTextStyle:
boldSystemFontOfSize:
valueWithCGRect:
valueWithCGSize:
CGRectValue
_lp_CGRectValue
_lp_valueWithCGRect:
_lp_valueWithCGSize:
setBackgroundType:
mainColor
setProgressIndicatorColor:
setShowOuterBorder:
setShowBorder:
setControlForegroundColor:
setControlColor:
musicPlayButton
musicPauseButton
buttonSize
updateControlStyle:
playImage
cancelImage
outerBorderColor
buttonCornerRadius
playButtonDefaultAlpha
updateToState:
removeTimeObserver:
beginIndeterminateAnimation
endIndeterminateAnimation
currentTime
setProgress:animated:
addPeriodicTimeObserverForInterval:queue:usingBlock:
showPlayIndicator:
initWithPlayerItem:
seekToTime:
reasonForWaitingToPlay
initWithPreviewURL:style:
buttonPressed:
_item
_timeObserver
_endObserver
_state
setShouldUpdateNowPlayingArtwork:
update
matchesNowPlayingItem
isIndeterminate
updateProgressForCurrentlyActiveTrackAnimated:
hideProgressAnimated:
progress
startUpdating
stopUpdating
startListeningForPlayback
stopListeningForPlayback
updatePlayState
createPlaybackQueue
mediaPlaybackApplicationID
startPlaying
currentNowPlayingInfo
hasPrefix:
currentElapsed
currentDuration
nowPlayingControllerDidBeginListeningForNotifications:
nowPlayingControllerDidStopListeningForNotifications:
nowPlayingController:nowPlayingInfoDidChange:
nowPlayingController:playbackStateDidChange:
nowPlayingController:elapsedTimeDidChange:
nowPlayingController:nowPlayingApplicationDidChange:
initWithPlaybackInformation:style:
didMoveToWindow
willMoveToWindow:
_playbackInformation
_nowPlayingController
_playbackStartTimingToken
updateButton
installPlaceholderButton
installiTunesButton
installPreviewButton
updateButtonForSongOrAlbum
updateButtonForPodcast
updateButtonForRadio
_button
appState
isRemovedSystemApp
isGoogleSearchURL:
isGoogleURL:
searchQueryForURL:
fragment
setQuery:
media
setMedia:
quote
setQuote:
_media
_quote
isFlipped
_commonInitWithURL:
initWithPresentationProperties:URL:
preload
linkView:didFetchMetadata:
animateOutWithCompletionHandler:
animateOut
redColor
greenColor
_setupInteraction
_invalidateLayout
_invalidatePresentationProperties
_layoutLinkView
_computePresentationPropertiesFromMetadataIfNeeded
_layoutLinkViewForSize:applyingLayout:
animationForKey:
removeAnimationForKey:
setSuppressMask:
convertTime:fromLayer:
animateInWithBaseAnimation:currentTime:
functionWithName:
_createMediaView
_createMediaTopCaptionBarView
_createMediaBottomCaptionBarView
_createQuotedTextView
animateOutAndRemoveViews
subviews
lastObject
_createComponents
animateInViews
animateBackgroundColor
_installTapGestureRecognizers
_disableHighlightGesture
_installHighlightGestureRecognizers
_setupView
_rebuildSubviewsWithAnimation:
animateFromOldFrame:oldMediaBackgroundFrame:oldCaptionBarView:
invalidateIntrinsicContentSize
linkViewNeedsResize:
initWithStyle:presentationProperties:
setUseProgressSpinner:
setPlaybackInformation:
_createTapToLoadView
_videoViewConfiguration
_addHighlightRecognizerToView:
_addTapRecognizerToView:
removeGestureRecognizer:
_uninstallHighlightGestureRecognizers
_uninstallTapGestureRecognizers
_rebuildGestureRecognizersIfNeeded
_tapRecognized:
_highlightLongPressRecognized:
setCancelsTouchesInView:
isDescendantOfView:
openURL:
animationDidStart:
animationDidStop:finished:
tapToLoadViewWasTapped:
initWithMetadataLoadedFromURL:
initWithPresentationProperties:
_setApplyCornerRadius:
intrinsicContentSize
_setMaskImage:
_performDeferredLayout
_setDisableTapGesture:
_setDisableHighlightGesture:
gestureRecognizer:canPreventGestureRecognizer:
_didScroll
_disableAnimations
_setDisableAnimations:
_disableTapGesture
_setDisableAutoPlay:
_setDisablePlayback:
_setDisablePlaybackControls:
_setAnimationOrigin:
_usesDeferredLayout
_setUsesDeferredLayout:
_forceFlexibleWidth
_setForceFlexibleWidth:
_applyCornerRadius
contentInset
_tapGestureRecognizers
_highlightGestureRecognizers
_highlightView
_overrideBackgroundColor
_iTunesPlaybackInformation
_components
_componentsForSizing
_contentView
_animationView
_mediaViewBackground
_animationMaskView
_needsRebuild
_shouldAnimateDuringNextBuild
_hasValidPresentationProperties
_hasSetDisableHighlightGesture
initWithCaption:style:themePath:generator:
pointSize
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
path
identifierFromQueryItems:pathComponent:
storefrontCountryCodeFromPathComponent:
didReceiveScriptMessage:
userContentController:didReceiveScriptMessage:
initWithPlayerView:
_playerView
youTubeVideoComponentsForVideoURL:
dispatchErrorForInvalidURL
userContentController
removeScriptMessageHandlerForName:
evaluatePlayerCommand:
setRequiresUserActionForMediaPlayback:
setAllowsInlineMediaPlayback:
_setInlineMediaPlaybackRequiresPlaysInlineAttribute:
preferences
_setCompositingBordersVisible:
addScriptMessageHandler:name:
_parameterScript
initWithSource:injectionTime:forMainFrameOnly:
addUserScript:
scrollView
setScrollEnabled:
setContentInsetAdjustmentBehavior:
stringWithContentsOfURL:encoding:error:
loadHTMLString:baseURL:
setContentOffset:animated:
setContentOffset:
body
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
loadVideoWithURL:
loadVideoWithEmbedURL:
seekTo:
exitFullScreen
startsPlayingAutomatically
setStartsPlayingAutomatically:
showsControls
endTime
setEndTime:
_videoID
_scriptMessageHandler
_ready
_commandsPendingPlayerReadiness
_startsPlayingAutomatically
_showsControls
_muted
_startTime
_endTime
isMicroblogPost:
shouldPreferMiniStyleForURL:
topCaptionForStyle:
bottomCaptionForStyle:
videoForStyle:
isSinaWeiboURL:
isTweetURL:
rangeOfComposedCharacterSequencesForRange:
substringWithRange:
safariIcon
setPreliminary:
rendererStyle
mainCaptionBarForStyle:
quotedTextForStyle:
setQuotedText:
backgroundColorForStyle:
imageForStyle:icon:
isComplete
allowsTapToLoad
forceMiniStyle
_forceMiniStyle
stringByRemovingPercentEncoding
iCloudSharingURL_noFragment
extractApplicationFromURL:
extractTitleFromURL:
initWithURL:applicationFromURL:titleFromURL:
entitlementForKey:
canUseCloudKit
containerWithIdentifier:
applicationNameMap
completeUsingApplication:title:
containerIdentifier
completeWithShareMetadata:bundleIDs:
setFetchWhitelistedBundleIDsCompletionBlock:
addOperation:
fetchShareMetadataWithURL:completionHandler:
share
applicationFromBundleIdentifiers:containerIdentifier:
iconFromShare:
_applicationFromURL
_titleFromURL
_baseContainer
_applicationContainer
contextWithBagType:
URLBagForContext:
continueFetchingWithEVODMetadataURL:completionHandler:
loadValueForKey:completionBlock:
JSONObjectWithData:options:error:
originatingAsset
_EVODMetadataFetcher
_originatingAsset
initWithMetric:
_metricKey
_isTiming
scanUnsignedLongLong:
scanString:intoString:
isAtEnd
parseYouTubeTimeFormat:outTime:
formatAsYouTubeTime:
setVideoID:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
setHost:
setFragment:
scheme
initWithName:value:
setQueryItems:
stringByDeletingPathExtension
nonMobileTweetURLForTweetURL:
nonMobileRedditURLForRedditURL:
nonDirectURLForImgurURL:
nonMobileYouTubeURLForURL:
youTubeVideoURLForEmbedURL:
destinationForGoogleRedirectURL:
isYouTubeURL:
isGitHubURL:
isYouTubeVideoURL:
_tapToLoadLabelElement
_tapToLoadSpinnerElement
initWithBytesNoCopy:length:encoding:freeWhenDone:
pauseButton
reset
setForceRTL:
setForceImageLoadingScaleFactor:
setForceSubsampleImagesToScreenSize:
setCustomLoader:
_buildViewsForCaptionBarIfNeeded
initWithActivityIndicatorStyle:
startAnimating
_layoutCaptionBarForSize:applyingLayout:
_createIndeterminateProgressIndicator
useProgressSpinner
_leftIconView
_rightIconView
_belowLeftIconView
_belowRightIconView
_leftAccessoryView
_rightAccessoryView
_aboveTopCaptionView
_topCaptionView
_bottomCaptionView
_belowBottomCaptionView
_textStackView
unsignedIntValue
fontWithSize:
_preliminary
componentForRow:style:name:
mainFrame
DOMDocument
firstChild
markupString
linkHTMLTextGenerator:URLForResource:withMIMEType:
HTMLFragmentString
HTMLDocumentString
_DOMGenerator
_generatedFragmentText
_generatedDocumentText
_buildViews
_animateToProgressView
_captionView
_progressView
_highlightGestureRecognizer
_wasTapped
_animateOutCompletionHandler
caseInsensitiveCompare:
indexOfObjectPassingTest:
enumerateAttribute:inRange:options:usingBlock:
rangeOfString:options:range:
secondToLastComponentOfStyle:
LPActionDisablingCALayerDelegate
CALayerDelegate
NSObject
LPHTMLComponent
LPExtras
LPCSSText
LPHTMLAttributeText
LPCSSVariable
LPCSSResolver
LPVideoResolver
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
_LPResolver
LPLinkMetadataPreviewTransformerAdaptor
LPLinkMetadataPreviewTransformer
LPiTunesPlaybackInformation
LPEmailCompatibleHTMLCaptionBarComponent
LPStreamingVideoView
LPStreamingVideoMetadataProviderSpecialization
LPImageProperties
NSCopying
LPImage
NSSecureCoding
NSCoding
LPImageRemoteURLRepresentation
LPHTMLQuoteComponent
LPEmailCompatibleHTMLIconComponent
LPLinkHTMLGenerator
LPLinkMetadata
LPIconMetadata
_LPResolvable
LPImageMetadata
LPArtworkMetadata
LPVideoMetadata
LPAudioMetadata
LPSpecializationMetadata
LPiTunesMediaSongMetadata
LPiTunesMediaAlbumMetadata
LPiTunesMediaMusicVideoMetadata
LPiTunesMediaArtistMetadata
LPiTunesMediaPlaylistMetadata
LPiTunesMediaRadioMetadata
LPiTunesMediaSoftwareMetadata
LPiTunesMediaBookMetadata
LPiTunesMediaAudioBookMetadata
LPiTunesMediaPodcastEpisodeMetadata
LPiTunesMediaPodcastMetadata
LPiTunesMediaTVEpisodeMetadata
LPiTunesMediaTVSeasonMetadata
LPiTunesMediaMovieMetadata
LPiCloudSharingMetadata
LPGameCenterInvitationMetadata
LPiCloudFamilyInvitationMetadata
LPAppleTVMetadata
LPHorizontalCaptionPairView
LPTextStyleable
LPContentInsettable
LPCustomLinkMetadata
LPLinkMetadataStatusTransformerAdaptor
LPLinkMetadataStatusTransformer
LPOneShotFetcher
WKNavigationDelegate
Transformer
LPLinkMetadataPresentationTransformerAdaptor
Transformers
LPURLSuffixChecker
LPHTMLVerticalTextStackComponent
LPYouTubeVideoView
LPYouTubePlayerDelegate
LPEmailCompatibleHTMLInnerLinkComponent
LPVideoViewConfiguration
LPVideoView
UIGestureRecognizerDelegate
LPMediaPlayer
LPCaptionPresentationProperties
LPCaptionRowPresentationProperties
LPCaptionBarPresentationProperties
LPSharingMetadataWrapper
LPHTMLGlyphComponent
LPHTMLCaptionBarComponent
LPLinkMetadataStoreTransformerAdaptor
LPSettings
LPHTMLHorizontalCaptionPairComponent
LPiTunesMediaMetadataProviderSpecialization
LPiTunesStoreInformation
LPiTunesMediaLookupItemArtwork
LPHTMLIconComponent
LPiTunesMediaLookupTask
LPHTMLPlaceholderImageGenerator
LPiTunesMediaOffer
LPMediaPlaybackManager
LPHTMLCaptionBarAccessoryComponent
LPVerticalTextStackView
LPiTunesMediaAsset
LPiTunesMediaSongUnresolvedMetadata
LPiTunesMediaUnresolvedMetadata
LPiTunesMediaAlbumUnresolvedMetadata
LPiTunesMediaMusicVideoUnresolvedMetadata
LPiTunesMediaArtistUnresolvedMetadata
LPiTunesMediaPlaylistUnresolvedMetadata
LPiTunesMediaRadioUnresolvedMetadata
LPiTunesMediaSoftwareUnresolvedMetadata
LPiTunesMediaBookUnresolvedMetadata
LPiTunesMediaAudioBookUnresolvedMetadata
LPiTunesMediaPodcastEpisodeUnresolvedMetadata
LPiTunesMediaPodcastUnresolvedMetadata
LPiTunesMediaTVEpisodeUnresolvedMetadata
LPiTunesMediaTVSeasonUnresolvedMetadata
LPiTunesMediaMovieUnresolvedMetadata
LPAnimationMaskView
LPMIMETypeRegistry
LPMetadataProvider
LPMetadataProviderSpecializationDelegate
LPControlsSuppressingAVPlayerViewController
LPFullScreenVideoViewController
LPMetadataProviderSpecialization
Subclassing
LPInternal
LPAppLinkPresentationProperties
LPLinkPresentationPropertyProvider
LPHTMLImageContainerComponent
LPHTMLLinkComponent
DOMEventListener
LPiTunesMediaStorefrontMappings
LPVideoProperties
LPVideo
AVAssetResourceLoaderDelegate
LPAppleTVMetadataProviderSpecialization
LPImageView
LPTextView
LPCaptionBarAccessoryView
LPHTMLVideoComponent
LPEmailCompatibleHTMLLinkComponent
LPPointUnit
LPSize
LPPadding
LPTextViewStyle
LPTextRowStyle
LPVerticalTextStackViewStyle
LPEmailCompatibleCaptionBarItemChild
LPCaptionBarAccessoryStyle
LPImageViewStyle
LPGlyphStyle
LPVideoPlayButtonStyle
LPVideoViewStyle
LPMusicPlayButtonStyle
LPCaptionBarStyle
LPTapToLoadViewStyle
LPThemeParametersObserver
LPTheme
LPPlayButton
LPPlaceholderPlayButton
LPiTunesPreviewPlayButton
LPiTunesPlayButton
MPUNowPlayingDelegate
LPiTunesPlayButtonView
Search
LPLinkViewComponents
LPFlippedView
LPLinkView
CAAnimationDelegate
LPTapToLoadViewDelegate
LPThemeClient
LPComponentView
LPEmailCompatibleHTMLTextComponent
LPiTunesMediaURLComponents
LPYouTubePlayerScriptMessageHandler
WKScriptMessageHandler
LPYouTubePlayerView
UIScrollViewDelegate
LPEmailCompatibleHTMLCaptionBarItemComponent
LPLinkMetadataPresentationTransformer
LPiCloudSharingMetadataProviderSpecialization
LPiTunesMediaLookupItemBranding
LPiTunesMediaAssetCustomResolver
LPStatisticsTimingToken
LPStatistics
LPYouTubeURLComponents
LPPresentationSpecializations
LPHTMLTapToLoadComponent
LPResources
LPTestingOverrides
LPHTMLImageComponent
LPCaptionBarView
LPWebLinkPresentationProperties
LPEmailCompatibleHTMLVerticalTextStackComponent
LPLinkMetadataStoreTransformer
LPLinkHTMLTextGenerator
LPLinkHTMLGeneratorDelegate
LPTapToLoadView
LPHTMLTextComponent
LPEmailCompatibleHTMLCaptionBarRowComponent
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16^{CGContext=}24
@32@0:8@16@24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@24@0:8@16
@40@0:8@16@24@32
v16@0:8
@"NSMutableArray"
@"LPLinkHTMLGenerator"
@"DOMElement"
@"NSString"
@28@0:8@16B24
v32@0:8@16@?24
v56@0:8@16@24@32@40@48
@36@0:8@16#24B32
v40@0:8@16@24@32
v32@0:8@16@24
v20@0:8B16
@"NSMutableDictionary"
@"NSMutableSet"
@"LPTheme"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@40@0:8@16@24@?32
@?16@0:8
v24@0:8@?16
@"<_LPResolvable>"
@"AVURLAsset"
@"NSURLSession"
@"NSMutableData"
@"NSString"24@0:8@"LPLinkMetadataPreviewTransformer"16
@"LPImage"24@0:8@"LPLinkMetadataPreviewTransformer"16
@"LPLinkMetadata"
@"NSURL"
@24@0:8Q16
@"NSArray"
@48@0:8@16@24@32@40
@"LPCaptionBarStyle"
@"LPCaptionBarPresentationProperties"
@56@0:8@16@24@32@40@48
v48@0:8@16@24@32^v40
d16@0:8
v24@0:8d16
@"AVQueuePlayer"
@"AVPlayerLooper"
@"AVPlayerLayer"
@"LPVideoResolver"
@"AVAssetImageGenerator"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8@?16
{CGSize=dd}16@0:8
@"UIImage"
@"NSData"
@"LPImageProperties"
@"NSObject<OS_dispatch_group>"
@32@0:8Q16@24
v28@0:8@16B24
q16@0:8
@"LPMetadataProvider"
@"LPImage"
@"LPVideo"
@"UIColor"
@"LPPointUnit"
@"LPHTMLComponent"
@"LPHTMLVideoComponent"
@"<LPLinkHTMLGeneratorDelegate>"
@"DOMDocument"
@"LPCSSResolver"
I16@0:8
@"LPIconMetadata"
@"LPImageMetadata"
@"LPVideoMetadata"
@"LPSpecializationMetadata"
@32@0:8@16@?24
@"<_LPResolver>"32@0:8@"WKWebView"16@?<v@?@@"<_LPResolvable>">24
@"NSURL"16@0:8
B24@0:8@"NSString"16
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@"NSDictionary"
@"LPArtworkMetadata"
@"NSDate"
v20@0:8I16
v48@0:8{UIEdgeInsets=dddd}16
{CGSize=dd}32@0:8{CGSize=dd}16
{CGSize=dd}36@0:8{CGSize=dd}16B32
@"LPTextView"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v24@0:8@"LPLinkMetadataStatusTransformer"16
@"NSAttributedString"24@0:8@"LPLinkMetadataStatusTransformer"16
@"NSURL"24@0:8@"LPLinkMetadataStatusTransformer"16
@"<LPLinkMetadataStatusTransformerDelegate>"
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v32@0:8q16@24
@"WKWebView"
@"LPWebLinkPresentationProperties"24@0:8@"LPLinkMetadataPresentationTransformer"16
B32@0:8@16^{?=[32{?=SS}]Q}24
B32@0:8@16^@24
^{?=[27S]}
^{CGImage=}16@0:8
@24@0:8^{CGImage=}16
@48@0:8@16@24@32d40
@"LPVerticalTextStackViewStyle"
v32@0:8@16q24
v24@0:8@"LPYouTubePlayerView"16
v32@0:8@"LPYouTubePlayerView"16q24
v32@0:8@"LPYouTubePlayerView"16@"NSError"24
v28@0:8@"LPYouTubePlayerView"16B24
@"LPYouTubePlayerView"
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@"LPVideoViewStyle"
@"LPImageViewStyle"
@"LPVideoViewConfiguration"
@"UIView"
@"UIImageView"
@"CATextLayer"
@"LPFullScreenVideoViewController"
@"UIWindow"
@"LPStatisticsTimingToken"
@"NSAttributedString"
@"NSNumber"
@"LPCaptionPresentationProperties"
v24@0:8q16
@"LPCaptionRowPresentationProperties"
@52@0:8@16@24B32@36@44
@"NSString"24@0:8@"LPLinkMetadataStoreTransformer"16
q24@0:8@16
@"LPiTunesMediaLookupTask"
@"<LPiTunesMediaUnresolvedMetadata>"
Q24@0:8Q16
Q24@0:8@16
v24@0:8Q16
@"SKCloudServiceController"
@"NSMapTable"
@48@0:8q16q24@32@40
@32@0:8{CGSize=dd}16
@"NSHashTable"
@48@0:8q16@24@32@40
@32@0:8@16#24
@"LPSpecializationMetadata"16@0:8
@"NSArray"16@0:8
@"LPiTunesMediaAsset"
v32@0:8@"LPMetadataProviderSpecialization"16@"LPLinkMetadata"24
v32@0:8@"LPMetadataProviderSpecialization"16@"NSError"24
v44@0:8@16I24@28@?36
@"LPMetadataProviderSpecialization"
v40@0:8{CGSize=dd}16@32
v68@0:8{PHDisplayVelocity=dddd}16d48d56B64
v40@0:8@16d24d32
@"LPVideoView"
@"LPControlsSuppressingAVPlayerViewController"
@"UIPanGestureRecognizer"
@"PHSwipeDownTracker"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"CALayer"
@"__AVPlayerLayerView"
@"AVPlayerController"
@"AVPlayer"
@"<LPMetadataProviderSpecializationDelegate>"
@"LPImage"16@0:8
@"LPCaptionBarPresentationProperties"16@0:8
@"LPVideo"16@0:8
@"UIColor"16@0:8
@"NSNumber"16@0:8
@"LPiTunesPlaybackInformation"16@0:8
@24@0:8d16
@40@0:8d16d24d32
v24@0:8@"DOMEvent"16
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
@36@0:8@16@24B32
@"NSObject<OS_dispatch_queue>"
@"LPVideoProperties"
{UIEdgeInsets=dddd}16@0:8
@"UILabel"
@"LPImageView"
@"LPTextViewStyle"
@32@0:8q16q24
@64@0:8@16@24@32@40@48@56
@"DOMHTMLVideoElement"
@"DOMHTMLIFrameElement"
@"WebScriptObject"
{UIEdgeInsets=dddd}24@0:8@16
@"UIFont"
@"LPGlyphStyle"
@"LPPadding"
@"LPPadding"16@0:8
@24@0:8q16
@"LPTextRowStyle"
@"LPSize"
@"LPVideoPlayButtonStyle"
@"CAMediaTimingFunction"
@"LPCaptionBarAccessoryStyle"
@"LPMusicPlayButtonStyle"
@40@0:8q16@24q32
@"LPTapToLoadViewStyle"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
f16@0:8
@"AVPlayerItem"
v32@0:8@16d24
v24@0:8@"MPUNowPlayingController"16
v32@0:8@"MPUNowPlayingController"16@"NSDictionary"24
v28@0:8@"MPUNowPlayingController"16B24
v32@0:8@"MPUNowPlayingController"16d24
v32@0:8@"MPUNowPlayingController"16@"NSString"24
^{_MRSystemAppPlaybackQueue=}16@0:8
@"LPiTunesPlaybackInformation"
@"MPUNowPlayingController"
@"LPPlayButton"
@"LPCaptionBarView"
@"LPComponentView"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v24@0:8@"LPTapToLoadView"16
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48@80
@"LPLinkViewComponents"
@"LPAnimationMaskView"
@"<LPLinkViewDelegate>"
@32@0:8#16@24
@40@0:8#16#24@32
v32@0:8@"WKUserContentController"16@"WKScriptMessage"24
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
@"LPYouTubePlayerScriptMessageHandler"
@"<LPYouTubePlayerDelegate>"
@32@0:8q16^@24
@"CKContainer"
@"LPiTunesMediaAsset"16@0:8
v24@0:8@"LPiTunesMediaAsset"16
@"LPOneShotFetcher"
B32@0:8@16^d24
@"LPiTunesPlayButtonView"
@"LPCaptionBarAccessoryView"
@"LPComponentView<LPTextStyleable>"
@"LPVerticalTextStackView"
@"NSURL"40@0:8@"LPLinkHTMLGenerator"16@"NSData"24@"NSString"32
v32@0:8@"LPLinkHTMLGenerator"16@"LPLinkMetadata"24
@"WebView"
@"<LPLinkHTMLTextGeneratorDelegate>"
@"UILongPressGestureRecognizer"
@"<LPTapToLoadViewDelegate>"
@56@0:8@16@24d32@40@48
MbP?
A333333
<@UUUUUU
&@333333
??5^
??5^
(@777777
B@333333
LPStreamingVideoView<%d> preparing video for looping, bailing (count: video=%lu, audio=%lu)
LPStreamingVideoView<%d> preparing video for looping, bailing (enabled: video=%d, audio=%d)
LPStreamingVideoView<%d> preparing video for looping, bailing (non-numeric end time)
LPStreamingVideoView<%d> preparing video for looping, bailing (end times are identical)
LPStreamingVideoView<%d> preparing video for looping, bailing (end time delta=%f)
LPStreamingVideoView<%d> prepared video for looping (end time delta=%f)
LPStreamingVideoView<%d>: creating player
LPStreamingVideoView<%d>: destroying player
LPStreamingVideoView<%d>: failed to play, will try again later (%@)
LPStreamingVideoView<%d>: retrying playback after failing to play (desiredPlayingState=%d)
LPStreamingVideoView<%d>: explicitly destroying inactive player
Subsampling %g x %g image by %gx
Failed to decode LPLinkMetadata 'specialization2': %@
Failed to decode LPLinkMetadata 'specialization': %@
LPLinkMetadata: Failed to decode: %@
LPOneShotFetcher<%d>: cancelling subresource load due to non-HTTP-family URL
LPOneShotFetcher<%d>: cancelling subresource load due to error status code: %ld
LPOneShotFetcher<%d>: cancelling subresource load due to unknown MIME type: "%@"
LPOneShotFetcher<%d>: cancelling subresource load due to excessive size: %lld
LPLinkMetadataStatusTransformer: replacing scheme (%@) (%@) (%@)
LPiTunesMediaMetadataProviderSpecialization (ID: %@) - Missing value for non-optional entry '%@'.
LPiTunesMediaMetadataProviderSpecialization (ID: %@) - Error looking up identifier from the iTunes store - %@.
LPiTunesMediaMetadataProviderSpecialization (ID: %@) - Response from the iTunes store was null.
LPiTunesMediaMetadataProviderSpecialization (ID: %@) - Failed parsing response dictionary.
LPMetadataProvider<%d>: dealloc
LPMetadataProvider<%d>: start fetching for URL
LPMetadataProvider<%d>: falling back from using existing WKWebView to fetching because of specializations
LPMetadataProvider<%d>: start fetching for WKWebView
LPMetadataProvider<%d>: performing deferred fetch of subresources
LPMetadataProvider<%d>: watchdog timer fired after completion
LPMetadataProvider<%d>: WKWebView loaded, performing metadata extraction
LPMetadataProvider<%d>: switching to specialization due to MIME type
LPMetadataProvider<%d>: switching to specialization due to retrieved metadata
LPMetadataProvider<%d>: generated specialization (%@) due to retrieved metadata
LPMetadataProvider<%d>: fetch cancelled by client
LPMetadataProvider<%d>: watchdog timer fired, cancelling
LPMetadataProvider<%d>: cancelling main resource load due to non-HTTP-family URL
LPMetadataProvider<%d>: cancelling main resource load due to error status code: %ld
LPMetadataProvider<%d>: Cancelling main resource load due to excessive size: %{iec-bytes}lld
LPMetadataProvider<%d>: Cancelling main resource load due to excessive size: %lld
LPMetadataProvider<%d>: Cancelling main resource load due to unknown MIME type: "%@"
LPMetadataProvider<%d>: fetched metadata
LPMetadataProvider<%d>: skipping subresource fetch
LPMetadataProvider<%d>: resolving %lu subresources
LPMetadataProvider<%d>: fetch failed with error code %ld
LPMetadataProvider<%d>: completed (has metadata=%d, has error=%d)
LPMetadataProvider<%d>: completed from specialization
LPMetadataProvider<%d>: specialization failed, retrying without specialization
Video: Failed to create subdata for video request (requestOffset=%ld, requestLength=%ld, availableLength=%ld, requestsAllData=%d): %@
LPLinkView<%d>: laid out to larger than maximum requested size (%g > %g)
LPiCloudSharingMetadata: start (URL=%@)
LPiCloudSharingMetadata: can't use CloudKit, skipping fetch
LPiCloudSharingMetadata: failed with error (%@)
LPiCloudSharingMetadata: starting fetch bundleIDs (container=%@)
LPiCloudSharingMetadata: container fetch failed with error (%@)
LPiCloudSharingMetadata: finished fetching bundleIDs (%@)
LPiCloudSharingMetadata: completed fetches
LPiCloudSharingMetadata: completed using appplication name (%@) and title (%@)
SSURLBag error while fetching branding: %@
//  LinkPresentation
//  Copyright 
 2015-2016 Apple Inc. All rights reserved.
// FIXME: Twitter equivalents?
var MetadataExtractor = {
    doc : undefined,
    responseURL : undefined,
    result : {},
    resolveURL : function (URLString) {
        // Don't absolutize empty strings.
        if (URLString == "" || !URLString)
            return URLString;
        var URL = new window.URL(URLString, this.responseURL);
        return URL.toString();
    },
    extractAndSortIconsWithSelector : function (selector) {
        var extractedIcons = this.doc.head.querySelectorAll(selector);
        if (!extractedIcons.length)
            return [];
        const IconTypeFavicon = 0;
        const IconTypeAppleTouchIcon = 1;
        const IconTypeAppleTouchIconPrecomposed = 2;
        const AppleTouchIconDefaultWidth = 60;
        function getIconType(icon) {
            var iconTypeString = icon.getAttribute("rel");
            if (iconTypeString === "apple-touch-icon")
                return IconTypeAppleTouchIcon;
            if (iconTypeString === "apple-touch-icon-precomposed")
                return IconTypeAppleTouchIconPrecomposed;
            return IconTypeFavicon;
        }
        function compareIconsDescending(icon1, icon2) {
            var icon1Type = getIconType(icon1);
            var icon2Type = getIconType(icon2);
            // Apple Touch icons always come first.
            if (icon1Type === IconTypeFavicon && icon2Type !== IconTypeFavicon)
                return 1;
            if (icon2Type === IconTypeFavicon && icon1Type !== IconTypeFavicon)
                return -1;
            var icon1Size = icon1.getAttribute("sizes");
            var icon2Size = icon2.getAttribute("sizes");
            var icon1Width = 0;
            var icon2Width = 0;
            if (icon1Size)
                icon1Width = parseInt(icon1Size);
            else if (!icon1Size && (icon1Type === IconTypeAppleTouchIcon || icon1Type === IconTypeAppleTouchIconPrecomposed))
                icon1Width = AppleTouchIconDefaultWidth;
            if (icon2Size)
                icon2Width = parseInt(icon2Size);
            else if (!icon2Size && (icon2Type === IconTypeAppleTouchIcon || icon2Type === IconTypeAppleTouchIconPrecomposed))
                icon2Width = AppleTouchIconDefaultWidth;
            if (icon2Width > icon1Width)
                return 1;
            if (icon2Width < icon1Width)
                return -1;
            // A Precomposed icon should come first if both icons have the same size.
            if (icon1Type !== IconTypeAppleTouchIconPrecomposed && icon2Type === IconTypeAppleTouchIconPrecomposed)
                return 1;
            if (icon2Type !== IconTypeAppleTouchIconPrecomposed && icon1Type === IconTypeAppleTouchIconPrecomposed)
                return -1;
            return 0;
        }
        return Array.prototype.slice.call(extractedIcons).sort(compareIconsDescending);
    },
    extractTouchIconURLs : function () {
        var icons = this.extractAndSortIconsWithSelector("link[rel=apple-touch-icon], link[rel=apple-touch-icon-precomposed]");
        var urls = [];
        for (var i = 0; i < icons.length; ++i) {
            var url = icons[i].href;
            if (url)
                urls.push(this.resolveURL(url));
        }
        return urls;
    },
    extractFavIconURLs : function () {
        var icons = this.extractAndSortIconsWithSelector("link[rel=icon], link[rel='shortcut icon']");
        var urls = [];
        for (var i = 0; i < icons.length; ++i) {
            var url = icons[i].href;
            if (url)
                urls.push(this.resolveURL(url));
        }
        return urls;
    }
var propertiesDefinitions = {
    LPMetadataURL : {
        properties : ["og:url"],
        transformationFunction : function(val) { return val ? MetadataExtractor.resolveURL(val) : MetadataExtractor.responseURL; },
    },
    LPMetadataTitle : {
        properties : ["og:title", "twitter:title"],
        transformationFunction : function(val) { return val ? val : MetadataExtractor.doc.title; },
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataDescription : {
        properties : ["og:description", "twitter:description", "Description", "description"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataAppleDescription : {
        properties : ["apple:description"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataSiteName : {
        properties : ["og:site_name"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataItemType : {
        properties : ["og:type"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataRelatedURL : {
        properties : ["og:see_also"],
        transformationFunction : function(val) { return MetadataExtractor.resolveURL(val); },
    },
    LPMetadataCreator : {
        properties : ["author"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataCreatorFacebookProfile : {
        properties : ["article:author"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataCreatorTwitterUsername : {
        properties : ["twitter:creator", "twitter:creator:id"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataAppleContentID : {
        properties : ["apple:content_id"],
    },
    LPMetadataImages : {
        repeatProperties : ["og:image:secure_url", "og:image", "og:image:url", "twitter:image", "image"],
        properties : ["og:image:secure_url", "og:image", "og:image:url", "og:image:width", "og:image:height", "og:image:type", "twitter:image:alt", "twitter:image", "image"],
        children : {
            LPMetadataImageURL : {
                properties : ["og:image:secure_url", "og:image", "og:image:url", "twitter:image", "image"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val); },
            },
            LPMetadataImageWidth : {
                properties : ["og:image:width"],
                transformationFunction : function(val) { return parseInt(val, 10); },
            },
            LPMetadataImageHeight : {
                properties : ["og:image:height"],
                transformationFunction : function(val) { return parseInt(val, 10); },
            },
            LPMetadataImageType : {
                properties : ["og:image:type"],
            },
            LPMetadataImageAccessibilityText : {
                properties : ["twitter:image:alt"],
            }
        },
    },
    LPMetadataVideos : {
        repeatProperties : ["og:video:secure_url", "og:video", "og:video:url"],
        properties : ["og:video:secure_url", "og:video", "og:video:url", "og:video:width", "og:video:height", "og:video:type"],
        children : {
            LPMetadataVideoURL : {
                properties : ["og:video:secure_url", "og:video", "og:video:url"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val) },
            },
            LPMetadataVideoWidth : {
                properties : ["og:video:width"],
                transformationFunction : function(val) { return parseInt(val, 10) },
            },
            LPMetadataVideoHeight : {
                properties : ["og:video:height"],
                transformationFunction : function(val) { return parseInt(val, 10) },
            },
            LPMetadataVideoType : {
                properties : ["og:video:type"],
            },
        },
    },
    LPMetadataStreamingVideos : {
        repeatProperties : ["twitter:player:stream"],
        properties : ["twitter:player:stream", "twitter:player:stream:content_type"],
        children : {
            LPMetadataVideoURL : {
                properties : ["twitter:player:stream"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val) },
            },
            LPMetadataVideoType : {
                properties : ["twitter:player:stream:content_type"],
            },
        }
    },
    LPMetadataAudios : {
        repeatProperties : ["og:audio:secure_url", "og:audio", "og:audio:url"],
        properties : ["og:audio:secure_url", "og:audio", "og:audio:url", "og:audio:type"],
        children : {
            LPMetadataAudioURL : {
                properties : ["og:audio:secure_url", "og:audio", "og:audio:url"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val) },
            },
            LPMetadataAudioType : {
                properties : ["og:audio:type"],
            },
        }
    }
function propertyDefinitionNameForProperty(key)
    for (var propertyDefinitionName in propertiesDefinitions) {
        if (!propertiesDefinitions[propertyDefinitionName].properties.includes(key))
            continue;
        return propertyDefinitionName;
    }
    return undefined;
function resolvePropertyWithDefinition(result, values, propertyDefinition, propertyDefinitionName)
    var value = undefined;
    for (var propertyName of propertyDefinition.properties)
    {
        value = values[propertyName];
        if (value)
            break;
    }
    var transformationFunction = propertyDefinition.transformationFunction;
    if (transformationFunction)
        value = transformationFunction(value);
    if (propertyDefinition.stripLeadingAndTrailingWhitespace) {
        if (typeof value == "string")
            value = value.trim();
    }
    if (value)
        result[propertyDefinitionName] = value;
function resolveProperties(result, collectedValues, definitions)
    for (var propertyDefinitionName in definitions) {
        var propertyDefinition = definitions[propertyDefinitionName];
        if (!propertyDefinition)
            continue;
        resolvePropertyWithDefinition(result, collectedValues, propertyDefinition, propertyDefinitionName);
    }
function resolveRepeatedProperty(collectedValues, repeatedPropertyName)
    var result = {};
    resolveProperties(result, collectedValues, propertiesDefinitions[repeatedPropertyName].children)
    if (!MetadataExtractor.result.hasOwnProperty(repeatedPropertyName))
        MetadataExtractor.result[repeatedPropertyName] = [];
    MetadataExtractor.result[repeatedPropertyName].push(result);
function hasAnyKeysNotInArray(dict, arr)
    for (var key in dict) {
        if (!arr.includes(key))
            return true;
    }
    return false;
function decodeHTMLEntities(rawString)
    var el = document.createElement("textarea");
    el.innerHTML = rawString;
    return el.value;
function parseMetaTags()
    var allMetaElements = MetadataExtractor.doc.getElementsByTagName("meta");
    var rootCollectedValues = {};
    var childCollectedValues = {};
    for (var i = 0; i < allMetaElements.length; i++) {
        var el = allMetaElements[i];
        var property = el.getAttribute("property") || el.getAttribute("name") || el.getAttribute("itemprop");
        var content = el.content;
        if (!property || !content)
            continue;
        var propertyDefinitionName = propertyDefinitionNameForProperty(property);
        if (!propertyDefinitionName)
            continue;
        var propertyDefinition = propertiesDefinitions[propertyDefinitionName];
        if (!propertyDefinition)
            continue;
        if (propertyDefinition.decodeHTMLEntities)
            content = decodeHTMLEntities(content);
        if (!propertyDefinition.hasOwnProperty("repeatProperties")) {
            // Not a repeating property, so take the first value.
            if (!rootCollectedValues.hasOwnProperty(property))
                rootCollectedValues[property] = content;
        } else {
            // A repeating property.
            if (propertyDefinition.repeatProperties.includes(property)) {
                var collectedValuesForProperty = childCollectedValues[propertyDefinitionName];
                if (collectedValuesForProperty && (hasAnyKeysNotInArray(collectedValuesForProperty, propertyDefinition.repeatProperties) || Object.keys(collectedValuesForProperty).includes(property))) {
                    resolveRepeatedProperty(collectedValuesForProperty, propertyDefinitionName);
                    childCollectedValues[propertyDefinitionName] = {};
                }
            }
            if (!childCollectedValues.hasOwnProperty(propertyDefinitionName))
                childCollectedValues[propertyDefinitionName] = {};
            childCollectedValues[propertyDefinitionName][property] = content;    
        }
    }
    for (var propertyDefinitionName in childCollectedValues)
        resolveRepeatedProperty(childCollectedValues[propertyDefinitionName], propertyDefinitionName);
    resolveProperties(MetadataExtractor.result, rootCollectedValues, propertiesDefinitions);
function fetchMetadataForMainFrame()
    MetadataExtractor.responseURL = window.location.href;
    MetadataExtractor.doc = document;
    try {
        parseMetaTags();
        var touchIcons = MetadataExtractor.extractTouchIconURLs();
        var favIcons = MetadataExtractor.extractFavIconURLs();
        // FIXME: We should also support the device-specific touch icons that MobileSafari fetches.
        var potentialImplicitTouchIcons = [MetadataExtractor.resolveURL("/apple-touch-icon-precomposed.png"), MetadataExtractor.resolveURL("/apple-touch-icon.png")];
        var potentialImplicitFavIcons = [MetadataExtractor.resolveURL("/favicon.ico")];
        MetadataExtractor.result["LPMetadataIcons"] = touchIcons.concat(potentialImplicitTouchIcons).concat(favIcons).concat(potentialImplicitFavIcons);
        MetadataExtractor.result["LPMetadataSelectedText"] = window.getSelection().toString();
        return MetadataExtractor.result;
    } catch(e) {
        return { error: "Exception: " + e };
    }
fetchMetadataForMainFrame()
