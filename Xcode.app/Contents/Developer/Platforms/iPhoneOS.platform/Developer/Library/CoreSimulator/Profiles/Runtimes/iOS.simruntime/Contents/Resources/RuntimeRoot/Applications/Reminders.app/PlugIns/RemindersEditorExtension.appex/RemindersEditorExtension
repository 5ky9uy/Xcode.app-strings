priority
calendar
class
isKindOfClass:
source
sourceType
_imagePaddedByInsets:
stringWithFormat:
imageNamed:inBundle:
alloc
initWithControlPoints::::
currentDevice
userInterfaceIdiom
mainScreen
bounds
traitCollection
preferredContentSizeCategory
scale
blackColor
CGColor
setBackgroundColor:
setOpacity:
animationWithKeyPath:
numberWithDouble:
setToValue:
setDuration:
setAutoreverses:
setRepeatCount:
imageNamed:
size
drawInRect:
layer
animationForKey:
addTranslationSpringWithMass:stiffness:damping:startTime:velocity:timing:delegate:
setVelocity:
setRemovedOnCompletion:
setMass:
setStiffness:
setDamping:
valueForKey:
setFromValue:
setFillMode:
setTimingFunction:
setBeginTime:
durationForEpsilon:
setDelegate:
addAnimation:forKey:
presentationLayer
addTransformSpringWithMass:stiffness:damping:startTime:timing:
translationAnimation
addDefaultTranslationSpringWithVelocity:startTime:
addDefaultTranslationSpringWithVelocity:startTime:delegate:
addTranslationSpringWithMass:stiffness:damping:startTime:timing:delegate:
addTransformAnimationWithStartTime:duration:timing:
addDefaultTransformSpringWithStartTime:
addTranslationAnimationWithStartTime:duration:timing:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
addEqualsConstraintWithItem:attribute:relatedTo:constant:
_graphicsQuality
standardUserDefaults
boolForKey:
objectForKey:
intValue
preferredFontForTextStyle:symbolicTraits:options:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
numberWithInt:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
sharedApplication
traitCollectionWithPreferredContentSizeCategory:
preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:
constrainedBodyFont
constrainedCaption2Font
preferredFontForTextStyle:symbolicTraits:
preferredFontForTextStyle:minimumContentSizeCategory:maximumContentSizeCategory:
init
navigationItem
mainBundle
localizedStringForKey:value:table:
setTitle:
initWithFrame:style:
setDataSource:
preferredFontForTextStyle:
_scaledValueForValue:
setEstimatedRowHeight:
setRowHeight:
setView:
indexPathForRow:inSection:
calculatePreferredContentSize
numberOfSections
rectForSection:
frame
isEqual:
_recurrenceCellForIndexPath:
setChecked:
reloadData
_checkItemAtIndexPath:
recurrenceRule
reminderDate
cellForRowAtIndexPath:
initWithStyle:reuseIdentifier:
textLabel
setFont:
section
setText:
setAccessoryType:
useClearBackground
clearColor
navigationController
navigationBar
sectionHeaderHeight
setRecurrenceRuleFromRepeatType:
repeatType
recurrenceTypeViewController:didChooseRepeatType:
reminderTimeZone
initWithStartDate:timeZone:clearBackground:
setCustomRecurrenceViewController:
constraints
customRecurrenceViewController
prohibitsMultipleDaysInMonthlyRecurrence
setProhibitsMultipleDaysInMonthlyRecurrence:
prohibitsMultipleMonthsInYearlyRecurrence
setProhibitsMultipleMonthsInYearlyRecurrence:
prohibitsYearlyRecurrenceInterval
setProhibitsYearlyRecurrenceInterval:
setRecurrenceRule:
recurrenceRuleWithType:interval:end:
delegate
setCompletionBlock:
pushViewController:animated:
deselectRowAtIndexPath:animated:
_updateRecurrenceType
initRecurrenceWithFrequency:interval:end:
setRepeatType:
dueDate
dueDateComponents
timeZone
recurrenceRules
getRepeatTypeForReminder:customRepeatString:repeatEnd:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
loadView
viewDidUnload
preferredContentSize
.cxx_destruct
setSource:
setReminderDate:
setReminderTimeZone:
setUseClearBackground:
summaryString
setSummaryString:
_table
_repeatType
_originalRepeatType
_checkedItem
_useClearBackground
_delegate
_recurrenceRule
_source
_reminderDate
_reminderTimeZone
_customRecurrenceViewController
_summaryString
kitImageNamed:
keyColor
initWithImage:
setAlpha:
setOrigin:
contentView
addSubview:
setSeparatorInset:
layoutSubviews
setFrame:
isChecked
_checkmarkView
_checked
isImmutable
isMarkedUndeletable
allowsCalendarAddDeleteModify
calendarsForEntityType:
count
type
sources
countByEnumeratingWithState:objects:count:
allowsTasks
isEnabled
canBeDeleted:
sizeThatFits:
setAdjustsFontSizeToFitWidth:
setMinimumScaleFactor:
detailTextLabel
updateFromReminder
initWithNewReminder:
setKeyboardDismissMode:
expandingTextView
title
setTextColor:
setMinimumHeight:
priorityPicker
_priorityChanged:
addTarget:action:forControlEvents:
notes
defaultCenter
handleKeyboardWillShow:
addObserver:selector:name:object:
handleKeyboardDidShow
handleKeyboardWillHide:
_storeChanged:
isNew
becomeFirstResponder
createDatePickerCell
removeObserver:
viewDidLayoutSubviews
popoverPresentationController
setPopoverContentSize:
datePicker
datePickerChanged:
initWithCalendarIdentifier:
dateFromComponents:
remindersDetailEditorSelectedCalendarDidChange:
hasAlarms
bestDisplayAlarm
isAbsolute
absoluteDate
structuredLocation
proximity
compare:
hasRecurrenceRules
lastObject
action
endEditing:
setCalendar:
eventStore
setTimeZone:
components:fromDate:
setDueDateComponents:
setStartDateComponents:
copy
removeAllSnoozedAlarms
removeAlarm:
setRecurrenceRules:
alarmWithAbsoluteDate:
alarmWithRelativeOffset:
setStructuredLocation:
setProximity:
recurrenceEndWithEndDate:
setRecurrenceEnd:
supportsAlarmProximity
relativeOffset
addAlarm:
setAction:
saveReminder:commit:error:
initWithFrame:
setOn:
onADayToggled:
indexPathForEditorRow:
atALocationToggled:
initWithProximity:structuredLocation:
locationEditorDone
initWithBarButtonSystemItem:target:action:
setRightBarButtonItem:
interfaceIdiomToUse
userInfo
CGRectValue
convertRect:toView:
contentInset
setContentInset:
setScrollIndicatorInsets:
isFirstResponder
scrollToRowAtIndexPath:atScrollPosition:animated:
resignFirstResponder
_showingTitle
_showingLocationSwitch
_showingActionSwitch
_showingAction
_editorSectionForTableSection:
_showingAlarm
_showingDueDate
_showingRepeat
_showingEndRepeat
_showingLocation
_showingDelay
_showingListChooser
_showingActionURL
_editorRowForIndexPath:
dequeueReusableCellWithIdentifier:
setAccessoryView:
editableTextField
setReturnKeyType:
colorWithWhite:alpha:
setSelectionStyle:
accessoryView
shortDateString:
targetEditorRow
formatCellForDatePicker:
locationString
actionToggled:
scheme
isEqualToString:
imageView
setImage:
resourceSpecifier
componentsSeparatedByString:
firstObject
lastPathComponent
stringByReplacingPercentEscapesUsingEncoding:
phoneNumberWithStringValue:
formattedStringValue
absoluteString
setPriority:
view
_inheritedInteractionTintColor
setColor:
text
desiredHeight
dismissInlineDatePicker
dismissKeyboard
setTargetEditorRow:
setDate:
moveRowAtIndexPath:toIndexPath:
reloadRowsAtIndexPaths:withRowAnimation:
insertRowsAtIndexPaths:withRowAnimation:
setEdgesForExtendedLayout:
initWithEndDate:repeatType:firstAlertDate:clearBackground:
setPreferredContentSize:
initWithEventStore:style:
whiteColor
selectCalendar:
indexPathForSelectedRow
deleteRowsAtIndexPaths:withRowAnimation:
_updateCustomRepeatCell
popToViewController:animated:
areAnimationsEnabled
setAnimationsEnabled:
beginUpdates
endUpdates
isEqualToDate:
_updateTableRowHeights
setNeedsUpdateConstraints
selectedCalendar
rectForRowAtIndexPath:
scrollRectToVisible:animated:
setNotes:
length
rightBarButtonItem
setEnabled:
newlineCharacterSet
stringByReplacingCharactersInSet:withCharacter:
URLWithString:
isOn
defaultAlarmDate
array
_tableSectionForEditorSection:
addObject:
date
_editorRowInTimeSection:
_editorRowInLocationSection:
_editorRowInActionSection:
_editorRowInMoreSection:
tableRowInTimeSection:
tableRowInLocationSection:
tableRowInActionSection:
tableRowInMoreSection:
areLocationsAvailable
readWriteCalendarCountForEntityType:
dateByAddingTimeInterval:
geoLocation
humanReadableContactString
currentLocale
dateFormatFromTemplate:options:locale:
setDateFormat:
stringFromDate:
colorWithRed:green:blue:alpha:
longDateString:
setNeedsLayout
objectID
containsObject:
refresh
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldShouldClear:
textFieldShouldReturn:
endRepeatController:didSelectDate:
locationEditor:didChangeProximity:
locationEditor:didChangeLocation:
listPickerDidChangeSelectedCalendar:
listPickerDidSelect:
listPickerDidEditCalendars:
actionEditor:didChangeURL:
textViewShouldBeginEditing:
textViewShouldEndEditing:
textViewDidBeginEditing:
textViewDidEndEditing:
textView:shouldChangeTextInRange:replacementText:
textViewDidChange:
textViewDidChangeSelection:
textView:shouldInteractWithURL:inRange:interaction:
textView:shouldInteractWithTextAttachment:inRange:interaction:
textView:shouldInteractWithURL:inRange:
textView:shouldInteractWithTextAttachment:inRange:
commandI:
textViewDidChangeContentHeight:
initWithReminder:
initForShareExtensionWithReminder:
viewDidAppear:
viewWillDisappear:
saveReminderIfNeeded
showAlarmDate
showAlarmLocation:
reminder
_reminder
_tableView
_titleCell
_priorityCell
_notesCell
_datePickerCell
_needsSave
_showingTime
_showingInlineDatePicker
_inlineDatePickerIndexPath
_dueDate
_alarmDate
_alarmLocation
_customRepeatString
_repeatEnd
_proximity
_calendar
_actionURL
_editingTextField
_isInShareExtension
_locationEditorDoneBlock
setDatePickerMode:
setMinuteInterval:
_datePicker
_targetEditorRow
initWithItems:
setApportionsSegmentWidthsByContent:
setWidth:forSegmentAtIndex:
_flatImageWithColor:
setImage:forSegmentAtIndex:
selectedSegmentIndex
setSelectedSegmentIndex:
_shouldPlacePriorityPickerBelowLabel
convertRect:fromView:
_shouldReverseLayoutDirection
_priorityPicker
setNumberOfLines:
setAdjustsFontForContentSizeCategory:
setScrollEnabled:
font
contentRectForState:
_heightNeededForContentWidth:
minimumHeight
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
verticalPadding
setVerticalPadding:
_expandingTextView
_verticalPadding
_minimumHeight
canAddList
_isNonEmpty
dictionary
readWriteCalendarsForEntityType:
sharedCalendarInvitationsForEntityTypes:
defaultCalendarForNewReminders
localSource
stringWithUTF8String:
calendarForEntityType:eventStore:
saveCalendar:commit:error:
enumerateKeysAndObjectsUsingBlock:
sortedGroupsOfCalendarsInEventStore:includingInvitations:
initWithSource:
sortOrder
canDeleteList
shouldShowWhenEditingLists
shouldShowWhenViewingLists
calendarArray
_array
sourceIdentifier
setObject:forKey:
isSharingInvitation
location
isLocationBeingDetermined
stringByAppendingFormat:
addressBookEntityID
setIsLocationBeingDetermined:
setLocation:
setAddressDictionary:
label
stringForSubtitle
reset
addressDictionary
setType:
_isLocationBeingDetermined
_type
_location
_addressDictionary
setNetworkActivityIndicatorVisible:
useMeCard
descriptorForRequiredKeysForStyle:
_ios_meContactWithKeysToFetch:error:
postalAddresses
value
addressBookDictionaryRepresentation
cachedLocationForAddressDictionary:
stringFromPostalAddress:style:
locationWithTitle:
setAddressBookEntityID:
_geocodeItem:
_giveUpGettingCurrentLocation
cancelPreviousPerformRequestsWithTarget:selector:object:
dealloc
locationPickerModelDidChangeSelection:
locationPickerModelDidUpdateCurrentLocation:
locationPickerModel:didUpdateMeCardItem:
locationPickerModelDidUpdateCustomLocation:
locationPickerModel:didEncounterError:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dictionaryWithCapacity:
radius
unarchiveObjectWithData:
arrayWithCapacity:
removeLastObject
insertObject:atIndex:
archivedDataWithRootObject:
objectAtIndex:
isEqualToDictionary:
timeIntervalSinceDate:
removeObjectAtIndex:
doubleValue
setRadius:
setGeoLocation:
_reverseGeocodeCurrentLocation
_isGeocoding
currentLocationItem
_beginOperation
code
postalAddressWithAddressBookDictionaryRepresentation:
_didEncounterError:
_didUpdateCurrentLocationItem
customLocationItem
_didUpdateCustomLocationItem
isCustomLocationSelected
selectCurrentLocation
_endOperation
_startNextGeocoderOperation
reverseGeocodeLocation:completionHandler:
shiftLocation:withCompletionHandler:
setItemBeingGeocoded:
region
center
initWithLatitude:longitude:
referenceFrame
setReferenceFrame:
_cacheLocation:forAddressDictionary:
indexOfObject:
_didUpdateMeCardItem:
initWithCapacity:
_handleCompletedGeocodeWithPlacemarks:error:
geocodeAddressDictionary:completionHandler:
geocodeAddressString:completionHandler:
_endUpdatingCurrentLocation
_cancelUpdatingCurrentLocation
reloadMeCardLocationItems
performSelector:withObject:afterDelay:
startUpdatingLocationWithPrompt
_handleGeocodingAllItems
selectMeCardItem:
setCustomLocation:withAddressDictionary:
selectCustomLocation
selectLocation:withAddressDictionary:
meCardItemAtIndex:
carLocationItem
_didChangeSelection
_killTimer
stopUpdatingLocation
horizontalAccuracy
_stringForAuthorizationStatus:
areLocationsAllowedWithAuthorizationStatus:
startUpdatingLocationItemsIfNecessary
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
addDelegate:
removeDelegate:
selectLocation:
selectedLocationItem
numberOfPossibleLocationItems
isCurrentLocationSelected
isCarLocationSelected
selectedMeCardItem
numberOfMeCardItems
selectCarLocation
meCardIsSet
setUseMeCard:
setCustomLocationItem:
itemBeingGeocoded
_geocoder
_locationManager
_needsUpdate
_isReverseGeocoding
_locationItemsForMe
_meCardIsSet
_operationCount
_delegates
_itemsQueuedForGeocoding
_isReverseGeocodingQueued
_selectedMeCardItem
_selectedItemType
_useMeCard
_currentLocationItem
_customLocationItem
_itemBeingGeocoded
dateWithTimeIntervalSinceNow:
arrayWithObject:
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
setNumberStyle:
numberWithInteger:
stringFromNumber:
allowedEntityTypes
alertControllerWithTitle:message:preferredStyle:
setPreferredStyle:
actionWithTitle:style:handler:
addAction:
titleString
setAddresses:
supportsPhoneNumbers
setAutoresizingMask:
preferredHeight
composeLabel
setLabel:
defaultHeight
statusBar
currentHeight
statusBarOrientation
defaultSizeForInterfaceOrientation:
beginAnimations:
endAnimations
_searchResultsView
superview
_shadowView
setSeparatorHidden:
_searchManager
cancelTaskWithID:
removeFromSuperview
defaultSize
allowPhoneNumbers
initWithAutocompleteSearchType:
setSearchTypes:
setSearchAccountIDs:
removeAllObjects
searchForText:withAutocompleteFetchContext:consumer:
isEqualToNumber:
addObjectsFromArray:
_showSearchField
stringByAppendingString:
arrayByAddingObject:
predicateWithFormat:
setPredicateForEnablingContact:
setPredicateForSelectionOfContact:
setPredicateForSelectionOfProperty:
setDisplayedPropertyKeys:
setModalPresentationStyle:
presentModalViewController:withTransition:
dismissViewControllerAnimated:completion:
isPhoneNumber
CalendarComposeRecipientClass
initWithContact:address:kind:
removeRecipient:
recipients
controller:didUpdateRecipients:
clearText
_hideSearchFieldAndCancelOutstandingSearches:
addAddress:
setAddressAtomPresentationOptions:forRecipient:
searchWithText:
addButton
setAnimationDelegate:
setContentSize:
_maxScrollerHeight
identifier
cellForRecipient:
recipient
setRecipient:
initWithComposeRecipient:
addRecipient:
height
emailAddresses
objectAtIndexedSubscript:
phoneNumbers
stringValue
recipientFromContact:
composeRecipientViewDidFinishPickingRecipient:
addContact:
contact
textField
pickerPrompt
composeHeaderViewDidChangeValue:
composeHeaderViewDidConfirmValue:
composeHeaderViewClicked:
composeHeaderView:didChangeSize:
composeRecipientView:didAddRecipient:
composeRecipientView:didFinishEnteringAddress:
composeRecipientView:didRemoveRecipient:
composeRecipientView:didReplaceRecipients:withRecipients:
composeRecipientView:didChangeSize:
composeRecipientView:textDidChange:
recipientViewDidBecomeFirstResponder:
recipientViewDidResignFirstResponder:
recipientViewShouldIgnoreFirstResponderChanges:
composeRecipientViewRequestAddRecipient:
composeRecipientView:showPersonCardForAtom:
composeRecipientView:showPersonCardForRecipient:
composeRecipientView:showCorecipients:
composeRecipientView:composeRecipientForAddress:
composeRecipientView:composeRecipientForRecord:identifier:
composeRecipientView:composeRecipientForRecord:property:identifier:
composeRecipientViewReturnPressed:
composeRecipientViewDidBecomeFirstResponder:
composeRecipientViewShowingSearchResults:
presentSearchResultsForComposeRecipientView:
dismissSearchResultsForComposeRecipientView:
selectNextSearchResultForComposeRecipientView:
selectPreviousSearchResultForComposeRecipientView:
chooseSelectedSearchResultForComposeRecipientView:
consumeAutocompleteSearchResults:taskID:
finishedSearchingForAutocompleteResults
consumeCorecipientSearchResults:taskID:
finishedSearchingForCorecipients
finishedTaskWithID:
beganNetworkActivity
endedNetworkActivity
consumeSearchResults:type:taskID:
finishedSearchingForType:
contactPickerDidCancel:
contactPicker:didSelectContact:
contactPicker:didSelectContactProperty:
contactPicker:didSelectContacts:
contactPicker:didSelectContactProperties:
initWithCalendar:
animationDidStop:
commit
searchAccountID
setSearchAccountID:
_composeView
_composeScrollView
_showingSearchField
_searchResults
_displayedResults
_lastSearchId
_ABAccessDenied
_calendarAllowsPhoneNumbers
_searchAccountID
recipientsAsContacts
setRecipentsFromContacts:
setEventStore:
reminderWithEventStore:
viewWillAppear:
bundleForClass:
setPostButtonTitle:
_addItemToLoad
extensionContext
inputItems
attributedContentText
string
attachments
hasItemConformingToTypeIdentifier:
initWithFormat:
_finishedLoadingItem
loadItemForTypeIdentifier:options:completionHandler:
_lp_simplifiedDisplayString
_initWithUserActivityData:
updateWithAppLink:usedSelectedText:
contentText
textView
setValue:
pushConfigurationViewController:
setTapHandler:
addToScalar:value:domain:
appLink
completeRequestReturningItems:completionHandler:
presentationAnimationDidFinish
configurationItems
didSelectPost
didSelectCancel
isContentValid
_editor
_numItemsToLoad
_optionsConfigurationItem
circleWithCenterCoordinate:radius:
setBoundingRect:
boundingMapRect
circleWithCenterCoordinate:radius:boundingMapRect:
innerCircleBoundingMapRect
boundingRect
_boundingRect
rectForMapRect:
fillColor
fillPath:inContext:
_allowsSearching
updateRecents:
sharediCloudKVStore
hasConnectedToCarBluetooth
setTranslatesAutoresizingMaskIntoConstraints:
setAutocorrectionType:
setPlaceholder:
setTextContentType:
tableOutlineColorDarkenedIfNeeded
_updateUI
selectRowAtIndexPath:animated:scrollPosition:
recentForLocation:withAddressString:andTitle:
defaultInstance
recordContactEvents:recentsDomain:sendingAddress:userInitiated:
annotations
removeAnnotations:
overlays
removeOverlays:
setupMap
_updateMapHeight
scrollToNearestSelectedRowAtScrollPosition:animated:
visibleMapRect
coordinate
defaultGeofencedReminderRadius
regionThatFits:
setRegion:animated:
setCoordinate:
setRepresentation:
addAnnotation:
overlayWithCenterCoordinate:radius:
addOverlay:
selectAnnotation:animated:
displayLocation:
removeConstraints:
mapHeight
addConstraints:
setConstant:
_hasLocation
_createProximityControlIfNeeded
setBorderWidth:
setBorderColor:
setPitchEnabled:
setRotateEnabled:
setMapView:
setTitle:forSegment:
maxPublicProximity
selectSegment:
_updateLayoutContraints
_proximityChanged:
_setAutosizeText:
setContentPositionAdjustment:forSegmentType:barMetrics:
orPredicateWithSubpredicates:
andPredicateWithSubpredicates:
frecencyComparator
arrayWithArray:
requestRecentsUsingPredicate:inDomains:comparator:queue:completion:
isDragging
selectedSegment
removeOverlay:
areVehicleTriggersEnabled
_showCarOptions
setOpaque:
locationImage
homeImage
workImage
pinImage
carImage
displayName
address
name
placemark
_updateSelectedRemindersLocationWithAddressDictionary:
locationForRecent:
_handle
setMapKitHandle:
removeRecentContacts:error:
cancel
resetSearchResults
initWithDelegate:
request
setSearchString:
setSearchType:
setIncludeContacts:
scheduleFetchRequest:
setNaturalLanguageQuery:
setRegion:
initWithRequest:
mapItems
startWithCompletionHandler:
contactWithKeysToFetch:error:
setAddress:
removeHandle:
addHandleForAnnotation:withOverlay:
rendererForOverlay:
setNeedsDisplay
initWithCircle:
systemBlueColor
setStrokeColor:
colorWithAlphaComponent:
setFillColor:
setLineWidth:
positionForBar:
searchBarShouldBeginEditing:
searchBarTextDidBeginEditing:
searchBarShouldEndEditing:
searchBarTextDidEndEditing:
searchBar:textDidChange:
searchBar:shouldChangeTextInRange:replacementText:
searchBarSearchButtonClicked:
searchBarBookmarkButtonClicked:
searchBarCancelButtonClicked:
searchBarResultsListButtonClicked:
searchBar:selectedScopeButtonIndexDidChange:
autocompleteFetch:didReceiveResults:
autocompleteFetch:didFailWithError:
autocompleteFetchDidFinish:
autocompleteFetchDidBeginNetworkActivity:
autocompleteFetchDidEndNetworkActivity:
autocompleteFetch:shouldExpectSupplementalResultsForRequest:completionHandler:
autocompleteFetch:willAdjustResults:
autocompleteFetch:willSortResults:
resultComparatorForAutocompleteFetch:
mapView:regionWillChangeAnimated:
mapView:regionDidChangeAnimated:
mapViewWillStartLoadingMap:
mapViewDidFinishLoadingMap:
mapViewDidFailLoadingMap:withError:
mapViewWillStartRenderingMap:
mapViewDidFinishRenderingMap:fullyRendered:
mapView:viewForAnnotation:
mapView:didAddAnnotationViews:
mapView:annotationView:calloutAccessoryControlTapped:
mapView:didSelectAnnotationView:
mapView:didDeselectAnnotationView:
mapViewWillStartLocatingUser:
mapViewDidStopLocatingUser:
mapView:didUpdateUserLocation:
mapView:didFailToLocateUserWithError:
mapView:annotationView:didChangeDragState:fromOldState:
mapView:didChangeUserTrackingMode:animated:
mapView:rendererForOverlay:
mapView:didAddOverlayRenderers:
mapView:viewForOverlay:
mapView:didAddOverlayViews:
mapView:clusterAnnotationForMemberAnnotations:
_mapView:willDeselectAnnotationView:
_mapView:willDeselectLabelMarker:
mapViewWillEnterAR:
mapViewDidEnterAR:
mapViewDidExitAR:
mapView:didEncounterARError:
mapView:arTrackingStateDidChange:reason:
mapView:shouldDelayTapResponse:onAnnotationView:forDuration:
mapView:didChangeUserTrackingMode:animated:fromTrackingButton:
mapViewDidFinishInitialUserTrackingModeAnimation:
mapView:didChangeMapType:
mapView:shouldReceiveTouch:
mapView:shouldSelectLabelMarker:
mapView:didSelectLabelMarker:
mapView:didDeselectLabelMarker:
mapView:labelMarker:calloutAccessoryControlTapped:
mapViewShouldHandleTapToDeselect:
mapViewWillAnimateInAnnotationViews:
mapViewDidAnimateInAnnotationViews:
_mapView:calloutDidAppearForAnnotationView:
mapView:canZoomInDidChange:
mapView:canZoomOutDidChange:
mapView:didBecomePitched:
mapView:canEnter3DModeDidChange:
mapView:canShowFlyoverDidChange:
mapView:showingFlyoverDidChange:
mapViewDidChangeVisibleRegion:
mapViewWillStartFlyoverTour:
mapView:didStopFlyoverTourCompleted:
mapView:flyoverTourLabelDidChange:
mapView:flyoverModeDidChange:
mapView:flyoverModeWillChange:
mapViewDidStartUserInteraction:
mapViewDidStopUserInteraction:
mapView:willStartRespondingToGesture:animated:
mapView:didStopRespondingToGesture:zoomDirection:zoomGestureType:didDecelerate:tiltDirection:
mapView:focusPointForPoint:gesture:
mapViewDidFinishCalloutExpansion:
mapViewCurrentRouteMatch:
mapViewNavigationCameraHasStartedPanning:
mapViewNavigationCameraHasStoppedPanning:
mapViewNavigationCameraDidLeaveDefaultZoom:
mapViewNavigationCameraDidReturnToDefaultZoom:
mapView:calloutPrimaryActionTriggeredForLabelMarker:
mapView:calloutPrimaryActionTriggeredForAnnotationView:
mapView:didChangeFocusedVenue:focusedBuilding:
mapView:didChangeDisplayedFloorOrdinal:forVenue:
mapView:didUpdateYaw:
mapView:didStopRespondingToGesture:zoomDirection:didDecelerate:tiltDirection:
radiusDidChange:
boundingMapRectForOverlay:
overlayForRadius:
_searchBar
_dividerView
_proximityControl
_proximityControlBackground
_mapView
_dragView
_constraints
_selectedLocationAddressString
_structuredLocation
_model
_locationShifter
_needsAddToRecents
_recents
_locationSearch
_locationSearchResults
_autocompleteStore
_contactsResults
_currentSearch
_everConnectedToCar
_mapHeightConstraint
setHandleImageView:
handleImageView
setZPosition:
mapView
annotation
convertCoordinate:toPointToView:
transform
valueWithCATransform3D:
arrayWithObjects:
setValues:
numberWithFloat:
setKeyTimes:
functionWithName:
setTimingFunctions:
bezierPath
setLineDash:count:phase:
setLineCapStyle:
moveToPoint:
addLineToPoint:
stroke
setLineDashPattern:
setLineCap:
setStrokeStart:
setStrokeEnd:
setShapeLayer:
bezierPathWithEndPoint:
shapeLayer
CGPath
setPath:
superlayer
addSublayer:
setCenter:
overlay
convertRegion:toRectToView:
shapeLayerWithEndPoint:
popAnimateHandle
animateWithDuration:animations:completion:
setAnnotation:
setOverlay:
animateHandleIn:
removeFromSuperlayer
drawRect:
currentHandleDistanceNormalized
isMinimum
minimumRadiusNormalized
isMaximum
maximumRadiusNormalized
numberWithUnsignedInteger:
localizedStringFromNumber:numberStyle:
usesMetric
setAlignment:
drawWithRect:options:attributes:context:
setIsDragging:
setHighlighted:
setZoomEnabled:
anyObject
locationInView:
minPoint
maxPoint
setIsMinimum:
setIsMaximum:
minimumInMeters
currentHandleDistance
resizeCircleAfterDelay
feetToMeters:
convertPoint:toCoordinateFromView:
distanceFromLocation:
boolValue
hitTest:withEvent:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
_isDragging
_isMinimum
_isMaximum
_handleImageView
_annotation
_overlay
_shapeLayer
rootViewController
isInSizeTransition
transitionToHorizontalSizeClass
transitionToVerticalSizeClass
horizontalSizeClass
verticalSizeClass
setRootViewController:
tableOutlineColor
displayColorArray
getRed:green:blue:alpha:
listColorForCalendarColor:
displayColorForListColor:
drawAtPoint:
defaultLetterpressStyle
getHue:saturation:brightness:alpha:
colorWithHue:saturation:brightness:alpha:
overdueRedColor
tableCellSelectedGrayColor
tableChevronSelectedColor
tableChevronColor
colorNameForListColor:
displayColorForCalendarColor:
colorDotForListColor:
colorWellForListColor:
filledLetterpressedCircleWithOutlineOfColor:
filledPressedLetterpressedCircleWithOutlineOfColor:
calendarWithIdentifier:
archivedSortedLists
calendarIdentifier
localizedCompare:
sortUsingComparator:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
sectionsToDelete
setSectionsToDelete:
sectionsToReload
setSectionsToReload:
sectionsToInsert
setSectionsToInsert:
rowsToDelete
setRowsToDelete:
rowsToReload
setRowsToReload:
rowsToInsert
setRowsToInsert:
_sectionsToDelete
_sectionsToReload
_sectionsToInsert
_rowsToDelete
_rowsToReload
_rowsToInsert
indexPathForCalendar:whenEditing:
selectFirstAvailableCalendar
listPickerModelDidChangeSelectedCalendar:
hasSpecialCardSection
sectionForVisibleIndex:whenEditing:
visibleIndexForSection:whenEditing:
sourceInfoIndexForSection:whenEditing:
specialCardsSection:
sourceInfoForSection:whenEditing:
isEllipsisRowAtIndexPath:whenEditing:
isScheduledRowAtIndexPath:whenEditing:
isCalendarRowAtIndexPath:whenEditing:
indexInSourceInfoForCalendarAtIndexPath:whenEditing:
scheduledSelected
calendarForIndexPath:whenEditing:
_canDeleteCalendar:inSourceInfo:
numberWithBool:
indexSetWithIndex:
indexSet
addIndex:
initWithEventStore:orCalendarSourceInfos:showingSynthesizedCards:
selectScheduled
isEmpty
reloadCalendars
sectionForSourceInfo:whenEditing:
numberOfSectionsWhenEditing:
numberOfRowsInSection:whenEditing:
selectedIndexPathWhenEditing:
canDeleteRowAtIndexPath:whenEditing:
didAddCalendarToSection:whenEditing:
deleteCalendarAtIndexPath:whenEditing:
dictionaryForAnimationToEditing:
_isOverridingSourceInfos
_scheduledSelected
_showsSynthesizedCards
_selectedCalendar
_eventStore
_calendarSourceInfos
_sourceIndicesForViewing
_sourceIndicesForEditing
setLeftBarButtonItem:
done
defaultDate
setMinimumDate:
pickerChanged:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
repeatForeverTapped
setDay:
setMonth:
setYear:
dateByAddingComponents:toDate:options:
endRepeatDate
_endRepeatDate
_originalEndRepeatDate
_alertDate
_isShowingDatePickerCell
_eventStoreChanged:
_reloadCalendars
removeObserver:name:object:
shouldMakeUIForDefaultPNG
_setTopPadding:
setEstimatedSectionHeaderHeight:
setSectionHeaderHeight:
setSeparatorColor:
_setSeparatorBackdropOverlayBlendMode:
_setMarginWidth:
setDragDestinationDelegate:
setDragInteractionEnabled:
setSpringLoaded:
viewDidLoad
_updateTableSelection
viewWillTransitionToSize:withTransitionCoordinator:
localDragSession
_isCalendarRowAtIndexPath:
items
localObject
uniqueIdentifier
_calendarForIndexPath:
itemProvider
canLoadObjectOfClass:
loadObjectOfClass:completionHandler:
_scheduleTodayReminder:
_destinationIndexPath
_dropSession
_acceptsDropAtIndexPath:forDropSession:
_items
_isScheduledRowAtIndexPath:
initWithContainer:center:transform:
dragItem
_performDropOnScheduledWithDragItem:
_performDropOnCalendar:withDragItem:
_dropItem:toTarget:
setCurrentDropSession:
canLoadObjectsOfClass:
initWithDropOperation:dropLocation:
currentDropSession
_selectedIndexPath
highlightCell:
_setEditing:
_actuallyDeleteCalendar:atIndexPath:fromEventStore:
_assignDisplayOrdersToListsAndCommit:
_isEllipsisRowAtIndexPath:
unhighlightCell:
_sourceInfoForSection:
_rollBackEventStoreIncludingCalendars:
_marginWidth
_setShouldHaveFullLengthTopSeparator:
_setShouldHaveFullLengthBottomSeparator:
titleForHeaderInSection:
systemGrayColor
uppercaseStringWithLocale:
sizeToFit
_minimumHeightForHeaderInSection:
_numberOfSectionsWhenEditing:
_numberOfRowsInSection:whenEditing:
_setDrawsAsBackdropOverlayWithBlendMode:
setSelectedBackgroundView:
setAllowsGroupOpacity:
setAllowsGroupBlending:
tableView:cellForRowAtIndexPath:style:reuseIdentifier:
setBounds:
setHour:
setMinute:
setSecond:
predicateForIncompleteRemindersDueBeforeOrOnDueDate:calendars:sortOrder:
countOfRemindersMatchingPredicate:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
subtitleStringWithInformationalText:overdueCount:
sharingStatus
predicateForIncompleteRemindersWithDueDate:calendars:sortOrder:
sharedOwnerEmail
sharedGenerator
sharedOwnerPhoneNumber
formattedStringForPhoneNumber:
sharedOwnerName
couldBeJunk
sharees
allObjects
colorWithCGColor:
setAttributedText:
_setHyphenationFactor:
initWithString:attributes:
initWithString:
appendAttributedString:
_attemptToDeleteCalendarAtIndexPath:
copyCGColorForNewCalendar
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
_indexPathForCalendar:
setCGColor:
setSymbolicColorName:
_sectionForSourceInfo:
disableAnimation
reloadSections:withRowAnimation:
enableAnimation
isViewLoaded
_sourceInfoForSection:whenEditing:
deleteSections:withRowAnimation:
insertSections:withRowAnimation:
rollback
allCalendars
displayOrder
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_sortedDisplayOrdersForLists:
_highestDisplayOrderInSource:
setDisplayOrder:
commit:
removeCalendar:commit:error:
window
presentViewController:animated:completion:
_cancelDeleteRowAtIndexPath:
_handleAnimationsDictionary:
handleDelete:
_showExtraWarningForDualTypeCalendar:
deleteConfirmationIndexPath
setDeleteConfirmationIndexPath:animated:
setEditing:animated:
entityType
_needsReloadForChangedObjectIDs:
sharedOwnerAddress
updateTableViewContentInset
contentOffset
setContentOffset:
handleKeyboardTransition
animateWithDuration:animations:
_tableView:performDropWithCoordinator:
_tableView:canHandleDropSession:
_tableView:dropSessionDidEnter:
_tableView:dropSessionDidUpdate:withDestinationIndexPath:
_tableView:dropSessionDidExit:
_tableView:dropSessionDidEnd:
_tableView:dataOwnerForDropSession:withDestinationIndexPath:
popoverControllerShouldDismissPopover:
popoverControllerDidDismissPopover:
popoverController:willRepositionPopoverToRect:inView:
_tableView:shouldSpringLoadRowAtIndexPath:withContext:
isScheduledSelected
beginEditing
endEditing
isEditing
resignEditingTextField
cacheInvitation:
deleteInvitation:
addCalendar:
_adjustForKeyboard:
currentCalendarColor
setCurrentCalendarColor:
springloadIndexPath
setSpringloadIndexPath:
_editing
_needsReloadAfterEndingEditing
_isEmpty
_shouldIgnoreNextEventStoreChange
_style
_editButton
_currentlyEditingTextField
_indexPathToDelete
_hasSwipedRow
_keyboardHeightOnScreen
_textFieldToIDs
_newCalendarColorRef
_cachedInvitation
_sharingCalendar
_sharingPopoverController
_currentCalendarColor
_springloadIndexPath
_currentDropSession
**** priorityLevelForReminderInList: Expected an EKSource but got a %@. Please file a bug with any reproduction steps you may know!
**** priorityLevelForReminderInList: Expected an EKCalendar but got a %@. Please file a bug with any reproduction steps you may know!
priority-%zd.png
opacity
Alarm
UILocationArrow
position
transform
DisableLetterpress
HeaderLetterpressStyle
BodyLetterpressStyle
repeat view title - recurrence type view controller
Repeat
Custom
v16@?0@"EKRecurrenceRule"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
customRecurrenceViewController
T@"EKUICustomRecurrenceViewController",&,V_customRecurrenceViewController
repeatType
Tq,N,V_repeatType
summaryString
T@"NSString",C,N,V_summaryString
delegate
T@"<RemindersRecurrenceTypeViewControllerDelegate>",W,N,V_delegate
recurrenceRule
T@"EKRecurrenceRule",&,N,V_recurrenceRule
source
T@"EKSource",&,N,V_source
reminderDate
T@"NSDate",&,V_reminderDate
reminderTimeZone
T@"NSTimeZone",&,V_reminderTimeZone
useClearBackground
TB,V_useClearBackground
UIPreferencesBlueCheck.png
v8@?0
checked
TB,N,GisChecked,V_checked
Details
Create Reminder
Options
dateCell
dateDetailCell
editorCell
switchCell
locationCell
actionCell
urlCell
Remind me on a day
repeat row title
end repeat row title
End Repeat
Never
Remind me at a location
location chooser title
Location
Action
facetime-audio
phone.png
facetime
camera.png
Add Action
Priority
reminder list row title
List
Notes
Action URL
repeat row title - update custom repeat cell
OverrideLocationCapability
InternalBuild
ShowActionURLs
Arriving
Leaving
%@: %@
Alarm proximity string - Getting in the car
Getting in the car
Alarm proximity string - Getting out of the car
Getting out of the car
EEEMdyyjmma
EEEEMMMdyjmma
T@"<RemindersDetailEditorControllerDelegate>",W,N,V_delegate
reminder
T@"EKReminder",R,V_reminder
DatePickerShortInterval
datePicker
T@"UIDatePicker",R,N,V_datePicker
targetEditorRow
Tq,N,V_targetEditorRow
None
priority-1
priority-2
priority-3
priorityPicker
T@"UISegmentedControl",R,N,V_priorityPicker
priority
Tq,N
expandingTextView
T@"EKExpandingTextView",R,N,V_expandingTextView
verticalPadding
Td,N,V_verticalPadding
minimumHeight
Td,N,V_minimumHeight
%@: Failed to find a reminders calendar. Making one.
+[RemindersCalendarSourceInfo sortedGroupsOfCalendarsInEventStore:includingInvitations:]
DEFAULT_TASK_CALENDAR_NAME
We're having a really bad day, and we can't even create a reminder list in the local source: %@
the local store doesn't allow tasks and we have no default calendar :(
v32@?0@8@16^B24
calendarArray
T@"NSMutableArray",R,V_array
- type: %i - location title: %@ - location geolocation: %@ - is being determined: %@
Current Location
Cannot Determine Location
location
T@"EKStructuredLocation",&,N,V_location
addressDictionary
T@"NSDictionary",&,N,V_addressDictionary
isLocationBeingDetermined
TB,N,V_isLocationBeingDetermined
type
Ti,N,V_type
LogLocation
com.apple.reminders
starting operation with count %i
ending operation with count %i
v16@?0@"CNContactStore"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileReminders_Sim/MobileReminders-889/Classes/RemindersLocationPickerModel.m
<Unknown File>
Can't cache a location without an address dictionary as key.
Shouldn't be trying to cache a location without an address dictionary.
LocationAddress
Shouldn't be trying to cache a location without a geolocation.
LocationCLLocation
LocationTimestamp
LocationTitle
LocationRadius
CachedLocationData
Cached address %@
Removing outdated location for %@, cached on %@
Found cached location for %@
Moved cached address from position %lu to the front of the list
in _startNextGeocoderOperation
In _reverseGeocodeCurrentLocation
Had to queue this reverse geocode request
Reverse geocoding now
Successfully reverse-geocoded current location at %@ as: %@
Successfully reverse-geocoded current location at %@, but could not get any address information for it.
Failed to reverse geocode current location: %@
v24@?0@"NSArray"8@"NSError"16
v16@?0@"CLLocation"8
Tried to handle completed geocode, but we didn't keep track of what was being geocoded
Geocoding was canceled.
Successfully geocoded location: %@
Somehow we got a placemark with no geolocation in it.  That's weird...
Failed to geocode location: %@ error: %@
In _geocodeItem: %@
We already had a geolocation for this item.  Starting the next geocoding operation instead.
Had to queue this geocode request
Went ahead and geocoded request
Should not have been able to start geocoding while another geocode was in progress.
After %f seconds, our current location is not accurate enough.  Giving up.
Shouldn't have been able to start updating location items again, after the current location was already found.
Tried to select nil location.  Selected type: %ld, me card index %ld
Got coordinates for current location: %@
This location is within our accuracy requirement of %f.
Failed to get current location: %@
Not Determined
Restricted
Denied
Authorized
Changed authorization status to %@
Location based reminders are disabled.  Giving up getting current location.
itemBeingGeocoded
T@"RemindersLocationItem",&,N,V_itemBeingGeocoded
meCardIsSet
TB,R,N,V_meCardIsSet
useMeCard
TB,N,V_useMeCard
currentLocationItem
T@"RemindersLocationItem",R,N,V_currentLocationItem
customLocationItem
T@"RemindersLocationItem",&,N,V_customLocationItem
Delete
Cancel
Are you sure you want to delete this calendar and all its events?
Cannot Delete
This list cannot be deleted.
kComposedSizeChangedAnimation
MFComposeRecipientView
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileReminders_Sim/MobileReminders-889/Classes/RemindersAddPersonController.m
override in subclass
MFSearchShadowView
MFContactsSearchManager
emailAddresses.@count > 0
(emailAddresses.@count) == 1
(key == 'emailAddresses')
 || phoneNumbers.@count > 0
(emailAddresses.@count + phoneNumbers.@count) == 1
 || (key == 'phoneNumbers')
MFRecipientTableViewCell
searchAccountID
T@"NSString",C,N,V_searchAccountID
T@"<RemindersContactEditorDelegate>",W,N,V_delegate
Add Person
Person:
Add a contact
Reminder
Error loading text item: %@
v24@?0@"NSString"8@"NSError"16
Error loading URL item: %@
v24@?0@"NSURL"8@"NSError"16
com.apple.reminders.app-link
Error loading app link item: %@
v24@?0@"NSData"8@"NSError"16
com.apple.reminders.notes
Error loading notes item: %@
created.shareSheet
created.shareSheet.action
boundingRect
T{?={?=dd}{?=dd}},V_boundingRect
Home
Work
Marker
ParkedCar
location view title
Search or Enter Address
com.apple.eventkit.ios
When I Arrive
When I Leave
kind IN %@
displayName tokenSearch: %@
address tokenSearch: %@
com.apple.reminders.recents
Getting in the car cell label
When connected to any paired car
Getting out of the car cell label
When disconnected from any paired car
userCreatedReminderWithMeLocation
v24@?0@"MKLocalSearchResponse"8@"NSError"16
changedGeoFence
T@"<RemindersLocationEditorDelegate>",N,V_delegate
map-handle.png
round
strokeEnd
strokeEndAnimation
v12@?0B8
%@ %@
meters
feet
handleImageView
T@"UIImageView",&,N,V_handleImageView
annotation
T@"<MKAnnotation>",&,N,V_annotation
overlay
T@"<MKOverlay>",&,N,V_overlay
shapeLayer
T@"CAShapeLayer",&,N,V_shapeLayer
isMinimum
TB,N,V_isMinimum
isMaximum
TB,N,V_isMaximum
mapView
T@"MKMapView",&,N,V_mapView
isDragging
TB,N,V_isDragging
T@"<RemindersMapDragRadiusDelegate>",N,Vdelegate
proximity
Tq,N,Vproximity
eventStore
T@"EKEventStore",&,N
rootViewController
T@"RemindersRootViewController",&,N
Purple
Green
Blue
Yellow
Brown
Orange
colorpot-shading.png
circle-completed.png
q24@?0@"EKCalendar"8@"EKCalendar"16
sectionsToDelete
T@"NSIndexSet",&,N,V_sectionsToDelete
sectionsToReload
T@"NSIndexSet",&,N,V_sectionsToReload
sectionsToInsert
T@"NSIndexSet",&,N,V_sectionsToInsert
rowsToDelete
T@"NSArray",&,N,V_rowsToDelete
rowsToReload
T@"NSArray",&,N,V_rowsToReload
rowsToInsert
T@"NSArray",&,N,V_rowsToInsert
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileReminders_Sim/MobileReminders-889/Classes/RemindersListPickerModel.m
Tried to get calendar at non-calendar index path.
We just added a calendar to a source.  If we shouldn't show this source, our logic needs to change.
T@"<RemindersListPickerModelDelegate>",N,V_delegate
end repeat view title
H:|[_datePicker]|
_datePicker
cell
Repeat Forever
End Repeat Date
T@"<RemindersEndRepeatControllerDelegate>",&,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileReminders_Sim/MobileReminders-889/Classes/RemindersListPicker.m
Cannot create a RemindersListPicker without an event store.
Change List
v24@?0@"<NSItemProviderReading>"8@"NSError"16
viewedScheduledCard
Tried to move calendar to out of bounds index %li
|-(marginWidth)-[label]-(marginWidth)-|
marginWidth
label
V:|-(>=4)-[label]-(4)-|
V:[view(>=minimumHeight)]
view
kRemindersListPickerReuseIdentifier
RemindersListPickerSidebarcell
Scheduled
scheduled-card.png
1 item due today
%@ items due today
No items due today
Invite from %@
Shared with %@
Shared with %@ and 1 other
Shared with %@ and %@ others
Shared by %@
1 overdue
%@ overdue
The object should always be a calendar or a RemindersCalendarSourceInfo.
Unable to save calendar %@: %@
intValue
Error moving Reminders list %@: %@
Error committing event store after reordering Reminders lists: %@
Error deleting list in Reminders list picker: %@
v16@?0@"UIAlertAction"8
should never be able to delete non-calendar row from Reminders list picker
currentDropSession
T@"<UIDropSession>",&,N,V_currentDropSession
T@"<RemindersListPickerDelegate>",&,N,V_delegate
currentCalendarColor
T@"UIColor",&,N,V_currentCalendarColor
springloadIndexPath
T@"NSIndexPath",&,N,V_springloadIndexPath
MbP?
@333333
I@ffffff
?333333
D@ffffff
`6^A
?fff?
?;;;;;;
?\\\\\\
?XXXXXX
?777777
777777
?<<<<<<
?[[[[[[
TTTTTT
?ffffff
F@ffffff
RemindersUtilities
AutoLayoutConvenience
ConvenienceFonts
RemindersRecurrenceTypeViewController
UITableViewDataSource
NSObject
UITableViewDelegate
UIScrollViewDelegate
RecurrenceTypeTableViewCell
RemindersResizableTextLabelCell
RemindersResizableDetailLabelCell
RemindersDetailEditorController
UITextFieldDelegate
RemindersRecurrenceTypeViewControllerDelegate
RemindersEndRepeatControllerDelegate
RemindersLocationEditorDelegate
RemindersListPickerDelegate
RemindersActionEditorDelegate
EKExpandingTextViewDelegate
UITextViewDelegate
_RemindersDatePickerCell
_RemindersPriorityPickerCell
_RemindersTextEditCell
RemindersCalendarSourceInfo
RemindersLocationItem
RemindersLocationPickerModel
CLLocationManagerDelegate
RemindersListAddPersonController
MFComposeRecipientViewDelegate
MFComposeHeaderViewDelegate
MFContactsSearchConsumer
CNContactPickerDelegate
RemindersContactEditViewController
RemindersEditorRemoteViewController
RemindersDetailEditorControllerDelegate
RemindersReverseCircleOverlay
RemindersReverseCircleRenderer
RemindersInlineLocEditViewController
UISearchBarDelegate
UIBarPositioningDelegate
RemindersLocationPickerModelDelegate
CNAutocompleteFetchDelegate
MKMapViewDelegate
MKMapViewDelegatePrivate
RemindersMapDragRadiusDelegate
RemindersMapDragRadiusView
RemindersAdditions
RemindersColor
RemindersListPickerAnimationsDictionary
RemindersListPickerModel
RemindersEndRepeatViewController
RemindersListPicker
UITableViewDragDestinationDelegate
RemindersListPickerModelDelegate
UIPopoverControllerDelegate
@16@0:8
v32@0:8d16d24
v40@0:8d16d24@32
v64@0:8d16d24d32d40@48@56
v72@0:8d16d24d32d40d48@56@64
v24@0:8d16
v56@0:8d16d24d32d40@48
@48@0:8@16q24@32d40
@28@0:8@16I24
@36@0:8@16I24Q28
@40@0:8@16@24@32
q40@0:8@16^@24^@32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
@32@0:8@16@24
q24@0:8@16
@32@0:8@16q24
B32@0:8@16@24
@24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
v40@0:8@16@24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v24@0:8@16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v16@0:8
{CGSize=dd}16@0:8
v24@0:8q16
v20@0:8B16
q16@0:8
@"UITableView"
@"NSIndexPath"
@"<RemindersRecurrenceTypeViewControllerDelegate>"
@"EKRecurrenceRule"
@"EKSource"
@"NSDate"
@"NSTimeZone"
@"EKUICustomRecurrenceViewController"
@"NSString"
@32@0:8q16@24
@"UIView"
v32@0:8@16q24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v32@0:8@"RemindersRecurrenceTypeViewController"16q24
v32@0:8@"RemindersEndRepeatViewController"16@"NSDate"24
v32@0:8@"RemindersInlineLocEditViewController"16q24
v32@0:8@"RemindersInlineLocEditViewController"16@"EKStructuredLocation"24
v24@0:8@"RemindersListPicker"16
v32@0:8@"RemindersActionEditorViewController"16@"NSURL"24
B56@0:8@16@24{_NSRange=QQ}32q48
B48@0:8@16@24{_NSRange=QQ}32
B24@0:8@"UITextView"16
v24@0:8@"UITextView"16
B48@0:8@"UITextView"16{_NSRange=QQ}24@"NSString"40
B56@0:8@"UITextView"16@"NSURL"24{_NSRange=QQ}32q48
B56@0:8@"UITextView"16@"NSTextAttachment"24{_NSRange=QQ}32q48
B48@0:8@"UITextView"16@"NSURL"24{_NSRange=QQ}32
B48@0:8@"UITextView"16@"NSTextAttachment"24{_NSRange=QQ}32
v24@0:8@?16
q24@0:8q16
@24@0:8q16
@"EKReminder"
@"_RemindersTextEditCell"
@"_RemindersPriorityPickerCell"
@"_RemindersDatePickerCell"
@"EKStructuredLocation"
@"EKCalendar"
@"NSURL"
@"UITextField"
@"<RemindersDetailEditorControllerDelegate>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIDatePicker"
{CGSize=dd}32@0:8{CGSize=dd}16
@"UISegmentedControl"
d24@0:8d16
d16@0:8
@"EKExpandingTextView"
@28@0:8@16B24
i16@0:8
@"NSMutableArray"
v20@0:8i16
@"NSDictionary"
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@20@0:8i16
@"CLGeocoder"
@"CLLocationManager"
@"NSArray"
^{__CFArray=}
@"RemindersLocationItem"
v40@0:8@16{CGSize=dd}24
v24@0:8@"MFComposeHeaderView"16
v40@0:8@"MFComposeHeaderView"16{CGSize=dd}24
@36@0:8@16^v24i32
@40@0:8@16^v24i32i36
v32@0:8@"MFComposeRecipientView"16@"MFComposeRecipient"24
v32@0:8@"MFComposeRecipientView"16@"NSString"24
v40@0:8@"MFComposeRecipientView"16@"NSArray"24@"NSArray"32
v40@0:8@"MFComposeRecipientView"16{CGSize=dd}24
v24@0:8@"MFComposeRecipientView"16
B24@0:8@"MFComposeRecipientView"16
v32@0:8@"MFComposeRecipientView"16@"MFModernComposeRecipientAtom"24
v32@0:8@"MFComposeRecipientView"16@"NSArray"24
@"MFComposeRecipient"32@0:8@"MFComposeRecipientView"16@"NSString"24
@"MFComposeRecipient"36@0:8@"MFComposeRecipientView"16^v24i32
@"MFComposeRecipient"40@0:8@"MFComposeRecipientView"16^v24i32i36
v40@0:8@16Q24@32
v24@0:8Q16
v32@0:8@"NSArray"16@"NSNumber"24
v24@0:8@"NSNumber"16
v40@0:8@"NSArray"16Q24@"NSNumber"32
v24@0:8@"CNContactPickerViewController"16
v32@0:8@"CNContactPickerViewController"16@"CNContact"24
v32@0:8@"CNContactPickerViewController"16@"CNContactProperty"24
v32@0:8@"CNContactPickerViewController"16@"NSArray"24
@"MFComposeRecipientView"
@"UIScrollView"
@"MFSearchShadowView"
@"MFContactsSearchManager"
@"NSNumber"
@"<RemindersContactEditorDelegate>"
v24@0:8@"EKCalendar"16
@"RemindersDetailEditorController"
@"SLComposeSheetConfigurationItem"
@72@0:8{CLLocationCoordinate2D=dd}16d32{?={?=dd}{?=dd}}40
{?={?=dd}{?=dd}}16@0:8
v48@0:8{?={?=dd}{?=dd}}16
{?="origin"{?="x"d"y"d}"size"{?="width"d"height"d}}
v32@0:8^{CGPath=}16^{CGContext=}24
q24@0:8@"<UIBarPositioning>"16
B24@0:8@"UISearchBar"16
v24@0:8@"UISearchBar"16
v32@0:8@"UISearchBar"16@"NSString"24
B48@0:8@"UISearchBar"16{_NSRange=QQ}24@"NSString"40
v32@0:8@"UISearchBar"16q24
v24@0:8@"RemindersLocationPickerModel"16
v32@0:8@"RemindersLocationPickerModel"16q24
v32@0:8@"RemindersLocationPickerModel"16@"NSError"24
B40@0:8@16@24@?32
@?24@0:8@16
v32@0:8@"<CNCancelable>"16@"NSArray"24
v32@0:8@"<CNCancelable>"16@"NSError"24
v24@0:8@"<CNCancelable>"16
B40@0:8@"<CNCancelable>"16@"CNAutocompleteFetchRequest"24@?<v@?@"NSArray"@"NSError">32
@"NSDictionary"32@0:8@"<CNCancelable>"16@"NSArray"24
@?<q@?@@>24@0:8@"<CNCancelable>"16
v48@0:8@16@24Q32Q40
v36@0:8@16q24B32
v28@0:8@"MKMapView"16B24
v24@0:8@"MKMapView"16
v32@0:8@"MKMapView"16@"NSError"24
@"MKAnnotationView"32@0:8@"MKMapView"16@"<MKAnnotation>"24
v32@0:8@"MKMapView"16@"NSArray"24
v40@0:8@"MKMapView"16@"MKAnnotationView"24@"UIControl"32
v32@0:8@"MKMapView"16@"MKAnnotationView"24
v32@0:8@"MKMapView"16@"MKUserLocation"24
v48@0:8@"MKMapView"16@"MKAnnotationView"24Q32Q40
v36@0:8@"MKMapView"16q24B32
@"MKOverlayRenderer"32@0:8@"MKMapView"16@"<MKOverlay>"24
@"MKOverlayView"32@0:8@"MKMapView"16@"<MKOverlay>"24
@"MKClusterAnnotation"32@0:8@"MKMapView"16@"NSArray"24
v40@0:8@16Q24Q32
d48@0:8@16@24@32d40
v40@0:8@16q24B32B36
v32@0:8@16Q24
v60@0:8@16q24q32q40B48q52
{CGPoint=dd}48@0:8@16{CGPoint=dd}24q40
v36@0:8@16s24@28
v32@0:8@16d24
v52@0:8@16q24q32B40q44
v32@0:8@"MKMapView"16@"VKLabelMarker"24
v40@0:8@"MKMapView"16Q24Q32
d48@0:8@"MKMapView"16@"UITouch"24@"MKAnnotationView"32d40
v40@0:8@"MKMapView"16q24B32B36
v32@0:8@"MKMapView"16Q24
B32@0:8@"MKMapView"16@"UITouch"24
B32@0:8@"MKMapView"16@"VKLabelMarker"24
v40@0:8@"MKMapView"16@"VKLabelMarker"24@"UIControl"32
B24@0:8@"MKMapView"16
v32@0:8@"MKMapView"16@"NSString"24
v28@0:8@"MKMapView"16i24
v60@0:8@"MKMapView"16q24q32q40B48q52
{CGPoint=dd}48@0:8@"MKMapView"16{CGPoint=dd}24q40
@"GEORouteMatch"24@0:8@"MKMapView"16
v40@0:8@"MKMapView"16@"VKVenueFeatureMarker"24@"VKVenueBuildingFeatureMarker"32
v36@0:8@"MKMapView"16s24@"VKVenueFeatureMarker"28
v32@0:8@"MKMapView"16d24
v52@0:8@"MKMapView"16q24q32B40q44
{?={?=dd}{?=dd}}24@0:8@16
@24@0:8d16
{?={?=dd}{?=dd}}24@0:8@"<MKOverlay>"16
@"<MKOverlay>"24@0:8d16
@40@0:8{CLLocationCoordinate2D=dd}16d32
@"UISearchBar"
@"MKMapView"
@"RemindersMapDragRadiusView"
@"RemindersLocationPickerModel"
@"_MKLocationShifter"
@"MKLocalSearch"
@"CNAutocompleteStore"
@"<CNCancelable>"
@"NSLayoutConstraint"
@"<RemindersLocationEditorDelegate>"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
@32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16@32
@"<RemindersMapDragRadiusDelegate>"
@"UIImageView"
@"<MKAnnotation>"
@"<MKOverlay>"
@"CAShapeLayer"
^{?=ddd}16@0:8
i24@0:8@16
@"NSIndexSet"
@36@0:8@16@24B32
q20@0:8B16
q28@0:8q16B24
q28@0:8@16B24
@28@0:8q16B24
B28@0:8@16B24
@20@0:8B16
v28@0:8q16B24
@"EKEventStore"
@"<RemindersListPickerModelDelegate>"
@44@0:8@16q24@32B40
@"UITableViewCell"
@"<RemindersEndRepeatControllerDelegate>"
q40@0:8@16@24@32
v32@0:8@"UITableView"16@"<_UITableViewDropCoordinator>"24
B32@0:8@"UITableView"16@"<UIDropSession>"24
v32@0:8@"UITableView"16@"<UIDropSession>"24
@"UITableViewDropProposal"40@0:8@"UITableView"16@"<UIDropSession>"24@"NSIndexPath"32
q40@0:8@"UITableView"16@"<UIDropSession>"24@"NSIndexPath"32
v24@0:8@"RemindersListPickerModel"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
B24@0:8@"UIPopoverController"16
v24@0:8@"UIPopoverController"16
v40@0:8@"UIPopoverController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
@28@0:8@16i24
v40@0:8{CGSize=dd}16@32
d24@0:8q16
@48@0:8@16@24q32@40
v36@0:8@16@24B32
@"RemindersListPickerModel"
@"UIBarButtonItem"
@"<RemindersListPickerDelegate>"
@"NSMutableDictionary"
^{CGColor=}
@"UIPopoverController"
@"UIColor"
@"<UIDropSession>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.developer.auto-elect-plugin</key>
<true/>
<key>com.apple.locationd.prompt_behavior</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceReminders</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
</dict>
</plist>
?<<<<<<
?[[[[[[
?]]]]]]
?wwwwww
TTTTTT
