333333
F@333333
?333333
GKSkipControlButton
GKContactSkipControl
GKMultiplayerActivityView
Contact
GKExtensionViewController
GKDaemonProxyDataUpdateDelegate
NSObject
GKExtensionProtocol
GKExtensionHostProtocol
GKDashboardServiceInterface
GKServiceViewControllerInformalDelegateProtocol
GKExtensionContext
GKTurnBasedMatchDetailViewController
GKMultiplayerBubbleView
GKMultiplayerCollectionLayout
GKMultiplayerCollectionViewCell
GKMultiplayerSeparatorView
GKMultiplayerDataSource
GKMultiplayerFooterView
GKMultiplayerHeaderView
GKMultiplayerParticipant
NSCopying
GameCenter
GKMultiplayerViewController
MFMessageComposeViewControllerInternalDelegate
MFMessageComposeViewControllerDelegate
GKMultiplayerPlayerCountViewControllerDelegate
GKMultiplayerButtonFooterView
GKMultiplayerPlayerCountViewController
UITableViewDelegate
UIScrollViewDelegate
UITableViewDataSource
CNAvatarView
GKRawTurnsDataSource
GKMultiplayerCollectionViewCellAccessoryLeft
GKTurnBasedInviteViewController
GKMultiplayerButtonHeaderView
GKTurnBasedMatchesDataSource
GKUnifiedRecipient
GKPlatformSpecific
GKTurnBasedMatchesViewController
GKTurnBasedInviteViewControllerDelegate
GKTurnBasedMatchDetailViewControllerDelegate
UIPopoverControllerDelegate
UIStateRestoring
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
GKTurnBasedMatchmakerExtensionViewController
GKTurnBasedMatchesViewControllerDelegate
GKTurnBasedMatchmakerExtensionContext
GKTurnBasedMatchmakerServiceProtocol
GKTurnBasedParticipantsDataSource
.cxx_destruct
skipValueString
setSkipValueString:
_skipValueString
initWithFrame:
setupButtonView
awakeFromNib
setupValueButtons
alloc
bounds
setButtonView:
clearColor
setBackgroundColor:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
_gkConstraintsForView:withinView:insets:
addConstraints:
setCenteringView:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
setHidden:
determineButtonFromGesture:
initWithTarget:action:
addGestureRecognizer:
isEqualToArray:
arrayWithCapacity:
count
objectAtIndexedSubscript:
addObject:
containsObject:
lastObject
isEqualToString:
removeLastObject
arrayWithArray:
indexOfObject:
countByEnumeratingWithState:objects:count:
removeFromSuperview
dictionaryWithCapacity:
setButtonsToTitles:
traitCollection
userInterfaceIdiom
verticalSizeClass
compactPhoneValues
buttonWithType:
titleLabel
smallSystemFontSize
systemFontOfSize:
setFont:
setAdjustsFontSizeToFitWidth:
setTextAlignment:
tintColor
setTitleColor:forState:
setTitle:forState:
setTitleEdgeInsets:
setContentEdgeInsets:
nextTitleFollowingValue:
setTag:
numberWithInteger:
setObject:forKey:
setButtons:
locationInView:
hitTest:withEvent:
class
isKindOfClass:
valueSelected:
objectForKey:
lastSelectedValue
setLastSelectedValue:
sendActionsForControlEvents:
adjustForTraitCollection:
setValues:
values
buttons
buttonView
centeringView
buttonsToTitles
_values
_lastSelectedValue
_buttons
_buttonView
_centeringView
_buttonsToTitles
setOpaque:
setUserInteractionEnabled:
initWithActivityIndicatorStyle:
autorelease
startAnimating
textStyle
multiplayerFooterText
applyTextStyle:
setLabel:
frame
numberWithDouble:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
setText:
text
label
_label
internalRepresentation
initWithInternalRepresentation:
setContact:
internal
identifier
setPlayerID:
playerID
UUID
UUIDString
givenName
setFirstName:
familyName
setLastName:
stringFromContact:style:
setCompositeName:
setAlias:
initWithContact:
contact
initWithCoder:
setModalPresentationStyle:
sharedTheme
formSheetSize
setPreferredContentSize:
_setClipUnderlapWhileTransitioning:
defaultCenter
willResignActive:
addObserver:selector:name:object:
didBecomeActive:
view
colorWithWhite:alpha:
setNeedsDisplay
release
removeObserver:
dealloc
viewDidLoad
navigationBar
setBarStyle:
setTranslucent:
daemonProxy
setDataUpdateDelegate:
viewWillAppear:
_useBackdropViewForWindowBackground
effectWithStyle:
initWithEffect:
setEffectView:
setFrame:
parentViewController
window
insertSubview:atIndex:
topAnchor
constraintEqualToAnchor:constant:
bottomAnchor
leadingAnchor
constraintEqualToAnchor:
trailingAnchor
arrayWithObjects:count:
setEffectBottomConstraint:
setEffectTopConstraint:
sharedPalette
viewBackgroundColor
colorWithAlphaComponent:
hasInitialData
contentViewController
constructContentViewController
viewDidDisappear:
setViewControllers:animated:
setContentViewController:
dataUpdateDelegate
willTransitionToTraitCollection:withTransitionCoordinator:
effectTopConstraint
setConstant:
animateAlongsideTransition:completion:
objectForKeyedSubscript:
floatValue
setStatusBarHeight:
integerValue
setHostPID:
setGame:
localPlayer
updateFromLocalPlayer:
boolValue
hostPID
setHasInitialData:
isViewLoaded
configureContentViewController
setClipsToBounds:
systemInteractionColor
setTintColor:
alwaysShowDoneButton
addDoneButtonToViewController:
_gkWantsCustomRightBarButtonItemInViewService
navigationItem
donePressed:
initWithTitle:style:target:action:
setRightBarButtonItem:
pushViewController:animated:
extensionIsFinishing
_gkShouldRefreshContentsForDataType:userInfo:
_gkRefreshContentsForDataType:userInfo:
extensionContext
_auxiliaryConnection
stringWithUTF8String:
lastPathComponent
UTF8String
localizedDescription
stringWithFormat:
remoteObjectProxyWithErrorHandler:
archivedDataWithRootObject:requiringSecureCoding:error:
hostObjectProxy
messageFromExtension:
sendMessageToClient:
unarchivedObjectOfClass:fromData:error:
clientDidFinish
clientDidCancel
setEffect:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
retainCount
zone
hash
superclass
description
debugDescription
setBadgeCount:forType:
refreshContentsForDataType:userInfo:
friendRequestSelected:
messageFromClient:
setInitialState:withReply:
game
remoteViewControllerDidFinish
remoteViewControllerDidCancel
setValue:forKeyPath:withReply:
nudge
hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:
remoteViewControllerIsCanceling
remoteViewControllerIsFinishing
finish
setToLightBackground
setToDarkBackground
finishAndPlayChallenge:
finishWithTurnBasedMatch:
quitTurnBasedMatch:
dashboardDidChangeToViewState:
dashboardDidChangeToLeaderboardTimeScope:
dashboardDidChangeToLeaderboardIdentifier:
requestDashboardLogoImageWithHandler:
requestImagesForLeaderboardSetsWithHandler:
requestImagesForLeaderboardsInSet:handler:
_statusBarHeightForCurrentInterfaceOrientation
extensionIsCanceling
setAlwaysShowDoneButton:
statusBarHeight
effectView
adjustTopConstraint
setAdjustTopConstraint:
effectBottomConstraint
_alwaysShowDoneButton
_adjustTopConstraint
_hasInitialData
_hostPID
_statusBarHeight
_contentViewController
_game
_effectView
_effectBottomConstraint
_effectTopConstraint
_principalObject
defaultWorkspace
applicationProxyForBundleID:
bundle
_extensionEndpointForMainBundleOfHostApplication:
sandboxToken
setSandboxToken:
_sandboxToken
currentDevice
init
initWithCollectionViewLayout:
setRestorationClass:
setRestorationIdentifier:
removeObserver:forKeyPath:
didUpdateModel
dataSource
_popoverController
metricsForIdiom:
defaultRowHeight
setDesiredItemHeight:
itemHeightList
setItemHeightList:
setMetrics:forSection:
supplementaryMetrics
setKind:
setDesiredHeight:
setShouldPin:
dataSourceMetrics
insertSupplementaryMetrics:forKey:atLocation:
participantsDataSource
addObserver:forKeyPath:options:context:
match
setMatch:
setDataSource:
configureDataSource
configureViewFactories
collectionView
_gkRegisterClass:forSupplementaryViewOfKind:
configureMatchDetailHeader:
registerSupplementaryViewOfKind:withClass:target:configurator:
setHeaderView:
setBubbleTarget:
setCompactHeight:
showcasePlayer
displayName
setTitle:
setActionButtonEnabled:
setLabelAlpha:
subviews
layer
removeAllAnimations
handleTurnBasedEvent:
viewDidAppear:
setNeedsFloatInBubbles
viewWillDisappear:
supplementaryMetricsForKey:
headerView
traitCollectionDidChange:
setIsCompactHeader:
updateHeader
floatInBubbles
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
setBubbleAction:
setInfoText:
isInstalled
storeItem
priceDisplay
viewItemURL
sharedPreferences
isAppInstallationRestricted
setBubbleText:
buyButtonPressed:
name
state
setBubbleType:
acceptInvitation:
chooseMatch:
setupActionButton
actionBubble
isHidden
layoutIfNeeded
setAlpha:
setWithBubbleControls:
setBubbles:
bubbleType
setFocusBubbleType:
setDuration:
setEffectiveView:
animateTransition:
zPosition
sharedBubblePathAnimator
preferredDuration
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animationWithKeyPath:
numberWithInt:
setKeyTimes:
setFillMode:
addAnimation:forKey:
setZPosition:
animateTransition:completionHandler:
animateKeyframesWithDuration:delay:options:animations:completion:
declineInvitation:
quitMatch:
removeMatch:
isMyTurn
rightBarButtonItem
title
setEnabled:
delegate
turnBasedMatchDetailViewControllerDidAcceptInvitation:
animateOutBubbleWithFocus:completion:
turnBasedMatchDetailViewControllerDidDeclineInvitation:
turnBasedMatchDetailViewControllerDidChooseMatch:
turnBasedMatchDetailViewControllerDidQuitMatch:
turnBasedMatchDetailViewControllerDidRemoveMatch:
object
matchID
setNeedsReload
turnBasedMatchDetailViewControllerDidShowStore:
setDelegate:
observeValueForKeyPath:ofObject:change:context:
didEnterNoContentState
collectionView:shouldHighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
_gkRepresentedObject
isInGame
setIsInGame:
shouldShowPlay
setShouldShowPlay:
shouldShowQuit
setShouldShowQuit:
setParticipantsDataSource:
didFloatInBubbles
setDidFloatInBubbles:
isCompactHeader
_isInGame
_shouldShowPlay
_shouldShowQuit
_didFloatInBubbles
_isCompactHeader
_delegateWeak
_match
_participantsDataSource
_headerView
position
shareButtonPressed
addTarget:action:forControlEvents:
playButtonPressed
titleColorForState:
setBorderWidth:
setCornerRadius:
CGColor
setBorderColor:
setBubblesHidden:
removeAllAnimationsFromBubbles
scatterOutBubblesWithCompletion:
shareButton
setShareButton:
playButton
setPlayButton:
_shareButton
_playButton
mainScreen
defaultFormSheetSize
currentItemSize
numberOfItemsInSection:
totalCellSize
numberOfColumns
indexPathForItem:inSection:
layoutAttributesForCellWithIndexPath:
setObject:forKeyedSubscript:
setCellLayoutInfo:
enumerateKeysAndObjectsUsingBlock:
layoutAttributesForSupplementaryViewOfKind:withIndexPath:
prepareLayout
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
layoutAttributesForSupplementaryViewOfKind:atIndexPath:
shouldInvalidateLayoutForBoundsChange:
shouldUpdateVisibleCellLayoutAttributes
collectionViewContentSize
insets
setInsets:
itemSize
setItemSize:
separatorSize
setSeparatorSize:
headerSize
setHeaderSize:
footerSize
setFooterSize:
itemMargin
setItemMargin:
headerGap
setHeaderGap:
footerGap
setFooterGap:
numberOfColumnsInPortrait
setNumberOfColumnsInPortrait:
isPortrait
setIsPortrait:
cellLayoutInfo
landscapeItemSize
setLandscapeItemSize:
_isPortrait
_headerGap
_footerGap
_numberOfColumnsInPortrait
_cellLayoutInfo
_itemSize
_separatorSize
_headerSize
_footerSize
_itemMargin
_landscapeItemSize
_insets
contentView
systemGrayColor
setTextColor:
configureConstraintsForCurrentTraitCollection
copy
participantChanged
participant
type
player
setPlayer:
messagesID
status
number
setAutomatchPosition:
isLocalPlayer
setActive:
updateAccessoryViewForType:
removeAccessorySubviews
imageNamed:
imageWithRenderingMode:
initWithImage:
setContentMode:
stringByAppendingFormat:
prepareForReuse
setParticipant:
reuseIdentifier
removable
setRemovable:
setNumber:
nameLabel
setNameLabel:
statusLabel
setStatusLabel:
accessoryContainerView
setAccessoryContainerView:
iconView
setIconView:
cellLeadingConstraint
setCellLeadingConstraint:
nameLabelBaselineConstraintToCenterLine
setNameLabelBaselineConstraintToCenterLine:
statusLabelTopConstraintToNameBaseline
setStatusLabelTopConstraintToNameBaseline:
statusLabelBaselineConstraintToNameBaseline
setStatusLabelBaselineConstraintToNameBaseline:
nameLabelCenterlineConstraintToCenterline
setNameLabelCenterlineConstraintToCenterline:
_removable
_participant
_number
_nameLabel
_statusLabel
_accessoryContainerView
_iconView
_cellLeadingConstraint
_nameLabelBaselineConstraintToCenterLine
_statusLabelTopConstraintToNameBaseline
_statusLabelBaselineConstraintToNameBaseline
_nameLabelCenterlineConstraintToCenterline
hairlineViewForAlignment:
initWithObject:
referenceKey
initWithDictionary:
_gkDequeueCellForClass:forIndexPath:
items
item
participantShouldBeRemovable:atIndexPath:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
setMinPlayers:maxPlayers:
setPlayerCount:
updateParticipantsAnimated:
allValues
addPlayers:withStatus:replaceAutomatches:
removeObjectForKey:
removeObject:
setStatus:
notifyItemsRefreshedAtIndexPaths:
shouldRevertStatus:
statusForPlayer:
minusSet:
array
currentPlayers
_gkGuestPlayersFromPlayers
playersWithStatus:
setStatus:forPlayers:
orderedSetWithArray:
setPlayers:
removeAllObjects
insertObject:atIndex:
indexSetWithIndex:
notifySectionsRefreshed:
showFooterStatus:
replaceObjectAtIndex:withObject:
valueForKeyPath:
unionOrderedSet:
orderedSetWithCapacity:
collectionView:cellForItemAtIndexPath:
updateHeaderText
refreshContentsForDataType:userInfo:updateNotifier:
havePendingPlayers
playerRange
maxAvailablePlayers
addPlayers:withStatus:
removePlayers:
finishRevertingPlayers
guestPlayers
readyPlayers
playersToBeInvited
playersInvited
failedToInvitePlayers
setAutomatchPlayers:
participantForPlayer:
participantForAutoMatchNumber:
setParticipantsWithPlayers:automatchPlayerCount:andStatuses:
setAutoMatching:withVisibleCells:
setFooterStatus:
firstInvitedContactPlayer
replaceContactPlayers:withNormalPlayers:
restoreOrderOfPlayers
minPlayers
setMinPlayers:
maxPlayers
setMaxPlayers:
automatchPlayers
automatchAddedToMinInHeader
setAutomatchAddedToMinInHeader:
removingEnabled
setRemovingEnabled:
footerStatus
footerView
setFooterView:
players
autoMatching
setAutoMatching:
buttonHeaderView
setButtonHeaderView:
playerStatus
setPlayerStatus:
orderedPlayerIDList
setOrderedPlayerIDList:
_automatchAddedToMinInHeader
_removingEnabled
_autoMatching
_minPlayers
_maxPlayers
_automatchPlayers
_footerStatus
_footerView
_players
_buttonHeaderView
_playerStatus
_orderedPlayerIDList
setAutoresizingMask:
_gkViewFromNib
setBubbleView:
activityView
length
setStatusFooterHidden:animated:
setBubbleFooterHidden:animated:
animateWithDuration:animations:
setActivityView:
bubbleView
_activityView
_bubbleView
setNumberOfLines:
multiplayerHeaderText
setType:
stringByAppendingString:
copyWithZone:
_type
_status
_player
topViewController
setGameCenterModeWithPickerBlock:
setGameCenterPickedHandles:playerNames:
localPlayerAcceptedGameInvite:
playersToInvite:
removeLocalPlayerFromPlayersToInvite
defaultNumberOfPlayers
setDefaultNumberOfPlayers:
inviteMessage
configureCollectionView:
recipients
standardUserDefaults
integerForKey:
setRecipients:
setPlayersToInvite:
loadRecipientsWithCompletionHandler:
loadView
setNeedsFloatIn:
setupCancelButton
configureSubviewsForIOS
dispatchGroup
setUrlPreloadGroup:
preloadShareURL
reporter
report:
viewLayoutMarginsDidChange
safeAreaInsets
didSelectPlayerCountHeader:
setAction:forTarget:
setGameIcon:
loadIconForStyle:withCompletionHandler:
setAction:forTarget:onButtonWithType:
setButtonFooterView:
configureConstraintsForSubviews
setAutomaticallyAdjustsScrollViewInsets:
topLayoutGuide
addObjectsFromArray:
multiplayerDataSource
initWithMinPlayerCount:maxPlayerCount:currentCount:
navigationController
setInteger:forKey:
synchronize
animateBubblesInIfNeeded
setPicker:
alpha
showCollectionView
cancelButtonPressed
initWithBarButtonSystemItem:target:action:
setLeftBarButtonItem:
setAlwaysBounceVertical:
collectionViewLayout
reloadData
invalidateLayout
deselectItemAtIndexPath:animated:
dataSource:didInsertItemsAtIndexPaths:
updateVisibleRemoveButtons
scrollToItemAtIndexPath:atScrollPosition:animated:
dataSource:didRemoveItemsAtIndexPaths:
dataSource:didRefreshItemsAtIndexPaths:
setButtonsEnabled:
setButtonEnabled:animated:
updateUIActionsEnabled:
visibleCells
indexPathForCell:
removedPlayer:
alertControllerWithTitle:message:preferredStyle:
shareFinishedWithContactPlayers:legacyPlayers:
inviteButtonPressed
actionWithTitle:style:handler:
proxyForPlayer:
utilityServicePrivate
openICloudSettings
addAction:
presentViewController:animated:completion:
canSendText
accountServicePrivate
setError:
numberWithBool:
handleServiceUnavailable:
setShareURL:
loadShareURLWithCompletion:
perform:
isICloudAvailableWithHandler:
willShare
leftBarButtonItem
error
share
notifyOnMainQueueWithBlock:
setDidFinishMessageCompose:
setComposeController:
setMessageComposeDelegate:
currentGame
bundleIdentifier
bulletinServicePrivate
fetchMessageImageForBundleID:handler:
initWithData:MIMEType:
initWithPlatformImage:
_gkPathForMessageImage
dataWithContentsOfFile:
setNumberOfPlayers:
setMinimumNumberOfPlayers:
setMaximumNumberOfPlayers:
setImage:
setIcon:
setOriginalURL:
setSpecialization:
dataRepresentation
addRichLinkData:withWebpageURL:
setupPickerBlock
_gkPresentAlertWithTitle:message:buttonTitle:dismissHandler:
contactForAddress:fromContactStore:
containsString:
initWithLabel:value:
setEmailAddresses:
initWithStringValue:
setPhoneNumbers:
setMessagesID:
matchRequest
setInviteMessage:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
initWithKeysToFetch:
setPredicate:
contactType
emailAddresses
phoneNumbers
enumerateContactsWithFetchRequest:error:usingBlock:
dismissViewControllerAnimated:completion:
showPickerForCompose
initWithMaxSelectable:hiddenPlayers:
handleForContact:
allKeys
addEntriesFromDictionary:
setPlayerNamesToPlayers:
setCompletionHandler:
initWithRootViewController:
willPresentPlayerPicker:
setExcludesContacts:
isUnderage
didFinishPickingPlayers:
popToViewController:animated:
arrayByAddingObjectsFromArray:
willQueryGKIDs
invitePlayers:contactPlayers:
invitePlayers:
dispatchGroupWithName:
dictionary
value
friendServicePrivate
requestGKPlayerIDforiCloudIDs:handler:
setInvitesFailedWithError:
loadPlayersForIdentifiers:withCompletionHandler:
notifyOnQueue:block:
playNow
isUserInteractionEnabled
cancel
setDidAcceptGameInvite:
messageComposeViewController:didFinishWithResult:
messageComposeViewController:shouldSendMessage:toRecipients:completion:
multiplayerPlayerCountViewController:didSelectValue:
initWithMatchRequest:
setShowCancelButton:
collectionView:didSelectItemAtIndexPath:
updateButtonViewsWithStatus:
addAutomatchPlayer
removeAutomatchPlayer
removePlayer:
originalMatchRequest
defaultInvitationMessage
setDefaultInvitationMessage:
showCancelButton
didAcceptGameInvite
nearbyDelegate
setNearbyDelegate:
shareURL
addButtonEnabled
setAddButtonEnabled:
composeController
playerNamesToPlayers
didFinishMessageCompose
buttonFooterView
needsFloatIn
picker
urlPreloadGroup
_showCancelButton
_didAcceptGameInvite
_addButtonEnabled
_didFinishMessageCompose
_needsFloatIn
_matchRequest
_originalMatchRequest
_defaultInvitationMessage
_nearbyDelegate
_shareURL
_composeController
_playerNamesToPlayers
_buttonFooterView
_picker
_urlPreloadGroup
backgroundColor
setBlueColor:
heightAnchor
constraintEqualToAnchor:multiplier:constant:
setViewHeightConstraint:
configureViewsAndConstraintsForCurrentTraitCollection
buttonHeightConstraint
setButtonHeightConstraint:
buttonWidthConstraint
setButtonWidthConstraint:
inviteFriendsButton
setInviteFriendsButton:
playNowButton
setPlayNowButton:
viewHeightConstraint
blueColor
_buttonHeightConstraint
_buttonWidthConstraint
_inviteFriendsButton
_playNowButton
_viewHeightConstraint
_blueColor
initWithStyle:
tableView
registerClass:forCellReuseIdentifier:
indexPathForRow:inSection:
setSelectedRowIndexPath:
cellForRowAtIndexPath:
setAccessoryType:
deselectRowAtIndexPath:animated:
dequeueReusableCellWithIdentifier:forIndexPath:
textLabel
numberWithUnsignedLong:
preferredFontForTextStyle:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
selectedCount
setSelectedCount:
pickerMinimumAndRange
setPickerMinimumAndRange:
selectedRowIndexPath
_selectedCount
_delegate
_selectedRowIndexPath
_pickerMinimumAndRange
mutableCopy
firstName
setGivenName:
lastName
setFamilyName:
stubPlayerContactForAvatarView
predicateForContactsWithIdentifiers:
descriptorForRequiredKeys
unifiedContactsMatchingPredicate:keysToFetch:error:
firstObject
loadedPlayerContactForAvatarView
setItems:
addUpdate:error:
loadTurnBasedMatchSummariesIncludingCompatibleBundleID:withCompletionHandler:
isTurnBasedValid
userErrorForCode:underlyingError:
finishWithError:
mode
viewControllers
removeCurrentMatchAndSetFlagIfNotLoaded:withHandler:
turnBasedInviteViewControllerWasCancelled:
cleanupStateForCancelOrErrorWithHandler:
turnBasedInviteViewController:didCreateMatchID:
turnBasedInviteViewController:didFailWithError:
setMode:
setPreloadedMatch:
turnBasedService
finishWithMatchID:
createTurnBasedGameForMatchRequest:individualMessages:handler:
userInfo
intValue
createGameWithPlayersToInvite:forSharing:handler:
setResult:
loadURLWithMatchRequest:completionHandler:
result
reserveShareParticipantSlots:minPlayerCount:maxPlayerCount:andInvitePlayers:withMessage:handler:
currentParticipant
setMatchOutcome:
data
removeWithCompletionHandler:
endMatchInTurnWithMatchData:completionHandler:
isLoadingOrRemovingPreloadedMatch
inviteMessageDictionary
setInviteMessageDictionary:
deletePreloadedMatch
setDeletePreloadedMatch:
_deletePreloadedMatch
_inviteMessageDictionary
_mode
removeTarget:action:
constraintEqualToConstant:
touchesBegan:withEvent:
isEnabled
systemMidGrayColor
touchesEnded:withEvent:
addTarget:action:
iconImageViewLeading
nextImageViewTrailing
setTitleLabel:
countLabel
setCountLabel:
iconImageView
setIconImageView:
tapGesture
setTapGesture:
nextImageView
setNextImageView:
setIconImageViewLeading:
setNextImageViewTrailing:
mayChangeCount
setMayChangeCount:
_mayChangeCount
_titleLabel
_countLabel
_iconImageView
_tapGesture
_nextImageView
_iconImageViewLeading
_nextImageViewTrailing
setUnderlyingDataSource:
sortDescriptorWithKey:ascending:
addSectionWithTitle:sortDescriptors:
collectionViewWillBecomeActive:
bundleID
predicateWithBlock:
setFilterPredicate:forSection:
registerCellClassesForCollectionView:
section
sectionInfoForSection:
setDetailPressedAction:
playingWithParticipantOrFirstKnownPlayer
deleteActionWithName:
setEditActions:
declineInviteWithCompletionHandler:
notifyItemsRemovedAtIndexPaths:
notifyItemMovedFromIndexPath:toIndexPaths:
_gkFilterWithBlock:
notifyBatchUpdate:
itemsForSection:
removeItemAtIndexPath:completionHandler:
numberOfMatches
detailPressedAction
cellMarginInsets
setCellMarginInsets:
_detailPressedAction
_cellMarginInsets
setFullName:
nickname
setNickName:
fullName
handle
setHandle:
stringValue
decimalDigitCharacterSet
invertedSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
recipientForHandle:
recipientForContact:
nickName
_fullName
_handle
_nickName
_contact
nibWithNibName:bundle:
_gkRegisterNib:forCellClass:
isGuestPlayer
setItems:animated:complete:
applicationDidEnterBackground
setMatchesDataSource:
metrics
setFlowColumnWidth:
setUseViewSizeForFlowMaxColumnCount:
horizontalSizeClass
matchesDataSource
setDefaultSectionMetrics:
configureHeader:indexPath:
titleForSection:
setLeftText:
isMultiplayerGamingRestricted
addPressed
detailPressedForMatch:
showExistingMatches
showInviteControllerAnimated:
turnBasedViewController:didFailWithError:
inviteController
loadDataWithCompletionHandlerAndError:
itemAtIndexPath:
acceptInviteForMatch:
showMatch:
showDetailForMatch:
dismissDetailViewControllerAnimated:
setBackButtonTitle:
setInviteController:
turnBasedViewControllerWasCancelled:
loadMatchWithID:withCompletionHandler:
turnBasedServicePrivate
raise:format:
turnBasedViewController:didFindMatch:
launchGameAndShowMatch:
notifyGameWithMatch:orError:
acceptInviteWithCompletionHandler:
loadTurnBasedMatchWithDetailsForMatchID:withCompletionHandler:
showPlay
showQuit
_setHidesShadow:
popoverPresentationController
setPermittedArrowDirections:
setSourceView:
popoverSourceView
setSourceRect:
clearSelectionHighlight
dismissDetailViewControllerInPopover:completion:
gkDataSource
indexPathsForItem:
cellForItemAtIndexPath:
setViewControllers:
presentNavigationControllerInPopover:fromCell:completion:
localPlayerParticipant
setMatchIDWaitingForTurnEvent:
turnBasedViewController:playerQuitForMatch:
loadMatchDataWithCompletionHandler:
participantQuitOutOfTurnWithOutcome:withCompletionHandler:
presentStoreSheetFromViewController:context:completionHandler:
turnBasedMatchDetailViewControllerDidFinish:
popoverControllerShouldDismissPopover:
popoverControllerDidDismissPopover:
popoverController:willRepositionPopoverToRect:inView:
encodeRestorableStateWithCoder:
decodeRestorableStateWithCoder:
applicationFinishedRestoringState
restorationParent
objectRestorationClass
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
_gkRestorePopoverWithViewControllers:completion:
setMatchRequest:
masterViewController
setMasterViewController:
setShowExistingMatches:
setShowPlay:
setShowQuit:
maxMatchesSeen
setMaxMatchesSeen:
matchIDWaitingForTurnEvent
_showExistingMatches
_showPlay
_showQuit
_masterViewController
_matchesDataSource
_maxMatchesSeen
_matchIDWaitingForTurnEvent
_inviteController
windows
turnBasedViewController
refreshMatches
dictionaryWithObjectsAndKeys:
turnBasedServiceViewControllerInterface
turnBasedHostViewControllerInterface
_extensionAuxiliaryVendorProtocol
_extensionAuxiliaryHostProtocol
setMatchRequestInternal:
willChangeValueForKey:
participants
didChangeValueForKey:
setIsDetail:
sectionTitle
v16@0:8
@16@0:8
v24@0:8@16
@"NSString"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
@"NSArray"
@"UIView"
@"NSMutableDictionary"
@"UILabel"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8Q16Q24
v28@0:8I16@20
v28@0:8I16@"NSDictionary"20
v24@0:8@"GKFriendRequestInternal"16
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@"NSData"16
v32@0:8@"NSDictionary"16@?<v@?B>24
@"GKGame"16@0:8
v24@0:8@"GKGame"16
v40@0:8@"NSObject"16@"NSString"24@?<v@?B>32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSXPCListenerEndpoint">32
v24@0:8q16
v24@0:8@?16
v24@0:8@"GKChallenge"16
v24@0:8@"GKTurnBasedMatch"16
v24@0:8@"NSString"16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v20@0:8B16
v32@0:8@16@24
v28@0:8@16B24
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
@"UIViewController"
@"GKGame"
@"UIVisualEffectView"
@"NSLayoutConstraint"
q16@0:8
v48@0:8@16@24@32^v40
v32@0:8q16@?24
B32@0:8@16@24
@"NSObject<GKTurnBasedMatchDetailViewControllerDelegate>"
@"GKTurnBasedMatch"
@"GKTurnBasedParticipantsDataSource"
@"GKTurnBasedMatchDetailHeaderView"
@"UIButton"
{CGSize=dd}16@0:8
@32@0:8@16@24
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
v32@0:8{CGSize=dd}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"NSDictionary"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"GKMultiplayerParticipant"
@"GKDashboardPlayerPhotoView"
@40@0:8@16@24@32
v36@0:8I16@20@28
q24@0:8@16
{_NSRange=QQ}16@0:8
v32@0:8@16q24
v36@0:8@16q24B32
B24@0:8q16
v32@0:8q16@24
@24@0:8q16
v40@0:8@16q24@32
v28@0:8B16@20
@"GKMultiplayerFooterView"
@"NSMutableOrderedSet"
@"GKMultiplayerButtonHeaderView"
@"GKMultiplayerHeaderView"
v24@0:8B16B20
@"GKMultiplayerActivityView"
@"GKMultiplayerBubbleView"
v32@0:8q16q24
@"GKLabel"
@24@0:8^{_NSZone=}16
@"GKPlayer"
v32@0:8@"MFMessageComposeViewController"16q24
v48@0:8@16@24@32@?40
v48@0:8@"MFMessageComposeViewController"16@"NSString"24@"NSArray"32@?<v@?B>40
v32@0:8@"GKMultiplayerPlayerCountViewController"16q24
@"GKMatchRequest"
@"<GKDashboardNearbyBrowserDelegate>"
@"NSURL"
@"MFMessageComposeViewController"
@"GKMultiplayerButtonFooterView"
@"GKDashboardMultiplayerPickerViewController"
@"GKDispatchGroup"
v40@0:8:16@24q32
@"UIColor"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24@32
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
@32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
q32@0:8@16q24
q40@0:8@16@24q32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
@40@0:8q16q24q32
v32@0:8{_NSRange=QQ}16
@"<GKMultiplayerPlayerCountViewControllerDelegate>"
@"NSIndexPath"
{_NSRange="location"Q"length"Q}
v36@0:8@16B24@?28
v28@0:8B16@?20
@"<GKTurnBasedInviteViewControllerDelegate>"
v32@0:8:16@24
@"UIImageView"
@"UITapGestureRecognizer"
:16@0:8
v24@0:8:16
@"CNContact"
v24@0:8@"GKTurnBasedInviteViewController"16
v32@0:8@"GKTurnBasedInviteViewController"16@"NSString"24
v32@0:8@"GKTurnBasedInviteViewController"16@"NSError"24
v24@0:8@"GKTurnBasedMatchDetailViewController"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
B24@0:8@"UIPopoverController"16
v24@0:8@"UIPopoverController"16
v40@0:8@"UIPopoverController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v24@0:8@"NSCoder"16
@"<UIStateRestoring>"16@0:8
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
B28@0:8I16@20
@"<GKTurnBasedMatchesViewControllerDelegate>"
@"GKCollectionViewController"
@"GKTurnBasedMatchesDataSource"
@"GKTurnBasedInviteViewController"
v24@0:8@"GKTurnBasedMatchesViewController"16
v32@0:8@"GKTurnBasedMatchesViewController"16@"NSError"24
v32@0:8@"GKTurnBasedMatchesViewController"16@"GKTurnBasedMatch"24
v24@0:8@"GKMatchRequestInternal"16
skipValueString
T@"NSString",&,N,V_skipValueString
lastSelectedValue
T@"NSString",&,N,V_lastSelectedValue
buttons
T@"NSArray",&,N,V_buttons
buttonView
T@"UIView",&,N,V_buttonView
centeringView
T@"UIView",&,N,V_centeringView
buttonsToTitles
T@"NSMutableDictionary",&,N,V_buttonsToTitles
values
T@"NSArray",&,N,V_values
spinner, label
spacing
[spinner]-spacing-[label]
label
T@"UILabel",N,V_label
text
T@"NSString",C,N
_gkCNContact
contact
T@"CNContact",&,N
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v8@?0
DONE_BUTTON_TITLE
v16@?0@"NSError"8
GameKit
SERVICE
%s %s:%d | %@
-[GKExtensionViewController hostObjectProxy]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.11/GameCenterUI/iOS/Framework/Extensions/GKExtensionViewController.m
error calling host - %@
Error
-[GKExtensionViewController messageFromClient:]
error while decoding messageFromClient archive in GKExtensionViewController:%@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
game
T@"GKGame",&,N
hasInitialData
TB,N,V_hasInitialData
effectView
T@"UIVisualEffectView",N,V_effectView
effectBottomConstraint
T@"NSLayoutConstraint",&,N,V_effectBottomConstraint
effectTopConstraint
T@"NSLayoutConstraint",&,N,V_effectTopConstraint
alwaysShowDoneButton
TB,N,V_alwaysShowDoneButton
statusBarHeight
Td,N,V_statusBarHeight
contentViewController
T@"UIViewController",&,N,V_contentViewController
T@"GKGame",&,N,V_game
hostPID
Ti,N,V_hostPID
adjustTopConstraint
TB,N,V_adjustTopConstraint
-[GKExtensionContext hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:]
NSBundleResourceRequest encountered a sandboxing error (sandbox_extension_consume): %d
sandboxToken
Tq,N,V_sandboxToken
TurnBasedMatchDetail
match
detailHeader
GKTurnBasedMatchDetailHeaderKind
CHALLENGE_OR_TURN_GAME_NOT_INSTALLED_RESTRICTED_MESSAGE_FORMAT
CHALLENGE_OR_TURN_PLAY_BUTTON_DISABLED_CURRENT_GAME_NOT_AVAILABLE_FORMAT
TURNS_MATCH_DETAIL_ACCEPT_INVITE
TURNS_MATCH_DETAIL_PLAY_YOUR_TURN_BUBBLE
TURNS_MATCH_DETAIL_VIEW_MATCH
opacity
stayFaded
TURNS_MATCH_DETAIL_DECLINE_INVITE
TURNS_MATCH_DETAIL_QUIT_GAME
TURNS_MATCH_DETAIL_REMOVE_GAME
bad state
participantsDataSource
T@"GKTurnBasedParticipantsDataSource",&,N,V_participantsDataSource
headerView
T@"GKTurnBasedMatchDetailHeaderView",&,N,V_headerView
didFloatInBubbles
TB,N,V_didFloatInBubbles
isCompactHeader
TB,N,V_isCompactHeader
T@"GKTurnBasedMatch",&,N,V_match
isInGame
TB,N,V_isInGame
shouldShowPlay
TB,N,V_shouldShowPlay
shouldShowQuit
TB,N,V_shouldShowQuit
delegate
T@"NSObject<GKTurnBasedMatchDetailViewControllerDelegate>",N,V_delegateWeak
shareButton
T@"UIButton",N,V_shareButton
playButton
T@"UIButton",N,V_playButton
v32@?0@"NSIndexPath"8@"UICollectionViewLayoutAttributes"16^B24
cellLayoutInfo
T@"NSDictionary",&,N,V_cellLayoutInfo
landscapeItemSize
T{CGSize=dd},N,V_landscapeItemSize
insets
T{UIEdgeInsets=dddd},N,V_insets
itemSize
T{CGSize=dd},N,V_itemSize
separatorSize
T{CGSize=dd},N,V_separatorSize
headerSize
T{CGSize=dd},N,V_headerSize
footerSize
T{CGSize=dd},N,V_footerSize
itemMargin
T{CGPoint=dd},N,V_itemMargin
headerGap
Td,N,V_headerGap
footerGap
Td,N,V_footerGap
numberOfColumnsInPortrait
Tq,N,V_numberOfColumnsInPortrait
isPortrait
TB,N,V_isPortrait
AUTO_MATCH
Status goes here
MULTIPLAYER_STATUS_ACCEPTED
MULTIPLAYER_STATUS_INVITATION_SENT
MULTIPLAYER_STATUS_DECLINED
MULTIPLAYER_STATUS_DISCONNECTED
MULTIPLAYER_STATUS_FAILED
MULTIPLAYER_STATUS_CONNECTING
MULTIPLAYER_STATUS_TO_BE_INVITED
MULTIPLAYER_TITLE_PLAYER_NUMBER
MULTIPLAYER_STATUS_AUTOMATCH_IOS
GKCheckMark
 participant = %@
GKMultiplayerCollectionViewCell
nameLabel
T@"UILabel",&,N,V_nameLabel
statusLabel
T@"UILabel",&,N,V_statusLabel
accessoryContainerView
T@"UIView",&,N,V_accessoryContainerView
iconView
T@"GKDashboardPlayerPhotoView",&,N,V_iconView
cellLeadingConstraint
T@"NSLayoutConstraint",&,N,V_cellLeadingConstraint
nameLabelBaselineConstraintToCenterLine
T@"NSLayoutConstraint",&,N,V_nameLabelBaselineConstraintToCenterLine
statusLabelTopConstraintToNameBaseline
T@"NSLayoutConstraint",&,N,V_statusLabelTopConstraintToNameBaseline
statusLabelBaselineConstraintToNameBaseline
T@"NSLayoutConstraint",&,N,V_statusLabelBaselineConstraintToNameBaseline
nameLabelCenterlineConstraintToCenterline
T@"NSLayoutConstraint",&,N,V_nameLabelCenterlineConstraintToCenterline
participant
T@"GKMultiplayerParticipant",C,N,V_participant
removable
TB,N,V_removable
number
Tq,N,V_number
V:|[line]|
line
-[GKMultiplayerDataSource replaceContactPlayers:withNormalPlayers:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.11/GameCenterUI/iOS/Framework/GKMultiplayerDataSource.m
error: number of contact players and normal players doesn't match, can't replace!
error: tried to replace a player not in the data source: %@
playerID
playerStatus
T@"NSMutableDictionary",&,N,V_playerStatus
T@"GKMultiplayerHeaderView",&,N,V_headerView
players
T@"NSMutableOrderedSet",&,N,V_players
autoMatching
TB,N,V_autoMatching
orderedPlayerIDList
T@"NSMutableOrderedSet",&,N,V_orderedPlayerIDList
minPlayers
Tq,N,V_minPlayers
maxPlayers
Tq,N,V_maxPlayers
automatchPlayers
Tq,N,V_automatchPlayers
automatchAddedToMinInHeader
TB,N,V_automatchAddedToMinInHeader
removingEnabled
TB,N,V_removingEnabled
footerStatus
T@"NSString",C,N,V_footerStatus
footerView
T@"GKMultiplayerFooterView",&,N,V_footerView
buttonHeaderView
T@"GKMultiplayerButtonHeaderView",N,V_buttonHeaderView
activityView
T@"GKMultiplayerActivityView",&,N,V_activityView
bubbleView
T@"GKMultiplayerBubbleView",&,N,V_bubbleView
MULTIPLAYER_PLAYER_COUNT_SUBTITLE
MULTIPLAYER_PLAYER_RANGE
T@"GKLabel",&,N,V_label
None
Invited
Declined
Disconnected
Failed
Unauthenticated
Connecting
Ready
TurnBasedInvited
FindingPlayer
Automatched
ToBeInvited
 player = %@, status = %@
Auto-match
type
Tq,N,V_type
status
Tq,N,V_status
player
T@"GKPlayer",&,N,V_player
com.apple.gamecenter.recentnumberofplayers
v16@?0@"NSArray"8
GKMATCHMAKERVIEWCONTROLLER_TITLE
v32@?0@"UIImage"8@"GKGame"16@"NSError"24
ICLOUD_FAILURE_ALERT_MESSAGE
ICLOUD_SIGN_IN_ALERT_MESSAGE
CANCEL_BUTTON
v16@?0@"UIAlertAction"8
ICLOUD_ACCOUNTS_SETTINGS_BUTTON
Match
-[GKMultiplayerViewController preloadShareURL]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.11/GameCenterUI/iOS/Framework/GKMultiplayerViewController.m
preloading share URL
-[GKMultiplayerViewController preloadShareURL]_block_invoke_2
CloudKit is available: %@ error:%@
loadShare url:%@ error:%@
v24@?0@"NSURL"8@"NSError"16
v16@?0@?<v@?>8
v20@?0B8@"NSError"12
-[GKMultiplayerViewController shareButtonPressed]_block_invoke
joined with preload group
v16@?0@"NSData"8
image/png
PLAYER_PICKER_INVITE_EXCEEDED_FORMAT_NONSTANDARDONE
PLAYER_PICKER_INVITE_EXCEEDED_FORMAT_NONSTANDARDMANY
OK_BUTTON
v24@?0@"CNContact"8^B16
v24@?0@"NSArray"8@"NSString"16
-[GKMultiplayerViewController didFinishPickingPlayers:]
players: %@
-[GKMultiplayerViewController invitePlayers:contactPlayers:]
contactPlayers: %@
iCloudPlayerIDLookup
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
composeController
T@"MFMessageComposeViewController",&,N,V_composeController
playerNamesToPlayers
T@"NSDictionary",&,N,V_playerNamesToPlayers
didFinishMessageCompose
TB,N,V_didFinishMessageCompose
T@"GKMultiplayerButtonHeaderView",&,N,V_buttonHeaderView
buttonFooterView
T@"GKMultiplayerButtonFooterView",&,N,V_buttonFooterView
needsFloatIn
TB,N,V_needsFloatIn
picker
T@"GKDashboardMultiplayerPickerViewController",&,N,V_picker
urlPreloadGroup
T@"GKDispatchGroup",&,N,V_urlPreloadGroup
matchRequest
T@"GKMatchRequest",R,C,N,V_matchRequest
originalMatchRequest
T@"GKMatchRequest",R,C,N,V_originalMatchRequest
defaultInvitationMessage
T@"NSString",C,N,V_defaultInvitationMessage
showCancelButton
TB,N,V_showCancelButton
didAcceptGameInvite
TB,N,V_didAcceptGameInvite
nearbyDelegate
T@"<GKDashboardNearbyBrowserDelegate>",N,V_nearbyDelegate
shareURL
T@"NSURL",&,N,V_shareURL
multiplayerDataSource
T@"GKMultiplayerDataSource",R,N
addButtonEnabled
TB,N,V_addButtonEnabled
INVITE_FRIENDS_BUTTON_TITLE
PLAY_NOW_BUTTON_TITLE
buttonHeightConstraint
T@"NSLayoutConstraint",&,N,V_buttonHeightConstraint
buttonWidthConstraint
T@"NSLayoutConstraint",&,N,V_buttonWidthConstraint
inviteFriendsButton
T@"UIButton",&,N,V_inviteFriendsButton
playNowButton
T@"UIButton",&,N,V_playNowButton
viewHeightConstraint
T@"NSLayoutConstraint",&,N,V_viewHeightConstraint
blueColor
T@"UIColor",&,N,V_blueColor
PlayerCountCellIdentifier
TURNS_MATCH_DETAIL_PLAYERS_TITLE
MULTIPLAYER_PLAYER_COUNT_SELECTION_HEADER
pickerMinimumAndRange
T{_NSRange=QQ},N,V_pickerMinimumAndRange
selectedCount
Tq,N,V_selectedCount
selectedRowIndexPath
T@"NSIndexPath",&,N,V_selectedRowIndexPath
T@"<GKMultiplayerPlayerCountViewControllerDelegate>",W,N,V_delegate
GKMultiplayerCollectionViewCellAccessoryLeft
MULTIPLAYER_ACTIVITY_STARTING_GAME
MULTIPLAYER_ACTIVITY_INVITING
v24@?0@"GKTurnBasedMatchInternal"8@"NSError"16
TURN_BASED_INVITE_MAX_SESSIONS_TITLE
TURN_BASED_INVITE_MAX_SESSIONS_MESSAGE
TURN_BASED_INVITE_OTHER_MAX_SESSIONS_TITLE
TURN_BASED_INVITE_OTHER_MAX_SESSIONS_MESSAGE
TURN_BASED_CREATE_FAILED_TITLE
TURN_BASED_CREATE_FAILED_MESSAGE
loadShareURLWithCompletion
v24@?0@"GKTurnBasedMatch"8@"NSError"16
-[GKTurnBasedInviteViewController shareFinishedWithContactPlayers:legacyPlayers:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.11/GameCenterUI/iOS/Framework/GKTurnBasedInviteViewController.m
Error reserving turn-based slots: %@
removeCurrentMatchGroup
inviteMessageDictionary
T@"NSMutableDictionary",&,N,V_inviteMessageDictionary
mode
Tq,N,V_mode
deletePreloadedMatch
TB,N,V_deletePreloadedMatch
loadingOrRemovingPreloadedMatch
TB,R,N,GisLoadingOrRemovingPreloadedMatch
T@"<GKTurnBasedInviteViewControllerDelegate>",N,V_delegateWeak
GKUITableNext
titleLabel
T@"UILabel",&,N,V_titleLabel
countLabel
T@"UILabel",&,N,V_countLabel
iconImageView
T@"UIImageView",&,N,V_iconImageView
tapGesture
T@"UITapGestureRecognizer",&,N,V_tapGesture
nextImageView
T@"UIImageView",&,N,V_nextImageView
iconImageViewLeading
T@"NSLayoutConstraint",&,N,V_iconImageViewLeading
nextImageViewTrailing
T@"NSLayoutConstraint",&,N,V_nextImageViewTrailing
mayChangeCount
TB,N,V_mayChangeCount
CurrentGameKey
LocalPlayerKey
StatusBarHeightKey
HostPIDKey
RTLKey
MatchesShowPlayForMatch
MatchesShowQuitForMatch
MatchesMatchRequestInternal
MatchesShowExistingMatches
MessageCommandKey
MessageParamKey
TURNS_ACTIVE_GAMES_TITLE
dateSortKey
TURNS_COMPLETED_GAMES_TITLE
B24@?0@"GKTurnBasedMatch"8@"NSDictionary"16
SWIPE_TO_EDIT_TURN_REMOVE_BUTTON
@24@?0@8Q16
detailPressedAction
T:,N,V_detailPressedAction
cellMarginInsets
T{UIEdgeInsets=dddd},N,V_cellMarginInsets
fullName
T@"NSString",&,N,V_fullName
handle
T@"NSString",&,N,V_handle
nickName
T@"NSString",&,N,V_nickName
T@"NSString",&,N,V_label
T@"CNContact",&,N,V_contact
GKMultiplayerCollectionViewCell_iOS
GKMultiplayerCollectionViewCellAccessoryLeft_iOS
TurnBasedMatches
SectionHeader
TURN_BASED_MATCHMAKER_GAMES
%@ (match != ((void *)0) || error != ((void *)0))
[%s (%s:%d)]
Assertion failed
-[GKTurnBasedMatchesViewController notifyGameWithMatch:orError:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.11/GameCenterUI/iOS/Framework/GKTurnBasedMatchesViewController_iOS.m
GameKit Exception
error loading TBG match details: %@
%@ (match)
[%s (%s:%d)]
-[GKTurnBasedMatchesViewController acceptInviteForMatch:]
v24@?0@"NSData"8@"NSError"16
-[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidQuitMatch:]
localParticipant: %@ has unexpected status for being active in match: %@
restorationParent
T@"<UIStateRestoring>",R,N
objectRestorationClass
T#,R,N
matchesDataSource
T@"GKTurnBasedMatchesDataSource",&,N,V_matchesDataSource
maxMatchesSeen
Tq,N,V_maxMatchesSeen
matchIDWaitingForTurnEvent
T@"NSString",&,N,V_matchIDWaitingForTurnEvent
inviteController
T@"GKTurnBasedInviteViewController",&,N,V_inviteController
T@"GKMatchRequest",&,N,V_matchRequest
masterViewController
T@"GKCollectionViewController",N,V_masterViewController
T@"<GKTurnBasedMatchesViewControllerDelegate>",N,V_delegateWeak
showExistingMatches
TB,N,V_showExistingMatches
showPlay
TB,N,V_showPlay
showQuit
TB,N,V_showQuit
DEFAULT_GAME_INVITATION_MESSAGE_FORMAT
-[GKTurnBasedMatchmakerExtensionViewController messageFromClient:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.11/GameCenterUI/iOS/Framework/Extensions/GKTurnBasedMatchmakerExtensionViewController.m
error while decoding messageFromClient archive in GKTurnBasedMatchmakerExtensionViewController:%@
-[GKTurnBasedMatchmakerExtensionViewController hostObjectProxy]_block_invoke
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DataProtectionClass</key>
<string>NSFileProtectionComplete</string>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.accounts.facebook.defaultaccess</key>
<true/>
<key>com.apple.developer.game-center</key>
<array>
<string>Account</string>
<string>Scores</string>
<string>Achievements</string>
<string>Challenges</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.canModifyAppLinkPermissions</key>
<true/>
<key>com.apple.private.contactsui</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.game-center</key>
<array>
<string>Account</string>
<string>Authenticate</string>
<string>Profile</string>
<string>Friends</string>
<string>Games</string>
<string>Scores</string>
<string>Achievements</string>
<string>Challenges</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
<string>GameStats</string>
</array>
<key>com.apple.private.ids.idquery-cache</key>
<true/>
<key>com.apple.private.ids.idsremoteurlconnection</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.madrid</string>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imtranscoderservice</key>
<true/>
<key>com.apple.private.mobilesms.messages-recipient-vetting</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
