__PuppetCollectionViewCellAccessibility_super
SafeCategory
PuppetCollectionViewCellAccessibility
__PuppetCollectionViewControllerAccessibility_super
PuppetCollectionViewControllerAccessibility
AXJellyfishGlue
__StarfishLaunchViewControllerAccessibility_super
StarfishLaunchViewControllerAccessibility
__RecordButtonAccessibility_super
RecordButtonAccessibility
__UIScrollViewAccessibility_Jellyfish_UIKit_super
UIScrollViewAccessibility_Jellyfish_UIKit
AX_AvatarCarousel
__MessagesViewControllerAccessibility_super
MessagesViewControllerAccessibility
PuppetCollectionViewCell
setSelected:
PuppetCollectionViewController
_puppetCollectionView
UICollectionView
numberOfPrecedingCells
collectionView:cellForItemAtIndexPath:
avatarDataSource
recordIndexForIndexPath:
AVTAvatarRecordDataSource
recordAtIndex:
AVTAvatarRecord
editable
identifier
starfish.add
v8@?0
starfish.avatar
puppet.name.%@
B16@?0@"AXValidationManager"8
Animoji AX
Animoji
v16@?0@"AXValidationManager"8
MessagesViewControllerAccessibility
PuppetCollectionViewControllerAccessibility
PuppetCollectionViewCellAccessibility
RecordButtonAccessibility
UIScrollViewAccessibility_Jellyfish_UIKit
StarfishLaunchViewControllerAccessibility
Accessibility
StarfishLaunchViewController
videoController
bottomVideoController
splash.video
splash.bottom.video
RecordButton
UIControl
enabled
UIScrollView
AXScrolling
_avatarListController.multiAvatarController
presentationStyle
_UIState
starfish.carousel
liveCell
AVTAvatarListCell
_puppetCollectionViewController
selectedRecord
avtView
_userInfoLabel
__AXStringForVariablesSentinel
_arSessionState
face.tracking.paused.hint
emoji.puppet.hint
collectionView
listItems
messagesController
T@,W,N,V_messagesController
MessagesViewController
MSMessagesAppViewController
_confirmSendingMessageButton
UIButton
_cancelSendingMessageButton
_replayMessageButton
_editButton
_recordButton
_recording
BOOL
_puppetView
AVTRecordView
_oldIsFacetracking
UILabel
_avatarListController
<AVTRecordingCarouselController>
_avatarDataSource
AVTPuppetView
mute
faceIsTracked
displaysLaunchScreen
AVTMultiAvatarController
addItemView
avatar
handleRecordTap:
viewDidLoad
updateUIState:animated:
observeValueForKeyPath:ofObject:change:context:
handleSceneShortPress:
recordingDidFinish
showUserInfoLabelWithText:
hideUserInfoLabelWithDuration:
handleResumeTrackingTap:
willTransitionToPresentationStyle:
dismissAvatarUIControllerAnimated:
dismissStarfishLaunchScreenIfNecessaryForPresentationStyle:
updateEditButtonVisibilityForceHide:
numberOfRecords
updateCurrentDisplayedRecordAnimated:
avtui_isMoving
button.record.hint
button.send
button.cancel
button.replay
button.edit
_recordTimerLabel
@"NSString"8@?0
view
multiAvatarController.liveCell
button.record.stop
button.record.start
_avatarListController.multiAvatarController.liveCell
face.tracking.enabled
face.tracking.disabled
class
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:hasInstanceMethod:withFullSignature:
setSelected:
setAccessibilityTraits:
_accessibilityPerformValidations:
validateClass:hasInstanceVariable:withType:
validateProtocol:hasProperty:
collectionView:cellForItemAtIndexPath:
setIsAccessibilityElement:
safeIntegerForKey:
setAccessibilityLabel:
recordIndexForIndexPath:
safeValueForKey:
recordAtIndex:
safeBoolForKey:
safeStringForKey:
stringWithFormat:
sharedInstance
setValidationTargetName:
setOverrideProcessName:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
alloc
init
accessibilityBundles
accessibilityInitializeBundle
bundleForClass:
localizedStringForKey:value:table:
validateClass:hasProperty:withType:
_accessibilityLoadAccessibilityInformation
view
viewDidLoad
validateClass:isKindOfClass:
isAccessibilityElement
_accessibilityBoolValueForKey:
avtui_isMoving
initWithAccessibilityContainer:
setMessagesController:
messagesController
safeValueForKeyPath:
safeUnsignedIntegerForKey:
_axContainerAvatarController
_axMessagesControllerIsExpanded
isKindOfClass:
safeUIViewForKey:
accessibilityLabel
accessibilityValue
text
accessibilityTraits
indexPathForCell:
count
_accessibilitySetBoolValue:forKey:
section
indexPathForRow:inSection:
scrollToItemAtIndexPath:atScrollPosition:animated:
updateCurrentDisplayedRecordAnimated:
accessibilityContainer
frame
initWithMessagesController:accessibilityContainer:
accessibilityHint
accessibilityIncrement
accessibilityDecrement
accessibilityFrameInContainerSpace
.cxx_destruct
_messagesController
validateClass:
_accessibilityUpdateRecordButtonLabel
setAccessibilityHint:
initWithString:
setAttribute:forKey:
_setAccessibilityLabelBlock:
_accessibilityUpdateCollectionViewAccessibilityForPresentationStyle:
_setAXLiveCell:
_axAvatarCarousel
_setAXAvatarCarousel:
axArrayByIgnoringNilElementsWithCount:
setAccessibilityElements:
setAccessibilityElementsHidden:
handleRecordTap:
isEqualToString:
_axLiveCell
isEqual:
observeValueForKeyPath:ofObject:change:context:
recordingDidFinish
showUserInfoLabelWithText:
_axLastUserInfoString
_setAXLastUserInfoString:
hideUserInfoLabelWithDuration:
willTransitionToPresentationStyle:
dismissStarfishLaunchScreenIfNecessaryForPresentationStyle:
updateEditButtonVisibilityForceHide:
@16@0:8
#16@0:8
v24@0:8@16
v20@0:8B16
@32@0:8@16@24
v16@0:8
B16@0:8
Q16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8Q16
v48@0:8@16@24@32^v40
v24@0:8d16
