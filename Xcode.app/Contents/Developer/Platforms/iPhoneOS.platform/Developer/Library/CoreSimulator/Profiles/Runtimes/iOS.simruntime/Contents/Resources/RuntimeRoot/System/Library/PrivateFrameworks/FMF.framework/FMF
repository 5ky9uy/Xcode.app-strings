FMFHomeKitAutomationDeviceChangedNotification
v8@?0
v20@?0B8@"NSError"12
FMFMeDeviceChangedNotification
FMFDevicesChangedNotification
v16@?0@"NSString"8
-[FMFSession(Internal) getActiveLocationSharingDevice]
v24@?0@"FMFDevice"8@"NSError"16
-[FMFSession(Internal) getAllDevices]
v24@?0@"NSSet"8@"NSError"16
-[FMFSession(Internal) maxLocatingInterval]
v24@?0d8@"NSError"16
v12@?0B8
v16@?0@"NSDictionary"8
v24@?0@"NSError"8@"NSString"16
v32@?0@"FMFLocation"8@"NSString"16@"NSError"24
B24@?0@"FMFDevice"8@"NSDictionary"16
v16@?0@"NSError"8
v28@?0B8@"NSString"12@"NSError"20
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSDate"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.icloud.FMF.FMFMapXPCService
v24@?0@"NSData"8@"NSError"16
FMFMapXPCService
mapCache
T@"FMFMapCache",&,N,V_mapCache
connection
T@"NSXPCConnection",&,N,V_connection
v24@?0@"CNContact"8@"NSError"16
v32@?0@"FMFHandle"8@"CLLocation"16@"NSError"24
v40@?0@"FMFHandle"8@"CNContact"16@"CLLocation"24@"NSError"32
v24@?0@"NSString"8@"NSError"16
identifier
serverId
dsid
expiresByGroupId
trackingTimestamp
hashedDSID
favoriteOrder
idsStatus
reachable
qualifiedIdentifier
<%@ %p [%@]>
+()-
supportsSecureCoding
TB,R
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_serverId
T@"NSNumber",C,N,V_dsid
isFamilyMember
TB,N,V_isFamilyMember
aliasServerIds
T@"NSArray",C,N,V_aliasServerIds
invitationSentToIds
T@"NSArray",C,N,V_invitationSentToIds
T@"NSDictionary",C,N,V_expiresByGroupId
T@"NSString",C,N,V_hashedDSID
pending
TB,N,GisPending,V_pending
T@"NSNumber",C,N,V_trackingTimestamp
T@"NSNumber",C,N,V_favoriteOrder
_prettyNameInternal
T@"NSString",C,N,V__prettyNameInternal
Tq,N,V_idsStatus
TB,N,V_reachable
T@"NSString",C,N,V_qualifiedIdentifier
mapImage
latitude
longtitude
altitude
pitch
width
height
cachingEnabled
priority
%@%@%@%@%@%@
location
T@"CLLocation",&,N,V_location
Td,N,V_altitude
T@"NSString",R,N
Td,N,V_pitch
Td,N,V_width
Td,N,V_height
TB,N,V_cachingEnabled
Tq,N,V_priority
v24@?0@"NSArray"8@"NSError"16
favoriteOrder != nil
locationsCache
T@"NSMutableDictionary",&,N,V_locationsCache
followers
T@"NSSet",&,N,V_followers
following
T@"NSSet",&,N,V_following
locations
T@"NSSet",&,N,V_locations
fences
T@"NSSet",&,N,V_fences
administrativeArea
country
formattedAddressLines
locality
stateCode
streetAddress
streetName
T@"NSArray",&,N,V_formattedAddressLines
T@"NSString",&,N,V_locality
T@"NSString",&,N,V_administrativeArea
T@"NSString",&,N,V_country
state
T@"NSString",&,N,V_state
T@"NSString",&,N,V_streetAddress
T@"NSString",&,N,V_streetName
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"NSSet"8@"NSSet"16@"NSError"24
_$!<home>!$_
_$!<work>!$_
_$!<school>!$_
_$!<gym>!$_
timestamp
longitude
horizontalAccuracy
address
CITY_STATE_LABEL
labels
label
LogLocation
Handle: %@,
Location: %@,
shortAddressString: %@,
LongAddress: %@ 
 placemark: %@
%@(0x%lX) - %@ placemark:
MKAnnotation
handle
shortAddressString
longAddress
isLocatingInProgress
maxLocatingInterval
placemark
LOCATION_AGE_NOW
LOCATION_AGE_LESS_THAN_30SECONDS
LOCATION_AGE_MINUTES
LOCATION_AGE_LESS_THAN_1HR
LOCATION_AGE_MORE_THAN_1HR
LOCATION_LABEL_WITH_AGE
LOCATING
ADDRESS_UNAVAILABLE
LOCATION_NOT_AVAILABLE
locatingInProgressChanged
overlay
T@"FMAccuracyOverlay",&,N
Td,N
coordinate
T{CLLocationCoordinate2D=dd},N
distanceFromUser
isBorderEnabled
TB,N
tintColor
T@"UIColor",&,N
largeAnnotationIcon
T@"UIImage",&,N
smallAnnotationIcon
largeOverlayIcon
smallOverlayIcon
title
T@"NSString",R,C,N
subtitle
T@"FMFHandle",&,N,V_handle
T@"FMFPlacemark",&,N,V_placemark
T@"NSString",&,N,V_label
locatingInProgress
TB,N,GisLocatingInProgress,V_locatingInProgress
T@"NSString",C,N,V_shortAddressString
T@"NSString",C,N,V_longAddress
T@"NSDate",C,N,V_timestamp
Td,N,V_maxLocatingInterval
Td,N,V_TTL
distance
Td,N,V_distance
distanceDescription
T@"NSString",&,N,V_distanceDescription
T@"NSString",&,N,V_age
shortAddress
T{CLLocationCoordinate2D=dd},N,V_coordinate
T@"FMAccuracyOverlay",&,N,V_overlay
Td,N,V_horizontalAccuracy
Td,N,V_distanceFromUser
TB,N,V_isBorderEnabled
T@"UIColor",&,N,V_tintColor
T@"UIImage",&,N,V_largeAnnotationIcon
T@"UIImage",&,N,V_smallAnnotationIcon
T@"UIImage",&,N,V_largeOverlayIcon
T@"UIImage",&,N,V_smallOverlayIcon
gridImage
noLocationImage
fileProtectionDisabled
com.apple.mobileme.fmf1
FMFMapCacheMeta.data
com.apple.icloud.FMF.CacheMetaIO
com.apple.icloud.FMF.GridImageIO
com.apple.icloud.FMF.NoLocationImageIO
com.apple.icloud.FMF.MapImageIO
com.apple.icloud.FMF.PendingImageQueue
cacheMetaData
T@"NSMutableDictionary",&,N,V_cacheMetaData
gridImageMetaData
T@"NSMutableDictionary",&,N,V_gridImageMetaData
noLocationImageMetaData
T@"NSMutableDictionary",&,N,V_noLocationImageMetaData
mapImageMetaData
T@"NSMutableDictionary",&,N,V_mapImageMetaData
pendingMapImageMetaData
T@"NSMutableDictionary",&,N,V_pendingMapImageMetaData
cachePath
T@"NSString",&,N,V_cachePath
imageCachePath
T@"NSString",&,N,V_imageCachePath
cacheMetaQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheMetaQueue
gridImageQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gridImageQueue
noLocationImageQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_noLocationImageQueue
mapImageQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mapImageQueue
pendingImageQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingImageQueue
mapLocationDistanceThreshold
Td,N,V_mapLocationDistanceThreshold
fileProtectionDeactivated
TB,N,V_fileProtectionDeactivated
deviceId
deviceName
isActiveDevice
isThisDevice
idsDeviceId
isAutoMeCapable
%@ [%@] {meDevice=%@} {thisDevice=%@} {idsDeviceId=%@}
<%@ %p [%@:%@]> meDevice ? (%@) : thisDevice ? (%@) : idsDeviceId (%@)
T@"NSString",C,N,V_deviceId
T@"NSString",C,N,V_deviceName
TB,N,V_isActiveDevice
TB,N,V_isThisDevice
TB,N,V_isAutoMeCapable
T@"NSString",C,N,V_idsDeviceId
FMFAppAccountInfo(0x%lx) %@,%@,%@,%ld,%@,%@,%@
(not-nil)
(nil)
T@"NSString",&,N,V_dsid
username
T@"NSString",&,N,V_username
appServerHost
T@"NSString",&,N,V_appServerHost
appAuthToken
T@"NSString",&,N,V_appAuthToken
appAuthTokenStatus
Tq,N,V_appAuthTokenStatus
legacyDsid
T@"NSString",&,N,V_legacyDsid
legacyUsername
T@"NSString",&,N,V_legacyUsername
v24@?0@"FMFFence"8@"NSError"16
com.apple.icloud.fmfd
FMFMapXPC
defaultFMF
kFMFGroupIdOneToOne
kFMFGroupIdGroup
com.apple.icloud.fmf.error
com.apple.icloud.fmf.fence.error
FMFSessionDaemonDidLaunchNotification
session
T@"FMFSession",W,N,V_session
com.apple.icloud.fmfd.launched
FMFSessionConnectionQueue
FMFSession.count
FMFSession-HandlesQueue
FMFAllowed
internalHandles
T@"NSMutableSet",&,N,V_internalHandles
cachedGetHandlesSharingLocationsWithMe
T@"NSSet",&,N,V_cachedGetHandlesSharingLocationsWithMe
cachedGetHandlesFollowingMyLocation
T@"NSSet",&,N,V_cachedGetHandlesFollowingMyLocation
cachedLocationForHandleByHandle
T@"NSMutableDictionary",&,N,V_cachedLocationForHandleByHandle
cachedOfferExpirationForHandleByHandle
T@"NSMutableDictionary",&,N,V_cachedOfferExpirationForHandleByHandle
cachedCanShareLocationWithHandleByHandle
T@"NSMutableDictionary",&,N,V_cachedCanShareLocationWithHandleByHandle
connectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
handlesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_handlesQueue
isModelInitialized
TB,N,V_isModelInitialized
handles
T@"NSSet",C,N
delegate
T@"<FMFSessionDelegate>",W,N,V_delegate
delegateQueue
T@"NSOperationQueue",&,N,V_delegateQueue
ACAccountStore
/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
isOn
createdById
emails
followerIds
friendId
fromMe
phoneNumbers
fullAddress
radius
recipients
onetimeonly
updateTimestamp
trigger
type
locationType
enter
exit
immediate
NotifyMe
NotifyOthers
FMFFence(0x%lX, identifier: %@ type: %@, trigger: %@, isFromMe: %d, friendId: %@, location: %@)
FMFFence(0x%lX, identifier: %@, type: %@, trigger: %@, isFromMe: %d, recipient(s): %@, location: %@)
T@"NSDate",&,N,V_timestamp
T@"NSArray",&,N,V_followerIds
T@"NSString",&,N,V_identifier
friendIdentifier
T@"NSString",&,N,V_friendIdentifier
createdByIdentifier
T@"NSString",&,N,V_createdByIdentifier
T@"NSArray",&,N,V_recipients
T@"NSString",&,N,V_trigger
T@"NSString",&,N,V_type
TQ,N,V_locationType
active
TB,N,GisActive,V_active
recurring
TB,N,GisRecurring,V_recurring
TB,N,GisFromMe,V_fromMe
requestType
requestId
fromHandle
toHandles
endDate
groupId
<%@ %p [%@ :Type => FMFFriendshipRequestTypeAsk, Expires: %@]>
<%@ %p [%@ :Type => FMFFriendshipRequestTypeOffer, Expires: %@]>
T@"NSString",&,N,V_requestId
Tq,N,V_requestType
T@"FMFHandle",&,N,V_fromHandle
T@"NSSet",&,N,V_toHandles
T@"NSDate",&,N,V_endDate
T@"NSString",&,N,V_groupId
replied
timed out
%@-%@(0x%X)
timeoutOccurred
TB,N,V_timeoutOccurred
timeout
Td,N,V_timeout
info
T@"NSString",&,N,V_info
T@"NSObject<OS_dispatch_semaphore>",&,N,V_sem
-[FMFSession(Data) getFavoritesSharingLocationWithMe]
-[FMFSession(Data) getHandlesWithPendingOffers]
-[FMFSession(Data) isMyLocationEnabled]
NSPersonNameDefaultShouldPreferNicknamesPreference
serverProxy
dispatchOnDelegateQueue:
includeDeviceInAutomations:
iCloudAccountNameWithCompletion:
stringWithUTF8String:
alloc
initWithDescription:andTimeout:
signal
deviceSharingLocation:
wait
allDevices:
getMaxLocatingInterval:
removeDevice:completion:
getPrettyNameForHandle:completion:
getRecordIdForHandle:completion:
FMFRestricted
showRestrictedAlert
errorWithDomain:code:userInfo:
setExpiredInitTimestamp
code
crashDaemon
exit5XXGracePeriod
isIn5XXGracePeriodWithCompletion:
sendIDSPacket:toHandle:
dumpStateWithCompletion:
sessionHandleReport:
getDataForPerformanceRequest:
getActiveLocationSharingDevice
getAllDevices
maxLocatingInterval
getAllDevices:
verifyRestrictionsAndShowDialogIfRequired
is5XXError:
shouldHandleErrorInFWK:
fetchLocationForHandle:callerId:priority:completion:
fetchLocationForHandles:callerId:priority:completion:
locationForHandle:completion:
refreshLocationForHandle:callerId:priority:completion:
refreshLocationForHandles:callerId:priority:completion:
showNetworkOfflineDuringOfferAlert
isThisDevice
isActiveDevice
predicateWithBlock:
filteredSetUsingPredicate:
count
anyObject
showGenericErrorAlert
setActiveDevice:completion:
showActiveDeviceChangedAlert
isNetworkReachable:
getHandlesSharingLocationsWithMe:
getHandlesSharingLocationsWithMeWithGroupId:completion:
getHandlesSharingMyLocation:
getHandlesFollowingMyLocation:
getHandlesSharingMyLocationWithGroupId:completion:
setHideMyLocationEnabled:completion:
isMyLocationEnabled:
canShareLocationWithHandle:groupId:callerId:completion:
canGetLocationForHandle:groupId:callerId:completion:
setWithArray:
getPendingMappingPacketsForHandle:groupId:completion:
getOfferExpirationForHandle:groupId:callerId:completion:
getHandlesWithPendingOffers:
canOfferToHandles:completion:
getActiveLocationSharingDevice:
getHandlesFollowingMyLocationWithGroupId:completion:
class
init
setMapCache:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
gridImageForWidth:height:andCompletion:
noLocationImageForWidth:height:andCompletion:
mapImageForRequest:andCompletion:
mapImageForLocation:altitude:pitch:width:height:andCompletion:
gridImageForScreenRatio:andCompletion:
noLocationImageForScreenRatio:andCompletion:
mapImageForLocation:altitude:pitch:screenRatio:andCompletion:
interfaceWithProtocol:
initWithServiceName:
setRemoteObjectInterface:
resume
mapCache
cachedGridImageForWidth:andHeight:
newConnection
remoteObjectProxyWithErrorHandler:
cacheGridImage:forWidth:andHeight:
cachedNoLocationImageForWidth:andHeight:
cacheNoLocationImage:forWidth:andHeight:
initWithLocation:altitude:pitch:width:height:andCachingEnabled:
cachingEnabled
cachedMapImageForRequest:
pendingMapImageForRequest:
priority
cacheMapImage:forRequest:
initWithDomain:code:userInfo:
sharedInstance
gridImageForWidth:height:cache:andCompletion:
noLocationImageForWidth:height:cache:andCompletion:
mapImageForLocation:altitude:pitch:width:height:cache:andCompletion:
.cxx_destruct
connection
setConnection:
_mapCache
_connection
contactForPayload:completion:
handleAndLocationForPayload:completion:
dataForPayload:completion:
decryptPayload:withToken:completion:
encryptPayload:completion:
set_prettyNameInternal:
handleWithId:serverId:
setIdentifier:
setQualifiedIdentifier:
setServerId:
setIdsStatus:
setReachable:
date
timeIntervalSince1970
numberWithDouble:
setTrackingTimestamp:
handleWithId:
setDsid:
setIsFamilyMember:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
lowercaseString
expiresByGroupId
allKeys
containsObject:
identifier
serverId
setExpiresByGroupId:
trackingTimestamp
hashedDSID
setHashedDSID:
favoriteOrder
setFavoriteOrder:
idsStatus
reachable
qualifiedIdentifier
encodeObject:forKey:
dsid
encodeInteger:forKey:
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodePropertyListForKey:
decodeIntegerForKey:
decodeBoolForKey:
isEqualToString:
stringWithFormat:
prettyName
caseInsensitiveCompare:
_prettyNameInternal
length
decimalDigitCharacterSet
addCharactersInString:
controlCharacterSet
formUnionWithCharacterSet:
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
familyHandleWithId:dsid:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
addressBookDidChange
abPreferencesDidChange
setICloudId:
isSharingThroughGroupId:
prettyNameCompare:
recordId
clearFavoriteOrder
isPhoneNumber
isFamilyMember
aliasServerIds
setAliasServerIds:
invitationSentToIds
setInvitationSentToIds:
isPending
setPending:
_isFamilyMember
_pending
_reachable
_identifier
_serverId
_dsid
_aliasServerIds
_invitationSentToIds
_expiresByGroupId
_hashedDSID
_trackingTimestamp
_favoriteOrder
__prettyNameInternal
_idsStatus
_qualifiedIdentifier
setLocation:
setAltitude:
setPitch:
setWidth:
setHeight:
setCachingEnabled:
decodeDoubleForKey:
initWithLatitude:longitude:
decodeIntForKey:
setPriority:
location
coordinate
encodeDouble:forKey:
altitude
pitch
width
height
encodeInt:forKey:
stringValue
stringByAppendingFormat:
_cachingEnabled
_location
_altitude
_pitch
_width
_height
_priority
favoritesForMaxCount:completion:
nearbyLocationsWithCompletion:
mutableCopy
dictionary
setLocationsCache:
countByEnumeratingWithState:objects:count:
member:
handle
updateLocationForCache:
addObject:
locationsCache
setObject:forKey:
followers
following
followingForHandle:
objectForKeyedSubscript:
isValid
locations
removeObject:
removeObjectForKey:
doubleValue
dateWithTimeIntervalSince1970:
makeObjectsPerformSelector:
predicateWithFormat:
sortDescriptorWithKey:ascending:
arrayWithObject:
sortedArrayUsingDescriptors:
setLocations:
setFollowers:
setFollowing:
setFences:
followerForHandle:
locationForHandle:
offerExpirationForHandle:groupId:
abDidChange
favoritesOrdered
fences
_followers
_following
_locations
_fences
_locationsCache
arrayWithObjects:count:
null
setWithObjects:
decodeObjectOfClasses:forKey:
formattedAddressLines
setObject:forKeyedSubscript:
copy
setAdministrativeArea:
setCountry:
setFormattedAddressLines:
setLocality:
setState:
setStreetAddress:
setStreetName:
initWithLocality:administrativeArea:country:state:streetAddress:streetName:
initWithDictionary:
formattedAddress
dictionaryValue
locality
administrativeArea
country
state
streetAddress
streetName
_locality
_administrativeArea
_country
_state
_streetAddress
_streetName
_formattedAddressLines
getAllLocations:
show5XXDuringStartOfferAlert
_isNoMappingPacketReturnedError:
_checkAndDisplayMeDeviceSwitchAlert
sendFriendshipOfferToHandles:groupId:callerId:endDate:completion:
deviceName
_sendAutoSwitchMeDevice
showSwitchMeDeviceAlertUsingCurrentMeDeviceName:completion:
_sendFriendshipOfferToHandles:groupId:callerId:endDate:completion:
setWithObject:
extendFriendshipOfferToHandle:groupId:callerId:endDate:completion:
sendFriendshipInviteToHandle:groupId:callerId:endDate:completion:
approveFriendshipRequest:completion:
declineFriendshipRequest:completion:
stopSharingMyLocationWithHandle:groupId:callerId:completion:
showNetworkOfflineDuringStopOfferAlert
show5XXDuringStopOfferAlert
stopSharingMyLocationWithHandles:groupId:callerId:completion:
getPendingFriendshipRequestsWithCompletion:
sendFriendshipOfferToHandle:groupId:callerId:endDate:completion:
initWithObjects:
defaultLabelKeys
isDefaultLabel:
setHandle:
setMaxLocatingInterval:
setTTL:
objectForKey:
setTimestamp:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
setCoordinate:
bundleForClass:
localizedStringForKey:value:table:
setShortAddressString:
setLongAddress:
firstObject
setLabel:
setPlacemark:
standardUserDefaults
boolForKey:
shortAddressString
longAddress
placemark
label
timestamp
isLocatingInProgress
setLocatingInProgress:
numberWithBool:
boolValue
shortAddress
timeIntervalSinceNow
numberWithInt:
localizedStringWithFormat:
numberWithUnsignedInteger:
locationAge
locationShortAddressWithAge
resetLocateInProgressTimer
defaultCenter
postNotificationName:object:
resetLocateInProgress:
distance
_updateLocation:
timeIntervalSinceDate:
hasKnownLocation
overlay
setOverlay:
horizontalAccuracy
setHorizontalAccuracy:
distanceFromUser
setDistanceFromUser:
isBorderEnabled
setIsBorderEnabled:
tintColor
setTintColor:
largeAnnotationIcon
setLargeAnnotationIcon:
smallAnnotationIcon
setSmallAnnotationIcon:
largeOverlayIcon
setLargeOverlayIcon:
smallOverlayIcon
setSmallOverlayIcon:
title
subtitle
initWithDictionary:forHandle:maxLocatingInterval:TTL:
agingItemTimestamp
locationShortAddressWithAgeIncludeLocating
distanceThenNameCompare:
updateLocation:
updateHandle:
setDistance:
distanceDescription
setDistanceDescription:
setAge:
_locatingInProgress
_isBorderEnabled
_overlay
_horizontalAccuracy
_smallAnnotationIcon
_smallOverlayIcon
_largeOverlayIcon
_largeAnnotationIcon
_distanceFromUser
_tintColor
_placemark
_handle
_longAddress
_timestamp
_label
_shortAddressString
_maxLocatingInterval
_TTL
_distance
_distanceDescription
_age
_coordinate
boolForKey:inDomain:
setFileProtectionDeactivated:
fileProtectionDeactivated
setMapLocationDistanceThreshold:
setCacheMetaData:
setGridImageMetaData:
setNoLocationImageMetaData:
setMapImageMetaData:
setPendingMapImageMetaData:
cacheMetaData
gridImageMetaData
noLocationImageMetaData
mapImageMetaData
stringByAppendingPathComponent:
setCachePath:
setImageCachePath:
setCacheMetaQueue:
setGridImageQueue:
setNoLocationImageQueue:
setMapImageQueue:
setPendingImageQueue:
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
readMetaData
gridKeyForWidth:andHeight:
dataWithContentsOfFile:
gridImageQueue
stringByAppendingPathExtension:
imageCachePath
dictionaryWithObject:forKey:
writeToFile:atomically:
setAttributes:ofItemAtPath:error:
saveMetaData
noLocationKeyForWidth:andHeight:
noLocationImageQueue
mapImageQueue
pendingImageQueue
pendingMapImageMetaData
cacheMetaQueue
cachePath
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
stringByAppendingString:
cachedMapImageForLocation:altitude:pitch:width:andHeight:
cacheMapImage:forLocation:altitude:pitch:width:andHeight:
pendingMapImageForLocation:altitude:pitch:width:andHeight:
mapImageKeyForLocation:altitude:pitch:width:andHeight:
mapLocationDistanceThreshold
_fileProtectionDeactivated
_cacheMetaData
_gridImageMetaData
_noLocationImageMetaData
_mapImageMetaData
_pendingMapImageMetaData
_cachePath
_imageCachePath
_cacheMetaQueue
_gridImageQueue
_noLocationImageQueue
_mapImageQueue
_pendingImageQueue
_mapLocationDistanceThreshold
setDeviceId:
setDeviceName:
setIsActiveDevice:
setIsThisDevice:
setIsAutoMeCapable:
setIdsDeviceId:
isAutoMeCapable
idsDeviceId
deviceId
deviceWithId:name:idsDeviceId:isActive:isThisDevice:isAutoMeCapable:
updateIsActive:isThisDevice:
_isActiveDevice
_isThisDevice
_isAutoMeCapable
_deviceId
_deviceName
_idsDeviceId
username
appAuthToken
appAuthTokenStatus
appServerHost
legacyDsid
legacyUsername
setUsername:
setAppServerHost:
setAppAuthToken:
setAppAuthTokenStatus:
setLegacyDsid:
setLegacyUsername:
_username
_appServerHost
_appAuthToken
_appAuthTokenStatus
_legacyDsid
_legacyUsername
addFence:completion:
deleteFence:completion:
getFences:
fencesForHandles:completion:
setSession:
session
modelDidLoad
networkReachabilityUpdated:
failedToGetLocationForHandle:error:
didAddFollowerHandle:
didRemoveFollowerHandle:
didStartFollowingHandle:
didStopFollowingHandle:
didReceiveFriendshipRequest:
didUpdateHideFromFollowersStatus:
didUpdatePendingOffersForHandles:
didChangeActiveLocationSharingDevice:
didUpdateActiveDeviceList:
sendMappingPacket:toHandle:
didUpdateFavorites:
didUpdateFences:
didUpdateFollowers:
didUpdateFollowing:
didUpdateLocations:
didReceiveServerError:
initWithFMFSession:
_session
connectionQueue
delegate
mainBundle
bundleIdentifier
internalConnection
_daemonDidLaunch
addObserver:selector:name:object:
initWithDelegate:
setConnectionQueue:
setHandlesQueue:
_registerForFMFDLaunchedNotification
setDelegate:
setDelegateQueue:
locatingInProgressChanged:
object
initWithDelegate:delegateQueue:
removeObserver:
invalidate
dealloc
connectionError:
__connection
addFriendHandles:
removeFriendHandles:
getCurrentTrackedHandles:
importMappingPacket:completion:
invalidateMappingPackets:completion:
forceRefresh
sessionWasCreatedRefresh
showMaxFollowersLimitReachedAlert
showLocationServicesSwitchOffAlert
showShareMyLocationSystemServiceOffAlert
showShareMyLocationiCloudSettingsOffAlert
showForbiddenRegionAlert
notLoggedIntoiCloudAlert
upselliCloudAlert
showAirDropImportAlertForId:
showAirDropImportErrorAlert
refreshLocationSnapshotForHandle:width:andHeight:withCompletion:
setSessionClientBundleId:
initWithMachServiceName:options:
invalidateWithError:
setInterruptionHandler:
setInvalidationHandler:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
delegateQueue
addOperationWithBlock:
isModelInitialized
didReceiveLocation:
didFailToFetchLocationForHandle:withError:
didStartSharingMyLocationWithHandle:
didStopSharingMyLocationWithHandle:
didStartAbilityToGetLocationForHandle:
didStopAbilityToGetLocationForHandle:
didUpdateFavoriteHandles:
didUpdateHidingStatus:
mappingPacketProcessingCompleted:
didFailToHandleMappingPacket:error:
removeAllFriendLocationsFromMap
setIsModelInitialized:
handlesQueue
internalHandles
handles
minusSet:
removeHandles:
addHandles:
unionSet:
absoluteString
receivedMappingPacket:completion:
sharedConnection
effectiveBoolValueForSetting:
aa_primaryAppleAccountWithPreloadedDataclasses
isProvisionedForDataclass:
FMFAllowed
isProvisionedForLocationSharing
hasModelInitialized
setHandles:
mappingPacketSendFailed:toHandle:withError:
handleIncomingAirDropURL:completion:
setInternalHandles:
cachedGetHandlesSharingLocationsWithMe
setCachedGetHandlesSharingLocationsWithMe:
cachedGetHandlesFollowingMyLocation
setCachedGetHandlesFollowingMyLocation:
cachedLocationForHandleByHandle
setCachedLocationForHandleByHandle:
cachedOfferExpirationForHandleByHandle
setCachedOfferExpirationForHandleByHandle:
cachedCanShareLocationWithHandleByHandle
setCachedCanShareLocationWithHandleByHandle:
_isModelInitialized
_delegate
_delegateQueue
_internalHandles
_cachedGetHandlesSharingLocationsWithMe
_cachedGetHandlesFollowingMyLocation
_cachedLocationForHandleByHandle
_cachedOfferExpirationForHandleByHandle
_cachedCanShareLocationWithHandleByHandle
_connectionQueue
_handlesQueue
setRecipients:
setTrigger:
setType:
setLocationType:
setRecurring:
setActive:
arrayByAddingObjectsFromArray:
setCreatedByIdentifier:
setFollowerIds:
setFriendIdentifier:
locationForDictionary:
handlesForArray:
intValue
trigger
type
setFromMe:
decodeObjectForKey:
recipients
isEqualToArray:
createdByIdentifier
friendIdentifier
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
initWithCapacity:
isFromMe
initWithRecipient:location:placemark:label:trigger:type:locationType:recurring:
locationType
isActive
isRecurring
followerIds
_active
_recurring
_fromMe
_recipients
_trigger
_type
_locationType
_followerIds
_friendIdentifier
_createdByIdentifier
setRequestType:
setFromHandle:
setToHandles:
setEndDate:
setRequestId:
setGroupId:
requestType
requestId
fromHandle
toHandles
endDate
groupId
friendshipRequestToHandles:fromHandle:withType:groupId:withEndDate:
initWithFromHandle:toHandle:ofType:groupId:endDate:requestId:
_requestType
_fromHandle
_toHandles
_endDate
_groupId
_requestId
info
timeout
loggingID
timeoutOccurred
setTimeoutOccurred:
setTimeout:
setSem:
setInfo:
_timeoutOccurred
_timeout
_sem
_info
reloadDataIfNotLoaded
getHandlesSharingLocationsWithMe
getHandlesFollowingMyLocation
getFavoritesSharingLocationWithMe
canShareLocationWithHandle:groupId:callerId:
canGetLocationForHandle:groupId:callerId:
getHandlesWithPendingOffers
isMyLocationEnabled
cachedLocationForHandle:
getOfferExpirationForHandle:groupId:callerId:
nickname
stringFromContact:style:
contactKeys
getContactForHandle:keysToFetch:
initWithStringValue:
predicateForContactsMatchingPhoneNumber:
predicateForContactsMatchingEmailAddress:
arrayByAddingObject:
contactStore
unifiedContactsMatchingPredicate:keysToFetch:error:
findOptimalContactInContacts:
imageData
requestAccessForEntityType:completionHandler:
displayNameForContact:andHandle:
getContactForHandle:
includeDeviceInAutomations: %i %@
includeDeviceInAutomations: Could not dispatch to delegate queue. FMFSession was dereferenced.
shouldHandleErrorInFWK:%d, error.code(%ld)
getActiveLocationSharingDevice:
Trying to setActiveDevice when Share My Location is restricted
Trying to setActiveDevice:completion: when device is offline
Handles sharing location with me %@
Handles sharing location with me through group Id: %@, %@
Handles following my location: %@
Handles following my location, through group Id: %@, %@
Trying to setHideMyLocationEnabled when Share My Location is restricted
Can share location %d
Can get location %d
mapImageForRequest:
returning cached map
requesting new map from XPC service
returning new map from XPC service
Error generating maps %@
Error occured when getting contact for payload %@
Error occured when getting handle and location for payload %@
Error occured when getting dataForPayload for payload %@
%@ %@
Error occured when decryptPayload %@
Error occured when encryptPayload: %@
resetting _prettyNameInternal due to addressBookDidChange
resetting _prettyNameInternal due to abPreferencesDidChange
timeOut prettyName
timeOut recordId
favoritesForMaxCount: %@
nearbyLocationsWithCompletion: %@
Creating shared instance of FMFSessionDataManager
Failed to cache location. Missing serverId. %@
Faild cached location lookup. Missing serverId. %@
FMFPlacemark init with dictionary %@
getAllLocations
Sending friend offer for: %@ to date: %@ withGroupId: %@ fromCallerId: %@
Offer: Successfully set this devie as Me device.
Offer: This device is already set as Me device
Offer: Error while trying to set this device as Me device, error: %@
This device is not MeDevice
Showing MeDevice switch alert
User selected to switch this device as MeDevice
User selected NOT to switch this device as MeDevice
This device is already MeDevice
Error while trying to get active Share My Location device: %@
Trying to sendFriendshipOfferToHandles:groupId:callerId:endDate:completion: when Share My Location is restricted
Trying to sendFriendshipOfferToHandles:groupId:callerId:endDate:completion: when device is offline
Extending friend offer for: %@ to date: %@
Trying to extendFriendshipOfferToHandle:groupId:callerId:endDate:completion: when Share My Location is restricted
Sending friend invite for: %@
Trying to sendFriendshipInviteToHandle:groupId:callerId:endDate:completion: when Share My Location is restricted
Approving friend request for: %@
Trying to approveFriendshipRequest:completion: when Share My Location is restricted
Declining friend request for: %@
Trying to declineFriendshipRequest:completion: when Share My Location is restricted
Stop sharing location with handle: %@
Trying to stopSharingMyLocationWithHandle:groupId:callerId:endDate:completion: when Share My Location is restricted
Stop sharing location with handles: [%@]
Trying to stopSharingMyLocationWithHandle:groupId:callerId:endDate:completion: when device is offline
Get pending friendship requests
resetLocateInProgress_fired: %@
resetLocateInProgressTimerForSeconds: %f forHandle: %@ location: %@
FMFMapCache: File protection deactivated? %i
FMFMapCache: Creating cache folder
FMFMapCache: cachedGridImageForWidth data retreived %@
FMFMapCache: cacheGridImage %@
FMFMapCache: Unable to write grid image to disk %@
FMFMapCache: Error setting file protection %@ %@
FMFMapCache: noLocationImageForWidth data retreived %@
FMFMapCache: cacheNoLocationImage %@
FMFMapCache: cacheMapImage %@
FMFMapCache: Unable to write map image to disk %@ %@
Error unarchiving map cache: %@
FMFMapCache: meta data content %@
FMFMapCache: saveMetaData error: %@
FMFMapCache: saveMetaData %@
FMFMapCache: Unable to write meta data to disk %@
FMFMapCache: FMFMapCache: Save meta data? %d %i
FMFSession: %@ addFence: %@
FMFSession: addFences result: error? %@, fences: %@
FMFSession: %@ deleteFence: %@
FMFSession: deleteFence result: error? %@
FMFSession: getFences: %@
FMFSession: getFences result: error? %@, fences: %@
FMFSession: %@ fenceForHandles: %@
FMFSession: fenceForHandles result: error? %@, fences: %@
Received _daemonDidLaunch notification, checking to restablish connection if required for this session(%@ - client bundle id(%@))
Re-establishing connection on _daemonDidLaunch notification due with session connection:%@ and delegate:%@
No need to re-establish connection on _daemonDidLaunch notification
Registered for _FMFDDaemonDidLaunch notification for session: (%@ - client bundle id(%@)
Creating shared instance of FMFSession
Too many FMFSession instances (%ld)
locatingInProgressChanged: %@, %@, %d
Unregistering for _FMFDDaemonDidLaunch notification
Invalidating connection due to session dealloc
Deallocating session
XPC error: %@
Created connection: %@
Connection to server interrupted!
Connection to server invalidated!
didAddFollowerHandle: %@
didRemoveFollowerHandle: %@
didStartFollowingHandle: %@
didStopFollowingHandle: %@
didUpdateFavorites: %@
didUpdateHideFromFollowersStatus: %d
didChangeLocationSharingDevice: %@
didUpdateActiveDeviceList: %@
didReceiveFriendshipRequest: %@
didUpdatePendingOffersForHandles: %@
sendMappingPacket:toHandle: %@
didReceiveServerError: %@
abDidChange
abPreferencesDidChange
didUpdateFollowers: %@
didUpdateFollowing: %@
didUpdateLocations: %@
removing all location annotations from map
FMFSession didUpdateFences: %@
networkReachabilityUpdated, Is reachable %d
Notifying all delegates of network status update
Adding handles: %@ to session: %@
Removing handles: %@ from session: %@
receivedMappingPacket:
mappingPacketSendFailed: Error: %@
handleIncomingAirDropURL: %@
receivedMappingPacket: completion responseId: %@
Received _FMFDDaemonDidLaunch notification, for client bundle id(%@)
FMFFence: initWithRecipient %@
FMFFence: initWithDictionary %@
FMFFence: Cannot initialize fence with nil value (Identifier:%@, trigger: %@, type: %@, location: %@, timestamp: %@)
Signaling end of wait for %@
Done waiting (%f seconds) for %@. Status: %@
getHandlesSharingLocationsWithMe: %@
getHandlesFollowingMyLocation: %@
getFavoritesSharingLocationWithMe: %@
canShareLocationWithHandle: %@: %d groupId: %@
canGetLocationForHandle: %@: %d groupId: %@
cachedLocationForHandle: %@: %@
getOfferExpirationForHandle: %@ groupId: %@ result:%@
Reloading Data - Not Loaded
Creating shared instance of FMFContactUtility
Display name %@ found for handle %@
Request access to contact store %d %@
HomeKit
Internal
Locate
Admin
FMFMapXPCInterface
NSObject
FMFMapSession
Notifications
FMFHandle
NSCopying
NSSecureCoding
NSCoding
FMFMapImageRequest
TodayWidget
FMFSessionDataManager
FMFPlacemark
Maps
Establish
FMFLabelUtil
FMFLocation
FMAnnotation
FMFMapCache
FMFDevice
FMFAppAccountInfo
Fences
FMFSessionProxy
FMFXPCInternalClientProtocol
FMFXPCClientProtocol
FMFXPCInternalServerProtocol
FMFXPCServerProtocol
FMFSessionDelegateInternal
FMFSessionDelegate
FMFSession
FMFFence
FMFFriendshipRequest
FMFSynchronizer
Data
FMFContactUtility
v24@0:8@?16
Vv24@0:8@?16
@16@0:8
d16@0:8
v32@0:8@16@?24
v16@0:8
B24@0:8@16
v32@0:8@16@24
v48@0:8@16@24q32@?40
v28@0:8B16@?20
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Vv40@0:8d16d24@?32
Vv32@0:8@16@?24
Vv64@0:8@16d24d32d40d48@?56
Vv32@0:8d16@?24
Vv56@0:8@16d24d32d40@?48
Vv40@0:8d16d24@?<v@?@"NSData"@"NSError">32
Vv32@0:8@"FMFMapImageRequest"16@?<v@?@"NSData"@"NSError">24
Vv64@0:8@"CLLocation"16d24d32d40d48@?<v@?@"NSData"@"NSError">56
Vv32@0:8d16@?<v@?@"NSData"@"NSError">24
Vv56@0:8@"CLLocation"16d24d32d40@?<v@?@"NSData"@"NSError">48
v44@0:8d16d24B32@?36
v68@0:8@16d24d32d40d48B56@?60
v32@0:8d16@?24
v56@0:8@16d24d32d40@?48
v24@0:8@16
@"FMFMapCache"
@"NSXPCConnection"
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q24@0:8@16
v20@0:8B16
q16@0:8
v24@0:8q16
@"NSString"
@"NSNumber"
@"NSArray"
@"NSDictionary"
@60@0:8@16d24d32d40d48B56
v24@0:8d16
@"CLLocation"
@"NSSet"
@"NSMutableDictionary"
@64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@?48
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"FMAccuracyOverlay"16@0:8
v24@0:8@"FMAccuracyOverlay"16
@"UIColor"16@0:8
v24@0:8@"UIColor"16
@"UIImage"16@0:8
v24@0:8@"UIImage"16
@48@0:8@16@24d32d40
@32@0:8d16d24
@"FMAccuracyOverlay"
@"UIImage"
@"UIColor"
@"FMFPlacemark"
@"FMFHandle"
@"NSDate"
{CLLocationCoordinate2D="latitude"d"longitude"d}
v40@0:8@16d24d32
@56@0:8@16d24d32d40d48
v64@0:8@16@24d32d40d48d56
B56@0:8@16d24d32d40d48
@"NSObject<OS_dispatch_queue>"
@52@0:8@16@24@32B40B44B48
v24@0:8B16B20
Vv24@0:8@16
Vv32@0:8@16@24
Vv20@0:8B16
Vv24@0:8@"NSSet"16
Vv32@0:8@"FMFHandle"16@"NSError"24
Vv24@0:8@"FMFHandle"16
v24@0:8@"FMFFriendshipRequest"16
Vv24@0:8@"FMFDevice"16
Vv32@0:8@"NSString"16@"FMFHandle"24
Vv24@0:8@"NSArray"16
Vv24@0:8@"NSError"16
@"FMFSession"
Vv48@0:8@16@24q32@?40
Vv48@0:8@16@24@32@?40
Vv28@0:8B16@?20
Vv40@0:8@16@24@?32
Vv56@0:8@16@24@32@40@?48
Vv48@0:8@"FMFHandle"16@"FMFHandle"24q32@?<v@?@"NSError"@"NSString">40
Vv48@0:8@"NSSet"16@"FMFHandle"24q32@?<v@?@"NSError"@"NSString">40
Vv24@0:8@?<v@?@"NSSet"@"NSError">16
Vv32@0:8@"FMFHandle"16@?<v@?@"FMFLocation"@"NSString"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
Vv48@0:8@"FMFHandle"16@"NSString"24@"FMFHandle"32@?<v@?B@"NSString"@"NSError">40
Vv28@0:8B16@?<v@?@"NSError">20
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"FMFDevice"16@?<v@?@"NSError">24
Vv40@0:8@"FMFHandle"16@"NSString"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
Vv24@0:8@?<v@?@"FMFDevice"@"NSError">16
Vv32@0:8@"NSSet"16@?<v@?@"NSSet"@"NSError">24
Vv32@0:8@"FMFHandle"16@?<v@?@"NSString"@"NSError">24
Vv56@0:8@"NSSet"16@"NSString"24@"FMFHandle"32@"NSDate"40@?<v@?@"NSDictionary"@"NSError">48
Vv56@0:8@"FMFHandle"16@"NSString"24@"FMFHandle"32@"NSDate"40@?<v@?@"NSString"@"NSError">48
Vv32@0:8@"FMFFriendshipRequest"16@?<v@?@"NSError">24
Vv48@0:8@"FMFHandle"16@"NSString"24@"FMFHandle"32@?<v@?@"NSString"@"NSError">40
Vv48@0:8@"NSSet"16@"NSString"24@"FMFHandle"32@?<v@?@"NSString"@"NSError">40
Vv24@0:8@?<v@?@"NSSet"@"NSSet"@"NSError">16
Vv48@0:8@"FMFHandle"16@"NSString"24@"FMFHandle"32@?<v@?@"NSDate"@"NSError">40
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?d@"NSError">16
Vv32@0:8@"NSNumber"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?B>24
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@?<v@?@"CNContact"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"FMFHandle"@"CLLocation"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"FMFHandle"@"CNContact"@"CLLocation"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
Vv32@0:8@"FMFFence"16@?<v@?@"FMFFence"@"NSError">24
Vv32@0:8@"FMFFence"16@?<v@?@"NSError">24
Vv48@0:8@16d24d32@?40
Vv48@0:8@"FMFHandle"16d24d32@?<v@?B>40
Vv24@0:8@?<v@?@"NSString">16
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?@"NSDictionary">16
Vv24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@"FMFLocation"16
v32@0:8@"FMFHandle"16@"NSError"24
v24@0:8@"NSError"16
v24@0:8@"FMFHandle"16
v32@0:8@"NSString"16@"FMFHandle"24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"FMFDevice"16
v24@0:8@"NSSet"16
v24@0:8@"NSArray"16
v40@0:8@16@24@32
@"<FMFSessionDelegate>"
@"NSOperationQueue"
@"NSMutableSet"
@76@0:8@16@24@32@40@48@56Q64B72
v24@0:8Q16
@56@0:8@16@24q32@40@48
@64@0:8@16@24q32@40@48@56
@32@0:8@16d24
@"NSObject<OS_dispatch_semaphore>"
B40@0:8@16@24@32
@40@0:8@16@24@32
