initWithNibName:bundle:
setUseTallLayout:
viewDataSource
view
numberOfActionsForMenuModuleView:
reloadData
willTransitionToExpandedContentMode:
removeAllActions
menuModuleView:titleForActionAtIndex:
menuModuleView:subtitleForActionAtIndex:
menuModuleView:glyphForActionAtIndex:
viewDelegate
menuModuleView:selectedActionAtIndex:
addActionWithTitle:subtitle:glyph:handler:
class
bundleForClass:
localizedStringForKey:value:table:
actionsCount
setFooterButtonTitle:handler:
shouldBeginTransitionToExpandedContentModule
didTransitionToExpandedContentMode:
.cxx_destruct
setViewDataSource:
setViewDelegate:
_actionsReloadGroup
_viewDataSource
_viewDelegate
alloc
init
setDelegate:
serviceForClientIdentifier:
addStateUpdateListener:withCompletionHandler:
queryCurrentStateWithError:
addAssertionUpdateListener:withCompletionHandler:
activeModeAssertionWithError:
setCurrentAssertion:
details
lifetime
lifetimeDetailsForAssertionDetails:error:
lifetimeDetailsWithMetadataForAssertionDetails:completionHandler:
viewDidLoad
kitImageNamed:
whiteColor
_flatImageWithColor:
descriptionForPackageNamed:inBundle:
setGlyphPackageDescription:
setTitle:
viewWillAppear:
_refreshState
startUpdatingLifetimeDetails
viewDidDisappear:
stopUpdatingLifetimeDetails
isSelected
_toggleStateForActive:
_refreshStateWithSelected:expanded:
startUpdatingLifetimeDetailMetadata
stopUpdatingLifetimeDetailMetadata
setContentModuleContext:
count
objectAtIndex:
identifier
isEqualToString:
name
metadata
invalidateActiveModeAssertionWithError:
lifetimeForLifetimeDetails:error:
userRequestedAssertionDetailsWithIdentifier:modeIdentifier:lifetime:
takeModeAssertionWithDetails:error:
contentModuleContext
URLWithString:
openURL:completionHandler:
state
currentAssertion
assertion
isEqual:
isActive
isExpanded
setSelected:
setGlyphState:
performWithoutAnimation:
invalidateAllActiveModeAssertionsWithError:
initialize
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
contentViewController
backgroundViewController
lifetimeDetailsProvider:didUpdateAvailableLifetimeDetails:
stateService:didReceiveDoNotDisturbStateUpdate:
modeAssertionService:didReceiveModeAssertionInvalidation:
buttonTapped:forEvent:
_contentModuleContext
_selectedOnExpansion
_stateService
_assertionService
_currentState
_checkGlyph
_emptyGlyph
_lifetimeDetailsProvider
_availableLifetimeDetails
_currentAssertionLifetimeDetails
_currentAssertion
B8@?0
CONTROL_CENTER_SETTINGS_LINK_TITLE
v8@?0
viewDataSource
T@"<DNDUIMenuModuleViewDataSource>",W,N,V_viewDataSource
viewDelegate
T@"<DNDUIMenuModuleViewDelegate>",W,N,V_viewDelegate
com.apple.donotdisturb.control-center.module
com.apple.control-center.manual-toggle
prefs:root=DO_NOT_DISTURB
com.apple.donotdisturb.control-center
General
v20@?0B8@"NSError"12
v24@?0@"DNDLifetimeDetails"8@"NSError"16
UIPreferencesBlueCheck
DoNotDisturb
CONTROL_CENTER_TITLE
<unknown>
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
contentViewController
T@"UIViewController<CCUIContentModuleContentViewController>",R,N
backgroundViewController
T@"UIViewController<CCUIContentModuleBackgroundViewController>",R,N
currentAssertion
T@"DNDModeAssertion",&,N,V_currentAssertion
T@"UIViewController<CCUIContentModuleContentViewController>",R,D,N
DNDUIControlCenterModuleViewController
DNDUIControlCenterModule
CCUIContentModule
NSObject
DNDUIMenuModuleViewDataSource
DNDUIMenuModuleViewDelegate
DNDLifetimeDetailsProviderDelegate
DNDStateUpdateListener
DNDModeAssertionUpdateListener
@32@0:8@16@24
B16@0:8
v20@0:8B16
v16@0:8
@16@0:8
v24@0:8@16
@"NSObject<OS_dispatch_group>"
@"<DNDUIMenuModuleViewDataSource>"
@"<DNDUIMenuModuleViewDelegate>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"UIViewController<CCUIContentModuleContentViewController>"16@0:8
v24@0:8@"CCUIContentModuleContext"16
@"UIViewController<CCUIContentModuleBackgroundViewController>"16@0:8
Q24@0:8@16
@32@0:8@16Q24
Q24@0:8@"UIView"16
@"NSString"32@0:8@"UIView"16Q24
@"UIImage"32@0:8@"UIView"16Q24
B32@0:8@16Q24
B32@0:8@"UIView"16Q24
v32@0:8@16@24
v32@0:8@"DNDLifetimeDetailsProvider"16@"NSArray"24
v32@0:8@"DNDStateService"16@"DNDStateUpdate"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
v24@0:8B16B20
@"CCUIContentModuleContext"
@"DNDStateService"
@"DNDModeAssertionService"
@"DNDState"
@"UIImage"
@"DNDLifetimeDetailsProvider"
@"NSArray"
@"DNDLifetimeDetails"
@"DNDModeAssertion"
Registered for state updates
Error registering for state updates: error=%{public}@
Added assertion update listener
Error adding assertion update listener: error=%{public}@
Setting current assertion: previousAssertion=%{public}@, currentAssertion=%{public}@
Could not set current assertion lifetime detail as assertion has changed
Set current assertion lifetime details: details=%{public}@
Will reload menu options
Got assertion invalidation for current assertion: invalidation=%{public}@
Got assertion invalidation for different assertion, will ignore: invalidation=%{public}@
Will toggle state for active: active=%{BOOL}u
Taking toggle assertion
Invalidating all assertions for toggle
@(#)PROGRAM:DoNotDisturbModule  PROJECT:DoNotDisturb-1
