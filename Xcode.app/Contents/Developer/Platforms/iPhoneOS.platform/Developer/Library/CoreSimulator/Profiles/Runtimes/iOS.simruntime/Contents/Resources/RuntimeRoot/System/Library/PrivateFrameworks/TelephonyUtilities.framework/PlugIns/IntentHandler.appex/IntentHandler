Handling start audio call intent: %@
Returning start audio call response with code ContinueInApp, userActivity %@
Intent intends to redial the last call
Modifying call intent to put this person first in line: %@
There were no numbers to redial, failing
Calling completion block with response: %@ user activity: %@
Resolve destination type for start audio call: %@
%@ is an emergency number. Resolving to an emergency call
%@ is not an emergency number. Do not need special resolving.
More than one handle, not resolving destination type
Calling completion block with result: %@
Resolving contacts for start audio call intent: %@
Resolution not required for voicemail destination
Resolution for emergency destination
Intent's contact has no display name. Looking up the list of emergency handles available on this device
There are more than one number that could be dialed. Prompting to disambiguate between them using these people: %@
Only a single (or none) emergency number to call. Resolution is NOT required.
Intent's contact has a display name. Resolution is NOT required.
Resolution not required for redial destination
Calling completion block with resolution results: %@
Generated call history controller with options: %ld
Got a SearchCallHistory intent: %@
No callType specified on intent (%@). Assuming 'Latest'
Start Date  : %@
End Date    : %@
Recipient   : %@
Capabilities: %lx (audio: %d | video: %d)
Types       : %lx
Type indicates we should be searching for voicemail. Matching voicemails to this intent
Recipient specified. Seeing if senderDestinationID (%@) matches the recipient (%@)
Contact matches
It does not match
Date specified. Seeing how it compares to vm date: %@
It's earlier. Allowing this voicemail through
It's later, ignoring
It's the same date, allowing this voicemail through
Voicemails (%@) -> callRecords (%@)
Visual Voicemail is not set up yet
Type indicates to use 'latest'. Just assuming -recentCalls
RecentCalls (%@) -> callRecordsForRecentCalls (%@)
Type indicates we should be searching for outgoing calls
Type indicates we should be searching for missed calls
Type indicates we should be searching for incoming calls
No type indicated
Calling completion block with response: %@
resolveRecipientForSearchCallHistory: %@
Handle is present. Simply using the recipient to resolve with: %@
Found these matching contacts: %@
Found no matching contacts. Resolution not required
Only one match. Return our input
Multiple matches. Returning: %@
Resolving with: %@
Performing call history lookup using type: %ld
Using predicate: %@
recentCalls: %@
callRecords: %@
Observed rate change for playback: %f
handlePlayVoicemail: %@
VVM is online and subscribed.
Found voicemail with the given identifier (%@). Returning success
Voicemail completed playing. Calling completion block with success response: %@
[WARN] Voicemail with the given identifier was not found
[WARN] VVM is not online and subscribed. Returing that configuration is required
Attempting to play voicemail with identifier: %lu
Using voicemail: %@
Building audio session
Setting category to: %@
Could not set category: %@
Activating audio session: %@
Activation succeeded
Activation failed: %@
Generated AVPlayer with voicemail data: %@
Voicemail finished playing (rate change)
Calling completion block
Playing the voicemail
Dial request was for FaceTime provider but FaceTime is not enabled. Returning reponse that app configuration is required
System does not support dialing dial request %@. Returning failure response
Dial request can be handled and we have a user activity
Resolution needs a value for zero contacts
Resolution for only one contact, but handle %@ is MMI or USSD which is unsupported
Resolution for only one contact, no resolution required
Resolving for all contacts (count: %lu)
Building resolution result to disambiguate all people for contact %@
Dial Request invalid: %@
Dial Request was for video, but FaceTime Video was not available
Dial Request was for FT Audio, but FaceTime Audio was not available
Dial Request was for Telephony, but supportsTelephonyCalls was not true
Handling start video call intent: %@
Resolving contacts for start video call intent: %@
destinationType
alloc
dataSource
providerManager
voicemailProvider
initWithProvider:
setDialType:
userActivity
initWithContinueInAppResponseWithUserActivity:
sharedControllerWithCoalescingStrategy:options:
recentCalls
firstObject
callerId
handleType
callerIdLabel
initWithValue:type:label:
callerNameForDisplay
contactIdentifier
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
arrayWithObjects:count:
contacts
arrayByAddingObjectsFromArray:
setContacts:
class
responseWithClass:forCallIntent:
initWithFailureResponse
successWithResolvedValue:
count
personHandle
value
resolutionResultNotRequired
length
emergencyProvider
emergencyLabeledHandles
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
handle
initWithValue:type:
addObject:
resolutionResultDisambiguationWithItemsToDisambiguate:
personResolutionResultsForCallIntent:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleStartAudioCall:completion:
confirmStartAudioCall:completion:
resolveDestinationTypeForStartAudioCall:withCompletion:
resolveContactsForStartAudioCall:withCompletion:
initWithCode:userActivity:
initWithFailureAppConfigurationRequiredResponse
init
callCapabilities
callHistoryControllerWithCoalescingStrategy:options:
dateCreated
startDateComponents
endDateComponents
recipient
callTypes
callHistoryDataSourceGenerator
isOnline
isSubscribed
sharedInstance
contactStore
contactUsingContactStore:
identifier
isEqualToString:
date
compare:
voicemailsPassingTest:
callRecordsForVoicemails:
callRecordsForRecentCalls:usingType:
callRecordsForRecentCallsWithStatus:date:recipient:usingType:callHistoryDataSource:
maximumRecordCount
subarrayWithRange:
setCallRecords:
relationship
siriMatches
successWithResolvedPerson:
predicateForContactsWithIdentifiers:
contactKeysToFetch
unifiedContactsMatchingPredicate:keysToFetch:error:
displayName
predicateForContactsMatchingName:
initWithContact:
copy
disambiguationWithPeopleToDisambiguate:
senderDestinationID
displayLabelUsingContactStore:
setPersonHandle:
displayNameUsingContactStore:
setDisplayName:
numberWithUnsignedInteger:
stringValue
duration
numberWithDouble:
isRead
numberWithInt:
initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:
unifiedContactWithIdentifier:keysToFetch:error:
callerIdLocation
callStatus
uniqueId
mediaType
read
numberWithUnsignedInt:
predicateWithFormat:
andPredicateWithSubpredicates:
recentCallsWithPredicate:
handleSearchCallHistory:completion:
confirmSearchCallHistory:completion:
resolveDateCreatedForSearchCallHistory:withCompletion:
resolveRecipientForSearchCallHistory:withCompletion:
resolveCallTypeForSearchCallHistory:withCompletion:
resolveCallTypesForSearchCallHistory:withCompletion:
resolveUnseenForSearchCallHistory:withCompletion:
.cxx_destruct
setCallHistoryDataSourceGenerator:
_callHistoryDataSourceGenerator
rate
voicemailFinishedPlaying
observeValueForKeyPath:ofObject:change:context:
callRecordIdentifier
unsignedIntValue
voicemailWithIdentifier:
setCurrentVoicemail:
setCurrentPlayer:
_playCurrentVoicemailWithCompletion:
currentVoicemail
category
setCategory:withOptions:error:
setActive:error:
dataURL
initWithURL:
addObserver:forKeyPath:options:context:
setVoicemailFinishedPlaying:
play
handlePlayVoicemail:completion:
confirmPlayVoicemail:completion:
resolveCallRecordIdentifierForPlayVoicemail:withCompletion:
startSendingUpdatesForPlayVoicemail:toObserver:
stopSendingUpdatesForPlayVoicemail:
currentPlayer
_voicemailFinishedPlaying
_currentVoicemail
_currentPlayer
initWithDialIntent:providerManager:
provider
isFaceTimeProvider
isFaceTimeEnabled
canHandleDialRequest:
resolutionResultNeedsValue
unsupported
isValid
isVideo
isDirectFaceTimeVideoCallingCurrentlyAvailable
isDirectFaceTimeAudioCallingCurrentlyAvailable
isTelephonyProvider
supportsTelephonyCalls
setDataSource:
_dataSource
signInController
_signInController
_providerManager
handleStartVideoCall:completion:
confirmStartVideoCall:completion:
resolveContactsForStartVideoCall:withCompletion:
handlerForIntent:
dealloc
StartAudioCallIntentHandler
INStartAudioCallIntentHandling
NSObject
StartCallIntent
StartCallIntentResponse
SearchCallHistoryIntentHandler
INSearchCallHistoryIntentHandling
SearchCallHistoryIntentHandlerCallHistoryDataSource
PlayVoicemailIntentHandler
INPlayVoicemailIntentHandling
StartCallIntentHandler
StartCallIntentHandlerDataSource
StartVideoCallIntentHandler
INStartVideoCallIntentHandling
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INStartAudioCallIntent"16@?<v@?@"INStartAudioCallIntentResponse">24
v32@0:8@"INStartAudioCallIntent"16@?<v@?@"INCallDestinationTypeResolutionResult">24
v32@0:8@"INStartAudioCallIntent"16@?<v@?@"NSArray">24
@"NSArray"16@0:8
@24@0:8@16
@24@0:8@"NSUserActivity"16
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INSearchCallHistoryIntentResponse">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeOptionsResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INBooleanResolutionResult">24
@32@0:8@16q24
@52@0:8I16@20@28q36@44
v16@0:8
@?16@0:8
v24@0:8@?16
@"NSArray"24@0:8@"NSPredicate"16
v32@0:8@"INPlayVoicemailIntent"16@?<v@?@"INPlayVoicemailIntentResponse">24
v32@0:8@"INPlayVoicemailIntent"16@?<v@?@"INStringResolutionResult">24
v48@0:8@16@24@32^v40
v32@0:8@16@24
v24@0:8@16
@"VMVoicemail"
@"AVPlayer"
@32@0:8#16@24
@"<StartCallIntentHandlerDataSource>"
@"TUCallProviderManager"16@0:8
@"IDSSignInController"
@"TUCallProviderManager"
v32@0:8@"INStartVideoCallIntent"16@?<v@?@"INStartVideoCallIntentResponse">24
v32@0:8@"INStartVideoCallIntent"16@?<v@?@"NSArray">24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
contacts
T@"NSArray",R,C,N
@"<SearchCallHistoryIntentHandlerCallHistoryDataSource>"16@?0@"INSearchCallHistoryIntent"8
B16@?0@"VMVoicemail"8
(callStatus & %@) != 0
date > %@
callerId == %@
contactKeysToFetch
T@"NSArray",R,N
maximumRecordCount
TQ,R,N
callHistoryDataSourceGenerator
T@?,C,N,V_callHistoryDataSourceGenerator
recentCalls
v8@?0
voicemailFinishedPlaying
T@?,C,N,V_voicemailFinishedPlaying
currentVoicemail
T@"VMVoicemail",&,N,V_currentVoicemail
currentPlayer
T@"AVPlayer",&,N,V_currentPlayer
dataSource
T@"<StartCallIntentHandlerDataSource>",&,N,V_dataSource
faceTimeEnabled
TB,R,N,GisFaceTimeEnabled
providerManager
T@"TUCallProviderManager",R,N
supportsTelephonyCalls
TB,R,N
directFaceTimeAudioCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeAudioCallingCurrentlyAvailable
directFaceTimeVideoCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeVideoCallingCurrentlyAvailable
signInController
T@"IDSSignInController",R,N,V_signInController
T@"TUCallProviderManager",R,N,V_providerManager
com.apple.calls.intenthandler
Default
_TtC13IntentHandler12IntentRouter
@24@0:8@16
@16@0:8
_TtPs9AnyObject_
13IntentHandler0A6RouterC
13IntentHandler0A6RouterC
So11INExtensionC
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>Apple Certification Authority.com.apple.TelephonyUtilities.IntentHandler</string>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Voicemail/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
</dict>
</plist>
zPLR
