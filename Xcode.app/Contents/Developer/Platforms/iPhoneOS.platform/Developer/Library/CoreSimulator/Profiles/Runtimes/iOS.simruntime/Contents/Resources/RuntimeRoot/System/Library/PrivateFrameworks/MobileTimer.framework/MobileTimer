%s %@
%s Failed to %@ pause timer intent %@%@
%s Successfully %@ pause timer attribute intent %@ with response %@
%s Failed to %@ resume timer intent %@%@
%s Successfully %@ resume timer attribute intent %@ with response %@
exportedObject: %{public}@ must conform to protocol: %{public}@
%s intent:%@
%{public}@ alarm fetch returned alarms: %{public}@
%{public}@ found no alarm to enable
%{public}@ alarm is already enabled: %{public}@
%{public}@ enabling alarm: %{public}@
mobiletimerd - System language changed, terminating daemon
Initializing %{public}@
%{public}@ loading timers
%{public}@ migration needed
%{public}@ migrated timer is %{public}@
%{public}@ no timer created during migration.
%{public}@ has no timers
%{public}@ binary data storage version detected.  Using old reader.
%{public}@ unexpected error reading data %{public}@
%{public}@ loaded %{public}@
%{public}@ setting all timers %{public}@
%{public}@ setting all timers
%{public}@ received request for timers
%{public}@ returning timers: %{public}@, next timer: %{public}@
%{public}@ adding timer %{public}@
MTTimerStorage - Adding Timer
%{public}@ updating timer %{public}@
MTTimerStorage - Updating Timer
%{public}@ removing timer %{public}@
MTTimerStorage - Removing Timer
%{public}@ dismissing timer with ID %{public}@
MTTimerStorage - Dismissing Timer
%{public}@ repeating timer with ID %{public}@
MTTimerStorage - Repeating Timer
Timer already exists
MTTimerStorage - Failed Adding Timer
MTTimerStorage - Finished Adding Timer
MTTimerStorage - Finished Updating Timer
%{public}@
MTTimerStorage - Failed Updating Timer
MTTimerStorage - Finished Removing Timer
Timer doesn't exist
MTTimerStorage - Failed Removing Timer
Dismissed timer %{public}@ at %{public}@
MTTimerStorage - Finished Dismissing Timer
%{public}@ couldn't find matching timer to dismiss for %{public}@
MTTimerStorage - Failed Dismissing Timer
Repeated timer %{public}@
MTTimerStorage - Finished Repeating Timer
MTTimerStorage - Failed Repeating Timer
%{public}@ notifying observers for timer addition
%{public}@ notifying observers for timer update
%{public}@ notifying observers for timer removal
%{public}@ notifying observers for timer dismissal
%{public}@ notifying observers for timer firing
%{public}@ notifying observers for next timer change
-----MTTimerStorage-----
Timers: %{public}@
Last Modified: %{public}@
MTTimerStorage - Next Timer Changed
MTTimerStorage - Fired Timer
%{public}@ registered %{public}@
%{public}@ is registering for distributed notifications
%{public}@ is registering for darwin notifications
%{public}@ is registering for alarm notifications
%{public}@ is registering for darwin notification %{public}@
%{public}@ Using a scheduling power assertion timeout of %{public}d
%{public}@ received notification %{public}@
%{public}@ Alarm added - Request snapshot
%{public}@ Alarm updated - Request snapshot
%{public}@ Alarm removed - Request snapshot
%{public}@ Bedtime Alarm added - Request snapshot
%{public}@ Bedtime Alarm updated - Request snapshot
%{public}@ Bedtime Alarm removed - Request snapshot
%{public}@ no paired device detected
%{public}@ paired device version is too old for sync
%{public}@ Paired device detected.  Can sync.
%{public}@ received %{public}@
%{public}@ device changed version
-----MTPairedDeviceListener-----
Paired Device: %{public}@ - %{public}@ - %{public}@
Paired Device Active: %{public}d
%{public}@ received willPresentNotification
%{public}@ completing with UNNotificationPresentationOptionNone for %{public}@
%{public}@ completing with UNNotificationPresentationOptionAlert|UNNotificationPresentationOptionSound for %{public}@
Connection info must be non-nil
%{public}@ deallocing...
Connection %{public}@ was interrupted for provider %{public}@
Connection %{public}@ was invalidated for provider %{public}@
Connection was terminated for provider %{public}@
Will retry connection because the response to the lifecycle notification failed
Provider %{public}@ connection terminated.  Retrying
Not retrying connection
Provider %{public}@ received lifecycle notification. Reestablishing connection.
Provider %{public}@ received lifecycle notification.  Reconnecting.
Provider %{public}@ received lifecycle notification but does not have a reconnection handler.
Failed to reconnect for provider %{public}@ with error %{public}@.
Retrying failed reconnect for provider %{public}@.
Provider %{public}@ attempting to reconnect.
Failed to reconnect too many times for provider %{public}@.
Expected non-nil connection for provider %@
Received a remote proxy error while talking to the provider %{public}@, error: %{public}@
Expected non-nil proxy for provider %{public}@
%{public}@ invalidating
%{public}@ Failed adding assertion update listener: %@
%{public}@ Added assertion update listener
%{public}@ no sleep alarm, turning off dnd if it's on
%{public}@ alarm %{public}@ not enabled/active, turning off dnd if it's on
%{public}@ dnd not enabled for alarm %{public}@, turning off dnd if it's on
%{public}@ There is Keep DND OFF until date: %{public}@
%{public}@ We are before Keep DND OFF until date: %{public}@. Will not engage
%{public}@ We are past Keep DND OFF until date: %{public}@, clearing it
%{public}@ delaying DND for %f seconds
%{public}@ re-checking dnd
%{public}@ turning on dnd if it's not on for alarm %{public}@
%{public}@ not in bedtime window for alarm %{public}@, turning off dnd if it's on
%{public}@ already have DND assertion
%{public}@ acquiring new DND assertion
%{public}@ Failed to acquire DND assertion with %{public}@
%{public}@ Successfully acquired DND assertion
%{public}@ Failed to release DND assertion with %{public}@
%{public}@ Successfully releases DND assertion
%{public}@ didReceiveModeAssertionInvalidation %{public}@
%{public}@ Handling manual DND invalidation
%{public}@ Retrieved user sleep window: %{public}@
%{public}@ Not in user sleep window
%{public}@ bedtime reminder fired, checking DND
%{public}@ user went to sleep, checking DND
%{public}@ it's the user's bedtime, checking DND
%{public}@ user woke-up, turing off DND if it's on
%{public}@ user %{public}@ sleep alarm, checking DND
%{public}@ significant time change detected, checking DND
-----MTBedtimeDNDMonitor-----
Assertion: %s
Assertion Start Date: %{public}@
%{public}@ createAlarm requested without time
%{public}@ received notification response
%{public}@ received response for category %{public}@ and action %{public}@
Unexpected alarm notification action: %{public}@
%{public}@ calling completion
%{public}@ received snooze action for %{public}@
%{public}@ received go to bed action for bedtime notification %{public}@
%{public}@ received dismiss action for wakeup alarm %{public}@
%{public}@ received dismiss action for bedtime notification %{public}@
%{public}@ received dismiss action for snooze countdown notification %{public}@
%{public}@ received dismiss action for alarm %{public}@
%{public}@ received response for action %{public}@
Unexpected timer notification action: %{public}@
%{public}@ received dismiss action for timer %{public}@
%{public}@ received repeat action for timer %{public}@
Initializing %{public}@ with persistence %{public}@ and migrator %{public}@
%{public}@ cleaning up snooze fire date for sleep alarm %{public}@
%{public}@ cleaning up repeat schedule for sleep alarm %{public}@
%{public}@ loading alarms
%{public}@ To set as a marker we are hitting here with updated root
%{public}@ has no alarms
%{public}@ clean-up needed
%{public}@ loaded %{public}@, sleep alarm %{public}@
%{public}@ loaded %{public}ld alarms, sleep alarm? %{public}d
%{public}@ persistence is nil
%{public}@ set BedTime DND to Yes
%{public}@ ignoring misplaced sleep alarm %{public}@
%{public}@ received request for alarms
%{public}@ returning ordered alarms: %{public}@, sleep alarm: %{public}@, next alarm: %{public}@
%{public}@ calling completion block with alarms %@
%{public}@ adding alarm %{public}@
MTAlarmStorage - Adding Alarm
%{public}@ updating alarm %{public}@
MTAlarmStorage - Updating Alarm
%{public}@ removing alarm %{public}@
MTAlarmStorage - Removing Alarm
%{public}@ removing alarm with ID %{public}@
%{public}@ removing all alarms
%{public}@ setting all alarms %{public}@, sleep alarm %{public}@
%{public}@ setting all alarms
%{public}@ merging alarms %{public}@, sleep alarm %{public}@
%{public}@ merging alarms
%{public}@ snoozing for %{public}lu minutes
%{public}@ snoozing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Snoozing Alarm
%{public}@ pre-emptively dismissing wake-up alarm with ID %{public}@ for %@
%{public}@ dismissing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Dismissing Alarm
Alarm already exists
MTAlarmStorage - Failed Adding Alarm
MTAlarmStorage - Finished Adding Alarm
%{public}@ Alarm %{public}@ modified during save.  Notifying everyone.
%{public}@ Diff: %{public}@
MTAlarmStorage - Finished Updating Alarm
Alarm doesn't exist
MTAlarmStorage - Failed Updating Alarm
MTAlarmStorage - Finished Removing Alarm
MTAlarmStorage - Failed Removing Alarm
%{public}@ was snoozed and isn't enabled anywhere. Cancelling.
%{public}@ was snoozed but had relevant changes. Cancelling.
%{public}@ has a snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking earlier date
%{public}@ has a bed-time snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking earlier date
MTAlarmStorage - Finished Snoozing Alarm
%{public}@ couldn't find matching alarm to snooze for %{public}@
MTAlarmStorage - Failed Snoozing Alarm
%{public}@ Setting non-repeating alarm %{public}@ to disabled
Dismissed alarm %{public}@ at %{public}@
MTAlarmStorage - Finished Dismissing Alarm
%{public}@ couldn't find matching alarm to dismiss for %{public}@
MTAlarmStorage - Failed Dismissing Alarm
%{public}@ notifying observers for alarm addition
%{public}@ notifying observers for alarm change
%{public}@ notifying observers for alarm removal
%{public}@ notifying observers for alarm snooze
%{public}@ notifying observers for alarm dismissal
%{public}@ notifying observers for alarm fire
%{public}@ notifying observers for next alarm change
MTAlarmStorage - Next Alarm Changed
MTAlarmStorage - Fired Alarm
-----MTAlarmStorage-----
Alarms: %{public}@
Sleep Alarm: %{public}@
Start monitoring : Springboard/Carousel start
Cannot start monitoring Springboard/Carousel start because it was already started
Stop monitoring : Springboard/Carousel start
Springboard/Carousel started = %{public}@
%s Handled resolve label for intent: %@ with result: %@
%s Failed to fetch timers for intent: %@, error: %@
%s Handled resolve duration for intent: %@ with result: %@
%s Attempting to remove conflicting timer: %@
%s Successfully removed conflicting timer: %@
%s Failed to remove conflicting timer: %@ with error: %@
%s Successfully %@ create timer intent %@ with response %@
%s Failed to %@ create timer intent %@ with response: %@, error: %@
[Sound] Converting %@ (isGoToBed: %d, isWakeUp: %d) to UNNotificationSound
[Sound] Made %@
[Sound] Converting %@ to MTSound
%{public}@ rescheduling %{public}ld alarms
%{public}@ fired last alarm more than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ the last alarm fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last alarm less than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ Setting really old snoozed alarm %{public}@ to disabled
%{public}@ scheduling %{public}lu alarms
%{public}@ scheduled alarms: %{public}@
%{public}@ unscheduling %{public}lu alarms
%{public}@ next alarm changed: %{public}@
MTAlarmScheduler - Changing Next Alarm
%{public}@ has %{public}ld scheduled alerts and notifications
%{public}@ Scheduling persistent timer for next alert at %{public}@
%{public}@ Timer will fire %f minutes from now
%{public}@ Timer will fire %f seconds from now
%{public}@ Timer should have fired.  Triggering it now
%{public}@ Unscheduling persistent timer.
%{public}@ Alarm timer fired
MTAlarmScheduler - Firing Alarm
%{public}@ %{public}@ fired (scheduled fire date: %{public}@)
%{public}@ Alarm %{public}@ is for non-visible event
%{public}@ no next alarm
%{public}@ Alarm %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled alarms: %{public}@
%{public}@ Find notifications with current trigger date in range %{public}@
%{public}@ Alarm %{public}@ should actually fire in %f seconds
%{public}@ fired all alarms.  Rescheduling.
%{public}@ Setting last alarm trigger date to %{public}@
%{public}@ posting snooze countdown notification for snoozed alarm %{public}@
%{public}@ significant time change detected, rescheduling alarms
-----MTAlarmScheduler-----
Scheduled Alarms: %{public}@
%{public}@ Processing os_state handler
State: %{public}@
%{public}@ Error serializing state data: %{public}@
%{public}@ didAddTimers %{public}@
%{public}@ didUpdateTimers %{public}@
%{public}@ didFireTimer %{public}@
%{public}@ Donating intent: %{public}@
Error donating timer create intent: %{public}@
%@ donated successfully
%@ - Cache Miss
%{public}@ posting distributed notification for alarm: %{public}@
%{public}@ posting distributed notification for timer: %{public}@
%{public}@ System is ready.
Restore is done or not needed.
Restore isn't done.
%{public}@ has been notified that restore is done (received %{public}@) or not needed.
%{public}@ has been notified of F5 demo
-----MTSystemStateListener-----
Restore done: %{public}d
%{public}@ stored sync version is too old
%{public}@ read pending changes %{public}@ from file %{public}@
%{public}@ caught exception %{public}@ when trying to read pending changes
%{public}@ failed to remove bogus pending changes with error %{public}@
%{public}@ unarchiving failed with error %{public}@
%{public}@ had no pending changes in file %{public}@
%{public}@ creating sync directory at %{public}@
%{public}@ failed to write create directory at %{public}@
%{public}@ wrote pending changes %{public}@ to file %{public}@
%{public}@ failed to write pending changes to file %{public}@
%{public}@ haven't dismissed morning alarm yet so we're sleeping
%{public}@ wake up alarm was snoozed (%{public}@) so we're sleeping
%{public}@ next trigger is for wake up (%{public}@) so we're sleeping
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime: (%{public}@). it is currently before bedtime and the snooze date
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime. it is currently past bedtime but before the snooze date.
%{public}@ haven't seen go to bed reminder yet (%{public}@)
%{public}@ not bedtime yet (%{public}@)
%{public}@ user confirmed go to bed notification (%{public}@) so we're sleeping until %{public}@
%{public}@ telling observers about added sleep alarm
%{public}@ telling observers about removed sleep alarm
%{public}@ sleep alarm changes: %@
%{public}@ telling observers about modified sleep alarm
%{public}@ sleep alarm changes unimportant.
%{public}@ telling observers bedtime reminder fired at %{public}@
%{public}@ telling observers bedtime reminder was confirmed at %{public}@
%{public}@ telling observers bedtime reminder was snoozed until %{public}@
%{public}@ telling observers bedtime was reached at %{public}@
%{public}@ telling observers wake up alarm fired at %{public}@
%{public}@ telling observers wake up alarm was snoozed until %{public}@
%{public}@ telling observers wake up alarm was dismissed at %{public}@
-----MTSleepMonitor-----
inUserDefinedSleepWindow: %d
%s Failed to %@ delete timer intent %@ %@, response: %@
%s Successfully %@ delete timer attribute intent %@ with response %@
%s Deleting%@ timer %@ from timer manager %@
%s Failed to delete%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for delete to single unnamed timer: %@
%s Failed to %@ set timer attribute intent %@%@
%s Successfully %@ set timer attribute intent %@ with response %@
%{public}@ Platform doesn't support syncing
%{public}@ Syncing is turned off internally
%{public}@ Syncing isn't enabled for %{public}@
%{public}@ isn't ready
%{public}@ Sync configuration changed
%{public}@ Syncing is enabled.  Starting sync service
%{public}@ Handling internal sync enabled change
-----MTSyncMonitor-----
Syncing Supported: %{public}d
Sync Internally Enabled: %{public}d
Sync Enabled: %{public}d
[Sound] No tone ID is specified in defaults. Fall back to the ToneLibrary default
[Sound] No media item ID is specified in defaults. Switch to the tone type and use the ToneLibrary default
[Sound] Alarm sound from stored defaults (toneID: %@, mediaItemID: %@)
[Sound] No vibration ID is specified in defaults. Use the ToneLibrary default
[Sound] Alarm vibration from stored defaults (vibrationID: %@)
[Sound] Default alarm sound is %@
[Sound] Default timer sound is %@
[Sound] Storing Alarm Defaults (soundTypeKey: %@, toneIDKey: %@, mediaItemIDKey: %@, vibrationIDKey: %@)
[Sound] Storing Timer Defaults (toneIDKey: %@)
%{public}@ Using snapshot quiescing window of %{public}f
%{public}@ skipping migration from old storage, as this device doesn't support the old storage
%{public}@ migrating old alarms and notifications to storage
%{public}@ need to migrate alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ need to migrate %{public}ld alarms and sleep alarm %{public}d
%{public}@ migrated alarm %{public}@ (enabled: %{public}d active: %lu)
%{public}@ migrated sleep alarm %{public}@ (enabled: %{public}d active: %lu)
%{public}@ migrated to alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ skipping migration removal, as this device doesn't support the old storage
%{public}@ removing old alarms and notifications from storage
%{public}@ notification cleanup, as this device doesn't support the old storage
%{public}@ cleaning up old notifications
Computing next fire date for %{public}@ after %{public}@
%{public}@ has next fire date %{public}@ after %{public}@
Snooze hasn't fired yet (%{public}@) for alert %{public}@
Bedtime snooze hasn't fired yet (%{public}@) for alert %{public}@
%{public}@ has next trigger %{public}@
%{public}@ has %lu minute reminder before bedtime
%{public}@ has next bedtime date %{public}@ after %{public}@
%{public}@ has next bedtime reminder date %{public}@ after %{public}@
%{public}@ modified after %{public}@ (%{public}@) probably because we went back in time.
%{public}@ modified after %{public}@ (%{public}@)
%{public}@ modified %{public}@
%{public}@ fired after %{public}@ (%{public}@)
%{public}@ fired %{public}@
%{public}@ dismissed after %{public}@ (%{public}@)
%{public}@ dismissed %{public}@
%{public}@ was stored as inactive which is no longer allowed.  Fixing it.
%{public}@ Timer added - Request snapshot
%{public}@ Timer updated - Request snapshot
%{public}@ Timer removed - Request snapshot
%{public}@ initializing...
%{public}@ broadcasting %{public}@
%{public}@ registering %{public}@ for %{public}@
%{public}@ posting %{public}@ for %{public}@
%{public}@ unregistering %{public}@ for %{public}@
Initializing %{public}@...
%{public}@ calling update handler with %{public}@
%{public}@ _handleAlarmsDidChange
%{public}@ registering response delegate %{public}@
%{public}@ firing %{public}@
%{public}@ adding request %{public}@
%{public}@ failed to fire %{public}@ with error %{public}@
%{public}@ dismissing any notifications for %{public}@
%{public}@ alarm is nil
%{public}@ dismissing notifications for %{public}@ (%ld)
%{public}@ dismissing notifications with identifiers %{public}@
%{public}@ not interrupting audio or locking device because we're in a call
%{public}@ interrupting audio
%{public}@ locking device
%{public}@ dismissing %{public}@
%{public}@ timer is nil
%{public}@ removing all delivered notifications.
%{public}@ migrating old timers to storage
%{public}@ removing old timers and notifications from storage
%{public}@ received significant time change notification. Notifying observers
%{public}@ releasing notification assertion
Add Alarm
Update Alarm
Dismiss Alarm
Snooze Alarm
Sync Update Alarm
Sync Remove Alarm
Sync Dismiss Alarm
Sync Snooze Alarm
Fire Alarm
Schedule Alarm
Add Timer
Update Timer
Remove Timer
Dismiss Timer
Repeat Timer
Schedule Timer
Fire Timer
Remove Alarm
Sync Add Alarm
%{public}@ executing %{public}@ immediately
%{public}@ scheduling %{public}@
%{public}@ opening xpc transaction for %{public}@
%{public}@ closing xpc transaction for %{public}@
%{public}@ %{public}@ completed
%{public}@ %{public}@ has no tasks
%{public}@ Not taking power assert for %{public}@ because assertion timeout is 0.
%{public}@ warming...
%{public}@ setting default duration to %f
%{public}@ initializing: %{public}@
%{public}@ addTimer:%{public}@
MTTimerManager - Adding Timer
%{public}@ updateTimer:%{public}@
MTTimerManager - Updating Timer
%{public}@ removeTimer:%{public}@
MTTimerManager - Removing Timer
%{public}@ dismissTimerWithIdentifier:%{public}@
MTTimerManager - Dismissing Timer
%{public}@ repeatTimerWithIdentifier:%{public}@
MTTimerManager - Repeating Timer
%{public}@ received MTTimerServerReadyNotification
%{public}@ notified timers added: %{public}@
MTTimerManager - Timer Added
%{public}@ notified timers update: %{public}@
MTTimerManager - Timer Updated
%{public}@ notified timers removed: %{public}@
MTTimerManager - Timer Removed
%{public}@ notified timer fired: %{public}@
MTTimerManager - Timer Fired
%{public}@ notified timer dismissed: %{public}@
MTTimerManager - Timer Dismissed
%{public}@ notified next timer changed: %{public}@
MTTimerManager - Next Timer Changed
%s Failed to %@ reset timer intent %@ %@, response: %@
%s Successfully %@ reset timer intent %@ with response %@
%{public}@ checking in...
%{public}@ reconnecting...
%{public}@ updating cache %{public}@
%{public}@ calling connection provider %{public}@
%{public}@ remote block being called on connection provider %{public}@...
%{public}@ error while reconnecting: %{public}@
%{public}@ finish block called for next alarm
%{public}@ finish block called with no next alarm
%{public}@ finish block called with next alarm: %{public}@, error: %{public}@
%{public}@ addAlarm:%{public}@
MTAlarmManager - Adding Alarm
%{public}@ updateAlarm:%{public}@
MTAlarmManager - Updating Alarm
%{public}@ removeAlarm:%{public}@
MTAlarmManager - Removing Alarm
%{public}@ snoozeAlarmWithIdentifier:%{public}@
MTAlarmManager - Snoozing Alarm
%{public}@ dismissAlarmWithIdentifier:%{public}@
MTAlarmManager - Dismissing Alarm
%{public}@ received MTAlarmServerReadyNotification
%{public}@ received MTAlarmServerReadyNotification, posting MTAlarmManagerStateReset
%{public}@ notified alarms added: %{public}@
MTAlarmManager - Alarm Added
%{public}@ notified alarms updated: %{public}@
MTAlarmManager - Alarm Updated
%{public}@ notified alarms removed: %{public}@
MTAlarmManager - Alarm Removed
%{public}@ notified alarm snoozed: %{public}@
MTAlarmManager - Alarm Snoozed
%{public}@ notified alarm fired: %{public}@
MTAlarmManager - Alarm Fired
%{public}@ notified alarm dismissed: %{public}@
MTAlarmManager - Alarm Dismissed
%{public}@ notifying next alarm changed: %{public}@
MTAlarmManager - Next Alarm Changed
%{public}@ notified next alarm changed: %{public}@
%{public}@ notified alarms changed: %{public}@
%s Updating%@ timer %@ from timer manager %@
%s Failed to update%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for update to single unnamed timer: %@
%s Successfully handled search timers intent: %@ with response %@
%s Failed to handle search timers with intent: %@ due to error %@
%{public}@ Alarm added - Donating intent: %{public}@
Error donating alarm create intent: %{public}@
Error deleting donations for update: %{public}@
%{public}@ Interactions for updated alarm %@ deleted successfully
%{public}@ Updated alarm - Donating intent: %{public}@
%{public}@ Updated Alarm %@ donated successfully
Error donating alarm enable intent: %{public}@
%{public}@ Alarm updated - Donating intent: %{public}@
Error donating alarm update intent: %{public}@
Error deleting donations: %{public}@
Interactions for %@ deleted successfully
%{public}@ loading legacy data
%{public}@ loading user preferences
%{public}@ loading scheduled notifications
%{public}@ found %lu scheduled notifications
%{public}@ migrated from springboard defaults
%{public}@ upgrading alarms
%{public}@ found %ld alarms to upgrade
%{public}@ Old alarms being upgraded: %@
%{public}@ New alarms already present: %@
%{public}@ No alarms found to upgrade
%{public}@ upgrading timer
%{public}@ setting current sound: %@
%{public}@ setting current sound: Stop Playing
%{public}@ Removing AlarmList
%{public}@ Removing SBCountdownTimerSoundIdentifier
%{public}@ Removing SBCountdownTimerTimeIdentifier
%{public}@ Reading alarms from preferences: %@
%{public}@ Invalid alarm found in preferences :: %@
%{public}@ Reading sleep alarm from preferences: %@
%{public}@ reconiling alarms with notifications
%{public}@ found scheduled notification matching alarm %{public}@.  Forcing active for migration.
%{public}@ finished reconiling alarms with notifications
%{public}@ loading timer defaults
%{public}@ purging legacy data
%{public}@ deleting defaults
%{public}@ cancelling notifications
Listener %{public}@ posting lifecycle notification %{public}@
%{public}@ invalidation handler called for connection %{public}@...
Connection %{public}@ not entitled
Connection to server via %{public}@ mach port was interrupted.
Connection to server via %{public}@ mach port was invalidated. Removing server side connection
%{public}@: Adding XPC client: %{public}@
%{public}@: Already has XPC client: %{public}@
%{public}@: Current XPC clients: %{public}@
%{public}@: Removing XPC client: %{public}@
%{public}@ has launched
%{public}@ system is ready
-----%{public}@-----
Launched: %{public}@
------------------------
%{public}@ initializing
%{public}@ received %{public}@ notification for %d alarms.
%{public}@ received MTAlarmManagerStateReset notification.
%{public}@ asynchronously reloading alarms
%{public}@ calling reload block
%{public}@ finished reloading
%{public}@ failed reloading: %{public}@
%{public}@ registering sleep observer %{public}@
%{public}@ already have a health observer
%{public}@ sleep data changed.  Notifying %ld observers
%{public}@ unregistering sleep observer %{public}@
%{public}@ no health observer
%{public}@ logging user confirmed going to sleep at %@
%{public}@ logging user woke up at %@
%{public}@ Remembering user bedtime: %@
%{public}@ Ignoring user bedtime %@, because it is more than 90 minutes after the UI-specified bedtime.
%{public}@ Noting user wake time: %@
%{public}@ User bed time unset.  Using: %@
%{public}@ User bed time was: %@
%{public}@ Adding search interval: %@
%{public}@ saving samples to HealthKit
%{public}@ device hasn't been unlocked since boot.  Waiting for unlock...
%{public}@ no unprocessed in bed intervals to save
%{public}@ device has been unlocked.  Saving samples to HealthKit
%{public}@ device has been unlocked but no unprocessed in bed intervals to save
%{public}@ doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
%{public}@ Processing time in bed for interval: %@
%{public}@ Skipping interval due to missing bedtime or wake time: %@
%{public}@ Skipping interval due to missing sleepAlarmBedtime (%@) or sleepAlarmWakeTime (%@)
%{public}@ Finished processing time in bed for interval: %@
%{public}@ Interval is nil.
%{public}@ Fetching sleep data for range %{public}@ with interval %{public}@
%{public}@ Failed to fetch sleep data with error %{public}@
%{public}@ Fetched sleep intervals %@
%{public}@ Failed to request HealthKit authorization with error: %@
%{public}@ rescheduling %{public}ld timers
%{public}@ fired last timer more than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ the last timer fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last timer less than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ scheduling %{public}lu timers
%{public}@ scheduled timers: %{public}@
%{public}@ unscheduling %{public}lu timers
%{public}@ next timer changed: %{public}@
MTTimerScheduler - Changing Next Timer
%{public}@ Updating persistent timer for %{public}ld scheduled timers
%{public}@ Scheduling persistent timer for next timer at %{public}@
%{public}@ Timer should have fired. Triggering it now
%{public}@ Timer timer fired
MTTimerScheduler - Firing Timer
%{public}@ no next timer
%{public}@ Timer %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled timers: %{public}@
%{public}@ Timer %{public}@ should actually fire in %f seconds
%{public}@ fired all timers.  Rescheduling.
%{public}@ Setting last timer trigger date to %{public}@
-----MTTimerScheduler-----
Scheduled Timers: %{public}@
%{public}@ received notification
%{public}@ device has been unlocked
%{public}@ device hasn't been unlocked
%{public}@ posting MTDeviceHasBeenUnlockedForFirstTime notification
%{public}@ Found initial hasBeenUnlockedSinceBoot value of [%d]
-----MTDeviceListener-----
Unlocked since boot: %{public}d
%{public}@ already fired after %{public}@ (%{public}@)
%{public}@ already dismissed after %{public}@ (%{public}@)
Next trigger date %{public}@ is prior to requested date %{public}@
%{public}@ read data version: %f
Illegal fire time class %{public}@
Starting %{public}@
Stopping %{public}@
System is ready: %{public}@.  Will post MTAlarmServerReadyNotification.
System isn't ready...
MTAlarmServer - Adding Alarm
MTAlarmServer - Updating Alarm
MTAlarmServer - Removing Alarm
MTAlarmServer - Snoozing Alarm
MTAlarmServer - Dismissing Alarm
-----MTAlarmServer-----
System Ready: %@
Clients: %{public}@
%s Failed to retrieve timers from timer manager %@: %@
%s Failed to resolve timer %@ from timer manager %@ due to error %@
%s Filtering matched timers for allowedTimerStatesForFollowup:%@ to: %@
%s Filtering resolved timer matches to single unnamed timer: %@
%s Found %ld matching timers for multi target timer: %@
%s Disambiguating %ld matching timers for single target timer: %@
%s Found no matching timers but 1 alternate timer: %@ for target timer: %@
%s Found no matching timers for target timer: %@
%s Found matching timer: %@ for target timer: %@
System is ready: %{public}@.  Will post MTTimerServerReadyNotification.
MTTimerServer - Adding Timer
MTTimerServer - Updating Timer
MTTimerServer - Removing Timer
MTTimerServer - Dismissing Timer
MTTimerServer - Repeating Timer
-----MTTimerServer-----
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForPauseTimer:withCompletion:]
v24@?0@"INTimerResolutionResult"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolvePauseMultipleForPauseTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmPauseTimer:completion:]
-[MTPauseResumeTimerIntentHandler handlePauseTimer:completion:]
B16@?0@"<MTTimerIntentSupport>"8
@"NSError"16@?0@"MTMutableTimer"8
v24@?0@"NSArray"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler resolveResumeMultipleForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler handleResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler _responseToPauseTimerIntent:withPausedTimers:error:dryRun:]
confirm
handle
due to error %@
confirmed
handled
-[MTPauseResumeTimerIntentHandler _responseToResumeTimerIntent:withResumedTimers:error:dryRun:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
alarmId
hour
minute
allowsSnooze
isSleepAlarm
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
daySetting
repeatDay
totalRepeatCount
remainingRepeatCount
title
soundType
sound
soundVolume
soundSongId
lastModified
revision
vibe
AlarmFiredNotificationNamePrefix
AlarmSnoozedNotificationNamePrefix
AlarmEditingProxyID
ALARM_DEFAULT_TITLE
%@::%@
Settings :: ID is wrong type
Settings :: ID is invalid
Settings :: hour is wrong type
Settings :: hour is invalid
Settings :: minute is wrong type
Settings :: minute is invalid
Settings :: day setting is wrong type
Settings :: day setting is invalid
Settings :: settings %@
Settings is nil
Alarms
q24@?0@"Alarm"8@"Alarm"16
x-apple-clock:alarm?id=
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/Alarm.m
<Unknown File>
Invalid parameter not satisfying: %@
volumeIsValid
%@ %d:%02d 0x%04X "%@" %@ <%@ #%i> %@
alarmID
T@"NSString",&,N,V_alarmID
alarmIDURL
T@"NSURL",&,N,V_alarmIDURL
editingProxy
T@"Alarm",R,N,V_editingProxy
settings
T@"NSDictionary",R,N
active
TB,R,N,GisActive
snoozed
TB,R,N,GisSnoozed,V_snoozed
TB,N,V_isSleepAlarm
T@"NSNumber",C,N
TI,N,V_hour
TI,N,V_minute
Tq,N
repeats
TB,R,N
repeatDays
T@"NSArray",R,N
TI,N,V_daySetting
TB,N,V_allowsSnooze
Tq,R,N,V_soundType
T@"NSString",R,N,V_sound
uiTitle
T@"NSString",R,N
T@"NSString",&,N,V_title
vibrationID
T@"NSString",&,N
T@"NSDate",R,N,V_lastModified
TI,R,N,V_revision
delegate
T@"<AlarmDelegate>",W,N,V_delegate
forceActiveForMigration
TB,N,V_forceActiveForMigration
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/Agent/MTXPCConnectionInfo.m
exportedObject: %@ must conform to protocol: %@
<%@:%p %@>
machServiceName
T@"NSString",C,N,V_machServiceName
remoteObjectInterface
T@"NSXPCInterface",&,N,V_remoteObjectInterface
exportedObject
T@,&,N,V_exportedObject
exportedObjectInterface
T@"NSXPCInterface",&,N,V_exportedObjectInterface
lifecycleNotification
T@"NSString",C,N,V_lifecycleNotification
requiredEntitlement
T@"NSString",C,N,V_requiredEntitlement
options
TQ,N,V_options
-[MTEnableDisableAlarmIntentHandler handleMTEnableAlarm:completion:]
-[MTEnableDisableAlarmIntentHandler handleMTDisableAlarm:completion:]
B16@?0@"MTAlarm"8
Found no alarm to enable/disable
@"NAFuture"16@?0@"NSArray"8
v16@?0@"NSNull"8
v16@?0@"NSError"8
com.apple.clock.alarm
com.apple.language.changed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/MTScheduledList.m
Not a mutable ordered collection
q24@?0@"MTScheduledObject"8@"MTScheduledObject"16
B16@?0@"MTScheduledObject"8
v8@?0
@"MTScheduledObject"16@?0@"MTTrigger"8
v16@?0@"MTScheduledObject"8
Alerts: %@, Notifications: %@, Events: %@
T@"<MTScheduledListDelegate>",W,N,V_delegate
orderedScheduledAlerts
T@"NSMutableOrderedSet",&,N,V_orderedScheduledAlerts
orderedScheduledNotifications
T@"NSMutableOrderedSet",&,N,V_orderedScheduledNotifications
orderedScheduledEvents
T@"NSMutableOrderedSet",&,N,V_orderedScheduledEvents
scheduledAlertMap
T@"NSMutableDictionary",&,N,V_scheduledAlertMap
numberOfScheduledAlerts
TQ,R,N
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledAlertsAndNotifications
scheduledObjects
storage
T@"NSMutableDictionary",&,N,V_storage
com.apple.mobiletimer
MTTimers
MTTimerModifiedDate
MTTimerStorageVersion
com.apple.mobiletimerd.MTTimerStorage
com.apple.MTTimerStorage.access-queue
timerID
Timer already exists!
Can't update timer from %@ to %@
Timer doesn't exist
Timer does not exist!
v16@?0@"<MTTimerObserver>"8
B16@?0@"MTTimer"8
q24@?0@"MTTimer"8@"MTTimer"16
Timers
Timers Last Modified
state
None
fired
modified
timers
nextTimer
T@"MTTimer",R,N
lastModifiedDate
T@"NSDate",R,N
orderedTimers
T@"NSMutableArray",&,N,V_orderedTimers
T@"NSDate",C,N,V_lastModifiedDate
currentDateProvider
T@?,R,C,N,V_currentDateProvider
migrator
T@"MTTimerMigrator",&,N,V_migrator
serializer
T@"<NAScheduler>",&,N,V_serializer
observers
T@"NSPointerArray",&,N,V_observers
persistence
T@"<MTPersistence>",&,N,V_persistence
scheduler
T@"MTTimerScheduler",W,N,V_scheduler
%@ %@
action
actionDate
triggerType
triggerDate
TI,N,V_action
Td,N,V_actionDate
TI,N,V_triggerType
Td,N,V_triggerDate
com.apple.MTNotificationManager.serialqueue
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.alarm
SchedulingAssertionTimeout
v16@?0@"NSObject<OS_xpc_object>"8
listeners
T@"NSMutableArray",&,N,V_listeners
%@%@
stack
T@"NSMutableArray",&,N,V_stack
T@"MTAlarmStorage",R,N,V_storage
mode
Tq,N,V_mode
service
T@"<MTSyncService>",&,N,V_service
pairedDevice
T@"NRDevice",&,N,V_pairedDevice
pairedDeviceVersion
TI,N,V_pairedDeviceVersion
pairedDeviceActive
TB,N,V_pairedDeviceActive
notificationCenter
T@"UNUserNotificationCenter",&,N,V_notificationCenter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/Agent/MTXPCConnectionProvider.m
Connection info must be non-nil
com.apple.MTXPCConnectionProvider.serialqueue
v16@?0@8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
info
T@"MTXPCConnectionInfo",&,N,V_info
errorHandler
T@?,C,N,V_errorHandler
reconnectHandler
T@?,C,N,V_reconnectHandler
connection
T@"NSXPCConnection",&,N,V_connection
lastLifecycleNotification
T@"NSDate",&,N,V_lastLifecycleNotification
MTAlarmCategory
MTAlarmNoSnoozeCategory
MTBedtimeAlarmCategory
MTWakeUpAlarmCategory
AlarmSnoozeCountdown
MTAlarmDismissAction
MTAlarmSnoozeAction
MTAlarmGoToBedAction
MTBedtimeAlarm
MTSnoozeCountdown
MTScheduledFireDate
MTSnoozeable
MTRedactedAlarmCategory
MTAlarmRedactedAction
MTRedacted
com.apple.mobiletimer.user-preferences-and-local-notifications-changed
com.apple.mobiletimer.user-preferences-changed
com.apple.mobiletimer.local-notifications-changed
com.apple.mobiletimer.user-preferences-dirty
HHmmssSS
HHmmss
mmssSS
mmss
HH%@
%1$@
%2$@
%3$@
%4$@
MTKeepDndOffUntilDate
com.apple.mobiletimer.assertion-service
com.apple.donotdisturb.mode.bedtime
removed
not active
Assertion active
Assertion start date
alarmStorage
T@"<MTAlarmStorage>",&,N,V_alarmStorage
sleepMonitor
T@"MTSleepMonitor",&,N,V_sleepMonitor
T@?,C,N,V_currentDateProvider
assertionService
T@"DNDModeAssertionService",&,N,V_assertionService
MTDateFormattingLocaleDidChangeNotification
amString
T@"NSString",R,W,N
pmString
use24HourTime
TB,R,N,V_use24HourTime
timeDesignatorAppearsBeforeTime
TB,R,N,V_timeDesignatorAppearsBeforeTime
MTSyncStateOperationUUID
MTSyncStateOperationType
MTSyncStateOperationDataClasses
MTSyncOperationClass
<%@:%p uuid: %@, type: %@, dataClasses: %@>
Incremental
Reunion
Reset
Nuke
supportsSecureCoding
TB,R
uuid
priority
Tq,R,N
T@"NSString",C,N,V_uuid
type
Tq,N,V_type
dataClasses
Tq,N,V_dataClasses
isFromSync
TB,N,V_isFromSync
deletionDate
Td,N,V_deletionDate
Unexpected alert for go to bed action
Unexpected action type: %ld
T@"MTAlarmStorage",R,N
timerStorage
T@"MTTimerStorage",R,N
T@"MTAlarmStorage",&,N,V_alarmStorage
T@"MTTimerStorage",&,N,V_timerStorage
metrics
T@"MTMetrics",&,N,V_metrics
MTBedtimeDNDWarningGiven
MTAlarms
MTSleepAlarm
MTAlarmModifiedDate
MTAlarmStorageVersion
MTAlarmSnoozeDuration
MTBedtimeSnoozeDuration
com.apple.mobiletimerd.MTAlarmStorage
com.apple.MTAlarmStorage.access-queue
MTDefaultTimerVibrationID
Alarm already exists!
Alarm does not exist!
v16@?0@"<MTAlarmObserver>"8
Sleep Alarm
Alarms Last Modified
enabled
firing
alarms
sleepAlarm
T@"MTAlarm",R,N
nextAlarm
allAlarms
orderedAlarms
T@"NSMutableArray",&,N,V_orderedAlarms
T@"MTAlarm",&,N,V_sleepAlarm
T@"NSDate",&,N,V_lastModifiedDate
T@"NSHashTable",&,N,V_observers
T@"MTAlarmMigrator",&,N,V_migrator
T@"MTAlarmScheduler",W,N,V_scheduler
Serial MTSpringboardStartMonitor queue
v12@?0i8
com.apple.springboard.finishedstartup
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke
v16@?0@"NSArray"8
-[MTCreateTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateTimerIntentHandler handleCreateTimer:completion:]
@"NAFuture"16@?0@"NSNull"8
B16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke
v16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
B32@?0@"NSObject<MTTimerIntentSupport>"8Q16^B24
MTAlertSoundDuration
<%@:%p alertTopic: %@, toneID: %@, mediaItemID: %llu, vibeID: %@, volume: %@
MTAlarmLastTriggerDate
com.apple.MTAlarmScheduler.alarm-event
com.apple.MTAlarmTask.fire
com.apple.MTAlarmTask.reschedule
com.apple.MTAlarmScheduler.access-queue
v16@?0@?<v@?>8
MTAlarmScheduler
v16@?0@"MTAlarm"8
Scheduled alarms
T@"<MTAlarmStorage>",R,N,V_storage
scheduledAlarms
T@"MTScheduledList",R,N,V_scheduledAlarms
T@"<NAScheduler>",R,N,V_serializer
T@"<MTNotificationCenter>",R,N,V_notificationCenter
schedulingDelegate
T@"<MTSchedulingDelegate>",R,N,V_schedulingDelegate
taskScheduler
T@"<MTTaskScheduler>",R,N,V_taskScheduler
T@"<MTAlarmScheduleDelegate>",W,N,V_delegate
<%@:%p %@, Trigger: %@>
scheduleable
T@"<MTScheduleable>",C,N,V_scheduleable
trigger
T@"MTTrigger",C,N,V_trigger
isVisible
Create
Update
Enable
Disable
Delete
time
label
identifier
repeat
com.apple.mobiletimer-framework.MobileTimerIntents
com.apple.NanoAlarm
v16@?0q8
Alarm
SLEEP_ALARM
Localizable
alarmIDIntentObject
T@"INObject",R,N
intentLabel
timeObject
CSSearchableIndex
Unable to find class %s
/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
com.apple.mobiletimerd
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
T@"<MTAgentDiagnosticDelegate>",W,N,V_delegate
ALARM_DETAIL_EVERY_MONDAY
ALARM_DETAIL_EVERY_TUESDAY
ALARM_DETAIL_EVERY_WEDNESDAY
ALARM_DETAIL_EVERY_THURSDAY
ALARM_DETAIL_EVERY_FRIDAY
ALARM_DETAIL_EVERY_SATURDAY
ALARM_DETAIL_EVERY_SUNDAY
ALARM_DETAIL_EVERY_DAY
ALARM_DETAIL_WEEKDAYS
ALARM_DETAIL_WEEKENDS
ALARM_SHORT_MONDAY
ALARM_SHORT_TUESDAY
ALARM_SHORT_WEDNESDAY
ALARM_SHORT_THURSDAY
ALARM_SHORT_FRIDAY
ALARM_SHORT_SATURDAY
ALARM_SHORT_SUNDAY
ALARM_REPEAT_NEVER
ALARM_EVERY_MONDAY
ALARM_MONDAY
ALARM_EVERY_TUESDAY
ALARM_TUESDAY
ALARM_EVERY_WEDNESDAY
ALARM_WEDNESDAY
ALARM_EVERY_THURSDAY
ALARM_THURSDAY
ALARM_EVERY_FRIDAY
ALARM_FRIDAY
ALARM_EVERY_SATURDAY
ALARM_SATURDAY
ALARM_EVERY_SUNDAY
ALARM_SUNDAY
ALARM_EVERY_DAY
ALARM_WEEKDAYS
ALARM_WEEKENDS
com.apple.private.NanoTimer
com.apple.clock.timer
duration
T@"MTTimerStorage",R,N,V_storage
donatedTimerIDs
T@"NSMutableSet",R,N,V_donatedTimerIDs
com.apple.MTAlarmCache.access-queue
v40@?0@"NSArray"8@"MTAlarm"16@"MTAlarm"24@"NSError"32
updateBlock
T@?,C,N,V_updateBlock
T@"MTAlarm",&,N,V_nextAlarm
needsUpdate
TB,N,V_needsUpdate
Restore done
T@"<MTSystemStateDelegate>",W,N,V_delegate
restoreDoneHandled
TB,N,V_restoreDoneHandled
MTSyncStoragePendingChanges
MTSyncStorageVersion
com.apple.MTAlarmDataModel.archive-queue
AlarmSync.data
dataClass
Tq,R,N,V_dataClass
pendingChangeSerializer
T@"<SYChangeSerializer>",R,N,V_pendingChangeSerializer
archiverScheduler
T@"<NAScheduler>",R,N,V_archiverScheduler
pendingChanges
T@"NSArray",&,N,V_pendingChanges
T@"<SYChangeSerializer>",&,N,V_serializer
PerformanceTestingEnabled
/tmp/WorldClock-performance_test.plist
cityAddTest
timestamp
citySent
T@"NSDate",&,N,VlastModified
cities
T@"NSArray",R,N,V_cities
NPSManager
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
com.apple.MTSleepMonitor.access-queue
B16@?0@"MTTrigger"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/MTSleepMonitor.m
Unhandled sleep window case!
v16@?0@"<MTSleepObserver>"8
MTSleepMonitor
inUserDefinedSleepWindow
cachedSleepAlarm
T@"MTAlarm",&,N,V_cachedSleepAlarm
MTDeleteTimerIntentHandlerErrorDomain
-[MTDeleteTimerIntentHandler resolveTargetTimerForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler resolveDeleteMultipleForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler confirmDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler handleDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler _responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:]
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]
 (dry-run)
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]_block_invoke
@16@?0@"NSObject<MTTimerIntentSupport>"8
Failed to delete%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[MTSetTimerAttributeIntentHandler handleSetTimerAttribute:completion:]
v24@?0@"INTimer"8@"NSError"16
-[MTSetTimerAttributeIntentHandler confirmSetTimerAttribute:completion:]
-[MTSetTimerAttributeIntentHandler resolveToDurationForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler resolveTargetTimerForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler _responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:]
Failed to update%@ timer %@ from timer manager %@ due to invalid duration %f
MTSyncConfigurationChanged
com.apple.MTSyncManager.serialqueue
watch-companion
ready
TB,N,V_ready
providers
T@"NSMutableArray",&,N,V_providers
syncMetrics
T@"MTMetrics",&,N,V_syncMetrics
MTSoundType
MTSoundToneID
MTSoundMediaItemID
MTSoundVibrationID
MTSoundVolume
MTDefaultAlarmSoundType
MTDefaultAlarmToneID
MTDefaultAlarmMediaItemID
MTDefaultAlarmVibrationID
MTDefaultTimerToneID
Unexpected MTSoundCategory: %lu
Sound must be nonnull!
Sound type integer value out of bounds: %lu
Unexpected sound type: %lu
Timers only support tones
<%@:%p toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
v24@?0q8@"NSError"16
TQ,R,N,V_soundType
toneIdentifier
T@"NSString",R,N,V_toneIdentifier
mediaItemIdentifier
T@"NSNumber",R,N,V_mediaItemIdentifier
vibrationIdentifier
T@"NSString",R,N,V_vibrationIdentifier
T@"NSNumber",R,N,V_soundVolume
citiesLastModified
DefaultCityAdded
com.apple.mobiletimer.alarmintent
SnapshotWindow
v16@?0@"Alarm"8
T@"NSMutableArray",&,N,V_alarms
com.apple.mobiletimer.MTAlarmDidFireNotification
MTAlarmID
MTAlarmDataVersion
MTAlarmHour
MTAlarmMinute
MTAlarmBedtimeHour
MTAlarmBedtimeMinute
MTAlarmBedtimeReminderMinutes
MTAlarmBedtimeDoNotDisturb
MTAlarmBedtimeForSleepTracking
MTAlarmRepeatSchedule
MTAlarmEnabled
MTAlarmActive
MTAlarmFiring
MTAlarmIsSleep
MTAlarmAllowsSnooze
MTAlarmSnoozeFireDate
MTAlarmBedtimeSnoozeFireDate
MTAlarmFireDate
MTAlarmDismissDate
MTAlarmLastModifiedDate
MTAlarmTitle
MTAlarmSound
q24@?0@"MTAlarm"8@"MTAlarm"16
apple-internal-install
ERROR: Setting inactive for alarm %@.  This shouldn't be done.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/MTAlarm.m
q24@?0@"MTTrigger"8@"MTTrigger"16
<%@:%p AlarmID: %@, Title: %@, Hour: %ld, Minute: %ld, enabled: %d, active: %@>
Phone+Watch
Watch
Phone
Inactive
TQ,N,V_hour
TQ,N,V_minute
TQ,N,V_bedtimeHour
TQ,N,V_bedtimeMinute
TQ,N,V_bedtimeReminderMinutes
bedtimeDoNotDisturb
TB,N,V_bedtimeDoNotDisturb
bedtimeForSleepTracking
T@"NSDate",C,N,V_bedtimeForSleepTracking
repeatSchedule
TQ,N,V_repeatSchedule
TB,N,GisEnabled,V_enabled
TQ,N,V_active
TB,N,GisFiring,V_firing
TB,N,GisSleepAlarm,V_sleepAlarm
snoozeFireDate
T@"NSDate",C,N,V_snoozeFireDate
bedtimeSnoozeFireDate
T@"NSDate",C,N,V_bedtimeSnoozeFireDate
firedDate
T@"NSDate",C,N,V_firedDate
dismissedDate
T@"NSDate",C,N,V_dismissedDate
T@"NSString",C,N,V_title
T@"MTSound",C,N,V_sound
T@"NSUUID",R,N,V_alarmID
alarmURL
T@"NSURL",R,N
activeForThisDevice
TB,R,N,GisActiveForThisDevice
activeAnywhere
TB,R,N,GisActiveAnywhere
activeAndEnabledForThisDevice
TB,R,N,GisActiveAndEnabledForThisDevice
TB,R,N,GisSnoozed
bedtimeSnoozed
TB,R,N,GisBedtimeSnoozed
displayTitle
sleepDuration
nextFireDate
TQ,D,N
TB,D,N
TB,D,N,GisEnabled
TB,D,N,GisActiveForThisDevice
T@"NSString",C,D,N
T@"MTSound",C,D,N
com.apple.MTMetrics.serialqueue
com.apple.MobileTimer.Sync.enabled
com.apple.MobileTimer.SleepAlarm.add
com.apple.MobileTimer.Alarm.add
com.apple.MobileTimer.SleepAlarm.delete
com.apple.MobileTimer.Alarm.delete
com.apple.MobileTimer.SleepAlarm.update
com.apple.MobileTimer.Alarm.update
com.apple.MobileTimer.Alarm.snooze
com.apple.MobileTimer.WakeUp.snooze
com.apple.MobileTimer.Bedtime.snooze
com.apple.MobileTimer.Alarm.dismiss
com.apple.MobileTimer.Bedtime.dismiss
com.apple.MobileTimer.Bedtime.confirm
com.apple.MobileTimer.Redacted.dismiss
com.apple.MobileTimer.Redacted.confirm
com.apple.MobileTimer.WakeUp.dismiss
com.apple.MobileTimer.Alarm.snooze.stop
com.apple.MobileTimer.Timer.add
com.apple.MobileTimer.Timer.delete
com.apple.MobileTimer.Timer.update
com.apple.MobileTimer.Timer.dismiss
com.apple.MobileTimer.Timer.repeat
com.apple.MobileTimer.Sync.success
com.apple.MobileTimer.Sync.duration
com.apple.MobileTimer.Sync.Type.incremental
com.apple.MobileTimer.Sync.Type.reunion
com.apple.MobileTimer.Sync.Type.reset
com.apple.MobileTimer.Sync.Type.nuke
com.apple.MobileTimer.Sync.Action.snooze
com.apple.MobileTimer.Sync.Action.wake
com.apple.MobileTimer.Sync.Action.bed
com.apple.MobileTimer.Sync.Action.dismiss
com.apple.MobileTimer.Sync.receive
com.apple.MobileTimer.Sync.send
com.apple.MobileTimer.Sync.failure
%@.%@
com.apple.MobileTimer.Sync.Error
com.apple.MobileTimer.Sync.retry
operationStartTime
TQ,N,V_operationStartTime
<key: %@, value1: %@, value2: %@>
T@"NSString",C,N,V_key
value1
T@,&,N,V_value1
value2
T@,&,N,V_value2
object1
object2
result: %ld, differences: %@
diffable1
T@"<MTDiffable>",C,N,V_diffable1
diffable2
T@"<MTDiffable>",C,N,V_diffable2
results
TQ,N,V_results
differencesByKey
T@"NSMutableDictionary",&,N,V_differencesByKey
differences
com.apple.mobiletimer-framework.preferences-and-notifications-changed
com.apple.mobiletimer-framework.preferences-changed
com.apple.mobiletimer-framework.local-notifications-changed
bundleIdentifier
refreshManagers
TB,N,V_refreshManagers
B16@?0q8
B16@?0d8
com.apple.mobiletimer.MTUserDefaults
Distributed
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSMutableDictionary",&,N,V_observers
@"NSDate"8@?0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/MTUtilities.m
date can't be nil
clock-worldclock
clock-alarm
clock-sleep-alarm
clock-stopwatch
clock-timer-running
clock-timer
v16@?0@"MTTimer"8
@"NAFuture"16@?0@"NSString"8
%@:default
list
lastTimer
mtClockAppSection
Ti,R,N
mtIsList
mtIsForLastTimer
mtID
city
languageCode
timeZone
countryCode
name
unlocalizedName
countryName
unlocalizedCountryName
America/Los_Angeles
Cupertino
%@ %@, %@ || %@ %@ || %@, %@
x-apple-clock:world-clock?
alcid=%d
ccid=
properties
alCity
T@"ALCity",R,N,V_alCity
alCityId
T@"NSNumber",R,N
unlocalizedCityName
idUrl
[%@] title: [%@] fireDate: [%@] identifier: [%@] clockAppSectionURL: [%@]
fireDate
T@"NSDate",C,N,V_fireDate
T@"NSString",C,N,V_identifier
clockAppSectionURL
T@"NSURL",R,C,N
com.apple.MTNextAlarmManager.accessqueue
@16@?0@"MTAlarm"8
nextAlarms
T@"NSSet",&,N,V_nextAlarms
alarmManager
T@"MTAlarmManager",&,N,V_alarmManager
updateHandler
T@?,C,N,V_updateHandler
MTBedtimeExpirationDuration
com.apple.mobiletimer-framework
ALARM_STOP_ACTION
Stop
ALARM_SNOOZE_ACTION
Snooze
BEDTIME_GO_TO_BED_ACTION
Going to Bed Now
BEDTIME_SNOOZE_ACTION
Remind in 10 Min
SNOOZE_STOP
TIMER_STOP_ACTION
TIMER_REPEAT_ACTION
Repeat
B16@?0@"NSString"8
TIME_FOR_BED_TITLE
Time for bed
TIME_FOR_BED_MESSAGE_FORMAT_SINGULAR
TIME_FOR_BED_MESSAGE_FORMAT
Go to bed by %@ to get a full %@ of sleep.
TIME_FOR_BED_DND_MESSAGE_FORMAT_SINGULAR
TIME_FOR_BED_DND_MESSAGE_FORMAT
Go to bed by %@ to get a full %@ of sleep. Do Not Disturb has been enabled during Bedtime and will silence calls and notifications.
ALARM_SNOOZING_TITLE
Snoozing
Unexpected trigger type %ld for scheduled alarm %@
Unexpected trigger type %ld for scheduled timer %@
TUCallCenter
/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
MRMediaRemoteSendCommand
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
timer
T@"MTTimer",&,N,V_timer
MTTimerCategory
MTTimerDismissAction
MTTimerRepeatAction
com.apple.mobiletimer.start-timer
com.apple.mobiletimer.stop-timer
com.apple.MTTimeListener.access-queue
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
MobileTimer
Agent
Sync
Sleep
Activity
T@"INObject",C,D,N
requiresAppLaunch
Tq,D,N
code
Tq,N,V_code
-[MTCreateSingleTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]_block_invoke
-[MTCreateSingleTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler handleCreateTimer:completion:]
v16@?0@"<MTTimerIntentSupport>"8
-[MTCreateSingleTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
alarmObject
alarmDeleteObject
alarmStateObject
alarmActionObject
hasAlarmObject
T@"MTPBAlarm",&,N,V_alarmObject
hasAlarmDeleteObject
T@"MTPBAlarmDelete",&,N,V_alarmDeleteObject
hasAlarmStateObject
T@"MTPBAlarmState",&,N,V_alarmStateObject
hasAlarmActionObject
T@"MTPBAlarmAction",&,N,V_alarmActionObject
com.apple.mobiletimer-framework.preferences-and-notifications-changed-externally
com.apple.mobiletimer-framework.preferences-changed-externally
com.apple.mobiletimer-framework.local-notifications-changed-externally
hasSleepAlarm
T@"MTPBAlarm",&,N,V_sleepAlarm
Td,N,V_lastModified
<%@:%p %@ delay:%f>
delay
Td,N,V_delay
completableBlock
T@?,C,N,V_completableBlock
T@"MTGCDTimer",&,N,V_timer
<%@:%p tasks: %@>
tasks
T@"NSArray",C,N,V_tasks
completionBlock
T@?,C,N,V_completionBlock
SignificantTimeChange
com.apple.mobiletimerd.deltasync
com.apple.mobiletimerd.reunionsync
com.apple.mobiletimerd.resetsync
com.apple.mobiletimerd.nukesync
com.apple.mobiletimerd.redactedtest
com.apple.MTSleepMonitor.monitor-event
com.apple.locationd.lorievent
com.apple.mobile.keybagd.first_unlock
com.apple.mobiletimerd.diagnostics
com.apple.mobiletimer.alarmSyncEnabled
T@"NSString",C,N,V_name
powerAssertion
T@"MTPowerAssertion",&,N,V_powerAssertion
assertionTimeout
Td,R,N,V_assertionTimeout
T@"NSString",R,N,V_name
com.apple.MTTimerCache.access-queue
v32@?0@"NSArray"8@"MTTimer"16@"NSError"24
T@"MTTimer",&,N,V_nextTimer
MTTimerTimeInterval
MTTimerTimeDate
remainingTime
Td,R,N
Td,R,N,V_remainingTime
date
T@"NSDate",C,N,V_date
MTTimerManagerTimersAdded
MTTimerManagerTimersUpdated
MTTimerManagerTimersRemoved
MTTimerManagerTimerFired
MTTimerManagerFiringTimerChanged
MTTimerManagerFiringTimerDismissed
MTTimerManagerNextTimerChanged
MTTimerManagerTimersChanged
MTTimerManagerStateReset
MTTimerManagerPreferencesChanged
NextTimer
com.apple.mobiletimerd.MTTimerManager
^{MTXPCConnectionProvider=#}16@?0@"MTTimerManager"8
v16@?0@"<MTTimerServer>"8
v16@?0@?<v@?@"NSArray"@"MTTimer"@"NSError">8
Timer is running but doesn't have a next trigger.
v32@?0@"MTTimer"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/MTTimerManager.m
State can't be unknown
@"NAFuture"16@?0@"MTTimer"8
%@ cannot restart a timer (%@) that isn't stopped.
v24@?0@"MTTimer"8@"NSError"16
v24@?0@"NSNull"8@"NSError"16
B32@?0@"SBSApplicationShortcutItem"8Q16^B24
START_TIMER_QUICK_ACTION_TITLE
Localizable-OrbHW
RESUME_TIMER_QUICK_ACTION_TITLE
STOP_TIMER_QUICK_ACTION_TITLE
ShortcutItem-Timer-OrbHW
v16@?0@"SBSApplicationShortcutServiceFetchResult"8
notificationObject
T@,R,N
T@"NSNotificationCenter",R,N
T@"MTTimerManagerExportedObject",&,N,V_exportedObject
connectionProvider
T@"MTXPCConnectionProvider",R,N,V_connectionProvider
cache
T@"MTTimerCache",&,N,V_cache
T@"NSNotificationCenter",&,N,V_notificationCenter
timerManager
T@"MTTimerManager",R,W,N,V_timerManager
-[MTResetTimerIntentHandler resolveTargetTimerForResetTimer:withCompletion:]
-[MTResetTimerIntentHandler confirmResetTimer:completion:]
-[MTResetTimerIntentHandler handleResetTimer:completion:]
-[MTResetTimerIntentHandler _responseToResetTimerIntent:withResetTimers:error:dryRun:]
toneID
mediaID
vibeID
snoozeFire
bedtimeSnoozeFire
isEnabled
dismissed
hasTitle
TI,N,V_soundType
hasToneID
T@"NSString",&,N,V_toneID
hasMediaID
TB,N
Td,N,V_mediaID
hasVibeID
T@"NSString",&,N,V_vibeID
hasSoundVolume
Tf,N,V_soundVolume
TI,N,V_bedtimeHour
TI,N,V_bedtimeMinute
TI,N,V_bedtimeReminderMinutes
TI,N,V_revision
TI,N,V_active
hasSnoozeFire
Td,N,V_snoozeFire
hasBedtimeForSleepTracking
Td,N,V_bedtimeForSleepTracking
hasBedtimeSnoozeFire
Td,N,V_bedtimeSnoozeFire
TB,N,V_isEnabled
hasFired
Td,N,V_fired
hasDismissed
Td,N,V_dismissed
Date
UserVisible
eventName
T@"NSString",C,N,V_eventName
MTAlarmManagerAlarmsAdded
MTAlarmManagerAlarmsUpdated
MTAlarmManagerAlarmsRemoved
MTAlarmManagerNextAlarmChanged
MTAlarmManagerAlarmFired
MTAlarmManagerFiringAlarmDismissed
MTAlarmManagerFiringAlarmChanged
MTAlarmManagerAlarmsChanged
MTAlarmManagerStateReset
NextAlarm
.siri_data_changed
com.apple.alarm.label
^{MTXPCConnectionProvider=#}16@?0@"MTAlarmManager"8
v16@?0@"<MTAlarmServer>"8
v16@?0@?<v@?@"NSArray"@"MTAlarm"@"MTAlarm"@"NSError">8
v24@?0@"MTAlarm"8@"NSError"16
B32@?0@"MTAlarm"8Q16^B24
T@"MTAlarmManagerExportedObject",&,N,V_exportedObject
T@"MTAlarmCache",&,N,V_cache
T@"MTAlarmManager",R,W,N,V_alarmManager
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]_block_invoke
B32@?0@"<MTTimerIntentSupport>"8Q16^B24
Failed to update%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSObject<MTTiming>"8Q16^B24
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]
@16@?0@"<MTTimerIntentSupport>"8
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke
com.apple.MTAlarmIntentDonor.access-queue
alarmsByID
T@"NSMutableDictionary",R,N,V_alarmsByID
com.apple.MTLegacyManager
com.apple.springboard
UpgradeAttempted
SBCountdownTimerSoundIdentifier
AlarmList
allows snooze
sound path
setting
SBCountdownTimerTimeIdentifier
timerSleepiPod
timerSound
SleepAlarm
TIMER_INTERVAL
AlarmsLastModified
T@"NSObject<OS_dispatch_queue>",&,N,V_serializer
scheduledNotifications
T@"NSArray",&,N,V_scheduledNotifications
T@"NSArray",&,N,V_alarms
T@"Alarm",&,N,V_sleepAlarm
defaultDuration
Td,N,V_defaultDuration
defaultSound
T@"NSString",C,N,V_defaultSound
loaded
TB,N,V_loaded
purged
TB,N,V_purged
GSSendAppPreferencesChanged
/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileTimer_Sim/MobileTimer-947.1/Framework/Agent/MTXPCConnectionListenerProvider.m
com.apple.MTXPCConnectionListenerProvider.serialqueue
v16@?0@"MTXPCClientInfo"8
clients
T@"NSMutableSet",&,N,V_clients
connectionListener
T@"NSXPCListener",&,N,V_connectionListener
connectedClients
Launched
launchDate
T@"NSDate",&,N,V_launchDate
notificationManager
T@"MTAgentNotificationManager",&,N,V_notificationManager
systemStateListener
T@"MTSystemStateListener",&,N,V_systemStateListener
languageChangeListener
T@"MTLanguageChangeListener",&,N,V_languageChangeListener
pairedDeviceListener
T@"MTPairedDeviceListener",&,N,V_pairedDeviceListener
syncCommandListener
T@"MTSyncCommandListener",&,N,V_syncCommandListener
diagnostics
T@"MTAgentDiagnosticListener",&,N,V_diagnostics
timeListener
T@"MTTimeListener",&,N,V_timeListener
alarmServer
T@"MTAlarmServer",&,N,V_alarmServer
alarmScheduler
T@"MTAlarmScheduler",&,N,V_alarmScheduler
alarmSnapshot
T@"MTAlarmSnapshot",&,N,V_alarmSnapshot
bedtimeSnapshot
T@"MTBedtimeSnapshot",&,N,V_bedtimeSnapshot
alarmIntentDonor
T@"MTAlarmIntentDonor",&,N,V_alarmIntentDonor
sleepMetrics
T@"MTSleepMetrics",&,N,V_sleepMetrics
bedtimeDNDMonitor
T@"MTBedtimeDNDMonitor",&,N,V_bedtimeDNDMonitor
timerServer
T@"MTTimerServer",&,N,V_timerServer
timerScheduler
T@"MTTimerScheduler",&,N,V_timerScheduler
timerSnapshot
T@"MTTimerSnapshot",&,N,V_timerSnapshot
timerIntentDonor
T@"MTTimerIntentDonor",&,N,V_timerIntentDonor
T@"<MTNotificationCenter>",&,N,V_notificationCenter
notificationResponseDelegate
T@"<MTNotificationResponseDelegate>",&,N,V_notificationResponseDelegate
v16@?0@"NSObject<MTAlarmDataSourceObserver>"8
v16@?0@"NSNotification"8
MTUnprocessedInBedIntervals
MTUnprocessedBedtimeKey
com.apple.MTSleepMetrics.serialqueue
v32@?0@"HKObserverQuery"8@?<v@?>16@"NSError"24
Unexpected nil userBedtime
@16@?0@"NSDateInterval"8
@16@?0@"NSDictionary"8
v32@?0@"HKQuery"8@"NSArray"16@"NSError"24
v20@?0B8@"NSError"12
healthStore
T@"HKHealthStore",R,N,V_healthStore
healthObserver
T@"HKObserverQuery",&,N,V_healthObserver
sleepDataObservers
T@"NSMutableSet",&,N,V_sleepDataObservers
StartDate
EndDate
<%@:%p operations: %@>
operations
T@"NSMutableArray",&,N,V_operations
MTSyncActionOperationUUID
MTSyncActionOperationAction
MTSyncActionOperationIdentifier
MTSyncActionOperationActionDate
MTSyncActionOperationTrigger
MTSyncActionOperationTriggerDate
MTSyncActionOperationTriggerType
<%@:%p uuid: %@, type: %@, date: %@, identifier: %@, trigger: %@>
Dismiss
Tq,N,V_action
T@"NSDate",C,N,V_actionDate
T@"MTTrigger",&,N,V_trigger
T@"<MTTimerManagerIntentSupport>",R,N
MTTimerLastTriggerDate
com.apple.MTTimerScheduler.timer-event
com.apple.MTTimerTask.fire
com.apple.MTTimerTask.reschedule
com.apple.MTTimerScheduler.access-queue
Scheduled timers
MTTimerScheduler
T@"<MTTimerStorage>",&,N,V_storage
scheduledTimers
T@"MTScheduledList",R,N,V_scheduledTimers
T@"<MTTimerSchedulerDelegate>",W,N,V_delegate
com.apple.private.mobiletimerd
com.apple.MobileTimer.alarmserver
com.apple.MobileTimer.timerserver
MTDeviceHasBeenUnlockedForFirstTime
com.apple.MTDeviceUtilities.work-queue
Unlocked since boot
workScheduler
T@"<NAScheduler>",&,N,V_workScheduler
internalHasBeenUnlockedSinceBoot
TB,N,V_internalHasBeenUnlockedSinceBoot
CURRENT_TIMER
MTTimerDefaultDuration
com.apple.mobiletimer.MTTimerDidFireNotification
MTTimerID
MTTimerDataVersion
MTTimerState
MTTimerDuration
MTTimerFireTimerClass
MTTimerFireTime
MTTimerTitle
MTTimerLastModifiedDate
MTTimerFiredDate
MTTimerDismissedDate
MTTimerSound
x-apple-clock:timer?id=
TIMER_DEFAULT_TITLE
<%@:%p TimerID: %@, Title: %@, state:%@, duration:%d, firedDate: %@, dismissedDate: %@, sound: %@>
Stopped
Running
Paused
Unknown
Timer duration can only be modified while stopped.
Timer duration must be positive.
Unexpected timer state: %ld
fireTime
T@"<MTTimerTime>",C,N,V_fireTime
TQ,N,V_state
Td,N,V_duration
timerIDString
T@"NSUUID",R,N,V_timerID
timerURL
hasDefaultTitle
T@"NSDate",C,D,N
Td,D,N
id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)
<Unknown Function>
/BuildRoot/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator12.1.sdk/System/Library/PrivateFrameworks/NetAppsUtilities.framework/Headers/NSObject+NAAdditions.h
Expected class of %@ but was %@
com.apple.MTAlarmServer.wakeup
com.apple.MTAlarmServer.ready
com.apple.mobiletimerd.MTAlarmServer
com.apple.MTAlarmServer.ready-queue
v16@?0@"<MTAlarmClient>"8
Alarm system ready
Alarm clients
processName
connectionListenerProvider
T@"MTXPCConnectionListenerProvider",R,N,V_connectionListenerProvider
systemReady
TB,R,N,GisSystemReady,V_systemReady
MTTimerIntentHandlerErrorDomain
v32@?0@"<MTTimerIntentSupport>"8Q16^B24
-[MTTimerIntentHandler _matchTimersFromIntentsTimer:excludeStoppedTimers:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke_2
timerManagerProvider
T@"<MTTimerManagerProviding>",W,N,V_timerManagerProvider
q24@?0@"NSObject<MTTimerIntentSupport>"8@"NSObject<MTTimerIntentSupport>"16
MTTriggerType
MTTriggerDate
<%@:%p Date: %@, Trigger: %@>
Alert
Snoozed
Go To Bed
Snoozed Go To Bed
Redacted
Wake Up
Snoozed Wake Up
Snooze Countdown
Bedtime
TQ,N,V_triggerType
T@"NSDate",C,N,V_triggerDate
isForSnooze
isForGoToBed
isForAlert
isScheduled
com.apple.MTTimerServer.wakeup
com.apple.MTTimerServer.ready
com.apple.mobiletimerd.MTTimerServer
com.apple.MTTimerServer.ready-queue
v16@?0@"<MTTimerClient>"8
Timer system ready
Timer clients
T@"NSUUID",R,N
<%@:%p ProcessName: %@ ProcessID: %@ Connected: %@ Connection: %@>
%@-%d
clientLink
T@,&,N,V_clientLink
connectedDate
T@"NSDate",&,N,V_connectedDate
processID
T@"NSString",R,C,N
targetTimer
numberWithUnsignedInteger:
setWithObject:
pauseMultiple
boolValue
successWithResolvedTimer:
_genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:
successWithResolvedValue:
_handlePauseTimer:dryRun:completion:
state
setState:
_responseToPauseTimerIntent:withPausedTimers:error:dryRun:
_updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:
setWithObjects:
resumeMultiple
_handleResumeTimer:dryRun:completion:
_responseToResumeTimerIntent:withResumedTimers:error:dryRun:
domain
isEqualToString:
code
alloc
initWithCode:userActivity:
stringWithFormat:
setPausedTimers:
setResumedTimers:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handlePauseTimer:completion:
confirmPauseTimer:completion:
resolveTargetTimerForPauseTimer:withCompletion:
resolvePauseMultipleForPauseTimer:withCompletion:
handleResumeTimer:completion:
confirmResumeTimer:completion:
resolveTargetTimerForResumeTimer:withCompletion:
resolveResumeMultipleForResumeTimer:withCompletion:
longLongValue
initWithPersistentID:
existsInLibrary
unsignedLongLongValue
numberWithLongLong:
stringValue
initWithSettings:
init
distantPast
applySettings:
numberWithInt:
numberWithBool:
numberWithInteger:
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
mutableCopy
objectForKey:
setObject:forKey:
unsignedIntValue
setHour:
setMinute:
setAllowsSnooze:
intValue
setSound:ofType:
setSoundVolume:
setVibrationID:
setTitle:
setDaySetting:
setIsSleepAlarm:
setBedtimeReminderMinutes:
integerValue
setBedtimeHour:
setBedtimeMinute:
dropEditingProxy
settings
isActive
setAlarmID:
alarmID
setAlarmIDURL:
hour
minute
daySetting
allowsSnooze
sound
soundType
vibrationID
title
addObject:
length
initWithCapacity:
verifyIdSetting:withMessageList:
verifyHourSetting:withMessageList:
verifyMinuteSetting:withMessageList:
verifyDaySetting:withMessageList:
countByEnumeratingWithState:objects:count:
date
defaultTimeZone
setYear:
setMonth:
setWeekdayOrdinal:
setWeekday:
alarmDidUpdate:
timeComparator
stringByAppendingString:
initWithString:
copy
hasPrefix:
removeObjectForKey:
initWithArray:
floatValue
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
objectForKeyedSubscript:
sharedVibrationManager
defaultVibrationIdentifierForAlertType:
vibrationWithIdentifierIsValid:
bundleForClass:
localizedStringForKey:value:table:
soundVolume
verifySettings:
prepareEditingProxy
applyChangesFromEditingProxy
nowDateForOffsetCalculation
timeZoneForOffsetCalculation
_newBaseDateComponentsForDay:
refreshActiveState
markModified
compareTime:
alarmIDURL
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
repeats
repeatDays
uiTitle
alarmSoundIdentifier
alarmSoundType
setAlarmSoundIdentifier:ofType:
alarmSoundVolume
setAlarmSoundVolume:
.cxx_destruct
editingProxy
isSnoozed
isSleepAlarm
lastModified
revision
delegate
setDelegate:
forceActiveForMigration
setForceActiveForMigration:
_hour
_minute
_daySetting
_allowsSnooze
_lastModified
_revision
_editingProxy
_pretendActiveIfProxy
_settings
_repeatDays
_vibrationID
_snoozed
_isSleepAlarm
_forceActiveForMigration
_soundType
_sound
_title
_delegate
_alarmID
_alarmIDURL
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
protocol
machServiceName
infoForMachServiceName:remoteObjectInterface:options:
setMachServiceName:
remoteObjectInterface
setRemoteObjectInterface:
exportedObject
setExportedObject:
exportedObjectInterface
setExportedObjectInterface:
lifecycleNotification
setLifecycleNotification:
requiredEntitlement
setRequiredEntitlement:
options
setOptions:
_machServiceName
_remoteObjectInterface
_exportedObject
_exportedObjectInterface
_lifecycleNotification
_requiredEntitlement
_options
_alarmUserActivityWithEnableIntent:
_alarmUserActivityWithDisableIntent:
identifier
_enableDisableAlarm:alarmIDString:
alarmsIncludingSleepAlarm:
UUIDString
na_firstObjectPassingTest:
errorWithDomain:code:userInfo:
futureWithError:
isEnabled
futureWithNoResult
setEnabled:
updateAlarm:
flatMap:
addSuccessBlock:
addFailureBlock:
mtUserActivityWithActivityType:
createUserInfoWithIntentName:alarmIDString:time:label:
setUserInfo:
handleMTEnableAlarm:completion:
confirmMTEnableAlarm:completion:
handleMTDisableAlarm:completion:
confirmMTDisableAlarm:completion:
handledLiveDarwinNotifications
name
_languageChangeNotification
_handleLanguageChanged
notificationWithType:name:
arrayWithObject:
handlesNotification:
handleNotification:
initWithDelegate:
count
array
sortUsingComparator:
trigger
triggerDate
compare:
arrayWithArray:
addObjectsFromArray:
_sort:
scheduledAlertsAndNotifications
scheduledObjects
mtIsBeforeOrSameAsDate:
na_filter:
containsDate:
firstObject
arrayWithObjects:count:
_nextScheduledObjectInSets:
mtIsBeforeDate:
_scheduledListForTriggerType:
triggerType
scheduledTypeForTriggerType:
removeAllObjects
_unschedule:
_performScheduleChangingBlock:withCompletion:
allValues
_unscheduleObject:
shouldBeScheduled
upcomingTriggersAfterDate:
scheduledObjectForScheduleable:trigger:
na_map:
_scheduleObject:
na_each:
scheduleable
setObject:forKeyedSubscript:
nextScheduledAlertOrNotification
scheduledListDidChange:withCompletion:
removeObject:
orderedScheduledAlerts
orderedScheduledNotifications
orderedScheduledEvents
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledObjectsToFireBeforeDate:
scheduledObjectsToFireInInterval:
nextScheduledAlert
nextScheduledObject
nextScheduledObjectWithTriggerType:
reset
unschedule:
schedule:afterDate:withCompletion:
isScheduled:
setOrderedScheduledAlerts:
setOrderedScheduledNotifications:
setOrderedScheduledEvents:
scheduledAlertMap
setScheduledAlertMap:
_orderedScheduledAlerts
_orderedScheduledNotifications
_orderedScheduledEvents
_scheduledAlertMap
storage
numberWithFloat:
floatForKey:
setFloat:forKey:
setStorage:
_storage
mainBundle
bundleIdentifier
sharedUserDefaults
initWithPersistence:
serialDispatchQueueSchedulerWithName:
initWithPersistence:migrator:scheduler:currentDateProvider:
weakObjectsPointerArray
_loadTimersWithCompletion:
serializer
persistence
migrateFromOldStorage
timer
initForReadingFromData:error:
initWithEncodedDictionary:
decodeObjectForKey:
_queue_setAllTimers:source:persist:notify:
removeFromOldStorage
valueForKey:
performBlock:
currentTimerFromTimers:
defaultDuration
initWithState:duration:currentDateProvider:
_queue_addTimer:withCompletion:source:
scheduler
nextTimer
addPointer:
_queue_setAllTimers:source:
orderedTimers
_queue_persistTimers
_queue_sortTimers
_queue_notifyObserversForTimerRemoval:source:
_queue_notifyObserversForTimerAdd:source:
timerID
_createDefaultTimerIfNeededWithCompletion:
_queue_updateTimer:withCompletion:source:
_queue_removeTimer:withCompletion:source:
_queue_dismissTimerWithIdentifier:withCompletion:source:
_queue_repeatTimerWithIdentifier:withCompletion:source:
_queue_hasMatchingTimer:
timerIDString
_queue_timerMatchingTimerIdentifier:
stateChangeIsAllowableFromState:toState:
_queuePersistTimer:replacingTimer:
_queue_notifyObserversForTimerUpdate:source:
descriptionForState:
setDismissedDate:
_queue_notifyObserversForTimerDismiss:source:
timerByRestarting
_applyNecessaryChangesFromOldTimer:currentTimer:
setLastModifiedDate:
setFiredDate:
compact
pointerAtIndex:
source:didAddTimers:
_queue_notifyObserversWithBlock:
source:didUpdateTimers:
source:didRemoveTimers:
source:didDismissTimer:
source:didFireTimer:
nextTimerDidChange:
encodeObject:forKey:
encodedDictionary
_diagnosticTimerDictionary
lastModifiedDate
_diagnosticDictionaryForTimer:
firedDate
_queue_notifyObserversForNextTimerChange:source:
_queue_notifyObserversForTimerFire:source:
scheduler:didChangeNextTimer:
scheduler:didFireTimer:
printDiagnostics
gatherDiagnostics
registerObserver:
getTimersWithCompletion:
addTimer:withCompletion:source:
updateTimer:withCompletion:source:
removeTimer:withCompletion:source:
dismissTimerWithIdentifier:withCompletion:source:
repeatTimerWithIdentifier:withCompletion:source:
setAllTimers:source:
timers
loadTimers
loadTimersSync
setScheduler:
_queue_removeAllTimersForSource:
handleF5Reset
setOrderedTimers:
currentDateProvider
migrator
setMigrator:
setSerializer:
observers
setObservers:
setPersistence:
_scheduler
_orderedTimers
_lastModifiedDate
_currentDateProvider
_migrator
_serializer
_observers
_persistence
dictionaryRepresentation
dictionary
numberWithDouble:
allocWithZone:
copyWithZone:
readFrom:
writeTo:
copyTo:
mergeFrom:
action
setAction:
actionDate
setActionDate:
setTriggerType:
setTriggerDate:
_actionDate
_triggerDate
_action
_triggerType
listeners
_registerForLiveDarwinNotification:
_registerForDistributedNotifications
_registerForDarwinNotifications
_registerForAlarmNotifications
_registerForXPCStream:notificationType:
dealloc
integerForKey:isValid:defaultValue:
UTF8String
stringWithCString:encoding:
_isSchedulingRelatedNotification:streamName:
_schedulingAssertionTimeout
_isSyncNotification:streamName:
_isSleepNotification:streamName:
notificationWithType:name:powerAssertionTimeout:
_handleNotification:
registerListener:
beginListening
setListeners:
_listeners
lastObject
_encodeObject:forKey:
_serializingProtocol
_dictionaryForProtocolObject:
_encodeProtocolObject:forKey:
encodeWithCoder:
initWithCoder:
removeLastObject
mt_isWritingToPersistence
mt_isReadingFromPersistence
mt_isWritingToStorage
encodeBool:forKey:
encodeInteger:forKey:
encodeInt:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
stack
setStack:
_stack
doubleValue
_decodeObject:
_dictionaryIsForSerializableObject:
_objectForDictionary:
allKeys
substringFromIndex:
_unwrap:
allowsKeyedCoding
decodeBoolForKey:
decodeIntegerForKey:
decodeIntForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeFloatForKey:
decodeDoubleForKey:
initWithBundleID:
na_any:
shouldScheduleSnapshotForAlarms:
scheduleSnapshot
source:didAddAlarms:
source:didUpdateAlarms:
source:didRemoveAlarms:
source:didSnoozeAlarm:snoozeAction:
source:didFireAlarm:triggerType:
source:didDismissAlarm:dismissAction:
source:didChangeNextAlarm:
initWithStorage:
_registerForLocalNotifications
_updateActiveDeviceInfo
defaultCenter
deviceDidPairOrBecomeActiveNotification:
addObserver:selector:name:object:
deviceDidUnpairOrBecomeInactiveNotification:
deviceDidChangeVersionDarwinNotification
sharedInstance
getActivePairedDevice
setPairedDevice:
pairedDevice
setPairedDeviceActive:
pairedDeviceActive
setPairedDeviceVersion:
activePairedDeviceExists
mode
pairedDeviceVersion
postNotificationName:object:
operationWithType:dataClasses:
valueForProperty:
syncReady
initWithMode:service:
setMode:
service
setService:
_pairedDeviceActive
_pairedDeviceVersion
_mode
_service
_pairedDevice
currentNotificationCenter
request
content
categoryIdentifier
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
initWithConnectionInfo:errorHandler:reconnectHandler:
didReceiveLifecycleNotification
info
initWithMachServiceName:options:
_didInterruptConnection
setInterruptionHandler:
_didInvalidateConnection
setInvalidationHandler:
setExportedInterface:
resume
errorHandler
_didTerminateConnection
lastLifecycleNotification
timeIntervalSinceDate:
_retryConnectionWithRecover:
setLastLifecycleNotification:
reconnectHandler
finishWithResult:
finishWithError:
performRemoteBlock:withErrorHandler:
_retryConnection
recover:
addCompletionBlock:
_remoteObjectProxyWithErrorHandler:
connection
remoteObjectProxyWithErrorHandler:
invalidate
providerWithConnectionInfo:errorHandler:
providerWithConnectionInfo:reconnectHandler:
performRemoteBlock:
setInfo:
setErrorHandler:
setReconnectHandler:
setConnection:
_info
_errorHandler
_reconnectHandler
_connection
_lastLifecycleNotification
loadUserPreferences
saveAndNotifyForUserPreferences:localNotifications:
localeIdentifier
setNumberStyle:
stringByReplacingOccurrencesOfString:withString:
setPositiveFormat:
stringFromNumber:
currentLocale
initWithLocaleIdentifier:
addTimer:
updateTimer:
removeTimer:
initWithAlarmStorage:sleepMonitor:currentDateProvider:
serviceForClientIdentifier:
addAssertionUpdateListener:error:
removeAssertionUpdateListener:error:
invalidateActiveModeAssertionWithError:
sleepAlarm
_checkDNDForAlarm:
_checkDNDForAlarm:delay:
disengageDND
isActiveAndEnabledForThisDevice
alarmIDString
bedtimeDoNotDisturb
inUserDefinedSleepWindowForAlarm:
checkDND
engageDND
assertionService
activeModeAssertionWithError:
detailsWithIdentifier:modeIdentifier:lifetime:
takeModeAssertionWithDetails:error:
reason
handleManualDNDInvalidation
userDefinedSleepWindowForAlarm:now:
mtContainsDate:
endDate
startDate
modeAssertionService:didReceiveModeAssertionInvalidation:
sleepMonitor:bedtimeReminderDidFire:sleepAlarm:
sleepMonitor:bedtimeReminderWasConfirmed:sleepAlarm:
sleepMonitor:bedtimeReminderWasSnoozed:sleepAlarm:
sleepMonitor:bedtimeWasReached:sleepAlarm:
sleepMonitor:wakeUpAlarmDidFire:sleepAlarm:
sleepMonitor:wakeUpAlarmWasDismissed:sleepAlarm:
sleepMonitor:wakeUpAlarmWasSnoozed:sleepAlarm:
sleepMonitor:sleepAlarmDidChange:
timeListener:didDetectSignificantTimeChangeWithCompletionBlock:
initWithAlarmStorage:sleepMonitor:
alarmStorage
setAlarmStorage:
sleepMonitor
setSleepMonitor:
setCurrentDateProvider:
setAssertionService:
_alarmStorage
_sleepMonitor
_assertionService
_reloadLocaleInfo
_loadLocaleInfo
_clearLocaleDependentState
dateFormatFromTemplate:options:locale:
rangeOfString:
rangeOfString:options:
setLocale:
setDateStyle:
setTimeStyle:
setLocalizedDateFormatFromTemplate:
_dateOnlyFormatter
AMSymbol
PMSymbol
localizedTimeStringFromDate:forTimeZone:timeDesignator:
_timeOnlyFormatter
timeZone
isEqualToTimeZone:
setTimeZone:
timeDesignatorForDate:timeZone:
stringFromDate:
currentCalendar
component:fromDate:
amString
pmString
localizedTimeStringFromDate:timeDesignator:
timeDesignatorForDate:
use24HourTime
timeDesignatorAppearsBeforeTime
_amString
_pmString
_use24HourTime
_timeDesignatorAppearsBeforeTime
operationWithType:dataClasses:fromSync:
initWithType:dataClasses:fromSync:
UUID
initWithUUID:fromSync:type:dataClasses:
type
dataClasses
requiresResponse
decodeObjectOfClass:forKey:
uuid
isEqualToOperation:
isFromSync
_stringForType:
_stringForDataClasses:
componentsJoinedByString:
operationFromMetaData:
supportsSecureCoding
isEquivalentToOperation:
shouldRetry
responseOperation
operationMetaData
priority
initWithType:dataClasses:
sendsEntireState
setType:
setUuid:
setDataClasses:
setIsFromSync:
_isFromSync
_type
_uuid
_dataClasses
deletionDate
setDeletionDate:
_deletionDate
_alarmUserActivityWithIntent:
time
dateWithTimeIntervalSinceReferenceDate:
calendarWithIdentifier:
alarmWithHour:minute:
label
addAlarm:
displayString
handleMTCreateAlarm:completion:
confirmMTCreateAlarm:completion:
notification
_handleAlarmNotificationResponse:withCompletionHandler:
_handleTimerNotificationResponse:withCompletionHandler:
actionIdentifier
_mtStringByRemovingNotificationPrefixes
_alarmNotificationActionForUserNotificationAction:nonSnoozableNotification:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:source:
metrics
logAlarmSnoozeAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:source:
logAlarmDismissAction:
_timerNotificationActionForUserNotificationAction:
timerStorage
logTimerDismissed
logTimerRepeated
initWithAlarmStorage:timerStorage:
setTimerStorage:
setMetrics:
_timerStorage
_metrics
handleMTUpdateAlarm:completion:
confirmMTUpdateAlarm:completion:
weakObjectsHashTable
snoozeFireDate
setSnoozeFireDate:
setRepeatSchedule:
setActive:
initWithSound:usingVolume:
setSound:
sharedToneManager
setCurrentToneIdentifier:forAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_loadAlarmsWithCompletion:
alarms
updateBedTimeDNDForAlarm:
cleanUpOldNotifications
_cleanUpForInternalBuild:
_cleanUpSnoozeFireDate:
cleanDeliveredNotifications
repeatSchedule
_cleanUpSleepAlarmRepeat:
_queue_setAllAlarms:sleepAlarm:source:persist:notify:
setBedtimeDoNotDisturb:
_queue_allAlarms
na_safeAddObject:
nextAlarm
_queue_addAlarm:withCompletion:source:
_queue_updateAlarm:withCompletion:source:
_queue_removeAlarm:withCompletion:source:
_queue_removeAlarmWithIdentifier:withCompletion:source:
_queue_removeAllAlarmsForSource:
_queue_setAllAlarms:sleepAlarm:source:
_queue_mergeAlarms:sleepAlarm:source:
integerForKey:defaultValue:
dateByAddingTimeInterval:
snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
_queue_snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
nextTriggerAfterDate:ofType:
dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_hasMatchingAlarm:
_queuePersistAlarm:replacingAlarm:
_notifyObserversForAlarmAdd:source:
_queue_alarmMatchingAlarm:
diffBetweenObject:andObject:
keysAffectingNotification
hasDifferencesInKeys:
_notifyObserversForAlarmChange:source:
_queue_actuallyRemoveAlarm:withCompletion:source:
_queue_alarmMatchingAlarmIdentifier:
_notifyObserversForAlarmRemoval:source:
_applyNecessaryChangesFromOldAlarm:currentAlarm:
_queue_persistAlarms
_queue_sortAlarms
results
keysAffectingScheduling
mtIsAfterDate:
dismissedDate
isBedtimeSnoozed
keysAffectingSnooze
setBedtimeSnoozeFireDate:
_queue_resetAlarmsTo:sleepAlarm:
_alarmsByMergingAlarms:withAlarms:addedAlarms:updatedAlarms:
mostRecentlyUpdatedAlarmForAlarms:
setFiring:
earlierDate:
bedtimeSnoozeFireDate
_notifyObserversForAlarmSnooze:snoozeAction:source:
_notifyObserversForAlarmDismiss:dismissAction:source:
dontNotify
_notifyObserversWithBlock:
_notifyObserversForNextAlarmChange:source:
_notifyObserversForAlarmFire:triggerType:source:
_diagnosticAlarmDictionary
_diagnosticDictionaryForAlarm:
isFiring
alarmsByMergingAlarms:withAlarms:
scheduler:didChangeNextAlarm:
scheduler:didFireAlarm:
getAlarmsWithCompletion:
addAlarm:withCompletion:source:
updateAlarm:withCompletion:source:
removeAlarm:withCompletion:source:
removeAlarmWithIdentifier:withCompletion:source:
removeAllAlarmsForSource:
mergeAlarms:sleepAlarm:source:
setAllAlarms:sleepAlarm:source:
allAlarms
loadAlarms
loadAlarmsSync
orderedAlarms
setOrderedAlarms:
setSleepAlarm:
_orderedAlarms
_sleepAlarm
_checkSpringBoardStarted
_stopMonitoring
_startMonitoringWithQueue:
didReceiveSpringboardStarted:
springboardStartMonitor:didReceiveStarted:
enumerateObservers:
addObserver:
removeObserver:
isSpringboardStarted
_notifyToken
_isSpringBoardStarted
_queue
_timerManager
duration
initWithState:duration:
spokenPhrase
_timer:conflictsWithRunningTimersInTimers:
confirmationRequiredWithStringToConfirm:
successWithResolvedString:
resolutionResultUnsupportedWithReason:
notRequired
unsupported
needsValue
successWithResolvedTimeInterval:
_createTimerWithIntent:dryRun:completion:
_responseToCreateTimerIntent:withCreatedTimer:error:dryRun:
futureWithResult:
setCreatedTimer:
indexOfObjectPassingTest:
handleCreateTimer:completion:
confirmCreateTimer:completion:
resolveLabelForCreateTimer:withCompletion:
resolveDurationForCreateTimer:withCompletion:
unSoundIsGoToBed:isEarlyWakeUp:isWakeUp:
soundWithAlertType:
setShouldRepeat:
setAlertTopic:
setShouldIgnoreRingerSwitch:
setMaximumDuration:
setAudioVolume:
vibrationIdentifier
setVibrationIdentifier:
toneIdentifier
setToneIdentifier:
mediaItemIdentifier
setToneMediaLibraryItemIdentifier:
mt_Description
unSound
audioVolume
toneSoundWithIdentifier:vibrationIdentifer:volume:
toneMediaLibraryItemIdentifier
numberWithUnsignedLongLong:
songSoundWithIdentifier:vibrationIdentifier:volume:
alertTopic
alertType
defaultSoundForCategory:
mtSound
initWithStorage:notificationCenter:scheduler:
xpcSchedulerWithEvent:
initWithStorage:notificationCenter:scheduler:schedulingDelegate:taskScheduler:currentDateProvider:
_rescheduleAlarmsWithCompletion:
removeAllDeliveredNotifications
_scheduleAlarms:withCompletion:
_lastAlarmTriggerDate
_setLastAlarmTriggerDate:
scheduledAlarms
_unscheduleAlarms:
_queue_updateNextAlarmTimerWithCompletion:
_nextTriggerDateForScheduling
scheduleTimerForSeconds:
_queue_fireTriggeredAlarmsWithCompletionBlock:
_queue_unregisterTimer
unscheduleTimer
initWithStartDate:endDate:
isVisible
postNotificationForScheduledAlarm:completionBlock:
isForAlert
_intervalToCheckForAlarmsToFireBeforeDate:
_fireScheduledAlarm:firedDate:completionBlock:
taskWithIdentifier:delay:completableBlock:
rescheduleAlarmsWithCompletion:
taskWithIdentifier:completableBlock:
scheduleTask:
taskGroupWithTasks:completionBlock:
scheduleTaskGroup:
objectForKey:defaultValue:
nextAlarmIncludingBedtimeNotification:
nextScheduledAlarmIncludingBedtimeNotification:
nextTriggerDateIncludingBedtimeNotification:
_nextScheduledAlertIncludingBedtimeNotification:
scheduleAlarms:
dismissNotificationsWithIdentifiers:
_snoozeCountdownIdentifier:
unscheduleAlarms:
dismissNotificationsForAlarm:
triggerWithDate:triggerType:
dismissNotificationsForAlarm:dismissAction:
releaseAssertion
_queue_triggerDidFireForAlarmWithCompletionBlock:
initWithStorage:notificationCenter:
nextTriggerDate
sourceIdentifier
schedulingDelegate
taskScheduler
_scheduledAlarms
_schedulingDelegate
_taskScheduler
initWithScheduleable:trigger:
isEqualToScheduledObject:
setScheduleable:
setTrigger:
_scheduleable
_trigger
nextTriggersAfterDate:includeBedtime:
nextTriggerAfterDate:
_setExtensionBundleId:
_setLaunchId:
_setNanoLaunchId:
intentLabel
setLabel:
timeObject
setTime:
alarmIDIntentObject
displayTitle
na_safeSetObject:forKey:
initWithDomain:verb:parametersByName:
defaultSearchableIndex
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
mt_initWithAlarm:verb:
mt_intentForAlarmCreate:
mt_intentForAlarmUpdate:
mt_intentForAlarmEnable:
mt_intentForAlarmDisable:
mt_deleteDonationsForAlarm:completion:
dateBySettingHour:minute:second:ofDate:options:
localizedStringFromDate:dateStyle:timeStyle:
initWithIdentifier:displayString:
timeIntervalSinceReferenceDate
_addStateHandler
dataWithPropertyList:format:options:error:
bytes
assistantUILocalizedStringForKey:table:
string
appendString:
donatesIntent
_donateCreateTimerIntent:
containsObject:
hasDefaultTitle
initWithSpokenPhrase:
initWithLabel:duration:
initWithIntent:response:
donateInteractionWithCompletion:
donatedTimerIDs
_donatedTimerIDs
initWithUpdateBlock:scheduler:
initWithUpdateBlock:
markNeedsUpdate
getCachedAlarmsWithCompletion:
updateBlock
setUpdateBlock:
setNextAlarm:
needsUpdate
setNeedsUpdate:
_needsUpdate
_updateBlock
_nextAlarm
postNotificationName:object:userInfo:deliverImmediately:
postNotificationForScheduledTimer:completionBlock:
dismissNotificationsForTimer:
registerResponseDelegate:
setWithArray:
_supportedNotificationNames
performSyncOperation:
initWithService:alarmStorage:
_checkIfRestoreDone
isSystemRestoreDone
_handleRestoreDone
restoreDoneHandled
_restoreNotification
restoreDidFinish
setRestoreDoneHandled:
_handleF5Reset
_restoreDoneHandled
schedulerWithDispatchQueue:
_syncDataPath
_pathComponentForDataClass:
stringByAppendingPathComponent:
archiverScheduler
defaultManager
syncDataFile
fileExistsAtPath:isDirectory:
initWithContentsOfFile:
pendingChangeSerializer
removeItemAtPath:error:
finishDecoding
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initRequiringSecureCoding:
finishEncoding
encodedData
writeToFile:atomically:
loadPendingChangesWithCompletion:
savePendingChanges:
initWithDataClass:serializer:
dataClass
_dataClass
_pendingChangeSerializer
_archiverScheduler
pendingChanges
setPendingChanges:
initWithPendingChanges:
_pendingChanges
sharedManagerWithPreferences:
initWithPreferences:
setLastModified:
cities
addDefaultCitiesIfNeeded
objectAtIndex:
worldClockCityFromPersistenceRepresentation:
replaceObjectAtIndex:withObject:
removeObjectAtIndex:
pushCityPropertiesToPreferences
synchronize
_notifyNano
worldClockCityFromPersistenceDictionary:
worldClockCityFromPersistenceArray:
sharedManager
bestCityForLegacyCity:
initWithALCity:
fixUpCityProperties:
isWorldClockCityProperties:
initWithProperties:
defaultCitiesAdded
currentDevice
userInterfaceIdiom
defaultCitiesShownInWorldClock
defaultCitiesForLocaleCode:options:
setDefaultCitiesAdded:
saveCities
properties
setCities:
isCachedLanguageStaleForProperties:
dictionaryWithDictionary:
idUrl
canAddCity
indexOfObject:
insertObject:atIndex:
standardUserDefaults
boolForKey:
dictionaryWithContentsOfFile:
defaultsKeys
synchronizeUserDefaultsDomain:keys:
loadCities
checkIfCitiesModified
cityWithIdUrl:
addCity:
removeCity:
removeCityAtIndex:
removeAllCities
moveCityFromIndex:toIndex:
_dirty
_cities
_defaults
initWithAlarmStorage:currentDateProvider:
userDefinedSleepWindowForAlarm:
bedtimeForSleepTracking
notifyObserversForSleepAlarmChange:
notifyObserversForSleepAlarmChangeIfNecessary:
_notifyObserversForSleepAlarmChange:
handleBedtimeForAlarm:date:
handleBedtimeReminderForAlarm:date:
handleWakeUpTimeForAlarm:date:
isFromOtherDevice
handleSnoozeOfGoToBedNotificationForAlarm:date:
handleSnoozeForAlarm:date:
handleConfirmationOfGoToBedNotificationForAlarm:date:
handleDismissForAlarm:date:
setBedtimeForSleepTracking:
notifyObserversWithBlock:
inUserDefinedSleepWindow
initWithAlarmStorage:
prepare
userDefinedSleepWindow
cachedSleepAlarm
setCachedSleepAlarm:
_cachedSleepAlarm
deleteMultiple
_responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:
_deleteTimer:multiple:dryRun:completion:
setDeletedTimers:
_onlyUnnamedTimerInTimers:forTargetTimer:allowMultiple:
_matchTimersFromIntentsTimer:excludeStoppedTimers:completion:
handleDeleteTimer:completion:
confirmDeleteTimer:completion:
resolveTargetTimerForDeleteTimer:withCompletion:
resolveDeleteMultipleForDeleteTimer:withCompletion:
toDuration
_responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:
_updateTimer:toDuration:dryRun:completion:
initWithTimerResolutionResult:
unsupportedForReason:
setUpdatedTimer:
setDuration:
_updateTimer:dryRun:updateBlock:completion:
handleSetTimerAttribute:completion:
confirmSetTimerAttribute:completion:
resolveTargetTimerForSetTimerAttribute:withCompletion:
resolveToDurationForSetTimerAttribute:withCompletion:
syncConfigurationChanged:
setReady:
providers
syncingSupported
isSyncingEnabledInternally
ready
object
startSyncServiceIfSyncingEnabled
stop
syncingEnabled
syncMetrics
logSyncingEnabled
start
logSyncingDisabled
initWithSyncService:syncMetrics:
startMonitoring
registerSyncStatusProvider:
setProviders:
setSyncMetrics:
_ready
_providers
_syncMetrics
_loadDefaultAlarmSound
_loadDefaultTimerSound
_saveDefaultAlarmSound:
_saveDefaultTimerSound:
initWithToneIdentifier:vibrationIdentifer:volume:
initWithMediaItemIdentifier:vibrationIdentifier:volume:
unsignedIntegerValue
defaultToneIdentifierForAlertType:
isEqualToSound:
initWithType:
setTopic:
setForPreview:
alertWithConfiguration:
mtMainThreadScheduler
playWithCompletionHandler:
_updateAudioVolumeDynamicallyToValue:
setDefaultSound:forCategory:
interruptAudio
previewWithCompletionHandler:
updatePreview:
_toneIdentifier
_mediaItemIdentifier
_vibrationIdentifier
_soundVolume
platformSpecificNotificationCenter
platformSpecificNotificationResponseDelegateWithAlarmStorage:timerStorage:
timeIntervalForKey:isValid:defaultValue:
_quiescingWindow
_performScheduleSnapshot
_bundleID
setAlarms:
loadLegacyData
alarmFromOldAlarm:
active
purgeLegacyData
cancelNotifications
_alarms
initWithHour:minute:
alarm
sleepAlarmWithHour:minute:
_initCommon
initWithCurrentTimeFromCurrentDateProvider:
components:fromDate:
initWithHour:minute:currentDateProvider:
defaultActiveStatus
_isInternalBuild
isActiveForThisDevice
URLWithString:
sleepDurationSeconds
mtTimeIntervalSinceComponents:now:
nextTrigger
nextFireDateAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:includeBedtime:
_actualTriggerStartDateForDate:
_nextDateHelperWithDate:calendar:
_nextBedtimeTriggersHelperWithDate:wakeUpDate:includeBedtimeNotification:includeBedtime:calendar:
setSecond:
mtPreviousDateBeforeDate:matchingComponents:
dateByAddingUnit:value:toDate:options:
distantFuture
_date:isOnDay:calendar:
dateFromComponents:
mtNextDateAfterDate:matchingUnit:value:
mtNextDateAfterDate:matchingComponents:
isEqualToAlarm:
_isEqualToAlarm:checkLastModified:
initWithIdentifier:
_copyStateOntoAlarm:
initWithUUIDString:
descriptionForActiveStatus:
sleepAlarmWithHour:minute:bedtimeHour:bedtimeMinute:
mutableCopyWithZone:
isActiveAnywhere
setActiveForThisDevice:
dateComponents
alarmURL
sleepDuration
nextFireDate
nextFireDateAfterDate:
isEqualIgnoringLastModifiedDate:
_bedtimeDoNotDisturb
_enabled
_firing
_bedtimeHour
_bedtimeMinute
_bedtimeReminderMinutes
_repeatSchedule
_active
_firedDate
_snoozeFireDate
_bedtimeSnoozeFireDate
_dismissedDate
_bedtimeForSleepTracking
keyForIdentifier
setOperationStartTime:
operationStartTime
_sharedPublicMetrics
logAlarmAdded:
logAlarmDeleted:
logAlarmUpdated:
logTimerAdded
logTimerDeleted
logTimerUpdated
service:didRequestSyncOperation:
service:didBeginSyncOperation:
service:didCompleteSyncOperation:
service:didFailSyncOperation:withError:
service:didScheduleRetryOfSyncOperation:forError:
_operationStartTime
value1
value2
setKey:
setValue1:
setValue2:
_key
_value1
_value2
initWithObject:andObject:
computeDiff
setDifferencesByKey:
setResults:
_handleDifferenceForKey:value1:value2:
intersectsSet:
differences
differenceForKey:
diffable1
setDiffable1:
diffable2
setDiffable2:
differencesByKey
_diffable1
_diffable2
_results
_differencesByKey
relayFrameworkNotification:
userInfo
refreshManagers
refreshManagersForPreferences:localNotifications:
sharedRelay
setRefreshManagers:
_refreshManagers
initWithUserDefaults:
initWithSuiteName:
setFloat:forKey:notification:
setObject:forKey:notification:
floatForKey:exists:
setBool:forKey:notification:
boolForKey:exists:
setInteger:forKey:notification:
integerForKey:exists:
setTimeInterval:forKey:notification:
timeIntervalForKey:exists:
_postNotification:
_distributedNotificationForLocalNotification:
distributedNotificationPosted:
_localNotificationForDistributedNotification:
notificationObject
removeObserver:name:object:
setBool:forKey:
setInteger:forKey:
setTimeInterval:forKey:
timeIntervalForKey:defaultValue:
registerNotification:observer:
unregisterNotification:observer:
userDefaults
setUserDefaults:
_userDefaults
isEqualToDate:
laterDate:
mtIsAfterOrSameAsDate:
mtDateNearestMatchingComponents:
mtNow
_mtNextDateAfterDate:matchingComponents:backwards:
_optionsForBackwards:
nextDateAfterDate:matchingComponents:options:
_dateForInitial:repeated:backwards:
_mtNextDateAfterDate:matchingUnit:value:backwards:
nextDateAfterDate:matchingUnit:value:options:
locale
mtIsIn24HourTime
mtPreviousDateBeforeDate:matchingUnit:value:
mtDateRequiresSingularTimeString:
mtGregorianCalendar
mtTimeIntervalSinceComponents:
mtURLForClockAppSection:timerManager:
currentTimer
mtURLForScheme:
scheme
host
path
mtClockAppSection
mtIsList
mtIsForLastTimer
mtID
mtURLForClockAppSection:
mtUserActivityWithActivityType:title:
mtUserActivityWithActivityType:title:keywords:
initWithActivityType:
setEligibleForHandoff:
setEligibleForSearch:
setEligibleForPublicIndexing:
setKeywords:
mtTimeOnlyFormatter
isCachedLanguageStaleForProperties:systemLanguage:
initWithTimeZone:countryCode:name:countryName:unlocalizedName:unlocalizedCountryName:
initWithFormat:
initWithObjects:
citiesWithIdentifiers:
initWithInt:
countryName
unlocalizedName
unlocalizedCountryName
localeCode
appendFormat:
unlocalizedExampleCity
initWithALCityIdentifier:
alCityId
unlocalizedCityName
countryCode
alCity
_alCity
_timeZone
_name
_countryName
_countryCode
_unlocalizedName
_unlocalizedCountryName
fireDate
clockAppSectionURL
setFireDate:
setIdentifier:
_fireDate
_identifier
setNextAlarms:
setAlarmManager:
calculateNextAlarms
_handleAlarmsDidChange
alarmManager
alarmsSyncIncludingSleepAlarm:
updateHandler
nextAlarms
setUpdateHandler:
_nextAlarms
_updateHandler
_alarmManager
_bundleIDForPlatform
initWithBundleIdentifier:
notificationCategories
setNotificationCategories:
localizedUserNotificationStringForKey:arguments:cfBundle:defaultValue:
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
setListPriority:
setWantsNotificationResponsesDelivered
dismissRelatedNotificationsForScheduledAlarm:
requestIdentifierForScheduledAlarm:
contentForScheduledAlarm:
requestWithIdentifier:content:trigger:destinations:
isForGoToBed
addNotificationRequest:withCompletionHandler:
_earlyWakeUpIdentifier:
_goToBedIdentifier:
_allIdentifiersForAlarm:
removeDeliveredNotificationsWithIdentifiers:
interruptAudioAndLockDeviceWithCompletionBlock:
contentForScheduledTimer:
currentCallCount
incomingCall
_setSpecificContent:forGoToBedNotification:
_setSpecificContent:forEarlyWakeUpNotification:
_setSpecificContent:forSnoozeCountdownNotification:
_setSpecificContent:forScheduledAlarm:
setShouldUseRequestIdentifierForDismissalSync:
categoryForScheduledAlarm:
setCategoryIdentifier:
launchURLForScheme:
setDefaultActionURL:
userInfoForAlarm:
_setGoToBedTitleAndBody:forGoToBedNotification:
dateWithTimeIntervalSinceNow:
setExpirationDate:
_setEarlyWakeUpTitleAndBody:forEarlyWakeUpNotification:
_setSnoozeCountdownTitleAndBody:forSnoozeCountdownNotification:
setShouldSuppressScreenLightUp:
setShouldPreventNotificationDismissalAfterDefaultAction:
setShouldIgnoreDoNotDisturb:
setBody:
setShouldBackgroundDefaultAction:
setUnitsStyle:
setAllowedUnits:
_durationComponentsFormatter
stringFromTimeInterval:
_bedtimeFormatter
categoryForScheduledTimer:
userInfoForTimer:
isScheduled
setDefaultDuration:
defaultSound
setTimer:
_timer
resetSystemTimeZone
queue
setQueue:
setUserActivity:
setCode:
_code
confirmationRequiredWithTimeIntervalToConfirm:
setAlarmObject:
setAlarmDeleteObject:
setAlarmStateObject:
setAlarmActionObject:
hasAlarmObject
hasAlarmDeleteObject
hasAlarmStateObject
hasAlarmActionObject
alarmObject
alarmDeleteObject
alarmStateObject
alarmActionObject
_alarmActionObject
_alarmDeleteObject
_alarmObject
_alarmStateObject
postNotificationForUserPreferences:localNotifications:
postNotificationForAlarmsEdited
postNotificationForAlarmActiveChanged
addAlarms:
alarmsCount
clearAlarms
alarmsAtIndex:
alarmsType
hasSleepAlarm
cancelTimer
startTimer:block:
delay
completableBlock
_scheduleTask:withCompletion:
tasks
completionBlock
setDelay:
setCompletableBlock:
_delay
_completableBlock
setTasks:
setCompletionBlock:
_tasks
_completionBlock
initWithType:name:powerAssertionTimeout:
initWithName:assertionTimeout:
takeAssertion
setName:
powerAssertion
setPowerAssertion:
_powerAssertion
initWithName:
assertionTimeout
_assertionTimeout
getCachedTimersWithCompletion:
setNextTimer:
_nextTimer
remainingTime
isEqualToTime:
initWithTimeInterval:
_remainingTime
initWithDate:currentDateProvider:
initWithDate:
setDate:
_date
initWithMetrics:
reconnect
_initWithConnectionProvidingBlock:metrics:
_initWithConnectionProvidingBlock:metrics:notificationCenter:
callStackSymbols
initWithTimerManager:
connectionProvider
cache
checkIn
finishWithResult:error:
_getCachedTimersWithFuture:finishBlock:
finishWithNoResult
enumerateObjectsUsingBlock:
errorOnlyCompletionHandlerAdapter
addTimer:withCompletion:
updateTimer:withCompletion:
removeTimer:withCompletion:
dismissTimerWithIdentifier:withCompletion:
repeatTimerWithIdentifier:withCompletion:
timerByUpdatingWithState:
_updateCurrentTimerWithState:
startCurrentTimerWithDuration:
_updateCurrentTimerWithStateSync:
_supportsForceTouch
reschedule:
setLocalizedTitle:
initWithTemplateImageName:
setIcon:
updateDynamicApplicationShortcutItems:forBundleIdentifier:
dynamicApplicationShortcutItems
fetchApplicationShortcutItemsOfTypes:forBundleIdentifier:withCompletionHandler:
warmUp
updateTimerShortcutItem
initWithConnectionProvider:metrics:
initWithConnectionProvider:metrics:notificationCenter:
timersSync
nextTimersForDate:maxCount:
dismissTimerWithIdentifier:
repeatTimerWithIdentifier:
stopCurrentTimer
pauseCurrentTimer
resumeCurrentTimer
getCurrentTimerSync
startCurrentTimerWithDurationSync:
stopCurrentTimerSync
pauseCurrentTimerSync
resumeCurrentTimerSync
setCache:
_connectionProvider
_cache
_didReceiveTimerServerReadyNotification:
timerManager
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
timersAdded:
timersUpdated:
timersRemoved:
timerFired:
timerDismissed:
nextTimerChanged:
resetMultiple
_responseToResetTimerIntent:withResetTimers:error:dryRun:
_handleResetTimer:dryRun:completion:
setResetTimers:
handleResetTimer:completion:
confirmResetTimer:completion:
resolveTargetTimerForResetTimer:withCompletion:
resolveResetMultipleForResetTimer:withCompletion:
setToneID:
setVibeID:
hasTitle
hasToneID
setMediaID:
setHasMediaID:
hasMediaID
hasVibeID
setHasSoundVolume:
hasSoundVolume
setSnoozeFire:
setHasSnoozeFire:
hasSnoozeFire
setHasBedtimeForSleepTracking:
hasBedtimeForSleepTracking
setBedtimeSnoozeFire:
setHasBedtimeSnoozeFire:
hasBedtimeSnoozeFire
setFired:
setHasFired:
hasFired
setDismissed:
setHasDismissed:
hasDismissed
setSoundType:
toneID
mediaID
vibeID
setRevision:
snoozeFire
bedtimeSnoozeFire
setIsEnabled:
fired
dismissed
_bedtimeSnoozeFire
_dismissed
_fired
_mediaID
_snoozeFire
_toneID
_vibeID
_isEnabled
_has
initWithEvent:
eventName
setEventName:
_eventName
initWithAlarmManager:
_getCachedAlarmsWithFuture:finishBlock:
nextAlarmsForDate:maxCount:includeSleepAlarm:
nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:
_filteredAlarms:afterDate:maxCount:filter:
nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:
sortedArrayUsingComparator:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
alarmsSync
objectAtIndexedSubscript:
alarmCountIncludingSleepAlarm:
addAlarm:withCompletion:
assistantSyncNotificationName
cStringUsingEncoding:
updateAlarm:withCompletion:
removeAlarm:withCompletion:
snoozeAlarmWithIdentifier:snoozeAction:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:
dismissAlarmWithIdentifier:dismissAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:
daySettingToString:longVersion:everyWeekdayVersion:showNever:
firingAlarmCount
nextAlarmsForDate:maxCount:
nextAlarmsForDate:maxCount:includeBedtimeNotification:
nextAlarmsInRange:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:
nextAlarmsForDateSync:maxCount:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:
sleepAlarmSync
nextAlarmSync
alarmWithIDString:
indexForAlarm:
alarmAtIndex:
alarmCount
removeAlarm:
snoozeAlarmWithIdentifier:
dismissAlarmWithIdentifier:
_didReceiveAlarmServerReadyNotification:
mtNotifiyingQueue
alarmsAdded:
alarmsUpdated:
alarmsRemoved:
alarmSnoozed:
alarmDismissed:
alarmFired:
nextAlarmChanged:
indexesOfObjectsPassingTest:
objectsAtIndexes:
arrayWithCapacity:
immediateScheduler
combineAllFutures:scheduler:
initWithLabel:duration:remainingTime:identifier:state:
_alternateTimersForTargetTimerState:inTimers:allowedTimerStates:
setMatchedTimers:
setUnmatchedTimers:
handleSearchForTimers:completion:
confirmSearchForTimers:completion:
resolveLabelForSearchForTimers:withCompletion:
resolveDurationForSearchForTimers:withCompletion:
resolveStateForSearchForTimers:withCompletion:
setGroupIdentifier:
prepareAlarms
alarmsByID
_alarmsByID
_bundleIDForUNSchedule
_loadUserPreferences
_loadScheduledNotifications
_upgradeFromSpringboardDefaults
_loadAlarms
_reconcileAlarmsAndNotifications
_loadTimerDefaults
getPendingNotificationRequestsWithCompletionHandler:
_upgradeIfNeverAttempted
_discardOldVersion
_upgrade
_upgradeAlarms
_upgradeTimers
_copyLegacyAlarmsFromPreferences
sortUsingSelector:
_discardOldAlarms
_discardOldTimers
_copyLegacySleepAlarmFromPreferences
_purgeAlarmsAndTimers
_cancelNotifications
removeAllPendingNotificationRequests
repeatScheduleFromOldAlarm:
soundFromOldAlarm:
_numberFromString:
numberFromString:
setDefaultSound:
scheduledNotifications
setScheduledNotifications:
loaded
setLoaded:
purged
setPurged:
_loaded
_purged
_defaultDuration
_defaultSound
_scheduledNotifications
initWithConnectionInfo:errorHandler:
initWithMachServiceName:
valueForEntitlement:
_didInvalidateConnection:
addClientConnection:clientLink:
removeClientConnection:
processInfo
processIdentifier
clientInfoForConnection:clientLink:
clients
_connectedClients
allObjects
currentConnection
_currentClientForConnection:
clientLink
performBlockOnAllClients:excludingCurrent:
performBlockOnClientInfos:excludeCurrent:
_performBlockOnClientInfos:excludingClient:
suspend
listener:shouldAcceptNewConnection:
startListening
connectedClients
currentClient
performBlockOnCurrentClient:
performBlockOnAllClients:
performBlockOnAllClients:excludingClient:
stopListening
setClients:
connectionListener
setConnectionListener:
_clients
_connectionListener
_setupAlarms
_setupTimers
_setupSync
_setupInitialListeners
sharedDeviceListener
_setupSecondaryListeners
rescheduleTimers
saveTimeInBed
_setupSyncMonitor
handleSystemReady
systemStateListener
alarmServer
alarmScheduler
timerServer
timerScheduler
launchDate
_diagnosticProviders
addEntriesFromDictionary:
agent
setLaunchDate:
notificationManager
setNotificationManager:
setSystemStateListener:
languageChangeListener
setLanguageChangeListener:
pairedDeviceListener
setPairedDeviceListener:
syncCommandListener
setSyncCommandListener:
diagnostics
setDiagnostics:
timeListener
setTimeListener:
setAlarmServer:
setAlarmScheduler:
alarmSnapshot
setAlarmSnapshot:
bedtimeSnapshot
setBedtimeSnapshot:
alarmIntentDonor
setAlarmIntentDonor:
sleepMetrics
setSleepMetrics:
bedtimeDNDMonitor
setBedtimeDNDMonitor:
setTimerServer:
setTimerScheduler:
timerSnapshot
setTimerSnapshot:
timerIntentDonor
setTimerIntentDonor:
notificationResponseDelegate
setNotificationResponseDelegate:
_launchDate
_notificationManager
_systemStateListener
_languageChangeListener
_pairedDeviceListener
_syncCommandListener
_diagnostics
_timeListener
_alarmServer
_alarmScheduler
_alarmSnapshot
_bedtimeSnapshot
_alarmIntentDonor
_sleepMetrics
_bedtimeDNDMonitor
_timerServer
_timerScheduler
_timerSnapshot
_timerIntentDonor
_notificationResponseDelegate
_registerForNotifications
mainQueue
dataSource:didAddAlarms:
_iterateObserversWithBlock:
_handleAlarmNotification:block:
addObserverForName:object:queue:usingBlock:
dataSource:didRemoveAlarms:
dataSource:didUpdateAlarms:
_stateReset
reloadAlarms
dataSourceDidReload:
rowForAlarmWithID:
rowForAlarm:
setObject:atIndexedSubscript:
numberOfAlarms
alarmAtRow:
registerSleepDataObserver:
sleepDataObservers
healthObserver
categoryTypeForIdentifier:
sleepDataDidChange
initWithSampleType:predicate:updateHandler:
setHealthObserver:
healthStore
executeQuery:
unregisterSleepDataObserver:
stopQuery:
logUserWentToBed:
logUserWokeUp:
_queue_unprocessedInBedIntervals
_queue_setUnprocessedInBedIntervals:
_mt_propertyList
_mt_dateIntervalFromPropertyList:
_queue_hasUnprocessedIntervals
hasBeenUnlockedSinceBoot
_saveTimeInBedSampleToHealthStore
deviceFirstUnlocked
authorizationStatusForType:
localDevice
categorySampleWithType:value:startDate:endDate:device:metadata:
sleepDataForPastWeek
sleepDateIntervalForThePastWeekWithCalendar:
sleepDataForRange:
setDay:
sleepDataForRange:intervalComponents:
sleepQueryWithStartDate:endDate:intervalComponents:calendar:healthStore:completion:
requestAuthorizationToShareTypes:readTypes:completion:
inBedSampleWithInterval:metadata:
setSleepDataObservers:
_healthStore
_healthObserver
_sleepDataObservers
operations
shouldEnqueue:
enqueue:
peek
dequeue
removeAllOperations
setOperations:
_operations
operationWithAction:actionDate:identifier:trigger:
initWithAction:actionDate:identifier:trigger:
initWithUUID:fromSync:action:actionDate:identifier:trigger:
_stringForAction:
operationWithAction:identifier:trigger:
_queue_nextTimer
_queue_nextScheduledTimer
rescheduleTimersWithCompletion:
_queue_rescheduleTimersWithCompletion:
_queue_scheduleTimers:withCompletion:
_queue_unscheduleTimers:
_queue_lastTimerTriggerDate
_queue_setLastTimerTriggerDate:
scheduledTimers
_queue_updatePersistentTimerForNextTimerWithCompletion:
_queue_fireTriggeredTimersWithCompletionBlock:
_intervalToCheckForTimersToFireBeforeDate:
_fireScheduledTimer:firedDate:completionBlock:
_queue_triggerDidFireForTimerWithCompletionBlock:
scheduleTimers:
unscheduleTimers:
_scheduledTimers
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
secondsFromGMTForDate:
stringFromDate:withRelativeToTimeZone:
workScheduler
_latestKeyBagValueForHasBeenUnlockedSinceBoot
setInternalHasBeenUnlockedSinceBoot:
_hasBeenUnlockedSinceBoot
internalHasBeenUnlockedSinceBoot
setWorkScheduler:
_internalHasBeenUnlockedSinceBoot
_workScheduler
_timerTimeForState:remainingTime:currentDateProvider:
isCurrentTimer
fireTime
setFireTime:
_setDuration:
isEqualToTimer:
_isEqualToTimer:checkLastModified:
_copyStateOntoTimer:
dateWithTimeInterval:sinceDate:
timerURL
_timerID
_state
_duration
_fireTime
handleFailureInFunction:file:lineNumber:description:
initWithStorage:connectionListenerProvider:
_isSystemReady
_systemNotReadyError
connectionListenerProvider
_notifyClientsForTriggerType:
isSystemReady
_systemReady
_connectionListenerProvider
timerManagerProvider
arrayByAddingObjectsFromArray:
disambiguationWithTimersToDisambiguate:
confirmationRequiredWithTimerToConfirm:
firstIndex
setTimerManagerProvider:
_timerManagerProvider
initWithDate:type:
isEqualToTrigger:
isEvent
isForSnooze
caseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
initWithConnection:clientLink:
processName
processID
connectedDate
setClientLink:
setConnectedDate:
_clientLink
_connectedDate
MTPauseResumeTimerIntentHandler
INPauseTimerIntentHandling
NSObject
INResumeTimerIntentHandling
Alarm
MTXPCConnectionInfo
MTEnableDisableAlarmIntentHandler
MTEnableAlarmIntentHandling
MTDisableAlarmIntentHandling
MTLanguageChangeListener
MTAgentNotificationListener
MTScheduledList
MTInMemoryDefaults
MTPersistence
MTTimerStorage
MTTimerSchedulerDelegate
MTAgentDiagnosticDelegate
MTPBAlarmAction
NSCopying
MTAgentNotificationManager
MTDictionarySerializable
NSCoding
MTStorageWriter
MTCoder
MTStorageReader
MTStorageReaderV1
MTAlarmSnapshot
MTAlarmObserver
MTBedtimeSnapshot
MTPairedDeviceListener
MTSyncStatusProvider
MTUserNotificationAppDelegate
UNUserNotificationCenterDelegate
MTXPCConnectionProvider
ClockManager
IntentsSupport
MTTimerManagerIntentSupport
MTBedtimeDNDMonitor
DNDModeAssertionUpdateListener
MTSleepObserver
MTTimeObserver
MTDateFormatting
MTSyncStateOperation
MTSyncOperation
NSSecureCoding
NAEquatable
NAHashable
MTPBAlarmDelete
MTCreateAlarmIntentHandler
MTCreateAlarmIntentHandling
MTUserNotificationActionDispatcher
MTNotificationResponseDelegate
UserNotification
MTUpdateAlarmIntentHandler
MTUpdateAlarmIntentHandling
MTAlarmStorage
MTAlarmScheduleDelegate
MTSpringboardStartMonitor
MTCreateTimerIntentHandler
INCreateTimerIntentHandling
MTSound_Notifications
MTAlarmScheduler
MTScheduledListDelegate
MTScheduledObject
MTScheduling
MTScheduleable
MTAlarmIntent
MTAgentDiagnosticListener
MTTimerIntentDonor
MTTimerObserver
MTAlarmCache
MTDistributedNotificationPoster
MTNotificationCenter
MTSyncCommandListener
MTSystemStateListener
MTSyncStorage
MTInMemorySyncStorage
MTSyncArchiver
MTSyncUnarchiver
WorldClockManager
MTSleepMonitor
MTSource
MTDeleteTimerIntentHandler
INDeleteTimerIntentHandling
MTSetTimerAttributeIntentHandler
INSetTimerAttributeIntentHandling
MTSyncMonitor
MTSound
WorldClockPreferences
MTAlarmIntentHandler
MTSnapshotScheduler
MTAlarmMigrator
MTAlarm
NSMutableCopying
MTDiffable
MTMutableAlarm
MTMetrics
MTObjectDifference
MTObjectDiff
NotificationRelay
MTTimerSnapshot
MTUserDefaults
MTUtilities
WorldClockCity
MTNextAlarm
MTNextAlarmManager
MTUserNotificationCenter
MTTimerMigrator
MTDiffSerializer
MTTimeListener
MTCreateAlarmIntent
MTCreateAlarmIntentResponse
MTUpdateAlarmIntent
MTUpdateAlarmIntentResponse
MTEnableAlarmIntent
MTEnableAlarmIntentResponse
MTDisableAlarmIntent
MTDisableAlarmIntentResponse
MTCreateSingleTimerIntentHandler
MTPBSyncMessage
DistributedNotificationPoster
MTPBAlarmState
MTGCDTimer
MTGCDTaskScheduler
MTTaskScheduler
MTTask
MTTaskGroup
MTAgentNotification
MTPowerAssertion
MTTimerCache
MTTimerTime
MTTimerTimeInterval
MTTimerDate
MTTimerManager
MTUserDefaultNotificationObserver
MTTimerManagerExportedObject
MTTimerClient
MTResetTimerIntentHandler
INResetTimerIntentHandling
MTPBAlarm
MTXPCScheduler
MTSchedulingDelegate
MTAlarmManager
MTAlarmManagerExportedObject
MTAlarmClient
MTNotifiying
MTUpdateTimerIntentHandler
MTSearchTimerIntentHandler
INSearchForTimersIntentHandling
MTAlarmIntentDonor
MTLegacyManager
MTXPCConnectionListenerProvider
NSXPCListenerDelegate
MTAgent
MTSystemStateDelegate
MTAlarmDataSource
MTSleepMetrics
MTSyncOperationQueue
MTSyncActionOperation
MTTimerManagerProviding
MTTimerScheduler
MTAlarmServer
MTTimerServer
MTAdditions
MTDeviceListener
MTTimer
MTMutableTimer
MTTimerIntentHandler
MTTrigger
MTTimerIntentSupport
MTXPCClientInfo
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INPauseTimerIntentResponse">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INResumeTimerIntentResponse">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v36@0:8@16B24@?28
@44@0:8@16@24@32B40
B32@0:8@16@24
@?16@0:8
@24@0:8@16
v24@0:8@16
v16@0:8
@24@0:8q16
q24@0:8@16
v20@0:8I16
v20@0:8B16
q16@0:8
v24@0:8q16
v32@0:8@16q24
I16@0:8
@"NSDate"
@"Alarm"
@"NSMutableDictionary"
@"NSArray"
@"NSString"
@"<AlarmDelegate>"
@"NSURL"
@40@0:8@16@24Q32
@72@0:8@16@24@32@40@48@56Q64
v24@0:8Q16
@"NSXPCInterface"
v32@0:8@"MTEnableAlarmIntent"16@?<v@?@"MTEnableAlarmIntentResponse">24
v32@0:8@"MTDisableAlarmIntent"16@?<v@?@"MTDisableAlarmIntentResponse">24
B28@0:8B16@20
B24@0:8@"MTAgentNotification"16
v24@0:8@"MTAgentNotification"16
@"NSArray"16@0:8
@24@0:8Q16
v40@0:8@16@24@?32
v32@0:8@?16@?24
@"<MTScheduledListDelegate>"
@"NSMutableOrderedSet"
f24@0:8@16
v32@0:8@16@24
v28@0:8f16@20
@24@0:8@"NSString"16
f24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v28@0:8f16@"NSString"20
v32@0:8@"MTTimerScheduler"16@"MTTimer"24
v32@0:8@"MTTimerScheduler"16@"MTScheduledObject"24
@"NSDictionary"16@0:8
v24@0:8@?16
v40@0:8@16@?24@32
v24@0:8@"<MTTimerObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTTimer"@"NSError">16
v40@0:8@"MTTimer"16@?<v@?@"NSError">24@"<MTSource>"32
v40@0:8@"NSString"16@?<v@?@"NSError">24@"<MTSource>"32
v32@0:8@"NSArray"16@"<MTSource>"24
@"MTTimer"16@0:8
@"NSDate"16@0:8
@48@0:8@16@24@32@?40
v40@0:8@16@24B32B36
@40@0:8@16@?24@32
@32@0:8@16@24
@"MTTimerScheduler"
@"NSMutableArray"
@"MTTimerMigrator"
@"<NAScheduler>"
@"NSPointerArray"
@"<MTPersistence>"
@24@0:8^{_NSZone=}16
d16@0:8
v24@0:8d16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v28@0:8B16@20
v32@0:8q16@24
v28@0:8i16@20
v32@0:8d16@24
i24@0:8@16
d24@0:8@16
v40@0:8@16@24Q32
v32@0:8@"<MTSource>"16@"NSArray"24
v40@0:8@"<MTSource>"16@"MTAlarm"24Q32
v32@0:8@"<MTSource>"16@"MTAlarm"24
@"MTAlarmStorage"
@32@0:8q16@24
@"<MTSyncService>"
@"NRDevice"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@32@0:8@16@?24
@40@0:8@16@?24@?32
@24@0:8@?16
@"MTXPCConnectionInfo"
@"NSXPCConnection"
v24@0:8B16B20
@"NAFuture"16@0:8
@"NAFuture"24@0:8@"NSObject<MTTimerIntentSupport>"16
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
v40@0:8@16@24@32
v40@0:8@"MTSleepMonitor"16@"NSDate"24@"MTAlarm"32
v32@0:8@"MTSleepMonitor"16@"MTAlarm"24
v32@0:8@"MTTimeListener"16@?<v@?>24
@40@0:8@16@24@?32
v32@0:8@16d24
@"<MTAlarmStorage>"
@"MTSleepMonitor"
@"DNDModeAssertionService"
@32@0:8@16o^@24
@40@0:8@16@24o^@32
@"NSDateFormatter"
@32@0:8q16q24
@36@0:8q16q24B32
B24@0:8@"<MTSyncOperation>"16
@"<MTSyncOperation>"24@0:8@"NSDictionary"16
@44@0:8@16B24q28q36
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"MTCreateAlarmIntentResponse">24
Q28@0:8@16B24
Q24@0:8@16
@"MTAlarmStorage"16@0:8
@"MTTimerStorage"16@0:8
@"MTTimerStorage"
@"MTMetrics"
v32@0:8@"MTUpdateAlarmIntent"16@?<v@?@"MTUpdateAlarmIntentResponse">24
@48@0:8@16@24@32@40
v32@0:8@"MTAlarmScheduler"16@"MTScheduledObject"24
v48@0:8@16Q24@?32@40
v56@0:8@16@24Q32@?40@48
v24@0:8@"<MTAlarmObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTAlarm"@"MTAlarm"@"NSError">16
v40@0:8@"MTAlarm"16@?<v@?@"NSError">24@"<MTSource>"32
v24@0:8@"<MTSource>"16
v40@0:8@"NSArray"16@"MTAlarm"24@"<MTSource>"32
v48@0:8@"NSString"16Q24@?<v@?@"NSError">32@"<MTSource>"40
v56@0:8@"NSString"16@"NSDate"24Q32@?<v@?@"NSError">40@"<MTSource>"48
@"MTAlarm"16@0:8
v48@0:8@16@24@32B40B44
v40@0:8@16Q24@32
@"MTAlarmScheduler"
@"MTAlarm"
@"NSHashTable"
@"MTAlarmMigrator"
@"NSObject<OS_dispatch_queue>"
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerIntentResponse">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerLabelResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
@28@0:8B16B20B24
v32@0:8@"MTScheduledList"16@?<v@?>24
@40@0:8@16@24@32
@64@0:8@16@24@32@40@48@?56
@20@0:8B16
@"<MTAlarmScheduleDelegate>"
@"MTScheduledList"
@"<MTNotificationCenter>"
@"<MTSchedulingDelegate>"
@"<MTTaskScheduler>"
Q24@0:8Q16
@"<MTScheduleable>"
@"MTTrigger"
@"NSArray"24@0:8@"NSDate"16
@"<MTAgentDiagnosticDelegate>"
v32@0:8@"<MTSource>"16@"MTTimer"24
v24@0:8@"MTTimer"16
@"NSMutableSet"
@32@0:8@?16@24
v32@0:8@16Q24
v32@0:8@"MTScheduledObject"16@?<v@?>24
v24@0:8@"MTAlarm"16
v32@0:8@"MTAlarm"16Q24
v24@0:8@"NSArray"16
v24@0:8@"<MTNotificationResponseDelegate>"16
@"<MTSystemStateDelegate>"
v24@0:8@?<v@?@"NSArray">16
@"<SYChangeSerializer>"
v32@0:8Q16Q24
@"WorldClockPreferences"
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INDeleteTimerIntentResponse">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v40@0:8@16B24B28@?32
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeIntentResponse">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeTargetTimerResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v44@0:8@16d24B32@?36
@"NSNumber"
@32@0:8Q16Q24
@48@0:8q16q24q32q40
B40@0:8@16q24@32
@40@0:8Q16Q24@?32
@28@0:8@16B24
@32@0:8@16B24B28
@32@0:8@16Q24
@36@0:8@16B24B28B32
@48@0:8@16@24B32B36@40
B28@0:8@16B24
@"NSUUID"
@"MTSound"
@"NSSet"16@0:8
@"<MTDiffable>"
v36@0:8f16@20@28
f32@0:8@16^B24
v36@0:8B16@20@28
B32@0:8@16^B24
v40@0:8q16@24@32
q32@0:8@16^B24
q32@0:8@16q24
q40@0:8@16@?24q32
v40@0:8d16@24@32
d32@0:8@16^B24
d32@0:8@16d24
d40@0:8@16@?24d32
@"NSUserDefaults"
@36@0:8@16@24B32
@40@0:8@16Q24q32
@44@0:8@16Q24q32B40
Q20@0:8B16
d32@0:8@16@24
i16@0:8
@20@0:8i16
@28@0:8i16@20
@64@0:8@16@24@32@40@48@56
@"ALCity"
@"NSSet"
@"MTAlarmManager"
@"MTTimer"
@"MTPBAlarmAction"
@"MTPBAlarmDelete"
@"MTPBAlarm"
@"MTPBAlarmState"
v32@0:8d16@?24
@"NSObject<OS_dispatch_source>"
v24@0:8@"MTTask"16
v24@0:8@"MTTaskGroup"16
@40@0:8@16d24@?32
@"MTGCDTimer"
@40@0:8q16@24d32
@"MTPowerAssertion"
@32@0:8@16d24
B24@0:8@"<MTTimerTime>"16
q24@0:8@"<MTTimerTime>"16
@24@0:8d16
@"NSNotificationCenter"16@0:8
@40@0:8@?16@24@32
B24@0:8d16
B24@0:8Q16
^{MTXPCConnectionProvider=#}16@0:8
@"MTTimerManagerExportedObject"
^{MTXPCConnectionProvider=#}
@"MTTimerCache"
@"NSNotificationCenter"
@"MTTimerManager"
v32@0:8@"INResetTimerIntent"16@?<v@?@"INResetTimerIntentResponse">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v20@0:8f16
f16@0:8
{?="bedtimeForSleepTracking"b1"bedtimeSnoozeFire"b1"dismissed"b1"fired"b1"mediaID"b1"snoozeFire"b1"soundVolume"b1}
@48@0:8@16@24Q32@?40
@36@0:8Q16B24B28B32
@36@0:8@16Q24B32
@40@0:8@16Q24B32B36
@"MTAlarmManagerExportedObject"
@"MTAlarmCache"
v44@0:8@16B24@?28@?36
v60@0:8@16B24B28B32@?36@?44@?52
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSearchForTimersIntentResponse">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerStateResolutionResult">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v28@0:8@?16B24
v32@0:8@?16@24
@"NSXPCListener"
@"MTAgentNotificationManager"
@"MTSystemStateListener"
@"MTLanguageChangeListener"
@"MTPairedDeviceListener"
@"MTSyncCommandListener"
@"MTAgentDiagnosticListener"
@"MTTimeListener"
@"MTAlarmServer"
@"MTAlarmSnapshot"
@"MTBedtimeSnapshot"
@"MTAlarmIntentDonor"
@"MTSleepMetrics"
@"MTBedtimeDNDMonitor"
@"MTTimerServer"
@"MTTimerSnapshot"
@"MTTimerIntentDonor"
@"<MTNotificationResponseDelegate>"
@"HKHealthStore"
@"HKObserverQuery"
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@60@0:8@16B24q28@36@44@52
@"<MTTimerManagerIntentSupport>"16@0:8
@"<MTTimerSchedulerDelegate>"
@"<MTTimerStorage>"
v40@0:8@16Q24@?32
v32@0:8@"MTAlarm"16@?<v@?@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v32@0:8@"MTTimer"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
B32@0:8Q16Q24
@40@0:8Q16d24@?32
@32@0:8Q16d24
@"<MTTimerTime>"
@"MTXPCConnectionListenerProvider"
v44@0:8@16B24@28@?36
@"<MTTimerManagerProviding>"
@"NSUUID"16@0:8
@33
 @ff&@
