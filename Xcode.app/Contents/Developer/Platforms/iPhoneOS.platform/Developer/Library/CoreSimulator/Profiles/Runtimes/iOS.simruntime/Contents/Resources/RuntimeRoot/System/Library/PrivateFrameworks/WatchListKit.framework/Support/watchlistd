%@ %@
bundle_id
milliseconds_since_event
profile_id
channel
content
cause
expected_start_time_epoch_millis
cleanup_time_epoch_millis
contract_or_timed
hasBundleId
TB,R,N
bundleId
T@"NSString",&,N,V_bundleId
hasMillisecondsSinceEvent
TB,N
millisecondsSinceEvent
Tq,N,V_millisecondsSinceEvent
hasProfileId
profileId
T@"NSString",&,N,V_profileId
hasChannel
T@"UWLLiveActivityEventChannel",&,N,V_channel
hasContent
T@"UWLLiveActivityEventContent",&,N,V_content
hasCause
Ti,N,V_cause
hasExpectedStartTimeEpochMillis
expectedStartTimeEpochMillis
Tq,N,V_expectedStartTimeEpochMillis
hasCleanupTimeEpochMillis
cleanupTimeEpochMillis
Tq,N,V_cleanupTimeEpochMillis
hasContractOrTimed
contractOrTimed
Ti,N,V_contractOrTimed
Tune_In
Event_End
Event_Start
Tune_Out
(unknown: %i)
Not_Specified_Implied_Legacy_Contract
Contract
Timed
v16@?0@"NSError"8
Error communicating with client: %@
v8@?0
Delete requested for content ID: %@, bundle ID: %@
v20@?0B8@"NSError"12
Invalid delete requested for content ID: %@, bundle ID: %@. Ignoring.
Start auth
v24@?0@"SSAuthenticateResponse"8@"NSError"16
Auth response: %@ error: %@
Connection: ping!
v16@?0@"NSDictionary"8
v16@?0@"WLKServerConfigurationResponse"8
v12@?0B8
uvSearch
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
Connection invalidated for client: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
connection
T@"NSXPCConnection",R,N,V_connection
clientIdentifier
T@"NSString",R,C,N,V_clientIdentifier
delegate
T@"<WLDClientConnectionDelegate>",W,N,V_delegate
com.apple.watchlist.private
WLDServerInitException
-init is not supported. Use +server
WLDServer - end
WLDServer - Failed to get signing identifier
WLDServer - Got connection for client '%@'
ClientIdentifierOverride
com.apple.watchlistd
WLDServer - ClientIdentifierOverride: '%@'
WLDServer - Accepted connection for client '%@'
WLDServer - Failed to get client identifier '%@'
WLDServer - Dropping connection from unentitled client: %@
WLDServer - start
com.apple.watchlistd.xpc
WLDServer - start main
WLDServer - Updating app visibility for the current storefront...
WLDServer - handleSubscriptionRegistration
value
hasKey
T@"NSString",&,N,V_key
hasValue
T@"NSString",&,N,V_value
brand_id
hasBrandId
brandId
T@"NSString",&,N,V_brandId
com.apple.watchlistd.defaultworkqueue
retry_period_in_seconds
retryPeriodInSeconds
Ti,N,V_retryPeriodInSeconds
channel_canonical_id
channel_brand_id
channel_external_live_service_id
channel_internal_leg_id
hasChannelCanonicalId
channelCanonicalId
T@"NSString",&,N,V_channelCanonicalId
hasChannelBrandId
channelBrandId
T@"NSString",&,N,V_channelBrandId
hasChannelExternalLiveServiceId
channelExternalLiveServiceId
T@"NSString",&,N,V_channelExternalLiveServiceId
hasChannelInternalLegId
channelInternalLegId
T@"NSString",&,N,V_channelInternalLegId
version
headers
play_events
opt_in_events
opt_out_events
live_activity_events
Ti,N,V_version
T@"UWLMessageHeaders",&,N,V_headers
playEvents
T@"NSMutableArray",&,N,V_playEvents
optInEvents
T@"NSMutableArray",&,N,V_optInEvents
optOutEvents
T@"NSMutableArray",&,N,V_optOutEvents
liveActivityEvents
T@"NSMutableArray",&,N,V_liveActivityEvents
WLDPlaybackReporter: Error: Now playing not enabled in URL bag.
WLDPlaybackReporter: Error: DSID mismatch.
WLDPlaybackReporter: Error: bundleIdentifier is required.
WLDPlaybackReporter: Error: Failed to map bundleIdentifier %@ to channelID
WLDPlaybackReporter: Error: could not resolve lookupID for %@
WLDPlaybackReporter: Report playback activity: %p
v16@?0@"WLKPlayActivityMetadata"8
WLDPlaybackReporter: Returning cached metdata for %@.
WLDPlaybackReporter: Item with identifier %@ is known to be unavailable.
WLDPlaybackReporter: Activity lookup failed: %@
WLDPlaybackReporter: Activity lookup got a %ld. We will not retry.
WLDPlaybackReporter: Got metadata for %@.
v16@?0@"WLKNetworkRequestOperation"8
Cookie
WLDPlaybackReporter: Queueing activity report: %p
Skipping donation because user didn't initiate playback.
com.apple.tv
Error donating interaction: %@
WLDPlaybackReporter: TR: Cancelling existing timer
WLDPlaybackReporter: TR: Will not generate timed report because playback state is not playing
WLDPlaybackReporter: TR: Will schedule timed report in %@ millis
WLDPlaybackReporter: TR: Will enqueue: %@
v16@?0B8B12
WLDPlaybackReporter: TR: Successful playback report
WLDPlaybackReporter: TR: Failed playback report
WLDPlaybackReporter: TR: Will not generate report because current playback state does not satisfy conditions
v16@?0@"WLKPlaybackSummary"8
WLDPlaybackManager: dropping report. Exceeded rate limit %@ %@
WLDPlaybackManager - checking sbids for eligibility to prompt: %@
WLDPlaybackManager: Will not prompt, channel is not enabled for subscription change prompt : %@
WLDPlaybackManager: User has not given access for: %@
com.apple.watchlistd.PlaybackManagerQueue
WLDPlaybackManager: enqueue for dsid %@: %@
WLDPlaybackManager: Network is not reachable. Will attempt report when network is available
WLDPlaybackManager: Successful playback report
WLDPlaybackManager: Retrying playback report
WLDPlaybackManager: Discarding failed report
WLDPlaybackManager: An active iTunes account is required to report play activity events.
WLDPlaybackManager: Feature disabled for Managed Apple IDs.
WLDPlaybackManager: Feature disabled in EDU mode.
WLDPlaybackManager: User has private mode enabled
WLDPlaybackManager: Requesting settings sync
WLDPlaybackManager: Mandatory settings sync failed
WLDPlaybackManager: User has not opted into feature
WLDPlaybackManager: No channel associated with bundle ID: %@. Ignoring report
WLDPlaybackManager: Channel with ID %@ is not watchlist enabled. Ignoring report.
WLDPlaybackManager: Channel with ID %@ does not have playback tracking enabled. Ignoring report.
WLDPlaybackManager: %@ requires account field for consent. None found.
WLDPlaybackManager: %@ requires subscription info for consent. Subscription not found.
WLDPlaybackManager: should not prompt because we are already prompting
WLDPlaybackManager: No channel found for: %@
WLDPlaybackManager: User has denied access for: %@ %@
WLDPlaybackManager: User has allowed access for: %@ %@
WLDPlaybackManager: Will not prompt due to network being unavailable
WLDPlaybackManager: Will not prompt because application is not foregrounded
WLDPlaybackManager: promptForBundleID: %@
WLDPlaybackManager: Settings recall after prompting for bundle:%@ external:%@ %@
B24@?0@"NSURL"8@"NSError"16
WLDPlaybackManager: [Error] scanning for pending reports %@ (%@)
WLDPlaybackManager: _scanForPendingReports secure unarchiver error: %@
WLDPlaybackManager: Deleting invalid item: %@
WLDPlaybackManager: Found pending playback report. Enqueuing.
WLDPlaybackManager: Releasing pending reports transaction.
WLDPlaybackManager: _serialize: secure unarchiver error: %@
pending
%@-%@
lastSummary
T@"WLKPlaybackSummary",&,V_lastSummary
SIGTERM received, exiting.
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
Got notifyd launch notification: %@
com.apple.purplebuddy.setupdone
com.apple.videos.migrationCompleted
com.apple.tv.updateAppVisibility
com.apple.VideoSubscriberAccount.DidRegisterSubscription
com.apple.tv.appRemoved
com.apple.WLDAppVisibilitymanager
WLDAppVisibilityManager - reachability changed
WLDAppVisibilityManager - account changed
WLDAppVisibilityManager - TV app enabled *override*: %d
WLDAppVisibilityManager - Begin waiting for SSAccountsPromise
WLDAppVisibilityManager - Done waiting for SSAccountsPromise
WLDAppVisibilityManager - Error: SSAccountsPromise error. %@.
WLDAppVisibilityManager - active account storefront: %@
WLDAppVisibilityManager - device storefront: %@
WLDAppVisibilityManager - Error: no active account. Will retry on account change.
WLDAppVisibilityManager - Error: Nil storefront identifier.
WLDAppVisibilityManager - operation was cancelled during bag fetch.
WLDAppVisibilityManager - TV app will be enabled: %d
WLDAppVisibilityManager - Unable to update TV app visibility: %@. Will try again on reachability change.
WLDAppVisibilityManager - Unable to update TV app visibility, bag fetch timed out. Will try again on reachability change.
WLDAppVisibilityManager - cancelling queued op %@
RegionCode
WLDAppVisibilityManager - Enqueue appVisibilityOp for region: %@ %@
com.apple.watchList
push-notifications
environment
WLDPushNotificationController - Push environment: %@
WLDPushNotificationController - Push token: %@, DSID: %@, connection: %@
WLDPushNotificationController - Setting enabled topics: %@
WLDPushNotificationController - didReceivePublicToken: %@
WLDPushNotificationController - Received push notification: %@
WLDPushNotificationController - Received settings sync request
WLDPushNotificationController - Completed WLK settings sync with success:%@
WLDPushNotificationController - accountIdentifer missing or mismatched
payload
WLDPushNotificationController - Ignoring unknown topic: %@
WLDPushNotificationController - Setting notifications enabled: %d
WLDPushNotificationController - No metrics to report.
WLDPushNotificationController - Error loading global metrics configuration: %@
WLDPushNotificationController - Will send events: %@
WLDPushNotificationController - Error inserting events: %@
WLDPushNotificationController - Error flushing events: %@
WLDPushNotificationController - Events flushed.
cbids
dbids
ibids
sbids
isPreviouslyConsented
utsc
xp_amp_notifications
entityId
coalescingId
localizedTitle
title
InternalBuild
WLDPushNotificationController - Canonical ID: %@ Coalescing ID: %@
localizedText
text
threadId
displayEndTime
metrics
actions
isTvAppAction
WLDPushNotificationController - Not inspecting action for brand %@ bundleID: %@ because it isn't installed.
WLDPushNotificationController - App library: %@
clientActionDeepLinks
settingType
Explicit
Implicit
Marketing
hasScore
WLDPushNotificationController - Payload lacks an identifier.
WLDPushNotificationController - Payload lacks a title.
WLDPushNotificationController - Payload lacks a message.
WLDPushNotificationController - Payload lacks an action.
WLDPushNotificationController - Payload has a score.
WLDPushNotificationController - Payload lacks a known category type.
WLDPushNotificationController - Buddy/OOB has not completed. Will drop notification
WLDPushNotificationController - Discarding notification for current game %@
WLDPushNotificationController - Will enqueue notification
v16@?0@"NSString"8
WLDPushNotificationController - Discarding notification with inappropriate payload.
WLDPushNotificationController - Configuration: %@ %@
WLDPushNotificationController - Push defaulting to prod -- config/bag load error
APSEnvironment
com.apple.WatchListKit
v24@?0@8@"NSError"16
com.apple.watchlistd.aps
com.apple.watchlistd.aps.dev
com.apple.watchlistd.aps.demo
BYSetupAssistantNeedsToRun
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
content_canonical_id
content_brand_id
content_external_playable_id
content_media_length_in_milliseconds
content_is_done
content_internal_leg_id
hasContentCanonicalId
contentCanonicalId
T@"NSString",&,N,V_contentCanonicalId
hasContentBrandId
contentBrandId
T@"NSString",&,N,V_contentBrandId
hasContentExternalPlayableId
contentExternalPlayableId
T@"NSString",&,N,V_contentExternalPlayableId
hasContentMediaLengthInMilliseconds
contentMediaLengthInMilliseconds
Tq,N,V_contentMediaLengthInMilliseconds
hasContentIsDone
contentIsDone
TB,N,V_contentIsDone
hasContentInternalLegId
contentInternalLegId
T@"NSString",&,N,V_contentInternalLegId
WLDRateLimiter
-init not supported. Use -initWithRate:burst: instead
WLDRateLimiterAccess
rate
burst
user_agent
x_dsid
x_apple_storefront
x_guid
correlation_key
x_userid_keyspace
x_userid_key
cookies
userAgent
T@"NSString",&,N,V_userAgent
xDsid
T@"NSString",&,N,V_xDsid
xAppleStorefront
T@"NSString",&,N,V_xAppleStorefront
hasXGuid
xGuid
T@"NSString",&,N,V_xGuid
hasCorrelationKey
correlationKey
T@"NSString",&,N,V_correlationKey
hasXUseridKeyspace
xUseridKeyspace
T@"NSString",&,N,V_xUseridKeyspace
hasXUseridKey
xUseridKey
T@"NSString",&,N,V_xUseridKey
T@"NSMutableArray",&,N,V_cookies
[WLDXPCTransactionScope] %p: Started transaction
[WLDXPCTransactionScope] %p: Ended transaction
WLDMediaPlaybackObserverErrorDomain
WLDPlaybackObserverQueueNotif
WLDPlaybackObserverQueueLookup
WLDPlaybackObserver: Start Playback observation
WLDPlaybackObserver: Stop Playback observation
WLDPlaybackObserver: Generating stopped playback event
WLDPlaybackObserver: -SigEval- ignoring duplicate NPI
v16@?0^{__CFString=}8
v12@?0C8
v24@?0^{__CFDictionary=}8^v16
WLDPlaybackObserver: NPI fetch timed out!
WLDPlaybackObserver: Now playing app did change to '%@' (playing: %d) from '%@'
WLDPlaybackObserver: Ending transaction due to no active now playing app.
WLDPlaybackObserver: Starting transaction due to active now playing app.
significant change
nominal elapsed time update
update while paused/stopped
WLDPlaybackObserver: -SigEval- [%d] update %@ -> %@ reason: %@
updateHandler
T@?,C,N,V_updateHandler
WLAccessServiceViewController
com.apple.WLAccessService
WLDRemoteAlertPresenter: already presenting
WLDRemoteAlertPresenter: promptForBundleID: %@
WLDRemoteAlertPresenter deactivated
DeviceClass
iPad
WLDLivePlaybackReporter: Received nil summary while tuned in, generating tune-out
WLDLivePlaybackReporter: Received nil summary while idle, ignoring
WLDLivePlaybackReporter: Error: Failed to map bundleIdentifier %@ to channelID
v16@?0@"WLKSchedule"8
WLDLivePlaybackReporter: decorate failed -- unsupported playback type
WLDLivePlaybackReporter: [StateMachine][Idle] No action for input: %lu %@
WLDLivePlaybackReporter: [StateMachine][TunedIn] No action for input: %lu %@
WLDLivePlaybackReporter: will report tune %@
WLDLivePlaybackReporter: will report event
WLDLivePlaybackReporter: Live activity report success: %d
WLDLivePlaybackReporter: decorate failed
WLDLivePlaybackReporter: Live activity content boundary report success: %d numEvents: %lu
WLDLivePlaybackReporter: No events found at content boundary
WLDLivePlaybackReporter: success: %d response:%@
WLDLivePlaybackReporter: Queueing activity report for events: %p
Unknown
TuneIn
TuneOut
ContentBoundary
ScheduleBoundary
WLDLivePlaybackReporter: Cancelling existing timer
_current event ends
_next event begins
_no event found
WLDLivePlaybackReporter: Set up timer for %@ context: %@
WLDLivePlaybackReporter: Requested fire date exceeds max, clamping: %@
WLDLivePlaybackReporter: Done processing timer input: %lu. success %d
state
transaction
T@"WLDXPCTransactionScope",&,V_transaction
TQ,Vstate
external_playable_id
play_head_in_milliseconds
is_done
external_show_id
media_length_in_milliseconds
media_type
is_current
is_show_open
canonical_id
canonical_show_id
internal_leg_id
externalPlayableId
T@"NSString",&,N,V_externalPlayableId
playHeadInMilliseconds
Tq,N,V_playHeadInMilliseconds
hasIsDone
isDone
TB,N,V_isDone
hasExternalShowId
externalShowId
T@"NSString",&,N,V_externalShowId
hasMediaLengthInMilliseconds
mediaLengthInMilliseconds
Tq,N,V_mediaLengthInMilliseconds
hasMediaType
mediaType
Ti,N,V_mediaType
hasIsCurrent
isCurrent
TB,N,V_isCurrent
hasIsShowOpen
isShowOpen
TB,N,V_isShowOpen
hasCanonicalId
canonicalId
T@"NSString",&,N,V_canonicalId
hasCanonicalShowId
canonicalShowId
T@"NSString",&,N,V_canonicalShowId
hasInternalLegId
internalLegId
T@"NSString",&,N,V_internalLegId
NOT_SPECIFIED
MOVIE
SPORTS_VOD
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithLongLong:
alloc
init
setBundleId:
setProfileId:
setChannel:
setContent:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasBundleId
setMillisecondsSinceEvent:
setHasMillisecondsSinceEvent:
hasMillisecondsSinceEvent
hasProfileId
hasChannel
hasContent
cause
setCause:
setHasCause:
hasCause
causeAsString:
StringAsCause:
setExpectedStartTimeEpochMillis:
setHasExpectedStartTimeEpochMillis:
hasExpectedStartTimeEpochMillis
setCleanupTimeEpochMillis:
setHasCleanupTimeEpochMillis:
hasCleanupTimeEpochMillis
contractOrTimed
setContractOrTimed:
setHasContractOrTimed:
hasContractOrTimed
contractOrTimedAsString:
StringAsContractOrTimed:
readFrom:
writeTo:
copyTo:
.cxx_destruct
bundleId
millisecondsSinceEvent
profileId
channel
content
expectedStartTimeEpochMillis
cleanupTimeEpochMillis
_cleanupTimeEpochMillis
_expectedStartTimeEpochMillis
_millisecondsSinceEvent
_bundleId
_cause
_channel
_content
_contractOrTimed
_profileId
_has
isEqualToString:
copy
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
setExportedInterface:
setExportedObject:
_didInvalidate
setInvalidationHandler:
resume
initWithBundleID:externalID:
makeRequestWithCompletion:
sharedManager
observer
nowPlayingSummary
reportedSummaryForID:
defaultStore
activeAccount
initWithAccount:
startWithAuthenticateResponseBlock:
_promptForBundleID:
sharedInstance
fetchApplications:
length
_setNextEK:
fetchConfiguration:
_fetchConfigurationCache:
_invalidateCache
sharedSettings
_dictionaryOnDisk:
_writeToDisk:completion:
_postChangeDictionaryToCloud:completion:
_fetchSyncDictionary:
defaultLocationManager
valueForKey:error:
_networkRequest:completion:
clientConnectionDidInvalidate:
respondsToSelector:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
requestPlaybackSummary:
requestPlaybackSummaryForID:completion:
requestConsentForBundleID:forceAuth:replyHandler:
deletePlaybackActivityWithIdentifier:bundleID:
fetchConfigurationCache:
invalidateConfiguration:
setNextConfigurationEK:
readSettingsStore:
writeSettingsStore:replyHandler:
postSettings:replyHandler:
fetchSettings:
readLocation:
writeLocation:replyHandler:
ping
prewarm
networkRequest:replyHandler:
initWithConnection:clientIdentifier:
connection
clientIdentifier
delegate
setDelegate:
_remoteObjectProxy
_connection
_clientIdentifier
_delegate
_init
raise:format:
dealloc
setHttpArchiveBufferSize:
auditToken
valueForEntitlement:
boolValue
initWithCapacity:
addObject:
removeObject:
initWithMachServiceName:
sharedBulletinManager
start
setNotificationsEnabled:
updateAppVisibilityForCurrentStorefront
updateAppVisibility
handleSubscriptionRegistration
server
listener:shouldAcceptNewConnection:
_clients
_xpcListener
_playbackManager
_pushController
setKey:
setValue:
hasKey
hasValue
value
_key
_value
setBrandId:
hasBrandId
brandId
_brandId
setMaxConcurrentOperationCount:
setUnderlyingQueue:
_transaction
numberWithInt:
retryPeriodInSeconds
setRetryPeriodInSeconds:
_retryPeriodInSeconds
setChannelCanonicalId:
setChannelBrandId:
setChannelExternalLiveServiceId:
setChannelInternalLegId:
hasChannelCanonicalId
hasChannelBrandId
hasChannelExternalLiveServiceId
hasChannelInternalLegId
channelCanonicalId
channelBrandId
channelExternalLiveServiceId
channelInternalLegId
_channelBrandId
_channelCanonicalId
_channelExternalLiveServiceId
_channelInternalLegId
removeAllObjects
count
objectAtIndex:
countByEnumeratingWithState:objects:count:
addPlayEvents:
addOptInEvents:
addOptOutEvents:
addLiveActivityEvents:
setHeaders:
playEventsCount
clearPlayEvents
playEventsAtIndex:
optInEventsCount
clearOptInEvents
optInEventsAtIndex:
optOutEventsCount
clearOptOutEvents
optOutEventsAtIndex:
liveActivityEventsCount
clearLiveActivityEvents
liveActivityEventsAtIndex:
playEventsType
optInEventsType
optOutEventsType
liveActivityEventsType
version
setVersion:
headers
playEvents
setPlayEvents:
optInEvents
setOptInEvents:
optOutEvents
setOptOutEvents:
liveActivityEvents
setLiveActivityEvents:
_headers
_liveActivityEvents
_optInEvents
_optOutEvents
_playEvents
_version
_clearBDTimer
isTVEnabled
_cleanupWithSuccess:shouldRetry:completion:
uniqueIdentifier
stringValue
accountID
bundleID
channelIDForBundleID:
contentID
duration
identifierForPlayActivityID:channelID:duration:
externalProfileID
setExternalPlayableId:
elapsedTime
doubleValue
setPlayHeadInMilliseconds:
setHasMediaLengthInMilliseconds:
setMediaLengthInMilliseconds:
date
timestamp
timeIntervalSinceDate:
isTimerDerived
completionState
setIsDone:
externalShowID
setExternalShowId:
contentType
setMediaType:
canonicalID
setCanonicalId:
internalLegID
setInternalLegId:
overrideChannelID
canonicalShowID
setCanonicalShowId:
isShowClosed
setIsShowOpen:
isCurrentEpisode
setIsCurrent:
_reportPlayEvent:summary:completion:
_donateIntentWithPlaybackSummary:andMetadata:
_decorateVODSummary:completion:
playbackType
_cachedMetadataByIdentifier
objectForKey:
_cachedNotFoundIdentifiers
containsObject:
initWithIdentifier:
error
fullResponse
statusCode
metadataByIdentifier
objectForKeyedSubscript:
setRequestCompletionBlock:
addOperation:
setCountLimit:
currentDevice
storeFrontIdentifier
setXAppleStorefront:
userAgent
setUserAgent:
setXDsid:
sharedStorage
playActivityURL
cookieHeadersForURL:userIdentifier:
componentsSeparatedByString:
firstObject
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
lastObject
setCookies:
initWithMessageEnvelope:
nextExpectedReportMillis
_scheduleTimedReportForSummary:afterMillis:
playbackState
applicationProxyForIdentifier:
localizedName
_intentsMediaItemTypeFromWLKContentType:
initWithIdentifier:title:type:artwork:
arrayWithObjects:count:
numberWithBool:
initWithMediaItems:mediaContainer:playShuffled:playbackRepeatMode:resumePlayback:
siriActionsCategories
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
setBuckets:
_setLaunchId:
_setExtensionBundleId:
initWithIntent:response:
donateInteractionWithCompletion:
isSameContent:
elapsedTimeSummaryWithPlaybackState:timerDerived:
reportPlayback:completion:
fetchCanonicalIDForSummary:completionHandler:
_BDTimer
defaultCenter
_networkReachabilityChanged:
addObserver:selector:name:object:
_enqueuePendingReports
handlePlaybackSummary:
initWithUpdateHandler:
removeObserver:
channelForBundleID:
rateLimit
unsignedIntegerValue
lastSummary
isEqualToSummaryExcludingCursor:
initWithRate:burst:
setRate:
setBurst:
doOperation
_enqueuePlaybackSummary:serialize:retry:
defaultAppLibrary
refresh
subscribedAppBundleIdentifiers
_validateEnvironment
_validateBundleID:
isItunesOrFirstPartyBundleID:
_shouldPromptForBundleID:outAccessStatus:
shouldPromptForConsentOnSubscriptionChange
blockOperationWithBlock:
queue
setName:
setLastSummary:
_serialize:
networkReachabilityFlags
isLikelyToReachRemoteServerWithReachabilityFlags:
reporter
_catalogSummary:
_cleanupSummary:
addExecutionBlock:
isManagedAppleID
isMultiUser
privateModeEnabled
lastSyncDate
synchronize:
optedIn
channelForID:
isWatchListEnabled
shouldTrackPlayActivity
requiresAccountLevelConsent
requiresSubscriptionForConsent
channelID
settingsForChannelID:externalID:
accessStatus
initWithBundleIDs:states:
applicationStateForApplication:
promptForBundleID:
_scanForPendingReports
_queueDir
defaultManager
fileExistsAtPath:
fileURLWithPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
array
getResourceValue:forKey:error:
path
dataWithContentsOfFile:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
removeItemAtURL:error:
_queuePathForSummary:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
isEqualToSummary:
archiveRootObject:toFile:
removeItemAtPath:error:
stringByAppendingPathComponent:
stringWithString:
replaceOccurrencesOfString:withString:options:range:
substringWithRange:
numberWithLong:
_reporter
_observer
_queue
_pendingReportsTransaction
_isPrompting
_rateLimiter
_recentSummaries
_lastSummary
stringWithUTF8String:
updateAppInstallationState
_networkReachabilityDidChangeNotification:
_accountStoreDidChangeNotification:
removeObserver:name:object:
setTVAppAllowed:
accountsPromise
resultWithTimeout:error:
isActive
isCancelled
cancel
operations
isExecuting
_updateRequestedOnNetworkChange
_updateRequestedOnAccountChange
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:queue:
publicToken
base64EncodedStringWithOptions:
setPushToken:
arrayWithObject:
setEnabledTopics:
_loadURLBagWithCompletionHandler:
integerValue
synchronize:completion:
wlk_dictionaryForKey:
_postNotificationWithPayload:
_reportBulletinMetrics:
initWithGlobalConfiguration:
setGlobalConfiguration:
flushUnreportedEventsWithCompletionHandler:
insertEvents:withCompletionHandler:
consentedBrands
componentsJoinedByString:
deniedBrands
installedAppBundleIdentifiers
utsc
setTopic:
setApplicationIdentifier:
_augmentCustomEventInfo:
setValuesForKeysWithDictionary:
addPropertiesWithDictionary:
_sendMetricsEvents:
wlk_stringForKey:
numberWithInteger:
wlk_setObjectUnlessNil:forKey:
wlk_dateFromMillisecondsSince1970ForKey:
allAppBundleIdentifiers
wlk_arrayForKey:
wlk_numberForKey:
appBundleIDs
URLWithString:
sportsScoreSpoilersAllowed
post:title:body:options:
_fetchNowPlayingCanonicalIDWithCompletionHandler:
loadValueForKey:completionBlock:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
handleAction:
_environment
_notificationsEnabled
_notifCenter
setContentCanonicalId:
setContentBrandId:
setContentExternalPlayableId:
setContentInternalLegId:
hasContentCanonicalId
hasContentBrandId
hasContentExternalPlayableId
setContentMediaLengthInMilliseconds:
setHasContentMediaLengthInMilliseconds:
hasContentMediaLengthInMilliseconds
setContentIsDone:
setHasContentIsDone:
hasContentIsDone
hasContentInternalLegId
contentCanonicalId
contentBrandId
contentExternalPlayableId
contentMediaLengthInMilliseconds
contentIsDone
contentInternalLegId
_contentMediaLengthInMilliseconds
_contentBrandId
_contentCanonicalId
_contentExternalPlayableId
_contentInternalLegId
_contentIsDone
_addToken
_claimToken
rate
burst
_rate
_burst
_tokens
_timer
_accessQueue
addCookies:
setXGuid:
setCorrelationKey:
setXUseridKeyspace:
setXUseridKey:
cookiesCount
clearCookies
cookiesAtIndex:
cookiesType
hasXGuid
hasCorrelationKey
hasXUseridKeyspace
hasXUseridKey
xDsid
xAppleStorefront
xGuid
correlationKey
xUseridKeyspace
xUseridKey
cookies
_cookies
_correlationKey
_userAgent
_xAppleStorefront
_xDsid
_xGuid
_xUseridKey
_xUseridKeyspace
startObserving
stopObserving
_nowPlayingInfoDidChangeNotification:
_nowPlayingAppDidChangeNotification:
_nowPlayingAppIsPlayingDidChangeNotification:
_nowPlayingSummaryWithError:
_updateTransactionState
isEqualToSummaryExcludingTimestamp:
_isSummary:signifantChangeFromSummary:
_updateWithInfo:
_nowPlayingBundleID
errorWithDomain:code:userInfo:
valueForKey:
initWithMediaRemoteDictionary:bundleID:accountID:
_nowPlayingAppIsPlaying
updateHandler
setUpdateHandler:
_isObserving
_notificationQueue
_lookupQueue
_updateHandler
isPresenting
_isPad
accountName
dictionaryWithObjects:forKeys:count:
setState:
state
isAlwaysLive
serviceID
currentPlaybackDate
initWithBundleId:timestamp:duration:elapsedTime:externalProfileID:contentID:accountID:playbackState:playbackRate:completionState:isAlwaysLive:serviceID:currentPlaybackDate:playbackType:isTimerDerived:
_processInput:completion:
playbackRate
isEqualToNumber:
isLiveType
eventForDate:
decorateSummary:completion:
_decorateLiveSummary:completion:
_decorateEBSSummary:completion:
setTransaction:
_doTune:completion:
_debugStringForInput:
_doContentBoundaryWithCompletion:
schedule
_tuneEventFromSummary:schedule:tuneIn:
_contentEventFromSummary:schedule:event:contentBegin:
setSchedule:
_evaluateSchedule
_reportPlayEvents:completion:
adjacentEventsForDate:fuzziness:
initWithChannelID:serviceID:
scheduleDictionary
initWithDictionary:
initWithChannelID:externalContentID:
responseDictionary
response
cleanupTime
timeIntervalSince1970
externalServiceID
startDate
endDate
externalPlayableID
legID
eventAfterDate:
_configureTimerForDate:input:
timeIntervalSinceNow
dateWithTimeIntervalSinceNow:
transaction
_schedule
_timerEventDate
setHasIsDone:
hasIsDone
hasExternalShowId
hasMediaLengthInMilliseconds
mediaType
setHasMediaType:
hasMediaType
mediaTypeAsString:
StringAsMediaType:
setHasIsCurrent:
hasIsCurrent
setHasIsShowOpen:
hasIsShowOpen
hasCanonicalId
hasCanonicalShowId
hasInternalLegId
externalPlayableId
playHeadInMilliseconds
isDone
externalShowId
mediaLengthInMilliseconds
isCurrent
isShowOpen
canonicalId
canonicalShowId
internalLegId
_mediaLengthInMilliseconds
_playHeadInMilliseconds
_canonicalId
_canonicalShowId
_externalPlayableId
_externalShowId
_internalLegId
_mediaType
_isCurrent
_isDone
_isShowOpen
UWLLiveActivityEvent
NSCopying
WLDClientConnection
WLKConnectionServerProtocol
NSObject
WLDServer
NSXPCListenerDelegate
WLDClientConnectionDelegate
MapEntry
UWLOptOutEvent
UWLOptInEvent
WLDTransactionBlockOperation
UWLErrorResponse
UWLLiveActivityEventChannel
UWLMessageWireEnvelope
WLDPlaybackReporter
WLDPlaybackReporterProtocol
WLDPlaybackManager
WLDAppVisibilityManager
WLDPushNotificationController
APSConnectionDelegate
WLKNotificationCenterDelegate
UWLLiveActivityEventContent
WLDRateLimiter
UWLMessageHeaders
WLDXPCTransactionScope
WLDPlaybackObserver
WLDRemoteAlertPresenter
WLDLivePlaybackReporter
_WLDStateMachine
UWLPlayEvent
@24@0:8^{_NSZone=}16
B16@0:8
v24@0:8q16
v20@0:8B16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
q16@0:8
@"NSString"
@"UWLLiveActivityEventChannel"
@"UWLLiveActivityEventContent"
{?="cleanupTimeEpochMillis"b1"expectedStartTimeEpochMillis"b1"millisecondsSinceEvent"b1"cause"b1"contractOrTimed"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v36@0:8@16B24@?28
v32@0:8@16@24
v24@0:8@?<v@?@"WLKPlaybackSummary">16
v32@0:8@"NSNumber"16@?<v@?@"WLKPlaybackSummary">24
v36@0:8@"NSString"16B24@?<v@?B>28
v32@0:8@"NSString"16@"NSString"24
v24@0:8@?<v@?@"NSDictionary">16
v24@0:8@?<v@?@"WLKServerConfigurationResponse">16
v24@0:8@?<v@?>16
v24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">24
@32@0:8@16@24
@"<WLKConnectionClientProtocol>"
@"NSXPCConnection"
@"<WLDClientConnectionDelegate>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"WLDClientConnection"16
@"NSMutableSet"
@"NSXPCListener"
@"WLDPlaybackManager"
@"WLDPushNotificationController"
@"WLDXPCTransactionScope"
@24@0:8Q16
@"UWLMessageHeaders"
@"NSMutableArray"
q24@0:8Q16
v32@0:8@"WLKPlaybackSummary"16@?<v@?BB>24
v32@0:8@"WLKPlaybackSummary"16@?<v@?@"NSString">24
v40@0:8@16@24@?32
v32@0:8B16B20@?24
@"NSObject<OS_dispatch_source>"
v32@0:8@16B24B28
B32@0:8@16^Q24
@24@0:8@16
@"<WLDPlaybackReporterProtocol>"
@"WLDPlaybackObserver"
@"NSOperationQueue"
@"WLDRateLimiter"
@"WLKCache"
@"WLKPlaybackSummary"
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v24@0:8@"NSDictionary"16
@"APSConnection"
@"WLKNotificationCenter"
{?="contentMediaLengthInMilliseconds"b1"contentIsDone"b1}
@32@0:8Q16Q24
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@24@0:8@?16
@24@0:8^@16
@?16@0:8
@36@0:8@16@24B32
@44@0:8@16@24@32B40
v32@0:8Q16@?24
v32@0:8Q16@?<v@?B>24
v32@0:8@16Q24
@"WLKSchedule"
@"NSDate"
{?="mediaLengthInMilliseconds"b1"contractOrTimed"b1"mediaType"b1"isCurrent"b1"isDone"b1"isShowOpen"b1}
WLDServer.start
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>17A405001</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleIdentifier</key>
<string>com.apple.watchlistd</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>12.2</string>
<key>DTSDKBuild</key>
<string>16E180z</string>
<key>DTSDKName</key>
<string>iphonesimulator12.2</string>
<key>DTXcode</key>
<string>1020</string>
<key>DTXcodeBuild</key>
<string>10P70r</string>
<key>MinimumOSVersion</key>
<string>12.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>watchlistd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.appstored.install-system-apps</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ClientRestrictions</string>
<string>UserSettings</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.launchservices.suppresscustomschemeprompt</key>
<string>*</string>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
</array>
<key>com.apple.private.subscriptionservice.all-sources.read-only</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/</string>
<string>/Library/com.apple.WatchListKit/</string>
<string>/Library/Logs/PersistentConnection/com.apple.watchlistd-watchlistd-APSClient.log</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.appstored.xpc.request</string>
<string>com.apple.lsd.installation</string>
<string>com.apple.lsd.modifydb</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.VideoSubscriberAccount.videosubscriptionsd</string>
<string>com.apple.locationd.synchronous</string>
<string>com.apple.awdd</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.assertiond.applicationstateconnection</string>
<string>com.apple.PineBoardServices</string>
<string>com.apple.springboard.services</string>
<string>com.apple.installcoordinationd</string>
<string>com.apple.spotlight.IndexAgent</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.purplebuddy</string>
<string>com.apple.AppleMediaServices</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.tv</string>
<string>com.apple.watchlistd</string>
<string>com.apple.TVWatchList</string>
<string>com.apple.WatchListKit</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.usernotification.proxy</key>
<true/>
<key>fairplay-client</key>
<string>681381042</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>watchlistd</string>
</array>
</dict>
</plist>
