*&@q`P@0 
N7lexicon21SortKeyByteStatisticsE
@(#)PROGRAM:Lexicon  PROJECT:Lexicon-24.2
3333338@
ZN3nlp11CFScopedPtrIPK14__CFDictionaryEC1ES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK14__CFDictionaryEC1ES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
NSt3__110__function6__baseIFvPKvEEE
NSt3__117bad_function_callE
19_LXStaticCursorImpl
13_LXCursorImpl
ZN3nlp11CFScopedPtrIPK8_LXEntryEC1ES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK8_LXEntryEC1ES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
ZN3nlp11CFScopedPtrIPK9_LXCursorEC1ES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK9_LXCursorEC1ES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
N7lexicon21NamedObjectRepositoryINS_18MutableLexiconImplEE8ListenerE
20_LXStaticLexiconImpl
14_LXLexiconImpl
ZN3nlp11CFScopedPtrIPK10__CFStringE5resetES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK10__CFStringE5resetES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
ZN3nlp11CFScopedPtrIP14__CFDictionaryEC1ES2_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIP14__CFDictionaryEC1ES5_EUlPKvE_NS_9allocatorIS9_EEFvS8_EEE
ZN3nlp11CFScopedPtrIPK10__CFStringEC1ES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK10__CFStringEC1ES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
ZN3nlp11CFScopedPtrIPK10__CFLocaleEC1ES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK10__CFLocaleEC1ES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
NSt3__120__shared_ptr_emplaceIN7lexicon22RangedTokenIDGeneratorENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN7lexicon22SharedTokenIDGeneratorENS_9allocatorIS2_EEEE
ZN3nlp11CFScopedPtrIP17__CFDateFormatterEC1ES2_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIP17__CFDateFormatterEC1ES5_EUlPKvE_NS_9allocatorIS9_EEFvS8_EEE
ZN3nlp11CFScopedPtrIPK8__CFDateEC1ES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK8__CFDateEC1ES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
ZN3nlp11CFScopedPtrIPK10__CFNumberEC1ES3_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIPK10__CFNumberEC1ES6_EUlPKvE_NS_9allocatorISA_EEFvS9_EEE
ZN7lexicon18MutableLexiconImpl24remove_entry_under_mutexERKN2KB6StringEE3$_6
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl24remove_entry_under_mutexERKN2KB6StringEE3$_6NS_9allocatorIS8_EEFN3WTF6RefPtrINS4_16DynamicTrieEntryEEEPSD_EEE
NSt3__110__function6__baseIFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPS5_EEE
NSt3__16__bindIRFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPS4_RKNS3_6StringEPKvSB_RNS3_21DynamicDictionaryImplERNS_13unordered_mapIjS7_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS7_EEEEEEEJRKNS_12placeholders4__phILi1EEENS_17reference_wrapperIS8_EERSB_SZ_NSX_ISC_EENSX_ISO_EEEEE
NSt3__118__weak_result_typeIPFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPS4_RKNS3_6StringEPKvSB_RNS3_21DynamicDictionaryImplERNS_13unordered_mapIjS7_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS7_EEEEEEEEE
NSt3__110__function6__funcINS_6__bindIRFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPS6_RKNS5_6StringEPKvSD_RNS5_21DynamicDictionaryImplERNS_13unordered_mapIjS9_NS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEJRKNS_12placeholders4__phILi1EEENS_17reference_wrapperISA_EERSD_S11_NSZ_ISE_EENSZ_ISQ_EEEEENSL_IS14_EEFS7_S8_EEE
ZN3nlp11CFScopedPtrIP14__CFDictionaryE5resetES2_EUlPKvE_
NSt3__110__function6__funcIZN3nlp11CFScopedPtrIP14__CFDictionaryE5resetES5_EUlPKvE_NS_9allocatorIS9_EEFvS8_EEE
ZN7lexicon18MutableLexiconImpl17update_meta_flagsEPK10__CFStringjE3$_5
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl17update_meta_flagsEPK10__CFStringjE3$_5NS_9allocatorIS7_EEFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPSD_EEE
ZN7lexicon18MutableLexiconImpl23increment_penalty_countEPK10__CFStringiE3$_4
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl23increment_penalty_countEPK10__CFStringiE3$_4NS_9allocatorIS7_EEFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPSD_EEE
ZN7lexicon18MutableLexiconImpl21increment_usage_countEPK10__CFStringiE3$_3
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl21increment_usage_countEPK10__CFStringiE3$_3NS_9allocatorIS7_EEFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPSD_EEE
ZN7lexicon18MutableLexiconImpl13migrate_entryEPK8_LXEntryjdE3$_2
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl13migrate_entryEPK8_LXEntryjdE3$_2NS_9allocatorIS7_EEFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPSD_EEE
ZN7lexicon18MutableLexiconImpl19add_or_update_entryEPK8_LXEntryE3$_1
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl19add_or_update_entryEPK8_LXEntryE3$_1NS_9allocatorIS7_EEFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPSD_EEE
ZN7lexicon18MutableLexiconImpl9add_entryEPK10__CFStringjE3$_0
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl9add_entryEPK10__CFStringjE3$_0NS_9allocatorIS7_EEFN3WTF6RefPtrIN2KB16DynamicTrieEntryEEEPSD_EEE
N7lexicon18MutableLexiconImplE
NSt3__114default_deleteIN7lexicon18MutableLexiconImplEEE
NSt3__120__shared_ptr_pointerIPN7lexicon18MutableLexiconImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
N2KB20SortKeyByteConverterE
DynamicDictionary-
ZN2KBL26populate_missing_token_idsERNS_11DynamicTrieERN7lexicon16TokenIDGeneratorEE3$_1
NSt3__110__function6__funcIZN2KBL26populate_missing_token_idsERNS2_11DynamicTrieERN7lexicon16TokenIDGeneratorEE3$_1NS_9allocatorIS8_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSD_EEE
ZN2KBL20add_serialized_entryERNS_11DynamicTrieERKN3WTF6RefPtrINS_16DynamicTrieEntryEEEE3$_0
NSt3__110__function6__funcIZN2KBL20add_serialized_entryERNS2_11DynamicTrieERKN3WTF6RefPtrINS2_16DynamicTrieEntryEEEE3$_0NS_9allocatorISB_EEFS8_PS7_EEE
NSt3__114default_deleteIN2KB21DynamicDictionaryImplEEE
NSt3__120__shared_ptr_pointerIPN2KB21DynamicDictionaryImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
N7lexicon21DynamicLexiconWrapperE
PFvP9UCollatorE
NSt3__120__shared_ptr_pointerIP9UCollatorPFvS2_ENS_9allocatorIS1_EEEE
N7lexicon22SharedTokenIDGeneratorE
N7lexicon16TokenIDGeneratorE
N7lexicon24MutableLexiconCursorImplE
N7lexicon15EmptyRootCursorE
N7lexicon19DynamicLexiconProxyE
N7lexicon19DynamicLexiconProxy15LexiconListenerE
NSt3__120__shared_ptr_emplaceIN7lexicon19DynamicLexiconProxy15LexiconListenerENS_9allocatorIS3_EEEE
N7lexicon22RangedTokenIDGeneratorE
ZN7lexicon12PathRegistry26createBaselineUnigramsPathEPK10__CFLocaleE3$_0
NSt3__110__function6__funcIZN7lexicon12PathRegistry26createBaselineUnigramsPathEPK10__CFLocaleE3$_0NS_9allocatorIS7_EEFbPK7__CFURLPK10__CFStringEEE
NSt3__110__function6__baseIFbPK7__CFURLPK10__CFStringEEE
ZN7lexicon12PathRegistry23createDeltaUnigramsPathEPK10__CFLocaleE3$_1
NSt3__110__function6__funcIZN7lexicon12PathRegistry23createDeltaUnigramsPathEPK10__CFLocaleE3$_1NS_9allocatorIS7_EEFbPK7__CFURLPK10__CFStringEEE
com.apple.NLPUtils
TMPDIR
/tmp
/nlptemp-XXXXXX
Keyboard.durableNamedEntity
Keyboard.recentNamedEntity
Keyboard.userContacts
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIStaticDictionaryImpl.cpp
!m_baseline_trie.valid()
v48@?0r^{StaticDictionaryImplCursor={WordTrieCursor=c{PackedTrieSibling=(?=I{?=b24b2b2b1b1b1b1}{?=b8b8b8b8})(?=Q{?=b31b1b8}{?=b8b8b8b8b8})[4C]}}{WordTrieCursor=c{PackedTrieSibling=(?=I{?=b24b2b2b1b1b1b1}{?=b8b8b8b8})(?=Q{?=b31b1b8}{?=b8b8b8b8b8})[4C]}}fC}8r^{String=SSSC*[16c]}16r^{SortKeyCursor={ByteString=(?={?=S*}{?=S[14C]})}C{ByteString=(?={?=S*}{?=S[14C]})}I}24d32*40
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/LXCursor.cpp
impl.valid()
v24@?0^{_LXCursor={__CFRuntimeBase=QAQ}c}8*16
LXCursorCreateByAdvancingWithCharacters
false && "LXCursorCreateByAdvancingWithCharacters not implemented yet"
LXCursorsAreEqual
false && "LXCursorsAreEqual not implemented yet"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIHuffmanCoder.cpp
train
!is_compiled()
compile
m_freq_table.size() >= 2
queue.size() == 1
std::find(cur_word.begin(), cur_word.end(), true) == cur_word.end()
B24@?0r^{pair<unsigned int, unsigned int>=II}8r^{pair<unsigned int, unsigned int>=II}16
write
is_compiled()
num_chars_in_depth[depth] <= 0xff
encode
bytes.size() == encoded_size(str)
encoded_size
bit_count > 0
I12@?0I8
encoded_size_block_invoke
it != m_dictionary.end()
v12@?0I8
encode_block_invoke
build_lookup_tables
lo < hi && hi <= m_codebook.size()
longest_codeword_length > depth
codeword.size() > depth
sub_lo < sub_hi
entry.empty()
std::all_of(m_tables[table_index].entries.begin(), m_tables[table_index].entries.end(), ^(const HuffmanDecoderTableEntry &entry) { return !entry.empty(); })
B16@?0r^{pair<std::__1::vector<bool, std::__1::allocator<bool> >, unsigned int>={vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}I}8
HuffmanDecoderTable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIHuffmanCoder.h
bl > 0
decode
valid()
table.bit_length >= 1
WARNING:  Derivation of base form failed.  Expected %s (0x%s).  Got %s (0x%s).  
ERROR:  Common sort-key letter form table wrote %d entries, expected %d. ABORTING!
parse_substitution_list
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIWord.cpp
count == base_surface_form.length()
Word
dat_file.valid()
huffman_decoder
!sort_key_for_derivation.empty()
!common_letter_base.is_empty()
record_start_offset + record_length == stream.offset()
merge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIDynamicTrie.cpp
depth <= sort_key.size()
create
depth > 0
derefBase
new_count >= 0
B16@?0r^{RefPtr<KB::DynamicTrieEntry>=^{DynamicTrieEntry}}8
NOTE: Trie tail compression is currently disabled because it's ineffective. <rdar://problem/10878780>
OVERRIDE: frequency similarity ratio: %f
OutputPath
Nothing to be done for %s (%s) 
Compiling %s (%s) 
writing version %x.%x, collator v%s, UCA v%s, %s
Allocating trie slots: magic_number=%u, root_usage_sum=%f
ERROR: Trie size =%u bytes exceeds trie addressing capacity=%u!
Reserved %d and wrote %d trie nodes in %u bytes
 DenseKeyCodes,
 CommonLetterForms,
 SubstitutionLists,
 PartialProbability,
 Percentile,
 UnigramRecordV2,
 VarByteTrieNodesV2,
 RelativeChildOffsetsV2,
 SkipDerivableUnigrams,
 PatriciaTrieRuns,
 CompressTrieTails,
 NonDerivablePrefixUnigrams,
 Exclude0FreqWords,
 SkipThreeSizes,
 AllSortKeysAreDistributive,
 SortKeysChangeRetroactively
 WriteWordIds
 Write4ByteUnigramOffsets
 HuffmanEncodeSurfaceForms
    Options: %s
writing: %s
ERROR: Unigram index length=%u bytes exceeds trie addressing capacity=%u!
Try passing the '-4' option when compiling.
Wrote %d non-derivable words in %d bytes
WARNING: words [%s] and [%s] share word id %u; only former is stored in word id map
write_unigram_data
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/UnigramsCompiler/UnigramsCompiler.cpp
m_huffman_coder.is_compiled()
Inserted %d trie nodes.
Condensed %d nodes into patricia nodes.
Adding retro-active sort-key change hints!
    ALL surface-form sort-keys are distributive!
    %d surface-forms sort-keys are non-distributive.
    %d unigram sort-keys do not build cumulatively. They change retroactively!
    %d unigram base forms are not derivable from their sort-keys!
    %d surface forms don't align with their dict/sort keys.
Mapped %d sort key units to letter forms.
Non-empty surface-form substitution lists:
    %s -> %s            
    Frequency distribution:  Lowest=%lf, NextLowest=%lf, Highest=%lf
Squashing with root power %.3lf to achieve frequency target range %.0f to %.0f
convert_combining_classes_to_bits
classes.size() <= Word::MaxCombiningClassCount
I16@?0r^{vector<KB::String, std::__1::allocator<KB::String> >=^{String}^{String}{__compressed_pair<KB::String *, std::__1::allocator<KB::String> >=^{String}}}8
convert_combining_classes_to_bits_block_invoke
class_ids.count(class_name)
ERROR: Failed to open %s (errno=%d)
    Read %d unigrams.  Registered %lu words.
        Excluded %d 0-frequency neighbor-key macros.
        Merged %d duplicate surface forms.  %d shared sort-key strings remain
WARNING: Excluding word with null sortkey: %s
        Excluding word with 0 freq: %s
output_path
dat_path.ends_with(String(".dat"))
default_output_path
m_unigrams_path.find(String("/")) != String::NotAnIndex
words
input_filename.ends_with(String("words"))
collate_strings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/LXUtils.cpp
false && "invalid return value from ucol_strcollUTF8()"
IPHONE_SIMULATOR_ROOT
createSystemRootPath
simulatorRoot
safe_probability
0 <= numerator && numerator <= denominator && "invalid probability calculation"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/LXLexicon.cpp
false && "cannot clear non-mutable dictionary"
false && "cannot remove entries from non-mutable dictionary"
set_user_value
false && "cannot update entries in non-mutable dictionary"
update_meta_flags
increment_penalty_count
increment_usage_count
migrate_entry
false && "cannot migrate entries to non-mutable dictionary"
false && "cannot add entries to non-mutable dictionary"
serialized_size
false && "serialized_size() not yet supported for static lexicons"
locale
resourceDirectory
dataFile
deltaFiles
name
createDeltaLexiconPath
CFArrayGetCount(delta_paths) == 1 && "multiple delta files are not currently supported"
LXLexicon
DeltaPath
com.apple.Lexicon
BasePath
Phrases
com.apple.Lexicon.ErrorDomain
Could not determine the location of the base unigrams file, or one was not provided.
createLocale
false && "received unsupported CFType for locale"
A name is required when creating a mutable lexicon
A name is required when creating a transient lexicon
LXLexiconGetSortkeyBytes
numBytes != NULL && "numBytes must not be NULL"
timestamp
penaltyCount
usageCount
flags
yyyy-MM-dd HH:mm:ss zzz
en_US
LXCreateCompositeLexicon
false && "LXCreateCompositeLexicon not implemented yet"
utf8_string
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIStringGlue.mm
success
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIByteString.cpp
buffer_size <= std::numeric_limits<uint16_t>::max()
v24@?0^{_LXEntry={__CFRuntimeBase=QAQ}c}8*16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/LXMutableLexiconImpl.cpp
false && "added an entry with an unknown token id"
m_collator
0123456789 
quicktype_exemplars
icu_exemplars
U_SUCCESS(error_code)
ulocdata
exemplar_set
initialize
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIString.cpp
len <= m_capacity
ensure_capacity
m_capacity >= InitialCapacity
data_in_allocated_internal_buffer()
internalize_buffer
m_buffer_type == External
String
str && len <= strnlen(str, len) || len == 0
(str && pos + len <= strlen(str)) || pos + len == 0
operator=
!m_buffer || m_buffer != o.m_buffer || m_buffer_type == External
trim
e != NotAnIndex
e < size()
replace
pos + size_replaced <= size()
append_format
string_pseudofile
status >= 0
status == 0
SK=0x%s: %s
operator()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIDynamicDictionaryImpl.mm
false && "Unexpectedly missing trie entry"
v16@?0r^{RefPtr<KB::DynamicTrieEntry>=^{DynamicTrieEntry}}8
instance
NSFileOriginalItemLocationKey
dynamic-text-backup.dat
%s%d
.XXXXXX
character_to_titlecase
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIStringFunctions.mm
errorcode == U_ZERO_ERROR
character_to_lowercase
%02x
compute_sort_key
ustr_len <= ustr.size()
key_len <= key.size()
key[key_len - 1] == 0
collator
c != 0
-[LXTICompiledCollatorFile createCollatorWithType:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIKeyboardCollator.mm
type != kRootCollator
type <= UIKeyboardCustomCollatorCount
Collator customization failed: %s
failed to open collator %d from binary file at path %@: %s
getRootCollator
rootCollator
getRootCollator_block_invoke
U_SUCCESS(error)
UIKeyboardCollatorCompile
(unknown custom collator)
failed to compile rules '%@' for collator type %s: %s
kRootCollator
kDefaultCustomCollator
kCustomTurkishCollator
kCustomNordicCollator
kCustomTamilCollator
UIKeyboardCustomCollationRulesForCollatorType
collatorType != kRootCollator
& [before 1] a < ' ' < '&' 
WARNING! Creating precompiled collator. This is expensive!
error loading collator file at %@: %@
file not found
file has zero length
file failed to load
collator is out of date
Unknown collator failure #%d
Collator creation failed for locale '%s'! Backing off to root collator.
LXEntryCopyString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/LXEntry.cpp
entry
LXEntryCopyStoredString
LXEntryGetMetaFlags
LXEntryGetPartialProbability
LXEntryGetTokenID
LXEntryGetAffixData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIWordTrie.cpp
advance
!is_root()
children_of_cursor
cursor.is_root() || first_child_offset >= m_trie_root_offset
derive_words_at_cursor
!cursor.is_root()
!derived_base_form.is_empty()
derive_words_at_offset
termination_prob > 0
word_at
m_words->valid()
B16@?0r^{Word={String=SSSC*[16c]}{ByteString=(?={?=S*}{?=S[14C]})}fIICIII{TITokenID=II}i}8
.dat
m_word_id_map_offset > 0
huffman_coder_offset > 0
word_with_id
result.word_id() == word_id
probability_of_baseline
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIStaticDictionaryImplCursor.cpp
isfinite(result)
is_root
m_baseline_cursor.is_root() == m_delta_cursor.is_root()
probability_of_baseline_given_termination
children
baseline_byte < 0x100 || delta_byte < 0x100
BUILT_PRODUCTS_DIR
WRAPPER_NAME
Output
SRCROOT
TEXTINPUT_LANGUAGE
PRECOMPILED_DATA
DERIVED_SOURCES_DIR
Deps
couldn't create directory '%s': %s (%d)
extract_locale_from_path
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/UnigramsCompiler/DictCompiler.cpp
filename_parts.size() >= 2
lang_region_split.size() == 1 || lang_region_split.size() == 2
couldn't read magic number from file
Magic numbers don't match!  Recorded: %u  Actual %u
couldn't read major version from file
Major versions don't match!  Recorded: %u  Actual %u
couldn't read minor version from file
Minor versions don't match!  Recorded: %u(0x%x)  Actual %u(0x%x)
couldn't read collator version from file
Collator versions don't match!  Recorded: %s  Actual %s
couldn't read UCA version from file
Unicode Collation Algorithm (UCA) versions don't match!  Recorded: %s  Actual %s
couldn't get recorded checksum from file
Checksums don't match!
Recorded: %s
Actual: %s
File not found: %s
v48@?0r^{RefPtr<KB::DynamicTrieNode>=^{DynamicTrieNode}}8r^{String=SSSC*[16c]}16r^{SortKeyCursor={ByteString=(?={?=S*}{?=S[14C]})}C{ByteString=(?={?=S*}{?=S[14C]})}I}24d32*40
LXEntry
is_equal
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/LXMutableLexiconCursorImpl.cpp
false && "MutableLexiconCursorImpl::is_equal not implemented yet"
create_child
impl
clear
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/LXDynamicLexiconProxy.cpp
false && "clear() not supported for a lexicon proxy"
remove_entry
false && "remove_entry() not supported for a lexicon proxy"
add_or_update_entry
false && "add_or_update_entry() not supported for a lexicon proxy"
add_entry
false && "add_entry() not supported for a lexicon proxy"
enumerate_common_letter_forms
false && "enumerate_common_letter_forms not supported for a detached lexicon proxy"
v8@?0
LXCursor
store
false && "store() not supported for a lexicon proxy"
load
false && "load() not supported for a lexicon proxy"
root
UnigramWord
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/UnigramsCompiler/UnigramWord.cpp
m_collator && "Missing collator"
freq
role
roles
cap_bits
surface_form
post
needs_prefix
needs_suffix
word_id < (1 << 24)
NOTE:  Sort key for %s->%s freq=%.1f is not distributive:
    0x%s / 0x%s
NOTE: Prefix sort-key changed retroactively at %s -> %s for %s:  0x%s -> 0x%s 
operator!=
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIString.h
p==rhs.p
<%d: %s  
^%d: %s  
@%d: %s  
write_unigram_record_v2
record_length <= 0xff
 : p=%.0f
 : f=%.0f
 : r=%s
 : c=%#x
 : s=%s
 : pre=%s
 : needs_prefix
 : post=%s
 : needs_suffix
<Word: k=0x%s> 
 (s=0x%s)
InputStream
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/TIDataFile.cpp
m_offset <= m_size
read_null_terminated_string
result.size() == len
tell
result != -1
seek
seek_to_end
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/WTF/WTFRefCounted.h
old_count > 0
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Child offset ranges: Zero= %d, UInt24= %d, UInt16= %d, UInt8= %d : SInt24= %d, SInt16= %d, SInt8= %d
Child offset savings: UInt16= %d, UInt8= %d, UInt16^UInt8 = %d : SInt16= %d, SInt8= %d, SInt16^SInt8= %d : SInt16^UInt8= %d
Non-branching chain histogram [length, count]:
Compression savings: %d bytes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  [%2d, %6d]
WARNING! Changing surface form list for trie node on recursive insertion of: %s
Existing form: %s
YIKES:  %d grandchildren already have trie offsets but %d don't!
write_trie_node_as_var_byte_slot
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Lexicon_Sim/Lexicon-24.2/Source/UnigramsCompiler/UnigramTrieNode.cpp
m_written_offset == idx_file.tell()
patricia_key_size_1 <= (kMaxPatriciaKeyBytes - 1)
relative_child_offset >= 0 && relative_child_offset <= DC_UINT8_MAX
relative_child_offset >= DC_INT16_MIN && relative_child_offset <= DC_INT16_MAX
node_children_offset < kPatriciaTrieNodeOffsetLimit
WARNING:  UnigramTrieNode %d/%d was not allocated a write file offset: parent @0x%x!
LDEnumerateAssetDataItems
v44@?0^{__CFURL=}8i16^{__CFLocale=}20^{__CFString=}28^B36
/System/Library/PrivateFrameworks/LinguisticData.framework/LinguisticData
Unigrams
Lexicon
Delta
LexiconDelta
created static lexicon with locale=%s, baseline_path=%s, delta_path=%s
removed '%s'
updated user value for '%@' - %@:%@
updated meta flags to %u for '%s'
incremented penalty count by %d for '%s'
incremented usage count by %d for '%s'
added or updated entry '%s' with tokenID=%u
added new entry '%s' with tokenID=%u
entry '%s' already exists with tokenID=%u
storing %lu entries
loaded %lu entries from %s
collision for strings '%s' and '%s': tokenID=%u
found unknown lead_primary=%u, with sort_key_byte=%u
found duplicate serialized entry with string='%s'
updated the backing lexicon for a lexicon view
created a lexicon view
autorelease
lastPathComponent
fileURLWithPath:
defaultManager
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
userInfo
objectForKey:
isEqual:
moveItemAtURL:toURL:error:
numberWithBool:
setResourceValue:forKey:error:
stringByAppendingString:
stringByAppendingPathComponent:
m_descriptor
m_mappedFile
m_length
m_path
initWithPath:error:
dealloc
createCollatorWithType:
release
fileSystemRepresentation
copy
init
sharedCollatorFile
getCharacters:
length
appendString:
string
stringWithFormat:
alloc
pathForResource:ofType:
bundleForClass:
class
stringWithCString:encoding:
letterCharacterSet
invertedSet
rangeOfCharacterFromSet:
substringToIndex:
isEqualToString:
LXTICompiledCollatorFile
@"NSString"
@32@0:8@16^I24
v16@0:8
^{UCollator=}20@0:8i16
@16@0:8
