MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
v8@?0
com.apple.podcasts
com.apple.iBooks
com.apple.Music
nowPlayingIdentifiers
T@"NSArray",&,N,V_nowPlayingIdentifiers
firstPartyAppBundleIDs
T@"NSArray",R,N
MCDBrowsableContentViewControllerQueue
<%@: %p [%@]>
v16@?0I8I12
MusicCarDisplayUI
CarDisplayNowPlayingListGlyph
ERROR_LOADING_ITEM
v16@?0@"NSError"8
v24@?0Q8^B16
v12@?0B8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
visible
TB,N,GisVisible,V_visible
selectedIndexPath
T@"NSIndexPath",&,N,V_selectedIndexPath
placeholderView
T@"UIView",&,N,V_placeholderView
currentlyPlayingApp
TB,N,V_currentlyPlayingApp
loadingTimer
T@"MPWeakTimer",&,N,V_loadingTimer
alertController
T@"UIAlertController",&,N,V_alertController
pushToNowPlaying
TB,N,V_pushToNowPlaying
container
T@"MCDPCContainer",&,N,V_container
didFinishInitialLoad
TB,N,V_didFinishInitialLoad
didFinishInitialViewAppear
TB,N,V_didFinishInitialViewAppear
overallBarView
T@"UIView",&,N,V_overallBarView
progressBarView
T@"UIView",&,N,V_progressBarView
indicatorView
T@"UIView",&,N,V_indicatorView
progress
Td,N,V_progress
overallProgressView
T@"UIView",&,N,V_overallProgressView
currentProgressView
T@"UIView",&,N,V_currentProgressView
shouldResizeCurrentProgress
TB,N,V_shouldResizeCurrentProgress
playbackProgress
Td,N,V_playbackProgress
highlighted
TB,N,V_highlighted
CarDisplayExplicitGlyph
titleLabel
T@"UILabel",R,N,V_titleLabel
explicitTrack
TB,N,GisExplicitTrack,V_explicitTrack
CarDisplayMoreButton
CarDisplayShuffleButton
CarDisplayAddToLibraryButton
activeButtonLayoutConstraints
T@"NSArray",&,N,V_activeButtonLayoutConstraints
repeatButton
T@"MCDRepeatButton",R,N,V_repeatButton
moreButton
T@"MCDPlayModeButton",R,N,V_moreButton
shuffleButton
T@"MCDPlayModeButton",R,N,V_shuffleButton
addToLibraryButton
T@"MCDPlayModeButton",R,N,V_addToLibraryButton
playbackRateButton
T@"MCDPlayModeButton",R,N,V_playbackRateButton
fuseSubscriberLayout
TB,N,V_fuseSubscriberLayout
selected
TB,D,N,GisSelected
showBezelInTouch
TB,N,V_showBezelInTouch
hideBezelInKnob
TB,N,V_hideBezelInKnob
disabledTextColor
T@"UIColor",&,N,V_disabledTextColor
com.apple.Music.LibraryView
com.apple.Music.LibraryView.Albums.Detail
com.apple.Music.LibraryView.Albums
com.apple.Music.LibraryView.Artists
com.apple.Music.LibraryView.Compilations
com.apple.Music.LibraryView.Composers
com.apple.Music.LibraryView.RecentlyAdded
com.apple.Music.LibraryView.Songs
com.apple.Music.LibraryView.Downloaded
com.apple.Music.LibraryView.Loved
com.apple.Music.LibraryView.Genres
com.apple.Music.LibraryView.Playlists
com.apple.Music.LibraryView.Playlists.Detail
com.apple.Music.ForYou
com.apple.Music.Browse
com.apple.Music.Radio
ByArtist
ByTitle
ByPlaylistType
ByLibraryAddedDate
ByAscendingYear
ByDescendingYear
com.apple.MobileMusicPlayer.MusicCarDisplayUI
CarDisplayAlbumsCell
PLAYBACK_RATE_SPEED_HALF
PLAYBACK_RATE_SPEED_ONE_AND_HALF
PLAYBACK_RATE
%d Song(s)
%d Minute(s)
ALBUM_DETAIL_FORMAT_FULL
ROOT
MusicAllowsCellularData
com.apple.mobileipod
com.apple.mobileipod.playbackPreferencesChanged-MusicAllowsCellularData
bundleID
T@"NSString",R,C,N,V_bundleID
[%@:%@]
identifier
T@"NSString",R,N,V_identifier
indexPath
T@"NSIndexPath",R,N,V_indexPath
CarDisplayPauseButton
CarDisplayRewindButton
CarDisplayFastForwardButton
defaultLeftButtonImage
T@"UIImage",&,N,V_defaultLeftButtonImage
defaultFastForwardButtonImage
T@"UIImage",&,N,V_defaultFastForwardButtonImage
leftButton
T@"UIButton",R,N,V_leftButton
playPauseButton
T@"UIButton",R,N,V_playPauseButton
fastForwardButton
T@"UIButton",R,N,V_fastForwardButton
progressActive
TB,N,V_progressActive
playImage
T@"UIImage",&,N,V_playImage
pauseImage
T@"UIImage",&,N,V_pauseImage
LIVE_STREAMING
PROGRESS_TIME_WITH_NEGATIVE_PREFIX
FuseUI
durationSnapshot
T{?=dddddffBB},N,V_durationSnapshot
PLAYBACK_QUEUE_TITLE
AppName_PlaybackQueue
POSITION_IN_PLAYLIST_FORMAT
nowPlayingInfo
T@"NSDictionary",&,N,V_nowPlayingInfo
queueManager
T@"MCDPlayableContentPlaybackManager",&,N,V_queueManager
nowPlayingViewController
T@"MCDNowPlayingViewController",&,N,V_nowPlayingViewController
backButton
T@"UIBarButtonItem",&,N,V_backButton
globalIndex
Tq,N,V_globalIndex
totalItemCount
Tq,N,V_totalItemCount
expectedPlaybackBundleIdentifier
T@"NSString",C,N,V_expectedPlaybackBundleIdentifier
showNavigationBar
TB,N,V_showNavigationBar
com.apple.MusicCarDisplayUI.playableContent.mediaRemote
v12@?0C8
v16@?0^{__CFArray=}8
v16@?0Q8
v24@?0^{__CFDictionary=}8^v16
v12@?0I8
v16@?0^{__CFString=}8
playbackCompletion
T@?,C,N,V_playbackCompletion
containerCompletion
T@?,C,N,V_containerCompletion
items
T@"NSMutableDictionary",&,N,V_items
supportedAPIMask
TI,N,V_supportedAPIMask
beginLoadingBlocks
T@"NSMutableDictionary",&,N,V_beginLoadingBlocks
beginLoadingTimeoutTimer
T@"MPWeakTimer",&,N,V_beginLoadingTimeoutTimer
playbackProgressTimeoutTimer
T@"MPWeakTimer",&,N,V_playbackProgressTimeoutTimer
modelSourceInvalidatedTimer
T@"MPWeakTimer",&,N,V_modelSourceInvalidatedTimer
shouldReloadAgain
TB,N,V_shouldReloadAgain
mediaRemoteNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteNotificationQueue
rootItem
T@"MCDPCItem",R,N,V_rootItem
appTitle
T@"NSString",R,N
imageSize
T{CGSize=dd},N,V_imageSize
<%@: %p - (%@) (%@) [%@%@]>
model
T@"MCDPCModel",R,W,N,V_model
contentItem
T^v,N,V_contentItem
currentlyPlaying
TB,N,V_currentlyPlaying
artworkImage
T@"UIImage",&,N,V_artworkImage
title
subtitle
artworkData
T@"NSData",R,N
Tf,R,N
isPlayable
TB,R,N
isContainer
isCloudItem
isExplicitItem
com.apple.MusicCarDisplayUI.playableContent.serialContainerAccess
<%@:%p - [%@:%@] - %@>
v40@?0@"NSArray"8{_NSRange=QQ}16@"NSError"32
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
v16@?0@"NSArray"8
cachedCount
Tq,N,V_cachedCount
serialAccessContainerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialAccessContainerQueue
cachedIndiciesByIdentifier
T@"NSMutableDictionary",&,N,V_cachedIndiciesByIdentifier
cachedItemsByIndicies
T@"NSMutableDictionary",&,N,V_cachedItemsByIndicies
T@"MCDPCItem",R,W,N,V_rootItem
showPlaybackProgress
TB,R,N,V_showPlaybackProgress
showCurrentlyPlayingIndex
Tq,R,N
delegate
T@"<MCDPCContainerDelegate>",W,N,V_delegate
nowPlayingChange
didInvalidate
didInitiatePlayback
didUpdateContent
appReadyToFetch
item
error
MCDError
com.apple.MCDSerialProcessingQueue
sharedInstance
T@"MCDMediaRemoteSerialQueueManager",R,N
mediaRemoteSerialQueue
T@"NSOperationQueue",&,N,V_mediaRemoteSerialQueue
Now Playing tab
CarDisplayForwardButton
height
Td,N,V_height
General
com.apple.MusicCarDisplay
com.apple.MusicCarPlay
CarPlay Now Playing Request - Playable Content
v24@?0@8@"UIImage"16
v24@?0@"MCDPlayableContentTableViewCell"8@"UIImage"16
CarDisplayThirdPartyRadioInfoButton
CarDisplayStopButton
CarDisplayPlayButton
CarDisplaySkipForwardInterval
CarDisplaySkipBackwardInterval
LIKE_TRACK_DEFAULT_TITLE
DISLIKE_TRACK_DEFAULT_TITLE
CANCEL
v16@?0@"UIAlertAction"8
requestController
T@"MPRequestResponseController",&,N,V_requestController
seeking
TB,N,GisSeeking,V_seeking
T@"<MCDPlayableContentQueueManagerDelegate>",W,N,V_delegate
externalDevice
T@"AVExternalDevice",&,N,V_externalDevice
albumArtwork
T@"UIImage",&,N,V_albumArtwork
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
T@"MCDPCModel",&,N,V_model
playingItemIndex
Tq,N,V_playingItemIndex
tableView
T@"UITableView",W,N,V_tableView
limitedUI
TB,N,V_limitedUI
CarDisplayCloudIcon
CarDisplayPlaybackProgressFull
playbackProgressView
T@"UIView",&,N,V_playbackProgressView
artworkImageView
T@"UIImageView",&,N,V_artworkImageView
explicitItemView
T@"UIImageView",&,N,V_explicitItemView
activityIndicatorView
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
showExplicit
TB,N,GisShowExplicit,V_showExplicit
showCloud
TB,N,GisShowCloud,V_showCloud
showActivityIndicator
TB,N,V_showActivityIndicator
shouldShowPlaybackProgress
TB,N,V_shouldShowPlaybackProgress
TB,N,V_container
artwork
T@"UIImage",&,N,V_artwork
kMCDIdentifierKey
MCD_identifier
T@"NSString",&,N
NO_CONTENT_TITLE
NO_CONTENT_SUBTITLE
LOADING_TITLE
FUSE_TIMEOUT_TITLE
Try Again
T@"<MCDErrorViewDelegate>",W,N,V_delegate
shouldEnableNetwork
TB,N,V_shouldEnableNetwork
com.apple.MusicCarDisplayUI.playableContent.navigationController
tabBarController
T@"UITabBarController",&,N,V_tabBarController
hostTabBarController
T@"UITabBarController",W,N,V_hostTabBarController
T@"NSString",&,N,V_bundleID
nowPlayingButton
T@"UIButton",&,N,V_nowPlayingButton
hasCarScreen
TB,N,V_hasCarScreen
TB,N,V_visible
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
inputAmount
inputRadius
default
inputQuality
B24@?0@"UIPress"8^B16
progressView
T@"MCDProgressView",R,N,V_progressView
artworkView
T@"UIImageView",R,N,V_artworkView
knobPressRecognizer
T@"UITapGestureRecognizer",R,N,V_knobPressRecognizer
backPressRecognizer
T@"UITapGestureRecognizer",R,N,V_backPressRecognizer
leftNudgePressRecognizer
T@"UITapGestureRecognizer",&,N,V_leftNudgePressRecognizer
rightNudgePressRecognizer
T@"UITapGestureRecognizer",&,N,V_rightNudgePressRecognizer
leftNudgeLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_leftNudgeLongPressRecognizer
rightNudgeLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_rightNudgeLongPressRecognizer
leftButtonLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_leftButtonLongPressRecognizer
fastForwardButtonLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_fastForwardButtonLongPressRecognizer
controlsFocusContainerGuide
T@"UIFocusContainerGuide",&,N,V_controlsFocusContainerGuide
previousTransportButtonImageIdentifier
T@"NSString",&,N,V_previousTransportButtonImageIdentifier
forwardTransportButtonImageIdentifier
T@"NSString",&,N,V_forwardTransportButtonImageIdentifier
playPauseTransportButtonImageIdentifier
T@"NSString",&,N,V_playPauseTransportButtonImageIdentifier
artistAlbumLabelConstraint
T@"NSLayoutConstraint",&,N,V_artistAlbumLabelConstraint
transportControlView
T@"MCDTransportControlView",R,N,V_transportControlView
playModeControlView
T@"MCDPlayModeControlView",R,N,V_playModeControlView
titleView
T@"MCDTitleView",R,N,V_titleView
T@"<MCDNowPlayingViewControllerDelegate>",W,N,V_delegate
dataSource
T@"<MCDNowPlayingViewControllerDataSource>",W,N,V_dataSource
responderViews
T@"NSArray",&,N,V_responderViews
CarDisplayRepeat
CarDisplayRepeatOne
repeatImage
T@"UIImage",&,N,V_repeatImage
repeatOneImage
T@"UIImage",&,N,V_repeatOneImage
contentManager
T@"MCDPlayableContentPlaybackManager",&,N,V_contentManager
alloc
init
isEqualToArray:
defaultCenter
postNotificationName:object:
arrayWithObjects:count:
sharedInstance
setNowPlayingIdentifiers:
firstPartyAppBundleIDs
.cxx_destruct
nowPlayingIdentifiers
_nowPlayingIdentifiers
initWithNibName:bundle:
setDelegate:
title
setTitle:
setTableDataSource:
setFilterType:
model
setImageSize:
currentCarPlayExternalDevice
limitedUI
limitedUIElements
containsObject:
_limitedUIChanged:
addObserver:selector:name:object:
_nowPlayingDidChange:
indexPath
length
_appRegisteredForContent:
initWithContainer:
removeObserver:
removeObserver:name:object:
setDataSource:
dealloc
class
container
stringWithFormat:
viewDidLoad
view
bounds
initWithFrame:
_externalSystemDarkGrayColor
setSeparatorColor:
setRowHeight:
reuseIdentifier
registerClass:forCellReuseIdentifier:
setAutoresizingMask:
addSubview:
setRemembersLastFocusedIndexPath:
viewWillAppear:
navigationController
viewControllers
count
setNavigationBarHidden:animated:
_clearTableViewSelectionAnimated:
_carScreen
_updateNowPlayingButtonVisibility
setVisible:
viewDidAppear:
setDidFinishInitialViewAppear:
bundleID
flashScrollIndicators
viewWillDisappear:
invalidate
indexPathsForSelectedRows
firstObject
viewDidDisappear:
alertController
dismissViewControllerAnimated:completion:
viewDidLayoutSubviews
frame
setFrame:
isVisible
_showTimeoutScreen
timerWithInterval:repeats:block:
_replacePlaceholderViewWithView:
localizedStringForKey:value:table:
appTitle
localizedStringWithFormat:
initWithTitle:buttonText:
placeholderView
superview
removeFromSuperview
setPlaceholderView:
setScrollEnabled:
reloadWithCompletion:
_showLoadingScreen
traitCollectionDidChange:
traitCollection
userInterfaceIdiom
layoutIfNeeded
navigationItem
setRightBarButtonItems:
preferredFocusEnvironments
cachedItemForIndex:
setAccessoryView:
indexPathForSelectedRow
compare:
setSelected:
setShowActivityIndicator:
isContainer
setContainer:
isPlayable
setSelectionStyle:
textLabel
setText:
subtitle
detailTextLabel
isExplicitItem
setShowExplicit:
isCloudItem
setShowCloud:
showPlaybackProgress
setShouldShowPlaybackProgress:
playbackProgress
setPlaybackProgress:
showCurrentlyPlayingIndex
currentlyPlayingApp
currentlyPlaying
setCurrentlyPlaying:
imageNamed:inBundle:compatibleWithTraitCollection:
artworkImage
setArtwork:
setNeedsLayout
beginLoadingItem:completion:
dequeueReusableCellWithIdentifier:forIndexPath:
_configureCell:forIndexPath:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_displayErrorAlertController:
loadingTimer
setLoadingTimer:
setSelectedIndexPath:
indexPathByAddingIndex:
_clearLoadingActivity
domain
isEqualToString:
setPushToNowPlaying:
initiatePlaybackAtIndexPath:completion:
indexAtPosition:
containerAtIndex:
initWithContainer:tabbedBrowsing:
showViewController:sender:
_displayLoadingActivity
performSelector:withObject:afterDelay:
cellForRowAtIndexPath:
localizedDescription
alertControllerWithTitle:message:preferredStyle:
setAlertController:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
identifier
array
indexPathForRow:inSection:
indexPathsForVisibleRows
addObject:
enumerateIndexesUsingBlock:
didFinishInitialLoad
reloadRowsAtIndexPaths:withRowAnimation:
addOperation:cancelAllOperations:
cachedCount
reloadTable
selectedIndexPath
cancelPreviousPerformRequestsWithTarget:selector:object:
deselectRowAtIndexPath:animated:
refreshWithCompletion:
reloadData
setCurrentlyPlayingApp:
navigationBar
_nowPlayingButtonTapped:
initWithCustomView:
pushToNowPlaying
_pushToNowPlaying:
getRemoteAppIsPlaying:
initWithModel:
setExpectedPlaybackBundleIdentifier:
setShowNavigationBar:
setDidFinishInitialLoad:
snapshotViewAfterScreenUpdates:
setAlpha:
animateWithDuration:animations:completion:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
container:didInvalidateIndicies:
containerWillChangeCount:
containerDidChangeCount:
errorViewDidTapButton:
contentScrollView
tableView:didFocusRowAtIndexPath:
didFinishInitialViewAppear
_tableView
_nowPlayingButton
_count
_selectedNextIndexPath
_dataSource
_reselectIndexPath
_loadingTimer
_delayTimer
_MCD_tableView
_serialQueue
_externalDevice
_limited
_hasCarScreen
_hasNoBrowsableContent
_didPushToNowPlayingAtLaunch
_hasTabbedBrowsing
_visible
_currentlyPlayingApp
_pushToNowPlaying
_didFinishInitialLoad
_didFinishInitialViewAppear
_container
_selectedIndexPath
_placeholderView
_alertController
canBecomeFirstResponder
whiteColor
setBackgroundColor:
layer
setCornerRadius:
overallBarView
setOpacity:
progressBarView
progress
performWithoutAnimation:
indicatorView
layoutSubviews
setProgress:
setOverallBarView:
setProgressBarView:
setIndicatorView:
_overallBarView
_progressBarView
_indicatorView
_progress
_setProgressViewColor:
setShouldResizeCurrentProgress:
_externalSystemMidGrayColor
currentProgressView
overallProgressView
shouldResizeCurrentProgress
sharedApplication
userInterfaceLayoutDirection
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
CGPath
setPath:
setMask:
setHighlighted:
highlighted
setOverallProgressView:
setCurrentProgressView:
_highlighted
_shouldResizeCurrentProgress
_playbackProgress
_overallProgressView
_currentProgressView
clearColor
systemFontOfSize:
_addLabelWithFont:
setTranslatesAutoresizingMaskIntoConstraints:
_flatImageWithColor:
initWithImage:
setHidden:
_addConstraints
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
intrinsicContentSize
setConstant:
setFont:
setTextColor:
setTextAlignment:
setAdjustsFontSizeToFitWidth:
setMinimumScaleFactor:
setExplicitTrack:
titleLabel
isExplicitTrack
_explicitImageView
_explicitImageViewWidthConstraint
_titlePaddingConstraint
_explicitTrack
_titleLabel
buttonWithType:
setImage:forState:
colorWithWhite:alpha:
numberWithInt:
setTitle:forState:
addSizeConstraintsForButton:
_updateButtonLayouts
isHidden
countByEnumeratingWithState:objects:count:
setActive:
sizeThatFits:
setSize:
arrayWithArray:
repeatButton
moreButton
shuffleButton
addToLibraryButton
playbackRateButton
fuseSubscriberLayout
setFuseSubscriberLayout:
activeButtonLayoutConstraints
setActiveButtonLayoutConstraints:
_fuseSubscriberLayout
_repeatButton
_moreButton
_shuffleButton
_addToLibraryButton
_playbackRateButton
_activeButtonLayoutConstraints
setShowsTouchWhenHighlighted:
setAdjustsImageWhenDisabled:
setAdjustsImageWhenHighlighted:
setCharge:
isEnabled
_updateButtonStyle
isSelected
isFocused
setNeedsFocusUpdate
tintColor
isHighlighted
colorWithAlphaComponent:
tintColorForUnhighlightedTextLabel
showBezelInTouch
addSublayer:
colorForKnobFocusLayer
colorForKnobFocusLayerSelected
shouldUpdateButtonOpacityForKnobUnfocused
updateButtonOpacityForKnobUnfocused
colorForKnobContentSelected
colorForKnobFocused
colorForTouchContentSelected
colorForTouchFocusLayerSelected
colorForTouchFocusLayer
CGColor
imageView
setTintColor:
filterWithType:
setCompositingFilter:
canBecomeFocused
didUpdateFocusInContext:withAnimationCoordinator:
willMoveToWindow:
setShowBezelInTouch:
_buttonBackGroundColorTouch
hideBezelInKnob
setHideBezelInKnob:
_focusColorLayer
_showBezelInTouch
_hideBezelInKnob
disabledTextColor
setEnabled:
setDisabledTextColor:
_disabledTextColor
artwork
imageWithSize:
albumImageWithFallbackForSize:doubleLineRow:
bundleWithIdentifier:
_capabilityForKey:
integerValue
supportsFocus
setNumberStyle:
setUsesSignificantDigits:
setMaximumFractionDigits:
setUsesGroupingSeparator:
stringFromNumber:
numberWithDouble:
isEqualToNumber:
tracksTiledArtworkCatalogWithRows:columns:
type
song
album
artist
playlist
subviews
copy
getIndexes:
numberWithUnsignedInteger:
appendFormat:
appendString:
buttonWithHeight:
addTarget:action:forControlEvents:
initWithBarButtonSystemItem:target:action:
setWidth:
_externalSystemGrayColor
contentView
_externalSystemWhiteColor
boldSystemFontOfSize:
stringFromSeconds:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
sharedNetworkObserver
isMusicCellularStreamingAllowed
blackColor
initWithBundleID:
_modelDidInvalidate:
_nowPlayingIdentifiersChanged:
initWithBundleID:stack:
_setupView
userInfo
valueForKey:
containerForRoot
setNavigationBarHidden:
initWithBundleID:model:
_populateStack
_createSectionedRootViewController
_createRootViewController
setViewControllers:animated:
_updateStackForPlaying:
visibleViewController
popToViewController:animated:
pushViewController:animated:
objectAtIndexedSubscript:
isValidForRefreshedParent:
selectedViewController
invalidateAndReloadTabsWithCompletion:
reloadAgainIfInvalidationCalled
objectEnumerator
nextObject
stackItemWithContainer:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
refreshNavigationStackForLaunch
currentStack
_model
_rootContainer
_stackToRebuild
_hasBrowsableContent
_hasSectionedContent
_hasLoaded
_bundleID
_identifier
_indexPath
_createSubviews
_defaultImageForIdentifier:
defaultLeftButtonImage
imageWithRenderingMode:
defaultFastForwardButtonImage
_updateProgressActive
setMCD_identifier:
setProgressActive:
setPauseImage:
setPlayImage:
leftButton
playPauseButton
fastForwardButton
progressActive
playImage
pauseImage
setDefaultLeftButtonImage:
setDefaultFastForwardButtonImage:
_progressActive
_leftButton
_playPauseButton
_fastForwardButton
_playImage
_pauseImage
_defaultLeftButtonImage
_defaultFastForwardButtonImage
monospacedDigitSystemFontOfSize:weight:
didMoveToWindow
window
_displayLinkTick:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
setPreferredFramesPerSecond:
invalidateIntrinsicContentSize
setPaused:
timeIntervalSinceReferenceDate
_updateLabelsForElapsedTime:duration:
_updateProgressForElapsedTime:duration:
fuseUIBundle
setDurationSnapshot:
durationSnapshot
_timeLabel
_timeRemainingLabel
_liveLabel
_displayLink
_lastTargetTimestamp
_durationSnapshot
initWithDelegate:model:
queueManager
beginRequestObservation
endRequestObservation
nowPlayingViewController
setNowPlayingViewController:
setTitleView:
_updateBackButton
_localeDidChange:
setLineBreakMode:
_adjustRightTitleLabelToFit
setRightBarButtonItem:
upNextButtonTapped:
sizeToFit
addChildViewController:
didMoveToParentViewController:
setRightTitle:
initWithContentManager:
_handleWillAppear
viewWillDisappear
setHidesBackButton:
contentManagerReloadData:
globalIndex
totalItemCount
contentManager:displayItemIndex:totalItemCount:
transportControlView
rightBarButtonItems
setGlobalIndex:
setTotalItemCount:
numberWithLong:
numberWithInteger:
_popViewControllerAnimated
popViewControllerAnimated:
contentManager:shouldShowPlaybackQueue:
contentManagerInitiatedPlaybackFromPlaybackQueue:
contentManager:presentViewController:
contentManagerCompletedAllPlayback:
willMoveToParentViewController:
expectedPlaybackBundleIdentifier
showNavigationBar
nowPlayingInfo
setNowPlayingInfo:
setQueueManager:
backButton
setBackButton:
_rightTitleLabel
_rightTitleLabelBarButtonItem
_playbackQueueBarButtonItem
_playbackQueueViewController
_handledWillAppear
_showNavigationBar
_expectedPlaybackBundleIdentifier
_nowPlayingInfo
_queueManager
_nowPlayingViewController
_backButton
_globalIndex
_totalItemCount
dictionary
_registerForClientContent
setSupportedAPIMask:
_browsableContentDidRegisterNotification:
_registerNotifications
_dataSourceInvalidated:
_contentItemsUpdated:
_nowPlayingDidChangeNotification:
modelSourceInvalidatedTimer
setItems:
setModelSourceInvalidatedTimer:
setShouldReloadAgain:
shouldReloadAgain
objectForKeyedSubscript:
itemsFromMRContentItems:
postNotificationName:object:userInfo:
applicationProxyForIdentifier:
localizedNameForContext:
localizedName
indexPathWithIndexes:length:
_initWithModel:rootItem:indexPath:
supportedAPIMask
_finishBeginLoadingNotification:
beginLoadingBlocks
setObject:forKeyedSubscript:
initWithName:object:userInfo:
_setupBeginLoadingTimeoutTimerWithCompletion:
numberWithUnsignedInt:
_errorForNotification:
_invalidateBeginLoadingTimeoutTimer
_invalidatePlaybackProgressTimeoutTimer
_setupPlaybackProgressTimeoutTimerWithCompletion:
setPlaybackCompletion:
_finishPlaybackNotification:
playbackCompletion
objectForKey:
mutableCopy
setBeginLoadingTimeoutTimer:
beginLoadingTimeoutTimer
setPlaybackProgressTimeoutTimer:
playbackProgressTimeoutTimer
items
_initWithModel:MRContentItem:
setContentItem:
artworkData
imageWithData:
size
scaledImageWithSize:
setArtworkImage:
arrayByAddingObject:
beginLoadingItemAtIndexPath:completion:
getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:
getNowPlayingIdentifiersWithCompletion:
getCountOfChildrenAtIndexPath:withCompletion:
getChildrenAtIndexPath:inRange:completion:
rootItem
imageSize
containerCompletion
setContainerCompletion:
setBeginLoadingBlocks:
mediaRemoteNotificationQueue
setMediaRemoteNotificationQueue:
_shouldReloadAgain
_supportedAPIMask
_rootItem
_playbackCompletion
_containerCompletion
_items
_beginLoadingBlocks
_beginLoadingTimeoutTimer
_playbackProgressTimeoutTimer
_modelSourceInvalidatedTimer
_mediaRemoteNotificationQueue
_imageSize
contentItem
_contentItem
_currentlyPlaying
_artworkImage
_nowPlayingIdentifiersDidChange:
setCachedCount:
serialAccessContainerQueue
setCachedItemsByIndicies:
setCachedIndiciesByIdentifier:
keyEnumerator
allObjects
indexSet
cachedIndiciesByIdentifier
addIndex:
cachedItemsByIndicies
allKeys
cachedIndexByIdentifier:
indexPathByRemovingLastIndex
getChildrenInRange:completion:
getCountOfChildrenWithCompletion:
getPlaybackProgressSupportForChildrenWithCompletion:
fetchContentWithCompletion:
beginLoadingItemWithCompletion:
containerForItem:
setShowPlaybackProgress:
setCount:
updateRootItemWithCompletion:
cachedItemForIdentifier:
delegate
setSerialAccessContainerQueue:
_showPlaybackProgress
__supportedDelegateCalls
_cachedCount
_delegate
_serialAccessContainerQueue
_cachedIndiciesByIdentifier
_cachedItemsByIndicies
initWithBytes:length:
bytes
setName:
setMaxConcurrentOperationCount:
mediaRemoteSerialQueue
cancelAllOperations
isCancelled
addExecutionBlock:
addOperation:
setMediaRemoteSerialQueue:
_mediaRemoteSerialQueue
externalSystemTealColor
setTitleColor:forState:
_externalBarBackgroundColor
setHeight:
setNumberOfLines:
imageFlippedForRightToLeftLayoutDirection
titleRectForContentRect:
imageRectForContentRect:
titleColorForState:
removeFromSuperlayer
height
_leadingBorder
_layoutFrameSize
_height
_performRequest
requestController
beginAutomaticResponseLoading
endAutomaticResponseLoading
_setupRequest
setRequest:
setTracklistRange:
pathWithRoute:bundleID:playerID:
setPlayerPath:
propertySetWithProperties:
initWithProperties:relationships:
setPlayingItemProperties:
setQueueItemProperties:
setLabel:
tableView
object
response
tracklist
indexPathForGlobalIndex:
itemAtIndexPath:
_itemAtIndexPath:
metadataObject
anyObject
playingItemIndexPath
_songForIndexPath:
playingItemGlobalIndex
globalItemCount
playingItemIndex
performRequest:options:completion:
scale
_currentlyPlayingSong
artworkCatalog
isArtworkVisuallyIdenticalToCatalog:
setArtworkCatalog:
setAlbumArtwork:
setDestinationScale:
setFittingSize:
setDestination:configurationBlock:
_currentlyPlayingItem
state
numberOfSections
_processArtwork
_numberOfItemsInPlaybackQueue
_updateTrackQueueIndex
modelResponseDidInvalidate:
_adjustedIndexPathForPlaybackQueue:
name
isExplicitSong
screen
setCacheIdentifier:forRequestingContext:
changeItemCommand
changeToItem:
performRequest:completion:
albumArtwork
duration
shuffleType
repeatType
seekCommand
preferredForwardJumpIntervals
doubleValue
preferredBackwardJumpIntervals
_jumpBackwardInterval
_skipIntervalButtonImageForInterval:
previousItem
likeCommand
dislikeCommand
value
stop
pause
_jumpForwardInterval
skipIntervalImageForInterval:baseImage:font:scale:
nextItem
isSeeking
beginSeekWithDirection:
setSeeking:
endSeek
jumpByInterval:
_handleHamburgerActionSheet
play
_performChangeRequest:
_alertActionForFeedbackCommand:fallbackTitle:
localizedShortTitle
localizedTitle
changeValue:
_setChecked:
shuffleCommand
advance
repeatCommand
playbackRateCommand
supportedPlaybackRates
nowPlayingViewControllerGetPlaybackRate:
indexOfObject:
floatValue
setPlaybackRate:
preferredPlaybackRate
numberWithFloat:
wishlistCommand
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
artistTextForNowPlayingController:
albumTextForNowPlayingController:
titleForNowPlayingController:
backgroundArtForNowPlayingController:
nowPlayingViewControllerIsShowingExplicitTrack:
durationSnapshotForNowPlayingViewController:
nowPlayingViewControllerIsPlaying:
shuffleTypeForNowPlayingViewController:
repeatTypeForNowPlayingViewController:
likedForNowPlayingViewController:
nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:
nowPlayingViewController:buttonShouldBeActive:
nowPlayingViewController:didSendAction:state:
nowPlayingViewControllerCanShuffle:
nowPlayingViewControllerToggleShuffle:
nowPlayingViewControllerCanRepeat:
nowPlayingViewControllerToggleRepeat:
nowPlayingViewControllerCanShowAddToLibrary:
nowPlayingViewControllerAddToLibrary:
nowPlayingViewControllerIsFuseSubscriber:
nowPlayingViewControllerCanShowAlbumLink:
nowPlayingViewControllerDidRequestAlbum:
nowPlayingViewControllerCanShowChangePlaybackRate:
nowPlayingViewControllerChangePlaybackRate:
nowPlayingViewControllerCanShowMore:
nowPlayingViewControllerMore:
setTableView:
setLimitedUI:
setRequestController:
externalDevice
setExternalDevice:
setModel:
setPlayingItemIndex:
_limitedUI
_seeking
_requestController
_albumArtwork
_artworkCatalog
_playingItemIndex
initWithStyle:reuseIdentifier:
setHighlighted:animated:
playbackProgressView
setAccessoryType:
_setCloudAccessoryView:
initWithImage:highlightedImage:
initWithActivityIndicatorStyle:
setActivityIndicatorView:
activityIndicatorView
startAnimating
isShowCloud
setHighlightedTextColor:
setIndentationWidth:
setSeparatorInset:
artworkImageView
setArtworkImageView:
setContentMode:
setImage:
setClipsToBounds:
_setContinuousCornerRadius:
renderingMode
setHighlightedImage:
setIndentationLevel:
shouldShowPlaybackProgress
setPlaybackProgressView:
accessoryView
text
isShowExplicit
explicitItemView
setExplicitItemView:
showActivityIndicator
_showExplicit
_showCloud
_showActivityIndicator
_shouldShowPlaybackProgress
_artwork
_playbackProgressView
_artworkImageView
_explicitItemView
_activityIndicatorView
MCD_identifier
initWithTitle:subtitle:
_externalSystemExtraDarkGrayColor
initForAutolayout
setPriority:
addConstraints:
setActivityIndicatorViewStyle:
retryButtonPressed:
addTarget:action:forEvents:
shouldEnableNetwork
setShouldEnableNetwork:
_shouldEnableNetwork
visible
_loadAllHostTabs
hasCarScreen
tabBar
nowPlayingButton
_setAccessoryView:
updateTitleAndTabBarItemsAtIndexes:
selectedIndex
_hostTabAtIndex:dummyTab:
setViewControllers:
initWithTitle:image:selectedImage:
setTabBarItem:
setHasCarScreen:
tabBarController:shouldSelectViewController:
tabBarController:didSelectViewController:
tabBarController:willBeginCustomizingViewControllers:
tabBarController:willEndCustomizingViewControllers:changed:
tabBarController:didEndCustomizingViewControllers:changed:
tabBarControllerSupportedInterfaceOrientations:
tabBarControllerPreferredInterfaceOrientationForPresentation:
tabBarController:interactionControllerForAnimationController:
tabBarController:animationControllerForTransitionFromViewController:toViewController:
tabBarController
setTabBarController:
hostTabBarController
setHostTabBarController:
setBundleID:
setNowPlayingButton:
serialQueue
setSerialQueue:
_tabBarController
_hostTabBarController
setValue:forKey:
setFilters:
setShouldRasterize:
albumArtistButtonTapped:
_initializeTransportControls
_repeatButtonTouchUp:
_shuffleButtonTouchUp:
_moreButtonTouchUp:
_addToLibraryButtonTouchUp:
_playbackButtonTouchUp:
addLayoutGuide:
setPreferredFocusEnvironments:
setResponderViews:
_leftNudgePress:
initWithTarget:action:
setLeftNudgePressRecognizer:
leftNudgePressRecognizer
setAllowedPressTypes:
addGestureRecognizer:
_rightNudgePress:
setRightNudgePressRecognizer:
rightNudgePressRecognizer
_leftButtonLongPress:
setLeftNudgeLongPressRecognizer:
leftNudgeLongPressRecognizer
requireGestureRecognizerToFail:
_fastForwardButtonLongPress:
setRightNudgeLongPressRecognizer:
rightNudgeLongPressRecognizer
setView:
backgroundColor
_hidesShadow
_setHidesShadow:
_updateTransportControl:withDefaultImage:actionType:
dataSource
_updatePlayModesState
_updateShuffleStateWithType:
_updateRepeatStateWithType:
_updatePlaybackRate
setRepeatType:
initWithString:attributes:
setAttributedTitle:forState:
artistAlbumLabelConstraint
widthAnchor
constraintEqualToConstant:
setArtistAlbumLabelConstraint:
updatePlayControls
_sendAction:withState:
_respondToHeldAction
_sendHeldAction
_playPauseButtonTouchUp:
_leftButtonTouchDown:
_leftButtonTouchUp:
_fastForwardButtonTouchDown:
_fastForwardButtonTouchUp:
setLeftButtonLongPressRecognizer:
leftButtonLongPressRecognizer
setFastForwardButtonLongPressRecognizer:
fastForwardButtonLongPressRecognizer
image
objectsPassingTest:
pressesBegan:withEvent:
pressesChanged:withEvent:
pressesEnded:withEvent:
pressesCancelled:withEvent:
loadView
_didUpdateSupportedCommandsNotification:
playModeControlView
titleView
progressView
artworkView
knobPressRecognizer
backPressRecognizer
controlsFocusContainerGuide
setControlsFocusContainerGuide:
previousTransportButtonImageIdentifier
setPreviousTransportButtonImageIdentifier:
forwardTransportButtonImageIdentifier
setForwardTransportButtonImageIdentifier:
playPauseTransportButtonImageIdentifier
setPlayPauseTransportButtonImageIdentifier:
_isScrubbing
_heldAction
_transportViewController
_playModeViewController
_navigationBar
_albumArtistLabelButton
_highTouchMode
_navbarColor
_navbarHidesShadow
_viewHasShifted
_transportControlView
_playModeControlView
_titleView
_progressView
_artworkView
_knobPressRecognizer
_backPressRecognizer
_leftNudgePressRecognizer
_rightNudgePressRecognizer
_leftNudgeLongPressRecognizer
_rightNudgeLongPressRecognizer
_leftButtonLongPressRecognizer
_fastForwardButtonLongPressRecognizer
_controlsFocusContainerGuide
_previousTransportButtonImageIdentifier
_forwardTransportButtonImageIdentifier
_playPauseTransportButtonImageIdentifier
_artistAlbumLabelConstraint
responderViews
_responderViews
repeatOneImage
repeatImage
setRepeatImage:
setRepeatOneImage:
_repeatImage
_repeatOneImage
contentManager
setContentManager:
_contentManager
presentingViewController
_presentingViewControllerView
Posting MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
Playable Content API implemented? %d
Showing loading screen
Showing timeout screen
Retrying, showing loading screen
Cell displayed: title: %{public}@, subtitle: %{public}@, showExplicit: %{public}d, showCloud: %{public}d, shouldShowPlaybackProgress: %{public}d, playbackProgress: %{public}f, currentlyPlaying: %{public}d
Loading content timed out, displaying error: %{public}@
Selected playable content, preparing to play back
Initiating playback failed due to timeout
Initiating playback failed, displaying error: %{public}@
Selected container, preparing to push to container
Selected neither a container nor a playable cell
Some content have invalidated, preparing to reload table view: %{public}@, indicies: %{public}@
Content that has been been invalidated is visible, reloading those index paths in table view: %{public}@, indicies: %{public}@
Content has been invalidated, but view isn't finished loading yet. Container: %{public}@, indicies: %{public}@
Asked to reload incides for content that is not visible
Fetching content for root container
Fetching content for non-root container: %{public}@
Refreshing content complete for container: %{public}@
Root container has content
Root container does not have content
Pushing to now playing
Currently playing app, will push to Now Playing
Now Playing button tapped in table view
Pushing to Now Playing view
Loading content in table controller for the first time since app registered
Initializing a new view for bundle: %@
Received kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
Rebuilding stack for app launch
Creating view controller for sectioned browsing
Creating view controller for table view browsing
App does not use browsable content API, pushing to now playing
Now Playing view already frontmost when Now Playing app tapped
popping from view controller to Now Playing view
Sending play command since the app supports immediate playback
Show Now Playing view on app foreground
Playable content invalidated, refreshing all index paths
Fetched current view controllers to reload after playable content invalidated: %@
Adding MCDBrowsableContentTableViewController after model invalidate
Container is valid for table view
Container isn't valid for refreshed parent for table views
Next view controller is neither a table view nor now playing view when current VC is a table view, which shouldn't be here: %{public}@
Adding MCDBrowsableNavigationController to view controllers after model invalidate
Container is valid for tab bar
Container isn't valid for tab bar
Next view controller is neither a table view nor a now playing view when current VC is a tab bar, which shouldn't be here: %{public}@
Adding now playing view controller for model invalidate
Setting view controllers after model invalidate
current stack: %@
Row selected in Playback Queue, dismissing Playback Queue screen
All playback completed, dismissing Now Playing screen
Data source invalidated
Posting MCDPCDidInvalidateNotificationName
Data source invalidated, but we're throttling since it was called too soon
Data source invalidated, but we haven't finished our initial load yet
Completed invalidation, resetting
Got a call to invalidate while fetching content, fetching again
Didn't get a call to invalidate
Content items updated
Content items updated for wrong app, expected %{public}@, got %{public}@
Got content items updated notification, but no updated content items
Posting MCDPCDidUpdateContentNotificationName
Posting MCDPCNowPlayingDidChangeNotificationName
Posting MCDPCAppReadyToFetchNotificationName
beginLoadingPlayableContent API is not implemented
Beginning to load item at index path: %{public}@
beginLoadingPlayableContent API is not implemented, receiving unsupported operation for index path: %{public}@
beginLoadingPlayableContent API error, code: %d
beginLoadingPlayableContent API in progress for %{public}@
beginLoadingPlayableContent API timed out, completion block wasn't called for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification for index path: %{public}@, beginLoadingPlayableContent API error: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification without error for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification with error: %{public}@, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented and null completion block for index path: %{public}@
childItemsDisplayPlaybackProgress API is not implemented
Preparing to fetch if children support playback progress for index path: %{public}@
Fetched children supporting playback progress for index path: %{public}@
Children support playback progress timed out for: %{public}@
now playing identifiers API is not implemented
Preparing to fetch now playing identifiers
Fetched now playing identifiers
Fetching count of children at index path: %@
Completed fetching count of children at index path: %{public}@, number of children: %{public}llu
Fetching children at index path: %{public}@
Completed fetching children at index path: %{public}@
Finishing initial load
%{public}@ is not currently playing, %{public}@ is actually playing
Got in to an unexpected state where the now playing app is %@ but state is kMRPlaybackStateUnknown
%{public}@ is now playing app? %{public}@
Asking MediaRemote to initialize playback for index path: %{public}@
Received kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
Adding %{public}@ to items dictionary
Updating %{public}@ to items dictionary
Updating artwork to %{public}@
Artwork is nil for %{public}@
Content items updated, preparing to find indicies to update
Index was nil for %{public}@
Contents updated for container: %{public}@, indicies: %{public}@
Now Playing Identifiers changed, checking to see what is now playing
Item currently playing. Identifier: %{public}@
Item not currently playing. Identifier: %{public}@
Item currently playing has changed, updating indicies
Indicies invalidated based on now playing identifiers
Starting to refresh for %@
Finishing refresh for %@
Starting to refresh all items, beginning with beginLoadingItem
Begin Loading completed for refreshing all items
Preparing to begin loading item %@
Finished begin loading item %@
Finished adding items to cache
Cancelling all operations on MCDMediaRemoteSerialQueueManager
Operation is cancelled, not executing
Sending reverse seek command
Sending end reverse seek command
Sending skip backwards command
Opening action sheet for like/dislike command
Sending previous item command
Sending stop command
Sending pause command
Sending play command
Sending forward seek command
Sending end forward seek command
Sending skip forward command
Sending forward item command
Retry button pressed
Loading content in tab controller for the first time since app registered
finished loading content after the view appeared, setting tabs
Received MCDPCNowPlayingDidChangeNotificationName
Showing Now Playing button in tab bar
Hiding Now Playing button in tab bar
Now playing button tapped in tab bar, pushing to Now Playing screen
Some content has invalidated, preparing to reload tab views for container: %{public}@, indicies: %{public}@
Reloading specific tabs since they are invalid for container: %{public}@, indicies: %{public}@
Reloading all host tabs since table views are nil for container: %{public}@, indicies: %{public}@
Tab view not visible for container indicies reload: %{public}@, indicies: %{public}@
No tabs available from host, loading default tabs
Number of tabs returned from client: %{public}ld
Refreshing view controller %{public}@ because it is the selected index: %{public}ld
View controller %{public}@ is not selected but is reloaded, begin loading item
Dummy tab, no need to refresh
Reloading tabs after invalidate
Finished reloading tabs after invalidate
Tab selected, reloading content for %{public}@
Adding title for tab: %@, artwork is nil? %@
Container finished initial load when viewWillAppear is called, start loading host tabs
viewWillAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
Container finished initial load when viewDidAppear is called, start loading host tabs
viewDidAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
traitCollectionDidChange is called
Shuffle: %d Repeat: %d Show CTA: %d Bookmark: %d Change Playback Rate: %d
Got called to reload Now Playing data, but view is not onscreen so skipping the reload
Reloading Now Playing data
Now Playing info: Title: %@ Artist: %@ Album: %@ Explicit: %d
MCDBrowsableContentUtilities
MCDBrowsableContentTableViewController
UITableViewDataSource
NSObject
UITableViewDelegate
UIScrollViewDelegate
UIGestureRecognizerDelegate
MCDPCContainerDelegate
MCDErrorViewDelegate
_MCDBrowsableTableView
MCDProgressBarView
MCDPlaybackProgressView
MCDTitleView
MCDPlayModeControlView
MCDButton
MCDLabelButton
MCDBarButton
CarDisplay
MCDPlayModeButton
MCDPlayableContentViewController
UINavigationControllerDelegate
_MCDStackItem
MCDTransportControlView
MCDProgressView
MCDMediaRemoteNowPlayingViewController
MCDPlayableContentQueueManagerDelegate
MCDPCModel
MCDPCItem
MCDPCContainer
MCDMediaRemoteSerialQueueManager
MCDNowPlayingButton
MCDPlayableContentPlaybackManager
MPRequestResponseControllerDelegate
MCDNowPlayingViewControllerDataSource
MCDNowPlayingViewControllerDelegate
MCDPlayableContentTableViewCell
MusicCarDisplayAdditions
MCDNoContentView
MCDLoadingContentView
MCDErrorLoadingView
MCDBrowsableContentNavigationController
UITabBarControllerDelegate
MCDNowPlayingViewController
_MCDNowPlayingHostView
MCDRepeatButton
MCDPlayableContentQueueTableViewController
MCDAlertController
@16@0:8
v24@0:8@16
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
@32@0:8@16@24
q24@0:8@16
@32@0:8@16q24
B32@0:8@16@24
@24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
v40@0:8@16@24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
@40@0:8@16@24@32
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v32@0:8@"MCDPCContainer"16@"NSIndexSet"24
v24@0:8@"MCDPCContainer"16
v24@0:8@"MCDErrorLoadingView"16
@28@0:8@16B24
v20@0:8B16
v24@0:8@?16
@"UITableView"
@"MCDNowPlayingButton"
@"NSIndexPath"
@"_UIFilteredDataSource"
@"MPWeakTimer"
@"UIView"
@"NSObject<OS_dispatch_queue>"
@"AVExternalDevice"
@"MCDPCContainer"
@"UIAlertController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
d16@0:8
@"UIImageView"
@"NSLayoutConstraint"
@"UILabel"
{CGSize=dd}16@0:8
@"MCDRepeatButton"
@"MCDPlayModeButton"
@24@0:8q16
@"CALayer"
@"UIColor"
@36@0:8{CGSize=dd}16B32
v36@0:8@16@24B32
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"MCDPCModel"
@"NSString"
@"UIButton"
@"UIImage"
v72@0:8{?=dddddffBB}16
v32@0:8d16d24
{?=dddddffBB}16@0:8
@"MCDProgressBarView"
@"CADisplayLink"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
v40@0:8@16q24q32
v28@0:8@"MCDPlayableContentPlaybackManager"16B24
v40@0:8@"MCDPlayableContentPlaybackManager"16q24q32
v24@0:8@"MCDPlayableContentPlaybackManager"16
v32@0:8@"MCDPlayableContentPlaybackManager"16@"UIViewController"24
q16@0:8
v24@0:8q16
@"UIBarButtonItem"
@"MCDPlayableContentQueueTableViewController"
@"NSDictionary"
@"MCDPlayableContentPlaybackManager"
@"MCDNowPlayingViewController"
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
v32@0:8{CGSize=dd}16
@?16@0:8
I16@0:8
v20@0:8I16
@"MCDPCItem"
@"NSMutableDictionary"
{CGSize="width"d"height"d}
@32@0:8@16^v24
f16@0:8
v24@0:8^v16
^v16@0:8
v40@0:8{_NSRange=QQ}16@?32
{?="didInvalidateRootItem"b1"didInvalidateIndicies"b1"willChangeCount"b1"didChangeCount"b1}
@"<MCDPCContainerDelegate>"
v28@0:8@?16B24
@"NSOperationQueue"
@24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
{?=dddddffBB}24@0:8@16
@"NSString"24@0:8@"MCDNowPlayingViewController"16
@"UIImage"24@0:8@"MCDNowPlayingViewController"16
B24@0:8@"MCDNowPlayingViewController"16
{?=dddddffBB}24@0:8@"MCDNowPlayingViewController"16
q24@0:8@"MCDNowPlayingViewController"16
B56@0:8@16q24o^@32@40o^B48
B32@0:8@16q24
B56@0:8@"MCDNowPlayingViewController"16q24o^@32@"NSString"40o^B48
B32@0:8@"MCDNowPlayingViewController"16q24
v40@0:8@"MCDNowPlayingViewController"16q24q32
v24@0:8@"MCDNowPlayingViewController"16
@"NSNumber"24@0:8@"MCDNowPlayingViewController"16
@"MPRequestResponseController"
@"<MCDPlayableContentQueueManagerDelegate>"
@"MPArtworkCatalog"
@32@0:8q16@24
v24@0:8B16B20
@"UIActivityIndicatorView"
@"<MCDErrorViewDelegate>"
B32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"NSArray"24
v36@0:8@"UITabBarController"16@"NSArray"24B32
Q24@0:8@"UITabBarController"16
q24@0:8@"UITabBarController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UITabBarController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UITabBarController"16@"UIViewController"24@"UIViewController"32
@28@0:8Q16B24
@"UITabBarController"
v32@0:8q16q24
@"UIViewController"
@"UINavigationBar"
@"MCDLabelButton"
@"MCDTransportControlView"
@"MCDPlayModeControlView"
@"MCDTitleView"
@"<MCDNowPlayingViewControllerDelegate>"
@"<MCDNowPlayingViewControllerDataSource>"
@"MCDProgressView"
@"UITapGestureRecognizer"
@"UILongPressGestureRecognizer"
@"UIFocusContainerGuide"
@fff
333333
333333
