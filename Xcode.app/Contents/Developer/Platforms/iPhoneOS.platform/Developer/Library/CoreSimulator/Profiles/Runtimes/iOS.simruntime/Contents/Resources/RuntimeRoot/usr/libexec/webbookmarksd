arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
numberWithInt:
numberWithBool:
stringWithFormat:
alloc
init
_reloadConfigurationDataIfNecessary
_cloudConfigurationAssetsSortedByVersionNumber
countByEnumeratingWithState:objects:count:
state
localURL
URLByAppendingPathComponent:
dataWithContentsOfURL:
propertyListWithData:options:format:error:
class
isKindOfClass:
applyRemoteConfiguration:
initWithAssetType:
runQueryAndReturnError:
count
attributes
objectForKey:
compare:
sortedArrayUsingComparator:
standardUserDefaults
doubleForKey:
setDouble:forKey:
firstObject
beginDownloadWithOptions:
resumeDownloadAndReturnError:
accessLevel
sharedConfiguration
platformBuiltInConfiguration
remoteConfiguration
shouldUseLongLivedOperationsToSaveRecords
.cxx_destruct
_assetsSortedByVersionNumber
_remoteConfigurationDictionary
_fetchedAssetData
defaultStore
additionalStoreWithIdentifier:
distantPast
setWbsDelegate:
_setCloudKitDataNeedsFetching:
defaultCenter
_syncedDevicesStoreDidUpdate:
backingStore
addObserver:selector:name:object:
_userRequestsStoreDidUpdate:
_cloudKitDataDidUpdateOnServer:
removeObserver:
synchronize
cloudTabsAreEnabled
cloudTabStore:cloudTabsEnabledDidChange:
date
resetSyncedCloudTabDevicesAndCloseRequestsFromKVS
_notifyCloudTabStoreDidUpdateWithType:
handleCloseTabRequestsFromKVS
fetchSyncedCloudTabDevicesAndCloseRequestsFromCloudKit
notificationWithName:object:userInfo:
postNotification:
_currentDeviceUUID
UUIDString
_shouldUseCloudKitForSavingCurrentDevice
dictionaryRepresentationOfCurrentDeviceInCloudKit
dictionaryForKey:
initWithDictionary:uuid:
syncedCloudTabDevices
synchronizeCloudTabDevices
errorWithCode:
synchronizeWithCompletionHandler:
_cloudKitDataNeedsFetching
dictionaryRepresentation
isEqualToDictionary:
syncAgentIsAvailable
arrayWithObject:
addObject:
closeTab:onDevice:
closeTabs:onDevice:
closeAllTabsOnDevice:
allKeys
removeObjectForKey:
deleteAllDevicesFromCloudKit
saveCurrentDeviceCloudTabs:completion:
canSaveCloudTabsForCurrentDevice
currentDevice
name
clearTabsForFirstDuplicateDeviceInCloudKitWithName:
isCloudTabDeviceDictionary:
isEphemeralDeviceInDictionary:
isEqualToString:
boolValue
enumerateKeysAndObjectsUsingBlock:
safari_dateForKey:
initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:
setDictionary:forKey:
atLeastOneOtherActiveDeviceIsRegisteredInCloudKit
currentDeviceIsRegisteredInCloudKit
_sf_dateForKey:
timeIntervalSinceDate:
setObject:forKey:
_waitForInitialCloudKitFetchToComplete:
_removeConflictingDevice
initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:isEphemeralDevice:
isEqual:
saveCurrentCloudTabDeviceDictionaryToCloudKit:
sharedBrowserSavedState
browserControllerUUIDs
clearTabsForCurrentDevice
array
savedTabsStateForBrowserControllerWithUUID:
safari_arrayForKey:
safari_stringForKey:
URLWithString:
length
initWithUUIDString:
initWithURL:uuid:title:isShowingReader:readerScrollPosition:
_requestUpdateFromServer
_refreshTimerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
invalidate
_appWillActivate
_sf_safariDefaults
boolForKey:
dictionaryWithContentsOfFile:
mutableCopy
initWithCapacity:
writeToFile:atomically:
_callFetchCloudKitDataCompletionHandlers
handleCloseTabRequestsFromCloudKit
saveCloudTabsUsingCloudTabStore:
_storeForIdentifier:
tabUUID
cloudTabStore:didReceiveTabCloseRequest:
sharedCloudTabStore
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
didUpdateDevicesAndCloseRequestsFromCloudKitForCloudTabStore:
startObservingTabStoreStateChanges
stopObservingTabStoreStateChanges
_cloudTabsEnabledDidChange
synchronizeCloudTabDevicesWithCompletionHandler:
_clearAllDevices
saveCurrentDeviceCloudTabsForEnteringBackground:completion:
saveCurrentDeviceTabsFromSuspendState
startPerformingPeriodicUpdates
stopPerformingPeriodicUpdates
_keyValueStoreDictionaryRepresentation:
_setDictionaryInKeyValueStore:dictionary:forKey:
_removeObjectFromKeyValueStore:forKey:
_closeRequestedTabIfPossible:
dateOfLastCloudTabDevicesUpdate
delegate
setDelegate:
_internalQueue
_syncedDevicesStore
_userRequestsStore
_refreshTimer
_periodicUpdateRequestCount
_hasInitiatedFetchOfCloudKitDataAtLeastOnce
_hasCompletedFetchOfCloudKitDataAtLeastOnce
_fetchCloudKitDataCompletionHandlers
_didAttemptToCloseAtLeastOneTab
__cloudKitDataNeedsFetching
_dateOfLastCloudTabDevicesUpdate
_delegate
sharedServer
mainRunLoop
isReadingListAvailable
initListenerForMachService:
_addToReadingListWithMessage:forConnection:
setHandler:forMessageNamed:
_clearAllCloudTabDevicesForConnection:
_clearCloudTabsForCurrentDeviceForConnection:
_connection:didToggleCloudTabsWithMessage:
_connection:getSafariWebDataUsageWithMessage:
_connection:deleteSafariAllWebSecurityOriginWithMessage:
_connection:deleteSafariWebSecurityOriginWithMessage:
_connection:deleteSafariPersistentURLCacheStorage:
_connection:getSafariDataUsageSummaryWithMessage:
_connection:clearAllSafariHistoryWithMessage:
_connection:clearHSTSSuperCookies:
registerBookmarksDatabaseMaintenanceActivity
registerBookmarksDatabaseMigrationActivity
registerPasswordIconsCleanupActivity
allObjects
componentsJoinedByString:
dataWithPropertyList:format:options:error:
safari_privacyPreservingDescription
bytes
dealloc
removeObject:
handleAddToReadingListWithMessage:forConnection:
isCloudTabsAvailable
_logWarningWithMessage:connection:
hasBoolEntitlement:
setBool:forKey:
_setIndexedDBDatabaseDirectory:
_setCookieStorageFile:
_initWithConfiguration:
dictionary
safari_highLevelDomainFromHost
objectForKeyedSubscript:
websiteDataRecordWithDomain:
setObject:forKeyedSubscript:
_newWebsiteDataStore
safari_allDataTypes
dataTypes
unionSet:
displayName
_dataSize
totalSize
usage
setUsage:
allValues
_fetchDataRecordsOfTypes:withOptions:completionHandler:
XPCDictionaryRepresentation
sendMessage:
_generateWebsiteDataRecordsWithCompletion:
removeDataOfTypes:forDataRecords:completionHandler:
websiteDataRecordFromXPCDictionary:
_deleteDataForWebsiteDataRecord:websiteDataStore:completion:
domain
_deleteDataForWebsiteDataRecord:matchingWebKitWebsiteDataRecords:websiteDataStore:completion:
fetchDataRecordsOfTypes:completionHandler:
defaultManager
path
_web_removeFileOnlyAtPath:
removeDataOfTypes:modifiedSince:completionHandler:
safari_clearHSTSSuperCookies
_getSafariDataUsageSummaryWithWebsiteDataStore:completion:
_clearAllHistory
standardStore
initWithCorrectionsStore:
_saveChangesToCloudHistoryStore
clearHistoryWithCompletionHandler:
performBlockAfterHistoryHasLoaded:
flushPendingChangesAndDisconnectFromStoreAndHistory
close
clearExistingSharedHistory
savePendingChangesBeforeTerminationWithCompletionHandler:
_isCloudHistoryEnabled
_finishClearingAllHistory
initWithConfiguration:
setCloudHistoryEnabled:
_cloudHistorySaveChangesDidComplete:
saveChangesToCloudHistoryStore
isCloudHistorySyncAvailable
aa_primaryAppleAccount
isEnabledForDataclass:
removeObserver:name:object:
connection
connection:didCloseWithError:
featureManager
_listener
_connections
_readingListReplyConnections
_history
_isAlreadyClearingHistory
_readingListHandler
_historyObserver
_websiteDataUsageTaskQueue
_websiteDataTypes
_featureManager
URLByAppendingPathComponent:isDirectory:
fileURLWithPath:isDirectory:
_websiteDataURLForContainerWithURL:bundleIdentifierIfNotInContainer:
checkInActivities
initSafariBookmarkCollectionCheckingIntegrity:skipExternalNotifications:
vacuum
holdLockSync:
isLockedSync
lockSync
unholdLockSync:
unlockSync
migrateReadingListIconsFromDatabaseToBookmarkImagesDirectory
cleanupReadingListArchives
initWithInjectedBundleURL:imageCacheDirectoryURL:cacheIsReadOnly:metadataType:
passwordTouchIconCache
imageDirectoryURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
uuidStringToHost
initUsingAutoFillQuirksManager:
highLevelDomainsOfAllSavedPasswordsExcludingNeverSaveMarkerPasswords
URLByDeletingPathExtension
lastPathComponent
removeItemAtURL:error:
containsObject:
savePendingProviderChangesBeforeTermination
removeTouchIconMetadataForHosts:completionHandler:
value
_saveCookies
cookies
characterAtIndex:
substringFromIndex:
unsignedLongLongValue
_diskUsageForCookie:
numberWithUnsignedLongLong:
stringByAppendingString:
deleteCookie:
_deleteCookiesForDomain:
_cookieStorage
newDomainDiskUsageDictionary
deleteCookiesForDomains:
deleteAllCookies
stringByAppendingPathComponent:
_web_createDirectoryAtPathWithIntermediateDirectories:attributes:
stringByResolvingSymlinksInPath
userCachesDirectory
currentLocale
countryCode
sharedInputModeController
enabledInputModeIdentifiers
UTF8String
_scheduleRestoreReadingListQueueActivity
initSafariBookmarkCollectionCheckingIntegrity:
_restoreReadingListQueueIfNeeded
supportsURL:
_collection
firstReadingListBookmarkWithURLMatchingString:prefixMatch:
setDateAdded:
setDateLastViewed:
saveBookmark:startReadingListFetcher:
readingListWithUnreadOnly:
bookmarkCount
reorderBookmark:toIndex:
_trimmedTitle:
_trimmedPreviewText:
initReadingListBookmarkWithTitle:address:previewText:
setLocallyAdded:
UUID
readingListFolderBookmarkID
moveBookmark:toFolderWithID:
stringWithUTF8String:
_addReadingListItemWithAddress:title:previewText:clientBundle:
postBookmarksDidReloadNotification
objectAtIndex:
_finishRestoreReadingListQueueActivityIfNeeded
_readingListQueueBackupPath
dataWithContentsOfFile:
_queueReadingListItems:
_readingListQueueTimerDidFire:
_clearReadingListQueueTimer
_commitReadingListQueue
_addItemsToReadingList:
_readingListQueue
_readingListQueueTimer
_readingListQueueRetryCount
_restoreReadingListQueueActivity
_didRestoreReadingListQueue
com.apple.MobileAsset.SafariCloudHistoryConfiguration
LastCloudHistoryConfigurationUpdateTime
v8@?0
1:1440
15:1 | 1:1425
31:5 | 1:1285
data.plist
q24@?0@"ASAsset"8@"ASAsset"16
com.apple.Safari.UserRequests
DeviceUUID
DeviceName
HasDuplicateDeviceName
LastModified
Tabs
CloudTabStoreDidUpdateNotification
CloudTabStorePrefChangedNotification
CloudTabStoreUpdateTypeKey
CloudTabStoreUpdateTypeDeviceStore
CloudTabStoreUpdateTypeUserRequestsStore
CloudTabStoreDateOfLastSaveWhenEnteringBackgroundWithNoOtherDevices
com.apple.MobileSafari.CloudTabStore
v32@?0@8@16^B24
v12@?0B8
SafariStateDocuments
SafariStateDocumentUserVisibleURL
SafariStateDocumentUUID
SafariStateDocumentTitle
SafariStateDocumentShouldRestoreReader
FEBFD06E-A2DF-4AEF-A58B-A9DEE6116B9D
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_cloudKitDataNeedsFetching
TB,S_setCloudKitDataNeedsFetching:,V__cloudKitDataNeedsFetching
delegate
T@"<CloudTabStoreDelegate>",W,N,V_delegate
HOME
CFFIXED_USER_HOME
/tmp/
TMPDIR
com.apple.private.safari.cloudtabs
com.apple.private.webbookmarks.settings
com.apple.webbookmarksd.WebsiteDataUsageTaskQueue
v24@?0@"WebBookmarksXPCConnection"8@"NSObject<OS_xpc_object>"16
website data types
Website Data State
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
Ignoring request to clear cloud tab devices, because cloud tabs feature is currently disabled.
Ignoring request to clear cloud tabs on this device, because cloud tabs feature is currently disabled
Ignoring request to toggle cloud tabs, because cloud tabs feature is currently disabled
@"WBWebsiteDataRecord"16@?0@"NSString"8
v16@?0@"NSArray"8
com.apple.mobilesafari
v16@?0Q8
featureManager
T@"WBUFeatureManager",R,N,V_featureManager
IndexedDB
Cookies/Cookies.binarycookies
ResourceLoadStatistics/full_browsing_session_resourceLog.plist
CloudTabsEnabled
bookmarks database maintenance
v16@?0@?<v@?B>8
v16@?0@"NSObject<OS_xpc_object>"8
bookmarks database migration
com.apple.webbookmarksd.passwordIconsRepeatingCleanupActivityIdentifier
com.apple.webbookmarksd.bookmarksDatabaseMaintenanceActivityIdentifier
com.apple.webbookmarksd.bookmarksDatabaseMigrationActivityIdentifier
com.apple.webbookmarksd.passwordIconsImmediateCleanupActivityIdentifier
Library
Safari
SyncedTabsMetadata.plist
MobileSafari
Bookmarks
CloudTabs
Passwords
ReadingList
WebsiteData
B24@?0Q8@"NSObject<OS_xpc_object>"16
AddToReadingListQueue.plist
com.apple.webbookmarksd.restoreReadingListQueueActivityIdentifier
CloudHistoryConfiguration
CloudTabStore
WBSCloudTabStoreDelegate
NSObject
WebBookmarksServer
WebBookmarksXPCConnectionDelegate
WebBookmarksMaintenanceActivity
Extras
WebBookmarksServerReadingListHandler
@16@0:8
v16@0:8
B16@0:8
@"NSArray"
@"NSDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"WBSCloudTabStore"16
v24@0:8@?16
B32@0:8@16@24
v32@0:8@16@?24
@24@0:8q16
v40@0:8q16@24@32
v32@0:8q16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"WBSEncryptedCloudKeyValueStore"
@"NSTimer"
@"NSMutableArray"
@"NSDate"
@"<CloudTabStoreDelegate>"
v32@0:8@16@24
v32@0:8@"WebBookmarksXPCConnection"16@"NSObject<OS_xpc_object>"24
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
@"WebBookmarksXPCListener"
@"WBUHistory"
@"WebBookmarksServerReadingListHandler"
@"WBSFormAutoFillCorrectionsHistoryObserver"
@"NSMutableSet"
@"WBUFeatureManager"
Q24@0:8@16
v48@0:8@16@24@32@40
@"WebBookmarkCollection"
@"NSObject<OS_xpc_object>"
Fetching data from CloudKit because data was updated on server
No iCloud Tab devices returned because iCloud Tabs are disabled
Synchronizing before returning iCloud Tab devices
Bypassing synchronizing with KVS because iCloud Tabs are disabled
Synchronizing with KVS
Bypassing synchronizing with KVS and CloudKit because iCloud Tabs are disabled
Synchronizing with KVS and CloudKit
Fetching data from CloudKit as part of synchronizing
Bypassing fetching data from CloudKit because we're already up-to-date
Bypassing fetching data from CloudKit because sync agent is not available
Initial CloudKit fetch has already completed
Initial CloudKit fetch was never started
Sync agent not available so initial CloudKit fetch will never complete
Initial CloudKit fetch has completed
Waiting for initial CloudKit fetch to complete
Saving iCloud Tabs when entering background because tabs are nil
Saving iCloud Tabs when entering background because no CloudKit data is available
Saving iCloud Tabs when entering background because at least one other device is registered
Saving iCloud Tabs when entering background with no other devices because this device isn't registered
Not saving iCloud Tabs when entering background with no other devices
Saving iCloud Tabs when entering background with no other devices
Attempting to close tab with UUID %{public}@
Tab URL: "%{private}@"
Initializing WebBookmarksServer
Failed to serialize website data types: %{public}@
Not authorized to add items to reading list. This feature is currently unavailable
Failed to find matching website data
Fetched website data record with data types: %{public}@
In context of XPC call with remote peer <PID = %d>: %{public}@
%{public}@
Performing 'vaccum' on WebBookmarkCollection during database maintenance
Failed to 'vacuum' WebBookmarkCollection during database maintenance
Successfully finished 'vacuum' on WebBookmarkCollection during database maintenance
Checked In %{public}@ activity
No prior %{public}@ activity was found. Registering a new one
No prior %{public}@ activity was found and registration is not requested
Running %{public}@ activity
Failed to set the activity state to 'Continue'. Deferring %{public}@ activity
Failed to acquire the sync lock. Deferring %{public}@ activity
Performing %{public}@ activity
Finished %{public}@ activity
Deferring %{public}@ activity because it did not complete
Failed migrate Reading List icons
Successfully migrated Reading List icons
Failed to clean up Reading List archives
Successfully cleaned up Reading List archives
Checked In password icons cleanup activity
No prior password icons cleanup activity was found. Registering a new one
No prior password icons cleanup activity was found and registration is not requested
Running password icons cleanup activity
Failed to set the activity state to 'Continue'. Deferring password icons cleanup activity
Performing password icons cleanup activity
Finished password icons cleanup activity
Failed to read contents of password icons directory: %{public}@
Finishing successfully since there are no password icons
Failed to remove icon for which we have no cache settings: %{public}@
Failed to remove icon for which we have no saved password: %{public}@
Checked in restore reading list queue activity
Registering restore reading list queue activity
Running restore reading list queue activity
Failed to set the activity state to 'Continue'. Deferring restore reading list queue activity
Performing restore reading list queue activity
#Server: Adding item to Reading List from client '%{public}@'
#Server Title: '%{private}@', URL: '%{private}@'
Failed to add item to reading list because the URL is an unsupported scheme
URL is already in Reading List; updating date instead of duplicating
Saving Reading List item as WebBookmark with UUID %{public}@
Failed to save Reading List item '%{public}@' to database
Failed to write Add to Reading List queue to file %{public}@
Finished restore reading list queue activity
Handling AddToReadingList request
Received malformed AddToReadingList message: items aren't an array; dropping
Received malformed AddToReadingList message; dropping
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>17A405001</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>webbookmarksd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.webbookmarksd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>webbookmarksd</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>12.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>604.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>12.1</string>
<key>DTSDKBuild</key>
<string>16B67a</string>
<key>DTSDKName</key>
<string>iphonesimulator12.1</string>
<key>DTXcode</key>
<string>1000</string>
<key>DTXcodeBuild</key>
<string>10L213p</string>
<key>MinimumOSVersion</key>
<string>12.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.developer.WebKit.ServiceWorkers</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.container-required</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.Safari.UserRequests</string>
</array>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.mobilesafari</string>
</array>
<key>com.apple.remotemanagementd.management-state</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.SafariBookmarksSyncAgent</string>
</array>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage</string>
<string>com.apple.cfnetwork</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
