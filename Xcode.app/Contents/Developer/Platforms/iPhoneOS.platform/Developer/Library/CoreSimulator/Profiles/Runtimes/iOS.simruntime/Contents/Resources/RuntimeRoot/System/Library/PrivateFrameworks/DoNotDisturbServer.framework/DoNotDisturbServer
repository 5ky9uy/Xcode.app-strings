_initWithRecord:
interruptionBehaviorSetting
_initWithInterruptionBehaviorSetting:
init
copy
numberWithInt:
hash
class
isKindOfClass:
isEqual:
stringWithFormat:
alloc
bs_safeObjectForKey:ofType:
dictionary
setObject:forKey:
migrateDictionaryRepresentations:withVersionNumber:
copyWithZone:
mutableCopyWithZone:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
initWithDictionaryRepresentation:
dictionaryRepresentation
.cxx_destruct
_interruptionBehaviorSetting
setInterruptionBehaviorSetting:
defaultManager
path
fileExistsAtPath:
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
integerValue
bs_mapNoNulls:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
dataWithJSONObject:options:error:
URLByDeletingLastPathComponent
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
readAllRecordsWithError:
writeAllRecords:withError:
initWithRecordClass:fileURL:versionNumber:
_recordClass
_fileURL
_versionNumber
initWithModeAssertion:effectiveLifetime:
modeAssertion
effectiveLifetime
_modeAssertion
_effectiveLifetime
initWithActiveUUIDs:expiredUUIDs:
activeUUIDs
expiredUUIDs
_activeUUIDs
_expiredUUIDs
cStringUsingEncoding:
dealloc
_queue_refreshMonitorForDate:
activeLifetimeAssertionUUIDs
delegate
activeAssertionsDidChangeForLifetimeMonitor:
dataSource
allModeAssertionsForLifetimeMonitor:
lifetimeMonitor:effectiveLifetimeForModeAssertion:
willMonitorLifetime:
updateForModeAssertionDetails:date:
count
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:
UUIDString
sysdiagnoseDataForDate:
sysdiagnoseDataIdentifier
refreshMonitorForDate:
setDataSource:
setDelegate:
refreshMonitorFromQueueForDate:
queue
_queue
_activeLifetimeAssertionUUIDs
_dataSource
_delegate
shouldAlwaysInterrupt
detailsForInactiveDoNotDisturb
currentStateWithError:
clientState
willSuppressInterruptions
source
value
type
arrayWithObjects:count:
unifiedContactWithIdentifier:keysToFetch:error:
phoneNumbers
firstObject
stringValue
activeModeIdentifiers
arrayByAddingObject:
modeDetailsForIdentifiers:
countByEnumeratingWithState:objects:count:
restrictedDetailsWithDetails:
dnds_behaviorForModeDetails:
initialize
resolveBehaviorForEventDetails:error:
initWithModeRepository:stateProvider:contactStore:
_modeRepository
_stateProvider
_contactStore
initWithAssertion:reason:
clientIdentifier
assertion
reason
supportsSecureCoding
initWithClientIdentifier:assertion:reason:
replacementObjectForCoder:
_clientIdentifier
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
bs_setSafeObject:forKey:
_immediateBypassEventSourceType
_immediateBypassCNGroupIdentifier
_repeatEventSourceBehaviorEnabledSetting
setImmediateBypassEventSourceType:
setImmediateBypassCNGroupIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
requestAccessToEntityType:completion:
defaultCenter
_calendarEventStoreChangedWithNotification:
addObserver:selector:name:object:
distantFuture
array
eventUniqueID
occurrenceDate
eventWithUniqueId:occurrenceDate:
startDate
endDate
isOnlyDuringEvent
compare:
earlierDate:
UUID
addObject:
isEqualToDate:
fireTime
dateWithTimeIntervalSinceReferenceDate:
invalidate
_timerFired:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
setUserVisible:
scheduleInQueue:
userInfo
date
_eventStore
_lifetimeTimer
dateInterval
assertionDetailsLifetimeType
isEqualToString:
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
doubleValue
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
boolValue
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
assertionStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
initWithStartDate:endDate:
initWithDateInterval:
lifetimeWithCurrentLocation
lifetimeForUserRequest
assertionDetailsIdentifier
assertionDetailsModeIdentifier
detailsWithIdentifier:modeIdentifier:lifetime:
assertionUUID
initWithUUIDString:
assertionClientIdentifier
initWithClientIdentifier:UUID:startDate:details:
setAssertionClientIdentifier:
setAssertionUUID:
timeIntervalSinceReferenceDate
numberWithDouble:
setAssertionStartDateTimestamp:
details
identifier
setAssertionDetailsIdentifier:
modeIdentifier
setAssertionDetailsModeIdentifier:
lifetime
setAssertionDetailsLifetimeType:
setAssertionDetailsCalendarEventLifetimeEventUniqueIdentifier:
setAssertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp:
numberWithBool:
setAssertionDetailsCalendarEventLifetimeOnlyDuringEvent:
setAssertionDetailsDateIntervalLifetimeStartDateTimestamp:
setAssertionDetailsDateIntervalLifetimeEndDateTimestamp:
makeRecord
modeAssertionForRecord:
dnd_locationBundle
initWithEffectiveBundle:
_queue_refreshMonitor
_queue_stopMonitoringCurrentLocation
_queue_sendExpiryEventForAllLocationAssertions
lastObject
_queue_geofenceLocation:
_allRelevantAssertions
isEqualToArray:
_queue_beginMonitoringCurrentLocation
bs_filter:
requestLocation
stopMonitoringForRegion:
coordinate
initWithCenter:radius:identifier:
setNotifyOnExit:
setNotifyOnEntry:
startMonitoringForRegion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_locationManager
_currentRegion
_hasActiveLifetimes
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:bedtimeBehaviorEnabledSetting:
_lastUpdatedTimestamp
_scheduleEnabledSetting
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_bedtimeBehaviorEnabledSetting
setLastUpdatedTimestamp:
setScheduleEnabledSetting:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setBedtimeBehaviorEnabledSetting:
hashTableWithOptions:
_loadDataFromStore
_queue_allModeAssertionsWithError:
bs_firstObjectPassingTest:
_queue_takeModeAssertionWithDetails:clientIdentifier:error:
_queue_invalidateModeAssertionsWithUUIDs:reason:error:
_queue_invalidateAllModeAssertionsTakenBeforeDate:forReason:error:
_queue_assertionWithUUID:error:
allModeAssertionsWithError:
lastCompleteInvalidationDate
objectForKey:
_saveDataToStoreWithError:
_sendUpdateToAllObserversForTakenAssertions:
allValues
containsObject:
removeObjectForKey:
_sendUpdateToAllObserversForAssertionInvalidations:
modeAssertionProvider:didTakeAssertions:
modeAssertionProvider:didPerformInvalidations:
storeAssertionRecords
storeLastCompleteInvalidationTimestamp
distantPast
setStoreLastCompleteInvalidationTimestamp:
setStoreAssertionRecords:
assertionWithUUID:error:
addObserver:
removeObserver:
initWithBackingStore:
assertionWithClientIdentifier:error:
takeModeAssertionWithDetails:clientIdentifier:error:
invalidateModeAssertionWithUUID:reason:error:
invalidateModeAssertionWithUUIDs:reason:error:
invalidateAllModeAssertionsTakenBeforeDate:forReason:error:
_observers
_backingStore
_assertionsByUUID
_lastCompleteInvalidationDate
assertionDetailsDateIntervalLifetimeStartDateTimestamp
_initWithAssertionUUID:assertionStartDateTimestamp:assertionClientIdentifier:assertionDetailsIdentifier:assertionDetailsModeIdentifier:assertionDetailsLifetimeType:assertionDetailsCalendarEventLifetimeEventUniqueIdentifier:assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp:assertionDetailsCalendarEventLifetimeOnlyDuringEvent:assertionDetailsDateIntervalLifetimeStartDateTimestamp:assertionDetailsDateIntervalLifetimeEndDateTimestamp:
initWithSyncDictionaryRepresentation:
syncDictionaryRepresentation
_assertionUUID
_assertionStartDateTimestamp
_assertionClientIdentifier
_assertionDetailsIdentifier
_assertionDetailsModeIdentifier
_assertionDetailsLifetimeType
_assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
_assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
_assertionDetailsCalendarEventLifetimeOnlyDuringEvent
_assertionDetailsDateIntervalLifetimeStartDateTimestamp
_assertionDetailsDateIntervalLifetimeEndDateTimestamp
fileURLWithPathComponents:
URLByAppendingPathComponent:
dnds_localAssertionBackingStoreFileURL
dnds_settingsBackingStoreFileURL
_initWithStoreLastCompleteInvalidationTimestamp:storeAssertionRecords:
_storeLastCompleteInvalidationTimestamp
_storeAssertionRecords
initWithInterruptionSuppression:
interruptionSuppression
_interruptionSuppression
allObjects
initWithQueue:calloutQueue:
setObserverFeed:
recalculateState
_queue_recalculateState
removeObject:
currentlyActiveModeAssertionsForStateProvider:
stateProvider:effectiveModeIdentifierForModeAssertion:
initWithActive:willSuppressInterruptions:activeModeIdentifiers:
initWithClientState:activeModeAssertions:
initWithPreviousState:state:
stateProvider:didUpdateDoNotDisturbState:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionOrderRule:
observer:updateSectionOrder:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteAlertBehaviorOverridesChanged:
observer:noteAlertBehaviorOverrideStateChanged:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
addUpdateListener:
removeUpdateListener:
_stateUpdateListeners
_observer
_bbState
_currentState
_addEventListeners
scheduleSettings
getBehaviorOverridesEffectiveWhileUnlockedWithCompletion:
setBehaviorOverridesEffectiveWhileUnlocked:source:
predicateForiOSLegacyIdentifier:
groupsMatchingPredicate:error:
getPrivilegedSenderAddressBookGroupRecordIDAndNameWithCompletion:
getPrivilegedSenderTypesWithCompletion:
predicateForGroupsWithIdentifiers:
iOSLegacyIdentifier
name
setPrivilegedSenderAddressBookGroupRecordID:name:source:
setPrivilegedSenderTypes:source:
settingsForRecord:
mutableCopy
effectiveIntervals
startComponents
endComponents
hour
setHour:
minute
setMinute:
setStartTime:
setEndTime:
mode
setTimePeriod:
getBehaviorOverridesWithCompletion:
_saveScheduleSettings:
timePeriod
startTime
setYear:
endTime
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:
initWithOverrideType:mode:effectiveIntervals:
setBehaviorOverrides:source:
syncSettings
behaviorSettingsWithError:
settingsManager:didReceiveUpdatedBehaviorSettings:
setBehaviorOverridesEffectiveWhileUnlockedChangeHandler:
phoneCallBypassSettingsWithError:
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
setPrivilegedSenderTypesWithSourceChangeHandler:
setPrivilegedSenderAddressBookGroupRecordIDWithSourceChangeHandler:
scheduleSettingsWithError:
settingsManager:didReceiveUpdatedScheduleSettings:
setBehaviorOverridesWithSourceChangeHandler:
makeRecordWithUpdateDate:
setScheduleSettings:
settingsManager:didReceiveUpdatedSyncSettings:
syncSettingsProvider:didReceiveUpdatedSyncSettings:
initWithBackingStore:settingsGateway:contactStore:
lastScheduleLastModifiedDate
setBehaviorSettings:withError:
setPhoneCallBypassSettings:withError:
setScheduleSettings:withError:
syncSettingsWithError:
_settingsGateway
_syncSettingsProvider
backingStoreWithFileURL:
activeModeAssertions
_clientState
_activeModeAssertions
initWithDomain:
synchronize
_endMonitoringForChanges
_beginMonitoringForChanges
update
activeLocalModeAssertionsForSyncManager:
_queue_updateToggleSyncForLocalAssertions:
_queue_updateGizmoAssertionSync
_queue_invalidateAllModeAssertionsTakenBeforeDate:forReason:
bs_safeAddObject:
_queue_updateCompanionAssertionMirroringForLocalAssertions:
_queue_companionUpdateDateForAssertions:
laterDate:
_queue_gizmoUpdateDate
_queue_updateCompanionToggleSyncForLocalAssertions:gizmoUpdateDate:
_queue_updateGizmoToggleSyncForLocalAssertions:companionUpdateDate:
lastModeAssertionsCompleteInvalidationDateForSyncManager:
doubleForKey:keyExistsAndHasValidFormat:
dateWithTimeIntervalSinceNow:
boolForKey:
bs_containsObjectPassingTest:
setBool:forKey:
setDouble:forKey:
setWithObjects:
synchronizeNanoDomain:keys:
syncManager:invalidateAllModeAssertionsTakenBeforeDate:forReason:
setWithObject:
cleanupState
resume
invalidateAllModeAssertionsTakenBeforeDate:forReason:
_updateGizmoAssertionSync
_npsManager
_accessor
_gizmoToggleAssertion
_gizmoWorkoutAssertion
_lastInvalidationDate
initWithQueue:
_propagateBehaviorOverrides:
_propagatePrivilegedSenderTypes:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClasses:fromData:error:
setInteger:forKey:
integerForKey:keyExistsAndHasValidFormat:
_updateEffectiveOverrides
_updatePrivilegedSenderTypes
initWithRecordClass:versionNumber:
_queue_sendStateSnapshotToAllRemotes
_queue_invalidateAllLocalModeAssertionsTakenBeforeDate:forReason:
_queue_invalidateAllRemoteModeAssertionsTakenBeforeDate:forReason:
_queue_receivedRemoteSyncRecord:remoteDeviceIdentifier:
setSnapshotUUID:
setSnapshotTimestamp:
setSnapshotAssertionStore:
sendRecordToRemotes:withCompletionHandler:
snapshotAssertionStore
unsignedIntegerValue
snapshotLastFullAssertionInvalidationReason
dictionaryWithObjects:forKeys:
syncService:didReceiveRecord:sourceIdentifier:
_syncService
_invalidateAllModeAssertionsDate
_invalidateAllModeAssertionsReason
_handleBehaviorOverrideUpdate:
containsDate:
scheduleChangedForScheduleManager:
nextOverrideTransitionDateAfterDate:
isActiveForDate:
lifetimeWithDateInterval:
scheduleAssertionModeIdentifierForScheduleManager:
_queue_scheduleAssertion
_queue_scheduleAssertionDateInterval
setDay:
setWeekday:
calendarIdentifier
calendarWithIdentifier:
nextDateAfterDate:matchingComponents:options:
lastModeAssertionsCompleteInvalidationDateForScheduleManager:
lastScheduleSettingsChangedDateForScheduleManager:
_queue_handleBehaviorOverrideUpdate:
transformedModeIdentifierForModeAssertion:
transformedLifetimeForModeAssersion:
_behaviorOverride
_assertionDateInterval
_queue_resume
_queue_sendRecordToRemotes:error:
_queue_handleIncomingMessage:sourceIdentifier:
initWithService:
addDelegate:queue:
devices
isLocallyPaired
sendMessage:toDestinations:priority:options:identifier:error:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_updateListeners
_initWithSnapshot:
snapshotUUID
snapshotTimestamp
_initWithSnapshotUUID:snapshotTimestamp:snapshotLastFullAssertionInvalidationReason:snapshotAssertionStore:
_snapshotUUID
_snapshotTimestamp
_snapshotLastFullAssertionInvalidationReason
_snapshotAssertionStore
setSnapshotLastFullAssertionInvalidationReason:
weakObjectsHashTable
dataWithPropertyList:format:options:error:
length
getBytes:length:
initWithUUID:startDate:details:
isSyncEnabled
initWithSyncEnabled:
_syncEnabled
_updateSyncPreferences
boolForKey:keyExistsAndHasValidFormat:
_syncSettings
behaviorSettings
bypassSettings
_initWithBehaviorSettings:bypassSettings:scheduleSettings:
_behaviorSettings
_bypassSettings
_scheduleSettings
setBehaviorSettings:
setBypassSettings:
initWithIdentifier:connection:
connection
wantsStateUpdates
setWantsStateUpdates:
wantsAssertionUpdates
setWantsAssertionUpdates:
wantsSettingsUpdates
setWantsSettingsUpdates:
_wantsStateUpdates
_wantsAssertionUpdates
_wantsSettingsUpdates
_identifier
_connection
initWithMachServiceName:
setWithArray:
remoteObjectProxy
deliverStateUpdate:
_queue_handleModeAssertionInvalidations:
deliverUpdatedBehaviorSettings:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedScheduleSettings:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
_handleClientConnectionInterrupted:
setInterruptionHandler:
_handleClientConnectionInvalidated:
setInvalidationHandler:
dnds_hasAnyValidEntitlement
currentConnection
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
remoteServiceProvider:resolveBehaviorForEventDetails:error:
dnds_hasModeAssertionEntitlementsToRequestLifetime:forClientIdentifier:
_takeModeAssertionWithDetails:clientConnection:clientIdentifier:error:invalidation:
dnds_hasModeAssertionEntitlementForClientIdentifier:
_invalidateActiveModeAssertionForClientConnection:clientIdentifier:error:
_activeModeAssertionForClientConnection:clientIdentifier:error:
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
_invalidateAllActiveModeAssertionsWithReason:error:
_registerWantsAssertionUpdatesForClientConnection:clientIdentifier:error:
dnds_hasStateRequestEntitlementForClientIdentifier:
remoteServiceProvider:currentStateWithError:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
_registerWantsStateUpdatesForClientConnection:clientIdentifier:error:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
remoteServiceProvider:behaviorSettingsWithError:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:phoneCallBypassSettingsWithError:
remoteServiceProvider:setPhoneCallBypassSettings:withError:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setScheduleSettings:withError:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
_registerWantsSettingsUpdatesForClientConnection:clientIdentifier:error:
_unregisterConnectionDetailsForClientConnection:
_queue_registerConnectionDetailsForClientConnection:clientIdentifier:error:
_queue_unregisterConnectionDetailsForClientConnection:
_queue_getConnectionDetailsForClientConnection:clientIdentifier:error:
_queue_activeModeAssertionWithClientConnection:clientIdentifier:error:
_queue_invalidateActiveModeAssertionForClientConnection:clientIdentifier:reason:error:
_queue_registerWantsStateUpdatesForClientConnection:clientIdentifier:error:
_queue_registerWantsSettingsUpdatesForClientConnection:clientIdentifier:error:
_queue_registerWantsAssertionUpdatesForClientConnection:clientIdentifier:error:
_queue_takeModeAssertionWithDetails:clientConnection:clientIdentifier:error:invalidation:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:error:
_queue_invalidateAllActiveModeAssertionsWithReason:error:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:error:
deliverModeAssertionInvalidation:forClientIdentifier:
listener:shouldAcceptNewConnection:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
takeModeAssertionWithDetails:requestDetails:completionHandler:
invalidateActiveModeAssertionWithRequestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
registerForAssertionUpdatesWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
setBehaviorSettings:withRequestDetails:completionHandler:
getPhoneCallBypassSettingsWithRequestDetails:completionHandler:
setPhoneCallBypassSettings:withRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
setScheduleSettings:withRequestDetails:completionHandler:
registerForSettingsUpdatesWithRequestDetails:completionHandler:
handleStateUpdate:
handleModeAssertionInvalidations:
handleUpdatedBehaviorSettings:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedScheduleSettings:
_registerConnectionDetailsForClientConnection:clientIdentifier:error:
_listener
_clientConnectionQueue
_clientConnectionDetailsByIdentifier
interfaceWithProtocol:
_dnds_safeStringArrayEntitlementForKey:
valueForEntitlement:
predicateWithBlock:
filteredArrayUsingPredicate:
sharedInstance
fileURLWithPath:
lastPathComponent
productHardwareModel
productBuildVersion
domain
code
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByReplacingOccurrencesOfString:withString:
URLWithString:
defaultWorkspace
openURL:
requestAccessForEntityType:completionHandler:
arrayByAddingObjectsFromArray:
_queue_updateLifetimeMonitorsAndState
_activeModeAssertionsConsideringProviders:
_queue_handleSyncSettingsChange:
_queue_updateBulletinBoardAssertionWithCompletionHandler:
requestQuietModeOverrideAssertionWithCompletion:
addObjectsFromArray:
getActivePairedDevice
currentStateForSyncManager:
_localAssertionManager
_lifetimeMonitors
_scheduleManager
_assertionTransformers
_eventBehaviorResolver
_serviceProvider
_assertionSyncManager
_settingsSyncManager
_settingsManager
_quietModeAssertion
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
T@"NSNumber",C,D,N
header
version
data
@16@?0@8
@16@?0@"<DNDSBackingStoreRecord>"8
modeAssertion
T@"DNDModeAssertion",R,C,N,V_modeAssertion
effectiveLifetime
T@"DNDModeAssertionLifetime",R,C,N,V_effectiveLifetime
activeUUIDs
T@"NSArray",R,C,N,V_activeUUIDs
expiredUUIDs
T@"NSArray",R,C,N,V_expiredUUIDs
com.apple.donotdisturb.lifetime-monitor.%@
v8@?0
@"DNDSLifetimeMonitorModeAssertionDetails"16@?0@"DNDModeAssertion"8
@"NSString"16@?0@"NSUUID"8
active-uuids
sysdiagnoseDataIdentifier
T@"NSString",R,C,N
activeLifetimeAssertionUUIDs
T@"NSArray",R,C,N
dataSource
T@"<DNDSLifetimeMonitorDataSource>",W,N
delegate
T@"<DNDSLifetimeMonitorDelegate>",W,N
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSString",R,C,D,N
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
v12@?0B8
BBNotificationBehaviorShouldPresentNotificationOfTypeFromSenderWithHandler
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
### Failed to Soft Linked: /System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
UI locked
UI unlocked
<invalid>
<%@: %p; clientIdentifier: '%@'; assertion: %@; reason: %@>
clientIdentifier
T@"NSString",R,C,N,V_clientIdentifier
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
T@"NSString",C,D,N
v20@?0B8@"NSError"12
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
calendar
date-interval
current-location
user-requested
@"NSUUID"16@?0@"DNDSLifetimeMonitorModeAssertionDetails"8
com.donotdisturb.server.LocationLifetimeMonitor
@"NSUUID"16@?0@"DNDModeAssertion"8
B16@?0@"DNDModeAssertion"8
com.apple.donotdisturb.server.until-i-leave
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
com.apple.donotdisturb.server.LocalAssertionManager
B16@?0@"DNDSModeAssertion"8
@"DNDSModeAssertionRecord"16@?0@"DNDSModeAssertion"8
@"NSDictionary"16@?0@"DNDSModeAssertionRecord"8
last-invalidation
currently-held-assertions
@"DNDSModeAssertionInvalidation"16@?0@"DNDSModeAssertion"8
@"NSUUID"16@?0@"DNDSModeAssertion"8
@"DNDSModeAssertion"16@?0@"DNDSModeAssertionRecord"8
Bad data in the assertion database
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-1.24/DoNotDisturbServer/DNDSLocalAssertionManager.m
Failed to load assertion database
Failed to write mode assertions
<%@: %p; assertionUUID: %@; assertionStartDateTimestamp: %@; assertionClientIdentifier: '%@'; assertionDetailsIdentifier: %@; assertionDetailsModeIdentifier: %@; assertionDetailsLifetimeType: %@; assertionDetailsCalendarEventLifetimeEventUniqueIdentifier: %@; assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp: %@; assertionDetailsCalendarEventLifetimeOnlyDuringEvent: %@; assertionDetailsDateIntervalLifetimeStartDateTimestamp: %@; assertionDetailsDateIntervalLifetimeEndDateTimestamp: %@>
assertionUUID
assertionStartDateTimestamp
assertionClientIdentifier
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsLifetimeType
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
T@"NSString",R,C,N,V_assertionUUID
T@"NSNumber",R,C,N,V_assertionStartDateTimestamp
T@"NSString",R,C,N,V_assertionClientIdentifier
T@"NSString",R,C,N,V_assertionDetailsIdentifier
T@"NSString",R,C,N,V_assertionDetailsModeIdentifier
T@"NSString",R,C,N,V_assertionDetailsLifetimeType
T@"NSString",R,C,N,V_assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
T@"NSNumber",R,C,N,V_assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
T@"NSNumber",R,C,N,V_assertionDetailsCalendarEventLifetimeOnlyDuringEvent
T@"NSNumber",R,C,N,V_assertionDetailsDateIntervalLifetimeStartDateTimestamp
T@"NSNumber",R,C,N,V_assertionDetailsDateIntervalLifetimeEndDateTimestamp
Library
DoNotDisturb
Assertions.json
Settings.json
<%@: %p; storeLastCompleteInvalidationTimestamp: %@; storeAssertionRecords: %@>
@"DNDSModeAssertionRecord"16@?0@"NSDictionary"8
storeLastCompleteInvalidationTimestamp
storeAssertionRecords
T@"NSNumber",R,C,N,V_storeLastCompleteInvalidationTimestamp
T@"NSArray",R,C,N,V_storeAssertionRecords
T@"NSArray",C,D,N
<%@: %p; interruptionSuppression: %@>
interruptionSuppression
TQ,R,N,V_interruptionSuppression
com.apple.donotdisturb.mode.bedtime
com.apple.donotdisturb.mode.driving
com.donotdisturb.server.ModeAssertionStateProvider
com.donotdisturb.server.BulletinBoardStateProvider.observer
com.donotdisturb.server.BulletinBoardStateProvider.observer.call-out
@"NSString"16@?0@"DNDModeAssertion"8
T@"<DNDSModeAssertionStateProviderDataSource>",W,N,V_dataSource
BBObserver
com.apple.donotdisturb.server.SettingsManager
Failed to load schedule settings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-1.24/DoNotDisturbServer/DNDSSettingsManager.m
v20@?0i8@"NSString"12
v16@?0Q8
v16@?0@"NSArray"8
v20@?0B8Q12
v24@?0Q8Q16
v28@?0i8@"NSString"12Q20
v24@?0@"NSArray"8Q16
Error saving schedule settings
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
lastScheduleLastModifiedDate
T@"NSDate",R,C,D,N
BBBehaviorOverrideEffectiveInterval
BBBehaviorOverride
<%@: %p; clientState: %@; activeModeAssertions: %@>
clientState
T@"DNDState",R,C,N,V_clientState
activeModeAssertions
T@"NSArray",R,C,N,V_activeModeAssertions
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
DNDStateChangedNotification
DNDAssertStateChangedNotification
com.donotdisturb.server.sync.legacy
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"<DNDSAssertionSyncManagerDelegate>",W,N
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
dndEffectiveOverrides
dndPrivilegedSenderTypes
com.donotdisturb.server.LegacyPreferencesSyncManager.gateway
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
BBSettingsGateway
com.apple.nano
com.apple.donotdisturb.server.ModernAssertionSyncManager
B24@?0@"NSUUID"8@"DNDSModeAssertion"16
com.apple.donotdisturb.private.schedule
com.donotdisturb.server.ScheduleManager
com.donotdisturb.server.ScheduleManager.gateway
schedule
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
T@"<DNDSScheduleManagerDelegate>",W,N,V_delegate
com.apple.private.alloy.donotdisturb
com.donotdisturb.server.IdentityServicesSync
B16@?0@"IDSDevice"8
<%@: %p; snapshotUUID: %@; snapshotTimestamp: %@; snapshotLastFullAssertionInvalidationReason: %@; snapshotAssertionStore: %@>
snapshotUUID
T@"NSString",R,C,N,V_snapshotUUID
snapshotTimestamp
T@"NSNumber",R,C,N,V_snapshotTimestamp
snapshotLastFullAssertionInvalidationReason
T@"NSNumber",R,C,N,V_snapshotLastFullAssertionInvalidationReason
snapshotAssertionStore
T@"DNDSModeAssertionStoreRecord",R,C,N,V_snapshotAssertionStore
T@"DNDSModeAssertionStoreRecord",C,D,N
com.apple.donotdisturb.server.sysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.donotdisturb
com.apple.donotdisturb.server
General
Resolver
ServiceProvider
StateProvider
LocalAssertionManager
IDSTransport
Schedule
Settings
SystemState
com.apple.donotdisturb.server.sync
LegacyAssertion
LegacySettings
ModernAssertion
com.apple.donotdisturb.server.lifetime-monitor
DateInterval
Location
CalendarEvent
UserRequested
Default
Sysdiagnose
<%@: %p; clientIdentifier: '%@'; UUID: %@; startDate: %@; details: %@>
<%@: %p; syncEnabled: %@>
syncEnabled
TB,R,N,GisSyncEnabled,V_syncEnabled
mirrorDNDState
MirrorDNDStateChangedNotification
syncSettings
T@"DNDSSyncSettings",R,C,N,V_syncSettings
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
<%@: %p; behaviorSettings: %@; bypassSettings: %@; scheduleSettings: %@>
behaviorSettings
bypassSettings
scheduleSettings
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
T@"DNDSBypassSettingsRecord",R,C,N,V_bypassSettings
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
T@"DNDSBehaviorSettingsRecord",C,D,N
T@"DNDSBypassSettingsRecord",C,D,N
T@"DNDSScheduleSettingsRecord",C,D,N
identifier
T@"NSString",R,C,N,V_identifier
connection
T@"NSXPCConnection",R,W,N,V_connection
wantsStateUpdates
TB,N,V_wantsStateUpdates
wantsAssertionUpdates
TB,N,V_wantsAssertionUpdates
wantsSettingsUpdates
TB,N,V_wantsSettingsUpdates
com.apple.donotdisturb.server.RemoteServiceConnection.clientConnection
@"NSXPCConnection"16@?0@"DNDSClientConnectionDetails"8
B16@?0@"DNDSModeAssertionInvalidation"8
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
com.apple.donotdisturb.service
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B24@?0@8@"NSDictionary"16
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Intenal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
com.donotdisturb.server.Server
com.donotdisturb.server.Server.gateway
v16@?0@"BBQuietModeOverrideAssertion"8
@"DNDSModeAssertion"16@?0@"NSUUID"8
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSBackingStoreRecord
NSObject
DNDSMutableBehaviorSettingsRecord
DNDSJSONBackingStore
DNDSBackingStore
DNDSLifetimeMonitorModeAssertionDetails
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSSysdiagnoseDataProvider
DNDSLifetimeMonitor
DNDSBulletinBoardEventBehaviorResolver
DNDSEventBehaviorResolver
DNDSModeAssertionInvalidation
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSCalendarEventLifetimeMonitor
DNDSDateIntervalLifetimeMonitor
Record
DNDSDefaultLifetimeMonitor
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
DNDSLocalAssertionManager
DNDSObservableModeAssertionProvider
DNDSModeAssertionProvider
DNDSModeAssertionRecord
DNDSSyncRecord
DNDSMutableModeAssertionRecord
BackingStores
DNDSModeAssertionStoreRecord
DNDSMutableModeAssertionStoreRecord
DNDSModeDetails
DNDSModeRepository
DNDSModeAssertionStateProvider
BBObserverDelegate
DNDSStateProvider
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
BackingStore
DNDSState
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSModernAssertionSyncManager
DNDSSyncServiceUpdateListener
DNDSScheduleManager
DNDSModeAssertionTransformer
DNDSIDSSyncService
IDSServiceDelegate
DNDSSyncService
DNDSAssertionSyncStateSnapshotRecord
DNDSMutableAssertionSyncStateSnapshotRecord
DNDSModeAssertion
DNDSSyncSettings
DNDSSyncSettingsProvider
DNDSSettingsRecord
DNDSMutableSettingsRecord
DNDSClientConnectionDetails
DNDSRemoteServiceProvider
NSXPCListenerDelegate
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceClientProtocol
DNDRemoteServiceClientModeAssertionProtocol
DNDRemoteServiceClientStateProtocol
DNDRemoteServiceClientSettingsProtocol
Entitlements
DoNotDisturbServer
DNDSServer
DNDSLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSModeAssertionProviderObserver
DNDSModeAssertionStateProviderDataSource
DNDSStateProviderUpdateListener
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSScheduleManagerDelegate
DNDSSettingsManagerDelegate
@32@0:8@16Q24
@24@0:8^{_NSZone=}16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@"NSArray"32@0:8@"NSArray"16Q24
v16@0:8
@"NSNumber"
v24@0:8@16
@24@0:8^@16
B32@0:8@16^@24
@"NSArray"24@0:8^@16
B32@0:8@"NSArray"16^@24
@40@0:8#16@24Q32
@"NSURL"
@32@0:8@16@24
@"DNDModeAssertion"
@"DNDModeAssertionLifetime"
@"NSArray"
@"NSDictionary"24@0:8@"NSDate"16
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"<DNDSLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDataSource>"16
@"<DNDSLifetimeMonitorDelegate>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDelegate>"16
@"NSObject<OS_dispatch_queue>"
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@32@0:8@16^@24
@"DNDClientEventBehavior"32@0:8@"DNDClientEventDetails"16^@24
@40@0:8@16@24@32
@"<DNDSModeRepository>"
@"<DNDSStateProvider>"
@"CNContactStore"
@40@0:8@16@24Q32
@"NSString"
@"EKEventStore"
@"PCPersistentTimer"
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLRegion"
@72@0:8@16@24@32@40@48@56@64
@"DNDSModeAssertion"32@0:8@"NSUUID"16^@24
v24@0:8@"<DNDSModeAssertionProviderObserver>"16
@40@0:8@16@24^@32
@40@0:8@16Q24^@32
B24@0:8^@16
@"NSHashTable"
@"<DNDSBackingStore>"
@"NSMutableDictionary"
@"NSDate"
@104@0:8@16@24@32@40@48@56@64@72@80@88@96
@24@0:8Q16
@"NSArray"24@0:8@"NSArray"16
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v32@0:8@16q24
v32@0:8@16Q24
v28@0:8@16B24
v48@0:8@16@24@32@?40
@32@0:8@16q24
v56@0:8@16@24@32@40@?48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
@48@0:8@16q24@32@40
{CGSize=dd}48@0:8@16q24f32f36@40
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16q24
v32@0:8@"BBObserver"16@"NSArray"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16Q24
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
@"DNDSState"24@0:8^@16
v24@0:8@"<DNDSStateProviderUpdateListener>"16
@"BBObserver"
@"DNDSState"
@"<DNDSModeAssertionStateProviderDataSource>"
v32@0:8@"DNDSSyncSettingsProvider"16@"DNDSSyncSettings"24
@"BBSettingsGateway"
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
@"DNDState"
v32@0:8@"NSDate"16Q24
@"<DNDSAssertionSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDataSource>"16
@"<DNDSAssertionSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDelegate>"16
@"NPSManager"
@"NPSDomainAccessor"
@"DNDSModeAssertion"
@"<DNDSAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
v24@0:8Q16
v40@0:8@"<DNDSSyncService>"16@"<DNDSSyncRecord>"24@"NSString"32
@"<DNDSSyncService>"
@"NSDictionary"
@"NSString"24@0:8@"DNDModeAssertion"16
@"DNDModeAssertionLifetime"24@0:8@"DNDModeAssertion"16
@"BBBehaviorOverride"
@"NSUUID"
@"NSDateInterval"
@"<DNDSScheduleManagerDataSource>"
@"<DNDSScheduleManagerDelegate>"
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@32@0:8#16Q24
v32@0:8@16@?24
v32@0:8@"<DNDSSyncRecord>"16@?<v@?B@"NSError">24
v24@0:8@"<DNDSSyncServiceUpdateListener>"16
@"IDSService"
@48@0:8@16@24@32@40
@"DNDSModeAssertionStoreRecord"
@20@0:8B16
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
v20@0:8B16
@"NSXPCConnection"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"DNDModeAssertionInvalidation"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?B@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBypassSettings"@"NSError">24
v40@0:8@"DNDBypassSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
B40@0:8@16@24^@32
@56@0:8@16@24@32^@40^@48
@48@0:8@16@24Q32^@40
@32@0:8Q16^@24
@"NSXPCListener"
@"<DNDSRemoteServiceProviderDelegate>"
v32@0:8@"DNDModeAssertionInvalidation"16@"NSString"24
v24@0:8@"DNDStateUpdate"16
v24@0:8@"DNDBehaviorSettings"16
v24@0:8@"DNDBypassSettings"16
v24@0:8@"DNDScheduleSettings"16
@"NSArray"24@0:8@"<DNDSLifetimeMonitor>"16
@"DNDModeAssertionLifetime"32@0:8@"<DNDSLifetimeMonitor>"16@"DNDModeAssertion"24
v24@0:8@"<DNDSLifetimeMonitor>"16
v32@0:8@"<DNDSLifetimeMonitor>"16@"NSArray"24
v32@0:8@"<DNDSModeAssertionProvider>"16@"NSArray"24
@"NSArray"24@0:8@"DNDSModeAssertionStateProvider"16
@"NSString"32@0:8@"DNDSModeAssertionStateProvider"16@"DNDModeAssertion"24
v32@0:8@"<DNDSStateProvider>"16@"DNDStateUpdate"24
@"DNDClientEventBehavior"40@0:8@"DNDSRemoteServiceProvider"16@"DNDClientEventDetails"24^@32
@48@0:8@16@24@32^@40
@"DNDSModeAssertion"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDSModeAssertion"48@0:8@"DNDSRemoteServiceProvider"16@"DNDModeAssertionDetails"24@"NSString"32^@40
@"DNDSModeAssertionInvalidation"48@0:8@"DNDSRemoteServiceProvider"16@"NSUUID"24Q32^@40
@"NSArray"48@0:8@"DNDSRemoteServiceProvider"16@"NSDate"24Q32^@40
@"DNDState"32@0:8@"DNDSRemoteServiceProvider"16^@24
@"DNDBehaviorSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBehaviorSettings"24^@32
@"DNDBypassSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBypassSettings"24^@32
@"DNDScheduleSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDScheduleSettings"24^@32
@"NSArray"24@0:8@"<DNDSAssertionSyncManager>"16
@"NSDate"24@0:8@"<DNDSAssertionSyncManager>"16
v40@0:8@"<DNDSAssertionSyncManager>"16@"NSDate"24Q32
@"NSString"24@0:8@"DNDSScheduleManager"16
@"NSDate"24@0:8@"DNDSScheduleManager"16
v24@0:8@"DNDSScheduleManager"16
v32@0:8@"DNDSSettingsManager"16@"DNDBehaviorSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDBypassSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDScheduleSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSSyncSettings"24
v24@0:8@?16
@"DNDSLocalAssertionManager"
@"DNDSScheduleManager"
@"DNDSModeAssertionStateProvider"
@"DNDSBulletinBoardEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"BBQuietModeOverrideAssertion"
Error when getting current DND State, error=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor, date=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Refreshing monitor
Location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Location monitoring detected leaving region, will stop monitor and invalidate all assertions; manager=%p, region=%@
Location monitoring found location, will update geofence; manager=%p, locations=%@
Location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Location monitoring stopping for geofence; region=%@
Location monitoring started for geofence; location=%@, region=%@
Added observer %{public}p
Removed observer %{public}p
Replacing existing assertion; oldAssertion=%{public}@, assertion=%{public}@
Taken mode assertion; assertion=%{public}@
Failed to take mode assertion; details=%{public}@, error=%{public}@
Will remove assertion; assertion=%{public}@
Got mode assertion for UUID; UUID=%{public}@, assertion=%{public}@
Failed to get mode assertion for UUID; UUID=%{public}@
Notifying observers of %lu taken assertions
Notifying observers of %lu invalidations
Bad data appears to be in the assertion database, will request a radar; lastCompleteInvalidationDate=%{public}@
Failed to load assertion database, will request a radar; error=%{public}@
Wrote out %lu assertions to file
Failed to write mode assertions, will request radar; error=%{public}@
State recalculation was requested
Bulletin Board's DND state changed, will recalculate state: observer=%p, state=%lu
Current DND state was calculated: state=%{public}@
State update will be sent to %lu listeners: stateUpdate=%{public}@
Failed to load schedule settings, will request a radar; error=%{public}@
Saved schedule settings; settings=%{public}@
Failed to save settings, will request a radar; settings=%{public}@, error=%{public}@
Cleaning up state
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update sync state to reflect current companion state, companionDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
Got new behavior overrides: %{public}@
Error encoding behavior overrides: error=%{public}@
Got new behavior overrides: overrides=%{public}@
Error decoding behavior overrides: error=%{public}@
Got new priviledged senders types: %lu
Received new priviledged senders types: %lu
Received remote record from sync service; syncService=%p, record=%{public}@, sourceIdentifier=%{public}@
Will tell remotes to invalidate all assertions: date=%{public}@, reason=%{public}@
Error sending local assertions: error=%{public}@
Received remote sync record from watch: remoteDeviceIdentifier=%{public}@
Will invalidate all local assertions for a fast path: date=%{public}@, reason=%{public}@
Invalidation occurred inside current schedule: date=%{public}@, currentDateInterval=%{public}@, reason=%{public}@
Calculated transformed lifetime for assertion: assertion=%{public}@, transformedLifetime=%{public}@
Received a new behavior override object: behaviorOverride=%{public}@
Receieved sync data: service=%{public}@, service=%{public}@, message=%{public}@, fromID=%@, context=%{public}@
Send sync data: GUID=%{public}@
Failed to send sync data: GUID=%{public}@, error=%{public}@
No paired devices, will skip sync.
Invalid record
Invalid record data
Invalid record version number: recordVersion=%lu, versionNumber=%lu
Invalid version number: version=%lu
Capturing sysdiagnose... date=%{public}@
Sysdiagnose captured
Could not capture sysdiagnose due to too much data
Could not capture sysdiagnose due to unable to make Plist: error=%{public}@
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: stateUpdate=%{public}@, connection=%{public}@
Did receive %lu invalidations, will handle; invalidations=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
XPC connection successfully accepted: connection=%p
XPC connection without any valid entitlements tried to connect, will reject: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%p, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get phone call bypass settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to set phone call bypass settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%p
Client XPC connection was interrupted: connection=%p
Client XPC connection was invalidated: connection=%p
Created new connection details for connection: connection=%p, clientIdentifier=%{public}@
Connection trying to use a client identifier that is already in use: connection=%p, clientIdentifier=%{public}@
Found connection details: connection=%p, clientIdentifier=%{public}@
Connection has no details registered: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection details unregistered: connection=%p, clientIdentifier=%{public}@
Maintaining mode assertion despite XPC disconnection as it was user requested: connection=%p, clientIdentifier=%{public}@
Connection registered for state updates: connection=%p, clientIdentifier=%{public}@
Connection unable to register for state updates: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection registered for settings updates: connection=%p, clientIdentifier=%{public}@
Connection unable to register for settings updates: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection registered for assertion updates: connection=%p, clientIdentifier=%{public}@
Connection unable to register for assertion updates: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection took mode assertion: connection=%p, clientIdentifier=%{public}@
Connection unable to take mode assertion: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection invalidated mode assertion: connection=%p, clientIdentifier=%{public}@
Connection unable to invalidate mode assertion: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection does not have an active mode assertion: connection=%p, clientIdentifier=%{public}@
Found mode assertion: connection=%p, clientIdentifier=%{public}@
Delivering mode assertion invalidation: invalidation=%{public}@, connection=%p, clientIdentifier=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%p, UUIDs=%{public}@
Assertion provider took %lu assertions; provider=%p
Assertion provider invalidated %lu assertions; provider=%p
State provider is requesting active assertions; stateProvider=%p
Got state update; provider=%{public}@, stateUpdate=%{public}@
Sync manager is requesting active assertions; manager=%{public}@
Encountered a bad state, no DND available
Sync manager is requesting invalidation of all assertions; manager=%{public}@, date=%{public}@, reason=%{public}@
DND schedule changed, will refresh state; manager=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Bulletin Board assertion taken; quietModeAssertion=%p
Bulletin Board assertion invalidated; quietModeAssertion=%p
DND sync settings changed: settings=%{public}@
Starting up...
Received (and ignored for now) new UI lock state: state=%@
@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-1
