init
copy
initWithName:isPeriodic:period:handler:
initWithName:delay:handler:
.cxx_destruct
periodSeconds
name
handler
queue
executionCriteria
_periodSeconds
_name
_handler
_queue
_executionCriteria
mutableCopy
setObject:forKey:
UTF8String
removeObjectForKey:
sharedInstance
registerTask:
unregisterTask:
allTasks
setAllTasks:
_allTasks
alloc
objectForKeyedSubscript:
setName:
setSwVersion:
setModel:
setModelDisplayName:
setNeedsUpdate:
ksDecviceWithiCloudDeviceInfo:
ksDecviceWithName:swVersion:model:modelDisplayName:
ksDeviceWithName:needsUpgrade:
ksDeviceWithName:swVersion:
swVersion
model
modelDisplayName
needsUpdate
_needsUpdate
_swVersion
_model
_modelDisplayName
fetchConfigurationPlistIfNeeded
userDefaultsSuiteName
initWithSuiteName:
aa_primaryAppleAccount
integerForKey:
setMajorVersForCloudKitSynciOS:
setMinorVersForCloudKitSynciOS:
setMajorVersForCloudKitSyncMacOS:
setMinorVersForCloudKitSyncMacOS:
setMinorSubversionForCloudKitSyncMacOS:
defaultCenter
removeObserver:
dealloc
setBool:forKey:
containsString:
hasPrefix:
majorVersForCloudKitSyncMacOS
majorVersForCloudKitSynciOS
minorVersForCloudKitSyncMacOS
minorVersForCloudKitSynciOS
minorSubversionForCloudKitSyncMacOS
initWithString:
decimalDigitCharacterSet
invertedSet
setCharactersToBeSkipped:
scanInt:
boolForKey:
objectForKey:
timeIntervalSinceNow
queryMigrationState
account
initWithAccount:
needUpgradeDeviceNames
arrayWithArray:
countByEnumeratingWithState:objects:count:
addObject:
fetchICloudDevicesWithCompletionBlock:
performRequestWithHandler:
array
responseDictionary
aggdPrefix
stringWithFormat:
numberWithBool:
addValue:forScalarKey:
date
postNotificationName:object:
isAccountCompatibleForCloudKitSyncingWithCompletionBlock:
isSWVersionCloudKitSyncCompatible:
fetchCloudKitDevicesWithCompletionBlock:
iCloudDeviceListMonitor
resetDataNoAccount
canMigrateToCloudKit
accountStore
setAccountStore:
setAccount:
_accountStore
_account
_majorVersForCloudKitSyncMacOS
_minorVersForCloudKitSyncMacOS
_minorSubversionForCloudKitSyncMacOS
_majorVersForCloudKitSynciOS
_minorVersForCloudKitSynciOS
initWithDirectoryPath:ignoreMigrationBatchCheck:forceCloudKitSync:
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
initWithBaseURL:
setLegacyStore:
legacyStore
setTextReplacementStore:
setDelegate:
initWithDirectoryPath:
shouldMigrateToCloudKit
deviceDidMigrate
pushAllLocalRecordsOnceIfNeeded
notifyTextReplacementDidChange
addObserver:selector:name:object:
checkForMigration
accountDidChange:
cloudKitManager
isRunningOnInternalBuild
ckStore
userIdentity
dataUsingEncoding:
_hashCKMigration
isEqualToString:
userInfo
boolValue
integerValue
resetMigrationState
setDidMigrateForCurrentAccount:
setDeviceDidMigrateOnCloud:
setDidCheckMigrationOnCloud:
pushMigrationStatusToCloud:
pushAllLocalData
requestSync:withCompletionBlock:
isAccountAvailable
pendingMigration
setPendingMigration:
migrateLocallyCheckCompatibility:
didCheckMigrationOnCloud
queryMigrationStatusOnCloudWithCallback:
deviceDidMigrateOnCloud
_migrateDevice
object
textReplacementStore
textReplacementServer
runMigration
prepareForMigration
_migrateEntriesSinceDate:repeatCount:
delegate
migrationDidStart
timeIntervalSinceReferenceDate
predicateWithFormat:
numberWithDouble:
count
numberWithUnsignedInteger:
addEntries:removeEntries:withCompletionHandler:
respondToMigrationCompletion
queryTextReplacementsWithPredicate:callback:
removeObserver:name:object:
didCompleteMigration
minimumUptimeRemaining
cleanup
class
isKindOfClass:
requestSyncWithCompletionBlock:
recordSyncStatus
textReplacementStoreWithTestDirectory:withDelegate:forceMigration:forceCloudKitSync:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
removeAllEntries
textReplacementEntries
queryTextReplacementsWithCallback:
respondToMigrationCompatibilityChange:
pullMigrationSettings
migrateLegacyStore
forwardingTargetForSelector:
setCkStore:
directoryPath
setDirectoryPath:
didMigrateForCurrentAccount
_migrationQueue
_didMigrateForCurrentAccount
_pendingMigration
_deviceDidMigrateOnCloud
_didCheckMigrationOnCloud
_ckStore
_legacyStore
_textReplacementStore
_directoryPath
_delegate
length
_fastCharacterContents
getCharacters:range:
_characterSetWithPattern:
_contentsExclusivelyInCharacterSet:
_nonIdeographicCharacterSet
_nonHiraganaKatakanaOrBopomofoSet
_containsCJKSymbolsAndPunctuation
_containsIdeographicCharacters
_containsEmoji
_containsHiraganaKatakanaOrBopomofo
enumerateSubstringsInRange:options:usingBlock:
wordCount
bytes
initWithRecordZoneName:
initWithContainerID:
containerWithIdentifier:
mainBundle
bundleIdentifier
executablePath
lastPathComponent
setSourceApplicationBundleIdentifier:
privateCloudDatabase
publicCloudDatabase
initWithZoneName:
defaultRecordZone
recordZone
zoneID
zoneName
accountStatusDidChange:
needsDeviceToDevice
identityUpdated:
setupAccountDidChange:
initWithContainer:recordZoneName:
cloudKitContainer
recordName
fetchUserRecordIDWithCompletionHandler:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
setupSubscription
setupRecordZoneWithCompletionHandler:ignoreDefaults:
queryAccountStatusWithCompletionHandler:
lastKnownUserKey
stringForKey:
recordZoneKey
subscriptionKey
_checkAccountStatusWithCompletionHandler:withRetryCount:
domain
code
doubleValue
accountStatus
supportsDeviceToDeviceEncryption
accountInfoWithCompletionHandler:
recordZoneOperationInProgress
setRecordZoneOperationInProgress:
cloudKitDatabase
localizedDescription
saveRecordZone:completionHandler:
deleteRecordZoneWithID:completionHandler:
errorWithDomain:code:userInfo:
initForReadingWithData:
initWithCoder:
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
encryptedValuesByKey
reason
recordWithName:type:cloudData:attributes:encryptedFields:
initWithRecordName:zoneID:
initWithRecordType:recordID:
recordWithName:type:attributes:encryptedFields:
subscriptionOperationInProgress
setSubscriptionOperationInProgress:
initWithZoneID:subscriptionID:
setShouldBadge:
setNotificationInfo:
arrayWithObject:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
addOperation:
updateRecords:deleteRecordIDs:withPriority:completionHandler:retryCount:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
setQualityOfService:
arrayWithObjects:count:
dictionaryWithValuesForKeys:
recordID
setPerRecordCompletionBlock:
numberWithLong:
userDidDeleteRecordZone:
resetZoneWithDelete:withCompletionHandler:
resolveConflicts:
updateRecords:deleteRecordIDs:withPriority:completionHandler:
setModifyRecordsCompletionBlock:
initWithCapacity:
timeIntervalSinceDate:
allKeys
fetchRecordsWithPriority:changeToken:completionHandler:retryCount:
unarchiveObjectWithData:
setPreviousServerChangeToken:
initWithRecordZoneIDs:optionsByRecordZoneID:
_submitFetchRecordsOperation:withPriority:changeToken:completionHandler:retryCount:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
archivedDataWithRootObject:
removeAllObjects
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
initWithRecordName:
initWithRecordIDs:
allValues
setFetchRecordsCompletionBlock:
publicDatabase
deleteZoneWithCompletion:
recordWithName:type:cloudData:attributes:
recordWithName:type:attributes:
recordIDForName:
fetchRecordsWithPriority:changeToken:completionHandler:
fetchPublicRecordsWithNames:completionHandler:
setCloudKitDatabase:
setRecordZone:
setCloudKitContainer:
setPublicDatabase:
_ckWorkQueue
_dataQueue
_recordZoneOperationInProgress
_subscriptionOperationInProgress
_cloudKitDatabase
_recordZone
_cloudKitContainer
_publicDatabase
_recordZoneKey
_subscriptionKey
_lastKnownUserKey
defaultManager
fileExistsAtPath:
deviceStateMonitor
isDataAvailableForClassC
isContentProtectionAvailable
setIsContentProtectionAvailable:
_isContentProtectionAvailable
keyboardDirectory
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
enumeratorAtPath:
nextObject
hasSuffix:
machServiceNameTextReplacement
userDictionaryWordKeyPairsFilePathLegacy
keyboardServicesDirectory
createFileIfDoesNotExist:
unitTestDirectoryPath
findAllDbsInDirectory:
importSampleShortcutsIfNecessary
coreDataStore
didMakeInitialPull
sampleShortcut
setDidRequestFirstPullForAccount:
setCkMigrationStatusOnCloud:
didRequestFirstPullForAccount
queryCloudIfFirstPullOrAccountChanged
setNeedsSaveToCloud:
timestamp
setTimestamp:
markDeletesForTextReplacementEntries:
recordTextReplacementEntries:
deleteTextReplacementsWithPredicate:
saveCKFetchToken:
queryEntriesWithPredicate:limit:
andPredicateWithSubpredicates:
ckMigrationStatusOnCloud
countLocalEntriesToBeSynced
floatForKey:
getSyncCount
getSyncCountThresholdHalfLifeHours
decayedSyncCountForTime:
_updateSyncCount:success:
getSyncCountThrottleThreshold
pushLocalChangesWithCompletionHandler:
pullRemoteDataWithCompletionHandler:
queryUpdatedLocalEntries
queryDeletedEntries
initWithArray:sliceSize:
nextSlice
containsObject:
localEntriesFromCloudEntries:
deleteTextReplacementsFromLocalStoreWithNames:excludeSavesToCloud:
logAggdValueForSyncIsPull:success:
numPullRequests
setNumPullRequests:
getCKFetchToken
countEntriesWithPredicate:
cloudEntriesFromLocalEntries:
cloudRecordIDsForLocalEntries:
cloudData
cloudID
unEncryptedFields
encryptedFields
recordType
localEntryFromCloudEntry:
isMigrationCompleted
removeAllEntriesWithCompletionHandler:
requestSyncIfPendingLocalChanges
totalPullRequestsUntilNow
setCloudKitManager:
setCoreDataStore:
_syncQueue
_ckMigrationStatusOnCloud
_didRequestFirstPullForAccount
_cloudKitManager
_coreDataStore
_numPullRequests
serviceConnection
isEquivalentTo:
validateTextReplacement:
setPriorValue:
errorWithCode:forEntry:
addEntries:removeEntries:withReply:
requestSyncWithReply:
cancelPendingUpdatesWithReply:
queryTextReplacementEntriesWithReply:
queryTextReplacementsWithPredicate:reply:
valueToInsert
textReplaceEntryFromTIDictionaryValue:
valueToDelete
transactionFromTextReplacementEntry:forDelete:
cancelPendingUpdates
modifyEntry:toEntry:withCompletionHandler:
performTransaction:completionHandler:
phraseShortcuts
_connection
dataWithContentsOfURL:options:error:
subdataWithRange:
performOnEverything:
temporaryFileNameForType:
fileSystemRepresentation
contents
generateKeyWithSize:
generateRecordNameForFilename:withKey:
stringByAppendingFormat:
fileURLWithPath:
stringWithUTF8String:
dictionary
decodeObjectOfClass:forKey:
encodeObject:forKey:
size
initWithBytes:length:encoding:
componentsSeparatedByString:
dataWithBytes:length:
setValue:forKey:
raise:format:
entryWithSerialisedDataAtURL:
serialiseToTemporaryFile
initWithName:
encodeWithCoder:
addBlobToFile:
loadAttributesFromURL:
saveAttributesToURL:
restoreToPath:
extendedAttributes
_extendedAttributes
_tempFiles
_fileArray
_fileBlob
getResourceValue:forKey:error:
intValue
decodeIntForKey:
encodeInt:forKey:
protectionFromURL:
numberWithInt:
setResourceValue:forKey:error:
writeToURL:atomically:
URLByAppendingPathComponent:
saveTo:
supportsSecureCoding
initWithURL:
lastModified
_protectionClass
_url
_lastModified
_offset
_size
initWithDirectory:captureContents:storeRoot:
addEntry:
checkResourceIsReachableAndReturnError:
findEntryWithComparison:recursively:
removeEntryWithName:
entryForName:
_contents
stringByAppendingString:
reset
dataWithContentsOfURL:
initWithName:inDirectory:
checkIfExists
setContents:
managedObjectContext
hasChanges
save:
performBlockAndWait:
persistentStoreCoordinator
initWithConcurrencyType:
setPersistentStoreCoordinator:
setMergePolicy:
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
managedObjectModel
initWithManagedObjectModel:
persistentStores
dictionaryWithObjectsAndKeys:
addPersistentStoreWithType:configuration:URL:options:error:
destroyPersistentStoreAtURL:withType:options:error:
contentsOfDirectoryAtPath:error:
removeItemAtPath:error:
fetchAndMergeTextReplacementEntry:context:
fetchTextReplacementEntry:context:
insertNewObjectForEntityForName:inManagedObjectContext:
setUniqueName:
firstObject
objectAtIndexedSubscript:
uniqueName
setWasDeleted:
needsSaveToCloud
wasDeleted
phrase
setPhrase:
shortcut
setShortcut:
setRemoteRecordInfo:
performWithOptions:andBlock:
queryManagedObjectsWithPredicate:limit:
entityForName:inManagedObjectContext:
setEntity:
setIncludesSubentities:
setIncludesPendingChanges:
setIncludesPropertyValues:
setPredicate:
initWithFetchRequest:
setResultType:
executeRequest:error:
result
setFetchOffset:
setFetchLimit:
setReturnsObjectsAsFaults:
sortDescriptorWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
localCloudEntryFromMocObject:
countForFetchRequest:error:
setFetchBatchSize:
remoteRecordInfo
setCloudData:
setCloudID:
getSyncStateEntry
setFetchChangeToken:
setDidPullOnce:
fetchChangeToken
didPullOnce
fetchTextReplacementWithUniqueName:context:
textReplacementEntriesWithLimit:
setManagedObjectContext:
setManagedObjectModel:
_queueMOC
_queuePSC
_managedObjectContext
_managedObjectModel
_persistentStoreCoordinator
initWithFiles:
initWithRecord:
numberWithUnsignedLong:
compare:
sortedArrayUsingComparator:
lastObject
floatValue
initWithFileURL:
keyNamesExcludingData
keyForData
filesForLanguage:
infoWithFiles:
infoWithRecord:
isBetterThan:
saveToRecord:
_modifiedDate
_file
localeWithLocaleIdentifier:
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
queryInitialState
startMonitoring
reachabilityDidChange:
_reachabilityRef
_isInternetReachable
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
invalidate
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
addObjectsFromArray:
_serviceConnection
allocWithZone:
copyWithZone:
uniqueID
illegalCharacterSet
stringByTrimmingCharactersInSet:
controlCharacterSet
whitespaceAndNewlineCharacterSet
UUID
UUIDString
initWithData:encoding:
data
initForWritingWithMutableData:
encodeSystemFieldsWithCoder:
finishEncoding
dataWithData:
uniqueRecordNameVer0
uniqueRecordName
priorValue
_needsSaveToCloud
_wasDeleted
_phrase
_shortcut
_timestamp
_priorValue
_cloudData
_cloudID
entity
attributesByName
willAccessValueForKey:
valueForKey:
didAccessValueForKey:
willChangeValueForKey:
didChangeValueForKey:
_copyAttributeValuesFromObject:
workQueue
managedObjectModelURL
setMinimumUptimeDidExpire:
setPersistentStoreDidLoadTime:
persistentStoreCoordinatorStoresWillChange:
persistentStoreCoordinatorStoresDidChange:
persistentStoreDidImportUbiquitousContentChanges:
basePersistentStoreURL
persistentStoreDidLoadTime
endMinimumUptime
_setDelegate:
loadPersistentStoreIfNecessary
importLegacyEntries
migrateTellurideData
migrateSundanceData
persistentStore
baseURL
runMaintenanceIncludeLocalVariations:
requestMinimumUptime
minimumUptimeDidExpire
pendingSampleShortcutImport
currentStoreIndentity
setPendingSampleShortcutImport:
detectAndCleanDuplicatesWithContext:
performMaintenanceIfNecessary
mergeEntriesFromAllStoresIncludeLocalVariations:
mergeEntriesForUbiquityIdentityChangeIfNecessary
errorWithCode:failedAdds:failedDeletes:
insertEntryWithValue:
_deleteTransaction:
save
multipleAddErrors:removeErrors:
removeEntriesWithPredicate:
sortDescriptorWithKey:ascending:selector:
entriesMatchingPredicate:sortDescriptors:
deleteObject:
entriesUsingSortDescriptors:
textReplacementEntriesFromManagedObjects:
dateWithTimeIntervalSince1970:
entities
rollback
entityDescription
initWithEntityName:
importedSinceMaintenance
setImportedSinceMaintenance:
fetchRequestWithEntityName:
propertiesByName
setPropertiesToFetch:
setPropertiesToGroupBy:
_shouldMergeShortcut:phrase:intoContext:
_mergeShortcut:phrase:fromContext:
initWithEntity:insertIntoManagedObjectContext:
mergeShortcutsFromContext:
ubiquityStoreURLForStoreURL:ubiquityIdentityToken:ubiquityName:
path
migrateEntriesFromStoreAtURL:error:
pathComponents
indexOfObject:
objectAtIndex:
subarrayWithRange:
pathWithComponents:
retirePersistentStoreAtURL:
didMergeEntriesForOtherLocalPeers:
ubiquityIdentityToken
storeURLForMergeAfterUbiquityIdentityChangeFromToken:toToken:withLastKnownToken:shouldDeleteFirst:
mergeEntriesForUbiquityIdentityChangeFromURL:firstDelete:
didMergeEntriesForNewUbiquityIdentity:
needsMaintenance
didMaintenance
loadMaintenancePreferencesIfNecessary
forceMaintenance
lastMaintenanceDate
setLastMaintenanceDate:
distantPast
setForceMaintenance:
expressionWithFormat:
setExpression:
setExpressionResultType:
_deleteDuplicatesOfShortcut:phrase:count:withContext:
objectWithID:
arrayWithObjects:
arrayWithCapacity:
arrayWithContentsOfFile:
legacyImportFilePaths
legacyImportWordKeyPairsFromFiles:
legacyStorePath
suspendedForAccountChange
setSuspendedForAccountChange:
absoluteString
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
entriesMatchingPredicate:
setPersistentStore:
setBaseURL:
_uptimeTransaction
_suspendedForAccountChange
_forceMaintenance
_pendingSampleShortcutImport
_minimumUptimeDidExpire
_persistentStore
_workQueue
_lastMaintenanceDate
_importedSinceMaintenance
_baseURL
_persistentStoreDidLoadTime
initWithDatabaseDirectoryPath:
initWithOwner:
initWithMachServiceName:
registerForPushNotifications
scheduleSyncTask
textReplacementManager
requestPeriodicSync
isSetupAssistantRunning
_performCleanup
setTextReplacementManager:
addEntries:removeEntries:forClient:withCompletionHandler:
generation
extractAggdMetricsForTextReplacement:
unconsumed
_cancelPendingUpdateForClient:
cancel
textReplacementEntriesForClient:
hasReadAccess
effectiveUserIdentifier
isBlackListed:
initWithOwner:forConnection:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
notificationFromRemoteNotificationDictionary:
topic
listener:shouldAcceptNewConnection:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
start
shutdown
buddySetupDidFinish
pushConnection
setPushConnection:
listener
setListener:
_daemonClient
_textReplacementManager
_pushConnection
_listener
valueForEntitlement:
setGeneration:
_owner
_hasReadAccess
_generation
addValue:forDistributionKey:
setValue:forScalarKey:
clearScalarKey:
setValueToInsert:
setValueToDelete:
whitespaceCharacterSet
rangeOfCharacterFromSet:
errorStringForCode:
logPhraseWordCount:
stringWithString:
appendString:
bundleWithIdentifier:
appleLanguagesPreference
localizations
preferredLocalizationsFromArray:forPreferences:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
fetchConfigurationPlist
setInteger:forKey:
URLWithString:
propertyListWithData:options:format:error:
infoClass
checkForDownload:uploads:allLanguages:
containerID
identitiesDidChange:
initForTestingWithManager:enablePushing:
disable
information
deltaDownloadForLanguages:
checkConfiguration
checkProgress:withInfo:
modifyInformationWithOperations:
generateRecordListForLanguages:
removeObjectsInArray:
overwriteFilesWithRecords:withCompletionHandler:
fileURL
readFilesWithRecordIDs:forColumns:withCompletionHandler:
generateKeyWithCompletionHandler:
loadKeyWithCompletion:
saveKey:withCompletion:
firstTimeDownloadWithKey:
minusSet:
allObjects
recordIDForLanguage:withKey:
filenameForLanguage:
checkErrors:
setDesiredKeys:
encryptedValueStore
setFetchRecordZoneChangesCompletionBlock:
requiredLanguages
setRequiredLanguages:
keyboardUsed
dumpAllRecordsWithCompletionHandler:
deleteZoneWithCompletionHandler:
_controlFile
_pushTask
_taskRun
_languagesIfOffline
_retryPending
arrayByAddingObjectsFromArray:
valueWithEntry:
matchesEntry:
shortcutForSorting
_valueToDelete
_valueToInsert
exceptionWithName:reason:userInfo:
raise
initWithArray:offset:count:
_array
_count
remaining
consumed
_sliceSize
com.apple._KSTasks.defaultQueue
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
executionCriteria
T@"NSObject<OS_xpc_object>",R,N,V_executionCriteria
periodSeconds
TQ,R,N,V_periodSeconds
name
T@"NSString",R,C,N,V_name
handler
T@?,R,N,V_handler
v8@?0
-[_KSTaskScheduler registerTask:]_block_invoke
-[_KSTaskScheduler registerTask:]_block_invoke_2
v16@?0@"NSObject<OS_xpc_object>"8
allTasks
T@"NSMutableDictionary",&,N,V_allTasks
_KSTRCloudKitMigratable
_KSCKMigrationPreviousCheckDate
osxMajorVersForCloudKitSync
osxMinorVersForCloudKitSync
osxMinorSubversionForCloudKitSync
iOSMajorVersForCloudKitSync
iOSMinorVersForCloudKitSync
_KSCloudKitDevicesMigrationStateDidChange
swVersion
model
modelDisplayName
T@"NSString",C,N,V_name
T@"NSString",C,N,V_swVersion
T@"NSString",C,N,V_model
T@"NSString",C,N,V_modelDisplayName
needsUpdate
TB,N,V_needsUpdate
devices
-[_KSiCloudDeviceListMonitor fetchCloudKitDevicesWithCompletionBlock:]_block_invoke
-[_KSiCloudDeviceListMonitor fetchCloudKitDevicesWithCompletionBlock:]_block_invoke_2
v20@?0@"NSArray"8B16
CloudKit device list request failed, error: %@
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
>>> icloud response dictionary: %@
-[_KSiCloudDeviceListMonitor fetchICloudDevicesWithCompletionBlock:]_block_invoke
%@.didMigrate
%@.waitingMigration
-[_KSiCloudDeviceListMonitor queryMigrationState]_block_invoke_2
v16@?0B8B12
accountStore
T@"ACAccountStore",&,N,V_accountStore
account
T@"ACAccount",&,N,V_account
majorVersForCloudKitSyncMacOS
Tq,N,V_majorVersForCloudKitSyncMacOS
minorVersForCloudKitSyncMacOS
Tq,N,V_minorVersForCloudKitSyncMacOS
minorSubversionForCloudKitSyncMacOS
Tq,N,V_minorSubversionForCloudKitSyncMacOS
majorVersForCloudKitSynciOS
Tq,N,V_majorVersForCloudKitSynciOS
minorVersForCloudKitSynciOS
Tq,N,V_minorVersForCloudKitSynciOS
KSCloudKitMigrationDidComplete
KSDidPullLegacyEntriesFromPeers
KSFirstMigrationCheckDate
KSDidPushAllLocalRecordsOnce-2
KSDidPushMigrationStatusOnce-2
kDoNotBypassMigrationBatchCheck
kDoNotBypass30DayMigrationCheck
KSForceCloudKitStore
com.apple.keyboard.textReplacement.Migratable.InBatch.didMigrate
seedMigrationPercent1
internalMigrationPercent1
whitelistedMigrationAccounts
userDidFallInMigrationAllowBatch
legacyStoreTest.db
com.apple.keyboardServices.textReplacementManager.migrationQueue
-[_KSTextReplacementManager initWithDirectoryPath:ignoreMigrationBatchCheck:forceCloudKitSync:]
-[_KSTextReplacementManager shouldMigrateToCloudKit]
v12@?0B8
!!!ERROR Sending darwin notification failed.
>>> sending out shortcut changes notif
-[_KSTextReplacementManager checkForMigration]
-[_KSTextReplacementManager checkForMigration]_block_invoke
-[_KSTextReplacementManager migrateLocallyCheckCompatibility:]
-[_KSTextReplacementManager _migrateDevice]_block_invoke
com.apple.KeyboardServices.MigrationTask
TRUEPREDICATE
timestamp > %@
-[_KSTextReplacementManager _migrateEntriesSinceDate:repeatCount:]_block_invoke_2
v16@?0@"NSError"8
-[_KSTextReplacementManager respondToMigrationCompletion]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
ckStore
T@"_KSTextReplacementCKStore",&,N,V_ckStore
legacyStore
T@"_KSTextReplacementLegacyStore",&,N,V_legacyStore
textReplacementStore
T@"NSObject<_KSTextReplacementStoreProtocol>",&,N,V_textReplacementStore
directoryPath
T@"NSString",C,N,V_directoryPath
didMigrateForCurrentAccount
TB,N,V_didMigrateForCurrentAccount
pendingMigration
TB,N,V_pendingMigration
deviceDidMigrateOnCloud
TB,N,V_deviceDidMigrateOnCloud
didCheckMigrationOnCloud
TB,N,V_didCheckMigrationOnCloud
delegate
T@"<_KSMigrationDelegate>",W,N,V_delegate
[^[ [ [:East_Asian_Width=Wide:][:East_Asian_Width=Fullwidth:] ] & [:Punctuation:] ]]
[:^Ideographic:]
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
com.apple.textinput.KeyboardServices
KSCloudKitAccountDidChange
KSCloudKitAccountDidChangeStatusKey
KSCloudKitAccountDidChangeUserChangedKey
KSCloudKitAccountDidChangeDeviceToDeviceKey
KSCloudKitAccountDidChangeAccountChangedKey
KSCloudKitIdentitiesDidChange
KSCKSubscriptionProd
KSCKDidSetupRecordZoneProd
KSLastKnownUserID
KSCKErrorDomain
timestamp
%@-%@
com.apple.keyboardservices._ksCloudKitManager.cloudKitWorkQueue
v24@?0@"CKRecordID"8@"NSError"16
v24@?0q8B16B20
-[_KSCloudKitManager accountStatusDidChange:]
-[_KSCloudKitManager queryAccountStatusWithCompletionHandler:]_block_invoke
-[_KSCloudKitManager queryAccountStatusWithCompletionHandler:]_block_invoke_3
v20@?0q8B16
-[_KSCloudKitManager isAccountAvailable]
-[_KSCloudKitManager _checkAccountStatusWithCompletionHandler:withRetryCount:]_block_invoke
v24@?0@"CKAccountInfo"8@"NSError"16
-[_KSCloudKitManager setupRecordZoneWithCompletionHandler:ignoreDefaults:]_block_invoke
-[_KSCloudKitManager setupRecordZoneWithCompletionHandler:ignoreDefaults:]_block_invoke_2
v24@?0@"CKRecordZone"8@"NSError"16
-[_KSCloudKitManager resetZoneWithDelete:withCompletionHandler:]_block_invoke
v24@?0@"CKRecordZoneID"8@"NSError"16
v32@?0@8@16^B24
-[_KSCloudKitManager recordWithName:type:cloudData:attributes:encryptedFields:]
-[_KSCloudKitManager recordWithName:type:attributes:encryptedFields:]
-[_KSCloudKitManager recordIDForName:]
-[_KSCloudKitManager setupSubscription]
KSTextReplacementSubscription
-[_KSCloudKitManager setupSubscription]_block_invoke
Error, failed to create subscription: %@, with error: %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[_KSCloudKitManager updateRecords:deleteRecordIDs:withPriority:completionHandler:retryCount:]
-[_KSCloudKitManager updateRecords:deleteRecordIDs:withPriority:completionHandler:retryCount:]_block_invoke
v24@?0@"CKRecord"8@"NSError"16
-[_KSCloudKitManager fetchRecordsWithPriority:changeToken:completionHandler:retryCount:]
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
-[_KSCloudKitManager _submitFetchRecordsOperation:withPriority:changeToken:completionHandler:retryCount:]_block_invoke
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
-[_KSCloudKitManager fetchPublicRecordsWithNames:completionHandler:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
cloudKitContainer
T@"CKContainer",&,N,V_cloudKitContainer
publicDatabase
T@"CKDatabase",&,N,V_publicDatabase
recordZoneKey
T@"NSString",R,N,V_recordZoneKey
subscriptionKey
T@"NSString",R,N,V_subscriptionKey
lastKnownUserKey
T@"NSString",R,N,V_lastKnownUserKey
recordZoneOperationInProgress
TB,N,V_recordZoneOperationInProgress
subscriptionOperationInProgress
TB,N,V_subscriptionOperationInProgress
cloudKitDatabase
T@"CKDatabase",&,N,V_cloudKitDatabase
recordZone
T@"CKRecordZone",&,N,V_recordZone
T@"<_KSCloudKitManagerDelegate>",W,N,V_delegate
KSDeviceProtectionClassDidChange
/AppleInternal
isContentProtectionAvailable
TB,N,V_isContentProtectionAvailable
com.apple.TextInput.shortcuts
/Library/Keyboard
UserDictionaryWordKeyPairs.plist
/Library/KeyboardServices
Could not create folder: %@, error: %@
com.apple.textInput.keyboardServices.textReplacement
UserDictionary.db
CloudUserDictionary.sqlite
CPSharedResourcesDirectory
Failed to softlink function CPSharedResourcesDirectory
/System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
Failed to open framework /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
TextReplacements
TextReplacementEntry
TextReplacementMigration
kDidMigrateToUUIDRecordName
KSDidMigrateToCloudKitOnCloud
KSSampleShortcutWasImported_CK
kTRCKLastSyncTime
kTRCKSyncCount
TRCKSyncCountHalflifeInHours
TRCKSyncMaxCountThreshold
_KSTRCKStoreDidReceiveChangesNotification
com.apple.keyboardServices.ckStore.syncWork
com.apple.keyboardServices.ckStore.dataQueue
-[_KSTextReplacementCKStore initWithDirectoryPath:]
-[_KSTextReplacementCKStore queryCloudIfFirstPullOrAccountChanged]_block_invoke_2
-[_KSTextReplacementCKStore accountDidChange:]_block_invoke
-[_KSTextReplacementCKStore pushAllLocalData]_block_invoke
wasDeleted == FALSE
didMigrate
migrationStatus
!!!ERROR, failed to write migration status to cloud: %@
v28@?0B8@"NSArray"12@"NSError"20
-[_KSTextReplacementCKStore requestSyncIfPendingLocalChanges]_block_invoke_2
-[_KSTextReplacementCKStore requestSync:withCompletionBlock:]
-[_KSTextReplacementCKStore pushLocalChangesWithCompletionHandler:]_block_invoke
-[_KSTextReplacementCKStore pullRemoteDataWithCompletionHandler:]_block_invoke_2
-[_KSTextReplacementCKStore pullRemoteDataWithCompletionHandler:]_block_invoke_3
-[_KSTextReplacementCKStore pullRemoteDataWithCompletionHandler:]_block_invoke_4
-[_KSTextReplacementCKStore pullRemoteDataWithCompletionHandler:]_block_invoke_6
v44@?0@"NSArray"8@"NSArray"16@"NSData"24B32B36B40
%@.failedSyncDailyStatus
%@.successfulSyncDailyStatus
needsSaveToCloud == TRUE OR wasDeleted == TRUE
needsSaveToCloud == TRUE AND wasDeleted == FALSE
wasDeleted == TRUE
-[_KSTextReplacementCKStore cloudEntriesFromLocalEntries:]
-[_KSTextReplacementCKStore cloudRecordIDsForLocalEntries:]
-[_KSTextReplacementCKStore localEntriesFromCloudEntries:]
coreDataStore
T@"_KSTextReplacementCoreDataStore",&,N,V_coreDataStore
ckMigrationStatusOnCloud
TB,N,V_ckMigrationStatusOnCloud
didRequestFirstPullForAccount
TB,N,V_didRequestFirstPullForAccount
numPullRequests
TQ,N,V_numPullRequests
cloudKitManager
T@"_KSCloudKitManager",&,N,V_cloudKitManager
-[_KSTextReplacementClientStore modifyEntry:toEntry:withCompletionHandler:]
Failed the update store: %@
v20@?0B8@"NSError"12
Failed to cancel operation with error: %@
KSUserWordEnabled
KSUserWordPushTime
KSUserWordPullTime
KSUserWordSizeMultiplier
KSUserWordDateMultiplier
KSUserWordSaveDynamic
KSUserWordSaveLanguageModel
KSUserWordSortDynamic
KSUserWordSortLanguageModel
v16@?0@"_KSFileEntry"8
UserWordStore
eattr
<%@; "%@" (extended attributes %@)>
Base class doesn't know how to restore itself
T@"NSString",R,&,N,V_name
extendedAttributes
T@"NSMutableDictionary",R,&,N,V_extendedAttributes
MBProtectionClass
offset
size
class
lastmodified
Can't stat %@
-[_KSFileFile saveTo:]
%@: Don't have URL or Data
<%@; %i bytes; %@>
serialised (offset %i)
supportsSecureCoding
TB,R
contents
<%@; %@>
T@"NSArray",R,&,N
.ctrl
-[_KSControlFileController reset]
-[_KSControlFileController setContents:]
Absent
Error: not tagged (%@)
Error: bad tag '%@'
Error: wrong tag value
Present
<%@; %@: %@>
_KSTextReplacementModel
TRCloudKitSyncState
com.apple.keyboardServices.cdStore.queueMOC
com.apple.keyboardServices.cdStore.queuePSC
TextReplacements.db
-[_KSTextReplacementCoreDataStore persistentStoreCoordinator]_block_invoke
-[_KSTextReplacementCoreDataStore recordTextReplacementEntries:]_block_invoke
-[_KSTextReplacementCoreDataStore fetchAndMergeTextReplacementEntry:context:]_block_invoke
-[_KSTextReplacementCoreDataStore fetchTextReplacementEntry:context:]
shortcut == %@ AND phrase == %@ 
uniqueName == %@
NOT (needsSaveToCloud == TRUE AND wasDeleted == FALSE)
-[_KSTextReplacementCoreDataStore deleteTextReplacementsFromLocalStoreWithNames:excludeSavesToCloud:]_block_invoke
-[_KSTextReplacementCoreDataStore deleteTextReplacementsWithPredicate:]_block_invoke
Caught Exception: %@
-[_KSTextReplacementCoreDataStore countEntriesWithPredicate:]_block_invoke
-[_KSTextReplacementCoreDataStore queryManagedObjectsWithPredicate:limit:]_block_invoke
-[_KSTextReplacementCoreDataStore saveCKFetchToken:]_block_invoke
-[_KSTextReplacementCoreDataStore getSyncStateEntry]_block_invoke
T@"NSString",&,N,V_directoryPath
managedObjectContext
T@"NSManagedObjectContext",&,N,V_managedObjectContext
managedObjectModel
T@"NSManagedObjectModel",&,N,V_managedObjectModel
persistentStoreCoordinator
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
Data
DynSize
DynDate
date
dynamic-text.dat
dynamic.lm
dynamic.dat
q24@?0@8@16
<%@; size = %i; date = %@%@>
; local
en_US
-dynamic-text.dat
%@-dynamic.lm
%@_%@-dynamic.lm
B16@?0@"NSString"8
KSTextReplacementDidChangeNotification
_KSTextReplacementUpdateDidFailErrorsKey
_KSTextReplacementDeleteDidFailErrorsKey
_KSTextReplacementEntryDidFailErrorKey
_KSTextReplacementUpdateDidFailEntriesKey
_KSTextReplacementDeleteDidFailEntriesKey
_KSTRShouldCleanupResources
KSTextReplacementErrorDomain
KSReachabilityDidChange
www.apple.com
com.apple.keyboardServices.reachabilityQueue
-[_KSReachabilityMonitor queryInitialState]
-[_KSReachabilityMonitor reachabilityDidChange:]
reachable
not reachable
phrase
T@"NSString",&,D,N
shortcut
T@"NSDate",&,D,N
remoteRecordInfo
T@"NSData",&,D,N
needsSaveToCloud
TB,D,N
wasDeleted
uniqueName
fetchChangeToken
didPullOnce
priorValue
cloudID
%@%@
shortcutE
phraseE
%@, %@
cloudData
T@"NSData",&,N,V_cloudData
TB,V_needsSaveToCloud
TB,V_wasDeleted
T@"NSString",C,N,V_cloudID
T@"NSString",C,N,V_phrase
T@"NSString",C,N,V_shortcut
T@"NSDate",C,N,V_timestamp
T@"_KSTextReplacementEntry",&,N,V_priorValue
_KSTRLegacyStoreDidImportChangesNotification
_KSTRLegacyStoreDidImportUbiquitousChanges
TIBuddySetupFinishedNotification_Private
com.apple.Preferences
UserDictionaryLocalPeerIdentityCurrent
UserDictionaryUbiquityIdentityTokenCurrent
UserDictionaryUbiquityIdentityTokenLastKnown
UserDictionaryLastMaintenanceDate
UserDictionaryImportedSinceMaintenance
kDidInsertSampleShortcutForPeer
T@"NSString",C,N
T@"NSDate",&,N
T@"NSString",C,D,N
UserDictionary
com.apple.keyboardServices.legacyStore.workQueue
com.apple.TextInput
Dictionaries
-[_KSTextReplacementLegacyStore loadPersistentStoreIfNecessary]
-[_KSTextReplacementLegacyStore requestMinimumUptime]
com.apple.keyboardservices.legacyStore.coredataUptime
-[_KSTextReplacementLegacyStore endMinimumUptime]
-[_KSTextReplacementLegacyStore importSampleShortcutsIfNecessary]
-[_KSTextReplacementLegacyStore importSampleShortcutsIfNecessary]_block_invoke
-[_KSTextReplacementLegacyStore addEntries:removeEntries:withCompletionHandler:]_block_invoke
-[_KSTextReplacementLegacyStore removeEntriesWithPredicate:]_block_invoke
phrase == %@ AND shortcut == %@
UserDictionaryEntry
Error writing to user dictionary: %@
Persistent store imported ubiquitous content changes
Merging shortcuts from sourceContext
Error fetching shortcuts from sourceContext
Error saving after shortcut migration: %@
Completed merge (inserted %ld shortcuts)
shortcut == %@ && phrase == %@
Error while fetching shortcut - %@
Should merge shortcut: "%@" -> "%@"? %@
Merge shortcut: "%@" -> "%@"
Error fetching shortcut - %@
Unable to migrate shortcut
Attempting shortcut merge (%@)
Could not open store at %@: %@
Looks like we tried to open a destroyed container with read-only permission at: %@
Trying again with write permission...
Still could not open store at %@: %@
Shortcut merge %@ (%@)
success
-[_KSTextReplacementLegacyStore retirePersistentStoreAtURL:]
Ubiquity container became available. Merging local shortcuts into Ubiquity container.
Ubiquity container became available, but different from last known container. Discarding local shortcuts.
Ubiquity container became unavailable. Cloning shortcuts from Ubiquity container into local store.
-[_KSTextReplacementLegacyStore mergeEntriesForUbiquityIdentityChangeFromURL:firstDelete:]
Merge successful.
Failed merge after Ubiquity account change.
CoreDataUbiquitySupport
-[_KSTextReplacementLegacyStore mergeEntriesFromAllStoresIncludeLocalVariations:]
Saving observed local peer identity to %@
Saving observed Ubiquity identity tokens to %@
Detect and clean shortcut duplicates.
count:(shortcut)
count
Deduplication completed (number of duplicated shortcuts = %ld)
Found duplicate shortcut: "%@" -> "%@" (count=%ld)
Error while fetching duplicates - %@
Error while deleting duplicates - %@
Error userInfo - %@
zh-Pinyin
zh-Zhuyin
latin
SerializedUserWords-
%s: %@
-[_KSTextReplacementLegacyStore importLegacyEntries]
UserDictionary.sqlite
Couldn't read legacy data at %@
Performing migration from word-key pairs file at %@
Couldn't remove legacy store at %@: %@
Added shortcut %@ for phrase %@
Couldn't remove legacy word-key pairs file at %@: %@
Couldn't save words imported from legacy store: %@
Performing migration from legacy store at %@
Removing legacy store at %@
-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresWillChange:]
-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresWillChange:]_block_invoke
-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresDidChange:]
-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresDidChange:]_block_invoke
Inaccessible fault encountered
persistentStore
T@"NSPersistentStore",&,N,V_persistentStore
workQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
suspendedForAccountChange
TB,N,V_suspendedForAccountChange
forceMaintenance
TB,N,V_forceMaintenance
lastMaintenanceDate
T@"NSDate",&,N,V_lastMaintenanceDate
importedSinceMaintenance
Tq,N,V_importedSinceMaintenance
pendingSampleShortcutImport
TB,N,V_pendingSampleShortcutImport
baseURL
T@"NSURL",&,N,V_baseURL
minimumUptimeDidExpire
TB,N,V_minimumUptimeDidExpire
persistentStoreDidLoadTime
T@"NSDate",&,N,V_persistentStoreDidLoadTime
com.apple.keyboardservices.textreplacement.allow
com.apple.keyboard
_KSTIBuddySetupDidFinishNotification_Private
com.apple.keyboardServices.textReplacementServer.storeWorkQueue
-[_KSTextReplacementServer reachabilityDidChange:]
-[_KSTextReplacementServer reachabilityDidChange:]_block_invoke_2
com.apple.KeyboardServices.TextReplacementCKSyncTask
-[_KSTextReplacementServer requestPeriodicSync]_block_invoke
-[_KSTextReplacementServer textReplacementManager]
-[_KSTextReplacementServer cleanup]_block_invoke
-[_KSTextReplacementServer _performCleanup]
-[_KSTextReplacementServer start]
-[_KSTextReplacementServer addEntries:removeEntries:forClient:withCompletionHandler:]_block_invoke
-[_KSTextReplacementServer removeAllEntries]_block_invoke_2
-[_KSTextReplacementServer runMigration]
>>> APS Push received: %@ %@
-[_KSTextReplacementServer connection:didReceiveIncomingMessage:]_block_invoke
-[_KSTextReplacementServer buddySetupDidFinish]
pushConnection
T@"APSConnection",&,N,V_pushConnection
listener
T@"NSXPCListener",&,N,V_listener
textReplacementManager
T@"_KSTextReplacementManager",&,N,V_textReplacementManager
%s: cancelled with counter %lld
-[_KSTRClient cancel]
NSDetailError
Cancellation Failed, did not find pid
-[_KSTRClient queryTextReplacementEntriesWithReply:]
-[_KSTRClient queryTextReplacementsWithPredicate:reply:]
generation
Tq,N,V_generation
hasReadAccess
TB,R,N,V_hasReadAccess
com.apple.keyboard.textReplacement
_KSTextReplacementErrorCoreDataFailure
_KSTextReplacementErrorXPCFailure
_KSTextReplacementErrorExpansionIsEmpty
_KSTextReplacementErrorExpansionIsAllWhitespace
_KSTextReplacementErrorExpansionLength
_KSTextReplacementErrorShortcutHasWhitespace
_KSTextReplacementErrorShortcutLength
_KSTextReplacementErrorShortcutContainsCJKVCharacters
_KSTextReplacementErrorShortcutContainsEmojiCharacters
_KSTextReplacementErrorShortcutContainsCJKPunctuation
_KSTextReplacementErrorCJKVShortcutLength
_KSTextReplacementErrorOperationCancelled
_KSTextReplacementErrorMultipleErrors
_KSTextReplacementErrorExpansionSimilarToShortcut
_KSTextReplacementErrorNone
+[_KSTextReplacementHelper validateTextReplacement:]
%@.phraseOnly
three
four
five
sixToTen
elevenToFifteen
sixteenToInf
%@.countWords.%@
.pull
.push
.success
.fail
AppleLanguages
target
AppleLanguages preference: %@
Couldn't read AppleLanguages preference.
Preferred localization: %@
TIUserDictionarySampleShortcuts
plist
>>> Loading sample shortcut from %@
_LOCALIZABLE_
configPullTime
+[_KSTextReplacementHelper fetchConfigurationPlist]
https://configuration.apple.com/configurations/internetservices/cloudkit/textinput/textinput-1.0.plist
_KSUserWordsWereDownloadedNotification
_KSUserWordsWereDownloadedLanguageKey
_KSUserWordsWereDownloadedFilesKey
com.apple.textinput.KeyboardServices.Secure
UserWords
UserWordFile
UserWordData
Languages
LastUsed
0123456789ABCDEF
com.apple.keyboardServices.userWords.workQueue
com.apple.keyboardServices.userWords.pusher
-[_KSUserWordsSynchroniser accountDidChange:]_block_invoke
-[_KSUserWordsSynchroniser identitiesDidChange:]_block_invoke
Start
Read
Compare
Push
Pull
Complete
-[_KSUserWordsSynchroniser checkProgress:withInfo:]
v16@?0@"NSArray"8
B20@?0B8@"NSMutableDictionary"12
-[_KSUserWordsSynchroniser checkForDownload:uploads:allLanguages:]_block_invoke_2
Error
Language
Disposition
No local copy
Ours is better
 [upload disabled]
Server is better
 [download disabled]
Equal!
No local copy for initial push
push
-[_KSUserWordsSynchroniser checkForDownload:uploads:allLanguages:]_block_invoke_4
-[_KSUserWordsSynchroniser checkForDownload:uploads:allLanguages:]_block_invoke
pull
-[_KSUserWordsSynchroniser keyboardUsed]_block_invoke
-[_KSUserWordsSynchroniser generateKeyWithCompletionHandler:]_block_invoke
-[_KSUserWordsSynchroniser generateKeyWithCompletionHandler:]_block_invoke_2
v24@?0@"NSError"8@"NSData"16
-[_KSUserWordsSynchroniser checkConfiguration]
v16@?0@"NSData"8
-[_KSUserWordsSynchroniser firstTimeDownloadWithKey:]_block_invoke_2
keybytes
requiredLanguages
T@"NSArray",&,N
{%@ => %@}
T@"NSDate",&,N,V_timestamp
valueToDelete
valueToInsert
<%@: valueToDelete = %@, valueToInsert = %@>
T@"_KSTIUserDictionaryEntryValue",&,N,V_valueToDelete
T@"_KSTIUserDictionaryEntryValue",&,N,V_valueToInsert
Attempt to index beyond end of array. Count of items is %lu, index is %lu
remaining
TQ,R,N
_KSSystemTask
_KSTaskScheduler
_KSDeviceInfo
_KSiCloudDeviceListMonitor
_KSTextReplacementManager
_KSTextReplacementSyncProtocol
_KSTextReplacementStoreProtocol
NSObject
KSExtras
WordCount
KSCKMigrationHash
_KSCloudKitManager
_KSDeviceStateMonitor
_KSUtilities
_KSTextReplacementCKStore
_KSCloudKitManagerDelegate
_KSTextReplacementClientStore
_KSTextReplacementCancellation
_KSFileEntry
_KSFileFile
NSSecureCoding
NSCoding
_KSBlobSaver
_KSFileDirectory
NSFastEnumeration
_KSControlFileController
_KSTextReplacementCoreDataStore
_KSUserWordsInfo
_KSTextReplacementServiceProtocol
_KSReachabilityMonitor
_KSTextReplacementServerConnection
_KSTextReplacementManagedObject
_KSCKSyncStateManagedObject
_KSTextReplacementEntry
NSCopying
TIUserDictionaryWordServer
_KSTIUserDictionaryEntry
_KSTextReplacementLegacyStore
NSManagedObjectContextFaultingDelegate
_KSTextReplacementServer
NSXPCListenerDelegate
APSConnectionDelegate
_KSTRClient
_KSAggdLogger
_KSTextReplacementHelper
_KSUserWordsSynchroniser
_KSUserWordsSynchroniserCloudKitManager
_KSTIUserDictionaryEntryValue
_KSTIUserDictionaryTransaction
ArraySlice
ArraySlicer
@16@0:8
@44@0:8@16B24Q28@?36
@40@0:8@16Q24@?32
v16@0:8
Q16@0:8
@?16@0:8
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_xpc_object>"
v24@0:8@16
@"NSMutableDictionary"
@24@0:8@16
@48@0:8@16@24@32@40
@28@0:8@16B24
@32@0:8@16@24
B16@0:8
v20@0:8B16
B24@0:8@16
v24@0:8@?16
q16@0:8
v24@0:8q16
@"ACAccountStore"
@"ACAccount"
@40@0:8@16@24B32B36
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSError">32
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSArray"B>16
v32@0:8@"NSPredicate"16@?<v@?@"NSArray"B>24
v24@0:8@?<v@?B>16
v32@0:8Q16@?24
v32@0:8Q16@?<v@?B>24
@32@0:8@16B24B28
v32@0:8@16Q24
d16@0:8
@"_KSTextReplacementCKStore"
@"_KSTextReplacementLegacyStore"
@"NSObject<_KSTextReplacementStoreProtocol>"
@"<_KSMigrationDelegate>"
B24@0:8^{USet=}16
^{USet=}24@0:8@16
^{USet=}16@0:8
v32@0:8@?16Q24
v28@0:8@?16B24
v28@0:8B16@?20
@56@0:8@16@24@32@40@48
@40@0:8@16@24@32
v48@0:8@16@24Q32@?40
v56@0:8@16@24Q32@?40Q48
v40@0:8Q16@24@?32
v48@0:8Q16@24@?32Q40
v56@0:8@16Q24@32@?40Q48
@"CKDatabase"
@"CKRecordZone"
@"<_KSCloudKitManagerDelegate>"
@"CKContainer"
v24@0:8@"NSString"16
Q24@0:8@16
v28@0:8Q16B24
v24@0:8Q16
@"_KSCloudKitManager"
@"_KSTextReplacementCoreDataStore"
@"_KSTextReplacementServerConnection"
@"NSMutableArray"
@"NSData"
i24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSData"16@0:8
@"NSURL"
@"NSDate"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@28@0:8@?16B24
v32@0:8@16@24
v28@0:8@16B24
@24@0:8Q16
@32@0:8@16Q24
@"NSManagedObjectContext"
@"NSManagedObjectModel"
@"NSPersistentStoreCoordinator"
@"_KSFileEntry"
v40@0:8@"NSArray"16@"NSArray"24@?<v@?B@"NSError">32
v24@0:8@?<v@?B@"NSError">16
^{__SCNetworkReachability=}
@"NSXPCConnection"
@24@0:8^{_NSZone=}16
@"_KSTextReplacementEntry"
@"NSDate"16@0:8
v24@0:8@"NSDate"16
q48@0:8@16@24@32@40
q48@0:8@"NSManagedObjectContext"16@"NSManagedObject"24@"NSManagedObjectID"32@"NSPropertyDescription"40
B40@0:8@16@24@32
B32@0:8@16^@24
@48@0:8@16@24@32^B40
B28@0:8@16B24
B20@0:8B16
v48@0:8@16@24q32@40
@"NSObject<OS_os_transaction>"
@"NSPersistentStore"
B20@0:8I16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v48@0:8@16@24@32@?40
@"_KSTRClient"
@"_KSTextReplacementManager"
@"APSConnection"
@"NSXPCListener"
@"_KSTextReplacementServer"
v32@0:8q16@24
@24@0:8q16
q24@0:8@16
@32@0:8q16@24
@40@0:8q16@24@32
v24@0:8B16B20
v28@0:8i16@20
@"_KSControlFileController"
@"_KSSystemTask"
@"NSArray"
@"_KSTIUserDictionaryEntryValue"
@40@0:8@16Q24Q32
%s  Running activity %@, extended=%d
%s  Done running activity %@, extended=%d
%s  Checking-in activity %@
%s  cloudkit devices that needs upgrade: %@
%s  >>> devices that need to upgraded: %@
%s  couldn't fetch icloud device list
%s  >>> The device migration eligibility for 30day check is: %@
%s  >>> using cloudkit store
%s  >>> using legacy store
%s  Should allow migration to cloudkit: %@
%s  begin checking for migration
%s  User is not logged in, not migrating
%s   migration pending returning
%s   checking migration on cloudkit
%s   checking for device comaptibility
%s  >>> can migrate device: %@
%s  scheduling migration
%s  >>> Number of entries received for migration from LegacyStore is: %@
%s  completed sync following migration
%s  >>> switching to CK Store
%s  removing migration state monitor
%s  Received account change from cloudkit
%s  >>> checking account status
%s  >>> account is set up
%s  >>> user logged in has changed
%s  Account status: %@
%s  Error in getting account status: %@
%s  >>> creating record zone
%s  !!!ERROR: Could not save Record Zone %@: %@
%s  >>> deleting record zone
%s  ERROR creating record: %@; %@
%s  >>> ERROR creating record: %@; %@
%s  >>> ERROR creating recordID: %@; %@
%s  already subsribed for zone change
%s  Creating subscription
%s  hit max retry limit, not updating records
%s  >>> Could not save recordName=%@; error=%@
%s  >>> modify operation completed with rrorCode: %@ description: %@
%s  >>> partial failure : %@
%s  >>> ERROR reaching the network
%s  >>> Record zone not found
%s  !!!ERROR failed to unarachive change token
%s  server change token updated: %@
%s  >>> ERROR for fetch records operation: %@
%s  CloudKit said our change token has expired!
%s  Could not fetch record changes: %@
%s  Completed fetching # records : %@, deleted records: %@
%s  Couldn't create recordID
%s  Couldn't create coredata store for ClouKit sync
%s  No cloudkit server store available
%s  >>> Finished pulling remote entries for the first fetch
%s  >>> User has logged out of the account, removing local entries
%s  marked all local entries to be saved to cloud
%s  Reachability changed, requested sync due to local change
%s  User is not logged in, not syncing
%s  Skipping syncing, reached threshold
%s  pushing local changes
%s  no entries to push
%s  entries to Push: %@, deleted IDs: %@
%s  completed uploading local changes
%s  Pulling remote data
%s  >>> storing pulled records locally; added entries: %@, deleted: %@
%s  completed saving pulled records
%s  morecoming from cloudkit, pulling again
%s  >>> no CKRecord for TextreplacementEntry: %@
%s  >>> ERROR couldn't create recordID for entry: %@, cloudID: %@
%s  cloud migration status: %@
%s  not modifying entry as old and new are the same
%s  Unable to find contents of %@
%s  Unable to create file at %@
%s  Failed to delete %@
%s  Failed to create %@
%s  Failed to mark %@ as non-backup: %@
%s  ERROR! Could not access coredata store, %@
%s  >>> !!!ERROR: failed to save records with error: %@
%s  not saving as the entry is older than or same as existing record, entryToSaveID: %@, existing record: %@
%s  not clearing the deleted flag
%s  >>> entry is nil, returning
%s  ERROR! Failed to delete: %@
%s  >>> deleted %@ records
%s  Could not get records to be synced count, error: %@
%s  Querying records failed with error : %@, exception %@
%s  error saving change token: %@
%s  Could not create reachability!
%s  Could not set reachability callback
%s  Could not set reachability queue
%s  started monitoring reachability
%s  Internet reachability did change %@
%s  couldn't load persistent store at url: %@, error: %@
%s  loaded persistent store at url: %@
%s  persistentstore loaded, requesting minimum uptime
%s  Ending minimum uptime
%s  importing sample shortcut
%s  already imported sample shortcut
%s  >>> finished importing sample shortcut
%s  Replying with error = %i
%s  Failed to save to coredata store
%s  ERROR!!! Failed to remove entrtries with error: %@
%s  Retiring store at %@
%s  Could not retire store at %@: %@
%s  file to merge does not exist: %@
%s  merged entries from db: %@, error: %@
%s  >>> persistentStoreCoordinatorStoresWillChange
%s  Suspending user dictionary due to impending account change.
%s  >>> persistentStoreCoordinatorStoresDidChange
%s  >>> current legacy store: %@
%s  Resuming user dictionary after account change.
%s  Requesting sync as reachability changed
%s  completed sync for reachability change
%s  completed periodic sync task
%s  >>> Setup Assistance is running, not loading text replacements
%s  not cleanin up, waiting remaining minimum uptime: %@
%s  Cleaning up all resources
%s  TextReplacementServer accepting request now
%s  >>> Not removing entry: %@, as the replacement entry is not valid
%s  >>> the modified entry's unique ID should not be the same as prior, changing
%s  >>> adding entries: %@, removing entries %@
%s  >>> completed remove all TR entries
%s  running migration of legacy store
%s  >>> PUSH notif received, completed pulling TR entries
%s  >>> buddysetup did finish
%s  Client does not have read access
%s  >>> ERROR: invalid TR entry, error: %@
%s  Fetching configuration plist
%s  Resetting user words state due to account change %i
%s  Disabling syncing if necessary as no compatible account found
%s  Disabling syncing if necessary as account found is not supported
%s  Identities changed - re-attempting
%s  State: %s: %@
%s  Error reading files (upload check): %@
%s  Failed to push our dictionaries. Undoubtedly we shall try again. %@
%s  Error reading files (download data): %@
%s  Re-setting languages for massive inactivity: %@
%s  Key save state: %@
%s  Account not supported
%s  Record changed - key exists. Loading from server...
%s  Key load state: %@
%s  Failed to load existing key (%@), trying again later
%s  Failed to save new key (%@), trying again later
%s  Persistent data not found, acquiring key!
%s  Settings file already exists! Very wrong (new key %@; old key %@)
MbP?
@(#)PROGRAM:KeyboardServices  PROJECT:KeyboardServices-1
