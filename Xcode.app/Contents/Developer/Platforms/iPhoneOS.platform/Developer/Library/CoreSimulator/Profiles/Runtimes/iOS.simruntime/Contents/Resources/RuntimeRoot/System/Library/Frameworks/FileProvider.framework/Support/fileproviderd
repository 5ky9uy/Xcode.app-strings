[NOTICE] %s starting.
[DEBUG] Debug logging enabled.
[CRIT] Running as euid 0. We will keep running, but not do anything.
[ASSERT] 
 nil message interface name
[ERROR] nil itemURL although we need one for sandbox check
[DEBUG] FPDPushConnection began listening
[DEBUG] FPDPushConnection accepted connection
[ASSERT] 
 %s was called with nil completion block!
[DEBUG] FPDPushConnection connection trying to register for provider %@
[DEBUG] couldn't find extension with identifier %@, trying application
[ERROR] Couldn't find provider for registering bundle %@
[ERROR] invalid environment %@ specified in %@
[DEBUG] requested topic %@ for application %@
[ERROR] received token for topic %@, but no client waiting for it
[DEBUG] received token for topic %@, informing client
[DEBUG] received push for topic %@
[DEBUG] sending %@ to %@
[ERROR] Failed creating key for provider %@
[ERROR] Failed to create key for consumer %@
[ERROR] Failed to create key for file entry %@
[ERROR] Failed to create key for ACL entry between consumer key %@ and file key %@
[CRASH] Failed to create ACL entry for %@:%@ -> %@ (%@)
[ERROR] Failed to delete ACL entry between consumer key %@ and file key %@
[DEBUG] Retrying opening access control database after first unlock
[ERROR] Cannot open access control database. Error: %@
[DEBUG] Opened access control database
[NOTICE] migrating from %lu to %lu
[CRASH] Failed to migrate legacy database; %@
[CRASH] Cannot create access control directory. Error: %@
[ERROR] sysctl(kern.osversion) failed; error %d (%s)
[ASSERT] 
 Observation on url %@ started twice
[ERROR] no provider found for presented item %@
[ERROR] error %@ while starting observation of url %@ in provider %@
[DEBUG] 
%llx received update for items %@
[INFO] 
 posting file presenter update for updated file %@
[NOTICE] Ignoring file presenter update for item %@ since it doesn't have a fileURL set
[DEBUG] 
%llx received notification of changes
[ASSERT] 
 shouldn't be fetching changes
[ASSERT] 
 shouldn't have change token
[DEBUG] 
%llx %@: fetching current change token
[DEBUG] 
%llx received current change token
[ERROR] no change token returned for %@: %@
 on url: %@
[ASSERT] 
 should have change token
[DEBUG] 
%llx %@: fetching changes
[DEBUG] 
%llx received changes
[DEBUG] Change token has not changed: was %@ now %@
[ERROR] There shouldn't be more changes if change token has not changed
[ERROR] Received state changes, but change token remains the same
[ERROR] change token was reset
[ERROR] error when getting changes for %@: %@
 on url: %@
[DEBUG] 
%llx 
[NOTICE] starting exit sequence because of received signal (%s)
[NOTICE] exiting with code %d...
[CRIT] There is no need to call setupFileProviderManager twice!
[DEBUG] start watching for app updates
[INFO] list of apps updated on device
[ERROR] can't find extension with identifier "%s"
[ERROR] error calling refresh installed apps: %@
[DEBUG] refresh installed apps completed
[DEBUG] registering task to auto-delete old trashed items
[INFO] remove trashed items older than 30 days
[ERROR] can't set activity state to CONTINUE, process might be killed before completion of maintenance task
[DEBUG] task to remove old trashed items complete
[ERROR] can't set activity state to DONE
[DEBUG] 
%llx starting up, welcome, pid:%d, os:%@, version:%@
[DEBUG] 
%llx starting file provider server
[DEBUG] 
%llx continue startup in utility
[INFO] New connection from pid %d [%@]
[ERROR] Cannot get entitlements: %@
[ERROR] Launch of %@ timed out, cannot get entitlements.
[ERROR] extension bundle %@ doesn't have a bundle path (%@)?
[ERROR] pluginkit can't find plugin at %@; are you sure the plugin is properly registered?
[ERROR] extension attributes of bad type %@
[ERROR] %@ contains supported file type that's not of type NSString: %@
[ERROR] invalid type for key "NSFileProviderSupportedFileTypes" (expected: NSArray, actual: %@) -- extension identifier: %@
[ERROR] invalid type for key "NSExtensionFileProviderDocumentGroup" (expected: NSString, actual: %@) -- extension identifier: %@
[ERROR] Cannot deduce the provided items URL for %@
[ERROR] can't create directory at %@; %@
[ERROR] invalid type for key "NSExtension" (expected: NSDictionary, actual: %@) -- extension identifier: %@
[ERROR] Calling deprecated method: %@
[DEBUG] 
%llx 
 NSFileCoordinator requested %@ to provide item at %@ (consumer: %@, readerID: %@, options: %lu)
[ERROR] readyID already registered
[DEBUG] no need to call start providing because an identical request is alreay in-flight for a different reader
[DEBUG] 
%llx completion for start providing %@
[DEBUG] ignoring completion request was cancelled
[ERROR] 
 no item provided; %@
[INFO] 
 item %@ provided
[DEBUG] calling completion handler for reader %@
[DEBUG] 
%llx 
 NSFileCoordinator cancelled request for %@ to provide item at %@ (consumer: %@, readerID: %@)
[ERROR] got cancellation request for unknown reader ID %@
[DEBUG] no more reader interested by item, stop providing
[ERROR] can't stop providing item at %@; %@
[DEBUG] item at %@ is not provided anymore
[DEBUG] 
%llx NSFileCoordinator is telling us the item at %@ was changed (consumer: %@, writerID: %@)
[DEBUG] The item at %@ is provided by the extension %@
[ERROR] can't retrieve item for URL %@; %@
[ERROR] Could not find any extension that provides an item at URL %@
[DEBUG] 
%llx Item at %@ gaining presenter %@
[DEBUG] 
%llx Item at %@ losing presenter %@
[DEBUG] active fp: %@
[DEBUG] 
%llx Item at %@, presenter %@, moving to %@
[ERROR] Cannot alert provider that alternate contents document was updated for document URL %@ on provider %@: %@
[ERROR] failed updating alternate contents Doc for Document at URL %@ on provider %@: %@
[DEBUG] successfully updated alternate contents Doc for Document at URL %@ on provider %@
[ERROR] Cannot set alternate contents URL on document URL %@ on provider %@: %@
[DEBUG] %s
[ERROR] can't get item for URL %@ for extension %@; %@
[ERROR] Cannot get item ID for %@ for extension %@. Error: %@
[ERROR] Proxy failed to get item ID for %@ for extension %@. Error: %@
[DEBUG] Successfully got item ID 
 for %@ from extension %@
[ERROR] Cannot get URL for item ID 
 for extension %@. Error: %@
[ERROR] Proxy failed to get URL for item ID 
 for extension %@. Error: %@
[DEBUG] Successfully retrieved URL %@ for item ID 
 from extension %@
[ERROR] Cannot provide item at %@ for extension %@. Error: %@
[ERROR] Proxy failed to start providing item at %@ for extension %@. Error: %@
[DEBUG] Successfully provided item at %@ for extension %@.
[ERROR] Cannot tell extension %@ that item at %@ has changed.
[ERROR] Could not tell extension %@ that item at %@ has changed. Error: %@
[ERROR] Cannot tell extension %@ to trash item at %@.
[ERROR] can't notify extension %@ of lastUsedDate (%@) update for items %@
[ERROR] could not notify extension %@ of lastUsedDate (%@) update for item %@; %@
[ERROR] can't notify extension %@ that the list of installed apps was updated: %@
[ERROR] can't ask extension %@ to remove trashed items older than %@
[ERROR] can't ask extension %@ to delete items with domain identifiers %@: %@
[ERROR] Proxy failed to delete items with domain identifiers %@ for extension %@: %@
[DEBUG] Succesfully deleted items with domain identifier %@ for extension %@
[ERROR] Cannot stop providing item at %@ for extension %@. Error: %@
[ERROR] Proxy failed to stop providing item at %@ for extension %@. Error: %@
[DEBUG] Successfully stopped providing item at %@ for extension %@.
[ERROR] Cannot tell extension %@ that item at %@ did change: %@
[ERROR] Could not tell extension %@ that item at %@ did change. Error: %@
[ERROR] can't perfom request on extension "%@" to fetch NSURL attributes for item %@; %@
[ERROR] can't get values for item at %@ from extension "%@"; %@
[DEBUG] values for %@: %@
[ERROR] unhandled domain %@ of unknown type: %@
[ERROR] unhandled domain state %@ of unknown type: %@
[ERROR] can't send the domain update to the extension: %@
[ERROR] can't perfom request on extension "%@" to fetch message interfaces for document at %@; %@
[ERROR] can't perfom request on extension "%@" to fetch messages interfaces for item identifier %@; %@
[ERROR] received malformed file provider push (bad container-identifier key), payload was %@
[DEBUG] Received push on container %@ for provider %@
[INFO] 
 Registered file provider extension %@ (%@) for path %@
[INFO] 
 Deregistered file provider extension %@ (%@) for path %@
[WARNING] Removing domains for provider identifier %@
[ERROR] Failed to remove domains entry for provider identifier %@ at path %@: %@
[DEBUG] 
%llx loading provider extensions
[ERROR] Can't load file provider extensions: %@
[DEBUG] updating provider list: %@
[CRIT] %@
[ASSERT] 
 you shouldn't call -loadProviders twice
[NOTICE] File provider extension %@ has no identifier. Ignoring.
[DEBUG] testing if %@ is in our %lu registered file providers
[ASSERT] 
 _alternateContentsURLDictionary shouldn't be nil
[ERROR] nil path for url %@
[ERROR] failed to create plist data from dictionary: %@
[ERROR] failed to write _alternateContentsURLDictionary to URL %@: %@
[ERROR] failed to read alternateContentsURLDictionary: %@
[ERROR] nil serialized dictionary: %@
[ERROR] nil url for path %@
[DEBUG] deleting all fileproviderd searchable items
[ERROR] failed to delete all fileproviderd searchable items: %@
[DEBUG] deleted all fileproviderd searchable items
[ERROR] failed to synchronize user defaults for %@
[ERROR] Cannot create alternate contents directory: %@
[DEBUG] Serving: %@
[DEBUG] Extending bookmark privileges for: 
 from bundle %@ to %@.
[DEBUG] PID %d (%@) does not have %@ entitlement to extend bookmark for %@
[DEBUG] Successfully generated bookmarkable string 
 from %@.
[ERROR] Could not extend bookmark privileges for %@ from bundle %@ to consumer ID %@, error: %@
[DEBUG] PID %d (%@) has neither sandbox access nor %@ entitlement to extend bookmark for %@
[ERROR] Could not extend sandbox for %@ from provider ID %@ to consumer ID %@, error: %@
[INFO] Successfully extended sandbox for %@ from provider ID %@ to consumer ID %@.
[ERROR] Consumer ID %@ is not allowed to access item ID 
 from provider ID %@.
[ERROR] Cannot provide item at %@ from provider ID %@ to consumer ID %@. Error: %@
[ERROR] Could not ask provider ID %@ to stop providing item at %@. Error: %@
[ERROR] Could not stop providing item at %@ to consumer ID %@. Error: %@
[DEBUG] %@: Client is missing entitlement
[ERROR] nil extension identifier for provider: %@
[ERROR] nil description for provider: %@
[DEBUG] %@: returning providers %@
[ERROR] client %@ is not permitted to monitor provider changes because it lacks the %@ entitlement
[DEBUG] begin monitoring provider changes with receiver %@
[DEBUG] stop monitoring provider changes with identifier %@
[DEBUG] Getting URL from bookmarkable string: 
[ERROR] Provider ID %@ is not allowed to provide item ID 
 to consumer ID %@
[DEBUG] PID %d (%@) has neither sandbox access nor %@ entitlement to get a bookmark for %@
[DEBUG] Getting bookmarkable string for %@
[INFO] Could not find the provider for %@
[ERROR] Could not get Item ID for %@.
[DEBUG] %@ is missing enumerate entitlement
[DEBUG] %@ does not have sandbox access to %@
[DEBUG] no provider for url: %@
[WARNING] no provider for identifier: %@
[ERROR] %s called without completion
[DEBUG] %@ does not have sandbox access to %@, nor the %@ entitlement
[ERROR] %@ failed to get endpoint for provider %@: %@
[ERROR] no provider for url: %@
[ERROR] need a proper file handle to dump state
[DEBUG] Cancelling extension with request identifier %@
[DEBUG] Extension with request identifier %@ was already cancelled by error condition
[ERROR] couldn't get a URL wrapper for URL %@: %@
[ASSERT] 
 UNREACHABLE: encounted an app extension version conflict error, terminating the existing extension and retrying...
[ASSERT] 
 UNREACHABLE: encounted an app extension version conflict error, killing the existing extension and retrying...
[ASSERT] 
 UNREACHABLE: encounted an app extension version conflict error, and we've already retried without success...
[DEBUG] %@: connection was interrupted
[DEBUG] %@: connection was invalidated
[DEBUG] Invalidating %@ because we don't have any inflight request or lifetime extender
[DEBUG] %@: request finished
[DEBUG] %@: request starting
[WARNING] %@: killing the extension
alloc
init
sharedStore
setAccessControlStore:
start
currentRunLoop
self
extensionSession
unregisterLifetimeExtensionForObject:
finishObserving
invalidate
dealloc
currentConnection
fp_isNonSandboxedConnection
name
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
hasPrefix:
arrayWithObjects:count:
fp_hasOneOfEntitlements:logLevel:
newFileProviderProxy
remoteObjectProxyWithErrorHandler:
fp_hasSandboxAccessToFile:
registerLifetimeExtensionForObject:
fetchRemoteFileProviderEndpointForProtocolName:messageInterface:needsItemURL:completionHandler:
_startAccessingProviderEndpointForProtocolName:messageInterface:completionHandler:
_unregisterLifetimeExtension
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
didChangeItemID:completionHandler:
URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:completionHandler:
resolveItemID:completionHandler:
startAccessingProviderEndpointForProtocolName:completionHandler:
stopAccessingProviderEndpointForProtocolName:
startAccessingProviderEndpointForMessageInterface:completionHandler:
stopAccessingProviderEndpointForMessageInterface:
initWithExtensionFileProvider:
.cxx_destruct
provider
setProvider:
_requestQueue
_activePresenterObservation
_isALifetimerExtender
_provider
count
fp_hasSandboxAccessToFile:logLevel:
providedItemsURLs
countByEnumeratingWithState:objects:count:
sharedManager
providerForURL:
_computeAccessForURL:entitlements:connection:
initWithURL:entitlements:connection:
initWithURL:connection:
level
_accessLevel
initWithEnvironmentName:namedDelegatePort:queue:
setDelegate:
initWithMachServiceName:
resume
fileProviderRegister
fileProviderUnregister
interfaceWithProtocol:
fileProviderRegistrationSucceededWithDeviceToken:
fileProviderPayloadReceived:
fileProviderRegistrationFailed
setExportedInterface:
setRemoteObjectInterface:
setExportedObject:
remoteObjectProxy
fp_bundleIdentifier
providerWithIdentifier:
providerWithOwningApplicationIdentifier:
valueForEntitlement:
isValidEnvironment:
owningApplicationIdentifier
topicForApplicationBundleIdentifier:
setObject:forKey:
requestTokenForApplicationWithBundleIdentifier:environment:
performWithConnection:block:
removeObjectForKey:
invalidateTokenForApplicationWithBundleIdentifier:environment:
isEqualToString:
developmentConnection
productionConnection
invalidateTokenForTopic:identifier:
stringWithFormat:
opportunisticTopics
requestTokenForTopic:identifier:
containsObject:
arrayByAddingObject:
setEnabledTopics:ignoredTopics:opportunisticTopics:
objectForKey:
topic
didReceiveMessage:
isEqual:
class
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listener:shouldAcceptNewConnection:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setMessageDelegate:forApplicationBundleIdentifier:
_xpcListener
_connectionQueue
_pushQueue
_developmentConnection
_productionConnection
_messageDelegates
_clientsWaitingForTokens
_requestDidFinish
synchronousRemoteObjectProxyWithErrorHandler:
methodSignature
numberOfArguments
getArgumentTypeAtIndex:
getArgument:atIndex:
setTarget:
invoke
_addAttachedObject:
setArgument:atIndex:
selector
forwardInvocation:
methodSignatureForSelector:
initWithXPCObject:orError:name:
requestFinishedBlock
setRequestFinishedBlock:
_target
_error
_requestFinishedBlock
_name
_retainSelfWhileMessageIsPending
_isSynchronous
initWithDatabaseBaseURL:
openDatabase
close:
isProviderIdentifier:allowedToProvideItemID:toConsumerWithIdentifier:
syncQueue
fetchObjectOfClass:sql:
execute:
_bundleKeyForBundleIdentifier:db:create:
domainIdentifier
identifier
_fileKeyForProviderKey:domain:identifier:db:create:
performWithFlags:action:
lastError
URLByAppendingPathExtension:
openAtURL:withFlags:error:
validateDatabase:
dictionaryWithContentsOfURL:
objectForKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
userVersion
unsignedIntegerValue
migrate:fromLegacyDatabase:
setUserVersion:
defaultManager
removeItemAtURL:error:
length
appendString:
fetch:
next
objectAtIndexedSubscript:
appendFormat:
isProviderWithIdentifier:allowedToProvideItemID:toConsumerWithIdentifier:
allowProviderWithIdentifier:toProvideItemID:toConsumerWithIdentifier:
disallowProviderWithIdentifier:fromProvidingItemWithID:toConsumerWithIdentifier:
reopenDatabaseAfterUnlock
dumpForBundleIdentifier:
setSyncQueue:
_dbConnection
_databaseBaseURL
_dbIsOpen
_syncQueue
stringByAppendingPathComponent:
fileURLWithPath:
fp_homeDirectory
URLByAppendingPathComponent:
path
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
lastPathComponent
initWithUTF8String:
setPresentedItemURL:
setFilePresenterID:
_processIdentifierForID:
setPresenterPid:
presentedItemURL
filePresenterID
fp_shortDescription
supportsEnumeration
_setEnumeratedItemURL:
setRecursiveEnumeration:
stop
_startObservingCollectionWithProperties:observer:completionHandler:
isShared
ownerNameComponents
capabilities
fileURL
__itemAtURL:didChangeUbiquityWithPurposeID:
_processSharingStatusChangesForUpdatedItem:
setPurposeIdentifier:
sharingDidChangeForItemAtURL:
itemIdentifier
_fetchChangeToken
_fetchUpdates
receiveUpdatedItems:deletedItemsIdentifiers:
enumerateItemsFromPage:reply:
isEqualToData:
enumerateChangesFromToken:reply:
presenter:withURL:
enumerationResultsDidChange
didUpdateItem:
presenterPid
_extensionSession
_enumerator
_queue
_providerIdentifier
_requestFinished
_changeToken
_isFetchingChanges
_shouldRefetchChanges
_latestPresentedItemSharedStatus
_latestPresentedItemOwnerNameComponents
_latestPresentedItemCapabilities
_presenterPid
_presentedItemURL
_filePresenterID
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
_initSignals
copy
providersInfoHasChanged:error:
dictionary
providerInfo
setObject:forKeyedSubscript:
providersInfoDidChange:error:
fileProviderManager
providersInfo
handleExitSignal:
exitWithCode:
providersDidChange:error:
loadProvidersWithUpdateHandler:completionHandler:
dropLegacyDaemonCoreSpotlightIndexIfNeeded
refreshInstalledAppsWithCompletionHandler:
dateWithTimeIntervalSinceNow:
removeTrashedItemsOlderThanDate:completionHandler:
_startXPCListener
_computeUnlockedStatus
_setup
setServer:
setConnection:
setInvalidationHandler:
setInterruptionHandler:
processIdentifier
signalProviderChanges
accessControlStore
providerChangesReceiversByID
listener
setListener:
_sigIntSrc
_sigQuitSrc
_sigTermSrc
_xpcListenerReadyQueue
_xpcListenerAppUpdateQueue
_finishSetupQueue
_fileProviderManagerIsReadyGroup
_isUnlocked
_accessControlStore
_providerChangesReceiversByID
_fileProviderManager
_listener
_extensionContextForUUID:
_auxiliaryConnection
allObjects
cancelExtensionRequestWithIdentifier:
beginExtensionRequestWithInputItems:completion:
fp_matchesLocalStorageURL
isProviderForURL:
initWithExtension:
stringByAppendingString:
UTF8String
_extensionBundle
bundleURL
fp_realpath
pluginKitProxyForURL:
setWithArray:
infoDictionary
containingBundle
bundleIdentifier
objectForInfoDictionaryKey:ofClass:
objectForInfoDictionaryKey:ofClass:inScope:
boolValue
addObject:
groupContainerURLs
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dictionaryWithCapacity:
initWithRootURL:
setExtensionIdentifier:
setMaxConcurrentOperationCount:
initWithExtension:fpdExtension:
_readDomainProperties
allKeys
placeholderURLForURL:
valuesForAttributes:forItemAtURL:completionHandler:
_provideItemAtURL:toReaderWithID:completionHandler:
_readingOptions
startProvidingItemAtURL:readingOptions:completionHandler:
errorWithDomain:code:userInfo:
evictItemAtURL:completionHandler:
itemChangedAtURL:
lastUsedDate
contentModificationDate
compare:
itemID
setLastUsedDate:forItemID:completionHandler:
itemForURL:completionHandler:
willChangeValueForKey:
didChangeValueForKey:
_newFileProviderProxy
didUpdateAlternateContentsDocumentForDocumentAtURL:completionHandler:
setAlternateContentsURL:onDocumentURL:completionHandler:
identifierForItemAtURL:completionHandler:
itemChangedAtURL:completionHandler:
trashItemAtURL:completionHandler:
lastObject
setLastUsedDate:forItemIDs:completionHandler:
privilegedValuesForAttributes:forItemAtURL:completionHandler:
plistDictionary
mutableCopy
URLByDeletingLastPathComponent
writeToURL:atomically:
domainFromPlistDictionary:identifier:
_writeDomainProperties
updateDomains:completionHandler:
removeAllObjects
numberWithBool:
setProviderIdentifier:
fetchSupportedMessageInterfacesForDocumentAtURL:completionHandler:
fetchSupportedMessageInterfacesForItemID:completionHandler:
userInfo
initWithProviderIdentifier:domainIdentifier:itemIdentifier:
_addFileProvider:completionHandler:
addOperationWithBlock:
_removeFileProvider:
_fileReactorID
localizedName
allValues
valueForKey:
fp_relationshipToItemAtURL:
extension
write:
instanceWithExtension:
_providedItemsOperationQueue
_physicalURLForURL:
_cancelProvidingItemAtURL:toReaderWithID:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:didGainPresenterWithID:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
setExtension:
_provideItemAtURL:completionHandler:
itemIDForURL:completionHandler:
addDomain:
removeAllDomainsWithError:
removeDomain:error:
domainsByID
setEnabled:forDomainIdentifier:
registerFileCoordinatorWithCompletionHandler:
unregisterFromFileCoordinator
dumpStateTo:
purposeIdentifier
readonly
setReadonly:
setSupportsEnumeration:
extensionBundleURL
setExtensionBundleURL:
activeFilePresenters
setActiveFilePresenters:
extensionPointVersion
setExtensionPointVersion:
supportedFileTypes
setSupportedFileTypes:
domains
setDomains:
setExtensionSession:
isAvailableSystemWide
setIsAvailableSystemWide:
containingBundleIdentifier
setContainingBundleIdentifier:
domainsPlistURL
setDomainsPlistURL:
_serialQueue
_readWriteLockQueue
_domainQueue
_providedItemsURL
_extension
_coordinatorMetadataPerURL
_fileCoordinationProviderByURL
_domainsByID
_enabledByDomainID
_readonly
_supportsEnumeration
_isAvailableSystemWide
_identifier
_purposeIdentifier
_localizedName
_owningApplicationIdentifier
_extensionBundleURL
_activeFilePresenters
_extensionPointVersion
_supportedFileTypes
_domains
_containingBundleIdentifier
_domainsPlistURL
_plugIn
uuid
enumeratorAtPath:
arrayWithCapacity:
nextObject
stringByDeletingLastPathComponent
removeItemAtPath:error:
_loadAlternateContentsDictionary
dictionaryWithObjects:forKeys:count:
_garbageCollectRemovedProvidersForInstalledProviderIdentifiers:
_updateProviderListForMatchingExtensions:completionHandler:
beginMatchingExtensionsWithAttributes:completion:
removeObject:
setDictionary:
providerIdentifier
_serializeAlternateContentsURLDictionary:
_deserializedAlternateContentsDictionary
dataWithPropertyList:format:options:error:
writeToURL:options:error:
dataWithContentsOfURL:options:error:
domain
code
propertyListWithData:options:format:error:
isIndexingAvailable
initWithName:
numberWithInt:
deleteAllSearchableItemsWithCompletionHandler:
setFileProviderAccessControl:
setAlternateContentsURL:forItemID:
alternateContentsURLForItemID:
alternateContentsDictionaryForProviderIdentifier:
allProviders
_refreshOperationsQueue
_providersQueue
_providersByIdentifier
_callbackQueue
_providersLoadedGroup
_matchingContext
_accessControl
_alternateContentsURLDictionary
_pushConnection
connection
server
wrapperWithURL:
fp_hasOneOfEntitlements:
_fileProviders
extensionIdentifier
array
providerForIdentifier:enumerateEntitlementRequired:error:
weakObjectsHashTable
createProviderServicerWithIdentifier:enumerateEntitlementRequired:error:
clientHasSandboxAccessToFile:
_isNonSandboxedConnection
date
directValuesForAttributes:forItemAtURL:completionHandler:
fileDescriptor
initWithFd:forceColor:
wakeUpCompletionHandler:
extendSandboxForFileURL:fromProviderID:toConsumerID:completionHandler:
startProvidingItemAtURL:fromProviderID:forConsumerID:completionHandler:
evictItemAtURL:andClearACLForConsumer:completionHandler:
providersCompletionHandler:
beginMonitoringProviderChangesWithReceiver:receiverIdentifier:completionHandler:
endMonitoringProviderChangesWithIdentifier:
extendBookmarkForFileURL:toConsumerID:completionHandler:
bookmarkableStringFromDocumentURL:completionHandler:
documentURLFromBookmarkableString:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:completionHandler:
fetchRemoteFileProviderWithIdentifier:handler:
fetchRemoteMessageInterfaceProviderWithIdentifier:handler:
extendBookmarkForItemID:consumerID:completionHandler:
endpointForItemAtURL:completionHandler:
updateLastUsedDate:completionHandler:
dumpStateTo:completionHandler:
addDomain:forProviderIdentifier:completionHandler:
removeDomain:forProviderIdentifier:completionHandler:
removeAllDomainsForProviderIdentifier:completionHandler:
getDomainsForProviderIdentifier:completionHandler:
setEnabled:forDomainIdentifier:providerIdentifier:completionHandler:
fetchAlternateContentsURLForDocumentURL:completionHandler:
_providerServicers
_server
_connection
delegate
_delegate
_extensionIdentifier
_notifyProviderMonitorWithState:
wrapperWithURL:readonly:error:
archivedDataWithRootObject:
_domainsDictionaryData
_alternateContentsDictionaryData
setUserInfo:
_kill:
_setUpConnectionWithAttemptNumber:completion:
_invalidateWithCancellation:
anyObject
_connectionWithError:
_invalidateExtensionIfPossible
_sessionQueue
_requestIdentifier
_inflightProxies
_lifetimeExtenders
_fpdExtension
_notifyTokenForFramework
fp_libnotifyPerUserNotificationName
FPDXPCProviderServicer request queue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderTools_Sim/FileProvider-86/fileproviderd/FPDXPCProviderServicer.m
<Unknown File>
nil message interface name
com.apple.iWork
v16@?0@"NSError"8
it's unsupported to call -_startAccessingProviderEndpointForProtocolName:messageInterface:completionHandler: twice
v32@?0@"NSXPCListenerEndpoint"8@"NSURL"16@"NSError"24
v8@?0
v32@?0@"FPSandboxingURLWrapper"8@"FPSandboxingURLWrapper"16@"NSError"24
provider
T@"FPDExtension",&,N,V_provider
level
TQ,R,N
T@"FPDExtension",R,W,N,V_provider
push connection queue
push worker queue
com.apple.fileprovider.extension.push
com.apple.fileprovider.extension.push.development
com.apple.fileprovider.pushkit
com.apple.pushkit.launch.fileprovider
-[FPDPushConnection performWithConnection:block:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderTools_Sim/FileProvider-86/fileproviderd/FPDPushConnection.m
%s was called with nil completion block!
aps-environment
-[FPDPushConnection fileProviderRegister]
v32@?0@"<PKFileProviderXPCClient>"8@"NSString"16@"NSString"24
%@.%@
pushkit.fileprovider
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"NSInvocation"8
requestFinishedBlock
T@?,C,N,V_requestFinishedBlock
AllowedItemIDs
FPDAccessControlStore sync queue
com.apple.mobile.keybagd.first_unlock
SELECT key FROM bundle_ids WHERE identifier = %@
INSERT INTO bundle_ids (identifier) VALUES (%@)
SELECT key FROM acl WHERE consumer = %@ AND file = %@
INSERT INTO acl (consumer, file) VALUES (%@, %@)
B16@?0@"PQLConnection"8
DELETE FROM acl WHERE consumer = %@ AND file = %@
INSERT INTO vended_bookmarks (provider, bookmark, last_use) VALUES (%@, %@, date('now'))
SELECT key FROM vended_bookmarks WHERE provider = %@ AND bookmark = %@
v32@?0@"NSString"8@"NSDictionary"16^B24
SELECT key FROM vended_bookmarks WHERE provider = %@ AND domain IS %@ AND bookmark = %@
INSERT INTO vended_bookmarks (provider, domain, bookmark, last_use) VALUES (%@, %@, %@, date('now'))
UPDATE vended_bookmarks SET last_use = date('now') WHERE key = %@
plist
PRAGMA foreign_keys = ON
CREATE TABLE bundle_ids ( key INTEGER PRIMARY KEY, identifier TEXT UNIQUE NOT NULL)
CREATE TABLE vended_bookmarks( key INTEGER PRIMARY KEY, provider INTEGER, bookmark TEXT UNIQUE NULL, last_use DATE, FOREIGN KEY(provider) REFERENCES bundle_ids(key) ON DELETE CASCADE)
CREATE TABLE acl ( key INTEGER PRIMARY KEY, consumer INTEGER, file INTEGER, FOREIGN KEY(consumer) REFERENCES bundle_ids(key) ON DELETE CASCADE, FOREIGN KEY(file) REFERENCES vended_bookmarks(key) ON DELETE CASCADE)
ALTER TABLE vended_bookmarks ADD COLUMN domain BLOB DEFAULT NULL
CREATE UNIQUE INDEX provider_domain_bookmark ON vended_bookmarks (provider, domain, bookmark)
Known bundles:
SELECT identifier FROM bundle_ids
Bundle %@ vends bookmarks:
SELECT bookmark, last_use, key FROM vended_bookmarks WHERE provider = %@
"%@" (%@)
SELECT identifier FROM bundle_ids WHERE key = %@
------
Bundle %@ is receiving from:
SELECT provider, bookmark, last_use FROM acl, vended_bookmarks WHERE acl.consumer = %@ AND acl.file = vended_bookmarks.key
%@ -> "%@" (%@)
syncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
AccessControl
Library/FileProvider
presenter
<FPDActiveFilePresenter %p %@ presented by %@[%i]>
<FPDActiveFilePresenter %p %@ presented by pid %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderTools_Sim/FileProvider-86/fileproviderd/FPDActiveFilePresenter.m
Observation on url %@ started twice
v24@?0@"<FPXEnumerator>"8@"NSError"16
shouldn't be fetching changes
shouldn't have change token
v40@?0@"NSArray"8@"NSData"16@"NSData"24@"NSError"32
should have change token
v44@?0@"NSArray"8@"NSArray"16B24@"NSData"28@"NSError"36
presentedItemURL
T@"NSURL",C,N,V_presentedItemURL
filePresenterID
T@,C,N,V_filePresenterID
presenterPid
Ti,N,V_presenterPid
xpc-listener-ready-queue
xpc-stream-app-monitor
setup-queue
v32@?0@"NSString"8@"FPDExtension"16^B24
v24@?0@"NSDictionary"8@"NSError"16
com.apple.distnoted.matching
com.apple.FileProvider.LocalStorage
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.FileProvider.maintenance.auto-trash
com.apple.FileProvider
listener
T@"NSXPCListener",&,N,V_listener
accessControlStore
T@"FPDAccessControlStore",W,N,V_accessControlStore
providerChangesReceiversByID
T@"NSMutableDictionary",R,N,V_providerChangesReceiversByID
fileProviderManager
T@"FPDExtensionFileProviderManager",R,N,V_fileProviderManager
com.apple.fileprovider.purposeidentifier
v24@?0@"NSUUID"8@"NSError"16
.lock
.rw-lock
.domain
NSExtension
NSExtensionAttributes
NSExtensionFileProviderSupportsEnumeration
NSExtensionFileProviderOnlyVisibleInParentApplication
NSExtensionFileProviderReadOnly
NSExtensionPointVersion
NSFileProviderSupportedFileTypes
NSExtensionFileProviderDocumentGroup
File Provider Storage
Domains.plist
<%@:%p "%@" url:%@>
(unknown)
v32@?0@8@?<v@?@"NSError">16^B24
v24@?0@"FPItemID"8@"NSError"16
v24@?0@"FPItem"8@"NSError"16
activeFilePresenters
-[FPDExtension didUpdateAlternateContentsDocumentForDocumentAtURL:completionHandler:]
-[FPDExtension setAlternateContentsURL:onDocumentURL:completionHandler:]
-[FPDExtension itemForURL:completionHandler:]
-[FPDExtension itemIDForURL:completionHandler:]
-[FPDExtension URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:completionHandler:]
-[FPDExtension startProvidingItemAtURL:readingOptions:completionHandler:]
-[FPDExtension itemChangedAtURL:]
-[FPDExtension trashItemAtURL:completionHandler:]
-[FPDExtension setLastUsedDate:forItemID:completionHandler:]
v24@?0@"NSArray"8@"NSError"16
-[FPDExtension refreshInstalledAppsWithCompletionHandler:]
-[FPDExtension removeTrashedItemsOlderThanDate:completionHandler:]
-[FPDExtension deleteSearchableItemsWithDomainIdentifiers:completionHandler:]
-[FPDExtension evictItemAtURL:completionHandler:]
-[FPDExtension didChangeItemID:completionHandler:]
-[FPDExtension valuesForAttributes:forItemAtURL:completionHandler:]
Enabled
-[FPDExtension fetchSupportedMessageInterfacesForDocumentAtURL:completionHandler:]
v16@?0@"NSArray"8
-[FPDExtension fetchSupportedMessageInterfacesForItemID:completionHandler:]
container-identifier
domain
v32@?0@"NSURL"8@"FPDFileCoordinationProvider"16^B24
documentStorageURL
documentStorageURLs
providerIdentifier
purposeIdentifier
localizedName
filePresenters
version
bundleURL
supportedFileTypes
supportsEnumeration
isAvailableSystemWide
isReadOnly
containingBundleIdentifier
domains
domainsEnabled
================================================================================
extension
T@"NSExtension",&
extensionBundleURL
T@"NSURL",&,N,V_extensionBundleURL
T@"NSMutableDictionary",&,N,V_activeFilePresenters
extensionPointVersion
T@"NSString",&,N,V_extensionPointVersion
T@"NSArray",&,N,V_supportedFileTypes
T@"NSArray",&,N,V_domains
extensionSession
T@"FPDExtensionSession",&,N,V_extensionSession
TB,N,V_isAvailableSystemWide
T@"NSString",&,N,V_containingBundleIdentifier
domainsPlistURL
T@"NSURL",&,N,V_domainsPlistURL
identifier
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_purposeIdentifier
T@"NSString",R,N,V_localizedName
providedItemsURLs
T@"NSArray",R
owningApplicationIdentifier
T@"NSString",R,N,V_owningApplicationIdentifier
readonly
TB,N,V_readonly
TB,N,V_supportsEnumeration
domainsByID
T@"NSDictionary",R,N
FPDExtensionFileProviderManager refresh operations queue
FPDExtensionFileProviderManager concurrent queue
FPDExtensionFileProviderManager callback queue
com.apple.fileprovider-nonui
can't load the list of extensions
-[FPDExtensionFileProviderManager loadProvidersWithUpdateHandler:completionHandler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderTools_Sim/FileProvider-86/fileproviderd/FPDExtensionFileProviderManager.m
you shouldn't call -loadProviders twice
_alternateContentsURLDictionary shouldn't be nil
AlternateContents.plist
com.apple.fileproviderd.did-drop-daemon-corespotlight-index
com.apple.fileproviderd
providerID
consumerID
<%@:%p %@[%d]>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderTools_Sim/FileProvider-86/fileproviderd/FPDXPCServicer.m
bad class for provider: %@
coordinationDescriptions
v32@?0@"NSError"8@"FPSandboxingURLWrapper"16@"FPSandboxingURLWrapper"24
callerBundleID
-[FPDXPCServicer updateLastUsedDate:completionHandler:]
handle
Date/Time:         %s
OS Version:        %s
FP Version:        %s
------------------------------------------------------------
Extensions:
server
T@"FPDServer",W,N,V_server
connection
T@"NSXPCConnection",W,N,V_connection
_providedItemsURL
T@"NSURL",R,C
_providedItemsOperationQueue
T@"NSOperationQueue",R
_fileReactorID
delegate
T@"<FPDFileCoordinationProviderDelegate>",W,V_delegate
extensionIdentifier
T@"NSString",C,V_extensionIdentifier
extension session queue for %@
extension session queue callback queue (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderTools_Sim/FileProvider-86/fileproviderd/FPDExtensionSession.m
UNREACHABLE: encounted an app extension version conflict error, terminating the existing extension and retrying...
UNREACHABLE: encounted an app extension version conflict error, killing the existing extension and retrying...
UNREACHABLE: encounted an app extension version conflict error, and we've already retried without success...
<%@: %p: open requests %@>
<%@: %p: no requests>
.foreground
brc_notify_register_check
/System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
brc_notify_set_state_and_post
FPDXPCProviderServicer
FPDRemoteFileProvider
FPDRemoteMessageInterfaceProvider
FPDAccessRight
PKFileProviderXPCServer
PKFileProviderXPCClient
FPDPushConnection
NSXPCListenerDelegate
NSObject
APSConnectionDelegate
FPDXPCRemoteObjectProxy
NSXPCProxyCreating
FPDAccessControlStore
FPAccessControl
FPDActiveFilePresenter
FPXEnumeratorObserver
FPXHost
FPDExtensionHostContext
_NSFileProviderExtensionHostContext
XPCListenerDelegate
FPDServer
FPDLocalStorageExtension
FPDExtension
FPDFileCoordinationProviderDelegate
FPDPushMessageDelegate
FPDExtensionFileProviderManager
FPXDirectValuesForAttributes
FPDXPCServicer
FPDDaemon
FPDFileCoordinationProvider
NSFileProvider
FPDExtensionSession
v32@0:8@16@?24
v24@0:8@16
v32@0:8@"FPItemID"16@?<v@?@"NSError">24
v32@0:8@"FPItemID"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v24@0:8@"NSString"16
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"NSFileProviderMessageInterface"16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v24@0:8@"NSFileProviderMessageInterface"16
@24@0:8@16
v16@0:8
v40@0:8@16@24@?32
@16@0:8
@"NSObject<OS_dispatch_queue>"
@"FPDExtension"
v40@0:8@16@24@32
@40@0:8@16@24@32
@32@0:8@16@24
Q16@0:8
v24@0:8@"NSData"16
v24@0:8@"NSDictionary"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16@24
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"NSXPCListener"
@"APSConnection"
@"NSMutableDictionary"
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
@?16@0:8
v24@0:8@?16
@"NSObject<NSXPCProxyCreating>"
@"NSError"
@"NSString"
B40@0:8@16@24@32
B40@0:8@"NSString"16@"NSString"24@"NSString"32
@36@0:8@16@24B32
@52@0:8@16@24@32@40B48
@"PQLConnection"
@"NSURL"
v24@0:8@"FPItem"16
i16@0:8
v20@0:8i16
@"FPDExtensionSession"
@"<FPXEnumerator>"
@"NSData"
@"NSPersonNameComponents"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_group>"
@"FPDAccessControlStore"
@"FPDExtensionFileProviderManager"
@"NSOperationQueue"16@0:8
@"NSURL"24@0:8@"NSURL"16
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@24
v32@0:8@16@"NSURL"24
v40@0:8@"NSURL"16@24@"NSURL"32
v24@0:8@"APSIncomingMessage"16
v40@0:8@16B24B28@?32
v40@0:8@16Q24@?32
B24@0:8^@16
B32@0:8@16^@24
v28@0:8B16@20
v20@0:8B16
@"NSOperationQueue"
@"NSExtension"
@"NSDictionary"
@"NSArray"
v32@0:8@?16@?24
v24@0:8^{NSMutableDictionary=#}16
@"<FPAccessControl>"
^{NSMutableDictionary=#}
@"FPDPushConnection"
v40@0:8@"NSArray"16@"NSURL"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@16@24@32@?40
Vv24@0:8@16
v44@0:8B16@20@28@?36
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"FPSandboxingURLWrapper"@"NSError">40
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError"@"NSDictionary">16
v40@0:8@"<FPProviderChangesReceiver>"16@"NSString"24@?<v@?@"NSError">32
Vv24@0:8@"NSString"16
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16B24B28@?<v@?@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"<FPDRemoteFileProvider>"@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<FPDRemoteMessageInterfaceProvider>"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"FPItem"@"NSError">24
v40@0:8@"FPItemID"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSArray"@"NSXPCListenerEndpoint"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"FPItemID"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSFileHandle"16@?<v@?@"NSError">24
v40@0:8@"NSFileProviderDomain"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v44@0:8B16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSError">32
@36@0:8@16B24^@28
@"NSHashTable"
@"FPDServer"
@"NSXPCConnection"
@"NSURL"16@0:8
@"<FPDFileCoordinationProviderDelegate>"
v32@0:8q16@?24
@24@0:8^@16
@"NSUUID"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.fileprovider.fileproviderd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.fileprovider.fileproviderd</string>
<key>com.apple.fileprovider.enumerate</key>
<true/>
<key>com.apple.fileprovider.extension-host</key>
<true/>
<key>com.apple.private.pluginkit.manager</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.FileProvider.ReadOnly</string>
</array>
</dict>
</plist>
