/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLPreinstalledPlansManager.m
<Unknown File>
Invalid parameter not satisfying: %@
store
directory
PreinstalledPlans
v40@?0^{NSString=#}8@"PMLSessionDescriptor"16@"NSArray"24@"NSString"32
LABEL
MIN_COUNT
Plans.plist
Couldn't find preinstalled plans metadata at %@
PLANS
Invalid preinstalled plans metadata, must define %@ property.
SESSIONS_MODEL_HANDLE
PLAN_ID
REQUIREMENTS
FILENAME
Couldn't find preinstalled plan at %@
B8@?0
%@.chunkedfile
Unexpected chunks when serializing session descriptor %@
Invalid plan, zero length.
dummy
version
returnValue
isSync
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
planId
T@"NSString",R,N
isSynchronous
TB,R,N
T@"NSString",R,N,V_planId
TB,R,N,V_isSynchronous
TQ,V_version
didRun
TB,R,N,V_didRun
maxIterations
Ti,VmaxIterations
f20@?0f8Q12
f28@?0f8Q12Q20
v28@?0f8Q12Q20
constantNoise
Tf,N,V_constantNoise
%@ %@
timestamp
modelInfo
sparseFloatWeights
minibatchStats
evaluationMetrics
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
hasTimestamp
TB,N
TQ,N,V_timestamp
hasModelInfo
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
hasSparseFloatWeights
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
hasMinibatchStats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
hasEvaluationMetrics
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
hasSparseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
hasWeightsScaleFactor
Tf,N,V_weightsScaleFactor
hasWeightsL2norm
Tf,N,V_weightsL2norm
hasDenseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLAppleDirectory.m
data
path
/usr/local/misc/apple.directory.db
([^@]+)@im.apple.com
@apple.com
Can not open file: %@ (errno: %i)
Invalid row in file %@. Expected 7 values separated by a comma, got: '%@'
Loading contacts from %@
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
malloc failed
support
batchSize
perLabelSupport
hasSupport
Tf,N,V_support
hasBatchSize
TQ,N,V_batchSize
perLabelSupports
T@"NSMutableArray",&,N,V_perLabelSupports
idx (%tu) is out of range (%tu)
columnIndices
columnLength
rowIndices
rowLength
values
minValue
bucketSize
columnIndicesCount
TQ,R,N
T^I,R,N
hasColumnLength
TI,N,V_columnLength
rowIndicesCount
hasRowLength
TI,N,V_rowLength
valuesCount
hasMinValue
Tf,N,V_minValue
hasBucketSize
Tf,N,V_bucketSize
PLAN_CLASSNAME
PLAN
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLPlanSerialization.m
Invalid plan. Unknown class: %@
plan
T@"<PMLPlanProtocol>",R,N,V_plan
indices
length
indicesCount
hasLength
TI,N,V_length
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLLinRegTrainingPlan.m
Invalid planId. Must be <name>-<version>-<locale> but got %@
+[PMLLinRegTrainingPlan featureMatrixWithNoiseFromCovariates:]
rowEnd == covariates.numberOfRows
v24@?0@"PMLTrainingStoredSessionBatch"8^B16
IS_SYNCHRONOUS
SESSIONS_LIMIT
SESSIONS_IN_BATCH
NOISE_STRATEGY_TYPE
NOISE_STRATEGY
ONLY_INTERNAL_SESSIONS
SKEW
TRACKER
TRACKER_TYPE
POSITIVE_LABEL
Can't instantiate %@. Missing "store" dependency.
Can't instantiate %@. Unknown tracker class: %@
<%@ %@>
T@"PMLTrainingStore",R,N,V_store
tracker
T@"<PMLLinRegTrackerProtocol>",R,N,V_tracker
sessionDescriptor
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
maxSessionsLimit
TQ,R,N,V_maxSessionsLimit
useOnlyAppleInternalSessions
TB,R,N,V_useOnlyAppleInternalSessions
PMLMutableDenseVectorAllocationFailure
Failed to allocate NSData.
count
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLDenseVector.m
start >= 0 && start < self.count
end > 0 && end <= self.count
end >= start
v20@?0f8Q12
Index %tu out of bounds (vector length: %tu)
Tr^f,R,N
T@"NSData",R,N
mutablePtr
T^f,R,N
mutableData
T@"NSMutableData",R,N,V_mutableData
label
sparseFloatFeatures
supervisionType
confidenceScore
hasLabel
TQ,N,V_label
hasSparseFloatFeatures
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
hasSupervisionType
TQ,N,V_supervisionType
hasConfidenceScore
Tf,N,V_confidenceScore
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLPassThroughTracker.m
buckets
weights
scaleFactor
AWDWeightsMessage
gradient
AWDGradientMessage
v32@?0@"NSNumber"8@"NSNumber"16^B24
Ti,R,N
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
hasSparseFloatGradient
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
hasIteration
TQ,N,V_iteration
hasSparseQuantizedGradient
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
hasGradientScaleFactor
Tf,N,V_gradientScaleFactor
hasGradientL2norm
Tf,N,V_gradientL2norm
hasDenseQuantizedGradient
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
WEIGHTS
Missing model weights.
SHAPE
Missing model weights shape.
VALUES
Missing model weights values.
Invalid model weights (shape: %@ but values count: %lu)
NAME
LEARNING_RATES
VERSION
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLDictionaryParameters.m
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelLearningRates(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
-[PMLModelLearningRates(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLModelDescriptor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSDictionary class]]
INTERCEPT
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/AWD/AWDProactiveModelFittingQuantizedSparseVector+PML.m
Too big vector (length: %tu)
com.apple.proactive
trackedObjectiveFeatures
T@"NSArray",R,D
trackedFeatureMatrices
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/AWD/PMLAWDAvailableSessionsTracker.m
AWD metric query delegate can only be set once
v12@?0I8
Missing delegate to handle AWD metric request.
v28@?0@"PMLSessionDescriptor"8Q16f24
T^Q,R,N
TQ,N,V_length
Unsupported proto buf message: %@
Td,R,V_timestamp
serverIteration
TQ,R,V_serverIteration
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLTrainingStore.m
covariates
source
bundleId
itemIds
sessions
creationTimestamp
sessionDescriptorId
covariatesLength
covariatesIndices
covariatesValues
isAppleInternal
sessionsDomainIds
sessionId
bundleIdentifier
domainIdentifier
sessionsItemIds
itemIdentifier
v40@?0@"PMLTrainingStoredSessionBatch"8Q16Q24^B32
AND isAppleInternal = 1 
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND creationTimestamp > :creationTimestamp AND id > :rowId %@ %@ ORDER BY id
:rowId
:name
:version
:locale
:creationTimestamp
v16@?0@"_PASSqliteStatement"8
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
numberOfRows
numberOfColumns
SELECT id, label, covariatesLength, covariatesIndices, covariatesValues FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND creationTimestamp > :creationTimestamp AND id > :rowId %@ %@ORDER BY id limit :limit
:limit
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Invalid session from db (row id %lu): idx %d out of bounds [0, %lu).
{_PASDBIterAction_=B}16@?0@"NSError"8
AND label = %lu 
AND label != %lu 
SELECT count(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
DELETE FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) ORDER BY RANDOM() LIMIT :limit
SELECT count(*) FROM sessions WHERE label = :negativeLabel AND UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
:negativeLabel
DELETE FROM sessions WHERE id IN (SELECT id FROM sessions WHERE label = :negativeLabel AND UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale)) ORDER BY RANDOM() LIMIT :limit)
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier)
:bundleIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier AND itemIdentifier = :itemIdentifier)
:itemIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier = :domainIdentifier)
:domainIdentifier
SELECT mh.name, mh.version, mh.locale, s.label, count(*) FROM sessions s INNER JOIN sessionsDescriptors mh ON s.sessionDescriptorId = mh.id GROUP BY s.sessionDescriptorId, s.label ORDER BY s.sessionDescriptorId, s.label
trainingLog
SELECT creationTimestamp, serverIteration FROM trainingLog WHERE planId = :planId ORDER BY creationTimestamp DESC LIMIT 1
:planId
DELETE FROM trainingLog
SELECT serializedPlan FROM receivedPlans
modificationTimestamp
serializedPlan
receivedPlans
DELETE FROM receivedPlans WHERE planId = :planId
SELECT name, version, locale FROM sessionsDescriptors
SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale
sessionsDescriptors
name
locale
!_lockStateNotificationToken
v12@?0i8
PRAGMA foreign_keys = ON
VACUUM
migrationFunction
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
SELECT id, label, covariatesLength, covariatesIndices, covariatesValues, source FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
v24@?0q8@"PMLSparseVector"16
rowId = %lu
v32@?0@"NSNumber"8@"NSDictionary"16^B24
training_db_schema
[ ]{2,}
SELECT sql FROM sqlite_master WHERE sql IS NOT NULL AND tbl_name NOT LIKE 'sqlite_%' 
CREATE TABLE integrityCheck
training_sessions
test
v24@?0@"<PMLPlanProtocol>"8^B16
SELECT count(*) FROM 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLGradientSolver.m
gradientCalculator
predictionCalculator
batchPredictionCalculator
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
positive
negative
Invalid covariates, length: %tu but model weights length: %d
T@"PMLModelWeights",&,N,V_weights
T@"PMLSparseMatrix",&,N,V_covariates
objective
T@"PMLModelRegressor",&,N,V_objective
intercept
TB,V_intercept
T@"AWDProactiveModelFittingModelInfo",R,N,V_modelInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLDenseMatrix.m
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLLogRegEvaluationPlan.m
B12@?0f8
IS_MULTI_LABEL
THRESHOLD
EVALUATION_LEVEL
T@"<PMLEvaluationTrackerProtocol>",R,N,V_tracker
currentModelWeights
T@"PMLModelWeights",R,N,V_currentModelWeights
perModelStats
T@"NSMutableArray",&,N,V_perModelStats
PML_DICTIONARY_POSITIVE_CONDITIONAL_PROBABILITIES
PML_DICTIONARY_NEGATIVE_CONDITIONAL_PROBABILITIES
PML_DICTIONARY_PROBABILITIES
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLPlanDescriptor.m
v24@?0Q8^B16
NOISE_STRATEGY_MAX_ITERATIONS
NOISE_STRATEGY_MINIMUM_MAGNITUDE
NOISE_STRATEGY_SCALE
NOISE_SAMPLER
INPLACE_NORM
PMLGaussianSampler
<%@ scaleFactor:%0.2f minMagnitude:%0.2f>
Tf,V_scaleFactor
minimumMagnitude
Tf,V_minimumMagnitude
samplerClass
T#,&,V_samplerClass
Ti,V_maxIterations
CREATE TABLE IF NOT EXISTS modelHandles (                  id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             name char(128) NOT NULL,                                   version char(128) NOT NULL,                                locale char(5) NOT NULL                                    )
CREATE UNIQUE INDEX IF NOT EXISTS ix_modelHandles_name_version_locale             ON modelHandles (name, version, locale)
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob NOT NULL,                           covariatesValues blob NOT NULL,                            FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE INDEX IF NOT EXISTS ix_sessions_modelHandleId             ON sessions (modelHandleId ASC)
CREATE TABLE IF NOT EXISTS sessionsDomainIds (               id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  domainIdentifier char(128) NOT NULL,                         FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS sessionsItemIds (                 id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  itemIdentifier char(128) NOT NULL,                           FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              payloadPath char(128) NOT NULL,                          serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_modelHandleId_creationTimestamp             ON trainingLog (modelHandleId, creationTimestamp)
DROP TABLE modelMetadata
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     payload blob NOT NULL,                                   FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
ALTER TABLE sessions RENAME TO sessions_old
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob,                                    covariatesValues blob,                                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
INSERT INTO sessions(id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues)             SELECT id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues FROM sessions_old
ALTER TABLE sessionsDomainIds RENAME TO sessionsDomainIds_old
INSERT INTO sessionsDomainIds(id,sessionId,domainIdentifier)             SELECT id,sessionId,domainIdentifier FROM sessionsDomainIds_old
DROP TABLE sessionsDomainIds_old
ALTER TABLE sessionsItemIds RENAME TO sessionsItemIds_old
INSERT INTO sessionsItemIds(id,sessionId,itemIdentifier)             SELECT id,sessionId,itemIdentifier FROM sessionsItemIds_old
DROP TABLE sessionsItemIds_old
DROP TABLE sessions_old
ALTER TABLE modelMetadata ADD maxIteration integer NOT NULL DEFAULT 10
ALTER TABLE sessions ADD isAppleInternal integer(1) NOT NULL DEFAULT 0
DELETE FROM modelMetadata
CREATE TABLE IF NOT EXISTS receivedPlans (             planId char(128) PRIMARY KEY NOT NULL,                 modificationTimestamp real NOT NULL,                   serializedPlan blob NOT NULL                           )
DROP TABLE trainingLog
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           planId char(128) NOT NULL,                                 modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp             ON trainingLog (planId, creationTimestamp)
ALTER TABLE sessions ADD source blob
DELETE FROM receivedPlans
ALTER TABLE sessionsDomainIds ADD bundleIdentifier char(128)
ALTER TABLE sessionsItemIds ADD bundleIdentifier char(128)
ALTER TABLE modelHandles ADD sd_id integer
ALTER TABLE modelHandles ADD sd_name char(128)
ALTER TABLE modelHandles ADD sd_version char(128)
UPDATE modelHandles SET               sd_name = CASE                   WHEN name = 'FiM.phone' THEN 'SignificantPhoneNumber'                   WHEN name = 'dataDetectionSignificantPhrasePhoneLogistic' THEN 'SignificantPhoneNumber'                   WHEN name = 'SignificantPhoneNumber' THEN name                   WHEN name = 'dataDetectionSignificantPhraseAddressLogistic' THEN 'SignificantPostalAddress'                   WHEN name = 'SignificantPostalAddress' THEN name                   WHEN name = 'dataDetectionSignificantPhraseEmailLogistic' THEN 'SignificantEmailAddress'                   WHEN name = 'SignificantEmailAddress' THEN name                   WHEN name = 'selfIdentificationPhraseLogistic' THEN 'SelfIdentification'                   WHEN name = 'SelfId.Covariates' THEN 'SelfIdentification'                   WHEN name = 'SelfIdentification' THEN name                   WHEN name = 'STSQP' AND version = '1.2' THEN name                   ELSE NULL               END,               sd_version = CASE                   WHEN version = '1.1' THEN 'TW=12&NG=3&FV=1.1'                   WHEN version = 'TW=12&NG=3&FV=1.1' THEN version                   WHEN version = '1.2' THEN version                   ELSE NULL               END
CREATE TABLE IF NOT EXISTS sessionsDescriptors (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   name char(128) NOT NULL,                   version char(128) NOT NULL,                   locale char(5) NOT NULL               )
CREATE UNIQUE INDEX IF NOT EXISTS ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
INSERT OR IGNORE INTO sessionsDescriptors(name,version,locale) SELECT sd_name,sd_version,locale FROM modelHandles
UPDATE modelHandles SET sd_id = (SELECT id FROM sessionsDescriptors WHERE name = sd_name AND version = sd_version)
CREATE TABLE IF NOT EXISTS sessions (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   sessionDescriptorId integer NOT NULL,                   label integer NOT NULL,                   covariatesLength integer NOT NULL,                   covariatesIndices blob,                   covariatesValues blob,                   isAppleInternal integer(1) NOT NULL DEFAULT 0,                   source blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
INSERT INTO sessions(id,creationTimestamp,sessionDescriptorId,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source)                 SELECT s.id,creationTimestamp,mh.sd_id,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source                 FROM sessions_old AS s JOIN modelHandles AS mh                 WHERE s.modelHandleId = mh.id AND mh.sd_id IS NOT NULL
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   planId char(128) NOT NULL,                   sessionDescriptorId integer NOT NULL,                   serverIteration integer NOT NULL,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
DROP TABLE IF EXISTS sessions_old
DROP TABLE IF EXISTS modelHandles
DELETE FROM sessions WHERE id IN (SELECT sessions.id FROM sessions LEFT JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId WHERE itemIdentifier = '<hey@example.com>')
PRAGMA foreign_keys = OFF
DELETE FROM sessions WHERE sessionDescriptorId IN (SELECT id FROM sessionsDescriptors                 WHERE                    (name = "SignificantPhoneNumber" AND version LIKE "%1.1%")                OR (name = "SignificantPhoneNumber" AND version LIKE "%1.2%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.1%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.2%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.1%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.2%")                OR (name = "SelfIdentification" AND version LIKE "%1.1%")                OR (name = "STSQP")                )
@max.unsignedIntegerValue
CREATE TABLE sessionsDomainIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, domainIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE sessionsItemIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, itemIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE receivedPlans ( planId char(128) PRIMARY KEY NOT NULL, modificationTimestamp real NOT NULL, serializedPlan blob NOT NULL )
CREATE TABLE sessionsDescriptors ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, name char(128) NOT NULL, version char(128) NOT NULL, locale char(5) NOT NULL )
CREATE UNIQUE INDEX ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE sessions ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, sessionDescriptorId integer NOT NULL, label integer NOT NULL, covariatesLength integer NOT NULL, covariatesIndices blob, covariatesValues blob, isAppleInternal integer(1) NOT NULL DEFAULT 0, source blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE TABLE trainingLog ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, planId char(128) NOT NULL, sessionDescriptorId integer NOT NULL, serverIteration integer NOT NULL, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE INDEX ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
migrations
T@"NSDictionary",R,N,V_migrations
maxVersion
TQ,R,D,N
SELECT id, covariatesValues FROM sessions
UPDATE sessions SET covariatesValues = :data WHERE id = :rowId
:data
model
spotlightReference
isInternal
collectedSessions
T@"NSArray",R,V_collectedSessions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/AWD/AWDProactiveModelFittingQuantizedSparseMatrix+PML.m
Too big matrix (rows: %tu)
Too big matrix (cols: %tu)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLSessionDescriptor.m
%@_label%lu
_label[0-9]+
_label([0-9]+)
Handle %@ is not a sub-model handle.
LOCALE
<%@ %@ %@ %@>
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
T@"NSString",R,N,V_locale
f40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
calculateAvgGradientForBatch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLMathFunctions.h
s == SPARSE_SUCCESS
logisticBatch
hasName
T@"NSString",&,N,V_name
hasVersion
T@"NSString",&,N,V_version
hasLocale
T@"NSString",&,N,V_locale
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/AWD/PMLAWDAvailableSessionsTrackerMock.m
No stats have been tracked yet.
Unexpected AWD message type: %@
trackedStats
T@"NSArray",R,V_trackedStats
trackedSessions
T@"NSArray",R,V_trackedSessions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLProtoBufTracker.m
adapter
Invalid feature matrix. It needs to be square-shaped but got shape (%lu, %lu)
Invalid objective features. It needs to have the same length as feature matrix (%lu) but got %lu.
TRACKER_ADAPTER_CLASS
TRACKER_QUANTIZATION_BUCKETS
Can't instantiate %@. Unknown class: %@
Can't instantiate %@. Missing "planId" dependency.
T@"<PMLTrackerAdapterProtocol>",R,V_adapter
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
positiveScores
negativeScores
secsToExecute
hasRmse
Tf,N,V_rmse
hasF1
Tf,N,V_f1
hasTruePositives
TQ,N,V_truePositives
hasTrueNegatives
TQ,N,V_trueNegatives
hasFalsePositives
TQ,N,V_falsePositives
hasFalseNegatives
TQ,N,V_falseNegatives
positiveScoresCount
negativeScoresCount
hasSecsToExecute
Tf,N,V_secsToExecute
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLNaiveBayesEvaluationPlan.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLDataChunk.m
chunks
plist
T@,R,N
vector
Tr^d,R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/AWD/AWDProactiveModelFittingQuantizedDenseVector+PML.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLHashingVectorizer.m
buckets > 0
ngrams > 0
BUCKET_SIZE
NGRAM_SIZE
normalize
TB,N,V_normalize
calculateAvgLinRegGradientForBatch
linearBatch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLLogRegTrainingPlan.m
Invalid beforeNoiseScalingType, got: %lld
LEARNING_RATE
STOPPING_THRESHOLD
MIN_ITERATIONS
GRADIENT_ITERATIONS
SERVER_ITERATION
BEFORE_NOISE_SCALING
CONSTANT_SCALE_FACTOR
REPORT_SCALE
noiseStrategy
FiM_logreg-1.0-en
generateWeightsOfLength
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
reportScale
beforeNoiseScaling
constantScaleFactor
positiveLabel
T@"<PMLLogRegTrackerProtocol>",R,N,V_tracker
currentServerIteration
TQ,R,N,V_currentServerIteration
Tf,R,N,V_localLearningRate
Tf,R,N,V_stoppingThreshold
TQ,R,N,V_localMinimumIterations
TQ,R,N,V_localGradientIterations
isMultiLabel
TB,R,N,V_isMultiLabel
TQ,R,N,V_positiveLabel
TB,R,N,V_intercept
Tq,R,N,V_beforeNoiseScaling
Tf,R,N,V_constantScaleFactor
evaluationLevel
TQ,R,N,V_evaluationLevel
TB,R,N,V_reportScale
stats
hasStats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
unknown
precision
hasK
TQ,N,V_k
hasPrecision
Tf,N,V_precision
mock-1.0-en
trackedGradients
trackedWeights
T@"NSString",&,V_name
T@"NSNumber",&,V_version
T@"PMLModelWeights",&,V_weights
learningRates
T@"PMLModelLearningRates",&,V_learningRates
foo-1.0-en
trackedEvaluations
com.apple.proactive.PMLDESPlugin
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLTraining.m
itemIdentifiers
T@"NSArray",R,N,V_itemIdentifiers
T@"NSString",R,N,V_domainIdentifier
T@"NSString",R,N,V_bundleIdentifier
training.db
STSQP
v32@?0@"PMLSessionDescriptor"8@"NSSet"16^B24
modelName
modelVersion
modelLocale
sessionsCount
positivesCount
v24@?0@"NSUUID"8@"NSError"16
v16@?0@"NSError"8
v24@?0@"PMLSessionDescriptor"8^B16
T@"PMLTrainingStore",R,V_store
precisionAtK
precisionAtKs
T@"NSMutableArray",&,N,V_precisionAtKs
size
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLFidesTracker.m
weightsLength
weightsIndicesUInt16
weightsQuantizedValuesUInt8
weightsMinValue
weightsMaxValue
gradientLength
gradientIndicesUInt16
gradientQuantizedValuesUInt8
gradientMinValue
gradientMaxValue
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
hasSparseQuantizedFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
hasFeaturesScaleFactor
Tf,N,V_featuresScaleFactor
hasFeaturesL2norm
Tf,N,V_featuresL2norm
positiveConditionalProbabilities
T@"PMLModelWeights",&,V_positiveConditionalProbabilities
negativeConditionalProbabilities
T@"PMLModelWeights",&,V_negativeConditionalProbabilities
probabilities
T@"PMLModelWeights",&,V_probabilities
positiveConditionalCounts
T@"PMLModelWeights",&,V_positiveConditionalCounts
negativeConditionalCounts
T@"PMLModelWeights",&,V_negativeConditionalCounts
counts
T@"PMLModelWeights",&,V_counts
T@"PMLSparseMatrix",&,V_covariates
T@"PMLModelRegressor",&,V_objective
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLSparseVector.m
numberOfNonZeroValues == 0 || (indices && values)
v24@?0^v8Q16
Too big vector.
numberOfNonZeroValues
TQ,N,V_numberOfNonZeroValues
sparseIndices
T^q,N,V_sparseIndices
sparseValues
T^f,N,V_sparseValues
TQ,R,N,V_length
TQ,N,V_columnLength
TQ,N,V_rowLength
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLTrainingStoredSessionBatch.m
Covariates and outcomes need to have the same length, but got %lu and %d.
T@"PMLSparseMatrix",R,N,V_covariates
outcomes
T@"PMLModelRegressor",R,N,V_outcomes
TQ,R,N,V_count
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
hasSparseFloatFeatureMatrix
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
hasFeatureMatrixScaleFactor
Tf,N,V_featureMatrixScaleFactor
hasFeatureMatrixL2norm
Tf,N,V_featureMatrixL2norm
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
hasEvaluation
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
hasLogRegWeights
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
hasLogRegGradient
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
hasLinRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
hasLinRegObjectiveFeatures
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
ProactiveMLErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLImmutableLogisticRegressionModel.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLSparseMatrix.m
matrix
Can not mark %lu x %lu matrix as symmetric
v40@?0Q8Q16r^f24r^q32
isSymmetric
TB,N,V_isSymmetric
T^{sparse_m_float=},N,V_matrix
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProactiveSupport_Sim/ProactiveSupport-126.23/ProactiveML/PMLPlanSimulator.m
Couldn't load sessions for %@
Can't instantiate simulator, need at least one db file.
Multiple batches not supported in simulation.
Can't instantiate simulator, no db at %@
v16@?0Q8
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
init
bundleForClass:
pathForResource:ofType:
preinstalledPlansDirectory
initWithStore:plansDirectory:
hasAlreadyRunPlan:
availableSessionsWithDescriptor:satisfyRequirements:
preinstalledPlanByFilename:
runWhile:didFinish:
enumeratePreinstalledPlansWithBlock:
loadRecentTrainingLogForPlan:
sessionStatsForSessionDescriptor:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
stringByAppendingPathComponent:
dictionaryWithContentsOfFile:
defaultManager
fileExistsAtPath:
alloc
initWithPlist:chunks:context:
dataWithContentsOfFile:
planFromData:withStore:
runWhile:
initWithStore:
runWhileDoneForTesting
.cxx_destruct
_store
_plansDirectory
dictionaryWithObjects:forKeys:count:
planId
initWithFormat:
toPlistWithChunks:
numberWithUnsignedInteger:
arrayWithObjects:count:
addObject:
count
dataWithPropertyList:format:options:error:
writeToFile:atomically:
write:asBinaryPlistToPath:
serializePlan:
length
addPlan:requiringSessions:label:minCount:
writeToDirectory:
_plans
_metadata
_metadataEnvelope
second
first
setObject:forKeyedSubscript:
initWithPlanId:store:version:returningAfterRunning:isSynchronous:
initWithPlanId:version:returningAfterRunning:
initWithPlanId:version:
descriptorForName:version:locale:
storeLogEntryForPlan:model:serverIteration:timestamp:
version
numberWithBool:
unsignedIntegerValue
boolValue
setLastDeserializedPlanWithId:toPlan:
lastDeserializedPlansMap
removeAllObjects
lastDeserializedPlanWithId:
clearLastDeserializedPlans
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
isSynchronous
initWithVersion:
initWithPlanId:
initWithPlanId:store:
setVersion:
didRun
_returnValue
_isSynchronous
_didRun
_planId
_version
initWithPlanId:returningAfterRunning:
addNoiseToWeights:
addNoiseToGradient:
addNoiseToFeatureMatrix:
addNoiseToObjectiveFeatures:
addNoiseToSparseVector:
addNoiseToSparseMatrix:
addNoiseToDenseVector:
maxIterations
setMaxIterations:
initWithMagnitude:
sample
addNoise:count:scale:
initWithMagnitude:seed:
_rng
_magnitude
processValuesInPlaceWithBlock:
numberOfNonZeroValues
sparseValues
matrix
enumerateNonZeroValuesWithBlock:
constantNoise
setConstantNoise:
_constantNoise
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithFloat:
setModelInfo:
setSparseFloatWeights:
setMinibatchStats:
setEvaluationMetrics:
setSparseQuantizedWeights:
setDenseQuantizedWeights:
allocWithZone:
copyWithZone:
mergeFrom:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasSparseFloatWeights
hasMinibatchStats
hasEvaluationMetrics
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
readFrom:
writeTo:
copyTo:
timestamp
modelInfo
sparseFloatWeights
minibatchStats
evaluationMetrics
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
_timestamp
_denseQuantizedWeights
_evaluationMetrics
_minibatchStats
_modelInfo
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
_has
bytes
initWithContentsOfFile:options:error:
initWithData:
initWithPath:
sharedInstance
isEmailInAppleDirectory:withPhonenumber:
isEmailInAppleDirectory:withAnotherEmail:
isEmailInAppleDirectory:
isPhoneNumberInAppleDirectory:
isPhoneNumberInAppleDirectory:withAnotherPhone:
_data
_entries
_nentries
pml_addStringIfNotEmpty:
regularExpressionWithPattern:options:error:
appendBytes:length:
mutableBytes
copy
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
stringByAppendingString:
UTF8String
raise:format:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
_loadContactsFromTextLine:filepath:
componentsSeparatedByString:
objectAtIndexedSubscript:
guessEmailFromIM:
addPhoneNumber:withEmailAddress:
contentsOfDirectoryAtPath:error:
loadContactsFromTextFilepath:
serialize
loadContactsFromDirectory:
_emailGuessingRegexp
lowercaseString
initWithCharactersNoCopy:length:freeWhenDone:
sharedDefaults
countryCode
currentLocale
objectForKey:
exceptionWithName:reason:userInfo:
objectAtIndex:
initWithCapacity:
addPerLabelSupport:
perLabelSupportsCount
clearPerLabelSupports
perLabelSupportAtIndex:
perLabelSupportType
setSupport:
setHasSupport:
hasSupport
setBatchSize:
setHasBatchSize:
hasBatchSize
support
batchSize
perLabelSupports
setPerLabelSupports:
_batchSize
_perLabelSupports
_support
dealloc
raise
numberWithUnsignedInt:
columnIndicesCount
clearColumnIndices
columnIndicesAtIndex:
addColumnIndices:
rowIndicesCount
clearRowIndices
rowIndicesAtIndex:
addRowIndices:
valuesCount
clearValues
valuesAtIndex:
addValues:
columnIndices
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndices
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
values
setValues:count:
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
columnLength
rowLength
minValue
bucketSize
_columnIndices
_rowIndices
_values
_bucketSize
_columnLength
_minValue
_rowLength
initWithPlan:
plan
_plan
planFromData:withArgs:
indicesCount
clearIndices
indicesAtIndex:
addIndices:
indices
setIndices:count:
setLength:
setHasLength:
hasLength
_indices
_length
postMetricId:message:
isValidPlanId:
isInternalBuild
isBetaBuild
numberOfColumns
numberOfRows
initWithSparseMatrix:
setIsSymmetric:
initWithCount:
mutablePtr
sparseVectorFromDense:length:
covariates
outcomes
_objectiveFeaturesWithNoiseFromCovariates:objectives:
featureMatrixWithNoiseFromCovariates:
trackObjectiveFeatures:featureMatrix:minibatchSize:support:
loadSessionsSince:block:
loadSessionsForModel:since:limit:onlyAppleInternal:positiveLabel:skew:ignoreIfSingular:block:
numberWithDouble:
doubleValue
initWithStore:tracker:noiseStrategy:planId:isSynchronous:positiveLabel:skew:sessionDescriptor:maxSessionsLimit:sessionsInBatch:useOnlyAppleInternalSessions:
train
normalizeRegressor:
runUntilDoneForTesting
store
tracker
sessionDescriptor
maxSessionsLimit
useOnlyAppleInternalSessions
_tracker
_noiseStrategy
_skew
_positiveLabel
_sessionDescriptor
_maxSessionsLimit
_sessionsInBatch
_useOnlyAppleInternalSessions
timeIntervalSince1970
hasWeights
initWithLength:
initWithBytes:length:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytesNoCopy:length:deallocator:
mutableCopy
data
appendData:
initWithMutableData:
floatValue
denseVectorFromNumbers:
mutableCopyWithZone:
initWithFloats:count:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:deallocator:
sliceFrom:to:
vecByAppendingVec:
l2norm
maxAbsValue
maxValue
density
enumerateValuesWithBlock:
valueAt:
append:
append:count:
scaleInPlaceWithInversedFactor:
mutableData
_mutableData
setSparseFloatFeatures:
setLabel:
setHasLabel:
hasLabel
hasSparseFloatFeatures
setSupervisionType:
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
label
sparseFloatFeatures
supervisionType
confidenceScore
_label
_supervisionType
_confidenceScore
_sparseFloatFeatures
modelInfoFromPlanId:
messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:
sparseVectorFromDense:
messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:
trackWeights:scaleFactor:minibatchStats:evaluationMetrics:
trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:
trackEvaluationMetrics:minibatchStats:
initWithPlanId:numberOfBuckets:
_quantizationNumberOfBuckets
statsWithPerLabelCounts:
combineWithStats:
statsWithSize:support:
allValues
enumerateKeysAndObjectsUsingBlock:
supportForLabel:
initModelRegressorFromFloats:
initWithRegressorFromFloat:
modelRegressorFromFloat:
modelRegressorFromFloats:
regressorVectorFrom:
denseVector
regressorFor:
inverseValues
valueAtRow:column:
sparseFloatMatrixFromDenseMatrix:
sparseFloatMatrixFromSparseMatrix:
initModelWeightsFromFloats:
modelWeightsOfLength:rng:
initWithSeed:
modelWeightsFromFloats:
modelWeightsOfLength:
modelWeightsOfLength:rngSeed:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
asMutableDenseVector
weightsByAppendingWeights:
next
precision:predictions:predicate:
recall:predictions:predicate:
roundFloatToSigFigs:sigFigs:
addPositiveScores:
addNegativeScores:
f1Score:predictions:predicate:
truePositives:predictions:predicate:
falsePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falseNegatives:predictions:predicate:
addScoresForOutcomes:predictions:predicate:metrics:
hasSparseQuantizedFeatures
valueAtIndex:
sparseQuantizedFeatures
originalValueAtIndex:
hasObjectiveFeatures
featuresValueAtIndex:
featuresLength
clearAllTrackedMessages
trackedMessagesByClass:
_trackedMessages
setSparseFloatGradient:
setSparseQuantizedGradient:
setDenseQuantizedGradient:
hasSparseFloatGradient
setIteration:
setHasIteration:
hasIteration
hasSparseQuantizedGradient
setGradientScaleFactor:
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
hasDenseQuantizedGradient
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
initModelLearningRatesFromFloats:
modelLearningRatesFromFloats:
initFromDictionary:
setWeights:
setName:
setLearningRates:
weights
toDictionary
learningRates
name
isValidModelDescriptorInPlistMetadata:withErrorDescription:
numberWithInt:
vector
toVec
chunkWithVector:count:
migrateDenseDoubleVectorToDenseFloatVector:
toChunk
intercept
initWithChunk:intercept:
chunkWithPlist:
serializeChunks:
chunksFromFileAtPath:
chunksFromData:
lastObject
plist
quantizedSparseVectorFromSparseVector:numberOfBuckets:
quantizedSparseVectorFromDenseVector:numberOfBuckets:
initWithModel:
initWithAdapter:modelInfo:
mockTrackerForPlanId:
clearTrackedMessages
trackedObjectiveFeatures
trackedFeatureMatrices
_adapter
initWithComponentId:
initWithAWDConnection:
reportStatsToAWD
registerQueriableMetric:callback:
modelInfoFromSessionDescriptor:
setStats:
addPerModelStats:
enumerateAvailableSessionsStatsUsingBlock:
perModelStatsCount
availableSessionsStatsReportedToAWD
setAWDMetricQueryDelegate:
_delegate
_awdServerConnection
wrappedMessage:
initWithType:data:
sharedSession
sendCustomFeedback:
setEvaluation:
setLogRegWeights:
setLogRegGradient:
setLinRegFeatureMatrix:
setLinRegObjectiveFeatures:
initWithTimestamp:serverIteration:
serverIteration
_serverIteration
_registerUnlockHandler
_openDbIfUnlocked
initWithPath:allowSkipSchema:
storeSession:source:label:model:bundleId:domainId:itemIds:isAppleInternal:
isEnabled
_sessionDescriptorIdFor:
numberWithInteger:
indicesData
valuesData
insertIntoTable:dictionary:
lastInsertRowId
writeTransaction:
_loadSessionsForModel:since:positiveRowId:negativeRowId:limit:onlyAppleInternal:positiveLabel:skew:ignoreIfSingular:block:
bindNamedParam:toInteger:
bindNamedParam:toNSString:
locale
bindNamedParam:toDouble:
getIntegerForColumn:
prepAndRunQuery:onPrep:onRow:onError:
sparseMatrixWithNumberOfRows:numberOfColumns:
null
setObject:atIndexedSubscript:
third
integerValue
getNSDataForColumn:
getBytes:range:
initWithCovariates:outcomes:
sessionDimensionsForModel:startingRowId:since:onlyAppleInternal:labelFilter:
longValue
numberWithLong:
tupleWithFirst:second:third:
loadSessionsFromTupleDescriptors:model:since:onlyAppleInternal:positiveLabel:ignoreIfSingular:numberOfRows:numberOfColumns:block:
readTransaction:
getNSStringForColumn:
tupleWithFirst:second:
sessionStats
insertOrReplaceIntoTable:dictionary:onError:
getDoubleForColumn:
registerForLockStateChangeNotifications:
unregisterForLockStateChangeNotifications:
isUnlocked
_truncateDbIfCorrupted
initializeDatabase:withContentProtection:newDatabaseCreated:
_migrate
closePermanently
_unregisterUnlockHandler
isInMemoryPath:
corruptionMarkerPathForPath:
truncateDatabaseAtPath:
removeItemAtPath:error:
userVersion
skipFromZeroSchema:
_runQueries:andUpdateVersionTo:inTransactionOnDb:
_migrateTo:
migrations
maxVersion
pointerValue
filename
setUserVersion:
frailWriteTransaction:
updateTable:dictionary:whereClause:onError:
randomlyNamedInMemoryPathWithBaseName:
getSchema:
hasPrefix:
stringByReplacingMatchesInString:options:range:withTemplate:
createSnapshot:
storeSession:source:label:model:
enumerateReceivedPlansUsingBlock:
inMemoryStoreForTesting
storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:
loadSessionsForModel:since:limit:onlyAppleInternal:block:
limitSessionsWithSessionDescriptor:limit:
limitNegativeSessionsWithSessionDescriptor:negativeLabel:limit:
deleteSessionsWithBundleId:
deleteSessionsWithBundleId:itemId:
deleteSessionsWithBundleId:domainId:
deleteAllTrainingLogs
storeReceivedPlan:planId:
deleteReceivedPlan:
enumerateSessionDescriptorsUsingBlock:
vacuumDb
updateSessionsAndLabelForModel:block:
isDbOpen
dbForTesting
storeSession:label:model:
loadSessionsForModel:withSkew:block:
allStoredPlanIds
numberOfRowsInTable:
closeDbForTesting
_dbPath
_lockStateNotificationToken
_allowSkipSchema
solveWithAvgGradient:maxNumberOfIterations:
meanSquaredError
matrixWithConstantColumn
setCovariates:
setObjective:
solve
vectorWithConstantColumn
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
computeAvgGradientWithIterations:
solveForCovariates:objectives:
predict:
batchPredict:
objective
setIntercept:
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
_covariates
_objective
setLocale:
sessionDescriptorFromPlanId:
trackerForModelName:modelVersion:modelLocale:
trackerForPlanId:
initWithData:numberOfRows:numberOfColumns:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
_numberOfRows
_numberOfColumns
solverWithWeights:andIntercept:
evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:
minibatchStatsForPositiveLabel:
initWithStore:tracker:planId:isSynchronous:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
currentModelWeights
_currentModelWeights
_isMultiLabel
_threshold
_evaluationLevel
clearPerModelStats
perModelStatsAtIndex:
perModelStatsType
perModelStats
setPerModelStats:
_perModelStats
initWithProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:
initWithSolver:
positiveConditionalProbabilities
negativeConditionalProbabilities
probabilities
solverWithProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:
withProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:
classify:
_solver
planIdFromString:
initWithMaxIterationCount:scaleFactor:minimumMagnitude:seed:samplerClass:inplaceNorm:
setMinimumMagnitude:
createSampler
initWithIndexesInRange:
removeIndex:
enumerateIndexesUsingBlock:
setNumberOfNonZeroValues:
setSparseIndices:
setSparseValues:
isSymmetric
addIndexesInRange:
setMatrix:
minimumMagnitude
samplerClass
intValue
initWithMaxIterationCount:scaleFactor:minimumMagnitude:samplerClass:inplaceNorm:
gaussianNoiseWithScaleFactor:minimumMagnitude:seed:
scaleFactor
setScaleFactor:
setSamplerClass:
_seed
_inplaceNorm
_maxIterations
_scaleFactor
_minimumMagnitude
_samplerClass
numberWithUnsignedLong:
initWithMigrations:
valueWithPointer:
dictionaryWithObject:forKey:
allKeys
valueForKeyPath:
mockMigrationsByAddingQueries:
_migrations
getInt64ForColumn:
dataWithBytesNoCopy:length:freeWhenDone:
bindNamedParam:toNSData:
bindNamedParam:toInt64:
addSessionWithCovariates:source:label:sessionDescriptor:spotlightReference:isInternal:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
deleteSessionsWithIdentifiers:bundleID:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithBundleID:
trainWhile:
trimDb
planReceivedWithPayload:error:
modelServerUpdateWithPayload:error:
clearCollectedSessions
collectedSessions
_internalCollectedSessions
_collectedSessions
quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:
originalValueAtRow:column:
setRmse:
setF1:
setTruePositives:
setTrueNegatives:
setFalsePositives:
setFalseNegatives:
evalMetricsWithRmse:f1:
initWithName:version:locale:
numberOfMatchesInString:options:range:
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
_name
_locale
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
sparseIndices
withWeights:andIntercept:
solverWithWeights:
withWeights:
hasName
hasVersion
hasLocale
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
hasFeatureMatrix
featureMatrixValueAtRow:column:
isEqualToString:
recentStatsForModelName:
triggerAWDMetricRequest
trackedStats
_internalTrackedStats
_trackedStats
clearTrackedSessions
trackedSessions
_internalTrackedSessions
_trackedSessions
awdTrackerForPlanId:
initWithAdapter:modelInfo:quantizationBuckets:
date
quantizedDenseVectorFromDenseVector:numberOfBuckets:
setSparseQuantizedFeatures:
setSparseQuantizedFeatureMatrix:
trackPrecisionAtK:minibatchStats:
setK:
setPrecision:
addPrecisionAtK:
unsignedLongLongValue
parsecTrackerForPlanId:
trackPrecisionAtK:
adapter
positiveScoresCount
clearPositiveScores
positiveScoresAtIndex:
negativeScoresCount
clearNegativeScores
negativeScoresAtIndex:
setHasRmse:
hasRmse
setHasF1:
hasF1
setHasTruePositives:
hasTruePositives
setHasTrueNegatives:
hasTrueNegatives
setHasFalsePositives:
hasFalsePositives
setHasFalseNegatives:
hasFalseNegatives
positiveScores
setPositiveScores:count:
negativeScores
setNegativeScores:count:
setSecsToExecute:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
enumerateNonZeroValuesForRow:withBlock:
initWithStore:tracker:planId:isSynchronous:sessionDescriptor:maxSessionsLimit:probabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
_probabilities
_positiveConditionalProbabilities
_negativeConditionalProbabilities
isEqualToData:
setSuperdata:
chunkOfType:data:superdata:
dataChunkType
_backingData
_superdata
chunkWithData:
propertyListWithData:options:format:error:
_plist
_parsed
initWithBucketSize:ngrams:andIntercept:
initWithLength:numberOfNonZeroValues:indices:values:
sparseVectorEmptyWithLength:
withBucketSize:
withBucketSize:andNgrams:
withBucketSize:ngrams:andIntercept:
transform:
normalize
setNormalize:
_buckets
_ngrams
_normalize
evaluationMetricsForPredictions:objectives:predicate:start:
scaleFactorFor:
timeIntervalSinceNow
numberWithLongLong:
initWithStore:tracker:noiseStrategy:planId:isSynchronous:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:beforeNoiseScaling:constantScaleFactor:evaluationLevel:reportScale:
planWithStore:tracker:sessionDescriptor:arguments:
currentServerIteration
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
isMultiLabel
positiveLabel
beforeNoiseScaling
constantScaleFactor
evaluationLevel
reportScale
_currentServerIteration
_localGradientIterations
_localLearningRate
_localMinimumIterations
_beforeNoiseScaling
_constantScaleFactor
_reportScale
hasStats
stats
_stats
trackSessionWithCovariates:label:locale:supervisionType:
sparseFloatVectorFromSparseVector:
trackerForModelName:modelVersion:
trackSessionWithCovariates:label:locale:
setHasK:
hasK
setHasPrecision:
hasPrecision
precision
_precision
mockTracker
trackedGradients
trackedWeights
_learningRates
sparseFloatVectorFromModelWeights:
trackedEvaluations
initWithBundleId:domainId:itemIds:
referenceWithBundleId:domainId:itemIds:
itemIdentifiers
domainIdentifier
bundleIdentifier
_itemIdentifiers
_domainIdentifier
_bundleIdentifier
sharedConnection
effectiveBoolValueForSetting:
initWithBundleIdentifier:
initWithStore:fidesStore:availableSessionsTracker:
setWithArray:
isMultiLabelModel:
_sendSessionStatsToFides
containsObject:
_deleteAllSavedRecordsFromFidesStoreSync
_sendStatsToFidesForModel:sessionCount:positivesCount:support:
saveRecordWithData:recordInfo:completion:
deleteAllSavedRecordsWithCompletion:
sharedSingletonWithDirectory:
trainWhileDoneForTesting
_fidesStore
_availableSessionsTracker
_multiLabelModels
precisionAtKsCount
clearPrecisionAtKs
precisionAtKAtIndex:
precisionAtKType
precisionAtKs
setPrecisionAtKs:
_precisionAtKs
initWithFloat:
indicesAsUInt16Data
base64EncodedStringWithOptions:
quantizedValuesAsUInt8DataWithMin:max:
stringValue
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
featuresScaleFactor
featuresL2norm
_featuresL2norm
_featuresScaleFactor
_sparseQuantizedFeatures
setPositiveConditionalProbabilities:
setNegativeConditionalProbabilities:
setProbabilities:
positiveConditionalCounts
setPositiveConditionalCounts:
negativeConditionalCounts
setNegativeConditionalCounts:
counts
setCounts:
_positiveConditionalCounts
_negativeConditionalCounts
_counts
hasGradient
gradientValueAtIndex:
gradientLength
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
processNonZeroValuesInPlaceWithBlock:
_numberOfNonZeroValues
_sparseIndices
_sparseValues
_outcomes
_count
setSparseFloatFeatureMatrix:
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
featureMatrixScaleFactor
featureMatrixL2norm
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
initWithFloatsNoCopy:count:intercept:
initWithWeights:intercept:
_backingObject
_enumerateSparseRowsWithBlock:
sparseMatrixFromNumbers:
_isSymmetric
_matrix
initWithSessionBatch:
cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:
_cachedSessions
initWithStores:sessionDescriptor:seed:
_randomStore
_randomStores:
simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:
runParallelPlansWithPlanId:tracker:noiseScaleFactor:noiseMinimumMagnitude:weights:serverIteration:useIntercept:beforeNoiseScaling:constantScaleFactor:usingRandomlySelected:
_stores
Running preinstalled plans
Skipping plan %@ because it already run.
Running preinstalled plan %@
Could not insert value into sparse matrix
Sending %@ (%d) to AWD.
Training model: %@ (available %lu sessions)
Sending available sessions stats to AWD (%tu models)
Sending %@ (size: %tu) to Parsec.
Unsupported proto buf message: %@
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Failed to load sessions for model %@. Error: %@
PMLTrainingStore failed to count negative sessions. Error: %@
PMLTrainingStore failed to delete negative sessions. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@. Error: %@
PMLTrainingStore failed to delete sessions for for bundleId=%@ and itemId=%@. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@ and domainId=%@. Error: %@
Failed to load stats about sessions in db. Error: %@
Failed to load recent training log for plan %@. Error: %@
PMLTrainingStore notified of device lock state change to %d
Opening db %@.
PMLTrainingStore failed to open/initialize db.
Closing db %@.
PMLTrainingStore failed to enable foreign keys support.
PMLTraining db (%@) corrupted. Flushing.
%@ deallocating
Failed to vacuum training db: %@
PMLTrainingStore db failed to create new database with skip queries.
Future database version detected (%lu). Giving up on migration.
PMLTrainingStore db failed to migrate but migration is needed.
Migration encountered error during migration of %@: versions %lu, query: %@, error: %@
Error querying schema: %@
Will not proceed with fit due to singular objective of all only %@ results
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with DBL_MIN error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f (mse: %f)
Evaluating plan %@ (descriptor: %@, available %lu sessions)
Unexpected AWD message type: %@
Sending weights for model %@
Sending gradient for model %@
Sending objective features for model %@
Sending feature matrix for model %@
Sending evaluation metrics for %@
Could not open chunk file at %@: %@
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Error writing plist chunk: %@
Error loading plist chunk: %@
Invalid beforeNoiseScalingType, got: %lld
Instantiating PMLTraining singleton.
Can't instantiate PMLTraining in %@, becacuse there is already an instance in %@.
Adding session for %@ (label: %tu, length: %tu)
Failed to send session stats %@ to Fides. Error: %@
Successfully sent stats %@ to Fides.
Failed to delete existing records in DESRecordStore. Error: %@
Training job triggered
Running %@
Won't trim training db because the db is not open.
Trimming training db.
Removing training samples for %@
Vacuuming training db.
Running %@ synchronously
Storing plan %@ because it didn't finish running (%tu bytes)
Storing plan %@ from Fides (%tu bytes)
Ignoring synchronous plan %@ because the db is not open.
Error extracting floats from sparse rows, status: %d
PMLPreinstalledPlansManager
PMLPreinstalledPlansBuilder
PMLMockPlan
PMLPlanProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
PMLMockSyncPlan
PMLNoNoiseStrategy
PMLNoiseStrategy
PMLGaussianSampler
PMLSampler
PMLConstantNoiseStrategy
AWDProactiveModelFittingLogRegWeights
NSCopying
PMLAppleDirectory
PMLAppleDirectoryBuilder
AWDProactiveModelFittingMinibatchStats
AWDProactiveModelFittingQuantizedSparseMatrix
PMLPlanWrapper
PMLPlanSerialization
AWDProactiveModelFittingQuantizedSparseVector
PMLTrackerAWDAdapter
PMLTrackerAdapterProtocol
PMLLinRegTrainingPlan
PML_VisibleForTesting
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingSession
PMLPassThroughTracker
PMLLogRegTrackerProtocol
PMLEvaluationTrackerProtocol
VisibleForTesting
PMLModelRegressor
PMLModelWeights
AWDProactiveModelFittingLabelSupportPair
PMLClassificationEvaluationMetrics
PMLTrackerMockAdapter
AWDProactiveModelFittingLogRegGradient
PMLModelLearningRates
PMLMobileAssetParameterGetStrategy
PMLDictionarySerializableProtocol
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLAWDLinearRegTrackerMock
PMLAWDAvailableSessionsTracker
AWDProactiveModelFittingSparseFloatVector
PMLTrackerParsecAdapter
PMLTrainingLogEntry
PMLTrainingStore
PMLGradientSolver
PMLAWDBaseTracker
PMLDenseMatrix
PMLLogRegEvaluationPlan
AWDProactiveModelFittingAvailableSessions
PMLNaiveBayesModel
PMLRegressionModelProtocol
PMLClassifierModelProtocol
PMLPlanDescriptor
PMLDiffPrivacyNoiseStrategy
PMLTrainingDatabaseMigrations
PMLTrainingMock
PMLTrainingProtocol
PMLSessionDescriptor
AWDProactiveModelFittingQuantizedDenseVector
PMLLogisticRegressionModel
AWDProactiveModelFittingModelInfo
PMLAWDAvailableSessionsTrackerMock
PMLAWDSessionTrackerMock
PMLProtoBufTracker
PMLLinRegTrackerProtocol
PMLMultiLabelEvaluationTrackerProtocol
AWDProactiveModelFittingEvalMetrics
PMLNaiveBayesEvaluationPlan
PMLDataChunk
PMLDataChunkRaw
PMLDataChunkPlist
PMLDataChunkDenseFloatVector
PMLDataChunkDenseDoubleVector
PMLHashingVectorizer
PMLTransformerProtocol
PMLLinearRegressionModel
PMLLogRegTrainingPlan
AWDProactiveModelFittingModelInfoStatsPair
PMLAWDSessionTracker
AWDProactiveModelFittingPrecisionAtKPair
PMLAWDLogisticRegTrackerMock
PMLModelDescriptor
PMLAWDEvaluationTrackerMock
PMLSpotlightReference
PMLTraining
PMLAWDMetricQueryDelegate
AWDProactiveModelFittingEvaluation
PMLJson
PMLFidesTracker
AWDProactiveModelFittingLinRegObjectiveFeatures
PMLNaiveBayesSolver
PMLSparseVector
AWDProactiveModelFittingSparseFloatMatrix
PMLLaplaceSampler
PMLTrainingStoredSessionBatch
AWDProactiveModelFittingLinRegFeatureMatrix
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLImmutableLogisticRegressionModel
PMLSparseMatrix
PMLInMemoryCachedStore
PMLPlanSimulator
@16@0:8
@32@0:8@16@24
@24@0:8@16
v24@0:8@?16
B24@0:8^{NSString=#}16
B32@0:8@16@24
v16@0:8
@"PMLTrainingStore"
@"NSString"
v48@0:8@16@24Q32Q40
v32@0:8@16@24
v24@0:8@16
@"NSMutableArray"
@"NSDictionary"
@24@0:8^{NSString=#}16
v32@0:8^{NSString=#}16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@32@0:8@?16^B24
^{NSString=#}16@0:8
@"NSDictionary"32@0:8@?<B@?>16^B24
@48@0:8^{NSString=#}16@24Q32B40B44
@36@0:8^{NSString=#}16Q24B32
@32@0:8^{NSString=#}16Q24
@24@0:8Q16
@32@0:8^{NSString=#}16@24
v24@0:8Q16
^{NSString=#}
@28@0:8^{NSString=#}16B24
i16@0:8
v20@0:8i16
v24@0:8@"PMLModelWeights"16
v24@0:8@"PMLMutableDenseVector"16
v24@0:8@"PMLDenseMatrix"16
v24@0:8@"PMLSparseVector"16
v24@0:8@"PMLSparseMatrix"16
@20@0:8f16
f16@0:8
v36@0:8^f16Q24f32
@28@0:8f16Q20
{?="s"[2Q]}
v20@0:8f16
@24@0:8^{_NSZone=}16
v20@0:8B16
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
@"NSData"
r^{entry_s=II}
@"NSMutableData"
@"NSRegularExpression"
{?="batchSize"b1"support"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@"<PMLPlanProtocol>"
{?="bucketSize"b1"length"b1"minValue"b1}
v28@0:8I16@20
v28@0:8I16@"PBCodable"20
@96@0:8@16@24@32^{NSString=#}40B48Q52d60@68Q76Q84B92
v32@0:8d16@?24
@"<PMLLinRegTrackerProtocol>"
@"<PMLNoiseStrategy>"
@"PMLSessionDescriptor"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
f24@0:8Q16
^f16@0:8
v32@0:8r^f16Q24
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
@44@0:8@16f24@28@36
@52@0:8@16f24@28@36Q44
@"NSDictionary"44@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36
@"NSDictionary"52@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36Q44
@"NSDictionary"32@0:8@"AWDProactiveModelFittingEvalMetrics"16@"AWDProactiveModelFittingMinibatchStats"24
@28@0:8Q16f24
@20@0:8i16
@"PMLDenseVector"
f32@0:8Q16Q24
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"PMLMutableDenseVector"
{?="label"b1"support"b1}
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
@24@0:8#16
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
B32@0:8@16^@24
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@32@0:8@16Q24
@"PMLTrackerMockAdapter"
@"<PMLAWDMetricQueryDelegate>"
@"AWDServerConnection"
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
v32@0:8^f16Q24
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
@32@0:8d16Q24
d16@0:8
@24@0:8^Q16
@28@0:8@16B24
v68@0:8@16q24@32@40@48@56B64
v76@0:8@16@24q32@40@48@56@64B72
v72@0:8@16d24Q32B40Q44d52B60@?64
@52@0:8@16Q24d32B40@44
v80@0:8@16@24d32B40Q44B52Q56Q64@?72
v88@0:8@16d24Q32Q40Q48B56Q60d68B76@?80
v52@0:8@16d24Q32B40@?44
v32@0:8@16Q24
v40@0:8@16Q24Q32
v48@0:8^{NSString=#}16@24Q32d40
v24@0:8^{NSString=#}16
Q24@0:8@16
q16@0:8
q24@0:8@16
B40@0:8@16Q24@32
v32@0:8@16@?24
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v40@0:8@16d24@?32
@"_PASSqliteDatabase"
@68@0:8f16Q20f28@32B40@?44@?52@?60
f24@0:8@16
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@40@0:8@16Q24Q32
@116@0:8@16@24^{NSString=#}32B40@44Q52Q60@68B76d80d88B96Q100Q108
@"<PMLEvaluationTrackerProtocol>"
{?="timestamp"b1}
f24@0:8@"PMLSparseVector"16
B24@0:8@"PMLSparseVector"16
@"PMLNaiveBayesSolver"
^{NSString=#}24@0:8@16
@28@0:8f16f20i24
@44@0:8i16f20f24i28#32B40
@40@0:8i16f20f24#28B36
v24@0:8#16
v60@0:8@16@24q32@40@48B56
v52@0:8@16q24@32@40B48
@32@0:8@16^@24
v60@0:8@"PMLSparseVector"16@"NSData"24q32@"PMLSessionDescriptor"40@"PMLSpotlightReference"48B56
v52@0:8@"PMLSparseVector"16q24@"PMLSessionDescriptor"32@"PMLSpotlightReference"40B48
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v32@0:8@"PMLSessionDescriptor"16@?<v@?q@"NSData"@?<v@?q@"PMLSparseVector">>24
v24@0:8@?<B@?>16
@"NSDictionary"32@0:8@"NSData"16^@24
B32@0:8@"NSData"16^@24
@"NSArray"
@24@0:8f16f20
@56@0:8f16f20Q24Q32Q40Q48
{?="bucketSize"b1"minValue"b1}
@44@0:8@16B24f28Q32f40
@"PMLGradientSolver"
@60@0:8@16f24@28@36@44Q52
@68@0:8@16f24@28@36Q44@52Q60
v44@0:8@16@24Q32f40
v44@0:8@"PMLSparseVector"16@"PMLSparseMatrix"24Q32f40
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSDictionary"32@0:8@"NSDictionary"16@"AWDProactiveModelFittingMinibatchStats"24
@40@0:8@16@24Q32
@"<PMLTrackerAdapterProtocol>"
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@120@0:8@16@24^{NSString=#}32B40@44Q52@60@68@76d84d92B100Q104Q112
@36@0:8I16@20@28
@28@0:8r^f16i24
@28@0:8r^d16i24
r^d16@0:8
@28@0:8i16i20B24
@48@0:8@16@24@32@40
@176@0:8@16@24@32^{NSString=#}40B48@52Q60Q68Q76@84f92f96Q100Q108B116d120d128B136B140Q144q152f160Q164B172
@48@0:8@16@24@?32@40
@"<PMLLogRegTrackerProtocol>"
v40@0:8@16Q24@32
v48@0:8@16Q24@32Q40
{?="k"b1"precision"b1}
@"NSNumber"
@"PMLModelLearningRates"
v24@0:8@?<v@?@"PMLSessionDescriptor"Qf>16
v44@0:8@16Q24Q32f40
@"DESRecordStore"
@"PMLAWDAvailableSessionsTracker"
@"NSSet"
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
v24@0:8^f16
v24@0:8^q16
^q16@0:8
{?="columnLength"b1"rowLength"b1}
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@32@0:8r^f16i24B28
@32@0:8Q16Q24
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
^{sparse_m_float=}
@"PMLTrainingStoredSessionBatch"
@56@0:8@16@24Q32Q40Q48
@80@0:8@16@24f32f36@40Q48B56q60f68Q72
@"_PASRng"
@(#)PROGRAM:ProactiveML  PROJECT:ProactiveSupport-126.23
