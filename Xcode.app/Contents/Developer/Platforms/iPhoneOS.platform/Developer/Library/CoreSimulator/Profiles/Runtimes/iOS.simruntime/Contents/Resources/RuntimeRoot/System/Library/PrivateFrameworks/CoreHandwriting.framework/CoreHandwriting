numberWithInt:
arrayWithObjects:count:
dictionaryWithObjectsAndKeys:
bounds
pointCountForStrokeIndex:
pointForStrokeIndex:pointIndex:
init
retain
release
dealloc
strokeProvider
sessionLastResult
strokeProviderVersion
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
array
count
unionSet:
enumerateChangesSinceVersion:usingBlock:
countByEnumeratingWithState:objects:count:
strokeIdentifier
containsObject:
addObject:
removeObject:
minusSet:
allObjects
addObjectsFromArray:
compareOrderOfStrokeWithIdentifier:toStrokeWithIdentifier:
sortUsingComparator:
orderedStrokes
strokeGroupingResult
strokeGroups
strokeIdentifiers
class
_isPointEnumerationSupportedForStroke:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
strokeForIdentifier:
firstStrokeIdentifier
lastStrokeIdentifier
mutableCopy
autorelease
setWithCapacity:
getFirstStrokeIdentifier:lastStrokeIdentifier:inGroup:addingStrokeIdentifiers:removingStrokeIdentifiers:
classification
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:
enumeratePointsForStroke:interpolationType:resolution:usingBlock:
enumeratePointsWithDistanceStep:usingBlock:
respondsToSelector:
enumeratePointsWithTimestep:usingBlock:
initWithStrokeProvider:sessionLastResult:locales:
getAddedStrokes:removedStrokeIdentifiers:
strokesForIdentifiers:
strokeGroupFromGroup:addingStrokes:
locales
_strokeProvider
_sessionLastResult
_locales
alloc
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:
updatedGroupingResultWithCancellationBlock:
recognizableDrawingForStrokeGroup:orderedStrokesIDs:
copy
addPoint:
stringWithCString:encoding:
fileURLWithPath:
modelWithContentsOfURL:error:
lastPathComponent
stringByDeletingPathExtension
stringByDeletingLastPathComponent
stringByAppendingString:
stringByAppendingPathComponent:
cStringUsingEncoding:
isEqualToString:
modelDescription
inputDescriptionsByName
objectForKeyedSubscript:
multiArrayConstraint
shape
objectAtIndex:
unsignedIntValue
bitmapRepresentationForSize:drawingAlgorithm:
numberWithUnsignedInt:
initWithShape:dataType:error:
dataPointer
characterIsMember:
setObject:forKeyedSubscript:
initWithDictionary:error:
initWithUseCPUOnly:
predictionFromFeatures:options:error:
featureValueForName:
multiArrayValue
length
enumerateSubstringsInRange:options:usingBlock:
score
string
stringWithFormat:
description
initWithScore:
setScore:
_score
numberWithBool:
initWithString:score:rare:wordRanges:wordIDs:wordScores:wordStrokeSets:wordLexicalEntries:wordPatternEntries:wordOVSIDs:
initWithString:score:rare:wordRanges:wordIDs:lexicalEntry:patternEntry:
wordIDs
wordRanges
rangeValue
stringByPaddingToLength:withString:startingAtIndex:
replaceCharactersInRange:withString:
stringWithString:
indexSet
letterCharacterSet
whitespaceCharacterSet
wordOVSIDs
containsIndex:
_filterCharactersInRange:fromString:withLastFilteredRange:
wordScores
wordPatternEntries
wordLexicalEntries
doubleValue
boolValue
substringWithRange:
stringByTrimmingCharactersInSet:
_isGibberishWordAtIndex:
addIndexesInRange:
characterAtIndex:
enumerateRangesWithOptions:usingBlock:
punctuationCharacterSet
alphanumericCharacterSet
symbolCharacterSet
ch_occurrencesOfCharactersInSet:maxCount:
exemplarCharacterSet
objectAtIndexedSubscript:
integerValue
initWithString:score:rare:wordRanges:wordIDs:
mecabraCandidate
stringByFilteringLowConfidenceRanges:excludeGibberish:rejectionRate:
languageFitnessForLocale:competingLocales:
rare
wordStrokeSets
_rare
_string
_wordRanges
_wordIDs
_wordScores
_wordStrokeSets
_wordLexicalEntries
_wordPatternEntries
_wordOVSIDs
initWithString:score:rotation:
rotation
_rotation
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:pathPoints:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:
startEndpointType
endEndpointType
startLocation
endLocation
midpointLocation
controlPoint
pathPoints
cornerLine
_cornerLine
_startEndpointType
_endEndpointType
_pathPoints
_startLocation
_endLocation
_midpointLocation
_controlPoint
initWithString:score:rotation:center:size:controlPointLocation:
center
size
_center
_size
initWithString:score:rotation:upperLeftPoint:upperRightPoint:lowerLeftPoint:lowerRightPoint:
upperLeftPoint
upperRightPoint
lowerLeftPoint
lowerRightPoint
_upperLeftPoint
_upperRightPoint
_lowerLeftPoint
_lowerRightPoint
initWithString:score:rotation:vertex1:vertex2:vertex3:
vertex1
vertex2
vertex3
_vertex1
_vertex2
_vertex3
initWithString:score:rotation:center:size:
initWithString:score:rotation:center:size:stemLocation:stemWidth:
stemLocation
stemWidth
_stemWidth
_stemLocation
indexSetWithIndexesInRange:
valueWithRange:
numberWithDouble:
setRecognitionMode:
_loadEngineModel
initWithType:mode:locale:learningDictionaryURL:
stringByAppendingPathExtension:
UTF8String
appendString:
_isOVSString:
lowercaseString
obfuscateString:
_transliterationVariantsForString:
rangeOfComposedCharacterSequenceAtIndex:
_alternativeInterpretationsForString:
substringToIndex:
characterType:
sharedRootCursor
sharedCursorByAdvancingWithCharacterTypes:withLength:fromCursor:
characterSetWithCharactersInString:
replaceOccurrencesOfString:withString:options:range:
dictionaryWithObjects:forKeys:count:
localeIdentifier
languageCode
caseInsensitiveCompare:
scriptCode
_isLocaleSupported:
initWithLocaleIdentifier:
_prepareOVSTrie
_prepareTransliterationVariantMap
_prepareCHCharacterLanguageModel
_prepareStaticLexicon
_prepareLanguageModel
wordsForCustomLexicon
_buildCustomLexiconFromWords:
_loadMecabraIfNeeded
logCandidateIfAppropriate:
initWithType:mode:locale:
releaseLMResources
numberWithInteger:
objectForKey:
addCharactersInRange:
sketchDescriptionForCode:
sketchCodeForDescription:
orientationRepresentationForSampling:convolutionWidth:
strokeCount
manhattanLineCandidateResultForDrawing:candidate:rejectionResult:
pointCount
valueWithPoint:
insertObject:atIndex:
chatBubbleCandidateResultForDrawing:candidate:
ellipseCandidateResultForDrawing:candidate:
rectangleCandidateResultForDrawing:candidate:
triangleCandidateResultForDrawing:candidate:
starCandidateResultForDrawing:candidate:
lineCandidateResultForDrawing:candidate:rejectionResult:
pentagonCandidateResultForDrawing:candidate:
outlineArrowCandidateResultForDrawing:candidate:
exchangeObjectAtIndex:withObjectAtIndex:
firstObject
predicateWithBlock:
filterUsingPredicate:
substringFromIndex:
_rescoreCandidatesWithLanguageModel:history:
_applyTransliterationAndSyntheticCandidates:
isMecabraRareEntry:
indexSetWithIndex:
_removeOVSResults:withHistory:
postProcessMultiWordsLatticePaths:withMaximumResults:
postProcessLatticePaths:history:activeHistoryRange:
stringWithCharacters:length:
addIndex:
_applySentenceTransliterationCandidates:codesLen:codesMax:
stringByReplacingOccurrencesOfString:withString:
indexOfObjectPassingTest:
arrayWithObjects:
orthographyWithDominantScript:languageMap:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
expectedMinStrokeCount:
compare:options:
_wordLXLexiconCorrectionForString:withLexicon:consumableStrokesSet:resultWordID:
_wordLMLexiconCorrectionForString:withLexicon:consumableStrokesSet:resultWordID:
_encodeTempDelayedSegmentID:
_computeEditPenalizationFromString:toReferenceString:withSuffix:withCaseSensitivity:withFirstLetterCaseSensitivity:withDiacriticSensitivity:withDiacriticsCharSet:withConsumableStrokesCharSet:outputSuffix:lexiconExtraCharacters:firstLetterCaseFlipped:
capitalizedStringWithLocale:
uppercaseStringWithLocale:
_shouldCapitalizeGivenHistory:
_updateResults:string:score:lexicalEntry:patternEntry:
rangeOfCharacterFromSet:
compare:
removeAllObjects
_filterNonHumanFriendlyCandidates:
_adjustResultsForConfusableCharacters:
stringByReplacingCharactersInRange:withString:
getCharacters:range:
removeObjectAtIndex:
lastObject
indexOfObject:
matchingStrokePrefixRangeForDrawing:
setCachedDrawing:
clear
endStroke
appendSegment:fromDrawing:
relatedSegmentIDs
intValue
segmentID
strokeBoundsAtIndex:
_adjustCandidatesForConfusableCharacters:
containsStrokeLessThanSize:
defaultPunctuationResultsForRecognitionType:withStrokeCount:
engine
bestNetworkPaths:from:to:count:staticLexiconCursor:customLexiconCursor:patternCursor:history:activeHistoryRange:mecabraIDs:numExpectedDelayedStrokes:
precomposedStringWithCanonicalMapping
numberWithUnsignedInteger:
arrayWithArray:
enumerateObjectsUsingBlock:
arrayByAddingObjectsFromArray:
enumerateIndexesUsingBlock:
addIndexes:
_calculateJointWordProbabilityForString:withPatterns:
_decodeTempDelayedSegmentID:
indexForSegmentID:fromSegments:
startStrokeIndex
startPointIndex
endStrokeIndex
sortedArrayUsingComparator:
strokeIndicesSortedByMinXCoordinate
computeDelayedStrokesUsingMinimumDrawingSize:
findSubStrokeSegmentationPointsExcludingStrokes:
generateSubStrokeSegmentsFromDrawing:withSegmentationPoints:extractDelayedStrokeIDs:extractedDelayedSegments:
sortedDrawingUsingMinXCoordinate
setLineHeight:
removeAllIndexes
recognitionResultsForSingleCharacterDrawing:options:
recognitionResultsForMultipleCharacterDrawing:sortedStrokeIndices:subStrokeSegments:delayedSubStrokeSegments:network:boundsAtNode:options:shouldCancel:
setSavedDrawing:
setSavedTop1CandidateString:
setSaveDrawingUntilNextCandidateAccepted:
recognitionResultsForSketchDrawing:options:
_performMultipleCharacterRecognition:options:shouldCancel:
recognitionResultsForDrawing:options:shouldCancel:
decimalDigitCharacterSet
lowercaseLetterCharacterSet
uppercaseLetterCharacterSet
_tokenIDForUNKCharacterString:
initWithType:mode:learningDictionaryURL:
isOVSString:
transliterationVariantsForString:
updateAddressBookLexicon:
updateUserDictionaryLexicon:
candidatesCleared
candidateAccepted:
completionsForCandidate:prefix:option:
completionsForCandidate:candidateContext:prefix:option:
strokeIndexesForLastCharacter
initWithType:mode:
supportedCharacterSet
supportedStrings
characterSetForStrings:
endpointsForDrawing:startLocation:endLocation:
_extractSubStrokeSegmentsFromSegments:withDelayedStrokeSegments:fromDelayedSegmentIDs:
_subStrokeSegmentationPointsForDrawing:
recognitionResultsForDrawing:options:
setMaxRecognitionResultCount:
setRecognitionType:
setActiveCharacterSet:
getMinimumDrawingSize
setMinimumDrawingSize:
.cxx_destruct
.cxx_construct
maxRecognitionResultCount
recognitionType
recognitionMode
activeCharacterSet
minimumDrawingSize
setEngine:
freeformEngine
setFreeformEngine:
recognitionQueue
setRecognitionQueue:
radicalClusterFST
setRadicalClusterFST:
formatGrammarFST
setFormatGrammarFST:
locale
setLocale:
languageModel
setLanguageModel:
characterLanguageModel
setCharacterLanguageModel:
mecabra
setMecabra:
staticLexicon
setStaticLexicon:
dynamicLexicon
setDynamicLexicon:
customLexicon
setCustomLexicon:
ovsTrie
setOvsTrie:
learningDictionaryURL
setLearningDictionaryURL:
savedDrawing
savedTop1CandidateString
saveDrawingUntilNextCandidateAccepted
cachedDrawing
cachedResults
setCachedResults:
transliterationVariantMap
setTransliterationVariantMap:
icuTransliterator
setIcuTransliterator:
lastCharacterStrokeCount
setLastCharacterStrokeCount:
lastCharacterStrokeIndexes
setLastCharacterStrokeIndexes:
_saveDrawingUntilNextCandidateAccepted
_recognitionType
_recognitionMode
_maxRecognitionResultCount
_activeCharacterSet
_engine
_freeformEngine
_recognitionQueue
_radicalClusterFST
_formatGrammarFST
_locale
_languageModel
_characterLanguageModel
_mecabra
_staticLexicon
_dynamicLexicon
_customLexicon
_ovsTrie
_learningDictionaryURL
_savedDrawing
_savedTop1CandidateString
_cachedDrawing
_transliterationVariantMap
_icuTransliterator
_lastCharacterStrokeCount
_lastCharacterStrokeIndexes
_minimumDrawingSize
_cachedResults
boundingBoxFromSegmentID:toSegmentID:withSegments:withSourceDrawing:
endPointIndex
drawing
setDrawing:
indexPathWithIndexes:length:
indexAtPosition:
findLocalYMaximaWithWindowSize:excludingStrokes:
initialSegmentationPointIndicesForDrawing
filterPointsWithProximity:fixedPoints:points:
sortedArrayForPointIndices:
allocWithZone:
copyWithZone:
initWithContentsOfFile:
isPrefixForDrawing:
xyRepresentation
bitmapRepresentationForSize:
spatiallyResampledWithDistance:
boundingBoxForDrawingSegmentFromIndexPath:toIndexPath:
_drawing
setSegmentID:
setStartStrokeIndex:
setStartPointIndex:
setEndStrokeIndex:
setEndPointIndex:
setRelatedSegmentIDs:
setSegmentBounds:
setIsFullStroke:
initWithSegmentID:startStrokeIndex:startPointIndex:endStrokeIndex:endPointIndex:segmentBounds:isFullStroke:
computeRelatedSegments:withDelayedSegments:
segmentBounds
unsignedIntegerValue
isFullStroke
_isFullStroke
_segmentID
_startStrokeIndex
_startPointIndex
_endStrokeIndex
_endPointIndex
_relatedSegmentIDs
_segmentBounds
convexHull
_boundingBoxOfPoints:rotatedAroundPoint:byAngle:
initWithStrokeIdentifier:substrokesCount:classification:lineOrientation:lineError:containerScore:bounds:boundsDiagonal:enlargedBounds:rotatedBounds:supportByStrokeIdentifier:support:active:
mutableCopyWithZone:
initWithStroke:consistingOfSubstrokes:classification:lineOrientation:lineError:containerScore:
substrokesCount
lineError
containerScore
lineOrientationAngle
boundsDiagonal
enlargedBounds
rotatedBounds
supportByStrokeIdentifier
support
active
_supportByStrokeIdentifier
_support
_active
_strokeIdentifier
_substrokesCount
_classification
_lineError
_containerScore
_lineOrientationAngle
_boundsDiagonal
_bounds
_enlargedBounds
_rotatedBounds
_adjustSupportForLineClassificationWithStroke:consistingOfSubstrokes:
_adjustSupportForContainerClassificationWithStroke:consistingOfSubstrokes:
removeObjectForKey:
setObject:forKey:
setSupportByStrokeIdentifier:
setSupport:
setActive:
adjustSupportWithStroke:consistingOfSubstrokes:
updateByRemovingStrokeIdentifier:
dirtyRectForStrokeGroup:
drawVisualizationInRect:context:viewBounds:
resultDrawn
shouldDrawStrokeGroup:
uniqueIdentifier
recognitionResultForStrokeGroupIdentifier:
inputDrawing
_transformForInputDrawingBounds:referenceBounds:viewBounds:
_drawGroupBrackgroundInRect:context:
drawInputDrawing:inContext:transform:
inputDrawingCutPoints
_drawCutPoints:inputDrawing:inContext:transform:
activeStrokeGroupAncestorIdentifiers
ancestorIdentifier
layeringPriority
wantsInputDrawings
stringByAppendingFormat:
textStrokeGroupsSortedByWritingOrientation
_recognitionResultsByGroupID
debugDescription
appendFormat:
preferredLocales
highConfidenceTextForSessionResult:rejectionRate:
_resultsDebugDescriptionIntoGroupsArray:groupHeaderBlock:
recognitionResultsForLocale:
initWithStrokeProviderVersion:locales:preferredLocales:strokeGroupingResult:recognitionResults:generationDuration:
_transcriptionCapability
highConfidenceDebugDescription
allResultsDebugDescription
allResultsDebugDescriptionByGroup
allResultsDebugDescriptionWithGroupHeaderBlock:
generationDuration
__transcriptionCapability
_strokeProviderVersion
_preferredLocales
_strokeGroupingResult
__recognitionResultsByGroupID
_generationDuration
createdStrokeGroups
deletedStrokeGroups
textStrokeGroups
averageWritingOrientation
objectsPassingTest:
textStrokeGroupsSortedTopBottomLeftRight
_strokeGroupsSortedTopBottomLeftRight
_strokeGroupsSortedTopBottomLeftRightRespectingWritingOrientation
_textStrokeGroups
_strokeGroups
_createdStrokeGroups
_deletedStrokeGroups
initWithResultsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:inputDrawing:inputDrawingCutPoints:
_recognitionResultsByLocale
standardUserDefaults
boolForKey:
_languageFitnessByLocale
floatValue
initWithResultsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:
languageFitnessForLocale:
inputStrokeIdentifiers
_inputDrawing
_inputDrawingCutPoints
_inputStrokeIdentifiers
__recognitionResultsByLocale
__languageFitnessByLocale
sortedArrayWithOptions:usingComparator:
sortedLocales:byLanguageFitness:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:
_newStrokeGroupUniqueIdentifier
isEqualToSet:
isEquivalentToStrokeGroup:
setByAddingObjectsFromSet:
isStrokeGroupSet:equivalentToStrokeGroupSet:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:
_uniqueIdentifier
_ancestorIdentifier
_strokeIdentifiers
_firstStrokeIdentifier
_lastStrokeIdentifier
capitalizedString
countryCode
uppercaseString
lengthOfBytesUsingEncoding:
q_updateQueryResult
q_sessionResult
debugName
recognitionSession
_setTranscribedTitle:strokeIdentifiers:
q_queryResultDidChange
wantsHighFrequencyNotifications
transcribedTitle
titleStrokeIdentifiers
_transcribedTitle
_titleStrokeIdentifiers
latestStrokeProvider
_newColorForStroke:inGroup:
delegate
visualizationIndexForStrokeGroup:
newColorForVisualizedItemAtIndex:
initWithRecognitionSession:
pause
q_foundItemsForSearchString:sessionResult:
_setFoundItems:
intersectsIndexesInRange:
enumerateRangesUsingBlock:
_enumerateMatchingRangesForStrokeGroupResult:locales:searchString:usingBlock:
lastIndex
objectsAtIndexes:
setWithArray:
initWithStrokeIdentifiers:
rangeOfString:options:range:
_tokenIndexRangeForStringRange:inResult:
processingQueue
q_setNeedsQueryResultUpdating
stop
setQueryString:
queryString
foundItems
_foundItems
_queryString
isKindOfClass:
isEqual:
isEqualToSearchQueryItem:
hash
setDelegate:
_recognitionSession
_delegate
recognitionSessionDidUpdateRecognitionResult
toggleVisualizationRegionAtPoint:
nextFIFO
emitPoint:
flush
initWithFIFO:
setNextFIFO:
_nextFIFO
strokes
setStrokes:
_strokes
initWithFIFO:width:spacing:
emitAveragedPoint
initWithFIFO:width:
width
setWidth:
spacing
setSpacing:
prevPoints
setPrevPoints:
_spacing
_width
_prevPoints
setUnitScale:
drawingTarget
view
lineWidth
setNeedsDisplayInRect:
interpolateFromPoint:toPoint:controlPoint:time:
initWithFIFO:drawingTarget:
initWithFIFO:strokeView:
setUnitScaleForViewSize:normalizedSize:contentScaleFactor:
unitScale
emitInterpolatedPoints
setEmitInterpolatedPoints:
emissionHandler
setEmissionHandler:
path
setPath:
setLineWidth:
points
setPoints:
controlPoints
setControlPoints:
lastPoint
setLastPoint:
setDrawingTarget:
setView:
_emitInterpolatedPoints
_unitScale
_emissionHandler
_path
_lineWidth
_drawingTarget
_view
_lastPoint
_points
_controlPoints
drawStrokesFromStrokeProvider:inRect:context:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
startTimestamp
endTimestamp
_startTimestamp
_endTimestamp
intersectsSet:
setWithObject:
_timeSortedStrokesForIdentifiers:
outputResult
cancelled
_setStatus:
_inputResult
timeIntervalSinceReferenceDate
dictionaryWithCapacity:
_recognitionResultsForStrokeGroup:groupingStrategy:
floatForKey:
sleepForTimeInterval:
_setOutputResult:
_logResultsIfAppropriateWithStrokeProvider:
setCancelled:
_isTransitionValidFromStatus:toStatus:
recognizerForLocale:
saveInputDrawings
_recognizersQueue
numberWithFloat:
_filterResultsByLocale:fitnessByLocale:
initWithLocales:preferredLocales:strokeProvider:inputResult:
main
cancel
status
setSaveInputDrawings:
_cancelled
_saveInputDrawings
_status
_outputResult
__inputResult
__recognizersQueue
_attributedStringFromString:withColor:font:paragraphStyle:
initWithAttributedString:
appendAttributedString:
initWithString:attributes:
setResultDrawn:
lastRecognitionResult
newGroupsDefaultToActive
_markStrokeGroupsAsActive:
visualizationNeedsDisplay:
visualization:needsDisplayInRect:
setActiveStrokeGroupAncestorIdentifiers:
_newGroupsDefaultToActive
_resultDrawn
_activeStrokeGroupAncestorIdentifiers
sharedPatternGraph
graph
setGraph:
_graph
mainBundle
localizedStringForKey:value:table:
setWithObjects:
allValues
unregisterChangeObserver:
isEnabledVisualizationForIdentifier:
_enabledVisualizationIDs
_updateInstalledVisualizations
_activeVisualizationIDs
_updateSessionRegistration
statusReportingEnabled
ch_descriptionWithSeparator:filterBlock:
_activeVisualizationsByID
availableVisualizationIdentifiers
_isActiveVisualizationForIdentifier:
_addVisualizationForIdentifier:
_removeVisualizationForIdentifier:
visualizationManagerNeedsDisplay:
_classForVisualizationIdentifier:
_registeredAsChangeObserver
registerChangeObserver:
set_registeredAsChangeObserver:
_registeredAsInputDrawingsClient
registerInputDrawingClient:
unregisterInputDrawingClient:
set_registeredAsInputDrawingsClient:
visualizationManager:needsDisplayInRect:
_strokeGroupIndexByAncestorID
_updateKnownStrokeGroupIndexes
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
enumerateKeysAndObjectsUsingBlock:
visualizationManagerDidUpdateSessionStatus:
localizedNameForVisualizationIdentifier:
availableRecognitionSessionStatusKeys
localizedNameForRecognitionSessionStatusKey:
variableHeightForRecognitionSessionStatusKey:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retainCount
zone
superclass
recognitionSessionDidUpdateRecognitionResult:
recognitionSessionDidChangeStatus:
setEnabled:forVisualizationIdentifier:
setStatusReportingEnabled:
valueForRecognitionStatusKey:
toggleSelectiveVisualizationsAtPoint:
_statusReportingEnabled
__registeredAsChangeObserver
__registeredAsInputDrawingsClient
__enabledVisualizationIDs
__activeVisualizationIDs
__activeVisualizationsByID
__strokeGroupIndexByAncestorID
_queryActive
set_queryActive:
_updateForRecognitionSessionResultChangeIfNeeded
waitForPendingRecognitionTasks
start
waitForPendingUpdates
_processingQueue
_lastProcessedSessionResult
__queryActive
queryDidUpdateResult:
expectedMaxStrokeCount:
_strokeProviderDrawn
set_strokeProviderDrawn:
__strokeProviderDrawn
_sessionQueue
isEqualToArray:
effectiveLocalesFromLocales:
_setEffectiveLocales:
_cleanupCachedRecognizers
_isReadyToProcessChanges
rebuildRecognitionResults
setNeedsRecognitionUpdate
setPreferredLocales:
_notifyObserversWithBlock:
_hasPendingRecognitionTasks
_hasUnprocessedChanges
_changeObservers
arrayWithCapacity:
nonretainedObjectValue
_activeTasks
indexableContent
dataSource
strokeProviderSnapshot
_setLatestStrokeProvider:
_setHasUnprocessedChanges:
_scheduleProcessStrokeProviderChangesImmediately:
_updateRecognitionSessionStatus
_cancelOngoingRequests
_changeCoalescingIndex
set_changeCoalescingIndex:
dictionary
_setLastRecognitionResult:
_processPendingStrokeChangesIfAvailable
_preferredCoalescingInterval
_inputDrawingClients
_tasksWorkQueue
_recognizersByLocaleID
hasPrefix:
containsString:
allKeys
data
setLocales:
setDataSource:
cancelOngoingRequests
sessionData
loadSessionData:error:
_effectiveLocales
_lastRecognitionResult
_latestStrokeProvider
__hasUnprocessedChanges
_dataSource
__effectiveLocales
__recognizersByLocaleID
__changeCoalescingIndex
__changeObservers
__inputDrawingClients
__tasksWorkQueue
__sessionQueue
__activeTasks
replaceObjectAtIndex:withObject:
valueWithNonretainedObject:
lastRecognitionResultWaitingForPendingTasks
sharedCharacterSetRules
_charSetRulesQueue
_expectedMaxStrokeCount:
_expectedMinStrokeCount:
_characterType:
invertedSet
lowercaseCharSet
setLowercaseCharSet:
uppercaseCharSet
setUppercaseCharSet:
digitCharSet
setDigitCharSet:
startPunctuationCharSet
setStartPunctuationCharSet:
middlePunctuationCharSet
setMiddlePunctuationCharSet:
endPunctuationCharSet
setEndPunctuationCharSet:
digitStartPunctuationCharSet
setDigitStartPunctuationCharSet:
digitEndPunctuationCharSet
setDigitEndPunctuationCharSet:
arithmeticOperatorCharSet
setArithmeticOperatorCharSet:
dateTimeSeparatorCharSet
setDateTimeSeparatorCharSet:
dateTimeEndLetterCharSet
setDateTimeEndLetterCharSet:
numeralEndLetterCharSet
setNumeralEndLetterCharSet:
lexiconSkipCharSet
setLexiconSkipCharSet:
containsDotCharSet
setContainsDotCharSet:
prefixCapitalizationExceptionCharSet
setPrefixCapitalizationExceptionCharSet:
selfLoopPunctuationCharSet
setSelfLoopPunctuationCharSet:
emoticonTopCharSet
setEmoticonTopCharSet:
emoticonMiddleCharSet
setEmoticonMiddleCharSet:
emoticonBottomCharSet
setEmoticonBottomCharSet:
strokeMaxPenalties
setStrokeMaxPenalties:
signatureUniChar
setSignatureUniChar:
_lowercaseCharSet
_uppercaseCharSet
_digitCharSet
_startPunctuationCharSet
_middlePunctuationCharSet
_endPunctuationCharSet
_digitStartPunctuationCharSet
_digitEndPunctuationCharSet
_arithmeticOperatorCharSet
_dateTimeSeparatorCharSet
_dateTimeEndLetterCharSet
_numeralEndLetterCharSet
_lexiconSkipCharSet
_containsDotCharSet
_prefixCapitalizationExceptionCharSet
_selfLoopPunctuationCharSet
_emoticonTopCharSet
_emoticonMiddleCharSet
_emoticonBottomCharSet
__charSetRulesQueue
_strokeMaxPenalties
_signatureUniChar
initWithStrokeIdentifier:bounds:startTimestamp:endTimestamp:convexHull:curvature:
curvature
writingOrientation
setWritingOrientation:
strokeDeviation
setStrokeDeviation:
originalWritingDirectionIndex
setOriginalWritingDirectionIndex:
coalescedCenter
setCoalescedCenter:
_curvature
_originalWritingDirectionIndex
_writingOrientation
_strokeDeviation
_coalescedCenter
_convexHull
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:
localWritingOrientationAtStrokeIndex:
writingDirectionSortedStrokeIdentifiers
writingDirectionSortedSubstrokes
averageStrokeDeviation
localStrokeWritingOrientations
_averageWritingOrientation
_writingDirectionSortedStrokeIdentifiers
_writingDirectionSortedSubstrokes
_averageStrokeDeviation
_localStrokeWritingOrientations
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:substrokesByStrokeIdentifier:nontextCandidates:
nontextCandidates
substrokesByStrokeIdentifier
_nontextCandidates
_substrokesByStrokeIdentifier
addEntriesFromDictionary:
_updateNontextCandidates:byRemovingStrokeIdentifiers:substrokesByStrokeIdentifier:reinsertedStrokes:removedNontextStrokeIdentifiers:nontextGroups:createdGroups:deletedGroups:shouldCancelCallback:
_updateNontextCandidates:byAddingStrokes:substrokesByStrokeIdentifier:newNontextStrokeIdentifiers:textGroups:nontextGroups:nontextGroupsSnapshot:createdGroups:shouldCancelCallback:
setWithSet:
_updateTextGroups:createdGroups:deletedGroups:forAddedStroke:substrokesByStrokeIdentifier:
_mergeGroupsPostProcessing:createdGroups:deletedGroups:
_updateNontextGroups:createdGroups:deletedGroups:byRemovingStrokeIdentifier:
_substrokesForStroke:
_lineOrientationForStrokePoints:error:
_containerSupportForPoints:withBounds:
_updateNontextCandidateSupport:withStroke:substrokesByStrokeIdentifier:nontextStrokeIdentifiers:nontextGroups:createdGroups:
_getMergingEndOfLineCost:mergingEndOfLineStroke:forStrokeSubstrokes:toLineGroup:
_compareDistanceInWritingSequenceOfStroke:andStroke:toReferenceStroke:
_getMergingMiddleOfLineCost:mergingMiddleOfLineStroke:forStrokeSubstrokes:toLineGroup:
_estimateWritingDirectionAndSortSubstrokesAccordingly:averageWritingOrientation:averageStrokeDeviation:
_writingDirectionSortedStrokeIdentifiersFromSubstrokes:localWritingOrientations:
_scaleFactorForBoundsHeight:
_averageVectorFromSubstroke:toSubstroke:withOrientation:strokeRef:
_circumferenceRatioOfCircleFittedToPoints:circleCenter:circleRadius:
_convexHullForPoints:
setObject:atIndexedSubscript:
_updateLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
_sortSubstrokesByWritingDirection:averageWritingOrientation:
_refineLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
_refineWritingOrientationAndResortSubstrokes:averageWritingOrientation:
_updateLocalStrokeDeviationsForSubstrokes:averageStrokeDeviation:
_smoothLocalWritingOrientations:
_flippedCenters:ofSubstrokes:maxStrokesGap:begnning:
_vectorMeanWithoutOutliers:
averageAngleAndReliabilityForStrokeGroup:
_boundingBoxesOfStrokesInGroup:rotatedAroundPoint:byAngle:
_unionStrokeBounds:usingStrokeCountLimit:reverseOrder:
_unionStrokeBounds:aroundXPosition:usingOneSideStrokeCountLimit:
_convexHullForStroke:
_verticalOffsetForBoundsHeight:andScaleFactor:
_isStrokeClassifiedAsDoodling:withSubstrokes:
_labelBoundsForAnchorPoint:
_newBaselinePathForStrokeGroup:outFirstPoint:strokeProvider:
_getOrientedBounds:length:forStroke:atWritingDirectionIndex:inGroup:
_orientationTransformForStrokeBounds:atWritingDirectionIndex:inGroup:
initWithIndexableTextRepresentation:presentableTextRepresentation:
_setIndexableContent:
_indexableContent
indexableTextRepresentation
presentableTextRepresentation
_indexableTextRepresentation
_presentableTextRepresentation
rangeOfCharacterFromSet:options:range:
ch_mappedArrayWithBlock:
=17TriangleRegressor
9Regressor
10CHTriangle
26CHRSketchRecognitionResult
&@333333
?fffff
333333
Mb`?-C
6:?-C
?b2U0*
3?-C
?333333
MbP?
L?333?
15CHManhattanLine
6CHLine
9SymbolMap
12CHChatBubble
19ChatBubbleRegressor
?333333
?333333
?ffffff
?6MatrixIfE
6CHStar
MbP?
?UUUUUU
6MatrixIdE
@______
?______
?______
VVVVVV
?______
9CHEllipse
?}}}}}}
?^^^^^^
?VVVVVV
______
?______
?______
VVVVVV
?15CHOutlinedArrow
12CHBasicShape
ffffff
18RectangleRegressor
11CHRectangle
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
?^^^^^^
2@UUUUUU
?UUUUUU
14CHStraightLine
12CHBezierLine
@333333
I@ffffff
?ffffff
VVVVVV
?ffffff
@333333
O@)\
2@UUUUUU
ffffff
?es-8R
RRRRRR
10CHPentagon
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHStrokeGroupingStrategy.m
<Unknown File>
strokeProvider cannot be nil.
v32@?0@"NSSet"8@"NSSet"16^B24
q24@?0@"<CHStroke>"8@"<CHStroke>"16
B32@?0@"<CHStroke>"8Q16^B24
Invalid parameter not satisfying: %@
strokeIdentifiers
v40@?0{CGPoint=dd}8d24^B32
stroke
block
timestep must be > 0
strokeProvider
T@"<CHStrokeProvider>",R,&,N,V_strokeProvider
sessionLastResult
T@"CHRecognitionSessionResult",R,&,N,V_sessionLastResult
locales
T@"NSArray",R,&,N,V_locales
.codemap
vo_en
imgData
featureData
softmax_output
CHRecognitionOptionTextBefore
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
class: %@ score: %3.5f string: %@
score
Td,V_score
v8@?0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHRecognizer.mm
Incorrect string length. Original %ld, now %ld
v32@?0{_NSRange=QQ}8^B24
rare
TB,R,V_rare
string
T@"NSString",R,V_string
wordRanges
T@"NSArray",R,V_wordRanges
wordIDs
T@"NSArray",R,V_wordIDs
wordScores
T@"NSArray",R,V_wordScores
wordStrokeSets
T@"NSArray",R,V_wordStrokeSets
wordLexicalEntries
T@"NSArray",R,V_wordLexicalEntries
wordPatternEntries
T@"NSArray",R,V_wordPatternEntries
wordOVSIDs
T@"NSIndexSet",R,V_wordOVSIDs
rotation
Td,R,V_rotation
startEndpointType
Ti,R,V_startEndpointType
endEndpointType
Ti,R,V_endEndpointType
startLocation
T{CGPoint=dd},R,V_startLocation
endLocation
T{CGPoint=dd},R,V_endLocation
midpointLocation
T{CGPoint=dd},R,V_midpointLocation
controlPoint
T{CGPoint=dd},R,V_controlPoint
pathPoints
T@"NSArray",R,V_pathPoints
cornerLine
TB,R,V_cornerLine
center
T{CGPoint=dd},R,V_center
size
T{CGSize=dd},R,V_size
upperLeftPoint
T{CGPoint=dd},R,V_upperLeftPoint
upperRightPoint
T{CGPoint=dd},R,V_upperRightPoint
lowerLeftPoint
T{CGPoint=dd},R,V_lowerLeftPoint
lowerRightPoint
T{CGPoint=dd},R,V_lowerRightPoint
vertex1
T{CGPoint=dd},R,V_vertex1
vertex2
T{CGPoint=dd},R,V_vertex2
vertex3
T{CGPoint=dd},R,V_vertex3
stemLocation
T{CGPoint=dd},R,V_stemLocation
stemWidth
Td,R,V_stemWidth
Freeform
WWDC17
2017
synthetics_
odat
%@%@
012olzOLZ
hans
hant
zh.bundle
zh_compact.bundle
zh-Hans
R.bin
G.bin
zh-Hant
vo.bundle
vo_en.bundle
vo_en_compact.bundle
vo_de.bundle
vo_other.bundle
is.bundle
gd.bundle
CoreHandwriting-Custom-Lexicon
Oval
Line
Outline Arrow
Triangle
Rectangle
Pentagon
Manhattan Line
Chat Bubble
Star
Heart
Cloud
Scribble
com.apple.CoreHandwriting
HWRTriangleAlignToAxisThreshold
HWRTriangleIsoscelesLengthRatioThreshold
HWRTriangleEquilateralLengthRatioThreshold
HWROvalFitToCircleRadiiRatioThreshold
HWROvalAlignToIncrementsOf
HWRRectangleFitToSquareLengthRatioThreshold
HWRRectangleAlignToIncrementsOf
HWROutlinedArrowAlignToIncrementsOf
HWRLineAlignToAxisThreshold
HWRLineLengthRatioThreshold
B24@?0@"CHTextRecognitionResult"8@"NSDictionary"16
d16@?0r^{NetworkEdge=QQQQdii{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}8
d16@?0^{LatticePath=^IQQQQB^{Network}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}ddddddddddddQ^v^{_LXCursor}^{PatternGraph}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{_NSRange=QQ}{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}QQ}8
B32@?0@"CHTextRecognitionResult"8Q16^B24
'".-
v44@?0I8r*12d20I28I32^B36
v24@?0^{_LXEntry=}8*16
%@%@%@
q24@?0@8@16
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
v32@?0@8Q16^B24
v24@?0Q8^B16
engine
T^{CHNeuralNetwork=*Q^IIIII@@},N,V_engine
freeformEngine
T^{CHNeuralNetwork=*Q^IIIII@@},N,V_freeformEngine
recognitionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recognitionQueue
radicalClusterFST
T^{Network={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<NetworkNode, std::__1::allocator<NetworkNode> >=^{NetworkNode}^{NetworkNode}{__compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> >=^{NetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{SymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >={__tree<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<uint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<uint128> >=Q}}}^IQ},N,V_radicalClusterFST
formatGrammarFST
T^{Network={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<NetworkNode, std::__1::allocator<NetworkNode> >=^{NetworkNode}^{NetworkNode}{__compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> >=^{NetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{SymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >={__tree<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<uint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<uint128> >=Q}}}^IQ},N,V_formatGrammarFST
locale
T@"NSLocale",N,V_locale
languageModel
T^v,N,V_languageModel
characterLanguageModel
T^v,N,V_characterLanguageModel
mecabra
T^{__Mecabra=},N,V_mecabra
staticLexicon
T^v,N,V_staticLexicon
dynamicLexicon
T^v,N,V_dynamicLexicon
customLexicon
T^{_LXLexicon=},N,V_customLexicon
ovsTrie
T^{_CFBurstTrie=},N,V_ovsTrie
learningDictionaryURL
T@"NSURL",&,N,V_learningDictionaryURL
savedDrawing
T@"CHDrawing",C,N,V_savedDrawing
savedTop1CandidateString
T@"NSString",C,N,V_savedTop1CandidateString
saveDrawingUntilNextCandidateAccepted
TB,N,V_saveDrawingUntilNextCandidateAccepted
cachedDrawing
T@"CHDrawing",C,N,V_cachedDrawing
cachedResults
T{map<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >={__tree<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true> >=Q}}},N,V_cachedResults
transliterationVariantMap
T^{VariantMap=^i^i^ii^iQ},N,V_transliterationVariantMap
icuTransliterator
T^^v,N,V_icuTransliterator
lastCharacterStrokeCount
TQ,N,V_lastCharacterStrokeCount
lastCharacterStrokeIndexes
T@"NSMutableIndexSet",&,N,V_lastCharacterStrokeIndexes
maxRecognitionResultCount
TQ,N,V_maxRecognitionResultCount
recognitionType
Ti,N,V_recognitionType
recognitionMode
Ti,N,V_recognitionMode
activeCharacterSet
T@"NSCharacterSet",&,N,V_activeCharacterSet
minimumDrawingSize
T{CGSize=dd},N,V_minimumDrawingSize
%d %d
%d %d %d
q24@?0@"NSIndexPath"8@"NSIndexPath"16
drawing
T{CJKChar={vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}^{vector<double, std::__1::allocator<double> >}{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}^{vector<double, std::__1::allocator<double> >}{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}}}QI{Matrix<double>=^^?^dII}d{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}},N,V_drawing
B32@?0@8Q16^B24
segmentID
T@"NSNumber",&,N,V_segmentID
startStrokeIndex
TQ,N,V_startStrokeIndex
startPointIndex
TQ,N,V_startPointIndex
endStrokeIndex
TQ,N,V_endStrokeIndex
endPointIndex
TQ,N,V_endPointIndex
relatedSegmentIDs
T@"NSMutableArray",&,N,V_relatedSegmentIDs
segmentBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_segmentBounds
isFullStroke
TB,N,V_isFullStroke
strokeIdentifier
T@"<CHStrokeIdentifier>",R,&,N,V_strokeIdentifier
substrokesCount
Tq,R,N,V_substrokesCount
classification
Tq,R,N,V_classification
lineError
Td,R,N,V_lineError
containerScore
Td,R,N,V_containerScore
lineOrientationAngle
Td,R,N,V_lineOrientationAngle
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_bounds
boundsDiagonal
Td,R,N,V_boundsDiagonal
enlargedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_enlargedBounds
rotatedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_rotatedBounds
supportByStrokeIdentifier
T@"NSDictionary",R,&,N,V_supportByStrokeIdentifier
support
Td,R,N,V_support
active
TB,R,N,V_active
T@"NSDictionary",&,D,N
Td,D,N
TB,D,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHRecognitionSessionResult.m
Use the designated initializer instead
strokeProviderVersion
strokeGroupingResult
recognitionResults
", "
"%@"
 strokeProviderVersion: %@, locales: %@, strokeGroupingResult: %@
  Group %ld: %@
, recognitionResults: 
GroupID %ld, %@
@"NSString"24@?0@"CHStrokeGroup"8@"NSLocale"16
== %@ ==
GroupID %ld
%@: {
<NO RESULT>
"%@"%@
_recognitionResultsByGroupID
T@"NSDictionary",R,C,N,V__recognitionResultsByGroupID
_transcriptionCapability
Tq,R,N
T@"<CHStrokeProviderVersion>",R,&,N,V_strokeProviderVersion
T@"NSArray",R,C,N,V_locales
preferredLocales
T@"NSArray",R,C,N,V_preferredLocales
T@"CHStrokeGroupingResult",R,&,N,V_strokeGroupingResult
generationDuration
T{?=ddd},R,N,V_generationDuration
highConfidenceDebugDescription
T@"NSString",R,N
allResultsDebugDescription
allResultsDebugDescriptionByGroup
T@"NSArray",R,N
strokeGroups
 Groups: %ld, created: %ld, deleted: %ld
q24@?0@"CHStrokeGroup"8@"CHStrokeGroup"16
B24@?0@"CHStrokeGroup"8^B16
T@"NSSet",R,C,N,V_strokeGroups
createdStrokeGroups
T@"NSSet",R,C,N,V_createdStrokeGroups
deletedStrokeGroups
T@"NSSet",R,C,N,V_deletedStrokeGroups
textStrokeGroupsSortedTopBottomLeftRight
T@"NSArray",R,C,N
textStrokeGroupsSortedByWritingOrientation
textStrokeGroups
T@"NSSet",R,C,N
CHSkipConfidenceFiltering
CHSkipGibberishFiltering
_recognitionResultsByLocale
T@"NSDictionary",R,C,N,V__recognitionResultsByLocale
_languageFitnessByLocale
T@"NSDictionary",R,C,N,V__languageFitnessByLocale
inputStrokeIdentifiers
T@"NSArray",R,C,N,V_inputStrokeIdentifiers
resultsByLocale
langFitnessByLocale
q24@?0@"NSLocale"8@"NSLocale"16
inputDrawing
T@"CHDrawing",R,&,N
inputDrawingCutPoints
General
Recognizer
RecognitionSession
StrokeGrouping
com.apple.corehandwriting
com.apple.CoreHandwriting.StrokeGroupID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHStrokeGroup.m
 uniqueID: %ld, ancestorID: %ld, bounds: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}, strokes: %ld
Cannot have nil strokeIdentifiers
uniqueIdentifier
Tq,R,N,V_uniqueIdentifier
ancestorIdentifier
Tq,R,N,V_ancestorIdentifier
averageWritingOrientation
T{CGVector=dd},R,N
T@"NSSet",R,N,V_strokeIdentifiers
firstStrokeIdentifier
T@"<CHStrokeIdentifier>",R,N,V_firstStrokeIdentifier
lastStrokeIdentifier
T@"<CHStrokeIdentifier>",R,N,V_lastStrokeIdentifier
%@-%@_%@
%@_%@
%@-%@
 Low confidence, reporting nil.
Title Query %p
transcribedTitle
T@"NSString",R,C,N,V_transcribedTitle
titleStrokeIdentifiers
T@"NSSet",R,C,N,V_titleStrokeIdentifiers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHSearchQuery.m
session
v40@?0@"NSString"8{_NSRange=QQ}16@"NSIndexSet"32
Stroke index %ld in search result out of group stroke count %ld.
Invalid result. wordRanges (%ld) should match wordStrokeSets (%ld) in %p, locale: %@, strokes: %@
queryString
Search Query %p
foundItems
T@"NSArray",C,N,S_setFoundItems:,V_foundItems
T@"NSString",C,N,V_queryString
 strokeIdentifiers: %@
item should be of class CHSearchQueryItem: %@
T@"NSSet",R,C,N,V_strokeIdentifiers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHVisualization.m
recognitionSession
T@"CHRecognitionSession",R,&,N,V_recognitionSession
delegate
T@"<CHVisualizationDelegate>",N,V_delegate
layeringPriority
wantsInputDrawings
TB,R,N
nextFIFO
T@"CHPointFIFO",&,N,V_nextFIFO
strokes
T@"CHDrawing",&,N,V_strokes
T@"CHDrawing",&,N,V_drawing
prevPoints
T{vector<float __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^}},N,V_prevPoints
width
TQ,N,V_width
spacing
Tf,N,V_spacing
points
T{vector<float __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^}},N,V_points
controlPoints
T{vector<float __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^}},N,V_controlPoints
lastPoint
T,N,V_lastPoint
drawingTarget
T@"<CHPointFIFODrawingTarget>",&,N,V_drawingTarget
view
T@"UIView",&,N,V_view
unitScale
Tf,N,V_unitScale
emitInterpolatedPoints
TB,N,V_emitInterpolatedPoints
emissionHandler
T@?,C,V_emissionHandler
path
T^{CGPath=},N,V_path
lineWidth
Td,N,V_lineWidth
0x%x
startTimestamp
Td,R,N,V_startTimestamp
endTimestamp
Td,R,N,V_endTimestamp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHTimeWindowStrokeGroupingStrategy.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHRecognitionSessionTask.mm
Use designated initializer instead
The locales list cannot be empty.
com.apple.CoreHandwriting.RecognitionSessionRecognizers
Recognition tasks can only be executed once: %@
delegate cannot be nil when the task starts
B8@?0
groupingResult cannot be nil
CHRecognitionTaskOverhead
groupingResult cannot be nil for a non-cancelled task.
Invalid status transition from %ld to %ld.
CHRecognitionSessionLogging
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
strokeGroup
The strokes count in the drawing (%ld) must match the ones in the result (%ld).
_inputResult
T@"CHRecognitionSessionResult",R,&,N,V__inputResult
outputResult
T@"CHRecognitionSessionResult",&,N,S_setOutputResult:,V_outputResult
status
Tq,N,S_setStatus:,V_status
_recognizersQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V__recognizersQueue
cancelled
TB,V_cancelled
T@"<CHRecognitionSessionTaskDelegate>",N,V_delegate
saveInputDrawings
TB,N,V_saveInputDrawings
%.10g
Helvetica-Bold
Stroke group classification: 
 text  
 doodle  
 line  
 container  
 unknown  
CTFontCreateWithName
/System/Library/Frameworks/CoreText.framework/CoreText
CTParagraphStyleCreate
CTFramesetterCreateWithAttributedString
CTFramesetterCreateFrame
CTFrameDraw
kCTFontAttributeName
kCTForegroundColorAttributeName
kCTParagraphStyleAttributeName
resultDrawn
T@"CHRecognitionSessionResult",&,N,V_resultDrawn
activeStrokeGroupAncestorIdentifiers
T@"NSSet",C,N,V_activeStrokeGroupAncestorIdentifiers
T@"<CHStrokeGroupBasedVisualizationDelegate>",D,N
newGroupsDefaultToActive
TB,R,N,V_newGroupsDefaultToActive
graph
T^{PatternGraph={list<PatternGraph *, std::__1::allocator<PatternGraph *> >={__list_node_base<PatternGraph *, void *>=^{__list_node_base<PatternGraph *, void *>}^{__list_node_base<PatternGraph *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PatternGraph *, void *> > >=Q}}I},N,V_graph
StrokeBounds
StrokePoints
GroupBounds
Grouping
GroupClassification
GroupBaseline
NormalizedDrawing
NormalizedDrawingAll
CHStatusKeyStatus
CHStatusKeyLocales
CHStatusKeyLastDurationTotal
CHStatusKeyLastDurationDetailed
CHStatusKeyGroupCount
CHStatusKeyTranscript
CHStatusKeyAllResults
Stroke Bounds
Stroke Points
Stroke Group Bounds
Stroke Groups by Color
Stroke Groups Classification
Stroke Groups Baseline
Normalized Drawing (Selective)
Normalized Drawing (All)
Status
Locales
Total Duration
Detailed
Group Count
Transcript
Text Results
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHVisualizationManager.m
Use initWithRecognitionSession: instead.
visualizationID
@"NSString"24@?0@"NSLocale"8q16
%0.2fs
%0.2fs Grouping, %0.2fs Recog.
%ld text, %ld non-text
Group %ld (ID: %ld)
<Status Reporting Disabled>
visualizationIdentifier
Cannot activate an already active visualization
q24@?0@"NSString"8@"NSString"16
v32@?0@"NSNumber"8@"NSNumber"16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_enabledVisualizationIDs
T@"NSMutableSet",R,&,N,V__enabledVisualizationIDs
_activeVisualizationIDs
T@"NSMutableArray",R,&,N,V__activeVisualizationIDs
_activeVisualizationsByID
T@"NSMutableDictionary",R,&,N,V__activeVisualizationsByID
_strokeGroupIndexByAncestorID
T@"NSMutableDictionary",R,&,N,V__strokeGroupIndexByAncestorID
_registeredAsChangeObserver
TB,N,V__registeredAsChangeObserver
_registeredAsInputDrawingsClient
TB,N,V__registeredAsInputDrawingsClient
T@"<CHVisualizationManagerDelegate>",N,V_delegate
statusReportingEnabled
TB,N,V_statusReportingEnabled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHQuery.m
com.apple.CoreHandwriting.QueryProcessing
_queryActive
TB,N,V__queryActive
T@"<CHQueryDelegate>",N,V_delegate
Query %p
processingQueue
T@"NSObject<OS_dispatch_queue>",R,&,N
debugName
T@"NSString",R,&,N
<div style="clear:both;margin:auto;font-size:250%%;" >
<p>WARNING : NOTHING WAS SAVED : YOU MUST CLICK ON THE FOLLOWING LINK !</p>
<p><a href="#" onclick="SendMail(%d);">Send via email to Antoine !</a></p>
</div>
<p>For information, here are the files you flagged:</p>
<p id="po-term%d" style="margin:0;" \>
</body>
</html>
Invalid empty FST line entry
File not found: (
Node[
has out degree zero but is not marked as a final node
has in degree zero but is not marked as an initial node
0x%zx
_strokeProviderDrawn
T@"<CHStrokeProvider>",&,N,V__strokeProviderDrawn
Unknown
Initial
Accumulating
Processing
Finished
com.apple.CoreHandwriting.RecognitionSessionTask
com.apple.CoreHandwriting.RecognitionSession
v16@?0@"<CHRecognitionSessionObserver>"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHRecognitionSession.m
notificationBlock
Hans
Hant
dataSource %@ returned a nil strokeProviderSnapshot.
latestStrokeProvider cannot be nil when scheduling change processing.
Unimplemented
_effectiveLocales
T@"NSArray",C,N,S_setEffectiveLocales:,V__effectiveLocales
lastRecognitionResult
T@"CHRecognitionSessionResult",&,S_setLastRecognitionResult:
Tq,N,S_setStatus:
latestStrokeProvider
T@"<CHStrokeProvider>",&,S_setLatestStrokeProvider:
_hasUnprocessedChanges
TB,N,S_setHasUnprocessedChanges:,V__hasUnprocessedChanges
_recognizersByLocaleID
T@"NSMutableDictionary",R,&,N,V__recognizersByLocaleID
_changeCoalescingIndex
TQ,N,V__changeCoalescingIndex
_changeObservers
T@"NSMutableArray",R,&,N,V__changeObservers
_inputDrawingClients
T@"NSMutableArray",R,&,N,V__inputDrawingClients
_tasksWorkQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V__tasksWorkQueue
_sessionQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V__sessionQueue
_activeTasks
T@"NSMutableArray",R,&,N,V__activeTasks
T@"NSArray",C,N,V_preferredLocales
T@"NSArray",C,N
dataSource
T@"<CHRecognitionSessionDataSource>",N,V_dataSource
sessionData
T@"NSData",R,N
B32@?0@"NSLocale"8Q16^B24
B32@?0@"NSValue"8Q16^B24
T@"CHRecognitionSessionResult",R,&
T@"<CHStrokeProvider>",R,&
com.apple.CoreHandwriting.CHCharacterSetsRules
^*+=<>.,
:'"-/
apmAPM.
strdndth.
:;B=
)(pPDoOxX*
lowercaseCharSet
T@"NSCharacterSet",&,N,V_lowercaseCharSet
uppercaseCharSet
T@"NSCharacterSet",&,N,V_uppercaseCharSet
digitCharSet
T@"NSCharacterSet",&,N,V_digitCharSet
startPunctuationCharSet
T@"NSCharacterSet",&,N,V_startPunctuationCharSet
middlePunctuationCharSet
T@"NSCharacterSet",&,N,V_middlePunctuationCharSet
endPunctuationCharSet
T@"NSCharacterSet",&,N,V_endPunctuationCharSet
digitStartPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitStartPunctuationCharSet
digitEndPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitEndPunctuationCharSet
arithmeticOperatorCharSet
T@"NSCharacterSet",&,N,V_arithmeticOperatorCharSet
dateTimeSeparatorCharSet
T@"NSCharacterSet",&,N,V_dateTimeSeparatorCharSet
dateTimeEndLetterCharSet
T@"NSCharacterSet",&,N,V_dateTimeEndLetterCharSet
numeralEndLetterCharSet
T@"NSCharacterSet",&,N,V_numeralEndLetterCharSet
lexiconSkipCharSet
T@"NSCharacterSet",&,N,V_lexiconSkipCharSet
containsDotCharSet
T@"NSCharacterSet",&,N,V_containsDotCharSet
prefixCapitalizationExceptionCharSet
T@"NSCharacterSet",&,N,V_prefixCapitalizationExceptionCharSet
selfLoopPunctuationCharSet
T@"NSCharacterSet",&,N,V_selfLoopPunctuationCharSet
emoticonTopCharSet
T@"NSCharacterSet",&,N,V_emoticonTopCharSet
emoticonMiddleCharSet
T@"NSCharacterSet",&,N,V_emoticonMiddleCharSet
emoticonBottomCharSet
T@"NSCharacterSet",&,N,V_emoticonBottomCharSet
strokeMaxPenalties
T{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}},N,V_strokeMaxPenalties
signatureUniChar
T{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}},N,V_signatureUniChar
_charSetRulesQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V__charSetRulesQueue
convexHull
T{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}},R,N,V_convexHull
curvature
Td,R,N,V_curvature
writingOrientation
T{CGVector=dd},N,V_writingOrientation
strokeDeviation
T{CGVector=dd},N,V_strokeDeviation
originalWritingDirectionIndex
Tq,N,V_originalWritingDirectionIndex
coalescedCenter
T{CGPoint=dd},N,V_coalescedCenter
writingDirectionSortedSubstrokes
T@"NSArray",R,&,N,V_writingDirectionSortedSubstrokes
averageStrokeDeviation
T{CGVector=dd},R,N,V_averageStrokeDeviation
localStrokeWritingOrientations
T{vector<CGVector, std::__1::allocator<CGVector> >=^{CGVector}^{CGVector}{__compressed_pair<CGVector *, std::__1::allocator<CGVector> >=^{CGVector}}},R,N,V_localStrokeWritingOrientations
writingDirectionSortedStrokeIdentifiers
T@"NSArray",R,&,N,V_writingDirectionSortedStrokeIdentifiers
nontextCandidates
T@"NSSet",R,&,N,V_nontextCandidates
substrokesByStrokeIdentifier
T@"NSDictionary",R,&,N,V_substrokesByStrokeIdentifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHBottomUpStrokeGroupingStrategy.mm
Stroke group can't be nil and must be of CHTextLineStrokeGroup class.
q24@?0@"CHBottomUpSubstroke"8@"CHBottomUpSubstroke"16
q24@?0@"CHTextLineStrokeGroup"8@"CHTextLineStrokeGroup"16
%ld-%ld
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreHandwriting_Sim/CoreHandwriting-208/CoreHandwriting/CHStrokeGroupBaselineVisualization.m
Invalid stroke index %ld
IndexableContent Query %p
indexableContent
T@"CHRecognitionSessionIndexableContent",&,S_setIndexableContent:,V_indexableContent
indexableTextRepresentation
T@"NSString",R,C,N,V_indexableTextRepresentation
presentableTextRepresentation
T@"NSString",R,C,N,V_presentableTextRepresentation
@24@?0@8q16
  Processing incremental change that added %ld strokes, removed %ld strokes.
  Processing full-diff change that added %ld strokes, removed %ld strokes.
Failed to get stroke with id: %@ from stroke provider version %@
Error: unable to mmap resource %s
Deprecated recognition mode should never be passed to loadEngine
Locale '%@' is incompatible with the kCHRecognitionTypeSimplifiedChinese type, falling back to default locale.
Locale '%@' is incompatible with the kCHRecognitionTypeTraditional type, falling back to default locale.
Locale '%@' is incompatible with the kCHRecognitionTypeRoman type, falling back to default locale.
Error: readCharacter: filename ptr = 0
Error: readCharacter: Empty filename
Error: readCharacter: Wrong filename :%s:
Trying to get support for unsupported non-text candidate class.
%@: beginning update for result version %@.
%@: finished update for session %p. Length: %ld.%s
%@: finished update for session %p. Found %ld item(s).
Stroke Grouping with strategy %@. Added strokes: %ld, removed strokes: %ld
Could not find stroke for id: %@
Recognition task almost finished, waiting for explicit overhead of %0.1fs.
Recognition results for version %@:
Beginning recognizer request for stroke group %ld, locale %@
Finished recognizer request for stroke group %ld, locale %@. Duration: %0.3f
Invalid recognition result: %p %@. wordRanges (%ld) != wordStrokeSets (%ld). Stroke group: %@. Locale: %@. Ignoring result.
Recognizer finished for stroke group %ld, duration: %0.3fs
%@: start for session %p
%@: pause
%@: result changed, will dispatch to main queue to notify the delegate.
%@: result changed, but cannot notify delegate. queryActive: %@, delegate %p.
Unsupported Network Version %s
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 3Gram!
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 2Gram!
Error: unable to reallocate memory for path expansion.
Configuring RecognitionSession %p with preferred locales: %@. Effective locales: %@.
RecognitionSession %p received needsRecognitionUpdate request. Will trigger processing soon.
RecognitionSession %p cannot process needsRecognitionUpdate request. dataSource: %@, locales: %@.
RecognitionSession %p cancelOngoingRequests. Cancelling %ld pending tasks. hasUnprocessedChanges %@->N. Last saved result for version: %@
RecognitionSession %p received request to rebuild recognition results. Stroke provider version: %@
RecognitionSession %p rebuilding recognition results. Cleared previous results. Will trigger processing soon.
RecognitionSession %p cannot process rebuildRecognitionResults request. dataSource: %@, locales: %@.
RecognitionSession %p trying to process changes, but there are no locales specified.
RecognitionSession %p enqueueing recognition task for version %@.
RecognitionSession %p canceling pending task for version %@, superseded by request for version %@.
RecognitionSession %p starting task for version: %@.
RecognitionSession %p finished task for version: %@. Duration: %0.3fs (%0.3fs G, %0.3fs R). Groups: %ld, created: %ld, deleted: %ld.
RecognitionSession %p finished task for version: %@. Cancelled: %s. Produced result: %s.
Stroke with no enumerable points found, recognition results may be affected. Stroke: %@
%@: finished update for session %p. indexableContent length: %ld
CHStrokeGroupingStrategy
SubclassesToOverride
CHRecognitionResult
CHTextRecognitionResult
CHSketchRecognitionResult
CHLineSketchRecognitionResult
CHManhattanLineSketchRecognitionResult
CHOutlinedArrowSketchRecognitionResult
CHRectangleSketchRecognitionResult
CHTriangleRecognitionResult
CHEllipseRecognitionResult
CHChatBubbleRecognitionResult
CHStarRecognitionResult
CHPentagonRecognitionResult
CHScribbleRecognitionResult
CHHeartRecognitionResult
CHCloudRecognitionResult
CHFreeformRecognitionResult
CHRecognizer
CHDrawing
NSCopying
SubStrokeSegment
CHNonTextCandidateStroke
NSMutableCopying
CHMutableNonTextCandidateStroke
CHNormalizedDrawingVisualization
CHNormalizedDrawingAllVisualization
CHRecognitionSessionResult
CHStrokeGroupingResult
CHStrokeGroupRecognitionResult
Private
CHStrokeGroup
CHTitleQuery
CHStrokeGroupingVisualization
CHSearchQuery
CHSearchQueryItem
CHVisualization
SubclassUtilities
CHPointFIFO
CHPointStrokeFIFO
CHBoxcarFilterPointFIFO
CHQuadCurvePointFIFO
CHStrokePointsVisualization
CHTimeWindowStrokeGroup
CHTimeWindowStrokeGroupingStrategy
CHRecognitionSessionTask
CHStrokeGroupClassificationVisualization
CHStrokeGroupBasedVisualization
CHPatternGraph
CHVisualizationManager
CHStrokeGroupBasedVisualizationDelegate
CHVisualizationDelegate
NSObject
CHRecognitionSessionObserver
CHQuery
ForSubclasses
CHStrokeVisualization
CHGroupBoundsVisualization
CHRecognitionSession
CHRecognitionSessionTaskDelegate
CHCharacterSetRules
CHBottomUpSubstroke
CHTextLineStrokeGroup
CHBottomUpStrokeGroupingResult
CHBottomUpStrokeGroupingStrategy
CHStrokeGroupBaselineVisualization
CHIndexableContentQuery
CHRecognitionSessionIndexableContent
CoreHandwriting
CHExtensions
B24@0:8@16
v48@0:8@16q24q32@?40
@40@0:8@16@24@32
v16@0:8
v32@0:8^@16^@24
@24@0:8@16
v56@0:8^@16^@24@32@40@48
@32@0:8@16@24
@16@0:8
@"<CHStrokeProvider>"
@"CHRecognitionSessionResult"
@"NSArray"
@24@0:8@?16
@32@0:8@16^@24
@24@0:8d16
d16@0:8
v24@0:8d16
v56@0:8{_NSRange=QQ}16@32{_NSRange=QQ}40
@92@0:8@16d24B32@36@44@52@60@68@76@84
@60@0:8@16d24B32@36@44B52B56
@52@0:8@16d24B32@36@44
@32@0:8B16B20^d24
B24@0:8q16
f32@0:8@16@24
B16@0:8
@"NSString"
@"NSIndexSet"
@40@0:8@16d24d32
@120@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96@112
@112@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96
i16@0:8
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@88@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72
{CGSize=dd}16@0:8
{CGSize="width"d"height"d}
@104@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72{CGPoint=dd}88
@88@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72
@72@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56
@96@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72d88
d92@0:8@16@24@32B40B44B48@52@60^@68^@76^B84
Q24@0:8Q16
@28@0:8i16Q20
@40@0:8i16i20^{__CFLocale=}24@32
@32@0:8i16i20@24
v24@0:8^v16
v24@0:8@16
{vector<const void *, std::__1::allocator<const void *> >=^^v^^v{__compressed_pair<const void **, std::__1::allocator<const void *> >=^^v}}40@0:8@16@24Q32
{vector<const void *, std::__1::allocator<const void *> >=^^v^^v{__compressed_pair<const void **, std::__1::allocator<const void *> >=^^v}}48@0:8@16@24@32Q40
@24@0:8i16i20
@32@0:8i16i20^{__CFLocale=}24
@20@0:8i16
v40@0:8@16^{CGPoint=dd}24^{CGPoint=dd}32
@32@0:8@16^{CHCandidateResult=If}24
@40@0:8@16^{CHCandidateResult=If}24^@32
v32@0:8@16@24
d32@0:8@16@24
@112@0:8^{Network={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<NetworkNode, std::__1::allocator<NetworkNode> >=^{NetworkNode}^{NetworkNode}{__compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> >=^{NetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{SymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >={__tree<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<uint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<uint128> >=Q}}}^IQ}16Q24Q32Q40^v48^{_LXCursor=}56^{PatternGraph=}64@72{_NSRange=QQ}80^{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}96Q104
B48@0:8@16@24d32B40B44
@32@0:8r^{vector<LatticePath, std::__1::allocator<LatticePath> >=^{LatticePath}^{LatticePath}{__compressed_pair<LatticePath *, std::__1::allocator<LatticePath> >=^{LatticePath}}}16Q24
@48@0:8@16^v24@32^I40
@48@0:8@16^{_LXLexicon=}24@32^I40
@48@0:8r^{vector<LatticePath, std::__1::allocator<LatticePath> >=^{LatticePath}^{LatticePath}{__compressed_pair<LatticePath *, std::__1::allocator<LatticePath> >=^{LatticePath}}}16@24{_NSRange=QQ}32
@80@0:8@16^{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}24@32@40^{Network={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<NetworkNode, std::__1::allocator<NetworkNode> >=^{NetworkNode}^{NetworkNode}{__compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> >=^{NetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{SymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >={__tree<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<uint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<uint128> >=Q}}}^IQ}48^{vector<CGRect, std::__1::allocator<CGRect> >=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::__1::allocator<CGRect> >=^{CGRect}}}56@64@?72
@56@0:8@16^@24{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}32
@40@0:8@16@24@?32
v24@0:8^{vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> >=^{CHCandidateResult}^{CHCandidateResult}{__compressed_pair<CHCandidateResult *, std::__1::allocator<CHCandidateResult> >=^{CHCandidateResult}}}16
@32@0:8^S16i24i28
I24@0:8@16
v32@0:8^{vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> >=^{CHCandidateResult}^{CHCandidateResult}{__compressed_pair<CHCandidateResult *, std::__1::allocator<CHCandidateResult> >=^{CHCandidateResult}}}16@24
v24@0:8Q16
v20@0:8i16
v32@0:8{CGSize=dd}16
Q16@0:8
^{CHNeuralNetwork=*Q^IIIII@@}16@0:8
v24@0:8^{CHNeuralNetwork=*Q^IIIII@@}16
^{Network={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<NetworkNode, std::__1::allocator<NetworkNode> >=^{NetworkNode}^{NetworkNode}{__compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> >=^{NetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{SymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >={__tree<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<uint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<uint128> >=Q}}}^IQ}16@0:8
v24@0:8^{Network={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<NetworkNode, std::__1::allocator<NetworkNode> >=^{NetworkNode}^{NetworkNode}{__compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> >=^{NetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{SymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >={__tree<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<uint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<uint128> >=Q}}}^IQ}16
^v16@0:8
^{__Mecabra=}16@0:8
v24@0:8^{__Mecabra=}16
^{_LXLexicon=}16@0:8
v24@0:8^{_LXLexicon=}16
^{_CFBurstTrie=}16@0:8
v24@0:8^{_CFBurstTrie=}16
v20@0:8B16
{map<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >={__tree<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >={__tree<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true> >=Q}}}16
^{VariantMap=^i^i^ii^iQ}16@0:8
v24@0:8^{VariantMap=^i^i^ii^iQ}16
^^v16@0:8
v24@0:8^^v16
@"NSCharacterSet"
^{CHNeuralNetwork=*Q^IIIII@@}
@"NSObject<OS_dispatch_queue>"
^{Network={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<NetworkNode, std::__1::allocator<NetworkNode> >=^{NetworkNode}^{NetworkNode}{__compressed_pair<NetworkNode *, std::__1::allocator<NetworkNode> >=^{NetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{SymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >={__tree<uint128, std::__1::less<uint128>, std::__1::allocator<uint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<uint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<uint128> >=Q}}}^IQ}
@"NSLocale"
^{__Mecabra=}
^{_LXLexicon=}
^{_CFBurstTrie=}
@"NSURL"
@"CHDrawing"
^{VariantMap=^i^i^ii^iQ}
@"NSMutableIndexSet"
{map<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::allocator<std::__1::pair<const std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >="__tree_"{__tree<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::__value_type<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::vector<CHCandidateResult, std::__1::allocator<CHCandidateResult> > >, std::__1::less<std::__1::set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > >, true> >="__first_"Q}}}
@24@0:8^{_NSZone=}16
v528@0:8{CJKChar={vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}^{vector<double, std::__1::allocator<double> >}{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}^{vector<double, std::__1::allocator<double> >}{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}}}QI{Matrix<double>=^^?^dII}d{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}}16
{CGPoint=dd}32@0:8Q16Q24
B32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8Q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8{CGPoint=dd}16
{_NSRange=QQ}24@0:8@16
{Matrix<float>=^^?^fII}32@0:8{CGSize=dd}16
{Matrix<float>=^^?^fII}36@0:8{CGSize=dd}16i32
{Matrix<float>=^^?^fII}32@0:8Q16Q24
{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}16@0:8
@48@0:8Q16{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}24
@40@0:8d16@24@32
@40@0:8{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}32@0:8{CGSize=dd}16
{CJKChar={vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}^{vector<double, std::__1::allocator<double> >}{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}^{vector<double, std::__1::allocator<double> >}{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >=^{vector<double, std::__1::allocator<double> >}}}QI{Matrix<double>=^^?^dII}d{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}}16@0:8
{CJKChar="strokeBounds"{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__begin_"^{vector<double, std::__1::allocator<double> >}"__end_"^{vector<double, std::__1::allocator<double> >}"__end_cap_"{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__first_"^{vector<double, std::__1::allocator<double> >}}}"strokeBoundsValidity"{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__first_"Q}}"strokes"{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__begin_"^{vector<double, std::__1::allocator<double> >}"__end_"^{vector<double, std::__1::allocator<double> >}"__end_cap_"{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__first_"^{vector<double, std::__1::allocator<double> >}}}"currentStrokeIndex"Q"mSize"I"bitmap"{Matrix<double>="_vptr$Matrix"^^?"_data"^d"_w"I"_h"I}"lineHeight"d"sparseBitmap"{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__first_"^i}}}
@64@0:8@16@24{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}32^@56
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8Q16Q24@32@40
Q32@0:8@16@24
@92@0:8@16Q24Q32Q40Q48{CGRect={CGPoint=dd}{CGSize=dd}}56B88
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSNumber"
@"NSMutableArray"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@64@0:8@16@24q32d40d48d56
@188@0:8@16q24q32d40d48d56{CGRect={CGPoint=dd}{CGSize=dd}}64d96{CGRect={CGPoint=dd}{CGSize=dd}}104{CGRect={CGPoint=dd}{CGSize=dd}}136@168d176B184
q16@0:8
@"NSMutableDictionary"
@"<CHStrokeIdentifier>"
B32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48{CGRect={CGPoint=dd}{CGSize=dd}}56
{CGAffineTransform=dddddd}112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
v80@0:8@16^{CGContext=}24{CGAffineTransform=dddddd}32
v88@0:8@16@24^{CGContext=}32{CGAffineTransform=dddddd}40
@80@0:8@16@24@32@40@48{?=ddd}56
@32@0:8@16@?24
@24@0:8q16
{?=ddd}16@0:8
@"<CHStrokeProviderVersion>"
@"CHStrokeGroupingResult"
@"NSDictionary"
{?="groupingDuration"d"recognitionDuration"d"totalDuration"d}
@"NSSet"
@32@0:8@16^d24
f24@0:8@16
@56@0:8@16@24@32@40@48
@80@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40q72
@88@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80
{CGVector=dd}16@0:8
@88@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80
^{CGColor=}32@0:8@16@24
v48@0:8@16@24@32@?40
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
@"CHRecognitionSession"
@"<CHVisualizationDelegate>"
^{CGColor=}24@0:8q16
v32@0:816
@"CHPointFIFO"
@36@0:8@16Q24f32
@32@0:8@16Q24
f16@0:8
v20@0:8f16
{vector<float __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^}}16@0:8
v40@0:8{vector<float __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=^}}16
{vector<float __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >="__first_"^}}
68@0:8163248f64
v56@0:8{CGSize=dd}16{CGSize=dd}32d48
@?16@0:8
v24@0:8@?16
^{CGPath=}16@0:8
v24@0:8^{CGPath=}16
16@0:8
^{CGPath=}
@"<CHPointFIFODrawingTarget>"
@"UIView"
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
@88@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72d80
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80d88
@48@0:8@16@24@32@40
v24@0:8q16
B32@0:8q16q24
@"<CHRecognitionSessionTaskDelegate>"
@48@0:8@16^{CGColor=}24^{__CTFont=}32^{__CTParagraphStyle=}40
^{PatternGraph={list<PatternGraph *, std::__1::allocator<PatternGraph *> >={__list_node_base<PatternGraph *, void *>=^{__list_node_base<PatternGraph *, void *>}^{__list_node_base<PatternGraph *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PatternGraph *, void *> > >=Q}}I}40@0:8^I16Q24^{PatternGraph={list<PatternGraph *, std::__1::allocator<PatternGraph *> >={__list_node_base<PatternGraph *, void *>=^{__list_node_base<PatternGraph *, void *>}^{__list_node_base<PatternGraph *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PatternGraph *, void *> > >=Q}}I}32
^{PatternGraph={list<PatternGraph *, std::__1::allocator<PatternGraph *> >={__list_node_base<PatternGraph *, void *>=^{__list_node_base<PatternGraph *, void *>}^{__list_node_base<PatternGraph *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PatternGraph *, void *> > >=Q}}I}16@0:8
v24@0:8^{PatternGraph={list<PatternGraph *, std::__1::allocator<PatternGraph *> >={__list_node_base<PatternGraph *, void *>=^{__list_node_base<PatternGraph *, void *>}^{__list_node_base<PatternGraph *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PatternGraph *, void *> > >=Q}}I}16
^{PatternGraph={list<PatternGraph *, std::__1::allocator<PatternGraph *> >={__list_node_base<PatternGraph *, void *>=^{__list_node_base<PatternGraph *, void *>}^{__list_node_base<PatternGraph *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PatternGraph *, void *> > >=Q}}I}
#24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"CHVisualization"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8@"CHVisualization"16
q24@0:8@16
q24@0:8@"CHStrokeGroup"16
v24@0:8@"CHRecognitionSession"16
v28@0:8B16@20
@"<CHVisualizationManagerDelegate>"
@"NSMutableSet"
@"<CHQueryDelegate>"
@"CHRecognizer"24@0:8@"NSLocale"16
B32@0:8@16^@24
@"<CHRecognitionSessionDataSource>"
Q20@0:8I16
{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}}16
{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}}16
{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >="__first_"Q}}}
{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >="__tree_"{__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >="__first_"Q}}}
@104@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56d64{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}72d96
{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}16@0:8
v32@0:8{CGVector=dd}16
{CGVector="dx"d"dy"d}
{vector<CGPoint, std::__1::allocator<CGPoint> >="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >="__first_"^{CGPoint}}}
@128@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40@72{CGVector=dd}80{CGVector=dd}96@112^{vector<CGVector, std::__1::allocator<CGVector> >=^{CGVector}^{CGVector}{__compressed_pair<CGVector *, std::__1::allocator<CGVector> >=^{CGVector}}}120
@136@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80{CGVector=dd}88{CGVector=dd}104@120^{vector<CGVector, std::__1::allocator<CGVector> >=^{CGVector}^{CGVector}{__compressed_pair<CGVector *, std::__1::allocator<CGVector> >=^{CGVector}}}128
{CGVector=dd}24@0:8q16
{vector<CGVector, std::__1::allocator<CGVector> >=^{CGVector}^{CGVector}{__compressed_pair<CGVector *, std::__1::allocator<CGVector> >=^{CGVector}}}16@0:8
{vector<CGVector, std::__1::allocator<CGVector> >="__begin_"^{CGVector}"__end_"^{CGVector}"__end_cap_"{__compressed_pair<CGVector *, std::__1::allocator<CGVector> >="__first_"^{CGVector}}}
{vector<CGRect, std::__1::allocator<CGRect> >=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::__1::allocator<CGRect> >=^{CGRect}}}48@0:8@16{CGPoint=dd}24d40
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8r^{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}16{CGPoint=dd}24d40
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8r^{vector<CGRect, std::__1::allocator<CGRect> >=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::__1::allocator<CGRect> >=^{CGRect}}}16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8r^{vector<CGRect, std::__1::allocator<CGRect> >=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::__1::allocator<CGRect> >=^{CGRect}}}16d24q32
{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}24@0:8@16
{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}24@0:8^{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}16
d56@0:8{list<CGPoint, std::__1::allocator<CGPoint> >={__list_node_base<CGPoint, void *>=^{__list_node_base<CGPoint, void *>}^{__list_node_base<CGPoint, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CGPoint, void *> > >=Q}}16^{CGPoint=dd}40^d48
d24@0:8^{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}16
d32@0:8r^{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}16^d24
d56@0:8r^{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}16{CGRect={CGPoint=dd}{CGSize=dd}}24
v88@0:8@16@24@32@40@48@56@64@72@?80
v64@0:8@16@24@32@40@48@56
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
d24@0:8d16
d32@0:8d16d24
@32@0:8@16^{vector<CGVector, std::__1::allocator<CGVector> >=^{CGVector}^{CGVector}{__compressed_pair<CGVector *, std::__1::allocator<CGVector> >=^{CGVector}}}24
v48@0:8^d16^@24@32@40
q40@0:8@16@24@32
{CGVector=dd}56@0:8@16@24{CGVector=dd}32@48
v40@0:8@16^{CGVector=dd}24^{CGVector=dd}32
v32@0:8@16^{CGVector=dd}24
v28@0:8@16B24
v24@0:8^{vector<CGVector, std::__1::allocator<CGVector> >=^{CGVector}^{CGVector}{__compressed_pair<CGVector *, std::__1::allocator<CGVector> >=^{CGVector}}}16
{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}44@0:8r^{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}16@24q32B40
B32@0:8@16^{CGVector=dd}24
v40@0:8@16@24@32
^{CGPath=}40@0:8@16^{CGPoint=dd}24@32
v56@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^d24@32q40@48
{CGAffineTransform=dddddd}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGPoint=dd}16
@"CHRecognitionSessionIndexableContent"
q32@0:8@16q24
