alloc
initWithAsyncSyncEngineInitialization
init
setPsySyncCoordinatorClass:
setAcxDeviceConnectionClass:
psySyncCoordinatorClass
acxDeviceConnectionClass
setIsMaster:
_beginAsyncSyncEngineInitialization
syncCoordinatorWithServiceName:
setSyncCoordinator:
syncCoordinator
setDelegate:
pairedDeviceStorageRoot
stringByAppendingPathComponent:
_savedWatchKitAppInfoFile
defaultManager
removeItemAtPath:error:
setPerDeviceMasterIdentiferToSlaveIdentifier:
perDeviceSlaveIdentiferToWatchAppInfo
objectForKeyedSubscript:
isEqualToString:
perDeviceMasterIdentiferToSlaveIdentifier
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
dataWithContentsOfFile:
unarchiveObjectWithData:
count
mutableCopy
setPerDeviceSlaveIdentiferToWatchAppInfo:
_computeMasterIdentifiersFromWatchKitAppInfo
archivedDataWithRootObject:
writeToFile:options:error:
localizedDescription
unsignedIntegerValue
removeObjectForKey:
addObject:
initWithServiceIdentifier:masterClientIdentifier:slaveClientIdentifier:clientType:
setUpdateAccessActionStatus:
setSyncChangeType:
enumerateObjectsUsingBlock:
countByEnumeratingWithState:objects:count:
masterClientIdentifier
containsObject:
setSlaveClientIdentifier:
description
_writeSavedWatchKitAppInfo
_changesFromUpdatingPerDeviceInstalledWatchKitApps:paringType:
acxDeviceConnection
pairedDevice
code
syncControllerQueue
_getInstalledWatchKitAppsWithContinuation:pairingType:
_gotInstalledWatchKitApps:continuation:pairingType:
fetchInstalledApplicationsForPairedDevice:completion:
sharedDeviceConnection
setAcxDeviceConnection:
addObserver:
messageController
_handleAccessRequestMessageFromSlave:
setIncomingMessageType:handler:
_loadSavedWatchKitAppInfo
activeSyncSession
pendingPostPairingContinuation
valueForProperty:
syncSessionType
setPendingSyncType:
_setSyncingEnabled:
setPendingPostPairingContinuation:
_handlePairingSession
slaveClientIdentifierForMasterClientIdentifier:
addObjectsFromArray:
copy
syncDidComplete
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
syncDidFailWithError:
_failCoordinatorSyncSession:message:code:
_sendSyncSessionDidFinishWithResult:error:
requestAccessActionFromIDSMessage:masterSyncController:
syncAccessUpdateForServiceIdentifier:masterClientIdentifier:slaveClientIdentifier:clientType:accessStatus:updateType:
isSyncingEnabled
initWithServiceIdentifier:
syncAccessAction:updateType:
serviceName
stringWithFormat:
hostDeviceUnlocked
syncService
currentSession
beginBatchingDeltaChanges
_addDeltaSyncChange:
endBatchingDeltaChanges
fetchInfoForApplicationWithBundleID:forPairedDevice:completion:
_syncStatusDescriptionString
appendFormat:
_initiateResetSync
sharedSyncController
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
updateInstallStateForApplication:installState:
updateInstallProgressForApplication:progress:installPhase:
_initializeSyncEngineHook
_removeWatchKitAppInfoFile
_initializeSyncEngineAfterDeviceUnlockHook
_didReturnToPreviouslyPairedDevicHookWithContinuation:
_didPairToNewDevicHookWithContinuation:
_didUnPairDeviceHook
_beginResetSyncHook
_endResetSyncHook
masterClientIdentifierForSlaveClientIdentifier:
syncAccessUpdateForServiceIdentifier:clientIdentifier:clientType:accessStatus:updateType:
syncOverrideUpdateForServiceIdentifier:updateType:
testMasterResetSync
.cxx_destruct
_psySyncCoordinatorClass
_acxDeviceConnectionClass
_syncCoordinator
_acxDeviceConnection
_perDeviceSlaveIdentiferToWatchAppInfo
_perDeviceMasterIdentiferToSlaveIdentifier
_pendingPostPairingContinuation
stringWithUTF8String:
fileURLWithPath:
informationForPlugInWithPid:
fileURLWithPath:isDirectory:
bundleWithURL:
applicationProxyForIdentifier:placeholder:
localizedName
bundleIdentifier
applicationProxyForIdentifier:
initWithPid:
executablePath
dealloc
initWithMessage:
initWithBundleIdentifier:isWK2Proxy:
displayName
client_type
client
policy_id
is_wk2_proxy
path
bundle
plugin
displayNameBlock
_is_wk2_proxy
_client_type
_pid
_client
_policy_id
_path
_bundle
_plugin
serviceIdentifier
UTF8String
clientType
clientIdentifierForCurrentPlatform
updateAccessActionStatus
arrayWithObjects:count:
defaultHost
attributes
discoverPlugInsForAttributes:flags:found:
setSet:
intersectSet:
mainRunLoop
bundleURL
resetStandardUserDefaults
standardUserDefaults
persistentDomainForName:
objectForKey:
fileSystemRepresentation
mainBundle
bundleWithPath:
dictionary
localizedStringForKey:value:table:
integerValue
showUserNotification:applicationName:extensionBundleID:
showUserNotification:bundleID:
hideUserNotification
numberWithBool:
numberWithInteger:
numberWithUnsignedInteger:
stringByAppendingString:
sharedManager
currentUser
userType
longLongValue
unsignedIntValue
willShutdown
plugInKitPlugins
bundleVersion
numberWithLongLong:
entitlements
absoluteString
testSyncStatus
testSyncSet:
testMemoryPressureCritical
isInstalled
decodeObjectOfClass:forKey:
decodeInt64ForKey:
containsValueForKey:
encodeObject:forKey:
versionNumber
encodeInt64:forKey:
syncChangeType
syncId
_description
supportsSecureCoding
objectIdentifier
sequencer
changeType
encodeWithCoder:
initWithCoder:
updateDatabase:killClient:
setVersionNumber:
_serviceIdentifier
_syncChangeType
_versionNumber
setMasterClientIdentifier:
slaveClientIdentifier
decodeInt32ForKey:
encodeInt32:forKey:
_clientType
_masterClientIdentifier
_slaveClientIdentifier
intValue
numberWithInt:
idsMessageDictionary
_updateAccessActionStatus
didSendMessage
syncController
syncRequestAccessAction
setSyncRequestAccessAction:
setDidSendMessage:
setSentMessageSemaphore:
removeAccessDidUpdateHandlerForSession:
sentMessageSemaphore
setSyncSession:accessDidUpdateHandler:
sendMessage:ofType:handler:
initWithSyncController:
performRequestAccessAction:
setSyncController:
_didSendMessage
_syncController
_syncRequestAccessAction
_sentMessageSemaphore
initWithService:
addDelegate:queue:
setWithObject:
sendMessage:toDestinations:priority:options:identifier:error:
queue
messageTypesToHandlers
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_makeReadyToReceiveMessages
_sendMessage:handler:
idsService
setIdsService:
messageIdsToHandlers
setMessageIdsToHandlers:
_idsService
_messageIdsToHandlers
dictionaryWithDictionary:
sharedMessageControllerForCurrentPlatform
setMessageTypesToHandlers:
setQueue:
_messageTypesToHandlers
_queue
setSyServiceClass:
setNrPairedDeviceRegisteryClass:
syServiceClass
nrPairedDeviceRegisteryClass
_initializeSyncEngine
dataWithPropertyList:format:options:error:
length
getBytes:range:
_os_state_titleWithPrefix:withHints:
strongToStrongObjectsMapTable
array
_setupOSStateHandler
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
unsignedLongLongValue
setMaxRetryCount:
setRetryIntervalSecs:
setSessionPerMessageTimeoutSecs:
setEventRetryIntervalSecs:
maxRetryCount
retryIntervalSecs
sessionPerMessageTimeoutSecs
eventRetryIntervalSecs
sharedInstance
_initializeSyncEngineAfterDeviceUnlock
isMaster
initWithService:priority:asMasterStore:options:
setSyncService:
setDelegate:queue:
setHostDeviceUnlocked:
pairedDeviceRegistry
getActivePairedDevice
_didReturnToPreviouslyPairedDevice:
pendingDeltaSyncChanges
removeAllObjects
sessionSyncChanges
sessionPendingConfirmationSyncChanges
_retrySyncReset
resume:
setRetryCount:
suspend
pendingSyncType
_aquire_transaction
setHasChangesAvailable
setPairedDevice:
setPairedDeviceStorageRoot:
_loadSavedSyncState
_makePostPairingContinuation
syncTransaction
setSyncTransaction:
_resetSyncingAndCancelAnyInFlightSessions
setNeedsResetSync
batchDeltaChanges
setBatchDeltaChanges:
_savedSyncStateFile
_removeSavedSyncState
isResetSync
setSessionShouldCancelWhenActive:
_writeSyncState
_release_transaction
retryBlock
setRetryBlock:
_retrySyncCancel
retryCount
_retrySyncForPendingState
_syncTypeToString:
_writeSyncStateAndAllowTermination
targetIsInProximity
_endDetlaChangeBatching
syncSessionsQueue
setObject:forKey:
syChangeTypeForUpdateType:
eventRetryBlock
setEventRetryBlock:
_syncSessionHandlerForUpdateAccessAction:
_notifySyncSessionHandlers:forUpdateAccessAction:
_updateDatabase:forUpdateAccessAction:
identifier
isSending
initWithDomain:code:userInfo:
setSerializer:
setTargetQueue:
setPerMessageTimeout:
state
domain
_retrySyncSession:
sessionShouldCancelWhenActive
UUIDString
_didUnPairDevice
deviceForPairingID:
_didPairToDevice:
retryTestMaxRetry
setRetryTestMaxRetry:
removeObjectAtIndex:
updateTypeForSYChangeType:
stringForSYChangeType:
dataFromChange:
changeFromData:ofType:
service:targetDeviceProximityChanged:
handleMemoryPressureCritical
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
serviceDidPairDevice:
serviceDidUnpairDevice:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
_didPairToDeviceHook
dictionaryMessageSyncIDKey
_handleSyncObject:updateType:
stateHandler
setStateHandler:
setPairedDeviceRegistry:
syncSessionsHandlers
setSyncSessionsHandlers:
setSyncSessionsQueue:
setSyncControllerQueue:
setPendingDeltaSyncChanges:
setSessionSyncChanges:
setSessionPendingConfirmationSyncChanges:
_isSyncingEnabled
_isMaster
_hostDeviceUnlocked
_batchDeltaChanges
_sessionShouldCancelWhenActive
_retryTestMaxRetry
_pendingSyncType
_messageController
_syServiceClass
_nrPairedDeviceRegisteryClass
_stateHandler
_pairedDeviceRegistry
_pairedDevice
_pairedDeviceStorageRoot
_syncService
_syncSessionsHandlers
_syncSessionsQueue
_syncControllerQueue
_pendingDeltaSyncChanges
_sessionSyncChanges
_sessionPendingConfirmationSyncChanges
_sessionPerMessageTimeoutSecs
_retryCount
_maxRetryCount
_retryBlock
_retryIntervalSecs
_eventRetryIntervalSecs
_eventRetryBlock
_syncTransaction
v8@?0
com.apple.pairedsync.tccd
WatchKitApplications
v32@?0@"NSString"8@"NSDictionary"16^B24
kTCCServiceAll
v32@?0@"NSString"8Q16^B24
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSDictionary"8
Unable send sync data: session cancelled.
Unable send sync data: CompanionSync session failed.
Unable send sync data: retry failure.
Unable send sync data: too many retries.
Unable send sync data: process may shutdown.
kTCCClientAll
-[TCCDMasterSyncController syncAccessUpdateForServiceIdentifier:clientIdentifier:clientType:accessStatus:updateType:]
-[TCCDMasterSyncController syncOverrideUpdateForServiceIdentifier:updateType:]
PairedSync beginSyncSession but the device is not paired!
PairedSync beginSyncSession there is an active SYService session!
Installed
Removed
v32@?0@"NSObject<SYChange>"8Q16^B24
v16@?0@"NSArray"8
Master Sync Status:
 _syncCoordinator: %@, PSYServiceSyncSession device name: %@
  perDeviceMasterIdentiferToSlaveIdentifier mapping:
    %@ -> %@
v32@?0@"NSString"8@"NSString"16^B24
  Have an self.syncCoordinator.activeSyncSession
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
psySyncCoordinatorClass
T#,&,V_psySyncCoordinatorClass
acxDeviceConnectionClass
T#,&,V_acxDeviceConnectionClass
syncCoordinator
T@"PSYSyncCoordinator",&,V_syncCoordinator
acxDeviceConnection
T@"ACXDeviceConnection",&,V_acxDeviceConnection
perDeviceSlaveIdentiferToWatchAppInfo
T@"NSMutableDictionary",&,V_perDeviceSlaveIdentiferToWatchAppInfo
perDeviceMasterIdentiferToSlaveIdentifier
T@"NSMutableDictionary",&,V_perDeviceMasterIdentiferToSlaveIdentifier
pendingPostPairingContinuation
T@?,C,V_pendingPostPairingContinuation
PSYSyncCoordinator
/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
ACXDeviceConnection
/System/Library/PrivateFrameworks/AppConduit.framework/AppConduit
ACXWatchKitVersion
ACXContainerAppBundleIdKey
ACXServerStatusKey
NRDevicePropertyName
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NSStringfromPSYSyncSessionType
NRWatchOSVersionForRemoteDevice
@"NSString"8@?0
target_token
client_type
client
bundle
path
Ti,R,V_client_type
T@"NSString",R,V_client
policy_id
T@"NSNumber",R,V_policy_id
is_wk2_proxy
TB,R,V_is_wk2_proxy
T@"NSString",R,V_path
T@"NSBundle",R,V_bundle
Ti,R,V_pid
plugin
T@"NSDictionary",R,V_plugin
service
function
tccd_sync_TCCAccessRequest
preflight_unknown
result
tccd_sync_do_update_from_RequestAccessAction
v16@?0^{sqlite3_stmt=}8
SELECT allowed FROM access WHERE service = ? AND client = ? AND client_type = ?
replacing
inserting new
Allowed
Denied
None
INSERT OR REPLACE INTO access VALUES (?, ?, ?, ?, ?, NULL, NULL)
tccd_slave_sync_update_from_OverrideAccessAction
Delete from table
SELECT service, client, client_type, allowed FROM access
SELECT service FROM access_overrides
tccd_master_sync_get_current_override_status
kTCCServiceMotion
tccd_slave_sync_delete_all_synced_state
DELETE FROM access_overrides WHERE service = ?
NSExtensionPointName
com.apple.watchkit
tccd_slave_sync_delete_all_synced_state_block_invoke
WKAppBundleIdentifier
v24@?0@"NSSet"8@"NSError"16
SELECT client, client_type FROM access
DELETE FROM access WHERE client = ? AND client_type = ?
DELETE FROM access_times WHERE client = ? AND client_type = ?
i8@?0
SELECT value FROM admin WHERE key = 'sync_version'
tccd_sync_get_version_block_invoke
INSERT OR REPLACE INTO admin VALUES ('sync_version', ?)
tccd_sync_set_version
com.apple.TCC
access
com.apple.tcc.db_queue
com.apple.tccd
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.tccd.gc
com.apple.distnoted.matching
Application Uninstalled
com.apple.notifyd.matching
com.apple.sockpuppet.applications.updated
com.apple.language.changed
v12@?0i8
/System/Library/PrivateFrameworks/TCC.framework
unrestricted-CheckAuditToken
com.apple.private.tcc.allow
SELECT NULL FROM access_overrides WHERE service = ?
com.apple.private.tcc.allow.overridable
restricted
com.apple.private.tcc.system
com.apple.tcc.delegated-services
sandboxOperationForDelegation
allowed
denied
do_not_cache
default-allow
SELECT allowed, prompt_count, csreq FROM access WHERE service = ? AND client = ? AND client_type = ?
preflight
INSERT OR REPLACE INTO access VALUES (?, ?, ?, 1, ?, ?, ?)
track-access-times
INSERT OR REPLACE INTO access_times VALUES (?, ?, ?, ?, ?)
com.apple.springboard
SBParentalControlsCapabilities
disable-alert
kTCCServiceAccessibility
%s%@
IPHONE_SIMULATOR_ROOT
REQUEST_ACCESS_SERVICE_%s
purpose-key
This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app's Info.plist must contain an %@ key with a string value explaining to the user how the app uses this data.
abort
problem_key
alert-info-string
REQUEST_ACCESS_INFO_SERVICE_%s
wkun
REQUEST_ACCESS_ALLOW
REQUEST_ACCESS_DENY
INSERT OR REPLACE INTO access VALUES (?, ?, ?, 0, ?, ?, ?)
do_TCCAccessRequest
kTCCServiceAddressBook
NSContactsUsageDescription
sandbox-extension
kTCCServiceCalendar
NSCalendarsUsageDescription
kTCCServiceReminders
NSRemindersUsageDescription
kTCCServiceTwitter
revocable
kTCCServiceFacebook
kTCCServiceSinaWeibo
kTCCServiceLiverpool
kTCCServiceUbiquity
kTCCServiceTencentWeibo
kTCCServiceShareKit
kTCCServicePhotos
NSPhotoLibraryUsageDescription
kTCCServicePhotosAdd
NSPhotoLibraryAddUsageDescription
secondary-purpose-key
minimum-sdk-version
kTCCServiceBluetoothPeripheral
NSBluetoothPeripheralUsageDescription
kTCCServiceMicrophone
NSMicrophoneUsageDescription
device-microphone
kTCCServiceCamera
NSCameraUsageDescription
device-camera
NSMotionUsageDescription
disallowed-on-platform
iphoneos-ephemeral-user
kTCCServiceKeyboardNetwork
kTCCServiceWillow
NSHomeKitUsageDescription
kTCCServiceMediaLibrary
NSAppleMusicUsageDescription
kTCCServiceSpeechRecognition
NSSpeechRecognitionUsageDescription
kTCCServiceMSO
kTCCServiceSiri
NSSiriUsageDescription
kTCCServiceCalls
NSVoIPUsageDescription
com.apple.private.tcc.manager
com.apple.tcc.
extension
UMUserManager
/System/Library/PrivateFrameworks/UserManagement.framework/UserManagement
truncated
SPDeviceConnection
/System/Library/Frameworks/WatchKit.framework/WatchKit
com.apple.tcc.access.changed
database error: %s (%d)
 aborting...
HOME
%s/%s
Library/TCC
%s/TCC.db
allocation failed
PRAGMA journal_mode=WAL;PRAGMA foreign_keys=ON;
BEGIN
CREATE TABLE IF NOT EXISTS admin (key TEXT PRIMARY KEY NOT NULL, value INTEGER NOT NULL);INSERT OR IGNORE INTO admin VALUES ('version', 9);CREATE TABLE IF NOT EXISTS policies (
INTEGER
NOT NULL PRIMARY KEY, 
bundle_id
TEXT
NOT NULL, 
uuid
TEXT
NOT NULL, 
display
TEXT
NOT NULL, 
UNIQUE (bundle_id, uuid));CREATE TABLE IF NOT EXISTS active_policy (
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
policy_id
INTEGER NOT NULL, 
PRIMARY KEY (client, client_type), 
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE);CREATE INDEX IF NOT EXISTS active_policy_id ON active_policy(policy_id);CREATE TABLE IF NOT EXISTS access (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
allowed
INTEGER
NOT NULL, 
prompt_count
INTEGER
NOT NULL, 
csreq
BLOB, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type),
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE);CREATE TABLE IF NOT EXISTS access_times (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
last_used_time
INTEGER
NOT NULL, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type), 
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE);CREATE TABLE IF NOT EXISTS access_overrides (
service
TEXT
NOT NULL PRIMARY KEY);
SELECT value FROM admin WHERE key = 'version'
DROP TABLE access; DROP TABLE access_times; DROP TABLE access_overrides;
ALTER TABLE access ADD COLUMN csreq BLOB
DELETE FROM access_times
DELETE FROM access WHERE service = 'kTCCServicePhotos' AND allowed = 0
CREATE TABLE IF NOT EXISTS NEW_access (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
allowed
INTEGER
NOT NULL, 
prompt_count
INTEGER
NOT NULL, 
csreq
BLOB, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type),
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE)
INSERT INTO NEW_access SELECT service, client, client_type, allowed, prompt_count, csreq, NULL FROM access
DROP TABLE access
ALTER TABLE NEW_access RENAME TO access
CREATE TABLE IF NOT EXISTS NEW_access_times (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
last_used_time
INTEGER
NOT NULL, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type), 
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE)
INSERT INTO NEW_access_times SELECT service, client, client_type, last_used_time, NULL FROM access_times
DROP TABLE access_times
ALTER TABLE NEW_access_times RENAME TO access_times
DELETE FROM access WHERE ( service = 'kTCCServicePhotos' or service = 'kTCCServicePhotosAdd' )
UPDATE admin SET value = 9 WHERE key = 'version'
COMMIT
Access to service %s changed.
INSERT OR IGNORE INTO access_overrides VALUES (?)
SELECT service, client, client_type FROM access
DELETE FROM access
SELECT service FROM access WHERE client = ? AND client_type = ?
SELECT client, client_type FROM access WHERE service = ?
DELETE FROM access WHERE service = ?
DELETE FROM access_times WHERE service = ?
SELECT NULL FROM access WHERE service = ? AND client = ? AND client_type = ?
DELETE FROM access WHERE service = ? AND client = ? AND client_type = ?
DELETE FROM access_times WHERE service = ? AND client = ? AND client_type = ?
VACUUM access; VACUUM access_times;
SELECT
id, uuid, display FROM
policies JOIN active_policy ON (policies.id = active_policy.policy_id) WHERE
active_policy.client_type = ? AND active_policy.client = ?
%@:%@
TCCAccessRequest
TCCAccessCopyInformation
TCCAccessCopyInformationForBundle
TCCAccessCopyBundleIdentifiersForService
TCCAccessCopyBundleIdentifiersDisabledForService
TCCAccessSetInternal
TCCAccessSetOverride
TCCAccessGetOverride
TCCAccessResetInternal
TCCAccessDeclarePolicy
TCCAccessSelectPolicyForExtensionWithIdentifier
TCCAccessResetPoliciesExcept
TCCTestInternal
handle_TCCAccessRequest
SELECT client, client_type, allowed, last_used_time FROM access NATURAL LEFT JOIN access_times WHERE service = ?
granted
last_used
clients
SELECT service, allowed, last_used_time FROM access NATURAL LEFT JOIN access_times WHERE client = ? AND client_type = ?
services
SELECT client FROM access WHERE service = ? AND client_type = ? AND allowed != 0
SELECT client FROM access WHERE service = ? AND client_type = ? AND allowed = 0
override
policy
display
INSERT OR REPLACE INTO policies (bundle_id, uuid, display) VALUES (?, ?, ?);
com.apple.private.tcc.policy-override
bundle_id
SELECT id FROM policies WHERE bundle_id = ? AND uuid = ?
INSERT OR REPLACE INTO active_policy VALUES (?, ?, ?)
exceptions
CREATE TEMPORARY TABLE _exceptions (uuid TEXT NOT NULL)
INSERT INTO _exceptions VALUES (?)
B24@?0Q8@"NSObject<OS_xpc_object>"16
DELETE FROM policies WHERE bundle_id = ? AND uuid NOT IN (SELECT uuid FROM _exceptions)
DROP TABLE IF EXISTS _exceptions
operation
TestDBAbort
kTCCBogusService
SyncFull
SyncStatus
SyncSet
SyncMemoryPressureCritical
SELECT DISTINCT client, client_type FROM access
TCCDSyncAccessActionServiceIdentifierKey
TCCDSyncAccessActionVersionNumberKey
TCCDSyncAccessActionChangeTypeKey
%@(%p): service: %@
{%@}
%@-%@
objectIdentifier
T@"NSString",R,N
sequencer
changeType
Tq,R,N
supportsSecureCoding
TB,R
versionNumber
Tq,V_versionNumber
serviceIdentifier
T@"NSString",R,V_serviceIdentifier
syncChangeType
Tq,V_syncChangeType
TCCDSyncAccessActionMasterClientIdentifierKey
TCCDSyncAccessActionSlaveClientIdentifierKey
TCCDSyncAccessActionClientTypeKey
%@, master: %@, slave: %@, clientType:%d
%@-%@-%@-%@
masterClientIdentifier
T@"NSString",C,V_masterClientIdentifier
slaveClientIdentifier
T@"NSString",C,V_slaveClientIdentifier
clientIdentifierForCurrentPlatform
clientType
Ti,R,V_clientType
+[TCCDSyncRequestAccessAction requestAccessActionFromIDSMessage:masterSyncController:]
TCCDSyncUpdateAccessActionStatusKey
<unknown>
error
reset
allow
deny
master_set_allow
master_set_deny
%@, updateAccessAction: %s
-[TCCDSyncUpdateAccessAction syncId]
%@-%@-%@
updateAccessActionStatus
TQ,V_updateAccessActionStatus
-[TCCDSyncSession performRequestAccessAction:]
v16@?0@"TCCDSyncUpdateAccessAction"8
v16@?0@"NSError"8
didSendMessage
TB,V_didSendMessage
sentMessageSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_sentMessageSemaphore
syncController
T@"TCCDSyncController",W,V_syncController
syncRequestAccessAction
T@"TCCDSyncRequestAccessAction",&,V_syncRequestAccessAction
TCCDMessageTypeKey
com.apple.private.alloy.tccd.msg
-[TCCDIdsMessageController init]
-[TCCDIdsMessageController _sendMessage:handler:]
Success
Failed
-[TCCDIdsMessageController service:account:incomingMessage:fromID:context:]
-[TCCDIdsMessageController service:account:incomingMessage:fromID:context:]_block_invoke
-[TCCDIdsMessageController service:account:identifier:didSendWithSuccess:error:]_block_invoke
idsService
T@"IDSService",&,V_idsService
messageIdsToHandlers
T@"NSMutableDictionary",&,V_messageIdsToHandlers
TCCDIdsMessageController
-[TCCDMessageController init]
-[TCCDMessageController setIncomingMessageType:handler:]
-[TCCDMessageController sendMessage:ofType:handler:]
messageTypesToHandlers
T@"NSMutableDictionary",&,V_messageTypesToHandlers
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
com.apple.tccd.TCCDSyncControllerErrorDomain
TCCDSyncMessageTypeSlaveAccessRequestForService
com.apple.private.alloy.tccd.sync
Nothing to sync
Completed Delta Sync
Completed Reset Sync
Session Cancelled
Session Failed
Retry Failure
Max Retry Count Reached
Shutdown
<Unknown>
TCCDSyncController
Error
Fault
Request
%@ (why: %@)
tccd Sync State
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
sync
TCCDSyncSessions
Library/TCC/tccd_sync_config.plist
retryInverval
eventRetryInverval
tccd sync
PendedSyncState
SyncType
SyncChanges
Reset
Delta
Addition
Update
Deletion
-[TCCDSyncController _syncSessionHandlerForUpdateAccessAction:]_block_invoke
-[TCCDSyncController _notifySyncSessionHandlers:forUpdateAccessAction:]
-[TCCDSyncController _updateDatabase:forUpdateAccessAction:]
-[TCCDSyncController _handleSyncObject:updateType:]
Master
Slave
ResetSync
DeltaSync
Sending
Receiving
com.apple.identityservices.error
SYErrorDomain
Testing maxRetry handling.
<none>
<Unknown TCCDSyncType>
Sync Status:
  syncing enabled: %s
  paired storage root %@
<not paired>
  proximity: %@
  pendingSync -- type: %s, number of pendingDeltaSyncChanges: %lu, batching: %s
  session -- currentSession: %@, sessionSyncChanges.count: %lu, sessionPendingConfirmationSyncChanges.count:  %lu, per-message timeout %llu secs.
<None>
  session -- ShouldCancelWhenActive: %s
  retry -- current count: %llu, max count: %llu, interval: %llu secs, retryBlock: %p
  transaction -- %s
Aquired
arg1
maxRetry
arg2
retryInterval
messageTimeout
inProximity
outProximity
testMaxRetry
isMaster
TB,V_isMaster
syServiceClass
T#,&,V_syServiceClass
nrPairedDeviceRegisteryClass
T#,&,V_nrPairedDeviceRegisteryClass
stateHandler
TQ,V_stateHandler
pairedDeviceRegistry
T@"NRPairedDeviceRegistry",&,V_pairedDeviceRegistry
pairedDevice
T@"NRDevice",&,V_pairedDevice
pairedDeviceStorageRoot
T@"NSString",&,V_pairedDeviceStorageRoot
syncService
T@"SYService",&,V_syncService
syncSessionsHandlers
T@"NSMapTable",&,V_syncSessionsHandlers
syncSessionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_syncSessionsQueue
syncControllerQueue
T@"NSObject<OS_dispatch_queue>",&,V_syncControllerQueue
hostDeviceUnlocked
TB,V_hostDeviceUnlocked
batchDeltaChanges
TB,V_batchDeltaChanges
pendingSyncType
TI,V_pendingSyncType
pendingDeltaSyncChanges
T@"NSMutableArray",&,V_pendingDeltaSyncChanges
sessionSyncChanges
T@"NSMutableArray",&,V_sessionSyncChanges
sessionPendingConfirmationSyncChanges
T@"NSMutableArray",&,V_sessionPendingConfirmationSyncChanges
sessionPerMessageTimeoutSecs
TQ,V_sessionPerMessageTimeoutSecs
sessionShouldCancelWhenActive
TB,V_sessionShouldCancelWhenActive
retryCount
TQ,V_retryCount
maxRetryCount
TQ,V_maxRetryCount
retryBlock
T@?,C,V_retryBlock
retryIntervalSecs
TQ,V_retryIntervalSecs
retryTestMaxRetry
TB,V_retryTestMaxRetry
eventRetryIntervalSecs
TQ,V_eventRetryIntervalSecs
eventRetryBlock
T@?,C,V_eventRetryBlock
syncTransaction
T@"NSObject<OS_os_transaction>",&,V_syncTransaction
isSyncingEnabled
TB,R,V_isSyncingEnabled
messageController
T@"TCCDMessageController",R,V_messageController
SYService
/System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
NRPairedDeviceRegistry
NRDevicePropertyLocalPairingDataStorePath
NRDevicePropertyPairingID
kSYDictionaryObjectSyncIDKey
Change
Removed WatchKit app file: %@
Failed to remove WatchKit app file: %{public}@; because: %{public}@
Computed: masterClientIdentifier: %@ -> slaveClientIdentifier: %@
Loaded %lu WatchKit App Info dicts from %@
Failed to unarchive WatchKit data in: %{public}@
No existing saved per-device WatchKitApp info at: %@
Writing WatchKitAppInfo to: %{public}@
Error writing WatchKitAppInfo to: %{public}@; error:%{public}@
Wrote WatchKitAppInfo to: %{public}@
Failed to create archive: %p for  %{public}@
fetched app %@: version %@, install State: %@
Known WatchKit application id: %@
New WatchKit application id: %@ -> master id: %@
Deleting our record of WatchKit application id: %@ -> master id: %@
Resetting all state for %@ for reunion sync
Have %lu new watchkit apps that have been installed
Have %lu access actions from the database.
Syncing newly installed WatchKit application with action: %@
Got %lu installed WatchKit applications
Got %lu currently installed WatchKit applications; results in %lu changes
Getting installed WatchKit applications...
Failed to fetch installed watch applications: %@
retrying fetch of installed WatchKit apps after delay.
Master _initializeSyncEngineAfterDeviceUnlockHook
Failed to allocate ACXDeviceConnection.
Master _initializeSyncEngineAfterDeviceUnlockHook: registering for message type: %@
Handling new pairing session to: %{public}@ for '%{public}@' Session Type.
Waiting on CompanionSync didPair callback.
Waiting on PSYServiceSyncSession to start.
Newly paired device OS version: 0x%x is too old; not syncing
Newly paired device OS version: 0x%x
_didUnPairDeviceHook: there is an active PSYServiceSyncSession syncSession; that's unexpected!
PSYServiceSyncSession syncDidComplete
Failing PSYServiceSyncSession: %{public}@
Master: Send-Sync Session did finish: %{public}@, error: %@
Issuing -[PSYServiceSyncSession syncDidComplete]
Handling a Access Request Message: %@ -> %@
Unable to make a requestAccessAction from %{public}@
masterClientIdentifier: %@ -> slaveClientIdentifier: %@
slaveClientIdentifier: %@ -> masterClientIdentifier: %@
%{public}s: Failed to get a slaveClientIdentifier for masterClientIdentifier: %{public}@.
%s: Syncing not enabled... dropping sync of: %@
PairedSync syncCoordinator:beginSyncSession: from coordinator with service name: "%@" and sync type: "%@" for device: "%@"
%{public}@
PairedSync syncCoordinator:beginSyncSession: but the host device is locked; wait until unlock
Did receive syncCoordinator:didInvalidateSyncSession: from coordinator with service name: "%@" for device: "%@"
Error fetching WatchApp info after update notification; application %{public}@ is %{public}s, error: %{public}@
Updating Watch app list because application %{public}@ is %{public}s
Skipping update Watch app application %{public}@ is %{public}s because it is not a WatchKit app
For updateInstallStateForApplication: %@; unhandled install state %ld
testResetSync
Failing testResetSync because isSyncingEnabled is NO
Refusing client without path (pid %d): (#%d) %{public}s
Refusing extension without containing app bundle (%{public}s)
Refusing client without bundle identifier (%{public}s)
%{public}s an invalid client type: %d
%s: incoming client: %@
%{public}s: found an unexpected preflight_unknown status in reply message; ignoring.
%s: Sending backstop syncAccessUpdate for: %@, %@
Handling sync change for Reset Access: %@
Failed: Reset Access: %@
Unable to process sync update from request action because the client identifier is nil: %{public}@
Handling sync update access action: %{public}s access value: %{public}s for (%{public}@, %{public}@): existing value: %{public}s
Forcing reset because existing access status conflicts with incomming status; resetting us and our peer.
%s: incomming access state matches local state.
Attempting to handle a TCCDSyncMasterSetAccessAction on the master: %{public}@
setting access value to %s due to TCCDSyncMasterSetAccessAction
%s: service: %@, override: %@
%{public}s: database access error for access_overrides: %d
%s: deleting %@ from access_overrides.
%{public}s: Discovery of plugins fails: %{public}@
%s: Found installed WatchKit App (with plugins): %@
%{public}s: failed to allocate NSString for client: %s
%s: current client: %@
%{public}s: unsupported CLIENT_TYPE_EXECUTABLE_PATH for client: %{public}s
%{public}s: unsupported client type %d for client: %{public}s
%s: deleting state for client: %@
%{public}s: database access error when getting sync_version: %d
Changing sync version from %d to %d
%{public}s: database access error when setting sync_version: %d
starting as: %s; UID: %d
service handler: %{public}s
client handler: %{public}s
Handling Application Uninstalled event; pruning database.
Notification event: WatchKit applications updated.
Handling SIGTERM...
Handling language change...
failed to find app for bundle ID "%{public}@"
found app for bundle ID "%@": %@
Refusing %{public}s for invalid service: %{public}s
Refusing %{public}s with oddly shaped audit token from PID[%d]
PID[%d] is checking access for target PID[%d]
Granting PID[%d] access to %s via entitlement 'com.apple.private.tcc.allow'
Restricted PID[%d] access to %{public}s via entitlement 'com.apple.private.tcc.allow.overridable'
Granting PID[%d] access to %{public}s via entitlement 'com.apple.private.tcc.allow.overridable'
Refusing %{public}s for service %{public}s from invalid client with pid %d
Refusing %{public}s to %{public}s for PID[%d] because we could not get the client string.
Restricted PID[%d] access to %{public}s
Granting PID[%d] access to %{public}s via entitlement 'com.apple.private.tcc.system'
Denying PID[%d] access to %{public}s because is_service_disallowed_on_this_platform() is true
Checking PID[%d] for delegated service: %s: operation: %@
delegated service: %s: sandbox_check(%d, %@, ...) fails: %d
PID[%d] for delegated service: %s: operation: %@ is %s
PID[%d] for delegated service: %s: operation: %@ is not sandboxed... ignoring com.apple.tcc.delegated-services entitlement
Query for current DB state returns error: %d
Handling access request: %s:%s, default_allow: %d, allowed: %d, prompt_count:%d, update_access: %d, preflight: %s
%{public}s is restricted by Parental Controls.
%{public}s is denied.
Service kTCCServiceAccessibility does not allow prompting; returning preflight_unknown
Service %{public}s does not allow prompting; returning denied.
Delaying prompt for pid %d
Unable to prompt for client without display name (%{public}s)
Prompting for access to %{public}s from %{public}s
Refusing %{public}s for service %{public}s and client %{public}s[%d] without %{public}s key
WK1 showUserNotification %ld for app: %@, extensionID: %@
WK2 showUserNotification %ld for display name: %@
%s: Sending potential syncAccessUpdate for: %@, %@
Refusing %{public}s from unprivileged client (pid %d)
Failed to allocate _CFBundleCreateUnique()  client %{public}@
Usage key:%s, client[%d](%s), usage string: '%@'
No usage string found (key:%s) for client[%d] in bundle:%s
Usage key:%s service sdk version: 0x%x;  client[%d](%s) sdk version: 0x%x
Secondary Usage key:%s service sdk version: 0x%x;  client[%d](%s) sdk version: 0x%x: usage string: '%@'
rejecting client with unknown executable path
failed to get text offset for %{public}s: (#%d) %{public}s
failed to open "%{public}s": (#%d): %{public}s
failed to read header from %{public}s: %{public}s;  (client.pid: %d, textoff: %llu, expected size: %lu, got: %zd)
spooky magic for %{public}s (%X)
can't allocate buffer for %{public}s: (#%d) %{public}s
failed to read commands from %{public}s: %{public}s
load command truncated for %{public}s
load command broken for %{public}s
version command truncated for %{public}s
Failed to post com.apple.tcc.access.changed notification (%u)
%{public}s%s
Failed to create %{public}s (%d)
Failed to open database: %{public}s
using database: %{public}s, version: %d
Upgrading database from version %d to %s
Downgrading database from version %d to %s
Failed to remove old database
Unable to terminate_with_reason() %{public}s[%d]: %d (%{public}s) for service %{public}s
Terminating %{public}s[%d] because access to the %{public}s service changed.
Unable to kill %{public}@ (%d)
Terminating plugin %{public}@ of %{public}@ because access to the %{public}@ service changed.
VACUUM after DELETE of (%@ : %@)
shutting down tccd...
...exiting when clean.
handling request from PID[%d](%d): %{public}s
Ignoring unknown request (%{public}s)
%s: incoming client: %d, for: %s
Missing service value for message: %{public}s
Allocation for serviceName failed for message: %{public}s
Handling internal test operation: %s
Generating bogus DB query in %u seconds...
... Generating bogus DB query
Unexpected execution of SQL statement step block when generating a database error.
Unsupported internal test operation: %s
Pruning entry for %s
%{public}s: malformed access update message: serviceID: %p, slaveClientID: %p, clientTypeNumber: %p
%{public}s: Could not find  master client ID for slave client ID: %{public}@
%{public}s: no slaveClientIdentifier for syncID for: %{public}@
%{public}s: Unexpected nil messageController
%{public}s: Attempt enque a RequestAccessAction while one is already inflight
An error occured during syncing of TCC privacy state from the companion device for '%{public}@' with companion application '%{public}@'.
 Check for error messages from tccd or the companion app on the companion device.
%{public}s: Allocation failure: _idsService: %p, _messageIdsToHandlers: %p
%s: IDS message send status: %s - %@
Incoming IDS message from %@: msg: %@
%{public}s: received message with no message type!
%{public}s: No handler defined for incoming message type: %@
IDS message didSendWithSuccess: %s: %@
%{public}s: No outgoing message handler for message id: %@
%{public}s: Allocation failure: _queue %p, _messageTypesToHandlers: %p
%{public}s:  nil message type!
%{public}s: received nil message type!
Platform does not support sending messages!
Beginning SyncEngine initialization.
Failed _initializeSyncEngineHook.
SyncEngine init:  Allocation failure!
SyncEngine init:  found a config file at %{public}@ but could not get a plist from it: %{public}@
SyncEngine init: Using config file values: maxRetryCount: %llu, retryIntervalSecs: %llu, sessionPerMessageTimeoutSecs: %llu, eventRetryIntervalSecs %llu
SyncEngine init: proceeding to _initializeSyncEngineAfterDeviceUnlock.
SyncEngine init after device unlock: isMaster: %s
Failed to allocate TCCDMessageController.
Failed to allocate SYSyncService.
_initializeSyncEngineAfterDeviceUnlockHook returns NO!
SyncEngine is initialized; waiting on a device pairing
Enabling syncing; isMaster: %s
failed to resume syncService: %{public}@
Resumed SYService
Disabling syncing
postPairingContinuation: requesting a ResetSync.
postPairingContinuation: requesting a DeltaSync.
Returning to a previous device: %@: %@
_didPairToDevice: got a nil device; failing.
did pair to current device.
_didPairToDevice: attempt to pair new device (%@) without unpairing the current device (%@).
_didPairToDevice: failed to mkdir(%{public}@): %d/%{public}s
_didPairToDevice: created: %@
_didPairToDevice: failed to stat(%{public}@): %d/%{public}s
did pair to new device: %@: %@
_didUnPairDevice: %@
_didUnPairDevice: there is a current SYService session; that's unexpected!
_aquire_transaction...
_release_transaction...
Requesting a ResetSync
Skipping pending delta sync change (%@) because we have a pending reset sync.
added pendingDeltaSyncChange: %@
Ending delta sync batching when we have a pending reset sync.
Ending batching of delta changes; requesting DeltaSync.
Ending batching of changes; nothing to do.
Failed to unarchive data in: %{public}@
Unarchived reset sync.
Delta sync archive is missing changes in: %{public}@
Unarchived %lu delta changes: %@
Sync archive is missing SyncType key: %{public}@, in %{public}@
Adding %lu pending sync changes to archive.
Adding Reset sync to archive.
Skipping the writing sync state... no paired-storage file.
Writing sync state to: %{public}@
Error writing sync state to: %{public}@; error:%{public}@
Wrote sync state to: %{public}@
Failed to allocate archive data to write sync state!
Removed sync state file: %@
Cancelling retry-block %p
_retrySyncReset: retryCount: %llu
Running retry-block(%p): %llu;
_retrySyncSession(%p): current count: %llu, retryCount: %llu
Will retry sync in %llu seconds with retry-block: %llu (%p)
Reached maximum retry count (%llu); %llu retry syncs failed; saving state to disk.
Failed to allocte the retry-block.
Retry sync for pending state: requesting '%{public}s' sync
Send-Sync Session did finish: %{public}@, error: %@
RetryMaxReached Not retrying sync. Paired device is in proxmitiy.
RetryMaxReached: Not retrying sync. Paired device is NOT in proxmitiy; waiting for it return.
Unknown SYChangeType: 0x%lx
Begin batching delta changes.
Begin willShutdown.
skipping MemoryPressureCritical...
handling MemoryPressureCritical...
EventRetry for MemoryPressureCritical...
EventRetry for MemoryPressureCritical: requesting a ResetSync.
EventRetry for MemoryPressureCritical: requesting a DeltaSync.
%s: comparing request:%@ to update:%@
%s: Running handler for session matching: %@
%s: %@, killClient: %s, handler count: %ld
%s: update access: %@ -> %@
%s: override access: %@ -> %@
%{public}s: syncStore %{public}@: Unexpected subclass: %{public}@
%{public}s: syncStore %{public}@: Unexpected object of class: %{public}@
Should not be invoking _beginResetSyncHook on the slave.
SYService %{public}s starting SYSession:%{public}@, type: %{public}s, direction: %{public}s
Rejecting new SYSession:%{public}@ when syncing is not enabled but is expected.
Rejecting new SYSession:%{public}@ when syncing is not enabled.
Rejecting new SYSession:%{public}@ ResetSync because we have existing retry state (block: %p); retrying
SYService starting Sending SYSession:%{public}@: expected self.sessionSyncChanges to be empty but it has these changes: %@
SYService starting SYSession:%{public}@: adding changes for reset sync: %@
Rejecting new SYSession:%{public}@ because a Sending ResetSync is requested on slave.
SYService starting SYSession:%{public}@: with %lu delta sync changes
SYService sessionEnded:%{public}@ with %@ timeout error
SYService sessionEnded:%{public}@ with SYErrorLostCollisionTest error.
SYService sessionEnded:%{public}@ with TCCDSyncErrorCodeSyncNeedToRetrySync error.
SYService sessionEnded:%{public}@ with error: %{public}@; %{public}@
SYSession:%{public}@ was cancelled by us.
SYSession:%{public}@ was unexpectedly cancelled. Will retry.
SYService sessionEnded:%{public}@ sync completed.
After receive-session completed: retrying pending state.
SYService sessionEnded:%{public}@: unexpected session state  %ld.
SYService enountered error: %{public}@; context: %@
SYService willSwitchFromPairingID:%{public}@ toParingID:%{public}@
SYService didSwitchFromPairingID:%{public}@ toParingID:%{public}@
Paired device is now in proxmity: requesting sync of pending state.
Paired device is now in proxmity: nothing to sync.
Paired device is now out of proxmity: nothing to do.
Will prefer session:%{public}@ over this session: %{public}@
Cancelling an active SYSession:%{public}@ in enqueueChanges
Cancelling new SYSession:%{public}@ because we are testing maxRetry handling.
SYSession:%{public}@; enqueuing %lu changes.
SYSession:%{public}@; unable to enqueue a change; have %lu left
SYSession:%{public}@; applying %lu changes
applying change: update access: %@ -> %@
applying change: override access: %@ -> %@
applying change: %{public}@: Unexpected subclass: %{public}@
applying change: %{public}@: Unexpected object of class: %{public}@
SYSession:%{public}@; ended with error: %{public}@
SYSession:%{public}@; successfullySynced: %lu changes
SYSession:%{public}@; resetDataStoreForSyncSession: called for master
SYSession:%{public}@; resetDataStoreForSyncSession: called for slave
dataFromChange: Failing to archive class %{public}@
changeFromData: Invalid class %{public}@
Generating Sync Status state dump.
Setting maxRetryCount to %llu
Setting retryIntervalSecs to %llu
Setting sessionPerMessageTimeoutSecs to %llu
Calling targetDeviceProximityChanged:YES
Calling targetDeviceProximityChanged:NO
Setting one-shot retryTestMaxRetry
testSyncSet unsupported target: %s
Testing handleMemoryPressureCritical
TCCDMasterSyncController
PSYSyncCoordinatorDelegate
NSObject
ACXDeviceConnectionDelegate
Client
TCCDSyncAccessAction
SYObject
SYChange
NSSecureCoding
NSCoding
TCCDSyncOverrideAccessAction
TCCDSyncClientAccessAction
TCCDSyncRequestAccessAction
TCCDSyncUpdateAccessAction
TCCDSyncSession
TCCDIdsMessageController
IDSServiceDelegate
TCCDMessageController
TCCDSyncController
SYServiceDelegate
SYSessionDelegate
SYChangeSerializer
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v24@0:8@16
v16@0:8
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v32@0:8@16q24
v40@0:8@16d24q32
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16d24q32
@28@0:8@16I24
v36@0:8@16@?24I32
v28@0:8@?16I24
v24@0:8@?16
v40@0:8@16@24q32
v28@0:8I16@20
@24@0:8@16
v52@0:8@16@24i32Q36Q44
v32@0:8@16Q24
v24@0:8#16
@?16@0:8
@"PSYSyncCoordinator"
@"ACXDeviceConnection"
@"NSMutableDictionary"
@20@0:8i16
@28@0:8@16B24
i16@0:8
@"NSString"
@"NSNumber"
@"NSBundle"
@"NSDictionary"
q16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v28@0:8Q16B24
v24@0:8q16
@44@0:8@16@24@32i40
@32@0:8@16@24
v24@0:8Q16
Q24@0:8@16
v20@0:8B16
@"TCCDSyncController"
@"TCCDSyncRequestAccessAction"
@"NSObject<OS_dispatch_semaphore>"
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v32@0:8@16@?24
@"IDSService"
@"NSObject<OS_dispatch_queue>"
B40@0:8@16@24^@32
v40@0:8@16@24@32
v48@0:8@16@24@32@?40
@40@0:8@16@24@32
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
q40@0:8@16@?24^@32
B32@0:8@16^@24
q40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@32@0:8@16^{os_state_hints_s=I*II}24
v60@0:8@16@24@32i40Q44Q52
@24@0:8q16
Q24@0:8q16
q24@0:8Q16
v32@0:8Q16@24
r*20@0:8I16
I16@0:8
v20@0:8I16
@"TCCDMessageController"
@"NRPairedDeviceRegistry"
@"NRDevice"
@"SYService"
@"NSMapTable"
@"NSMutableArray"
@"NSObject<OS_os_transaction>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.tccd.sync</string>
<string>com.apple.private.alloy.tccd.msg</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.tccd.sync</string>
<string>com.apple.private.alloy.tccd.msg</string>
</array>
<key>com.apple.private.xpc.domain-extension.proxy</key>
<true/>
</dict>
</plist>
