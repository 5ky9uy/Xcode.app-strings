init
alloc
initWithPath:options:
prepareForExtraction:
setExtractorDelegate:
copy
supplyBytes:withCompletionBlock:
resumptionOffset
_diskUsageForPath:
finishStreamWithCompletionBlock:
suspend
suspendStreamWithCompletionBlock:
removeItemAtPath:error:
setWithCapacity:
arrayWithCapacity:
addObject:
count
objectAtIndex:
removeObjectAtIndex:
fileSystemRepresentation
_stringWithFileSystemRepresentation:length:
stringByAppendingPathComponent:
numberWithUnsignedLongLong:
containsObject:
defaultManager
stringWithFileSystemRepresentation:length:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
setExtractionProgress:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
consumeData:error:
diskUsage
finish:
reset
truncate
_stringWithFileSystemRepresentation:
.cxx_destruct
hasConsumedData
percentComplete
_extractor
_hasConsumedData
_options
_path
_percentComplete
_resumptionOffset
code
domain
isEqualToString:
assetIdentifier
permLink
automaticType
bundleIdentifier
kind
downloadIdentifier
transferProgressFraction
artistName
title
subtitle
genre
thumbnailImageURL
isLocalCacheServer
isRestore
isSample
isPurchase
purchaseDate
persistentIdentifier
storeAccountIdentifier
_overallProgress
maxValue
setCurrentValue:
setTransferProgress:
allocWithZone:
setAutomaticType:
copyWithZone:
setBundleIdentifier:
setDownloadIdentifier:
setKind:
setAssetIdentifier:
overallProgress
setOverallProgress:
requiresDownloadHandler
setRequiresDownloadHandler:
downloadPhase
setDownloadPhase:
transferBytesExpected
setTransferBytesExpected:
transferBytesWritten
setTransferBytesWritten:
setTransferProgressFraction:
setArtistName:
setTitle:
setSubtitle:
setGenre:
setThumbnailImageURL:
setMaxValue:
initWithPrepareDownloadResponse:
setFinishProgress:
setTransferProgressWithBytesWritten:totalBytesExpected:
setPermLink:
setIsLocalCacheServer:
transferResumptionOffset
setTransferResumptionOffset:
canPause
_requiresDownloadHandler
_isLocalCacheServer
_isRestore
_canPause
_isSample
_isPurchase
_downloadIdentifier
_assetIdentifier
_permLink
_automaticType
_bundleIdentifier
_kind
_transferBytesExpected
_transferBytesWritten
_transferProgressFraction
_transferResumptionOffset
_downloadPhase
_artistName
_title
_subtitle
_genre
_thumbnailImageURL
_purchaseDate
_persistentIdentifier
_storeAccountIdentifier
initWithDatabaseManager:
initWithDatabaseManager:downloadPolicyManager:transactionCoordinator:installManager:
initWithDatabaseManager:downloadPolicyManager:transactionCoordinator:
setDelegate:
installProgressDelegate
setProgressDelegate:
defaultStore
activeAccount
uniqueIdentifier
defaultCenter
_storeChanged:
addObserver:selector:name:object:
standardUserDefaults
numberWithBool:
dictionaryWithObjects:forKeys:count:
registerDefaults:
removeObserver:
dealloc
downloadManager
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
installManager
purchaseManager
start
checkDownloadsWithCompletion:
purgeStaleDownloadsWithCompletion:
willStartTransactionWithIdentifier:
didFinishTransactionWithIdenfifier:
restartInterruptedInstalls:
cleanupOrphanedScratchDirectoriesWithCompletion:
databaseManager
downloadID
enumerateObjectsUsingBlock:
downloadsDirectory
path
contentsOfDirectoryAtPath:error:
cleanupDownloadScratchDirectoryForDownloadID:
fetchDownloadListWithCompletion:
fetchDownloadFromDownloadID:withCompletion:
requestDownloadWithParameters:completion:
requestDownloadWithMetadata:isRestore:completion:
countByEnumeratingWithState:objects:count:
pauseDownloadWithID:withCompletion:
resumeDownloadWithID:withCompletion:
cancelDownloadWithID:withCompletion:
_cancelAllActiveDownloads
purchaseWithBuyParameters:storeID:completion:
downloadWithPermlink:title:completion:
setBool:forKey:
boolForKey:
removeObjectForKey:
objectForKeyedSubscript:
cStringUsingEncoding:
initWithTransactionName:
setObject:forKeyedSubscript:
state
isEqualToNumber:
purchaseManager:requestDownloadWithParameters:completion:
fetchDownloadListWithReply:
fetchDownloadFromDownloadID:withReply:
pauseDownloadWithID:withReply:
resumeDownloadWithID:withReply:
cancelDownloadWithID:withReply:
cancelAllActiveDownloadsWithReply:
purchaseWithBuyParameters:storeID:reply:
downloadWithPermlink:title:reply:
requestDownloadWithParameters:reply:
requestDownloadWithMetadata:isRestore:reply:
requestDownloadsWithMetadata:areRestore:reply:
setValueSimulateCrashAtInstallStart:withReply:
setValueSimulateCrashAtInstallDuringDecrypt:withReply:
setValueSimulateCrashAtInstallDuringUnzip:withReply:
setValueSimulateCrashAtInstallDuringFinish:withReply:
getCrashSimulationOverrideValuesWithReply:
resetAllCrashSimulationOverridesWithReply:
setValueSimulateDeviceOutOfSpace:withReply:
getValueSimulateDeviceOutOfSpaceWithReply:
performPreListenerStartupWithCompletion:
startPendingOperations
setDownloadManager:
setInstallManager:
setDatabaseManager:
setPurchaseManager:
downloadPolicyManager
setDownloadPolicyManager:
transactionsMap
setTransactionsMap:
currentAccountNumber
setCurrentAccountNumber:
_transactionsUpdateLock
_downloadManager
_installManager
_databaseManager
_purchaseManager
_downloadPolicyManager
_transactionsMap
_currentAccountNumber
initWithData:
parse
appendString:
initWithBase64EncodedString:options:
parserDidStartDocument:
parserDidEndDocument:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundElementDeclarationWithName:model:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didStartMappingPrefix:toURI:
parser:didEndMappingPrefix:
parser:foundCharacters:
parser:foundIgnorableWhitespace:
parser:foundProcessingInstructionWithTarget:data:
parser:foundComment:
parser:foundCDATA:
parser:resolveExternalEntityName:systemID:
parser:parseErrorOccurred:
parser:validationErrorOccurred:
initWithXMLData:
sinfData
buffer
setBuffer:
isSinfElement
setIsSinfElement:
_isSinfElement
_sinfData
_buffer
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
initWithManagedObjectModel:
initWithConcurrencyType:
setPersistentStoreCoordinator:
sharedContainerURL
fileURLWithPath:
URLByAppendingPathComponent:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_setupPersistentStore:
metadataForPersistentStoreOfType:URL:options:error:
isConfiguration:compatibleWithStoreMetadata:
_modelChanged
addPersistentStoreWithType:configuration:URL:options:error:
removeItemAtURL:error:
persistentStores
removePersistentStore:error:
fetchRequestWithEntityName:
numberWithInteger:
predicateWithFormat:
setPredicate:
executeFetchRequest:error:
mq_newInMemoryDownloadFromDownloadInfo:
bldm_bookLibraryDatabaseErrorInFunction:
performBlock:
startTime
sortDescriptorWithKey:ascending:
arrayWithObjects:count:
setSortDescriptors:
array
integerValue
date
lastStateChangeTime
timeIntervalSinceDate:
deleteObject:
policyID
save:
setState:
setLastStateChangeTime:
_fetchDownloadInfoEntityWithID:block:
saveDownloadStateWithId:state:completion:
setSize:
setAssetPath:
batchUpdateRequestWithEntityName:
setPropertiesToUpdate:
setResultType:
executeRequest:error:
_fetchDownloadsWithPredicate:block:
policyData
setPolicyData:
insertNewObjectForEntityForName:inManagedObjectContext:
setPolicyID:
_fetchDownloadPolicyInfoEntityWithID:block:
_deleteDownloadPolicyWithID:save:completion:
mq_newDownloadPolicyFromDownloadPolicyInfo:
_fetchDownloadPoliciesWithPredicate:block:
length
storeIDFromBuyParameters:
setStartTime:
UUID
UUIDString
setDownloadID:
setBuyParameters:
setClientIdentifier:
setStoreIdentifier:
absoluteString
setPermlink:
firstObject
objectForKey:
setUrl:
componentsJoinedByString:
setMd5HashStrings:
setHashType:
setNumberOfBytesToHash:
numberOfBytesToHash
setFileExtension:
mq_writeSinf:downloadID:
setEpubRightsPath:
setDpInfo:
URLWithString:
mq_writeArtworkWithURL:downloadID:
setArtworkPath:
setPublicationVersion:
setIsAutomaticDownload:
setIsRestore:
setDownloadKey:
setIsZipStreamable:
setAccountIdentifier:
createDownload
initWithClientIdentifier:downloadMetadata:
writePlistWithDownloadID:error:
writeSinfForDownloadID:epubRightsData:error:
writeArtworkDownloadID:artworkURL:error:
fetchListOfAllDownloadCandidatesWithCompletion:
fetchListOfPendingDownloadsSortedByStartTime:
purgeAllStaleDownloadsWithCompletion:
syncSaveDownloadStateWithId:state:
saveDownloadSizeWithId:size:completion:
saveIsLocalCacheServerWithId:isLocal:completion:
saveDownloadPathWithId:path:completion:
updateDownloadWithID:updateBlock:completion:
updateAllInterruptedDownloadsToTheirProperStatesWithCompletion:
fetchDownloadListWithPredicate:completion:
deleteDownloadWithID:completion:
saveOrUpdateDownloadPolicy:completion:
deleteDownloadPolicyWithID:completion:
fetchDownloadPolicyWithID:withCompletion:
fetchListOfAllDownloadPoliciesWithCompletion:
addDownloadWithBuyParameters:storeID:clientIdentifier:completion:
addDownloadWithPermlink:clientIdentifier:completion:
mq_writeMetadata:clientIdentifier:downloadID:
persistentStoreURL
setPsc:
setMoc:
setMom:
_persistentStoreURL
_psc
_moc
_mom
stringWithFormat:
handleFailureWithLocation:file:lineNumber:description:arguments:
initWithFormat:arguments:
performBlockIgnoringAssertions:
plistPath
assetPath
boolValue
storeIdentifier
purchasedBookManifest
_manifestEntryForInstallInfo:inManifest:
syncedBookManifest
lastPathComponent
setDestinationFilename:
setFullRestoreFilePath:
destinationFilename
setInstallInfo:
manifestEntriesWithProperty:equalToNumber:limitCount:
manifestEntriesWithProperty:equalToValue:limitCount:
installInfo
artworkPath
_isMultiUser
synchronize
sharedDownload
sharedPurchasedBookManifest
permlink
isStoreDownload
storePublicationVersion
bookPathForAdamID:withPublicationVersion:
setBookPath:
bookPathPermalink:
bookPath
_bookManifest
manifestPath
stringByDeletingLastPathComponent
setDrmPath:
setShouldSkipAssetInstallation:
sharedRepositoryPath
shouldSkipAssetInstallation
initWithInstallInfo:
success
setSuccess:
error
setError:
postNotificationName:object:userInfo:
drmPath
_installMediaAsset:assetInstalledPath:fileName:drmPath:error:
fileExistsAtPath:isDirectory:
_installITunesArtwork:isDirectory:
_installITunesMetadataPlist:isDirectory:
_installEpubRights:
_addPurchaseManifestItem:
setInstalledAssetPath:
stringByDeletingPathExtension
stringByAppendingPathExtension:
moveItemAtPath:toPath:error:
_moveFile:toPath:installBehavior:error:
fileAttributes
setAttributes:ofItemAtPath:error:
epubRightsPath
pathExtension
_newManifestEntry:withFileName:
manifestEntry:withFileName:
removeManifestEntryWithStoreItemID:
removeManifestEntryWithDownloadPermalink:
_removeDuplicateEntry:
_newManifestEntry:
addManifestEntry:
synchronizeData
_existingManifestEntry
setObject:forKey:
libraryItemIdentifier
downloadedAssetPath
fullRestoreFilePath
purchasesRepositoryPath
hasPrefix:
booksRepositoryPath
initWithSoucePath:destinationPath:fileAttributes:fileType:installInfo:
_unzipAsset:unzippedPath:error:
initWithInfo:
main
installedAssetPath
_success
_shouldSkipAssetInstallation
_error
_installedAssetPath
_installInfo
_bookPath
_drmPath
initWithDictionary:
dataForSinfDataKey:
firstDataForSinfDataKey:
_sinfsArrayWithDataKey:
identifier
sinfs
initWithSINFs:
initWithSinfArray:
isDRMFree
pinfsArray
sinfForIdentifier:
sinfsArray
setSinfs:
_sinfs
intValue
info
setInfo:
_info
initWithDPInfo:
_decryptWithSession:error:
fileHandleForUpdatingAtPath:
_initializeProgressWithFileHandle:
readDataOfLength:
decryptBytes:error:
offsetInFile
seekToFileOffset:
writeData:
_updateProgressWithByteCount:
synchronizeFile
name
reason
closeFile
fileDescriptor
setUnits:
resetSnapshots
snapshot
progressDelegate
operation:updatedProgress:forInstall:
initWithPath:dpInfo:installInfo:
fairplayDecryptSession
setFairplayDecryptSession:
dpInfo
lastSnapshotTime
setLastSnapshotTime:
setPath:
progress
setProgress:
_fairplayDecryptSession
_dpInfo
_lastSnapshotTime
_progress
_itunesMetadataDictionaryWithMetadata:clientIdentifier:
setPlist:
downloadDirectoryForDownloadID:
URLByAppendingPathExtension:
plist
writeBinaryPropertyList:toPath:error:
valueForMetadataKey:
mutableCopy
dictionary
copyValueForProperty:error:
accountName
accountWithUniqueIdentifier:
copyLockdownRepresentation
epubRightsData
epubRightsInfoWithEpubRightsData:
downloaderAccountIdentifierWithSinfsArray:epubRightsInfo:
familyAccountIdentifierWithSinfsArray:epubRightsInfo:
purchaserAccountIdentifierWithSinfsArray:epubRightsInfo:
copyValueForField:error:
_plist
componentsSeparatedByString:
objectAtIndexedSubscript:
stringByRemovingPercentEncoding
buyParametersValueForKey:fromBuyParams:
_urlOperationWithURL:localFileURL:
passThroughErrors
setCanSendGUIDParameter:
setUrlKnownToBeTrusted:
initWithURL:
setAllowedRetryCount:
setRequiresExtendedValidationCertificates:
setITunesStoreRequest:
setURLBagType:
setRequestProperties:
setLocalFilePath:
setDataProvider:
initWithFormat:
setIdentifier:
_decryptSession
_identifier
cachedPolicy
setCachedPolicy:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClass:forKey:
copyBackgroundTaskAgentJobs
downloadPolicy
_policyID
_policyData
_cachedPolicy
dq_initializePolicy
dispatchQueue
policies
data
initForWritingWithMutableData:
encodeObject:forKey:
finishEncoding
dq_addPolicy:
sharedInstance
networkType
downloadSizeLimitForPolicyWithID:networkType:
_sizeLimitForPolicy:networkType:
initWithLongLong:
cellularDataStates
isCellularAllowed
userDefaultStates
currentBoolValue
downloadSizeLimit
networkTypes
initWithInteger:
_isPolicyRuleNetworkTypeAllowed:networkType:
_isPolicyRuleCellularDataAllowed:networkType:
policyRules
_isPolicyRuleSatisfied:forPolicy:networkType:
downloadKind
URLBagType
contextWithBagType:
sharedCache
URLBagForContext:
networkConstraintsForDownloadKind:
sizeLimitForNetworkType:
addDownloadPolicy:withPolicyID:
downloadPolicyForID:
downloadSizeLimitForPolicyWithID:
overrideDownloadSizeLimitForDownloadIdentifier:
removeOverrideDownloadSizeLimitForDownloadIdentifier:
setOverrideDownloadSizeLimit:forDownloadIdentifier:
setDispatchQueue:
setPolicies:
sizeLimitOverrides
setSizeLimitOverrides:
_dispatchQueue
_policies
_sizeLimitOverrides
initWithPolicyIdentifiers:
changesetType
setChangesetType:
downloadPropertiesForStoppedDownloads
setDownloadPropertiesForStoppedDownloads:
setNetworkType:
policyIdentifiers
setPolicyIdentifiers:
_changesetType
_downloadProperties
_networkType
_policyIDs
daemon
mainRunLoop
setAdjustsMaxConcurrentOperationCount:
setMaxConcurrentOperationCount:
setName:
initWithQueue:
initWithKeyOptions:valueOptions:capacity:
dq_pumpDownloadsWithCompletion:
reconnectTimer
setReconnectTimer:
dq_prepareDownloadsForDownloads:filtersExistingTasks:completion:
dq_setSessionTaskPriorityToHighForDownloadID:
downloadPipelineQueue
markDownloadAsHighPriorityWithDownloadID:
transactionCoordinator
pumpDownloadsWithCompletion:
orderedSet
taskStates
taskIdentifier
bl_cancelWithReason:error:
preparationOperationQueue
operations
cancel
preparationDownloadIDs
minusOrderedSet:
cancelInstallWithDownloadID:
activeTaskStates
objectEnumerator
nextObject
initWithDownload:
dq_getTaskStateFromDownloadID:
dirtyTaskStates
currentValue
dq_startProgressTimer
removeObject:
bl_dataConsumer
countOfBytesReceived
overrideProgress
countOfBytesExpectedToReceive
statusCode
allHeaderFields
bl_cancelReason
dq_processDownloadFailureWithTaskState:task:cancelReason:
orderedSetWithObjects:
restartDownloadsWithIdentifiers:completion:
dq_processCompletedDownloadWithTaskState:postProgress:
dq_setDownloadState:forDownloadIdentifier:completion:
dq_clearIsLocalServerCacheForDownloadID:completion:
bl_cancelError
dq_scheduleReconnect
dq_logDownloadEvent:forTaskWithState:
bl_setDataConsumer:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
initWithAuthenticationChallenge:
initWithAuthenticationChallege:
initWithDialog:
selectedButtonIndex
textFieldValues
initWithUser:password:persistence:
setOutputBlock:
authenticationChallengeQueue
addOperation:
setValue:forHTTPHeaderField:
valueForHTTPHeaderField:
allValues
progressTimer
setProgressTimer:
dq_commitProgress
numberWithLongLong:
estimatedTimeRemaining
numberWithDouble:
removeDownloadWithDownloadID:
inFlightDiscretionaryDownloadIDs
inFlightNondiscretionaryDownloadIDs
removeAllObjects
dq_cancelProgressTimer
setPriority:
availableSampleDownloads
availableDiscretionaryDownloads
availableNondiscretionaryDownloads
inFlightSampleDownloadIDs
downloadIsHighPriorityWithDownloadID:
addObjectsFromArray:
minusSet:
alreadyHaveSampleDownloadWithDownloadID:
addDownloadWithDownloadID:discretionary:sample:
alreadyHaveDiscretionaryDownloadWithDownloadID:
alreadyHaveNondiscretionaryDownloadWithDownloadID:
markDownloadAsStandardPriorityWithDownloadID:
_addDownloads:completion:
response
result
URLSessionIdentifier
urlSessions
sessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
sessionTaskWithSession:
isPerDeviceVPP
downloadRestoreState
backgroundOperations
setShouldRunWithBackgroundPriority:
backgroundOperationQueue
_priority
resume
isCancelled
initWithBLDownloadPipeline:response:completion:
sampleDownloadOperationQueue
isDiscretionary
discretionaryDownloadOperationQueue
nonDiscretionaryDownloadOperationQueue
enumerateOperationsWithDownloads:downloadPolicyManager:usingBlock:
reconnectWithURLSessionTasks
dq_saveState:forDownloadID:completion:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
installManager:willRestartInstallForDownload:
installManager:didStartInstallWithOperation:forDownloadID:
installManager:updatedProgress:forInstallOperation:
installManager:didFinishInstallForOperation:
prioritizeDownloadWithIdentifier:completion:
startupDownloadsWithCompletion:
stopDownloadsWithIdentifiers:reason:completion:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
doq_performDownloadOperation:completion:
setTransactionCoordinator:
setBackgroundOperationQueue:
setDirtyTaskStates:
setPreparationDownloadIDs:
setPreparationOperationQueue:
processingOperationQueue
setProcessingOperationQueue:
setTaskStates:
setActiveTaskStates:
setUrlSessions:
setSampleDownloadOperationQueue:
setDiscretionaryDownloadOperationQueue:
setNonDiscretionaryDownloadOperationQueue:
_authenticationChallengeQueue
_transactionCoordinator
_backgroundOperationQueue
_dirtyTaskStates
_preparationDownloadIDs
_preparationOperationQueue
_processingOperationQueue
_reconnectTimer
_progressTimer
_taskStates
_activeTaskStates
_urlSessions
_sampleDownloadOperationQueue
_discretionaryDownloadOperationQueue
_nonDiscretionaryDownloadOperationQueue
_downloadPipelineQueue
setResponse:
pipeline
setPipeline:
downloadStartCompletionBlock
setDownloadStartCompletionBlock:
_response
_pipeline
_downloadStartCompletionBlock
initWithPurgeableProvider:
_purgeable:urgency:
_purge:urgency:
_cancelPurge
purgeableProvider
purgeableForVolume:urgency:
bookLibrary
_purgeVolume:urgency:requested:
numberWithInt:
postNotificationName:object:
_periodicPurgeVolume:urgency:requested:
registerCacheDeleteInfoCallbacks:
_periodic:urgency:
setBookLibrary:
setPurgeableProvider:
_bookLibrary
_purgeableProvider
_initWithDownload:policy:
download
lock
unlock
setResult:
dq_action_requestCachedURL
publicationVersion
longLongValue
_shouldCancelDownload
isFileURL
_loadSizeIfNecessaryForAsset:
setMediaAssetSize:
setDestinationPath:
_newURLRequestWithAsset:
_newDataConsumerWithAsset:destinationPath:
_isDTServiceHubIssuedRequest:
setOverrideProgress:
setDataConsumer:
setURLRequest:
dataConsumer
_shouldFailForDiskSpaceWithAsset:dataConsumer:
_clientIdentifier
_requiresPoweredPluggedIn
setRequiresPowerPluggedIn:
_transferProgressFractionWithAsset:
isAutomaticDownload
setDiscretionary:
_URLSessionTaskPriorityForDownload:
setTaskPriority:
outputBlock
host
fileSize
policy
loadedURLBagWithContext:returningError:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
substringFromIndex:
expectedContentLength
initWithString:
initWithProperties:
downloadKey
_newDownloadKeyCookieWithValue:URL:
setCachePolicy:
setTimeoutInterval:
setHTTPMethod:
_downloadKeyCookieWithAsset:
value
_sendsStoreHeadersForAsset
setNeedsURLBag:
HTTPMethod
runSubOperation:returningError:
_assetSizeFromURLResponse:
setFileSize:
md5HashStrings
_usesStreamingZipDataConsumerForAsset:
initWithPath:MD5Hashes:numberOfBytesToHash:
hashType
optionsWithHashes:type:size:
_allowsCellularAccessForAsset:
setAllowsCellularAccess:
accountID
addITunesStoreHeadersToRequest:withAccountIdentifier:
currentDevice
userAgent
sharedStorage
cookieHeadersForURL:userIdentifier:
enumerateKeysAndObjectsUsingBlock:
sharedHTTPCookieStorage
setCookie:
_saveCookies
powerStates
sharedConnection
effectiveBoolValueForSetting:
requestFreeSpace:atPath:withOptions:completionBlock:
_URLSessionTaskPriorityForDownloadPriority:
isZipStreamable
_assetNeedsDecryption:
operation:failedWithError:
operation:updatedProgress:
operationFinished:
operationWillStart:
operation:didDiscoverContentLength:
operation:didReceiveResponse:
operation:finishedWithOutput:
operation:needNewBodyStream:
operation:processData:error:
operation:willSendRequest:
operation:sanitizedStringForString:
operation:dispositionForAuthenticationChallenge:
operation:credentialForAuthenticationChallenge:
URLCache
URLCacheID
metricsLoadURLSessionDuration
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
setPolicy:
setDownload:
_outputBlock
_policy
_download
accountIdentifier
backgroundSessionConfigurationWithIdentifier:
allowsCellularAccess
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setRequestCachePolicy:
setSessionSendsLaunchEvents:
set_allowsRetryForBackgroundDataTasks:
set_requiresPowerPluggedIn:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
dataTaskWithRequest:
set_priority:
stringWithString:
setBackgroundOperations:
mediaAssetSize
setDownloadRestoreState:
setIsPerDeviceVPP:
setCanPause:
setIsSample:
setIsPurchase:
setPurchaseDate:
setPersistentIdentifier:
setStoreAccountIdentifier:
clientIdentifier
clientSecondaryIdentifier
setClientSecondaryIdentifier:
destinationPath
requiresPowerPluggedIn
taskPriority
URLRequest
_isPerDeviceVPP
_discretionary
_requiresPowerPluggedIn
_result
_backgroundOperations
_mediaAssetSize
_downloadRestoreState
_clientSecondaryIdentifier
_dataConsumer
_destinationPath
_taskPriority
_URLRequest
managedObjectContext
buyParameters
transactionIdentifier
setTransactionIdentifier:
cancelDownloadURL
setCancelDownloadURL:
unsignedIntegerValue
size
setAccountID:
setTargetDownloadDirectory:
performBlockAndWait:
setQualityOfService:
entityForName:inManagedObjectContext:
setEntity:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
performFetch:
localizedDescription
userInfo
fetchedObjects
dq_dequeueOperationForDownloadID:downloadState:
pendingInterruptedInstalls
mq_installDownloadInfo:
setPendingInterruptedInstalls:
operationsByDownloadID
fileExtension
setPlistPath:
dq_enqueueInstall:
dq_completeOperationForDownloadID:
setCompletionBlock:
dq_failOperationForDownloadID:
_assetAlreadyStartedTheInstallationStage:
dq_notifyServerOfDownloadCancelledForInstallOperation:completion:
dq_notifyServerOfDownloadCompleteForInstallOperation:completion:
setUseUserSpecificURLBag:
initWithAccountIdentifier:
setAuthenticationContext:
setURLBagKey:
stringValue
setValue:forRequestParameter:
setURL:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
setFrc:
queue
setQueue:
setOperationsByDownloadID:
_progressDelegate
_frc
_queue
_operationsByDownloadID
_pendingInterruptedInstalls
errorWithDomain:code:userInfo:
dictionaryWithObjectsAndKeys:
addEntriesFromDictionary:
setDownloadKinds:
setPrefetchedDownloadProperties:
setPrefetchedDownloadExternalProperties:
setDownloadingPersistentIdentifiers:
initWithDownloadManagerOptions:
setDownloadQueue:
downloadQueue
addObserver:
_storageUseChangedNotification:
dq_updateAvailableStorage
downloads
valueForProperty:
downloadPhaseIdentifier
downloadingPersistentIdentifiers
purgeableLowPriority
purgeableMediumPriority
purgeableHighPriority
purgeableSpecialCasePriority
setPurgeableValueChanged:
_purgeableAmountForVolume:urgency:
setPurgeableLowPriority:
setPurgeableMediumPriority:
setPurgeableHighPriority:
setPurgeableSpecialCasePriority:
purgeableValueChanged
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
updateAvailableStorage
_purgeableValueChanged
_downloadQueue
_downloadingPersistentIdentifiers
_purgeableLowPriority
_purgeableMediumPriority
_purgeableHighPriority
_purgeableSpecialCasePriority
initWithUnsignedLongLong:
_isRecognizedProperty:
_copyValueForSINF:property:error:
scannerWithString:
scanHexLongLong:
setNumberStyle:
numberFromString:
numberFromHexDigits
numberFromDecimalDigits
libraryPlistWithKind:
initWithManifestPath:
valueForKey:
addManifestEntries:
_manifest
_stringFromObject:
_entries
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
unloadPurchaseManifest
_invalidateAfterExternalChange
manifest
setManifest:
setManifestPath:
_manifestPath
_decryptAsset:
endTransaction
osTransaction
setOsTransaction:
_osTransaction
stringForKey:
downloadPipeline
dq_purgeStaleDownloadsWithCompletion:
dq_startNextDownloadsFromList:
downloadCompletedWithDownloadID:
setDownloadPipeline:
_downloadPipeline
currentConnection
valueForEntitlement:
dq_performPurchaseWithBuyParameters:downloadID:completion:
p_downloadIDForBuyParameters:storeID:completion:
dq_performDownloadWithPermlink:title:clientIdentifier:downloadID:completion:
p_downloadIDForPermlink:completion:
redownloadActionParameters
itemIdentifier
dq_performDownloadDownloadMetadata:downloadID:clientIdentifier:isRestoreItem:
setSortTitle:
setDownloadPermalink:
setSample:
dq_writeMetadata:clientIdentifier:downloadID:
dq_triggerDownloadForDownloadID:urlToAsset:
purchaseWithBuyParameters:
initWithPurchases:
setBackgroundRequest:
startWithPurchaseBlock:completionBlock:
downloadMetadata
primaryAssetURL
fullSizeImageURL
valueForFirstAvailableKey:
downloaderAccountIdentifier
dq_writeSinf:downloadID:
dq_writeArtworkWithURL:downloadID:
numberWithUnsignedInteger:
delegate
_sendPurchaseFailureNotificationWithPurchase:downloadID:
_delegate
displaysOnLockscreen
setShouldDisplayAsTopMost:
setDisplaysOnLockscreen:
setDialog:
setPerformDefaultActions:
selectedButton
buttons
indexOfObject:
setSelectedButtonIndex:
setTextFieldValues:
performDefaultActionForDialog:
dialog
dialogResponse
_dialog
_dialogResponse
_displaysOnLockscreen
_itunesMetadataPlistDictionaryFromPath:
setItunesMetadata:
itunesMetadata
dataWithContentsOfURL:options:error:
setLibraryItemIdentifier:
setFileAttributes:
_assetPath
_plistPath
_epubRightsPath
_artworkPath
_downloadID
_destinationFilename
_fullRestoreFilePath
_accountIdentifier
_transactionIdentifier
_cancelDownloadURL
_libraryItemIdentifier
_fileAttributes
_itunesMetadata
writeToURL:atomically:
listenersReadyQueue
lrq_setupCacheDelete
lrq_setupListeners
startupQueue
sq_finishedStartingUp
lrq_setupBeforeListenersWithCompletion:
processIdentifier
libraryServiceListener
interfaceWithProtocol:
setExportedInterface:
libraryService
setExportedObject:
initWithMachServiceName:
setLibraryServiceListener:
cacheDeleteManager
setCacheDeleteManager:
listener:shouldAcceptNewConnection:
setLibraryService:
setListenersReadyQueue:
setStartupQueue:
_libraryService
_cacheDeleteManager
_listenersReadyQueue
_startupQueue
_libraryServiceListener
_openFile
_hashAndWriteData:error:
bytes
_checkHashForByteCount:
_truncateToSize:
string
appendFormat:
_bytesWritten
_hashes
_md5Context
_numberOfBytesToHash
_verifiedBytes
mutableInFlightDiscretionaryDownloadIDs
mutableInFlightNondiscretionaryDownloadIDs
mutableInFlightSampleDownloadIDs
highPriorityDownloadIds
inFlightDiscretionaryDownloadsCount
inFlightNondiscretionaryDownloadsCount
inFlightSampleDownloadsCount
inFlightDiscretionaryDownloadsDescription
inFlightNondiscretionaryDownloadsDescription
inFlightSampleDownloadsDescription
setMutableInFlightNondiscretionaryDownloadIDs:
setMutableInFlightDiscretionaryDownloadIDs:
setMutableInFlightSampleDownloadIDs:
setHighPriorityDownloadIds:
_mutableInFlightNondiscretionaryDownloadIDs
_mutableInFlightDiscretionaryDownloadIDs
_mutableInFlightSampleDownloadIDs
_highPriorityDownloadIds
_initializeProgress
sourceFilePath
destinationFilePath
_performBOMCopy:
_applyFileAttributesToDirectory:error:
subpathsOfDirectoryAtPath:error:
initWithDomain:code:userInfo:
initWithShort:
_copierUpdatedFileWithPath:size:
initWithCString:encoding:
sourceFileType
_newBOMCopierOptions
_copierFinishedFileWithPath:size:
_copierStartedFileWithPath:size:
setDestinationFilePath:
setSourceFilePath:
setSourceFileType:
_activeFileBytesCopied
_activeFilePath
_destinationFilePath
_sourceFilePath
_sourceFileType
_overrideProgress
[Download-StreamingZip]: Failed to prepare for extraction %{public}@: %{public}@
[Download-StreamingZip]: extraction finished and file is at path: %{public}@
[Download-StreamingZip]: Can't calculate usage if no path given
[Download-StreamingZip]: Failed to open directory %{public}@: %{public}s
[Download-StreamingZip]: getattrlistbulk on entry %llu in %{public}@ returned error %{public}s
[Download-StreamingZip]: Got error %{public}s while processing entry %llu in %{public}@
[Download-StreamingZip]: Failed to get name for directory item %llu in %{public}@; not counting its children
[Download-StreamingZip]: Failed to create path to child directory by appending "%{public}s" to %{public}@
[Download-StreamingZip]: Skipping empty directory at %{public}@/%{public}s
[Download-StreamingZip]: Skipping hardlinked file at %{public}@/%{public}s
[Service]: FATAL ERROR: could not setup the database manager.
[Service]: FATAL ERROR: could not setup the install manager.
[Service]: FATAL ERROR: could not setup the download manager.
[Service]: FATAL ERROR: could not setup the purchase manager.
[Service]: Shutting down.
[Service]: Could not setup a download manager.
[Service]: Could not setup a install manager.
[Service]: Restarting interrupted installs.
[Service]: Cleaning up orphaned directories.
[Service]: fetchDownloadListWithReply
[Service]: fetchDownloadFromDownloadID
[Service]: requestDownloadWithParameters
[Service]: requestDownloadWithMetadata
[Service]: pauseDownloadWithID
[Service]: resumeDownloadWithID
[Service]: cancelDownloadWithID
[Service]: cancelAllActiveDownloadsWithReply
[Service]: purchaseWithBuyParameters
[Service]: downloadWithPermlink
[Service]: Received a transaction-start for downloadID: %{public}@
[Service]: Received a transaction-end for downloadID: %{public}@
[Service]: Error fetching the list of all downloads: %{public}@
[Service]: Account Changed.  Cancelling active downloads
[Database]: System could not produce a shared container.
[Database]: Failed to create documents folder in shared container.
[Database]: Created documents folder in shared container.
[Database]: Documents folder in shared container already existed.
[Database]: Store is at %{public}@
[Database]: Failed to initialize database manager.
[Database]: Failed to initialize database manager.  No URL.
[Database]: Error removing the download scratch directory: %{public}@
[Database]: Error removing the old database persistent store: %{public}@
[Database]: Error initializing PSC: %{public}@
[Database]: Purging entry: [%{public}@] in state: [%{public}@] lastChanged:[%{public}@] from the database
[Database]: Error while trying to purge the database: %{public}@
[Database]: Saving state to %{public}@ for %{public}@.
[Database]: Error saving the state for this downloadID: %{public}@, error: %{public}@
[Database]: Error encountered getting download info. Error: %{public}@
[Database]: Error deleting the download with id %{public}@, error: %{public}@
[Database]: Error deleting the download with id %{public}@, error: %{public}@ ... the object to delete was not found
[Database]: Updated the download policy with id %{public}@.
[Database]: Error encountered saving the download policy. Error: %{public}@
[Database]: Saved the download policy with id %{public}@.
[Database]: Error encountered starting download. Error: %{public}@
[Database]: Download added with id %{public}@.
[Database]: Failed to fetch existing download with ID %{public}@. %{public}@
[Database]: expected to have a url to request a new download
[Database]: string expected for url
[Database]: We got chunkSize %@, do we want to do anything with this?
[Database]: Pausing download %{public}@
[Database]: Error encountered trying to pause download. Error: %{public}@
[Database]: Download %{public}@ paused.
[Database]: Cancelling download %{public}@
[Database]: Error encountered canceling download. Error: %{public}@
[Database]: Download %{public}@ canceled.
[Database]: Resuming download %{public}@
[Database]: Error encountered resuming download. %{public}@
[Database]: Download %{public}@ resumed.
[Database]: Error encountered fetching download %{public}@. %{public}@
[Database]: Failed to write iTunesMetadata.plist for %{public}@. %{public}@
[Database]: Failed to write sinf.xml for %{public}@. %{public}@
[Database]: Failed to write iTunesArtwork for %{public}@. %{public}@
*** Assertion failure: %@ %@:%d %@
[Install-Op]: Required downloadID missing.
[Install-Op]: Required plist location missing.
[Install-Op]: Required asset path missing.
[Install-Op]: Init ... persistentID == %{public}@, storeID == %@, isRestore == YES
[Install-Op]: Init ... looking for restore entry in the purchase manifest first
[Install-Op]: Init ... restore entry found in the purchase manifest.
[Install-Op]: Init ... restore entry not found in the purchase manifest.  Now looking for restore entry in the sync manifest first
[Install-Op]: Init ... restore item found in the sync manifest.
[Install-Op]: Init ... overriding install filename to: %{public}@
[Install-Op]: Init ... backup path not found on a restore.  This is fatal ... persitentID == %{public}@, title == %@
[Install-Op]: Error: could not find manifest entry for restore book: [downloadID:%{public}@, persistentID:%{public}@, storeID: %@, title:%@, author:%@]
[Install-Op]: Could not find restore item with key: "%{public}@" ... now trying with key: "%{public}@"
[Install-Op]: Restore item found with key: %{public}@
[Install-Op]: Found multiple restore items with title: "%@".  De-duping by artistName
[Install-Op]: ArtistName was not recorded in installIInfo.  Choosing the entry: %@
[Install-Op]: Entry not found title: "%@"
[Install-Op]: Operation began for downloadID %{public}@.
[Install-Op]: Simulating a crash during install start
[Install-Op]: We have an existing shared download: %{public}@
[Install-Op]: We have a new shared download: %{public}@
[Install-Op]: Shared book container location is: %{public}@
[Install-Op]: We have a non-shared download: %{public}@
[Install-Op]: Operation %{public}@ for downloadID %{public}@, error %{public}@
[Install-Op]: Simulating a crash during install finish
[Install-Op]: Failed to install iTunesMetadata.plist.
[Install-Op]: No iTunesMetadata.plist to install for %{public}@.
[Install-Op]: Moving asset %@ to %@.
[Install-Op]: No iTunesArtwork to install for %{public}@.
[Install-Op]: Writing EPR data for download: %{public}@ to path: %@
[Install-Op]: Error EPR data for download: %{public}@ to path: %{public}@ error: %{public}@
[Install-Op]: Moving file %{public}@ to %{public}@.
[Install-Op]: DownloadInstaller: File delete failed: %{public}@
[Install-Op]: DownloadInstaller: File rename failed after too many tries: %{public}@
[Install-Op]: DownloadInstaller: File move failed: %{public}@
[Install-Op]: Looking for duplicate from purchase manifest for store book
[Install-Op]: Removing for duplicate store book entry from purchase manifest: %@
[Install-Op]: Looking for duplicate entry from purchase manifest for edu mode book
[Install-Op]: Removing for duplicate store book entry from purchase manifest
[Install-Op]: Did not find a duplicate store book entry in purchase manifest
[Install-Op]: Adding purchase manifest
[Install-Op]: Updating purchase manifest at user path: %{public}@
[Install-Op]: Updating shared manifest at path: %{public}@
[Install-Op]: Updating purchase single user manifest: %{public}@
[Install-Op]: Updating purchase manifest since isRestore == NO.
[Install-Op]: Not updating purchase manifest because this is a restore download.
[Install-Op]: Looking for book manifest for libraryItemIdentifier: %@ ...
[Install-Op]: Manifest not found by using the libraryItemIdentifier ... using downloadedAssetPath: %{public}@
[Install-Op]: Using purchase manifest.
[Install-Op]: Using sync manifest.
[Install-Op]: Defaulting to purchase manifest.
[Install-Op]: Could not install non-existant file: %@
[Install-Op]: Alert: just hit the unlikely code path: [original filename: %@ | new filename: %@ | book title: %@]
[Install-Op]: Saving Book to %@, DRM to %@
[Install-Op]: Saving Book to %@
[Install-Op]: Simulating a crash during unzip
[Install-Op]: Installed file: %@
[Install-Op]: Failing install after unzip failure for file: %{public}@, error: %{public}@
[Install-Op]: Book already at destination: %@
[Install-Op]: Moving file: %@ to path: %@
[Install-Decrypt-Op]: Could not begin decrypt
[Install-Decrypt-Op]: Running decrypt %@
[Install-Decrypt-Op]: Decrypt failed [%@]
[Install-Decrypt-Op]: Failed with reason: %@
[iTunesMetadata-Helper]: Writing plist to %@ for %{public}@
[iTunesMetadata-Helper]: Failed to write iTunesMetadata.plist for %{public}@
storeIDFromBuyParameters: cannot retrieve storeID from nil buyParameters
[Artwork-Helper]: Downloading Artwork for %{public}@ to URL %@
[Artwork-Helper]: Artwork downloaded for %{public}@ to %{public}@
[Artwork-Helper]: Error encountered retrieving iTunesArtwork. %@
[Artwork-Helper]: error ... could not get a localFileURL
[%@] No DPInfo provided
%@: Could not begin decrypt
%@: Decrypt failed
Exception decoding policy: %{public}@
Finished with decoding policy
[Download-Policy]: failed to update the download policy for the policyID: %@.  Error: %@
[Download-Policy]: Adding download policy %@ with size limit %lld
[Download-Policy]: Initialized with %lu download policies
Daemon starting up.
Daemon exited.
[Download]: Reprioritized downloadID: %{public}@
[Download]: Cancel task: %lu to restart downloadID: %{public}@
[Download]: Stop preparation operation for downloadID: %{public}@
[Download]: Stop task: %lu for downloadID: %{public}@ with reason [pause]
[Download]: Stop task: %lu for downloadID: %{public}@ with reason [cancel]
[Download]: Cancel operation: %@ for downloadID: %{public}@
[Download] didStartInstallWithOperation: could not find taskState for installOperation: [%@], downloadID: %{public}@ bookTitle: %@ so starting a new one.  This is likely EDU mode.
[Download] started install operation %@ for downloadID: %{public}@
[Download] finished install operation %@ for downloadID: %{public}@
[Download] didFinishInstallForOperation: could not find taskState for installOperation: [%@], downloadID: %{public}@ bookTitle: %@
[Download]: Consumer failed for task: %lu for downloadID: %{public}@ with error: %@
[Download]: Consumer with task: %lu for downloadID: %{public}@ is committing transfer progress: %.2f%%
[Download]: Did not receive partial content response for task: %lu
[Download]: Restart task: %lu after 408 response
[Download]: Truncate and restart task: %lu after 416 response
[Download]: Cancel download task: %lu for invalid HTTP status code: %ld
[Download] URLSession task complete. task=%@
[Download] Received task did finish with no task state: %lu, error: %@
[Download]: Restarting downloadID: %{public}@ after task cancel: %lu
[Download]: Download task did finish: %lu for downloadID: %{public}@
[Download]: Download task was canceled due to local cache server being unreachable for downloadID: %{public}@, task: %lu
[Download]: Download task failed: %lu for downloadID: %{public}@ with error: %@
[Download]: Cancel local-cache downloadID: %{public}@, for error: %@
[Download]: Retry scheduled for task: %lu, downloadID: %{public}@, error: %@
[Download]: Reset data consumer for task: %lu, with resumption offset: %llu
[Download]: Providing resumption offset: %llu for task: %lu
[Download]: Removed resumption offset for task: %lu
[Download]: Could not find state for task: %lu
[Download]: Adding downloadID(s): %{public}@
[Download]: Posting the BLDownloadQueueDownloadFailedNotification for downloadID: %{public}@
[Download]: Posting the DownloadCompleteNotification for downloadID: %{public}@
[Download]: Posting download/install progress for downloadID: %{public}@ [%.2f%% complete, %.2f sec remain]
[Download]: Sending the didFinishTransactionWithIdenfifier: for downloadID: %{public}@
Removing %{public}@ from inFlight lists. New discretionary count %lu, New nondiscretionary count %lu
In flight discretionary %{public}@
In flight nondiscrtionary %{public}@
[Download]: Reprioritizing to high task: %lu for downloadID: %{public}@
[Download]: Reprioritizing to default task: %lu to restart downloadID: %{public}@
Pumping Downloads
Available discretionary %lu, nondiscretionary %lu, sample %lu
In flight discretionary %{public}@
In flight nondiscretionary %{public}@
In flight sample %{public}@
Considering downloads to schedule: %{public}@
New discretionary count %lu, New nondiscretionary count %lu, New sample count %lu
New discretionary %{public}@
New nondiscretionary %{public}@
New sample %{public}@
New high priority ids added: %{public}@
[Download]: Finishing prepare with 0 download ID
[Download]: Updated per device downloadID: %{public}@ restore state to: %@
[Download]: Processing download after "finish only" response: %{public}@
[Download]: Cancel download after failed prepare: %{public}@
[Download]: Queue download: %{public}@ to discover assets later.
[Download]: Fail download after failed prepare: %{public}@
[Download]: Starting task: %lu with priority: %ld for downloadID: %{public}@ in sessionID: %{public}@
[Download]: download task resumed task=%@
There is no NSURLSessionTask to start for this download.
[Download]: logged event: %{public}@ for task with downloadIdentifier: %{public}@
[Download]: Download Failed for downloadID: %{public}@ reason: %{public}@
[Download]: Reconnect with nsurlsessiond
[Download]: Setting phase to %{public}@ with downloadID of %{public}@
Requested purgeable amount.
Able to purge %ld.
Requested to purge %@ with urgency %ld.
Purged %ld.
Requested to periodic purge %@ with urgency %ld.
Unknown urgency value, defaulting to low urgency.
[Prepare]: Preparing download: %{public}@
[Prepare]: Cancel invalid automatic download: %{public}@
[Prepare]: Skip prepare for download with no media asset: %{public}@
[Prepare]: Flagging downloadID %{public}@ as "finish only", already have asset: %{public}@
[Prepare]: Asking data consumer to override progress value
[Prepare]: Fail download without enough disk space: %{public}@
[Prepare]: No local cache URL for asset: %{public}@, error: %@
[Prepare]: Replacing URL for asset: %{public}@, with local cache URL: %@
[Prepare]: Running %{public}@ operation to get size for downloadID: %{public}@
[Prepare]: Found size: %lld for downloadID: %{public}@
[Prepare]: Failed to find size for downloadID: %{public}@
[Prepare]: Simulating a device out of space situation
[Prepare]: Determined asset size to be %llu bytes
[Prepare]: Discovered %llu bytes already transfered
[Prepare]: Not enough disk space for downloadID: %{public}@, only %llu is available.  Error: %@
[Prepare]: Created a background session
[Download-StreamingZip]: Invalid hash type: %{public}@
[Install-Mgr]: Failed to initialize install manager FRC
[Install-Mgr]: starting the installManager.
[Install-Mgr]: Failed to perform initial fetch on the install manager FRC: %{public}@
%{public}@
[Install-Mgr]: restarting %lu interrupted installs.
[Install-Mgr]: controllerWillChangeContent.
[Install-Mgr]: controllerDidChangeContent.
[Install-Mgr]: FRC has been triggered.
[Install-Mgr]: FRC received insert.
[Install-Mgr]: FRC received delete.
[Install-Mgr]: FRC received move.
[Install-Mgr]: FRC received update.
[Install-Mgr]: Enqueing install operation for download %{public}@.
[Install-Mgr]: Install operation already exists in queue for downloadID: %{public}@
[Install-Mgr]: Cancelling operation for download %{public}@.
[Install-Mgr]: Can't dequeue non-existant download operation for %{public}@.
[Install-Mgr]: Operation %{public}@ failed.
[Install-Mgr]: No operation found for %{public}@.
[Install-Mgr]: Operation %{public}@ completed.
[Install-Mgr]: Operation states failed. Error: %{public}@
[Install-Mgr]: Successfully purged downloadInfo for id %{public}@.
[Install-Mgr]: Successfully purged downloadPolicyInfo for id %{public}@.
[Install-Mgr]: Marking downloadID %{public}@ as [finished] for server.
[Install-Mgr]: Failed to mark downloadID %{public}@ as [finished] for server. Error: %{public}@
[Install-Mgr]: Marking downloadID %{public}@ as [cancelled] for server.
[Install-Mgr]: Failed to mark downloadID %{public}@ as [cancelled] for server. Error: %{public}@
[Install-Mgr]: Failed to mark downloadID %{public}@ as [cancelled] for server. No cancel-download-url
Adding store services download observer.
Cache delete of books is not supported on non-EDU devices.
Not calcuating storage usage as this is not an EDU device.
Handling download state change from store services.
Removed %lld from download list as it was cancelled or failed.
Adding %lld to list of book downloads.
Handling download queue change from store services.
Book download %ld completed.
Still waiting for the following downloads to complete: %@
Received notification that shared storage usage has changed.
Notification info: %@
Checking purgeable amounts.
Pushed purgeable amount update.
No change in purgeable amounts.
[Install-Op]: entries are: %@
[BookManifest]: Removed manifest itemID entry at index: %ld
[BookManifest]: Removed manifest permalink entry at index: %ld
[BookManifest]: Invalidating after external change: %@
[BookManifest]: Could not read data: %{public}@
[BookManifest]: Could not unserialize data: %{public}@
The object [%@] of class: [%{public}@] could not be converted to neither an NSString nor an NSNumber
[Install-DRM-Op]:  Decrypting asset for download: %@ at path: %@
[Transaction]: Created transaction %{public}s(%p)
[Transaction]: Ending transaction %{public}s(%p)
[Transaction]: EndTransaction was called but transaction was already nil.(%p)
[Download-Mgr]: Initializing download manager.
[Download-Mgr]: Overriding the download path to be %{public}@
[Download-Mgr]: Failed to override the download path to %{public}@
[Download-Mgr]: Failed to created documents folder in shared container.
[Download-Mgr]: Created documents folder in shared container.
[Download-Mgr]: downloadDirectoryForDownloadID: received a nil downloadID.
[Download-Mgr]: Checking for downloads.
[Download-Mgr]: Purging stale downloads from the database.
[Download-Mgr]: Request to list downloads.
[Download-Mgr]: Info requested for downloadID %{public}@.
[Download-Mgr]: New download requested
[Download-Mgr]: Error attempting to start the download with ID %{public}@
[Download-Mgr]: Pausing downloadID %{public}@
[Download-Mgr]: Canceling downloadID %{public}@
[Download-Mgr]: Attempting to resuming downloadID %{public}@
[Download-Mgr]: Error attempting to resume downloadID %{public}@
[Download-Mgr]: DownloadID %{public}@ completed.
[Download-Mgr]: Purged leftover downloads
[Download-Mgr]: Encountered an error while purging the DownloadsDatabase: %@
[Purchase-Mgr]: starting purchaseWithBuyParameters:
[Purchase-Mgr]: Purchase download already in progress with downloadID: %{public}@
[Purchase-Mgr]: Failed to perform purchase as the purchase manager was released.
[Purchase-Mgr]: Failed to create entry for new download.
[Purchase-Mgr]: starting downloadWithPermlink:
[Purchase-Mgr]: Permlink download already in progress with downloadID: %{public}@
[Purchase-Mgr]: starting requestDownloadWithMetadata:isRestore:%@
[Purchase-Mgr]: Download already in progress with downloadID: %{public}@
[Purchase-Mgr]: Failed to create entry for new download with error: %@
[Purchase-Mgr]: Purchase manager went away for downloadID: %{public}@
[Purchase-Mgr]: Failed to update downloadID: %{public}@ with purchase metadata. Error: %@
[Purchase-Mgr]: Failed to create target path for download, moving downloadID %{public}@ to failed. Error: %@
[Purchase-Mgr]: No permlink available to download for downloadID %{public}@.
[Purchase-Mgr]: Unknown download.
[Purchase-Mgr]: Purchase progress: %@, %@
[Purchase-Mgr]: Purchase completed! %@
[Purchase-Mgr]: Posting the BLDownloadQueueDownloadFailedNotification for downloadID: %{public}@
[Purchase-Mgr]: _notifyProgress: failed to retrieve downloadID
[Purchase-Mgr]: Preparing the download asset based on the downloadsMetadata
[Purchase-Mgr]: isRestore is TRUE
[Purchase-Mgr]: isRestore is FALSE
[Purchase-Mgr]: Finished preparing the download asset: %@
[Purchase-Mgr]: [Purchase-Mgr]: Failed to update downloadID: %{public}@ with purchase metadata. Error: %@
[Purchase-Mgr]: No url available to download for downloadID: %{public}@.
[Purchase-Mgr]: Failed to create target path for download, moving %{public}@ to failed. Error: %@
[Purchase-Mgr]: Processed the download (id:%{public}@) request for URL: %@.
[Purchase-Mgr]: No downloadID returned for URL: %@.
[Purchase-Mgr]: Error attempting to download URL: %@. Error: %@
[Purchase-Mgr]: Failed to write iTunesMetadata.plist for downloadID: %{public}@. Error: %@
[Purchase-Mgr]: Failed to write sinf.xml for downloadID %{public}@.  Error: %@
[Purchase-Mgr]: Failed to write iTunesArtwork for downloadID: %{public}@.  Error: %@
[Auth]: Starting a BLDaemonDialogOperation
No destination file name available for manifest.
Failed to parse iTunesMetadata.plist from %{public}@. %{public}@
Failed to read iTunesMetadata.plist from %{public}@. %{public}@
[Sinf-Helper]: Writing Sinf for downloadID: %{public}@ at targetURL: %@
Initializing.
Daemon shutting down.
Starting up.
Some error happened in pre-listener startup: %@
Finished starting up.
Connection request from pid=%d
Refusing connection to pid %d. (appIdentifier: %@)
Accepting new connection from pid %d
Setting up listeners.
Starting the library service.
Doing initial calculation of storage usage.
[Download-FileSys]: Finishing for file: %@
[Download-FileSys]: Error finishing for file: %@, error: %@
[Download-FileSys]: Resetting file: %@
[Download-FileSys]: Suspending file: %@
[Download-FileSys]: Invalid chunk index: %ld, for bytes written: %lld, bytes to hash: %ld
[Download-FileSys]: Hash mismatch for chunk: (%lld:%lld), %{public}@ should be %{public}@
[Download-FileSys]: Opening file: %@
[Install-ExtractFile-Op]: Fixing file permissions for %@
[Install-ExtractFile-Op]: Could not get sub-paths of %@: %@
[Install-ExtractFile-Op]: Could not stat %@: %s
[Install-ExtractFile-Op]: Could not set file attributes for file: %@, error: %@
[Install-ExtractFile-Op]: Extracting %s to %s
[Install-ExtractFile-Op]: BOMCopier failed with error: %d
%@: Fatal error: %s
%@: Fatal file error: %d: %s
%@: File conflict error: %s
%@: File error: %d: %s
v24@?0Q8@"NSError"16
v20@?0@"NSError"8B16
v16@?0@"NSError"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
overallProgress
T@"SSOperationProgress",&,N,V_overallProgress
downloadIdentifier
T@"NSString",C,N,V_downloadIdentifier
assetIdentifier
Tq,N,V_assetIdentifier
permLink
T@"NSString",C,N,V_permLink
automaticType
Tq,N,V_automaticType
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
kind
T@"NSString",C,N,V_kind
requiresDownloadHandler
TB,N,V_requiresDownloadHandler
isLocalCacheServer
TB,N,V_isLocalCacheServer
transferBytesExpected
Tq,N,V_transferBytesExpected
transferBytesWritten
Tq,N,V_transferBytesWritten
transferProgressFraction
Td,N,V_transferProgressFraction
transferResumptionOffset
TQ,N,V_transferResumptionOffset
downloadPhase
Tq,N,V_downloadPhase
artistName
T@"NSString",C,N,V_artistName
title
T@"NSString",C,N,V_title
subtitle
T@"NSString",C,N,V_subtitle
genre
T@"NSString",C,N,V_genre
thumbnailImageURL
T@"NSString",C,N,V_thumbnailImageURL
isRestore
TB,R,N,V_isRestore
canPause
TB,R,N,V_canPause
isSample
TB,R,N,V_isSample
isPurchase
TB,R,N,V_isPurchase
purchaseDate
T@"NSDate",R,N,V_purchaseDate
persistentIdentifier
Tq,R,N,V_persistentIdentifier
storeAccountIdentifier
T@"NSNumber",R,N,V_storeAccountIdentifier
com.apple.bookassetd.startup.transaction
com.apple.bookassetd.cleanup.transaction
BKSimulateCrashAtInstallStart
BKSimulateCrashAtInstallDuringDecrypt
BKSimulateCrashAtInstallDuringUnzip
BKSimulateCrashAtInstallDuringFinish
BKSimulateDeviceOutOfSpace
-[BLService performPreListenerStartupWithCompletion:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AlderServices_Sim/AlderServices-98.2/frameworks/BookLibrary/BLService/BLService.m
invalid nil value for '%s'
self.downloadManager
self.installManager
self.purchaseManager
v32@?0@"BLDownload"8Q16^B24
v32@?0@8Q16^B24
v24@?0@"NSArray"8@"NSError"16
nil download manager
bookassetd is missing a download manager
nil purchase manager
bookassetd is missing a purchase manager
com.apple.bookassetd.BLService
-[BLService requestDownloadsWithMetadata:areRestore:reply:]_block_invoke
downloadID
v24@?0@"NSString"8@"NSError"16
v8@?0
-[BLService cancelAllActiveDownloadsWithReply:]
reply
-[BLService setValueSimulateCrashAtInstallStart:withReply:]
-[BLService setValueSimulateCrashAtInstallDuringDecrypt:withReply:]
-[BLService setValueSimulateCrashAtInstallDuringUnzip:withReply:]
-[BLService setValueSimulateCrashAtInstallDuringFinish:withReply:]
-[BLService getCrashSimulationOverrideValuesWithReply:]
-[BLService resetAllCrashSimulationOverridesWithReply:]
-[BLService setValueSimulateDeviceOutOfSpace:withReply:]
-[BLService getValueSimulateDeviceOutOfSpaceWithReply:]
cancellingAllTransactions
downloadManager
T@"BLDownloadManager",&,N,V_downloadManager
installManager
T@"BLBookInstallManager",&,N,V_installManager
databaseManager
T@"BLDatabaseManager",&,N,V_databaseManager
purchaseManager
T@"BLPurchaseManager",&,N,V_purchaseManager
downloadPolicyManager
T@"BLDownloadPolicyManager",&,N,V_downloadPolicyManager
transactionsMap
T@"NSMutableDictionary",&,N,V_transactionsMap
currentAccountNumber
T@"NSNumber",&,N,V_currentAccountNumber
fairplay:sData
buffer
T@"NSMutableString",&,N,V_buffer
isSinfElement
TB,N,V_isSinfElement
sinfData
T@"NSData",R,N,V_sinfData
Documents/BLDatabaseManager
/var/mobile/Media/Books/Downloads/Database/
DownloadsDatabase
momd
-[BLDatabaseManager init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AlderServices_Sim/AlderServices-98.2/frameworks/BookLibrary/BLService/BLDatabaseManager.m
[IMLibraryPlist sharedContainerURL] returned nil!  Falling back to using: %{public}@.  Please file a radar.
BLDatabaseManager.sqlite
%K = %@ || %K = %@
v32@?0@"BLDownloadInfo"8Q16^B24
-[BLDatabaseManager fetchListOfAllDownloadCandidatesWithCompletion:]_block_invoke
%K = %@
-[BLDatabaseManager fetchListOfPendingDownloadsSortedByStartTime:]_block_invoke
%K = %@ || %K = %@ || %K = %@ || %K = %@ ||  %K = %@
%K IN %@
-[BLDatabaseManager purgeAllStaleDownloadsWithCompletion:]_block_invoke
v24@?0@"BLDownloadInfo"8@"NSError"16
-[BLDatabaseManager updateDownloadWithID:updateBlock:completion:]_block_invoke
%K = %@ || %K = %@ || %K = %@ || %K = %@ || %K = %@
-[BLDatabaseManager updateAllInterruptedDownloadsToTheirProperStatesWithCompletion:]_block_invoke
-[BLDatabaseManager saveOrUpdateDownloadPolicy:completion:]_block_invoke
v24@?0@"BLDownloadPolicyInfo"8@"NSError"16
-[BLDatabaseManager _deleteDownloadPolicyWithID:save:completion:]_block_invoke
-[BLDatabaseManager fetchListOfAllDownloadPoliciesWithCompletion:]_block_invoke
-[BLDatabaseManager fetchDownloadListWithCompletion:]_block_invoke
-[BLDatabaseManager addDownloadWithBuyParameters:storeID:clientIdentifier:completion:]_block_invoke
-[BLDatabaseManager addDownloadWithPermlink:clientIdentifier:completion:]_block_invoke
expected to have a url
string expected for url
invalid numberOfBytesToHash
fileExtention
epubRightsData
dpInfo
artworkURL
publicationVersion
isAutomaticDownload
downloadKey
assetFileSize
isZipStreamable
storeItemIdentifier
md5HashStrings
numberOfBytesToHash
accountID
chunkSize
-[BLDatabaseManager requestDownloadWithParameters:completion:]_block_invoke
cannot pause download that is not active
cannot cancel download that is not active or paused
cannot resume download that is not paused
%K == %@
-[BLDatabaseManager _fetchDownloadsWithPredicate:block:]_block_invoke
-[BLDatabaseManager _fetchDownloadPolicyInfoEntityWithID:block:]_block_invoke
-[BLDatabaseManager _fetchDownloadPoliciesWithPredicate:block:]_block_invoke
T@"NSPersistentStoreCoordinator",&,N,V_psc
T@"NSManagedObjectContext",&,N,V_moc
T@"NSManagedObjectModel",&,N,V_mom
persistentStoreURL
T@"NSURL",R,C,N,V_persistentStoreURL
CoreData error in %s
BLDownloadStateReceived
BLDownloadStatePrepared
BLDownloadStateWaiting
BLDownloadStateDownloading
BLDownloadStatePaused
BLDownloadStateCanceled
BLDownloadStateFailed
BLDownloadStateDownloaded
BLDownloadStateInstallStarted
BLDownloadStateFinished
BLDownloadStateInterrupted
BLDownloadStateDecryptStarted
BLDownloadStateDecryptFinished
BLDownloadStateUnzipStarted
BLDownloadStateUnzipFinished
BLDownloadStateFinalizingStarted
BLDownloadStateFinalizingFinished
BLDownloadStateUnknown
v16@?0@"NSException"8
META-INF
sinf.xml
Bad backup plist
This plist entry for representing this download could not be found
installOperation
succeeded
failed
iTunesMetadata.plist
plist
iTunesArtwork
%@-%ld
%@: Could not install non-existant file: %@
epub
ibooks
installInfo
T@"BLBookInstallInfo",&,N,V_installInfo
bookPath
T@"NSString",C,N,V_bookPath
installedAssetPath
T@"NSString",C,N,V_installedAssetPath
error
T@"NSError",&,N,V_error
success
TB,N,V_success
shouldSkipAssetInstallation
TB,N,V_shouldSkipAssetInstallation
drmPath
T@"NSString",C,N,V_drmPath
T@"NSString",R,C,N
sinfs
T@"NSArray",&,N,V_sinfs
DRMFree
TB,R,GisDRMFree
pinfsArray
T@"BLSinfsArray",R
sinfsArray
info
T@"NSDictionary",&,N,V_info
identifier
Tq,R
pinf
sinf
fairplayDecryptSession
T@"BLFairplayDecryptSession",&,N,V_fairplayDecryptSession
T@"NSData",&,N,V_dpInfo
lastSnapshotTime
Td,N,V_lastSnapshotTime
path
T@"NSString",&,N,V_path
progress
T@"SSOperationProgress",&,N,V_progress
T@"BLBookInstallInfo",W,N,V_installInfo
TB,R,N,V_success
T@"NSError",R,N,V_error
metadata
DownloaderID
FamilyID
PurchaserID
iTunesMetadata
T@"NSDictionary",&,N,V_plist
salableAdamId
Could not produce a local downloads directory.
Unknown artwork URL or download ID.
com.apple.bookassetd
BLService
BLServiceDownloadQueue
BLServicePurchaseManager
BLServiceDownloadManager
BLServiceDownloadPipeline
BLServiceDatabaseManager
BLServiceDownloadFilesystem
BLServiceDownloadStreamingZip
com.apple.iBooks
BookLibrary
BLDaemon
BLBookInstallLog
BLBookCacheDeleteLog
BLUtilitiesLog
com.apple.itunesstored.fairplay.decryptfile.%@
T@"NSString",&,N,V_identifier
Root
cachedPolicy
T@"SSDownloadPolicy",&,N,V_cachedPolicy
policyID
T@"NSString",C,N,V_policyID
policyData
T@"NSData",C,N,V_policyData
downloadPolicy
T@"SSDownloadPolicy",R,N
com.apple.bookassetd.BLDownloadPolicyManager
AllowAutoDownloadOnCellular
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
policies
T@"NSMutableDictionary",&,N,V_policies
sizeLimitOverrides
T@"NSMutableDictionary",&,N,V_sizeLimitOverrides
T@"BLDatabaseManager",R,W,N,V_databaseManager
policyIdentifiers
T@"NSSet",C,N,V_policyIDs
changesetType
Ti,N,V_changesetType
downloadPropertiesForStoppedDownloads
T@"NSDictionary",C,N,V_downloadProperties
networkType
Tq,N,V_networkType
com.apple.nsurlsessiond-events
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.books.plist.changed
com.apple.bookassetd.restart-downloads-at-startup
com.apple.bookassetd.commit-progress
com.apple.bookassetd.BLDownloadPipeline.background
com.apple.bookassetd.BLDownloadPipeline.prepare
com.apple.bookassetd.BLDownloadPipeline.processing
com.apple.bookassetd.BLDownloadPipeline.sampleDownloads
com.apple.bookassetd.BLDownloadPipeline.discretionaryDownloads
com.apple.bookassetd.BLDownloadPipeline.nonDiscretionaryDownloads
com.apple.bookassetd.BLDownloadPipeline
v24@?0@"NSSet"8@"NSError"16
X-Apple-JADownloadQueue-Token
Retry-After
v24@?0@"SSVDialogResponse"8@"NSError"16
bytes=%llu-
Range
com.apple.bookassetd.BLDownloadPipeline.auth
Error performing download operation
There is no NSURLSessionTask to start for this download.
v24@?0@"BLPrepareDownloadOperation"8@"BLPrepareDownloadResponse"16
v24@?0@"BLPrepareDownloadOperation"8^B16
User Stopped
Unrecoverable Error
Unreachable Local Cache Error
Download Error
T@"BLDatabaseManager",W,N,V_databaseManager
T@"BLBookInstallManager",W,N,V_installManager
T@"BLDownloadPolicyManager",W,N,V_downloadPolicyManager
transactionCoordinator
T@"<BLOSTransactionCoordinating>",W,N,V_transactionCoordinator
authenticationChallengeQueue
T@"ISOperationQueue",R,N,V_authenticationChallengeQueue
backgroundOperationQueue
T@"ISOperationQueue",&,N,V_backgroundOperationQueue
dirtyTaskStates
T@"NSMutableSet",&,N,V_dirtyTaskStates
preparationDownloadIDs
T@"NSMutableOrderedSet",&,N,V_preparationDownloadIDs
preparationOperationQueue
T@"ISOperationQueue",&,N,V_preparationOperationQueue
processingOperationQueue
T@"ISOperationQueue",&,N,V_processingOperationQueue
reconnectTimer
T@"NSObject<OS_dispatch_source>",&,N,V_reconnectTimer
progressTimer
T@"NSObject<OS_dispatch_source>",&,N,V_progressTimer
taskStates
T@"NSMapTable",&,N,V_taskStates
activeTaskStates
T@"NSMutableSet",&,N,V_activeTaskStates
urlSessions
T@"NSMutableDictionary",&,N,V_urlSessions
sampleDownloadOperationQueue
T@"ISOperationQueue",&,N,V_sampleDownloadOperationQueue
discretionaryDownloadOperationQueue
T@"ISOperationQueue",&,N,V_discretionaryDownloadOperationQueue
nonDiscretionaryDownloadOperationQueue
T@"ISOperationQueue",&,N,V_nonDiscretionaryDownloadOperationQueue
downloadPipelineQueue
T@"BLDownloadPipelineQueue",R,N,V_downloadPipelineQueue
response
T@"BLPrepareDownloadResponse",&,N,V_response
pipeline
T@"BLDownloadPipeline",W,N,V_pipeline
downloadStartCompletionBlock
T@?,C,N,V_downloadStartCompletionBlock
com.apple.mobile.cache_delete_ibooks
BLSharedStorageUseChangedNotification
BLSharedStorageUseChangedSourceKey
BLSharedStorageUseChangedUrgencyKey
BLSharedStorageUseChangedVolumeKey
BLSharedStorageUseChangedRequestedKey
BLSharedStorageUseChangedPurgedKey
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
purge
periodic
bookLibrary
T@"BLLibrary",&,N,V_bookLibrary
purgeableProvider
T@"<BLCacheDeletePurgeableProvider>",W,N,V_purgeableProvider
localhost
Content-Range
v32@?0^{__CFURL=}8^{__CFDictionary=}16^{__CFError=}24
HEAD
identity
Accept-Encoding
%@=%@
v32@?0@"NSString"8@"NSString"16^B24
v28@?0C8Q12^{__CFError=}20
metricsLoadURLSessionDuration
T@"NSNumber",R,N
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
policy
T@"SSDownloadPolicy",&,N,V_policy
download
T@"BLDownload",&,N,V_download
T@"NSString",R,N
outputBlock
T@?,C,V_outputBlock
ebook
com.apple.bookassetd.
discretionary.
powered.
wifi.
default
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
clientSecondaryIdentifier
T@"NSString",C,N,V_clientSecondaryIdentifier
dataConsumer
T@"BLDownloadDataConsumer",&,N,V_dataConsumer
discretionary
TB,N,GisDiscretionary,V_discretionary
destinationPath
T@"NSString",C,N,V_destinationPath
requiresPowerPluggedIn
TB,N,V_requiresPowerPluggedIn
taskPriority
Tq,N,V_taskPriority
URLRequest
T@"NSURLRequest",C,N,V_URLRequest
result
Tq,N,V_result
backgroundOperations
T@"NSArray",C,N,V_backgroundOperations
mediaAssetSize
Tq,N,V_mediaAssetSize
URLSessionIdentifier
downloadRestoreState
T@"NSNumber",&,N,V_downloadRestoreState
isPerDeviceVPP
TB,N,V_isPerDeviceVPP
TB,N,V_isRestore
TB,N,V_canPause
TB,N,V_isSample
TB,N,V_isPurchase
T@"NSDate",&,N,V_purchaseDate
Tq,N,V_persistentIdentifier
T@"NSNumber",&,N,V_storeAccountIdentifier
T@"NSString",&,D,N
state
T@"NSNumber",&,D,N
startTime
T@"NSDate",&,D,N
buyParameters
permlink
storeIdentifier
transactionIdentifier
cancelDownloadURL
size
lastStateChangeTime
hashType
assetPath
plistPath
epubRightsPath
artworkPath
fileExtension
T@"NSData",&,D,N
accountIdentifier
publication-version
sort-artist
sort-name
itemId
releaseDate
is-purchased-redownload
sourceApp
page-progression-direction
itemName
copyright
explicit
sort-album
human-friendly-publication-version
languages
PageProgression
playlistId
playlistName
artwork-template-name
asset-info
flavor
com.apple.iTunesStore.downloadInfo
accountInfo
Artist
DSID
AppleID
Flavor
Genre
Path
Backup-Path
iTunesU Permlink
Item ID
Page Progression Direction
Persistent ID
Publication Version
Release Date
Sort Artist
Sort Name
Storefront ID
Name
usesSharedAsset
Album
Sort Album
Copyright
isExplicit
Human Readable Publication Version
Languages
PlaylistID
songDownloadDone
songId
download-id
com.apple.ibooks.BLService.BLBookInstallManagerQueue
(%K == %@)
-[BLBookInstallManager dq_failOperationForDownloadID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AlderServices_Sim/AlderServices-98.2/frameworks/BookLibrary/BLService/BLBookInstallManager.m
Expecting this operation not to be successful.
-[BLBookInstallManager dq_notifyServerOfDownloadCancelledForInstallOperation:completion:]
installInfo.cancelDownloadURL
T@"NSFetchedResultsController",&,N,V_frc
queue
T@"NSOperationQueue",&,N,V_queue
operationsByDownloadID
T@"NSMutableDictionary",&,N,V_operationsByDownloadID
pendingInterruptedInstalls
T@"NSArray",&,N,V_pendingInterruptedInstalls
progressDelegate
T@"<BLBookInstallManagerProgressDelegate>",W,N,V_progressDelegate
BLErrorDomain
message
Underlying Error Description
Unknown Error
BLService error
unknown download id (%@)
/private/var
com.apple.bookassetd.CacheDeleteStorageManager
v32@?0@"SSDownload"8Q16^B24
v24@?0@"NSNumber"8^B16
CACHE_DELETE_ID
downloadQueue
T@"SSDownloadQueue",&,N,V_downloadQueue
downloadingPersistentIdentifiers
T@"NSMutableSet",&,N,V_downloadingPersistentIdentifiers
purgeableValueChanged
TB,N,V_purgeableValueChanged
purgeableLowPriority
Tq,N,V_purgeableLowPriority
purgeableMediumPriority
Tq,N,V_purgeableMediumPriority
purgeableHighPriority
Tq,N,V_purgeableHighPriority
purgeableSpecialCasePriority
Tq,N,V_purgeableSpecialCasePriority
FairPlayErrorDomain
SinfPropertyAccountIdentifier
SinfPropertyFairPlayKeyIdentifier
Books
Purchases
com.apple.ibooks.BLService.BLBookManifest
BLManifestTestEnv
BLLibrarySimulateMultiUser
-[BLBookManifest manifestEntriesWithProperty:equalToNumber:limitCount:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AlderServices_Sim/AlderServices-98.2/frameworks/BookLibrary/BLService/BLBookManifest.m
expected nil value for '%s'
candidateValueAsDecimalNumber
manifest
T@"NSMutableDictionary",&,N,V_manifest
manifestPath
T@"NSString",&,N,V_manifestPath
osTransaction
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
Documents/BLDownloads
com.apple.ibooks.BLService.DownloadManager
+[BLDownloadManager downloadsDirectory]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AlderServices_Sim/AlderServices-98.2/frameworks/BookLibrary/BLService/BLDownloadManager.m
[IMLibraryPlist sharedContainerURL] returned nil!  Please file a radar.
BLDownloadManagerCustomPath
v24@?0@"BLDownload"8@"NSError"16
downloadPipeline
T@"BLDownloadPipeline",&,N,V_downloadPipeline
installProgressDelegate
T@"<BLBookInstallManagerProgressDelegate>",R,N
SHA1
com.apple.bookassetd.cancelError
com.apple.bookassetd.cancelReason
com.apple.bookassetd.dataConsumer
asset
com.apple.ibooks.BLService.PurchaseManager
com.apple.application-identifier
Memory Management Error
Object prematurely released
v28@?0@"NSString"8B16@"NSError"20
Create Download Error
Error encountered adding download to database.
v16@?0@"BLDownloadInfo"8
v24@?0@"SSPurchase"8@"NSError"16
local-server-info
%K CONTAINS %@
Purchase manager went away
We have neither a storeID nor purchase parameters for this request
Missing buy parameters.
delegate
T@"<BLPurchaseManagerDelegate>",W,N,V_delegate
dialog
T@"ISDialog",R
displaysOnLockscreen
T@?,C
dialogResponse
T@"SSVDialogResponse",R,C
DSPersonID
itunesMetadata
T@"NSDictionary",&,N,V_itunesMetadata
T@"NSString",C,N,V_assetPath
T@"NSString",C,N,V_plistPath
T@"NSString",C,N,V_epubRightsPath
T@"NSString",C,N,V_artworkPath
T@"NSString",C,N,V_downloadID
destinationFilename
T@"NSString",C,N,V_destinationFilename
T@"NSNumber",&,N,V_persistentIdentifier
T@"NSNumber",&,N,V_isRestore
T@"NSNumber",&,N,V_isSample
T@"NSNumber",&,N,V_isPurchase
fullRestoreFilePath
T@"NSString",C,N,V_fullRestoreFilePath
T@"NSNumber",&,N,V_accountIdentifier
T@"NSString",C,N,V_transactionIdentifier
T@"NSString",C,N,V_cancelDownloadURL
storePublicationVersion
storeDownload
TB,R,N,GisStoreDownload
libraryItemIdentifier
T@"NSString",C,N,V_libraryItemIdentifier
fileAttributes
T@"NSDictionary",&,N,V_fileAttributes
T@"<BLBookInstallOperationProgressDelegate>",W,N,V_progressDelegate
com.apple.bookassetd.xpc-listener-ready
com.apple.bookassetd.startup-queue
com.apple.bookassetd.xpc-dispatch
com.apple.ibooks.BLService.private
com.apple.itunesstored.private
com.apple.ibooks.BLService
@"<BLCacheDeletePurgeableProvider>"8@?0
libraryService
T@"BLService",&,N,V_libraryService
cacheDeleteManager
T@"BLCacheDeleteStorageManager",&,N,V_cacheDeleteManager
listenersReadyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_listenersReadyQueue
startupQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_startupQueue
libraryServiceListener
T@"NSXPCListener",&,N,V_libraryServiceListener
%02x
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
mutableInFlightNondiscretionaryDownloadIDs
T@"NSMutableSet",&,N,V_mutableInFlightNondiscretionaryDownloadIDs
mutableInFlightDiscretionaryDownloadIDs
T@"NSMutableSet",&,N,V_mutableInFlightDiscretionaryDownloadIDs
mutableInFlightSampleDownloadIDs
T@"NSMutableSet",&,N,V_mutableInFlightSampleDownloadIDs
highPriorityDownloadIds
T@"NSMutableSet",&,N,V_highPriorityDownloadIds
availableNondiscretionaryDownloads
TQ,R,N
availableDiscretionaryDownloads
availableSampleDownloads
inFlightDiscretionaryDownloadIDs
T@"NSSet",R,N
inFlightNondiscretionaryDownloadIDs
inFlightSampleDownloadIDs
Unable to extract
Missing either source or destination path.
extractCPIO
extractPKZip
<%@(%p)>
_destinationFilePath = %@;
_sourceFilePath = %@;
_sourceFileType = %ld;
_fileAttributes = %@;
destinationFilePath
T@"NSString",C,N,V_destinationFilePath
T@"NSDictionary",C,N,V_fileAttributes
sourceFilePath
T@"NSString",C,N,V_sourceFilePath
sourceFileType
Tq,N,V_sourceFileType
diskUsage
hasConsumedData
TB,R,N
overrideProgress
TB,N,V_overrideProgress
percentComplete
Td,R,N
resumptionOffset
BLStreamingZipDownloadDataConsumer
SZExtractorDelegate
NSObject
BLPipelineDownloadTaskState
NSCopying
BLService
BLPurchaseManagerDelegate
BLOSTransactionCoordinating
BLServiceProtocol
BLEpubRightsDataParser
NSXMLParserDelegate
BLDatabaseManager
BLDatabaseManager_Extras
BLAssertionHandler
BLBookInstallOperation
BLDownloadDRM
BLDownloadSinf
BLFairPlayDecryptFileOperation
BLITunesMetadataHelper
BLUtilities
BLArtworkHelper
BLFairplayDecryptSession
BLDownloadPolicy
BLDownloadPolicyManager
BLDownloadPolicyChangeset
BLDownloadPipeline
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BLBookInstallManagerProgressDelegate
BLPerformDownloadOperation
BLCacheDelete
BLPrepareDownloadOperation
ISURLOperationDelegate
ISOperationDelegate
BLPrepareDownloadResponse
BLStreamingZipHandler
BLDownloadInfo
BLBookInstallManager
NSFetchedResultsControllerDelegate
BLBookInstallOperationProgressDelegate
BLCacheDeleteStorageManager
SSDownloadManagerObserver
BLCacheDeletePurgeableProvider
BLSinfsArray
HexUtil
BLBookManifest
BLDownloadDRMOperation
BLOSTransaction
BLDownloadManager
BLAdditions
BLPurchaseManager
BLDaemonDialogOperation
BLBookInstallInfo
BLSinfHelper
BLDaemon
NSXPCListenerDelegate
BLDownloadPolicyInfo
BLFilesystemDownloadDataConsumer
BLDownloadPipelineQueue
BLExtractFileOperation
BLDownloadDataConsumer
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8d16
v24@0:8@16
v16@0:8
v24@0:8@"NSString"16
@32@0:8@16@24
B32@0:8@16^@24
B24@0:8^@16
Q24@0:8@16
@24@0:8r*16
@32@0:8r*16Q24
d16@0:8
@"SZExtractor"
@"NSDictionary"
@"NSString"
@24@0:8^{_NSZone=}16
@24@0:8@16
v32@0:8q16q24
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8Q16
@"NSDate"
@"NSNumber"
@"SSOperationProgress"
v40@0:8@16@24@?32
v40@0:8@"BLPurchaseManager"16@"NSDictionary"24@?<v@?@"NSString"@"NSError">32
v24@0:8@?16
v32@0:8@16@?24
v36@0:8@16B24@?28
v28@0:8B16@?20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"BLDownload"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v36@0:8@"NSDictionary"16B24@?<v@?@"NSString"@"NSError">28
v36@0:8@"NSArray"16B24@?<v@?@"NSArray"@"NSError">28
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?BBBB@"NSError">16
v24@0:8@?<v@?B@"NSError">16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BLDownloadManager"
@"BLBookInstallManager"
@"BLDatabaseManager"
@"BLPurchaseManager"
@"BLDownloadPolicyManager"
@"NSMutableDictionary"
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
v40@0:8@16@24@32
v32@0:8@16@24
@40@0:8@16@24@32
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@"NSData"
@"NSMutableString"
@20@0:8B16
v40@0:8@16q24@?32
v32@0:8@16q24
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
v48@0:8@16@24@32@?40
@"NSURL"
@"NSPersistentStoreCoordinator"
@"NSManagedObjectContext"
@"NSManagedObjectModel"
v48@0:8@16@24q32@40
v56@0:8@16@24q32@40[1{__va_list_tag=II^v^v}]48
@24@0:8@?16
v28@0:8@16B24
B48@0:8@16N^@24q32^@40
@28@0:8B16@20
B40@0:8@16^@24^@32
B56@0:8@16^@24^@32^@40^@48
@"NSError"
@"BLBookInstallInfo"
@24@0:8q16
@"NSArray"
@"BLFairplayDecryptSession"
@32@0:8@16^@24
@40@0:8@16@24^@32
@"SSDownloadPolicy"
B32@0:8@16@24
q24@0:8@16
q32@0:8@16q24
v32@0:8q16@24
B32@0:8@16q24
B40@0:8@16@24q32
@"NSObject<OS_dispatch_queue>"
i16@0:8
v20@0:8i16
@"NSSet"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@"BLBookInstallManager"16@"BLDownload"24
v40@0:8@"BLBookInstallManager"16@"BLBookInstallOperation"24@"NSString"32
v40@0:8@"BLBookInstallManager"16@"SSOperationProgress"24@"BLBookInstallOperation"32
v32@0:8@"BLBookInstallManager"16@"BLBookInstallOperation"24
@48@0:8@16@24@32@40
v40@0:8q16@24@?32
v40@0:8@16@24q32
@"ISOperationQueue"
@"<BLOSTransactionCoordinating>"
@"NSMutableSet"
@"NSMutableOrderedSet"
@"NSObject<OS_dispatch_source>"
@"NSMapTable"
@"BLDownloadPipelineQueue"
@40@0:8@16@24@?32
@?16@0:8
@"BLPrepareDownloadResponse"
@"BLDownloadPipeline"
@28@0:8@16i24
@"BLLibrary"
@"<BLCacheDeletePurgeableProvider>"
q24@0:8q16
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
B40@0:8@16@24^@32
q32@0:8@16@24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCache"16@0:8
@"NSNumber"16@0:8
d24@0:8@16
@"BLDownload"
@"BLDownloadDataConsumer"
@"NSURLRequest"
@40@0:8@16@24q32
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
v40@0:8@"NSOperation"16@"SSOperationProgress"24@"BLBookInstallInfo"32
B24@0:8q16
@"<BLBookInstallManagerProgressDelegate>"
@"NSFetchedResultsController"
@"NSOperationQueue"
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
q32@0:8@"NSString"16q24
@"SSDownloadQueue"
@32@0:8q16^@24
@"NSObject<OS_os_transaction>"
v44@0:8@16@24@32B40
@"<BLPurchaseManagerDelegate>"
@"ISDialog"
@"SSVDialogResponse"
@"<BLBookInstallOperationProgressDelegate>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"BLService"
@"BLCacheDeleteStorageManager"
@"NSXPCListener"
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
v32@0:8@16B24B28
@56@0:8@16@24@32q40@48
v32@0:8r*16q24
@(#)PROGRAM:bookassetd  PROJECT:BookLibrary-98.2
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>612006184</string>
<key>application-identifier</key>
<string>com.apple.bookassetd</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.bookassetd</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks.iTunesU</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks.iTunesU</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.stageSharedContent</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Media/Books/</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.media.shared.books</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>fairplay-client</key>
<string>1328318286</string>
</dict>
</plist>
