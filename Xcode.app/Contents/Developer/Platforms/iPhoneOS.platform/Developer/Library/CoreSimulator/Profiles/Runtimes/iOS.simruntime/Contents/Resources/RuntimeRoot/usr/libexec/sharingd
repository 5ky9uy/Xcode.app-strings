com.apple.Maps
SFAirDropActivitySubjectMapsLinkType
MAPS_LINK_CURRENT_LOCATION
MAPS_LINK_DIRECTIONS
MAPS_LINK_DROPPED_PIN
MAPS_LINK_POI
MAPS_LINK
fractionCompleted
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
clientPid
Ti,V_clientPid
clientBundleID
T@"NSString",C,V_clientBundleID
delegate
T@"<SDAirDropSessionDelegate>",W,V_delegate
v24@?0@"CMAccelerometerData"8@"NSError"16
v16@?0@"CMMotionActivity"8
v24@?0@"NSArray"8@"NSError"16
PUUseAccelerometerMotion
activateCalled
TB,N,V_activateCalled
invalidateCalled
TB,N,V_invalidateCalled
baseAccelerationSet
TB,N,V_baseAccelerationSet
accelerometerMotion
TB,N,V_accelerometerMotion
activityMotion
TB,N,V_activityMotion
motionTimer
T@"NSObject<OS_dispatch_source>",&,V_motionTimer
motionManager
T@"CMMotionManager",&,N,V_motionManager
activityManager
T@"CMMotionActivityManager",&,N,V_activityManager
baseAcceleration
T{?=ddd},N,V_baseAcceleration
motionDetected
TB,N,V_motionDetected
motionDetectedHandler
T@?,C,N,V_motionDetectedHandler
wristOnDate
T@"NSDate",C,N,V_wristOnDate
invalidationHandler
T@?,C,N,V_invalidationHandler
x:%f, y:%f, z:%f
%@ %@
version
sessionID
resetReason
errorString
hasVersion
TB,N
TI,N,V_version
hasSessionID
TI,N,V_sessionID
hasResetReason
TI,N,V_resetReason
hasErrorString
TB,R,N
T@"NSString",&,N,V_errorString
com.apple.AppStore
com.apple.TVAppStore
VIEW_BUTTON_TITLE
APP_LINK_WITH_TITLE
APP_LINK
com.apple.private.sharing.unlock-manager
This process does not have permission to perform this action
v24@?0@"NSSet"8@"NSError"16
v20@?0B8@"NSError"12
Enabling from the key side is not yet supported
Can not create a stash bag from this device
Unlock state is not supported from lock side
SFUnlockErrorDomian
application-identifier
bundleID
T@"NSString",C,N,V_bundleID
clientProxy
T@"<SFUnlockClientProtocol>",&,N,V_clientProxy
enableDevice
T@"SFAutoUnlockDevice",&,N,V_enableDevice
T@"<SDUnlockXPCSesssionDelegate>",&,V_delegate
DeviceName
StreamMessageVersion
StreamMessageType
SDStreamActivityIdentifier
Publishing:%@
Registered Activities:%d
Connected Streams:%ld
Could not set up internal streams
local.
v24@?0@"NSFileHandle"8@"NSError"16
Wi-Fi not enabled
v12@?0B8
service
T@"NSNetService",&,V_service
managers
T@"NSMutableDictionary",&,V_managers
companionServices
T@"NSMutableArray",&,V_companionServices
incomingStreams
T@"NSMutableArray",&,V_incomingStreams
continuationStreams
T@"NSMutableDictionary",&,V_continuationStreams
connectedStreams
Tq,V_connectedStreams
publishTimer
T@"NSTimer",&,V_publishTimer
serviceType
T@"NSString",&,V_serviceType
com.apple.mobileme.fmf1
FIND_MY_FRIENDS_TITLE
com.apple.mobilenotes
NOTE
identifier == %@
awdlTimer
T@"NSObject<OS_dispatch_source>",&,V_awdlTimer
awdlNetwork
T@,&,V_awdlNetwork
awdlStartFailed
TB,N,V_awdlStartFailed
awdlStarting
TB,N,V_awdlStarting
awdlTimerFired
TB,N,V_awdlTimerFired
currentRequest
T@"SDAutoUnlockWiFiRequest",&,V_currentRequest
locationManager
T@"CLLocationManager",&,N,V_locationManager
wifiRequestQueue
T@"NSMutableArray",&,N,V_wifiRequestQueue
messageType
receivedVersion
expectedVersion
hasMessageType
TI,N,V_messageType
hasReceivedVersion
TI,N,V_receivedVersion
hasExpectedVersion
TI,N,V_expectedVersion
SDAppleIDDatabaseManager
com.apple.sharing
com.apple.sharingd
-[SDAppleIDDatabaseManager _readAccountsInformation]
Reading accounts information from %@
AccountsVersion
Accounts version number: %lu.
No accounts version number.
Accounts
MetaInfo
Accounts=%@
MetaInfo=%@
-[SDAppleIDDatabaseManager _accountStateForAppleID:]
No account info for apple ID %@
No dsID for %@, probaby because use never logged in successfully
Certificate is pending for %@. Fetch date: %@
No identity object for AltDSID %@ (%@)
Certificate expired
Certificate status is invalid
Certificate not available for %@
Private key not available for %@
Time for identity renewal for %@
Validation Record for %@ needs update
Account
AccountState
NextCertificateFetchDate
LastValidationDate
RequiresUserAction
-[SDAppleIDDatabaseManager _accountStatusInfoForAllAppleIDs]
Failed to get account status info for %@
AccountStatuses
DirtyAccounts
LastConnectAttempt
LastSuccessfulConnect
-[SDAppleIDDatabaseManager _updateAccountInfoPrefs]
### Archived accounts is nil
Updated accounts info data in the local database
-[SDAppleIDDatabaseManager _addAppleID:needsCertificate:]
Added account for Apple ID %@ (%@)
updated existing
-[SDAppleIDDatabaseManager _addIdentity:forAppleID:]
### No account for %@
%s identity object for %@. New identity object is %@
Replaced
Added
Updated AltDSDID for %@ to %@
-[SDAppleIDDatabaseManager _addContactInfo:validationRecord:forAppleID:]
Added Contact Info %@ for %@
Added Validation Record %@ for %@
accounts
T@"NSMutableDictionary",&,N,V_accounts
defaultMetaInfo
T@"NSDictionary",R,N
metaInfo
T@"NSMutableDictionary",&,N,V_metaInfo
Unknown
CertificateOK
CertificateAssumedOK
CertificateShouldBeRenewed
CertificateMustBeRenewed
ValidationRecordNeedsUpdate
CertificatePending
CertificateExpired
CertificateRevoked
NoCertificate
PasswordInvalid
PasswordInaccessible
NoEncodedDSID
startTime
T@"NSDate",&,V_startTime
requestID
T@"NSString",&,V_requestID
remoteHotspotDevice
T@"SFRemoteHotspotDevice",&,V_remoteHotspotDevice
com.apple.news
NEWS_LINK
token
longTermKey
errorCode
failureReasons
ltkSyncing
watchOldLTKSyncStatus
watchNewLTKSyncStatus
ltkHash
hasToken
T@"NSData",&,N,V_token
hasLongTermKey
T@"NSData",&,N,V_longTermKey
hasErrorCode
TI,N,V_errorCode
hasFailureReasons
TI,N,V_failureReasons
hasLtkSyncing
TB,N,V_ltkSyncing
hasWatchOldLTKSyncStatus
Ti,N,V_watchOldLTKSyncStatus
hasWatchNewLTKSyncStatus
Ti,N,V_watchNewLTKSyncStatus
hasLtkHash
T@"NSData",&,N,V_ltkHash
SDAppleIDIdentityRequest
-[SDAppleIDIdentityRequest _activate]
### Already activated
### Object invalidated
Activate
-[SDAppleIDIdentityRequest _invalidate]
Invalidate
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseError:]
### Create Certificate request failed with error %@
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseWithInfo:error:]
Certificate Create Response: %@
AltDSID
CertificateToken
Delay
Invalid delay %d. Setting delay to %d seconds
-[SDAppleIDIdentityRequest _scheduleCreateRetryWithDelay:]
Scheduling create retry with delay %u seconds.
-[SDAppleIDIdentityRequest _scheduleFetchRetryWithDelay:]
Scheduling fetch retry with delay %u seconds.
-[SDAppleIDIdentityRequest _handleCertificateFetchResponseError:]
### Fetch Certificate request failed with error %#m
CertificateExpirationDate
CertificatePEM
CertificateSerialNumber
CertificateStatus
-[SDAppleIDIdentityRequest _handleCreateTimerFired]
Create timer fired
-[SDAppleIDIdentityRequest _handleFetchTimerFired]
Fetch timer fired
-[SDAppleIDIdentityRequest _handleReceivedCertificate]
### Certificate status %d/%@
### Certificate status %d/%@ isn't handled yet.
-[SDAppleIDIdentityRequest _scheduleCreateCertificateTaskWithDelay:]
### Create certificate task already scheduled
Start create certificate delay timer for %ld seconds
-[SDAppleIDIdentityRequest _scheduleFetchCertificateTaskWithDelay:]
### Fetch certificate task already scheduled
Start fetch certificate delay timer for %ld seconds
v20@?0@"NSDictionary"8i16
certificateToken
appleID
T@"NSString",R,N,V_appleID
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
responseHandler
T@?,C,N,V_responseHandler
Issued
Pending
Failed
Revoked
Expired
secret
pairingID
hasSecret
T@"NSData",&,N,V_secret
hasPairingID
T@"NSString",&,N,V_pairingID
com.apple.MobileAddressBook
CONTACT
v16@?0@"CUBluetoothDevice"8
-[SDDeviceAssetMonitor devicePaired:]
-[SDDeviceAssetMonitor deviceUnpaired:]
-[SDDeviceAssetMonitor downloadAssetsForDevice:]
v36@?0@"NSBundle"8@"NSString"16B24@"NSError"28
devices
T@"NSMutableSet",&,V_devices
T@"<SFCompanionServiceManagerClient>",&,V_clientProxy
streamHandlers
T@"NSMutableDictionary",&,V_streamHandlers
enabledServices
T@"NSMutableArray",&,V_enabledServices
companionStreams
T@"NSMutableArray",&,V_companionStreams
T@"NSString",&,V_bundleID
managerID
T@"NSString",R,V_managerID
, bundleID = %@
Connection timed out
Could not create message payload
Cannot send messages of these streams
 , expected = %d
Wrote more bytes than message contained
Zero bytes written for message
checkedCert
TB,V_checkedCert
shouldStop
TB,V_shouldStop
registeredStreams
TB,V_registeredStreams
bufferSpaceAvailable
TB,V_bufferSpaceAvailable
openTimer
T@"NSTimer",&,V_openTimer
client
TB,GisClient,V_client
streamError
T@"NSError",&,V_streamError
inputStream
T@"NSInputStream",&,V_inputStream
outputStream
T@"NSOutputStream",&,V_outputStream
outputStreamData
T@"NSMutableData",&,V_outputStreamData
byteIndex
Tq,V_byteIndex
outMessage
T@"NSMutableData",&,V_outMessage
messageQueue
T@"NSMutableArray",&,V_messageQueue
handlers
T@"NSMutableDictionary",&,V_handlers
bytesRead
Tq,V_bytesRead
inMessageLength
TI,V_inMessageLength
inMessage
T@"NSData",&,V_inMessage
inData
T@"NSMutableData",&,V_inData
inputState
TQ,V_inputState
loggedTransfer
TB,V_loggedTransfer
wroteToNetwork
Tq,V_wroteToNetwork
readFromNetwork
Tq,V_readFromNetwork
timeOpened
T@"NSDate",&,V_timeOpened
timeToOpen
T@"NSDate",&,V_timeToOpen
usingMessages
TB,V_usingMessages
shouldReadNetwork
TB,V_shouldReadNetwork
T@"<SDStreamHandlerDelegate>",W,V_delegate
com.apple.private.alloy.continuity.activity
@unionOfObjects.uniqueIDOverride
activityService
T@"IDSService",&,N,V_activityService
shouldStart
TB,N,V_shouldStart
allPeerBTIdentifiers
T@"NSArray",&,N,V_allPeerBTIdentifiers
T@"NSString",C,N,V_appleID
localID
ltkID
checkViewState
remoteDeviceID
needsLTK
remoteNeedsLTK
hasLocalID
T@"NSString",&,N,V_localID
hasLtk
T@"NSData",&,N,V_ltk
hasLtkID
T@"NSData",&,N,V_ltkID
hasCheckViewState
TB,N,V_checkViewState
hasRemoteDeviceID
T@"NSString",&,N,V_remoteDeviceID
hasNeedsLTK
TB,N,V_needsLTK
hasRemoteNeedsLTK
TB,N,V_remoteNeedsLTK
unlocked
onWrist
awdlInfo
unlockEnabled
cachedKeyExchangeData
usingAlwaysDirect
wristDetectDisabled
hasUnlocked
TB,N,V_unlocked
hasOnWrist
TB,N,V_onWrist
hasAwdlInfo
T@"NSData",&,N,V_awdlInfo
hasUnlockEnabled
TB,N,V_unlockEnabled
hasCachedKeyExchangeData
T@"NSData",&,N,V_cachedKeyExchangeData
hasUsingAlwaysDirect
TB,N,V_usingAlwaysDirect
hasWristDetectDisabled
TB,N,V_wristDetectDisabled
AutoUnlockCloudPairRetries
CloudPairGeneralRetryDate
CloudPairShortRetryDate
AutoUnlockLastSeenWatchDate
AutoUnlockWatchCurrentlyInList
AutoUnlockWatchExistedInUnlockList
com.apple.sharingd.auto-unlock.transport-client-queue
com.apple.sharingd.auto-unlock.transport-queue
com.apple.private.alloy.continuity.unlock
v32@?0@"NSString"8@"NSString"16^B24
watch
iphone
ipad
AUDeviceBlackList
Apple Watch
iPhone
iPad
%@ (%@)
5EAFD122-F291-4D56-B1F9-D856CBBC7E0C
Watch0,0
Watch OS
14S000
Placeholder
type:%d, sessionID:%ld, destinations:%@
v16@?0@"NSError"8
v20@?0C8@"NSData"12
AUShowIDInName
AUShowOtherDevices
AUDisableEncryption
-------------
Unlock IDS Devices
%''@, %@, %@, %@, BT=%@
No devices registered
idsService
T@"IDSService",&,N,V_idsService
transportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_transportQueue
clientQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_clientQueue
clientMap
T@"NSMapTable",&,N,V_clientMap
completionHandlers
T@"NSMutableDictionary",&,V_completionHandlers
sendIdentifierToSessionID
T@"NSMutableDictionary",&,N,V_sendIdentifierToSessionID
sendDates
T@"NSMutableDictionary",&,V_sendDates
outstandingPipeMessages
T@"NSMutableDictionary",&,N,V_outstandingPipeMessages
lastSendDate
T@"NSDate",&,N,V_lastSendDate
autoUnlockDeviceCache
T@"NSMutableDictionary",&,N,V_autoUnlockDeviceCache
cloudPairRetryRecords
T@"NSMutableDictionary",&,N,V_cloudPairRetryRecords
watchCurrentlyInList
T@"NSNumber",&,N,V_watchCurrentlyInList
lastSeenWatchDate
T@"NSDate",&,N,V_lastSeenWatchDate
watchExistedInUnlockList
T@"NSNumber",&,N,V_watchExistedInUnlockList
appleWatchExisted
watchSeenRecently
primaryClient
T@"<SDAutoUnlockTransportClient>",W,V_primaryClient
TRANSFER_FROM_IMPORT_FAILED_TEXT
CANCEL_BUTTON_TITLE
ICLOUD_DRIVE_BUTTON_TITLE
v16@?0@"SFAirDropAction"8
com.apple.DocumentsApp
action
T@"SFAirDropAction",R,N
BRUbiquitousDefaultContainerID
/System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
com.apple.VoiceMemos
VOICE_MEMO
voicememos://%@
canHandleTransferRegardlessOfBundleID
RCSavedRecordingsModel
/System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
Failed to create SDActivityAdvertiser
scanner
T@"SDActivityScanner",&,V_scanner
xpcConnection
T@"NSXPCConnection",&,V_xpcConnection
serviceManager
T@"SDServiceManager",&,V_serviceManager
advertiser
T@"SDActivityAdvertiser",&,V_advertiser
deviceStreamMap
T@"NSMutableDictionary",&,V_deviceStreamMap
unlockSessions
T@"NSMutableArray",&,V_unlockSessions
streamIdentifiers
T@"NSMutableArray",&,V_streamIdentifiers
T@"<SDConnectionManagerDelegate>",W,V_delegate
BluetoothAdvertiseScanVersionByte
BluetoothAdvertiseGoodByeDuration
Stopped
Skipping request for
UnexpectedState
Version Byte: %u
Goodbye Timer Interval: %.2f
Advertising Enabled: %@
Should Start: %@
Should Not Advertise Requesters: %@
Is Advertising: %@
Has Power Assertion:%@
Current Advertisement Payload: %@
Current Advertisement Options: %@
FrameworkBundleID
com.apple.Sharing
AssertType
PreventUserIdleSystemSleep
AssertName
Handoff
v24@?0C8[2C]12S20
UnexpectedType
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
remoteConnection
T@"<SFActivityAdvertiserClient>",&,V_remoteConnection
state
T@"NSString",R
Resetting
PoweredOff
PoweredOn
UAUserActivityIsForPairedDeviceOptionKey
/System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
Activity
TetheringTargetPresence
TetheringSourcePresence
Invalid
keyFailed
hasKey
T@"NSData",&,N,V_key
hasKeyFailed
TB,N,V_keyFailed
com.apple.sharingd.AutoFSChanged
autofs
map -fstab
map -static
Network
nodes
T@"NSArray",R,C
com.apple.InCallService
CALL_BUTTON_TITLE
PHONE_LINK
UNLOCK_WATCH_LOCKED_ON_WRIST
Watch Not On Wrist
Proxy trigger failed
activeConnection
TB,V_activeConnection
notified
TB,V_notified
invalidated
TB,V_invalidated
model
T@"NSString",C,N,V_model
proxyRSSI
Ti,N,V_proxyRSSI
proxyDiscoveryTime
Td,N,V_proxyDiscoveryTime
startDate
T@"NSDate",&,N,V_startDate
bleDevice
T@"SFBLEDevice",&,N,V_bleDevice
connectionTime
Td,N,V_connectionTime
Tq,N,V_state
-[SDAirDropReceiveManager listener:didReceiveNewRequest:]
NewOperation
AskUser
WaitForAnswer
Cancelled
Started
Preprocess
Progress
Postprocess
Finished
ErrorOccured
Connecting
Information
Conflict
Blocked
Converting
ServiceRef
QueryTimer
com.apple.finder
com.apple.sharing.AirDropPrivilegedInformation
v32@?0@8@16^B24
SDAirDropPeerMetric
%@.%@%@.%d
%@-%@
verifiable
unverifiable
BonjourBrowser
--------------
Mode:                                %@
mode
T@"NSString",C,V_sessionID
types
T@"NSArray",R,C,V_types
domain
virtualDomain
T@"<SDBonjourBrowserDelegate>",W,V_delegate
T@"NSObject<OS_xpc_object>",&,V_xpcConnection
transfersInitiated
Ti,V_transfersInitiated
transfersCompleted
Ti,V_transfersCompleted
Default
Low Power
One or None
hasRequestID
T@"NSString",&,N,V_requestID
SDUnlockLTKTransferPreventExitReason
SDUnlockSetupSessionPreventExitReason
<%@: %p, date:%@, on wrist:%@>
date
T@"NSDate",&,N,V_date
Waiting For Auth Token:%@
Other side never responded
Bad device identifier
Invalid password
PUDisableMotionCheck
Could not sign remote key
Could not step escrow session
Could not create escrow session
Missing information to created session
Could not step escrow record
Could not complete final step
Error occured on the lock side
v16@?0B8B12
com.apple.sharingd.lock-state
Failed to send to other device
inPosition
TB,V_inPosition
canRetrySetup
TB,V_canRetrySetup
T@"NSDate",&,V_wristOnDate
sentLockedState
TB,V_sentLockedState
enableTimer
T@"NSTimer",&,V_enableTimer
tempLongTermKey
T@"NSData",&,V_tempLongTermKey
checkingWristState
TB,V_checkingWristState
waitingForAuthToken
TB,V_waitingForAuthToken
sessionStartDate
T@"NSDate",&,V_sessionStartDate
passcode
T@"NSString",C,V_passcode
unlockSessionID
Tq,V_unlockSessionID
preventingExitForSetup
TB,V_preventingExitForSetup
onWristForCurrentSession
TB,V_onWristForCurrentSession
checkingWristAndMotionState
TB,V_checkingWristAndMotionState
longTermKeyTimer
T@"NSObject<OS_dispatch_source>",&,V_longTermKeyTimer
deviceOffWristForSessionID
Tq,V_deviceOffWristForSessionID
wristAndMotionTimer
T@"NSObject<OS_dispatch_source>",&,V_wristAndMotionTimer
positionSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_positionSemaphore
motionDetector
T@"SDUnlockMotionDetector",&,V_motionDetector
lastWakeGestureRecord
T@"SDUnlockWakeGestureRecord",&,V_lastWakeGestureRecord
enableHandler
T@?,C,V_enableHandler
wristAndMotionStateHandler
T@?,C,V_wristAndMotionStateHandler
success
hasSuccess
TB,N,V_success
com.apple.sharingd.nsxpc
xpcManagerListener
T@"NSXPCListener",&,V_xpcManagerListener
connections
T@"NSMutableArray",&,V_connections
contactsOnly
TB,V_contactsOnly
T@"<SDAirDropListenerDelegate>",W,V_delegate
jMiqevikb6QWeHOhvLsw6A
T@"<SDAirDropPublisherDelegate>",W,V_delegate
path
all interfaces
T@"NSURL",R,V_url
name
T@"NSString",R,V_name
type
T@"NSString",R,V_type
T@"NSString",R,V_domain
T@"NSString",&,V_path
hostName
T@"NSString",&,V_hostName
portNumber
T@"NSNumber",&,V_portNumber
T^{_DNSServiceRef_t=},R,V_service
error
Ti,R,V_error
T@"<SDBonjourResolverDelegate>",W,V_delegate
Pairing key session canceled
Timeout waiting for response from Mac
Timeout waiting for LTKs
Incorrect LTK
Failed to store escrow secret
Failed to create escrow secret
Failed to store session token
Failed to create session token
Could not complete step
No remote step data in message
Device locked
Request failure
Setup created response failed
waitingForUnlock
TB,V_waitingForUnlock
waitingForLTK
TB,V_waitingForLTK
requestedLTKForRemote
TB,V_requestedLTKForRemote
companionViewNotSyncing
TB,V_companionViewNotSyncing
companionNeedsUnlock
TB,V_companionNeedsUnlock
companionCurrentlySyncing
TB,V_companionCurrentlySyncing
canceled
TB,V_canceled
request
T@"SDUnlockSetupRequest",&,V_request
requestData
T@"NSData",&,N,V_requestData
com.apple.sharingd.ConnectedChanged
odiskNodes
airDropNodes
com.apple.sharingd.DomainsChanged
com.apple.iBooks
ITUNES_STORE_LINK_IBOOK
com.apple.mobilecal
CALENDAR
EKEventStore
/System/Library/Frameworks/EventKit.framework/EventKit
%@%@
IMG_%04u
v24@?0@"NSURL"8@"NSURL"16
createPKZip
file count zero
destination not writable
%@.bom
indexbom
copyResources
copyExtendedAttributes
createCPIO
sequesterResources
compressCPIO
gzip
extractPKZip
extractCPIO
auto
destination
T@"NSURL",C
sourceFiles
T@"NSArray",C,V_sourceFiles
senderName
T@"NSString",C,V_senderName
compressionType
T@"NSString",C,V_compressionType
skipReadableCheckFiles
T@"NSSet",C,V_skipReadableCheckFiles
shouldExtractImagesFromLivePhotos
TB,V_shouldExtractImagesFromLivePhotos
shouldConvertMediaFormats
TB,V_shouldConvertMediaFormats
T@"<SDAirDropFileZipperDelegate>",W,V_delegate
SDAppleIDUtilities
void GSTokenClearCacheForAppleID(NSString * _Nullable __strong)
Removing GS token cache entry for %@
Removing Account token cache entry for %@
com.apple.gs.authagent.auth
### Remove Account token cache entry for %@ failed: %@
void GSTokenClearCacheForAppleID(NSString * _Nullable __strong)_block_invoke
Saved Account '%@ for token remove
### Save Account %@ for token remove failed: %@
Removing all GS token cache entries
### Remove GS token cache entry failed: %d
altDSID
gsToken
void GSTokenForAppleID(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, GSTokenCompletion  _Nullable __strong)
Reusing cached altDSID and gstoken for %@
Reusing Account-cached altDSID and gstoken for %@
### aida_tokenForService failed altDSID=%d, accountToken=%d
### ACAccount <%@> doesn't respond to selector aida_tokenForService:
### account identifier is %@ for %@
Throttling request that's too soon after user cancel (%f)
Asking server for GS token for %@
void GSTokenForAppleID(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, GSTokenCompletion  _Nullable __strong)_block_invoke
AltDSID for %@: %@
GS token for %@: %@
### authenticateWithContext completion called with AltDSID = %@, token = %d
### Request GS token for %@ failed: %@
v24@?0@"NSDictionary"8@"NSError"16
### Request GS token for %@ failed: %d
%@:%@
ACAccount * _Nullable AccountForAppleID(NSString * _Nonnull __strong, OSStatus * _Nullable)
AccountForAppleID falling back to account aliases
### AccountForAppleID altDSIDForAccount:%@ returned nil
AccountForAppleID found account %@
com.apple.private.alloy.continuity.auth
com.apple.private.alloy.continuity.auth.classa
@unionOfObjects.uniqueID
SDUnlockSendDataClassClassD
SDUnlockSendDataClassClassA
T@"IDSService",&,V_idsService
idsServiceClassA
T@"IDSService",&,V_idsServiceClassA
errorHandlers
T@"NSMutableDictionary",&,V_errorHandlers
T@"<SDUnlockIDSControllerDelegate>",W,V_delegate
com.apple.itunesu
ITUNES_STORE_LINK_ITUNES_U
com.apple.mobilephone
VOICEMAIL
/AppleInternal/Applications/Sharing.app
Photos and Videos
Native Documents
Apple Store Links
Maps Links
Web Links
Documents
Links
Objects
One Image
Three Images
One Video
Two Images And One Video
One SVG Image
Single Person Vcard
Non English Vcard
Multi Person Vcard
Three Vcards
One Calendar Event
Two Calendar Events
One Pass
Two Passes
One Voice Memo
Two Voice Memos
One Text Document
Two Text Documents
iBook Link
Podcast Link
iTunes U Link
Music Link
Movie Link
TV Show Link
Audio Book Link
Ringtone Link
Maps Link
One Web Link
Three Web Links
One Web Link As String
One Web Link As Part Of Text Block
One PDF
Two PDFs
One Pages Document
Two Pages Documents
One PDF And One Pages Document
One Custom File
One Telephone Link
One Find My Friends Link
One Yelp Link
One Web Link And One Yelp Link
One iPhoto Link
One Pages Link
One Shared Keynote Live Link
One Shared Pages Link
One Shared Keynote Link
One Shared Numbers Link
Three Shared iCloud Documents Link
One String
Two Strings
One Attributed String
One Data Document
%ld.%ld
com.apple.sharingd.fake.transfer.
SFAirDropActivitySubjectMain
SFAirDropActivitySubjectiTunesStoreLinkType
@sum.fakeDuration
@sum.fakeBytes
com.apple.AirDrop
Files
%@-%@.%@
John's iPhone
john_doe86@icloud.com
John
7g63429g1d7d
John Doe
application/x-cpio
transferManager
T@"NSObject<SDAirDropAlertManager>",&,N,V_transferManager
debugModeEnabled
TB,N,V_debugModeEnabled
CompanionStreamConnectResponse
RequestAuthorData
com.apple.
_continuity._tcp.
Could not send request to other device
Could not create streams
Connection refused
Connection lost
Could not create connection, wireless not enabled
streamHandler
T@"SDStreamHandler",&,V_streamHandler
authorData
T@"NSData",&,V_authorData
initiator
TB,V_initiator
clientSent
TB,V_clientSent
clientReceived
TB,V_clientReceived
networkBufferSpaceAvailable
TB,V_networkBufferSpaceAvailable
netServiceBrowser
T@"NSNetServiceBrowser",&,V_netServiceBrowser
fileHandle
T@"NSFileHandle",R,V_fileHandle
clientInputStream
T@"NSInputStream",&,V_clientInputStream
clientOutputStream
T@"NSOutputStream",&,V_clientOutputStream
writeQueue
T@"NSObject<OS_dispatch_queue>",&,V_writeQueue
networkStreamData
T@"NSMutableData",&,V_networkStreamData
readQueue
T@"NSObject<OS_dispatch_queue>",&,V_readQueue
clientStreamData
T@"NSMutableData",&,V_clientStreamData
readFromClient
Tq,V_readFromClient
wroteToClient
Tq,V_wroteToClient
streamsRequestHandler
T@?,C,V_streamsRequestHandler
T@"<SDCompanionStreamDelegate>",W,V_delegate
identifier
T@"NSString",&,V_identifier
.jp2
iconData
T@,C,V_iconData
iconHash
T@"NSString",C,V_iconHash
netService
T@"NSNetService",&,V_netService
T@"<SDAirDropIconCacherDelegate>",W,V_delegate
BLE Peer disconnected
v16@?0@?<v@?B>8
Starting AWDL failed
v24@?0@"NSDictionary"8q16
AWDL Info Failure
Key failed
Exchange response missing key
Exchange response failed
Failed to generate ranging session token
Creating auth token failed
User denied authorization request
Error posting authorization request
Confirmation failed
Failed to serialized AWDL Info
AWDL info exchange failed
Exchange request failed
Proxy message failed
AutoUnlock-Key
TB,N,V_invalidated
sentAWDLInfo
TB,N,V_sentAWDLInfo
userRequestRequired
TB,N,V_userRequestRequired
sessionCompleted
TB,N,V_sessionCompleted
unlockAllowed
T@"NSNumber",&,N,V_unlockAllowed
errorRequestingUnlock
Ti,N,V_errorRequestingUnlock
powerAssertionID
TI,N,V_powerAssertionID
powerAssertionState
Ti,N,V_powerAssertionState
wifiRequestStartedHandler
T@?,C,N,V_wifiRequestStartedHandler
remoteCacheID
Tq,N,V_remoteCacheID
peerList
T@"NSArray",C,N,V_peerList
proxyRequestData
T@"NSData",C,N,V_proxyRequestData
Tq,N,V_type
aksCache
T@"SDAutoUnlockAKSCache",&,N,V_aksCache
assertionTimer
T@"NSObject<OS_dispatch_source>",&,N,V_assertionTimer
exchangeResponse
T@"SDUnlockSessionKeyExchangeResponse",&,N,V_exchangeResponse
awdlInfoCache
T@"SDAutoUnlockAWDLInfoCache",C,N,V_awdlInfoCache
autool
com.apple.preference.security.remoteservice
AutoUnlockPresentedBluetoothError
AutoUnlockPresentedWiFiError
com.apple.sharingd.auto-unlock.session-manager-queue
Disabled due to profile
Test Mode
AUScanTimeout
UNLOCK_INTERNET_SHARING
UNLOCK_EXPIRED_TEXT
Reached attempt limit
No enabled devices
SFAutoUnlockStateUnknown
SFAutoUnlockStateNotInProgress
SFAutoUnlockStateInProgress
SFAutoUnlockStateInProgressNoScan
Unexpected
Trigger Send Failed With Timeout
Unable to Find Proxy Watch
Pairing canceled
Missing authorization token
Proxied Apple Watch
Key device locked
v16@?0@"SFDevice"8
v20@?0@"SFDevice"8I16
AUBLEScanTimeout
Apple Watch Not Found
AUWatchAlwaysAdvertises
v20@?0@"SDAutoUnlockSessionWrapper"8B16
AutoUnlock-ProxyTrigger
AUUseAKSCache
AUUseAWDLCache
UNLOCK_WLAN_BLUETOOTH_DISABLED
UNLOCK_WIFI_BLUETOOTH_DISABLED
UNLOCK_BLUETOOTH_DISABLED
UNLOCK_WLAN_DISABLED
UNLOCK_WIFI_DISABLED
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
Auto Unlock State End
Auto Unlock State
Current Date: %@
Ranging Supported: %@
Model Identifier: %@
Device Has Passcode: %@
Unlocked: %@
Lock State Changed: %@
Paired Watch Unlocked: %@
Paired Watch On Wrist: %@
Paired Watch Unlock Enabled: %@
Paired Watch Wrist Detect Disabled: %@
Proxy Advertising Enabled: %@
Watch Info Received: %@
Advertising Changed Date: %@
Nearby: %@
Nearby Devices Changed Date: %@
stateHandle
TQ,N,V_stateHandle
T@"NSDictionary",C,N,V_awdlInfo
sessionManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionManagerQueue
observerTable
T@"NSHashTable",&,N,V_observerTable
suggestionManager
T@"SDAutoUnlockSuggestionManager",&,N,V_suggestionManager
deviceIDToEnableHandlers
T@"NSMutableDictionary",&,N,V_deviceIDToEnableHandlers
lockAuthSessions
T@"NSMutableDictionary",&,N,V_lockAuthSessions
canceledPairingKeySessions
T@"NSMutableArray",&,N,V_canceledPairingKeySessions
canceledAuthLockSessions
T@"NSMutableArray",&,N,V_canceledAuthLockSessions
keyAuthSessions
T@"NSMutableDictionary",&,N,V_keyAuthSessions
lockPairingSessions
T@"NSMutableDictionary",&,N,V_lockPairingSessions
keyPairingSessions
T@"NSMutableDictionary",&,N,V_keyPairingSessions
proxySessions
T@"NSMutableDictionary",&,N,V_proxySessions
locksWithAKSTokens
T@"NSMutableArray",&,N,V_locksWithAKSTokens
keysWithAKSTokens
T@"NSMutableArray",&,N,V_keysWithAKSTokens
serviceClients
T@"NSMutableSet",&,N,V_serviceClients
watchUnlockEnabled
TB,N,V_watchUnlockEnabled
watchUnlocked
TB,N,V_watchUnlocked
watchOnWrist
TB,N,V_watchOnWrist
watchWristDetectDisabled
TB,N,V_watchWristDetectDisabled
previousMacAddressData
T@"NSData",&,N,V_previousMacAddressData
cachedKeyExchangeRequests
T@"NSMutableDictionary",&,N,V_cachedKeyExchangeRequests
companionAWDLInfoCache
T@"SDAutoUnlockAWDLInfoCache",&,N,V_companionAWDLInfoCache
waitingForWatchInfo
TB,N,V_waitingForWatchInfo
previousNearbyState
TB,N,V_previousNearbyState
nearbyPushTimer
T@"NSObject<OS_dispatch_source>",&,N,V_nearbyPushTimer
attemptStart
T@"NSDate",&,N,V_attemptStart
extendedTimer
TB,N,V_extendedTimer
T@"SFDeviceDiscovery",&,N,V_scanner
attemptDevice
T@"SFAutoUnlockDevice",&,N,V_attemptDevice
attemptType
Tq,N,V_attemptType
scanTimer
T@"NSObject<OS_dispatch_source>",&,N,V_scanTimer
proxyDiscoverTime
Td,N,V_proxyDiscoverTime
notifiedForProxy
TB,N,V_notifiedForProxy
scanErrorString
T@"NSString",&,N,V_scanErrorString
authSessionError
T@"NSError",&,N,V_authSessionError
proxyErrorCode
Tq,N,V_proxyErrorCode
proxyDeviceModel
T@"NSString",&,N,V_proxyDeviceModel
lastProxyState
Tq,N,V_lastProxyState
proxyConnectionTime
Td,N,V_proxyConnectionTime
proxyNotAvailableForUnlock
TB,N,V_proxyNotAvailableForUnlock
scanAutoUnlockDevices
T@"NSSet",&,N,V_scanAutoUnlockDevices
scanWatchIDs
T@"NSSet",&,N,V_scanWatchIDs
scanPhoneIDs
T@"NSSet",&,N,V_scanPhoneIDs
aggresiveProxyAdvertising
TB,N,V_aggresiveProxyAdvertising
aggressiveAdvertisingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_aggressiveAdvertisingTimer
proxyTriggerAssertionID
TI,N,V_proxyTriggerAssertionID
proxyTriggerAssertionState
Ti,N,V_proxyTriggerAssertionState
macBeenUnlocked
TB,N,V_macBeenUnlocked
attemptCount
Tq,N,V_attemptCount
attemptID
T@"NSString",&,N,V_attemptID
incrementedCountID
T@"NSString",&,N,V_incrementedCountID
connectedBluetoothDevices
Tq,N,V_connectedBluetoothDevices
timeSinceLastMachineWake
Tq,N,V_timeSinceLastMachineWake
lastSleepType
Tq,N,V_lastSleepType
eligibleDevices
T@"NSSet",&,N,V_eligibleDevices
wifiErrorCount
Tq,N,V_wifiErrorCount
bluetoothErrorCount
Tq,N,V_bluetoothErrorCount
presentedBluetoothError
TB,N,V_presentedBluetoothError
presentedWiFiError
TB,N,V_presentedWiFiError
currentlyAdvertising
TB,N,V_currentlyAdvertising
advertisingChangedDate
T@"NSDate",&,N,V_advertisingChangedDate
receivedWatchInfoDate
T@"NSDate",&,N,V_receivedWatchInfoDate
wristStateChangedDate
T@"NSDate",&,N,V_wristStateChangedDate
lockStateChangedDate
T@"NSDate",&,N,V_lockStateChangedDate
nearbyDeviceChangedDate
T@"NSDate",&,N,V_nearbyDeviceChangedDate
pipeConnectionChangedDate
T@"NSDate",&,N,V_pipeConnectionChangedDate
previousConnectedState
TB,N,V_previousConnectedState
waitingForCompanionResponse
TB,N,V_waitingForCompanionResponse
cachedWiFiState
TB,N,V_cachedWiFiState
preventRadarNotification
TB,N,V_preventRadarNotification
T@"NSString",C,N,V_state
attemptInProgress
TB,N,V_attemptInProgress
watchAWDLInfoCache
T@"SDAutoUnlockAWDLInfoCache",&,N,V_watchAWDLInfoCache
DismissOnLock
com.apple.sharingd.ClassroomChanged
SFClassroomPersonID
SFClassroomDelegate
SFClassroomProgress
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-933.1/Daemon/SDClassroomBrowser.m
<Unknown File>
node and shareTarget count not matching
T@"NSArray",C,V_nodes
CRKShareTargetBrowser
/System/Library/PrivateFrameworks/ClassroomKit.framework/ClassroomKit
com.apple.Passbook
PASS_WITH_TITLE
PASS
v16@?0q8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-933.1/Daemon/SDAirDropHandlerWalletItems.m
%@ not supported on this platform
PKPassLibrary
/System/Library/Frameworks/PassKit.framework/PassKit
PKAddPassesViewController
PKPass
clRangingPeer
T@"_CLRangingPeer",&,N,V_clRangingPeer
macAddressData
T@"NSData",&,N,V_macAddressData
Activate failed with invalid parameters
T@"NSDictionary",&,N,V_awdlInfo
T@"NSString",R,C,N,V_identifier
rangingIntiator
TB,N,V_rangingIntiator
rangingPeer
T@"SDAutoUnlockRangingPeer",&,N,V_rangingPeer
wifiRangingError
T@"NSError",&,N,V_wifiRangingError
wifiRangingResults
T@"NSArray",&,N,V_wifiRangingResults
queueAvailableHandler
T@?,C,N,V_queueAvailableHandler
awdlStartedHandler
T@?,C,N,V_awdlStartedHandler
rangingStartedHandler
T@?,C,N,V_rangingStartedHandler
rangingCompletedHandler
T@?,C,N,V_rangingCompletedHandler
rangeable
TB,N,V_rangeable
calledAWDLStarted
TB,N,V_calledAWDLStarted
rangingStarted
TB,N,V_rangingStarted
waitingForNetworkToDisable
TB,N,V_waitingForNetworkToDisable
com.apple.sharingd.ManagedChanged
AirDrop
BonjourBrowse
BonjourAdvertise
Start
Stop
com.apple.airdrop.transfer.sender.succeeded
com.apple.airdrop.transfer.sender.failed
com.apple.airdrop.transfer.sender.error.
com.apple.airdrop.transfer.sender.id.
com.apple.airdrop.transfer.receiver.succeeded
com.apple.airdrop.transfer.receiver.failed
com.apple.airdrop.transfer.receiver.error.
com.apple.airdrop.transfer.receiver.id.
com.apple.airdrop.transfer.throughput
com.apple.airdrop.transfer.numberoffiles
com.apple.airdrop.transfer.uti.
com.apple.airdrop.discovery.timetofirst
com.apple.airdrop.discovery.maxservices
com.apple.airdrop.discovery.level
3rd-party
_cat
TransferResult
sender
bytesPerSec
@"AWDSharingAirDropTransferResult"8@?0
%@%@.%ld
errorDomain
TimeSpent
time
TransferredCount
count
PeerDiscoveryInfo
browserID
modelName
btDiscoveryMs
bonjourDiscoveryMs
bonjourTXTDiscoveryMs
bonjourResolveMs
tcpConnMs
tlsHandMs
idQueryMs
totalDiscoveryMs
verifiableID
awdlVersion
platform
rssi
@"AWDSharingAirDropPeerDiscoveredInfo"8@?0
SessionInfo
start
duration
firstDiscovery
totalPeers
maxPeers
transfersCount
transfersCompletedCount
legacy
discoveryLevel
@"AWDSharingAirDropSessionInfo"8@?0
ActivityType
activityType
No user action
@"AWDSharingSheetActivityType"8@?0
awdl0
### BEGIN: %@ #########################
##### END: %@ #########################
discovery
errorType
ConnectBack
bytesTransferred
escrowFirstStep
tokenFirstStep
escrowSessionID
tokenSessionID
hasEscrowFirstStep
T@"NSData",&,N,V_escrowFirstStep
hasTokenFirstStep
T@"NSData",&,N,V_tokenFirstStep
hasEscrowSessionID
TI,N,V_escrowSessionID
hasTokenSessionID
TI,N,V_tokenSessionID
com.apple.sharingd.abort-reason.send.request
com.apple.sharingd.abort-reason.send.response
com.apple.sharingd.abort-reason.response.timeout
Unlock Enabled:%@
Local Long Term Key Exists:%@
Remote Long Term Key Exists:%@
Device Key Bag State:%ld
AKS Key Bag State:%d
Device Nearby:%@
Setup AKS Session ID:%ld
Unlock AKS Session ID:%ld
Stash AKS Session ID:%ld
Nano Registry State:%d
Device Paired:%@
unlockTimer
T@"NSObject<OS_dispatch_source>",&,V_unlockTimer
setupAuthSession
Tq,V_setupAuthSession
unlockAuthSession
Tq,V_unlockAuthSession
stashBagSession
Tq,V_stashBagSession
idsController
T@"SDUnlockIDSController",&,V_idsController
securityManager
T@"SDUnlockSecurityManager",&,V_securityManager
Not Enough Space
T@"NSString",R,N
errorDetailedString
Pages
com.apple.Pages
Numbers
com.apple.Numbers
Keynote
com.apple.Keynote
IWORK_LINK_WITH_TITLE
IWORK_LINK
OPEN_WITH_APP_TEXT
GENERIC_FILE_WITH_TITLE
GENERIC_FILE
ACCEPT_BUTTON_TITLE
availableApplications
T@"NSArray",C,N,V_availableApplications
selectedApplication
T@"LSBundleProxy",&,N,V_selectedApplication
message/requestIdentifier:%@, deviceIdentifier:%@, requestCreated:%@, hasCompletionHandler:%@, _timeoutTimer:%@, error:%@
requestCreatedDate
T@"NSDate",R,C,N,V_requestCreatedDate
requestIdentifier
T@"NSUUID",C,N,V_requestIdentifier
deviceIdentifier
T@"NSString",C,N,V_deviceIdentifier
completionHandler
T@?,C,N,V_completionHandler
timeoutTimer
T@"NSTimer",&,N,V_timeoutTimer
T@"NSError",&,N,V_error
<%@: %p, previousKeyIdentifier:%@, canDoCloudRequest:%@, retryCount:%d, %@>
previousKeyIdentifier
T@"NSUUID",&,N,V_previousKeyIdentifier
canDoCloudRequest
TB,N,V_canDoCloudRequest
retryCount
TQ,N,V_retryCount
timeSinceLastRequest
Td,N,V_timeSinceLastRequest
<%@: %p, advertisementPayload:%@, command:%@, %@>
advertisementPayload
T@"NSData",C,N,V_advertisementPayload
command
T@"NSString",C,N,V_command
<%@: %p, messageIdentifier:%@, requestIdentifier:%@, activityIdentifier:%@, deviceIdentifier:%@>
messageIdentifier
T@"NSUUID",C,N,V_messageIdentifier
activityIdentifier
T@"NSUUID",C,N,V_activityIdentifier
kind
T@"NSString",R,C,V_kind
objectKey
T@"NSString",C,V_objectKey
boostMessage
T@"NSObject<OS_xpc_object>",&,V_boostMessage
T@"<SDNetworkBrowserDelegate>",W,V_delegate
connection
T@"NSObject<OS_xpc_object>",&,V_connection
SFNodeError
flags
T@"NSNumber",C,V_flags
protocol
T@"NSString",C,V_protocol
T@"<SDNetworkEjecterDelegate>",W,V_delegate
%@(%d)
sd_description
sd_connectionBundleID
AUUseTestAuthPromptInfo
Value
Continuity Unlock
Continuity
com.apple.ContinuityUnlock
observers
T@"NSHashTable",&,V_observers
promptInfo
T@"NSDictionary",&,V_promptInfo
notificationTimer
T@"NSObject<OS_dispatch_source>",&,V_notificationTimer
radarNotificationCompletion
T@?,C,V_radarNotificationCompletion
KEYNOTE_LIVE_DOCUMENT_LINK
activities
T@"NSMutableArray",&,V_activities
T@"<SDNetworkOperationDelegate>",W,V_delegate
<%@: %p, deviceUniqueID:%@, hasKey:%@, lastReceivedAdvertisementDate:%@>
Failed to decrypt advertisement
v24@?0@"NSData"8@"NSError"16
lastUsedKeyIdentifier
T@"NSUUID",&,N,V_lastUsedKeyIdentifier
decryptionKey
T@"SDActivityDecryptionKey",R,N
lastAdvertisementData
T@"NSData",R,C,N,V_lastAdvertisementData
lastActivityAdvertisement
T{?=CCCCCCCCCCCCCC},R,N
lastCounter
TS,R,N
lastAdvertisementPayload
T@"NSData",R,C,N
lastAdvertisementOptions
T@"NSDictionary",R,C,N
idsDevice
T@"IDSDevice",&,N,V_idsDevice
deviceTracked
TB,N,V_deviceTracked
disableDuplicateFilterOnce
TB,N,V_disableDuplicateFilterOnce
lastRawAdvertisementData
T@"NSData",R,C,N,V_lastRawAdvertisementData
clientAdvertisement
T@"SFActivityAdvertisement",R,N
T@"<SDNetworkResolverDelegate>",W,V_delegate
Sharing
StreamID
DisableAWDL
Expect
User-Agent
Connection
Content-Type
pkzip
dvzip
close
100-continue
application/zip
application/x-dvzip
application/octet-stream
text/xml
POST
adVN
adVF
adVT
adDT
adCC
cname
phash
ehash
nhash
comment
ecolor
osxvers
com.apple.sharingd.NetAuthSessionDone
file-read-data
 %ld
@me.com
@mac.com
%@@icloud.com
%#{pid}
%@.%@%@
/Developer/Library/PreferenceBundles/Developer Settings.bundle
IPA_WITH_TITLE
INSTALL_BUTTON_TITLE
q24@?0@8@16
All...
sidebarNodes
T@"<SDNodeBrowserDelegate>",W,V_delegate
accepted
declined
unknown
user
computer
askID
askToken
askStatus
askDevice
ods-ask
ods-ask-info
ods-ask-status
ods-ask-cancel
ODSClient/1.0
T@"NSNumber",C,V_askID
T@"NSString",C,V_askToken
T@"NSString",C,V_askStatus
T@"NSString",C,V_askDevice
T@"NSString",C,V_hostName
T@"NSNumber",C,V_portNumber
T@"<SDRemoteDiscDelegate>",W,V_delegate
com.apple.sharingd.ODisksChanged
com.apple.sharingd.BonjourChanged
com.apple.sharingd.WindowsChanged
com.apple.sharingd.AirDropChanged
com.apple.sharingd.AirDropStatusChanged
NeighborhoodName
Count
Browser
One Or None
ServerBrowser
Bonjour Browsers:
Domain:                              %@
AirDrop Browsers:
Windows Browsers:
ODisk Browsers:
com.apple.CloudKit.ShareBear
keynote
SHARED_KEYNOTE_DOCUMENT_LINK
numbers
SHARED_NUMBERS_DOCUMENT_LINK
pages
SHARED_PAGES_DOCUMENT_LINK
SHARED_ICLOUD_DOCUMENT_LINK
recordData
T@"NSData",&,V_recordData
T^{_DNSServiceRef_t=},V_service
networkProtocol
T@"NSString",&,V_networkProtocol
browser
T@"SDSharePointBrowser",W,V_browser
Protocol
DiskFlags
DiskType
DiskID
WebDAV
serverURL
T@"NSURL",&,V_serverURL
protocols
T@"NSArray",&,V_protocols
userName
T@"NSString",&,V_userName
T@"NSString",&,V_protocol
typeIdentifier
T@"NSString",&,V_typeIdentifier
shouldNotify
TB,R,V_shouldNotify
fileNodes
T@"NSArray",R
printerNodes
URLMountSession
T^v,R
T^{_DNSServiceRef_t=},R,V_connection
connectionState
Ti,R,V_connectionState
T@"<SDSharePointBrowserDelegate>",W,V_delegate
timestamp
hasTimestamp
TQ,N,V_timestamp
T@"NSString",&,N,V_sessionID
hasActivityType
T@"NSString",&,N,V_activityType
com.apple.coreservices.appleidauthagent
createCertificate
fetchCertificate
getMyInfo
SDAppleIDServerTask
-- SDAppleIDServerTask --
serialNumber
clientAidvrId
-[SDAppleIDServerTask _isTaskInfoValid]
### Unhandled type %d
-[SDAppleIDServerTask url]
URL for task type %@: %@
-[SDAppleIDServerTask urlRequest]
JSON Serialization of the URL Request body failed with error %@
-[SDAppleIDServerTask _activate]
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
-[SDAppleIDServerTask _handleGSTokenIsAvailable]
Sending %@ server task
HTTP Headers: %@
Body: %@
-[SDAppleIDServerTask _handleServerError:]
### Server error %d means server bug. Report to server folks
### Unhandled server error: %d
-[SDAppleIDServerTask _invalidate]
-[SDAppleIDServerTask _handleTaskResponse:withData:error:]
### %@ server task failed with error %#m
### No response object
Received %@ server task reponse with status %ld
Response: %@
### No data object
### No response JSON. Response status code %d, response %@
Response info: %@
responseCode
responseMessage
### Response error %ld (%@)
altDsId
-[SDAppleIDServerTask _parseCreateCertificateResponse:]
### No altDSID
certificate
### No certificate info
### No certificate token 
delay
Received Create Certificate response: altDSID=%@, certToken=%@, suggestedDelay=%@
-[SDAppleIDServerTask _parseFetchCertificateResponse:]
### No certificate token
status
expiryDate
### No certificate expiration date. Will set to 6 months from now.
### Failed to create expiration date
### No certificate PEM
### No certificate serial number
-[SDAppleIDServerTask _parseGetMyInfoResponse:]
Received Get My Info Certificate Info: token=%@, expirationDate=%@, serial number=%@, status=%@
firstName
lastName
validatedEmails
validatedPhones
aidvr
serverAidvrId
validAsOf
suggestValidDuration
Received Get My Info response: AltDSID=%@, Firstname=%@, LastName=%@, Emails=%@, Phones=%@, Validation Record: identifier=%@,version=%@, startDate=%@, suggestedInterval=%@
<NULL>
Validation Record Data (base64)=%@
FirstName
LastName
ValidatedEmails
ValidatedPhones
ValidationRecordData
ValidationRecordDataID
ValidationRecordStartDate
ValidationRecordSuggestedValidInterval
Version
-[SDAppleIDServerTask _parseServerResponse:]
v28@?0@"NSString"8@"NSString"16i24
activated
TB,N,V_activated
T@"NSString",&,N,V_gsToken
session
T@"NSURLSession",&,N,V_session
taskInfo
T@"NSDictionary",R,N,V_taskInfo
Tq,R,N,V_type
Create Certificate
Fetch Certificate
Get My Info
issued
pending
failed
revoked
expired
com.apple.MobileStore
com.apple.Music
ITUNES_STORE_LINK_MUSIC
ITUNES_STORE_LINK_MOVIE
ITUNES_STORE_LINK_TV_SHOW
ITUNES_STORE_LINK_AUDIOBOOK
ITUNES_STORE_LINK_RINGTONE
ITUNES_STORE_LINK
macAddress
discoveryMetric
masterChannel
preferredChannel
channelFlags
extraInfoData
hasMacAddress
T@"NSData",&,N,V_macAddress
hasDiscoveryMetric
TI,N,V_discoveryMetric
hasMasterChannel
TI,N,V_masterChannel
hasPreferredChannel
TI,N,V_preferredChannel
hasChannelFlags
TI,N,V_channelFlags
hasExtraInfoData
T@"NSData",&,N,V_extraInfoData
keyDeviceModel
usingProxy
bleKeyDiscoveryTime
bleProxyDiscoveryTime
bleAWDLInfoExchangeTime
bleKeyRequestExchangeTime
bleAuthTokenExchangeTime
awdlBringUpTime
awdlPeerDiscoveryTime
awdlRangingTime
bleConfirmationTime
totalUnlockTime
unlockSucceeded
distance
keyBluetoothRSSI
proxyBluetoothRSSI
withinRange
bleProxyConnectionTime
bleKeyConnectionTime
usingTool
cancelTime
clamshellClosed
bluetoothConnectedDevices
timeIntervalSinceLastWake
externalDisplay
displayWaitTime
clamshellWaitTime
timeIntervalSinceLastDarkWake
cancelReason
watchBuildVersion
watchOSVersion
hasKeyDeviceModel
T@"NSString",&,N,V_keyDeviceModel
hasProxyDeviceModel
hasUsingProxy
TB,N,V_usingProxy
hasBleKeyDiscoveryTime
TI,N,V_bleKeyDiscoveryTime
hasBleProxyDiscoveryTime
TI,N,V_bleProxyDiscoveryTime
hasBleAWDLInfoExchangeTime
TI,N,V_bleAWDLInfoExchangeTime
hasBleKeyRequestExchangeTime
TI,N,V_bleKeyRequestExchangeTime
hasBleAuthTokenExchangeTime
TI,N,V_bleAuthTokenExchangeTime
hasAwdlBringUpTime
TI,N,V_awdlBringUpTime
hasAwdlPeerDiscoveryTime
TI,N,V_awdlPeerDiscoveryTime
hasAwdlRangingTime
TI,N,V_awdlRangingTime
hasBleConfirmationTime
TI,N,V_bleConfirmationTime
hasTotalUnlockTime
TI,N,V_totalUnlockTime
hasUnlockSucceeded
TB,N,V_unlockSucceeded
hasErrorType
TI,N,V_errorType
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasFlags
TI,N,V_flags
hasDistance
TI,N,V_distance
hasKeyBluetoothRSSI
Ti,N,V_keyBluetoothRSSI
hasProxyBluetoothRSSI
Ti,N,V_proxyBluetoothRSSI
hasWithinRange
TB,N,V_withinRange
hasBleProxyConnectionTime
TI,N,V_bleProxyConnectionTime
hasBleKeyConnectionTime
TI,N,V_bleKeyConnectionTime
hasUsingTool
TB,N,V_usingTool
hasCancelTime
TI,N,V_cancelTime
hasClamshellClosed
TB,N,V_clamshellClosed
hasBluetoothConnectedDevices
TI,N,V_bluetoothConnectedDevices
hasTimeIntervalSinceLastWake
Ti,N,V_timeIntervalSinceLastWake
hasLastSleepType
Ti,N,V_lastSleepType
hasExternalDisplay
TB,N,V_externalDisplay
hasDisplayWaitTime
TI,N,V_displayWaitTime
hasClamshellWaitTime
TI,N,V_clamshellWaitTime
hasTimeIntervalSinceLastDarkWake
Tq,N,V_timeIntervalSinceLastDarkWake
hasCancelReason
Ti,N,V_cancelReason
hasAttemptType
TI,N,V_attemptType
hasWatchBuildVersion
T@"NSString",&,N,V_watchBuildVersion
hasWatchOSVersion
T@"NSString",&,N,V_watchOSVersion
Code
Domain
UserInfo
Children
Sidebar
Node
Error
Events
Operation
Results
Function
Create
Kind
OpenNode
Flags
CloseNode
AddNode
RemoveNode
SetMode
Mode
Resume
SetProperty
Name
Object
v16@?0@"NSObject<OS_xpc_object>"8
SharingDaemon State End
SharingDaemon State
CUPairingDaemon
com.apple.sharingd.daemon.started
WILL_TURN_ON_BLUETOOTH_AND_WLAN_TITLE
WILL_TURN_ON_BLUETOOTH_TITLE
WILL_TURN_ON_WLAN_TITLE
TURN_ON_BUTTON_TITLE
v12@?0i8
T@"<SDAirDropControllerDelegate>",W,V_delegate
No password
View not syncing
Pairing lock session canceled
AUGenerateNoPasscode
AUGenerateNoWristDetection
AUGenerateNoCommunication
Request timeout
Timeout waiting for response to initial request
Timeout waiting for response to token exchange request
Could not setup escrow session
Invalid AKS session
Auto Unlock: Missing information for escrow session (has token = %@, token = %@)
Pairing response missing companion device ID
Finalizing pairing failed
Final step failed
Auto Unlock: Creating escrow record failed (error code: %d)
Record failure
Unlock not enabled after pairing
Setup request failed
UNLOCK_IPHONE_UNLOCK_TITLE
UNLOCK_IPHONE_UNLOCK_BODY
UNLOCK_KEYCHAIN_MISMATCH_TITLE
UNLOCK_KEYCHAIN_MISMATCH_BODY
UNLOCK_INTERNET_SHARING_SETUP_TITLE
UNLOCK_INTERNET_SHARING_SETUP_BODY
UNLOCK_FAILED_COMMUNICATION_TITLE
UNLOCK_FAILED_COMMUNICATION_KEY_SYNC_BODY
UNLOCK_WATCH_NOT_SIGNED_IN_TITLE
UNLOCK_WATCH_NOT_SIGNED_IN_BODY
UNLOCK_MAC_NOT_SIGNED_IN_TITLE
UNLOCK_MAC_NOT_SIGNED_IN_BODY
[Internal] Bluetooth cloud pairing in progress.
Auto Unlock can't be set up when your Mac is bluetooth cloud pairing to your Apple Watch. Please try again later.
UNLOCK_WATCH_LOCKED_TITLE
UNLOCK_WATCH_LOCKED_BODY
UNLOCK_IPHONE_SIGN_IN_TITLE
UNLOCK_IPHONE_SIGN_IN_BODY
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_TITLE
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_BODY
UNLOCK_WRIST_DETECTION_REQUIRED_TITLE
UNLOCK_WRIST_DETECTION_REQUIRED_BODY
UNLOCK_PASSCODE_REQUIRED_TITLE
UNLOCK_PASSCODE_REQUIRED_BODY
UNLOCK_FAILED_COMMUNICATION_BODY
UNLOCK_OLD_PROTOCOL_TITLE
UNLOCK_OLD_PROTOCOL_BODY
UNLOCK_NEW_PROTOCOL_TITLE
UNLOCK_NEW_PROTOCOL_BODY
sendState
Tq,N,V_sendState
companionDeviceModel
T@"NSString",&,N,V_companionDeviceModel
setupError
T@"NSError",&,N,V_setupError
keyDeviceLocked
TB,N,V_keyDeviceLocked
TB,N,V_canceled
ltkTimer
T@"NSObject<OS_dispatch_source>",&,N,V_ltkTimer
waitingForCloudPairing
TB,N,V_waitingForCloudPairing
Tq,N,V_errorType
sessionCreatedMessage
T@"SDUnlockSetupSessionCreated",&,N,V_sessionCreatedMessage
responseTimeout
Tq,N,V_responseTimeout
responseTimeoutFromServer
Tq,N,V_responseTimeoutFromServer
messageTimeout
Tq,N,V_messageTimeout
messageTimeoutFromServer
Tq,N,V_messageTimeoutFromServer
ltkTimerRetryCount
Tq,N,V_ltkTimerRetryCount
keyExchangeDate
T@"NSDate",&,N,V_keyExchangeDate
tokenExchangeDate
T@"NSDate",&,N,V_tokenExchangeDate
keyExchangeInterval
Td,N,V_keyExchangeInterval
tokenExchangeInterval
Td,N,V_tokenExchangeInterval
remoteLTKHash
T@"NSData",&,N,V_remoteLTKHash
Tq,N,V_watchOldLTKSyncStatus
Tq,N,V_watchNewLTKSyncStatus
receivedSetupACK
TB,N,V_receivedSetupACK
receivedTokenACK
TB,N,V_receivedTokenACK
setupMessageIdentifier
T@"NSString",&,N,V_setupMessageIdentifier
tokenMessageIdentifier
T@"NSString",&,N,V_tokenMessageIdentifier
T@"NSString",C,N,V_passcode
upsellDevice
TB,N,V_upsellDevice
setupRetryDevice
TB,N,V_setupRetryDevice
placeholder
TB,N,V_placeholder
AWDL info retrieval failed
 with wrapper %@
Encryption failed
Ranging Timeout
 (%ld)
AUUseRangingKey
AutoUnlockUseCoreLocation
DisableRanging
useRealRangingKey
useAKSToken
TB,N,V_useAKSToken
inRange
TB,N,V_inRange
shouldUnlock
TB,N,V_shouldUnlock
awdlInfoData
T@"NSData",C,N,V_awdlInfoData
acceptor
TB,N,GisAcceptor,V_acceptor
awdlStart
T@"NSDate",&,N,V_awdlStart
awdlInterval
Td,N,V_awdlInterval
T@"NSNumber",&,N,V_distance
rangingKey
T@"NSData",&,N,V_rangingKey
rangingTimedOut
TB,N,V_rangingTimedOut
rangingErrorString
T@"NSString",&,N,V_rangingErrorString
aksSuccess
TB,N,V_aksSuccess
rangingDisabled
useCoreLocation
rangingStart
T@"NSDate",&,N,V_rangingStart
rangingInterval
Td,N,V_rangingInterval
attemptError
T@"NSError",&,N,V_attemptError
remoteAWDLInfo
T@"NSDictionary",&,N,V_remoteAWDLInfo
localAWDLInfo
T@"NSDictionary",&,N,V_localAWDLInfo
sessionRangingKey
T@"NSData",&,N,V_sessionRangingKey
legacyProtocol
TB,N,V_legacyProtocol
useEncryption
TB,N,V_useEncryption
wifiErrorDomain
T@"NSString",&,N,V_wifiErrorDomain
wifiRangingErrorCode
Tq,N,V_wifiRangingErrorCode
coreLocationError
T@"NSError",&,N,V_coreLocationError
startAWDLError
T@"NSError",&,N,V_startAWDLError
wifiRequest
T@"SDAutoUnlockWiFiRequest",&,N,V_wifiRequest
payload
senderID
useProxy
awdlCacheID
aksSessionID
encryptedPayload
authTag
nonce
T@"NSData",&,N,V_sessionID
hasPayload
T@"NSData",&,N,V_payload
hasSenderID
T@"NSData",&,N,V_senderID
hasUseProxy
TB,N,V_useProxy
hasAwdlCacheID
TI,N,V_awdlCacheID
hasAksSessionID
TI,N,V_aksSessionID
hasEncryptedPayload
T@"NSData",&,N,V_encryptedPayload
hasAuthTag
T@"NSData",&,N,V_authTag
hasNonce
T@"NSData",&,N,V_nonce
application/json
X-Mme-Client-Info
X-Apple-GS-Token
X-Mme-Device-ID
SDAppleIDMutableURLRequest
UniqueDeviceID
NSString * _Nullable DeviceUDID(void)_block_invoke
### AppleIDDeviceUDID failed with err %#m
com.apple.sharingd.AirDropLinkStateChanged
com.apple.sharingd.AirDropPublished
com.apple.sharingd.AltDSIDChanged
com.apple.sharingd.AppleIDChanged
com.apple.sharingd.AppleAccountSignIn
com.apple.sharingd.AppleAccountSignOut
com.apple.sharingd.BacklightChanged
com.apple.sharingd.BackToMyMacChanged
com.apple.sharingd.BluetoothPowerChanged
com.apple.sharingd.CallStatusChanged
com.apple.sharingd.CarPlayStatusChanged
com.apple.sharingd.ClamshellStatusChanged
com.apple.sharingd.ComputerNameChanged
com.apple.sharingd.ConsoleUserChanged
com.apple.sharingd.ContactsChanged
com.apple.sharingd.ContinuationPayloadSent
com.apple.sharingd.DebugInfoRequested
com.apple.sharingd.DiscoverableModeChanged
com.apple.sharingd.ExternalDisplayAdded
com.apple.sharingd.FinderAirDropChanged
com.apple.sharingd.FinderPrefsChanged
com.apple.sharingd.HandoffVisibilityChanged
com.apple.sharingd.HotspotMISStateChanged
com.apple.sharingd.KeyBagFirstUnlock
com.apple.sharingd.KeyBagLockStatusChanged
com.apple.sharingd.LegacyModeChanged
com.apple.sharingd.LegacyModeSettableChanged
com.apple.sharingd.LocalHostNameChanged
com.apple.sharingd.MountPointsChanged
com.apple.sharingd.MulticastDNSChanged
com.apple.sharingd.MultipleUsersLoggedInChanged
com.apple.sharingd.NetbiosNameChanged
com.apple.sharingd.ODiskMountPointsChanged
com.apple.sharingd.PairedWatchWristStateChanged
com.apple.sharingd.ResetState2
com.apple.sharingd.ResetState
com.apple.sharingd.ScreenStateChanged
com.apple.sharingd.SystemHasPoweredOn
com.apple.sharingd.SystemWillSleep
com.apple.sharingd.UILockStatusChanged
com.apple.sharingd.UserPictureChanged
com.apple.sharingd.VFSChanged
com.apple.sharingd.VolumesChanged
com.apple.sharingd.WirelessCarPlayChanged
com.apple.sharingd.WirelessModeChanged
com.apple.sharingd.WirelessPowerChanged
com.apple.sharingd.WorkgroupChanged
User Defaults
v24@?0@"CNContact"8^B16
v16@?0@"CNContact"8
DataIndicatorOverrideForLTE
DetectDisabled
BuildVersion
IsSimulator
marketing-name
ProductName
ProductType
ProductVersion
ReleaseType
Production
Simulator
%@ %@ (%@)
%@: %@, %@, 
BatteryCurrentCapacity
BatteryIsCharging
charging
not charging
%d%% (%@)
MinPersonImageSize
iPod
iPod touch
SidebarMaxCount
WorkgroupThreshold
com.apple.sharingd.bulletinboard
AlwaysAutoAccept
AlwaysSendPayload
BroadcastPicture
BypassLTKeyAbort
CoalesceMe
DisableAutoAccept
DisableCompression
DisableContinuityTLS
DisablePictureQuery
DisablePipelining
DisableQuarantine
com.apple.dock
persistent-others
tile-data
file-data
file-label
Downloads
/Downloads/
_CFURLString
file://
EnableABImages
DisableAirDropAdvertising
EnableAirDropReceiving
EnableAllRecents
EnableBugs
DisableContinuity
EnableDebugMode
EnableDVZip
EnableHotspotFallback
EnablePKZip
EnableStreamDebugging
EnableWebloc
EnableXML
ForceAWDL
ForceP2P
IgnoreIconDiskCache
PreferABImages
PreferWideAreaBTMM
RegisterAllInterfaces
ShowMeInWormhole
ShowThisComputer
TestDiskFull
server
begin
com.apple.backboardd.backlight.changed
available
unavailable
_whats-my-name._tcp.
v24@?0Q8Q16
%@/%@/%@
MulticastDNS
BackToMyMac
com.apple.springboard.hasBlankedScreen
com.apple.sharing.SpringBoard.startDiscovery
v16@?0^{__CFString=}8
SBVoiceControlAlert
com.apple.SharingViewService
com.apple.camera
com.apple.CoreAuthUI
v16@?0@"FBSDisplayLayout"8
kCTCallStatus
com.apple.airport.preferences.plist
airDropPublished
bluetoothEnabled
discoverableMode
T@"NSString",&
doNotDisturbEnabled
finderServer
T@"SDAirDropServer",W
legacyModeEnabled
wirelessEnabled
T@"NSDictionary",R
awdlPeerList
awdlState
T@"NSDictionary",R,V_awdlState
backToMyMacDomain
backToMyMacDomains
T@"NSSet",R
bonjourName
computerName
consoleUser
deviceInformation
deviceKeyBagState
Tq,R
lastDarkWakeDate
T@"NSDate",R,V_lastDarkWakeDate
localHostName
minPersonImageSize
Ti,R
modelCode
myAccountAppleID
myAltDSID
myAppleID
myAppleIDCommonName
myAppleIDEmailAddresses
myAppleIDEmailHash
myAppleIDPhoneHash
myAppleIDPhoneNumbers
myAppleIDValidationRecord
myEmail
myLegacyAirDropIcon
T@"NSData",R
myLegacyAirDropIconHash
myName
myPrimaryEmail
myMediumHashes
myShortHashesForAirDrop
netbiosName
pairedWatchWristState
sidebarMaxCount
someComputerName
systemUIFlags
TI,R
workgroup
workgroupThreshold
bulletinDataProviderConnection
T@"BBDataProviderConnection",R
airdropAllowed
TB,R,GisAirDropAllowed
airdropAvailable
TB,R,GisAirDropAvailable
appleInternal
TB,R,GisAppleInternal
legacyAirDropAvailable
TB,R,GisLegacyAirDropAvailable
allEnabled
TB,R
altDSIDNeedsFixing
alwaysAutoAccept
alwaysSendPayload
backlightOn
backToMyMacEnabled
bonjourEnabled
broadcastPicture
browseAllInterfaces
bypassLTKeyAbort
carplayConnected
coalesceMe
computerToComputer
connectedEnabled
controlCenterVisible
TB,R,V_controlCenterVisible
currentConsoleUser
deviceKeyBagDisabled
deviceKeyBagLocked
deviceKeyBagLocking
deviceKeyBagUnlocked
deviceRequiresNewRanging
deviceSupportsContinuity
deviceSupportsRanging
deviceSupportsWAPI
deviceUIUnlocked
deviceWasUnlockedOnce
disableAutoAccept
disableCompression
disableContinuityTLS
disablePictureQuery
disablePipelining
disableQuarantine
disableTLS
dockHasDownloadsFolder
eduModeEnabled
enableABImages
enableAirDropAdvertising
enableAirDropReceiving
enableAllRecents
enableBugs
enableContinuity
enableDebugMode
enableDemoMode
enableDVZip
enableHotspotFallback
enablePKZip
enableStreamDebugging
enableWebloc
enableXML
finderAirDropEnabled
forceAWDL
forceP2P
handoffVisible
ignoreIconDiskCache
internetSharingEnabled
legacyDevice
legacyModeSettable
multipleUsersLoggedIn
TB,R,V_multipleUsersLoggedIn
myAppleIDIsManaged
preferABImages
preferWideAreaBTMM
registerAllInterfaces
runningAsSetupUser
screenOn
showMeInWormhole
showThisComputer
signedIntoPrimaryiCloudAccount
simStateReady
testDiskFull
wifiUserPowerPreference
wirelessAccessPoint
wirelessCarPlay
TUPrivacyManager
/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
TUPhoneNumber
TUHomeCountryCode
AAUIProfilePictureStore
/System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI
UMUserManager
/System/Library/PrivateFrameworks/UserManagement.framework/UserManagement
AVSystemController
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
AVSystemController_CarPlayIsConnectedAttribute
AVSystemController_ServerConnectionDiedNotification
AVSystemController_CarPlayIsConnectedDidChangeNotification
FBSDisplayLayoutMonitor
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSDisplayLayoutElementControlCenterIdentifier
FBSDisplayLayoutElementLockScreenIdentifier
FBSDisplayLayoutElementNotificationCenterIdentifier
FBSDisplayLayoutElementSiriIdentifier
com.apple.mobileslideshow
PHOTO
VIDEO
photos://asset?albumname=camera-roll&identifier=%@
TB,R,N,V_shouldExtractImagesFromLivePhotos
attributedString
T@"NSAttributedString",C,N,V_attributedString
data
T@"NSData",&,N,V_data
T@"NSString",C,N,V_name
previewImage
T@"UIImage",&,N,V_previewImage
string
T@"NSString",C,N,V_string
subject
T@"NSString",C,N,V_subject
T@"NSString",C,N,V_uti
T@"NSURL",&,N,V_URL
fakeBundleID
T@"NSString",C,N,V_fakeBundleID
fakeBytes
Tq,N,V_fakeBytes
fakeDuration
Tf,N,V_fakeDuration
T@"NSString",R,C,V_workgroup
T@"<SDWindowsBrowserDelegate>",W,V_delegate
alertWindow
T@"UIWindow",&,D,N
com.apple.sharing.sysdiagnose-queue
com.apple.private.alloy.nearby
v24@?0@"NSString"8@"NSError"16
com.apple.Honeybee.event-notify
kLogPath
kLogIdentifier
collectingSysdiagnose
TB,N,V_collectingSysdiagnose
sysdiagnoseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sysdiagnoseQueue
receivedHoneybeeIDs
T@"NSMutableArray",&,N,V_receivedHoneybeeIDs
T@"IDSService",R,N,V_idsService
honeybeeConnection
T@"NSObject<OS_xpc_object>",&,N,V_honeybeeConnection
com.apple.Playgrounds
PLAYGROUND
enum and string values out of sync: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-933.1/DemoApp/SDASharedItemsFactory.m
WWDC_2013.ics
New_Year's_Party.ics
single_person.vcf
multi_person.vcf
My Generic Data
com.apple.mobilemail
initial_image.JPG
kitten.jpg
puppy.jpg
beacon.svg
annual_newsletter.pages
bake_sale.pages
AABoardingPass.pkpass
FLORENCE.pkpass
Apple.pdf
large_pdf_document.pdf
drawing.ssdw
NSURL_description.txt
UIImage_imageWithAlignmentRectInsets.txt
thinkdifferent.mp4
voicememo1.m4a
voicememo2.m4a
fmf1://foo
Location
https://www.icloud.com/journal/#1;CAEQARoQMchUru323-EAGU6rC2OZpg;3BAD3ADE-DB60-47A8-975D-17138CD396B1
iPhoto Journal
com.apple.mobileiphoto
https://www.icloud.com/iw/#pages/some-hash/School%20Report
School Report
kSDAItemSourcesURL
https://www.icloud.com/keynote-live/wGlPfel-hr529LJVgRDOm5ypCpaoC5zKs5MJSAMYYsVhIPpxvos5iZelgn7Qebu_ZLmk9hrgJWY4vveA_p4Ovp9iYthUHI6MJtlTjsHXx2yGOR4QvbdsS8esHSiSFepDDqq8WrqWPDNwnGiQ7xM-Op19zjCwILdpu77oEsjhls5Kcc-orw
kSDAItemSourcesPreviewImage
elvis_presley-preview.jpg
kSDAItemSourcesSubject
Check out this Keynote Live presentatation
https://www.icloud.com/pages/000r43N3H8h68IwFK1ifN23sg#PageTest
Check out this Pages document
https://www.icloud.com/keynote/0001t93-JW05Z5gr_HEIB9oTg#KeyTest
Check out this Keynote presentation
https://www.icloud.com/numbers/000TnskaE9ZnLyT0s13rrmf4g#NumTest
Check out this Numbers spreadsheet
https://itunes.apple.com/us/book/the-monuments-men/id357655256
the-monuments-men-preview.jpeg
Check out this book
https://itunes.apple.com/us/podcast/hypercritical/id414920759
hypercritical-preview.jpeg
Check out this podcast
https://itunes.apple.com/us/itunes-u/ipad-iphone-application-development/id480479762
itunesu-preview.jpeg
Check out this itunes-u
https://itunes.apple.com/us/album/complete-50s-albums-collection/id672012335
Check out this album
https://itunes.apple.com/us/movie-collection/the-lord-of-the-rings-trilogy/id365647689
the-lord-of-the-rings-preview.jpeg
Check out this movie collection
https://itunes.apple.com/us/tv-season/breaking-bad-season-1/id271383858
breaking-bad-preview.jpeg
Check out this tv-season
https://itunes.apple.com/us/audiobook/steve-jobs-unabridged/id473826062
steve-jobs-preview.jpeg
Check out this audiobook
http://maps.apple.com/?lsp=9902&auid=10582173481701573620&sll=37.331848,-122.030296&q=Apple%2C%20Inc.&hnear=1%20Infinite%20Loop%20Cupertino%20CA%2095014%20United%20States
apple_inc-preview.png
Apple Inc.
tel://+18000391010
http://www.apple.com
apple_com-preview.png
Please go check out apple.com
http://www.yahoo.com
Please go check out yahoo.com
http://www.cnn.com
Please go check out cnn.com
Come check out the amazing new stuff at http://www.apple.com/ . Special discounts this week
yelp://biz/the-sentinel-san-francisco
the_sentinel_san_francisco-preview.jpg
The Sentinel Restaurant
Hello. This is a test attributed string.
v32@?0@"NSAttributedString"8Q16^B24
This is the first string
It has one line break
This is the second string
It has two
 line breaks
some subject
v32@?0@"NSString"8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
%@-preview.png
v32@?0@"SDAItemSource"8Q16^B24
calendarEvents
T@"NSArray",&,N,V_calendarEvents
contacts
T@"NSArray",&,N,V_contacts
images
T@"NSArray",&,N,V_images
svgImages
T@"NSArray",&,N,V_svgImages
genericDataDocuments
T@"NSArray",&,N,V_genericDataDocuments
T@"NSArray",&,N,V_pages
passes
T@"NSArray",&,N,V_passes
pdfs
T@"NSArray",&,N,V_pdfs
sharingDrawingDocuments
T@"NSArray",&,N,V_sharingDrawingDocuments
textDocuments
T@"NSArray",&,N,V_textDocuments
videos
T@"NSArray",&,N,V_videos
voiceMemos
T@"NSArray",&,N,V_voiceMemos
iLifeLinks
T@"NSArray",&,N,V_iLifeLinks
iTunesStoreLinks
T@"NSArray",&,N,V_iTunesStoreLinks
iWorkLinks
T@"NSArray",&,N,V_iWorkLinks
mapsLinks
T@"NSArray",&,N,V_mapsLinks
sharedKeynoteLiveLinks
T@"NSArray",&,N,V_sharedKeynoteLiveLinks
sharediCloudDocumentsLinks
T@"NSArray",&,N,V_sharediCloudDocumentsLinks
telephoneLinks
T@"NSArray",&,N,V_telephoneLinks
webLinks
T@"NSArray",&,N,V_webLinks
webLinkStrings
T@"NSArray",&,N,V_webLinkStrings
webLinkStringBlocks
T@"NSArray",&,N,V_webLinkStringBlocks
yelpLinks
T@"NSArray",&,N,V_yelpLinks
attributedStrings
T@"NSArray",&,N,V_attributedStrings
strings
T@"NSArray",&,N,V_strings
authToken
hasAuthToken
T@"NSData",&,N,V_authToken
com.apple.sharingd.WorkgroupsChanged
workgroups
T@"NSSet",R,C
AUUseNewWatchVersion
AURestrictOldWatch
AUUseOldProtocolVersion
com.apple.sharingd.auto-unlock.pairing-session-queue
responseTimer
T@"NSObject<OS_dispatch_source>",&,V_responseTimer
T@"<SDAutoUnlockSessionDelegate>",W,N,V_delegate
T@"NSUUID",&,N,V_sessionID
deviceID
T@"NSString",C,N,V_deviceID
pairingAKSSession
Tq,V_pairingAKSSession
sessionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionQueue
aksSession
T@"SDAutoUnlockAKSSession",&,N,V_aksSession
AirDrop/1.0
empty
[%@]:%@
Connecting to
Sending to
%@.webloc
public.heic
:memory:
SFAirDropActivitySubjectEventTitle
SFAirDropActivitySubjectEventStartDate
SFAirDropActivitySubjectEventIsAllDay
SFAirDropActivitySubjectOtherContactsCount
v16@?0@"NSURL"8
com.apple.live-photo-bundle
com.apple.private.live-photo-bundle
personID
shouldPublishProgress
TB,N,V_shouldPublishProgress
secTrustRef
T^{__SecTrust=},R
T@"<SDAirDropClientDelegate>",W,V_delegate
CNMonogrammer
/System/Library/Frameworks/ContactsUI.framework/ContactsUI
ltkData
viewState
needsUnlock
currentlySyncing
hasLtkData
T@"NSData",&,N,V_ltkData
hasViewState
TB,N,V_viewState
hasNeedsUnlock
TB,N,V_needsUnlock
hasCurrentlySyncing
TB,N,V_currentlySyncing
AirDropID
Upload
Discover
No Files
System Sleep
Invalid File
Transfer Failed 1
File Not Readable
WiFi Disabled
WLAN Disabled
Authentication Failed
com.apple.AirDrop.PeerChanged
AppleIDAccountValidationRecordData
T@"NSString",&,V_sessionID
T@"NSString",&,V_modelName
bluetoothDiscovery
T@"NSNumber",&,V_bluetoothDiscovery
bonjourDiscovery
T@"NSNumber",&,V_bonjourDiscovery
bonjourTXTRecordDiscovery
T@"NSNumber",&,V_bonjourTXTRecordDiscovery
bonjourResolveComplete
T@"NSNumber",&,V_bonjourResolveComplete
tcpConnectionComplete
T@"NSNumber",&,V_tcpConnectionComplete
tlsHandshakeComplete
T@"NSNumber",&,V_tlsHandshakeComplete
identityQueryComplete
T@"NSNumber",&,V_identityQueryComplete
totalDiscovery
T@"NSNumber",&,V_totalDiscovery
verifiableIdentity
T@"NSNumber",&,V_verifiableIdentity
com.apple.airdrop.queue
/System/Library/PrivateFrameworks/Sharing.framework/%@
encDsID
ValidatedEmailHashes
ValidatedPhoneHashes
NO_APPLE_ID_ACCOUNT_ALERT_TEXT
OPEN_SETTINGS_BUTTON_TITLE
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE
v16@?0@"NSProgress"8
v16@?0@"NSArray"8
T@"NSURL",C,V_destination
T@"<SDAirDropConnectionDelegate>",W,V_delegate
DisabledKeyRequestBudget
DisableContinuityCloudFallback
com.apple.private.alloy.continuity.encryption
Request aborted
v16@?0@"SDActivityRequestRecord"8
Request timed out
Budget Restrictions Disabled: %@
Cloud Fallback Disabled: %@
Activity Service: %@, devices: 
Encryption Service: %@, devices: %@
Persisted Key Requests: %@
Unique ID To Key Reply Date: %@
Message Identifier To KeyRequest Records: %@
Message Identifier To Request Records: %@
Message Identifier To Reply Records: %@
EncryptionKeyRequests
EncryptionKeyLocalRequests
v32@?0@"NSString"8@"NSMutableArray"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
EncryptionKeyCloudRequests
EncryptionKeyMostRecentRequests
%@ > self AND self > %@
and potentially cloud 
rKeyPreviousIdentifier
rKeyDataRepresentation
rLocalOnly
 and cloud
Failed to find device to request encryption key from
activityCommand
activityPayload
rAdvPayload
rClientCommand
Failed to find device to request activity payload from
rActPayload
rActPayloadErrorDomain
rActPayloadErrorCode
Unknown Error
rAdvData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-933.1/Daemon/SDActivityPayloadManager.m
Demo mode enabled, yet cannot find any destinations on service
final 
v16@?0@"SFActivityAdvertisement"8
com.apple.iMovie
com.apple.mobilegarageband
ILIFE_ITEM
com.apple.podcasts
ITUNES_STORE_LINK_PODCAST
Attempt Canceled
Attempt Cancelled
Watch Missing Encryption Key
Watch Not First Unlocked
Decryption failure
Ranging Timeout: Results Not Returned
Failed to Start AWDL
Mac Clamshelled Without Display
Watch Failed to Connect
UNLOCK_OUT_OF_RANGE
Watch using old protocol (version: %d)
Received AWDL Info message missing information (info: %@)
Exchange request step failed
Lock session invalid
Watch locked and off wrist
Watch off wrist
Watch not in state to perform Auto Unlock
Auth prompts disabled on remote
Remote AKS session failed
Key exhange request is missing information (request: %@)
Failed to generate ranging token
Auth token transfer failed
AWDL network failed to start
Auth token failed
Missing local IDS ID
Auth request failed
oldWatch
TB,N,V_oldWatch
onlyRanging
TB,N,V_onlyRanging
foundPeer
TB,N,V_foundPeer
connected
TB,N,V_connected
lockedKeyBag
TB,N,V_lockedKeyBag
deviceWasLocked
TB,N,V_deviceWasLocked
receivedAWDLInfo
TB,N,V_receivedAWDLInfo
sendingConfirmation
TB,N,V_sendingConfirmation
sentExchangeResponse
TB,N,V_sentExchangeResponse
receivedExchangeRequest
TB,N,V_receivedExchangeRequest
supportsConfirmationACK
TB,N,V_supportsConfirmationACK
waitingForDisplayOrClamshell
TB,N,V_waitingForDisplayOrClamshell
peerMacAddress
T@"NSData",C,N,V_peerMacAddress
sessionAuthToken
T@"SDUnlockSessionAuthToken",&,N,V_sessionAuthToken
watchRSSI
Ti,N,V_watchRSSI
displayCount
Tq,N,V_displayCount
configChangeType
Tq,N,V_configChangeType
displayTimer
T@"NSObject<OS_dispatch_source>",&,V_displayTimer
confirmationTimer
T@"NSObject<OS_dispatch_source>",&,V_confirmationTimer
awdlUp
TB,N,V_awdlUp
watchModelID
T@"NSString",&,N,V_watchModelID
discoveryDate
T@"NSDate",&,N,V_discoveryDate
connectionDate
T@"NSDate",&,N,V_connectionDate
firstSend
T@"NSDate",&,N,V_firstSend
exchageResponseDate
T@"NSDate",&,N,V_exchageResponseDate
displayOrClamshellWaitingDate
T@"NSDate",&,N,V_displayOrClamshellWaitingDate
confirmationSendDate
T@"NSDate",&,N,V_confirmationSendDate
btOverall
Td,N,V_btOverall
btBootstrap
Td,N,V_btBootstrap
awdlInfoExchange
Td,N,V_awdlInfoExchange
keyRequestExchange
Td,N,V_keyRequestExchange
tokenExchange
Td,N,V_tokenExchange
confirmation
Td,N,V_confirmation
peerFoundInterval
Td,N,V_peerFoundInterval
awdlTotal
Td,N,V_awdlTotal
completeExchange
Td,N,V_completeExchange
connectionWaitTime
Td,N,V_connectionWaitTime
displayClamshellWaitTime
Td,N,V_displayClamshellWaitTime
bluetoothID
T@"NSUUID",&,N,V_bluetoothID
wifiState
TB,N,V_wifiState
otherSessionCancel
TB,N,V_otherSessionCancel
otherProviderCancel
TB,N,V_otherProviderCancel
attemptTimedOut
TB,N,V_attemptTimedOut
discoveryTime
Td,N,V_discoveryTime
TQ,N,V_connectedBluetoothDevices
autoUnlockDevice
T@"SFAutoUnlockDevice",&,N,V_autoUnlockDevice
SDCancelActionIdentifier
SDUninstalledAppActionIdentifier
%@ is not a valid initializer for %@
<%@ %{ptr}
, transferIdentifier: %@
, bundleProxy: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-933.1/Daemon/SDAirDropHandler.m
Failed to find localAction for %@
DECLINE_BUTTON_TITLE
OK_BUTTON_TITLE
Cannot generate default action for nil bundleProxy
TRANSFER_FROM
_PERSON
_DEVICE
_PLURAL
_IN_PROGRESS
_CANCELED
_FAILED
_TEXT
@"LSBundleProxy"16@?0@"LSBundleProxy"8
%@...
transfer
T@"SFAirDropTransfer",&,N,V_transfer
hasFiles
TB,R,N,V_hasFiles
hasLinks
TB,R,N,V_hasLinks
isActivated
TB,N,V_isActivated
bundleProxy
T@"LSBundleProxy",&,N,V_bundleProxy
isJustFiles
isJustLinks
itemsCount
TQ,R,N
T@"NSString",R,C,N
singleItemActionTitle
handlingAppInstalled
TB,N,V_handlingAppInstalled
handlingAppBundleID
T@"NSString",&,N,V_handlingAppBundleID
canHandleTransfer
suitableContentsTitle
suitableContentsDescription
ADClientAddValueForScalarKey
/System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
supportsACK
hasSupportsACK
TB,N,V_supportsACK
T@"<SDAirDropInformationDelegate>",W,V_delegate
AutoUnlockSuggestedPeers
AutoUnlockPeerRetries
AutoUnlockRetryDate
AutoUnlockRetryMultiplier
AutoUnlockSetupRetryVersion
com.apple.sharing.auto-unlock-suggestion-manager
C42094B4-B936-4673-8034-4EEFD437BEB0
com.apple.sharingd.auto-unlock.suggestion-manager-queue
q24@?0@"SFAutoUnlockDevice"8@"SFAutoUnlockDevice"16
v16@?0@"SFBLEDevice"8
AUSuggestionsEnabled
AUSuggestionsIgnoreBackoff
AUSuggestionsTestDeviceID
AUAlwaysShowSetupRetry
foundFirstPeer
TB,N,V_foundFirstPeer
T@"SFBLEScanner",&,N,V_scanner
foundPeers
T@"NSMutableArray",&,N,V_foundPeers
currentBluetoothIDs
T@"NSArray",&,N,V_currentBluetoothIDs
serviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_serviceTimer
deviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_deviceTimer
setupRetryDeviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_setupRetryDeviceTimer
suggestedPeers
T@"NSMutableArray",&,N,V_suggestedPeers
suggestedPeer
T@"SFAutoUnlockDevice",&,N,V_suggestedPeer
suggestionManagerSessionID
T@"NSUUID",&,N,V_suggestionManagerSessionID
T@"SFAutoUnlockDevice",&,N,V_setupRetryDevice
suggestionManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_suggestionManagerQueue
suggestedDeviceID
T@"NSString",C,N,V_suggestedDeviceID
setupRetryDeviceID
T@"NSString",C,N,V_setupRetryDeviceID
lastSuccessfulDevice
T@"SFAutoUnlockDevice",&,N,V_lastSuccessfulDevice
stashToken
hasStashToken
T@"NSData",&,N,V_stashToken
usingRecord
hasUsingRecord
TB,N,V_usingRecord
TRANSFER_FROM_MIXED_TYPES_TEXT
invalid state value
v24@?0@"NSObject<SFAirDropClassroomTransferManagerProtocol>"8^B16
com.apple.sharing.classroom-transfer
T@"SDAirDropTransferManager",&,N,V_transferManager
pairedDeviceID
hasPairedDeviceID
T@"NSString",&,N,V_pairedDeviceID
com.apple.sharingd.AirDropUnpublished
enabled
disabled
entered
exited
Contacts Only
Everyone
AirDropServer
Discoverable mode:                   %@
Screen On:                           %s
Discoverable by contacts only:       %s
Discoverable by everyone:            %s
Unlocked once:                       %s
Legacy mode enabled:                 %s
Port Number:                         %@
HTTP Server:                         %s
HTTP Server up time:                 %ll{dur}
HTTP Server connections:             %d
T@"<SDAirDropServerDelegate>",W,V_delegate
localLTK
T@"NSData",C,N,V_localLTK
remoteLTK
T@"NSData",C,N,V_remoteLTK
sessionType
Tq,N,V_sessionType
originator
TB,N,V_originator
escrowSecret
T@"NSData",C,N,V_escrowSecret
usingEscrow
TB,N,V_usingEscrow
T@"NSString",&,N,V_deviceID
Tq,N,V_aksSessionID
ltkNeedsFixing
TB,N,V_ltkNeedsFixing
cacheID
infoData
hasCacheID
TI,N,V_cacheID
hasInfoData
T@"NSData",&,N,V_infoData
T@"<SDAirDropStatusDelegate>",W,V_delegate
OneTimeAirDropReset
<%@: %p, deviceUniqueID:%@, advertisementPayload:%@, options:%@, deviceName:%@, deviceModelIdentifier:%@>
com.apple.continuity.activity.encryption.keyrequest.error.%@.%@
com.apple.continuity.activity.encryption.keyrequest.request_type.%@
com.apple.continuity.activity.encryption.keyrequest.success.%@
com.apple.continuity.activity.encryption.keyrequest.time_since_last_request
EncryptionKeyRequest
timeSinceLast
com.apple.continuity.activity.encryption.replacementkey.old_key_present.%@
com.apple.continuity.activity.encryption.replacementkey.new_key_counter_value
com.apple.continuity.activity.encryption.replacementkey.old_key_counter_value
com.apple.continuity.activity.encryption.keyrequest.number_of_hours_between_key_creations
ReplacementKey
oldKeyPresent
oldKeyCounter
newKeyCounter
timeBetween
UAUserActivityIsHighPriorityOptionKey
Connections still active during dealloc
Attempt to set dispatch queue after activate has been called
Attempt to enqueue XPC block before activate has been called
SDXPCDaemonConnection
Subclass %@ must override %@
activeConnections
T@"NSSet",C,N,V_activeConnections
currentConnection
T@"NSXPCConnection",R,C,N
machServiceName
exportedInterface
T@"NSXPCInterface",R,N
remoteObjectInterface
com.apple.mobilesafari
http
https
/System/Library/PrivateFrameworks/LinkPresentation.framework/LinkPresentation
WEBSITE_WITH_TITLE
WEBSITE
SDAutoUnlockAKSManagerCachedSessionsChangedNotification
SDAutoUnlockAKSManagerWatchLTKsUpdatedNotification
SDAutoUnlockAKSManagerCompanionViewSyncing
SDAutoUnlockAKSManagerCompanionNeedsUnlock
SDAutoUnlockAKSManagerCompanionCurrentlySyncing
A70C5EAF-F24F-48A7-B834-F5297000C7A2
com.apple.continuity.auto-unlock.sync
com.apple.continuity.auto-unlock.localkeys
com.apple.continuity.auto-unlock.rangingkeys
com.apple.continuity.unlock
AutoUnlock
ltk.plist
Auto Unlock
pairing-records.plist
Companion ID
Pairing ID
Remote LTKs
LTK Data
LTK ID
LTK Hash
LTK Mod Date
Modern LTK Data
Modern LTK Hash
Modern LTK Mod Date
AutoUnlockDevicesMissingSessionKey
companion-paired-devices.plist
watch-companion-mapping.plist
Local Unique ID: %@
View Syncing: %@
Device First Unlocked: %@
Keychain Devices: %@
Remote LTK File Path: %@
Remote LTKs
Device ID: %@, Remote LTK ID: %@, ASK Peer State: %@, Remote LTK: %@
com.apple.MCX.changedDomains
com.apple.applicationaccess
v32@?0@"NSString"8@"SDAutoUnlockAKSCache"16^B24
v32@?0@"NSString"8@"NSData"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.sharing.auto-unlock.watch-ltk-response
v32@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24
v16@?0@"NSString"8
%@: %@
AutoUnlockSalt
AutoUnlockInfo
AUCachedAKSSessionsEnabled
autoUnlockDisabledDueToManagement
TB,N,V_autoUnlockDisabledDueToManagement
TB,N,V_waitingForUnlock
t208Machine
TB,N,V_t208Machine
T@"NSString",C,N,V_altDSID
keybagAssertionTimer
T@"NSObject<OS_dispatch_source>",&,V_keybagAssertionTimer
waitingForUnlockTimer
T@"NSObject<OS_dispatch_source>",&,V_waitingForUnlockTimer
remoteLTKs
T@"NSMutableDictionary",&,N,V_remoteLTKs
cachedSessions
T@"NSMutableDictionary",&,N,V_cachedSessions
cachedSessionKeys
T@"NSMutableDictionary",&,N,V_cachedSessionKeys
watchIDsToPairingRecords
T@"NSMutableDictionary",&,N,V_watchIDsToPairingRecords
preferredRemoteLTKForDeviceID
T@"NSMutableDictionary",&,N,V_preferredRemoteLTKForDeviceID
watchIDsMissingSessionKey
T@"NSMutableArray",&,N,V_watchIDsMissingSessionKey
remoteLTKStorageFilePath
T@"NSString",C,N,V_remoteLTKStorageFilePath
watchIDsToPairingRecordsStorageFilePath
T@"NSString",C,N,V_watchIDsToPairingRecordsStorageFilePath
companionIDStorageFilePath
T@"NSString",C,N,V_companionIDStorageFilePath
watchIDToCompanionIDStorageFilePath
T@"NSString",C,N,V_watchIDToCompanionIDStorageFilePath
localDeviceID
T@"NSString",C,N,V_localDeviceID
viewSyncing
keyData
keyIdentifier
dateCreated
lastUsedCounter
<%@: %p, keyIdentifier:%@, dateCreated:%@, lastUsedCounter:%hu>
T@"NSUUID",&,N,V_keyIdentifier
T@"NSDate",&,N,V_dateCreated
T@"NSMutableData",&,N,V_keyData
TS,N,V_lastUsedCounter
validKey
TB,N,GisValidKey,V_validKey
dictRepresentation
BluetoothAdvertiseEncryptionStartCount
Has Wrapping Key: %@, Should Refresh: %@
Keychain Items: %@
@unionOfObjects.%@
Encryption Key: %@
Device Identifier To Decryption Key: %@
isWrappedKey
handoff-decryption-key
com.apple.continuity.encryption
handoff-wrapping-key
Handoff Wrapping Key
handoff-own-encryption-key
Handoff Encryption Key
Handoff Decryption Key
encryptionKey
T@"SDActivityEncryptionKey",R,N
dataRepresentationForCurrentEncryptionKey
T@"NSData",R,N
/private/var/Managed Preferences/mobile/com.apple.Sharing
AlternateService
BrowseAllInterfaces
EnableDemoMode
EnableDeviceImages
EnableDirectIP
EnableSimulator
PreferSMBFileSharing
_afpovertcp._tcp.
_smb._tcp.
_nfs._tcp.
_webdavs._tcp.
_webdav._tcp.
_ftps._tcp.
_ftp._tcp.
_rfb._tcp.
_https._tcp.
_http._tcp.
_adisk._tcp.
_odisk._tcp.
_airdrop._tcp.
_airdrop-alt._tcp.
_airdrop-%@._tcp.
_device-info._tcp.
_file._tcp.
_netbios._udp.
_workgroups._udp.
_nwnode._tcp.
local
back-to-my-mac
/System/Library/PrivateFrameworks/Sharing.framework
Localizable
;:@?/
%@://
:%ld
%@=%@
%02d:%02d:%02d.%03d
demo
passcodeEnabled
hasPasscodeEnabled
TB,N,V_passcodeEnabled
v24@?0@"LSAppLink"8@"NSError"16
GENERIC_LINK
appLink
T@"LSAppLink",&,N,V_appLink
 Handoff
 CopyPaste
@unionOfObjects.UUIDString
v24@?0@"SFActivityAdvertisement"8@"NSError"16
Handoff State End
Handoff State
Is Scanning: %@
Scan Types: %@
Device Identifier To Lost Device Timer: %@
Device Identifier To Device Record: %@
T@"<SFContinuityScannerClient>",&,V_remoteConnection
com.apple.sharingd.adjustment-queue
com.apple.sharingd.compression-queue
com.apple.Preferences
PROFILE
Mixed Types
Actions Failed
v24@?0@"NSObject<SFAirDropTransferObserverProtocol>"8^B16
com.apple.sharing.transfer-observer
v16@?0@"NSObject<SFAirDropTransferObserverProtocol>"8
v20@?0B8B12B16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-933.1/Daemon/SDAirDropTransferManager.m
Failing transfer with invalid state: %@
v20@?0@"NSString"8B16
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N
transferIdentifierToTransfer
T@"NSMutableDictionary",&,V_transferIdentifierToTransfer
transferIdentifierToHandler
T@"NSMutableDictionary",&,V_transferIdentifierToHandler
kvoObservingKeys
T@"NSArray",&,V_kvoObservingKeys
classroomDelegate
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,V_classroomDelegate
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,Vdelegate
signout
hasSignout
TB,N,V_signout
SDUnlockLocalLTK
SDUnlockRemoteLTK
SDUnlockPairingID
SDUnlockKeybagUUID
SDUnlockBackupExclusion
UnlockSecurityLocalLongTermKey
UnlockSecurityRemoteLongTermKey
UnlockServiceName
com.apple.Sharing.lock-escrow
com.apple.sharingd.unlock
Items Exist | Device Locked
ltksExist
ltkFileExists
localLongTermKey
T@"NSData",&,N,V_localLongTermKey
remoteLongTermKey
T@"NSData",&,N,V_remoteLongTermKey
keybagUUID
T@"NSString",&,N,V_keybagUUID
keyDeviceID
T@"NSString",&,V_keyDeviceID
T@"NSString",C,V_pairingID
pairingStorePath
T@"NSString",C,V_pairingStorePath
deviceName
T@"NSString",C,V_deviceName
SDAutoUnlockBypassMetricLog
SDAutoUnlockShowScreenLockError
au-setup-response-timeout
au-setup-response-timeout-percentage
au-setup-message-timeout
au-setup-message-timeout-percentage
@"AWDSharingAutoUnlockSetup"8@?0
SetupResult
deviceModel
companionModel
deviceLocked
keyRequestXTimeMs
tokenXTimeMs
timeIntervalSinceLastWatch
upsell
responseServer
messageServer
setupRetry
macOldLTKSyncStatus
macNewLTKSyncStatus
%02ld-%02ld-%02ld %02ld:%02ld:%02ld %@
allowAutoUnlock
UnknownSleepType
UNLOCK_WATCH_STAINLESS_STEEL
UNLOCK_WATCH_YELLOW_GOLD
UNLOCK_WATCH_ROSE_GOLD
UNLOCK_WATCH_CERAMIC
UNLOCK_WATCH_ALUMINUM
AUAlwaysShowModelDescription
, %@
(%@%@%@)
Watch
SDAKSPeerStateNotSetUp
SDAKSPeerStateNotAvailable
SDAKSPeerStateOnlyEscrowAvailable
SDAKSPeerStateTokenAvailable
SDAKSPeerStateNoPasscodeUnlockWithinWindow
SDAKSPeerStateNoRemoteUnlockWithinWindow
SDAKSPeerStateTooManyFailedPasscodeEntries
SDAKSPeerStatePasscodeDisabled
SDAKSPeerStateUnknown
Unexpeted type
<%@ %p> (unlockSession = %ld, expireTime = %lld, keyData = %@)
T@"NSData",&,V_keyData
expireTime
TQ,V_expireTime
Escrow Secret Exists:%@
Remote Device Locked:%@
Unlocking State:%@
Keychain Items:%@
No completion handler
Remote never responded with state
Could not initiate stash creation
Paired Unlock disabled
SDUnlockKeyUnlockingStateIdle
SDUnlockKeyUnlockingStateEphemeralResponse
SDUnlockKeyUnlockingStateAuthConfirmation
Unknown State
Failed to update long term key
Missing long term key in protbuf
Device does not have a passcode set for ltk transfer
Device locked for ltk transfer
Could not create protocol buffer object
Device does not have a passcode set
Failed to create session
No long term keys
Failed to store escrow secret (locked = %@)
Error creating stash token
Error getting repsonse key
Other device failed to confirm stash setup
Response is missing information
Message failed to send
State request failed to send
useEscrowRecord
TB,V_useEscrowRecord
stashTimer
T@"NSTimer",&,V_stashTimer
remoteDeviceLocked
TB,V_remoteDeviceLocked
ltkWaitingForUnlock
TB,V_ltkWaitingForUnlock
outstandingStartLTK
TB,V_outstandingStartLTK
unlockingForKeybagUnlock
TB,V_unlockingForKeybagUnlock
stateTimer
T@"NSObject<OS_dispatch_source>",&,V_stateTimer
sessionRecord
T@"SDUnlockSessionRecord",&,V_sessionRecord
unlockingState
Tq,V_unlockingState
stashHandler
T@?,C,V_stashHandler
stateHandler
T@?,C,V_stateHandler
useToken
authPrompt
hasUseToken
TB,N,V_useToken
hasKeyData
T@"NSData",&,N,V_keyData
hasAuthPrompt
TB,N,V_authPrompt
hasSupportsConfirmationACK
escrowAKSSession
T@"SDAutoUnlockAKSSession",&,N,V_escrowAKSSession
tokenAKSSession
T@"SDAutoUnlockAKSSession",&,N,V_tokenAKSSession
escrowFirstStepData
T@"NSData",&,N,V_escrowFirstStepData
tokenFirstStepData
T@"NSData",&,N,V_tokenFirstStepData
keyDataCache
T@"SDAutoUnlockKeyDataCache",&,N,V_keyDataCache
keyRequestExchangeTime
tokenExchangeTime
setupSucceeded
hasCompanionDeviceModel
hasKeyRequestExchangeTime
TI,N,V_keyRequestExchangeTime
hasTokenExchangeTime
TI,N,V_tokenExchangeTime
hasKeyDeviceLocked
hasSetupSucceeded
TB,N,V_setupSucceeded
hasWatchExistedInUnlockList
TB,N,V_watchExistedInUnlockList
hasTimeIntervalSinceLastWatch
TQ,N,V_timeIntervalSinceLastWatch
hasUpsell
TB,N,V_upsell
hasResponseTimeout
TI,N,V_responseTimeout
hasResponseTimeoutFromServer
TB,N,V_responseTimeoutFromServer
hasMessageTimeout
TI,N,V_messageTimeout
hasMessageTimeoutFromServer
TB,N,V_messageTimeoutFromServer
hasSetupRetry
TB,N,V_setupRetry
hasMacOldLTKSyncStatus
Ti,N,V_macOldLTKSyncStatus
hasMacNewLTKSyncStatus
Ti,N,V_macNewLTKSyncStatus
hasReceivedSetupACK
hasReceivedTokenACK
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?uti=%@
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?scheme=%@
FILE_PERSON_SENDING_REQUIRES_APP_TEXT
FILE_DEVICE_SENDING_REQUIRES_APP_TEXT
LINK_PERSON_SENDING_REQUIRES_APP_TEXT
LINK_DEVICE_SENDING_REQUIRES_APP_TEXT
GET_APP_BUTTON_TITLE
GENERIC_ITEM
AppleIDAgent
development
Push connection still active during dealloc
-[AppleIDAgent _activate]
-[AppleIDAgent _invalidate]
Invalidated certificate request
Invalidated server task
requestType
createAndFetchCert
v24@?0@"SFAppleIDIdentity"8@"NSError"16
triggerPush
-[AppleIDAgent _performOtherTaskWithInfo:completion:]
Trigger push
Done
triggerVerify
Trigger verify
### Unsupported request type %@
createCert
fetchCert
certificateSN
vrid
-[AppleIDAgent _performServerTaskWithInfo:completion:]
Server Task Type: %d
Response Info: %@
-[AppleIDAgent _addAppleID:withCompletion:]
Add appleID: %@
-- AppleIDAgent --
Enabled: %s
Push Environment: %@
-[AppleIDAgent _ensurePushStarted]
AIA disabled
production
com.apple.coreservices.appleid.aps
com.apple.idmsauthagent
Started push agent with environment %@
-[AppleIDAgent _ensurePushStopped]
Invalidated push agent
-[AppleIDAgent _ensureVerifyTimerStarted]
Started verify timer
-[AppleIDAgent _ensureVerifyTimerStopped]
Stopped verify timer
-[AppleIDAgent _handleAppleIDChangedNotification]
Apple ID changed
-[AppleIDAgent _handleInfoResponse:forAppleID:certificateSerialNumber:validationRecordID:withError:completion:]
Response certSN %@ is different than the requested %@
No certificate status returned by server
-[AppleIDAgent _handleVerifyTimerFired]
Verify timer fired
aiaEnabled
-[AppleIDAgent _prefsChanged]
Agent Enabled: %s -> %s
aiaPushEnvironment
Agent Push Environment: %@ -> %@
-[AppleIDAgent _requestInfoForAppleID:completion:]
Info request already in progress
Request info for %@
-[AppleIDAgent _requestIdentityForAppleID:withCompletion:]
Request identity for %@
-[AppleIDAgent _updateCertificateStatus:forAppleID:]
No account for %@, cannot check certificate status
-[AppleIDAgent _updateCertificateStatus:forAppleID:]_block_invoke
Request identity for %@ failed with error %@
-[AppleIDAgent _updateMyInfo]_block_invoke
Updated info for %@
Update info for %@ failed with error %@
-[AppleIDAgent _verifyState]
Verifying state
Account doesn't have an identity object
Identity request already in progress
Identity needs renewal
Account doesn't have a validation record
Validation Record needs update
-[AppleIDAgent accountForAppleID:]
### _CSCopyAccountInfoForAppleID failed for %@ with error %@
AppleIDAgent account for %@:
-[AppleIDAgent accountStatusForAppleID:]
### _CSCopyAccountStatusForAppleID failed for %@ with error %@
AppleIDAgent account status for %@:
-[AppleIDAgent addAppleID:withCompletion:]
AppleIDAgent addAppleID for %@:
-[AppleIDAgent appleIDList]
AppleIDAgent list: %##@
-[AppleIDAgent copyIdentityForAppleID:]
### _CSCopySecIdentityForAppleID failed for %@ with error %@
AppleIDAgent secIdentity for %@:
-[AppleIDAgent linkUserToAppleID:]
_CSLinkAppleIDAccount failed with error %@
AppleIDAccountValidationRecordValidAsOfKey
-[AppleIDAgent validationRecordInfoForAppleID:]
_AppleIDAuthenticationCopyCertificateInfo for %@ failed with error %@
_AppleIDAuthenticationCopyCertificateInfo for %@ returned empty dictionary
-[AppleIDAgent connection:didReceiveToken:forTopic:identifier:]
Received push token '%.6@...', topic '%@', identifier '%@'
-[AppleIDAgent connection:didReceivePublicToken:]
Received public push token '%.6@...'
-[AppleIDAgent connection:didReceiveIncomingMessage:]
Received push notification topic '%@'
APSEnvironmentProduction
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
APSEnvironmentDevelopment
APSConnection
SDNotificationNameIDSAccountsChanged
SDNotificationNameIDSDevicesChanged
SDNearbyAgentNotificationUnlockBLEDataReceived
SDNearbyAgentNotificationInfoKeyBLEDevice
SDNearbyAgentNotificationInfoKeyBLEData
BLEAdv
SDNearbyAgentCore
SDNearbyAgentDetail
-- SDNearbyAgent --
Activity:              Up %ll{dur}, level %d (%s), timer %s, last user %.2f seconds, linger %s, screen %s (%s), multiuser %s, systemUI 0x%X, watch %d
locked
AutoUnlocking:         YES
BLE Connections:       %ld
BLE Diag Clients:      %ld
BLE Action Advertiser: %@, linger %s
BLE Action Scanner:    %@
BLE Info Advertiser:   %@
BLE Info Scanner:      %@
BLE Prox Scanner:      %@
BT Pipe:               %@
Device Discovery:      %ld request(s)
, Action
, NAScreenOff
, Info
, Prox
, PPScreenOff
, %ld Action
, %ld Info
, %ld Prox
v32@?0@"NSUUID"8@"SDBLEIdentifiedDevice"16^B24
, %u of %ld Identified
IDS Service:           %s, %s, %ld device(s), %d AppleTV, %d Continuity, %d HomePod, iMessage %s, %ld device(s)
signed in
not signed in
Services:              %ld, %ld sessions, %ld setup sessions
SystemService:         %@
-- BLE Connections --
-- Setup Sessions --
%@ -- %@
-- Sessions --
-- Devices --
-[SDNearbyAgent setAutoUnlockActive:]_block_invoke
AutoUnlocking: %s -> %s
-[SDNearbyAgent _activate]
-[SDNearbyAgent _invalidate]
activityPollSeconds
-[SDNearbyAgent prefsChanged]
Activity poll seconds: %d -> %d
activityRecentSeconds
Activity recent seconds: %d -> %d
btPipeEnabled
BT Pipe enabled: %s -> %s
caEnabled
Coordinated Alerts enabled: %s -> %s
caForce
Coordinated Alerts force: %d -> %d
caPhoneCalls
Coordinated Alerts phone calls: %s -> %s
caScanIfVeryActive
Coordinated Alerts scan if very active: %s -> %s
caSingleDevice
Coordinated Alerts single device: %s -> %s
idEnabled
Identification enabled: %s -> %s
mobileAsset
MobileAsset: %s -> %s
nearbyActionAdvertiseDisabled
NearbyAction advertise disabled: %s -> %s
nearbyActionRSSILog
NearbyAction RSSI log: %s -> %s
nearbyActionScanAlways
NearbyAction scan always: %s -> %s
NearbyAction scan never: %s -> %s
nearbyAuthTagOverride
Nearby AuthTag override: %@ -> %@
nearbyInfoAdvertiseAlways
NearbyInfo advertise always: %s -> %s
nearbyInfoAdvertiseDisabled
NearbyInfo advertise disabled: %s -> %s
nearbyInfoAdvertiseLingerSecs
NearbyInfo advertise linger seconds: %.0f -> %.0f
nearbyInfoRSSILog
NearbyInfo RSSI log: %s -> %s
pwsContactHashes
WiFiPasswordSharingContactHashes: %s -> %s
ppEnabled
Proximity Enabled: %s -> %s
ppInfoOverride
Proximity Info Override: %@
ppRSSIEstimatorInfo
ppRSSILog
Proximity RSSI log: %s -> %s
-[SDNearbyAgent _update]
### Ignoring update before activate
Create activity timer failed
-[SDNearbyAgent _activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:]
Activity level changed %d (%s) -> %d (%s)
-[SDNearbyAgent _activityMonitorCarPlayStatusChanged:]_block_invoke
CarPlay changed to %s
-[SDNearbyAgent _activityMonitorMultipleUsersLoggedInChanged:]_block_invoke
Multiple users logged in changed: %s
-[SDNearbyAgent _activityMonitorScreenStateChanged:]_block_invoke
Screen state changed to %s
-[SDNearbyAgent _activityMonitorUILockStatusChanged:]_block_invoke
UI lock status changed to %s
-[SDNearbyAgent _activityMonitorUpdateUserActive:]
User became inactive. Linger advertise for %.0f seconds
-[SDNearbyAgent _activityMonitorUpdateUserActive:]_block_invoke
Linger advertise ended
-[SDNearbyAgent _activityMonitorWatchWristStateChanged:]_block_invoke
Watch wrist state changed: %d
-[SDNearbyAgent _bleAddressMonitorEnsureStarted]
BLE address monitor start
advertisingAddress
-[SDNearbyAgent _bleAddressMonitorEnsureStopped]
BLE address monitor stop
-[SDNearbyAgent observeValueForKeyPath:ofObject:change:context:]
BLE address changed: %.6a
-[SDNearbyAgent peripheralManagerDidUpdateState:]
BLE address monitor state changed: %s
ssidH
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]
BLE NearbyAction advertiser start: %#{flags}, %##@
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke
### Start NearbyAction advertiser failed: %@
BLE NearbyAction advertiser update: %#{flags}
BLE NearbyAction advertiser goodbye update: %#{flags}
BLE NearbyAction linger advertise for 5 seconds for goodbyes
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke_2
BLE NearbyAction linger advertise ended
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStopped]
BLE NearbyAction advertiser stop
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]
BLE NearbyAction scanner start
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]_block_invoke
BLE NearbyAction found %@
BLE NearbyAction lost %@
BLE NearbyAction changed %@
v20@?0@"SFBLEDevice"8I16
BLE NearbyAction scan state changed: %s
### Start NearbyAction scanner failed: %@
-[SDNearbyAgent _bleNearbyActionScannerEnsureStopped]
BLE NearbyAction scanner stop
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStarted]
BLE NearbyInfo advertiser created
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStopped]
BLE NearbyInfo advertiser stop
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]
BLE NearbyInfo advertiser update
BLE NearbyInfo advertiser start: %##@
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]_block_invoke
### Start NearbyInfo advertiser failed: %@
-[SDNearbyAgent _bleNearbyInfoReceivedData:cnx:peer:]
### BLE NearbyInfo frame no type (%tu bytes)
BLE NearbyInfo no-op frame
BLE NearbyInfo PingRequest: %'.32@
BLE NearbyInfo PingResponse: %'.32@
BLE NearbyInfo received frame type 0x%02X, %ld bytes
### BLE Remote app frame with no service
### BLE Remote app frame with no service event handler
### BLE NearbyInfo frame %s, no service type
BLE NearbyInfo frame %s, %s, %ld bytes, peer %@
### BLE NearbyInfo unsupported frame type 0x%02X
### BLE NearbyInfo frame error: %#m
-[SDNearbyAgent _bleNearbyInfoReceivedFrameType:src:end:cnx:]
### BLE NearbyInfo frame no session ID (%tu bytes)
### BLE NearbyInfo frame no message ID (%tu bytes)
Bad frame type: %d
BLE NearbyInfo received session frame type 0x%02X
### BLE NearbyInfo session receive with no handler: %@
00000000-0000-0000-0000-000000000000
BLE NearbyInfo received service frame type 0x%02X
_serviceUUID
### BLE NearbyInfo service receive with no handler: %@
### BLE NearbyInfo receive frame failed: %#m
-[SDNearbyAgent bleNearbyInfoStartConnectionToDevice:owner:connected:]
Reusing BLE connection for %@
Creating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoStopConnectionToDevice:owner:]
Invalidating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]
### BLE Nearby send frame type %s, invalid service 0x%X, %ld bytes, peer %@
### BLE Nearby send frame type %s, service %s, %ld bytes, unknown peer %@
### Can't send more than 255 fragments (%zu total bytes)
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]_block_invoke
### BLE Nearby send frame type %s, fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
### BLE Nearby send frame type %s, last fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
### BLE Nearby send frame type %s, service %s, %ld bytes, peer %@ failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]
BLE NearbyInfo scanner start
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke
BLE NearbyInfo found %@
BLE NearbyInfo lost device %@
BLE NearbyInfo changed %@
BLE NearbyInfo scan state changed: %s
### Start NearbyInfo scanner failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStopped]
BLE NearbyInfo scanner stop
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]
BLE Prox scanner start
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke
BLE Prox found %@
BLE Prox lost %@
BLE Prox changed %@
BLE Prox scan state changed: %s
### BLE Prox scanner start failed: %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStopped]
BLE Prox scanner stop
-[SDNearbyAgent _btPipeEnsureStarted]
BTPipe start
com.apple.sharing.BTPipe
### BTPipe start faild: %#m
-[SDNearbyAgent _btPipeEnsureStopped]
BTPipe stop
-[SDNearbyAgent _btPipeHandleFrameType:data:]
BTPipe ping request: %ld bytes
### Ping request too small: %ld bytes
-[SDNearbyAgent _btPipeHandleFrameType:data:]_block_invoke
### BTPipe ping response failed: %@
### Ping response too small: %ld bytes
BTPipe ping response: %ld bytes, %.0f ms
-[SDNearbyAgent _bleUpdateAuthTagIfNeeded]
### No BLE advertising address to generate auth tag
### No pairing daemon to get AltIRK
### No pairing identity to get AltIRK: %#m
### No AltIRK (%ld bytes)
Updated BLE Auth Tag: <%@>
apay
atvp
ppEn
ppEx
ppRp
psEn
psEx
whas
ppEn-BeatsSolo3,1
ppEx-BeatsSolo3,1
ppEn-Device1,8201
ppEx-Device1,8201
rEst
algo
b238s-iPad-*
b238s
ioss-*-iPad
ioss-iPad-*
ioss-iPhone10,1-*
ioss-iPhone10,2-*
ioss-iPhone10,3-*
ioss-iPhone10,4-*
ioss-iPhone10,5-*
ioss-iPhone10,6-*
ioss
%@-%@-%@
%@-*-%@
%@-%@-*
-[SDNearbyAgent coordinatedAlertRequestStart:]
CoordinatedAlert: start
CoordinatedAlert: always alerting when no other devices registered
CoordinatedAlert: always alerting for phone calls
CoordinatedAlert: skipping when very active
CoordinatedAlert: skipping when disabled
@"AWDSharingCoordinatedAlertResult"8@?0
level
best
skipPhone
skipActive
MsgScans
MsgNoScans
CA: Start, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestFinish:]
CoordinatedAlert finish: device %@ ignored because its %s is disabled
CoordinatedAlert finish: device %@ activity level too low: 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is higher than ours 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is lower than ours 0x%02X (%s)
CoordinatedAlert finish: no other devices found
*** Forcing Coordinated Alert 'bestIsMe' to %s
Finish
CA: Finish, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestCancel:]
CoordinatedAlert cancel
-[SDNearbyAgent _deviceDiscoveryRequestStart:]
DeviceDiscovery start
-[SDNearbyAgent deviceDiscoveryRequestStop:]
DeviceDiscovery stop
MatchProx
MatchKeyboard
MatchSetup
-[SDNearbyAgent _deviceDiscoveryFastScanStart:device:reason:]
Fast scan start ignored for UI state (screen %s, unlocked %s)
Fast scan start too soon (%llu < %u seconds)
Fast scan rate start '%@' for %@
Fast scan rate start '%@'
Timeout-%@
-[SDNearbyAgent _deviceDiscoveryFastScanStop:reset:reason:]
Fast scan rate stop '%@'
-[SDNearbyAgent diagnosticBLEModeStart:]
BLE diagnostic mode start
-[SDNearbyAgent diagnosticBLEModeStop:]
BLE diagnostic mode stop
-[SDNearbyAgent diagnosticMockChanged:]
Mocking changed event with device: %@
-[SDNearbyAgent diagnosticMockFound:]
Mocking found event with device: %@
-[SDNearbyAgent diagnosticMockLost:]
Mocking lost event with device: %@
-[SDNearbyAgent _identificationEnsureStarted]
Identification start
v24@?0@"CUPairedPeer"8Q16
-[SDNearbyAgent _identificationEnsureStarted]_block_invoke
### Identification get paired peers failed: %{error}
-[SDNearbyAgent _identificationEnsureStopped]
Identification stop
-[SDNearbyAgent _identificationHandleAppleIDChanged:]_block_invoke
AppleID changed
-[SDNearbyAgent _identificationHandleDeviceFound:flags:]
### Max identification devices reached (%ld)
bdAddr
Identification starting maintenance timer
-[SDNearbyAgent _identificationMaintenanceTimer]
Identification removed stale %@
Identification stopping maintenance timer
-[SDNearbyAgent _identificationReIdentify]
Identification re-identify
v32@?0@"NSUUID"8@"CUPairedPeer"16^B24
-[SDNearbyAgent _idsEnsureStarted]
IDS start
-[SDNearbyAgent _idsEnsureStopped]
IDS stop
AppleTV
iMac
Local BT Addr %.6a, Local IDS UniqueID: %@ (%@)
, iMessage
, SMS
, Active
, Connected
, Paired
AudioAccessory1,
-[SDNearbyAgent service:account:identifier:didSendWithSuccess:error:context:]
IDS service %@, account %@, identifier %@, success %d, error %@, context @
-[SDNearbyAgent service:account:identifier:hasBeenDeliveredWithContext:]
IDS service %@, account %@, identifier %@, context @
-[SDNearbyAgent service:account:incomingMessage:fromID:context:]
IDS service %@, account %@, message %@, fromID %@, context %@
-[SDNearbyAgent service:activeAccountsChanged:]
IDS service %@ activeAccountsChanged %@
-[SDNearbyAgent service:connectedDevicesChanged:]
IDS service %@ connectedDevicesChanged %@
-[SDNearbyAgent service:devicesChanged:]
IDS service %@ devicesChanged %@
com.apple.MobileAsset.SharingAssets.new-asset-installed
-[SDNearbyAgent _mobileAssetEnsureStarted]_block_invoke
SharingAsset installed
com.apple.MobileAsset.SharingAssets.cached-metadata-updated
SharingAsset updated
-[SDNearbyAgent _mobileAssetEnsureStarted]
MobileAsset started
-[SDNearbyAgent _mobileAssetEnsureStopped]
MobileAsset stopped
-[SDNearbyAgent _mobileAssetCheck:]
MobileAsset start query
com.apple.MobileAsset.SharingAssets
-[SDNearbyAgent _mobileAssetCheck:]_block_invoke_2
MobileAsset query failed: %@
Trying remote MobileAsset query
-[SDNearbyAgent _mobileAssetProcessQueryResults:]
MobileAsset query complete %?@
MobileAsset latest asset other state: %@
MobileAsset no newer version (%u <= %u)
-[SDNearbyAgent _mobileAssetDownloadAsset:]
MobileAsset download asset %?@
-[SDNearbyAgent _mobileAssetDownloadAsset:]_block_invoke
MobileAsset download complete %?@
### MobileAsset download error: %@, %@
MobileAsset progress: %@, %@
-[SDNearbyAgent _mobileAssetReadAsset:]
MobileAsset read asset %?@
MobileAsset version %u <= base %u...skipping
BLENearbyInfoSchema.plist
MobileAsset updated BLE NearbyInfo schema version %u -> %u %?@
com.apple.Sharing.prefsChanged
### MobileAsset read asset failed: %@
Purging MobileAsset after read failure
-[SDNearbyAgent _mobileAssetReadAsset:]_block_invoke
Purge MobileAsset done. Re-checking
Proximity.plist
-[SDNearbyAgent _mobileAssetReadProximityInfo:]
MobileAsset updated ProximityInfo to version %u %?@
-[SDNearbyAgent serviceStart:]
Service start: %@
### Service start failed: %#m
-[SDNearbyAgent serviceStop:]
Service stop: %@
### Service stop failed: %#m
v32@?0@"NSUUID"8@"SFService"16^B24
-[SDNearbyAgent serviceSendRequest:service:]
### Completing error response for service request %@ for service %@
-[SDNearbyAgent sessionStart:]
Session start: service %@, %@
Reusing BLE connection for session %@
Create new BLE connection for session %@
### Session start failed: %#m
-[SDNearbyAgent sessionStop:]
Session stop: %@, peer %@, connection %@
Invalidating BLE connection for session %@
Session stop: %@ (no peer/connection)
v32@?0@"NSUUID"8@"SFSession"16^B24
-[SDNearbyAgent sessionSendEvent:session:]
### Send Remote app message with no device identifier
### Send Remote app message to %@ with no connection
### Attempt to send Remote app message with header fields
### Attempt to send Remote app message with no body
-[SDNearbyAgent sessionSendEvent:session:]_block_invoke
### Sent %ld bytes to %@ failed: %@
-[SDNearbyAgent sessionSendRequest:session:]
### Completing error response for request %@ for session %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]
### Send message no device
### Send message no session
### Send message no message identifier
### Send message no service UUID
### Send message no connection
### Send message no connection for device %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]_block_invoke
Sent message to %@, %@, %@
### Send message failed: %#m
-[SDNearbyAgent _setupHandleCreateSession:data:]
BLE SetupCreateSession received from %@: %'.32@
WriteSalt
WriteKey
ReadSalt
ReadKey
### BLE SetupCreateSession failed: %#m
-[SDNearbyAgent _setupHandleSessionCreated:data:]
BLE SetupSessionCreated received from %@: %'.32@
-[SDNearbyAgent _setupHandleSessionEncryptedFrame:type:cnx:]
BLE SetupEMsg type 0x%02X received from %@: %'.32@
### BLE SetupEMsg session %@ not found
### BLE SetupEMsg type 0x%02X received from %@ failed: %#m
-[SDNearbyAgent _setupHandleSessionMessageType:src:end:cnx:session:]
### BLE SetupRecvMsg no message ID (%tu bytes)
### BLE NearbyInfo setup session receive with no handler: %@
### BLE NearbyInfo setup service receive with no handler: %@
### BLE SetupRecvMsg failed: %#m
-[SDNearbyAgent _setupSendCreateSession:cnx:]
BLE SetupSendCreateSession %@
### BLE SetupSendCreateSession failed: %#m
-[SDNearbyAgent _setupSendData:sessionIdentifier:cnx:clientSession:]
BLE Setup re-creating lost session ID %@
### BLE SetupSendMsg no setup session after re-create?
BLE SetupSendMsg queuing data until session created (%ld)
### BLE SetupSendMsg failed: %#m
Start unlock connection with no identifier
-[SDNearbyAgent _startUnlockBLEConnectionWithDevice:encrypted:]
Reusing BLE connection for unlock
Creating BLE connection for unlock
Stop unlock connection with no identifier
-[SDNearbyAgent _stopUnlockBLEConnectionWithDevice:]
Invalidating BLE connection for unlock
Send unlock data to BLE device with no identifier
-[SDNearbyAgent _unlockReceivedFrameData:peer:device:]
BLE NearbyInfo AutoUnlock received %ld bytes from %@
-[SDNearbyAgent unlockUpdateAdvertising:mask:]_block_invoke
Unlock advertise update: 0x%X flags, 0x%X mask
-[SDNearbyAgent unlockStartTestClientWithDevice:]
Unlock test client with device: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke_2
Unlock test send: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke
Unlock test client timer stopped
-[SDNearbyAgent unlockStopTestClient]
Unlock test client stop
-[SDNearbyAgent unlockStartTestServer]
Unlock start test server
-[SDNearbyAgent unlockStopTestServer]
Unlock stop test server
-[SDNearbyAgent _testPipePing]
### BT Pipe not enabled
-[SDNearbyAgent _testPipePing]_block_invoke
### BTPipe ping request failed: %@
autoUnlockActive
TB,N,V_autoUnlockActive
T@"NSData",C,N,V_authTag
btAddr
T@"NSData",C,N,V_btAddr
discoveryFlags
TQ,N,V_discoveryFlags
lastUpdateTicks
TQ,N,V_lastUpdateTicks
pairedPeer
T@"CUPairedPeer",&,N,V_pairedPeer
SDSession %{ptr}
, ID %@
, Peer %@
, SessionCreated %s
, %ld pending sends
clientSession
T@"SFSession",&,N,V_clientSession
T@"NSUUID",C,N,V_identifier
dhSecretKey
T@"NSData",C,N,V_dhSecretKey
readKey
T@"NSData",C,N,V_readKey
readNonce
TQ,N,V_readNonce
writeKey
T@"NSData",C,N,V_writeKey
writeNonce
TQ,N,V_writeNonce
peerIdentifier
T@"NSUUID",C,N,V_peerIdentifier
sendDataQueue
T@"NSMutableArray",&,N,V_sendDataQueue
sessionCreated
TB,N,V_sessionCreated
Disabled
Idle
Audio
Screen
Video
User
Driving
Unsupported
Unauthorized
Scanning
NoOp
PingReq
PingResp
UncRaw
UncOPACK
EncOPACK
UncEvent
UncReq
UncRes
RemoteApp
IRControl
IRData
PSStart
PSNext
PVStart
PVNext
HeartbeatLegacy
HeartbeatReq
HeartbeatAck
StartReq
StartAck
TLSMessage
TLSHandshake
TLSDencrypted
EncOPACKZ
UncOPACKZ
HeartbeatAlive
SUCreateSession
SUSessionCreated
SUEvent
SUReq
SUResp
ServiceFragment
ServiceFragmentLast
SessionFragment
SessionFragmentLast
ContinuityRemote
iOSSetup
Repair
Setup2
AudioTuning
PasswordGranting
PasswordSharing
System
WHASetup
AppleTVSetup
DeviceDiagnostics
RemoteAutoFill
ApplePay
Debug
CompanionLinkProx
Configurator
HomePod
Unspecified
iMessage
PhoneCall
ASAssetQuery
/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
ASAttributeContentVersion
ASStateOperation
ASOperationCompleted
ASDownloadOptionAllowWiFi
ASDownloadOptionAllow2G
ASDownloadOptionAllow3G
ASDownloadOptionAllow4G
ASDownloadOptionAllowBatteryPower
ASDownloadOptionAllowRoaming
SDProximityPairingAgent
Discovery still active during dealloc
-- SDProximityPairingAgent --
Enabled %s%s, Pair %s (%d), Status %s (%d), Exit %d, Unpaired %s, SystemUI 0x%X, Fast %c%c%c%c%c
 (always)
PairUI %s, StatusUI %s, BTUser %ld, RSSI Pair %ld|%ld, Repair %ld, Status %ld|%ld
Device Discovery: %@, %ld devices, %ld triggered
    %@
, triggered
    Orphaned triggered device: %@
-[SDProximityPairingAgent _activate]
-[SDProximityPairingAgent _invalidate]
-[SDProximityPairingAgent bluetoothUserInteractionStart:]_block_invoke
Bluetooth user interacton started (%ld)
-[SDProximityPairingAgent bluetoothUserInteractionStop:]_block_invoke
Bluetooth user interacton stopped (%ld)
ppAutoPairEnabled
-[SDProximityPairingAgent prefsChanged]
Auto Pair Enabled: %s -> %s
ppPairRSSI
Auto Pair RSSI: %d -> %lld
ppAutoStatusEnabled
Auto Status Enabled: %s -> %s
ppAutoStatusUnpaired
Auto Status Unpaired: %s -> %s
ppStatusRSSI
Auto Status RSSI: %d -> %lld
Enabled: %s -> %s
ppExitRSSI
Exit RSSI: %d -> %lld
ppFastScanAlways
Fast Scan Always: %s -> %s
ppFastScanPair
Fast Scan Pair: %s -> %s
ppFastScanStatusMine
Fast Scan Status Mine: %s -> %s
ppFastScanStatusOthers
Fast Scan Status Others: %s -> %s
ppPhoneOnly
Phone only: %s -> %s
ppScanAlways
Scan Always: %s -> %s
-[SDProximityPairingAgent _ensureStarted]
Discovery start
-[SDProximityPairingAgent _ensureStarted]_block_invoke
Changed device: %@, %#{flags}
Discovery started
### Discovery start failed: %@
Discovery stop (screen off)
screenOff
-[SDProximityPairingAgent _ensureStopped]
Discovery stop (stopped)
stop
-[SDProximityPairingAgent _deviceFound:]
Found device: %@
-[SDProximityPairingAgent _deviceLost:]
Lost device: %@
-[SDProximityPairingAgent _deviceChanged:]
Re-enable trigger on lid close: %@
locP
locS
Re-enable trigger on lid open count (%u -> %u): %@
hsStatus
Ignoring proximity pairing for non-user initiated lock screen
Ignoring proximity pairing unsupported device on lock screen
Triggering proximity pairing (%ld): %@
trigger pair
AirPods1,1
Ignoring proximity status for non-user initiated lock screen
Triggering proximity repair (%ld): %@
trigger repair
Triggering proximity status (%ld) %@
trigger status
-[SDProximityPairingAgent _fastScanStart:]
Fast scan rate skipped (too soon)
Fast scan rate start for %@
timer
-[SDProximityPairingAgent _fastScanStop:reset:]
Fast scan rate stopped (%s)
-[SDProximityPairingAgent remoteAlertHandleDidActivate:]_block_invoke
Pairing alert DidActivate
Status alert DidActivate
### Unknown alert DidActivate
-[SDProximityPairingAgent remoteAlertHandleDidDeactivate:]_block_invoke
Pairing alert DidDeactivate
Status alert DidDeactivate
-[SDProximityPairingAgent remoteAlertHandle:didInvalidateWithError:]_block_invoke
Pairing alert DidInvalidate: %{error}
Status alert DidInvalidate: %{error}
Unknown Alert DidInvalidate: %{error}
-[SDProximityPairingAgent retriggerProximityPairing:]_block_invoke
Re-triggering pairing UI for %@
### Re-trigger failed: no triggered devices
-[SDProximityPairingAgent _screenStateChanged:]_block_invoke
-[SDProximityPairingAgent _startPairingUI:autoStart:repair:]
### No device identifier for %@
### No device address for %@
### Bad device address size for %@
%.6a
autoStart
batteryLevelLeft
batteryLevelRight
batteryLevelCase
colorCode
deviceAddress
sessionUUID
supportedDevice
repairMode
repairRSSI
ProximityPairingViewControllerProxy
### Create remote alert handle failed
@"AWDSharingProximityPairingTriggered"8@?0
PairUI
PP: PairUI, ID %@, RSSI %ld, model %@
### Start pairing UI failed: %#m
-[SDProximityPairingAgent _startStatusUI:]
paired
ProximityStatusViewControllerProxy
@"AWDSharingProximityStatusTriggered"8@?0
StatusUI
PP: StatusUI, ID %@, RSSI %ld, model %@
### Start status UI failed: %#m
BeatsX1,1
PowerBeats3,1
BeatsSolo3,1
-[SDProximityPairingAgent _uiLockStatusChanged:]_block_invoke
-[SDProximityPairingAgent testPairingUI:]
Testing pairing UI (%@)
repair
-[SDProximityPairingAgent testStatusUI:]
Testing status UI (%@)
model=
fail
pid=%u
color=%hhu
b188
b282
b312
b352
00000000-0000-0000-0000-000000000001
com.apple.TVRemote
com.apple.Remote
SDRemoteInteractionAgent
AppStateMonitor Still active during dalloc
StatusMonitor still active during dealloc
-- SDRemoteInteractionAgent --
Server: %@
Client: %@, %ld NeedsKeyboard, Disabled %s, %ld RSSI threshold
Sessions: %ld
    Found device: %@
    Session device: %@
-[SDRemoteInteractionAgent activate]_block_invoke
-[SDRemoteInteractionAgent invalidate]_block_invoke
-[SDRemoteInteractionAgent prefsChanged]
ContinuityRemote client enabled: %s -> %s
autoPauseEnabled
ContinuityRemote server enabled: %s -> %s
riClientEnabled
Client enabled: %s -> %s
riCloudPairedOnly
Cloud paired only: %s -> %s
riServerEnabled
Server enabled: %s -> %s
RSSI threshold: %ld -> %ld
-[SDRemoteInteractionAgent setPreventNotifications:]_block_invoke
Prevent notifications: %s -> %s
-[SDRemoteInteractionAgent remoteTextSessionDidChangeDeferred]
TextDidChange suppressing: %@
TextDidChange applying: %@
-[SDRemoteInteractionAgent _crServerEnsureStarted]
ContinuityRemote service start
v16@?0@"SFSession"8
v24@?0@"SFSession"8@"NSError"16
v28@?0@"SFSession"8I16@"NSDictionary"20
-[SDRemoteInteractionAgent _crServerEnsureStarted]_block_invoke
ContinuityRemote service activated
### ContinuityRemote service activate failed: %@
-[SDRemoteInteractionAgent _crServerEnsureStopped]
ContinuityRemote stop
-[SDRemoteInteractionAgent _crServerHandleSessionStarted:]
ContinuityRemote session started with %@
-[SDRemoteInteractionAgent _crServerHandleSessionEnded:error:]
ContinuityRemote session stopped with %@, %{error}
-[SDRemoteInteractionAgent _crServerHandleReceivedObject:session:flags:]
### Ignoring unencrypted object: %.64@
### Ignoring unsupported command: %u, %#m
-[SDRemoteInteractionAgent _crClientEnsureStarted]
ContinuityRemote Discovery start
-[SDRemoteInteractionAgent _crClientEnsureStarted]_block_invoke
BLE RIA Found: %@
BLE RIA Lost: %@
BLE RIA Changed: %@, %#{flags}
ContinuityRemote Discovery started
### ContinuityRemote Discovery start failed: %@
-[SDRemoteInteractionAgent _crClientEnsureStopped]
ContinuityRemote Discovery stop
-[SDRemoteInteractionAgent _crClientDeviceFound:]
### Ignoring unpaired device %@
-[SDRemoteInteractionAgent _serverEnsureStarted]
### Create HID client failed
Control service activate
v16@?0@"SFEventMessage"8
v16@?0@"SFRequestMessage"8
-[SDRemoteInteractionAgent _serverEnsureStarted]_block_invoke
Control service activated
### Control service activate failed: %@
-[SDRemoteInteractionAgent _serverHandleEvent:]
### Ignoring event from peer with no identifier
### Ignoring event from unpaired peer %@
### Bad event opcode: %#m
Received start session %@ from %@
### Bad insert text text: %#m
### Bad set text text: %#m
### Unknown event opcode: %d
-[SDRemoteInteractionAgent _serverHandleRequest:]
### Ignoring request from unpaired peer %@
### Bad request opcode: %#m
### Unknown request opcode: %d
UserAssignedDeviceName
-[SDRemoteInteractionAgent clearText]_block_invoke
Clear text
-[SDRemoteInteractionAgent commitText]_block_invoke
Commit text
-[SDRemoteInteractionAgent deleteTextBackward]_block_invoke
Backspace
-[SDRemoteInteractionAgent insertText:]_block_invoke
Insert text
-[SDRemoteInteractionAgent setText:]_block_invoke
Set text
-[SDRemoteInteractionAgent _hidSendKeyboardEventUsagePage:usageCode:]
### Send keyboard event failed: %#m
-[SDRemoteInteractionAgent _hidSendText:]
### Send text failed: %#m
-[SDRemoteInteractionAgent sessionStart:]
Session start
-[SDRemoteInteractionAgent sessionStop:]
Session stop
-[SDRemoteInteractionAgent _clientEnsureStarted]
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke
Discovery stop (disabled)
com.apple.Sharing.Remote
-[SDRemoteInteractionAgent _clientEnsureStopped]
Discovery stop
-[SDRemoteInteractionAgent _clientDeviceFound:]
Ignoring far away NeedsKeyboard: %@
Device NeedsKeyboard new: %@
-[SDRemoteInteractionAgent _clientDeviceLost:]
Device NeedsKeyboard lost: %@
-[SDRemoteInteractionAgent _clientDeviceLockStatusChanged:]_block_invoke
-[SDRemoteInteractionAgent _clientUpdateCoalesceTimerForDevice:identifier:]
Device NeedsKeyboard end: %@
-[SDRemoteInteractionAgent _clientUpdateCoalesceTimerForDevice:identifier:]_block_invoke
Device NeedsKeyboard end coalesce: %@
Device NeedsKeyboard again: %@
riClientTriggered
com.apple.ContinuityKeyBoard.enabled
-[SDRemoteInteractionAgent _clientSetupBulletinsIfNeeded:]
Checking KB bulletin settings...
-[SDRemoteInteractionAgent _clientSetupBulletinsIfNeeded:]_block_invoke
KB bulletin settings not found...leaving on until turned off
-[SDRemoteInteractionAgent _clientPostKeyboardNotificationIfNeeded:]
Checking if any Remote app is frontmost
Checking frontmost state of %@
-[SDRemoteInteractionAgent _clientPostKeyboardNotificationIfNeeded:]_block_invoke
Frontmost state of %@: %s
v16@?0@"NSDictionary"8
-[SDRemoteInteractionAgent _clientPostKeyboardNotification:silent:]
Duplicate NeedsKeyboard notification
dismissActionIdentifier
REMOTE_BULLETIN_DISMISS_ACTION_TITLE
REMOTE_BULLETIN_MESSAGE
continuityRemoteCategory
REMOTE_BULLETIN_SUBTITLE
REMOTE_BULLETIN_PLACEHOLDER
placeholderText
postAndUpdate
postAndUpdateKey
@"AWDSharingContinuityKeyboardTriggered"8@?0
KBPost
KBPost %@, RSSI %ld
-[SDRemoteInteractionAgent _clientRemoveKeyboardNotification:]
Ignoring remove of non-existent NeedsKeyboard notification
@"AWDSharingContinuityKeyboardResult"8@?0
KBRemove
KBRemove %@, RSSI %ld
-[SDRemoteInteractionAgent _clientScheduleSilentNotification:]
Scheduling silent notification since a remote app is frontmost
-[SDRemoteInteractionAgent _clientScheduleSilentNotification:]_block_invoke
### Get Remote app state failed: %#m
Silently posting alert now that Remote app is no longer foreground
Ignoring silent alert post now that '%@' no longer needs keyboard
-[SDRemoteInteractionAgent _clientUpdateKeyboardNotification:info:]
### Update for non-existent NeedsKeyboard notification
REMOTE_BULLETIN_MESSAGE_OPEN
KBUpdate %@, Prompt '%@', Title '%@'
-[SDRemoteInteractionAgent bulletinsWithRequestParameters:lastCleared:]
Active bulletins: %ld
-[SDRemoteInteractionAgent clearedInfoForClearingAllBulletinsWithLastClearedInfo:]
BB clearing all bulletins.
BB requesting cleared info for bulletin with device ID %@
-[SDRemoteInteractionAgent clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:]
emptyActionIdentifier
-[SDRemoteInteractionAgent handleBulletinActionResponse:]
Bulletin supplementary action
Cannot dismiss bulletin, no device identifier.
Cannot dismiss bulletin, bad device identifier.
Dismiss event from long look, keeping notification live.
Bulletin dismiss action
Cannot dismiss bulletin, no device
Bulletin unsupported action: %@
-[SDRemoteInteractionAgent noteSectionInfoDidChange:]
KB bulletin settings updated: disabled: %s -> %s
@"AWDSharingContinuityKeyboardSettings"8@?0
KBSet
REMOTE_BULLETIN_SECTION_DISPLAY_NAME
ContinuityKeyboard-Icon
REMOTE_SUBTYPE_FULL_UNLOCK_3D_TOUCH
REMOTE_SUBTYPE_FULL_UNLOCK_NON_3D_TOUCH
REMOTE_SUBTYPE_TOPIC
REMOTE_SUBTYPE_UNLOCK
-[SDRemoteInteractionAgent testKeyboardPost]
Testing keyboard post
-[SDRemoteInteractionAgent testKeyboardPostThenUpdate]
Testing keyboard post then update
-[SDRemoteInteractionAgent testKeyboardRemove]
Testing keyboard remove
-[SDRemoteInteractionAgent testKeyboardUpdate]
Testing keyboard update
Continuity Keyboard
preventNotifications
TB,N,V_preventNotifications
Play
Pause
NextTrack
PreviousTrack
SkipForward
SkipBackward
SetRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
Seek
SDAppleIDThrottle
void SDAppleIDThrottleResetForAppleID(NSString * _Nullable __strong)
Reset throttle for '%@'
void SDAppleIDThrottleUpdateForAppleID(NSString * _Nonnull __strong)
### Updated throttle with NULL AppleID?
counter
Updated throttle for '%@': %ld -> %ld seconds
void SDAppleIDThrottleForceMaxForAppleID(NSString * _Nonnull __strong)
### ThrottleForceMax called with nil AppleID
Updated throttle to max for '%@': %ld seconds
SDAppleIDURLResponse
-[SDAppleIDURLResponse initWithHTTPUTLResponse:data:]
### JSON -> Data failed with error %@
### JSON object not a dictionary
responseInfo
T@"NSDictionary",R,N,V_responseInfo
statusCode
Tq,R,N,V_statusCode
SDSetupAgent
Scan timer still active during dealloc
PINPair still active during dealloc
-- SDSetupAgent --
Discovery: %@, %ld needSetup, %ld triggered
ScanTimer: %s, %d seconds
Client UI Active: %s
    %s %@
TRIG
----
PINPair service: %@
PINPair session: %@, UUID %@
Problems: %#ll{flags}
, RepairService On
WatchScanner: %@
    %@
Wi-Fi Password Sharing: granting %s, requesting availability: %#{flags}
-[SDSetupAgent _activate]
com.apple.ManagedConfiguration.profileListChanged
-[SDSetupAgent _activate]_block_invoke
Profiles changed
-[SDSetupAgent _invalidate]
-[SDSetupAgent nfcTagReaderUIActivateWithEndpoint:params:completion:]_block_invoke
### Ignoring NFC Tag Reader UI when already showing UI
Prox UI Already Active
Start NFC Tag Reader UI
NFCTagReaderMainController
NFCUI
-[SDSetupAgent openSetupURL:]
Deferring open setup URL until setup UI dismisses: %@
-[SDSetupAgent _openSetupURL:]
Opened setup URL: %@
### Open setup URL failed: %@, %{error}
nearbyAuthTagFilter
-[SDSetupAgent prefsChanged]
AuthTag filter: %@ -> %@
saClientEnabled
pwsAutoGrant
Wi-Fi password sharing autoGranting enabled: %s -> %s
pwsGrantingEnabled
Wi-Fi password sharing granting enabled: %s -> %s
saRepairEnabled
Repair enabled: %s -> %s
saScanSeconds
Scan seconds: %d -> %lld
saServerEnabled
saWatchMigration
WatchMigration enabled: %s -> %s
saWatch
WatchSetup enabled: %s -> %s
com.apple.Home
HFExposeB238
Expose HomePod: %s -> %s (%#m, %s)
internal
customer
-[SDSetupAgent reenableProxCardType:]
Re-enabled prox card type %s
Ignored re-enable of unsupported prox card type %s
-[SDSetupAgent retriggerProximitySetup:]_block_invoke
Re-triggering setup UI for %@
-[SDSetupAgent showDevicePickerWithInfo:completion:]_block_invoke
### Ignoring Device Picker UI when already showing UI
Start Device Picker UI
ProfileDevicePickerMainController
DevicePicker
-[SDSetupAgent triggerHomeKitDeviceDetectedWithURL:completion:]_block_invoke
### Ignoring HomeKit Device Detected UI when already showing UI
Triggering HomeKit Device Detected UI: '%@'
-[SDSetupAgent _ensureClientStarted]
ScanEligible: %s -> %s
Start scan timer for %{dur}
SetupAgent
-[SDSetupAgent _ensureClientStarted]_block_invoke
WatchScan start
-[SDSetupAgent _ensureClientStarted]_block_invoke_2
BLE WatchSetup found %@
BLE WatchSetup lost %@
BLE WatchSetup changed %@
### WatchScan start failed: %@
Discovery stop (shouldn't scan)
WatchScan stop (shouldn't scan)
-[SDSetupAgent _ensureClientStopped]
WatchScan stop (stopped)
-[SDSetupAgent _deviceFound:]
Ignoring proximity for non-user initiated lock screen
Triggered
Triggering proximity ApplePay with %@
com.apple.applepay.proximity
Ignoring proximity AppleTVPair with another %@
Ignoring proximity AppleTVPair when not allowed for %@
Triggering proximity AppleTVPair with %@
Ignoring proximity AppleTVSetup with another %@
Ignoring proximity AppleTVSetup when not allowed for %@
Triggering proximity AppleTVSetup with %@
Ignoring proximity HomePod when not enabled by profile: %@
Ignoring proximity B238Setup with another %@
Ignoring proximity B238Setup when not allowed for %@
Triggering proximity B238Setup with %@
Triggering proximity DeviceDiagnostics with %@
com.apple.diagnosticextensionsd.sharing-wakeup
Ignoring proximity iOSSetup with another %@
Ignoring proximity iOSSetup when not allowed for %@
Triggering proximity iOSSetup with %@
Ignoring proximity iOSSetup in EDU mode
Ignoring proximity Repair with another %@
Ignoring proximity Repair when not allowed for %@
Triggering proximity Repair with %@
Ignoring unpaired proximity Repair with %@
Ignoring proximity WHASetup with another %@
Ignoring proximity WHASetup when not allowed for %@
Triggering proximity WHASetup with %@
Ignoring PasswordSharing request when not allowed for %@
Triggering Wi-Fi Password Sharing with %@
Shouldn't offer password, ignoring triggered device: %@
Ignoring proximity setup for unsupported action %d: %@
Setup
-[SDSetupAgent _launchAppWithMachServiceName:]
Launch XPC '%@' start
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke
Launch XPC event: %{xpc}
SharingXPCLaunch
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke_2
Launch XPC '%@' finish
needsSetup
com.apple.sharing.DeviceSetup
-[SDSetupAgent _postDeviceSetupNotificationForDevice:present:]
Posted %@: %##@
-[SDSetupAgent remoteAlertHandleDidActivate:]_block_invoke
UI DidActivate
### Unknown UI DidActivate
-[SDSetupAgent remoteAlertHandleDidDeactivate:]_block_invoke
UI DidDeactivate
-[SDSetupAgent remoteAlertHandle:didInvalidateWithError:]_block_invoke
UI DidInvalidate: %{error}
Unknown UI DidInvalidate: %{error}
-[SDSetupAgent _appleAccountSignIn:]_block_invoke
Apple Account signed in
-[SDSetupAgent _scanTimerFired]
Scan stop timer fired
-[SDSetupAgent _screenStateChanged:]_block_invoke
-[SDSetupAgent _shouldOfferPassword:]
Ignoring pw request from non-contact peer
Ignoring pw request from blocked-contact peer
Ignoring pw request without requestSSID
ssid
pskStr
### Error getting network hashed psk
### No Wi-Fi PSK to send
shareMode
### Get network share mode failed: %#m
### Unexpected error checking pws sharable: %@
Should share network "%@": %s
-[SDSetupAgent _uiLockStatusChanged:]_block_invoke
HomeKitDeviceDetectedMainController
HomeKitDeviceDetected
urlStr
PINPairMainController
RepairMainController
RepairUI
AppleTVSetupMainController
AppleTVSetupUI
B238SetupMainController
B238SetupUI
iOSSetupMainController
iOSSetupUI
deviceClassCode
deviceModelCode
05938CDC
WatchSetupViewControllerProxy
WatchSetupUI
com.apple.Bridge
advertisingName
WHASetupMainController
WHASetupUI
-[SDSetupAgent _uiStartWiFiPasswordSharing:]
Not showing WPS UI for non-contact peer
### Not showing WPS UI, no request SSID
### Neither email nor phone hashes found
PasswordSharingViewControllerProxy
WiFiPasswordSharing
-[SDSetupAgent _uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:]
%@: Checking if apps are frontmost: %##@
%@: Checking frontmost state of %@
-[SDSetupAgent _uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:]_block_invoke
%@: Frontmost state of %@: %s
%@: Suppressing UI while app is frontmost
-[SDSetupAgent _uiStartWithDevice:viewControllerName:xpcEndpoint:label:extraInfo:]
%@: ### No device identifier for %@
deviceActionType
osVersion
triggerSecs
%# ### Create remote alert handle failed
%@: StartRemoteAlert SID %@, RSSI %ld
%@: ### Start UI failed: %#m
-[SDSetupAgent _uiStartForMacWithDevice:label:extraInfo:]
%@ not supported
-[SDSetupAgent _uiStopIfNeededWithDevice:]
Stop UI not supported
-[SDSetupAgent _watchFastScanStartIfAllowed:]
-[SDSetupAgent _watchFastScanStop]
Fast scan rate stop
-[SDSetupAgent _watchFound:]
Ignoring proximity WatchSetup with another %@
Triggering proximity WatchSetup with %@
WatchSetup
-[SDSetupAgent _ensureServerStarted]
PINPair start
-[SDSetupAgent _ensureServerStarted]_block_invoke
PINPair ending session on error: %{error}
PINPair invalidated
-[SDSetupAgent _ensureServerStarted]_block_invoke_2
Received request: %@
PINPair activated
### PINPair activate failed: %@
-[SDSetupAgent _ensureServerStopped]
PINPair service stop
PINPair session stop
-[SDSetupAgent _pinPairHandleRequest:]
### PINPair request no UUID: %#m
### PINPair request UUID failed
PINPair session %@ ending for %@
PINPair session create %@
-[SDSetupAgent _pinPairHandleRequest:]_block_invoke
PINPair session %@ completed %{error}
v20@?0I8@"NSString"12
-[SDSetupAgent _pwsHandleUserResponse:device:info:]
### pwsHandleUserResponse not supported on current platform
-[SDSetupAgent _pwsHandleProgressEvent:info:]
PWS progress: %s, %@
-[SDSetupAgent _repairEnsuredStarted]
TTF: Problem monitoring start
com.apple.sharing.problems
-[SDSetupAgent _repairEnsuredStarted]_block_invoke
TTF: WiFi health status changed: %s
-[SDSetupAgent _repairEnsuredStopped]
TTF: Problem monitoring stop
-[SDSetupAgent _repairHandleCompletion]
TTF: Repair complete
-[SDSetupAgent _repairProblemFlagsChanged]
TTF: Problem flags changed: %#ll{flags}
TTF: RepairService start
-[SDSetupAgent _repairProblemFlagsChanged]_block_invoke
TTF: Problem reporting repair progress: %s %@
v20@?0I8@"NSDictionary"12
TTF: RepairService stop
-[SDSetupAgent testHomeKitDeviceDetected:]
Testing HomeKit Device Detected (%@)
com.apple.Home://a/s?n=Test
-[SDSetupAgent testNFCUI:]
Testing NFC UI (%@)
-[SDSetupAgent testPairUI:]
Testing pair UI (%@)
testParams
-[SDSetupAgent testRepairUI:]
-fail
00000000-0000-0000-0000-000000000002
-nowifi
00000000-0000-0000-0000-000000000003
-badwifi
00000000-0000-0000-0000-000000000004
Living Room
-[SDSetupAgent testSetupUIAppleTV:]
Testing Setup UI AppleTV (%@)
-[SDSetupAgent testSetupUIB238:]
Testing Setup UI B238 (%@)
-code
00000000-0000-0000-0000-000000000005
-noicloud
00000000-0000-0000-0000-000000000006
-nohsa2
00000000-0000-0000-0000-000000000007
-noitunes
00000000-0000-0000-0000-000000000008
-nohome
00000000-0000-0000-0000-000000000009
-nokeychain
00000000-0000-0000-0000-00000000000A
-sharesplit
00000000-0000-0000-0000-00000000000B
-audio
00000000-0000-0000-0000-00000000000C
-siri
00000000-0000-0000-0000-00000000000D
-AppleMusic
00000000-0000-0000-0000-00000000000E
-[SDSetupAgent testSetupUIiOS:]
Testing Setup UI iOS (%@)
-[SDSetupAgent testSetupUIPasswordSharing:]
Testing Setup UI Password Sharing (%@)
WiFiNetwork
-rich
-hsfail
-device
-[SDSetupAgent testSetupUIWatch:]
Testing Setup UI Watch (%@)
-[SDSetupAgent testSetupUIWHA:]
Testing Setup UI WHA (%@)
-mismatch
ATVSetup
MobileBackup
ATVPair
InternetRelay
WiFiPassword
B238Setup
DevToolsPair
AnsweredCall
EndedCall
DDPing
DDPong
Final
SessionStarted
SessionEnded
SessionSecured
PreAuthStart
PreAuthFinish
SecurityStart
SecurityFinished
PasswordSending
PasswordSent
PasswordReceived
PasswordAccepted
PasswordDeclined
Good
ConnectStart
SecurityFinish
BasicConfigStart
BasicConfigFinish
StepStart
StepFinish
SetupFinished
CheckingiCloud
CheckingAppleMusic
WiFiStart
ActivationStart
iCloudStart
HomeKitStart
HomeKitSetupStart
BuddyStarting
BuddyProgress
BuddyFinished
ReportSuccess
BackupProgress
SyncProgress
StopSetup
PINPair
SiriWelcome
SiriDialogA
SiriDialogBStart
SiriDialogBHome
SiriDialogBNews
SiriDialogBWeather
SiriDialogBMusic
SiriSkipDemo
SDXPCServer
?.*:level=chatty,.*:flags=public
-[SDXPCServer _activate]
com.apple.SharingServices
-[SDXPCServer _activate]_block_invoke
Prefs changed
-[SDXPCServer _invalidate]
Stopped
-[SDXPCServer listener:shouldAcceptNewConnection:]
XPC connection started from %#{pid}
### Unknown XPC listener
-[SDXPCServer _stateDump]
State dump requested
SharingServices State End
SharingServices State
-[SDXPCConnection connectionInvalidated]
XPC connection invalidated from %#{pid}
-[SDXPCConnection _entitled:state:label:]
### %#{pid} lacks %''@ entitlement to use %@
com.apple.sharing.Services
-[SDXPCConnection _entitledService:state:]
### %#{pid} lacks %''@ entitlement for service %''@
com.apple.sharing.Client
ActivateAssertion
-[SDXPCConnection activateAssertionWithIdentifier:]
Ignoring duplicate assertion '%@'
Activate assertion '%@': %ld -> %ld
com.apple.sharing.PreventContinuityKeyboard
com.apple.sharing.PreventProxCards
Ignoring add unknown assertion '%@'
-[SDXPCConnection _invalidateAssertions]
Invalidate assertion '%@': %ld -> %ld
Ignoring remove unknown assertion '%@'
ActivityState
AppleIDAuth
AppleIDInfo
-[SDXPCConnection appleIDInfoWithCompletion:]
### No appleID?
### No record data?
ContactIDForHashes
DisplayNameForHashes
-[SDXPCConnection displayStringForContactIdentifier:deviceIdentifier:completion:]
### No IDS device found for ID %@
OpenSetupURL
PreventExitForLocale
ReenableProxCardType
RetriggerProximityPairing
RetriggerProximitySetup
SetupDevice
Missing entitlement '%@' for SetupDevice
ShowDevicePicker
Missing entitlement '%@' for ShowDevicePicker
TriggerHomeKitDeviceDetected
WiFiPasswordSharingAvailability
-[SDXPCConnection wifiPasswordSharingAvailabilityWithCompletion:]
PWS availability: %#{flags}
CoordinatedAlertStart
-[SDXPCConnection coordinatedAlertsRequestStart:completion:]
%@ (%s)
caEntitlements
com.apple.sharing.CoordinatedAlerts
### %@ rejected for %#{pid}: already in use
-[SDXPCConnection coordinatedAlertsRequestFinish]
CoordinatedAlertFinish
DeviceDiscoveryActivate
-[SDXPCConnection deviceDiscoveryActivate:completion:]
com.apple.sharing.DeviceDiscovery
DeviceDiscoveryUpdate
-[SDXPCConnection deviceDiscoveryUpdate:]
### %@ failed: %#m
BluetoothUserInteraction
-[SDXPCConnection bluetoothUserInteraction]
com.apple.sharing.BluetoothUserInteraction
DiagnosticBLEMode
-[SDXPCConnection diagnosticBLEModeWithCompletion:]
com.apple.sharing.Diagnostics
DiagnosticControl
-[SDXPCConnection diagnosticControl:completion:]
%@( '%@' )
auua-%X-%X
isui
kbpost
kbpostdelay
kbpostupdate
kbremove
kbremovedelay
kbupdate
kbupdatedelay
ppair
pstat
btpipe
metrics
com.apple.sharing.test
key1
value1
pping
atvui
b238ui
hkui
nfcui
ppui
pinshow
pinhide
dpick
debugParams
pwui
rpui
whaui
wsui
### Unsupported diagnostic control command: '%@'
DiagnosticLogControl
### Error: %#m
change
found
lost
-[SDXPCConnection diagnosticMock:device:completion:]
### Unsupported mock event: '%@'
-[SDXPCConnection diagnosticMockStart:]
Starting mock mode
-[SDXPCConnection diagnosticMockStop:]
Stopping debug mode
DiagnosticShow
prox
-- XPC connections --
%#{pid}
    Assertions: 
%s%@ (%ld total)
    BTUser
    CoordinatedAlert: %@
    DeviceDiscovery: %@
    Notification: %@
    PreventExitForLocale: '%@'
    RemoteTextSession: %@
    RemoteInteractionSession: %@
    Service: %@
    Session: %@
-- ProximityInfo --
DiagnosticUnlockTestClientWithDevice
-[SDXPCConnection diagnosticUnlockTestClientWithDevice:]
DiagnosticUnlockTestServer
-[SDXPCConnection diagnosticUnlockTestServer]
NFCTagReaderUIActivate
-[SDXPCConnection nfcTagReaderUIActivateWithEndpoint:params:completion:]
RemoteInteractionSessionActivate
-[SDXPCConnection remoteInteractionSessionActivate:completion:]
com.apple.sharing.RemoteInteractionSession
v16@?0@"SFRemoteTextSessionInfo"8
RemoteInteractionSessionClearText
-[SDXPCConnection remoteInteractionSessionClearText]
RemoteInteractionSessionCommitText
-[SDXPCConnection remoteInteractionSessionCommitText]
RemoteInteractionSessionDeleteTextBackward
-[SDXPCConnection remoteInteractionSessionDeleteTextBackward]
RemoteInteractionSessionInsertText
-[SDXPCConnection remoteInteractionSessionInsertText:]
RemoteInteractionSessionSetText
-[SDXPCConnection remoteInteractionSessionSetText:]
-[SDXPCConnection serviceActivate:completion:]
ServiceActivate: %@
-[SDXPCConnection serviceActivate:completion:]_block_invoke
Received event: %@
v24@?0@"NSUUID"8@"NSError"16
v28@?0C8@"NSData"12@"NSUUID"20
Received response: %@
v16@?0@"SFResponseMessage"8
ServiceActivateTLS
-[SDXPCConnection serviceActivateTLSWithCompletion:]
ServiceUpdate
-[SDXPCConnection serviceUpdate:]
%@: %@
ServicePeerDisconnected
-[SDXPCConnection servicePeerDisconnected:error:]
ServiceReceivedTLSData
-[SDXPCConnection serviceReceivedTLSData:type:peer:]
ServiceSendEvent
-[SDXPCConnection serviceSendEvent:]
ServiceSendFrame
-[SDXPCConnection serviceSendFrameType:data:peer:]
%@: %s, %ld bytes
ServiceSendRequest
-[SDXPCConnection serviceSendRequest:]
ServiceSendResponse
-[SDXPCConnection serviceSendResponse:]
ServiceSendTLSEncryptedObject
-[SDXPCConnection serviceSendTLSEncryptedObject:toPeer:]
%@: to %@
ServiceTLSHandshakeWithPeer
-[SDXPCConnection servicePairTLSWithPeer:completion:]
SessionActivate
-[SDXPCConnection sessionActivate:completion:]
com.apple.sharing.Session
SessionReceivedTLSData
-[SDXPCConnection sessionReceivedTLSData:type:]
SessionSendEvent
-[SDXPCConnection sessionSendEvent:]
SessionSendFrame
-[SDXPCConnection sessionSendFrameType:data:]
SessionSendRequest
-[SDXPCConnection sessionSendRequest:]
SessionSendResponse
-[SDXPCConnection sessionSendResponse:]
sessionSendTLSEncryptedObject
-[SDXPCConnection sessionSendTLSEncryptedObject:]
SessionPairTLS
-[SDXPCConnection pairTLSClient:completion:]
-[SDXPCConnection userNotificationPresent:]
UserNotification XPC not supported on current platform
UNUserNotificationCenter
/System/Library/Frameworks/UserNotifications.framework/UserNotifications
initWithTransfer:bundleIdentifier:
bundleProxy
bundleIdentifier
addObject:
isJustLinks
candidateIdentifiers
transfer
completedURLs
countByEnumeratingWithState:objects:count:
bundleProxyFromCandidateIdentifiers:handlesURL:
transferTypes
senderName
itemsCount
metaData
itemsDescriptionAdvanced
objectForKeyedSubscript:
integerValue
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
alertMessageLocalizedKeyForTypeDicts:
itemsDescription
length
localizedStringWithFormat:
initWithTransfer:
canHandleTransfer
suitableContentsDescription
init
discreteProgressWithTotalUnitCount:
mutableCopy
alloc
setObject:forKeyedSubscript:
removeObjectForKey:
allValues
bytes
numberWithLongLong:
consumeSandboxExtensions
addClientForNode:shouldPublishProgress:
defaultCenter
serversChanged:
addObserver:selector:name:object:
send
sharedBrowser
airDropNodesForDomain:
objectAtIndexedSubscript:
isEqualToString:
containsObject:
initWithPerson:items:forDiscovery:
setProperty:forKey:
setClientBundleID:
setShouldPublishProgress:
setClientPid:
setDelegate:
start
stop
removeObserver:name:object:
removeObserver:forKeyPath:
releaseSandboxExtensions
_unpublish
dealloc
addEntriesFromDictionary:
setSf_transferState:
setCompletedUnitCount:
removeClientAlerts
cancel
longLongValue
setTotalUnitCount:
fractionCompleted
setUserInfoObject:forKey:
localizedDescription
sf_failedWithError:
airDropSession:event:withResults:
sf_initWithAppBundle:sessionID:andPersonRealName:
setCancellationHandler:
_publish
totalUnitCount
addChild:withPendingUnitCount:
addObserver:forKeyPath:options:context:
mainThread
observeValueForKeyPath:ofObject:change:context:
class
isKindOfClass:
isCancelled
airDropClient:event:withResults:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
startProgress
handleConversionProgress:
initWithPerson:items:sandboxExtensions:
.cxx_destruct
clientPid
clientBundleID
delegate
_airDropClients
_allowedWaiting
_clientBundleID
_conversionActive
_conversionNotified
_conversionObserver
_conversionProgress
_currentNames
_hadConversion
_items
_lastEvent
_person
_progress
_progressObserver
_properties
_responseClient
_results
_rootNodeName
_sandboxExtensions
_sandboxExtensionHandles
_siblingNodes
_transferProgress
_clientPid
_delegate
setAccelerometerUpdateInterval:
activateCalled
setActivateCalled:
motionManager
mainQueue
baseAccelerationSet
handleNewAccelerometerData
setBaseAccelerationSet:
accelerometerData
acceleration
setBaseAcceleration:
startAccelerometerUpdatesToQueue:withHandler:
activityManager
handleActivityDetected:
startActivityUpdatesToQueue:withHandler:
checkActivityState
invalidateCalled
setInvalidateCalled:
setMotionDetected:
stopAccelerometerUpdates
setMotionManager:
stopActivityUpdates
setActivityManager:
invalidationHandler
setInvalidationHandler:
wristOnDate
date
dateWithTimeIntervalSinceNow:
timeIntervalSinceDate:
handlePastActivities:
queryActivityStartingFromDate:toDate:toQueue:withHandler:
baseAcceleration
setAccelerometerMotion:
shouldUseAccelerometerMotion
handleMotionDetected
confidence
stationary
motionTimer
restartMotionTimer
invalidateMotionTimer
walking
running
automotive
cycling
startDate
setActivityMotion:
motionDetectedHandler
setMotionDetectedHandler:
setMotionTimer:
activate
invalidate
motionDetected
accelerometerMotion
activityMotion
setWristOnDate:
_motionDetected
_accelerometerMotion
_activityMotion
_activateCalled
_invalidateCalled
_baseAccelerationSet
_motionDetectedHandler
_wristOnDate
_invalidationHandler
_motionTimer
_motionManager
_activityManager
_baseAcceleration
stringWithFormat:
dictionaryRepresentation
dictionary
numberWithUnsignedInt:
setErrorString:
allocWithZone:
copyWithZone:
setVersion:
setHasVersion:
hasVersion
setSessionID:
setHasSessionID:
hasSessionID
setResetReason:
setHasResetReason:
hasResetReason
hasErrorString
readFrom:
writeTo:
copyTo:
mergeFrom:
version
sessionID
resetReason
errorString
_errorString
_resetReason
_sessionID
_version
_has
numberWithInt:
singleItemActionTitle
valueForEntitlement:
boolValue
_connectionHasEntitlement:
clientProxy
sharedManager
cancelEnablingAllDevices
cancelAutoUnlock:
notifyDelegate
repairCloudPairing
checkEntitlementWithHandler:
errorWithDomain:code:userInfo:
bundleID
eligibleDevicesRequestFromBundleID:withCompletionHandler:
failedToEnableDevice:error:
setEnableDevice:
setClientProxy:
addObserver:
enableAutoUnlockWithDevice:passcode:
enableAutoUnlockWithDevice:passcode:completionHandler:
cancelEnablingAutoUnlockForDevice:
disableAutoUnlockForDevice:completionHandler:
failedUnlockWithError:
attemptAutoUnlockForType:
cancelAutoUnlock
autoUnlockStateWithCompletionHandler:
authPromptInfoWithCompletionHandler:
unlockSessionDidFinish:
keyDeviceLocked:
enableDevice
uniqueID
enabledDevice:
removeObserver:
beganAttemptWithDevice:
completedUnlockWithDevice:
sharedLockManager
enableUnlockWithDevice:passcode:completionHandler:
sharedKeyManager
disableUnlockWithDevice:completionHandler:
unlockEnabled
currentConnection
processIdentifier
_xpcConnection
eligibleAutoUnlockDevicesWithCompletionHandler:
enableAutoUnlockWithDevice:passcode:clientProxy:
attemptAutoUnlockWithClientProxy:
enableUnlockWithDevice:fromKey:withPasscode:completionHandler:
unlockEnabledWithDevice:completionHandler:
establishStashBagWithCompletionHandler:
unlockStateForDevice:completionHandler:
session:didReceiveKeyDeviceLocked:
session:didEnableWithDevice:
session:didFailToEnableDevice:error:
session:didBeginAttemptWithDevice:
session:didCompleteUnlockWithDevice:
session:didFailUnlockWithResults:error:incrementedAttempt:
setBundleID:
_bundleID
_clientProxy
_enableDevice
stringWithUTF8String:
myIPAddress
initWithServiceType:
addObservers
removeObservers
debugInfoRequested:
activityContinuationPayloadSent:
count
userInfo
servicesContainIdentifier:
publish
serviceType
sharedMonitor
wirelessEnabled
alwaysSendPayload
initWithDomain:type:name:
_setIncludesAWDL:
getInputStream:outputStream:
initWithInputStream:outputStream:isClient:
initWithAuthorData:streamHandler:
setIdentifier:
getStreamsWithCompletionHandler:
unpublish
publishTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
initWithDomain:type:name:port:
mainRunLoop
scheduleInRunLoop:forMode:
publishWithOptions:
restartPublishTimer
removeFromRunLoop:forMode:
removeObject:
managerID
initWithStreamHandler:
manager:connectedToService:withFileHandle:acceptHandler:
identifier
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
continuationStream:connectedToService:withFileHandle:acceptHandler:
companionStreamClosedStreams:
registerConnectedStreams
getContinuationStreamsForMessage:bundleID:usingID:completionHandler:
unregisterConnectedStreams
addService:
removeService:
closeStreamsForIdentifier:
registerManager:
unregisterManager:
setServiceType:
service
setService:
managers
setManagers:
companionServices
setCompanionServices:
incomingStreams
setIncomingStreams:
continuationStreams
setContinuationStreams:
connectedStreams
setConnectedStreams:
publishTimer
setPublishTimer:
_serviceType
_service
_managers
_companionServices
_incomingStreams
_continuationStreams
_connectedStreams
_publishTimer
scheme
lowercaseString
updatePossibleActions
suitableContentsTitle
setAvailableApplications:
isJustFiles
rawFiles
pathExtension
fileURLWithPath:isDirectory:
createDestination
_addObservers
_createLocationManager
_createWiFiObserver
wifiRequestQueue
_processRequestQueue
currentRequest
predicateWithFormat:
filteredArrayUsingPredicate:
firstObject
_disableRangeable
_stopAWDL
removeObjectAtIndex:
setCurrentRequest:
queueAvailableHandler
setAwdlStarting:
awdlInfo
_startAWDLWithInfo:
_invalidateCurrentRequest
setAwdlStartFailed:
setAwdlTimerFired:
rangingPeer
clRangingPeer
locationManager
requestRangingToPeers:timeoutSeconds:
rangingIntiator
startRangingFromPeers:
setRangeable:
rangeable
stopRangingFromPeers:
rangingCompletedHandler
invalidateAWDLTimer
calledAWDLStarted
invalidated
awdlTimer
handleAWDLTimerFired
setAwdlTimer:
waitingForNetworkToDisable
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_removeObservers
addWiFiRequest:
cancelWiFiRequest:
_startRanging
_enableRangeableIfNeeded
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
_handleAWDLDisabledIfNeeded
restartAWDLTimer
awdlNetwork
setAwdlNetwork:
awdlStartFailed
awdlStarting
awdlTimerFired
setLocationManager:
setWifiRequestQueue:
_awdlStartFailed
_awdlStarting
_awdlTimerFired
_awdlTimer
_awdlNetwork
_currentRequest
_locationManager
_wifiRequestQueue
setMessageType:
setHasMessageType:
hasMessageType
setReceivedVersion:
setHasReceivedVersion:
hasReceivedVersion
setExpectedVersion:
setHasExpectedVersion:
hasExpectedVersion
messageType
receivedVersion
expectedVersion
_expectedVersion
_messageType
_receivedVersion
_readAccountsInformation
unarchiveObjectWithData:
setAccounts:
dictionaryWithDictionary:
setMetaInfo:
accounts
metaInfo
defaultMetaInfo
_metaInfoForAppleID:key:
_accountForAppleID:
identity
altDSID
certificateToken
nextCertificateFetchDate
certificateExpired
certificateStatus
copyCertificate
copyPrivateKey
needsRenewal
validationRecord
needsUpdate
setValue:forKey:
_accountStateForAppleID:
lastValidationDate
numberWithBool:
_appleIDList
_accountStatusInfoForAppleID:
allKeys
copy
array
isDirty
_identityForAppleID:
_accountStatusInfoForAllAppleIDs
_dirtyAccounts
_metaInfoForKey:
_statusInfo
archivedDataWithRootObject:
_updateAccountInfoPrefs
initWithAppleID:
setDirty:
setModificationDate:
_addAccount:forAppleID:
_addAppleID:needsCertificate:
setIdentity:
setAltDSID:
_addIdentity:forAppleID:
setContactInfo:
setValidationRecord:
_addContactInfo:validationRecord:forAppleID:
appleIDList
accountForAppleID:
identityForAppleID:
statusInfo
addAppleID:needsCertificate:
addIdentity:forAppleID:
addContactInfo:validationRecord:forAppleID:
_accounts
_metaInfo
initWithHotspotDevice:startTime:requestID:
startTime
setStartTime:
requestID
setRequestID:
remoteHotspotDevice
setRemoteHotspotDevice:
_startTime
_requestID
_remoteHotspotDevice
setObject:forKey:
setToken:
setLongTermKey:
setLtkHash:
hasToken
hasLongTermKey
setErrorCode:
setHasErrorCode:
hasErrorCode
setFailureReasons:
setHasFailureReasons:
hasFailureReasons
setLtkSyncing:
setHasLtkSyncing:
hasLtkSyncing
setWatchOldLTKSyncStatus:
setHasWatchOldLTKSyncStatus:
hasWatchOldLTKSyncStatus
setWatchNewLTKSyncStatus:
setHasWatchNewLTKSyncStatus:
hasWatchNewLTKSyncStatus
hasLtkHash
token
longTermKey
errorCode
failureReasons
ltkSyncing
watchOldLTKSyncStatus
watchNewLTKSyncStatus
ltkHash
_errorCode
_failureReasons
_longTermKey
_ltkHash
_token
_watchNewLTKSyncStatus
_watchOldLTKSyncStatus
_ltkSyncing
_sendCreateCertificateRequest
setResponseHandler:
_responseHandlerWithIdentity:error:
_scheduleFetchCertificateTaskWithDelay:
_handleCertificateCreateResponseError:
_scheduleCreateCertificateTaskWithDelay:
_scheduleFetchRetryWithDelay:
_handleReceivedCertificate
_handleCertificateFetchResponseError:
_sendFetchCertificateRequest
_scheduleCreateRetryWithDelay:
initWithAppleID:altDSID:
setCertificateExpirationDate:
setCertificatePersistentReference:
setCertificateStatus:
setLastValidationAttemptDate:
setLastValidationDate:
setPrivateKeyPersistentReference:
setSerialNumber:
responseHandler
_handleCreateTimerFired
_handleFetchTimerFired
initWithType:appleID:info:
setDispatchQueue:
_handleCertificateCreateResponseWithInfo:error:
_handleCertificateFetchResponseWithInfo:error:
_activate
_invalidate
appleID
dispatchQueue
_activated
_altDSID
_certificateCreateTask
_certificateExpirationDate
_certificateFetchTask
_certificatePEM
_certificateSerialNumber
_certificateStatus
_certificateToken
_createRetryCount
_createDelayTimer
_csrPEM
_fetchDelayTimer
_fetchRetryCount
_invalidated
_privateKey
_publicKey
_appleID
_dispatchQueue
_responseHandler
setSecret:
setPairingID:
hasSecret
hasPairingID
secret
pairingID
_pairingID
_secret
setFlags:
devicePaired:
setDevicePairedHandler:
deviceUnpaired:
setDeviceUnpairedHandler:
supportsAACPService
devices
downloadAssetsForDevice:
triggerAssetCleanupWithDeviceRemoved:
productIdentifier
colorCode
initWithBluetoothProductIdentifier:color:engagement:
queryForDevice:
bundlePath
getAssetBundleForDeviceQuery:timeout:withCompletionHandler:
purgeAssetsMatchingQuery:
setDevices:
_deviceAssetManager
_bluetoothClient
_devices
removeAllObjects
streamToService:withFileHandle:acceptReply:
closeFile
enableService:
disableService:
publisher:didConnectToService:withStreamHandler:
publisher:companionStreamForService:streamHandler:
initWithClientProxy:withIdentifier:
streamHandlerForService:
streamHandlers
setStreamHandlers:
enabledServices
setEnabledServices:
companionStreams
setCompanionStreams:
_managerID
_streamHandlers
_enabledServices
_companionStreams
_stop
streamStatus
applySSLSettings:
currentRunLoop
open
startOpenTimer
usingMessages
stopIfReady
close
logTransfer
streamHandlerDidClose:withError:
hasBytesAvailable
handleBytesForStream
openTimerFired:
disableContinuityTLS
copyMyAppleIDSecIdentity
propertyForKey:
handleOpenedStream:
handleBytesAvailable
handleSpaceAvailable
streamError
getBytes:length:
invalidateOpenTimer
setTCPProperties:
checkedCert
setCheckedCert:
evaluateCert
handleBytesForMessage
handleSpaceForMessage
handleSpaceForStream
appendData:
streamHandler:bufferSpaceChanged:
hasSpaceAvailable
enableStreamDebugging
shouldReadNetwork
read:maxLength:
dataWithBytes:length:
streamHandler:didReceiveStreamData:
write:maxLength:
subdataWithRange:
dataWithData:
messageWithData:
headerWithLength:
appendBytes:length:
handleHeaderRead
handleMessageRead
parseHeader:
trimHeader:
resetReadState
streamHandler:didReceiveMessage:
mutableBytes
handleMessageWritten:
stream:handleEvent:
setShouldReadNetwork:
writeToStreamWithData:
sendMessage:withErrorHandler:
sendMessage:withCompletionHandler:
setUsingMessages:
inputStream
setInputStream:
outputStream
setOutputStream:
shouldStop
setShouldStop:
registeredStreams
setRegisteredStreams:
bufferSpaceAvailable
setBufferSpaceAvailable:
openTimer
setOpenTimer:
isClient
setClient:
setStreamError:
outputStreamData
setOutputStreamData:
byteIndex
setByteIndex:
outMessage
setOutMessage:
messageQueue
setMessageQueue:
handlers
setHandlers:
bytesRead
setBytesRead:
inMessageLength
setInMessageLength:
inMessage
setInMessage:
inData
setInData:
inputState
setInputState:
loggedTransfer
setLoggedTransfer:
wroteToNetwork
setWroteToNetwork:
readFromNetwork
setReadFromNetwork:
timeOpened
setTimeOpened:
timeToOpen
setTimeToOpen:
_shouldReadNetwork
_usingMessages
_checkedCert
_shouldStop
_registeredStreams
_bufferSpaceAvailable
_client
_loggedTransfer
_inMessageLength
_inputStream
_outputStream
_openTimer
_streamError
_outputStreamData
_byteIndex
_outMessage
_messageQueue
_handlers
_bytesRead
_inMessage
_inData
_inputState
_wroteToNetwork
_readFromNetwork
_timeOpened
_timeToOpen
initWithService:
addDelegate:queue:
nsuuid
UUIDString
activityService
loginID
sharedConnection
isActivityContinuationAllowed
deviceWasUnlockedOnce
supportsHandoff
valueForKeyPath:
activityServiceDevicesChanged:
restart
sharedEncryptionManager
deleteAllEncryptionAndDecryptionKeys
nearbyServiceDevicesChanged:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
idsDeviceFromBTIdentifier:
shouldStart
allPeerBTIdentifiers
setActivityService:
setShouldStart:
setAllPeerBTIdentifiers:
setAppleID:
_shouldStart
_activityService
_allPeerBTIdentifiers
setLocalID:
setLtk:
setLtkID:
setRemoteDeviceID:
hasLocalID
hasLtk
hasLtkID
setCheckViewState:
setHasCheckViewState:
hasCheckViewState
hasRemoteDeviceID
setNeedsLTK:
setHasNeedsLTK:
hasNeedsLTK
setRemoteNeedsLTK:
setHasRemoteNeedsLTK:
hasRemoteNeedsLTK
localID
ltkID
checkViewState
remoteDeviceID
needsLTK
remoteNeedsLTK
_localID
_ltk
_ltkID
_remoteDeviceID
_checkViewState
_needsLTK
_remoteNeedsLTK
setAwdlInfo:
setCachedKeyExchangeData:
setUnlocked:
setHasUnlocked:
hasUnlocked
setOnWrist:
setHasOnWrist:
hasOnWrist
hasAwdlInfo
setUnlockEnabled:
setHasUnlockEnabled:
hasUnlockEnabled
hasCachedKeyExchangeData
setUsingAlwaysDirect:
setHasUsingAlwaysDirect:
hasUsingAlwaysDirect
setWristDetectDisabled:
setHasWristDetectDisabled:
hasWristDetectDisabled
unlocked
onWrist
cachedKeyExchangeData
usingAlwaysDirect
wristDetectDisabled
_awdlInfo
_cachedKeyExchangeData
_onWrist
_unlockEnabled
_unlocked
_usingAlwaysDirect
_wristDetectDisabled
initWithKeyOptions:valueOptions:capacity:
transportQueue
loadCloudPairRetries
enableScalablePipe
clientQueue
clientMap
sendIdentifierToSessionID
enumerateKeysAndObjectsUsingBlock:
idsService
clearAutoUnlockDeviceCache
enabledAutoUnlockDevicesUsingCache:
autoUnlockDeviceCache
onqueue_bluetoothIDForIDSID:
onqueue_bluetoothDeviceIdentifiers
activeDevice
uniqueIDOverride
isActive
isNearby
modelIdentifier
containsString:
idsDeviceForUniqueID:
name
deviceTypeForDevice:
autoUnlockDeviceForIDSDevice:
autoUnlockDeviceForBluetoothID:cached:
idsDeviceForBluetoothID:
autoUnlockDeviceForIDSDevice:cloudPaired:cached:
onqueue_devicesWithLTKs
ltkExistsForKeyDevice:
autoUnlockEligibleDevicesWithCloudPairing:
onqueue_autoUnlockEligibleDevices:
type
showOtherDevices
watchVersionEligibleForDevice:
deviceKeyBagUnlocked
ltkExistsForKeyDevice:updateLTKs:
setKeyExists:
lastSeenWatchDate
setLastSeenWatchDate:
watchCurrentlyInList
setWatchCurrentlyInList:
watchExistedInUnlockList
setWatchExistedInUnlockList:
activityServiceHasWatch
onqueue_enabledAutoUnlockDevicesUsingCache:
sharedTransport
setUniqueID:
setBluetoothID:
setModelIdentifier:
productName
setProductName:
productVersion
setProductVersion:
productBuildVersion
setProductBuildVersion:
nameForDevice:
setName:
enclosureColor
setEnclosureColor:
isDefaultPairedDevice
setDefaultPairedDevice:
modelNameForDevice:
setModelName:
operatingSystemVersion
setMajorOSVersion:
setSupportsAuthPrompts:
setSupportsAlwaysDirect:
sessionKeyExistsForDeviceID:
deviceIDsMissingSessionKey
disableEncryption
setSupportsEncryption:
showIDInName
companionIDForWatchID:
setProxyBluetoothID:
setBluetoothCloudPaired:
setPlaceholder:
accountType
registrationStatus
dateByAddingTimeInterval:
cloudPairRetryRecords
standardUserDefaults
synchronize
objectForKey:
setCloudPairRetryRecords:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:errorHandler:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:completion:
sendPayload:toDevice:type:sessionID:queueOneID:wantsACK:timeout:completion:
transferDataFromPayload:sessionID:
initWithArray:
numberWithDouble:
initWithProtobufData:type:isResponse:
sendProtobuf:toDestinations:priority:options:identifier:error:
initWithFormat:
completionHandlers
dataFromUUID:
setPayload:
data
getUUIDBytes:
primaryClient
transportDidChangeDevices:
transportDidChangeNearbyState:
initWithData:
initWithUUIDBytes:
deviceForFromID:
serverReceivedTime
fromServerStorage
pairingRequestIsValidForDeviceID:messageContext:
payload
transport:didReceivePairingRequestWithSessionID:deviceID:requestData:
transport:didReceiveProxyRequestWithSessionID:requestData:
transport:didReceiveWatchInfo:
transport:didReceiveDisableMessage:fromDeviceID:
transportDidReceiveProxyTrigger:
transport:didReceivePayload:type:deviceID:
transport:didReceiveMessageACKForIdentifier:
UUID
outstandingPipeMessages
setLastSendDate:
sharedNearbyAgent
sharedNearbyPipe
sendFrameType:payload:completion:
handleIncomingPipeData:
addFrameHandlerForType:handler:
sendPipeACK
lastSendDate
boolForKey:
setBool:forKey:
escrowSecretCreationDateForDeviceID:
addClient:forIdentifer:
removeClientForIdentifier:
logDevices
refreshAutoUnlockDeviceCache
bluetoothIDForIDSID:
bluetoothDeviceIdentifiers
pairedDeviceID
deviceNearby
idsDevicesIDs
idsMacDeviceIDs
deviceNameForDeviceID:
deviceTypeForDeviceID:
modelIdentifierForDeviceID:
autoUnlockDeviceForDeviceID:
autoUnlockDeviceForBluetoothID:
devicesWithLTKs
autoUnlockEligibleDevices
enabledAutoUnlockDevices
proxyBluetoothDeviceIDForDeviceID:
idsDeviceIDsForBluetoothID:
placeholderDevice
localDeviceIDSRegistered
triggerCloudPairRetryWithShortRetryDeviceIDs:
updateRetryDatesForDeviceIDs:
canRetryCloudPairingForDeviceID:useShortDate:
sendPayload:toDevice:type:sessionID:timeout:errorHandler:
sendPipePayload:type:sessionID:timeout:completion:
appleWatchExisted
resetAppleWatchExisted
watchSeenRecently
state
setPrimaryClient:
setIdsService:
setTransportQueue:
setClientQueue:
setClientMap:
setCompletionHandlers:
setSendIdentifierToSessionID:
sendDates
setSendDates:
setOutstandingPipeMessages:
setAutoUnlockDeviceCache:
_lastSeenWatchDate
_watchExistedInUnlockList
_watchCurrentlyInList
_primaryClient
_idsService
_transportQueue
_clientQueue
_clientMap
_completionHandlers
_sendIdentifierToSessionID
_sendDates
_outstandingPipeMessages
_lastSendDate
_autoUnlockDeviceCache
_cloudPairRetryRecords
defaultManager
URLForUbiquityContainerIdentifier:
checkResourceIsReachableAndReturnError:
action
setPossibleActions:
initWithTransferIdentifier:actionIdentifier:title:singleItemTitle:
saveCompletedItemsToiCloudDrive
setActionHandler:
defaultWorkspace
operationToOpenResource:usingApplication:userInfo:
completionHandler
setCompletionBlock:
lastPathComponent
URLByAppendingPathComponent:
moveItemAtURL:toURL:error:
domain
code
cancelActionTitleToAccompanyActions:
openCompletedItemsWithFilesApp
_iCloudDriveURL
_action
items
senderBundleID
canHandleTransferRegardlessOfBundleID
defaultActionForBundleProxy:
triggerImport
removeItemAtURLToFreeUpSpace:
sharedModelForQueue:
path
insertRecordingWithAudioFile:duration:date:
saveIfNecessary
objectID
URIRepresentation
URLWithString:
openURLs:bundleIdentifier:
initialize
xpcManagerInterface
setExportedInterface:
setExportedObject:
xpcConnection
setInterruptionHandler:
cleanUpConnections
setXpcConnection:
connectionManagerDidInvalidate:
resume
unlockSessions
setRemoteConnection:
someComputerName
sharedAdvertiser
sharedScanner
handleAppleAccountSignIn
handleAppleAccountSignOut
createCompanionServiceManagerWithIdentifier:clientProxy:reply:
createStreamsForMessage:reply:
createActivityAdvertiserForClientProxy:reply:
createContinuityScannerForClientProxy:reply:
createUnlockManagerWithReply:
appleAccountSignedIn
appleAccountSignedOut
initWithXPCConnection:
scanner
setScanner:
serviceManager
setServiceManager:
advertiser
setAdvertiser:
deviceStreamMap
setDeviceStreamMap:
setUnlockSessions:
streamIdentifiers
setStreamIdentifiers:
_scanner
_serviceManager
_advertiser
_deviceStreamMap
_unlockSessions
_streamIdentifiers
enableContinuity
initWithDelegate:queue:
currentConsoleUser
encryptedAdvertisingInformation
startGoodbyeTimer
preventIdleSleepAssertion
startAdvertisingOfType:withData:withOptions:
invalidateGoodbyeTimer
stopAdvertisingOfType:
releaseIdleSleepAssertion
cachedDecryptionKeyForDeviceIdentifier:
isValidKey
setValidKey:
lastUsedCounter
setKeyCounter:
remoteConnection
pairedDevicesChanged:
activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
resetStateRequested:
systemWillSleep:
goodbyeTimeoutFired:
createAdvertisingInformation
dataWithCapacity:
setLength:
getTagAndCounterWhileEncryptingBytesInPlace:forAdvertisementWithVersion:handler:
updateAdvertiser
sharedPayloadManager
sendActivityPayloadWithAdvertisementData:forAdvertisementPayload:activityIdentifier:activityPayload:
continuityDidUpdateState:
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
loginIDWithOptions:completionHandler:
peerForUUID:completionHandler:
pairedSFPeerDevicesWithOptions:completionHandler:
advertiseAdvertisementPayload:options:withErrorHandler:
stopForReason:
resumeForReason:
consoleUserChanged:
_versionByte
_monitor
_continuity
_goodbyeTimerInterval
_goodbyeTimer
_shouldNotAdvertiseRequesters
_advertisingEnabled
_isAdvertising
_rawAdvertisementData
_advertisementData
_powerAssertionID
_currentAdvertisementPayload
_currentAdvertisementOptions
_currentErrorHandler
_remoteConnection
setKey:
hasKey
setKeyFailed:
setHasKeyFailed:
hasKeyFailed
keyFailed
_key
_keyFailed
componentsSeparatedByString:
browseAfterDelay:
statusChanged:
buildNodes
postNotificationName:object:userInfo:
nodes
_clientCount
_servers
_timer
formattedPhoneNumber
initWithDevice:sessionID:
sessionQueue
_start
setActiveConnection:
bleDevice
startUnlockBLEConnectionWithDevice:encrypted:
setState:
sendProxyTrigger
setInvalidated:
activeConnection
stopUnlockBLEConnectionWithDevice:
deviceConnected:
model
proxyRSSI
proxyDiscoveryTime
doubleValue
setConnectionTime:
rssi
setProxyRSSI:
setProxyDiscoveryTime:
sessionDidStartConnection:
notifyDelegateWithError:
notified
session:didCompleteWithError:
setNotified:
wrapPayload:withType:
invalidateResponseTimer
sendUnlockData:toBLEDevice:completion:
restartResponseTimer:
initWithDevice:sessionID:bleDevice:
results
handleFoundBLEDevice:
setModel:
setStartDate:
setBleDevice:
connectionTime
_activeConnection
_notified
_proxyRSSI
_model
_proxyDiscoveryTime
_startDate
_bleDevice
_connectionTime
_state
enableDebugMode
isAppleInternal
sharedFakeTransfer
setTransferManager:
setDebugModeEnabled:
objectKey
askEventForRecordID:withResults:
progressEventForRecordID:withResults:
conversionEventForRecordID:withResults:
finishedEventForRecordID:withResults:
cancelEventForRecordID:withResults:
errorEventForRecordID:withResults:
listener:didReceiveError:
listener:didReceiveNewRequest:
listener:informationDidChange:
networkOperation:event:withResults:
alertManager:acceptingTransferWithRecordID:withDestinationURL:shouldExtractImagesFromLivePhotosForRecordID:
alertManager:cancelingTransferWithRecordID:
_listener
_transferIdentifierToNetworkOperation
_transferManager
_classroomTransferManager
restartBrowser:
notifyClient
updateBrowserState
somethingChanged:
airDropPublished:
lockStatusChanged:
screenStatusChanged:
contactsChanged:
legacyModeChanged:
linkStateChanged:
wirelessPowerChanged:
browseAllInterfaces
legacyModeEnabled
screenOn
bluetoothEnabled
enableDemoMode
getInterface:
UTF8String
substringWithRange:
discoverableLevel
clearCache
cancelIdentityQueries
cancelAirDropRequests
logAirDropSessionInfo
coalesceMe
removeObjectsForKeys:
arrayWithObject:
showMeInWormhole
removeInvalidNodes:
checkForMultipleNodes:
updateSecondaryNameForNodes:
showThisComputer
netbiosName
bonjourName
updateServerCacheIfNeeded
startRecordQuery:type:domain:recordType:interface:
setBonjourDiscovery:
setBonjourTXTRecordDiscovery:
bonjourDiscovery
queryKey:type:domain:recordType:
numberWithLong:
queryRecordTimerCallBack:
addQueryToDictionary:name:type:domain:recordType:
enableBugs
longValue
cleanupRecordQueryForKey:
cleanupRecordQuery:type:domain:recordType:
ejectDisksIfNeeded:diskNames:
cleanupAirDropRequest:
copyNodeForService:
intValue
redGreenBlueFromEcolor:
cleanupRecordQueryForNetService:recordType:
disablePictureQuery
iconHash
netService
iconCacherKey:pictureHash:
iconData
preferVibrantIcons
startPictureQuery:
copyIdentityForAppleID:
cacheIdentity:
entitled
clearCacheAndNotify
updateIdentityWithQueryResults:
cancelIdentityQuery:
personID
modelName
verifiableIdentity
bluetoothDiscovery
bonjourTXTRecordDiscovery
bonjourResolveComplete
tcpConnectionComplete
tlsHandshakeComplete
identityQueryComplete
secTrustRef
setVerifiableIdentity:
logAirDropDiscoveryInfoForNode:
startIdentityQueryForNode:
ignoreIconDiskCache
setNetService:
setIconHash:
fetch
startAirDropRequestForNode:
infoForEmailHash:phoneHash:
restartAfterDelay:
personIconChanged:iconData:
setIconData:
store
backToMyMacDomain
bonjourNodesDidChange:
validAirDropInterface:
addService:type:domain:interface:
removeService:type:domain:
notifyClientIfDone:
odiskMountPointsForServer:
initWithBytes:length:encoding:
serviceFromServiceName:
valueForKey:inTXTRecord:withLength:
deviceInfoChanged:model:ecolor:osxvers:
commentChanged:comment:
personInfoChanged:flags:cname:phash:ehash:nhash:
systemInfoChanged:diskInfo:
processTXTRecordUpdate:rdlen:rdata:
processNULLRecordUpdate:rdlen:rdata:
setFireDate:
iconCacher:didStoreDataWithError:
iconCacher:didFetchDataWithError:
initWithDomain:types:
setMode:
mode
thisIsTheFinder
startConnectionlessAdvertisingWithData:
stopConnectionlessAdvertising
advertiseHashes
copyNodeForName:
handleIdentityCallback:event:error:
setIconData:iconHash:forPerson:
virtualDomain
handleBrowseCallBack:interface:error:name:type:domain:
odiskMountPoints:
handleQueryCallBack:error:fullname:rrtype:rdlen:rdata:
types
transfersInitiated
setTransfersInitiated:
transfersCompleted
setTransfersCompleted:
_isAirDrop
_isLegacyMode
_isNetBIOS
_isMyDomain
_isWorkgroups
_maxServices
_domain
_isFinder
_mode
_awdlIndex
_browserID
_isEntitled
_restartTimer
_proximityTimer
_transfersInitiated
_transfersCompleted
_connection
_firstTime
_discoveredPeers
_iconCache
_dnsQueries
_serverCache
_nodesForContact
_airDropNodesToRemove
_originalNodes
_iconCachers
_airDropRequests
_identityQueries
_types
hasRequestID
setDate:
_date
checkKeyBagState
generateDebugInfo
addObjectsFromArray:
waitingForAuthToken
securityManager
generateLocalLongTermKey:
sendLongTermKeyRequest:requestID:
invalidateLongTermKeyTimer
resetLongTermKeyRequest
handleDevicesDidFailToPair
enableTimerFired:
notifyEnableStateWithError:
idsController
hasDefaultDevice
inConfigureState
addPreventExitForLocaleReason:
enableUnlockForcingLTKTransfer:
ltksExist
ltkFileExists
updateSecurityManagerIfNeeded
deleteLongTermKeys
generateSessionID
sendSetupRequest:withSessionID:
sendClassALongTermKeyRequest:sessionID:
disableUnlockPairing
resetSetupState
invalidateEnableTimer
removePreventExitForLocaleReason:
unlockSessionAsOriginator:usingEscrow:escrowSecret:
clearStateForSession:
inPosition
setSentLockedState:
resetEscrowRecord
setWaitingForAuthToken:
resetState
allowExiting
sharedInstance
lostModeIsActive
sessionStartDate
lastWakeGestureRecord
motionDetector
handleStartLTK:
handleLongTermKeyResponse:
handleClassALongTermKeyResponse:
handleSetupSessionCreated:
handleSetupCreateRecord:
handleSessionKeyExchangeRequest:
invalidateUnlockTimer
handleSessionAuthToken:
handleStashKeyExchangeRequest:
handleStashToken:
handleUnlockStateRequest:
logProtoBufReceived:
resetAndClearState
sendDeviceLockStateChanged:
preventExiting
updateSecurityManager
handleConfigurationState
updateLongTermKeys:
signRemoteKey:withLocalKey:localKeyClass:remoteKeyClass:
updateLocalLongTermKey:remoteLongTermKey:
handleEscrowSessionRequest:
sendDisableMessage
localLongTermKey
remoteLongTermKey
escrowCreationSessionAsOriginator:errorCode:
setSetupAuthSession:
setupAuthSession
stepWithAuthSession:data:
sendCreateEscrowSecretWithStepData:sessionID:
stepWithAuthSession:data:authStep:
setupWithAuthSession:passcode:
enableUnlockPairing
localDeviceLocked
lostModeEnabled
sendResetMessage:reason:
setSessionStartDate:
setOnWristForCurrentSession:
hasUsingRecord
usingRecord
setUnlockAuthSession:
unlockAuthSession
sendKeyExchangeResponse:sessionID:
getWristAndMotionStateWithCompletionHandler:
deviceOffWristForSessionID
unlockSessionID
hasAuthToken
authToken
sendSessionUnlockConfirmation:sessionID:
stashBagSessionAsOriginator:escrowSecret:
setStashBagSession:
stashBagSession
sendStashKeyExchangeResponse:sessionID:errorCode:
hasStashToken
stashToken
sendStashConfirmation:sessionID:
resetStashState
deviceKeyBagDisabled
sendStateResponseWithUnlockEnabled:passcodeEnabled:
logProtoBufSend:
sendProtocolBufferData:withType:timeout:option:queueOneID:errorHandler:
sendProtocolBufferData:withType:timeout:option:errorHandler:
restartLongTermKeyTimer
sendProtocolBufferData:withType:timeout:option:dataClass:queueOneID:errorHandler:
restartEnableTimerWithTimeout:
restartUnlockTimer:
setSuccess:
setPasscodeEnabled:
idsController:didReceiveProtoData:forType:
idsControllerNearbyStateChanged:
idsControllerSpaceDidBecomeAvailable:
keyBagLockStateChange:
devicesDidUnpair:
deviceOnWrist
wristDetectionDisabled:
forceOnWristCheck
setInPosition:
canRetrySetup
setCanRetrySetup:
sentLockedState
enableTimer
setEnableTimer:
tempLongTermKey
setTempLongTermKey:
checkingWristState
setCheckingWristState:
passcode
setPasscode:
setUnlockSessionID:
preventingExitForSetup
setPreventingExitForSetup:
onWristForCurrentSession
checkingWristAndMotionState
setCheckingWristAndMotionState:
longTermKeyTimer
setLongTermKeyTimer:
setDeviceOffWristForSessionID:
wristAndMotionTimer
setWristAndMotionTimer:
positionSemaphore
setPositionSemaphore:
setMotionDetector:
setLastWakeGestureRecord:
enableHandler
setEnableHandler:
wristAndMotionStateHandler
setWristAndMotionStateHandler:
_inPosition
_canRetrySetup
_sentLockedState
_checkingWristState
_waitingForAuthToken
_preventingExitForSetup
_onWristForCurrentSession
_checkingWristAndMotionState
_enableTimer
_tempLongTermKey
_sessionStartDate
_passcode
_unlockSessionID
_longTermKeyTimer
_deviceOffWristForSessionID
_wristAndMotionTimer
_positionSemaphore
_motionDetector
_lastWakeGestureRecord
_enableHandler
_wristAndMotionStateHandler
setHasSuccess:
hasSuccess
success
_success
initWithMachServiceName:
_setQueue:
sharedSession
listener:shouldAcceptNewConnection:
xpcManagerListener
setXpcManagerListener:
connections
setConnections:
_xpcManagerListener
_connections
initWithKind:
setObjectKey:
contactsOnly
setContactsOnly:
_contactsOnly
setAirDropPublished:
myLegacyAirDropIcon
myLegacyAirDropIconHash
broadcastPicture
setMyPictureAndHash
myAppleIDEmailHash
myAppleIDPhoneHash
myAppleIDIsManaged
dataFromTXTRecordDictionary:
bonjourPublisher:propertiesDidChange:
updateTXTRecordAndNotify
registerAllInterfaces
initWithPort:identity:
publishCallBack:
_port
_retryCount
_identity
_txtRecord
bonjourResolverDidChange:
numberWithUnsignedShort:
notifyClient:
forceP2P
initWithName:type:domain:path:timeout:
parseResults:port:txtLen:txtRecord:interface:
resolve
setPath:
hostName
setHostName:
portNumber
setPortNumber:
error
_timeout
_resolve
_error
_url
_name
_type
_path
_hostName
_portNumber
aksSession
resetSession
onqueue_start
requestData
setRequest:
handleSetupRequest
onqueue_cancel
canceled
setCanceled:
request
deviceID
hashMatchesAnyRemoteLTKForDeviceID:ltkHash:isPreferred:
waitingForLTK
sendSetupSessionCreatedWithLocalKey:stepData:error:failureReason:ltkSyncing:
watchLTKsChanged:
setWaitingForLTK:
setCompanionViewNotSyncing:
setCompanionNeedsUnlock:
setCompanionCurrentlySyncing:
ltkHashMatches
companionViewNotSyncing
companionNeedsUnlock
companionCurrentlySyncing
stepSessionWithData:outputData:
generateSessionToken
storeRangingKey:forDeviceID:
generateEscrowSecret
storeEscrowSecret:pairingID:deviceID:
sendSetupCreateEscrowRecordStepData:error:
updateDynamicStoreEnabled
numberWithInteger:
deviceRequiresNewRanging
ltkSyncStatusForDeviceID:hash:modern:
ltkHashForLocalLTK
handleCreateEscrowSecret:
canCreatePairing
handleTimerFired
sendKeyDeviceLocked
setRequestData:
waitingForUnlock
setWaitingForUnlock:
requestedLTKForRemote
setRequestedLTKForRemote:
_waitingForUnlock
_waitingForLTK
_requestedLTKForRemote
_companionViewNotSyncing
_companionNeedsUnlock
_companionCurrentlySyncing
_canceled
_requestData
_request
getResourceValue:forKey:error:
mountedVolumeURLsIncludingResourceValuesForKeys:options:
opticalDisk:
URLForRemounting:
host
serverNameForHost:
port
setNodeModel:protocol:url:
setODiskMountPoints:
setServerMountPoints:
setODiskServers:
recentNodes
connectedNodes
addToRecents:
setServers:
combineRecentAndConnectedNodes:
postNotification
allObjects
removeAirDropPersonInternal:
buildNodesAndNotify:
volumesChanged:
odiskNodes
addNode:
removeNode:
addAirDropPerson:
airDropNodes
removeAirDropPerson:
_recentsCount
_connectedCount
_sendNotification
_odiskServers
_airDropPeople
searchForBrowsableDomains
scheduleBrowser
displayNameForDomain:
parseDomain:
backToMyMacDomains
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
childrenForNode:
_domains
_domainTree
_domainBrowser
dataWithContentsOfURL:options:error:
defaultCalendarForNewEvents
importICSData:intoCalendar:options:
externalURL
fileZipper:event:withProperty:
isCompressor
filesNeedConverting
filePathURL
URLByResolvingSymlinksInPath
timeRemaining:timeNow:
notifyClientForEvent:withProperty:
absoluteURLIfTopLevelFile:isDirectory:base:
notifyProgress:force:
fileComplete
fixedRelativePath:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
quarantineFile:
pathExistsInPlaceholderInfo:
validFileName:
removeFileFromPlaceholderList:
copyReverseParentChain:base:
addFile:withBase:toBom:
addParentChain:file:base:
addFileURLToBom:file:base:propertyKeys:topLevel:
totalFileSize:
URLFromFileInfo:
setObject:atIndexedSubscript:
relativePath
conflictResolvedURL:
moveFile:toDestination:
executeReadWithAdaptiveCompression
executeWriteWithAdaptiveCompression
isDecompressor
createPlaceholderFiles
bomCopierCopy:destination:options:
removeUnusedPlaceholderFiles
cleanupAndNotify
moveFilesToDestinationWithCompletionHandler:
allowProgressCircleToComplete
temporaryBomPath
initBomWithFiles
disableCompression
enablePKZip
initWithReadStream:writeStream:
startBomCopy:destination:options:
setTotalBytes:
setPlaceholderFiles:withCreationCompletionHandler:
setDestination:
destination
setReadStream:
copyReadStream
bomCopierCopyFileFinished:type:size:operation:
bomCopierFatalFileError:
bomCopierFatalError:
prettyNameBasedOnUUID:
unzip
sourceFiles
setSourceFiles:
setSenderName:
compressionType
setCompressionType:
skipReadableCheckFiles
setSkipReadableCheckFiles:
shouldExtractImagesFromLivePhotos
setShouldExtractImagesFromLivePhotos:
shouldConvertMediaFormats
setShouldConvertMediaFormats:
_usePKZip
_shouldNotifyConverting
_fileCount
_totalBytes
_bomArchive
_tempFolder
_bomPath
_destination
_bomCopier
_lastBytesCopied
_totalBytesCopied
_readStream
_writeStream
_timeStarted
_lastProgress
_topLevelFiles
_placeholderFiles
_progressTimer
_alternateNames
_compressionEngine
_creationCompletionHandler
_shouldExtractImagesFromLivePhotos
_shouldConvertMediaFormats
_sourceFiles
_senderName
_compressionType
_skipReadableCheckFiles
username
accountStore
setCredential:forAccount:serviceID:error:
saveAccount:withCompletionHandler:
aa_altDSID
aida_tokenForService:
setServiceIdentifier:
setUsername:
_setPassword:
setIsUsernameEditable:
setShouldPreventInteractiveAuth:
setShouldUpdatePersistentServiceTokens:
authenticateWithContext:completion:
dataUsingEncoding:
base64EncodedStringWithOptions:
appleIDAccountWithAppleID:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
aliasesForAccount:
caseInsensitiveCompare:
altDSIDForAccount:
appleIDAccountWithAltDSID:
idsServiceClassA
dataClassStringForDataClass:
setWithObject:
isDefaultPairedDeviceNearby
setIdsServiceClassA:
errorHandlers
setErrorHandlers:
_idsServiceClassA
_errorHandlers
bundleWithPath:
stringByAppendingString:
sharedItemsInCategory:ofType:
subject
dataWithJSONObject:options:error:
initWithData:encoding:
setSubject:
writeDataToFile:ofType:
string
setURL:
setData:
setUti:
setString:
startFakeTransferWithItemSources:
floatValue
plainItemsFromItemSources:
fakeBundleID
previewImage
startFakeTransferWithItems:fromBundleID:withItemsDescription:previewImage:desiredDuration:totalBytes:
isFileURL
URLByAppendingPathComponent:isDirectory:
sf_initWithFileURL:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
arrayWithCapacity:
copyItemAtURL:toURL:error:
attributesOfItemAtPath:error:
setMaxConcurrentOperationCount:
setSuspended:
cancelAllOperations
generateFakeTransferDataFromBundleID:files:items:itemsDescription:
addIconPropertiesWithImage:toFakeTransferData:
createBlockToPerformBlockOnMainQueue:withDelay:
addOperationWithBlock:
addProgressPropertiesWithBytesCopied:totalBytes:timeRemaining:filesCopied:toFakeTransferData:
replaceItemsWithItems:inFakeTransferData:
stringByAppendingPathComponent:
writeToFile:atomically:
fileURLWithPath:
CGImage
startFakeTransferInCategory:ofType:
transferManager
debugModeEnabled
_bundle
_debugModeEnabled
stringByReplacingOccurrencesOfString:withString:
hasPrefix:
sendInitialRequest
startBrowser
searchForServicesOfType:inDomain:
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
notifyStreamRequestWithError:
switchToStreaming
writeNetworkStream
fileHandle
setBufferSize:socket:
initWithFileDescriptor:
initForReadingWithData:
decodeObjectOfClass:forKey:
handleStreamRequest:
handleStreamResponse:
serviceFromAuthorData:
sendInitialResponse:
networkBufferSpaceAvailable
setNetworkBufferSpaceAvailable:
readClientStream
writeClientStream
handleOpenedStream
logClientReceived
logClientSent
streamHandlerDidClose:
streamHandler
setStreamHandler:
authorData
setAuthorData:
initiator
setInitiator:
clientSent
setClientSent:
clientReceived
setClientReceived:
netServiceBrowser
setNetServiceBrowser:
clientInputStream
setClientInputStream:
clientOutputStream
setClientOutputStream:
writeQueue
setWriteQueue:
networkStreamData
setNetworkStreamData:
readQueue
setReadQueue:
clientStreamData
setClientStreamData:
readFromClient
setReadFromClient:
wroteToClient
setWroteToClient:
streamsRequestHandler
setStreamsRequestHandler:
_initiator
_clientSent
_clientReceived
_networkBufferSpaceAvailable
_fileHandle
_identifier
_streamHandler
_authorData
_netServiceBrowser
_clientInputStream
_clientOutputStream
_writeQueue
_networkStreamData
_readQueue
_clientStreamData
_readFromClient
_wroteToClient
_streamsRequestHandler
notifyFetchWithError:
notifyStoreWithError:
airDropCacheFileURL
cancelReadStream
cancelWriteStream
handleReadStreamEvent:type:
handleWriteStreamEvent:type:
_bytesWritten
_iconData
_iconHash
_netService
setDeviceID:
wifiRequest
setWifiRequest:
invalidateAssertionTimer
logAutoUnlockEnd
proxyRequestData
handleDefaultMessageData:
sessionCompleted
setSessionCompleted:
sendProxyCompleteMessage
aksCacheForDeviceID:
setAksCache:
useAKSToken
aksCache
tokenAKSSession
setAksSession:
escrowAKSSession
removeAKSCacheForDeviceID:
deviceDisconnected:
userRequestRequired
showUnlockedByDeviceNotificationWithDeviceID:
setAwdlStart:
setRangingIntiator:
handleWiFiRequestStartedWithStartAWDLHandler:
setQueueAvailableHandler:
awdlNetworkStarted
setAwdlStartedHandler:
handleWiFiRequestInvalidated
activateWithCompletion:
awdlStart
setWifiRequestStartedHandler:
createAuthTokenIfReady
handleDefaultMessage:
handleProxyMessageFromLock:
handleMessageWithWrapper:
hasSenderID
senderID
useProxy
handleInitialProxyMessageFromLock:
hasAwdlCacheID
awdlCacheID
setRemoteCacheID:
remoteCacheID
setType:
handleAWDLInfo:
updateAKSSession
beginAKSSession
handleSessionKeyExchangeResponse:
handleRangingResults:errorCode:
handleUnlockConfirmation:
logAutoUnlockStart
declareSystemActivityAssertion
useToken
setUseAKSToken:
setRemoteAWDLInfo:
authPrompt
setAttemptType:
attemptType
setUserRequestRequired:
setLegacyProtocol:
setExchangeResponse:
createWiFiRequest
sendSessionAuthToken:error:
exchangeResponse
wifiRequestStartedHandler
unlockAllowed
setSessionRangingKey:
sessionRangingKey
remoteAWDLInfo
peerListFromAWDLInfo:
setPeerList:
peerList
setClRangingPeer:
setRangingPeer:
errorRequestingUnlock
confirmSession
setAksSuccess:
aksSuccess
alertOfUnlock
hasSupportsACK
supportsACK
sendConfirmationACK
sendProxyMessageToKey:
awdlInfoCache
sendAWDLInfo:
cacheID
setAwdlCacheID:
clearCompanionAWDLCache
sendCachedKeyExchangeRequestWithWrapper:
sendData:type:errorHandler:
awdlInfoData
setUseToken:
setKeyData:
setSupportsConfirmationACK:
setUsingRecord:
cachedKeyDataForDeviceID:
sendProxyRequestToKey:
tokenFirstStep
tokenSessionID
hasEscrowFirstStep
escrowFirstStep
escrowSessionID
aksSessionID
setAksSessionID:
sendData:bleDevice:completionHandler:
clearCachedKeyDataForDeviceID:
setAuthToken:
sendData:type:completionHandler:
sendProxyMessageToLock:
restartAssertionTimer
assertionTimer
setAssertionTimer:
initWithBLEDevice:sessionID:
initWatchProxyWithSessionID:proxyRequestData:
connectionActivated
isAcceptor
keyCanUnlock
askPermissionForUnlock
sendAWDLInfoWithKeyData:error:
sendKeyExchangeRequestWithData:error:
setAwdlInfoCache:
sentAWDLInfo
setSentAWDLInfo:
setUnlockAllowed:
setErrorRequestingUnlock:
powerAssertionID
setPowerAssertionID:
powerAssertionState
setPowerAssertionState:
setProxyRequestData:
_sentAWDLInfo
_userRequestRequired
_sessionCompleted
_errorRequestingUnlock
_powerAssertionState
_awdlInfoCache
_unlockAllowed
_wifiRequestStartedHandler
_remoteCacheID
_peerList
_proxyRequestData
_aksCache
_assertionTimer
_exchangeResponse
hashTableWithOptions:
sessionManagerQueue
addNotificationsObservers
initializeCaptureBlock
updateWatchInfoIfNeeded
updateAdvertising
loadPresentedBluetoothError
loadPresentedWiFiError
wifiUserPowerPreference
setCachedWiFiState:
handleBLEDataReceivedNotification:
observerTable
incrementedCountID
signedIntoPrimaryiCloudAccount
setEligibleDevices:
setWithArray:
modelDescription
deviceSupportsRanging
modelCode
onqueue_createPairingLockSessionWithDevice:passcode:
notifyObserverOfFailedToEnableDevice:error:
deviceIDToEnableHandlers
lockPairingSessions
cancelEnablingAutoUnlockForDeviceID:
disablePairingForDeviceID:pairingID:
pairingIDForWatchID:
attemptAutoUnlockForType:preventRadarNotification:
setPreventRadarNotification:
generateAttempt
attemptAutoUnlock
notifyObserverOfAttemptBeganWithDevice:
setResults:
notifyObserversOfUnlockCompletionWithDevice:
notifyObserversOfUnlockFailureWithResults:error:
attemptInProgress
setConnectedBluetoothDevices:
setTimeSinceLastMachineWake:
setLastSleepType:
attemptCount
connectedBluetoothDevices
timeSinceLastMachineWake
lastSleepType
setAttemptStart:
macBeenUnlocked
setAttemptInProgress:
cachedWiFiState
presentedWiFiError
internetSharingEnabled
setAttemptID:
supportsAuthPrompts
bluetoothID
supportsAlwaysDirect
proxyBluetoothID
majorOSVersion
setScanAutoUnlockDevices:
setAutoUnlockActive:
startScannerWithWatchBluetoothIDs:phoneBluetoothIDs:
createLockSessionWithWatchDevice:
createProxySessionWithDeviceID:
restartScanTimer:
errorCodeForBluetoothEnabled:wifiEnabled:
errorStringForBluetoothEnabled:wifiEnabled:
shouldShowErrorForBluetoothEnabled:
setAttemptDevice:
setAuthSessionError:
setIncrementedCountID:
setProxyNotAvailableForUnlock:
setScanWatchIDs:
setScanPhoneIDs:
invalidateScanner
cleanUpProxySessions
cancelAutoUnlockWithCancelReason:usingTool:
attemptDevice
stringForState:
authPromptInfo
attemptID
setAttemptCount:
disablePairingWithKeyDevice:
sendDisableMessageToDeviceID:pairingID:
keyPairingIDForDeviceID:
keyPairingSessions
canceledPairingKeySessions
disableKeyPairingForDeviceID:
deleteEscrowSecretForDeviceID:
deleteRangingKeyForDeviceID:
sendWatchInfoIfNeeded:
placeholder
suggestionManager
suggestedDeviceID
setSuggestedDeviceID:
setupRetryDeviceID
setSetupRetryDeviceID:
setSetupRetryDevice:
setUpsellDevice:
lockAuthSessions
initWithAutoUnlockDevice:sessionID:bleDevice:
setUseProxy:
attemptStart
supportsEncryption
setUseEncryption:
locksWithAKSTokens
keyAuthSessions
companionAWDLInfoCache
keysWithAKSTokens
proxySessions
proxyErrorCode
lastProxyState
setLastProxyState:
setScanErrorString:
setProxyErrorCode:
updateStringForProxySession
setNotifiedForProxy:
setProxyDiscoverTime:
setProxyDeviceModel:
setProxyConnectionTime:
setAttemptTimedOut:
notifyObserverOfEnabledDevice:
setFeatureSuggestedForDeviceID:
setRetriedSetup
handleLockSessionCompleted:error:
handleProxySessionCompleted:error:
canceledAuthLockSessions
setLastSuccessfulDevice:
handleCanceledAfterSuccess
otherSessionCancel
logResults
autoUnlockDevice
wifiRangingResults
createRadarForError:devices:rangingResults:
attemptResults
decrementAttemptCount
invalidateAttempt
hintToken
setHintToken:
baseResultsDictionaryForError:
handleLockConnectionStartedForSession:
handleProxyConnectionStartedForSession:
notifiedForProxy
incrementAttemptCount
setOtherSessionCancel:
shouldShowErrorForWiFiEnabled:
scanTimer
setTimeout:
setTimeoutHandler:
notifyObserverOfKeyDeviceLockWithDevice:
updateLocalLTK
setNearbyDeviceChangedDate:
handleNearbyChangeCoalesced
onqueue_createPairingKeySessionWithIdentifier:deviceID:requestData:
onqueue_createWatchKeyProxySessionWithID:requestData:
setDiscoveryFlags:
setScanRate:
handleFoundPeer:
setDeviceFoundHandler:
setChangeFlags:
setDeviceChangedHandler:
setByAddingObjectsFromSet:
setDeviceFilter:
handleBLEScanTimerFired
setExtendedTimer:
invalidateScanTimer
scanWatchIDs
scanPhoneIDs
cancelAllLockSessionsForScanTimeout
handleScanTimerFired
setScanTimer:
scanErrorString
proxyDeviceModel
proxyDiscoverTime
authSessionError
proxyNotAvailableForUnlock
scanAutoUnlockDevices
advertisementFields
advertisingEnabled
directAdvertisingAllowed
proxyAdvertisingEnabled
watchLockedAndOnWrist
aggresiveProxyAdvertising
serviceClients
unlockUpdateAdvertising:mask:
currentlyAdvertising
setAdvertisingChangedDate:
setCurrentlyAdvertising:
watchUnlockEnabled
watchUnlocked
watchOnWrist
handleProxyTriggerFromBLEDevice:
hasEncryptedPayload
encryptedPayload
authTag
nonce
decryptMessage:authTag:nonce:bluetoothID:errorCode:
setAggresiveProxyAdvertising:
restartAggressiveAdvertisingTimer:
aggressiveAdvertisingTimer
setAggressiveAdvertisingTimer:
releaseIdleSleepAssertionForProxyTrigger
declareSystemActivityAssertionForProxyTrigger
sendWatchInfoRequest
deviceKeyBagState
setLockStateChangedDate:
handleKeyBagLockStateChanged
setMacBeenUnlocked:
setPipeConnectionChangedDate:
generatesCacheID:
setCacheID:
setInfoData:
setWatchAWDLInfoCache:
setCompanionAWDLInfoCache:
compare:
sortedArrayUsingSelector:
sendWatchInfoIfNeeded:forNearbyChange:
setWatchUnlockEnabled:
setWatchUnlocked:
setWatchOnWrist:
setWatchWristDetectDisabled:
setCachedKeyExchangeRequests:
updatePairedWatchWristState:
waitingForWatchInfo
setPreviousNearbyState:
setWaitingForWatchInfo:
watchWristDetectDisabled
exchangeRequestsForData:
setReceivedWatchInfoDate:
nearbyPushTimer
previousNearbyState
handleNearbyStateChanged
setNearbyPushTimer:
cachedKeyExchangeRequests
setBluetoothErrorCount:
setPresentedBluetoothError:
savePresentedBluetoothError
setWifiErrorCount:
setPresentedWiFiError:
savePresentedWiFiError
presentedBluetoothError
bluetoothErrorCount
wifiErrorCount
dumpState
setStateHandle:
dataWithPropertyList:format:options:error:
lockStateChangedDate
receivedWatchInfoDate
advertisingChangedDate
nearbyDeviceChangedDate
sessionDidReceiveKeyDeviceLocked:
sessionDidSendInitialData:
handleDisableMessageForKey:fromDeviceID:
handleDisableMessageForLock:fromDeviceID:
createKeySessionWithBLEDevice:sessionID:wrapper:useEncryption:
clearAllKeysWithTokens
unlockEnabledForPeer:
proxyAdvertisementForPeer:
watchLockedOnWristForPeer:
watchSupportsAlwaysDirect
addServiceClientForIdentifier:
removeServiceClientForIdentifier:
invalidateAggressiveAdvertisingTimer
screenLockUnlocked:
handleLockStateChanged
wristStateChanged:
pipeConnectionChanged:
cachedAKSSessionsChanged:
awdlInfoChanged:
storeWatchAWDLInfoCache
clearWatchAWDLCache
handleBluetoothPowerChanged:
handleWiFiPowerChanged:
generateStateDump
watchAWDLInfoCache
stateHandle
setSessionManagerQueue:
setObserverTable:
setSuggestionManager:
setDeviceIDToEnableHandlers:
setLockAuthSessions:
setCanceledPairingKeySessions:
setCanceledAuthLockSessions:
setKeyAuthSessions:
setLockPairingSessions:
setKeyPairingSessions:
setProxySessions:
setLocksWithAKSTokens:
setKeysWithAKSTokens:
setServiceClients:
previousMacAddressData
setPreviousMacAddressData:
extendedTimer
proxyConnectionTime
proxyTriggerAssertionID
setProxyTriggerAssertionID:
proxyTriggerAssertionState
setProxyTriggerAssertionState:
eligibleDevices
wristStateChangedDate
setWristStateChangedDate:
pipeConnectionChangedDate
previousConnectedState
setPreviousConnectedState:
waitingForCompanionResponse
setWaitingForCompanionResponse:
preventRadarNotification
_attemptInProgress
_watchUnlockEnabled
_watchUnlocked
_watchOnWrist
_watchWristDetectDisabled
_waitingForWatchInfo
_previousNearbyState
_extendedTimer
_notifiedForProxy
_proxyNotAvailableForUnlock
_aggresiveProxyAdvertising
_macBeenUnlocked
_presentedBluetoothError
_presentedWiFiError
_currentlyAdvertising
_previousConnectedState
_waitingForCompanionResponse
_cachedWiFiState
_preventRadarNotification
_proxyTriggerAssertionID
_proxyTriggerAssertionState
_watchAWDLInfoCache
_stateHandle
_sessionManagerQueue
_observerTable
_suggestionManager
_deviceIDToEnableHandlers
_lockAuthSessions
_canceledPairingKeySessions
_canceledAuthLockSessions
_keyAuthSessions
_lockPairingSessions
_keyPairingSessions
_proxySessions
_locksWithAKSTokens
_keysWithAKSTokens
_serviceClients
_previousMacAddressData
_cachedKeyExchangeRequests
_companionAWDLInfoCache
_nearbyPushTimer
_attemptStart
_attemptDevice
_attemptType
_scanTimer
_proxyDiscoverTime
_scanErrorString
_authSessionError
_proxyErrorCode
_proxyDeviceModel
_lastProxyState
_proxyConnectionTime
_scanAutoUnlockDevices
_scanWatchIDs
_scanPhoneIDs
_aggressiveAdvertisingTimer
_attemptCount
_attemptID
_incrementedCountID
_connectedBluetoothDevices
_timeSinceLastMachineWake
_lastSleepType
_eligibleDevices
_wifiErrorCount
_bluetoothErrorCount
_advertisingChangedDate
_receivedWatchInfoDate
_wristStateChangedDate
_lockStateChangedDate
_nearbyDeviceChangedDate
_pipeConnectionChangedDate
initWithObjectsAndKeys:
CFUserNotificationPostAccessoryNotification:forMsg:forDefaultButton:withAlternateButton:forNotification:withCallback:andTimeout:andRecordID:
CFUserNotificationTearDownAccessoryNotification:
setQualityOfService:
browserInvalidated
isInstructor
convertAdvancedDescriptionToSimple:
operationToSendItems:fromBundleIdentifier:description:previewImageData:
operationNameForPersonID:sessionID:clientBundleID:
operationStarted:
addTarget:selector:forOperationEvents:delegateQueue:
operationMadeProgress:
operationEnded:
cancelSendingItemsToPersonWithID:sessionID:clientBundleID:
addOperation:
operations
componentsJoinedByString:
completedUnitCount
displayName
secondaryName
iconImageData
isGroup
isCourse
arrayWithArray:
convertShareTargetToNode:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
shareTargetBrowser:didInterruptWithError:
shareTargetBrowser:didFindTargets:
shareTargetBrowser:didRemoveTargets:
startSendingItems:withDescription:previewImageData:toPersonWithID:sessionID:clientBundleID:airDropClientDelegate:
setNodes:
_personIDToShareTarget
_browser
_operationsQueue
_nodes
isPassLibraryAvailable
canAddPasses
initWithData:error:
lastObject
passURL
openURLs:
addPasses:withCompletionHandler:
macAddressData
setMacAddressData:
_clRangingPeer
_macAddressData
setRangingStartedHandler:
setRangingCompletedHandler:
wifiRangingError
setWifiRangingError:
setWifiRangingResults:
awdlStartedHandler
rangingStartedHandler
setCalledAWDLStarted:
rangingStarted
setRangingStarted:
setWaitingForNetworkToDisable:
_rangingIntiator
_rangeable
_calledAWDLStarted
_rangingStarted
_waitingForNetworkToDisable
_rangingPeer
_wifiRangingError
_wifiRangingResults
_queueAvailableHandler
_awdlStartedHandler
_rangingStartedHandler
_rangingCompletedHandler
buildNodesAndNotify
numberWithUnsignedChar:
numberWithUnsignedLongLong:
setSender:
setBytesPerSec:
setErrorDomain:
setBrowserID:
setBluetoothDiscovery:
setBonjourResolveComplete:
setTcpConnectionComplete:
setTlsHandshakeComplete:
setIdentityQueryComplete:
setTotalDiscovery:
setAwdlVersion:
setPlatform:
setRssi:
setStartTimestamp:
setSessionDuration:
setFirstDiscovery:
setTotalPeersDiscovered:
setMaxPeersDiscovered:
setLegacyMode:
setActivityType:
insertObject:atIndex:
setEscrowFirstStep:
setTokenFirstStep:
hasTokenFirstStep
setEscrowSessionID:
setHasEscrowSessionID:
hasEscrowSessionID
setTokenSessionID:
setHasTokenSessionID:
hasTokenSessionID
_escrowFirstStep
_escrowSessionID
_tokenFirstStep
_tokenSessionID
preventExitForLocaleIfNeeded
pairingStorePath
activeDeviceName
initWithPairingID:pairingStorePath:deviceName:
setSecurityManager:
activeDeviceDescription
lockState
pairingCompatibilityState
deviceIsPaired
updateExitPrevention
devicesDidFailToPair:
pairingStatusChanged:
pairingDidBegin:
deviceDidEnterConfigState:
disableUnlockPairingForSecManager:
resetAll
abortDevicePairingWithReason:
shouldAbort
setIdsController:
unlockTimer
setUnlockTimer:
_setupAuthSession
_unlockAuthSession
_stashBagSession
_idsController
_securityManager
_unlockTimer
setCancelAction:
setSelectedAction:
transferState
errorDetailedString
bundleProxyForiWorkURL:
setBundleProxy:
isiWorkURL
iWorkApplicationName
capitalizedString
applicationProxyForIdentifier:
isInstalled
localizedName
iWorkDocumentName
documentName
setCompletionHandler:
_appName
_webLinksHandler
documentProxyForName:type:MIMEType:
applicationsAvailableForOpeningFromAirDropWithError:
applicationsAvailableForOpeningWithError:
intersectOrderedSet:
userResponse
needsAction
handlingAppBundleID
acceptActionTriggered
setMinRequiredTransferState:
setSelectedApplication:
selectedApplication
performActionWithBundleProxy:completionHandler:
availableApplications
actionForBundleProxy:
actionHandler
addOpenWithActions
applicationProxyForBundleProxy:
isRestricted
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:
logReceiverBundleID:forAppProxy:andURL:
addOperations:waitUntilFinished:
_LSFailedToOpenURL:withBundle:
_workOperationsQueue
_icloudDriveHandler
_selectedHandler
_selectedProxy
_availableApplications
_selectedApplication
requestIdentifier
deviceIdentifier
timeoutTimer
requestCreatedDate
setRequestIdentifier:
setDeviceIdentifier:
setTimeoutTimer:
setError:
_requestCreatedDate
_requestIdentifier
_deviceIdentifier
_completionHandler
_timeoutTimer
previousKeyIdentifier
setPreviousKeyIdentifier:
canDoCloudRequest
setCanDoCloudRequest:
retryCount
setRetryCount:
timeSinceLastRequest
setTimeSinceLastRequest:
_canDoCloudRequest
_previousKeyIdentifier
_timeSinceLastRequest
advertisementPayload
setAdvertisementPayload:
command
setCommand:
_advertisementPayload
_command
messageIdentifier
activityIdentifier
setMessageIdentifier:
setActivityIdentifier:
_messageIdentifier
_activityIdentifier
networkBrowser:nodesChangedForParent:protocol:error:
initWithNode:protocol:flags:kind:
setConnection:
sidebarNodes
nodeBrowser:nodesChangedForParent:protocol:error:
initWithKind:rootNode:
openNode:forProtocol:flags:
copyRootNode
sidebarChildren
closeNode:
kind
boostMessage
setBoostMessage:
connection
_rootNode
_nodeBrowsers
_kind
_objectKey
_boostMessage
networkEjecter:event:withResults:
ejectMountPoints:useAssistant:
notifyClientAboutEject:
mountPointsForServer:
eject
initWithNode:
flags
protocol
setProtocol:
_node
_mountedCount
_ejectedCount
_flags
_protocol
sd_connectionBundleID
sd_description
sd_connectionHasEntitlement:
removeObserver:forKeyPath:context:
addObserver:forKeyPaths:options:context:
removeObserver:forKeyPaths:context:
weakObjectsHashTable
bulletinDataProviderConnection
addDataProvider:
observers
methodForSelector:
promptInfo
notificationTimer
dismissNotification
suggestionNotificationTimedOut
notifyObservers:
setNotificationTimer:
bundleForClass:
variantWithFormat:imageName:inBundle:
addVariant:
defaultSectionInfoForType:
sectionIdentifier
setSectionID:
setSuppressFromSettings:
setNotificationCenterLimit:
setPushSettings:
setAlertType:
setShowsInNotificationCenter:
setMessageNumberOfLines:
setUsesVariableLayout:
sortDescriptorWithKey:ascending:
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
showAuthorizationRequestNotificationWithDeviceID:completion:
removeAuthorizationRequestNotification
showSuggestionNotificationWithDevice:
showMacUnlockedNotificationWithDuration:
showSetupRetryNotificationWithDevice:
showFileRadarNotificationWithCompletion:
restartNotificationTimer:
invalidateNotificationTimer
setObservers:
setPromptInfo:
radarNotificationCompletion
setRadarNotificationCompletion:
_sectionIcon
_sectionInfo
_dataProviderProxy
_doubleClickListener
_cancelListener
_observers
_promptInfo
_notificationTimer
_radarNotificationCompletion
bundleProxyForIdentifier:
notifyClientWithPosixError:
initWithConnection:
schedule
setReplyData:
accept
logActivityType:sessionID:
airDropServer:event:withResults:
airDropConnection:event:withResults:
airDropController:didChange:
airDropStatus:didChange:
airDropInformation:didChange:
networkResolver:event:withResults:
copyPropertyForKey:
activities
setActivities:
_operation
_connectionScheduled
_activities
decryptionKey
updateWithRawAdvertisementData:receivedViaScanning:isReplay:newAdvertisementHandler:
clientAdvertisement
lastCounter
getResultWhileDecryptingBytesInPlace:andCounter:withTag:version:
keyIdentifier
newDecryptionKeyFromDataRepresentation:
setDecryptionKey:forDeviceIdentifier:
sendEncryptionKeyRequestToDeviceIdentifier:previousKeyIdentifier:completionHandler:
confirmFunctioningEncryptionKeyFromDeviceIdentifier:
decryptionKeyForDeviceIdentifier:
lastActivityAdvertisement
lastAdvertisementPayload
lastAdvertisementOptions
initWithAdvertisementVersion:advertisementPayload:options:device:
initWithDevice:
updateWithRawAdvertisementData:receivedViaScanning:newAdvertisementHandler:
idsDevice
setIdsDevice:
deviceTracked
setDeviceTracked:
disableDuplicateFilterOnce
setDisableDuplicateFilterOnce:
lastRawAdvertisementData
lastUsedKeyIdentifier
setLastUsedKeyIdentifier:
lastAdvertisementData
_lastReceivedAdvertisementDate
_deviceTracked
_disableDuplicateFilterOnce
_idsDevice
_lastRawAdvertisementData
_lastUsedKeyIdentifier
_lastAdvertisementData
notifyClientAboutResolve:
mount
mountDiskImageAsync
_resolver
_session
aa_primaryAppleAccount
fileSystemRepresentation
URLForDirectory:inDomain:appropriateForURL:create:error:
absoluteURL
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
URLByDeletingLastPathComponent
stringByDeletingPathExtension
whitespaceCharacterSet
rangeOfCharacterFromSet:options:
deleteCharactersInRange:
appendString:
reverseObjectEnumerator
hasSuffix:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
valueWithPointer:
characterAtIndex:
isAirDropAppInstallationAllowed
fileExistsAtPath:
installIPAs
installApplication:withOptions:error:
workgroups
workgroupThreshold
stopBrowsingWorkgroup:
loadWindows
takeActionOnServerChanged:neighborhood:
notifyClientAboutWorkgroups
userName
setUserName:
connectionState
setConnectionState:
object
setBonjourBrowserMode:
startBrowsingDomain:
bonjourNodesForDomain:
startBrowsingWorkgroup:
windowsNodesForWorkgroup:
domainsChanged:
workgroupsChanged:
autofsChanged:
connectedChanged:
managedChanged:
startODiskBrowsing:
odiskNodesForDomain:
isClassroomEnabled
classroomChanged:
isAirDropAllowed
startAirDropBrowsing:connection:sessionID:
sidebarPrefsChanged:
preferWideAreaBTMM
copyOverBonjourInfo:source:
backToMyMacEnabled
connectedEnabled
bonjourEnabled
localizedCaseInsensitiveCompare:
sortUsingComparator:
sidebarMaxCount
subarrayWithRange:
domainChildren
workgroupChildren
printerNodes
fileNodes
addBonjourChildrenFromCache:
addConnectedChildrenFromCache:
addClassroomChildrenFromCache:
stopBrowsingDomain:
stopODiskBrowsing:
stopAirDropBrowsing:
loadBonjour
loadDomains
loadSharePoints
loadWorkgroups
loadAutoFS
loadConnected
loadManaged
loadClassroom
loadODisk
loadAirDrop
loadSidebarPrefsMonitor
unloadBonjour
unloadWindows
unloadDomains
unloadSharePoints
unloadWorkgroups
unloadAutoFS
unloadConnected
unloadManaged
unloadClassroom
unloadODisk
unloadAirDrop
unloadSidebarPrefsMonitor
autoFSNodes
neighborhoodNodes
addWindowsChildrenFromCache:
addManagedChildrenFromCache:
sidebarNodesFromServerNodes:nonServerCount:addAllNode:
sharePointNodes
allEnabled
appendAllNode:
nodesInternal:
sharePointBrowser:nodesDidChangeWithError:
onlySupportsADisk:
_parent
_protocols
_combineWorkgroups
_queue
_odiskDomains
_airDropDomains
_bonjourDomains
_windowsWorkgroups
_autofsBrowser
_managedBrowser
_classroomBrowser
_connectedBrowser
_workgroupBrowser
_sharePointBrowser
_managedURLTable
_commentHashTable
remoteDiscStatusDidChange:
pollingTimerCallBack:
processResponse:
cancelAndDecline
setAskStatus:
sendRequest:
cancelResolve
requestBody
setAskID:
startPolling
setAskToken:
cancelPollingTimer
initWithURL:device:
handleResponse:
appendData:withLength:
askServer
countChanged
askID
askToken
askStatus
askDevice
setAskDevice:
_pollingTimer
_responseData
_askID
_askToken
_askStatus
_askDevice
postNotification:forNeighborhood:
workgroup
initWithWorkgroup:
stringForBrowserMode:
windowsNodesDidChange:
incrementTransfersInitiated
incrementTransfersCompleted
isAirDropEnabled
_odiskBrowsers
_bonjourBrowsers
_windowsBrowsers
_airDropBrowsers
recordData
setRecordData:
networkProtocol
setNetworkProtocol:
browser
setBrowser:
_recordData
_networkProtocol
closeSession
stopTXTRecordMonitor:
isPartialVolumeList
mountedSharePointsForProtocol:
singlePasswordEnabled:
shouldAskFirst:
addSharePoint:diskName:diskFlags:diskID:diskType:protocol:mountPath:
addSharesToCache:newFileShares:newPrinterShares:
addTXTRecordSharesToCache:printerShares:
buildShares:
netAuthURL
setServerURL:
netAuthProtocol
openNetAuthSession
shouldNotify
fullNameForScheme:hostName:
setError:state:notify:
isNetAuthSupportedProtocol:
startTXTRecordMonitor:
setShouldNotify:
enumerateShares
openSession
mountPointsChanged:
checkNetAuthSession:
browserForID:
initWithProtocol:authType:flags:
URLMountSession
handleTXTRecordCallBack:error:txtLen:txtRecord:context:
sharePointsFromMountPoints:
setProtocolUserName
setSharePoints:
setBonjourInfo:domain:resolveService:
setNetbiosName:
getBooleanValue:forKey:
setMountInfo:
serverURL
protocols
setProtocols:
typeIdentifier
setTypeIdentifier:
_askFirst
_passwordOnly
_sharesMounted
_resolveService
_diskFlags
_authType
_serverName
_changeCount
_neighborhood
_destroyTimer
_remoteDisc
_sharePoints
_fileShares
_printerShares
_mountedVolumes
_queries
_shouldNotify
_connectionState
_serverURL
_userName
_typeIdentifier
setTimestamp:
setHasTimestamp:
hasTimestamp
hasActivityType
timestamp
activityType
_timestamp
_activityType
ephemeralSessionConfiguration
initWithIdentifier:
set_appleIDContext:
sessionWithConfiguration:
taskInfo
sharedBag
urlAtKey:
absoluteString
gsToken
initWithURL:gsToken:
setHTTPBody:
prefsChanged
_isTaskInfoValid
_sendRequest
_callResponseHandlerWithInfo:error:
urlRequest
_handleTaskResponse:withData:error:
dataTaskWithRequest:completionHandler:
allHTTPHeaderFields
_handleCannotVerifyGSTokenError
statusCode
initWithHTTPUTLResponse:data:
responseInfo
_handleServerError:
_parseServerResponse:
dateWithTimeIntervalSince1970:
timeIntervalSince1970
initWithBase64EncodedString:options:
_parseCreateCertificateResponse:
_parseFetchCertificateResponse:
_parseGetMyInfoResponse:
setGsToken:
_handleGSTokenIsAvailable
activated
setActivated:
session
setSession:
_gsToken
_taskInfo
setMacAddress:
setExtraInfoData:
hasMacAddress
setDiscoveryMetric:
setHasDiscoveryMetric:
hasDiscoveryMetric
setMasterChannel:
setHasMasterChannel:
hasMasterChannel
setPreferredChannel:
setHasPreferredChannel:
hasPreferredChannel
setChannelFlags:
setHasChannelFlags:
hasChannelFlags
hasExtraInfoData
macAddress
discoveryMetric
masterChannel
preferredChannel
channelFlags
extraInfoData
_channelFlags
_discoveryMetric
_extraInfoData
_macAddress
_masterChannel
_preferredChannel
setKeyDeviceModel:
setWatchBuildVersion:
setWatchOSVersion:
hasKeyDeviceModel
hasProxyDeviceModel
setUsingProxy:
setHasUsingProxy:
hasUsingProxy
setBleKeyDiscoveryTime:
setHasBleKeyDiscoveryTime:
hasBleKeyDiscoveryTime
setBleProxyDiscoveryTime:
setHasBleProxyDiscoveryTime:
hasBleProxyDiscoveryTime
setBleAWDLInfoExchangeTime:
setHasBleAWDLInfoExchangeTime:
hasBleAWDLInfoExchangeTime
setBleKeyRequestExchangeTime:
setHasBleKeyRequestExchangeTime:
hasBleKeyRequestExchangeTime
setBleAuthTokenExchangeTime:
setHasBleAuthTokenExchangeTime:
hasBleAuthTokenExchangeTime
setAwdlBringUpTime:
setHasAwdlBringUpTime:
hasAwdlBringUpTime
setAwdlPeerDiscoveryTime:
setHasAwdlPeerDiscoveryTime:
hasAwdlPeerDiscoveryTime
setAwdlRangingTime:
setHasAwdlRangingTime:
hasAwdlRangingTime
setBleConfirmationTime:
setHasBleConfirmationTime:
hasBleConfirmationTime
setTotalUnlockTime:
setHasTotalUnlockTime:
hasTotalUnlockTime
setUnlockSucceeded:
setHasUnlockSucceeded:
hasUnlockSucceeded
setErrorType:
setHasErrorType:
hasErrorType
hasErrorDomain
setHasFlags:
hasFlags
setDistance:
setHasDistance:
hasDistance
setKeyBluetoothRSSI:
setHasKeyBluetoothRSSI:
hasKeyBluetoothRSSI
setProxyBluetoothRSSI:
setHasProxyBluetoothRSSI:
hasProxyBluetoothRSSI
setWithinRange:
setHasWithinRange:
hasWithinRange
setBleProxyConnectionTime:
setHasBleProxyConnectionTime:
hasBleProxyConnectionTime
setBleKeyConnectionTime:
setHasBleKeyConnectionTime:
hasBleKeyConnectionTime
setUsingTool:
setHasUsingTool:
hasUsingTool
setCancelTime:
setHasCancelTime:
hasCancelTime
setClamshellClosed:
setHasClamshellClosed:
hasClamshellClosed
setBluetoothConnectedDevices:
setHasBluetoothConnectedDevices:
hasBluetoothConnectedDevices
setTimeIntervalSinceLastWake:
setHasTimeIntervalSinceLastWake:
hasTimeIntervalSinceLastWake
setHasLastSleepType:
hasLastSleepType
setExternalDisplay:
setHasExternalDisplay:
hasExternalDisplay
setDisplayWaitTime:
setHasDisplayWaitTime:
hasDisplayWaitTime
setClamshellWaitTime:
setHasClamshellWaitTime:
hasClamshellWaitTime
setTimeIntervalSinceLastDarkWake:
setHasTimeIntervalSinceLastDarkWake:
hasTimeIntervalSinceLastDarkWake
setCancelReason:
setHasCancelReason:
hasCancelReason
setHasAttemptType:
hasAttemptType
hasWatchBuildVersion
hasWatchOSVersion
keyDeviceModel
usingProxy
bleKeyDiscoveryTime
bleProxyDiscoveryTime
bleAWDLInfoExchangeTime
bleKeyRequestExchangeTime
bleAuthTokenExchangeTime
awdlBringUpTime
awdlPeerDiscoveryTime
awdlRangingTime
bleConfirmationTime
totalUnlockTime
unlockSucceeded
errorType
errorDomain
distance
keyBluetoothRSSI
proxyBluetoothRSSI
withinRange
bleProxyConnectionTime
bleKeyConnectionTime
usingTool
cancelTime
clamshellClosed
bluetoothConnectedDevices
timeIntervalSinceLastWake
externalDisplay
displayWaitTime
clamshellWaitTime
timeIntervalSinceLastDarkWake
cancelReason
watchBuildVersion
watchOSVersion
_timeIntervalSinceLastDarkWake
_awdlBringUpTime
_awdlPeerDiscoveryTime
_awdlRangingTime
_bleAWDLInfoExchangeTime
_bleAuthTokenExchangeTime
_bleConfirmationTime
_bleKeyConnectionTime
_bleKeyDiscoveryTime
_bleKeyRequestExchangeTime
_bleProxyConnectionTime
_bleProxyDiscoveryTime
_bluetoothConnectedDevices
_cancelReason
_cancelTime
_clamshellWaitTime
_displayWaitTime
_distance
_errorDomain
_errorType
_keyBluetoothRSSI
_keyDeviceModel
_proxyBluetoothRSSI
_timeIntervalSinceLastWake
_totalUnlockTime
_watchBuildVersion
_watchOSVersion
_clamshellClosed
_externalDisplay
_unlockSucceeded
_usingProxy
_usingTool
_withinRange
xpcArrayForSFNodeArray:
xpcObjectForSFOperationResults:
stringFromXPCObject:
handleBrowserMessage:forConnection:
handleOperationMessage:forConnection:
handleNewConnection:
deviceInformation
isAirDropAvailable
isLegacyAirDropAvailable
sharedAgent
stateCapture
sharedDaemon
arrayFromXPCObject:
numberFromXPCObject:
_activeObjects
_activityAdvertiser
_activityScanner
_airdropManager
_autoUnlockSessionManager
_encryptionManager
_nearbyIDSAgent
_exportedOperations
_deviceAssetMonitor
_pairingDaemon
_payloadManager
_xpcServer
deviceSupportsWAPI
presentEnableRadiosAlertForBluetooth:andWLAN:
setWirelessEnabled:
setBluetoothEnabled:
doNotDisturbEnabled
setDoNotDisturbEnabled:
setTitle:
setMessage:
setDefaultButtonTitle:
setAlternateButtonTitle:
setErrorHandler:
present
configureSettingsForAirDrop
setDiscoverableMode:
setLegacyModeEnabled:
legacyDevice
legacyModeSettable
discoverableMode
setStatusAndNotify
presentDisablePersonalHotspotAlert
_started
_phUserNotification
_radiosUserNotification
generatedError
viewSyncing
validatePasscode:
sendSetupRequest
reloadPairingRecordsIfNeeded
userInfoForKeychainMismatch
userInfoForInternetSharing
userInfoForWatchNotSignedIn
userInfoForMacNotSignedIn
onqueue_updateForCloudPairing
waitingForCloudPairing
handleSuccessfulPairing
userInfoForNoWristDetectionNoPasscode
userInfoForNoWristDetection
userInfoForNoPasscode
userInfoForNoCommunincation
sendState
userInfoForNotCloudPaired
setupError
remoteLTKHash
companionDeviceModel
keyExchangeInterval
tokenExchangeInterval
keyDeviceLocked
upsellDevice
responseTimeout
responseTimeoutFromServer
messageTimeout
messageTimeoutFromServer
setupRetryDevice
receivedSetupACK
receivedTokenACK
ltkTimer
handleLTKTimerFired
setLtkTimer:
checkRemoteLTKForDeviceID:
updatePreferredRemoteLTKForDeviceID:
remoteLTKForDeviceID:
handleEscrowSessionRequest
ltkTimerRetryCount
setLtkTimerRetryCount:
restartLTKTimer
userInfoForMissingLTK
userInfoForWatchLocked
setSessionCreatedMessage:
sessionCreatedMessage
setRemoteLTKHash:
updateLTKs
userInfoCompanionViewNotSyncing
userInfoForiPhoneNeedsUnlock
userInfoForOldProtocol
userInfoForNewProtocol
aksPairingSessionForDeviceID:originator:errorCode:
sessionIsValid
finalizeEscrowPairing:
hasPairedDeviceID
setCompanionID:forWatchID:
setPairingID:forWatchID:
setCompanionDeviceModel:
setWaitingForCloudPairing:
setSendState:
setKeyExchangeDate:
setSetupError:
setSetupMessageIdentifier:
setTokenExchangeDate:
setTokenMessageIdentifier:
setKeyDeviceLocked:
handleKeyDeviceLocked
keyExchangeDate
setKeyExchangeInterval:
tokenExchangeDate
setTokenExchangeInterval:
setupMessageIdentifier
tokenMessageIdentifier
setReceivedSetupACK:
setReceivedTokenACK:
updateForCloudPairing
notifyDelegateKeyDeviceIsLocked
invalidateLTKTimer
setResponseTimeout:
setResponseTimeoutFromServer:
setMessageTimeout:
setMessageTimeoutFromServer:
_upsellDevice
_setupRetryDevice
_placeholder
_waitingForCloudPairing
_keyDeviceLocked
_receivedSetupACK
_receivedTokenACK
_sendState
_companionDeviceModel
_setupError
_ltkTimer
_sessionCreatedMessage
_responseTimeout
_responseTimeoutFromServer
_messageTimeout
_messageTimeoutFromServer
_ltkTimerRetryCount
_keyExchangeDate
_tokenExchangeDate
_keyExchangeInterval
_tokenExchangeInterval
_remoteLTKHash
_setupMessageIdentifier
_tokenMessageIdentifier
setAttemptError:
setAuthPrompt:
sendAWDLInfoData:type:completionHandler:
setLocalAWDLInfo:
useEncryption
encryptMessageData:deviceID:encryptedMessage:authTag:nonce:
setEncryptedPayload:
setAuthTag:
setNonce:
rangingDisabled
setWifiErrorDomain:
setWifiRangingErrorCode:
rangingStart
setRangingInterval:
peerInRange:
setInRange:
handlePeerInRange
setRangingTimedOut:
setRangingErrorString:
wifiRangingErrorCode
rangingErrorString
stringByAppendingFormat:
handlePeerOutOfRange
useCoreLocation
distanceMeters
shouldUnlock
setShouldUnlock:
useRealRangingKey
legacyProtocol
rangingKeyForDeviceID:
initWithCapacity:
sendAWDLInfo
rangingKey
inRange
setAwdlInfoData:
setAcceptor:
awdlInterval
setAwdlInterval:
setRangingKey:
rangingTimedOut
setRangingStart:
rangingInterval
attemptError
localAWDLInfo
wifiErrorDomain
coreLocationError
setCoreLocationError:
startAWDLError
setStartAWDLError:
_useAKSToken
_inRange
_shouldUnlock
_acceptor
_rangingTimedOut
_aksSuccess
_legacyProtocol
_useEncryption
_awdlInfoData
_awdlStart
_awdlInterval
_rangingKey
_rangingErrorString
_rangingStart
_rangingInterval
_attemptError
_remoteAWDLInfo
_localAWDLInfo
_sessionRangingKey
_wifiErrorDomain
_wifiRangingErrorCode
_coreLocationError
_startAWDLError
_wifiRequest
setSenderID:
hasPayload
setHasUseProxy:
hasUseProxy
setHasAwdlCacheID:
setHasAksSessionID:
hasAksSessionID
hasAuthTag
hasNonce
_aksSessionID
_authTag
_awdlCacheID
_encryptedPayload
_nonce
_payload
_senderID
_useProxy
initWithURL:
setHTTPShouldHandleCookies:
setHTTPMethod:
setValue:forHTTPHeaderField:
currentDevice
serverFriendlyDescription
installManagedConfigurationMonitor
installFinderSidebarPrefsMonitor
installWirelessCarPlayMonitor
installSMBPreferencesMonitor
installAirDropStatusMonitor
installCarPlayStatusMonitor
installDynamicStoreCallBack
installLocaleChangeMonitor
installDoNotDisturbMonitor
installSpringBoardStateMonitor
installSystemUIMonitor
installDisplaySleepMonitor
installDisplayConfigurationMonitor
installClamshellStateChangeMonitor
installBonjourNameMonitor
installContactsMonitor
installUserPictureMonitor
installUILockStatusMonitor
installSleepWakeCallBack
installBluetoothMonitor
installWirelessMonitor
installAppleIDMonitor
installVolumesMonitor
installAutoFSMonitor
installBacklightMonitor
installCallStatusMonitor
installSleepNotification
installWiFiPasswordSharingMonitor
installSSIDCacheMonitor
installMISMonitor
_multipleUsersLoggedIn
fixAppleIDAuthIfNeeded
createHostNameKey:
logAirDropTransactionForClientServer:beginEnd:count:
postNotification:
updateDiscoverableMode
wirelessCarPlay
wirelessAccessPoint
finderAirDropEnabled
enableAirDropReceiving
isAirDropReady
reconciledDiscoverableMode
appleIDNeedsFixing
eduModeEnabled
defaultDiscoverableMode
newDiscoverableMode
myAppleID
accountStatusForAppleID:
_copyMyAppleIDSecIdentity
_myAppleID
contactInfo
validatedEmailAddresses
altDSIDNeedsFixing
saveVerifiedAccount:withCompletionHandler:
aa_updatePropertiesForAppleAccount:completion:
addAppleID:withCompletion:
accountPropertyForKey:
validatedPhoneNumbers
myAppleIDEmailAddresses
myAppleIDPhoneNumbers
givenName
firstName
setGivenName:
familyName
lastName
setFamilyName:
phoneNumbers
phoneNumberWithStringValue:
initWithLabel:value:
setPhoneNumbers:
emailAddresses
setEmailAddresses:
imageDataAvailable
fallbackMeCardImageData
setImageData:
clearMyIconAndHash
contactForInfoHash:
generateContactHashes
contactWithContactIdentifier:
unifiedContactWithIdentifier:keysToFetch:error:
contactIsBlocked:
sharedPrivacyManager
value
isIncomingCommunicationBlockedForEmailAddress:
stringValue
phoneNumberWithDigits:countryCode:
isIncomingCommunicationBlockedForPhoneNumber:
descriptorForRequiredKeysForStyle:
contactsKeysToFetch
initWithKeysToFetch:
predicateForContactsWithIdentifiers:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
initWithAppleAccount:grandSlamAccount:accountStore:
profilePictureForAccountOwner
emailsForContact:
addEmails:toLongHashes:andMediumHashes:andShortHashes:forContactIdentifier:
instantMessageEmailsForContact:
phoneNumbersForContact:
addPhoneNumbers:toLongHashes:andMediumHashes:andShortHashes:forContactIdentifier:
meCard
infoForHash:
instantMessageAddresses
rangeOfString:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
addAdditionalInformationToMeCard:
telephonyServerConnection
lteConnectionShows4G
stringForWatchWristState:
myAppleIDValidationRecord
setBehaviorOverrideStatus:source:
clearContactsInfo
clearMyAppleIDInfo
aa_appleId
linkUserToAppleID:
commonNameForCertificate:
emailAddressesForAppleID:
phoneNumbersForAppleID:
validationRecordInfoForAppleID:
imageData
stringFromContact:style:
aa_primaryEmail
unifiedAppleIDInfo
smbConfiguration:netBiosName:workgroup:
computerName
initWithServiceName:onQueue:
myAltDSID
myPrimaryEmail
myAccountAppleID
initWithSuiteName:
arrayForKey:
isMultiUser
currentUser
userType
deviceSupportsContinuity
finderServer
aa_isManagedAppleID
airDropStatusChanged:
clearBackToMyMacDomains
uninstallBonjourNameMonitor
uninstallCarPlayStatusMonitor
carplayStatusNotification:
sharedAVSystemController
attributeForKey:
carplayMonitorDiedNotification:
contactStoreDidChange:
initWithQueue:
updateDoNotDisturbEnabled:
getBehaviorOverridesEffectiveWhileUnlockedWithCompletion:
setActiveBehaviorOverrideTypesWithSourceChangeHandler:
clearComputerName
clearLocalHostName
restartBonjourNameMonitor
handleBackToMyMacSetupChange
elements
initWithDisplayType:qualityOfService:handler:
postNotification:userInfo:
handleWiFiPasswordSharingChanged
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
clearMonitorCache
addServerName:forHostName:
airDropTransactionBegin:
airDropTransactionEnd:
removeServerName:
appleIDValidateRecord:validationRecord:
fixAltDSIDIfNeeded
hsa2EnabledWithCompletionHandler:
awdlDevice
awdlInfoForPeerWithServiceName:
contactForEmailHash:phoneHash:
contactIdentifierForMediumHashes:
contactIdentifierIsBlocked:
contactsContainsShortHashes:
networkType
signalStrength
pairedWatchWristState
defaultWiFiDevice
wifiPasswordSharingAvailability
wifiSSIDForSSIDHash:
airDropPublished
setFinderServer:
awdlPeerList
awdlStateInfo
consoleUser
clearConsoleUser
localHostName
minPersonImageSize
myAppleIDCommonName
myEmail
myName
myMediumHashes
myShortHashesForAirDrop
systemUIFlags
alwaysAutoAccept
backlightOn
bypassLTKeyAbort
carplayConnected
computerToComputer
deviceKeyBagLocked
deviceKeyBagLocking
deviceUIUnlocked
disableAutoAccept
disablePipelining
disableQuarantine
disableTLS
dockHasDownloadsFolder
enableABImages
enableAirDropAdvertising
enableAllRecents
enableDVZip
enableHotspotFallback
enableWebloc
enableXML
forceAWDL
handoffVisible
preferABImages
runningAsSetupUser
simStateReady
testDiskFull
handleAWDLState:
logBluetoothAvailabilityState:
logBluetoothPowerState
doNotDisturbChanged:
handleDynamicStoreCallback:changedKeys:
installKeyBagUnlockMonitor
handleNameMonitorCallBack:flags:error:
handleMISStateChanged:
handleSleepWakeCallBack:messageArguement:
reloadSMBConfInfo
handleServerConnectionCallBack:userInfo:
clearOperationModeInfo
clearWirelessState
logWiFiPowerState
awdlState
lastDarkWakeDate
controlCenterVisible
multipleUsersLoggedIn
_airDropCount
_airDropPublished
_autoFSSource
_backlightOn
_backlightLevelToken
_bonjourName
_btmmDomain
_btmmDomains
_carplayConnected
_computerName
_computerToComputer
_consoleUser
_consoleUserID
_contactStore
_currentDiscoverableMode
_deviceInformation
_deviceIsHighPriority
_deviceKeyBagState
_deviceKeyBagUnlocked
_deviceSupportsWAPI
_deviceUIUnlocked
_deviceWasUnlockedOnce
_doNotDisturbEnabled
_dynamicStoreSource
_finderAirDropEnabled
_finderServer
_handoffVisible
_identities
_keyBagUnlockToken
_legacyModeEnabled
_localHostName
_longHashesToContactIdentifier
_meCard
_mediumHashesToContactIdentifier
_mountPoints
_myAppleIDCommonName
_myAppleIDSecIdentity
_myEmailHashes
_myLegacyAirDropIcon
_myLegacyAirDropIconHash
_myPhoneHashes
_nameMonitor
_needsExitForLocaleChange
_netbiosName
_notifierObject
_notifyPortRef
_odisksMountPoints
_pairedWatchWristDetectDisabled
_pairedWatchWristState
_pmConnection
_preventExitForLocaleReasons
_rootPort
_screenOn
_serverNames
_shortHashes
_smbPreferences
_ssidHashes
_systemUIFlags
_uiLockStatusToken
_wirelessAccessPoint
_wirelessCarPlay
_workgroup
_settingsGateway
_telephonyServerConnection
_previousCallStatus
_systemUIMonitor
_screenBlankedToken
_controlCenterVisible
_awdlState
_lastDarkWakeDate
sharedPhotoLibrary
initWithBundleAtURL:
creationRequestForAssetFromVideoComplementBundle:
creationRequestForAsset
setShouldMoveFile:
addResourceWithType:fileURL:options:
placeholderForCreatedAsset
localIdentifier
performChanges:completionHandler:
_hasPhotos
_hasVideos
activityViewControllerPlaceholderItem:
activityViewController:itemForActivityType:
activityViewController:subjectForActivityType:
activityViewController:dataTypeIdentifierForActivityType:
activityViewController:thumbnailImageForActivityType:suggestedSize:
activityViewController:attachmentNameForActivityType:
initWithData:type:previewImage:subject:name:
initWithURL:previewImage:subject:
initWithString:previewImage:subject:
initWithAttributedString:previewImage:subject:
attributedString
setAttributedString:
setPreviewImage:
setFakeBundleID:
fakeBytes
setFakeBytes:
fakeDuration
setFakeDuration:
_fakeDuration
_attributedString
_data
_previewImage
_string
_subject
_uti
_URL
_fakeBundleID
_fakeBytes
alertWindow
setAlertWindow:
show:
mainScreen
bounds
initWithFrame:
setRootViewController:
sharedApplication
window
tintColor
setTintColor:
windows
windowLevel
setWindowLevel:
makeKeyAndVisible
rootViewController
presentViewController:animated:completion:
viewDidDisappear:
setHidden:
show
_sendLogRequestToDeviceID:honeybeeID:
_sendLogRequestToDevices:honeybeeID:
_sendMessage:devices:type:
receivedHoneybeeIDs
collectingSysdiagnose
_uploadSysdiagnose:
_collectSysdiagnoseWithCompletion:
_uploadSysdiagnoseToHoneybee:honeybeeID:
_handleLogRequest:
sendLogRequestToDeviceIDs:honeybeeID:
sendLogRequestToDevices:honeybeeID:
setCollectingSysdiagnose:
sysdiagnoseQueue
setSysdiagnoseQueue:
setReceivedHoneybeeIDs:
honeybeeConnection
setHoneybeeConnection:
_collectingSysdiagnose
_sysdiagnoseQueue
_receivedHoneybeeIDs
_honeybeeConnection
itemSourcesForFileNames:previewImageBaseName:fakeItemDuration:fakeItemBytes:fakeBundleID:
imageNamed:inBundle:
itemSourcesForNonFileURLDictionaries:fakeItemDuration:fakeItemBytes:fakeBundleID:
initWithString:
yellowColor
addAttribute:value:range:
greenColor
boldSystemFontOfSize:
enumerateObjectsUsingBlock:
URLForResource:withExtension:
imageWithContentsOfFile:
sharedFactory
images
videos
svgImages
contacts
calendarEvents
passes
voiceMemos
textDocuments
iTunesStoreLinks
mapsLinks
webLinks
webLinkStrings
webLinkStringBlocks
pdfs
pages
sharingDrawingDocuments
telephoneLinks
findMyFriendsLink
yelpLinks
iLifeLinks
iWorkLinks
keynoteLiveLinks
sharediCloudDocumentsLinks
strings
attributedStrings
dataDocuments
setCalendarEvents:
setContacts:
setImages:
setSvgImages:
genericDataDocuments
setGenericDataDocuments:
setPages:
setPasses:
setPdfs:
setSharingDrawingDocuments:
setTextDocuments:
setVideos:
setVoiceMemos:
setILifeLinks:
setITunesStoreLinks:
setIWorkLinks:
setMapsLinks:
sharedKeynoteLiveLinks
setSharedKeynoteLiveLinks:
setSharediCloudDocumentsLinks:
setTelephoneLinks:
setWebLinks:
setWebLinkStrings:
setWebLinkStringBlocks:
setYelpLinks:
setAttributedStrings:
setStrings:
_calendarEvents
_contacts
_images
_svgImages
_genericDataDocuments
_pages
_passes
_pdfs
_sharingDrawingDocuments
_textDocuments
_videos
_voiceMemos
_iLifeLinks
_iTunesStoreLinks
_iWorkLinks
_mapsLinks
_sharedKeynoteLiveLinks
_sharediCloudDocumentsLinks
_telephoneLinks
_webLinks
_webLinkStrings
_webLinkStringBlocks
_yelpLinks
_attributedStrings
_strings
_authToken
setWithCapacity:
wrapPayload:withType:useProxy:senderID:
initWithUUIDString:
responseTimer
setResponseTimer:
pairingAKSSession
setPairingAKSSession:
setSessionQueue:
_deviceID
_pairingAKSSession
_sessionQueue
_aksSession
_responseTimer
currentPeerChanged:
requireAWDL
set_socketStreamProperties:
setTimeoutIntervalForRequest:
setRequestCachePolicy:
set_connectionCachePurgeTimeout:
setConnectionProxyDictionary:
setHTTPMaximumConnectionsPerHost:
setHTTPShouldUsePipelining:
set_allowsTCPFastOpen:
setTLSMaximumSupportedProtocol:
setHTTPAdditionalHeaders:
sessionWithConfiguration:delegate:delegateQueue:
addBlockerInfo:toProperties:
storePropertyValue:forKey:
setSpotlightMetadata:
getTransferRate
startZipping
releasePeerToPeerIfPossible:
logInterfaceUsedForSending:
storeDataValue:forKey:
storeStringValue:forKey:
notifyClientOfBytesCopied:timeRemaining:
parseAskResponse:
finishOperation
retryRequestForError:
parseDiscoverResponse:
didStartSendingAskBodyData
didFinishSendingAskBodyData
didFail:
didFinishLoading
shouldCancelTransferForError:
_CFURLResponse
connectionOverP2P:
transactionMetrics
_remoteAddressAndPort
_localAddressAndPort
secureConnectionStartDate
fetchStartDate
secureConnectionEndDate
responseEndDate
protectionSpace
authenticationMethod
serverTrust
receiverIsTrusted:
credentialForTrust:
credentialWithIdentity:certificates:persistence:
addHashesAndValidationRecordToRequest:
requestWithURL:
discoverBodyDataInFormat:
askBodyDataInFormat:
_CFURLRequest
uploadTaskWithRequest:fromData:
uploadTaskWithStreamedRequest:
temporaryWeblocURL:
internetLocationFile:
generatePreviewForFileURL:
appendFileURL:withBase:toItems:
convertMediaItemsWithCompletionHandler:
startPublishingProgress
removeFileIconsFromProperties
validateAirDropItemsWithCompletionHandler:
createSession
splitOutFileURLs
startSendingClassroom
readingIntentWithURL:options:
initWithFilePresenter:
startSending
coordinateAccessWithIntents:queue:byAccessor:
finishTasksAndInvalidate
initWithOptions:path:
title
isAllDay
contactsWithData:error:
numberWithUnsignedLong:
initWithStyle:diameter:
monogramsAsFlatImages
monogramForContact:isContactImage:
photoOutboundSharingTmpDirectoryURL
setDirectoryForTemporaryFiles:
initWithOpaqueRepresentation:
realPathURL:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
convertMediaItemFromURL:forMediaCapabilities:completionHandler:
convertLivePhotoBundleIfNeeded:capabilities:completionHandler:
imagePath
convertWideGamutToClampedPhoto
sourceForFileURL:
requestForSource:destinationCapabilities:error:
fileURL
fileType
setLivePhotoPairingIdentifierBehavior:
backwardsCompatibilityStatus
progress
status
enqueueConversionRequest:completionHandler:
livePhotoConversionRequest
imageConversionRequest
source
containsHEIFImage
containsHEVCVideo
preflightConversionRequest:completionHandler:
tmpDirectory
numberWithFloat:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
whereFromInfo
storeArrayValue:forKey:
cancelSendingClassroom
shouldPublishProgress
_askResponse
_askTask
_cancelled
_connectionKey
_conversionManager
_discover
_discoverResponse
_discoverTask
_failCount
_fileIcon
_fileURLs
_fileURLToConversionNeeded
_generatedFiles
_mediaFormatConversionDestinations
_metric
_otherStuff
_p2pRetained
_personAdded
_providedStream
_queueSuspended
_receiverData
_sendingLivePhotoJPEGs
_serverTrust
_shouldPublishProgress
_smallFileIcon
_tmpDirectoryToCleanUp
_transactionStarted
_uploadFinished
_uploadResponse
_uploadTask
_weblocURLs
_zipper
_zipperFinished
setLtkData:
hasLtkData
setViewState:
setHasViewState:
hasViewState
setNeedsUnlock:
setHasNeedsUnlock:
hasNeedsUnlock
setCurrentlySyncing:
setHasCurrentlySyncing:
hasCurrentlySyncing
ltkData
viewState
needsUnlock
currentlySyncing
_ltkData
_currentlySyncing
_needsUnlock
_viewState
totalDiscovery
_modelName
_bluetoothDiscovery
_bonjourDiscovery
_bonjourTXTRecordDiscovery
_bonjourResolveComplete
_tcpConnectionComplete
_tlsHandshakeComplete
_identityQueryComplete
_totalDiscovery
_verifiableIdentity
valueWithNonretainedObject:
userInterfaceIdiom
nickname
setMiddleName:
stringFromContact:
openSensitiveURL:withOptions:
capabilitiesForCurrentDevice
opaqueRepresentation
handleClosedConnection
notifyClientForEvent:
notifyClient:withResults:
performBlockForAllProgresses:
progressWithTotalUnitCount:
handleTerminalCallBack
senderInfoAvailable
silentlyCancelRequest
enqueueResponse:code:body:
senderIsTrusted:
senderIsBlocked
sendDiscoverResponse:includeHashes:
storeIconValue:forKey:
storeBooleanValue:forKey:
convertURLStringsToURLs
createPersonForAskRequest
allowAskRequestFromPerson:
senderIsMe
adjustPropertiesForLivePhotos
silentlyCancelRequestOnMainThread
sendAskResponse:
parseDiscoverRequest
handleDiscoverRequest
parseAskRequest
handleAskRequest
processRequest
startPublishingProgressForPlaceholderFiles:
startReceivingBody:error:
enqueueBadResponseForRequest:
makeDestinationDirectory
storeRequestValue:forKey:convertToNumber:
thereIsEnoughFreeSpace
oneHundredContinue:
startReceivingFile:error:
sendUploadResponse:
getStatusCode:
storeNumberValue:forKey:
transferIsOverPrebufferLimit
setCombinedFileURLsAndItems:
didCloseConnection
didReceiveError:
handleReadStreamEvent:event:
didReceiveRequest:
didSendResponse:forRequest:
didFailToSendResponse:
_stopDeferred
_userAccepted
_senderTrusted
_delayedFinish
_endEncountered
_connectionClosed
_sentResponse
_requestBuffer
_clientTrust
_askSemaphore
_askRequest
_uploadRequest
_discoverRequest
_mediaCapabilities
loadPersistedKeyRequests
encryptionKeyRequest:service:account:fromID:context:
setProtobufAction:forIncomingRequestsOfType:
encryptionKeyReplyRequest:service:account:fromID:context:
setProtobufAction:forIncomingResponsesOfType:
payloadRequest:service:account:fromID:context:
payloadReplyRequest:service:account:fromID:context:
newAdvertisementWithPayloadRequest:service:account:fromID:context:
sendEncryptionKeyRequestRecord:
resetStateTwoRequested:
savePersistedKeyRequests
filterUsingPredicate:
requestTimedOut:
timerWithTimeInterval:target:selector:userInfo:repeats:
dataRepresentationForCurrentEncryptionKey
protobufDataFromRequest:
devicesForBTUUID:
addTimer:forMode:
idsDeviceWithUniqueID:
requestFromProtobufData:
outgoingResponseIdentifier
setDecryptionKeyDataRepresentation:forDeviceIdentifier:
timeIntervalSinceNow
encryptionKey
sendEncryptionKeyReplyRequestToDevice:canDoCloudReply:encryptionKey:requestIdentifier:
incomingResponseIdentifier
sendActivityPayloadReplyRequestToDevice:withActivityIdentifier:advertisementPayload:activityPayload:requestIdentifier:error:
didSendPayloadForActivityIdentifier:toDevice:error:
fire
propertyListWithData:options:format:error:
dateCreated
removeLastObject
handleNewAdvertisementDevice:data:receivedViaScanning:withSuccessHandler:
sendActivityPayloadRequestToDeviceIdentifier:withAdvertisementPayload:command:timeout:completionHandler:
service:account:incomingMessage:fromID:
_encryptionService
_restrictionsDisabled
_cloudFallbackDisabled
_persistedKeyRequests
_uniqueIDToKeyReplyDate
_messageIdentifierToKeyRequestRecords
_messageIdentifierToReplyRecords
_messageIdentifierToRequestRecords
_cachedActivityPayloadsForDemo
setDeviceWasLocked:
setWaitingForDisplayOrClamshell:
_cancel
lockKeyBagIfNeeded
sendUnlockConfirmation:withError:
lockedKeyBag
otherProviderCancel
deviceWasLocked
setLockedKeyBag:
_handleCanceledAfterSuccess
displayConfigChanged:
clamshellStateChanged:
waitingForDisplayOrClamshell
setConfigChangeType:
consumeAuthTokenIfReady
attemptTimedOut
watchModelID
discoveryTime
connectionWaitTime
awdlInfoExchange
keyRequestExchange
tokenExchange
confirmation
peerFoundInterval
configChangeType
displayClamshellWaitTime
awdlTotal
btBootstrap
btOverall
completeExchange
watchRSSI
generateACMContextData
canCreateTokenSessionForDeviceID:
setFirstSend:
handleFoundBLEDevice:enabled:lockedOnWrist:
discoveryDate
setDiscoveryDate:
aksPeerAvailable
setFoundPeer:
setConnectionDate:
dateWithTimeIntervalSinceReferenceDate:
setDiscoveryTime:
setConnectionWaitTime:
setConnected:
receivedAWDLInfo
receivedExchangeRequest
onlyRanging
displayOrClamshellWaitingDate
setDisplayClamshellWaitTime:
foundPeer
connected
confirmationTimer
setConfirmationTimer:
setAwdlTotal:
setOnlyRanging:
awdlUp
setAwdlUp:
setPeerFoundInterval:
connectionDate
firstSend
setAwdlInfoExchange:
setKeyRequestExchange:
exchageResponseDate
setTokenExchange:
setBtBootstrap:
invalidateConfirmationTimer
handleConfirmationACK
setReceivedAWDLInfo:
sentExchangeResponse
invalidateTimerIfReady
setOldWatch:
hasSupportsConfirmationACK
supportsConfirmationACK
hasKeyData
keyData
setReceivedExchangeRequest:
aksAuthSessionForDeviceID:originator:usingEscrow:
aksAuthorizationSessionForDeviceID:originator:
sendKeyExchangeResponseWithData:
setSessionAuthToken:
setBtOverall:
startAWDL
confirmationSendDate
setConfirmation:
setCompleteExchange:
peerMacAddress
handleAWDLUp
handleRangingStarted
sessionAuthToken
setDisplayOrClamshellWaitingDate:
localDeviceID
setExchageResponseDate:
setSentExchangeResponse:
sendingConfirmation
setSendingConfirmation:
setSupportsACK:
setConfirmationSendDate:
restartConfirmationTimer:error:
invalidateNoDisconnect
handleDecryptionFailure:
sendUnlockRequest
wifiState
setWifiState:
setOtherProviderCancel:
setAutoUnlockDevice:
oldWatch
setPeerMacAddress:
setWatchRSSI:
displayCount
setDisplayCount:
displayTimer
setDisplayTimer:
setWatchModelID:
_wifiState
_otherSessionCancel
_otherProviderCancel
_attemptTimedOut
_oldWatch
_onlyRanging
_foundPeer
_connected
_lockedKeyBag
_deviceWasLocked
_receivedAWDLInfo
_sendingConfirmation
_sentExchangeResponse
_receivedExchangeRequest
_supportsConfirmationACK
_waitingForDisplayOrClamshell
_awdlUp
_watchRSSI
_bluetoothID
_discoveryTime
_autoUnlockDevice
_peerMacAddress
_sessionAuthToken
_displayCount
_configChangeType
_displayTimer
_confirmationTimer
_watchModelID
_discoveryDate
_connectionDate
_firstSend
_exchageResponseDate
_displayOrClamshellWaitingDate
_confirmationSendDate
_btOverall
_btBootstrap
_awdlInfoExchange
_keyRequestExchange
_tokenExchange
_confirmation
_peerFoundInterval
_awdlTotal
_completeExchange
_connectionWaitTime
_displayClamshellWaitTime
raise:format:
setTransfer:
isFile
isActivated
removeStatusMonitorObservers
setTransferTypes:
addStatusMonitorObservers
setIsActivated:
selectedAction
triggerSelectedActionIfAppropriate
possibleActions
prepareOrPerformOpenAction
cancelAction
setLocalizedTitle:
setSingleItemLocalizedTitle:
setContentsTitle:
setContentsDescription:
setUserResponse:
shouldUpdateUserResponse
prepareForAccept
minRequiredTransferState
maxTransferState
requiresUnlockedUI
setTransferState:
setMaxTransferState:
applicationProxyForSystemPlaceholder:
isVerifiableIdentity
stringWithString:
appendFormat:
URLOverrideForURL:
handlingAppInstalled
applicationsAvailableForOpeningURL:
senderCompositeName
substringToIndex:
applicationIdentifier
removeItemAtURL:error:
transferUpdated
actionSelected:
hasFiles
hasLinks
setHandlingAppInstalled:
setHandlingAppBundleID:
_hasFiles
_hasLinks
_isActivated
_handlingAppInstalled
_transfer
_bundleProxy
_handlingAppBundleID
setHasSupportsACK:
_supportsACK
boolValue:
setInformationAndNotify
loadSuggestedPeers
testDeviceID
foundPeers
postSuggestionNotification
triggerDevicesIfNeeded
setupRetryIfNeeded
retriedSetup
alwaysShowSetupRetry
lastSuccessfulDevice
invalidateSuggestedDeviceTimer
setupRetryDeviceTimer
suggestionManagerQueue
setSetupRetryDeviceTimer:
setSuggestedPeer:
suggestedPeer
deviceTimer
setDeviceTimer:
restartServiceTimer:
invalidateServiceTimer
serviceTimer
invalidateSuggestionService
setServiceTimer:
initWithType:
setCurrentBluetoothIDs:
foundFirstPeer
setFoundFirstPeer:
currentBluetoothIDs
postNotificationIfNeeded
suggestionManagerSessionID
updateSuggestionService
watchAvailableForUnlockWithCompletionHandler:
deviceEnabledAsKey:
canSuggestForDeviceID:
suggestedPeers
setSuggestedPeers:
integerForKey:
setInteger:forKey:
suggestionNotificationSetUpSelected
suggestionNotificationDismissed
setupRetryNotificationSetUpSelected
setupRetryNotificationDismissed
setupRetryNotificationTimedOut
handleTestSuggestion
restartSetupRetryDeviceTimer:
invalidateSetupRetryDeviceTimer
restartSuggestedDeviceTimer:
startScanning
sendStartAdvertisingToDeviceID:
shouldSendRequestsForDeviceID:
updateDefaultsForDeviceID:
featureSuggestedForDeviceID:
suggestionsEnabled
ignoreBackOff
setFoundPeers:
setSuggestionManagerSessionID:
setSuggestionManagerQueue:
_foundFirstPeer
_suggestedDeviceID
_setupRetryDeviceID
_lastSuccessfulDevice
_foundPeers
_currentBluetoothIDs
_serviceTimer
_deviceTimer
_setupRetryDeviceTimer
_suggestedPeers
_suggestedPeer
_suggestionManagerSessionID
_suggestionManagerQueue
setStashToken:
_stashToken
setHasUsingRecord:
_usingRecord
enumerateRemoteObjectProxiesUsingBlock:
replaceIconValue:forKey:
makeDestinationDirectoryWithIdentifier:error:
activeConnections
transferWithIdentifierWasAccepted:
_enumerateRemoteObjectProxiesUsingBlock:
transferWithIdentifierWasDeclined:
establishConnectionWithCompletionHandler:
updateTransferWithIdentifier:withState:information:completionHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setClassroomDelegate:
machServiceName
exportedInterface
remoteObjectInterface
shouldAcceptNewConnection:
connectionEstablished:
connectionInvalidated:
_transferIDToProgress
setPairedDeviceID:
_pairedDeviceID
updateServerState
awdlTimeoutFired:
bluetoothTimeoutFired:
invalidateTimers
startTimers
startHTTPServer:
publishedInfoChanged:
stopProximityScanner
startServer
discoverableByEveryone
discoverableByContactsOnly
startProximityScanner
keyBagFirstUnlock:
wirelessChanged:
appleIDChanged:
airDropUnpublished:
screenStateChange:
bluetoothChanged:
discoverableModeChanged:
sslSettings
didOpenConnection:
didCloseConnection:
systemHasPoweredOn:
finderAirDropEnabled:
stopScanningAndStartServer
_bluetoothTimer
_server
_discoverableMode
_publisher
_discoveredHashes
_information
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:usingEscrow:
setupSession
sessionType
localLTK
remoteLTK
originator
fixRemoteLTKWithStatus:retryBlock:
usingEscrow
escrowSecret
resignRemoteLTKForDeviceID:
setRemoteLTK:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:usingEscrow:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:
fixRemoteLTK
ltkNeedsFixing
setLtkNeedsFixing:
setLocalLTK:
setSessionType:
setOriginator:
setEscrowSecret:
setUsingEscrow:
_ltkNeedsFixing
_originator
_usingEscrow
_localLTK
_remoteLTK
_sessionType
_escrowSecret
setHasCacheID:
hasCacheID
hasInfoData
infoData
_cacheID
_infoData
postNotificationName:object:
device
options
onqueue_enumerateRemoteObjectProxiesUsingBlock:
remoteObjectProxyWithErrorHandler:
onqueue_remoteObjectProxyForConnection:usingBlock:
onqueue_activate
onqueue_invalidate
setRemoteObjectInterface:
onqueue_connectionInvalidated:
setWithSet:
setActiveConnections:
retainArguments
invoke
exceptionWithName:reason:userInfo:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
remoteObjectProxyForConnection:usingBlock:
_xpcListener
_invalidateDone
_activeConnections
_lp_simplifiedDisplayString
loadWatchIDsToPairingRecords
setAutoUnlockDisabledDueToManagement:
handleRequiredStateDisabled
updateRangingKeysIfNeccesary
loadLocalLTK
updateRemoteLTKs
checkLocalLTK
allKeychainDevices
remoteLTKStorageFilePath
remoteLTKList
setLocalDeviceID:
appleAccountSignedIn:
appleAccountSignedOut:
deviceFirstUnlocked:
autoUnlockDisabledDueToManagement
removeAllRemoteLTKsOnSignOut
loadLocalUniqueIDIfNeeded
checkRemoteLTKs
updateSessionKeys
takeMobileKeybagAssertion
invalidateWaitingForUnlockTimer
cachedAKSSessionsEnabled
escrowSecretExistsForDevice:
createCacheForDeviceID:
cachedSessions
setEscrowAKSSession:
setEscrowFirstStepData:
setTokenAKSSession:
setTokenFirstStepData:
keyDataCache
escrowSecretForDevice:
sessionKeyForDeviceID:
initWithLength:
watchIDsMissingSessionKey
setWatchIDsMissingSessionKey:
ltkInfoForDeviceID:modern:
storeLongTermKey:forDeviceID:name:
generateLocalLTK
ltkKeyClass
disablePairingForAllKeyDevices
clearRemoteLTKs
t208Machine
isEqualToData:
ltkInfoForDeviceID:
setSignout:
remoteLTKEntryForDeviceID:
loadRemoteLTKsIfNeeded
keychainDevices:
modernSignedDevices
signedDevices
isSubsetOfSet:
removeRemoteLTKForDeviceID:
minusSet:
unionSet:
signLTKsForDeviceID:
remoteLTKs
longTermKeyForDevice:modern:
remoteLTKHashForDeviceID:modern:
signLTK:modernLTK:forDeviceID:
signLTK:ltkModDate:modernLTK:modernLTKModDate:deviceID:
keyClassForDeviceID:
modificationDataForDeviceID:modern:
addRemoteLTK:ltkHash:ltkModDate:modernLTK:modernLTKHash:modernLTKModeDate:deviceID:
baseModernSyncedDictionary
baseSyncedDictionary
deviceIsLocalDevice:
modernSyncedDictionaryForDevice:
syncedDictionaryForDevice:
initWithDictionary:
preferredRemoteLTKForDeviceID
fetchLTKsFromCompanionForDeviceID:needsLTK:remoteNeedsLTK:checkViewState:
ltksForRequest:
sendLTKResponseWithPayload:viewState:needsUnlock:currentlySyncing:
contextForStateRepair
setForce:
postFollowUpWithContext:error:
keychainNeedsSyncingForRequest:
restartWaitingForUnlockTimer
pendingReceiveForPeer:
pendingSendForPeer:
keybagAssertionTimer
releaseKeybagAssertion
setKeybagAssertionTimer:
waitingForUnlockTimer
setWaitingForUnlockTimer:
handleLTKRequest:
handleLTKResponse:
deviceEnabledAsKeyForAnyDevice
deviceEnabledAsKeyForAnyIDSDevice
deleteAllEscrowSecrets
deleteAllRangingKeys
clearAllAKSCaches
allPairedWatchDeviceIDs
deleteRemoteLongTermKeyForDeviceID:modern:tombstone:
removePairingRecordForWatchID:
saveRemoteLTKs
setRemoteLTKs:
writeToFile:options:error:
loadRemoteLTKs
fileExistsAtPath:isDirectory:
initWithContentsOfFile:options:error:
autoUnlockFolderPath
watchIDsToPairingRecords
saveWatchIDsToPairingRecords
watchIDsToPairingRecordsStorageFilePath
loadLegacyWatchIDToCompanionIDMapping
deleteLegacyWatchToCompanionIDs
watchIDToCompanionIDStorageFilePath
removeItemAtPath:error:
migrateLegacyCompanionIDs:
loadCompanionIDs
deleteLegacyCompanionIDs
companionIDStorageFilePath
baseLocalKeysDictionaryForDevice:type:
keychainDataForQuery:
storeKeychainItemWithAttributeDictionary:updateDictionary:addDictionary:
baseLocalKeysDictionary
storeLongTermKey:forDeviceID:name:modern:
baseRangingDictionary
cachedSessionKeys
setCachedSessionKeys:
deriveKeyFromSharedSecret:
baseRangingDictionaryForDevice:
removeDeviceIDMissingSessionKey:
baseDictionary
clearAllDeviceIDsMissingSessionKeys
handleManagementChanged:
reloadAKSCaches
serializedExchangeRequests
resetCachedSessionForDeviceID:
aksAuthSessionForDeviceID:originator:
addDeviceIDMissingSessionKey:
updateLocalLTKForSignout
allRemoteLTKData
fetchLTKsFromCompanion:
restartKeybagAssertionTimer
localDeviceEnabledAsKey
deleteEscrowSecretForAllDevices
removeCompanionIDForWatchID:
removePairingIDForWatchID:
migrateLegacyWatchIDToCompanionIDs
anyLongTermKeyForDeviceID:
longTermKeyIDForDeviceID:
setT208Machine:
setCachedSessions:
setWatchIDsToPairingRecords:
setPreferredRemoteLTKForDeviceID:
setRemoteLTKStorageFilePath:
setWatchIDsToPairingRecordsStorageFilePath:
setCompanionIDStorageFilePath:
setWatchIDToCompanionIDStorageFilePath:
_autoUnlockDisabledDueToManagement
_t208Machine
_localDeviceID
_keybagAssertionTimer
_waitingForUnlockTimer
_remoteLTKs
_cachedSessions
_cachedSessionKeys
_watchIDsToPairingRecords
_preferredRemoteLTKForDeviceID
_watchIDsMissingSessionKey
_remoteLTKStorageFilePath
_watchIDsToPairingRecordsStorageFilePath
_companionIDStorageFilePath
_watchIDToCompanionIDStorageFilePath
initWithDictRepresentation:
dictRepresentation
setKeyIdentifier:
setDateCreated:
setLastUsedCounter:
_validKey
_lastUsedCounter
_keyIdentifier
_dateCreated
_keyData
newEncryptionKey
prepareForNewEncryptionRequest
getTagWhileEncryptingBytesInPlace:counterValue:forAdvertisementWithVersion:
unwrappedDataRepresentationForKey:
saveEncryptionKeyDataRepresentation:
loadEncryptionKeyDataRepresentation
generateNewEncryptionKey
saveDecryptionKeyDataRepresentation:forDeviceIdentifier:
loadDecryptionKeyDataRepresentationForDeviceIdentifier:
loadWrappingKeyData
baseDictEncryptionKey
baseDictDecryptionKeyForDeviceIdentifier:
baseDict
baseDictWrappingKey
testWrappingKeychainItem
loadKeyDataRepresentationWithBaseDict:
saveKeyDataRepresentation:withBaseDict:
_deviceIdentifierToDecryptionKey
_encryptionKey
_wrappingKey
_shouldRefreshWrappingKey
setHasPasscodeEnabled:
hasPasscodeEnabled
passcodeEnabled
_passcodeEnabled
setAppLink:
getAppLinkWithURL:completionHandler:
appLink
targetApplicationProxy
_appLink
initializeStateCaptureBlock
shouldScanForCopyPaste
shouldScanForHandoff
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
stopScanningForType:
lostAllDevices
receivedAdvertisement:
isLocallyPaired
didLosePeer:
didLosePeerTimer:
foundDeviceWithDevice:
lostDeviceWithDevice:
scanForTypes:
activityPayloadFromDeviceUniqueID:forAdvertisementPayload:command:timeout:withCompletionHandler:
_scanTypes
_scannerEnabled
_isScanning
_stopScanLostDeviceTimer
_deviceIdentifierToDeviceRecord
_deviceIdentifierToLostDeviceTimers
readData:length:fromStream:
writeData:length:toStream:
openStreams
readIncomingChunk
sendOutgoingChunk:length:compressed:
processNetworkStatistics:
processCompressibilityStatistics
_compressible
_totalBytesSent
_totalNetworkDelay
_keepingUpWithNetwork
_numBlocksProcessed
_totalBytesProcessed
_numBlocksCompressed
_lastCompressionRatio
_totalCompressionTime
_totalCompressedOutput
_adjustmentQueue
dataWithContentsOfFile:options:error:
queueFileDataForAcceptance:originalFileName:outError:
loadAllPersistedTransfers
updatedTransfer:
removedTransfer:
transferIdentifierToHandler
transferIdentifierToTransfer
kvoObservingKeys
notifyObserversOfRemovedTransfer:
cleanUpTransfer:
transferURLForTransfer:
cleanUpURL:
initWithIdentifier:initialInformation:
updateWithInformation:
itemTypesForTransfer:
setItems:
determineHandlerForTransfer:
setHandler:forTransfer:
canAutoAccept
setDidAutoAccept:
setTransferState:forTransfer:shouldNotify:
transfer:actionTriggeredForAction:
failTransfer:withState:failureReason:
transferUserResponseUpdated:
notifyObserversOfUpdatedTransfer:
customDestinationURL
classroomDelegate
removeTransfer:shouldCleanup:
_remoteObjectProxyForConnection:usingBlock:
arrayByAddingObjectsFromArray:
setTransferState:forTransfer:shouldNotify:shouldCleanup:
handlerFailedForTransfer:
persistedTransfersBaseURL
initWithType:isFile:
incrementCount
setTransferIdentifierToTransfer:
setTransferIdentifierToHandler:
setKvoObservingKeys:
_classroomDelegate
_transferIdentifierToTransfer
_transferIdentifierToHandler
_kvoObservingKeys
setHasSignout:
hasSignout
signout
_signout
migrateOldKeysIfNeeded
migrateEscrowDataIfNeeded
saveLongTermKeys
deletePersistedLongTermKeys
loadLongTermKeys
longTermKeyStorageFilePath
writeToURL:options:error:
setResourceValue:forKey:error:
checkForBackupExclusion:
validateKeybagUUID
legacyLocalLongTermKey
legacyRemoteLongTermKey
unlockSessionAsOriginator:usingEscrow:escrowSecret:errorCode:
authSessionWithFlags:secret:errorCode:
stepWithAuthSession:data:authStep:errorCode:
deviceName
checkForLegacyEscrowData
legacyEscrowData
storeEscrowData:
deleteLegacyEscrowData
authSessionWithFlags:secret:
escrowSecretWithAuthSession:
confirmUnlockWithAuthSession:
escrowData
checkForEscrowData
deleteEscrowData
allKeychainItems
setLocalLongTermKey:
setRemoteLongTermKey:
keybagUUID
setKeybagUUID:
keyDeviceID
setKeyDeviceID:
setPairingStorePath:
setDeviceName:
_localLongTermKey
_remoteLongTermKey
_keybagUUID
_keyDeviceID
_pairingStorePath
_deviceName
setKeyRequestExchangeTime:
setTokenExchangeTime:
setSetupSucceeded:
setTimeIntervalSinceLastWatch:
setUpsell:
setSetupRetry:
setMacOldLTKSyncStatus:
setMacNewLTKSyncStatus:
calendarWithIdentifier:
autoupdatingCurrentLocale
setLocale:
components:fromDate:
year
month
hour
minute
second
timeZone
abbreviation
stringByRemovingCharactersFromSet:
setModelDescription:
unsignedIntegerValue
substringFromIndex:
expireTime
setExpireTime:
_expireTime
checkDevicePairingState
handleUILockStateChange
remoteDeviceLocked
unlockingState
handleConfigState
startLTKExchange
sendStartLTKTransfer
startUnlockIfNeeded
initiateRemoteUnlock
handleActiveDeviceUpdated
releaseKeyBagAssertion
setRemoteDeviceLocked:
disableUnlockPairingForSecurityManager:
sendStateRequest
notifyUnlockStateWithState:error:
invalidateStateTimer
stashTimerFired:
notifyStashStateWithError:
initiateStashBagCreation
invalidateStashTimer
setUnlockingState:
handleRemoteLockStateChanged:
handleLongTermKeyRequest:
handleClassALongTermKeyRequest:
handleSetupRequest:
handleStashKeyExchangeResponse:
handleStashConfirmation:
handleUnlockStateResponse:
handleResetState:
sendLongTermKeyResponse:requestID:
updateLongTermKey:
sendClassALongTermKeyResponse:sessionID:errorCode:
handleEscrowSessionRequest:withUpdatedLongTermKey:
sendSetupSessionCreatedWithLocalKey:stepData:sessionID:errorCode:
sendSetupCreateEscrowRecordWithSessionID:stepData:errorCode:
sendSessionAuthenticationToken:sessionID:
sendStashToken:sessionID:
syncUnlockEnabled:
initWithUnlockEnabled:remotePasscodeEnabled:
restartLongTermKeyTimer:
restartStashTimer
restartStateTimer
sendSessionKeyExchangeRequest:usedEscrow:sessionID:
sendStashKeyRequest:sessionID:
deviceDidEnterConfigurationState:
newDeviceBecameActive:
useEscrowRecord
setUseEscrowRecord:
stashTimer
setStashTimer:
ltkWaitingForUnlock
setLtkWaitingForUnlock:
outstandingStartLTK
setOutstandingStartLTK:
unlockingForKeybagUnlock
setUnlockingForKeybagUnlock:
stateTimer
setStateTimer:
sessionRecord
setSessionRecord:
stashHandler
setStashHandler:
stateHandler
setStateHandler:
_useEscrowRecord
_remoteDeviceLocked
_ltkWaitingForUnlock
_outstandingStartLTK
_unlockingForKeybagUnlock
_unlockingState
_stashTimer
_stateTimer
_sessionRecord
_stashHandler
_stateHandler
setHasUseToken:
hasUseToken
setHasAuthPrompt:
hasAuthPrompt
setHasSupportsConfirmationACK:
_authPrompt
_useToken
escrowFirstStepData
tokenFirstStepData
setKeyDataCache:
_escrowAKSSession
_tokenAKSSession
_escrowFirstStepData
_tokenFirstStepData
_keyDataCache
hasCompanionDeviceModel
setHasKeyRequestExchangeTime:
hasKeyRequestExchangeTime
setHasTokenExchangeTime:
hasTokenExchangeTime
setHasKeyDeviceLocked:
hasKeyDeviceLocked
setHasSetupSucceeded:
hasSetupSucceeded
setHasWatchExistedInUnlockList:
hasWatchExistedInUnlockList
setHasTimeIntervalSinceLastWatch:
hasTimeIntervalSinceLastWatch
setHasUpsell:
hasUpsell
setHasResponseTimeout:
hasResponseTimeout
setHasResponseTimeoutFromServer:
hasResponseTimeoutFromServer
setHasMessageTimeout:
hasMessageTimeout
setHasMessageTimeoutFromServer:
hasMessageTimeoutFromServer
setHasSetupRetry:
hasSetupRetry
setHasMacOldLTKSyncStatus:
hasMacOldLTKSyncStatus
setHasMacNewLTKSyncStatus:
hasMacNewLTKSyncStatus
setHasReceivedSetupACK:
hasReceivedSetupACK
setHasReceivedTokenACK:
hasReceivedTokenACK
keyRequestExchangeTime
tokenExchangeTime
setupSucceeded
timeIntervalSinceLastWatch
upsell
setupRetry
macOldLTKSyncStatus
macNewLTKSyncStatus
_timeIntervalSinceLastWatch
_keyRequestExchangeTime
_macNewLTKSyncStatus
_macOldLTKSyncStatus
_tokenExchangeTime
_setupRetry
_setupSucceeded
_upsell
setShouldUpdateUserResponse:
triggerAppStoreSearch
anyObject
openURL:
openLinks
_prefsChanged
_ensurePushStarted
_ensureVerifyTimerStarted
_ensurePushStopped
_ensureVerifyTimerStopped
connection:didReceiveIncomingMessage:
_handleVerifyTimerFired
_addIdentityForAppleID:withCompletion:
_requestIdentityForAppleID:withCompletion:
copyIdentity
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
requestTokenForTopic:identifier:
shutdown
_verifyState
_updateCertificateStatus:forAppleID:
_requestInfoForAppleID:completion:
_update
serialNumber
_handleInfoResponse:forAppleID:certificateSerialNumber:validationRecordID:withError:completion:
_handleReceivedIdentity:forAppleID:withError:completion:
_addAppleID:withCompletion:
_detailedDescription
_copyIdentityForAppleID:
_performServerTaskWithInfo:completion:
_performOtherTaskWithInfo:completion:
_handleAppleIDChangedNotification
topic
_updateMyInfo
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
detailedDescription
myAccount
requestWithInfo:completion:
_agentEnabled
_dbManager
_identityRequest
_infoRequest
_pushConnection
_pushEnvironment
_task
_testIdentityRequest
_updatePush
_updateVerifyTimer
_verifyTimer
_btPipeEnsureStarted
_activityMonitorLastUserEventDelta
pairedPeer
idsIsSignedIn
_idsAppleTVCount
_idsContinuityDeviceCount
_idsHomePodCount
idsDevicesAppendDescription:
_bleAddressMonitorEnsureStarted
_identificationHandleAppleIDChanged:
_activityMonitorWatchWristStateChanged:
_activityMonitorScreenStateChanged:
_activityMonitorUILockStatusChanged:
_idsEnsureStarted
_activityMonitorEnsureStopped
_identificationEnsureStopped
_bleAddressMonitorEnsureStopped
_bleNearbyActionAdvertiserEnsureStopped
_bleNearbyActionScannerEnsureStopped
_bleNearbyInfoAdvertiserEnsureStopped
_bleNearbyInfoScannerEnsureStopped
_bleProximityPairingScannerEnsureStopped
_btPipeEnsureStopped
_idsEnsureStopped
_mobileAssetEnsureStopped
initWithBytes:length:
bleProximityRSSIEstimatorInfo
setRSSIEstimatorInfo:
_activityMonitorEnsureStarted
_identificationEnsureStarted
_bleNearbyActionAdvertiserShouldAdvertise
_bleNearbyActionAdvertiserEnsureStarted
_bleNearbyActionScannerShouldScan
_bleNearbyActionScannerEnsureStarted
_bleNearbyInfoAdvertiserShouldAdvertise
_bleNearbyInfoAdvertiserEnsureStarted
_bleNearbyInfoScannerEnsureStarted
_bleProximityPairingScannerShouldScan
_bleProximityPairingScannerEnsureStarted
_mobileAssetEnsureStarted
_activityMonitorUpdate
_bleNearbyInfoAdvertiserUpdate
_activityMonitorCarPlayStatusChanged:
_activityMonitorMultipleUsersLoggedInChanged:
_activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:
_activityMonitorUpdateUserActive:
advertisingAddress
deviceActionType
advertiseRate
deviceClassCode
deviceColorCode
deviceModelCode
needsKeyboard
needsSetup
requestSSID
_bleUpdateAuthTagIfNeeded
setAdvertiseRate:
_idsBluetoothDeviceIDsForLEPipe
setLePipeDevices:
setPayloadFields:
_bleUpdateScanner:typeFlag:
_deviceDiscoveryBLEDeviceFound:type:
_deviceDiscoveryBLEDeviceLost:type:
setDeviceLostHandler:
_deviceDiscoveryBLEDeviceChanged:type:changes:
_deviceDiscoveryBLEScanStateChanged:type:
setScanStateChangedHandler:
setRssiLog:
lePipeDevices
autoUnlockEnabled
autoUnlockWatch
watchLocked
sendData:completion:
peerDevice
_unlockReceivedFrameData:peer:device:
_bleNearbyInfoReceivedFrameType:src:end:cnx:
_setupHandleCreateSession:data:
_setupHandleSessionCreated:data:
_setupHandleSessionEncryptedFrame:type:cnx:
eventMessageHandler
setBodyData:
serviceReceivedFrameType:serviceType:data:peer:
sessionReceivedFrameType:serviceType:data:peer:
setHeaderFields:
setPeerDevice:
requestMessageHandler
responseMessageInternalHandler
addClient:
initWithDevice:acceptor:
activateDirect
removeClient:
_idsBluetoothDeviceIDsForSharing
_btPipeHandleFrameType:data:
setFrameHandler:
sharedPairingDaemon
copyIdentityWithOptions:error:
altIRK
discoveryFlags
deviceFilter
changeFlags
rssiThreshold
scanCache
scanRate
scanRateOverride
payloadFilterData
setPayloadFilterData:mask:
setRssiThreshold:
setScanCache:
performUpdate:
bleProximityInfoForActionType:device:
proximityEstimatorWithProximityInfo:
bleProximityInfoForType:device:
bleProximityInfoForType:device:allInfo:
bleProximityInfo
decimalDigitCharacterSet
rangeOfCharacterFromSet:
bleProximityRSSIThreshold:
setEventType:
setActivityLevel:
setOtherDevices:
setBestIsMe:
setSkipScanPhoneCall:
setSkipScanVeryActive:
_idsBluetoothDeviceIDsForiMessage
_idsBluetoothDeviceIDsForSMSRelay
_deviceDiscoveryRequestStart:
idsBluetoothDeviceIDsForSharing
scanState
scanStateChangedHandler
overrideScreenOff
deviceFoundHandler
fastScanMode
_deviceDiscoveryFastScanStart:device:reason:
_identificationHandleDiscoveryStop
setFastScanMode:
_deviceDiscoveryFastScanStop:reset:reason:
setScanRateOverride:
updateWithBLEDevice:
_identificationHandleDeviceFound:flags:
_deviceDiscoveryFastScanEvaluate:device:
_identificationHandleDeviceLost:flags:
deviceLostHandler
deviceChangedHandler
_identificationReIdentify
setPairedPeerAddedHandler:
setPairedPeerRemovedHandler:
startMonitoringWithOptions:
getPairedPeersWithOptions:completion:
setBtAddr:
_identificationIdentifyDevice:
updateWithPairedPeer:
contactIdentifier
setContactIdentifier:
setRequestSSID:
_identificationMaintenanceTimer
setLastUpdateTicks:
lastUpdateTicks
btAddr
setPairedPeer:
removeDelegate:
_idsBluetoothDeviceIDsForSharingLocked
supportsSMSRelay
supportsMMSRelay
isConnected
compare:options:
_mobileAssetCheck:
initWithAssetType:
setQueriesLocalAssetInformationOnly:
_mobileAssetProcessQueryResults:
startQuery:
attributes
_mobileAssetDownloadAsset:
_mobileAssetReadAsset:
setProgressHandler:
beginDownloadWithOptions:
localURL
_mobileAssetReadProximityInfo:
purge:
serviceUUID
setDeviceClassCode:
setDeviceColorCode:
setDeviceModelCode:
receivedFramePeerHandler
_sendMessage:frameType:service:session:
initWithRequestMessage:
_setupSendCreateSession:cnx:
receivedFrameHandler
headerFields
bodyData
_setupSendData:sessionIdentifier:cnx:clientSession:
deviceIDs
setPeerIdentifier:
setSessionCreated:
setReadKey:
setReadNonce:
setWriteKey:
setWriteNonce:
dhSecretKey
sendDataQueue
readKey
readNonce
_setupHandleSessionMessageType:src:end:cnx:session:
clientSession
setClientSession:
setDhSecretKey:
sessionCreated
setSendDataQueue:
writeKey
writeNonce
_startUnlockBLEConnectionWithDevice:encrypted:
setBleEncrypted:
setLatencyCritical:
idsBluetoothDeviceIDsForLEPipe
setLePipeCapable:
_stopUnlockBLEConnectionWithDevice:
_sendUnlockData:toBLEDevice:direct:completion:
sendDataDirect:completion:
_testPipePing
peripheralManagerDidUpdateState:
peripheralManager:willRestoreState:
peripheralManagerDidStartAdvertising:error:
peripheralManager:didAddService:error:
peripheralManager:central:didSubscribeToCharacteristic:
peripheralManager:central:didUnsubscribeFromCharacteristic:
peripheralManager:didReceiveReadRequest:
peripheralManager:didReceiveWriteRequests:
peripheralManagerIsReadyToUpdateSubscribers:
peripheralManager:didPublishL2CAPChannel:error:
peripheralManager:didUnpublishL2CAPChannel:error:
peripheralManager:didOpenL2CAPChannel:error:
update
activityStateWithCompletion:
_bleNearbyInfoReceivedData:cnx:peer:
bleNearbyInfoStartConnectionToDevice:owner:connected:
bleNearbyInfoStopConnectionToDevice:owner:
bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:
bleProximityEstimatorForActionType:device:
bleProximityRSSIThresholdForType:device:
coordinatedAlertRequestStart:
coordinatedAlertRequestFinish:
coordinatedAlertRequestCancel:
deviceDiscoveryRequestStart:
deviceDiscoveryRequestStop:
deviceDiscoveryFastScanTrigger:reason:
deviceDiscoveryFastScanCancel:reason:
diagnosticBLEModeStart:
diagnosticBLEModeStop:
diagnosticMockChanged:
diagnosticMockFound:
diagnosticMockLost:
idsBluetoothDeviceIDsForAppleTVs
idsDeviceForBluetoothDeviceID:
_idsHasActiveWatch
serviceStart:
serviceStop:
serviceSendEvent:service:
serviceSendRequest:service:
serviceSendResponse:service:
sessionStart:
sessionStop:
sessionSendEvent:session:
sessionSendRequest:session:
sessionSendResponse:session:
sendUnlockDataDirect:toBLEDevice:completion:
unlockStartTestClientWithDevice:
unlockStopTestClient
unlockStartTestServer
unlockStopTestServer
testPipePing
autoUnlockActive
_activityCarPlayRegistered
_activityMultipleUsersRegistered
_activityLevel
_activityMonitorStarted
_activityPollSeconds
_activityRecentSeconds
_activityScreenOn
_activityTimer
_activityUIUnlocked
_activityUserActive
_bleAdvertisingAddress
_bleAuthTag
_bleAuthTagOverride
_bleConnections
_bleDiagnosticModeClients
_bleNearbyActionAdvertiser
_bleNearbyActionAdvertiseActive
_bleNearbyActionAdvertiseDisabled
_bleNearbyActionAdvertiseLingerTimer
_bleNearbyActionDevices
_bleNearbyActionRSSILog
_bleNearbyActionScanAlways
_bleNearbyActionScanNever
_bleNearbyActionScanner
_bleNearbyInfoAdvertiseAlways
_bleNearbyInfoAdvertiseDisabled
_bleNearbyInfoAdvertiseLingerSecs
_bleNearbyInfoAdvertiser
_bleNearbyInfoAdvertised
_bleNearbyInfoAdvertiseLingerTimer
_bleNearbyInfoDevices
_bleNearbyInfoRSSILog
_bleNearbyInfoScanner
_blePeripheralManager
_bleProximityEnabled
_bleProximityInfo
_bleProximityInfoOverride
_bleProximityPairingScanner
_bleProximityRSSILog
_btPipeEnabled
_btPipeForced
_btPipe
_caEnabled
_caForce
_caMessageNoScans
_caMessageScans
_caPhoneCalls
_caRequests
_caScanIfVeryActive
_caSingleDevice
_ddFastScanLastEndTicks
_ddFastScanTimer
_ddNearbyActionDevices
_ddNearbyActionEnabled
_ddNearbyActionScreenOff
_ddNearbyInfoDevices
_ddNearbyInfoEnabled
_ddProximityPairingDevices
_ddProximityPairingEnabled
_ddProximityPairingScreenOff
_ddRequests
_idDevices
_idEnabled
_idMaintenanceTimer
_idPairedPeers
_idPairingMonitor
_idsAppleTVCountCache
_idsBluetoothDevicesArray
_idsBluetoothDevicesSet
_idsDeviceBTDictionary
_idsContinuityDeviceCountCache
_idsHasActiveWatchCache
_idsHomePodCountCache
_idsIsSignedInCache
_mobileAssetEnabled
_mobileAssetInstalledNotifyToken
_mobileAssetLastPurgeTime
_mobileAssetLastRemoteTime
_mobileAssetLatestVersion
_mobileAssetStarted
_mobileAssetUpdatedNotifyToken
_wpsContactHashesCached
_wpsContactHashesEnabled
_remoteAppServiceUUID
_services
_sessions
_setupSessions
_statusMonitor
_systemService
_unlockAdvertiseAlways
_unlockAdvertiseAggressive
_unlockAdvertiseEnabled
_unlockAdvertiseBackground
_unlockAdvertiseWatch
_unlockAdvertiseWatchLocked
_unlockTestClientTimer
_autoUnlockActive
_btAddr
_discoveryFlags
_lastUpdateTicks
_pairedPeer
peerIdentifier
_sessionCreated
_clientSession
_dhSecretKey
_readKey
_readNonce
_writeKey
_writeNonce
_peerIdentifier
_sendDataQueue
_ensureStopped
_ensureStarted
_screenStateChanged:
_uiLockStatusChanged:
_deviceFound:
_deviceLost:
_deviceChanged:
_fastScanStop:reset:
counterpartIdentifier
_uiShowing
rssiFloor
_fastScanStart:
_supportedDevice:
_startPairingUI:autoStart:repair:
paired
_startStatusUI:
bluetoothAddress
batteryInfo
batteryState
batteryLevel
batteryType
initWithServiceName:viewControllerClassName:
setUserInfo:
newHandleWithDefinition:configurationContext:
activateWithContext:
setSessionUUID:
setSmoothedRSSI:
_testDeviceWithParams:
setBatteryLevel:
setBatteryState:
setBatteryType:
setAdvertisementFields:
setBluetoothAddress:
setBatteryInfo:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
bluetoothUserInteractionStart:
bluetoothUserInteractionStop:
retriggerProximityPairing:
testPairingUI:
testStatusUI:
_autoPairEnabled
_autoPairRSSI
_autoStatusEnabled
_autoStatusUnpaired
_autoStatusRSSI
_bluetoothUserInteractionClients
_deviceDiscovery
_enabled
_exitRSSI
_fastScanAlways
_fastScanLastEndTicks
_fastScanPair
_fastScanStatusMine
_fastScanStatusOthers
_fastScanTimer
_pairingAlertHandle
_phoneOnly
_scanAlways
_statusAlertHandle
_triggeredDevices
_clientDeviceLockStatusChanged:
_callStatusDidChange:
_clientEnsureStopped
_serverEnsureStopped
_crServerEnsureStopped
_crClientEnsureStopped
_crClientEnsureStarted
_crServerEnsureStarted
_serverEnsureStarted
_clientEnsureStarted
setDeviceIDs:
sendEvent:
setNeedsSetup:
setDeviceActionType:
_crServerHandleSessionStarted:
setSessionStartedHandler:
_crServerHandleSessionEnded:error:
setSessionEndedHandler:
_crServerHandleReceivedObject:session:flags:
setReceivedObjectHandler:
_crCreateAggressiveTimer
peer
_clientIDSChanged:
_crClientDeviceFound:
_crClientDeviceLost:
systemPairState
_serverHandleEvent:
setEventMessageHandler:
_serverHandleRequest:
setRequestMessageHandler:
_serverSendTextSessionDidBegin:
clearText
commitText
deleteTextBackward
insertText:
setText:
_serverRespondInfo:
sendResponse:
_hidSendKeyboardEventUsagePage:usageCode:
rangeOfComposedCharacterSequenceAtIndex:
_hidSendText:
setAgent:
_clientDeviceFound:
_clientDeviceLost:
withdrawBulletinWithPublisherBulletinID:
_clientSetupBulletinsIfNeeded:
invalidateBulletins
removeDataProviderWithSectionID:
_clientUpdateCoalesceTimerForDevice:identifier:
smoothedRSSI
_clientPostKeyboardNotificationIfNeeded:
_clientRemoveKeyboardNotification:
_clientUpdateKeyboardNotification:info:
sectionID
getSectionInfoForSectionIDs:withCompletion:
initWithBundleIDs:states:
applicationInfoForApplication:completion:
_clientPostKeyboardNotification:silent:
_clientScheduleSilentNotification:
actionWithIdentifier:title:
setShouldDismissBulletin:
actionWithLaunchBundleID:
setCategoryID:
setClearable:
setDefaultAction:
setDismissAction:
setPublisherBulletinID:
setRecordID:
setSectionSubtype:
initWithToneAlert:
setSound:
setSubtitle:
setTurnsOnDisplay:
setContextValue:forKey:
addBulletin:interrupt:
recordID
setHandler:
prompt
modifyBulletin:
maximumCount
sinceDate
publicationDate
actionID
bulletinPublisherID
allowsNotifications
setDisabled:
bundleWithIdentifier:
defaultSubtypeParameters
setAllowsAddingToLockScreenWhenUnlocked:
setAllowsAutomaticRemovalFromLockScreen:
setFullUnlockActionLabel:
setTopic:
setUnlockActionLabel:
testKeyboardPost
performSelector:withObject:afterDelay:
testKeyboardRemove
testKeyboardUpdate
setPreventNotifications:
remoteTextSessionDidBegin:attributes:initialText:
remoteTextSessionDidEnd:
remoteTextSessionDidChange:text:
remoteTextSessionDidChangeDeferred
clientTextSessionDidBegin:device:
testKeyboardPostThenUpdate
testKeyboardPostWithDelay
testKeyboardRemoveWithDelay
testKeyboardUpdateWithDelay
preventNotifications
_aggressiveTimer
_appStateMonitor
_bbCnx
_bbProxy
_bbRequests
_bbSectionIcon
_bbSectionInfo
_bbSectionParameters
_bulletinTimers
_bulletinsDisabled
_changeCoalescer
_clientEnabled
_cloudPairedOnly
_controlService
_crAggressiveTimer
_crAnsweredCall
_crClientEnabled
_crDeviceDiscovery
_crCallDevice
_crEndedCall
_crShowedEndCallBulletin
_crShowedStartCallBulletin
_crServerEnabled
_crService
_crSessions
_currentAttrs
_currentSessionID
_currentText
_pendingText
_sessionDeviceIDs
_hidClient
_repostingDevice
_repostNeededOnUnlock
_rssiThreshold
_serverEnabled
_preventNotifications
timeIntervalSinceReferenceDate
MIMEType
JSONObjectWithData:options:error:
_responseInfo
_statusCode
_ensureClientStopped
_ensureServerStopped
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:
_openSetupURL:
openSensitiveURL:withOptions:error:
_uiStartSetupiOS:autoStart:
_uiStartSetupB238:extraInfo:
_uiStartWithDevice:viewControllerName:label:unlessApps:extraInfo:
_uiStartHomeKitDeviceDetectedWithURL:
_ensureClientStarted
_ensureServerStarted
_repairEnsuredStarted
_repairEnsuredStopped
_appleAccountSignIn:
_scanTimerFired
setPurpose:
_watchFound:
_resetTriggers
_postDeviceSetupNotificationForDevice:present:
_uiStopIfNeededWithDevice:
setupProximityEstimator
setSetupProximityEstimator:
updateWithSFBLEDevice:
fastScanCancel:
isProximitySetupToNewDeviceAllowed
_uiStartPair:extraInfo:
_uiStartSetupAppleTV:extraInfo:
_launchAppWithMachServiceName:
_uiStartRepair:
_uiStartSetupWHA:
isWiFiPasswordSharingAllowed
_shouldOfferPassword:
_uiStartWiFiPasswordSharing:
estimatedRSSI
postNotificationName:object:userInfo:deliverImmediately:
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:extraInfo:
foundTicks
osVersion
_endpoint
setXpcEndpoint:
_watchFastScanStop
_watchFastScanStartIfAllowed:
_uiStartSetupWatch:
_pinPairHandleRequest:
setSfService:
_pinPairHandleShowPIN:
setShowPINHandler:
_pinPairHandleHidePIN
setHidePINHandler:
handleServerRequest:
_repairProblemFlagsChanged
setStatusHandler:
reset
setProblemFlags:
_repairHandleCompletion
nfcTagReaderUIActivateWithEndpoint:params:completion:
openSetupURL:
reenableProxCardType:
retriggerProximitySetup:
setupDevice:homeIdentifier:completion:
showDevicePickerWithInfo:completion:
triggerHomeKitDeviceDetectedWithURL:completion:
_uiStartForMacWithDevice:label:extraInfo:
_pwsHandleUserResponse:device:info:
_pwsHandleProgressEvent:info:
testHomeKitDeviceDetected:
testNFCUI:
testPairUI:
testPINShow:
testPINHide
testRepairUI:
testSetupUIAppleTV:
testSetupUIB238:
testSetupUIiOS:
testSetupUIPasswordSharing:
testSetupUIWatch:
testSetupUIWHA:
_bleAuthTagFilter
_pinPairService
_pinPairSession
_pinPairUUID
_profilesNotifyToken
_pwsAutoGrantingEnabled
_pwsGrantingEnabled
_remoteAlertHandle
_scanEligible
_scanSeconds
_setupURL
_shouldScan
_triggeredUIAppleTVPair
_triggeredUIAppleTVSetup
_exposeB238
_triggeredUIB238Setup
_triggeredUIiOSSetup
_triggeredUIRepair
_triggeredUIWatchSetup
_triggeredUIWHASetup
_watchFastScanLastEndTicks
_watchFastScanTimer
_watchSetupDevices
_watchMigrationEnabled
_watchMigrationLastTicks
_watchSetupEnabled
_watchSetupScanner
_problemFlags
_problemNotifyToken
_repairEnabled
_repairService
_wifiHealthMonitor
_wifiBad
supportsContentExtensions
_stateDump
initWithServer:xpcConnection:
accountForAppleID:withCompletion:
appleIDListWithCompletion:
myAccountWithCompletion:
statusInfoWithCompletion:
contactIDForEmailHash:phoneHash:completion:
displayNameForEmailHash:phoneHash:completion:
displayStringForContactIdentifier:deviceIdentifier:completion:
activateAssertionWithIdentifier:
appleIDInfoWithCompletion:
openSetupURL:completion:
preventExitForLocaleReason:
reenableProxCardType:completion:
wifiPasswordSharingAvailabilityWithCompletion:
coordinatedAlertsRequestStart:completion:
coordinatedAlertsRequestFinish
deviceDiscoveryActivate:completion:
deviceDiscoveryUpdate:
deviceDiscoveryFastScanTrigger:
deviceDiscoveryFastScanCancel:
bluetoothUserInteraction
diagnosticBLEModeWithCompletion:
diagnosticControl:completion:
diagnosticLogControl:completion:
diagnosticMock:device:completion:
diagnosticMockStart:
diagnosticMockStop:
diagnosticShow:completion:
diagnosticUnlockTestClientWithDevice:
diagnosticUnlockTestServer
remoteInteractionSessionActivate:completion:
remoteInteractionSessionClearText
remoteInteractionSessionCommitText
remoteInteractionSessionDeleteTextBackward
remoteInteractionSessionInsertText:
remoteInteractionSessionSetText:
serviceReceivedTLSData:type:peer:
serviceActivate:completion:
serviceActivateTLSWithCompletion:
serviceUpdate:
servicePairTLSWithPeer:completion:
serviceSendEvent:
serviceSendFrameType:data:peer:
serviceSendRequest:
serviceSendResponse:
serviceSendTLSEncryptedObject:toPeer:
sessionActivate:completion:
sessionReceivedTLSData:type:
sessionSendEvent:
sessionSendFrameType:data:
sessionSendRequest:
sessionSendResponse:
sessionSendTLSEncryptedObject:
pairTLSClient:completion:
userNotificationPresent:
_connectionInvalidated:
deviceDiscoveryFoundDevice:
deviceDiscoveryLostDevice:
deviceDiscoveryDeviceChanged:changes:
deviceDiscoveryScanStateChanged:
remoteInteractionSessionTextSessionDidBegin:
remoteInteractionSessionTextSessionDidEnd:
remoteInteractionSessionTextSessionDidChange:
serviceError:
servicePeerDisconnected:error:
serviceReceivedEvent:
serviceReceivedFrameType:data:peer:
serviceReceivedRequest:
serviceReceivedResponse:
sessionBluetoothStateChanged:
sessionError:
sessionReceivedEvent:
sessionReceivedFrameType:data:
sessionReceivedRequest:
sessionReceivedResponse:
userNotificationError:
userNotificationResponse:
userNotificationTextResponse:
connectionInvalidated
_appleIDAgent
_assertions
_nearbyAgent
_prefNotifyToken
_riAgent
_ppAgent
_setupAgent
_xpcConnections
_invalidateAssertions
_entitled:state:label:
countForObject:
remoteObjectProxy
setTextSessionDidBegin:
setTextSessionDidEnd:
setTextSessionDidChange:
_entitledService:state:
setPeerDisconnectedHandler:
setReceivedFramePeerHandler:
setResponseMessageInternalHandler:
setSendFramePeerHandler:
activateTLSWithIdentity:recordData:completion:
updateWithService:
tlsReceivedData:type:peer:
sendTLSEncryptedObject:toPeer:
pairTLSWithPeer:completion:
setBluetoothStateChangedHandler:
setReceivedFrameHandler:
setSendFrameHandler:
pairTLSReceivedData:type:
sendTLSEncryptedObject:
pairTLSWithIdentity:asClient:completion:
_bluetoothUserInteraction
_caRequest
_ddRequest
_diagnosticBLEModeStarted
_entitledBluetoothUserInteraction
_entitledClient
_entitledCoordinatedAlerts
_entitledDeviceDiscovery
_entitledDiagnostics
_entitledRemoteInteractionSession
_entitledService
_entitledSession
_notification
_preventExitForLocaleReason
_remoteTextSessionID
_riSession
_unlockTestClientStarted
_xpcCnx
SDAirDropHandlerMapsLinks
SDAirDropSession
SDAirDropClientDelegate
NSObject
SDUnlockMotionDetector
SDUnlockReset
NSCopying
SDAirDropHandlerAppStoreLinks
Unlock_Additions
SDUnlockXPCSession
SFUnlockProtocol
SDAutoUnlockSessionManagerObserver
SDCompanionCommon
SDStreamManager
NSNetServiceDelegate
SDCompanionStreamDelegate
SDAirDropHandlerFindMyFriendsLinks
SDAirDropHandlerNotes
SDAutoUnlockWiFiManager
CLLocationManagerDelegate
SDUnlockInvalidVersion
SDAppleIDDatabaseManager
SDHotspotRequestRecord
SDAirDropHandlerNewsLinks
SDUnlockSetupSessionCreated
SDAppleIDIdentityRequest
SDAutoUnlockEscrowSecretInfo
SDAirDropHandlerContacts
SDUnlockDisable
SDDeviceAssetMonitor
SDServiceManager
SFCompanionServiceManagerProtocol
SDCompanionPublisherProtocol
SDStreamHandler
NSStreamDelegate
SDActivityController
IDSServiceDelegate
SDAutoUnlockLTKRequest
SDAutoUnlockWatchInfo
SDAutoUnlockTransport
SDAirDropHandleriCloudDrive
SDAirDropHandlerVoiceMemos
SDConnectionManager
SFCompanionXPCManagerProtocol
SDUnlockXPCSesssionDelegate
SDActivityAdvertiser
IDSContinuityDelegate
SFActivityAdvertiserProtocol
SDUnlockSessionKeyExchangeResponse
SDAutoFSBrowser
SDAirDropHandlerPhoneLinks
SDAutoUnlockProxySession
SDAirDropReceiveManager
SDAirDropListenerDelegate
SDNetworkOperationDelegate
SDAirDropAlertManagerDelegate
SDBonjourBrowser
SDAirDropIconCacherDelegate
SDUnlockLongTermKeyRequest
SDUnlockWakeGestureRecord
SDUnlockLockManager
SDUnlockIDSControllerDelegate
SDAutoUnlockSessionConfirmationACK
SDXPCSession
NSXPCListenerDelegate
SDConnectionManagerDelegate
SDAirDropListener
SDUnlockSetupCreateSecret
SDAirDropPublisher
SDBonjourResolver
SDAutoUnlockPairingKeySession
SDConnectedBrowser
SDDomainBrowser
NSNetServiceBrowserDelegate
SDAirDropHandleriBooksLinks
SDAirDropHandlerCalendarEvents
SDAirDropFileZipper
SDUnlockIDSController
SDAirDropHandleriTunesULinks
SDAirDropHandlerVoiceMails
SDAirDropFakeTransfer
SDUnlockLockStateUpdated
SDCompanionStream
SDStreamHandlerDelegate
SDAirDropIconCacher
SDAutoUnlockKeySession
SDAutoUnlockSessionManager
SDAutoUnlockTransportClient
SDAutoUnlockSessionDelegate
CFUserNotificationHelper
SDClassroomBrowser
CRKShareTargetBrowserDelegate
SDAirDropHandlerWalletItems
SDAutoUnlockRangingPeer
SDAutoUnlockWiFiRequest
SDManagedBrowser
SDAutoUnlockKeyDataCache
SDUnlockSessionManager
SDAirDropHandlerFailed
SDAirDropHandleriWorkLinks
SDAirDropHandlerGenericFiles
SDActivityRequestRecord
SDActivityEncryptionKeyRequestRecord
SDActivityPayloadRequestRecord
SDActivityPayloadReplyRecord
SDNetworkBrowser
SDNodeBrowserDelegate
SDNetworkEjecter
SDUnlockStashKeyExchangeResponse
Sharing_Additions
SDAutoUnlockNotificationsManager
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
SDUnlockSetupRequest
SDUnlockStashKeyExchangeRequest
SDAirDropHandlerKeynoteLiveLinks
SDAutoUnlockStartAdvertising
SDNetworkOperation
SDAirDropServerDelegate
SDAirDropConnectionDelegate
SDAirDropSessionDelegate
SDAirDropControllerDelegate
SDAirDropStatusDelegate
SDAirDropInformationDelegate
SDNetworkResolverDelegate
SDNetworkEjecterDelegate
SDActivityDeviceRecord
SDNetworkResolver
SDBonjourResolverDelegate
SDAirDropHandlerIPA
SDNodeBrowser
SDSharePointBrowserDelegate
SDRemoteDisc
SDServerBrowser
SDBonjourBrowserDelegate
SDWindowsBrowserDelegate
SDAirDropHandlerSharediCloudDocumentsLinks
SDAutoUnlockDeviceFirstUnlocked
TXTQuery
SDSharePointBrowser
SDRemoteDiscDelegate
SDAutoUnlockDecryptionFailed
AWDSharingSheetActivityType
SDAppleIDServerTask
SDAirDropHandleriTunesStoreLinks
SDAutoUnlockWiFiAWDLInfo
AWDSharingAutoUnlockAttempt
SharingDaemon
SDNetworkBrowserDelegate
SDUnlockLongTermKeyResponse
SDAirDropController
SDAutoUnlockPairingLockSession
SDAutoUnlockAuthSession
SDAutoUnlockProxyTrigger
SDAutoUnlockAuthSessionRequest
SDAutoUnlockSessionWrapper
SDAppleIDMutableURLRequest
SDStatusMonitor
MCProfileConnectionObserver
SDAirDropHandlerPhotos
SDUnlockStashConfirmation
SDAItemSource
UIActivityItemSource
UIActivityItemSourceAttachment
SDWindowsBrowser
Private
Window
SDNearbyIDSAgent
SDAirDropHandlerPlaygroundItems
SDASharedItemsFactory
SDUnlockSessionAuthToken
SDWorkgroupBrowser
SDAutoUnlockPairingSession
SDUnlockStartLTKTransfer
SDAirDropClient
SDAirDropFileZipperDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
SDAutoUnlockLTKResponse
SDAirDropPeerMetric
SDAirDropConnection
SDActivityPayloadManager
SDAirDropHandleriLifeLinks
SDAirDropHandlerPodcastsLinks
SDAutoUnlockLockSession
B!D+
SDAirDropHandler
SDUnlockSessionConfirmation
SDAirDropInformation
SDAutoUnlockSuggestionManager
SDAutoUnlockNotificationsObserver
SDUnlockStashToken
SDUnlockSessionKeyExchangeRequest
SDAutoUnlockKeyDeviceLocked
SDUnlockStateRequest
SDAirDropHandlerFailedMixedTypes
SDAirDropClassroomTransferManagerProtocol
SDXPCDaemonProtocol
SFAirDropClassroomTransferManagerProtocol
SFAirDropClassroomTransferDelegate
SDAirDropClassroomTransferManager
SDUnlockSetupCreateRecord
SDAirDropServer
SDAirDropPublisherDelegate
SDAutoUnlockAKSSession
SDAutoUnlockAWDLInfoCache
SDAirDropStatus
SDAirDropHandlerPDFs
Debug
SDXPCDaemon
NSXPCConnectionDelegate
SDAirDropHandlerWebLinks
SDAutoUnlockAKSManager
SDActivityKey
SDActivityEncryptionKey
SDActivityDecryptionKey
SDActivityEncryptionManager
SDUnlockStateResponse
SDAirDropHandlerGenericLinks
SDAutoUnlockWatchInfoRequest
SDActivityScanner
SFContinuityScannerProtocol
SDAirDropCompressor
SDAirDropHandlerProfiles
SDAirDropTransferManagerProtocol
SFAirDropTransferObserverProtocol
SFAirDropTransferObserverDelegate
SDAirDropTransferManager
SDAirDropAlertManager
SDAutoUnlockLTKInfo
SDUnlockSecurityManager
SDUnlockClassALongTermKeyRequest
SDUnlockSessionRecord
SDUnlockKeyManager
SDAutoUnlockAWDLInfo
SDAutoUnlockAKSCache
AWDSharingAutoUnlockSetup
SDAirDropHandlerUnsupportedType
SDAirDropLogger
SDUnlockClassALongTermKeyResponse
SDAirDropHandlerMixedTypes
AppleIDAgent
APSConnectionDelegate
SDNearbyAgent
CBPeripheralManagerDelegate
SDBLEIdentifiedDevice
SDSession
SDProximityPairingAgent
SBSRemoteAlertHandleObserver
SDRemoteInteractionAgent
SDAppleIDURLResponse
SDSetupAgent
SDXPCInterface
SFXPCInterface
SDXPCServer
SDXPCConnection
@24@0:8@16
@16@0:8
B16@0:8
q16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16q24@32
v16@0:8
v24@0:8@16
v40@0:8@"SDAirDropClient"16q24@"NSDictionary"32
v24@0:8@"NSProgress"16
@40@0:8^{__SFNode=}16@24@32
v32@0:8@16@24
v28@0:8^{__SFNode=}16B24
v48@0:8@16@24@32^v40
i16@0:8
v20@0:8i16
@"NSMutableArray"
@"NSString"
@"NSProgress"
@"NSArray"
^{__SFNode=}
@"NSMutableDictionary"
@"SDAirDropClient"
@"NSDictionary"
@"<SDAirDropSessionDelegate>"
v20@0:8B16
@?16@0:8
v24@0:8@?16
{?=ddd}16@0:8
v40@0:8{?=ddd}16
@"NSDate"
@"NSObject<OS_dispatch_source>"
@"CMMotionManager"
@"CMMotionActivityManager"
{?="x"d"y"d"z"d}
@24@0:8^{_NSZone=}16
v20@0:8I16
I16@0:8
{?="resetReason"b1"sessionID"b1"version"b1}
v40@0:8@16@24@32
v40@0:8@16@24@?32
v32@0:8@16@?24
v44@0:8@16B24@28@?36
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8@"SFAutoUnlockDevice"16@"NSString"24@"<SFUnlockClientProtocol>"32
v40@0:8@"SFAutoUnlockDevice"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@"SFAutoUnlockDevice"16
v32@0:8@"SFAutoUnlockDevice"16@?<v@?B@"NSError">24
v24@0:8@"<SFUnlockClientProtocol>"16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v44@0:8@"NSString"16B24@"NSString"28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?@"SFUnlockState"@"NSError">24
v44@0:8@16@24@32B40
v32@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24
v40@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24@"NSError"32
v44@0:8@"SDAutoUnlockSessionManager"16@"NSDictionary"24@"NSError"32B40
B24@0:8@?16
@"<SDUnlockXPCSesssionDelegate>"
@"<SFUnlockClientProtocol>"
@"SFAutoUnlockDevice"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v48@0:8@16@24@32@?40
v48@0:8@"SDCompanionStream"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
v24@0:8@"SDCompanionStream"16
v24@0:8q16
@"NSNetService"
@"NSTimer"
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"SDAutoUnlockWiFiRequest"
@"CLLocationManager"
{?="expectedVersion"b1"messageType"b1"receivedVersion"b1"sessionID"b1"version"b1}
@32@0:8@16@24
q24@0:8@16
v32@0:8@16^B24
@40@0:8@16@24@32
@"SFRemoteHotspotDevice"
@"NSData"
{?="errorCode"b1"failureReasons"b1"sessionID"b1"version"b1"watchNewLTKSyncStatus"b1"watchOldLTKSyncStatus"b1"ltkSyncing"b1}
v24@0:8Q16
@"SDAppleIDServerTask"
^{__SecKey=}
@"NSObject<OS_dispatch_queue>"
{?="version"b1}
@"SFDeviceAssetManager"
@"CUBluetoothClient"
@"NSMutableSet"
v24@0:8@"SFCompanionService"16
v40@0:8@"SDStreamManager"16@"SFCompanionService"24@"SDStreamHandler"32
v48@0:8@"SDStreamManager"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
@"<SFCompanionServiceManagerClient>"
v32@0:8@16Q24
v32@0:8@"NSStream"16Q24
@36@0:8@16@24B32
@20@0:8I16
I24@0:8@16
@"<SDStreamHandlerDelegate>"
@"NSInputStream"
@"NSOutputStream"
@"NSError"
@"NSMutableData"
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v48@0:8@16@24@32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
{?="version"b1"checkViewState"b1"needsLTK"b1"remoteNeedsLTK"b1}
{?="version"b1"onWrist"b1"unlockEnabled"b1"unlocked"b1"usingAlwaysDirect"b1"wristDetectDisabled"b1}
@28@0:8@16B24
@20@0:8B16
@32@0:8@16B24B28
B28@0:8@16B24
v60@0:8@16@24S32@36@44@?52
v68@0:8@16@24S32@36@44@52@?60
@72@0:8@16@24S32@36@44B52@56@?64
v52@0:8@16S24@28@36@?44
B32@0:8@16@24
@"NSNumber"
@"<SDAutoUnlockTransportClient>"
@"NSMapTable"
@"NSURL"
@"SFAirDropAction"
v40@0:8@"NSString"16@"<SFCompanionServiceManagerClient>"24@?<v@?@"<SFCompanionServiceManagerProtocol>"@"NSString"@"NSString"@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSFileHandle"@"NSError">24
v32@0:8@"<SFActivityAdvertiserClient>"16@?<v@?@"<SFActivityAdvertiserProtocol>"@"NSError">24
v32@0:8@"<SFContinuityScannerClient>"16@?<v@?@"<SFContinuityScannerProtocol>"@"NSError">24
v24@0:8@?<v@?@"<SFUnlockProtocol>"@"NSError">16
v24@0:8@"SDUnlockXPCSession"16
@"<SDConnectionManagerDelegate>"
@"SDActivityScanner"
@"NSXPCConnection"
@"SDServiceManager"
@"SDActivityAdvertiser"
v32@0:8@16q24
v48@0:8@16q24@32@40
v40@0:8@16@24q32
v48@0:8@16@24q32@40
v24@0:8@"IDSContinuity"16
v32@0:8@"IDSContinuity"16q24
v40@0:8@"IDSContinuity"16q24@"NSError"32
v48@0:8@"IDSContinuity"16q24@"NSData"32@"NSUUID"40
v40@0:8@"IDSContinuity"16@"NSUUID"24q32
v48@0:8@"IDSContinuity"16@"NSUUID"24q32@"NSError"40
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SFPeerDevice"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSSet"@"NSError">24
v40@0:8@"NSData"16@"NSDictionary"24@?<v@?@"NSError">32
@"SDStatusMonitor"
@"IDSContinuity"
@"<SFActivityAdvertiserClient>"
{?="sessionID"b1"version"b1"keyFailed"b1}
v24@0:8d16
d16@0:8
@"SFBLEDevice"
v32@0:8@"SDAirDropListener"16@"NSError"24
v32@0:8@"SDAirDropListener"16@"SDNetworkOperation"24
v32@0:8@"SDAirDropListener"16@"NSDictionary"24
v40@0:8@"SDNetworkOperation"16q24@"NSDictionary"32
v44@0:8@16@"NSString"24@"NSURL"32B40
v32@0:8@16@"NSString"24
@"SDAirDropListener"
@"SDAirDropTransferManager"
@"SDAirDropClassroomTransferManager"
v32@0:8@"SDAirDropIconCacher"16@"NSError"24
I20@0:8I16
v44@0:8@16@24@32I40
@44@0:8@16@24@32S40
v52@0:8^^{_DNSServiceRef_t}16@24@32@40S48
v48@0:8@16@24@32S40I44
v44@0:8@16@24@32S40
v28@0:8@16S24
^{__SFNode=}24@0:8@16
v32@0:8@16^{__CFDictionary=}24
v24@0:8^{__CSIdentityQuery=}16
v40@0:8^{__CSIdentityQuery=}16q24^{__CFError=}32
v24@0:8^{__SFNode=}16
v40@0:8@16@24^{__SFNode=}32
B20@0:8I16
v52@0:8I16I20i24r*28r*36r*44
@36@0:8@16r^v24S32
v36@0:8r*16S24r^v28
v48@0:8I16i20r*24S32S36r^v40
^{_DNSServiceRef_t=}
@"NSObject<OS_xpc_object>"
^{__CFDictionary=}
@"<SDBonjourBrowserDelegate>"
v36@0:8@16@24S32
v36@0:8@"SDUnlockIDSController"16@"NSData"24S32
v24@0:8@"SDUnlockIDSController"16
v28@0:8@16I24
v24@0:8B16I20
v36@0:8@16I24q28
v24@0:8B16B20
@"NSObject<OS_dispatch_semaphore>"
@"SDUnlockMotionDetector"
@"SDUnlockWakeGestureRecord"
{?="version"b1"success"b1}
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"SDConnectionManager"16
@"NSXPCListener"
@"SDNetworkOperation"
@"<SDAirDropListenerDelegate>"
{?="sessionID"b1"version"b1}
@32@0:8@16^{__SecIdentity=}24
v24@0:8^{?=qi}16
^{__SecIdentity=}
^{__CFNetService=}
@"<SDAirDropPublisherDelegate>"
@52@0:8@16@24@32@40B48
v44@0:8r*16S24S28r*32I40
^{_DNSServiceRef_t=}16@0:8
@"<SDBonjourResolverDelegate>"
v52@0:8@16@24@32I40@44
v44@0:8@16@24S32@36
@"SDUnlockSetupRequest"
i24@0:8^{__SFNode=}16
v40@0:8^{__SFNode=}16@24@32
^{__CFBag=}
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@24@0:8^{__SFNode=}16
@"NSNetServiceBrowser"
v32@0:8q16^v24
v24@0:8^{__CFReadStream=}16
^{__CFReadStream=}16@0:8
@32@0:8q16d24
v28@0:8q16B24
@36@0:8r*16B24^{__CFURL=}28
@24@0:8r*16
v40@0:8r*16i24q28i36
v24@0:8r*16
q24@0:8^{__CFURL=}16
^{__CFArray=}32@0:8^{__CFURL=}16^{__CFURL=}24
B40@0:8^{__CFURL=}16^{__CFURL=}24^{_BOMBom=}32
v40@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32
B52@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32@40B48
v32@0:8^{__CFURL=}16^{__CFURL=}24
i40@0:8@16@24@32
^{_BOMBom=}
^{_BOMCopier=}
^{__CFReadStream=}
^{__CFWriteStream=}
@"SDAirDropCompressor"
@"NSSet"
@"<SDAirDropFileZipperDelegate>"
v52@0:8@16S24@28q36@?44
v60@0:8@16S24@28q36@44@?52
v68@0:8@16S24@28q36q44@52@?60
@24@0:8q16
@"<SDUnlockIDSControllerDelegate>"
v32@0:8q16q24
v60@0:8@16@24@32@40f48q52
@?28@0:8@?16f24
@48@0:8@16@24@32@40
v56@0:8q16q24q32q40@48
@"NSBundle"
@"NSObject<SDAirDropAlertManager>"
{?="version"b1"unlocked"b1}
v28@0:8@16B24
v32@0:8@"SDStreamHandler"16@"NSData"24
v24@0:8@"SDStreamHandler"16
v32@0:8@"SDStreamHandler"16@"NSError"24
v28@0:8@"SDStreamHandler"16B24
i24@0:8i16i20
@"NSFileHandle"
@"<SDCompanionStreamDelegate>"
@"SDStreamHandler"
v32@0:8^{__CFReadStream=}16Q24
v32@0:8^{__CFWriteStream=}16Q24
@"<SDAirDropIconCacherDelegate>"
v36@0:8@16S24@?28
@"SDAutoUnlockAWDLInfoCache"
@"SDAutoUnlockAKSCache"
@"SDUnlockSessionKeyExchangeResponse"
v24@0:8@"SDAutoUnlockTransport"16
v44@0:8@"SDAutoUnlockTransport"16@"NSData"24S32@"NSString"36
v48@0:8@"SDAutoUnlockTransport"16@"NSUUID"24@"NSString"32@"NSData"40
v40@0:8@"SDAutoUnlockTransport"16@"NSUUID"24@"NSData"32
v32@0:8@"SDAutoUnlockTransport"16@"NSData"24
v32@0:8@"SDAutoUnlockTransport"16@"NSString"24
v40@0:8@"SDAutoUnlockTransport"16@"NSData"24@"NSString"32
v24@0:8@"SDAutoUnlockPairingSession"16
v32@0:8@"SDAutoUnlockPairingSession"16@"NSError"24
@24@0:8B16B20
q24@0:8B16B20
B20@0:8B16
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@0:8
@"NSHashTable"
@"SDAutoUnlockSuggestionManager"
@"SFDeviceDiscovery"
^{__CFUserNotification=}80@0:8^{__CFString=}16^{__CFString=}24^{__CFString=}32^{__CFString=}40^^{__CFUserNotification}48^?56d64^{__CFString=}72
v24@0:8^^{__CFUserNotification}16
v32@0:8@"CRKShareTargetBrowser"16@"NSError"24
v32@0:8@"CRKShareTargetBrowser"16@"NSArray"24
v72@0:8@16@24@32@40@48@56@64
@"CRKShareTargetBrowser"
@"NSOperationQueue"
@"_CLRangingPeer"
@"SDAutoUnlockRangingPeer"
{?="escrowSessionID"b1"tokenSessionID"b1"version"b1}
v24@0:8I16S20
S16@0:8
@"SDUnlockIDSController"
@"SDUnlockSecurityManager"
@"SDAirDropHandlerWebLinks"
@"SDAirDropHandleriCloudDrive"
@"SDAirDropHandler"
@"LSBundleProxy"
@"NSUUID"
v44@0:8@16^{__SFNode=}24@32i40
v44@0:8@"SDNodeBrowser"16^{__SFNode=}24@"NSString"32i40
@32@0:8@16^{__SFNode=}24
i40@0:8^{__SFNode=}16@24Q32
^{__SFNode=}16@0:8
@"<SDNetworkBrowserDelegate>"
@"<SDNetworkEjecterDelegate>"
{?="errorCode"b1"sessionID"b1"version"b1}
v48@0:8@16@24Q32^v40
v40@0:8@16@24^v32
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
f24@0:8@16
@40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSArray"16@0:8
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@"NSSet"40@0:8Q16Q24@32
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
v24@0:8:16
@"BBSectionIcon"
@"BBSectionInfo"
@"BBDataProviderProxy"
{?="sessionID"b1"version"b1"remoteNeedsLTK"b1}
v40@0:8@"SDAirDropServer"16q24@"NSDictionary"32
v40@0:8@"SDAirDropConnection"16q24@"NSDictionary"32
v40@0:8@"SDAirDropSession"16q24@"NSDictionary"32
v32@0:8@"SDAirDropController"16@"NSDictionary"24
v32@0:8@"SDAirDropStatus"16@"NSDictionary"24
v32@0:8@"SDAirDropInformation"16@"NSDictionary"24
v40@0:8@"SDNetworkResolver"16q24@"NSDictionary"32
v40@0:8@"SDNetworkEjecter"16q24@"NSDictionary"32
v32@0:8^v16@24
^v24@0:8@16
@"<SDNetworkOperationDelegate>"
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
{?=CCCCCCCCCCCCCC}16@0:8
@"IDSDevice"
v24@0:8@"SDBonjourResolver"16
@"SDBonjourResolver"
@"<SDNetworkResolverDelegate>"
v28@0:8@"SDSharePointBrowser"16i24
@48@0:8^{__SFNode=}16@24Q32@40
v32@0:8^{__SFNode=}16^{__SFNode=}24
@40@0:8@16Q24^B32
@"SDAutoFSBrowser"
@"SDDomainBrowser"
@"SDManagedBrowser"
@"SDClassroomBrowser"
@"SDConnectedBrowser"
@"SDWorkgroupBrowser"
@"SDSharePointBrowser"
@"<SDNodeBrowserDelegate>"
v32@0:8r*16q24
@"<SDRemoteDiscDelegate>"
v24@0:8@"SDBonjourBrowser"16
v24@0:8@"SDWindowsBrowser"16
v24@0:8^{_DNSServiceRef_t=}16
v24@0:8@"SDRemoteDisc"16
@40@0:8@16@24Q32
^v16@0:8
v44@0:8I16i20S24r^v28@36
v72@0:8@16^{__CFString=}24^{__CFNumber=}32^{__CFString=}40^{__CFString=}48^{__CFString=}56^{__CFString=}64
B32@0:8^{__CFDictionary=}16^{__CFString=}24
v24@0:8^{__CFDictionary=}16
v28@0:8i16i20B24
@"SDRemoteDisc"
@"<SDSharePointBrowserDelegate>"
{?="errorCode"b1"version"b1}
{?="timestamp"b1}
@40@0:8q16@24@32
v36@0:8@16@24i32
@"NSURLSession"
{?="channelFlags"b1"discoveryMetric"b1"masterChannel"b1"preferredChannel"b1}
{?="timeIntervalSinceLastDarkWake"b1"timestamp"b1"attemptType"b1"awdlBringUpTime"b1"awdlPeerDiscoveryTime"b1"awdlRangingTime"b1"bleAWDLInfoExchangeTime"b1"bleAuthTokenExchangeTime"b1"bleConfirmationTime"b1"bleKeyConnectionTime"b1"bleKeyDiscoveryTime"b1"bleKeyRequestExchangeTime"b1"bleProxyConnectionTime"b1"bleProxyDiscoveryTime"b1"bluetoothConnectedDevices"b1"cancelReason"b1"cancelTime"b1"clamshellWaitTime"b1"displayWaitTime"b1"distance"b1"errorCode"b1"errorType"b1"flags"b1"keyBluetoothRSSI"b1"lastSleepType"b1"proxyBluetoothRSSI"b1"timeIntervalSinceLastWake"b1"totalUnlockTime"b1"clamshellClosed"b1"externalDisplay"b1"unlockSucceeded"b1"usingProxy"b1"usingTool"b1"withinRange"b1}
v44@0:8@"SDNetworkBrowser"16^{__SFNode=}24@"NSString"32i40
@"SDAirDropReceiveManager"
@"SDAutoUnlockSessionManager"
@"SDActivityEncryptionManager"
@"SDNearbyIDSAgent"
@"SDDeviceAssetMonitor"
@"CUPairingDaemon"
@"SDActivityPayloadManager"
@"SDXPCServer"
{?="version"b1"keyFailed"b1}
@"SFUserNotification"
@"<SDAirDropControllerDelegate>"
@"SDUnlockSetupSessionCreated"
{?="aksSessionID"b1"awdlCacheID"b1"messageType"b1"version"b1"useProxy"b1}
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
B32@0:8@16o^@24
v24@0:8^{__CSIdentity=}16
@24@0:8^{__SecCertificate=}16
^{__CSIdentity=}24@0:8@16
^{__SecIdentity=}16@0:8
C16@0:8
v28@0:8B16B20i24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
v32@0:8r*16I24i28
v28@0:8I16^v20
B40@0:8^{__SCPreferences=}16^@24^@32
^{__CTServerConnection=}16@0:8
@"CNContactStore"
^{__CFRunLoopSource=}
@"SDAirDropServer"
@"CNContact"
@"NSMutableString"
^{IONotificationPort=}
^{__IOPMConnection=}
^{__SCPreferences=}
@"BBSettingsGateway"
^{__CTServerConnection=}
@"FBSDisplayLayoutMonitor"
{?="sessionID"b1"version"b1"success"b1}
@48@0:8@16@24{CGSize=dd}32
@24@0:8@"UIActivityViewController"16
@32@0:8@"UIActivityViewController"16@"NSString"24
@"NSString"32@0:8@"UIActivityViewController"16@"NSString"24
@"UIImage"48@0:8@"UIActivityViewController"16@"NSString"24{CGSize=dd}32
@56@0:8@16@24@32@40@48
f16@0:8
v20@0:8f16
@"NSAttributedString"
@"UIImage"
@"SDBonjourBrowser"
@"<SDWindowsBrowserDelegate>"
@32@0:8q16q24
@44@0:8@16f24q28@36
@52@0:8@16@24f32q36@44
@28@0:8@16S24
@40@0:8@16S24B28@32
@"<SDAutoUnlockSessionDelegate>"
@"SDAutoUnlockAKSSession"
v40@0:8@16q24^v32
v40@0:8@"SDAirDropFileZipper"16q24^v32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8^{__SFNode=}16@24B32
v32@0:8^{__CFDictionary=}16^{__CFDictionary=}24
v32@0:8^v16^{__CFString=}24
v32@0:8^{__CFDictionary=}16^{__CFString=}24
B24@0:8^^{__CFError}16
B24@0:8^{__SecTrust=}16
B24@0:8^{__CFData=}16
^{__SecTrust=}16@0:8
@24@0:8^{__CFURL=}16
@"NSURLResponse"
@"NSURLSessionUploadTask"
@"PHMediaFormatConversionManager"
^{CGImage=}
@"SDAirDropPeerMetric"
^{__SecTrust=}
@"SDAirDropFileZipper"
@"<SDAirDropClientDelegate>"
{?="version"b1"currentlySyncing"b1"needsUnlock"b1"viewState"b1}
@24@0:8^{_CFHTTPServerConnection=}16
v32@0:8q16@24
v24@0:8^{__CFError=}16
v36@0:8^{_CFHTTPServerRequest=}16^{__CFString=}24B32
B24@0:8^{__SFNode=}16
B32@0:8^{_CFHTTPServerRequest=}16^@24
v40@0:8^{_CFHTTPServerRequest=}16q24^{__CFData=}32
B24@0:8^{_CFHTTPServerRequest=}16
v24@0:8^{_CFHTTPServerRequest=}16
q24@0:8^{_CFHTTPServerResponse=}16
v32@0:8^{_CFHTTPServerResponse=}16^{_CFHTTPServerRequest=}24
v24@0:8^{_CFHTTPServerResponse=}16
^{_CFHTTPServerRequest=}
^{_CFHTTPServerConnection=}
@"<SDAirDropConnectionDelegate>"
v44@0:8@16B24@28@36
v56@0:8@16@24@32q40@?48
B32@0:8@16B24B28
v32@0:8Q16@24
v28@0:8B16@20
@"SDUnlockSessionAuthToken"
@"SFAirDropTransfer"
{?="sessionID"b1"version"b1"success"b1"supportsACK"b1}
B24@0:8^v16
@"<SDAirDropInformationDelegate>"
@"SFBLEScanner"
{?="errorCode"b1"sessionID"b1"version"b1"usingRecord"b1}
v24@0:8@?<v@?>16
v48@0:8@16q24@32@?40
v48@0:8@"NSString"16q24@"NSDictionary"32@?<v@?B@"NSURL"@"NSError">40
v24@0:8@"NSString"16
@32@0:8@16^@24
v32@0:8@"SDAirDropPublisher"16@"NSDictionary"24
v24@0:8^{_CFHTTPServerConnection=}16
v20@0:8S16
^{_CFHTTPServer=}
@"SDAirDropPublisher"
@"SDAirDropInformation"
@"<SDAirDropServerDelegate>"
@52@0:8@16@24q32B40@44
@56@0:8@16@24q32B40@44B52
@60@0:8@16@24q32B40@44@52
@64@0:8@16@24q32B40@44@52B60
v32@0:8q16@?24
B32@0:8@16^@24
{?="cacheID"b1"version"b1}
@"<SDAirDropStatusDelegate>"
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
@36@0:8@16B24^q28
B56@0:8@16@24^@32^@40^@48
@56@0:8@16@24@32@40^q48
q36@0:8@16@24B32
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
B40@0:8@16@24^B32
v36@0:8@16B24B28B32
B44@0:8@16@24@32B40
v32@0:8@16B24B28
C36@0:8[10C]16[2C]24C32
B40@0:8[10C]16[2C]24C32C36
v36@0:8[10C]16C24@?28
@"SDActivityEncryptionKey"
{?="version"b1"passcodeEnabled"b1"unlockEnabled"b1}
@"LSAppLink"
v56@0:8@"NSString"16@"NSData"24@"NSString"32q40@?<v@?@"NSData"@"NSError">48
v44@0:8@16@24B32@?36
@"<SFContinuityScannerClient>"
@32@0:8^{__CFReadStream=}16^{__CFWriteStream=}24
B40@0:8*16q24^{__CFWriteStream=}32
B40@0:8*16q24^{__CFReadStream=}32
v36@0:8*16q24B32
v32@0:8@"SFAirDropTransfer"16@"SFAirDropAction"24
v24@0:8@"SFAirDropTransfer"16
@"NSObject<SDAirDropAlertManagerDelegate>"16@0:8
v24@0:8@"NSObject<SDAirDropAlertManagerDelegate>"16
v40@0:8@16Q24Q32
v36@0:8Q16@24B32
v40@0:8Q16@24B32B36
@"NSObject<SDAirDropAlertManagerDelegate>"
{?="version"b1"signout"b1}
@48@0:8@16@24q32q40
q28@0:8B16^i20
q32@0:8B16B20@24
q40@0:8B16B20@24^i32
q28@0:8B16@20
q28@0:8I16@20
q36@0:8I16@20^i28
B32@0:8q16@24
@32@0:8q16@24
@36@0:8q16@24B32
@44@0:8q16@24B32^q36
B24@0:8q16
v24@0:8I16B20
v32@0:8@16I24I28
v44@0:8@16@24I32q36
v36@0:8I16@20q28
v32@0:8@16B24I28
@"SDUnlockSessionRecord"
{?="errorCode"b1"version"b1"authPrompt"b1"supportsConfirmationACK"b1"useToken"b1}
@"SDAutoUnlockKeyDataCache"
{?="timeIntervalSinceLastWatch"b1"timestamp"b1"errorCode"b1"errorType"b1"flags"b1"keyRequestExchangeTime"b1"macNewLTKSyncStatus"b1"macOldLTKSyncStatus"b1"messageTimeout"b1"responseTimeout"b1"tokenExchangeTime"b1"watchNewLTKSyncStatus"b1"watchOldLTKSyncStatus"b1"keyDeviceLocked"b1"messageTimeoutFromServer"b1"receivedSetupACK"b1"receivedTokenACK"b1"responseTimeoutFromServer"b1"setupRetry"b1"setupSucceeded"b1"upsell"b1"watchExistedInUnlockList"b1}
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
^{__SecIdentity=}24@0:8@16
v64@0:8@16@24@32@40@48@?56
@"SDAppleIDDatabaseManager"
@"SDAppleIDIdentityRequest"
@"APSConnection"
v36@0:8@16S24@28
v24@0:8@"CBPeripheralManager"16
v32@0:8@"CBPeripheralManager"16@"NSDictionary"24
v32@0:8@"CBPeripheralManager"16@"NSError"24
v40@0:8@"CBPeripheralManager"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheralManager"16@"CBCentral"24@"CBCharacteristic"32
v32@0:8@"CBPeripheralManager"16@"CBATTRequest"24
v32@0:8@"CBPeripheralManager"16@"NSArray"24
v36@0:8@"CBPeripheralManager"16S24@"NSError"28
v40@0:8@"CBPeripheralManager"16@"CBL2CAPChannel"24@"NSError"32
C32@0:8^B16^B24
i44@0:8C16r*20r*28@36
i40@0:8@16@24^B32
i44@0:8C16C20@24@32B40
v28@0:8C16@20
@28@0:8C16@20
q32@0:8q16@24
v36@0:8@16B24@28
v36@0:8@16q24I32
v24@0:8^@16
i24@0:8@16
v40@0:8C16C20@24@32
i44@0:8@16C24@28@36
i32@0:8@16@24
i36@0:8@16C24@28
i52@0:8C16r*20r*28@36@44
i48@0:8@16@24@32@40
v24@0:8I16I20
^{NSMutableDictionary=#}
@"SFBLEAdvertiser"
@"CBPeripheralManager"
@"SFBLEPipe"
^{NSMutableSet=#}
@"CUPairingManager"
^{NSDictionary=#}
@"SFSystemService"
@"CUPairedPeer"
@"SFSession"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v28@0:8r*16B24
i32@0:8@16B24B28
@"SBSRemoteAlertHandle"
v36@0:8@16@24I32
@"BKSApplicationStateMonitor"
@"BBDataProviderConnection"
@"BBSectionParameters"
@"CUCoalescer"
@"SFService"
@"SFDevice"
@"UIRemoteTextEditingAttributes"
^{__IOHIDEventSystemClient=}
v20@0:8C16
v36@0:8i16@20@28
v28@0:8I16@20
@"SFPINPairSession"
@"SFDeviceRepairService"
@"SFWiFiHealthMonitor"
v28@0:8C16@?20
v36@0:8@16C24@28
v36@0:8C16@20@28
v28@0:8@16C24
v28@0:8B16@?20
v32@0:8@"NSString"16@?<v@?@"SFAppleIDAccount"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"SFAppleIDAccount"@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSString"B@"NSError">32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSData"@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v28@0:8C16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v40@0:8@"SFDevice"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?I@"NSError">16
v32@0:8@"SFCoordinatedAlertRequest"16@?<v@?@"NSError"B@"NSDictionary">24
v32@0:8@"SFDeviceDiscovery"16@?<v@?@"NSError">24
v24@0:8@"SFDeviceDiscovery"16
v32@0:8@"NSString"16@?<v@?@"NSString">24
v40@0:8@"NSString"16@"SFBLEDevice"24@?<v@?@"NSError">32
v24@0:8@"SFBLEDevice"16
v40@0:8@"NSXPCListenerEndpoint"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"SFRemoteInteractionSession"16@?<v@?@"NSError">24
v36@0:8@"NSData"16C24@"NSUUID"28
v32@0:8@"SFService"16@?<v@?@"NSError">24
v24@0:8@"SFService"16
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v24@0:8@"SFEventMessage"16
v36@0:8C16@"NSData"20@"NSUUID"28
v24@0:8@"SFRequestMessage"16
v24@0:8@"SFResponseMessage"16
v32@0:8@"NSDictionary"16@"NSUUID"24
v32@0:8@"SFSession"16@?<v@?@"NSError">24
v28@0:8@"NSData"16C24
v28@0:8C16@"NSData"20
v24@0:8@"NSDictionary"16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@"SFUserNotification"16
v24@0:8@"SFDevice"16
v28@0:8@"SFDevice"16I24
v24@0:8@"SFRemoteTextSessionInfo"16
v24@0:8@"NSError"16
v32@0:8@"NSUUID"16@"NSError"24
@"AppleIDAgent"
@"NSCountedSet"
@"SDNearbyAgent"
@"SDRemoteInteractionAgent"
@"SDProximityPairingAgent"
@"SDSetupAgent"
i40@0:8@16^B24@32
i32@0:8@16^B24
@"SFCoordinatedAlertRequest"
@"SFRemoteInteractionSession"
9Y>)F
?ffffff
S@333333
NeedsKeyboard
NeedsSetup
HasAuthTag
AdvData
Distance
RSSI
Attrs
AdvData
Distance
RSSI
Attrs
HasProblem
iCloud
iTunes
HomeKit
WiFi
Fixing
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
sandbox_extension_consume failed with error %d for tokenData "%@"
SDAirDropSession::startProgress sessionID is NULL
Motion detector activated
Start date %@
Motion activity error %@
Device off wrist, not checking past activity state
Accelerometer changed (base: (%@), new: (%@), diff: %d)
Accelerometer motion detected with sum change: %d
Using accelerometer motion
Activity changed %@
Past motion activities %@
Comparing motion dates (motion start: %@, current: %@)
Comparing motion date to now (motion start: %@, now: %@)
Acitivity motion detected
Using acitivity motion
Detected motion
Restarting motion timer
Motion timer fired
Invalidating motion timer
Adding observer for enabling device
Cancel Auto Unlock: This process does not have permission to perform this action
Began: Calling client proxy %@
Completed: Calling client proxy %@
Client (%@-%d) does not have unlock manager entitlement = %@
Client bundle ID: %@
IP Address = %@, Interface = %@
Received continuation payload sent notification with %lu clients, activity ID = %@
Activity not stream activity, not publishing
Added connected stream, total = %ld
Streams are being requested for bonjour name = %@
Failed to create stream handler
Failed to create net service
Service does not have a bonjour name
Wi-Fi not enabled on local iOS device
Removed connected streams, total = %ld
Restarting publish timer
Publish timer fired, no more connected streams
Publishing net service
Could not create NSNetService
No stream ID when trying to publish
Already publishing
Unpublishing
Added service to publisher %@ with identifier %@
Service has already been added
Removed stream support for activity with identifier = %@
No more activities that support streams
Published net service = %@
Failed to published net service = %@, errorDict = %@
Republishing service
Publisher stopped publishing
Net service did accept streams
Could not create stream handler, other side should be timing out
No manager for received ID = %@, managers = %@
Create destination for %@ failed %@
Creating ranging manager
Created ranging manager %@
Already processing request
Starting ranging (manager: %@, peers: %@)
startRangingFromPeers (manager: %@, peers: %@)
stopRangingFromPeers (manager: %@, peers: %@)
Starting AWDL %@
AWDL went down. Invalidatng current request
Restarting AWDL bring up timer
Invalidating AWDL bring up timer
AWDL bring up timer fired
Disabling ranging and awdl for timer
%s %@
%s ignoring %@
Asset matching query %@ downloaded to %@ (%@)
assets for removed device %@ is still needed by %@
cleaning up assets for removed device %@
SDServiceManager: Accept Reply = %@
%@ Deallocating Stream Handler
Creating network streams
%@ Closing input stream
%@ Closing output stream
Network streams closed
Stream Stats: total bytes transferred = %ld, duration = %g%@
Starting open timer with timeout = %d
Open timer fired with input stream status = %d, output stream status = %d, closing streams
Streams invalidating open timer
Applying tls settings
Could not get cert chain to encrypt streams
Could not get identity to encrypt streams
Accounts match
Accounts do not match
_CSCopyAccountIdentifierForAppleIDCertificate failed with error %@
My cert chain is empty
Cert chain from remote trust does is empty
Could not get trust from open stream
Stream end encountered, closing streams
Network stream received error = %@
setsockopt failed: %s
Stream returned invalid socket %d
Network streams opened
Time to open streams = %f
Failed to evaluate certificate
No space available on network output stream, queuing stream data
Delegate does not respond to streamHandler:didReceiveStreamData:
Could not create stream data from read buffer
Total read from network = %ld
Read zero bytes from the network stream
Client buffer full, waiting to read from network
Total written to network = %ld
Error writing to network output stream, writeLength = %ld
No output stream data to write to network
Method not supported
No space available on network output stream, queuing message
Could not create message payload
Unexpected stream handler input state
Read chunk = %ld, total = %ld%@
Read more bytes than the incoming message header declared
Read error = %s
Zero bytes read from input stream
Expected message length = %d
Finished writing message of size = %lu
Wrote too many bytes (byteIndex = %d, message length = %d)
Failed to write message = %s
Zero bytes written for message
No messages to write in queue
No handler for message write
Incorrect version number in header
Handoff is disabled in settings on this device
Handoff is disabled until first unlock has occurred
Real Handoff is disabled since alwaysSendPayload is enabled
Failed to find any valid cloud paired devices
List of Activity Continuation devices changed %@
nearbyDevicesChanged %@
IDS Devices: %@
Clearing Auto Unlock device cache
Skipping device in blacklist (device ID: %@)
Updating last seen date
Watch added to list -- updating watchCurrentlyInList and lastSeenWatchDate
Updating existed in list
Last watch removed from list -- updating watchCurrentlyInList and lastSeenWatchDate
Activity service has a Watch updating last seen date
Skipping enabled device in blacklist (device ID: %@)
Trying to use cached device: %@
IDS device not cloud paired %@
Device version: %d
Proxy device not cloud paired
IDS registration status: %d
Updated cloud pairing retry dates %@
Still backing off cloud pair retry (device ID: %@, use short: %@, short date: %@, general date: %@)
Failed to create destination (deviceID: %@, IDS device: %@)
Sending %@, identifier:%@
Error sending %@, error:%@
No destinations for device ID: %@
Nearby devices changed %@
Received trigger message over IDS
Received protobuf (type = %d, size = %u)
Received pairing request (date: %@, from storage: %@)
client:%@, sessionID:%@, clients:%@
Incoming message missing info (session = %@, wrapper = %@, data = %@)
Received IDS ACK (identifier: %@, mapping: %@)
Calling client for ACK (client: %@, session ID: %@, identifier: %@)
success = %@, identifier = %@, time = %.2f, error = %@
missing error handler
Sending pipe message (id: %@)
Pipe message timed out: (id: %@)
Failed to send pipe ACK %@
Adding handler for pipe %@
Received trigger message over scalable pipe
Received ACK (time: %0.2f)
Resetting apple watch existed state
Loaded lastSeenWatchDate %@
Loaded watchExistedInUnlockList %@
Loaded watchCurrentlyInList %@
Pairing request arrived (creation date: %@ server date: %@)
Pairing request arrived outside window (creation date: %@ server date: %@)
iCloud drive not enabled or accessible. Error: %@
Opening files with Files App for transfer %@
Trying to open URL %@
Finished opening %@
No items to open with Files App
Saving files to iCloud Drive for transfer %@
%@ moved '%@' to iCloud drive folder as '%@'
Failed to move item to iCloud drive. Could not resolve name conflict. Error: %@
Failed to move item to iCloud drive. Error: %@
Failed to process items to iCloud drive as it does not seem to be enabled
%@ data was imported from %@
insertRecordingWithAudioFile failed for item: %@
SDConnectionManager:: XPC connection interrupted
SDConnectionManager:: XPC connection invalidated
SDConnectionManager::Setting advertiser remote connection to nil
SDConnectionManager::Setting scanner remote connection to nil
Streams are being requested from service = %@
Started advertising %@ as %@ with options %@
Goodbye packet advertising interrupted
%@ advertising: advertisingEnabled %@, currentConsoleUser %@, state %s, shouldNotAdvertiseRequestersCount %lu, shouldStart %@
oldValue:%@, newValue:%@
Advertising client arrived
Advertising client went away
Stopping for user %d on sleep
Stopping for user %d on logout
Grabbing power assertion to keep advertising until told to stop
IOPMAssertionCreateWithProperties returned %x
Trying to grab power assertion while we already have one
Releasing power assertion
%@ startGoodbyeTimer with time interval %.2f
%@ invalidateGoodbyeTimer
%@ goodbyeTimeoutFired
Ignoring currentAdvertisementPayload because it is of incorrect size %d, should be %d
Encrypted (sharing flags + advertisementPayload): %@ => %@, counter %u
Did update state to %s
continuityDidUpdateState: Powered on
continuityDidUpdateState: Powered off
continuityDidUpdateState: Unknown
continuityDidUpdateState: Resetting
IDSContinuity didStartAdvertisingOfType: %s
IDSContinuity didStopAdvertisingOfType: %s
Did fail to start advertising for %s (%@)
Request to advertise %@ with options %@
Advertisement contents does not differ from current, continuing previous advertising
SDAutoFSBrowser::getfsstat-2(%s)
SDAutoFSBrowser::getfsstat-1(%s)
Proxy available for unlock
Sending SDAutoUnlockMessageTypeProxyTrigger
%s transferIdentifier: %@
SDAirDropListener didReceiveError %@
SDNetworkOperationCallBack (event = %@, transferIdentifier = %@)
SDNetworkOperationCallBack (event = %@, recordID = %@, progress = %f)
SDNetworkOperationCallBack (event = %@, recordID = %@ , error = %@)
SDNetworkOperationDelegate UNHANDLED EVENT %@ [%d] %@
browser for entitled client %@
Bonjour browser failed to find awdl0 interface
SDBonjourBrowser::DNSServiceSetDispatchQueue returned %d
Bonjour discovery started
SDBonjourBrowser::DNSServiceBrowse returned %d
SDBonjourBrowser::DNSServiceCreateConnection returned %d
Bonjour discovery stopped
Bonjour discovered %@ over %@ in %d ms
SDBonjourBrowser::DNSServiceQueryRecord returned %d
SDBonjourBrowser::CFStringGetCString failed to get fullName
SDBonjourBrowser::_SDServiceInstanceName returned nil
Bonjour removed %@
SDBonjourBrowser::handleIconFetchCallback %@
SDBonjourBrowser::handleIconStoreCallback %@
SDBonjourBrowser::updateIdentityWithQueryResults query not found
SDBonjourBrowser::handleIdentityCallback %@
Discovered %@ identity of %@ in %d ms
Client event callback for event %ld and node %@
Identity discovery denied for %@
Discovery validation failed because SecTrustRef is NULL
%@: UNHANDLED EVENT %@ [%d] %@
Bonjour discovered %@ TXT record in %d ms
SDBonjourBrowser::CSIdentityQueryExecuteAsynchronously returned false
AWDL link state changed
%@ (%@) icon hash mismatch "%@" should be "%@"
SDBonjourBrowser::handleBrowseCallBack returned %d
SDBonjourBrowser::handleQueryCallBack returned %d
Failed to get long term information (key = %@)
Devices unpaired
Restarting long-term key timer
Long-term key timer fired, resetting state
Invalidating long-term key timer
Client enabling unlock
Failed to create unlock session (identifier = %@, has default paired device = %@)
Invalid parameters (passcode = %@, handler = %@)
Using updated LTK (forcing: %@)
Exchanging LTKs during setup
Exchanging LTKs using new service
Using existing LTK
Notifying client with error = %@
lostModeEnabled = %@
Wake gesture (detected: %@, time from wake to session start: %.2f, record: %@)
Received SDUnlockStartLTKTransfer
Received start ltk with request outstanding
Failed to sign remote key
Long-Term key response is missing information (has remote key = %@, remote key = %{private}@)
Long-Term key failed on the other side
Incorrect request ID in response (has request ID = %@, response request ID = %@, local request ID  = %@)
Failed to sign remote key for enable
Long term key response is missing information for enable (has remote key = %@, remote key = %{private}@)
Error in class A LTK transfer = %d
Could not sign remote key
Enabling with keys
Error in session created response = %d
Could not setup escrow session
Failed to create session
Missing information for escrow session (has token = %@, token = %@, local long-term key = %@, remote long-term key = %@)
Final step failed
Bad signature error indicated bad LTKs on phone side, enabling with new keys
Creating escrow record failed = %@
Lost mode = %@; not unlocking.
Could not step for ephemeral key response
Could not create unlock session
Resetting (on wrist = %@, motion detected = %@, exchange request = %@)
Received request for session in progress
No session ID in request
Device already unlocked
Unlock pairing is disabled
UNLOCK SUCCEEDED
Resetting (position = %@, waiting on auth = %@, sesssion auth token = %@)
Device went off wrist waiting for auth token
Ignoring auth token, device unlocked
Stash: No key is exchange request = %@
Failed to send device unlocked message: %@
Transferring long-term keys failed.
Failed to send class A long term key request: %@
Failed to send device enable request: %@
Failed to send request to create escrow key: %@
Failed to send state response with error = %@
SDXPCSession:: Starting xpc session....
kSFOperationEventErrorOccurred
SDAirDropListener UNHANDLED EVENT %@ [%d] %@
Bonjour name conflict for %@
Bonjour advertise failed (%ld|%d)
Retrying Bonjour advertise in 3 seconds...
Giving up trying to advertise with Bonjour
Bonjour advertise %@ started
SDAirDropPublisher::copyMyIconHash returned NULL
SDAirDropPublisher::setIconAndRelease failed (%ld bytes)
SDAirDropPublisher::setIconAndRelease icon is NULL
SDAirDropPublisher::dataFromTXTRecordDictionary returned nil
Bonjour advertise %@
SDAirDropPublisher::CFNetServiceRegisterWithOptions returned (%ld, %d)
SDAirDropPublisher::copyAirDropID returned NULL
Bonjour advertise %@ stopped
Bonjour resolved %@ over %@
Ignoring Bonjour resolve of %@ over %@
Resolved a Bonjour server with unknown protocol
Bonjour resolver failed to find awdl0 interface
Bonjour resolving %@ over %@
SDBonjourResolver::DNSServiceSetDispatchQueue returned %d
SDBonjourResolver::DNSServiceResolve returned %d
SDBonjourResolver::DNSServiceCreateConnection returned %d
Reset Session: %@
Hash from setup doesn't match preferred LTK
Timeout waiting for LTK response from Companion
Watch LTKs changed (user info: %@)
Incorrect LTK (deviceID: %@, ltk exists: %@, hashes match: %@)
Response missing view syncing state
Pairing key session notifying delegate with error: %@
Pairing canceled for create secret
Pairing Enabled
handleCreateEscrowSecret: %@
Sending key device locked failed
Device using new ranging: %@
Received SDUnlockSetupCreateSecret
SDConnectedBrowser::_CFURLGetVolumePropertyFlags returned %@
SDConnectedBrowser::getResourceValue %@
SDDomainBrowser::didNotSearch %@
Calendar Events data was imported from %@
processCalendarEvents failed to load data for file: %@
AirDrop destination set to %@
SDAirDropFileZipper::BOMBomInsertFSObject("%s") failed
SDAirDropFileZipper::BOMFSObjectNewFromPath("%s") failed
_shouldConvertMediaFormats was NO, checking individual files
SDAirDropFileZipper::createPlaceholderFiles conflict not handled
SDAirDropFileZipper::CFURLCopyLastPathComponent returned NULL
SDAirDropFileZipper::createPlaceholder %@
SDAirDropFileZipper::createPlaceholderFiles originalName "%s" contains illegal characters
SDAirDropFileZipper::createPlaceholderFiles originalName[%d] is nil
SDAirDropFileZipper::createPlaceholderFiles file count is zero
SDAirDropFileZipper::createPlaceholderFiles placeholderFiles is NULL
SDAirDropFileZipper::moveObjectAtURL2 %@
SDAirDropFileZipper::removeObjectAtURL %@
SDAirDropFileZipper::moveObjectAtURL %@
SDAirDropFileZipper::BOMCopierCopyWithOptions returned %d
SDAirDropFileZipper::createPlaceholderFiles failed
SDAirDropFileZipper::startBomCopy %s
SDAirDropFileZipper::No files were found
SDAirDropFileZipper::copyCommonParent(%@) returned NULL
SDAirDropFileZipper::BOMBomInsertFSObject failed
SDAirDropFileZipper::BOMFSObjectNewFromPath failed
SDAirDropFileZipper::BOMBomNew returned NULL
SDAirDropFileZipper::_bomPath is nil
SDAirDropFileZipper::CFURLCopyAbsoluteURL returned NULL
SDAirDropFileZipper::CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropFileZipper::copyUserFolder returned NULL
AirDrop is using PKZip compression
AirDrop is using adaptive compression
SDAirDropFileZipper::CFWriteStreamOpen failed
SDAirDropFileZipper::initBomWithFiles failed
SDAirDropFileZipper::CFReadStreamOpen failed
SDAirDropFileZipper::_SDUniqueTemporaryFolder failed %@
SDAirDropFileZipper::bomCopierFileErrorPtr - %s, errno = %d (%s)
SDAirDropFileZipper::bomCopierFatalErrorPtr - %s
SDAirDropFileZipper::bomCopierFatalFileErrorPtr - %s (%d)
SDAirDropFileZipper::bomCopierFileConflictErrorPtr - %s
Created continuity.auth service %@
Default paired device nearby = %@
Sending protobuf (type = %d, size = %lu, data class = %@, data = %@)
IDS send error = %@
Sent message with identifier = %@
Space became avaliable
success = %@, identifier = %@, error = %@
No error handler for message sent callback
Incoming protobuf (type = %d, size = %u, data = %@)
Incoming protobuf is nil
didSwitchActivePairedDevice %@
fakeTransfer notification observer %@
startFakeTransferInCategory fakeTransfer %ld.%ld itemSources is nil
startFakeTransferWithItems copyItemAtURL %@ failed %@
startFakeTransferWithItems createDirectoryAtURL failed %@
Stopped net service browser
Client streams closed
Third party app client
Started net service browser
Sending initial request
Error sending initial request = %@
Sending initial streams response (accepted = %@)
Error sending initial response = %@
Switched from messages to Streams
Creating file handle failed
Error getting streams = %@
No handler for stream request
Failed to set buffer size on socket
Could not create sock pair = %s
Requested fileHandle more than once.
Browser found net service = %@
No type in stream handler message
Could not unarchive message dictionary
Exception caught when unarchiving stream handler message = %@
Received request to create streams
Could not create file handles
No service in request
Received response to create stream (accepted = %@)
Stream handler closed with error = %@
Received NSStreamEventHasBytesAvailable on a stream other than an input stream
Received NSStreamEventHasSpaceAvailable on a stream other than an output stream
Client stream received error = %@
Client Streams Opened
Total written to client = %ld
Error writing to client output stream, writeLength = %ld
Queueing client write, no space available
Total read from client = %ld
Read zero bytes from the client stream
Network buffer is full, waiting to read from client
No stream data to write to network
Client has written data
Client has read data
SDAirDropIconCacher:CFReadStreamRead returned %ld
SDAirDropIconCacher:kCFStreamEventUnknown
SDAirDropIconCacher::CFWriteStreamWrite returned %ld
SDAirDropIconCacher::kCFStreamEventUnknown
SDAirDropIconCacher::copyAirDropCacheFolder returned NULL
Key session initialized (device id: %@)
Auth key session notifying delegate with error: %@
Resetting escrow %@
Resetting token %@
BLE peer disconnected (identifier: %@)
Authorization allowed by request, not showing alert
handleAWDLInfo: %@
Activation error: %@
AWDL network up with info %@
Automation: AWDL started %0.2f
WiFi request invalidated
Failed to deserialize wrapper data
Key session received device id: %@
Received SDAutoUnlockMessageTypeAWDLInfo %@
Set remote cache ID %lu, wrapper id %lu
Received SDUnlockSessionKeyExchangeResponse
Received SDUnlockSessionConfirmation
Using legacy protocol
Using new protocol
Deserializing AWDL info failed %@
handleSessionKeyExchangeResponse: %@
Sending auth token %@
Failed to generate ranging session token
Creating auth token failed
Session confirmed %@
Confirmation failed
Missing AWDL cache
Set wrapper cache ID %ld
Failed awdl info serialization
Sending SDAutoUnlockAWDLInfo
Error sending SDAutoUnlockAWDLInfo (error: %@)
Sending SDUnlockSessionKeyExchangeRequest
Error sending request %@
Cached key data (device %@, key cache %@)
Missing cache, falling back
Using cached token
Using cached escrow
Cache missing escrow step data
Setting aks session id %d
Sending Cached SDUnlockSessionKeyExchangeRequest
Sending SDUnlockSessionAuthToken
Sending SDAutoUnlockSessionConfirmationACK
Sending Proxy Complete
Failed to send proxy complete
Received SDAutoUnlockMessageTypeProxyMessage
Received SDAutoUnlockMessageTypeProxyComplete
Grabbing system activity assertion for Auto Unlock key session
IOPMAssertionDeclareSystemActivity for key session returned %x
Power assertion (assertion %ld, state %d)
System sleep not reverted for key session (state %d)
Grabbing assertion we already have
Releasing key power assertion
Restarting assertion timer
Assertion timer fired
Invalidating aggressive advertising timer
Session manager starting
Resetting in progress state
Auto Unlock eligible devices %@
Calling key device locked %@
Calling enabled device %@
Calling failed to enable %@
Calling began %@
Calling completed %@
Calling failed %@
Repair cloud pairing if necessary
Devices %@
No eligible devices (signed in: %@, last watch seen: %@)
Devices with description %@
Ranging supported: %@ for model: %@
No eligible devices: Auto Unlock disabled due to profile
Enabling device %@, id %@
Unable to enable Auto Unlock due to profile
Cancel enabling all devices
Cancel enabling device %@
No pairing lock session to cancel (device id: %@)
Disabling Auto Unlock (device: %@)
Begin Auto Unlock: %@
Test mode attempt
Passcode missing for test mode
Starting attempt (attempt count: %ld, bluetooth devices: %ld, time since last wake: %ld seconds, sleep type: %@)
Unsupported Watch (device ID: %@, major os version: %d attempt type: %d, supports prompts: %@)
Connecting to watches: %@
Connecting to phone device IDs: %@
Scanner started with timeout %.2f seconds
Posting state changed: Scan started
Mac is internet sharing
Interfaces off (bluetooth off: %@, wifi off: %@)
Reached limit of attempts (been unlocked: %@, attempt count: %d)
No enabled devices for attempt
Attempt already in progress (progress state: %@)
Invalidating attempt
Posting state changed: Attempt invalidated
State requested (attempt in progress: %@, device: %@, state: %@)
Incremented attempt count %d
Decrementing
Disabling (device ID: %@, pairingID: %@)
Sending %@ %@
Error sending disable message (device id: %@, error: %@)
Received SDUnlockDisable (device ID: %@, pairingID: %@)
Received SDUnlockDisable but device ID is NULL
Received disable while enabling device but pairing IDs don't match (lock device: %@, received pairing ID: %@, session ID: %@)
Not disabling (local pairingID: %@, received pairingID: %@)
Pairing lock session in progress %@
Pairing key session in progress %@
Missing IDS device ID for Mac requesting pairing
Auth lock session in progress %@
Auth key session in progress %@
Already sent trigger to device
Clearing all keys with tokens
Pairing session canceled (device ID: %@, session ID: %@)
Removing key session %@
Removed key session %@
Canceled at end
Session failed (id: %@, error: %@, outstanding sessions: %@)
Missing authorization token: %d
Unexpected attempt type: %d
Wi-Fi powered on: %@
Posting state changed: Scan stopped - session in progress
Already connected (new device: %@, attempt device: %@)
Discovered peer but Wi-Fi is off
Scanner invalidated
Scanning for bluetooth IDs %@
SFBLEScanner timer fired %@
Using BLE scan timeout %.2f seconds
Scanner error: %@
Invalidating scanner
Found BLE peer: %@
Restarting scan timer
Scan timer fired
Invalidating scan timer
Advertising for Auto Unlock: %@ (local: %@, background: %@, proxy: %@, watch locked: %@, aggressive: %@, suggestion: %@)
Proxy values: nearby: %@, watch enabled %@, watch unlocked: %@, on wrist: %@, watch always advertises: %@
Received wrapper %@
Received wrapper %@, session ID %@
No session for session ID: %@
Could not create session ID
Missing session ID
Failed to decrypt message (error code: %ld)
Sending %@ Wrapper %@
Completed sending decryption failed message (error: %@)
Restarting aggressive advertising timer
Aggressive advertising timer fired
Grabbing system activity assertion for Auto Unlock proxy trigger
IOPMAssertionDeclareSystemActivity for proxy trigger returned %x
System sleep not reverted for proxy trigger (state %d)
Releasing proxy trigger power assertion
Keybag state changed %d
Resetting mac been unlocked and attempt count
Stored watch AWDL info
Cleared watch AWDL info cache
Cleared companion AWDL info cache
Failed to send watch request: %@
Received watch info %@
Received cached key data
Clearing cached key data
Received AWDL cache
Clearing cached key data for device %@
Bluetooth power changed (interface on: %@)
Wi-Fi power changed (interface on: %@)
Bluetooth error count: %d
Already presented Bluetooth off error
WiFi error count: %d
Already presented Wi-Fi off error
Generating state dump
Dumping state
SDClassroomBrowser sending %d item(s) to %@
App provided JSON: %@
SDClassroomBrowser started send operation to %@
SDClassroomBrowser send operation to %@ progress %ld/%ld
SDClassroomBrowser cancelled send operation to %@
SDClassroomBrowser failed send operation to %@ (%@)
SDClassroomBrowser finished send operation to %@
SDClassroomBrowser didInterruptWithError %@
PKPass initWithData failed %@
Wallet pass add failed %@
Wallet pass add failed with status: %d
Wallet not available. Abort
Missing required properties (awdl info: %@, queue available handler: %@)
CFURLCopyResourcePropertyForKey %@
CFURLCopyResourcePropertyForKey failed with no error
Report interface failure ioctl failed (%d)
Report interface failure socket failed (%d)
Created new security manager (pairing id %@, store path %@, device name %@)
Unable to create security manager (pairing id %@, pairing store path %@, active device %{private}@)
Session manager adding observers
Device pairing failed, throwing away anything that was setup
Pairing did begin %d
Device entered config state %d
Disable pairing called on platform without Nano Registry
Pairing Disabled: %@
restartUnlockTimer
Session timer fired, resetting state
invalidateUnlockTimer
Failed to send device reset message
Failed to send disable message
Sending %@
Message Contents %@
Received %@
Failed to get airdrop available applications for opening %@
Failed to get available applications for opening %@
SDNetworkEjecter::stop
Returning prompt info %@
Posting "%@" unlocked by Apple Watch (device ID: %@)
Restarting notification timer
Notification timer fired
Invaliding suggestion scan timer
SDNetworkOperation::resume HTTPServerConnection is invalid
SDNetworkOperation::resume HTTPServerConnection is NULL
Received a new rawAdvertisementData %@ from %@ (isReplay:%@, disabledDuplicateFilter:%@)
No current key to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. Requesting new key
Failed to decrypt advertisement with new key from %@ with rawAdvertisementData %@. Discarding advertisement
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting new key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. New key is same. Replay!
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. New key is same. Replay?
Failed to retrieve new key from %@
Successfully decrypted advertisement (sharing flags + advertisementPayload): %@ => %@, counter: %u
SDNetworkResolver::bonjourCallBack returned %d
Attempted to resolve a server with unknown protocol
Attempted to resolve a server with no URL
setFileIncomplete::kCFURLCreationDateKey %@
setFileIncomplete::_kCFURLFinderInfoKey %@
setFileIncomplete::finderInfoData is NULL
setFileIncomplete::CFURLCopyResourcePropertyForKey %@
Exception caught trying to retrieve primary iCloud account : %@
copyLocalizedFileName %@
_SDCertificateChainForIdentity::SecTrustEvaluate returned %d
_SDCertificateChainForIdentity::SecTrustCreateWithCertificates returned %d
_SDCertificateChainForIdentity::SecIdentityCopyCertificate returned %d
absoluteURL was nil for %@
createDirectoryAtURL:%@ returned nil error
NSItemReplacementDirectory appropriateForURL:%@ returned nil error
Failed to create Sharing folder
Missing Library folder
copyUserFolder::confstr(%d) failed with error %d (%s)
URLForDirectory::NSDownloadsDirectory %@
URLForDirectory::NSCachesDirectory %@
copyAirDropCacheFolder::mkdir failed (%d)
This is not a valid AFP volume (FSCTL returned %d errno = %d)
_SDVolumeNameForMountPoint::NSURLVolumeNameKey %@
SecTaskCopyValueForEntitlement("application-identifier") returned NULL for %@
SecTaskCreateWithAuditToken returned NULL for %@
Created new Stream ID (%s)
awdlInterfaceIndex::getifaddrs failed (%d)
Device Capabilities (Auto Unlock:%@, Handoff:%@, Instant Hotspot:%@, AirDrop:%@, Legacy AirDrop:%@, Remote Disc:%@)
Succeeded: App install for URL %@
Failed to install app with error %@ for URL %@
SDRemoteDisc:ODSAgent returned %d
CFReadStreamCreateForHTTPRequest returned NULL
CFHTTPMessageCreateRequest returned NULL
CFReadStreamRead returned %ld
kCFStreamEventUnknown
incrementTransfersInitiated: No AirDrop browsers are running
incrementTransfersCompleted: No AirDrop browsers are running
Unrecognized browser mode %d
SDSharePointBrowser::txtRecordCallBack returned %d
SDSharePointBrowser::DNSServiceSetDispatchQueue returned %d
SDSharePointBrowser::DNSServiceCreateConnection returned %d
SDSharePointBrowser::DNSServiceQueryRecord returned %d
SDSharePointBrowser::openSession URL is NULL
stringFromXPCObject result is not a string
arrayFromXPCObject result is not an array
numberFromXPCObject result is not a number or boolean
SFBrowserCallBack (<%p>{kind = %@}, node = %p, error = %d)
SFOperationCallBack (<%p>{kind = %@}, event = %@, results = %p)
kSharingBrowserCreate node is NULL
kSharingBrowserCreate kind is NULL
openNode returned %d
closeNode returned %d
addNode returned %d
removeNode returned %d
handleBrowserMessage browser is NULL
handleBrowserMessage functionName is NULL
kSharingOperationCreate operation is NULL
kSharingOperationCreate kind is NULL
kSharingOperationResume imageData is invalid
kSharingOperationSetProperty name is NULL
handleOperationMessage operation is NULL
handleOperationMessage functionName is NULL
XPC_ERROR_CONNECTION_INVALID <%p>
Lost connection to client <%p>
XPC_ERROR_TERMINATION_IMMINENT <%p>
handleNewConnection unknown XPC error <%p>
handleNewConnection unknown object
handleNewConnection unknown XPC type
XPC_ERROR_TERMINATION_IMMINENT
Unknown XPC error
Unknown XPC type
Device Information: %@
Turning on AirDrop, turning on WLAN=%d, Bluetooth=%d
Error presenting enable radios alert %@
Asking user to enable radios
Created session (OS version: %@, build: %@, device: %@)
Updated timeouts (responseTimeout: %ld, responseTimeoutFromServer: %@, messageTimeout: %ld, messageTimeoutFromServer: %@)
Passcode can't unlock keybag
Invalid parameters (passcode = %@)
Internet Sharing enabled
Not enabling, view not syncing
Device is placeholder
Mac not IDS registered
Response timer fired
Pairing lock session notifying delegate with error: %@
Restarting LTK timer
Invalidate LTK timer
Timed out waiting for LTK to sync
Not notified of locked device, session canceled
Pairing session canceled for session created
Remote LTK Hash: %@
Received failure reasons %d
Watch missing LTK and is unable to communicate with Companion to potentially sync it
Watch missing LTK for Mac
Watch has old LTK for Mac
Error in session created response: %d
Pairing session canceled for session request
Setup received response from old watch (version: %d)
Setup received response from new watch (version: %d)
AKS session invalid
LTK invalid (exists: %@, hash matches: %@)
handleEscrowSessionRequest: %@
handleSetupCreateRecord: %@
Enabled for device: %@
Waiting for cloud pairing (Watch ID: %@, Companion ID: %@)
Missing proxy companion IDS ID -- this shouldn't happen
Retrying cloud pairing for specific devices %@
Unlock not enabled and cloud pairing not syncing after pairing (device: %@)
Sending SDUnlockSetupRequest %@
Sending SDUnlockSetupCreateSecret
Received SDAutoUnlockMessageTypePairingKeyDeviceLocked
Received SDUnlockSetupSessionCreated
Received SDUnlockSetupCreateRecord
Received ACK (identifier: %@, setup ID: %@, token ID: %@)
Missing AWDL Info
Using AWDL info %@
Using encryption%{private}@
Error encrypting message (data: %@, authTag: %@, nonce: %@)
Session missing device ID for encrypted send
Using BLE encryption
AWDL ranging results returned %@, error %d
Peer in range
Ranging timeout with no error code
Ranging key exists %@
Using ranging key (size: %d, realKey %@)
Ranging key data: %{private}@
AirDrop not ready: wifi=%d, bluetooth=%d, hotspot=%d, carplay=%d, dnd=%d, finder=%d, receivingEnabled=%d
Discoverable mode off: appleIDNeedsFixing=%d, eduModeEnabled=%d
Reconciled discoverable mode: %@ (%@)
Purged contact hashes
Discoverable mode changed from %@ to %@, posting notification
Failed to get status info for %@
VerifyAndCopyParsedValidationRecord failed with error %d
VerifyAndCopyParsedValidationRecord timed out.
Parsed Validation Record %@
SecCertificateCopyCommonNames returned empty array
SecCertificateCopyCommonNames returned NULL
saveVerifiedAccount success %d %@
Could not fix Alt-DSID error = %@
No primary account, not fixing appleID
Apple ID auth account %{private}@ is set up correctly
Apple ID auth account %{private}@ is missing from accounts %{private}@
Fix missing Apple ID auth account for %{private}@
Apple ID add failed with error %@
AppleID add completed successfully
Apple ID auth account name is empty
Apple Account signed in
Apple Account signed out
No normalized emails or phone numbers
No emails or phone numbers
No Apple ID certificate
_longHashesToContactIdentifier is nil
Failed to find contact with contact identifier %@, error: %@
Started generating hashes
Skipping as contact %@ has no identifier
No Contacts in database
Failed to retrieve any contacts due to %@
Finished generating hashes
Failed to retrieve me-card due to %@
No me-card set
Adding additional information to me-card if needed
lteConnectionShows4G: Error copying carrier setting = %d
Forcing LTE to 4G for UI
CTRegistrationCopyDataStatus: No data connection indicated in dataStatus dictionary: %@
Added reason to prevent locale change exit (reason %@, reasons %@)
Removed reason to prevent locale change exit (reason %@, reasons %@)
Exiting for language change -- delayed
Paired watch wrist state changed: %@
PWS availability: %ud
Generating SSID hashes
sysctl returned %d
SecIdentityCopyCertificate returned %d
myLegacyAirDropIcon cgImage is NULL
myLegacyAirDropIcon imageData is NULL
altDSID is nil
altDSID is equal to primary email
altDSID is equal to Apple ID account
SDStatusMonitor::SBGetScreenLockStatus returned %d
AirDrop %@ transaction %@ (%d)
Bluetooth is now %s
Bluetooth power is now %s
SDStatusMonitor::DNSServiceSetDispatchQueue returned %d
SDStatusMonitor::DNSServiceRegister returned %d
CarPlay server crashed
CarPlay status changed: %s -> %s
SDStatusMonitor::Unknown keys changed (%@)
SCDynamicStoreCreateRunLoopSource failed: %s
SCDynamicStoreSetNotificationKeys failed: %s
SCDynamicStoreCreate failed: %s
SDStatusMonitor::handleNameMonitorCallBack returned %d
Updating discoverable mode for personal hotspot change
Device can sleep
Device will sleep
Device has powered on
Device will not sleep
SDStatusMonitor::IORegisterForSystemPower failed
Screen: %@
SDStatusMonitor::SBSEventObserved %@
SDStatusMonitor::SBSEventObserved unknown event %@
SystemUI unknown identifier: '%@'
SystemUI changed: 0x%X -> 0x%X
UI locked state changed %llu
SDStatusMonitor::notify_get_state returned %d
### Failed to make ssid prefs?
SSID cache monitor successfully installed: %s
Wi-Fi power is now %s
Current language changed
Preventing exit for reasons %@
Exiting...
WiFi Preferences changed callback, purging ssid cache
PHPhotoLibrary preparing import of %d items
PFVideoComplement initWithBundleAtURL(%@) returned nil
Not a Photos type %@. Ignoring
PHPhotoLibrary performChanges reported success for %d items
PHPhotoLibrary performChanges failed with error %@ for items %@
Sending request (honeybee id: %@, devices: %@)
Sysdiagnose collected (path: %@, error: %@)
Uploading to honeybee
Error collecting sysdiagnose %@
Sending IDS message (identifier: %@, destinations: %@)
Error sending IDS message (identifier: %@)
No destination for IDS devices: %@
IDS send complete (success: %@, identifier: %@, error: %@)
Received message (type: %d, message: %@)
Invalidating %@
Restarting response timer
invalidateResponseTimer
SDAirDropClient::addBlockerInfo no ReceiverID or SenderID
Power assertion released
SDAirDropClient %@
SDAirDropClient::didReceiveResponse no content
SDAirDropClient::didReceiveResponse unknown operation
SDAirDropClient::didReceiveResponse operation is NULL
SDAirDropClient::didReceiveResponse unknown status code %ld
SDAirDropClient::storeDataValue value is invalid
SDAirDropClient::storeStringValue value is invalid
SDAirDropClient::CFPropertyListCreateWithData returned invalid dictionary
parseAskResponse::CFPropertyListCreateWithData %@
parseDiscoverResponse::CFPropertyListCreateWithData %@
Retry %s request for %@
Connection to %@ canceled (%@)
Connection to %@ failed (%@)
SDAirDropClient::_CSIdentityAuthenticateUsingCertificateChain %@
SDAirDropClient::receiverIsTrusted userIdentity is nil
AirDrop sending to %@ over %s
SDAirDropClient::if_indextoname(%d) failed
AirDrop sending to %@ over IPv6
AirDrop sending to %@ over IPv4
NSURLSessionTaskTransactionMetrics count %lu is not expected, expecting 1
Connected to %@ at [%@] from [%@]
AirDrop failed to validate Apple ID certificate of receiver
Sending client certificate to %@
SDAirDropClient::_SDCertificateChainForIdentity returned %s array
Sending to %@ with no Apple ID certificate
SDAirDropClient::authenticationMethod returned %@
SDAirDropClient::needNewBodyStream invoked for task %@
Bonjour resolved %@ in %d ms
%s %@ at %@
Bonjour resolve %@ failed (%@)
SDAirDropClient::CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropClient::CFURLCopyHostName returned NULL
SDAirDropClient::copyUserFolder returned NULL
SDAirDropClient::CFPropertyListWrite %@
SDAirDropClient::CFWriteStreamOpen failed
SDAirDropClient::CFWriteStreamCreateWithFile returned NULL
SDAirDropClient::CFURLCreateFromFileSystemRepresentation(%s) returned NULL
SDAirDropClient::realpath(%s) failed with error %d
SDAirDropClient::CFURLGetFileSystemRepresentation(%@) failed
SDAirDropClient::CFURLCreateFilePathURL %@
SDAirDropClient::internetLocationFile returned nil
SDAirDropClient::splitOutFileURLs url "%s" has no scheme
Validating items to send %@
validateAirDropItems fileURL: %@, fileName: %@
SDAirDropClient::kCFURLTypeIdentifierKey %@
SDAirDropClient::kCFURLNameKey %@
SDAirDropClient::startPublishingProgress sessionID is NULL
created temporary directory %@
failed to create temporary directory %@
startSending, validated airdrop items. properties: %@
startSending, did NOT validate airdrop items. properties: %@
Starting file coordination for %@
SDAirDropClient::coordinateAccessWithIntents(%@) for files %@ failed %@
Starting to send files %@
SDAirDropClient::splitOutFileURLs failed
Start transaction
SDAirDropClient::removeObjectAtURL(%@) failed %@
SDAirDropClient::generatePreviewForFileURL failed to extract information from vcard "%@"
SDAirDropClient::createCGImageWithData returned NULL
SDAirDropClient::createImageDataWithSize returned NULL
SDAirDropClient::generatePreviewForFileURL load data %@
SDAirDropClient::generatePreviewForFileURL copy property %@
realPathURL returned NULL for file URL %@. Failing transfer with error %@
attempting conversion of live photo bundle %@
attempting conversion of extracted photo from live photo bundle %@
attempting conversion of %@
_shouldPublishProgress, adding total unit count of 100
Converted %@ to %@
failed to convert %@ with error %@
No conversion needed for %@
Clamped one image
Created new AirDrop ID (%s)
CNMonogrammer monogramForContact:isContactImage: returned nil for %@
No icon data for node with id = %@
copyCertificateChainFromTrust::SecTrustGetCertificateCount returned %d
copyCertificateChainFromTrust::SecTrustEvaluate result is %d
copyCertificateChainFromTrust::SecTrustEvaluate returned %d
copyCertificateChainFromTrust::SecTrustRef is NULL
Email hash = %@
Phone hash = %@
Email or Phone for %@ is %@
Apple ID record for %@ failed to validate
%@ doesn't match %@ for %@
_CSCopyAccountIdentifierForAppleIDCertificate for %@ failed %@
Certificate chain for %@ is empty
Validation record encDsID for %@ is zero length
Validation record for %@ is nil
Validation record data for %@ is nil
Falling back to identity query for %@
_CSIdentityAuthorityCopyIdentityWithName returned NULL
CSIdentityGetFullName(%@) returned NULL for %@
validateRecordAndCacheInfoForPerson identity is NULL for %@
storeFilesCopied::kSFOperationFilesKey is missing
storeFilesCopied::CFNumberGetValue failed
Contact info = %@ %@
Icon for node with id = %@: iconDataSize = %ld preferVibrant = %d isContactImage = %d
Icon too small for node with id = %@
No contact for node with id = %@
Cached Icon for node with id = %@: iconDataSize = %ld
Created identity for %@ from validation record
_CSCreateAppleIDIdentityWithCertificate failed for %@ with error %@
Couldn't put up the missing Apple ID alert! (error = %d)
SDAirDropConnection %@
SDAirDropConnection::didReceiveError %@
SDAirDropConnection::didReceiveError suppressed
SDAirDropConnection::CFURLCreateStringByReplacingPercentEscapes returned NULL
SDAirDropConnection::storeRequestValue value is not a string
SDAirDropConnection::_CFHTTPServerRequestCopyProperty returned NULL
SDAirDropConnection::storeDataValue value is invalid
SDAirDropConnection::storeStringValue value is invalid
SDAirDropConnection::storeNumberValue value is invalid
SDAirDropConnection::storeBooleanValue value is invalid
SDAirDropConnection::storeArrayValue value is invalid
SDAirDropConnection::createCGImageWithJPEG2000Data returned NULL
SDAirDropConnection::storeIconValue fileIconData is invalid
SDAirDropConnection::CFPropertyListCreateData failed %@
SDAirDropConnection::icon hashes don't match
SDAirDropConnection::_SDHashStringFromData returned NULL
SDAirDropConnection::createPersonForAskRequest senderIcon is NULL
SDAirDropConnection::createPersonForAskRequest computerName is invalid
SDAirDropConnection::createPersonForAskRequest validAirDropID(%@) returned NO
SDAirDropConnection::_CSIdentityAuthenticateUsingCertificateChain failed %@
SDAirDropConnection::senderIsTrusted userIdentity is NULL
SDAirDropConnection::myAccountIdentifier is an empty string
SDAirDropConnection::_CSCopyAccountIdentifierForAppleIDCertificate failed %@
SDAirDropConnection::_SDCertificateChainForIdentity returned %s array
SDAirDropConnection::copyMyAppleIDSecIdentity returned NULL
SDAirDropConnection::copyCertificateChainFromTrust returned %s array
AirDrop parsing discovery request
SDAirDropConnection::CFPropertyListCreateWithData returned invalid dictionary
SDAirDropConnection::CFPropertyListCreateWithData failed %@
AirDrop parsing ask request
SDAirDropConnection::allowAskRequestFromPerson appleID is NULL
SDAirDropConnection::allowAskRequestFromPerson person is NULL
AirDrop failed to validate Apple ID certificate of sender
SDAirDropConnection::handleAskRequest no files or items
SDAirDropConnection::handleAskRequest senderID is NULL
SDAirDropConnection::CFReadStreamRead returned %ld
SDAirDropConnection::kCFStreamEventEndEncountered fired again
SDAirDropConnection::kCFStreamEventUnknown(%d)
SDAirDropConnection::CFReadStreamOpen failed
SDAirDropConnection::_CFHTTPServerRequestCopyBodyStream returned NULL
SDAirDropConnection::startReceivingFile destination is nil
SDAirDropConnection::thereIsEnoughFreeSpace failed %@
makeDestinationDirectory::createDirectoryAtURL failed %@
Discover already in progress
Upload already in progress
askRequest NULL userAccepted false
Ask already in progress
AirDrop received discovery request
AirDrop received ask request
AirDrop received upload request
SDAirDropConnection::kSFOperationErrorNotEnoughSpace
SDAirDropConnection::didReceiveRequest askRequest NULL userAccepted false
SDAirDropConnection::didReceiveRequest unknown operation
SDAirDropConnection::didReceiveRequest operation is NULL
SDAirDropConnection::didReceiveRequest unknown method
SDAirDropConnection::didReceiveRequest method is NULL
SDAirDropConnection::didSendResponse operation is unknown
SDAirDropConnection::didSendResponse operation is NULL
SDAirDropConnection::didSendResponse method is unknown
SDAirDropConnection::didSendResponse method is NULL
Connection from %@ closed but transfer is finished
Connection from %@ closed
Connection closed (cancel suppressed)
Received finished event
AirDrop connection invalidated
Request failed %@
Request timed out - no request found for requestIdentifier %@
Failed key request %@
Key request %@ - retrying in %d seconds
Updating key request %@ requestIdentifier to %@ for retry
Clearing peristed key request budget
Confirmed functioning encryption key from %@. Resetting local budget
Clearing store as format is invalid %@
%@: Failed to persist key requests
%@: Encryption key request - Already have request for key %@. Replacing completion block
%@: Preventing encryption key request - Auto Unlock in progress
%@: BUDGET BLOCK: Only %@ since we last requested a key from %@. Must wait another %@
%@: Budget allowing new key local %@request since we waited %@ since we last requested a key from %@
%@: BUDGET BYPASSED! Sending key request via local and potentially cloud
%@: Denying cloud key request as persisting request records failed
Sending encryption key request to single of multiple possible destinations.
No device ID generated for device %@ (Devices: %@)
No device found for identifier %@ (Devices: %@)
Requesting Handoff encryption key from "%@"
Sending encryption key local%@ request %@ to %@
Replying to Handoff encryption key request from "%@"
Sending local%@ encryption key reply to %@ with current key %@
No device ID generated for device %@ (Devices: %@) for requestIdentifier %@
%@ %@ %@ %d
Found activity payload in cache for %@ from %@ of size %d
Sending handoff payload request to single of multiple possible destinations.
Requesting Handoff payload for %@ with message GUID: %@ and timeout: %d
Sending payload request %@ to %@
Responding to request from %@ with requestIdentifier %@ for advertisementPayload %@ with an empty payload
Responding to request from %@ with requestIdentifier %@ for advertisementPayload %@ with payload of size %d
Responding to Handoff payload request from "%@"
Sending payload reply %@
Payload reply record %@
Request from %@ with requestIdentifier %@ for current key with included key %@
Ignoring request from %@ for key with requestIdentifier %@ as we replied only %@ ago
Received a new Handoff encryption key from "%@"
Reply from %@ with encryption key of size %ld for requestIdentifier %@
deviceIdentifier %@ does not match %@
Attempting to use unrequested encryption key with requestIdentifier %@ from %@
Discarding unrequested encryption key as it is missing the requestIdentifier %@ or device %@
Received handoff payload request from "%@" (%@) with requestIdentifier %@ command=%@ for advertisementPayload %@
Ready to respond to handoff request from "%@" (%@) with requestIdentifier %@ for advertisementPayload %@, command: %@. RTT:%@
Received requested Handoff payload from "%@" (%@) for %@ with activity payload of size %ld for requestIdentifier %@ (%@). RTT:%@
Activity payload for requestIdentifier %@ with messageIdentifier %@ not/no longer wanted from %@
Incoming unhandled protobuf, should never have been called!! protobuf:%@ context:%@
Incoming unhandled data, should never have been called!! context:%@
Incoming unhandled message, should never have been called!! message:%@
%@ %@ (%@)
Could not decode protobuf data (%@)
Could not encode protobuf data from %@ (%@)
Not replacing current key %@ with received key %@
Got payload to send of size %d with activityIdentifier:%@ for advertisementPayload:%@
Not sending %@ to device as we could not get deviceID: %@
Not sending %@ to device as it has no nsuuid/BTUUID: %@
Sending Handoff %@advertisement
to %@, with payload of size %ld
from %@, is final:%@, %@
Creating lock session
Watch info (model ID: %@, build: %@, os version: %@)
Stopping BLE connection
Lock session canceled (device ID: %@, session ID: %@)
Lock session canceled after success (device ID: %@, session ID: %@)
Handling cancel at end
Not cancelled
Clamshell changed
Display config changed
Attempt timed out for session
Automation: Used Proxy Device %@
Automation: Key Device Model %@
Automation: Proxy Device Model %@
Automation: Phone Bluetooth Discovery %0.2fs
Automation: Phone Connection Time %0.2fs
Automation: Watch Bluetooth Discovery %0.2fs
Automation: Watch Connection Wait Time %0.2fs
Automation: Watch Connection Time %0.2fs
Automation: Bluetooth Info Exchange %0.2fs
Automation: Bluetooth Key Exchange %0.2fs
Automation: Bluetooth Token Exchange %0.2fs
Automation: Bluetooth Unlock Confirmation %0.2fs
Automation: AWDL Bring Up %0.2fs
Automation: Peer Found %0.2fs
Automation: Ranging Results %0.2fs
Automation: Time Waiting For Display %0.2f
Automation: Time Waiting For Clamshell %0.2f
Automation: Wi-Fi Total %0.2fs
Automation: Bluetooth Bootstrap Total %0.2fs
Automation: Bootstrap + Wi-Fi Total + Confirmation %0.2fs
Automation: Bluetooth Overall Total %0.2fs
Automation: Complete exchange %0.2fs
Automation: Key Device RSSI %d
Automation: Proxy Device RSSI %d
Automation: Within Range %@
Automation: Already Connected Bluetooth Devices %d
Automation: Time Since Last Wake %ld seconds
Automation: Last Sleep Type %@
Automation: Cancelled %@
Automation: Successful Session %@
Unable to create token session, using escrow
Starting BLE connection %@
Found Device {
available: %@,
locked on wrist: %@
device:%@
Peer not available %@
Timer fired
Timeout while waiting for a display or clamshell
Restarting confirmation timer
Confirmation timer fired
Invalidating confirmation timer
handlePeerInRange %@
handlePeerOutOfRange %@
AWDL up (%.2f)
Auth lock session notifying delegate with error: %@
Automation: Success
Automation: Session Dismissed: %@
Received SDUnlockSessionKeyExchangeRequest
Received SDUnlockSessionAuthToken
Received AWDL Info %@
Session supports confirmation ACK
Key exchange request: attempt cancelled
Found device is not available
Received fallback AKS session
Watch locked on wrist from connection
handleSessionKeyExchangeRequest: %@
Auth token: attempt cancelled
handleSessionAuthToken: %@
Received SDAutoUnlockSessionConfirmationACK
Starting wifi request
AWDL started
Ranging started
Ranging completed
AKS Unlock succeeded
consumeAuthTokenIfReady: %@
Waiting for a display or clamshell change
Error sending AWDL info %@
Not sending data, local device ID is NULL
Sending SDAutoUnlockAuthSessionRequest
Sending SDUnlockSessionKeyExchangeResponse
Sending SDUnlockSessionConfirmation
Error sending confirmation
Waiting for confirmation ack
Delaying trigger of action %@ till transferState reaches requirement
Cannot trigger action %@ as it is past requirement
Delaying trigger of action %@ till UI unlock
Triggering action %@
logReceiverBundleID appIdentifier is nil
failed to remove item at %@
Cannot open empty list of URLs
Opening URLs: %@ in %@
Opening URLs: %@
Received screen lock unlocked notification
Not initiating setup retry (already retried: %@, always show: %@, lastSuccessfulDevice: %@)
Retry setup device ID cleared
Restarting retry setup device timer
Retry setup device timer fired
Invaliding setup device device timer
Suggestion Found Peers %@
Suggested device ID cleared
Restarting suggested device timer
Suggested device timer fired
Invaliding suggested device timer
Restarting suggestion service timer
Suggestion service timer fired
Invaliding suggestion service timer
Suggestion scanning for bluetooth IDs %@
Scanner started
Suggestion manager found peer: %@
Invalidating suggestion scanner
Restarting suggestion scan timer
Suggestion scan timer fired
Error sending message to start advertising to %@
Received SDAutoUnlockMessageTypeStartAdvertising (new ranging required: %@, message: %@)
Skipping response advertisement because Mac OS version is too old
Should send request (device: %@ enabled: %@)
Suggestions still backing off (device %@, retry date %@)
Reached limit of suggestions (device %@, multiplier: %ld)
Next suggestion (device: %@, multiplier: %ld, seconds: %ld, retry date %@)
Setting feature suggested for device: %@
Retry version: %ld
makeDestinationDirectoryWithIdentifier failed %@
SDAirDropClassroomTransferManager::createCGImageWithData returned NULL
SDAirDropClassroomTransferManager::replaceIconValue fileIconData is invalid
Update transfer %@ with state %d
Failed to update %@
Notifying %d clients that transfer %@ was accepted
Notifying %d clients that transfer %@ was declined
connection established %@
connection invalidated %@
AirDrop server initialized
AirDrop server terminated
New AirDrop connection %p
Closed AirDrop Connection %p
AirDrop server didReceiveError %@
Trying again with random port number
AirDrop server idle timeout
Apple ID account changed
Stopping AirDrop server for user %d on sleep
Starting AirDrop server for user %d on wake
Starting AirDrop server for user %d on login
Stopping AirDrop server for user %d on logout
Legacy Mode %@
Finder %@ AirDrop
Discoverable mode changed to %@
Device first unlock
Screen turned %@
Auto-trigger server
Scanning mode %@
Scanning mode off: console=%d, discoverable=%d, screenOn=%d, unlockedOnce=%d
AirDrop updateServerState with nil delegate
SDAirDropServer::createTrustChain returned NULL
AirDrop using self-signed certificate
AirDrop server enabled on port %@
SDAirDropServer::_kCFHTTPServerServicePort is NULL
SDAirDropServer::_CFHTTPServerCreateService returned NULL
AirDrop server started
AirDrop server disabled
Fix worked for pairing session: %@
Fix worked for auth session: %@
Incompatible type
Attempting to fix remote LTK
Starting Up...
SIGTERM received, shutting down.
SIGINFO received, requesting debug output.
SIGUSR1 received, requesting reset state.
SIGUSR2 received, requesting reset state 2.
Ignoring advertisment data as it is of incorrect size %lu, expected %zu
Failed to get remote object proxy for %@ (%@)
Activating
Activate already called
New connection from %@ accepted %s
Connection %@ invalidated
New connection established to %@
Failed to softlink: %@
Local Unique ID:%@
Touch Bar:%@
DSID: %@
Reloading local unique ID: %@
AKS manager adding observers
Profile installed disabling Auto Unlock
Profile uninstalled -- posting devices changed
Failed to send first unlocked message (error: %@)
AKS received Apple Account sign in
AKS received Apple Account sign out
Unlocked while waiting for sync
Current console user changed (uid: %d, pid: %d)
Resetting old AKS cache (device id: %@)
Creating cache for device %@
Invalid escrow session
No token session
Not storing cache, couldn't create escrow session
Failed to serialize requests %@
Failed to deserialize exchange requests %@
AKS session missing keys (device: %@, syncing %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
Escrow secret (exists: %@, device ID: %@)
Escrow secret %{private}@
Missing escrow
Escrow secret for authorization (exists: %@, device ID: %@)
Missing escrow for authorization
Missing out variables (message: %p, authTag: %p)
Encryption error %ld
Failed to create random bytes %ld
Session key is missing (device ID: %@
Attempting to decrypt message with device IDs %@
Decrypted message (deviceID: %@, length: %ld)
Error decryption failure (device ID: %@, error %ld)
Devices with session keys: %@
Adding existing LTK to new syncing view
Updating version for local LTK
Loaded local LTK: (%@), %{private}@
Unable to load LTK (local device ID: %@)
Local LTK Exists
Generating local LTK
Saved Local LTK (device ID: %@, saved: %@)
New local LTK, clearing remote LTKs and disabling Auto Unlock for all keys
Unable to generate LTK (local device ID: %@, keybag state: %d, setup user: %@)
Checking Local LTKs
Both LTKs missing, generating new LTK
Modern LTK is missing: Storing legacy LTK
Modern LTK is missing: Legacy LTK is invalid, regenerating
Legacy LTK is missing: Storing modern LTK
Legacy LTK is missing: Modern LTK is invalid, regenerating
LTKs match (valid: %@)
LTK Mismatch: Legacy LTK is valid, overwriting modern LTK
LTK Mismatch: Modern LTK is valid, overwriting legacy LTK
LTK Mismatch: Modern LTK is invalid, regenerating
Saved Local LTK after validation check (device ID: %@, saved: %@)
Missing local device ID to check local LTK
Device locked, not checking local LTK
Updating local ltk for sign out
Hash exists but key missing
Keychain devices: %@
Device not in keychain, removing signed key: %@
Trimmed Keychain devices: %@
Updated remote LTKs: %@
Remote LTK data: %{private}@
Not updating remote LTKs because device not first unlocked
Remote LTK needs resigning for pairing for hash
Signing remote LTK (device: %@ LTK: %@, class: %d)
Missing signing info (remoteLTK exists %@, remoteLTK %{private}@, localLTK exists %@, localLTK %{private}@)
Query for attributtes status: %d
Remote LTK list is empty (remote ltks %@, list %@)
LTK's are mismatched between keychain views (device ID: %@)
Sending LTK Response %@
Failed to send LTK response
Sending LTKs for devices to Watch: %@
Sending LTKs to Watch: %{private}@
Posting follow up
Error posting follow up %@
View syncing
View sync state not requested
Stored Watch LTK %@
Failed to store Watch LTK
LTK request missing info (local ID %@, ltk %@)
Companion not first unlocked, not sending LTKs
Missing ltk for deviceID: %@
Keychain peers %@
LTK waiting to be received
LTK needs to be sent
Nothing queued to be sent, re-added LTK
Unable to find keychain peer (IDS device ID: %@)
SOSCCSendToPeerIsPending error: %@
SOSCCMessageFromPeerIsPending error: %@
Taking keybag assertion
Releasing keybag assertion
Restarting keybag assertion timer
Keybag assertion fired
Restarting waiting for unlock timer
Waiting for unlock timer fired
Invalidating waiting for unlock timer
AKS Manager received unknown type
Escrow secret exists %@
Disabling pairing for all keys %@
Removing all remote LTKs on sign out
Overriding existing LTK
Saved remote LTKs: %@
Error persisting remote LTKs: %@
Error serializing remote LTKs: %@
Creating Remote LTK file
Loaded remote LTKs: %@
Remote LTK Data: %{private}@
Error deserializing LTKs: %@
Error loading LTK file: %@
Reloading pairing records
Saved watch ID to pairing record: %@
Error persisting watch ID to pairing record: %@
Error serializing watch ID to pairing record: %@
Failed to delete legacy watch to companion id file (path: %@, error: %@)
Loaded watch ID to companion ID mapping: %@
Error deserializing watch ID to companion ID mapping: %@
Error loading watch ID to companion ID file: %@
Failed to delete legacy companion id file (path: %@, error: %@)
Loaded companion IDs: %@
Error deserializing companion IDs: %@
Error loading companion IDs file: %@
Error creating Sharing folder for compainon IDs: (path %@, error %@)
Error creating Auto Unlock folder: (path %@, error %@)
Failed to store keychain item (add status:%d, delete status:%d)
Updated keychain item
Added keychain item
Using new secret
Unable to get secret from info (has secret %@, escrow info %{private}@)
Migrating escrow secret
No secret
Received unexpected SecItem error = %d
Deleted escrow secret for device %@
Failed to delete escrow secret: %d
Deleted all escrow secrets
Failed to delete all escrow secrets: %d
Store LTK (ltkInfo exists: %@, ltkInfo: %{private}@, deviceID: %@ attributes: %@, update: %{private}@, add: %{private}@)
Failed to delete remote LTK (status: %d, query: %@)
Updating session key (device id: %@)
Cached session keys for devices %@
Storing Session Key (deviceID: %@ attributes: %{private}@, update: %{private}@, add: %{private}@)
Deleting session key (device ID: %@)
Failed to delete ranging key: %d
Deleting all ranging keys
Deleted all ranging keys
Failed to delete all ranging keys: %d
Query status: %d
Failed to initialize key from data. Incorrect size %d
Generated new advertising encryption key %@, and saved to keychain
%@: Loaded advertising encryption key and bumped last used counter from %d by %d, then persisted key to keychain %@
Did not load advertising encryption key from keychain as the bumped last used counter exceeds max value
Failed to deserialize encryption key from keychain (%@)
%@: Encryption key invalid %@
%@: Persisted last used counter and key to keychain %@
Saved decryption key %@ for %@ to keychain
Failed to save decryption key %@ for %@ to keychain
Loaded decryption key %@ for %@ from keychain
Converting key to wrapped key
Not wrapping key as wrapping key is unavailable
Failed to serialize encryption key from %@ (%@)
Failed to deserialize key (%@)
Failed to unwrap key cause key data is missing
Could not unwrap key cause wrapping key is not available
Converting wrapped key to key
Successfully cleared in-memory key caches
Successfully deleted encryption key:%@, decryption keys:%@
SecItemCopyMatching wrappingKeyQuery failed with error %d
SecItemCopyMatching encryptionKeyQuery failed with error %d
SecItemCopyMatching decryptionKeysQuery failed with error %d
Loaded wrapping key from keychain
No wrapping key found in keychain
SecItemCopyMatching baseDict failed with error %d
Failed to update keychain item with error %d for query %@ attributesToUpdate %@
Failed to delete keychain item with error %d for query %@
Failed to add keychain item with error %d for attributes %@
createURL::CFURLSetResourcePropertyForKey %@
createCGImageWithDataOrURL::CGImageSourceGetCount returned zero
createCGImageWithDataOrURL::CGImageSourceCreate returned NULL
copyImageData::CGImageDestinationFinalize failed
copyImageData::CGImageDestinationCreateWithData returned NULL
createImageDataWithSize::CGImageCreateThumb returned NULL
createImageDataWithSize::CGImageCreateCopyWithColorSpace returned NULL
createImageDataWithSize::CGColorSpaceCreateDeviceRGB returned NULL
createCGImageWithData::CGImageSourceGetType image format invalid
createCGImageWithData::CGImageSourceGetCount returned zero
createCGImageWithData::CGImageSourceCreateWithData returned NULL
%@ Failed to generate app link for %@ (%@)
Starting%@%@ scanning with duplicates:%@ for peers [%@]
%@ enabled: %@, state: %s, shouldStart: %@, scanForCopyPaste: %@, scanForHandoff: %@
nearbyServiceDevicesChanged: %@
Received a new advertisement %@
Ignoring new advertisement as it is for default pair only which is not me
Failed to update with raw advertisementData %@ from %@ (%@)
Saw IDS device %@ with mismatched version %d, expected %d
Scanning client arrived
Scanning client went away
Starting for user %d on wake
Starting for user %d on login
IDSContinuity didStartScanningForType: %s
IDSContinuity didStopScanningForType: %s
IDSContinuity didFailToStartScanningForType: %s withError: (%@)
Saw device %@ but cannot find mathing IDSDevice
Lost IDS device %@
lostAllDevices
requested scanning for %@
Requesting payload from %@ for %@
SDAirDropCompressor::CFWriteStreamWrite returned %ld
SDAirDropCompressor::CFReadStreamRead returned %ld
SDAirDropCompressor::CFReadStreamOpen error = %@
SDAirDropCompressor::CFWriteStreamOpen error = %@
Turning compression back on since it took %f seconds to send a block
Not keeping up with network so turning compression off. Compressed send time: %f, uncompressed send time: %f
Turning compression back on. Compressed send time: %f, uncompressed send time: %f
Compression ratio is %f, so turning compression off, at least until the next file
SDAirDropCompressor::executeReadWithAdaptiveCompression error = %@
SDAirDropCompressor::executeWriteWithAdaptiveCompression error = %@
Failed to queue file data for acceptance %@ with error: %@
Failed to load data for %@ with error: %@
Removing transfer %@
Cleaning up transfer %@
New incoming transfer %@ with items %@
AirDrop callback event %@ with recordID %@ for missing transfer
User response updated for transfer %@
Action %@ triggered on missing handler
new connection established %@
Setting handler %@ for transfer %@
Handler %@ failed for transfer %@
Failing transfer %@ for reason %@
Updating transfer state for transfer %@ to %@
Cleaning up path %@
%@: error cleaning up transfer folder at %@: %@
Loading all persisted transfers
%@ receive data at %@ is not valid
LTKs exists
Overriding existing long term keys (local %@, remote %@)
Deleted LTKs for %@
KeybagUUIDs match
KeybagUUIDs have changed
Resaving LTKs with backup exclusion
Saved LTKs %@
Set backup key
Error setting backup exclusion key: %@
Error persisting LTKs: %@
Error serializing LTKs: %@
Save missing info (local %@, remote %@, pairing store path %@)
Loaded LTKs
 local %@
remote %@
keybag UUID %@)
Failed to delete LTKs %@
LTKs already deleted
Deleted LTKs
Couldn't delete LTKs, no storage path: %@
Error creating unlock storage folder: (pairing path %@, error %@)
Unable to find LTK file (error: %@)
Migrating old keys to %@
Failed to store escrow data (add status:%d, delete status:%d)
Updated escrow data
Added escrow data
Escrow data exist:%@, pairing id:%@
Escrow data hasn't been migrated
Failed to delete escrow record: %d
Legacy escrow data exist:%@
Migrating escrow data
Migrating escrow data in new format failed
Failed to delete escrow record = %d
Submitting AWD metric for set up
Setup Metric %@
Updating enable state in dynamic store: %@
Updating global dynamic store (key: %@, value: %@)
Updating enabled dynamic store (key: %@, value: %@)
Failed to set global enabled state %d
Enabled dictionary exists %@
Updating in progress state in dynamic store: %@
Failed to set in progress state %d
Last machine wake date %@
IDS server bag contains keys (timeout key: %@, server timeout: %@, timeout percentage %@)
Using server timeout (random number: %ld)
Using default timeout (random number: %ld)
Using default value for timeout (default value: %ld, timeout key: %@, server timeout: %@, timeout percentage %@)
Received config state notification
Received notification out of state (state = %d, isPaired = %@)
Key manager received UI lock state changed (UI unlocked: %@)
Already unlocking for keybag
Not initiating, remote unlocked
Not initiating, not enabled
Received devices unpaired notification: %{private}@
Received devices failed to pair notification: %{private}@
Device became active %{private}@
Local unlock disabled, remote enabled. Sending disable message
Remote unlock disabled, local enabled. Disabling local unlock
Restarting state request key timer
State timer fired, assuming devices are not connected
Invalidating state timer
Calling stash handler with error = %@
Setting unlocking state to %@
Lock device is unlocked
Lock device is locked
handleClassALongTermKeyRequest: %@
handleSetupRequest: %@
Failed in exchange response (unlocking state = %d, has key = %@)
UNLOCK CONFIRMED!
Token unlock failed, retrying (state = %d, confirmation has success = %@, confirmation success = %@)
Confirmation failed, resetting state
Failed to create stash token
Error in stash key response = %d
State response is missing information (has unlock enabled = %@, unlock enabled = %@, has passcode enabled = %@, passcode enabled = %@
Failed to start LTK transfer
Transferring long-term keys failed. Paired Unlock will not work until devices completely re-pair
Failed to send state request with error = %@
Initiating unlock
Using escrow record = %@
Falling back to escrow record
No stored passcode
Could not generate ephmeral key data
Could not create AKS session (errorCode: %x)
Unlock already in progress with record = %@
Initiating unlock out of state without record
Launching app store with URL: %@
bplist00
 !"!$%&'()*+
Application-Group_
BuildMachineOSBuild_
CFBundleAllowMixedLocalizations_
CFBundleDevelopmentRegion_
CFBundleDisplayName_
CFBundleExecutable_
CFBundleIdentifier_
CFBundleInfoDictionaryVersion\CFBundleName_
CFBundlePackageType_
CFBundleShortVersionString_
CFBundleSupportedPlatforms_
CFBundleVersionZDTCompiler_
DTPlatformBuild^DTPlatformName_
DTPlatformVersionZDTSDKBuildYDTSDKNameWDTXcode\DTXcodeBuild_
LSBackgroundOnly_
MinimumOSVersion^UIDeviceFamily_
@com.apple.coreservices.appleidauthentication.keychainaccessgroupW16B2657
WEnglishXsharingd_
com.apple.sharingdS6.0TAPPLU933.1
iPhoneSimulator_
"com.apple.compilers.llvm.clang.1_0P_
iphonesimulatorT11.1U15B64_
iphonesimulator11.1T0900U9A229
./01
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1957431478</string>
<key>application-identifier</key>
<string>com.apple.sharingd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.BTServer.appleMfgDataAdvertising</key>
<true/>
<key>com.apple.BTServer.appleMfgDataScanner</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>carrier-settings</string>
<string>phone</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.install-system-apps</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.carousel.onWristMonitor.actions</key>
<array>
<string>forceWristDetect</string>
</array>
<key>com.apple.cdp.followup</key>
<true/>
<key>com.apple.corecapture.manager-access</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.homekit.background-mode</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.device.remote-session</key>
<true/>
<key>com.apple.keystore.device.uuid</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.launchservices.MoveDocumentOnOpen</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.peer_ranging</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.networkd_privileged</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>GetActivationState</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>EthernetMacAddress</string>
<string>UniqueDeviceID</string>
<string>WifiAddressData</string>
<string>WifiAddress</string>
</array>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SharingAssets</string>
<string>com.apple.MobileAsset.SharingDeviceAssets</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.communicationsfilter</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.ids.continuity</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.madrid</string>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.continuity.unlock</string>
<string>com.apple.private.alloy.nearby</string>
<string>com.apple.private.alloy.sms</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.continuity.unlock</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.neagent</key>
<true/>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.nehelper.privileged</key>
<true/>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.skywalk.register-kernel-pipe</key>
<true/>
<key>com.apple.private.skywalk.register-user-pipe</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.purplebuddy.budd.access</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyAction.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyInfo.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-Prox.log</string>
<string>/private/var/mobile/Library/Preferences/com.apple.Home.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.analyticsd</string>
<string>com.apple.bulletinboard.observerconnection</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.CloudPhotoDerivativeGenerator</string>
<string>com.apple.corecaptured</string>
<string>com.apple.corefollowup.agent</string>
<string>com.apple.diagnosticextensionsd.sharing-wakeup</string>
<string>com.apple.homed.xpc</string>
<string>com.apple.Honeybee.event-notify</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.networkd_privileged</string>
<string>com.apple.PairingManager</string>
<string>com.apple.pluginkit.pkd</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
<string>com.apple.server.bluetooth.le.pipe.xpc</string>
<string>com.apple.SharingServices</string>
<string>com.apple.studentd</string>
<string>com.apple.sysdiagnose.service.xpc</string>
<string>com.apple.tailspind</string>
</array>
<key>com.apple.security.exception.mach-register.global-name</key>
<array>
<string>com.apple.sharingd.aps</string>
</array>
<key>com.apple.security.exception.managed-preference.read-only</key>
<array>
<string>com.apple.Home</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.sharedpclogging</string>
</array>
<key>com.apple.sharing.Client</key>
<true/>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.PasswordGranting</key>
<true/>
<key>com.apple.sharing.PasswordSharing</key>
<true/>
<key>com.apple.sharing.RemoteInteractionSession</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.sharing.Session</key>
<true/>
<key>com.apple.springboard.allowallcallurls</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.studentd-access</key>
<true/>
<key>com.apple.tailspin.dump-output</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-call-capabilities</string>
<string>access-call-providers</string>
<string>access-calls</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.airplay.pairing</string>
<string>com.apple.continuity.encryption</string>
<string>com.apple.continuity.unlock</string>
<string>com.apple.coreservices.appleidauthentication.keychainaccessgroup</string>
<string>com.apple.coreservices.appleidauthentication</string>
<string>com.apple.hap.pairing</string>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.pairing</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.sharing.appleidauthentication</string>
<string>com.apple.sharing.cdb</string>
<string>com.apple.Sharing</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>sharingd</string>
</array>
</dict>
</plist>
Qpe 
