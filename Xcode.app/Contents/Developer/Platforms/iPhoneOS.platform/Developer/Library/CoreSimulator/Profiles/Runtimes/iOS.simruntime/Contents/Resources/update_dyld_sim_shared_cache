NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
Y@333333
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN13StubOptimizerI9Pointer64I12LittleEndianEE22optimizeArm64CallSitesERNS_6vectorIP15BranchPoolDylibIS5_ENS_9allocatorISA_EEEEEUlhyyRjE_NSB_ISG_EEFbhyySF_EEE
NSt3__110__function6__baseIFbhyyRjEEE
ZN13StubOptimizerI9Pointer64I12LittleEndianEE22optimizeArm64CallSitesERNSt3__16vectorIP15BranchPoolDylibIS2_ENS4_9allocatorIS8_EEEEEUlhyyRjE_
NSt3__110__function6__funcIZN13StubOptimizerI9Pointer64I12LittleEndianEE20optimizeArmCallSitesEvEUlhyyRjE_NS_9allocatorIS8_EEFbhyyS7_EEE
ZN13StubOptimizerI9Pointer64I12LittleEndianEE20optimizeArmCallSitesEvEUlhyyRjE_
NSt3__110__function6__funcIZN13StubOptimizerI9Pointer32I12LittleEndianEE22optimizeArm64CallSitesERNS_6vectorIP15BranchPoolDylibIS5_ENS_9allocatorISA_EEEEEUlhyyRjE_NSB_ISG_EEFbhyySF_EEE
ZN13StubOptimizerI9Pointer32I12LittleEndianEE22optimizeArm64CallSitesERNSt3__16vectorIP15BranchPoolDylibIS2_ENS4_9allocatorIS8_EEEEEUlhyyRjE_
NSt3__110__function6__funcIZN13StubOptimizerI9Pointer32I12LittleEndianEE20optimizeArmCallSitesEvEUlhyyRjE_NS_9allocatorIS8_EEFbhyyS7_EEE
ZN13StubOptimizerI9Pointer32I12LittleEndianEE20optimizeArmCallSitesEvEUlhyyRjE_
@(#)PROGRAM:update_dyld_sim_shared_cache  PROJECT:dyld-514.3
fffff
-debug
-verbose
-tvOS
-iOS
-watchOS
-runtime_dir
-runtime_dir missing path argument
-cache_dir
-cache_dir missing path argument
-arch
-arch missing argument
-force
update_dyld_sim_shared_cache: unknown option: %s
missing -cache_dir <path> option to specify directory in which to write cache file(s)
missing -runtime_dir <path> option to specify directory which is root of simulator runtime)
mkpath_np fail: %d
x86_64
main
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/shared-cache/update_dyld_sim_shared_cache.cpp
0 && "macOS does not have a simulator"
0 && "bridgeOS does not have a simulator"
time to scan file system and construct lists of mach-o files: %ums
/dyld_shared_cache_
update_dyld_sim_shared_cache: warning: %s could not use in dylid cache: %s
{MappedMachO={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}^{mach_header}Qb1b1b62QQ}16@?0r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}8
update_dyld_sim_shared_cache: warning: %s not found in initial scan, but adding required dylib %s
", "
update_dyld_shared_cache: warning: %s rejected from cached dylibs: %s (%s)
make %s cache with %lu dylibs, %lu other dylibs, %lu programs
update_dyld_sim_shared_cache: warning: %s %s
update_dyld_sim_shared_cache: %s
main_block_invoke
results.cacheContent != nullptr
.map
v16@?0Q8
B16@?0r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}8
.dylib
v24@?0r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}8r^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
/usr/share
/usr/local/include
/bin
/sbin
/usr
/System
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
/usr/lib/system/libsystem_kernel.dylib
/usr/lib/system/libsystem_platform.dylib
/usr/lib/system/libsystem_pthread.dylib
/usr/lib/system/introspection/
/usr/local/
.app/
update_dyld_sim_shared_cache: warning: %s double-slash in install name %s
update_dyld_sim_shared_cache: warning: %s skipping because of duplicate install name %s
update_dyld_sim_shared_cache: warning: %s skipping because of bad install name %s
skipped wrong platform binary: %s
rebuilding dyld cache because dylib changed: %s
v32@?0r*8Q16Q24
Could not find dependency '
v44@?0r*8B16B20B24I28I32^B36
mapping  %s %4lluMB 0x%0llX -> 0x%0llX
mapping  %s %4lluKB 0x%0llX -> 0x%0llX
v36@?0r^v8Q16Q24I32
%16s 0x%08llX -> 0x%08llX
v52@?0r*8I16I20Q24Q32C40^B44
v24@?0r^{mach_header=IiiIIII}8r*16
TypedContentBuffer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/ClosureBuffer.cpp
::vm_allocate(mach_task_self(), &bufferAddress, _size, VM_FLAGS_ANYWHERE) == 0
addItem
!_readOnly
((char*)_currentEnd + len) < ((char*)_buffer + _size)
vmBuffer
_readOnly
vmBufferSize
count
forEach
v16@?0r*8
cacheIndent_block_invoke
length == sizeof(CacheIdent)
v24@?0r^v8Q16
cacheIndent
ident != nullptr
targetPath
path != nullptr
closure
result != nullptr
imageGroup
operator[]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/LaunchCache.h
idx < _count
x86_64h
i386
arm64
arm64e
armv7s
armv7k
sim-x86
/usr/lib/system/libdispatch.dylib
missing required minimum set of dylibs
cache overflow: %lluMB (max %lluMB)
__LINKEDIT
to prevent cache overflow, not caching %s
cache overflow, tried evicting %ld leaf daylibs, but still too big: %lluMB (max %lluMB)
could not allocate buffer
missing mapping for %s
building closure for '%s': %s
local symbols omitted because cache buffer overflow
cache overflow after optimizations.  %lluMB (max %lluMB)
time to copy and bind cached dylibs: %ums
time to optimize LINKEDITs: %ums
time to build ImageGroup of %lu cached dylibs: %ums
time to build ImageGroup of %lu other dylibs: %ums
time to build %lu closures: %ums
time to compute slide info: %ums
time to compute UUID and codesign cache file: %ums
dyld_v1
writeCacheHeader
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/shared-cache/CacheBuilder.cpp
magic.length() == 15
stringOffset < (firstImage->address - mappings[0].address)
copyRawSegments
pos != mapping.end()
adjustAllImagesForNewSegmentLocations
dependent dylib %s not found
B44@?0I8r*12^v20r^^{mach_header}28^^v36
bind ordinal BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE not supported in dylibs in dyld shared cache (found in %s)
bind ordinal BIND_SPECIAL_DYLIB_FLAT_LOOKUP not supported in dylibs in dyld shared cache (found in %s)
cannot find symbol %s, needed in dylib %s
text relocs not supported for shared cache binding in %s
bad bind type (%d) in %s
v60@?0I8Q12C20i24Q28r*36B44B48^B52
%s in dylib %s
adding branch pool at 0x%llX
v68@?0r*8I16I20Q24Q32C40I44Q48C56^B60
__DATA_CONST
__DATA_DIRTY
/usr/lib/system/libcorecrypto.dylib
_fipspost_precalc_hmac
v44@?0r*8Q16C24C28S32^B36
Could not find _fipspost_precalc_hmac, skipping FIPS sealing
__TEXT
__text
v52@?0r*8r*16I24r^v28Q36^B44
Could not find /usr/lib/system/libcorecrypto.dylib, skipping FIPS sealing
codeSigningDigestMode has unknown, unexpected value %d, bailing out.
com.apple.dyld.cache.
.release
.development
cache buffer too small to hold code signature (buffer size=%lldMB, signature size=%ldMB, free space=%lldMB)
cache buffer too small to hold group[0] info (buffer size=%lldMB, group size=%ldMB, free space=%lldMB)
cache buffer too small to hold group[1] info (buffer size=%lldMB, group size=%ldMB, free space=%lldMB)
cache buffer too small to hold all closures (buffer size=%lldMB, closures size=%ldMB, free space=%ldMB)
addClosures
(size % 4) == 0
cache buffer too small to hold all closures trie (buffer size=%lldMB, trie size=%ldMB, free space=%ldMB)
%2.2x
DATA pointer for sliding, out of range
pointer not 4-byte aligned in DATA offset 0x%08lX
NULL pointer asked to be slid in %s at DATA region offset 0x%04lX of %s
writeSlideInfoV2
_slideInfoFileOffset != 0
kernel slide info overflow buffer
rebase overflow in page extras
rebase pointer does not point within cache. lastOffset=0x%04X, seg=%s, dylib=%s
makeRebaseChain
nOffset != 0
unordered_map::at: key not found
Adjustor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/shared-cache/AdjustDylibSegments.cpp
(mh->magic() == MH_MAGIC) || (mh->magic() == MH_MAGIC_64)
missing LC_SEGMENT_SPLIT_INFO in %s
malformed split seg info in %s
bad kind value (%llu) in %s
malformed uleb128 extends beyond trie
uleb128 too big for 64-bits
DYLD_CACHE_ADJ_V2_DELTA_32 can't be adjust by 0x%016llX in %s
bad DYLD_CACHE_ADJ_V2_POINTER_32 value not as expected at address 0x%llX in %s
bad DYLD_CACHE_ADJ_V2_POINTER_64 value not as expected at address 0x%llX in %s
DYLD_CACHE_ADJ_V2_IMAGE_OFF_32 can't be adjust to 0x%016llX in %s
DYLD_CACHE_ADJ_V2_ARM64_ADRP can't be adjusted that far in %s
can't adjust off12 scale=16 instruction by %lld bytes at mapped address=%p in %s
off12 scale=16 instruction points outside its page at mapped address=%p in %s
can't adjust off12 scale=2 instruction by %lld bytes at mapped address=%p in %s
off12 scale=2 instruction points outside its page at mapped address=%p in %s
can't adjust off12 scale=4 instruction by %lld bytes at mapped address=%p in %s
off12 scale=4 instruction points outside its page at mapped address=%p in %s
can't adjust off12 scale=8 instruction by %lld bytes at mapped address=%p in %s
off12 scale=8 instruction points outside its page at mapped address=%p in %s
ADD off12 uses shift at mapped address=%p in %s
unknown off12 instruction 0x%08X at 0x%0llX in %s
two DYLD_CACHE_ADJ_V2_THUMB_MOVW_MOVT in a row but not paried in %s
two DYLD_CACHE_ADJ_V2_THUMB_MOVW_MOVT in a row but target different addresses in %s
two DYLD_CACHE_ADJ_V2_ARM_MOVW_MOVT in a row but not paired in %s
two DYLD_CACHE_ADJ_V2_ARM_MOVW_MOVT in a row but target different addresses in %s
unknown split seg kind=%d in %s
unknown rebase opcode 0x%02X in %s
unknown rebase type 0x%02X in %s
slide not known for dylib address 0x%llX in %s
adjustInstruction
(instruction & 0x8000FBF0) == 0x0000F2C0
LINKEDIT overflow in %s
dyld shared cache does not support LC_RPATH found in %s
malformed exports trie in %s
$ld$
.objc_class_name
.objc_category_name
duplicate LC_RPATH (%s) in %s
@executable_path/
LC_RPATH to nowhere (%s) in %s
LC_RPATH uses @executable_path in %s
@executable_path
@loader_path/
@loader_path
LC_RPATH with unknown @ variable (%s) in %s
LC_RPATH is absolute path (%s) in %s
v24@?0r*8^B16
load path is file system relative (%s) in %s
required dylib '%s' not found
required dylib '%s' not found, needed by '%s'
required dylib '%s' not found, needed by '%s'.  Did try: %s
found '%s' but it was built for different platform '%s' than required '%s'.  Needed by '%s'
found '%s' which is not a dylib.  Needed by '%s'
found '%s' which has compat version (%s) which is less than required (%s).  Needed by '%s'
/usr/lib/system/
/usr/lib/libSystem.
recursiveBuildInitBeforeInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/shared-cache/ImageProxy.cpp
_group == 0
v12@?0(ImageRef=I{?=b2b14b16})8
_dependentsKind[depIndex] == LinkKind::weak
pcrel text rebasing not supported
unknown rebase type
v32@?0I8Q12C20^B24
malformed executable, unknown bind type (%d)
@main
@flat
ordinal %d not supported
symbol '%s' not found, expected in '%s'
dylib ordinal %d not found and not weak
@weak_def
weak def for %s can't find underlying rebase/bind in %s
v48@?0B8I12Q16Q24r*32^B40
offset < 0xFFFF
/../
@rpath/
'%s' %s
could not find '%s'
could not use '%s'. Did try: %s
file not open()able '%s' errno=%d
file not found '%s'
adding dependents to %s: %s
v20@?0^{ImageProxy=^{mach_header}QQQ^{Image}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}BBCSB{Diagnostics=^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >={__tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > >=Q}}}B}{vector<dyld3::ImageProxy *, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}^^{ImageProxy}{__compressed_pair<dyld3::ImageProxy **, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}}}{vector<dyld3::launch_cache::Image::LinkKind, std::__1::allocator<dyld3::launch_cache::Image::LinkKind> >=^i^i{__compressed_pair<dyld3::launch_cache::Image::LinkKind *, std::__1::allocator<dyld3::launch_cache::Image::LinkKind> >=^i}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{InitOrderInfo={vector<dyld3::launch_cache::binary_format::ImageRef, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)^(ImageRef){__compressed_pair<dyld3::launch_cache::binary_format::ImageRef *, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)}}{vector<dyld3::ImageProxy *, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}^^{ImageProxy}{__compressed_pair<dyld3::ImageProxy **, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}}}}{vector<dyld3::launch_cache::binary_format::ImageRef, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)^(ImageRef){__compressed_pair<dyld3::launch_cache::binary_format::ImageRef *, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)}}(ImageRef=I{?=b2b14b16})BBBBBBB}8i16
no loadable mach-o in %s
makeDlopenGroup
gnum == proxies.size()
/Applications/iBooks.app/Contents/MacOS/iBooks
/sbin/launchd
/usr/local/sbin/launchd.debug
/usr/local/sbin/launchd.development
makeClosureBinary
mainProgProxy != nullptr
_images.size() >= 1
black listed program
.appex/
%s could not be added to closure because %s
depends on invalid dylib
/usr/lib/system/libdyld.dylib
can't find libdyld.dylib
__ZN5dyld318entryVectorForDyldE
can't find dyld entry point into libdyld.dylib
dyld entry point at offset 0x%0X not found in libdyld.dylib
libdyld.dylib vector version is incompatible with this dyld cache builder
libdyld.dylib closures binary format version is incompatible with this dyld cache builder
/usr/lib/libSystem.dylib
/usr/lib/libSystem.B.dylib
can't find libSystem.dylib
populateGroupWriter
(imageParser.inDyldCache() == buildingDylibsInCache) && "all images must be same type"
v12@?0I8
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
/System/Library/Frameworks/IOKit.framework/IOKit
fixup problem in %s: %s
cacheGroup->_basedOn != nullptr
bad interposing implementation in %s
bad interposing target in %s
populateGroupWriter_block_invoke
interposeReplacement.isGroupImageTarget(replacementGroup, replacementIndexInGroup, replacementOffsetInImage)
replacementGroup == 2
replacementOffsetInImage < 0xFFFFFFFFULL
v36@?0I8Q12Q20Q28
v36@?0r*8Q16B24^B28
buildingDylibsInCache == (_patchTable != nullptr)
.xctoolchain
.platform
dyld cache uuid has changed
unable to read cache header from requesting process (addr=0x%llX), kern err=%d
unable to allocate space to copy custom dyld cache (size=0x%llX), kern err=%d
unable to mach_vm_remap region %d custom dyld cache (request addr=0x%llX, size=0x%llX), kern err=%d, localBuffer=0x%lX, localMapTarget=0x%llX
-XXXXXX
/tmp/
com.apple.dyld.cache.cache
v8@?0
can't open file '%s', errno=%d
can't stat open file '%s', errno=%d
file too small '%s'
apfs
mmap() for file at %s failed, errno=%d
Network read for file at %s failed, errno=%d
Network read udnerrun for file at %s, expected %lld bytes, got  %zd bytes
com.apple.dyld.cache-builder.warnings
[%s] %s
DYLD_LIBRARY_PATH
DYLD_FRAMEWORK_PATH
DYLD_FALLBACK_FRAMEWORK_PATH
DYLD_FALLBACK_LIBRARY_PATH
DYLD_INSERT_LIBRARIES
DYLD_IMAGE_SUFFIX
DYLD_ROOT_PATH
/usr/local/lib
/usr/lib
/Library/Frameworks
/System/Library/Frameworks
.framework/
not a fat file
fat header too large: %u entries
slice %d extends beyond end of file
v40@?0I8I12r^v16Q24^B32
armv7
could not use '%s' because it is not a mach-o file
could not use '%s' because it is does not contain required architecture %s
could not use '%s' because it is not a dylib, bundle, or executable
could not use '%s' because the high bit of mach_header flags is reserved for images in dyld cache
could not use '%s' because it was built for a different platform
could not use '%s' because it is a static executable
load commands exceed length of file
load commands exceed length of __TEXT segment
load command #%d name offset (%u) outside its size (%u)
load command #%d string extends beyond end of load command
v24@?0r^{load_command=II}8^B16
load command size too small for LC_SEGMENT_64
segment load command size 0x%X will not fit whole number of sections
load command size 0x%X does not match nsects %d
load command size too small for LC_SEGMENT
__TEXT segment permissions is not 'r-x'
__LINKEDIT segment permissions is not 'r--'
%s segment permissions has invalid bits set
%s segment content extends beyond end of file
%s segment vm range wraps
missing __TEXT segment
missing __LINKEDIT segment
segment %s vm range overlaps segment %s
segment %s file content overlaps segment %s
/usr/lib/libnetsnmp.5.dylib
segment load commands out of order with respect to layout for %s and %s
section %s size too large 0x%llX
section %s start address 0x%llX is before containing segment's address 0x%0llX
section %s end address 0x%llX is beyond containing segment's end address 0x%0llX
section %s start address 0x%X is before containing segment's address 0x%0X
section %s end address 0x%X is beyond containing segment's end address 0x%0X
rebase opcodes
bind opcodes
weak bind opcodes
lazy bind opcodes
exports trie
local relocations
external relocations
indirect symbol table
shared cache info
function starts
data in code
symbol table
symbol table strings
code signature
malformed mach-o contains LC_DYLD_INFO and local relocations
malformed mach-o contains LC_DYLD_INFO and external relocations
malformed mach-o misssing LC_DYLD_INFO and LC_DYSYMTAB
start of LINKEDIT
LINKEDIT overlap of %s and %s
LINKEDIT content '%s' extends beyond end of segment
mis-aligned LINKEDIT content '%s'
LINKEDIT out of order %s
unknown
macOS
watchOS
unknown platform
%d.%d.%d
file does not start with MH_MAGIC[_64]
malformed load command #%d, size too small %d
malformed load command #%d, size too large 0x%X
installName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/MachOParser.cpp
header()->filetype == MH_DYLIB
getDylibInstallName(&result, &ignoreVersion, &ignoreVersion)
forEachDependentDylib_block_invoke
dylibCmd->dylib.name.offset < cmd->cmdsize
getContentForVMAddr
0 && "address not found in segment"
v76@?0r*8I16Q20r*28I36Q40Q48I56I60I64^B68
v72@?0r*8r*16I24Q28r^v36Q44I52I56I60^B64
could not find re-exported dylib %s
findExportedSymbol
ordinal >= 1
ordinal <= dependentDylibCount()
dependent dylib %lld not found for re-exported symbol %s
unsupported exported symbol kind. flags=%llu at node offset=0x%0lX
LC_DYLD_INFO load command size wrong
multiple LC_DYLD_INFO load commands
LC_SYMTAB load command size wrong
multiple LC_SYMTAB load commands
LC_DYSYMTAB load command size wrong
multiple LC_DYSYMTAB load commands
LC_SEGMENT_SPLIT_INFO load command size wrong
multiple LC_SEGMENT_SPLIT_INFO load commands
LC_FUNCTION_STARTS load command size wrong
multiple LC_FUNCTION_STARTS load commands
LC_DATA_IN_CODE load command size wrong
multiple LC_DATA_IN_CODE load commands
LC_CODE_SIGNATURE load command size wrong
multiple LC_CODE_SIGNATURE load commands
LC_UUID load command size wrong
multiple LC_UUID load commands
LC_VERSION_* load command size wrong
multiple LC_VERSION_MIN_* load commands
LC_BUILD_VERSION load command size wrong
multiple LC_BUILD_VERSION load commands
LC_ENCRYPTION_INFO load command size wrong
multiple LC_ENCRYPTION_INFO load commands
LC_ENCRYPTION_INFO found in 64-bit mach-o
LC_ENCRYPTION_INFO_64 load command size wrong
multiple LC_ENCRYPTION_INFO_64 load commands
LC_ENCRYPTION_INFO_64 found in 32-bit mach-o
LC_DYSYMTAB but no LC_SYMTAB load command
malformed trie node, terminalSize=0x%llX extends past end of trie
malformed trie node, child node extends past end of trie
malformed trie child, nodeOffset=0x%llX out of range
malformed trie child, cycle to nodeOffset=0x%llX
malformed trie too deep
malformed uleb128
uleb128 too big for uint64
malformed sleb128
__objc_imageinfo
__DATA
__image_info
__OBJC
load
__RESTRICT
__restrict
Not MH_DYLIB
/usr/lib/
/System/Library/
Not in '/usr/lib/' or '/System/Library/'
Not built with two level namespaces
_profile.dylib
_debug.dylib
_debug
Variant image
Missing split seg info
Depends on cache inelegible dylibs
Has interposing tuples
no __TEXT segment
-init does not point within __TEXT segment
initializer section %s/%s has bad size
initializer section %s/%s is not pointer aligned
initializer 0x%0llX does not point within __TEXT segment
initializer 0x%0X does not point within __TEXT segment
malformed exports trie
%s missing preceding REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s segment index %d too large
%s current segment offset 0x%08llX beyond segment size (0x%08llX)
%s pointer rebase is in non-writable segment
%s pointer rebase is in executable segment
%s text rebase is in segment that does not support text relocations
%s text rebase is in writable segment
%s pointer rebase is in non-executable segment
%s unknown rebase type %d
B16@?0Q8
REBASE_OPCODE_DO_REBASE_IMM_TIMES
REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB
REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB
unknown rebase opcode 0x%02X
local relocation has wrong r_length
local relocation has wrong r_type
v56@?0I8Q12B20i24r*28B36B40B44^B48
%s missing preceding BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM
%s missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL
%s has library ordinal too large (%d) max (%d)
%s has unknown library special ordinal (%d)
%s pointer bind is in non-writable segment
%s pointer bind is in executable segment
%s text bind is in segment that does not support text relocations
%s text bind is in writable segment
%s pointer bind is in non-executable segment
%s unknown bind type %d
BIND_OPCODE_DO_BIND
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB
bad bind opcode 0x%02X
bad lazy bind opcode 0x%02X
external relocation has wrong r_length
external relocation has wrong r_type
unexpected dylib ordinal in weak binding info
bad weak bind opcode 0x%02X
S_ATTR_SELF_MODIFYING_CODE section type only valid in old i386 binaries
section %s overflows indirect symbol table
indirect symbol[%d] = %d which is invalid symbol index
symbol[%d] string offset out of range
__interpose
interposing section %s/%s has bad size
interposing section %s/%s is not pointer aligned
interposing section %s/%s is not in a segment
Optimizing objc metadata:
  cache type is %s
production
development
/libobjc.
__objc_opt_ro
__objc_opt_rw
__objc_opt_ptrs
libobjc's read-only section missing (metadata not optimized)
libobjc's read/write section missing (metadata not optimized)
libobjc's pointer list section missing (metadata not optimized)
libobjc's read-only section has bad content
libobjc's read-only section is too small (metadata not optimized)
libobjc's read-only section version is unrecognized (metadata not optimized)
libobjc's pointer list section is too small (metadata not optimized)
  uniqued  %6lu selectors
  updated  %6lu selector references
  selector table occupancy %u/%u (%u%%)
Some Objective-C class has a superclass that is weak-import and missing from the cache.
  recorded % 6ld classes
  found    % 6ld duplicate classes
  class table occupancy %u/%u (%u%%)
  sorted   % 6ld method lists
  uniqued  % 6ld protocols
  protocol table occupancy %u/%u (%u%%)
  updated  % 6ld protocol references
  updated  % 6ld ivar offsets
  %lu/%llu bytes (%d%%) used in libobjc read-only optimization section
  %lu/%llu bytes (%d%%) used in libobjc read/write optimization section
  wrote objc metadata optimization version %d
invalid vmaddr 0x%0llX in ObjC data
libobjc's read/write section is too small (metadata not optimized)
objc_header_info_ro_t
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/shared-cache/ObjC2Abstraction.hpp
header_vmaddr(cache) == (uint64_t)cache->vmAddrForContent((void*)mh)
invalid content pointer %p in ObjC data
__objc_methname
__module_info
__protocol
__message_refs
index out of range in section %s
__objc_selrefs
__objc_msgrefs
__objc_classlist
__objc_catlist
__objc_protolist
selector section too small (metadata not optimized)
perfect hash failed (metadata not optimized)
selector offset too big (metadata not optimized)
Superclass of class '%s' is weak-import and missing.
class list busted (metadata not optimized)
class offset too big (metadata not optimized)
header offset too big (metadata not optimized)
update_dyld_shared_cache: %u duplicates of Objective-C class %s
objc protocol is too big
libobjc's Protocol class symbol not found (metadata not optimized)
libobjc's read-write section is too small (metadata not optimized)
_TtP
Swift
%.*s.%.*s
protocol list busted (metadata not optimized)
protocol offset too big (metadata not optimized)
__objc_protorefs
imageByIndex
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/LaunchCacheWriter.cpp
imageIndex < imageCount()
setImageFileMtimeAndInode
!_imageFileInfoIsCdHash
setImageCdHash
_imageFileInfoIsCdHash
setImageFairPlayRange
_isDiskImage
(offset & 0x3FFF) == 0
(size & 0x3FFF) == 0
(offset & 0xFFF) == 0
(size & 0xFFF) == 0
offset < (_pageSize*16)
setImageSliceOffset
setImageCodeSignatureLocation
setImageDependent
depIndex < image.dependentsArrayCount
imageDependent
setImagePatchLocations
image.patchStartIndex + image.patchCount == _patchPool.size()
expandOpcodes
offset < _pageSize
page1[0x%03X] = 0x%016llX, page2[0x%03X] = 0x%016llX
page1[0x%03X] = 0x%016X, page2[0x%03X] = 0x%016X
%s offset=0x%04X: 
%s               
bind64
bind32
rebase64
rebase32
rebaseText32
bindText32
bindTextRel32
bindJmpRel32
done
setPageOffset(%d)
incPageOffset(%d)
setOrdinal(%d)
incOrdinal(%d)
          
repeat(%d times, next %d opcodes)
makeFixupOpcodesForPage
delta4*4 < _pageSize
!_is64
0 && "ignore fixup types should have been removed"
start
stride %d
repeatBytes < 15
setImageFixups
segment %d has overlapping fixups at offset 0x%0llX and 0x%0llX
_diskImages[imageIndex].targetsArrayStartIndex == start
_diskImages[imageIndex].targetsArrayCount == count
Stub elimination optimization:
  cache contains %u call sites of which %u were direct bound and %u were bound through islands
__stubs
dyld_shared_cache_branch_islands
<unused>
___bzero
___cxa_atexit
___cxa_throw
__longjmp
__objc_autoreleasePoolPop
_accept
_access
_asctime
_asctime_r
_asprintf
_atoi
_atol
_atoll
_calloc
_chmod
_chown
_close
_confstr
_ctime
_ctime_r
_dispatch_after
_dispatch_after_f
_dispatch_async
_dispatch_async_f
_dispatch_barrier_async_f
_dispatch_group_async
_dispatch_group_async_f
_dispatch_source_set_cancel_handler
_dispatch_source_set_event_handler
_dispatch_sync_f
_dlclose
_dlopen
_dup
_dup2
_endgrent
_endpwent
_ether_aton
_ether_hostton
_ether_line
_ether_ntoa
_ether_ntohost
_fchmod
_fchown
_fclose
_fdopen
_fflush
_fopen
_fork
_fprintf
_free
_freopen
_frexp
_frexpf
_frexpl
_fscanf
_fstat
_fstatfs
_fstatfs64
_fsync
_ftime
_getaddrinfo
_getattrlist
_getcwd
_getgrent
_getgrgid
_getgrgid_r
_getgrnam
_getgrnam_r
_getgroups
_gethostbyaddr
_gethostbyname
_gethostbyname2
_gethostent
_getifaddrs
_getitimer
_getnameinfo
_getpass
_getpeername
_getpwent
_getpwnam
_getpwnam_r
_getpwuid
_getpwuid_r
_getsockname
_getsockopt
_gmtime
_gmtime_r
_if_indextoname
_if_nametoindex
_index
_inet_aton
_inet_ntop
_inet_pton
_initgroups
_ioctl
_lchown
_lgamma
_lgammaf
_lgammal
_link
_listxattr
_localtime
_localtime_r
_longjmp
_lseek
_lstat
_malloc
_malloc_create_zone
_malloc_default_purgeable_zone
_malloc_default_zone
_malloc_good_size
_malloc_make_nonpurgeable
_malloc_make_purgeable
_malloc_set_zone_name
_mbsnrtowcs
_mbsrtowcs
_mbstowcs
_memchr
_memcmp
_memcpy
_memmove
_memset
_mktime
_mlock
_mlockall
_modf
_modff
_modfl
_munlock
_munlockall
_objc_autoreleasePoolPop
_objc_setProperty
_objc_setProperty_atomic
_objc_setProperty_atomic_copy
_objc_setProperty_nonatomic
_objc_setProperty_nonatomic_copy
_objc_storeStrong
_open
_opendir
_poll
_posix_memalign
_pread
_printf
_pthread_attr_getdetachstate
_pthread_attr_getguardsize
_pthread_attr_getinheritsched
_pthread_attr_getschedparam
_pthread_attr_getschedpolicy
_pthread_attr_getscope
_pthread_attr_getstack
_pthread_attr_getstacksize
_pthread_condattr_getpshared
_pthread_create
_pthread_getschedparam
_pthread_join
_pthread_mutex_lock
_pthread_mutex_unlock
_pthread_mutexattr_getprioceiling
_pthread_mutexattr_getprotocol
_pthread_mutexattr_getpshared
_pthread_mutexattr_gettype
_pthread_rwlockattr_getpshared
_pwrite
_rand_r
_read
_readdir
_readdir_r
_readv
_readv$UNIX2003
_realloc
_realpath
_recv
_recvfrom
_recvmsg
_remquo
_remquof
_remquol
_scanf
_send
_sendmsg
_sendto
_setattrlist
_setgrent
_setitimer
_setlocale
_setpwent
_shm_open
_shm_unlink
_sigaction
_sigemptyset
_sigfillset
_siglongjmp
_signal
_sigpending
_sigprocmask
_sigwait
_snprintf
_sprintf
_sscanf
_stat
_statfs
_statfs64
_strcasecmp
_strcat
_strchr
_strcmp
_strcpy
_strdup
_strerror
_strerror_r
_strlen
_strncasecmp
_strncat
_strncmp
_strncpy
_strptime
_strtoimax
_strtol
_strtoll
_strtoumax
_tempnam
_time
_times
_tmpnam
_tsearch
_unlink
_valloc
_vasprintf
_vfprintf
_vfscanf
_vprintf
_vscanf
_vsnprintf
_vsprintf
_vsscanf
_wait
_wait$UNIX2003
_wait3
_wait4
_waitid
_waitid$UNIX2003
_waitpid
_waitpid$UNIX2003
_wcslen
_wcsnrtombs
_wcsrtombs
_wcstombs
_wordexp
_write
_writev
_writev$UNIX2003
__ZdaPv
__ZdlPv
__Znam
__Znwm
symbol index out of range (%d of %d) for stub at addr 0x%0llX in %s
symbol string offset out of range (%u of %u) for stub at addr 0x%0llX in %s
symbol index out of range (%d of %d) for lazy pointer at addr 0x%0llX in %s
symbol string offset out of range (%u of %u) for lazy pointer at addr 0x%0llX in %s
lazy pointer at 0x%0llX does not point to 4-byte aligned address(0x%0llX) in %s
first instruction of stub (0x%08X) is not ADRP for stub at addr 0x%0llX in %s
second instruction of stub (0x%08X) is not LDR for stub at addr 0x%0llX in %s
first instruction of stub (0x%08X) is not 'ldr ip, pc + 12' for stub at addr 0x%0llX in %s
second instruction of stub (0x%08X) is not 'add ip, pc, ip' for stub at addr 0x%0llX in %s
third instruction of stub (0x%08X) is not 'ldr pc, [ip]' for stub at addr 0x%0llX in %s
bad kind (%llu) value in %s
stub target mismatch
pool full. Can't optimizer branch to %s from 0x%llX in %s
BranchPoolDylib<P>::getForwardBranch: nextPool unreachable
BranchPoolDylib<P>::getBackBranch: nextPool unreachable
non-branch instruction at 0x%0llX in %s
stub target mismatch at callsite 0x%0llX in %s
thumb branch out of range at 0x%0X in %s
no pc-rel thumb branch instruction that switches to arm mode at 0x%0X in %s
not b/bl/blx at 0x%0X in %s
  island pool at 0x%0llX has %u stubs and stringPool size=%lu
makeGroupValue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/LaunchCacheReader.cpp
groupIndex != 0
groupIndex < 255
imageIndexInGroup < 4096
{invalid target}
{cache+
{absolute:
{otherDylib[
{closure[
{dlopen-group-
{dynamic image='
' symbol='
Closure
closure->magic == binary_format::Closure::magicV1
imageBinary
index <_binaryData->imagesPoolCount
index
image(index)._binaryData == img
stringFromPool
offset < _binaryData->stringsPoolSize
dependentPool
index < _binaryData->dependentsPoolCount
segmentPool
index < _binaryData->segmentsPoolCount
forEachDyldCachePatch
_binaryData->imagesEntrySize == sizeof(binary_format::CachedImage) && "only callable on group-0 in shared cache"
patchTargetIndex < _binaryData->cachePatchTableCount
offsetsIndex < _binaryData->cachePatchOffsetsCount
v24@?0(ImageRef=I{?=b2b14b16})8(ImageRef=I{?=b2b14b16})12^B16
v28@?0I8I12B16^B20
forEachDependentImage
!_binaryData->isInvalid
v32@?0I8{Image=^{Image}}12i20^B24
forEachDiskSegment
isDiskImage()
forEachCacheSegment
!isDiskImage()
v48@?0I8I12I16q20Q28C36^B40
v40@?0I8Q12Q20C28^B32
forEachInitializer
startIndex + initCount <= group().initializerOffsetsCount()
forEachInitBefore
startIndex + initCount <= endIndex
asDiskImage
_binaryData->isDiskImage
asCachedImage
!_binaryData->isDiskImage
cacheOffset
forEachFixup
0 && "bad opcode"
segFixups->pageCount*segFixups->pageSize <= segContent.size
ordinalsIndexInGroupPool < group().targetValuesCount()
forEachFixup_block_invoke
targetOrdinal < maxOrdinal
v28@?0I8i12I16^B20
0x%08llX
%llu
__dyld
Merged LINKEDIT:
  weak bindings size:      %5uKB
  exports info size:       %5uKB
  bindings size:           %5uKB
  lazy bindings size:      %5uKB
  function starts size:    %5uKB
  data in code size:       %5uKB
  symbol table size:       %5uKB (%d exports, %d imports)
  symbol string pool size: %5uKB
LINKEDITS optimized from %uMB to %uMB
Accelerator tables %uMB
not enough room to add dyld accelerator tables
<redacted>
.objc_
AcceleratorTables
/BuildRoot/Library/Caches/com.apple.xbs/Sources/update_dyld_shared_cache/dyld-514.3/dyld3/shared-cache/OptimizerLinkedit.cpp
depMH != NULL
op != NULL
found cycle for 
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
