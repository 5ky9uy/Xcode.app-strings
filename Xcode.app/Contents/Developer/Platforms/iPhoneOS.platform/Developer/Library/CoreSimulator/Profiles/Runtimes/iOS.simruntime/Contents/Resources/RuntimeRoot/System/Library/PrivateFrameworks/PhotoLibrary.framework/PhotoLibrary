PLPhotosDefaultsDidChangeNotification
NowPlaying
FromIPhoto
Photos
plist
items
Transition
validValues
SummarizeSections
com.apple.mobileslideshow
v8@?0
CROP_OVERLAY_TITLE
CANCEL
RETAKE
USE_VIDEO
SET_HOME_SCREEN
SET_LOCK_SCREEN
SET_BOTH
v12@?0B8
MOTION_TOGGLE_ON
MOTION_TOGGLE_OFF
PREVIEW
CHOOSE_PHOTO_BUTTON
_bottomBar
T@"PLCropOverlayBottomBar",R,N,V__bottomBar
_cameraCancelButton
T@"UIButton",R,N,V__cameraCancelButton
contactPhotoOverlay
T@"PLContactPhotoOverlay",R,N,V_contactPhotoOverlay
cameraBottomBar
T@"UIView",&,N
wallpaperBottomBar
T@"PLCropOverlayWallpaperBottomBar",R,N
motionToggleIsOn
TB,N,V_motionToggleIsOn
isEditingHomeScreen
TB,N,V_isEditingHomeScreen
isEditingLockScreen
TB,N,V_isEditingLockScreen
motionToggleHidden
TB,N
displayedInPopover
TB,N,GisDisplayedInPopover,V_displayedInPopover
defaultOKButtonTitle
T@"NSString",C,N,V_defaultOKButtonTitle
delegate
T@"<PLCropOverlayDelegate>",W,N,V_delegate
previewMode
PLCommentsFontCacheDidChangeNotification
youLikeFont
T@"UIFont",R,N
likeFont
commentTextFont
commentAttributionDateFont
commentAttributionNameFont
commentEntryFont
commentSendButtonFont
<#$^|
|^$#>
pl_stringWithFormat cannot take more than 10 input args
v32@?0@8Q16^B24
USE_PHOTO_BUTTON_TITLE
CHOOSE_VIDEO_TITLE
CHOOSE_PHOTO_TITLE
COMPRESSING_VIDEO
VIDEO_TOO_LONG_TITLE
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
localizedUseButtonTitle
T@"NSString",R,N
localizedTitle
_UIImagePickerSavingOptions
NSDictionary *PLPhotoPickerDictionaryFromImage(NSDictionary *, PLPhotoTileViewController *, PLManagedAsset *, NSDictionary *, BOOL)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLNavigationControllerInterface.m
<Unknown File>
PLPhotoPickerDictionaryFromImage - UIImagePickerSavingOptions may not be nil
_UIImagePickerControllerSourceType
PLPhotoPickerDictionaryFromImage - UIImagePickerControllerSourceType may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerReviewCapturedItem may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerShowCameraControls may not be nil
_UIImagePickerControllerPHAssetLocalIdentifier
_UIImagePickerDebugSidecarFileURLs
UIImagePickerControllerLivePhoto
UIImagePickerControllerImageURL
_UIImagePickerControllerSandboxExtensionToken
v32@?0@"NSData"8@"PLImageDataInfo"16@"PLCPLDownloadContext"24
imageGenerator
T@"AVAssetImageGenerator",&,N,V_imageGenerator
inUse
TB,N,V_inUse
imageFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoCameraImage must be either video or audio
PLPhotosApplication
com.apple.mobileslideshow.videoThumbnails
<%@ path:%@>
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v24@?0@"AVPlayerItem"8@"NSDictionary"16
B16@?0@"PHAdjustmentData"8
v24@?0@"PHContentEditingInput"8@"NSDictionary"16
v24@?0@"AVPlayerItem"8@"NSError"16
timestamps
VIDEO_TOO_LONG_BODY
Unable to assign data protection to "%@": %@
*** Error generating video thumbnails ... cleaning up state: %@
v32@?0@"NSDictionary"8@"NSURL"16@"NSError"24
*** Error saving a copy trimmed video to the disk ... cleaning up state: %@
v16@?0@"PLManagedAsset"8
v24@?0@"AVAssetExportSession"8@"NSError"16
Unable to copy CGImage at time:%f, error:[%@]
CANNOT_PLAY_STREAM_VIDEO_TITLE
Failed to commit adjustments with error: %@
v20@?0B8@"NSError"12
v40@?0@"AVAsset"8@"AVAudioMix"16@"AVVideoComposition"24@"NSError"32
Failed to write metadata to path %@
Failed to delete file at path %@: %@
Video export failed for asset %@: %@
_pathForVideoPreviewFile
T@"NSString",R,&,N
_pathForPrebakedLandscapeScrubberThumbnails
_pathForPrebakedPortraitScrubberThumbnails
_mediaIsPlayable
TB,R,N
_didSetPhotoData
_didInsertMoviePlayerView
TB,N,V__didInsertMoviePlayerView
_didEditSlalom
TB,N,S_setDidEditSlalom:,V__didEditSlalom
_videoAVObjectBuilder
T@"PFVideoAVObjectBuilder",R,N,V__videoAVObjectBuilder
_isFetchingVideo
TB,R,N,V__isFetchingVideo
_localVideoUnavailable
TB,N,S_setLocalVideoUnavailable:,V__localVideoUnavailable
_expectedNotificationsCount
Tq,R,N,V__expectedNotificationsCount
_adjustmentsToCommit
T@"PFVideoAdjustments",R,N,V__adjustmentsToCommit
_canAttemptFetchingVideoDerivative
TB,N,S_setCanAttemptFetchingVideoDerivative:,V__canAttemptFetchingVideoDerivative
_attemptFetchingVideoDerivative
TB,N,S_setAttemptFetchingVideoDerivative:,V__attemptFetchingVideoDerivative
trimProgressStack
T@"PLProgressStack",&,N,V_trimProgressStack
_slalomRegionEditorCreatedForScrubber
TB,R,N,V__slalomRegionEditorCreatedForScrubber
pathForVideoFile
T@"<PLVideoViewDelegate>",N
imageTile
T@"PLPhotoTileViewController",N
videoCameraImage
T@"PLManagedAsset",R,N
trimmedVideoClip
T@"PLManagedAsset",&,N
allowSlalomEditor
TB,N,V_allowSlalomEditor
scrubberBackgroundView
T@"UIView",R,N,V_scrubberBackgroundView
posterFrameImage
T@"UIImage",R,N
posterFrameView
T@"PLVideoPosterFrameView",R,&,N,V_posterFrameView
duration
Td,R,N
editing
TB,N,GisEditing
startTime
endTime
videoPathAfterTrim
previewImageView
T@"UIImageView",R,N
showsPlayOverlay
showsScrubber
prepareMoviePlayerForScrubberAutomatically
TB,N,V_prepareMoviePlayerForScrubberAutomatically
loadMediaImmediately
shouldPlayVideoWhenViewAppears
TB,N,V_shouldPlayVideoWhenViewAppears
canEdit
scrubberIsSubview
scrubberWidth
Td,N,V_scrubberWidth
currentTime
Td,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLAssetContainerDataSource.m
Mismatched asset collections and asset fetch results
 containing %ld containers with %ld total assets (last container index %ld)
%@: %ld assets [%ld]
assetCollectionsFetchResult
T@"PHFetchResult",R,N
T@"PHFetchResult",R,N,V_assetCollectionsFetchResult
Loading_Error%@.png
_iPad
titleMaskImageView
T@"UIImageView",&,N,V_titleMaskImageView
backdropView
T@"_UIBackdropView",&,N,V_backdropView
%@ (%@): path: %@: in database: %@, is render: %@, can request thumbnail: %@, thumbnail %@
q24@?0@"PLCameraImportItemRepresentation"8@"PLCameraImportItemRepresentation"16
cameraFile
T@"ICCameraFile",R,N,V_cameraFile
metadata
T@"NSDictionary",&,N,V_metadata
canRequestMetadata
TB,N,V_canRequestMetadata
canRequestThumbnail
TB,N,V_canRequestThumbnail
path
T@"NSString",C,N,V_path
name
T@"NSString",R,C,N,V_name
fileExtension
T@"NSString",R,C,N,V_fileExtension
isRaw
isImage
isMovie
isAudio
isRender
TB,R,N,V_isRender
thumbnail
T@"UIImage",R,N,V_thumbnail
PLPublishingAgentFinishedPublishingNotification
PLPublishingAgentStartedPublishingNotification
PLPublishingAgentStartedRemakingNotification
PLPublishingAgentFinishedRemakingNotification
PLPublishingAgentRemakingDidSucceedKey
PLPublishingAgentDidCancelNotification
PLPublishingAgentsForcedCancelNotification
/System/Library/PublishingBundles/
%@.bundle
<override -[PLPublishingAgent serviceName]
SUBCLASS OVERRIDE
SHARING_WAS_INTERRUPTED
PUBLISHED_MEDIA_FORMAT
PUBLISHED_VIDEO
PUBLISHED_IMAGE
VIEW_BUTTON_TITLE_FORMAT
v16@?0@"UIAlertAction"8
TELL_A_FRIEND
mailto:?subject=%@&body=%@
MEDIA_FAILURE_FORMAT
FAILED_PUBLISH_VIDEO
FAILED_PUBLISH_IMAGE
CLOSE
T@"<PLPublishingAgentDelegate>",N,V_delegate
ownerIsCamera
TB,N,V_ownerIsCamera
approximateHDUploadSize
Tq,N,V_approximateHDUploadSize
approximateSDUploadSize
Tq,N,V_approximateSDUploadSize
mediaIsHDVideo
TB,N,V_mediaIsHDVideo
enableHDUpload
TB,N,V_enableHDUpload
needsTrimming
TB,N,V_needsTrimming
remakerMode
Ti,N,V_remakerMode
selectedOption
Ti,N,V_selectedOption
progressMultiplier
Tf,N,V_progressMultiplier
allowsHDOver3GUpload
TB,N,V_allowsHDOver3GUpload
shouldCancelPublish
TB,N,V_shouldCancelPublish
allowsCellularAccessForRequests
title
T@"NSString",&,N,V_title
MCProfileConnection
Unable to find class %s
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
MCFeatureCellularHDUploadsAllowed
%@Identifier
style
Ti,N,V_cellStyle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLDataArrayInputStream.m
sanity check for stream data
should be able to make run loop source
progressDelegate
T@"<PLDataArrayInputStreamProgressDelegate>",N,V_progressDelegate
PLCameraPickerPause.png
PLCameraPickerPlay.png
Tq,N,V_style
T@"UIView",&,N,V_cameraBottomBar
previewBottomBar
T@"PLCropOverlayPreviewBottomBar",&,N,V_previewBottomBar
T@"PLCropOverlayWallpaperBottomBar",&,N,V_wallpaperBottomBar
playingVideo
TB,N,GisPlayingVideo,V_playingVideo
inPopover
TB,N,GisInPopover,V_inPopover
MEDIA_PROGRESS_FORMAT
MEDIA_TIME_ONE_MINUTE_REMAINING
MEDIA_TIME_MINUTES_REMAINING_FORMAT
COMPLETING_UPLOAD
MEDIA_TIME_ONE_SECOND_REMAINING
MEDIA_TIME_SECONDS_REMAINING_FORMAT
MEDIA_PROGRESS_NO_TIME_FORMAT
backgroundType
Tq,N,V_backgroundType
backgroundView
T@"UIView",&,N,V_backgroundView
backgroundTintedView
T@"UIView",&,N,V_backgroundTintedView
backgroundBlurredView
T@"_UIBackdropView",&,N,V_backgroundBlurredView
percentComplete
Tf,N
showsCancelButton
TB,N,V_showsCancelButton
cancelationHandler
T@?,C,N,V_cancelationHandler
MFMailComposeViewController
MFComposeRecipientView
MFComposeRecipient
MFContactsSearchManager
MFContactsSearchResultsModel
MFRecipientTableViewCell
MFSearchShadowView
/System/Library/Frameworks/MessageUI.framework/MessageUI
fileLengthLimit
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLVideoRemaker.m
Invalid parameter not satisfying: %@
media
TRIMMING_VIDEO
PREPARING_VIDEO
3gpp
3gp2
aiff
T@"PFVideoAVObjectBuilder",R,&,N,V__videoAVObjectBuilder
progressHandler
T@?,C,N,V_progressHandler
shouldExportToPhotoDataDirectory
TB,N,V_shouldExportToPhotoDataDirectory
exportPresetOverride
T@"NSString",C,N,V_exportPresetOverride
exportPreset
customAccessibilityLabel
T@"NSString",C,N,V_customAccessibilityLabel
PLVideoOverlayGlyphMask
PLVideoOverlayBackgroundMask
disableViewInPopoverRule
TB,N,V_disableViewInPopoverRule
TRIM_VIDEO_NAV_TITLE_IMAGE_PICKER
TRIM_VIDEO_NAV_TITLE
TRIM_TITLE_IMAGE_PICKER
TRIM_FOR_PUBLISH_TITLE
VIDEO_TOO_LONG_TITLE_IMAGE_PICKER
VIDEO_PLAYBACK_FAILED
com.apple.photos
parentInPopoverException
TB,N,V_parentInPopoverException
Contracted
Expanding
Complete Expand
Cancel Expand
Expanded
Contracting
Cancel Contract
Complete Contract
contractedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N
expandedFrame
allowsExpansion
photos-migrate-iphoto
photos-event
uicmd
show-import
show-album
album-id
%@-GM
EVENTS
ALBUMS
PHOTOSTREAM
PHOTOS
PEOPLE
PLACES
IMPORT
ContentOffset-%@
collapseSingleImage
fadeInBorderForCollapse
T@"NSString",C,N
imageSize
T{CGSize=dd},R,N
videoView
T@"PLVideoView",&,N
showsPlaceholder
borderAndAccessoriesVisible
TB,N,GisBorderAndAccessoriesVisible
photo
T@"PLManagedAsset",&,N,V_photo
Error: no external display attached in tv out mode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLPhotoTileViewController.m
Call -initWithFrame:photoTileController: or you get <rdar://problem/14272922> Comments using only half width of screen after swiping in landscape
<%@ photo:%@
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
CAMImagePickerCameraViewController
v40@?0@"NSData"8@"NSString"16q24@"NSDictionary"32
BlueCheckUnselected.png
BlueCheckSelected.png
_customCenterOverlay
T@"UIView",&,N,S_setCustomCenterOverlay:,V__customCenterOverlay
T@"PHAsset",R,N
thumbnailImage
T@"UIImage",&,N
tileFrame
unscaledImage
T@"UIImage",&,N,V_unscaledImage
centerContentVertically
TB,N,V_centerContentVertically
overlayInsets
T{UIEdgeInsets=dddd},N,V_overlayInsets
forceNativeScreenScale
TB,N,V_forceNativeScreenScale
force1XCroppedImage
TB,N,V_force1XCroppedImage
wantsCompactLayout
TB,N,V_wantsCompactLayout
reviewing
TB,N,V_reviewing
picked
TB,N,V_picked
shouldHideProgressIndicator
TB,N,V_shouldHideProgressIndicator
shouldSupressViewWillTransitionToSize
TB,N,V_shouldSupressViewWillTransitionToSize
jpegImageSize
T{CGSize=dd},R,N,V_jpegImageSize
adjustZoomScaleAfterRotation
TB,N,V_adjustZoomScaleAfterRotation
Index: %lu
Items: %@
Items: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLPublishingMedia.m
asset
[PLPublishingMedia isValidPublishingMedia:asset]
managedAsset
avAsset
T@,&,N,V_asset
isVideo
TB,N,V_isVideo
T@"NSString",&,N,V_pathForVideoFile
assetURL
T@"NSURL",&,N,V_assetURL
isHDVideo
TB,N,V_isHDVideo
Td,N,V_duration
%@ (in database: %@)
Representations: %@
B16@?0@"PLCameraImportItemRepresentation"8
@16@?0@"PLCameraImportItemRepresentation"8
identifier
T@"NSString",R,C,N,V_identifier
parentFolder
T@"NSString",R,C,N,V_parentFolder
basePath
T@"NSString",&,N,V_basePath
eventName
T@"NSString",&,N,V_eventName
importedAsset
T@"PLManagedAsset",&,N,V_importedAsset
T@"UIImage",R,&,N
thumbnailState
Ti,N,V_thumbnailState
shouldImport
TB,N,V_shouldImport
importError
T@"NSError",&,N,V_importError
PLSlalomGrabberHandle.png
T@"<PLSlalomRegionEditorDelegate>",N,V_delegate
trackInsets
T{UIEdgeInsets=dddd},N,V_trackInsets
trimHandleWidth
Td,N,V_trimHandleWidth
regionEditorStyle
TQ,N,V_regionEditorStyle
minValue
Td,N,V_minValue
maxValue
Td,N,V_maxValue
startValue
Td,N,V_startValue
endValue
Td,N,V_endValue
zoomDelay
Td,N,V_zoomDelay
zoomAnimating
TB,N,GisZoomAnimating,SsetZoomAnimating:,V_zoomAnimating
ipad
T@"NSString",C,N,V_name
dimmed
TB,N,GisDimmed
borderAndAccessoriesAlpha
drawsBorder
shadowEnabled
TB,N,GisShadowEnabled
transitionProgress
Td,N,V_transitionProgress
leftAccessoryView
T@"UIView",&,N,V_leftAccessoryView
leftAccessoryViewOffset
T{CGSize=dd},N,V_leftAccessoryViewOffset
bottomRightAccessoryView
T@"UIView",&,N,V_bottomRightAccessoryView
accessoryViewsAlpha
Td,N,V_accessoryViewsAlpha
TB,R,N,V_showsPlaceholder
placeholderScale
Td,N,V_placeholderScale
placeholderSize
PLImageBorder@2x
PLImageBorder
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLImportSessionInfo.m
PLWImportSessionInfo - addIndexToImport: was passed an index we already have
PLWImportSessionInfo: Told to beginImportForIndex: but was passed an index that wasn't in the initial import indexes
PLWImportSessionInfo - beginImportForIndex: was passed an index that's already in progress
PLWImportSessionInfo - beginImportForIndex: was passed an index that's already completed (either completed successfully or with an error)
PLWImportSessionInfo: Told to completeImportForIndex: but was passed an index that wasn't in the initial import indexes
PLWImportSessionInfo - completeImportForIndex: was passed an index but that index wasn't in progress
PLWImportSessionInfo - completeImportForIndex: was passed an index that's already completed (either completed successfully or with an error)
importComplete
TB,N,V_importComplete
importStopped
TB,N,V_importStopped
importIndexes
T@"NSIndexSet",R,&,N,V_importIndexes
inProgressIndexes
T@"NSIndexSet",R,&,N,V_inProgressIndexes
errorIndexes
T@"NSIndexSet",R,&,N,V_errorIndexes
completedIndexes
T@"NSIndexSet",R,&,N,V_completedIndexes
importingSelection
TB,N,V_importingSelection
T@,N,V_delegate
mode
Ti,N,V_mode
PLCameraImportManagerDidAddDeviceNotification
PLCameraImportManagerDidRemoveDeviceNotification
importers
T@"NSMutableArray",&,N,V_importers
T@"UIView",R,&,N
player
T@"AVPlayer",&,N
destinationPlaceholderStyle
Tq,R,N,V_destinationPlaceholderStyle
destinationPlaceholderHidden
TB,N,GisDestinationPlaceholderHidden
SAVING_PHOTO
Status shown while setting wallpaper
tile
completionTarget
options
wallpaperMode
%s: Status bar foreground color should be nil. Instead is: %@
-[PLWallpaperImageViewController viewWillAppear:]
%s: Status bar legibility style should be default (0). Instead is %ld
SET_WALLPAPER_BUTTON
WALLPAPER_OVERLAY_TITLE
WALLPAPER_PHOTO_TITLE
SETTING_WALLPAPER
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLWallpaperImageViewController.m
Wallpaper Variant is unknown
previewVariant
Tq,N,V_previewVariant
previewType
Tq,N,V_previewType
isWallpaperEdit
TB,N,V_isWallpaperEdit
_statusBarStyle
Tq,N,S_setStatusBarStyle:,V__statusBarStyle
_statusBarHidden
TB,N,S_setStatusBarHidden:,V__statusBarHidden
wallpaperPreviewViewController
T@"SBSUIWallpaperPreviewViewController",&,N,V_wallpaperPreviewViewController
saveWallpaperData
TB,N,V_saveWallpaperData
wallpaperTitle
T@"NSString",C,N,V_wallpaperTitle
eQd5mlz0BN0amTp/2ccMoA
v24@?0@"UIImage"8@"NSDictionary"16
v32@?0@"AVAsset"8@"AVAudioMix"16@"NSDictionary"24
colorSamplingEnabled
motionEnabled
motionEnabled changed
SBSUIWallpaperPreviewViewController
/System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
SBFWallpaperConfigurationManager
/System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
-Regular
-Compact
PLProgressIris%@-PhotoIris
v16@?0@"NSTimer"8
_contentView
T@"UIView",&,N,S_setContentView:,V__contentView
_sliceLayer
T@"CAShapeLayer",&,N,S_setSliceLayer:,V__sliceLayer
_circleLayer
T@"CAShapeLayer",&,N,S_setCircleLayer:,V__circleLayer
_progressArcLayer
T@"PLProgressArcLayer",&,N,S_setProgressArcLayer:,V__progressArcLayer
_irisGlyphLayer
T@"CALayer",&,N,S_setIrisGlyphLayer:,V__irisGlyphLayer
_contentsScale
Td,N,S_setContentsScale:,V__contentsScale
Tq,R,N,V_style
progress
Td,N,V_progress
v16@?0d8
radius
Td,N,V_radius
startAngle
Td,N,V_startAngle
endAngle
Td,N,V_endAngle
lineWidth
Td,N,V_lineWidth
backgroundStyle
Tq,N,V_backgroundStyle
cancelButton
T@"UIButton",R,N,V_cancelButton
doneButton
T@"UIButton",R,N,V_doneButton
playbackButton
T@"UIButton",R,N,V_playbackButton
completion
T@?,C,N,V_completion
start
T@?,C,N,V_start
rate
status
externalPlaybackActive
readyForDisplay
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
tracks
Could not load value for key %@:
https://
http://
home-sharing://
Unable to start background task, TV Out window may not tear down.
Error setting up TVOutWindow
COULD_NOT_LOAD_MOVIE_ERROR_FMT
GENERIC_COULD_NOT_LOAD_MOVIE
_serverConnectionDiedNotification. Info -- notification=%@, AVPlayer = %@, currentTime = %.2f
TVOutEnabled
TB,N,V_TVOutEnabled
forceDisableTVOut
TB,N,S_setForceDisableTVOut:,V_forceDisableTVOut
isActiveController
TB,N,V_isActiveController
T@"<PLMoviePlayerControllerDelegate>",N,V_delegate
T@"AVPlayer",R,&,N,V_player
view
T@"PLMoviePlayerView",R,&,N,V_view
playbackRate
Tf,R,N
playbackState
TQ,R,N,V_playbackState
bufferingState
TQ,R,N,V_bufferingState
isPreparedForPlayback
TB,R,N,V_isPreparedForPlayback
PLProgressHUDCheckmark
layer
T@"AVPlayerLayer",R,&,D,N
scaleMode
Tq,N,V_scaleMode
videoRect
+[PLSharedAlbumSubscriberInfo allSubscribersForAlbum:]
+[PLSharedAlbumSubscriberInfo allSubscribersForAlbumWithObjectID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLSharedAlbumSubscriberInfo.m
%s is not available as initializer
-[PLSharedAlbumSubscriberInfo init]
invitationRecord
T@"PLCloudSharedAlbumInvitationRecord",R,N,V_invitationRecord
isOwner
email
T@"NSString",R,N,V_email
phone
T@"NSString",R,N,V_phone
firstName
T@"NSString",R,N,V_firstName
lastName
T@"NSString",R,N,V_lastName
displayName
T@"NSString",R,N,V_displayName
@"NSMutableArray"16@?0@"PLCloudSharedAlbum"8
v16@?0@"PLCloudSharedAlbumInvitationRecord"8
H:|[_doCancelButton][_separatorLine(==separatorWidth@999)][_doSetButton]|
separatorWidth
_doCancelButton, _separatorLine, _doSetButton
V:|[_doCancelButton]|
_doCancelButton
[doSetLockScreenButton]
[doSetHomeScreenButton]
[doSetBothScreenButton]
[motionToggle]
-(spacing)-
doCancelButton
motionToggle
doSetBothScreenButton
doSetHomeScreenButton
doSetLockScreenButton
H:|-(margin)-[doCancelButton]-(>=spacing)-%@-(margin)-|
margin
spacing
V:|[doCancelButton]|
titleLabel
T@"_UILegibilityLabel",&,N,V_titleLabel
separatorLine
T@"UIView",&,N,V_separatorLine
maxToggleWidth
Td,N,V_maxToggleWidth
T@"PLWallpaperButton",R,&,N,V_doCancelButton
doSetButton
T@"PLWallpaperButton",R,&,N,V_doSetButton
T@"PLWallpaperButton",R,&,N,V_doSetHomeScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetLockScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetBothScreenButton
T@"PLWallpaperButton",R,&,N,V_motionToggle
TB,N,V_motionToggleHidden
shouldOnlyShowLockScreenButton
TB,N,V_shouldOnlyShowLockScreenButton
shouldOnlyShowHomeScreenButton
TB,N,V_shouldOnlyShowHomeScreenButton
PLCameraImportItemImportIdentifier
PLCameraImportItemFileExtension
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/UITableViewAdditions.m
indexPath is out of range %@
opacity
pl_isInPopover
PLApplicationWillEnterForegroundNotification
PLPhotosApplicationDidEnterBackgroundNotification
PLPhotosApplicationWillEnterForegroundNotification
v24@?0@"NSURL"8@"NSError"16
videoPath is a required argument
PUBLISHING
TURNING_OFF_PUBLIC_WEBSITE
v16@?0@"AAResponse"8
EDIT_STREAM_PANE_TITLE
%@%@
DELETE_STREAM_BUTTON
DELETE_SUBSCRIBED_STREAM_BUTTON
DELETE_OWNED_STREAM_CONFIRMATION
DELETE_SUBSCRIBED_STREAM_CONFIRMATION
***Error cannot display sharing sheet as the publicURL is nil. 
RESEND_SHARING_INVITATION
REMOVE_SUBSCRIBER
REMOVE_SUBSCRIBER_CONFIRMATION
REMOVE_BUTTON
MULTIPLE_CONTRIBUTOR_LABEL
INVITE_PEOPLE_ROW_LABEL
OWNER
PUBLIC_WEBSITE_LABEL
SHARE_LINK
NOTIFICATION_LABEL
DELETE_PHOTO_STREAM
DELETE_SUBSCRIBED_PHOTO_STREAM
DeleteStreamReuseIdentifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoLibraryServices_Sim/MobileSlideShow-3402.4.238/Sources/PLAlbumStreamingOptionsViewController.m
%@ no cell created for index path %@
PUBLIC_WEBSITE_ON_FOOTER
PUBLIC_WEBSITE_OFF_FOOTER
SUBSCRIBER_PUBLIC_WEBSITE_ON_FOOTER
FAMILY_MULTIPLE_CONTRIBUTOR_FOOTER
MULTIPLE_CONTRIBUTOR_ON_FOOTER
MULTIPLE_CONTRIBUTOR_OFF_FOOTER
SUBSCRIBER_MULTIPLE_CONTRIBUTOR_FOOTER
FAMILY_STREAM_NOTIFICATION_SWITCH_DESCRIPTION
STREAM_NOTIFICATION_SWITCH_DESCRIPTION
PUAddSubscribersViewController
album
T@"PLCloudSharedAlbum",&,N,V_album
albumName
T@"NSString",C,N,V_albumName
sharedAlbumSubscribers
T@"NSArray",N,V_sharedAlbumSubscribers
streamOwner
TB,N,V_streamOwner
_selectedSubscriberInvitationRecord
T@"PLCloudSharedAlbumInvitationRecord",&,N,S_setSelectedSubscriberInvitationRecord:,V__selectedSubscriberInvitationRecord
_shouldScrollToTopOnNextViewLayout
TB,N,S_setShouldScrollToTopOnNextViewLayout:,V__shouldScrollToTopOnNextViewLayout
_lastPublicURLSectionFooterTitle
T@"NSString",C,N,S_setLastPublicURLSectionFooterTitle:,V__lastPublicURLSectionFooterTitle
_lastMultiContributorsSectionFooterTitle
T@"NSString",C,N,S_setLastMultiContributorsSectionFooterTitle:,V__lastMultiContributorsSectionFooterTitle
albumIsFamilyStream
TB,N,V_albumIsFamilyStream
T@"<PLAlbumStreamingOptionsViewControllerDelegate>",N,V_delegate
isPresentedModally
TB,N,V_isPresentedModally
ACAccountStore
/System/Library/Frameworks/Accounts.framework/Accounts
AAUIProfilePictureStore
/System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI
AAFamilyDetailsRequest
/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
AARequester
_avatarPreview
T@"UIImageView",R,N,V__avatarPreview
circularLayer
T@"CAShapeLayer",&,N,V_circularLayer
T@"UILabel",R,N,V_titleLabel
overlayEdgeInsets
T{UIEdgeInsets=dddd},R,N
com.apple.photos.sharedstreams
v16@?0@"NSArray"8
PHOTO_STREAM_SHARING_PEOPLE_PICKER_PROMT
(emailAddresses.@count == 1 AND phoneNumbers.@count == 0) OR (emailAddresses.@count == 0 AND phoneNumbers.@count == 1)
T@"<PLComposeRecipientViewControllerDelegate>",N,V_delegate
recipientView
T@"PLComposeRecipientView",R,&,N,V_recipientView
maxExpandRows
TQ,N,V_maxExpandRows
CRRecentContactsLibrary
/System/Library/PrivateFrameworks/CoreRecents.framework/CoreRecents
CRAddressKindPhoneNumber
CRAddressKindEmail
displayName %@ emails %@ phones %@
Invitation Recipient can't instantiate detector for phone %@
T@"NSString",R,C,N
allEmails
T@"NSArray",R,&,N,V_allEmails
allPhones
T@"NSArray",R,&,N,V_allPhones
selectedPhoneString
T@"NSString",R,C,N,V_selectedPhoneString
selectedEmailString
T@"NSString",R,C,N,V_selectedEmailString
invalidAddressString
T@"NSString",R,C,N,V_invalidAddressString
_personIconImageView
T@"UIImageView",&,N,S_setPersonIconImageView:,V__personIconImageView
_personMonogramImage
T@"UIImage",&,N,S_setPersonMonogramImage:,V__personMonogramImage
personIcon
T@"UIImage",&,N,V_personIcon
personFirstName
T@"NSString",C,N,V_personFirstName
personLastName
T@"NSString",C,N,V_personLastName
LOADING_PHOTO
com.apple.iPhoto.plist
AutoSplitEventsAfterImport
AutoSplitGranularity
PLCameraImporterDidFinishImportingNotification
q24@?0@"PLCameraImportItem"8@"PLCameraImportItem"16
q24@?0@8@16
CAMERA_IMPORT_DOWNLOAD_FAILED
Error string for when an image from an external camera fails to download
@"NSDictionary"16@?0@"PLCameraImportItemRepresentation"8
CAMERA_IMPORT_IMPORT_FAILED
Error string for when an image from an external camera fails to import
Failed to delete photo: %@
importSessionIdentifier
T@"NSString",C,N,V_importSessionIdentifier
isAppleDevice
TB,N,V_isAppleDevice
T@"<PLCameraImporterDelegate>",W,N,V_delegate
itemsMapping
T@"NSMutableDictionary",&,N,V_itemsMapping
T@"NSMutableArray",&,N,V_items
camera
T@"ICCameraDevice",&,N,V_camera
SelectedContentMode
LogJPEGDecodeTime
pLzf7OiX5nWAPUMj7BfI4Q
EnableIris
com.apple.mobileslideshow.PreferenceChanged
PLGatekeeperClient
0.0.0.0
v12@?0i8
failed to register for Photo Stream activity notification: %u
failed to register for Shared Photo Stream activity notification: %u
failed to register for Shared Photo Stream invitation failure activity notification: %u
notify_cancel() failed for kMSIdleStateDidChangeNotification. (%d)
notify_cancel() failed for kMSASStabilizedIdleStateDidChangeNotification. (%d)
notify_cancel() failed for Shared Photo Stream invitation failure activity notification. (%d)
window
T@"UIWindow",&,N
isReachable
TB,R,N,V_isReachable
isOnWifi
TB,R,N,V_isOnWifi
currentTestName
T@"NSString",&,N,V_currentTestName
currentTestOptions
T@"NSDictionary",&,N,V_currentTestOptions
notificationSuppressionContexts
T@"NSSet",C,N,V_notificationSuppressionContexts
iPhotoMigrationActivityAlert
T@"BLActivityAlert",&,N,V_iPhotoMigrationActivityAlert
MRMediaRemoteSetNowPlayingApplicationOverrideEnabled
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
alloc
init
release
dealloc
mainBundle
pathForResource:ofType:
initWithContentsOfFile:
valueForKey:
retain
count
objectAtIndex:
objectForKey:
isEqualToString:
valueForKeyPath:
intValue
addObject:
_reloadPhotoDefaultValuesAndNotify:
autorelease
numberWithBool:
boolValue
defaultCenter
postNotificationName:object:
class
randomTransition
sharedInstance
reloadPhotoDefaultValues
summarizeMomentSections
transitionForAnimationMovingForward:
transition
setTransition:
shouldPlayMusic
setShouldPlayMusic:
setMusicCollection:
musicCollection
_shouldPlayMusic
_summarizeMomentSections
_transition
_musicCollection
lastObject
willResignAsActiveController
removeObject:
didBecomeActiveController
moveControllerToTopOfStack:
removeControllerFromStack:
_playerStack
initWithFrame:
setAutoresizingMask:
currentDevice
userInterfaceIdiom
defaultHeight
addSubview:
_updateToolbarItems:
_newOverlayViewWithFrame:lighterEdgeOnTop:
bounds
setText:
clearColor
setBackgroundColor:
setFont:
whiteColor
setTextColor:
setTextAlignment:
colorWithWhite:alpha:
setShadowColor:
setShadowOffset:
sizeToFit
frame
setFrame:
isDisplayedInPopover
setInPopover:
isTelephonyUIMode:
setBackgroundStyle:
setPreviewBottomBar:
cancelButton
_tappedBottomBarCancelButton:
addTarget:action:forControlEvents:
doneButton
_tappedBottomBarDoneButton:
playbackButton
_tappedBottomBarPlaybackButton:
buttonWithType:
setTitleColor:forState:
setExclusiveTouch:
setTitle:forState:
titleLabel
preferredFontDescriptorWithTextStyle:
fontWithDescriptor:size:
insertSubview:belowSubview:
pl_setHidden:animated:
setWallpaperBottomBar:
doCancelButton
lightGrayColor
doSetHomeScreenButton
_tappedBottomBarSetHomeButton
doSetLockScreenButton
_tappedBottomBarSetLockButton
doSetBothScreenButton
_tappedBottomBarSetBothButton
motionToggle
_tappedBottomBarMotionToggle
doSetButton
statusBarHeightDidChange:
addObserver:selector:name:object:
_setMode:
_updateTitle
layoutSubviews
_updateCropRectInRect:
setCropRect:
mode
safeAreaInsets
bottomBar
mainScreen
scale
contactPhotoOverlay
sharedApplication
statusBarHeight
convertRect:fromView:
image
size
cameraBottomBar
setCameraBottomBar:
setNeedsLayout
wallpaperBottomBar
setShowsCropRegion:
setCropRectVisible:duration:
setHidden:
removeFromSuperview
initWithFrame:mode:offsettingStatusBar:
isStatusBarHidden
setUserInteractionEnabled:
setOpaque:
insertSubview:aboveSubview:
bringSubviewToFront:
_createCropView
setAlpha:
animateWithDuration:animations:
_bottomBar
previewBottomBar
setStyle:
_updateEditImageDoneButtonTitle
_updateMotionToggle
defaultOKButtonTitle
setStyle:animated:
setPlayingVideo:
removeObserver:
setEnabled:
_fadeOutCompleted:
animateWithDuration:animations:completion:
done
cropOverlayWasCancelled:
respondsToSelector:
cropOverlayWasOKed:
setImageAsHomeScreenClicked:
setImageAsLockScreenClicked:
setImageAsHomeScreenAndLockScreenClicked:
setMotionToggleIsOn:
motionToggledManually:
_updateWallpaperBottomBarSettingButtons
setShouldOnlyShowHomeScreenButton:
setShouldOnlyShowLockScreenButton:
setMotionToggleHidden:
motionToggleHidden
togglePlaybackState
isPlayingVideo
cropOverlayPlay:
cropOverlayPause:
cropOverlayBottomBarPlayButtonClicked:
cropOverlayBottomBarPauseButtonClicked:
hitTest:withEvent:
isKindOfClass:
isDescendantOfView:
copy
isWallpaperUIMode:
showInView:
hide
setTitle:
length
initWithBarButtonSystemItem:target:action:
_playButtonPressed:
_pauseButtonPressed:
arrayWithObjects:
setItems:
setImage:
setDisplayedInPopover:
controlsAreVisible
setControlsAreVisible:
overlayContainerView
setOverlayContainerView:
initWithFrame:mode:
insertIrisView:
bottomBarFrame
didCapturePhoto
didCaptureVideo
didPlayVideo
didPauseVideo
setDelegate:
dismiss
cancelButtonClicked:
setIsEditingHomeScreen:
setIsEditingLockScreen:
cropRect
setTitle:okButtonTitle:
titleRect
setOKButtonTitle:
setDefaultOKButtonTitle:
setOKButtonShowsCamera:
setCancelButtonTitle:
setShowProgress:title:
removeProgress
setProgressDone
setTitleHidden:animationDuration:
setPreviewMode:
previewMode
.cxx_destruct
motionToggleIsOn
isEditingHomeScreen
isEditingLockScreen
delegate
_cameraCancelButton
_cropView
_shadowView
_overlayContainerView
_cropRect
_customToolbar
_titleLabel
_topShineView
_hud
_statusBarHeight
_mode
_previewMode
_cropRectIsVisible
_offsetStatusBar
_tookPhoto
_showsCropRegion
_controlsAreVisible
_bottomShineView
_okButton
_wildcatPickerTopView
_wildcatPickerBottomView
_motionToggleIsOn
_isEditingHomeScreen
_isEditingLockScreen
_displayedInPopover
_contactPhotoOverlay
_defaultOKButtonTitle
_delegate
__bottomBar
__cameraCancelButton
_updateCropRectIfNeeded
alpha
CGColor
layer
setBorderColor:
setBorderWidth:
_removeCropViews
_aboveCropView
_cropRectView
_belowCropView
_contentSizesDidChange:
_invalidateCache
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
_shortCaptionFontDescriptor
fontDescriptorWithSymbolicTraits:
_bodyFontDescriptor
_emphasizedShortCaptionFontDescriptor
_shortSubheadlineFontDescriptor
_shortBodyFontDescriptor
_emphasizedBodyFontDescriptor
sharedCache
youLikeFont
likeFont
commentTextFont
commentAttributionDateFont
commentAttributionNameFont
commentEntryFont
commentSendButtonFont
__shortCaptionFontDescriptor
__emphasizedShortCaptionFontDescriptor
__shortSubheadlineFontDescriptor
__bodyFontDescriptor
__emphasizedBodyFontDescriptor
__shortBodyFontDescriptor
countByEnumeratingWithState:objects:count:
stringWithFormat:
initWithString:
appendString:
setObject:forKey:
objectAtIndexedSubscript:
raise:format:
rangeOfString:options:range:
substringWithRange:
appendAttributedString:
initWithString:attributes:
enumerateObjectsWithOptions:usingBlock:
pl_stringWithFormat:defaultAttributes:arguments:
cropOverlayMode
isVideo
stopLoading
setTileDelegate:
uiipc_useTelephonyUI
wantsAutoloopUI
navigationController
view
navigationItem
localizedTitle
localizedUseButtonTitle
setTitle:forStates:
initWithCustomView:
setRightBarButtonItem:
setLeftBarButtonItem:
_viewFrame
previewFrame
setPreferredContentSize:
_viewClass
_contentAutoresizingMask
blackColor
setExtendedLayoutIncludesOpaqueBars:
setupNavigationItem
chooseButtonTitle
_tileAutoresizingMask
isFileURL
videoViewForVideoFileAtURL:
sharedPhotoLibrary
photoFromAssetURL:photoLibrary:
initWithFrame:videoCameraImage:orientation:
setEdgesForExtendedLayout:
setLoadMediaImmediately:
setShowsPlayOverlay:
viewImageBeforeSelecting
setCanEdit:
setImageTile:
setVideoView:
clientIsWallpaper
newPhotoTileViewControllerWithFrame:imageRef:imageOrientation:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:image:allowZoomToFill:mode:
pl_PHAsset
newPhotoTileViewControllerWithFrame:modelPhoto:mode:
setOrientationDelegate:
forceNativeScreenScale
setForceNativeScreenScale:
force1XCroppedImage
setForce1XCroppedImage:
setCropOverlayRect:forCropRect:
wantsLegacyImageUI
_updateGestureSettings
setView:
viewWillLayoutSubviews
safeAreaLayoutGuide
layoutFrame
wantsStatusBarVisible
desiredStatusBarAnimation
uiipc_imagePickerController
isDisplayedInPhotoPicker
imagePickerAllowsEditing
setAllowsEditing:
_editabilityChanged:
setStatusBarStyleForFullScreenViewAnimated:useTelephonyUI:canHideStatusBar:newStatusBarStyle:navigationBarDidUpdate:
didUpdateNavigationBarAppearance
setNavigationBarHidden:
navigationBar
setBarStyle:
setShowsScrubber:
setScrubberIsSubview:
viewWillAppear:
setNeedsStatusBarAppearanceUpdate
viewDidAppear:
overlayEdgeInsets
setOverlayInsets:
cancel
stop
_imagePickerStatusBarStyle
revertStatusBarStyle:currentStatusBarStyle:animated:
viewWillDisappear:
viewDidDisappear:
scrubberBackgroundView
isNavigationBarHidden
existingPaletteForEdge:
paletteForEdge:size:
attachPalette:isPinned:
noteParentViewControllerDidDisappear
scrollView
setScrollEnabled:
viewControllers
indexOfObjectIdenticalTo:
popViewControllerAnimated:
_imagePickerDidCancel
_enableCropOverlay
handleAutoloopSelected
_handleVideoSelected
imagePickerSavingOptions
beginBackgroundSaveWithTile:progressTitle:completionCallbackTarget:options:
handleMediaSelectionUsingTile:managedAsset:args:includeEditing:
_enableCropOverlayIfNecessary
pause
videoCameraImage
path
startTime
endTime
doNotTranscode
isEditing
numberWithDouble:
initWithObjectsAndKeys:
assetURLForPhoto:
fileURLWithPath:isDirectory:
handleVideoSelectionWithURL:args:
initWithManagedAsset:applyVideoAdjustments:
isHDVideo
assetWithURL:
initWithAVAsset:
duration
setDuration:
setTrimStartTime:
setTrimEndTime:
exportPreset
videoQuality
setExportPresetOverride:
setMode:
hideTrimMessage
progressView
setBackgroundType:
setLabelText:
remake
play
attachScrubberPalette
convertPoint:fromView:
videoMaximumDuration
disableVideoTrimMessage
doubleValue
setMaximumTrimLength:
setEditing:
_trimMessage
showTrimMessage:withBottomY:
beginIgnoringInteractionEvents
setDelaySuspend:
endIgnoringInteractionEvents
statusBarOrientation
defaultFormatChooser
fullScreenFormatForCurrentDevice
formatID
imageFormat
initWithImageFormat:
newImageLoadingQueue
videoView
previewImageView
photo
pl_managedAsset
loadImageSynchronously:fromSource:forAsset:priority:
setFullSizeImage:
cancelLoadFromSource:forAsset:
objectID
isEqual:
didChooseVideoAtURL:options:
uiipc_imagePickerOptions
_imagePickerSavingOptions
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
description
debugDescription
videoViewDidCreateAttachments:
videoViewScrubberYOrigin:forOrientation:
videoViewScrubberWidth:
videoViewCanBeginPlayback:
videoViewIsReadyToBeginPlayback:
videoViewPlaybackDidFail:
videoViewDidBeginPlayback:
videoViewDidPausePlayback:
videoViewDidEndPlayback:didFinish:
videoViewDidBeginScrubbing:
videoViewDidEndScrubbing:
videoViewDidBeginRemaking:
videoViewDidEndRemaking:didSucceed:
videoView:remakingProgressDidChange:
videoViewWillBeginEditing:
videoViewDidBeginEditing:
videoViewDidCancelEditing:
videoView:displayPlayOverlay:
videoViewShouldRespondToPlayOverlayTap:
videoViewCanCreateMetadata:
videoViewRequestsPickedAirplayRoute:
imageLoadingQueue:didLoadImage:forAsset:fromSource:
photoTileViewController:willAppear:
photoTileViewController:didAppear:
photoTileViewController:didDisappear:
photoTileViewControllerRequestsFullScreenImage:
photoTileViewControllerRequestsFullSizeImage:
photoTileViewControllerCancelImageRequests:
photoTileViewControllerSingleTap:
photoTileViewControllerDoubleTap:
photoTileViewControllerWillBeginGesture:
photoTileViewControllerDidEndGesture:
photoTileViewControllerAllowsEditing:
isPhotoTileParentPageControllerAnimating:
photoTileViewControllerCanShowCenterOverlay:
photoTileViewControllerCustomCenterOverlay:
photoTileViewControllerTopLayoutGuide:
cropOverlayWasToggled:
_displaysFullScreen
initWithPhoto:
initWithImage:cropRect:
initWithUIImage:cropRect:
initWithImageData:cropRect:
initWithVideoURL:
cropOverlay
setCropOverlayDone
loadView
prefersStatusBarHidden
preferredStatusBarUpdateAnimation
_removedAsTopViewController
beginDisplayingProgress
cropOverlay:didFinishSaving:
videoView:scrubberWasCreated:slalomRegionEditor:
videoViewDidPausePlayback:didFinish:
videoRemakerDidBeginRemaking:
videoRemakerDidEndRemaking:temporaryPath:
photoTileViewControllerIsDisplayingLandscape:
_photo
_imageRef
_image
_cropOverlay
_imageTile
_videoView
_remaker
_progressView
_videoURL
_imageCache
_imageLoadingQueue
_imageSource
_previousStatusBarStyle
_newStatusBarStyle
_allowEditing
_statusBarWasHidden
_isVideo
_isDisappearing
_remaking
parentViewController
_properties
statusBarStyle
setNavigationBarHidden:animated:
setBackgroundImage:forBarMetrics:
setTranslucent:
pl_isInPopover
window
keyWindow
setStatusBarHidden:withAnimation:
setStatusBarStyle:animated:
_didRevertStatusBar
visibleViewController
setStatusBarHidden:
setStatusBarStyle:animation:
uiipc_filterForMediaTypes:
unscaledImage
imageView
imageOrientation
_newOriginalImageForPickerFromCachedData
_imageOrientation
changeRequestForAsset:
incrementShareCount
performChanges:completionHandler:
arrayWithObjects:count:
_imagePickerDidCompleteWithInfo:
arrayWithCapacity:
pathForVideoFile
_imagePickerDidCompleteWithInfoArray:
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
integerValue
CGImage
initWithCGImage:imageOrientation:
sourceType
_valueForProperty:
showsCameraControls
localIdentifier
addEntriesFromDictionary:
debugSidecarFileURLsForAsset:
setObject:forKeyedSubscript:
sandboxExtensionToken
initWithData:
sharedAssetsSaver
requestSynchronousImageForAssetOID:withFormat:allowPlaceholder:wantURLOnly:networkAccessAllowed:trackCPLDownload:outImageDataInfo:outCPLDownloadContext:
CGRectValue
valueWithCGRect:
fileExtension
preferredFileExtensionForType:
compare:options:
assetURLForPhoto:extension:
numberWithInt:
initWithAsset:
setImageGenerator:
imageGenerator
cancelAllCGImageGeneration
inUse
setInUse:
_inUse
_imageGenerator
setClipsToBounds:
center
setBounds:
setCenter:
setTransform:
setScaleMode:
imageFrame
_imageView
_scaleMode
_initWithFrame:videoCameraImage:orientation:
_canAccessVideo
isStreamedVideo
isAudio
pathToOriginalVideoFile
_cancelRemaking:
_screenDidConnect:
_screenDidDisconnect:
enableNetworkObservation
_networkReachabilityDidChange:
cachedNonPersistedVideoPlaybackURL
UTF8String
setCachedNonPersistedVideoPlaybackURL:
setCachedNonPersistedVideoPlaybackURLExpiration:
setCachedNonPersistedVideoPlaybackURLError:
disableNetworkObservation
_commitPendingAdjustmentsUpdateAndWait:completionHandler:
_tearDownMoviePlayer
setTrimProgressStack:
_enqueueOverlayPlayButton:
setDataSource:
_clearImageGenerators
_cancelAirplayExportSession
requestToBecomeActiveController
_playerIsAirplay
_setupMoviePlayerIfNecessary
_didInsertMoviePlayerView
requestToResignAsActiveController
isTrimming
_scrubberAnimationFinished
touchesEnded:withEvent:
_hideTrimMessageView:
superview
pointInside:withEvent:
statusBarHeightForOrientation:ignoreHidden:
defaultSizeForOrientation:
_scrubberBackgroundHeight
_shouldShowSlalomEditor
canEdit
isEditable
_removeScrubber
setDeliversTouchesForGesturesToSuperview:
scrubberWidth
setEditable:
setEdgeInset:
setZoomDelay:
setMinimumTrimLength:
setEditing:animated:
_updateSlalomRegionEditorRange
_updateSlalomRegionEditorState
_updateForEditing
allowSlalomEditor
isMogul
videoAdjustments
isRecognizedFormat
complete
isTimelapsePlaceholder
isPhotoIrisPlaceholder
initWithCapacity:
firstObject
pl_videoOverlayButtonWithStyle:
removeObjectAtIndex:
_mediaIsPlayable
_dequeueOverlayPlayButton
playButtonClicked:
setTarget:action:
removeVideoOverlay
_videoOverlayFadeOutDidFinish
_updateScaleModeForSize:
_updateScrubberFrame
_reloadScrubberThumbnailsIfNeeded
reloadData
_playbackFinished
bufferingState
_shouldStreamVideo
_verifyOrRestartPlayback
_displayPlaySpinner
playbackRate
_updateSnapshotImage
_didBeginPlayback
playbackState
currentTime
moviePlayerHeadsetPlayPausePressed:
_removePlaySpinner
_thumbnailSourceAsset
_configureImageGenerator:thumbnailSize:forSummaryThumbnails:
_savePreviewPosterFrameImage:
generateCGImagesAsynchronouslyForTimes:completionHandler:
initWithCGImage:
_pathForVideoPreviewFile
_insertMoviePlayerViewIfNecessary
_setDuration:
player
currentItem
presentationSize
_requestPreviewPosterFrameForVideoSize:
_setNeedsReloadScrubberThumbnails:
_updateScrubberVisibilityWithDuration:
_updatePosterFrameVisibility
performSelector:withObject:afterDelay:
isReadyForDisplay
isPlaying
_prepareMoviePlayerIfNeeded
_setLocalVideoUnavailable:
setNetworkAccessAllowed:
setStreamingAllowed:
setVideoComplementAllowed:
setVersion:
defaultManager
asset
initWithVideoAsset:videoAdjustments:
_prepareAndResumePlayback
requestPlayerItemForVideo:options:resultHandler:
_canHandleAdjustmentData:
setCanHandleAdjustmentData:
audiovisualAsset
objectForKeyedSubscript:
isPlayable
_setCanAttemptFetchingVideoDerivative:
_updateVideoAVObjectBuilderFromContentEditingInput:
_fetchNonlocalVideo
requestContentEditingInputWithOptions:completionHandler:
pl_isOnScreen:
_mediaIsCloudSharedStreamedVideo
_canPlayCloudSharedStreamedVideoWithLocalVideo
_assetForVideoURL:
_localVideoUnavailable
_fetchLocalContentEditingInput
_shouldPlayFlattenedVideo
_isFlattenedVideoUpToDate
_filePathForFlattenedVideo
setPlayerItem:startTime:
_flattenVideoWithCompletionHandler:
_configurePlayerForStreamedVideoIfNecessary
requestPlayerItemWithResultHandler:
_assetForVideoPath:
playerItemWithAsset:
hasSlowMotionAdjustments
_updateScrubberForSlowMotion
initWithObjects:
isPreparedForPlayback
moviePlayerReadyToPlay:
formatIdentifier
formatVersion
data
initWithFormatIdentifier:formatVersion:data:baseVersion:editorBundleID:renderTypes:
adjustmentData
dictionary
debugAlwaysStreamSharedVideos
streamdVideoCache
AVAssetURLWithPath:
_optionsForAVURLAsset
URLAssetWithURL:options:
setExpectedAssetTypes:
value
_movieTimeFromScrubberTime:
_scrubToMovieTime:
_setMoviePlayerActive:
_setPlaybackDidBegin:
setShowsScrubber:duration:
_showVideoOverlay
_canAttemptFetchingVideoDerivative
resetPlayer
_reset
_canAirPlayCurrentVideo
externalPlaybackType
_movieScrubberDuration
movieScrubberDuration:
arrayWithObject:
_scrubberStartTime
options
isEqualToArray:
landscapeScrubberThumbnailFormat
portraitScrubberThumbnailFormat
initWithImages:format:orientation:options:delegate:
_pathForPrebakedLandscapeScrubberThumbnails
_pathForPrebakedPortraitScrubberThumbnails
saveToFile:
setZoomAnimating:
absoluteString
pathForOriginalFile
pathForVideoPreviewFile
pathForPrebakedLandscapeScrubberThumbnails
pathForPrebakedPortraitScrubberThumbnails
cloudPlaceholderKind
_shouldStreamCloudPhotoLibraryVideo
fileExistsAtPath:
isInFlight
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
_addThumbnailRequestForTimestamp:isSummaryThumbnail:
setThumbnailImage:forTimestamp:
thumbnailsWithContentsOfFile:format:
thumbnailImageAtIndex:
_loadThumbnailsIntoDictionary:isLandscape:aspectRatio:
invalidate
_updateScrubberValue
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_removeScrubberUpdateTimer
playingToAirTunes
_hideVideoOverlay:
setForwardPlaybackEndTime:
trimStartValue
trimEndValue
setValue:
setCurrentTime:
_invalidateSnapshotImage
_didScrubToValue:withHandle:
_serviceImageGenerationRequests
setZoomMinValue:maxValue:
_thumbnailTimeFromScrubberTime:
CMTimeValue
valueWithCMTime:
_canCreateMetadata
_saveCachedThumbnailsIfNecessary
setMaximumSize:
setApertureMode:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
setBody:
insertSubview:above:
flush
_setPlaying:
viewDidAppear
setTrimmedVideoClip:
_informDelegateAboutProgressChange:
animateAfterEdit
object
stringByDeletingPathExtension
name
removeObserver:name:object:
_updateTrimProgress
initWithDelegate:
trimProgressStack
updateProgress:
progress
totalProgress:
floatValue
cancelTrim
_removeTrimProgressTimer
push:
removeItemAtPath:error:
dictionaryWithObjects:forKeys:count:
setAttributes:ofItemAtPath:error:
moveItemAtPath:toPath:error:
attributesOfItemAtPath:error:
_thumbnailsWereRegenerated:error:contextInfo:
regenerateVideoThumbnailsForVideo:withCreationDate:progressStack:completionBlock:
slowMotionTimeRange
preferredTimeScale
adjustTimeRange:forNewStartTime:endTime:
slowMotionRate
initWithSlowMotionTimeRange:rate:
videoAsset
_enqueueAdjustmentsForCommit
savedAssetType
eventAlbumContainingPhoto:
stringByDeletingLastPathComponent
nextAvailableFilePathInDirectory:withExtension:
orientation
numberWithShort:
dateCreated
indexSheetImage
saveCameraVideoAtPath:withMetadata:thumbnailImage:createPreviewWellImage:progressStack:isSlalom:assetAdjustments:videoHandler:requestEnqueuedBlock:completionBlock:
pathForTrimmedVideoFile
tmpFileForVideoTranscodeToPhotoDataDirectory:withExtension:
videoAVObjectBuilderForManagedAsset:applyVideoAdjustments:
requestExportSessionWithExportPreset:resultHandler:
fileLengthLimitForRemakerMode:
setFileLengthLimit:
supportedFileTypes
setOutputFileType:
setOutputURL:
_canEditDuration:
setTimeRange:
status
error
_exportCompletedWithSuccess:
exportAsynchronouslyWithCompletionHandler:
_resetTrimProgressTimer
cancelExport
tracksWithMediaType:
naturalSize
copyCGImageAtTime:actualTime:error:
imageWithCGImage:
setScaleMode:duration:
layoutIfNeeded
destinationPlaceholderStyle
toggleScaleMode:
setThumbIsVisible:
playDueToEnoughData
_resetScrubberUpdateTimer
isExternalPlayback
videoOutActive
initWithActivityIndicatorStyle:
startAnimating
stopAnimating
cachedNonPersistedVideoPlaybackURLError
localizedDescription
alertControllerWithTitle:message:preferredStyle:
pl_presentViewController:animated:
isCellularConnection
requestVideoPlaybackURLForAsset:videoType:completion:
setValue:animated:
playFromBeginning
_createScrubberIfNeeded
_updatePosterImageView
shouldPlayVideoWhenViewAppears
loadMediaImmediately
setShouldPlayVideoWhenViewAppears:
cancelPreviousPerformRequestsWithTarget:
tearDownTVOutWindow
_videoSnapshot
_mediaIsVideo
_didSetPhotoData
newFullSizeImage
setDestinationPlaceholderHidden:
setCurrentTime:timeSnapOption:
_scrubberTimeFromMovieTime:
changeDetailsForObject:
assetContentChanged
_scrubberTimeNeedsMapping
convertToOriginalTimeFromScaledTime:forExport:
convertToScaledTimeFromOriginalTime:forExport:
_handleScreenConnectionChange:
setMinValue:
setMaxValue:
setStartValue:
setEndValue:
_scrubToSlalomRegionEditorStartHandle:
startValue
endValue
_didEditSlalom
_setDidEditSlalom:
_cancelDelayedCommitPendingAdjustmentsUpdate
_commitPendingAdjustmentsUpdate
cancelPreviousPerformRequestsWithTarget:selector:object:
adjustmentFormatIdentifier
adjustmentFormatVersion
initWithFormatIdentifier:formatVersion:data:
initWithAdjustmentBaseVersion:mediaType:
setAdjustmentData:
clearRenderedContentURL
setContentEditingOutput:
performChangesAndWait:error:
forceZoom
forceUnzoom
requestAVAssetForExport:withResultHandler:
_filePathForFlattenedVideoMetadata
_readMetadataFromPath:
_metadataForFlattenedVideo
propertyListDictionary
dictionaryWithContentsOfFile:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_pathForOriginalFile
lastPathComponent
stringByAppendingPathComponent:
stringByAppendingPathExtension:
fileExistsAtPath:isDirectory:
_deleteFileAtPath:
_writeMetadata:toPath:
removeItemAtURL:error:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
moviePlayerControllerDidBecomeActiveController:
moviePlayerControllerWillResignAsActiveController:
moviePlayerExitRequest:exitReason:
moviePlayerReadyToDisplay:
moviePlayerBufferingStateDidChange:
moviePlayerPlaybackStateDidChange:fromPlaybackState:
moviePlayerPlaybackRateDidChange:
moviePlayerPlaybackDidEnd:
moviePlayerDurationAvailable:
moviePlayerUpdatedDestinationPlaceholder:
moviePlayerWasSuspendedDuringPlayback:
moviePlayerEncounteredAuthenticationError:
moviePlayerShouldNotifyOnPreparationError:
moviePlayerControllerShouldAllowExternalPlayback:
moviePlayerDidChangeExternalPlaybackType:
moviePlayerRequestsPickedAirplayRoute:
moviePlayerHeadsetNextTrackPressed:
moviePlayerHeadsetPreviousTrackPressed:
slalomRegionEditorDidBeginEditing:withStartHandle:
slalomRegionEditorDidEndEditing:
slalomRegionEditorStartValueChanged:
slalomRegionEditorEndValueChanged:
slalomRegionEditorRequestForceZoom:
slalomRegionEditorRequestForceUnzoom:
videoScrubber
slalomRegionEditor
videoOverlayPlayButton
updateScaleMode
movieScrubber:timestampsStartingAt:endingAt:maxCount:
importerFinishedProcessingTrimmedVideo:
setProgress:
deleteOriginalFileAfterTrim
wasTrimmedInPlace
trimUsingMode:saveACopy:
videoPathAfterTrim
trimmedVideoClip
newPreviewImageData:
imageTile
handleDoubleTap
playingToVideoOut
forceStop
viewDidDisappear
commitPendingUpdatesWithCompletionHandler:
applicationWillResignActive
applicationDidEnterBackground
willMoveToSuperview:
didMoveToSuperview
setPosterFrameImage:
posterFrameImage
showsPlayOverlay
showsScrubber
prepareMoviePlayer
notifyRequiredResourcesDownloaded
scrubberIsSubview
notifyOfChange:shouldReloadBlock:
shouldShowCopyCalloutAtPoint:
_moviePlayer
updateForRotationWithDuration:isLandscape:
setScrubberWidth:
posterFrameView
setAllowSlalomEditor:
prepareMoviePlayerForScrubberAutomatically
setPrepareMoviePlayerForScrubberAutomatically:
set_didInsertMoviePlayerView:
_videoAVObjectBuilder
_isFetchingVideo
_expectedNotificationsCount
_adjustmentsToCommit
_attemptFetchingVideoDerivative
_setAttemptFetchingVideoDerivative:
_slalomRegionEditorCreatedForScrubber
_videoCameraImage
_pathToOriginalVideo
_posterFrameView
_videoOverlayBackgroundView
_trimMessageView
_posterFrameImage
_snapshotImage
_scrubberWidth
_scrubberBackgroundView
_scrubberTitleView
_scrubberUpdateTimer
_thumbnailOptionsDict
_thumbnailSize
_bakedLandscapeThumbnails
_bakedPortraitThumbnails
_exportSession
_remakerStartTime
_remakerEndTime
_trimmedPath
_videoPathAfterTrim
_trimProgressTimer
_trimmedVideoClip
_trimProgressStack
_progress
_maximumTrimLength
_lastScrubbedValue
_lastActualValue
_duration
_cachedCurrentPlaybackTime
_imageGenerators
_thumbnailReqlock
_thumbnailReqQueue
_airplayExportSession
_isAirPlay
_showsPlayButton
_showsScrubber
_canEdit
_loadMediaImmediately
_scrubberIsSubview
_viewWillAppear
_didLayout
_wasPlayingBeforeScrub
_playFromBeginning
_needsReloadScrubberThumbnails
_playing
_editing
_disableEditAfterTrim
_scrubbing
_scrubbingToRight
_deleteOriginalFile
_passthroughTrimming
_preparingMoviePlayer
_preparedMoviePlayer
_isMoviePlayerActive
_moviePlayerIsReady
_moviePlayerIsReadyForDisplay
_moviePlayerDidBuffer
_showingOverlay
_showingScrubber
_showScrubberWhenMovieIsReady
_playbackDidBegin
_loadScrubberThumbnails
_videoIsLandscape
_createPreviewPosterFrame
_isTrimming
_wasTrimmedInPlace
_remakingFailed
_summaryThumbnailRequestTimestamps
_detailThumbnailRequestTimestamps
_scrubber
_slalomRegionEditor
_cachedThumbnails
_landscapeSummaryThumbnailTimestamps
_portraitSummaryThumbnailTimestamps
_spinner
_shadowSpinner
_videoOverlayPlayButton
_useLandscapeCache
_videoStreamingStartTime
_allowSlalomEditor
_prepareMoviePlayerForScrubberAutomatically
_shouldPlayVideoWhenViewAppears
__didInsertMoviePlayerView
__didEditSlalom
__isFetchingVideo
__localVideoUnavailable
__canAttemptFetchingVideoDerivative
__attemptFetchingVideoDerivative
__slalomRegionEditorCreatedForScrubber
__videoAVObjectBuilder
__expectedNotificationsCount
__adjustmentsToCommit
boldSystemFontOfSize:
initWithFrame:textContainer:
setSelectable:
setTextContainerInset:
systemFontOfSize:
initWithPrivateStyle:
sendSubviewToBack:
setCornerRadius:
_bodyLabel
handleFailureInMethod:object:file:lineNumber:description:
indexOfObject:
globalIndexOfAsset:
assetContainerForAssetGlobalIndex:
allAssetsCount
section
item
indexPathForItem:inSection:
indexOffsetForAssetContainerAtAssetIndex:
assetInAssetContainer:atIndex:
globalIndexForIndexPath:
fetchPHObjectsForOIDs:
assetContainerForAsset:
incrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
decrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
lastAssetIndexPath
firstAssetIndexPath
assetCountForContainerAtIndex:
_indexOfNextNonEmptyAssetContainerAfterContainerIndex:wrap:
_indexOfPreviousNonEmptyAssetContainerBeforeContainerIndex:wrap:
objectIDAtIndex:
array
pl_managedAssetsForAssets:
addObjectsFromArray:
assetCollectionsFetchResult
changeDetailsForFetchResult:
fetchResultAfterChanges
insertedObjects
removedObjects
mutableCopy
removeObjectsForKeys:
setIncludeHiddenAssets:
fetchAssetsInAssetCollection:options:
hasIncrementalChanges
allKeys
_updateCachedValues
appendFormat:
assetsInAssetCollection:
initWithAssetCollectionsFetchResult:collectionsAssetsFetchResults:
_updateCachedCount:forContainerAtContainerIndex:
indexPathForGlobalIndex:
incrementGlobalIndex:insideCurrentAssetContainer:andWrap:
decrementGlobalIndex:insideCurrentAssetContainer:andWrap:
assetAtGlobalIndex:
assetWithObjectID:
assetsInAssetCollectionAtIndex:
newAssetsFetchResults
assetAtIndexPath:
indexPathOfAsset:
assetContainerAtIndex:
indexOfContainer:
hasAssetAtIndexPath:
findNearestIndexPath:preferNext:
assetCountForContainer:
pl_fetchAllAssets
viewControllerPhotoLibraryDidChange:
_assetCollectionsFetchResult
_assetsFetchResultByAssetCollection
_allAssetsCount
_containerCounts
_cachedValuesNeedUpdate
_lastAssetCollectionIndex
timeIntervalSinceReferenceDate
stopProgressTimer
animateWithDuration:delay:options:animations:completion:
showLoadingIndicator
startProgressTimer
imageNamed:inBundle:
setImage:forState:
setImageEdgeInsets:
_retryDownload
resetProgress
retryDownload
defaultHeightForBarSize:
fadeOutSoonIfNeededAndRemoveFromSuperview:
showLoadingIndicatorWhenReady
showErrorIndicator
updateCloudDownloadProgress:
setImageRect:
setToolbarVisible:
setRetryDelegate:
_loadingIndicatorView
_loadingContainerView
_loadingErrorButton
_indicatorIsVisible
_showingError
_showingLoading
_imageRect
_toolbarVisible
_lastViewPhaseChangeDate
initWithFrame:style:
_setupBackdropView
_updateContentEdgeInsets
safeAreaInsetsDidChange
setContentEdgeInsets:
autoLayoutCommonWallpaperButtonWithStyle:
setTranslatesAutoresizingMaskIntoConstraints:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
addObserver:
setAppliesOutputSettingsAnimationDuration:
backdropViewDidChange:
backdropView
inputSettings
outputSettings
setHighlighted:
restoreDefaultValues
isHighlighted
computeOutputSettingsUsingModel:
applySettings:
setSelected:
isSelected
isEnabled
legibleColor
autoLayoutCommonWallpaperButton
titleMaskImageView
setTitleMaskImageView:
setBackdropView:
_titleMaskImageView
_backdropView
pathExtension
uppercaseString
isRenderFileName:
importIdentifierOfCameraFile:
userData
setValue:forKey:
_checkIfIsInLibrary
isRender
isImage
isMovie
creationDate
fileSize
hasPhotoWithFileCreationDate:fileName:fileSize:
_utiConformsTo:
flushThumbnailCache
requestThumbnail
cameraFile
_renderFirstComparator
_fileTypeComparator
_originalFirstComparator
_fileTypeSortOrder
isRaw
itemComparator
importComparator
initWithCameraFile:
isInLibraryForce:
markAsInDatabase
setThumbnailWithImageRef:
clearThumbnail
forwardingTargetForSelector:
metadata
setMetadata:
canRequestMetadata
setCanRequestMetadata:
canRequestThumbnail
setCanRequestThumbnail:
setPath:
thumbnail
_inLibrary
_canRequestMetadata
_canRequestThumbnail
_isRender
_cameraFile
_metadata
_path
_name
_fileExtension
_thumbnail
selectedOption
allowsHDOver3GUpload
userInfo
setEnableHDUpload:
setUserInfo:
_startNetworkObservation
_setUpPublishingParams
stringByAppendingString:
stringByResolvingSymlinksInPath
bundleWithPath:
principalClass
initWithMedia:
sharedConnection
effectiveRestrictedBoolValueForSetting:
setMediaPath:
setDeleteMediaFileAfterPublishing:
setMediaIsHDVideo:
canUploadHDVideoOverCellular
isOnWifi
setAllowsHDOver3GUpload:
_setApproximateVideoUploadSizes
getSDRemakerModeForMode:
approximateByteSizeForMode:duration:
setApproximateSDUploadSize:
getHDRemakerModeForMode:
setApproximateHDUploadSize:
publishingAgentCancelButtonClicked:
publishingAgentDoneButtonClicked:
_remakerModeForSelectedOption
defaultDurationForTransition:
isVideoMedia
_agentIsReadyToPublish:
_transcodeVideo:
publish
publishingAgentDidBeginPublishing:
publishingAgentWillBeDisplayed:
setModalPresentationStyle:
presentViewController:animated:completion:
_stopNetworkObservation
presentingViewController
dismissViewControllerAnimated:completion:
mediaTitle
bytesRead
totalBytes
initWithDouble:
initWithLongLong:
_updateStatisticsFromSnapshots
longLongValue
initWithPublishingMedia:
publishingAgentDidStartRemaking:
actionWithTitle:style:handler:
addAction:
publishingAgentDidEndRemaking:didSucceed:
_remakerDidFinish:
messageForRemakingProgress
serviceName
allowsViewingOnHost
mediaURL
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
allowsTellingFriend
tellAFriendBody
tellAFriendURL
tellAFriendSubject
URLFragmentAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
publishingAgentForBundleNamed:toPublishMedia:
dataArrayInputStreamBytesWereRead:
allowsCellularAccessForRequests
mediaPath
deleteMediaFileAfterPublishing
mediaData
setMediaData:
isPublishing
setPublishing:
setRemakerMode:
setTrimStartTime:andEndTime:
resignPublishingSheetResponders
cancelButtonClicked
doneButtonClicked
presentModalSheetInViewController:
willDismiss
maximumVideoDuration
setTotalBytesWritten:totalBytes:
snapshot
estimatedTimeRemaining
percentComplete
remakingPercentComplete
cancelRemaking
isRemaking
videoRemaker:progressDidChange:
progressViewMessageDuringRemake
showAlertWithError:
ownerIsCamera
setOwnerIsCamera:
approximateHDUploadSize
approximateSDUploadSize
mediaIsHDVideo
enableHDUpload
needsTrimming
setNeedsTrimming:
remakerMode
setSelectedOption:
progressMultiplier
setProgressMultiplier:
shouldCancelPublish
setShouldCancelPublish:
_userInfo
_mediaPath
_mediaData
_mimeType
_deleteAfterPublishing
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_percentComplete
_remakingPercentComplete
_progressMultiplier
_snapshotTimes
_snapshotValues
_ownerIsCamera
_needsRemaking
_startTime
_endTime
_approximateHDUploadSize
_approximateSDUploadSize
_mediaIsHDVideo
_enableHDUpload
_needsTrimming
_allowsHDOver3GUpload
_selectedOption
_remakerMode
_completionSelector
_remakingWasCancelled
_publishing
_shouldCancelPublish
localizedCaseInsensitiveCompare:
compare:
title
_title
text
_placeholder
updatePlaceholder
isDragging
firstResponder
becomeFirstResponder
setContentOffset:
setPlaceholderText:
_showingPlaceholder
initWithFormat:
initWithStyle:reuseIdentifier:
tableCellBlueTextColor
contentView
setContentVerticalAlignment:
setKeyboardType:
setClearButtonStyle:
_textFieldChanged
addTarget:action:forEvents:
setSelectionStyle:
initWithFrame:multiLine:
posterCellIdentifier
initHDSDCell
setBackgroundView:
textLabel
accessoryView
resignFirstResponder
setPlaceholder:
editableCellDidBeginEditing:
editableCellReturnPressed:
editableCell:textChanged:
sizeThatFits:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
textViewShouldBeginEditing:
textViewShouldEndEditing:
textViewDidBeginEditing:
textViewDidEndEditing:
textView:shouldChangeTextInRange:replacementText:
textViewDidChange:
textViewDidChangeSelection:
textView:shouldInteractWithURL:inRange:interaction:
textView:shouldInteractWithTextAttachment:inRange:interaction:
textView:shouldInteractWithURL:inRange:
textView:shouldInteractWithTextAttachment:inRange:
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldShouldClear:
textFieldShouldReturn:
initWithFrame:cellStyle:
forceFirstResponder:
sizeTextLabel
contentSize
style
_textView
_textField
_sizeTextLabel
_forceFirstResponder
_cellStyle
editableTagCellEndOfTagCharacterPressed:
stream:handleEvent:
_scheduleCallback
getCFRunLoop
_scheduleInCFRunLoop:forMode:
_unscheduleFromCFRunLoop:forMode:
_updateProgress
performSelector:withObject:afterDelay:inModes:
bytes
_scheduleProgressUpdate
initWithDataArray:
_streamEventTrigger
_setCFClientFlags:callback:context:
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
open
close
streamError
streamStatus
read:maxLength:
hasBytesAvailable
getBuffer:length:
progressDelegate
setProgressDelegate:
_dataArray
_bodyData
_dataCount
_dataLength
_dataOffset
_currentIndex
_currentOffset
_currentLength
_openEventSent
_streamStatus
_progressDelegate
_rls
_clientCallback
_clientContext
_commonPLCropOverlayBottomBarInitialization
initWithCoder:
_updateBottomBars
_updateStyle
_updatePreviewBottomBarForPlaybackState
_isEditingStyle:
isInPopover
_playingVideo
_inPopover
_style
_cameraBottomBar
_previewBottomBar
_wallpaperBottomBar
backgroundView
_installBackgroundView
_syncToBackgroundType
showsCancelButton
isHidden
initWithProgressViewStyle:
setPercentComplete:
backgroundType
_removeBackgroundTintedView
_removeBackgroundBlurredView
_installBackgroundBlurredView
_installBackgroundTintedView
backgroundBlurredView
setBackgroundBlurredView:
backgroundTintedView
setBackgroundTintedView:
currentLocale
setLocale:
setGeneratesDecimalNumbers:
setNumberStyle:
setProgress:animated:
setCancelationHandler:
_cancel:
updateUIForPublishingAgent:
setShowsCancelButton:
cancelationHandler
_cancelButton
_labelView
_topDivider
_didSetPermanantTextOnLabelView
_progressFormatter
_backgroundType
_backgroundView
_backgroundTintedView
_backgroundBlurredView
_showsCancelButton
_cancelationHandler
MFMailComposeViewControllerClass
canSendMail
_mf_viewControllerForUnknownContactWithEmailAddress:
newComposeViewController
MFComposeRecipientViewClass
MFComposeRecipientClass
MFContactsSearchManagerClass
MFContactsSearchResultsModelClass
MFRecipientTableViewCellClass
MFSearchShadowViewClass
newCNUnknownPersonViewControllerWithEmailAddress:
numberWithLongLong:
maximumDurationForPreset:properties:
estimatedOutputFileLengthForPreset:duration:properties:
requestAVAssetWithResultHandler:
exportPresetOverride
addCustomLabel:toMetadata:
shouldExportToPhotoDataDirectory
_fileFormatForURL:
_resetProgressTimer
lowercaseString
dictionaryWithObjectsAndKeys:
containsObject:
_removeProgressTimer
_didEndRemakingWithTemporaryPath:
maximumDurationForTrimMode:
trimStartTime
trimEndTime
progressHandler
setProgressHandler:
setShouldExportToPhotoDataDirectory:
customAccessibilityLabel
setCustomAccessibilityLabel:
_trimStartTime
_trimEndTime
_progressTimer
_shouldExportToPhotoDataDirectory
_progressHandler
_exportPresetOverride
_customAccessibilityLabel
_graphicsQuality
initWithStyle:
bundleForClass:
pl_videoOverlayButtonSize
_playButtonTapped:
_playButtonActivate:
_playButtonDeactivate:
initWithImage:
_setBackdropMaskViewFlags:
updateMaskViewsForView:
setSize:
_button
_overlayPlayBackground
_target
_action
_normalButtonImage
_highlightedButtonImage
_handleTap:
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
drawAtPoint:blendMode:alpha:
viewControllerForView:
disableViewInPopoverRule
didMoveToWindow
setDisableViewInPopoverRule:
_disableViewInPopoverRule
_editingForThirdParty
_cancelTrim:
_trimVideo:
_setupNavigationItemAndTrimTitle:
setParentInPopoverException:
setImagePickerOptions:
initWithTitle:
parentInPopoverException
dictionaryWithDictionary:
editVideoViewController:didTrimVideoWithOptions:
dictionaryWithObject:forKey:
editVideoViewControllerDidCancel:
editVideoViewController:didFailWithError:
errorWithDomain:code:userInfo:
imagePickerController:didFinishPickingImage:editingInfo:
imagePickerController:didFinishPickingMediaWithInfo:
imagePickerControllerDidCancel:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
initWithPhoto:trimTitle:
initWithProperties:
initWithVideoURL:trimTitle:
shouldAutorotateToInterfaceOrientation:
setViewClass:
_options
_imagePicker
_navItem
_parentInPopoverException
barStyle
beginDisablingInterfaceAutorotation
isInterfaceAutorotationDisabled
endDisablingInterfaceAutorotation
_setAutorotationDisabled:
expandableViewDidCompleteCollapsing:
expandableViewWillBeginExpanding:
expandableView:willCancelCollapsingWithDuration:
expandableView:willCompleteCollapsingWithDuration:
expandableView:willCompleteExpandingWithDuration:
expandableView:willCancelExpandingWithDuration:
expandableViewDidCompleteExpanding:
expandableViewDidBeginCollapsing:
expandableViewDidCancelExpanding:
expandableViewDidCancelCollapsing:
_notifyWillBeginExpanding
_notifyWillCompleteExpandingWithDuration:
_notifyWillCancelExpandingWithDuration:
_notifyDidCompleteExpanding
_notifyWillBeginCollapsing
_notifyDidCancelExpanding
_notifyWillCancelCollapsingWithDuration:
_notifyWillCompleteCollapsingWithDuration:
_notifyDidCancelCollapsing
_notifyDidCompleteCollapsing
stateWillChangeTo:
setContractedFrame:
_transitionFromContracted:withDuration:
_transitionFromExpanding:withDuration:
_transitionFromCompleteExpand:withDuration:
_transitionFromCancelExpand:withDuration:
_transitionFromExpanded:withDuration:
_transitionFromContracting:withDuration:
_transitionFromCancelContract:withDuration:
_transitionFromCompleteContract:withDuration:
stateDidChangeFrom:
convertRect:toView:
expandableView:expansionFractionChanged:
setExpansionFraction:
numberOfTouches
_canPinch
_removeAllAnimations:
updatePinchState:
setState:withDuration:
beginTrackingPinch:
notifyExpansionFraction:force:
continueTrackingPinch:
snapState:
completeTrackingPinch:toState:duration:
state
finishTransitionToState:
locationOfTouch:inView:
velocity
convertPoint:toView:
transform
allowsExpansion
willMoveToWindow:
startedPinch:
continuedPinch:
finishedPinch:
canceledPinch:
finishTransition
pinchRect:inView:insetTouches:
collapseWithAnimation:completion:
expandWithAnimation:completion:
contractedFrame
setExpandedFrame:
expandedFrame
setAllowsExpansion:
previousState
expansionFraction
isTracking
canCollapse
_collapsingCompletionHandler
_expansionCompletionHandler
_contractedFrame
_expandedFrame
_leftTouchLocation
_rightTouchLocation
_previousLeftLocation
_previousRightLocation
_leftTouchIndex
_rightTouchIndex
_pinchVelocity
_trackingTimeInterval
_expansionFraction
_expandFlags
localizedStringForKey:value:table:
contentInset
contentOffset
standardUserDefaults
setContentOffset:animated:
keyForContentMode:
saveScrollPositionForKey:
restoreScrollPositionForKey:
setEdgeAntialiasingMask:
setBorderAndAccessoriesVisible:
initWithFrame:frameStyle:withBorder:
initWithFrame:frameStyle:
sizeThatFits:allowRounding:
imageSize
setPlaceholderScale:
_contentView
_setOriginalSize:
_borderAlphaForExpansionFraction:
setBorderAndAccessoriesAlpha:
_updatePinchWidthAndScaleWithLeftPoint:rightPoint:
_updateBorderAndAccessoriesAlpha
setAnchorPoint:
setEdgeAntialiasingEnabled:
setSize:angle:
_newSizeFromSize:
_currentScale
_expandedScale
_snappedExpandedFrame
_bounceToPlace:finished:context:
_bounceBack:finished:context:
beginAnimations:context:
setAnimationDuration:
setAnimationCurve:
setAnimationDelegate:
setAnimationDidStopSelector:
setAnimationDelay:
commitAnimations
setTransformAndCenterForFrame:
setBorderAndAccessoriesAlpha:forced:
layoutBelowIfNeeded
updateFullSizeImageVisibleArea
isBorderAndAccessoriesVisible
setImage:isFullscreen:
setFullSizeImageJPEGData:size:orientation:
setName:
showsPlaceholder
setShowsPlaceholder:
setShadowEnabled:
isShadowEnabled
setTransitionProgress:
transitionProgress
setTextBadgeString:
renderSnapshotInContext:
imageBorderWidth
frameOfImage
imageRotationAngle
isBeingManipulated
setPhoto:
_imageID
_originalSize
_originalWidth
_originalAngle
_anchorPoint
_imageRotationAngle
_pinchWidth
_pinchAngle
_pinchScale
_initialExpandingFrame
_originalBounds
_currentAngle
_centerOffset
_exImageFlags
_setupTargetScreen:
setScreen:
setBitsPerComponent:
setOverscanCompensation:
preferredMode
availableModes
setCurrentMode:
screen
_viewWillMoveToSuperView:
initWithFrame:photoTileController:
clearBackReference
canBecomeFirstResponder
_photoTileController
_updateContentInset
_centerImageInScrollView
isCloudPlaceholder
fullScreenSizeForScreen:contentMode:
hasAdjustments
cloudResourceForResourceType:
master
uuid
cloudResourceForResourceType:forAssetUuid:
isLocallyAvailable
width
height
screens
_handleSingleTap:
initWithTarget:action:
_handleDoubleTap:
setNumberOfTapsRequired:
_setPhoto:
setTileFrame:
_setImage:isThumbnail:preserveFrame:
_configureViews
initWithModelPhoto:image:frame:isThumbnail:imageOrientation:allowZoomToFill:mode:
setDeliveryMode:
imageForAsset:targetSize:contentMode:options:outInfo:
cancelFullSizeImageRequest
removeTarget:action:
removeAllGestureRecognizers
_teardownDispatchTimer
isViewLoaded
windows
_updateVideoViewForModelPhoto
setZoomScale:
_updatePlaceholderImageRect
requireGestureRecognizerToFail:
addGestureRecognizer:
removeFailureRequirement:
removeGestureRecognizer:
setZoomingGesturesEnabled:
_setCustomCenterOverlay:
_customCenterOverlay
_updateSubviewOrdering
setNeedsUpdateConstraints
ensureFullSizeImageLoaded
zoomScale
defaultZoomScale
isUserInteractionEnabled
mediaType
isMediaSubtype:
representsBurst
_showBadgeViewIfAppropriate
setBadgeVisible:animated:
_installSubview:
setContentSize:
setAlwaysBounceVertical:
setAlwaysBounceHorizontal:
setPreservesCenterDuringRotation:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setBouncesZoom:
_updatePlaceholderViewAnimated:
shouldShowPlaceholderForAsset:
_removePlaceholderView
_requestFullSizeImage
_clientIsWallpaper
setContentInset:
overlayInsets
shouldHideProgressIndicator
_updatePlaceholderVisibility
photoShouldHaveHDRBadge
_setupBadgeView
photoShouldHaveAvalancheBadge
_updateReviewCheckmark
isCloudSharedAsset
pixelWidth
pixelHeight
_updateModelPhotoWithImage:
updateZoomScales
_setDefaultZoomScale
_updateAggdKeys
cachingImageManager
cancelImageRequest:
isTVOut
tileIsOnScreen
setBadgeVisible:
allowsEditing
_performDidEndZoomBlock
_repositionBadgeView
visibleBounds
viewWillTransitionToSize:withTransitionCoordinator:
shouldSupressViewWillTransitionToSize
targetTransform
animateAlongsideTransition:completion:
transitionDuration
_performRotationUpdatesWithDuration:size:
setAdjustZoomScaleAfterRotation:
minRotatedScale
_calculateZoomScale:inView:
viewDidLayoutSubviews
_resetZoomCommon
didMoveToParentViewController:
updateViewConstraints
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraints:
weakRefWithObject:
applicationWillResignActive:
applicationDidBecomeActive:
setLoadingMode:
_handleFullSizeImageRequestResult:dataUTI:orientation:
requestImageDataForAsset:options:resultHandler:
setZoomScale:animated:
locationInView:
zoomToRect:animated:
newCGImageBackedUIImage
newImageWithCropRect:minimalCropDimension:croppedImageData:fullScreenImageData:fullScreenImage:imageCropRect:intersectCropWithFullRect:
_setDidEndZoomingBlock:
statusBarFrame
zoomToFillScale
minZoomScale
setMaximumZoomScale:
setMinimumZoomScale:
_adjustScrollViewContentOffsetForInsets
isZoomedOut
_adjustZoomForEnteringMode:
setHighlightedImage:
setReviewing:animated:
_setupReviewCheckmark
tileSize
tvOutTileSize
_shouldForwardViewWillTransitionToSize
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
initForPageController
initWithModelPhoto:thumbnailImage:size:
thumbnailImage
setThumbnailImage:
tileFrame
forceZoomingGesturesEnabled
expandableImageView
updateCenterOverlay
hideContentView
showContentView
tileDelegate
setTVOut:
userDidAdjustWallpaper
setClientIsWallpaper:
gesturesEnabled
setGesturesEnabled:
setAvalancheBadgesHidden:
installVideoOverlay:
setShouldHideProgressIndicator:
refreshTileWithFullScreenImage:modelPhoto:
didLoadImage
showErrorPlaceholderView
hasFullSizeImage
updateForVisibleOverlays:
scrollView:contentSizeForZoomScale:withProposedSize:
resetZoom
dictionaryWithCroppedImageForRect:minimalCropDimension:withOptions:
zoomToScale:animated:completionBlock:
zoomToFitScale
currentToMinZoomRatio
currentToDefaultZoomRatio
setAllowsZoomToFill:
updateAfterCollapse
setLockedUnderCropOverlay:
setReviewing:
setPicked:
centerContentVertically
setCenterContentVertically:
setUnscaledImage:
wantsCompactLayout
setWantsCompactLayout:
reviewing
picked
setShouldSupressViewWillTransitionToSize:
_pendingImage
_unscaledImage
_modelPhoto
_scrollView
_gradientView
_reviewCheckmarkImageView
_placeholderView
_currentTileDownloadFinished
_singleTapGestureRecognizer
_doubleTapGestureRecognizer
_tileDelegate
_imageSize
_tileFrame
_zoomToFillInsteadOfToFit
_useLessThanMinZoomForZoomedOutTest
_allowZoomToFill
_orientationDelegate
_cropRectZoomScale
_cropOverlayRect
_doubleTapZoomScale
_minZoomScale
_zoomToFillScale
_clientIsTemporarilyWallpaper
_userDidAdjustWallpaper
_wallpaperPortraitZoomScale
_wallpaperLandscapeZoomScale
_zoomScaleBeforeZooming
_cropRectBeforeDragging
_force1XCroppedImage
_forceNativeScreenScale
_centerContentVertically
_didEndZoomingBlock
_dispatchTimer
_dispatchStartTime
_dispatchTimeElapsed
_hasNotedZoom
_imageIsThumbnail
_isTVOut
_zooming
_autoZooming
_zoomGesturesEnabled
_userDidZoom
_ignoreZoomChange
_tileParentIsPageController
_lockedUnderCropOverlay
_viewDidAppear
_didRequestFullSizeImage
_useZoomScaleForCropRect
_avalancheBadgeShouldBeHidden
_badgeShouldBeVisible
_containerView
__cachingImageManager
_fullSizeImageRequestID
_customCenterOverlayConstraints
_shouldUpdateBadgeViewOptimalLayout
_badgeViewOptimalLayoutLowestTop
_isLoadingFullSizeImage
_wantsCompactLayout
_reviewing
_picked
_shouldHideProgressIndicator
_shouldSupressViewWillTransitionToSize
__customCenterOverlay
_overlayInsets
setVisibleRectangle:zoomScale:
initWithJPEGData:placeholderImage:screenSize:
flushCache
jpegImageSize
_jpegImageSize
setScrollsToTop:
setDecelerationRate:
_centerContentIfNecessary
willAnimateRotationToInterfaceOrientation:
adjustZoomScaleAfterRotation
_adjustZoomScaleAfterRotation
items
removeAllObjects
subarrayWithRange:
initWithItems:
removeItem:
didCompleteItem:
isCompleted
completedItems
itemsNotCompleted
_items
_index
enqueueImportItem:
dequeueImportItem
isValidPublishingMedia:
initWithManagedAsset:
initWithAVURLAsset:
setAsset:
durationForManagedAsset:applyVideoAdjustments:
setIsVideo:
setPathForVideoFile:
assetURL
setAssetURL:
setIsHDVideo:
_isHDVideo
_asset
_pathForVideoFile
_assetURL
setObject:
lruListEntry
_object
_entry
setObject:forKey:cost:
removeObjectForKey:
initWithCountLimit:totalCostLimit:
_cacheEntries
_countLimit
_currentCount
_totalCostLimit
_currentCost
_lock
_lru
identifier
sortedArrayUsingComparator:
_pl_insertObject:atBinarySearchingInsertionIndexWithComparator:
requestMetadata
thumbnailState
_addRepresentation:
representationForCameraFile:
_removeRepresentation:
_pl_firstObjectPassingTest:
representations
flushMetadataCache
_firstRepresentationPassingTest:
setThumbnailState:
_masterRepresentation
basePath
isLocked
_hasAnyRepresentationPassingTest:
fileExtensions
_pl_map:
_fileExtensionOfFirstRepresentationPassingTest:
arrayWithArray:
initWithIdentifier:parentFolder:
representationsSortedForImport
addRepresentationForCameraFile:
removeRepresentationForCameraFile:
metadataForRepresentationWithFileExtension:
hasAllMetadata
clearMetadata
masterPath
isOnDisk
markAsInLibrary
isStandalonePhoto
isStandaloneMovie
rawExtension
imageExtension
movieExtension
audioExtension
otherExtensions
parentFolder
setBasePath:
eventName
setEventName:
importedAsset
setImportedAsset:
shouldImport
setShouldImport:
importError
setImportError:
_sortedRepresentations
_metadataRequested
_shouldImport
_thumbnailState
_identifier
_parentFolder
_basePath
_eventName
_importedAsset
_importError
_handleImage
_handleTintColor
setTintColor:
_updateTrack
_trackFrame
_startHandleFrame
_endHandleFrame
setStartValue:notify:
setEndValue:notify:
_zoomMinValue
_zoomMaxValue
_handleFrameForValue:isStart:
_valueFromHandleFrame:isStart:
_trackFrameNoZoom
_isZoomed
_trackScale
_trimHandleWidth
_isTouch:inHandleIsStart:outTouchOffset:
_beginTrackingZoomWithTouch:
sendActionsForControlEvents:
_updateSlidersWithTouch:
_cancelZoomTrackingIfNeccessaryWithTouch:
_stopTrackingAndSendControlEvents:
_cancelTrackingZoom
_cancelZoom
isZoomAnimating
_valueFromStartHandleFrame:
_valueFromEndHandleFrame:
_zoomPressWasHeld
numberOfTouchesRequired
direction
minimumNumberOfTouches
translationInView:
_trackImageForZoom:
_trackColor
setFill
_tickColor
setStroke
regionEditorStyle
colorWithRed:green:blue:alpha:
colorWithAlphaComponent:
imageWithRenderingMode:
intrinsicContentSize
setTrackInsets:
setRegionEditorStyle:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
_drawCurveWithFlatEndsFromX:fromY:toX:toY:
trackInsets
trimHandleWidth
setTrimHandleWidth:
minValue
maxValue
zoomDelay
_startHandleView
_endHandleView
_trackImageView
_trackSnapshotView
_draggingStart
_draggingEnd
_touchOffset
_zoomed
_trackingZoom
_touchLocationWhenTrackingZoomBegan
_forceLayout
_zoomAnimating
_regionEditorStyle
_minValue
_startValue
_endValue
_zoomDelay
_trackInsets
setContentMode:
setDrawsBorder:
setAllowsEdgeAntialiasing:
setContentsOpaque:
setAllowsDisplayCompositing:
setShadowRadius:
renderInContext:
badgeOffset
_leftAccessoryViewFrame
_bottomRightAccessoryViewFrame
_updateShadowPath
_transformForFullSizeImageTiledLayer
begin
commit
sharedPathCache
pathForKey:
setPath:forKey:
setShadowPath:
removeFromSuperlayer
addSublayer:
convertRect:fromLayer:
_setShadowEnabled:force:
shadowOpacity
setShadowOpacity:
_updatePlaceholderAlpha
setContents:
setContentsScale:
setContentsCenter:
setOpacity:
opacity
_updatePlaceholderLayout
placeholderSize
initWithWhite:alpha:
setLineBreakMode:
setBaselineAdjustment:
setMinimumScaleFactor:
setAdjustsFontSizeToFitWidth:
textBadgeForString:photoSize:
setLeftAccessoryView:animated:
setAllowsGroupOpacity:
setBottomRightAccessoryView:animated:
insertSubview:below:
initialize
shouldDrawShadows
parentDidLayout
borderAndAccessoriesAlpha
drawsBorder
setDimmed:
isDimmed
textBadgeString
setLeftAccessoryView:
setLeftAccessoryViewOffset:
setBottomRightAccessoryView:
setAccessoryViewsAlpha:
leftAccessoryView
leftAccessoryViewOffset
bottomRightAccessoryView
accessoryViewsAlpha
placeholderScale
_borderView
_leftAccessoryView
_bottomRightAccessoryView
_leftAccessoryViewOffset
_textBadge
_shadowEnabled
_suppressShadowDrawing
_borderViewIsVisible
_drawsBorder
_aspectRatio
_lastBorderAlphaTime
_lastShadowAlphaTime
_transitionProgress
_edgeAntialiasingEnabled
_fullSizeImageTiledLayer
_fullSizeImageOrientation
_showsPlaceholder
_accessoryViewsAlpha
_placeholderScale
URLForResource:withExtension:
initWithIndexSet:
importIndexes
containsIndex:
addIndex:
completedIndexes
errorIndexes
inProgressIndexes
_isImportCompleteForIndex:
removeIndex:
shiftIndexesStartingAtIndex:by:
initWithImportIndexes:
addIndexToImport:
beginImportForIndex:
completeImportForIndex:error:
importComplete
setImportComplete:
importStopped
setImportStopped:
importingSelection
setImportingSelection:
_importIndexes
_inProgressIndexes
_errorIndexes
_completedIndexes
_importComplete
_importStopped
_importingSelection
_pathCache
editImageViewController:didEditImageWithOptions:
editImageViewControllerDidCancel:
setImageSavingOptions:
saveOptions
_saveOptions
initWithDevice:delegate:
addImporter:
start
performSelectorOnMainThread:withObject:waitUntilDone:
_stopListening
importers
removeImporter:
isImporting
_cameraImporterDidFinishImporting:
_setDelaySuspend:
ejectCamera
camera
isCameraDevice:
importerMatchingDevice:
sharedCameraImportManager
deviceBrowser:didAddDevice:moreComing:
deviceBrowser:didRemoveDevice:moreGoing:
importerForDevice:withDelegate:
startListening
stopListening
stopListeningWithCallbackTarget:selector:
ejectCameras
setImporters:
_deviceBrowser
_importers
_importersToEject
_wantsToStopListening
_stopListeningCallbackTarget
_stopListeningCallbackSelector
reattachVideoView
insertSubview:atIndex:
setPlayer:
isDestinationPlaceholderHidden
_installBackgroundView:
_avPlayerView
_destinationPlaceholderHidden
_destinationPlaceholderStyle
initWithUnsignedInt:
cancelMouseTracking
_backgroundSavePhoto:
unsignedIntValue
inscribingBounds
_savePhotoFinished:
addObserver:forKeyPath:options:context:
wallpaperPreviewViewController
setWallpaperForLocations:
prepareForBackground:
prepareForForeground:
setPreviewVariant:
setPreviewType:
initWithWallpaperVariant:
setWallpaperPreviewViewController:
wallpaperConfigurationForVariant:includingValuesForTypes:
wallpaperType
_setStatusBarHidden:
removeObserver:forKeyPath:
_updatePreviewFrame:
_updateTitles
statusBar
foregroundColor
legibilityStyle
legibilitySettings
setLegibilityStyle:
initWithDefaultParameters
primaryColor
setForegroundColor:animationParameters:
setForegroundColor:
_setStatusBarStyle:
_motionEffectsSupported
_motionEffectsEnabled
motionEnabled
addChildViewController:
wallpaperTitle
_backgroundCropWallpaper
detachNewThreadSelector:toTarget:withObject:
numberWithUnsignedInt:
_cropWallpaperFinished:
wallpaperImageViewController:didSetWallpaperWithOptions:
saveWallpaperData
setWallpaperSynchronouslyFromArgs:
wallpaperImageViewControllerDidFinishSaving:
_savePhoto
setMotionEnabled:
_displayWallpaperOptionsSheet
wallpaperImageViewControllerDidCancel:
_statusBarStyle
updateForChangedSettings:
observeValueForKeyPath:ofObject:change:context:
providerLegibilitySettingsChanged:
setWallpaperFromArgs:
initWithUIImage:
_adjustScrollViewGeometry
setupWallpaperPreview
preferredStatusBarStyle
setSaveWallpaperData:
setWallpaperTitle:
previewVariant
previewType
isWallpaperEdit
setIsWallpaperEdit:
_statusBarHidden
_wallpaperMode
_navigationToolbarItems
_saveWallpaperData
_wallpaperTitle
_didSetImageMode
_isWallpaperEdit
__statusBarHidden
_wallpaperPreviewViewController
_previewVariant
_previewType
__statusBarStyle
initWithProceduralWallpaper:options:
initWithMagicWallpaper:options:
initWithImage:name:
canPlayPhotoIris
_wallPaperPreviewControllerForPhotoIrisAsset:
_wallPaperPreviewControllerForAsset:
initWithImage:name:video:time:
_fetchImageForWallPaperAsset:resultHandler:
requestAVAssetForVideo:options:resultHandler:
fetchPropertySetsIfNeeded
photoIrisProperties
photoIrisStillDisplayTime
initWithScrollableImage:video:time:
initWithScrollableImage:
setSynchronous:
setResizeMode:
requestImageForAsset:targetSize:contentMode:options:resultHandler:
wallpaperImage
setColorSamplingEnabled:
colorSamplingEnabled
initWithUIImage:name:
_updateSubviews
_setContentsScale:
_updateSublayersContentsScale
_contentsScale
_progressArcLayer
_setContentView:
setPieRadius:
_sliceLayer
_setSliceLayer:
setZPosition:
setStrokeColor:
setFillColor:
_circleLayer
_setCircleLayer:
setLineWidth:
_setProgressArcLayer:
setPosition:
setRadius:
_irisGlyphLayer
_setIrisGlyphLayer:
_updateUIProgress
increaseUIProgress:
scheduledTimerWithTimeInterval:repeats:block:
toRadian:
setStartAngle:
setEndAngle:
date
timeIntervalSinceDate:
recalculateIncreaseProgress:withTimeDiff:
setInitialIncreaseRatePerFrame:
_pieCenter
_pieRadius
_uiProgress
_realProgress
_increaseRate
_prevUpdateTime
__contentView
__sliceLayer
__circleLayer
__progressArcLayer
__irisGlyphLayer
__contentsScale
setNeedsDisplayOnBoundsChange:
radius
lineWidth
startAngle
endAngle
setNeedsDisplay
drawInContext:
_radius
_startAngle
_endAngle
_lineWidth
_updateBackgroundStyle
_commonPLCropOverlayEditPhotoBottomBarInitialization
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
textRectForBounds:limitedToNumberOfLines:
setBackgroundStyle:animated:
backgroundStyle
_backgroundStyle
_doneButton
_playbackButton
completion
animationDidStart:
animationDidStop:finished:
setCompletion:
setStart:
_completion
_start
_registerForNotifications
_setupPlayer
_updateTVOutEnabled
_updateDisableAirPlayMirroringDuringPlayback
_updateBackgroundViewInformation
_unregisterForNotifications
_setPlayerItem:
_tearDownPlayer
_willSuspendNotification:
_willBeginSuspendAnimationNotification:
_willResignNotification:
_simpleRemoteNotification:
_willEnterForegroundNotification:
_didEnterBackgroundNotification:
beginReceivingRemoteControlEvents
endReceivingRemoteControlEvents
auxiliarySession
setCategory:error:
setAudioSession:
setActionAtItemEnd:
setExternalPlaybackVideoGravity:
_playerKeysToObserve
removeObserver:forKeyPath:context:
URLFromPath:
_setPlaybackState:
_setBufferingState:
_loadAsset:
seekToTime:toleranceBefore:toleranceAfter:
_playerItemDidReachEndNotification:
_playerItemFailedToPlayToEndNotification:
replaceCurrentItemWithPlayerItem:
_updateFromPendingTime
statusOfValueForKey:error:
_didLoadValueOfKey:forAsset:
loadValuesAsynchronouslyForKeys:completionHandler:
isMainThread
_playerItemFailedToPlayToEnd:
_streamRanDry
_streamBufferFull
_streamLikelyToKeepUp
_streamUnlikelyToKeepUp
_dispatchOnMainThreadWithBlock:
_playerRateDidChange:
_serverConnectionDidDie:
null
_isStreamableAsset:
setCurrentTime:timeSnapOption:forceUpdate:
_delayedUpdateFromPendingTime
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
rate
_isNetworkSupportedPath:
compare:options:range:
_restoreTVOutVideoIfNecessary
isSuspendedUnderLock
isExternalPlaybackActive
_tearDownTVOutWindow
beginBackgroundTaskWithExpirationHandler:
_pausePlaybackForNotification
_setForceDisableTVOut:
_displayVideoView
_setCALayerDestinationIsTVOut:
_setupTVOutWindow
endBackgroundTask:
isActiveController
_allowsExternalPlayback
setAllowsExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setIsActiveController:
code
_playbackFailedWithError:
domain
applicationState
_exitPlayer:
pauseDueToInsufficientData
TVOutEnabled
setTVOutEnabled:
forceDisableTVOut
_playerItem
_player
_view
_tvOutWindow
_hasPendingTime
_pendingTime
_pendingTimeSnapOption
_forceUpdateCurrentTime
_isExternalPlayback
_exited
_lastSetCurrentTimeTime
_isSeeking
_backgroundTaskId
_audioSessionActive
_originalAudioCategory
_TVOutEnabled
_forceDisableTVOut
_isPreparedForPlayback
_isActiveController
_bufferingState
_playbackState
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
CGPath
resizableImageWithCapInsets:
_flatImageWithColor:
defaultSizeForStyle:
_activityIndicatorView
_label
_checkmarkView
_isShowing
setVideoGravity:
videoRect
layerClass
scaleMode
_imageFromLabel:sizeToFit:
initWithSettings:strength:image:shadowImage:options:
setAlignment:
boundingRectWithSize:options:attributes:context:
drawWithRect:options:attributes:context:
newLegibilityViewWithSettings:forLabel:sizeToFit:
imageForText:font:textAlignment:constrainedToSize:
clearContentColorAccumulator
accumulateChangesToContentColor:
pl_primeForUseWithCameraOverlays
rootViewController
presentedViewController
initWithTransientContext:name:
_allSubscribersForAlbum:photoLibrary:
albumWithObjectID:inLibrary:
performBlockAndWait:
isOwnedCloudSharedAlbum
invitationRecord
getSharedContactStore
firstName
lastName
email
phone
descriptorForRequiredKeysForStyle:
predicateForContactsMatchingEmailAddress:
unifiedContactsMatchingPredicate:keysToFetch:error:
pl_findBestMatchingContactFromMatchingContacts:firstName:lastName:contactFormatter:
emailAddresses
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
phoneNumbers
isLikePhoneNumber:
allSubscribersForAlbum:
allSubscribersForAlbumWithObjectID:
initWithInvitationRecord:email:phone:firstName:lastName:displayName:
isOwner
matchingContactWithKeysToFetch:outMatchingKey:outMatchingIdentifier:
displayName
_invitationRecord
_email
_phone
_firstName
_lastName
_displayName
cloudAlbumSubscriberRecords
invitationState
managedObjectContext
existingObjectWithID:error:
inviteeEmails
inviteePhones
inviteeFirstName
inviteeLastName
inviteeDisplayNameIncludingEmail:
cloudOwnerEmail
cloudOwnerFirstName
cloudOwnerLastName
cloudOwnerDisplayNameIncludingEmail:allowsEmail:
_commonPLCropOverlayWallpaperBottomBarInitializationPad
_commonPLCropOverlayWallpaperBottomBarInitializationPhone
initWithContentColor:
initWithSettings:strength:string:font:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
setActive:
widthForToggleText
setMaxToggleWidth:
componentsJoinedByString:
_commonPLCropOverlayWallpaperBottomBarInitialization
_layoutSubviewsPad
_layoutSubviewsPhone
convertRect:fromCoordinateSpace:
_sizeForString:
setString:
font
sizeWithAttributes:
string
shouldOnlyShowLockScreenButton
shouldOnlyShowHomeScreenButton
setTitleLabel:
separatorLine
setSeparatorLine:
maxToggleWidth
_motionToggleHidden
_shouldOnlyShowLockScreenButton
_shouldOnlyShowHomeScreenButton
_doCancelButton
_doSetButton
_doSetHomeScreenButton
_doSetLockScreenButton
_doSetBothScreenButton
_motionToggle
_separatorLine
_maxToggleWidth
fileNameByRemovingRenderMarkerInFileName:
fullPathOfFolder:
isCameraFile:
parentFolderNameOfCameraFile:
numberOfRowsInSection:
rectForRowAtIndexPath:
pl_indexPathForLastRow
pl_scrollToBottom:
scrollRectToVisible:animated:
scrollToRowAtIndexPath:atScrollPosition:animated:
pl_resetContentOffsetFromContentInsets
tableFooterView
indexPathsForVisibleRows
numberOfSections
indexPathForRow:inSection:
pl_scrollToVisibleRowAtIndexPath:animated:
pl_scrollToTop:
pl_lastRowIsVisible
pl_setHidden:delay:animated:
removeAnimationForKey:
pl_setHiddenAnimationDuration
pl_drawBorderWithColor:width:
_isInPopoverPresentation
childViewControllers
arrayByAddingObject:
pl_visitControllerHierarchyWithBlock:
bundleIdentifier
saveImage:imageData:properties:completionTarget:completionSelector:contextInfo:
sharedPhotoStreamsHelper
shouldPublishScreenShots
saveImage:properties:completionBlock:
exceptionWithName:reason:userInfo:
saveVideoAtPath:properties:completionTarget:completionSelector:contextInfo:
canSaveVideoToCameraRoll:
cleanupForStoreDemoMode
hasCompletedRestorePostProcessing
hasCompletedMomentAnalysis
infoTextOverPinStripeTextColor
initWithFrame:turningPublicURLON:
_infoLabel
setAlbum:
setAlbumName:
setStreamOwner:
cloudAlbumSubtype
setAlbumIsFamilyStream:
_keyboardWillShow:
_keyboardWillHide:
_keyboardDidHide:
addInvitationRecordsObserver:
isFamilyCloudSharedAlbum
aa_primaryAppleAccount
initWithAppleAccount:grandSlamAccount:accountStore:
initWithAccount:
members
indexSetWithIndex:
reloadSections:withRowAnimation:
initWithRequest:handler:
addOperation:
_updateWantsPublicWebsiteField
_updateWantsAcceptCloudNotificationField
_updateWantsMultipleContributorsField
_updatePublicURLStateIfNecessaryAnimated:
_updateMultipleContributorsState
cloudPublicURLEnabledLocal
setOn:
cloudNotificationsEnabled
cloudMultipleContributorsEnabledLocal
setSeparatorStyle:
_updateAllControls
indexPathForSelectedRow
deselectRowAtIndexPath:animated:
cloudGUID
refreshSubscriberListForAlbumGUID:
_setShouldScrollToTopOnNextViewLayout:
_appAllowsSupressionOfAlerts
_suppressionContexts
setNotificationSuppressionContexts:
lastOperation
setToolbarHidden:animated:
viewDidLoad
isPresentedModally
_doneAction:
setHidesBackButton:
setTableHeaderView:
album
viewDidUnload
_shouldScrollToTopOnNextViewLayout
shouldAllowSBAlertSupression
setWithObject:
albumStreamingOptionsViewController:didCompleteWithReason:
_handleCompletionWithReason:
isOn
setCloudPublicURLEnabledLocal:
updateCloudSharedAlbumPublicURLStateOnServer:
performTransaction:completionHandler:
setCloudNotificationsEnabled:
performTransaction:
setCloudMultipleContributorsEnabledLocal:
updateCloudSharedAlbumMultipleContributorsStateOnServer:
isRecipientViewFirstResponder
scrollIndicatorInsets
setScrollIndicatorInsets:
userTrashAlbums:
topViewController
streamOwner
_deletePhotoStream
_displayConfirmationWithMessage:destructiveTitle:actionHandler:
publicURL
initWithActivityItems:applicationActivities:
setShowKeyboardAutomatically:
cloudPublicURLEnabled
cloudMultipleContributorsEnabled
_publicURLEnabled
insertRowsAtIndexPaths:withRowAnimation:
deleteRowsAtIndexPaths:withRowAnimation:
tableView:titleForFooterInSection:
_lastPublicURLSectionFooterTitle
_reloadSectionHeaderFooters:withRowAnimation:
_setLastPublicURLSectionFooterTitle:
performBatchUpdates:completion:
_lastMultiContributorsSectionFooterTitle
_setLastMultiContributorsSectionFooterTitle:
descriptorForRequiredKeys
_resendInvitationToSelectedSubscriber
_displayConfirmationForRemovalOfSelectedSubscriber
viewControllerForContact:
setAllowsActions:
highlightPropertyWithKey:identifier:
contentViewController
cardFooterGroup
addActionWithTitle:target:selector:inGroup:destructive:
setGivenName:
setFamilyName:
initWithLabel:value:
setPhoneNumbers:
setEmailAddresses:
viewControllerForUnknownContact:
setAllowsAddingToAddressBook:
_selectedSubscriberInvitationRecord
resendPendingInvitationWithGUID:albumGUID:
_removeSelectedSubscriber
userDeleteSubscriberRecord:
invitationRecordsDidChange
setSharedAlbumSubscribers:
albumIsFamilyStream
sharedAlbumSubscribers
_changeWantsMultipleContributors:
setAccessoryView:
appleID
profilePictureForFamilyMember:
setPersonIcon:
stringFromPersonNameComponents:
detailTextLabel
_systemInteractionTintColor
setAttributedText:
setAccessoryType:
invitationStateDescription
imageData
imageWithData:
setPersonFirstName:
setPersonLastName:
_changeWantsPublicWebsite:
_changeWantsAcceptCloudNotification:
defaultParagraphStyle
_systemDestructiveTintColor
dequeueReusableCellWithIdentifier:
_multipleContributorsEnabled
rowHeight
_shouldShowPublicURLActivitySpinner
_setShowingPublicURLActivitySpinner:
initWithSharedStream:
pushViewController:animated:
_setSelectedSubscriberInvitationRecord:
_personViewControllerSubscriberInfo:canResendInvitation:canRemoveSubscriber:
setHidesBottomBarWhenPushed:
_displayActivitySheet
_displayDeleteConfirmation:
backingNavigationControllerForComposeRecipientViewController:
composeRecipientViewControllerReturnKeyPressed:
composeRecipientViewControllerRecipientContainerViewDidResize:fromFrame:toFrame:
invitationRecordsDidChange:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
initWithAlbum:
contentSizeForViewInPopover
_cancelAction:
_setShowingMultipleContributorSpinner:
setIsPresentedModally:
albumName
_visiblePublicURL
_showShareLink
_album
_composeRecipientController
_optionsTableView
_wantsPublicWebsiteSwitch
_wantsMultipleContributorsSwitch
_wantsAcceptCloudNotificationSwitch
_adjustedInsetsForKeyboard
_addSubscribersRow
_familyRequestQueue
_familyAccountStore
_familyMembers
_familyMemberPictureStore
_familyProfilePictures
_isPresentedModally
_streamOwner
__shouldScrollToTopOnNextViewLayout
_albumIsFamilyStream
_albumName
_sharedAlbumSubscribers
__selectedSubscriberInvitationRecord
__lastPublicURLSectionFooterTitle
__lastMultiContributorsSectionFooterTitle
_commonPLContactPhotoOverlayInitialization
bezierPathWithRect:
bezierPathWithOvalInRect:
appendPath:
setUsesEvenOddFillRule:
circularLayer
setFillRule:
setCircularLayer:
beginAvatarTrackingFromImageView:
endAvatarTracking
_avatarPreview
__avatarPreview
_circularLayer
initWithNibName:bundle:
_keyboardSizeDidChange:
didReceiveMemoryWarning
setLabel:
setAddresses:
setBounces:
_searchForRecipientWithText:
willAnimateRotationToInterfaceOrientation:duration:
reflow
didRotateFromInterfaceOrientation:
isPopoverVisible
_presentSearchResultsPopover
recipients
initWithRecipient:
_updateViewsLayoutAnimated:completion:
_forceDismissPeoplePickerPopover
dismissPopoverAnimated:
getSharedAddressBook
_searchResultsShowInPopover
textField
presentPopoverFromRect:inView:permittedArrowDirections:animated:
_addressBook
initWithAddressBook:properties:propertyCount:recentsBundleIdentifier:
setSearchTypes:
_updateSearchResultsTableVisibility
_newSearchResultsTable
_newShadowView
initWithContentViewController:
subviews
_searchManager
cancelTaskWithID:
initWithFavorMobileNumbers:
reset
searchForText:consumer:
selectedPhoneString
recentEventForAddress:displayName:kind:date:weight:metadata:options:
selectedEmailString
defaultInstance
recordContactEvents:recentsDomain:sendingAddress:completion:
isEqualToNumber:
addResults:ofType:
_setSearchResults:
processAddedResultsOfType:completion:
hasContent
addresses
removeRecipient:
clearText
composeRecipientView:composeRecipientForAddress:
addRecipient:
setDisplayedPropertyKeys:
setPrompt:
predicateWithFormat:
setPredicateForSelectionOfContact:
isFirstResponder
addButton
_dismissContactPicker:
recipient
address
contactFromPerson:keysToFetch:
labeledValueIdentifier
navTitle
recipientWithProperty:address:
recipientWithRecord:property:identifier:
cellForRecipient:
setRecipient:
contact
personFromContact:
abPropertyIDfromContactPropertyKey:
labeledValue
multiValueIdentifierFromLabeledValue:
addRecord:property:identifier:
_addRecipientFromSelectedContactProperty:
contactPropertyWithContact:propertyKey:identifier:
recordRecentInvitationRecipient:displayName:date:
contactPickerDidCancel:
contactPicker:didSelectContact:
contactPicker:didSelectContactProperty:
contactPicker:didSelectContacts:
contactPicker:didSelectContactProperties:
consumeAutocompleteSearchResults:taskID:
finishedSearchingForAutocompleteResults
consumeCorecipientSearchResults:taskID:
finishedSearchingForCorecipients
finishedTaskWithID:
beganNetworkActivity
endedNetworkActivity
consumeSearchResults:type:taskID:
finishedSearchingForType:
popoverControllerShouldDismissPopover:
popoverControllerDidDismissPopover:
popoverController:willRepositionPopoverToRect:inView:
setMaxExpandRows:
composeRecipientView:requestDeleteRecipientAtIndex:
composeRecipientView:didFinishEnteringAddress:
composeRecipientView:didChangeSize:
composeRecipientView:textDidChange:
composeRecipientViewRequestAddRecipient:
composeRecipientViewIsShowingPeoplePicker:
composeRecipientViewDidFinishPickingRecipient:
composeRecipientView:showPersonCardForAtom:
composeRecipientView:composeRecipientForRecord:identifier:
composeRecipientView:composeRecipientForRecord:property:identifier:
composeRecipientViewReturnPressed:
makeRecipientViewFirstResponder
makeRecipientViewResignFirstResponder
recipientView
maxExpandRows
_recipientView
_recipientContainerView
_keyboardFrame
_maxExpandRows
_searchResultsModel
_searchResults
_currentSearchTaskID
_searchResultsTable
_searchResultsPopoverController
_peoplePickerPopoverController
_flags
uncommentedAddress
record
mf_isLegalEmailAddress
insertObject:atIndex:
abNormalizedPhoneNumberFromString:
validPhoneNumberFromString:
validEmailAddressFromComposeRecipient:
displayString
allEmails
allPhones
initWithTypes:error:
matchesInString:options:range:
resultType
phoneNumber
invalidAddressString
_mfRecipient
_allEmails
_allPhones
_selectedPhoneString
_selectedEmailString
_invalidAddressString
noContentLightGradientBackgroundColor
_updateAccessDeniedView
_popoverController
_showCancelButton
isPhotoLibraryReadAccessAllowed
isPhotosTCCAccessNotAllowed
setMessage:
_cancelButtonClicked:
_setImagePickerMediaTypes:
_showingAccessDeniedView
_accessDeniedView
_shouldReverseLayoutDirection
layoutMargins
accessoryType
_personIconImageView
personIcon
_personMonogramImage
initWithStyle:diameter:
personFirstName
personLastName
monogramForPersonWithFirstName:lastName:
_setPersonMonogramImage:
setMasksToBounds:
_updatePersonIconImageView
_setPersonIconImageView:
_personIcon
_personFirstName
_personLastName
__personIconImageView
__personMonogramImage
_loadingLabel
systemLibraryManager
iTunesPhotosDirectory
setCamera:
transportType
usbVendorID
didReceiveImportNotification:
importerDidFinishReadingImportItems:error:
productKind
requestEject
estimatedNumberOfDownloadableItems
contentCatalogPercentCompleted
isAppleDevice
importItemForCameraFile:
itemsMapping
importer:didAddImportItem:atIndex:
importer:didChangeImportItem:changeType:error:
_addImportItemFromCameraFile:
indexSet
removeObjectsAtIndexes:
importer:didRemoveImportItems:atIndexes:
_deleteImportItemFromDisk:
_didFinishDeletingItems:
requestOpenSession
_enqueueItemsToThumbnailQueue:
_requestNextThumbnailFromQueue
didReceiveThumbnailForImportItem:error:
managedObjectContextStoreUUID
persistString:forKey:fileURL:
importer:didCopyOriginalForItem:error:
importImportItem:
removeUnusedDCIMDirectoryAtPath:
currentCalendar
components:fromDate:
setDay:
setHour:
setMinute:
setSecond:
dateFromComponents:
setWeekday:
weekdayOrdinal
setWeekdayOrdinal:
eventNameFromDate:
importer:didCompleteImportForItems:
UUIDString
setLastImportSessionUUID:
setImportSessionIdentifier:
_clearImportItemsForDownload:
_separateItems:intoEventsWithGranularity:
makeObjectsPerformSelector:withObject:
numberWithInteger:
urlForNewDCIMFolderWithFolderNumber:
didDownloadFile:error:options:contextInfo:
requestDownloadFile:options:downloadDelegate:didDownloadSelector:contextInfo:
didImportImportItem:error:
_sidecarsForItem:
_avalancheUUIDForItem:atMaterPath:
importSessionIdentifier
importFilesWithMasterPath:sidecarFileInfo:intoEventWithName:importSessionIdentifier:isPhotoStreamsPublishCandidate:avalancheUUID:
modificationDate
importer:didImportItem:error:
_didFinishImportingItems:
_photoLibraryFinishedImportForPhoto:atPath:error:
_downloadImportItems:
reverseObjectEnumerator
allObjects
validateAvalanches:
postNotificationName:object:userInfo:
cancelDownload
initWithArray:
minusSet:
_deleteImportItemsFromDiskInBackground:
_stopImport
requestDeleteFiles:
_deleteImportItems:
importer:didCompleteRemovalOfItems:
stringByExpandingTildeInPath
_removeImportItemsAtPathsInBackground:
performSelectorInBackground:withObject:
didDisconnectFromCamera:error:
didConnectToCamera:error:
mediaFiles
addImportItemsFromCameraFiles:
camaraDidEnumerateContents
cameraDidError:
removeImportItemsForCameraFiles:
_coalescedRemoveImportItems
didReceiveThumbnail:forCameraFile:error:
didReceiveMetadata:forCameraFile:error:
didRemoveDevice:
device:didOpenSessionWithError:
deviceDidBecomeReady:
device:didCloseSessionWithError:
device:didReceiveStatusInformation:
device:didEncounterError:
cameraDevice:didAddItems:
cameraDevice:didRemoveItems:
cameraDevice:didReceiveThumbnail:forItem:error:
cameraDevice:didReceiveMetadata:forItem:error:
cameraName
cameraKind
estimatedNumberOfItems
contentPercentCompleted
deviceIsLocked
allImportItems
readImportItems
readMetadataForImportItems:
readThumbnailsForImportItems:
approximateBytesRequiredToImportItem:
importItems:
stopImport
removeItems:
setItemsMapping:
setIsAppleDevice:
_thumbnailQueue
_downloadQueue
_importQueue
_deleteQueue
_orphanItems
_coalescedDeletedItems
_importInProgress
_parentFolderMapping
_autosplitEvents
_eventSplitGranularity
_importFileManager
_stopAfterNextItemImport
_importItemInProgress
_avalanchesImported
_isAppleDevice
_itemsMapping
_camera
_importSessionIdentifier
_stopObservingReachabilityChanges
initWithContentRect:
mainWindow
registerDefaults:
_setImageOptions
_setRotationDisabledDuringTouch:
setupAppUI:
makeKeyAndVisible
_applicationDidResignActive:
_applicationDidBecomeActive:
_registerForPhotoStreamActivityNotifications
sharedStreamsExplictlyDisabled
sharedFinishedLaunching:
applicationIsInForeground:
_cleanUpOutboundSharingAssets
clientApplicationWillEnterForeground
_updatePhotoStreamProgressDisplay
_updateSharedPhotoStreamProgressDisplay
_displayAndRemovePhoneInvitationFailures
setReceivingRemoteControlEvents:
setStatusBarShowsProgress:
_updateSuspensionSettings
setNetworkActivityIndicatorVisible:
_unregisterForPhotoStreamActivityNotifications
userDidLeavePhotosApplication
shouldMakeUIForDefaultPNG
updateSuspendedSettings:
purgeExpiredOutboundSharingAssets
initWithBool:
sharedNetworkObserver
addObserver:selector:forHostname:
removeObserver:forHostname:
_startObservingReachabilityChanges
registerIdleStateChangeObserverWithToken:handler:
unregisterIdleStateChangeObserverWithToken:
authorizationStatusForEntityType:
callStackSymbols
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
setWindow:
useCompatibleSuspensionAnimation
photosPreferencesChanged
visitViewControllersWithBlock:
_updateNetworkActivityIndicatorAsync
handleImportCompleteAlertResponse:flags:
isReachable
currentTestName
setCurrentTestName:
currentTestOptions
setCurrentTestOptions:
notificationSuppressionContexts
iPhotoMigrationActivityAlert
setIPhotoMigrationActivityAlert:
_receivingRemoteControlEvents
_window
_observeForRechabilityChanges
_isReachable
_isOnWifi
_photoStreamIsBusy
_sharedPhotoStreamIsBusy
_photoStreamActivityToken
_sharedPhotoStreamActivityToken
_sharedPhotoStreamInvitationFailureToken
_currentTestName
_currentTestOptions
_notificationSuppressionContexts
_iPhotoMigrationActivityAlert
handlePossibleCoreDataError:
PLPhotosDefaults
PLMoviePlayerControllerManager
PLCropOverlay
PLCropOverlayCropView
PLCommentsFontCache
PLAdditions
PLUIImageViewController
PLVideoViewDelegate
NSObject
PLImageLoadingQueueDelegate
PLPhotoTileViewControllerDelegate
PLCropOverlayDelegate
PLNavigationControllerInterface
PLImagePickerUtils
PLAssetImageGenerator
PLVideoPosterFrameView
PLVideoView
UIMovieScrubberDelegate
UIMovieScrubberDataSource
PLMoviePlayerControllerDelegate
PLSlalomRegionEditorDelegate
PLVideoEditingOverlayView
PLAssetContainerDataSource
PHAssetCollectionDataSource
PLPhotoTileCloudPlaceholderView
PLTilePlaceholderView
PLWallpaperButton
_UIBackdropViewObserver
PLCameraImportItemRepresentation
PLPublishingAgent
PLDataArrayInputStreamProgressDelegate
PLPublishAlbum
PLTextView
PLTableViewEditableCell
UITextViewDelegate
UIScrollViewDelegate
UITextFieldDelegate
PLTableViewEditableTagCell
PLDataArrayInputStream
PLCropOverlayBottomBar
PLProgressView
PLMessageUIProxy
PLVideoRemaker
PLVideoOverlayButton
PLHighFidelityVideoOverlayButton
PLFlatVideoOverlayButton
PLUIView
PLUIEditVideoViewController
UIImagePickerControllerDelegate
UINavigationControllerDelegate
TrimVideoNavigationItem
PLExpandableView
SavingState
PLExpandableImageView
PLTVOutWindow
PLTileContainerView
PLPhotoTileViewController
UIGestureRecognizerDelegate
PLPhotoTileCloudPlaceholderViewDelegate
PLTiledLayer
PLTileableLayer
PLImageScrollView
PLCameraImportQueue
PLMutableCameraImportQueue
PLPublishingMedia
PLCacheEntry
PLCache
PLCameraImportItem
PLSlalomRegionEditor
PLImageView
PLImportSessionInfo
PLCGPathCache
PLUIEditImageViewController
PLCameraImportManager
ICDeviceBrowserDelegate
PLMoviePlayerView
PhotoSaving
PLWallpaperNavigationItem
PLWallpaperImageViewController
SBFLegibilitySettingsProviderDelegate
PLMagicWallpaperImageViewController
PLStaticWallpaperImageViewController
PLRoundProgressView
PLProgressArcLayer
PLCropOverlayPreviewBottomBar
PLCAAnimationDelegate
CAAnimationDelegate
PLMoviePlayerController
PLProgressHUD
PLAVPlayerView
PLLegibilityViewHelper
PhotoLibraryAdditions
PhotoLibrary
PLSharedAlbumSubscriberInfo
PLCropOverlayWallpaperBottomBar
PLImageCaptureHelpers
PhotosInternal
PLPublicURLActivityView
PLAlbumStreamingOptionsViewController
PLComposeRecipientViewControllerDelegate
PLInvitationRecordsObserver
UITableViewDataSource
UITableViewDelegate
PLContactPhotoOverlay
PLComposeRecipientViewController
CNContactPickerDelegate
MFContactsSearchConsumer
UIPopoverControllerDelegate
PLInvitationRecipient
PLUIPrivacyViewController
PLPersonTableViewCell
PLPhotoTilePlaceholderView
PLCameraImporter
ICDeviceDelegate
ICCameraDeviceDelegate
PLPhotosApplication
UIApplicationDelegate
@16@0:8
i16@0:8
v16@0:8
v20@0:8B16
B16@0:8
i20@0:8B16
v20@0:8i16
v24@0:8@16
@"MPMediaItemCollection"
@"NSMutableArray"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48B52
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8B16f20
@40@0:8{CGPoint=dd}16@32
v32@0:8@16@24
v28@0:8B16@20
v28@0:8B16d20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B20@0:8i16
@"PLCropOverlayCropView"
@"UIImageView"
@"UIView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"UIToolbar"
@"UILabel"
@"PLProgressHUD"
@"UIButton"
@"PLContactPhotoOverlay"
@"NSString"
@"<PLCropOverlayDelegate>"
@"PLCropOverlayBottomBar"
v24@0:8d16
@"UIFontDescriptor"
@40@0:8@16@24@32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
d32@0:8@16q24
d24@0:8@16
v28@0:8@16B24
v28@0:8@16f24
@24@0:8@16
v24@0:8@"PLVideoView"16
d32@0:8@"PLVideoView"16q24
d24@0:8@"PLVideoView"16
B24@0:8@"PLVideoView"16
v28@0:8@"PLVideoView"16B24
v28@0:8@"PLVideoView"16f24
v32@0:8@"PLVideoView"16@"UIView"24
@"NSDictionary"24@0:8@"PLVideoView"16
v48@0:8@16@24@32@40
v48@0:8@"PLImageLoadingQueue"16@"PLCachedImage"24@"PLManagedAsset"32@"PLImageSource"40
v28@0:8@"PLPhotoTileViewController"16B24
v24@0:8@"PLPhotoTileViewController"16
B24@0:8@"PLPhotoTileViewController"16
@"UIView"24@0:8@"PLPhotoTileViewController"16
@"<UILayoutSupport>"24@0:8@"PLPhotoTileViewController"16
v24@0:8@"PLCropOverlay"16
@56@0:8^{CGImage=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
q16@0:8
v40@0:8@16@24@32
v44@0:8@16@24@32B40
@"PLManagedAsset"
^{CGImage=}
@"UIImage"
@"PLCropOverlay"
@"PLPhotoTileViewController"
@"PLVideoView"
@"PLVideoRemaker"
@"PLProgressView"
@"NSURL"
@"PLImageCache"
@"PLImageLoadingQueue"
@"PLImageSource"
i24@0:8@16
q44@0:8B16B20B24^q28^B36
v36@0:8q16q24B32
@"AVAssetImageGenerator"
v24@0:8q16
v32@0:8@16d24
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
@44@0:8@16i24@28@36
v36@0:8@16@24B32
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
B28@0:8@16i24
v32@0:8@16Q24
v24@0:8@"PLMoviePlayerController"16
B28@0:8@"PLMoviePlayerController"16i24
v32@0:8@"PLMoviePlayerController"16Q24
B24@0:8@"PLMoviePlayerController"16
@"NSDictionary"24@0:8@"PLMoviePlayerController"16
v28@0:8@"PLSlalomRegionEditor"16B24
v24@0:8@"PLSlalomRegionEditor"16
B24@0:8@"PLSlalomRegionEditor"16
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48q56
d16@0:8
v32@0:8{CGSize=dd}16
v24@0:8^{CGImage=}16
@44@0:8@16@24@32i40
@32@0:8@16B24f28
v28@0:8d16i24
v44@0:8@16{CGSize=dd}24B40
v24@0:8B16B20
v40@0:8@16@24^v32
v20@0:8f16
v24@0:8i16B20
@24@0:8^@16
v24@0:8@?16
B24@0:8d16
v32@0:8@16@?24
d24@0:8d16
B32@0:8{CGPoint=dd}16
v28@0:8d16B24
v28@0:8B16@?20
@"PLVideoPosterFrameView"
@"PLVideoEditingOverlayView"
@"NSTimer"
@"NSDictionary"
{CGSize="width"d"height"d}
@"PLPhotoBakedThumbnails"
@"AVAssetExportSession"
@"PLProgressStack"
@"PLMoviePlayerController"
@"<PLVideoViewDelegate>"
@"NSArray"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
@"UIMovieScrubber"
@"PLSlalomRegionEditor"
@"NSMutableDictionary"
@"UIActivityIndicatorView"
@"UIView<PLVideoOverlayButton>"
@"PFVideoAVObjectBuilder"
@"PFVideoAdjustments"
@"UITextView"
@"PHFetchResult"24@0:8@"PHAssetCollection"16
@"PHFetchResult"16@0:8
@32@0:8@16@24
v32@0:8Q16Q24
@24@0:8Q16
Q24@0:8@16
Q32@0:8Q16B24B28
Q24@0:8Q16
@28@0:8@16B24
Q28@0:8Q16B24
@32@0:8@16B24B28
@32@0:8@16Q24
@"PHFetchResult"
B40@0:8{CGPoint=dd}16@32
@"PLRoundProgressView"
@"<PLPhotoTileCloudPlaceholderViewDelegate>"
@24@0:8q16
v24@0:8@"_UIBackdropView"16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"_UIBackdropView"
@?16@0:8
B20@0:8B16
B24@0:8^{__CFString=}16
@"ICCameraFile"
v24@0:8@"PLDataArrayInputStream"16
v32@0:8d16d24
v32@0:8q16q24
f16@0:8
@"NSData"
q24@0:8@16
v32@0:8{CGPoint=dd}16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B48@0:8@16{_NSRange=QQ}24@40
B56@0:8@16@24{_NSRange=QQ}32q48
B48@0:8@16@24{_NSRange=QQ}32
B24@0:8@"UITextView"16
v24@0:8@"UITextView"16
B48@0:8@"UITextView"16{_NSRange=QQ}24@"NSString"40
B56@0:8@"UITextView"16@"NSURL"24{_NSRange=QQ}32q48
B56@0:8@"UITextView"16@"NSTextAttachment"24{_NSRange=QQ}32q48
B48@0:8@"UITextView"16@"NSURL"24{_NSRange=QQ}32
B48@0:8@"UITextView"16@"NSTextAttachment"24{_NSRange=QQ}32
v32@0:8@16q24
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
{CGSize=dd}16@0:8
@"PLTextView"
@"UITextField"
v32@0:8^{__CFRunLoop=}16^{__CFString=}24
B40@0:8Q16^?24^{?=q^v^?^?^?}32
q32@0:8*16Q24
B32@0:8^*16^Q24
@"NSMutableData"
@"<PLDataArrayInputStreamProgressDelegate>"
^{__CFRunLoopSource=}
{?="version"q"info"^v"retain"^?"release"^?"copyDescription"^?}
v28@0:8q16B24
B24@0:8q16
@"PLCropOverlayPreviewBottomBar"
@"PLCropOverlayWallpaperBottomBar"
@"UIProgressView"
@"NSNumberFormatter"
q20@0:8i16
d20@0:8i16
q28@0:8i16d20
i20@0:8i16
v32@0:8@16:24
@40@0:8d16d24d32
v40@0:8@"UIImagePickerController"16@"UIImage"24@"NSDictionary"32
v32@0:8@"UIImagePickerController"16@"NSDictionary"24
v24@0:8@"UIImagePickerController"16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v24@0:8#16
@"UIImagePickerController"
@"UINavigationItem"
v28@0:8i16d20
v24@0:8f16B20
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
f24@0:8@16
f36@0:8@16i24d28
@"<PLExpandableViewDelegate>"
{CGPoint="x"d"y"d}
{?="state"b3"prevState"b3"tracking"b1"autorotationDisabled"b1"animationDisabled"b1"updateContractedFrame"b1"updateExpandedFrame"b1"allowsExpansion"b1"delegateWillBeginExpanding"b1"delegateWillCompleteExpanding"b1"delegateDidCompleteExpanding"b1"delegateWillCancelExpanding"b1"delegateDidCancelExpanding"b1"delegateDidBeginCollapsing"b1"delegateWillCompleteCollapsing"b1"delegateDidCompleteCollapsing"b1"delegateWillCancelCollapsing"b1"delegateDidCancelCollapsing"b1"delegateExpandedFractionChanged"b1}
@20@0:8i16
v36@0:8{CGSize=dd}16f32
f20@0:8f16
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGSize=dd}32@0:8{CGSize=dd}16
v48@0:8@16{CGSize=dd}24q40
v24@0:8^{CGContext=}16
@"PLImageView"
{?="isRotating"b1"didTrack"b1"updateFrame"b1"didLayout"b1"alwaysDoLayout"b1"didComputeCenterOffset"b1"imageIsFullScreen"b1}
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGImage=}48q56B64i68
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56i60
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48i56
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v48@0:8{UIEdgeInsets=dddd}16
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32B64i68B72i76
@48@0:8@16@24{CGSize=dd}32
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
v32@0:8@16B24B28
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
v40@0:8{CGSize=dd}16@32
v40@0:8d16{CGSize=dd}24
v40@0:8@16@24q32
@92@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48^@56^@64^^{CGImage}72^{CGRect={CGPoint=dd}{CGSize=dd}}80B88
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48i56
v36@0:8d16B24@?28
f28@0:8B16@20
{UIEdgeInsets=dddd}16@0:8
@"PHAsset"
@"PLImageScrollView"
@"PLExpandableImageView"
@"UIView<PLTilePlaceholderView>"
@"UIGestureRecognizer"
@"<PLPhotoTileViewControllerDelegate>"
@"NSObject<OS_dispatch_source>"
@"PLTileContainerView"
@"PHCachingImageManager"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
@48@0:8@16^{CGImage=}24{CGSize=dd}32
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}16@0:8
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}
@32@0:8q16q24
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{entryList="tqh_first"^{lruEntry}"tqh_last"^^{lruEntry}}
@24@0:8@?16
B24@0:8@?16
@"NSError"
v24@0:8Q16
d48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}28@0:8d16B24
d52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B36@0:8@16B24^d28
@20@0:8B16
v48@0:8d16d24d32d40
@"<PLSlalomRegionEditorDelegate>"
@40@0:8@16{CGSize=dd}24
{CGSize=dd}36@0:8{CGSize=dd}16B32
{CGAffineTransform=dddddd}16@0:8
@"PLPhotoTilePlaceholderView"
@"PLTiledLayer"
B24@0:8Q16
v28@0:8Q16B24
@"NSMutableIndexSet"
v56@0:8^{CGPath=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
^{CGPath=}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
^{__CFDictionary=}
v36@0:8@"ICDeviceBrowser"16@"ICDevice"24B32
@"ICDeviceBrowser"
v32@0:8q16d24
@"PLAVPlayerView"
v44@0:8@16@24@32i40
v24@0:8@"<SBFLegibilitySettingsProvider>"16
v48@0:8@16@24@32^v40
@"PLWallpaperNavigationItem"
@"SBSUIWallpaperPreviewViewController"
@48@0:8@16@24@32d40
@"NSDate"
@"CAShapeLayer"
@"PLProgressArcLayer"
@"CALayer"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v32@0:8d16Q24
v36@0:8d16Q24B32
@"AVPlayerItem"
@"AVPlayer"
@"PLMoviePlayerView"
@"PLTVOutWindow"
@"<PLMoviePlayerControllerDelegate>"
@36@0:8@16@24B32
@56@0:8@16@24q32{CGSize=dd}40
@64@0:8@16@24@32@40@48@56
@40@0:8@16^@24^@32
@"PLCloudSharedAlbumInvitationRecord"
{CGSize=dd}24@0:8@16
@"PLWallpaperButton"
@"_UILegibilityLabel"
v32@0:8B16d20B28
v88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
@"UINavigationController"24@0:8@"PLComposeRecipientViewController"16
v24@0:8@"PLComposeRecipientViewController"16
v88@0:8@"PLComposeRecipientViewController"16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
v24@0:8@"PLInvitationRecordsChangeNotification"16
q32@0:8@16q24
@32@0:8@16q24
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
d32@0:8@16@24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v40@0:8@16@24@?32
@"PLCloudSharedAlbum"
@"<PLAlbumStreamingOptionsViewControllerDelegate>"
@"PLComposeRecipientViewController"
@"UIBarButtonItem"
@"UITableView"
@"UISwitch"
@"NSOperationQueue"
@"ACAccountStore"
@"AAUIProfilePictureStore"
v24@0:8@"CNContactPickerViewController"16
v32@0:8@"CNContactPickerViewController"16@"CNContact"24
v32@0:8@"CNContactPickerViewController"16@"CNContactProperty"24
v32@0:8@"CNContactPickerViewController"16@"NSArray"24
v40@0:8@16Q24@32
v32@0:8@"NSArray"16@"NSNumber"24
v24@0:8@"NSNumber"16
v40@0:8@"NSArray"16Q24@"NSNumber"32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
B24@0:8@"UIPopoverController"16
v24@0:8@"UIPopoverController"16
v40@0:8@"UIPopoverController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
^v16@0:8
v40@0:8@16{CGSize=dd}24
@36@0:8@16^v24i32
@40@0:8@16^v24i32i36
@"PLComposeRecipientView"
@"UIScrollView"
@"<PLComposeRecipientViewControllerDelegate>"
@"MFContactsSearchManager"
@"MFContactsSearchResultsModel"
@"MFSearchShadowView"
@"NSNumber"
@"UIPopoverController"
{?="showingPeoplePicker"b1"showingSearchResultsTable"b1"offsettingForResultsTable"b1"wasFirstResponder"b1}
@"MFComposeRecipient"
@"_UIAccessDeniedView"
v24@0:8@"ICDevice"16
v32@0:8@"ICDevice"16@"NSError"24
v32@0:8@"ICDevice"16@"NSDictionary"24
v48@0:8@16^{CGImage=}24@32@40
v32@0:8@"ICCameraDevice"16@"NSArray"24
v48@0:8@"ICCameraDevice"16^{CGImage=}24@"ICCameraItem"32@"NSError"40
v48@0:8@"ICCameraDevice"16@"NSDictionary"24@"ICCameraItem"32@"NSError"40
v40@0:8^{CGImage=}16@24@32
@"PLMutableCameraImportQueue"
@"PLCameraImportQueue"
@"PLImportFileManager"
@"NSMutableSet"
@"<PLCameraImporterDelegate>"
@"ICCameraDevice"
B48@0:8@16@24@32@40
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8^{__CFUserNotification=}16Q24
@"UIWindow"
@"NSSet"
@"BLActivityAlert"
~@J
4@333333
1@ffffff
?es-8R
?333333
MbP?-C
@ffffff
@333?
?333333
"@ffffff6A
(video-playback) network reachability changes. Clears out cached video URL.
Clearing PLVideoView delegate before trim scrubber animation finished. Calling manually.
(video-playback) play due to buffer state change
(video-playback) pauseDueToInsufficientData due to buffer state change
(video-playback) moviePlayerPlaybackRateDidChange to 0
(video-playback) moviePlayerPlaybackRateDidChange to 1
Failed to fetch playback objects for %@
(video-playback) pause due to reset
Video export failed for asset %@: %@
(video-playback) _verifyOrRestartPlayback playing %u didBuffer %u
(video-playback) _verifyOrRestartPlayback rate > 0
(video-playback) _verifyOrRestartPlayback telling movie player to play
(video-playback) play in %@
Playing 360p video for cellular connection.
(streamed-video-playback) will play video for %@
(streamed-video-playback) already have a cachedNonPersistedVideoPlaybackURL %@
(streamed-video-playback) will play streamed video using original video at path %@
(video-playback) pause due to video view pause
(video-playback) pause due to stop
(video-playback) pause due to force stop
(video-playback) update poster frame visibility to %d
No PHAsset for committing pending adjustment changes
[Rep Thumbnail] Set thumbnail (%p) of rep: %@
[Rep Thumbnail] Clear thumbnail of rep: %@
[Rep Thumbnail] Requesting thumbnail for camera item: %@
Mis-matched image size and/or orientation for asset %@. PhotoKit: %.0f x %.0f (%ld). Data: %.0f x %.0f (%ld)
Requesting thumbnail for rep: %@
Requesting thumbnail for rep?: %@
(video-playback) %@ observeValueForKeyPath %@ %@
(video-playback) _playerRateDidChange %@
(video-playback) calling _player play
(video-playback) calling _player play in playFromBeginning
(video-playback) calling _player playDueToEnoughData
(video-playback) calling _player pause in pause
(video-playback) calling _player pauseDueToInsufficientData
(video-playback) calling _player pause in stop
(video-playback) setting buffering state to %lu
(video-playback) buffering state changed from %lu to %lu
Error attempting to fetch all unified contacts matching predicate [email=%@] : %@
Error attempting to fetch all unified contacts matching predicate [phone=%@] : %@
Error loading family members for family shared album: %@
Initialized PLInvitationRecipient emails %@ and phones %@. selectedPhoneString %@ selectedEmailString %@ _invalidAddressString %@
didConnectToCamera:%@ error:%@
didDisconnectFromCamera:%@ error:%@
cameraDidError:%@
deviceIsLocked: %d
Add import item with identifier: %@ %@
Sending didAddImportItem %@
Sending didChangeImportItem %@
addImportItemsFromCameraFiles: %@
didReceiveMetadata: %@ forCameraFile: %@ error: %@
Requesting thumbnail for item: %@
Did receive thumbnail for rep: %@
Unable to get thumbnail for rep: %@, error: %@
Error downloading ICCameraFile: %@, %@
Importing import item: %@
Did import item with error: %@ %@
-> importItems: %lu items timestamp: %f
-> didFinishImportingItems: %lu items timestamp: %f
didRemoveDevice: %@
device: %@ didOpenSessionWithError: %@
deviceDidBecomeReady: %@
device: %@ didCloseSessionWithError: %@
device: %@ didEncounterError: %@
cameraDevice: %@ didAddItems:%@
We should never attempt to access the contact store when it isn't authorized.  %@
We should never attempt to access the address book when it isn't authorized.  %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.Contacts.database-allow</key>
<true/>
</dict>
</plist>
