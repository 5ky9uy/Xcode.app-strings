com.apple.dyld.closured
closured
build launch info for: 
build dlopen info for: 
-create_closure
-create_closure option requires a path to follow
-cache_path
-cache_path option requires a path to follow
-pipefd
-pipefd option requires an file descriptor number to follow
bad value (%s) for -pipefd option %d
-env
-env option requires a following VAR=XXX
unknown option: %s
missing required -create_closure option
missing required -pipefd option
v8@?0
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
v44@?0r*8B16B20B24I28I32^B36
v36@?0r^v8Q16Q24I32
v52@?0r*8I16I20Q24Q32C40^B44
_dyld_get_shared_cache_range
com.apple.dyld.cache-builder.warnings
[%s] %s
makeGroupValue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/dyld_Sim/dyld-513.1/dyld3/LaunchCacheReader.cpp
groupIndex != 0
groupIndex < 255
imageIndexInGroup < 4096
Closure
closure->magic == binary_format::Closure::magicV1
imageBinary
index <_binaryData->imagesPoolCount
stringFromPool
offset < _binaryData->stringsPoolSize
dependentPool
index < _binaryData->dependentsPoolCount
segmentPool
index < _binaryData->segmentsPoolCount
v24@?0(ImageRef=I{?=b2b14b16})8(ImageRef=I{?=b2b14b16})12^B16
forEachDependentImage
!_binaryData->isInvalid
v32@?0I8{Image=^{Image}}12i20^B24
forEachInitBefore
startIndex + initCount <= endIndex
v12@?0(ImageRef=I{?=b2b14b16})8
!_binaryData->isDiskImage
cacheOffset
operator[]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/dyld_Sim/dyld-513.1/dyld3/LaunchCache.h
idx < _count
imageByIndex
/BuildRoot/Library/Caches/com.apple.xbs/Sources/dyld_Sim/dyld-513.1/dyld3/LaunchCacheWriter.cpp
imageIndex < imageCount()
setImageFileMtimeAndInode
!_imageFileInfoIsCdHash
setImageCdHash
_imageFileInfoIsCdHash
setImageFairPlayRange
_isDiskImage
(offset & 0x3FFF) == 0
(size & 0x3FFF) == 0
(offset & 0xFFF) == 0
(size & 0xFFF) == 0
offset < (_pageSize*16)
setImageSliceOffset
setImageCodeSignatureLocation
setImageDependent
depIndex < image.dependentsArrayCount
imageDependent
setImagePatchLocations
image.patchStartIndex + image.patchCount == _patchPool.size()
expandOpcodes
offset < _pageSize
page1[0x%03X] = 0x%016llX, page2[0x%03X] = 0x%016llX
page1[0x%03X] = 0x%016X, page2[0x%03X] = 0x%016X
%s offset=0x%04X: 
%s               
bind64
bind32
rebase64
rebase32
rebaseText32
bindText32
bindTextRel32
done
setPageOffset(%d)
incPageOffset(%d)
setOrdinal(%d)
incOrdinal(%d)
repeat(%d times, next %d opcodes)
makeFixupOpcodesForPage
delta4*4 < _pageSize
!_is64
0 && "ignore fixup types should have been removed"
start
stride %d
repeatBytes < 15
setImageFixups
segment %d has overlapping fixups at offset 0x%0llX and 0x%0llX
_diskImages[imageIndex].targetsArrayStartIndex == start
_diskImages[imageIndex].targetsArrayCount == count
/usr/local/lib:/usr/lib
/Library/Frameworks:/System/Library/Frameworks
DYLD_LIBRARY_PATH
DYLD_FRAMEWORK_PATH
DYLD_FALLBACK_FRAMEWORK_PATH
DYLD_FALLBACK_LIBRARY_PATH
DYLD_IMAGE_SUFFIX
DYLD_ROOT_PATH
DYLD_INSERT_LIBRARIES
v16@?0r*8
.framework/
not a fat file
fat header too large: %u entries
slice %d extends beyond end of file
v40@?0I8I12r^v16Q24^B32
x86_64h
x86_64
i386
arm64
arm64e
armv7k
armv7s
armv7
could not use '%s' because it is not a mach-o file
could not use '%s' because it is does not contain required architecture %s
could not use '%s' because it is not a dylib, bundle, or executable
could not use '%s' because the high bit of mach_header flags is reserved for images in dyld cache
could not use '%s' because it was built for a different platform
could not use '%s' because it is a static executable
load commands exceed length of file
__TEXT
load commands exceed length of __TEXT segment
load command #%d name offset (%u) outside its size (%u)
load command #%d string extends beyond end of load command
v24@?0r^{load_command=II}8^B16
load command size too small for LC_SEGMENT_64
segment load command size 0x%X will not fit whole number of sections
load command size 0x%X does not match nsects %d
load command size too small for LC_SEGMENT
__TEXT segment permissions is not 'r-x'
__LINKEDIT
__LINKEDIT segment permissions is not 'r--'
%s segment permissions has invalid bits set
%s segment content extends beyond end of file
%s segment vm range wraps
missing __TEXT segment
missing __LINKEDIT segment
segment %s vm range overlaps segment %s
segment %s file content overlaps segment %s
/usr/lib/libnetsnmp.5.dylib
segment load commands out of order with respect to layout for %s and %s
v68@?0r*8I16I20Q24Q32C40I44Q48C56^B60
section %s size too large 0x%llX
section %s start address 0x%llX is before containing segment's address 0x%0llX
section %s end address 0x%llX is beyond containing segment's end address 0x%0llX
section %s start address 0x%X is before containing segment's address 0x%0X
section %s end address 0x%X is beyond containing segment's end address 0x%0X
rebase opcodes
bind opcodes
weak bind opcodes
lazy bind opcodes
exports trie
local relocations
external relocations
indirect symbol table
shared cache info
function starts
data in code
symbol table
symbol table strings
code signature
malformed mach-o contains LC_DYLD_INFO and local relocations
malformed mach-o contains LC_DYLD_INFO and external relocations
malformed mach-o misssing LC_DYLD_INFO and LC_DYSYMTAB
start of LINKEDIT
LINKEDIT overlap of %s and %s
LINKEDIT content '%s' extends beyond end of segment
mis-aligned LINKEDIT content '%s'
LINKEDIT out of order %s
%d.%d.%d
file does not start with MH_MAGIC[_64]
malformed load command #%d, size too small %d
malformed load command #%d, size too large 0x%X
installName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/dyld_Sim/dyld-513.1/dyld3/MachOParser.cpp
header()->filetype == MH_DYLIB
getDylibInstallName(&result, &ignoreVersion, &ignoreVersion)
forEachDependentDylib_block_invoke
dylibCmd->dylib.name.offset < cmd->cmdsize
v76@?0r*8I16Q20r*28I36Q40Q48I56I60I64^B68
v72@?0r*8r*16I24Q28r^v36Q44I52I56I60^B64
could not find re-exported dylib %s
findExportedSymbol
ordinal >= 1
ordinal <= dependentDylibCount()
dependent dylib %lld not found for re-exported symbol %s
unsupported exported symbol kind. flags=%llu at node offset=0x%0lX
v44@?0r*8Q16C24C28S32^B36
LC_DYLD_INFO load command size wrong
multiple LC_DYLD_INFO load commands
LC_SYMTAB load command size wrong
multiple LC_SYMTAB load commands
LC_DYSYMTAB load command size wrong
multiple LC_DYSYMTAB load commands
LC_SEGMENT_SPLIT_INFO load command size wrong
multiple LC_SEGMENT_SPLIT_INFO load commands
LC_FUNCTION_STARTS load command size wrong
multiple LC_FUNCTION_STARTS load commands
LC_DATA_IN_CODE load command size wrong
multiple LC_DATA_IN_CODE load commands
LC_CODE_SIGNATURE load command size wrong
multiple LC_CODE_SIGNATURE load commands
LC_UUID load command size wrong
multiple LC_UUID load commands
LC_VERSION_* load command size wrong
multiple LC_VERSION_MIN_* load commands
LC_BUILD_VERSION load command size wrong
multiple LC_BUILD_VERSION load commands
LC_ENCRYPTION_INFO load command size wrong
multiple LC_ENCRYPTION_INFO load commands
LC_ENCRYPTION_INFO found in 64-bit mach-o
LC_ENCRYPTION_INFO_64 load command size wrong
multiple LC_ENCRYPTION_INFO_64 load commands
LC_ENCRYPTION_INFO_64 found in 32-bit mach-o
LC_DYSYMTAB but no LC_SYMTAB load command
malformed trie node, terminalSize=0x%llX extends past end of trie
malformed trie node, child node extends past end of trie
malformed trie child, nodeOffset=0x%llX out of range
malformed trie child, cycle to nodeOffset=0x%llX
malformed trie too deep
malformed uleb128
uleb128 too big for uint64
malformed sleb128
__objc_imageinfo
__DATA
__image_info
__OBJC
v52@?0r*8r*16I24r^v28Q36^B44
load
__RESTRICT
__restrict
v36@?0I8Q12Q20Q28
v12@?0I8
no __TEXT segment
-init does not point within __TEXT segment
initializer section %s/%s has bad size
initializer section %s/%s is not pointer aligned
initializer 0x%0llX does not point within __TEXT segment
initializer 0x%0X does not point within __TEXT segment
malformed exports trie
%s missing preceding REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s segment index %d too large
%s current segment offset 0x%08llX beyond segment size (0x%08llX)
%s pointer rebase is in non-writable segment
%s pointer rebase is in executable segment
%s text rebase is in segment that does not support text relocations
%s text rebase is in writable segment
%s pointer rebase is in non-executable segment
%s unknown rebase type %d
v48@?0B8I12Q16Q24r*32^B40
B16@?0Q8
REBASE_OPCODE_DO_REBASE_IMM_TIMES
REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB
REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB
unknown rebase opcode 0x%02X
local relocation has wrong r_length
local relocation has wrong r_type
v52@?0I8Q12B20i24r*28B36B40^B44
%s missing preceding BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM
%s missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL
%s has library ordinal too large (%d) max (%d)
%s has unknown library special ordinal (%d)
%s pointer bind is in non-writable segment
%s pointer bind is in executable segment
%s text bind is in segment that does not support text relocations
%s text bind is in writable segment
%s pointer bind is in non-executable segment
%s unknown bind type %d
BIND_OPCODE_DO_BIND
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB
bad bind opcode 0x%02X
bad lazy bind opcode 0x%02X
external relocation has wrong r_length
external relocation has wrong r_type
unexpected dylib ordinal in weak binding info
bad weak bind opcode 0x%02X
section %s overflows indirect symbol table
indirect symbol[%d] = %d which is invalid symbol index
symbol[%d] string offset out of range
__interpose
interposing section %s/%s has bad size
interposing section %s/%s is not pointer aligned
interposing section %s/%s is not in a segment
com.apple.dyld.cache.cache
duplicate LC_RPATH (%s) in %s
LC_RPATH to nowhere (%s) in %s
LC_RPATH uses @executable_path in %s
@executable_path
@loader_path
LC_RPATH with unknown @ variable (%s) in %s
LC_RPATH is absolute path (%s) in %s
v24@?0r*8^B16
load path is file system relative (%s) in %s
required dylib '%s' not found
required dylib '%s' not found, needed by '%s'
required dylib '%s' not found, needed by '%s'.  Did try: %s
found '%s' but it was built for different platform '%s' than required '%s'.  Needed by '%s'
found '%s' which is not a dylib.  Needed by '%s'
found '%s' which has compat version (%s) which is less than required (%s).  Needed by '%s'
B44@?0I8r*12^v20r^^{mach_header}28^^v36
recursiveBuildInitBeforeInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/dyld_Sim/dyld-513.1/dyld3/shared-cache/ImageProxy.cpp
_group == 0
_dependentsKind[depIndex] == LinkKind::weak
pcrel text rebasing not supported
unknown rebase type
v32@?0I8Q12C20^B24
malformed executable, unknown bind type (%d)
@main
@flat
ordinal %d not supported
symbol '%s' not found, expected in '%s'
dylib ordinal %d not found and not weak
v60@?0I8Q12C20i24Q28r*36B44B48^B52
@weak_def
weak def for %s can't find underlying rebase/bind in %s
offset < 0xFFFF
'%s' %s
could not find '%s'
could not use '%s'. Did try: %s
file not open()able '%s' errno=%d
file not found '%s'
B16@?0r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}8
v24@?0r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}8r^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
v20@?0^{ImageProxy=^{mach_header}QQQ^{Image}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}BCSB{Diagnostics=^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >={__tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > >=Q}}}B}{vector<dyld3::ImageProxy *, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}^^{ImageProxy}{__compressed_pair<dyld3::ImageProxy **, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}}}{vector<dyld3::launch_cache::Image::LinkKind, std::__1::allocator<dyld3::launch_cache::Image::LinkKind> >=^i^i{__compressed_pair<dyld3::launch_cache::Image::LinkKind *, std::__1::allocator<dyld3::launch_cache::Image::LinkKind> >=^i}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{InitOrderInfo={vector<dyld3::launch_cache::binary_format::ImageRef, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)^(ImageRef){__compressed_pair<dyld3::launch_cache::binary_format::ImageRef *, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)}}{vector<dyld3::ImageProxy *, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}^^{ImageProxy}{__compressed_pair<dyld3::ImageProxy **, std::__1::allocator<dyld3::ImageProxy *> >=^^{ImageProxy}}}}{vector<dyld3::launch_cache::binary_format::ImageRef, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)^(ImageRef){__compressed_pair<dyld3::launch_cache::binary_format::ImageRef *, std::__1::allocator<dyld3::launch_cache::binary_format::ImageRef> >=^(ImageRef)}}(ImageRef=I{?=b2b14b16})BBBBBBB}8i16
no loadable mach-o in %s
/Applications/iBooks.app/Contents/MacOS/iBooks
/sbin/launchd
/usr/local/sbin/launchd.debug
/usr/local/sbin/launchd.development
makeClosureBinary
mainProgProxy != nullptr
_images.size() >= 1
black listed program
.appex/
.app/
%s could not be added to closure because %s
depends on invalid dylib
can't find libdyld.dylib
__ZN5dyld318entryVectorForDyldE
can't find dyld entry point into libdyld.dylib
libdyld.dylib is incompatible with this dyld cache builder
/usr/lib/libSystem.dylib
/usr/lib/libSystem.B.dylib
can't find libSystem.dylib
populateGroupWriter
(imageParser.inDyldCache() == buildingDylibsInCache) && "all images must be same type"
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
/System/Library/Frameworks/IOKit.framework/IOKit
fixup problem in %s: %s
cacheGroup->_basedOn != nullptr
bad interposing implementation in %s
bad interposing target in %s
populateGroupWriter_block_invoke
interposeReplacement.isGroupImageTarget(replacementGroup, replacementIndexInGroup, replacementOffsetInImage)
replacementGroup == 2
replacementOffsetInImage < 0xFFFFFFFFULL
v36@?0r*8Q16B24^B28
buildingDylibsInCache == (_patchTable != nullptr)
request to build closure for %s
can't find cache file: %s
mapped cache file to %p
starting closure build
finished closure build, cls=%p
returning closure, size=%d
closure could not be created: %s
vm_allocate(%d) failed
request to build dlopen ImageGroup for %s
env=%p, envCnt=%d, imageGroups=%p, imageGroupsCnt=%d
can't find cache file %s
sent ImageGroup(s) buffer:
    0x%08X 0x%08X 0x%08X 0x%08X
   %s
received %d existing groups in buffer at %p
received ImageGroup groupNum=%d has %d Images:
  image[%d] = %s
%d group extends beyond end of buffer (len=%d)
starting ImageGroup build, lastGroupNum=%d
finished ImageGroup build, ig=%p
Image generated warning: %s
created ImageGroup, size=%d
failed to create ImageGroup: %s
fork/exec request to build closure for %s
closured: can't find cache file: %s
closured: starting closure build
closured: finished closure build, cls=%p
returning closure, size=%lu
