com.apple.carkit.DNDBuddy
DNDBuddyContainer
com.apple.carkit.dnd
com.apple.carkit.service
v16@?0@"BBDataProviderProxy"8
v32@?0@"CRBulletin"8Q16^B24
v8@?0
v24@?0@"FBSProcessHandle"8@"NSError"16
date
DND_ALERT_SECTION_TITLE
DNDModeIcon
v24@?0@"BBBulletin"8^B16
B32@?0@"CRBulletin"8Q16^B24
B32@?0@"BBAction"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
buddyAlertHandle
T@"SBSRemoteAlertHandle",&,N,V_buddyAlertHandle
connection
T@"BBDataProviderConnection",&,N,V_connection
providerProxy
T@"BBDataProviderProxy",&,N,V_providerProxy
presentedBulletins
T@"NSMutableArray",&,N,V_presentedBulletins
isFirstBuddyPresentation
TB,N,V_isFirstBuddyPresentation
CARPLAY_LOCKSCREEN_TITLE
CarPlayNotificationIcon.png
v16@?0@"NSTimer"8
alertDismissTimer
T@"NSTimer",&,N,V_alertDismissTimer
alertAutoDismissed
TB,N,V_alertAutoDismissed
com.apple.carplay.pairings
carplay-pairing
name
bluetoothAddress
carplayWiFiUUID
carPlayProtocols
internalNotes
pairings
v32@?0@"NSString"8@"NSDictionary"16^B24
cachedVehicles
T@"NSSet",C,N,V_cachedVehicles
CRVehicleStoreAvailabilityDidChangeNotification
DND_TITLE
DND_ALERT_OPT_IN_CALLOUT
[Internal] Do Not Disturb ended
[Internal] File Radar
internalText
T@"NSString",R,N,V_internalText
[Internal] Geofence entered
[Internal] Geofence exited
Entered geofence
Exited geofence
geofenceEnter
TB,N,V_geofenceEnter
[Internal] Not Driving
What happened?
I'm a Passenger
I've Pulled Over
Incorrect Detection (File Radar)
Other
en_US
v24@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16
CAREnableDictationInternal
com.apple.carplay.internal
recognitionTask
T@"SFSpeechRecognitionTask",&,N,V_recognitionTask
recognitionRequest
T@"SFSpeechAudioBufferRecognitionRequest",&,N,V_recognitionRequest
speechRecognizer
T@"SFSpeechRecognizer",&,N,V_speechRecognizer
audioEngine
T@"AVAudioEngine",&,N,V_audioEngine
currentlyRecording
TB,N,V_currentlyRecording
currentlyTranscribing
TB,N,V_currentlyTranscribing
transcription
T@"NSString",&,N,V_transcription
error
T@"NSError",&,N,V_error
recordingBlock
T@?,C,N,V_recordingBlock
dictationEnabled
TB,R,N
dictationAvailable
finishedTranscribing
TB,N,V_finishedTranscribing
SFSpeechRecognizer
Unable to find class %s
/System/Library/Frameworks/Speech.framework/Speech
AVAudioEngine
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioSession
AVAudioSessionCategoryPlayAndRecord
AVAudioSessionModeSpeechRecognition
SFSpeechAudioBufferRecognitionRequest
Vehicle State %@, device ID %@, Vehicular Hints: None: %@ Motion: %@ GPS: %@ Baseband: %@ WiFi: %@ Bluetooth: %@
vehicleState
vehicularHints
deviceID
vehicleStateDebugDescription
T@"NSString",R
TQ,N,V_vehicleState
TQ,N,V_vehicularHints
T@"NSString",C,N,V_deviceID
v12@?0i8
connected
TB,N,V_connected
hasRecentlyActivatedVoiceOver
TB,N,V_hasRecentlyActivatedVoiceOver
callObserver
T@"CXCallObserver",&,N,V_callObserver
vehicleStateCheckTimer
T@"NSTimer",&,N,V_vehicleStateCheckTimer
vehicleStateClass
T#,R,W,N,V_vehicleStateClass
radiosPreferences
T@"RadiosPreferences",R,N,V_radiosPreferences
delegate
T@"<CARDNDStateDelegate>",W,N,V_delegate
airplaneMode
TB,R,N,GisInAirplaneMode
idealTimeForBuddy
TB,R,N,GisIdealTimeForBuddy
voiceOverEnabled
TB,R,N,GisVoiceOverEnabled
region
T@"CLCircularRegion",&,N,V_region
regionState
Tq,N,V_regionState
Start Identifier
v24@?0@"NSArray"8@"NSError"16
didCreateGeofenceAroundStart
TB,N,V_didCreateGeofenceAroundStart
shouldCreateGeofenceAroundStart
TB,N,V_shouldCreateGeofenceAroundStart
isCurrentlyInsideGeofence
TB,N,V_isCurrentlyInsideGeofence
hasUnknownFenceState
TB,N,V_hasUnknownFenceState
activelyMonitoringGeofences
TB,N,V_activelyMonitoringGeofences
locationManager
T@"CLLocationManager",&,N,V_locationManager
routineManager
T@"RTRoutineManager",&,N,V_routineManager
exitConfirmationActive
TB,N,V_exitConfirmationActive
locationServicesEnabled
TB,N,V_locationServicesEnabled
monitoredRegions
T@"NSArray",&,N,V_monitoredRegions
wiFiManager
T@"CRWiFiCarManager",&,N,V_wiFiManager
exitConfirmationOverride
TB,N,V_exitConfirmationOverride
currentlyInRegion
DNDActive
TB,N,GisDNDActive,V_DNDActive
T@"<CARDNDGeofencingObserverDelegate>",W,N,V_delegate
RTRoutineManager
/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
com.apple.MobileAsset.CarPlayAppBlacklist
CarPlayAppBlacklist.plist
AppBlacklist
com.apple.carkit.blacklistAssetQuery
com.apple.private.carkit.app
com.apple.carkit.app.blacklist-changed
B24@?0@"ASAsset"8@"NSDictionary"16
q24@?0@"ASAsset"8@"ASAsset"16
com.apple.carkit.app
assetQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetQueue
assetQueryInProgress
TB,N,V_assetQueryInProgress
Logs/CrashReporter/DiagnosticLogs/CarPlay
%@%@
CarPlay-
/logs
airplayServer.XXXXX
AirPlayDiagnostics-server-mobility-info
airplay.log
/usr/local/bin/airplayutil show
Connected: Y
port=
HTTP/1.1
application/octet-stream
Prefer
respond-async
Retry-After
Location
%63s
AirPlayServer.tgz
Unknown
com.apple.private.carkit
v24@?0@"NSSet"8@"NSError"16
com.apple.carkit
B24@?0@"CRVehicle"8^B16
%ld accessories connected:
%ld accessory connected:
Notes: %@
v24@?0@"CRVehicle"8@"CRVehicleAccessory"16
com.apple.carplay.allowed-changed
CARPLAY_UUID
com.apple.carplay.in-car
com.apple.carplay.out-of-car
B24@?0@"CRVehicleAccessory"8^B16
@"CRVehicle"24@?0@"CRVehicle"8@"CRVehicle"16
v16@?0Q8
v20@?0B8@"NSData"12
accessoryManager
T@"CRVehicleAccessoryManager",&,N,V_accessoryManager
preferencesManager
T@"CRCarPlayPreferences",&,N,V_preferencesManager
bluetoothManager
T@"CRBluetoothManager",&,N,V_bluetoothManager
wifiManager
T@"CRWiFiCarManager",&,N,V_wifiManager
assertionManager
T@"CRWirelessSessionAssertionManager",&,N,V_assertionManager
outstandingApprovalAlerts
T@"NSMutableArray",&,N,V_outstandingApprovalAlerts
outstandingPairingAlerts
T@"NSMutableArray",&,N,V_outstandingPairingAlerts
outstandingEnableWiFiAlerts
T@"NSMutableArray",&,N,V_outstandingEnableWiFiAlerts
cachedCarPlayAllowedChangeValue
T@"NSNumber",N,V_cachedCarPlayAllowedChangeValue
serviceCountDuringAlertForBluetoothAddress
T@"NSMutableDictionary",&,N,V_serviceCountDuringAlertForBluetoothAddress
monitoringService
T@"CRCarKitMonitoringServiceAgent",W,N,V_monitoringService
vehicleStore
T@"CRVehicleStore",&,N,V_vehicleStore
cachedBulletinRequest
T@"BBBulletinRequest",&,N,V_cachedBulletinRequest
actionHandler
T@?,C,N,V_actionHandler
alertManager
T@"CARDNDAlerts",W,N,V_alertManager
bulletinDate
T@"NSDate",R,N,V_bulletinDate
cleared
TB,N,V_cleared
title
T@"NSString",R,N
message
imageName
maxDisplayedBulletins
TQ,R,N
exclusiveBulletinClasses
T@"NSArray",R,N
defaultAction
T@"BBAction",R,N
alternateAction
additionalActions
usesAlternateActionAsDismissAction
clearable
TB,R,N,GisClearable
bannerClearedBlock
T@?,C,N,V_bannerClearedBlock
recordID
T@"NSString",R,N,V_recordID
bulletinRequest
T@"BBBulletinRequest",R,N
CARDNDAssertionStateKey
No active assertions.
Airplane Mode
CarPlay session
User-disabled until end of drive
8-minute hold
System-disabled until end of drive
Find My Device mode
Active assertions: %@
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
preferences
T@"CARAutomaticDNDStatus",R,W,N,V_preferences
T@"<CARDNDAssertionTrapDelegate>",W,N,V_delegate
active
TB,R,N,GisActive
activeAssertions
TQ,R,N,V_activeAssertions
activeAssertionsDebugString
CARPLAY_LOCKSCREEN_MESSAGE_IPHONE
vehicleAccessory
T@"CRVehicleAccessory",&,N,V_vehicleAccessory
REMEMBER_CARPLAY_ALERT_TITLE
REMEMBER_CARPLAY_ALERT_TITLE_GENERIC
REMEMBER_CARPLAY_ALERT_MESSAGE_IPHONE
REMEMBER_CARPLAY_ALERT_ACCEPT
REMEMBER_CARPLAY_ALERT_CANCEL
USE_CARPLAY_ALERT_TITLE
USE_CARPLAY_ALERT_TITLE_GENERIC
USE_CARPLAY_ALERT_MESSAGE_WIRELESS_IPHONE
USE_CARPLAY_ALERT_ACCEPT_WIFI_ON
USE_CARPLAY_ALERT_ACCEPT
USE_CARPLAY_ALERT_CANCEL
shouldEnableWiFi
TB,N,V_shouldEnableWiFi
PAIRING_CARPLAY_ALERT_TITLE
PAIRING_CARPLAY_ALERT_TITLE_GENERIC
PAIRING_CARPLAY_ALERT_MESSAGE_IPHONE
PAIRING_CARPLAY_ALERT_ACCEPT_BLUETOOTH_ON
PAIRING_CARPLAY_ALERT_ACCEPT
PAIRING_CARPLAY_ALERT_DECLINE
shouldEnableBluetooth
TB,N,V_shouldEnableBluetooth
RECONNECT_OFF_ALERT_TITLE_WIFI
RECONNECT_OFF_ALERT_ACCEPT_WIFI
RECONNECT_OFF_ALERT_CANCEL
vehicle
T@"CRVehicle",&,N,V_vehicle
com.apple.private.carkit.dnd
v12@?0B8
v24@?0Q8@"NSError"16
DND_AUTO_REPLY_DEFAULT_MESSAGE
status
T@"CARAutomaticDNDStatus",&,N,V_status
bannerMessage
T@"NSString",&,N,V_bannerMessage
timeoutInterval
Td,N,V_timeoutInterval
CarPlay Disconnected
You will be notified when sysdiagnose completes to file a radar.
Number of drafts scheduled: %ld
sysdiagnose in flight
draftsCount
TQ,N,V_draftsCount
Number of CarPlay Radar Drafts Created: %ld
Tap the button below to launch Tap-to-Radar.
CarPlay Diagnostics
Unlock your device to file a radar.
File radar
com.apple.carkitd.monitoring_transactions
transactionCount
certificateSerial
v16@?0@"NSError"8
connections
T@"NSMutableSet",&,N,V_connections
connectionsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionsQueue
com.apple.Maps
com.apple.Siri
com.apple.Music
Logs/CrashReporter/DiagnosticLogs/CarPlay/CarPlay-%@
CarPlayConfiguration.txt
DeviceScreenshot.png
CarPlayScreenshot.png
timestamp: %@, deviceURL: %@, carURL: %@, sysdiagnoseURL: %@, attachmentURLs: %@, configurationURL: %@, overlayBundleID: %@, activeBundleID: %@, transcription: %@
timestamp
T@"NSString",&,N,V_timestamp
deviceScreenshotURL
T@"NSURL",&,N,V_deviceScreenshotURL
carScreenshotURL
T@"NSURL",&,N,V_carScreenshotURL
remoteLogsURL
T@"NSURL",&,N,V_remoteLogsURL
carplayLogsURL
T@"NSURL",&,N,V_carplayLogsURL
sysdiagnoseURL
T@"NSURL",&,N,V_sysdiagnoseURL
configurationURL
T@"NSURL",&,N,V_configurationURL
attachmentURLs
T@"NSArray",&,N,V_attachmentURLs
overlayBundleIdentifier
T@"NSString",&,N,V_overlayBundleIdentifier
activeBundleIdentifier
T@"NSString",&,N,V_activeBundleIdentifier
locationDescription
T@"NSString",&,N,V_locationDescription
mapsActive
TB,N,GisMapsActive,V_mapsActive
com.apple.CarKit.DiagnosticsSerialQueue
carPlaySessionInfo
v24@?0@"NSError"8@"NSURL"16
v24@?0@"NSError"8@"NSString"16
Gathering CarPlay Diagnostics
Scheduling Diagnostics on Disconnect
Number of Drafts Scheduled: %ld
Coordinates: (%f, %f)
Source: %d (%@)
Time: %@
No location information
CARAlwaysEnableSysdiagnoseInternal
XCTestCase
testRemoteLogs
There once was a framework named CarKit,
It was trying to find something to transmit.
But instead what we got
was off by a long shot,
File a radar and click submit!
Tap to Dictate Issue
Dictation Not Available
Dictation in Progress. Tap to Stop
Error Starting Dictation
v24@?0@"NSString"8@"NSError"16
Diagnostics triggered by CarPlay
Intensity
VibePattern
Connected CarPlay Session
Session Configuration
Name: %@
Model Name: %@
Transport types: %@
Night Mode Supported: %@
Limitable UI Types: %@
ETC Supported: %@
Right Hand Drive: %@
Supports AC_BACK: %@
Manufacturer Icons
Icon Label: %@
Icon Visible: %@
Number of icons: %lu
Icon %d
Prerendered: %@
Size: {width: %f, height: %f}
Screens Information
Number of screens: %lu
Screen %d
Identifier: %@
Available Interaction Models: %@
Primary Interaction Model: %@
Supports HiFi Touch: %@
Current session info
Night Mode Enabled (without fallbacks): %@
Night Mode Enabled (with fallbacks): %@
Limited UI Enabled: %@
ETC Enabled: %@
com.apple.Maps.DEMapsExtension
com.apple.CoreRoutine.RTDiagnosticExtension
com.apple.podcasts
com.apple.podcasts.DiagnosticExtension
com.apple.MediaPlayer.DiagnosticExtension
: [CarPlay]
[CarPlay]
ComponentName
PEP CarPlay
ComponentVersion
ComponentID
498011
Platform
CarPlay
Keywords
492942
Reproducibility
I Didn't Try
Title
ExtensionIdentifiers
Please provide a brief description of this radar.
Dictated description: %@
Screenshot
Active App: %@
Overlay: %@
Timestamp: %@
Last known location (for Maps/location investigation):
AutoDiagnostics
Attachments
Description
tap-to-radar://new?
com.apple.carkit.diagnostics.transaction
shouldTriggerSysdiagnose
dictationComplete
TB,N,V_dictationComplete
sysdiagnoseInFlight
TB,N,V_sysdiagnoseInFlight
remoteLogsInFlight
TB,N,V_remoteLogsInFlight
triggeredInfoWhileCollecting
T@"NSArray",&,N,V_triggeredInfoWhileCollecting
pendingDiagnosticsData
T@"NSArray",&,N,V_pendingDiagnosticsData
diagnosticsSerialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_diagnosticsSerialQueue
collectedDiagnosticsRadarURL
T@"NSURL",&,N,V_collectedDiagnosticsRadarURL
fileRadarAlert
T@"CRFileRadarAlert",&,N,V_fileRadarAlert
initiateLogsAlert
T@"CRInitiateLogsAlert",&,N,V_initiateLogsAlert
session
T@"CARSessionStatus",&,N,V_session
additionalDescription
T@"NSString",&,N,V_additionalDescription
frontMostBundleID
T@"NSString",&,N,V_frontMostBundleID
overlayBundleID
T@"NSString",&,N,V_overlayBundleID
sleepInterval
TI,N,V_sleepInterval
idleExitTransaction
T@"NSObject<OS_os_transaction>",&,N,V_idleExitTransaction
diagnosticsCompletionBlock
T@?,C,N,V_diagnosticsCompletionBlock
External NMEA
External Accessory
Apple WiFi
Skyhook
Cellular
Cellular LAC
Cellular MCC
GPS Coarse
Apple WiFi 2
Indoor Location
com.apple.carkitd.assertion-service
com.apple.carkit.dndmanager
v20@?0B8@"NSError"12
DNDWD
com.apple.donotdisturb.mode.driving
[Internal] %@
v16@?0q8
Passenger
Pulled Over
Incorrect Detection (Radar)
carkitd-buddy-locales
plist
CarKit
com.apple.carkit.dnd.transaction
userDisableTimer
T@"NSTimer",&,N,V_userDisableTimer
assertionService
T@"DNDModeAssertionService",&,N,V_assertionService
stateMachine
T@"CARDNDStateObserver",&,N,V_stateMachine
T@"CARDNDAlerts",&,N,V_alertManager
T@"CARAutomaticDNDStatus",&,N,V_preferences
sessionStatus
T@"CARSessionStatus",&,N,V_sessionStatus
assertionTrap
T@"CARDNDAssertionTrap",&,N,V_assertionTrap
T@"CRVehicleStore",W,N,V_vehicleStore
CARDNDQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_CARDNDQueue
nextUnlockAction
TQ,N,V_nextUnlockAction
nextLockAction
TQ,N,V_nextLockAction
showsInternalAlerts
restrictionsEnabled
lastKnownVehicularState
TQ,N,V_lastKnownVehicularState
lastKnownVehicularHints
TQ,N,V_lastKnownVehicularHints
lastKnownReportTime
Td,N,V_lastKnownReportTime
firstRideVehicleHints
TQ,N,V_firstRideVehicleHints
geofencingObserver
T@"CARDNDGeofencingObserver",&,N,V_geofencingObserver
isCurrentlyInGeofencedRegion
expectedBuddyTermination
TB,N,V_expectedBuddyTermination
DNDValid
TB,R,N,GisDNDValid
com.apple.carkit.active-session.process
timeoutTimer
T@"NSTimer",&,N,V_timeoutTimer
processTransaction
T@"NSObject<OS_os_transaction>",&,N,V_processTransaction
com.apple.language.changed
com.apple.carkit.monitoring.service
com.apple.carkit.app.service
com.apple.carkit.dnd.service
com.apple.carkit.navowners.service
com.apple.notifyd.matching
com.apple.carkit.carplay-attached
com.apple.MobileAsset.CarPlayAppBlacklist.new-asset-installed
com.apple.vehiclePolicy.DNDMode
v16@?0@"NSObject<OS_xpc_object>"8
B32@?0@"BluetoothDevice"8Q16^B24
Reason
DNDBuddyCompleted
DNDStarted
DNDEnded
DNDAutoReplyChanged
DNDTriggerMethodChanged
DNDInternalNotDrivingFeedback
com.apple.carexperience.%@
driveStartTimeInterval
Td,N,V_driveStartTimeInterval
isCurrentlyDriving
TB,N,V_isCurrentlyDriving
Please describe what you were doing to trigger Do Not Disturb While Driving. 
Entered DNDWD at %@
Exited DNDWD at %@
Entered geofence at %@
Exited geofence at %@
com.apple.CarKit.CarDNDDiagnosticsExtension
com.apple.DiagnosticExtensions.Baseband
: [DNDWD]
[DNDWD]
Do Not Disturb While Driving
831192
814490
CRWiFiPowerChangedNotification
power
TB,N,V_power
init
alloc
initWithServiceName:onQueue:
array
connection
setProviderProxy:
reloadSectionParameters
reloadDefaultSectionInfo
addDataProvider:withCompletion:
providerProxy
invalidateBulletins
invalidate
dealloc
maxDisplayedBulletins
presentedBulletins
class
_alertsOfClass:
count
dismissAlert
enumerateObjectsUsingBlock:
exclusiveBulletinClasses
countByEnumeratingWithState:objects:count:
addObjectsFromArray:
makeObjectsPerformSelector:
addObject:
setAlertManager:
title
recordID
bulletinRequest
addBulletin:forDestinations:
withdrawBulletinsWithRecordID:
removeObject:
copy
isKindOfClass:
initWithEnterGeofence:
setActionHandler:
_showBulletin:
initWithText:
buddyAlertHandle
isValid
initWithServiceName:viewControllerClassName:
setUserInfo:
newHandleWithDefinition:configurationContext:
setBuddyAlertHandle:
addObserver:
activateWithContext:
objectForKeyedSubscript:
boolValue
setIsFirstBuddyPresentation:
numberWithBool:
dictionaryWithObjects:forKeys:count:
optionsWithDictionary:
openApplication:withOptions:completion:
_tearDownAlertHandle
sharedManager
expectedBuddyTermination
isFirstBuddyPresentation
_resetDNDBuddyPresentation:
sortDescriptorWithKey:ascending:
arrayWithObjects:count:
variantWithFormat:imageName:inBundle:
addVariant:
setMessageNumberOfLines:
defaultSubtypeParameters
setIgnoresQuietMode:
defaultSectionInfoForType:
sectionIdentifier
setSectionID:
setSectionType:
setSuppressFromSettings:
setShowsOnExternalDevices:
setShowsInLockScreen:
setShowsInNotificationCenter:
setAllowsNotifications:
setAlertType:
setPushSettings:
setBulletinCount:
setCarPlaySetting:
setContentPreviewSetting:
publisherDestination
arrayWithCapacity:
sinceDate
bulletinDate
compare:
maximumCount
cleared
setWithArray:
isEqualToString:
setCleared:
isClearable
bannerClearedBlock
date
bulletinRecordID
actionID
indexOfObjectPassingTest:
objectAtIndexedSubscript:
actionHandler
defaultAction
identifier
alternateAction
additionalActions
numberWithInteger:
indexesOfObjectsPassingTest:
objectsAtIndexes:
removeObserver:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
dismissAlert:
dismissAlertsOfClass:
showDNDEnterGeofenceWithCompletion:
showDNDExitGeofenceWithCompletion:
showDNDUnlockOptInAlert
showDNDEndNotificationWithText:completion:
showDNDNotDrivingAlertWithCompletion:
showDNDMiniBuddyWithUserInfo:errorHandler:completion:
_injectAlert:
.cxx_destruct
setConnection:
setPresentedBulletins:
_isFirstBuddyPresentation
_buddyAlertHandle
_connection
_providerProxy
_presentedBulletins
bundlePath
stringByAppendingPathComponent:
dictionary
setObject:forKeyedSubscript:
allowInCar
alertTitle
alertMessage
alertAcceptButtonTitle
alertDeclineButtonTitle
lockscreenMessage
lockscreenTitle
iconImagePath
alertAcceptedAnalyticsKey
alertDeclinedAnalyticsKey
setAlertAutoDismissed:
_alertContents
_setAlert:
alertAutoDismissed
alertDismissTimer
setAlertDismissTimer:
requiresUnlockedDevice
_isDeviceUnlocked
_recordAnalyticsForResponse:
alertDismissal
scheduledTimerWithTimeInterval:repeats:block:
presentAlertWithCompletion:
_alert
_alertAutoDismissed
_alertDismissTimer
setObject:forKey:
UUIDString
_itemClassKeychainAttributes
vehicleName
certificateSerialNumber
pairingStatus
dataWithBytes:length:
_identifyingKeychainAttributesForVehicle:
_addKeychainAttributesForVehicle:toDictionary:
_allKeychainAttributesForVehicle:
mutableCopy
_keychainAttributesMatchingQuery:
_updateKeychainAttributesForVehicle:
_creationKeychainAttributesForVehicle:
bluetoothAddress
carplayWiFiUUID
accessoryProtocols
allObjects
internalNotes
objectForKey:
setVehicleName:
setBluetoothAddress:
setCarplayWiFiUUID:
setAccessoryProtocols:
setInternalNotes:
_preferencesAttributesForVehicle:
_allPreferencesPairings
_removePreferencesPairingForVehicleIdentifier:
removeObjectForKey:
defaultCenter
postNotificationName:object:
_invalidateCachedVehicles
handleAvailabilityDidChange:
addObserver:selector:name:object:
setCachedVehicles:
saveVehicle:withMergePolicy:
isVehicleStoreAvailable
allStoredVehicles
isEqualToData:
mergeAttributesFromVehicle:
_addPreferencesPairingForVehicle:
_addKeychainPairingForVehicle:
postPairingsDidChangeNotification
_removePreferencesPairingForVehicle:
_removeKeychainPairingForVehicle:
cachedVehicles
_keychainItemAttributesForAllVehicles
getBytes:length:
initWithUUIDString:
initWithIdentifier:certificateSerial:
setPairingStatus:
_applyPreferencesAttributes:toVehicle:
_cleanupPreferencesForIncompleteVehicleIdentifier:name:
enumerateKeysAndObjectsUsingBlock:
saveVehicle:
removeVehicle:
vehicleForBluetoothAddress:
_cachedVehicles
_updateUnlockedSinceBoot
registerForAvailabilityEvent
handleAvailabilityEvent
notifydEventName
message
internalText
TTRURLforEvent:
CARActionWithURL:title:
imageName
_internalText
geofenceEnter
setGeofenceEnter:
_geofenceEnter
CARActionWithTitle:
localeWithLocaleIdentifier:
initWithLocale:
recognitionTask
cancel
setRecognitionTask:
setTranscription:
sharedInstance
setCategory:error:
setMode:error:
setIAmTheAssistant:error:
setActive:error:
setError:
error
setRecognitionRequest:
recognitionRequest
setShouldReportPartialResults:
audioEngine
inputNode
speechRecognizer
recognitionTaskWithRequest:delegate:
removeTapOnBus:
inputFormatForBus:
appendAudioPCMBuffer:
installTapOnBus:bufferSize:format:block:
prepare
startAndReturnError:
_playEndDictationChime
setCurrentlyTranscribing:
setFinishedTranscribing:
_playStartDictationChimeWithCompletion:
setRecordingBlock:
_stopRecording
isRunning
stop
endAudio
finish
isAvailable
setActive:withOptions:error:
setCurrentlyRecording:
_endAudioSessionWithError:
bestTranscription
formattedString
finishedTranscribing
currentlyTranscribing
recordingBlock
transcription
length
speechRecognitionDidDetectSpeech:
speechRecognitionTask:didHypothesizeTranscription:
speechRecognitionTask:didFinishRecognition:
speechRecognitionTaskFinishedReadingAudio:
speechRecognitionTaskWasCancelled:
speechRecognitionTask:didFinishSuccessfully:
beginRecordingWithCompletion:
stopRecordingWithCompletion:
dictationEnabled
dictationAvailable
currentlyRecording
setSpeechRecognizer:
setAudioEngine:
_currentlyRecording
_currentlyTranscribing
_finishedTranscribing
_transcription
_error
_recognitionTask
_recognitionRequest
_speechRecognizer
_audioEngine
_recordingBlock
vehicleState
numberWithUnsignedInteger:
deviceID
vehicularHints
numberWithUnsignedLong:
stringWithFormat:
vehicleStateDebugDescription
setVehicleState:
setVehicularHints:
setDeviceID:
_vehicleState
_vehicularHints
_deviceID
setDelegate:
refresh
isVoiceOverEnabled
setShouldObserveDeviceUnlocks:
vehicleStateCheckTimer
airplaneMode
callObserver
calls
hasRecentlyActivatedVoiceOver
_deviceLockStateChangedWithToken:
setVehicleStateCheckTimer:
numberWithDouble:
_checkVehicleState
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
isInAirplaneMode
delegate
stateMachine:receivedAirplaneMode:
observesVehicularReports
vehicularState
connected
mostRecentVehicleConnection
deviceId
stateMachine:receivedVehicleState:
stateMachine:didObserveLockStatusChange:
airplaneModeChanged
initWithRadiosPreferences:vehicleStateClass:
isIdealTimeForBuddy
scheduleVehicleStateCheckWithDelay:
vehicleStateClass
radiosPreferences
setConnected:
setHasRecentlyActivatedVoiceOver:
setCallObserver:
_screenLockNotifyToken
_connected
_hasRecentlyActivatedVoiceOver
_vehicleStateClass
_radiosPreferences
_delegate
_callObserver
_vehicleStateCheckTimer
lostModeIsActive
stateMachine:receivedFMDMode:
region
setRegion:
regionState
setRegionState:
_region
_regionState
initWithEffectiveBundle:
initWithRoutineManager:locationManager:wiFiManager:
setRoutineManager:
setLocationManager:
locationManager
setDesiredAccuracy:
setWiFiManager:
_checkWiFiPowerForGeofences
stopMonitoringLOIs
_shouldCreateGeofences
_postNotificationForGeofence
setActivelyMonitoringGeofences:
setShouldCreateGeofenceAroundStart:
shouldCreateGeofenceAroundStart
didCreateGeofenceAroundStart
location
horizontalAccuracy
timestamp
timeIntervalSinceNow
coordinate
_addCoordinatesToMonitoredRegion:identifier:radius:
setDidCreateGeofenceAroundStart:
setIsCurrentlyInsideGeofence:
requestStateForRegion:
_createGeofencesAroundPredictedLocationsFromLocation:
_createGeofencesAroundHomeAndWork
startMonitoringSignificantLocationChanges
startUpdatingLocation
monitoredRegions
stopMonitoringForRegion:
setHasUnknownFenceState:
setMonitoredRegions:
stopMonitoringSignificantLocationChanges
stopUpdatingLocation
center
initWithCenter:radius:identifier:
arrayByAddingObject:
startMonitoringForRegion:
exitConfirmationOverride
isDNDActive
wiFiManager
power
locationServicesEnabled
activelyMonitoringGeofences
isCurrentlyInsideGeofence
setExitConfirmationActive:
geofencingObserver:didUpdateRegionState:
latitude
longitude
routineManager
locationOfInterest
_createGeofenceForLOI:
fetchNextPredictedLocationsOfInterestFromLocation:startDate:timeInterval:withHandler:
fetchLocationsOfInterestOfType:withHandler:
setLocationServicesEnabled:
beginMonitoringLOIsWithStartingLocationGeofence:
lastObject
hasUnknownFenceState
_pollFencesWithUnknownState
_updateState:forRegion:
code
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
currentlyInRegion
setExitConfirmationOverride:
setDNDActive:
exitConfirmationActive
_DNDActive
_didCreateGeofenceAroundStart
_shouldCreateGeofenceAroundStart
_isCurrentlyInsideGeofence
_hasUnknownFenceState
_activelyMonitoringGeofences
_exitConfirmationActive
_locationServicesEnabled
_exitConfirmationOverride
_locationManager
_routineManager
_monitoredRegions
_wiFiManager
setAssetQueue:
setAssetQueryInProgress:
valueForEntitlement:
processIdentifier
fetchAppBlacklistWithReply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
resume
_queryForUpdatedAsset
_blacklistPreference
assetQueryInProgress
assetQueue
initWithAssetType:
setQueriesLocalAssetInformationOnly:
runQueryAndReturnError:
state
predicateWithBlock:
filteredArrayUsingPredicate:
attributes
sortedArrayUsingComparator:
firstObject
localURL
URLByAppendingPathComponent:
arrayWithContentsOfURL:
_parseBlacklistContent:error:
_setBlacklistPreference:
beginDownloadWithOptions:
errorWithDomain:code:userInfo:
arrayWithArray:
listener:shouldAcceptNewConnection:
handleAssetUpdatedNotification
_assetQueryInProgress
_assetQueue
defaultManager
URLsForDirectory:inDomains:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
temporaryDirectory
fileSystemRepresentation
stringWithUTF8String:
URLforCarPlayDiagnosticsFolderWithTimestamp:
stringWithCString:encoding:
componentsSeparatedByString:
rangeOfString:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
_connectedIPAddress
_fetchRemoteLogsForIPAddress:filepath:timestamp:
filePathForAirPlayLogsForTimestamp:error:
UTF8String
objectAtIndex:
fileURLWithPath:
replaceObjectAtIndex:withObject:
removeObjectAtIndex:
copyItemAtURL:toURL:error:
userInfo
initWithCapacity:
dictionaryWithObject:forKey:
setAccessoryManager:
accessoryManager
setVehicleAccessoryDelegate:
setPreferencesManager:
preferencesManager
setPreferencesDelegate:
setBluetoothManager:
setWifiManager:
setOutstandingApprovalAlerts:
setOutstandingPairingAlerts:
setOutstandingEnableWiFiAlerts:
setServiceCountDuringAlertForBluetoothAddress:
setAssertionManager:
handleVehicleStoreAvailabiltyDidChange:
saveVehicle:reply:
removeVehicle:reply:
fetchAllVehiclesWithReply:
hasVehiclesWithReply:
handleDidConnectBluetoothAddress:reply:
handleDidDisconnectBluetoothAddress:reply:
isBluetoothInCarWithReply:
saveWiFiCredentialsForAccessoryConnectionIdentifier:credentials:reply:
allowsConnectionsForWiFiUUID:reply:
allowsConnectionsForCertificateSerial:reply:
isPairedWithCertificateSerial:reply:
handleCarPlayRestrictionChangedWithReply:
isCarPlayAllowedWithReply:
handleCarPlayDiagnosticsWithDeviceScreenshotURL:carScreenshotURL:attachmentURLs:reply:
setWithObject:
vehicleStore
wifiManager
removeNetworkCredentialsForCarPlayUUID:
bluetoothManager
unpairWithBluetoothAddress:
_isRestricted:
_isVehicleActionable:
hasCredentialsForCarPlayUUID:
postInCarNotificationForVehicle:
connectedServicesCountForBluetoothAddress:
serviceCountDuringAlertForBluetoothAddress
unsignedIntegerValue
_presentReconnectionEnableWiFiAlertForVehicle:
_dismissReconnectionEnableWiFiAlertForVehicle:
pairedVehiclesConnectedOnBluetooth
anyObject
vehicleAccessoryForiAPConnectionIdentifier:
objectsPassingTest:
UUID
saveNetworkCredentials:forCarPlayUUID:
isBluetoothConnected
containsObject:
isPaired
_handleCarPlayAllowedDidChange
isCarPlayAllowed
string
connectedVehicleAccessories
appendFormat:
radarDescription
vehicleMatchingAccessory:inVehicles:
stringByAppendingFormat:
componentsJoinedByString:
appendString:
collectDiagnosticsWithDeviceScreenshotURL:carScreenshotURL:attachmentURLs:accessoryDescription:completionHandler:
handleCarPlayAttachedAccessories:
updateVehicle:usingAccessory:
enumerateVehiclesForAccessories:usingBlock:
_dismissApprovalAlertForVehicleAccessory:
_dismissPairingAlertForVehicleAccessory:
cachedCarPlayAllowedChangeValue
setCachedCarPlayAllowedChangeValue:
handleCarPlayAttached
_dismissApprovalAlerts
_dismissPairingAlerts
monitoringService
handleUpdatedVehicle:enabled:completion:
attemptConnectionWithVehicles:
setInCar:carPlayUUID:
setWithCapacity:
_certificateSerialNumbersWithKnownPairing
updateIncompletePairingsMatchingAccessories:
sendDeviceIdentifierForVehicleAccesory:pairingStatus:
_unknownPairingAccessoriesFromAccessories:
_presentApprovalAlertForVehicleAccessory:
requestWiFiCredentialsIfNecessaryForVehicleAccessories:
analyticsDescription
setCertificateSerialNumber:
isEqualToSet:
connectedBluetoothAddresses
supportsWirelessCarPlay
requestWiFiCredentials
connectWithBluetoothAddress:
sendDeviceTransportIdentifiers
initWithVehicleAccessory:
supportsUSBCarPlay
supportsWiredBluetoothPairing
_presentWiredBluetoothPairingAlertForVehicleAccessory:vehicle:
outstandingApprovalAlerts
vehicleAccessory
vehicleForVehicleAccessory:
outstandingPairingAlerts
_beginWiredPairingWithVehicleAccessory:vehicle:
addressStringForData:
beginWiredBluetoothPairing:
initWithVehicle:
outstandingEnableWiFiAlerts
setPower:
vehicle
accessoryManager:didConnectVehicleAccessory:
accessoryManager:didUpdateVehicleAccessory:
accessoryManager:didDisconnectVehicleAccessory:
handleCarPlayAllowedDidChange
postOutOfCarNotificationForVehicle:
_dismissReconnectionEnableWiFiAlerts
setMonitoringService:
setVehicleStore:
assertionManager
_monitoringService
_vehicleStore
_accessoryManager
_preferencesManager
_bluetoothManager
_wifiManager
_assertionManager
_outstandingApprovalAlerts
_outstandingPairingAlerts
_outstandingEnableWiFiAlerts
_cachedCarPlayAllowedChangeValue
_serviceCountDuringAlertForBluetoothAddress
alertManager
setDateFormatStyle:
setRecordID:
setClearable:
setPublisherBulletinID:
setDate:
setTitle:
setMessage:
setTurnsOnDisplay:
setPrecomposed:
setIcon:
usesAlternateActionAsDismissAction
setDismissAction:
setSupplementaryActions:forLayout:
actionWithIdentifier:title:
setAuthenticationRequired:
setShouldDismissBulletin:
setActivationMode:
appearanceWithTitle:
setStyle:
setAppearance:
setLaunchURL:
setLaunchCanBypassPinLock:
setBannerClearedBlock:
cachedBulletinRequest
setCachedBulletinRequest:
_cleared
_actionHandler
_alertManager
_bulletinDate
_bannerClearedBlock
_recordID
_cachedBulletinRequest
standardUserDefaults
userDefaults
integerForKey:
hasAssertion:
preferences
disableTimerTimestamp
calendarUnitsOfType:fromDate:toDate:
activeAssertions
setDisableTimerTimestamp:
_mutateAssertionsWithBlock:
isActive
setInteger:forKey:
assertionTrap:didBecomeActive:
initWithPreferences:
takeAssertion:
releaseAssertion:
releaseAllAssertions
releaseAllTemporaryAssertions
activeAssertionsDebugString
setUserDefaults:
_preferences
_activeAssertions
_userDefaults
setVehicleAccessory:
_vehicleAccessory
shouldEnableWiFi
setShouldEnableWiFi:
_shouldEnableWiFi
shouldEnableBluetooth
powered
setShouldEnableBluetooth:
setPowered:
_shouldEnableBluetooth
setVehicle:
_vehicle
synchronizeUserDefaultsDomain:keys:
_syncDomain
setAutomaticDNDStatus:
setAutoReplyAudience:
_detachObservers
isCarPlayAutomaticDNDActiveWithReply:
setCarPlayAutomaticDNDActive:withReply:
completeDNDBuddyWithOption:withReply:
resetAutomaticDNDPreferencesWithReply:
shouldDisplayExitConfirmationWithReply:
allowedAutoReplyAudienceWithReply:
setAllowedAutoReplyAudience:reply:
autoReplyMessageWithReply:
setAutoReplyMessage:reply:
fetchDNDTriggerModeWithReply:
setDNDTriggerMode:withReply:
disableDNDUntilEndOfDriveWithReply:
internalAutoReplyWhitelistWithReply:
setInternalAutoReplyWhitelist:reply:
internalUtilityToolWithReply:
isDNDValid
status
setStartedFirstRidePreference:
setCompletedFirstRidePreference:
_performCARPreferencesBlock:forReading:
CARDNDQueue
_setDNDActive:withStartingGeofence:completion:
setAutomaticDNDTriggeringMethod:
setOptedOutOfAutomaticDND:
setHasAdjustedTriggerMethod:
assertionTrap
setNextLockAction:
setNextUnlockAction:
isCurrentlyInGeofencedRegion
automaticDNDTriggeringMethod
firstRideVehicleHints
setExpectedBuddyTermination:
hasOptedOutOfAutomaticDND
whitespaceAndNewlineCharacterSet
_disableDNDUntilEndOfDrive
outputFromRhodesUtility
setStatus:
_status
timeoutInterval
bannerMessage
setBannerMessage:
setTimeoutInterval:
_bannerMessage
_timeoutInterval
draftsCount
setDraftsCount:
_draftsCount
setConnections:
setConnectionsQueue:
startMonitoringCertificateSerial:reply:
stopMonitoringCertificateSerial:reply:
willEnableCertificateSerial:reply:
willDisableCertificateSerial:reply:
setRemoteObjectInterface:
connectionsQueue
userInfoDictionaryForConnection:
decrementTransactionCountForUserInfo:
integerValue
endTransaction
connections
setInterruptionHandler:
setInvalidationHandler:
currentConnection
incrementTransactionCountForUserInfo:
beginTransaction
connection:isMonitoringSerial:
remoteObjectProxyWithErrorHandler:
_connections
_connectionsQueue
_createCarPlayDiagnosticsFolder
setCarplayLogsURL:
carplayLogsURL
configurationURL
moveItemAtURL:toURL:error:
setConfigurationURL:
deviceScreenshotURL
setDeviceScreenshotURL:
carScreenshotURL
setCarScreenshotURL:
attachmentURLs
lastPathComponent
setAttachmentURLs:
initWithDeviceScreenshot:carScreenshot:configuration:attachmentURLs:overlayBundleID:activeBundleID:
setTimestamp:
remoteLogsURL
setRemoteLogsURL:
sysdiagnoseURL
setSysdiagnoseURL:
overlayBundleIdentifier
setOverlayBundleIdentifier:
activeBundleIdentifier
setActiveBundleIdentifier:
locationDescription
setLocationDescription:
isMapsActive
setMapsActive:
_mapsActive
_timestamp
_deviceScreenshotURL
_carScreenshotURL
_remoteLogsURL
_carplayLogsURL
_sysdiagnoseURL
_configurationURL
_attachmentURLs
_overlayBundleIdentifier
_activeBundleIdentifier
_locationDescription
initAndWaitUntilSessionUpdated
setSessionObserver:
_init
session
currentSession
_beginIdleExitTransaction
setDiagnosticsCompletionBlock:
setAdditionalDescription:
_collectCarConfiguration
overlayBundleID
frontMostBundleID
_formattedLastLocation
remoteLogsInFlight
_processRemoteLogs:
diagnosticsSerialQueue
sysdiagnoseInFlight
dictationComplete
_completeLogging
_remoteLogsForTimestamp:withCompletion:
shouldTriggerSysdiagnose
_processSysdiagnose:
_sysdiagnoseWithCompletion:
triggeredInfoWhileCollecting
setTriggeredInfoWhileCollecting:
pendingDiagnosticsData
_presentDictationBanner
_presentCarAlertWithTitle:dismissTime:completion:
arrayByAddingObjectsFromArray:
setPendingDiagnosticsData:
_presentFileRadarAlert
setCollectedDiagnosticsRadarURL:
setDictationComplete:
diagnosticsCompletionBlock
type
navigationOwner
_alwaysTakeSysdiagnoseEnabled
setSysdiagnoseInFlight:
setRemoteLogsInFlight:
sleepInterval
_beginDictation
_completeDictation
_stopDictation
assertionWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:
setStatusString:
acquireWithHandler:invalidationHandler:
numberWithInt:
numberWithFloat:
_carAlertWithTitle:dismissTime:
setInitiateLogsAlert:
initiateLogsAlert
fileRadarAlert
setFileRadarAlert:
radarURLFromAttachmentsForData:
defaultWorkspace
openSensitiveURL:withOptions:error:
_endIdleExitTransaction
configuration
stringByAppendingString:
name
modelName
descriptionForTransportType
nightModeSupported
descriptionForLimitableUserInterfaces
supportsElectronicTollCollection
rightHandDrive
supportsACBack
manufacturerIconLabel
manufacturerIconVisible
manufacturerIcons
isPrerendered
pixelSize
screens
descriptionForAvailableInteractionModels
descriptionForPrimaryInteractionModel
supportsHighFidelityTouch
systemNightMode
nightMode
limitUserInterfaces
electronicTollCollectionAvailable
relativePath
_extensionIdentifiersForDiagnosticsData:
_screenshotPathsForData:
additionalDescription
URLWithString:
idleExitTransaction
setIdleExitTransaction:
_presentDiagnosticsInFlightAlert
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
initWithSession:locationManager:layoutMonitor:sleepInterval:
_enableStatusBarColor
_disableStatusBarColor
_performVibrate
setDiagnosticsSerialQueue:
collectedDiagnosticsRadarURL
setSession:
setFrontMostBundleID:
setOverlayBundleID:
setSleepInterval:
_dictationComplete
_sysdiagnoseInFlight
_remoteLogsInFlight
_sleepInterval
_triggeredInfoWhileCollecting
_pendingDiagnosticsData
_diagnosticsSerialQueue
_collectedDiagnosticsRadarURL
_fileRadarAlert
_initiateLogsAlert
_session
_additionalDescription
_frontMostBundleID
_overlayBundleID
_idleExitTransaction
_diagnosticsCompletionBlock
serviceForClientIdentifier:
initWithAssertionService:vehicleState:alertManager:preferences:carSessionStatus:geoFencingObserver:assertionTrap:
assertionService
addAssertionUpdateListener:withCompletionHandler:
removeAssertionUpdateListener:
invalidateActiveModeAssertionWithError:
isAutomaticDNDInternalShowUserAlertsEnabledPreference
activeModeAssertionWithError:
geofencingObserver
sharedConnection
isDriverDoNotDisturbModificationsAllowed
_processVehicleState:
nextLockAction
_setDNDActive:completion:
nextUnlockAction
_showDNDMiniBuddyNow
showsInternalAlerts
isAutomaticDNDInternalShowGeofencingAlertsEnabledPreference
lastKnownVehicularHints
stateMachine
setLastKnownVehicularState:
setLastKnownReportTime:
detailsWithIdentifier:modeIdentifier:lifetime:
takeModeAssertionWithDetails:error:
_terminateDND
setFirstBuddyPresentationFirstMoment:
_userEligibleForDNDBuddy
sessionStatus
lastKnownVehicularState
isAutomaticDNDInternalForceOverrideEnabledPreference
_firstRideStarted
_firstRideCompleted
_scheduleBuddyAtAnAppropriateTimeWithAction:
hasAdjustedTriggerMethod
firstBuddyPresentationFirstMoment
currentCalendar
isDate:inSameDayAsDate:
timeIntervalSinceReferenceDate
setLastKnownVehicularHints:
reason
userIndicatedNotDrivingWithReason:
restrictionsEnabled
pathForResource:ofType:
arrayWithContentsOfFile:
currentLocale
localeIdentifier
hasStartedFirstRidePreference
hasCompletedFirstRidePreference
isAutomaticDNDInternalExitConfirmationOverrideEnabledPreference
dateWithTimeIntervalSinceReferenceDate:
hasPrefix:
_scheduleVehicleQuery
hasPairedDeviceSupportingCarPlayWithAddress:
_scheduleUserDisabledTimerWithInterval:
lastKnownReportTime
_cancelUserDisabledTimer
_transitionToState:vehicularHints:
userDisableTimer
setUserDisableTimer:
_userDisabledTimerFired:
_DNDAssertionInvalidated:
modeAssertionService:didReceiveModeAssertionInvalidation:
setAssertionService:
setStateMachine:
setPreferences:
setSessionStatus:
setAssertionTrap:
setCARDNDQueue:
setFirstRideVehicleHints:
setGeofencingObserver:
_expectedDNDTermination
_vehicleQueryInitiatedTimestamp
_expectedBuddyTermination
_userDisableTimer
_assertionService
_stateMachine
_sessionStatus
_assertionTrap
_CARDNDQueue
_nextUnlockAction
_nextLockAction
_lastKnownVehicularState
_lastKnownVehicularHints
_lastKnownReportTime
_firstRideVehicleHints
_geofencingObserver
setTimeStyle:
setDateStyle:
setLocale:
stringFromDate:
setTimeoutTimer:
setProcessTransaction:
stopTimeoutTimer
timeoutTimer
handleTimeout:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
transportType
stopWaitingForConnection
startWaitingForConnection
startTimeoutTimer
processTransaction
_timeoutTimer
_processTransaction
initWithMachServiceName:
connectedDevices
address
connectingDevices
pairedDevices
_deviceForBluetoothAddress:
setDevicePairingEnabled:
unpair
connectedServicesCount
isServiceSupported:
connect
sendEvent:withDictionary:
shouldRecordAnalyticsEvents
_CARCoreAnalyticsEventNameForEvent:
rangeOfUnit:startDate:interval:forDate:
components:fromDate:toDate:options:
second
minute
sendAggdEvent:withValue:forSetting:
sendAppleCareEvent:withExtras:
driveStartTimeInterval
setDriveStartTimeInterval:
isCurrentlyDriving
setIsCurrentlyDriving:
_isCurrentlyDriving
_driveStartTimeInterval
_radarURLForDiagnosticsAtTime:withEvent:
_radarURLForDiagnosticsAtTime:didStartRhodes:
_radarURLForDiagnosticsAtTime:didEnterRhodesGeofence:
_radarURLForDiagnosticsAndDescriptionText:
_power
CARDNDAlerts
SBSRemoteAlertHandleObserver
NSObject
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
CRAlert
CRVehicleStore
CRVehicleStoreAvailability
CRRhodesUnlockForDNDAlert
CRDNDEndAlert
CRDNDGeofenceAlert
CRDNDNotDrivingAlert
CRDictationService
SFSpeechRecognitionTaskDelegate
_CARVehicleState
CARVehicleState
CARDNDStateObserver
RadiosPreferencesDelegate
_CARDNDRegion
CARDNDGeofencingObserver
CLLocationManagerDelegate
CRCarPlayAppService
CRCarPlayAppServiceAgent
NSXPCListenerDelegate
CRAirPlayDiagnosticsService
CRCarKitService
CRCarKitServiceAgent
CRVehicleAccessoryManagerDelegate
CRCarPlayPreferencesDelegate
CRBulletin
CARDNDAssertionTrap
CRVehicleAccessoryAlert
CROutstandingWiredVehicleApprovalAlert
CROutstandingWirelessVehicleApprovalAlert
CROutstandingVehiclePairingAlert
CRReconnectionEnableWiFiAlert
CARDNDWatchSyncManager
CRCarPlayDNDService
CARDNDServiceAgent
CRDiagnosticsAlert
CRInitiateLogsAlert
CRFileRadarAlert
CRCarKitMonitoringServerService
CRCarKitMonitoringClientService
CRCarKitMonitoringServiceAgent
CRDiagnosticsData
CRDiagnosticsService
CARSessionObserving
CARDNDManager
CARDNDStateDelegate
CARDNDGeofencingObserverDelegate
CARDNDAssertionTrapDelegate
DNDModeAssertionUpdateListener
CRWirelessSessionAssertionManager
CRBluetoothManager
CARAnalytics
CARDNDDiagnosticsService
CRWiFiCarManager
[Rhodes] Posting bulletin %@ %@ %@
[Rhodes] Dismissing banner %@ %@
[Rhodes] Internal: Presenting enter geofence notification
[Rhodes] Internal: Presenting exit geofence notification
[Rhodes] Presenting Rhodes Mini unlock to opt in alert.
[Rhodes] Internal: Presenting DND end notification
[Rhodes] Internal: Presenting Not Driving Feedback Alert
[Rhodes] Not showing Buddy - our handle is still valid.
[Rhodes] Presenting DND Mini Buddy
[Rhodes] Failed pre-warming DNDBuddy: %@
[Rhodes] Finished pre-warming DNDBuddy.
[Rhodes] DND Buddy did activate.
[Rhodes] DND Buddy did deactivate.
[Rhodes] DND Buddy did invalidate with error %@
[Rhodes] User selected item %@ in bulletin %@
[Rhodes] No known presented bulletin matching identifier %@
[Rhodes] Bulletin has no action handler. Assuming this is a custom BBAction.
[Rhodes] Sending default action handler.
[Rhodes] Sending alternate action handler.
[Rhodes] No matching action for %@ on bulletin %@
[Rhodes] Sending additional action at index %@
Found a queried keychain item: %@
No vehicle found for keychain query: %@ error: %i
Found queried keychain items: %@
No vehicles found for keychain query: %@ error: %i
Updated a keychain item: %@
Failed to update a keychain item: %@  error: %i
Created a keychain item: %@
Failed to create a keychain item: %@ error: %i
Deleted keychain items matching: %@
Failed to delete keychain items matching: %@ error: %i
Failed to save vehicle preferences: %@ %@
Failed to remove vehicle preferences: %@ %@
No matching keychain item for %@ (%@)
Cleaned up preferences for missing keychain item %@ (%@)
Failed to cleaned up preferences for missing keychain item %@ (%@)
posting pairings changed
using cache with %lu vehicles
Failed to reconstruct vehicle with %@ (%@)
Failed to create vehicle identifier: %@
waiting for first unlock
completed first unlock
[Rhodes] Not fetching vehicle state - device is not of type iPhone.
[Rhodes] Not fetching vehicle state - device has not unlocked since boot.
[Rhodes] At least one call is active.
[Rhodes] VoiceOver was recently active.
[Rhodes] VoiceOver is enabled.
[Rhodes] Unregistered for lock events.
[Rhodes] Registered for lock events.
[Rhodes] Failed to register for lock events.
[Rhodes] Scheduling vehicle state check after %@
[Rhodes] Airplane mode now active.
[Rhodes] Airplane mode now inactive.
[Rhodes] Fetched CM vehicle state: %@
[Rhodes] Ignoring unknown vehicular state.
[Rhodes] Generated vehicle state %{public}@
[Rhodes] Device lost state is currently: %@
[Rhodes] Geofencing observer initialized
[Rhodes] Not setting up geofences; posting exit confirmation.
[Rhodes] Beginning to fetch LOIs for geofencing
[Rhodes] Creating geofence around start location using cached location
[Rhodes] No start location geofence created, location manager doesn't have cached location or accuracy does not qualify
[Rhodes] Stop fetching LOIs for geofencing
[Rhodes] Geofences cleared
[Rhodes] Currently in region with lat/long: {%f, %f}
[Rhodes] Not in any monitored regions
[Rhodes] Setting exit confirmation override %@
[Rhodes] Creating geofence around lat/long: {%f, %f}
[Rhodes] Creating geofence for [%@]
[Rhodes] Posting Exit Confirmation Enabled because of override.
[Rhodes] Posting Exit Confirmation Disabled because we are not in Car DND
[Rhodes] Posting Exit Confirmation Enabled because WiFi is powered off.
[Rhodes] Posting Exit Confirmation Enabled because Location Services are disabled
[Rhodes] Posting Exit Confirmation Disabled because we are not monitoring geofences
[Rhodes] Posting Exit Confirmation Disabled because we are in a geofence
[Rhodes] Posting Exit Confirmation Enabled because we are not in a geofence
[Rhodes] Updating region state for [%@] lat/long: {%f, %f}: %ld
[Rhodes] Updating region state for geofence [%@]: %ld
[Rhodes] Not creating geofence around {%f, %f} since we're at our maximum geofence count.
[Rhodes] Geofence already exists around lat/long: {%f, %f}
[Rhodes] Cancelling geofences for predicted locations - no longer actively monitoring.
[Rhodes] Fetching home LOI
[Rhodes] Cancelling geofences for home location - no longer actively monitoring.
[Rhodes] Creating fence for home
[Rhodes] Fetching work LOI
[Rhodes] Cancelling geofences for work location - no longer actively monitoring.
[Rhodes] Creating fence for work
[Rhodes] Deactivating geofences since location services are now disabled
[Rhodes] Activating geofences since location services are now enabled
[Rhodes] Received location update, but nil location
[Rhodes] Received location update, but no longer monitoring
[Rhodes] Received location update, but age is too old
[Rhodes] Creating start geofence around received location
[Rhodes] Polling fences with unknown state
[Rhodes] Begin monitoring for lat/long: {%f, %f}
[Rhodes] Begin monitoring for [%@]
[Rhodes] Entered region for lat/long: {%f, %f}
[Rhodes] Entered region for [%@]
[Rhodes] Exited region for lat/long: {%f, %f}
[Rhodes] Exited region for [%@]
[Rhodes] Determined state for [%@]: %ld
[Rhodes] Location manager failed for Geofencing: %@
[Rhodes] Location services are not enabled.
[Rhodes] WiFi is powered off.
Process %i does not have the %@ entitlement
Handling blacklist asset updated
Posting blacklist changed
Fetched app blacklist: %@
No installed app blacklist asset, starting download
Failed to find app blacklist asset
Failed to query for CarPlayAppBlacklist asset: %@
Failed to parse app blacklist file
Error creating CarPlay logging folder: %@
dnsName is nil: %@ or filePath is nil: %@
Output of airplayutil: %s
Could not find connected IP string
Error when getting remote logs
No IP address, not gathering remote logs
Fetching remote logs with command: %@
Parse Retry-After error
Retry %@ in %d seconds
Timer completed, fetching remote logs
Failed to move: %@
Timed out waiting for logging completion. Pending log count: %d.
isBluetoothInCar %i
received WiFi credentials for connectionID %lu
Failed to find a connected accessory with connection ID: %lu
Ignoring WiFi credentials for vehicle %@
Failed to update vehicle %@
Failed to save WiFi credentials for vehicle %@
saved WiFi credentials for %@
not posting in-car notification, WiFi credentials were not received while Bluetooth connected
CarPlay restriction changed
Sending iAP in-car wifi notification %@
Sending iAP out-of-car wifi notification %@
Handling CarPlay attach
CarPlay is not available
First accessory attach for %@, adding certificateSerial
Merging incomplete pairing %@ into pairing %@
BT connected vehicles: %@
Saved vehicle %@
Failed to save vehicle %@
Failed to remove WiFi credentials for vehicle %@
attemptConnectionForVehicles %@
attempting Bluetooth connection to %@
no WiFi credentials request necessary for %@
sendDeviceIdentifierForVehicleAccesory %@ pairingStatus %lu
approval alert cancelled
approval alert accepted
approval alert declined
Wired BT pairing alert declined
Wired BT pairing alert cancelled
Wired BT pairing alert accepted
starting wired Bluetooth pairing with %@
wired pairing address: %@
vehicle did not have a Bluetooth address after pairing: %@
failed to complete Bluetooth pairing with %@
presenting alert to ask to turn on Wi-Fi
Enable Wi-Fi alert declined
Enable Wi-Fi alert cancelled
Enable Wi-Fi alert accepted, turning on Wi-Fi
[Rhodes] Taking assertion trap for %@
[Rhodes] Releasing assertion trap for %@
[Rhodes] Clearing all assertion traps.
[Rhodes] Clearing all temporary assertions.
[Rhodes] Process %i has neither the %@ nor %@ entitlements
[Rhodes] Ignoring Car DND toggle; we're already in that same state.
[Rhodes] Engaging DND from external activation.
[Rhodes] Disabling DND from external activation.
[Rhodes] Asked for DNDWD %{public}@, received %{public}@
[Rhodes] Should Display Exit Confirmation: %d
[Rhodes] Updated auto-reply audience to %@
[Rhodes] Disabling DND until end of drive.
[Rhodes] Ignoring disable DND until end of drive - DND was not valid.
clearing transaction count: %li
start monitoring for %@
incremented transaction count: %li
stop monitoring for %@
decremented transaction count: %li
going to tell clients that %@ has enabled state %i
policy monitor sending vehicle update to process %d
failed to connect to monitoring client service %@
Creating CarPlay logging folder: %@
Failed to move configuration file: %@
Configuration file does not exist
Failed to move device screenshot: %@
Device screenshot does not exist
Failed to move car screenshot: %@
Car screenshot does not exist
Failed to move file: %@
Providing custom attachments
No custom attachments
Maps is frontmost or guidance is active, retreiving last location
Remote logs are already in flight
After gathering sysdiagnose, filepath was nil with error: %@
Not completing logging since remote logs are in flight or dictation is not complete yet
Need sysdiagnose, but sysdiagnose is already in flight
No need for sysdiagnose now
CarPlay diagnostics gathering started, starting a state capture
Presenting dictation banner since we already have scheduled diagnostics
Skipping sysdiagnose in testing context.
Gathering AirPlay remote side logs
Dictation is not available
Dictation is not enabled via user preference
Unable to acquire status bar assertion
Status bar assertion released
Initiating vibrate for sysdiagnose
Presenting File Radar alert on CarPlay disconnect
Launching Tap-to-Radar for launch URLs
Clearing pending radar data
Beginning IE transaction for CarPlay diagnostics
Asked to take IE transaction, but we're already holding one
Releasing IE transaction for CarPlay diagnostics
Asked to release IE transaction, but we weren't holding an IE transaction
Session disconnect, sysdiagnose should be taken
Session disconnect, no need for sysdiagnose
Session disconnect, sysdiagnose already in flight
Session disconnect, but no pending drafts
[Rhodes] Failed adding assertion update listener: %@
[Rhodes] Added assertion update listener.
[Rhodes] CarPlay session started.
[Rhodes] CarPlay session ended.
[Rhodes] Failed fetching active assertion with %@
[Rhodes] Device locked; engaging DND.
[Rhodes] DND temporarily disabled due to %@
[Rhodes] DND re-enabled after last temporary assertion released.
[Rhodes] We already have a DND assertion.
[Rhodes] Engaging DND.
[Rhodes] Failed to acquire DND assertion with %{public}@
[Rhodes] Received an unwanted assertion. Canceling.
[Rhodes] New assertion - posting CarKit DND status changed.
[Rhodes] Requested to disable DND, but we weren't holding an assertion.
[Rhodes] Resetting DNDBuddy presentation.
[Rhodes] Skipping opt-in because we should not show Buddy.
[Rhodes] Received a request for %@ at next unlock, but we already had scheduled %@. Ignoring.
[Rhodes] No unlock action - ignoring buddy request.
[Rhodes] Cancelling Buddy - not an ideal time to display.
[Rhodes] Failed to launch Buddy with %@
[Rhodes] Scheduling initial presentation of Buddy.
[Rhodes] Ended a drive, scheduling second Buddy presentation.
[Rhodes] Non-vehicular state with no valid first ride state.
[Rhodes] Not engaging DND due to active assertions: %@
[Rhodes] DND while driving is set to Manually
[Rhodes] Starting first ride.
[Rhodes] In vehicle, but has not completed first ride. Ignoring.
[Rhodes] Scheduling DND start with next device lock.
[Rhodes] Cleaning up DND state.
[Rhodes] Assertion invalidated due to %{public}@
[Rhodes] Expected DND termination.
[Rhodes] Unexpected DND termination.
[Rhodes] Posting DND status changed.
[Rhodes] User indicated passenger.
[Rhodes] User indicated pulled over.
[Rhodes] User indicated incorrect vehicle detection.
[Rhodes] User indicated other.
[Rhodes] User indicated unknown not driving reason.
[Rhodes] Not showing DND Buddy because restriction is enabled
[Rhodes] Not showing DND Buddy because VoiceOver is enabled
[Rhodes] Not showing DND Buddy because region is not US, locale is: %@
[Rhodes] Override is set; forcing vehicle state ON.
[Rhodes] Skipping non-BT in-vehicle report received after BT in-vehicle report.
[Rhodes] Interpreted as BT disconnect.
[Rhodes] Ignoring vehicle state change because CarPlay session is active.
[Rhodes] Ignoring vehicle state change because AirPlane mode is active.
[Rhodes] Likely a CarPlay connection.
[Rhodes] CarPlay vehicle that isn't disabled.
[Rhodes] Marking report while user disabled.
[Rhodes] Ignoring vehicular report - user disabled and still within delay window.
[Rhodes] Vehicular report occurred after jitter interval.
[Rhodes] Beginning IE transaction.
[Rhodes] Releasing IE transaction.
[Rhodes] Scheduling user disabled timer after %@
[Rhodes] User disabled timer fired.
[Rhodes] Evaluating transition to Non-vehicular state.
[Rhodes] Evaluating transition to Vehicular state.
[Rhodes] Evaluating transition to Unknown state.
[Rhodes] Manual trigger mode.
[Rhodes] BT trigger mode.
[Rhodes] Automatic trigger mode.
assertion manager starting re-evaluation timer
assertion manager timed out but there is an active session
assertion manager timed out
opening 'com.apple.carkit.active-session' transaction %@
closing 'com.apple.carkit.active-session' transaction
carkitd launching
Handling %@ notification
system language changed, exiting
BTDeviceGetAddressString(%@) failed with error %d.
connected addresses: %@
unpaired device: %@
failed to find the device (%@) to unpair
[Rhodes] Sending CA event %@
[Rhodes] Recording aggd event %@
Unknown analytics event: %@
Unsupported calendar unit type: %@
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@24
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
@32@0:8@16@24
@24@0:8@16
@40@0:8@16@24@32
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
f24@0:8@16
v16@0:8
B32@0:8@16@24
v32@0:8@16@?24
@40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSArray"16@0:8
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@"NSSet"40@0:8Q16Q24@32
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
v24@0:8#16
v24@0:8@?16
v40@0:8@16@?24@?32
@24@0:8#16
v20@0:8B16
@"SBSRemoteAlertHandle"
@"BBDataProviderConnection"
@"BBDataProviderProxy"
@"NSMutableArray"
v24@0:8^{__CFUserNotification=}16
d16@0:8
v24@0:8Q16
B24@0:8@?16
^{__CFUserNotification=}
@"NSTimer"
@32@0:8@16@?24
@"NSSet"
@"NSString"
@20@0:8B16
v28@0:8@16B24
v24@0:8@"SFSpeechRecognitionTask"16
v32@0:8@"SFSpeechRecognitionTask"16@"SFTranscription"24
v32@0:8@"SFSpeechRecognitionTask"16@"SFSpeechRecognitionResult"24
v28@0:8@"SFSpeechRecognitionTask"16B24
@?16@0:8
@"NSError"
@"SFSpeechRecognitionTask"
@"SFSpeechAudioBufferRecognitionRequest"
@"SFSpeechRecognizer"
@"AVAudioEngine"
@32@0:8@16#24
v24@0:8d16
v20@0:8i16
@"RadiosPreferences"
@"<CARDNDStateDelegate>"
@"CXCallObserver"
q16@0:8
v24@0:8q16
@"CLCircularRegion"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@48@0:8{CLLocationCoordinate2D=dd}16@32Q40
v32@0:8q16@24
@"<CARDNDGeofencingObserverDelegate>"
@"CLLocationManager"
@"RTRoutineManager"
@"NSArray"
@"CRWiFiCarManager"
v24@0:8@?<v@?@"NSSet"@"NSError">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16^@24
@"NSObject<OS_dispatch_queue>"
i40@0:8@16^@24@32
v40@0:8Q16@24@?32
v32@0:8@"CRVehicle"16@?<v@?@"CRVehicle"@"NSError">24
v32@0:8@"CRVehicle"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?B@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSString"@"NSError">16
v40@0:8Q16@"NSDictionary"24@?<v@?B@"NSString"@"NSError">32
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v24@0:8@?<v@?>16
v48@0:8@"NSURL"16@"NSURL"24@"NSArray"32@?<v@?>40
v32@0:8@"CRVehicleAccessoryManager"16@"CRVehicleAccessory"24
B24@0:8^@16
B32@0:8@16Q24
@"CRCarKitMonitoringServiceAgent"
@"CRVehicleStore"
@"CRVehicleAccessoryManager"
@"CRCarPlayPreferences"
@"CRBluetoothManager"
@"CRWirelessSessionAssertionManager"
@"NSNumber"
@"NSMutableDictionary"
@"CARDNDAlerts"
@"NSDate"
@"BBBulletinRequest"
B24@0:8Q16
@"CARAutomaticDNDStatus"
@"<CARDNDAssertionTrapDelegate>"
@"NSUserDefaults"
@"CRVehicleAccessory"
@"CRVehicle"
v28@0:8B16@?20
v32@0:8Q16@?24
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v32@0:8Q16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSData"16@?<v@?>24
v36@0:8@16B24@?28
@"NSMutableSet"
@64@0:8@16@24@32@40@48@56
@"NSURL"
v24@0:8@"CARSession"16
@44@0:8@16@24@32I40
v56@0:8@16@24@32@40@?48
v40@0:8@16d24@?32
@32@0:8@16d24
I16@0:8
v20@0:8I16
@"CRFileRadarAlert"
@"CRInitiateLogsAlert"
@"CARSessionStatus"
@"NSObject<OS_os_transaction>"
v32@0:8@"CARDNDStateObserver"16@"<CARVehicleState>"24
v28@0:8@"CARDNDStateObserver"16B24
v32@0:8@16q24
v32@0:8@"CARDNDGeofencingObserver"16q24
v28@0:8@"CARDNDAssertionTrap"16B24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
@72@0:8@16@24@32@40@48@56@64
v32@0:8B16B20@?24
v32@0:8Q16Q24
@"DNDModeAssertionService"
@"CARDNDStateObserver"
@"CARDNDAssertionTrap"
@"CARDNDGeofencingObserver"
Q24@0:8@16
q40@0:8Q16@24@32
v32@0:8Q16@24
v36@0:8@16q24B32
@24@0:8Q16
@32@0:8@16Q24
@28@0:8@16B24
v28@0:8B16@20
@(#)PROGRAM:carkitd  PROJECT:CarKit-1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>17A405001</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>carkitd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.internal.carkitd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>carkitd</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>12.0</string>
<key>DTSDKBuild</key>
<string>16A317</string>
<key>DTSDKName</key>
<string>iphonesimulator12.0</string>
<key>DTXcode</key>
<string>1000</string>
<key>DTXcodeBuild</key>
<string>10L176z</string>
<key>MinimumOSVersion</key>
<string>12.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.UIKit.status-bar-override-allow</key>
<true/>
<key>com.apple.assistant.dictation.prerecorded</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.preauthorized</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.CarPlayAppBlacklist</string>
</array>
<key>com.apple.private.carkit.dnd</key>
<true/>
<key>com.apple.private.donotdisturb.mode.assertion.client-identifiers</key>
<array>
<string>com.apple.carkitd.assertion-service</string>
</array>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.carplay.pairings</string>
</array>
</dict>
</plist>
