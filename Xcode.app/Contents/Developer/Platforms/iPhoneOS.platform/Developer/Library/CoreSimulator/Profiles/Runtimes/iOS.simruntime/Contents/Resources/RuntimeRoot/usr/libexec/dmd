@(#)PROGRAM:dmd  PROJECT:DeviceManagement-10.36
>@333333
dmf_installSynthesizedProfileRequestWithAssetProviders:error:
dmf_removeSynthesizedProfileRequestWithError:
synthesizeProfileOutUUIDs:withOldUUIDs:assetProviders:
setProfileData:
setStyle:
setProfileIdentifier:
filterQueryForScope
dmfKeyFromDeviceInfoKey:
setPropertyKeys:
valuesByPropertyKey
errorsByPropertyKey
deviceInfoKeyFromDMFKey:
payloadQueries
minusSet:
addRMDSpecificResultsToDictionary:errors:
deviceInfoDeviceChannelKeys
deviceInfoUserChannelKeys
intersectSet:
deviceInfoSupervisedKeys
deviceInfoRMDKeys
payloadMessage
payloadPhoneNumber
setPhoneNumber:
fontURL
setFontURL:
_fontURL
fontDeclaration
dmd_userFontDatabaseDirectoryURL
initWithFontDeclaration:resolver:
setFontDeclaration:
_fontDeclaration
initWithFontDeclaration:installMetadata:
imageURL
dataWithContentsOfURL:
init
class
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
encodeWithCoder:
initWithCoder:
urlRepresentation
dataRepresentation
stringRepresentation
numberRepresentation
.cxx_destruct
setImageURL:
_imageURL
resolver
resolveAssetWithContext:
imageDeclaration
declarationIdentifier
declarationServerHash
stringWithFormat:
payloadDescriptor
payloadReference
isExecuting
endOperationWithError:
dmd_userImageDatabaseDirectoryURL
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assetIdentifier
UUID
URLByAppendingPathComponent:
moveItemAtURL:toURL:error:
endOperationWithResultObject:
assetResolutionDidSucceedWithAssetURL:
assetResolutionFailedWithError:
assetDescriptor
assetReference
initWithImageDeclaration:resolver:
isAsynchronous
main
setImageDeclaration:
setResolver:
_imageDeclaration
_resolver
installMetadata
path
fileExistsAtPath:
removeItemAtURL:error:
initWithImageDeclaration:installMetadata:
setInstallMetadata:
_installMetadata
alloc
dmf_installAssetOperationWithReferenceResolver:error:
dmf_removeAssetOperationWithInstallMetadata:error:
payloadEcho
payloadReturnStatus
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
countByEnumeratingWithState:objects:count:
accountProperties
objectForKeyedSubscript:
boolValue
primaryAppleID
_outputContextForSessionType:
setCurrentlyPickedDestinationName:
setCurrentlyPickedDestinationDeviceID:
currentlyPickedDestinationDeviceID
_discoverDeviceWithDestinationDeviceID:scanWaitTime:error:
currentlyPickedDestinationName
_discoverDeviceWithDestinationName:scanWaitTime:sessionType:
_setOutputDevices:forSessionType:password:error:
_promptUserToMirrorOnDisplayNamed:withCompletion:
methodForSelector:
setValue:forKey:
showNotification:timeout:completion:
_currentlyPickedDestinationName
_currentlyPickedDestinationDeviceID
UTF8String
dataWithContentsOfFile:
propertyListWithData:options:format:error:
_cleanUp
manifest
initWithQueue:name:stateHandlerBlock:
_metadataByBundleIdentifier
_getEnterpriseAppMetadataForManifestURL:completion:
manifestURL
getBundleIdentifierForManifestURL:completion:
_metadataForBundleIdentifier:
unsignedIntegerValue
setState:
setOptions:
setRedemptionCode:
setUnusedRedemptionCode:
_newMetadataDictionary
state
numberWithUnsignedInteger:
options
redemptionCode
unusedRedemptionCode
_setMetadata:forBundleIdentifier:error:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
setVPNUUIDString:forBundleIdentifier:error:
managementInformationForBundleIdentifier:
setManagementInformation:forBundleIdentifier:error:
stringForState:
managedBundleIdentifiers
setState:forBundleIdentifier:error:
dictionaryWithCapacity:
requestWithURL:
ephemeralSessionConfiguration
sessionWithConfiguration:
_getEnterpriseAppMetadataFromData:completion:
dataTaskWithRequest:completionHandler:
sharedController
getBundleIdentifierForAppRequest:completion:
getMetadataForAppRequest:completion:
VPNUUIDStringForBundleIdentifier:
handleFetchRequest:type:completion:
startInstallingEnterpriseAppWithManifestURL:completion:
startInstallingNonEnterpriseAppForRequest:completion:
startRedeemingAppWithCode:completion:
cancelAppInstallationWithBundleIdentifier:completion:
resumeAppInstallationWithBundleIdentifier:completion:
startUpdatingAppForRequest:metadata:completion:
cancelAppUpdateWithBundleIdentifier:completion:
resumeAppUpdateWithBundleIdentifier:completion:
startUninstallingAppWithBundleIdentifier:completion:
setVPNUUIDString:configuration:options:forBundleIdentifier:
stateForBundleIdentifier:
updateAppStates
advanceTransientStates
stateHandler
_manifest
_stateHandler
bundleIdentifiers
storeItemIdentifiers
bundleID
storeItemID
initWithJob:hasUpdateAvailable:
itemID
initWithApplicationProxy:hasUpdateAvailable:
enumerateApplicationsOfType:block:
getJobsUsingBlock:
getUpdatesWithCompletionBlock:
getManagedUpdatesWithCompletionBlock:
setShouldHideUserPrompts:
_installSystemAppForRequest:completion:
_installUserAppForRequest:completion:
_installDeviceLicensedAppForRequest:completion:
resumeJobsWithIDs:completionBlock:
initWithBundleID:
startWithErrorHandler:
_downloadAppForRequest:type:completion:
allowFreePurchases
initPrivate
_updateForegroundBundleIdentifiers
performSelectorOnMainThread:withObject:waitUntilDone:
initWithDisplayType:handler:
bundleIDsToAssertions
setBundleIDsToAssertions:
setObject:forKeyedSubscript:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
setRequestType:
initWithOptions:
sendRequestWithCompletionBlock:
writeManagementInformationToDiskWithError:
sharedConnection
rereadManagedAppAttributes
managedAppsManifest
bundleIdentifier
_getMetadataForBundleIdentifier:storeItemIdentifier:completion:
applicationProxyForSystemPlaceholder:
setBundleIdentifier:
localizedName
itemName
setDisplayName:
setIsStoreApp:
setNeedsRedemptionCode:
storeItemIdentifier
_managedDefaultsForBundleIdentifier:
mutableCopy
arrayWithObjects:count:
_dataContainerPathForBundleIdentifier:
arrayWithObject:
applicationProxyForIdentifier:
dataContainerURL
sendAppRequestWithBundleIdentifier:storeItemIdentifier:type:skipDownloads:completion:
isMainThread
layoutMonitor
currentLayout
elements
count
arrayWithCapacity:
addObject:
copy
setForegroundBundleIdentifiers:
metadataPath
addTerminationAssertion:forBundleIdentifier:
removeTerminationAssertionForBundleIdentifier:
getBundleIdentifierForStoreItemIdentifier:completion:
getMetadataForNonEnterpriseAppRequest:completion:
configurationForBundleIdentifier:
setConfiguration:forBundleIdentifier:error:
feedbackForBundleIdentifier:
setFeedback:forBundleIdentifier:error:
foregroundBundleIdentifiers
singleAppModeBundleIndentifier
setSingleAppModeBundleIndentifier:
setLayoutMonitor:
_foregroundBundleIdentifiers
_singleAppModeBundleIndentifier
_bundleIDsToAssertions
_layoutMonitor
initWithRedeemCodes:
setAuthenticationContext:
startWithRedeemResponseBlock:
startWithAuthenticateResponseBlock:
cancelJobsWithIDs:completionBlock:
resumeSync
uninstallAppWithBundleID:requestUserConfirmation:completion:
terminateSyncWithCompletionHandler:
_startUpdatingAppForRequest:metadata:completion:
initWithBundleIdentifier:efficacy:name:withHandler:
_updateEndedForLifeCycle:
setLicenseType:
setStoreItemIdentifier:
sharedService
openApplication:options:withResult:
_lifeCycleByBundleIdentifier
weakObjectsPointerArray
initWithTarget:
stringForInstallationState:
addStateWithName:
addTransitionToState:triggeringEvent:
stateWithName:
setInitialState:
setLogLevel:
start
stateMachine
name
eventWithTrigger:context:
transitionWithTriggeringEvent:
observers
willStartInstallingForLifeCycle:
didStartInstallingForLifeCycle:
didPauseInstallingForLifeCycle:
didResumeInstallingForLifeCycle:
didCancelInstallingForLifeCycle:
didFailInstallingForLifeCycle:
didFinishInstallingForLifeCycle:
willStartUpdatingForLifeCycle:
didStartUpdatingForLifeCycle:
didPauseUpdatingForLifeCycle:
didResumeUpdatingForLifeCycle:
didCancelUpdatingForLifeCycle:
didFailUpdatingForLifeCycle:
didFinishUpdatingForLifeCycle:
willStartUninstallingForLifeCycle:
didFailUninstallingForLifeCycle:
didFinishUninstallingForLifeCycle:
addPointer:
pointerAtIndex:
removePointerAtIndex:
_removeLifeCycleForBundleIdentifier:
didChangeInstallingProgressForLifeCycle:
didChangeUpdatingProgressForLifeCycle:
setObservers:
setStateMachine:
_progress
_observers
_stateMachine
appState
isInstalled
installType
installProgress
installState
initWithBundleIdentifier:currentState:
defaultWorkspace
addObserver:
removeObserver:
dealloc
proxyProgress
currentState
willStartInstalling
willStartUpdating
_findProxyInProxies:andCallBlock:
didStartInstalling
didStartUpdating
didChangeInstallingProgress
didChangeUpdatingProgress
didPauseInstalling
didPauseUpdating
didResumeInstalling
didResumeUpdating
didCancelInstalling
didCancelUpdating
didFailInstalling
didFailUpdating
didFinishInstalling
didFinishUpdating
willStartUninstalling
didFailUninstalling
didFinishUninstalling
isEqualToString:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
initWithBundleIdentifier:
progress
setProxyProgress:
_proxyProgress
lifeCycleForBundleIdentifier:
lifeCycle
displayName
isStoreApp
needsRedemptionCode
_isStoreApp
_needsRedemptionCode
_bundleIdentifier
_displayName
payloadMetadataObjectID
objectWithID:
payload
payloadDictionary
declarationForPayload:error:
identifier
verboseDescription
endOperationMarkingPayloadMetadata:failedWithError:
assetResolver
installOperationDidFinish:asset:
addTarget:selector:forOperationEvents:userInfo:
enqueueOperation:
performBackgroundContextBlock:
error
dictionaryWithObjects:forKeys:count:
addStatusEntriesFromDictionary:
resultObject
endOperationWithPayloadMetadata:desiredStatus:actualStatus:
setAssetResolver:
_assetResolver
removeOperationDidFinish:asset:
setBlock:
block
blockOperationWithBlock:
_block
sharedInstance
bluetoothManager
available
setEnabled:
setPowered:
setStillNeedsUpdate:
defaultCenter
availabilityChanged:
addObserver:selector:name:object:
stillNeedsUpdate
enabled
removeObserver:name:object:
sharedManager
_enabled
_stillNeedsUpdate
_bluetoothManager
clearStoredActivationLockBypassCode
setWithObject:
validateRequest:error:
unlockTokenData
secret
whitelistedClassesForRequest
requiredEntitlements
clearPasscodeWithEscrowKeybagData:secret:outError:
resetRestrictionsPassword
payloadCategory
addEntriesFromDictionary:
setStateDictionary:
setDesiredStatus:
setActualStatus:
taskOperationDidFinish:userInfo:
commandForPayload:error:
dmf_executeRequestWithError:
dmf_requestExecutesWithoutReturning
dmf_statusForResult:
classesOf:conformsTo:
registeredType
caseInsensitiveCompare:
sortedArrayUsingSelector:
supportedConfigurationTypes
addObjectsFromArray:
supportedAssetTypes
supportedActivationTypes
dmf_installRequestWithAssetProviders:error:
dmf_replaceRequestWithAssetProviders:error:
dmf_removeRequestWithError:
supportedAssetClasses
supportedCommandTypes
supportedDeclarationTypes
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
newBackgroundContext
fetchRequest
execute:
performBlockAndWait:
setType:
setPersistentStoreDescriptions:
firstObject
stringByExpandingTildeInPath
processInfo
processName
fileURLWithPathComponents:
databaseURLForDomainMask:
setURL:
descriptionForSQLiteStoreWithDomainMask:
managedObjectModel
initWithName:managedObjectModel:
performBackgroundTask:
newInMemoryDatabase
newSystemDatabase
newUserDatabase
initWithDatabase:
setName:
setMaxConcurrentOperationCount:
setSuspended:
setDatabase:
initializationOperationDidFinish:
addTarget:selector:forOperationEvents:
viewContext
executeFetchRequest:error:
organizationControllerByIdentifier
initWithOrganization:delegate:
addDependency:
addOperation:
mainQueue
database
queue
operations
databaseInitializationOperation
setDeviceStateProvider:
delegateDidResume
enqueueDeclarationProcessingOperationIfNeeded
setQueuePriority:
delegateWillSuspend
allValues
organization
valueForKey:
initWithObjects:forKeys:
setOrganizationsByIdentifier:
addOperationWithBlock:
setRequest:
setClientIdentifier:
setDelegate:
scheduleDatabaseModificationOperation:completionHandler:
organizationIdentifier
fetchRequestForPayloadMetadatasFromOrganizationWithIdentifier:matchingPredicate:
valueForKeyPath:
configurationSourceControllers
reportStatus
setDatabaseInitializationOperation:
initializationOperation
setInitializationOperation:
declarationModificationOperationDidFinish:completionHandler:
deviceStateProvider
enqueueOperations:
addOperations:waitUntilFinished:
fetchRequestForPayloadMetadatasPendingStatusUpdateFromOrganizationWithIdentifier:
stateChangeTimestamp
stateDictionary
serverHash
objectID
allKeys
predicateWithFormat:
setPredicate:
setLastStatusReportTimestamp:
save:
fetchRequestMatchingConfigurationOrganizationWithIdentifier:
refreshObject:mergeChanges:
configurationSourceWithIdentifier:
registerConfigurationSource:
updateWithConfigurationSource:
delegate
configurationEngineDidResume:
configurationEngineWillSuspend:
engineWithDatabase:
configurationSourceController:fetchStatusUpdatesWithCompletionHandler:
engineProcessingOperation:enqueuedOperationsForOrganizationWithIdentifier:
engineProcessingOperation:assetResolverForOrganizationWithIdentifier:
registerConfigurationSourceOperation:didUpdateRegistrationForConfigurationSource:
resume
suspend
handleFetchConfigurationOrganizationsRequest:completionHandler:
handleConfigurationSourceRegistrationRequest:clientIdentifier:completionHandler:
handleSetDeclarationsRequest:completionHandler:
handleUpdateDeclarationsRequest:completionHandler:
fetchDeclarationsForOrganizationWithIdentifier:completionHandler:
handleUpdateCommandsRequest:completionHandler:
processStatusForOrganizationWithIdentifier:completionHandler:
setQueue:
setOrganizationControllerByIdentifier:
_delegate
_deviceStateProvider
_database
_queue
_organizationControllerByIdentifier
_databaseInitializationOperation
_initializationOperation
outgoingPayloadMetadataReferences
unknownPayloadKeys
allObjects
sharedServer
operationClassForRequest:
initWithRequest:
installationOperationDidFinish:userInfo:
updateWithOrganization:
persistentConfigurationSources
persistentConfigurationSourceControllersByIdentifier
containsObject:
removeObjectForKey:
initWithConfigurationSource:delegate:
setIdentifier:
configurationSource
setRegisteredConfigurationSources:
ephemeralConfigurationSources
ephemeralConfigurationSourceControllersByIdentifier
unregisterConfigurationSource:
setPersistentConfigurationSourceControllersByIdentifier:
setEphemeralConfigurationSourceControllersByIdentifier:
_identifier
_persistentConfigurationSourceControllersByIdentifier
_ephemeralConfigurationSourceControllersByIdentifier
removalOperationDidFinish:userInfo:
setOrganizationIdentifier:
machServiceName
setMachServiceName:
listenerEndpoint
setListenerEndpoint:
statusReportingRequirements
setStatusReportingRequirements:
context
controller
configurationEngineRequestedAsset:completion:
fetchRemoteProxy:
setContext:
_context
source
initWithConfigurationSource:
setSource:
updateStatusChangeListener
statusForSourceDidChange:
object
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
reportStatusTimeout
initWithController:
setController:
_source
_organizationIdentifier
_machServiceName
_listenerEndpoint
_statusReportingRequirements
configurationStatusDidChange:completion:
initWithListenerEndpoint:
initWithMachServiceName:options:
anonymousConnection
namedConnection
tryConnectingToConnection:completion:
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
probe:
_controller
_anonymousConnection
_namedConnection
initWithEntityName:
validateProperties:
validateForInsert:
validateForUpdate:
validateForDelete:
subscriberCellularProvider
carrierName
IMEI
MEID
modemFirmwareVersion
ICCID
currentNetworkName
carrierBundleVersion
currentMobileCountryCode
currentMobileNetworkCode
dataRoamingEnabled
setDataRoamingEnabled:
isRoaming
voiceRoamingEnabled
setVoiceRoamingEnabled:
hasGSM
hasCDMA
_supportsVoiceRoaming
username
allUsers
hasDataToSync
forceDeletion
deleteUser:completionHandler:
shared
deviceType
isAppleInternal
networkDidChange
keybagLockStateDidChange
setIsKeychainUnlocked:
setHasKeychainUnlockedSinceBoot:
setIsNetworkTethered:
stopObservingChanges
mKeychainFirstUnlockNotificationToken
mKeychainUnlockNotificationToken
mNetworkChangeNotificationToken
_hasKeychainUnlockedSinceBoot
_isKeychainUnlocked
_isNetworkTethered
isManagedLostModeActive
disableManagedLostModeWithLocatedMessage:completion:
echo
resultStatus
setEcho:
setResultStatus:
endOperationWithDMFErrorCode:
runWithRequest:
setLostModeEnabled:
footnote
setFootnoteText:
setDisableSlideToUnlock:
enableManagedLostModeWithInfo:completion:
isReady
hasKeychainUnlockedSinceBoot
observeValueForKeyPath:ofObject:change:context:
willChangeValueForKey:
didChangeValueForKey:
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
operationWillStart
persistentStoreDescriptions
setResourceValue:forKey:error:
removeObject:
loadPersistentStoresWithCompletionHandler:
performDatabaseModificationOperationWithManagedObjectContext:
preprocessDatabaseInContext:forOrganization:error:
arrayWithArray:
processCommandPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
processDeclarationPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
declarationClass
mutableSetValueForKey:
assetReferences
filterUsingPredicate:
URIRepresentation
category
dependencies
clientIdentifier
delegateUpdatedDeclarationSourceAndEndOperation:
_clientIdentifier
declarations
request
addCommands
commandsWithPayloadDictionaries:organizationIdentifier:context:error:
_request
removeDeclarations
null
filteredArrayUsingPredicate:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
upsertDeclarations
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:
declarationsWithDictionaries:organizationIdentifier:context:error:
deleteObject:
actualStatus
eraseDeviceType
dataResetOptions
initWithMode:options:reason:
dataResetWithRequest:completion:
activationLockBypassKeyCreateNewIfNeeded:outError:
initWithBypassCode:
runAsUser
initWithAppsByBundleIdentifier:
fetchAppsForRequest:type:completion:
setBundleIdentifiers:
setInstallationState:
setVPNUUIDString:
initWithUUIDString:
setVPNUUID:
setConfiguration:
setFeedback:
setManagementInformation:
managedAppsOnly
managementInformation
deleteFeedback
initWithAvailableOSUpdates:
installedProfilesWithFilterFlags:
payloads
certificatePersistentID
copyItemWithPersistentID:useSystemKeychain:
initWithCertificateRef:isIdentity:
initWithCertificates:
setPayloadDescriptions:
setPayloadContents:
propertyKeys
activeSyncDeviceIdentifier
maxNumberOfUsers
isAppAnalyticsAllowed
currentDevice
setBatteryMonitoringEnabled:
batteryLevel
numberWithFloat:
isDiagnosticSubmissionAllowed
platformSpecificValueBlocksByName
aa_primaryAppleAccountWithPreloadedDataclasses
isEnabledForDataclass:
aa_isPrimaryEmailVerified
fmipStateWithCompletion:
isActivationLockedWithCompletion:
bbGateway
setOverrides:
mode
setMode:
effectiveIntervals
startComponents
setFromComponents:
endComponents
setToComponents:
resetToFallbackRange
setValid:
setBehaviorOverrides:
setPrivilegeTypes:
setRecordID:
setIsEffectiveWhileUnlocked:
setOverrideType:
setActiveBehaviorOverrideTypesChangeHandler:
setOverrideStatus:
setBehaviorOverrideStatusChangeHandler:
getBehaviorOverridesEffectiveWhileUnlockedWithCompletion:
getPrivilegedSenderAddressBookGroupRecordIDAndNameWithCompletion:
getPrivilegedSenderTypesWithCompletion:
getBehaviorOverridesWithCompletion:
isDNDScheduled
overrideType
overrideStatus
_valueBlocksByName
initWithValuesByPropertyKey:errorsByPropertyKey:
sharedConfiguration
isAwaitingConfiguration
uniqueIdentifier
isSupervised
initWithDictionary:copyItems:
_copyEscrowKeybagWithSecret:outError:
initWithUnlockTokenData:
initWithStateDescription:
initWithLocation:
arrayByAddingObjectsFromArray:
initWithBook:
initWithBooks:
initWithUpdateStatus:
filterFlags
_profileListWithFilterFlags:
initWithProfiles:
sharedReader
installedProfileIdentifiersWithFilterFlags:
userProfileRestrictions
systemProfileRestrictions
defaultRestrictions
installedProfileWithIdentifier:
dependentsOfParent:inDomain:
signerCertificates
dataWithBytes:length:
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
initWithProfile:isManaged:signerCertificates:restrictions:
currentRestrictions
initWithRestrictions:
supportsBlockLevelEncryption
supportsFileLevelEncryption
isPasscodeSet
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
effectiveValueForSetting:
userValueForSetting:
initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:
initWithSecurityInformation:
isEqualToUser:
initWithUser:isCurrentUser:
initWithUsers:
licenseType
_resumeInstallationForRequest:metadata:
_promptIfNeededAndInstallAppForRequest:metadata:
_setRedemptionCode:forBundleIdentifier:
_installAppForRequest:metadata:
_setUnusedRedemptionCode:forBundleIdentifier:
manage
_managedByMDMv1
_updateManagementInfoForBundleIdentifier:block:
setPersistentID:
setVersion:
profileData
managingProfileIdentifier
style
sharedHacks
isSetupBuddyDone
_installInteractiveProfile:
_installSilentProfileData:managingProfileIdentifier:
numberWithInteger:
installProfileData:options:outError:
profileWithData:outError:
mustInstallProfileNonInteractively:
queueFileDataForAcceptance:originalFileName:outError:
installProvisioningProfileData:managingProfileIdentifier:outError:
originator
conformsToOverridePatternWithKey:
restrictedAppBundleIDs
effectiveWhitelistedAppBundleIDs
openSensitiveURL:withOptions:error:
nextJobSequenceNumber
setNextJobSequenceNumber:
queueIDString
callStackSymbols
jobGroup
jobQueue
executionQueue
enqueueJob:
jobDidFinish
setExecutionQueue:
setJobQueue:
setJobGroup:
setQueueIDString:
_nextJobSequenceNumber
_executionQueue
_jobQueue
_jobGroup
_queueIDString
enableLostModeWithInfo:
deviceLastCloudBackupDate
setDeviceName:outError:
isLoginUser
switchToLoginUserWithCompletionHandler:
locationServicesEnabled
isStatusBarIconEnabledForLocationEntityClass:
setLocationServicesEnabled:
setStatusBarIconEnabled:forLocationEntityClass:
setCurrentLocation:
setCurrentError:
setAuthorizationStatusByType:forBundle:
initWithEffectiveBundle:
setLocationManager:
locationManager
setDesiredAccuracy:
requestLocation
currentLocation
currentError
currentRunLoop
dateWithTimeIntervalSinceNow:
runUntilDate:
stopUpdatingLocation
_updateLostModeFileForOriginator:
detachNewThreadWithBlock:
systemLostModeRequestPath
fileURLWithPath:isDirectory:
domain
code
coordinateWritingItemAtURL:options:error:byAccessor:
dictionaryWithContentsOfURL:
coordinateReadingItemAtURL:options:error:byAccessor:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
currentLocale
setLocale:
setTimeStyle:
stringFromDate:
setDateStyle:
localizedStringForKey:value:table:
lastObject
timeIntervalSinceReferenceDate
numberWithDouble:
writeToURL:atomically:
setResourceValues:error:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
getCurrentLocationForOriginator:completion:
clearLastLocationRequestedDate
lastLocationRequestedDateMessage
_locationManager
_currentLocation
_currentError
defaultStore
activeAccount
promptUserForiTunesAccount:accountNameEditable:canCreateNewAccount:assertion:completionBlock:
initWithAccount:
contextForSignIn
setPromptStyle:
setAccountNameEditable:
setCanCreateNewAccount:
cleanUpWithAssertion:completionBlock:
suspensionQueue
suspensionQueueResumeMemberQueueIfSuspended
suspensionQueueIsMemberQueueSuspended
setSuspensionQueueIsMemberQueueSuspended:
memberQueue
memberQueueCleanUp
memberQueueRereadNonStoreBooksManifest
downloads
memberQueuePersistentIDToNonStoreBook
downloadIdentifier
longLongValue
persistentIdentifier
enumerateObjectsUsingBlock:
downloadPhaseIdentifier
friendlyName
failureError
setDownloadIdentifier:
removeObjectIdenticalTo:
finishDownloads:
cancelDownloads:completionBlock:
fullPath
memberQueueCommitNonStoreBooksManifest
dictionaryWithContentsOfFile:
memberQueueRereadStoreBooksManifest
memberQueueiTunesStoreIDToStoreBook
iTunesStoreID
memberQueueCommitStoreBooksManifest
manifestDictionary
numberWithInt:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
isEnterpriseBookBackupAllowed
setSkipBackupAttribute:toItemAtPath:
writeToFile:atomically:
initWithManifestDictionary:
persistentID
setMemberQueuePersistentIDToNonStoreBook:
setMemberQueueiTunesStoreIDToStoreBook:
numberWithLongLong:
length
kind
setFullPath:
setPreviousVersion:
MCHashedFilenameWithPrefix:extension:
setKind:
initWithURL:
initWithKind:
initWithDownloadMetadata:
initWithURLRequest:
setValue:forProperty:
fileURLWithPath:
addAsset:forType:
removeItemAtPath:error:
setState:forNonStoreBookWithPersistentID:
addDownloads:completionBlock:
cancelNonStoreDownloadsWithDownloadIdentifiers:completionBlock:
updateJaliscoLibraryWithReason:completionHandler:
homeSharingCloudClient
objectAtIndexedSubscript:
isVPPLicensed
shouldBypassVPPLicenseCheck
title
setITunesStoreID:
setTitle:
author
setAuthor:
redownloadParameters
setBuyParams:
searchBookPurchaseHistoryForiTunesStoreID:assertion:triesLeft:completionBlock:
refreshBookPurchaseHistoryCompletion:
loadBooksForStoreIDs:withCompletionHandler:
setStoreManagedBook:
searchBookPurchaseHistoryForiTunesStoreID:assertion:completionBlock:
promptUserToLoginToiTunesIfNeededTitle:message:assertion:completionBlock:
initWithArray:copyItems:
removeObjectsForKeys:
memberQueueMoveTransientStatesForward
removePersistenceIdentifier:
resumeMemberQueueIfSuspended
rereadNonStoreBooksManifestCompletionBlock:
rereadStoreBooksManifestCompletionBlock:
setNonStoreManagedBook:
setState:forStoreBookWithiTunesStoreID:
installNonStoreBook:fileExtension:URL:assertion:completionBlock:
installStoreBookWithiTunesStoreID:originator:assertion:completionBlock:
storeBooks
nonStoreBooks
moveTransientStatesForward
removeNonStoreBookWithPersistentID:assertion:completionBlock:
removeStoreBookWithiTunesStoreID:assertion:completionBlock:
uprootWithAssertion:completionBlock:
setMemberQueue:
setSuspensionQueue:
_suspensionQueueIsMemberQueueSuspended
_memberQueue
_memberQueuePersistentIDToNonStoreBook
_memberQueueiTunesStoreIDToStoreBook
_suspensionQueue
setDownloadKinds:
setPersistenceIdentifier:
setShouldFilterExternalOriginatedDownloads:
initWithManagerOptions:
stringFromNumber:
dataUsingEncoding:
dmd_sha1Hash
base64EncodedStringWithOptions:
getResourceValue:forKey:error:
iTunesAccountHashForUniqueIdentifier:
deviceClass
floatValue
productType
productVersion
buildVersion
marketingName
serialNumber
modelNumber
uniqueDeviceID
userAssignedDeviceName
dataCapacity
dataAvailable
ethernetMacAddress
bluetoothAddress
wifiAddress
wifiAddressData
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
isNetworkTethered
_systemGroupContainerPathWithGroupIdentifier:
_systemProfileStorageDirectory
stringByAppendingPathComponent:
purchasedBooksDirectory
_userDirectory
_managedNonStoreBooksSystemGroupContainer
managedNonStoreBooksDirectory
_systemProfileLibraryDirectory
configurationProfilesSystemGroupContainer
stringWithCString:encoding:
purchasedBooksManifest
managedStoreBooksManifestPath
managedNonStoreBooksManifestPath
requiresUnlockedKeychain
isKeychainUnlocked
requiresNetworkTether
removeObserver:forKeyPath:
subOperations
setSubOperations:
sharedDeclarationOperationQueue
managedObjectContext
initWithDatabase:payloadMetadataObjectID:
_requiresNetworkTether
_requiresUnlockedKeychain
_payloadMetadataObjectID
_subOperations
_stateDictionary
andPredicateWithSubpredicates:
numberWithBool:
orPredicateWithSubpredicates:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForCommandsFromOrganizationWithIdentifier:matchingPredicate:
entity
initWithEntity:insertIntoManagedObjectContext:
setServerHash:
setRequiresNetworkTether:
initWithContext:
setPayload:
setPayloadDictionary:
setOrganization:
type
hasPrefix:
setCategory:
setRequiresUnlockedKeychain:
initWithPayloadDictionary:organizationIdentifier:context:error:
desiredStatus
setWithArray:
changedValues
date
setStateChangeTimestamp:
setPendingStatusUpdate:
postNotificationName:object:
lastStatusReportTimestamp
compare:
fetchRequestForActivePayloadMetadatasFromOrganizationWithIdentifier:withIdentifier:
fetchRequestForDeclarationsPendingActionFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingActionFromOrganizationWithIdentifier:
keyPathsForValuesAffectingStatus
dictionaryRepresentation
status
willSave
playSoundWithOptions:completion:
registerUserSwitchStakeHolder:
isMultiUser
currentUser
userType
sharedStakeholder
willSwitchUser
inEDUMode
initWithFormat:arguments:
initForOperation:
_retain
_release
isParked
exceptionWithName:reason:userInfo:
setIsParked:
operation
taskWithName:reason:
setBlockingTask:
blockingTask
begin
assertionForOperation:
stayAliveThroughHereAtLeast
park
unpark
setOperation:
_isParked
_operation
_blockingTask
clientBundleIdentifier
configurationSourceName
profileIdentifier
removeProfileWithIdentifier:installationType:completion:
removeProfileAsyncWithIdentifier:installationType:completion:
removeProtectedProfileAsyncWithIdentifier:installationType:completion:
removeProvisioningProfileWithUUID:outError:
destinationName
destinationDeviceID
password
scanWaitInterval
force
startAirPlaySessionWithDestinationName:destinationDeviceID:password:scanWaitTime:sessionType:force:error:
initWithReason:
setRebootType:
shutdownWithOptions:
matchesName:
actions
resultOSUpdateActionForOSUpdateAction:
initWithActions:
initWithMachServiceName:
_setQueue:
startObservingChanges
_currentLocaleDidChange:
hasAlreadyShutdown
invalidate
deviceStateObserver
operationQueue
xpcListener
taskServer
setHasAlreadyShutdown:
_requestClassNamesToOperationClasses
boolValueForEntitlement:
valueForEntitlement:
setClientBundleIdentifier:
setUid:
initWithXPCConnection:
connectWithClientTransport:
currentPlatformRequestClasses
clientUserInfo
transport
intValue
processIdentifier
listener:shouldAcceptNewConnection:
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
shutdown
_hasAlreadyShutdown
_xpcListener
_taskServer
_operationQueue
_deviceStateObserver
operationForRequest:targetUID:appleID:transport:error:
effectiveUserIdentifier
setRunAsUser:
isMigrationFinished
setIsMigrationFinished:
waitForMigrationIncludingPostRestoreMigration:completion:
_isMigrationFinished
setBoolValue:forSetting:
configuration
runWithRequest:bundleIdentifier:
UUIDString
seconds
setValue:forSetting:
fileHandle
dmd_dataWithMappedContentsOfFileHandle:error:
imageWithData:
optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:hasVideo:stillTimeInVideo:
location
initWithAuthenticationContext:
_storeLoginFailedError
authenticatedAccount
setAuthenticatedAccount:
startWithCompletionBlock:
authenticateResponseType
delegateWithAuthenticationContext:
timeout
request:didFailWithError:
requestDidFinish:
authenticateRequest:didReceiveResponse:
_authenticatedAccount
currentThread
mainThread
distantFuture
_timerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
timeoutTimer
setFireDate:
cancel
setTimeoutTimer:
_timeoutTimer
_runWithRequest:metadata:
originatorForMDMv1
_managedStateForMetadata:
_setState:forBundleIdentifier:
setHeader:
setMessage:
setDefaultButtonTitle:
setAlternateButtonTitle:
VPNUUIDString
managementOptions
showNotification:completion:
stopAirPlaySessionOfType:error:
removeAppMetadataForBundleIdentifier:error:
removeAppWithBundleIdentifier:completion:
isDone
installStatusForDownload:
initWithDelegate:clientType:
downloadAndInstallStateDescriptionWithDownload:installPolicy:autoInstallOperation:error:
setIsInstallInProgress:
setOsUpdateInstallStatus:
descriptor
setUpdate:
setDownload:
setInstallPolicy:
setInstallOperation:
downloadAndInstallState:
update
initWithDescriptor:
waiters
setGoal:
startScan
goalProduct
download
percentComplete
initWithProductKey:isDownloaded:precentComplete:state:
installAction
goalFromInstallAction:
goal
combineGoal:goal:
product
setGoalProduct:
startTheNextStep
updatedAction:
errors
removeAllObjects
installActionFromGoal:
osUpdateInstallStatus
initWithProduct:installAction:installStatus:errors:
isInstallInProgress
stateForDownload:
appendString:
productBuildVersion
appendFormat:
localizedDescription
softwareUpdate
purgeDownload:
setForced:
version
setRequestedPMV:
scanForUpdates:withResult:
startDownload:
installUpdate:
goalDescriptionFromGoal:
isScanInProgress
isDownloadInProgress
isDownloadPresent
startInstall
isScanResultPresent
startDownload
setIsScanInProgress:
sharedInstallTask
client:scanRequestDidStartForOptions:
client:scanRequestDidFinishForOptions:update:error:
client:scanDidCompleteWithNewUpdateAvailable:error:
client:automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
client:downloadWasInvalidatedForNewUpdateAvailable:
client:downloadDidStart:
client:downloadProgressDidChange:
client:downloadDidFail:withError:
client:downloadDidFinish:
client:downloadDidFinish:withInstallPolicy:
client:installDidStart:
client:installDidFail:withError:
client:installDidFinish:
client:installPolicyDidChange:
availableUpdate
currentStatus
performOSUpdateAction:
removeUpdate
setSoftwareUpdate:
installOperation
installPolicy
setIsScanResultPresent:
setIsDownloadInProgress:
setIsDownloadPresent:
setErrors:
setWaiters:
_isScanInProgress
_isScanResultPresent
_isDownloadInProgress
_isDownloadPresent
_isInstallInProgress
_softwareUpdate
_goal
_goalProduct
_update
_download
_installOperation
_installPolicy
_osUpdateInstallStatus
_errors
_waiters
operationWillFinish
setTransaction:
operationDidFinish
runOnMainThread
configurationEngine
setConfigurationEngine:
transaction
_configurationEngine
_transaction
_runAsUser
_uid
_clientBundleIdentifier
disable
appleID
isFinished
_resumeUpdateForBundleIdentifier:
_promptIfNeededAndUpdateAppForRequest:metadata:
_endOperationWithAppForBundleIdentifier:
_startUpdateAppForRequest:metadata:
initWithApp:
managedByMDMv1
syncToken
setOtherButtonTitle:
setDisplayWhenLocked:
_displayWhenLocked
_header
_defaultButtonTitle
_alternateButtonTitle
_otherButtonTitle
_notificationRef
_dictFromNotification:
setNotificationRef:
notifications
completionsByIdentifier
header
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
displayWhenLocked
notificationRef
_notificationRef:wasDismissedWithFlags:
_notifications
_completionsByIdentifier
message
defaultButtonText
setDefaultButtonText:
alternateButtonText
setAlternateButtonText:
otherButtonText
setOtherButtonText:
displayOnLockScreen
setDisplayOnLockScreen:
displayInAppWhitelistModes
setDisplayInAppWhitelistModes:
dismissAfterTimeInterval
setDismissAfterTimeInterval:
completionBlock
setCompletionBlock:
notification
setNotification:
_displayOnLockScreen
_displayInAppWhitelistModes
_title
_message
_defaultButtonText
_alternateButtonText
_otherButtonText
_dismissAfterTimeInterval
_completionBlock
_notification
mainQueueDidReceiveAppWhitelistChangedNotification
addObserverForName:object:queue:usingBlock:
cancelAllNotificationsWithCompletionBlock:
appWhitelistState
cancelNotificationEntriesMatchingPredicate:completionBlock:
predicateWithBlock:
removeObjectsInArray:
displayUserNotificationWithIdentifier:title:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
displayUserNotificationWithTitle:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
promptUserToLogIntoiTunesWithTitle:message:assertion:completionBlock:
removeObjectAtIndex:
validateAppBundleIDs:completion:
setIsAppStoreVendable:
setHasUpdateAvailable:
applicationType
vppStateFlagsWithProxy:
hasMIDBasedSINF
profileValidated
_proxyIsValidated:
diskUsage
externalVersionIdentifier
setExternalVersionIdentifier:
bundleVersion
shortVersionString
setShortVersion:
staticUsage
setStaticUsage:
dynamicUsage
setDynamicUsage:
onDemandResourcesUsage
setOnDemandResourcesUsage:
sharedUsage
setSharedUsage:
isPlaceholder
setIsPlaceholder:
isRestricted
setIsRestricted:
isBlocked
setIsBlocked:
setIsUserBasedVPP:
setIsDeviceBasedVPP:
setIsLicenseExpired:
setIsLicenseRevoked:
setIsUPP:
setIsValidated:
isAppStoreVendable
isBetaApp
setIsBetaApp:
isAdHocCodeSigned
setIsAdHocCodeSigned:
initWithPersistentID:iTunesStoreID:author:title:version:type:state:
initWithCommonName:data:isIdentity:
nonce
provisionallyEnrollWithNonce:completionBlock:
productKeyFromBuild:
updateType
humanReadableUpdateName
productSystemName
downloadSize
installationSize
initWithProductKey:humanReadableName:productName:version:build:downloadSize:installSize:isCritical:restartRequired:allowsInstallLater:
isEncrypted
payloadDescription
initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:
profileDescription
isLocked
removalPasscode
initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:
dataQuota
dataUsed
initWithUsername:dataQuota:dataUsed:hasDataToSync:isCurrentUser:
fileDescriptor
bytes
userInfo
objectForKey:
dmd_userLibraryURL
dmd_userDMDLibraryURL
PayloadIdentifier
Code
ErrorChain
Not Allowed
Not Supported
QueryResponses
ErrorResponses
fontURL
T@"NSURL",C,N,V_fontURL
fontDeclaration
T@"CEMFontDeclaration",&,N,V_fontDeclaration
T@"CEMFontAssetInstallMetadata",&,N,V_installMetadata
imageURL
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
supportsSecureCoding
TB,R
T@"NSURL",C,N,V_imageURL
%@-%@
assetIdentifier
T@"NSString",R,C,N
assetDescriptor
T@"NSDictionary",R,C,N
assetReference
imageDeclaration
T@"CEMImageDeclaration",&,N,V_imageDeclaration
resolver
T@"<DMDRemoteAssetResolver>",&,N,V_resolver
installMetadata
T@"CEMImageAssetInstallMetadata",&,N,V_installMetadata
Pending
Echo
Executed
appleId
primaryAccount
primaryAppleID
avOutputContext
applicationProcessID
AirPlay
Display
iPod's screen
iPad's screen
iPhone's screen
Apple TV's output
Mac's screen
device
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v16@?0^{__CFArray=}8
T@"DMDAirPlayManager",R,N
currentlyPickedDestinationName
T@"NSString",C,N,V_currentlyPickedDestinationName
currentlyPickedDestinationDeviceID
T@"NSString",C,N,V_currentlyPickedDestinationDeviceID
metadataByBundleID
state
flags
RedemptionCode
UnusedRedemptionCode
Attributes
VPNUUID
com.apple.dmd.%@.%p
Apps
@8@?0
<%@: %p; Apps: %@>
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
items
metadata
kind
software
bundle-identifier
title
sharedController
T@"DMDAppController",R,N
metadataPath
T@"NSString",R,N
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
manifest
T@"NSMutableDictionary",R,N,V_manifest
stateHandler
T@"DMFOSStateHandler",R,N,V_stateHandler
managedBundleIdentifiers
T@"NSArray",R,C,N
B24@?0@"NSString"8@"NSNumber"16
v24@?0@"LSBundleProxy"8^B16
v16@?0@"NSArray"8
v28@?0B8@"NSArray"12@"NSError"20
com.apple.configuration.managed
com.apple.feedback.managed
v16@?0@"FBSDisplayLayout"8
any user license
existing user license
device license
Undefined
v36@?0B8@"NSDictionary"12q20@"NSError"28
v24@?0@"DMDAppMetadata"8@"NSError"16
non-nil
mobile
v24@?0@"NSDictionary"8@"NSError"16
bundleIDsToAssertions
T@"NSMutableDictionary",&,N,V_bundleIDsToAssertions
layoutMonitor
T@"FBSDisplayLayoutMonitor",&,N,V_layoutMonitor
foregroundBundleIdentifiers
T@"NSArray",&,N,V_foregroundBundleIdentifiers
singleAppModeBundleIndentifier
T@"NSString",C,N,V_singleAppModeBundleIndentifier
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
v24@?0@"SSAuthenticateResponse"8@"NSError"16
com.apple.dmd.update-foreground-app
com.apple.dmd.%@.%p(%@).queue
observers
T@"NSPointerArray",&,N,V_observers
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
stateMachine
T@"CATStateMachine",&,N,V_stateMachine
T@"NSString",R,C,N,V_bundleIdentifier
currentState
TQ,R,N
progress
T@"NSProgress",R,N,V_progress
v16@?0@"LSApplicationProxy"8
proxyProgress
T@"NSProgress",&,N,V_proxyProgress
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
displayName
T@"NSString",C,N,V_displayName
isStoreApp
TB,N,V_isStoreApp
needsRedemptionCode
TB,N,V_needsRedemptionCode
lifeCycle
T@"DMDAppLifeCycle",R,N
v16@?0@"NSManagedObjectContext"8
assetResolver
T@"<DMDRemoteAssetResolver>",W,N,V_assetResolver
block
T@?,C,N,V_block
v8@?0
sharedManager
T@"DMDBluetoothManager",R,N
bluetoothManager
T@"BluetoothManager",R,N,V_bluetoothManager
enabled
TB,N,V_enabled
stillNeedsUpdate
TB,N,V_stillNeedsUpdate
com.apple.dmd.operation.clear-activation-lock-bypass-code
com.apple.dmd.operation.clear-device-passcode
request.unlockTokenData
request.secret
com.apple.dmd.operation.clear-restrictions-password
com.apple.activations.basic
DMDConfigurationDatabaseModel
momd
<%@: %p
Configurations
DMDConfigurationSourceStatusDidChange
%@.%p.configuration-engine
<DMDConfigurationEngine: %p
Database:
Engine operations:
Organizations:
identifier
dictionaryRepresentation
payload.payloadDictionary
self IN %@
v16@?0@"NSError"8
database
T@"DMDConfigurationDatabase",&,N,V_database
queue
T@"CATOperationQueue",&,N,V_queue
organizationControllerByIdentifier
T@"NSMutableDictionary",&,N,V_organizationControllerByIdentifier
databaseInitializationOperation
T@"DMDEngineDatabaseInitializationOperation",&,N,V_databaseInitializationOperation
initializationOperation
T@"CATOperation",&,N,V_initializationOperation
delegate
T@"<DMDConfigurationEngineDelegate>",W,N,V_delegate
deviceStateProvider
T@"NSObject<DMDDeviceStateProvider>",&,N,V_deviceStateProvider
%K = %@
T@"NSString",C,D,N
identityPersistentID
T@"NSData",C,D,N
anchorPersistentIDs
T@"NSArray",C,D,N
persistentConfigurationSources
payloadMetadatas
organization
persistentConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_persistentConfigurationSourceControllersByIdentifier
ephemeralConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_ephemeralConfigurationSourceControllersByIdentifier
T@"NSString",R,C,N,V_identifier
configurationSourceControllers
ephemeralConfigurationSources
T@"DMFOrganization",R,N
T@"<DMDConfigurationOrganizationControllerDelegate>",W,N,V_delegate
organizationIdentifier
machServiceName
statusReportingRequirements
T@"NSString",C,N
listenerEndpoint
T@"NSXPCListenerEndpoint",&,N
T@"DMFStatusReportingRequirements",&,N
T@"DMDConfigurationOrganization",&,D,N
T@"NSXPCListenerEndpoint",&,D,N
T@"DMFStatusReportingRequirements",&,D,N
v24@?0@"NSURL"8@"NSError"16
v24@?0@"<DMFConfigurationSourceClientInterface>"8@"NSError"16
context
T@"<DMDRemoteAssetResolutionContext>",&,N,V_context
source
T@"CATSerialOperationQueue",&,N,V_queue
T@"DMDConfigurationSourceRepresentation",&,N,V_source
T@"<DMDConfigurationSourceControllerDelegate>",R,W,N,V_delegate
configurationSource
T@"DMFConfigurationSource",R,N
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_organizationIdentifier
T@"NSString",C,N,V_machServiceName
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"DMFStatusReportingRequirements",&,N,V_statusReportingRequirements
v32@?0@"NSDictionary"8@"NSError"16@?<v@?@"NSError">24
controller
T@"DMDConfigurationSourceController",W,N,V_controller
anonymousConnection
T@"NSXPCConnection",R,N,V_anonymousConnection
namedConnection
T@"NSXPCConnection",R,N,V_namedConnection
IMEI
MEID
ICCID
modemFirmwareVersion
currentNetworkName
carrierName
carrierBundleVersion
currentMobileCountryCode
currentMobileNetworkCode
isRoaming
TB,R,N
hasGSM
hasCDMA
dataRoamingEnabled
TB,N
voiceRoamingEnabled
com.apple.dmd.operation.delete-user
request.message
apple-internal-install
shared
T@"DMDDevice",R,N
deviceType
isAppleInternal
com.apple.system.config.network_change
v12@?0i8
TB,N,V_hasKeychainUnlockedSinceBoot
TB,N,V_isKeychainUnlocked
TB,N,V_isNetworkTethered
com.apple.dmd.operation.disable-lost-mode
com.apple.dmd.operation.echo
request.echo
request.resultStatus
com.apple.dmd.operation.enable-lost-mode
hasKeychainUnlockedSinceBoot
isReady
storeDescription
error
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
DMDEngineDatabaseInitializationOperationContext
B24@?0@8@"NSDictionary"16
T@"<DMDEngineDatabaseProcessingOperationDelegate>",W,N,V_delegate
%@:%@
T@"<DMDEngineRegisterConfigurationSourceOperationDelegate>",W,N,V_delegate
T@"DMFRegisterConfigurationSourceRequest",&,N,V_request
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
T@"DMFSetDeclarationsRequest",&,N,V_request
request
T@"DMFUpdateEnqueuedCommandsRequest",&,N,V_request
self != %@
T@"DMFUpdateDeclarationsRequest",&,N,V_request
com.apple.dmd.operation.erase-device
dmd erase command
com.apple.dmd.operation.fetch-activation-lock-bypass-code
com.apple.dmd.operation.fetch-apps
v24@?0@"NSString"8@"NSError"16
com.apple.dmd.operation.fetch-available-os-updates
com.apple.dmd.operation.fetch-certificates
com.apple.dmd.operation.set-declarations
request.configurationSource
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
com.apple.dmd.operation.fetch-device-properties
request.propertyKeys
@"NSString"8@?0
@"NSNumber"8@?0
@"NSArray"8@?0
v16@?0q8
v20@?0i8@"NSString"12
/private/var/mobile/Library/Application Support/com.apple.dmd-setup-option
@"NSDate"8@?0
platformSpecificValueBlocksByName
T@"NSDictionary",R,D,N
com.apple.dmd.operation.fetch-unlock-token
com.apple.dmd.operation.fetch-debug-state
Server:
Apps:
com.apple.dmd.operation.fetch-location
v24@?0@"CLLocation"8@"NSError"16
com.apple.dmd.operation.fetch-managed-books
DMDFetchManagedBooksOperation: run
com.apple.dmd.operation.fetch-os-update-status
com.apple.dmd.operation.fetch-profiles
com.apple.dmd.operation.fetch-provisioning-profiles
com.apple.dmd.operation.fetch-restrictions
com.apple.dmd.operation.fetch-security-information
com.apple.dmd.operation.fetch-users
request.licenseType
com.apple.dmd.operation.install-app
App Installation
Install
v16@?0@"DMFAppManagementInformation"8
com.apple.dmd.operation.install-managed-book
DMDInstallManagedBookOperation: run
v32@?0@"NSError"8@"MCBook"16@"NSString"24
com.apple.dmd.operation.install-profile
request.profileData
request.managingProfileIdentifier
com.apple.dmd.operation.install-provisioning-profile
com.apple.dmd.operation.invite-user-to-vpp
request.URL
request.originator
vpp-licensing-invitation-url-pattern
DMDInviteUserToVPPOperation: run
%@ would like to assign apps and books to you.
Allow App and Book Assignment?
Continue
DMDJobQueue %d
jobQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_jobQueue
jobGroup
T@"NSObject<OS_dispatch_group>",&,N,V_jobGroup
queueIDString
T@"NSString",&,N,V_queueIDString
nextJobSequenceNumber
TI,V_nextJobSequenceNumber
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
com.apple.dmd.operation.lock-device
v16@?0Q8
deviceLastCloudBackupDate
T@"NSDate",R,C,N
com.apple.dmd.operation.log-out-user
originator
organizationName
serverName
v16@?0@"NSURL"8
The location of this device was sent to %@ at %@ on %@.
DMFNotifications
T@"DMDLostDeviceLocationManager",R,N
locationManager
T@"CLLocationManager",&,N,V_locationManager
currentLocation
T@"CLLocation",&,N,V_currentLocation
currentError
T@"NSError",&,N,V_currentError
lastLocationRequestedDateMessage
epub
ibooks
Queued
PromptingForLogin
Updating
Installing
Managed
ManagedButUninstalled
Uninstalled
Unknown
com.apple.mdmd.downloads.media.nonstore
DMDManagedMediaManager: init
DMDManagedMediaManager Member Queue
DMDManagedMediaManager Suspension Queue
v32@?0@"SSDownload"8Q16^B24
Books
Path
-[DMDManagedMediaManager installNonStoreBook:fileExtension:URL:assertion:completionBlock:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DeviceManagement_Sim/DeviceManagement-10.36/dmd/iphoneOS/iOS/Managers/DMDManagedMediaManager+iOS.m
book.persistentID
com.apple.managedconfiguration.mdmd
MediaBypassVPPCheck
v12@?0B8
v24@?0@"NSArray"8@"NSError"16
Book Installation
Sign in to iTunes to allow %@ to manage and install books.
v24@?0@"NSError"8@"MCBook"16
T@"DMDManagedMediaManager",R,N
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
memberQueuePersistentIDToNonStoreBook
T@"NSMutableDictionary",&,N,V_memberQueuePersistentIDToNonStoreBook
memberQueueiTunesStoreIDToStoreBook
T@"NSMutableDictionary",&,N,V_memberQueueiTunesStoreIDToStoreBook
suspensionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_suspensionQueue
suspensionQueueIsMemberQueueSuspended
TB,N,V_suspensionQueueIsMemberQueueSuspended
storeBooks
nonStoreBooks
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
DeviceClass
ProductType
ProductVersion
BuildVersion
marketing-name
SerialNumber
ModelNumber
UniqueDeviceID
UserAssignedDeviceName
DiskUsage
EthernetMacAddress
BluetoothAddress
WifiAddress
WifiAddressData
telephony
cellular-data
personal-hotspot
PhoneNumber
MobileSubscriberCountryCode
MobileSubscriberNetworkCode
deviceClass
productType
productVersion
buildVersion
marketingName
serialNumber
modelNumber
uniqueDeviceID
userAssignedDeviceName
dataCapacity
T@"NSNumber",R,C,N
dataAvailable
ethernetMacAddress
bluetoothAddress
wifiAddress
wifiAddressData
T@"NSData",R,C,N
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
isNetworkTethered
com.apple.dmd.operation.open-app
request.bundleIdentifier
com.apple.dmd.operation.open-url
request.url
systemgroup.com.apple.configurationprofiles
MDMAppManagement.plist
Purchases.plist
/Media/Books/Purchases
ManagedBooks.plist
Library
Managed.plist
LostModeRequest.plist
ConfigurationProfiles
systemgroup.com.apple.media.books.managed
managedAppsManifest
purchasedBooksManifest
purchasedBooksDirectory
managedStoreBooksManifestPath
managedNonStoreBooksDirectory
managedNonStoreBooksManifestPath
systemLostModeRequestPath
Identifier
objectID
payloadDictionary
isKeychainUnlocked
DMDPayloadActionOperationObservationContext
subOperations
T@"NSMutableArray",&,N,V_subOperations
T@"NSMutableDictionary",&,N,V_stateDictionary
TB,N,V_requiresNetworkTether
TB,N,V_requiresUnlockedKeychain
T@"DMDConfigurationDatabase",R,N,V_database
payloadMetadataObjectID
T@"NSManagedObjectID",R,C,N,V_payloadMetadataObjectID
payloadCategory
activation
configuration
asset
command
None
Process
Remove
PendingDelete
Delete
Enqueued
Installed
Failed
CommandExecuted
Removed
_DesiredStatus
_ActualStatus
pendingStatusUpdate
category
%@ contains identifier
desiredStatus
com.apple.command
com.apple.activation
com.apple.configuration
com.apple.asset
type
requiresNetworkTether
requiresUnlockedKeychain
serverHash
lastStatusReportTimestamp
stateChangeTimestamp
actualStatus
stateDictionary
TB,D,N
status
payload
T@"DMDPayload",&,D,N
T@"NSDate",&,D,N
T@"NSDictionary",C,D,N
outgoingPayloadMetadataReferences
T@"NSSet",C,D,N
incomingPayloadMetadataReferences
T@,&,D,N
com.apple.dmd.operation.play-lost-mode-sound
DMDPlayLostModeSoundOperation: run
DMDPowerAssertion Queue
unknown
Trying to park a power assertion that's already parked.
Trying to unpark a power assertion that's not parked.
DMDSwitchBlockingTask
isParked
TB,N,V_isParked
operation
T@"NSString",&,N,V_operation
blockingTask
T@"UMUserSwitchBlockingTask",&,N,V_blockingTask
v24@?0Q8@"NSError"16
request.configurationSourceName
request.organizationIdentifier
com.apple.dmd.operation.register-user-agent
request.listenerEndpoint
com.apple.dmd.operation.remove-app
com.apple.dmd.operation.remove-managed-book
DMDRemoveManagedBookOperation: run
com.apple.dmd.operation.remove-os-update
com.apple.dmd.operation.remove-profile
request.profileIdentifier
com.apple.dmd.operation.remove-protected-profile
com.apple.dmd.operation.remove-provisioning-profile
com.apple.dmd.operation.request-airplay-mirroring
com.apple.dmd.operation.restart-device
dmd restart device
com.apple.dmd.operation.schedule-os-update
com.apple.dmd-access
%@.%p.main
Device state:
DMD operations:
Configuration engine:
kCATErrorRequestNameKey
Process is missing entitlement "%@"
DMFServerErrors
application-identifier
sharedServer
T@"DMDServer",R,N
hasAlreadyShutdown
TB,N,V_hasAlreadyShutdown
taskServer
T@"CATTaskServer",R,N,V_taskServer
operationQueue
T@"CATOperationQueue",R,N,V_operationQueue
deviceStateObserver
T@"DMDDeviceStateObserver",R,N,V_deviceStateObserver
T@"DMDConfigurationEngine",R,N,V_configurationEngine
xpcListener
T@"NSXPCListener",R,N,V_xpcListener
isMigrationFinished
TB,N,V_isMigrationFinished
com.apple.dmd.operation.set-app-analytics-enabled
com.apple.dmd.operation.set-app-configuration
com.apple.dmd.operation.set-app-options
com.apple.dmd.operation.set-app-vpn-uuid
com.apple.dmd.operation.set-bluetooth-enabled
com.apple.dmd.operation.set-data-roaming-enabled
com.apple.dmd.operation.set-device-name
request.name
com.apple.dmd.operation.set-diagnostic-submission-enabled
com.apple.dmd.operation.set-maximum-resident-users
com.apple.dmd.operation.set-passcode-lock-grace-period
com.apple.dmd.operation.set-personal-hotspot-enabled
com.apple.dmd.operation.set-voice-roaming-enabled
com.apple.dmd.operation.set-wallpaper
request.imageURL
com.apple.dmd.operation.shut-down-device
dmd shut down device
v24@?0@"NSError"8@"SSAccount"16
authenticatedAccount
T@"SSAccount",&,N,V_authenticatedAccount
T@"SSAuthenticateRequest",R,C,D,N
-[DMDSSRequestDelegate initWithRequest:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DeviceManagement_Sim/DeviceManagement-10.36/dmd/iphoneOS/iOS/Delegates/DMDSSRequestDelegate+iOS.m
-[DMDSSRequestDelegate startWithCompletionBlock:]_block_invoke
!self.completionBlock
-[DMDSSRequestDelegate cancel]_block_invoke
self.completionBlock
T@"SSRequest",C,N,V_request
timeoutTimer
T@"NSTimer",C,N,V_timeoutTimer
com.apple.dmd.operation.start-managing-app
App Management Change
Manage
Cancel
com.apple.dmd.operation.stop-airplay-mirroring
com.apple.dmd.operation.stop-managing-app
com.apple.dmd.operation.stop-managing-books
DMDStopManagingBooksOperation: run
iOSUpdate
com.apple.mdm
none
scan
download
install
DMDSUManagerInstallTask Queue
v40@?0@"SUDownload"8@"SUInstallPolicy"16@"SUAutoInstallOperation"24@"NSError"32
downloadAndInstallState:
download object is present, build %@
download object is NOT present
installPolicy object is present
installPolicy object is NOT present
operation object is present
operation object is NOT present
error object is present, %@
error object is NOT present
v20@?0B8@"NSError"12
v24@?0@"SUDescriptor"8@"NSError"16
softwareUpdate
T@"SUManagerClient",&,N,V_softwareUpdate
goal
TQ,N,V_goal
goalProduct
T@"DMFProductIdentifier",C,N,V_goalProduct
update
T@"SUDescriptor",&,N,V_update
T@"SUDownload",&,N,V_download
installOperation
T@"SUAutoInstallOperation",&,N,V_installOperation
installPolicy
T@"SUInstallPolicy",&,N,V_installPolicy
isScanInProgress
TB,N,V_isScanInProgress
isScanResultPresent
TB,N,V_isScanResultPresent
isDownloadInProgress
TB,N,V_isDownloadInProgress
isDownloadPresent
TB,N,V_isDownloadPresent
isInstallInProgress
TB,N,V_isInstallInProgress
osUpdateInstallStatus
TQ,N,V_osUpdateInstallStatus
errors
T@"NSMutableArray",&,N,V_errors
waiters
T@"NSMutableArray",&,N,V_waiters
currentStatus
T@"DMFOSUpdateStatus",R,C,N
runOnMainThread
T@"DMDTaskOperationContext",&,N
configurationEngine
T@"DMDConfigurationEngine",&,N
whitelistedClassesForRequest
T@"NSSet",R,N
requiredEntitlements
T@"NSArray",R,N
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"DMDTaskOperationContext",&,N,V_context
T@"DMDConfigurationEngine",&,N,V_configurationEngine
clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
TI,N,V_uid
runAsUser
TB,N,V_runAsUser
com.apple.dmd.operation.trigger-diagnostics
com.apple.dmd.operation.unregister-user-agent
request.appleID
com.apple.dmd.operation.update-app
App Update
Update
request.syncToken
com.apple.dmd.operation.enqueue-commands
T@"NSUUID",R,C,N,V_identifier
header
T@"NSString",C,N,V_header
T@"NSString",C,N,V_message
defaultButtonTitle
T@"NSString",C,N,V_defaultButtonTitle
alternateButtonTitle
T@"NSString",C,N,V_alternateButtonTitle
otherButtonTitle
T@"NSString",C,N,V_otherButtonTitle
displayWhenLocked
TB,N,V_displayWhenLocked
notificationRef
T^{__CFUserNotification=},N,V_notificationRef
T@"DMDUserNotificationController",R,N
T@"CATOperationQueue",R,N,V_queue
notifications
T@"NSMutableArray",R,N,V_notifications
completionsByIdentifier
T@"NSMutableDictionary",R,N,V_completionsByIdentifier
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_title
message
T@"NSString",&,N,V_message
defaultButtonText
T@"NSString",&,N,V_defaultButtonText
alternateButtonText
T@"NSString",&,N,V_alternateButtonText
otherButtonText
T@"NSString",&,N,V_otherButtonText
displayOnLockScreen
TB,N,V_displayOnLockScreen
displayInAppWhitelistModes
TB,N,V_displayInAppWhitelistModes
dismissAfterTimeInterval
Td,N,V_dismissAfterTimeInterval
completionBlock
T@?,C,N,V_completionBlock
notification
T@,&,N,V_notification
v16@?0@"NSNotification"8
B16@?0@"DMDUserNotificationQueueEntry"8
B24@?0@"DMDUserNotificationQueueEntry"8@"NSDictionary"16
Sign In
T@"DMDUserNotificationManager",R,N
DMDUserNotificationManager Queue
Primary button selected
Secondary button selected
Tertiary button selected
Dismissed programatically
com.apple.dmd.operation.validate-applications
com.apple.dmd.operation.provisionally-enroll-dep
request.nonce
v28@?0B8@"NSDictionary"12@"NSError"20
%@%@
dmd_sha1Hash
Images
Font
CEMFontAssetInstallMetadata
CEMFontInstallOperation
CEMFontRemoveOperation
CEMImageAssetInstallMetadata
CEMAssetProvider
NSObject
NSSecureCoding
NSCoding
CEMImageInstallOperation
DMDRemoteAssetResolutionContext
CEMImageRemoveOperation
DMDAdditions
DMDOperationProvidingAsset
DMDAccountUtilities
DMDAirPlayManager
DMDAppController
Fetch
Install
DMDiphoneOSAppController
Redeem
Remove
Update
DMDAppLifeCycle
DMDiphoneOSAppLifeCycle
LSApplicationWorkspaceObserverProtocol
DMDAppMetadata
DMDAppOperation
DMDAssetActionOperation
DMDAssetInstallOperation
DMDAssetRemoveOperation
DMDBlockOperation
DMDBluetoothManager
DMDClearActivationLockBypassCodeOperation
DMDClearDevicePasscodeOperation
DMDClearRestrictionsPasswordOperation
DMDCommandActionOperation
DMDCommandExecuteOperation
DMDCommandRemoveOperation
DMDConfigurationActionOperation
DMDRequestProvidingCommand
DMDRequestProvidingConfiguration
DMDConfigurationCapabilities
DMDConfigurationDatabase
DMDConfigurationEngine
DMDConfigurationOrganizationControllerDelegate
DMDConfigurationSourceControllerDelegate
DMDEngineDatabaseProcessingOperationDelegate
DMDEngineRegisterConfigurationSourceOperationDelegate
DMDConfigurationInstallOperation
DMDConfigurationOrganization
DMDConfigurationOrganizationController
DMDRemoteAssetResolver
DMDConfigurationRemoveOperation
DMDConfigurationReplaceOperation
DMDConfigurationSource
DMDConfigurationSourceAssetResolveOperation
DMDConfigurationSourceController
DMDConfigurationSourceRepresentation
DMDConfigurationSourceStatusUpdateOperation
DMDConfigurationSourceTaskOperation
DMDCoreDataModel
DMDCoreTelephonyUtilities
DMDDeclarationActionOperation
DMDDeleteUserOperation
DMDDevice
DMDiphoneOSDevice
DMDDeviceStateObserver
DMDDeviceStateProvider
DMDDisableLostModeOperation
DMDEchoOperation
DMDEnableLostModeOperation
DMDEngineDatabaseInitializationOperation
DMDEngineDatabaseOperation
DMDEngineDatabaseProcessingOperation
DMDEngineRegisterConfigurationSourceOperation
DMDEngineSetDeclarationsOperation
DMDEngineUpdateCommandsOperation
DMDEngineUpdateDeclarationsOperation
DMDEraseDeviceOperation
DMDFetchActivationLockBypassCodeOperation
DMDFetchAppsOperation
DMDFetchAvailableOSUpdatesOperation
DMDFetchCertificatesOperation
iphoneOS
DMDFetchConfigurationSourceSyncTokenOperation
DMDFetchDeclarationsOperation
DMDFetchDevicePropertiesOperation
DMDFetchDeviceUnlockTokenOperation
DMDFetchDMDStateOperation
DMDFetchLocationOperation
DMDFetchManagedBooksOperation
DMDFetchOSUpdateStatusOperation
DMDFetchProfilesOperation
DMDFetchProvisioningProfilesOperation
DMDFetchRestrictionsOperation
DMDFetchSecurityInformationOperation
DMDFetchUsersOperation
DMDInstallAppOperation
DMDInstallManagedBookOperation
DMDInstallProfileOperation
DMDInstallProvisioningProfileOperation
DMDInviteUserToVPPOperation
DMDJobQueue
DMDLockDeviceOperation
DMDLockdownUtilities
DMDLogOutUserOperation
DMDLostDeviceLocationManager
CLLocationManagerDelegate
DMDManagedAssetManager
DMDManagedMediaManager
DMDMDMUtilities
DMDMobileGestalt
DMDNetworkTetherUtilities
DMDOpenAppOperation
DMDOpenURLOperation
DMDPaths
DMDPayload
DMDPayloadActionOperation
DMDPayloadMetadata
DMDPlayLostModeSoundOperation
DMDUserSwitchStakeholder
UMUserSwitchStakeholder
DMDPowerAssertion
DMDProcessDeclarationsOperation
DMDProcessStatusOperation
DMDRegisterConfigurationSourceOperation
DMDRegisterUserAgentOperation
DMDRemoveAppOperation
DMDRemoveManagedBookOperation
DMDRemoveOSUpdateOperation
DMDRemoveProfileOperation
DMDRemoveProtectedProfileOperation
DMDRemoveProvisioningProfileOperation
DMDRequestAirPlayMirroringOperation
DMDRestartDeviceOperation
DMDScheduleOSUpdateOperation
DMDServer
NSXPCListenerDelegate
DMDConfigurationEngineDelegate
CATTaskServerDelegate
DMDiPhoneOSServer
DMDSetAppAnalyticsEnabledOperation
DMDSetAppConfigurationOperation
DMDSetAppOptionsOperation
DMDSetAppVPNUUIDOperation
DMDSetBluetoothEnabledOperation
DMDSetDataRoamingEnabledOperation
DMDSetDeclarationsOperation
DMDSetDeviceNameOperation
DMDSetDiagnosticSubmissionEnabledOperation
DMDSetMaximumResidentUsersOperation
DMDSetPasscodeLockGracePeriodOperation
DMDSetPersonalHotspotEnabledOperation
DMDSetVoiceRoamingEnabledOperation
DMDSetWallpaperOperation
DMDShutDownDeviceOperation
DMDSSAuthenticationRequestDelegate
SSAuthenticateRequestDelegate
SSRequestDelegate
DMDSSRequestDelegate
DMDStartManagingAppOperation
DMDStopAirPlayMirroringOperation
DMDStopManagingAppOperation
DMDStopManagingBooksOperation
DMDSUManagerInstallTask
SUManagerClientDelegate
DMDTaskOperation
DMDTaskOperationProtocol
DMDTaskOperationContext
DMDTimerContext
DMDTriggerDiagnosticsOperation
DMDUnregisterUserAgentOperation
DMDUpdateAppOperation
DMDUpdateDeclarationsOperation
DMDUpdateEnqueuedCommandsOperation
DMDUserNotification
DMDUserNotificationController
DMDUserNotificationQueueEntry
DMDUserNotificationManager
DMDValidateApplicationsOperation
ASDJob
BundleIdentifier
LSApplicationProxy
MCBook
SecCertificateRef
DMFEnrollProvisionallyInDeviceEnrollmentProgramOperation
SUDescriptor
MCProfile
MISProfileRef
UMUser
DMDMappedMemory
DMDUtilities
@"CEMFontDeclaration"
@"CEMFontAssetInstallMetadata"
B16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"16@0:8
@"NSData"16@0:8
@"NSNumber"16@0:8
v16@0:8
@"NSURL"
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@"NSDictionary"16@0:8
@32@0:8@16@24
@"CEMImageDeclaration"
@"<DMDRemoteAssetResolver>"
@"CEMImageAssetInstallMetadata"
@32@0:8@16^@24
@"CATOperation"32@0:8@"<DMDRemoteAssetResolver>"16^@24
@"CATOperation"32@0:8@"NSDictionary"16^@24
B68@0:8@16@24@32d40Q48B56^@60
B32@0:8Q16^@24
^v24@0:8Q16
B48@0:8@16Q24@32^@40
@40@0:8@16d24^@32
@40@0:8@16d24Q32
v40@0:8@16Q24@?32
v48@0:8@16@24Q32@40
Q24@0:8@16
B40@0:8Q16@24^@32
@"NSObject<OS_dispatch_queue>"
@"DMFOSStateHandler"
v40@0:8@16q24@?32
v32@0:8@16@24
v52@0:8@16@24q32B40@?44
B24@0:8^@16
v32@0:8@16@?24
B40@0:8@16@24^@32
v40@0:8@16@24@?32
@"NSArray"
@"NSString"
@"NSMutableDictionary"
@"FBSDisplayLayoutMonitor"
@32@0:8@16Q24
@"NSPointerArray"
@"CATStateMachine"
v20@0:8B16
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"NSProgress"
@24@0:8@?16
@?16@0:8
v24@0:8@?16
@"BluetoothManager"
B32@0:8@16^@24
@24@0:8^@16
@"CATTaskRequest"24@0:8^@16
@"NSDictionary"24@0:8@"CATTaskResultObject"16
@"CATTaskRequest"32@0:8@"NSDictionary"16^@24
@32@0:8#16@24
@24@0:8Q16
v32@0:8@"DMDConfigurationSourceController"16@?<v@?@"NSDictionary"@"NSError"@?<v@?@"NSError">>24
@"NSArray"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
@"<DMDRemoteAssetResolver>"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
v32@0:8@"DMDEngineRegisterConfigurationSourceOperation"16@"<DMDConfigurationSource>"24
@"<DMDConfigurationEngineDelegate>"
@"NSObject<DMDDeviceStateProvider>"
@"DMDConfigurationDatabase"
@"CATOperationQueue"
@"DMDEngineDatabaseInitializationOperation"
@"CATOperation"
v24@0:8@"<DMDRemoteAssetResolutionContext>"16
@"<DMDConfigurationOrganizationControllerDelegate>"
v24@0:8@"NSString"16
@"NSXPCListenerEndpoint"16@0:8
v24@0:8@"NSXPCListenerEndpoint"16
@"DMFStatusReportingRequirements"16@0:8
v24@0:8@"DMFStatusReportingRequirements"16
@"<DMDRemoteAssetResolutionContext>"
@"<DMDConfigurationSourceControllerDelegate>"
@"CATSerialOperationQueue"
@"DMDConfigurationSourceRepresentation"
@"NSXPCListenerEndpoint"
@"DMFStatusReportingRequirements"
@"DMDConfigurationSourceController"
@"NSXPCConnection"
v48@0:8@16@24@32^v40
@56@0:8@16@24@32@40^@48
@"<DMDEngineDatabaseProcessingOperationDelegate>"
@"<DMDEngineRegisterConfigurationSourceOperationDelegate>"
@"DMFRegisterConfigurationSourceRequest"
@"DMFSetDeclarationsRequest"
@"DMFUpdateEnqueuedCommandsRequest"
@"DMFUpdateDeclarationsRequest"
@20@0:8i16
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_group>"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLLocation"
@"NSError"
v48@0:8@16B24B28@32@?40
v56@0:8@16@24@32@40@?48
v44@0:8@16@24i32@?36
v48@0:8@16@24@32@?40
B28@0:8B16@20
@"NSManagedObjectID"
@48@0:8@16@24@32^@40
@"UMUserSwitchBlockingTask"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B40@0:8@16@24@32
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
#24@0:8@16
@"NSXPCListener"
@"CATTaskServer"
@"DMDDeviceStateObserver"
@52@0:8@16I24@28@36^@44
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSAuthenticateRequest"16@"SSAuthenticateResponse"24
@"SSAccount"
@"SSRequest"
@"NSTimer"
v32@0:8Q16@24
Q32@0:8Q16Q24
Q24@0:8Q16
v48@0:8@16@24@32@40
v32@0:8@"SUManagerClient"16@"SUScanOptions"24
v48@0:8@"SUManagerClient"16@"SUScanOptions"24@"SUDescriptor"32@"NSError"40
v40@0:8@"SUManagerClient"16@"SUDescriptor"24@"NSError"32
v32@0:8@"SUManagerClient"16@"SUDescriptor"24
v32@0:8@"SUManagerClient"16@"SUDownload"24
v40@0:8@"SUManagerClient"16@"SUDownload"24@"NSError"32
v40@0:8@"SUManagerClient"16@"SUDownload"24@"SUInstallPolicy"32
v32@0:8@"SUManagerClient"16@"SUInstallPolicy"24
@48@0:8@16@24@32@40
@"SUManagerClient"
@"DMFProductIdentifier"
@"SUDescriptor"
@"SUDownload"
@"SUAutoInstallOperation"
@"SUInstallPolicy"
@"NSMutableArray"
@"DMDTaskOperationContext"16@0:8
v24@0:8@"DMDTaskOperationContext"16
@"DMDConfigurationEngine"16@0:8
v24@0:8@"DMDConfigurationEngine"16
@"NSSet"16@0:8
@"NSArray"16@0:8
v24@0:8Q16
@"DMDTaskOperationContext"
@"DMDConfigurationEngine"
@"NSObject<OS_os_transaction>"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"NSUUID"
^{__CFUserNotification=}
v40@0:8@16d24@?32
v32@0:8^{__CFUserNotification=}16Q24
d16@0:8
v24@0:8d16
v32@0:8@?16@?24
v88@0:8@16@24@32@40@48B56B60d64@72@?80
v96@0:8@16@24@32@40@48@56B64B68d72@80@?88
@28@0:8@16B24
@28@0:8^{__SecCertificate=}16B24
@44@0:8@16B24@28@36
Could not serialize profile: %{public}@
Request validation failed for installing profile: %{public}@
Request validation failed for removing profile: %{public}@
font asset data is nil
image asset data is nil
Could not read app management plist at path: %{public}@, error: %{public}@
Get bundle identifier for manifest URL: %{public}@
Get bundle identifier for request: %{public}@
Get bundle identifier for store item identifier: %{public}@
Get metadata for request: %{public}@
Get metadata for non-enterprise app request: %{public}@
Could not write app management plist, error: %{public}@
Could not write app management plist, unknown error
Set VPN UUID for bundle identifier: %{public}@
Set VPN UUID, configuration, and management information for bundle identifier: %{public}@
Could not set VPN UUID for app: %{public}@, error: %{public}@
Could not set configuration for app: %{public}@, error: %{public}@
Could not set management options for bundle identifier: %{public}@, error: %{public}@
Set state: %{public}@, for bundle identifier: %{public}@
Update app states
Could not set state to %{public}@ for bundle identifier: %{public}@, error: %{public}@
Advance transient app states
Could not remove management information for bundle identifier: %{public}@, error: %{public}@
Could not set management information for bundle identifier: %{public}@, error: %{public}@
Clean up stale app states
Set metadata for bundle identifier: %{public}@
Could not write management info to disk for bundle identifier: %{public}@
Get metadata for manifest URL: %{public}@
Resume app installation for bundle identifier: %{public}@
Install device licensed app for request: %{public}@
Install user licensed app for request: %{public}@
Install free app for request: %{public}@
Add termination assertion for bundle identifier: %{public}@
Remove termination assertion for bundle identifier: %{public}@
Send app store request for bundle identifier: %{public}@, store item identifier: %{public}@, type: %{public}@, download: %{public}@
Set configuration: %{public}@, for bundle identifier: %{public}@
Feedback is not a dictionary for bundle identifier: %{public}@
Set feedback: %{public}@, for bundle identifier: %{public}@
Get metadata for bundle identifier: %{public}@, store item identifier: %{public}@
Update foreground bundle identifiers
Updating foreground app for request: %{public}@, so will take termination assertion
We will need to restart the app after updating bundle identifier: %{public}@
Start updating enterprise app with manifest URL: %{public}@
Start updating non-enterprise app for request: %{public}@, new install request: %{public}@
Update ended for bundle identifier: %{public}@
Restart app with bundle identifier: %{public}@
Could not restart app: %{public}@, error: %{public}@
App requests must have only one of bundle identifier, store item identifier, or manifest URL
%{public}@: Failed to initialize configuration payload for asset: %{public}@
%{public}@: Asset class (%{public}@) does not implement %{public}@
%{public}@: Failed to initialize install operation for asset payload: %{public}@
%{public}@: Asset will install
%{public}@: Asset install operation failed: %{public}@
%{public}@: Installed asset successfully
%{public}@: Uninstalled asset did remove successfully
%{public}@: Failed to initialize remove operation for installed asset payload: %{public}@
%{public}@: Installed asset will be removed
%{public}@: Failed to remove asset: %{public}@
%{public}@: Removed asset successfully
%{public}@: Failed to initialize configuration payload for command: %{public}@
%{public}@: Failed to create request for command execution: %{public}@
%{public}@: Failed to create operation from request for command execution: %{public}@
%{public}@: Execute command will start
%{public}@: Execute command failed: %{public}@
%{public}@: Executed command successfully
Failed to initialize command payload for command removal %{public}@: %{public}@
Command did remove successfully %{public}@
Engine did resume
Engine will suspend
Engine enqueuing operation to set declarations from %{public}@
Engine enqueuing operation to update declarations from %{public}@
Engine enqueuing operation to fetch declarations for %{public}@
Engine enqueuing operation to process status for %{public}@
Engine enqueuing operation to process pending declarations in database
Database processing operation failed with error: %{public}@
failed to fetch declarations pending status update %{public}@
failed to update status %{public}@
failed to fetch declarations to update their lastStatusUpdateTimestamp %{public}@
failed to save last updated timestamp in database %{public}@
status update operation failed with error: %{public}@
Registering new configuration source %{public}@
Re-registering configuration source %{public}@
%{public}@: Failed to initialize configuration payload for configuration install: %{public}@
%{public}@: %{public}@ does not conform to %{public}@
%{public}@: Failed to create request for configuration install: %{public}@
%{public}@: Failed to create operation from request for configuration install for %{public}@
%{public}@: Configuration will install
%{public}@: Configuration failed install: %{public}@
%{public}@: Configuration did install successfully 
%{public}@ does not respond to %{public}@
%{public}@: Failed to initialize configuration payload for configuration remove: %{public}@
%{public}@: Uninstalled configuration did remove successfully
%{public}@: Failed to create request for installed configuration remove: %{public}@
%{public}@: Installed configuration did remove successfully
%{public}@: Failed to create operation from request for installed configuration removal: %{public}@
%{public}@: Installed configuration will remove
%{public}@: Configuration failed remove: %{public}@
%{public}@: Configuration did remove successfully
%{public}@: Failed to initialize configuration payload for configuration replace: %{public}@
%{public}@: Failed to create request for configuration replace: %{public}@
%{public}@: Failed to create configuration replace operation for request: %{public}@
%{public}@: Configuration will replace
%{public}@: Configuration failed replace: %{public}@
%{public}@: Configuration did replace successfully
%{public}@ failed to initate connection to resolve asset %{public}@: %{public}@
%{public}@ failed to resolve asset %{public}@: %{public}@
%{public}@ successfully resolved asset %{public}@
Reporting status to %{public}@
delegate does not conform to %{public}@
%{public}@ failed to fetch status update %{public}@
%{public}@ skipping status update because there are no updates to report
%{public}@ failed to send status updates remote proxy coun't be created: %{public}@
%{public}@ failed to send status updates: %{public}@
%{public}@ successfully sent status updates
Device is not in lost mode. Reporting success regardless.
Disabling lost mode...
Device was located while in lost mode. Alerting user with message 
%{public}@
Could not disable lost mode: %{public}@
failed to load persistent store %{public}@: %{public}@
successfully loaded persistent store: %{public}@
failed exclude persistent store from backup %{public}@: %{public}@
%{public}@ failed to fetch configuration organizations: %{public}@
%{public}@ preprocessing failed: %{public}@
Failed to preproccess database while fetching all payloads: %{public}@
%{public}@: Failed to deserialize configuration engine model: %{public}@
Failed to fetch asset with identifier (%{public}@): %{public}@
Processing: Failed to fetch commands install %{public}@
Command has an invalid desiredStatus: '%{public}@'
--- Commands pending execution ---
--- Enqueued execute operations ---
Processing: Failed to fetch declarations pending install/removal %{public}@
Install %{public}@: Declaration install operation already enqueued, skipping
Remove %{public}@: Asset install operation already enqueued, skipping
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an install operation
Remove %{public}@: Declaration remove operation already enqueued, skipping
Remove %{public}@: Asset remove operation already enqueued, skipping
Remove %{public}@: Cancelling enqueued %{public}@ so we can enqueue a remove operation
BUG: Declaration (%{public}@) neither pending installation or removal. Why is there a %{public}@?
BUG: Declaration with objectID (%{public}@) can't be found in the database
Deleting declaration: %{public}@
Declaration has an invalid desiredStatus: '%{public}@'
Enqueued install operation: %{public}@
Enqueued remove operation: %{public}@
Deleting metadata: %{public}@
Declaration asset has an invalid desiredStatus: '%{public}@'
--- Declarations pending install/removal ---
--- Enqueued install/removal operations ---
Failed to fetch existing declarations: %{public}@
Failed to initialize declarations: %{public}@
Start set declarations for %{public}@
Declaration already present, skipping: %{public}@
Removing configuration pending installation: %{public}@
Failed to instantiate payload metadata from payload dictionary: %{public}@
Failed to instantiate command from payload dictionary: %{public}@
Failed to save changes: %{public}@
Failed to fetch existing declarations for removal: %{public}@
Marking configuration for removal: %{public}@
Failed to fetch existing declarations for update: %{public}@
Failed to initialize declarations for update: %{public}@
Declaration already installed, skipping: %{public}@
Declaration updated (%{public}@ -> %{public}@): %{public}@
Could not delete feedback for bundle identifier: %{public}@
Can't query for device locator lock state. Error: %{public}@
Can't query for activation lock state. Error: %{public}@
Updated Do Not Disturb override type
Updated Do Not Disturb override status
Start installing enterprise app with manifest URL: %{public}@
Start installing non-enterprise app for request: %{public}@
End %{public}@ with bundle identifier: %{public}@
Set redemption code for bundle identifier: %{public}@
Set unused redemption code for bundle identifier: %{public}@
Update management information for bundle identifier: %{public}@
Could not update management info for bundle identifier: %{public}@, error: %{public}@
DMDJobQueue: Destroying %{public}@
DMDJobQueue: %{public}@, enqueueing job block %{public}@, stack:
%{public}@
DMDJobQueue: %{public}@, dispatching to execution queue, job block %{public}@
DMDJobQueue: %{public}@, executing job block %{public}@ on main queue
DMDJobQueue: %{public}@, job finished, stack:
%{public}@
Could not remove device last located file: %@
Could not read device last location requested file: %@
Could not read device last located time interval: %@
Device last located on %{public}@. Creating localized message.
Could not write device last located time interval URL resourve values: %@
Could not write device last located time interval
Could not read device last located time interval for update: %@
Book failed to download: %{public}@
Error: %{public}@
Book completed downloading: %{public}@
Failed to set backup exclusion on managed books directory
Cannot write book without persistent ID to manifest: %{public}@
Cannot write book without iTunes Store ID to manifest: %{public}@
Cannot cancel downloads. Ignoring. Error: %{public}@
Starting installation of book: %{public}@
Replacing a book of kind %{public}@ with a book of kind %{public}@ is not allowed.
Beginning download of book %{public}@
Refreshing book purchase history and trying again.
Searching book purchase history for iTunes Store ID %{public}@
Could not look up book purchase history. Error: %{public}@
Found book: %{public}@
We found a book, but it was not VPP-licensed. Book %{public}@
Could not find book in VPP purchase history.
Starting installation of book with iTunes Store ID %{public}@
Removing %u non-store books because we have reported their transient state.
Removing %lu store books because we have reported their transient state.
Canceling all book downloads.
Removing managed books.
Error excluding %{public}@ from backup. Path does not exist.
Error excluding %{public}@ from backup %{public}@
Unknown device type %{private}@
Failed to get profiles system group container
Failed to get managed books system group container
System group container for %{public}@ path is %{public}s
Error getting system group container for %{public}@: %llu
Failed to fetch organization matching identifier (%{public}@): %{public}@
Payload has invalid type prefix (%{public}@) assuming it's a Configuration
Could not play sound in MDM Lost Mode: %{public}@
Beginning power assertion, operation: %{public}@
Ending power assertion, operation: %{public}@
unable to register configuration source because client doesn't have a valid entitlement for application-identifier
Could not remove VPN UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove configuration for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove management information for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Remove app with bundle identifier: %{public}@
Cancel app installation with bundle identifier: %{public}@
Start uninstalling app with bundle identifier: %{public}@
Cancel app update with bundle identifier: %{public}@
remove-os-update
schedule-os-update starting
schedule-os-update done
Starting
Shut down.
Shutting down...
Could not get operation class for request: %{public}@
Received request: %{public}@, from client: %{public}@
Connected %{public}@
Disconnected %{public}@
Invalidated %{public}@
Interrupted %{public}@: %{public}@
Notification %{public}@: %{public}@ %{public}@
Add operation: %{public}@
Declaration engine did resume
Declaration engine did suspend
Notified of locale change. Exiting when clean.
Setting Bluetooth enabled: %{public}@
Setting data roaming enabled: %{public}@
Setting Personal Hotspot enabled: %{public}@
Setting voice roaming enabled: %{public}@
Could not get image from data
Not prompting for iTunes account in limited apps mode.
%{public}@ starting user authentication.
User successfully logged into iTunes account.
User failed to log into iTunes account. Reason code: %ld
Could not mark app state as %{public}@ for bundle identifier: %{public}@
%{public}@
remove software update started
remove software update failed: %{public}@
Asking for a specific update: %{public}@
starting a new download
starting a new download failed: %{public}@
software update install did begin
software update install encountered an error: %{public}@
software update install encountered an unexpected error
startTheNextStep: goal == %{public}@
startTheNextStep: goal == none
startTheNextStep: we are busy doing something
startTheNextStep: starting install
startTheNextStep: starting download
startTheNextStep: starting scan
startTheNextStep: falling off the end
Operation will start: %{public}@
Operation will finish: %{public}@
Operation did finish: %{public}@
Resume update for bundle identifier: %{public}@
Start updating app for request: %{public}@
Could not get run loop source for user notification.
Could not get notification ref for user notification.
Dismissing notification because we entered limited apps mode.
Canceling %d pending notifications because we entered limited apps mode.
Not displaying notification in limited apps mode.
An iTunes login prompt is already shown. Not showing another prompt.
Calling completions for %lu iTunes login events.
Displaying alert: %{public}@ - %{public}@ [%{public}@] [%{public}@] [%{public}@]
Scheduling automatic alert dismissal after %0.0f seconds.
Automatically dismissing alert.
Cannot display alert: can't create run loop source.
Cannot create alert. Error: %d
Alert dismissed with response: %{public}@
Provisional enrollment successful
Provisional enrollment failed: %{public}@
Could not get file information
Memory mapping failed
bplist00
 "#$%&'()*&+_
BuildMachineOSBuild_
CFBundleAllowMixedLocalizations_
CFBundleDevelopmentRegion_
CFBundleDisplayName_
CFBundleExecutable_
CFBundleIdentifier_
CFBundleInfoDictionaryVersion_
CFBundlePackageType_
CFBundleShortVersionString_
CFBundleSignature_
CFBundleSupportedPlatforms_
CFBundleVersionZDTCompiler_
DTPlatformBuild^DTPlatformName_
DTPlatformVersionZDTSDKBuildYDTSDKNameWDTXcode\DTXcodeBuild_
MinimumOSVersion^UIDeviceFamilyW16B2657
WEnglishSdmd]com.apple.dmdS6.0_
com.apple.product-type.toolS1.0T????
iPhoneSimulatorU10.36_
"com.apple.compilers.llvm.clang.1_0P_
iphonesimulatorT11.3V15E164_
iphonesimulator11.3T0930U9Q54e
,-./
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.dmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboard.wipedevice</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>DeviceClass</string>
<string>ProductType</string>
<string>ProductVersion</string>
<string>BuildVersion</string>
<string>SerialNumber</string>
<string>ModelNumber</string>
<string>UniqueDeviceID</string>
<string>UserAssignedDeviceName</string>
<string>DiskUsage</string>
<string>TelephonyCapability</string>
<string>CellularDataCapability</string>
<string>PersonalHotspotCapability</string>
<string>PhoneNumber</string>
<string>EthernetMacAddress</string>
<string>BluetoothAddress</string>
<string>WifiAddress</string>
<string>WifiAddressData</string>
<string>MobileSubscriberCountryCode</string>
<string>MobileSubscriberNetworkCode</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
