sharedInstance
isManagedLostModeActive
endOperationWithSuccess
sharedManager
lastLocationRequestedDateMessage
dictionaryWithObjects:forKeys:count:
endOperationWithError:
clearLastLocationRequestedDate
disableManagedLostModeWithLocatedMessage:completion:
runWithRequest:
endOperationWithErrorCode:
assertionForOperation:
stayAliveThroughHereAtLeast
playSoundWithOptions:completion:
init
cleanUpWithAssertion:completionBlock:
suspensionQueue
suspensionQueueResumeMemberQueueIfSuspended
suspensionQueueIsMemberQueueSuspended
setSuspensionQueueIsMemberQueueSuspended:
memberQueue
memberQueueCleanUp
memberQueueRereadNonStoreBooksManifest
downloads
mutableCopy
memberQueuePersistentIDToNonStoreBook
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
downloadIdentifier
longLongValue
persistentIdentifier
enumerateObjectsUsingBlock:
downloadPhaseIdentifier
isEqualToString:
friendlyName
failureError
setDownloadIdentifier:
state
setState:
addObject:
removeObjectIdenticalTo:
finishDownloads:
count
cancelDownloads:completionBlock:
fullPath
defaultManager
fileExistsAtPath:
memberQueueCommitNonStoreBooksManifest
purchasedBooksManifest
dictionaryWithContentsOfFile:
dictionaryWithCapacity:
purchasedBooksDirectory
stringByAppendingPathComponent:
setObject:forKeyedSubscript:
memberQueueRereadStoreBooksManifest
memberQueueiTunesStoreIDToStoreBook
containsObject:
iTunesStoreID
memberQueueCommitStoreBooksManifest
arrayWithCapacity:
allValues
manifestDictionary
managedNonStoreBooksDirectory
numberWithInt:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
sharedConnection
isEnterpriseBookBackupAllowed
setSkipBackupAttribute:toItemAtPath:
managedNonStoreBooksManifestPath
writeToFile:atomically:
managedStoreBooksManifestPath
alloc
initWithManifestDictionary:
persistentID
setMemberQueuePersistentIDToNonStoreBook:
setMemberQueueiTunesStoreIDToStoreBook:
numberWithLongLong:
length
kind
setFullPath:
setPreviousVersion:
MCHashedFilenameWithPrefix:extension:
setKind:
initWithURL:
initWithKind:
initWithDownloadMetadata:
initWithURLRequest:
setValue:forProperty:
numberWithBool:
fileURLWithPath:
numberWithUnsignedInteger:
addAsset:forType:
removeItemAtPath:error:
arrayWithObjects:count:
setState:forNonStoreBookWithPersistentID:
addDownloads:completionBlock:
cancelNonStoreDownloadsWithDownloadIdentifiers:completionBlock:
updateJaliscoLibraryWithReason:completionHandler:
homeSharingCloudClient
objectAtIndexedSubscript:
isVPPLicensed
shouldBypassVPPLicenseCheck
title
setITunesStoreID:
setTitle:
author
setAuthor:
redownloadParameters
setBuyParams:
searchBookPurchaseHistoryForiTunesStoreID:assertion:triesLeft:completionBlock:
refreshBookPurchaseHistoryCompletion:
loadBooksForStoreIDs:withCompletionHandler:
setStoreManagedBook:
searchBookPurchaseHistoryForiTunesStoreID:assertion:completionBlock:
promptUserToLoginToiTunesIfNeededTitle:message:assertion:completionBlock:
initWithArray:copyItems:
removeObjectsForKeys:
memberQueueMoveTransientStatesForward
removeObjectForKey:
removePersistenceIdentifier:
removeAllObjects
resumeMemberQueueIfSuspended
rereadNonStoreBooksManifestCompletionBlock:
rereadStoreBooksManifestCompletionBlock:
setNonStoreManagedBook:
setState:forStoreBookWithiTunesStoreID:
installNonStoreBook:fileExtension:URL:assertion:completionBlock:
installStoreBookWithiTunesStoreID:title:message:assertion:completionBlock:
storeBooks
nonStoreBooks
moveTransientStatesForward
removeNonStoreBookWithPersistentID:assertion:completionBlock:
removeStoreBookWithiTunesStoreID:assertion:completionBlock:
uprootWithAssertion:completionBlock:
.cxx_destruct
setMemberQueue:
setSuspensionQueue:
_suspensionQueueIsMemberQueueSuspended
_memberQueue
_memberQueuePersistentIDToNonStoreBook
_memberQueueiTunesStoreIDToStoreBook
_suspensionQueue
setDownloadKinds:
setPersistenceIdentifier:
setShouldFilterExternalOriginatedDownloads:
initWithManagerOptions:
currentUser
isLoginUser
switchToLoginUserWithCompletionHandler:
enabled
setBoolValue:forSetting:
setVoiceRoamingEnabled:
setDataRoamingEnabled:
seconds
numberWithDouble:
setValue:forSetting:
isNetworkTethered
secret
dataUsingEncoding:
unlockTokenData
clearPasscodeWithEscrowKeybagData:secret:outError:
initWithBook:
endOperationWithResultObject:
class
bundleForClass:
localizedStringForKey:value:table:
originator
stringWithFormat:
setPersistentID:
version
setVersion:
type
IMEI
MEID
hasTelephony
hasCellular
modemFirmwareVersion
ICCID
phoneNumber
currentNetworkName
carrierName
carrierBundleVersion
subscriberMCC
subscriberMNC
currentMCC
currentMNC
dataRoamingEnabled
isRoaming
supportsVoiceRoaming
voiceRoamingEnabled
hasGSM
hasCDMA
setManagedCellularProfile:outError:
clearManagedCellularProfileWithOutError:
getManagedCellularProfileWithOutError:
currentThread
mainThread
setDelegate:
distantFuture
timeIntervalSinceReferenceDate
_timerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
timeoutTimer
invalidate
dealloc
completionBlock
setCompletionBlock:
timeout
dateWithTimeIntervalSinceNow:
setFireDate:
request
start
cancel
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
request:didFailWithError:
requestDidFinish:
initWithRequest:
startWithCompletionBlock:
setRequest:
setTimeoutTimer:
_request
_completionBlock
_timeoutTimer
fileHandle
dmd_dataWithMappedContentsOfFileHandle:error:
imageWithData:
optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:hasVideo:stillTimeInVideo:
location
eraseDeviceType
dataResetOptions
initWithMode:options:reason:
sharedService
dataResetWithRequest:completion:
stopMirroringWithAssertion:completionBlock:
setEnabled:
disable
_enabled
activationLockBypassKeyCreateNewIfNeeded:
initWithBypassCode:
allUsers
username
hasDataToSync
forceDeletion
deleteUser:completionHandler:
message
setMessage:
setPhoneNumber:
setLostModeEnabled:
enableLostModeWithInfo:
code
identifier
setIdentifier:
defaultButtonText
setDefaultButtonText:
alternateButtonText
setAlternateButtonText:
otherButtonText
setOtherButtonText:
displayOnLockScreen
setDisplayOnLockScreen:
displayInAppWhitelistModes
setDisplayInAppWhitelistModes:
dismissAfterTimeInterval
setDismissAfterTimeInterval:
notification
setNotification:
_displayOnLockScreen
_displayInAppWhitelistModes
_identifier
_title
_message
_defaultButtonText
_alternateButtonText
_otherButtonText
_dismissAfterTimeInterval
_notification
defaultCenter
mainQueueDidReceiveAppWhitelistChangedNotification
addObserverForName:object:queue:usingBlock:
removeObserver:
cancelAllNotificationsWithCompletionBlock:
appWhitelistState
addObjectsFromArray:
cancelNotificationEntriesMatchingPredicate:completionBlock:
predicateWithBlock:
filteredArrayUsingPredicate:
removeObjectsInArray:
displayUserNotificationWithIdentifier:title:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
unpark
park
copy
subarrayWithRange:
displayUserNotificationWithTitle:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
promptUserToLogIntoiTunesWithTitle:message:assertion:completionBlock:
inviteUserToVPPWithTitle:message:continueButtonText:cancelButtonText:assertion:completionBlock:
removeObjectAtIndex:
deviceType
destinationName
destinationDeviceID
uppercaseString
password
scanWaitInterval
initWithStatus:
requestMirroringWithDestinationName:destinationDeviceID:password:scanWaitTime:title:message:acceptButtonText:declineButtonText:assertion:completionBlock:
setExecutionQueue:
memberQueueCurrentlyJoiningDestinationName
memberQueueCurrentlyJoiningDestinationDeviceID
pickableMirroringRouteWithName:deviceID:fromRoutes:
setMemberQueueCurrentlyJoiningDestinationName:
setMemberQueueCurrentlyJoiningDestinationDeviceID:
_stopMediaRemoteNotifications
executionQueue
executionQueueBonjourWaitContinuation
userInfo
intValue
executionQueueBonjourWaitTimerContext
setExecutionQueueBonjourWaitTimerContext:
setExecutionQueueBonjourWaitContinuation:
executionQueueCancelBonjourWait
jobQueue
jobDidFinish
promptUserToMirrorWithRoute:name:deviceID:password:title:message:acceptButtonText:declineButtonText:assertion:completionBlock:
_executionQueueStopBonjourWait
enqueueJob:
boolValue
setJobQueue:
_jobQueue
_executionQueue
_memberQueueCurrentlyJoiningDestinationName
_memberQueueCurrentlyJoiningDestinationDeviceID
_executionQueueBonjourWaitContinuation
_executionQueueBonjourWaitTimerContext
_copyEscrowKeybagWithSecret:outError:
initWithUnlockTokenData:
defaultStore
activeAccount
promptUserForiTunesAccount:accountNameEditable:canCreateNewAccount:assertion:completionBlock:
initWithAccount:
contextForSignIn
setPromptStyle:
setAccountNameEditable:
setCanCreateNewAccount:
delegateWithAuthenticationContext:
clearStoredActivationLockBypassCode
resetRestrictionsPassword
initWithAuthenticationContext:
_storeLoginFailedError
authenticatedAccount
setAuthenticatedAccount:
authenticateResponseType
authenticateRequest:didReceiveResponse:
_authenticatedAccount
locationServicesEnabled
isStatusBarIconEnabledForLocationEntityClass:
setLocationServicesEnabled:
setStatusBarIconEnabled:forLocationEntityClass:
setCurrentLocation:
setCurrentError:
setAuthorizationStatusByType:forBundle:
initWithEffectiveBundle:
setLocationManager:
locationManager
setDesiredAccuracy:
requestLocation
currentLocation
currentError
currentRunLoop
runUntilDate:
stopUpdatingLocation
_updateLostModeFileForOrganizationName:serverName:
detachNewThreadWithBlock:
systemLostModeRequestPath
fileURLWithPath:isDirectory:
removeItemAtURL:error:
domain
coordinateWritingItemAtURL:options:error:byAccessor:
dictionaryWithContentsOfURL:
coordinateReadingItemAtURL:options:error:byAccessor:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
currentLocale
setLocale:
setTimeStyle:
stringFromDate:
setDateStyle:
lastObject
writeToURL:atomically:
setResourceValues:error:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
getCurrentLocationForOrganizationName:serverName:completion:
_locationManager
_currentLocation
_currentError
activeSyncDeviceIdentifier
isMultiUser
userType
maxNumberOfUsers
isAppAnalyticsAllowed
deviceCapacity
deviceAvailableCapacity
currentDevice
setBatteryMonitoringEnabled:
batteryLevel
numberWithFloat:
_isDeviceLocatorServiceEnabled
_isActivationLockEnabled
isDiagnosticSubmissionAllowed
_isDNDInEffect
_isCloudBackupEnabled
_personalHotspotEnabled
aa_primaryAppleAccount
isEnabledForDataclass:
aa_isPrimaryEmailVerified
fmipStateWithCompletion:
isActivationLockEnabledWithCompletion:
sharedController
bbGateway
setOverrides:
mode
setMode:
effectiveIntervals
startComponents
setFromComponents:
endComponents
setToComponents:
resetToFallbackRange
setValid:
setBehaviorOverrides:
setPrivilegeTypes:
setRecordID:
setIsEffectiveWhileUnlocked:
setOverrideType:
setActiveBehaviorOverrideTypesChangeHandler:
setOverrideStatus:
setBehaviorOverrideStatusChangeHandler:
getBehaviorOverridesEffectiveWhileUnlockedWithCompletion:
getPrivilegedSenderAddressBookGroupRecordIDAndNameWithCompletion:
getPrivilegedSenderTypesWithCompletion:
getBehaviorOverridesWithCompletion:
isDNDScheduled
overrideType
overrideStatus
platformSpecificValueBlocksByName
initWithPersistentID:iTunesStoreID:author:title:version:type:state:
organizationName
serverName
initWithLocation:
footnote
setFootnoteText:
setDisableSlideToUnlock:
enableManagedLostModeWithInfo:completion:
arrayByAddingObjectsFromArray:
initWithBooks:
isEqualToUser:
initWithUser:isCurrentUser:
initWithUsers:
dataQuota
dataUsed
initWithUsername:dataQuota:dataUsed:hasDataToSync:isCurrentUser:
setWithObject:
whitelistedClassesForRequest
requiredEntitlements
profileData
validateRequest:error:
profileIdentifier
managingProfileIdentifier
propertyKeys
setWithArray:
fileDescriptor
bundleIdentifier
appID
manifestURL
UTF8String
operationWillStart
operationWillFinish
setTransaction:
operationDidFinish
isAsynchronous
main
transaction
_transaction
invitationURL
programID
language
initWithMachServiceName:
_setQueue:
setName:
setSuspended:
setMaxConcurrentOperationCount:
_currentLocaleDidChange:
addObserver:selector:name:object:
delegate
serverWillStart
resume
xpcListener
hasAlreadyShutdown
operationQueue
taskServer
setHasAlreadyShutdown:
valueForEntitlement:
initWithXPCConnection:
connectWithClientTransport:
currentPlatformRequestClasses
_requestClassNamesToOperationClasses
transport
boolValueForEntitlement:
verboseDescription
addOperation:
listener:shouldAcceptNewConnection:
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
suspend
shutdown
setXpcListener:
setTaskServer:
setOperationQueue:
_hasAlreadyShutdown
_delegate
_xpcListener
_taskServer
_operationQueue
locale
name
style
filterFlags
_profileListWithFilterFlags:
initWithProfiles:
sharedReader
installedProfileIdentifiersWithFilterFlags:
userProfileRestrictions
systemProfileRestrictions
defaultRestrictions
installedProfileWithIdentifier:
dependentsOfParent:inDomain:
signerCertificates
dataWithBytes:length:
installType
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
initWithProfile:isManaged:signerCertificates:restrictions:
isEncrypted
payloads
displayName
organization
payloadDescription
initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:
UUID
profileDescription
isLocked
removalPasscode
initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:
sharedHacks
isSetupBuddyDone
_installInteractiveProfile:
_installSilentProfileData:managingProfileIdentifier:type:
numberWithInteger:
installProfileData:options:outError:
profileWithData:outError:
mustInstallProfileNonInteractively:
queueFileDataForAcceptance:originalFileName:outError:
removeProtectedProfileAsyncWithIdentifier:installationType:
removeProvisioningProfileWithUUID:outError:
initWithReason:
setRebootType:
shutdownWithOptions:
registerUserSwitchStakeHolder:
sharedStakeholder
willSwitchUser
inEDUMode
initWithFormat:arguments:
initForOperation:
_retain
_release
isParked
exceptionWithName:reason:userInfo:
setIsParked:
operation
taskWithName:reason:
setBlockingTask:
blockingTask
begin
setOperation:
_isParked
_operation
_blockingTask
propertyListWithData:options:format:error:
safePropertyListWithData:options:format:error:
waitForMigrationIncludingPostRestoreMigration:completion:
_bundleIDFromAuditToken:
isPlaceholder
isAppRemovalAllowed
applicationType
isDeletable
diskUsage
installProgress
fractionCompleted
setFractionCompleted:
installState
setPhase:
installPhase
applicationIdentifier
itemName
bundleVersion
shortVersionString
externalVersionIdentifier
betaExternalVersionIdentifier
staticUsage
dynamicUsage
onDemandResourcesUsage
isMISAuthorized
isInstalled
isAppUpdate
isBetaApp
fileSharingEnabled
initWithApplicationIdentifier:bundleIdentifier:name:iconData:bundleVersion:shortVersionString:applicationType:adamID:externalVersionIdentifier:betaExternalVersionIdentifier:staticUsage:dynamicUsage:onDemandResourcesUsage:unusedRedemptionCode:attributes:configuration:feedback:state:managementFlags:isManaged:isValidated:isInstalled:isPlaceholder:isAppUpdate:isBetaApp:isRemoveable:fileSharingEnabled:progress:
initWithApplicationProxy:iconData:unusedRedemptionCode:attributes:configuration:feedback:state:managementFlags:isManaged:
currentRestrictions
initWithRestrictions:
applicationProxyForIdentifier:
applicationProxyForItemID:
localizedName
itemID
updateWithMetadataResponse:changeType:success:error:
valueForDownloadProperty:
initWithPurchase:
bundleID
appendFormat:
localizedAppTitle
setBundleID:
setLocalizedAppTitle:
setExternalVersionIdentifer:
setPurchase:
setIsRedownload:
setIsRedemptionNeeded:
setHasRetrievedMetadata:
isLicensed
setIsLicensed:
setChangeType:
setSuccess:
setError:
initWithBundleID:iTunesStoreID:
initWithMetadataResponse:iTunesStoreID:changeType:success:error:
initWithPurchase:isRedownload:redemptionNeeded:
hasSufficientInfoForManagementChange
updateWithMetadataPurchase:isRedownload:redemptionNeeded:
externalVersionIdentifer
hasRetrievedMetadata
success
error
changeType
purchase
isRedownload
isRedemptionNeeded
_hasRetrievedMetadata
_isLicensed
_success
_isRedownload
_isRedemptionNeeded
_bundleID
_iTunesStoreID
_externalVersionIdentifer
_localizedAppTitle
_error
_changeType
_purchase
installedProfilesWithFilterFlags:
certificatePersistentID
copyItemWithPersistentID:useSystemKeychain:
initWithCertificateRef:isIdentity:
initWithCertificates:
supportsBlockLevelEncryption
supportsFileLevelEncryption
isPasscodeSet
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
effectiveValueForSetting:
unsignedIntegerValue
userValueForSetting:
initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:
initWithSecurityInformation:
bundleIdentifiers
validateAppBundleIDs:completion:
deviceClass
floatValue
deviceUniqueIdentifier
deviceSerialNumber
deviceProductName
deviceName
deviceHasInternetTetheringCapability
deviceLastCloudBackupDate
setDeviceName:outError:
userSetLanguage
userSetLocale
_queue
stringFromNumber:
sha1Hash
base64EncodedStringWithOptions:
path
getResourceValue:forKey:error:
setResourceValue:forKey:error:
iTunesAccountHashForUniqueIdentifier:
nextJobSequenceNumber
setNextJobSequenceNumber:
queueIDString
callStackSymbols
jobGroup
setJobGroup:
setQueueIDString:
_nextJobSequenceNumber
_jobGroup
_queueIDString
_systemGroupContainerPathWithGroupIdentifier:
_systemProfileStorageDirectory
_userDirectory
_managedNonStoreBooksSystemGroupContainer
_systemProfileLibraryDirectory
configurationProfilesSystemGroupContainer
stringWithCString:encoding:
appManagementFilePath
migrationMetadataPath
bytes
_valueBlocksByName
initWithValuesByPropertyKey:errorsByPropertyKey:
sharedConfiguration
isAwaitingConfiguration
uniqueIdentifier
isSupervised
_macAddress
_OSVersion
_buildVersion
_model
_bluetoothMacAddress
addEntriesFromDictionary:
initWithDictionary:copyItems:
removeProfileAsyncWithIdentifier:installationType:
applicationProxyIsMISAuthorizedForBundleID:
firstObject
initWithCommonName:data:isIdentity:
installProvisioningProfileData:managingProfileIdentifier:outError:
Device is not in lost mode. Reporting success regardless.
Disabling lost mode...
Device was located while in lost mode. Alerting user with message 
%{public}@
Could not disable lost mode: %{public}@
Could not play sound in MDM Lost Mode: %{public}@
Book failed to download: %{public}@
Error: %{public}@
Book completed downloading: %{public}@
Failed to set backup exclusion on managed books directory
Cannot write book without persistent ID to manifest: %{public}@
Cannot write book without iTunes Store ID to manifest: %{public}@
Cannot cancel downloads. Ignoring. Error: %{public}@
Starting installation of book: %{public}@
Replacing a book of kind %{public}@ with a book of kind %{public}@ is not allowed.
Beginning download of book %{public}@
Refreshing book purchase history and trying again.
Searching book purchase history for iTunes Store ID %{public}@
Could not look up book purchase history. Error: %{public}@
Found book: %{public}@
We found a book, but it was not VPP-licensed. Book %{public}@
Could not find book in VPP purchase history.
Starting installation of book with iTunes Store ID %{public}@
Removing %u non-store books because we have reported their transient state.
Removing %lu store books because we have reported their transient state.
Canceling all book downloads.
Removing managed books.
Setting data roaming enabled: %{public}@
Could not get image from data
Dismissing notification because we entered limited apps mode.
Canceling %d pending notifications because we entered limited apps mode.
Not displaying notification in limited apps mode.
An iTunes login prompt is already shown. Not showing another prompt.
Calling completions for %lu iTunes login events.
An invitation prompt is already shown. Not showing another one.
Calling completions for %lu invitation prompts
Displaying alert: %{public}@ - %{public}@ [%{public}@] [%{public}@] [%{public}@]
Scheduling automatic alert dismissal after %0.0f seconds.
Automatically dismissing alert.
Cannot display alert: can't create run loop source.
Cannot create alert. Error: %d
Alert dismissed with response: %{public}@
The mirror destination 
%{public}@
 is not available.
AirPlay Pickable routes changed.
Route changed. Info: %{public}@
Successfully mirrorred to 
%{public}@
Stop listening to media remote notifications.
Start listening to media remote notifications.
Looking for AirPlay Mirroring destination 
%{public}@
 for %0.0f seconds...
Cannot find AirPlay Mirroring destination 
%{public}@
No longer waiting for AirPlay Mirroring destination 
%{public}@
Received unknown event: %lu
Prompting user to accept AirPlay Mirroring on 
%{public}@
Starting AirPlay Mirroring with 
%{public}@
Waiting to look for AirPlay issues.
Done looking for AirPlay issues.
User declined AirPlay Mirroring.
AirPlay Mirroring alert dismissed programmatically.
AirPlay Mirroring alert could not be displayed. Ignoring.
AirPlay Mirroring alert could not be displayed due to an unknown error. Ignoring.
Setting voice roaming enabled: %{public}@
Setting Personal Hotspot enabled: %{public}@
Not prompting for iTunes account in limited apps mode.
%{public}@ starting user authentication.
User successfully logged into iTunes account.
User failed to log into iTunes account. Reason code: %ld
Could not remove device last located file: %@
Could not read device last location requested file: %@
Could not read device last located time interval: %@
Device last located on %{public}@. Creating localized message.
Could not write device last located time interval URL resourve values: %@
Could not write device last located time interval
Could not read device last located time interval for update: %@
Can't query for device locator lock state. Error: %{public}@
Can't query for activation lock enabled state. Error: %{public}@
Updated Do Not Disturb override type
Updated Do Not Disturb override status
Could not get file information
Memory mapping failed
Operation will start: %{public}@
Operation will finish: %{public}@
Operation did finish: %{public}@
Starting...
Shut down.
Shutting down...
Received request: %{public}@, from client: %{public}@
Could not get operation class for request: %{public}@
Connected %{public}@
Disconnected %{public}@
Invalidated %{public}@
Interrupted %{public}@: %{public}@
Notification %{public}@: %{public}@ %{public}@
Add operation: %{public}@
Notified of locale change. Exiting when clean.
Beginning power assertion, operation: %{public}@
Ending power assertion, operation: %{public}@
Could not create property list from data: %{public}@, exception: %{public}@
Looked up bundle ID %{public}@ from audit token using entitlement.
Looked up bundle ID %{public}@ from audit token using Info.plist.
Could not determine bundle ID for %{public}@ from audit token.
Could not look up bundle ID using audit token.
Unknown device type %{private}@
Error excluding %{public}@ from backup. Path does not exist.
Error excluding %{public}@ from backup %{public}@
DMDJobQueue: Destroying %{public}@
DMDJobQueue: %{public}@, enqueueing job block %{public}@, stack:
%{public}@
DMDJobQueue: %{public}@, dispatching to execution queue, job block %{public}@
DMDJobQueue: %{public}@, executing job block %{public}@ on main queue
DMDJobQueue: %{public}@, job finished, stack:
%{public}@
Failed to get profiles system group container
Failed to get managed books system group container
System group container for %{public}@ path is %{public}s
Error getting system group container for %{public}@: %llu
v8@?0
v16@?0@"NSError"8
DMDPlayLostModeSoundOperation: run
epub
ibooks
Queued
PromptingForLogin
Updating
Installing
Managed
ManagedButUninstalled
Installed
Uninstalled
Failed
Unknown
com.apple.mdmd.downloads.media.nonstore
DMDManagedMediaManager: init
DMDManagedMediaManager Member Queue
DMDManagedMediaManager Suspension Queue
v32@?0@"SSDownload"8Q16^B24
Books
Path
-[DMDManagedMediaManager installNonStoreBook:fileExtension:URL:assertion:completionBlock:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DeviceManagement_Sim/DeviceManagement-2.37/dmd - iOS/DMDManagedMediaManager.m
book.persistentID
com.apple.managedconfiguration.mdmd
MediaBypassVPPCheck
v12@?0B8
v24@?0@"NSArray"8@"NSError"16
v24@?0@"NSError"8@"MCBook"16
sharedManager
T@"DMDManagedMediaManager",R,N
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
memberQueuePersistentIDToNonStoreBook
T@"NSMutableDictionary",&,N,V_memberQueuePersistentIDToNonStoreBook
memberQueueiTunesStoreIDToStoreBook
T@"NSMutableDictionary",&,N,V_memberQueueiTunesStoreIDToStoreBook
suspensionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_suspensionQueue
suspensionQueueIsMemberQueueSuspended
TB,N,V_suspensionQueueIsMemberQueueSuspended
storeBooks
T@"NSArray",R,C,N
nonStoreBooks
DMDRemoveManagedBookOperation: run
isNetworkTethered
TB,R,N
DMDInstallManagedBookOperation: run
v32@?0@"NSError"8@"MCBook"16@"NSString"24
Book Installation
DMFNotifications
Sign in to iTunes to allow %@ to manage and install books.
IMEI
T@"NSString",R,C,N
MEID
ICCID
phoneNumber
modemFirmwareVersion
currentNetworkName
carrierName
carrierBundleVersion
subscriberMCC
subscriberMNC
currentMCC
currentMNC
isRoaming
supportsVoiceRoaming
hasTelephony
hasCellular
hasGSM
hasCDMA
dataRoamingEnabled
TB,N
voiceRoamingEnabled
-[DMDSSRequestDelegate initWithRequest:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DeviceManagement_Sim/DeviceManagement-2.37/dmd - iOS/DMDSSRequestDelegate.m
request
-[DMDSSRequestDelegate startWithCompletionBlock:]_block_invoke
!self.completionBlock
-[DMDSSRequestDelegate cancel]_block_invoke
self.completionBlock
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"SSRequest",C,N,V_request
completionBlock
T@?,C,N,V_completionBlock
timeoutTimer
T@"NSTimer",C,N,V_timeoutTimer
dmd erase command
DMDStopAirPlayMirroringOperation: run
enabled
TB,N,V_enabled
DMDStopManagingBooksOperation: run
identifier
T@"NSString",&,N,V_identifier
title
T@"NSString",&,N,V_title
message
T@"NSString",&,N,V_message
defaultButtonText
T@"NSString",&,N,V_defaultButtonText
alternateButtonText
T@"NSString",&,N,V_alternateButtonText
otherButtonText
T@"NSString",&,N,V_otherButtonText
displayOnLockScreen
TB,N,V_displayOnLockScreen
displayInAppWhitelistModes
TB,N,V_displayInAppWhitelistModes
dismissAfterTimeInterval
Td,N,V_dismissAfterTimeInterval
notification
T@,&,N,V_notification
v16@?0@"NSNotification"8
B16@?0@"DMDUserNotificationQueueEntry"8
B24@?0@"DMDUserNotificationQueueEntry"8@"NSDictionary"16
v16@?0Q8
Sign In
Cancel
T@"DMDUserNotificationManager",R,N
DMDUserNotificationManager Queue
Primary button selected
Secondary button selected
Tertiary button selected
Dismissed programatically
DMDRequestAirPlayMirroringOperation: run
AirPlay
Display
Dismiss
DMDAirPlayManager execution queue
DMDAirPlayManager member queue
DMDAirPlayManager: pickable routes did change
%@ is not available
DMDAirPlayManager: route status did change
RouteName
AirPlayPortExtendedInfo
deviceID
RouteSupportsAirPlayScreen
AVAudioRouteName
Speaker
T@"DMDAirPlayManager",R,N
jobQueue
T@"DMDJobQueue",&,N,V_jobQueue
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
memberQueueCurrentlyJoiningDestinationName
T@"NSString",&,N,V_memberQueueCurrentlyJoiningDestinationName
memberQueueCurrentlyJoiningDestinationDeviceID
T@"NSString",&,N,V_memberQueueCurrentlyJoiningDestinationDeviceID
executionQueueBonjourWaitContinuation
T@?,C,N,V_executionQueueBonjourWaitContinuation
executionQueueBonjourWaitTimerContext
T@"DMDTimerContext",&,N,V_executionQueueBonjourWaitTimerContext
v24@?0@"NSError"8@"SSAccount"16
authenticatedAccount
T@"SSAccount",&,N,V_authenticatedAccount
T@"SSAuthenticateRequest",R,C,D,N
organizationName
serverName
v16@?0@"NSURL"8
The location of this device was sent to %@ at %@ on %@.
T@"DMDLostDeviceLocationManager",R,N
locationManager
T@"CLLocationManager",&,N,V_locationManager
currentLocation
T@"CLLocation",&,N,V_currentLocation
currentError
T@"NSError",&,N,V_currentError
lastLocationRequestedDateMessage
@"NSString"8@?0
@"NSNumber"8@?0
v24@?0Q8@"NSError"16
v20@?0B8@"NSError"12
v16@?0q8
v20@?0i8@"NSString"12
v16@?0@"NSArray"8
v24@?0@"CLLocation"8@"NSError"16
DMDFetchManagedBooksOperation: run
com.apple.dmd.operation.log-out-user
com.apple.dmd.operation.remove-protected-profile
com.apple.dmd.operation.trigger-diagnostics
com.apple.dmd.operation.install-provisioning-profile
request.profileData
com.apple.dmd.operation.schedule-os-update-scan
com.apple.dmd.operation.remove-provisioning-profile
request.profileIdentifier
request.managingProfileIdentifier
com.apple.dmd.operation.fetch-provisioning-profiles
com.apple.dmd.operation.schedule-os-update
com.apple.dmd.operation.request-airplay-mirroring
com.apple.dmd.operation.enable-lost-mode
com.apple.dmd.operation.install-managed-book
com.apple.dmd.operation.stop-managing-apps
com.apple.dmd.operation.restart-device
com.apple.dmd.operation.set-app-attributes
com.apple.dmd.operation.fetch-device-properties
request.propertyKeys
com.apple.dmd.operation.play-lost-mode-sound
com.apple.dmd.operation.set-maximum-resident-users
com.apple.dmd.operation.open-url
request.url
com.apple.dmd.operation.fetch-unlock-token
request.secret
com.apple.dmd.operation.fetch-profiles
com.apple.dmd.operation.remove-managed-application
request.bundleIdentifier
com.apple.dmd.operation.install-managed-application
com.apple.dmd.operation.set-data-roaming-enabled
whitelistedClassesForRequest
T@"NSSet",R,N
requiredEntitlements
T@"NSArray",R,N
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
com.apple.dmd.operation.set-passcode-lock-grace-period
com.apple.dmd.operation.disable-lost-mode
com.apple.dmd.operation.invite-to-volume-purchase-program
request.invitationURL
request.programID
com.apple.dmd.operation.fetch-location
request.serverName
com.apple.dmd.operation.clear-device-passcode
request.unlockTokenData
com.apple.dmd.operation.erase-device
com.apple.dmd.operation.set-diagnostic-submission-enabled
com.apple.dmd.operation.set-personal-hotspot-enabled
com.apple.dmd.operation.fetch-restrictions
com.apple.dmd.operation.fetch-available-os-updates
com.apple.dmd.operation.stop-airplay-mirroring
com.apple.dmd.operation.fetch-managed-books
com.apple.dmd.operation.delete-user
request.message
com.apple.dmd.operation.fetch-applications
com.apple.dmd.operation.set-user-language
request.language
com.apple.dmd.operation.stop-managing-books
com.apple.dmd.operation.fetch-os-update-status
com.apple.dmd.operation.set-app-configuration
com.apple.dmd.operation.apply-redemption-code
request.code
com.apple.dmd-access
%@.%p.main
kCATErrorRequestNameKey
Process is missing entitlement "%@"
DMFErrors
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
taskServer
T@"CATTaskServer",&,N,V_taskServer
operationQueue
T@"CATOperationQueue",&,N,V_operationQueue
hasAlreadyShutdown
TB,N,V_hasAlreadyShutdown
delegate
T@"<DMDServerDelegate>",W,N,V_delegate
com.apple.dmd.operation.fetch-activation-lock-bypass-code
com.apple.dmd.operation.set-user-locale
request.locale
com.apple.dmd.operation.validate-applications
com.apple.dmd.operation.remove-managed-book
com.apple.dmd.operation.set-voice-roaming-enabled
com.apple.dmd.operation.open-app
com.apple.dmd.operation.fetch-security-information
com.apple.dmd.operation.remove-profile
com.apple.dmd.operation.lock-device
com.apple.dmd.operation.clear-activation-lock-bypass-code
com.apple.dmd.operation.set-device-name
request.name
com.apple.dmd.operation.set-wallpaper
request.imageURL
com.apple.dmd.operation.shut-down-device
com.apple.dmd.operation.fetch-users
com.apple.dmd.operation.fetch-certificates
com.apple.dmd.operation.clear-restrictions-password
com.apple.dmd.operation.install-profile
com.apple.dmd.operation.set-app-analytics-enabled
dmd restart device
DMDPowerAssertion Queue
unknown
Trying to park a power assertion that's already parked.
Trying to unpark a power assertion that's not parked.
DMDSwitchBlockingTask
isParked
TB,N,V_isParked
operation
T@"NSString",&,N,V_operation
blockingTask
T@"UMUserSwitchBlockingTask",&,N,V_blockingTask
metadataByBundleID
state
flags
Attributes
iTunesStoreID
SSItem
RedemptionCode
UnusedRedemptionCode
bundleID
softwareVersionExternalIdentifier
bundleDisplayName
Bundle ID: %@
iTunes ID: %@
Localized App Title: %@
T@"NSString",C,N,V_bundleID
T@"NSNumber",C,N,V_iTunesStoreID
externalVersionIdentifer
T@"NSNumber",C,N,V_externalVersionIdentifer
localizedAppTitle
T@"NSString",C,N,V_localizedAppTitle
hasRetrievedMetadata
TB,N,V_hasRetrievedMetadata
changeType
Tq,N,V_changeType
success
TB,N,V_success
error
T@"NSError",C,N,V_error
isLicensed
TB,N,V_isLicensed
isRedownload
TB,N,V_isRedownload
isRedemptionNeeded
TB,N,V_isRedemptionNeeded
purchase
T@"SSPurchase",R,C,N,V_purchase
hasSufficientInfoForManagementChange
DeviceClass
iPhone Simulator
UniqueDeviceID
SerialNumber
ProductType
UserAssignedDeviceName
iPhoneSimulator
iPhone
iPod
iPad
AppleTV
iFPGA
Watch
DMD Lockdown Operation Queue
deviceClass
deviceUniqueIdentifier
deviceSerialNumber
deviceProductName
deviceName
deviceType
TQ,R,N
deviceHasInternetTetheringCapability
deviceCapacity
T@"NSNumber",R,C,N
deviceAvailableCapacity
deviceLastCloudBackupDate
T@"NSDate",R,C,N
DMDJobQueue %d
T@"NSObject<OS_dispatch_queue>",&,N,V_jobQueue
jobGroup
T@"NSObject<OS_dispatch_group>",&,N,V_jobGroup
queueIDString
T@"NSString",&,N,V_queueIDString
nextJobSequenceNumber
TI,V_nextJobSequenceNumber
systemgroup.com.apple.configurationprofiles
MDMAppManagement.plist
Purchases.plist
/Media/Books/Purchases
ManagedBooks.plist
Library
Managed.plist
Migration.plist
LostModeRequest.plist
ConfigurationProfiles
systemgroup.com.apple.media.books.managed
configurationProfilesSystemGroupContainer
appManagementFilePath
purchasedBooksManifest
purchasedBooksDirectory
managedStoreBooksManifestPath
managedNonStoreBooksDirectory
managedNonStoreBooksManifestPath
migrationMetadataPath
systemLostModeRequestPath
sha1Hash
T@"NSData",R,C,N
@"NSDate"8@?0
ProductVersion
BuildVersion
HWModelStr
SecondaryBluetoothMacAddress
platformSpecificValueBlocksByName
T@"NSDictionary",R,D,N
dmd shut down device
DMDManagedMediaManager
DMDNetworkTetherUtilities
DMDCoreTelephonyUtilities
DMDSSRequestDelegate
SSRequestDelegate
NSObject
DMDTimerContext
DMDUserNotificationQueueEntry
DMDUserNotificationManager
DMDAirPlayManager
DMDManagedAssetManager
DMDSSAuthenticationRequestDelegate
SSAuthenticateRequestDelegate
DMDLostDeviceLocationManager
CLLocationManagerDelegate
MCBook
UMUser
DMDLogOutUserOperation
DMDRemoveProtectedProfileOperation
DMDTriggerDiagnosticsOperation
DMDInstallProvisioningProfileOperation
DMDScheduleOSUpdateScanOperation
DMDRemoveProvisioningProfileOperation
DMDFetchProvisioningProfilesOperation
DMDScheduleOSUpdateOperation
DMDRequestAirPlayMirroringOperation
DMDEnableLostModeOperation
DMDInstallManagedBookOperation
DMDStopManagingAppsOperation
DMDRestartDeviceOperation
DMDSetAppAttributesOperation
DMDFetchDevicePropertiesOperation
DMDPlayLostModeSoundOperation
DMDSetMaximumResidentUsersOperation
DMDOpenURLOperation
DMDFetchDeviceUnlockTokenOperation
DMDFetchProfilesOperation
DMDMappedMemory
DMDRemoveManagedApplicationOperation
DMDInstallManagedApplicationOperation
DMDSetDataRoamingEnabledOperation
DMDTaskOperation
DMDTaskOperationProtocol
DMDSetPasscodeLockGracePeriodOperation
DMDDisableLostModeOperation
DMDInviteToVolumePurchaseProgramOperation
DMDFetchLocationOperation
DMDClearDevicePasscodeOperation
DMDEraseDeviceOperation
DMDSetDiagnosticSubmissionEnabledOperation
DMDSetPersonalHotspotEnabledOperation
DMDFetchRestrictionsOperation
DMDFetchAvailableOSUpdatesOperation
DMDStopAirPlayMirroringOperation
DMDFetchManagedBooksOperation
DMDDeleteUserOperation
DMDFetchApplicationsOperation
DMDSetUserLanguageOperation
DMDStopManagingBooksOperation
DMDFetchOSUpdateStatusOperation
DMDSetAppConfigurationOperation
DMDApplyRedemptionCodeOperation
DMDServer
NSXPCListenerDelegate
CATTaskServerDelegate
DMDFetchActivationLockBypassCodeOperation
DMDSetUserLocaleOperation
DMDValidateApplicationsOperation
DMDRemoveManagedBookOperation
DMDSetVoiceRoamingEnabledOperation
DMDOpenAppOperation
DMDFetchSecurityInformationOperation
DMDRemoveProfileOperation
DMDLockDeviceOperation
DMDClearActivationLockBypassCodeOperation
DMDSetDeviceNameOperation
DMDSetWallpaperOperation
DMDShutDownDeviceOperation
DMDFetchUsersOperation
DMDFetchCertificatesOperation
DMDClearRestrictionsPasswordOperation
DMDInstallProfileOperation
DMDSetAppAnalyticsEnabledOperation
iOSPlatforms
MCProfile
MISProfileRef
DMDUserSwitchStakeholder
UMUserSwitchStakeholder
DMDPowerAssertion
DMDSafeSerialization
DMDiOSPlatformsServer
DMDServerDelegate
LSApplicationProxy
DMDStoreAppMetadata
DMDLockdownUtilities
DMDMDMUtilities
DMDJobQueue
DMDPaths
DMDUtilities
DMDMISValidation
SecCertificateRef
v24@0:8@16
@16@0:8
B16@0:8
v16@0:8
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@16@24
v56@0:8@16@24@32@40@?48
v44@0:8@16@24i32@?36
v40@0:8@16@24@?32
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
B32@0:8@16^@24
B24@0:8^@16
@24@0:8^@16
d16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
@24@0:8@16
@?16@0:8
@"SSRequest"
@"NSTimer"
v24@0:8d16
@"NSString"
v32@0:8@?16@?24
v88@0:8@16@24@32@40@48B56B60d64@72@?80
v96@0:8@16@24@32@40@48@56B64B68d72@80@?88
v48@0:8@16@24@32@?40
v64@0:8@16@24@32@40@48@?56
v96@0:8@16@24@32d40@48@56@64@72@80@?88
v96@0:8@16@24@32@40@48@56@64@72@80@?88
@40@0:8@16@24@32
@"DMDJobQueue"
@"DMDTimerContext"
@32@0:8@16^@24
v48@0:8@16B24B28@32@?40
v32@0:8@"SSAuthenticateRequest"16@"SSAuthenticateResponse"24
@"SSAccount"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
B32@0:8@16@24
@"CLLocationManager"
@"CLLocation"
@"NSError"
@28@0:8@16B24
@"NSSet"16@0:8
@"NSArray"16@0:8
v24@0:8Q16
@"NSObject<OS_os_transaction>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@48@0:8@16@24@32^@40
B40@0:8@16@24@32
v48@0:8@16@24@32@40
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
@"<DMDServerDelegate>"
@"NSXPCListener"
@"CATTaskServer"
@"CATOperationQueue"
@20@0:8i16
@44@0:8@16B24@28@36
v40@0:8@16@24Q32
@"UMUserSwitchBlockingTask"
@48@0:8@16Q24^Q32o^@40
@48@0:8{?=[8I]}16
@84@0:8@16@24@32@40@48@56Q64Q72B80
@32@0:8@16@24
@52@0:8@16@24q32B40@44
@32@0:8@16B24B28
v32@0:8@16B24B28
v44@0:8@16q24B32@36
q16@0:8
v24@0:8q16
@"NSNumber"
@"SSPurchase"
B28@0:8B16@20
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_group>"
@28@0:8^{__SecCertificate=}16B24
>@333333
@(#)PROGRAM:dmd  PROJECT:DeviceManagement-1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>16B2657</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>dmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>11.0</string>
<key>DTSDKBuild</key>
<string>15A301a</string>
<key>DTSDKName</key>
<string>iphonesimulator11.0</string>
<key>DTXcode</key>
<string>0900</string>
<key>DTXcodeBuild</key>
<string>9M136i</string>
<key>MinimumOSVersion</key>
<string>11.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.aosnotification.aosnotifyd-access</key>
<true/>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboard.wipedevice</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>com.apple.mobile.user_preferences/UserSetLanguage</string>
<string>com.apple.mobile.user_preferences/UserSetLocale</string>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
