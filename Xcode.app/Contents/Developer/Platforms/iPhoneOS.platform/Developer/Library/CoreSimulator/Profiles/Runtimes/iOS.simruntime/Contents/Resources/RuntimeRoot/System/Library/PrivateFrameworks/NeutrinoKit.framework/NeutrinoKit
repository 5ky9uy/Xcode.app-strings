class
layer
setPlayer:
addObserver:forKeyPath:options:context:
initWithFrame:
initWithCoder:
removeObserver:forKeyPath:context:
dealloc
isReadyForDisplay
_updateReadyForDisplayWithID:
observeValueForKeyPath:ofObject:change:context:
_setReadyForDisplay:
delegate
playerViewReadyForDisplayDidChange:
layerClass
.cxx_destruct
player
setDelegate:
_updateReadyForDisplayID
_readyForDisplay
_player
_delegate
init
viewImageSize
contentInsetsWithScale:
isFlipped
contentInsets
cropRect
angle
imageBounds
proposedBoundsForBounds:inFrame:
insetBoundsForCrop:inBounds:inFrame:
boundingCropRect
backingScale
setBackingScale:
imageSize
setImageSize:
setContentInsets:
setFlipped:
setAngle:
setCropRect:
origin
setOrigin:
maximumScale
setMaximumScale:
_flipped
_backingScale
_angle
_maximumScale
_imageSize
_origin
_contentInsets
_cropRect
alloc
setNeedsDisplayOnBoundsChange:
setNeedsDisplay
setOpaque:
setPresentsWithTransaction:
currentPlatform
hasExtendedColorDisplay
numberWithBool:
dictionaryWithObjects:forKeys:count:
setDrawableProperties:
bounds
size
initWithDrawable:
_drawInBuffer:context:
draw:
draw:block:
flushDrawableWithContext:
execute:
display
reset:
_context
_buffer
stringWithFormat:
callStackSymbols
componentsJoinedByString:
initWithSize:backingScaleFactor:
allocWithZone:
copyWithZone:
initWithSize:
description
backingSize
backingPosition
backingScaleFactor
position
setPosition:
anchorPoint
setAnchorPoint:
_backingScaleFactor
_size
_position
_anchorPoint
playerItem
setPlayerItem:
registeredKVO
setRegisteredKVO:
_registeredKVO
_playerItem
countByEnumeratingWithState:objects:count:
_removePlayerItemKVO:
_removePlayerKVO
currentItem
playerItemWithAsset:
copy
arrayWithObjects:count:
setVideoComposition:
setAudioMix:
_addPlayerItemKVO:
enumerateObjectsUsingBlock:
initWithItems:
setActionAtItemEnd:
setMuted:
auxiliarySession
setCategory:error:
setAudioSession:
_addPlayerKVO
items
objectForKey:
integerValue
isEqual:
playerControllerIsReadyForPlayback:
valueForKeyPath:
objectForKeyedSubscript:
seekToTime:completionHandler:
insertItem:afterItem:
_setRate:
duration
currentTime
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
playerControllerDidFinishPlaying:duration:
rate
setRate:
defaultCenter
removeObserver:name:object:
addObject:
playerItemDidReachEnd:
addObserver:selector:name:object:
prepareWithAVAsset:videoComposition:audioMix:loopsVideo:
updateVideoComposition:
updateAudioMix:
pause
play
setLoopsVideo:
seekForward
seekBack
updateInterval
setUpdateInterval:
videoAsset
videoComposition
audioMix
loopsVideo
isMuted
_playerControllerKVOFlags
_playerItemObservations
_loopsVideo
_muted
_updateInterval
_videoAsset
_videoComposition
_audioMix
contentSize
contentOffset
zoomScale
visibleRect
appendFormat:
transform
sublayerTransform
frame
isHidden
sublayers
_nu_recursiveDescriptionWithLevel:result:
nu_layerRecursiveDescription
setMasksToBounds:
setFrame:
addSublayer:
yellowColor
CGColor
setDebugColor:
setZPosition:
redColor
window
begin
setDisableActions:
commit
geometry
screen
scale
setBounds:
animationForKey:
removeAnimationForKey:
convertRect:toLayer:
setTransform:
transitionToSize:offset:duration:animationCurve:completion:
animationWithKeyPath:
setDuration:
setTimingFunction:
valueWithCATransform3D:
setToValue:
presentationLayer
setFromValue:
setRemovedOnCompletion:
setFillMode:
setCompletionBlock:
addAnimation:forKey:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
animationDidStart:
animationDidStop:finished:
_backfillLayer
_roiLayer
_containerLayer
inLiveResize
layoutSubviews
setGeometry:
convertRectToImage:
willMoveToWindow:
transitionToSize:duration:animationCurve:completion:
debugMode
setDebugMode:
_geometry
_transitionAnimationInFlight
_shouldRemoveAnimation
_geometryAnimationLayer
_debugMode
_debugToggle:
initWithTarget:action:
setNumberOfTouchesRequired:
addGestureRecognizer:
isViewDebugEnabled
_stopDeviceMotion
setBorderWidth:
whiteColor
setBorderColor:
_startDeviceMotion
_setupDeviceMotion
_resetOrientation:
state
setSublayerTransform:
setAnimationDuration:
functionWithName:
setAnimationTimingFunction:
setShowsDeviceMovementDisplay:
setDeviceMotionUpdateInterval:
stopDeviceMotionUpdates
isDeviceMotionAvailable
mainQueue
rotationRate
_orientWithX:andY:
startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:
_doubleTap
_showDebug
_motionManager
_setupViews
mediaViewDidFinishRendering:
mediaViewDidFinishRendering:withStatistics:
mediaView:didZoom:
mediaViewWillBeginZooming:
mediaViewDidEndZooming:
mediaViewDidUpdateLivePhoto:
mediaViewIsReadyForVideoPlayback:
mediaViewDidStartPreparingVideo:
mediaViewDidFinishPreparingVideo:
composition
setComposition:
_updateRenderContent
didMoveToWindow
setZoomScale:
_renderer
isZoomedToFit
minimumZoomScale
setMaximumZoomScale:
maximumZoomScale
setMinimumZoomScale:
isReady
_updateContentInsets
convertPoint:toImageFromView:
convertPoint:fromImageToView:
convertPoint:fromView:
convertPointToImage:
transformWithSourceSpace:destinationSpace:error:
transformPoint:
convertPointFromImage:
convertRect:fromImageToView:
initWithMediaView:
setAutoresizingMask:
setScrollEnabled:
setShowsVerticalScrollIndicator:
setShowsHorizontalScrollIndicator:
setAlwaysBounceVertical:
setAlwaysBounceHorizontal:
setClipsToBounds:
setContentInsetAdjustmentBehavior:
greenColor
addSubview:
setUserInteractionEnabled:
_proposedInsetsForInsets:contentSize:inFrame:centerContent:
_edgeInsetsForContentSize:inFrame:
contentInset
setContentInset:
loopsVideoPlayback
isVideoPlayerVisible
beginZooming
endZooming
beginPanning
endPanning
updateComposition:
wait
convertRect:fromView:
_beginTransition
animationDuration
_endTransition
setAlpha:
cyanColor
_videoPlayerView
removeFromSuperview
animateWithDuration:animations:completion:
setContentSize:
nuAVPlayerController
_livePhotoView
setValue:forKey:
_updateVideoPlayerAlpha
setFilters:
_setPipelineFilters:shouldUpdateContent:
pipelineFilters
setPipelineFilters:
_withComposition:visitRenderClient:
setVideoEnabled:
isVideoEnabled
alpha
animateWithDuration:animations:
_layerRecursiveDescription
playerController:didUpdateElapsedTime:duration:
setZoomScaleToFit
_imageLayer
convertPoint:fromView:toSpace:
convertPoint:fromSpace:toView:
imageFrame
setEdgeInsets:
setCenterContent:
viewForZoomingInScrollView:
scrollViewDidZoom:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewWillBeginDragging:
scrollViewDidScroll:
scrollViewDidEndDragging:willDecelerate:
scrollViewDidEndDecelerating:
waitForRender
_transitionToInsets:
_videoPlayerViewWithoutControls
_rendererDidCreateAVPlayerController:
_rendererDidFinishWithStatistics:
_rendererDidUpdateLivePhoto
_rendererDidStartPreparingVideo
_rendererDidFinishPreparingVideo
setLoopsVideoPlayback:
_startLoopPlayback
setVideoPlayerVisible:
_stopLoopPlayback
_scrollView
_renderView
_setLayerFilters:
_viewRecursiveDescription
edgeInsets
_masterSizeWithoutGeometry
set_masterSizeWithoutGeometry:
centerContent
isDebugEnabled
setDebugEnabled:
scrollUpdatesSuppressed
setScrollUpdatesSuppressed:
_edgeInsets
_nuAVPlayerController
_playerView
_delegateFlags
_transitionCount
_centerContent
_videoPlayerVisible
_debugEnabled
_scrollUpdatesSuppressed
__masterSizeWithoutGeometry
initWithType:source:
initWithShader:
vec2Attribute:
initWithAttributes:
vertexShaderProgram
fragmentShaderProgram
initWithStages:
vertexLayout
initWithLayout:capacity:
imageLayerDebug
_image
set_image:
set_geometry:
renderScale
resetGLObject
backgroundColor
clearBackground:context:
setViewport:
reset
contentsAreFlipped
valueWithMat4:
setValue:forUniform:
regionWithRect:
drawImage:region:context:
run:block:
clearWithRed:green:blue:alpha:
beginAccessRegion:
validRegion
regionByClippingToRegion:
isEmpty
contentRect
regionByClippingToRect:
frameRect
texture
drawTexture:inRect:atPoint:context:
enumerateRects:
readTextureRegion:withBlock:
endAccessRegion:
identifier
writeVertexData:context:block:
initWithTexture:
setSampler:forUniform:
debugColor
valueWithVec4:
drawVertexArray:range:mode:
image
setImage:
_pipeline
_vertices
_debugTextureDrawing
_debugColor
__image
__geometry
scaledExtent
scaledSize
regionForGeometry:
initWithViewport:
_viewport
subviews
_recurseView:filter:
initWithName:responseQueue:
setShouldCoalesceUpdates:
initWithLevel:
setPriority:
initWithDelay:
supportsLiveVideoRendering
initWithComposition:
setScalePolicy:
setRegionPolicy:
colorSpace
setColorSpace:
pixelFormat
setPixelFormat:
setTime:
mediaView
mediaType
setMediaType:
_updateDisplayForMediaType:
_updateImageRenderForComposition:
_updateVideoComposition:
_coalesceUpdateVideoComposition:
_coalesceUpdateLivePhotoComposition:
_beginAnimating
_endAnimating
_updateBackfillLayerWithLatestRenderResponse
_updateROILayerWithLatestRenderResponse
convertPoint:fromLayer:
convertPoint:toLayer:
convertRect:fromLayer:
_scrollBounds
targetSize
setHidden:
_backfillRenderRequestForComposition:
_videoFrameImageRenderResponseHandler
submitGenericRequest:completion:
_zoomRenderRequestForComposition:
_zoomRenderResponseHandler
_backfillRenderResponseHandler
commitAndNotifyOnQueue:withBlock:
_updateROILayerWithRenderResponse:
_updateBackfillLayerWithRenderResponse:
_updateImageLayer:withRenderResponse:
isMainThread
result:
_renderFinishedWithGeometry:layer:
statistics
_setDisplayType:
cancel
_addFullExtentConstraintsForView:
_updateLivePhotoWithResponse:
initWithSource:
initWithScript:
computedDisplayType
previousVideo
avAsset
_forceUpdateForNewVideoComposition:previousComposition:newAsset:previousAsset:
repeatVideo:count:error:
repeatVideoComposition:count:error:
repeatAudio:count:error:
_updateVideoViewLayoutWithGeometry:
setPreviousVideo:
initWithName:
cacheVideoRenderFilter
arrayByAddingObject:
_updateVideoWithResult:
submitPropertiesRequestForComposition:completion:
coalesceBlock:
_updateLivePhotoComposition:
initWithTargetSize:
submitRequest:
video
photoTime
photo
initWithCGImage:
initWithImage:videoAsset:photoTime:assetLocalIdentifier:options:videoComposition:
_livePhotoFromResponse:
valueForKey:
_targetZoomScale
initWithZoomFactor:
_zoomTargetRect
_regionPolicyForZoomTargetRect:
newRenderRequestForComposition:scalePolicy:regionPolicy:
_lastRenderDuration
totalDuration
setTranslatesAutoresizingMaskIntoConstraints:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
_setVideoEnabled:
_isVideoEnabled
renderSize
convertRect:toImageFromView:
renderClient
setDisplayType:
livePhotoView:willBeginPlaybackWithStyle:
livePhotoView:didEndPlaybackWithStyle:
livePhotoViewDidBeginScrubbing:
livePhotoViewDidEndScrubbing:
displayType
_zoomClient
_backfillClient
_livePhotoClient
_videoClient
_livePhotoUpdateCoalescer
_videoUpdateCoalescer
_canRenderVideoLive
_videoRenderInFlightCount
_renderGroup
_renderQueue
_zoomRenderResponse
_backfillRenderResponse
_lastZoomRect
_lastZoomScale
_lastZoomRenderTime
_lastZoomRenderStatistics
_lastBackfillRenderStatictics
_isPanning
_isZooming
__videoEnabled
_composition
_colorSpace
_pixelFormat
_mediaView
_pipelineFilters
_maximumZoomScale
_displayType
_computedDisplayType
_previousVideo
readyForDisplay
v8@?0
TB,N,GisReadyForDisplay,S_setReadyForDisplay:,V_readyForDisplay
player
T@"AVPlayer",&,N,V_player
delegate
T@"<NUAVPlayerViewDelegate>",W,N,V_delegate
backingScale
Td,N,V_backingScale
imageSize
T{CGSize=dd},N,V_imageSize
viewImageSize
T{CGSize=dd},R,N
contentInsets
T{UIEdgeInsets=dddd},N,V_contentInsets
flipped
TB,N,GisFlipped,V_flipped
angle
Td,N,V_angle
cropRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cropRect
origin
T{CGPoint=dd},N,V_origin
maximumScale
Td,N,V_maximumScale
imageBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
boundingCropRect
Initializer not available: -[%@ %@], use designated initializer instead.
-[NUViewport init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoImaging_Sim/PhotoImaging-3402.1.132/Kit/Common/NUViewport.m
Invalid parameter not satisfying: %s
size.width > 0.0
-[NUViewport initWithSize:backingScaleFactor:]
size.height > 0.0
factor > 0.0
<%@:%p size=%gx%g scale=%g position:(%g,%g) anchor:(%g,%g)>
size
T{CGSize=dd},R,N,V_size
backingScaleFactor
Td,R,N,V_backingScaleFactor
backingSize
T{CGSize=dd},R,D,N
position
T{CGPoint=dd},N,V_position
backingPosition
T{CGPoint=dd},R,D,N
anchorPoint
T{CGPoint=dd},N,V_anchorPoint
status
playerItem
T@"AVPlayerItem",&,N,V_playerItem
registeredKVO
TB,N,V_registeredKVO
v32@?0@"AVPlayerItem"8Q16^B24
v12@?0B8
rate
currentItem
updateInterval
Td,N,V_updateInterval
videoAsset
T@"AVAsset",R,N,V_videoAsset
videoComposition
T@"AVVideoComposition",R,N,V_videoComposition
audioMix
T@"AVAudioMix",R,N,V_audioMix
T@"<NUAVPlayerControllerDelegate>",W,N,V_delegate
loopsVideo
TB,N,V_loopsVideo
muted
TB,N,GisMuted,V_muted
%@; zoomScale: %g
, %@ = {{%g, %g, %g, %g}, {%g, %g, %g, %g}, {%g, %g, %g, %g}, {%g, %g, %g, %g}}
transform
sublayerTransform
<%p %@> frame = %@, bounds = %@%@%@, isHidden = %@, position = %@, anchor = %@
NUTransitionAnimationKey
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
debugMode
TB,N,V_debugMode
geometry
T@"NUImageGeometry",&,N
v24@?0@"CMDeviceMotion"8@"NSError"16
/Image
Cannot establish a mapping from space %@ to space %@: %@
-[NUMediaView convertPoint:fromView:toSpace:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoImaging_Sim/PhotoImaging-3402.1.132/Kit/iOS/NUMediaView.m
-[NUMediaView convertPoint:fromSpace:toView:]
PHLivePhotoView
_masterSizeWithoutGeometry
T{CGSize=dd},N,V__masterSizeWithoutGeometry
pipelineFilters
T@"NSArray",N
centerContent
TB,N,V_centerContent
videoEnabled
TB,N,GisVideoEnabled
loopsVideoPlayback
TB,N
videoPlayerVisible
TB,N,GisVideoPlayerVisible,V_videoPlayerVisible
debugEnabled
TB,N,GisDebugEnabled,V_debugEnabled
scrollUpdatesSuppressed
TB,N,V_scrollUpdatesSuppressed
T@"<NUMediaViewDelegate>",W,N,V_delegate
composition
T@"NUComposition",C,N
edgeInsets
T{UIEdgeInsets=dddd},N,V_edgeInsets
zoomScale
Td,N
minimumZoomScale
maximumZoomScale
imageFrame
attribute vec2 position;
attribute vec2 texture;
varying vec2 coords;
uniform mat4 scaleAndTranslate;
void main() {
  coords = texture.xy;
  gl_Position = scaleAndTranslate * vec4(position, 0.0, 1.0);
texture
const highp mat3 m = mat3(1.224857, -0.225095, 0.000014,-0.042031, 1.042154, 0.000034,-0.019630, -0.078632, 1.097989);
uniform sampler2D image;
varying mediump vec2 coords;
uniform highp vec4 debugColor;
void main() {
highp vec4 color = texture2D(image, coords);
color.rgb = color.rgb * m;
gl_FragColor = mix(color, debugColor, debugColor.a);
uniform sampler2D image;
varying mediump vec2 coords;
uniform highp vec4 debugColor;
void main() {
highp vec4 color = texture2D(image, coords);
gl_FragColor = mix(color, debugColor, debugColor.a);
scaleAndTranslate
v40@?0{?={?=qq}{?=qq}}8
v24@?0@"<NUTextureTile>"8^B16
v32@?0^v8q16q24
image
debugColor
_image
T@"<NUTextureImage>",&,V__image
_geometry
T@"NUImageGeometry",&,V__geometry
T@"<NUTextureImage>",&
T@"NUImageGeometry",&
T^{CGColor=},V_debugColor
bad color: %@
GLvec4 GLvec4FromCGColor(CGColorRef _Nullable)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoImaging_Sim/PhotoImaging-3402.1.132/Kit/Common/NUImageLayer.m
-[NUViewportRegionPolicy init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoImaging_Sim/PhotoImaging-3402.1.132/Kit/Common/NUViewportRegionPolicy.m
viewport != nil
-[NUViewportRegionPolicy initWithViewport:]
<%@: %p> viewport=%@
View Controller Image Response
viewer roi
viewer backfill
-[NUMediaViewRenderer init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PhotoImaging_Sim/PhotoImaging-3402.1.132/Kit/Common/NUMediaViewRenderer.m
Unknown mediaType for composition: %@
-[NUMediaViewRenderer updateComposition:]
nil render layer
-[NUMediaViewRenderer _renderFinishedWithGeometry:layer:]
v16@?0@"NUResponse"8
This code must be running on the main thread
-[NUMediaViewRenderer _updateImageLayer:withRenderResponse:]
We must have a known display type
-[NUMediaViewRenderer _updateDisplayForMediaType:]
viewer LivePhoto
v16@?0^{NUResponse=#}8
let output = input;
if (mediaComponentType == 'Video') {
    output = Cache(input, 'Video', {});
return output;
Could not construct pipeline filter from source: %@
-[NUMediaViewRenderer cacheVideoRenderFilter]_block_invoke
We should have an initialized AV player controller
-[NUMediaViewRenderer _updateVideoWithResult:]
video properties
PHLivePhoto
livePhoto
setLivePhoto:
setOverridePhoto:
H:|[v]|
V:|[v]|
_videoEnabled
TB,N,G_isVideoEnabled,S_setVideoEnabled:,V__videoEnabled
previousVideo
T@"AVComposition",&,N,V_previousVideo
T@"NUComposition",C,N,V_composition
colorSpace
T@"NUColorSpace",&,N,V_colorSpace
pixelFormat
T@"NUPixelFormat",&,N,V_pixelFormat
mediaView
T@"NUMediaView",R,W,N,V_mediaView
T@"NSArray",C,N,V_pipelineFilters
zoomedToFit
TB,R,N,GisZoomedToFit
Td,N,V_maximumZoomScale
isReady
TB,R
nuAVPlayerController
T@"NUAVPlayerController",R,N,V_nuAVPlayerController
displayType
TQ,N,V_displayType
computedDisplayType
TQ,R,N,V_computedDisplayType
NUAVPlayerView
NUViewGeometry
NUGLLayer
NUViewport
NSCopying
_NUAVPlayerItemObservation
NUAVPlayerController
NUScrollView
NeutrinoUIDebugging
_NUROILayer
_NUBackfillLayer
_NUContainerLayer
NURenderView
CAAnimationDelegate
NSObject
NUDebugRenderView
NUMediaView
NUAVPlayerControllerDelegate
NUAVPlayerViewDelegate
NUImageLayer
NUViewportRegionPolicy
NURegionPolicy
NeutrinoAdditions
NUMediaViewRenderer
Private
#16@0:8
v24@0:8@16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
v16@0:8
v48@0:8@16@24@32^v40
v20@0:8Ai16
v20@0:8B16
@16@0:8
B16@0:8
@"AVPlayer"
@"<NUAVPlayerViewDelegate>"
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
{CGRect={CGPoint=dd}{CGSize=dd}}112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80
{UIEdgeInsets=dddd}24@0:8d16
d16@0:8
v24@0:8d16
v32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v32@0:8@16@24
@"NUGLContext"
@"NUGLRenderbuffer"
@24@0:8^{_NSZone=}16
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@"AVPlayerItem"
B44@0:8@16@24@32B40
v20@0:8f16
{?="registeredPlayer"B}
@"NSMutableArray"
@"AVAsset"
@"AVVideoComposition"
@"AVAudioMix"
@"<NUAVPlayerControllerDelegate>"
v32@0:8q16@24
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v56@0:8{CGSize=dd}16d32@40@?48
v72@0:8{CGSize=dd}16{CGPoint=dd}32d48@56@?64
@"_NUBackfillLayer"
@"_NUROILayer"
@"_NUContainerLayer"
@"NUImageGeometry"
@"CALayer"
v32@0:8d16d24
@"UILongPressGestureRecognizer"
@"CMMotionManager"
{UIEdgeInsets=dddd}100@0:8{UIEdgeInsets=dddd}16{CGSize=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64B96
v32@0:8@16d24
v40@0:8@16d24d32
v24@0:8@"NUAVPlayerController"16
v32@0:8@"NUAVPlayerController"16d24
v40@0:8@"NUAVPlayerController"16d24d32
v24@0:8@"NUAVPlayerView"16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGPoint=dd}48@0:8{CGPoint=dd}16@32@40
{UIEdgeInsets=dddd}64@0:8{CGSize=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
v40@0:8@16@24d32
v32@0:8@16@?24
@"NURenderView"
@"NUScrollView"
@"NUMediaViewRenderer"
@"NUAVPlayerController"
@"NUAVPlayerView"
@"UIView"
{?="hasDidFinishRendering"B"hasDidUpdateLivePhoto"B"hasDidFinishRenderingWithStatistics"B"hasDidZoom"B"hasWillBeginZooming"B"hasDidEndZooming"B"hasIsReadyForVideoPlayback"B"hasDidStartPreparingVideo"B"hasDidFinishPreparingVideo"B}
@"<NUMediaViewDelegate>"
v32@0:8^{CGColor=}16@24
v40@0:8@16@24@32
v80@0:8@16{?={?=qq}{?=qq}}24{?=qq}56@72
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
@"NUGLPipeline"
@"NUGLVertexArray"
^{CGColor=}
@"<NUTextureImage>"
@"NURegion"24@0:8@"NUImageGeometry"16
@"NUViewport"
B48@0:8@16@24@32@40
@40@0:8@16@24@32
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@?16@0:8
@32@0:8@16@24
v24@0:8q16
v24@0:8Q16
v32@0:8@16q24
@"NUSurfaceRenderClient"
@"NULivePhotoRenderClient"
@"NUVideoRenderClient"
@"NUCoalescer"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_queue>"
@"NUResponse"
@"<NURenderStatistics>"
@"NUComposition"
@"NUColorSpace"
@"NUPixelFormat"
@"NUMediaView"
@"NSArray"
@"AVComposition"
?@(#)PROGRAM:NeutrinoKit  PROJECT:Neutrino-3402.1.132
33333
NUGLLayer cannot display: zero size
Fail: %{public}@
Trace: %{public}@
<%p> AVPlayerStatusUnknown
<%p> AVPlayerStatusReadyToPlay
<%p> AVPlayerStatusFailed
<%p> rate %@
<%p> kPlayerCurrentItemCtx
setEdgeInsets on scrollview %p %@, content size = %@
<controller: %p> %g
<controller: %p> %g %g
<controller: %p> 
Drawing texture %d from rect: %@ at point: %@
Waited for %0.1f ms
renderedScale = %g, minimumScale = %g, maximumScale = %g
Update Composition
Error: %{public}@
Error loading LivePhoto: %{public}@
Nil video asset received
Failed to repeat video composition %@
Failed to repeat audio mix %@
Failed to update video composition: %{public}@
targetRect: %@, clipRect: %@, dx = %f, dy = %f, dr = %f, dt= %f
