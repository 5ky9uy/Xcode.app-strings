Home
HomeRoamingOn
plan
uuid
iccid
isSelectedOverride
name
type
lockState
displayType
isSelectable
shouldDisplay
shouldAppearDisabled
isActiveDataPlan
isDefaultVoice
companionSlotUuid
phoneNumber
label
deprecateLabel
Regular
Removable
Embedded
Unknown
<item: uuid:%@ iccid:%@ name:%@, type:%@, validstate:%d, selected:%@, selectable:%d, activeData:%d, defaultVoice:%d, slotUuid:%@, number:%@, label:%@ carrier:%@, plan:%@>
supportsSecureCoding
TB,R
T@"NSNumber",&,N,V_isSelectedOverride
Tq,N,V_type
Tq,N,V_lockState
shouldDisplayType
TB,N,V_shouldDisplayType
shouldAutoSelectWhenInRange
TB,N,V_shouldAutoSelectWhenInRange
isSimStateValid
TB,N,V_isSimStateValid
TB,N,V_isSelectable
TB,N,V_shouldAppearDisabled
TB,N,V_isActiveDataPlan
TB,N,V_isDefaultVoice
T@"NSUUID",C,N,V_companionSlotUuid
T@"NSString",N,V_phoneNumber
T@"NSString",N,V_label
userLabel
T@"CTUserLabel",N,V_userLabel
identifier
T@"NSString",R,N
T@"CTCellularPlan",R,N,V_plan
isBackedByCellularPlan
TB,R,N
isSelected
TB,R,N,V_shouldDisplay
isInstalling
T@"NSString",R,N,V_uuid
carrierName
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
CTCellularPlanError
Parsing Error
There was an error creating the request
Inconsistent State
Failed to perform action successfully
One of the arguments is invalid
The response was invalid
The client is not properly entitled
Location service is disabled
Location service is denied
Location service is not authorized
Location is not available
Busy processing a prior operation
Roaming is disabled
Cannot add another faux card for same carrier
CSN is not available
Action is not supported
Installation failed
Missing confirmation code
Pending install requires delete
SKU Mismatch
Carrier doesn't support feature
Cannot activate plan, carrier mismatch
Cannot activate plan, subscription mismatch
Installation Failure, invalid profile policy
Installation Failure, faux card & carrier mismatch
User is not entitled for Multi-SIM service
Airplane mode is on
Cellular data turned off
Remote device is locked. Please unlock
SIM card is PIN locked
Unknown Error
ICCID
subscriptionResult
autoRenew
billingEndDate
billingStartDate
carrier
planType
planDescription
dataUsage
planStatus
accountStatus
accountURL
timestamp
homeCountryIso
dataCapacity
dataUsed
dataCategory
responseCode
Error parsing response either code not present or invalid
responseDetails
PrePaid
PostPaid
Other
Subscribed
Depleted
Throttled
NotSubscribed
Active
Pending
Failed
Inactive
sessionId
error parsing session - %@
podIdentifier
serviceDiscovery
handoffToken
shouldPurchase
shouldDownloadProfile
countries
restrictedCountries
action
redirect
method
POST
parameters
websheetUrl
applePay
responseType
warningText
<%@: %p Carrier Name: %@ URL: %@ ApplePay: %d Response Type: %@ warningText: %@>
applePaySupported
TB,N,V_applePaySupported
T@"NSString",R,N,V_name
websheetURL
T@"NSString",R,N,V_websheetURL
planPurchaseEndpointType
T@"NSString",R,N,V_planPurchaseEndpointType
T@"NSString",R,N,V_warningText
com.apple.CellularPlanDaemon.xpc
Expired
Activating
SimDeviceMismatch
SimProvisioningError
NotAvailable
Preinstall
UserConsentRequired
Deleting
PendingRelease
Selecting
subscription
profile
subscriptionStatusOverride
<plan: subscription override:%@, %@ %@>
T@"CTCellularPlanProfile",&,N,V_profile
T@"CTCellularPlanSubscription",&,N,V_subscription
T@"NSNumber",&,N,V_subscriptionStatusOverride
isHomePlan
TB,N,V_isHomePlan
T@"NSString",&,N,V_phoneNumber
requiresUserConsent
TB,N,V_requiresUserConsent
profileId
T@"NSData",R,N
Td,R,N
Ti,R,N
isDisableNotAllowed
isDeleteNotAllowed
T@"NSArray",R,N
status
v8@?0
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ssz
<%@: %p>
category:%@, (%f bytes / %f bytes) >
Td,R,N,V_dataUsed
Td,R,N,V_dataCapacity
T@"NSString",R,N,V_dataCategory
<subscription: iccid:%@, complete:%d, autoRenew:%d, billingEnd:%f billingStart:%f carrierName:%@ planType:%d planDescription:%@ planStatus:%d accountStatus:%d, accountURL:%@, timestamp:%f, homeCountryList: %@ dataUsage %@ >
Ti,N,V_subscriptionResult
Ti,N,V_planStatus
T@"NSString",N,V_carrierName
T@"NSString",R,N,V_iccid
TB,R,N,V_autoRenew
Td,R,N,V_billingStartDate
Td,R,N,V_billingEndDate
Ti,R,N,V_planType
T@"NSString",R,N,V_planDescription
Ti,R,N,V_accountStatus
T@"NSString",R,N,V_accountURL
Td,R,N,V_timestamp
homeCountryList
T@"NSArray",R,N,V_homeCountryList
T@"NSArray",R,N,V_dataUsage
isBootstrap
isActive
<plan: iccid:%@, isSelected:%d, isDisableNotAllowed:%d, isDeleteNotAllowed:%d, requiresUserConsent:%d>
TB,N,V_isSelected
TB,N,V_isBootstrap
TB,N,V_isDisableNotAllowed
TB,N,V_isDeleteNotAllowed
T@"NSData",C,N,V_profileId
T@"NSString",C,N,V_iccid
com.apple.CellularPlanManager.database.xpc
com.apple.CellularPlanManager.vinylTest.xpc
CTCellularPlanInfoDidChangeNotification
CTCellularPlanLocalInfoDidChangeNotification
CTCellularPlanLocalInfoError
CTCarrierInfoDidChangeNotification
CTCellularPlanRemoteProvisioningDidBecomeAvailable
CTCellularPlanSubscriptionKey
CTCellularPlanLaunchOptionsURLKey
CTCellularPlanLaunchOptionsFlowTypeIsSequoiaKey
CTCellularPlanLaunchOptionsFlowTypeIsRemotePlanKey
CTCellularPlanLaunchOptionsFlowTypeIsSimSetupKey
CTCellularPlanLaunchOptionsAppNameKey
CTCellularPlanLaunchOptionsFlowTypeIsLegacyKey
CTCellularPlanLaunchOptionsResponseTypeIsBuddyMLKey
CTCellularPlanLaunchOptionsIccidKey
CTCellularPlanLaunchOptionsParametersKey
CTCellularPlanLaunchOptionsUseBootstrapRoamingInternetBypassKey
CTCellularPlanLaunchOptionsCsnKey
CTCellularPlanLaunchOptionsCarrierPostData
com.apple.CommCenter.CellularPlanProvisioning
kCTDaemonReadyNotification
Xpc Connection invalidated
Connected to Xpc Service
com.apple.CoreTelephony.CellularPlan
Failed to create synchronous remote object proxy: %@
v16@?0@"NSError"8
ping
no proxy
proxy error, error: %@
v12@?0B8
v24@?0Q8@"NSError"16
-[CTCellularPlanManager getSupportedFlowTypes]
unable to get connection settings %@
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSDictionary"24
unable to get IMEI prefix %@
v16@?0@"NSString"8
unable to set IMEI prefix %@
unable to get eSim server url %@
unable to set eSim server url %@
unable to get Env index %@
v16@?0q8
unable to set Env index %@
unable to get Proxy index %@
unable to set Proxy index %@
unable to set new cellular plan UI %@
unable to set show Ui ignoring activation flags %@
unable to enable vinyl flow types %@
-[CTCellularPlanManager getEnableVinylFlowTypeOverride]
unable to get mcc/mnc overrides %@
v24@?0q8q16
unable to set mcc/mnc %@
v24@?0d8d16
unable to set lat/long %@
%s: Error creating proxy: %@
-[CTCellularPlanManager loadPlansWithUrl:postData:completion:]_block_invoke_2
%s: failed to create request
-[CTCellularPlanManager loadPlansWithUrl:postData:completion:]_block_invoke
%s: Error: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreTelephonyFramework_Sim/CoreTelephony-6344.3.2/CellularPlanManager/CTCellularPlanManager.m
nil != data && "data can't be nil with no error"
v32@?0@"NSURLResponse"8@"NSData"16@"NSError"24
Error creating proxy for getting subscription details %@
Will get new profile
v16@?0B8B12
Got fetch profiles completion
Got a new plan no need to fetch plans.
-[CTCellularPlanManager _plansForRenewal:progress:completion:additionalParameters:]_block_invoke
nil != createSessionData && "data can't be nil with no error"
error creating session
error getting session ID
Saving session id - %@
Error obtaining signIdMap %@
map && "no map from commcenter"
v24@?0@"NSString"8@"NSError"16
Error fetching profiles %@
v20@?0B8@"NSError"12
v24@?0@"NSArray"8@"NSError"16
-[CTCellularPlanManager shouldShowPlanList]
-[CTCellularPlanManager isAddButtonEnabled]
planItemsShouldUpdate
Error getting plan items %@
-[CTCellularPlanManager planItemsShouldUpdate:]
carrierItemsShouldUpdate
Error getting carrier items %@
Error getting device info %@
didSelectPlanItem enable: %d
didselect completion
-[CTCellularPlanManager didSelectPlanItem:isEnable:]
didselect completion, was successful: %d
didselectplanfordata
didselectplanfordata completion
-[CTCellularPlanManager didSelectPlanForData:]
didselectplanfordata completion, was successful: %d
-[CTCellularPlanManager setLabelForPlan:label:]
didSelectPlanForDefaultVoice
didSelectPlanForDefaultVoice completion
-[CTCellularPlanManager didSelectPlanForDefaultVoice:]
didSelectPlanForDefaultVoice completion, was successful: %d
didSelectPlanForIMessage
didSelectPlanForIMessage completion
-[CTCellularPlanManager didSelectPlanForIMessage:]
didSelectPlanForIMessage completion, was successful: %d
manage account
manage account completion
Delete plan
Delete Plan completion
Erase All Plans
Erase All Plans completion
-[CTCellularPlanManager planLaunchInfoWithCompletion:]
%s: Proxy Error %@
-[CTCellularPlanManager planLaunchInfoWithCompletion:]_block_invoke_2
v32@?0@"NSString"8@"NSDictionary"16@"NSError"24
-[CTCellularPlanManager didPurchasePlanForCsn:iccid:profileServer:]
Error getting proxy %@
Error open URL: %d, error: %@
v36@?0B8Q12@"NSString"20@"NSError"28
proxy_select
proxy_select completion
proxy_delete
proxy_delete completion
getRemoteInfo completed
v24@?0@"NSDictionary"8@"NSError"16
didPurchaseRemotePlanForEid
didCancelRemotePlan
pendingReleaseRemotePlan
-[CTCellularPlanManager remotePlanLaunchInfoForEid:completion:]
eraseAllRemotePlansWithCompletion
prxoy_erase_remote_plans
proxy_erase_remote_plans completion
-[CTCellularPlanManager getPredefinedLabels]
userDidProvideConsentResponse: %ld
getSubscriptionContextUUIDforPlan: %@
planInfoDidUpdate
localPlanInfoDidUpdate: %@
carrierInfoDidUpdate
remoteProvisioningDidBecomeAvailable
subscriptionDetails %@
Proxy
ConnectionProperties
Timeout
RequestUrls
+[CTCellularPlanRequest initialize]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreTelephonyFramework_Sim/CoreTelephony-6344.3.2/CellularPlanManager/CTCellularPlanRequest.m
nil == CellularPlanRequestQueue && "CellularPlanRequestQueue already exists"
Accept
application/json
Content-Type
Invalid Server Response Code %ld
-[CTCellularPlanRequest _callback]
_queue && "no queue"
next connection - %d
loading url %@, properties = %@
-[CTCellularPlanRequest _startRequestWithNextConnectionTypeOrFail]
CellularPlanRequestQueue && "CellularPlanRequestQueue does not exist yet"
-[CTCellularPlanRequest startRequestWithReplyQueue:completion:]
queue && "no queue"
completionBlock && "no completion block passed in"
connection failed with error - %@
overriding request URLS - %@
queue
T^{dispatch_queue_s=},N,V_queue
completionBlock
T@?,C,N,V_completionBlock
connection
T@"NSURLConnection",&,N,V_connection
receivedData
T@"NSMutableData",&,N,V_receivedData
request
T@"NSMutableURLRequest",&,N,V_request
response
T@"NSURLResponse",&,N,V_response
error
T@"NSError",&,N,V_error
serializedCookies
T@"NSData",N
https://sq-device.apple.com/customer/CreateSession
CreateSession
https://sq-device.apple.com/customer/RequestPlans
RequestPlans
https://sq-device.apple.com/customer/GetSubscriptionDetails
GetSubscriptionDetails
https://sq-device.apple.com/customer/InitiatePurchase
InitiatePurchase
https://sq-device.apple.com/customer/Purchase
Purchase
signedIdMapInfo
iccids
exception creating json object
renew
getAll
requestHandoff
RequestHandoff
selectedOfferingCode
receipt
dsPersonId
dsName
labelKey
Customized
<userLabel: key:%@ label:%@>
T@"NSString",R,N,V_key
T@"NSString",R,N,V_label
init
copy
retain
label
initWithCellularPlan:uuid:iccid:name:type:phoneNumber:label:
class
allocWithZone:
autorelease
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
uuid
compare:options:
isSelectedOverride
boolValue
plan
status
isBackedByCellularPlan
iccid
planDescription
carrierName
typeAsString:
stringWithFormat:
release
dealloc
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
initWithCellularPlan:uuid:
initWithCellularPlan:uuid:type:phoneNumber:label:
initWithIccid:uuid:name:phoneNumber:label:
compare:
isSelectable
isSelected
isInstalling
identifier
name
companionSlotUuid
description
setLabel:
type
setType:
lockState
setLockState:
shouldDisplayType
setShouldDisplayType:
shouldAutoSelectWhenInRange
setShouldAutoSelectWhenInRange:
isSimStateValid
setIsSimStateValid:
shouldDisplay
shouldAppearDisabled
setShouldAppearDisabled:
isActiveDataPlan
setIsActiveDataPlan:
isDefaultVoice
setIsDefaultVoice:
phoneNumber
setPhoneNumber:
userLabel
setUserLabel:
setIsSelectedOverride:
setIsSelectable:
setCompanionSlotUuid:
_name
_iccid
_shouldDisplayType
_shouldAutoSelectWhenInRange
_isSimStateValid
_shouldDisplay
_shouldAppearDisabled
_isActiveDataPlan
_isDefaultVoice
_isSelectable
_label
_plan
_type
_lockState
_uuid
_phoneNumber
_userLabel
_isSelectedOverride
_companionSlotUuid
setWithObjects:
alloc
initVinylTestServer
setDelegate:
_setQueue:
resume
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retainCount
zone
hash
superclass
debugDescription
getSerialNumber:
triggerDownloadCheck
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
addObject:
countByEnumeratingWithState:objects:count:
invalidate
removeAllObjects
stop
listener:shouldAcceptNewConnection:
initWithQueue:andDelegate:
fXpcListener
fXpcConnections
fDelegate
errorForCode:withDescription:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
errorForCode:
validate:
objectForKey:
intValue
validate:parseTo:responseText:error:
isEqualToString:
validate:parseTo:
doubleValue
initWithCategory:andDataUsed:andDataCapacity:
initWithIccid:subscriptionResult:autoRenew:billingStartDate:billingEndDate:carrierName:planType:planDescription:planStatus:accountStatus:accountURL:timestamp:homeCountryList:dataUsage:
JSONObjectWithData:options:error:
sessionIdFromObject:
objectForKeyedSubscript:
sessionIdFromJsonData:
parseCreateSessionResponseData:intoSessionId:podId:urls:error:
parseHandoffTokenResponseData:intoHandoffToken:error:
parseInitiatePurchaseResponseData:intoShouldPurchase:responseCode:responseText:buddyML:error:
parsePurchaseResponseData:intoShouldDownloadProfile:iccid:responseCode:responseText:error:
parseSubscriptionsResponseData:intoSubscriptions:error:
parseCountryListResponseData:intoSupportedCountryList:intoUnsupportedCountryList:error:
parseResponseJson:setUrl:setParameters:
initWithName:url:applePaySupported:responseType:warningText:
websheetURL
applePaySupported
setApplePaySupported:
planPurchaseEndpointType
warningText
_websheetURL
_planPurchaseEndpointType
_warningText
_applePaySupported
initWithProfile:subscription:
profileId
subscriptionStatusOverride
planStatus
autoRenew
timestamp
billingStartDate
billingEndDate
planType
length
accountStatus
accountURL
isDisableNotAllowed
isDeleteNotAllowed
requiresUserConsent
dataUsage
setSubscriptionStatusOverride:
statusAsString:
planDescriptionCompare:
isHomePlan
setIsHomePlan:
profile
setProfile:
subscription
setSubscription:
setRequiresUserConsent:
_isHomePlan
_requiresUserConsent
_profile
_subscription
_subscriptionStatusOverride
initWithLocaleIdentifier:
setLocale:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
dateFromString:
timeIntervalSinceReferenceDate
numberWithDouble:
dataUsed
dataCapacity
dataCategory
_dataUsed
_dataCapacity
_dataCategory
subscriptionResult
decodeIntForKey:
decodeObjectOfClasses:forKey:
encodeInt:forKey:
numberWithBool:
numberWithInt:
isEqualOrNewerThanSubscription:
setCarrierName:
setPlanStatus:
homeCountryList
setSubscriptionResult:
_autoRenew
_planType
_planStatus
_accountStatus
_subscriptionResult
_billingStartDate
_billingEndDate
_carrierName
_planDescription
_accountURL
_timestamp
_homeCountryList
_dataUsage
setProfileId:
setIccid:
setIsSelected:
setIsBootstrap:
setIsDisableNotAllowed:
setIsDeleteNotAllowed:
initWithProfileId:iccid:selected:bootstrap:disableNotAllowed:deleteNotAllowed:requiresUserConsent:
isBootstrap
_isSelected
_isBootstrap
_isDisableNotAllowed
_isDeleteNotAllowed
_profileId
initWithMachServiceName:options:
initCellularPlanDatabaseClient
initVinylTestClient
initWithMachServiceName:
initCellularPlanDatabaseServer
setInvalidationHandler:
ping
_connect_sync
getPredefinedLabels:
getSubscriptionContextUUIDforPlan:completion:
isNewDataPlanCapable:
getSupportedFlowTypes:
startProvisioningWithCompletion:
finishProvisioningWithCompletion:
addNewPlanWithCarrierItem:triggerType:userConsent:completion:
addNewPlanWithCardData:confirmationCode:triggerType:userConsent:completion:
addNewPlanWithAddress:matchingId:oid:confirmationCode:triggerType:userConsent:completion:
addNewPlanWithUserInWebsheetWithCompletion:
addNewPlanWithFlowType:completion:
manageAccountForPlan:completion:
planItemsShouldUpdate:completion:
carrierItemsShouldUpdate:completion:
userDidProvideConsentResponse:plan:completion:
didSelectPlanItem:enable:completion:
didSelectPlanForData:completion:
setLabelForPlan:label:completion:
didSelectPlanForDefaultVoice:completion:
didSelectPlanForIMessage:completion:
didDeletePlanItem:completion:
eraseAllPlansWithCompletion:
planLaunchInfoWithCompletion:
didPurchasePlanForCsn:iccid:profileServer:
carrierHandoffToken:
triggerAddNewDataPlan:
isAddButtonEnabled:
shouldShowPlanList:
willDisplayPlanItems
signIdMapForSessionId:locationRequired:withCompletion:
didPurchasePlanWithIccid:downloadProfile:
setUserInPurchaseFlow:
registerHasNewProfileCompletion:
fetchNewProfilesWithCompletion:additionalParameters:
retrieveRequestSettings:
getDeviceInfo:
openInternalUrlId:
isRemotePlanCapableWithContext:completion:
shouldShowAddNewRemotePlanWithContext:completion:
remotePlanItemsWithUpdateFetch:completion:
remoteUserDidProvideConsentResponse:plan:completion:
startRemoteProvisioningWithCompletion:
finishRemoteProvisioningWithCompletion:
addNewRemotePlan:withCSN:withContext:userConsent:completion:
addNewRemotePlanWithCardData:confirmationCode:isPairing:withCSN:withContext:userConsent:completion:
addNewRemotePlanWithAddress:matchingId:oid:confirmationCode:isPairing:withCSN:withContext:userConsent:completion:
manageAccountForRemotePlan:completion:
didSelectRemotePlanItem:completion:
didDeleteRemotePlanItem:completion:
eraseAllRemotePlansWithCompletion:
remotePlanLaunchInfoForEid:completion:
didPurchaseRemotePlanForEid:imei:meid:iccid:alternateSmdpFqdn:completion:
pendingReleaseRemotePlan
didCancelRemotePlan
launchSequoia
expirePlan
launchDataActivationNextWithUrl:
getIMEIPrefix:
setIMEIPrefix:
getESimServerURL:
setESimServerURL:
getSelectedEnv:
setSelectedEnv:
getSelectedProxy:
setSelectedProxy:
setUseNewCellularPlanUI:
showUiIgnoringActivationFlags:
enableVinylFlowTypeOverride:
getEnableVinylFlowTypeOverride:
mccMncOverride:
setMcc:andMnc:
latitudeLongitudeOverride:
setLatitude:andLongitude:
fetchRemoteProfiles:
selectRemoteProfile:
deleteRemoteProfile:
deleteAllRemoteProfiles
getAutoPlanSelectionWithCompletion:
setAutoPlanSelection:
getRoamingSignupOverrideWithCompletion:
setRoamingSignupOverride:
setSkipEligibilityCheck:
getRemoteInfo:
setRemoteObjectInterface:
planInfoDidUpdate
localPlanInfoDidUpdate:
carrierInfoDidUpdate
remoteProvisioningDidBecomeAvailable
remoteObjectInterface
setClasses:forSelector:argumentIndex:ofReply:
logLevel:format:
_ensureConnected_sync
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousProxyWithErrorHandler:
addNewPlanWithCardData:triggerType:userConsent:completion:
setBootstrapConnectionSettings:
setInternetConnectionSettings:
loadPlansRequestWithUrl:postData:
serializedCookies
startRequestWithReplyQueue:completion:
setRequestUrls:
createSessionRequest
plansRequestWithSignIdMap:renewalIccid:urls:
plansWithProgress:andCompletion:additionalParameters:
_plansForRenewal:progress:completion:additionalParameters:
didSelectPlanItem:isEnable:completion:
initWithLabel:
setLabelForPlan:label:
userDidProvideConsentResponse:forPlan:isRemote:completion:
defaultCenter
postNotificationName:object:userInfo:
sharedManager
calculateInstallConsentTextTypeFor:
_reconnect
getSupportedFlowTypes
enterSimSetupWithCompletion:
exitSimSetupWithCompletion:
isMultipleDataPlanSupportAvailable:
isRoamingPlanSupportAvailable:
addNewPlanWithCarrierItem:duringBuddy:userConsent:completion:
addNewPlanWithCardData:duringBuddy:userConsent:completion:
addNewPlanWithAddress:matchingId:oid:confirmationCode:duringBuddy:userConsent:completion:
connectionSettings:
getEnableVinylFlowTypeOverride
loadPlansWithUrl:postData:completion:
plansWithProgress:andCompletion:
plansForRenewalWithProgress:andCompletion:
subscriptionDetailsWithCompletion:
shouldShowPlanList
isAddButtonEnabled
planItemsWithCompletion:
planItemsShouldUpdate:
didSelectPlanItem:completion:
didSelectPlanItem:isEnable:
didSelectPlanForData:
didSelectPlanForDefaultVoice:
didSelectPlanForIMessage:
setActivePlan:completion:
eraseAllPlans:
isRemotePlanCapable:
shouldShowAddNewRemotePlanWithFlowTypeAndTrialPlanType:
startRemoteProvisioningForCSN:completion:
finishRemoteProvisioningForCSN:completion:
addNewRemotePlan:userConsent:completion:
addNewRemotePlanWithCardData:isPairing:userConsent:completion:
addNewRemotePlanWithCardData:confirmationCode:isPairing:userConsent:completion:
addNewRemotePlanWithAddress:matchingId:oid:confirmationCode:isPairing:userConsent:completion:
addNewRemotePlanWithCardData:isPairing:withCSN:withContext:userConsent:completion:
remotePlanItemsWithCompletion:
remotePlanItemsWithUpdateFetch:withCSN:completion:
remoteplansWithCsn:parameters:andRemoteCompletion:
remotePlansSignupParamsForCsn:completion:
eraseAllRemotePlansWithCSN:completion:
getPredefinedLabels
userDidProvideConsentResponse:forPlan:completion:
getSubscriptionContextUUIDforPlan:
subscriptionDetailsForCompletion:
_subscriptionCompletions
_queue
_lastSessionId
_cookieData
_connection
setMaxConcurrentOperationCount:
initWithURL:
setHTTPMethod:
valueForKey:
setValue:forHTTPHeaderField:
setHTTPBody:
connectionSettingsForServiceType:
_initWithUrl:httpMethod:httpHeaders:httpBody:internetSettings:bootstrapSettings:
statusCode
setError:
error
code
isRetriableErrorCode:
_isRetryableError:
_canTryAnotherConnectionType
_callback
mutableCopy
_connectionSettingsForNextConnectionType
setTimeoutInterval:
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
setDelegateQueue:
start
_startRequestWithNextConnectionTypeOrFail
setLength:
setResponse:
appendData:
properties
count
initRequiringSecureCoding:
encodedData
initForReadingFromData:error:
cookieWithProperties:
requestHeaderFieldsWithCookies:
setAllHTTPHeaderFields:
finishDecoding
sharedHTTPCookieStorage
currentRequest
cookiesForURL:
cancel
addEntriesFromDictionary:
initialize
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
connection:willSendRequest:redirectResponse:
connection:didReceiveResponse:
connection:didReceiveData:
connection:needNewBodyStream:
connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:
connection:willCacheResponse:
connectionDidFinishLoading:
initWithUrl:httpMethod:httpHeaders:httpBody:
initGetWithUrl:
initPostWithUrl:
initJsonPostWithUrl:jsonData:
initJsonPostWithUrl:jsonData:internetSettings:bootstrapSettings:
setSerializedCookies:
receivedData
setReceivedData:
request
setRequest:
response
queue
setQueue:
completionBlock
setCompletionBlock:
connection
setConnection:
nextConnectionTypeIndex
_responseCookies
_requestCookies
_internetSettings
_bootstrapSettings
_receivedData
_request
_response
_error
_completionBlock
initWithObjectsAndKeys:
URLWithString:
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
load
subscriptionDetailsRequestWithIccids:signIdMap:urls:
requestHandoffTokenWithSignIdMap:urls:
newInitiatePurchaseWithSessionId:planId:
newPurchaseWithSessionId:receipt:userId:userName:
initWithKey:label:
_labelKeyDescription
.cxx_destruct
_key
initWithFormat:arguments:
didReceiveLogMessage:withLevel:
setLogDelegate:
setLogToConsole:
CTCellularPlanItem
NSCopying
NSSecureCoding
NSCoding
CellularPlanVinylTest
NSObject
CellularPlanVinylTestXPCServer
NSXPCListenerDelegate
CTCellularPlanError
CTCellularPlanResponseCodeParser
CTCellularPlanValidating
CTCellularPlanSubscriptionTypeParser
CTCellularPlanSubscriptionStatusParser
CTCellularPlanSubscriptionAccountStatusParser
CTCellularPlanSubscriptionDataUsageParser
CTCellularPlanSubscriptionParser
CTCellularPlanJsonResponseParser
CTCellularPlanCarrierItem
CTCellularPlan
CTCellularPlanDictionaryValidator
CTCellularPlanArrayValidator
CTCellularPlanStringValidator
CTCellularPlanDataValidator
CTCellularPlanNumberValidator
CTCellularPlanBoolValidator
CTCellularPlanDateParser
CTCellularPlanSubscriptionDataUsage
CTCellularPlanSubscription
CTCellularPlanProfile
CellularPlanManager
CTCellularPlanClient
CTCellularPlanClientDelegate
CTCellularPlanManager
CTCellularPlanRequest
NSURLConnectionDataDelegate
NSURLConnectionDelegate
Internal
Factory
CTUserLabel
CTCellularPlanLogger
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@72@0:8@16@24@32@40q48@56@64
@32@0:8@16@24
@56@0:8@16@24q32@40@48
@56@0:8@16@24@32@40@48
q24@0:8@16
@16@0:8
@24@0:8q16
v16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
@"NSString"
@"CTCellularPlan"
@"CTUserLabel"
@"NSNumber"
@"NSUUID"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSData">16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8^{dispatch_queue_s=}16@24
@"NSXPCListener"
@"NSMutableArray"
@"<CellularPlanVinylTest>"
@32@0:8q16@24
B48@0:8@16^i24^@32^@40
B32@0:8@16^i24
B32@0:8@16^@24
B56@0:8@16^@24^@32^@40^@48
B40@0:8@16^@24^@32
B64@0:8@16^B24^i32^@40^@48^@56
B64@0:8@16^B24^@32^i40^@48^@56
B48@0:8@16^@24^@32^@40
@52@0:8@16@24B32@36@44
i16@0:8
d16@0:8
@"CTCellularPlanProfile"
@"CTCellularPlanSubscription"
B32@0:8@16^d24
@40@0:8@16d24d32
@108@0:8@16i24B28d32d40@48i56@60i68i72@76d84@92@100
v20@0:8i16
@"NSArray"
@52@0:8@16@24B32B36B40B44B48
@"NSData"
v32@0:8@16@?24
v48@0:8@16q24q32@?40
v56@0:8@16@24q32q40@?48
v72@0:8@16@24@32@40q48q56@?64
v32@0:8Q16@?24
v28@0:8B16@?20
v36@0:8B16@20@?28
v36@0:8@16B24@?28
v40@0:8@16@24@?32
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@?16@24
v52@0:8B16@20@28q36@?44
v68@0:8@16@24B32@36@44q52@?60
v84@0:8@16@24@32@40B48@52@60q68@?76
v64@0:8@16@24@32@40@48@?56
v32@0:8q16q24
v32@0:8@16@24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?Q@"NSError">16
v48@0:8@"CTCellularPlanCarrierItem"16q24q32@?<v@?@"NSError">40
v56@0:8@"NSString"16@"NSString"24q32q40@?<v@?@"NSError">48
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40q48q56@?<v@?@"NSError">64
v24@0:8@?<v@?@"NSError">16
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"CTCellularPlanItem"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v36@0:8B16@"CTCellularPlanItem"20@?<v@?B@"NSError">28
v36@0:8@"CTCellularPlanItem"16B24@?<v@?B@"NSError">28
v40@0:8@"CTCellularPlanItem"16@"CTUserLabel"24@?<v@?B@"NSError">32
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSDictionary"@"NSError">16
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
v36@0:8@"NSString"16B24@?<v@?@"NSString"@"NSError">28
v28@0:8@"NSString"16B24
v24@0:8@?<v@?BB>16
v32@0:8@?<v@?B@"NSError">16@"NSDictionary"24
v24@0:8@?<v@?@"NSDictionary"@"NSDictionary"@"NSDictionary">16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"CTXPCServiceSubscriptionContext"16@?<v@?B>24
v32@0:8@"CTXPCServiceSubscriptionContext"16@?<v@?BQ@"NSString"@"NSError">24
v52@0:8B16@"NSString"20@"CTXPCServiceSubscriptionContext"28q36@?<v@?@"NSError">44
v68@0:8@"NSString"16@"NSString"24B32@"NSString"36@"CTXPCServiceSubscriptionContext"44q52@?<v@?@"NSError">60
v84@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@"NSString"52@"CTXPCServiceSubscriptionContext"60q68@?<v@?@"NSError">76
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSDictionary"@"NSError">24
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@?<v@?B>56
v24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?q>16
v24@0:8@?<v@?qq>16
v24@0:8@?<v@?dd>16
v32@0:8@"NSNumber"16@"NSNumber"24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@"NSError"16
@24@0:8@?16
v44@0:8@16B24q28@?36
v68@0:8@16@24@32@40B48q52@?60
v44@0:8B16@?20@?28@36
v32@0:8@?16@?24
v40@0:8@?16@?24@32
@20@0:8B16
@28@0:8@16B24
v36@0:8B16q20@?28
v52@0:8@16@24B32q36@?44
v60@0:8@16B24@28@36q44@?52
v40@0:8q16@24@?32
v44@0:8q16@24B32@?36
^{dispatch_queue_s=}
@"NSXPCConnection"
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
@40@0:8@16@24@32
v48@0:8@16q24q32q40
@"NSURLRequest"40@0:8@"NSURLConnection"16@"NSURLRequest"24@"NSURLResponse"32
v32@0:8@"NSURLConnection"16@"NSURLResponse"24
v32@0:8@"NSURLConnection"16@"NSData"24
@"NSInputStream"32@0:8@"NSURLConnection"16@"NSURLRequest"24
v48@0:8@"NSURLConnection"16q24q32q40
@"NSCachedURLResponse"32@0:8@"NSURLConnection"16@"NSCachedURLResponse"24
v24@0:8@"NSURLConnection"16
@64@0:8@16@24@32@40@48@56
@48@0:8@16@24@32@40
v32@0:8^{dispatch_queue_s=}16@?24
^{dispatch_queue_s=}16@0:8
v24@0:8^{dispatch_queue_s=}16
@?16@0:8
@"NSDictionary"
@"NSMutableData"
@"NSMutableURLRequest"
@"NSURLResponse"
@"NSError"
@"NSURLConnection"
B24@0:8q16
v28@0:8i16@20
cp.fw: %@
