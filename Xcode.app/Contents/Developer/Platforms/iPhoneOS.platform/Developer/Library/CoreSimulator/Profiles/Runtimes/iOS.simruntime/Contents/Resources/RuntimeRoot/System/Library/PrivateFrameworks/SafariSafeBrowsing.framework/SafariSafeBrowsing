init
class
raise:format:
stringWithUTF8String:
dateWithTimeIntervalSince1970:
initWithDatabaseStatus:
databaseCount
nameOfDatabaseAtIndex:
sizeOfDatabaseAtIndex:
hashCountOfDatabaseAtIndex:
lastUpdateTimeOfDatabaseAtIndex:
nextPollingTimeOfDatabaseAtIndex:
.cxx_destruct
.cxx_construct
_databaseStatus
ssb_isSafeURL
ssb_hasUserInfo
addHashesForURL:
containsHashesForURL:
clear
_cache
isTencentSafeBrowsingEnabled
alloc
initWithCapacity:
addObject:
_initWithDatabaseUpdaterStatus:
initWithServiceStatus:
name
processIdentifier
activeTransactions
connectionCount
processIdentifierForConnectionAtIndex:
bundleIdentifierForConnectionAtIndex:
databaseUpdatersStatuses
databaseUpdaterState
_serviceStatus
ephemeralSessionConfiguration
sessionWithConfiguration:
setTimeoutIntervalForRequest:
URLWithString:
initWithURL:
setAllowsCellularAccess:
setNetworkServiceType:
setValue:forHTTPHeaderField:
setHTTPMethod:
setHTTPBody:
dataTaskWithRequest:completionHandler:
resume
statusCode
bytes
length
dictionary
setObject:forKeyedSubscript:
array
dataWithJSONObject:options:error:
initWithBytes:length:
base64EncodedStringWithOptions:
numberWithUnsignedInt:
JSONObjectWithData:options:error:
ssb_arrayForKey:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
ssb_stringForKey:
initWithBase64EncodedString:options:
ssb_dictionaryForKey:
unsignedIntValue
ssb_numberForKey:
hasSuffix:
longLongValue
dataWithBytes:length:
dictionaryWithObjects:forKeys:count:
sharedController
googleProviderConfiguration
providerOff
tencentProviderConfiguration
provider
_databaseUpdaterStatus
lastObject
fileSystemRepresentation
_fetchCellularDataPlan
initWithQueue:
ssb_privacyPreservingDescription
domestic
capacityBytes
fetchDataPlanMetrics:
integerValue
_fetchCellularDataPlanWithCompletionHandler:
stringValue
fetchCellularDataPlanSynchronously
onHighCellularDataPlan
_carrierSpaceClient
_onHighCellularDataPlan
isEqualToString:
copy
_parseConfiguration:
currentLocale
countryCode
_configureToUseDefaultValues
objectForKey:
isKindOfClass:
_currentRegionCode
containsObject:
_configureToBeOff
isEqualToDictionary:
initWithConfiguration:
isEqualToConfiguration:
setProviderOff:
socialEngineeringThreatTypeOff
malwareThreatTypeOff
unwantedSoftwareThreatTypeOff
_configuration
_providerOff
_socialEngineeringThreatTypeOff
_malwareThreatTypeOff
_unwantedSoftwareThreatTypeOff
_loadConfigurationFromDiskIfNecessary
_updateConfigurationIfNecessary
_initializeProviderConfigurationsWithConfiguration:
_scheduleConfigurationUpdateDaily
_resetProviderConfigurationsDidChange
dealloc
_initializeToDefaultProviderConfigurations
processInfo
operatingSystemVersion
numberWithInteger:
stringWithFormat:
_providerToTurnOffFromProviderDictionary:
_simplifyProviderConfigurations
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
defaultManager
path
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_urlOfDownloadedConfiguration
fileExistsAtPath:
dictionaryWithContentsOfURL:
writeToURL:atomically:
removeItemAtURL:error:
_writeConfigurationToDisk:
_notifyProviderConfigurationsDidChangeIfNecessary
sharedSession
dataTaskWithURL:completionHandler:
_lastConfigurationUpdateAttemptDate
_shouldUpdateConfigurationGivenLastConfigurationUpdateAttemptDate:
_setCurrentDateAsLastConfigurationUpdateAttemptDate
_didReceiveConfigurationData:
_downloadConfigurationWithCompletionHandler:
propertyListWithData:options:format:error:
_setCurrentConfiguration:
timeIntervalSinceNow
standardUserDefaults
date
setObject:forKey:
isSafeBrowsingOff
forceLoadConfigurationFromDisk
forceUpdateConfigurationFromServer
_internalQueue
_currentConfiguration
_updateTimer
_googleConfigurationDidChange
_tencentConfigurationDidChange
_googleProviderConfiguration
_tencentProviderConfiguration
stringByAppendingPathExtension:
removeItemAtPath:error:
UTF8String
bundleForClass:
objectForInfoDictionaryKey:
sharedLookupContext
lookUpURL:completionHandler:
_lookupContext
_observerToken
_forceDatabaseUpdateWithCompletionHandler:
_getDatabaseStatusWithCompletionHandler:
_getServiceStatusWithCompletionHandler:
_forceLoadRemoteConfigurationFromDiskWithCompletionHandler:
_forceUpdateRemoteConfigurationFromServerWithCompletionHandler:
_deleteAllDatabasesWithCompletionHandler:
_getLastDatabaseUpdateTimeWithCompletionHandler:
_lookUpURLs:forProtectionType:completionHandler:
defaultCenter
postNotificationName:object:userInfo:
_initWithLookupResult:
_initWithServiceLookUpResults:URLContainsUserInfo:
errorWithDomain:code:userInfo:
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
encodeObject:forKey:
encodeBool:forKey:
isMalware
isPhishing
isUnwantedSoftware
isKnownToBeUnsafe
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
_initWithServiceLookUpResults:
serviceLookupResults
URLContainsUserInfo
_URLContainsUserInfo
_serviceLookupResults
domain
code
isFileURL
host
scheme
caseInsensitiveCompare:
decodeInt64ForKey:
encodeInt64:forKey:
_lookupResult
substringWithRange:
substringFromIndex:
addObserverForName:object:queue:usingBlock:
_CFURLRequest
-[%@ %@]
databaseCount
TQ,R,N
v8@?0
com.apple.Safari.SafeBrowsing
Database
FullHash
Lookup
RemoteConfiguration
name
T@"NSString",R,C,N
processIdentifier
Ti,R
activeTransactions
T@"NSArray",R,C,N
databaseUpdatersStatuses
T@"NSArray",R,N
connectionCount
databaseUpdaterState
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
?$ct=application%2Fx-protobuf&$req=
&key=
AIzaSyANT-dOXDTNxZS4flEImFNycnoeDh4ehQI
https://safebrowsing.urlsec.qq.com/v4/threatListUpdates:fetch
https://safebrowsing.urlsec.qq.com/v4/fullHashes:find
POST
X-HTTP-Method-Override
?key=
application/json
Content-Type
Providers
Provider To Turn Off
Regions To Turn Off
Threat Types To Turn Off
Google
Tencent
Social Engineering
Malware
Unwanted Software
com.apple.SafeBrowsing.Backend.Google.DatabaseUpdater
Failed to initialize database '
Failed to delete database '
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
.tmp
Failed to write updated database '
Failed to finalize updated database '
Failed to rename temporary database '
' from '
' to '
Failed to open new database '
Failed to map new database '
' into memory: 
Checksum for database '
' is invalid
Failed to open database '
Failed to map database '
' into memory.
threatListDescriptor
shmem
google
tencent
com.apple.Safari.SafeBrowsing.FullHashChecker
com.apple.Safari.SafeBrowsing.FullHashFetcher
provider
T@"NSString",R,N
fullHash
prefixSize
clientState
com.apple.Safari.SafeBrowsing.LookupContext
com.apple.Safari.SafeBrowsing.Service
v16@?0@"NSObject<OS_xpc_object>"8
v12@?0i8
com.apple.Safari.SafeBrowsing.DidFinishGoogleDatabaseUpdate
com.apple.Safari.SafeBrowsing.DidFinishTencentDatabaseUpdate
B24@?0Q8@"NSObject<OS_xpc_object>"16
connections
googleDatabaseUpdaterState
tencentDatabaseUpdaterState
requests
loadRemoteConfigurationState
updateRemoteConfigurationState
deleteAllDatabasesState
nextMessageTime
cellularDataPlan
protectionType
bundleIdentifier
message
http://
http
https
v24@?0@"CTCarrierSpaceDataPlanMetrics"8@"NSError"16
v16@?0@"NSNumber"8
onHighCellularDataPlan
TB,R,N,V_onHighCellularDataPlan
RICE
MALWARE
SOCIAL_ENGINEERING
UNWANTED_SOFTWARE
POTENTIALLY_HARMFUL_APPLICATION
WINDOWS
LINUX
ANDROID
ANY_PLATFORM
ALL_PLATFORMS
BINARY_DIGEST
IP_RANGE
PARTIAL_UPDATE
FULL_UPDATE
providerOff
TB,N,V_providerOff
socialEngineeringThreatTypeOff
TB,R,N,V_socialEngineeringThreatTypeOff
malwareThreatTypeOff
TB,R,N,V_malwareThreatTypeOff
unwantedSoftwareThreatTypeOff
TB,R,N,V_unwantedSoftwareThreatTypeOff
SafeBrowsingRemoteConfigurationLastUpdateDate
SafeBrowsingRemoteConfiguration-0
com.apple.RemoteConfigurationController.InternalQueue
%@.%@.%@
Library
SafariSafeBrowsing
com.apple.Safari.SafeBrowsing.GoogleRemoteConfigurationDidChange
com.apple.Safari.SafeBrowsing.TencentRemoteConfigurationDidChange
v16@?0@"NSData"8
safeBrowsingOff
TB,R,N,GisSafeBrowsingOff
googleProviderConfiguration
T@"ProviderConfiguration",R,N,V_googleProviderConfiguration
tencentProviderConfiguration
T@"ProviderConfiguration",R,N,V_tencentProviderConfiguration
plist
https://configuration.apple.com/configurations/internetservices/safari/
result
threatType
timestamp
hasMatch
Failed to get user cache directory: 
Failed to create database directory: 
com.apple.Safari.SafeBrowsing.RegionCodeDidChange
com.apple.Safari.SafeBrowsing.BrowsingDatabases.Update
Failed to set activity state to XPC_ACTIVITY_STATE_DONE
databases
Failed to set activity state to XPC_ACTIVITY_STATE_CONTINUE
Unhandled activity state 
Handling Message
threatListDescriptors
Failed to fstat file descriptor 
Failed to mmap file descriptor 
SSBLookupContextDatabasesDidUpdateNotification
SSBLookupContextDatabasesDidUpdateNotificationUserInfoProvider
urlContainsUserInfo
supportsSecureCoding
TB,R
serviceLookupResults
T@"NSArray",R,N,V_serviceLookupResults
URLContainsUserInfo
TB,R,N,V_URLContainsUserInfo
phishing
TB,R,N,GisPhishing
malware
TB,R,N,GisMalware
unwantedSoftware
TB,R,N,GisUnwantedSoftware
knownToBeUnsafe
TB,R,N,GisKnownToBeUnsafe
Error: domain=%@, code=%ld
ssb_privacyPreservingDescription
ssb_hasUserInfo
TB,R,N
ssb_isSafeURL
SSBProviderGoogle
SSBProviderTencent
type
client
clientId
clientVersion
listUpdateRequests
platformType
threatEntryType
state
constraints
maxUpdateEntries
maxDatabaseEntries
supportedCompressions
listUpdateResponses
minimumWaitDuration
responseType
additions
removals
newClientState
checksum
compressionType
rawIndices
rawHashes
indices
sha256
clientStates
threatInfo
threatTypes
platformTypes
threatEntryTypes
threatEntries
hash
matches
negativeCacheDuration
threat
cacheDuration
B8@?0
AppleLocale
mobile
v16@?0@"NSNotification"8
safeBrowsingProvider
social_engineering
unwanted_software
potentially_harmful_application
windows
linux
android
any_platform
all_platforms
url_expression
binary_digest
ip_range
_SSBDatabaseStatus
_SSBSafeHashCache
SSBAvailability
_SSBServiceStatus
SSBDatabaseUpdaterStatus
SSBDatabaseUpdateSupport
ProviderConfiguration
RemoteConfigurationController
SSBLookupContext
SSBPrivate
SSBLookupResult
NSCopying
NSSecureCoding
NSCoding
SafeBrowsing
SSBExtras
SSBServiceLookupResult
@40@0:8{DatabaseStatus={vector<SafeBrowsing::DatabaseStatus::Database, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >=^{Database}^{Database}{__compressed_pair<SafeBrowsing::DatabaseStatus::Database *, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >=^{Database}}}}16
Q16@0:8
@24@0:8Q16
Q24@0:8Q16
I24@0:8Q16
v16@0:8
@16@0:8
{DatabaseStatus="m_databases"{vector<SafeBrowsing::DatabaseStatus::Database, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >="__begin_"^{Database}"__end_"^{Database}"__end_cap_"{__compressed_pair<SafeBrowsing::DatabaseStatus::Database *, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >="__value_"^{Database}}}}
v24@0:8@16
B24@0:8@16
{unique_ptr<SafeBrowsing::SafeHashCache, std::__1::default_delete<SafeBrowsing::SafeHashCache> >="__ptr_"{__compressed_pair<SafeBrowsing::SafeHashCache *, std::__1::default_delete<SafeBrowsing::SafeHashCache> >="__value_"^{SafeHashCache}}}
B16@0:8
@120@0:8{ServiceStatus={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}i{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<SafeBrowsing::ServiceStatus::Connection, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >=^{Connection}^{Connection}{__compressed_pair<SafeBrowsing::ServiceStatus::Connection *, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >=^{Connection}}}{vector<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus, std::__1::allocator<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus> >=^{DatabaseUpdaterStatus}^{DatabaseUpdaterStatus}{__compressed_pair<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus *, std::__1::allocator<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus> >=^{DatabaseUpdaterStatus}}}}16
i16@0:8
i24@0:8Q16
{ServiceStatus="m_name"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"m_pid"i"m_activeTransactions"{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}"m_connections"{vector<SafeBrowsing::ServiceStatus::Connection, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >="__begin_"^{Connection}"__end_"^{Connection}"__end_cap_"{__compressed_pair<SafeBrowsing::ServiceStatus::Connection *, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >="__value_"^{Connection}}}"m_databaseUpdatersStatuses"{vector<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus, std::__1::allocator<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus> >="__begin_"^{DatabaseUpdaterStatus}"__end_"^{DatabaseUpdaterStatus}"__end_cap_"{__compressed_pair<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus *, std::__1::allocator<SafeBrowsing::ServiceStatus::DatabaseUpdaterStatus> >="__value_"^{DatabaseUpdaterStatus}}}}
@24@0:8{DatabaseUpdaterStatus=ii}16
{DatabaseUpdaterStatus="state"i"provider"i}
v24@0:8@?16
@"CTCarrierSpaceClient"
@24@0:8@16
v20@0:8B16
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"ProviderConfiguration"
v32@0:8@16@?24
{shared_ptr<SafeBrowsing::LookupContext>="__ptr_"^{LookupContext}"__cntrl_"^{__shared_weak_count}}
v40@0:8@16q24@?32
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@28@0:8@16B24
@"NSArray"
@24@0:8{LookupResult={OptionSet<Backend::LookupResult::Type>=I}i}16
{LookupResult="type"{OptionSet<Backend::LookupResult::Type>="m_storage"I}"provider"i}
We are already in the middle of updating database
Full hash fetch failed
Received response from %d server
Encountered error when requesting from %d server
Encountered error when parsing response from %d server
Cannot issue full hash request to %d server either because we are in wait duration or because we are in backoff interval
Initiate request to %d server
URL %@ is safe
Unexpected message from the connection, will be ignored
Handle connection with error: %{public}s
Service did finish database update with protection type %d and provider %d
Receive GetDatabases response from safe browsing service with protection type: %d
Send CheckFullHashes message to safe browsing service with protection type %d
Receive CheckFullHashes reply with protection type %d
Encountered xpc error for CheckFullHashes response with error: %{public}s
Encountered xpc error for ForceLoadRemoteConfigurationFromDisk response with error: %{public}s
Encountered xpc error for ForceUpdateRemoteConfigurationFromServer response with error: %{public}s
Encountered xpc error for DeleteAllDatabases response with error: %{public}s
Received ClientInUse reply
Encountered xpc error for ClientInUse response with error: %{public}s
Encountered xpc error for FetchCellularDataPlan response with error: %{public}s
Databases are not empty with protection type %d
Send GetDatabases message to safe browsing service with protection type %d
Already waiting for GetDatabases response with protection type %d
Encountered error when trying to get databases: %{public}s
Failed to get data plan metrics: %{public}@
pathCString is nullptr
home URL is nil
Failed to create Safe Browsing settings directory with error: %{public}@
The downloaded configuration could not be loaded from %@
Failed to remove remote configuration file: %{public}@
Failed to get configuration data from server with error: %{public}@
Failed to read configuration data received from server with error: %{public}@
update timer fired
Databases loaded for protection type %d and provider %d
Begin database update for protection type %d and provider %d
Finished database update for protection type %d and provider %d
Service: Database update failed for protection type %d and provider %d
Received unknown message
Received GetDatabases message with protection type %d
Received CheckFullHashes message
Cancel xpc connection because there are no requests
Send GetDatabases reply with protection type %d
Database directory does not exist
Failed to delete all databases: %{public}@
Received ClientInUse message
Send ClientInUse reply
Send CheckFullHashes reply
Look up a url %@
Receive GetDatabases response from safe browsing service
Encountered xpc error for GetDatabases response with error: %{public}s
Database array obtained from safe browsing service is empty
There are no matches in databases with given url: %@
