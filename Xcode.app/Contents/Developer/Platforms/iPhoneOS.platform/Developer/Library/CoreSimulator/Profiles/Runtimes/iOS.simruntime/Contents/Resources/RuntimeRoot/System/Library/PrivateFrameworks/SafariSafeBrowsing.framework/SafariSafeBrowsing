init
class
raise:format:
stringWithUTF8String:
dateWithTimeIntervalSince1970:
initWithDatabaseStatus:
databaseCount
nameOfDatabaseAtIndex:
sizeOfDatabaseAtIndex:
hashCountOfDatabaseAtIndex:
lastUpdateTimeOfDatabaseAtIndex:
nextPollingTimeOfDatabaseAtIndex:
.cxx_destruct
.cxx_construct
_databaseStatus
ssb_isSafeURL
ssb_hasUserInfo
addHashesForURL:
containsHashesForURL:
clear
_cache
alloc
initWithCapacity:
addObject:
initWithServiceStatus:
name
processIdentifier
databaseUpdaterState
activeTransactions
connectionCount
processIdentifierForConnectionAtIndex:
bundleIdentifierForConnectionAtIndex:
_serviceStatus
ephemeralSessionConfiguration
sessionWithConfiguration:
setTimeoutIntervalForRequest:
URLWithString:
initWithURL:
setAllowsCellularAccess:
setNetworkServiceType:
setValue:forHTTPHeaderField:
setHTTPMethod:
setHTTPBody:
dataTaskWithRequest:completionHandler:
resume
statusCode
bytes
length
dictionary
setObject:forKeyedSubscript:
array
dataWithJSONObject:options:error:
initWithBytes:length:
base64EncodedStringWithOptions:
numberWithUnsignedInt:
JSONObjectWithData:options:error:
ssb_arrayForKey:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
ssb_stringForKey:
initWithBase64EncodedString:options:
ssb_dictionaryForKey:
unsignedIntValue
ssb_numberForKey:
hasSuffix:
longLongValue
dataWithBytes:length:
dictionaryWithObjects:forKeys:count:
sharedController
googleProviderConfiguration
providerOff
tencentProviderConfiguration
isSafeBrowsingOff
lastObject
fileSystemRepresentation
isEqualToString:
_parseConfiguration:
currentLocale
countryCode
_configureToUseDefaultValues
objectForKey:
isKindOfClass:
_currentRegionCode
containsObject:
_configureToBeOff
initWithConfiguration:
socialEngineeringThreatTypeOff
malwareThreatTypeOff
unwantedSoftwareThreatTypeOff
_socialEngineeringThreatTypeOff
_malwareThreatTypeOff
_unwantedSoftwareThreatTypeOff
_loadConfigurationFromDiskIfNecessary
_updateConfigurationIfNecessary
_initializeProviderConfigurationsWithConfiguration:
_scheduleConfigurationUpdateDaily
invalidate
dealloc
_initializeToDefaultProviderConfigurations
processInfo
operatingSystemVersion
numberWithInteger:
stringValue
stringWithFormat:
_providerToTurnOffFromProviderDictionary:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
defaultManager
path
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
ssb_privacyPreservingDescription
_urlOfDownloadedConfiguration
fileExistsAtPath:
dictionaryWithContentsOfURL:
writeToURL:atomically:
sharedSession
dataTaskWithURL:completionHandler:
_lastConfigurationUpdateAttemptDate
_shouldUpdateConfigurationGivenLastConfigurationUpdateAttemptDate:
_setCurrentDateAsLastConfigurationUpdateAttemptDate
_didReceiveConfigurationData:
_downloadConfigurationWithCompletionHandler:
propertyListWithData:options:format:error:
_writeConfigurationToDisk:
timeIntervalSinceNow
standardUserDefaults
date
setObject:forKey:
scheduledTimerWithTimeInterval:repeats:block:
setTolerance:
_internalQueue
_currentConfiguration
_updateTimer
_googleProviderConfiguration
_tencentProviderConfiguration
stringByAppendingPathExtension:
bundleForClass:
objectForInfoDictionaryKey:
UTF8String
sharedLookupContext
lookUpURL:completionHandler:
getLastDatabaseUpdateTimeWithCompletionHandler:
_lookupContext
_observerToken
_forceDatabaseUpdateWithCompletionHandler:
_getDatabaseStatusWithCompletionHandler:
_getServiceStatusWithCompletionHandler:
defaultCenter
postNotificationName:object:userInfo:
_initWithLookupResult:
_initWithServiceLookUpResults:URLContainsUserInfo:
errorWithDomain:code:userInfo:
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
encodeObject:forKey:
encodeBool:forKey:
isMalware
isPhishing
isUnwantedSoftware
isKnownToBeUnsafe
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
serviceLookupResults
URLContainsUserInfo
_URLContainsUserInfo
_serviceLookupResults
domain
code
isFileURL
host
scheme
caseInsensitiveCompare:
decodeInt64ForKey:
encodeInt64:forKey:
provider
_lookupResult
substringWithRange:
substringFromIndex:
addObserverForName:object:queue:usingBlock:
_CFURLRequest
-[%@ %@]
databaseCount
TQ,R,N
name
T@"NSString",R,C,N
processIdentifier
Ti,R
activeTransactions
T@"NSArray",R,C,N
databaseUpdaterState
connectionCount
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
https://safebrowsing.googleapis.com/v4/fullHashes:find
?$ct=application%2Fx-protobuf&$req=
&key=
AIzaSyANT-dOXDTNxZS4flEImFNycnoeDh4ehQI
https://safebrowsing.googleapis.com/v4/threatListUpdates:fetch
https://safebrowsing.urlsec.qq.com/v4/threatListUpdates:fetch
x3dFV-lKdZ-HyfqFgedjQAIzaSyBbT4JTuz7jdG
https://safebrowsing.urlsec.qq.com/v4/fullHashes:find
POST
X-HTTP-Method-Override
?key=
application/json
Content-Type
Providers
Provider To Turn Off
Regions To Turn Off
Threat Types To Turn Off
Google
Tencent
Social Engineering
Malware
Unwanted Software
com.apple.SafeBrowsing.Backend.Google.DatabaseUpdater
/dev/urandom
Database Update back-off
v8@?0
Failed to initialize database '
Failed to delete database '
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
.tmp
Failed to write updated database '
Failed to finalize updated database '
Failed to rename temporary database '
' from '
' to '
Failed to open new database '
Failed to map new database '
' into memory: 
Checksum for database '
' is invalid
Failed to open database '
Failed to map database '
' into memory.
Full Hash Cache
com.apple.Safari.SafeBrowsing.FullHashChecker
Full Hash Check
com.apple.Safari.SafeBrowsing.FullHashFetcher
Full Hash Fetcher Back-off
fullHash
prefixSize
threatListDescriptor
clientState
com.apple.Safari.SafeBrowsing.LookupContext
com.apple.Safari.SafeBrowsing.Service
v16@?0@"NSObject<OS_xpc_object>"8
v12@?0i8
com.apple.Safari.SafeBrowsing.DidFinishGoogleDatabaseUpdate
com.apple.Safari.SafeBrowsing.DidFinishTencentDatabaseUpdate
databases
B24@?0Q8@"NSObject<OS_xpc_object>"16
connections
requests
threatListDescriptors
tencent
google
shmem
bundleIdentifier
message
http://
http
https
RICE
MALWARE
SOCIAL_ENGINEERING
UNWANTED_SOFTWARE
POTENTIALLY_HARMFUL_APPLICATION
WINDOWS
LINUX
ANDROID
ANY_PLATFORM
ALL_PLATFORMS
BINARY_DIGEST
IP_RANGE
PARTIAL_UPDATE
FULL_UPDATE
providerOff
TB,R,N
socialEngineeringThreatTypeOff
TB,R,N,V_socialEngineeringThreatTypeOff
malwareThreatTypeOff
TB,R,N,V_malwareThreatTypeOff
unwantedSoftwareThreatTypeOff
TB,R,N,V_unwantedSoftwareThreatTypeOff
SafeBrowsingRemoteConfigurationLastUpdateDate
SafeBrowsingRemoteConfiguration-0
com.apple.RemoteConfigurationController.InternalQueue
%@.%@.%@
Library
SafariSafeBrowsing
v16@?0@"NSData"8
v16@?0@"NSTimer"8
safeBrowsingOff
TB,R,N,GisSafeBrowsingOff
googleProviderConfiguration
T@"ProviderConfiguration",R,N,V_googleProviderConfiguration
tencentProviderConfiguration
T@"ProviderConfiguration",R,N,V_tencentProviderConfiguration
plist
https://configuration.apple.com/configurations/internetservices/safari/
provider
result
threatType
timestamp
hasMatch
Safari
Failed to create database directory: 
Loading Tencent Databases
Loading Google Databases
Failed to get user cache directory: 
goog-malware-shavar
goog-phish-shavar
goog-unwanted-shavar
Failed to set activity state to XPC_ACTIVITY_STATE_DONE
com.apple.Safari.SafeBrowsing.Update
com.apple.Safari.SafeBrowsing
Failed to set activity state to XPC_ACTIVITY_STATE_CONTINUE
Unhandled activity state 
Handling Message
Failed to fstat file descriptor 
Failed to mmap file descriptor 
SSBLookupContextDatabasesDidUpdateNotification
SSBLookupContextDatabasesDidUpdateNotificationUserInfoProvider
urlContainsUserInfo
supportsSecureCoding
TB,R
serviceLookupResults
T@"NSArray",R,N,V_serviceLookupResults
URLContainsUserInfo
TB,R,N,V_URLContainsUserInfo
phishing
TB,R,N,GisPhishing
malware
TB,R,N,GisMalware
unwantedSoftware
TB,R,N,GisUnwantedSoftware
knownToBeUnsafe
TB,R,N,GisKnownToBeUnsafe
Error: domain=%@, code=%ld
ssb_privacyPreservingDescription
T@"NSString",R,N
ssb_hasUserInfo
ssb_isSafeURL
SSBProviderGoogle
SSBProviderTencent
type
client
clientId
clientVersion
listUpdateRequests
platformType
threatEntryType
state
constraints
maxUpdateEntries
maxDatabaseEntries
region
supportedCompressions
listUpdateResponses
minimumWaitDuration
responseType
additions
removals
newClientState
checksum
compressionType
rawIndices
rawHashes
indices
sha256
clientStates
threatInfo
threatTypes
platformTypes
threatEntryTypes
threatEntries
hash
matches
negativeCacheDuration
threat
threatEntryMetadataKey
entries
value
cacheDuration
AppleLocale
mobile
B8@?0
v16@?0@"NSNotification"8
safeBrowsingProvider
social_engineering
unwanted_software
potentially_harmful_application
windows
linux
android
any_platform
all_platforms
url_expression
binary_digest
ip_range
_SSBDatabaseStatus
_SSBSafeHashCache
_SSBServiceStatus
ProviderConfiguration
RemoteConfigurationController
SSBLookupContext
SSBPrivate
SSBLookupResult
NSCopying
NSSecureCoding
NSCoding
SafeBrowsing
SSBExtras
SSBServiceLookupResult
@40@0:8{DatabaseStatus={vector<SafeBrowsing::DatabaseStatus::Database, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >=^{Database}^{Database}{__compressed_pair<SafeBrowsing::DatabaseStatus::Database *, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >=^{Database}}}}16
Q16@0:8
@24@0:8Q16
Q24@0:8Q16
I24@0:8Q16
v16@0:8
@16@0:8
{DatabaseStatus="m_databases"{vector<SafeBrowsing::DatabaseStatus::Database, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >="__begin_"^{Database}"__end_"^{Database}"__end_cap_"{__compressed_pair<SafeBrowsing::DatabaseStatus::Database *, std::__1::allocator<SafeBrowsing::DatabaseStatus::Database> >="__first_"^{Database}}}}
v24@0:8@16
B24@0:8@16
{unique_ptr<SafeBrowsing::SafeHashCache, std::__1::default_delete<SafeBrowsing::SafeHashCache> >="__ptr_"{__compressed_pair<SafeBrowsing::SafeHashCache *, std::__1::default_delete<SafeBrowsing::SafeHashCache> >="__first_"^{SafeHashCache}}}
@104@0:8{ServiceStatus={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}i{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<SafeBrowsing::ServiceStatus::Connection, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >=^{Connection}^{Connection}{__compressed_pair<SafeBrowsing::ServiceStatus::Connection *, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >=^{Connection}}}i}16
i16@0:8
i24@0:8Q16
{ServiceStatus="m_name"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__first_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"m_pid"i"m_activeTransactions"{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__first_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}"m_connections"{vector<SafeBrowsing::ServiceStatus::Connection, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >="__begin_"^{Connection}"__end_"^{Connection}"__end_cap_"{__compressed_pair<SafeBrowsing::ServiceStatus::Connection *, std::__1::allocator<SafeBrowsing::ServiceStatus::Connection> >="__first_"^{Connection}}}"m_databaseUpdaterState"i}
@24@0:8@16
B16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@"NSTimer"
@"ProviderConfiguration"
v32@0:8@16@?24
{shared_ptr<SafeBrowsing::LookupContext>="__ptr_"^{LookupContext}"__cntrl_"^{__shared_weak_count}}
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@28@0:8@16B24
@"NSArray"
@24@0:8{LookupResult={OptionSet<Backend::LookupResult::Type>=I}i}16
{LookupResult="type"{OptionSet<Backend::LookupResult::Type>="m_storage"I}"provider"i}
?456789:;<=
 !"#$%&'()*+,-./0123
DatabaseUpdater: We are already in the middle of updating database
FullHashChecker: Full hash fetch failed
FullHashFetcher: Received response from %d server
FullHashFetcher: Encountered error when requesting from %d server
FullHashFetcher: Encountered error when parsing response from %d server
FullHashFetcher: Cannot issue full hash request to %d server either because we are in wait duration or because we are in backoff interval
FullHashFetcher: Initiate request to %d server
LookupContext: URL %@ is safe
LookupContext: Unexpected message from the connection
LookupContext: Handle connection with error: %{public}s
LookupContext: Service did finish database update with provider %d
LookupContext: Receive GetDatabases response from safe browsing service
LookupContext: Encountered xpc error for GetDatabases response with error: %s
LookupContext: Database array obtained from safe browsing service is empty
LookupContext: There are no matches in databases with given url: %@
LookupContext: Send CheckFullHashes message to safe browsing service with given url: %@
LookupContext: Receive CheckFullHashes reply with given url: %@
LookupContext: Encountered xpc error for CheckFullHashes response with error: %s
LookupContext: Databases are not empty
LookupContext: Send GetDatabases message to safe browsing service
LookupContext: Already waiting for GetDatabases response
LookupContext: Encountered error when trying to get databases: %{public}s
RemoteConfigurationController: Failed to create Safe Browsing settings directory with error: %{public}@
RemoteConfigurationController: The downloaded configuration could not be loaded from %@
RemoteConfigurationController: Failed to get configuration data from server with error: %{public}@
RemoteConfigurationController: Failed to read configuration data received from server with error: %{public}@
Service: Databases loaded for provider %d
Service: Begin database update for provider %d
Service: Finish database update for provider %d
Service: Database update failed for provider %d
Service: Received unknown message
Service: Received GetDatabases message
Service: Received CheckFullHashes message
Service: Cancel xpc connection because there are no requests
Service: Send GetDatabases reply
Service: Send CheckFullHashes reply
SSBLookupContext: Look up a url %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
