fakeContactName
Allen
fakeContactAddress
2025550184
fakeWorkoutType
fakeWorkoutGoalType
fakeWorkoutEnergyBurned
fakeWorkoutDistance
fakeWorkoutDuration
fakeWorkoutGoal
fakeWorkoutIsIndoor
fakeAchievementIdentifier
HKAchievementTypeBestDailyBriskMinutes
fakeAchievementWorkoutType
fakeAchievementValue
fakeFriendUUID
com.apple.SessionTracker
v20@?0B8@"NSError"12
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
profile
T@"HDProfile",W,N,V_profile
activityDataManager
T@"ASActivityDataManager",W,N,V_activityDataManager
fakeContact
T@"ASContact",R,N
fakeWorkout
T@"_HKFitnessFriendWorkout",R,N
fakeAchievement
T@"_HKFitnessFriendAchievement",R,N
fakeSnapshot
T@"_HKFitnessFriendActivitySnapshot",R,N
fakeCompleteSnapshot
Watch
iPod6,3
ASMessagePayloadKey
ASMessageTypeKey
ASMessageSenderAddressKey
ASMessageRetryCountKey
payload
T@"NSData",&,N,V_payload
retryCount
Tq,N,V_retryCount
type
Ti,N,V_type
senderAddress
T@"NSString",C,N,V_senderAddress
ephemeralCompletionBlock
T@?,C,N,V_ephemeralCompletionBlock
DefaultMessageQueue
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"ASMessage"16^B24
ASRelationshipTransaction
com.apple.ActivitySharing.RelationshipManager
friendListLock
v32@?0@"NSString"8@"ASIDSMessageCenter"16^B24
B24@?0@"CKShareParticipant"8@"NSDictionary"16
v28@?0B8@"NSError"12@"ASRelationship"20
v8@?0
v28@?0B8@"NSError"12@"CKShareParticipant"20
v28@?0B8@"NSError"12@"CKShare"20
v16@?0@?<v@?>8
v44@?0B8@"NSError"12@"CKShare"20@"CKShare"28@"ASRelationship"36
v24@?0@"NSString"8@"NSError"16
v36@?0B8@"NSError"12@"CKShare"20@"CKShare"28
v28@?0B8B12B16@"NSError"20
B16@?0@"ASContact"8
v44@?0B8@"NSError"12@"CKShare"20@"CKRecord"28@"NSArray"36
v28@?0B8@"NSError"12@"NSArray"20
v28@?0B8@"NSError"12@"NSDictionary"20
v32@?0@"CKRecordID"8@"ASRelationship"16^B24
q24@?0@"ASRelationship"8@"ASRelationship"16
v28@?0@"NSString"8B16@?<@"NSArray"@?@"ASRelationship">20
cloudKitAddress
@"NSArray"16@?0@"ASRelationship"8
preferredAddress
knownAddresses
createCloudKitAddress
createPreferredAddress
createKnownAddresses
@"NSSet"8@?0
v16@?0@"ASRelationship"8
BuildVersion
com.apple.ActivitySharing
ActivityDataZone
RelationshipZone
pluginIdentifier
T@"NSString",R,C,N
healthDaemon
T@"<HDHealthDaemon>",&,N,V_healthDaemon
activitySharingManager
T@"ASActivitySharingManager",&,N,V_activitySharingManager
Contacts
contacts.dat
fitnessFriendsWorkoutAnchorKey
fitnessFriendsAchievementAnchorKey
fitnessFriendsGoalCompletionAnchorKey
workoutCompletion
achievementEarned
goalCompletionIndex
contact
T@"ASContact",&,N,V_contact
sample
T@,&,N,V_sample
%@_%@
v12@?0B8
B24@?0^{_HKFitnessFriendActivitySnapshot=#}8@"NSDictionary"16
q24@?0^{_HKFitnessFriendActivitySnapshot=#}8^{_HKFitnessFriendActivitySnapshot=#}16
B24@?0^{_HKFitnessFriendWorkout=#}8@"NSDictionary"16
q24@?0^{_HKFitnessFriendWorkout=#}8^{_HKFitnessFriendWorkout=#}16
B24@?0^{_HKFitnessFriendAchievement=#}8@"NSDictionary"16
q24@?0^{_HKFitnessFriendAchievement=#}8^{_HKFitnessFriendAchievement=#}16
workoutAnchor
T@"NSNumber",&,N
achievementAnchor
goalCompletionAnchor
cloudKitManager
T@"ASCloudKitManager",W,N,V_cloudKitManager
contactsManager
T@"ASContactsManager",W,N,V_contactsManager
friendListManager
T@"ASFriendListManager",W,N,V_friendListManager
ActivitySharingCloudKitAccountKey
ActivitySharingHasCompletedFirstCloudKitFetchKey
ActivitySharingSharedDataSubscription
ActivitySharingPrivateDataSubscription
ASCloudKitFetch
com.apple.Fitness
com.apple.ActivitySharing.CloudKitManager
recordTypes
T@"NSSet",&,N,V_recordTypes
objectsTransformationBlock
T@?,C,N,V_objectsTransformationBlock
objectTransformationBlock
T@?,C,N,V_objectTransformationBlock
shouldNotifyObserverBlock
T@?,C,N,V_shouldNotifyObserverBlock
notifyObserverBlock
T@?,C,N,V_notifyObserverBlock
%@-%@
Serial
Observer
v36@?0B8@"NSError"12@"NSArray"20@"NSArray"28
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v28@?0B8@"NSError"12@"NSSet"20
Achievement
ActivitySnapshot
Event
Relationship
Workout
aps-environment
v24@?0q8@"NSError"16
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
@"NSArray"24@?0@"ASCloudKitManager"8@"NSArray"16
B16@?0@"<ASCloudKitManagerChangesObserver>"8
v52@?0@"ASCloudKitManager"8@"<ASCloudKitManagerChangesObserver>"16@"CKRecordZoneID"24B32@"NSArray"36@?<v@?>44
^{_HKFitnessFriendActivitySnapshot=#}24@?0@"ASCloudKitManager"8@"CKRecord"16
^{_HKFitnessFriendWorkout=#}24@?0@"ASCloudKitManager"8@"CKRecord"16
^{_HKFitnessFriendAchievement=#}24@?0@"ASCloudKitManager"8@"CKRecord"16
@"ASNotificationEvent"24@?0@"ASCloudKitManager"8@"CKRecord"16
B24@?0@"CKRecord"8@"NSDictionary"16
v28@?0@"CKRecordZoneID"8@"NSArray"16B24
cloudKitUtility
T@"ASCloudKitUtility",&,N,V_cloudKitUtility
container
T@"CKContainer",&,N,V_container
dateOfLastSuccessfulFetch
T@"NSDate",&,N,V_dateOfLastSuccessfulFetch
readyForOperations
TB,V_readyForOperations
hasCompletedFirstFetch
TB,R,N,V_hasCompletedFirstFetch
protobufClass
T#,N,V_protobufClass
handleReceiveMessageAction
T:,N,V_handleReceiveMessageAction
handleErrorSendingMessageAction
T:,N,V_handleErrorSendingMessageAction
outgoing
incoming
%@-outgoing
%@-retry
%@-persisted
v24@?0@"NSString"8@"ASMessage"16
v16@?0q8
v16@?0^?8
tel:
mailto:
delegate
T@"<ASIDSMessageCenterDelegate>",W,N,V_delegate
serviceIdentifier
T@"NSString",R,N,V_serviceIdentifier
ActivitySharingHasFriendsChangedNotification
FriendList
v12@?0i8
v32@?0@"NSNumber"8@"NSSet"16^B24
badgeCount
TQ,R,N
relationshipManager
T@"ASRelationshipManager",W,N,V_relationshipManager
periodicUpdateManager
T@"ASPeriodicUpdateManager",W,N,V_periodicUpdateManager
isWatch
TB,N,V_isWatch
hasFriendsToShareWith
TB,R
friends
T@"NSSet",R,C,N
ReadWrite
SubmanagerBarrier
T@"HDProfile",R,W,N,V_profile
TB,R,N,V_isWatch
T@"ASActivityDataManager",R,N,V_activityDataManager
activityDataNotificationManager
T@"ASActivityDataNotificationManager",R,N,V_activityDataNotificationManager
T@"ASCloudKitManager",R,N,V_cloudKitManager
T@"ASContactsManager",R,N,V_contactsManager
fakingManager
T@"ASFakingManager",R,N,V_fakingManager
T@"ASFriendListManager",R,N,V_friendListManager
gatewayManager
T@"ASGatewayManager",R,N,V_gatewayManager
T@"ASRelationshipManager",R,N,V_relationshipManager
T@"ASPeriodicUpdateManager",R,N,V_periodicUpdateManager
deviceLocalActivitySharingKeyValueDomain
T@"HDKeyValueDomain",R,N,V_deviceLocalActivitySharingKeyValueDomain
v24@?0B8B12@"NSError"16
WorkoutAnchor
DeletedWorkoutAnchor
TodayAchievementAnchorToken
YesterdayAchievementAnchorToken
com.apple.ActivitySharing.ActivityDataManager
filter_friendUUID
T@"NSUUID",R,N
filter_date
T@"NSDate",R,N
CloudKitManagerObserver
HealthData
ActivitySummary
B24@?0@"ASNotificationEvent"8@"NSDictionary"16
v24@?0@"NSSet"8@"NSNumber"16
B24@?0@"<ASFilterableSample>"8@"NSDictionary"16
B24@?0@"HKSample"8@"NSDictionary"16
Watch%
v32@?0@8Q16^B24
@"ASNotificationEvent"16@?0^{_HKFitnessFriendWorkout=#}8
v24@?0@"NSArray"8@"NSNumber"16
B40@?0@"HKWorkout"8@"HKDeletedObject"16q24^@32
T@"ASActivitySharingManager",W,N,V_activitySharingManager
hasInitialProtectedDataFetchBeenPerformed
TB,N,V_hasInitialProtectedDataFetchBeenPerformed
currentActivitySnapshot
currentWorkouts
T@"NSSet",R,N
currentAchievements
T@"NSSet",R,N,V_currentAchievements
%@%f
@"NSString"16@?0^{_HKFitnessFriendAchievement=#}8
q24@?0@"NSString"8@"NSString"16
token
T@,&,N,V_token
observer
persist
v32@?0@"NSUUID"8@"NSArray"16^B24
contacts
T@"NSSet",C,N
placeholderContacts
hasReachedMaximumNumberOfFriends
TB,R,N
com.apple.private.healthd.bulletins
Accept
Ignore
ASContextIDContactUUID
ASContextNotificationTypeKey
ASContextNotificationTypeInviteRequest
ASContextNotificationTypeInviteResponse
bulletinQueue
showInviteRequest
showInviteResponse
notifyOfInvitation
showNeedToSignIn
showNeedToUpgrade
johndoe@icloud.com
ACTIVITY_SHARING_INVITATION_REQUEST_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_BODY
ACCEPT
IGNORE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_BODY
ACTIVITY_SHARING_INVITATION_RESPONSE_TITLE
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY_WITH_CLOUDKIT_ADDRESS
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY
ACTIVITY_SHARING_VERSION_TOO_LOW_TITLE
ACTIVITY_SHARING_INCOMING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_INVITE_ACCEPT_ERROR
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_BODY
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_TITLE
ACTIVITY
@"BBSectionInfo"16@?0@"BBSectionInfo"8
date
T@"<ASBBDataProviderDelegate>",W,N,V_delegate
ASMessageTypeInviteRequest
ASMessageTypeInviteResponse
ASMessageTypeFinalizeHandshake
ASMessageTypeWithdrawInviteRequest
com.apple.FitnessFriends.PeriodicUpdateActivity
v16@?0@"NSObject<OS_xpc_object>"8
hasRegisteredForUpdates
TB,R,N,V_hasRegisteredForUpdates
com.apple.private.healthd.FF.notification
com.apple.FitnessFriends
/System/Library/PrivateFrameworks/FitnessUI.framework
fakeFriendGoalCompletion
fakeFriendAchievement
fakeFriendWorkout
NOTIFICATION_TITLE_FORMAT_GOAL_COMPLETION
Localizable
NOTIFICATION_TITLE_FORMAT_WORKOUT
NOTIFICATION_TITLE_FORMAT_ACHIEVEMENT
ActivitySharing-20pt
ActivitySharing.Notifications
ActivitySharing.Notifications.Synced
ActivitySharing
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
v16@?0@"NSError"8
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
v16@?0@"CKShareParticipant"8
v16@?0@"CKRecord"8
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
profile
setProfile:
activityDataManager
setActivityDataManager:
setUUID:
setShortName:
setWithObject:
setDestinations:
setRelationship:
numberWithUnsignedInteger:
integerValue
numberWithDouble:
kilocalorieUnit
quantityWithUnit:doubleValue:
doubleValue
mileUnit
minuteUnit
numberWithBool:
boolValue
date
dateByAddingTimeInterval:
fitnessFriendworkoutWithActivityType:friendUUID:startDate:endDate:duration:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:goalType:goal:bundleID:isWatchWorkout:isIndoorWorkout:deviceManufacturer:deviceModel:
_setSourceRevision:
achievementWithDefinitionIdentifier:completedDate:value:workoutActivityType:friendUUID:
_fakeSnapshotWithCompleteRings:
fakeSnapshot
arrayWithObjects:count:
fakeAchievement
fakeWorkout
updateShareWithActivitySnapshots:achievements:workouts:notificationEvents:completion:
alloc
init
_setActivitySummaryIndex:
_setStartDate:
_setEndDate:
setActiveEnergyBurned:
setActiveEnergyBurnedGoal:
setAppleExerciseTime:
setAppleExerciseTimeGoal:
countUnit
setAppleStandHours:
setAppleStandHoursGoal:
meterUnit
setDistanceWalkingRunning:
setStepCount:
_setPushCount:
_setWheelchairUse:
snapshotWithActivitySummary:
sourceManager
localDeviceSourceWithError:
database
sourceUUIDWithHealthDatabase:error:
setSourceUUID:
setFriendUUID:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
activitySharingManagerReady:
fakeContact
fakeCompleteSnapshot
pushFakeActivityDataToAllFriendsWithCompletion:
.cxx_destruct
_profile
_activityDataManager
initWithSuiteName:
synchronize
valueForKey:
UUID
UUIDString
initWithUUIDString:
isAppleInternalInstall
_sourceWithBundleIdentifier:name:productType:options:
initWithSource:version:
objectForKeyedSubscript:
dictionary
numberWithInt:
setObject:forKeyedSubscript:
numberWithInteger:
initWithDictionary:
dictionaryRepresentation
payload
setPayload:
retryCount
setRetryCount:
type
setType:
senderAddress
setSenderAddress:
ephemeralCompletionBlock
setEphemeralCompletionBlock:
_type
_payload
_retryCount
_senderAddress
_ephemeralCompletionBlock
initWithQueueName:
copy
enumerateKeysAndObjectsUsingBlock:
dealloc
setObject:forKey:
_synchronizePreferences
removeObjectForKey:
messageWithIdentifier:
enumerateQueuedMessagesUsingBlock:
setMessage:identifier:
removeMessageWithIdentifier:
_identifierToMessageDictionary
_domainName
_queueName
initWithDelegate:
initWithServiceIdentifier:
setDelegate:
dictionaryWithObjects:forKeys:count:
defaultCenter
_contactStoreDidChangeNotification:
addObserver:selector:name:object:
removeObserver:
daemon
fitnessAppBadgeManager
cloudKitManager
addObserver:
contactsManager
friendListManager
gatewayManager
isWatch
registerBulletins
_processPersistedMessagesIfNeeded
allValues
countByEnumeratingWithState:objects:count:
beginReceivingMessages
deregisterBulletins
endReceivingMessages
processRetryMessageQueue
_insertPlaceholderContactWithUUID:event:
contactWithUUID:
relationship
isActivityDataVisible
cloudKitAddress
participants
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
setPermission:
insertEventWithType:
removePlaceholderContactWithToken:
_queue_saveRelationship:contact:withExtraRecords:completion:
errorWithDomain:code:userInfo:
fetchShareParticipantWithCloudKitAddress:completion:
fetchOrCreateActivityDataShareWithCompletion:
_performFriendListTransaction:
isMuteEnabled
_queue_saveRelationship:contact:completion:
_removeFriendWithUUID:eventType:completion:
hasReachedMaximumNumberOfFriends
contactWithDestinations:
createContactWithDestinations:
_insertInviteForContact:destination:serviceIdentifier:
savePlaceholderContact:
remoteRelationship
isFriendshipActive
outgoingHandshakeToken
setHandshakeToken:
setInviterCloudKitAddress:
setInviterCallerID:
setInviterBuildNumber:
setInviterVersion:
_currentActivityDataPreview
setActivityDataPreview:
handshakeToken
sendInviteRequest:toDestinations:completion:
_queue_saveRelationshipAndFetchOrCreateShares:contact:completion:
fetchAllChangesWithPriority:completion:
fetchCloudKitAddressWithCompletion:
_insertPlaceholderFriendshipDidBeginForContactWithUUID:
requestBadgeUpdate
_savePlaceholderFriendshipBeganToken:forFriendWithUUID:
incomingHandshakeToken
setResponseCode:
setInviteeCloudKitAddress:
setInviteeBuildNumber:
setInviteeVersion:
preferredReachableAddress
preferredReachableService
absoluteString
setActivityShareURL:
setRelationshipShareURL:
setInviteeShareLocations:
withdrawInviteRequestFrom:
sendInviteResponse:toDestinations:completion:
_queue_addPersonWithCloudKitAddress:toShares:completion:
_queue_fetchSharesForRelationship:completion:
hasOutgoingInviteRequest
sendWithdrawInviteRequest:toDestinations:completion:
isAwaitingInviteResponse
relationshipEvents
inviterCloudKitAddress
inviterCallerID
inviterBuildNumber
inviterVersion
shouldFilterIncomingMessageFrom:
_contactWithInviteRequest:fromSender:
showInviteAttemptNeedToUpgradeFrom:
isInviteVersionCompatible:
showVersionTooLowForIncomingInviteFrom:
addresses
mutableCopy
addObject:
setIncomingHandshakeToken:
setCloudKitAddress:
setAddresses:
setPreferredReachableAddress:
serviceIdentifier
setPreferredReachableService:
setRemoteRelationship:
acceptInviteRequestFromFriendWithUUID:completion:
showInviteRequestFrom:
activityDataPreview
_processActivityDataPreview:friendUUID:
showInviteAttemptNeedToSignInFrom:
gatewayStatusWithCompletion:
inviteeCloudKitAddress
inviteeBuildNumber
inviteeVersion
_contactWithOutgoingHandshakeToken:
showVersionTooLowForOutgoingInviteTo:
showVersionTooHighForOutgoingInviteTo:
sendWithdrawInviteRequestToFriendWithUUID:completion:
responseCode
inviteeShareLocations
setInviterShareLocations:
showInviteAcceptResponseFrom:
sendFinalizeHandshake:toDestinations:completion:
_queue_acceptShares:forRelationship:contact:completion:
_contactWithIncomingHandshakeToken:
hasIncomingInviteRequest
inviterShareLocations
displayName
systemFieldsOnlyRecord
recordID
dictionaryWithDictionary:
_queue_reconcileCloudKitRelationships:
removeAllObjects
count
timestampForMostRecentRelationshipEvent
compare:
_queue_processRemoteRelationships:completion:
showMaxNumberOfFriendsError
showErrorAcceptingInviteFrom:
processPersistedMessageQueue
deleteActivityDataForFriendWithUUID:
removeParticpantWithCloudKitAddress:fromShares:completion:
arrayByAddingObject:
isEqualToString:
contactMatchingCriteriaBlock:
remoteRelationshipShareID
zoneID
destinations
setOutgoingHandshakeToken:
placeholderContactWithUUID:
_contactWithUUIDPreferringPlaceholders:
relationshipShareID
fetchShareWithShareRecordID:completion:
relationshipsWithRelationshipAndEventRecords:
saveContact:
relationshipZone
recordWithZoneID:
share
setByAddingObjectsFromArray:
_queue_handleSavedRecords:forContact:
createShareWithRootRecord:otherRecordsToSave:completion:
arrayByAddingObjectsFromArray:
setWithArray:
saveRecordsIntoPrivateDatabase:priority:completion:
addParticipantWithCloudKitAddress:toShares:completion:
activityShareURL
URLWithString:
relationshipShareURL
setRemoteActivityDataShareID:
setRemoteRelationshipShareID:
acceptSharesWithURLs:completion:
_queue_allRelationshipsByRecordID
_queue_reconcileAddressBookAgainstRelationships:
_queue_allContactsByRecordID
sortedArrayUsingComparator:
linkedContactStoreIdentifier
setByAddingObject:
setByAddingObjectsFromSet:
allObjects
setContactsUsingTransaction:
contacts
_contactWithRemoteRelationshipRecordZoneID:
hasCompletedFirstFetch
currentRelationshipEventAnchor
traverseRelationshipHistoryStartingAtEventWithAnchor:block:
activitySnapshot
dateWithTimeIntervalSinceReferenceDate:
fitnessFriendActivitySnapshotWithCodableSnapshot:friendUUID:uploadedDate:
workouts
achievements
saveActivitySnapshots:workouts:achievements:
currentActivitySnapshot
codableSnapshot
currentWorkouts
currentAchievements
setActivitySnapshot:
setWorkouts:
setAchievements:
timeIntervalSinceReferenceDate
setDate:
energyBurned
energyBurnedGoal
messageCenter:didReceiveInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveInviteResponse:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:errorSendingInviteRequest:
messageCenter:errorSendingInviteResponse:
messageCenter:errorSendingFinalizeHandshake:
messageCenter:errorSendingWithdrawInviteRequest:
bulletinProvider:didReceiveActionResponse:fromContactWithUUID:
cloudKitManagerDidBeginUpdates:
cloudKitManagerDidEndUpdates:
cloudKitManager:didRecieveNewRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewRemoteRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewActivitySnapshotsForSelf:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewActivitySnapshots:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendWorkouts:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendAchievements:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewNotificationEvents:moreComing:changesProcessedHandler:
cloudKitManagerDidUpdateAccountStatus:
gatewayManagerStatusDidChange
processRetryMessages
setActivityDataVisible:toFriendWithUUID:completion:
setMuteEnabled:forFriendWithUUID:completion:
removeFriendWithUUID:completion:
sendInviteToPersonWithDestination:callerID:serviceIdentifier:completion:
ignoreInviteRequestFromFriendWithUUID:completion:
_badgeManager
_cloudKitManager
_contactsManager
_friendListManager
_gatewayManager
_messageCenters
_bulletinBoardInvitationDataProvider
_contactStore
_serialQueue
_friendListLockQueue
_relationshipRecordsToReconcile
_remoteRelationshipRecordsToProcess
_placeholderFriendshipBeganTokens
_hasPendingContactsReconcile
_isWatch
modificationDate
endpoint
healthDaemon
behavior
supportsActivitySharing
primaryProfile
isAppleWatch
initWithProfile:isWatch:
resume
activitySharingManager
initWithQueryUUID:dataObject:clientProxy:client:delegate:profile:activitySharingManager:
serverWithClient:activitySharingManager:error:
exportObjectForListener:client:error:
initWithHealthDaemon:
activate
pluginIdentifier
listenerEndpointForClient:error:
daemonDidReceiveNotification:
queryServerForUUID:serverDataObject:queryClass:clientProxy:client:profile:queryDelegate:
deepBreathingServerForClient:configuration:healthDaemon:delegate:
dataCollectors
setCurrentActivityCacheOverrideDate:timeZone:completion:
_setPluginCatherineFeeder:
_setPluginHeartRateEnable:
setHealthDaemon:
setActivitySharingManager:
_listener
_healthDaemon
_activitySharingManager
fileURLWithPath:
URLByAppendingPathComponent:isDirectory:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dataWithContentsOfURL:options:error:
initWithData:
data
writeToURL:options:error:
hk_gregorianCalendar
timeZone
setTimeZone:
currentDateComponents
dateFromComponents:
isDate:inSameDayAsDate:
isFriendshipCurrentlyActive
dateForLatestRelationshipStart
hk_isBeforeDate:
activeHours
activeHoursGoal
briskMinutes
briskMinutesGoal
endDate
sharedLoader
definitionIdentifier
achievementDefinitionForIdentifier:
compareDisplayOrderOfDefinition:
completedDate
contact
setContact:
sample
setSample:
_contact
_sample
dataManager
workoutType
addObserver:forDataType:
fitnessFriendActivitySnapshotType
fitnessFriendAchievementType
fitnessFriendWorkoutType
alertSuppressionService
registerAlertSuppressionObserver:
removeObserver:forDataType:
unregisterAlertSuppressionObserver:
endObserving
_queue_showFriendNotificationsIfRequired
_localUserDefaultsDomainWithProfile:
numberForKey:error:
setNumber:forKey:error:
stringWithFormat:
_nanoUserDefaultsDomainWithProfile:
_nanoUserDefaultsDomainKeyForFriendWithUUID:keyTypeString:
dateForKey:error:
setDate:forKey:error:
objectForKey:
_queue_selectWorkoutsForNotifications
_queue_selectAchievementsForNotifications
_queue_selectGoalCompletionSnapshotsForNotifications
_queue_postNotificationsForWorkouts:achievements:goalCompletionSnapshots:
fetchActivityAlertSuppressionStateWithCompletion:
friendUUID
snapshotIndex
_mostRecentGoalCompletedSnapshotIndexForFriendWithUUID:
numberWithLongLong:
_setMostRecentGoalCompletedSnapshotIndex:forFriendWithUUID:
_mostRecentWorkoutCompletionDateForFriendWithUUID:
hk_isAfterDate:
hkWorkoutFromFriendWorkout
_setMostRecentWorkoutCompletionDate:forFriendWithUUID:
_mostRecentAchievementEarnedDateForFriendWithUUID:
hkAchievementFromFriendAchievement
_setMostRecentAchievementEarnedDate:forFriendWithUUID:
showGoalCompletionNotificationFromContact:activitySnapshot:
showWorkoutFinishedNotificationFromContact:workout:
showAchievementEarnedNotificationFromContact:achievement:
goalCompletionAnchor
samplesAfterAnchor:profile:error:
setGoalCompletionAnchor:
snapshotUploadedDate
friendWithUUID:
startDate
achievementAnchor
setAchievementAnchor:
timeIntervalSinceDate:
workoutAnchor
setWorkoutAnchor:
currentCalendar
isDateInToday:
isDateInYesterday:
pushActivityDataWithCompletion:
sampleType
_notifyAboutWorkoutsDetectionIfRequired:
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
alertSuppressionInvalidatedForSuppressionId:reason:
beginObserving
_setProfile:
setCloudKitManager:
setContactsManager:
setFriendListManager:
_queue
_dataManager
_bulletinBoardNotificationDataProvider
_receivedChangesFromCloudKit
_isCloudKitManagerProcessingData
userIdentity
isEquivalentToUserIdentityOrPublicKey:
objectsTransformationBlock
objectTransformationBlock
objectsTransformedFromRecords:cloudKitManager:
recordTypes
setRecordTypes:
setObjectsTransformationBlock:
setObjectTransformationBlock:
shouldNotifyObserverBlock
setShouldNotifyObserverBlock:
notifyObserverBlock
setNotifyObserverBlock:
_recordTypes
_objectsTransformationBlock
_objectTransformationBlock
_shouldNotifyObserverBlock
_notifyObserverBlock
initWithSubscriptionID:
setRecordType:
setAlertBody:
setShouldSendContentAvailable:
setNotificationInfo:
setReadyForOperations:
weakObjectsHashTable
_createNotificationSteps
_queue_pushDisable
containerWithIdentifier:
setContainer:
reason
container
setSourceApplicationBundleIdentifier:
initWithContainer:
setCloudKitUtility:
_cloudKitAccountStatusChanged:
_fetchCloudKitAccountStatusAndNotifyOfChanges
deviceLocalActivitySharingKeyValueDomain
_queue_pushEnable
initWithZoneName:ownerName:
activityDataRecordZoneID
initWithRecordName:zoneID:
activityDataRootRecordID
cloudKitUtility
_activityDataShareRecordID
createShareAndAssociatedZoneWithShareRecordID:rootRecord:otherRecordsToSave:completion:
readyForOperations
_createActivityDataShareWithCompletion:
cancelAllExecutingFetches
fetchChangesInPrivateDatabaseWithServerChangeTokenCache:priority:completion:
fetchChangesInSharedDatabaseWithServerChangeTokenCache:priority:completion:
_handleNewPrivateDatabaseRecordChanges:sharedDatabaseRecordChanges:
_queue_fetchAllChangesWithPriority:
_queue_setHasCompletedFirstFetch:
setDateOfLastSuccessfulFetch:
_queue_callFetchCompletionBlocksWithSuccess:error:
_queue_startFetchAllChangesOperationWithPriority:completion:
_queue_cancelAllExecutingFetches
_fetchAllChangesWithPriority:completion:waitingForSuccessfulFetchCompletion:
dateOfLastSuccessfulFetch
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
addOperation:
databaseScope
_saveSubscriptions:andDeleteSubscriptionsWithIdentifiers:inDatabase:completion:
sharedCloudDatabase
_subscribeToChangesInDatabase:subscriptionPrefix:recordTypes:recordTypesToDelete:completion:
privateCloudDatabase
subscriptionID
alertBody
_subscribeToChangesInSharedDatabaseWithCompletion:
_subscribeToChangesInPrivateDatabaseWithCompletion:
stringWithUTF8String:
compare:options:
serverPreferredPushEnvironmentWithCompletionHandler:
userInfo
notificationFromRemoteNotificationDictionary:
topic
_handleIncomingNotification:
forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:recordIDsToDelete:priority:completion:
clearFriendListWithCompletion:
_verifyOrCreateSubscriptionsWithCompletion:
_cancelNewAccountTasksTimer
_saveCloudKitAddressToKeyValueStore
_performAndRetryNewAccountTasksWithRetryInterval:shouldCreateSubscriptions:shouldFetch:
_performNewAccountTasksCreatingSubscriptions:fetching:completion:
setString:forKey:error:
_fetchCloudKitAddressWithCompletion:
stringForKey:error:
_handleAccountStatusChange:
accountStatusWithCompletionHandler:
_queue_isLastCloudKitAddressDifferentFromNewCloudKitAddress:
_performAndRetryNewAccountTasksIfNecessaryWithShouldCreateSubscriptions:shouldFetch:
_queue_clearChangeTokenCacheAndFriendListWithCompletion:
_queue_notifyObserversOfStatusChanged
aa_primaryAppleAccount
aa_isManagedAppleID
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
shareURLForShare:
fetchShareParticipantForEmailAddress:completion:
fitnessFriendActivitySnapshotWithRecord:friendUUID:
_observerQueue_friendUUIDForActivityDataShareRecordZoneID:
fitnessFriendWorkoutWithRecord:friendUUID:
fitnessFriendAchievementWithRecord:friendUUID:
notificationEventWithRecord:friendUUID:
removeObject:
objectAtIndex:
recordType
containsObject:
_enumerateRecordsByRecordZoneID:usingBlock:
_observerQueue_notifyObserversOfBeginUpdates
_observerQueue_clearFriendUUIDByZoneIDCache
_observerQueue_performNotificationStep:onRecords:dispatchGroup:
_observerQueue_notifyObserversOfEndUpdates
remoteActivityDataShareID
dictionaryWithCapacity:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
beginHandlingOperations
endHandlingOperations
fetchAllChangesWithPriority:waitingForSuccessfulFetchCompletion:
fetchAllChangesIfTimeSinceLastFetchIsGreaterThan:priority:completion:
setHasCompletedFirstFetch:
_queue_apsEnvironmentString
fetchCloudKitAccountStatusWithCompletion:
_observerQueue
_apsConnection
_activityDataShare
_observers
_relationshipNotificationStep
_remoteRelationshipNotificationStep
_privateDatabaseActivitySnapshotNotificationStep
_activitySnapshotNotificationStep
_workoutNotificationStep
_achievementNotificationStep
_notificationEventNotificationStep
_pushNotificationRecieved
_currentFetchPriority
_subscriptionNotificationWasReceivedDuringCurrentFetch
_blocksWaitingOnFetch
_blocksWaitingOnSuccessfulFetch
_serverChangeTokenCache
_cloudKitAccountStatus
_newAccountTasksTimer
_friendUUIDsByZoneID
_hasCompletedFirstFetch
_readyForOperations
_cloudKitUtility
_container
_dateOfLastSuccessfulFetch
protobufClass
setProtobufClass:
handleReceiveMessageAction
setHandleReceiveMessageAction:
handleErrorSendingMessageAction
setHandleErrorSendingMessageAction:
_protobufClass
_handleReceiveMessageAction
_handleErrorSendingMessageAction
removeDelegate:
initWithService:
addDelegate:queue:
_processMessageQueue:preprocessingBlock:
_sendMessage:type:destinations:completion:
_handleInviteRequest:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingInviteRequest:
_handleInviteResponse:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingInviteResponse:
_handleFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingFinalizeHandshake:
_handleWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingWithdrawInviteRequest:
_messageHandlerForType:
_dispatchAction:invocationBlock:
context
outgoingResponseIdentifier
_handleMessage:identifier:
_handleMessageSendSuccess:error:identifier:
_handleErrorForMessage:
initWithProtobufData:type:isResponse:
_idsIdentifiersForDestinations:
sendProtobuf:toDestinations:priority:options:identifier:error:
methodForSelector:
containsString:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
setWithCapacity:
_idsIdentifierForDestination:
setWithSet:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
delegate
_idsService
_outgoingDispatchQueue
_incomingDispatchQueue
_outgoingMessageQueue
_retryMessageQueue
_persistedMessageQueue
_delegate
_serviceIdentifier
setIsWatch:
relationshipManager
setRelationshipManager:
periodicUpdateManager
setPeriodicUpdateManager:
UTF8String
_handleHasFriendsChanged
_queue_updateFriendList
registerProvider:
_queue_friendWithUUID:
_allContactsPreferringPlaceholderContacts
isProtectedDataAvailable
activitySnapshotsForFriendWithUUID:
achievementsForFriendWithUUID:
workoutsForFriendWithUUID:
initWithActivitySnapshots:friendAchievements:friendWorkouts:contact:
_queue_friendListDidUpdate
snapshots
_mostSignificantSnapshotAmongSnapshots:
setSnapshots:
friendAchievements
setFriendAchievements:
friendWorkouts
setFriendWorkouts:
_queue_notifyObserversOfFriendListChanges
triggerUUID
filteredSetUsingPredicate:
isMyActivityDataCurrentlyHidden
hasInviteRequestFromMe
inviteRequestToMeWasAccepted
synchronizeUserDefaultsDomain:keys:
initWithSet:copyItems:
setContacts:
removeAllPlaceholderContacts
deleteAllActivitySharingData
friends
friendsUpdated:
_queue_hasFriendsToShareWith
requestImmediateUpdate
placeholderContacts
contactsManagerDidUpdateContacts:
badgeCount
initWithIsWatch:
initializeFriendListAndBeginObserving
updateFriendListWithNewSnapshots:achievements:workouts:
updateFriendListWithDeletedWorkoutEvents:
hasFriendsToShareWith
_friends
_hasFriendsToShareWith
_friendListQueue
_activitySharingHasFriendsChangedToken
_lastReportedFriendsDate
_lastReportedNumberOfFriends
_relationshipManager
_periodicUpdateManager
removePersistentDomainForName:
registerForDaemonReady:
nanoSyncManager
_mainQueue_completeSetupIfNeeded
_mainQueue_nanoRegistryInfoChanged
_applicationsInstalled:
_applicationsUninstalled:
_mainQueue_shouldCompleteSetup
_mainQueue_notifySubmanagersOfManagerReady
_mainQueue_startSubmanagerProcessingIfNeeded
performWhenDataProtectedByFirstUnlockIsAvailable:
loadCachedContacts
beginObservingData
beginPeriodicUpdates
endObservingData
endPeriodicUpdates
fakingManager
activityDataNotificationManager
updateState
_mainQueue_stopSubmanagerProcessingIfNeeded
_waitUntilSubmanagersReady
fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
daemonReady:
nanoSyncManager:pairedDevicesChanged:
sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
pushActivityDataToAllFriendsWithCompletion:
fetchAllDataWithCompletion:
fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
cloudKitAccountStatusWithCompletion:
addFriendListObserver:
removeFriendListObserver:
_readWriteQueue
_submanagerBarrierQueue
_submanagerBarrierGroup
_submanagerInitializationComplete
_submanagerProcessingStarted
_isActivityAppVisible
_pairingStatusChangedToken
_activityDataNotificationManager
_fakingManager
_deviceLocalActivitySharingKeyValueDomain
hasRequiredEntitlement:error:
initWithClient:activitySharingManager:
connection
invalidate
domain
code
remote_sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
remote_acceptInviteRequestFromFriendWithUUID:completion:
remote_sendWithdrawInviteRequestToFriendWithUUID:completion:
remote_ignoreInviteRequestFromFriendWithUUID:completion:
remote_setActivityDataVisible:toFriendWithUUID:completion:
remote_setMuteEnabled:forFriendWithUUID:completion:
remote_removeFriendWithUUID:completion:
remote_pushActivityDataWithCompletion:
remote_pushFakeActivityDataWithCompletion:
remote_fetchAllDataWithCompletion:
remote_fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
remote_cloudKitAccountStatusWithCompletion:
remote_clearFriendListWithCompletion:
remote_fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
exportedInterface
remoteInterface
connectionInvalidated
connectionInterrupted
_client
filter_friendUUID
filter_date
_persistedAnchorWithKey:
_persistedAnchorTokenWithKey:
currentActivitySummaryHelper
addProtectedDataObserver:
todayActivitySummary
yesterdayActivitySummary
removeProtectedDataObserver:
_ckQueue_processActivitySnapshotsForSelf:
_ckQueue_handleNewSnapshotsForSelf:moreComing:
_handleNewSnapshots:workouts:achievements:moreComing:
_ckQueue_handleDeletedWorkoutEvents:completion:
sourceUUID
pairedDevicesSnapshot
activeDeviceInfo
sourceBundleIdentifier
sourceUUIDForBundleIdentifier:error:
isEqualToSet:
_workoutsForActivitySnapshot:anchor:completion:
_achievementsForActivitySnapshot:
_unhiddenSamplesInFilterableSamples:friendTimeZones:
_queue_insertSamples:
dataProvenanceManager
defaultLocalDataProvenance
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
_queue_saveFitnessFriendActivitySnapshots:workouts:achievements:
isActivityDataVisibleToMeForDate:
isHidingActivityDataFromMeForDate:
fullName
deleteDataObjectsOfClass:predicate:limit:deletedSampleCount:notifyObservers:generateDeletedObjects:recursiveDeleteAuthorizationBlock:error:
_queue_deleteAllActivitySharingData
HDDataEntityPredicateForFriendUUID:
_queue_deleteActivityDataForFriendWithUUID:
samplesForFriend:profile:error:
samplesForFriend:anchor:profile:error:
_queue_handleNewSnapshots:workouts:achievements:
hasInitialProtectedDataFetchBeenPerformed
_queue_getAndHandleAllActivitySharingData
setHasInitialProtectedDataFetchBeenPerformed:
startOfDayForDate:
dateByAddingUnit:value:toDate:options:
_queue_samplesAdded:
_hasMoveGoal
activeEnergyBurnedGoal
appleExerciseTimeGoal
appleStandHoursGoal
predicateWithProperty:greaterThanOrEqualToValue:
predicateWithProperty:lessThanValue:
truePredicate
negatedPredicate:
predicateMatchingAllPredicates:
_workoutsAfterAnchor:withPredicate:profile:
setIsWatchWorkout:
samplesWithType:profile:encodingOptions:predicate:limit:anchor:error:
fitnessFriendWorkoutFromHKWorkout:
achievementsWithPredicate:profile:error:
initWithCapacity:
fitnessFriendAchievementFromHKAchievement:
enumerateObjectsUsingBlock:
_localSourceUUID
workoutCompletionEventWithWorkout:
hk_map:
_findDeletedWorkoutEventsWithAnchor:completion:
_queue_setWorkoutAnchor:
_queue_setDeletedWorkoutAnchor:
_queue_setTodayAchievementAnchorToken:
_queue_setYesterdayAchievementAnchorToken:
arrayWithArray:
initWithRecordID:action:
setParent:
entityEnumeratorWithType:profile:
setPredicate:
setAnchor:
longLongValue
deletedWorkoutEventWithUUID:
enumerateIncludingDeletedObjects:error:handler:
isEqualToNumber:
_queue_persistAnchorValue:forKey:
_queue_persistAnchorTokenValue:forKey:
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
database:protectedDataDidBecomeAvailable:
currentAchievement
_cloudKitManagerObserverQueue
_newSnapshotsForSelf
_newSnapshots
_newWorkouts
_newAchievements
_newDeletedWorkoutEvents
_workoutAnchor
_deletedWorkoutAnchor
_todayAchievementAnchorToken
_yesterdayAchievementAnchorToken
_healthDataQueue
_activitySummaryQueue
_currentActivitySummary
_currentLastPushedActivitySummary
_yesterdayActivitySummary
_yesterdayLastPushedActivitySummary
_calendar
_snapshotSourceUUIDsByIndex
_hasInitialProtectedDataFetchBeenPerformed
_currentAchievements
dateActivityDataInitiallyBecameVisibleToMe
string
stringByAppendingString:
token
setToken:
_token
_contactStoreContactWithIdentifier:
setFullName:
_setContacts:waitForTransaction:
_findMatchingContactStoreContactForDestinations:
identifier
setLinkedContactStoreIdentifier:
_waitForTransaction
_notifyObservers
_persistContacts
_beginTransaction
_endTransaction
descriptorForRequiredKeysForStyle:
unifiedContactsMatchingPredicate:keysToFetch:error:
unifiedContactWithIdentifier:keysToFetch:error:
_contactsByUUID
_placeholderContactsByUUID
_contactsQueue
_persistQueue
_contactsTransactionBarrier
lastObject
phoneNumbers
value
stringValue
emailAddresses
initWithQueryUUID:dataObject:clientProxy:client:delegate:profile:
_queue_start
_queue_stop
clientProxy
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
encodedData
queryUUID
client_deliverArchivedFriendList:queryUUID:
_shouldListenForUpdates
_shouldExecuteWhenProtectedDataIsUnavailable
currentlyPairedWatchMeetsMinimumVersion:
_stripFZIDPrefix
_queue_notifyObservers
_currentlyPairedWatchMeetsMinimumVersion
initWithServiceName:onQueue:
addDataProvider:
_registerForFakeBulletins
sectionIdentifier
removeDataProviderWithSectionID:
_deregisterForFakeNotifications
_showFakeInvitationRequest
_showFakeInvitationResponse
_notifyOfFakeInvitationRequest
_showFakeNeedToSignIn
_showFakeNeedToUpgrade
_fakeContact
_showInvitationRequestFromContact:
_showInvitationResponseFromContact:
_notifyOfInvitationFromContact:
setRecordID:
setSectionID:
setPublisherBulletinID:
initWithType:
setTopic:
initWithToneAlertConfiguration:
setSound:
actionWithLaunchBundleID:
setActivationMode:
setDefaultAction:
_queue_bulletinsToOverrideOfType:forContact:
addBulletin:interrupt:
withdrawBulletinsWithRecordID:
localizedStringForKey:value:table:
_bulletinForInvitationFromContact:withTitle:formatString:
_bulletinForInvitationFromContactUUID:title:message:
_newPrepopulatedBulletinRequest
setTitle:
setMessage:
setContextValue:forKey:
_bulletinForInvitationFromContact:
actionWithIdentifier:title:
setAuthenticationRequired:
setSupplementaryActions:
_queue_addBulletinRequest:fromContact:
_queue_removeBulletinRequestsWithType:fromContact:
_showIncompatibleVersionForContact:title:formatString:
defaultSectionInfoForType:
setSectionType:
setPushSettings:
setAlertType:
setVersion:
setMessageNumberOfLines:
setUsesVariableLayout:
defaultSubtypeParameters
setPrivacySettings:
_migrateSectionInfo
version
pushSettings
defaultSectionInfo
updateSectionInfoWithHandler:
sortDescriptorWithKey:ascending:
_queue_removeBulletins:
actionID
bulletinContext
universalSectionIdentifier
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
_dataProviderConnection
_dataProviderProxy
_currentBulletinRequestsByRequestID
_bulletinQueue
notifyInviteRequestToken
notifyInviteResponseToken
notifyOfInviteToken
notifyOfFakeSignInToken
notifyOfFakeUpgradeToken
_queue_performUpdateWithCompletion:
hasRegisteredForUpdates
_hasRegisteredForUpdates
stringByAppendingPathComponent:
bundleWithPath:
_showFakeGoalCompletionNotification
_showFakeAchievementNotification
_showFakeWorkoutNotification
_showGoalCompletionNotificationFromContact:activitySnapshot:isFakedBulletin:
_showWorkoutFinishedNotificationFromContact:workout:isFakedBulletin:
_showAchievementEarnedNotificationFromContact:achievement:isFakedBulletin:
_newPrepopulatedBulletinRequestForContact:
localizedStringWithFormat:
archivedDataWithRootObject:
_queue_addBulletinRequest:fromContact:isFakedBulletin:
setClearable:
variantWithFormat:imageName:inBundle:
setPrecomposed:
addVariant:
existsInSet:
_queue_withdrawBulletinRequest:fromFriendWithID:
publisherDestination
_bulletinByFriendID
notifyGoalCompletionToken
notifyAchievementToken
notifyWorkoutToken
initWithCategory:domainName:profile:
allocWithZone:
copyWithZone:
serverChangeTokenForDatabase:
setServerChangeToken:forDatabase:
serverChangeTokenForRecordZoneID:
setServerChangeToken:forRecordZoneID:
_databaseChangeTokensByDatabaseScope
_zoneChangeTokensByZoneID
initWithZoneID:
capabilities
setCapabilities:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
setQualityOfService:
initWithRecordsToSave:recordIDsToDelete:
setAtomic:
setSavePolicy:
setModifyRecordsCompletionBlock:
_saveRecordsIntoPrivateDatabase:recordIDsToDelete:savePolicy:priority:completion:
_createRecordZonesWithIDs:priority:completion:
_saveRecordsIntoPrivateDatabaseCreatingZones:recordIDsToDelete:savePolicy:priority:completion:
initWithRootRecord:shareID:
setAllowsReadOnlyParticipantsToSeeEachOther:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
_fetchShareWithShareRecordID:completion:
initWithShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
initWithShareURLs:
setPerShareMetadataBlock:
_acceptShareMetadatas:completion:
setFetchShareMetadataCompletionBlock:
lookupInfosWithEmails:
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
anyObject
setFetchShareParticipantsCompletionBlock:
addParticipant:
removeParticipant:
setRecordZoneWithIDChangedBlock:
setFetchDatabaseChangesCompletionBlock:
setRecordChangedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
cancel
array
setPreviousServerChangeToken:
initWithRecordZoneIDs:optionsByRecordZoneID:
setFetchAllChanges:
_fetchChangesInZones:inDatabase:serverChangeTokenCache:priority:allowRetry:completion:
initWithPreviousServerChangeToken:
_fetchChangesInDatabase:serverChangeTokenCache:priority:completion:
_queue_executingFetchOperations
zoneName
ASFakingManager
ASActivitySharingManagerReadyObserver
NSObject
ASMessage
ASMessageQueue
ASRelationshipManager
ASIDSMessageCenterDelegate
ASBBDataProviderDelegate
ASCloudKitManagerChangesObserver
ASGatewayManagerChangesObserver
ASActivitySharingPlugin
HDXPCListenerDelegate
HDHealthPlugin
_ASBulletin
ASActivityDataNotificationManager
HDDataObserver
HDNanoAlertSuppressionObserver
ASNotificationStep
ASCloudKitManager
APSConnectionDelegate
ASMessageHandler
ASIDSMessageCenter
IDSServiceDelegate
ASFriendListManager
ASContactsManagerObserver
HDFitnessAppBadgeCountProvider
ASActivitySharingManager
HDHealthDaemonReadyObserver
HDNanoSyncManagerObserver
ASServer
ASServerInterface
_HKXPCExportable
Filterable
ASFilterableSample
ASActivityDataManager
HDCurrentActivitySummaryHelperObserver
HDDatabaseProtectedDataObserver
_ASContactPlaceholder
ASContactsManager
ASFriendListQueryServer
ASFriendListObserver
ASGatewayManager
ASInvitationBBDataProvider
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
ASPeriodicUpdateManager
ASNotificationBBDataProvider
ExistsInSet
ASCloudKitServerChangeTokenCache
NSCopying
ASCloudKitUtility
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"ASActivitySharingManager"16
^{_HKFitnessFriendWorkout=#}16@0:8
^{_HKFitnessFriendAchievement=#}16@0:8
^{_HKFitnessFriendActivitySnapshot=#}16@0:8
v24@0:8@?16
^{_HKFitnessFriendActivitySnapshot=#}20@0:8B16
v16@0:8
@"HDProfile"
@"ASActivityDataManager"
@24@0:8@16
q16@0:8
v24@0:8q16
i16@0:8
v20@0:8i16
@?16@0:8
@"NSData"
@"NSString"
v32@0:8@16@24
@"NSMutableDictionary"
^{__CFString=}
v48@0:8@16@24@32@?40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24@"NSString"32@?<v@?q>40
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24
v40@0:8@16q24@32
v40@0:8@"ASInvitationBBDataProvider"16q24@"NSUUID"32
v52@0:8@16@24@32B40@?44
v44@0:8@16@24B32@?36
v24@0:8@"ASCloudKitManager"16
v52@0:8@"ASCloudKitManager"16@"NSArray"24@"CKRecordZoneID"32B40@?<v@?>44
v44@0:8@"ASCloudKitManager"16@"NSArray"24B32@?<v@?>36
v36@0:8B16@20@?28
v32@0:8@16@?24
v40@0:8@16q24@?32
@32@0:8@16@24
v40@0:8@16@24@32
@32@0:8@16q24
v40@0:8@16@24@?32
@"HDFitnessAppBadgeManager"
@"ASCloudKitManager"
@"ASContactsManager"
@"ASFriendListManager"
@"ASGatewayManager"
@"NSDictionary"
@"ASInvitationBBDataProvider"
@"CNContactStore"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24^@32
@"<_HKXPCExportable>"40@0:8@"HDXPCListener"16@"HDXPCClient"24^@32
@32@0:8@16^@24
B24@0:8r*16
@72@0:8@16@24#32@40@48@56@64
@48@0:8@16@24@32@40
v20@0:8B16
@24@0:8@"<HDHealthDaemon>"16
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@"HDQueryServer"72@0:8@"NSUUID"16@"_HKQueryServerDataObject"24#32@40@"HDXPCClient"48@"HDProfile"56@"<HDQueryServerDelegate>"64
@"<HDDeepBreathingSessionServer>"48@0:8@16@"_HKDeepBreathingSessionConfiguration"24@"<HDHealthDaemon>"32@"<HDDeepBreathingSessionServerDelegate>"40
@"NSArray"16@0:8
v40@0:8@"NSDate"16@"NSTimeZone"24@?<v@?B@"NSError">32
v24@0:8@"CMCatherineFeeder"16
@"HDXPCListener"
@"<HDHealthDaemon>"
@"ASActivitySharingManager"
@"ASContact"
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
v32@0:8@16q24
v32@0:8@"NSString"16q24
@"HDDataManager"
@"ASNotificationBBDataProvider"
@"NSSet"
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8q16@?24
v28@0:8B16@20
v40@0:8q16@?24@?32
v40@0:8Q16q24@?32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24q32@?40
v32@0:8B16B20@?24
v32@0:8d16B24B28
v24@0:8B16B20
@"APSConnection"
@"CKShare"
@"NSHashTable"
@"ASNotificationStep"
@"NSArray"
@"ASCloudKitServerChangeTokenCache"
@"NSObject<OS_dispatch_source>"
@"ASCloudKitUtility"
@"CKContainer"
@"NSDate"
v24@0:8#16
:16@0:8
v24@0:8:16
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@20@0:8i16
v36@0:8B16@20@28
v44@0:8@16i24@28@?36
v32@0:8:16@?24
@"IDSService"
@"ASMessageQueue"
@"<ASIDSMessageCenterDelegate>"
v24@0:8@"ASContactsManager"16
@20@0:8B16
@"ASRelationshipManager"
@"ASPeriodicUpdateManager"
v24@0:8@"<HDHealthDaemon>"16
v32@0:8@"HDNanoSyncManager"16@"HKNanoSyncPairedDevicesSnapshot"24
@28@0:8@16B24
v32@0:8Q16@?24
@"NSObject<OS_dispatch_group>"
@"ASActivityDataNotificationManager"
@"ASFakingManager"
@"HDKeyValueDomain"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8B16@"NSString"20@?<v@?B@"NSError">28
v24@0:8@?<v@?B@"NSError">16
v32@0:8Q16@?<v@?B@"NSError">24
v24@0:8@?<v@?BB@"NSError">16
v32@0:8@"NSNumber"16@?<v@?BB@"NSError">24
@"NSXPCInterface"16@0:8
@"HDXPCClient"
@"NSUUID"16@0:8
@"NSDate"16@0:8
v40@0:8@16@24Q32
v40@0:8@"HDCurrentActivitySummaryHelper"16@"HKActivitySummary"24Q32
v28@0:8@"<HDHealthDatabase>"16B24
v44@0:8@16@24@32B40
v40@0:8^{_HKFitnessFriendActivitySnapshot=#}16@24@?32
@40@0:8^@16@24@32
@24@0:8^{_HKFitnessFriendActivitySnapshot=#}16
@"NSNumber"
@"HKActivitySummary"
@"NSCalendar"
@24@0:8@?16
v24@0:8@"NSSet"16
@72@0:8@16@24@32@40@48@56@64
B20@0:8I16
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
@40@0:8@16@24@32
f24@0:8@16
B32@0:8@16@24
@40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@"NSSet"40@0:8Q16Q24@32
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
@"BBDataProviderConnection"
@"BBDataProviderProxy"
@"<ASBBDataProviderDelegate>"
v32@0:8@16^{_HKFitnessFriendActivitySnapshot=#}24
v36@0:8@16^{_HKFitnessFriendActivitySnapshot=#}24B32
v36@0:8@16@24B32
@24@0:8^{_NSZone=}16
v56@0:8@16@24q32q40@?48
v60@0:8@16@24@32q40B48@?52
Error parsing message queue with name %{public}@, serialized data is not a dictionary (%{public}@)
RelationshipManager setting activity data visibility to %zd for friend with UUID: %{public}@
Could not find participant with email %@ on share.
Failed to fetch share participant with email %@.
Failed to fetch activity data share.
RelationshipManager not changing activity data visibility - already matches current visibility
RelationshipManager setting muting to %zd for friend with UUID: %{public}@
RelationshipManager could not change muting - contact not found.
RelationshipManager not changing muting - already matches current state
RelationshipManager starting invite flow for person with destination: %@, serviceIdentifier: %{public}@
RelationshipManager error: max number of friends reached
RelationshipManager looking up placeholder contact
RelationshipManager didn't find existing contact, creating new placeholder
RelationshipManager fetch complete, looking up contact again
RelationshipManager didn't find existing contact, copying the placeholder to save so the UUIDs match
RelationshipManager contact already exists, just update it with the invite data
RelationshipManager friendship already active, but activity data is not visible
RelationshipManager not sending invite to avoid triggering an unhide on the remote device
RelationshipManager sending invite with token %@ to destination: %@
RelationshipManager preparing to accept invite from friend with UUID: %{public}@
RelationshipManager couldn't find a contact with the given UUID
RelationshipManager error sending invite response: %{public}@
RelationshipManager sending invite response %zd with token %@ to %@
RelationshipManager attepting to withdraw invite request to friend with UUID: %{public}@
RelationshipManager couldn't find a person with the given UUID
RelationshipManager detected friendship is already active
RelationshipManager didn't find a pending outgoing request to this contact
RelationshipManager attempting to ignore incoming invite from friend with UUID: %{public}@
RelationshipManager not able to ignore invite, relationship doesn't have pending incoming request, status: %@
RelationshipManager received invite request from %@, cloudKitAddress=%@, callerID=%@
RelationshipManager invite info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing invite because activity app is not installed, persisting for later delivery
Could not determine gateway status: %{public}@, persisting message
RelationshipManager received an incompatible invite (current version = %d, inviter version = %d)
RelationshipManager not notifying via BB and not auto-accepting
RelationshipManager friendship already active for this person, automatically accepting
RelationshipManager notifying via bulletin board
RelationshipManager received invite response from %@, cloudKitAddress=%@
RelationshipManager response info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing response because activity app is not installed, persisting for later delivery
RelationshipManager couldn't find previously invited friend with token: %@
RelationshipManager received an incompatible response (current version = %d, invitee version = %d)
RelationshipManager rejecting invite response because relationship doesn't have a pending outgoing invite request, current state is: %{public}@
RelationshipManager accept received and processed, notify via BB
RelationshipManager sending finalize handshake with token: %@
RelationshipManager received final handshake, token: %@
RelationshipManager not finalizing, relationship doesn't has incoming invite request: %@
RelationshipManager remote relationship is already active, remove placeholder
RelationshipManager received withdraw invite, token: %@, person: %@
RelationshipManager didn't find a pending invite to withdraw - this invite may already have been acted upon
RelationshipManager current state is %{public}@
RelationshipManager processing withdraw will continue anyway
RelationshipManager received new relationship records from CloudKit, more coming: %zd
RelationshipManager received multiple local relationships on a single record ID: %@, relationship: %@
RelationshipManager received new remote relationship records from CloudKit
RelationshipManager received multiple remote relationship records for a single share from CloudKitManager, taking only the newest
RelationshipManager finished processing remote relationships
RelationshipManager received BB response: %zd in ASActivitySharingManager
Relationship manager couldn't find person with UUID: %{public}@
RelationshipManager not processing persisted messages, device is a watch
RelationshipManager not processing persisted messages, activity app is not installed
RelationshipManager processing persisted invitation messages if available
RelationshipManager could not determine status for processing persisted invitations: %{public}@
RelationshipManager not processing persisted invitation messages at this time
RelationshipManager ending friendship with friend that has an existing friendship begin placeholder, removing placeholder
RelationshipManager ending friendship with friend with UUID: %{public}@
RelationshipManager found friendship is not currently active. Still attempting to remove person from shares, just to be safe
RelationshipManager removing contact with cloudKitAddress %@ from activity data share
RelationshipManager error removing friend from activity data share (could not remove particpant): %{public}@
RelationshipManager error removing friend from activity data share (could not fetch share): %{public}@
RelationshipManager contact does not have a cloudKitAddress, not attempting to remove from share
RelationshipManager coudn't find match, creating new contact
RelationshipManager creating new outgoing handshake token: %@
RelationshipManager outgoing handshake token already exists for this person: %@
RelationshipManager inserting placeholder contact
RelationshipManager found existing placeholder began token for this contact: %@
RelationshipManager removing placeholder contact to avoid orphaning the token
RelationshipManager fetching activity data share
RelationshipManager error fetching activity data share: %{public}@
RelationshipManager successfully fetched activity data share
RelationshipManager error fetching relationship share: %{public}@
RelationshipManager successfully fetched relationship share
RelationshipManager failed to fetch relationship share because relationship had no archived share ID
RelationshipManager error de-serializing relationships: %@
RelationshipManager successfully saved relationship record in CloudKit
RelationshipManager error fetching/creating activity data share when saving new relationship: %{public}@
RelationshipManager error creating or fetching relationship share: %{public}@
RelationshipManager successfully saved relationship record in CloudKit for UUID %{public}@
RelationshipManager creating new relationship share
RelationshipManager error saving relationship record in CloudKit: %{public}@
RelationshipManager serializing relationship records and saving to CloudKit
RelationshipManager adding person with cloudKitAddress %@ to my shares
RelationshipManager error adding person to shares: %{public}@
RelationshipManager succesfully added person to shares
RelationshipManager accepting shares: %@
RelationshipManager error accepting invitee shares %@, error: %{public}@
RelationshipManager success accepting shares
RelationshipManager reconciling new cloudKit relationships
RelationshipManager found %zd existing relationships, merging
RelationshipManager first merging on share ID
RelationshipManager found a conflict (%@/%@ vs %@/%@)
RelationshipManager determined the cloudKit relationship is newer, taking it
RelationshipManager determined cloudKit relationship is older, keeping the existing relationship
RelationshipManager found a new relationship that doesn't exist locally (%@/%@)
RelationshipManager checking for duplicate cloudKit addresses
RelationshipManager found relationship that didn't have a cloudKit address, not checking for duplicates: %@
RelationshipManager found a conflicting relationship - different share ID with the same cloudKit address
RelationshipManager relationship %@
RelationshipManager conflicts with %@
RelationshipManger resolved to the newest relationship: %@
RelationshipManager preparing to reconcile with address book (%zd relationships)
RelationshipManager deleting existing friends list
RelationshipManager starting reconcile pass: %{public}@ (%zd remaining relationships)
RelationshipManager create person without address book match is %d for this pass
RelationshipManager looking for contact with destinations: %@
RelationshipManager contact already has a relationship (possibly from a previous pass): %@
RelationshipManager not matching to avoid clobbering
RelationshipManager contact in address book: %d
RelationshipManager found a match for relationship: %@
RelationshipManager matching contact: %{public}@ - %@
RelationshipManager had previous existing contact for the relationship, putting back the original remote relationship
RelationshipManager saving match to %@
RelationshipManager didn't find a match
RelationshipManager reconcile didn't receive destinations, skipping this pass (%{public}@)
RelationshipManager reconcile complete, result:
%@ -> %@
RelationshipManager processing remote relationships
RelationshipManager unable to find contact with remote relationship zone ID: %@
RelationshipManager orphaned remote relationship: %@
RelationshipManager evaluating new remote relationship for contact: %{public}@ - %@
RelationshipManager new remote relationship: %@
RelationshipManager previous remote relationship: %@
RelationshipManager does not need to process remote relationship events, this is the first CK fetch
RelationshipManager local friendship is active, comparing final remote state with previous remote relationship
RelationshipManager checking if another invite flow is in progress: %d
RelationshipManager determined this relationship was ended remotely
RelationshipManager determined this relationship began remotely
RelationshipManager traversing new events at anchor %zd
RelationshipManager detected a friendship that was ended remotely, local activity data should be deleted
RelationshipManager waiting for asynchronous remote processing
RelationshipManager creating friend list transaction, identifier: %{public}@
RelationshipManager friend list transaction starting, identifier: %{public}@
RelationshipManager friend list lock operation timed out! identifier: %{public}@
RelationshipManager finished friend list transaction, identifier: %{public}@
RelationshipManager found a relationship that was missing a record ID: %@
RelationshipManager observed contact store change
RelationshipManager reconcile for new contacts already scheduled
RelationshipManager scheduling new reconcile for contact store change
RelationshipManager firing new reconcile for contact store change
RelationshipManager message didn't include an activity snapshot preview, not processing
RelationshipManager message included a snapshot, processing
RelationshipManager generated activity data preview: %@/%@ calories, %@ workouts, %@ achievements
RelationshipManager wasPreviouslyActive=%d, isCurrentlyActive=%d
[%@] Activity Sharing plugin loaded.
Activating Activity Sharing plugin.
Health Daemon supports Activity Sharing, creating ActivitySharingManager.
Health Daemon does not support Activity Sharing, not creating ActivitySharingManager!
Creating ASFriendListQueryServer for incoming query.
Not creating query server for query with class %@
Not creating query server because ActivitySharingManager does not exist
Error creating cache directory (%@): %@
Error reading from file (%@): %@
Error writing to file (%@): %@
Error: %{public}@ retrieving achievement anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving achievement anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving workout anchor data from key value domain. anchor: %{public}@
Error:%{public}@ saving workout anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving goal completion anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving goal completion anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving achievement earned data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving achievement earned data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving workout completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving workout completion data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving goal completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving goal completion data into key value domain. %{public}@: %{public}@
ActivityDataNotificationManager: Showing friend notifications if required
Alert suppression state set to NO. Fetching new data for friends.
Alert suppression state set to YES. So not fetching new data for friends.
ActivityDataNotificationManager: Not showing notifications since pref is disabled.
Posting notifications
Workouts: %zd
Achievements: %zd
Goal completions: %zd
Collecting bulletins for friend with UUID: %{public}@
Skipping friend, contact not found
Skipping friend, mute enabled
Collecting goal completion bulletins
Evaluating snapshot: %@
Snapshot index: %zd
Snapshot is valid, notify
Not notifying for snapshot - not after last known snapshot date
Collecting workout bulletins
Last known workout completion date: %@
Evaluating workout: %@
Workout end date: %@
Workout is valid, notify
Not notifying for workout - not after last known workout date
Collecting achievement bulletins
Last known achievement completion date: %@
Evaluating achievement: %@
Achievement completed date: %@
Achievement is valid, notify
Not notifying for achievement - not after last known achievement date
Selecting goal completion snapshots for notifications
Current goal completion anchor is %{public}@
Error: %{public}@ fetching snapshots
GoalCompletionAnchor set to: %{public}@
Evaluating new snapshot with index: %lld, date: %{public}@
Snapshot is not in the current day for friend with UUID: %{public}@
Snapshot doesn't represent goal completion, don't notify
Snapshot uploaded prior to relationship starting, don't notify
Snapshot is for a date prior to when the relationship began, don't notify.
Snapshot meets notification critera
Selecting achievements for notifications
Current achievement anchor is %{public}@
Error: %{public}@ fetching achievements
AchievementAnchor set to: %{public}@
Evaluating new achievement, completed date is %{public}@
Achievement completed prior to the relationship starting, don't notify about it
Achievement is too old, don't notify about it
Achievement meets notification criteria
Selecting workouts for notifications
Current workout anchor is %{public}@
Error: %{public}@ fetching workouts
WorkoutAnchor set to: %{public}@
Evaluating workout, end date (on remote device) is %{public}@
Workout completed prior to the relationship starting, don't notify about it
Workout is not in the current day for friend with UUID: %{public}@
Workout is new enough and relationship is active
ActivityDataNotificationManager: at least one workout is in today or yesterday, request data push
ActivityDataNotificationManager: samples removed, checking if any are workouts
ActivityDataNotificationManager: at least one sample is a workout, requesting push
ActivityDataNotificationManager received notification events from CloudKit; showing notifications if required.
Recieved %zd new notification events.
Processing %zd new notification events.
Finished processing new notification events, calling changesProcessedHandler.
Notification step trying to transform objects with no multi-record or single-record transformation blocks set.
Failed to create container with exception %{public}@
Failed to get CloudKit container with identifier %{public}@
Error initializing hasCompletedFirstFetch from key value domain: %{public}@
hasCompletedFirstFetch initialized to: %d
Fetching changes in private database failed with error: %{public}@
Fetched changes in private database successfully.
Fetching changes in shared database failed with error: %{public}@
Fetched changes in shared database successfully.
Fetched changes: %ld private, %ld shared changed records.
Not handling changes because we found zero changed records.
A subscription notification came in during the last fetch, running another fetch now.
Fetched changes successfully, calling completions.
Failed to fetch changes with error %{public}@
Lower priority fetches are executing, cancelling all fetches before running higher priority fetch; current priority: %zd, requested priority: %zd
Running fetch with priority %zd now.
A same or higher priority fetch is executing, adding completion to pending completion block list; current priority: %zd, requested priority: %zd
Fetch requested if no fetch performed within last %zd seconds, last fetch was %lf seconds ago
Fetch requested if no fetch performed within last %zd seconds, no successful fetch performed yet
Last fetch is too recent, not fetching.
Error updating key value domain with completed first fetch: %{public}@
Updated has completed first fetch: %d
Saved %zd subscriptions, deleted %zd subscriptions.
Creating subscription to records with type %{public}@ in database %{public}@
Saved %zd subscriptions into database %{public}@.
Failed to save subscriptions into database %{public}@ with error: %{public}@
Recieved CloudKit push notification for subscription with id: %{public}@
CloudKit push received during coalescing period, ignoring.
Push notification coalescing interval starting, will take %lf seconds.
Push notification coalescing interval finished, fetching changes.
Push notification received during a fetch, fetching again after current fetch completes.
Push notification is low-priority, not fetching.
Error getting server APS preferred push environment: %{public}@
Timeout getting server preferred APS push environment
Using APS push environment: %{public}@
Received public token "%@" on connection %p
Received per-topic push token "%@" for topic "%{public}@" identifier "%@" on connection %p
APS push recieved: %@ %@
Recieved local notification of CloudKit account status changes; fetching 
New CloudKit account is now active, performing setup tasks.
Creating subscriptions.
Fetching changes.
Setup tasks complete, success: %zd, error: %@
New account tasks are complete, not scheduling a retry.
New account tasks failed, scheduling a retry for %lf seconds from now
Error setting new CloudKit address in key value domain: %{public}@
Set %@ as CloudKit address in key value domain.
Error reading previous CloudKit address from key value domain: %{public}@
CloudKit address (%@) does not match previous CloudKit address (%@)
Error getting CloudKit account status: %{public}@
Fetched CloudKit account status: "%{public}@"
CloudKit account status changed, handling
Previous account status: "%{public}@"
isSignedOut=%d
isSignedInAfterBeingSignedOut=%d
isSignedInToNewAccount=%d
shouldClearStateAndEraseFriendList=%d
shouldCreateSubscriptions=%d
shouldPerformFetch=%d
Posted notification of CloudKit account status change
Apple ID is a managed account, reverting to unsigned-in behavior
Fetching cloudKit address
Error fetching CloudKit address: %{public}@
Fetched CloudKit address: %@
Notifying observers of changes with types: %{public}@
Evaluating shouldNotifyObserverBlock for observer of class %@
Notifying observer of class %@
Finished notifying observer of class %@
CloudKit Manager beginning update transaction.
CloudKit Manager status changed. Notifying observers
CloudKit Manager ending update transaction.
Notifying observers of [non-remote] relationship changes
Notified observers of [non-remote] relationship changes.
Notifying observers of [non-remote] activity data changes
Notified observers of [non-remote] activity data changes.
Notifying observers of [remote] relationship changes
Notified observers of [remote] relationship changes.
Notifying observers of activity data changes
Notified observers of activity data changes.
Notifying observers of notification event changes
Notified observers of notification event changes.
IDSMessageCenter [%{public}@] processing retry messages
IDSMessageCenter [%{public}@] processing persisted messages
IDSMessageCenter message handled successfully
IDSMessageCenter persisting message for later use
IDSMessageCenter message needs retry, current count is %zd
IDSMessageCenter message has been retried too many times, discarding
IDSMessageCenter ignoring protobuf with unknown type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter received protobuf of type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter sent protobuf with guid %{public}@ to server with success: %d error: %{public}@
IDSMessageCenter successfully delivered protobuf with guid %{public}@ to remote device
IDSMessageCenter success sending protobuf with type %{public}@, guid %{public}@
IDSMessageCenter error sending protobuf with type %{public}@, guid %{public}@, error: %{public}@
IDSMessageCenter requesting send for protobuf of type %{public}@ to destinations: %@
IDSMessageCenter successfully requested send for protobuf of type %{public}@, guid: %{public}@
IDSMessageCenter error requesting send for protobuf of type %{public}@, error: %{public}@
IDSMessageCenter redelivering protobuf of type %{public}@, guid: %{public}@, from: %@
Updating local friend list from %zd contacts
Updating list for contact %{public}@ (%@)
Found existing friend %{public}@ - %@, updating contact reference
Protected data is not available, not getting data for contact %{public}@ (%@)
Added new friend %{public}@ - %@ to local friend list with %zd snapshots, %zd workouts, %zd achievements.
Finished updating local friend list from contacts
Updated friend %{public}@ (%@) with new snapshot with index %lld
Failed to update friend list with snapshot with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new achievement with definition identifier %@
Failed to update friend list with achievement with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new workout with UUID %{public}@
Failed to update friend list with workout with friend UUID %{public}@ because no friend was found with matching UUID
Updating friend list with %zd deleted workout events
Unable to find friend with UUID: %{public}@, skipping deleted workout with UUID: %{public}@
Removing deleted workout [%{public}@] for friend: %@
Successfully found deleted workout on snapshotIndex: %@
Not counting friend toward hasFriendsToShareWith because data is currently hidden: %{public}@ - %@
Checking local friend list for friends to share with: %zd, checking defaults: %zd
Updating and syncing default for friends to share with, setting to: %zd
Checked for friends to share with, found friends: %zd
Clearing entire friend list!
Notifying observers of friend list changes %zd friends.
Has Friends default change notification received
Friends List did update: %zd friends
Received NR pairing status changed notification
Running friend manager setup
This device is a watch, setting up activity data notification manager.
Data protected by first unlock available
ActivitySharingManager setup complete
ActivitySharingManager final setup skipped
Skipping friend manager setup
Attempting to start submanagers
Not starting submanagers, activity app is not installed
Not starting submanagers, processing has already started
Attempting to stop submanagers
Not stopping submanagers, activity app is installed
Not stopping submanagers, processing has not been started
Proceeding with submanager shutdown
Notifying object of class %{public}@ of Activity Sharing Manager ready.
ASActivitySharingManager method called when submanagers will not be initialized, waiting forever is expected.
NanoSyncManager updated status, checking if Activity app is visible: %zd
ActivitySharingManager applications installed: %@
ActivitySharingManager Activity app installed
ActivitySharingManager applications uninstalled: %@
ActivitySharingManager Activity app uninstalled
ASServer rejecting client connection missing entitlement
Recieved %zd new notification events
Processing %zd new notification events
Received events for %zd deleted workout(s)
There are %zd new deleted workouts, handling.
Finished handling deleted workouts, calling changesProcessedHandler
No new deleted workouts, calling changesProcessedHandler
More notification events coming, calling changesProcessedHandler
Processing %zd snapshots of self.
Incoming snapshots for self are: %@
Final snapshot dict for self: %@
Error getting source UUID for active device: %{public}@
Could not find paired active device UUID.
Multiple devices sharing status requested for snapshot index: %{public}@, active device UUID: %{public}@
Are multiple devices sharing: %zd
Filtered hidden data: %zd/%zd snapshots, %zd/%zd workouts, %zd/%zd achievements.
Saved activity sharing data to database: %zd samples.
Error %{public}@ saving activity sharing data
Provenance is nil when trying to save fetched friend data.
No samples to save.
Not allowing sample for friend %{public}@ - %@
Sample date: %{public}@
Activity data visible: %d
Explicitly hiding: %d
Is on same day as friendship began: %d
Deleting all friend data!
Failed to delete all friend data with error: %{public}@
Deleted friend data successfully, %zd samples.
Failed to remove ASAchievementEntity samples for friend UUUD: %{public}@
Removed %ld ASAchievementEntity samples for friend UUUD: %{public}@
Failed to remove ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Removed %ld ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Failed to remove ASWorkoutEntity samples for friend UUUD: %{public}@
Removed %ld ASWorkoutEntity samples for friend UUUD: %{public}@
Failed to get activity snapshots from entity with error: %{public}@
Failed to get friend achievements from entity with error: %{public}@
Failed to get friend workouts from entity with error: %{public}@
Error fetching snapshots after protected data became available: %{public}@
Error fetching workouts after protected data became available: %{public}@
Error fetching achievements after protected data became available: %{public}@
Protected data became available and we haven't fetched friends' data yet, fetching from database now.
Recieved a sample with invalid type: %{public}@
Friend samples were added to database: %zd snapshots, %zd workouts, %zd achievements.
New today activity summary available, but doesn't have a move goal yet - copying existing known goals
Failed to create Apple Watch samples predicate with error: %{public}@
Error: %{public}@ fetching workouts with predicate: %{public}@, anchor: %{public}@
Error getting local source UUID to attach to snapshots: %{public}@
Looking for today workouts to push with anchor %@
Found %zd workouts
Found %zd achievements for today, todayAnchorChanged=%d
Looking for yesterday workouts to push with anchor %@
Found %zd achievements for yesterday, yesterdayAnchorChanged=%d, yesterdayAnchorMatchesToday=%d
Not pushing data because there are no friends to share with.
Updating share: pushing %zd snapshots, %zd achievements, %zd workouts, %zd events.
Updating share: pushing %zd items.
Updating share: deleting %zd workout records
Updating share failed with error %{public}@.
Updating share succeeded.
Updating share: no new data to send to push to CloudKit.
Looking for deleted workouts with anchor: %{public}@
Found deleted workout, id=%lld, uuid=%{public}@
Finished looking for deleted workouts
Error enumerating deleted workouts: %@
Received an event for deleted workout: %@
Error deleting workouts: %{public}@
Successfully deleted %zd workout(s)
Error reading %{public}@ from key value domain: %{public}@
Loaded %{public}@: %{public}@
Loaded %{public}@: [%{public}@]
Error updating %{public}@ in key value domain: %{public}@
Updated %{public}@ to %{public}@
Updated %{public}@ to [%{public}@]
ContactsManager loading cached contacts
ContactsManager has some contacts that already exist in memory! Replacing with contacts from disk cache
ContactsManager found no contacts in cache, checking user defaults
ContactsManager found contacts in user defaults, migrating
ContactsManager initialized cached contact: %{public}@ - %@
ContactsManager loaded %zd cached contacts
ContactsManager creating new contact with destinations: %@
ContactsManager resulting contact: %@
ContactsManager error saving contact, no UUID: %@
ContactsManager saving contact: %{public}@ - %@
ContactsManager error saving placeholder contact, no UUID: %@
ContactsManager saving placeholder contact (token=%{public}@): %{public}@ - %@
ContactsManager removing placeholder contact with token %{public}@
ContactsManager couldn't find contact with token %{public}@
ContactsManager found placeholder contact to remove %{public}@ - %@
ContactsManager removing all placeholder contacts (%zd placeholder contacts)
ContactsManager error setting contact, no UUID: %@
ContactsManager saving %zd contacts
ContactsManager beginning transaction
ContactsManager ending transaction
ContactsManager error, transaction timed out
ContactsManager persisting %zd contacts to disk
ContactsManager notifying %zd observer(s) of contacts update
ContactsManager error looking for contacts matching predicate: %@
ContactsManager multiple contacts matched destination: %@
ASFriendListQueryServer: Starting.
ASFriendListQueryServer: stopping.
ASFriendListQueryServer calling deliverArchivedFriendList with %zd friends
Status for currentlyPairedWatchMeetsMinimumVersion: %zd
Gateway status, iCloud signed in: %zd, need to upgrade in: %zd
Should filter incoming message from %@ = %zd
Updating state - status for canProcessInvitation: %zd
Gateway Manager status changed. Notifying observers
Adding bulletin with connection %p and proxy %p
Withdrawing bulletin with connection %p and proxy %p
Showing invitation request bulletin from %{public}@ - %@
Notifying about invitation request from %{public}@ - %@
Sharing is setup. Showing invite request with actions.
Sharing is not set up. Showing invite request without actions.
iCloud is not signed in. Showing invite request with prompts to sign in.
Watch(es) not all on latest watchOS. Showing invite request with prompts to upgrade.
Showing invitation response bulletin from %{public}@ - %@
Withdrawing invitation request bulletin from %{public}@ - %@
Showing version incompatible notification for %{public}@ - %@
Showing invite response error for %{public}@ - %@
Showing max number of friends limit
InvitationBBDataProvider: removeBulletins withdrew clearedBulletins:%@ and currentSet:%@
Migrating data provider push settings %{public}@ to %{public}@
InvitationBBDataProvider: Cleared info for clearedBulletins: %@ and lastClearedInfo: %@
InvitationBBDataProvider: returning bulletins with request parameters currentSet:%@ and lastClearedInfo:%@
Handling bulletin action response: %{public}@ RESPONSE: %{public}@
PeriodicUpdateManager registering xpc activity
PeriodicUpdateManager xpc activity fired, state=%zd
PeriodicUpdateManager failed to set xpc activity state to continue
PeriodicUpdateManager setting update task as done
PeriodicUpdateManager failed to set xpc activity state to done
Immediate periodic update requested.
Performed periodic update immediately.
PeriodicUpdateManager requesting push
PeriodicUpdateManager failed to push: %{public}@
PeriodicUpdateManager initiating fetch changes from CloudKit
PeriodicUpdateManager fetch changes completed
Not performing periodic update because we have no friends.
Showing goal completion for contact: %{public}@ - %@ with snapshot %@
Showing workout for contact: %{public}@ - %@ without workout %@
Showing achievement for contact: %{public}@ - %@ with achievement %@
Creating a new bulletin with contact: %{public}@ - %@
Adding faked bulletin with connection %p and proxy %p
Did not add bulletin because the friend could not be identified.
Migrating data provider push settings %zd to %zd
Failed to create record zones with IDs %@ with error: %{public}@
Created record zones in private database: %@
Failed to save records into private database with error: %{public}@
Saved %zd records into private database.
Zones not found when saving records, creating zones and re-trying save.
Cannot create a share with a root record in a different record zone.
Fetching share with ID: %@
Found share: %@
Failed to fetch share with ID %@, error: %{public}@
Accepted share with URL %@ and share ID %@
Failed to accept share with URL %@ with error: %{public}@
Accepted all shares successfully
Failed to accept shares with error: %{public}@
Fetched share metadata for URL %@ successfully
Error fetching share metadata: %{public}@
Fetching share metadata failed with error %{public}@; not accepting shares
Incorrect number of metadatas fetched; not accepting shares.
Accepting shares after fetching metadata (%zd metadatas)
Adding participant with address %@ to shares: %@
Adding participant %@ failed: saving shares failed with error: %{public}@
Added participant %@ to shares %@ successfully.
Adding participant %@ failed: failed to fetch user identity with error: %{public}@
Removing participant with address %@ from shares with IDs: %@
Removing participant %@ failed: saving shares failed with error: %{public}@
Removed participant %@ from shares with IDs %@ successfully.
Removing participant %@ failed: failed to fetch user identity with error: %{public}@
Fetching changes in %zd record zones (database %{public}@)
Change token expired for zone %@
Failed to fetch changes in zone %@ with error %{public}@
Fetched changes successfully in zone %@
Finished fetching changes in database %{public}@, %zd records
Some change tokens have expired, fetching again.
Calling completion with %zd changed records
Fetching changes in database %{public}@
Ignoring changes in zone with ID: %{public}@
No changes in database %{public}@, not fetching.
Failed to fetch changed record zones in database %{public}@ with error %{public}@
