setPurposeDescription:
setSyntaxDescription:
setDiscussion:
setSingleHyphenLongNames:
alloc
init
startWithMessage:
hasPrefix:
UTF8String
length
initWithPattern:forArgument:error:
parseArgumentsWithBlock:
usage:
directedGraphWithData:error:
localizedDescription
stackLogReader
processDescriptionString
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
binaryImagesDescription
initWithTask:symbolicator:
usesLiteMode
initWithTask:getBinariesList:
description
initWithTask:
addRootNodesFromTask
addMallocNodesFromTask
zoneCount
zoneNameForIndex:
setObject:forKeyedSubscript:
nodeCount
objectForKeyedSubscript:
nodeDetails:
addRange:
enumerateRegionsWithBlock:
count
rangeAtIndex:
getFramesForAddress:size:inLiteZone:stackFramesBuffer:
functionNameForPCaddress:
mapTableWithKeyOptions:valueOptions:
class
isKindOfClass:
nodeDescription:
matchesNodeDetails:orNodeDescription:
inspectingLiveProcess
liteModeStackIDforAddress:size:
enumerateRecords:
name
isEqualToString:
objectForKey:
setObject:forKey:
initWithSymbolicator:sampler:options:
setStackLogReader:
getFramesForStackID:stackFramesBuffer:
stringByAppendingString:
addBacktrace:count:numBytes:
sort
addChildWithName:address:count:numBytes:toNode:
allBacktracesHaveBeenAdded
invertedNode
stringFromCallTreeIndentIfNoBranches:
stop
exceptionWithName:reason:userInfo:
labelForNode:
newlineCharacterSet
rangeOfCharacterFromSet:options:
componentsSeparatedByCharactersInSet:
objectAtIndexedSubscript:
stringByAppendingFormat:
stringWithFormat:
stringByReplacingOccurrencesOfString:withString:
member:
addObject:
symbolicatedBacktraceForStackID:isLiteZone:options:
enumerateObjectsWithBlock:
setCountStyle:
stringFromByteCount:
setNumberStyle:
numberWithLongLong:
stringFromNumber:
hasSuffix:
dealloc
className
_regex:matchesName:
displayName
_matchesClassInfo:
_classesRegex
_vmRegionsRegex
_memoizedRegexResult
initWithFormat:arguments:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
initWithString:
handleFailureInMethod:object:file:lineNumber:description:
characterAtIndex:
rangeOfString:
appendString:
stringWithString:
appendFormat:
removeAllObjects
userInfo
code
countByEnumeratingWithState:objects:count:
registerOptionWithLongName:shortName:hasArgument:argumentName:optionDescription:handler:
.cxx_destruct
purposeDescription
syntaxDescription
discussion
singleHyphenLongNames
parametersShowAsAssignment
setParametersShowAsAssignment:
_purposeDescription
_syntaxDescription
_discussionDescription
_optionDescriptions
_optionBlockByString
_longOptStructs
_shortOpts
_spacing
_singleHyphenLongNames
_parametersShowAsAssignment
containsString:
stringByResolvingSymlinksInPath
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:options:error:
string
processInfo
arguments
arrayWithArray:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
intValue
is64Bit
valueForEnvVar:
numberWithInt:
stringValue
Displays/aggregates allocation histories in a process
<pid | partial-process-name> [options] <mode> [<address> ...]
'mode' should be one of {-callTree, -allBySize, -allByCount, -allEvents, or one or more addresses}
v8@?0
allBySize
[mode]
allByCount
allEvents
fullStacks
print backtraces with one line per frame
callTree
debug
highWaterMark
machineReadableOutput
showContent
(-allEvents, -calltree only)
invert
(-calltree only)
ignoreThreads
collapseRecursion
chargeSystemLibraries
consolidateAllBySymbol
consolidateSystemFramesBySymbol
forkCorpse
generate a corpse fork from process and run malloc_history on it
getCorpseFromParent
get_corpse
quiet
suppress the process description header and footer
showTiming
initialization
bad address %@ specified
v24@?0@"NSString"8^@16
no process id or name specified
specify only one mode (-callTree, -allBySize, -allByCount, -allEvents, or one or more addresses)
cannot use -showContent with -highWaterMark, since the malloc heap has probably changed since high water mark
do not pass specific addresses or <classes-pattern> with -allEvents
only call tree / all events mode support -showContent option
cannot use call tree options when not passing -callTree
no mode, address, or <classes-pattern> specified
%s[%d]: [fatal] unable to read input graph: %s
The target process has no stack logs.  Run it with the MallocStackLogging environment variable set to get stack logs.
Can't show high water mark when reading stack logs for active allocations only, from memory graph file.
int main(int, char **)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SamplingTools_Sim/SamplingTools-64032/malloc_history/malloc_history_main.m
<Unknown File>
expected no addresses to be passed with -allEvents
create symbolicator for task
malloc_history was unable to acquire a symbolicator for the target process.
%s[%d]: Process %d is not debuggable.
Due to security restrictions, malloc_history cannot show memory contents of restricted processes.
Can't show high water mark when target process is run in lite mode of malloc stack logging.
create process description
finding high water mark
%s[%d]: [fatal] unable to introspect malloc zones to get allocation information
int main(int, char **)_block_invoke_2
v16@?0i8I12
VM Regions
v24@?0@"VMUVMRegion"8^B16
%d blocks in zone %s
%i: %#qx %s -- %ld stack frames
 -- NO STACK !!!
 -- SHORT STACK
  %s
  0x%qx 
%d total blocks
MallocStackLoggingLite
step 1 -- build map table with live malloc block addresses as keys
skipping step 2 of enumerating stack log records to record unique backtrace IDs, since for MallocStackLogging=lite that is done in the previous step of zone enumeration
step 2 -- enumerate stack log records to record unique backtrace IDs for objects of interest
stack log enumeration callbacks
v36@?0I8Q12Q20Q28
skipping step 1 of building map table with live malloc block addresses as keys since we're looking for high water mark
step 2 -- enumerate stack log records to record unique backtrace IDs for objects that were live at high water mark
HighWaterMarkException
void printCallTree(__strong id<VMUCommonGraphInterface>, CSSymbolicatorRef, HighWaterMarkInfo *, VMUCallTreeOptions, BOOL, BOOL, NSHashTable *__strong, __strong id<VMUStackLogReader>)
Unexpected exception
step 3 -- from uniqueBacktraceToObjectsMap, create uniqueBacktraceToObjectsMap
step 4 -- build call tree by iterating the uniqueBacktraceToObjectsMap
%qu unique stacks
CONTENT:  
freeing up call-tree memory
releasing objectIdentifier
step 5 -- print call tree
releasing call tree/autorelease pool
" PLUS %lu MORE LINES
malloc<%llu>
    
error acquiring stack with identifier: %qd (frame count %u)
void printAllBySizeOrCount(HighWaterMarkInfo *, BOOL, NSHashTable *__strong, __strong id<VMUStackLogReader>)
%d call%s for %qd bytes: 
VM_ALLOC
ALLOC
VM_DEALLOC
FREE
v44@?0I8{?=Qb60b4@}12^B36
0x%qx
0x%qx
%s 0x%qx-0x%qx [size=%qu]: %s 
OTHER
0x%qx
%s  0x%qx: 
%s  0x%qx-0x%qx [size=%qu]: 
void printAddressHistory(__strong id<VMUCommonGraphInterface>, HighWaterMarkInfo *, mach_vm_address_t, __strong id<VMUStackLogReader>, BOOL, BOOL)
no stack logs found for 0x%qx
High water mark of allocated heap memory: %*s  at malloc stack log record index %*s
     Current total allocated heap memory: %*s  at malloc stack log record index %*s
  Cumulative total allocated heap memory: %*s
            Total heap memory operations: %*s  allocations: %*s  deallocations: %*s
High water mark of allocated heap memory
High water mark at malloc stack log record index
Current total allocated heap memory
Current total at malloc stack log record index
Cumulative total allocated heap memory
Total heap memory operations (count)
Total heap memory allocations (count)
Total heap memory deallocations (count)
Call graph:
Total number in stack -- this line is here to get the correct format for importing with the Sampler instrument in Instruments.app
malloc_history Report Version:  2.0
----
error in %@ <classes> pattern '%@': %s
Region
Thread
.*%@
%@.*
error in % <region-description> pattern '%@': %s
%s[%d]: [fatal] %s
VMUOptionParserDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SamplingTools_Sim/SamplingTools-64032/VMUOptionParser.m
Invalid parameter not satisfying: %@
block && (longName || shortName)
!longName || ([longName length] && [longName characterAtIndex:0] != '-')
Option's long-name '%@' is invalid or already in use.
Option's short-name '%c' is invalid or already in use.
%s%@
%c%c%@%c
[@@@spacing@@@]%@
%s flag supplied with no argument
unrecognized option '%s'
[invalid usage]: %s
%s: %s
Usage: %s %s
[@@@spacing@@@]
purposeDescription
T@"NSString",C,N,V_purposeDescription
syntaxDescription
T@"NSString",C,N,V_syntaxDescription
discussion
T@"NSString",C,N,V_discussionDescription
singleHyphenLongNames
TB,N,V_singleHyphenLongNames
parametersShowAsAssignment
TB,N,V_parametersShowAsAssignment
.memgraph
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
Command args:    %@
Target process:  %s [%u]
Parent process:  %s [%u]
Parent process:  unable to determine
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: Unable to deallocate target task port: %d (%s)
/usr/lib/system/libsystem_kernel.dylib
task_generate_corpse
%s[%d]: [fatal] Fail to generate corpse from the task, exiting
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
__check_mach_ports_lookup
__check_parent_tool_v1
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal]  child process status could not be determined; exit code unavailable.
v20@?0I8I12I16
v12@?0I8
: terminated; resuming target task
: interrupted; resuming target task
%s[%d]: [fatal] 'pid_for_task' failed: %s (%d)
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
%s/usr/bin/%s
%s%s
VMUClassPatternMatcher
VMUOptionParser
@40@0:8@16@24^@32
v16@0:8
B32@0:8^{?=iQ*^{re_guts}}16@24
B24@0:8@16
B48@0:8{?=Qb60b4@}16@40
^{?=iQ*^{re_guts}}
^{__CFDictionary=}
@16@0:8
v56@0:8@16c24i28@32@40@?48
@24@0:8@?16
v24@0:8@16
B16@0:8
v20@0:8B16
@"NSString"
@"NSMutableArray"
@"NSMutableDictionary"
^{__CFArray=}
@"NSMutableString"
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_msg_send' failed: %s (%d)
@(#)PROGRAM:malloc_history  PROJECT:SamplingTools-64032
bplist00
BuildMachineOSBuild_
CFBundleDevelopmentRegion_
CFBundleIdentifier_
CFBundleInfoDictionaryVersion\CFBundleName_
CFBundleSupportedPlatforms_
CFBundleVersionZDTCompiler_
DTPlatformBuild^DTPlatformName_
DTPlatformVersionZDTSDKBuildYDTSDKNameWDTXcode\DTXcodeBuild_
MinimumOSVersion]SecTaskAccess^UIDeviceFamilyW16B2657WEnglish_
com.apple.SamplingToolsS6.0]SamplingTools
iPhoneSimulatorS1.0_
"com.apple.compilers.llvm.clang.1_0P_
iphonesimulatorT11.4U15F65_
iphonesimulator11.4T0930V9P107g
$%WallowedTsafe
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
