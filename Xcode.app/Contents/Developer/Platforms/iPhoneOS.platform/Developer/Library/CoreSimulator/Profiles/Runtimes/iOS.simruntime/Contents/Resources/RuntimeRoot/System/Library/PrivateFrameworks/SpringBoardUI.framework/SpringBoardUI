?ffffff
333333
?ffffff
?UUUUUU
H;J$
333333
initWithFrame:
alloc
init
whiteColor
setBackgroundColor:
setAlpha:
addSubview:
bounds
layer
setCompositingFilter:
materialViewWithRecipe:options:
sb_backdropViewWithPrivateStyle:
setAutoresizingMask:
colorWithWhite:alpha:
filterWithType:
_setDrawsAsBackdropOverlayWithBlendMode:
setBackgroundStyle:
layoutSubviews
setFrame:
_setContinuousCornerRadius:
setClipsToBounds:
beginTransitionToBackgroundStyle:
completeTransitionToBackgroundStyle:
_updateAppearanceForBackgroundStyle:transitionToSettings:
setHidden:
isHidden
transitionIncrementallyToSettings:weighting:
_updateAppearanceForTransitionFromStyle:toStyle:withProgress:
groupName
setGroupName:
transitionToSettings:
_darkenValueForBackgroundStyle:
_darkenWithProgress:
_tintValueForBackgroundStyle:
_tintColorAlphaForBackgroundStyle:
_tintWithProgress:backgroundColorAlpha:
_reducedTransparencyValueForBackgroundStyle:
_reduceTransparencyWithProgress:
_luminanceValueForBackgroundStyle:
_luminanceWithProgress:
_lightenSourceOverValueForBackgroundStyle:
_lightenSourceOverWithProgress:
_valueFromStart:toEnd:withFraction:
_backgroundColorForDarkenAlpha:andProgress:
blackColor
colorWithAlphaComponent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
updateBackgroundStyleTransitionProgress:
backgroundStyle
isTransitioningBackgroundStyle
backdropView
.cxx_destruct
_style
_transitionStyle
_transitioning
_progress
_backdropView
_reduceTransparencyView
_sourceOverView
_darkenSourceOverView
_tintView
_lightenSourceOverView
_luminanceView
initWithTarget:action:
numberWithInteger:
arrayWithObjects:count:
setAllowedTouchTypes:
setMinimumPressDuration:
setRequiredPreviewForceState:
removeProgressObserver:
dealloc
percentComplete
velocity
reset
touchesBegan:withEvent:
view
setView:
_initWithView:targetState:minimumRequiredState:useLinearClassifier:
addProgressObserver:
allowedTouchTypes
countByEnumeratingWithState:objects:count:
type
containsObject:
state
setState:
interactionProgressDidUpdate:
interactionProgress:didEnd:
pressDuration
relativeTouchForce
touchForceVelocity
_gestureRecognizerWillHandleTouches:
forceTouchCompleted
_initialMediaTime
_interactionProgress
_forceTouchCompleted
removeAllObjects
objectForKeyedSubscript:
settingsForPrivateStyle:
setGrayscaleTintAlpha:
setGrayscaleTintLevel:
setColorTintAlpha:
setSaturationDeltaFactor:
setBlurRadius:
setObject:forKeyedSubscript:
uiEnvironment
setUiEnvironment:
hideOtherWindowsDuringAppearance
setHideOtherWindowsDuringAppearance:
_uiEnvironment
_hideOtherWindowsDuringAppearance
copyWithZone:
initWithOwner:
owner
_owner
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
copy
setObject:forKey:
removeObjectForKey:
allValues
invalidate
sceneHandle:didCreateScene:
sceneHandle:didDestroyScene:
sceneHandle:didUpdateContentState:
sceneHandle:didUpdateSettingsWithDiff:previousSettings:
sceneHandle:didUpdateClientSettingsWithDiff:transitionContext:
sceneHandle:didUpdatePairingStatusForExternalSceneIdentifiers:
observeCreate:
observeDestroy:
observeDidUpdateContentState:
observeDidUpdateSettings:
observeDidUpdateClientSettings:
observeDidUpdatePairingStatusForExternalIdentifiers:
removeObserverForToken:
_createBlocks
_destroyBlocks
_didUpdateContentStateBlocks
_didUpdateSettingsBlocks
_didUpdateClientSettingsBlocks
_didUpdatePairingStatusBlocks
_invalidated
initWithURL:
isValid
isCallAction
_dialRequest
setElement:
overrideForElement:
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendObject:withName:
appendBool:withName:
appendString:withName:skipIfEmpty:
descriptionBuilderWithMultilinePrefix:
overrideForHiddenElement:
succinctDescription
element
text
setText:
_hidden
_element
_text
factoryWithDuration:
initWithSceneHandle:referenceSize:orientation:hostRequester:
setOpaque:
setBackgroundView:
sceneViewHostingPriority:
sceneViewHostingRequestIdentifier:
initWithFormat:
addObserver:
_enableHostingIfPossible
removeObserver:
_disableHosting
sceneIdentifier
appendPointer:withName:
displayMode
effectiveDisplayMode
appendSuper
_transitionFromDisplayMode:showingView:toDisplayMode:showingView:withAnimationFactory:completion:
removeFromSuperview
insertSubview:atIndex:
setDelegate:
_reloadPlaceholderContentIfNecessary
_evaluateEffectiveDisplayModeWithAnimationFactory:completion:
sceneHandle
sceneIfExists
hostManager
hostingRequester
snapshotContextForRequester:
_configureSceneSnapshotContext:
createSnapshotWithContext:
colorWithRed:green:blue:alpha:
_clearSnapshotViews
superview
sendSubviewToBack:
isEqualToString:
_shouldAnimatePropertyWithKey:
_hotSwapPlaceholderContentView
_hotSwapLiveSnapshotView
setContainerOrientation:
_shouldObserveSceneHostContentState
_recheckLiveContentDependencies
enableHostingForRequester:priority:
disableHostingForRequester:
_configureViewForEffectiveDisplayMode:
_viewForDisplayMode:
_bestDisplayModeLessThanMode:
isContentReady
window
isHiddenOrHasHiddenAncestor
_addContentLikeViewToHeierarchyForTransitionIfPossible:
crossfadeViewWithStartView:endView:translucent:
setAnimationFactory:
crossfadeWithCompletion:
animateWithFactory:actions:completion:
_shouldViewBeInHeirarchyForTransition:
_configurePlaceholderContentView
_configureLiveSnapshotView
_configureHostView
sceneView:requestsPlaceholderContentViewWithContext:
newSnapshot
snapshotViewForSnapshot:
_configureBackgroundColorForLiveSnapshot:
scene
hostViewForRequester:appearanceStyle:
setNeedsLayout
_configureSceneLiveHostView:
defaultBackgroundColorWhileHosting
performWithoutAnimation:
defaultDisplayModeAnimationFactory
placeholderContentViewProviderContentDidUpdate:
initWithCoder:
initWithSceneHandle:referenceSize:orientation:
setCustomContentView:
setPlaceholderContentProvider:
setPlaceholderContentContext:
setPlaceholderContentEnabled:
setDisplayMode:animationFactory:completion:
sizeThatFits:
_refresh
_representsTranslucentContent
_updateReferenceSize:andOrientation:
_containerContentWrapperInterfaceOrientationChangedTo:
referenceSize
orientation
customContentView
backgroundView
placeholderContentProvider
placeholderContentContext
placeholderContentEnabled
hostingPriority
_sceneHandle
_referenceSize
_orientation
_requestedDisplayMode
_effectiveDisplayMode
_hostingPriority
_hostingRequester
_placeholderContentContext
_customContentView
_placeholderContentView
_liveSnapshotView
_hostView
_crossfadeView
_backgroundView
_placeholderContentEnabled
_placeholderContentProvider
initWithNibName:bundle:
_layoutForDataProvider:
sharedInstance
warmUpForFeedback:withReason:
raise:format:
initWithDataProvider:
coolDownForFeedback:withReason:
dataProvider
layout
_setLayoutDebuggingIdentifier:
setTranslatesAutoresizingMaskIntoConstraints:
parallaxSettings
newIconViewCopy
initWithIconView:
primaryViewController
initWithChildViewController:
iconImageCornerRadius
addChildViewController:
didMoveToParentViewController:
secondaryViewController
setContentAlpha:
insertSubview:below:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
leftAnchor
safeAreaLayoutGuide
constraintEqualToAnchor:
setActive:
rightAnchor
topAnchor
bottomAnchor
layoutIfNeeded
iconViewFrame
mainScreen
fixedCoordinateSpace
convertRect:fromCoordinateSpace:
iconImageInsets
addObjectsFromArray:
addObject:
constraintEqualToAnchor:constant:
heightAnchor
widthAnchor
arrayWithArray:
setPriority:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
centerXAnchor
trailingAnchor
centerYAnchor
leadingAnchor
numberWithFloat:
setDidMoveToWindowHandler:
_handleTapGestureRecognizer:
addGestureRecognizer:
viewDidLayoutSubviews
contentNativeSize
childViewController
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
setContentNativeSize:
_peekAnimated:withRelativeTouchForce:allowSmoothing:completionHandler:
count
defaults
indigoConfigurationFlagThree
actuateFeedback:
_presentAnimated:withCompletionHandler:
dismissAnimated:withCompletionHandler:
delegate
iconForceTouchViewControllerDidDismiss:
iconForceTouchViewControllerWillDismiss:
_dismissAnimated:withCompletionHandler:
interfaceOrientation
gestureRecognizer
screen
safeAreaInsets
coordinateSpace
layoutStyle
_revealWithRelativeForce:
setTransform:
_scaleIconViewWithPercent:
animateWithDuration:animations:completion:
wrapperViewCornerRadius
deactivateConstraints:
beginAppearanceTransition:animated:
setGaussianBlurRadius:
endAppearanceTransition
animateWithSettings:actions:completion:
runningPropertyAnimatorWithDuration:delay:options:animations:completion:
initWithDuration:curve:animations:
addCompletion:
startAnimation
setEffectStrength:
zoomDownView
zoomDownCenter
locationInView:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
_defaults
loadView
shouldAutomaticallyForwardAppearanceMethods
peekAnimated:withRelativeTouchForce:allowSmoothing:
presentAnimated:withCompletionHandler:
_visualEffectView
_parallaxView
_iconViewWrapperViewBelow
_primaryViewController
_secondaryViewController
_iconViewWrapperViewAbove
_initialLayoutConstraints
_showingLayoutConstraints
_presentCompletionHandlers
_dismissCompletionHandlers
_smoothedValue
_currentPeekProgress
_tapticEngineFeedbackMask
_dataProvider
_state
_layout
_delegate
functionWithName:
settingsWithDuration:timingFunction:
functionWithControlPoints::::
settingsWithMass:stiffness:damping:timingFunction:
mutableCopy
setSpeed:
bundleForClass:
sbui_effectiveWindowForIsolation
_alertItemsController
activateAlertItem:
dismissOnLock
didPlayPresentationSound
sound
playInEvironments:completion:
deactivateForReason:
deactivateAlertItem:reason:
imageWithContentsOfFile:
setIconImage:
_setPresented:
_clearAlertController
setAlertItem:
setPreferredStyle:
_headerImage
initWithImage:
_setHeaderContentViewController:
configure:requirePasscodeForActions:
defaultCenter
postNotificationName:object:userInfo:
alertItemDidAppear
alertItemDidDisappear
alertController
contentViewController
sb_hasActiveKeyboardOnScreen
deactivate
deactivateForButton
lockLabel
shortLockLabel
performUnlockAction
allowMenuButtonDismissal
allowLockScreenDismissal
shouldShowInLockScreen
shouldShowInEmergencyCall
undimsScreen
unlocksScreen
reappearsAfterLock
reappearsAfterUnlock
playPresentationSound
didFailToActivate
willActivate
didActivate
willRelockForButtonPress:
willDeactivateForReason:
didDeactivateForReason:
setIconImagePath:
forcesModalAlertAppearance
behavesSuperModally
allowInLoginWindow
alertPriority
dismissesOverlaysOnLockScreen
doCleanupAfterDeactivationAnimation
_deactivationCompleted
_alertController
_prepareNewAlertControllerWithLockedState:requirePasscodeForActions:
_noteVolumeOrLockPressed
_hasActiveKeyboardOnScreen
_didEverActivate
_displayActionButtonOnLockScreen
_publicDescription
dismiss
dismiss:
buttonDismissed
ignoreIfAlreadyDisplaying
setIgnoreIfAlreadyDisplaying:
allowInSetup
setAllowInSetup:
suppressForKeynote
setSuppressForKeynote:
pendInSetupIfNotAllowed
setPendInSetupIfNotAllowed:
pendWhileKeyBagLocked
setPendWhileKeyBagLocked:
allowedBundleIDs
setAllowedBundleIDs:
allowInCar
setAllowInCar:
allowMessageInCar
setAllowMessageInCar:
_ignoresQuietMode
_setIgnoresQuietMode:
iconImage
_iconImagePath
_isPresented
_setHeaderImage:
_attachmentImage
_setAttachmentImage:
_allowedBundleIDs
_iconImage
_didEverDeactivate
_ignoreIfAlreadyDisplaying
_didPlayPresentationSound
_allowInSetup
_pendInSetupIfNotAllowed
_pendWhileKeyBagLocked
_allowInCar
_allowMessageInCar
_presented
_suppressForKeynote
image
size
_expectedSize
setSize:
_topMarginOffset
setPreferredContentSize:
_bottomMarginOffset
_imageView
badgeView
setBadgeView:
initWithObserver:
behaviorFromObserver:
observer
didCreateScene
setDidCreateScene:
didDestroyScene
setDidDestroyScene:
didUpdateContentState
setDidUpdateContentState:
didUpdateSettingsWithDiff
setDidUpdateSettingsWithDiff:
didUpdateClientSettingsWithDiff
setDidUpdateClientSettingsWithDiff:
didUpdatePairingStatusForExternalSceneIdentifiers
setDidUpdatePairingStatusForExternalSceneIdentifiers:
_didCreateScene
_didDestroyScene
_didUpdateContentState
_didUpdateSettingsWithDiff
_didUpdateClientSettingsWithDiff
_didUpdatePairingStatusForExternalSceneIdentifiers
_observer
_initWithDefinition:scene:displayIdentity:
definition
_createMonitor
_setScene:
_commonInit
identity
identifier
isPairedWithExternalSceneID:
weakObjectsHashTable
mapTableWithKeyOptions:valueOptions:
removeObject:
allObjects
objectForKey:
_enumerateObserversWithBlock:
initWithSceneID:
_didUpdateSettingsWithDiff:previousSettings:
_didUpdateClientSettingsWithDiff:transitionContext:
_didUpdatePairingStatusForExternalSceneIdentifiers:
contentState
_setContentState:
_didCreateScene:
_didDestroyScene:
_didUpdateHostContentState:
sceneMonitor:sceneWasCreated:
sceneMonitor:sceneWasDestroyed:
sceneMonitor:sceneSettingsDidChangeWithDiff:previousSettings:
sceneMonitor:effectiveSceneSettingsDidChangeWithDiff:previousSettings:
sceneMonitor:pairingStatusDidChangeForExternalSceneIDs:
sceneMonitor:sceneClientSettingsDidChangeWithDiff:transitionContext:
sceneHostManagerContentStateDidChange:
sceneHostManagerDidInvalidate:
sceneHostManager:willActivateRequester:
sceneHostManager:willDeactivateRequester:
_initWithScene:displayIdentity:
_initWithDefinition:displayIdentity:
isPairedWithExternalSceneWithIdentifier:
_setSceneMonitor:
_noteSceneCreated:
_noteSceneDestroyed:
displayIdentity
_setDisplayIdentity:
_definition
_sceneMonitor
_manuallyControlsLifecycle
_setManuallyControlsLifecycle:
_scene
_contentState
_displayIdentity
_observers
_observersToObserverBehaviors
builder
appendObject:
clientSettings
diffFromSettings:toSettings:
client:didUpdateClientSettings:withDiff:transitionContext:
setClientSettings:
client:didReceiveActions:
client:attachLayer:
client:detachLayer:
setSettings:
appendArraySection:withName:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
host:configureWithDefinition:parameters:
host:didUpdateSettings:withDiff:transitionContext:completion:
host:didInvalidateWithTransitionContext:completion:
host:didReceiveActions:
initWithIdentifier:
updateClientSettingsWithBlock:
sendActions:
attachLayer:
detachLayer:
settings
layers
_valid
_identifier
_sceneHost
_settings
_clientSettings
_layers
viewDidDisappear:
alertControllerDidDisappear:
title
appendString:withName:
alertItem
alertControllerDelegate
setAlertControllerDelegate:
_alertItem
_alertControllerDelegate
iconForceTouchController:iconImageInsetsForGestureRecognizer:
iconForceTouchController:iconImageCornerRadiusForGestureRecognizer:
iconForceTouchController:wrapperViewCornerRadiusForGestureRecognizer:
iconForceTouchController:parallaxSettingsForGestureRecognizer:
iconForceTouchController:zoomDownViewForGestureRecognizer:
iconForceTouchController:zoomDownCenterForGestureRecognizer:
initWithDataSource:controller:gestureRecognizer:
dataSource
controller
iconForceTouchController:layoutStyleForGestureRecognizer:
iconForceTouchController:iconViewFrameForGestureRecognizer:
iconForceTouchController:primaryViewControllerForGestureRecognizer:
iconForceTouchController:secondaryViewControllerForGestureRecognizer:
gestureRecognizerWindow
iconForceTouchController:newIconViewCopyForGestureRecognizer:
_dataSourceRespondsTo
_dataSource
_controller
_gestureRecognizer
array
componentsJoinedByString:
initWithActions:gestureRecognizer:
actions
reversesActions
reverseObjectEnumerator
imagePosition
initWithAction:
setImagePosition:
initWithArrangedSubviews:
setAxis:
_updateKeylineViews
_handleLongPressGestureRecognizer:
defaultConfiguration
initWithConfiguration:coordinateSpace:
viewDidAppear:
addTarget:action:
viewWillDisappear:
removeTarget:action:
isViewLoaded
arrangedSubviews
addArrangedSubview:
actionPlatterViewControllerShouldRespondToTouches:
subviews
objectAtIndexedSubscript:
isActive
activateWithCompletionBlock:
setHighlighted:withFeedbackRetargetBehavior:
action
handler
setHighlighted:
setReversesActions:
_delegateRespondsTo
_stackView
_keylinesContainerView
_feedbackRetargetBehavior
_reversesActions
_actions
_imagePosition
handleFailureInFunction:file:lineNumber:description:
updateTopMostAssertion
sourceWindow
windowLevel
setTopMostAssertion:
updateHomeAffordanceMargin
createHomeAffordanceIfNecessary
additionalEdgeMargin
updateFrameForHomeAffordanceWithAdditionalMargin:
factoryWithSettings:
setAllowsAdditiveAnimations:
animateWithFactory:options:actions:completion:
sharedTextEffectsWindowAboveStatusBar
rootViewController
setBackgroundLumninanceObserver:
pillContainingView
backgroundLuminance
setStyle:
suggestedSizeForContentWidth:
suggestedEdgeSpacing
lumaDodgePillDidDetectBackgroundLuminanceChange:
registerAssertion:
unregisterAssertion:
assertions
setAssertions:
topMostAssertion
pillView
setPillView:
_assertions
_topMostAssertion
_pillView
initWithGestureWindow:
assertionForGestureWindow:
setAdditionalEdgeMargin:
setSourceWindow:
_additionalEdgeMargin
_sourceWindow
isInCallAction
isSlidingViewController
activateAlertForController:animated:animateCurrentDisplayOut:withDelay:isSlidingDisplay:
deactivateAlertForController:animated:animateOldDisplayInWithStyle:isSlidingDisplay:
setWallpaperTunnelActive:forFullscreenAlertController:
_adapterForController:
setBackgroundStyle:withAnimationFactory:
removeBackgroundStyleWithAnimationFactory:
viewDidLoad
updateInterfaceOrientationIfNecessary
supportedInterfaceOrientations
activeInterfaceOrientation
willAnimateRotationToInterfaceOrientation:duration:
deviceClass
currentDevice
userInterfaceIdiom
_setModalPresentationStyle:
presentViewController:animated:completion:
finishedAnimatingIn
postNotificationName:object:
finishedAnimatingOut
didReceiveMemoryWarning
viewDidUnload
invoke
requestActivationAnimated:animateCurrentDisplayOut:withDelay:
requestDeactivationAnimated:animateOldDisplayInWithStyle:
setWallpaperTunnelActive:
setBackgroundStyle:withDuration:
removeBackgroundStyleWithDuration:
allowSuspension
viewWillAnimateIn
viewWillAnimateOut
definesPresentationContext
animateViewIn
animateViewOut
viewIsReadyToBeRemoved
hasTranslucentBackground
allowStackingOfAlert:
handleLockButtonPressed
handleVolumeUpButtonPressed
handleVolumeDownButtonPressed
wantsHomeButtonPress
handleMenuButtonTap
handleHeadsetButtonPressed:
handleAutoLock
didFinishLaunchingFrontmost
setPendingDeactivationInvocation:
pendingDeactivationInvocation
shouldAnimateIn
setShouldAnimateIn:
animationStartTime
setAnimationStartTime:
activationContext
setActivationContext:
_shouldAnimateIn
_animationStartTime
_activationContext
_pendingDeactivationInvocation
useHardwareSwitchAsOrientationLock
newTopBar
newBottomBar
isShowingWallpaper
beginIgnoringInteractionEvents
shouldShowBottomBar
frame
_performAnimateDisplayIn
animateWithDuration:delay:options:animations:completion:
endIgnoringInteractionEvents
deviceIsLocked
springBoardIsActive
_slideOutAnimationDelay
_slideOutAnimationDuration
_viewAnimatedOut
statusBarHeight
_animatingToHomescreenWallpaper
_animationDelayForOthersActivation
_updateLayoutForStatusBarAndInterfaceOrientation
topBar
bottomBar
_topBar
_bottomBar
_animatingIn
_animatingOut
activationEvent
setActivationEvent:
setScreen:
_screen
_activationEvent
_imageThatSuppressesAccessibilityHairlineThickening
initWithTitle:subtitle:image:badgeView:handler:
initWithTitle:subtitle:image:handler:
initWithTitle:subtitle:handler:
initWithTitle:handler:
subtitle
_title
_subtitle
_image
_badgeView
_handler
sharedApplication
pluginUserAgent
addObserver:forKeyPath:options:context:
isAvailable
_loadFlashlightLevel
setLevel:
_postLevelChangeNotification:
_storeFlashlightLevel:
_setFlashlightLevel:
_turnPowerOn
_turnPowerOff
hashTableWithOptions:
flashlightLevel
isOverheated
_updateStateWithAvailable:level:overheated:
observeValueForKeyPath:ofObject:change:context:
_postOverheatedChangeNotification:
_postAvailabilityChangeNotification:
flashlightOverheatedDidChange:
flashlightAvailabilityDidChange:
flashlightLevelDidChange:
setFlashlightLevel:withError:
turnPowerOnWithError:
turnPowerOff
standardUserDefaults
setInteger:forKey:
integerForKey:
turnFlashlightOnForReason:
turnFlashlightOffForReason:
level
warmUp
coolDown
removeAllObservers
_flashlight
_flashlightQueue
_level
_overheated
_available
initWithStyle:
defaultSettings
backgroundColorHint
setBackgroundColorHint:
vibrancyDisabled
setVibrancyDisabled:
_vibrancyDisabled
_backgroundColorHint
actionWithCompletion:
initWithCompletion:
error
code
initWithInfo:timeout:forResponseOnQueue:withHandler:
response
sendResponse:
sendResponseWithSuccess:
label
setLabel:
authenticationPolicy
setAuthenticationPolicy:
completion
_action
_label
_authenticationPolicy
_completion
alignmentRectInsets
sbui_rangesOfEmojiTokens:
initWithString:
clearColor
addAttributes:range:
setAttributedText:
font
setFont:
lineBreakMode
setLineBreakMode:
numberOfLines
setNumberOfLines:
textAlignment
setTextAlignment:
setTextColor:
mt_applyVibrantStyling:
mt_removeAllVibrantStyling
textColor
viewForFirstBaselineLayout
viewForLastBaselineLayout
_textColor
_emojiLabel
length
isFrontBoard
initWithObjects:
_performSynchronouslyOnMainThread:
stringWithFormat:
initWithArray:
mainConfiguration
setDisplayConfiguration:
preferredLevel
preferredInterfaceOrientation
setInterfaceOrientation:
createSceneWithIdentifier:settings:initialClientSettings:clientProvider:transitionContext:
scenes
destroyScene:withTransitionContext:
_queue_invalidate
sceneWithIdentifier:
registerInvalidationAction:
registerHost:
unregisterHost:
beginTransaction
endTransaction
initWithIdentifier:queue:
createSceneWithIdentifier:initialClientSettings:
destroyScene:
_clientQueue
_queue
_scenes
_invalidationAction
displayIfNeeded
sbui_drawEagerly
setContentOrientation:
_updateGeometry
bringSubviewToFront:
containerOrientation
contentOrientation
setCenter:
setBounds:
contentViews
addContentView:
bringContentSubviewToFront:
convertPointFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertRectFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertTransformFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertPointFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertRectFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertTransformFromContentInterfaceOrientationToContainerInterfaceOrientation:
_transformedView
_contentOrientation
_containerOrientation
setAllowsGroupOpacity:
_setUnified:
_layoutGrabberView:forState:
setColor:
alphaComponent
scale
_frameForGrabberView:forState:unified:
_transformForGrabberView:forState:
_setState:
setShouldRasterize:
setRasterizationScale:
animationDuration
setState:animated:
deleteCharactersInRange:
appendFormat:
mask
setMask:
tintViewWithFrame:
insertSubview:belowSubview:
vibrantSettings
setVibrantSettings:
initWithColor:
setAnimationDuration:
configureForLightStyle
color
_leftGrabberView
_rightGrabberView
_animationDuration
_color
_alphaComponent
_vibrantSettings
_unified
_alphaContainerView
setCornerRadius:
setAllowsEdgeAntialiasing:
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
invokeWithTarget:
getReturnValue:
isLoaded
bundlePath
load
initWithRemoteAlertControllerClass:
isSubclassOfClass:
queueWithDispatchQueue:
initWithCapacity:
isUsable
rawPort
numberWithUnsignedInt:
initWithDefinition:tokenPort:context:queue:delegate:
initWithOptions:capacity:
initFromReceiveRight:
bs_secureEncoded
messageWithPacker:
sendMessage:withType:toClients:
payload
tokenFromXPCMessage:
isDefinition:allowedForAuditToken:
objectEnumerator
queue_matchesDefinition:
queue_tokenPort
_queue_addControllerWithDefinition:token:context:forClient:
queue_isActive
sendReplyMessageWithPacker:
setWithObject:
_queue_notifyClients:remoteAlertForToken:didInvalidateWithReason:underlyingError:
queue_activateWithContext:
queue_invalidate
queue_remoteAlertController:didInvalidateWithReason:underlyingError:
setRepresentation
queue_remoteAlertControllerDidChangeActivationState:
noteClientDidDisconnect:
noteDidReceiveMessage:withType:fromClient:
_remoteAlertControllerClass
_tokenPortToToken
_tokenPortToControllerMap
_tokenPortToClientsMap
suggestedContentInsets
appendObject:withName:skipIfNil:
legibilitySettings
setSuggestedContentInsets:
setLegibilitySettings:
_shouldControlAutorotation
_isSecure
_setupSubviews
renderingMode
_updateImageViewLayoutConstraints
isHighlighted
selectionChanged
preferredContentSizeCategory
setContentMode:
setImage:
traitCollectionWithPreferredContentSizeCategory:
preferredFontForTextStyle:compatibleWithTraitCollection:
constraintEqualToConstant:
_bodyLeading
firstBaselineAnchor
lastBaselineAnchor
didMoveToSuperview
_interfaceOrientationIsPortrait
_textContainer
_titleLabel
_subtitleLabel
_imageViewLayoutConstraints
_highlighted
playSound
killSound
actionBlockForButton:
initWithActionBlock:remoteViewControllerClassName:remoteServiceBundleIdentifier:actionIdentifier:activationMode:behavior:parameters:
actionWithBlock:
actionBlock
setActionBlock:
remoteViewControllerClassName
setRemoteViewControllerClassName:
remoteServiceBundleIdentifier
setRemoteServiceBundleIdentifier:
behavior
setBehavior:
activationMode
setIdentifier:
parameters
setParameters:
_actionBlock
_remoteViewControllerClassName
_remoteServiceBundleIdentifier
_behavior
_activationMode
_parameters
setURL:
setBundleID:
appendInteger:withName:
actionWithURL:
actionWithBundleID:
isApplicationAction
bundleID
transitionStyle
setTransitionStyle:
_bundleID
_url
blendMode
CGColor
setValue:forKey:
numberWithBool:
alpha
composedFilter
_composedFilter
imageNamed:inBundle:compatibleWithTraitCollection:
sbui_image
sbui_defaultImage
newLockScreenModalView
localizedTitle
setDataSource:
appIconForceTouchController:shouldHandleGestureRecognizer:
appIconForceTouchController:shouldUseSecureWindowForGestureRecognizer:
appIconForceTouchController:willPresentForGestureRecognizer:
appIconForceTouchController:didPresentForGestureRecognizer:
appIconForceTouchController:willDismissForGestureRecognizer:
appIconForceTouchController:didDismissForGestureRecognizer:
appIconForceTouchController:shouldActivateApplicationShortcutItem:atIndex:forGestureRecognizer:
startHandlingGestureRecognizer:
stopHandlingGestureRecognizer:
applicationShortcutWidgetBundleIdentifier
applicationBundleIdentifier
generatorForWidgetViewControllerWithBundleID:containingBundleID:timeout:
applicationShortcutItems
initWithDataProvider:applicationShortcutItems:
_setupWithGestureRecognizer:
_peekAnimated:withRelativeTouchForce:allowSmoothing:
indexOfObject:
bundleIdentifierToLaunch
initWithSBSShortcutItem:
optionsWithDictionary:
openApplication:withOptions:completion:
_widgetViewControllerForDataProvider:
_shortcutViewControllerForDataProvider:
setIconPosition:
setReversesApplicationShortcutItems:
filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:
appIconForceTouchShortcutViewControllerShouldHandleGestureRecognizers:
appIconForceTouchShortcutViewController:activateApplicationShortcutItem:
iconForceTouchController:shouldHandleGestureRecognizer:
iconForceTouchController:shouldUseSecureWindowForGestureRecognizer:
iconForceTouchController:willPresentForGestureRecognizer:
iconForceTouchController:didPresentForGestureRecognizer:
iconForceTouchController:willDismissForGestureRecognizer:
iconForceTouchController:didDismissForGestureRecognizer:
_iconForceTouchController
_openApplicationService
handledMenuButtonDownEvent
handledMenuButtonUpEvent
handledMenuButtonTap
awakeFromBundle
setVisible:
registeredWithHost
supportedAndEnabled
shouldBreadcrumbLaunchedApplicationWithBundleIdentifier:
wantsActivationEvent:eventSource:interval:
prepareForActivationEvent:eventSource:afterInterval:
cancelPendingActivationEvent:
handleActivationEvent:eventSource:context:
handledPasscodeUnlockWithCompletion:
handleBluetoothDismissal
handlePreheatCommand
handledWiredMicButtonTap
handledButtonDownEventFromSource:
handledButtonUpEventFromSource:
handledButtonTapFromSource:
viewControllerForActivationContext:
viewPartiallyRevealedWithPercentRevealed:
handleViewFullyRevealed
host
setHost:
isVisible
_host
_isVisible
setAnimatedLayerProperties:
setName:
setFilters:
valueForKeyPath:
doubleValue
setValue:forKeyPath:
gaussianBlurRadius
iconView
_iconView
distantFuture
subActions
priority
isSticky
sortDate
canShowInAssistant
shouldPlayLightsAndSirens
canShowWhileLocked
message
shouldShowModalSubActions
subActionLabels
hasSubActions
defaultActionWithContext:
actionWithIdentifier:
lockScreenActionContextWithContext:
_actionFromApplicationShortcutItem:
iconPosition
reversesApplicationShortcutItems
intrinsicContentSize
setIntrinsicContentSize:
localizedSubtitle
icon
_imageFromApplicationShortcutIcon:
applicationBundleURL
absoluteString
containsString:
localizedStringForKey:value:table:
imageWithRenderingMode:
templateImageName
_assetManager
imageNamed:withTrait:
URLByAppendingPathComponent:
path
imageData
dataType
imageWithData:scale:
imageWithCGImage:scale:orientation:
isTemplate
_monogrammer
contactIdentifier
descriptorForRequiredKeysIncludingImage:
unifiedContactWithIdentifier:keysToFetch:error:
monogramForContact:
firstName
lastName
setGivenName:
setFamilyName:
setImageData:
monogramForPersonWithFirstName:lastName:
silhouetteMonogram
initWithURL:idiom:error:
initWithStyle:diameter:
_actionPlatterViewController
_reversesApplicationShortcutItems
_applicationShortcutItems
_iconPosition
setSoundType:
setSystemSoundID:
setSoundBehavior:
setVibrationPattern:
setSongPath:
initWithType:
setTopic:
setToneIdentifier:
setVibrationIdentifier:
initWithToneAlertConfiguration:
setAlertConfiguration:
setEventType:
initWithFeedbackEventType:
isPlaying:
playSound:environments:completion:
stopSound:
soundType
systemSoundID
songPath
soundBehavior
vibrationPattern
alertConfiguration
stringByAppendingFormat:
soundWithFeedbackEventType:
initWithSystemSoundID:behavior:vibrationPattern:
initWithSystemSoundPath:behavior:vibrationPattern:
initWithToneAlert:accountIdentifier:toneIdentifier:vibrationIdentifier:
isPlaying
stop
_completionBlock
_setCompletionBlock:
_resolvedSystemSoundID
_setResolvedSoundID:
eventType
alertType
setAlertType:
_soundType
_systemSoundID
_soundBehavior
_vibrationPattern
_alertConfiguration
_songPath
_eventType
_alertType
vibrantStylingWithPrivateStyle:andRecipe:
restrictedCapabilities
setRestrictedCapabilities:
presentationStyle
setPresentationStyle:
notificationBehavior
setNotificationBehavior:
elementOverrides
setElementOverrides:
presentationRegion
setPresentationRegion:
initWithAppearance:
mutableCopyWithZone:
hidden
setLockScreenDisableAssertionClass:
lockScreenDisableAssertionWithIdentifier:
mainBundle
buttonWithText:highlightColor:
boldSystemFontOfSize:
sizeToFit
setTextLabel:
setHighlightColor:
setUnselectedTextColor:
setSelectedTextColor:
_chevronImageForTraitCollection:
_flatImageWithColor:
setUnselectedImage:
setSelectedImage:
backgroundColor
setNeedsDisplay
isSelected
initWithImage:highlightedImage:
externalSystemTealColor
systemBlueColor
imageFlippedForRightToLeftLayoutDirection
buttonWithOKAndHighlightColor:
buttonWithChevronImageForTraitCollection:highlightColor:
highlightColorForNightTime:
highlightColor
textLabel
unselectedTextColor
selectedTextColor
unselectedImage
selectedImage
_textLabel
_unselectedTextColor
_selectedTextColor
_unselectedImage
_selectedImage
_highlightView
_highlightColor
_initWithStartView:endView:translucent:
isUserInteractionEnabled
allowsHitTesting
setAllowsHitTesting:
setUserInteractionEnabled:
animationFactory
allowsGroupOpacityDuringCrossfade
adaptsAnimationFactoryTimingFunction
factoryWithTimingFunction:
setAllowsGroupOpacityDuringCrossfade:
setAdaptsAnimationFactoryTimingFunction:
_animationFactory
_startView
_endView
_translucent
_crossfaded
_allowsGroupOpacityDuringCrossfade
_adaptsAnimationFactoryTimingFunction
remoteAlertClass
remoteAlertDelegate
requestWithDefinition:context:delegate:completion:
hasEntitlement:
serviceName
viewControllerClassName
isDefinition:equalToDefinition:
activateWithContext:
didInvalidate
_queue_isValid
_queue_setActive:
remoteAlertDidRequestInvalidation:
remoteAlertDidActivate:
remoteAlertDidDeactivate:
remoteAlertDidRequestDismissal:
remoteAlert:didTerminateWithError:
alert
_tokenPort
_alert
_pendedActivations
_active
contentAlpha
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
_updateLayoutConstraints
_updateChildViewTransform
_containerView
_mutableLayoutConstraints
_childViewController
_contentAlpha
_contentNativeSize
sb_backdropViewWithFrame:privateStyle:
initWithFrame:privateStyle:
sbf_searchTransitionGraphicsQuality
setScaleForNoBlur:
_iconForceTouchControllerHashTable
iconForceTouchViewController
isWidgetExtensionVisible:
_window
setWithSet:
_addIconForceTouchController:
_handleGestureRecognizer:
setRootViewController:
setWindowLevel:
_setRotatableViewOrientation:updateStatusBar:duration:force:
_synchronizeDrawing
_cleanWithGestureRecognizer:
_isPeekingOrShowing
_isWidgetVisible:
_windows
_iconForceTouchViewController
appIconForceTouchController:applicationBundleIdentifierForGestureRecognizer:
appIconForceTouchController:applicationBundleURLForGestureRecognizer:
appIconForceTouchController:applicationShortcutWidgetBundleIdentifierForGestureRecognizer:
appIconForceTouchController:applicationShortcutItemsForGestureRecognizer:
appIconForceTouchController:iconImageInsetsForGestureRecognizer:
appIconForceTouchController:iconImageCornerRadiusForGestureRecognizer:
appIconForceTouchController:parallaxSettingsForGestureRecognizer:
appIconForceTouchController:zoomDownViewForGestureRecognizer:
appIconForceTouchController:zoomDownCenterForGestureRecognizer:
appIconForceTouchController:iconViewFrameForGestureRecognizer:
appIconForceTouchController:newIconViewCopyForGestureRecognizer:
initWithPrivateStyle:
setColorTint:
setComputesColorSettings:
effectStrength
_targetBackdropViewSettings
_effectStrength
sharedInstanceForStyle:
systemAppPersistenteCache
primaryColor
_imageNameForCurrentContentSize:
imageNamed:
imageForKey:generatingIfNecessaryWithBlock:
initWithSettings:strength:image:tintStyle:
setStrength:
_newDialViewForSettings:
strength
_strength
_legibilitySettings
_dialView
getRed:green:blue:alpha:
bannerTargetIdentifier
bannerTargetIdiom
registerSource:
unregisterSource:
modallyPresentBannerWithContext:
isShowingModalBanner
signalSource:
currentBannerContextForSource:
dismissCurrentBannerContextForSource:
cacheBannerForContext:withCompletion:
removeCachedBannerForContext:
initWithTargetImplementation:
_idiom
_implementation
initWithKeyOptions:valueOptions:capacity:
bannerTargetManager:didAddTarget:
_notifyObservers:
bannerTargetManager:didRemoveTarget:
targets
_registerTargetImplementation:
_unregisterTargetImplementation:
_proxyForTargetImplementation:
_proxies
_implementationToProxyMap
viewCanBeDisplayed
showStatusBar
showDateView
hasCustomSubtitle
customSubtitleText
showDate
allowsSiri
allowsLockScreenCamera
allowsUnlocking
allowsLogout
wantsMesaAutoUnlock
allowsLockScreenMediaControls
allowsControlCenter
allowsScreenshots
overlayStyle
pluginController:updateAppearance:
style
secondaryColor
shadowColor
initWithStyle:primaryColor:secondaryColor:shadowColor:
legibilitySettingsOverridesVibrancy
isContentViewWhiteUnderSlideToUnlockText
_updateAppearanceAndNotify:
userInfo
setDeactivationContext:
purgeView
setPluginAgent:
slideToUnlockText
bundleIDForUnlock
unlockAnimationStyleForDestinationApp:
shouldDisableOnUnlock
disable
shouldDisableOnRelock
enableTransitionBlock
sentinelWithExceptionReason:
signal
settingsWithDuration:
viewIfLoaded
statusBarOrientation
deactivatePluginController:
viewWantsOverlayLayout
disablesAwayItemsCompletely
shouldAutoHideNotifications
enableLockScreenBundle:withContext:
enableBundleNamed:activationContext:
disableLockScreenBundle:withContext:
disableBundleNamed:deactivationContext:
enableBundleNamed:
disableBundleNamed:
pluginAnimatesAppearanceTransition:
pluginAnimateAppearanceTransition:withCompletion:
pluginAgent
pluginPriority
pluginViewController
pluginAppearance
pluginWillActivateWithContext:
pluginDidDeactivateWithContext:
pluginHandleEvent:
updateForPresentation:
pluginUnlockAction
_updateAppearance
setViewCanBeDisplayed:
setOrientation:
setFullscreen:animated:
setFullscreen:duration:
shouldShowLockStatusBarTime
allowsTimer
allowsLockScreenHint
animateResumingToApplicationWithIdentifier:
showBatteryChargingText
customSubtitleColor
customHeaderView
allowsPhotoSlideshow
handleMenuButtonDoubleTap
wantsMenuButtonHeldEvent
handleMenuButtonHeld
setNeedsLegibilityAppearanceUpdate
_agent
_appearance
_viewCanBeDisplayed
initWithItem:source:target:
item
source
target
_item
_source
_target
_isValid
isEmergencyDialerAction
_initWithDomain:
numberWithInt:
_bindProperty:withDefaultKey:toDefaultValue:options:
indigoConfigurationFlagsBitmask
_bindAndRegisterDefaults
indigoConfigurationFlagOne
indigoConfigurationFlagTwo
setUserInfo:
setProcess:
setAuxiliaryAnimation:
appendDictionarySection:withName:skipIfEmpty:
contextWithName:
name
process
auxiliaryAnimation
setObserver:
_name
_userInfo
_process
_auxiliaryAnimation
_referenceBounds
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
_scaledValueForValue:
peekNextBannerItemForTarget:
compare:
dequeueNextBannerItemForTarget:
SBUIBackgroundView
SBUIBackgroundStyleTransitioning
NSObject
SBUIWallpaperOverlay
SBUIForceTouchGestureRecognizer
UIInteractionProgressObserver
SBUIPluginAppearanceContext
_SBSceneHandleObserverToken
SBSceneHandleObserverToken
NSCopying
SBSceneHandleBlockObserver
BSInvalidatable
SBSceneHandleObserver
SBLockScreenPluginCallAction
SBLockScreenElementOverride
SBSceneView
SBScenePlaceholderContentViewProviderDelegate
SBUIIconForceTouchViewController
UIGestureRecognizerDelegate
Isolation
SBAlertItem
BSDescriptionProviding
_SBAlertItemHeaderViewController
SBUIAdditions
_SBSceneHandleObserverBehavior
SBSceneHandle
FBSceneMonitorDelegate
FBSceneHostManagerObserver
SBUIScene
FBSceneClient
_SBAlertController
SBUIIconForceTouchControllerDataProvider
SBUIActionPlatterViewController
SBUIKeyboardHomeAffordanceController
MTLumaDodgePillBackgroundLuminanceObserver
SBUIKeyboardHomeAffordanceAssertion
SBLockScreenPluginInCallAction
SBUIFullscreenAlertController
SBUISlidingFullscreenAlertController
SBUIPluginActivationContext
SBUIAction
SBUIFlashlightController
SBLockScreenLegibilitySettings
SBLockScreenPluginAction
SBUIActionViewLabel
SBUIEmojiAdditions
SBUIWorkspace
FBSceneClientProvider
SBOrientationTransformWrapperView
_SBOrientationTransformedContentView
SBUIChevronView
_SBFVibrantView
SpringBoardUI
SBRemoteAlertServer
SBRemoteAlertControllerDelegate
SBLockScreenPluginPresentation
SBMutableLockScreenPluginPresentation
SBUIIconForceTouchWindow
SBUISecureIconForceTouchWindow
SBUIActionView
SBUIUtilities
SBUIBannerAction
SBLockScreenPluginApplicationAction
SBUIActionViewVibrantStyling
SBLockScreenModalViewFactory
SBUIAppIconForceTouchController
SBUIAppIconForceTouchShortcutViewControllerDelegate
SBUIIconForceTouchControllerDataSource
SBUIIconForceTouchControllerDelegate
SBUIPluginController
SBPluginBundleController
BSPluginBundleController
SBUIIconForceTouchIconViewWrapperView
SBUIBannerItem
SBUIAppIconForceTouchShortcutViewController
SBUIActionPlatterViewControllerDelegate
SBUISound
SBUIActionKeylineView
SBLockScreenPluginAppearanceContext
SBLockScreenPluginMutableAppearance
SBLockScreenPluginAppearance
NSMutableCopying
SBLockScreenPluginMutableAppearanceContext
SBUILockScreenDisableAssertion
SBUIStarkBannerViewButton
SBCrossfadeView
SBRemoteAlert
SBRemoteAlertController
SBRemoteAlertDelegate
SBUIIconForceTouchWrapperViewController
SpringBoardUIAdditions
SBUIIconForceTouchController
SBUIIconForceTouchViewControllerDelegate
SBUIAppIconForceTouchControllerDataProvider
SBUIIconForceTouchVisualEffectView
SBLockScreenTimerDialView
SBUILegibility
SBUIOptionalLegibility
SBUIBannerTargetProxy
SBUIBannerTarget
SBUIBannerTargetBase
SBUIBannerTargetManager
SBAwayViewPluginController
SBLockScreenPluginViewController
SBLockScreenPluginController
SBUIBannerContext
SBLockScreenPluginEmergencyDialerAction
SBExternalIndigoDefaults
SBLockScreenPluginContext
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v24@0:8d16
q16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@16
v28@0:8q16B24
v40@0:8q16q24d32
d24@0:8q16
v32@0:8d16d24
@32@0:8d16d24
d40@0:8d16d24d32
@"BSUIBackdropView"
@"UIView"
@"MTMaterialView"
v28@0:8@16B24
v24@0:8@"UIInteractionProgress"16
v28@0:8@"UIInteractionProgress"16B24
@32@0:8@16:24
d16@0:8
v32@0:8@16@24
@"UIInteractionProgress"
v24@0:8Q16
v20@0:8B16
@24@0:8^{_NSZone=}16
@24@0:8@16
@"NSMutableDictionary"
v32@0:8@16q24
v40@0:8@16@24@32
v32@0:8@"SBSceneHandle"16@"FBScene"24
v32@0:8@"SBSceneHandle"16q24
v40@0:8@"SBSceneHandle"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v40@0:8@"SBSceneHandle"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v32@0:8@"SBSceneHandle"16@"NSSet"24
@24@0:8@?16
@"TUDialRequest"
@24@0:8q16
@"NSString"
v24@0:8@"<SBScenePlaceholderContentViewProvider>"16
@48@0:8@16{CGSize=dd}24q40
@56@0:8@16{CGSize=dd}24q40@48
v40@0:8q16@24@?32
{CGSize=dd}32@0:8{CGSize=dd}16
v40@0:8{CGSize=dd}16q32
v32@0:8@16@?24
q24@0:8q16
v64@0:8q16@24q32@40@48@?56
{CGSize=dd}16@0:8
@"SBSceneHandle"
{CGSize="width"d"height"d}
@"<SBScenePlaceholderContentContext>"
@"UIView<SBScenePlaceholderContentView>"
@"UIView<FBSceneHostView>"
@"<SBScenePlaceholderContentViewProvider>"
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@32@0:8@16@24
B32@0:8B16d20B28
B28@0:8B16@?20
q24@0:8@16
v40@0:8B16d20B28@?32
v28@0:8B16@?20
@"SBAppIconForceTouchDefaults"
@"SBUIIconForceTouchVisualEffectView"
@"SBUIIconForceTouchIconViewWrapperView"
@"SBUIIconForceTouchWrapperViewController"
@"NSArray"
@"NSMutableArray"
@"SBUIIconForceTouchControllerDataProvider"
@"<SBUIIconForceTouchViewControllerDelegate>"
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v24@0:8B16B20
v20@0:8i16
i16@0:8
@24@0:8B16B20
@"_SBAlertController"
@"UIImage"
@"UIImageView"
@"<SBSceneHandleObserver>"
v32@0:8@"FBSceneMonitor"16@"FBScene"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v32@0:8@"FBSceneMonitor"16@"NSSet"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v24@0:8@"FBSceneHostManager"16
v32@0:8@"FBSceneHostManager"16@"NSString"24
@40@0:8@16@24@32
v24@0:8@?16
@"FBSSceneDefinition"
@"FBScene"
@"FBSDisplayIdentity"
@"FBSceneMonitor"
@"NSHashTable"
@"NSMapTable"
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v40@0:8@"<FBSceneHost>"16@"FBSSceneDefinition"24@"FBSSceneParameters"32
v56@0:8@"<FBSceneHost>"16@"FBSSceneSettings"24@"FBSSceneSettingsDiff"32@"FBSSceneTransitionContext"40@?<v@?B>48
v40@0:8@"<FBSceneHost>"16@"FBSSceneTransitionContext"24@?<v@?B>32
v32@0:8@"<FBSceneHost>"16@"NSSet"24
@"<FBSceneHost>"
@"FBSSceneSettings"
@"FBSSceneClientSettings"
@"NSMutableSet"
@"SBAlertItem"
@"<_SBAlertControllerDelegate>"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{UIEdgeInsets=dddd}16@0:8
{CGPoint=dd}16@0:8
{?="iconForceTouchController_iconImageInsetsForGestureRecognizer"b1"iconForceTouchController_iconImageCornerRadiusForGestureRecognizer"b1"iconForceTouchController_wrapperViewCornerRadiusForGestureRecognizer"b1"iconForceTouchController_parallaxSettingsForGestureRecognizer"b1"iconForceTouchController_zoomDownViewForGestureRecognizer"b1"iconForceTouchController_zoomDownCenterForGestureRecognizer"b1}
@"<SBUIIconForceTouchControllerDataSource>"
@"SBUIIconForceTouchController"
@"SBUIForceTouchGestureRecognizer"
{?="actionPlatterViewControllerShouldRespondToTouches"b1}
@"UIStackView"
@"UISelectionFeedbackGenerator"
@"UILongPressGestureRecognizer"
@"<SBUIActionPlatterViewControllerDelegate>"
v24@0:8@"MTLumaDodgePillView"16
@"SBUIKeyboardHomeAffordanceAssertion"
@"MTLumaDodgePillView"
@"UIWindow"
v28@0:8B16B20B24
v24@0:8B16i20
v32@0:8q16d24
v36@0:8@16B24@?28
B20@0:8B16
@"NSNumber"
@"NSInvocation"
@"UIScreen"
@56@0:8@16@24@32@40@?48
@48@0:8@16@24@32@?40
@40@0:8@16@24@?32
@32@0:8@16@?24
@?16@0:8
v48@0:8@16@24@32^v40
v32@0:8B16Q20B28
v20@0:8f16
@"AVFlashlight"
@"NSObject<OS_dispatch_queue>"
@"UIColor"
@"BSAction"
@"UILabel"
@24@0:8^@16
v24@0:8@"FBSceneClientProviderInvalidationAction"16
@"<FBSceneClient>"24@0:8@"<FBSceneHost>"16
v24@0:8@"<FBSceneHost>"16
@"FBSSerialQueue"
@"FBSceneClientProviderInvalidationAction"
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGAffineTransform=dddddd}64@0:8{CGAffineTransform=dddddd}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
@"_SBOrientationTransformedContentView"
v24@0:8@"UIView"16
@"_SBFVibrantSettings"16@0:8
v24@0:8@"_SBFVibrantSettings"16
{CGAffineTransform=dddddd}32@0:8@16q24
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8@16q24B32
B24@0:8q16
@"_SBFVibrantSettings"
v40@0:8@16q24@32
v24@0:8@"SBRemoteAlertController"16
v40@0:8@"SBRemoteAlertController"16q24@"NSError"32
@24@0:8#16
@48@0:8@16@24@32@40
v48@0:8@16@24q32@40
v48@0:8{UIEdgeInsets=dddd}16
@"_UILegibilitySettings"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v28@0:8B16@20
@"SBUIActionViewLabel"
@"SBUIAction"
@?24@0:8@16
@72@0:8@?16@24@32@40Q48Q56@64
@"NSDictionary"
@"NSURL"
@"CAFilter"
B24@0:8@"SBUIAppIconForceTouchShortcutViewController"16
v32@0:8@"SBUIAppIconForceTouchShortcutViewController"16@"SBSApplicationShortcutItem"24
q32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{UIEdgeInsets=dddd}32@0:8@16@24
d32@0:8@16@24
{CGPoint=dd}32@0:8@16@24
q32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"UIView"32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"UIViewController"32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{UIEdgeInsets=dddd}32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
d32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"SBFParallaxSettings"32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{CGPoint=dd}32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
B32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
v32@0:8@"SBUIIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
v32@0:8B16d20B28
{?="appIconForceTouchController_shouldHandleGestureRecognizer"b1"appIconForceTouchController_shouldUseSecureWindowForGestureRecognizer"b1"appIconForceTouchController_willPresentForGestureRecognizer"b1"appIconForceTouchController_didPresentForGestureRecognizer"b1"appIconForceTouchController_willDismissForGestureRecognizer"b1"appIconForceTouchController_didDismissForGestureRecognizer"b1"appIconForceTouchController_shouldActivateApplicationShortcutItem_atIndex_forGestureRecognizer"b1}
@"SBUIAppIconForceTouchControllerDataProvider"
@"UIViewController"
@"FBSOpenApplicationService"
@"<SBUIAppIconForceTouchControllerDataSource>"
@"<SBUIAppIconForceTouchControllerDelegate>"
B32@0:8i16i20^d24
v32@0:8i16i20d24
B32@0:8i16i20^v24
B24@0:8@?16
B20@0:8i16
@"<SBUIPluginControllerHost>"
B24@0:8@"SBUIActionPlatterViewController"16
@"SBUIActionPlatterViewController"
@"_UIAssetManager"
@"CNMonogrammer"
@"<SBUIAppIconForceTouchShortcutViewControllerDelegate>"
@36@0:8I16Q20@28
@40@0:8@16Q24@32
@48@0:8q16@24@32@40
B32@0:8q16@?24
I16@0:8
v20@0:8I16
@"TLAlertConfiguration"
@"NSArray"16@0:8
@"SBLockScreenLegibilitySettings"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"SBLockScreenLegibilitySettings"16
@"SBLockScreenLegibilitySettings"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8#16
@20@0:8B16
@36@0:8@16@24B32
@"BSUIAnimationFactory"
v48@0:8@16@24@32@?40
@"<SBRemoteAlertDelegate>"16@0:8
v48@0:8@"SBSRemoteAlertDefinition"16@"SBSRemoteAlertConfigurationContext"24@"<SBRemoteAlertDelegate>"32@?<v@?@"<SBRemoteAlert>"@"NSError">40
v24@0:8@"<SBRemoteAlert>"16
v32@0:8@"<SBRemoteAlert>"16@"NSError"24
@52@0:8@16I24@28@36@44
@"SBSRemoteAlertDefinition"
@"<SBRemoteAlertControllerDelegate>"
@"<SBRemoteAlert>"
v32@0:8{CGSize=dd}16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v24@0:8@"SBUIIconForceTouchViewController"16
{?="iconForceTouchController_shouldHandleGestureRecognizer"b1"iconForceTouchController_shouldUseSecureWindowForGestureRecognizer"b1"iconForceTouchController_willPresentForGestureRecognizer"b1"iconForceTouchController_didPresentForGestureRecognizer"b1"iconForceTouchController_willDismissForGestureRecognizer"b1"iconForceTouchController_didDismissForGestureRecognizer"b1}
@"<SBUIIconForceTouchControllerDelegate>"
@"SBUIIconForceTouchViewController"
{?="appIconForceTouchController_applicationBundleIdentifierForGestureRecognizer"b1"appIconForceTouchController_applicationBundleURLForGestureRecognizer"b1"appIconForceTouchController_applicationShortcutWidgetBundleIdentifierForGestureRecognizer"b1"appIconForceTouchController_applicationShortcutItemsForGestureRecognizer"b1"appIconForceTouchController_iconImageInsetsForGestureRecognizer"b1"appIconForceTouchController_iconImageCornerRadiusForGestureRecognizer"b1"appIconForceTouchController_parallaxSettingsForGestureRecognizer"b1"appIconForceTouchController_zoomDownViewForGestureRecognizer"b1"appIconForceTouchController_zoomDownCenterForGestureRecognizer"b1}
@"SBUIAppIconForceTouchController"
@"_UIBackdropViewSettings"
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
@"SBUILegibilityView"
^v16@0:8
v24@0:8@"<SBUIBannerSource>"16
v24@0:8@"SBUIBannerContext"16
@"SBUIBannerContext"24@0:8@"<SBUIBannerSource>"16
v32@0:8@"SBUIBannerContext"16@?<v@?>24
@"<SBUIBannerTargetImplementation>"
@28@0:8B16@?20
@"BSAnimationSettings"28@0:8B16@?<v@?>20
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"SBLockScreenPluginAction"16@0:8
v28@0:8B16d20
Q24@0:8@16
@"<SBLockScreenPluginAgent>"
@"SBLockScreenPluginMutableAppearanceContext"
@"SBUIBannerItem"
@"<SBUIBannerSource>"
@"<SBUIBannerTarget>"
@"<FBSProcess>"
@"<SBLockScreenPluginLifecycleObserver>"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
backgroundStyle
Tq,N
transitioningBackgroundStyle
TB,R,N,GisTransitioningBackgroundStyle
groupName
T@"NSString",&,N
Tq,N,V_style
TB,R,N,GisTransitioningBackgroundStyle,V_transitioning
pressDuration
Td,R,N
forceTouchCompleted
TB,R,N,V_forceTouchCompleted
relativeTouchForce
touchForceVelocity
None
Boot
Alert
Logout
Plugin
Blocked
Keyboard
LostMode
IdleTimer
Restoring
Activation
LiftToWake
LockButton
RemoteLock
SOSDismiss
SmartCover
Notification
Authentication
NotificationCenter
Mesa
Siri
Touch
HomeButton
OtherButton
RemoteAlert
VolumeButton
ACPowerChange
ExternalRequest
ApplicationRequest
SpringBoardRequest
SystemServiceRequest
ChargingAccessoryChange
CoverSheet
ControlCenter
Dismiss
Authenticate
Authenticate and Dismiss
(inherit)
Default
DarkenSourceOver
BlurOnly
Light
LightWithTint
MediumDark
Dark
Passcode
v8@?0
uiEnvironment
TQ,N,V_uiEnvironment
hideOtherWindowsDuringAppearance
TB,N,V_hideOtherWindowsDuringAppearance
owner
T@"NSMutableDictionary",R,W,N,V_owner
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBSceneHandleBlockObserver.m
<Unknown File>
Cannot deallocate a SBSceneHandleBlockObserver without invalidating first.
T@"NSURL",R,D,N
element
hidden
text
Tq,N,V_element
TB,N,GisHidden,V_hidden
T@"NSString",C,N,V_text
SBApplicationSceneView
CustomContent
PlaceholderContent
LiveSnapshot
LiveContent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBSceneView.m
unsupported initializer
Invalid parameter not satisfying: %@
sceneHandle
%@:%p-SBApplicationSceneView:%p-%llu
%@-%p-%llu
sceneId
requestedDisplayMode
effectiveDisplayMode
this object has already been invalidated
zPosition
bogus reference size
bogus interface orientation
Expected views to match (toView: %@, toMode: %@, toDisplayModeView: %@).
v12@?0B8
hostingPriority
Tq,R,N,V_hostingPriority
hostingRequester
T@"NSString",R,C,N,V_hostingRequester
T@"SBSceneHandle",R,N,V_sceneHandle
referenceSize
T{CGSize=dd},R,N,V_referenceSize
orientation
Tq,R,N,V_orientation
placeholderContentProvider
T@"<SBScenePlaceholderContentViewProvider>",&,N,V_placeholderContentProvider
placeholderContentContext
T@"<SBScenePlaceholderContentContext>",&,N,V_placeholderContentContext
placeholderContentEnabled
TB,N,V_placeholderContentEnabled
displayMode
Tq,R,N,V_requestedDisplayMode
Tq,R,N,V_effectiveDisplayMode
backgroundView
T@"UIView",&,N,V_backgroundView
customContentView
T@"UIView",&,N,V_customContentView
kSBUIIconForceTouchViewControllerTapticEngineWarmUpReason
%s is not a valid initializer. You must call -[%@ initWithDataProvider:].
-[SBUIIconForceTouchViewController initWithNibName:bundle:]
%@ does not support unarchiving from a nib.
visualEffectView
parallaxView
iconViewWrapperViewBelow
primaryView
secondaryView
iconViewWrapperViewAbove
padding
H:|-(padding)-[visualEffectView]-(padding)-|
V:|-(padding)-[visualEffectView]-(padding)-|
H:|-(origin_x)-[iconViewWrapperViewBelow(size_width)]
origin_x
size_width
V:|-(origin_y)-[iconViewWrapperViewBelow(size_height)]
origin_y
size_height
H:|-(origin_x)-[primaryView(size_width)]
V:|-(origin_y)-[primaryView(size_height)]
@"NSLayoutConstraint"20@?0@"NSLayoutConstraint"8f16
H:|-(origin_x)-[iconViewWrapperViewAbove(size_width)]
V:|-(origin_y@priority)-[iconViewWrapperViewAbove(size_height)]
priority
v24@?0@"SBFView"8@"UIWindow"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBUIIconForceTouchViewController.m
%s should only be called when there is content to present!
-[SBUIIconForceTouchViewController _presentAnimated:withCompletionHandler:]
v16@?0q8
-[SBUIIconForceTouchViewController _dismissAnimated:withCompletionHandler:]
dataProvider
T@"SBUIIconForceTouchControllerDataProvider",R,N,V_dataProvider
state
Tq,R,N,V_state
layout
Tq,R,N,V_layout
delegate
T@"<SBUIIconForceTouchViewControllerDelegate>",W,N,V_delegate
SBAlertItemDidPrepareNewAlertControllerNotification
Lock
Pended
User Dismissed
Button Pressed
Auto Dismiss
Generic
Unlock
SBAlertItemsController
alertController
presented
TB,N,G_isPresented,S_setPresented:,V_presented
_headerImage
T@"UIImage",&,N,S_setHeaderImage:,V_headerImage
_attachmentImage
T@"UIImage",&,N,S_setAttachmentImage:,V_attachmentImage
_ignoresQuietMode
TB,N,S_setIgnoresQuietMode:,V_ignoresQuietMode
iconImage
T@"UIImage",&,N,SsetIconImage:,V_iconImage
iconImagePath
T@"NSString",&,N,G_iconImagePath,V_iconImagePath
ignoreIfAlreadyDisplaying
TB,N,V_ignoreIfAlreadyDisplaying
allowInSetup
TB,N,V_allowInSetup
pendInSetupIfNotAllowed
TB,N,V_pendInSetupIfNotAllowed
pendWhileKeyBagLocked
TB,N,V_pendWhileKeyBagLocked
allowedBundleIDs
T@"NSArray",&,N,V_allowedBundleIDs
suppressForKeynote
TB,N,V_suppressForKeynote
allowInCar
TB,N,V_allowInCar
allowMessageInCar
TB,N,V_allowMessageInCar
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBAlertItem.m
image
T@"UIImage",R,N
SBSApplicationShortcutItem.BadgeView
badgeView
T@"UIView",&,N
observer
T@"<SBSceneHandleObserver>",R,W,N,V_observer
didCreateScene
TB,N,V_didCreateScene
didDestroyScene
TB,N,V_didDestroyScene
didUpdateContentState
TB,N,V_didUpdateContentState
didUpdateSettingsWithDiff
TB,N,V_didUpdateSettingsWithDiff
didUpdateClientSettingsWithDiff
TB,N,V_didUpdateClientSettingsWithDiff
didUpdatePairingStatusForExternalSceneIdentifiers
TB,N,V_didUpdatePairingStatusForExternalSceneIdentifiers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBSceneHandle.m
init is unavailable for SBSceneHandle.
Scene or definition must be provided.
Given scene and monitor'd scene do not match.
Required scene wasn't found from scene handle: %@
v24@?0@"<SBSceneHandleObserver>"8@"_SBSceneHandleObserverBehavior"16
Cannot have scene creation/destruction invoked when using a scene monitor for lifecycle events.
Scene destroyed did not match the scene being tracked.
sceneID
scenePointer
A scene is required for the content host manager state to change.
sceneMonitor
T@"FBSceneMonitor",&,N,G_sceneMonitor,S_setSceneMonitor:,V_sceneMonitor
definition
T@"FBSSceneDefinition",R,N,G_definition,V_definition
displayIdentity
T@"FBSDisplayIdentity",&,N,S_setDisplayIdentity:,V_displayIdentity
manuallyControlsLifecycle
TB,N,G_manuallyControlsLifecycle,S_setManuallyControlsLifecycle:,V_manuallyControlsLifecycle
sceneIdentifier
T@"NSString",R,C,N
scene
T@"FBScene",R,N
sceneIfExists
T@"FBScene",R,N,V_scene
contentState
Tq,R,N
contentReady
TB,R,N,GisContentReady
identifier
layers
settings
clientSettings
T@"FBSSceneSettings",C,V_settings
T@"FBSSceneClientSettings",C,V_clientSettings
T@"NSString",R,C,N,V_identifier
valid
TB,R,N,GisValid,V_valid
T@"NSSet",R,C,N,V_layers
title
alertItem
T@"SBAlertItem",W,N,V_alertItem
alertControllerDelegate
T@"<_SBAlertControllerDelegate>",W,N,V_alertControllerDelegate
%s is not a valid initializer. You must call -[%@ initWithDataSource:controller:gestureRecognizer:].
-[SBUIIconForceTouchControllerDataProvider init]
dataSource
T@"<SBUIIconForceTouchControllerDataSource>",R,N,V_dataSource
controller
T@"SBUIIconForceTouchController",R,W,N,V_controller
gestureRecognizer
T@"SBUIForceTouchGestureRecognizer",R,W,N,V_gestureRecognizer
layoutStyle
iconViewFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
primaryViewController
T@"UIViewController",R,N
secondaryViewController
iconImageInsets
T{UIEdgeInsets=dddd},R,N
iconImageCornerRadius
wrapperViewCornerRadius
parallaxSettings
T@"SBFParallaxSettings",R,N
zoomDownView
T@"UIView",R,N
zoomDownCenter
T{CGPoint=dd},R,N
gestureRecognizerWindow
T@"UIWindow",R,N
interfaceOrientation
StatusBar
TimeAndDate
Subtitle
v28@?0Q8i16^B20
ScreenOff
VolumeUp
VolumeDown
HeadsetButton
HeadsetButtonHeld
Legible
Undefined
Overlay
Normal
Stationary
Disabled
Temporary
Exclusive
Camera
TouchID
MediaControls
TodayCenter
%s is not a valid initializer. You must call -[%@ initWithActions:gestureRecognizer:].
-[SBUIActionPlatterViewController initWithNibName:bundle:]
actions
T@"NSArray",R,C,N,V_actions
T@"UILongPressGestureRecognizer",R,W,N,V_gestureRecognizer
reversesActions
TB,N,V_reversesActions
imagePosition
Tq,N,V_imagePosition
T@"<SBUIActionPlatterViewControllerDelegate>",W,N,V_delegate
+[SBUIKeyboardHomeAffordanceController sharedInstance]_block_invoke
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBUIKeyboardHomeAffordanceAssertion.m
Attempted to make a home affordance keyboard assertion on a device that shouldn't.
assertions
T@"NSHashTable",&,N,V_assertions
topMostAssertion
T@"SBUIKeyboardHomeAffordanceAssertion",W,N,V_topMostAssertion
pillView
T@"MTLumaDodgePillView",&,N,V_pillView
sourceWindow
T@"UIWindow",W,N,V_sourceWindow
additionalEdgeMargin
Td,N,V_additionalEdgeMargin
SBPluginFullscreenAlertDidAnimateInNotification
SBUIFullscreenAlertAdapter
SBPluginFullscreenAlertAnimatedOutNotification
shouldAnimateIn
TB,N,V_shouldAnimateIn
animationStartTime
T@"NSNumber",&,N,V_animationStartTime
activationContext
T@"NSString",&,N,V_activationContext
SBUIRingerSwitchBehaviorDidChangeNotification
ringer-switch
topBar
T@"UIView",R,N,V_topBar
bottomBar
T@"UIView",R,N,V_bottomBar
SBDeviceLockStateChangedNotification
SBLockButtonPressedNotification
SBMenuButtonPressedNotification
SBVolumeChangedNotification
SBApplicationNetworkFlagsChangedNotification
SBHeadsetButtonUpNotification
SBActiveCallStateChangedNotification
SBRingerChangedNotification
SBIncomingCallPendingNotification
SBCallCountChangedNotification
SBTelephonyDaemonRestartNotification
SBUserEventOccurredNotification
SBHomescreenIconsDidAppearNotification
SBHomescreenIconsWillAppearNotification
SBWiFiDeviceAttachedNotification
SBProximityDidChangeNotification
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
SBTestingConfigureNextAssistantRecognitionStrings
SBFeaturesShouldBeLockedForRemoteLockNotification
SBBannerWillAnimateRevealNotification
SBBannerWillAnimateDismissalNotification
SBOrientationLockChangedNotification
SBAirplaneModeControllerWillProcessAirplaneModeChangeNotification
SBAirplaneModeControllerAirplaneModeDidChangeNotification
SBAirplaneModeControllerDidProcessAirplaneModeChangeNotification
SBTelephonyManagerWillProcessAirplaneModeChangeNotification
SBTelephonyManagerAirplaneModeDidChangeNotification
SBTelephonyManagerDidProcessAirplaneModeChangeNotification
SBNetworkTetheringStateChangedNotification
SBWifiManagerPowerStateDidChangeNotification
SBWifiManagerCurrentDeviceDidChangeNotification
SBWifiManagerDevicePresenceDidChangeNotification
SBBacklightAboutToUndimNotification
SBBacklightResetLockScreenIdleTimerNotification
SBBacklightLevelChangedNotification
SBBacklightFadeFinishedNotification
SBBacklightWillTurnOnWhileUILockedNotification
SBBacklightChangeSourceKey
SBBacklightOldFactorKey
SBBacklightNewFactorKey
kSBNotificationKeyState
kSBNotificationKeyDisplayIdentifier
kSBNotificationKeyPreferenceChangedKey
kSBNotificationKeyCurrentVolume
kSBNotificationKeyHeadsetButtonLongPress
kSBNotificationKeyBundleIdentifier
kSBNotificationKeyLocalNotification
kSBNotificationKeyFrame
kSBNotificationKeyAnimationDuration
screen
T@"UIScreen",&,N,V_screen
activationEvent
Ti,N,V_activationEvent
%s is not a valid initializer. You must call -[%@ initWithTitle:subtitle:image:badgeView:handler:].
-[SBUIAction init]
T@"NSString",R,C,N,V_title
subtitle
T@"NSString",R,C,N,V_subtitle
T@"UIImage",R,N,V_image
T@"UIView",R,N,V_badgeView
handler
T@?,R,C,N,V_handler
SBUILaunchOptionKeyPNGLess
SBUILaunchOptionKeyAllowUnlock
available
overheated
flashlightLevel
com.apple.ControlCenter.FlashlightModule.AVFlashlight
com.apple.ControlCenter
Flashlight
FlashlightLevel
TB,R,N,GisAvailable,V_available
TB,R,N,GisOverheated,V_overheated
level
TQ,N
backgroundColorHint
T@"UIColor",&,N,V_backgroundColorHint
vibrancyDisabled
TB,N,V_vibrancyDisabled
v16@?0@"BSActionResponse"8
completion
T@?,R,C,N,V_completion
label
T@"NSString",C,N,V_label
authenticationPolicy
Tq,N,V_authenticationPolicy
H:|[label]|
V:|[label]|
@16@?0@"NSArray"8
H:|[emojiLabel]|
emojiLabel
V:|[emojiLabel]|
T@"NSString",C,N
font
T@"UIFont",&,N
textColor
T@"UIColor",&,N
textAlignment
lineBreakMode
numberOfLines
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBUIWorkspace.m
queue
this can't be used outside the system app
%@:%@
initialClientSettings
can't register multiple scenes with the same identifier: %@
v16@?0@?<v@?>8
clientQueue
scenes
T@"NSSet",R,C,N
_UIKeyboardArbiter_ForSpringBoard_WorkspaceIdentifier
/System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
### Failed to Soft Linked: /System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
hasDrawn
container
contentOrientation
Tq,N,V_contentOrientation
containerOrientation
Tq,N,V_containerOrientation
contentViews
T@"NSArray",R,N
content
; state: %@>
vibrantSettings
T@"_SBFVibrantSettings",&,N
animationDuration
Td,N
Tq,N,V_state
color
T@"UIColor",&,N,V_color
T@"_SBFVibrantSettings",&,N,V_vibrantSettings
[Invalid]
SBUIChevronViewStateUp
SBUIChevronViewStateNone
SBUIChevronViewStateDown
com.apple.SpringBoardUIFramework
com.apple.springboard-ui.client
XCTestProbe
isTesting
SearchUI
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SpringBoardUI.m
This process should not be linking or loading SpringBoardUI.framework (<rdar://problem/26143166>)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBRemoteAlertServer.m
this initializer is not allowed - call initWithRemoteAlertControllerClass: instead
expected subclass of SBRemoteAlertController : remoteAlertControllerClass=%@
com.apple.springboard.remote-alert-server
you can't deallocate the server
the token must be valid at this point
failed to get a handleToken
v16@?0@"NSObject<OS_xpc_object>"8
handleToken for lookups must be valid at the time of sending : handleToken=%@ controller=%@ token=%@
-[SBRemoteAlertServer noteDidReceiveMessage:withType:fromClient:]
suggestedContentInsets
legibilitySettings
T{UIEdgeInsets=dddd},N,VsuggestedContentInsets
T@"_UILegibilitySettings",&,N,VlegibilitySettings
T{UIEdgeInsets=dddd},D,N
T@"_UILegibilitySettings",&,D,N
%s is not a valid initializer. You must call -[%@ initWithAction:].
-[SBUIActionView initWithFrame:]
titleLabel
subtitleLabel
H:|-(12)-[imageView(35)]-(12)-[textContainer]-(17)-|
imageView
textContainer
action
T@"SBUIAction",R,N,V_action
highlighted
TB,N,GisHighlighted,V_highlighted
actionBlock
T@?,C,N,V_actionBlock
remoteViewControllerClassName
T@"NSString",C,N,V_remoteViewControllerClassName
remoteServiceBundleIdentifier
T@"NSString",C,N,V_remoteServiceBundleIdentifier
behavior
TQ,N,V_behavior
T@"NSString",C,N,V_identifier
parameters
T@"NSDictionary",C,N,V_parameters
activationMode
TQ,R,N,V_activationMode
bundleID
transitionStyle
T@"NSString",C,N,V_bundleID
T@"NSURL",&,N,SsetURL:,V_url
TQ,N,V_transitionStyle
inputColor0
inputColor1
inputReversed
SBSApplicationShortcutSystemIcon_UnreadDot
ComposeNew
Play
Pause
Location
Search
Share
Prohibit
Contact
Home
MarkLocation
Favorite
Love
Cloud
Invitation
Confirmation
Mail
Message
Date
Time
CapturePhoto
CaptureVideo
Task
TaskCompleted
Alarm
Bookmark
Shuffle
Audio
Update
UnreadDot
SBSApplicationShortcutSystemIcon_%@
sbui_image
SBDashBoardModalView
SBUIAppIconForceTouchControllerWillPresentNotification
SBUIAppIconForceTouchControllerDidPresentNotification
SBUIAppIconForceTouchControllerWillDismissNotification
SBUIAppIconForceTouchControllerDidDismissNotification
v16@?0@"NSArray"8
v24@?0@"FBSProcessHandle"8@"NSError"16
T@"<SBUIAppIconForceTouchControllerDataSource>",W,N,V_dataSource
T@"<SBUIAppIconForceTouchControllerDelegate>",W,N,V_delegate
SBUIPluginVisibilityDidChangeNotification
SBUIPluginActivationSettingsDidChangeNotification
__bundleId
__supportsCarFullScreen
WiredMic
BTHeadset
MotionGesture
Voice
Continuity
Unknown
visible
TB,N,GisVisible,V_isVisible
host
T@"<SBUIPluginControllerHost>",W,N,V_host
filters.gaussianBlur.inputRadius
gaussianBlur
inputRadius
H:|[iconView]|
iconView
V:|[iconView]|
%s is not a valid initializer. You must call -[%@ initWithIconView:].
-[SBUIIconForceTouchIconViewWrapperView initWithFrame:]
T@"UIView",R,N,V_iconView
gaussianBlurRadius
%s is not a valid initializer. You must call -[%@ initWithDataProvider:applicationShortcutItems:].
-[SBUIAppIconForceTouchShortcutViewController initWithNibName:bundle:]
MobileSlideShow.app
InfoPlist
%@.png
Assets.car
T@"SBUIAppIconForceTouchControllerDataProvider",R,N,V_dataProvider
applicationShortcutItems
T@"NSArray",R,N,V_applicationShortcutItems
reversesApplicationShortcutItems
TB,N,V_reversesApplicationShortcutItems
iconPosition
Tq,N,V_iconPosition
T@"<SBUIAppIconForceTouchShortcutViewControllerDelegate>",W,N,V_delegate
SBSoundController
SystemSound
   hasCompletionBlock: %@
   SoundID: %lu
   Path: %@
 Behavior: %lu
   Vibration Pattern: %@
ToneAlert
   hasCompletionBlock: %@
    Alert Configuration: %@
Feedback
   eventType: %ld
{  SoundType: %@%@
soundType
Tq,N,V_soundType
systemSoundID
TI,N,V_systemSoundID
_resolvedSystemSoundID
TI,N,S_setResolvedSoundID:,V_resolvedSystemSoundID
soundBehavior
TQ,N,V_soundBehavior
vibrationPattern
T@"NSDictionary",&,N,V_vibrationPattern
alertType
Tq,N,V_alertType
alertConfiguration
T@"TLAlertConfiguration",C,N,V_alertConfiguration
songPath
T@"NSString",C,N,V_songPath
eventType
Tq,N,V_eventType
presentationStyle
notificationBehavior
presentationRegion
restrictions
elementOverrides
TB,R,N,GisHidden
restrictedCapabilities
TQ,R,N
T@"NSArray",R,C,N
T@"SBLockScreenLegibilitySettings",R,&,N
TB,N,GisHidden
T@"NSArray",C,N
T@"SBLockScreenLegibilitySettings",&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
BANNER_OKAY
CarDisplay
CarDisplayChevronBanner
textLabel
T@"UILabel",&,N,V_textLabel
unselectedTextColor
T@"UIColor",&,N,V_unselectedTextColor
selectedTextColor
T@"UIColor",&,N,V_selectedTextColor
unselectedImage
T@"UIImage",&,N,V_unselectedImage
selectedImage
T@"UIImage",&,N,V_selectedImage
highlightColor
T@"UIColor",&,N,V_highlightColor
animationFactory
T@"BSUIAnimationFactory",&,N,V_animationFactory
allowsGroupOpacityDuringCrossfade
TB,N,V_allowsGroupOpacityDuringCrossfade
adaptsAnimationFactoryTimingFunction
TB,N,V_adaptsAnimationFactoryTimingFunction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBRemoteAlertController.m
MACH_PORT_VALID(tokenPort)
remoteAlertDelegate
T@"<SBRemoteAlertDelegate>",R,W,N
remoteAlertClass must conform to SBRemoteAlert
the remoteAlert's delegate is wrong : remoteAlert=%@ actual=%@ expected=%@
v24@?0@"<SBRemoteAlert>"8@"NSError"16
the controller must be invalidated before it goes away
alert
T@"<SBRemoteAlert>",R,N
%s is not a valid initializer. You must call -[%@ initWithChildViewController:].
-[SBUIIconForceTouchWrapperViewController initWithNibName:bundle:]
containerView
childView
H:|[backgroundView]|
V:|[backgroundView]|
H:|[containerView]|
V:|[containerView]|
childViewController
T@"UIViewController",R,N,V_childViewController
contentAlpha
Td,N,V_contentAlpha
contentNativeSize
T{CGSize=dd},N,V_contentNativeSize
iconForceTouchViewController
T@"SBUIIconForceTouchViewController",R,N,V_iconForceTouchViewController
T@"<SBUIIconForceTouchControllerDataSource>",W,N,V_dataSource
T@"<SBUIIconForceTouchControllerDelegate>",W,N,V_delegate
-[SBUIAppIconForceTouchControllerDataProvider init]
T@"<SBUIAppIconForceTouchControllerDataSource>",R,N,V_dataSource
T@"SBUIAppIconForceTouchController",R,W,N,V_controller
applicationBundleIdentifier
T@"NSString",R,N
applicationBundleURL
T@"NSURL",R,N
applicationShortcutWidgetBundleIdentifier
effectStrength
Td,N,V_effectStrength
SBLockScreenTimerDial
@"UIImage"8@?0
SBLockScreenTimerDial.SBLockScreenTimerDial.%x
@"UIImage"16@?0^Q8
%@%@
T@"_UILegibilitySettings",&,N
strength
Td,N,V_strength
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBUIBannerTargetManager.m
must provide a valid target implementation
<%@:%p identifier=%p idiom=%i> -> %@
bannerTargetIdentifier
T^v,R,N
bannerTargetIdiom
T^v,R,N,V_identifier
Tq,R,N,V_idiom
v16@?0@"<SBUIBannerTargetManagerObserver>"8
targets
SBAwayViewPluginActivationReasonKey
SBAwayViewPluginActivatingForRemoteEvent
Plugin %@ did not call transition completion block
pluginAgent
T@"<SBLockScreenPluginAgent>",W,N
pluginPriority
pluginViewController
T@"UIViewController<SBLockScreenPluginViewController>",R,N
pluginAppearance
T@"<SBLockScreenPluginAppearance>",R,N
pluginUnlockAction
T@"SBLockScreenPluginAction",R,&,N
viewCanBeDisplayed
TB,N,V_viewCanBeDisplayed
T@"<SBLockScreenPluginAgent>",W,N,V_agent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBUIBannerContext.m
must supply a valid item
must supply a valid target
must supply a valid source
<%@:%p target=%@ source=%@ item=%@>
TB,R,N,GisValid,V_isValid
item
T@"SBUIBannerItem",R,N,V_item
source
T@"<SBUIBannerSource>",R,N,V_source
target
T@"<SBUIBannerTarget>",R,N,V_target
AppIconForceTouch
com.apple.indigo
indigoConfigurationFlagsBitmask
IndigoConfigurationFlags
Tq,R,D,N
name
process
userInfo
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_userInfo
T@"<FBSProcess>",&,N,V_process
T@"<SBLockScreenPluginLifecycleObserver>",&,N,V_observer
auxiliaryAnimation
T@?,C,N,V_auxiliaryAnimation
SBUIBannerContext *SBUIBannerTargetDequeueContextFromSourcesWithCheck(__strong id<SBUIBannerTargetImplementation>, __strong id<NSFastEnumeration>, __strong SBUIBannerDequeueAllowedCheck)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3757.73.1/SBUIBannerTarget.m
source inconsistency error: source=%@ peek=%@ dequeue=%@
Attempted to make a home affordance keyboard assertion on a device that shouldn't.
[Flashlight Controller] On: %@
[Flashlight Controller] Off: %@
Error setting flashlight level: %@
Error turning on flashlight power: %@
%{public}@: Client "%{public}@" is not allowed to use this class. All requests will be ignored.
Allowing SpringBoardUI.framework to load because SearchUI.framework is loaded. This will become a hard assert once <rdar://problem/29408996> is fixed.
This process should not be linking or loading SpringBoardUI.framework
malformed or dead create message received and discarded -> payload=%@
no controller found for activate/invalidate message -> payload=%@
malformed or dead activate/invalidate message received and discarded -> payload=%@
 ****==== %s client=%@ type=%lli payload=%@
Could not launch application with application shortcut item: %{public}@, error: %{public}@.
Entitlement %{public}@ required to create remoteAlert with definition=%{public}@
SBSRemoteAlertDefinition required to create remoteAlert : definition=%{public}@
%{public}@ can't present without a data source.
%{public}@ can't present without a window.
