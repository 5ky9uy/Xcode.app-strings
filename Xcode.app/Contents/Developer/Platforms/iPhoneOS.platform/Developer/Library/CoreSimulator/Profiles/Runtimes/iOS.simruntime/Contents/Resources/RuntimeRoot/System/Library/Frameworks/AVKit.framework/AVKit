333333
?ffffff
?[5"y
ffffff
?ffffff
r@333333
$@UUUUUU
?UUUUUU
?ffffff
AVView
AVLogging
__AVPlayerLayerView
AVPictureInPicturePlayerLayerView
_AVSimplePlayerLayerView
AVScrubber
AVChapter
NSCopying
AVMediaSelection
AVPlayerController
AVVolumeSlider
AVUserInteractionObserverGestureRecognizer
AVAppBasedStatusBarAppearanceController
AVInteractiveTransitionGestureTracker
UIGestureRecognizerDelegate
NSObject
AVNowPlayingInfoController
AVStatusBarBackgroundGradientView
AVAdditions
AVPlayerViewController
AVFullScreenViewControllerDelegate
AVPlaybackControlsVisibilityControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
AVPictureInPictureControllerDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewController_WebKitOnly
AVPlaybackControlsViewControllerVisibility
AVPlaybackControlsViewControllerActions
AVPlayerViewControllerTransitioningInternal
AVFullScreenViewController
AVRoutePickerView
AVPictureInPictureViewController
PGPictureInPictureViewController
AVExternalPlaybackIndicatorView
AVValueTiming
NSMutableCopying
NSCoding
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVKeyValueObservationController
AVKeyValueChange
AVKeyValueObservationControllerProxyObserver
AVMediaSelectionTableViewController
AVTableViewCell
AVMediaSelectionViewController
AVStackView
AVPictureInPictureController
PGPictureInPictureProxyDelegate
AVPictureInPictureViewControllerDelegate
AVLabel
AVPlayerView
AVLoadingSpinner
AVRoutePickerHostController
AVRoutePickerServiceController
AVRoutePickerHostViewController
AVRoutePickerViewController
AVRoutePickerHostViewControllerDelegate
AVPictureInPictureIndicatorLayer
AVBackgroundView
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVTouchIgnoringView
AVPresentationTransition
AVTransition
AVExitFullScreenTransition
AVFullScreenTransition
AVEnterFullScreenTransition
AVDismissalTransition
AVTimer
AVRoutePickerContainerViewController
MPAVRoutingViewControllerDelegate
AVTransportControlsView
AVButtonAvailabilityObserver
AVPlaybackControlsController
AVPlayerViewControllerContentViewDelegate
AVRoutePickerContainerViewControllerDelegate
MPVolumeControllerDelegate
AVTransportControlsViewDelegate
AVPlaybackControlsVisibilityControllerViewInfo
AVPlaybackControlsVisibilityController
UnitTestSupport
AVTransitionController
UIViewControllerTransitioningDelegate
UIViewControllerInteractiveTransitioning
UIViewControllerAnimatedTransitioning
AVInteractiveTransitionGestureTrackerDelegate
AVPlayerControllerMercurySupportInternal
AVPlayerControllerExternalPlaybackSupportInternal
AVBackdropView
AVPlayerViewControllerContentView
AVButton
AVAudioOnlyIndicatorView
AVMicaPackage
CAStateControllerDelegate
CAMLParserDelegate
AVPlaybackControlsView
_AVBundle
AVKitLayoutItem
NSLayoutConstraint_AVKitAdditions
NSLayoutAnchor_AVKitAdditions
NSLayoutDimension_AVKitAdditions
AVButtonOverlappingHitRectResolverView
AVUnsupportedContentIndicatorView
hitRectInsets
T{UIEdgeInsets=dddd},N,V_hitRectInsets
ignoresTouches
TB,N,V_ignoresTouches
categories
T@"NSMutableDictionary",&,N,V_categories
reusableLogQueue
T@"NSMutableArray",&,N,V_reusableLogQueue
loggingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_loggingQueue
--- %@ ---
AVKit
AVKit-%@
com.apple.avkit
com.apple.avkit.loggingQueue
AVLoggingLevel
AVUserLog
%@ (%p) %@
AVKitErrorDomain
AVKIT_ERROR_PICTURE_IN_PICTURE_START_FAILED
AVKIT_ERROR_UNKNOWN
playerLayer
T@"AVPlayerLayer",R,N
playerController
T@"AVPlayerController",&,N
videoGravity
Tq,N
readyForDisplay
TB,R,N,GisReadyForDisplay
videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
pixelBufferAttributes
T@"NSDictionary",C,N
pictureInPicturePlayerLayerView
T@"AVPictureInPicturePlayerLayerView",R,N
V:|[simplePlayerLayerView]|
H:|[simplePlayerLayerView]|
simplePlayerLayerView
layer
playerLayer.pixelBufferAttributes
playerLayer.videoRect
playerLayer.readyForDisplay
playerLayer.videoGravity
scrubbingSpeed
Tq,N,V_scrubbingSpeed
resolution
Td,N,V_resolution
shouldRecoverFromPrecisionScrubbingIfNeeded
TB,N,V_shouldRecoverFromPrecisionScrubbingIfNeeded
loadedTrackOverlayView
T@"UIView",R,N,V_loadedTrackOverlayView
completedTrackOverlayView
T@"UIView",R,N,V_completedTrackOverlayView
currentThumbView
T@"UIImageView",W,N,V_currentThumbView
extrinsicContentSize
T{CGSize=dd},N,V_extrinsicContentSize
collapsed
TB,N,GisCollapsed,V_collapsed
included
TB,N,GisIncluded,V_included
collapsedOrExcluded
TB,R,N,GisCollapsedOrExcluded
hasAlternateAppearance
TB,N,V_hasAlternateAppearance
hasFullScreenAppearance
TB,N,V_hasFullScreenAppearance
loadedTimeRanges
T@"NSArray",C,N,V_loadedTimeRanges
localizedScrubbingSpeedName
T@"NSString",R,N
estimatedFrameRate
Tf,N,V_estimatedFrameRate
rate
Tf,N,V_rate
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_FINE_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_QUARTER_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HALF_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HI_SPEED_SCRUBBING_TEXT
startTime
Td,R,V_startTime
duration
Td,R,V_duration
number
TQ,R,V_number
title
T@"NSString",R,C,V_title
image
T@"UIImage",R,V_image
com.apple.AVKit.ChapterImageQueue
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
Selected option: %@ for mediaCharacteristic: %@
%@ mediaOption: %@ mediaCharacteristic: %@
%@ filtereLegibleList: %@
q24@?0@8@16
%@ legibleOptions: %@
%@ filteredOptions: %@
%@ audibleOptions: %@
player.currentItem.currentMediaSelection
player.currentItem.asset
player.appliesMediaSelectionCriteriaAutomatically
%@ AudioMediaSelectionOptions: %@
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
thumbView
T@"UIImageView",&,N,V_thumbView
playerMuted
TB,N,GisPlayerMuted,V_playerMuted
v16@?0@"UIGraphicsImageRendererContext"8
statusBarHiddenObserver
T@,&,N,V_statusBarHiddenObserver
clientPrefersStatusBarHidden
TB,N,V_clientPrefersStatusBarHidden
pinchToDismissEnabled
TB,N,GisPinchToDismissEnabled,V_pinchToDismissEnabled
pinchToPresentEnabled
TB,N,GisPinchToPresentEnabled,V_pinchToPresentEnabled
panToDismissEnabled
TB,N,GisPanToDismissEnabled,V_panToDismissEnabled
activeGestureType
Tq,N,V_activeGestureType
locationOfInitialPinchInWindow
T{CGPoint=dd},N,V_locationOfInitialPinchInWindow
rotation
Td,N,V_rotation
delegate
T@"<AVInteractiveTransitionGestureTrackerDelegate>",R,W,N,V_delegate
panGestureRecognizer
T@"UIPanGestureRecognizer",R,N,V_panGestureRecognizer
swipeDownGestureRecognizer
T@"UISwipeGestureRecognizer",R,N,V_swipeDownGestureRecognizer
pinchGestureRecognizer
T@"UIPinchGestureRecognizer",R,N,V_pinchGestureRecognizer
rotationGestureRecognizer
T@"UIRotationGestureRecognizer",R,N,V_rotationGestureRecognizer
recognizers
T@"NSArray",R,N,V_recognizers
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Cannot reset when not tracking.
Cannot cancel when not tracking.
Cannot finish when not tracking.
Began tracking when already tracking.
Recognized pan gesture without enabling pan to dismiss.
Pinch to present and pinch to dismiss cannot be simultaneously enabled.
Recognized pinch gesture without enabling pinch to present or pinch to dismiss.
AVNowPlayingInfoControllerDidReceiveStopCommandEventNotification
AVNowPlayingInfoControllerIdentifierKey
enabled
TB,N,GisEnabled
requiresLinearPlayback
TB,N,V_requiresLinearPlayback
Remote Command Staus: %ld
Change playback position command
Change playback rate command
Seek backward command
Seek forward command
Skip backward command
Skip Forward command
Previous track command
Next track command
Toggle play pause command
Stop Command
Play Command
Pause Command
HandlingRemoteCommandEvent
Setting now playing info: %@
@"UIImage"24@?0{CGSize=dd}8
UpdateNowPlayingInfo
Update now playing info if need: %d
Owns now playing info: %d
PlayerController can scan backward changed to: %d
PlayerController can scan forward changed to: %d
PlayerController can seek changed to: %d
PlayerController can seek chapter bacwkard changed to: %d
PlayerController can seek chapter forward changed to: %d
PlayerController can toggle playback changed to: %d
PlayerController can play changed to: %d
PlayerController can pause changed to: %d
hasContent
contentDuration
canPause
canPlay
canTogglePlayback
canSeekChapterForward
canSeekChapterBackward
canSeek
canScanForward
canScanBackward
gradientOpacity
Td,N,V_gradientOpacity
showsGradientWhenUnderlappingStatusBar
TB,N,V_showsGradientWhenUnderlappingStatusBar
endPoint
startPoint
AVKit is playing audiovisual content. That prevents display sleep.
fullScreenViewController
T@"AVFullScreenViewController",W,N,V_fullScreenViewController
secondScreenWindow
T@"UIWindow",&,N,V_secondScreenWindow
playbackTargetScreen
T@"UIScreen",&,N,V_playbackTargetScreen
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
TB,N,V_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
T@?,C,N,V_finishPreparingForInteractiveDismissalHandler
interactiveDismissalCompletionHandler
T@?,C,N,V_interactiveDismissalCompletionHandler
canHidePlaybackControls
TB,N
interactiveContentOverlayView
T@"UIView",R,N
canHideInteractiveContentOverlayView
preferredUnobscuredArea
player
T@"AVPlayer",&,N
showsPlaybackControls
T@"NSString",C,N
contentOverlayView
allowsPictureInPicturePlayback
updatesNowPlayingInfoCenter
entersFullScreenWhenPlaybackBegins
TB,N,V_entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
TB,N,V_exitsFullScreenWhenPlaybackEnds
T@"<AVPlayerViewControllerDelegate>",W,N
MediaSelectionDone
Invalid call of %@!
*** Warning: %@ is trying to exit full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
%@ %@
*** Warning: %@ is trying to enter full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
External Playback Indicator View TV Out Subtitle
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_SUBTITLE
External Playback Indicator View TV Out Title
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_TITLE
External Playback Indicator View AirPlay Subtitle
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_SUBTITLE
External Playback Indicator View AirPlay Title
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_TITLE
'ReadyToPlay'
'Loading'
'Failed'
'Unknown'
PlayerController status changed to: %@
Exit full screen keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_EXIT_FULLSCREEN
Show next frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_NEXT_FRAME
Show previous frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_PREVIOUS_FRAME
Fast forward keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_FAST_FORWARD
Rewind keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_REWIND
Go to beginning keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_GO_TO_BEGINNING
Skip ahead 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_AHEAD_15
Skip back 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_BACK_15
Volume down keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_DOWN
Volume up keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_UP
Play/Pause keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_PLAY_PAUSE
_pictureInPictureController
_playerLayerView
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.allowsExternalPlayback
playerController.externalPlaybackType
playerController.playingOnExternalScreen
playerController.contentDimensions
playerController.status
v20@?0B8@"NSError"12
Did receive stop command notification.
%@ Attempt to load view when view was already loaded.
*** AVPlayerViewController: Setting a view is not supported.
%@ preferredUnobscuredArea: %ld
%@ canHideInteractiveContentOverlayView: %@
%@ requiresLinearPlayback: %@
%@ canHidePlaybackControls: %@
%@ updatesNowPlayingInfoCenter: %@
%@ playerController: %@
%@ delegate: %@
%@ allowsPictureInPicturePlayback: %d
%@ videoGravity: %@
%@ showsPlaybackControls: %d
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
%@ player: %@
AVAllowsPictureInPicturePlayback
AVVideoLayerGravity
AVShowsPlaybackControls
AVPlayerShouldAutoplay
AVPlayerAssetFilename
_playerLayerView.pixelBufferAttributes
_playerLayerView.videoBounds
_playerLayerView.readyForDisplay
_playerLayerView.videoGravity
playerController.player
iAdPrerollView
showsExitFullScreenButton
pictureInPicturePossible
TB,R,N,GisPictureInPicturePossible
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
pictureInPictureWasStartedWhenEnteringBackground
TB,R,N
playbackControlsVisibilityController
T@"AVPlaybackControlsVisibilityController",R,N
T@"UIViewController",R,W,N
contentView
T@"AVPlayerViewControllerContentView",R,N
presentingFullScreenFromInline
TB,R,N,GisPresentingFullScreenFromInline
presentedFullScreen
TB,R,N,GisPresentedFullScreen
View needs to be loaded before you can call %@!
View may not need layout when you call %@!
*** Warning: %@ is trying to enter full screen, but it is already full screen, so no transition will be performed.
%@ showsExitFullScreenButton: %d
%@: %@
PictureInPictureButtonTapped
FullScreenButtonTapped
MediaSelectionButtonTapped
FullScreenDoneButtonTapped
_pictureInPictureController.pictureInPictureWasStartedWhenEnteringBackground
_pictureInPictureController.pictureInPictureSuspended
_pictureInPictureController.pictureInPictureActive
_pictureInPictureController.pictureInPicturePossible
T@"<AVFullScreenViewControllerDelegate>",W,N,V_delegate
canChangeStatusBarHidden
TB,N,V_canChangeStatusBarHidden
T@"UIView",W,N,V_contentView
presentationBackgroundView
T@"UIView",R,N,V_presentationBackgroundView
%@ did not receive a view from its delegate, %@.
T@"<AVRoutePickerViewDelegate>",W,V_delegate
routePickerButtonHidden
TB,R,GisRoutePickerButtonHidden,V_routePickerButtonHidden
activeTintColor
T@"UIColor",&
routePickerButtonStyle
Tq,V_routePickerButtonStyle
AudioRoutePickerButton
T@"AVPlayerController",&,N,V_playerController
T@"<AVPictureInPictureViewControllerDelegate>",W,N
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
%@ does not support unarchiving from a nib.
%@ is not a valid initializer. You must call -[%@ initWithPictureInPicturePlayerLayerView:].
playerController.playing
ExternalPlaybackIndicatorLarge
@"UIStackView"24@?0@"NSArray"8d16
@"UILabel"16@?0d8
anchorValue
Td,R,N
anchorTimeStamp
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
Td,D,N
currentValue
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
v40@?0@"NSDictionary"8@16@"NSString"24@"NSString"32
value
T@,R,N
oldValue
initialValue
TB,R,N,GisInitialValue
keyPath
T@"NSString",R,N,V_keyPath
observationToken
T@,R,N,V_observationToken
token
T@"NSString",R,N,V_token
options
TQ,R,N,V_options
observedObject
observer
T@,R,W,N,V_observer
keyPaths
T@"NSSet",R,N,V_keyPaths
changesBlock
T@?,R,N,V_changesBlock
com.apple.avkit.AVKitKVOProxyObserver
You must call -[AVKeyValueObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
com.apple.avkit.AVKeyValueObservationController
playbackShouldResumeWhenDismissed
TB,N,V_playbackShouldResumeWhenDismissed
Media Selection View Controller Legible Options Header Title
MEDIA_SELECTION_VIEW_CONTROLLER_LEGIBLE_OPTIONS_HEADER_TITLE
Media Selection View Controller Audio Options Header Title
MEDIA_SELECTION_VIEW_CONTROLLER_AUDIO_OPTIONS_HEADER_TITLE
AVMediaSelectionViewControllerCellReuseIdentifier
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
representedObject
T@,&,N,V_representedObject
Media Selection View Controller Navigation Item Title
MEDIA_SELECTION_VIEW_CONTROLLER_NAVIGATION_ITEM_TITLE
TB,N,V_allowsPictureInPicturePlayback
T@"<AVPictureInPictureControllerDelegate>",W,N
%@ pictureInPictureProxy: %@
%@ pictureInPictureProxy: %@ reason: %ld
StopPictureInPicture
%@ error: %@
FailedToStartPictureInPicture
PiP PlayerController status changed to: %@
PlayerLayer player changed: %@
PiPPlayerDidChange
%@ needs to be invoked on the main thread!
_window
UIWindowLayer
playerController.hasVideo
playerController.rate
playerController.currentTimeWithinEndTimes
playerController.contentDurationWithinEndTimes
playerController.loadedTimeRanges
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
_pictureInPictureProxy.pictureInPictureWasStartedWhenEnteringBackground
_pictureInPictureProxy.pictureInPictureSuspended
_pictureInPictureProxy.pictureInPictureActive
playerController.pictureInPicturePossible
_pictureInPictureProxy.pictureInPicturePossible
StopPictureInPictureButton
StartPictureInPictureButton
primaryScreen
T@"UIScreen",W,N,V_primaryScreen
T@"AVPlayerViewControllerContentView",R,N,V_contentView
managesContentViewLayout
TB,N,V_managesContentViewLayout
%@ window: %@ screen: %@
T@"<AVRoutePickerHostViewControllerDelegate>",W,N,V_delegate
%@ Route picker view service terminated with error: %@
%@ Loaded extension: %@
%@ Could not load extension: %@
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
%@ Instantiate view controller from extension %@
Could not present route picker view controller. %@ extension is not loaded.
dismissalHandler
T@?,C,N,V_dismissalHandler
Route Picker View Controller Cancel Button Title
ROUTE_PICKER_VIEW_CONTROLLER_CANCEL_BUTTON_TITLE
com.apple.AVKit.RoutePickerExtension
v24@?0@"AVRoutePickerHostViewController"8@"NSError"16
%@ Failed to create remote view controller: %@
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
Picture in Picture Indicator Layer Title
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
PictureInPictureIndicatorLarge
backdropView
T@"AVBackdropView",W,N,V_backdropView
minTime
Td,V_minTime
maxTime
Td,V_maxTime
T@"<AVTimeControlling>",&
interval
currentTime
AVResolution
AVInterval
AVPlayerController
playerController.minTime
playerController.minTiming
playerController.maxTime
playerController.maxTiming
playerController.timing
targetTime
targetTimeWithinEndTimes
remainingTargetTimeWithinEndTimes
Td,R
currentTimeWithinEndTimes
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
thirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
TB,R,GisThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
playerController.seekableTimeRanges
playerController.contentDuration
playerController.seekToTime
playerController.seeking
playerViewController
T@"AVPlayerViewController",R,W,N,V_playerViewController
backgroundView
T@"UIView",R,N,V_backgroundView
toView
fromView
containerView
toViewController
T@"UIViewController",R,N
fromViewController
initialFrameForFromViewController
finalFrameForFromViewController
initialFrameForToViewController
finalFrameForToViewController
currentAnimator
T@"UIViewPropertyAnimator",W,N,V_currentAnimator
wasInitiallyInteractive
TB,N,V_wasInitiallyInteractive
interactive
TB,R,N,GisInteractive
transitionContext
T@"<UIViewControllerContextTransitioning>",R,N,V_transitionContext
%@ called with an existing animator %@.
%@ - Failed to determine which transition to use.
If orientations are changing, the presenting view should have been removed. Something is probably wrong with shouldRemovePresentingView.
%@ Expected a fullScreenPresentationController and got %@ instead.
T@"AVFullScreenViewController",R,N,V_fullScreenViewController
prefersBlackBarsDuringTransition
TB,N,V_prefersBlackBarsDuringTransition
%@ didComplete: %@
ExitFullScreen
EnterFullScreen
Done
VolumeMuted
VolumeZero
VolumeLow
VolumeMedium
VolumeHigh
ProminentPlaySmall
ProminentPlayLarge
Inline_AirPlay
Inline_MediaSelection
Inline_Pause
Inline_Play
Inline_PiP
Inline_SkipBack15
Inline_SkipForward15
Inline_GotoLive
FullScreen_AirPlay
FullScreen_MediaSelection
FullScreen_Pause
FullScreen_Play
FullScreen_PiP
FullScreen_SkipBack15
FullScreen_SkipForward15
FullScreen_GotoLive
v48@?0^{CGContext=}8{CGRect={CGPoint=dd}{CGSize=dd}}16
Td,R,V_interval
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
routingViewController
T@"MPAVRoutingViewController",&,N,V_routingViewController
preferredWidthConstraint
T@"NSLayoutConstraint",&,N,V_preferredWidthConstraint
routePickerDelegate
T@"<AVRoutePickerContainerViewControllerDelegate>",W,N,V_routePickerDelegate
shouldDismiss
T@"AVBackdropView",R,N,V_backdropView
scrubInstructionsBackdrop
T@"AVBackdropView",&,N,V_scrubInstructionsBackdrop
flexibleWidthView
T@"UIView",R,N,V_flexibleWidthView
loadingSpinner
T@"AVLoadingSpinner",R,N,V_loadingSpinner
doubleRowLayoutConstraints
T@"NSArray",R,N,V_doubleRowLayoutConstraints
scrubberInstructionsDoubleRowActiveConstraint
T@"NSLayoutConstraint",R,N,V_scrubberInstructionsDoubleRowActiveConstraint
liveBroadcastLabel
T@"AVLabel",R,N,V_liveBroadcastLabel
liveBroadcastScrubberLabel
T@"AVLabel",R,N,V_liveBroadcastScrubberLabel
loadingIndicatorTextLabel
T@"AVLabel",R,N,V_loadingIndicatorTextLabel
scrubInstructionsContainer
T@"UIView",R,N,V_scrubInstructionsContainer
scrubInstructionsLabel
T@"UILabel",R,N,V_scrubInstructionsLabel
scrubInstructionsBackdropLabel
T@"UILabel",R,N,V_scrubInstructionsBackdropLabel
scrubInstructionsTimer
T@"NSTimer",W,N,V_scrubInstructionsTimer
scrubberValueWhenScrubInstructionsTimerBegan
Tf,N,V_scrubberValueWhenScrubInstructionsTimerBegan
singleRowViews
T@"NSArray",R,N,V_singleRowViews
backdropViewNeedsLayout
TB,N,V_backdropViewNeedsLayout
T@"<AVTransportControlsViewDelegate>",W,N,V_delegate
doubleRowLayoutEnabled
TB,N,GisDoubleRowLayoutEnabled,V_doubleRowLayoutEnabled
showsLoadingIndicator
TB,N,V_showsLoadingIndicator
showsLiveStreamingControls
TB,N,V_showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
TB,N,V_liveStreamingControlsIncludeScrubber
minimumRequiredWidth
Td,R,N,V_minimumRequiredWidth
scrubber
T@"AVScrubber",R,N,V_scrubber
elapsedTimeLabel
T@"AVLabel",R,N,V_elapsedTimeLabel
timeRemainingLabel
T@"AVLabel",R,N,V_timeRemainingLabel
standardPlayPauseButton
T@"AVButton",R,N,V_standardPlayPauseButton
skipForwardButton
T@"AVButton",R,N,V_skipForwardButton
skipBackButton
T@"AVButton",R,N,V_skipBackButton
routePickerButton
T@"AVButton",R,N,V_routePickerButton
mediaSelectionButton
T@"AVButton",R,N,V_mediaSelectionButton
Slide your finger up to adjust the scrubbing rate.
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SLIDE_UP_TITLE_LABEL_TEXT
v24@?0@"<AVPlaybackControlsViewItem>"8d16
Skip Backward
Skip Forward
Play/Pause
Media Selection
AirPlay
Live
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
Live Broadcast
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_BROADCAST_LABEL_TEXT
Loading Indicator
Loading Indicator View Loading Label Text
LOADING_INDICATOR_VIEW_LOADING_LABEL_TEXT
Time Remaining
Time Elapsed
@"AVLabel"24@?0@"NSString"8@"NSString"16
playbackControlsView
T@"AVPlaybackControlsView",&,N,V_playbackControlsView
keyValueObservationController
T@"AVKeyValueObservationController",R,N,V_keyValueObservationController
timeResolver
T@"AVPlayerControllerTimeResolver",&,N,V_timeResolver
elapsedTimeFormatter
T@"AVTimeFormatter",R,N,V_elapsedTimeFormatter
remainingTimeFormatter
T@"AVTimeFormatter",R,N,V_remainingTimeFormatter
routePickerAlertController
T@"UIAlertController",W,N,V_routePickerAlertController
volumeController
T@"MPVolumeController",&,N,V_volumeController
AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
T@,&,N,V_AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
MPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver
T@,&,N,V_MPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver
MPVolumeViewRoutePickerPresentedNotificationObserver
T@,&,N,V_MPVolumeViewRoutePickerPresentedNotificationObserver
showsMediaSelectionButton
showsSkipButtons
showsProminentPlayButton
prominentPlayButtonCanShowPauseGlyph
showsRoutePickerButton
includesFullScreenButton
showsTransportControls
showsVolumeSlider
TB,N,V_showsVolumeSlider
canExcludeProminentPlayButton
TB,N,V_canExcludeProminentPlayButton
coveringWindow
TB,N,GisCoveringWindow,V_coveringWindow
fullScreen
TB,R,N,GisFullScreen
pickedRouteHasVolumeControl
TB,N,V_pickedRouteHasVolumeControl
scrubberEnabled
TB,N,GisScrubberEnabled,V_scrubberEnabled
hasPlaybackBegun
TB,N,V_hasPlaybackBegun
hasPlaybackBegunSinceEnteringInline
TB,N,V_hasPlaybackBegunSinceEnteringInline
minimumTime
maximumTime
hasSeekableLiveStreamingContent
TB,N,V_hasSeekableLiveStreamingContent
actuallyCanSeek
T@"AVPlayerController",W,N,V_playerController
suspended
TB,N,GisSuspended,V_suspended
playerViewControllerIsPresentingFullScreen
TB,N,V_playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
TB,N,V_playerViewControllerIsPresentedFullScreen
playerViewControllerHasInvalidViewControllerHierarchy
TB,N,V_playerViewControllerHasInvalidViewControllerHierarchy
shouldEnterFullScreenWhenPlaybackBegins
Tq,N,V_preferredUnobscuredArea
TB,N,V_canHideInteractiveContentOverlayView
showsPictureInPictureButton
TB,N,V_showsPictureInPictureButton
TB,N,V_showsPlaybackControls
showsFullScreenButton
TB,N,V_showsFullScreenButton
pictureInPictureController
T@"AVPictureInPictureController",&,N,V_pictureInPictureController
%@ Cannot observe keypath %@ %@
v32@?0@8@16@"AVKeyValueChange"24
Playback Controls View Controller Cancel Button Title
PLAYBACK_CONTROLS_VIEW_CONTROLLER_CANCEL_BUTTON_TITLE
v12@?0C8
v32@?0@"AVPlaybackControlsController"8@16@"AVKeyValueChange"24
playerController.hasSeekableLiveStreamingContent
playerController.canTogglePlayback
playerController.hasLiveStreamingContent
playerController.muted
Called %@ while suspended! to or from full screen
Called %@, but observation had already begun.
playbackControlsView.transportControlsView.doubleRowLayoutEnabled
playerController.canSeek
timeResolver.maxTime
timeResolver.minTime
timeResolver.targetTime
playerController.hasMediaSelectionOptions
pictureInPictureController.pictureInPictureActive
controls
T@"NSArray",&,N,V_controls
visibilityBehaviorOptions
Tq,N,V_visibilityBehaviorOptions
initiallyHidden
TB,N,GisInitiallyHidden,V_initiallyHidden
T@"<AVPlaybackControlsVisibilityControllerDelegate>",W,V_delegate
showsViewPreferingStatusBarVisible
canHideViews
TB,N,V_canHideViews
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
popoverPresented
TB,N,GisPopoverPresented,V_popoverPresented
scrubbing
TB,N,GisScrubbing,V_scrubbing
viewForUserInteractionObservation
T@"UIView",W,N,V_viewForUserInteractionObservation
B24@?0@"UIView"8q16
v16@?0q8
opacity
v32@?0@"AVPlaybackControlsVisibilityController"8@16@"AVKeyValueChange"24
%@ %d
animationDuration
hideViewsTimerInterval
hideViewsQuicklyTimerInterval
volumeChangeHidePlaybackControlTimerInterval
state
Tq,N,V_state
activeTransition
T@"AVTransition",&,N,V_activeTransition
gestureTracker
T@"AVInteractiveTransitionGestureTracker",R,N,V_gestureTracker
completionSpeed
completionCurve
Tq,R,N
wantsInteractiveStart
Called %@ for transitionContext %@ with active transition %@ for transition context %@
Called %@ without a transitionContext!
%@: Unexpected transition state.
%@ called with an invalid state %ld
%@ state: %ld
Unexpected transitioning state.
Unexpected gesture kind.
%@ asked for an interactive dismissal when it couldn't begin, which should never happen.
%@ asked for an interactive presentation when it couldn't begin, which should never happen.
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
T@"AVPlayer",&,N,V_player
timing
T@"AVValueTiming",&,N,V_timing
minTiming
T@"AVValueTiming",&,N,V_minTiming
maxTiming
T@"AVValueTiming",&,N,V_maxTiming
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
seekToTimeInternal
T{?=qiIq},V_seekToTimeInternal
seekToTime
Td,N,V_seekToTime
metadata
T@"NSDictionary",&,N,V_metadata
contentChapters
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
hasProtectedContent
TB,N,V_hasProtectedContent
availableMetadataFormats
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
rateBeforeScrubBegan
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
cachedContentDuration
T{?=qiIq},N,V_cachedContentDuration
forwardPlaybackEndTime
T{?=qiIq},N,V_forwardPlaybackEndTime
reversePlaybackEndTime
T{?=qiIq},N,V_reversePlaybackEndTime
deviceBatteryChargingOrFull
TB,N,GisDeviceBatteryChargingOrFull,V_deviceBatteryChargingOrFull
shouldPreventIdleDisplaySleep
seekTimer
T@"NSObject<OS_dispatch_queue>",R,N
status
error
T@"NSError",R,N
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
HDMIOutput
Speaker
%@ maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%@ minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
%@ segmentDuration: %f
Modifying seekableTimeRange by: %f
%@ skipInterval: %f
%@ sampleBasedSeekTarget: %f
%@ stepByCount: %ld
v12@?0B8
Seek completed: %@
%@ time: %f toleranceBefore: %f toleranceAfter: %f
ScrubbingEnded
ScrubbingStarted
com.apple.motion.notserializable
%@ volume: %f
%@ playing: %d
Can play immediately: %d
Retrying play immediately.
v16@?0d8
Could not play immediatley, setting a play immediately retry block.
Calling playImmediatelyAtRate: %f
com.apple.videos
Setting prevent idle display sleep to NO
Setting prevent idle display sleep to YES
Ignoring rate change.
Rate changed to: %f
isPlaybackBufferEmpty: %d
Playback likely to keep up changed to: %@
Time control status = %ld
liveStreamEventModePossible: %d
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
Duration changed: %f
availableChapterLocales
q24@?0@"AVChapter"8@"AVChapter"16
commonMetadata
New asset: %@
New playerItem: %@
PlayerItemDidChange
allowsIdleSleepPrevention
Calls to -stopAllowingIdleSleepPrevention must be counterbalanced with calls to -startAllowingIdleSleepPrevention.
%@ queuePlayer: %d
audioFormats
isPiPAvailable
hasEnabledVideo
hasEnabledAudio
hasLiveStreamingContent
player.rate
player.externalPlaybackActive
player.currentItem.playbackLikelyToKeepUp
player.currentItem.playbackBufferEmpty
player.currentItem.loadedTimeRanges
player.currentItem.reversePlaybackEndTime
player.currentItem.forwardPlaybackEndTime
player.currentItem.seekableTimeRanges
player.timeControlStatus
player.currentItem.duration
player.currentItem
com.apple.avkit.seekQueue
v16@?0@"NSNotification"8
B8@?0
AVAudioSessionInterruptionTypeEnded: %@
AVAudioSessionInterruptionTypeBegan: %@
v32@?0{?=qiIq}8
player.currentItem.liveUpdateInterval
playingOnExternalScreen
player.externalPlaybackType
externalPlaybackActive
player.allowsExternalPlayback
seekableTimeRanges
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.status
player.currentItem.hasEnabledVideo
player.currentItem.hasVideo
player.currentItem.hasEnabledAudio
player.currentItem.presentationSize
player.muted
playing
player.currentItem.error
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
T@"AVStackView",R,N,V_contentView
visualEffectView
T@"UIVisualEffectView",R,N,V_visualEffectView
secondaryMaterialOverlayView
T@"UIView",&,N,V_secondaryMaterialOverlayView
secondaryMaterialOverlayViewConstraints
T@"NSArray",&,N,V_secondaryMaterialOverlayViewConstraints
axis
Tq,R,N,V_axis
contentLayoutMargins
T{UIEdgeInsets=dddd},N
drawsAsCircle
TB,N,V_drawsAsCircle
targetViewForSecondaryMaterialOverlay
T@"UIView",&,N,V_targetViewForSecondaryMaterialOverlay
externalPlaybackIndicatorView
T@"AVExternalPlaybackIndicatorView",R,N,V_externalPlaybackIndicatorView
unsupportedContentIndicatorView
T@"AVUnsupportedContentIndicatorView",R,N,V_unsupportedContentIndicatorView
audioOnlyIndicatorView
T@"AVAudioOnlyIndicatorView",R,N,V_audioOnlyIndicatorView
playerLayerView
T@"UIView",R,N,V_playerLayerView
needsInitialLayout
TB,N,V_needsInitialLayout
T@"<AVPlayerViewControllerContentViewDelegate>",W,N,V_delegate
isCoveringWindow
playerLayerAndContentOverlayContainerView
T@"UIView",R,N,V_playerLayerAndContentOverlayContainerView
T@"UIView",R,N,V_contentOverlayView
iAdPreRollView
T@"UIView",R,N,V_iAdPreRollView
statusBarBackgroundGradientView
T@"AVStatusBarBackgroundGradientView",R,N,V_statusBarBackgroundGradientView
T@"AVPlaybackControlsView",R,N,V_playbackControlsView
isDescendantOfNonPagingScrollView
v24@?0@"UIView"8@"UIView"16
Attempting to add a nil subview to %@
trackingStartTime
Td,N,V_trackingStartTime
wasLongPressed
TB,N,V_wasLongPressed
wasForcePressTriggered
TB,N,V_wasForcePressTriggered
horizontalTranslationOfLongPress
Td,N,V_horizontalTranslationOfLongPress
previousHorizontalPositionOfLongPress
T@"NSNumber",&,N,V_previousHorizontalPositionOfLongPress
force
Td,N,V_force
maximumForceSinceTrackingBegan
Td,N,V_maximumForceSinceTrackingBegan
longPressTimer
T@"NSTimer",W,N,V_longPressTimer
treatsForcePressAsLongPress
TB,N,V_treatsForcePressAsLongPress
forceThreshold
Td,N,V_forceThreshold
imageName
T@"NSString",C,N,V_imageName
fullScreenImageName
T@"NSString",C,N,V_fullScreenImageName
inlineImageName
T@"NSString",C,N,V_inlineImageName
fullScreenAlternateImageName
T@"NSString",C,N,V_fullScreenAlternateImageName
inlineAlternateImageName
T@"NSString",C,N,V_inlineAlternateImageName
micaPackage
T@"AVMicaPackage",&,N,V_micaPackage
disablesHighlightWhenLongPressed
TB,N,V_disablesHighlightWhenLongPressed
v16@?0@"NSTimer"8
%@ Non-Template Image Named %@
V:|-(>=10)-[imageView]-(>=10)-|
H:|-(>=10)-[imageView]-(>=10)-|
imageView
AudioOnlyIndicator
AirPlayGlyph
VolumeGlyph
mute
half
full
stateController
T@"CAStateController",R,N,V_stateController
packageName
T@"NSString",R,N,V_packageName
rootLayer
T@"CALayer",&,N,V_rootLayer
T@"NSString",C,N,V_state
targetSize
T{CGSize=dd},N,V_targetSize
glyphSizeWithinUnscaledBounds
T{CGSize=dd},N,V_glyphSizeWithinUnscaledBounds
v32@?0@"CAState"8Q16^B24
v32@?0@"CALayer"8Q16^B24
caml
classSubstitions
T@"NSDictionary",R,N
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKEventHandler
LKState
playbackControlsViewItems
T@"NSArray",R,N,V_playbackControlsViewItems
volumeBottomToTransportControlsTopConstraint
T@"NSLayoutConstraint",R,N,V_volumeBottomToTransportControlsTopConstraint
volumeTopToLayoutGuideTopConstraint
T@"NSLayoutConstraint",R,N,V_volumeTopToLayoutGuideTopConstraint
needsIntialLayout
TB,N,V_needsIntialLayout
TB,N,GisFullScreen,V_fullScreen
layoutMarginUpdatesSuspended
TB,N,GareLayoutMarginUpdatesSuspended,V_layoutMarginUpdatesSuspended
screenModeControls
T@"AVBackdropView",R,N,V_screenModeControls
volumeControls
T@"AVBackdropView",R,N,V_volumeControls
prominentPlayButtonBackdropView
T@"AVBackdropView",R,N,V_prominentPlayButtonBackdropView
miniPlayPauseButtonBackdropView
T@"AVBackdropView",R,N,V_miniPlayPauseButtonBackdropView
transportControlsContainerView
T@"AVView",R,N,V_transportControlsContainerView
doneButton
T@"AVButton",R,N,V_doneButton
fullScreenButton
T@"AVButton",R,N,V_fullScreenButton
pictureInPictureButton
T@"AVButton",R,N,V_pictureInPictureButton
volumeButton
T@"AVButton",R,N,V_volumeButton
volumeSlider
T@"AVVolumeSlider",R,N,V_volumeSlider
prominentPlayButton
T@"AVButton",R,N,V_prominentPlayButton
miniPlayPauseButton
T@"AVButton",R,N,V_miniPlayPauseButton
transportControlsView
T@"AVTransportControlsView",R,N,V_transportControlsView
T@"UIView",R,N,V_interactiveContentOverlayView
playbackControlsViewGroupName
T@"NSString",R,N,V_playbackControlsViewGroupName
Skipping %@ because layout margins updates are suspended.
%@ called when initial layout not needed already set.
B32@?0@"<AVPlaybackControlsViewItem>"8d16d24
Mute Toggle
Mini Play Pause Button
Central Play
Picture in Picture
Full Screen
v8@?0
leadingAnchor
T@"NSLayoutXAxisAnchor",R,N
trailingAnchor
leftAnchor
rightAnchor
topAnchor
T@"NSLayoutYAxisAnchor",R,N
bottomAnchor
widthAnchor
T@"NSLayoutDimension",R,N
heightAnchor
centerXAnchor
centerYAnchor
q24@?0@"AVButton"8@"AVButton"16
d56@?0{CGPoint=dd}8{CGRect={CGPoint=dd}{CGSize=dd}}24
UnsupportedContentIndicator
localizedDisplayName
shortLocalizedDisplayName
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
_ignoresTouches
_hitRectInsets
initWithFrame:
hitRect
pointInside:withEvent:
hitTest:withEvent:
hitRectInsets
setHitRectInsets:
ignoresTouches
setIgnoresTouches:
_log
_loggingLevel
_categories
_reusableLogQueue
_loggingQueue
init
logString:type:logLevel:
actuallyLogString:type:logLevel:
pushCategory:
popCategory:
.cxx_destruct
categories
setCategories:
reusableLogQueue
setReusableLogQueue:
loggingQueue
setLoggingQueue:
lastObject
count
removeLastObject
stringWithFormat:
addObject:
setObject:forKeyedSubscript:
UTF8String
objectForKeyedSubscript:
integerValue
containsObject:
allKeys
environment
processInfo
alloc
sharedLogging
substringFromIndex:
initWithFormat:arguments:
rangeOfString:
substringToIndex:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_playerController
_pictureInPicturePlayerLayerView
dealloc
playerLayer
playerController
setPlayerController:
videoGravity
setVideoGravity:
isReadyForDisplay
videoBounds
isVideoScaled
setVideoScaled:
pixelBufferAttributes
setPixelBufferAttributes:
pictureInPicturePlayerLayerView
startRoutingVideoToPictureInPicturePlayerLayerView
stopRoutingVideoToPictureInPicturePlayerLayerView
didMoveToWindow
window
setPlaceholderContentLayerDuringPIPMode:
detachPlayerLayer
leavePIPMode
enterPIPModeRedirectingVideoToLayer:
attachPlayerLayer
traitCollection
_simplePlayerLayerView
didChangeValueForKey:
removeFromSuperview
willChangeValueForKey:
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
layer
layerClass
keyPathsForValuesAffectingPlayerLayer
setWithObjects:
videoRect
isEqualToString:
keyPathsForValuesAffectingVideoLayerGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingVideoScaled
keyPathsForValuesAffectingPixelBufferAttributes
setWithObject:
_previousTouchLocationInView
_feedbackBehavior
_shouldRecoverFromPrecisionScrubbingIfNeeded
_collapsed
_included
_hasAlternateAppearance
_hasFullScreenAppearance
_estimatedFrameRate
_rate
_loadedTimeRanges
_scrubbingSpeed
_resolution
_loadedTrackOverlayView
_completedTrackOverlayView
_currentThumbView
_extrinsicContentSize
setLoadedTimeRanges:
clampedEstimatedFrameRate
localizedScrubbingSpeedName
setCurrentThumbView:
isCollapsedOrExcluded
setIncluded:
setCollapsed:
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
thumbRectForBounds:trackRect:value:
trackRectForBounds:
createThumbView
setEnabled:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
layoutSubviews
loadedTimeRanges
scrubbingSpeed
setScrubbingSpeed:
estimatedFrameRate
setEstimatedFrameRate:
resolution
setResolution:
rate
setRate:
shouldRecoverFromPrecisionScrubbingIfNeeded
setShouldRecoverFromPrecisionScrubbingIfNeeded:
loadedTrackOverlayView
completedTrackOverlayView
currentThumbView
extrinsicContentSize
setExtrinsicContentSize:
isCollapsed
isIncluded
hasAlternateAppearance
setHasAlternateAppearance:
hasFullScreenAppearance
setHasFullScreenAppearance:
setAlpha:
insertSubview:above:
_setCornerRadius:
_cornerRadius
setHidden:
frame
_maxTrackView
floatValue
objectAtIndexedSubscript:
setFrame:
convertRect:fromView:
bounds
_minTrackView
sendActionsForControlEvents:
setValue:
selectionChanged
displayScale
center
locationInView:
minimumValue
maximumValue
prepare
_trackEnabled
_thumbHitEdgeInsets
convertPoint:fromView:
setBackgroundColor:
whiteColor
setNeedsLayout
copy
initWithImage:
setThumbTintColor:
setThumbImage:forState:
setMaximumTrackImage:forState:
setMinimumTrackImage:forState:
imageWithRenderingMode:
resizableImageWithCapInsets:
fillRect:
setFill
imageWithActions:
initWithSize:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
setSemanticContentAttribute:
keyPathsForValuesAffectingLocalizedScrubbingSpeedName
_image
_imageBlock
_startTime
_duration
_number
_title
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
hash
isEqual:
startTime
duration
number
title
image
initWithCGImage:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
countByEnumeratingWithState:objects:count:
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
languageCompare:
sortedArrayUsingComparator:
array
isAC3Only
arrayWithArray:
arrayWithObjects:count:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
boolValue
isCC
extendedLanguageTag
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
selectMediaOption:inMediaSelectionGroup:
hasMediaSelectionOptions
currentAudioMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
_selectedMediaOptionWithMediaCharacteristic:
setCurrentAudioMediaSelectionOption:
currentLegibleMediaSelectionOption
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
toggleCaptions
reloadOptions
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
mediaType
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
canonicalLanguageIdentifierFromString:
locale
displayName
localizedCaseInsensitiveCompare:
sharedInstance
audioFormats
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
currentItem
asset
mediaSelectionGroupForMediaCharacteristic:
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
setSavedCaptionAppearanceDisplayType:
savedCaptionAppearanceDisplayType
assetCache
isPlayableOffline
mediaSelectionOptionsInMediaSelectionGroup:
audioMediaSelectionOptions
audioOptions
legibleOptions
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
_playerMuted
_thumbView
setPlayerMuted:
intrinsicContentSize
setTracking:
isPlayerMuted
thumbView
setThumbView:
animateWithDuration:delay:options:animations:completion:
layoutIfNeeded
isHiddenOrHasHiddenAncestor
_setIsOffScreen:
invalidateIntrinsicContentSize
_trackedTouches
initWithTarget:action:
canBePreventedByGestureRecognizer:
canPreventGestureRecognizer:
shouldRequireFailureOfGestureRecognizer:
shouldBeRequiredToFailByGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEstimatedPropertiesUpdated:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_touchesEndedOrCancelled:
minusSet:
unionSet:
setCancelsTouchesInView:
_clientPrefersStatusBarHidden
_statusBarHiddenObserver
start
restoreClientPreference
setStatusBarHidden:
_startObservingStatusBarHiddenIfNeeded
_stopObservingStatusBarHiddenIfNeeded
statusBarHiddenObserver
setStatusBarHiddenObserver:
clientPrefersStatusBarHidden
setClientPrefersStatusBarHidden:
removeObserver:name:object:
defaultCenter
addObserverForName:object:queue:usingBlock:
userInfo
mainQueue
isStatusBarHidden
_pinchToDismissEnabled
_pinchToPresentEnabled
_panToDismissEnabled
_activeGestureType
_rotation
_delegate
_panGestureRecognizer
_swipeDownGestureRecognizer
_pinchGestureRecognizer
_rotationGestureRecognizer
_recognizers
_locationOfInitialPinchInWindow
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
debugDescription
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
initWithDelegate:
addRecognizersToView:
isTracking
transitionDidBegin
_handlePinchGesture:
_handleRotationGesture:
_handlePanGesture:
_beginTracking:
_finish
_cancel
_reset
activeGestureType
setActiveGestureType:
isPinchToDismissEnabled
setPinchToDismissEnabled:
isPinchToPresentEnabled
setPinchToPresentEnabled:
isPanToDismissEnabled
setPanToDismissEnabled:
locationOfInitialPinchInWindow
setLocationOfInitialPinchInWindow:
rotation
setRotation:
delegate
panGestureRecognizer
swipeDownGestureRecognizer
pinchGestureRecognizer
rotationGestureRecognizer
recognizers
velocityInView:
translationInView:
view
numberOfTouches
scale
velocity
setScale:
setTranslation:inView:
addGestureRecognizer:
setDirection:
setMaximumNumberOfTouches:
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_enabled
_identifier
_shouldOwnNowPlayingInfo
_requiresLinearPlayback
isEnabled
setRequiresLinearPlayback:
observeValueForKeyPath:ofObject:change:context:
_ownsNowPlayingInfo
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo
_updateRegisteredRemoteCommandEnabledStatesWithPlayerController:
_handleRemoteCommandEvent:
requiresLinearPlayback
positionTime
changePlaybackPositionCommand
playbackRate
changePlaybackRateCommand
seekBackwardCommand
type
seekForwardCommand
skipBackwardCommand
skipForwardCommand
previousTrackCommand
nextTrackCommand
togglePlayPauseCommand
postNotificationName:object:
stopCommand
playCommand
pauseCommand
sharedCommandCenter
command
setNowPlayingInfo:
numberWithDouble:
initWithBoundsSize:requestHandler:
size
dictionary
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
valueForKey:
nowPlayingInfo
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
removeObserver:
removeTarget:action:
addTarget:action:
object
UUID
_showsGradientWhenUnderlappingStatusBar
_gradientOpacity
setGradientOpacity:
setShowsGradientWhenUnderlappingStatusBar:
safeAreaInsetsDidChange
_shouldAnimatePropertyWithKey:
_updateGradientOpacityIfNeeded
showsGradientWhenUnderlappingStatusBar
gradientOpacity
statusBar
statusBarFrame
mainScreen
screen
setCompositingFilter:
filterWithType:
setLocations:
numberWithInt:
setColors:
CGColor
colorWithWhite:alpha:
setUserInteractionEnabled:
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
_setIdleTimerDisabled:forReason:
_playerShouldAutoplay
_showsPlaybackControls
_canChangeStatusBarHidden
_videoGravity
_allowsPictureInPicturePlayback
_pixelBufferAttributes
_nowPlayingInfoController
_pictureInPictureController
_mediaSelectionPopoverPresentationController
_transitionController
_playbackControlsVisibilityController
_playbackControlsController
_appBasedStatusBarAppearanceController
_volumeController
_playerViewControllerView
_playerLayerView
_screenDidConnectObserver
_screenDidDisconnectObserver
_screenModeDidChangeObserver
_activeAudioRouteDidChangeObserver
_nowPlayingControllerDidReceiveStopCommandEventObserver
_applicationSuspendedObserver
_playerControllerPlaybackDidEndObserver
_loadingIndicatorTimer
_playbackControlsViewControllerShouldShowLoadingIndicator
_playbackControlsViewControllerPictureInPictureButtonEnabled
_transitionFromFullScreenOrDismissViewControllerWhenEnteringBackgroundAfterPictureInPictureStart
_delegateRespondsTo
_showsExitFullScreenButton
_entersFullScreenWhenPlaybackBegins
_exitsFullScreenWhenPlaybackEnds
_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
_fullScreenViewController
_secondScreenWindow
_playbackTargetScreen
_finishPreparingForInteractiveDismissalHandler
_interactiveDismissalCompletionHandler
transitioningDelegateForFullScreenViewController:
modalPresentationStyleForFullScreenViewController:presentingViewController:
fullScreenViewControllerWillBeginFullScreenPresentation:
viewForFullScreenViewController:
fullScreenViewControllerDidEndFullScreenPresentation:wasInteractive:
prefersStatusBarHiddenForFullScreenViewController:
keyCommandResponderForFullScreenViewController:
playbackControlsVisibilityController:updateStatusBarAppearanceUsingAnimator:
playbackControlsVisibilityControllerDidChangeViewVisibility:
playbackControlsVisibilityController:animateAlongsideVisibilityAnimations:
playbackControlsVisibilityControllerWillExitAutoplayPhase:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
initWithNibName:bundle:
initWithCoder:
encodeWithCoder:
player
setPlayer:
showsPlaybackControls
setShowsPlaybackControls:
contentOverlayView
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
setDelegate:
updatesNowPlayingInfoCenter
setUpdatesNowPlayingInfoCenter:
interactiveContentOverlayView
canHidePlaybackControls
setCanHidePlaybackControls:
canHideInteractiveContentOverlayView
setCanHideInteractiveContentOverlayView:
preferredUnobscuredArea
setPreferredUnobscuredArea:
setEntersFullScreenWhenPlaybackBegins:
enterAutoplayPhase
flashAutoplayControls
playbackControlsController
setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:
setView:
loadView
viewDidLoad
viewWillAppear:
viewDidAppear:
viewDidDisappear:
didMoveToParentViewController:
preferredWhitePointAdaptivityStyle
prefersStatusBarHidden
preferredStatusBarStyle
_ignoreAppSupportedOrientations
canBecomeFirstResponder
keyCommands
_handleExitFullScreenKeyCommand:
_handlePlayPauseKeyCommand:
_handleSkipBack15SecondsKeyCommand:
_handleSkipAhead15SecondsKeyCommand:
_handleShowNextFrameKeyCommand:
_handleGoToBeginningKeyCommand:
_handleShowPreviousFrameKeyCommand:
_handleVolumeUpKeyCommand:
_handleVolumeDownKeyCommand:
_handleRewindKeyDownCommand:
_handleRewindKeyUpCommand:
_handleFastForwardKeyDownCommand:
_handleFastForwardKeyUpCommand:
_fireLoadingIndicatorTimer:
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
_isAudioOnlyContent
_updateAudioOnlyIndicatorView
_updateExternalPlaybackIndicatorView
_updatePlayerLayerViewAndContentOverlayView
_updatePlayerLayerViewAndContentOverlayViewExcludingScreen:
_updatePlaybackControlsViewController
_handleDoubleTapGesture:
_handleSingleTapGesture:
_handleDoubleDoubleTapGesture:
_loadPlaybackControlsControllersIfNeeded
setPlaybackTargetScreen:
_isDescendantOfRootViewController
_transitionFromFullScreenWithReason:animated:completionHandler:
_canEnterFullScreen
_transitionToFullScreenAnimated:completionHandler:
_transitionFromFullScreenAnimated:completionHandler:
_togglePictureInPicture
_mediaSelectionDoneButtonTapped:
_mediaSelectionViewController
_isTransitioningToOrFromFullScreen
_modalPresentationStyleIsFullScreen
entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
setExitsFullScreenWhenPlaybackEnds:
fullScreenViewController
setFullScreenViewController:
secondScreenWindow
setSecondScreenWindow:
playbackTargetScreen
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
setFinishPreparingForInteractiveDismissalHandler:
interactiveDismissalCompletionHandler
setInteractiveDismissalCompletionHandler:
isBeingDismissed
contentView
shouldAutorotate
userInterfaceIdiom
_supportedInterfaceOrientationsForWindow:
playerViewControllerWillExitAutoplayPhase:
performWithoutAnimation:
addAnimations:
addCompletion:
animateAlongsideTransition:completion:
transitionCoordinator
setNeedsStatusBarAppearanceUpdate
isPresentedFullScreen
isPresentingFullScreenFromInline
playbackControlsVisibilityController
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
animateWithDuration:animations:
playerViewControllerDidStopPictureInPicture:
playerViewControllerWillStopPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
dismissViewControllerAnimated:completion:
presentingViewController
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
pictureInPictureWasStartedWhenEnteringBackground
playerViewControllerDidStartPictureInPicture:
playerViewControllerWillStartPictureInPicture:
presentedViewController
modalPresentationStyle
isBeingPresented
firstObject
childViewControllers
stopPictureInPicture
startPictureInPicture
isPictureInPictureActive
isPictureInPicturePossible
isCancelled
presentViewController:animated:completion:
_viewControllerForFullScreenPresentationFromView:
playerViewController:shouldExitFullScreenWithReason:
rootViewController
keyWindow
viewIfLoaded
parentViewController
setRootViewController:
setAutoresizingMask:
setScreen:
setOverscanCompensation:
showsExitFullScreenButton
reverseObjectEnumerator
screens
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setVolumeValue:
volumeValue
togglePlayback:
doneButtonTapped:
setDiscoverabilityTitle:
keyCommandWithInput:modifierFlags:action:upAction:
mutableCopy
keyCommandWithInput:modifierFlags:action:discoverabilityTitle:
statusBarStyle
windowLevel
isDoubleHeight
isNavigationBarHidden
navigationController
setTransitioningDelegate:
transitioningDelegate
setNumberOfTouchesRequired:
requireGestureRecognizerToFail:
setNumberOfTapsRequired:
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
sharedAVSystemController
blackColor
initWithPlayerLayerView:
isViewLoaded
loadViewIfNeeded
convertRect:toView:
commit
setAnimationTimingFunction:
functionWithName:
begin
raise:format:
dispatchQueue
encodeInteger:forKey:
encodeBool:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
mainBundle
decodeObjectForKey:
containsValueForKey:
keyPathsForValuesAffectingPlayer
keyPathsForValuesAffectingVideoGravity
iAdPrerollView
superview
needsLayout
isPictureInPictureSuspended
setShowsExitFullScreenButton:
enterFullScreenAnimated:completionHandler:
exitFullScreenAnimated:completionHandler:
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingPictureInPictureActive
keyPathsForValuesAffectingPictureInPictureSuspended
keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground
horizontalSizeClass
verticalSizeClass
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
setSourceView:
_setIgnoreAppSupportedOrientations:
scaleButtonTapped:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
presentRoutingViewController:
canBeginInteractivePresentationTransition
interfaceOrientation
canBeginInteractiveDismissalTransition
beginInteractivePresentationTransition
beginInteractiveDismissalTransition
prepareForFinishingInteractiveTransition:
_presentationBackgroundView
_contentView
initWithDelegate:presentingViewController:sourceView:
fullScreenPresentationWillBegin
fullScreenPresentationDidEnd:
targetForAction:withSender:
modalPresentationCapturesStatusBarAppearance
presentationBackgroundView
canChangeStatusBarHidden
setCanChangeStatusBarHidden:
setContentView:
setModalPresentationStyle:
_activeTintColor
_routePickerButton
_airPlayActive
_routePickerViewController
_routePickerButtonHidden
_routePickerButtonStyle
activeTintColor
setActiveTintColor:
_createOrUpdateRoutePickerButton
_routePickerButtonTapped:
_registerNotifications
_unregisterNotifications
_outputContextDevicesDidChange:
_defaultActiveTintColor
isRoutePickerButtonHidden
routePickerButtonStyle
setRoutePickerButtonStyle:
blueColor
setTintColor:
addObserver:selector:name:object:
routePickerViewWillBeginPresentingRoutes:
setPriority:
constraintEqualToAnchor:
setImage:forState:
addTarget:action:forControlEvents:
buttonWithType:
imageNamed:inBundle:compatibleWithTraitCollection:
routePickerViewDidEndPresentingRoutes:
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
viewWillResize
viewDidResize
actionButtonTapped
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
initWithPictureInPicturePlayerLayerView:
keyPathsForValuesAffectingShouldShowAlternateActionButtonImage
keyPathsForValuesAffectingShouldShowLoadingIndicator
_imageView
_titleLabel
_subtitleLabel
_containerView
_textLabelsContainer
setTitleString:subtitleString:
setText:
setSpacing:
layoutFrame
layoutMarginsGuide
constraintEqualToAnchor:multiplier:
addObjectsFromArray:
setNumberOfLines:
setContentMode:
_flatImageWithColor:
imageNamed:inBundle:
setBaselineRelativeArrangement:
setAxis:
setAlignment:
setTextColor:
setTextAlignment:
setLineBreakMode:
setFont:
systemFontOfSize:
mutableCopyWithZone:
classForCoder
_timing
anchorValue
anchorTimeStamp
encodeDouble:forKey:
initWithAnchorValue:anchorTimeStamp:rate:
decodeDoubleForKey:
initWithValueTiming:
allocWithZone:
setAnchorValue:
setAnchorTimeStamp:
_value
_timeStamp
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
_controllerIvarAccessQueue
_proxyObserversByTokens
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
stopObserving
removeAllObjects
allValues
removeObjectForKey:
token
startObserving
initWithObservedObject:observer:keyPaths:retainingObservedObject:options:changesBlock:
isInitialValue
value
oldValue
initWithChanges:keyPath:observationToken:
_changes
_keyPath
_observationToken
objectOrNilFor:
object:as:
keyPath
observationToken
null
_retainedObservedObject
_unsafeUnretainedObservedObject
_context
_proxyObserverIvarAccessQueue
_token
_options
_observer
_keyPaths
_changesBlock
observedObject
_handleValueChangeForKeyPath:ofObject:change:context:
options
observer
keyPaths
changesBlock
isMainThread
globallyUniqueString
setWithArray:
_selectedAudioMediaSelectionOption
_selectedLegibleMediaSelectionOption
_playbackShouldResumeWhenDismissed
initWithStyle:
_isSelectedOrCurrentAudioMediaSelectionOption:
_isSelectedOrCurrentLegibleMediaSelectionOption:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:didSelectRowAtIndexPath:
playbackShouldResumeWhenDismissed
setPlaybackShouldResumeWhenDismissed:
deselectRowAtIndexPath:animated:
setAccessoryType:
indexPathForCell:
visibleCells
section
representedObject
cellForRowAtIndexPath:
textLabel
clearColor
setRepresentedObject:
dequeueReusableCellWithIdentifier:forIndexPath:
flashScrollIndicators
tableView
notifyWhenInteractionChangesUsingBlock:
initiallyInteractive
indexPathsForSelectedRows
reloadData
numberOfSections
setEstimatedRowHeight:
lineHeight
preferredFontForTextStyle:
registerClass:forCellReuseIdentifier:
_representedObject
setBackgroundView:
initWithEffect:
effectWithStyle:
setTitle:
_mediaSelectionTableViewController
initWithPlayerController:doneButtonTarget:doneButtonAction:
mediaSelectionTableViewController
setModalPresentationCapturesStatusBarAppearance:
setRightBarButtonItem:
initWithBarButtonSystemItem:target:action:
navigationItem
initWithRootViewController:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
_playerLayer
_pictureInPictureProxy
_pictureInPictureViewController
_fullScreenCheckTimer
_isPlaying
_isFullScreen
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
initWithPlayerLayer:
stopPictureInPictureEvenWhenInBackground
playerLayerLayoutDidChange
_window
_playerLayerVideoRectInScreen
_checkIsFullScreenAndUpdatePictureInPictureShouldStartWhenEnteringBackground
_updatePictureInPictureShouldStartWhenEnteringBackground
_updatePlaybackProgress
preferredContentSizeDidChangeForViewController
setPreferredContentSize:
stopPictureInPictureAndRestoreUserInterface:
setPlaybackProgress:playbackRate:
setPictureInPictureShouldStartWhenEnteringBackground:
convertRect:fromLayer:
settings
_scene
convertRect:toLayer:
superlayer
applicationState
sharedApplication
isPIPModeEnabled
isPictureInPictureSupported
initWithControlsStyle:viewController:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
_managesContentViewLayout
_primaryScreen
initWithContentView:
primaryScreen
setManagesContentViewLayout:
willMoveToWindow:
setClipsToBounds:
managesContentViewLayout
setPrimaryScreen:
setTransform:
isDescendantOfView:
loadingSpinner
stopAnimating
initWithActivityIndicatorStyle:
startAnimating
routePickerExtensionWantsDismissal
viewServiceDidTerminateWithError:
createViewControllerWithExtensionIdentifier:completion:
exportedInterface
serviceViewControllerInterface
_newExtensionWithIdentifier:
extensionWithIdentifier:error:
interfaceWithProtocol:
instantiateViewControllerWithInputItems:connectionHandler:
_routePickerHostViewController
_cancelButton
_dismissalHandler
routePickerHostViewControllerWantsDismissal:
_cancelButtonPressed:
_dismiss
dismissalHandler
setDismissalHandler:
setTitle:forState:
addChildViewController:
_attributedText
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
initWithTraitCollection:opaque:
layoutSublayers
textBoundingRectWhenDrawnInRect:
boundingRectWithSize:options:context:
setBounds:
setPosition:
isHidden
setWrapped:
setTruncationMode:
setString:
setAlignmentMode:
setForegroundColor:
setFontSize:
addSublayer:
setContentsScale:
setContentsGravity:
setContents:
CGImage
ascender
initWithString:attributes:
_backdropView
addSubview:applyingMaterialStyle:tintEffectStyle:
_isContainedInOverlappingBackgroundView
backdropView
setBackdropView:
sendSubviewToBack:
insertSubview:atIndex:
_interval
_currentTime
_timer
_minTime
_maxTime
interval
setInterval:
currentTime
setCurrentTime:
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
encodeObject:forKey:
automaticallyNotifiesObserversOfCurrentTime
CMTimeRangeValue
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
targetTime
setTargetTime:
transitionWillBegin
animateAlongsideNonInteractiveTransitionAnimation
containerView
playerViewController
_wasInitiallyInteractive
_transitionContext
_playerViewController
_backgroundView
_currentAnimator
initWithTransitionContext:playerViewController:
toView
fromView
toViewController
fromViewController
isInteractive
pauseInteractiveTransition
completeTransition:
initialFrameForFromViewController
finalFrameForFromViewController
initialFrameForToViewController
finalFrameForToViewController
finishInteractiveTransition
cancelInteractiveTransition
animateNonInteractiveTransition
frameForPlayerViewControllerInContainerView
updateWithPercentComplete:translation:rotation:
animateAlongsideInteractiveTransitionAnimationForFinishing
animateAlongsideInteractiveTransitionAnimationForCancelling
transitionContext
backgroundView
currentAnimator
setCurrentAnimator:
wasInitiallyInteractive
setWasInitiallyInteractive:
startAnimation
initWithDuration:curve:animations:
finalFrameForViewController:
initialFrameForViewController:
viewControllerForKey:
viewForKey:
isAnimated
transitionWithTransitionContext:playerViewController:
transformForPercentComplete:fromScale:toScale:rotation:translation:
prefersBlackBarsDuringTransition
shouldRemovePresentingView
_setRotatableViewOrientation:duration:
_prefersBlackBarsDuringTransition
setPrefersBlackBarsDuringTransition:
attemptRotationToDeviceOrientation
shadowOffset
shadowBlurRadius
shadowColor
drawAtPoint:
imageWithEtchedBorderOfColor:radius:
imageWithShadow:
imageWithEdgeInsets:
imageWithCGImage:scale:orientation:
_queue
_invalidated
initWithTimeInterval:queue:block:repeats:
invalidate
_routingViewController
_preferredWidthConstraint
_routePickerDelegate
routingViewController:didPickRoute:
routingViewControllerDidUpdateContents:
routingViewControllerDidShowAirPlayDebugScreen:
initWithTraitCollection:delegate:
shouldDismiss
preferredContentSizeForRoutingViewController
routingViewController
setRoutingViewController:
preferredWidthConstraint
setPreferredWidthConstraint:
routePickerDelegate
setRoutePickerDelegate:
setConstant:
navigationBar
style
preferredContentSize
setActive:
constraintGreaterThanOrEqualToConstant:
isZoomBouncing
isDecelerating
_tableView
setNavigationBarHidden:
_doubleRowLayoutEnabled
_showsLoadingIndicator
_showsLiveStreamingControls
_liveStreamingControlsIncludeScrubber
_backdropViewNeedsLayout
_scrubberValueWhenScrubInstructionsTimerBegan
_minimumRequiredWidth
_scrubber
_elapsedTimeLabel
_timeRemainingLabel
_standardPlayPauseButton
_skipForwardButton
_skipBackButton
_mediaSelectionButton
_scrubInstructionsBackdrop
_flexibleWidthView
_loadingSpinner
_doubleRowLayoutConstraints
_scrubberInstructionsDoubleRowActiveConstraint
_liveBroadcastLabel
_liveBroadcastScrubberLabel
_loadingIndicatorTextLabel
_scrubInstructionsContainer
_scrubInstructionsLabel
_scrubInstructionsBackdropLabel
_scrubInstructionsTimer
_singleRowViews
buttonChangedAvailability:
setDoubleRowLayoutEnabled:
setShowsLoadingIndicator:
setShowsLiveStreamingControls:
setLiveStreamingControlsIncludeScrubber:
traitCollectionDidChange:
beginScrubbing:
scrubberValueChanged:
endScrubbing:
_ensureLayoutConstraints
_updateFontSizes
_showScrubInstructions
_updateScrubInstructionsLabelsText
_scrubInstructionsAttributedText
isDoubleRowLayoutEnabled
showsLoadingIndicator
showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
minimumRequiredWidth
scrubber
elapsedTimeLabel
timeRemainingLabel
standardPlayPauseButton
skipForwardButton
skipBackButton
routePickerButton
mediaSelectionButton
scrubInstructionsBackdrop
setScrubInstructionsBackdrop:
flexibleWidthView
doubleRowLayoutConstraints
scrubberInstructionsDoubleRowActiveConstraint
liveBroadcastLabel
liveBroadcastScrubberLabel
loadingIndicatorTextLabel
scrubInstructionsContainer
scrubInstructionsLabel
scrubInstructionsBackdropLabel
scrubInstructionsTimer
setScrubInstructionsTimer:
scrubberValueWhenScrubInstructionsTimerBegan
setScrubberValueWhenScrubInstructionsTimerBegan:
singleRowViews
backdropViewNeedsLayout
setBackdropViewNeedsLayout:
appendAttributedString:
stringByAppendingString:
systemFontOfSize:weight:
pointSize
preferredFontForTextStyle:compatibleWithTraitCollection:
setAttributedText:
isEqualToAttributedString:
attributedText
monospacedDigitSystemFontOfSize:weight:
constraintGreaterThanOrEqualToAnchor:constant:
firstBaselineAnchor
imageView
lastBaselineAnchor
constraintEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:
translatesAutoresizingMaskIntoConstraints
alpha
setTolerance:
deactivateConstraints:
bringSubviewToFront:
setAccessibilityIdentifier:
_suspended
_playerViewControllerIsPresentingFullScreen
_playerViewControllerIsPresentedFullScreen
_playerViewControllerHasInvalidViewControllerHierarchy
_hasPlaybackBegun
_canHideInteractiveContentOverlayView
_showsPictureInPictureButton
_showsFullScreenButton
_showsVolumeSlider
_canExcludeProminentPlayButton
_coveringWindow
_pickedRouteHasVolumeControl
_scrubberEnabled
_hasPlaybackBegunSinceEnteringInline
_hasSeekableLiveStreamingContent
_keyValueObservationController
_preferredUnobscuredArea
_playbackControlsView
_timeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_routePickerAlertController
_AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
_MPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver
_MPVolumeViewRoutePickerPresentedNotificationObserver
playerViewControllerContentViewWillLayoutSubviews:
playerViewControllerContentViewVideoGravity
playerViewControllerContentViewContentDimensions
routePickerContainerViewControllerDidFinish:
volumeController:volumeValueDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:mutedStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
transportControlsNeedsLayoutIfNeeded:
transportControls:scrubberDidBeginScrubbing:
transportControls:scrubberDidScrub:
transportControls:scrubberDidEndScrubbing:
initWithPlayerViewController:
resumeUpdates
stopUpdates
setSuspended:
isFullScreen
includesFullScreenButton
showsRoutePickerButton
showsProminentPlayButton
prominentPlayButtonCanShowPauseGlyph
showsTransportControls
shouldEnterFullScreenWhenPlaybackBegins
showsMediaSelectionButton
minimumTime
maximumTime
actuallyCanSeek
showsSkipButtons
isScrubberEnabled
playbackControlsViewDidLoad:
playbackControlsVisibilityDidChange
_updateVolumeControlsVisibility:
_updateVolumeControlsShouldShowVolumeSliderIfPossible:
_volumeButtonMicaPackageState
skipButtonTouchUpInside:
skipButtonLongPressTriggered:
skipButtonLongPressEnded:
skipButtonForcePressChanged:
volumeButtonLongPressed:
toggleMutedButtonTapped:
routePickerButtonTapped:
keyValueObservationController
_bindInclusionOfControlItem:toKeyPath:
_observeBoolForKeyPath:observationHandler:
_seekByTimeInterval:toleranceBefore:toleranceAfter:
_startVisibilityControllerManagementOfViewVisibilityHidingIfInitiallyPlaying:
_stopVisibilityControllerManagementOfViewVisibilityIfNeeded
_updateScrubberAndTimeLabels
_startOrStopHidingViewsQuicklyWhenPlaybackBegins
isSuspended
playerViewControllerIsPresentingFullScreen
setPlayerViewControllerIsPresentingFullScreen:
playerViewControllerIsPresentedFullScreen
setPlayerViewControllerIsPresentedFullScreen:
playerViewControllerHasInvalidViewControllerHierarchy
setPlayerViewControllerHasInvalidViewControllerHierarchy:
hasPlaybackBegun
setHasPlaybackBegun:
showsPictureInPictureButton
setShowsPictureInPictureButton:
showsFullScreenButton
setShowsFullScreenButton:
pictureInPictureController
setPictureInPictureController:
playbackControlsView
setPlaybackControlsView:
timeResolver
setTimeResolver:
elapsedTimeFormatter
remainingTimeFormatter
routePickerAlertController
setRoutePickerAlertController:
volumeController
setVolumeController:
AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
setAVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver:
MPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver
setMPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver:
MPVolumeViewRoutePickerPresentedNotificationObserver
setMPVolumeViewRoutePickerPresentedNotificationObserver:
showsVolumeSlider
setShowsVolumeSlider:
canExcludeProminentPlayButton
setCanExcludeProminentPlayButton:
isCoveringWindow
setCoveringWindow:
pickedRouteHasVolumeControl
setPickedRouteHasVolumeControl:
setScrubberEnabled:
hasPlaybackBegunSinceEnteringInline
setHasPlaybackBegunSinceEnteringInline:
hasSeekableLiveStreamingContent
setHasSeekableLiveStreamingContent:
setValue:animated:
setMaximumValue:
setMinimumValue:
stringFromSeconds:
setFormatTemplate:
formatTemplate
reason
valueForKeyPath:
_addActionWithTitle:style:handler:shouldDismissHandler:
setContentViewController:
alertControllerWithTitle:message:preferredStyle:
runningPropertyAnimatorWithDuration:delay:options:animations:completion:
setStyle:
keyPathsForValuesAffectingFullScreen
keyPathsForValuesAffectingIncludesFullScreenButton
keyPathsForValuesAffectingShowsRoutePickerButton
keyPathsForValuesAffectingShowsProminentPlayButton
keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph
keyPathsForValuesAffectingShowsTransportControls
keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins
keyPathsForValuesAffectingShowsMediaSelectionButton
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinimumTime
keyPathsForValuesAffectingMaximumTime
keyPathsForValuesAffectingActuallyCanSeek
keyPathsForValuesAffectingShowsSkipButtons
keyPathsForValuesAffectingScrubberEnabled
_initiallyHidden
_controls
_visibilityBehaviorOptions
controls
setControls:
visibilityBehaviorOptions
setVisibilityBehaviorOptions:
isInitiallyHidden
setInitiallyHidden:
_visibilityAnimator
_viewsAndViewInfos
_userInteractionObserverGestureRecognizer
_animationDuration
_visibilityNeedsUpdate
_prefersRegularViewsVisible
_prefersViewsVisibleTimerInterval
_prefersViewsVisibleTimerIntervalForQuicklyHiding
_prefersRegularViewsVisibleTimer
_prefersViewsShownForVolumeChangeVisible
_prefersViewsShownForVolumeChangeVisibleTimerInterval
_prefersViewsShownForVolumeChangeVisibleTimer
_hidesViewQuicklyWhenPlaybackBegins
_popoverPresented
_pictureInPictureActive
_scrubbing
_transitionInProgress
_playbackWasPausedAndVisibilityNotToggledAfterPausing
_inAutoplayPhase
_temporarilyAvoidAnimationsWhenStartingToControlViewVisibility
_canHideViews
_viewForUserInteractionObservation
activeAudioRouteOrSystemVolumeDidChange
startHidingViewQuicklyWhenPlaybackBegins
stopHidingViewQuicklyWhenPlaybackBegins
showsViewPreferingStatusBarVisible
temporarilyAvoidAnimationsWhenStartingToControlViewVisibility
beginTransitionAndHideViewsAnimated:completionHandler:
endTransition
toggleVisibility
startControllingVisibilityOfView:visibilityBehaviorOptions:
stopControllingVisibilityOfView:
setViewForUserInteractionObservation:
_startControllingVisibilityIfNeeded
_updateVisibilityWithCompletionHandler:
_setVisibilityNeedsUpdate
_updateControlViewVisibilityIfNeeded
_exitAutoplayPhaseIfNeeded
_viewsPassingTest:
_hasViewsThatCanBeShown
_hasViewsThatCanBeHidden
_handleUserInteractionObservationRecognizer:
_showViewsShownForVolumeChange
_showViewsShownForVolumeChangeAndHideAfterDelay
_startTimerToHideViewsShownForVolumeChange
_stopTimerToHideViewsShownForVolumeChangeIfPlaying
_hideViewsShownForVolumeChange
_showRegularViews
_showRegularViewsAndHideAfterDelay
_showRegularViewsAndHideAfterDelayIfPlaying
_startTimerToHideRegularViewsIfPlaying
_startTimerToHideRegularViews
_startTimerToHideRegularViewsAfterDelay:ifPlaying:
_stopTimerToHideRegularControlsIfPlaying
_hideRegularViews
_showInitiallyHiddenViews
_userIsInteractingWithViews
canHideViews
setCanHideViews:
setPictureInPictureActive:
isPopoverPresented
setPopoverPresented:
isScrubbing
setScrubbing:
viewForUserInteractionObservation
keyEnumerator
addTimer:forMode:
currentRunLoop
timerWithTimeInterval:repeats:block:
finishAnimationAtPosition:
stopAnimation:
isRunning
animationForKey:
removeGestureRecognizer:
setObject:forKey:
weakToStrongObjectsMapTable
animationDuration
setAnimationDuration:
hideViewsTimerInterval
setHideViewsTimerInterval:
hideViewsQuicklyTimerInterval
setHideViewsQuicklyTimerInterval:
volumeChangeHidePlaybackControlTimerInterval
setVolumeChangeHidePlaybackControlTimerInterval:
_state
_activeTransition
_gestureTracker
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
completionSpeed
completionCurve
wantsInteractiveStart
startInteractiveTransition:
interruptibleAnimatorForTransition:
animationEnded:
transitionDuration:
animateTransition:
gestureTrackerShouldTrackPinchToPresent:
gestureTrackerShouldTrackPinchToDismiss:
gestureTrackerShouldTrackPanToDismiss:
gestureTracker:didBeginTrackingGesture:
gestureTracker:didTrackPercentComplete:translation:rotation:
gestureTrackerDidCancelTracking:
gestureTrackerDidFinishTracking:
_animationControllerForPlayerViewController
_createActiveTransitionIfNeededForTransitionContext:
state
setState:
activeTransition
setActiveTransition:
gestureTracker
_jKeyDown
_kKeyDown
_lKeyDown
_audioMediaSelectionOptions
_legibleMediaSelectionOptions
_savedCaptionAppearanceDisplayType
_isResumed
_seekTimer
_timeOfLastUpdate
_seekQueue
_ignoreRateKeyValueChange
_updateAtMinMaxTimePeriodicObserverToken
_timebaseEffectiveRateObserver
_timebaseTimeJumpedObserver
_playerItemTimeJumpedObserver
_playerItemDidPlayToEndTimeObserver
_audioSessionInterruptionObserver
_currentLocaleDidChangeObserver
_pictureInPictureInterrupted
_rateToRestoreAfterAudioSessionInterruptionEnds
_isPictureInPictureSupported
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_pendingSeek
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_forceScanning
_rateBeforeForceScanning
_deviceBatteryStateDidChangeObserver
_deviceBatteryMonitoringWasEnabled
_playingOnSecondScreen
_allowsIdleSleepPreventionCount
_atMaxTime
_atMinTime
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_deviceBatteryChargingOrFull
_player
_minTiming
_maxTiming
_seekToTime
_metadata
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_seekToTimeInternal
_cachedContentDuration
_forwardPlaybackEndTime
_reversePlaybackEndTime
initWithPlayer:
_queuePlayer
status
error
seekableTimeRanges
isCompletelySeekable
startAllowingIdleSleepPrevention
stopAllowingIdleSleepPrevention
allowsIdleSleepPrevention
shouldPreventIdleDisplaySleep
_retryPlayImmediatelyIfNeeded
canPlayImmediately
seekTimer
canPlay
isPlaying
setPlaying:
play:
autoplay:
canPause
pause:
canTogglePlayback
togglePlaybackEvenWhenInBackground:
isLooping
setLooping:
updateAtMinMaxTime
volume
setVolume:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isMuted
setMuted:
toggleMuted:
hasContent
contentDuration
nominalFrameRate
isStreaming
contentDimensions
contentDurationWithinEndTimes
hasEnabledAudio
hasVideo
hasEnabledVideo
hasContentChapters
hasLiveStreamingContent
hasTrimmableContent
hasShareableContent
_isRestrictedFromSavingPlayerItem:
_isMarkedNotSerializablePlayerItem:
canSeek
seekToTime:
beginScrubbing
endScrubbing
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
beginScanningForward:
_updateScanningForwardRate
endScanningForward:
canScanBackward
scanBackward:
beginScanningBackward:
_updateScanningBackwardRate
endScanningBackward:
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
skipBackwardThirtySeconds:
gotoEndOfSeekableRanges:
seekToChapter:
canSeekChapterForward
seekChapterForward:
canSeekChapterBackward
seekChapterBackward:
updateTiming
updateMinMaxTiming
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isExternalPlaybackActive
isPlayingOnSecondScreen
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
segmentDuration
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_cancelPendingSeeksIfNeeded
scanningDelays
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
isSeekingInternal
setSeekingInternal:
isSeeking
setSeeking:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
metadata
setMetadata:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
cachedContentDuration
setCachedContentDuration:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
reversePlaybackEndTime
setReversePlaybackEndTime:
isDeviceBatteryChargingOrFull
setDeviceBatteryChargingOrFull:
cancelPendingSeeks
liveUpdateInterval
localizedModel
currentDevice
seekableTimeRangesLastModifiedTime
timebase
postNotificationName:object:userInfo:
assetTrack
tracks
stepByCount:
canStepBackward
canStepForward
doubleValue
canPlayFastReverse
canPlayFastForward
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
getBytes:length:
dataValue
objectAtIndex:
numberWithUnsignedInt:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
presentationSize
_isStreaming
timeRange
tracksWithMediaType:
_setUserVolume:
_userVolume
setActionAtItemEnd:
actionAtItemEnd
setAttribute:forKey:error:
bundleIdentifier
isPlaybackLikelyToKeepUp
items
isPlaybackBufferEmpty
playImmediatelyAtRate:
isPiPAvailable
timeControlStatus
CMTimeValue
sortUsingComparator:
stringValue
arrayWithCapacity:
chapterMetadataGroupsBestMatchingPreferredLanguages:
arrayByAddingObject:
preferredLanguages
loadValuesAsynchronouslyForKeys:completionHandler:
statusOfValueForKey:error:
dictionaryWithDictionary:
commonMetadata
removeTimeObserver:
setBatteryMonitoringEnabled:
batteryState
isBatteryMonitoringEnabled
unsignedIntegerValue
addPeriodicTimeObserverForInterval:queue:usingBlock:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingError
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingShouldPreventIdleDisplaySleep
keyPathsForValuesAffectingRate
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
keyPathsForValuesAffectingSegmentDuration
setRateWithForce:
setPlayingOnSecondScreen:
functionWithControlPoints::::
_solveForInput:
_temporaryArrangedSubviews
_drawsAsCircle
_axis
_targetViewForSecondaryMaterialOverlay
_visualEffectView
_secondaryMaterialOverlayView
_secondaryMaterialOverlayViewConstraints
initWithArrangedSubviews:
setArrangedSubviews:axis:
setCustomSpacing:afterView:
setCustomSpacing:afterViews:
setTargetViewForSecondaryMaterialOverlay:
contentLayoutMargins
setContentLayoutMargins:
updateConstraints
_ensureContentView
axis
drawsAsCircle
setDrawsAsCircle:
targetViewForSecondaryMaterialOverlay
visualEffectView
secondaryMaterialOverlayView
setSecondaryMaterialOverlayView:
secondaryMaterialOverlayViewConstraints
setSecondaryMaterialOverlayViewConstraints:
setLayoutMarginsRelativeArrangement:
setEdgesInsettingLayoutMarginsFromSafeArea:
configureView:withBackgroundFillOfColor:opacity:filter:
effectCombiningEffects:
effectWithBlurRadius:
colorEffectSaturate:
_setGroupName:
_groupName
_setContinuousCornerRadius:
setLayoutMargins:
layoutMargins
addArrangedSubview:
arrangedSubviews
applyPrimaryGlyphTintToView:
applySecondaryGlyphTintToView:
applyBaseTrackTintToView:
applyCompletedTrackTintToView:
applyLoadedTrackTintToView:
configureView:forTintEffectWithColor:filterType:
configureLayerView:
contentConfig
configWithContentConfig:
layerWithFillColor:opacity:filterType:
layerWithTintColor:filterType:
_setTextColorFollowsTintColor:
_needsInitialLayout
_playerLayerAndContentOverlayContainerView
_contentOverlayView
_iAdPreRollView
_statusBarBackgroundGradientView
_externalPlaybackIndicatorView
_unsupportedContentIndicatorView
_audioOnlyIndicatorView
addPlayerLayerAndContentOverlayContainerViewIfNeeded
isViewDescendantOfPlaybackControlsSubview:
setShowsUnsupportedContentIndicator:
setShowsAudioOnlyIndicator:
setShowsExternalPlaybackIndicator:
setExternalPlaybackIndicatorTitle:subtitle:
isDescendantOfNonPagingScrollView
updatePlayerLayerAndContentOverlayContainerViewLayoutMarginsForVideoGravity:
playerLayerAndContentOverlayContainerView
iAdPreRollView
statusBarBackgroundGradientView
externalPlaybackIndicatorView
unsupportedContentIndicatorView
audioOnlyIndicatorView
playerLayerView
needsInitialLayout
setNeedsInitialLayout:
constraintEqualToConstant:
isPagingEnabled
insertSubview:belowSubview:
_wasLongPressed
_treatsForcePressAsLongPress
_disablesHighlightWhenLongPressed
_wasForcePressTriggered
_forceThreshold
_force
_maximumForceSinceTrackingBegan
_imageName
_fullScreenImageName
_inlineImageName
_fullScreenAlternateImageName
_inlineAlternateImageName
_micaPackage
_trackingStartTime
_horizontalTranslationOfLongPress
_previousHorizontalPositionOfLongPress
_longPressTimer
setImageName:
setWasLongPressed:
setForce:
setMicaPackage:
setHighlighted:
cancelTrackingWithEvent:
_availabilityObserver
_resetTrackedState
_preferredImageName
_animateHighlightAndImageCrossFadeIfNeeded
wasLongPressed
treatsForcePressAsLongPress
setTreatsForcePressAsLongPress:
forceThreshold
setForceThreshold:
force
maximumForceSinceTrackingBegan
setMaximumForceSinceTrackingBegan:
imageName
fullScreenImageName
setFullScreenImageName:
inlineImageName
setInlineImageName:
fullScreenAlternateImageName
setFullScreenAlternateImageName:
inlineAlternateImageName
setInlineAlternateImageName:
micaPackage
disablesHighlightWhenLongPressed
setDisablesHighlightWhenLongPressed:
trackingStartTime
setTrackingStartTime:
wasForcePressTriggered
setWasForcePressTriggered:
horizontalTranslationOfLongPress
setHorizontalTranslationOfLongPress:
previousHorizontalPositionOfLongPress
setPreviousHorizontalPositionOfLongPress:
longPressTimer
setLongPressTimer:
isHighlighted
scheduledTimerWithTimeInterval:repeats:block:
isValid
renderingMode
buttonWithAccessibilityIdentifier:
addConstraints:
addConstraint:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setImage:
_stateController
_packageName
_rootLayer
_targetSize
_glyphSizeWithinUnscaledBounds
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
initWithPackageName:
rootLayer
setTargetSize:
_recursivelyFindSublayerWithName:rootLayer:
transitionToStateWithName:
transitionToStateWithName:onLayer:
availableStates
availableStatesOnLayer:
sublayerWithName:
targetSize
glyphSizeWithinUnscaledBounds
setGlyphSizeWithinUnscaledBounds:
stateController
packageName
setRootLayer:
enumerateObjectsUsingBlock:
name
states
setState:ofLayer:transitionSpeed:
stateWithName:
sublayers
classSubstitions
initWithLayer:
result
parseContentsOfURL:
parser
fontDescriptor
fontAttributes
fontWithDescriptor:size:
fontWithName:size:
timeFontWithFont:
boldSystemFontOfSize:
italicSystemFontOfSize:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
fontDescriptorByAddingAttributes:
_fullScreen
_layoutMarginUpdatesSuspended
_needsIntialLayout
_screenModeControls
_volumeControls
_prominentPlayButtonBackdropView
_miniPlayPauseButtonBackdropView
_transportControlsContainerView
_doneButton
_fullScreenButton
_pictureInPictureButton
_volumeButton
_volumeSlider
_prominentPlayButton
_miniPlayPauseButton
_transportControlsView
_interactiveContentOverlayView
_playbackControlsViewGroupName
_playbackControlsViewItems
_volumeBottomToTransportControlsTopConstraint
_volumeTopToLayoutGuideTopConstraint
setFullScreen:
animateAlongsideVisibilityChangeIfNeeded
_interactiveContentOverlayViewLayoutMargins
_updateDoubleRowTransportControlsEnabled
_setupInitialLayout
_statusBarOrientationWillChange:
_updateLayoutMargins
_volumeButtonToTransportControlsTopConstraintConstant
areLayoutMarginUpdatesSuspended
setLayoutMarginUpdatesSuspended:
screenModeControls
volumeControls
prominentPlayButtonBackdropView
miniPlayPauseButtonBackdropView
transportControlsContainerView
doneButton
fullScreenButton
pictureInPictureButton
volumeButton
volumeSlider
prominentPlayButton
miniPlayPauseButton
transportControlsView
playbackControlsViewGroupName
playbackControlsViewItems
volumeBottomToTransportControlsTopConstraint
volumeTopToLayoutGuideTopConstraint
needsIntialLayout
setNeedsIntialLayout:
safeAreaInsets
setContentHorizontalAlignment:
constant
bundle
bundleForClass:
localizedStringForKey:value:table:
avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:
avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:
avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:
avkit_constraintsFromDimensionAnchorsToSize:
leadingAnchor
trailingAnchor
leftAnchor
rightAnchor
topAnchor
bottomAnchor
widthAnchor
heightAnchor
centerXAnchor
centerYAnchor
avkit_constraintEqualToAnchor:priority:
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:constant:
avkit_constraintGreaterThanOrEqualToAnchor:priority:
avkit_constraintLessThanOrEqualToAnchor:priority:
avkit_constraintEqualToAnchor:constant:priority:
avkit_constraintGreaterThanOrEqualToAnchor:constant:priority:
avkit_constraintLessThanOrEqualToAnchor:constant:priority:
constraintLessThanOrEqualToConstant:
avkit_constraintEqualToConstant:priority:
avkit_constraintGreaterThanOrEqualToConstant:priority:
avkit_constraintLessThanOrEqualToConstant:priority:
avkit_constraintsFromEdgesOfItem:toLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:priority:
avkit_constraintsFromEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromLeadingAndTrailingEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromTopAndBottomEdgesOfItem:toEdgesOfItem:
convertPoint:toView:
_collectAVButtonsInSubviewsOfView:buttons:
subviews
localizedDisplayName
shortLocalizedDisplayName
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
B40@0:8{CGPoint=dd}16@32
@40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
B16@0:8
v20@0:8B16
@"NSObject<OS_os_log>"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@16@0:8
v36@0:8@16C24q28
v24@0:8@16
v16@0:8
@"AVPlayerController"
@"AVPictureInPicturePlayerLayerView"
q16@0:8
v24@0:8q16
@"_AVSimplePlayerLayerView"
#16@0:8
{CGPoint="x"d"y"d}
@"UISelectionFeedbackGenerator"
@"NSArray"
@"UIView"
@"UIImageView"
{CGSize="width"d"height"d}
f16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
B32@0:8@16@24
v32@0:8@16@24
v20@0:8f16
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"UIImage"
@"NSString"
@24@0:8^{_NSZone=}16
@56@0:8d16d24Q32@40@?48
Q16@0:8
B24@0:8@16
@32@0:8d16@24
@24@0:8@16
q24@0:8@16
@"NSMutableSet"
@32@0:8@16:24
@"<AVInteractiveTransitionGestureTrackerDelegate>"
@"UIPanGestureRecognizer"
@"UISwipeGestureRecognizer"
@"UIPinchGestureRecognizer"
@"UIRotationGestureRecognizer"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"NSUUID"
v48@0:8@16@24@32^v40
@40@0:8@16{CGSize=dd}24
@"NSDictionary"
@"AVNowPlayingInfoController"
@"AVPictureInPictureController"
@"UIPopoverPresentationController"
@"AVTransitionController"
@"AVPlaybackControlsVisibilityController"
@"AVPlaybackControlsController"
@"AVAppBasedStatusBarAppearanceController"
@"MPVolumeController"
@"AVPlayerView"
@"__AVPlayerLayerView"
@"NSTimer"
@"<AVPlayerViewControllerDelegate>"
{?="playerViewControllerWillStartPictureInPicture"B"playerViewControllerDidStartPictureInPicture"B"playerViewController_failedToStartPictureInPictureWithError"B"playerViewControllerWillStopPictureInPicture"B"playerViewControllerDidStopPictureInPicture"B"playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart"B"playerViewController_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"B"playerViewController_shouldExitFullScreenWithReason"B"playerViewControllerWillExitAutoplayPhase"B}
@"AVFullScreenViewController"
@"UIWindow"
@"UIScreen"
@"<UIViewControllerTransitioningDelegate>"24@0:8@"AVFullScreenViewController"16
q32@0:8@"AVFullScreenViewController"16@"UIViewController"24
v24@0:8@"AVFullScreenViewController"16
@"UIView"24@0:8@"AVFullScreenViewController"16
v28@0:8@"AVFullScreenViewController"16B24
B24@0:8@"AVFullScreenViewController"16
@"UIResponder"24@0:8@"AVFullScreenViewController"16
q32@0:8@16@24
v28@0:8@16B24
v32@0:8@"AVPlaybackControlsVisibilityController"16@"<UIViewImplicitlyAnimating>"24
v24@0:8@"AVPlaybackControlsVisibilityController"16
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
@32@0:8@16q24
v40@0:8@16q24@32
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
v32@0:8@16@?24
@32@0:8@16@24
v36@0:8q16B24@?28
v28@0:8B16@?20
@?16@0:8
v24@0:8@?16
@"<AVFullScreenViewControllerDelegate>"
@40@0:8@16@24@32
@"UIColor"
@"UIButton"
@"AVRoutePickerViewController"
@"<AVRoutePickerViewDelegate>"
@"<AVPictureInPictureViewControllerDelegate>"
{?="pictureInPictureViewControllerViewDidAppear"B"pictureInPictureViewControllerViewWillDisappear"B}
@"UILabel"
@"UIStackView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@44@0:8@16@24B32@?36
@32@0:8@16#24
@"NSSet"
@60@0:8@16@24@32B40Q44@?52
@"AVMediaSelectionOption"
@24@0:8q16
q32@0:8@16q24
v40@0:8@16@24@32
v40@0:8@16@24q32
@"AVMediaSelectionTableViewController"
@40@0:8@16@24:32
@"AVPlayerLayer"
@"PGPictureInPictureProxy"
@"AVPictureInPictureViewController"
@"NSObject<OS_dispatch_source>"
@"<AVPictureInPictureControllerDelegate>"
{?="pictureInPictureControllerWillStartPictureInPicture"B"pictureInPictureControllerDidStartPictureInPicture"B"pictureInPictureController_failedToStartPictureInPictureWithError"B"pictureInPictureControllerWillStopPictureInPicture"B"pictureInPictureControllerDidStopPictureInPicture"B"pictureInPictureController_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"B}
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v40@0:8@"PGPictureInPictureProxy"16q24q32
v24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v32@0:8@16q24
v40@0:8@16q24q32
v24@0:8@"AVPictureInPictureViewController"16
@"AVPlayerViewControllerContentView"
@"<AVRoutePickerHostViewControllerDelegate>"
@"AVRoutePickerHostViewController"
v24@0:8@"AVRoutePickerHostViewController"16
@"NSAttributedString"
@"CATextLayer"
@"CALayer"
@28@0:8@16B24
@"AVBackdropView"
@"<AVTimeControlling>"
@"AVTimer"
@"<UIViewControllerContextTransitioning>"
@"AVPlayerViewController"
@"UIViewPropertyAnimator"
v48@0:8d16{CGPoint=dd}24d40
{CGAffineTransform=dddddd}64@0:8d16d24d32d40{CGPoint=dd}48
@32@0:8@16d24
@48@0:8{UIEdgeInsets=dddd}16
@44@0:8d16@24@?32B40
@"MPAVRoutingViewController"
@"NSLayoutConstraint"
@"<AVRoutePickerContainerViewControllerDelegate>"
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoute"24
v24@0:8@"MPAVRoutingViewController"16
@"<AVTransportControlsViewDelegate>"
@"AVScrubber"
@"AVLabel"
@"AVButton"
@"AVLoadingSpinner"
v24@0:8@"AVButton"16
@"AVKeyValueObservationController"
@"AVPlaybackControlsView"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"UIAlertController"
v24@0:8@"AVPlayerViewControllerContentView"16
v24@0:8@"AVRoutePickerContainerViewController"16
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
v28@0:8@"MPVolumeController"16B24
v28@0:8@16f24
v24@0:8@"AVTransportControlsView"16
v32@0:8@"AVTransportControlsView"16@"AVScrubber"24
v40@0:8d16d24d32
@"NSMapTable"
@"AVUserInteractionObserverGestureRecognizer"
@"<AVPlaybackControlsVisibilityControllerDelegate>"
@24@0:8@?16
v28@0:8d16B24
@"AVTransition"
@"AVInteractiveTransitionGestureTracker"
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v24@0:8@"<UIViewControllerContextTransitioning>"16
d24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
d24@0:8@16
B24@0:8@"AVInteractiveTransitionGestureTracker"16
v32@0:8@"AVInteractiveTransitionGestureTracker"16q24
v56@0:8@"AVInteractiveTransitionGestureTracker"16d24{CGPoint=dd}32d48
v24@0:8@"AVInteractiveTransitionGestureTracker"16
v56@0:8@16d24{CGPoint=dd}32d48
@"NSNumber"
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVValueTiming"
@"AVPlayer"
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
@"AVStackView"
@"UIVisualEffectView"
v32@0:8d16@24
v48@0:8@16@24d32@40
@"<AVPlayerViewControllerContentViewDelegate>"
@"AVStatusBarBackgroundGradientView"
@"AVExternalPlaybackIndicatorView"
@"AVUnsupportedContentIndicatorView"
@"AVAudioOnlyIndicatorView"
@"AVMicaPackage"
@"CAStateController"
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v36@0:8@16@24f32
v36@0:8@16@24B32
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24[1{__va_list_tag=II^v^v}]32Q40
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24[1{__va_list_tag=II^v^v}]32Q40
@24@0:8d16
@"AVView"
@"AVVolumeSlider"
@"AVTransportControlsView"
@"NSArray"24@0:8@"<AVKitLayoutItem>"16
@"NSArray"32@0:8{CGSize=dd}16
@"NSLayoutXAxisAnchor"16@0:8
@"NSLayoutYAxisAnchor"16@0:8
@"NSLayoutDimension"16@0:8
@32@0:8{CGSize=dd}16
@60@0:8@16@24@32@40@48f56
@28@0:8@16f24
@36@0:8@16d24f32
@28@0:8d16f24
