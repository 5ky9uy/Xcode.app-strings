@?33
MbP?{
?ffffff
?ffffff
?[5"y
?ffffff
Y@333333
?ffffff
.AUUUUUU
?ffffff
AVView
AVRouteDetectorCoordinator
AVWindow
AVAdditions
AVLogging
NSObject
AVPlaybackControlsViewItemAvailabilityObserver
AVPlaybackControlsViewItemUtilities
__AVPlayerLayerView
AVPictureInPicturePlayerLayerView
_AVSimplePlayerLayerView
AVScrubberVelocity
AVScrubber
AVVolumeController
AVChapter
NSCopying
AVMediaSelection
AVPlayerController
AVVolumeSlider
AVPlaybackControlsViewItem
AVVolumeWarningView
AVUserInteractionObserverGestureRecognizer
AVAppBasedStatusBarAppearanceController
AVInteractiveTransitionGestureTracker
UIGestureRecognizerDelegate
AVNowPlayingInfoController
AVStatusBarBackgroundGradientView
AVWindowRootViewController
AVFullScreenTransition
AVPresentationTransition
AVPlaybackControlsRoutePickerView
AVDismissalTransition
AVPlayerViewController
AVFullScreenViewControllerDelegate
AVPlaybackControlsVisibilityControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
AVPictureInPictureControllerDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewController_WebKitOnly
AVPlaybackControlsViewControllerVisibility
AVPlaybackControlsViewControllerActions
AVPlayerViewControllerTransitioningInternal
AVFullScreenViewController
AVPictureInPictureViewController
PGPictureInPictureViewController
AVExternalPlaybackIndicatorView
AVValueTiming
NSMutableCopying
NSCoding
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVKeyValueObservationController
AVKeyValueChange
AVKeyValueObservationControllerProxyObserver
AVMediaSelectionTableViewController
AVTableViewCell
AVMediaSelectionViewController
AVExitFullScreenTransition
AVPictureInPictureController
PGPictureInPictureProxyDelegate
AVPictureInPictureViewControllerDelegate
AVLabel
AVPlayerView
AVPictureInPictureIndicatorLayer
AVBackgroundView
AVVolumeButtonControl
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVTouchIgnoringView
AVTransition
AVMicaPackage
CAStateControllerDelegate
CAMLParserDelegate
AVTimer
AVTransportControlsView
AVScrubberDelegate
AVPlaybackControlsController
Q1A#
AVPlayerViewControllerContentViewDelegate
_UIScrollViewScrollObserver
AVRoutePickerViewDelegate
AVTransportControlsViewDelegate
AVPlaybackControlsVisibilityControllerViewInfo
AVPlaybackControlsVisibilityController
UnitTestSupport
AVTransitionController
UIViewControllerTransitioningDelegate
UIViewControllerInteractiveTransitioning
UIViewControllerAnimatedTransitioning
AVInteractiveTransitionGestureTrackerDelegate
AVPlayerControllerMercurySupportInternal
AVPlayerControllerExternalPlaybackSupportInternal
AVBackdropView
AVPlayerViewControllerContentView
AVCaptureViewConfiguring
AVPlaybackControlsViewDelegate
AVSharedPreferencesProtocol
AVButton
AVEnterFullScreenTransition
AVPlaybackControlsView
_AVBundle
AVKitLayoutItem
NSLayoutConstraint_AVKitAdditions
NSLayoutAnchor_AVKitAdditions
NSLayoutDimension_AVKitAdditions
AVPlayerPropertyCache
AVRoutePickerView
ignoresTouches
TB,N,V_ignoresTouches
routeDetectionEnabled
TB,N,GisRouteDetectionEnabled,V_routeDetectionEnabled
multipleRoutesDetected
TB,R,N
AVRouteDetectorCoordinatorMultipleRoutesDetectedDidChangeNotification
Only access this property on the main queue!
com.apple.avkit.routeDetectorCoordinatorQueue
playerViewController
T@"AVPlayerViewController",&,N,V_playerViewController
fullScreenViewController
T@"AVFullScreenViewController",R,N,V_fullScreenViewController
sourceWindow
T@"UIWindow",R,W,N,V_sourceWindow
categories
T@"NSMutableDictionary",&,N,V_categories
reusableLogQueue
T@"NSMutableArray",&,N,V_reusableLogQueue
loggingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_loggingQueue
AVKit
AVKit-%@
com.apple.avkit
com.apple.avkit.loggingQueue
AVLoggingLevel
AVUserLog
%@ %@
%@ (%p) %@
<%@: %p>
<NSError %@:%ld>
"%@": %@
AVMediaSelectionKeyValueOption
AVMediaSelectionOption
NSIndexPath
NSDate
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
AVKitErrorDomain
AVKIT_ERROR_PICTURE_IN_PICTURE_START_FAILED
AVKIT_ERROR_UNKNOWN
playerLayer
T@"AVPlayerLayer",R,N
playerController
T@"AVPlayerController",&,N
videoGravity
Tq,N
readyForDisplay
TB,R,N,GisReadyForDisplay
videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
pixelBufferAttributes
T@"NSDictionary",C,N
pictureInPicturePlayerLayerView
T@"AVPictureInPicturePlayerLayerView",R,N
V:|[simplePlayerLayerView]|
H:|[simplePlayerLayerView]|
simplePlayerLayerView
layer
playerLayer.pixelBufferAttributes
playerLayer.videoRect
playerLayer.readyForDisplay
playerLayer.videoGravity
timestamp
Td,V_timestamp
velocity
Td,V_velocity
scrubbingSpeed
Tq,N,V_scrubbingSpeed
resolution
Td,N,V_resolution
slowKnobMovementDetected
TB,N,V_slowKnobMovementDetected
shouldRecoverFromPrecisionScrubbingIfNeeded
TB,N,V_shouldRecoverFromPrecisionScrubbingIfNeeded
loadedTrackOverlayView
T@"UIView",R,N,V_loadedTrackOverlayView
currentThumbView
T@"UIImageView",W,N,V_currentThumbView
previousScrubberVelocities
T@"NSMutableArray",&,N,V_previousScrubberVelocities
updateSlowKnobMovementDetectedTimer
T@"NSTimer",&,N,V_updateSlowKnobMovementDetectedTimer
timestampWhenTrackingEnded
Td,N,V_timestampWhenTrackingEnded
feedbackGenerator
T@"UISelectionFeedbackGenerator",R,N,V_feedbackGenerator
extrinsicContentSize
T{CGSize=dd},N,V_extrinsicContentSize
collapsed
TB,N,GisCollapsed,V_collapsed
included
TB,N,GisIncluded,V_included
collapsedOrExcluded
TB,R,N,GisCollapsedOrExcluded
hasAlternateAppearance
TB,N,V_hasAlternateAppearance
hasFullScreenAppearance
TB,N,V_hasFullScreenAppearance
delegate
T@"<AVScrubberDelegate>",W,N,V_delegate
loadedTimeRanges
T@"NSArray",C,N,V_loadedTimeRanges
localizedScrubbingSpeedName
T@"NSString",R,N
estimatedFrameRate
Tf,N,V_estimatedFrameRate
hitRectInsets
T{NSDirectionalEdgeInsets=dddd},N,V_hitRectInsets
timeIntervalSinceTrackingEnded
Td,R,N
rate
Tf,N,V_rate
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_FINE_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_QUARTER_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HALF_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HI_SPEED_SCRUBBING_TEXT
changingVolume
TB,N,GisChangingVolume,V_changingVolume
currentRouteHasVolumeControl
TB,N,V_currentRouteHasVolumeControl
prefersSystemVolumeHUDHiddenInternal
TB,N,V_prefersSystemVolumeHUDHiddenInternal
EUVolumeLimit
Tf,N,V_EUVolumeLimit
EUVolumeLimitEnabled
TB,N,GisEUVolumeLimitEnabled,V_EUVolumeLimitEnabled
EUVolumeLimitOverridden
TB,N,GisEUVolumeLimitOverridden,V_EUVolumeLimitOverridden
volume
Tf,N,V_volume
volumeChangesThrottled
TB,N,V_volumeChangesThrottled
canOverrideEUVolumeLimit
TB,N,V_canOverrideEUVolumeLimit
targetVolumeInternal
T@"NSNumber",&,N,V_targetVolumeInternal
maximumTargetVolumeSinceChangingVolumeBegan
T@"NSNumber",&,N,V_maximumTargetVolumeSinceChangingVolumeBegan
volumeCategory
T@"NSString",R,N,V_volumeCategory
sharedSystemController
T@"AVSystemController",&,N,V_sharedSystemController
fullyInitialized
TB,N,GisFullyInitialized,V_fullyInitialized
effectiveVolumeLimit
Tf,R,N
prefersSystemVolumeHUDHidden
TB,N,V_prefersSystemVolumeHUDHidden
v16@?0@"AVVolumeController"8
AVVolumeControllerCurrentRouteHasVolumeControlChangedNotification
AVVolumeControllerVolumeChangedNotification
%@: It is an error to set the target volume without calling -[AVVolumeController begin/endChangingVolume].
AVVolumeControllerVolumeDidChangeNotificationIsInitialValueKey
MPDebugEUVolumeLimit
.GlobalPreferences
Audio/Video
RegionalBehaviorEUVolumeLimit
startTime
Td,R,V_startTime
duration
Td,R,V_duration
number
TQ,R,V_number
title
T@"NSString",R,C,V_title
image
T@"UIImage",R,V_image
com.apple.AVKit.ChapterImageQueue
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
  forMediaCharacteristic: %@
Selected option: %@
filtereLegibleList: %@
q24@?0@8@16
legibleOptions: %@
filteredOptions: %@
audibleOptions: %@
player.currentItem.currentMediaSelection
player.currentItem.asset
player.appliesMediaSelectionCriteriaAutomatically
AudioMediaSelectionOptions: %@
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
thumbView
T@"UIImageView",&,N,V_thumbView
volumeWarningView
T@"AVVolumeWarningView",W,N,V_volumeWarningView
Tf,N,V_effectiveVolumeLimit
unclampedValue
T@"NSNumber",&,N,V_unclampedValue
T{CGSize=dd},N
TB,N,GisCollapsed
TB,N,GisIncluded
TB,N
animator
T@"UIViewPropertyAnimator",W,N,V_animator
stopping
TB,N,GisStopping,V_stopping
statusBarHiddenObserver
T@,&,N,V_statusBarHiddenObserver
clientPrefersStatusBarHidden
TB,N,V_clientPrefersStatusBarHidden
pinchToDismissEnabled
TB,N,GisPinchToDismissEnabled,V_pinchToDismissEnabled
pinchToPresentEnabled
TB,N,GisPinchToPresentEnabled,V_pinchToPresentEnabled
panToDismissEnabled
TB,N,GisPanToDismissEnabled,V_panToDismissEnabled
activeGestureType
Tq,N,V_activeGestureType
locationOfInitialPinchInWindow
T{CGPoint=dd},N,V_locationOfInitialPinchInWindow
rotation
Td,N,V_rotation
previousPinchScale
Td,N,V_previousPinchScale
T@"<AVInteractiveTransitionGestureTrackerDelegate>",R,W,N,V_delegate
panGestureRecognizer
T@"UIPanGestureRecognizer",R,N,V_panGestureRecognizer
pinchGestureRecognizer
T@"UIPinchGestureRecognizer",R,N,V_pinchGestureRecognizer
rotationGestureRecognizer
T@"UIRotationGestureRecognizer",R,N,V_rotationGestureRecognizer
recognizers
T@"NSArray",R,N,V_recognizers
trackingUpwardPan
TB,N,GisTrackingUpwardPan,V_trackingUpwardPan
Cannot reset when not tracking.
Cannot cancel when not tracking.
Cannot finish when not tracking.
Began tracking when already tracking.
Recognized pan gesture without enabling pan to dismiss.
Pinch to present and pinch to dismiss cannot be simultaneously enabled.
Recognized pinch gesture without enabling pinch to present or pinch to dismiss.
AVNowPlayingInfoControllerDidReceiveStopCommandEventNotification
AVNowPlayingInfoControllerIdentifierKey
enabled
TB,N,GisEnabled
requiresLinearPlayback
TB,N,V_requiresLinearPlayback
Remote Command Staus: %ld
Change playback position command
Change playback rate command
Seek backward command
Seek forward command
Skip backward command
Skip Forward command
Previous track command
Next track command
Toggle play pause command
Stop Command
Play Command
Pause Command
HandlingRemoteCommandEvent
Setting now playing info: %@
@"UIImage"24@?0{CGSize=dd}8
UpdateNowPlayingInfo
Update now playing info if need: %d
Owns now playing info: %d
PlayerController can scan backward changed to: %d
PlayerController can scan forward changed to: %d
PlayerController can seek changed to: %d
PlayerController can seek chapter bacwkard changed to: %d
PlayerController can seek chapter forward changed to: %d
PlayerController can toggle playback changed to: %d
PlayerController can play changed to: %d
PlayerController can pause changed to: %d
contentDuration
canPause
canPlay
canTogglePlayback
canSeekChapterForward
canSeekChapterBackward
canSeek
canScanForward
canScanBackward
gradientOpacity
Td,N,V_gradientOpacity
showsGradientWhenStatusBarVisible
TB,N,V_showsGradientWhenStatusBarVisible
T@"AVFullScreenViewController",W,N,V_fullScreenViewController
fullScreenWindow
T@"UIWindow",W,N,V_fullScreenWindow
AVKit is playing audiovisual content. That prevents display sleep.
frameOfPlayerViewControllerWithinContainerView
shouldRemovePresentingView
rotationTransformFromPresentedViewToSourceView
T{CGAffineTransform=dddddd},R,N
transformForDismissalAnimation
sourceViewFrameInContainerView
customButton
T@"AVButton",R,N
AirPlay
didComplete: %@
_fullScreenWindow
T@"AVWindow",&,N,S_setFullScreenWindow:,V__fullScreenWindow
secondScreenWindow
T@"UIWindow",&,N,V_secondScreenWindow
playbackTargetScreen
T@"UIScreen",&,N,V_playbackTargetScreen
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
TB,N,V_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
T@?,C,N,V_finishPreparingForInteractiveDismissalHandler
interactiveDismissalCompletionHandler
T@?,C,N,V_interactiveDismissalCompletionHandler
_wasInitializedWithPlayerLayerView
TB,N,S_setWasInitializedWithPlayerLayerView:,V__wasInitializedWithPlayerLayerView
canHidePlaybackControls
canPausePlaybackWhenExitingFullScreen
TB,N,V_canPausePlaybackWhenExitingFullScreen
interactiveContentOverlayView
T@"UIView",R,N
canHideInteractiveContentOverlayView
preferredUnobscuredArea
_provideCurrentItemAndInitiatePlayback
T@?,C,N,S_setProvideCurrentItemAndInitiatePlayback:,V__provideCurrentItemAndInitiatePlayback
allowsEnteringFullScreen
player
T@"AVPlayer",&,N
showsPlaybackControls
T@"NSString",C,N
contentOverlayView
allowsPictureInPicturePlayback
updatesNowPlayingInfoCenter
TB,N,V_updatesNowPlayingInfoCenter
entersFullScreenWhenPlaybackBegins
TB,N,V_entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
TB,N,V_exitsFullScreenWhenPlaybackEnds
T@"<AVPlayerViewControllerDelegate>",W,N
MediaSelectionDone
Invalid call of %@!
*** Warning: %@ is trying to exit full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
*** Warning: %@ is trying to enter full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
com.apple.iBooks
External Playback Indicator View TV Out Subtitle
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_SUBTITLE
External Playback Indicator View TV Out Title
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_TITLE
External Playback Indicator View AirPlay Subtitle
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_SUBTITLE
External Playback Indicator View AirPlay Title
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_TITLE
_pictureInPictureController
playbackControlsController.prefersAssetInspectionSuspended
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.allowsExternalPlayback
playerController.externalPlaybackType
playerController.playingOnExternalScreen
playerController.contentDimensions
playerController.status
v20@?0B8@"NSError"12
Did receive stop command notification.
%@ unexpectedly tried to add observers twice!
PlayerController status changed to: %@
'Failed'
'Unknown'
'ReadyToPlay'
'Loading'
Exit full screen keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_EXIT_FULLSCREEN
Show next frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_NEXT_FRAME
Show previous frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_PREVIOUS_FRAME
Fast forward keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_FAST_FORWARD
Rewind keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_REWIND
Go to beginning keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_GO_TO_BEGINNING
Skip ahead 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_AHEAD_15
Skip back 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_BACK_15
Volume down keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_DOWN
Volume up keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_UP
Play/Pause keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_PLAY_PAUSE
_playerLayerView
%@ Attempt to load view when view was already loaded.
*** AVPlayerViewController: Setting a view is not supported.
playbackControlsController
%@ preferredUnobscuredArea: %ld
%@ canHideInteractiveContentOverlayView: %@
%@ requiresLinearPlayback: %@
%@ canHidePlaybackControls: %@
%@ updatesNowPlayingInfoCenter: %@
%@ playerController: %@
%@ delegate: %@
%@ allowsPictureInPicturePlayback: %d
%@ videoGravity: %@
%@ showsPlaybackControls: %d
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
%@ player: %@
AVAllowsPictureInPicturePlayback
AVVideoLayerGravity
AVShowsPlaybackControls
AVPlayerShouldAutoplay
AVPlayerAssetFilename
_playerLayerView.pixelBufferAttributes
_playerLayerView.videoBounds
_playerLayerView.readyForDisplay
_playerLayerView.videoGravity
playerController.player
iAdPrerollView
showsExitFullScreenButton
pictureInPicturePossible
TB,R,N,GisPictureInPicturePossible
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
pictureInPictureWasStartedWhenEnteringBackground
playbackControlsVisibilityController
T@"AVPlaybackControlsVisibilityController",R,N
T@"UIWindow",R,N
T@"UIViewController",R,W,N
contentView
T@"AVPlayerViewControllerContentView",R,N
presentingFullScreenFromInline
TB,R,N,GisPresentingFullScreenFromInline
presentedFullScreen
TB,R,N,GisPresentedFullScreen
View needs to be loaded before you can call %@!
View may not need layout when you call %@!
%@ showsExitFullScreenButton: %d
%@: %@
PictureInPictureButtonTapped
FullScreenButtonTapped
MediaSelectionButtonTapped
FullScreenDoneButtonTapped
_pictureInPictureController.pictureInPictureWasStartedWhenEnteringBackground
_pictureInPictureController.pictureInPictureSuspended
_pictureInPictureController.pictureInPictureActive
_pictureInPictureController.pictureInPicturePossible
T@"<AVFullScreenViewControllerDelegate>",W,N,V_delegate
canChangeStatusBarHidden
TB,N,V_canChangeStatusBarHidden
T@"UIView",W,N,V_contentView
presentationBackgroundView
T@"UIView",R,N,V_presentationBackgroundView
%@ did not receive a view from its delegate, %@.
T@"AVPlayerController",&,N,V_playerController
T@"<AVPictureInPictureViewControllerDelegate>",W,N
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
%@ does not support unarchiving from a nib.
%@ is not a valid initializer. You must call -[%@ initWithPictureInPicturePlayerLayerView:].
playerController.playing
ExternalPlaybackIndicatorLarge
@"UIStackView"24@?0@"NSArray"8d16
@"UILabel"16@?0d8
anchorValue
anchorTimeStamp
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
Td,D,N
currentValue
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
v48@?0@8@"NSString"16@24@32@"NSString"40
value
T@,R,N,V_value
oldValue
T@,R,N,V_oldValue
keyPath
T@"NSString",R,N,V_keyPath
observationToken
T@,R,N,V_observationToken
token
T@"NSString",R,N,V_token
includeInitialValue
TB,R,N,V_includeInitialValue
observedObject
T@,R,N
observer
T@,R,W,N,V_observer
keyPaths
T@"NSSet",R,N,V_keyPaths
changesBlock
T@?,R,N,V_changesBlock
com.apple.avkit.AVKitKVOProxyObserver
You must call -[AVKeyValueObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
com.apple.avkit.AVKeyValueObservationController
Media Selection View Controller Legible Options Header Title
MEDIA_SELECTION_VIEW_CONTROLLER_LEGIBLE_OPTIONS_HEADER_TITLE
Media Selection View Controller Audio Options Header Title
MEDIA_SELECTION_VIEW_CONTROLLER_AUDIO_OPTIONS_HEADER_TITLE
AVMediaSelectionViewControllerCellReuseIdentifier
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
representedObject
T@,&,N,V_representedObject
Media Selection View Controller Navigation Item Title
MEDIA_SELECTION_VIEW_CONTROLLER_NAVIGATION_ITEM_TITLE
If orientations are changing, the presenting view should have been removed. Something is probably wrong with shouldRemovePresentingView.
%@ Expected a fullScreenPresentationController and got %@ instead.
TB,N,V_allowsPictureInPicturePlayback
T@"<AVPictureInPictureControllerDelegate>",W,N
%@ pictureInPictureProxy: %@
%@ pictureInPictureProxy: %@ reason: %ld
StopPictureInPicture
%@ error: %@
FailedToStartPictureInPicture
PiP PlayerController status changed to: %@
PlayerLayer player changed: %@
PiPPlayerDidChange
%@ needs to be invoked on the main thread!
_window
UIWindowLayer
playerController.hasVideo
playerController.rate
playerController.currentTimeWithinEndTimes
playerController.contentDurationWithinEndTimes
playerController.loadedTimeRanges
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
_pictureInPictureProxy.pictureInPictureWasStartedWhenEnteringBackground
_pictureInPictureProxy.pictureInPictureSuspended
_pictureInPictureProxy.pictureInPictureActive
playerController.pictureInPicturePossible
_pictureInPictureProxy.pictureInPicturePossible
StopPictureInPictureButton
StartPictureInPictureButton
label
T@"UILabel",R,N,V_label
labelIfLoaded
T@"UILabel",R,N
loadingIndicator
T@"UIActivityIndicatorView",R,N,V_loadingIndicator
loadingIndicatorLeftAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorLeftAlignmentConstraint
loadingIndicatorRightAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorRightAlignmentConstraint
showsLoadingIndicator
TB,N,V_showsLoadingIndicator
loadingIndicatorAlignment
Tq,N,V_loadingIndicatorAlignment
text
T@"NSString",C,N,V_text
font
T@"UIFont",&,N,V_font
primaryScreen
T@"UIScreen",W,N,V_primaryScreen
T@"AVPlayerViewControllerContentView",R,N,V_contentView
managesContentViewLayout
TB,N,V_managesContentViewLayout
%@ window: %@ screen: %@
%@: %d
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
Picture in Picture Indicator Layer Title
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
PictureInPictureIndicatorLarge
backdropView
T@"AVBackdropView",W,N,V_backdropView
automaticallyDrawsRoundedCorners
TB,N,V_automaticallyDrawsRoundedCorners
highlightAnimator
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
micaPackage
T@"AVMicaPackage",&,N,V_micaPackage
initialPreciseLocationOfTouch
T{CGPoint=dd},N,V_initialPreciseLocationOfTouch
longPressTimer
T@"NSTimer",W,N,V_longPressTimer
trackingState
Tq,N,V_trackingState
showsHighlightedAppearance
TB,N,V_showsHighlightedAppearance
micaPackageStateName
T@"NSString",&,N,V_micaPackageStateName
longPressEnabled
TB,N,GisLongPressEnabled,V_longPressEnabled
translationOfPanFromPreviousTouch
T{CGPoint=dd},N,V_translationOfPanFromPreviousTouch
cumulativeTranslationSincePanningBegan
T{CGPoint=dd},N,V_cumulativeTranslationSincePanningBegan
locationOfTouchInWindow
T{CGPoint=dd},N,V_locationOfTouchInWindow
v16@?0@"AVMicaPackage"8
Mute Toggle
minTime
Td,V_minTime
maxTime
Td,V_maxTime
T@"<AVTimeControlling>",&
interval
currentTime
AVResolution
AVInterval
AVPlayerController
playerController.minTime
playerController.minTiming
playerController.maxTime
playerController.maxTiming
playerController.timing
targetTime
targetTimeWithinEndTimes
remainingTargetTimeWithinEndTimes
Td,R
currentTimeWithinEndTimes
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
thirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
TB,R,GisThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
playerController.seekableTimeRanges
playerController.contentDuration
playerController.seekToTime
playerController.seeking
T@"AVPlayerViewController",R,W,N,V_playerViewController
containerView
backgroundView
T@"UIView",R,N,V_backgroundView
toView
fromView
toViewController
T@"UIViewController",R,N
fromViewController
currentAnimator
T@"UIViewPropertyAnimator",W,N,V_currentAnimator
interactiveTransitionPercentComplete
Td,N,V_interactiveTransitionPercentComplete
wasInitiallyInteractive
TB,N,V_wasInitiallyInteractive
transitionContext
T@"<UIViewControllerContextTransitioning>",R,N,V_transitionContext
%@ called with an existing animator %@.
%@ - Failed to determine which transition to use.
ScaleToFitPillarboxButton
ScaleToFillPillarboxButton
ScaleToFitLetterboxButton
ScaleToFillLetterboxButton
EnterFullScreen
Done
VolumeMuted
VolumeZero
VolumeLow
VolumeMedium
VolumeHigh
ProminentPlaySmall
ProminentPlayLarge
Inline_AirPlay
Inline_MediaSelection
Inline_Pause
Inline_Play
Inline_PiP
Inline_SkipBack15
Inline_SkipForward15
Inline_GotoLive
FullScreen_AirPlay
FullScreen_MediaSelection
FullScreen_Pause
FullScreen_Play
FullScreen_PiP
FullScreen_SkipBack15
FullScreen_SkipForward15
FullScreen_GotoLive
v16@?0@"UIGraphicsImageRendererContext"8
AVRoutePickerViewCircularAirPlayGlyph
AVRoutePickerViewSquareAirPlayGlyph
VolumeGlyph
mute
half
full
stateController
T@"CAStateController",R,N,V_stateController
unscaledSize
T{CGSize=dd},N,V_unscaledSize
layoutDirection
Tq,N,V_layoutDirection
rootLayer
T@"CALayer",&,N,V_rootLayer
state
T@"NSString",R,C,N,V_state
targetSize
T{CGSize=dd},N,V_targetSize
packageName
T@"NSString",R,N,V_packageName
caml
-RTL
v32@?0@"CAState"8Q16^B24
v32@?0@"CALayer"8Q16^B24
classSubstitions
T@"NSDictionary",R,N
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKEventHandler
LKState
Td,R,V_interval
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
T@"AVBackdropView",R,N,V_backdropView
scrubInstructionsBackdrop
T@"AVBackdropView",&,N,V_scrubInstructionsBackdrop
doubleRowLayoutConstraints
T@"NSArray",R,N,V_doubleRowLayoutConstraints
scrubberInstructionsDoubleRowActiveConstraint
T@"NSLayoutConstraint",R,N,V_scrubberInstructionsDoubleRowActiveConstraint
liveBroadcastLabel
T@"AVLabel",R,N,V_liveBroadcastLabel
liveBroadcastScrubberLabel
T@"AVLabel",R,N,V_liveBroadcastScrubberLabel
scrubInstructionsContainer
T@"UIView",R,N,V_scrubInstructionsContainer
scrubInstructionsLabel
T@"UILabel",R,N,V_scrubInstructionsLabel
scrubInstructionsBackdropLabel
T@"UILabel",R,N,V_scrubInstructionsBackdropLabel
scrubInstructionsTimer
T@"NSTimer",W,N,V_scrubInstructionsTimer
scrubberValueWhenScrubInstructionsTimerBegan
Tf,N,V_scrubberValueWhenScrubInstructionsTimerBegan
singleRowViews
T@"NSArray",R,N,V_singleRowViews
backdropViewNeedsLayout
TB,N,V_backdropViewNeedsLayout
T@"<AVTransportControlsViewDelegate>",W,N,V_delegate
doubleRowLayoutEnabled
TB,N,GisDoubleRowLayoutEnabled,V_doubleRowLayoutEnabled
showsLiveStreamingControls
TB,N,V_showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
TB,N,V_liveStreamingControlsIncludeScrubber
minimumRequiredWidth
Td,R,N,V_minimumRequiredWidth
scrubber
T@"AVScrubber",R,N,V_scrubber
elapsedTimeLabel
T@"AVLabel",R,N,V_elapsedTimeLabel
timeRemainingLabel
T@"AVLabel",R,N,V_timeRemainingLabel
standardPlayPauseButton
T@"AVButton",R,N,V_standardPlayPauseButton
skipForwardButton
T@"AVButton",R,N,V_skipForwardButton
skipBackButton
T@"AVButton",R,N,V_skipBackButton
routePickerView
T@"AVPlaybackControlsRoutePickerView",R,N,V_routePickerView
mediaSelectionButton
T@"AVButton",R,N,V_mediaSelectionButton
Slide your finger up to adjust the scrubbing rate.
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SLIDE_UP_TITLE_LABEL_TEXT
v24@?0@"<AVPlaybackControlsViewItem>"8d16
Skip Backward
Skip Forward
Play/Pause
Media Selection
Live
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
Live Broadcast
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_BROADCAST_LABEL_TEXT
Time Remaining
Time Elapsed
@"AVLabel"24@?0@"NSString"8@"NSString"16
playbackControlsView
T@"AVPlaybackControlsView",&,N,V_playbackControlsView
keyValueObservationController
T@"AVKeyValueObservationController",R,N,V_keyValueObservationController
timeResolver
T@"AVPlayerControllerTimeResolver",&,N,V_timeResolver
elapsedTimeFormatter
T@"AVTimeFormatter",R,N,V_elapsedTimeFormatter
remainingTimeFormatter
T@"AVTimeFormatter",R,N,V_remainingTimeFormatter
routePickerAlertController
T@"UIAlertController",W,N,V_routePickerAlertController
routeDetectorCoordinator
T@"AVRouteDetectorCoordinator",&,N,V_routeDetectorCoordinator
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
T@,&,N,V_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
loadingIndicatorTimer
T@"NSTimer",W,N,V_loadingIndicatorTimer
collapseExpandSliderAnimator
T@"UIViewPropertyAnimator",W,N,V_collapseExpandSliderAnimator
containingScrollView
T@"UIScrollView",W,N,V_containingScrollView
showsMediaSelectionButton
showsSkipButtons
showsProminentPlayButton
playButtonsShowPauseGlyph
prominentPlayButtonCanShowPauseGlyph
showsRoutePickerView
includesDoneButton
includesFullScreenButton
showsTransportControls
canShowLoadingIndicator
seekingEnabled
TB,R,N,GisSeekingEnabled
prefersVolumeSliderExpanded
TB,N,V_prefersVolumeSliderExpanded
includesVideoGravityButton
TB,N,V_includesVideoGravityButton
suspended
TB,N,GisSuspended,V_suspended
needsTimeResolver
TB,N,V_needsTimeResolver
coveringWindow
TB,N,GisCoveringWindow,V_coveringWindow
fullScreen
TB,R,N,GisFullScreen
descendantOfTrackingOrAnimatingScrollViewOrScrolledOffscreen
TB,N,GisDescendantOfTrackingOrAnimatingScrollViewOrScrolledOffscreen,V_descendantOfTrackingOrAnimatingScrollViewOrScrolledOffscreen
timeStampOfPreviousObservedScrollViewDidScroll
Td,N,V_timeStampOfPreviousObservedScrollViewDidScroll
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
TB,N,V_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
TB,N,V_multipleRoutesDetected
minimumTime
maximumTime
loadingIndicatorTimerDelay
Td,N,V_loadingIndicatorTimerDelay
resumingUpdates
TB,N,GisResumingUpdates,V_resumingUpdates
prefersAssetInspectionSuspended
TB,N,V_prefersAssetInspectionSuspended
playbackSuspendedForScrubbing
TB,N,GisPlaybackSuspendedForScrubbing,V_playbackSuspendedForScrubbing
timeControlStatus
Tq,N,V_timeControlStatus
hasSeekableLiveStreamingContent
TB,N,V_hasSeekableLiveStreamingContent
scrubbingOrSeeking
TB,N,GisScrubbingOrSeeking,V_scrubbingOrSeeking
shouldIgnoreTimeResolverUpdates
TB,N,V_shouldIgnoreTimeResolverUpdates
videoGravityButtonType
Tq,N,V_videoGravityButtonType
T@"NSString",C,N,V_videoGravity
playbackViewFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playbackViewFrame
T@"AVPlayerController",W,N,V_playerController
playerViewControllerIsBeingTransitioned
TB,N,V_playerViewControllerIsBeingTransitioned
playerViewControllerIsPresentingFullScreen
TB,N,V_playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
TB,N,V_playerViewControllerIsPresentedFullScreen
playerViewControllerHasInvalidViewControllerHierarchy
TB,N,V_playerViewControllerHasInvalidViewControllerHierarchy
shouldEnterFullScreenWhenPlaybackBegins
Tq,N,V_preferredUnobscuredArea
TB,N,V_canHideInteractiveContentOverlayView
TB,N,V_allowsEnteringFullScreen
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
showsPictureInPictureButton
TB,N,V_showsPictureInPictureButton
TB,N,V_showsPlaybackControls
showsDoneButtonWhenFullScreen
TB,N,V_showsDoneButtonWhenFullScreen
pictureInPictureController
T@"AVPictureInPictureController",&,N,V_pictureInPictureController
volumeController
T@"AVVolumeController",R,N,V_volumeController
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen,V_playingOnSecondScreen
playerController.timeControlStatus
v32@?0@8@16@"AVKeyValueChange"24
playerController.scrubbing
playerController.hasSeekableLiveStreamingContent
%@ Cannot observe keypath %@ %@
B16@?0@"UIView"8
*** AVPlayerViewController cannot update status bar visibility while hosted in view service. ***
v32@?0@"AVPlaybackControlsController"8@16@"AVKeyValueChange"24
playerController.canTogglePlayback
playerController.hasLiveStreamingContent
playerController.externalPlaybackActive
volumeController.changingVolume
playerController.muted
Called %@ before creating playback controls view!
Called %@ while suspended! to or from full screen
Called %@, but observation had already begun.
playerController.canSeek
timeResolver.maxTime
timeResolver.minTime
timeResolver.targetTime
playerController.hasMediaSelectionOptions
playerController.hasContent
pictureInPictureController.pictureInPictureActive
playerController.playingOnSecondScreen
controls
T@"NSArray",&,N,V_controls
visibilityBehaviorOptions
Tq,N,V_visibilityBehaviorOptions
initiallyHidden
TB,N,GisInitiallyHidden,V_initiallyHidden
T@"<AVPlaybackControlsVisibilityControllerDelegate>",W,V_delegate
showsViewPreferingStatusBarVisible
canHideViews
TB,N,V_canHideViews
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
popoverPresented
TB,N,GisPopoverPresented,V_popoverPresented
showsViewsWhileWaitingToPlay
TB,N,V_showsViewsWhileWaitingToPlay
viewForUserInteractionObservation
T@"UIView",W,N,V_viewForUserInteractionObservation
v24@?0@"UIView"8@"AVPlaybackControlsVisibilityControllerViewInfo"16
B24@?0@"UIView"8q16
opacity
v32@?0@"AVPlaybackControlsVisibilityController"8@16@"AVKeyValueChange"24
%@ %d
animationDuration
hideViewsTimerInterval
hideViewsQuicklyTimerInterval
volumeChangeHidePlaybackControlTimerInterval
Tq,N,V_state
activeTransition
T@"AVTransition",&,N,V_activeTransition
gestureTracker
T@"AVInteractiveTransitionGestureTracker",R,N,V_gestureTracker
completionSpeed
completionCurve
Tq,R,N
wantsInteractiveStart
Called %@ for transitionContext %@ with active transition %@ for transition context %@
Called %@ without a transitionContext!
%@: Unexpected transition state.
%@ called with an invalid state %ld
%@ state: %ld
Unexpected transitioning state.
Unexpected gesture kind.
%@ asked for an interactive dismissal when it couldn't begin, which should never happen.
%@ asked for an interactive presentation when it couldn't begin, which should never happen.
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
propertyCache
T@"AVPlayerPropertyCache",R,N,V_propertyCache
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
scrubbing
TB,N,GisScrubbing,V_scrubbing
T@"AVPlayer",&,N,V_player
timing
T@"AVValueTiming",&,N,V_timing
minTiming
T@"AVValueTiming",&,N,V_minTiming
maxTiming
T@"AVValueTiming",&,N,V_maxTiming
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
seekToTimeInternal
T{?=qiIq},V_seekToTimeInternal
seekToTime
Td,N,V_seekToTime
metadata
T@"NSDictionary",&,N,V_metadata
contentChapters
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
hasProtectedContent
TB,N,V_hasProtectedContent
availableMetadataFormats
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
rateBeforeScrubBegan
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
deviceBatteryChargingOrFull
TB,N,GisDeviceBatteryChargingOrFull,V_deviceBatteryChargingOrFull
shouldPreventIdleDisplaySleep
seekTimer
T@"NSObject<OS_dispatch_source>",R,N
currentDate
T@"NSDate",R,N
status
error
T@"NSError",R,N
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
segmentDuration: %f
Modifying seekableTimeRange by: %f
skipInterval: %f
sampleBasedSeekTarget: %f
stepByCount: %ld
v12@?0B8
Seek completed: %@
time: %f toleranceBefore: %f toleranceAfter: %f
ScrubbingEnded
ScrubbingStarted
com.apple.motion.notserializable
%@ volume: %f
%@ playing: %d
Can play immediately: %d
Retrying play immediately.
v16@?0d8
Could not play immediately, setting a play immediately retry block.
Calling playImmediatelyAtRate: %f
com.apple.videos
Setting prevent idle display sleep to NO
Setting prevent idle display sleep to YES
Ignoring rate change.
Rate changed to: %f
isPlaybackBufferEmpty: %d
Playback likely to keep up changed to: %@
Time control status = %ld
liveStreamEventModePossible: %d
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
availableChapterLocales
q24@?0@"AVChapter"8@"AVChapter"16
commonMetadata
New asset: %@
New playerItem: %@
PlayerItemDidChange
allowsIdleSleepPrevention
Calls to -stopAllowingIdleSleepPrevention must be counterbalanced with calls to -startAllowingIdleSleepPrevention.
queuePlayer: %d
audioFormats
isPiPAvailable
propertyCache.rate
propertyCache.externalPlaybackActive
propertyCache.playbackLikelyToKeepUp
propertyCache.playbackBufferEmpty
propertyCache.loadedTimeRanges
propertyCache.seekableTimeRanges
propertyCache.timeControlStatus
propertyCache.currentItemIfReady
com.apple.avkit.seekQueue
v16@?0@"NSNotification"8
B8@?0
AVAudioSessionInterruptionTypeEnded: %f
AVAudioSessionInterruptionTypeBegan: %f
v32@?0{?=qiIq}8
player: %p
playingOnExternalScreen
propertyCache.externalPlaybackType
propertyCache.allowsExternalPlayback
propertyCache.canPlayFastReverse
propertyCache.canPlayFastForward
propertyCache.readyToPlay
completelySeekable
propertyCache.seekableTimeRangesLastModifiedTime
propertyCache.liveUpdateInterval
propertyCache.hasLiveStreamingContent
propertyCache.hasEnabledVideo
propertyCache.hasVideo
propertyCache.hasEnabledAudio
propertyCache.forwardPlaybackEndTime
propertyCache.reversePlaybackEndTime
propertyCache.presentationSize
propertyCache.streaming
propertyCache.duration
propertyCache.hasContent
propertyCache.currentAssetIfReady
propertyCache.muted
playing
propertyCache.error
propertyCache.status
TB,N,GisPlayingOnSecondScreen
stackView
T@"UIStackView",R,N,V_stackView
visualEffectView
T@"UIVisualEffectView",R,N,V_visualEffectView
secondaryMaterialOverlayView
T@"UIVisualEffectView",&,N,V_secondaryMaterialOverlayView
secondaryMaterialOverlayViewConstraints
T@"NSArray",&,N,V_secondaryMaterialOverlayViewConstraints
groupName
T@"NSString",C,N,V_groupName
captureView
T@"_UIVisualEffectBackdropView",W,N,V_captureView
axis
Tq,R,N,V_axis
contentLayoutMargins
T{NSDirectionalEdgeInsets=dddd},N
shapeStyle
TQ,N,V_shapeStyle
targetViewForSecondaryMaterialOverlay
T@"UIView",&,N,V_targetViewForSecondaryMaterialOverlay
externalPlaybackIndicatorView
T@"AVExternalPlaybackIndicatorView",R,N,V_externalPlaybackIndicatorView
unsupportedContentIndicatorView
T@"UIImageView",R,N,V_unsupportedContentIndicatorView
audioOnlyIndicatorView
T@"UIImageView",R,N,V_audioOnlyIndicatorView
externalPlaybackIndicatorViewIfLoaded
T@"AVExternalPlaybackIndicatorView",R,N
unsupportedContentIndicatorViewIfLoaded
T@"UIImageView",R,N
audioOnlyIndicatorViewIfLoaded
playerLayerView
T@"__AVPlayerLayerView",R,N,V_playerLayerView
needsInitialLayout
TB,N,V_needsInitialLayout
targetVideoGravities
T@"NSMutableDictionary",R,N,V_targetVideoGravities
automaticVideoGravity
T@"NSString",C,N,V_automaticVideoGravity
captureGroupName
T@"NSString",R,N,V_captureGroupName
T@"_UIVisualEffectBackdropView",R,N,V_captureView
externalPlaybackIndicatorTitle
T@"NSString",C,N,V_externalPlaybackIndicatorTitle
externalPlaybackIndicatorSubtitle
T@"NSString",C,N,V_externalPlaybackIndicatorSubtitle
T@"<AVPlayerViewControllerContentViewDelegate>",W,N,V_delegate
isCoveringWindow
playerLayerAndContentOverlayContainerView
T@"UIView",R,N,V_playerLayerAndContentOverlayContainerView
layoutClass
TQ,R,N
canAutomaticallyZoomLetterboxVideos
TB,N,V_canAutomaticallyZoomLetterboxVideos
T@"UIView",R,N,V_contentOverlayView
iAdPreRollView
T@"UIView",R,N,V_iAdPreRollView
statusBarBackgroundGradientView
T@"AVStatusBarBackgroundGradientView",R,N,V_statusBarBackgroundGradientView
T@"AVPlaybackControlsView",R,N,V_playbackControlsView
isDescendantOfNonPagingScrollView
AudioOnlyIndicator
UnsupportedContentIndicator
com.apple.avkit.SharedPreferences
sublayerTransform
trackingStartTime
Td,N,V_trackingStartTime
wasLongPressed
TB,N,V_wasLongPressed
wasForcePressTriggered
TB,N,V_wasForcePressTriggered
horizontalTranslationOfLongPress
Td,N,V_horizontalTranslationOfLongPress
previousHorizontalPositionOfLongPress
T@"NSNumber",&,N,V_previousHorizontalPositionOfLongPress
force
Td,N,V_force
maximumForceSinceTrackingBegan
Td,N,V_maximumForceSinceTrackingBegan
userInteractionGestureRecognizer
T@"AVUserInteractionObserverGestureRecognizer",&,N,V_userInteractionGestureRecognizer
treatsForcePressAsLongPress
TB,N,V_treatsForcePressAsLongPress
forceThreshold
Td,N,V_forceThreshold
multipleTouchesEndsTracking
TB,N,V_multipleTouchesEndsTracking
imageName
T@"NSString",C,N,V_imageName
fullScreenImageName
T@"NSString",C,N,V_fullScreenImageName
inlineImageName
T@"NSString",C,N,V_inlineImageName
fullScreenAlternateImageName
T@"NSString",C,N,V_fullScreenAlternateImageName
inlineAlternateImageName
T@"NSString",C,N,V_inlineAlternateImageName
disablesHighlightWhenLongPressed
TB,N,V_disablesHighlightWhenLongPressed
v16@?0@"NSTimer"8
%@ Non-Template Image Named %@
Expected a fullScreenPresentationController and got %@ instead.
playbackControlsViewItems
T@"NSArray",R,N,V_playbackControlsViewItems
volumeButtonBottomToLayoutMarginsGuideBottomConstraint
T@"NSLayoutConstraint",R,N,V_volumeButtonBottomToLayoutMarginsGuideBottomConstraint
volumeTopToLayoutGuideTopConstraint
T@"NSLayoutConstraint",R,N,V_volumeTopToLayoutGuideTopConstraint
volumeTopToViewTopConstraint
T@"NSLayoutConstraint",R,N,V_volumeTopToViewTopConstraint
screenModeControlsToVolumeControlsSpacingConstraint
T@"NSLayoutConstraint",R,N,V_screenModeControlsToVolumeControlsSpacingConstraint
needsIntialLayout
TB,N,V_needsIntialLayout
showsProminentPlayButtonVisibilityAnimator
T@"UIViewPropertyAnimator",&,N,V_showsProminentPlayButtonVisibilityAnimator
interactiveContentOverlayViewLayoutMargins
T{UIEdgeInsets=dddd},N,V_interactiveContentOverlayViewLayoutMargins
TB,N,GisFullScreen,V_fullScreen
volumeControlsContainer
T@"UIView",R,N,V_volumeControlsContainer
playbackControlsContainer
T@"UIView",R,N,V_playbackControlsContainer
TB,N,V_showsProminentPlayButton
screenModeControls
T@"AVBackdropView",R,N,V_screenModeControls
volumeControls
T@"AVBackdropView",R,N,V_volumeControls
prominentPlayButtonBackdropView
T@"AVBackdropView",R,N,V_prominentPlayButtonBackdropView
miniPlayPauseButtonBackdropView
T@"AVBackdropView",R,N,V_miniPlayPauseButtonBackdropView
transportControlsContainerView
T@"AVView",R,N,V_transportControlsContainerView
doneButton
T@"AVButton",R,N,V_doneButton
fullScreenButton
T@"AVButton",R,N,V_fullScreenButton
videoGravityButton
T@"AVButton",R,N,V_videoGravityButton
pictureInPictureButton
T@"AVButton",R,N,V_pictureInPictureButton
volumeButton
T@"AVVolumeButtonControl",R,N,V_volumeButton
volumeSlider
T@"AVVolumeSlider",R,N,V_volumeSlider
prominentPlayButton
T@"AVButton",R,N,V_prominentPlayButton
miniPlayPauseButton
T@"AVButton",R,N,V_miniPlayPauseButton
transportControlsView
T@"AVTransportControlsView",R,N,V_transportControlsView
T@"UIView",R,N,V_interactiveContentOverlayView
T@"<AVPlaybackControlsViewDelegate>",W,N,V_delegate
Skipping %@ because status bar is animating to hidden.
%@ called when initial layout not needed already set.
B32@?0@"<AVPlaybackControlsViewItem>"8{CGSize=dd}16
v16@?0q8
Mini Play Pause Button
Central Play
Picture in Picture
Zoom
Full Screen
leadingAnchor
T@"NSLayoutXAxisAnchor",R,N
trailingAnchor
leftAnchor
rightAnchor
topAnchor
T@"NSLayoutYAxisAnchor",R,N
bottomAnchor
widthAnchor
T@"NSLayoutDimension",R,N
heightAnchor
centerXAnchor
centerYAnchor
actionAtItemEnd
Tq,N,V_actionAtItemEnd
allowsExternalPlayback
TB,N,V_allowsExternalPlayback
appliesMediaSelectionCriteriaAutomatically
TB,N,V_appliesMediaSelectionCriteriaAutomatically
usesExternalPlaybackWhileExternalScreenIsActive
TB,N,V_usesExternalPlaybackWhileExternalScreenIsActive
muted
TB,N,GisMuted,V_muted
externalPlaybackType
Tq,N,V_externalPlaybackType
playerStatus
Tq,N,V_playerStatus
externalPlaybackActive
TB,N,GisExternalPlaybackActive,V_externalPlaybackActive
T@"NSError",&,N,V_error
forwardPlaybackEndTime
T{?=qiIq},N,V_forwardPlaybackEndTime
reversePlaybackEndTime
T{?=qiIq},N,V_reversePlaybackEndTime
canUseNetworkResourcesForLiveStreamingWhilePaused
TB,N,V_canUseNetworkResourcesForLiveStreamingWhilePaused
playerItemStatus
Tq,N,V_playerItemStatus
canPlayFastForward
TB,N,V_canPlayFastForward
canPlayFastReverse
TB,N,V_canPlayFastReverse
presentationSize
T{CGSize=dd},N,V_presentationSize
T{?=qiIq},N,V_duration
tracks
T@"NSArray",&,N,V_tracks
T@"NSArray",&,N,V_loadedTimeRanges
seekableTimeRanges
T@"NSArray",&,N,V_seekableTimeRanges
playbackBufferEmpty
TB,N,GisPlaybackBufferEmpty,V_playbackBufferEmpty
playbackBufferFull
TB,N,GisPlaybackBufferFull,V_playbackBufferFull
playbackLikelyToKeepUp
TB,N,GisPlaybackLikelyToKeepUp,V_playbackLikelyToKeepUp
playerItemError
T@"NSError",&,N,V_playerItemError
hasEnabledAudio
TB,N,V_hasEnabledAudio
hasEnabledVideo
TB,N,V_hasEnabledVideo
hasVideo
TB,N,V_hasVideo
liveUpdateInterval
Td,N,V_liveUpdateInterval
seekableTimeRangesLastModifiedTime
Td,N,V_seekableTimeRangesLastModifiedTime
T@"AVPlayer",R,N,V_player
playerIfReady
T@"AVPlayer",&,N,V_playerIfReady
currentItemIfReady
T@"AVPlayerItem",&,N,V_currentItemIfReady
currentAssetIfReady
T@"AVAsset",&,N,V_currentAssetIfReady
streaming
TB,N,GisStreaming,V_streaming
hasLiveStreamingContent
TB,N,V_hasLiveStreamingContent
avPropertyAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_avPropertyAccessQueue
preparingAssetForInspection
TB,N,GisPreparingAssetForInspection,V_preparingAssetForInspection
hasContent
readyToPlay
TB,R,N,GisReadyToPlay
playerError
T@"NSError",R,N,V_playerError
inspectionSuspended
TB,N,GisInspectionSuspended,V_inspectionSuspended
mediaCharacteristics
extendedLanguageTag
mediaType
languageCode
nominalFrameRate
availableVideoDynamicRanges
maximumVideoResolution
availableMediaCharacteristicsWithMediaSelectionOptions
player.currentItem.status
player.status
com.apple.avkit.avPropertyAccessQueue
playerIfReady.currentItem
currentItemIfReady.liveUpdateInterval
currentItemIfReady.seekableTimeRangesLastModifiedTime
currentItemIfReady.seekableTimeRanges
currentItemIfReady.loadedTimeRanges
currentItemIfReady.hasVideo
currentItemIfReady.hasEnabledVideo
currentItemIfReady.hasEnabledAudio
currentItemIfReady.error
currentItemIfReady.playbackLikelyToKeepUp
currentItemIfReady.playbackBufferFull
currentItemIfReady.playbackBufferEmpty
currentItemIfReady.tracks
currentItemIfReady.duration
currentItemIfReady.presentationSize
currentItemIfReady.canPlayFastReverse
currentItemIfReady.canPlayFastForward
currentItemIfReady.canUseNetworkResourcesForLiveStreamingWhilePaused
currentItemIfReady.reversePlaybackEndTime
currentItemIfReady.forwardPlaybackEndTime
playerIfReady.error
playerIfReady.externalPlaybackActive
playerIfReady.timeControlStatus
playerIfReady.muted
playerIfReady.volume
playerIfReady.rate
playerIfReady.externalPlaybackType
playerIfReady.usesExternalPlaybackWhileExternalScreenIsActive
playerIfReady.appliesMediaSelectionCriteriaAutomatically
playerIfReady.allowsExternalPlayback
playerIfReady.actionAtItemEnd
currentItemIfReady.status
T@"<AVRoutePickerViewDelegate>",W,N,V_delegate
activeTintColor
T@"UIColor",&,N
routePickerButtonStyle
Tq,N,V_routePickerButtonStyle
v8@?0
localizedDisplayName
shortLocalizedDisplayName
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
_ignoresTouches
hitTest:withEvent:
ignoresTouches
setIgnoresTouches:
_routeDetectionEnabled
setRouteDetectionEnabled:
multipleRoutesDetected
dealloc
isRouteDetectionEnabled
endDetectingRoutes
beginDetectingRoutes
routeDetectorCoordinatorQueue
sharedSystemRouteDetector
updateMultipleRoutesDetected
setMultipleRoutesDetected:
postNotificationName:object:
defaultCenter
isMainThread
addObserverForName:object:queue:usingBlock:
alloc
_fullScreenViewController
_sourceWindow
_playerViewController
initWithPlayerViewController:
_supportedInterfaceOrientationsForRootViewController
.cxx_destruct
fullScreenViewController
sourceWindow
playerViewController
setPlayerViewController:
rootViewController
setWindowLevel:
windowLevel
setRootViewController:
bounds
window
view
_isHostedInAnotherProcess
avkit_isHostedInAnotherProcess
_loggingLevel
_categories
_reusableLogQueue
_loggingQueue
init
logString:type:logLevel:
actuallyLogString:type:logLevel:
logTrustedString:type:logLevel:
pushCategory:
popCategory:
categories
setCategories:
reusableLogQueue
setReusableLogQueue:
loggingQueue
setLoggingQueue:
lastObject
count
removeLastObject
stringWithFormat:
addObject:
setObject:forKeyedSubscript:
UTF8String
objectForKeyedSubscript:
integerValue
containsObject:
allKeys
environment
processInfo
sharedLogging
substringToIndex:
substringFromIndex:
setWithObjects:
array
countByEnumeratingWithState:objects:count:
componentsJoinedByString:
keyEnumerator
domain
code
initWithFormat:arguments:
rangeOfString:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
playbackControlsViewItemChangedAvailability:
superview
avkit_playbackControlsViewItemAvailabilityObserver
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_playerController
_pictureInPicturePlayerLayerView
initWithFrame:
playerLayer
playerController
setPlayerController:
videoGravity
setVideoGravity:
isReadyForDisplay
videoBounds
isVideoScaled
setVideoScaled:
pixelBufferAttributes
setPixelBufferAttributes:
pictureInPicturePlayerLayerView
startRoutingVideoToPictureInPicturePlayerLayerView
stopRoutingVideoToPictureInPicturePlayerLayerView
didMoveToWindow
setPlaceholderContentLayerDuringPIPMode:
detachPlayerLayer
leavePIPMode
enterPIPModeRedirectingVideoToLayer:
attachPlayerLayer
traitCollection
_simplePlayerLayerView
didChangeValueForKey:
removeFromSuperview
willChangeValueForKey:
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
layer
layerClass
keyPathsForValuesAffectingPlayerLayer
videoRect
isEqualToString:
keyPathsForValuesAffectingVideoLayerGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingVideoScaled
keyPathsForValuesAffectingPixelBufferAttributes
setWithObject:
_timestamp
_velocity
timestamp
setTimestamp:
velocity
setVelocity:
_previousTouchLocationInView
_trackingStartTime
_previousValue
_previousValueChangeTime
_currentValueChangedTime
_didHaveLessThanFullScrubbingSpeedSinceTrackingBegin
_slowKnobMovementDetected
_shouldRecoverFromPrecisionScrubbingIfNeeded
_collapsed
_included
_hasAlternateAppearance
_hasFullScreenAppearance
_estimatedFrameRate
_rate
_feedbackGenerator
_loadedTrackOverlayView
_previousScrubberVelocities
_delegate
_loadedTimeRanges
_scrubbingSpeed
_resolution
_currentThumbView
_updateSlowKnobMovementDetectedTimer
_timestampWhenTrackingEnded
_extrinsicContentSize
_hitRectInsets
feedbackGenerator
loadedTrackOverlayView
previousScrubberVelocities
setLoadedTimeRanges:
clampedEstimatedFrameRate
localizedScrubbingSpeedName
setCurrentThumbView:
timeIntervalSinceTrackingEnded
isCollapsedOrExcluded
setIncluded:
setCollapsed:
setExtrinsicContentSize:
intrinsicContentSize
willMoveToWindow:
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
thumbRectForBounds:trackRect:value:
trackRectForBounds:
createThumbView
setEnabled:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
endOrCancelTracking
alignmentRectInsets
layoutSubviews
hitRect
pointInside:withEvent:
_updateSlowKnobMovementDetected
_updateSlowKnobMovementDetectedForTargetValue:
setPreviousScrubberVelocities:
delegate
setDelegate:
loadedTimeRanges
scrubbingSpeed
setScrubbingSpeed:
estimatedFrameRate
setEstimatedFrameRate:
resolution
setResolution:
hitRectInsets
setHitRectInsets:
rate
setRate:
slowKnobMovementDetected
setSlowKnobMovementDetected:
shouldRecoverFromPrecisionScrubbingIfNeeded
setShouldRecoverFromPrecisionScrubbingIfNeeded:
currentThumbView
updateSlowKnobMovementDetectedTimer
setUpdateSlowKnobMovementDetectedTimer:
timestampWhenTrackingEnded
setTimestampWhenTrackingEnded:
extrinsicContentSize
isCollapsed
isIncluded
hasAlternateAppearance
setHasAlternateAppearance:
hasFullScreenAppearance
setHasFullScreenAppearance:
objectAtIndexedSubscript:
removeObjectsInArray:
scheduledTimerWithTimeInterval:repeats:block:
minimumValue
maximumValue
effectiveUserInterfaceLayoutDirection
setAlpha:
insertSubview:above:
_setCornerRadius:
_cornerRadius
setHidden:
setFrame:
frame
_maxTrackView
floatValue
convertRect:fromView:
_minTrackView
removeAllObjects
setTracking:
sendActionsForControlEvents:
setValue:
selectionChanged
displayScale
center
locationInView:
prepare
_trackEnabled
_thumbHitEdgeInsets
convertPoint:fromView:
setThumbTintColor:
whiteColor
setThumbImage:forState:
setMaximumTrackImage:forState:
setMinimumTrackImage:forState:
setCancelsTouchesInView:
addGestureRecognizer:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
minimumTrackImageForState:
invalidateIntrinsicContentSize
setBackgroundColor:
setNeedsLayout
copy
setUserInteractionEnabled:
initWithImage:
keyPathsForValuesAffectingLocalizedScrubbingSpeedName
_changingVolume
_prefersSystemVolumeHUDHidden
_currentRouteHasVolumeControl
_prefersSystemVolumeHUDHiddenInternal
_EUVolumeLimitEnabled
_EUVolumeLimitOverridden
_volumeChangesThrottled
_canOverrideEUVolumeLimit
_fullyInitialized
_volume
_EUVolumeLimit
_targetVolumeInternal
_maximumTargetVolumeSinceChangingVolumeBegan
_volumeCategory
_sharedSystemController
beginChangingVolume
endChangingVolume
setPrefersSystemVolumeHUDHidden:
setPrefersSystemVolumeHUDHiddenInternal:
setSystemVolumeHUDEnabled:
setVolume:
setTargetVolume:
effectiveVolumeLimit
_observeSystemController
_unobserveSystemController
_handleSystemControllerServerDiedNotification
_handleEUVolumeLimitDidChangeNotification:
_handleSystemVolumeDidChangeNotification:
_handleCurrentRouteHasVolumeControlDidChangeNotification:
_applyProposedVolumeIfNeeded
_applyProposedVolumeImmediately
_performOnMainThread:
isChangingVolume
setChangingVolume:
volume
prefersSystemVolumeHUDHidden
currentRouteHasVolumeControl
setCurrentRouteHasVolumeControl:
prefersSystemVolumeHUDHiddenInternal
EUVolumeLimit
setEUVolumeLimit:
isEUVolumeLimitEnabled
setEUVolumeLimitEnabled:
isEUVolumeLimitOverridden
setEUVolumeLimitOverridden:
volumeChangesThrottled
setVolumeChangesThrottled:
canOverrideEUVolumeLimit
setCanOverrideEUVolumeLimit:
targetVolumeInternal
setTargetVolumeInternal:
maximumTargetVolumeSinceChangingVolumeBegan
setMaximumTargetVolumeSinceChangingVolumeBegan:
volumeCategory
sharedSystemController
setSharedSystemController:
isFullyInitialized
setFullyInitialized:
setVolumeTo:forCategory:
addTimer:forMode:
mainRunLoop
setTolerance:
timerWithTimeInterval:repeats:block:
boolValue
userInfo
removeObserver:name:object:
addObserver:selector:name:object:
allowUserToExceedEUVolumeLimit
numberWithFloat:
setSystemVolumeHUDEnabled:forAudioCategory:
postNotificationName:object:userInfo:
numberWithBool:
getVolume:forCategory:
attributeForKey:
sharedAVSystemController
sharedVolumeController
_image
_imageBlock
_startTime
_duration
_number
_title
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
startTime
duration
number
title
image
initWithCGImage:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
languageCompare:
sortedArrayUsingComparator:
isAC3Only
arrayWithArray:
arrayWithObjects:count:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
isCC
extendedLanguageTag
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
selectMediaOption:inMediaSelectionGroup:
hasMediaSelectionOptions
currentAudioMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
_selectedMediaOptionWithMediaCharacteristic:
setCurrentAudioMediaSelectionOption:
currentLegibleMediaSelectionOption
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
toggleCaptions
reloadOptions
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
mediaType
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
canonicalLanguageIdentifierFromString:
locale
displayName
localizedCaseInsensitiveCompare:
sharedInstance
audioFormats
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
currentItem
asset
mediaSelectionGroupForMediaCharacteristic:
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
setSavedCaptionAppearanceDisplayType:
savedCaptionAppearanceDisplayType
assetCache
isPlayableOffline
mediaSelectionOptionsInMediaSelectionGroup:
options
audioMediaSelectionOptions
audioOptions
legibleOptions
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
_effectiveVolumeLimit
_thumbView
_unclampedValue
_volumeWarningView
setEffectiveVolumeLimit:
unclampedValue
gestureRecognizerShouldBegin:
setValue:animated:
thumbView
setThumbView:
setUnclampedValue:
volumeWarningView
setVolumeWarningView:
animateWithDuration:delay:options:animations:completion:
layoutIfNeeded
startAnimation
addAnimations:
initWithDuration:timingParameters:
initWithDampingRatio:
_solveForInput:
functionWithName:
valueUpdated:
_modulationFeedbackGenerator
positionUpdated:
distance
_edgeFeedbackGenerator
numberWithDouble:
previousLocationInView:
isDescendantOfView:
stopAnimatingAndRemoveFromSuperview
startAnimating
insertSubview:below:
_stopping
_animator
continueAnimating
isStopping
setStopping:
animator
setAnimator:
addCompletion:
initWithDuration:curve:animations:
finishAnimationAtPosition:
stopAnimation:
isInterruptible
isRunning
alpha
systemYellowColor
isHiddenOrHasHiddenAncestor
_trackedTouches
initWithTarget:action:
canBePreventedByGestureRecognizer:
canPreventGestureRecognizer:
shouldRequireFailureOfGestureRecognizer:
shouldBeRequiredToFailByGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEstimatedPropertiesUpdated:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_touchesEndedOrCancelled:
minusSet:
unionSet:
_clientPrefersStatusBarHidden
_statusBarHiddenObserver
start
restoreClientPreference
setStatusBarHidden:
_startObservingStatusBarHiddenIfNeeded
_stopObservingStatusBarHiddenIfNeeded
statusBarHiddenObserver
setStatusBarHiddenObserver:
clientPrefersStatusBarHidden
setClientPrefersStatusBarHidden:
mainQueue
setStatusBarHidden:duration:
_currentAnimationDuration
isStatusBarHidden
_pinchToDismissEnabled
_pinchToPresentEnabled
_panToDismissEnabled
_trackingUpwardPan
_activeGestureType
_rotation
_previousPinchScale
_panGestureRecognizer
_pinchGestureRecognizer
_rotationGestureRecognizer
_recognizers
_locationOfInitialPinchInWindow
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
initWithDelegate:
addRecognizersToView:
isTracking
transitionDidBegin
_handlePinchGesture:
_handleRotationGesture:
_handlePanGesture:
_beginTracking:
_finish
_cancel
_reset
activeGestureType
setActiveGestureType:
isPinchToDismissEnabled
setPinchToDismissEnabled:
isPinchToPresentEnabled
setPinchToPresentEnabled:
isPanToDismissEnabled
setPanToDismissEnabled:
locationOfInitialPinchInWindow
setLocationOfInitialPinchInWindow:
rotation
setRotation:
previousPinchScale
setPreviousPinchScale:
panGestureRecognizer
pinchGestureRecognizer
rotationGestureRecognizer
recognizers
isTrackingUpwardPan
setTrackingUpwardPan:
velocityInView:
translationInView:
scale
setScale:
setTranslation:inView:
_setEndsOnSingleTouch:
setMaximumNumberOfTouches:
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_enabled
_identifier
_shouldOwnNowPlayingInfo
_requiresLinearPlayback
isEnabled
setRequiresLinearPlayback:
observeValueForKeyPath:ofObject:change:context:
_ownsNowPlayingInfo
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo
_updateRegisteredRemoteCommandEnabledStatesWithPlayerController:
_handleRemoteCommandEvent:
requiresLinearPlayback
positionTime
changePlaybackPositionCommand
playbackRate
changePlaybackRateCommand
seekBackwardCommand
type
seekForwardCommand
skipBackwardCommand
skipForwardCommand
previousTrackCommand
nextTrackCommand
togglePlayPauseCommand
stopCommand
playCommand
pauseCommand
sharedCommandCenter
command
setNowPlayingInfo:
initWithBoundsSize:requestHandler:
size
dictionary
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
valueForKey:
nowPlayingInfo
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
stopMediaRemoteSync
removeObserver:
removeTarget:action:
addTarget:action:
object
UUID
_showsGradientWhenStatusBarVisible
_gradientOpacity
setGradientOpacity:
setShowsGradientWhenStatusBarVisible:
_updateGradientOpacity
showsGradientWhenStatusBarVisible
gradientOpacity
setCompositingFilter:
filterWithType:
setLocations:
numberWithInt:
setColors:
CGColor
colorWithWhite:alpha:
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
_fullScreenWindow
_ignoreAppSupportedOrientations
preferredInterfaceOrientationForPresentation
supportedInterfaceOrientations
setFullScreenViewController:
fullScreenWindow
setFullScreenWindow:
interfaceOrientation
_setIdleTimerDisabled:forReason:
updateCornerAppearanceAttributesOfView:similarityToSourceView:
shouldRemovePresentingView
backgroundView
transitionWillBegin
completeTransition:
frameOfPlayerViewControllerWithinContainerView
sourceViewFrameInContainerView
rotationTransformFromPresentedViewToSourceView
transformForDismissalAnimation
rotationTransform:
sourceView
destinationView
isBeingPresented
convertRect:fromWindow:
blackColor
clearColor
modalPresentationStyle
setMaskedCorners:
maskedCorners
setCornerRadius:
cornerRadius
setContinuousCorners:
continuousCorners
clipsToBounds
animateAlongsideNonInteractiveTransitionAnimation
setAutoresizingMask:
_customButton
customButton
updateButtonAppearance
isHidden
_backgroundView
updateWithPercentComplete:translation:rotation:locationInWindow:
animateAlongsideInteractiveTransitionAnimationForCancelling
animateAlongsideInteractiveTransitionAnimationForFinishing
setTransform:
finalFrameForViewController:
insertSubview:atIndex:
isInteractive
avkit_ancestorViewPassingTest:
subviews
convertPoint:toView:
_isInAWindow
avkit_hitTestControlForPoint:withEvent:
avkit_isInAWindowAndVisible
avkit_isAncestorOfViewPassingTest:
avkit_hitTestControlForPoint:withEvent:bestSoFar:shortestDistanceSoFar:
_playerShouldAutoplay
_showsPlaybackControls
_canChangeStatusBarHidden
_videoGravity
_allowsPictureInPicturePlayback
_hasClientSetVideoGravity
_pixelBufferAttributes
_didBeginObservations
_allowsFullScreenPresentationsInNewWindow
_nowPlayingInfoController
_pictureInPictureController
_mediaSelectionPopoverPresentationController
_transitionController
_playbackControlsVisibilityController
_playbackControlsController
_appBasedStatusBarAppearanceController
_playerViewControllerView
_playerLayerView
_screenDidConnectObserver
_screenDidDisconnectObserver
_screenModeDidChangeObserver
_activeAudioRouteDidChangeObserver
_nowPlayingControllerDidReceiveStopCommandEventObserver
_applicationSuspendedObserver
_playerControllerPlaybackDidEndObserver
_playbackControlsViewControllerPictureInPictureButtonEnabled
_transitionFromFullScreenOrDismissViewControllerWhenEnteringBackgroundAfterPictureInPictureStart
_delegateRespondsTo
_showsExitFullScreenButton
_updatesNowPlayingInfoCenter
_entersFullScreenWhenPlaybackBegins
_exitsFullScreenWhenPlaybackEnds
_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
__wasInitializedWithPlayerLayerView
_canPausePlaybackWhenExitingFullScreen
__fullScreenWindow
_secondScreenWindow
_playbackTargetScreen
_finishPreparingForInteractiveDismissalHandler
_interactiveDismissalCompletionHandler
__provideCurrentItemAndInitiatePlayback
transitioningDelegateForFullScreenViewController:
modalPresentationStyleForFullScreenViewController:presentingViewController:
fullScreenViewControllerWillBeginFullScreenPresentation:
viewForFullScreenViewController:
prefersStatusBarHiddenForFullScreenViewController:
fullScreenViewControllerNeedsAppBasedStatusBarAppearanceUpdate:
keyCommandResponderForFullScreenViewController:
playbackControlsVisibilityController:updateStatusBarAppearanceUsingAnimator:
playbackControlsVisibilityController:willShowView:
playbackControlsVisibilityControllerDidChangeViewVisibility:
playbackControlsVisibilityController:animateAlongsideVisibilityAnimations:
playbackControlsVisibilityControllerWillExitAutoplayPhase:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
initWithNibName:bundle:
initWithCoder:
encodeWithCoder:
player
setPlayer:
showsPlaybackControls
setShowsPlaybackControls:
_setVideoGravity:forLayoutClass:
contentOverlayView
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
setUpdatesNowPlayingInfoCenter:
interactiveContentOverlayView
canHidePlaybackControls
setCanHidePlaybackControls:
allowsEnteringFullScreen
setAllowsEnteringFullScreen:
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
canHideInteractiveContentOverlayView
setCanHideInteractiveContentOverlayView:
preferredUnobscuredArea
setPreferredUnobscuredArea:
setEntersFullScreenWhenPlaybackBegins:
enterAutoplayPhase
flashAutoplayControls
playbackControlsController
setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:
setView:
loadView
viewDidLoad
viewWillAppear:
viewDidAppear:
viewDidDisappear:
didMoveToParentViewController:
viewWillTransitionToSize:withTransitionCoordinator:
preferredWhitePointAdaptivityStyle
modalPresentationCapturesStatusBarAppearance
prefersStatusBarHidden
preferredStatusBarStyle
prefersHomeIndicatorAutoHidden
canBecomeFirstResponder
keyCommands
_handleExitFullScreenKeyCommand:
_handlePlayPauseKeyCommand:
_handleSkipBack15SecondsKeyCommand:
_handleSkipAhead15SecondsKeyCommand:
_handleShowNextFrameKeyCommand:
_handleGoToBeginningKeyCommand:
_handleShowPreviousFrameKeyCommand:
_handleVolumeUpKeyPressedCommand:
_handleVolumeUpKeyReleasedCommand:
_handleVolumeDownKeyPressedCommand:
_handleVolumeDownKeyReleasedCommand:
_handleRewindKeyPressedCommand:
_handleRewindKeyReleasedCommand:
_handleFastForwardKeyPressedCommand:
_handleFastForwardKeyReleasedCommand:
_addObservers
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
_isAudioOnlyContent
_updateAudioOnlyIndicatorView
_updateExternalPlaybackIndicatorView
_updatePlayerLayerViewAndContentOverlayView
_updatePlayerLayerViewAndContentOverlayViewExcludingScreen:
_updatePlaybackControlsController
_updateNowPlayingInfoController
_handleDoubleTapGesture:
_handleSingleTapGesture:
_handleDoubleDoubleTapGesture:
_notifyDelegateOfMetricsCollectionEvent:
setPlaybackTargetScreen:
_isDescendantOfRootViewController
_transitionFromFullScreenWithReason:animated:completionHandler:
_canEnterFullScreen
_transitionToFullScreenAnimated:interactive:completionHandler:
_transitionFromFullScreenAnimated:completionHandler:
_restoreContentViewToPlayerViewControllerView
_togglePictureInPicture
_mediaSelectionDoneButtonTapped:
_isTransitioningToOrFromFullScreen
_modalPresentationStyleIsFullScreen
updatesNowPlayingInfoCenter
entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
setExitsFullScreenWhenPlaybackEnds:
_setFullScreenWindow:
secondScreenWindow
setSecondScreenWindow:
playbackTargetScreen
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
setFinishPreparingForInteractiveDismissalHandler:
interactiveDismissalCompletionHandler
setInteractiveDismissalCompletionHandler:
_wasInitializedWithPlayerLayerView
_setWasInitializedWithPlayerLayerView:
canPausePlaybackWhenExitingFullScreen
setCanPausePlaybackWhenExitingFullScreen:
_provideCurrentItemAndInitiatePlayback
_setProvideCurrentItemAndInitiatePlayback:
contentView
shouldAutorotate
userInterfaceIdiom
screen
_supportedInterfaceOrientationsForWindow:
playerViewControllerWillExitAutoplayPhase:
performWithoutAnimation:
animateAlongsideTransition:completion:
transitionCoordinator
setNeedsUpdateOfHomeIndicatorAutoHidden
setNeedsStatusBarAppearanceUpdate
isPresentedFullScreen
isPresentingFullScreenFromInline
playbackControlsVisibilityController
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
animateWithDuration:animations:
playerViewControllerDidStopPictureInPicture:
playerViewControllerWillStopPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
dismissViewControllerAnimated:completion:
presentingViewController
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
pictureInPictureWasStartedWhenEnteringBackground
playerViewControllerDidStartPictureInPicture:
playerViewControllerWillStartPictureInPicture:
presentedViewController
isBeingDismissed
stopPictureInPicture
startPictureInPicture
isPictureInPictureActive
isPictureInPicturePossible
attemptRotationToDeviceOrientation
_synchronizeDrawing
setAutorotates:forceUpdateInterfaceOrientation:
isCancelled
setAutorotates:
autorotates
presentViewController:animated:completion:
_viewControllerForFullScreenPresentationFromView:
_updateInterfaceOrientationFromDeviceOrientation:
makeKeyAndVisible
playerViewController:shouldExitFullScreenWithReason:
keyWindow
viewIfLoaded
parentViewController
setScreen:
setOverscanCompensation:
playerViewController:metricsCollectionEventOccured:
displayCornerRadius
bundleIdentifier
mainBundle
reverseObjectEnumerator
screens
mainScreen
setNumberOfTouchesRequired:
setNumberOfTapsRequired:
initWithPlayerLayerView:
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
togglePlayback:
doneButtonTapped:
addObjectsFromArray:
setDiscoverabilityTitle:
keyCommandWithInput:modifierFlags:action:upAction:
mutableCopy
keyCommandWithInput:modifierFlags:action:discoverabilityTitle:
statusBarStyle
isDoubleHeight
statusBar
isNavigationBarHidden
navigationController
setTransitioningDelegate:
transitioningDelegate
requireGestureRecognizerToFail:
isViewLoaded
loadViewIfNeeded
convertRect:toView:
raise:format:
dispatchQueue
encodeInteger:forKey:
encodeBool:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
decodeObjectForKey:
containsValueForKey:
keyPathsForValuesAffectingPlayer
keyPathsForValuesAffectingVideoGravity
iAdPrerollView
needsLayout
isPictureInPictureSuspended
showsExitFullScreenButton
setShowsExitFullScreenButton:
enterFullScreenAnimated:completionHandler:
exitFullScreenAnimated:completionHandler:
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingPictureInPictureActive
keyPathsForValuesAffectingPictureInPictureSuspended
keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
setSourceView:
_setIgnoreAppSupportedOrientations:
toggleMuted:
videoGravityButtonTapped:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
canBeginInteractivePresentationTransition
canBeginInteractiveDismissalTransition
beginInteractivePresentationTransition
beginInteractiveDismissalTransition
prepareForFinishingInteractiveTransition:
_presentationBackgroundView
_contentView
initWithDelegate:presentingViewController:sourceView:
fullScreenPresentationWillBegin
targetForAction:withSender:
viewWillDisappear:
presentationBackgroundView
canChangeStatusBarHidden
setCanChangeStatusBarHidden:
setContentView:
setModalPresentationStyle:
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
viewWillResize
viewDidResize
actionButtonTapped
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
initWithPictureInPicturePlayerLayerView:
keyPathsForValuesAffectingShouldShowAlternateActionButtonImage
keyPathsForValuesAffectingShouldShowLoadingIndicator
_imageView
_titleLabel
_subtitleLabel
_containerView
_textLabelsContainer
setTitleString:subtitleString:
setSpacing:
layoutFrame
layoutMarginsGuide
constraintEqualToAnchor:multiplier:
setNumberOfLines:
setContentMode:
_flatImageWithColor:
imageNamed:inBundle:
setBaselineRelativeArrangement:
setAxis:
setAlignment:
setTextColor:
setTextAlignment:
setLineBreakMode:
systemFontOfSize:
mutableCopyWithZone:
classForCoder
_timing
anchorValue
anchorTimeStamp
encodeDouble:forKey:
initWithAnchorValue:anchorTimeStamp:rate:
decodeDoubleForKey:
initWithValueTiming:
allocWithZone:
setAnchorValue:
setAnchorTimeStamp:
_value
_timeStamp
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
_controllerIvarAccessQueue
_proxyObserversByTokens
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
stopObserving
allValues
removeObjectForKey:
token
startObserving
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:changesBlock:
initWithValue:oldValue:keyPath:observationToken:
_oldValue
_keyPath
_observationToken
value
oldValue
keyPath
observationToken
null
_retainedObservedObject
_unsafeUnretainedObservedObject
_context
_proxyObserverIvarAccessQueue
_previousValues
_includeInitialValue
_token
_observer
_keyPaths
_changesBlock
observedObject
_handleValueChangeForKeyPath:ofObject:context:
includeInitialValue
observer
keyPaths
changesBlock
valueForKeyPath:
anyObject
globallyUniqueString
setWithArray:
dictionaryWithCapacity:
_selectedAudioMediaSelectionOption
_selectedLegibleMediaSelectionOption
initWithStyle:
_isSelectedOrCurrentAudioMediaSelectionOption:
_isSelectedOrCurrentLegibleMediaSelectionOption:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:willDisplayHeaderView:forSection:
tableView:didSelectRowAtIndexPath:
deselectRowAtIndexPath:animated:
setAccessoryType:
indexPathForCell:
visibleCells
section
representedObject
cellForRowAtIndexPath:
textLabel
setTintColor:
setRepresentedObject:
setBackgroundView:
dequeueReusableCellWithIdentifier:forIndexPath:
flashScrollIndicators
tableView
notifyWhenInteractionChangesUsingBlock:
initiallyInteractive
indexPathsForSelectedRows
reloadData
numberOfSections
setEstimatedRowHeight:
lineHeight
preferredFontForTextStyle:
setSeparatorColor:
registerClass:forCellReuseIdentifier:
_representedObject
configureLayerView:
contentConfig
configWithContentConfig:
layerWithFillColor:opacity:filterType:
initWithEffect:
effectCombiningEffects:
effectWithBlurRadius:
colorEffectSaturate:
setTitle:
_mediaSelectionTableViewController
initWithPlayerController:doneButtonTarget:doneButtonAction:
mediaSelectionTableViewController
viewWillLayoutSubviews
setBarStyle:
navigationBar
setModalPresentationCapturesStatusBarAppearance:
setRightBarButtonItem:
initWithBarButtonSystemItem:target:action:
navigationItem
initWithRootViewController:
initialFrameForViewController:
setCenter:
transform
_setRotatableViewOrientation:duration:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
_playerLayer
_pictureInPictureProxy
_pictureInPictureViewController
_fullScreenCheckTimer
_isPlaying
_isFullScreen
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
initWithPlayerLayer:
stopPictureInPictureEvenWhenInBackground
playerLayerLayoutDidChange
_window
_playerLayerVideoRectInScreen
_checkIsFullScreenAndUpdatePictureInPictureShouldStartWhenEnteringBackground
_updatePictureInPictureShouldStartWhenEnteringBackground
_updatePlaybackProgress
preferredContentSizeDidChangeForViewController
setPreferredContentSize:
stopPictureInPictureAndRestoreUserInterface:
setPlaybackProgress:playbackRate:
setPictureInPictureShouldStartWhenEnteringBackground:
convertRect:fromLayer:
settings
_scene
convertRect:toLayer:
superlayer
applicationState
sharedApplication
isPIPModeEnabled
isPictureInPictureSupported
initWithControlsStyle:viewController:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
imageNamed:inBundle:compatibleWithTraitCollection:
_showsLoadingIndicator
_label
_loadingIndicatorAlignment
_text
_font
_loadingIndicator
_loadingIndicatorLeftAlignmentConstraint
_loadingIndicatorRightAlignmentConstraint
label
labelIfLoaded
setFont:
setLoadingIndicatorAlignment:
setShowsLoadingIndicator:
setText:
didMoveToSuperview
tintColorDidChange
updateConstraints
viewForFirstBaselineLayout
viewForLastBaselineLayout
showsLoadingIndicator
loadingIndicatorAlignment
text
font
loadingIndicator
loadingIndicatorLeftAlignmentConstraint
setLoadingIndicatorLeftAlignmentConstraint:
loadingIndicatorRightAlignmentConstraint
setLoadingIndicatorRightAlignmentConstraint:
constraintEqualToAnchor:
setActive:
translatesAutoresizingMaskIntoConstraints
tintColor
setNeedsUpdateConstraints
initWithActivityIndicatorStyle:
_managesContentViewLayout
_primaryScreen
initWithContentView:
primaryScreen
setManagesContentViewLayout:
setClipsToBounds:
managesContentViewLayout
setPrimaryScreen:
_attributedText
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
initWithTraitCollection:opaque:
layoutSublayers
textBoundingRectWhenDrawnInRect:
boundingRectWithSize:options:context:
setPosition:
setWrapped:
setTruncationMode:
setString:
setAlignmentMode:
setForegroundColor:
setFontSize:
addSublayer:
setContentsScale:
setContentsGravity:
setContents:
CGImage
ascender
initWithString:attributes:
_automaticallyDrawsRoundedCorners
_backdropView
addSubview:applyingMaterialStyle:tintEffectStyle:
setAutomaticallyDrawsRoundedCorners:
_isContainedInOverlappingBackgroundView
automaticallyDrawsRoundedCorners
backdropView
setBackdropView:
sendSubviewToBack:
_trackingState
_longPressEnabled
_showsHighlightedAppearance
_micaPackageStateName
_highlightAnimator
_micaPackage
_longPressTimer
_translationOfPanFromPreviousTouch
_cumulativeTranslationSincePanningBegan
_locationOfTouchInWindow
_initialPreciseLocationOfTouch
setMicaPackage:
setMicaPackageStateName:
triggerSelectionChangedFeedback
setShowsHighlightedAppearance:
setTrackingState:
setBounds:
_updateMicaPackage:
micaPackageStateName
isLongPressEnabled
setLongPressEnabled:
translationOfPanFromPreviousTouch
setTranslationOfPanFromPreviousTouch:
cumulativeTranslationSincePanningBegan
setCumulativeTranslationSincePanningBegan:
locationOfTouchInWindow
setLocationOfTouchInWindow:
highlightAnimator
setHighlightAnimator:
micaPackage
initialPreciseLocationOfTouch
setInitialPreciseLocationOfTouch:
longPressTimer
setLongPressTimer:
trackingState
showsHighlightedAppearance
commit
setDisableActions:
begin
position
precisePreviousLocationInView:
preciseLocationInView:
setIsAccessibilityElement:
setAccessibilityIdentifier:
_interval
_currentTime
_timer
_minTime
_maxTime
interval
setInterval:
currentTime
setCurrentTime:
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
encodeObject:forKey:
automaticallyNotifiesObserversOfCurrentTime
CMTimeRangeValue
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
targetTime
setTargetTime:
_wasInitiallyInteractive
_transitionContext
_currentAnimator
_interactiveTransitionPercentComplete
initWithTransitionContext:playerViewController:
toView
fromView
containerView
toViewController
fromViewController
pauseInteractiveTransition
animatorWithDurationFactor:
finishInteractiveTransition
cancelInteractiveTransition
animateNonInteractiveTransition
transformForScale:translation:rotation:locationInWindow:sourceRectInContainerView:
transitionContext
currentAnimator
setCurrentAnimator:
interactiveTransitionPercentComplete
setInteractiveTransitionPercentComplete:
wasInitiallyInteractive
setWasInitiallyInteractive:
updateInteractiveTransition:
initWithAnimationCurve:
viewControllerForKey:
viewForKey:
isAnimated
transitionWithTransitionContext:playerViewController:
initWithSize:
setFill
fillRect:
imageWithActions:
resizableImageWithCapInsets:
imageWithRenderingMode:
avkit_flatWhiteResizableTemplateImage
_state
_packageName
_stateController
_layoutDirection
_rootLayer
_targetSize
_unscaledSize
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
initWithPackageName:layoutDirection:
rootLayer
setTargetSize:
setState:color:
_setState:
_recursivelyFindSublayerWithName:rootLayer:
_recursivelySetFillColor:rootLayer:
transitionToStateWithName:
transitionToStateWithName:onLayer:
availableStates
availableStatesOnLayer:
sublayerWithName:
_loadRootLayerIfNeeded
state
targetSize
unscaledSize
setUnscaledSize:
packageName
stateController
layoutDirection
setLayoutDirection:
setRootLayer:
initWithLayer:
result
parseContentsOfURL:
parser
activateBackground:
stringByAppendingString:
enumerateObjectsUsingBlock:
name
states
setState:ofLayer:transitionSpeed:
stateWithName:
setFillColor:
sublayers
classSubstitions
asynchronouslyPrepareMicaPackageWithName:layoutDirection:completion:
_queue
_invalidated
initWithTimeInterval:queue:block:repeats:
invalidate
_doubleRowLayoutEnabled
_showsLiveStreamingControls
_liveStreamingControlsIncludeScrubber
_backdropViewNeedsLayout
_scrubberValueWhenScrubInstructionsTimerBegan
_minimumRequiredWidth
_scrubber
_elapsedTimeLabel
_timeRemainingLabel
_standardPlayPauseButton
_skipForwardButton
_skipBackButton
_routePickerView
_mediaSelectionButton
_scrubInstructionsBackdrop
_doubleRowLayoutConstraints
_scrubberInstructionsDoubleRowActiveConstraint
_liveBroadcastLabel
_liveBroadcastScrubberLabel
_scrubInstructionsContainer
_scrubInstructionsLabel
_scrubInstructionsBackdropLabel
_scrubInstructionsTimer
_singleRowViews
scrubberSlowKnobMovementDetected:
setDoubleRowLayoutEnabled:
setShowsLiveStreamingControls:
setLiveStreamingControlsIncludeScrubber:
traitCollectionDidChange:
beginScrubbing:
scrubberValueChanged:
endScrubbing:
_ensureLayoutConstraints
_updateFontSizes
_showScrubInstructions
_updateScrubInstructionsLabelsText
_scrubInstructionsAttributedText
isDoubleRowLayoutEnabled
showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
minimumRequiredWidth
scrubber
elapsedTimeLabel
timeRemainingLabel
standardPlayPauseButton
skipForwardButton
skipBackButton
routePickerView
mediaSelectionButton
scrubInstructionsBackdrop
setScrubInstructionsBackdrop:
doubleRowLayoutConstraints
scrubberInstructionsDoubleRowActiveConstraint
liveBroadcastLabel
liveBroadcastScrubberLabel
scrubInstructionsContainer
scrubInstructionsLabel
scrubInstructionsBackdropLabel
scrubInstructionsTimer
setScrubInstructionsTimer:
scrubberValueWhenScrubInstructionsTimerBegan
setScrubberValueWhenScrubInstructionsTimerBegan:
singleRowViews
backdropViewNeedsLayout
setBackdropViewNeedsLayout:
appendAttributedString:
systemFontOfSize:weight:
pointSize
preferredFontForTextStyle:compatibleWithTraitCollection:
setAttributedText:
isEqualToAttributedString:
attributedText
constraintGreaterThanOrEqualToAnchor:constant:
firstBaselineAnchor
lastBaselineAnchor
setPriority:
constraintEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:
deactivateConstraints:
bringSubviewToFront:
addTarget:action:forControlEvents:
_playerViewControllerIsBeingTransitioned
_playerViewControllerIsPresentingFullScreen
_playerViewControllerIsPresentedFullScreen
_playerViewControllerHasInvalidViewControllerHierarchy
_canHideInteractiveContentOverlayView
_allowsEnteringFullScreen
_showsPictureInPictureButton
_showsDoneButtonWhenFullScreen
_prefersAssetInspectionSuspended
_playingOnSecondScreen
_prefersVolumeSliderExpanded
_includesVideoGravityButton
_suspended
_needsTimeResolver
_coveringWindow
_descendantOfTrackingOrAnimatingScrollViewOrScrolledOffscreen
_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
_multipleRoutesDetected
_resumingUpdates
_playbackSuspendedForScrubbing
_hasSeekableLiveStreamingContent
_scrubbingOrSeeking
_shouldIgnoreTimeResolverUpdates
_keyValueObservationController
_preferredUnobscuredArea
_volumeController
_playbackControlsView
_timeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_routePickerAlertController
_routeDetectorCoordinator
_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
_loadingIndicatorTimer
_collapseExpandSliderAnimator
_containingScrollView
_timeStampOfPreviousObservedScrollViewDidScroll
_loadingIndicatorTimerDelay
_timeControlStatus
_videoGravityButtonType
_playbackViewFrame
playerViewControllerContentViewIsPlayingOnSecondScreen:
playerViewControllerContentView:didLoadPlaybackControlsView:
playerViewControllerContentViewDidLayoutSubviews:
playerViewControllerContentViewDidMoveToWindow:
playerViewControllerContentViewShouldApplyAutomaticVideoGravity:
playerViewControllerContentViewDidChangeVideoGravity:
playerViewControllerContentViewIsBeingTransitionedToOrFromFullScreen:
_observeScrollViewDidScroll:
routePickerViewWillBeginPresentingRoutes:
routePickerViewDidEndPresentingRoutes:
transportControlsNeedsLayoutIfNeeded:
transportControls:scrubberDidBeginScrubbing:
transportControls:scrubberDidScrub:
transportControls:scrubberDidEndScrubbing:
setPrefersVolumeSliderExpanded:
resumeUpdates
stopUpdates
setSuspended:
setPlayerViewControllerIsBeingTransitioned:
isFullScreen
includesDoneButton
includesFullScreenButton
showsRoutePickerView
showsProminentPlayButton
prominentPlayButtonCanShowPauseGlyph
showsTransportControls
shouldEnterFullScreenWhenPlaybackBegins
showsMediaSelectionButton
minimumTime
maximumTime
isSeekingEnabled
showsSkipButtons
canShowLoadingIndicator
playButtonsShowPauseGlyph
playbackControlsViewDidLoad:
visibilityControllerWillShowView:
playbackControlsVisibilityDidChange
handleVolumeChange:
handleCurrentRouteSupportsVolumeControlChanged:
volumeSliderValueDidChange:
volumeButtonTapTriggered:
volumeButtonLongPressTriggered:
volumeButtonPanChanged:
_prefersVolumeSliderExpandedAutomatically
_showOrHideVolumeSlider
_updateVolumeButtonGlyph
_volumeButtonMicaPackageState
_updateVolumeSliderValueWithSystemVolume:animated:
setContainingScrollView:
_updateContainedInTrackingOrAnimatingScrollView
prominentPlayButtonTouchUpInside:
skipButtonTouchUpInside:
skipButtonLongPressTriggered:
skipButtonLongPressEnded:
skipButtonForcePressChanged:
keyValueObservationController
_bindEnabledStateOfControls:toKeyPath:
_bindInclusionOfControlItems:toKeyPath:
_observeBoolForKeyPath:observationHandler:
_seekByTimeInterval:toleranceBefore:toleranceAfter:
_startObservingPotentiallyUnimplementedPlayerControllerProperties
_startOrUpdateVisibilityControllerManagementOfViewVisibility
_stopVisibilityControllerManagementOfViewVisibilityIfNeeded
_updateOrCreateTimeResolverIfNeeded
_updateScrubberAndTimeLabels
_updateVideoGravityButtonType
_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:playing:userDidEndTappingProminentPlayButton:
_updateSuspended
playerViewControllerIsBeingTransitioned
playerViewControllerIsPresentingFullScreen
setPlayerViewControllerIsPresentingFullScreen:
playerViewControllerIsPresentedFullScreen
setPlayerViewControllerIsPresentedFullScreen:
playerViewControllerHasInvalidViewControllerHierarchy
setPlayerViewControllerHasInvalidViewControllerHierarchy:
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
showsPictureInPictureButton
setShowsPictureInPictureButton:
showsDoneButtonWhenFullScreen
setShowsDoneButtonWhenFullScreen:
pictureInPictureController
setPictureInPictureController:
volumeController
prefersAssetInspectionSuspended
setPrefersAssetInspectionSuspended:
isPlayingOnSecondScreen
setPlayingOnSecondScreen:
playbackControlsView
setPlaybackControlsView:
timeResolver
setTimeResolver:
elapsedTimeFormatter
remainingTimeFormatter
routePickerAlertController
setRoutePickerAlertController:
routeDetectorCoordinator
setRouteDetectorCoordinator:
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
setAVRouteDetectorCoordinatorMultipleRoutesDetectedObserver:
loadingIndicatorTimer
setLoadingIndicatorTimer:
collapseExpandSliderAnimator
setCollapseExpandSliderAnimator:
containingScrollView
prefersVolumeSliderExpanded
includesVideoGravityButton
setIncludesVideoGravityButton:
isSuspended
needsTimeResolver
setNeedsTimeResolver:
isCoveringWindow
setCoveringWindow:
isDescendantOfTrackingOrAnimatingScrollViewOrScrolledOffscreen
setDescendantOfTrackingOrAnimatingScrollViewOrScrolledOffscreen:
timeStampOfPreviousObservedScrollViewDidScroll
setTimeStampOfPreviousObservedScrollViewDidScroll:
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
setHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:
loadingIndicatorTimerDelay
setLoadingIndicatorTimerDelay:
isResumingUpdates
setResumingUpdates:
isPlaybackSuspendedForScrubbing
setPlaybackSuspendedForScrubbing:
timeControlStatus
setTimeControlStatus:
hasSeekableLiveStreamingContent
setHasSeekableLiveStreamingContent:
isScrubbingOrSeeking
setScrubbingOrSeeking:
shouldIgnoreTimeResolverUpdates
setShouldIgnoreTimeResolverUpdates:
videoGravityButtonType
setVideoGravityButtonType:
playbackViewFrame
setPlaybackViewFrame:
_isClassic
setMaximumValue:
setMinimumValue:
stringFromSeconds:
setFormatTemplate:
reason
isDecelerating
_addScrollViewScrollObserver:
_removeScrollViewScrollObserver:
_isInAnimationBlock
horizontalSizeClass
nativeBounds
isValid
setStyle:
keyPathsForValuesAffectingFullScreen
keyPathsForValuesAffectingIncludesDoneButton
keyPathsForValuesAffectingIncludesFullScreenButton
keyPathsForValuesAffectingShowsRoutePickerView
keyPathsForValuesAffectingShowsProminentPlayButton
keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph
keyPathsForValuesAffectingShowsTransportControls
keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins
keyPathsForValuesAffectingShowsMediaSelectionButton
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinimumTime
keyPathsForValuesAffectingMaximumTime
keyPathsForValuesAffectingSeekingEnabled
keyPathsForValuesAffectingShowsSkipButtons
keyPathsForValuesAffectingCanShowLoadingIndicator
keyPathsForValuesAffectingPlayButtonsShowPauseGlyph
_initiallyHidden
_controls
_visibilityBehaviorOptions
controls
setControls:
visibilityBehaviorOptions
setVisibilityBehaviorOptions:
isInitiallyHidden
setInitiallyHidden:
_visibilityAnimator
_viewsAndViewInfos
_userInteractionObserverGestureRecognizer
_animationDuration
_visibilityNeedsUpdate
_prefersRegularViewsVisible
_prefersViewsVisibleTimerInterval
_prefersViewsVisibleTimerIntervalForQuicklyHiding
_prefersRegularViewsVisibleTimer
_prefersViewsShownForVolumeChangeVisible
_prefersViewsShownForVolumeChangeVisibleTimerInterval
_prefersViewsShownForVolumeChangeVisibleTimer
_hidesViewQuicklyWhenPlaybackBegins
_popoverPresented
_pictureInPictureActive
_scrubbing
_transitionInProgress
_playbackWasPausedAndVisibilityNotToggledAfterPausing
_loadingIndicatorWasShownAndVisibilityNotToggledAfterLoadingIndicatorShown
_inAutoplayPhase
_temporarilyAvoidAnimationsWhenStartingToControlViewVisibility
_statusBarAppearanceNeedsUpdate
_canHideViews
_showsViewsWhileWaitingToPlay
_viewForUserInteractionObservation
activeAudioRouteOrSystemVolumeDidChange
startHidingViewQuicklyWhenPlaybackBegins
stopHidingViewQuicklyWhenPlaybackBegins
showsViewPreferingStatusBarVisible
temporarilyAvoidAnimationsWhenStartingToControlViewVisibility
beginTransitionAndHideViewsAnimated:completionHandler:
endTransition
toggleVisibility
startControllingVisibilityOfView:visibilityBehaviorOptions:
stopControllingVisibilityOfView:
setViewForUserInteractionObservation:
_startControllingVisibilityIfNeeded
_updateVisibilityWithCompletionHandler:
_setVisibilityNeedsUpdate
_updateControlViewVisibilityIfNeeded
_exitAutoplayPhaseIfNeeded
_performForEachView:
_viewsPassingTest:
_hasViewsThatCanBeShown
_hasViewsThatCanBeHidden
_handleUserInteractionObservationRecognizer:
_showViewsShownForVolumeChange
_showViewsShownForVolumeChangeAndHideAfterDelay
_startTimerToHideViewsShownForVolumeChange
_stopTimerToHideViewsShownForVolumeChangeIfPlaying
_hideViewsShownForVolumeChange
_showRegularViews
_showRegularViewsAndHideAfterDelay
_showRegularViewsAndHideAfterDelayIfPlaying
_startTimerToHideRegularViewsIfPlaying
_startTimerToHideRegularViews
_startTimerToHideRegularViewsAfterDelay:ifPlaying:
_stopTimerToHideRegularControlsIfPlaying
_hideRegularViews
_stopInitiallyHidingViews
_stopInitiallyHidingViewsThatAreShownForVolumeChanges
_userIsInteractingWithViews
canHideViews
setCanHideViews:
setPictureInPictureActive:
isPopoverPresented
setPopoverPresented:
showsViewsWhileWaitingToPlay
setShowsViewsWhileWaitingToPlay:
viewForUserInteractionObservation
currentRunLoop
animationForKey:
removeGestureRecognizer:
setObject:forKey:
weakToStrongObjectsMapTable
animationDuration
setAnimationDuration:
hideViewsTimerInterval
setHideViewsTimerInterval:
hideViewsQuicklyTimerInterval
setHideViewsQuicklyTimerInterval:
volumeChangeHidePlaybackControlTimerInterval
setVolumeChangeHidePlaybackControlTimerInterval:
_activeTransition
_gestureTracker
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
completionSpeed
completionCurve
wantsInteractiveStart
startInteractiveTransition:
interruptibleAnimatorForTransition:
animationEnded:
transitionDuration:
animateTransition:
gestureTrackerShouldTrackPinchToPresent:
gestureTrackerShouldTrackPinchToDismiss:
gestureTrackerShouldTrackPanToDismiss:
gestureTracker:didBeginTrackingGesture:
gestureTracker:didTrackPercentComplete:translation:rotation:locationInWindow:
gestureTrackerDidCancelTracking:
gestureTrackerDidFinishTracking:
_animationControllerForPlayerViewController
_createActiveTransitionIfNeededForTransitionContext:
setState:
activeTransition
setActiveTransition:
gestureTracker
_jKeyDown
_kKeyDown
_lKeyDown
_audioMediaSelectionOptions
_legibleMediaSelectionOptions
_savedCaptionAppearanceDisplayType
_isResumed
_seekTimer
_timeOfLastUpdate
_seekQueue
_ignoreRateKeyValueChange
_observationInfo
_updateAtMinMaxTimePeriodicObserverToken
_timebaseEffectiveRateObserver
_timebaseTimeJumpedObserver
_playerItemTimeJumpedObserver
_playerItemDidPlayToEndTimeObserver
_audioSessionInterruptionObserver
_currentLocaleDidChangeObserver
_pictureInPictureInterrupted
_rateToRestoreAfterAudioSessionInterruptionEnds
_isPictureInPictureSupported
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_pendingSeek
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_forceScanning
_rateBeforeForceScanning
_deviceBatteryStateDidChangeObserver
_deviceBatteryMonitoringWasEnabled
_allowsIdleSleepPreventionCount
_atMaxTime
_atMinTime
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_deviceBatteryChargingOrFull
_player
_propertyCache
_minTiming
_maxTiming
_seekToTime
_metadata
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_seekToTimeInternal
initWithPlayer:
observationInfo
setObservationInfo:
_queuePlayer
status
error
isCompletelySeekable
startAllowingIdleSleepPrevention
stopAllowingIdleSleepPrevention
allowsIdleSleepPrevention
shouldPreventIdleDisplaySleep
_retryPlayImmediatelyIfNeeded
canPlayImmediately
seekTimer
_handleSeekTimerEvent
canPlay
isPlaying
setPlaying:
play:
autoplay:
canPause
pause:
canTogglePlayback
togglePlaybackEvenWhenInBackground:
isLooping
setLooping:
updateAtMinMaxTime
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isMuted
setMuted:
isInspectionSuspended
setInspectionSuspended:
currentAssetIfReady
hasContent
contentDuration
nominalFrameRate
isStreaming
contentDimensions
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
_setMinTiming:maxTiming:
contentDurationWithinEndTimes
currentDate
seekableTimeRanges
hasEnabledAudio
hasVideo
hasEnabledVideo
hasContentChapters
hasLiveStreamingContent
hasTrimmableContent
hasShareableContent
_isRestrictedFromSavingPlayerItem:
_isMarkedNotSerializablePlayerItem:
canSeek
seekToTime:
beginScrubbing
endScrubbing
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
beginScanningForward:
_updateScanningForwardRate
endScanningForward:
canScanBackward
scanBackward:
beginScanningBackward:
_updateScanningBackwardRate
endScanningBackward:
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
skipBackwardThirtySeconds:
gotoEndOfSeekableRanges:
seekToChapter:
canSeekChapterForward
seekChapterForward:
canSeekChapterBackward
seekChapterBackward:
updateTiming
updateMinMaxTiming
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isExternalPlaybackActive
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_cancelPendingSeeksIfNeeded
scanningDelays
propertyCache
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
isScrubbing
setScrubbing:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
isSeekingInternal
setSeekingInternal:
isSeeking
setSeeking:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
metadata
setMetadata:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
isDeviceBatteryChargingOrFull
setDeviceBatteryChargingOrFull:
cancelPendingSeeks
deviceName
outputDevices
supportsMultipleOutputDevices
sharedAudioPresentationOutputContext
firstObject
timebase
assetTrack
stepByCount:
canStepBackward
canStepForward
doubleValue
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
getBytes:length:
dataValue
objectAtIndex:
numberWithUnsignedInt:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
timeRange
tracksWithMediaType:
_setUserVolume:
_userVolume
setAttribute:forKey:error:
items
playImmediatelyAtRate:
isPiPAvailable
sortUsingComparator:
stringValue
arrayWithCapacity:
chapterMetadataGroupsBestMatchingPreferredLanguages:
arrayByAddingObject:
preferredLanguages
loadValuesAsynchronouslyForKeys:completionHandler:
statusOfValueForKey:error:
dictionaryWithDictionary:
commonMetadata
removeTimeObserver:
setBatteryMonitoringEnabled:
currentDevice
batteryState
isBatteryMonitoringEnabled
unsignedIntegerValue
addPeriodicTimeObserverForInterval:queue:usingBlock:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingShouldPreventIdleDisplaySleep
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingCurrentAssetIfReady
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
setRateWithForce:
functionWithControlPoints::::
_temporaryArrangedSubviews
_stackView
_visualEffectView
_axis
_shapeStyle
_targetViewForSecondaryMaterialOverlay
_secondaryMaterialOverlayView
_secondaryMaterialOverlayViewConstraints
_groupName
_captureView
initWithArrangedSubviews:
stackView
visualEffectView
setArrangedSubviews:axis:
setCustomSpacing:afterView:
setCustomSpacing:afterViews:
setTargetViewForSecondaryMaterialOverlay:
contentLayoutMargins
setContentLayoutMargins:
setShapeStyle:
setSemanticContentAttribute:
setCaptureGroupName:captureView:
_stackViewIfLoaded
_applyShapeStyle
_ensureGroupNameAndCaptureView
_updateTransparencyOfVisualEffectView
axis
shapeStyle
targetViewForSecondaryMaterialOverlay
secondaryMaterialOverlayView
setSecondaryMaterialOverlayView:
secondaryMaterialOverlayViewConstraints
setSecondaryMaterialOverlayViewConstraints:
groupName
setGroupName:
captureView
setCaptureView:
setBackgroundEffects:
baseEffects
_setContinuousCornerRadius:
_setCaptureView:
_setGroupName:
setDirectionalLayoutMargins:
directionalLayoutMargins
addArrangedSubview:
arrangedSubviews
setInsetsLayoutMarginsFromSafeArea:
setLayoutMarginsRelativeArrangement:
removeAllFiltersFromView:
applyPrimaryGlyphTintToView:
applySecondaryGlyphTintToView:
configureSlider:thumbView:loadedTrackView:
applyBaseTrackTintToView:
applyCompletedTrackTintToView:
applyLoadedTrackTintToView:
configureView:forTintEffectWithColor:filterType:
configureView:withBackgroundFillOfColor:opacity:filter:
effectCompositingColor:withMode:alpha:
layerWithTintColor:filterType:
_setTextColorFollowsTintColor:
setAllowsGroupBlending:
colorWithRed:green:blue:alpha:
_canAutomaticallyZoomLetterboxVideos
_needsInitialLayout
_automaticVideoGravity
_externalPlaybackIndicatorView
_unsupportedContentIndicatorView
_audioOnlyIndicatorView
_contentOverlayView
_playerLayerAndContentOverlayContainerView
_iAdPreRollView
_statusBarBackgroundGradientView
_targetVideoGravities
_captureGroupName
_externalPlaybackIndicatorTitle
_externalPlaybackIndicatorSubtitle
configureBackdropView:
playbackControlsView:interactiveContentOverlayViewLayoutMarginsDidChange:shouldLayoutIfNeeded:
initWithFrame:playerLayerView:
automaticVideoGravity
setAutomaticVideoGravity:
externalPlaybackIndicatorView
externalPlaybackIndicatorViewIfLoaded
unsupportedContentIndicatorView
unsupportedContentIndicatorViewIfLoaded
audioOnlyIndicatorView
audioOnlyIndicatorViewIfLoaded
playerLayerAndContentOverlayContainerView
iAdPreRollView
statusBarBackgroundGradientView
addPlayerLayerAndContentOverlayContainerViewIfNeeded
isViewDescendantOfPlaybackControlsSubview:
setShowsUnsupportedContentIndicator:
setShowsAudioOnlyIndicator:
setShowsExternalPlaybackIndicator:
setExternalPlaybackIndicatorTitle:subtitle:
setTargetVideoGravity:forLayoutClass:
isDescendantOfNonPagingScrollView
layoutClass
canPerformAction:withSender:
_updateVideoGravityDuringLayoutSubviewsAndAssertThatIfYouBreakThisMethodYouOwnThisMethod
_updatePlayerLayerAndContentOverlayContainerViewLayoutMarginsForVideoGravity:
_applyVideoGravityIfNeeded:
_mediaTimingFunctionForCurrentAnimationCurve
canAutomaticallyZoomLetterboxVideos
setCanAutomaticallyZoomLetterboxVideos:
playerLayerView
needsInitialLayout
setNeedsInitialLayout:
targetVideoGravities
captureGroupName
externalPlaybackIndicatorTitle
setExternalPlaybackIndicatorTitle:
externalPlaybackIndicatorSubtitle
setExternalPlaybackIndicatorSubtitle:
_currentAnimationCurve
removeAllAnimations
avkit_removeAllSublayerTransformAnimations
setAnimationTimingFunction:
setLayoutMargins:
layoutMargins
numberWithUnsignedInteger:
isPagingEnabled
statusBarFrame
insertSubview:belowSubview:
setEdgesInsettingLayoutMarginsFromSafeArea:
captureGroup
setRenderMode:
setAutomaticVideoGravity:completion:
remoteObjectProxy
resume
setRemoteObjectInterface:
interfaceWithProtocol:
initWithServiceName:
animationKeys
containsString:
removeAnimationForKey:
_wasLongPressed
_treatsForcePressAsLongPress
_multipleTouchesEndsTracking
_disablesHighlightWhenLongPressed
_wasForcePressTriggered
_forceThreshold
_force
_maximumForceSinceTrackingBegan
_imageName
_fullScreenImageName
_inlineImageName
_fullScreenAlternateImageName
_inlineAlternateImageName
_horizontalTranslationOfLongPress
_previousHorizontalPositionOfLongPress
_userInteractionGestureRecognizer
setImageName:
setWasLongPressed:
setForce:
setMultipleTouchesEndsTracking:
setHighlighted:
setImage:forState:
_preferredLayoutSize
_handleUserInteractionGestureRecognizer:
_resetTrackedState
_updateImageIfNeeded
_preferredImageName
wasLongPressed
treatsForcePressAsLongPress
setTreatsForcePressAsLongPress:
forceThreshold
setForceThreshold:
force
maximumForceSinceTrackingBegan
setMaximumForceSinceTrackingBegan:
multipleTouchesEndsTracking
imageName
fullScreenImageName
setFullScreenImageName:
inlineImageName
setInlineImageName:
fullScreenAlternateImageName
setFullScreenAlternateImageName:
inlineAlternateImageName
setInlineAlternateImageName:
disablesHighlightWhenLongPressed
setDisablesHighlightWhenLongPressed:
trackingStartTime
setTrackingStartTime:
wasForcePressTriggered
setWasForcePressTriggered:
horizontalTranslationOfLongPress
setHorizontalTranslationOfLongPress:
previousHorizontalPositionOfLongPress
setPreviousHorizontalPositionOfLongPress:
userInteractionGestureRecognizer
setUserInteractionGestureRecognizer:
numberOfTouches
imageForState:
imageView
isHighlighted
renderingMode
_imageThatSuppressesAccessibilityHairlineThickening
buttonWithAccessibilityIdentifier:
setAdjustsImageWhenHighlighted:
_setVisualEffectViewEnabled:backgroundColor:
buttonWithType:
fontDescriptorWithSize:
fontWithDescriptor:size:
fontWithName:size:
timeFontWithFont:
boldSystemFontOfSize:
italicSystemFontOfSize:
monospacedDigitSystemFontOfSize:weight:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
fontDescriptor
fontDescriptorByAddingAttributes:
_fullScreen
_showsProminentPlayButton
_needsIntialLayout
_volumeControlsContainer
_playbackControlsContainer
_screenModeControls
_volumeControls
_prominentPlayButtonBackdropView
_miniPlayPauseButtonBackdropView
_transportControlsContainerView
_doneButton
_fullScreenButton
_videoGravityButton
_pictureInPictureButton
_volumeButton
_volumeSlider
_prominentPlayButton
_miniPlayPauseButton
_transportControlsView
_interactiveContentOverlayView
_playbackControlsViewItems
_volumeButtonBottomToLayoutMarginsGuideBottomConstraint
_volumeTopToLayoutGuideTopConstraint
_volumeTopToViewTopConstraint
_screenModeControlsToVolumeControlsSpacingConstraint
_showsProminentPlayButtonVisibilityAnimator
_interactiveContentOverlayViewLayoutMargins
setFullScreen:
setShowsProminentPlayButton:
setInteractiveContentOverlayViewLayoutMargins:
animateAlongsideVisibilityChangeIfNeeded
safeAreaInsetsDidChange
updateInteractiveContentOverlayViewLayoutMargins
_updateDoubleRowTransportControlsEnabled
_setupInitialLayout
_statusBarOrientationWillChange:
_statusBarFrameWillChange:
_statusBarFrameDidChange:
_statusBarHiddenDidChange:
_updateLayoutMargins
_updateLayoutMargins:
_isDescendantOfNonPagingScrollView
volumeControlsContainer
playbackControlsContainer
screenModeControls
volumeControls
prominentPlayButtonBackdropView
miniPlayPauseButtonBackdropView
transportControlsContainerView
doneButton
fullScreenButton
videoGravityButton
pictureInPictureButton
volumeButton
volumeSlider
prominentPlayButton
miniPlayPauseButton
transportControlsView
playbackControlsViewItems
volumeButtonBottomToLayoutMarginsGuideBottomConstraint
volumeTopToLayoutGuideTopConstraint
volumeTopToViewTopConstraint
screenModeControlsToVolumeControlsSpacingConstraint
needsIntialLayout
setNeedsIntialLayout:
showsProminentPlayButtonVisibilityAnimator
setShowsProminentPlayButtonVisibilityAnimator:
interactiveContentOverlayViewLayoutMargins
_peripheryInsets
orientation
safeAreaInsets
presentationLayer
opacity
_isInAnimationBlockWithAnimationsEnabled
CGRectValue
verticalSizeClass
statusBarOrientation
bundle
bundleForClass:
localizedStringForKey:value:table:
avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:
avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:
avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:
avkit_constraintsFromDimensionAnchorsToSize:
leadingAnchor
trailingAnchor
leftAnchor
rightAnchor
topAnchor
bottomAnchor
widthAnchor
heightAnchor
centerXAnchor
centerYAnchor
avkit_constraintEqualToAnchor:priority:
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:constant:
avkit_constraintGreaterThanOrEqualToAnchor:priority:
avkit_constraintLessThanOrEqualToAnchor:priority:
avkit_constraintEqualToAnchor:constant:priority:
avkit_constraintGreaterThanOrEqualToAnchor:constant:priority:
avkit_constraintLessThanOrEqualToAnchor:constant:priority:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
avkit_constraintEqualToConstant:priority:
avkit_constraintGreaterThanOrEqualToConstant:priority:
avkit_constraintLessThanOrEqualToConstant:priority:
avkit_constraintsFromEdgesOfItem:toLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:priority:
avkit_constraintsFromEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromLeadingAndTrailingEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromTopAndBottomEdgesOfItem:toEdgesOfItem:
constraintEqualToConstant:
_hasLiveStreamingContent
_allowsExternalPlayback
_appliesMediaSelectionCriteriaAutomatically
_usesExternalPlaybackWhileExternalScreenIsActive
_muted
_externalPlaybackActive
_canUseNetworkResourcesForLiveStreamingWhilePaused
_canPlayFastForward
_canPlayFastReverse
_playbackBufferEmpty
_playbackBufferFull
_playbackLikelyToKeepUp
_hasEnabledAudio
_hasEnabledVideo
_hasVideo
_inspectionSuspended
_streaming
_preparingAssetForInspection
_currentItemIfReady
_externalPlaybackType
_playerStatus
_playerError
_playerItemStatus
_seekableTimeRanges
_playerItemError
_liveUpdateInterval
_seekableTimeRangesLastModifiedTime
_currentAssetIfReady
_error
_tracks
_playerIfReady
_avPropertyAccessQueue
_presentationSize
_forwardPlaybackEndTime
_reversePlaybackEndTime
setCurrentAssetIfReady:
isReadyToPlay
_prepareAssetForInspectionIfNeeded
_shouldInspectValueForKey:
_updateHasLiveStreamingContent
currentItemIfReady
setCurrentItemIfReady:
setHasLiveStreamingContent:
actionAtItemEnd
setActionAtItemEnd:
appliesMediaSelectionCriteriaAutomatically
setAppliesMediaSelectionCriteriaAutomatically:
usesExternalPlaybackWhileExternalScreenIsActive
setUsesExternalPlaybackWhileExternalScreenIsActive:
setExternalPlaybackType:
playerStatus
setPlayerStatus:
setExternalPlaybackActive:
playerError
playerItemStatus
setPlayerItemStatus:
canPlayFastForward
setCanPlayFastForward:
canPlayFastReverse
setCanPlayFastReverse:
presentationSize
setPresentationSize:
setDuration:
setSeekableTimeRanges:
isPlaybackBufferEmpty
setPlaybackBufferEmpty:
isPlaybackBufferFull
setPlaybackBufferFull:
isPlaybackLikelyToKeepUp
setPlaybackLikelyToKeepUp:
playerItemError
setPlayerItemError:
setHasEnabledAudio:
setHasEnabledVideo:
setHasVideo:
liveUpdateInterval
setLiveUpdateInterval:
seekableTimeRangesLastModifiedTime
setSeekableTimeRangesLastModifiedTime:
setStreaming:
setError:
tracks
setTracks:
playerIfReady
setPlayerIfReady:
avPropertyAccessQueue
isPreparingAssetForInspection
setPreparingAssetForInspection:
propertiesDependentOnHasLiveStreaming
keysForUpdatingHasLiveStreamingContent
setValue:forKey:
defaultValuesForProperties
playerItemPropertiesWhitelistedForBackgroundAccess
playerPropertiesWhitelistedForBackgroundAccess
keyPathsToPropertyNames
propertyNamesToKeyPaths
keyPathsForValuesAffectingReadyToPlay
valueWithCGSize:
valueWithCMTime:
numberWithInteger:
_activeTintColor
_routePickerButton
_oldSize
_buttonHighlightAnimator
_airPlayActive
_routePickerButtonMicaPackage
_routePickerViewController
_routePickerButtonStyle
activeTintColor
setActiveTintColor:
isAirPlayActive
setAirPlayActive:
setCustomButton:
_createOrUpdateRoutePickerButton
_routePickerButtonTapped:
_routePickerButtonTouchDown:
_routePickerButtonTouchDragEnter:
_routePickerButtonTouchUp:
_setRoutePickerButtonAlpha:animated:
_registerNotifications
_unregisterNotifications
_outputContextDevicesDidChange:
_updateAirPlayActive
_defaultActiveTintColor
routePickerButtonStyle
setRoutePickerButtonStyle:
setDidDismissHandler:
startPrewarming
setContentVerticalAlignment:
setContentHorizontalAlignment:
setContentEdgeInsets:
localizedDisplayName
shortLocalizedDisplayName
@40@0:8{CGPoint=dd}16@32
B16@0:8
v20@0:8B16
v16@0:8
@16@0:8
@"AVFullScreenViewController"
@"UIWindow"
@"AVPlayerViewController"
@24@0:8@16
Q16@0:8
v24@0:8@16
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
v36@0:8@16C24q28
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@"UIView<AVPlaybackControlsViewItem>"16
@"AVPlayerController"
@"AVPictureInPicturePlayerLayerView"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q16@0:8
v24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"_AVSimplePlayerLayerView"
d16@0:8
v24@0:8d16
{CGPoint="x"d"y"d}
@"UISelectionFeedbackGenerator"
@"UIView"
@"<AVScrubberDelegate>"
@"NSArray"
@"UIImageView"
@"NSTimer"
{CGSize="width"d"height"d}
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
f16@0:8
v32@0:8{CGSize=dd}16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
B32@0:8@16@24
v32@0:8@16@24
{UIEdgeInsets=dddd}16@0:8
B40@0:8{CGPoint=dd}16@32
v20@0:8f16
{NSDirectionalEdgeInsets=dddd}16@0:8
v48@0:8{NSDirectionalEdgeInsets=dddd}16
@"NSNumber"
@"NSString"
@"AVSystemController"
v24@0:8@?16
@"UIImage"
@24@0:8^{_NSZone=}16
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
q24@0:8@16
@"AVVolumeWarningView"
v24@0:8f16B20
@"UIViewPropertyAnimator"
@"NSMutableSet"
@32@0:8@16:24
@"<AVInteractiveTransitionGestureTrackerDelegate>"
@"UIPanGestureRecognizer"
@"UIPinchGestureRecognizer"
@"UIRotationGestureRecognizer"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"NSUUID"
v48@0:8@16@24@32^v40
@40@0:8@16{CGSize=dd}24
v32@0:8@16d24
{CGAffineTransform=dddddd}16@0:8
{CGAffineTransform=dddddd}24@0:8d16
@"AVButton"
v64@0:8d16{CGPoint=dd}24d40{CGPoint=dd}48
@24@0:8@?16
B24@0:8@?16
v56@0:8{CGPoint=dd}16@32N^@40N^d48
@"NSDictionary"
@"AVNowPlayingInfoController"
@"AVPictureInPictureController"
@"UIPopoverPresentationController"
@"AVTransitionController"
@"AVPlaybackControlsVisibilityController"
@"AVPlaybackControlsController"
@"AVAppBasedStatusBarAppearanceController"
@"AVPlayerView"
@"__AVPlayerLayerView"
@"<AVPlayerViewControllerDelegate>"
{?="playerViewControllerWillStartPictureInPicture"B"playerViewControllerDidStartPictureInPicture"B"playerViewController_failedToStartPictureInPictureWithError"B"playerViewControllerWillStopPictureInPicture"B"playerViewControllerDidStopPictureInPicture"B"playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart"B"playerViewController_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"B"playerViewController_shouldExitFullScreenWithReason"B"playerViewControllerMetricsCollectionEventOccured"B"playerViewControllerWillExitAutoplayPhase"B}
@"AVWindow"
@"UIScreen"
@"<UIViewControllerTransitioningDelegate>"24@0:8@"AVFullScreenViewController"16
q32@0:8@"AVFullScreenViewController"16@"UIViewController"24
v24@0:8@"AVFullScreenViewController"16
@"UIView"24@0:8@"AVFullScreenViewController"16
B24@0:8@"AVFullScreenViewController"16
@"UIResponder"24@0:8@"AVFullScreenViewController"16
q32@0:8@16@24
v32@0:8@"AVPlaybackControlsVisibilityController"16@"<UIViewImplicitlyAnimating>"24
v32@0:8@"AVPlaybackControlsVisibilityController"16@"UIView"24
v24@0:8@"AVPlaybackControlsVisibilityController"16
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
@32@0:8@16q24
v40@0:8@16q24@32
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
v32@0:8@16@?24
@32@0:8@16@24
v32@0:8@16Q24
v40@0:8{CGSize=dd}16@32
v36@0:8q16B24@?28
v32@0:8B16B20@?24
v28@0:8B16@?20
@?16@0:8
@"<AVFullScreenViewControllerDelegate>"
@40@0:8@16@24@32
@"<AVPictureInPictureViewControllerDelegate>"
{?="pictureInPictureViewControllerViewDidAppear"B"pictureInPictureViewControllerViewWillDisappear"B}
@"UILabel"
@"UIStackView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@44@0:8@16@24B32@?36
@48@0:8@16@24@32@40
@"NSSet"
@56@0:8@16@24@32B40B44@?48
v40@0:8@16@24^v32
@"AVMediaSelectionOption"
@24@0:8q16
q32@0:8@16q24
v40@0:8@16@24q32
@"AVMediaSelectionTableViewController"
@40@0:8@16@24:32
@"AVPlayerLayer"
@"PGPictureInPictureProxy"
@"AVPictureInPictureViewController"
@"NSObject<OS_dispatch_source>"
@"<AVPictureInPictureControllerDelegate>"
{?="pictureInPictureControllerWillStartPictureInPicture"B"pictureInPictureControllerDidStartPictureInPicture"B"pictureInPictureController_failedToStartPictureInPictureWithError"B"pictureInPictureControllerWillStopPictureInPicture"B"pictureInPictureControllerDidStopPictureInPicture"B"pictureInPictureController_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"B}
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v40@0:8@"PGPictureInPictureProxy"16q24q32
v24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v32@0:8@16q24
v40@0:8@16q24q32
v24@0:8@"AVPictureInPictureViewController"16
@"UIFont"
@"UIActivityIndicatorView"
@"NSLayoutConstraint"
@"AVPlayerViewControllerContentView"
@"NSAttributedString"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"CATextLayer"
@"CALayer"
@28@0:8@16B24
@"AVBackdropView"
@"AVMicaPackage"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<AVTimeControlling>"
@"AVTimer"
@"<UIViewControllerContextTransitioning>"
@24@0:8d16
{CGAffineTransform=dddddd}96@0:8d16{CGPoint=dd}24d40{CGPoint=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64
@"CAStateController"
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v36@0:8@16@24f32
v36@0:8@16@24B32
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24[1{__va_list_tag=II^v^v}]32Q40
v40@0:8@16@24@32
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24[1{__va_list_tag=II^v^v}]32Q40
v32@0:8@16^{CGColor=}24
v32@0:8^{CGColor=}16@24
v40@0:8@16q24@?32
@44@0:8d16@24@?32B40
@"<AVTransportControlsViewDelegate>"
@"AVScrubber"
@"AVLabel"
@"AVPlaybackControlsRoutePickerView"
v24@0:8@"AVScrubber"16
@"AVKeyValueObservationController"
@"AVVolumeController"
@"AVPlaybackControlsView"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"UIAlertController"
@"AVRouteDetectorCoordinator"
@"UIScrollView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B24@0:8@"AVPlayerViewControllerContentView"16
v32@0:8@"AVPlayerViewControllerContentView"16@"AVPlaybackControlsView"24
v24@0:8@"AVPlayerViewControllerContentView"16
v24@0:8@"UIScrollView"16
v24@0:8@"AVRoutePickerView"16
v24@0:8@"AVTransportControlsView"16
v32@0:8@"AVTransportControlsView"16@"AVScrubber"24
v40@0:8d16d24d32
v28@0:8B16B20B24
@"NSMapTable"
@"AVUserInteractionObserverGestureRecognizer"
@"<AVPlaybackControlsVisibilityControllerDelegate>"
v28@0:8d16B24
@"AVTransition"
@"AVInteractiveTransitionGestureTracker"
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v24@0:8@"<UIViewControllerContextTransitioning>"16
d24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
d24@0:8@16
B24@0:8@"AVInteractiveTransitionGestureTracker"16
v32@0:8@"AVInteractiveTransitionGestureTracker"16q24
v72@0:8@"AVInteractiveTransitionGestureTracker"16d24{CGPoint=dd}32d48{CGPoint=dd}56
v24@0:8@"AVInteractiveTransitionGestureTracker"16
v72@0:8@16d24{CGPoint=dd}32d48{CGPoint=dd}56
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVValueTiming"
@"AVPlayer"
@"AVPlayerPropertyCache"
^v16@0:8
v24@0:8^v16
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
@"UIVisualEffectView"
@"_UIVisualEffectBackdropView"
v32@0:8d16@24
v24@0:8Q16
v48@0:8@16@24d32@40
@"AVExternalPlaybackIndicatorView"
@"AVStatusBarBackgroundGradientView"
@"<AVPlayerViewControllerContentViewDelegate>"
v24@0:8@"AVBackdropView"16
v60@0:8@"AVPlaybackControlsView"16{UIEdgeInsets=dddd}24B56
v60@0:8@16{UIEdgeInsets=dddd}24B56
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
B32@0:8:16@24
v32@0:8@"NSString"16@?<v@?>24
@32@0:8@16d24
@"AVView"
@"AVVolumeButtonControl"
@"AVVolumeSlider"
@"AVTransportControlsView"
@"<AVPlaybackControlsViewDelegate>"
v48@0:8{UIEdgeInsets=dddd}16
@"NSArray"24@0:8@"<AVKitLayoutItem>"16
@"NSArray"32@0:8{CGSize=dd}16
@"NSLayoutXAxisAnchor"16@0:8
@"NSLayoutYAxisAnchor"16@0:8
@"NSLayoutDimension"16@0:8
@32@0:8{CGSize=dd}16
@60@0:8@16@24@32@40@48f56
@28@0:8@16f24
@36@0:8@16d24f32
@28@0:8d16f24
@"AVPlayerItem"
@"NSError"
@"AVAsset"
@"UIColor"
@"UIButton"
@"MPMediaControlsViewController"
@"<AVRoutePickerViewDelegate>"
--- %{public}@ ---
%{public}@
mediaOption: %{public}@ mediaCharacteristic: %{public}@
