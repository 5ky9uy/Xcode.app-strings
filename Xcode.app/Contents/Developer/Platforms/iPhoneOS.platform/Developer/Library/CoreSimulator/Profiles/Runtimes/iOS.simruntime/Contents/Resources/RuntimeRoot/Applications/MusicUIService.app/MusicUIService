music_setWantsDefaultLayoutInsets
class
initWithNibName:bundle:
_updateLibraryFiltering
shouldPreventShowingTextServices
_canShowTextServices
viewDidLoad
whiteColor
view
setBackgroundColor:
tintColor
setTintColor:
viewWillAppear:
_hostAuditToken
_addNavigationControllerIfNecessary
viewDidAppear:
numberWithBool:
dictionaryWithObjects:forKeys:count:
setAlpha:
animateWithDuration:animations:
_clientViewControllerProxy
remoteMediaPickerDidCancel
navigationController
reset
viewDidDisappear:
dismissViewControllerAnimated:completion:
serviceViewControllerInterface
exportedInterface
setAllowsPickingMultipleItems:
setPrompt:
setShowsCloudItems:
setShowsItemsWithProtectedAssets:
setMediaTypes:
setShouldPreventShowingTextServices:
setPicksSingleCollectionEntity:
setWatchCompatibilityVersion:
count
firstObject
isKindOfClass:
alloc
itemsQuery
initWithItemsQuery:
collectionWithItems:
remoteMediaPickerDidPickMediaItems:
setAllowsMultipleSelection:
copy
_remoteViewControllerProxy
defaultCenter
postNotificationName:object:
defaultMediaLibrary
additionalLibraryFilterPredicates
countByEnumeratingWithState:objects:count:
removeLibraryFilterPredicate:
numberWithUnsignedInteger:
predicateWithValue:forProperty:
addLibraryFilterPredicate:
setCloudFilteringType:
defaultContext
setClientContext:
setMediaPickerDelegate:
addChildViewController:
addSubview:
bounds
setFrame:
setAutoresizingMask:
didMoveToParentViewController:
_exportedInterface
_remoteViewControllerInterface
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
serviceMediaPickerSetAllowsPickingMultipleItems:
serviceMediaPickerSetPrompt:
serviceMediaPickerSetShowsCloudItems:
serviceMediaPickerSetShowsItemsWithProtectedAssets:
serviceMediaPickerSetMediaTypes:
serviceMediaPickerSetShouldPreventShowingTextServices:
serviceMediaPickerSetPicksSingleCollectionEntity:
serviceMediaPickerSetWatchCompatibilityVersion:
mediaPickerNavigationController:didFinishWithSelectedEntities:
_hostApplicationWillEnterForeground
_hostApplicationDidEnterBackground
.cxx_destruct
mediaTypes
allowsPickingMultipleItems
showsCloudItems
showsItemsWithProtectedAssets
prompt
picksSingleCollectionEntity
watchCompatibilityVersion
setNavigationController:
_allowsPickingMultipleItems
_showsCloudItems
_showsItemsWithProtectedAssets
_picksSingleCollectionEntity
_shouldPreventShowingTextServices
_watchCompatibilityVersion
_mediaTypes
_prompt
_navigationController
init
_screenDidConnect:
addObserver:selector:name:object:
_screenDidDisconnect:
removeObserver:
dealloc
object
_isCarScreen
_carScreen
materialViewWithRecipe:options:initialWeighting:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
setTransform:
dismiss
setDismissalBlock:
widthAnchor
constraintEqualToConstant:
topAnchor
constraintEqualToAnchor:
bottomAnchor
centerXAnchor
leftAnchor
rightAnchor
arrayWithObjects:count:
activateConstraints:
initWithTarget:action:
setEnabled:
setDelegate:
addGestureRecognizer:
_createAnimationForPresenting:completion:
deactivate
invalidate
standardSpringAnimator
setWeighting:
addAnimations:
addCompletion:
startAnimation
_setEndpoint:
initWithListenerEndpoint:
openConnection
interfaceWithProtocol:
setRemoteObjectInterface:
updateMediaControlsWithConfiguration:
setExportedInterface:
setExportedObject:
setConnection:
setInvalidationHandler:
resume
setSwipeDismissalStyle:
setDismissalAnimationStyle:
setDesiredHardwareButtonEvents:
setAllowsMenuButtonDismissal:
setAllowsAlertStacking:
sharedApplication
statusBarOrientation
setLaunchingInterfaceOrientation:
userInfo
objectForKeyedSubscript:
unarchivedObjectOfClass:fromData:error:
setConfiguration:
startPrewarming
shouldPreventAutorotation
setOrientationChangedEventsEnabled:
xpcEndpoint
connectionWithEndpoint:
remoteObjectProxyWithErrorHandler:
configureWithContext:completion:
events
enumerateObjectsUsingBlock:
presentingAppBundleID
locationInView:
pointInside:withEvent:
_isSecureForRemoteViewService
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
prefersStatusBarHidden
_shouldRemoveViewFromHierarchyOnDisappear
handleButtonActions:
backgroundView
setBackgroundView:
endpointViewController
setEndpointViewController:
tapGestureRecognizer
setTapGestureRecognizer:
connection
_backgroundView
_endpointViewController
_tapGestureRecognizer
_connection
associatedBundleID
stateName
isEqualToString:
traitCollection
userInterfaceIdiom
_performSwitchToNowPlayingForBundleID:showNowPlaying:
traitCollectionDidChange:
refreshNavigationStackForLaunch
saveCurrentStack
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
objectForKey:
initWithBundleID:stack:
setNeedsFocusUpdate
currentStack
setObject:forKey:
removeObjectForKey:
viewWillDisappear:
removeChildViewController:
preferredFocusEnvironments
switchToState:
_nowPlayingViewController
_displayedViewControllerKey
_bundleIDsToStacks
_firstLaunchCompleted
_needsSwitch
sharedDefaults
beginObservingDefaultsChanges
beginGeneratingLibraryChangeNotifications
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
_screenManager
333333
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
navigationController
T@"MusicMediaPickerNavigationController",&,N,V_navigationController
shouldPreventShowingTextServices
TB,N,V_shouldPreventShowingTextServices
mediaTypes
TQ,N,V_mediaTypes
allowsPickingMultipleItems
TB,N,V_allowsPickingMultipleItems
showsCloudItems
TB,N,V_showsCloudItems
showsItemsWithProtectedAssets
TB,N,V_showsItemsWithProtectedAssets
prompt
T@"NSString",C,N,V_prompt
picksSingleCollectionEntity
TB,N,V_picksSingleCollectionEntity
watchCompatibilityVersion
TI,N,V_watchCompatibilityVersion
v16@?0q8
v16@?0@"NSError"8
v24@?0@"SBUIRemoteAlertButtonAction"8^B16
backgroundView
T@"MTMaterialView",&,N,V_backgroundView
endpointViewController
T@"MediaControlsEndpointsViewController",&,N,V_endpointViewController
tapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_tapGestureRecognizer
connection
T@"NSXPCConnection",&,N,V_connection
nowplaying
window
T@"UIWindow",&,N
Cancelling MPMediaPickerController, the requesting app does not have access
Creating XPC connection to host app.
XPC connection to host app invalidated.
Successfully deserialized the initial media controls configuration.
Error occured while atempting to retrive remote proxy to open connection: %@
Attempting to open connection to host app.
Dismissing view service due to home button event.
Received updated media controls configuration from:  %@
MusicUIServiceMediaPickerController
MPServiceMediaPickerController
NSObject
MusicMediaPickerDelegate
MusicUIServiceScreenManager
MPMediaControlsProtocol
MPMediaControlsRemoteViewControllerProtocol
MusicUIServiceMediaControlsViewController
UIGestureRecognizerDelegate
MusicUIServiceCarDisplayBrowsableContentViewController
MSVCarDisplayBrowsableContentViewController
MusicUIServiceAppDelegate
UIApplicationDelegate
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8@16
v24@0:8Q16
v20@0:8I16
v24@0:8@"NSString"16
v32@0:8@16@24
v32@0:8@"MusicMediaPickerNavigationController"16@"NSArray"24
@32@0:8@16@24
v16@0:8
I16@0:8
@"NSString"
@"MusicMediaPickerNavigationController"
@"UIScreen"
v24@0:8@"MPMediaControlsConfiguration"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v28@0:8B16@?20
@24@0:8@16
v32@0:8@16@?24
@"MTMaterialView"
@"MediaControlsEndpointsViewController"
@"UITapGestureRecognizer"
@"NSXPCConnection"
v28@0:8@16B24
@"MCDPlayableContentViewController"
@"NSMutableDictionary"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"MusicUIServiceScreenManager"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>SBStarkCapable</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceWillow</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
</array>
<key>com.apple.springboard.stark.activateBackgroundProvider</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
</dict>
</plist>
