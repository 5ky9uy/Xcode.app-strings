music_setWantsDefaultLayoutInsets
class
initWithNibName:bundle:
_updateLibraryFiltering
shouldPreventShowingTextServices
_canShowTextServices
viewDidLoad
view
whiteColor
setBackgroundColor:
tintColor
setTintColor:
viewWillAppear:
_hostAuditToken
_addNavigationControllerIfNecessary
viewDidAppear:
numberWithBool:
dictionaryWithObjects:forKeys:count:
setAlpha:
animateWithDuration:animations:
_clientViewControllerProxy
remoteMediaPickerDidCancel
navigationController
reset
serviceViewControllerInterface
exportedInterface
setAllowsPickingMultipleItems:
setPrompt:
setShowsCloudItems:
setShowsItemsWithProtectedAssets:
setMediaTypes:
setShouldPreventShowingTextServices:
setPicksSingleCollectionEntity:
setWatchCompatibilityVersion:
count
firstObject
isKindOfClass:
alloc
itemsQuery
initWithItemsQuery:
collectionWithItems:
remoteMediaPickerDidPickMediaItems:
setAllowsMultipleSelection:
copy
_remoteViewControllerProxy
defaultCenter
postNotificationName:object:
defaultMediaLibrary
additionalLibraryFilterPredicates
countByEnumeratingWithState:objects:count:
removeLibraryFilterPredicate:
numberWithUnsignedInteger:
predicateWithValue:forProperty:
addLibraryFilterPredicate:
setCloudFilteringType:
defaultContext
setClientContext:
setMediaPickerDelegate:
willMoveToParentViewController:
addChildViewController:
addSubview:
bounds
setFrame:
setAutoresizingMask:
didMoveToParentViewController:
_exportedInterface
_remoteViewControllerInterface
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
serviceMediaPickerSetAllowsPickingMultipleItems:
serviceMediaPickerSetPrompt:
serviceMediaPickerSetShowsCloudItems:
serviceMediaPickerSetShowsItemsWithProtectedAssets:
serviceMediaPickerSetMediaTypes:
serviceMediaPickerSetShouldPreventShowingTextServices:
serviceMediaPickerSetPicksSingleCollectionEntity:
serviceMediaPickerSetWatchCompatibilityVersion:
mediaPickerNavigationController:didFinishWithSelectedEntities:
_hostApplicationWillEnterForeground
_hostApplicationDidEnterBackground
.cxx_destruct
mediaTypes
allowsPickingMultipleItems
showsCloudItems
showsItemsWithProtectedAssets
prompt
picksSingleCollectionEntity
watchCompatibilityVersion
setNavigationController:
_allowsPickingMultipleItems
_showsCloudItems
_showsItemsWithProtectedAssets
_picksSingleCollectionEntity
_shouldPreventShowingTextServices
_watchCompatibilityVersion
_mediaTypes
_prompt
_navigationController
init
_screenDidConnect:
addObserver:selector:name:object:
_screenDidDisconnect:
removeObserver:
dealloc
object
_isCarScreen
_carScreen
_mediaControlsViewControllerReceivedInteraction:
initWithTarget:action:
setCancelsTouchesInView:
setDelegate:
addGestureRecognizer:
dismiss
dismissViewControllerAnimated:completion:
setDismissalBlock:
selectedViewController
setTransform:
initWithMass:stiffness:damping:initialVelocity:
initWithControlPoint1:controlPoint2:
setSpringCubicTimingParameters:
initWithDuration:timingParameters:
springCubicTimingParameters
addAnimations:
startAnimation
viewWillDisappear:
initWithDampingRatio:initialVelocity:
_updateInsets:
viewWillTransitionToSize:withTransitionCoordinator:
frame
viewDidLayoutSubviews
preferredExpandedContentWidth
setScrollViewInsets:
didReceiveInteraction
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
_isSecureForRemoteViewService
configuration
setConfiguration:
_tapGesture
_panGesture
associatedBundleID
stateName
isEqualToString:
traitCollection
userInterfaceIdiom
_performSwitchToNowPlayingForBundleID:showNowPlaying:
traitCollectionDidChange:
refreshNavigationStackForLaunch
saveCurrentStack
removeFromSuperview
removeFromParentViewController
objectForKey:
initWithBundleID:stack:
setNeedsFocusUpdate
currentStack
setObject:forKey:
removeObjectForKey:
removeChildViewController:
arrayWithObjects:count:
preferredFocusEnvironments
switchToState:
_nowPlayingViewController
_displayedViewControllerKey
_bundleIDsToStacks
_firstLaunchCompleted
_needsSwitch
sharedDefaults
beginObservingDefaultsChanges
beginGeneratingLibraryChangeNotifications
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
_screenManager
333333
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
navigationController
T@"MusicMediaPickerNavigationController",&,N,V_navigationController
shouldPreventShowingTextServices
TB,N,V_shouldPreventShowingTextServices
mediaTypes
TQ,N,V_mediaTypes
allowsPickingMultipleItems
TB,N,V_allowsPickingMultipleItems
showsCloudItems
TB,N,V_showsCloudItems
showsItemsWithProtectedAssets
TB,N,V_showsItemsWithProtectedAssets
prompt
T@"NSString",C,N,V_prompt
picksSingleCollectionEntity
TB,N,V_picksSingleCollectionEntity
watchCompatibilityVersion
TI,N,V_watchCompatibilityVersion
configuration
T@"MPMediaControlsConfiguration",&,N
nowplaying
window
T@"UIWindow",&,N
Cancelling MPMediaPickerController, the requesting app does not have access
MusicUIServiceMediaPickerController
MPServiceMediaPickerController
NSObject
MusicMediaPickerDelegate
MusicUIServiceScreenManager
MusicUIServiceMediaControlsViewController
MPMediaControlsServiceController
MusicUIServiceCarDisplayBrowsableContentViewController
MSVCarDisplayBrowsableContentViewController
MusicUIServiceAppDelegate
UIApplicationDelegate
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8@16
v24@0:8Q16
v20@0:8I16
v24@0:8@"NSString"16
v32@0:8@16@24
v32@0:8@"MusicMediaPickerNavigationController"16@"NSArray"24
@32@0:8@16@24
v16@0:8
I16@0:8
@"NSString"
@"MusicMediaPickerNavigationController"
@"UIScreen"
@"MPMediaControlsConfiguration"16@0:8
v24@0:8@"MPMediaControlsConfiguration"16
v40@0:8{CGSize=dd}16@32
v32@0:8{CGSize=dd}16
B32@0:8@16@24
@"UIGestureRecognizer"
v28@0:8@16B24
@"MCDPlayableContentViewController"
@"NSMutableDictionary"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"MusicUIServiceScreenManager"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>SBStarkCapable</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
</array>
<key>com.apple.springboard.stark.activateBackgroundProvider</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.MediaRemote.pairing</string>
</array>
</dict>
</plist>
