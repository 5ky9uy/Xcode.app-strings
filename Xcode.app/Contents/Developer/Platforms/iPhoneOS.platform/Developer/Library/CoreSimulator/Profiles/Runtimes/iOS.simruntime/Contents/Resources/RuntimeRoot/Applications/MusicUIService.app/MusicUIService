4@333333
viewWillAppear:
configurePresentation
setDiscoveryMode:
setDismissalReason:
_remoteViewControllerProxy
deactivate
invalidate
name
length
mainBundle
localizedStringForKey:value:table:
stringWithFormat:
alertControllerWithTitle:message:preferredStyle:
dismiss
actionWithTitle:style:handler:
addAction:
showViewController:sender:
alloc
init
_setEndpoint:
initWithListenerEndpoint:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
openConnection
interfaceWithProtocol:
setRemoteObjectInterface:
updateMediaControlsWithConfiguration:
setExportedInterface:
setExportedObject:
setHostProxy:
setConnection:
setInvalidationHandler:
resume
fetchCandidateOutputDevice
beginDiscoveryForCandidateRoute
presentAlert
longFormVideoRoutingSessionManager
likelyExternalDestinations
firstObject
outputDeviceDescriptions
presentErrorAlert
deviceID
arrayWithObjects:count:
routingContextUID
systemRouteWithContextUID:
setEndpointRoute:
initWithDataSource:name:
setDelegate:
_setHeaderContentViewController:
mediaControlsBundle
imageNamed:inBundle:
imageWithRenderingMode:
setImage:
setContentMode:
blackColor
setTintColor:
setTranslatesAutoresizingMaskIntoConstraints:
view
addSubview:
topAnchor
constraintEqualToAnchor:constant:
leftAnchor
constraintEqualToAnchor:
rightAnchor
bottomAnchor
activateConstraints:
unpickTVRoutes
sharedAVSystemController
presentingAppBundleID
setAttribute:forKey:error:
selectRoute:operation:completion:
setSwipeDismissalStyle:
setDismissalAnimationStyle:
setDesiredHardwareButtonEvents:
setAllowsMenuButtonDismissal:
setAllowsAlertStacking:
sharedApplication
statusBarOrientation
setLaunchingInterfaceOrientation:
setSceneDeactivationReason:
userInfo
objectForKeyedSubscript:
unarchivedObjectOfClass:fromData:error:
shouldPreventAutorotation
setOrientationChangedEventsEnabled:
xpcEndpoint
connectionWithEndpoint:
remoteObjectProxyWithErrorHandler:
configureWithContext:completion:
events
enumerateObjectsUsingBlock:
availableRoutes
countByEnumeratingWithState:objects:count:
routeUID
isEqualToString:
_isSecureForRemoteViewService
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
prefersStatusBarHidden
_shouldRemoveViewFromHierarchyOnDisappear
handleButtonActions:
.cxx_destruct
connection
hostProxy
configuration
setConfiguration:
candidateOutputDevice
setCandidateOutputDevice:
candidateRoute
setCandidateRoute:
routingController
setRoutingController:
discoverySemaphore
setDiscoverySemaphore:
dismissalReason
_connection
_hostProxy
_configuration
_candidateOutputDevice
_candidateRoute
_routingController
_discoverySemaphore
_dismissalReason
music_setWantsDefaultLayoutInsets
initWithNibName:bundle:
_updateLibraryFiltering
shouldPreventShowingTextServices
_canShowTextServices
viewDidLoad
whiteColor
setBackgroundColor:
tintColor
_hostAuditToken
_addNavigationControllerIfNecessary
viewDidAppear:
numberWithBool:
dictionaryWithObjects:forKeys:count:
setAlpha:
animateWithDuration:animations:
_clientViewControllerProxy
remoteMediaPickerDidCancel
navigationController
reset
viewDidDisappear:
dismissViewControllerAnimated:completion:
serviceViewControllerInterface
exportedInterface
setAllowsPickingMultipleItems:
setPrompt:
setShowsCloudItems:
setShowsItemsWithProtectedAssets:
setMediaTypes:
setShouldPreventShowingTextServices:
setPicksSingleCollectionEntity:
setWatchCompatibilityVersion:
count
itemsQuery
initWithItemsQuery:
collectionWithItems:
remoteMediaPickerDidPickMediaItems:
setAllowsMultipleSelection:
copy
defaultCenter
postNotificationName:object:
defaultMediaLibrary
additionalLibraryFilterPredicates
removeLibraryFilterPredicate:
numberWithUnsignedInteger:
predicateWithValue:forProperty:
addLibraryFilterPredicate:
setCloudFilteringType:
defaultContext
setClientContext:
setMediaPickerDelegate:
addChildViewController:
bounds
setFrame:
setAutoresizingMask:
didMoveToParentViewController:
_exportedInterface
_remoteViewControllerInterface
serviceMediaPickerSetAllowsPickingMultipleItems:
serviceMediaPickerSetPrompt:
serviceMediaPickerSetShowsCloudItems:
serviceMediaPickerSetShowsItemsWithProtectedAssets:
serviceMediaPickerSetMediaTypes:
serviceMediaPickerSetShouldPreventShowingTextServices:
serviceMediaPickerSetPicksSingleCollectionEntity:
serviceMediaPickerSetWatchCompatibilityVersion:
mediaPickerNavigationController:didFinishWithSelectedEntities:
_hostApplicationWillEnterForeground
_hostApplicationDidEnterBackground
mediaTypes
allowsPickingMultipleItems
showsCloudItems
showsItemsWithProtectedAssets
prompt
picksSingleCollectionEntity
watchCompatibilityVersion
setNavigationController:
_allowsPickingMultipleItems
_showsCloudItems
_showsItemsWithProtectedAssets
_picksSingleCollectionEntity
_shouldPreventShowingTextServices
_watchCompatibilityVersion
_mediaTypes
_prompt
_navigationController
materialViewWithRecipe:options:initialWeighting:
setUserInteractionEnabled:
initWithTarget:action:
addGestureRecognizer:
_createAnimationForPresenting:completion:
viewWillLayoutSubviews
center
preferredContentSize
setEnabled:
standardSpringAnimator
setWeighting:
addAnimations:
setTransform:
addCompletion:
startAnimation
initWithRouteUID:
viewIfLoaded
setNeedsLayout
_appearState
layoutIfNeeded
locationInView:
pointInside:withEvent:
didLoadOptionsForLanguageOptionsViewController:
dismissLanguageOptionsViewController:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
materialView
setMaterialView:
languageOptionsViewController
setLanguageOptionsViewController:
tapGestureRecognizer
setTapGestureRecognizer:
setCenter:
receivedResponse
setReceivedResponse:
_receivedResponse
_materialView
_languageOptionsViewController
_tapGestureRecognizer
_center
_screenDidConnect:
addObserver:selector:name:object:
_screenDidDisconnect:
removeObserver:
dealloc
object
_isCarScreen
_carScreen
dismissWithCompletion:
setDismissalBlock:
setScrollViewInsets:
widthAnchor
constraintEqualToConstant:
centerXAnchor
endpointViewController
_transitionToVisible:
viewWillDisappear:
startPrewarming
setEndpointViewController:
_endpointViewController
associatedBundleID
stateName
traitCollection
userInterfaceIdiom
_performSwitchToNowPlayingForBundleID:showNowPlaying:
traitCollectionDidChange:
refreshNavigationStackForLaunch
saveCurrentStack
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
objectForKey:
initWithBundleID:stack:
setNeedsFocusUpdate
currentStack
setObject:forKey:
removeObjectForKey:
removeChildViewController:
preferredFocusEnvironments
switchToState:
_nowPlayingViewController
_displayedViewControllerKey
_bundleIDsToStacks
_firstLaunchCompleted
_needsSwitch
sharedDefaults
beginObservingDefaultsChanges
beginGeneratingLibraryChangeNotifications
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
_screenManager
MEDIUM_CONFIDENCE_ALERT_AIRPLAY_ERROR
MusicUIService
MEDIUM_CONFIDENCE_ALERT_AIRPLAY_ERROR_GENERIC
MEDIUM_CONFIDENCE_ALERT_OK
v16@?0@"UIAlertAction"8
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Medium Confidence Picker
MEDIUM_CONFIDENCE_ALERT_TITLE
MEDIUM_CONFIDENCE_ALERT_DESCRIPTION
CC-AirPlay-Big
DeviceClassNumber
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPHONE
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPAD
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPOD
v16@?0@"NSError"8
MEDIUM_CONFIDENCE_ALERT_CANCEL
v24@?0@"SBUIRemoteAlertButtonAction"8^B16
connection
T@"NSXPCConnection",&,N,V_connection
hostProxy
T@"<MPMediaControlsProtocol>",&,N,V_hostProxy
configuration
T@"MPMediaControlsConfiguration",&,N,V_configuration
candidateOutputDevice
T@"AVOutputDevice",&,N,V_candidateOutputDevice
candidateRoute
T@"MPAVRoute",&,N,V_candidateRoute
routingController
T@"MPAVRoutingController",&,N,V_routingController
discoverySemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_discoverySemaphore
dismissalReason
TQ,N,V_dismissalReason
navigationController
T@"MusicMediaPickerNavigationController",&,N,V_navigationController
shouldPreventShowingTextServices
TB,N,V_shouldPreventShowingTextServices
mediaTypes
TQ,N,V_mediaTypes
allowsPickingMultipleItems
TB,N,V_allowsPickingMultipleItems
showsCloudItems
TB,N,V_showsCloudItems
showsItemsWithProtectedAssets
TB,N,V_showsItemsWithProtectedAssets
prompt
T@"NSString",C,N,V_prompt
picksSingleCollectionEntity
TB,N,V_picksSingleCollectionEntity
watchCompatibilityVersion
TI,N,V_watchCompatibilityVersion
v16@?0q8
materialView
T@"MTMaterialView",&,N,V_materialView
languageOptionsViewController
T@"MediaControlsLanguageOptionsViewController",&,N,V_languageOptionsViewController
tapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_tapGestureRecognizer
center
T{CGPoint=dd},N,V_center
receivedResponse
TB,N,V_receivedResponse
v16@?0@?<v@?>8
endpointViewController
T@"MediaControlsEndpointsViewController",&,N,V_endpointViewController
nowplaying
window
T@"UIWindow",&,N
Creating XPC connection to host app.
XPC connection to host app invalidated.
Failed to obtain a candidate device.
Picked local device for medium confidence playback
Failed to discover a candidate route for candidate output device %@
Failed to pick the candidate route %@ with error %@
Picked medium confidence candidate route %@
Cancelled the medium confidence prompt
Successfully deserialized the initial media controls configuration.
Error occured while atempting to retrive remote proxy to open connection: %@
Attempting to open connection to host app.
Dismissing view service due to home button event.
Cancelling MPMediaPickerController, the requesting app does not have access
Received updated media controls configuration from:  %@
MPMediaControlsProtocol
NSObject
MPMediaControlsRemoteViewControllerProtocol
MusicUIServiceMediaControlsMediumConfidenceViewController
MPAVRoutingControllerDelegate
MusicUIServiceMediaPickerController
MPServiceMediaPickerController
MusicMediaPickerDelegate
MusicUIServiceLanguageOptionsViewController
MediaControlsLanguageOptionsViewControllerDelegate
UIGestureRecognizerDelegate
MusicUIServiceScreenManager
MusicUIServiceMediaControlsViewController
MusicUIServiceCarDisplayBrowsableContentViewController
MSVCarDisplayBrowsableContentViewController
MusicUIServiceAppDelegate
UIApplicationDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8Q16
v24@0:8@16
v24@0:8@"MPMediaControlsConfiguration"16
v32@0:8@16@24
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v20@0:8B16
@24@0:8@16
v32@0:8@16@?24
@"NSXPCConnection"
@"<MPMediaControlsProtocol>"
@"MPMediaControlsConfiguration"
@"AVOutputDevice"
@"MPAVRoute"
@"MPAVRoutingController"
@"NSObject<OS_dispatch_semaphore>"
v20@0:8I16
v24@0:8@"NSString"16
v32@0:8@"MusicMediaPickerNavigationController"16@"NSArray"24
@32@0:8@16@24
I16@0:8
@"NSString"
@"MusicMediaPickerNavigationController"
v24@0:8@"MediaControlsLanguageOptionsViewController"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v28@0:8B16@?20
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"MTMaterialView"
@"MediaControlsLanguageOptionsViewController"
@"UITapGestureRecognizer"
{CGPoint="x"d"y"d}
@"UIScreen"
v24@0:8@?16
@"MediaControlsEndpointsViewController"
@"MCDPlayableContentViewController"
@"NSMutableDictionary"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"MusicUIServiceScreenManager"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>SBStarkCapable</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-identifying-output-device-details</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceWillow</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
</array>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.stark.activateBackgroundProvider</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
</dict>
</plist>
