callStateController
relayMessagingController
callController
sharedInstance
_allCalls
allCalls
.cxx_destruct
setCallStateController:
_callStateController
alloc
initWithTriggers:
initWithCallCenterObserver:
init
setDelegate:
_updateCurrentOrientationValue
setOrientationEventsEnabled:
setPassiveOrientationEvents:
defaultCenter
removeObserver:
dealloc
accelerometer
currentDeviceOrientation
setCurrentOrientation:
class
isKindOfClass:
provider
isSystemProvider
isVideo
callStatus
callCenterObserver
callContainer
currentVideoCalls
countByEnumeratingWithState:objects:count:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:
accelerometer:didChangeDeviceOrientation:
callCenterObserver:callChanged:
callsChangedForCallCenterObserver:
setCallCenterObserver:
currentOrientation
_currentOrientation
_accelerometer
_callCenterObserver
setObjectsWithTransactions:
handleCallStatusChanged:
addObserver:selector:name:object:
handleSessionStateChanged:
beginTransactionIfNecessaryForObject:
endTransactionIfNecessaryForObject:
objectsWithTransactions
containsObject:
addObject:
count
beginTransaction
removeObject:
endTransaction
object
status
state
_objectsWithTransactions
setCarrierSpaceCapabilities:
getCapabilities:
queue
carrierSpaceCapabilities
supportsServices
stringWithFormat:
delegate
carrierSpaceCapabilitiesChanged:
capabilitiesDidChange:
userConsentFlowInfoDidChange
usageDidChange
plansDidChange
appsDidChange
dataPlanMetricsDidChange
purchasedPlan:didChangeStatus:context:
supportsCarrierServices
initWithQueue:
carrierSpaceClient
_delegate
_queue
_carrierSpaceClient
_carrierSpaceCapabilities
bundleIdentifier
invalidate
name
initWithBundleIdentifier:flags:reason:name:withHandler:
setProcessAssertion:
processAssertionNameForBundleIdentifier:
initWithBundleIdentifier:flags:reason:name:
isEqualToString:
processAssertionWithBundleIdentifier:
initWithBundleIdentifier:
acquireWithCompletionHandler:
processAssertion
_bundleIdentifier
_processAssertion
initWithClientUUID:serialQueue:
conferenceProvider
setState:
setConfiguration:
conferenceProviderCreationBlock
configuration
clientUUID
setConferenceProvider:
deviceRole
initializeNewCallWithDeviceRole:
requiresInviteDictionary
localPortraitAspectRatio
localLandscapeAspectRatio
setLocalPortraitAspectRatio:localLandscapeAspectRatio:
setLocalInviteDictionary:
_sendDelegateFinishedPreparing
_setEndedWithReason:error:
remoteInviteDictionary
callID
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
type
isCaller
capabilities
socket
startConnectionAsCaller:capabilities:socket:error:
destination
startConnectionAsCaller:remoteInviteDictionary:capabilities:destination:error:
date
timeIntervalSince1970
_setUpDidStartTimeout
stop
cancel
sendData:
setEndedReason:
setEndedError:
_sendDelegateEndedWithReason:error:
setRemoteInviteDictionary:
setCaller:
setDateStartedConnecting:
setDateConnected:
setDateEnded:
_isMuted
isMicrophoneMuted
setMicrophoneMuted:
_sendDelegateMutedChanged
_isSendingAudio
isAudioPaused
setAudioPaused:
_isSendingVideo
isVideoPaused
setVideoPaused:
setRemoteVideoPresentationSize:
setRemoteVideoPresentationState:
connectionTimeout
setDeviceRole:
updateCapabilities:
delegateQueue
conferenceFinishedPreparing:
_performDelegateCallback:
conferenceStarted:
conference:endedWithReason:error:
connectionClosedForConference:
mutedChangedForConference:
sendingAudioChangedForConference:
receivedFirstRemoteFrameForConference:
remoteVideoPausedForConference:
conference:inputFrequencyLevelChangedTo:
conference:outputFrequencyLevelChangedTo:
conference:changedBytesOfDataUsed:
conference:didReceiveData:forCallID:
code
_sendDelegateStarted
_endedReasonForDidStopError:error:
objectForKeyedSubscript:
integerValue
_sendDelegateBytesOfDataUsageChanged:
_sendDelegateConnectionClosed
copy
_sendDelegateInputFrequencyLevelChanged:
_sendDelegateOutputFrequencyLevelChanged:
_sendDelegateSendingAudioChanged
setHasReceivedFirstRemoteFrame:
_sendDelegateReceivedFirstRemoteFrame
setRemoteVideoPaused:
_sendDelegateRemoteVideoPaused
_sendDelegateReceivedData:forCallID:
conferenceProvider:didStartSession:error:
conferenceProvider:didStopWithError:callMetadata:
connectionClosedForConferenceProvider:
serverDiedForConferenceProvider:
conferenceProvider:updateInputFrequencyLevel:
conferenceProvider:updateOutputFrequencyLevel:
conferenceProvider:didPauseAudio:error:
conferenceProviderReceivedFirstRemoteFrame:
conferenceProvider:remoteVideoPaused:
conferenceProvider:didReceiveData:forCallID:
prepareWithConfiguration:
startConnectionWithTransport:
setDelegateQueue:
localInviteDictionary
setConnectionTimeout:
endedReason
endedError
dateStartedConnecting
dateConnected
dateEnded
isMuted
setMuted:
isSendingAudio
setSendingAudio:
hasReceivedFirstRemoteFrame
isSendingVideo
setSendingVideo:
isRemoteVideoPaused
remoteVideoPresentationSize
remoteVideoPresentationState
setQueue:
setConferenceProviderCreationBlock:
_hasReceivedFirstRemoteFrame
_remoteVideoPaused
_state
_remoteVideoPresentationState
_delegateQueue
_connectionTimeout
_localInviteDictionary
_endedReason
_endedError
_dateStartedConnecting
_dateConnected
_dateEnded
_configuration
_conferenceProvider
_conferenceProviderCreationBlock
_remoteVideoPresentationSize
setCapabilities:
setClientUUID:
setRequiresInviteDictionary:
setLocalLandscapeAspectRatio:
setLocalPortraitAspectRatio:
_caller
_requiresInviteDictionary
_capabilities
_clientUUID
_remoteInviteDictionary
_localLandscapeAspectRatio
_localPortraitAspectRatio
initWithDictionaryRepresentation:
UUID
UUIDString
initWithHandoffIdentifier:
setOutgoing:
initWithType:value:
setRemoteHandle:
setContext:
dictionaryRepresentation
mutableCopy
context
isOutgoing
setObject:forKeyedSubscript:
remoteHandle
value
numberWithInt:
initWithHandoffActivityUserInfo:
handoffActivityUserInfo
providerIdentifierForHandoffActivityUserInfo:
dictionary
setObject:forKey:
setHandle:
setAvcData:
allocWithZone:
copyWithZone:
mergeFrom:
hasHandle
hasAvcData
readFrom:
writeTo:
copyTo:
handle
avcData
_avcData
_handle
protoProtocolVersion
setProtoProtocolVersion:
protoWantsVideo
setProtoWantsVideo:
protoSenderMuteUplink
setProtoSenderMuteUplink:
protoMomentsAvailable
setProtoMomentsAvailable:
setProtocolVersion:
protocolVersion
wantsVideo
setWantsVideo:
senderMuteUplink
setSenderMuteUplink:
isMomentsAvailable
setMomentsAvailable:
addProtocolVersion
setActivityCommunicator:
activityCommunicator
callStatusChanged:
callContinuityChanged:
shouldSuppressRingtoneChanged:
callStartedConnecting:
callConnected:
providerManager
addDelegate:queue:
updateCallHandoffRegistration
updateAppHistoryActivityForCall
updateHandoffActivityState
updateSuppressRingtoneActivityListeningState
supportsPrimaryCalling
stopListeningForActivityType:
providers
handoffIdentifiers
listenForActivityType:dynamicIdentifier:
currentCalls
firstObject
isHostedOnCurrentDevice
isEndpointOnCurrentDevice
handoffDynamicIdentifier
activityWithType:dynamicIdentifier:userInfo:
handoffActivity
endHandoffActivity
broadcastActivity:
setHandoffActivity:
stopBroadcastingActivity:
wasDeclined
startSuppressRingtoneActivityBroadcastingForCall:
broadcastActivity:withTimeout:shouldPrioritize:
shouldSuppressRingtone
callPassingTest:
currentAudioAndVideoCalls
localizedLabel
isoCountryCode
arrayWithCapacity:
displayName
dictionaryWithCapacity:
identifier
appHistoryActivityWithTitle:subtitle:keywords:userInfo:
startSuppressRingtoneActivityBroadcastingIfNecessaryForCallWithStatusChange:
ringtoneSuppressedRemotely
componentsSeparatedByString:
lastObject
audioAndVideoCallsWithStatus:
suppressRingtoneDueToRemoteSuppression
providersChangedForProviderManager:
receivedBroadcastedActivityType:dynamicIdentifier:
_activityCommunicator
_handoffActivity
messageSendTime
typeString
uniqueProxyIdentifier
appendFormat:
block
reportingController:statusChangedForCall:totalCallCount:
reportingController:callEnteredForeground:
allCallsBackgroundedForReportingController:
reportingController:relayMessageReceived:fromPairedDevice:
reportingController:transactionGroupCompleted:
reportingController:providerFailedWithAction:forCall:
reportingController:capturedMomentsUsageReport:
reportingController:pickedRoute:forCall:
reportingController:timedOutPickingRoute:forCall:
dataSource
setDataSource:
setBlock:
_block
routeController
initWithNotificationName:queue:
initWithRouteController:callCenterObserver:interfaceOrientationObserver:proximitySensorCoveredObserver:queue:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
orientation
setInterfaceOrientationPortrait:
setHandler:
activeInterfaceOrientationWithCompletion:
addDelegate:
proximitySensorCoveredObserver
setProximitySensorCovered:
setCallback:
beginObserving
updateProximitySensorState
setProximitySensorEnabled:
shouldEnableProximitySensor
proximityDetectionMode
setProximityDetectionMode:
proximityChangeHandler
updateVoiceOverRoutingForCurrentProximityState
isProximitySensorCovered
voiceOverRunningDeterminationHandler
anyCallPassesTest:
pickedRoute
isSpeaker
receiverRoute
pickRoute:
isReceiver
voiceOverTouchShouldRouteToSpeakerDeterminationHandler
speakerRoute
currentCallCount
supportsCurrentPlatform
isInterfaceOrientationPortrait
isRTT
isTTY
routesChangedForRouteController:
isProximitySensorEnabled
interfaceOrientationObserver
setVoiceOverRunningDeterminationHandler:
setVoiceOverTouchShouldRouteToSpeakerDeterminationHandler:
setProximityChangeHandler:
_proximitySensorCovered
_interfaceOrientationPortrait
_proximityDetectionMode
_routeController
_interfaceOrientationObserver
_proximitySensorCoveredObserver
_voiceOverRunningDeterminationHandler
_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
_proximityChangeHandler
handler
conferenceID
hasPrefix:
length
substringFromIndex:
GUID
dataUploaded
dataDownloaded
initWithIDSChat:
setFaceTimeTransportType:
isRemoteMomentsAvailable
setRemoteMomentsAvailable:
otherIMHandle
initWithDestinationID:
setHasVideo:
setSupportsHolding:
setSupportsGrouping:
setSupportsUngrouping:
setSupportsDTMF:
setRequiresInCallSounds:
setCrossDeviceIdentifier:
setAudioInterruptionProvider:
setAudioInterruptionOperationMode:
setAudioCategory:
setAudioMode:
activeRemoteParticipantCXHandles
setActiveRemoteParticipantHandles:
numberWithInteger:
boolValue
numberWithBool:
initWithFaceTimeIDSChat:
initWithIMAVChat:
initWithTUConversation:
faceTimeTransportType
exceptionWithName:reason:userInfo:
raise
removeAllObjects
objectAtIndex:
numberWithUnsignedLongLong:
numberWithUnsignedInt:
numberWithLongLong:
initWithCapacity:
addRelayDeviceRouteChange:
setCallUuid:
setProviderId:
featuresCount
clearFeatures
featuresAtIndex:
addFeatures:
relayDeviceRouteChangesCount
clearRelayDeviceRouteChanges
relayDeviceRouteChangeAtIndex:
relayDeviceRouteChangeType
hasCallUuid
hasProviderId
setIsIncoming:
setHasIsIncoming:
hasIsIncoming
setIsHeld:
setHasIsHeld:
hasIsHeld
setHasConnected:
setHasHasConnected:
hasHasConnected
setHasEnded:
setHasHasEnded:
hasHasEnded
setIsCurrentlyGrouped:
setHasIsCurrentlyGrouped:
hasIsCurrentlyGrouped
setDurationMs:
setHasDurationMs:
hasDurationMs
setSetupTimeMs:
setHasSetupTimeMs:
hasSetupTimeMs
setConnectionTimeMs:
setHasConnectionTimeMs:
hasConnectionTimeMs
features
setFeatures:count:
setEndReason:
setHasEndReason:
hasEndReason
setHasFaceTimeTransportType:
hasFaceTimeTransportType
setTelephonyTransportType:
setHasTelephonyTransportType:
hasTelephonyTransportType
setProviderErrorCode:
setHasProviderErrorCode:
hasProviderErrorCode
setIsRelay:
setHasIsRelay:
hasIsRelay
setProviderEndedReason:
setHasProviderEndedReason:
hasProviderEndedReason
setHasStartedConnecting:
setHasHasStartedConnecting:
hasHasStartedConnecting
idsLinkType
setIdsLinkType:
setHasIdsLinkType:
hasIdsLinkType
idsLinkTypeAsString:
StringAsIdsLinkType:
callUuid
providerId
isIncoming
isHeld
hasConnected
hasEnded
isCurrentlyGrouped
durationMs
setupTimeMs
connectionTimeMs
endReason
telephonyTransportType
providerErrorCode
isRelay
providerEndedReason
hasStartedConnecting
relayDeviceRouteChanges
setRelayDeviceRouteChanges:
_features
_connectionTimeMs
_durationMs
_endReason
_providerEndedReason
_providerErrorCode
_setupTimeMs
_callUuid
_faceTimeTransportType
_idsLinkType
_providerId
_relayDeviceRouteChanges
_telephonyTransportType
_hasConnected
_hasEnded
_hasStartedConnecting
_isCurrentlyGrouped
_isHeld
_isIncoming
_isRelay
_has
orderedSet
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
daemonConnected:
handleChatStateChanged:
handleChatFirstRemoteFrameArrived:
handleChatInvitationSent:
handleChatCallInfoChangedNotification:
handleChatConferenceIDChangedNotification:
handleChatConferenceMetadataUpdated:
handleChatMayRequireBreakBeforeMakeChanged:
handleChatInFrequencyChangedNotification:
handleChatOutFrequencyChangedNotification:
setIMAVCapabilities:toCaps:
setupIMAVController
setBlockIncomingInvitationsDuringCall:
setBlockMultipleIncomingInvitations:
_requestPendingInvites
requestPendingACInvitations
requestPendingVCInvitations
cachedChats
chatWithUUID:
_endChatWithUUID:withEndedReason:
endChatWithReason:
facetimeService
callService
isRegistered
imHandleWithID:
arrayWithObjects:count:
callUUID
initOutgoingTo:isVideo:isRelayed:GUID:
setConnectionTimeoutTime:
faceTimeProvider
isUpgrade
setInvitationTimeoutTime:
_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:
invite:additionalPeers:excludingPushTokens:
isComplete
reportCallWithUUID:updated:
fulfill
faceTimeDemuxerDelegate
providerDelegate:callWithUUID:startedConnectingAtDate:
reportOutgoingCallWithUUID:connectedAtDate:
pendingCallActionsOfClass:withCallUUID:
fulfillWithDateConnected:
fail
trace:
registerChat:
_updateProviderForConnectingChat:
_updateProviderForConnectedChat:
_updateProviderForEndedChat:
failureContextForChat:
providerDelegate:callWithUUID:endedAtDate:withReason:failureContext:
setFailureReason:
supportsWLAN
allowAnyNetwork
supportsNonWiFiCalling
supportsNonWiFiFaceTime
localizedStringForKey:value:table:
setTitle:
setMessage:
setHasWiFiSettingsRemediation:
setHasCellularSettingsRemediation:
setHasDateAndTimeSettingsRemediation:
setHasLocationSettingsRemediation:
destinationIdIsPhoneNumber
isLocalParticipant
avChat
reportOutgoingCallWithUUID:sentInvitationAtDate:
_activeCallID
setVideoStreamToken:
reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
mayRequireBreakBeforeMake
setMayRequireBreakBeforeMake:
inFrequencyLevel
reportCallWithUUID:changedFrequencyData:forDirection:
outFrequencyLevel
declineInvitationWithResponse:
reportNewIncomingCallWithUUID:update:completion:
setProvider:
_setUpListeners
endChat
acceptInvitation
isOnHold
setIsSendingAudio:
setIsSendingVideo:
videoPresentationSize
videoPresentationState
IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState:
isRelaying
setRelayed:
setMute:
invitedToIMAVChat:
createdOutgoingIMAVChat:
inviteFailedFromIMHandle:reason:
providerDidReset:
providerDidBegin:
provider:executeTransaction:
provider:performStartCallAction:
provider:performAnswerCallAction:
provider:performEndCallAction:
provider:performSetHeldCallAction:
provider:performSetMutedCallAction:
provider:performSetGroupCallAction:
provider:performPlayDTMFCallAction:
provider:timedOutPerformingAction:
provider:didActivateAudioSession:
provider:didDeactivateAudioSession:
provider:performSendMMIOrUSSDCodeAction:
provider:performSetTTYTypeCallAction:
provider:performSetSendingVideoCallAction:
provider:performSetRelayingCallAction:
provider:performPullCallAction:
provider:performSetVideoPresentationSizeCallAction:
provider:performSetVideoPresentationStateCallAction:
isManagingCallWithUUID:
hasCallStartedConnectingWithUUID:
endCallWithUUIDAsAnsweredElsewhere:
endCallWithUUIDAsDeclinedElsewhere:
inviteIMAVPeersWithAction:additionalPeers:tokensToExclude:
setFaceTimeDemuxerDelegate:
setCachedChats:
_faceTimeDemuxerDelegate
_provider
_cachedChats
initWithUUIDString:
initWithService:
faceTimeIMAccountCallerIDChanged:
callerID
postNotificationName:object:
setCallerID:
_callerID
initWithTransportToken:delegate:queue:
groupUUID
isLocallyCreated
participantHandles
activeRemoteParticipants
initWithUUID:groupUUID:
setLocallyCreated:
setParticipantHandles:
setWithCapacity:
tuConversationParticipant
setActiveRemoteParticipants:
avcSession
localParticipantIdentifier
isUplinkMuted
setUplinkMuted:
conversation:addedActiveParticipant:
addParticipant:
conversation:removedActiveParticipant:
removeParticipant:
conversationChanged:
idsSession
idsDestination
avcSessionCreationBlock
setAvcSession:
localParticipantData
initWithIdentifier:handle:avcData:
joinUsingLocalParticipant:
setAudioReady:
_startAVCSessionIfNecessary
leave
isJoined
isAudioReady
start
restart
session:didJoinGroup:error:
session:didLeaveGroupWithError:
session:endedWithError:
session:didStart:error:
session:didStopWithError:
serverDisconnectedForSession:
participantWithIdentifier:changedFrequencyLevel:
initWithGroupUUID:locallyCreated:participantHandles:groupSession:serialQueue:
tuConversation
updateActiveParticipants:
joinUsingLocalParticipantHandle:
startAudio
setAvcSessionCreationBlock:
_locallyCreated
_UUID
_groupUUID
_participantHandles
_activeRemoteParticipants
_idsSession
_avcSession
_avcSessionCreationBlock
array
setRelayCallDataSource:
relayCallDataSource
setCallController:
setMockCallDataSource:
mockCallDataSource
setProviderCallDataSource:
providerCallDataSource
setCallDataSources:
registerCall:
callControllerHost
cxCall
removeCall:
addOrUpdateCall:
callDataSources
calls
addObjectsFromArray:
initWithCalls:
_relayCallDataSource
_providerCallDataSource
_mockCallDataSource
_callDataSources
serviceName
setHasSupportsHolding:
hasSupportsHolding
setHasSupportsGrouping:
hasSupportsGrouping
setHasSupportsUngrouping:
hasSupportsUngrouping
setHasSupportsDTMF:
hasSupportsDTMF
setSupportsUnambiguousMultiPartyState:
setHasSupportsUnambiguousMultiPartyState:
hasSupportsUnambiguousMultiPartyState
setSupportsAddCall:
setHasSupportsAddCall:
hasSupportsAddCall
setSupportsSendingToVoicemail:
setHasSupportsSendingToVoicemail:
hasSupportsSendingToVoicemail
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
_supportsAddCall
_supportsDTMF
_supportsGrouping
_supportsHolding
_supportsSendingToVoicemail
_supportsUnambiguousMultiPartyState
_supportsUngrouping
callWithUniqueProxyIdentifier:
initWithRelayMessage:outgoing:
setCallDelegatesIfNeeded:
hostCallCreationTime
setHostCreationTime:
setHostMessageSendTime:
setClientMessageReceiveTime:
cannotBeAnswered
setEndpointOnCurrentDevice:
cannotRelayAudioOrVideoOnPairedDevice
setCannotRelayAudioOrVideo:
propertiesChangedForCall:
displayContext
displayContextByMergingWithDisplayContext:
setDisplayContext:
updateWithRelayMessage:
callsHostedElsewhere
setLocallyDisconnectedWithReasonIfNone:
disconnectedReason
setLocallyDisconnectedWithReasonIfNone:stopConference:
stopConferenceForIdentifier:
setLocallyConnected
callModel
setModel:
setWantsHoldMusic:
setWithArray:
protoCalls
isEqualToCall:
updateRelayCall:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:
hardPauseDigits
setHardPauseDigits:
hardPauseDigitsState
setHardPauseDigitsState:
setLocallyConnecting
hasCurrentCalls
pullRemotelyHostedCallsForMessage:completion:
callCapabilitiesState
updatePairedHostDeviceCallCapabilitiesState:
callProviderManager
tuProviders
registerRelayProviders:
needsManualInCallSounds
setNeedsManualInCallSounds:
soundRegion
setSoundRegion:
setLocallyHasSentInvitation
tuHandle
isRemoteUplinkMuted
setRemoteUplinkMuted:
initWithIdentifier:
inviteData
relayInviteDictionary
becomeEndpointForPullFromRemoteDevice
prepareConferenceConnection:remoteInviteDictionary:completion:
handleIncomingCallMessageFromHost:fromPairedDevice:
handleCallDialedMessageFromHost:fromPairedDevice:
handleCallAnsweredElsewhereMessageFromHost:fromPairedDevice:
handleCallDisconnectedMessageFromHost:
handleCallConnectedMessageFromHost:
handlePullRelayingCallsMessageFromHost:fromPairedDevice:
handleResetWantsHoldMusicFromHost:
handleUpdateCallModelMessageFromHost:
handleDeviceUnavailableMessageFromHost:
handleResetStateMessageFromHost:fromPairedDevice:
handleHardPauseDigitsAvailabilityMessageFromHost:
handleUpdateRemoteCallStateMessageFromHost:
handleCallStartedConnectingMessageFromHost:
handlePushHostedCallsMessageFromHost:completion:
handleUpdateCallContextAvailableMessageFromHost:
handleNeedsManualInCallSoundsChangeMessageFromHost:
handleInvitationSentMessageFromHost:
handleUpdateCallDisplayContextMessageFromHost:
handleUpdateRemoteUplinkMutedMessageFromHost:
intValue
initWithType:
setDestinationID:
setService:
setUniqueProxyIdentifier:
setSourceIdentifier:
setDTMFKey:
setDisconnectedReason:
enumerateKeysAndObjectsUsingBlock:
setType:
pairedDeviceExists
setMessageSendTime:
receivedMessageType
tuProvider
initWithProvider:
setVideo:
sourceIdentifier
setAudioSourceIdentifier:
isVoicemail
setDialType:
isEmergency
isSOS
setSOS:
contactIdentifier
setContactIdentifier:
protoService
setProtoService:
protoWantsHoldMusic
setProtoWantsHoldMusic:
protoDisconnectedReason
setProtoDisconnectedReason:
protoCannotBeAnswered
setProtoCannotBeAnswered:
protoDTMFKey
bytes
dataWithBytes:length:
setProtoDTMFKey:
protoVoicemail
setProtoVoicemail:
hardPauseState
setHardPauseState:
protoShouldSuppressRingtone
setProtoShouldSuppressRingtone:
protoNeedsManualInCallSounds
setProtoNeedsManualInCallSounds:
protoSoundRegion
setProtoSoundRegion:
protoCannotRelayAudioOrVideoOnPairedDevice
setProtoCannotRelayAudioOrVideoOnPairedDevice:
protoExpectedEndpointOnMessagingDevice
setProtoExpectedEndpointOnMessagingDevice:
initWithCallCapabilitiesState:
setProtoCallCapabilitiesState:
protoCallCapabilitiesState
protoEmergency
setProtoEmergency:
protoSOS
setProtoSOS:
protoUplinkMuted
setProtoUplinkMuted:
protoRemoteUplinkMuted
setProtoRemoteUplinkMuted:
protoCallModel
protoCallModelState
holdAllowed
mergeable
takingCallsPrivateAllowed
ambiguityState
addCallAllowed
sendToVoicemailAllowed
setProtoCallModel:
setProtoCallModelState:
setAmbiguityState:
setSwappable:
setMergeable:
setHoldAllowed:
setAddCallAllowed:
setTakingCallsPrivateAllowed:
setHardPauseAvailable:
setEndAndAnswerAllowed:
isHoldAndAnswerAllowed
setHoldAndAnswerAllowed:
setSendToVoicemailAllowed:
initWithCall:
addProtoCall:
handleWithTUHandle:
destinationID
destinationIdIsEmailAddress
setProviders:
protoProvider
service
providerWithService:video:
setProtoProvider:
serviceForProvider:video:
hasProtoVideo
protoVideo
setProtoVideo:
protoDisplayContext
initWithCallDisplayContext:
setProtoDisplayContext:
initWithDictionary:
initWithType:uniqueProxyIdentifier:
receivedMessageTypeString
dialRequest
wantsHoldMusic
setCannotBeAnswered:
DTMFKey
setVoicemail:
customizeForProtocolVersion:
setShouldSuppressRingtone:
setCannotRelayAudioOrVideoOnPairedDevice:
isExpectedEndpointOnMessagingDevice
setExpectedEndpointOnMessagingDevice:
setCallCapabilitiesState:
setEmergency:
setCallModel:
addCall:
setTuHandle:
setTuProviders:
setTuProvider:
setTuProvider:isVideo:
setValue:
setHasType:
hasType
typeAsString:
StringAsType:
hasValue
_type
_value
callUpdateWithDefaultValuesSet
systemMuteStatusChanged:
hasVideo
sanitizedCallUpdate
updateWithCallUpdate:
baseDestinationID
initWithDialRequest:
endpointOnCurrentDevice
initOutgoingWithUniqueProxyIdentifier:backingCallSourceIdentifier:callUpdate:isVideo:endpointOnCurrentDevice:
initWithStartCallAction:
initWithJoinConversationRequest:
usesSystemMuting
sharedAudioSystemController
setUnderlyingUplinkMuted:
propertiesChanged
backingCallSource
displayCallSourceIdentifier
mergedCallUpdate
updateWithUpdate:
model
handleUpdatedPropertiesAfterChangesInBlock:
hasStartedOutgoing
isTelephonyProvider
failureContext
failureReason
endedReasonUserInfoForCall:
localizedCallerName
crossDeviceIdentifier
callHistoryIdentifier
pauseDigitsQueue
originalPauseDigitsString
stringByAppendingString:
hasSet
isUsingBaseband
isWiFiCallingCurrentlyAvailable
isBlocked
videoStreamToken
audioInterruptionProvider
audioInterruptionOperationMode
audioInterruptionProviderType
audioSessionID
retrieveSessionWithID:
audioCategory
proxyAVAudioSession
category
audioMode
mode
requiresInCallSounds
inCallSoundRegion
ttyType
supportsTTYWithVoice
handoffContext
handoffIdentifier
remoteParticipantHandles
activeRemoteParticipantHandles
prefersExclusiveAccessToCellularNetwork
providerCallDelegate
backingCallSourceIdentifier
providerWithIdentifier:
backingProvider
nextPauseDigits
isHardPause
digits
hasQueuedHardPauseDigits
sendingVideo
isUnderlyingUplinkMuted
isDownlinkMuted
processIdentifier
providerContext
unsignedIntegerValue
callGroupUUID
_sendSoftPauseDigitsIfNecessary
uniqueProxyIdentifierUUID
initWithCallUUID:relaying:
performCallAction:forCall:
setTTYType:
isVideoUpgradeFromCall:
initWithCallUUID:handle:
setRelay:
setUpgrade:
isRedial
setRetry:
dialType
dialWithRequest:displayContext:
callSourceForDialRequest:
setBackingCallSource:
startCallActionWithDialRequest:
performStartCallAction:forCall:
callSourceForJoinConversationRequest:
answerWithRequest:
initWithCallUUID:
hold
_setIsOnHold:
unhold
initWithCallUUID:onHold:
dequeueAllPauseDigits
groupWithOtherCall:
initWithCallUUID:callUUIDToGroupWith:
ungroup
disconnectWithReason:
initWithCallUUID:sendingVideo:
initWithCallUUID:muted:
setDownlinkMuted:
_sendDTMFDigits:type:
stringWithCharacters:length:
initWithCallUUID:videoPresentationSize:
initWithCallUUID:videoPresentationState:
dequeueNextPauseDigits
initWithCallUUID:digits:type:
isConnected
handleAudioSessionActivationStateChangedTo:
pauseDigitsQueueChanged:
initIncomingWithBackingCallSource:UUID:update:
initOutgoingWithDialRequest:
initOutgoingWithRequestedStartCallAction:backingCallSource:
initOutgoingWithJoinConversationRequest:
initWithHandoffContext:backingCallSource:
canBeControlledByCallSource:
updateForDisconnection
endedReasonUserInfo
callerNameFromNetwork
isThirdPartyVideo
displayProvider
callStatusFromUnderlyingSource
callRelaySupport
providerProcessIdentifier
initialLinkType
setHeld:
setCallGroupUUID:
setFailureContext:
joinConversationWithRequest:
sendHardPauseDigits
playRemoteDTMFToneForKey:
setTtyType:
conversationGroupUUID
setConversationGroupUUID:
setProviderCallDelegate:
setDisplayCallSourceIdentifier:
setMergedCallUpdate:
setPauseDigitsQueue:
_outgoing
_held
_sendingVideo
_underlyingUplinkMuted
_video
_ttyType
_callGroupUUID
_conversationGroupUUID
_providerCallDelegate
_backingCallSource
_failureContext
_backingCallSourceIdentifier
_displayCallSourceIdentifier
_mergedCallUpdate
_pauseDigitsQueue
handleCallHasStartedOutgoingChangedNotification:
handleCallStatusChangedNotification:
handleCallStartedConnectingNotification:
handleCallConnectedNotification:
handleCallMayRequireBreakBeforeMakeChangedNotification:
handleCallWantsHoldMusicChangedNotification:
UTF8String
_handleCallHasStartedOutgoingChanged:
_handleCallStatusChanged:
_handleCallStartedConnecting:
_handleCallConnected:
_handleCallMayRequireBreakBeforeMakeChanged:
_handleCallWantsHoldMusicChanged:
callCenter
wantsBreakBeforeMake
nonWifiFaceTimeAvailable
wiFiActiveAndReachable
objectForKey:
doubleValue
_handleAudioReadyForCall:
_setUpCallDurationLimitIfNecessary
_updateCallMutingForHoldMusic
disconnectCall:
_disconnectOrPullExistingCallsForCallIfNecessary:
_pushCallToAlternateDestinationIfNecessary:
_notifyCLTMOfIncomingCall
unsuppressRingtoneIfNecessary
setHeySiriEnabled:
_setUpBreakBeforeMakeTimerIfNecessaryForCall:
requestCLTMThrottleUncapToken
pullRelayingCallsFromClient
endpointIDSDestination
pushHostedCallsToDestination:
breakBeforeMakeTimeout
uplinkWasExplicitlyMuted
hasRestrictionsInRetailEnvironment
callDurationLimitTimer
_handleCallDurationTimerFired
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setCallDurationLimitTimer:
callsPassingTest:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
setUsesNotificationCenter:
setRepresentedApplicationBundle:
addUserNotification:listener:completionHandler:
isAudioMutedForHoldMusic
setAudioMutedForHoldMusic:
setRequestCLTMThrottleUncapToken:
_audioMutedForHoldMusic
_requestCLTMThrottleUncapToken
_callDurationLimitTimer
deviceType
initWithResolver:
updateAssertion
resolver
resolvedDescriptor
inCallStatusBarAssertionWithDescriptor:
assertion
statusString
setStatusString:
setAssertion:
acquireWithHandler:invalidationHandler:
isDeviceSupported
resolutionChangedForResolver:
setResolver:
applicationStateMonitor
setApplicationStateMonitor:
_resolver
_assertion
_applicationStateMonitor
inCallUIWantsStatusBarSuppression
statusBarStyleOverrides
assertionWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:
setName:
modelIdentifier
setModelIdentifier:
uniqueIDOverride
setUniqueID:
phoneNumberURI
setPhoneNumberURI:
isDefaultPairedDevice
setDefaultPairedDevice:
supportsRestrictingSecondaryCalling
setSupportsRestrictingSecondaryCalling:
initWithIDSDevice:
setBundleId:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasBundleId
setHasFailureReason:
hasFailureReason
setActionType:
setHasActionType:
hasActionType
setProviderWasReset:
setHasProviderWasReset:
hasProviderWasReset
timestamp
bundleId
actionType
providerWasReset
_actionType
_failureReason
_timestamp
_bundleId
_providerWasReset
setUpSession
session
groupID
participantDestinationIDs
dictionaryWithObjects:forKeys:count:
account
initWithAccount:options:
setSession:
setDelegate:queue:
sessionEndedReason
sessionID
setPreferences:
setParticipantInfo:
joinGroupSession
leaveGroupSession
sessionProvider:endedWithReason:error:
sessionProvider:didJoinGroupWithParticipantsInfo:error:
sessionProvider:didLeaveGroupWithError:
sessionProvider:wasJoinedByParticipantWithInfo:
sessionProvider:wasLeftByParticipantWithInfo:
groupSessionEnded:withReason:error:
sessionDidJoinGroup:participantsInfo:error:
sessionDidLeaveGroup:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:didGetGroupSessionParticipants:requestID:error:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:
sessionStarted:
sessionEnded:
sessionEnded:withReason:error:
session:didReceiveData:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationCancelFromID:withData:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
session:invitationSentToTokens:shouldBreakBeforeMake:
join
initWithGroupID:participantDestinationIDs:account:queue:
_session
_groupID
_participantDestinationIDs
_account
data
setData:
completion
setCompletion:
_data
_completion
initWithSessionProvider:isInitiator:remoteProtocolVersion:
sessionProvider
setStreamPreferences:
initWithSessionProvider:isInitiator:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
runBlocksPendingTransportAvailability:
removePendingData
transport
remoteDestination
setRemoteDestination:
remoteDevice
setRemoteDevice:
identifiers
allObjects
allIdentifiers
blocksPendingTransportAvailability
performBlockOnTransportAvailability:
hasStarted
hasReceivedAccept
isInitiator
acceptPayloadData
runBlocksPendingTransportAvailabilityIfNecessary:
pendingData
sendData:waitUntilConnected:completion:
pendData:completion:
_sendInvitationWithData:declineOnError:alwaysSendData:
_acceptInvitationWithData:alwaysSendData:
_cancelInvitationWithData:reason:alwaysSendData:
_declineInvitationWithData:alwaysSendData:
sessionProviderStarted:
sendPendingData
setHasStarted:
setHasReceivedAccept:
setAcceptPayloadData:
destinationWithURI:
deviceForFromID:
session:receivedInvitationAcceptWithData:fromDestination:device:
session:receivedInvitationCancelWithData:fromDestination:device:
session:receivedInvitationDeclineWithData:fromDestination:device:
session:receivedData:fromDestination:device:
initAsInitiatorWithSessionProvider:identifiers:
initAsReceiverWithSessionProvider:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:
hasIdentifier:
addIdentifier:
addIdentifiers:
removeIdentifier:
removeIdentifiers:
mergeSession:
sendDataAndSendInvitationIfNecessary:declineOnError:
sendDataAndAcceptInvitationIfNecessary:
sendDataAndCancelInvitationIfNecessary:
sendDataAndDeclineInvitationIfNecessary:
prepareToEnd
sessionProvider:receivedInvitationAcceptFromID:withData:
sessionProvider:receivedInvitationCancelFromID:withData:
sessionProvider:receivedInvitationDeclineFromID:withData:
sessionProvider:receivedSessionMessageFromID:withData:
_hasStarted
_hasReceivedAccept
_remoteDestination
_remoteDevice
_pendingData
_identifiers
_blocksPendingTransportAvailability
_acceptPayloadData
thumperCallingCapabilitiesChanged:
devicesChanged:
_updateThumperIsNowSupportedDefault
_updateThumperIsNowEnabledDefault
_updateDefaultPairedDeviceUniqueIDDefault
_checkIfDevicesShouldBeUnenrolled
initWithDomain:
domainAccessor
boolForKey:keyExistsAndHasValidFormat:
setBool:forKey:
synchronize
isThumperCallingEnabled
showReminderNotificationOnSecondaryDevice
removeReminderNotificationOnSecondaryDevice
_checkIfDevicesShouldBeEnrolled
showEmergencyAddressDisclaimerOnSecondaryDevice
removeEmergencyAddressDisclaimerOnSecondaryDevice
areCTCapabilitiesValid
supportsThumperCalling
_thumperIsNowSupported
_thumperIsNoLongerSupported
_thumperIsNowEnabled
_thumperIsNoLongerEnabled
defaultPairedDevice
_defaultPairedDeviceChanged
isThumperCallingAllowedOnDefaultPairedSecondaryDevice
thumperCallingAllowedOnDefaultPairedDeviceDefault
setThumperCallingAllowedOnDefaultPairedSecondaryDevice:
devices
valueForKey:
localThumperAccount
allowedSecondaryDeviceIDs
setThumperCallingAllowed:onSecondaryDeviceWithID:
supportsThumperCallingOverCellularData
countForIdentifier:
response
requestPinFromPrimaryDevice
removeNotificationsForServiceIdentifier:
preferencesURL
setThumperCallingAllowedOnDefaultPairedDeviceDefault:
setDomainAccessor:
_dataSource
_domainAccessor
addServiceDelegate:queue:
callerIDChanged:
addListenerID:forService:
serviceAvailabilityChanged:
_faceTimeAudioAvailability
_faceTimeVideoAvailability
_updateOutgoingCallerID
removeListenerID:forService:
faceTimeIDMatchesAppleID
outgoingCallerID
accountsChanged
updateOutgoingCallerIDAndSendDelegateCallbacksIfNecessary
faceTimeAvailabilityChanged
iCloudAccount
isActive
profileID
isEqualToIgnoringCase:
availabilityForListenerID:forService:
outgoingCallerIDChanged
availableOutgoingRelayCallerIDs
vettedAliases
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
caseInsensitiveCompare:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:token:time:error:
service:didHintCheckingTransportLogWithReason:
isFaceTimeAudioAvailable
isFaceTimeVideoAvailable
setOutgoingCallerID:
_outgoingCallerID
shouldUseSocketForTransport
isAudioEnabled
setIsAudioEnabled:
invitationTimeOut
setInvitationTimeOut:
sendSessionMessage:
sendInvitationWithData:declineOnError:
acceptInvitationWithData:
cancelInvitationWithData:
cancelInvitationWithRemoteEndedReasonOverride:
declineInvitationWithData:
endSession
sessionProvider:invitationSentToPushTokens:shouldBreakBeforeMake:
setAudioEnabled:
invitationTimeout
setInvitationTimeout:
initWithSession:queue:
initWithDigits:isHardPause:
setDigits:
setHardPause:
_hardPause
_digits
label
setLabel:
initWithHandle:label:
tuLabeledHandle
handleWithTULabeledHandle:
initWithCallCenterObserver:queue:
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
preventDetachAfterEmergencyCallTimeout
setEmergencyCallbackPossible:
preventDetachAfterEmergencyCallTimeoutBlock
dispatchCancelHandler
setPreventDetachAfterEmergencyCallTimeoutBlock:
emergencyCallbackCapabilitiesChanged:
dispatchAfterHandler
startPreventDetachAfterEmergencyCallTimer
isEmergencyCallbackPossible
setPreventDetachAfterEmergencyCallTimeoutDeterminationHandler:
setDispatchAfterHandler:
setDispatchCancelHandler:
_emergencyCallbackPossible
_preventDetachAfterEmergencyCallTimeoutBlock
_preventDetachAfterEmergencyCallTimeoutDeterminationHandler
_dispatchAfterHandler
_dispatchCancelHandler
initWithSerialQueue:
callProviderManagerClientXPCInterface
setRemoteObjectInterface:
callProviderManagerServerXPCInterface
setExportedInterface:
setExportedObject:
setRequiredConnectionCapability:
setInterruptionHandler:
setInvalidationHandler:
asynchronousExportedObjectProxy
setAsynchronousServer:
synchronousExportedObjectProxy
setSynchronousServer:
clientManager
startListeningOnMachServiceWithName:
isRemote
providersByIdentifierForRemoteClients
providersByIdentifier
currentClient
providersByIdentifierForClient:
launchAppForDialRequest:completion:
addLocalClientObject:
removeLocalClientObject:
updateProvidersByIdentifier:
performBlockOnClients:coalescedByIdentifier:
providersByIdentifier:
launchAppForDialRequest:reply:
registerClient:
unregisterClient:
initWithProviderManager:
_clientManager
_providerManager
applicationProxyForIdentifier:
machOUUIDs
initWithSession:remoteHandle:wantsVideo:
conference
dateReceivedFirstRemoteFrame
hasSentInvitation
invitedPushTokens
underlyingErrorCode
remoteFromID
chatEnded:
localPortraitAspectRatioForChat:
setIsKeyExchangeEnabled:
setIsVideoEnabled:
isVideoEnabled
setIsDuplexAudioOnly:
setIsRelayForced:
setIsRelayEnabled:
shouldStartAudioPaused
setIsAudioPausedToStart:
shouldStartVideoPaused
setIsVideoPausedToStart:
_setLocalAspectRatiosForVideoAspectRatioDescriptor:
setInviteCompletion:
prepareConference
cancelInvitationWithReason:
declineInvitation
cancelOrDeclineInvitation
_handlePushTokensInvited:didSendInvitation:didCancelInvitation:
setShouldStartAudioPaused:
setShouldStartVideoPaused:
chatStartedConnecting:
conferenceCreationBlock
setConference:
faceTimeAppUUID
inviteCompletion
setInvitedPushTokens:
setHasSentInvitation:
chatSentInvitation:
_setDateEndedIfNecessary
initWithData:
faceTimeInviteDictionary
isWiFiAllowedForChat:
setWiFiAllowed:
isCellularDataAllowedForChat:
setCellularDataAllowed:
isCellularDataPreferredForChat:
setCellularDataPreferred:
initWithFaceTimeInviteDictionary:
setInviteData:
isMomentsAvailableForChat:
sendInvitationWithData:
chatConnected:
setDateReceivedFirstRemoteFrame:
chat:inputFrequencyLevelChangedTo:
chat:outputFrequencyLevelChangedTo:
chat:changedBytesOfDataUsed:
chat:receivedData:
session:endedWithReason:
session:invitationSentToPushTokens:shouldBreakBeforeMake:
session:receivedInvitationAcceptWithData:
session:receivedInvitationDeclineWithData:
session:receivedInvitationCancelWithData:
session:receivedData:
startWithVideoAspectRatioDescriptor:inviteCompletion:
answerWithVideoAspectRatioDescriptor:
cancelInvitationWithAnsweredElsewhere
cancelInvitationWithDeclinedElsewhere
sendDataUnreliably:
sessionUUID
setRelaying:
initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:
initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:
setConferenceCreationBlock:
_relaying
_remoteUplinkMuted
_remoteMomentsAvailable
_shouldStartAudioPaused
_shouldStartVideoPaused
_mayRequireBreakBeforeMake
_hasSentInvitation
_conference
_dateReceivedFirstRemoteFrame
_invitedPushTokens
_inviteCompletion
_conferenceCreationBlock
numberWithDouble:
numberWithFloat:
addOtherUniqueProxyIdentifiers:
addProviders:
setOBSOLETEConferenceIdentifier:
setCallerNameFromNetwork:
protoCallsCount
clearProtoCalls
protoCallAtIndex:
setDummyPayload:
otherUniqueProxyIdentifiersCount
clearOtherUniqueProxyIdentifiers
otherUniqueProxyIdentifiersAtIndex:
providersCount
clearProviders
providersAtIndex:
protoCallType
otherUniqueProxyIdentifiersType
providersType
hasUniqueProxyIdentifier
hasDestinationID
hasSourceIdentifier
hasProtoCallModelState
setHasProtoService:
hasProtoService
setHasProtoWantsHoldMusic:
hasProtoWantsHoldMusic
setHasProtoCannotBeAnswered:
hasProtoCannotBeAnswered
hasProtoDTMFKey
setHasProtoDisconnectedReason:
hasProtoDisconnectedReason
hasOBSOLETEConferenceIdentifier
setHasProtoVoicemail:
hasProtoVoicemail
hasCallerNameFromNetwork
hasHardPauseDigits
setHasHardPauseState:
hasHardPauseState
setReceivedMessageType:
setHasReceivedMessageType:
hasReceivedMessageType
receivedMessageTypeAsString:
StringAsReceivedMessageType:
setHasProtoProtocolVersion:
hasProtoProtocolVersion
setHasProtoShouldSuppressRingtone:
hasProtoShouldSuppressRingtone
hasDummyPayload
setHostCallCreationTime:
setHasHostCallCreationTime:
hasHostCallCreationTime
setHasMessageSendTime:
hasMessageSendTime
setHasProtoNeedsManualInCallSounds:
hasProtoNeedsManualInCallSounds
setHasProtoCannotRelayAudioOrVideoOnPairedDevice:
hasProtoCannotRelayAudioOrVideoOnPairedDevice
setHasProtoExpectedEndpointOnMessagingDevice:
hasProtoExpectedEndpointOnMessagingDevice
hasContactIdentifier
hasProtoCallCapabilitiesState
setHasProtoSoundRegion:
hasProtoSoundRegion
setHasProtoEmergency:
hasProtoEmergency
hasProtoCallModel
setHasProtoSOS:
hasProtoSOS
hasProtoDisplayContext
hasInviteData
hasProtoProvider
setHasProtoVideo:
setHasProtoUplinkMuted:
hasProtoUplinkMuted
setHasProtoRemoteUplinkMuted:
hasProtoRemoteUplinkMuted
setSystemVolume:
setHasSystemVolume:
hasSystemVolume
oBSOLETEConferenceIdentifier
setProtoCalls:
dummyPayload
otherUniqueProxyIdentifiers
setOtherUniqueProxyIdentifiers:
systemVolume
_hostCallCreationTime
_messageSendTime
_callerNameFromNetwork
_contactIdentifier
_destinationID
_dummyPayload
_hardPauseDigits
_hardPauseState
_inviteData
_oBSOLETEConferenceIdentifier
_otherUniqueProxyIdentifiers
_protoCallCapabilitiesState
_protoCallModel
_protoCallModelState
_protoCalls
_protoDTMFKey
_protoDisconnectedReason
_protoDisplayContext
_protoProtocolVersion
_protoProvider
_protoService
_protoSoundRegion
_providers
_receivedMessageType
_sourceIdentifier
_systemVolume
_uniqueProxyIdentifier
_protoCannotBeAnswered
_protoCannotRelayAudioOrVideoOnPairedDevice
_protoEmergency
_protoExpectedEndpointOnMessagingDevice
_protoNeedsManualInCallSounds
_protoRemoteUplinkMuted
_protoSOS
_protoShouldSuppressRingtone
_protoUplinkMuted
_protoVideo
_protoVoicemail
_protoWantsHoldMusic
_callFilterIdentifier
dataSource:doNotDisturbChanged:
beginObservingDoNotDisturbChanges
setFilterBlock:
isDestinationIDAllowedThroughDoNotDisturb:
addHandoffIdentifier:
addEmergencyLabeledHandles:
setIdentifier:
setLocalizedName:
setBundleURLString:
setRingtoneSoundURLString:
setOriginalRingtoneSoundURLString:
handoffIdentifiersCount
clearHandoffIdentifiers
handoffIdentifierAtIndex:
protoSupportedHandleTypesCount
clearProtoSupportedHandleTypes
protoSupportedHandleTypeAtIndex:
addProtoSupportedHandleType:
emergencyLabeledHandlesCount
clearEmergencyLabeledHandles
emergencyLabeledHandlesAtIndex:
handoffIdentifierType
emergencyLabeledHandlesType
hasIdentifier
hasLocalizedName
hasBundleURLString
setMaximumCallGroups:
setHasMaximumCallGroups:
hasMaximumCallGroups
setMaximumCallsPerCallGroup:
setHasMaximumCallsPerCallGroup:
hasMaximumCallsPerCallGroup
setSupportsAudioOnly:
setHasSupportsAudioOnly:
hasSupportsAudioOnly
setSupportsAudioAndVideo:
setHasSupportsAudioAndVideo:
hasSupportsAudioAndVideo
setSupportsEmergency:
setHasSupportsEmergency:
hasSupportsEmergency
setSupportsVoicemail:
setHasSupportsVoicemail:
hasSupportsVoicemail
hasRingtoneSoundURLString
hasOriginalRingtoneSoundURLString
protoSupportedHandleTypes
setProtoSupportedHandleTypes:count:
setSupportsRecents:
setHasSupportsRecents:
hasSupportsRecents
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
setHandoffIdentifiers:
emergencyLabeledHandles
setEmergencyLabeledHandles:
supportsRecents
_protoSupportedHandleTypes
_bundleURLString
_emergencyLabeledHandles
_handoffIdentifiers
_identifier
_localizedName
_maximumCallGroups
_maximumCallsPerCallGroup
_originalRingtoneSoundURLString
_ringtoneSoundURLString
_supportsAudioAndVideo
_supportsAudioOnly
_supportsEmergency
_supportsRecents
_supportsVoicemail
setSessionMessenger:
sessionMessenger
setPairedDeviceMessenger:
pairedDeviceMessenger
_handleConferenceConnectionWillClose:
_handleConferenceConnectionDidClose:
dialingIDSDevice
prepareConnectedSessionsToEnd
endEndingSessions
setDialingIDSDevice:
isPairedDevice
outgoingRelayCallerID
linkedUserURIs
_stripFZIDPrefix
deviceWithActiveSession
pairedDevice
identifiersForSessionInvitationWithMessage:
initWithRelayInviteDictionary:
sendMessage:andAcceptInvitationIfNecessaryForIdentifier:
cancelOrDeclineInvitationForIdentifier:
dateCreated
sendMessage:completionHandler:
sendMessage:andStartSessionIfNecessaryForIdentifier:toDevicesSupportingProvider:withTimeout:
prepareConferenceForCall:remoteInviteDictionary:completion:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:completionHandler:
_shouldSendToPairedIDSDevice
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier:
sendMessage:forIdentifier:
sendMessage:forIdentifier:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:
hostMessagingDelegate
sendMessage:andStartSessionIfNecessaryForIdentifiers:toDestination:timeout:completionHandler:
pushHostedCallsForRemoteInviteDictionary:destination:completion:
_updateDialingIDSDevice
sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:
disconnectCall:withReason:
cannotRelayAudioOrVideo
sessionProtocolVersionForIdentifier:
callWithStatus:
isFaceTimeProvider
sendHoldCallMessageToHostForCall:
sendAnswerCallMessageToHostForCall:
sendMessage:timeout:completionHandler:
clientMessagingDelegate
canReceiveRelayedCalls
reportRelayMessageReceived:fromPairedDevice:
commonMessagingDelegate
_handleRetrievedLocalInviteDictionary:forMessage:
handleDialCallMessageFromClient:destination:completion:
handleAnswerCallMessageFromClient:destination:
handlePlayDTMFToneForKeyMessage:
handleHoldCallMessageFromClient:
handleUnholdCallMessageFromClient:
handleGroupCallMessageFromClient:
handleUngroupCallMessageFromClient:
handleDisconnectCallMessageFromClient:
handleSwapCallsMessageFromClient:
handleEndActiveAndAnswerMessageFromClient:
handleEndHeldAndAnswerMessageFromClient:
handleDisconnectCurrentCallAndActivateHeldMessageFromClient:
handleDisconnectAllCallsMessageFromClient:
handleSendHardPauseDigitsMessageFromClient:
handleSuppressRingtoneMessage:
handleRequestCallContextMessageFromClient:
handlePullHostedCallsMessageFromClient:destination:completion:
handlePushRelayingCallsMessageFromClient:
handleHoldActiveAndAnswerMessageFromClient:
handleSetUplinkMutedMessage:
handleUpdateSystemVolumeMessageFromHost:
shouldDeclineSessionInviteWithMessageWhenRelayIsDisabled:
_callsWithUniqueProxyIdentifiers:
messagingConnectionEndedForCalls:didStartConnecting:
messagingConnectionFailedForCalls:didStartConnecting:
messagingConnectionCouldNotEstablishLinkForCalls:didStartConnecting:
_shouldDeclineSessionInviteWithMessage:
isGuest
allowCallForDestinationID:providerIdentifier:isFromBlockList:
shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:
isDirectTelephonyCallingCurrentlyAvailable
isDirectFaceTimeAudioCallingCurrentlyAvailable
performBlockOnTransportAvailability:forIdentifier:
prepareSessionToEndForIdentifier:
messenger:handledMessage:fromDestination:device:
messengerConnectionEnded:forIdentifiers:didStartConnecting:
messengerConnectionFailed:forIdentifiers:didStartConnecting:
messengerConnectionCouldNotEstablishLink:forIdentifiers:didStartConnecting:
shouldDeclineSecondSessionInviteWithMessage:
shouldIgnoreSessionInviteWithMessage:fromDestination:
timeoutForInvitationWithMessage:
_relayInvitationTimeoutForTimeout:
sendIncomingCallMessageToClientForCall:cannotBeAnswered:cannotRelayAudioOrVideoOnPairedDevice:
sendCallDialedMessageToClientForCall:
sendCallAnsweredElsewhereMessageToClientForCall:
sendCallDisconnectedMessageToClientForCall:
sendCallConnectedMessageToClientForCall:
sendResetWantsHoldMusicMessageToClientForCall:
sendUpdateCallDisplayContextMessageToClientForCall:
sendUpdateRemoteUplinkMutedCallMessageToHostForCall:
sendUpdateCallModelMessageToClientForCall:
sendDeviceUnavailableMessageToClientForUniqueProxyIdentifier:
sendPullRelayingCallsMessageToClient
sendResetStateMessageToClient
sendHardPauseAvailabilityMessageToClientForState:digits:
sendUpdateRemoteCallStateMessageToClient
sendCallStartedConnectingMessageToClientForCall:
sendDialCallFailedForUniqueProxyIdentifier:
sendPushCallsMessageToClientDestination:
sendUpdateCallContextMessageToClient
sendNeedsManualInCallSoundsChangeMessageToClientForCall:
sendInvitationSentMessageToClientForCall:
sendDialCallMessageToHostForCall:completionHandler:
sendDisconnectCallMessageToHostForCall:
sendUnholdCallMessageToHostForCall:
sendGroupCallMessageToHostForCall:otherCall:
sendUngroupCallMessageToHostForCall:
sendSwapCallsMessageToHost
sendEndActiveAndAnswerCallMessageToHostForCall:
sendEndHeldAndAnswerCallMessageToHostForCall:
sendHoldActiveAndAnswerCallMessageToHostForCall:
sendDisconnectCurrentCallAndActivateHeldMessageToHostForDisconnectedCall:
sendDisconnectAllCallsMessageToHostForDisconnectedCall:
sendSendHardPauseDigitsMessageToHostForCall:
sendRequestCallStateMessageToHost
sendPullCallsMessageToHost
sendPushRelayingCallsMessageToHostForSourceIdentifier:
sendPlayDTMFToneForKeyMessageForCall:DTMFKey:
sendSetUplinkMutedCallMessageForCall:uplinkMuted:
sendSuppressRingtoneMessageForCall:
sendUpdateSystemVolumeForCall:volume:
prepareToDisconnectMessagingConnectionForCall:
disconnectMessagingConnectionForCall:
setClientMessagingDelegate:
setHostMessagingDelegate:
setCommonMessagingDelegate:
_clientMessagingDelegate
_hostMessagingDelegate
_commonMessagingDelegate
_sessionMessenger
_pairedDeviceMessenger
_dialingIDSDevice
setMediaBlob:
setCallInfoBlob:
setSKEBlob:
mediaBlob
callInfoBlob
sKEBlob
recentsController
clearNotificationsIfNecessary
voipApplicationController
handleApplicationUninstalledNotification:
setSignalHandlerDispatchSources:
_observeSignal:usingHandler:
setCallStateMonitor:
setRelayMessagingController:
addReporter:
setMomentsController:
momentsController
setStatusBarManager:
setCallDirectoryManager:
setVoipApplicationController:
setRelayClientController:
relayClientController
setRelayHostController:
relayHostController
setRelayCommonController:
relayCommonController
setProximityController:
setAudioController:
audioController
_setUpLanguageChangeListener
handleAllNewCalls
signalHandlerDispatchSources
string
callStateMonitor
callDirectoryManager
orientationMonitor
setOrientationMonitor:
proximityController
statusBarManager
_callStateMonitor
_relayMessagingController
_relayClientController
_relayHostController
_relayCommonController
_callDirectoryManager
_voipApplicationController
_momentsController
_signalHandlerDispatchSources
_orientationMonitor
_proximityController
_audioController
_statusBarManager
availability
setAvailability:
setHasAvailability:
hasAvailability
availabilityAsString:
StringAsAvailability:
setPhotoRequestSuccessCount:
setHasPhotoRequestSuccessCount:
hasPhotoRequestSuccessCount
setPhotoRequestFailureCount:
setHasPhotoRequestFailureCount:
hasPhotoRequestFailureCount
setMedianRequestDuration:
setHasMedianRequestDuration:
hasMedianRequestDuration
setMeanRequestDuration:
setHasMeanRequestDuration:
hasMeanRequestDuration
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
_meanRequestDuration
_medianRequestDuration
_availability
_photoRequestFailureCount
_photoRequestSuccessCount
initWithCapabilities:
mutableChats
phoneNumberWithDigits:countryCode:
unformattedInternationalRepresentation
isWiFiAvailable
isWiFiAllowed
isCellularDataAvailable
isCellularDataAllowed
incomingSessionProviderGenerator
initAsReceiverWithSessionProvider:remoteFromID:remoteProtocolVersion:
waitingChatWithHandle:isOutgoing:
incomingChatGenerator
callUpdateForChat:
updateCacheWithChat:
providerDidBegin
TUCallRemoteVideoPresentationStateFromCXVideoPresentationState:
isCellularDataPreferred
mainDisplay
bounds
handleByFullyQualifyingHandle:usingCountryCode:
chats
setProviderDidBegin:
setIncomingSessionProviderGenerator:
setIncomingChatGenerator:
_mutableChats
_providerDidBegin
_incomingSessionProviderGenerator
_incomingChatGenerator
hasSKEBlob
hasMediaBlob
hasCallInfoBlob
_callInfoBlob
_mediaBlob
_sKEBlob
initWithSessionProvider:
propertiesDescription
remoteProtocolVersionNumber
setRemoteProtocolVersionNumber:
initWithSocket:
initWithDestination:
setInitialLinkType:
initAsInitiatorWithSessionProvider:
initAsReceiverWithSessionProvider:remoteProtocolVersion:
remoteProtocolVersion
setReceiverProtocolVersion:
sendInvitation
cancelInvitation
_initiator
_remoteProtocolVersionNumber
_sessionProvider
initWithComponentId:andBlockOnConfiguration:
serverConnection
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
_setUpQueriableMetrics
_awdRelayMessageTypeForMessageType:
setMessageType:
_awdCallServiceForProvider:video:
setCallService:
setLatencyMs:
reportMetricId:usingBlock:
_awdCallInfoForCall:
_awdCallInfoSourceForDisplayContext:
callDirectoryLabel
callDirectoryExtensionIdentifier
setCallInfo:
setCallInfoSource:
setCallDirectoryProviderBundleId:
callSources
transactionForCallSource:
actions
_awdActionTypeForAction:
_awdActionStateForState:
_awdFailureReasonForAction:
commitDate
timeIntervalSinceDate:
setCompletionTimeMs:
addActions:
setFailed:
setTimedOut:
_awdMomentsAvailabilityForAvailability:
supportsRelay
relayDeviceRouteChangesByCallUUID
_awdDeviceRouteForRoute:
_handleQueriedCurrentCallsMetricWithMetricId:
registerQueriableMetric:callback:
setCalls:
isConnecting
isConferenced
callDuration
dateSentInvitation
_awdFaceTimeTransportTypeForFaceTimeTransportType:
_awdTelephonyTransportTypeForTelephonyCallSubType:
_awdLinkTypeForIDSInitialLinkType:
contactName
mapName
suggestedName
location
waitForCurrentReportingOperationsToComplete
setServerConnection:
_serverConnection
_relayDeviceRouteChangesByCallUUID
setAccountID:
setPrimaryDeviceID:
setPhoneNumber:
setPhoneNumberMCC:
setPhoneNumberISOCountryCode:
setAvailableDeviceSlots:
setMutableAllowedSecondaryDeviceIDs:
phoneNumberISOCountryCode
phoneNumberMCC
phoneNumberMCCToISOCountryCodeTransformBlock
phoneNumber
accountID
primaryDeviceID
availableDeviceSlots
mutableAllowedSecondaryDeviceIDs
setPhoneNumberMCCToISOCountryCodeTransformBlock:
addAllowedSecondaryDeviceID:
_accountID
_primaryDeviceID
_phoneNumberURI
_availableDeviceSlots
_mutableAllowedSecondaryDeviceIDs
_phoneNumber
_phoneNumberMCC
_phoneNumberISOCountryCode
isLoaded
startBagLoad
initWithAccount:destinations:options:
serverBag
isQuickRelaySupported
isAccountActive
countryCode
IDSFormattedDestinationID
setWithObject:
isRetry
outgoingSessionProviderGenerator
outgoingChatGenerator
initWithAction:
providerDelegate:requestedTransaction:completion:
instancesRespondToSelector:
inviteIDSPeersWithAction:additionalPeers:completion:
setServerBag:
setIsAccountActive:
setOutgoingSessionProviderGenerator:
setOutgoingChatGenerator:
_serverBag
_isAccountActive
_outgoingSessionProviderGenerator
_outgoingChatGenerator
playLocalDTMFToneForKey:
setActiveCategoryVolume:
lastPathComponent
defaultManager
path
fileExistsAtPath:isDirectory:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
clientFileURLByIdentifier
cleanUpTemporaryFileIfExistsForClientFileURL:
fileTransferer:didTransferFileAtURL:successfully:
temporaryFileURLByClientFileURL
zipDirectoryAtURL:completion:
stringByAppendingPathExtension:
_randomTemporaryPathWithFileName:
fileURLWithPath:
copyItemAtURL:toURL:error:
fileTransferer:didReceiveResourcesAtURL:withMetadata:
deleteContentsAtURL:
unzipArchiveAtURL:completion:
renamedResourceURL:withName:
moveItemAtURL:toURL:error:
pathComponents
removeLastObject
fileURLWithPathComponents:
URLByAppendingPathExtension:
performFileCopierOperation:onInputURL:outputURL:completion:
URLByDeletingLastPathComponent
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
didErrorOccur
cleanup
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
removeItemAtURL:error:
renameResourceAtURL:toResourceWithName:
transferFileAtURL:toDestinations:withMetadata:
_service
_clientFileURLByIdentifier
_temporaryFileURLByClientFileURL
initWithSerialQueue:timeout:
serialQueue
callSourceWithIdentifier:
_fetchCallSourceForExtensionIdentifier:containingAppBundle:completion:
_waitForCallSourceWithIdentifier:completion:
pendingCompletions
allKeys
timeout
bundlePath
initWithExtension:
beginWithCompletionHandler:
extensionsWithMatchingAttributes:completion:
fetchCallSourceForIdentifier:containingAppBundle:extensionIdentifier:completion:
handleCallSourcesChanged
setSerialQueue:
setTimeout:
setPendingCompletions:
_serialQueue
_timeout
_pendingCompletions
rangeOfString:
normalizedDeviceType
setRelayCallingEnabled:forDeviceWithID:
_unenrollDeviceWithUniqueID:
updateUINotification
stringByAppendingFormat:
arrayWithObject:
dictionaryWithObjectsAndKeys:
userNotificationWithIdentifier:timeout:alertLevel:displayFlags:displayInformation:
responseInformation
activateServiceWithPrimaryDevice:
updateCallerID:
setRelayCallingEnabled:
setThumperCallingEnabled:
supportsPhoneCalls
uriForFromID:
ctServiceType
serviceDescription
displayPinMessageForDevice:completionHandler:
enrollDevice:
unenrollDevice:
displayServiceConfirmationWithCompletionHandler:
displayPinRequestFailure
displayIncomingPinCode:fromID:completionHandler:
pinCodeEnteredSuccessfully:cancelled:onPrimaryDevice:
resetOneTimeMessage
launchFaceTime
_thumperCallingAllowedOnDefaultPairedDeviceDefault
setProtoStatus:
setHasProtoStatus:
hasProtoStatus
setProtoConferenced:
setHasProtoConferenced:
hasProtoConferenced
setProtoTimeConnected:
setHasProtoTimeConnected:
hasProtoTimeConnected
setProtoOutgoing:
setHasProtoOutgoing:
hasProtoOutgoing
setProtoHasSentInvitation:
setHasProtoHasSentInvitation:
hasProtoHasSentInvitation
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
_protoTimeConnected
_protoStatus
_protoConferenced
_protoHasSentInvitation
_protoOutgoing
initWithUniqueProxyIdentifier:
setBackingProvider:
canBeAnsweredWithAudioOrVideoRelayWithRequest:
canOnlyBeAnsweredWithoutAudioOrVideoRelayWithRequest:
hasRelaySupport:
relayDelegate
relayCall:didGroupWithOtherCall:
relayCallDidUngroup:
isMutedForIdentifier:
setMuted:forIdentifier:
isSendingAudioForIdentifier:
setSendingAudio:forIdentifier:
setCallStatus:
relayCallDidDial:
relayCall:didAnswerWithRequest:
relayCallDidDisconnect:
relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall:
relayCallConferenceFailedToStart:
relayCallConferenceDidStop:cleanly:error:
startConferenceForIdentifier:usingTransport:remoteInviteDictionary:didStartHandler:didStopHandler:
relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall:
relayCallConferenceDidStartSuccessfullyForPulledCall:
relayCallDidHold:
relayCallDidUnhold:
relayCall:didPlayLocalDTMFToneForKey:
relayCallDidSendHardPauseDigits:
relayCallDidBecomeEndpointForPull:
dateStartedOutgoing
setDateStartedOutgoing:
setDateSentInvitation:
prepareToStopConferenceForIdentifier:
canBeAnsweredWithRequest:
startConferenceForAnsweredCallWithTransport:remoteInviteDictionary:
startConferenceForDialedCallWithTransport:remoteInviteDictionary:
startConferenceForPulledCallWithTransport:remoteInviteDictionary:
stopConference
setLocallyHasStartedOutgoing
setRelayDelegate:
_voicemail
_emergency
_sos
_needsManualInCallSounds
_cannotRelayAudioOrVideo
_callStatus
_backingProvider
_displayContext
_initialLinkType
_relayDelegate
_parsePauseDigitsFromDestinationID:
pauseDigits
appendString:
removeObjectAtIndex:
characterSetWithCharactersInString:
formUnionWithCharacterSet:
rangeOfCharacterFromSet:options:range:
substringWithRange:
characterAtIndex:
characterIsMember:
insertObject:atIndex:
setBaseDestinationID:
setOriginalPauseDigitsString:
setPauseDigits:
_baseDestinationID
_originalPauseDigitsString
_pauseDigits
initWithObject:queue:
processName
processBundleIdentifier
valueForEntitlement:
entitledCapabilities
connection
remoteObjectProxy
addBarrierBlock:
initWithConnection:queue:
objectForBlock
performBlockAfterCoalescing:
isEntitledForCapability:
_processName
_processBundleIdentifier
_entitledCapabilities
sharedUtilityProvider
utilityProvider
currentPreferredTransportMethod
transportMethod
bundleURL
absoluteString
ringtoneSoundURL
originalRingtoneSoundURL
supportedHandleTypes
setSupportedHandleTypes:
setEmergencyTULabeledHandles:
URLWithString:
setBundleURL:
isFileURL
bundleWithURL:
setBundleIdentifier:
setRingtoneSoundURL:
setOriginalRingtoneSoundURL:
emergencyTULabeledHandles
unsignedIntValue
removeServiceDelegate:
pairedDeviceUniqueIDOverrideExists
removeObjectForKey:
_sendMessageOptionsWithTimeout:
sendData:toDestinations:priority:options:identifier:error:
givenName
setGivenName:
middleName
setMiddleName:
familyName
setFamilyName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
nickname
setNickname:
phoneticRepresentation
setPhoneticRepresentation:
initWithPersonNameComponents:
personNameComponents
updateMockCallWithProxyCall:
confirmAllPendingMessagesReceivedWithReply:
interfaceWithProtocol:
updateWithCall:
callForProxyCall:
setClientManager:
setRemoteIDSDestination:
handlesWithTUHandles:
setRemoteParticipantHandles:
numberWithUnsignedInteger:
remoteIDSDestination
sharedPhotoLibrary
creationRequestForAsset
setShouldMoveFile:
addResourceWithType:fileURL:options:
placeholderForCreatedAsset
localIdentifier
performChanges:completionHandler:
saveLivePhotoWithPhotoURL:videoURL:completion:
callStateContext
_registerCallStopEvent
_registerCallStartEventForCall:
visibilityContext
_registerCallBackgroundedEvent
_registerCallForegroundedEventForCall:
eventBlock
_contextDictionaryWithCall:
setCallStateContext:
_registerEventWithContext:status:
setVisibilityContext:
_bundleIdentifierForCall:
setEventBlock:
_eventBlock
_callStateContext
_visibilityContext
initWithContactsDataSource:
initWithConversationManager:
providerConfiguration
initWithIdentifier:callSource:configuration:
conversationManagerXPCServer
initWithLocalizedName:
setSupportsVideo:
setWithObjects:
reportAudioFinishedForCallWithUUID:
reportOutgoingCallWithUUID:startedConnectingAtDate:
faceTimeIDSProviderDelegate
faceTimeIMAVProviderDelegate
reportCallWithUUID:failedAtDate:withContext:
reportCallWithUUID:endedAtDate:privateReason:
deferReportingAudioFinishedForCallWithUUID:
requestTransaction:completion:
faceTimeConversationProviderDelegate
contactsDataProvider
labeledHandlesForContactWithIdentifier:
initWithCallSource:
conversationManager
_contactsDataProvider
_conversationManager
_conversationManagerXPCServer
_faceTimeIDSProviderDelegate
_faceTimeIMAVProviderDelegate
_faceTimeConversationProviderDelegate
initWithPayload:assertion:
payload
setPayload:
_payload
setPendingMessageContexts:
initWithBundleIDs:states:
applicationStateForApplication:
_updateIsRunningForApplicationState:
environment
client
isRunning
token
pendingMessageContexts
bundleWithIdentifier:
infoDictionary
_deliverTokenToApplication
_deliverPendingPayloadsToApplication
setToken:
voipRegistrationSucceededWithDeviceToken:
voipPayloadReceived:withCompletionHandler:
setRunning:
initWithBundleIdentifier:queue:
hasVoIPEntitlement
setClient:
deliverToken:
deliverPayload:withAssertion:
setEnvironment:
_running
_token
_environment
_client
_pendingMessageContexts
hasNamePrefix
hasGivenName
hasMiddleName
hasFamilyName
hasNameSuffix
hasNickname
hasPhoneticRepresentation
_familyName
_givenName
_middleName
_namePrefix
_nameSuffix
_nickname
_phoneticRepresentation
initWithCallCenterObserver:processObserver:notifyObserver:
notifyObserver
setInCallServiceWantsStatusBarSuppressionState:
inCallServiceWantsStatusBarSuppressionState
updateResolvedDescriptor
processObserver
processIdentifierForBundleIdentifier:
setInCallServiceApplicationState:
setApplicationStateChanged:
currentApplicationStateForBundleIdentifier:completion:
resolvedCall
_statusBarStringForCall:
_processIdentifierForCall:
setProcessIdentifier:
_statusBarStyleOverrideForCall:
setStatusBarStyleOverrides:
inCallServiceWantsStatusBarSuppression
setInCallUIWantsStatusBarSuppression:
setResolvedDescriptor:
callDurationUpdateTimer
setCallDurationUpdateTimer:
inCallServiceApplicationState
isRunningForApplicationState:
callDurationString
currentCallsHaveMixedProviders
currentProcessIdentifier
_inCallServiceApplicationState
_processObserver
_notifyObserver
_callDurationUpdateTimer
_resolvedDescriptor
_inCallServiceWantsStatusBarSuppressionState
uplinkMutedStatusChanged:
activeConferenceConnectionForIdentifier:
conferenceConnections
isPreparedToStop
setDidPrepareHandler:
invokeDidPrepareIfNecessary:
_prepareConferenceForConferenceConnection:remoteInviteDictionary:
setTransport:
setDidStartHandler:
setDidStopHandler:
activeConference
setConferenceActiveForIdentifier:
invokeDidStartIfNecessary:error:
isHost
setUsingBaseband:
setAudioDisabled:
isAudioDisabled
updateConferenceForIdentifier:isUsingBaseband:disableAudio:
setPreparedToStop:
_conferenceConnectionsForConference:
prepareToStopTimeout
_cleanUpAllConferenceConnectionsForConference:withError:
conferenceConnectionForIdentifier:
_cleanUpConferenceConnection:error:
errorWithDomain:code:userInfo:
invokeDidStopIfNecessary:error:
_stopConference:
conferencesAwaitingConnectionClose
_postDidCloseNotificationForConference:
closeConnectionTimeout
_postDidCloseNotificationForConferenceIfNecessary:
setConferenceConnections:
setConferencesAwaitingConnectionClose:
setCloseConnectionTimeout:
setPrepareToStopTimeout:
_conferenceConnections
_conferencesAwaitingConnectionClose
_closeConnectionTimeout
_prepareToStopTimeout
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
URLByStandardizingPath
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithName:fileManager:error:
urlForFilename:
fileManager
fileExistsAtPath:
getResourceValue:forKey:error:
linkItemAtURL:toURL:error:
minusSet:
URLByAppendingPathComponent:
initWithName:error:
createLinkIfNecessaryWithFilename:toURL:error:
removeLinksForFilenamesNotInArray:error:
setURL:
setFileManager:
_URL
_fileManager
sendPinCodeToDeviceAndPromptForResponse:
idsDeviceFromUniqueID:
accountsSupportSecondaryCalling
displayMismatchedAccountsNotification
pinExchangeDelegate
sendIDSAction:toDevice:
allIDSTelephonyDevices
uniqueID
sendApprovalDisplayPinToDevice:
removeErrorNotifications
_numberForKey:
numberFromString:
isEqualToNumber:
displayPinErrorNotification
sendApprovalResponseToDevice:enteredCorrectly:wasCancelled:
pendingCodesToDevicesForApproval
randomSixDigitCode
sendIDSAction:toDevices:
dictionaryWithObject:forKey:
_FTCopyGzippedData
__imSetFromArray
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
displayErrorNotificationWithMessage:
_FTDecompressData
isHSATrusted
isRelayCallingEnabledForDeviceWithID:
enrollSecondaryDeviceInService:
cancelPinRequests
handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:
initWithDelegate:
unenrollSecondaryDeviceInService:
requestPinFromDevice:
displaySlotsFullNotification
setPendingCodesToDevicesForApproval:
setPinExchangeDelegate:
outgoingPinRequestIdentifier
setOutgoingPinRequestIdentifier:
_pendingCodesToDevicesForApproval
_pinExchangeDelegate
_outgoingPinRequestIdentifier
setHasCompletionTimeMs:
hasCompletionTimeMs
setHasState:
hasState
completionTimeMs
_completionTimeMs
initWithRelayService:thumperService:
deviceListChanged:
deviceCapabilityChanged:
_initializePairedHostDeviceState
_updateState
callCapabilitiesClientXPCInterface
callCapabilitiesServerXPCInterface
telephonyCallCapabilities
accountsController
pairedHostDeviceState
xpcListener
publiclyAccessibleCopy
capabilityStateUpdated:
_isWatchDevice
setPairedHostDeviceState:
_updateDynamicCapabilitiesAndUpdateClients
_updateClientsWithState
_savePairedHostDeviceState
_setWiFiCallingEnabled:
_setWiFiCallingRoamingEnabled:
_setVoLTECallingEnabled:
_setThumperCallingEnabled:
_setRelayCallingEnabled:
_setThumperCallingAllowed:onSecondaryDeviceWithID:
_setThumperCallingAllowedOnDefaultPairedDevice:
_setRelayCallingEnabled:forDeviceWithID:
endEmergencyCallbackMode
invalidateAndRefreshWiFiCallingCapabilities
invalidateAndRefreshThumperCallingCapabilities
_primaryThumperAccountRequiringAvailableDeviceSlots
thumperService
deviceWithUniqueID:
thumperPinExchangeController
thumperAccounts
_updateHostingAndDisplayingSupport
_updateCTSystemCapabilities
_updateCallAvailability
_updateRelayCapabilities
_updateCTCapabilities
_supportsPrimaryCalling
setSupportsPrimaryCalling:
_supportsBasebandCalling
setSupportsBasebandCalling:
_supportsCellularData
setSupportsCellularData:
_supportsDisplayingTelephonyCalls
setSupportsDisplayingTelephonyCalls:
_supportsDisplayingFaceTimeAudioCalls
setSupportsDisplayingFaceTimeAudioCalls:
_supportsDisplayingFaceTimeVideoCalls
setSupportsDisplayingFaceTimeVideoCalls:
isTelephonyDevice
_defaultOverrideForDisableDefault:forceDefault:
supportsCellularData
callingSupported
faceTimeSupported
setFaceTimeAudioAvailable:
setFaceTimeVideoAvailable:
areCapabilitiesValid
setCtCapabilitiesValid:
wiFiCallingCapabilityInfo
setWiFiCallingCapabilityInfo:
voLTECallingCapabilityInfo
setVoLTECallingCapabilityInfo:
thumperCallingCapabilityInfo
setThumperCallingCapabilityInfo:
localThumperDeviceID
setThumperCallingLocalDeviceID:
setThumperCallingAllowedSecondaryDeviceIDs:
setCanEnable:
setWiFiCallingCurrentlyAvailable:
setThumperCallingCurrentlyAvailable:
isCSCallingCurrentlyAvailable
setCsCallingCurrentlyAvailable:
isVoLTECallingCurrentlyAvailable
setVoLTECallingCurrentlyAvailable:
isWiFiEmergencyCallingAvailable
setWiFiEmergencyCallingAvailable:
isWiFiEmergencyCallingSupported
setWiFiEmergencyCallingSupported:
_supportsThumperCalling
setSupportsThumperCalling:
_isThumperCallingAllowedForCurrentDevice
setThumperCallingAllowedForCurrentDevice:
isRelayCallingEnabled
isThumperCallingAllowedForCurrentDevice
isEnabled
_primaryThumperAccountRequiringMatchingCallerID
_setThumperCallingAccountID:
isEmergencyCallbackModeEnabled
setEmergencyCallbackModeEnabled:
setSupportsCarrierServices:
supportsBasebandCalling
supportsSimultaneousVoiceAndData
setSupportsSimultaneousVoiceAndData:
setWiFiCallingEnabled:
setVoLTECallingEnabled:
isRoamingEnabled
setWiFiCallingRoamingEnabled:
setThumperCallingAccountID:
thumperCallingAllowedSecondaryDeviceIDs
thumperPushHandler
cloudCallingDevices
canEnable
_primaryThumperAccount
supportsRelayCalling
thumperCallingLocalDeviceID
_primaryThumperAccountRequiringMatchingCallerID:requiringAvailableDeviceSlots:
primaryThumperAccountUsingDevices:outgoingCallerIDURI:requireMatchingCallerIDURI:requireAvailableDeviceSlots:
_supportsRelayCalling
setSupportsRelayCalling:
_accountsMatchForSecondaryCalling
setAccountsMatchForSecondaryCalling:
relayService
isNearby
setRelayCallingAvailability:
setSupportsFaceTimeAudioRelayCalling:
setSupportsFaceTimeVideoRelayCalling:
setAccountsSupportSecondaryCalling:
setRelayCallingFeaturesEnabled:
_isAudioAccessoryDevice
_relayCallingEnabledDefault
accountsMatchForSecondaryCalling
_deviceExistsThatSupportsRelayCallingWithoutLocalRelayCallingEnabled
setSupportsTelephonyRelayCalling:
_relayCallingDisabledForDeviceIDDefault
setRelayCallingDisabledForDeviceID:
setOutgoingRelayCallerID:
_cloudCallingDevices
setCloudCallingDevices:
defaultPairedDeviceExists
telephonyCapableDeviceExists
relayCapableDeviceExists
compare:
sortedArrayUsingComparator:
supportsRelayCallingWithoutLocalRelayCallingEnabled
_setRelayCallingEnabledDefault:
relayCallingDisabledForDeviceID
_setRelayCallingEnabledDefault:forDeviceWithID:
setThumperCallingAllowedOnDefaultPairedDevice:
invalidateAndRefreshWiFiCallingProvisioningURL
invalidateAndRefreshThumperCallingProvisioningURL
cancelPinRequestFromPrimaryDevice
callCapabilitiesState:
telephonyCallCapabilitiesChanged
updateState
thumperCapabilitiesMonitor
_xpcListener
_accountsController
_telephonyCallCapabilities
_thumperPushHandler
_thumperPinExchangeController
_thumperCapabilitiesMonitor
_relayService
_thumperService
_pairedHostDeviceState
isValid
setDialRequest:
isDialAssisted
setWasDialAssisted:
audioSourceIdentifier
initWithDisplayContext:call:serialQueue:
setDynamicDisplayContext:
dynamicDisplayContext
setCompletionHandler:
relayClientTransport
transitionStatus
setTransitionStatus:
wasDialAssisted
faceTimeIDStatus
setFaceTimeIDStatus:
setUplinkWasExplicitlyMuted:
shouldOverrideCallStatus
callStatusFromOverride
_refreshFaceTimeIDSStatusIfNecessary
faceTimeIDStatusRefreshed
setFaceTimeIDStatusRefreshed:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
initWithCall:contactIdentifier:serialQueue:
initWithUUID:
setOnHold:
setHostedOnCurrentDevice:
hasAudioInterruption
setHasAudioInterruption:
displayContextChanged:
disconnect
updateWithProxyCall:
setRelayClientTransport:
hasAudioFinished
setHasAudioFinished:
bytesOfDataUsed
setBytesOfDataUsed:
expectedRelayClientDestination
setExpectedRelayClientDestination:
_uplinkWasExplicitlyMuted
_hasAudioInterruption
_hasAudioFinished
_faceTimeIDStatusRefreshed
_dialRequest
_dateStartedOutgoing
_bytesOfDataUsed
_relayClientTransport
_expectedRelayClientDestination
_dynamicDisplayContext
audioDeviceController
pickableRoutesDidChangeNotification:
preferredExternalRouteDidChangeNotification:
carPlayIsConnectedChanged:
mediaServicesWereResetNotification:
_initializeAudioRouteCollections
_updatePickableRoutes
_updateCarPlayDeviceConnected
_audioRouteCollectionForCall:
isAnyRouteAvailableWithUniqueIdentifier:
isCarPlayDeviceConnected
_isAnyAudioDevicePreferred
isAnyPreferredRouteAvailable
audioRouteCollections
allValues
preferredRoute
isAnyPreferredRouteAvailableAndActive
preferredAndActiveRoute
isAnyRouteAvailableWithBluetoothEndpointType:
isAnyRouteAvailableWithOtherConnectedDevices
_initializeAutomaticCarDNDStatusIfNecessary
_postNotificationName:
updatePickableRoutes
initWithCategory:mode:
isPreferredDevice
setAudioRouteCollections:
setAutomaticCarDNDStatus:
automaticCarDNDStatus
setCarModeActive:
fetchAutomaticDNDAssertionWithReply:
setStatusChangeObserver:
sharedAVSystemController
attributeForKey:
setCarPlayDeviceConnected:
audioDeviceControllerDeviceListChanged:
isAnyRouteAvailableWithUniqueIdentifier:forCall:
isAnyPreferredRouteAvailableForCall:
isAnyPreferredRouteAvailableForAnyCall
preferredRouteForCall:
isAnyPreferredRouteAvailableAndActiveForCall:
isAnyPreferredRouteAvailableAndActiveForAnyCall
preferredAndActiveRouteForCall:
isAnyVehicleRouteAvailableForCall:
isAnyRouteAvailableWithOtherConnectedDevicesForAnyCall
isAnyBluetoothHeadphoneRouteAvailableForAnyCall
isCarPlayRouteAvailable
isAnyVehicleRouteAvailableForAnyCall
isCarModeActive
_carPlayDeviceConnected
_carModeActive
_audioRouteCollections
_automaticCarDNDStatus
initWithGroupStatusNotifier:service:queue:
weakToStrongObjectsMapTable
groupSessionProviderCreationBlock
initWithGroupSessionProvider:
conversationCreationBlock
mutableConversationsByGroupUUID
delegateToQueue
setByAddingObject:
createConversationWithGroupUUID:locallyCreated:participantDestinationIDs:
conversationManager:conversationChanged:
conversationManager:conversation:addedActiveParticipant:
conversationManager:conversation:removedActiveParticipant:
groupStatusNotifier:updatedActiveParticipants:forConversationWithGroupUUID:participantDestinationIDs:
conversationsByGroupUUID
removeDelegate:
joinConversationWithGroupUUID:localParticipantDestinationID:remoteParticipantDestinationIDs:
startAudioForConversationWithGroupUUID:
leaveConversationWithGroupUUID:
leaveAllConversations
setUplinkMuted:forConversationWithGroupUUID:
groupStatusNotifier
setDelegateToQueue:
setGroupSessionProviderCreationBlock:
setConversationCreationBlock:
_groupStatusNotifier
_mutableConversationsByGroupUUID
_delegateToQueue
_groupSessionProviderCreationBlock
_conversationCreationBlock
setUniqueId:
setCallerId:
handleTypeForTUHandle:
setHandleType:
setIsoCountryCode:
setDuration:
setServiceProvider:
setMediaType:
dateWithTimeIntervalSinceNow:
setDate:
setRead:
setCallerNetworkName:
setCallerIdAvailability:
setTimeToEstablish:
mediaType
providerForRecentCall:
callerId
handleType
dialRequestForRedial
setHasProtocolVersion:
hasProtocolVersion
setHasMessageType:
hasMessageType
setHasCallService:
hasCallService
setHasLatencyMs:
hasLatencyMs
messageType
latencyMs
_latencyMs
_protocolVersion
_callService
_messageType
setHasFailed:
hasFailed
failed
_failed
setHasProtoWantsVideo:
hasProtoWantsVideo
setHasProtoMomentsAvailable:
hasProtoMomentsAvailable
setHasProtoSenderMuteUplink:
hasProtoSenderMuteUplink
_protoMomentsAvailable
_protoSenderMuteUplink
_protoWantsVideo
faceTimeAudioAvailable
faceTimeVideoAvailable
supportsPreferredAndActive
isPreferredAndActive
isPreferred
setCategory:
setMode:
_routePassingTest:
_anyRoutePassesTest:
isWirelessHeadset
isAirTunes
isCarAudio
isBluetooth
bluetoothEndpointType
uniqueIdentifier
identifiersOfOtherConnectedDevices
routes
enumerateObjectsUsingBlock:
enumerateRoutesInvokingBlock:forRoutesPassingTest:
setRoutes:
isReceiverRouteAvailable
isSpeakerRouteAvailable
isWirelessHeadsetRouteAvailable
isAirTunesRouteAvailable
isCarAudioRouteAvailable
isBluetoothRouteAvailable
_setRoutesFromRouteDictionaries:
_category
_mode
_routes
hasCallInfo
callInfoSource
setHasCallInfoSource:
hasCallInfoSource
callInfoSourceAsString:
StringAsCallInfoSource:
hasCallDirectoryProviderBundleId
callInfo
callDirectoryProviderBundleId
_callDirectoryProviderBundleId
_callInfo
_callInfoSource
setHasFaceTimeAudioAvailable:
hasFaceTimeAudioAvailable
setHasFaceTimeVideoAvailable:
hasFaceTimeVideoAvailable
_faceTimeAudioAvailable
_faceTimeVideoAvailable
setStatus:
setConferenced:
handleWithDestinationID:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
processAssertions
countForObject:
acquireProcessAssertionForBundleIdentifier:
invalidateProcessAssertionForBundleIdentifier:
setProcessAssertions:
_processAssertions
initForReadingWithError:
initWithDataSource:deviceLockObserver:callCenterObserver:callDirectoryStoreBuilder:
_callFilterBlock
emergencyProvider
setCallDirectoryStore:
performBlockAfterFirstUnlock:
_doNotDisturbAllowsCallFromSourceAddress:providerIdentifier:
_callDirectoryAllowsCallFromSourceAddress:
isDNDEnabled
isOnCall
isOnEmergencyCall
emergencyProviderIdentifier
callDirectoryAllowsCallFromSourceAddress:countryCode:
callDirectoryStore
_callDirectoryPhoneNumberVariantsForSourceAddress:countryCode:
containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray:error:
initWithDigits:countryCode:
callDirectorySanitizer
canonicalizedPhoneNumber:
setDndEnabled:
setOnCall:
setOnEmergencyCall:
setDNDEnabled:
twoTimeCallthroughInterval
setTwoTimeCallthroughInterval:
deviceLockObserver
_dndEnabled
_onCall
_onEmergencyCall
_twoTimeCallthroughInterval
_callDirectoryStore
_emergencyProviderIdentifier
_deviceLockObserver
_callDirectorySanitizer
initWithCallCenterObserver:transactionManager:
_callHistoryChanged:
_callConnected:
_handleCallHistoryChanged
_markReadRecentCallsMatchingHandle:
recentsManager
predicateWithFormat:
recentCallsWithPredicate:
clearReadNotificationsIgnoringHandleIds:
cachedCalls
updateBytesOfDataUsedFor:with:
_callHistoryTransactionObjectWithIdentifier:
_endTransactionForObjectAfterCallHistoryDatabaseChanges:
addToCallHistory:
read
postMissedCallNotificationForCall:
transactionObjectsAwaitingCallHistory
transactionManager
uniqueId
markAllCallsAsReadWithPredicate:
recentCalls
serviceProvider
deleteTheseCalls:
_canAddCallToCallHistory:
_addCallToCallHistory:
updateBytesOfDataUsed:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
incomingCallFilter
_transactionManager
_recentsManager
_callProviderManager
_transactionObjectsAwaitingCallHistory
_cachedCalls
_incomingCallFilter
preferences
_updateSessionPreferences
_preferences
setProtoPersonNameComponents:
setSuggestedName:
setCompanyName:
setMapName:
setLocation:
setContactName:
setContactLabel:
setCallDirectoryLabel:
setCallDirectoryLocalizedExtensionContainingAppName:
setCallDirectoryExtensionIdentifier:
hasName
hasProtoPersonNameComponents
hasSuggestedName
hasLabel
hasCompanyName
hasMapName
hasLocation
hasContactName
hasContactLabel
hasCallDirectoryLabel
hasCallDirectoryLocalizedExtensionContainingAppName
hasCallDirectoryExtensionIdentifier
protoPersonNameComponents
companyName
contactLabel
callDirectoryLocalizedExtensionContainingAppName
_callDirectoryExtensionIdentifier
_callDirectoryLabel
_callDirectoryLocalizedExtensionContainingAppName
_companyName
_contactLabel
_contactName
_label
_location
_mapName
_name
_protoPersonNameComponents
_suggestedName
setActivityQueue:
setBestAppSuggestionManager:
bestAppSuggestionManager
broadcastActivity:withTimeout:
_broadcastActivity:withTimeout:shouldPrioritize:
_stopBroadcastingActivity:
_listenForActivityType:dynamicIdentifier:
_stopListeningForActivityType:
activityQueue
userActivity
becomeCurrent
_updateCurrentlyBroadcastedActivity
registerActivityType:dynamicIdentifier:
activityTypeRequiresBestAppSuggestionListener:
startListeningForBestAppSuggestions
unregisterActivityType:dynamicIdentifier:
stopListeningForBestAppSuggestions
activityType
activityTypeForUserActivityTypeString:
dynamicIdentifier
bestAppSuggestionMayHaveChanged
bestAppSuggestionChanged:
connectionInterrupted
currentlyBroadcastedActivity
setCurrentlyBroadcastedActivity:
_activityQueue
_currentlyBroadcastedActivity
_bestAppSuggestionManager
setJoined:
_joined
setProviderManager:
weakObjectsHashTable
updateClientsWithCall:
setCallChanged:
callServicesClientXPCInterface
callServicesDaemonDelegateXPCInterface
wantsCallDisconnectionOnInvalidation
disconnectAllCalls
sharedInstanceWithQueue:daemonDelegate:shouldRegister:
callServicesInterface
registerWithCompletionHandler:
_handleRelayCallingChanged
routesByUniqueIdentifier
handleRoutesByUniqueIdentifierUpdated:
setRoutesDidChangeHandler:
reportRouteWasPicked:
setRouteWasPickedHandler:
reportTimedOutPickingRoute:
setTimedOutPickingRouteHandler:
_handleCallStatusChangedNotification:
_handleRelayCallingChangedNotification:
_handlePreferredRouteChangedNotification:
_handleCallStartedOutgoingNotification:
_handleCallStartedConnectingNotification:
_handleCallConnectedNotification:
_handleNeedsManualInCallSoundsChangedNotification:
_handleCallWantsHoldMusicChangedNotification:
_handleCallShouldSuppressRingtoneChangedNotification:
_handleCallModelChangedNotification:
_handleResetCallStateNotification:
_handleHardPauseStateChangedNotification:
_handleCallIsUsingBasebandChangedNotification:
_handleFaceTimeAvailabilityChangedNotification:
_handleInvitationSentNotification:
_handleCallDisplayContextChangedNotification:
_handleUpdateRemoteUplinkMutedChangedNotification:
callProviderManagerXPCServer
supportsRelayingToOtherDevices
areRelayCallingFeaturesEnabled
_requestCallStateFromHost
callsWithAnEndpointElsewhere
currentProxyCalls
proxyCallWithCall:
eligibleCallsByFilteringCalls:forClient:
isCallEligible:forClient:
handleCurrentCallsChanged:callDisconnected:
performBlockOnClients:
handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
wantsFrequencyChangeNotifications
arrayByApplyingSelector:
filterClientsUsingPredicate:andPerformBlock:coalescedByIdentifier:
resetCallProvisionalStates
sendClientsNotificationName:forCall:userInfo:
handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:
_handleNewCall:
_handleDisconnectedCallStatusChangeForHostedCall:
_handleDisconnectedCallStatusChangeForVoicemailCall
_handleActiveCallStatusChangeForHostedCall:
_handleHeldCallStatusChangeForHostedCall:
_handleConnectingCallStatusChangeForHostedCall:
_endProxyCallsForConnectingVideoCall
_handleConnectedCallStatusChangeForHostedCall:
performPushHostedCallsToDestination:
performPullRelayingCallsFromClientAndUpdateEndpoint:updateExpectedDestination:
shouldRelayToOtherDevices
_nonRingingCallExistsOnThisDevice
relayCallDelegate
outgoingCallFromDialRequest:
callsWithGroupUUID:
holdCalls:whileUnholdingCalls:
groupCalls:withCalls:
ungroupCall:fromOtherCallsInGroup:
addCalls:forIdentifier:
dataSources
callsForDataSource:identifier:
answerCall:withRequest:whileDisconnectingActiveCalls:
disconnectCalls:whileHoldingCalls:andUnholdingCalls:andUngroupingCalls:
answerCall:withRequest:whileDisconnectingHeldCalls:andHoldingCalls:
currentlyPickedRouteIdForCategory:andMode:
sourceIdentifierForRouteID:
answerCall:withRequest:whileHoldingActiveCalls:
disconnectCall:whileUngroupingCall:
disconnectAllCalls:
sendMMIOrUSSDCodeWithRequest:
setTTYType:forCalls:
setUplinkMuted:forCalls:
pullCallWithHandoffActivityUserInfo:completion:
allCallsPassTest:
handledCalls
_launchInCallApplicationForIncomingCallIfNecessary
_handleNewHostedCall:
_handleRingingCallStatusChangeForHostedCall:
_handleSendingCallStatusChangeForHostedCall:
callForClient:usingCall:
currentCallsForClient:
_dial:displayContext:completion:
performDialCall:displayContext:
behavior
performEndActiveAndAnswerCall:withRequest:
performEndHeldAndAnswerCall:withRequest:
performHoldActiveAndAnswerCall:withRequest:
performAnswerCallAsVideoUpgrade:withRequest:
performHoldCall:
performUnholdCall:
performDisconnectCall:
performGroupCall:withCall:
performUngroupCall:
performSwapCalls
performPlayDTMFToneForCall:key:
performDisconnectCurrentCallAndActivateHeld
performDisconnectAllCalls
performSetTTYType:forCall:
performPushRelayingCallsToHostWithSourceIdentifier:
performPullCallFromClientUsingHandoffActivityUserInfo:completion:
performSendMMIOrUSSDCodeWithRequest:
performSetUplinkMuted:forCall:
performPullHostedCallsFromPairedHostDevice
performUpdateCallWithProxy:
reportCallEnteredForeground:
reportAllCallsBackgrounded
performJoinConversation:
setCurrentAudioInputDeviceToDeviceWithUID:
setCurrentAudioOutputDeviceToDeviceWithUID:
pickRouteWithUniqueIdentifier:
predicateWithBlock:
filteredArrayUsingPredicate:
_handleMessagingConnectionEndForCalls:withDisconnectedReason:didStartConnecting:
dirtyCallManager
answerCallWithRequest:
holdCallWithUniqueProxyIdentifier:
unholdCallWithUniqueProxyIdentifier:
disconnectCallWithUniqueProxyIdentifier:
groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:
ungroupCallWithUniqueProxyIdentifier:
swapCalls
playDTMFToneForCallWithUniqueProxyIdentifier:key:
disconnectCurrentCallAndActivateHeld
setTTYType:forCallWithUniqueProxyIdentifier:
pushRelayingCallsToHostWithSourceIdentifier:
pullHostedCallsFromPairedHostDevice
sendHardPauseDigitsForCallWithUniqueProxyIdentifier:
updateCallWithProxy:
enteredForegroundForCallWithUniqueProxyIdentifier:
willEnterBackgroundForAllCalls
enteredBackgroundForAllCalls
setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:
setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:
setUplinkMuted:forCallWithUniqueProxyIdentifier:
setDownlinkMuted:forCallWithUniqueProxyIdentifier:
requestInitialState:
dialWithRequest:reply:
pullCallFromClientUsingHandoffActivityUserInfo:reply:
reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:
setClientCapabilities:
routesByUniqueIdentifier:
updateClientsWithFrequency:inDirection:forCalls:
resetClientCallProvisionalStates
sendClientsNotificationName:
sendClientsNotificationName:forCall:
_callController
_recentsController
_callProviderManagerXPCServer
_relayCallDelegate
_handledCalls
_dirtyCallManager
setOriginatingProcessId:
actionsCount
clearActions
actionsAtIndex:
actionsType
hasOriginatingProcessId
setHasTimedOut:
hasTimedOut
originatingProcessId
timedOut
setActions:
_actions
_originatingProcessId
_timedOut
_handleDeviceFirstUnlockNotification
initWithNotifyObserver:queue:
hasBeenUnlocked
hasBeenUnlockedBlock
setHasBeenUnlocked:
_refreshHasBeenUnlocked
endObserving
firstUnlockCallbacks
isObserving
setHasBeenUnlockedBlock:
setFirstUnlockCallbacks:
setNotifyObserver:
_hasBeenUnlocked
_hasBeenUnlockedBlock
_firstUnlockCallbacks
setPersonNameComponents:
setBundleIdentifierToVoIPApplication:
voipRegistrationFailed
voipRegister
voipUnregister
bundleIdentifierToVoIPApplication
_apsConnectionForEnvironment:
userInfo
_findOrCreateApplicationWithBundleIdentifier:
_unregisterApplication:inEnvironment:
developmentConnection
removeFromRunLoop
productionConnection
_registerApplicationWithBundleIdentifier:client:environment:
topicFromBundleId:
requestTokenForTopic:identifier:
bundleIdFromTopic:
topic
openApplication:options:withResult:
acquire
_createAPSConnectionForEnvironment:namedDelegatePort:
initWithEnvironmentName:namedDelegatePort:queue:
enabledTopics
arrayByAddingObject:
setEnabledTopics:
_removeTopic:fromConnection:
invalidateTokenForTopic:identifier:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setProductionConnection:
setDevelopmentConnection:
_productionConnection
_developmentConnection
_bundleIdentifierToVoIPApplication
strongToStrongObjectsMapTable
dataSourceToIdentifierToCalls
setDataSourceToIdentifierToCalls:
_dataSourceToIdentifierToCalls
bundle
iconTemplateImageData
setIconTemplateImageData:
supportsVideo
includesCallsInRecents
setAudioSessionID:
supportedTUHandleTypes
setSupportsCurrentPlatform:
initWithCallSource:configuration:
_provisioningStatusFromProvisioningStatusString:
setProvisioningStatus:
setProvisioningURL:
setProvisioningPostData:
setEnabled:
setRoamingEnabled:
setCanEnableRoaming:
initWithCapabilityDictionary:
identifiersWithPendingCoalescingBlocks
blockToExecuteAfterPendingCoalescingBlocksByIdentifier
performBlock:coalescedByIdentifier:
processInfo
performBlock:
setObject:
setIdentifiersWithPendingCoalescingBlocks:
setBlockToExecuteAfterPendingCoalescingBlocksByIdentifier:
_object
_identifiersWithPendingCoalescingBlocks
_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
conversationManagerClientXPCInterface
conversationManagerServerXPCInterface
updateConversationsByGroupUUID:
conversationsByGroupUUID:
initWithGroupStatusNotifierProvider:serialQueue:
activeParticipants
handleUpdatedActiveGroups:
groupStatusNotifier:didUpdateActiveGroups:
groupStatusNotifier:didUpdateActiveGroup:
groupStatusNotifierProvider
_groupStatusNotifierProvider
initWithGroupUUID:participantDestinationIDs:activeParticipants:
_activeParticipants
initWithDataSource:serialQueue:
localProvidersByIdentifier
registeredLocalProvidersByIdentifier
addEntriesFromDictionary:
relayProvidersByIdentifier
registeredRelayProvidersByIdentifier
_unregisterUninstalledProvidersAndNotify:
_updateProvidersByIdentifierAndNotify:
isRelayCallingGuaranteed
isEqualToDictionary:
setProvidersByIdentifier:
isProviderInstalled:
setRegisteredLocalProvidersByIdentifier:
uniqueRingtoneSoundLinkFilenameWithOriginalFilename:
isSymbolicLinkAtURL:
createLinkIfNecessaryWithFilename:toURL:
isEqualToCallProvider:
removeLinksForFilenamesNotInArray:
setRegisteredRelayProvidersByIdentifier:
providerIdentifiersForExistingCalls
isDevicePasscodeLocked
dialAssistedDialRequestForDialRequest:
openUserActivity:usingApplicationWithBundleIdentifier:options:completion:
relayCallingStateChangedForDataSource:
installedProvidersChangedForDataSource:
registerLocalProvider:
_localProvidersByIdentifier
_relayProvidersByIdentifier
_providersByIdentifier
isAudioSessionActive
conversationGroupUUIDsAwaitingActiveAudioSession
callUUIDsByConversationGroupUUID
reportCallWithUUID:endedAtDate:reason:
conversationGroupUUIDsByCallUUID
cleanUpConversationIfNecessaryForGroupUUID:
setAudioSessionActive:
startAudioForConversationsIfNecessary
_audioSessionActive
_callUUIDsByConversationGroupUUID
_conversationGroupUUIDsByCallUUID
_conversationGroupUUIDsAwaitingActiveAudioSession
handleWithType:value:
tuHandlesWithHandles:
_conferenceTransport:didStopForCall:cleanly:error:
isEqualToTransport:
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
dialWithRequest:completion:
anyCallIsEndpointOnCurrentDevice
setHost:
setBehavior:
_answerHostedCall:completionHandler:
holdCall:
unholdCall:
groupCall:withOtherCall:
ungroupCall:
endActiveAndAnswerCall:
endHeldAndAnswerCall:
holdActiveAndAnswerCall:
faceTimeShowInCallUIURL
_userActivityTypeStringForActivityType:
_initWithTypeIdentifier:suggestedActionType:options:
_setContentType:
setExpirationDate:
setEligibleForSearch:
setEligibleForPublicIndexing:
setEligibleForHandoff:
_setSubtitle:
_setContentUserAction:
setKeywords:
setUserActivity:
setUserInfo:
_initWithUserActivityType:dynamicActivityType:options:
setDynamicIdentifier:
_registerUserActivityType:dynamicActivityType:
_unregisterUserActivityType:dynamicActivityType:
_userActivity
_dynamicIdentifier
handleRelayCallingAvailablityChangedNotification:
handleApplicationUnregisteredNotification:
relayCallingAvailability
defaultProviders
_providersForPreferenceKey:
_saveProviders:forPreferenceKey:
defaultWorkspace
openUserActivity:withApplicationProxy:options:completionHandler:
attributesOfItemAtPath:error:
ringtonesSandboxExtensionDirectory
isInstalled
setProviderIdentifiersForExistingCalls:
_ringtonesSandboxExtensionDirectory
_providerIdentifiersForExistingCalls
requestTimeoutBlockByTransactionID
requestStartDateByTransactionID
reportDataCollectionCompleteIfNecessary
photoRequestDurations
setHasCleanedUp:
hasCleanedUp
fuzzyPhotoRequestSuccessCount
fuzzyPhotoRequestFailureCount
initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:
momentsReportingSession:didGenerateUsageReport:
bucketedInteger:
medianFromNumbers:
meanFromDoubleNumbers:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
objectAtIndexedSubscript:
initWithStreamToken:
registeredStreamWithAvailability:
didStartRequestWithTransactionID:
didReceiveResultsWithTransactionID:
didCleanUp
streamToken
_hasCleanedUp
_streamToken
_requestTimeoutBlockByTransactionID
_requestStartDateByTransactionID
_photoRequestDurations
shouldTraceSingposts
initWithTransportToken:configuration:delegate:queue:
localParticipant
participantID
participantData
addParticipantWithID:data:delegate:queue:
removeParticipantWithID:
participantForID:
setFrequencyMeteringEnabled:
sessionServerDidDisconnect:
session:addParticipantWithID:didSucceed:error:
session:removeParticipantWithID:didSucceed:error:
session:didUpdate:configuration:error:
participant:frequencyLevelDidChange:
_audioReady
setTUHandle:
lastReportedInCallValue
_updateDuetInCall:
setLastReportedInCallValue:
_lastReportedInCallValue
initWithSessionProvider:isInitiator:remoteFromID:remoteProtocolVersion:
setRemoteFromID:
_remoteFromID
title
message
stringByReplacingOccurrencesOfString:withString:
hasCellularSettingsRemediation
hasWiFiSettingsRemediation
hasDateAndTimeSettingsRemediation
hasLocationSettingsRemediation
didPrepareHandler
didStartHandler
setReceivedSuccessfulDidStart:
didStopHandler
receivedSuccessfulDidStart
_host
_usingBaseband
_audioDisabled
_receivedSuccessfulDidStart
_preparedToStop
_transport
_didPrepareHandler
_didStartHandler
_didStopHandler
initWithQueue:carrierSpaceCapabilities:emergencyCallbackCapabilities:
ctSettingCallCapabilitiesChangedWithUserInfo:
ctCallManagementStateChangedWithUserInfo:
ctEmergencyCallbackModeStatusChangedWithUserInfo:
_thumperAccountMatchingAccountID:
emergencyCallbackCapabilities
_setTelephonyCapability:enabled:
_setTelephonyCapability:enabled:capabilityInformation:
_setTelephonyCapability:accountID:
_setTelephonyCapability:allowed:forDeviceWithUniqueID:
invalidateProvisioningURL
_refreshAccountStateForCapabilitiy:
_updateAllCapabilitiesState
_updateStateUsingCapabilitiesChangedNotificationUserInfo:
_updateTelephonyCallManagementState
_updateEmergencyCallbackModeEnabledState
_thumperAccountPassingTest:
_updateCapabilitiesValidState
_infoForTelephonyCapability:
_updateWiFiCallingStateUsingCapabilityInfo:
_updateVoLTECallingStateUsingCapabilityInfo:
_updateThumperCallingStateUsingCapabilityInfo:
_updateTelephonySystemCapabilitiesState
_areTelephonyCapabilitiesValid
_updateThumperAccountState
_telephonyCallManagementState
_telephonySystemCapabilities
_isEmergencyCallbackModeEnabled
_deviceInfoDictionaryForTelephonyCapability:
_deviceListDictionaryForTelephonyCapability:
_isCTErrorFatal:
capabilityToLastSavedAccountID
invalidateAndRefreshVoLTECallingCapabilities
setCapabilitiesValid:
telephonySystemCapabilities
setTelephonySystemCapabilities:
telephonyCallManagementState
setTelephonyCallManagementState:
setLocalThumperDeviceID:
localThumperAccountID
setLocalThumperAccountID:
setThumperAccounts:
_capabilitiesValid
_emergencyCallbackModeEnabled
_capabilityToLastSavedAccountID
_emergencyCallbackCapabilities
_localThumperDeviceID
_localThumperAccountID
_thumperAccounts
_wiFiCallingCapabilityInfo
_voLTECallingCapabilityInfo
_thumperCallingCapabilityInfo
dtmfSoundPlayer
attemptToPlayKey:
_setAllCallsToHeldExceptCall:
_dtmfSoundPlayer
addCalls:
callsCount
clearCalls
callsAtIndex:
callsType
_calls
imDaemonDidConnect:
connectToDaemon
_initializeLastKnownCallerID
faceTimeIMAccount
hasAlias:
addAlias:
validationStatusForAlias:
validationErrorReasonForAlias:
setDisplayName:
displayNameChanged:
preferredAccountChanged:
_saveLastKnownFaceTimeCallerID
mockCallFromBlock:
setMockBackingProvider:
setMockDisplayProvider:
setMockHandle:
setMockCallStatus:
setMockUniqueProxyIdentifier:
setMockCallUUID:
setMockHostedOnCurrentDevice:
setMockCallerNameFromNetwork:
setMockUsingBaseband:
setMockVoicemail:
setMockContactIdentifier:
setMockNeedsManualInCallSounds:
setMockPrefersExclusiveAccessToCellularNetwork:
setMockTTYType:
setMockSupportsTTYWithVoice:
setMockIsThirdPartyVideo:
setMockDateConnected:
hostOnCurrentDevice
setMockEndpointOnCurrentDevice:
mockCall
callIdentifier
setCallIdentifier:
setMockService:
setMockIsVideo:
setMockBlocked:
setMockCallDuration:
setMockEmergency:
setMockOutgoing:
setMockConferenced:
setMockDisconnectedReason:
setMockLocalizedLabel:
setMockCompanyName:
setMockBytesOfDataUsed:
subtype
setMockSubtype:
setMockAudioCategory:
setMockAudioMode:
setMockCallGroupUUID:
setMockProviderContext:
setMockProviderErrorCode:
setMockDisplayContext:
setMockHasStartedOutgoing:
setMockHasSentInvitation:
setMockConnecting:
setMockConnected:
setMockUplinkWasExplicitlyMuted:
setMockMayRequireBreakBeforeMake:
setMockAudioInterruptionProviderType:
setMockDisplayName:
setMockDateCreated:
setMockProviderProcessIdentifier:
audioInterruptionActivationStateObserver
setMockAudioInterruptionActivationStateObserver:
setMockBackingCallSource:
setMockActiveRemoteParticipantHandles:
setMockInitialLinkType:
setMockCallRelaySupport:
_mockIsVideo
_mockHostedOnCurrentDevice
_mockEndpointOnCurrentDevice
_mockBlocked
_mockVoicemail
_mockEmergency
_mockSOS
_mockOutgoing
_mockConferenced
_mockUsingBaseband
_mockSupportsTTYWithVoice
_mockNeedsManualInCallSounds
_mockHasStartedOutgoing
_mockHasSentInvitation
_mockConnecting
_mockConnected
_mockUplinkMuted
_mockUplinkWasExplicitlyMuted
_mockMayRequireBreakBeforeMake
_mockPrefersExclusiveAccessToCellularNetwork
_mockIsThirdPartyVideo
_callIdentifier
_mockService
_mockCallStatus
_mockTTYType
_mockDisconnectedReason
_mockSubtype
_mockProviderProcessIdentifier
_mockCallRelaySupport
_mockUniqueProxyIdentifier
_mockCallDuration
_mockHandle
_mockLocalizedLabel
_mockCompanyName
_mockCallUUID
_mockCallerNameFromNetwork
_mockBytesOfDataUsed
_mockAudioCategory
_mockAudioMode
_mockCallGroupUUID
_mockBackingProvider
_mockDisplayProvider
_mockProviderContext
_mockProviderErrorCode
_mockDisplayContext
_mockAudioInterruptionProviderType
_mockDisplayName
_mockContactIdentifier
_mockDateCreated
_mockDateConnected
_mockAudioInterruptionActivationStateObserver
_mockBackingCallSource
_mockActiveRemoteParticipantHandles
_mockInitialLinkType
setHasAmbiguityState:
hasAmbiguityState
setHasSwappable:
hasSwappable
setHasMergeable:
hasMergeable
setHasHoldAllowed:
hasHoldAllowed
setHasAddCallAllowed:
hasAddCallAllowed
setHasTakingCallsPrivateAllowed:
hasTakingCallsPrivateAllowed
setHasHardPauseAvailable:
hasHardPauseAvailable
setHasEndAndAnswerAllowed:
hasEndAndAnswerAllowed
setHasHoldAndAnswerAllowed:
hasHoldAndAnswerAllowed
setHasSendToVoicemailAllowed:
hasSendToVoicemailAllowed
swappable
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
_ambiguityState
_addCallAllowed
_endAndAnswerAllowed
_hardPauseAvailable
_holdAllowed
_holdAndAnswerAllowed
_mergeable
_sendToVoicemailAllowed
_swappable
_takingCallsPrivateAllowed
initWithQueue:block:
stringRepresentationForTUCallDisconnectedReason:
stringForSignatureType:
stringForIDSSessionEndedReason:
stringForIMAVChatEndedReason:
reporters
currentAudioAndVideoCallCount
reportingSessionByStreamToken
numberWithLong:
momentsController:registeredStream:withAvailability:
momentsController:didCleanUpForStream:
momentsController:didStartRequestForStream:withTransactionID:
momentsController:didReceiveResultsForStream:withTransactionID:
reportTransactionGroupCompleted:
reportProviderFailedWithAction:forCall:
setReporters:
_reporters
_reportingSessionByStreamToken
setIdsService:
_update
idsService
accounts
anyObject
aliasStrings
loginID
accountInfo
accountType
telephoneNumber
regionBasePhoneNumber
componentsJoinedByString:
idsDeviceID
update
setTelephonyCapableDeviceExists:
setRelayCapableDeviceExists:
setDevices:
setPairedDevice:
setAvailableOutgoingRelayCallerIDs:
_telephonyCapableDeviceExists
_relayCapableDeviceExists
_idsService
_devices
_pairedDevice
_defaultPairedDevice
_availableOutgoingRelayCallerIDs
pairedDeviceUniqueIDOverride
isWatchDevice
isAudioAccessoryDevice
canReceiveMessagesForCallProvider:
setSessions:
activeSessionForIdentifier:
currentSession
_createSessionToDevices:
_createSessionToDestinations:
initWithAccount:destinations:transportType:
sessions
_createSessionToAllDevicesSupportingProvider:
destinationWithActiveSession
_startSession:withMessage:identifiers:timeout:declineOnError:
_sendMessage:andCancelInvitationIfNecessaryForSession:
_sendMessage:andDeclineInvitationIfNecessaryForSession:
sendMessage:customizedForRemoteProtocolVersion:completionHandler:
sessionForIdentifier:
_destroySession:
waitingSession
acceptInvitationForIdentifier:
_sessions
initWithQueue:fileTransferController:mediaAssetManager:
initWithStreamToken:delegate:queue:
momentsControllerClientXPCInterface
momentsControllerServerXPCInterface
handleClientDisconnected:
streamTokensByCSDClient
unregisterStreamToken:
sessionsByToken
moments
newRequestWithMediaType:
transactionID
initWithAVCRequest:session:
activeRequestsByTransactionID
startWithError:
avcRequest
endWithError:
availabilityWithRemoteAvailable:
momentsGenerator
initWithMoments:remoteIDSDestination:
initWithAvailability:supportedMediaTypes:
cleanUpForMomentIfNecessary:
didUpdateCapabilities:forVideoStreamToken:
willCaptureRemoteRequest
_transferResult:forRequest:toRemoteIDSDestination:
contentsOfDirectoryAtURL:
urlFromResources:withExtension:
initWithPhotosAppAssetIdentifier:
handleRequestResultWithMomentDescriptor:
_saveLivePhotoWithPhotoURL:videoURL:completion:
shouldPreserveMomentsFile
pathExtension
setIsRegistered:
activeRequestCount
pendingRequestCount
fileTransferController
mediaAssetManager
didReceiveLocallyRequestedMomentDescriptor:
localCapabilities
isRegionBlocked
isFaceTimePhotosAvailable
setLocalCapabilities:
moments:capabilitiesDidChange:
moments:didFinishRequest:error:
moments:didStartProcessingRequest:error:
moments:didEndProcessingRequest:url:error:
momentsServerDidDisconnect:
registerXPCClientWithReply:
registerStreamToken:remoteIDSDestination:remoteMomentsAvailable:reply:
unregisterStreamToken:reply:
startRequestWithMediaType:forStreamToken:reply:
endRequestWithTransactionID:reply:
momentsClient
setMomentsGenerator:
_fileTransferController
_mediaAssetManager
_sessionsByToken
_activeRequestsByTransactionID
_streamTokensByCSDClient
_momentsClient
_momentsGenerator
initWithClientUUID:transportType:
isInputFrequencyMeteringEnabled
setInputFrequencyMeteringEnabled:
isOutputFrequencyMeteringEnabled
setOutputFrequencyMeteringEnabled:
getIsAudioPaused:callID:error:
setPauseAudio:callID:error:
getIsVideoPaused:callID:error:
setPauseVideo:callID:error:
setConferenceVisualRectangle:forCallID:
setConferenceState:forCallID:
videoDeviceController
setCallID:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
stopCallID:
cancelCallID:
updateCapabilities:forCallID:
sendData:forCallID:encrypted:
conference:withCallID:remoteMediaStalled:
conference:didStartSession:withUserInfo:
conference:didStopWithCallID:error:
conference:updateInputFrequencyLevel:
conference:updateOutputFrequencyLevel:
conference:receivedFirstRemoteFrameForCallID:
conference:remoteScreenAttributesChanged:callID:
conference:remoteVideoAttributesChanged:callID:
conference:remoteAudioPaused:callID:
conference:remoteVideoPaused:callID:
serverDiedForConference:
conference:inititiateRelayRequest:requestDict:
conference:sendRelayUpdate:updateDict:
conference:cancelRelayRequest:requestDict:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:networkHint:
conference:localIPChange:withCallID:
conference:didStartSession:withCallID:error:
conference:didStopWithCallID:error:callMetadata:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:didReceiveARPLData:withCallID:
conference:didChangeLocalVariablesForCallID:
conference:remoteAudioEnabled:forCallID:
conference:localAudioEnabled:forCallID:error:
conference:remoteCallingModeChanged:forCallID:
conference:reinitializeCallForCallID:
conference:closeConnectionForCallID:
conference:updateInputMeterLevel:
conference:updateOutputMeterLevel:
conference:isRemoteAudioBelowThreshold:
_callID
_videoDeviceController
call
setCall:
completionHandler
_call
_completionHandler
initWithDelegate:queue:
initWithCalls:delegate:queue:
addCallSource:
startTrackingCall:
processAssertionManager
stopTrackingCall:
callSourceManager
failOutstandingActionsForCallWithUUID:
callGroupUUIDToCalls
setDeferCommittingTransactions:
_commitUncommittedTransactions
commitUncommittedTransactions
allActions
dateStarted
callUUIDToGroupWith
_callWithUUID:
_providerForCallSource:
_callWithUUID:controllableByCallSource:
_callGroupsWithBackingCallSource:
cx_requestTransactionErrorWithCode:
_shouldAllowRequestedTransaction:forCallSource:error:
_performRequestedTransaction:onCallSource:
addAction:toUncommittedTransactionForCallSource:
_addSupplementalActionsForRequestedTransaction:onCallSource:
answerCall:withRequest:whileDisconnectingCalls:andHoldingCalls:
_deferCommittingTransactionsUntilAfterRunningBlock:
initWithCallUUID:ttyType:
setCode:
setHandoffContext:
pendingPulledCallContexts
telephonyCallSource
faceTimeCallSource
deferCommittingTransactions
currentCallGroups
cx_incomingCallErrorWithCode:
_callWithUUID:backingCallSource:
expediteDeferredEndInterruptionForCallWithUUID:
handleFrequencyDataChanged:inDirection:forCalls:
handleBytesOfDataUsedChanged:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:
_allowRevertingStateForCompletedTransactionGroup:
_processCompletedCallAction:forCall:allowRevertingState:
callSource:reportedCallWithUUID:endedAtDate:privateReason:failureContext:
callSourceFetcher
_processRequestedTransaction:fromCallSource:completion:
callSource:registeredWithConfiguration:
callSource:reportedNewIncomingCallWithUUID:update:completion:
callSource:reportedCallWithUUID:updated:
callSource:reportedOutgoingCallWithUUID:sentInvitationAtDate:
callSource:reportedOutgoingCallWithUUID:startedConnectingAtDate:
callSource:reportedOutgoingCallWithUUID:connectedAtDate:
callSource:reportedAudioFinishedForCallWithUUID:
callSource:reportedCallWithUUID:changedFrequencyData:forDirection:
callSource:reportedCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
callSource:requestedTransaction:completion:
callSourceManager:completedTransactionGroup:
callSourcesChangedForCallSourceManager:
callControllerHost:clientWithIdentifier:bundle:extensionIdentifier:requestedTransaction:completion:
performCallActions:forCall:
faceTimeProviderDelegate
_deferCommittingTransactions
_callControllerHost
_processAssertionManager
_callSourceManager
_faceTimeCallSource
_faceTimeProviderDelegate
_callSourceFetcher
_pendingPulledCallContexts
queueContext
setSynchronous:
clientsByObject
currentConnection
requiredConnectionCapability
setMachServiceName:
initWithMachServiceName:
setXpcListener:
resume
setAsynchronousExportedObjectProxy:
setSynchronousExportedObjectProxy:
addClient:
removeClient:
clients
clientsPassingTest:
_performBlock:onClients:coalescedByIdentifier:
filterClientsUsingPredicate:andPerformBlock:
performBlockOnQueue:andWait:
remoteObjectInterface
exportedInterface
exportedObject
interruptionHandler
_connectionEndedHandlerForXPCClient:withCustomBlock:
invalidationHandler
setTarget:
handleInvocation:forConnection:synchronously:
setCurrentConnection:
invoke
_updatedQOSBlockForBlock:
retainArguments
machServiceName
_xpcClientForConnection:
isClientAllowed:
handleInvocation:forConnection:
listener:shouldAcceptNewConnection:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
clientsEntitledForCapability:
filterClientsEntitledForCapability:andPerformBlock:
performBlockOnQueue:
_performBlock:onClients:
handleInvocation:synchronously:
_remoteObjectInterface
_exportedInterface
_exportedObject
_interruptionHandler
_invalidationHandler
_asynchronousExportedObjectProxy
_synchronousExportedObjectProxy
_requiredConnectionCapability
_clientsByObject
_machServiceName
_currentConnection
methodSignatureForSelector:
isSynchronous
forwardInvocation:
_synchronous
strongToWeakObjectsMapTable
setUniqueProxyIdentifierToCallTable:
setUniqueProxyIdentifierToCallTableSemaphore:
setCurrentCallSet:
currentCallSet
uniqueProxyIdentifierToCallTableSemaphore
uniqueProxyIdentifierToCallTable
_postClientNotificationName:forCall:userInfo:
postClientNotificationName:
postClientNotificationName:forCall:
postClientNotificationName:forCall:userInfo:
_uniqueProxyIdentifierToCallTable
_uniqueProxyIdentifierToCallTableSemaphore
_currentCallSet
getValue:
handleLocalFrequencyChanged:
handleRemoteFrequencyChanged:
handleMutedChanged:
handleSendingAudioChanged:
isEqualToDescriptor:
_inCallUIWantsStatusBarSuppression
_processIdentifier
_statusBarStyleOverrides
_statusString
_socket
_destination
initWithIdentifier:handle:
isEqualToParticipant:
isEqualToHandle:
isEqualToData:
_observeNotificationName:ifTrigger:isIncludedInTriggers:
initWithTriggers:notificationCenter:
notificationCenter
handleTrigger:
notificationNamesToTriggers
callChanged
sendCallChanged:triggeredBy:
_notificationCenter
_notificationNamesToTriggers
setManager:
beginMatchingExtensions
beginDailyMaintenanceWithActivity:
manager
compactStoreWithCompletionHandler:
countOfNotificationsReceived
setCountOfNotificationsReceived:
synchronizeExtensionsWithCompletionHandler:
callDirectoryNSExtensionManager:extensionsChanged:
nsExtensionManager
_manager
_nsExtensionManager
_countOfNotificationsReceived
currentRunLoop
initWithUniqueIdentifier:name:
setDeviceType:
setSupportsRelay:
setCurrentlyPicked:
setGuest:
hashValue
destinationWithDevice:
hasCurrentAudioCalls
incomingCall
incomingVideoCall
displayedCalls
activeVideoCall
hasCurrentVideoCalls
stopAudioSession
resetAudioSessionOutputPortOverride
setAudioSessionProperties:
startAudioSessionWithCompletionHandler:
domain
setActivationContext:error:
overrideOutputAudioPort:error:
interruptionPriority
deactivateAndSetInterruptionPriority:error:
setInterruptionPriority:error:
setActive:withOptions:error:
opaqueSessionID
setMode:error:
setCategory:error:
applicationStateChanged
currentApplicationStateForProcessIdentifier:completion:
updateInterestedBundleIDs:
applicationInfoForApplication:completion:
applicationInfoForPID:completion:
destinationForDeviceWithUniqueID:
routesDidChangeHandler
didDeselectAllRoutesHandler
setDidDeselectAllRoutesHandler:
hasRelayiCloudAccount
setHasRelayiCloudAccount:
idsDeviceForIDSDeviceIdentifier
setIdsDeviceForIDSDeviceIdentifier:
pick:
executeAfterPickRouteTimeout:
deselectAllRoutes
activateWithCompletion:
frontmostAudioOrVideoCall
idsDeviceIdentifier
publicIdentifier
destinationWithRapportPublicIdentifier:
member:
drain
getObjects:range:
mainQueue
addObserverForName:object:queue:usingBlock:
stopPlaying
didBeginPlaying
setDidBeginPlaying:
alertDidBeginPlaying:
setShouldRepeat:
setShouldIgnoreRingerSwitch:
setExternalToneFileURL:
setVibrationIdentifier:
setToneIdentifier:
sound
vibration
ignoreMute
unifiedContactWithIdentifier:keysToFetch:error:
callAlert
alertWithConfiguration:
playWithCompletionHandler:
setPlaybackObserver:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isFaceTimePhotosRestricted
isFaceTimePhotosEnabled
speechSynthesizer
setSpeechSynthesizer:
audioPlayer
setAudioPlayer:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
isPlaying
isSpeaking
stopSpeakingAtBoundary:
play
URLForResource:withExtension:
initWithContentsOfURL:error:
setMixToUplink:
setNumberOfLoops:
setVolume:
initWithString:
setRate:
speakUtterance:
audioQueueFlags
setAudioQueueFlags:
setShouldHandleAudioInterruptions:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
routeWasPickedHandler
timedOutPickingRouteHandler
isCurrentlyPicked
dataActiveAndReachable
wifiAllowedForBundleId:
audioRouteInformationChangedWithNotification:
frontmostCall
currentVideoCall
pickRoute:error:
getPickableRoutesForCategory:mode:completion:
bestGuessPickableRoutesForAnyCall
pickableRoutesForTTY
devicesChangedHandler
setDevicesChangedHandler:
localDevice
flags
setLocalDeviceUpdatedHandler:
setDeviceFoundHandler:
setDeviceLostHandler:
setDeviceChangedHandler:
setFlags:
effectiveIdentifier
mediaSystemIdentifier
mediaSystemName
initWithSoundType:provider:video:region:
attemptToPlayDescriptor:completion:
initWithStreamToken:deviceID:delegate:dispatchQueue:
initiatorID
rejectWithError:
CSDRelayController
CSDOrientationMonitor
BKSAccelerometerDelegate
NSObject
CSDCallCenterObserverDelegate
CSDTransactionManager
CSDCarrierSpaceCapabilities
CTCarrierSpaceClientDelegate
CSDVoIPProcessAssertion
CSDAVConference
CSDAVConferenceProviderDelegate
CSDAVConferenceConfiguration
CSDMessagingConversationParticipant
NSCopying
Additions
CSDUserActivityManager
TUCallProviderManagerDelegate
CSDUserActivityCommunicatorDelegate
CSDAggregateDictionaryReporter
CSDReporter
CSDProximityController
TURouteControllerDelegate
CSDOrientationObserver
FaceTime
AWDCSDCallStatus
CSDFaceTimeIMAVProviderDelegate
IMAVControllerDelegate
CSDDualFaceTimeProviderDelegate
CSDFaceTimeProviderDelegate
CXProviderDelegatePrivate
CXProviderDelegate
CSDFaceTimeIDSService
CSDConversation
CSDIDSGroupSessionDelegate
CSDAVCSessionDelegate
CSDCallController
CSDRelayIDSService
CSDMessagingCallModel
CSDRelayClientController
CSDRelayMessagingControllerClientMessagingDelegate
CSDMessagingHandle
CSDProviderCall
CSDPauseDigitsQueueDelegate
CSDCallStateMonitor
CSDStatusBarManager
CSDStatusBarResolverDelegate
CSDAdditions
AWDCSDOtherFailureReport
CSDIDSGroupSessionProvider
IDSGroupSessionDelegate
IDSSessionDelegatePrivate
IDSSessionDelegate
CSDIDSSessionProvider
CSDRelayIDSDualSessionData
CSDRelayIDSDualSession
CSDThumperCapabilitiesMonitor
CSDAccountsController
IDSServiceDelegatePrivate
IDSServiceDelegate
CSDIDSDualSessionProvider
CSDPauseDigits
CSDEmergencyCallbackCapabilities
CSDCallProviderManagerXPCServer
TUCallProviderManagerXPCServer
CSDCallProviderManagerDelegate
CSDFaceTimeVideoIDSService
CSDIDSChat
CSDIDSDualSessionDelegate
CSDAVConferenceDelegate
CSDMessagingRelayMessage
CSDIncomingCallFilterDataSource
CSDMessagingCallProvider
CSDRelayMessagingController
CSDRelayIDSMessengerDelegate
CSDRelayIDSSessionMessengerDelegate
CSDDaemon
AWDCSDMomentsReport
CSDAbstractIDSProviderDelegate
CSDIDSChatDelegate
CSDMessagingAVConferenceInviteData
CSDIDSDualSession
CSDIDSDualSessionProviderDelegate
CSDAWDReporter
CSDRelayIDSMessenger
CSDThumperAccount
CSDFaceTimeIDSProviderDelegate
CSDRelayCommonController
CSDRelayMessagingControllerCommonMessagingDelegate
CSDFileTransferController
CSDFileTransferring
CSDCallSourceFetcher
CSDThumperPushHandlerAdditions
CSDThumperPushHandler
CSDPinExchangeDelegate
CSDMessagingCall
CSDRelayCall
CSDPauseDigitsQueue
CSDXPCClient
CSDTTYProviderObserver
CSDRelayPairedDeviceMessenger
TUMockCallXPCProtocol
CSDMockCallDataSource
CSDMediaAssetManager
CSDMediaAssetManaging
CSDPowerLogReporter
CSDFaceTimeProviderDelegateManagerDelegate
CSDVoIPApplicationMessageContext
CSDVoIPApplication
CSDMessagingPersonNameComponents
CSDStatusBarResolver
CSDRelayConferenceInterface
CSDSandboxExtensionDirectory
CSDPinExchangeController
AWDCSDCallAction
CSDCallCapabilities
TUCallCapabilitiesXPCServer
TUCallCapabilitiesXPCServerActions
CSDAccountsControllerDelegate
CSDTelephonyCallCapabilitiesDelegate
CSDThumperCapabilitiesMonitorDataSource
CSDCall
TUDynamicCallDisplayContextDelegate
CXAudioSessionActivationStateObserver
CSDRouteManager
TUAudioDeviceControllerDelegate
CSDConversationManager
CSDConversationDelegate
CSDIDSGroupStatusNotifierDelegate
AWDCSDRelayMessageReceived
AWDCSDRelayDeviceRoute
CSDMessagingCallMessage
CSDAudioRouteCollection
CSDFaceTimeAudioIDSService
AWDCSDCallEnd
CSDMessagingCallCapabilitiesState
CSDVoIPProcessAssertionManager
CSDIncomingCallFilter
CSDIncomingCallFilterDataSourceDelegate
CSDRecentsController
CSDIDSSession
CSDMessagingCallDisplayContext
CSDUserActivityCommunicator
UABestAppSuggestionManagerDelegate
CSDThumperIDSService
CSDIDSGroupSession
CSDIDSGroupSessionProviderDelegate
CSDCallStateController
TUCallServicesXPCServer
TUCallCenterXPCServer
TUCallServicesProxyCallActions
TUCallServicesClientCapabilitiesXPCServer
TUAudioDeviceControllerXPCServer
TURouteControllerXPCServer
CSDRelayMessagingControllerDelegate
CSDCallDelegate
AWDCSDCallTransactionComplete
CSDDeviceLockStateObserver
PKVoIPXPCClient
PKVoIPXPCServer
CSDVoIPApplicationController
APSConnectionDelegate
CSDCallDataSourceMap
CSDMessagingLabeledHandle
CSDClient
CSDConversationManagerXPCServer
TUConversationManagerXPCServer
CSDConversationManagerDelegate
CSDIDSGroupStatusNotifier
CSDIDSGroupStatusNotifierProvider
CSDIDSGroupStatusNotifierProviderDelegate
CSDIDSGroupStatusNotifierGroup
CSDCallProviderManager
CSDCallProviderManagerDataSourceDelegate
CSDFaceTimeConversationProviderDelegate
CSDRelayHostController
CSDRelayMessagingControllerHostMessagingDelegate
CSDUserActivity
CSDCallProviderManagerDataSource
CSDMomentsReportingSession
CSDSignposts
CSDAVCSession
AVCSessionDelegate
AVCSessionParticipantDelegate
CSDDuetReporter
CSDExternalIDSDualSession
CSDRelayConferenceConnection
CSDTelephonyCallCapabilities
CSDCarrierSpaceCapabilitiesDelegate
CSDEmergencyCallbackCapabilitiesDelegate
CSDRelayCallDelegate
AWDCSDCurrentCalls
CSDFaceTimeIMAccount
CSDMockCall
CSDMessagingCallModelState
CSDABCReporter
CSDReportingController
CSDMomentsReportingSessionDelegate
CSDReporterDataSource
CSDMomentsControllerDelegate
CSDIDSService
Messaging
CSDRelayIDSSessionMessenger
CSDRelayIDSDualSessionDelegate
CSDMomentsController
CSDFileTransferringDelegate
CSDAVCMomentsDelegate
TUMomentsControllerXPCServer
CSDAVConferenceProvider
AVConferenceDelegate
CSDPulledCallContext
CSDProviderCallDataSource
CXCallSourceManagerDelegate
CXCallSourceUpdates
CXCallControllerHostDelegate
CSDCallSourceFetcherDataSource
CSDProviderCallDelegate
CSDClientManager
NSXPCListenerDelegate
NSXPCConnectionDelegate
CSDClientManagerExportedObjectProxy
CSDCallDataSource
CSDRelayCallDataSource
CSDStatusBarDescriptor
CSDIDSTransport
CSDIDSGroupSessionParticipant
CSDCallCenterObserver
CSDCallDirectoryManager
CXCallDirectoryNSExtensionManagerDelegate
@16@0:8
v16@0:8
v24@0:8@16
@"CSDCallStateController"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16d24f32f36f40i44
v28@0:8@16i24
v48@0:8@"BKSAccelerometer"16d24f32f36f40i44
v28@0:8@"BKSAccelerometer"16i24
v32@0:8@16@24
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
@24@0:8@16
v20@0:8B16
i16@0:8
v20@0:8i16
@"BKSAccelerometer"
@"CSDCallCenterObserver"
@"NSMutableSet"
v40@0:8@16q24@32
v24@0:8@"CTCarrierSpaceCapabilities"16
v40@0:8@"CTCarrierSpacePlanGroupOptionInfo"16q24@"NSDictionary"32
@"<CSDCarrierSpaceCapabilitiesDelegate>"16@0:8
v24@0:8@"<CSDCarrierSpaceCapabilitiesDelegate>"16
@"<CSDCarrierSpaceCapabilitiesDelegate>"
@"NSObject<OS_dispatch_queue>"
@"CTCarrierSpaceClient"
@"CTCarrierSpaceCapabilities"
v24@0:8@?16
@"NSString"
@"BKSProcessAssertion"
v36@0:8@16B24@28
v40@0:8@16@24@32
v28@0:8@16B24
v40@0:8@16@24q32
v36@0:8@"<CSDAVConferenceProvider>"16B24@"NSError"28
v40@0:8@"<CSDAVConferenceProvider>"16@"NSError"24@"NSDictionary"32
v24@0:8@"<CSDAVConferenceProvider>"16
v32@0:8@"<CSDAVConferenceProvider>"16@"NSData"24
v28@0:8@"<CSDAVConferenceProvider>"16B24
v40@0:8@"<CSDAVConferenceProvider>"16@"NSData"24q32
q16@0:8
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
I16@0:8
v20@0:8I16
v24@0:8@"CSDAVConferenceConfiguration"16
v24@0:8@"CSDIDSTransport"16
v24@0:8@"NSData"16
@"<CSDAVConferenceDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceDelegate>"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSError"16@0:8
@"NSDate"16@0:8
v32@0:8q16@24
v24@0:8q16
v32@0:8@16q24
q32@0:8@16^@24
@?16@0:8
@"<CSDAVConferenceDelegate>"
@"NSDictionary"
@"NSError"
@"NSDate"
@"CSDAVConferenceConfiguration"
@"<CSDAVConferenceProvider>"
{CGSize="width"d"height"d}
@"VCCapabilities"
@"NSUUID"
@24@0:8^{_NSZone=}16
@"NSData"
@"CSDMessagingHandle"
v24@0:8@"TUCallProviderManager"16
v28@0:8I16@20
v28@0:8I16@"NSString"20
@"CSDUserActivityCommunicator"
@"CSDUserActivity"
v40@0:8@16@24Q32
v36@0:8@16@24B32
v40@0:8@"CSDReportingController"16@"CSDCall"24Q32
v32@0:8@"CSDReportingController"16@"CSDCall"24
v24@0:8@"CSDReportingController"16
v36@0:8@"CSDReportingController"16@"CSDMessagingRelayMessage"24B32
v32@0:8@"CSDReportingController"16@"CXTransactionGroup"24
v40@0:8@"CSDReportingController"16@"CXAction"24@"CSDCall"32
v32@0:8@"CSDReportingController"16@"CSDMomentsUsageReport"24
v40@0:8@"CSDReportingController"16@"TURoute"24@"CSDCall"32
@"<CSDReporterDataSource>"16@0:8
v24@0:8@"<CSDReporterDataSource>"16
v24@0:8@"TURouteController"16
@56@0:8@16@24@32@40@48
@"<CSDCallCenterObserver>"
@"TURouteController"
@"<CSDOrientationObserver>"
@"<TUNotifyObserver>"
v24@0:8@?<v@?@"FBSOrientationUpdate">16
@?<v@?@"FBSOrientationUpdate">16@0:8
v24@0:8Q16
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
@20@0:8i16
i24@0:8@16
@24@0:8Q16
{?="list"^I"count"Q"size"Q}
@"NSMutableArray"
{?="connectionTimeMs"b1"durationMs"b1"endReason"b1"providerEndedReason"b1"providerErrorCode"b1"setupTimeMs"b1"faceTimeTransportType"b1"idsLinkType"b1"telephonyTransportType"b1"hasConnected"b1"hasEnded"b1"hasStartedConnecting"b1"isCurrentlyGrouped"b1"isHeld"b1"isIncoming"b1"isRelay"b1}
v24@0:8@"IMAVChat"16
v32@0:8@"IMHandle"16q24
B32@0:8@16@24
v24@0:8@"CXProvider"16
B32@0:8@"CXProvider"16@"CXTransaction"24
v32@0:8@"CXProvider"16@"CXStartCallAction"24
v32@0:8@"CXProvider"16@"CXAnswerCallAction"24
v32@0:8@"CXProvider"16@"CXEndCallAction"24
v32@0:8@"CXProvider"16@"CXSetHeldCallAction"24
v32@0:8@"CXProvider"16@"CXSetMutedCallAction"24
v32@0:8@"CXProvider"16@"CXSetGroupCallAction"24
v32@0:8@"CXProvider"16@"CXPlayDTMFCallAction"24
v32@0:8@"CXProvider"16@"CXAction"24
v32@0:8@"CXProvider"16@"AVAudioSession"24
v32@0:8@"CXProvider"16@"CXSendMMIOrUSSDCodeAction"24
v32@0:8@"CXProvider"16@"CXSetTTYTypeCallAction"24
v32@0:8@"CXProvider"16@"CXSetSendingVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetRelayingCallAction"24
v32@0:8@"CXProvider"16@"CXPullCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationSizeCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationStateCallAction"24
B24@0:8@"NSUUID"16
v24@0:8@"NSUUID"16
v28@0:8@16I24
v56@0:8{CGSize=dd}16{CGSize=dd}32@48
I24@0:8q16
@"<CSDFaceTimeProviderDelegateManagerDelegate>"
@"CXProvider"
@"NSMutableOrderedSet"
v36@0:8@"CSDIDSGroupSession"16B24@"NSError"28
v32@0:8@"CSDIDSGroupSession"16@"NSError"24
v36@0:8@"<CSDAVCSession>"16B24@"NSError"28
v32@0:8@"<CSDAVCSession>"16@"NSError"24
v24@0:8@"<CSDAVCSession>"16
v32@0:8@"NSString"16@"NSData"24
@52@0:8@16B24@28@36@44
@"<CSDConversationDelegate>"
@"NSSet"
@"CSDIDSGroupSession"
@"<CSDAVCSession>"
@"CSDRelayCallDataSource"
@"CSDProviderCallDataSource"
@"CSDMockCallDataSource"
@"NSArray"
{?="supportsAddCall"b1"supportsDTMF"b1"supportsGrouping"b1"supportsHolding"b1"supportsSendingToVoicemail"b1"supportsUnambiguousMultiPartyState"b1"supportsUngrouping"b1}
v32@0:8@16@?24
v28@0:8@"CSDMessagingRelayMessage"16B24
v24@0:8@"CSDMessagingRelayMessage"16
v32@0:8@"CSDMessagingRelayMessage"16@?<v@?@"NSDictionary">24
@28@0:8i16@20
C16@0:8
v20@0:8C16
{?="type"b1}
v24@0:8@"CSDPauseDigitsQueue"16
@28@0:8@16B24
@40@0:8@16@24@32
@48@0:8@16@24@32B40B44
@32@0:8@16@24
Vv20@0:8B16
@"<CSDProviderCallDelegate>"
@"CXCallSource"
@"CXCallFailureContext"
@"CXCallUpdate"
@"CSDPauseDigitsQueue"
@"NSTimer"
v24@0:8@"<CSDStatusBarResolver>"16
@"<CSDStatusBarResolver>"
@"SBSStatusBarStyleOverridesAssertion"
@"BKSApplicationStateMonitor"
{?="actionType"b1"failureReason"b1"timestamp"b1"providerWasReset"b1}
v36@0:8@16I24@28
v48@0:8@16@24@32@40
v36@0:8@"IDSGroupSession"16I24@"NSError"28
v40@0:8@"IDSGroupSession"16@"NSArray"24@"NSError"32
v32@0:8@"IDSGroupSession"16@"NSError"24
v32@0:8@"IDSGroupSession"16@"NSDictionary"24
v48@0:8@"IDSGroupSession"16@"NSArray"24@"NSNumber"32@"NSError"40
v32@0:8@"IDSSession"16@"NSString"24
v24@0:8@"IDSSession"16
v36@0:8@"IDSSession"16I24@"NSError"28
v40@0:8@"IDSSession"16@"NSString"24@"NSData"32
v32@0:8@"IDSSession"16@"NSSet"24
v36@0:8@"IDSSession"16@"NSSet"24B32
@"<CSDIDSGroupSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSGroupSessionProviderDelegate>"16
@48@0:8@16@24@32@40
@"<CSDIDSGroupSessionProviderDelegate>"
@"IDSGroupSession"
@"IDSAccount"
@36@0:8@16B24@28
@60@0:8@16B24@28@36@44@52
@52@0:8@16@24@32i40@44
v36@0:8@16B24@?28
@"<CSDRelayIDSDualSessionDelegate>"
@"IDSDestination"
@"IDSDevice"
@"<CSDThumperCapabilitiesMonitorDataSource>"
@"NPSDomainAccessor"
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v40@0:8@16@24@?32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v68@0:8@16@24@32@40q48@56B64
v76@0:8@16@24@32@40q48@56B64@68
v72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24d32@40
v68@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64
v76@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64@"IDSMessageContext"68
v72@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSDictionary"64
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@48
v48@0:8@"IDSService"16@"NSString"24d32@"NSError"40
v32@0:8@"IDSService"16q24
@"NSObject<CSDAccountsControllerDelegate>"
v28@0:8@"NSData"16B24
@"<CSDIDSDualSessionProviderDelegate>"16@0:8
v24@0:8@"<CSDIDSDualSessionProviderDelegate>"16
@"<CSDIDSDualSessionProviderDelegate>"
@"IDSSession"
@"<CSDEmergencyCallbackCapabilitiesDelegate>"16@0:8
v24@0:8@"<CSDEmergencyCallbackCapabilitiesDelegate>"16
@"<CSDEmergencyCallbackCapabilitiesDelegate>"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
v24@0:8@"<TUCallProviderManagerXPCClient>"16
v24@0:8@"CSDCallProviderManager"16
@"CSDClientManager"
@"CSDCallProviderManager"
v28@0:8@"CSDIDSDualSession"16i24
v24@0:8@"CSDIDSDualSession"16
v36@0:8@"CSDIDSDualSession"16@"NSArray"24B32
v32@0:8@"CSDIDSDualSession"16@"NSData"24
v24@0:8@"<CSDAVConference>"16
v40@0:8@"<CSDAVConference>"16q24@"NSError"32
v32@0:8@"<CSDAVConference>"16@"NSData"24
v32@0:8@"<CSDAVConference>"16q24
v40@0:8@"<CSDAVConference>"16@"NSData"24q32
v32@0:8@"<CXVideoAspectRatioDescriptor>"16@?<v@?@"NSArray"B>24
v24@0:8@"<CXVideoAspectRatioDescriptor>"16
@"<CSDIDSChatDelegate>"16@0:8
v24@0:8@"<CSDIDSChatDelegate>"16
@"NSUUID"16@0:8
@"TUHandle"16@0:8
@"CXCallFailureContext"16@0:8
@36@0:8@16@24B32
@44@0:8@16@24B32@36
v32@0:8@16B24B28
@"<CSDIDSChatDelegate>"
@"CSDExternalIDSDualSession"
@"TUHandle"
@"<CSDAVConference>"
v20@0:8f16
f16@0:8
@"CSDMessagingAVConferenceInviteData"
@"CSDMessagingCallCapabilitiesState"
@"CSDMessagingCallModel"
@"CSDMessagingCallModelState"
@"CSDMessagingCallDisplayContext"
@"CSDMessagingCallProvider"
{?="hostCallCreationTime"b1"messageSendTime"b1"hardPauseState"b1"protoDisconnectedReason"b1"protoProtocolVersion"b1"protoService"b1"protoSoundRegion"b1"receivedMessageType"b1"systemVolume"b1"type"b1"protoCannotBeAnswered"b1"protoCannotRelayAudioOrVideoOnPairedDevice"b1"protoEmergency"b1"protoExpectedEndpointOnMessagingDevice"b1"protoNeedsManualInCallSounds"b1"protoRemoteUplinkMuted"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8@?<q@?@"NSString"@"NSString">16
B24@0:8@"NSString"16
@"<CSDIncomingCallFilterDataSourceDelegate>"16@0:8
v24@0:8@"<CSDIncomingCallFilterDataSourceDelegate>"16
@"<CSDIncomingCallFilterDataSourceDelegate>"
{?="maximumCallGroups"b1"maximumCallsPerCallGroup"b1"supportsAudioAndVideo"b1"supportsAudioOnly"b1"supportsEmergency"b1"supportsRecents"b1"supportsVoicemail"b1}
v48@0:8@"CSDRelayIDSMessenger"16@"CSDMessagingRelayMessage"24@"IDSDestination"32@"IDSDevice"40
v36@0:8@"CSDRelayIDSMessenger"16@"NSArray"24B32
q24@0:8@16
B24@0:8@"CSDMessagingRelayMessage"16
B32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
q24@0:8@"CSDMessagingRelayMessage"16
@"NSArray"24@0:8@"CSDMessagingRelayMessage"16
q24@0:8q16
v28@0:8i16@20
v28@0:8@16C24
v28@0:8@16f24
v32@0:8@?16@24
@"<CSDRelayMessagingControllerDelegate>"
@"<CSDRelayMessagingControllerClientMessagingDelegate>"
@"<CSDRelayMessagingControllerHostMessagingDelegate>"
@"<CSDRelayMessagingControllerCommonMessagingDelegate>"
@"CSDRelayIDSSessionMessenger"
@"CSDRelayPairedDeviceMessenger"
v28@0:8i16@?20
@"CSDCallStateMonitor"
@"CSDRelayMessagingController"
@"CSDRelayClientController"
@"CSDRelayHostController"
@"CSDRelayCommonController"
@"CSDCallDirectoryManager"
@"CSDVoIPApplicationController"
@"CSDMomentsController"
@"CSDOrientationMonitor"
@"CSDProximityController"
@"CSDAudioController"
@"CSDStatusBarManager"
{?="meanRequestDuration"b1"medianRequestDuration"b1"timestamp"b1"availability"b1"photoRequestFailureCount"b1"photoRequestSuccessCount"b1}
{CGSize=dd}24@0:8@16
B24@0:8@"<CSDIDSChat>"16
{CGSize=dd}24@0:8@"<CSDIDSChat>"16
v24@0:8@"<CSDIDSChat>"16
v32@0:8@"<CSDIDSChat>"16@"NSData"24
v32@0:8@"<CSDIDSChat>"16q24
i24@0:8q16
@"<CSDIDSProviderDelegateCapabilities>"
v40@0:8@"<CSDIDSDualSessionProvider>"16@"NSString"24@"NSData"32
v24@0:8@"<CSDIDSDualSessionProvider>"16
v36@0:8@"<CSDIDSDualSessionProvider>"16@"NSSet"24B32
v36@0:8@"<CSDIDSDualSessionProvider>"16I24@"NSError"28
@28@0:8@16i24
v32@0:8@16i24B28
@"<CSDIDSDualSessionDelegate>"
@"NSNumber"
@"<CSDIDSDualSessionProvider>"
i20@0:8i16
i28@0:8@16B24
i24@0:8Q16
v28@0:8I16@?20
@"<CSDReporterDataSource>"
@"AWDServerConnection"
@"NSMutableDictionary"
@"<CSDRelayIDSMessengerDelegate>"
@"<CSDFaceTimeIDSProviderDelegateCapabilities>"
@"<CSDFaceTimeIDSProviderDelegateServerBag>"
v40@0:8@"NSURL"16@"NSSet"24@"NSDictionary"32
@"<CSDFileTransferringDelegate>"16@0:8
v24@0:8@"<CSDFileTransferringDelegate>"16
v48@0:8Q16@24@32@?40
@"<CSDFileTransferringDelegate>"
@"IDSService"
@32@0:8@16d24
v48@0:8@16@24@32@?40
@"<CSDCallSourceFetcherDataSource>"
^{__CFString=}16@0:8
v32@0:8B16B20@24
v32@0:8@"IDSDevice"16@?<v@?B@"NSString">24
v24@0:8@"IDSDevice"16
v24@0:8@?<v@?B>16
v40@0:8@"NSNumber"16@"NSString"24@?<v@?B>32
v32@0:8B16B20@"IDSDevice"24
{?="protoTimeConnected"b1"protoDisconnectedReason"b1"protoService"b1"protoSoundRegion"b1"protoStatus"b1"protoConferenced"b1"protoEmergency"b1"protoHasSentInvitation"b1"protoNeedsManualInCallSounds"b1"protoOutgoing"b1"protoSOS"b1"protoShouldSuppressRingtone"b1"protoUplinkMuted"b1"protoVideo"b1"protoVoicemail"b1"protoWantsHoldMusic"b1}
v24@0:8i16B20
@"TUCallProvider"
@"TUCallDisplayContext"
@"<CSDRelayCallDelegate>"
@"<CSDPauseDigitsQueueDelegate>"
@24@0:8d16
v40@0:8@16d24@?32
Vv24@0:8@16
Vv24@0:8@"TUProxyCall"16
Vv24@0:8@?<v@?>16
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSString"@"NSError">32
v56@0:8@16@24@32q40@48
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32
v56@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"<CSDDualFaceTimeProviderDelegate>"16@"CXTransaction"24@?<v@?@"NSError">32
@"TUContactsDataProvider"
@"CSDConversationManager"
@"CSDConversationManagerXPCServer"
@"CSDFaceTimeIDSProviderDelegate"
@"CSDFaceTimeIMAVProviderDelegate"
@"CSDFaceTimeConversationProviderDelegate"
@"CSDClient"
@"CSDMessagingPersonNameComponents"
B20@0:8I16
@"<CSDStatusBarResolverDelegate>"16@0:8
v24@0:8@"<CSDStatusBarResolverDelegate>"16
@"CSDStatusBarDescriptor"16@0:8
@"<CSDStatusBarResolverDelegate>"
@"<CSDProcessObserverProtocol>"
@"CSDStatusBarDescriptor"
v28@0:8B16@20
v56@0:8@16@24@32@?40@?48
@40@0:8@16@24^@32
@32@0:8@16^@24
B32@0:8@16^@24
@"NSURL"
@"NSFileManager"
v36@0:8B16B20@24B32
@"<CSDPinExchangeDelegate>"
{?="actionType"b1"completionTimeMs"b1"failureReason"b1"state"b1}
Vv28@0:8B16@20
Vv28@0:8B16@"NSString"20
Vv24@0:8@?<v@?@"TUCallCapabilitiesState">16
v24@0:8@"<TUCallCapabilitiesXPCClient>"16
@"CSDThumperAccount"16@0:8
C32@0:8@16@24
@24@0:8B16B20
@"NSXPCListener"
@"CSDAccountsController"
@"CSDTelephonyCallCapabilities"
@"CSDThumperPushHandler"
@"CSDPinExchangeController"
@"CSDThumperCapabilitiesMonitor"
@"<CSDIDSService>"
@"TUCallCapabilitiesState"
v24@0:8@"TUDynamicCallDisplayContext"16
@"<CSDCallDelegate>"
@"CSDCallDataSource"
@"TUDialRequest"
@"CSDIDSTransport"
@"TUDynamicCallDisplayContext"
v24@0:8@"TUAudioDeviceController"16
@"CARAutomaticDNDStatus"
v24@0:8@"CSDConversation"16
v32@0:8@"CSDConversation"16@"CSDIDSGroupSessionParticipant"24
v48@0:8@"CSDIDSGroupStatusNotifier"16@"NSSet"24@"NSUUID"32@"NSSet"40
@"CSDIDSGroupStatusNotifier"
@"CSDIDSService"
@"NSMapTable"
{?="latencyMs"b1"protocolVersion"b1"timestamp"b1"callService"b1"messageType"b1}
{?="type"b1"failed"b1}
{?="protoProtocolVersion"b1"type"b1"protoMomentsAvailable"b1"protoSenderMuteUplink"b1"protoWantsVideo"b1}
B24@0:8q16
v32@0:8@?16@?24
@24@0:8@?16
B24@0:8@?16
@"AWDCSDCallStatus"
{?="timestamp"b1"callInfoSource"b1}
{?="faceTimeAudioAvailable"b1"faceTimeVideoAvailable"b1}
@"NSCountedSet"
v28@0:8@"<CSDIncomingCallFilterDataSource>"16B24
@48@0:8@16@24@32@?40
@"CXCallDirectoryStore"
@"CSDIncomingCallFilterDataSource"
@"<CSDDeviceLockStateObserver>"
@"CXCallDirectorySanitizer"
v40@0:8q16@24@32
@"<CSDTransactionManager>"
@"CHManager"
@"TUCallProviderManager"
@"<CSDRecentsNotificationDelegate>"
@"CSDIncomingCallFilter"
@"<CSDIDSSessionProvider>"
v24@0:8@"UABestAppSuggestion"16
v32@0:8@16d24
v36@0:8@16d24B32
@"<CSDUserActivityCommunicatorDelegate>"
@"UABestAppSuggestionManager"
v36@0:8@"<CSDIDSGroupSessionProvider>"16I24@"NSError"28
v40@0:8@"<CSDIDSGroupSessionProvider>"16@"NSArray"24@"NSError"32
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSError"24
v32@0:8@"<CSDIDSGroupSessionProvider>"16@"NSDictionary"24
@"<CSDIDSGroupSessionDelegate>"
@"<CSDIDSGroupSessionProvider>"
Vv32@0:8@16@24
Vv28@0:8@16C24
Vv28@0:8i16@20
Vv40@0:8@16{CGSize=dd}24
Vv28@0:8@16i24
Vv24@0:8@"TUAnswerRequest"16
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSString"24
Vv28@0:8@"NSString"16C24
Vv28@0:8i16@"NSString"20
Vv24@0:8@"IDSDestination"16
Vv40@0:8@"NSString"16{CGSize=dd}24
Vv28@0:8@"NSString"16i24
Vv24@0:8@"TUDialRequest"16
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"TUDialRequest"16@"TUCallDisplayContext"24
Vv32@0:8@"TUDialRequest"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUJoinConversationRequest"16
Vv32@0:8@"NSDictionary"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUCallServicesClientCapabilities"16
v28@0:8@"NSArray"16B24
@"CSDCallController"16@0:8
v24@0:8@"CSDCall"16
v36@0:8@16i24@28
v24@0:8B16B20
@"CSDCallController"
@"CSDRecentsController"
@"CSDCallProviderManagerXPCServer"
@"CSDRouteController"
@"CSDRelayCallDelegate"
@"NSHashTable"
@"CSDDirtyCallManager"
{?="completionTimeMs"b1"timestamp"b1"failed"b1"timedOut"b1}
v24@0:8@?<v@?>16
v32@0:8@"NSDictionary"16@?<v@?>24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"APSConnection"
@"TUCallServicesClientCapabilities"
v24@0:8@"<TUConversationManagerXPCClient>"16
v32@0:8@"CSDConversationManager"16@"TUConversation"24
v40@0:8@"CSDConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v32@0:8@"<CSDIDSGroupStatusNotifierProviderDelegate>"16@"NSObject<OS_dispatch_queue>"24
v32@0:8@"<CSDIDSGroupStatusNotifierProvider>"16@"NSSet"24
v32@0:8@"<CSDIDSGroupStatusNotifierProvider>"16@"NSDictionary"24
@"<CSDIDSGroupStatusNotifierDelegate>"
@"<CSDIDSGroupStatusNotifierProvider>"
v24@0:8@"<CSDCallProviderManagerDataSource>"16
@"<CSDCallProviderManagerDataSource>"
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?B@"NSDictionary">32
v32@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24
v40@0:8@"CSDMessagingRelayMessage"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v40@0:8@"NSDictionary"16@"IDSDestination"24@?<v@?@"NSDictionary">32
v44@0:8@16@24B32@36
@36@0:8I16@20@28
I24@0:8@16
@20@0:8I16
@"NSUserActivity"
@"TUDialRequest"24@0:8@"TUDialRequest"16
v48@0:8@"NSUserActivity"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSString"16@"NSURL"24
v24@0:8@"NSArray"16
B24@0:8@"TUCallProvider"16
@"<CSDCallProviderManagerDataSourceDelegate>"16@0:8
v24@0:8@"<CSDCallProviderManagerDataSourceDelegate>"16
@"NSSet"16@0:8
v32@0:8@16r^{__CFString=}24
@24@0:8r^{__CFString=}16
@"<CSDCallProviderManagerDataSourceDelegate>"
@"CSDSandboxExtensionDirectory"
d24@0:8@16
Q24@0:8Q16
@24@0:8q16
@"<CSDMomentsReportingSessionDelegate>"
v44@0:8@16B24@28@36
v36@0:8@"AVCSession"16B24@"NSError"28
v32@0:8@"AVCSession"16@"NSError"24
v24@0:8@"AVCSession"16
v44@0:8@"AVCSession"16@"NSString"24B32@"NSError"36
v44@0:8@"AVCSession"16B24@"AVCSessionConfiguration"28@"NSError"36
v32@0:8@"AVCSessionParticipant"16@"NSData"24
v24@0:8@"CSDIDSGroupSessionParticipant"16
@"NSData"16@0:8
@"AVCSession"
@"<CSDAVCSessionDelegate>"
@44@0:8@16B24@28@36
@36@0:8@16@24i32
v24@0:8@"<CSDCarrierSpaceCapabilities>"16
v24@0:8@"<CSDEmergencyCallbackCapabilities>"16
@40@0:8@16@24B32B36
B24@0:8{?=ii}16
v28@0:8r^{__CFString=}16B24
v32@0:8r^{__CFString=}16@24
v36@0:8r^{__CFString=}16B24@28
v24@0:8r^{__CFString=}16
@"<CSDTelephonyCallCapabilitiesDelegate>"
@"CSDCarrierSpaceCapabilities"
@"CSDEmergencyCallbackCapabilities"
@"TUCTCapabilityInfo"
v24@0:8@"CSDRelayCall"16
v32@0:8@"CSDRelayCall"16@"TUAnswerRequest"24
v32@0:8@"CSDRelayCall"16@"TUCall"24
v28@0:8@"CSDRelayCall"16C24
v36@0:8@"CSDRelayCall"16B24@"NSError"28
@"TUDTMFSoundPlayer"
{?="timestamp"b1}
@"<CXAudioSessionActivationStateObserver>"
{?="ambiguityState"b1"addCallAllowed"b1"endAndAnswerAllowed"b1"hardPauseAvailable"b1"holdAllowed"b1"holdAndAnswerAllowed"b1"mergeable"b1"sendToVoicemailAllowed"b1"swappable"b1"takingCallsPrivateAllowed"b1}
@32@0:8@16@?24
v32@0:8@"CSDMomentsReportingSession"16@"CSDMomentsUsageReport"24
@"NSArray"16@0:8
v36@0:8@16q24i32
v36@0:8@"CSDMomentsController"16q24i32
v32@0:8@"CSDMomentsController"16q24
v40@0:8@"CSDMomentsController"16q24@"NSString"32
@"IDSDevice"24@0:8@"NSString"16
v32@0:8@"<IDSServiceDelegatePrivate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<IDSServiceDelegatePrivate>"16
@"IDSDevice"16@0:8
v48@0:8@"CSDIDSDualSession"16@"NSData"24@"IDSDestination"32@"IDSDevice"40
v52@0:8@16@24@32q40B48
v48@0:8@16@24@32q40
v56@0:8@16@24@32q40@?48
v40@0:8@16@?24@?32
v48@0:8@16@24@?32@?40
v52@0:8@16@24@?32B40@?44
i20@0:8B16
v40@0:8@"<CSDFileTransferring>"16@"NSURL"24@"NSDictionary"32
v36@0:8@"<CSDFileTransferring>"16@"NSURL"24B32
v28@0:8@"<CSDAVCMoments>"16I24
v40@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSError"32
v48@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSURL"32@"NSError"40
v24@0:8@"<CSDAVCMoments>"16
Vv44@0:8q16@24B32@?36
Vv32@0:8q16@?24
Vv36@0:8i16q20@?28
Vv44@0:8q16@"NSString"24B32@?<v@?@"TUMomentsCapabilities"@"NSError">36
Vv32@0:8q16@?<v@?@"NSError">24
Vv36@0:8i16q20@?<v@?@"NSString"@"NSError">28
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@"<TUMomentsControllerXPCClient>"16
@"<CSDMomentsControllerDelegate>"
@"<CSDFileTransferring>"
@"<CSDMediaAssetManaging>"
@"<TUMomentsControllerXPCClient>"
v36@0:8@16q24B32
v36@0:8@16B24q28
v40@0:8@16q24B32B36
v44@0:8@16B24q28@36
v48@0:8@16q24@32@40
v44@0:8@16q24B32@36
v32@0:8@16B24I28
v40@0:8@16B24I28@32
v32@0:8@16I24I28
v36@0:8@"AVConference"16q24B32
v36@0:8@"AVConference"16B24@"NSDictionary"28
v40@0:8@"AVConference"16q24@"NSError"32
v32@0:8@"AVConference"16@"NSData"24
v32@0:8@"AVConference"16q24
v40@0:8@"AVConference"16@"VideoAttributes"24q32
v36@0:8@"AVConference"16B24q28
v24@0:8@"AVConference"16
v40@0:8@"AVConference"16q24@"NSDictionary"32
v40@0:8@"AVConference"16q24B32B36
v40@0:8@"AVConference"16@"NSData"24q32
v44@0:8@"AVConference"16B24q28@"NSError"36
v48@0:8@"AVConference"16q24@"NSError"32@"NSDictionary"40
v44@0:8@"AVConference"16q24B32@"NSError"36
v32@0:8@"AVConference"16B24I28
v40@0:8@"AVConference"16B24I28@"NSError"32
v32@0:8@"AVConference"16I24I28
v28@0:8@"AVConference"16I24
v28@0:8@"AVConference"16f24
v28@0:8@"AVConference"16B24
v48@0:8{CGSize=dd}16{CGSize=dd}32
B20@0:8i16
B52@0:8B16@20@28@36^@44
B40@0:8B16@20i28^@32
v56@0:8q16@24d32@?40@48
B52@0:8B16@"NSDictionary"20@"VCCapabilities"28@"NSString"36^@44
B40@0:8B16@"VCCapabilities"20i28^@32
v56@0:8q16@"NSDictionary"24d32@?<v@?@"NSDictionary"@"NSError">40@"NSObject<OS_dispatch_queue>"48
v24@0:8@"VCCapabilities"16
@"<CSDAVConferenceProviderDelegate>"16@0:8
v24@0:8@"<CSDAVConferenceProviderDelegate>"16
@"<CSDAVConferenceProviderDelegate>"
@"AVConference"
@"TUVideoDeviceController"
@"CSDProviderCall"
v32@0:8@"CXCallSource"16@"CXProviderConfiguration"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32@?<v@?@"NSError">40
v40@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32
v56@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32
v32@0:8@"CXCallSource"16@"NSUUID"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSData"32q40
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSString"32q40
v40@0:8@"CXCallSource"16@"CXTransaction"24@?<v@?@"NSError">32
v32@0:8@"CXCallSourceManager"16@"CXTransactionGroup"24
v24@0:8@"CXCallSourceManager"16
v64@0:8@16@24@32@40@48@?56
v64@0:8@"CXCallControllerHost"16@"NSString"24@"NSBundle"32@"NSString"40@"CXTransaction"48@?<v@?@"NSError">56
@"CXCallSource"24@0:8@"NSString"16
@"CXCallSource"24@0:8@"TUDialRequest"16
@"CXCallSource"24@0:8@"TUJoinConversationRequest"16
@"TUCallProvider"24@0:8@"NSString"16
v32@0:8@"CXCallAction"16@"CSDProviderCall"24
v32@0:8@"NSArray"16@"CSDProviderCall"24
v32@0:8@"CXStartCallAction"16@"CSDProviderCall"24
B40@0:8@16@24^@32
@"CXCallControllerHost"
@"CSDVoIPProcessAssertionManager"
@"CXCallSourceManager"
@"CXInProcessCallSource"
@"<CXProviderDelegatePrivate>"
@"CSDCallSourceFetcher"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
v40@0:8@?16@?24@32
^v16@0:8
v28@0:8@?16B24
v40@0:8@?16@24@32
@?32@0:8@16@?24
@?24@0:8@?16
@"NSXPCInterface"
@"NSXPCConnection"
@"NSObject<OS_dispatch_semaphore>"
@"<CSDCallCenterObserverDelegate>"16@0:8
v24@0:8@"<CSDCallCenterObserverDelegate>"16
@?<v@?@"CSDCall"Q>16@0:8
v24@0:8@?<v@?@"CSDCall"Q>16
@"<TUCallContainerPrivate>"16@0:8
@32@0:8Q16@24
v40@0:8@16Q24Q32
v32@0:8@16Q24
@"<CSDCallCenterObserverDelegate>"
@"NSNotificationCenter"
v32@0:8@"CXCallDirectoryNSExtensionManager"16@"NSArray"24
@"CXCallDirectoryManager"
@"CXCallDirectoryNSExtensionManager"
callStateController
T@"CSDCallStateController",&,N,V_callStateController
relayMessagingController
T@"CSDRelayMessagingController",R,N
callController
T@"CSDCallController",R,N
allCalls
T@"NSArray",R,N
hash
TQ,R
T#,R
T@"NSString",R,C
T@"CSDCallCenterObserver",&,N,V_callCenterObserver
currentOrientation
Ti,N,V_currentOrientation
accelerometer
T@"BKSAccelerometer",R,N,V_accelerometer
sharedInstance
T@"CSDTransactionManager",R,N
objectsWithTransactions
T@"NSMutableSet",&,N,V_objectsWithTransactions
v24@?0@"CTCarrierSpaceCapabilities"8@"NSError"16
<%@ %p carrierSpaceCapabilities=%@>
T@"<CSDCarrierSpaceCapabilitiesDelegate>",W,N
supportsCarrierServices
TB,R,N
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
carrierSpaceClient
T@"CTCarrierSpaceClient",R,N,V_carrierSpaceClient
carrierSpaceCapabilities
T@"CTCarrierSpaceCapabilities",&,N,V_carrierSpaceCapabilities
T@"<CSDCarrierSpaceCapabilitiesDelegate>",W,N,V_delegate
%@-%@
processAssertion
T@"BKSProcessAssertion",&,N,V_processAssertion
bundleIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
com.apple.telephonyutilities.callservicesdaemon.csdavconference
@"<CSDAVConferenceProvider>"24@?0@"NSUUID"8@"NSObject<OS_dispatch_queue>"16
<%@ %p state=%d conference=%@>
v24@?0@"NSDictionary"8@"NSError"16
T@"<CSDAVConferenceDelegate>",W,N
delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N
localInviteDictionary
T@"NSDictionary",R,C,N
remoteInviteDictionary
T@"NSDictionary",C,N
callID
Tq,R,N
caller
TB,N,GisCaller
connectionTimeout
Td,N
deviceRole
Ti,N
state
Ti,R,N
endedReason
endedError
T@"NSError",R,N
dateStartedConnecting
T@"NSDate",R,N
dateConnected
dateEnded
muted
TB,N,GisMuted
sendingAudio
TB,N,GisSendingAudio
hasReceivedFirstRemoteFrame
sendingVideo
TB,N,GisSendingVideo
remoteVideoPaused
TB,R,N,GisRemoteVideoPaused
remoteVideoPresentationSize
T{CGSize=dd},N
remoteVideoPresentationState
TI,N
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSDictionary",C,N,V_localInviteDictionary
Ti,N,V_state
Tq,N,V_endedReason
T@"NSError",&,N,V_endedError
T@"NSDate",&,N,V_dateStartedConnecting
T@"NSDate",&,N,V_dateConnected
T@"NSDate",&,N,V_dateEnded
TB,N,V_hasReceivedFirstRemoteFrame
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
configuration
T@"CSDAVConferenceConfiguration",&,N,V_configuration
conferenceProvider
T@"<CSDAVConferenceProvider>",&,N,V_conferenceProvider
conferenceProviderCreationBlock
T@?,C,N,V_conferenceProviderCreationBlock
T@"<CSDAVConferenceDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
Td,N,V_connectionTimeout
T{CGSize=dd},N,V_remoteVideoPresentationSize
TI,N,V_remoteVideoPresentationState
<%@ %p caller=%d capabilities=%@ deviceRole=%d>
TB,N,GisCaller,V_caller
capabilities
T@"VCCapabilities",&,N,V_capabilities
clientUUID
T@"NSUUID",&,N,V_clientUUID
requiresInviteDictionary
TB,N,V_requiresInviteDictionary
T@"NSDictionary",C,N,V_remoteInviteDictionary
localLandscapeAspectRatio
T{CGSize=dd},N,V_localLandscapeAspectRatio
localPortraitAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
TUCallUserActivityCTInfoKey
TUCallUserActivityServiceKey
kCTCallDirection
kCTCallDirectionOutgoing
kCTCallDirectionIncoming
kCTCallPhoneNumber
com.apple.coretelephony
handoffActivityUserInfo
%@ %@
handle
avcData
hasHandle
T@"CSDMessagingHandle",&,N,V_handle
hasAvcData
T@"NSData",&,N,V_avcData
protocolVersion
wantsVideo
TB,N
senderMuteUplink
TB,N,GisMomentsAvailable
T@"CSDUserActivityManager",R,N
activityCommunicator
T@"CSDUserActivityCommunicator",&,N,V_activityCommunicator
handoffActivity
T@"CSDUserActivity",&,N,V_handoffActivity
v24@?0@"NSString"8d16
ADClientSetValueForDistributionKey
AggregateDictionary
%@.%@.%f
dataSource
T@"<CSDReporterDataSource>",W,N
block
T@?,C,N,V_block
com.apple.backboard.proximity.changed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDProximityController.m
<Unknown File>
Invalid parameter not satisfying: %@
callCenterObserver != nil
interfaceOrientationObserver != nil
routeController != nil
proximitySensorCoveredObserver != nil
queue != nil
v16@?0@"FBSOrientationUpdate"8
v12@?0i8
T@"<CSDCallCenterObserver>",R,N,V_callCenterObserver
routeController
T@"TURouteController",R,N,V_routeController
interfaceOrientationObserver
T@"<CSDOrientationObserver>",R,N,V_interfaceOrientationObserver
proximitySensorCoveredObserver
T@"<TUNotifyObserver>",R,N,V_proximitySensorCoveredObserver
proximityDetectionMode
Ti,N,V_proximityDetectionMode
proximitySensorCovered
TB,N,GisProximitySensorCovered,V_proximitySensorCovered
interfaceOrientationPortrait
TB,N,GisInterfaceOrientationPortrait,V_interfaceOrientationPortrait
proximitySensorEnabled
TB,R,N,GisProximitySensorEnabled
voiceOverRunningDeterminationHandler
T@?,C,N,V_voiceOverRunningDeterminationHandler
voiceOverTouchShouldRouteToSpeakerDeterminationHandler
T@?,C,N,V_voiceOverTouchShouldRouteToSpeakerDeterminationHandler
proximityChangeHandler
T@?,C,N,V_proximityChangeHandler
handler
T@?,C,N
ConferenceID:
kCMSessionAudioCategory_PlayAndRecord_NoBluetooth
CoreMedia
kCMSessionAudioMode_VoiceChat
kCMSessionAudioMode_VideoChat
faceTimeTransportType
Tq,N
remoteMomentsAvailable
TB,R,N,GisRemoteMomentsAvailable
idx (%tu) is out of range (%tu)
call_uuid
provider_id
is_incoming
is_held
has_connected
has_ended
is_currently_grouped
duration_ms
setup_time_ms
connection_time_ms
features
end_reason
face_time_transport_type
telephony_transport_type
provider_error_code
is_relay
provider_ended_reason
has_started_connecting
ids_link_type
relay_device_route_change
hasCallUuid
callUuid
T@"NSString",&,N,V_callUuid
hasProviderId
providerId
T@"NSString",&,N,V_providerId
hasIsIncoming
isIncoming
TB,N,V_isIncoming
hasIsHeld
isHeld
TB,N,V_isHeld
hasHasConnected
hasConnected
TB,N,V_hasConnected
hasHasEnded
hasEnded
TB,N,V_hasEnded
hasIsCurrentlyGrouped
isCurrentlyGrouped
TB,N,V_isCurrentlyGrouped
hasDurationMs
durationMs
TQ,N,V_durationMs
hasSetupTimeMs
setupTimeMs
TQ,N,V_setupTimeMs
hasConnectionTimeMs
connectionTimeMs
TQ,N,V_connectionTimeMs
featuresCount
TQ,R,N
T^I,R,N
hasEndReason
endReason
TQ,N,V_endReason
hasFaceTimeTransportType
TI,N,V_faceTimeTransportType
hasTelephonyTransportType
telephonyTransportType
TI,N,V_telephonyTransportType
hasProviderErrorCode
providerErrorCode
Tq,N,V_providerErrorCode
hasIsRelay
isRelay
TB,N,V_isRelay
hasProviderEndedReason
providerEndedReason
Tq,N,V_providerEndedReason
hasHasStartedConnecting
hasStartedConnecting
TB,N,V_hasStartedConnecting
hasIdsLinkType
idsLinkType
Ti,N,V_idsLinkType
relayDeviceRouteChanges
T@"NSMutableArray",&,N,V_relayDeviceRouteChanges
CSDIDSLinkTypeNone
CSDIDSLinkTypeMagnet
CSDIDSLinkTypeInfraWifi
CSDIDSLinkTypeQuickRelayWiFi
CSDIDSLinkTypeQuickRelayWWAN
CSDIDSLinkTypeUnknown
CSDIDSLinkTypeIPSec
CSDIDSLinkTypeSPP
(unknown: %i)
IMDaemonDidConnectNotification
IMAVCore
IMAVChatStateChangedNotification
IMAVChatParticipantReceivedFirstFrameNotification
IMAVChatParticipantInvitationDeliveredNotification
IMAVChatParticipantCallInfoChangedNotification
IMAVChatConferenceIDChangedNotification
IMAVChatConferenceMetadataUpdatedNotification
IMAVChatMayRequireBreakBeforeMakeChangedNotification
IMAVChatParticipantInFrequencyChangedNotification
IMAVChatParticipantOutFrequencyChangedNotification
IMAVController
IMPreferredAccountForService
IMCore
IMAVChat
_NSStringDescriptionForIMAVChatEndedReason
CALL_FAILED_NO_NETWORK_CONNECTION_TITLE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_NETWORK_WIFI_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WLAN_MESSAGE
CALL_FAILED_NO_LOCAL_WLAN_MESSAGE
ALERT_VIDEO_FAILED_NO_LOCAL_WIFI_MESSAGE
CALL_FAILED_NO_LOCAL_WIFI_MESSAGE
ALERT_VIDEO_FAILED_TITLE
CALL_FAILED_TITLE
ALERT_VIDEO_FAILED_BAD_NONCE_TIMESTAMP
CALL_FAILED_BAD_NONCE_TIMESTAMP
ALERT_VIDEO_FAILED_UPDATE_LOCATION_MESSAGE
CALL_FAILED_UPDATE_LOCATION_MESSAGE
ALERT_VIDEO_FAILED_REGION_INFO_INSUFFICIENT
CALL_FAILED_REGION_INFO_INSUFFICIENT
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NUMBER
ALERT_VIDEO_FAILED_REMOTE_INCOMPATIBLE_MESSAGE_%@_NAME
ALERT_VIDEO_NOT_AVAILABLE_TITLE
CALL_NOT_AVAILABLE_TITLE
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NUMBER
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NUMBER
ALERT_VIDEO_FAILED_NOT_AVAILABLE_MESSAGE_%@_NAME
CALL_FAILED_%@_NOT_AVAILABLE_MESSAGE_NAME
provider
T@"CXProvider",&,N,V_provider
cachedChats
T@"NSMutableOrderedSet",&,N,V_cachedChats
faceTimeDemuxerDelegate
T@"<CSDFaceTimeProviderDelegateManagerDelegate>",W,N,V_faceTimeDemuxerDelegate
callerID
T@"NSString",C,N,V_callerID
@"<CSDAVCSession>"32@?0@"NSString"8@"<CSDAVCSessionDelegate>"16@"NSObject<OS_dispatch_queue>"24
<%@ %p UUID=%@ groupUUID=%@ state=%ld isLocallyCreated=%d participantHandles=%@ activeRemoteParticipants=%@>
Tq,N,V_state
participantHandles
T@"NSSet",C,N,V_participantHandles
activeRemoteParticipants
T@"NSSet",C,N,V_activeRemoteParticipants
idsSession
T@"CSDIDSGroupSession",R,N,V_idsSession
avcSession
T@"<CSDAVCSession>",&,N,V_avcSession
localParticipantIdentifier
T@"NSString",R,C,N
avcSessionCreationBlock
T@?,C,N,V_avcSessionCreationBlock
T@"<CSDConversationDelegate>",W,N,V_delegate
UUID
T@"NSUUID",R,N,V_UUID
groupUUID
T@"NSUUID",R,N,V_groupUUID
locallyCreated
TB,R,N,GisLocallyCreated,V_locallyCreated
tuConversation
T@"TUConversation",R,C,N
uplinkMuted
TB,N,GisUplinkMuted
relayCallDataSource
T@"CSDRelayCallDataSource",&,N,V_relayCallDataSource
mockCallDataSource
T@"CSDMockCallDataSource",&,N,V_mockCallDataSource
providerCallDataSource
T@"CSDProviderCallDataSource",&,N,V_providerCallDataSource
callDataSources
T@"NSArray",C,N,V_callDataSources
T@"<TUCallContainerPrivate>",R,C,N
T@"CSDCallStateController",W,N,V_callStateController
com.apple.private.alloy.phonecontinuity
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
hasSupportsHolding
TB,N,V_supportsHolding
hasSupportsGrouping
TB,N,V_supportsGrouping
hasSupportsUngrouping
TB,N,V_supportsUngrouping
hasSupportsDTMF
TB,N,V_supportsDTMF
hasSupportsUnambiguousMultiPartyState
TB,N,V_supportsUnambiguousMultiPartyState
hasSupportsAddCall
TB,N,V_supportsAddCall
hasSupportsSendingToVoicemail
TB,N,V_supportsSendingToVoicemail
type
destinationID
service
uniqueProxyIdentifier
sourceIdentifier
wantsHoldMusic
dtmfKey
disconnectedReason
v32@?0@"NSString"8@16^B24
typeString
receivedMessageTypeString
dialRequest
T@"TUDialRequest",R,N
cannotBeAnswered
DTMFKey
TC,N
voicemail
TB,N,GisVoicemail
hardPauseDigitsState
shouldSuppressRingtone
needsManualInCallSounds
soundRegion
cannotRelayAudioOrVideoOnPairedDevice
expectedEndpointOnMessagingDevice
TB,N,GisExpectedEndpointOnMessagingDevice
callCapabilitiesState
T@"TUCallCapabilitiesState",&,N
emergency
TB,N,GisEmergency
TB,N,GisSOS,SsetSOS:
callModel
T@"TUCallModel",&,N
tuHandle
T@"TUHandle",&,N
tuProviders
T@"NSArray",&,N
video
TB,N,GisVideo
tuProvider
T@"TUCallProvider",&,N
displayContext
T@"TUCallDisplayContext",&,N
remoteUplinkMuted
TB,N,GisRemoteUplinkMuted
NoAction
IncomingCall
DialCall
CallDialed
AnswerCall
CallAnsweredElsewhere
CallDisconnected
PlayDTMFToneForKey
CallConnected
DisconnectCall
PullRelayingCalls
HoldCall
UnholdCall
GroupCall
UngroupCall
ResetWantsHoldMusic
SwapCalls
UpdateCallModel
DeviceUnavailable
EndActiveAndAnswer
EndHeldAndAnswer
DisconnectCurrentCallAndActivateHeld
DisconnectAllCalls
ResetState
HardPauseDigitsAvailability
SendHardPauseDigits
UpdateRemoteCallState
SuppressRingtone
RequestCallContext
CallStartedConnecting
PushHostedCalls
PullHostedCalls
PushRelayingCalls
UpdateCallContext
NeedsManualInCallSoundsChange
InvitationSent
HoldActiveAndAnswer
UpdateCallDisplayContext
SetUplinkMuted
UpdateRemoteUplinkMuted
UpdateSystemVolume
value
hasType
Ti,N,V_type
hasValue
T@"NSString",&,N,V_value
None
Generic
PhoneNumber
EmailAddress
com.apple.telephonyutilities.callservicesd.FaceTimeProvider
backingCallSourceIdentifier
T@"NSString",R,C,N,V_backingCallSourceIdentifier
backingCallSource
T@"CXCallSource",&,N,V_backingCallSource
displayCallSourceIdentifier
T@"NSString",C,N,V_displayCallSourceIdentifier
mergedCallUpdate
T@"CXCallUpdate",&,N,V_mergedCallUpdate
pauseDigitsQueue
T@"CSDPauseDigitsQueue",&,N,V_pauseDigitsQueue
TB,N,GisVideo,V_video
conversationGroupUUID
T@"NSUUID",&,N,V_conversationGroupUUID
proxyAVAudioSession
T@"AVAudioSession",R,N
providerCallDelegate
T@"<CSDProviderCallDelegate>",W,N,V_providerCallDelegate
held
TB,N,GisHeld,V_held
ttyType
Ti,N,V_ttyType
callGroupUUID
T@"NSUUID",C,N,V_callGroupUUID
TB,N,V_sendingVideo
underlyingUplinkMuted
TB,N,GisUnderlyingUplinkMuted,V_underlyingUplinkMuted
failureContext
T@"CXCallFailureContext",&,N,V_failureContext
com.apple.request.hipuncap
gk-invitation-break-before-make-timeout
StoreDemoMode
com.apple.demo-settings
RetailDemoNotification
CALL_ENDED
CALL_ENDED_DEMO_EXPLANATION
callDurationLimitTimer
T@"NSTimer",&,V_callDurationLimitTimer
audioMutedForHoldMusic
TB,N,GisAudioMutedForHoldMusic,V_audioMutedForHoldMusic
requestCLTMThrottleUncapToken
Ti,N,V_requestCLTMThrottleUncapToken
callCenter
T@"TUCallCenter",R,N
T@"<TUCallContainerPrivate>",R,N
wantsBreakBeforeMake
breakBeforeMakeTimeout
Td,R,N
com.apple.telephonyutilities.callservicesd.statusbarmanager
v12@?0B8
deviceSupported
TB,R,N,GisDeviceSupported
resolver
T@"<CSDStatusBarResolver>",&,N,V_resolver
assertion
T@"SBSStatusBarStyleOverridesAssertion",&,N,V_assertion
applicationStateMonitor
T@"BKSApplicationStateMonitor",&,N,V_applicationStateMonitor
timestamp
bundle_id
failure_reason
action_type
provider_was_reset
hasTimestamp
TQ,N,V_timestamp
hasBundleId
bundleId
T@"NSString",&,N,V_bundleId
hasFailureReason
failureReason
TQ,N,V_failureReason
hasActionType
actionType
TQ,N,V_actionType
hasProviderWasReset
providerWasReset
TB,N,V_providerWasReset
T@"<CSDIDSGroupSessionProviderDelegate>",W,N
TI,R,N
destination
session
T@"IDSGroupSession",&,N,V_session
groupID
T@"NSString",R,C,N,V_groupID
participantDestinationIDs
T@"NSArray",R,C,N,V_participantDestinationIDs
account
T@"IDSAccount",R,N,V_account
T@"<CSDIDSGroupSessionProviderDelegate>",W,N,V_delegate
data
T@"NSData",&,N,V_data
completion
T@?,C,N,V_completion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDRelayIDSDualSession.m
Use another initializer instead
forceBTClassic
non-nil
remoteDestination
T@"IDSDestination",&,N,V_remoteDestination
remoteDevice
T@"IDSDevice",&,N,V_remoteDevice
pendingData
T@"NSMutableArray",R,N,V_pendingData
identifiers
T@"NSMutableSet",R,N,V_identifiers
blocksPendingTransportAvailability
T@"NSMutableArray",R,N,V_blocksPendingTransportAvailability
hasStarted
TB,N,V_hasStarted
hasReceivedAccept
TB,N,V_hasReceivedAccept
acceptPayloadData
T@"NSData",C,N,V_acceptPayloadData
T@"<CSDRelayIDSDualSessionDelegate>",W,N,V_delegate
allIdentifiers
T@"NSArray",R,C,N
com.apple.telephonyutilities.callservicesd.thumpercapabilitiesmonitor
NPSDomainAccessor
NanoPreferencesSync
thumperCallingAllowedOnDefaultPairedDevice
ThumperWasPreviouslySupported
ThumperWasPreviouslyEnabled
PreviousDefaultPairedDeviceUniqueID
uniqueIDOverride
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumpersupported
THUMPER_CALLING
NOT_NOW
TURN_ON
MAKE_RECEIVE_THUMPER_CELLULAR_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_FOR_CARRIER_%@
MAKE_RECEIVE_THUMPER_CELLULAR
MAKE_RECEIVE_THUMPER
v16@?0@"IMUserNotification"8
com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumperenabled
THUMPER_EMERGENCY_ADDRESS_INFO_TITLE
THUMPER_EMERGENCY_ADDRESS_INFO_MESSAGE
PREFERENCES_BUTTON_TITLE
PSFaceTimeSettingsDetail
Preferences
domainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
T@"<CSDThumperCapabilitiesMonitorDataSource>",W,N,V_dataSource
com.apple.telephonyutilities.callservicesd.accountscontroller
    faceTimeIDMatchesAppleID: %@
    faceTimeAudioAvailability: %ld
    faceTimeVideoAvailability: %ld
    outgoingCallerID: %@
IMStringIsPhoneNumber
IMFoundation
outgoingCallerID
T@"NSString",C,N,V_outgoingCallerID
T@"NSObject<CSDAccountsControllerDelegate>",N,V_delegate
faceTimeIDMatchesAppleID
faceTimeAudioAvailable
TB,R,N,GisFaceTimeAudioAvailable
faceTimeVideoAvailable
TB,R,N,GisFaceTimeVideoAvailable
T@"<CSDIDSDualSessionProviderDelegate>",W,N
shouldUseSocketForTransport
socket
initialLinkType
audioEnabled
TB,N,GisAudioEnabled
invitationTimeout
T@"IDSSession",R,N,V_session
T@"<CSDIDSDualSessionProviderDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDPauseDigits.m
%s is not available. Use a designated initializer instead.
-[CSDPauseDigits init]
<%@ %p digits=%@ isHardPause=%d>
digits
T@"NSString",C,N,V_digits
hardPause
TB,N,GisHardPause,V_hardPause
tuLabeledHandle
T@"TULabeledHandle",R,N
{?=ii}16@?0r^^v8
PreventDetachAfterEmergencyCallTimer
v32@?0Q8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v16@?0@?<v@?>8
T@"<CSDEmergencyCallbackCapabilitiesDelegate>",W,N
emergencyCallbackPossible
TB,R,N,GisEmergencyCallbackPossible
TB,N,GisEmergencyCallbackPossible,V_emergencyCallbackPossible
preventDetachAfterEmergencyCallTimeoutBlock
T@?,C,N,V_preventDetachAfterEmergencyCallTimeoutBlock
preventDetachAfterEmergencyCallTimeoutDeterminationHandler
T@?,C,N,V_preventDetachAfterEmergencyCallTimeoutDeterminationHandler
dispatchAfterHandler
T@?,C,N,V_dispatchAfterHandler
dispatchCancelHandler
T@?,C,N,V_dispatchCancelHandler
T@"<CSDEmergencyCallbackCapabilitiesDelegate>",W,N,V_delegate
com.apple.telephonyutilities.callservicesd.callprovidermanagerxpcserver
v16@?0@"CSDClient"8
com.apple.telephonyutilities.callservicesdaemon.callprovidermanager
v24@?0@"CSDClient"8@"<TUCallProviderManagerXPCClient>"16
clientManager
T@"CSDClientManager",R,N,V_clientManager
providerManager
T@"CSDCallProviderManager",R,N,V_providerManager
com.apple.private.alloy.facetime.video
@"CSDAVConference"8@?0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDIDSChat.m
Cannot create an incoming chat with an outgoing session: %@
Cannot create an outgoing chat with an incoming session: %@
disableFaceTimeKeyExchange
T@"<CSDIDSChatDelegate>",W,N
T@"NSUUID",R,N
sessionUUID
T@"NSString",R,N
T@"TUHandle",R,N
hasSentInvitation
outgoing
TB,R,N,GisOutgoing
TB,R,N,GisVideo
mayRequireBreakBeforeMake
videoStreamToken
crossDeviceIdentifier
remoteFromID
T@"CXCallFailureContext",R,N
relaying
TB,N,GisRelaying
TB,N,GisRemoteMomentsAvailable
conference
T@"<CSDAVConference>",&,N,V_conference
T@"CSDExternalIDSDualSession",R,N,V_session
shouldStartAudioPaused
TB,N,V_shouldStartAudioPaused
shouldStartVideoPaused
TB,N,V_shouldStartVideoPaused
TB,N,V_mayRequireBreakBeforeMake
TB,N,V_hasSentInvitation
dateReceivedFirstRemoteFrame
T@"NSDate",&,N,V_dateReceivedFirstRemoteFrame
T@"NSDictionary",R,C,N,V_remoteInviteDictionary
invitedPushTokens
T@"NSArray",C,N,V_invitedPushTokens
inviteCompletion
T@?,C,N,V_inviteCompletion
conferenceCreationBlock
T@?,C,N,V_conferenceCreationBlock
T@"<CSDIDSChatDelegate>",W,N,V_delegate
T@"TUHandle",R,N,V_handle
TB,R,N,GisOutgoing,V_outgoing
TB,R,N,GisVideo,V_video
TB,N,GisRelaying,V_relaying
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
TB,N,GisRemoteMomentsAvailable,V_remoteMomentsAvailable
Unknown
Invite
SenderMuteUplink
protoCallModelState
protoService
protoWantsHoldMusic
protoCannotBeAnswered
protoDTMFKey
protoDisconnectedReason
OBSOLETE_conferenceIdentifier
protoVoicemail
callerNameFromNetwork
protoCall
hardPauseDigits
hardPauseState
receivedMessageType
protoProtocolVersion
protoShouldSuppressRingtone
dummyPayload
hostCallCreationTime
messageSendTime
protoNeedsManualInCallSounds
protoCannotRelayAudioOrVideoOnPairedDevice
protoExpectedEndpointOnMessagingDevice
contactIdentifier
protoCallCapabilitiesState
protoSoundRegion
protoEmergency
otherUniqueProxyIdentifiers
protoCallModel
protoSOS
providers
protoDisplayContext
inviteData
protoProvider
protoVideo
protoUplinkMuted
protoRemoteUplinkMuted
systemVolume
hasUniqueProxyIdentifier
T@"NSString",&,N,V_uniqueProxyIdentifier
hasDestinationID
T@"NSString",&,N,V_destinationID
hasSourceIdentifier
T@"NSString",&,N,V_sourceIdentifier
hasProtoCallModelState
T@"CSDMessagingCallModelState",&,N,V_protoCallModelState
hasProtoService
TI,N,V_protoService
hasProtoWantsHoldMusic
TB,N,V_protoWantsHoldMusic
hasProtoCannotBeAnswered
TB,N,V_protoCannotBeAnswered
hasProtoDTMFKey
T@"NSData",&,N,V_protoDTMFKey
hasProtoDisconnectedReason
TI,N,V_protoDisconnectedReason
hasOBSOLETEConferenceIdentifier
oBSOLETEConferenceIdentifier
T@"NSString",&,N,V_oBSOLETEConferenceIdentifier
hasProtoVoicemail
TB,N,V_protoVoicemail
hasCallerNameFromNetwork
T@"NSString",&,N,V_callerNameFromNetwork
protoCalls
T@"NSMutableArray",&,N,V_protoCalls
hasHardPauseDigits
T@"NSString",&,N,V_hardPauseDigits
hasHardPauseState
TI,N,V_hardPauseState
hasReceivedMessageType
Ti,N,V_receivedMessageType
hasProtoProtocolVersion
TI,N,V_protoProtocolVersion
hasProtoShouldSuppressRingtone
TB,N,V_protoShouldSuppressRingtone
hasDummyPayload
T@"NSData",&,N,V_dummyPayload
hasHostCallCreationTime
Td,N,V_hostCallCreationTime
hasMessageSendTime
Td,N,V_messageSendTime
hasProtoNeedsManualInCallSounds
TB,N,V_protoNeedsManualInCallSounds
hasProtoCannotRelayAudioOrVideoOnPairedDevice
TB,N,V_protoCannotRelayAudioOrVideoOnPairedDevice
hasProtoExpectedEndpointOnMessagingDevice
TB,N,V_protoExpectedEndpointOnMessagingDevice
hasContactIdentifier
T@"NSString",&,N,V_contactIdentifier
hasProtoCallCapabilitiesState
T@"CSDMessagingCallCapabilitiesState",&,N,V_protoCallCapabilitiesState
hasProtoSoundRegion
TI,N,V_protoSoundRegion
hasProtoEmergency
TB,N,V_protoEmergency
T@"NSMutableArray",&,N,V_otherUniqueProxyIdentifiers
hasProtoCallModel
T@"CSDMessagingCallModel",&,N,V_protoCallModel
hasProtoSOS
TB,N,V_protoSOS
T@"NSMutableArray",&,N,V_providers
hasProtoDisplayContext
T@"CSDMessagingCallDisplayContext",&,N,V_protoDisplayContext
hasInviteData
T@"CSDMessagingAVConferenceInviteData",&,N,V_inviteData
hasProtoProvider
T@"CSDMessagingCallProvider",&,N,V_protoProvider
hasProtoVideo
TB,N,V_protoVideo
hasProtoUplinkMuted
TB,N,V_protoUplinkMuted
hasProtoRemoteUplinkMuted
TB,N,V_protoRemoteUplinkMuted
hasSystemVolume
Tf,N,V_systemVolume
%@.%@.%p
T@"<CSDIncomingCallFilterDataSourceDelegate>",W,N
T@"<CSDIncomingCallFilterDataSourceDelegate>",W,N,V_delegate
identifier
localizedName
bundleURLString
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
ringtoneSoundURLString
originalRingtoneSoundURLString
handoffIdentifier
protoSupportedHandleType
emergencyLabeledHandles
supportsRecents
hasIdentifier
T@"NSString",&,N,V_identifier
hasLocalizedName
T@"NSString",&,N,V_localizedName
hasBundleURLString
T@"NSString",&,N,V_bundleURLString
hasMaximumCallGroups
TI,N,V_maximumCallGroups
hasMaximumCallsPerCallGroup
TI,N,V_maximumCallsPerCallGroup
hasSupportsAudioOnly
TB,N,V_supportsAudioOnly
hasSupportsAudioAndVideo
TB,N,V_supportsAudioAndVideo
hasSupportsEmergency
TB,N,V_supportsEmergency
hasSupportsVoicemail
TB,N,V_supportsVoicemail
hasRingtoneSoundURLString
T@"NSString",&,N,V_ringtoneSoundURLString
hasOriginalRingtoneSoundURLString
T@"NSString",&,N,V_originalRingtoneSoundURLString
handoffIdentifiers
T@"NSMutableArray",&,N,V_handoffIdentifiers
protoSupportedHandleTypesCount
protoSupportedHandleTypes
T@"NSMutableArray",&,N,V_emergencyLabeledHandles
hasSupportsRecents
TB,N,V_supportsRecents
    dialingIDSDevice: %@
@"CSDMessagingRelayMessage"8@?0
v20@?0i8^B12
v20@?0B8@"NSDictionary"12
sessionMessenger
T@"CSDRelayIDSSessionMessenger",&,N,V_sessionMessenger
pairedDeviceMessenger
T@"CSDRelayPairedDeviceMessenger",&,N,V_pairedDeviceMessenger
dialingIDSDevice
T@"IDSDevice",&,N,V_dialingIDSDevice
T@"<CSDRelayMessagingControllerDelegate>",W,N,V_delegate
clientMessagingDelegate
T@"<CSDRelayMessagingControllerClientMessagingDelegate>",W,N,V_clientMessagingDelegate
hostMessagingDelegate
T@"<CSDRelayMessagingControllerHostMessagingDelegate>",W,N,V_hostMessagingDelegate
commonMessagingDelegate
T@"<CSDRelayMessagingControllerCommonMessagingDelegate>",W,N,V_commonMessagingDelegate
relayInviteDictionary
faceTimeInviteDictionary
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.telephonyutilities.callservicesd.kFZACAppBundleIdentifierLaunchNotification
com.apple.distnoted.matching
com.apple.callhistory.save.distributed.notification
com.apple.telephonyutilities.callservicesdaemon.app-installed
com.apple.telephonyutilities.callservicesdaemon.app-uninstalled
com.apple.CTTelephonyCenter
com.apple.telephonyutilities.callservicesd.reportingcontroller
com.apple.telephonyutilities.callservicesdaemon.connectionrequest
com.apple.language.changed
callStateMonitor
T@"CSDCallStateMonitor",&,N,V_callStateMonitor
T@"CSDRelayMessagingController",&,N,V_relayMessagingController
relayClientController
T@"CSDRelayClientController",&,N,V_relayClientController
relayHostController
T@"CSDRelayHostController",&,N,V_relayHostController
relayCommonController
T@"CSDRelayCommonController",&,N,V_relayCommonController
callDirectoryManager
T@"CSDCallDirectoryManager",&,N,V_callDirectoryManager
voipApplicationController
T@"CSDVoIPApplicationController",&,N,V_voipApplicationController
momentsController
T@"CSDMomentsController",&,N,V_momentsController
signalHandlerDispatchSources
T@"NSMutableArray",&,N,V_signalHandlerDispatchSources
orientationMonitor
T@"CSDOrientationMonitor",&,N,V_orientationMonitor
proximityController
T@"CSDProximityController",&,N,V_proximityController
audioController
T@"CSDAudioController",&,N,V_audioController
statusBarManager
T@"CSDStatusBarManager",&,N,V_statusBarManager
availability
hasAvailability
Ti,N,V_availability
hasPhotoRequestSuccessCount
TI,N,V_photoRequestSuccessCount
hasPhotoRequestFailureCount
TI,N,V_photoRequestFailureCount
hasMedianRequestDuration
Td,N,V_medianRequestDuration
hasMeanRequestDuration
Td,N,V_meanRequestDuration
CSDMomentsAvailabilityUnknown
CSDMomentsAvailabilityUnavailable
CSDMomentsAvailabilityRestricted
CSDMomentsAvailabilityAvailable
@"<CSDIDSDualSessionProvider>"24@?0@"IDSSession"8@"NSObject<OS_dispatch_queue>"16
@"<CSDIDSChat>"40@?0@"CSDExternalIDSDualSession"8@"TUHandle"16B24@"NSDictionary"28B36
CADisplay
QuartzCore
T@"<CSDIDSProviderDelegateCapabilities>",R,N,V_capabilities
mutableChats
T@"NSMutableOrderedSet",R,N,V_mutableChats
providerDidBegin
T@?,C,N,V_providerDidBegin
incomingSessionProviderGenerator
T@?,C,N,V_incomingSessionProviderGenerator
incomingChatGenerator
T@?,C,N,V_incomingChatGenerator
SKEBlob
mediaBlob
callInfoBlob
hasSKEBlob
sKEBlob
T@"NSData",&,N,V_sKEBlob
hasMediaBlob
T@"NSData",&,N,V_mediaBlob
hasCallInfoBlob
T@"NSData",&,N,V_callInfoBlob
CSDIDSDualSessionStateChangedNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDIDSDualSession.m
-[CSDIDSDualSession init]
%@ isInitiator=%d state=%d remoteProtocolVersion=%@>
remoteProtocolVersionNumber
T@"NSNumber",&,N,V_remoteProtocolVersionNumber
Ti,N,V_endedReason
sessionProvider
T@"<CSDIDSDualSessionProvider>",R,N,V_sessionProvider
T@"<CSDIDSDualSessionDelegate>",W,N,V_delegate
underlyingErrorCode
initiator
TB,R,N,GisInitiator,V_initiator
transport
T@"CSDIDSTransport",R,N
remoteProtocolVersion
com.apple.telephonyutilities.callservicesd.awdreporter
v20@?0I8@"PBCodable"12
@"PBCodable"8@?0
v12@?0I8
kCallSubType
kCallSubTypeWifi
kCallSubTypeVoLTE
kCallSubTypeTelephony
serverConnection
T@"AWDServerConnection",&,N,V_serverConnection
relayDeviceRouteChangesByCallUUID
T@"NSMutableDictionary",R,N,V_relayDeviceRouteChangesByCallUUID
T@"<CSDReporterDataSource>",W,N,V_dataSource
T@"<CSDRelayIDSMessengerDelegate>",W,N,V_delegate
** TUAssertion failure: %@
Use -initWithDictionary:
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDThumperAccount.m
<%@ %p accountID=%@ primaryDeviceID=%@ phoneNumber=%@ phoneNumberMCC=%@ phoneNumberISOCountryCode=%@ phoneNumberURI=%@ availableDeviceSlots=%ld allowedSecondaryDeviceIDs=%@
@"NSString"16@?0@"NSString"8
phoneNumberMCCToISOCountryCodeTransformBlock
mutableAllowedSecondaryDeviceIDs
T@"NSMutableSet",&,N,V_mutableAllowedSecondaryDeviceIDs
accountID
T@"NSString",C,N,V_accountID
primaryDeviceID
T@"NSString",C,N,V_primaryDeviceID
phoneNumber
T@"NSString",C,N,V_phoneNumber
phoneNumberMCC
T@"NSString",C,N,V_phoneNumberMCC
phoneNumberISOCountryCode
T@"NSString",C,N,V_phoneNumberISOCountryCode
phoneNumberURI
T@"NSString",C,N,V_phoneNumberURI
availableDeviceSlots
Tq,N,V_availableDeviceSlots
allowedSecondaryDeviceIDs
T@"NSSet",R,N
B16@?0@"IDSAccount"8
@"<CSDIDSDualSessionProvider>"40@?0@"IDSAccount"8@"NSSet"16@"NSDictionary"24@"NSObject<OS_dispatch_queue>"32
@"<CSDIDSChat>"40@?0@"CSDExternalIDSDualSession"8@"NSUUID"16@"TUHandle"24B32B36
T@"<CSDFaceTimeIDSProviderDelegateCapabilities>",R,N,V_capabilities
serverBag
T@"<CSDFaceTimeIDSProviderDelegateServerBag>",&,N,V_serverBag
isAccountActive
T@?,C,N,V_isAccountActive
outgoingSessionProviderGenerator
T@?,C,N,V_outgoingSessionProviderGenerator
outgoingChatGenerator
T@?,C,N,V_outgoingChatGenerator
CSDFileTransferringMetadataKeyName
CSDFileTransferringMetadataKeyIsDirectory
CSDFileTransferringMetadataKeyUserData
com.apple.telephonyutilities.callservicesd.csdfiletransfercontroller
v16@?0@"NSURL"8
directory
file
v16@?0@"IMFileCopier"8
T@"<CSDFileTransferringDelegate>",W,N
T@"IDSService",&,N,V_service
clientFileURLByIdentifier
T@"NSMutableDictionary",R,N,V_clientFileURLByIdentifier
temporaryFileURLByClientFileURL
T@"NSMutableDictionary",R,N,V_temporaryFileURLByClientFileURL
T@"<CSDFileTransferringDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDCallSourceFetcher.m
%s is not available. Use another initializer instead.
-[CSDCallSourceFetcher init]
v24@?0@"NSArray"8@"NSError"16
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
timeout
Td,N,V_timeout
pendingCompletions
T@"NSMutableDictionary",&,N,V_pendingCompletions
T@"<CSDCallSourceFetcherDataSource>",W,N,V_dataSource
iPod
IPOD
iPad
IPAD
iPhone
IPHONE
THUMPER_SERVICE_NAME
ENTER_CODE_FOR_%@
ALLOW
CANCEL
PrimaryDeviceNotification
THUMPER_PUSH_HANDLER_CONSENT_ALERT_MESSAGE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_TITLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_ENABLE
THUMPER_PUSH_HANDLER_CONSENT_ALERT_CANCEL
SecondaryDeviceNotification
RECEIVE_THUMPER_CALLS_FROM_PHONE_NUMBER_ENTER_CODE_%@_%@
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_TITLE
THUMPER_PIN_EXCHANGE_REQUEST_FAILED_MESSAGE
thumperCallingAllowedOnDefaultPairedDeviceDefault
TB,N,V_thumperCallingAllowedOnDefaultPairedDeviceDefault
protoStatus
protoConferenced
protoTimeConnected
protoOutgoing
protoHasSentInvitation
hasProtoStatus
TI,N,V_protoStatus
hasProtoConferenced
TB,N,V_protoConferenced
hasProtoTimeConnected
Td,N,V_protoTimeConnected
hasProtoOutgoing
TB,N,V_protoOutgoing
hasProtoHasSentInvitation
TB,N,V_protoHasSentInvitation
kCMSessionAudioMode_RemoteVoiceChat
relayDelegate
T@"<CSDRelayCallDelegate>",W,N,V_relayDelegate
T@"TUHandle",&,N,V_handle
callStatus
Ti,N,V_callStatus
backingProvider
T@"TUCallProvider",&,N,V_backingProvider
TB,N,GisOutgoing,V_outgoing
TB,N,GisVoicemail,V_voicemail
TB,N,GisEmergency,V_emergency
TB,N,GisSOS,SsetSOS:,V_sos
T@"NSString",C,N,V_callerNameFromNetwork
TB,N,V_needsManualInCallSounds
T@"TUCallDisplayContext",C,N,V_displayContext
cannotRelayAudioOrVideo
TB,N,V_cannotRelayAudioOrVideo
TQ,N,V_initialLinkType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDPauseDigitsQueue.m
-[CSDPauseDigitsQueue init]
<%@ %p
 baseDestinationID=%@
 originalPauseDigitsString=%@
 pauseDigits=%@
baseDestinationID
T@"NSString",C,N,V_baseDestinationID
originalPauseDigitsString
T@"NSString",C,N,V_originalPauseDigitsString
pauseDigits
T@"NSMutableArray",&,N,V_pauseDigits
T@"<CSDPauseDigitsQueueDelegate>",W,N,V_delegate
nextPauseDigits
T@"CSDPauseDigits",R,N
hasQueuedHardPauseDigits
%@ entitlementCapabilities=%@
connection
T@"NSXPCConnection",R,N
entitledCapabilities
T@"NSSet",R,C,N,V_entitledCapabilities
TTYUtilities
/System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework
transportMethod
utilityProvider
T@"TTYUtilities",R,N
T@"TUCallProvider",R,C,N
supportedHandleTypes
T@"NSSet",C,N
emergencyTULabeledHandles
T@"NSArray",C,N
com.apple.telephonyutilities.callservicesd.pairedidsdevicemessenger
personNameComponents
T@"NSPersonNameComponents",R,C,N
com.apple.telephonyutilities.callservicesdaemon.mockcalls
-[CSDMockCallDataSource updateMockCallWithProxyCall:]
-[CSDMockCallDataSource confirmAllPendingMessagesReceivedWithReply:]
T@"CSDClientManager",&,N,V_clientManager
CSDIDSInitialLinkTypeKey
sanitizedCallUpdate
T@"CXCallUpdate",R,C,N
PHPhotoLibrary
PHAssetCreationRequest
PHAssetResourceCreationOptions
CallState
status
bundleID
providerIdentifier
providerContext
hostedOnCurrentDevice
endpointOnCurrentDevice
callStart
callStop
callForegrounded
callBackgrounded
callStateContext
T@"NSDictionary",&,N,V_callStateContext
visibilityContext
T@"NSDictionary",&,N,V_visibilityContext
eventBlock
T@?,C,N,V_eventBlock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDFaceTimeProviderDelegate.m
-[CSDFaceTimeProviderDelegate init]
FACETIME_SERVICE
v20@?0@"NSArray"8B16
contactsDataProvider
T@"TUContactsDataProvider",R,N,V_contactsDataProvider
conversationManager
T@"CSDConversationManager",R,N,V_conversationManager
conversationManagerXPCServer
T@"CSDConversationManagerXPCServer",R,N,V_conversationManagerXPCServer
faceTimeIDSProviderDelegate
T@"CSDFaceTimeIDSProviderDelegate",R,N,V_faceTimeIDSProviderDelegate
faceTimeIMAVProviderDelegate
T@"CSDFaceTimeIMAVProviderDelegate",R,N,V_faceTimeIMAVProviderDelegate
faceTimeConversationProviderDelegate
T@"CSDFaceTimeConversationProviderDelegate",R,N,V_faceTimeConversationProviderDelegate
T@"CXProvider",R,N,V_provider
payload
T@"NSDictionary",C,N,V_payload
T@"BKSProcessAssertion",&,N,V_assertion
-[CSDVoIPApplication init] is not supported. Use -[CSDVoIPApplication initWithBundleIdentifier:] instead
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDVoIPApplication.m
<%@ %p bundleIdentifier=%@ environment=%@ client=%@ isRunning=%d token=%@ pendingMessageContextCount=%lu>
UIBackgroundModes
voip
T@"NSString",C,N,V_bundleIdentifier
token
T@"NSData",C,N,V_token
pendingMessageContexts
T@"NSMutableArray",&,N,V_pendingMessageContexts
running
TB,N,GisRunning,V_running
environment
T@"NSString",C,N,V_environment
client
T@"CSDClient",&,N,V_client
hasVoIPEntitlement
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
phoneticRepresentation
hasNamePrefix
T@"NSString",&,N,V_namePrefix
hasGivenName
T@"NSString",&,N,V_givenName
hasMiddleName
T@"NSString",&,N,V_middleName
hasFamilyName
T@"NSString",&,N,V_familyName
hasNameSuffix
T@"NSString",&,N,V_nameSuffix
hasNickname
T@"NSString",&,N,V_nickname
hasPhoneticRepresentation
T@"CSDMessagingPersonNameComponents",&,N,V_phoneticRepresentation
v16@?0i8I12
FACETIME_VIDEO_DURATION_PREAMBLE
FACETIME_AUDIO_DURATION_PREAMBLE
DURATION_PREAMBLE
T@"<CSDStatusBarResolverDelegate>",W,N
T@"CSDStatusBarDescriptor",R,N
processObserver
T@"<CSDProcessObserverProtocol>",R,N,V_processObserver
notifyObserver
T@"<TUNotifyObserver>",R,N,V_notifyObserver
callDurationUpdateTimer
T@"NSTimer",&,N,V_callDurationUpdateTimer
T@"CSDStatusBarDescriptor",&,N,V_resolvedDescriptor
inCallServiceWantsStatusBarSuppression
inCallServiceWantsStatusBarSuppressionState
TQ,N,V_inCallServiceWantsStatusBarSuppressionState
inCallServiceApplicationState
TI,N,V_inCallServiceApplicationState
T@"<CSDStatusBarResolverDelegate>",W,N,V_delegate
CSDRelayConferenceLocalFrequencyChanged
CSDRelayConferenceRemoteFrequencyChanged
CSDRelayConferenceMutedChanged
CSDRelayConferenceSendingAudioChanged
CSDRelayConferenceConnectionWillCloseNotification
CSDRelayConferenceConnectionDidCloseNotification
com.apple.telephonyutilities
Conference cleaned up before handling a didStart with error: %@
T@"CSDRelayConferenceInterface",R,N
conferenceConnections
T@"NSMutableArray",&,N,V_conferenceConnections
conferencesAwaitingConnectionClose
T@"NSMutableSet",&,N,V_conferencesAwaitingConnectionClose
activeConference
T@"<CSDAVConference>",R,N
closeConnectionTimeout
Td,N,V_closeConnectionTimeout
prepareToStopTimeout
Td,N,V_prepareToStopTimeout
CallServices
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDSandboxExtensionDirectory.m
-[CSDSandboxExtensionDirectory init]
fileManager
T@"NSFileManager",&,N,V_fileManager
T@"NSURL",&,N,V_URL
name
CSDPinExchangeCompressedDataKey
CSDPinExchangeActionKey
CSDPinExchangePinKey
CSDPinExchangeActionRequestPIN
CSDPinExchangeActionSendPIN
CSDPinExchangeActionOneTimeReminder
CSDPinExchangeActionApproved
CSDPinExchangeActionUnapproved
CSDPinExchangeActionCancelledPrimary
CSDPinExchangeActionCancelledSecondary
v20@?0B8@"NSString"12
com.apple.telephonyutilities.callservicesd.pinexchangeerror
INCORRECT_PIN_ENTERED
THUMPER_MISMATCHED_ACCOUNTS
MAX_SLOTS_FILLED
pendingCodesToDevicesForApproval
T@"NSMutableDictionary",&,V_pendingCodesToDevicesForApproval
pinExchangeDelegate
T@"<CSDPinExchangeDelegate>",&,V_pinExchangeDelegate
outgoingPinRequestIdentifier
T@"NSString",&,V_outgoingPinRequestIdentifier
completion_time_ms
hasCompletionTimeMs
completionTimeMs
TQ,N,V_completionTimeMs
hasState
TI,N,V_state
TI,N,V_failureReason
com.apple.telephonyutilities.callservicesd.callcapabilities
com.apple.telephonyutilities.callservicesdaemon.callcapabilities
State: %@
Telephony capabilities: %@
Accounts controller: %@
Paired Host Device State: %@
v24@?0@"CSDClient"8@"<TUCallCapabilitiesXPCClient>"16
-[CSDCallCapabilities setWiFiCallingEnabled:]
-[CSDCallCapabilities setWiFiCallingRoamingEnabled:]
-[CSDCallCapabilities setVoLTECallingEnabled:]
-[CSDCallCapabilities setThumperCallingEnabled:]
-[CSDCallCapabilities setRelayCallingEnabled:]
-[CSDCallCapabilities setThumperCallingAllowed:onSecondaryDeviceWithID:]
-[CSDCallCapabilities setThumperCallingAllowedOnDefaultPairedDevice:]
-[CSDCallCapabilities setRelayCallingEnabled:forDeviceWithID:]
-[CSDCallCapabilities invalidateAndRefreshWiFiCallingProvisioningURL]
-[CSDCallCapabilities invalidateAndRefreshThumperCallingProvisioningURL]
-[CSDCallCapabilities requestPinFromPrimaryDevice]
-[CSDCallCapabilities cancelPinRequestFromPrimaryDevice]
disableSupportsPrimaryCalling
forceSupportsPrimaryCalling
telephony
disableSupportsBasebandCalling
forceSupportsBasebandCalling
disableSupportsCellularData
forceSupportsCellularData
disableDisplayingTelephonyCallSupport
forceDisplayingTelephonyCallSupport
disableDisplayingFaceTimeAudioCallSupport
forceDisplayingFaceTimeAudioCallSupport
disableDisplayingFaceTimeVideoCallSupport
forceDisplayingFaceTimeVideoCallSupport
disableCanEnableWiFiCalling
forceCanEnableWiFiCalling
disableCanEnableVoLTECalling
forceCanEnableVoLTECalling
disableCanEnableThumperCalling
forceCanEnableThumperCalling
q24@?0@"TUCloudCallingDevice"8@"TUCloudCallingDevice"16
relayCallingDisabled
relayCallingDisabledForDeviceID
pairedHostDeviceState
localThumperAccount
T@"CSDThumperAccount",R,N
T@"CSDCallCapabilities",R,N
xpcListener
T@"NSXPCListener",R,N,V_xpcListener
accountsController
T@"CSDAccountsController",R,N,V_accountsController
telephonyCallCapabilities
T@"CSDTelephonyCallCapabilities",R,N,V_telephonyCallCapabilities
thumperPushHandler
T@"CSDThumperPushHandler",R,N,V_thumperPushHandler
thumperPinExchangeController
T@"CSDPinExchangeController",R,N,V_thumperPinExchangeController
thumperCapabilitiesMonitor
T@"CSDThumperCapabilitiesMonitor",R,N,V_thumperCapabilitiesMonitor
relayService
T@"<CSDIDSService>",R,N,V_relayService
thumperService
T@"<CSDIDSService>",R,N,V_thumperService
T@"TUCallCapabilitiesState",&,N,V_state
T@"TUCallCapabilitiesState",&,N,V_pairedHostDeviceState
T@"TUCallCapabilitiesState",R,N
CSDCallMayRequireBreakBeforeMakeChangedNotification
CSDCallHasStartedOutgoingChangedNotification
CSDCallHasAudioInterruptionChangedNotification
CSDCallLocalPreviewStoppedNotification
CSDCallsWillEnterBackgroundNotification
CSDCallEnteredForegroundNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDCall.m
dialRequest is invalid: %@
SFCoordinatedAlertRequest
Sharing
v28@?0@"NSError"8B16@"NSDictionary"20
v16@?0q8
T@"TUDialRequest",&,N,V_dialRequest
dynamicDisplayContext
T@"TUDynamicCallDisplayContext",&,N,V_dynamicDisplayContext
faceTimeIDStatusRefreshed
TB,N,V_faceTimeIDStatusRefreshed
uplinkWasExplicitlyMuted
TB,N,V_uplinkWasExplicitlyMuted
T@"<CSDCallDelegate>",W,N,V_delegate
T@"CSDCallDataSource",W,N,V_dataSource
callStatusFromUnderlyingSource
hasStartedOutgoing
dateStartedOutgoing
T@"NSDate",&,N,V_dateStartedOutgoing
shouldOverrideCallStatus
callStatusFromOverride
isSendingAudio
TB,N,V_isSendingAudio
audioInterruptionProviderType
audioInterruptionOperationMode
hasAudioInterruption
TB,N,V_hasAudioInterruption
hasAudioFinished
TB,N,V_hasAudioFinished
handoffDynamicIdentifier
providerProcessIdentifier
cxCall
T@"CXCall",R,N
bytesOfDataUsed
Tq,N,V_bytesOfDataUsed
TQ,R,N,V_initialLinkType
relayClientTransport
T@"CSDIDSTransport",&,N,V_relayClientTransport
expectedRelayClientDestination
T@"IDSDestination",&,N,V_expectedRelayClientDestination
CSDRouteManagerPreferredRouteChangedNotification
com.apple.telephonyutilities.callservicesd.routemanager
AVSystemController_PickableRoutesDidChangeNotification
Celestial
AVSystemController_PreferredExternalRouteDidChangeNotification
AVSystemController_CarPlayIsConnectedDidChangeNotification
AVAudioSessionMediaServicesWereResetNotification
AVFoundation
PhoneCall
StarkCapability
AVSystemController
AVSystemController_CarPlayIsConnectedAttribute
T@"CSDRouteManager",R,N
audioRouteCollections
T@"NSDictionary",C,N,V_audioRouteCollections
carPlayDeviceConnected
TB,N,GisCarPlayDeviceConnected,V_carPlayDeviceConnected
automaticCarDNDStatus
T@"CARAutomaticDNDStatus",&,N,V_automaticCarDNDStatus
carModeActive
TB,N,GisCarModeActive,V_carModeActive
anyPreferredRouteAvailableForAnyCall
TB,R,N,GisAnyPreferredRouteAvailableForAnyCall
anyPreferredRouteAvailableAndActiveForAnyCall
TB,R,N,GisAnyPreferredRouteAvailableAndActiveForAnyCall
carPlayRouteAvailable
TB,R,N,GisCarPlayRouteAvailable
anyVehicleRouteAvailableForAnyCall
TB,R,N,GisAnyVehicleRouteAvailableForAnyCall
anyRouteAvailableWithOtherConnectedDevicesForAnyCall
TB,R,N,GisAnyRouteAvailableWithOtherConnectedDevicesForAnyCall
anyBluetoothHeadphoneRouteAvailableForAnyCall
TB,R,N,GisAnyBluetoothHeadphoneRouteAvailableForAnyCall
com.apple.telephonyutilities.callservicesd.conversationmanager
@"CSDIDSGroupSessionProvider"40@?0@"NSString"8@"NSArray"16@"IDSAccount"24@"NSObject<OS_dispatch_queue>"32
@"CSDConversation"44@?0@"NSUUID"8B16@"NSSet"20@"CSDIDSGroupSession"28@"NSObject<OS_dispatch_queue>"36
groupStatusNotifier
T@"CSDIDSGroupStatusNotifier",R,N,V_groupStatusNotifier
T@"CSDIDSService",R,N,V_service
mutableConversationsByGroupUUID
T@"NSMutableDictionary",R,N,V_mutableConversationsByGroupUUID
delegateToQueue
T@"NSMapTable",&,N,V_delegateToQueue
groupSessionProviderCreationBlock
T@?,C,N,V_groupSessionProviderCreationBlock
conversationCreationBlock
T@?,C,N,V_conversationCreationBlock
conversationsByGroupUUID
This call's call history identifier is nil
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CHRecentCall_CSD.m
dialRequestForRedial
messageType
callService
latencyMs
hasProtocolVersion
TQ,N,V_protocolVersion
hasMessageType
Ti,N,V_messageType
hasCallService
TI,N,V_callService
hasLatencyMs
TQ,N,V_latencyMs
failed
hasFailed
TB,N,V_failed
CSDRelayDeviceRouteTypeMac
CSDRelayDeviceRouteTypeiPhone
CSDRelayDeviceRouteTypeiPad
CSDRelayDeviceRouteTypeiPod
CSDRelayDeviceRouteTypeWatch
CSDRelayDeviceRouteTypeAudioAccessory
protoWantsVideo
protoMomentsAvailable
protoSenderMuteUplink
hasProtoWantsVideo
TB,N,V_protoWantsVideo
hasProtoMomentsAvailable
TB,N,V_protoMomentsAvailable
hasProtoSenderMuteUplink
TB,N,V_protoSenderMuteUplink
B16@?0@"TURoute"8
v32@?0@"TURoute"8Q16^B24
v24@?0@"TURoute"8^B16
category
T@"NSString",&,N,V_category
mode
T@"NSString",&,N,V_mode
routes
T@"NSArray",C,N,V_routes
receiverRouteAvailable
TB,R,N,GisReceiverRouteAvailable
speakerRouteAvailable
TB,R,N,GisSpeakerRouteAvailable
wirelessHeadsetAvailable
TB,R,N,GisWirelessHeadsetRouteAvailable
airTunesRouteAvailable
TB,R,N,GisAirTunesRouteAvailable
carAudioRouteAvailable
TB,R,N,GisCarAudioRouteAvailable
bluetoothRouteAvailable
TB,R,N,GisBluetoothRouteAvailable
isAnyPreferredRouteAvailable
preferredRoute
T@"TURoute",R,N
isAnyPreferredRouteAvailableAndActive
preferredAndActiveRoute
isAnyRouteAvailableWithOtherConnectedDevices
com.apple.private.alloy.facetime.audio
call_info
call_info_source
call_directory_provider_bundle_id
hasCallInfo
callInfo
T@"AWDCSDCallStatus",&,N,V_callInfo
hasCallInfoSource
callInfoSource
Ti,N,V_callInfoSource
hasCallDirectoryProviderBundleId
callDirectoryProviderBundleId
T@"NSString",&,N,V_callDirectoryProviderBundleId
CSDCallInfoSourceNone
CSDCallInfoSourceContacts
CSDCallInfoSourceMaps
CSDCallInfoSourceSuggestions
CSDCallInfoSourceCallDirectory
CSDCallInfoSourceLocation
hasFaceTimeAudioAvailable
TB,N,V_faceTimeAudioAvailable
hasFaceTimeVideoAvailable
TB,N,V_faceTimeVideoAvailable
00000000-0000-0000-0000-000000000000
conferenced
TB,N,GisConferenced
TB,N,GisOutgoing
T@"NSDate",&,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDVoIPProcessAssertionManager.m
%s is unavailable
-[CSDVoIPProcessAssertionManager init]
processAssertions
T@"NSCountedSet",&,N,V_processAssertions
@"CXCallDirectoryStore"8@?0
com.apple.telephonyutilities.callservicesd.incomingcallfilter
q24@?0@"NSString"8@"NSString"16
T@"CSDIncomingCallFilterDataSource",&,N,V_dataSource
dndEnabled
TB,N,GisDNDEnabled,V_dndEnabled
onCall
TB,N,GisOnCall,V_onCall
onEmergencyCall
TB,N,GisOnEmergencyCall,V_onEmergencyCall
emergencyProviderIdentifier
T@"NSString",R,C,N,V_emergencyProviderIdentifier
deviceLockObserver
T@"<CSDDeviceLockStateObserver>",R,N,V_deviceLockObserver
callDirectorySanitizer
T@"CXCallDirectorySanitizer",R,N,V_callDirectorySanitizer
callDirectoryStore
T@"CXCallDirectoryStore",&,N,V_callDirectoryStore
twoTimeCallthroughInterval
Td,N,V_twoTimeCallthroughInterval
read == NO
callerId
%@:%@
read == %@
v32@?0@"CHRecentCall"8Q16^B24
uniqueId IN %@
transactionManager
T@"<CSDTransactionManager>",R,N,V_transactionManager
recentsManager
T@"CHManager",R,N,V_recentsManager
callProviderManager
T@"TUCallProviderManager",R,N,V_callProviderManager
T@"<CSDRecentsNotificationDelegate>",R,W,N,V_delegate
transactionObjectsAwaitingCallHistory
T@"NSMutableArray",R,N,V_transactionObjectsAwaitingCallHistory
cachedCalls
T@"NSMutableDictionary",R,N,V_cachedCalls
incomingCallFilter
T@"CSDIncomingCallFilter",R,N,V_incomingCallFilter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDIDSSession.m
-[CSDIDSSession init]
<%@ %p %@>
UUID=%@
T@"<CSDIDSSessionProvider>",R,N,V_sessionProvider
preferences
T@"NSMutableDictionary",R,N,V_preferences
propertiesDescription
TB,N,GisWiFiAllowed
TB,N,GisCellularDataAllowed
TB,N,GisCellularDataPreferred
T@"NSUUID",&,N
protoPersonNameComponents
suggestedName
label
companyName
mapName
location
contactName
contactLabel
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryExtensionIdentifier
hasName
T@"NSString",&,N,V_name
hasProtoPersonNameComponents
T@"CSDMessagingPersonNameComponents",&,N,V_protoPersonNameComponents
hasSuggestedName
T@"NSString",&,N,V_suggestedName
hasLabel
T@"NSString",&,N,V_label
hasCompanyName
T@"NSString",&,N,V_companyName
hasMapName
T@"NSString",&,N,V_mapName
hasLocation
T@"NSString",&,N,V_location
hasContactName
T@"NSString",&,N,V_contactName
hasContactLabel
T@"NSString",&,N,V_contactLabel
hasCallDirectoryLabel
T@"NSString",&,N,V_callDirectoryLabel
hasCallDirectoryLocalizedExtensionContainingAppName
T@"NSString",&,N,V_callDirectoryLocalizedExtensionContainingAppName
hasCallDirectoryExtensionIdentifier
T@"NSString",&,N,V_callDirectoryExtensionIdentifier
com.apple.telephonyutilities.callservicesd.useractivitycommunicator
activityQueue
T@"NSMutableOrderedSet",&,N,V_activityQueue
currentlyBroadcastedActivity
T@"CSDUserActivity",&,N,V_currentlyBroadcastedActivity
bestAppSuggestionManager
T@"UABestAppSuggestionManager",&,N,V_bestAppSuggestionManager
T@"<CSDUserActivityCommunicatorDelegate>",W,N,V_delegate
com.apple.private.alloy.phone.auth
T@"<CSDIDSGroupSessionProvider>",R,N,V_sessionProvider
joined
TB,N,GisJoined,V_joined
T@"<CSDIDSGroupSessionDelegate>",W,N,V_delegate
idsDestination
v24@?0@"CSDClient"8@"<TUCallServicesXPCClient>"16
com.apple.telephonyutilities.callservicesdaemon.callstatecontroller
%@-%d
B16@?0@"CSDClient"8
com.apple.telephonyutilities.callservicesdaemon.voicemailcallended
callsToHold
callsToUnhold
callsToDisconnect
callsToAnswer
v16@?0@"TUCall"8
-[CSDCallStateController dialWithRequest:reply:]
-[CSDCallStateController dialWithRequest:displayContext:]
-[CSDCallStateController answerCallWithRequest:]
-[CSDCallStateController holdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController unholdCallWithUniqueProxyIdentifier:]
-[CSDCallStateController disconnectCallWithUniqueProxyIdentifier:]
-[CSDCallStateController groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:]
-[CSDCallStateController ungroupCallWithUniqueProxyIdentifier:]
-[CSDCallStateController swapCalls]
-[CSDCallStateController playDTMFToneForCallWithUniqueProxyIdentifier:key:]
-[CSDCallStateController disconnectCurrentCallAndActivateHeld]
-[CSDCallStateController disconnectAllCalls]
-[CSDCallStateController setTTYType:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pullRelayingCallsFromClient]
-[CSDCallStateController pushRelayingCallsToHostWithSourceIdentifier:]
-[CSDCallStateController pullCallFromClientUsingHandoffActivityUserInfo:reply:]
-[CSDCallStateController sendMMIOrUSSDCodeWithRequest:]
-[CSDCallStateController setUplinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController setDownlinkMuted:forCallWithUniqueProxyIdentifier:]
-[CSDCallStateController pushHostedCallsToDestination:]
-[CSDCallStateController pullHostedCallsFromPairedHostDevice]
-[CSDCallStateController sendHardPauseDigitsForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController updateCallWithProxy:]
-[CSDCallStateController enteredForegroundForCallWithUniqueProxyIdentifier:]
-[CSDCallStateController willEnterBackgroundForAllCalls]
-[CSDCallStateController enteredBackgroundForAllCalls]
-[CSDCallStateController setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:]
-[CSDCallStateController setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:]
-[CSDCallStateController joinConversationWithRequest:]
-[CSDCallStateController setCurrentAudioInputDeviceToDeviceWithUID:]
-[CSDCallStateController setCurrentAudioOutputDeviceToDeviceWithUID:]
-[CSDCallStateController routesByUniqueIdentifier:]
-[CSDCallStateController pickRouteWithUniqueIdentifier:]
B24@?0@"TUCall"8@"NSDictionary"16
shouldRelayToOtherDevices
callProviderManagerXPCServer
T@"CSDCallProviderManagerXPCServer",R,N,V_callProviderManagerXPCServer
T@"CSDRouteController",R,N,V_routeController
relayCallDelegate
T@"CSDRelayCallDelegate",R,N,V_relayCallDelegate
handledCalls
T@"NSHashTable",R,N,V_handledCalls
dirtyCallManager
T@"CSDDirtyCallManager",R,N,V_dirtyCallManager
T@"CSDCallProviderManager",R,N,V_callProviderManager
T@"CSDCallController",R,N,V_callController
recentsController
T@"CSDRecentsController",R,N,V_recentsController
originating_process_id
timed_out
actions
hasOriginatingProcessId
originatingProcessId
T@"NSString",&,N,V_originatingProcessId
hasTimedOut
timedOut
TB,N,V_timedOut
T@"NSMutableArray",&,N,V_actions
firstUnlockCallbacks
T@"NSMutableArray",&,N,V_firstUnlockCallbacks
hasBeenUnlocked
TB,N,V_hasBeenUnlocked
T@"<TUNotifyObserver>",&,N,V_notifyObserver
hasBeenUnlockedBlock
T@?,C,N,V_hasBeenUnlockedBlock
T@"TUCallDisplayContext",R,N
com.apple.telephonyutilities.callservicesd.voipapplicationcontroller
com.apple.telephonyutilities.callservicesdaemon.voip
com.apple.pushkit.launch.voip
bundleIDs
aps-environment
%@.%@
com.apple.telephonyutilities.callservicesdaemon.voip.push
com.apple.telephonyutilities.callservicesdaemon.voip.push.development
productionConnection
T@"APSConnection",&,N,V_productionConnection
developmentConnection
T@"APSConnection",&,N,V_developmentConnection
bundleIdentifierToVoIPApplication
T@"NSMutableDictionary",&,N,V_bundleIdentifierToVoIPApplication
dataSourceToIdentifierToCalls
T@"NSMapTable",&,N,V_dataSourceToIdentifierToCalls
dataSources
<%@: %p %@>
object=%@ processName=%@ processBundleIdentifier=%@
object
T@,&,N,V_object
identifiersWithPendingCoalescingBlocks
T@"NSMutableSet",&,N,V_identifiersWithPendingCoalescingBlocks
blockToExecuteAfterPendingCoalescingBlocksByIdentifier
T@"NSMutableDictionary",&,N,V_blockToExecuteAfterPendingCoalescingBlocksByIdentifier
objectForBlock
T@,R,N
processName
processBundleIdentifier
remote
TB,R,N,GisRemote
T@"TUCallServicesClientCapabilities",&,N,V_capabilities
com.apple.telephonyutilities.callservicesd.conversationmanagerxpcserver
com.apple.telephonyutilities.callservicesdaemon.conversationmanager
v24@?0@"CSDClient"8@"<TUConversationManagerXPCClient>"16
groupStatusNotifierProvider
T@"<CSDIDSGroupStatusNotifierProvider>",R,N,V_groupStatusNotifierProvider
T@"<CSDIDSGroupStatusNotifierDelegate>",W,N,V_delegate
T@"NSSet",R,C,N,V_participantDestinationIDs
activeParticipants
T@"NSSet",R,C,N,V_activeParticipants
dictionaryRepresentation
com.apple.telephonyutilities.callservicesd.callprovidermanager
Cannot launch app for dial request with a system provider: %@
Cannot launch app for invalid dial request: %@
T@"<CSDCallProviderManagerDataSource>",R,N,V_dataSource
localProvidersByIdentifier
T@"NSMutableDictionary",R,N,V_localProvidersByIdentifier
relayProvidersByIdentifier
T@"NSMutableDictionary",R,N,V_relayProvidersByIdentifier
providersByIdentifier
T@"NSDictionary",C,N,V_providersByIdentifier
providersByIdentifierForRemoteClients
callUUIDsByConversationGroupUUID
T@"NSMutableDictionary",R,N,V_callUUIDsByConversationGroupUUID
conversationGroupUUIDsByCallUUID
T@"NSMutableDictionary",R,N,V_conversationGroupUUIDsByCallUUID
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
conversationGroupUUIDsAwaitingActiveAudioSession
T@"NSMutableSet",R,N,V_conversationGroupUUIDsAwaitingActiveAudioSession
v24@?0@"CSDIDSTransport"8@"NSDictionary"16
SBSLaunchApplicationWithIdentifier
SpringBoardServices
access-calls
modify-calls
mock-calls
access-call-capabilities
modify-call-capabilities
access-moments
modify-moments
Entitlement check: In %s, client %@ lacks capability '%@'
com.apple.telephonyutilities.suppressringtone
com.apple.mobilephone
<%@ %p activityType=%@ dynamicIdentifier=%@ activityUserInfo=%@>
userActivity
T@"NSUserActivity",&,N,V_userActivity
dynamicIdentifier
T@"NSString",&,N,V_dynamicIdentifier
registeredProviders
registeredProvidersVersion
registeredRelayProviders
Ringtones
com.apple.LaunchServices.applicationUnregistered
com.apple.springboard.passcodeLockedOrBlocked
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N
relayCallingGuaranteed
TB,R,N,GisRelayCallingGuaranteed
registeredLocalProvidersByIdentifier
registeredRelayProvidersByIdentifier
devicePasscodeLocked
TB,R,N,GisDevicePasscodeLocked
providerIdentifiersForExistingCalls
T@"NSSet",R,C,N
ringtonesSandboxExtensionDirectory
T@"CSDSandboxExtensionDirectory",R,N,V_ringtonesSandboxExtensionDirectory
T@"CSDCallCenterObserver",R,N,V_callCenterObserver
T@"NSSet",C,N,V_providerIdentifiersForExistingCalls
T@"<CSDCallProviderManagerDataSourceDelegate>",W,N,V_delegate
com.apple.telephonyutilities.callservicesd.csdmomentsreportingsession
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDMomentsReportingSession.m
-[CSDMomentsReportingSession init]
self
TQ,N,V_photoRequestSuccessCount
TQ,N,V_photoRequestFailureCount
hasCleanedUp
TB,N,V_hasCleanedUp
requestTimeoutBlockByTransactionID
T@"NSMutableDictionary",R,N,V_requestTimeoutBlockByTransactionID
requestStartDateByTransactionID
T@"NSMutableDictionary",R,N,V_requestStartDateByTransactionID
photoRequestDurations
T@"NSMutableArray",R,N,V_photoRequestDurations
T@"<CSDMomentsReportingSessionDelegate>",W,N,V_delegate
Tq,R,N,V_streamToken
shouldTraceSignposts
localParticipantData
T@"NSData",R,C,N
audioReady
TB,N,GisAudioReady
T@"AVCSession",R,N,V_session
T@"<CSDAVCSessionDelegate>",R,W,N,V_delegate
TB,N,GisAudioReady,V_audioReady
T@"TUHandle",C,N,SsetTUHandle:
com.apple.telephonyutilities.callservicesd.duetreporter
lastReportedInCallValue
TB,N,V_lastReportedInCallValue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDExternalIDSDualSession.m
T@"NSString",C,N,V_remoteFromID
<display_name>
CELLULAR_SETTINGS
prefs:root=MOBILE_DATA_SETTINGS_ID
WLAN_SETTINGS
WIFI_SETTINGS
prefs:root=WIFI
SETTINGS
prefs:root=General&path=DATE_AND_TIME
prefs:root=FACETIME&path=LOCATION&guid=%@
%s is unavailable, call another initializer instead.
-[CSDRelayConferenceConnection init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDRelayConferenceConnection.m
 identifier=%@
 transport=%@
 isHost=%d
 isUsingBaseband=%d
 isAudioDisabled=%d
 receivedSuccessfulDidStart=%d
 isPreparedToStop=%d
receivedSuccessfulDidStart
TB,N,V_receivedSuccessfulDidStart
T@"NSString",C,N,V_identifier
T@"CSDIDSTransport",&,N,V_transport
host
TB,N,GisHost,V_host
usingBaseband
TB,N,GisUsingBaseband,V_usingBaseband
audioDisabled
TB,N,GisAudioDisabled,V_audioDisabled
T@"VCCapabilities",R,C,N
preparedToStop
TB,N,GisPreparedToStop,V_preparedToStop
didPrepareHandler
T@?,C,N,V_didPrepareHandler
didStartHandler
T@?,C,N,V_didStartHandler
didStopHandler
T@?,C,N,V_didStopHandler
com.apple.telephonyutilities.callservicesd.telephonycallcapabilities
v16@?0^{__CFDictionary=}8
<%@ %p>
    Are capabilities valid: %@
    System capabilities: %@
    Carrier space capabilities: %@
    Call management state: %@
    WiFi capability info: %@
    VoLTE capability info: %@
    Thumper capability info: %@
    Thumper local device ID: %@
    Thumper local account ID: %@
    Thumper accounts: %@
B16@?0@"CSDThumperAccount"8
q24@?0@"CSDThumperAccount"8@"CSDThumperAccount"16
capabilityToLastSavedAccountID
T@"NSMutableDictionary",R,N,V_capabilityToLastSavedAccountID
T@"CSDCarrierSpaceCapabilities",R,N,V_carrierSpaceCapabilities
emergencyCallbackCapabilities
T@"CSDEmergencyCallbackCapabilities",R,N,V_emergencyCallbackCapabilities
capabilitiesValid
TB,N,GareCapabilitiesValid,V_capabilitiesValid
telephonySystemCapabilities
T@"NSDictionary",&,N,V_telephonySystemCapabilities
telephonyCallManagementState
T@"NSDictionary",&,N,V_telephonyCallManagementState
localThumperDeviceID
T@"NSString",C,N,V_localThumperDeviceID
localThumperAccountID
T@"NSString",C,N,V_localThumperAccountID
thumperAccounts
T@"NSArray",C,N,V_thumperAccounts
wiFiCallingCapabilityInfo
T@"TUCTCapabilityInfo",&,N,V_wiFiCallingCapabilityInfo
voLTECallingCapabilityInfo
T@"TUCTCapabilityInfo",&,N,V_voLTECallingCapabilityInfo
thumperCallingCapabilityInfo
T@"TUCTCapabilityInfo",&,N,V_thumperCallingCapabilityInfo
emergencyCallbackModeEnabled
TB,N,GisEmergencyCallbackModeEnabled,V_emergencyCallbackModeEnabled
T@"<CSDTelephonyCallCapabilitiesDelegate>",W,N,V_delegate
supportsSimultaneousVoiceAndData
csCallingCurrentlyAvailable
TB,R,N,GisCSCallingCurrentlyAvailable
wiFiCallingCurrentlyAvailable
TB,R,N,GisWiFiCallingCurrentlyAvailable
wiFiEmergencyCallingAvailable
TB,R,N,GisWiFiEmergencyCallingAvailable
wiFiEmergencyCallingSupported
TB,R,N,GisWiFiEmergencyCallingSupported
voLTECallingCurrentlyAvailable
TB,R,N,GisVoLTECallingCurrentlyAvailable
v16@?0B8B12
dtmfSoundPlayer
T@"TUDTMFSoundPlayer",R,N,V_dtmfSoundPlayer
com.apple.calls.callservicesd
Default
calls
T@"NSMutableArray",&,N,V_calls
CSDFaceTimeIMAccountCallerIDChangedNotification
com.apple.telephonyutilities.callservicesd.facetimeimaccount
lastKnownFaceTimeCallerID
T@"CSDFaceTimeIMAccount",R,N
callIdentifier
Ti,N,V_callIdentifier
mockService
Ti,N,Gservice,V_mockService
mockCallStatus
Ti,N,GcallStatus,V_mockCallStatus
mockUniqueProxyIdentifier
T@"NSString",C,N,GuniqueProxyIdentifier,V_mockUniqueProxyIdentifier
mockIsVideo
TB,N,GisVideo,V_mockIsVideo
mockHostedOnCurrentDevice
TB,N,GisHostedOnCurrentDevice,V_mockHostedOnCurrentDevice
mockEndpointOnCurrentDevice
TB,N,GisEndpointOnCurrentDevice,V_mockEndpointOnCurrentDevice
mockBlocked
TB,N,GisBlocked,V_mockBlocked
mockVoicemail
TB,N,GisVoicemail,V_mockVoicemail
mockCallDuration
Td,N,GcallDuration,V_mockCallDuration
mockEmergency
TB,N,GisEmergency,V_mockEmergency
mockSOS
TB,N,GisSOS,SsetSOS:,V_mockSOS
mockOutgoing
TB,N,GisOutgoing,V_mockOutgoing
mockConferenced
TB,N,GisConferenced,V_mockConferenced
mockUsingBaseband
TB,N,GisUsingBaseband,V_mockUsingBaseband
mockTTYType
Ti,N,GttyType,V_mockTTYType
mockSupportsTTYWithVoice
TB,N,GsupportsTTYWithVoice,V_mockSupportsTTYWithVoice
mockDisconnectedReason
Ti,N,GdisconnectedReason,V_mockDisconnectedReason
mockHandle
T@"TUHandle",&,N,Ghandle,V_mockHandle
mockLocalizedLabel
T@"NSString",C,N,GlocalizedLabel,V_mockLocalizedLabel
mockCompanyName
T@"NSString",C,N,GcompanyName,V_mockCompanyName
mockCallUUID
T@"NSString",C,N,GcallUUID,V_mockCallUUID
mockCallerNameFromNetwork
T@"NSString",C,N,GcallerNameFromNetwork,V_mockCallerNameFromNetwork
mockBytesOfDataUsed
Tq,N,GbytesOfDataUsed,V_mockBytesOfDataUsed
mockSubtype
Ti,N,Gsubtype,V_mockSubtype
mockNeedsManualInCallSounds
TB,N,GneedsManualInCallSounds,V_mockNeedsManualInCallSounds
mockAudioCategory
T@"NSString",C,N,GaudioCategory,V_mockAudioCategory
mockAudioMode
T@"NSString",C,N,GaudioMode,V_mockAudioMode
mockCallGroupUUID
T@"NSUUID",C,N,GcallGroupUUID,V_mockCallGroupUUID
mockBackingProvider
T@"TUCallProvider",C,N,GbackingProvider,V_mockBackingProvider
mockDisplayProvider
T@"TUCallProvider",C,N,GdisplayProvider,V_mockDisplayProvider
mockProviderContext
T@"NSDictionary",C,N,GproviderContext,V_mockProviderContext
mockProviderErrorCode
Tq,N,GproviderErrorCode,V_mockProviderErrorCode
mockDisplayContext
T@"TUCallDisplayContext",C,N,GdisplayContext,V_mockDisplayContext
mockHasStartedOutgoing
TB,N,GhasStartedOutgoing,V_mockHasStartedOutgoing
mockHasSentInvitation
TB,N,GhasSentInvitation,V_mockHasSentInvitation
mockConnecting
TB,N,GisConnecting,V_mockConnecting
mockConnected
TB,N,GisConnected,V_mockConnected
mockUplinkMuted
TB,N,GisUplinkMuted,SsetUplinkMuted:,V_mockUplinkMuted
mockUplinkWasExplicitlyMuted
TB,N,GuplinkWasExplicitlyMuted,V_mockUplinkWasExplicitlyMuted
mockMayRequireBreakBeforeMake
TB,N,GmayRequireBreakBeforeMake,V_mockMayRequireBreakBeforeMake
mockAudioInterruptionProviderType
Tq,N,GaudioInterruptionProviderType,V_mockAudioInterruptionProviderType
mockDisplayName
T@"NSString",C,N,GdisplayName,V_mockDisplayName
mockPrefersExclusiveAccessToCellularNetwork
TB,N,GprefersExclusiveAccessToCellularNetwork,V_mockPrefersExclusiveAccessToCellularNetwork
mockContactIdentifier
T@"NSString",C,N,GcontactIdentifier,V_mockContactIdentifier
mockDateCreated
T@"NSDate",&,N,GdateCreated,V_mockDateCreated
mockDateConnected
T@"NSDate",&,N,GdateConnected,V_mockDateConnected
mockProviderProcessIdentifier
Ti,N,GproviderProcessIdentifier,V_mockProviderProcessIdentifier
mockAudioInterruptionActivationStateObserver
T@"<CXAudioSessionActivationStateObserver>",&,N,GaudioInterruptionActivationStateObserver,V_mockAudioInterruptionActivationStateObserver
mockBackingCallSource
T@"CXCallSource",&,N,GbackingCallSource,V_mockBackingCallSource
mockIsThirdPartyVideo
TB,N,GisThirdPartyVideo,V_mockIsThirdPartyVideo
mockActiveRemoteParticipantHandles
T@"NSArray",C,N,GactiveRemoteParticipantHandles,V_mockActiveRemoteParticipantHandles
mockInitialLinkType
TQ,N,GinitialLinkType,V_mockInitialLinkType
mockCallRelaySupport
Ti,N,GcallRelaySupport,V_mockCallRelaySupport
activeRemoteParticipantCXHandles
ambiguityState
swappable
mergeable
holdAllowed
addCallAllowed
takingCallsPrivateAllowed
hardPauseAvailable
endAndAnswerAllowed
holdAndAnswerAllowed
sendToVoicemailAllowed
hasAmbiguityState
TI,N,V_ambiguityState
hasSwappable
TB,N,V_swappable
hasMergeable
TB,N,V_mergeable
hasHoldAllowed
TB,N,V_holdAllowed
hasAddCallAllowed
TB,N,V_addCallAllowed
hasTakingCallsPrivateAllowed
TB,N,V_takingCallsPrivateAllowed
hasHardPauseAvailable
TB,N,V_hardPauseAvailable
hasEndAndAnswerAllowed
TB,N,V_endAndAnswerAllowed
hasHoldAndAnswerAllowed
TB,N,V_holdAndAnswerAllowed
hasSendToVoicemailAllowed
TB,N,V_sendToVoicemailAllowed
v32@?0@"NSString"8@"NSString"16@"NSDictionary"24
CallUUID
RelayFailedConferenceFailed
RelayFailedNoRelayDevice
ComponentCrashed
RelayFailedRelayDeviceRelayNotEnabled
NoLocalLink
CallFailed
DialFailed
AccountUnsupported
NetworkUnsupported
ProviderCrashed
MediaStartFailed
MediaServerCrashed
NoReason
Disconnected
ReceiverDeclined
LocalUnanswered
RemoteUnanswered
InitiatorCancelled
CouldNotConnect
RemoteEnded
NoLocalData
NoRemoteData
FailedToOpenSocket
LocalHangup
RemoteHangup
NoLocalNetwork
MissingRemoteInfo
NoRemoteNetwork
EncryptionSetupFailed
EncryptionFailed
DecryptionFailed
SystemInternalError
NoRemotePackets
ReceiverBusy
SystemUnsupported
QRConfigurationError
SKEConfigurationError
QRAllocbindTimeout
QRUnallocbindTimeout
QRConnectedTimeout
AcceptedElsewhere
DeclinedElsewhere
AliasDeactivated
AbortedByCaller
AbortedByReceiver
ReceiverOffline
HostHangup
Shutdown
LocalNetworkUnsupported
RemoteNetworkUnsupported
SystemComponentCrashed
CouldNotInvite
CouldNotRespond
CouldNotCancel
CouldNotSendUpdate
CouldNotSendAVMessage
CallLocalUnanswered
CallRemoteUnanswered
CallDeclinedElsewhere
CallFiltered
RemoteUserDoesNotExist
RemoteUserIncompatible
LocalUserIncompatible
CallerAccountInvalid
CallerAccountNeedsUpdate
Call Failure
T@"CSDReportingController",R,N
reporters
T@"NSMutableArray",&,N,V_reporters
reportingSessionByStreamToken
T@"NSMutableDictionary",R,N,V_reportingSessionByStreamToken
CSDIDSDeviceListChangedNotification
CSDIDSServiceCallerIDChangedNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDIDSService.m
All CSDIDSService subclasses must override +sharedInstance
com.apple.telephonyutilities.callservicesd.%@
All CSDIDSService subclasses must override -serviceName
    devices: %@
    availableOutgoingRelayCallerIDs: %@
    defaultPairedDevice: %@
    pairedDevice: %@
    telephonyCapableDeviceExists: %@
    relayCapableDeviceExists: %@
", "
devices
countryCode
telephonyCapableDeviceExists
relayCapableDeviceExists
defaultPairedDeviceExists
pairedDeviceExists
defaultPairedDevice
T@"IDSDevice",R,N
pairedDevice
availableOutgoingRelayCallerIDs
T@"CSDIDSService",R,N
idsService
T@"IDSService",&,N,V_idsService
TB,N,V_telephonyCapableDeviceExists
TB,N,V_relayCapableDeviceExists
T@"NSArray",&,N,V_devices
T@"IDSDevice",&,N,V_pairedDevice
T@"IDSDevice",&,N,V_defaultPairedDevice
T@"NSSet",&,N,V_availableOutgoingRelayCallerIDs
serviceName
T@"IDSAccount",R,N
T@"IDSService",R,N
pairedDeviceUniqueIDOverride
Watch
AudioAccessory
TB,R,N,GisPairedDevice
audioAccessoryDevice
TB,R,N,GisAudioAccessoryDevice
supportsRestrictingSecondaryCalling
supportsRelayCallingWithoutLocalRelayCallingEnabled
pairedDeviceUniqueIDOverrideExists
v24@?0@"CSDIDSTransport"8@"NSData"16
destinationWithActiveSession
T@"IDSDestination",R,N
waitingSession
T@"CSDRelayIDSDualSession",R,N
currentSession
sessions
T@"NSMutableArray",&,N,V_sessions
T@"<CSDRelayIDSSessionMessengerDelegate>",W,D,N
deviceWithActiveSession
com.apple.callservicesdaemon.csdmomentscontroller
PreserveFaceTimePhotosFiles
CSDMomentsControllerMetadataKeyTransactionID
com.apple.telephonyutilities.callservicesd.csdmomentscontroller
@"<CSDAVCMoments>"32@?0q8@"<CSDAVCMomentsDelegate>"16@"NSObject<OS_dispatch_queue>"24
com.apple.telephonyutilities.callservicesdaemon.momentscontroller
Could not start request for mediaType: %d streamToken: %ld. -[AVCMoments newRequestWithMediaType:] returned nil.
Could not start request for mediaType: %d streamToken: %ld. No session has been registered for requested stream token.
-[CSDMomentsController startRequestWithMediaType:forStreamToken:reply:]
-[CSDMomentsController endRequestWithTransactionID:reply:]
-[CSDMomentsController registerStreamToken:remoteIDSDestination:remoteMomentsAvailable:reply:]
-[CSDMomentsController unregisterStreamToken:reply:]
v24@?0@"CSDClient"8@"<TUMomentsControllerXPCClient>"16
v16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
localCapabilities
T@"<CSDMomentsControllerLocalCapabilities>",&,N
faceTimePhotosAvailable
TB,R,N,GisFaceTimePhotosAvailable
fileTransferController
T@"<CSDFileTransferring>",R,N,V_fileTransferController
mediaAssetManager
T@"<CSDMediaAssetManaging>",R,N,V_mediaAssetManager
sessionsByToken
T@"NSMutableDictionary",R,N,V_sessionsByToken
activeRequestsByTransactionID
T@"NSMutableDictionary",R,N,V_activeRequestsByTransactionID
streamTokensByCSDClient
T@"NSMapTable",R,N,V_streamTokensByCSDClient
momentsClient
T@"<TUMomentsControllerXPCClient>",R,N,V_momentsClient
momentsGenerator
T@?,C,N,V_momentsGenerator
T@"<CSDMomentsControllerDelegate>",W,N,V_delegate
T@"<CSDAVConferenceProviderDelegate>",W,N
inputFrequencyMeteringEnabled
TB,N,GisInputFrequencyMeteringEnabled
outputFrequencyMeteringEnabled
TB,N,GisOutputFrequencyMeteringEnabled
microphoneMuted
TB,N,GisMicrophoneMuted
audioPaused
TB,N,GisAudioPaused
videoPaused
TB,N,GisVideoPaused
T@"AVConference",R,N,V_conference
Tq,N,V_callID
videoDeviceController
T@"TUVideoDeviceController",R,N,V_videoDeviceController
T@"<CSDAVConferenceProviderDelegate>",W,N,Vdelegate
call
T@"CSDProviderCall",&,N,V_call
completionHandler
T@?,C,N,V_completionHandler
v16@?0@"CXCallSource"8
processAssertionManager
T@"CSDVoIPProcessAssertionManager",R,N,V_processAssertionManager
callSourceManager
T@"CXCallSourceManager",R,N,V_callSourceManager
deferCommittingTransactions
TB,N,V_deferCommittingTransactions
telephonyCallSource
T@"CXCallSource",R,N
faceTimeCallSource
T@"CXInProcessCallSource",R,N,V_faceTimeCallSource
faceTimeProviderDelegate
T@"<CXProviderDelegatePrivate>",R,N,V_faceTimeProviderDelegate
callSourceFetcher
T@"CSDCallSourceFetcher",R,N,V_callSourceFetcher
pendingPulledCallContexts
T@"NSMutableDictionary",R,N,V_pendingPulledCallContexts
callControllerHost
T@"CXCallControllerHost",R,N,V_callControllerHost
T@"CSDCallProviderManager",&,N,V_providerManager
We have an active XPC connection but no corresponding CSDClient
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDClientManager.m
B24@?0@8@"NSDictionary"16
queueContext
T^v,R,N
clientsByObject
T@"NSMapTable",R,N,V_clientsByObject
machServiceName
T@"NSString",&,N,V_machServiceName
T@"NSXPCListener",&,N,V_xpcListener
currentConnection
T@"NSXPCConnection",&,N,V_currentConnection
asynchronousExportedObjectProxy
T@,&,N,V_asynchronousExportedObjectProxy
synchronousExportedObjectProxy
T@,&,N,V_synchronousExportedObjectProxy
clients
currentClient
T@"CSDClient",R,N
remoteObjectInterface
T@"NSXPCInterface",&,N,V_remoteObjectInterface
exportedInterface
T@"NSXPCInterface",&,N,V_exportedInterface
exportedObject
T@,&,N,V_exportedObject
interruptionHandler
T@?,C,N,V_interruptionHandler
invalidationHandler
T@?,C,N,V_invalidationHandler
requiredConnectionCapability
T@"NSString",C,N,V_requiredConnectionCapability
T@"CSDClientManager",W,N,V_clientManager
synchronous
TB,N,GisSynchronous,V_synchronous
com.apple.TUCallCenter
uniqueProxyIdentifierToCallTable
T@"NSMapTable",&,N,V_uniqueProxyIdentifierToCallTable
uniqueProxyIdentifierToCallTableSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_uniqueProxyIdentifierToCallTableSemaphore
currentCallSet
T@"NSMutableOrderedSet",&,N,V_currentCallSet
T@"NSOrderedSet",R,N
T@"CSDCallController",W,N,V_callController
supportedTUHandleTypes
 string=%@
 pid=%d
 suppress=%d
 statusBarStyleOverrides=%d
statusString
T@"NSString",C,N,V_statusString
processIdentifier
Ti,N,V_processIdentifier
inCallUIWantsStatusBarSuppression
TB,N,V_inCallUIWantsStatusBarSuppression
statusBarStyleOverrides
Ti,N,V_statusBarStyleOverrides
<%@ %p type=%d
 socket=%d
 destination=%@
 initialLinkType=%lu
 remoteDestination=%@
 remoteDeviceUniqueIdentifier=%@
Ti,R,N,V_type
Ti,R,N,V_socket
T@"NSString",R,C,N,V_destination
<%@ %p identifier=%@ handle=%@>
T@"NSString",R,C,N,V_identifier
T@"TUHandle",R,C,N,V_handle
T@"NSData",R,C,N,V_avcData
tuConversationParticipant
T@"TUConversationParticipant",R,C,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/CSDCallCenterObserver.m
-[CSDCallCenterObserver init]
T@"<CSDCallCenterObserverDelegate>",W,N
T@"NSNotificationCenter",R,N,V_notificationCenter
notificationNamesToTriggers
T@"NSMutableDictionary",R,N,V_notificationNamesToTriggers
T@"<CSDCallCenterObserverDelegate>",W,N,Vdelegate
T@?,C,N,VcallChanged
com.apple.telephonyutilities.callservicesd.calldirectorymaintenance.daily
extensionsChangedForCallDirectoryExtensionManager-%lu
manager
T@"CXCallDirectoryManager",&,N,V_manager
nsExtensionManager
T@"CXCallDirectoryNSExtensionManager",R,N,V_nsExtensionManager
countOfNotificationsReceived
TQ,N,V_countOfNotificationsReceived
callservicesd launched
_T013callservicesd25AudioInterruptionProvider_pD
_TtC13callservicesd28AnyAudioInterruptionProvider
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
_T013callservicesd33AudioInterruptionPriorityProvider_pD
_T013callservicesd18DescriptorResolver_pD
Server bag does not support quick relay since current version is unspecified
qr-invitations-enabled
Server bag does not support quick relay since minimum version is unspecified
quickRelaySupported
TB,N,R
CSDFaceTimeIDSProviderDelegateServerBag
loaded
B24@0:8@16
^@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
_T013callservicesd40AudioInterruptionProviderFactoryProtocol_pD
_TtC13callservicesd32AudioInterruptionProviderFactory
iMac
MacBook
Macmini
MacPro
_T013callservicesd32ChangeTrackingDescriptorResolver_pD
_TtC13callservicesd29SoundDescriptorActionResolver
callCenterObserver
CSDCallCenterObserver
T@"<CSDCallCenterObserverDelegate>",N,W
callChanged
T@?,N,C
callContainer
T@"<TUCallContainerPrivate>",N,R
@"<CSDCallCenterObserverDelegate>"16@0:8
v24@0:8@"<CSDCallCenterObserverDelegate>"16
@?<v@?@"CSDCall"Q>16@0:8
v24@0:8@?<v@?@"CSDCall"Q>16
@"<TUCallContainerPrivate>"16@0:8
v16@0:8
_TtC13callservicesd33AVAudioClientInterruptionProvider
activeDescriptor
Resetting state
Stopping audio session
Setting audio session properties: %@
Starting audio session
v20@?0B8@"NSError"12
Failed to start audio session: %@
Successfully started audio session
kAUVoiceIOProperty_OperationMode
kCMSessionProperty_CreateSpeakerDevice
kCMSessionProperty_InitiationDescription
kCMSessionProperty_ClientPriority
kCMSessionProperty_AudioMode
kCMSessionProperty_AudioCategory
_TtC13callservicesd34AVAudioSessionInterruptionProvider
audioSession
isLocal
_activationContext
Setting audio activation context: %@ for provider %@
Error setting audio activation context to %@ for provider %@: %@
Successfully set audio activation context
Error overriding output audio port to AVAudioSessionPortOverrideNone: %@
Deactivating and setting audio interruption priority: %ld for provider %@
Error deactivating and setting audio interruption priority to %ld for provider %@: %@
Successfully deactivated and set audio interruption priority
Setting audio interruption priority: %ld for provider %@
Error setting audio interruption priority to %ld for provider %@: %@
Successfully set audio interruption priority
Setting audio active: %@ options: %ld for provider %@
Error setting audio active to %@ for provider %@: %@
Successfully set audio active: %@ options: %ld
audioSession=
local=
audioSessionID=
false
true
Setting audio mode: %@ for provider %@
Error setting audio mode to %@ for provider %@: %@
Successfully set audio mode
Setting audio category: %@ for provider %@
Error setting audio category to %@ for provider %@: %@
Successfully set audio category
CSDProcessObserver
v24@0:8@?16
@24@0:8@16
v32@0:8@16@?24
v28@0:8i16@?20
i24@0:8@16
processIdentifierByBundleIdentifier
applicationMonitor
applicationStateChanged
currentProcessIdentifier
Ti,N,R
T@?,N,C,VapplicationStateChanged
OS_dispatch_queue
callservicesd.ProcessObserver
v16@?0@"NSDictionary"8
CSDProcessObserverProtocol
i24@0:8@"NSString"16
@?<v@?iI>16@0:8
v24@0:8@?<v@?iI>16
v28@0:8i16@?<v@?I>20
v32@0:8@"NSString"16@?<v@?I>24
_T013callservicesd28IDSDeviceDestinationResolver_pD
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
T@"NSArray",N,R
T@?,N,C,VroutesDidChangeHandler
T@?,N,C,VdidDeselectAllRoutesHandler
T@?,N,C,VsupportsPrimaryCalling
T@?,N,C,VhasRelayiCloudAccount
T@?,N,C,VidsDeviceForIDSDeviceIdentifier
route: %@
Could not find route to pick for %@. All nearby device routes: %@
v16@?0@"NSError"8
v24@?0@"CSDCall"8Q16
Updating activeRelayClientTransport to %@
Error activating companion link client: %@
Updating nearby device routes using devices: %@
Not adding any nearby devices because currentCallsSupportNearbyDevices=%@, supportsPrimaryCalling=%@, and hasRelayiCloudAccount=%@
Could not convert NearbyDevice to NearbyDeviceRoute: %@
callservicesd.NearbyDeviceRouteProvider
init()
@"IDSDevice"16@?0@"NSString"8
B8@?0
^v16@0:8
T#,N,R
CSDDirtyCallManager
@?16@0:8
dirtyCallsArray
dirtyCallsSet
T@?,N,C,VcallChanged
Draining pool with dirty calls: %@
Adding call %@ to dirty calls pool
Asked to dispatch drain the pool
v16@?0@"CSDCall"8
_T013callservicesd18DescriptorProvider_pD
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
notificationCenter
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
CSDAudioController
com.apple.telephonyutilities.callservicesd.audiocontroller
v16@?0@"NSNotification"8
notification: %@
Other interruption ended so re-interrupting if necessary
resolutionChangedHandler closure invoked
oldDescriptor: %@ descriptor: %@
Ending interruption immediately since there is no longer a resolved descriptor
An end interruption was deferred but we were asked to update to a new descriptor, so canceling the deferred end
Sound playback completed and we had a deferred end descriptor, so expediting end interruption for call with UUID %@
callUUID: %@
Attempted to expedite deferred end interruption block prematurely, so pending the UUID %@
Expediting deferred end interruption work item
Asked to begin or update playback of hold music but new descriptor is equal to activeDescriptor so doing nothing
speechSynthesizerEventHandler invoked
Hold music provider speech synthesizer finished utterance, but hold music provider is no longer active, so not invoking playback continuation
Hold music provider speech synthesizer finished utterance, and hold music provider is still active, so invoking playback continuation
Starting discovery mode
Deferring end interruption by %.2f sec, since descriptor has an interruption deferred end descriptor and there is no pending expedited end interruption
Ending interruption immediately, since descriptor has an interruption deferred end descriptor and there is a pending expedite for UUID %@
Stopping sound playback
Ending discovery mode
factory
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
Decreasing priority of other AVAudioSession interruption provider %@ to Default
No provider returned for descriptor %@
No existing proxy AVAudioSession interruption provider for ID %u, creating a new one
Created AVAudioSession interruption provider %@
Optional(
CSDMomentsUsageReport
d16@0:8
@52@0:8i16q20q28d36d44
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
Ti,N,R,Vavailability
Tq,N,R,VphotoRequestSuccessCount
Tq,N,R,VphotoRequestFailureCount
Td,N,R,VmedianRequestDuration
Td,N,R,VmeanRequestDuration
callservicesd.MomentsUsageReport
MomentsUsageReport (Availability: 
, Successes: 
, Failures: 
, Median Dur: 
, Mean Dur: 
_TtC13callservicesd37RingtoneProviderAlertPlaybackObserver
@16@0:8
didBeginPlaying
T@?,N,C,VdidBeginPlaying
_T013callservicesd21RingtoneProviderAlert_pD
_T013callservicesd24RingtoneProviderProtocol_pD
_TtC13callservicesd16RingtoneProvider
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
OS_dispatch_semaphore
Requested to end playback, stopping alert: %@
Alert configuration has changed, but unable to create TLAlert using configuration %@
Alert configuration has changed, playing alert %@
Requested to begin or update playback, but alert configuration is unchanged so doing nothing
Playback finished with completion type %@ for alert %@
Playback failed for alert %@: %@
Started playing alert: %@
Setting shouldIgnoreRingerSwitch: %@
Setting externalToneFileURL: %@
Setting vibrationIdentifier: %@
Setting toneIdentifier: %@
From provider, using externalToneFileURL %@
From activity alert %@, using tone %@, vibration %@, bypass ringer %@
Contact retrieval failed for contact identifier %@: %@
v24@?0q8@"NSError"16
TLAlertPlaybackObserver
v24@0:8@"TLAlert"16
CNKeyDescriptor
q16@0:8
#16@0:8
^@24@0:8:16
NSCopying
@24@0:8^v16
NSSecureCoding
supportsSecureCoding
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
callservicesd
canReceiveRelayedCalls
CSDMomentsControllerLocalCapabilities
enabled
regionBlocked
soundType=
provider=
isVideo=
region=
_T013callservicesd25HoldMusicProviderProtocol_pD
_TtC13callservicesd17HoldMusicProvider
speechSynthesizerEventHandler
speechSynthesizer
audioPlayer
T@"AVSpeechSynthesizer",N,&,VspeechSynthesizer
T@"AVAudioPlayer",N,&,VaudioPlayer
callservicesd1
v32@0:8@16@24
Ending hold music
Ending hold message
canceled speech synthesizer utterance
finished speech synthesizer utterance
No audio player could be created, so unable to begin playing hold music
Failed to start playing hold music
Successully started playing hold music
hold
Error retrieving file URL for hold music sound file
Error creating AVAudioPlayer with fileURL %@: %@
Created hold music audio player with URL %@
started speech synthesizer utterance
ANSWER_AND_HOLD_OUTGOING_MESSAGE
TelephonyUtilities
Speaking utterance %@
AVSpeechSynthesizerDelegate
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
CSDMomentsControllerSession
B16@0:8
v20@0:8B16
moments
remoteIDSDestination
isRegistered
T@"<CSDAVCMoments>",N,R,Vmoments
T@"NSString",N,R,VremoteIDSDestination
TB,N,VisRegistered
callservicesd.MomentsControllerSession
CSDAVCMoments
I16@0:8
i16@0:8
@40@0:8q16@24@32
@20@0:8C16
T@"<CSDAVCMomentsDelegate>",N,R
streamToken
Tq,N,R
TI,N,R
activeRequestCount
pendingRequestCount
@"<CSDAVCMomentsDelegate>"16@0:8
@40@0:8q16@"<CSDAVCMomentsDelegate>"24@"OS_dispatch_queue"32
@"<CSDAVCMomentsRequest>"20@0:8C16
superclass
description
_T013callservicesd13RouteProvider_pD
_T013callservicesd25DeselectableRouteProvider_pD
CSDRouteController
v24@0:8@16
_routesByUniqueIdentifier
routeWasPickedHandler
timedOutPickingRouteHandler
routeProviders
pendingRouteContext
routesByUniqueIdentifier
T@"NSDictionary",N,R
T@?,N,C,VrouteWasPickedHandler
T@?,N,C,VtimedOutPickingRouteHandler
com.apple.telephonyutilities.callservicesd.routecontroller
Updated routes from %@ to %@
Could not find route to pick with unique identifier %@. All routes: %@
Timed out waiting for route to become picked: %@
v16@?0@"TURoute"8
B16@?0@"TUCall"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/callservicesd_Sim/TelephonyUtilities-975.11.4/TUCallServicesDaemon/TUCallContainerProtocol_CSD.swift
Fatal error
Call is not a CSDCall: 
CSDIDSProviderDelegateCapabilities
wiFiAvailable
wiFiAllowed
cellularDataAvailable
cellularDataAllowed
cellularDataPreferred
NSObject
^@32@0:8:16@24
interruptionDescriptor: 
interruptionDeferredEndDescriptor: 
ringtoneDescriptor: 
soundDescriptorAction: 
holdMusicDescriptor: 
discoveryModeDescriptor: 
contactIdentifier=
providerRingtoneSoundURL=
_T013callservicesd26DescriptorTrackingProvider_pD
_T013callservicesd21AudioResolverProtocol_pD
_TtC13callservicesd13AudioResolver
ttyProviderObserver
deviceSupportsRingtone
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
Unable to create interruption descriptor for call %@
CSDTTYProviderObserver
Q16@0:8
TQ,N,R
CSDFaceTimeIDSProviderDelegateCapabilities
momentsAvailable
_T013callservicesd24LocalAudioSystemProvider_pD
_TtC13callservicesd23LocalAudioRouteProvider
audioRoutes
localAudioSystemProvider
callAudioCategory
callAudioMode
callAudioInterruptionState
Could not find route to pick for %@. All audio routes: %@
Failed to pick audio route %@: %@
Call does not have audio interruption so setting prematurely selected audio route to %@
Updating audio information using call: %@
Picking prematurely selected audio route now that audio interruption has begun: %@
Updated audio routes: %@
Unable to create audio route from route dictionary: %@
callservicesd.LocalAudioRouteProvider
v16@?0@"NSArray"8
CSDCallCenterObserverDelegate
v32@0:8@"<CSDCallCenterObserver>"16@"CSDCall"24
v24@0:8@"<CSDCallCenterObserver>"16
_T013callservicesd12NearbyDevice_pD
_T013callservicesd20NearbyDeviceProvider_pD
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
T@?,N,C,VdevicesChangedHandler
callservicesd.NearbyDeviceMonitor
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
Device changed: %@
Lost nearby device: %@
Found nearby device: %@
_T013callservicesd40AudioInterruptionActivationStateObserver_pD
v8@?0
providerType=
category=
mode=
activationContext=
priority=
wantsHoldMusic=
operationMode=
CXAudioSessionActivationStateObserver
_T013callservicesd29DiscoveryModeProviderProtocol_pD
_TtC13callservicesd21DiscoveryModeProvider
_T013callservicesd21SoundProviderProtocol_pD
_TtC13callservicesd13SoundProvider
player
Asked to begin or update playback of sound with descriptor %@ but no TUCallSoundPlayerDescriptor could be determined, so not playing
Attempt to play call sound player descriptor %@ returned false
Asked to begin or update playback of sound but new descriptor is equal to activeDescriptor so doing nothing
callUUID: 
_TtC13callservicesd13CSDAVCMoments
delegate
T@"<CSDAVCMomentsDelegate>",N,W,Vdelegate
v28@0:8@16I24
v40@0:8@16@24@32
v48@0:8@16@24@32@40
callservicesd.CSDAVCMoments
CSDAVCMomentsRequest
C16@0:8
B24@0:8^@16
transactionID
mediaType
TC,N,R
initiatorID
AVCMomentsDelegate
v28@0:8@"AVCMoments"16I24
v40@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSError"32
v48@0:8@"AVCMoments"16@"AVCMomentsRequest"24@"NSURL"32@"NSError"40
v24@0:8@"AVCMoments"16
CSDAVCMomentsDelegate
v28@0:8@"<CSDAVCMoments>"16I24
v40@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSError"32
v48@0:8@"<CSDAVCMoments>"16@"<CSDAVCMomentsRequest>"24@"NSURL"32@"NSError"40
v24@0:8@"<CSDAVCMoments>"16
_T013callservicesd22ASCIIStringConvertible_pD
CSDMomentsRequest
@32@0:8@16@24
avcRequest
T@"<CSDAVCMomentsRequest>",N,R,VavcRequest
T@"CSDMomentsControllerSession",N,R,Vsession
callservicesd.MomentsRequest
enabled: %d
accelerometer orientation changed to %d
Beginning transaction for %@. Transaction count is now %lu
Ending transaction for %@. Transaction count is now %lu
Initialized carrier space capabilities to %@
Carrier space capabilities changed to %@
Invalidating process assertion for %@
Preparing conference with configuration: %@
Initializing new callID with device role %d
Fetched local invite dictionary: %@
Error fetching local invite dictionary %@: %@
Fetching local invite dictionary using remote invite dictionary %@
Failed to initialize a new call with device role %d.
Failed to create an AVConference instance. This usually happens when the AVConference SPI can't communicate with mediaserverd over XPC
[WARN] Attempted to prepare conference which has already started preparing (state=%d)
transport: %@ self.configuration: %@
Successfully started connection with configuration=%@ (timestamp: %f)
Failed to start connection with configuration=%@: %@
[WARN] Attempted to start conference which has not been prepared (state=%d)
[WARN] Conference does not exist
Calling stop on conference %@
Calling cancel on conference %@
[WARN] Attempted to cancel a conference that has already started connecting: %@
Setting remote invite dictionary from %@ to %@
Setting caller from %d to %d
Attempting to set state to %d, which precedes current state %d
Setting microphoneMuted to %d for %@
Setting sendingAudio to %d
Setting sendingVideo to %d
Setting remoteVideoPresentationSize from %@ to %@
Setting remoteVideoPresentationState from %d to %d
Conference didStart timeout fired
Updating device role from %d to %d
conference=%@ didStartSession=%d error=%@
Successfully started session
Failed to start session. error=%@
didStopError=%@ callMetadata=%@
AVConference stopped in failure: %@
Sending delegate bytesOfDataUsageChanged: %ld
didPauseAudio=%d error=%@
remoteVideoPaused=%d
Server died for conference provider %@
Registering to handle call handoff activity type with dynamic identifier %@ for provider %@
Frontmost call is hosted here ...
... and it is an endpoint here ...
... and we are a secondary device ...
... using a broadcast activity with dynamic identifier: %@.
[WARN] ... but no dynamic identifier could be found (%d) or no handoff user info exists (%d). Not broadcasting frontmost call
... but we are a primary device. Not broadcasting frontmost call
... and it is being relayed elsewhere. Using a local activity
Beginning handoff activity %@ for call %@
Ending handoff activity: %@
Broadcasting suppress ringtone activity for declined call: %@
Began app history activity %@ for call %@
Broadcasting suppress ringtone activity for call that suppressed its ringtone: %@
Broadcasting suppress ringtone activity for incoming call that started connecting: %@
Received broadcast for activity type %d and destination ID %@. Suppressing ringtone due to remote suppression for call %@
Received broadcast for activity type %d but ignoring it because its destination ID (%@) does not match this ringing call's desination ID (%@)
Calling ADClientSetValueForDistributionKey() with key %@ and value %f
Asking BackBoard to set the proximity detection mode to (%u).
Handling proximity sensor covered changed to %d
VoiceOver is enabled and the proximity sensor is covered, changing the audio route from speaker to receiver.
VoiceOver is enabled and the proximity sensor is uncovered, changing the audio route from receiver to speaker.
Proximity detection should be %d since isReceiver: %d, isSpeaker: %d, isVoiceOverRunning: %d
Proximity detection should be %d since isEndpointOnCurrentDevice: %d, isInterfaceOrientationPortrait: %d, isRTT: %d, isTTY: %d
[WARN] Tried to get the call history identifier for this call (%@) but no conference ID was available (%@), we'll fall back to another method (GUID = %@). This call may now not sync properly between devices.
This chat's conferenceID and GUID are nil or empty, we cannot create a safe call history identifier
[WARN] Could not weak link notification string '%@'. Not observing notifications for it.
Calling endChatWithReason on chat %@ with reason %ld
Using account %@
Inviting additional peers %@, excluding push tokens %@
Could not initiate FaceTime call - No chat returned for handle %@ with account %@
Could not initiate FaceTime call - No IM handle returned for handle %@ with account %@
Could not initiate FaceTime Call - Account %@ not registered
Fulfilling pending answer call action because a chat with matching UUID connected: %@
[WARN] No pending answer call actions found with UUID: %@
Failing answer call action for chat because it ended before connecting: %@
Using call ended reason remote hangup because ended reason is %@
Using call ended reason answered elsewhere because ended reason is %@
Using call ended reason declined elsewhere because ended reason is %@
Using call ended reason unanswered because ended reason is %@
Using call ended reason failed because ended reason is %@
Incoming call was denied with error %@ so declining chat with IMAVResponseFilteredCall: %@
Calling acceptInvitation on chat %@
Not accepting invitation to chat %@ since it is already Connected
Calling endChat on chat %@
Calling setIsSendingAudio with %d for chat %@
Not holding chat %@ since it is not yet Connected
Calling setIsSendingVideo with %d for chat %@
Calling setRemoteVideoPresentationSize with %@ for call %@
Calling setRemoteVideoPresentationState with %ld for chat %@
Calling setRelayed with %d for chat %@
Calling setMuted with %d for chat %@
participants: %@ self.localParticipantIdentifier: %@
self: %@ localParticipantHandle: %@
Creating CSDAVCSession with transport token %@
Failed to create CSDAVCSession
[WARN] Not joining conversation because it isn't waiting: %@
[WARN] Not starting audio for conversation because it isn't joining: %@
self: %@
Leaving CSDIDSGroupSession: %@
[WARN] Not leaving conversation because it isn't joining/joined: %@
Starting %@
didJoinGroup: %d error: %@
Failed to join group: %@
CSDIDSGroupSession %@ failed to leave group for conversation %@: %@
error: %@
didStart: %d error: %@
Failed to start CSDAVCSession: %@
AVCSession %@ stopped in failure for conversation %@: %@
CSDAVCSession %@ server did disconnect for conversation %@
Ignoring %@ message because we already have a call with this uniqueProxyIdentifier: %@
We already have a call for this %@ message: %@. Updating it with new values
Creating new call for %@ message
[WARN] Ignoring %@ message because no call exists for %@ and the message is not from the paired device
[WARN] Could not find call with uniqueProxyIdentifier %@. All current calls: %@
Call answered elsewhere message had no uniqueProxyIdentifier set. Using current calls
Resetting call %@ with protoCall %@
Not resetting call %@ with protoCall %@ because they are equal
Creating new call with protoCall %@
Existing call no longer exists and is not sending: %@
Updating call %@ with protoCall %@
Not updating call %@ with protoCall %@ because they are equal
Not updating remote call state for call because it is an endpoint here: %@
[WARN] Received %@ message, but we already have some calls
Pulling remotely hosted call: %@
Failed to prepare conference for pull message %@ and call %@
Replacing hardPauseDigits '%@' with '%@' since protocolVersion is %d
Replacing soundRegion %ld with %ld since protocolVersion is %d
Created pause digits queue: %@
Setting disconnected reason to dial failed because call is outgoing but has not started outgoing
Setting disconnected reason to remote hangup because call has started connecting and ended reason is %ld
Setting disconnected reason to remote hangup because outgoing call has not started connecting and ended reason is %ld but call is a telephony call
Setting disconnected reason to remote unavailable because outgoing call has not started connecting and ended reason is %ld
Setting disconnected reason to answered elsewhere because ended reason is %ld
Setting disconnected reason to declined elsewhere because ended reason is %ld
Setting disconnected reason to handed off because ended reason is %ld
Setting disconnected reason to user busy because ended reason is %ld
Setting disconnected reason to remote hangup because ended reason is %ld
Setting disconnected reason to call failed because failure reason is %ld
Setting disconnected reason to account unsupported because failure reason is %ld
Setting disconnected reason to network unsupported because failure reason is %ld
Setting disconnected reason to provider crashed because failure reason is %ld
Setting disconnected reason to media start failed because failure reason is %ld
Setting disconnected reason to media server crashed because failure reason is %ld
Setting disconnected reason to other secondary device in use because failure reason is %ld
Setting disconnected reason to call failed because ended reason is %ld
Failed to find a call source to dial with for dial request: %@
for call: %@ pauseDigitsQueue: %@
[WARN] Next pause digits are not hard pause
[WARN] No next pause digits exist
for call: %@ key: %d
for call: %@ remoteVideoPresentationSize: %@
for call: %@ remoteVideoPresentationState: %d
Dequeueing next pause digits
Sending pause digits: %@ type: %ld
Found queued soft pause digits: %@
for pauseDigitsQueue: %@
Call started outgoing: %@
Disconnecting video call because another call started outgoing: %@
Disconnecting call using the baseband because a video call started outgoing and wantsBreakBeforeMake=YES: %@
All calls ended. Setting uplink and downlink muted to NO
Call started connecting: %@
Video call connected: %@
Disconnecting current call because another video call connected: %@
Posting CLTM notification %@ and setting state to %llu
Requesting to pull call %@ because its continuity state is different from call %@
Disconnecting call %@ because its continuity state is different from call %@
An endpointIDSDestination %@ is present for call %@ so pushing all hosted calls to that destination
Starting break before make timer of %lfs for call: %@
Disconnecting call because video call is still sending and break before make timeout fired: %@
Setting uplink muted for RTT call %@
[WARN] Store demo mode enabled. Limiting certain calls
Starting call duration limit timer as we are in a retail environment
Stopping call duration limit timer
Disconnecting restricted calls because the limited call duration timer fired: %@
Found active call needing hold music: %@
Hold music enabled - call is active so muting uplink and downlink
Hold music disabled - unmuting uplink and downlink
Created status bar assertion %@ with pid %d and statusString %@
Successfully acquired status bar assertion: %@
Failed to acquire status bar assertion: %@
Status bar assertion invalidated: %@
Invalidating status bar assertion: %@
Creating IDSGroupSession with options: %@
preferences: %@
participantInfo: %@
self: %@ not running pending blocks yet because self.hasStarted=%d self.hasReceivedAccept=%d self.isInitiator=%d
self: %@ running block %@ with transport %@ and %@ accept payload data
self: %@ pending block on transport availability: %@
[WARN] Transport availability block timed out: %@
Session %@ is not connected and waitUntilConnected is YES. Pending data
Session %@ is not connected but waitUntilConnected is NO. Sending data
Session %@ is connected. Sending data
Session %@ is ending/ended. Dropping data on the floor
self: %@ data: %@
Setting session %@ to ending for prepareToEnd
Not setting session %@ to ending for prepareToEnd because session is not connected
Received invitation ACCEPT with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation CANCEL with data for session %@ from (fromID=%@) destination %@ device %@
Received invitation DECLINE with data for session %@ from (fromID=%@) destination %@ device %@
Received session MESSAGE for session %@ from (fromID=%@) destination %@ device %@
thumperCallingAllowedOnDefaultPairedDeviceDefault keyExists: %d isAllowed: %d
Setting %@ default to %d
Error synchronizing NPS defaults: %@
Posting Thumper available notification on secondary device.
Not posting Thumper available notification on secondary device because Thumper is also enabled already.
Dismissing Thumper available notification on secondary device.
Check if devices should be enrolled now that Thumper is enabled.
Displaying Thumper enabled disclaimer on secondary device.
Dismissing Thumper enabled disclaimer on secondary device.
Check if devices should be enrolled now that the default paired device changed.
Thumper support default was %d and current value is now %d
Thumper enabled default was %d and current value is now %d
Default paired device unique ID was %@ and is now %@
Setting Thumper calling allowed on default paired secondary device because Thumper is enabled and we have a default paired device that isn't allowed for Thumper
Checking to see if any devices have been removed from this iCloud account.
Device with the uniqueID %@ will be unpaired from Thumper because it is no longer on the IDSService.
Show a reminder to the user that thumper is now available.
User requested to Turn On Thumper calling
[WARN] Not adding user notification because we are already displaying one
Removing existing reminder notification
Show a disclaimer to the user about their emergency address info now that thumper is enabled.
Emergency Address disclaimer: Preferences button pressed, open URL (%@).
Removing existing emergency address disclaimer
Initializing %@
FaceTime Audio availability is %ld. FaceTime Video availability is %ld
Initialized %@
Active accounts changed for service %@: %@
Received caller ID changed notification: %@
Received service availability changed notification: %@
Received devices changed notification: %@
FaceTime iCloud account is %@ (isActive=%d, profileID=%@) and relay iCloud account is %@ (isActive=%d, profileID=%@)
Choosing outgoingRelayCallerID based on FaceTime caller ID %@ and available outgoing relay caller IDs %@
Outgoing Caller ID %@ does not appear to be a phone number (%d) or is not in our list of available outgoing relay Caller IDs (%d). Sorting the aliases and picking the first one that satisfies the aforementioned requirements: %@
No aliases appear to be a phone number either and exist in our list of available outgoing relay Caller IDs. Sorting the available outgoing relay Caller IDs and picking the first one: %@
Outgoing Caller ID is %@
streamPreferences: %@
_CTServerConnectionCarrierSettingsCopyValue - encountered error %d %ld
Starting prevent detach after emergency call timer with timeout of %lu seconds. Marking emergency callback possible
Prevent detach after emergency call timer fired. Marking emergency callback as no longer possible
XPC connection interrupted from client %@
XPC connection invalidated from client %@
dialRequest: %@
Could not determine UUID for FaceTime app bundle identifier %@
Setting disconnected reason to call failed because CSDIDSDualSession ended reason is %ld for call %@
Using call ended reason answered elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason declined elsewhere because CSDIDSDualSession ended reason is %ld
Using call ended reason unanswered because CSDIDSDualSession ended reason is %ld
Using call ended reason remote ended because CSDIDSDualSession ended reason is %ld
Setting disconnected reason to call failed because CSDAVConference ended reason is %ld for call %@
Using call ended reason remote ended because CSDAVConference ended reason is %ld
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@
[WARN] Disabling key exchange because %@ default is set to YES
videoAspectRatioDescriptor: %@
Canceling session
Declining session
Stopping conference
Ending session
for call %@
Setting isSendingAudio to %d for chat %@
Conference has not been created yet. Updating shouldStartAudioPaused to %d
Setting isSendingVideo to %d for chat %@
Conference has not been created yet. Updating shouldStartVideoPaused to %d
Setting relaying from %d to %d for chat %@
transport: %@
sessionStarted: %@
Not starting connection because conference state is %d
session %@ invitationSentToPushTokens %@ shouldBreakBeforeMake %d
session %@ endedWithReason %d
session %@ receivedInvitationAcceptWithData %@
Not starting connecting because session state is %d and conference state is %d
Ignoring incoming message since message with type=%@ was not invite.
[WARN] Ignoring incoming accept since accompanying message was nil
session %@ receivedInvitationDeclineWithData %@
session %@ receivedInvitationCancelWithData %@
session %@ receivedData (data is %@)
[WARN] First frame not received after %f seconds for %@
reason=%ld error=%@
DND changed to %d
[WARN] Timed out waiting for BBNotificationBehaviorShouldPresentNotificationFromSenderWithHandler. Defaulting isDestinationIDAllowedThroughDoNotDisturb to YES
Handling %@ by preparing connected sessions to end
Handling %@ by ending ending sessions
Updating dialingIDSDevice using device list %@
A paired device exists, so using that as the dialing device: %@
[WARN] We found two devices with matching linkedUserURIs (arbitrarily choosing the first): %@ and %@
A device exists with a linkedUserURI that matches Caller ID %@, so using that as the dialing device: %@
[WARN] Could not find a dialingIDSDevice. No paired devices exist and no devices that support phone calls and have a linkedUserURI for %@ exist.
Could not retrieve local invite dictionary for message: %@
(IDSMessaging Host->Client) sendIncomingCallMessageToClientForCall: %@
Call cannot be answered. Only notifying the paired device
[WARN] Failed to prepare conference for call %@. Not sending incoming call message to relay clients
Not sending out incoming call invitation because call is no longer ringing: %@
(IDSMessaging Host->Client) sendCallDialedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallAnsweredElsewhereMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallDisconnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendCallConnectedMessageToClientForCall: %@
(IDSMessaging Host->Client) sendResetWantsHoldMusicMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateCallDisplayContextMessageToClientForCall: %@
(IDSMessaging Host->Client) sendUpdateRemoteUplinkMutedCallMessageToHostForCall: %@
(IDSMessaging Host->Client) sendUpdateCallModelMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDeviceUnavailableMessageToClient
(IDSMessaging Host->Client) sendPullRelayingCallsMessageToClient
(IDSMessaging Host->Client) sendResetStateMessageToClient
(IDSMessaging Host->Client) sendHardPauseAvailabilityMessageToClientForState %d digits: %@
(IDSMessaging Host->Client) sendUpdateRemoteCallStateMessageToClient
(IDSMessaging Host->Client) sendCallStartedConnectingMessageToClientForCall: %@
(IDSMessaging Host->Client) sendDialCallFailedForUniqueProxyIdentifier: %@
(IDSMessaging Host->Client) sendPushCallsMessageToClientDestination: %@
(IDSMessaging Host->Client) sendUpdateCallContextMessageToClient
(IDSMessaging Host->Client) sendNeedsManualInCallSoundsChangeMessageToClientForCall: %@
(IDSMessaging Host->Client) sendInvitationSentMessageToClientForCall: %@
(IDSMessaging Client->Host) sendDialCallMessageToHostForCall: %@
No dialing IDS device found. If we aren't already in a session, this dial call attempt will fail.
Failed to prepare conference for call %@. Disconnecting call with conference failed
Not sending out dial call invitation because call is no longer sending: %@
(IDSMessaging Client->Host) sendAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendUnholdCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendGroupCallMessageToHostForCall: %@ otherCall: %@
(IDSMessaging Client->Host) sendUngroupCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendSwapCallsMessageToHost
(IDSMessaging Client->Host) sendEndActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendEndHeldAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendHoldActiveAndAnswerCallMessageToHostForCall: %@
(IDSMessaging Client->Host) sendDisconnectCurrentCallAndActivateHeldToHost
(IDSMessaging Client->Host) sendDisconnectAllCallsToHost
(IDSMessaging Client->Host) sendSendHardPauseDigitsMessageToHost
(IDSMessaging Client->Host) sendRequestCallStateMessageToHost
(IDSMessaging Client->Host) sendPullCallsMessageToHost
[WARN] Failed to prepare conference while pulling calls
(IDSMessaging Client->Host) sendPushRelayingCallsMessageToHostForSourceIdentifier: %@
(IDSMessaging Client<->Host) sendSetUplinkMutedCallMessageForCall: %@ uplinkMuted: %d
(IDSMessaging Client<->Host) sendSuppressRingtoneMessageForCall
(IDSMessaging Client<->Host) sendUpdateSystemVolumeForCall: %@
Handle incoming %@ message: %@
Messaging device can't receive relayed calls ...
... and we were told to decline the session invite. Declining incoming %@ message: %@
... and we were told not to decline the session invite. Ignoring incoming %@ message: %@
[WARN] Setting should ignore session to YES for %@ message because message is from a guest destination and this device is not an AudioAccessory
[WARN] Setting should ignore session to YES because TUICFInterface allowCall = NO for destinationID %@ and provider %@
[WARN] Setting should ignore session to YES because a call exists with sending status: %@
[WARN] Setting should ignore session to YES because relay is not preferred, message service is TUCallServiceTelephony, and isDirectTelephonyCallingCurrentlyAvailable is YES
[WARN] Setting should ignore session to YES because relay is not preferred, message service is TUCallServiceFaceTimeAudio, and isFaceTimeAudioAvailable is YES
[WARN] Setting should ignore session to YES because no calls exist with an endpoint on the current device: %@
Initializing CSDDaemon
Launched by IMDaemon notification
Launched by application installed notification
Launched by application uninstalled notification
Could not create notification for XPC event %@
Caught SIGINFO. Dumping debug info.
Caught SIGUSR1
Caught SIGUSR2
Initialized CSDDaemon
Calling xpc_transaction_exit_clean() due to language change
Used country code '%@' to determine international phone number representation: %@
Invite received for session %@ account %@ from (fromID=%@) with data: %@
Declining this invite because we found a sending chat with the same destination: %@
Incoming call was denied with error %@ so ignoring chat: %@
Ignoring incoming invite since no available network is allowed (isWiFiAvailable=%d isWiFiAllowed=%d isCellularDataAvailable=%d isCellularDataAllowed=%d)
Ignoring incoming invite since message with type=%@ was not an invite.
[WARN] Ignoring incoming invite since accompanying message was nil
provider: %@
Calling answer on chat %@
Not accepting invitation to call %@ since it is already Connected
Calling end on chat %@
Setting sendingAudio to YES for chat %@
Setting sendingAudio to NO for chat %@
Failing answer call action for call because it disconnected before connecting: %@
[WARN] called for session %@ that was not the initiator (%d) or that already had a version set (%d)
Session %@ is waiting. Sending invitation
Session %@ is not waiting. Not sending invitation
Session %@ is waiting. Accepting invitation
Session %@ is not waiting. Not accepting invitation
Session %@ is waiting. Canceling invitation
[WARN] Asked to cancel invitation with non-nil data and a concrete cancel reason, but that combination is unsupported
Session %@ is not waiting. Not canceling invitation
Session %@ is waiting. Declining invitation
Session %@ is not waiting. Not declining invitation
Session %@ started (shouldUseSocketForTransport: %d socket: %d, destination: %@)
Received invitation SENT for session %@ with tokens %@ shouldBreakBeforeMake %d
Session %@ ended with reason %d: %@
Session %@ appears to have ended with an unanswered reason: %d
Session %@ appears to have ended with a local hangup reason: %d
Session %@ appears to have ended with a remote hangup reason: %d
Session %@ appears to have ended with an accepted elsewhere reason: %d
Session %@ appears to have ended with a declined elsewhere reason: %d
Session %@ appears to have ended with a fatal reason: %d
Session %@ appears to have ended due to mismatched networks reason: %d
Received invitation ACCEPT with data for session %@ from %@
Received invitation CANCEL with data for session %@ from %@
Received invitation DECLINE with data for session %@ from %@
Received session MESSAGE for session %@ from %@
Got metric container for metricId=%lu
Skipping reporting for metricId=%lu since no metric container was provided
Generated end call metric=%@
[WARN] Server bag does not support quick relay
Server bag is not loaded. Assuming we can make a FaceTime call over quick relay
Starting FaceTime IDS chat using account: %@ destinations: %@ options: %@
Cannot start FaceTime IDS chat using handle %@ because IDS destination was '%@'
Cannot start FaceTime IDS chat using service %@ because account is not active: %@
Tried to make an outgoing call when we already had a ringing call with the same destination: %@
Requesting transaction to answer already-ringing call
Error requesting transaction to answer already-ringing call: %@
Successfully requested transaction to answer already-ringing call
[WARN] Not attempting to use IDSSession for outgoing FT call because server bag does not allow quick relay invitations
[WARN] Could not find chat with UUID %@. All chats: %@
URL: %@, destinations: %@
Sending resource at URL %@ to destinations %@ with metadata %@
Successfully started sending resource with identifier %@
Failed to start sending resource with identifier %@: %@
%@ doesn't exist at client file url: %@
resourceURL: %@, metadata: %@
created temporary resource at: %@
unzipped resultURL: %@
error unzipping archive at URL %@
error creating temporary resource at url: %@ from url: %@ error: %@
successfully sent file with identifier: %@
failed to send file with identifier: %@, error: %@
[WARN] Unexpected nil clientFileURL for service: %@, account: %@, identifier: %@, didSendWithSuccess: %d, error: %@, clientFileURLByIdentifier: %@
Error moving url %@ to %@: %@
zip directory at URL: %@, output to: %@
Error zipping directory at URL %@ to output URL %@
placing unzip results into folder %@
new directory urls: %@, unzippedDirectoryURL: %@
Error retrieving contents of directory at URL %@: %@
operation: %ld, inputURL: %@, outputURL: %@
Error occurred during IMFileCopierOperation type %ld on inputURL %@ and outputURL %@
completed operation: %ld, inputURL: %@, outputURL: %@
Deleted contents at URL: %@
Failed to delete contents at URL %@: %@
deleting temporary file at URL: %@
Calling fetch completion block for call source with identifier %@
Waiting for call source with identifier %@
[WARN] Timed out waiting for call source with identifier %@ to check in
Found a matching extension for identifier %@ and containing app bundle %@: %@
Using existing extension call source: %@
Creating a new extension call source
Could not start call source %@: %@
[WARN] No matching extensions found for extension identifier %@ and bundle %@: %@
[WARN] Couldn't identify device type based on model identifier (%@)
User notification has been completed with response %lu and entered PIN %@
Showing service confirmation dialog to user
Requesting pin from iPhone
Canceling pin request from iPhone
PIN code entered with success=%d cancelled=%d
[WARN] No phone number URI found for primary device: %@. We will not be able to update the outgoing caller ID of this device to match the Thumper primary device.
Device Pin Exchange received an incoming approval request
[WARN] We received an incoming pin code alert from a non-telephony device: %@
User tapped cancel on the Pin Display Alert
Request for pin exchange failed
[WARN] Ignoring request to group call because it is already grouped: %@
[WARN] Ignoring request to ungroup call because it isn't grouped: %@
Setting uplinkMuted to %d for call %@
Started conference successfully for answered relay call %@
[WARN] Failed to start conference connection when answering call %@: %@
Conference connection stopped (cleanly=%d) for answered call %@: %@
Started conference successfully for dialed relay call %@
[WARN] Failed to start conference connection when dialing call %@: %@
Conference connection stopped (cleanly=%d) for dialed call %@: %@
Started conference successfully for pulled relay call %@
Failed to start conference connection when pulling call %@: %@
Conference connection stopped (cleanly=%d) for pulled call %@: %@
[WARN] Ignoring request to hold call because it is already held: %@
[WARN] Ignoring request to unhold call because it isn't held: %@
Entitlement for key '%@' is non-nil but is not an NSArray (%@), so assuming process with bundle identifier %@ has no entitlements
Received successful didSend for message with identifier %@ using account %@
Received unsuccessful didSend for message with identifier %@ using account %@: %@
Incoming message of type %@ from destination %@ device %@: %@
[WARN] Received message %@ from device %@ but it is not the default paired device
[WARN] No device found for fromID %@. All devices: %@
[WARN] Removing IDSSendMessageOptionForceLocalDeliveryKey key from sendMessage options because pairedDeviceUniqueIDOverride exists
Sending %@ message with identifier %@ and options %@ to destinations %@: %@
Successfully sent %@ message
Failed to send %@ message: %@
[WARN] No paired device, so unable to send message %@
photoURL: %@ videoURL: %@
saved photo with localIdentifier: %@ error: %@
providerDelegate: %@ callUUID: %@ dateStartedConnecting: %@
providerDelegate: %@ callUUID: %@ dateEnded: %@ endedReason: %ld failureContext: %@
Ending call with UUID %@ on other provider delegate %@ because ended reason was %ld
providerDelegate: %@ transaction: %@
[WARN] action: %@
Invited push tokens via IDS: %@ wasCanceled: %d
Could not initiate FaceTime call - No IDS or IMAV call returned for handle %@
Not sending IMAV invites because IDS session was canceled
[WARN] No provider delegate is managing call for action %@
Updated isRunning for %@ because new application state is %d
Asked to deliver token %@ to application %@
Asked to deliver payload %p to application %@
Delivering token %@ to application %@
Pending token delivery until a connection exists
Delivering %lu payload(s) to application %@
Invalidating process assertion for bundle ID %@ from completion handler
Pending payload deliveries until a connection exists
inCallServiceWantsStatusBarSuppressionState is now %llu
Initialized inCallServiceWantsStatusBarSuppressionState to %llu
inCallServiceApplicationState is now %d
Initialized inCallServiceApplicationState to %d
Setting muted to %d for %@
[WARN] setMuted:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Setting sending audio to %d for %@
[WARN] setSendingAudio:forIdentifier: no conference connection found for identifier %@. All conference connections: %@
Asked to prepare conference connection %@ remoteInviteDictionary %@
Not preparing a new conference because another conference already exists: %@
Attempted to prepare a new conference connection with the same identifier as an existing conference connection: %@
Asked to start conference for identifier %@
We already have an active conference. Invoking this conference connection's didStart immediately
Did not find conference connection to start for identifier %@. All conference connections: %@
Asked to update conference for identifier %@ with isUsingBaseband=%d disableAudio=%d
Updating device role for identifier %@ to %d
Did not find conference connection for identifier %@. All conference connections: %@
Setting conference connection active: %@
Asked to prepare to stop conference for identifier %@
Pausing audio and setting up timeout for conference connection: %@
It's been %fs since asked to prepare to stop conference and conference connection still exists: %@. Forcefully cleaning up all conference connections for conference %@
Asked to stop conference for identifier %@
Cleaning up conference connection %@
Posting %@
reason: %ld error: %@
Relay conference ended in failure (reason: %ld): %@
Setting up close connection timeout because conference ended reason was normal
[WARN] Timed out waiting for conference %@ to close connection after receiving end
[WARN] Unable to get URL for filename '%@'
[WARN] Unable to get standardized URL for URL '%@'
Setting up Pin Exchange controller
[WARN] nil deviceID passed in to 
Thumper - received request to enroll device ID %@ into Thumper
[WARN] Could not unenroll device as secondary device could not be identified
Requesting PIN from device %@
[WARN] accountsSupportSecondaryCalling=NO. Displaying mismatched accounts notification
Canceling all PIN requests
[WARN] Could not find device for unique ID %@
The entered PIN code is correct
[WARN] The entered PIN code is incorrect, could not register device.
The user entered no code... or the code entered was not an NSString
We were unable to send the PIN to the other device to be displayed, Sorry
Sending a PIN code to device %@ to display to enroll them into Thumper
[WARN] Ignoring request to send PIN code because we already have one pending for device with unique ID %@
Sending IDS action %@ to device %@ with message %@
Thumper IDS action sent to device with success: %@ error: %@ identifier: %@
[WARN] Displaying PIN error notification
[WARN] Displaying mismatched accounts notification
[WARN] Displaying slots full notification
Received message for service %@ from device %@ (isHSATrusted=%d): %@
Ignoring pin request: There is already a pending pin request that has not yet completed.
Device requesting PIN is HSA trusted. Forgoing PIN exchange and enrolling the device immediately
Received didSendWithSuccess=YES for message with identifier %@
Received didSendWithSuccess=NO for message with identifier %@: %@
Initialized capability state: %@
Updating clients with new call capabilities state: %@
Updating paired host device state
TUCallCapabilitiesXPCServer - callCapabilitiesState request from %@
TUCallCapabilitiesXPCServer - setWiFiCallingEnabled: %d
TUCallCapabilitiesXPCServer - setWiFiCallingRoamingEnabled: %d
TUCallCapabilitiesXPCServer - setVoLTECallingEnabled: %d
TUCallCapabilitiesXPCServer - setThumperCallingEnabled: %d
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d
TUCallCapabilitiesXPCServer - setThumperCallingAllowed: %d secondaryDeviceID: %@
TUCallCapabilitiesXPCServer - setThumperCallingAllowedOnDefaultPairedDevice: %d
TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d forDeviceWithID: %@
TUCallCapabilitiesXPCServer - invalidateAndRefreshWiFiCallingProvisioningURL
TUCallCapabilitiesXPCServer - invalidateAndRefreshThumperCallingProvisioningURL
TUCallCapabilitiesXPCServer - requestPinFromPrimaryDevice
Using the following account for the PIN request: %@
No device found for account %@. All accounts: %@
[WARN] No primary Thumper account found for PIN request. This should only happen because an account exists but has no empty device slots. All accounts: %@
TUCallCapabilitiesXPCServer - cancelPinRequestFromPrimaryDevice
Received device list changed notification: %@
Received device capability changed notification: %@
Received accounts changed delegate callback
Received FaceTime availability changed delegate callback
Received outgoingCallerIDChanged delegate callback
Received telephonyCallCapabilitiesChanged delegate callback
[WARN] Disabling support because %@ was set to YES
[WARN] Enabling support because %@ was set to YES
_setWiFiCallingEnabled: asking to change value from %d to %d
_setWiFiCallingEnabled: not updating value. Is currently %d and asked to set to %d
_setVoLTECallingEnabled: asking to change value from %d to %d
_setVoLTECallingEnabled: not updating value. Is currently %d and asked to set to %d
_setWiFiCallingRoamingEnabled: asking to change value from %d to %d
_setWiFiCallingRoamingEnabled: not updating value. Is currently %d and asked to set to %d
_setThumperCallingEnabled: asking to change value from %d to %d
_setThumperCallingEnabled: not updating value. Is currently %d and asked to set to %d
_setThumperCallingAccountID: asking to set account ID to %@
_setThumperCallingAllowed: asking to change value from %d to %d on secondary device ID %@
[WARN] _setThumperCallingAllowed: not updating value. No device slots remain for this device. Displaying notification to the user
_setThumperCallingAllowed: not updating value. Is currently %d and asked to set to %d on secondary device ID %@
[WARN] No cloud calling device appears to be a default paired device: %@. Ignoring setThumperCallingAllowedOnDefaultPairedDevice request
defaultPairedDeviceExists: %d
telephonyDeviceExists: %d, relayCapableDeviceExists: %d, defaultPairedDeviceExists: %d
_setRelayCallingEnabledDefault: changing value to %d
_setRelayCallingEnabled: Changing value from %d to %d
_setRelayCallingEnabled: Not updating value. Is currently %d and asked to set to %d
setRelayCallingEnabledDefault:forDeviceWithID: changing value to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Changing value from %d to %d for %@
_setRelayCallingEnabled:forDeviceWithID: Not updating value. Is currently %d and asked to set to %d for %@
Initialized pairedHostDeviceState: %@
[WARN] Could not de-serialize pairedHostDeviceStateData %@
[WARN] Saved pairedHostDeviceStateData was not an NSData type (class=%@): %@
No saved paired host device state found
Initializing new paired host device state with all values set to NO
dialRequest: %@ displayContext: %@
Coordinated alert request came back with bestIsMe: %d info: %@ error: %@
Starting coordinated alert request to determine ringtone un-suppression: %@
faceTimeIDSStatus for destinationID: %@ is: %@
Invalidating display context for %@
Posting %@ because relayClientTransport changed from %@ to %@ for %@
Posting %@ because mayRequireBreakBeforeMake changed from %d to %d for %@
Posting %@ because hasStartedOutgoing changed from %d to %d for %@
Posting %@ because hasAudioInterruption changed from %d to %d for %@
Pickable Routes Changed: %@
Preferred external route changed: %@
CarPlay is connected changed: %@
Media services were reset: %@
Audio device list changed
[WARN] No audio route collection found for audio category %@ and audio mode %@ for call %@
Found preferred AVAudioDevice: %@
Requesting initial state of CarKit's DND assertion
Received initial CarKit DND assertion: %d
Unable to fetch CarKit DND assertion: %@
Updating isCarModeActive to %d
Updating isCarPlayDeviceConnected to %d
groupUUD: %@ participantDestinationIDs: %@
groupUUID: %@ localParticipantDestinationID: %@ remoteParticipantDestinationIDs: %@
No conversation currently exists to join, so creating a new one
groupUUID: %@
[WARN] Could not find conversation with groupUUID %@. All conversations: %@
conversation: %@
Removing conversation: %@
conversation: %@ participant: %@
participants: %@ groupUUID: %@
[WARN] Unable to create audio route from route dictionary: %@
bundleIdentifier: %@
Acquiring process assertion for bundle identifier %@
Acquired process assertion for bundle identifier %@
Failed to acquire process assertion for bundle identifier %@
Incremented count of process assertion for bundle identifier %@ to %lu
Decremented count of process assertion for bundle identifier %@ to %lu
Initialized CXCallDirectoryStore for reading
Unable to initialize CXCallDirectoryStore for reading: %@
Device first unlock block invoked, attempting to initialize CXCallDirectoryStore...
Incoming call filter block called with sourceAddress: %@ providerIdentifier: %@
Disallowing call with sourceAddress %@ since _doNotDisturbAllowsCallFromSourceAddress returned NO
Blocking call with sourceAddress %@ since _callDirectoryAllowsCallFromSourceAddress returned NO
DND enabled: %d onCall: %d onEmergencyCall: %d
Even though DND is enabled, isDestinationIDAllowedThroughDoNotDisturb is YES for %@
phoneNumberVariants: %@
Error checking if call directory database contains blocking entry for source address %@: %@
Disallowing call from source address %@ since blocked by call directory
doNotDisturbChanged: %d
Call history changed: %@
Call connected. Marking all calls as read.
bytesOfDataUsed: %ld uniqueProxyIdentifier: %@ callHistoryIdentifier: %@
Call still exists so updating its bytes of data used: %@
No call still exists so updating bytes of data used via CHManager
Writing recent call to history: %@
Adding transaction object to transactionObjectsAwaitingCallHistory: %@
[WARN] Ending transaction for %@ because we timed out waiting for a call history database changed notification
handle: %@
There are %d missed calls to consider
Checking whether %@ matches this call
Call %@ with phone number destination ID %@ matches
%@ and %@ are NOT equal
Recent call (%@) matches handle (%@)
Deleting recent call with UUID %@ because provider %@ no longer exists
call: %@
self: %@ wiFiAllowed: %d
self: %@ cellularDataAllowed: %d
self: %@ cellularDataPreferred: %d
self: %@ clientUUID: %@
Updated currently broadcasted activity to %@
Queueing activity at beginning of queue: %@ (timeout: %f)
Queueing activity at end of queue: %@ (timeout: %f)
Dequeueing activity: %@
Registered to listen for activity type %d and dynamic identifier %@ and started listening for best app suggestions
Registered to listen for activity type %d and dynamic identifier %@
Unregistered to listen for activity type %d and stopped listening for best app suggestions
Unregistered to listen for activity type %d
Best app suggestion changed to %@
Firing delegate callback with activity type %d (userActivityType=%@) and dynamicIdentifier %@
self: %@ participant: %@
sessionProvider: %@ reason: %d error: %@
sessionProvider: %@ participantsInfo: %@ error: %@
sessionProvider: %@ error: %@
sessionProvider: %@ participantInfo: %@
Disconnecting all calls because wantsCallDisconnectionOnInvalidation=YES for %@
Relay capabilities enabled
Relay capabilities disabled
Disconnecting relaying call because relay calling is no longer enabled: %@
Disconnecting call being relayed elsewhere because relay calling is no longer enabled: %@
Disconnecting proxy call because a video call started connecting: %@
Updating clients with call: %@
Updating client %@ with disconnected call: %@ calls: %@
Updating client %@ with calls: %@
notification: %@
Pushing all calls to device with destination %@ because no preferred route is active and we found a call hosted here with its expected endpoint on another device: %@
Pulling all calls from relay client device because a preferred route is active and we found a call with an endpoint elsewhere: %@
Non-ringing call found on device: %@. All calls: %@
Ignoring ringing call status change for call %@ because relay calling is disabled (%d) or this call doesn't support relaying call state (%d) or a vehicle route is available (%d) or call is RTT (%d) or call is TTY (%d)
Not sending out call started connecting message because call is already disconnected: %@
Not sending out call connected message because call is already disconnected: %@
Sending voicemail call ended notification %@
Received nil call from outgoingCallFromProxyCall: for dial request %@ and displayContext %@
current calls are %@
[WARN] Ignoring request to performUngroupCall because the call is not grouped
[WARN] Ignoring request to performSwapCalls because either there is no active call (%d), there is no held call (%d), or an active call exists that cannot be held (%d)
Changed sourceIdentifier of answerRequest to %@
   ... sending calls were found so adding them to list of calls to disconnect: %@
   ... no sending calls were found so adding all active calls to list of calls to disconnect: %@
   ... and adding held calls to the list of calls to unhold: %@
   ... no sending or active calls were found so adding all held calls to list of calls to disconnect: %@
   ... and moving call %@ from call to unhold to call to disconnect because a disconnected call from the same provider doesn't support unambiguous multi-party state: %@
Handoff context did not include any handoff payload. Assuming this is for a relay call
[WARN] Ignoring request to performPushHostedCallsToDestination %@ because not all calls are hosted here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because not all calls are not hosted here and not an endpoint here and relayable. All calls: %@
[WARN] Ignoring request to performPullHostedCallsFromPairedHostDevice because no paired device exists
Disconnecting call with disconnected reason %d: %@
Disconnecting call normally since it was outgoing (%d) or was never connecting to relay (%d): %@
Not handling new call because the call was already handled: %@
Not handling new hosted call because it is neither ringing nor sending: %@
Dialed call: %@
answerRequest: %@
uniqueProxyIdentifier: %@
[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@
uniqueProxyIdentifier: %@ otherUniqueProxyIdentifier: %@
[WARN] Asked to group call with data source %@ with another call with a different data source %@
[WARN] Could not find call for uniqueProxyIdentifier %@ (%d) or could not find call for otherUniqueProxyIdentifier %@ (%d)
uniqueProxyIdentifier: %@ key: %d
sourceIdentifier: %@
userInfo: %@
uplinkMuted: %d
downlinkMuted: %d
destination: %@
proxyCall: %@
uniqueProxyIdentifier: %@ size: %@
uniqueProxyIdentifier: %@ presentationState: %d
request: %@
deviceUID: %@
uniqueIdentifier: %@
clientCapabilities: %@
Messaging connection ended for calls %@. Disconnecting calls that are an endpoint here but are not hosted here.
Messaging connection failed for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
Messaging connection could not establish link for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.
uniqueProxyIdentifier %@
hasBeenUnlocked changing from %d to %d
Device has been unlocked, so invoking block immediately
Device has not been unlocked, so storing block to be performed upon first unlock
Device has not been unlocked and is not yet observing device lock changes, so beginning to observe device lock changes
Handling %@
Asked to register bundle ID %@ with APS environment %@ for VoIP
[WARN] Ignoring voipRegister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
Asked to unregister bundle ID %@ with APS environment %@ from VoIP
[WARN] Ignoring voipUnregister request because either no bundleIdentifier could be determined (%d) or no environment could be determined (%d)
for connection: %@ publicToken: %@
Requesting token for topic %@ for bundle ID %@
[WARN] No environment found for connection %@
for connection: %@ token: %@ topic: %@ identifier: %@
for connection: %@ message: %@
Incoming message has topic: %@ bundleID: %@
Application %@ is not running. Will attempt to open the application and acquire a process assertion
Error opening bundle ID %@: %@
Dropping incoming message because the bundle ID failed to launch
Dropping incoming message because the bundle ID did not launch in time
Successfully opened application
Successfully took out process assertion
Dropping incoming message because the process assertion could not be acquired
Invalidating process assertion for bundle ID %@ from timeout
[WARN] No existing VoIP application found for bundle ID %@
[WARN] No APS connection found for environment %@
Registering application with bundle ID %@ and client %@ in environment %@
Not registering bundle ID %@ because it is not entitled (%d) or no APS connection exists for the environment (%d)
Environment was %@ but is now %@. Flushing out old registration with previous environment
Requesting token for topic %@
Setting enabled topics from %@ to %@
Unregistering application %@ in environment %@
Supplied environment was nil. Inferring it as %@
Disabling topic %@ and invalidating its token for connection %@
Disabling topic %@ and invalidating its token for all connections
activeGroups: %@
activeGroup: %@
Could not serialize participant dictionary representation into participants: %@
Loaded registered local providers: %@
Loaded registered relay providers: %@
Updating current providers to %@
Unregistering provider because its application is no longer installed: %@
[WARN] Skipping Sandboxing URL as the passed in URL turns out to be a symbolic link: %@
Updating provider from %@ to %@
Updating relay provider from %@ to %@
Device is passcode locked (%d) or existing call has different provider (%d). Indicating activity should open in background.
Device is NOT passcode locked. Indicating activity should open in foreground.
Opening user activity %@ for bundle identifier %@ with options %@
Successfully opened user activity %@ for bundle identifier %@
Failed to open user activity %@ for bundle identifier %@: %@
Starting audio for conversaton with group UUID %@
Reporting call failure for conversation with groupUUID %@ and callUUID %@
[WARN] Could not find conversation for end call action call UUID %@. self.conversationGroupUUIDsByCallUUID: %@ self.conversationManager.conversationsByGroupUUID: %@
action: %@
Failed to start conference connection for answered call %@: %@. Disconnecting call with relay failed
Transport did not become available for answered call %@
Conference connection ended for call %@. Disconnecting call normally
Conference connection failed for call %@: %@. Disconnecting call with relay failed
Not disconnecting call because this conference transport is %@ but the call's current relay client transport is %@
Received did stop for call that is already disconnecting/disconnected
_launchInCallApplicationForOutgoingCallOnHostIfNecessary
Dialing without relay because cannotRelayAudioOrVideoOnPairedDevice is set (%d) or a preferred route is active (%d)
Nil call returned when dialing call. Notifying client of failed dial call for %@
Nil call returned when dialing call. Notifying client of failed dial call for %@ 
Failed to start conference connection for dialed call uniqueProxyIdentifier %@: %@.
Conference connection stopped (cleanly=%d) for dialed call uniqueProxyIdentifier %@: %@
[WARN] Received %@ message, but the transport didn't become available
[WARN] Received %@ message, but we already have some non-relaying calls. Sending device busy message.
Answering without relay because wantsHoldMusic is set (%d) or cannotRelayAudioOrVideoOnPairedDevice is set (%d)
[WARN] Could not find call with other uniqueProxyIdentifier %@. All current calls: %@
No other unique proxy identifiers included. Assuming legacy behavior
[WARN] Could not find another call to group with. All calls: %@
No call was specified with SendHardPauseDigits message...
...so sending hard pause digits for call %@
...and no hosted call was found with TUHardPauseDigitsStateDigitsAvailable, so not sending hard pause digits
Setting sourceIdentifier to %@ for all calls before pulling
Opening URL for handled pushRelayingCalls message from client: %@
[WARN] Could not find any audio route with source identifier %@. Ignoring push relaying calls request
[WARN] Asked to pull relaying calls from client when no calls with an endpoint elsewhere exist. All calls: %@
Pushing hosted call: %@
Conference did not start successfully when pushing call. Resetting endpointOnCurrent device to YES for %@
Socket did not become available when pushing call. Resetting endpointOnCurrent device to YES for %@
Failed to prepare conference for pushing hosted call %@
[WARN] %@
[WARN] Bad activity type: %d
Registering for %@ user activity type and dynamic identifier %@
[WARN] Asked to register for activity type %d, but that is not supported
Unregistering for %@ user activity type and dynamic identifier %@
[WARN] Asked to unregister for activity type %d, but that is not supported
Error creating '%@' sandbox extension directory: %@
[WARN] Not loading registered providers because current registered providers version is %ld and minimum version is %d
registeredLocalProvidersByIdentifier: %@
registeredRelayProvidersByIdentifier: %@
Error while querying file attributes: %@
Error creating link to source URL '%@' with filename '%@': %@
Error removing links for filenames not in array (%@): %@
Could not deserialize data to TUCallProvider instance: %@
Archived object was of unexpected class %@: %@
Registered providers object was of unexpected class %@: %@
Request timed out for transaction ID: %@
[WARN] Received results for timed out transaction with ID %@
Received nil AVCSession from -[AVCSession initWithTransportToken:configuration:delegate:queue:]
participant: %@
AVCSession %@ server did disconnect
participantID: %@ didSucceed: %d error: %@
Failed to add participant with ID %@: %@
Failed to remove participant with ID %@: %@
didUpdate: %d configuration: %@ error: %@
Failed to update session with configuration %@: %@
self: %@ reason: %d
No primary Thumper account found for outgoingRelayCallerID %@ but requireMatchingCallerID is NO. Arbitrarily choosing last Thumper account from list: %@
CSDTelephonyCallCapabilities asked to end Emergency Callback Mode
Received kCTSettingCallCapabilitiesChangedNotification with userInfo %@
Received kCTCallManagementStateChangeNotification with userInfo %@
Received kCTEmergencyCallBackModeStatusNotification with userInfo %@
Updated call management state to %@
Updated telephony system capabilities to %@
Updated emergency callback mode to %d
Updated local Thumper account ID to %@ and local Thumper device ID to %@
Updated thumper accounts to %@
Error getting emergency callback mode (domain=%d, code=%d)
Error getting can set capability for %@ (domain=%d, code=%d)
Error getting device info for %@ calling (domain=%d, code=%d)
Error getting device list for %@ calling (domain=%d, code=%d)
Error getting system capabilities (domain=%d, code=%d)
Error getting call management state (domain=%d, code=%d)
Calling _CTServerConnectionSetCapabilityExtended() with capability: %@ value: %d capabilityInformation: %@
Error setting capability for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAddDevice() with capability: %@ uniqueID: %@
Calling _CTServerConnectionPhoneServicesRemoveDevice() with capability: %@ uniqueID: %@
Error adding/removing device for %@ calling (domain=%d, code=%d)
Calling _CTServerConnectionPhoneServicesAccountStatusChanged() and _CTServerConnectionSendBarrier() with capability: %@
This call can't relay audio/video (%d) or another call already has an endpoint elsewhere (%d). Setting endpoint to be elsewhere and not attempting to start a conference
Asked to dial call %@ but the host was unavailable
Asked to dial call %@ but the session was unavailable
[WARN] Transport did not become available when dialing call %@
Setting endpoint elsewhere for call because it can't be answered with audio or video relay: %@
Transport did not become available when answering call %@
Transport did not become available when pulling call. Resetting endpointOnCurrent device to NO for %@
Opening URL for handled pushHostedCalls message from host: %@
Disconnecting call with conference failed disconnected reason: %@
Not disconnecting call for failed conference start because it is not an endpoint here: %@
Not disconnecting call for conference didStop because it is not an endpoint here: %@
Adding %@ as an alias on account %@
Failed to add alias %@ to account %@. Validation status: %ld, validation error reason: %ld, vetted aliases: %@
Updating display name to %@ on account %@
Received IMDaemon connected notification: %@
Received display name changed notification: %@
Received preferred account changed notification: %@
Loaded last known FaceTime caller ID as %@
[WARN] Last known FaceTime caller ID value was not a string: %@ (class=%@)
Saving last known FaceTime caller ID as %@
FaceTime callerID changed from %@ to %@
Call status changed for call: %@
for call: %@
for message: %@
transactionGroup: %@
with action: %@ for call %@
route: %@
Reporting %@
%@ initialized for service %@ with the following devices: %@
Determining country code using account info %@
%@: Active accounts changed
%@: Devices changed
%@: Nearby devices changed
%@ updated state: defaultPairedDeviceExists=%d, pairedDeviceExists=%d, telephonyCapableDeviceExists=%d, relayCapableDeviceExists=%d, availableOutgoingRelayCallerIDs=%@ deviceNames="%@"
[WARN] Could not find session for identifier %@ to perform block on transport availability for. Dropping this block on the floor
No devices found that support call provider %@. Not creating a session.
Creating session to devices: %@
[WARN] destination for device returned a nil value, so we are going to skip creating a session to it: %@
Creating session to destinations: %@
Would have created a session to an empty destination set. Returning a nil session
Destroying session %@
Asked to prepare session to end for identifier %@
Asked to prepare connected sessions to end
Accepting session for identifier %@
Canceling/declining session for identifier %@
Asked to end ending sessions
sendMessageAndStartSessionIfNecessary for service %@ and message type %@: %@
Not starting a new session for identifier %@ because an active session for the identifier already exists: %@
No session exists. Starting a new one by inviting all devices that support provider %@
A session exists with a destination/device that supports provider %@: %@
We'll send this message via the existing session
Starting another session to the device
Starting another session to the destination
[WARN] A session exists, but it's with a device that doesn't support provider %@. Not starting a new session
Did not create session
sendMessageAndStartSessionIfNecessary for message type %@: %@
No IDSSession exists. Starting a new one by inviting to destination %@
[WARN] No IDSSession exists, and given device is nil. We can't start this session
A session exists: %@
Sending the message through the existing session
Starting a new session to the destination of the device with an active session
sendMessage:andAcceptInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session for identifier is %@
A current session already exists: %@
Sending the message through the current session
Sending the message through the current session and declining this one %@
No current session already exists, so sending the message through this session %@
Could not determine session to accept for identifier %@ and message %@. All sessions: %@
sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier for identifier %@ and message type %@: %@
Session has multiple identifiers: %@. Removing identifier %@ and not canceling/declining
_sendMessage:andCancelInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
_sendMessage:andDeclineInvitationIfNecessaryForIdentifier for session %@ and message type %@: %@
for message type: %@ identifier: %@ waitUntilConnected: %d: %@
sendMessage through session %@ for message type %@: %@
Not sending message because protocolVersionCustomizationBlock's preventMessageSend was set to YES for message type %@: %@
No session available to send message type %@: %@
Invite received for session %@ from (fromID=%@) destination %@ device %@ with message %@ (timestamp: %f)
... and it's from the same destination that we have an active session with (%d) or it's from the same device that we have an active session with (%d) or we don't have a session (%d)
... so we are going to handle the session's message
... but we were told to ignore the invite
... but there was no accompanying message so just ignoring the invite
... but it is from a different device than the one that we have an active session with
... and we were told to decline the invite
... and we were NOT told to decline the invite, so just ignoring it
Session ended with reason %d
Notifying delegate of connection end
[WARN] Notifying delegate of connection failure
[WARN] Notifying delegate that connection could not establish link
Not notifying delegate of messenger connection end because a different active session with the same identifier exists: %@
Received invitation accept with no data payload.
Received invitation cancel with no data payload. Assuming the invitation was answered elsewhere
Received invitation decline with no data payload. Assuming invitation was accepted by sending a message through another session
videoStreamToken: %ld
Moments XPC connection interrupted from client %@
Moments XPC connection invalidated from client %@
handle disconnect for client: %@
mediaType: %d, token: %ld
Successfully started AVCMomentsRequest: %@, transactionID %@
Failed to start AVCMomentsRequest: %@, error: %@
Asked to start moments request with invalid media type %d
ended request: %@, error: %@
will register for token: %ld, remoteIDSDestination: %@
registered stream %ld to moments: %@ with capabilities: %@
unexpected supportedMediaTypes: %@, moments: %@, streamToken: %ld
[WARN] FaceTime Photos availability is %d but remoteIDSDestination is nil so changing availability to Unavailabile
FaceTime Photos availability is %d
returning registered session: %@ for streamToken: %ld
unregister stream token: %ld
didFinish request: %@, error: %@
new capabilities: %u
didStartProcessing request: %@, error: %@
didEndProcessing request: %@, url: %@, error: %@
moment server disconnected: %@
fileTransferer: %@, url: %@
Received moments resource with missing transaction ID in metadata: %@
file url: %@ was not sent successfully
Preserving file at URL: %@
Could not retrieve contents of dictionary at URL %@: %@
unregistered token: %ld
will clean up for moment: %@
delaying cleanup because moment is still registered: %d or has outstanding requests: %d
resultURL: %@, request: %@, remoteIDSDestination: %@
saving live photo with photo url: %@ video url: %@
Error saving resources with photo url: %@ video url: %@
momentDescriptor: %@
Initializing AVConference with client UUID %@
[WARN] Error calling getIsAudioPaused: %@
Setting pause audio to %d for %@
[WARN] Error calling setPauseAudio: %@
[WARN] Error calling getIsVideoPaused: %@
Setting pause video to %d for %@
[WARN] Error calling setPauseVideo: %@
Setting conference visual rectangle of size %@ for %@
Setting conference state %@ for %@
Setting local portrait aspect ratio %@ and local landscape aspect ratio %@ for %@
Failed to initialize a new call with device role %d. Got callID=%ld
Starting AVConference connection with isCaller=%d callID=%ld remoteInviteDictionary=%@ capabilities=%@ destination=%@
Starting AVConference connection with isCaller=%d callID=%ld capabilities=%@ socket=%d
Stopping AVConference with callID=%ld
Canceling AVConference with callID=%ld
conference=%@ didStartSession=%d userInfo=%@
callID=%ld error=%@
callID=%ld error=%@ callMetadata=%@
callID=%ld
screenAttributes=%@ callID=%ld
videoAttributes=%@ callID=%ld
callID=%ld didPauseAudio=%d error=%@
didPause=%d callID=%ld
[WARN] callID=%ld isStalled=%d
AVConference server died
callID=%ld parameters=%@
callID=%ld isDegraded=%d isRemoteVideo=%d
[WARN] callID=%ld isNetworkBad=%d
callID=%ld didReceiveData=%@
Start call action fulfilled: %@
Start call action failed: %@
Answer call action fulfilled: %@
Answer call action failed: %@
End call action fulfilled: %@
End call action failed: %@
Set held call action fulfilled: %@
[WARN] Set held call action failed but reverting state is allowed: %@
Set group call action fulfilled: %@
Could not find call to group with for set group call action: %@. All call: %@
[WARN] Set group call action failed but reverting state is allowed: %@
Set held call action failed and reverting state is not allowed: %@
Play DTMF call action fulfilled: %@
Play DTMF call action failed: %@
Set sending video call action fulfilled: %@
Set sending video call action failed: %@
Set muted call action fulfilled: %@
Set muted call action failed: %@
Set tty call action fulfilled: %@
Set tty call action failed: %@
Action fulfilled: %@
Action failed: %@
[WARN] Not allowing requested start call action because call source %@ is at the maximum call group count of %lu: %@
[WARN] Not allowing requested start call action because call with same UUID already exists: %@
[WARN] Not allowing requested transaction because no call was found for call UUID %@ and call source %@. All calls: %@
[WARN] Not allowing requested transaction because action is not allowed to be requested: %@
[WARN] Not allowing requested transaction because it is empty: %@
Allowing requested transaction: %@
[WARN] Not allowing requested transaction: %@
Dialing new call due to requested start call action: %@
Adding supplemental set held call action for existing call %@
Could not serialize handoffActivityUserInfo into a CXHandoffContext: %@
[WARN] Could not determine call source for dial request: %@. All call sources: %@
Asked to perform action %@ for call %@
Asked to perform start call action %@ for call %@
Sending %@ for existing call with uniqueProxyIdentifierUUID=%@ callGroupsAllowsHold=%d supportsHolding=%d
Call source %@ registered with configuration %@
Received add incoming call request from call source %@ with UUID %@ update %@
[WARN] Returning error for add incoming call request because it was on the block list
[WARN] Returning error for add incoming call request because it is a video call and we are connected to CarPlay (%d) or Car Mode is active (%d)
[WARN] Returning error for add incoming call request because call did not pass DND filter. CarMode (%d) BT Audio Route (%d)
[WARN] Returning error for add incoming call request because it is a direct call to a secondary device and relay calling is preferred over direct calling
[WARN] Ignoring add incoming call request because a call already exists with the same call UUID: %@
Call source %@ updated call with UUID %@ with update %@
[WARN] No call found for call source %@ and UUID %@. All calls: %@
Call source %@ ended call with UUID %@ with ended at date %@ with reason %ld failure context %@
Setting callGroupUUID to nil for orphaned grouped call %@
[WARN] Call %@ already has a date ended
Call source %@ sent invitation for outgoing call with UUID %@ at date %@
[WARN] Call %@ already has a date started outgoing
[WARN] Call %@ is not outgoing
Call source %@ started connecting call with UUID %@ at date %@
[WARN] Call %@ already has a date started connecting
Call source %@ connected outgoing call with UUID %@ at date %@
[WARN] Call %@ already has a date connected
Call source %@ finished audio for call with UUID %@
Found call %@ for UUID %@, so setting hasAudioFinished
Did not find a call for UUID %@, so expediting deferred end interruption instead
Call source %@ received call with UUID: %@ crossDeviceIdentifier %@ bytesOfDataUsed %ld
Call source %@ received requested transaction %@
Call source manager %@ completed transaction group %@
Pull call action fulfilled: %@
Pull call action failed: %@
Could not find pulled call context for completed pull call action %@. All contexts: %@
Call action completed for call: %@
[WARN] Could not find call for completed call action: %@. All calls: %@
Action completed: %@
Call sources changed: %@
Ending call %@ since its backing call source %@ is no longer connected
Call controller host %@ requested transaction %@ for connection with identifier: %@ bundle: %@ extensionIdentifier: %@
Using call source %@ for requested transaction %@
[WARN] Not allowing requested transaction because no call source was found. All call sources: %@
Marking all calls as changed because providers changed
machServiceName: %@ newConnection: %@
Accepting XPC client for %@: %@
Rejecting client for %@ because it lacks the %@ capability: %@
Started tracking call: %@
Stopped tracking call: %@
Asked to answer call %@ while disconnecting calls %@ and holding calls %@
Asked to hold calls %@ while unholding calls %@
Asked to group calls %@ with calls %@
Asked to ungroup call %@ from other calls in group %@
Asked to disconnect call %@ while ungrouping call %@
Asked to disconnect all calls %@
Asked to disconnect calls %@ while holding calls %@ and unholding calls %@ and ungrouping calls %@
Asked to set uplink muted to %d for calls %@
handleCallStatusChanged %@
bytesOfDataUsed: %ld callHistoryIdentifier: %@
[WARN] Invalid TULabeledHandle generated from CXLabelHandle %@
Asked to hold relay calls %@ while unholding relay calls %@
Asked to answer relay call %@ while disconnecting active relay calls %@
[WARN] Ignoring request to answer call because canBeAnswered is NO: %@
Asked to answer relay call %@ while disconnecting held relay calls %@ and holding relay calls %@
Asked to answer relay call %@ while holding relay calls %@
Asked to group relay calls %@ with relay calls %@
Asked to ungroup relay call %@ from other relay calls in group %@
Asked to disconnect relay call %@ while ungrouping relay call %@
Asked to disconnect relay calls %@
Asked to disconnect relay calls %@ while holding relay calls %@ and unholding relay calls %@ and ungrouping calls %@
Received notification: %@
[WARN] Received notification %@ for unrecognized trigger
Device first unlock block invoked, initializing CXCallDirectoryManager...
XPC activity checked in. Criteria: %@
Setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Error setting activity state to XPC_ACTIVITY_STATE_CONTINUE
Beginning daily maintenance with activity %@
Successfully compacted store
Error compacting store: %@
Setting activity state to XPC_ACTIVITY_STATE_DONE
Error setting activity state to XPC_ACTIVITY_STATE_DONE
Error synchronizing call directory extensions: %@
Successfully synchronized call directory extensions
Extensions changed for Call Directory NSExtensionManager %@, but we do not have a CXCallDirectoryManager (perhaps because device is not yet unlocked) so cannot synchronize
0ESC17TURouteDeviceTypeO
SC33CSDAudioInterruptionOperationModeO
SC22AXSDefaultRouteForCallV
rawValue
SC017TUCallSoundPlayerB4TypeO
SC17TUCallSoundRegionO
SC16ComparisonResultO
SC20RPCompanionLinkFlagsV
SC29CSDCallCenterObserverTriggersV
SC32CSDAudioInterruptionProviderTypeO
SC12TUCallStatusO
SC24TUCallDisconnectedReasonO
SC30AVAudioSessionSetActiveOptionsV
SC35AVAudioSessionCallActivationTriggerO
So14NSNotificationC4NameV
_rawValue
SC30AVAudioSessionInterruptionTypeO
SC29TLAlertPlaybackCompletionTypeO
SC7CNErrorV
_nsError
SC7CNErrorV4CodeO
SC21CSDTTYTransportMethodO
SC12FTDeviceTypeO
13callservicesd28AnyAudioInterruptionProviderC
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
13callservicesd41AudioInterruptionProviderSetActiveOptionsV
rawValue
13callservicesd25AudioInterruptionPriorityO
default
high
13callservicesd35AudioInterruptionProviderIdentifierO
proxy
local
13callservicesd32AudioInterruptionProviderFactoryC
13callservicesd17NearbyDeviceRouteV
uniqueIdentifier
name
deviceType
isCurrentlyPicked
idsDestination
13callservicesd19HoldMusicDescriptorV
13callservicesd29SoundDescriptorActionResolverC
callCenterObserver
UUUUUU
13callservicesd33AVAudioClientInterruptionProviderC
activeDescriptor
13callservicesd34AVAudioSessionInterruptionProviderC
audioSession
isLocal
_activationContext
activeDescriptor
13callservicesd15ProcessObserverC
queue
processIdentifierByBundleIdentifier
applicationMonitor
applicationStateChanged
13callservicesd25NearbyDeviceRouteProviderC
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
callCenterObserver
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
13callservicesd16DirtyCallManagerC
callChanged
queue
dirtyCallsArray
dirtyCallsSet
13callservicesd22AudioActivationContextV
callOutgoing
accessibilityDefaultRoute
audioSourceKey
13callservicesd21SoundDescriptorActionO
beginOrUpdate
preserve
13callservicesd15AudioControllerC
queue
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
notificationCenter
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
13callservicesd18CSDAudioControllerC
audioController
13callservicesd29AudioInterruptionProviderPoolC
factory
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
13callservicesd18MomentsUsageReportC
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
SC21TUMomentsAvailabilityO
13callservicesd37RingtoneProviderAlertPlaybackObserverC
didBeginPlaying
13callservicesd16RingtoneProviderC
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
13callservicesd34MomentsControllerLocalCapabilitiesC
13callservicesd15SoundDescriptorV
soundType
provider
isVideo
region
13callservicesd17HoldMusicProviderC
speechSynthesizerEventHandler
activeDescriptor
speechSynthesizer
audioPlayer
13callservicesd17HoldMusicProviderC22SpeechSynthesizerEventO
finishedUtterance
startedUtterance
canceledUtterance
13callservicesd24MomentsControllerSessionC
moments
remoteIDSDestination
isRegistered
13callservicesd15RouteControllerC
_routesByUniqueIdentifier
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
queue
routeProviders
pendingRouteContext
SC29CSDCallCenterObserverTriggersV
rawValue
13callservicesd15RouteControllerC07PendingB7Context33_32B9A98993BD67CD3170F2EAE9C76ADBLLV
route
routeProvider
13callservicesd31IDSProviderDelegateCapabilitiesC
13callservicesd15AudioDescriptorV
interruptionDescriptor
interruptionDeferredEndDescriptor
ringtoneDescriptor
soundDescriptorAction
holdMusicDescriptor
discoveryModeDescriptor
13callservicesd18RingtoneDescriptorV
contactIdentifier
providerRingtoneSoundURL
13callservicesd13AudioResolverC
queue
callCenterObserver
ttyProviderObserver
deviceSupportsRingtone
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
13callservicesd13AudioResolverC7ContextV
call
triggers
13callservicesd39FaceTimeIDSProviderDelegateCapabilitiesC
13callservicesd23LocalAudioRouteProviderC
routesDidChangeHandler
audioRoutes
queue
localAudioSystemProvider
callCenterObserver
callAudioCategory
callAudioMode
callAudioInterruptionState
13callservicesd23LocalAudioRouteProviderC04CallC17InterruptionState33_6BD6E311DAED01995C4BD9EFC77AC0B5LLO
inactiveWithPrematurelySelectedRoute
inactive
active
13callservicesd19NearbyDeviceMonitorC
queue
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
13callservicesd27AudioInterruptionDescriptorV
providerType
category
mode
activationContext
priority
wantsHoldMusic
operationMode
activationStateObserver
13callservicesd27AudioInterruptionDescriptorV12ProviderTypeO
avAudioSession
avAudioClient
13callservicesd21DiscoveryModeProviderC
13callservicesd23DiscoveryModeDescriptorV
13callservicesd13SoundProviderC
activeDescriptor
player
13callservicesd38AudioInterruptionDeferredEndDescriptorV
callUUID
13callservicesd13CSDAVCMomentsC
moments
delegate
13callservicesd14MomentsRequestC
avcRequest
session
SC17TURouteDeviceTypeO
s16RawRepresentable_p
RawValue
SC33CSDAudioInterruptionOperationModeO
SC22AXSDefaultRouteForCallV
s6UInt32V
SC017TUCallSoundPlayerB4TypeO
SC17TUCallSoundRegionO
SC16ComparisonResultO
SC20RPCompanionLinkFlagsV
s25ExpressibleByArrayLiteral_p
ArrayLiteralElement
s10SetAlgebra_p
Element
s9OptionSet_p
SC29CSDCallCenterObserverTriggersV
SC32CSDAudioInterruptionProviderTypeO
SC12TUCallStatusO
s5Int32V
SC24TUCallDisconnectedReasonO
SC30AVAudioSessionSetActiveOptionsV
SC35AVAudioSessionCallActivationTriggerO
So14NSNotificationC4NameV
s21_ObjectiveCBridgeable_p
_ObjectiveCType
So8NSStringC
SC30AVAudioSessionInterruptionTypeO
SC29TLAlertPlaybackCompletionTypeO
SC7CNErrorV
10Foundation21_BridgedStoredNSError_p
Code
SC7CNErrorV4CodeO
10Foundation18_ErrorCodeProtocol_p
_ErrorType
SC21CSDTTYTransportMethodO
SC12FTDeviceTypeO
So8NSObjectC
13callservicesd25AudioInterruptionPriorityO
13callservicesd35AudioInterruptionProviderIdentifierO
x2id_t
13callservicesd41AudioInterruptionProviderSetActiveOptionsV
13callservicesd25AudioInterruptionProvider_p
13callservicesd28AnyAudioInterruptionProviderC
y13callservicesd27AudioInterruptionDescriptorVc
y13callservicesd41AudioInterruptionProviderSetActiveOptionsVc
13callservicesd27AudioInterruptionDescriptorVSgyc
13callservicesd33AudioInterruptionPriorityProvider_p
13callservicesd33AVAudioClientInterruptionProviderC
13callservicesd27AudioInterruptionDescriptorVIegi_
13callservicesd34AVAudioSessionInterruptionProviderC
13callservicesd18DescriptorProvider_p
DescriptorType
13callservicesd27AudioInterruptionDescriptorV
s25ExpressibleByArrayLiteral_p
ArrayLiteralElement
s16RawRepresentable_p
RawValue
s10SetAlgebra_p
Element
s9OptionSet_p
13callservicesd18DescriptorResolver_p
13callservicesd40AudioInterruptionProviderFactoryProtocol_p
13callservicesd32AudioInterruptionProviderFactoryC
AVAudioSessionInterruptionProviderType
13callservicesd34AVAudioSessionInterruptionProviderC
AVAudioClientInterruptionProviderType
13callservicesd33AVAudioClientInterruptionProviderC
13callservicesd17NearbyDeviceRouteV
SC17TURouteDeviceTypeO
So14IDSDestinationC
So8NSObjectC
13callservicesd32ChangeTrackingDescriptorResolver_p
13callservicesd19HoldMusicDescriptorV
13callservicesd29SoundDescriptorActionResolverC
So29CSDCallCenterObserverProtocol_p
13callservicesd33AVAudioClientInterruptionProviderC
13callservicesd27AudioInterruptionDescriptorVSg
13callservicesd33AVAudioClientInterruptionProviderC22audioSessionProperties026_AC6019F72BD68A780A110E9C0O5BB071LLs10DictionaryVySSypGAA05AudioD10DescriptorV03forS0_tF11WeakStringsL_V
13callservicesd27AudioInterruptionDescriptorV
So17DispatchSemaphoreC
13callservicesd18DescriptorProvider_p
DescriptorType
So14DispatchObjectC
13callservicesd34AVAudioSessionInterruptionProviderC
So14AVAudioSessionC
13callservicesd22AudioActivationContextVSg
13callservicesd27AudioInterruptionDescriptorVSg
13callservicesd18DescriptorProvider_p
DescriptorType
13callservicesd27AudioInterruptionDescriptorV
So8NSObjectC
13callservicesd23ProcessObserverProtocol_p
13callservicesd15ProcessObserverC
So8NSObjectC
So13DispatchQueueC
s10DictionaryVySSs5Int32VG
So26BKSApplicationStateMonitorC
ys5Int32V_s6UInt32VtcSg
s5Int32V
So17DispatchSemaphoreC
s5Int32VXb
s6UInt32VIeyBy_
s6UInt32VIegy_
s6UInt32V
13callservicesd15ProcessObserverCSgXw
So8NSNumberC
s10DictionaryVys11AnyHashableVypGSg
s5Int32Vs6UInt32VIeyByy_
So14DispatchObjectC
So7NSValueC
13callservicesd28IDSDeviceDestinationResolver_p
13callservicesd25NearbyDeviceRouteProviderC
So8NSObjectC
yycSg
y13callservicesd17NearbyDeviceRouteVc
Sbyc
So9IDSDeviceCSgSSc
So13DispatchQueueC
So29CSDCallCenterObserverProtocol_p
13callservicesd19NearbyDeviceMonitorCyxG
s3SetVy13callservicesd17NearbyDeviceRouteVG
So15CSDIDSTransportCSg
So7TURouteC
13callservicesd17NearbyDeviceRouteVSbs5Error_pIgcdzo_
13callservicesd25NearbyDeviceRouteProviderCySo21RPCompanionLinkClientCG
13callservicesd25NearbyDeviceRouteProviderCySo21RPCompanionLinkClientCGSgXw
13callservicesd17NearbyDeviceRouteV
IeyB_
So8NSStringCSo9IDSDeviceCSgIeyBya_
10ObjectiveC8ObjCBoolVIeyBd_
So9IDSDeviceC
So14DispatchObjectC
So15CSDIDSTransportC
So21RPCompanionLinkClientC
So8NSStringC
13callservicesd16DirtyCallManagerC
So8NSObjectC
ySo7CSDCallCcSg
So13DispatchQueueC
SaySo7CSDCallCG
s3SetVySo7CSDCallCG
So7CSDCallCIeyBy_
So7CSDCallC
So6TUCallC
So14DispatchObjectC
13callservicesd18DescriptorProvider_p
13callservicesd22AudioActivationContextV
SC22AXSDefaultRouteForCallV
SSSg
13callservicesd21SoundDescriptorActionO
13callservicesd15SoundDescriptorV10descriptor_t
13callservicesd15AudioControllerC14ProviderChange33_8DCBF92B346992DA9381CC4170A52B04LLO
yyc6action_t
13callservicesd15AudioControllerC
So13DispatchQueueC
13callservicesd29AudioInterruptionProviderPoolCyq_q0_q1_G
So18NotificationCenterC
8Dispatch0A8WorkItemCSg
s3SetVy10Foundation4UUIDVG
Sdyc
ypSg
13callservicesd18CSDAudioControllerC
So8NSObjectC
13callservicesd15AudioControllerCyAA0B8ResolverCAA0B27InterruptionProviderFactoryCAA014AVAudioSessioneF0CAA0h6ClienteF0CAA08RingtoneF0CAA05SoundF0CAA09HoldMusicF0CAA013DiscoveryModeF0CG
13callservicesd15AudioControllerCyAA0B8ResolverCAA0B27InterruptionProviderFactoryCAA014AVAudioSessioneF0CAA0h6ClienteF0CAA08RingtoneF0CAA05SoundF0CAA09HoldMusicF0CAA013DiscoveryModeF0CGSgXw
10Foundation12NotificationV
10Foundation12NotificationVXb
13callservicesd13AudioResolverC
13callservicesd15AudioDescriptorVSg
13callservicesd16RingtoneProviderC
13callservicesd13SoundProviderC
13callservicesd17HoldMusicProviderC
13callservicesd21DiscoveryModeProviderC
13callservicesd15SoundDescriptorV
13callservicesd15AudioDescriptorV
13callservicesd18RingtoneDescriptorV
10Foundation4UUIDV
13callservicesd17HoldMusicProviderC22SpeechSynthesizerEventO
So14DispatchObjectC
13callservicesd29AudioInterruptionProviderPoolC
s10DictionaryVys6UInt32Vq_G
13callservicesd18MomentsUsageReportC
So8NSObjectC
SC21TUMomentsAvailabilityO
13callservicesd37RingtoneProviderAlertPlaybackObserverC
So8NSObjectC
yycSg
13callservicesd21RingtoneProviderAlert_p
13callservicesd24RingtoneProviderProtocol_p
13callservicesd16RingtoneProviderC
So14CNContactStoreC
13callservicesd21RingtoneProviderAlert_pSg
So17DispatchSemaphoreC
13callservicesd21RingtoneProviderAlert_pSgSo20TLAlertConfigurationCc
13callservicesd37RingtoneProviderAlertPlaybackObserverCyc
IeyB_
13callservicesd18DescriptorProvider_p
DescriptorType
13callservicesd18RingtoneDescriptorV
So14DispatchObjectC
So20TLAlertConfigurationC
13callservicesd34MomentsControllerLocalCapabilitiesC
So8NSObjectC
13callservicesd15SoundDescriptorV
SC017TUCallSoundPlayerB4TypeO
So14TUCallProviderC
SC17TUCallSoundRegionO
So8NSObjectC
13callservicesd25HoldMusicProviderProtocol_p
13callservicesd17HoldMusicProviderC22SpeechSynthesizerEventO
13callservicesd17HoldMusicProviderC
So8NSObjectC
y13callservicesd17HoldMusicProviderC22SpeechSynthesizerEventOcSg
13callservicesd19HoldMusicDescriptorVSg
So19AVSpeechSynthesizerCSg
So13AVAudioPlayerCSg
13callservicesd17HoldMusicProviderC9Constants33_6BFC91A722E7789DA315D029A94A3B49LLV
13callservicesd17HoldMusicProviderCSgXw
13callservicesd18DescriptorProvider_p
DescriptorType
13callservicesd19HoldMusicDescriptorV
So19AVSpeechSynthesizerC
So13AVAudioPlayerC
13callservicesd24MomentsControllerSessionC
So8NSObjectC
So21CSDAVCMomentsProtocol_p
13callservicesd13RouteProvider_p
13callservicesd25DeselectableRouteProvider_p
13callservicesd15RouteControllerC07PendingB7Context33_32B9A98993BD67CD3170F2EAE9C76ADBLLV
So7TURouteC
13callservicesd15RouteControllerC
So8NSObjectC
s10DictionaryVySSSo7TURouteCG
yycSg
ySo7TURouteCcSg
So13DispatchQueueC
Say13callservicesd13RouteProvider_pG
13callservicesd15RouteControllerC07PendingB7Context33_32B9A98993BD67CD3170F2EAE9C76ADBLLVSg
13callservicesd15RouteControllerCSgXw
13callservicesd15RouteControllerCSgXwXb
So7TURouteCIeyBy_
IeyB_
s10DictionaryVySSSo7TURouteCGs5Error_pIgozo_
So14DispatchObjectC
So7CSDCallCSbIgxd_
So7CSDCallC
So6TUCallC
13callservicesd31IDSProviderDelegateCapabilitiesC
So8NSObjectC
13callservicesd15AudioDescriptorV
13callservicesd27AudioInterruptionDescriptorV
13callservicesd38AudioInterruptionDeferredEndDescriptorVSg
13callservicesd18RingtoneDescriptorVSg
13callservicesd21SoundDescriptorActionO
13callservicesd19HoldMusicDescriptorVSg
13callservicesd23DiscoveryModeDescriptorVSg
13callservicesd18RingtoneDescriptorV
SSSg
10Foundation3URLVSg
13callservicesd26DescriptorTrackingProvider_p
13callservicesd21AudioResolverProtocol_p
13callservicesd13AudioResolverC7ContextV
So7CSDCallC
SC29CSDCallCenterObserverTriggersV
13callservicesd13AudioResolverC
So13DispatchQueueC
So29CSDCallCenterObserverProtocol_p
So30CSDTTYProviderObserverProtocol_p
13callservicesd29SoundDescriptorActionResolverC
13callservicesd15AudioDescriptorVSg
y13callservicesd15AudioDescriptorVSg_ADtcSg
13callservicesd13AudioResolverCSgXw
13callservicesd18DescriptorResolver_p
DescriptorType
13callservicesd15AudioDescriptorV
13callservicesd32ChangeTrackingDescriptorResolver_p
UpdateContext
So6TUCallC
So14DispatchObjectC
13callservicesd39FaceTimeIDSProviderDelegateCapabilitiesC
13callservicesd31IDSProviderDelegateCapabilitiesC
13callservicesd24LocalAudioSystemProvider_p
13callservicesd23LocalAudioRouteProviderC04CallC17InterruptionState33_6BD6E311DAED01995C4BD9EFC77AC0B5LLO
So12TUAudioRouteC
13callservicesd23LocalAudioRouteProviderC
So8NSObjectC
yycSg
SaySo12TUAudioRouteCG
So13DispatchQueueC
So29CSDCallCenterObserverProtocol_p
SSSg
SaySo12TUAudioRouteCGXb
So17DispatchSemaphoreC
IeyB_
So7TURouteC
So14DispatchObjectC
13callservicesd12NearbyDevice_p
13callservicesd20NearbyDeviceProvider_p
13callservicesd19NearbyDeviceMonitorC
So8NSObjectC
So13DispatchQueueC
yycSg
s10DictionaryVySS10DeviceType13callservicesd06NearbyB8ProviderPQzG
So7NSErrorCSgIeyBy_
IeyB_
13callservicesd19NearbyDeviceMonitorCySo21RPCompanionLinkClientCGSgXw
So21RPCompanionLinkDeviceCIegi_
So21RPCompanionLinkDeviceCSC19RPDeviceChangeFlagsVIegiy_
So21RPCompanionLinkDeviceC
So21RPCompanionLinkDeviceCXb
13callservicesd19NearbyDeviceMonitorCySo21RPCompanionLinkClientCG
So21RPCompanionLinkClientC
DeviceType
So14DispatchObjectC
So7NSErrorC
SC19RPDeviceChangeFlagsV
13callservicesd40AudioInterruptionActivationStateObserver_p
13callservicesd27AudioInterruptionDescriptorV12ProviderTypeO
13callservicesd35AudioInterruptionProviderIdentifierOys6UInt32VG10identifier_t
13callservicesd27AudioInterruptionDescriptorV
SSSg
13callservicesd22AudioActivationContextVSg
13callservicesd25AudioInterruptionPriorityO
SC33CSDAudioInterruptionOperationModeO
13callservicesd40AudioInterruptionActivationStateObserver_pSg
13callservicesd29DiscoveryModeProviderProtocol_p
13callservicesd21DiscoveryModeProviderC
13callservicesd18DescriptorProvider_p
DescriptorType
13callservicesd23DiscoveryModeDescriptorV
13callservicesd23DiscoveryModeDescriptorV
13callservicesd21SoundProviderProtocol_p
13callservicesd13SoundProviderC
13callservicesd15SoundDescriptorVSg
So17TUCallSoundPlayerC
13callservicesd18DescriptorProvider_p
DescriptorType
13callservicesd15SoundDescriptorV
So8NSObjectC
13callservicesd38AudioInterruptionDeferredEndDescriptorV
10Foundation4UUIDV
13callservicesd13CSDAVCMomentsC
So8NSObjectC
SQySo10AVCMomentsCG
So21CSDAVCMomentsDelegate_pSgXw
So10AVCMomentsC
So21CSDAVCMomentsDelegate_p
13callservicesd22ASCIIStringConvertible_p
13callservicesd14MomentsRequestC
So8NSObjectC
So20CSDAVCMomentsRequest_p
13callservicesd24MomentsControllerSessionC
default
high
proxy
local
rawValue
boxed
_beginOrUpdate
_end
_resetState
_activeDescriptor
uniqueIdentifier
name
deviceType
isCurrentlyPicked
idsDestination
callCenterObserver
activeDescriptor
audioSession
isLocal
_activationContext
activeDescriptor
queue
processIdentifierByBundleIdentifier
applicationMonitor
applicationStateChanged
routesDidChangeHandler
didPickRouteHandler
didDeselectAllRoutesHandler
supportsPrimaryCalling
hasRelayiCloudAccount
idsDeviceForIDSDeviceIdentifier
queue
callCenterObserver
nearbyDeviceMonitor
idsDeviceDestinationResolver
nearbyDeviceRoutes
activeRelayClientTransport
currentCallsSupportNearbyDevices
callChanged
queue
dirtyCallsArray
dirtyCallsSet
callOutgoing
accessibilityDefaultRoute
audioSourceKey
beginOrUpdate
preserve
begin
queue
resolver
audioInterruptionProviderPool
ringtoneProvider
soundProvider
holdMusicProvider
discoveryModeProvider
notificationCenter
deferredEndWorkItem
pendingExpeditedEndInterruptionUUIDs
endInterruptionDelay
mediaServicesWereResetObserver
audioSessionInterruptionObserver
audioController
factory
localAVAudioSessionInterruptionProvider
proxyAVAudioSessionInterruptionProvidersByAudioSessionID
avAudioClientInterruptionProvider
availability
photoRequestSuccessCount
photoRequestFailureCount
medianRequestDuration
meanRequestDuration
didBeginPlaying
contactStore
currentAlert
endedPlayingSemaphore
alertGenerator
playbackObserverGenerator
soundType
provider
isVideo
region
finishedUtterance
startedUtterance
canceledUtterance
speechSynthesizerEventHandler
activeDescriptor
speechSynthesizer
audioPlayer
moments
remoteIDSDestination
isRegistered
route
routeProvider
_routesByUniqueIdentifier
routesDidChangeHandler
routeWasPickedHandler
timedOutPickingRouteHandler
queue
routeProviders
pendingRouteContext
interruptionDescriptor
interruptionDeferredEndDescriptor
ringtoneDescriptor
soundDescriptorAction
holdMusicDescriptor
discoveryModeDescriptor
contactIdentifier
providerRingtoneSoundURL
call
triggers
queue
callCenterObserver
ttyProviderObserver
deviceSupportsRingtone
soundDescriptorActionResolver
resolvedDescriptor
resolutionChangedHandler
inactiveWithPrematurelySelectedRoute
inactive
active
routesDidChangeHandler
audioRoutes
queue
localAudioSystemProvider
callCenterObserver
callAudioCategory
callAudioMode
callAudioInterruptionState
queue
nearbyDeviceProvider
devicesChangedHandler
devicesByEffectiveIdentifier
avAudioSession
avAudioClient
providerType
category
mode
activationContext
priority
wantsHoldMusic
operationMode
activationStateObserver
activeDescriptor
player
callUUID
moments
delegate
avcRequest
session
bplist00
 !" $%&'()*+,'-_
Application-Group_
BuildMachineOSBuild_
CFBundleDevelopmentRegion_
CFBundleExecutable_
CFBundleIdentifier_
CFBundleInfoDictionaryVersion\CFBundleName_
CFBundlePackageType_
CFBundleShortVersionString_
CFBundleSignature_
CFBundleSupportedPlatforms_
CFBundleVersionZDTCompiler_
DTPlatformBuild^DTPlatformName_
DTPlatformVersionZDTSDKBuildYDTSDKNameWDTXcode\DTXcodeBuild_
LSBackgroundOnly_
MinimumOSVersion^UIDeviceFamily
com.apple.callhistoryW16B2657WEnglish]callservicesd_
com.apple.TelephonyUtilitiesS6.0TFMWKS1.0T????
iPhoneSimulator_
"com.apple.compilers.llvm.clang.1_0P_
iphonesimulatorT11.4U15F35_
iphonesimulator11.4T0930V9P107g
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.telephonyutilities.callservicesd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>development</string>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CallKit.call-directory.extension-host</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>phone</string>
<string>voice</string>
<string>identity</string>
<string>data-usage</string>
<string>data-allowed</string>
<string>data-allowed-write</string>
<string>carrier-space</string>
<string>carrier-settings</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.FaceTime.CallLaunch</key>
<true/>
<key>com.apple.FaceTime.NoPrompt</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coremedia.captureassertionservice</key>
<array>
<string>modify-assertion</string>
</array>
<key>com.apple.coretelephony.Calls.allow</key>
<true/>
<key>com.apple.developer.notificationcenter-identifiers</key>
<array>
<string>com.apple.FaceTime</string>
<string>com.apple.Photos</string>
</array>
<key>com.apple.duet.expertcenter.consumer</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.av</key>
<true/>
<key>com.apple.multitasking.voipassertions</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-client-cert-access</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.carkit.dnd</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coremedia.interruptions.phonecallpriority.allow</key>
<true/>
<key>com.apple.private.coreservices.canalwaysadvertise</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.bestappsuggestion</key>
<true/>
<key>com.apple.private.icfcallserver</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.ess</string>
<string>com.apple.private.alloy.phone.auth</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.phone.auth</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
</array>
<key>com.apple.private.ids.session-private</key>
<array>
<string>com.apple.private.alloy.phonecontinuity</string>
<string>com.apple.private.alloy.facetime.video</string>
<string>com.apple.private.alloy.facetime.audio</string>
</array>
<key>com.apple.private.imavcore.imavagent</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationState</string>
</array>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.SystemNote</string>
</dict>
</array>
<key>com.apple.private.notificationcenter.internalpushclient</key>
<true/>
<key>com.apple.private.notificationcenterui.alerts</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coremedia.captureassertionservice</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.videoconference.allow-conferencing</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
