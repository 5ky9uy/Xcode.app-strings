alloc
init
addObject:
count
countByEnumeratingWithState:objects:count:
initWithFormat:arguments:
taskWithCommandAndArguments:
setCommandWithArguments:
array
length
characterAtIndex:
substringWithRange:
stringByReplacingCharactersInRange:withString:
setArgv:
argv
objectAtIndex:
UTF8String
redirectStdoutToFileAtPath
fileSystemRepresentation
redirectStderrToFileAtPath
redirectStdoutToFileDescriptor
redirectStderrToFileDescriptor
_enqueueTaskCompletionForLaterWait:
cleanupEmptyFiles
setRedirectStdoutToFileAtPath:
setRedirectStdoutToFileDescriptor:
setRedirectStderrToFileAtPath:
setRedirectStderrToFileDescriptor:
waitForAllLongTasksToFinish
taskWithCommand:
setCommand:
exec
resetRedirect
.cxx_destruct
waitStatus
canTimeout
setCanTimeout:
setCleanupEmptyFiles:
_argv
_redirectStdoutToFileAtPath
_redirectStdoutToFileDescriptor
_redirectStderrToFileAtPath
_redirectStderrToFileDescriptor
_waitQueue
_waitStatus
_canTimeout
_cleanupEmptyFiles
class
raise:format:
initWithMachServiceName:options:
_setTargetUserIdentifier:
generateMemoriesRelatedDiagnosticsLogsWithContext:reply:
dumpAnalysisStatusWithContext:reply:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
dictionaryWithObjects:forKeys:count:
remoteObjectProxyWithErrorHandler:
initWithLibraryPath:targetUserIdentifier:
generateMemoriesRelatedDiagnosticsLogsWithReply:
dumpAnalysisStatusWithReply:
_context
_serviceConnection
defaultManager
contentsOfDirectoryAtPath:error:
stringByAppendingPathComponent:
fileExistsAtPath:isDirectory:
lastPathComponent
addDirectoryToArchive:withDirName:
addFileToArchive:withFileName:
initWithPath:shouldCompress:
closeArchive
_archive
currentHandler
stringWithUTF8String:
handleFailureInMethod:object:file:lineNumber:description:
copy
commandWithName:
parseCommandOptionsWithArgc:argv:
setHelpCommandName:
printFormat:
registerCommandClass:
commandClassWithName:
objectForKey:
commandName
setObject:forKey:
put:
endLine
printFormat:arguments:
_startInCString:fgColor:bgColor:attr:
startFgColor:bgColor:attr:
cursorToTopLeft
cursorLeft:
cursorGotoLineStart
forgetRemainingSpace
puts:len:
_putsAndCrop:len:
stringByReplacingOccurrencesOfString:withString:
puts:
openedLibraryManagerWithTargetUserIdentifier:error:
initForManagement
setDelegate:
openWithCompletionHandler:
errorWithDomain:code:userInfo:
localizedDescription
closeWithCompletionHandler:
setStandaloneTool:
execute
register
processInfo
processName
setToolName:
_printUsage
toolName
commandWithArgc:argv:
allCommandNames
shortDescription
parameters
help
executeMainToolWithVersion:argc:argv:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
libraryManagerStatusDidChange:
libraryManagerDidStartSynchronization:
libraryManagerHasChangesToPull:
libraryManagerDidChangeConfiguration:
libraryManagerHasStatusChanges:
displayableNameForLibraryManager:
resetColorsAndAttributes
clearScreen
eraseEndOfLine
eraseStartOfLine
eraseLine
eraseScreenDown
eraseScreenUp
cursorSave
cursorRestore
cursorToStartOfLine
cursorUp:
cursorDown:
cursorRight:
startNewLine
remainingSpace
openedLibraryManagerWithError:
closeLibraryManager:
isATTY
supportsEscapeSequences
usesColor
_termWidth
_usedTermWidth
_curAttrs
_curFg
_curBg
_isATTY
_supportsEscapeSequences
_usesColor
initWithFormat:
componentsSeparatedByString:
componentsJoinedByString:
stringWithFormat:
_printUsageWithFirstLine:secondLine:
helpCommandName
isStandaloneTool
_standaloneTool
_helpCommandName
initWithShouldSignal:shouldSample:shouldRunMemoryTools:shouldRunTaskInfo:requiresRoot:
baseProcessSpecification
priviledgedProcessSpecification
signalProcessSpecification
addDefaultsDomain:
shouldSignal
setShouldSignal:
shouldSample
setShouldSample:
shouldRunMemoryTools
setShouldRunMemoryTools:
shouldRunTaskInfo
setShouldRunTaskInfo:
requiresRoot
setRequiresRoot:
defaultsDomain
setDefaultsDomain:
_shouldSignal
_shouldSample
_shouldRunMemoryTools
_shouldRunTaskInfo
_requiresRoot
_defaultsDomain
date
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
stringFromDate:
stringWithFileSystemRepresentation:length:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByAppendingPathExtension:
fileURLWithPath:isDirectory:
URLByAppendingPathComponent:isDirectory:
path
hasPrefix:
substringFromIndex:
arrayWithCapacity:
_simplifiedPathForURL:
createBaseFolderAndLogFile
defaultTimeZone
name
startDiagnostic
timeIntervalSinceNow
timeIntervalSinceReferenceDate
removeItemAtURL:error:
numberWithInt:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
collectOutputOfCommand:label:filename:outputIsStderr:timeout:
collectOutputOfTask:label:filename:outputIsStderr:timeout:
regularExpressionWithPattern:options:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
rangeOfFirstMatchInString:options:range:
URLByAppendingPathComponent:
copyItemAtURL:toURL:error:
fileExistsAtPath:
stringByAppendingString:
fileURLWithPath:
collectFileAtURL:suffix:
collectFileAtPath:suffix:
collectFileAtPath:
collectOutputOfCommand:label:filename:
processes
collectFilesMatching:inFolder:
enumerateKeysAndObjectsUsingBlock:
arrayWithObjects:count:
executeTool:onProcess:
isEqualToString:
collectCrashReportsInFolder:root:
collectDiagnosticLog:
stringByExpandingTildeInPath
runAsUser:
absoluteString
attributesOfItemAtPath:error:
fileSize
copyDatabaseFromPath:toPath:
collectDatabaseAtPath:libraryPath:subdirectory:
appendFormat:
sampleProcess:
executeMemoryToolsOnProcess:
addInfoToLog:
getStatusForComponents:completionHandler:
_plphotoctl:filepath:
collectOutputOfCommand:label:filename:timeout:
allKeys
compare:
sortedArrayUsingSelector:
sampleProcesses
collectTaskInfo
signalProcesses
collectListOfRoots
collectCloudPhotodStatus
collectPhotoAnalysisDiagnostics
collectDefaults
collectCrashReports
collectFiles
collectDuetInfo
collectNetworkInfo
collectDiagnosticLogs
collectOSLogDatabase
collectLocalLibraryMetadataInfo
collectOutputOfCommandAndArguments:label:filename:outputIsStderr:timeout:
collectMbfloagentPhotosLibraryUpgradeLog
_annotation
_outputFolder
_outputFile
_diagnosticLog
host
_isRoot
_optionalTimeOut
_skipBigDBCopy
incompleteTasks
_hasFullShellCommands
notifyClientsStateChangedOnQueue
remoteObjectProxy
diagnosticServiceStateDidChange:
valueForEntitlement:
boolValue
UUID
UUIDString
runDiagnoseWithReplyHandler:
checkStateWithReplyHandler:
setExportedInterface:
setExportedObject:
setUserInfo:
didInvalidateClientConnectionWithIdentifier:
setInvalidationHandler:
auditToken
removeObjectForKey:
listener:shouldAcceptNewConnection:
_state
_queue
_clientsByIdentifier
serviceListener
v8@?0
-[CPLTask exec]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudPhotoLibrary_Sim/CloudPhotoLibrary-3202.7.152/Tools/cplctl-support/CPLTask.m
self.argv.count > 0
 === Aborted by user
com.apple.cplctl.task
v16@?0r*8
argv
T@"NSArray",&,N,V_argv
redirectStdoutToFileAtPath
T@"NSString",&,N,V_redirectStdoutToFileAtPath
redirectStdoutToFileDescriptor
Ti,N,V_redirectStdoutToFileDescriptor
redirectStderrToFileAtPath
T@"NSString",&,N,V_redirectStderrToFileAtPath
redirectStderrToFileDescriptor
Ti,N,V_redirectStderrToFileDescriptor
canTimeout
TB,N,V_canTimeout
cleanupEmptyFiles
TB,N,V_cleanupEmptyFiles
waitStatus
Ti,R,N,V_waitStatus
cplctl.task
%@ not supported for %@: use initWithLibraryURL:targetUserIdentifier:
com.apple.photoanalysisd
PHPhotoAnalysisOptionPhotoLibraryURLKey
v16@?0@"NSError"8
Error creating archive at path %@ %d
No filename!
archive_entry_new() failed!
failed to write header for file, %s, status, %d, reason: %s
Error opening file %@:%s (%d)
Error writing file %@: request to write %ld bytes but wrote %ld bytes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudPhotoLibrary_Sim/CloudPhotoLibrary-3202.7.152/Tools/cplctl/CPLCTLCommand.m
+[%@ %@] called twice
+[%@ %@] has not been set yet
help
Invalid command '%@'
Command %@ is already registered (for %@)
TERM
ansi
color
%zd;
[0;0H
    
+[%@ %@] should be overriden
Invalid parameters for %@
%@ is not implemented yet.
Timed out opening library manager
Can't get access to daemon's library manager: %@
--version
--help
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isATTY
TB,R,N,V_isATTY
supportsEscapeSequences
TB,R,N,V_supportsEscapeSequences
usesColor
TB,R,N,V_usesColor
[%d%c
cplctl
get some help.
[<command>]
[<command>]
get help on a specific command.
%@ can only take one argument
Usage: %@ %@
Usage: %@ %@
%@ %@
Unknown command '%@'
<command> [command-options and arguments]
%@ %@
Available commands:
Try %@ %@ <command> to get help on a specific command.
helpCommandName
T@"NSString",C,N,V_helpCommandName
standaloneTool
TB,N,GisStandaloneTool,V_standaloneTool
shouldSignal
TB,N,V_shouldSignal
shouldSample
TB,N,V_shouldSample
shouldRunMemoryTools
TB,N,V_shouldRunMemoryTools
shouldRunTaskInfo
TB,N,V_shouldRunTaskInfo
requiresRoot
TB,N,V_requiresRoot
defaultsDomain
T@"NSString",&,N,V_defaultsDomain
diagnose
gather diagnostics on cpl.
[-o <outputfile>] [-t] [-d] [-a <annotation>]
-o <outputfile>
save diagnostic to a specific file.
time-out long operations.
skip database copying (for databases bigger than %d MB).
-a <annotation>
annotate output file name (e.g. downloader), ignored if -o used.
InternalBuild
yyyyMMdd-HHmmss
en_US
o:tda:
%@-T%@
cpldiagnostics
%@%@-%s%s%s-T%@
CPL-diagnostics
-root
-limited
/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs
/var/mobile/Library/Logs/
.../%@
********************************  WARNING  ************************************
  You need to run this tool as root in order to collect the new-style of logs.
                   Please run this tool again as root.
*******************************************************************************
Will gather diagnostics in %@
Starting%@ diagnostic - Installed CPL is %@
 limited
Date: %@ (%@)
- Waiting for unfinished tasks if necessary
  Some diagnostic tasks did not finish!
(TOTAL elapsed time minus archiving:: %.2fs)
Incomplete Tasks:
   %@
- Archiving %@ to %@
  elapsed time: %.2fs
  Failed
- Removing %@
  Failed: %@
Changing owner of archive to mobile
mobile
  Failed: %s
  Succeeded
Diagnostic is available at %@
Enjoy.
(TOTAL elapsed time: %.2fs)
Can't create %@: %@
diagnostic.log
Can't create diagnostic log at %@: %s
- %@
  %c %s
--- Beginning ---
--- End ---
  failed
  took too long. %@ might end up being incomplete
  took too long.
Timed out %@.
Invalid regular expression '%@': %@
- Collecting files matching '%@' in %@
    %@
    %@ - failed: %@
Failed collecting %@.
    (none)
- Collecting %@
  failed: %@
- %@ does not exist
%@-sample.txt
/usr/bin/sample %@ 1 -f %@
Sampling %@
cloudd
nsurlsessiond
dasd
accountsd
mediaanalysisd
photoanalysisd
coreduetd
cloudphotod
com.apple.cloudphotod
assetsd
com.apple.assetsd
MobileSlideShow
com.apple.mobileslideshow
Camera
com.apple.camera
mstreamd
nebulad
mediaserverd
CloudPhotoDerivativeGenerator
/bin/ls %@
Listing %@ crash reports files
system
user
v32@?0@"NSString"8@"CPLProcessSpecification"16^B24
Collecting jetsam reports
JetsamEvent-
vmmap
heap
leaks
Getting %@ for %@
memgraph
/usr/bin/leaks --outputGraph=%@ %@
/usr/bin/%@ %@
%@-%@.txt
/var/mobile/Library/Logs/CrashReporter
/var/mobile/Library/Logs/CrashReporter/Retired
/Library/Logs/CrashReporter
Listing diagnostic files
CloudPhotoLibrary.aslgroup
com.apple.cloudkit.asl
Photos
com.apple.photos
Accounts
ProtectedCloudStorage.log
/var/mobile/Media/PhotoData/Logs/com.apple.persistentphotos
/var/mobile/Media/PhotoData/Logs/com.apple.photoprivate
/var/mobile/Media/PhotoData/Caches/changes
~/Library/Logs/photoslibraryupgrade.log
Logs-mbfloagent
?readonly_shm=1
couldn't open source database readonly, trying read/write mode
Failed to open src db %@: sqlite error %d
Failed to open dst db %@: sqlite error %d
Failed to replace %@ with %@: sqlite error %d
pragma journal_mode=delete
pragma vacuum
- Skipping: The size of the database at %@ is bigger than the maximum allowed in this mode (%.0d MB): (%.0llu MB) 
Skipped collecting %@.
- Collecting database (%.0llu MB) %@
/var/mobile/Media/PhotoData/CPL/mobileCPL.plist
/var/mobile/Media/PhotoData/CPL/
initialsync_marker
/var/mobile/Media/PhotoData/CPL/cpl-upgrade-events.log
/var/mobile/Media/PhotoData/CPL/cloudphotos-1.0.plist
/var/mobile/Media/PhotoData/CPL/syncstatus.plist
/var/mobile/Media/PhotoData/CPL/resetevents.plist
/var/mobile/Media/PhotoData/Caches/VisionService
/var/mobile/Media/PhotoData/CPL/storage/store.cloudphotodb
/var/mobile/Media/PhotoData/Photos.sqlite
/var/mobile/Media/PhotoData/Photos.sqlite.aside
- Could not determine location of client plist and CPL db
/usr/local/bin/darwinup list
Getting list of installed roots
darwinup-list.txt
/usr/bin/killall -INFO%@
Sending SIGINFO to%@
- Can't sample root processes as %@ is not run with root permissions
/usr/bin/defaults read /var/mobile/Library/Preferences/%@.plist
Getting defaults for %@
%@-defaults.txt
- Collecting %@ status
Collecting CPL diagnostics in %@
v24@?0@"NSString"8@"NSError"16
  took too long
  failed to contact %@: %@
- Collecting photoanalysis status
v24@?0@"NSDictionary"8@"NSError"16
- Collecting memories diagnostics
  copying from %@
/var/mobile/Library/com.apple.nsurlsessiond
/var/mobile/Library/Logs/com.apple.nsurlsessiond
-logs
coreduetd.log
/var/mobile/Library/Logs/CoreDuetAdmission.asl
/var/mobile/Library/Logs/DuetHeuristic-BM.log
/var/mobile/Library/Logs/CoreDuet/
/usr/local/bin/cdattrhist2 -name com.apple.coreduet.attribute.screenLock -t i -q
Getting screen lock/unlock events
screenlocks.txt
/usr/local/bin/cdattrhist2 -name com.apple.coreduet.attribute.sleepWake -t i -q
Getting sleep/wake events
sleepwake.txt
/usr/local/bin/plphotosctl %@ '%@'
allmomentsmetadata
all_moments_details.plist
Dumping all moments metadata
/usr/local/bin/plphotosctl printchangestore
Getting the changestore
changestore.txt
/usr/local/bin/plphotosctl listnonsharedphotouuids
Getting local photo GUIDs
local_photo_guids.txt
/usr/local/bin/plphotosctl hascompletedrestore
Getting assetsd restoring state
/usr/local/bin/plphotosctl incompleterestoreprocesses
Getting assetsd incomplete restore processes
/usr/local/bin/plphotosctl listincomplete
Getting assetsd incomplete list
incompletelist.txt
/usr/local/bin/plphotosctl getcplstate
Getting PLCloudLibraryManager state
cplstate.txt
/bin/ls /var/mobile/Media/PhotoData
Getting list of files in PhotoData
/usr/bin/taskinfo --threads %@
Gathering taskinfo on %@
%@-taskinfo.txt
- Collecting os_log() database
Diagnostics for %s
============================
  %@:
/bin/df -h
Getting FS size
/usr/sbin/lsof
Getting list of open files in all processes
lsof.txt
/usr/local/bin/dastool list
Getting Duet state
dastool.txt
/usr/local/bin/ckctl dump
Dumping CloudKit state
ckctl_dump.txt
/usr/local/bin/apsclient -dumpState
Getting APS client state
apsclient-dumpstate.txt
/usr/local/bin/plphotosctl listcloudphotoguids
Getting local photo cloudGUIDs
local_photo_cloud_guids.txt
/usr/local/bin/plphotosctl librarysummary
Getting local library summary
local_asset_counts.txt
/usr/local/bin/backupctl restoreInfo
Getting backupd restore info
/usr/local/bin/plphotosctl printmoments
Getting Moments info
moments.txt
/usr/local/bin/plphotosctl validate-cluster-cache
Getting photoanalysis cluster cache validation
analysis_validate_cluster_cache.log
/usr/local/bin/plphotosctl promoter-status
Getting photoanalysis promoter status
analysis_promoter_status.log
/bin/ls -alR /var/mobile/Media/DCIM
Getting DCIM contents
DCIM_contents.txt
/bin/ls -alR /var/mobile/Media/PhotoData
Getting PhotoData contents
PhotoData_contents.txt
/bin/ls -alR /var/mobile/Media/Photos
Getting Photos contents
Photos_contents.txt
/bin/ls -alR /var/mobile/Media/PhotoStreamsData
Getting PhotoStreamsData contents
PhotoStreamsData_contents.txt
/usr/local/bin/backupctl listFailures
Getting backupd failures
/usr/libexec/pcsstatus
Getting PCS status
pcs_status.log
/usr/libexec/pcsstatus -u
pcs_status_u.log
/usr/local/bin/pcsctl diagnostic
Getting PCS diagnostic
pcs_diagnostic.log
/usr/local/bin/accounts_tool listAccounts -v
Getting current iCloud accounts
accounts.log
/bin/ps gauxwwr
Getting the list of running processes ordered by CPU usage
ps.txt
/usr/bin/syslog
Collecting syslog
syslog.txt
/usr/local/bin/ckctl -v prod -c com.apple.photos.cloud -x deviceID
Collecting deviceID
deviceID.txt
com.apple.private.Photos.CPLDiagnose
CPLDiagnose.queue
Diagnostic request failed
Diagnose already in progress
com.apple.Photos.CPLDiagnose
running diagnose
v32@?0@"NSString"8@"NSXPCConnection"16^B24
connectionIdentifier
anonymous
Unable to initialize the file actions properly (%s).
Unable to redirect stdin (%s).
Unable to redirect stderr (%s).
Unable to perform spawn action (%s).
Unable to retreive handler for SIGINT.
Unable to spawn a new process (%s).
Unable to detroy the file actions properly (%s).
+[%@ %@] called twice
+[%@ %@] has not been set yet
Command %@ is already registered (for %@)
Error trying to open daemon's library manager: %@
Error closing daemon's library manager: %@
Hello from %@
error: %@
starting cpldiagnose
finished cpldiagnose
validated connection
connection validation error for %@
removing connection %@
starting %@
CPLTask
PhotoAnalysisDiagnosticClient
CPLCTLPhotoAnalysisClient
CPLDiagnoseArchive
CPLCTLCommand
CPLLibraryManagerDelegate
NSObject
CPLHelpCommand
CPLProcessSpecification
CPLDiagnoseCommand
CPLDiagnoseServiceProtocol
CPLDiagnoseServiceClientProtocol
CPLDiagnoseService
NSXPCListenerDelegate
v24@0:8@16
B16@0:8
@24@0:8@16
@16@0:8
q16@0:8
v16@0:8
i16@0:8
v20@0:8i16
v20@0:8B16
@"NSArray"
@"NSString"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
@28@0:8@16I24
v24@0:8@?16
@"NSDictionary"
@"NSXPCConnection"
@28@0:8@16B24
i32@0:8@16@24
^{archive=}
@28@0:8i16^*20
#24@0:8@16
v24@0:8#16
i36@0:8@16i24^*28
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CPLLibraryManager"16
@"NSString"24@0:8@"CPLLibraryManager"16
v32@0:8@16[1{__va_list_tag=II^v^v}]24
Q36@0:8[256c]16i24i28i32
v28@0:8i16i20i24
v20@0:8I16
v32@0:8r*16Q24
v24@0:8r*16
B28@0:8i16^*20
@24@0:8^@16
@28@0:8I16^@20
v32@0:8@16@24
@36@0:8B16B20B24B28B32
B40@0:8@16@24@32
B44@0:8@16@24@32B40
B48@0:8@16@24@32B40B44
v28@0:8@16B24
v40@0:8@16@24@32
@32@0:8@16@24
@"NSURL"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
[255c]
@"NSMutableArray"
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?c>16
v20@0:8c16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSMutableDictionary"
@(#)PROGRAM:com.apple.Photos.CPLDiagnose  PROJECT:CloudPhotoLibrary-3202.7.152
fffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>AAPLPHOTOS.com.apple.Photos.CPLDiagnose</string>
<key>com.apple.private.cloudphotod.access</key>
<string>management</string>
<key>com.apple.private.logging.diagnostic</key>
<true/>
<key>com.apple.private.photoanalysisd.access</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
</array>
<key>com.apple.private.xpc.role-account</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>CPLDiagnose</string>
</array>
</dict>
</plist>
