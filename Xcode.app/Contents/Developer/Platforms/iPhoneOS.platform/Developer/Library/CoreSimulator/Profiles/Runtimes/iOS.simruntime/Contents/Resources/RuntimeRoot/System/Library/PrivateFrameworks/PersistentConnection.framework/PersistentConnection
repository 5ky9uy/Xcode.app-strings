PCDelegateInfo
PCPersistentInterfaceManager
PCInterfaceMonitorDelegate
NSObject
PCMultiStageGrowthAlgorithm
PCGrowthAlgorithm
PCPersistentTimer
CUTPowerMonitorDelegate
PCConnectionManager
PCSystemWakeManager
PCScheduleSystemWakeOperation
PCCancelAllProcessWakesOperation
PCPersistentIdentifiers
PCDistributedLock
NSLocking
PCInterfaceUsabilityMonitor
PCInterfaceUsabilityMonitorProtocol
PCInterfaceMonitorProtocol
PCDeprecated
PCNonCellularUsabilityMonitor
PCInterfaceUsabilityMonitorDelegate
PCWWANUsabilityMonitor
PCInterfaceMonitor
PCLog
PCLogging
PCSimpleTimer
PCDispatchTimer
queue
setQueue:
.cxx_destruct
_queue
alloc
init
lock
weakToStrongObjectsMapTable
_createCTConnection
sharedInstanceForIdentifier:
addDelegate:queue:
_updateWWANInterfaceUpStateLocked
sharedInstance
addDelegate:
unlock
removeDelegate:
dealloc
setObject:forKey:
removeObjectForKey:
initWithObjects:
_ctConnectionAttempt
performSelector:withObject:afterDelay:inModes:
mainRunLoop
_mainThreadCTConnectionAttempt
cancelPerformSelector:target:argument:
cancelPreviousPerformRequestsWithTarget:selector:object:
_updateWWANInterfaceAssertionsLocked
_updateWWANInterfaceUpState
interfaceManagerInternetReachabilityChanged:
_scheduleCalloutsForSelector:
_clearInCallWWANOverrideTimerLocked
invalidate
isInterfaceUsable
_wantsWWANInterfaceAssertion
isInternetReachable
interfaceManagerWWANInterfaceStatusChanged:
_isWWANInHomeCountryLocked
interfaceManagerInHomeCountryStatusChanged:
linkQualityString
stringWithFormat:
isPoorLinkQuality
countByEnumeratingWithState:objects:count:
objectForKey:
respondsToSelector:
performSelector:withObject:
isInterfaceHistoricallyUsable
_isInternetReachableLocked
isWoWSupported
_adjustWakeOnWiFi
_adjustWiFiAutoAssociationLocked
_adjustWiFiAutoAssociation
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setDisableSystemWaking:
scheduleInRunLoop:
_wantsWakeOnWiFiEnabled
_adjustWakeOnWiFiLocked
doesWWANInterfaceExist
isWWANInterfaceActivationPermitted
isInCall
_isWiFiUsable
bindCFStream:toWWANInterface:
mutableCopy
pcdeprecated_connectionWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
urlConnectionBoundToWWANInterface:withRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
isEqual:
class
self
performSelector:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceLinkQualityChanged:previousLinkQuality:
interfaceReachabilityChanged:
interfaceRadioHotnessChanged:
handleMachMessage:
_inCallWWANOverrideTimerFired
_updateCTIsWWANInHomeCountry:isWWANInterfaceDataActive:
currentLinkQualityString
_wwanIsPoorLinkQuality
_wifiIsPoorLinkQuality
isWWANBetterThanWiFi
isWWANInterfaceUp
WWANInterfaceName
isWWANInterfaceSuspended
isPowerStateDetectionSupported
isWWANInterfaceInProlongedHighPowerState
isWWANInHomeCountry
isInternetReachableViaWiFi
isWakeOnWiFiSupported
areAllNetworkInterfacesDisabled
cutWiFiManagerDeviceAttached:
_updateWWANInterfaceAssertions
enableWiFiAutoAssociation:forDelegate:
enableWakeOnWiFi:forDelegate:
_allowBindingToWWAN
bindCFStreamToWWANInterface:
urlConnectionBoundToWWANInterfaceWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
_lock
_delegatesAndQueues
_WiFiAutoAssociationDelegates
_WiFiAutoAssociationDisableTimer
_wakeOnWiFiDelegates
_wakeOnWiFiDisableTimer
_ctServerConnection
_interfaceAssertion
_WWANContextIdentifier
_WWANInterfaceName
_isWWANInterfaceUp
_inCallWWANOverrideTimer
_isWWANInterfaceDataActive
_ctIsWWANInHomeCountry
_hasWWANStatusIndicator
_isWWANInterfaceSuspended
_isPowerStateDetectionSupported
_isWWANInterfaceInProlongedHighPowerState
_isWWANInterfaceActivationPermitted
_lastActivationTime
_isInCall
_isWakeOnWiFiSupported
_isWakeOnWiFiEnabled
_shouldOverrideOnCallBehavior
interfaceManager
_loadDefaults
UTF8String
logWithCategory:
copy
doubleValue
boolValue
_resetAlgorithmToInterval:stage:
_resetAlgorithmToInterval:
minimumKeepAliveInterval
setMinimumKeepAliveInterval:
currentKeepAliveInterval
_setCurrentKeepAliveInterval:
maximumKeepAliveInterval
setMaximumKeepAliveInterval:
numberWithDouble:
numberWithBool:
initWithObjectsAndKeys:
_stringForStage:
_stringForAction:
_processInitialGrowthAction:
_processRefinedGrowthAction:
_processSteadyStateAction:
_processBackoffAction:
_processMinimumIntervalFallbackStateAction:
_fallbackToLastSuccessfulKeepAliveInterval
processNextAction:
timeIntervalSinceNow
_steadyStateTimeout
initWithTimeIntervalSinceNow:
_loadDefaultValue:forKey:
initWithCacheInfo:loggingIdentifier:algorithmName:
useIntervalIfImprovement:
isServerOriginatedKeepAlive
setIsServerOriginatedKeepAlive:
lastSuccessfulKeepAliveInterval
setLastSuccessfulKeepAliveInterval:
minimumIntervalFallbackEnabled
setMinimumIntervalFallbackEnabled:
countOfGrowthActions
cacheInfo
growthStage
_currentKeepAliveInterval
_minimumKeepAliveInterval
_maximumKeepAliveInterval
_previousMaximumKeepAliveInterval
_lastKeepAliveInterval
_lastSuccessfulKeepAliveInterval
_growthStage
_highWatermark
_initialGrowthStageHighWatermark
_initialGrowthStageLastAttempt
_leaveSteadyStateDate
_leaveMinimumIntervalFallbackStateDate
_algorithmName
_countOfGrowthActions
_logObject
_isServerOriginatedKeepAlive
_minimumIntervalFallbackEnabled
timer
timeIntervalSinceReferenceDate
_initWithAbsoluteTime:serviceIdentifier:guidancePriority:target:selector:userInfo:triggerOnGMTChange:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_updateTimers
setUserVisible:
scheduleInRunLoop:inMode:
_fireTimerFired
initWithAbsoluteTime:serviceIdentifier:target:selector:userInfo:triggerOnGMTChange:
_backgroundUpdateQueue
_updateTime:forGuidancePriority:
scheduleInQueue:
firingIsImminent
lastSystemWakeDate
isExternalPowerConnected
_nextForcedAlignmentAbsoluteTime
dateWithTimeIntervalSinceReferenceDate:
_earlyFireTime
updateFireTime:triggerOnGMTChange:
hostUniqueIdentifier
currentMachTimeInterval
unsignedIntegerValue
enumerateKeysAndObjectsUsingBlock:
_currentGuidanceTime
numberWithUnsignedInteger:
cutPowerMonitorBatteryConnectedStateDidChange:
cutPowerMonitorSystemHasPoweredOn:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
initWithTimeInterval:serviceIdentifier:guidancePriority:target:selector:userInfo:
setMinimumEarlyFireProportion:
isUserVisible
fireTime
startTime
isValid
userInfo
interfaceManagerWWANInterfaceChangedPowerState:
minimumEarlyFireProportion
disableSystemWaking
_fireTime
_startTime
_guidancePriority
_minimumEarlyFireProportion
_triggerOnGMTChange
_disableSystemWaking
_userVisible
_serviceIdentifier
_target
_selector
_userInfo
_simpleTimer
currentRunLoop
_getCachedWWANKeepAliveInterval
growthAlgorithmClass
weakRefWithObject:
object
_setTimerGuidance:
persistentInterfaceManager
cStringUsingEncoding:
_preferencesChanged
_loadPreferencesGeneratingEvent:
_initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:delegateQueue:serviceIdentifier:
initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:serviceIdentifier:
_clearTimers
currentStyle
_stringForStyle:
integerValue
setOperatorMinimumIntervalFallbackAllowed:
_adjustInterfaceAssertions
_registerForDeviceConditionsNotifications
_deregisterForDeviceConditionsNotifications
_calloutWithEvent:context:
userContext
keyPathForThermalPressureLevel
objectForKeyedSubscript:
keyPathForWiFiConnectionQuality
keyPathForPluginStatus
_processDeviceConditionChanges
_setupTimerForPollForAdjustment:
_pauseTimers
pollingInterval
_currentGrowthAlgorithm
resumeManagerWithAction:
resumeManagerWithAction:forceGrow:
_validateActionForCurrentStyle:
_resolveStateWithAction:
_setupTimerForPushWithKeepAliveInterval:
_saveWWANKeepAliveInterval
isNetworkingPowerExpensiveToUse
_setupKeepAliveForReconnect
date
exceptionWithName:reason:userInfo:
stopManager
_isPushConnected
isBadLinkQuality
_adjustMinimumIntervalFallback
_intervalTimerFired
dateByAddingTimeInterval:
attributeFromRepresentation:error:
admissionCheckOfValue:type:options:error:handler:
_takePowerAssertionWithTimeout:
_hasBudgetRemaining
_releasePowerAssertion
startManager
_delayTimerFired
arrayWithObject:
performSelector:target:argument:order:modes:
getCFRunLoop
_clearTimersReleasingPowerAssertion:
dictionaryWithObjectsAndKeys:
intValue
connectionManager:handleEvent:
connectionManager:handleEvent:context:
_stringForEvent:
numberWithInt:
_callDelegateWithEventAndContext:
_adjustPollTimerIfNecessary
linkQuality
isBadLinkQuality:
setMaxConcurrentOperationCount:
_keepAliveCachePath
stringByAppendingPathExtension:
initWithPath:
intervalCacheDictionaries
dataWithPropertyList:format:options:error:
writeToFile:atomically:
blockOperationWithBlock:
addOperation:
initWithContentsOfFile:
dictionary
_isCachedKeepAliveIntervalStillValid:date:
objectAtIndex:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
initWithConnectionClass:delegate:delegateQueue:serviceIdentifier:
initWithConnectionClass:delegate:serviceIdentifier:
setDelegate:
delegate
setDuetIdentifier:
duetIdentifier
_handleDeviceConditionChangeCallback
setOnlyAllowedStyle:
currentGrowthStage
stopAndResetManager
isRunning
setKeepAliveGracePeriod:
setPollingIntervalOverride:
cancelPollingIntervalOverride
shouldClientScheduleReconnectDueToFailure
setEnableNonCellularConnections:
disableEarlyFire
setDisableEarlyFire:
operatorMinimumIntervalFallbackAllowed
keepAliveGracePeriod
interfaceIdentifier
setInterfaceIdentifier:
lastProcessedAction
alwaysWantsInterfaceChangeCallbacks
setAlwaysWantsInterfaceChangeCallbacks:
powerOptimizationsForExpensiveNetworkingDisabled
setPowerOptimizationsForExpensiveNetworkingDisabled:
_connectionClass
_delegate
_duetIdentifier
_prefsStyle
_onlyAllowedStyle
_onlyAllowedStyleSet
_interfaceIdentifier
_delegateRunLoop
_delegateQueue
_wwanGrowthAlgorithm
_wifiGrowthAlgorithm
_lastScheduledGrowthAlgorithm
_intervalTimer
_reconnectWakeTimer
_delayTimer
_powerAssertionID
_onTimeKeepAliveTime
_lastResumeTime
_lastStopTime
_lastStartTime
_lastReachableTime
_lastReconnectTime
_lastScheduledIntervalTime
_timerGuidance
_keepAliveGracePeriod
_lastElapsedInterval
_operatorMinimumIntervalFallbackAllowed
_reconnectIteration
_timerGuidanceToken
_pushIsConnectedToken
_prefsChangedToken
_defaultPollingInterval
_pollingIntervalOverride
_pollingIntervalOverrideSet
_hasStarted
_isRunning
_inCallback
_isInReconnectMode
_reconnectWithKeepAliveDelay
_forceManualWhenRoaming
_enableNonCellularConnections
_isReachable
_disableEarlyFire
_alwaysWantsInterfaceChangeCallbacks
_lastProcessedAction
_deviceUnderGoodCondition
_currentGrowthStage
_duetContextRegistration
_powerOptimizationsForExpensiveNetworkingDisabled
_weakConnectionManager
initWithName:
handleFailureInFunction:file:lineNumber:description:
hasPrefix:
substringFromIndex:
containsObject:
initForScheduledWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
scheduleWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
main
_scheduleOrCancel
_wakeDate
_acceptableDelay
_unqiueIdentifier
wakeManager
processInfo
processName
initWithFormat:
processNamePidAndStringIdentifier:
_processNamePrefix
stringByAppendingFormat:
canBeConvertedToEncoding:
dataUsingEncoding:allowLossyConversion:
initWithData:encoding:
length
substringToIndex:
stringByAppendingString:
rangeOfString:options:
processNameAndPidIdentifier
pidFromMatchingIdentifer:
raise:format:
fileSystemRepresentation
_lockBlocking:
tryLock
_path
timeIntervalSince1970
pathExtension
isEqualToString:
fileExistsAtPath:
stringByDeletingPathExtension
arrayWithObjects:
_createLinkQualityMonitorOnIvarQueue
_createReachabilityMonitorOnIvarQueue
_unscheduleLinkQualityMonitorOnIvarQueue
_unscheduleReachabilityMonitorOnIvarQueue
insertObject:atIndex:
_flushStaleTransitionsOnIvarQueue
count
arrayWithCapacity:
addObject:
isWiFiCaptive
_isInterfaceUsableOnIvarQueue
_isInterfaceHistoricallyUsableOnIvarQueue
stringForLinkQuality:
isPoorLinkQuality:
_reachabilityCallbackOnIvarQueue:
_callDelegateOnIvarQueueWithBlock:
_updateOffTransitionsForLinkQualityChangeOnIvarQueue
_processLinkQualityUpdateOnIvarQueueWithUpdatedLinkQuality:
_dynamicStoreCallbackOnIvarQueue:
_dynamicStoreCallback:
isRadioHot
currentRAT
isLTEWithCDRX
wwanInterfaceName
setTrackedTimeInterval:
setThresholdOffTransitionCount:
setTrackUsability:
initWithInterfaceName:interfaceIdentifier:delegateQueue:
_createReachabilityMonitor
_reachabilityCallback:
_createLinkQualityMonitor
_ivarQueue
_interfaceName
_delegateReference
_reachability
_isInternetReachable
_dynamicStore
_linkQualitySource
_lqKey
_linkQuality
_trackUsability
_thresholdOffTransitionCount
_trackedTimeInterval
_offTransitions
usabilityMonitor
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
initWithCapacity:
_addMonitorWithInterfaceName:
_forwardConfigurationOnIvarQueue
_linkQualityOnIvarQueue
initWithDelegateQueue:
_monitorDelegateQueue
_demoOverrideInterface
_previousLinkQuality
_interfaceMonitors
_setupWWANMonitor
_adjustInterfaceNameForWWANContextID:
_isInHighPowerState
_interfaceMonitor
_currentRAT
_powerlogCDRXToken
_wwanContextID
_ctServerQueue
initWithInterfaceIdentifier:
initWithKeyOptions:valueOptions:capacity:
_internal
_delegateMap
logFileDirectory
_scheduleTimer
_preventSleepFired
initWithQueue:target:selector:fireTime:
start
_setPowerMonitoringEnabled:
_setSignificantTimeChangeMonitoringEnabled:
distantFuture
setFireDate:
distantPast
isEqualToDate:
_significantTimeChange
dateWithTimeIntervalSince1970:
_getTimerRunLoop
_getTimerMode
_performBlockOnQueue:
_powerNotificationSleepIsNotImminent
_powerNotificationSleepIsImminent
_lastUpdateTime
_earlyFireDelta
_scheduledWakeDate
_preventSleepTimer
_fireTimer
_sleepIsImminent
_timeChangeSource
_timerRunLoop
_timerMode
_significantTimeChangeToken
removeObject:
_callTarget
_cleanupTimer
dateWithTimeIntervalSinceNow:
callStackSymbols
fireDate
_timerSource
_fireDate
_isValid
@16@0:8
v24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16i24
v28@0:8@"PCInterfaceMonitor"16i24
v24@0:8@"PCInterfaceMonitor"16
v32@0:8@16@24
v24@0:8^v16
v24@0:8B16B20
v24@0:8:16
v28@0:8B16@20
v28@0:8^{__CFReadStream=}16B24
v24@0:8^{__CFReadStream=}16
@60@0:8B16@20@28B36q40B48@52
@56@0:8@16@24B32q36B44@48
@"NSRecursiveLock"
@"NSMapTable"
^{__CFSet=}
@"PCSimpleTimer"
@"NSString"
@"NSTimer"
v32@0:8^d16^{__CFString=}24
@40@0:8@16@24@32
B24@0:8d16
v20@0:8i16
d16@0:8
v20@0:8B16
v24@0:8d16
i16@0:8
@40@0:8@"NSDictionary"16@"NSString"24@"NSString"32
@"NSDictionary"16@0:8
v28@0:8d16i24
@20@0:8i16
@"NSDate"
@"NSObject<OS_os_log>"
v32@0:8d16Q24
v24@0:8@"CUTPowerMonitor"16
@56@0:8@16@24@32:40@48
@56@0:8d16@24@32:40@48
@64@0:8d16@24Q32@40:48@56
@68@0:8d16@24Q32@40:48@56B64
B32@0:8d16@24
@60@0:8i16q20Q28@36@44@52
@44@0:8i16@20@28@36
@52@0:8i16q20Q28@36@44
@36@0:8i16@20@28
v24@0:8i16B20
v28@0:8i16@20
q16@0:8
v24@0:8q16
@"<PCConnectionManagerDelegate>"
@"NSRunLoop"
@"<PCGrowthAlgorithm>"
@"PCPersistentTimer"
@"CUTWeakReference"
v56@0:8B16@20d28B36@40^v48
@56@0:8B16@20d28B36@40^v48
@24@0:8@16
i24@0:8@16
B20@0:8B16
B20@0:8i16
^{__CFString=}16@0:8
v24@0:8Q16
@"<PCInterfaceUsabilityMonitorDelegate>"16@0:8
v24@0:8@"<PCInterfaceUsabilityMonitorDelegate>"16
@40@0:8@16q24@32
v24@0:8@?16
v20@0:8I16
^{__CFRunLoopSource=}
^{__CFString=}
@"NSMutableArray"
v28@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16i24
v24@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16
@"PCInterfaceUsabilityMonitor"
@24@0:8q16
@"<PCInterfaceUsabilityMonitorProtocol>"
@24@0:8r*16
@60@0:8d16@24@32:40@48B56
v28@0:8d16B24
@"PCDispatchTimer"
@48@0:8@16@24:32Q40
@"NSObject<OS_dispatch_source>"
v8@?0
true
false
wwan is %@; wifi is %@
interfacemanager-wifiautoassoc
interfacemanager-wow
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isPowerStateDetectionSupported
TB,R
isWWANInterfaceInProlongedHighPowerState
isInCall
isWWANInterfaceActivationPermitted
areAllNetworkInterfacesDisabled
isWWANInterfaceUp
isWWANInHomeCountry
isWWANBetterThanWiFi
isWWANInterfaceSuspended
doesWWANInterfaceExist
WWANInterfaceName
T@"NSString",R
isInternetReachableViaWiFi
isWakeOnWiFiSupported
isInternetReachable
currentLinkQualityString
T@"NSString",R,N
inInitialGrowth
multiStateGrowth.%@
PCDefaultMinimumKeepAliveInterval
PCDefaultMaximumKeepAliveInterval
PCDefaultInitialKeepAliveInterval
PCInitialGrowthIncrement
PCRefinedGrowthIncrement
PCIncrementRandomVariance
PCBackoffMultiple
PCHighWatermarkThreshold
%@{keep alive interval = %g, state = %@, next recalibration date = %@}
PCActionGrowPushKeepAliveInterval
PCActionShrinkPushKeepAliveInterval
PCActionMaintainPushKeepAliveInterval
PCActionResetPushKeepAliveInterval
InitialGrowth
RefinedGrowth
SteadyState
Backoff
MinimumIntervalFallbackState
currentKeepAliveInterval
Td,R,N
isServerOriginatedKeepAlive
TB,N
minimumKeepAliveInterval
Td,N
maximumKeepAliveInterval
lastSuccessfulKeepAliveInterval
minimumIntervalFallbackEnabled
countOfGrowthActions
TQ,R,N
cacheInfo
T@"NSDictionary",R,C,N
growthStage
Ti,R,N
Td,R,N,V_currentKeepAliveInterval
TB,N,V_isServerOriginatedKeepAlive
Td,N,V_minimumKeepAliveInterval
Td,N,V_maximumKeepAliveInterval
Td,N,V_lastSuccessfulKeepAliveInterval
TB,N,V_minimumIntervalFallbackEnabled
TQ,R,N,V_countOfGrowthActions
Ti,R,N,V_growthStage
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-332.1/PCPersistentTimer.m
<Unknown File>
%@ target and selector are required
persistentTimer.%@
%@ run loop mode cannot be nil
Cannot schedule invalidated %@
Cannot schedule on NULL queue %@
PCPersistentTimer-sharedBackgroundUpdateQueue
%@{fireDate = %@, early fire proportion = %g, disable system waking = %s, target = %@, selector = %@}
v32@?0@"NSNumber"8@"NSNumber"16^B24
PCPersistentTimerGuidanceNotification
minimumEarlyFireProportion
Td,N,V_minimumEarlyFireProportion
disableSystemWaking
TB,N,V_disableSystemWaking
userVisible
TB,N,GisUserVisible
fireTime
startTime
keepAliveInterval
cacheDate
PCIntervalCacheChangedNotification
PCTimerFireEarlyToCoalesce
PCEvent
PCEventContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-332.1/PCConnectionManager.m
delegate must not be nil
serviceIdentifer must not be nil
PCPushIsConnectedToken
WWAN growth algorithm
WiFi growth algorithm
PCConnectionManager-noteQueue
v12@?0i8
PCForcedMinimumHBI
PCAllowMinimumIntervalFallback
_CDClientContext
CoreDuetContext
_CDContextQueries
early
on time
Invalid action type: %i
Action %@ not appropriate for push style.
Action %@ not appropriate for %@. PrefsStyle=%@. _forceManualWhenRoaming = %@  onlyAllowedStyleSet=%@ onlyAllowedStyle=%@
enter reconnect mode
issue a shrink
timers already exist
CDSession
CoreDuet
CDAttributeReanimatedInstanceKey
CDAttributeReanimatedValueKey
v24@?0q8@"NSDictionary"16
delay timer already exists
lock
com.apple.persistentconnection.intervalcache.plist
push
poll
manual
PCActionSchedulePoll
PCActionScheduleConnectionRetry
PCActionScheduleConnectionRetryWithKeepAliveDelay
unknown action
PCEventPushKeepAlive
PCEventPoll
PCEventRetryConnection
PCEventPersistentInterfaceWentUp
PCEventPersistentInterfaceWentDown
PCEventConnectionStyleChanged
PCEventCancel
unknown event
delegate
T@"<PCConnectionManagerDelegate>",W,N
duetIdentifier
T@"NSString",C,N
isRunning
TB,R,N
disableEarlyFire
interfaceIdentifier
Tq,N,V_interfaceIdentifier
alwaysWantsInterfaceChangeCallbacks
TB,N,V_alwaysWantsInterfaceChangeCallbacks
powerOptimizationsForExpensiveNetworkingDisabled
TB,N,V_powerOptimizationsForExpensiveNetworkingDisabled
lastProcessedAction
Ti,R,N,V_lastProcessedAction
keepAliveGracePeriod
Td,N,V_keepAliveGracePeriod
pollingInterval
currentGrowthStage
com.apple.operator
PushSettings
PCPreferencesDidChangeNotification
PCPreferencesDidChangeNotificationInternal
MobileMeOTASyncAccount
com.apple.persistentconnection
PCEnablePush
PCDefaultPollInterval
PCForceDemoMaxHBI
PCWiFiInterface
com.apple.persistentconnection.settings.lock
PCForceMinHBI
mobile
PCConnectionStyle _PCSettingsGetStyle(PCConnectionClassType, CFStringRef)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-332.1/PCSettings.m
%s requires a non-NULL serviceIdentifier
PCStyle
PCServiceIdentifier-
PCForceManualWhenRoaming
PC-Prefs-Queue
com.apple.persistentconnection-nosettings
com.apple.persistentconnection-mcc
kern.boottime
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-332.1/PCPersistentIdentifiers.m
sysctlbyname() for "kern.boottime" failed: %s
com.apple.persistentconnection[%@,
%i,%@]
.%@.lock
%@ at path '%@' is being deallocated while locked
%@ at path '%@' is already locked
Unable to take %@ at path '%@': %s
%@ at path '%@' is not locked
(null)
%Y-%m-%d %X %z
(localtime_r failed)
PCSharedSerialQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-332.1/PCInterfaceUsabilityMonitor.m
Must specify an interface identifier for PCInterfaceUsabilityMonitor
PCInterfaceUsabilityMonitor-ivarqueue
PCReachabilityQueue
v16@?0@"<PCInterfaceUsabilityMonitorDelegate>"8
unknown
poor
good
Cannot create link quality monitor with nil interfaceName %ld!
Tq,R,N
linkQuality
isInterfaceUsable
isInterfaceHistoricallyUsable
linkQualityString
T@"NSString",R,&,N
isPoorLinkQuality
isBadLinkQuality
isRadioHot
isNetworkingPowerExpensiveToUse
currentRAT
T^{__CFString=},R,N
isLTEWithCDRX
wwanInterfaceName
T@"<PCInterfaceUsabilityMonitorDelegate>",N
NonCellular
WWAN
PCNonCellularUsabilityMonitor-ivarqueue
PCNonCellularUsabilityMonitor-monitordelegatequeue
PCWWANUsabilityMonitor-ivarqueue
PCWWANUsabilityMonitor-monitordelegatequeue
com.apple.powerlog.BasebandHasCDRXCapability
T^{__CFString=},R,N,V_currentRAT
PCInterfaceMonitor-NonCellular
PCInterfaceMonitor-WWAN
usabilityMonitor
wakeManager
timer
interfaceManager
T@"NSObject<OS_os_log>",R
InternalBuild
Logs/PersistentConnection
Logs/CrashReporter/PersistentConnection
Library
com.apple.PersistentConnection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-332.1/PCSimpleTimer.m
Cannot schedule on runloop when already scheduled on queue %@
Cannot schedule on queue when already scheduled on runloop %@
PCSimpleTimer-timerQ
PCSimpleTimer-SignificantTimeChangeQueue
SignificantTimeChangeNotification
%@{fireDate = %@, disable system waking = %s, target = %@, selector = %@}
kern.waketime
PCSimpleTimer-IOPowerManagement
PCSimpleTimer-powermonitoringq
isValid
fireDate
T@"NSDate",&,N
%{public}@: Interface manager: Clearing _inCallWWANOverrideTimer: %{public}@
%{public}@ _updateWWANInterfaceUpState wasUp %{public}@ isUp %{public}@ wantsInterfaceAssertion %{public}@ avoidWWANOnCall %{public}@
Interface manager: isWWANInHomeCountry status changed to %s
cutWiFiManagerDeviceAttached called: %{public}@
Interface manager: clearing packet context %ld assertion
Using cached keep alive interval of %g seconds inInitialGrowth? %{public}@ from [%{public}@]
%{public}@: setting current interval to %g seconds
%{public}@: setting lastSuccessfulKeepAliveInterval to %g seconds
%@ minimumIntervalFallbackEnabled changed to %@
%{public}@: useIntervalIfImprovement %f   lastKeepAliveInterval: %f  currentKeepAliveInterval: %f
%{public}@: resetAlgorithmToInterval: %g state: %{public}@
%{public}@: received action %{public}@ while in stage %{public}@
%{public}@: leaving the initial growth stage for refined growth
%{public}@: leaving the steady state and trying to grow again
%{public}@: using double the current interval for the steady state timer interval since we are significantly below the high watermark of %g seconds
%{public}@: set the steady state expiration date to %{public}@
%@ _leaveMinimumIntervalFallbackStateDate is nil. Leave minimumIntervalFallbackState. Changing maximum keep alive interval back to %f
%@ Unexpected _leaveMinimumIntervalFallbackStateDate %@ in MinimumIntervalFallbackState, changing to %@
%@ Leave minimumIntervalFallbackState. Changing maximum keep alive interval back to %f
%@ receive shrink right after previous MinimumIntervalFallbackState ends, extend leaveMinimumIntervalFallbackStateDate to %@
%{public}@: surpassed where the previous initial growth stopped at %g; reverting to initial growth.
%{public}@: using a steady state timeout of %g for current interval %g
%{public}@: %0.2f
%{public}@ created %{public}@
Invalidating timer %{public}@
%{public}@ calculating _earlyFireDate. powerStateDetectionSupported = %{public}@ = (detectionSupported(%@) && (wwanIsUp(%{public}@) || ! internetReachable(%{public}@)))
Last system wake date (%{public}@) was longer than half of the timer duration, so setting minimum fire date to fire date.
%{public}@ Device is plugged in, overriding earlyFireProportion to be 1.0
%{public}@ device is not plugged in.
Forcing timer alignment to fire date [%{public}@]
%{public}@ Calculated minimum fire date [%{public}@] (%g%%) with fire date [%{public}@], start date [%{public}@], minimum early fire proportion %g, power state detection supported: %{public}s, in high power state: %{public}s
PersistentTimer %{public}@ has fired
updating timer guidance to %{public}@
Creating PCManager %@ with identifier %@ and interfaceIdentifier %ld
%@ Changing duetIdentifier from %@ to %@
_loadPreferencesGeneratingEvent
%@ Loading forceManualWhenRoaming: accountSetting %@  globalSetting %@
Loaded preferences. Style is %@ and default poll interval is %g minutes.
Forcing manual when roaming.
%@ set. Setting maximum keep alive interval to %g seconds for demo mode.
Carrier bundle override for minimum HBI set. Setting minimum keep alive interval to %g seconds.
Operator bundle set PCAllowMinimumIntervalFallback to %@
%@ set. Setting minimum keep alive interval to %g seconds for demo mode.
%@ Query duet context for device condition, {GoodCondition:%{public}@, thermalPressureLevel:%{public}@, wifiConnectionQuality:%{public}@, pluggedIn:%{public}@}
Resuming push keep alive timer in normal mode with action %@
Last timer interruption was %s: [%@]. Expected fire time was [%@].
%@: lastKeepAliveWasEarly - Examining sameAlgorithm %@ timeKeepAliveWasScheduled %f, onTimeKeepAliveTime: %f, lastStopTime %f
%@: This grow action is early but we're past the interval our previous growth was based on. Regrowing based on this interval %f.
%@ Last keep alive was early {forceGrow: %s, action: %@}
Resuming poll keep alive timer in normal mode with action %@
Resuming manual keep alive timer in normal mode with action %@
Choosing not to resume keep alive in reconnect mode since all interfaces are disabled. Action %@
Choosing not to resume keep alive in reconnect mode since interface is networking power expensive to use. Action %@
Resuming keep alive in reconnect mode with action %@
logKeepAlive {identifier: %@, currentDate: %@, keepAliveInterval: %i}
PCConnectionManager was stopped by client
%@ returning an adjusted keepAliveInterval to avoid signaling: %f
Setting minimum keep alive interval to %g
Setting maximum keep alive interval to %g
Setting keep alive grace period to %g
Push is connected? %@  networkIsHistoricallyUsable? %@  isBadLQ? %@ -- choosing pollInterval = MAX(%g, %g)
Setting polling interval override to %g
Cacnceling polling interval override
Advising client to not enter reconnect mode since the network just became reachable at %@
Advising client to enter reconnect mode in response to a connection failure since currently in reconnect mode
Advising client to %s in response to a connection failure after elapsed time from start %g seconds
%@: enableNonCellularConnections changed to %@
%@ - early fire has been manually disabled for this timer!
Trying to push no persistent interface exists and the poll interval is 'manual', so disabling waking to conserve power
%@ _adjustPollTimerIfNecessary  rightStyle %@  isRunning %@  isInReconnectMode %@   intervalTimer %@  firingIsImminent %@ - should Adjust? %@
%@ Unable to setup a poll timer with {pollingInterval: %{public}f}, start when on power
%@ adjust polling interval {pollingInterval: %f, adjustedPollingInterval: %f, lastElapsedInterval: %f}.
%@ firing immediately {nextPollInterval:%f}.
%@ scheduling next poll - isAdjustment %@. PushDate %@ is not valid - timeIntervalSinceNow %f. Last scheduled fire date %@. TimeDiff = %f, pollingInterval %f
%@ scheduling the next poll to align with the next push keepAlive date (%@). isAdjustment %@  isLastTimeIntervalValid? %@, lastResumeTime %@ (%f), lastScheduledIntervalTime (%@) %f, timeDiff %f. Should fire immediately? %@
%@ nextPollDate timeIntervalSinceNow %f  pollingInterval %f  earliestAllowableFire %@
%@ nextPollDate whittled down by a polling interval to %@, %f
%@ using nextPollInterval = %f.
All network interfaces are disabled, so not scheduling any wakes in polling mode
All network interfaces are disabled, so not scheduling any wakes in reconnect mode
Experienced recent dropped connection. Using 30 minute wake interval
Network interfaces reporting BAD LQM. Altering timer interval to 5 minutes
Creating reconnect timers for iteration %i with keep alive interval %.4g and wake interval %.4g
%@ _intervalTimer = %@
%@ _reconnectWakeTimer = %@
%@ got error %@ from duet when trying to reanimate attribute %@.
%@ got admission response %@ from duet.
%@ got error %@ from duet when performing admission check.
%@ timed out waiting on callback from duet!
%@ got response from duet: hasBudget %@
_intervalTimer was already invalidated, no need to perform callback
%@ (%@) does not have budget to perform callout, bailing and starting next timer interval.
Timer fired. Delay is 0 so scheduling notification immediately. isWWANInterfaceUp %@, isWoWSupported %@
Timer fired. Delaying notification %g seconds. Last system wake: %@
Returned from callout
Calling out with reason %@ to delegate %@
Persistent interface link quality changed, firing interval timer: %@
Persistent interface went up while in reconnect mode. Firing reconnect timer.
%@ interfaceManagerInternetReachabilityChanged: %@ isRunning %@ delayTimer %@ wasReachable %@ isReachable %@ currentStyleIsPush? %@
Network went reachable while in reconnect mode. Firing reconnect timer.
Unable to write cache dictionary: %@
Unable to create directory %@ {error:%{public}@}
Request to schedule wake %d date %{public}@ leeway %g service identifier %{public}@ unique identifier %{public}@
%{public}@: _flushStaleTransitionsOnIvarQueue: old: %{public}@ new: %{public}@
%{public}@ [%{public}@](%{public}@): isInterfaceUsable? %{public}@ reachable %{public}@ linkQuality %d isNetworkCaptive? %@
%{public}@ [%{public}@](%{public}@): isInterfaceHistoricallyUsable? %{public}@ trackUsability %{public}@ offTransitions %{public}@
%{public}@ - _unscheduleReachaiblityMonitorOnIvarQueue
%{public}@ _createReachabilityMonitorOnIvarQueue
%{public}@ _reachabilityCallback %u
%{public}@ InterfaceUsabilityMonitor [%{public}@]: internet reachability changed to %s, via WWAN only %s (flags: %u)
%{public}@ - _unscheduleLinkQualityMonitorOnIvarQueue
%{public}@ Interface Manager: %{public}@(%{public}@) LinkQuality changed from %{public}@ to %{public}@ (%d)
%{public}@ _dynamicStoreCallbackOnIvarQueue - processing changedKey %{public}@ linkQualityInfo %{public}@. My own key %{public}@.
%{public}@ _dynamicStoreCallback with changedKeys %{public}@
%{public}@ _createLinkQualityMonitorOnIvarQueue
Interface manager: SCDynamicStoreCreate failed
Interface manager: SCDynamicStoreCreateRunLoopSource failed
%{public}@ Interface manager: creating monitor for interface: %{public}@ LinkQuality key: %{public}@
%{public}@ NonCellularUsabilityMonitor is in demo override mode! Using interface name %{public}@
%{public}@ NonCellularUsabilityMonitor - LQ changed from %d to %d
kPCWWANPowerlogCDRXNotification - state = %llu
%{public}@ _adjustInterfaceNameForWWANContextID contextID %ld  interfaceName %{public}@
%{public}@ updateFireTime from %{public}@ + %g to %{public}@ + %g, trigger from %{public}@ to %{public}@
Started simple timer %{public}@ with fire date [%{public}@]
%{public}@ created preventSleepTimer %{public}@ and fireTimer %{public}@ on queue %{public}@
Invalidating simple timer %{public}@
Not canceling system wake for [%{public}@], which is in the past
Canceling system wake for simpletimer [%{public}@]
Suspended timer for imminent system sleep
Firing simple timer that was scheduled to fire at [%{public}@] since time has moved backwards by at least %g seconds
%{public}@ Existing wake at %{public}@ re-scheduling to %{public}@ with leeway of %g
%{public}@ Canceling system wake for simpletimer [%{public}@]
SimpleTimer %{public}@ has fired
PCSimpleTimer - enabling power monitoring
Enabling power monitoring for %{public}@ - %lu timers
System is waking: kIOMessageSystemWillPowerOn
System will not sleep: kIOMessageSystemWillNotSleep
System woke: kIOMessageSystemHasPoweredOn
System can sleep query received: kIOMessageCanSystemSleep
System will sleep: kIOMessageSystemWillSleep
Disabling power monitoring for %{public}@ - %lu timers
PCSimpleTimer - no timers left, disabling power monitoring
%{public}@ initialized with target %{public}@ selector %{public}s timerSource %{public}@
%{public}@ in call back event handler
%{public}@ dealloced
%{public}@ performing call back
%{public}@ performed call back on target %@ selector %s
%{public}@ start with target %{public}@ selector %{public}s firetime %llu timerSource %{public}@
%{public}@ setFireDate %{public}@ and start with target %{public}@ selector %{public}s fireTime %llu deltaNanosec %{public}@ timerSource %{public}@
%{public}@ tried to setFireDate %{public}@ but the timer is not valid
%{public}@ is invalidated 
Callstack %{public}@
