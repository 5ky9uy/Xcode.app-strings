@(#)PROGRAM:ProtectedCloudKeySyncing  PROJECT:ProtectedCloudStorage-458.0.0.0.1
URDeviceList
URDevice
URKey
PCSUserRegistry
PCSUserRegistrySubscription
doneSubscription
devices
status
firstSeen
name
currentName
deviceIdentifier
escrowKey
keys
backupKeybag
escrowRecordID
backupClassic7
publicKey
escrow
backup
identity
keyStatus
com.apple.ProtectedCloudStorage
UserRegistry
PCS-APS
v8@?0
v24@?0q8@"NSError"16
com.apple.icloud-container.
com.apple.protectedcloudstorage.protectedcloudkeysyncing
v24@?0@"NSString"8@"NSError"16
done
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
record
serverChangeToken
UserRegistryStats
v24@?0@"NSDictionary"8@"NSError"16
deadbeef04d137be2e1730235f5664094b831186
com.apple.security.PCSIdentityBackup
error creating zone: %@
v24@?0@"CKRecordZone"8@"NSError"16
deviceList
URDevice-%@
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v24@?0@"CKRecord"8@"NSError"16
v16@?0@"NSError"8
v32@?0@"CKReference"8Q16^B24
%@-%@%@
v16@?0@"NSArray"8
v32@?0@"CKRecord"8Q16^B24
v32@?0@"NSString"8@16^B24
error fetching device %@: %@
%s%@
iCDP
InCircle
==========================
device: %@
firstVersion: %@
currentVersion: %@
escrow: %@
firstSeen: %@
status: %@ (%@)
numKeys: %lu
++++++++++++++++++++++++++
 failed to decode identity: %@ [%@]
key: %@
escrow: %@
firstSeen: %@
service: %@ (%d)
No cache
Device list invalid
Found: %d devices
iCDP: %ld
circle: %ld
publicKeys: %d
escrowIdentity: %d (should be 1)
Device issues
device: %@ (%@) doesn't have all keys (%d)
v32@?0@"CKRecord"8@"NSSet"16^B24
status: %@
keybag invalid
device keys invalid
kPCSURDevicesDevices missing: %@
kPCSURDevicesDevices not an array: %@
PCSURDevices device list record is missing: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
mainOperationQueue
T@"NSOperationQueue",&,V_mainOperationQueue
syncingAction
T@"PCSDelayedAction",&,V_syncingAction
recoverFromCKAction
T@"PCSDelayedAction",&,V_recoverFromCKAction
recordZoneID
T@"CKRecordZoneID",&,V_recordZoneID
T@"NSString",&,V_deviceIdentifier
deviceName
T@"NSString",&,V_deviceName
accounts
T@"AccountsModel",&,V_accounts
oslog
T@"NSObject<OS_os_log>",&,V_oslog
userdb
T@"UserRegistryDB",&,V_userdb
syncingOpertion
T@"CKFetchRecordZoneChangesOperation",&,V_syncingOpertion
resubmitSyncing
TB,V_resubmitSyncing
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
stats_dirty
TB,V_stats_dirty
stats
T@"UserRegistryStats",&,V_stats
databaseUpdate
T@?,C,V_databaseUpdate
Timed out waiting for a reply to %@ message with ID %@
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,V_timeoutTimer
replyBlock
T@?,C,V_replyBlock
completion
T@?,C,V_completion
com.apple.ProtectedCloudStorage.MessagerRegistration
com.apple.ProtectedCloudStorage.IDSMessaging
-[PCSIDSTransport setDeviceManager:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ProtectedCloudStorage_executables_Sim/ProtectedCloudStorage-458.0.0.0.1/ProtectedCloudKeySyncing/Shared/PCSIDSTransport.m
self.service
deviceManager
com.apple.ProtectedCloudStorage.outstandingReply
pendingReplies
T@"NSMutableDictionary",R,V_pendingReplies
internalQueue
T@"NSObject<OS_dispatch_queue>",R,V_internalQueue
service
T@"IDSService",R,V_service
serviceDelegateSet
TB,V_serviceDelegateSet
transaction
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"<PCSIDSMessagingDeviceManager>",W,N,V_deviceManager
delegate
T@"<PCSIDSMessagingDelegate>",W,N,V_delegate
com.apple.ProtectedCloudStorage.device_internal_queue
%@%@
38mm
42mm
Unknown
Unhandled
isConnected
TB,V_isConnected
isActivePairedDevice
TB,V_isActivePairedDevice
isTombstone
TB,V_isTombstone
syncingIsRestricted
TB,V_syncingIsRestricted
observers
T@"NSHashTable",R,V_observers
nrDevice
T@"NRDevice",R,V_nrDevice
idsDeviceIdentifier
T@"NSString",R,V_idsDeviceIdentifier
pairingID
T@"NSUUID",R
supportsPCSKeySync
TB,R
isReachable
model
T@"NSString",R
watchSize
buildVersion
osVersion
serialNumber
UUID
com.apple.pairedsync.protectedcloudkeysyncing
coordinator
T@"PSYSyncCoordinator",R,V_coordinator
stateObserver
T@"PSYInitialSyncStateObserver",R,V_stateObserver
com.apple.appconduitd.PCSDeviceManager.internal
T@"NSMutableDictionary",R,V_devices
activePairedDevice
T@"PCSDevice",&,V_activePairedDevice
T@"<PCSDeviceManagerDelegate>",W,V_delegate
allDevices
T@"NSArray",R
message
T@"NSDictionary",R,V_message
idsContext
T@"IDSMessageContext",R,V_idsContext
fromID
T@"NSString",R,V_fromID
no accounts
v32@?0@"ACAccount"8Q16^B24
No username found on accounts
No dsid found on accounts
store
T@"ACAccountStore",&,V_store
username
T@"NSString",R,V_username
dsid
T@"NSString",R,V_dsid
lastError
T@"NSString",R,V_lastError
updateCounter
TQ,R,V_updateCounter
PCSAccountQueue
ACDAccountStoreDidChangeNotification
v12@?0i8
PCSIDSSyncing
v16@?0@"PCSPeerSyncing"8
force
%@ - %@
transport
T@"PCSIDSTransport",&,V_transport
manager
T@"PCSKeySyncing",&,V_manager
peers
T@"NSMutableDictionary",&,V_peers
syncingQueue
T@"NSObject<OS_dispatch_queue>",&,V_syncingQueue
T@"NSOperationQueue",&,V_queue
com.apple.private.alloy.pcskey.sync
inital sync
Keys
iCDPFlag
v24@?0@"PCSIDSMessage"8@"NSError"16
v32@?0@"NSString"8Q16^B24
device
T@"PCSDevice",&,V_device
T@"NSData",&,V_keys
pendingRequest
TB,V_pendingRequest
clientVersion
Ti,V_clientVersion
client
T@"PCSKeyClient",&,V_client
syncingManager
T@"PCSKeySyncing",&,V_syncingManager
com.apple.ProtectedCloudStorage.rollBackupDisabled
actionOnTrigger
T@?,C,V_actionOnTrigger
delayInSeconds
TQ,V_delayInSeconds
operationQueue
T@"NSOperationQueue",&,V_operationQueue
waitSource
T@"NSObject<OS_dispatch_source>",&,V_waitSource
pendingTransaction
Tq,V_pendingTransaction
noTransaction
Tq,V_noTransaction
running
TB,V_running
PCSDelayedActionQueue
lastSeen
lastHash
lastSent
failures
numberHandshakes
firstSync
protocol
iCDP2
circle2
uuid
T@"NSString",&,V_uuid
T@"NSString",&,V_buildVersion
T@"NSDate",&,V_firstSync
T@"NSDate",&,V_lastSeen
T@"NSData",&,V_lastHash
T@"NSString",&,V_name
Ti,V_failures
T@"NSDate",&,V_lastSent
protocolVersion
Tq,V_protocolVersion
TB,V_iCDP
circle
TB,V_circle
isNewWatch
TB,V_isNewWatch
Tq,V_numberHandshakes
v32@?0@?<v@?@"NSString">8Q16^B24
v16@?0^{__CFString=}8
clients
v32@?0@8@16^B24
settings
T@"NSUserDefaults",&,V_settings
database
T@"UserRegistryDB",&,V_database
notifyHooks
T@"NSMutableArray",&,V_notifyHooks
com.apple.ProtectedCloudStorage.rollIfAged
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.pairedsync.syncDidComplete
com.apple.ProtectedCloudStorage.updatedKeys
com.apple.security.view-change.PCS
nextRegistrySync
request already pending
forceNetwork
v32@?0@8Q16^B24
EscrowRecordID not a string
No user registry
v40@?0@"NSData"8@"NSData"16@"NSArray"24@"NSError"32
T@"NSObject<OS_dispatch_queue>",&,V_internalQueue
registry
T@"PCSUserRegistry",&,V_registry
registryQueue
T@"NSObject<OS_dispatch_queue>",&,V_registryQueue
refreshLocalIdentities
T@"PCSDelayedAction",&,V_refreshLocalIdentities
serialOperationQueue
T@"NSOperationQueue",&,V_serialOperationQueue
syncing
T@"PCSIDSSyncing",&,V_syncing
roll
T@"PCSRollManatee",&,V_roll
com.apple.private.protectedcloudstorage.keysyncing
PCSSync
com.apple.ProtectedCloudStorage.daily
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.notifyd.matching
init
defaultAccountsModel
setMainOperationQueue:
alloc
initWithZoneName:ownerName:
copyMachineIdentifier
initWithDelay:operationQueue:
syncUserRegistry
setAction:
setHoldTransaction:
restoreFromCachedDevices
dsid
initWithDSID:
setUserdb:
userdb
oslog
cacheUserRegistryStats
stats
stats_dirty
setStats_dirty:
queue
saveUserRegistryStats
setTimeoutIntervalForResource:
setQualityOfService:
container
setupSyncing
syncingOpertion
cancel
setSyncingOpertion:
accountStatusWithCompletionHandler:
defaultCenter
checkAccountStatus:
addObserver:selector:name:object:
initWithEnvironmentName:queue:
setDelegate:
stringByAppendingString:
arrayWithObjects:count:
setEnabledTopics:
requestTokenForTopic:identifier:
serverPreferredPushEnvironmentWithCompletionHandler:
setupSubscriptions:
getConfigData:
initWithSubscriptionID:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
dataWithBytes:length:
replaceConfigRecord:data:
setModifySubscriptionsCompletionBlock:
userInteractiveConfiguration
setConfiguration:
addDatabaseOperation:
pushNotifications
setPushNotifications:
flushStats
trigger
lastfetchRecordZoneChangesAtStart
deleteServerChangeToken
clearCloudKitCache
zoneReset
setZoneReset:
setResubmitSyncing:
setLastfetchRecordZoneChangesAtStart:
getServerChangeToken
setPreviousServerChangeToken:
dictionaryWithObjects:forKeys:count:
initWithRecordZoneIDs:optionsByRecordZoneID:
defaultConfiguration
domain
isEqualToString:
code
mainOperationQueue
resyncDatabase
addOperationWithBlock:
databaseUpdate
saveServerChangeToken:
recoverFromCKAction
setRecordZoneFetchCompletionBlock:
recordID
recordName
saveRecord:
setRecordChangedBlock:
deleteRecordID:
setRecordWithIDWasDeletedBlock:
fetchRecordZoneChanges
setFetchRecordZoneChanges:
resubmitSyncing
syncingAction
checkRegistryLocal:complete:
setCompletionBlock:
data
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
recordType
objectForKeyedSubscript:
replaceRecordID:data:publicKey:
initForReadingWithData:
class
decodeObjectOfClass:forKey:
setStats:
recordFetch
setRecordFetch:
recordModify
setRecordModify:
getRecordIDData:
getRecordID:
qualityOfService
statFetch
initWithRecordIDs:
setFetchRecordsCompletionBlock:
deleteRecordAll
containerName
containerWithIdentifier:
privateCloudDatabase
privateDatabase
addOperation:
initWithZoneName:
saveRecordZone:completionHandler:
recordZoneID
initWithRecordName:zoneID:
deviceIdentifier
stringWithFormat:
deviceRecordIDName
accounts
lastError
setObject:forKeyedSubscript:
numberWithLong:
isEqualToNumber:
statModify
deviceRecordID
initWithRecordType:recordID:
date
deviceName
updateiCDPDeviceStatus:
updateEscrowKey:
initWithRecordsToSave:recordIDsToDelete:
count
firstObject
setModifyRecordsCompletionBlock:
deviceListRecordID
needZone:
createZone:
setPerRecordCompletionBlock:
createDeviceList:complete:
isKindOfClass:
countByEnumeratingWithState:objects:count:
isEqual:
arrayWithArray:
initWithRecord:action:
addObject:
saveDeviceList:complete:
fetchDeviceList:complete:
createDevice:complete:
ensureDeviceOnDeviceList:configuration:complete:
fetchDevice:complete:
array
enumerateObjectsUsingBlock:
fetchKeysByRecordIDs:completion:
subarrayWithRange:
removeObjectsInRange:
mutableCopy
updateDevice:withKeys:removeObjects:complete:
fetchDeviceKeys:completion:
UTF8String
keyRecordIdentity:device:version:
checkKeys:complete:
getThisDevice:complete:
compareKeys:device:complete:
fetchKeys:completion:
checkDeviceLocal:complete:
longValue
dictionary
identityCopySet
keyRecord:device:
updateEscrowData:escrowIdentity:identity:
updateCurrent:ident:key:
enumerateKeysAndObjectsUsingBlock:
length
appendFormat:
string
checkFlag:name:status:string:
statusString:
base64EncodedStringWithOptions:
printDevice:
deviceStatus:
setObject:forKey:
printKeys:
isEqualToSet:
printUserRegistryStats:
enumerateDevices:complete:
printKeys:complete:
recoverFromCachedDevices:
haveEscrowIdentity:
recoverKeysFromDevice:usingSet:memoryCache:
setData:
setFlags:
extractKeybagEscrowedData:
isEqualToData:
fetchDeviceKeys:configuration:complete:
getRecordID:configuration:complete:
dataUsingEncoding:
foundMatchingDevice:device:
removeObject:
initWithData:encoding:
escrowRecordIDsFromDeviceList:complete:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
initWithQueue:
setupStatCache
setupCloudKitSyncing
registerCloudKitNotifications
addContainerOperation:
checkRegistry:complete:
printCachedDevices
printCachedStats
printAllDevices:
printThisDevice:
fetchAllDeviceKeys:userInteractive:complete:
deleteThisDevice:
escrowRecordIDs:
.cxx_destruct
setDatabaseUpdate:
setSyncingAction:
setRecoverFromCKAction:
setRecordZoneID:
setDeviceIdentifier:
setDeviceName:
setAccounts:
setOslog:
setQueue:
_resubmitSyncing
_stats_dirty
_stats
_databaseUpdate
_mainOperationQueue
_syncingAction
_recoverFromCKAction
_recordZoneID
_deviceIdentifier
_deviceName
_accounts
_oslog
_userdb
_syncingOpertion
_queue
initWithFormat:arguments:
copy
setReplyBlock:
setCompletion:
errorWithDomain:code:userInfo:
runReplyHandlerWithMessage:error:
setTimeoutTimer:
replyBlock
completion
timeoutTimer
initWithTimeout:queue:logDescription:sentID:replyHandler:completion:
_timeoutTimer
_replyBlock
_completion
initWithServiceName:
initWithService:
service
internalQueue
addDelegate:queue:
serviceDelegateSet
setServiceDelegateSet:
sharedInstance
getPairedDevices
initForSimulatorWithNRDevice:
setSimulatedDevices:
idsDeviceIdentifier
setWithObject:
numberWithDouble:
numberWithBool:
sendMessage:toDestinations:priority:options:identifier:error:
pendingReplies
removeObjectForKey:
setTransaction:
idsContext
expectsPeerResponse
message
fromID
outgoingResponseIdentifier
incomingResponseIdentifier
initWithMessage:idsContext:fromID:
delegate
incomingMessage:fromDevice:
transportWithIDSServiceName:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setDeviceManager:
sendMessage:toDevice:withPriority:timeout:logDescription:handleReply:
sendResponse:toMessage:withPriority:timeout:logDescription:
copyLocalPairedDevices
transaction
deviceManager
_serviceDelegateSet
_delegate
_pendingReplies
_internalQueue
_service
_transaction
_deviceManager
weakObjectsHashTable
nrDevice
valueForProperty:
boolValue
setIsConnected:
setIsActivePairedDevice:
UUIDString
observers
isConnected
isActivePairedDevice
_onQueue_isReachable
addObserver:
removeObserver:
pairingID
supportsPCSKeySync
isReachable
model
watchSize
buildVersion
osVersion
serialNumber
UUID
isTombstone
setIsTombstone:
syncingIsRestricted
setSyncingIsRestricted:
_isActivePairedDevice
_isConnected
_isTombstone
_syncingIsRestricted
_nrDevice
_idsDeviceIdentifier
_observers
initWithAccountsModel:
main
syncCoordinatorWithServiceName:
initWithDelegate:
syncSessionType
sharedManager
pairedDevice
deviceForNRDevice:
defaultSyncingManager
getClientWithIdentifier:
isNewWatch
defaultPCSSyncing
checkSyncingForPeer:force:
syncDidComplete
sharedSyncDelegate
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
syncingIsRestrictedForPairingID:
coordinator
stateObserver
_coordinator
_stateObserver
activePairedDevice
devices
allValues
deviceForPairingID:
setActivePairedDevice:
newDevices:removedDevices:
currentActivePairedDevice
deviceForIDSIdentifier:
allDevices
_devices
_activePairedDevice
_message
_idsContext
_fromID
setStore:
update
aa_isPrimaryAccount
store
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
accountIsPrimary:
aa_appleId
aa_personID
username
updateCounter
_username
_dsid
_lastError
_updateCounter
_store
transport
handleIncomingMessage:
connectionForDevice:complete:
syncingQueue
peers
manager
initWithDevice:syncingManager:
updateLastSeen
checkSyncing:
setName:
saveClient:
initWithManager:transport:serialQueue:
havePeers
triggerIDSSyncing:
devicesAreNowNearby:
devicesAreNoLongerNearby:
setTransport:
setManager:
setPeers:
setSyncingQueue:
_transport
_manager
_peers
_syncingQueue
device
client
setLastSeen:
numberWithUnsignedInt:
lastSent
timeIntervalSinceDate:
lastSeen
failures
checkRatelimit:
timeUntilSyncing
lastHash
updateClient:
protocolVersion
sendKeys
copyAllPCSKeys:
copySHA256Hash:
checkHashWithRateLimit:
ratelimitClientSyncing
pendingRequest
setKeys:
setPendingRequest:
numberHandshakes
setNumberHandshakes:
setLastSent:
keyFailure:
intValue
setClientVersion:
haveKeys:
sendKeysOld
syncingManager
setProtocolVersion:
sendCommand:data:dsid:handleReply:
keys
signalComplete:
pcsKeyData:
updateSyncedKeysToDevice:type:keys:
sendSomeKeys:dsid:
sendKeys:dsid:handleReply:
outStandingPCSKeys:
iCDPStatus
companionCircleMember
iCDP
circle
setPeeriCDPStatus:
setPeerCircleStatus:
sendiCDPStatus:circleStatus:handleReply:
setBuildVersion:
setFailures:
firstSync
setFirstSync:
setLastHash:
setICDP:
setCircle:
uuid
setDevice:
clientVersion
setClient:
setSyncingManager:
_pendingRequest
_clientVersion
_device
_keys
_client
_syncingManager
rollKeys:dsid:expire:
rollNow:forDSID:
rollByAge:forDSID:
rollForSyncCircles:forDSID:
rollForBackupChange:forDSID:
knownUserKey
knownPeers
inBackup
actionOnTrigger
setActionOnTrigger:
delayInSeconds
setDelayInSeconds:
operationQueue
setOperationQueue:
waitSource
setWaitSource:
pendingTransaction
setPendingTransaction:
noTransaction
setNoTransaction:
running
setRunning:
_running
_actionOnTrigger
_delayInSeconds
_operationQueue
_waitSource
_pendingTransaction
_noTransaction
setUuid:
updateWithValues:
setIsNewWatch:
name
numberWithInt:
dictionaryWithDictionary:
initWithName:values:
getValues
_iCDP
_circle
_isNewWatch
_failures
_uuid
_buildVersion
_firstSync
_lastSeen
_lastHash
_name
_lastSent
_protocolVersion
_numberHandshakes
copyIdentitySet
userRegistry
beginExclusiveTransaction
setMirrorKey:service:type:publicIdentity:
updateMirrorKey:service:type:current:
endTransaction:
updateSyncDevice:seen:version:
syncedKeyToDevice:type:device:
syncDevices
missingKeysFromDevice:type:
dataWithLength:
bytes
mutableBytes
settings
dictionaryForKey:
updateSyncDevice:version:
addUpdateNotify:
storePCSKeyData:current:
setiCDPStatus:
setCompanionCircleMember:
syncKeysWithDatabase
allClients
setSettings:
database
setDatabase:
notifyHooks
setNotifyHooks:
_settings
_database
_notifyHooks
initWithPCSKeySyncing:
setInternalQueue:
setMaxConcurrentOperationCount:
setSyncing:
setRegistry:
registry
setRegistryQueue:
setRefreshLocalIdentities:
refreshLocalIdentities
triggerWatchSyncing:
queuedCheckRegistry:withReply:
syncing
notifyKeyRegistry
syncKeys:withReply:
stringWithUTF8String:
setWithArray:
containsObject:
roll
serialOperationQueue
objectForKey:
compare:
dateByAddingTimeInterval:
triggerRefreash
notifyInternalEvent:
registryQueue
notifyDailyEvent
getPCSKeyHash:
getAllClients:
requestKeys:withReply:
triggerDaily:withReply:
triggerSyncingWithEscrowProxy:
fetchAllDeviceKeys:withReply:
triggerUserRegistryCheck:withReply:
deleteThisDevice:withReply:
escrowRecordIDs:withReply:
fetchStats:
notifyEvent:
setSerialOperationQueue:
setRoll:
_registry
_registryQueue
_refreshLocalIdentities
_serialOperationQueue
_syncing
_roll
valueForEntitlement:
processIdentifier
interfaceWithProtocol:
setExportedInterface:
exportedInterface
setExportedObject:
resume
listener:shouldAcceptNewConnection:
initWithMachServiceName:
currentRunLoop
Failed to initalize UserRegistryDB
accountStatusWithCompletionHandler: %d error: %@
Starting to sync
Stoping syncing
subscription completed
Couldn't create database subscription; syncing is severely degraded: %@
didReceiveToken: %@, triggering syncing
Got CloudKit error: %@
Got other error: %@
got update for: %@
Record deleted: %@
syncing done, checking data
checkRegistryLocal as part of syncing done
Setting up syncing with CloudKit
Fetching device from network: qos: %d
Failed fetching record %@: %@
Had record %@ in cache
Failed to getting dsid: %@
Failed to parse cloud keychain PCS data: %@
Failed to fetch dsid from accounts: %@
Failed to fetch identity set: %@
error fetching deviceList %@: %@
failed to save device list: %@
Failed to get deviceList: %@
Failed fetching key %@: %@
updating %u records, removing %u records
failed to store record: %@
Stored record, saving in cache: %@
update device complete
Failed to create escrow identity: %@
Failed to get device: %@
device keys not an array: %@
checkUserRegistry
Failed to get or create device in CK: %@
Fail getting dsid: %@
Failed to get PCS identities: %@
No identities
Failed to get escrow identity we once had: %@
Check devices in records
Invalid URKey record: %@
PCS key identity in registry but missing locally: %@
Adding identity: %@
Failed to decode escrow field: %@
Compare with local store list
Register unknown key: %@
Updating escrow for registed key: %@
Have changes, pushing to CloudKit
No device or key changes
%@: No escrow data for %@
%@: Didn't find %@, trying to recover escrow
%@: Failed to decode escrow field: %@
%@: complete recover (found: %lu, added: %lu)
Failed to PCS identities: %@
No escrow identity, wont perform user registry recovery
Have escrow identity: %@
Start recover from all devices
no devices
device: %@ missing
device: %@ deviceKeys: %@
Failed to fetch URKey: %@: %@
Got keys URKey: %@
fetchAllDevice: userInteractive: %d recordID: %@
device getRecord returned: %@
deviceList getRecord returned: %@
found matching device on escrowRecordID: %@
escrowRecordID not found in cache, trying network: %@
found matching network device on escrowRecordID: %@
Failed to fetch URDevice: %@: %@
device network getRecord returned: %d
Delete this device
no device list ?: %@
found ourself in device list
This device not found
delete completed with: %@
Failed to create IDSService for %@
NanoRegistry returned nil from getPairedDevices
NanoRegistry returned an empty array from getPairedDevices
Sent %@ message with IDS UUID %@
Error occurred sending %@ message with no replyHandler: %@
Reply attempted to message that did not expect peer response: %@ -> %@
Failed to get response ID from original message id %@; dropping reply
Failed to send response with ID %@ to message with ID %@
Received reply for message ID %@ with ID %@
Got message with ID %@ with response ID %@, but no reply handler available
Received message with ID %@
Got message from %@ with id %@ with no delegate set
Error occurred sending message %@: %@
Synchronize keys with escrow proxy
Fail to synchronize keys: %@
Synchronize keys complete
Beginning %@ sync session
Found watch: %@ new: %d
No active paired device
No IDS Device registered with identifier %@
Failed to find device with pairing ID %@
Failed to get pairing ID from device %@
no accounts found
no accounts found: %@
Failed to get PCSDevice for identifier %@; dropping message.
Failed to get sync connection for IDS device %@; dropping message
syncing  with: %@
Device %@ has disappeared
Device %@ appeared. isActive:%d, isConnected:%d
Device %@ is now nearby (isActive:%d)
Device %@ is no longer nearby (isActive:%d)
sending message: %d to peer: %@
sending keys to peer: %@
Device %@ checking if syncing needed
Can't get initial data: %@
Can't get initial hash: %@
Client %@ already have uptodate keys
Client %@ have same os version: %@
Ratelimit sending to device %@
initial request to device %@ already pending
Sending inital check-in to device %@ hash: %@
reply from initital checkin: %@ error: %@
Client have keys: %@
Client requests updating keys: have %@
Client requests new protocol
sendKeys request to device %@ already pending
Can't get dsid
Sending keys to device %@ hash:%@
reply from send key: %@ error: %@
client confirms it have key: %@
client failed
No key to send [to device: %@
sending %lu (%lu left) keys to
client confirms stored keys: %u
device: %@ type: 1 keys: %@
client failed: %d
Can't get pending keys
local iCDP: %d, cached peer iCDP status: %d
local circle: %d, cached peer circle status: %d
Setting peer iCDP status to: %d and circle to: %d
Failed to send message to peer: %@, trying later
Peer confirmed iCDP state too: %d
Other failure to store iCDP state: %d, trying later
handleIncomingMessage watch requested keys: %@
handleIncomingMessage unknown command %d from device: %@
Rolling keys (timebased: %d)
No identity set
Not rolling keys - key rolling is disabled
rollForSyncCircles
Failed Rolling Manatee Keys for circle configuration change. (%@)
Rolling keys happen, syncing with escrow proxy
failed to syncronize key: %@
Not rolling keys - CircleChange -  key rolling is disabled
Failed Rolling Manatee Keys for backup configuration change. (%@)
Not rolling keys - BackupChange -  key rolling is disabled
Failed to get identity set for pcsKey extraction
Failed to parse key data: %@
Failed to get iCDP: %@
Failed to set iCDP: %@
Failed to get database
Updating service %@
Failed to get copy of identites of service type: %@
failed to open database transaction
Syncing %lu identites %@ with database
Trigger syncing with watches
No peers, not doing any syncing with watches
Catching up local database changes from keychain
Trigger syncing to watches
notify sync key complete: %@: error: %@
Got darwin notification %@
Rolled Manatee Identities that were too old.
Rolled Manatee Identities for circle change.
Rolled Manatee Identities for backup disabled.
Trigger syncing with escrow proxy on behalf of cloudd: next sync: %@
skipping sync due to ratelimiting, doing CKKS sync though
CKKS sync failed with: %@
CKKS sync completed
CKKS sync timed out
setting cloudd expiration to: %@
Already a request (recently) pending, returning early
Requsted keys sync
Limited request since it happen too often
Fetching all device keys
Client pid: %d doesn't have entitlement: %@
PCSUserRegistry
APSConnectionDelegate
NSObject
PCSIDSReplyContext
PCSIDSTransport
IDSServiceDelegate
PCSDevice
EscrowProxySyncOperation
PCSPairedSyncDelegate
PSYSyncCoordinatorDelegate
PSYInitialSyncStateObserverDelegate
PCSDeviceManager
PCSIDSMessagingDeviceManager
PCSIDSMessage
AccountsModel
PCSIDSSyncing
PCSIDSMessagingDelegate
PCSPeerSyncing
PCSRollManatee
PCSDelayedAction
PCSKeyClient
PCSKeySyncing
PCSSyncing
PCSSyncingProtocol
ServiceDelegate
NSXPCListenerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@24@0:8@16
v16@0:8
v20@0:8B16
v40@0:8@16@24@?32
v32@0:8@16@?24
v48@0:8@16@24@32@?40
B40@0:8@16^{_PCSIdentityData=}24^{_PCSIdentityData=}32
@40@0:8^{_PCSIdentityData=}16@24@32
@32@0:8^{_PCSIdentityData=}16@24
B32@0:8q16@?24
B32@0:8@16@?24
^{_PCSIdentitySetData=}16@0:8
B40@0:8^{_PCSIdentitySetData=}16^{_PCSIdentityData=}24@32
v32@0:8q16@?24
v48@0:8q16@24q32@40
q24@0:8@16
v24@0:8@?16
v40@0:8@16^{_PCSIdentitySetData=}24^{_PCSIdentitySetData=}32
B24@0:8^{_PCSIdentitySetData=}16
v24@0:8^{_PCSIdentitySetData=}16
B32@0:8@16@24
v36@0:8@16B24@?28
@?16@0:8
@"UserRegistryStats"
@"NSOperationQueue"
@"PCSDelayedAction"
@"CKRecordZoneID"
@"NSString"
@"AccountsModel"
@"NSObject<OS_os_log>"
@"UserRegistryDB"
@"CKFetchRecordZoneChangesOperation"
@"NSObject<OS_dispatch_queue>"
@64@0:8d16@24@32@40@?48@?56
@"NSObject<OS_dispatch_source>"
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24q32d40@48@?56
v56@0:8@16@24q32d40@48
@"<PCSIDSMessagingDelegate>"
@"NSMutableDictionary"
@"IDSService"
@"NSObject<OS_os_transaction>"
@"<PCSIDSMessagingDeviceManager>"
@"NRDevice"
@"NSHashTable"
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"PSYSyncCoordinator"
@"PSYInitialSyncStateObserver"
v24@0:8@"NSArray"16
@"<PCSDeviceManagerDelegate>"
@"PCSDevice"
@40@0:8@16@24@32
@"NSDictionary"
@"IDSMessageContext"
@"ACAccountStore"
v32@0:8@"PCSIDSMessage"16@"NSString"24
@"PCSIDSTransport"
@"PCSKeySyncing"
@32@0:8@16@24
v44@0:8I16@20@28@?36
v32@0:8B16B20@?24
d24@0:8d16
d16@0:8
i16@0:8
v20@0:8i16
@"NSData"
@"PCSKeyClient"
B36@0:8^{_PCSIdentitySetData=}16@24i32
B32@0:8^{_PCSIdentitySetData=}16@24
@"NSMutableSet"
@32@0:8Q16@24
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSDate"
B28@0:8@16B24
B20@0:8B16
@24@0:8^@16
B36@0:8@16i24@28
@"NSUserDefaults"
@"NSMutableArray"
v24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?>16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"UserRegistryStats">16
@"PCSUserRegistry"
@"PCSIDSSyncing"
@"PCSRollManatee"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
bplist00
 !"#$%&'($)*_
BuildMachineOSBuild_
CFBundleDevelopmentRegion_
CFBundleDisplayName_
CFBundleExecutable_
CFBundleIdentifier_
CFBundleInfoDictionaryVersion\CFBundleName_
CFBundleShortVersionString_
CFBundleSignature_
CFBundleSupportedPlatforms_
CFBundleVersionZDTCompiler_
DTPlatformBuild^DTPlatformName_
DTPlatformVersionZDTSDKBuildYDTSDKNameWDTXcode\DTXcodeBuild_
MinimumOSVersion_
NSHumanReadableCopyright^UIDeviceFamilyW16B2657Ren_
ProtectedCloudKeySyncing_
8com.apple.protectedcloudstorage.protectedcloudkeysyncingS6.0S1.0T????
iPhoneSimulatorQ1_
"com.apple.compilers.llvm.clang.1_0P_
iphonesimulatorT11.0W15A301a_
iphonesimulator11.0T0900V9M136io
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<string>UniqueDeviceID</string>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_read</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_write</key>
<true/>
<key>com.apple.private.ckks.plaintextfields</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.packages</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.pcskey.sync</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.securebackupd.access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
