The %@ initializer is not available.
The %@ parameter must not be nil.
mediaLibrary
requests
v8@?0
T@"NSArray",C,N,V_requests
responses
T@"NSArray",C,N,V_responses
error
T@"NSError",C,N,V_error
privateQueue
T@"NSOperationQueue",&,N,V_privateQueue
T@"VUIMPMediaLibrary",&,N,V_mediaLibrary
ContentDescription
ContentRating
CoverArtURL
Credits
Duration
Episode
Episodes
EpisodeNumber
GenreTitle
HomeVideos
Identifier
Local
Movies
MovieRentals
PreviewFrameURL
ReleaseDate
Seasons
SeasonNumber
Shows
Studio
Title
Type
headerView
T@"UIView",&,N,V_headerView
collectionView
T@"UICollectionView",&,N,V_collectionView
v32@?0@"VUILibraryEpisodeShelfEpisodeViewModel"8Q16^B24
v12@?0B8
@"NSArray"16@?0@"NSIndexSet"8
EPISODES_PLURAL
Localizable
EPISODES_SINGULAR
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
onlyShowLocalContent
TB,N
episodeViewModels
T@"NSArray",C,N,V_episodeViewModels
episodeDetailViewController
T@"VUIEpisodeDetailViewController",&,N,V_episodeDetailViewController
popoverIndexPath
T@"NSIndexPath",&,N,V_popoverIndexPath
shouldIgnoreSelectEvent
TB,N,V_shouldIgnoreSelectEvent
delegate
T@"<VUILibraryEpisodeShelfViewControllerDelegate>",W,N,V_delegate
TB,N,V_onlyShowLocalContent
episode
T@"VUIMediaItem",&,N,V_episode
assetController
T@"NSObject<VUIMediaEntityAssetController>",&,N,V_assetController
g_mask
pg_mask
pg13_mask
r_mask
nr_mask
unrated_mask
nc17_mask
tvy_mask
tvy7_mask
tvg_mask
tvpg_mask
tv14_mask
tvma_mask
tvy7fv_mask
NZ_G
NZ_PG
NZ_M
NZ_R13
NZ_R15
NZ_R16
NZ_R18
NZ_RP13
NZ_RP16
NZ_R
bars-l
bars-10
bars-12
bars-14
bars-16
bars-18
BBFC_U
BBFC_PG
BBFC_12A
BBFC_12
BBFC_15
BBFC_18
BBFC_R18
resourceName
T@"NSString",C,N,V_resourceName
templatedImage
TB,N,GisTemplatedImage,V_templatedImage
pg13
unrated
nc-17
tvy7
tvpg
tv14
tvma
tvy7fv
rp13
rp16
%@-%@
imageRecords
T@"NSDictionary",&,N,V_imageRecords
v32@?0@"VUIMediaEntityFetchResponse"8Q16^B24
v16@?0@"<VUIMediaEntitiesFetchControllerDelegate>"8
T@"<VUIMediaEntitiesFetchControllerDelegate>",W,N,V_delegate
response
T@"VUIMediaEntityFetchResponse",R,N,V_response
VUIMediaLibraryManagerHomeSharesDidChangeNotification
VUIMediaLibraryManagerHomeSharesDidChangeUserInfoKeyMediaLibraries
VUIMediaLibraryManagerHomeSharesDidChangeUserInfoKeyChangeSet
com.apple.videosuicore.VUIMediaLibraryManager.serialProcessingQueue
PlistDatabasePath
com.apple.VideosUI
homeShareMediaLibraries
v16@?0@"VUIMediaLibraryManager"8
identifier
UseTVHomeSharing
com.apple.VideosUICore
deviceMediaLibrary
T@"VUIDeviceMediaLibrary",&,N,V_deviceMediaLibrary
serialProcessingDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialProcessingDispatchQueue
homeShareManager
T@"NSObject<VUIHomeShareMediaLibraryManager>",&,N,V_homeShareManager
completionDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_completionDispatchQueue
T@"NSArray",R,C,N
activeMediaLibrary
T@"VUIMediaLibrary",&,V_activeMediaLibrary
v20@?0B8@"NSError"12
T@"<VUIMediaLibraryApplicationControllerDelegate>",&,N,V_delegate
Disconnected
Connecting
Connected
Disconnecting
latestFetchResponses
currentFetchResponses
The fetch responses arrays parameters must be non empty and contain the same number of response objects
@"NSObject<NSCopying>"16@?0@"VUIMediaEntityGroup"8
@"VUICollectionChangeSet"24@?0@"VUIMediaEntityGroup"8@"VUIMediaEntityGroup"16
@"NSObject<NSCopying>"16@?0@"VUIMediaEntity"8
B24@?0@"VUIMediaEntity"8@"VUIMediaEntity"16
fetchResponseChanges
T@"NSArray",C,N,V_fetchResponseChanges
T@"NSArray",C,N,V_latestFetchResponses
T@"NSArray",C,N,V_currentFetchResponses
textBadge
scorecardView
backgroundImageForMaterialRendering
T@"UIImage",&,N
overlayLayout
T@"<VUIOverlayLayoutProtocol>",R,N
T@"VUISportsOverlayLayout",&,N,V_overlayLayout
viewElement
T@"TVViewElement",&,N,V_viewElement
scorecardData
T@"NSArray",C,N,V_scorecardData
scorecardElement
T@"TVViewElement",&,N,V_scorecardElement
T@"VUIScorecardView",&,N,V_scorecardView
textBadgeHasMaterial
TB,N,V_textBadgeHasMaterial
T@"VUITextBadgeView",&,N,V_textBadge
logo
T@"_TVImageView",&,N,V_logo
logoElement
T@"TVImageElement",&,N,V_logoElement
backgroundImageOperationQueue
T@"NSOperationQueue",&,N,V_backgroundImageOperationQueue
scorecardViewBackgroundImage
T@"UIImage",&,N,V_scorecardViewBackgroundImage
backgroundImageHasChanged
TB,N,V_backgroundImageHasChanged
T@"UIImage",&,N,V_backgroundImageForMaterialRendering
@"NSString"16@?0@"VUIMediaEntityGroup"8
@"NSString"16@?0@"VUIMediaEntity"8
q24@?0@"VUIMediaEntityType"8@"VUIMediaEntityType"16
v32@?0@8Q16^B24
title
seasonCount
mediaItemCollection
requestedProperties
@16@?0@"VUIMediaEntityPropertyDescriptor"8
T@"VUIOverlayLayout",&,N,V_overlayLayout
progressView
T@"_TVProgressView",&,N,V_progressView
progressViewElement
T@"TVViewElement",&,N,V_progressViewElement
appImageView
T@"_TVImageView",&,N,V_appImageView
appImageElement
T@"TVViewElement",&,N,V_appImageElement
T@"MPMediaLibrary",&,N,V_mediaLibrary
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_response
%@=%@
mediaEntities
sortIndexes
<%@>
T@"NSObject<NSCopying>",C,N,V_identifier
T@"NSArray",C,N,V_mediaEntities
T@"NSArray",C,N,V_sortIndexes
presentingViewController
T@"UIViewController",R,N,V_presentingViewController
presentedViewController
T@"UIViewController",R,N,V_presentedViewController
interactionController
T@"VUIPreviewInteractionController",&,N,V_interactionController
T@"<VUIDialogInteractionControllerDelegate>",W,N,V_delegate
currentIndexPath
T@"NSIndexPath",&,N,V_currentIndexPath
isPresenting
TB,N,V_isPresenting
%lu|
ratingSystem
Tq,N,V_ratingSystem
ratingLabel
T@"NSString",C,N,V_ratingLabel
rank
TQ,N,V_rank
ratingDescription
T@"NSString",C,N,V_ratingDescription
explicitContent
TB,R,N,GisExplicitContent
stringRepresentation
T@"NSString",R,C,N
tintColor
T@"UIColor",&,N,V_tintColor
line
T@"UIView",&,N,V_line
lineHeight
Td,N,V_lineHeight
IncludeSortIndexes
IncludeGroupingSortIndexes
ForcePopulateProperties
__All__
genreTitle
resolution
HLSResolution
colorCapability
audioCapability
HLSColorCapability
HLSAudioCapability
extrasURL
rentalPlaybackDuration
rentalExpirationDate
isLocal
releaseYear
releaseDate
seasonNumber
storeID
isPlayable
duration
previewFrameImageIdentifier
episodeNumber
mediaEntityType
predicate
sortDescriptors
properties
range
%@,%@
groupingKeyPath
groupingSortComparator
options
Unknown key for sort descriptor! %@
T@"NSString",C,N,V_identifier
T@"VUIMediaEntityType",C,N,V_mediaEntityType
_isItemsFetch
TB,R,N
_isCollectionsFetch
_isShowsFetch
_isSeasonsFetch
T@"NSPredicate",C,N,V_predicate
T@"NSArray",C,N,V_sortDescriptors
T@"NSSet",C,N,V_properties
T{_NSRange=QQ},N,V_range
T@"NSString",C,N,V_groupingKeyPath
T@?,C,N,V_groupingSortComparator
T@"NSDictionary",C,N,V_options
type
coverArtImageIdentifier
com.apple.videosuicore.VUIMPMediaItemAssetControllerManager.serialProcessingQueue
libraryFileURL
T@"NSURL",C,N,V_libraryFileURL
maxLineCount
Tq,R,N
interitemSpacing
Td,R,N
padding
T{UIEdgeInsets=dddd},R,N
groupedInfos
T@"NSArray",C,N,V_groupedInfos
normalizedGroupedInfos
T@"NSArray",C,N,V_normalizedGroupedInfos
layoutType
Tq,N,V_layoutType
lineSpacing
Td,R,N,V_lineSpacing
headerMargin
T{UIEdgeInsets=dddd},N,V_headerMargin
footerView
T@"UIView",&,N,V_footerView
footerMargin
T{UIEdgeInsets=dddd},N,V_footerMargin
infos
T@"NSArray",C,N,V_infos
Td,N,V_lineSpacing
headerPadding
T{UIEdgeInsets=dddd},N,V_headerPadding
groupName
T@"NSString",C,N,V_groupName
headerContentView
T@"UIView",&,N,V_headerContentView
dataViews
T@"NSArray",C,N,V_dataViews
-[VUIMetricsController submitLibraryPageEvent]
-[VUIMetricsController submitLibraryMediaPlayEventForMediaItem:]
xp_amp_watchlist
Library
PurchaseSeason
PurchaseMovie
Movie
MovieRental;
HomeVideo
Show
Season
Device
HomeShare
clientId
xp_ci
-[VUIMetricsController _createMetricsController]
-[VUIMetricsController _populateBaseFieldsAndSendEvent:thatOccuredAt:]
-[VUIMetricsController _populateBaseFieldsAndSendEvent:thatOccuredAt:]_block_invoke
v16@?0@"NSError"8
%@_%@
-[VUIMetricsController _submitLibraryMediaPlayEventForMediaItem:withDate:]
CoverArt
PreviewFrame
Item
Collection
titleLabel
T@"VUILabel",&,N,V_titleLabel
subtitleLabel
T@"VUILabel",&,N,V_subtitleLabel
secondSubtitleLabel
T@"VUILabel",&,N,V_secondSubtitleLabel
seasonImageView
T@"_TVImageView",&,N,V_seasonImageView
topSeparatorView
T@"VUISeparatorView",&,N,V_topSeparatorView
bottomSeparatorView
T@"VUISeparatorView",&,N,V_bottomSeparatorView
EpisodeList
%@. %@
imageFrameView
T@"VUILibraryEpisodeFrameView",&,N,V_imageFrameView
separatorView
T@"VUISeparatorView",&,N,V_separatorView
episodeInfoStackView
T@"UIStackView",&,N,V_episodeInfoStackView
releaseDateLabel
T@"VUILabel",&,N,V_releaseDateLabel
durationLabel
T@"VUILabel",&,N,V_durationLabel
downloadButton
T@"VUIDownloadButton",&,N,V_downloadButton
dotSeparatorLabel
T@"VUILabel",&,N,V_dotSeparatorLabel
downloadProgressType
Tq,N,V_downloadProgressType
downloadProgress
Td,N,V_downloadProgress
T@"<VUILibraryEpisodeListCellDelegate>",W,N,V_delegate
T@"NSString",C,N,V_title
T@"NSString",C,N,V_releaseDate
T@"NSString",C,N,V_duration
supportsStartingDownload
TB,N,V_supportsStartingDownload
VUIPopoverViewCellReuseIdentifier
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
popoverTitle
T@"NSString",R,C,N,V_popoverTitle
selectedItemIndexPath
T@"NSIndexPath",&,N,V_selectedItemIndexPath
dataSource
T@"<VUILibraryPopoverDataSource>",W,N,V_dataSource
T@"<VUILibraryPopoverDelegate>",W,N,V_delegate
studio
credits
previewFrameURL
contentRating
season
T@"VUIPlistMediaDatabaseSeason",W,N,V_season
playable
T@"NSNumber",R,C,N,GisPlayable
T@"NSNumber",C,N,V_duration
T@"NSDate",C,N,V_releaseDate
T@"NSURL",C,N,V_previewFrameURL
T@"VUIContentRating",C,N,V_contentRating
T@"NSNumber",C,N,V_episodeNumber
T@"NSString",C,N,V_studio
T@"VUIMediaItemCredits",C,N,V_credits
Unable to determine the VUIMediaEntityKind to use for this request: %@
Unexpected media entity type!
T@"VUIPlistMediaLibrary",&,N,V_mediaLibrary
T@"NSArray",&,N,V_responses
fetchControllers
v24@?0q8@"NSError"16
T@"NSArray",C,N,V_fetchControllers
mediaLibraryRevision
TQ,N,V_mediaLibraryRevision
v16@?0@"<VUIMediaItemEntityTypesFetchControllerDelegate>"8
T@"<VUIMediaItemEntityTypesFetchControllerDelegate>",W,N,V_delegate
LIBRARY_GENERIC_FETCH_ERROR_TITLE
GENERIC_DELETED_ERROR_MESSAGE_FORMAT
EpisodeDetail
mediaItem
T@"VUIMediaItem",&,N,V_mediaItem
detailView
T@"VUIEpisodeDetailView",&,N,V_detailView
tapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_tapGestureRecognizer
metricsController
T@"VUIMetricsController",&,N,V_metricsController
T@"<VUIEpisodeDetailViewControllerDelegate>",W,N,V_delegate
backgroundColor
T@"UIColor",&,N,V_backgroundColor
highlightedBackgroundColor
T@"UIColor",&,N,V_highlightedBackgroundColor
shouldAppearSelected
TB,N,V_shouldAppearSelected
localizedRating
localizedReason
ratingLevel
ratingProvider
cast
screenwriters
directors
producers
name
Unexpected MPMediaItem type passed to -initWithMediaLibrary:mediaItem:requestedProperties:
@"NSOrderedSet"16@?0@"NSArray"8
%llu_%@_%@
vui_mediaEntityType
T@"VUIMediaEntityType",R,N
vui_resolution
T@"NSNumber",R,N
vui_colorCapability
vui_audioCapability
vui_HLSResolution
vui_HLSColorCapability
vui_HLSAudioCapability
vui_coverArtImageIdentifier
T@"NSString",R,N
vui_previewFrameImageIdentifier
vui_showIdentifier
T@"NSObject<VUIMediaEntityIdentifier>",R,N
vui_seasonIdentifier
vui_studio
vui_credits
T@"VUIMediaItemCredits",R,N
vui_contentRating
T@"VUIContentRating",R,N
vui_isLocal
vui_isPlayable
vui_extrasURL
T@"NSURL",R,N
vui_playedState
vui_rentalEndDate
T@"NSDate",R,N
vui_rentalPlaybackEndDate
vui_rentalExpirationDate
vui_assetType
textStyle
Tq,N,V_textStyle
maximumContentSizeCategory
T@"NSString",&,N,V_maximumContentSizeCategory
fontWeight
Tq,N,V_fontWeight
fontSize
Td,N,V_fontSize
fontTraits
TI,N,V_fontTraits
margin
T{UIEdgeInsets=dddd},N,V_margin
color
T@"UIColor",&,N,V_color
highlightOrSelectedColor
T@"UIColor",&,N,V_highlightOrSelectedColor
textTransform
Tq,N,V_textTransform
alignment
Tq,N,V_alignment
numberOfLines
TQ,N,V_numberOfLines
numberOfLinesAXSmall
TQ,N,V_numberOfLinesAXSmall
numberOfLinesAXLarge
TQ,N,V_numberOfLinesAXLarge
minimumScaleFactor
Td,N,V_minimumScaleFactor
shadow
T@"NSShadow",&,N,V_shadow
letterSpacing
T@"NSNumber",&,N,V_letterSpacing
blendMode
Ti,N,V_blendMode
mediaEntitiesByShelfType
@"NSObject<NSCopying>"16@?0@"NSObject<NSCopying>"8
B24@?0@"NSObject<NSCopying>"8@"NSObject<NSCopying>"16
B24@?0Q8@"VUICollectionChange"16
v32@?0@"NSObject<NSCopying>"8@"NSArray"16^B24
configureShelfViewControllerBlock
T@?,C,N,V_configureShelfViewControllerBlock
shelfTypeComparator
T@?,C,N,V_shelfTypeComparator
shelfTypes
T@"NSArray",&,N,V_shelfTypes
shelfViewControllerByShelfType
T@"NSDictionary",&,N,V_shelfViewControllerByShelfType
hasContent
DownloadedCheckmark
DOWNLOADED
textLayout
T@"VUITextLayout",&,N,V_textLayout
titleContainerView
T@"UIView",&,N,V_titleContainerView
T@"NSString",R,C,N,V_title
T@"UICollectionView",R,N,V_collectionView
None
imageLoadOperation
T@"NSOperation<VUIImageLoadingOperation>",&,N,V_imageLoadOperation
requestCount
TQ,N,V_requestCount
object
The %@ parameter must be an instance of %@
requestToken
[VUIAsynchronousWorkToken class]
Subclasses must override _imageLoaderIdentifier and not call super
Subclasses must override _imageLoadParamsForImageLoaderObject and not call super
Subclasses must override _imageLoadOperationWithParams and not call super
%lux%lu
crop
imageLoadContextsByImageIdentifier
T@"NSMutableDictionary",&,N,V_imageLoadContextsByImageIdentifier
imageLoadOperationQueue
T@"NSOperationQueue",&,N,V_imageLoadOperationQueue
sortAsName
propertyType
propertyValueClassName
allowsDefaultValue
defaultValue
sourcePropertyNames
retrievesSourcePropertiesAtFetch
sourceSupportsFiltering
sourceFilterValueBlock
sourceFilterBlock
Property value class names cannot be derived for object based attributes
T@"NSString",C,N,V_name
T@"NSString",C,N,V_sortAsName
TQ,N,V_propertyType
T@"NSString",C,N,V_propertyValueClassName
T@,&,N,V_defaultValue
TB,N,V_allowsDefaultValue
T@"NSSet",C,N,V_sourcePropertyNames
TB,N,V_retrievesSourcePropertiesAtFetch
TB,N,V_sourceSupportsFiltering
T@?,C,N,V_sourceFilterValueBlock
T@?,C,N,V_sourceFilterBlock
T@"VUILabel",R,N,V_titleLabel
imageElement
T@"TVImageElement",&,N,V_imageElement
T@"TVImageElement",&,N,V_appImageElement
hasAppImage
TB,N,V_hasAppImage
layoutFactory
T@"VUICardViewLayoutFactory",R,N,V_layoutFactory
imageView
T@"_TVImageView",&,N,V_imageView
labelViews
T@"NSArray",C,N,V_labelViews
overlayView
T@"UIView<VUIOverlayViewProtocol>",&,N,V_overlayView
debugString
T@"NSString",C,N,V_debugString
LOADING_LIBRARY
T@"VUIMediaLibrary",&,N,V_mediaLibrary
currentView
T@"UIView",&,N,V_currentView
contentHasBeenDeleted
TB,N,V_contentHasBeenDeleted
rootView
T@"UIView",&,N,V_rootView
pausesFetchControllersAutomatically
TB,N,V_pausesFetchControllersAutomatically
currentViewType
TQ,N,V_currentViewType
noContentErrorTitle
T@"NSString",C,N,V_noContentErrorTitle
noContentErrorMessage
T@"NSString",C,N,V_noContentErrorMessage
contentHasBeenManuallyDeleted
TB,N,V_contentHasBeenManuallyDeleted
deletedContentErrorMessage
T@"NSString",C,N,V_deletedContentErrorMessage
contentView
T@"UIView",&,N,V_contentView
Downloading
Paused
Downloaded
status
bytesToDownload
bytesDownloaded
isDownloadInProgress
supportsCancellation
supportsPausing
TQ,N,V_status
TB,N,V_supportsCancellation
TB,N,V_supportsPausing
TQ,N,V_bytesToDownload
TQ,N,V_bytesDownloaded
downloadInProgress
TB,R,N,GisDownloadInProgress
listImageView
T@"UIImageView",&,N,V_listImageView
itemImage
T@"UIImage",&,N,V_itemImage
seasons
T@"NSArray",&,N,V_seasons
persistentID
T@"VUIMediaEntityType",R,C,N
T@"NSNumber",C,N,V_persistentID
T@"NSArray",&,N,V_dataViews
layout
T@"VUIProductMetadataLayout",&,N,V_layout
Unexpected type passed to -initWithIdentifier:type:
com.apple.videosuicore.VUIMediaLibraryFetchControllerQueue.serialProcessingQueue
v16@?0@"VUIMediaLibraryFetchControllerQueue"8
state
mutableFetchControllers
T@"NSMutableArray",&,N,V_mutableFetchControllers
paused
TB,N,GisPaused,V_paused
shouldFetchOnResume
TB,N,V_shouldFetchOnResume
currentFetchOperation
T@"VUIMediaLibraryFetchControllerQueueOperation",&,N,V_currentFetchOperation
delayContentsChangeOperation
T@"VUIDelayOperation",&,N,V_delayContentsChangeOperation
serialFetchOperationQueue
T@"NSOperationQueue",&,N,V_serialFetchOperationQueue
nowPlayingObserver
T@"VUINowPlayingObserver",&,N,V_nowPlayingObserver
T@"<VUIMediaLibraryFetchControllerQueueDelegate>",W,N,V_delegate
v32@?0@"VUIProductSectionInfoViewModel"8Q16^B24
v32@?0@"UIView"8Q16^B24
T@"VUILabel",&,N,V_headerView
infoViews
T@"NSArray",&,N,V_infoViews
CANT_DOWNLOAD_ON_CELLULAR_NETWORK_ERROR_TITLE
wapi
CANT_DOWNLOAD_ON_WLAN_NETWORK_ERROR_DESCRIPTION
CANT_DOWNLOAD_ON_CELLULAR_NETWORK_ERROR_DESCRIPTION
v16@?0@"UIAlertAction"8
completionHandler
v16@?0B8B12
CONNECT_TO_WLAN_TO_PLAYBACK_ERROR_MESSAGE_EPISODE
CONNECT_TO_WIFI_TO_PLAYBACK_ERROR_MESSAGE_EPISODE
CONNECT_TO_WLAN_TO_PLAYBACK_ERROR_MESSAGE_MOVIE
CONNECT_TO_WIFI_TO_PLAYBACK_ERROR_MESSAGE_MOVIE
CANT_PLAYBACK_OVER_WLAN_ERROR_TITLE
CANT_PLAYBACK_OVER_CELLULAR_NETWORK_ERROR_TITLE
CELLULAR_DATA_DISABLED_ERROR_TITLE
SETTINGS
WATCH_RENTAL_IN_HD_TITLE_FORMAT
WATCH_RENTAL_IN_HD_DESCRIPTION
WATCH
WATCH_IN_SD
CANCEL
RENTAL_PLAYBACK_WINDOW_WARNING_TITLE_FORMAT
RENTAL_PLAYBACK_WINDOW_WARNING_MESSAGE
PLAY
didCalculatedSize
TB,N,V_didCalculatedSize
scorecardSize
T{CGSize=dd},N,V_scorecardSize
Td,N,V_interitemSpacing
rowElementSizes
T@"NSArray",&,N,V_rowElementSizes
columnWidths
T@"NSArray",&,N,V_columnWidths
rowHeights
T@"NSArray",&,N,V_rowHeights
darkMaterialImage
T@"UIImage",&,N,V_darkMaterialImage
delegateRespondsToBackgroundImageForScorecardViewMaterial
TB,N,V_delegateRespondsToBackgroundImageForScorecardViewMaterial
delegateRespondsToBackgroundBlendModeForElementInRowAtIndex
TB,N,V_delegateRespondsToBackgroundBlendModeForElementInRowAtIndex
T@"<VUIScorecardViewDelegate>",W,N,V_delegate
scoreboardLayout
T@"VUIScoreboardLayout",&,N,V_scoreboardLayout
assetType
seasonTitle
seasonIdentifier
hasBeenPlayed
playCount
bookmark
creationDate
modifiedDate
lastPlayedDate
mediaPlayerMediaItem
T@"MPMediaItem",R,N
T@"NSNumber",R,C,N
T@"NSNumber",R,C,N,V_isPlayable
T@"NSURL",R,C,N
T@"NSObject<VUIMediaEntityIdentifier>",R,C,N
T@"VUIMediaItemCredits",R,C,N
T@"NSDate",R,C,N
T@"NSNumber",C,N
com.apple.videosuicore.VUIAirTrafficController.ATConnection
connectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
observers
T@"NSMutableSet",&,N,V_observers
InfoAllOthersGroup
MediaItemDetail
PRODUCT_INFO_CAST_HEADER
PRODUCT_INFO_DIRECTORS_HEADER
PRODUCT_INFO_PRODUCERS_HEADER
PRODUCT_INFO_SCREENWRITERS_HEADER
v32@?0@"NSString"8Q16^B24
downloadViewController
T@"VUIMediaEntityDownloadViewController",&,N,V_downloadViewController
T{UIEdgeInsets=dddd},N
T{UIEdgeInsets=dddd},N,V_padding
appImageLayout
T@"VUIImageLayout",&,N,V_appImageLayout
progressBarLayout
T@"VUIProgressBarLayout",&,N,V_progressBarLayout
button-play
itunes-extras-badge
hd_mask
hdr_mask
4k_mask
dolbyvision_mask
dolby-atmos
PreloadAsset-Generic16x9
seeAllButton
T@"UIButton",&,N,V_seeAllButton
titleTopMargin
Td,N,V_titleTopMargin
subtitleTitleMargin
Td,N,V_subtitleTitleMargin
bottomTextMargin
Td,N,V_bottomTextMargin
buttonHorizontalPadding
Td,N,V_buttonHorizontalPadding
headerViewStyle
Tq,R,N,V_headerViewStyle
VUIPlistMediaDatabaseContentsDidChangeNotification
com.apple.videosuicore.VUIPlistMediaDatabase.serialDispatchQueue
An entity must have an identifier to be added to the library
A show identifier must be provided to add a season to the library
A show identifier must be provided to add an episode to the library
A season identifier must be provided to add an episode to the library
v32@?0@"NSString"8@"VUIPlistMediaDatabaseShow"16^B24
v32@?0@"NSString"8@"VUIPlistMediaDatabaseItem"16^B24
fileURL
T@"NSURL",C,N,V_fileURL
serialDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialDispatchQueue
databaseFileDispatchSource
T@"NSObject<OS_dispatch_source>",&,N,V_databaseFileDispatchSource
homeVideoByIdentifier
T@"NSMutableDictionary",&,N,V_homeVideoByIdentifier
movieByIdentifier
T@"NSMutableDictionary",&,N,V_movieByIdentifier
movieRentalByIdentifier
T@"NSMutableDictionary",&,N,V_movieRentalByIdentifier
showByIdentifier
T@"NSMutableDictionary",&,N,V_showByIdentifier
homeVideos
T@"NSArray",R,N
movies
movieRentals
shows
episodes
Unsupported comparison (%lu)
Unsupported media entity type (%@)
Invalid season Identifier (%@)
Unsupported operator type (%lu)
storeDownload
T@"MPStoreDownload",&,N,V_storeDownload
revision
TQ,N,V_revision
contentDescription
coverArtURL
TQ,N,V_type
T@"NSString",C,N,V_genreTitle
T@"NSString",C,N,V_contentDescription
T@"NSURL",C,N,V_coverArtURL
local
T@"NSNumber",R,C,N,GisLocal
success
TB,N,V_success
progressTimer
T@"NSObject<OS_dispatch_source>",&,N,V_progressTimer
progressBlock
T@?,C,N,V_progressBlock
cardView
T@"VUICardView",&,N,V_cardView
T@"VUICardViewLayoutFactory",&,N,V_layoutFactory
allowsFocus
TB,N,V_allowsFocus
CloudDownloadIcon
offerButton
T@"VUIOfferButton",&,N,V_offerButton
progressType
Tq,N,V_progressType
progress
Td,N,V_progress
T@"<VUIDownloadButtonDelegate>",W,N,V_delegate
addedToDate
mediaItemCount
The identifier parameter must conform to VUIMediaEntityIdentifierInternal
q24@?0@"VUIMediaEntityGroup"8@"VUIMediaEntityGroup"16
showIdentifier
addedDate
showTitle
fetchReason
fetchResponses
Tq,N,V_fetchReason
T@"NSArray",C,N,V_fetchResponses
T@"NSNumber",C,N,V_seasonNumber
vui_isDeviceMediaLibrary
vui_isHomeShareMediaLibrary
v12@?0f8
identifierKeyPath
The group identifier for groups must be an NSObject which implements NSCopying
v32@?0@"NSObject<NSCopying>"8@"NSMutableArray"16^B24
T@"NSString",C,N,V_identifierKeyPath
sortIndexKeyPath
T@"NSString",C,N,V_sortIndexKeyPath
groupsSortComparator
T@?,C,N,V_groupsSortComparator
performDefaultSort
TB,N,V_performDefaultSort
mediaItemEntityTypes
areLocalMediaItemsAvailable
T@"NSOrderedSet",C,N,V_mediaItemEntityTypes
localMediaItemsAvailable
TB,N,GareLocalMediaItemsAvailable,V_localMediaItemsAvailable
EXPIRATION_LEFT
imageAspectRatio
Td,N,V_imageAspectRatio
expirationLabel
T@"VUIRentalExpirationLabel",&,N,V_expirationLabel
databaseSeason
T@"VUIPlistMediaDatabaseSeason",&,N,V_databaseSeason
kind
playedState
T@"MPMediaItemCollection",&,N,V_mediaItemCollection
Unknown sortAs property %@
mediaEntityClassName
propertyDescriptors
propertyDescriptorsByName
T@"NSDictionary",C,N,V_propertyDescriptorsByName
T@"NSString",R,C,N,V_mediaEntityClassName
T@"NSArray",C,N,V_propertyDescriptors
VUILibraryCollectionCellReuseIdentifier
VUILibraryMenuCellReuseIdentifier
VUILibraryBannerCellReuseIdentifier
stackView
T@"VUILibraryStackView",R,N,V_stackView
stackCollectionView
T@"UICollectionView",R,N,V_stackCollectionView
Finished
downloadSucceeded
TB,N,GisDownloadInProgress,V_downloadInProgress
TB,N,V_downloadSucceeded
v16@?0@"UIImage"8
T@"UIViewController",R,W,N,V_presentingViewController
T@"NSIndexPath",R,N,V_currentIndexPath
T@"<VUIPreviewInteractionControllerDelegate>",W,N,V_delegate
v24@?0@"NSArray"8@"NSError"16
button
T@"UIButton",&,N,V_button
textLabelStackView
T@"UIStackView",&,N,V_textLabelStackView
buttonImage
T@"UIImage",&,N,V_buttonImage
textLabels
T@"NSArray",&,N,V_textLabels
T@"<VUIRoundButtonDelegate>",W,N,V_delegate
T@"VUILabel",R,N,V_subtitleLabel
viewController
T@"UIViewController",&,N,V_viewController
startIndex
count
TQ,N,V_startIndex
TQ,N,V_count
headerTextLayout
T@"VUITextLayout",R,N,V_headerTextLayout
footerTextLayout
T@"VUITextLayout",R,N,V_footerTextLayout
infoHeaderTextLayout
T@"VUITextLayout",R,N,V_infoHeaderTextLayout
infoBodyTextLayout
T@"VUITextLayout",R,N,V_infoBodyTextLayout
infoDescriptionTextLayout
T@"VUITextLayout",R,N,V_infoDescriptionTextLayout
sectionHeaderBottomSpace
Td,R,N,V_sectionHeaderBottomSpace
sectionDataViewBottomSpace
Td,R,N,V_sectionDataViewBottomSpace
sectionFooterTopSpace
Td,R,N,V_sectionFooterTopSpace
sectionFooterBottomSpace
Td,R,N,V_sectionFooterBottomSpace
sectionInfoViewBottomSpace
Td,R,N,V_sectionInfoViewBottomSpace
infoTableMiddleSpacing
Td,R,N,V_infoTableMiddleSpacing
seeMoreTextColor
T@"UIColor",R,N,V_seeMoreTextColor
mainViewMargin
T{UIEdgeInsets=dddd},R,N,V_mainViewMargin
isHorizontal
isDynamicTextEnabled
isRTL
TB,N,V_isRTL
databaseItem
T@"VUIPlistMediaDatabaseItem",&,N,V_databaseItem
riaa
al-movies
ao-movies
ai-movies
ag-movies
ar-movies
am-movies
au-movies
at-movies
az-movies
bs-movies
bh-movies
bb-movies
by-movies
be-movies
bz-movies
bj-movies
bm-movies
bo-movies
bw-movies
br-movies
vg-movies
bn-movies
bg-movies
bf-movies
kh-movies
ca-movies
cv-movies
ky-movies
td-movies
cl-movies
cn-movies
co-movies
cg-movies
cr-movies
cy-movies
cz-movies
dk-movies
dm-movies
do-movies
ec-movies
eg-movies
sv-movies
ee-movies
fj-movies
fi-movies
fr-movies
gm-movies
ge-movies
de-movies
gh-movies
gr-movies
gd-movies
gt-movies
gw-movies
gy-movies
hn-movies
hk-movies
hu-movies
ic-movies
in-movies
id-movies
ie-movies
il-movies
it-movies
jm-movies
jp-movies
jo-movies
kz-movies
ke-movies
kw-movies
kg-movies
la-movies
lv-movies
lb-movies
lt-movies
lu-movies
mo-movies
mk-movies
my-movies
mt-movies
mr-movies
mu-movies
mx-movies
fm-movies
md-movies
mn-movies
mz-movies
na-movies
np-movies
nl-movies
nz-movies
ni-movies
ne-movies
ng-movies
no-movies
om-movies
pa-movies
pg-movies
py-movies
pe-movies
ph-movies
pl-movies
pt-movies
qa-movies
ro-movies
ru-movies
kn-movies
sa-movies
sn-movies
sc-movies
sg-movies
sk-movies
sl-movies
za-movies
kr-movies
es-movies
lk-movies
sr-movies
sz-movies
se-movies
ch-movies
tw-movies
tj-movies
tz-movies
th-movies
tt-movies
tn-movies
tr-movies
tm-movies
ug-movies
ua-movies
ae-movies
uk-movies
mpaa
uy-movies
uz-movies
ve-movies
vn-movies
ye-movies
zw-movies
au-tv
ca-tv
fr-tv
de-tv
jp-tv
nz-tv
uk-tv
us-tv
@"NSNumber"16@?0@"VUIMPMediaEntityIdentifier"8
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"VUIMediaEntityType"24
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"NSNumber"24
@"NSNumber"16@?0@"NSNumber"8
sortTitle
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"VUIMPSeasonMediaCollectionIdentifier"24
mediaEntitiesChangeSet
groupingChangeSet
T@"VUICollectionChangeSet",&,N,V_mediaEntitiesChangeSet
T@"VUICollectionChangeSet",&,N,V_groupingChangeSet
titleButton
T@"UIButton",&,N,V_titleButton
T@"NSString",&,N,V_title
T@"NSNumber",&,N,V_storeID
T@"<VUILibraryEpisodeFooterCellDelegate>",W,N,V_delegate
manager
com.apple.videosuicore.VUIMPMediaLibrary.serialProcessingQueue
connectionState
v16@?0@"VUIMPMediaLibrary"8
The imageLoaderObject parameter must be an instance of VUIPlistMediaEntityImageLoadParams or conform to VUIPlistMediaEntityImageLoadParamsCreating
TQ,N,V_connectionState
serialOperationQueue
T@"NSOperationQueue",&,N,V_serialOperationQueue
TVLibraryLockupViewReuseIdentifier
SEE_ALL_BUTTON
fetchResults
T@"NSArray",C,N,V_fetchResults
headerTitle
T@"NSString",&,N,V_headerTitle
headerSubtitle
T@"NSString",&,N,V_headerSubtitle
disableSeeAllButton
TB,N,V_disableSeeAllButton
T@"<VUILibraryShelfCollectionViewControllerDelegate>",W,N,V_delegate
@32@?0@"VUIMediaEntityFetchRequest"8Q16@"NSNumber"24
T@"MPMediaItem",&,N,V_mediaItem
v32@?0@"VUIProductSectionView"8Q16^B24
v16@?0@"UITapGestureRecognizer"8
sectionViews
T@"NSArray",&,N,V_sectionViews
viewLayout
T@"VUIProductMetadataLayout",&,N,V_viewLayout
The string representation must contain exactly four components
%@,%@,%@,%@
T@"NSOrderedSet",C,N,V_cast
T@"NSOrderedSet",C,N,V_directors
T@"NSOrderedSet",C,N,V_producers
T@"NSOrderedSet",C,N,V_screenwriters
hasCredits
CornerGradientCheck
watched-checkmark
playButton
T@"_TVButton",&,N,V_playButton
Tq,N,V_layout
fullyPlayedImageView
T@"UIImageView",&,N,V_fullyPlayedImageView
T@"<VUILibraryEpisodeFrameViewDelegate>",W,N,V_delegate
v24@?0Q8^B16
asyncWorkToken
T@"VUIAsynchronousWorkToken",&,N,V_asyncWorkToken
The mediaCollectionType argument cannot be VUIMediaCollectionTypeNone
The mediaCollectionType (%@) is not supported for the supplied mediaCategoryType (%@)
Movie Rental
Home Video
subtype
mediaCategoryType
mediaCollectionType
isRental
TQ,N,V_subtype
TQ,N,V_mediaCategoryType
TQ,N,V_mediaCollectionType
rental
TB,N,GisRental,V_rental
list-chevron
T@"VUISeparatorView",R,N,V_bottomSeparatorView
request
Unsupported predicate: %@
Unsupported compound predicate: %@
Unsupported expressions in comparison predicate: %@
Unknown keypath %@ for entity kind %@
Unable to create MPMediaQuery as the supplied media entity type is not supported: %@
Unexpected media collection type!
T@"VUIMediaEntityFetchRequest",&,N,V_request
T@"VUIMediaEntityFetchResponse",C,N,V_response
mediaEntityKind
T@"VUIMediaEntityKind",&,N,V_mediaEntityKind
prefetchProperties
T@"NSMutableSet",&,N,V_prefetchProperties
mediaQueryPredicate
T@"MPMediaPredicate",&,N,V_mediaQueryPredicate
mediaQuerySortOrderingProperties
T@"NSArray",&,N,V_mediaQuerySortOrderingProperties
mediaQuerySortOrderingDirectionMappings
T@"NSDictionary",&,N,V_mediaQuerySortOrderingDirectionMappings
postFetchSortDescriptors
T@"NSArray",&,N,V_postFetchSortDescriptors
processPredicateAfterFetch
TB,N,V_processPredicateAfterFetch
processRangeAfterFetch
TB,N,V_processRangeAfterFetch
VUIMediaLibraryConnectionStateDidChangeNotification
fromState
toState
VUIMediaLibraryContentsDidChangeNotification
VUIMediaLibraryContentsDidChangeUserInfoKeyContentsChange
The %@ method needs to be override by a subclass.
%@=%lu
connectable
supportsDRMContent
T@"NSObject<VUIMediaLibraryIdentifier>",C,N,V_identifier
T@"VUIMediaLibraryManager",R,W,N,V_manager
TB,R,N,GisConnectable
TQ,R,N
Unexpected mediaCategoryType parameter: %@
supportedMediaCollectionTypes
v32@?0@"NSNumber"8@"NSSet"16^B24
supportedChildMediaCollectionTypes
T@"NSSet",C,N,V_supportedMediaCollectionTypes
T@"NSDictionary",C,N,V_supportedChildMediaCollectionTypes
com.apple.videosuicore.VUINowPlayingObserver.serialProcessingQueue
v20@?0@"NSString"8I16
v12@?0I8
v24@?0^v8^{__CFError=}16
latestObservation
T@"VUINowPlayingObservation",&,N,V_latestObservation
observing
TB,N,GisObserving,V_observing
updateObservationContext
TQ,N,V_updateObservationContext
T@"<VUINowPlayingObserverDelegate>",W,N,V_delegate
nowPlayingAppBundleIdentifier
isPlaying
playing
TB,N,GisPlaying,V_playing
T@"NSString",C,N,V_nowPlayingAppBundleIdentifier
@"NSDate"16@?0@"VUIMediaCollection"8
sourceBackgroundImage
T@"UIImage",&,N,V_sourceBackgroundImage
resizedSourceBackgroundImage
T@"UIImage",&,N,V_resizedSourceBackgroundImage
overlayMaterialImageByIdentifier
T@"NSDictionary",C,N,V_overlayMaterialImageByIdentifier
resizedBackgroundImageSize
T{CGSize=dd},N,V_resizedBackgroundImageSize
overlayMaterialRequests
T@"NSArray",C,N,V_overlayMaterialRequests
rect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_rect
show
T@"VUIPlistMediaDatabaseShow",W,N,V_show
T@"NSArray",C,N,V_episodes
result
T@"VUIMediaEntitiesFetchControllerResult",&,N,V_result
currentSubOperation
T@"NSOperation",&,N,V_currentSubOperation
bgColor
T@"UIColor",&,N,V_bgColor
cornerRadius
Td,N,V_cornerRadius
badgeStyle
TQ,N,V_badgeStyle
attributedTitle
T@"NSAttributedString",C,N,V_attributedTitle
strokeSize
Td,N,V_strokeSize
backgroundImage
T@"UIImage",&,N,V_backgroundImage
badgeLayout
T@"VUITextBadgeLayout",&,N,V_badgeLayout
textBadgeLayout
T@"VUITextBadgeLayout",&,N,V_textBadgeLayout
timeBadgeLayout
T@"VUITextBadgeLayout",&,N,V_timeBadgeLayout
liveBadgeLayout
T@"VUITextBadgeLayout",&,N,V_liveBadgeLayout
logoImageLayout
T@"VUIImageLayout",&,N,V_logoImageLayout
Home Share
templated
TB,N,GisTemplated,V_templated
EXPIRATION_IN
SEASON_%@
coverArtImageView
T@"_TVImageView",&,N,V_coverArtImageView
descriptionTextView
T@"TVFocusableTextView",&,N,V_descriptionTextView
contentRatingImageView
T@"UIImageView",&,N,V_contentRatingImageView
genreLabel
T@"VUILabel",&,N,V_genreLabel
releaseYearLabel
T@"VUILabel",&,N,V_releaseYearLabel
availabilityLabel
T@"VUILabel",&,N,V_availabilityLabel
genreReleaseDotSeparator
T@"VUILabel",&,N,V_genreReleaseDotSeparator
badgesStackView
T@"UIStackView",&,N,V_badgesStackView
contentDescriptionExpanded
TB,N,V_contentDescriptionExpanded
didSetUpViews
TB,N,V_didSetUpViews
contentRatingImage
T@"UIImage",&,N,V_contentRatingImage
T@"<VUILibraryProductLockupViewLayout>",&,N,V_layout
coverArtImageProxy
T@"TVImageProxy",R,N,V_coverArtImageProxy
coverArtPlaceholderImage
T@"UIImage",R,N,V_coverArtPlaceholderImage
leftButton
T@"VUIRoundButton",&,N,V_leftButton
downloadView
T@"UIView",&,N,V_downloadView
subtitle
T@"NSString",C,N,V_subtitle
genre
T@"NSString",C,N,V_genre
T@"NSNumber",&,N,V_duration
T@"NSNumber",C,N,V_releaseYear
availabilityText
T@"NSString",C,N,V_availabilityText
badgeResources
T@"NSArray",C,N,V_badgeResources
T@"<VUIProductLockupViewDelegate>",W,N,V_delegate
VUIMPMediaItemAssetControllerStateDidChangeNotification
mediaEntityIdentifier
v16@?0@"VUIMPMediaItemAssetController"8
v16@?0q8
T@"<VUIMediaEntityAssetControllerDelegate>",W,N
T@"VUIMediaEntityAssetControllerState",R,C,N
T@"NSObject<OS_dispatch_queue>",&,N
T@"NSObject<VUIMediaEntityIdentifier>",C,N,V_mediaEntityIdentifier
downloadController
T@"VUIMPMediaItemDownloadController",&,N,V_downloadController
requestingPermissionToDownload
TB,N,GisRequestingPermissionToDownload,V_requestingPermissionToDownload
T@"<VUIMediaEntityAssetControllerDelegate>",W,N,V_delegate
TB,R,N,V_supportsStartingDownload
T@"VUIMediaEntityAssetControllerState",R,C,N,V_state
backgroundBlendMode
Ti,N,V_backgroundBlendMode
separatorBlendMode
Ti,N,V_separatorBlendMode
separatorColor
T@"UIColor",&,N,V_separatorColor
borderRadii
T{TVCornerRadii=dddd},N,V_borderRadii
Td,N,V_padding
topRowLayout
T@"VUIScoreboardRowLayout",&,N,V_topRowLayout
bottomRowLayout
T@"VUIScoreboardRowLayout",&,N,V_bottomRowLayout
v16@?0@"NSTimer"8
EXPIRED
DAYS_LEFT_PLURAL
HOURS_LEFT_PLURAL
HOURS_LEFT_SINGULAR
MINUTES_LEFT_PLURAL
MINUTES_LEFT_SINGULAR
expiryUpdateTimer
T@"NSTimer",&,N,V_expiryUpdateTimer
expirationDate
T@"NSDate",C,N,V_expirationDate
formatString
T@"NSString",C,N,V_formatString
T@"<VUIRentalExpirationLabelDelegate>",W,N,V_delegate
ProgressIndicator-BorderThin
ProgressIndicator-BorderThick
ProgressIndicator-BorderIndeterminate
image
T@"UIImage",&,N,V_centerImage
imageInsets
T{UIEdgeInsets=dddd},N,V_centerImageInsets
indeterminate
TB,N,GisIndeterminate
highlighted
TB,N,GisHighlighted,V_highlighted
imageURL
baseImageIdentifier
covertArt
previewFrame
imageType
imageIdentifier
T@"NSURL",C,N,V_imageURL
T@"NSString",C,N,V_baseImageIdentifier
TQ,N,V_imageType
T@"NSString",R,C,N,V_imageIdentifier
gridViewController
T@"VUILibraryGridCollectionViewController",&,N,V_gridViewController
T@"VUIMediaEntityType",N,V_mediaEntityType
LIBRARY_NO_DOWNLOADS_TITLE
Downloads
v24@?0@"VUILibraryShelfCollectionViewController"8@"NSObject<NSCopying>"16
v32@?0@"NSObject<NSCopying>"8@"VUILibraryShelfCollectionViewController"16^B24
LIBRARY_MOVIES
LIBRARY_TVSHOWS
RENTALS
LIBRARY_HOME_VIDEOS
LIBRARY_BANNER_LOCAL_PHONE
LIBRARY_BANNER_LOCAL_PAD
viewModel
T@"VUILibraryMediaEntityShelvesViewModel",&,N,V_viewModel
currentNavBarButtonItem
T@"UIBarButtonItem",&,N,V_currentNavBarButtonItem
currentSeeAllController
T@"_VUIDownloadSeeAllController",&,N,V_currentSeeAllController
libraryBarButton
T@"UIBarButtonItem",&,N,V_libraryBarButton
fetchResponse
fetchChanges
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_fetchResponse
T@"VUIMediaItemEntityTypesFetchResponseChanges",&,N,V_fetchChanges
highlightOrSelectedImage
T@"UIImage",&,N,V_highlightOrSelectedImage
com.apple.videosuicore.VUIPlistMediaLibrary.serialProcessingQueue
Plist Database
v16@?0@"VUIPlistMediaLibrary"8
PlistMediaLibrary
database
T@"VUIPlistMediaDatabase",&,N,V_database
com.apple.VideosUI.VUIMediaLibraryFetchController.serialProcessingQueue
%p-%@-%@
v16@?0@"VUIMediaLibraryFetchController"8
completionQueue
logName
Tq,V_state
fetchOperation
T@"NSOperation",&,N,V_fetchOperation
pauseCount
TQ,N,V_pauseCount
T@"NSString",C,N,V_logName
logNameSuffix
T@"NSString",C,N,V_logNameSuffix
downloadedButton
T@"VUIDownloadedButton",&,N,V_downloadedButton
T@"<VUIMediaEntityDownloadViewDelegate>",W,N,V_delegate
leftJustifiedImageEnabled
TB,N,V_leftJustifiedImageEnabled
EPISODE_%@
episodeTitleLabel
T@"VUILabel",&,N,V_episodeTitleLabel
seasonNumberLabel
T@"VUILabel",&,N,V_seasonNumberLabel
episodeNumberLabel
T@"VUILabel",&,N,V_episodeNumberLabel
contentDescriptionView
T@"TVFocusableTextView",&,N,V_contentDescriptionView
contentDescriptionFont
T@"UIFont",&,N,V_contentDescriptionFont
episodeViewDelegate
T@"<VUIEpisodeDetailViewDelegate>",W,N,V_episodeViewDelegate
library
library::-::Library
elementTypeLookup
T@"NSDictionary",&,N,V_elementTypeLookup
VUILibraryLockupCellReuseIdentifier
VUILibraryCollectionHeaderReuseIdentifier
Grid
GRID_FILTER_GENRE
GRID_FILTER_TITLE
fetchRequest
T@"VUIMediaEntityFetchRequest",&,N,V_fetchRequest
totalResults
T@"NSArray",&,N,V_totalResults
genreGroupedResults
T@"NSArray",&,N,V_genreGroupedResults
sizingCell
T@"VUILibraryLockupViewCell",&,N,V_sizingCell
cellWidth
Td,N,V_cellWidth
gridFilter
Tq,N,V_gridFilter
forceBackButton
TB,N,V_forceBackButton
productSportsBundleTemplate
productMetadata
sportsOrganizer
sportsProductGrid
sportsScore
sportsTitle
featuredCard
upNextCard
appImg
sportsFeaturedCard
sportsCard
sportsUpNextCard
sportsLockup
scorecard
scoreRow
liveTextBadge
sportsTextBadge
sportsTimeBadge
vui-grid-style
vui-width-span
full
vui-grid-type
vui-col-span
grid
vui-constrain-ratio
PreloadAsset-Movie
PreloadAsset-TV
Tq,R,N,V_type
entityType
T@"VUIMediaEntityType",R,N,V_entityType
disabledButSelectedEvent
onpress
shelfType
Tq,N,V_shelfType
LIBRARY_EMPTY_TITLE
LIBRARY_EMPTY_DESCRIPTION
LIBRARY_HS_UNSUPPORTED_VERSION_TITLE
LIBRARY_HS_UNSUPPORTED_VERSION_DESCRIPTION
LIBRARY_EMPTY_HS_DESCRIPTION
LIBRARY_HS_CONNECTION_FAILED_TITLE
LIBRARY_HS_CONNECTION_FAILED_DESCRIPTION
LIBRARY_BANNER_LOCAL
@"NSObject<NSCopying>"16@?0@"NSNumber"8
MediaItemTypes
Recents
LIBRARY
RECENTLY_ADDED
LibraryChevronDown-Pad
LIBRARY_HS_UNAVAILABLE
v16@?0@"NSNotification"8
LIBRARY_HDR_SUBTITLE_PHONE
LIBRARY_HDR_SUBTITLE_PAD
q24@?0@"NSNumber"8@"NSNumber"16
LIBRARY_RECENT_MOVIES
LIBRARY_RECENT_SHOWS
LIBRARY_HDR_TITLE
appliedNavigationItem
TB,N,V_appliedNavigationItem
hasMenuItemFetchCompleted
TB,N,V_hasMenuItemFetchCompleted
TB,N,V_areLocalMediaItemsAvailable
menuMediaItemEntityTypes
T@"NSArray",&,N,V_menuMediaItemEntityTypes
menuCells
T@"NSArray",&,N,V_menuCells
menuItemSizingCell
T@"VUILibraryMenuItemViewCell",&,N,V_menuItemSizingCell
popoverViewController
T@"VUILibraryPopoverViewController",&,N,V_popoverViewController
popoverDropdownCells
T@"NSArray",&,N,V_popoverDropdownCells
sizingPopoverCell
T@"VUILibraryListPopoverViewCell",&,N,V_sizingPopoverCell
currentlySelectedPopoverCell
Tq,N,V_currentlySelectedPopoverCell
homeShares
T@"NSArray",&,N,V_homeShares
currentHomeShareMediaLibrary
T@"VUIMediaLibrary",&,N,V_currentHomeShareMediaLibrary
bannerViewSizingCell
T@"VUILibraryBannerCollectionViewCell",&,N,V_bannerViewSizingCell
shelvesViewModel
T@"VUILibraryMediaEntityShelvesViewModel",&,N,V_shelvesViewModel
hasMediaEntitiesFetchCompleted
TB,N,V_hasMediaEntitiesFetchCompleted
shelfTypeByFetchRequestIdentifier
T@"NSDictionary",&,N,V_shelfTypeByFetchRequestIdentifier
T@"_VUILibrarySeeAllController",&,N,V_currentSeeAllController
doesDeviceSupportHDR
TB,N,V_doesDeviceSupportHDR
isIpad
TB,N,V_isIpad
The cropToFit parameter cannot be set to YES when no scale size is given
scaleToSize
T{CGSize=dd},R,N
cropToFit
T@"TVImage",R,N
scalingResult
T@"NSError",R,C,N
params
T@"<VUIImageLoadParams>",&,N,V_params
T{CGSize=dd},N,V_scaleToSize
TB,N,V_cropToFit
T@"TVImage",&,N,V_image
TQ,N,V_scalingResult
**UNDEFINED**
NetworkHLS
NetworkCRABS
%@=%p
block
identifierInternal
T@"NSObject<VUIMediaEntityIdentifierInternal>",C,N,V_identifierInternal
firstAccessPropertiesCache
T@"NSMutableDictionary",&,N,V_firstAccessPropertiesCache
cachesPropertiesOnFirstAccess
TB,N,V_cachesPropertiesOnFirstAccess
T@"VUIMediaEntityKind",R,N,V_kind
T@"NSSet",R,N,V_requestedProperties
T@"VUIContentRating",R,C,N
localChanges
TB,R,N,GhasLocalChanges,V_localChanges
All subclasses must override %@ in a subclass
containerView
T@"VUIShelfView",&,N,V_containerView
focusedIndexPath
T@"NSIndexPath",&,N,V_focusedIndexPath
gridStyle
Tq,R,N,V_gridStyle
cardLayoutType
Tq,R,N,V_cardLayoutType
gridType
Tq,R,N,V_gridType
overlayType
Tq,R,N,V_overlayType
highlightColor
T@"UIColor",&,N,V_highlightColor
shouldLayoutImageFirst
TB,N,V_shouldLayoutImageFirst
imageSize
T{CGSize=dd},N,V_imageSize
imageLayout
T@"VUIImageLayout",&,N,V_imageLayout
secondaryTextLayout
T@"VUITextLayout",&,N,V_secondaryTextLayout
titleTextLayout
T@"VUITextLayout",&,N,V_titleTextLayout
subtitleTextLayout
T@"VUITextLayout",&,N,V_subtitleTextLayout
T@"<VUIOverlayLayoutProtocol>",&,N,V_overlayLayout
Tq,N,V_gridStyle
Tq,N,V_gridType
Tq,N,V_overlayType
com.apple.videosuicore.VUIMPHomeShareMediaLibraryManager.serialProcessingQueue
@"NSObject<NSCopying>"16@?0@"VUIMPHomeShareMediaLibrary"8
B24@?0@"VUIMPHomeShareMediaLibrary"8@"VUIMPHomeShareMediaLibrary"16
T@"<VUIHomeShareMediaLibraryManagerDelegate>",W,N
T@"VUIMediaLibraryManager",W,N,V_manager
mutableHomeShareMediaLibraries
T@"NSMutableArray",&,N,V_mutableHomeShareMediaLibraries
T@"<VUIHomeShareMediaLibraryManagerDelegate>",W,N,V_delegate
backdropView
T@"UIVisualEffectView",R,N
modalSize
T{CGSize=dd},N,V_modalSize
completedAnimationBlock
T@?,C,N,V_completedAnimationBlock
VUIDeviceMediaLibraryUpdateStateDidChangeNotification
isUpdating
isInitialUpdateInProgress
updating
TB,R,N,GisUpdating
initialUpdateInProgress
TB,R,N,GisInitialUpdateInProgress
REMOVE_DOWNLOAD_ALERT_TITLE_IPAD
REMOVE_DOWNLOAD_ALERT_TITLE_IPHONE
REMOVE_DOWNLOAD
T@"VUIMediaEntityDownloadView",&,N,V_downloadView
T@"<VUIMediaEntityDownloadViewControllerDelegate>",W,N,V_delegate
mediaItemEntityTypesChangeSet
localMediaItemsAvailableDidChange
T@"VUICollectionChangeSet",R,N,V_mediaItemEntityTypesChangeSet
TB,R,N,V_localMediaItemsAvailableDidChange
databaseShow
T@"VUIPlistMediaDatabaseShow",&,N,V_databaseShow
Update a response is only supported for responses to the same request
mediaEntitySubtype
grouping
groupingSortIndexes
TQ,N,V_mediaEntitySubtype
T@"NSArray",C,N,V_grouping
T@"NSArray",C,N,V_groupingSortIndexes
LOADING
loadingLabel
T@"VUILabel",&,N,V_loadingLabel
indicatorView
T@"UIActivityIndicatorView",&,N,V_indicatorView
@"NSDate"16@?0@"VUIMediaEntity"8
hasBorderView
TB,N,V_hasBorderView
borderBackgroundColor
T@"UIColor",&,N,V_borderBackgroundColor
borderColor
T@"UIColor",&,N,V_borderColor
borderCompositingFilter
T@"CAFilter",&,N,V_borderCompositingFilter
borderWidth
Td,N,V_borderWidth
borderCornerRadius
Td,N,V_borderCornerRadius
borderCornerRadiusMatchesHalfBoundingDimension
TB,N,V_borderCornerRadiusMatchesHalfBoundingDimension
hasTitleLabel
TB,N,V_hasTitleLabel
attributedText
T@"NSAttributedString",C,N,V_attributedText
textColor
T@"UIColor",&,N,V_textColor
universal
TB,N,V_universal
confirmationTitleStyle
Tq,N,V_confirmationTitleStyle
titleStyle
Tq,N,V_titleStyle
T@"UIImage",&,N,V_image
borderedImage
T@"UIImage",&,N,V_borderedImage
progressIndeterminate
TB,N,V_progressIndeterminate
cancelRecognizer
TB,N,V_cancelRecognizer
alpha
Td,N,V_alpha
restores
TB,N,V_restores
buyInitiate
data-type
OfferButton-CloudloadButtonArrow
OfferButton-CloudloadButtonCloud
ITEM_OFFER_BUTTON_UPDATE
ITEM_OFFER_BUTTON_OPEN
ITEM_OFFER_BUTTON_INSTALLED
ITEM_OFFER_BUTTON_READ
ITEM_OFFER_BUTTON_UNSUBSCRIBE
ITEM_OFFER_BUTTON_PLAY
ITEM_OFFER_BUTTON_GRATIS
ITEM_OFFER_BUTTON_PURCHASED
update
open
installed
purchased
download
ITEM_OFFER_BUTTON_INSTALL_APP
com.apple.MobileSMS
OfferButton-BuyButtonUniversalIndicator
%@:%td%@
OfferButton-PlayProduct
OfferButton-DownloadProgressButtonConnecting
OfferButton-DownloadProgressButtonDownloading
OfferButton-DownloadProgressButtonPaused
OfferButton-DownloadProgressButtonPlay
buttonDescriptor
T@"VUIBuyButtonDescriptor",&,N,V_buttonDescriptor
buyType
T@"NSString",C,N,V_buyType
cloudTintColor
T@"UIColor",C,N,V_cloudTintColor
disabledButSelectable
TB,N,GisDisabledButSelectable,V_disabledButSelectable
element
T@"SKUIButtonViewElement",&,N,V_element
supportsPlayButton
T@"<VUIOfferButtonDelegate>",W,N,V_delegate
confirmationTitle
T@"NSString",C,N
centerImageProvider
T@?,C,N,V_centerImageProvider
offerButtonStateDescription
hitRectInsets
T{UIEdgeInsets=dddd},N,V_hitRectInsets
fillStyle
Tq,N,V_fillStyle
borderColorAlphaMultiplier
Td,N,V_borderColorAlphaMultiplier
font
T@"UIFont",&,N
T@"NSString",C,N,V_textTransform
showingConfirmation
TB,R,N,GisShowingConfirmation
showsConfirmationState
TB,N,V_showsConfirmationState
Tq,N
TB,N,GisUniversal,V_universal
buttonType
Tq,N,V_buttonType
buttonText
T@"NSString",C,N,V_buttonText
confirmationText
T@"NSString",C,N,V_confirmationText
elementType
TQ,N,V_elementType
storeIdentifier
T@"SKUIStoreIdentifier",&,N,V_storeIdentifier
itemIdentifier
Tq,N,V_itemIdentifier
variantIdentifier
T@"NSString",&,N,V_variantIdentifier
TB,N,V_highlighted
TB,N,V_showingConfirmation
showsUniversal
TB,N,V_showsUniversal
shouldSuppressEnabled
TB,N,V_shouldSuppressEnabled
shouldSuppressCloudRestore
TB,N,V_shouldSuppressCloudRestore
VUISeasonPickerCollectionViewCellIdentifier
seasonPickerView
T@"_VUISeasonPickerView",&,N,V_seasonPickerView
collectionIdentifier
T@"NSObject<VUIMediaEntityIdentifier>",&,N,V_collectionIdentifier
currentSeasonViewController
T@"VUILibraryFetchControllerViewController",&,N,V_currentSeasonViewController
lastViewedSeasonWasManuallyDeleted
TB,N,V_lastViewedSeasonWasManuallyDeleted
pickerTitle
T@"NSString",&,N,V_pickerTitle
size
T{CGSize=dd},N,V_size
continuousBorder
Td,N,V_continuousBorder
placeholderArtworkName
T@"NSString",C,N,V_placeholderArtworkName
fillColor
T@"UIColor",&,N,V_fillColor
height
Td,N,V_height
Manual
ContentsChange
VUILibraryEpisodeFooterCellReuseIdentifier
showMultipleSeasons can only be set to YES for a show
The mediaCollection must be a season or a show
SeasonsAndEpisodes-%@
%@%@
GET_MORE_EPISODES
PRODUCT_DESCRIPTION_MORE_ELLIPSES
@"NSObject<NSCopying>"16@?0@"VUILibrarySeasonViewModel"8
B24@?0@"VUILibrarySeasonViewModel"8@"VUILibrarySeasonViewModel"16
https://itunes.apple.com/us/tv-season//id%@
SPECIFIC_SEASON_DELETED_ERROR_MESSAGE_FORMAT
GENERIC_SEASON_DELETED_ERROR_MESSAGE_FORMAT
v32@?0@"VUIMediaEntityGroup"8Q16^B24
T@"NSArray",&,N,V_episodes
episodeGroups
T@"NSArray",&,N,V_episodeGroups
mediaCollectionViewModel
T@"VUILibraryMediaCollectionViewModel",&,N,V_mediaCollectionViewModel
downloadViewControllerBySeasonIdentifier
T@"NSMutableDictionary",&,N,V_downloadViewControllerBySeasonIdentifier
T@"NSString",&,N,V_showTitle
canShowMultipleSeasons
TB,N,V_canShowMultipleSeasons
mediaCollection
T@"VUIMediaCollection",R,N,V_mediaCollection
T@"NSObject<VUIMediaEntityIdentifier>",R,N,V_seasonIdentifier
TQ,R,N,V_type
seasonViewModels
T@"NSArray",&,N,V_seasonViewModels
seasonBySeasonIdentifier
T@"NSDictionary",&,N,V_seasonBySeasonIdentifier
episodeShelfViewControllerBySeasonIdentifier
T@"NSDictionary",&,N,V_episodeShelfViewControllerBySeasonIdentifier
productLockupViewBySeasonIdentifier
T@"NSDictionary",&,N,V_productLockupViewBySeasonIdentifier
episodesBySeasonIdentifer
T@"NSDictionary",&,N,V_episodesBySeasonIdentifer
v16@?0@"VUIMPMediaItemDownloadController"8
observer
T@"VUIMPMediaItemDownloadControllerState",C,N,V_state
T@"NSMutableArray",&,N,V_observers
restoreDownload
TB,R,N,GisRestoreDownload
observerDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_observerDispatchQueue
ActionMenu-ClearHistory
listView
T@"VUILibraryListItemView",&,N,V_listView
T@"<VUILibraryDownloadPopoverViewControllerDelegate>",W,N,V_delegate
v24@?0@"VUIMediaItemEntityTypesFetchResponse"8@"NSError"16
@"NSObject<NSCopying>"16@?0@"VUIMediaEntityType"8
T@"VUIMediaItemEntityTypesFetchControllerResult",&,N,V_result
currentFetchResponse
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_currentFetchResponse
PartiallyPlayed
Unknown
Unplayed
FullyPlayed
calculatedIdentifier
TB,N,V_calculatedIdentifier
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
TQ,R,N,V_imageType
v16@?0@"VUIMPMediaItemCollectionAssetController"8
%K = %@
state.isDownloadInProgress
T@"VUIMediaEntityAssetControllerState",C,N,V_state
assetControllers
T@"NSArray",&,N,V_assetControllers
fullyDownloadedAssetBytes
TQ,N,V_fullyDownloadedAssetBytes
VUICollectionViewCellReuseIdentifier
childView
T@"UIView",&,N,V_childView
raise:format:
init
vui_deepCopy
alloc
requests
countByEnumeratingWithState:objects:count:
identifier
objectForKey:
response
error
addObject:
setResponses:
setError:
finishExecutionIfPossible
blockOperationWithBlock:
mediaLibrary
initWithMediaLibrary:request:
setObject:forKey:
addDependency:
privateQueue
addOperation:
initWithMediaLibrary:requests:
executionDidBegin
.cxx_destruct
setRequests:
responses
setPrivateQueue:
setMediaLibrary:
_requests
_responses
_error
_privateQueue
_mediaLibrary
removeFromSuperview
addSubview:
setNeedsLayout
layoutSubviews
vui_padding
bounds
sizeThatFits:
headerView
setFrame:
collectionView
frame
collectionViewLayout
computedContentHeight
setHeaderView:
setCollectionView:
_headerView
_collectionView
initWithGridStyle:
updateWithEpisodes:andChangeSet:
viewWillAppear:
setEpisodeDetailViewController:
_updateViewWithFetchedEpisodes:andChangeSet:
reloadData
vui_applyChangeSet:inSection:updateDataSourceBlock:completionHandler:
episodeDetailViewController
presentingViewController
mediaItem
_episodeWithIdentifier:
dismissViewControllerAnimated:completion:
class
registerClass:forCellWithReuseIdentifier:
vui_currentSizeClass
count
setRowCount:
initWithFrame:
vui_itemWidthForGridStyle:gridType:
objectAtIndex:
episode
configureVUILibraryEpisodeListCell:withMedia:
initWithMediaItem:
traitCollection
userInterfaceIdiom
navigationController
pushViewController:animated:
initWithRootViewController:
setModalPresentationStyle:
vui_presentViewController:animated:completion:
view
popoverPresentationController
setSourceView:
setSourceRect:
setPermittedArrowDirections:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
assetController
_updateCell:withAssetController:
mediaEntityIdentifier
isEqual:
enumerateObjectsUsingBlock:
indexPathForRow:inSection:
cellForItemAtIndexPath:
_assetControllerForCell:
defaultManager
mediaEntityType
startDownloadWithCompletion:
_preflightDownloadWithMediaEntityType:presentingViewController:completionHandler:
cancelDownload
traitCollectionDidChange:
setDelegate:
initWithPresentingViewController:collectionView:controllerToPresent:
viewWillTransitionToSize:withTransitionCoordinator:
isPresenting
dismissConfirmation
viewWillDisappear:
willMoveToParentViewController:
removeDownloadWithCompletion:
delegate
libraryEpisodesShelfViewController:didRemoveDownloadForAssetController:
respondsToSelector:
setIsPresenting:
_canRemoveEpisodeAtIndexPath:
onlyShowLocalContent
setOnlyShowLocalContent:
_episodeViewModelsWithFetchedEpisodes:
objectsAtIndexes:
vui_arrayByApplyingChangeSet:destinationObjectsBlock:
updateShelfLayout:
_updateHeaderView
setEpisode:
setAssetController:
vui_layoutType
indexPathForCell:
supportsStartingDownload
setSupportsStartingDownload:
state
downloadProgress
setDownloadProgressType:andProgress:
isLocal
boolValue
numberWithUnsignedInteger:
stringWithFormat:
configureCollectionHeaderView:title:subtitle:buttonString:style:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:insetForSectionAtIndex:
episodeDetailViewControllerWasDismissed:
mediaEntityAssetController:stateDidChange:
episodeListCellDidRequestStartDownload:
episodeListCellDidRequestCancelDownload:
dialogInteractionController:shouldBeginInteractionForIndexPath:
dialogInteractionController:interactionDidBeginForIndexPath:
dialogInteractionController:interactionDidEndForIndexPath:
removeDownloadPressed
removeDownloadDismissed
initWithEpisodes:
configureWithCollectionView:
_configureShelfLayout:
episodeViewModels
setEpisodeViewModels:
popoverIndexPath
setPopoverIndexPath:
shouldIgnoreSelectEvent
setShouldIgnoreSelectEvent:
_sizingCell
_dialogInteractionController
_onlyShowLocalContent
_shouldIgnoreSelectEvent
_delegate
_episodeViewModels
_episodeDetailViewController
_popoverIndexPath
_episode
_assetController
copy
initWithResourceName:isTemplatedImage:
resourceName
setResourceName:
isTemplatedImage
setTemplatedImage:
_templatedImage
_resourceName
ratingLabel
ratingSystem
imageForRatingLabel:inRatingSystem:
_imageRecordForRatingLabel:inRatingSystem:
imageForResourceName:
_imageForUnknownRatingLabel:
_imageRecordForContentRating:
_imageRecordLookupKeyWithRatingLabel:inRatingSystem:
records
_addImageRecordToDictionary:ratingSystem:ratingLabel:resourceName:isTemplatedImage:
stringForRatingSystem:
_cleanedRatingLabel:
stringByReplacingOccurrencesOfString:withString:
lowercaseString
length
defaultParagraphStyle
mutableCopy
setLineBreakMode:
setAlignment:
systemFontOfSize:
blackColor
dictionaryWithObjects:forKeys:count:
initWithString:attributes:
mainScreen
boundingRectWithSize:options:context:
scale
drawWithRect:options:context:
sharedInstance
imageForContentRating:
isTemplatedImageForContentRating:
imageRecords
setImageRecords:
_imageRecords
initWithMediaLibrary:
cancelFetch
initWithMediaLibrary:fetchReason:requests:
setCurrentFetchResponses:
fetchReason
_handleManualFetchControllerOperationDidComplete:
_handleContentsChangeFetchControllerOperationDidComplete:
result
_updateResponseWithResult:replaceContentsOnNilChanges:
_notifyFetchRequests:didCompleteWithResult:
defaultLogObject
_notifyFetchRequests:didFailWithError:
fetchResponses
fetchResponseChanges
_updateWithResponse:changes:replaceContentsOnNilChanges:
manager
completionDispatchQueue
controller:fetchRequests:didCompleteWithResult:
_notifyDelegateWithBlock:
controller:fetchRequests:didFailWithError:
initWithMediaLibrary:fetchRequests:
_fetchOperationForFetchReason:
_didCompleteFetchOperation:
_response
_deviceMediaLibrary
_homeShareMediaLibraryManager
_configureGlobalMediaPlayerOptions
serialProcessingDispatchQueue
homeShareManager
homeShareMediaLibraries
setDefaultMediaLibrary:
_mediaLibraryForIdentifier:
fileURLWithPath:
initWithURL:manager:
initWithManager:
willChangeValueForKey:
didChangeValueForKey:
_postHomeShareMediaLibrariesDidChangeNotificationWithMediaLibraries:andChangeSet:
_enqueueStrongSelfCompletionQueueBlock:
_enqueueCompletionQueueBlock:
setFilteringDisabled:
deviceMediaLibrary
vui_setObjectIfNotNil:forKey:
defaultCenter
postNotificationName:object:userInfo:
homeShareManager:mediaLibrariesDidUpdate:withChangeSet:
setCompletionDispatchQueue:
setActiveMediaLibrary:
activeMediaLibrary
mediaLibraryForIdentifier:
setDeviceMediaLibrary:
setSerialProcessingDispatchQueue:
setHomeShareManager:
_activeMediaLibrary
_completionDispatchQueue
_serialProcessingDispatchQueue
_homeShareManager
settingsURLForMediaLibraryApplicationController:
isCellularDataPlaybackEnabledForMediaLibraryApplicationController:
mediaPlayerMediaItem
mediaLibraryApplicationController:shouldWarnAboutPlaybackQualityForRentalMediaItem:
clearCellularPlaybackQualityOverridesForMediaLibraryApplicationController:
mediaLibraryApplicationController:overrideCellularPlaybackQuality:forMediaItem:
mediaLibraryApplicationController:startFullScreenPlaybackWithMediaItem:
mediaLibraryApplicationController:assetTypeForRentalMediaItem:
mediaLibraryApplicationController:removeRentalMediaItem:withCompletion:
defaultController
settingsURL
isCellularDataForPlaybackEnabled
shouldWarnAboutPlaybackQualityForRentalMediaItem:
clearCellularPlaybackQualityOverrides
overrideCellularPlaybackQuality:forMediaItem:
startFullScreenPlaybackWithMediaItem:
assetTypeForRentalMediaItem:
removeRentalMediaItem:withCompletion:
_preloadMediaEntityMetadata
isCancelled
currentFetchResponses
latestFetchResponses
_mediaEntitiesChangeSetWithLatestFetchResponse:currentFetchResponse:
initWithMediaEntitiesChangeSet:
_groupingChangeSetWithLatestFetchResponse:currentFetchResponse:
setGroupingChangeSet:
setFetchResponseChanges:
_preloadMetadataForFetchResponse:
mediaEntities
populateMetadata
_changeSetFromCurrentMediaEntities:toLatestMediaEntities:
grouping
_groupingChangeSetWithCurrentGrouping:latestGrouping:
changeSetFromObjects:toObjects:identifierBlock:updateChangeSetBlock:
isFetchedPropertiesEqualToFetchedMediaEntity:
changeSetFromObjects:toObjects:identifierBlock:isEqualBlock:
initWithLatestFetchResponses:currentFetchResponses:
setLatestFetchResponses:
_fetchResponseChanges
_latestFetchResponses
_currentFetchResponses
presentViewController:animated:completion:
presentedViewController
setOverlayLayout:
_layoutWithElement:
clearColor
setBackgroundColor:
setAlpha:
setQualityOfService:
setMaxConcurrentOperationCount:
padding
_updateBadgePosition
_updateLogoPosition
invalidateData
imageProxy
cancel
cancelAllOperations
_updateBackgroundMaterialImagesWithBackgroundImageSize:performSynchronously:
size
objectAtIndexedSubscript:
style
maxWidth
imageScaleToSize
viewElement
updateType
setViewElement:
childViewElements
elementName
isEqualToString:
attributedText
string
_updateTextBadge:
_updateLogo:
_updateScoreView:
setHidden:
viewElementNeedsUpdate:
liveBadgeLayout
timeBadgeLayout
textBadgeLayout
reset
setText:withBadgeLayout:
layoutIfNeeded
_textBadgeBackgroundImageNeedsUpdating
alpha
_redrawTextBadgeWithDuration:
sharedInterfaceFactory
viewForElement:existingView:
scoreboardLayout
borderRadii
radiusFromCornerRadii:
_setCornerRadius:
setClipsToBounds:
setScorecardData:
setScoreboardLayout:
_scorecardViewBackgroundImageNeedsUpdating
_redrawScorecardViewWithDuration:
backgroundImageOperationQueue
initWithSourceBackgroundImage:
setResizedBackgroundImageSize:
initWithIdentifier:rect:
setOverlayMaterialRequests:
start
_updateBackgroundImagesWithCompletedOperation:
mainQueue
resizedSourceBackgroundImage
overlayMaterialImageByIdentifier
_scorecardViewRequiresBackgroundImage
_textBadgeRequiresBackgroundImage
setBackgroundImage:
_redrawView:withDuration:
backgroundImage
_viewBackgroundImageNeedsUpdatingWithFrame:currentBackgroundImage:
setNeedsDisplay
forceDisplayIfNeeded
transitionWithView:duration:options:animations:completion:
sportsOverlayViewFromElement:overlayLayout:existingView:
styleForScorecardView:
numberOfRowsInScorecardView:
numberOfElementsForScorecardView:inRow:
viewElementForScorecard:inRow:atIndex:
maximumWidthForScorecardView:
backgroundImageForScorecardViewMaterial:
backgroundBlendModeForElementInRow:atIndex:
backgroundImageSizeDidChange:
backgroundImageForMaterialRendering
setBackgroundImageForMaterialRendering:
overlayLayout
scorecardData
scorecardElement
setScorecardElement:
scorecardView
setScorecardView:
textBadgeHasMaterial
setTextBadgeHasMaterial:
textBadge
setTextBadge:
logo
setLogo:
logoElement
setLogoElement:
setBackgroundImageOperationQueue:
scorecardViewBackgroundImage
setScorecardViewBackgroundImage:
backgroundImageHasChanged
setBackgroundImageHasChanged:
_textBadgeHasMaterial
_backgroundImageHasChanged
_backgroundImageForMaterialRendering
_overlayLayout
_viewElement
_scorecardData
_scorecardElement
_scorecardView
_textBadge
_logo
_logoElement
_backgroundImageOperationQueue
_scorecardViewBackgroundImage
initWithIdentifierKeyPath:
setGroupsSortComparator:
setPerformDefaultSort:
setSortIndexKeyPath:
transformedValue:
_sortIndexesForObjects:titleForObjectBlock:
valueForKey:
movieRental
numberWithInt:
show
season
movie
homeVideo
compare:
mediaEntitiesChangeSet
letterCharacterSet
characterAtIndex:
stringWithCharacters:length:
title
setCount:
characterIsMember:
initWithTitle:startIndex:count:
groupingForMediaEntities:groupingKeyPath:groupingSortComparator:performDefaultSort:sortIndexPropertyKey:
sortIndexesForGrouping:
sortIndexesForMediaEntities:sortIndexPropertyKey:
mediaItemEntityTypesSortComparator
mediaEntitiesMapFromFetchControllerResult:andRequests:
changeSetMapFromFetchControllerResult:andRequests:
initWithMediaEntityClassName:
setWithObject:
setSourcePropertyNames:
setSortAsName:
requiredMPPropertyNames
setRetrievesSourcePropertiesAtFetch:
allValues
setPropertyDescriptors:
representativeItem
showIdentifierWithMediaItem:
initWithMediaLibrary:mediaItemCollection:identifier:requestedProperties:kind:
mediaItemCollection
items
seasonIdentifierWithMediaItem:
_propertyValueWithBlock:forKey:
initWithMediaLibrary:mediaItemCollection:requestedProperties:
seasonCount
_seasonCount
appImageView
appImageLayout
imageViewWithElement:existingView:size:scaleMode:
setAppImageView:
setAppImageElement:
progressView
progressBarLayout
tintColor
setProgressTintColor:
fillColor
setCompleteTintColor:
setStyle:
setProgressView:
setProgressViewElement:
margin
height
overlayViewFromElement:overlayLayout:existingView:
progressViewElement
appImageElement
_progressView
_progressViewElement
_appImageView
_appImageElement
_mediaLibraryHasEpisodes
_mediaLibraryHasHasHomeVideos
_mediaLibraryHasMovies
_mediaLibraryHasMovieRentals
sortUsingComparator:
_mediaLibraryHasLocalMediaItems
setMediaItemEntityTypes:
setLocalMediaItemsAvailable:
setResponse:
_canUseCheapEntityCheckWithMediaEntityType:
hasMovies
vui_moviesQueryWithMediaLibrary:
_mediaLibraryHasMediaItemsWithQuery:
hasMovieRentals
vui_movieRentalsQueryWithMediaLibrary:
hasTVShows
vui_episodesQueryWithMediaLibrary:
hasHomeVideos
vui_homeVideosQueryWithMediaLibrary:
vui_isDeviceMediaLibrary
vui_isLocalPredicate:comparison:
initWithFilterPredicates:
mediaCategoryType
allowsShowingUndownloadedMovies
allowsShowingUndownloadedTVShows
setEntityLimit:
initWithMPMediaLibrary:
initWithIdentifier:
sortIndexes
componentsJoinedByString:
copyWithZone:
setIdentifier:
setMediaEntities:
setSortIndexes:
_identifier
_mediaEntities
_sortIndexes
forceTouchCapability
longPressGestureRecognizerPressed:
initWithTarget:action:
setDelaysTouchesBegan:
addGestureRecognizer:
_cleanup
_performWithoutDeferringTransitions:
locationInView:
indexPathForItemAtPoint:
presentViewController:
performSelector:withObject:afterDelay:
setTransitioningDelegate:
addChildViewController:
presentationController
containerView
safeAreaInsets
setModalSize:
presentedView
backdropView
effectWithStyle:
setEffect:
setCompletedAnimationBlock:
whiteColor
initWithPresentedViewController:presentingViewController:
transitionDuration:
completedAnimationBlock
transitionWasCancelled
completeTransition:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
interactionController:shouldInteractionControllerBeginForIndexPath:
interactionController:didBeginForIndexPath:
interactionController:didEndForIndexPath:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
currentIndexPath
setCurrentIndexPath:
interactionController
setInteractionController:
_longPressGestureRecognizer
_wrapperViewController
_dialogPresentationController
_isPresenting
_currentIndexPath
_presentingViewController
_presentedViewController
_interactionController
ratingSystemFromString:
_initWithRatingSystem:ratingLabel:rank:ratingDescription:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
integerValue
initWithRatingSystemString:ratingLabel:rank:ratingDescription:
appendFormat:
appendString:
rank
ratingDescription
stringRepresentation
initWithRatingSystem:explicitContent:
initWithStringRepresentation:
isExplicitContent
setRatingSystem:
setRatingLabel:
setRank:
setRatingDescription:
_ratingSystem
_ratingLabel
_rank
_ratingDescription
initializeVUISeparatorView
colorWithRed:green:blue:alpha:
setLineHeight:
intrinsicContentSize
lineHeight
setTintColor:
line
setLine:
_lineHeight
_tintColor
_line
imageLoadParamsWithImageType:
imageLoadParamsWithMediaEntity:imageType:
isEqualToSet:
setWithObjects:
unionSet:
UUID
UUIDString
initWithSet:
_didUpdateRequestProperties
initWithMediaEntityType:
predicate
sortDescriptors
properties
range
groupingKeyPath
groupingSortComparator
options
subtype
_isItemsFetch
_shouldGenerateSortIndexes
firstObject
propertyDescriptorForName:
propertyType
sortAsName
name
vui_boolForKey:defaultValue:
sortingPropertyDescriptorForName:
ascending
sortDescriptorWithKey:ascending:
_finalizedSortDescriptorsFromSortDescriptors:mediaEntityKind:
_finalizedSortDescriptorFromSortDescriptor:mediaEntityKind:
initWithKey:ascending:
setProperties:
setPredicate:
setRange:
setSortDescriptors:
setGroupingKeyPath:
setGroupingSortComparator:
setOptions:
_isCollectionsFetch
_isShowsFetch
_isSeasonsFetch
_sortIndexPropertyKeyWithMediaEntityKind:
_shouldGenerateGroupingSortIndexes
_manualSortDescriptorsWithMediaEntityKind:propertiesRequiredForSort:
setMediaEntityType:
_mediaEntityType
_predicate
_sortDescriptors
_properties
_groupingKeyPath
_groupingSortComparator
_options
_range
initWithMediaItem:mediaEntityIdentifier:serialProcessingDispatchQueue:
initWithMediaItemCollection:mediaEntityIdentifier:serialProcessingDispatchQueue:
initWithObjects:
valuesForProperties:
longLongValue
initWithMediaItem:serialProcessingDispatchQueue:
mediaItemAssetControllerWithMediaItem:mediaEntityIdentifier:
mediaItemCollectionAssetControllerWithMediaItemCollection:mediaEntityIdentifier:
mediaItemDownloadControllerWithMediaItem:
initWithURL:
libraryFileURL
setLibraryFileURL:
_libraryFileURL
vui_sizeThatFits:
subviews
footerView
arrayWithCapacity:
groupName
removeAllObjects
arrayWithObjects:count:
headerContentView
dataViews
interitemSpacing
lineSpacing
maxLineCount
headerMargin
footerMargin
_getNormalizedGroupedInfos
_maxWidthForGroupInfos:
headerPadding
setBounds:
_layouCellContentView:inCellBounds:
invalidateIntrinsicContentSize
shouldInvalidateLayoutWithPreviousTraitCollection:newTraitCollection:
infos
setLayoutType:
_columnCount
groupedInfos
normalizedGroupedInfos
_sectionInfoWidth
setCenter:
keyWindow
preferredContentSizeCategory
contentSizeCategoryIsAccessibility:
setFooterView:
setInfos:
setGroupedInfos:
setNormalizedGroupedInfos:
layoutType
setHeaderMargin:
setFooterMargin:
_infos
_groupedInfos
_normalizedGroupedInfos
_layoutType
_lineSpacing
_footerView
_headerMargin
_footerMargin
setTextStyle:
setFontWeight:
setTextTransform:
setNumberOfLinesAXSmall:
setNumberOfLinesAXLarge:
labelWithString:textLayout:existingLabel:
systemGrayColor
setColor:
setMinimumScaleFactor:
headerViewWithString:
dataViewWithString:
setGroupName:
setHeaderContentView:
setDataViews:
setLineSpacing:
setHeaderPadding:
_groupName
_headerContentView
_dataViews
_headerPadding
date
_submitLibraryPageEventWithDate:
_submitLibraryMediaPlayEventForMediaItem:withDate:
value
sharedStorage
allCookiesForAccount:
_getClientIDFromCookies:
allCookiesForUserIdentifier:
contextWithBagType:
initWithURLBagContext:
valueForKey:error:
initWithGlobalConfiguration:
setGlobalConfiguration:
_createMetricsController
setOriginalTimeUsingDate:
setTopic:
networkType
setConnection:
defaultStore
activeAccount
uniqueIdentifier
setAccountIdentifier:
_getClientIDForAccount:
setProperty:forBodyKey:
currentDevice
userAgent
setUserAgent:
mainBundle
bundleIdentifier
processInfo
processName
setApplicationIdentifier:
flushUnreportedEventsWithCompletionHandler:
insertEvent:withCompletionHandler:
setPageContext:
setPageType:
setPageDescription:
_populateBaseFieldsAndSendEvent:thatOccuredAt:
setMediaEventType:
_getMediaEntityTypeStringForMediaItem:setPageType:
type
submitLibraryPageEvent
submitLibraryMediaPlayEventForMediaItem:
_isAllowedToSubmit
_getMediaLibraryTypeStringForMediaItem:
vui_keyBlueColor
setHighlightedBackgroundColor:
contentView
sharedApplication
scaleContentSizeValue:forTraitCollection:
vui_heightToBaseline
font
descender
setTitleLabel:
setSubtitleLabel:
setSecondSubtitleLabel:
setSeasonImageView:
setTopSeparatorView:
setBottomSeparatorView:
titleLabel
subtitleLabel
secondSubtitleLabel
seasonImageView
topSeparatorView
bottomSeparatorView
_titleLabel
_subtitleLabel
_secondSubtitleLabel
_seasonImageView
_topSeparatorView
_bottomSeparatorView
imageFrameView
imageSizeWithAspectRatio:scaleToSize:
configureEpisodeFrameView:withMedia:layout:imageSize:
setImageFrameView:
episodeNumber
setTitle:
releaseDate
localizedStringFromDate:dateStyle:timeStyle:
setReleaseDate:
duration
valueTransformerForName:
setDuration:
sizeToFit
topMarginWithBaselineMargin:
topMarginToLabel:withBaselineMargin:
setNumberOfLines:
_metadataLabelWithString:existingLabel:
_configureDotSeparator
downloadProgressType
_updateDownloadButtonWithProgressType:andProgress:
baselineHeight
capHeight
_contentSizeCategoryIsAccessibility
progressType
downloadButton
setDownloadButton:
setDownloadProgressType:
setDownloadProgress:
_removeDownloadButtonIfRequired
_addDownloadButtonIfRequired
setProgressType:andProgress:
_metadataHeightToBaselineNonAXContentSizeCategory
didSelectDownloadButton:
_metadataScaledTopMarginForNonAXContentSizeCategory
separatorView
setSeparatorView:
episodeInfoStackView
setEpisodeInfoStackView:
releaseDateLabel
setReleaseDateLabel:
durationLabel
setDurationLabel:
dotSeparatorLabel
setDotSeparatorLabel:
_supportsStartingDownload
_title
_releaseDate
_duration
_downloadProgressType
_downloadProgress
_imageFrameView
_separatorView
_episodeInfoStackView
_releaseDateLabel
_durationLabel
_downloadButton
_dotSeparatorLabel
loadView
initWithFrame:title:
setDataSource:
setView:
setEdgesForExtendedLayout:
_configureNavigationBar
setPreferredContentSize:
invalidateLayout
popoverView:numberOfItemsInSection:
numberOfSectionsInPopoverView:
popoverView:cellForItemAtIndexPath:
setShouldAppearSelected:
popoverView:sizeForItemAtIndexPath:
popoverView:didSelectItemAtIndexPath:
animateAlongsideTransition:completion:
isIpadLayout
setNavigationBarHidden:
_dismissPopover
initWithBarButtonSystemItem:target:action:
navigationItem
setRightBarButtonItem:
initWithPopoverTitle:
viewDidLayoutSubviews
collectionView:layout:minimumLineSpacingForSectionAtIndex:
popoverTitle
selectedItemIndexPath
setSelectedItemIndexPath:
dataSource
_popoverView
_requiresRelayout
_popoverTitle
_selectedItemIndexPath
_dataSource
initWithDictionary:
vui_numberForKey:
vui_dateForKey:
vui_stringForKey:
URLWithString:
dictionaryRepresentation
studio
credits
previewFrameURL
absoluteString
contentRating
numberWithBool:
isPlayable
setSeason:
setPreviewFrameURL:
setContentRating:
setEpisodeNumber:
setStudio:
setCredits:
_local
_season
_previewFrameURL
_contentRating
_episodeNumber
_studio
_credits
_itemsFetchResponseWithRequest:error:
_collectionsFetchResponseWithRequest:error:
database
movies
movieRentals
homeVideos
episodes
initWithMediaLibrary:databaseItem:requestedProperties:
_fetchResponseWithMediaEntities:request:
shows
initWithMediaLibrary:databaseShow:requestedProperties:
seasons
initWithMediaLibrary:databaseSeason:requestedProperties:
filteredArrayUsingPredicate:
_mediaEntityKindForRequest:
sortedArrayUsingDescriptors:
setMediaEntitySubtype:
setGrouping:
setGroupingSortIndexes:
fetchControllers
_logStringWithFetchControllers:
mediaLibraryRevision
logName
beginFetchWithMediaLibraryRevision:completionHandler:completionQueue:
initWithFetchControllers:mediaLibraryRevision:
setFetchControllers:
setMediaLibraryRevision:
_fetchControllers
_mediaLibraryRevision
initWithMediaLibrary:fetchReason:
setCurrentFetchResponse:
_handleInitialFetchControllerOperationDidCompleteWithResult:error:
_handleContentsChangeFetchControllerOperationDidCompleteWithResult:error:
_notifyFetchDidCompleteWithResult:
_notifyFetchDidFailWithError:
controller:fetchDidCompleteWithResult:
controller:fetchDidFailWithError:
fetchResponse
fetchChanges
viewDidLoad
setLargeTitleDisplayMode:
setEpisodeViewDelegate:
setContentView:
setNoContentErrorTitle:
setCurrentViewType:
setDeletedContentErrorMessage:
mediaEntityFetchRequestWithIdentifier:
addIsLocalPredicate
setLogNameSuffix:
startFetchControllers:
viewDidAppear:
dismissTapped:
setNumberOfTapsRequired:
setCancelsTouchesInView:
window
removeGestureRecognizer:
horizontalSizeClass
verticalSizeClass
setContentSize:
configureEpisodeDetailView:withMedia:viewSize:
dismissPopover
rootViewController
metricsController
_preflightPlaybackWithMediaItem:presentingViewController:completionHandler:
didTapPlay
controllerShouldFetchForContentsChange:
setMediaItem:
detailView
setDetailView:
tapGestureRecognizer
setTapGestureRecognizer:
setMetricsController:
_mediaItem
_detailView
_tapGestureRecognizer
_metricsController
setSelected:
setHighlighted:
prepareForReuse
isHighlighted
isSelected
backgroundColor
highlightedBackgroundColor
shouldAppearSelected
_shouldAppearSelected
_backgroundColor
_highlightedBackgroundColor
initWithParams:scaleToSize:cropToFit:
_plistMediaEntityImageLoadParams
imageURL
isFileURL
dataWithContentsOfFile:
dataWithContentsOfURL:
imageWithData:
setImage:
setScalingResult:
params
initWithParams:
mediaType
isRental
valueForProperty:
vui_VUIMediaEntityResolutionFromMPMediaItemVideoQuality:
vui_VUIMediaEntityColorCapabilityFromMPMediaItemColorCapability:
vui_VUIMediaEntityAudioCapabilityFromMPMediaItemAudioCapability:
_vui_imageIdentifierWithImageType:
vui_arrayForKey:
setCast:
setProducers:
setDirectors:
setScreenwriters:
vui_assetType
unsignedIntegerValue
_vui_isLocalWithPropertyValues:
doubleValue
playedStateForDuration:elapsedTime:hasBeenPlayed:playCount:
numberWithInteger:
dateWithTimeIntervalSinceReferenceDate:
initWithTimeInterval:sinceDate:
vui_rentalPlaybackEndDate
vui_rentalEndDate
earlierDate:
vui_assetTypeIgnoringLocalAsset:
_vui_isNetworkPlayableWithPropertyValues:
vui_coverArtImageIdentifier
vui_previewFrameImageIdentifier
artworkCatalog
screenshotArtworkCatalog
homeSharingDatabaseID
initWithMediaItem:andImageType:
vui_artworkCatalogWithImageType:
unsignedLongLongValue
visualIdenticalityIdentifier
tv_filenameSafeString
vui_mediaEntityType
vui_resolution
vui_colorCapability
vui_audioCapability
vui_HLSResolution
vui_HLSColorCapability
vui_HLSAudioCapability
vui_showIdentifier
vui_seasonIdentifier
vui_studio
vui_credits
vui_contentRating
vui_isPlayable
vui_isLocal
vui_extrasURL
vui_playedState
vui_rentalExpirationDate
vui_imageIdentifierWithImageType:
vui_imageLoadParamsWithImageType:
vui_MPMediaItemVideoQualityFromVUIMediaEntityResolution:
vui_MPMediaItemColorCapabilityFromVUIMediaEntityColorCapability:
vui_MPMediaItemAudioCapabilityFromVUIMediaEntityAudioCapability:
allocWithZone:
setMaximumContentSizeCategory:
setFontSize:
setFontTraits:
setMargin:
setHighlightOrSelectedColor:
setShadow:
setLetterSpacing:
setBlendMode:
attributedStringWithString:view:
dictionary
localizedLowercaseString
localizedUppercaseString
localizedCapitalizedString
vui_fontFromTextStyle:maximumContentSizeCategory:fontWeight:fontSize:symbolicTraits:
setObject:forKeyedSubscript:
_accessibilityHigherContrastTintColorForColor:
initWithString:
attributedStringWithString:
textStyle
maximumContentSizeCategory
fontWeight
fontSize
fontTraits
color
highlightOrSelectedColor
textTransform
alignment
numberOfLines
numberOfLinesAXSmall
numberOfLinesAXLarge
minimumScaleFactor
shadow
letterSpacing
blendMode
_fontTraits
_blendMode
_textStyle
_maximumContentSizeCategory
_fontWeight
_fontSize
_color
_highlightOrSelectedColor
_textTransform
_alignment
_numberOfLines
_numberOfLinesAXSmall
_numberOfLinesAXLarge
_minimumScaleFactor
_shadow
_letterSpacing
_margin
_shelfTypesWithMediaEntitiesMap:shelfTypeComparator:
_updateWithMediaEntitiesMap:shelfTypes:
shelfTypes
shelfTypeComparator
hasChanges
changeKind
destinationIndexes
firstIndex
shelfViewControllerByShelfType
updateWithLatestMediaEntities:andChangeSet:
vui_applyChangeSet:inSection:updateDataSourceBlock:applyChangeBlock:completionHandler:
enumerateKeysAndObjectsUsingBlock:
removeObjectForKey:
_shelfCollectionViewControllerWithType:mediaEntities:
setShelfTypes:
setShelfViewControllerByShelfType:
initWithFetchResults:
configureShelfViewControllerBlock
initWithMediaEntitiesMap:shelfTypeComparator:configureShelfViewControllerBlock:
hasContent
updateContainerCollectionView:section:mediaEntitiesMap:mediaEntitiesChangeSetMap:
shelfViewControllerForShelfTypeIndex:
setConfigureShelfViewControllerBlock:
setShelfTypeComparator:
_shelfTypes
_shelfViewControllerByShelfType
_configureShelfViewControllerBlock
_shelfTypeComparator
buttonWithType:
vui_videosUIImageNamed:
setImage:forState:
setTextLayout:
setAttributedTitle:forState:
setImageEdgeInsets:
setTitleEdgeInsets:
attributedTitleForState:
downloadedButton
textLayout
_textLayout
setScrollDirection:
setMinimumLineSpacing:
setMinimumInteritemSpacing:
setItemSize:
initWithFrame:collectionViewLayout:
setAlwaysBounceVertical:
contentSize
collectionViewContentSize
titleContainerView
setTitleContainerView:
_titleContainerView
imageLoadOperation
setImageLoadOperation:
requestCount
setRequestCount:
_imageLoadOperation
_requestCount
_cancelAllImageLoads
dealloc
_imageLoadParamsForImageLoaderObject:
_imageIdentifierWithImageLoadParams:
_scaledImageIdentifierWithImageIdentifier:scaleToSize:cropToFit:
imageLoadContextsByImageIdentifier
_imageLoadOperationWithParams:scaleToSize:cropToFit:
imageLoadOperationQueue
image
scalingResult
initWithOperation:
imageIdentifier
_imageLoaderIdentifier
imageKeyForObject:
cancelLoad:
URLForObject:
hasImageCache
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:
setImageLoadContextsByImageIdentifier:
setImageLoadOperationQueue:
_imageLoadContextsByImageIdentifier
_imageLoadOperationQueue
numberWithDouble:
objectForKeyedSubscript:
_preferredFontForTextStyle:maximumContentSizeCategory:
fontDescriptor
fontDescriptorByAddingAttributes:
symbolicTraits
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
ascender
topMarginWithBaselineMargin:traitCollection:
bottomMarginWithBaselineMargin:traitCollection:
topMarginToFont:withBaselineMargin:traitCollection:
vui_fontFromTextStyle:fontWeight:fontSize:symbolicTraits:
_classNameFromPropertyType:
allowsDefaultValue
data
propertyValueClassName
_updateSourceSupportsFiltering
defaultValue
sourcePropertyNames
retrievesSourcePropertiesAtFetch
sourceSupportsFiltering
sourceFilterValueBlock
sourceFilterBlock
setSourceSupportsFiltering:
setSourceFilterValueBlock:
setSourceFilterBlock:
setName:
setPropertyType:
setPropertyValueClassName:
setDefaultValue:
setAllowsDefaultValue:
_allowsDefaultValue
_retrievesSourcePropertiesAtFetch
_sourceSupportsFiltering
_name
_sortAsName
_propertyType
_propertyValueClassName
_defaultValue
_sourcePropertyNames
_sourceFilterValueBlock
_sourceFilterBlock
bottomMarginWithBaselineMargin:
activeLayout
layer
setCornerRadius:
setMasksToBounds:
removeObserver:name:object:
sendSubviewToBack:
_mainImageLoaded
addObserver:selector:name:object:
bringSubviewToFront:
layoutFactory
imageSizeWithWidth:
shouldLayoutImageFirst
initWithFrame:layoutFactory:
setImageView:
setOverlayView:
setLabelViews:
prepareForCellReuse
_textOffset
imageView
labelViews
overlayView
debugString
setDebugString:
imageElement
setImageElement:
hasAppImage
setHasAppImage:
_hasAppImage
_layoutFactory
_imageView
_labelViews
_overlayView
_debugString
_imageElement
initWithNibName:bundle:
rootView
lastObject
initWithFrame:loadingString:
startTimer
noContentErrorTitle
noContentErrorMessage
_createAlertViewWithTitle:description:
setContentHasBeenDeleted:
setCurrentView:
setContentHasBeenManuallyDeleted:
popViewControllerAnimated:
pausesFetchControllersAutomatically
resume
isBeingDismissed
isMovingFromParentViewController
pause
viewWillLayoutSubviews
currentView
defaultQueueWithMediaLibrary:
removeFetchControllers:
addFetchControllers:
initWithCoder:
updateAfterContentWasManuallyDeleted:
setPausesFetchControllersAutomatically:
currentViewType
setNoContentErrorMessage:
contentHasBeenDeleted
contentHasBeenManuallyDeleted
deletedContentErrorMessage
setRootView:
_pausesFetchControllersAutomatically
_contentHasBeenDeleted
_contentHasBeenManuallyDeleted
_currentView
_currentViewType
_noContentErrorTitle
_noContentErrorMessage
_deletedContentErrorMessage
_contentView
_rootView
status
bytesToDownload
bytesDownloaded
supportsCancellation
supportsPausing
isDownloadInProgress
setStatus:
setSupportsCancellation:
setSupportsPausing:
setBytesToDownload:
setBytesDownloaded:
_supportsCancellation
_supportsPausing
_status
_bytesToDownload
_bytesDownloaded
initWithImage:
_layoutWithSize:metricsOnly:
setItemImage:
itemImage
listImageView
setListImageView:
_itemImage
_listImageView
initWithIdentifier:type:
initWithDictionary:show:
setSeasons:
seasonForIdentifier:
_seasons
initWithPersistentID:mediaEntityType:
persistentID
mediaItemIdentifierWithMediaItem:
setPersistentID:
_persistentID
infoHeaderTextLayout
infoBodyTextLayout
infoDescriptionTextLayout
seeMoreTextColor
setMoreLabelTextColor:
setMaximumNumberOfLines:
setMoreLabelOnNewLine:
setDescriptionText:
headerViewWithString:layout:existingView:
headerViewWithImage:layout:existingView:
dataLabelViewWithString:layout:existingView:
dataDescriptionViewWithString:maxLine:layout:existingView:
layout
setLayout:
_layout
revision
startObserving
_handleMediaLibraryContentsDidChangeNotification:
stopObserving
_removeStateObserverForFetchControllers:
removeObserver:
mutableFetchControllers
_enqueueSyncProcessingQueueBlock:
_addStateObserverForFetchControllers:
addObjectsFromArray:
_enqueueControllerFetchOperation
indexOfObjectIdenticalTo:
removeObjectsInArray:
setPaused:
_enqueueAsyncProcessingQueueBlock:
nowPlayingAppBundleIdentifier
_postContentsDidChangeNotification
userInfo
_handleMediaLibraryContentsChange
observeValueForKeyPath:ofObject:change:context:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
delayContentsChangeOperation
delayOperationWithDelay:
_delayContentsChangeOperationDidComplete:
setCompletionBlock:
setDelayContentsChangeOperation:
currentFetchOperation
setCurrentFetchOperation:
_notifyDelegateFetchDidComplete
isPaused
setShouldFetchOnResume:
_queueOperationDidComplete:
serialFetchOperationQueue
shouldFetchOnResume
fetchDidCompleteForMediaLibraryFetchControllerQueue:
nowPlayingObserver:latestObservationDidChange:
addFetchController:
removeFetchController:
pauseFetching
resumeFetching
_enqueueProcessingQueueBlock:synchronous:
setMutableFetchControllers:
setSerialFetchOperationQueue:
nowPlayingObserver
setNowPlayingObserver:
_paused
_shouldFetchOnResume
_mutableFetchControllers
_currentFetchOperation
_delayContentsChangeOperation
_serialFetchOperationQueue
_nowPlayingObserver
headerTextLayout
footerTextLayout
setDescriptionTextHighlightColor:
setDescriptionTextColor:
isDescendantOfView:
isEqualToArray:
makeObjectsPerformSelector:
isRTL
_calculateInfoHeadersThatFits:
infoTableMiddleSpacing
setTextAlignment:
sectionHeaderBottomSpace
sectionDataViewBottomSpace
descriptionText
sectionInfoViewBottomSpace
sectionFooterTopSpace
_calculateInfoDataViewsThatFit:
sectionFooterBottomSpace
isHorizontal
footerLabelWithString:layout:existingView:
footerDescriptionWithString:layout:maxLine:existingView:
setInfoViews:
infoViews
_infoViews
_mediaItemWithMPMediaItem:
_preflightPlaybackWithMediaItem:disableLocalAsset:presentingViewController:completionHandler:
_isOnWiFi
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
_shouldWarnStartingRentalPlaybackWindowWithMediaItem:
_presentStartingPlaybackWindowWarningWithRentalMediaItem:presentingViewController:completionHandler:
assetType
_isOnCellular
_presentCantPlaybackOverCellularAlertControllerWithMediaItem:presentingViewController:completionHandler:
_presentCellularPlaybackIsDisabledAlertControllerWithMediaItem:presentingViewController:completionHandler:
_verifyMediaItemIsPlayableOnCellular:presentingViewController:completionHandler:
_determineCellularPlaybackQualityForRentalMediaItem:presentingViewController:completionHandler:
defaultWorkspace
openSensitiveURL:withOptions:
_isMediaItemPlayableOnCellular:
systemFontOfSize:weight:
_setAttributedMessage:
_isRemainingTimeLeftWithinRentalPlaybackWindowWithMediaItem:
rentalExpirationDate
rentalPlaybackDuration
timeIntervalSinceDate:
preflightPlaybackWithMediaItem:disableLocalAsset:presentingViewController:completionHandler:
_calculateMetricsOfScorecard
CGSizeValue
setObject:atIndexedSubscript:
drawAtPoint:
topRowLayout
bottomRowLayout
floatValue
setFill
backgroundBlendMode
separatorColor
separatorBlendMode
attribute:atIndex:effectiveRange:
array
valueWithCGSize:
_calculateColumnSpacing
drawRect:
didCalculatedSize
setDidCalculatedSize:
scorecardSize
setScorecardSize:
setInteritemSpacing:
rowElementSizes
setRowElementSizes:
columnWidths
setColumnWidths:
rowHeights
setRowHeights:
darkMaterialImage
setDarkMaterialImage:
delegateRespondsToBackgroundImageForScorecardViewMaterial
setDelegateRespondsToBackgroundImageForScorecardViewMaterial:
delegateRespondsToBackgroundBlendModeForElementInRowAtIndex
setDelegateRespondsToBackgroundBlendModeForElementInRowAtIndex:
_didCalculatedSize
_delegateRespondsToBackgroundImageForScorecardViewMaterial
_delegateRespondsToBackgroundBlendModeForElementInRowAtIndex
_scoreboardLayout
_interitemSpacing
_rowElementSizes
_columnWidths
_rowHeights
_darkMaterialImage
_scorecardSize
addEntriesFromDictionary:
initWithMediaLibrary:mediaItem:requestedProperties:
_propertyValueForKey:
containsObject:
automaticallyNotifiesObserversForKey:
hasBeenPlayed
playCount
bookmark
creationDate
modifiedDate
lastPlayedDate
previewFrameImageIdentifier
extrasURL
seasonIdentifier
seasonTitle
keyPathsForValuesAffectingPlayedState
setHasBeenPlayed:
setPlayCount:
setBookmark:
_isPlayable
connectionQueue
observers
_onConnectionQueue_startObservingIfIdle
removeObject:
_onConnectionQueue_stopObservingIfIdle
addObserver:
removeAllObservers
setConnectionQueue:
setObservers:
_connectionQueue
_observers
_setSupportsTwoLineLargeTitles:
section
setChildView:
spacerB
_productLockupViewWithMediaItem:
initWithMediaEntityAssetController:
setDownloadViewController:
_productInfoViewWithMediaItem:
stackCollectionView
removeFromParentViewController
setLeftJustifiedImageEnabled:
setDownloadView:
didMoveToParentViewController:
productLockupViewWithMedia:
leftButton
cast
_productSectionForHeader:data:group:maxItemCount:
directors
producers
screenwriters
downloadViewController:didRemoveDownloadForAssetController:
contentDescriptionExpanded
didSelectButton:
downloadViewController
_fetchController
_productLockupView
_productInfoView
_downloadViewController
setPadding:
setFillColor:
setHeight:
setProgressBarLayout:
vui_imageBorderColor
setBorderColor:
vui_imageHighlightColor
setHighlightColor:
setSize:
radiiFromRadius:
setBorderRadii:
setAppImageLayout:
overlayLayoutForInterfaceIdiom:
_appImageLayout
_progressBarLayout
_padding
imageNamed:
_resourceImageNamed:
setTitleColor:forState:
setFont:
setAdjustsFontForContentSizeCategory:
setTitle:forState:
setSeeAllButton:
setTitleTopMargin:
setBottomTextMargin:
setSubtitleTitleMargin:
setButtonHorizontalPadding:
headerViewStyle
seeAllButton
titleTopMargin
subtitleTitleMargin
bottomTextMargin
buttonHorizontalPadding
_headerViewStyle
_seeAllButton
_titleTopMargin
_subtitleTitleMargin
_bottomTextMargin
_buttonHorizontalPadding
_parseDatabase
_startMonitoringDatabaseFile
serialDispatchQueue
movieByIdentifier
_sortedEntitiesArray:
movieRentalByIdentifier
homeVideoByIdentifier
showByIdentifier
_addShow:
_addSeason:showIdentifier:
_addEpisode:showIdentifier:seasonIdentifier:
_addHomeVideo:
_addMovie:
_addMovieRental:
_removeEntityWithIdentifier:
episodeForIdentifier:
setValue:forKey:
_dictionaryRepresentation
dataWithPropertyList:format:options:error:
removeItemAtURL:error:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:
fileURL
propertyListWithData:options:format:error:
postNotificationName:object:
setEpisodes:
_addItem:itemByIdentifier:
_removeItem:itemByIdentifier:
_removeMovie:
_removeMovieRental:
_removeHomeVideo:
_removeShow:
_removeSeason:fromShow:
_removeEpisode:fromSeason:
path
getCString:maxLength:encoding:
setDatabaseFileDispatchSource:
_parseDatabaseAndSendNotification
addEntity:showIdentifier:seasonIdentifier:
removeEntityWithIdentifier:
updateEntityWithIdentifier:propertyName:propertyValue:
saveToFileURL:error:
setFileURL:
setSerialDispatchQueue:
databaseFileDispatchSource
setHomeVideoByIdentifier:
setMovieByIdentifier:
setMovieRentalByIdentifier:
setShowByIdentifier:
_fileURL
_serialDispatchQueue
_databaseFileDispatchSource
_homeVideoByIdentifier
_movieByIdentifier
_movieRentalByIdentifier
_showByIdentifier
_numberOfLinesForTraitCollection:textLayout:
setHighlightedTextColor:
setAttributedText:
setAdjustsFontSizeToFitWidth:
_firstBaselineOffsetFromTop
_baselineOffsetFromBottom
setTextColor:
_updateTextColor:
isAXSmallEnabled:
isAXLargeEnabled:
setSelected:animated:
_selected
_lastSelectedOrHighlighted
bundleWithIdentifier:
vui_videosUIBundle
predicateWithValue:forProperty:comparisonType:
predicateMatchingPredicates:
vui_showPersistentIDPredicate:comparison:
seasonNumber
vui_seasonNumberPredicate:comparison:
predicateWithValue:forProperty:
_vui_isPlayablePredicate:
_vui_isNetworkPlayablePredicate:
vui_mediaEntityTypePredicate:comparison:
vui_seasonIdentifierPredicate:comparison:
vui_isPlayablePredicate:comparison:
vui_restrictionsPredicateWithMediaEntityType:mediaLibrary:
vui_mediaPropertyPredicateComparisonWithPredicateOperatorType:
vui_mediaPropertyPredicateWithProperty:predicateOperatorType:value:
sharedManager
downloadForStoreID:
_stateFromStoreDownload:
initWithMediaItem:state:serialProcessingDispatchQueue:
_addStoreObserver
_removeStoreObserver
storeDownload
isRestore
_onProcessingQueue_invalidate
setStoreDownload:
cancelDownloads:
pauseDownloads:
resumeDownloads:
_setState:
percentComplete
bytesTotal
phaseIdentifier
failureError
purchaseError
setDownloadSucceeded:
addObserver:forDownloads:
removeObserver:forDownloads:
downloadManager:didAddDownloads:removeDownloads:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
downloadManager:downloadDidFinish:
downloadManager:downloadDidProgress:
downloadManager:downloadPurchaseDidFinish:
downloadManager:downloadsDidProgress:
downloadManagerNetworkUsageDidChange:
isRestoreDownload
_onProcessingQueue_cancelDownload
_onProcessingQueue_pauseDownload
_onProcessingQueue_resumeDownload
_storeDownload
initWithRevision:
setRevision:
_revision
contentDescription
coverArtURL
genreTitle
setType:
setGenreTitle:
setContentDescription:
setCoverArtURL:
_type
_genreTitle
_contentDescription
_coverArtURL
_startProgressTimer
setSuccess:
_stopProgressTimer
connectWithCompletionHandler:
setProgressTimer:
connectionProgress
_notifyClientOfProgress:
progressTimer
numberWithFloat:
progressBlock
setProgressBlock:
success
_success
_progressBlock
_progressTimer
vuiElementTypeForElement:
valueForStyleProperty:
gridStyleForCSSStyle:
cardView
cardLayoutType
gridStyle
gridType
overlayType
cardViewFactoryForType:gridStyle:gridType:overlayType:
setLayoutFactory:
width
decorator
imageLayout
setCornerRadii:
highlightColor
_setFocusedColor:
secondaryTextLayout
titleTextLayout
subtitleTextLayout
initWithCapacity:
isDisabled
setAllowsFocus:
setCardView:force:
setAutoresizingMask:
setContentMode:
shadowPathForViewElement:withCornerRadii:andScaledSize:
setShadowPath:
shadowOffset
setShadowOffset:
shadowBlurRadius
setShadowRadius:
shadowColor
CGColor
setShadowColor:
setShadowOpacity:
cardCellWithElement:existingCell:
canBecomeFocused
setCardView:
allowsFocus
_allowsFocus
_cardView
_setupOfferButton
_updateOfferButton
setProgressType:
setProgress:
offerButton
setCloudTintColor:
setFillStyle:
setTranslatesAutoresizingMaskIntoConstraints:
topAnchor
constraintEqualToAnchor:
setActive:
bottomAnchor
trailingAnchor
leadingAnchor
_handleOfferButtonAction:
addTarget:action:forControlEvents:
progress
_canAnimate
_offerButtonProgressTypeFromDownloadButtonProgressType:
setProgressType:animated:
_flatImageWithColor:
setProgress:animated:
_downloadButtonProgressTypeFromOfferButtonProgressType:
setOfferButton:
_progressType
_progress
_offerButton
addedToDate
mediaItemCount
_identifierPredicateWithIdentifier:
_minimalPropertiesFetchRequestWithType:
_minimalMoviesPropertiesFetchRequest
_minimalMovieRentalsPropertiesFetchRequest
_minimalShowsPropertiesFetchRequest
_seasonsFetchRequestWithShowIdentifier:
_seasonsFetchRequestWithSeasonIdentifier:
_episodesFetchRequestWithSeasonIdentifier:showIdentifier:
_addedDateSortDescriptor
_addedToDateSortDescriptor
_anyHDRColorCapabilityPredicate
_addPredicate:
_any4KResolutionPredicate
_predicateWithSubpredicates:compoundPredicateType:
_isLocalPredicate
_includeSortIndexesOptions
_titleSortDescriptor
_showIdentifierPredicateWithIdentifier:
_seasonNumberSortDescriptor
_seasonIdentifierPredicateWithIdentifier:
_episodeNumberSortDescriptor
titleSortComparatorWithAscending:
vui_equalPredicateWithKeyPath:value:
numberWithUnsignedLong:
vui_keyPathBitTestPredicateWithKeyPath:value:
_resolutionPredicateWithResolution:
_HLSResolutionPredicateWithResolution:
vui_predicateWithSubpredicates:type:
addSortIndexesOption
addGroupingSortIndexesOption
addRecentlyAddedSortDescriptorWithLimit:
addHDRColorCapabilityPredicate
add4KResolutionPredicate
addHDRColorCapabilityOr4KResolutionPredicate
homeVideosFetchRequest
moviesFetchRequest
movieRentalsFetchRequest
showsFetchRequest
seasonsFetchRequest
seasonsFetchRequestWithShowIdentifier:
seasonsFetchRequestWithSeasonIdentifier:
episodesFetchRequest
episodesFetchRequestWithSeasonIdentifier:
episodesGroupedBySeasonIdentifierFetchRequestWithShowIdentifier:
_releaseYearSortDescriptor
_releaseDateSortDescriptor
_showTitleSortDescriptor
initWithFetchReason:fetchResponses:
setFetchReason:
setFetchResponses:
_fetchReason
_fetchResponses
initWithPersistentID:seasonNumber:
setSeasonNumber:
_seasonNumber
playedThresholdTimeForDuration:
playedStateForDuration:elapsedTime:hasBeenPlayed:playCount:respectPlayCount:
suggestedBookmarkTimeForElapsedTime:duration:
_safeAreaInsetsForDevice
vui_itemWidthForGridStyle:gridType:numGridColumns:
_vui_interitemSpaceForGridZone:gridType:
statusBarOrientation
vui_collectionInteritemSpace:gridType:
vui_isHomeShareMediaLibrary
defaultMediaLibrary
initWithMPMediaLibrary:type:manager:
initWithIdentifier:type:manager:
_handleMediaLibraryIsUpdateInProgressDidChangeNotification:
sharedCloudController
_isUpdateInProgress
_isInitialUpdateInProgress
loadUpdateProgressWithCompletionHandler:
enqueueMediaItemEntityTypesFetchWithCompletionHandler:
enqueueFetchRequests:completionHandler:
saveMediaEntity:completionHandler:
isUpdateInProgress
isInitialImport
isUpdating
isInitialUpdateInProgress
updateProgressWithCompletionHandler:
identifierKeyPath
valueForKeyPath:
sortIndexKeyPath
groupsSortComparator
performDefaultSort
ascendingTitleSortComparator
sortedArrayUsingComparator:
transformedValueClass
allowsReverseTransformation
setIdentifierKeyPath:
_performDefaultSort
_identifierKeyPath
_sortIndexKeyPath
_groupsSortComparator
orderedSet
mediaItemEntityTypes
areLocalMediaItemsAvailable
mediaItemEntityTypesChangeSet
vui_applyChangeSetIfAvailable:destinationObjects:replaceContentsOnNilChanges:
orderedSetWithArray:
localMediaItemsAvailableDidChange
_localMediaItemsAvailable
_mediaItemEntityTypes
setUserInteractionEnabled:
moviePlaceholderImage
tvPlaceholderImage
setPlaceholderImage:
setImageAspectRatio:
decoratorWithOutlineColor:outlineWidths:
initWithObject:imageLoader:groupType:
setScaleToSize:
setDecorator:
setImageProxy:
setImageContainsCornerRadius:
labelWithExpirationDate:textLayout:existingLabel:formatString:
setExpirationLabel:
setExclusiveTouch:
invalidateTimer
configureLockupCell:withMedia:width:forMetrics:
rentalExpirationLabelNeedsRelayout:
imageAspectRatio
expirationLabel
_imageAspectRatio
_expirationLabel
VideosBundle
localizedStringForKey:value:table:
initWithMediaLibrary:identifier:requestedProperties:kind:
databaseSeason
allObjects
coverArtImageIdentifier
initWithImageURL:baseImageIdentifier:imageType:
playedState
showIdentifier
showTitle
_valueForPropertyDescriptor:
setDatabaseSeason:
_databaseSeason
setCachesPropertiesOnFirstAccess:
resolution
colorCapability
audioCapability
HLSResolution
HLSColorCapability
HLSAudioCapability
setMediaItemCollection:
_coverArtImageIdentifier
_mediaItemCollection
setPropertyDescriptorsByName:
propertyDescriptors
propertyDescriptorsByName
mediaEntityClassName
_mediaEntityClassName
_propertyDescriptors
_propertyDescriptorsByName
_scrollToTopIfPossible:
setShowsVerticalScrollIndicator:
setShowsHorizontalScrollIndicator:
_updateNavigationBarPadding
viewDidDisappear:
childViewControllers
viewController
isViewLoaded
navigationBar
layoutMargins
setLayoutMargins:
scrollToTop
preferredStatusBarStyle
_invalidateLayouts
stackView
_focusedIndexPath
_stackView
_stackCollectionView
downloadSucceeded
setDownloadInProgress:
_downloadSucceeded
_downloadInProgress
_MPMediaEntityImageLoadParams
hasImageOnDisk
bestImageFromDisk
_finishWithImage:
setFittingSize:
requestImageWithCompletionHandler:
CGImage
imageWithCGImageRef:preserveAlpha:
initWithParams:scaleToSize:
initWithView:
_applicationDidEnterBackground:
_cleanupPreviewInteraction
locationInCoordinateSpace:
isDragging
superview
panGestureRecognizer
setEnabled:
snapshotViewAfterScreenUpdates:
insertSubview:below:
convertRect:toView:
setTransform:
initWithDuration:curve:animations:
initWithDuration:dampingRatio:animations:
setFractionComplete:
startAnimation
pauseAnimation
initWithDampingRatio:
continueAnimationWithTimingParameters:durationFactor:
stopAnimation:
previewInteraction:didUpdatePreviewTransition:ended:
previewInteractionDidCancel:
previewInteractionShouldBegin:
previewInteraction:didUpdateCommitTransition:ended:
_previewInteraction
_previewPropertyAnimator
_commitPropertyAnimator
_stashedCell
_previewTransitionEnded
setAsyncWorkToken:
_setUpViews
textLabels
button
configureTextStackView
heightAnchor
constraintEqualToConstant:
widthAnchor
centerYAnchor
buttonSelected:
buttonReleased:
buttonPressed:
initWithArrangedSubviews:
textLabelStackView
setAxis:
constraintEqualToAnchor:constant:
vui_keyBlueHighlightedColor
setButtonImage:
setTextLabels:
buttonImage
setButton:
setTextLabelStackView:
_buttonImage
_textLabels
_button
_textLabelStackView
setDirectionalLockEnabled:
setContentInsetAdjustmentBehavior:
setScrollEnabled:
isScrollEnabled
_scrollView
_containerView
setViewController:
_viewController
startIndex
setStartIndex:
_startIndex
_count
_setupLayouts
isDynamicTextEnabled
systemBlackColor
mainViewMargin
setIsRTL:
_isRTL
_headerTextLayout
_footerTextLayout
_infoHeaderTextLayout
_infoBodyTextLayout
_infoDescriptionTextLayout
_sectionHeaderBottomSpace
_sectionDataViewBottomSpace
_sectionFooterTopSpace
_sectionFooterBottomSpace
_sectionInfoViewBottomSpace
_infoTableMiddleSpacing
_seeMoreTextColor
_mainViewMargin
databaseItem
setDatabaseItem:
_databaseItem
_ratingSystemLookUpDictionary
stringByAppendingString:
_ratingSystemStringLookUpDictionary
_isRatingSystemForMovies:
_isRatingSystemForTV:
_isRatingSystemForMusic:
ratingSystemKindForRatingSystem:
initWithScaleToSize:
randomColor
createImageProxyForResourceObject:imageSize:
minimumNumberOfItemsToEnableSeeAllButton
spacerA
spacerC
groupingChangeSet
setMediaEntitiesChangeSet:
_mediaEntitiesChangeSet
_groupingChangeSet
_titleButtonPressed:
titleButtonPressedForStoreId:
storeID
setStoreID:
titleButton
setTitleButton:
_storeID
_titleButton
_connectionStateFromMPMediaLibraryStatus:
_handleMediaLibraryStatusDidChangeNotification:
setCloudFilteringType:
addLibraryFilterPredicate:
beginGeneratingLibraryChangeNotifications
artworkDataSource
setUsesFallbackCache:
serialOperationQueue
_enqueueProcessingBlock:
setConnectionState:
connectionState
connectWithCompletionHandler:progressHandler:
setSerialOperationQueue:
_connectionState
_serialOperationQueue
vui_arrayByApplyingChangeSet:destinationObjects:
item
shelfCollectionViewController:collectionView:didSelectMediaEntity:atIndexPath:
_computeBottomMargin
_configureSizingCellWithEntity:
seeAllButtonPressed:
_hideSeeAllButton
headerTitle
headerSubtitle
_didPressSeeAllButton:
setHeaderTitle:andSubtitle:
setHeaderTitle:
setHeaderSubtitle:
disableSeeAllButton
setDisableSeeAllButton:
fetchResults
setFetchResults:
_disableSeeAllButton
_headerTitle
_headerSubtitle
_fetchResults
_previewFrameImageIdentifier
setContentInset:
_performWithoutLayoutBelow:
layoutBelowIfNeeded
_shouldFadeCellsForBoundChangeWhileRotating
_flags
setViewLayout:
_generateSectionViewFromElement:
updateViewWithSections:
effectiveUserInterfaceLayoutDirection
tv_padding
tv_interitemSpacing
attributes
cssValueForStyleProperty:
maxTextLines
dispatchEventOfType:canBubble:cancellable:extraInfo:completion:
setSelectionHandler:
configureViewWithElement:existingView:
configureViewWithSections:existingView:
sectionViews
setSectionViews:
viewLayout
_sectionViews
_viewLayout
_arrayFromStringRepresentation:
_stringRepresentationFromArray:
componentsSeparatedByString:
hasCredits
_cast
_directors
_producers
_screenwriters
imageWithColor:
_episodePlaceholderImage
setScaleMode:
setBgColor:
playButton
initWithFrame:blurEffectStyle:blurEnabled:
initWithSize:
_setTintColor:
setTextContentView:
setImageTrailsTextContent:
setAccessoryView:
setPlayButton:
colorWithWhite:alpha:
setFullyPlayedImageView:
fullyPlayedImageView
_playButtonPressed
didTapButtonForEpisodeFrameView:
_playButton
_fullyPlayedImageView
vui_applyChangeSet:inSection:completionHandler:
deleteChange
_vui_applyDeleteChange:inSection:applyChangeBlock:
insertChange
_vui_applyInsertChange:inSection:applyChangeBlock:
moveChanges
_vui_applyMoveChanges:inSection:applyChangeBlock:
updateChanges
_vui_applyUpdateChanges:inSection:applyChangeBlock:
performBatchUpdates:completion:
sourceIndexes
deleteSections:
_vui_indexPathsWithIndexSet:andSection:
deleteItemsAtIndexPaths:
insertSections:
insertItemsAtIndexPaths:
moveSection:toSection:
moveItemAtIndexPath:toIndexPath:
_vui_applySectionUpdateChanges:applyChangeBlock:
_vui_applyItemUpdateChanges:inSection:applyChangeBlock:
updateChangeSet
reloadItemsAtIndexPaths:
enumerateIndexesUsingBlock:
vui_applyChangeSet:completionHandler:
vui_applySectionChangeSet:updateDataSourceBlock:completionHandler:
asyncWorkToken
_asyncWorkToken
_initWithMediaItemCategoryType:isRental:
_initWithMediaCollectionType:mediaCategoryType:
mediaCatgeoryForType:
supportedMediaCollectionTypes
mediaCollectionType
setSubtype:
setMediaCategoryType:
setMediaCollectionType:
setRental:
_rental
_subtype
_mediaCategoryType
_mediaCollectionType
lightGrayColor
vui_imageWithColor:
setHighlightOrSelectedImage:
_mediaEntityKind
setMediaEntityKind:
_populatePrefetchProperties
_processRange
_processSortDescriptors
_processPredicate
_mediaQuery
request
_itemsFetchResponseWithMediaQuery:
_collectionsFetchResponseWithMediaQuery:
setProcessRangeAfterFetch:
mediaEntityKind
_shouldSortUsingMediaQuery
setMediaQuerySortOrderingProperties:
setMediaQuerySortOrderingDirectionMappings:
prefetchProperties
setPostFetchSortDescriptors:
postFetchSortDescriptors
_mediaQueryPredicateForPredicate:
vui_keyPathsInPredicate
setProcessPredicateAfterFetch:
setMediaQueryPredicate:
_mediaQueryPredicateForCompoundPredicate:
_mediaQueryPropertyPredicateForComparisonPredicate:
predicateWithValue:
subpredicates
vui_addObjectIfNotNil:
compoundPredicateType
leftExpression
rightExpression
expressionType
predicateOperatorType
_keyPathMediaQueryPropertyPredicateWithKeyPathExpression:operatorType:constantExpression:
vui_isKeyPathBitTestExpression
_bitTestMediaQueryPropertyPredicateWithKeyPathBitTestExpression:operatorType:constantExpression:
keyPath
_mediaEntityPropertyDescriptorForFilteringWithKeyPath:
constantValue
arguments
_baseMediaQuery
_addEntityLimitToMediaQuery:
_addPredicateToMediaQuery:
_addSortingPropertiesToMediaQuery:
_addPrefetchPropertiesToMediaQuery:
setGroupingType:
processRangeAfterFetch
mediaQueryPredicate
addFilterPredicate:
_isSortingBeingPerformedByMediaQuery
mediaQuerySortOrderingProperties
_setOrderingProperties:
mediaQuerySortOrderingDirectionMappings
_setOrderingDirectionMappings:
setItemPropertiesToFetch:
processPredicateAfterFetch
_mediaEntities:subarrayWithRange:
subarrayWithRange:
itemSections
_fetchResponseWithMediaEntities:mediaEntitySubtype:mediaQuerySections:
collections
collectionSections
_processFetchedMediaEntities:
_sortIndexesWithMediaQuerySection:
setRequest:
setPrefetchProperties:
_processPredicateAfterFetch
_processRangeAfterFetch
_request
_prefetchProperties
_mediaQueryPredicate
_mediaQuerySortOrderingProperties
_mediaQuerySortOrderingDirectionMappings
_postFetchSortDescriptors
isConnectable
supportsDRMContent
_incrementRevision
_updateWithTitle:connectionState:
_manager
_initWithType:
setSupportedMediaCollectionTypes:
setSupportedChildMediaCollectionTypes:
supportedChildMediaCollectionTypes
_supportedMediaCollectionTypes
_supportedChildMediaCollectionTypes
isObserving
setObserving:
_startObserving
_stopObserving
_updateLatestObservation
_notifyDelegateLatestObservationDidChange:
_handleNowPlayingAppDidChangeNotification:
_handleNowPlayingAppIsPlayingDidChangeNotification:
setLatestObservation:
updateObservationContext
setUpdateObservationContext:
_updateLatestObservationWithBundleIdentifier:playbackState:
initWithBundleIdentifier:isPlaying:
latestObservation
_observing
_latestObservation
_updateObservationContext
isPlaying
setPlaying:
setNowPlayingAppBundleIdentifier:
_playing
_nowPlayingAppBundleIdentifier
initWithDateForEntityBlock:
setMaxEntities:
sourceBackgroundImage
resizedBackgroundImageSize
drawInRect:
setResizedSourceBackgroundImage:
overlayMaterialRequests
rect
_blurredMaterialImageWithSourceBackgroundImage:forRect:
setOverlayMaterialImageByIdentifier:
imageWithCGImage:
settingsForPrivateStyle:
setColorTintAlpha:
_applyBackdropViewSettings:
main
setSourceBackgroundImage:
_overlayMaterialRequests
_resizedSourceBackgroundImage
_overlayMaterialImageByIdentifier
_sourceBackgroundImage
_resizedBackgroundImageSize
setRect:
_rect
initWithIdentifier:show:
setShow:
_show
_episodes
_startMediaLibraryFetchOperation
currentSubOperation
_handleCompletdFetchWithResponses:error:
setCurrentSubOperation:
_startChangesOperationWithMediaEntityFetchResponses:currentFetchResponses:
_resultWithResponses:
setResult:
_result
_currentSubOperation
setBadgeStyle:
bgColor
cornerRadius
badgeStyle
_bgColor
_cornerRadius
_badgeStyle
setAttributedTitle:
setBadgeLayout:
_textSize
bezierPathWithRect:
CGPath
fill
setLineWidth:
stroke
attributedTitle
addAttribute:value:range:
strokeSize
setStrokeSize:
badgeLayout
_strokeSize
_backgroundImage
_badgeLayout
_attributedTitle
_sportsOverlayALayout:
_sportsOverlayBLayout:
_sportsOverlayCLayout
systemDarkRedColor
_textBlendMode
_textColorForTextBadge:
scoreboardALayout
setLiveBadgeLayout:
setTextBadgeLayout:
setLogoImageLayout:
setTimeBadgeLayout:
scoreboardBLayout
scoreboardCLayoutWithInnerMargin:
colorWithAlphaComponent:
overlayLayoutForScoreboardType:interfaceIdiom:
logoImageLayout
_textBadgeLayout
_timeBadgeLayout
_liveBadgeLayout
_logoImageLayout
isTemplated
setTemplated:
_templated
updateWithMediaEntity:
initWithLayoutType:entityType:
setGenre:
releaseYear
setReleaseYear:
setLeftButton:
setSubtitle:
setBadgeResources:
coverArtImageSize
setCoverArtImageProxy:placeholderImage:
coverArtImageView
placeholderImage
_contentDescriptionAttributedString
contentDescriptionNumberOfLines
setContentDescriptionExpanded:
descriptionTextView
imageWithRenderingMode:
setText:
isEqualToNumber:
stringValue
availabilityLabel
_configureBadgeStackView
_configureViewElementsForAX
contentDescriptionFont
parser
displayDelegateWithDefaultAttributes:
attributedStringForHTMLString:error:
coverArtImageRightMargin
addArrangedSubview:
setSpacing:
text
_layoutForCategoryAccessibility:metricsOnly:
_layoutForCompact:metricsOnly:
_layoutForStacked:metricsOnly:
systemLayoutSizeFittingSize:
_sizeOfDescriptionLabel:
contentDescriptionTopMargin
buttonModuleTopMargin
contentDescriptionBottomMargin
subtitleTopMargin
metadataTopMargin
arrangedSubviews
downloadButtonPosition
_descriptionTopMarginWithBaselineMargin:otherFont:
_descriptionBottomMarginWithBaselineMargin:
setAvailabilityText:
coverArtImageProxy
coverArtPlaceholderImage
downloadView
subtitle
genre
availabilityText
badgeResources
setCoverArtImageView:
setDescriptionTextView:
contentRatingImageView
setContentRatingImageView:
genreLabel
setGenreLabel:
releaseYearLabel
setReleaseYearLabel:
setAvailabilityLabel:
genreReleaseDotSeparator
setGenreReleaseDotSeparator:
badgesStackView
setBadgesStackView:
didSetUpViews
setDidSetUpViews:
contentRatingImage
setContentRatingImage:
_contentDescriptionExpanded
_didSetUpViews
_coverArtImageProxy
_coverArtPlaceholderImage
_leftButton
_downloadView
_subtitle
_genre
_releaseYear
_availabilityText
_badgeResources
_coverArtImageView
_descriptionTextView
_contentRatingImageView
_genreLabel
_releaseYearLabel
_availabilityLabel
_genreReleaseDotSeparator
_badgesStackView
_contentRatingImage
_supportsStartingDownloadWithMediaItem:
_onProcessingQueue_calculateStateAndNotify:
_handleMediaItemAssetControllerStateDidChangeNotification:
_onProcessingQueue_invalidateAndSetState
_enqueueAsyncProcessingQueueStrongSelfBlock:
_onProcessingQueue_startDownloadWithCompletion:
_onProcessingQueue_downloadController
pauseDownload
resumeDownload
_onProcessingQueue_removeDownloadWithCompletion:
_assetControllerStatusFromDownloadControllerState:
_onProcessingQueue_updateStateWithStatus:downloadProgress:bytesDownloaded:bytesToDownload:supportsPausing:supportsCancellation:notify:
storeItemIdentifier
_onProcessingQueue_startMonitoringDownload
object
_onProcessingQueue_updateStateWithStatus:notify:
setObserverDispatchQueue:
_isDownloaded
storeDownloadForMediaItem:type:attributes:
addDownloads:
requestPermissionToDownloadWithType:completionHandler:
removeItems:
_onProcessingQueue_setDownloadController:
_notifyDelegateStateDidChange:
_postStateDidChangeNotificationWithFromState:toState:
mediaItemDownloadController:stateDidChange:
invalidate
setMediaEntityIdentifier:
downloadController
setDownloadController:
isRequestingPermissionToDownload
setRequestingPermissionToDownload:
_requestingPermissionToDownload
_state
_mediaEntityIdentifier
_downloadController
_backgroundColorForIdiom:
setSeparatorColor:
_backgroundColorBlendMode
setSeparatorBlendMode:
setBackgroundBlendMode:
_topRowLayoutForIdiom:
_bottomLayoutForIdiom:
_backgroundBlendMode
_separatorBlendMode
_separatorColor
setTopRowLayout:
setBottomRowLayout:
_textColor:
_topRowLayout
_bottomRowLayout
_borderRadii
imageNamed:inBundle:
grayColor
setExpirationDate:
setFormatString:
_computeExpirationLabel:
_calculateExpirationStringForDate:displayWarningColor:updateInterval:formatString:
redColor
scheduledTimerWithTimeInterval:repeats:block:
initWithCalendarIdentifier:
components:fromDate:toDate:options:
hour
minute
second
timeIntervalSinceNow
willMoveToWindow:
expirationDate
formatString
expiryUpdateTimer
setExpiryUpdateTimer:
_expirationDate
_formatString
_expiryUpdateTimer
_borderImage
_fillImage
removeAllAnimations
_performBlockAfterCATransactionCommits:
_indeterminateImage
_startIndeterminateAnimation
_animateValueOnDisplayLink:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
didMoveToWindow
bezierPath
moveToPoint:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
addLineToPoint:
clip
tintColorDidChange
timestamp
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
isIndeterminate
setImageInsets:
setIndeterminate:
_setHidesBorderView:
imageInsets
_animatedValue
_animationEndTime
_animationStartTime
_animationStartValue
_centerImage
_centerImageInsets
_displayLink
_highlighted
_indeterminateView
_isAnimating
_unhighlightedBackgroundColor
imageType
baseImageIdentifier
setImageURL:
setBaseImageIdentifier:
setImageType:
_imageIdentifier
_imageURL
_baseImageIdentifier
_imageType
gridViewController
setGridViewController:
_gridViewController
leftBarButtonItem
setLeftBarButtonItem:
_localizedBannerString
viewControllerForMediaEntity:onlyShowLocalContent:
_localizedTitleForMediaEntityType:
initWithMediaLibrary:mediaEntities:displaySortFilter:
setTitle:withLargeTitleDisplayEnabled:
setLibraryBarButton:
setForceBackButton:
libraryBarButton
viewModel
setViewModel:
currentNavBarButtonItem
setCurrentNavBarButtonItem:
currentSeeAllController
setCurrentSeeAllController:
_bannerViewSizingCell
_isPhone
_libraryBarButton
_viewModel
_currentNavBarButtonItem
_currentSeeAllController
initWithFetchReason:fetchResponse:
setFetchResponse:
setFetchChanges:
_fetchResponse
_fetchChanges
_updateImage
highlightOrSelectedImage
_flatImage
_highlightOrSelectedImage
_handleMediaDatabaseContentsDidChangeNotification:
initWithDatabase:
setDatabase:
_database
logNameSuffix
_cancelFetch
_moveToPausedState
pauseCount
setPauseCount:
setState:
_startFetchIfNeededWithMediaLibraryRevision:completionHandler:
vui_applyChangeSet:destinationObjects:
fetchOperation
setFetchOperation:
_shouldFetchForMediaLibraryRevision:
_startFetchWithCompletionHandler:
_enqueueFetchWithReason:completionHandler:
_fetchOperationCompleted:withCompletionHandler:
addExecutionBlock:
_updateMutableArray:withLatestObjects:changeSet:updateOnNoChanges:
setLogName:
_logName
_logNameSuffix
_fetchOperation
_pauseCount
_showAppropriateButton
_isAppropriateButtonBeingShown
_updateAppropriateButton
_notifyDelegateStartDownload
_notifyDelegateCancelDownload
_notifyDelegateRemoveDownload
_shouldShowDownloadedButton
_shouldShowDownloadButton
_shouldShowSomeButton
setDownloadedButton:
_currentButton
_updateDownloadButton
_handleDownloadedButtonAction:
downloadViewDidRequestStartDownload:
downloadViewDidRequestCancelDownload:
downloadViewDidRequestRemoveDownload:
setProgressType:andProgress:supportsStartingDownload:
leftJustifiedImageEnabled
_leftJustifiedImageEnabled
_downloadedButton
enqueueKeepAliveWithCompletion:
_episodeFrameImageSizeWithViewSize:
episodeTitleLabel
setEpisodeTitleLabel:
uppercaseString
seasonNumberLabel
setSeasonNumberLabel:
episodeNumberLabel
setEpisodeNumberLabel:
setContentDescriptionFont:
setContentDescriptionView:
contentDescriptionView
episodeViewDelegate
_episodeViewDelegate
_episodeTitleLabel
_seasonNumberLabel
_episodeNumberLabel
_contentDescriptionView
_contentDescriptionFont
_registerElements
_registerStyles
elementTypeLookup
parentViewElement
element
elementType
parent
styleMetrics
setWidth:
setMinHeight:
setStyleMetrics:
registerViewElementClass:forElementName:
registerClass:forElementName:elementType:dependent:
registerStyle:withType:inherited:
viewControllerForElement:existingViewController:
URLForResource:
imageForResource:
collectionViewCellClassForElement:
_parseAppConfigurationForElement:
_imageProxyForElement:
_styleSheetURLForTemplate:
_navigationControllerForTabIdentifier:
navigationControllerForTabIdentifier:
setElementTypeLookup:
_elementTypeLookup
_updateWithMediaEntities:mediaEntitiesChangeSet:grouping:groupingChangeSet:
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
_updateCurrentViewIfNeeded
_getFilterTitleForEnum:
_toggleSortFilter
initWithTitle:style:target:action:
_updateLayout
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
_configureSizingCellForItemAtIndexPath:
contentInset
totalResults
rightBarButtonItem
initWithMediaLibrary:fetchRequest:displaySortFilter:
gridFilter
setGridFilter:
forceBackButton
fetchRequest
setFetchRequest:
setTotalResults:
genreGroupedResults
setGenreGroupedResults:
sizingCell
setSizingCell:
cellWidth
setCellWidth:
_displaySortFilter
_cellSize
_cellMetrics
_sizingHeaderView
_forceBackButton
_gridFilter
_fetchRequest
_totalResults
_genreGroupedResults
_cellWidth
intValue
initWithMediaLibrary:title:collectionIdentifier:
initWithMediaCollection:showMultipleSeasons:
configureSeasonPickerCell:withMedia:traitCollection:
viewControllerForMediaEntity:
originForElement:withSize:inRect:
position
semanticContentAttribute
semanticPositionForPosition:semanticContentAttribute:
originForElement:withSize:inRect:containedInElement:
coverArtBottomPadding
shouldShowTitleLabel
entityType
_entityType
shelfType
setShelfType:
_shelfType
_removeMediaLibraryNotificationObservers
_updateNavigationTitle
parentViewController
_reparentNavigationItem:
indexPathsForSelectedItems
transitionCoordinator
deselectItemAtIndexPath:animated:
selectItemAtIndexPath:animated:scrollPosition:
_showHomeVideosIfNoRecentlyAddedContent
interactivePopGestureRecognizer
_handleApplicationBecomingActive:
viewControllers
_updateViewIfFetchComplete
shelvesViewModel
updateContentOffsetWithTransitionCoordinator:
isIpad
_addMediaLibraryNotificationObservers
_isNetworkReachable
setHidesBackButton:
_isDeviceMediaLibraryInitialUpdateInProgress
_startMonitoringDeviceMediaLibraryInitialUpdate
_startFetchControllers
_localizedTitleForCellType:
_selectLibraryCellType:fromPopover:
_localizedTitleForShelfType:
_menuItemsAndPopoverMenuItems:
_reloadPopoverViewController
_showContentOrNoContentView
shelfTypesSortComparator
_configureShelfViewController:withShelfType:
_popoverTitleForIndexPath:
setViewControllers:animated:
_fetchRequestsWithMediaLibrary:shelfTypeMap:
setShelfTypeByFetchRequestIdentifier:
_haveAllInitialFetchesCompleted
_constructLibraryDataSourceAndUpdateActiveView
setHomeShares:
shouldRecordExtendedLaunchTime
_launchTestName
isRunningTest:
finishedTest:extraResults:
setAppliedNavigationItem:
setNeedsStatusBarAppearanceUpdate
_shouldShowContentView
_shouldAutomaticallySelectHomeVideos
appliedNavigationItem
leftBarButtonItems
rightBarButtonItems
leftItemsSupplementBackButton
largeTitleDisplayMode
_largeTitleAccessoryView
_supportsTwoLineLargeTitles
setLeftBarButtonItems:
setRightBarButtonItems:
setLeftItemsSupplementBackButton:
_setLargeTitleAccessoryView:alignToBaseline:
_leftNavigationButtonWithTitle:
_setTextColorFollowsTintColor:
_setWantsUnderlineForAccessibilityButtonShapesEnabled:
_libraryPopoverPressed
addTarget:action:forEvents:
initWithCustomView:
_viewControllerWithCellType:forPopover:
_updatePopoverStateWithCellType:
popToViewController:animated:
_updatePopoverSelectedItem
setBarButtonItem:
indexOfObject:
popoverViewController
homeShares
networkReachabilityFlags
_deviceMediaLibraryUpdateStateDidChange:
_stopMonitoringDeviceMediaLibraryInitialUpdate
_addNotificationObserversWithDeviceLibrary:
_networkStatusChanged
addObserverForName:object:queue:usingBlock:
_homeShareMediaLibrariesDidChange:
_removeNotificationObserversWithDeviceLibrary:
ppt_isLoading
hasMenuItemFetchCompleted
setHasMenuItemFetchCompleted:
setAreLocalMediaItemsAvailable:
menuMediaItemEntityTypes
setMenuMediaItemEntityTypes:
menuCells
setMenuCells:
menuItemSizingCell
setMenuItemSizingCell:
setPopoverViewController:
popoverDropdownCells
setPopoverDropdownCells:
sizingPopoverCell
setSizingPopoverCell:
currentlySelectedPopoverCell
setCurrentlySelectedPopoverCell:
currentHomeShareMediaLibrary
setCurrentHomeShareMediaLibrary:
bannerViewSizingCell
setBannerViewSizingCell:
setShelvesViewModel:
hasMediaEntitiesFetchCompleted
setHasMediaEntitiesFetchCompleted:
shelfTypeByFetchRequestIdentifier
doesDeviceSupportHDR
setDoesDeviceSupportHDR:
setIsIpad:
_isNetworkTypeChangedToken
_networkReachabilityChangedToken
_lastNetworkReachableStatus
_presentedDownloadViewController
_ppt_isLoaded
_appliedNavigationItem
_hasMenuItemFetchCompleted
_areLocalMediaItemsAvailable
_hasMediaEntitiesFetchCompleted
_doesDeviceSupportHDR
_isIpad
_menuMediaItemEntityTypes
_menuCells
_menuItemSizingCell
_popoverViewController
_popoverDropdownCells
_sizingPopoverCell
_currentlySelectedPopoverCell
_homeShares
_currentHomeShareMediaLibrary
_shelvesViewModel
_shelfTypeByFetchRequestIdentifier
_vui_moviesQueryWithMediaLibrary:rentals:
tvShowsQuery
_vui_configureMediaQueryWithMediaLibrary:
timeIntervalSinceReferenceDate
homeVideosQuery
movieRentalsQuery
moviesQuery
scaleToSize
cropToFit
setCropToFit:
setParams:
_cropToFit
_image
_scalingResult
_params
_scaleToSize
identifierInternal
currentCalendar
components:fromDate:
year
kind
allKeys
dictionaryWithValuesForKeys:
hasLocalChanges
firstAccessPropertiesCache
null
addedDate
requestedProperties
_defaultValueForPropertyDescriptor:
cachesPropertiesOnFirstAccess
sortTitle
setPlayedState:
_didRequestPropertyWithKey:
setIdentifierInternal:
setFirstAccessPropertiesCache:
_localChanges
_cachesPropertiesOnFirstAccess
_identifierInternal
_firstAccessPropertiesCache
_kind
_requestedProperties
setContainerView:
setAlwaysBounceHorizontal:
_setContentInsetAdjustmentBehavior:
_updateCollectionViewLayout:
exceptionWithName:reason:userInfo:
_ensureScrollViewSnaps
contentOffset
_findSnappingItemFromContentOffset:withVelocity:
_snapTargetContentOffset:toItemIndexPath:atItemOffset:
setContentOffset:
minimumInteritemSpacing
minimumLineSpacing
numberOfSections
numberOfItemsInSection:
indexPathForItem:inSection:
layoutAttributesForItemAtIndexPath:
setInvalidateLayout:
invalidateLayoutWithContext:
focusedIndexPath
setFocusedIndexPath:
_shouldUpdateBeforeLayout
_gridStyle
setGridStyle:
setGridType:
setOverlayType:
initWithCardLayoutType:gridStyle:gridType:overlayType:
_layoutForCardLayoutType:interfaceIdiom:
featuredCardViewLayoutForIdiom:
upnextCardViewLayoutForIdiom:
standardCardViewLayoutForIdiom:
setImageLayout:
setBorderWidth:
setSecondaryTextLayout:
setTitleTextLayout:
setSubtitleTextLayout:
setShouldLayoutImageFirst:
setShadowBlurRadius:
_phoneLayout
_padLayout
_tvLayout
_cardLayoutType
_gridType
_overlayType
imageSize
setImageSize:
_shouldLayoutImageFirst
_highlightColor
_imageLayout
_secondaryTextLayout
_titleTextLayout
_subtitleTextLayout
_imageSize
_homeShareMediaLibraries
_handleAvailableMediaLibrariesDidChange:
mutableHomeShareMediaLibraries
_sharedMPMediaLibraries
_updateMediaLibrariesWithSharedMPMediaLibraries:
sharedMediaLibraries
_notifyDelegateHomeShareMediaLibrariesDidUpdate:withChangeSet:
setManager:
setMutableHomeShareMediaLibraries:
_mutableHomeShareMediaLibraries
_tapGesture:
removeAllGestureRecognizers
presentationTransitionWillBegin
_setContinuousCornerRadius:
_layoutPresentedView
statusBar
_synchronizeDrawing
statusBarWindow
dismissalTransitionWillBegin
initWithEffect:
modalSize
presentationStyle
_backdropView
_completedAnimationBlock
_modalSize
_updateView
_startDownloadIfPossible
_setAttributedTitle:
_setTitleTextColor:
initWithMediaItemEntityTypesChangeSet:localMediaItemsAvailableDidChange:
_localMediaItemsAvailableDidChange
_mediaItemEntityTypesChangeSet
databaseShow
setDatabaseShow:
_databaseShow
mediaEntitySubtype
groupingSortIndexes
_mediaEntitySubtype
_grouping
_groupingSortIndexes
initWithActivityIndicatorStyle:
startAnimating
loadingLabel
setLoadingLabel:
indicatorView
setIndicatorView:
_loadingLabel
_indicatorView
hasBorderView
setHasBorderView:
borderBackgroundColor
setBorderBackgroundColor:
borderColor
borderCompositingFilter
setBorderCompositingFilter:
borderWidth
borderCornerRadius
setBorderCornerRadius:
borderCornerRadiusMatchesHalfBoundingDimension
setBorderCornerRadiusMatchesHalfBoundingDimension:
hasTitleLabel
setHasTitleLabel:
textColor
universal
setUniversal:
confirmationTitleStyle
setConfirmationTitleStyle:
titleStyle
setTitleStyle:
borderedImage
setBorderedImage:
progressIndeterminate
setProgressIndeterminate:
cancelRecognizer
setCancelRecognizer:
restores
setRestores:
_hasBorderView
_borderCornerRadiusMatchesHalfBoundingDimension
_hasTitleLabel
_universal
_progressIndeterminate
_cancelRecognizer
_restores
_borderBackgroundColor
_borderColor
_borderCompositingFilter
_borderWidth
_borderCornerRadius
_attributedText
_textColor
_confirmationTitleStyle
_titleStyle
_borderedImage
_alpha
preferredFontForTextStyle:
_handleApplicationDidBecomeActiveNotification:
removeTarget:action:
isShowingConfirmation
_horizontalInsetForTitleStyle:
_sizeMattersForTitleStyle:
_titleSizeThatFitsForSize:titleStyle:mutableAttributedString:
traitCollectionWithPreferredContentSizeCategory:
preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:
pointSize
showsConfirmationState
buttonDescriptor
showingConfirmation
animationKeys
_sendWillAnimate
_reloadForCurrentState:
_sendDidAnimate
confirmationTitle
_defaultTitleAttributes
_updateForChangedConfirmationTitleProperty
_updateForChangedTitleProperty
setShowingConfirmation:
_buttonPropertiesForState:
_transitionFromProgress:toProgress:withDuration:completion:
_transitionFromTitleOrImage:toProgress:withDuration:completion:
_transitionFromProgress:toTitleOrImage:withDuration:completion:
_transitionFromTitle:toTitle:withDuration:completion:
cloudImageWithTintColor:arrowTintColor:
libraryContentFlags
canOpenItemForItemState:clientContext:
mediaCategory
supportsPlayButton
setShouldSuppressEnabled:
setShowsUniversal:
localizedTitleForItemState:clientContext:
playTintColorForBackgroundColor:
playImageWithTintColor:
shouldSuppressCloudRestore
setShowsConfirmationState:
setConfirmationTitle:
showCloudImage
setShowingConfirmation:animated:
isEqualToAttributedString:
buttonText
confirmationText
price
setTitle:confirmationTitle:itemState:clientContext:animated:
setButtonDescriptor:
buttonType
itemIdentifier
initWithLongLong:
setItemIdentifier:
initWithNumber:
setStoreIdentifier:
activeStateIsPreview
downloadContentFlags
isDisabledButSelectable
hasNonBorderedImage
_transitionFromImage:toImage:withDuration:completion:
hasBorderedImage
_transitionFromBorderedImage:toTitle:withDuration:completion:
_touchInBounds:
highlighted
dispatchEvent:eventAttribute:canBubble:isCancelable:extraInfo:completionBlock:
sendActionsForControlEvents:
shouldSuppressEnabled
isEnabled
systemMidGrayColor
_cachedImageForAttributedTitle:font:titleStyle:size:fillStyle:universal:tintColor:titleColor:
showsUniversal
_borderedImageViewFrame
_setBorderViewCornerRadiusWithProperties:
_bezierPathWithArcRoundedRect:cornerRadius:
setPath:
setMask:
sublayers
removeFromSuperlayer
setStrokeColor:
addSublayer:
_universalPlusImageWithTintColor:
_removeCancelGestureRecognizer
setCountLimit:
_imageForAttributedTitle:titleStyle:size:fillStyle:universal:tintColor:titleColor:
drawInRect:blendMode:alpha:
fillWithBlendMode:alpha:
setCachesLayout:
setWrapsForTruncationMode:
setWantsBaselineOffset:
baselineOffset
addAttributes:range:
numberOfLineFragments
animationWithKeyPath:
setFillMode:
setRemovedOnCompletion:
setSpeed:
alphaComponent
filterWithType:
_imageForProgressType:
setCompositingFilter:
_adjustViewOrderingForProperties:
_insertUniversalView
animateWithDuration:delay:options:animations:completion:
_basicAnimationWithKeyPath:
setToValue:
addAnimation:forKey:
_imageInsetsForProgressType:
_insertBorderView
_insertProgressIndicator
animateWithDuration:animations:completion:
_insertImageView
_insertLabel
insertSubview:aboveSubview:
insertSubview:atIndex:
initWithFocusedView:touchAllowance:
_cancelGestureAction:
addTarget:action:
_insertBorderedImageView
_insertCancelGestureRecognizer
itemOfferButtonDidAnimateTransition:
itemOfferButtonWillAnimateTransition:
hitRect
cloudTintColorForBackgroundColor:
playHighlightImageWithTintColor:
layoutSizeThatFits:
offerButtonStateDescription
removeButtonStateAnimations
setBorderColorAlphaMultiplier:
buyType
setDisabledButSelectable:
setValuesUsingItemOffer:itemState:clientContext:animated:
setValuesUsingBuyButtonDescriptor:itemState:clientContext:animated:
itemOfferDelegate
setItemOfferDelegate:
beginTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_removeAllAnimations:
pointInside:withEvent:
cloudTintColor
fillStyle
isUniversal
centerImageProvider
setCenterImageProvider:
hitRectInsets
setHitRectInsets:
borderColorAlphaMultiplier
setBuyType:
setElement:
_borderView
_cancelGestureRecognizer
_cloudImage
_cloudTintColor
_confirmationColor
_confirmationTitleAttributedString
_confirmationTitleFitSize
_fillStyle
_font
_borderedImageView
_progressIndicator
_showsConfirmationState
_titleAttributedString
_titleFitSize
_usesDrawRectPath
_universalImageView
_downloadRestores
_offerButtonStateDescription
_disabledButSelectable
_centerImageProvider
_borderColorAlphaMultiplier
_buttonDescriptor
_buyType
_element
_hitRectInsets
storeIdentifier
variantIdentifier
canPersonalizeUsingItemState:
setButtonText:
setButtonType:
setConfirmationText:
setElementType:
setVariantIdentifier:
canPerformLocalActionWithItemState:
setShouldSuppressCloudRestore:
_showingConfirmation
_showsUniversal
_shouldSuppressEnabled
_shouldSuppressCloudRestore
_buttonType
_buttonText
_confirmationText
_elementType
_storeIdentifier
_itemIdentifier
_variantIdentifier
localizedStringForKey:
localizedStringForKey:inBundles:
currentSeasonViewController
setLastViewedSeasonWasManuallyDeleted:
setCurrentSeasonViewController:
lastViewedSeasonWasManuallyDeleted
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForFooterInSection:
pickerTitle
setPickerTitle:
seasonPickerView
setSeasonPickerView:
collectionIdentifier
setCollectionIdentifier:
_lastViewedSeasonWasManuallyDeleted
_pickerTitle
_seasonPickerView
_collectionIdentifier
_currentSeasonViewController
continuousBorder
setContinuousBorder:
placeholderArtworkName
setPlaceholderArtworkName:
_continuousBorder
_placeholderArtworkName
_size
_fillColor
_height
_handleMediaLibraryDidChangeNotification:
seasonViewModels
productLockupViewBySeasonIdentifier
episodeShelfViewControllerBySeasonIdentifier
seasonBySeasonIdentifier
_usingEpisodesGroupFetch
_buildMediaCollectionViewModel
_updateDeletedContentErrorMessage
_episodesChangeSetMapWithEpisodeGroups:changeSet:
_seasonViewModelsWithSeasons:
_updateMediaCollectionViewModelWithSeasonViewModels:
episodesBySeasonIdentifer
_updateProductLockupViewWithSeasonIdentifier:
openURL:options:completionHandler:
canShowMultipleSeasons
_episodesBySeasonIdentifier
_productLockupViewWithSeason:
_episodeShelfViewControllerWithSeason:episodes:
setSeasonViewModels:
setSeasonBySeasonIdentifier:
setProductLockupViewBySeasonIdentifier:
setEpisodeShelfViewControllerBySeasonIdentifier:
setEpisodesBySeasonIdentifer:
initWithSeasonIdentifier:type:
_updateProductLockupView:withSeason:
addDownloadViewControllerToProductLockupView:forSeason:
mediaCollection
episodeGroups
setEpisodeGroups:
mediaCollectionViewModel
setMediaCollectionViewModel:
downloadViewControllerBySeasonIdentifier
setDownloadViewControllerBySeasonIdentifier:
setShowTitle:
setCanShowMultipleSeasons:
_canShowMultipleSeasons
_mediaCollection
_episodeGroups
_mediaCollectionViewModel
_downloadViewControllerBySeasonIdentifier
_showTitle
_seasonIdentifier
_seasonViewModels
_seasonBySeasonIdentifier
_episodeShelfViewControllerBySeasonIdentifier
_productLockupViewBySeasonIdentifier
_episodesBySeasonIdentifer
tapped
preferredContentSize
topViewController
_enqueueAsyncStrongSelfProcessingQueueBlock:
_onProcessingQueue_setState:
observerDispatchQueue
_notifyObservers:stateDidChange:
_enqueueObserverQueueBlock:
_observerDispatchQueue
popoverPressed:
listView
setListView:
_listView
_vui_darkModeKeyBlueColor
_vui_lightModeKeyBlueColor
currentFetchResponse
_changeSetFromMediaItemEntityTypes:toMediaItemEntityTypes:
_currentFetchResponse
vui_applyChangeSet:inSection:rowAnimation:updateDataSourceBlock:completionHandler:
_vui_applyDeleteChange:inSection:rowAnimation:
_vui_applyInsertChange:inSection:rowAnimation:
_vui_applyMoveChanges:inSection:rowAnimation:
_vui_applyUpdateChanges:inSection:rowAnimation:
deleteRowsAtIndexPaths:withRowAnimation:
insertRowsAtIndexPaths:withRowAnimation:
moveRowAtIndexPath:toIndexPath:
reloadRowsAtIndexPaths:withRowAnimation:
calculatedIdentifier
setCalculatedIdentifier:
setArtworkCatalog:
_calculatedIdentifier
_artworkCatalog
_onProcessingQueue_updateStateAndNotifyDelegate:
fullyDownloadedAssetBytes
setFullyDownloadedAssetBytes:
assetControllers
setAssetControllers:
_onProcessingQueue_setState:andNotifyDelegate:
_downloadingAssetControllersWithAssetControllers:
_allAssetsDownloaded
_stateFromDownloadingAssetControllers:fullyDownloadedAssetBytes:
predicateWithFormat:
_assetControllers
_fullyDownloadedAssetBytes
childView
_childView
VUIMPMediaEntitiesFetchOperation
VUIShelfView
VUILibraryEpisodeShelfViewController
UICollectionViewDataSource
NSObject
UICollectionViewDelegate
UIScrollViewDelegate
TVShelfViewLayoutDelegate
VUIEpisodeDetailViewControllerDelegate
VUIMediaEntityAssetControllerDelegate
VUILibraryEpisodeListCellDelegate
VUIDialogInteractionControllerDelegate
VUILibraryDownloadPopoverViewControllerDelegate
VUILocalContentProtocol
VUILibraryEpisodeShelfEpisodeViewModel
VUIContentRatingImageRecord
VUIContentRatingImageManager
VUIMediaEntitiesFetchController
VUIMediaLibraryManager
VUIHomeShareMediaLibraryManagerDelegate
VUIMediaLibraryApplicationController
VUIMediaEntityFetchResponseChangesOperation
VideosUI
VUISportsOverlayView
VUIScorecardViewDelegate
VUIOverlayViewProtocol
VUIMediaLibraryUtilities
VUIMPShowMediaCollection
VUIOverlayView
VUIMPMediaItemEntityTypesOperation
VUIMediaEntityGroup
NSCopying
VUIDialogInteractionController
VUIPreviewInteractionControllerDelegate
UIGestureRecognizerDelegate
UIViewControllerTransitioningDelegate
UIViewControllerAnimatedTransitioning
VUIContentRating
VUISeparatorView
VUIMPMediaEntityImageLoadParamsCreating
VUIPlistMediaEntityImageLoadParamsCreating
VUIMediaEntityImageLoadParamsFactory
VUIMediaEntityFetchRequest
VUIMPMediaItemAssetControllerManager
VUIPlistMediaLibraryIdentifier
VUIMediaLibraryIdentifier
VUILibraryProductInfoView
VUILibraryProductInfoSection
VUIMetricsController
VUISeasonPickerCollectionViewCell
VUILibraryEpisodeListCell
VUIDownloadButtonDelegate
VUILibraryPopoverViewController
VUIPlistMediaDatabaseItem
VUIPlistMediaEntitiesFetchOperation
VUIMediaLibraryFetchControllerQueueOperation
VUIMediaItemEntityTypesFetchController
VUILibraryStackView
VUIEpisodeDetailViewController
VUIEpisodeDetailViewDelegate
VUIMediaEntitiesFetchControllerDelegate
VUIListCollectionViewCell
VUIPlistMediaEntityImageLoadOperation
VUITextLayout
VUILibraryMediaEntityShelvesViewModel
VUIDownloadedButton
VUILibraryListPopoverView
VUIImageLoadContext
VUIImageLoader
TVImageLoader
VUIMediaEntityPropertyDescriptor
VUILibraryListPopoverViewCell
VUICardView
VUILibraryFetchControllerViewController
VUIMediaEntityAssetControllerState
VUILibraryListItemView
VUIPlistMediaDatabaseShow
VUIMPMediaEntityIdentifier
VUIMediaEntityIdentifierInternal
VUIMediaEntityIdentifier
VUIProductSectionInfoViewModel
VUIPlistMediaEntityIdentifier
VUIMediaLibraryFetchControllerQueue
VUINowPlayingObserverDelegate
VUIMPMediaLibraryIdentifier
VUIProductSectionView
VUIMediaEntityPreflightManager
VUIScorecardView
VUIMediaItem
VUIAirTrafficController
VUILibraryProductViewController
VUIMediaEntityDownloadViewControllerDelegate
VUIProductLockupViewDelegate
VUIRoundButtonDelegate
VUIOverlayLayout
VUIOverlayLayoutProtocol
VUIImageResourceMap
VUIMPSeasonMediaCollection
VUILibraryCollectionHeaderView
VUIPlistMediaDatabase
VUILabel
VUIMPMediaItemCloudDownloadController
MPStoreDownloadManagerObserver
VUIMediaLibraryContentsChange
VUIPlistMediaDatabaseEntity
VUIMPMediaLibraryConnectOperation
VUICardCollectionViewCell
VUIDownloadButton
VUIMediaCollection
Factory
VUIMediaEntitiesFetchControllerResult
VUIMPSeasonMediaCollectionIdentifier
VUIPlaybackUtilities
VUIMPDeviceMediaLibrary
VUIMediaEntitiesToGroupsValueTransformer
VUIMediaItemEntityTypesFetchResponse
VUILibraryLockupViewCell
VUIRentalExpirationLabelDelegate
VUIPlistSeasonMediaCollection
VUIMPMediaCollection
VUIMediaEntityKind
VUILibraryStackViewController
VUIMPMediaItemDownloadControllerState
VUIMPMediaEntityImageLoadOperation
VUIPreviewInteractionController
UIPreviewInteractionDelegate
VUIMediaLibraryFetchMediaEntitiesOperation
VUIRoundButton
VUILibraryAlertView
VUILibraryCollectionViewCell
VUIMediaEntitySortIndex
VUIProductMetadataLayout
VUIPlistMediaItem
VUIContentRatingSystemUtilities
VUIUtilities
VUIViewSpacer
VUIMediaEntityFetchResponseChanges
VUILibraryEpisodeFooterCell
VUIMPMediaLibrary
VUILibraryShelfCollectionViewController
VUIMPMediaItem
VUICollectionView
VUIProductMetadataView
VUIMediaItemCredits
VUILibraryEpisodeFrameView
VUIMediaLibraryOperation
VUIMediaEntityType
VUILibraryMenuItemViewCell
VUIMPMediaEntitiesSingleFetchOperation
VUIMediaLibrary
VUIMediaCategory
VUINowPlayingObserver
VUINowPlayingObservation
VUIMediaCollectionsToRecentlyAddedToMediaCollectionsValueTransformer
VUISportsOverlayBackgroundMaterialImagesOperation
VUISportsOverlayBackgroundMaterialImageRequest
VUIPlistMediaDatabaseSeason
VUIMediaEntitiesFetchControllerOperation
VUITextBadgeLayout
VUITextBadgeView
VUISportsOverlayLayout
VUIProductBadgeResource
VUIProductLockupView
VUIMPMediaItemAssetController
VUIMPMediaItemDownloadControllerObserver
VUIMediaEntityAssetController
VUIScoreboardRowLayout
VUIScoreboardLayout
VUIRentalExpirationLabel
VUICircleProgressIndicator
VUIPlistMediaEntityImageLoadParams
VUIImageLoadParams
_VUIDownloadSeeAllController
VUILibraryDownloadViewController
VUILibraryShelfCollectionViewControllerDelegate
VUIMediaItemEntityTypesFetchControllerResult
VUIImageView
VUIPlistMediaLibrary
VUIPlistMediaItemEntityTypesOperation
VUIMediaLibraryFetchController
VUIMediaEntityDownloadView
VUIMPHomeShareMediaLibrary
VUIHomeShareMediaLibrary
VUIEpisodeDetailView
VUILibraryEpisodeFrameViewDelegate
VUIMLFactory
TVInterfaceCreating
_TVInterfaceCreatingPrivate
VUILibraryGridCollectionViewController
VUILibraryViewFactory
VUIMLUtilities
VUILibraryProductLockupLayout
VUILibraryProductLockupViewLayout
_VUILibrarySeeAllController
VUILibraryViewController
VUIMediaItemEntityTypesFetchControllerDelegate
VUIMediaLibraryFetchControllerQueueDelegate
VUILibraryPopoverDataSource
VUILibraryPopoverDelegate
VUIImageLoadParamsOperation
VUIImageLoadingOperation
VUIMediaEntity
VUIShelfViewController
VUICardViewLayoutFactory
VUICardViewLayout
VUICardViewLayoutRecord
VUIMPHomeShareMediaLibraryManager
VUIHomeShareMediaLibraryManager
VUIDialogPresentationController
VUILibraryBannerCollectionViewCell
VUIDeviceMediaLibrary
VUIMediaEntityDownloadViewController
VUIMediaEntityDownloadViewDelegate
VUIMediaItemEntityTypesFetchResponseChanges
VUIPlistShowMediaCollection
VUIMediaEntityFetchResponse
VUILoadingView
VUIMediaEntitiesToRecentlyAddedMediaEntitiesValueTransformer
VUIOfferButtonProperties
VUIOfferButton
VUIBuyButtonDescriptor
VUISeasonPickerViewController
UICollectionViewDelegateFlowLayout
_VUISeasonPickerView
VUIImageLayout
VUIProgressBarLayout
VUIMPMediaItemAirTrafficDownloadController
VUILibraryMediaCollectionViewController
VUILibraryEpisodeFooterCellDelegate
VUILibraryEpisodeShelfViewControllerDelegate
VUILibrarySeasonViewModel
VUILibraryMediaCollectionViewModel
VUIPresentationContainerViewController
VUIMPMediaItemDownloadController
VUILibraryDownloadPopoverViewController
VUIMediaItemEntityTypesFetchControllerOperation
VUIMPMediaEntityImageLoadParams
VUIMPMediaItemCollectionAssetController
VUICollectionViewCell
@16@0:8
@32@0:8@16@24
v16@0:8
v24@0:8@16
@"NSArray"
@"NSError"
@"NSOperationQueue"
@"VUIMPMediaLibrary"
{CGSize=dd}32@0:8{CGSize=dd}16
@"UIView"
@"UICollectionView"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
q24@0:8@16
@40@0:8@16@24@32
B32@0:8@16@24
v40@0:8@16@24@32
@24@0:8@16
@40@0:8@16@24q32
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16@24@32@40
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
B40@0:8@16@24@32
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
{CGSize=dd}40@0:8@16@24@32
{CGSize=dd}40@0:8@16@24q32
{UIEdgeInsets=dddd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
v24@0:8@"VUIEpisodeDetailViewController"16
v32@0:8@"NSObject<VUIMediaEntityAssetController>"16@"VUIMediaEntityAssetControllerState"24
v24@0:8@"VUILibraryEpisodeListCell"16
B32@0:8@"VUIDialogInteractionController"16@"NSIndexPath"24
v32@0:8@"VUIDialogInteractionController"16@"NSIndexPath"24
v20@0:8B16
v40@0:8{CGSize=dd}16@32
@"VUILibraryEpisodeListCell"
@"VUIDialogInteractionController"
@"<VUILibraryEpisodeShelfViewControllerDelegate>"
@"VUIEpisodeDetailViewController"
@"NSIndexPath"
@"VUIMediaItem"
@"NSObject<VUIMediaEntityAssetController>"
@28@0:8@16B24
@"NSString"
@32@0:8@16q24
v52@0:8@16q24@32@40B48
@"NSDictionary"
@24@0:8q16
B28@0:8@16B24
v24@0:8@?16
@"<VUIMediaEntitiesFetchControllerDelegate>"
@"VUIMediaEntityFetchResponse"
v40@0:8@"NSObject<VUIHomeShareMediaLibraryManager>"16@"NSArray"24@"VUICollectionChangeSet"32
@"VUIMediaLibrary"
@"NSObject<OS_dispatch_queue>"
@"VUIDeviceMediaLibrary"
@"NSObject<VUIHomeShareMediaLibraryManager>"
v32@0:8Q16@24
Q24@0:8@16
v32@0:8@16@?24
@"<VUIMediaLibraryApplicationControllerDelegate>"
v36@0:8@16B24@?28
B56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@40@0:8@16q24q32
d24@0:8@16
i32@0:8q16q24
q24@0:8@"VUIScorecardView"16
q32@0:8@"VUIScorecardView"16q24
@"TVViewElement"40@0:8@"VUIScorecardView"16q24q32
d24@0:8@"VUIScorecardView"16
@"UIImage"24@0:8@"VUIScorecardView"16
v32@0:8{CGSize=dd}16
@"UIImage"16@0:8
v24@0:8@"UIImage"16
@"<VUIOverlayLayoutProtocol>"16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v36@0:8{CGSize=dd}16B32
v24@0:8d16
v32@0:8@16d24
@"UIImage"
@"VUISportsOverlayLayout"
@"TVViewElement"
@"VUIScorecardView"
@"VUITextBadgeView"
@"_TVImageView"
@"TVImageElement"
@52@0:8@16@24@?32B40@44
@?16@0:8
@32@0:8@16@?24
@56@0:8@16@24@32@40@48
@"NSNumber"
@"VUIOverlayLayout"
@"_TVProgressView"
@"VUIMediaItemEntityTypesFetchResponse"
@"MPMediaLibrary"
@24@0:8^{_NSZone=}16
@"NSObject<NSCopying>"
B32@0:8@"VUIPreviewInteractionController"16@"NSIndexPath"24
v32@0:8@"VUIPreviewInteractionController"16@"NSIndexPath"24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@"UILongPressGestureRecognizer"
@"VUIPresentationContainerViewController"
@"VUIDialogPresentationController"
@"<VUIDialogInteractionControllerDelegate>"
@"UIViewController"
@"VUIPreviewInteractionController"
@48@0:8@16@24Q32@40
@28@0:8q16B24
@48@0:8q16@24Q32@40
q16@0:8
v24@0:8q16
v24@0:8Q16
{CGSize=dd}16@0:8
d16@0:8
@"UIColor"
@24@0:8Q16
@"VUIMPMediaEntityImageLoadParams"24@0:8Q16
@"VUIPlistMediaEntityImageLoadParams"24@0:8Q16
@32@0:8@16Q24
v32@0:8{_NSRange=QQ}16
@32@0:8@16^@24
{_NSRange=QQ}16@0:8
@"VUIMediaEntityType"
@"NSPredicate"
@"NSSet"
{_NSRange="location"Q"length"Q}
@"NSURL"
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"VUILabel"
@"VUISeparatorView"
v24@0:8@"VUIDownloadButton"16
v32@0:8q16d24
@"<VUILibraryEpisodeListCellDelegate>"
@"VUILibraryEpisodeFrameView"
@"UIStackView"
@"VUIDownloadButton"
d40@0:8@16@24q32
@"VUILibraryListPopoverView"
@"<VUILibraryPopoverDataSource>"
@"<VUILibraryPopoverDelegate>"
@"VUIPlistMediaDatabaseSeason"
@"NSDate"
@"VUIContentRating"
@"VUIMediaItemCredits"
@"VUIPlistMediaLibrary"
@"<VUIMediaItemEntityTypesFetchControllerDelegate>"
v40@0:8@"VUIMediaEntitiesFetchController"16@"NSArray"24@"VUIMediaEntitiesFetchControllerResult"32
v40@0:8@"VUIMediaEntitiesFetchController"16@"NSArray"24@"NSError"32
B24@0:8@"VUIMediaEntitiesFetchController"16
@"<VUIEpisodeDetailViewControllerDelegate>"
@"VUIEpisodeDetailView"
@"UITapGestureRecognizer"
@"VUIMetricsController"
@44@0:8@16{CGSize=dd}24B40
@20@0:8B16
q24@0:8Q16
Q24@0:8q16
I16@0:8
v20@0:8I16
i16@0:8
v20@0:8i16
@"NSShadow"
@40@0:8@16@?24@?32
v48@0:8@16Q24@32@40
@"VUITextLayout"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"UILabel"
@"NSOperation<VUIImageLoadingOperation>"
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@68@0:8@16{CGSize=dd}24B40q44@52@?60
@"NSString"24@0:8@16
@"NSURL"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@68@0:8@16{CGSize=dd}24B40q44@"<IKNetworkRequestLoader>"52@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">60
@"NSMutableDictionary"
d32@0:8d16@24
d40@0:8@16d24@32
@44@0:8q16q24d32I40
@52@0:8q16@24q32d40I48
@"VUICardViewLayoutFactory"
@"UIView<VUIOverlayViewProtocol>"
{CGSize=dd}36@0:8{CGSize=dd}16B32
@"UIImageView"
@"VUIMediaEntityType"16@0:8
@48@0:8@16Q24@32@40
@"VUIProductMetadataLayout"
v32@0:8@"VUINowPlayingObserver"16@"VUINowPlayingObservation"24
v48@0:8@16@24@32^v40
v28@0:8@?16B24
@"<VUIMediaLibraryFetchControllerQueueDelegate>"
@"NSMutableArray"
@"VUIMediaLibraryFetchControllerQueueOperation"
@"VUIDelayOperation"
@"VUINowPlayingObserver"
v44@0:8@16B24@28@?36
v40@0:8@16@24@?32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<VUIScorecardViewDelegate>"
@"VUIScoreboardLayout"
{CGSize="width"d"height"d}
@"NSMutableSet"
v32@0:8@"VUIMediaEntityDownloadViewController"16@"NSObject<VUIMediaEntityAssetController>"24
v24@0:8@"VUIRoundButton"16
@48@0:8@16@24@32Q40
@"VUIMediaEntitiesFetchController"
@"VUIProductLockupView"
@"VUILibraryProductInfoView"
@"VUIMediaEntityDownloadViewController"
@"VUIImageLayout"
@"VUIProgressBarLayout"
v56@0:8@16@24@32@40q48
@"UIButton"
B32@0:8@16o^@24
@"NSObject<OS_dispatch_source>"
Q32@0:8@16@24
d32@0:8@16d24
d24@0:8d16
v24@0:8B16B20
@32@0:8Q16q24
@28@0:8B16q20
@40@0:8@16Q24@32
v40@0:8@"MPStoreDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPStoreDownloadManager"16@"MPStoreDownload"24
v32@0:8@"MPStoreDownloadManager"16@"NSArray"24
v24@0:8@"MPStoreDownloadManager"16
@"MPStoreDownload"
v20@0:8f16
@"VUICardView"
q24@0:8q16
@"<VUIDownloadButtonDelegate>"
@"VUIOfferButton"
@32@0:8q16@24
d32@0:8d16d24
q44@0:8d16d24B32Q36
q48@0:8d16d24B32Q36B44
d32@0:8q16q24
d40@0:8q16q24Q32
@24@0:8@?16
B36@0:8@16@24B32
@"NSOrderedSet"
v44@0:8@16@24d32B40
v24@0:8@"VUIRentalExpirationLabel"16
@"VUIRentalExpirationLabel"
@48@0:8@16@24@32@40
@"MPMediaItemCollection"
@"VUILibraryStackView"
@40@0:8@16{CGSize=dd}24
v36@0:8@16d24B32
v36@0:8@"UIPreviewInteraction"16d24B32
v24@0:8@"UIPreviewInteraction"16
B24@0:8@"UIPreviewInteraction"16
@"UIPreviewInteraction"
@"UIViewPropertyAnimator"
@"UICollectionViewCell"
@"<VUIPreviewInteractionControllerDelegate>"
@"<VUIRoundButtonDelegate>"
@"UIScrollView"
@40@0:8@16Q24Q32
@"VUIPlistMediaDatabaseItem"
B24@0:8q16
{CGSize=dd}40@0:8d16{CGSize=dd}24
@"VUICollectionChangeSet"
@"<VUILibraryEpisodeFooterCellDelegate>"
v32@0:8@?16@?24
{CGSize=dd}24@0:8@16
@"VUILibraryLockupViewCell"
@"<VUILibraryShelfCollectionViewControllerDelegate>"
@"MPMediaItem"
{?="layoutBelowDisabled"b1}
v56@0:8@16@24q32{CGSize=dd}40
@"<VUILibraryEpisodeFrameViewDelegate>"
@"_TVButton"
v40@0:8@16Q24@?32
v48@0:8@16Q24@?32@?40
v56@0:8@16Q24@?32@?40@?48
v40@0:8@16@?24@?32
@"VUIAsynchronousWorkToken"
@28@0:8Q16B24
@32@0:8Q16Q24
@"VUIImageView"
@40@0:8@16{_NSRange=QQ}24
@"VUIMediaEntityFetchRequest"
@"VUIMediaEntityKind"
@"MPMediaPredicate"
v32@0:8@16Q24
@"VUIMediaLibraryManager"
@"NSObject<VUIMediaLibraryIdentifier>"
v28@0:8@16I24
@"VUINowPlayingObservation"
@"<VUINowPlayingObserverDelegate>"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"VUIPlistMediaDatabaseShow"
@40@0:8@16q24@32
@"VUIMediaEntitiesFetchControllerResult"
@"NSOperation"
@"VUITextBadgeLayout"
@"NSAttributedString"
@32@0:8q16q24
{CGSize=dd}24@0:8d16
@"<VUILibraryProductLockupViewLayout>"
@"TVImageProxy"
@"VUIRoundButton"
@"<VUIProductLockupViewDelegate>"
@"TVFocusableTextView"
v32@0:8@"VUIMPMediaItemDownloadController"16@"VUIMPMediaItemDownloadControllerState"24
v24@0:8@?<v@?B@"NSError">16
@"NSObject<VUIMediaEntityIdentifier>"16@0:8
@"<VUIMediaEntityAssetControllerDelegate>"16@0:8
v24@0:8@"<VUIMediaEntityAssetControllerDelegate>"16
@"VUIMediaEntityAssetControllerState"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
v28@0:8Q16B24
v60@0:8Q16d24Q32Q40B48B52B56
@"<VUIMediaEntityAssetControllerDelegate>"
@"VUIMediaEntityAssetControllerState"
@"NSObject<VUIMediaEntityIdentifier>"
@"VUIMPMediaItemDownloadController"
@24@0:8d16
{TVCornerRadii=dddd}16@0:8
v48@0:8{TVCornerRadii=dddd}16
@"VUIScoreboardRowLayout"
{TVCornerRadii="topLeft"d"topRight"d"bottomLeft"d"bottomRight"d}
@48@0:8@16^B24^q32@40
@"<VUIRentalExpirationLabelDelegate>"
@"NSTimer"
v28@0:8d16B24
@"CADisplayLink"
@40@0:8@16@24Q32
@"VUILibraryGridCollectionViewController"
v48@0:8@"VUILibraryShelfCollectionViewController"16@"UICollectionView"24@"VUIMediaEntity"32@"NSIndexPath"40
v24@0:8@"VUILibraryShelfCollectionViewController"16
@"VUILibraryBannerCollectionViewCell"
@"UIBarButtonItem"
@"VUILibraryMediaEntityShelvesViewModel"
@"_VUIDownloadSeeAllController"
@"VUIMediaItemEntityTypesFetchResponseChanges"
@"VUIPlistMediaDatabase"
v40@0:8Q16@?24@32
B44@0:8@16@24@32B40
B24@0:8Q16
v32@0:8Q16@?24
v32@0:8q16@?24
v36@0:8q16d24B32
@"<VUIMediaEntityDownloadViewDelegate>"
@"VUIDownloadedButton"
@"VUIAsynchronousWorkToken"24@0:8@?<v@?B@"NSError">16
v48@0:8@16@24{CGSize=dd}32
v24@0:8@"VUILibraryEpisodeFrameView"16
@"<VUIEpisodeDetailViewDelegate>"
@"UIFont"
#24@0:8@16
@"UIView"32@0:8@"TVViewElement"16@"UIView"24
@"UIViewController"32@0:8@"TVViewElement"16@"UIViewController"24
@"NSURL"24@0:8@"NSString"16
@"UIImage"24@0:8@"NSString"16
#24@0:8@"TVViewElement"16
v24@0:8@"TVViewElement"16
@"TVImageProxy"24@0:8@"TVViewElement"16
@"UINavigationController"24@0:8@"NSString"16
@36@0:8@16@24B32
@"VUILibraryCollectionHeaderView"
{CGPoint=dd}80@0:8@16{CGSize=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40@72
{CGPoint=dd}72@0:8@16{CGSize=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40
@"UIFont"16@0:8
v32@0:8@"VUIMediaItemEntityTypesFetchController"16@"VUIMediaItemEntityTypesFetchControllerResult"24
v32@0:8@"VUIMediaItemEntityTypesFetchController"16@"NSError"24
v24@0:8@"VUIMediaLibraryFetchControllerQueue"16
@"VUILibraryListPopoverViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
{CGSize=dd}32@0:8@16@24
{CGSize=dd}32@0:8@"UICollectionView"16@"NSIndexPath"24
@24@0:8^@16
v28@0:8q16B24
v32@0:8@16q24
@"VUILibraryDownloadViewController"
@"VUILibraryMenuItemViewCell"
@"VUILibraryPopoverViewController"
@"VUILibraryListPopoverViewCell"
@"_VUILibrarySeeAllController"
@"TVImage"16@0:8
@"NSError"16@0:8
@"TVImage"
@"<VUIImageLoadParams>"
@32@0:8@?16@24
@"NSObject<VUIMediaEntityIdentifierInternal>"
@40@0:8N^{CGPoint=dd}16{CGPoint=dd}24
v48@0:8N^{CGPoint=dd}16@24{CGPoint=dd}32
@"VUIShelfView"
@48@0:8q16q24q32q40
@"VUICardViewLayout"
@"<VUIOverlayLayoutProtocol>"
@24@0:8@"VUIMediaLibraryManager"16
@"<VUIHomeShareMediaLibraryManagerDelegate>"16@0:8
v24@0:8@"<VUIHomeShareMediaLibraryManagerDelegate>"16
@"NSArray"16@0:8
@"<VUIHomeShareMediaLibraryManagerDelegate>"
@"UIVisualEffectView"
v24@0:8@"VUIMediaEntityDownloadView"16
@"<VUIMediaEntityDownloadViewControllerDelegate>"
@"VUIMediaEntityDownloadView"
@"UIActivityIndicatorView"
@"CAFilter"
@84@0:8@16@24q32{CGSize=dd}40q56B64@68@76
@76@0:8@16q24{CGSize=dd}32q48B56@60@68
{UIEdgeInsets=dddd}24@0:8q16
B52@0:8@16@24@32@40B48
{CGSize=dd}48@0:8{CGSize=dd}16q32@40
d24@0:8q16
v48@0:8@16@24d32@?40
B40@0:8{CGPoint=dd}16@32
@"SKUIFocusedTouchGestureRecognizer"
@"NSMutableAttributedString"
@"<VUIOfferButtonDelegate>"
@"VUICircleProgressIndicator"
@"VUIBuyButtonDescriptor"
@"SKUIButtonViewElement"
@"SKUIStoreIdentifier"
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
@"VUISeasonPickerCollectionViewCell"
@"_VUISeasonPickerView"
@"VUILibraryFetchControllerViewController"
v24@0:8@"NSNumber"16
v32@0:8@"VUILibraryEpisodeShelfViewController"16@"NSObject<VUIMediaEntityAssetController>"24
@"VUIMediaCollection"
@"VUILibraryMediaCollectionViewModel"
@"VUIMPMediaItemDownloadControllerState"
@"<VUILibraryDownloadPopoverViewControllerDelegate>"
@"VUILibraryListItemView"
@"VUIMediaItemEntityTypesFetchControllerResult"
v56@0:8@16Q24q32@?40@?48
v40@0:8@16Q24q32
@"MPArtworkCatalog"
333333
ffffff
0@q=
?333333
@333333
K@}}}}}}
333333
a@UUUUUU
?uuuuuu
?333333
?wwwwww
?888888
?@(#)PROGRAM:VideosUI  PROJECT:VideosUI-26.47
Manual media entity fetch failed with error (%@) for requests: %@
Contents change media entity fetch failed with error (%@) for requests: %@
No delegate has been registered! -settingsURL will return nil
No delegate has been registered! -isCellularDataForPlaybackEnabled will return NO
No MPMediaItem found! Unable to check if need to warn about playback settings
No delegate has been registered! -shouldWarnAboutPlaybackSettingsForMediaIten: will return NO
No delegate has been registered! -clearCellularPlaybackQualityOverrides will be a NO-OP
No MPMediaItem found! Unable to override cellular playback quality
No MPMediaItem found! Unable to start playback
No delegate has been registered! -startFullScreenPlaybackWithMediaItem will return nil
No delegate has been registered! -rentalAssetTypeForMediaItem: will return VUIMediaEntityAssetTypeUndefined
No delegate has been registered! -removeRentalMediaItem:withCompletion will be a no-op
Entering %s
%s: failed to get config, error %@
%s: failed to create metrics controller
%s: insert Event  %@
%s: insertError %@
%s: flushError %@
%s: invalid media type
[%p] - Begining VUIMediaLibraryFetchControllerQueueOperation for controllers: %@
[%p] - Starting fetch controller %@
[%p] - Finished fetch controller %@
[%p] - All fetches finished. Finishing VUIMediaLibraryFetchControllerQueueOperation operation
Initial media category types fetch failed with error (%@)
Contents change media category types fetch failed with error (%@)
Fetch response entity failed to cast to VUIMediaItem: %@ for requested identifier: %@
Fetch controller failed for media item identifier %@ with error %@
Adding fetch controllers to queue: %@
Passed fetch controllers to remove from queue: %@
Actually removing fetch controllers from queue: %@
VUIMediaLibraryFetchControllerQueue for %@ has detected playback has begun. Observation = %@
VUIMediaLibraryFetchControllerQueue for %@ has detected playback has ended. Will begin a refetch. Observation = %@
[%@] - Received contents change: %@
Fetch controller (%@) has resumed. Will enqueue a new fetch operation to pick up any changes.
[%@] - Delay contents change operation is active. Waiting for delay to expire
[%@] - Creating delay contents change operation
[%@] - Delay contents change operation has completed. Starting fetching of controllers for revision: %lu
[%@] - Fetching is paused so the fetch has been deferred. It will start when fetching is resumed
Error deserializing database file! Database URL: %@, Error: %@
Error loading database URL: %@
Starting connection to %@
Connect attempt finished to %@ (Success = %@)
Connection progress to %@ (Progress = %@)
Applying Delete Change: Deleting Sections At: %@
Applying Delete Change To Section: %lu. Delete Items At: %@
Applying Insert Change: Inserting Sections At: %@
Applying Insert Change To Section: %lu. Insert Items At: %@
Applying Move Change To Section %lu to %lu
Applying Move Change To Item %@ to %@
Applying Update Change: Updating Sections At: %@
Applying Update Change To Section: %@. Reloading Items At: %@
Sorting will be performed by MPMediaLibrary using %@ (%@)
Filtering is not supported for keypath %@. Predicate cannot be satisfied by the MPMediaLibrary directly
Sorting media entities returned from MPMediaQuery
Processing range on media entities returned from MPMediaQuery
Media entity fetch failed with error (%@) for requests: %@
Updated state for MediaItemAssetController = %@
[%@] - Received pause request while fetching. Will cancel fetch and move to paused state
[%@] - Received pause request while in the ready state. Will move to paused state
[%@] - Received pause request while already in the puased state. Incremented paused count [%lu]
[%@] - Returning fetch controller to the ready state
[%@] - Decremented pause count for fetch controller. Decremented Count [%lu]
[%@] - Received resume request when we are in the paused state but we have a zero pause count! Ignoring
[%@] - Ignoring resume request for fetch controller as it is fetching
[%@] - Ignoring resume request for fetch controller as it is in the ready state
[%@] - Calling completion handler
[%@] - Ignoring begin fetch request as the controller is paused
[%@] - Received begin fetch request for a controller that is already fetching. Will ignore
[%@] - Received begin fetch request for a controller that is in the ready state. Will start new fetch if required
[%@] - Cancelling fetch
[%@] - Starting fetch
[%@] - New fetch not required as the library contents have not changed
[%@] - Fetch completed. Will process results and move to ready state
[%@] - Fetch completed but was cancelled. Will not process results but will remain in current state (%@) and call completion handler
Fetch controller failed for requests %@ with error %@
VUILibraryViewController _doesDeviceSupportHDR = %@
Apply ChangeSet To The Categories Section: Current Menu Items: %@, Latest Menu Items: %@, Changes: %@
-fetchDidCompleteForMediaLibraryFetchControllerQueue: Unable to find ourselves on the view controller nav stack! Bailing.
VUILibraryViewController: Looking for view controllers that should be removed
VUILibraryViewController: Testing View Controller (%p, %@)
VUILibraryViewController: Fetch view controller has no content! It will be removed from the nav stack. (%p, %@)
VUILibraryViewController: Setting view controller stack to: %@
VUILibraryViewController: Leaving view controller stack alone
PerceivedLaunch
Apply ChangeSet To The Home Shares Section: Current Home Shares: %@, Latest Home Shares: %@, ChangeSet: %@
VUIMPHomeShareMediaLibraryManager: Shared MP media libraries did change: %@. latestHomeShareMediaLibraries: %@, Current Libraries: %@
VUIMPHomeShareMediaLibraryManager: Updated home share media libraries : %@ using change set: %@
Fetch controller failed for seasons for identifier %@ with error %@
Expected exacly two responses!
Media item entity types fetch failed with error (%@)
Applying Delete Change. Deleting Rows At: %@
Applying Insert Change. Inserting Rows At: %@
Applying Move Change To Row %@ to %@
Applying Update Change To Section: %@. Reloading Rows At: %@
Updated state for MediaItemCollectionAssetController = %@
