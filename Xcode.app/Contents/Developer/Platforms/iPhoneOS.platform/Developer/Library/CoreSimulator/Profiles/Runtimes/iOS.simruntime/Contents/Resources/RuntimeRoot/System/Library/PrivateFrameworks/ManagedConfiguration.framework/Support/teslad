service starting...
com.apple.managedconfiguration.teslad
awaiting connections...
service stopping.
isRequired
keyInfo
Validation error in the following part of cloud config dictionary: 
Validation information: %@
T@"NSArray",&,N,V_keyInfo
v8@?0
com.apple.managedconfiguration.teslad-access
rejecting connection because it is not entitled to use this service!
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Accepted new connection.
idling
idleTimer
T@"NSTimer",&,N,V_idleTimer
machTimeScaleFactor
Td,V_machTimeScaleFactor
Cloud configuration group dependencies are valid.
Cloud configuration is NOT valid.
Dealloc MCTeslaServicerServer
Invalidating and canceling the session
CLOUD_CONFIG_INTERNAL_ERROR
CLOUD_CONFIG_BAD_FORMAT_ERROR
CLOUD_CONFIG_MAX_RETRIES_EXCEEDED
CLOUD_CONFIG_INVALID_DEVICE_ERROR
CLOUD_CONFIG_SERVER_DOWN_ERROR
CLOUD_CONFIG_SERVER_BUSY_ERROR
CLOUD_CONFIG_DAEMON_BUSY_ERROR
CLOUD_CONFIG_SERVER_TRUST_ERROR
CLOUD_CONFIG_INVALID_SIGNATURE
CLOUD_CONFIG_PROFILE_NOT_ACTIVE
CLOUD_CONFIG_DEVICE_NOT_IN_DEP
CLOUD_CONFIG_NONCE_EXPIRED
Provisional Enrollment Request
Fetch Profile Configuration Request
Unenroll Request
No enrollment type information. There needs to be a %@ section in the response.
Enrollment type: %@
Enrollment expiry date is received: %@
No expiry date received
Retrieve client certificate for %@
teslad is busy and no completion block is passed. Exiting...
Starting HTTP request to URL: %@ Headers: %@
Failed to retrieve the client certificate: %@.
Certificate and the reference key retrieved
Certificate or the reference key NOT retrieved!! 
v32@?0@8@"NSArray"16@"NSError"24
Nonce token missing
Error establishing provisional enrollment: %@
Starting the URL request for provisional enrollment
Nil request. Shouldn't end up here.
No request payload. Shouldn't end up here.
Sending failure response back to client
Configuration: %@
Unable to decode Tesla response!
Validating cloud configuration
Cloud configuration is invalid.
Sending configuration data back to client
Provisional Enrollment Response: %@
Unable to decode Tesla provisional enrollment response!
Validating provisional enrollment response
Provisional Enrollment response is does not have the required fields
Sending provisional enrollment data back to client
Retry-After
Response Headers: %@
PE DEBUG: Canceling datatask ******: %@
Received response %d for request to %@
Got %d response
Response 400
Response 401
Response 503
Response 500
Response %lu
Retrying the request
text/plain
Error response for request: %@
Connection failed, error: %@, responseCode: %lu
remoteProcessConnection
T@"NSXPCConnection",&,N,V_remoteProcessConnection
completionBlock
T@?,C,N,V_completionBlock
userAgentString
T@"NSString",R,N,V_userAgentString
requestType
Tq,N,V_requestType
certificateRetrievalRequestCount
Tq,N,V_certificateRetrievalRequestCount
provisionalEnrollmentRequestCount
Tq,N,V_provisionalEnrollmentRequestCount
profileConfigurationRequestCount
Tq,N,V_profileConfigurationRequestCount
unenrollRequestCount
Tq,N,V_unenrollRequestCount
timeoutTimer
T@"NSTimer",&,N,V_timeoutTimer
isDaemonBusy
TB,N,V_isDaemonBusy
certificateRetrievalFailed
TB,N,V_certificateRetrievalFailed
provisionalEnrollmentFailedWithBusyServerError
TB,N,V_provisionalEnrollmentFailedWithBusyServerError
profileConfigurationRetrievalFailedWithBusyServerError
TB,N,V_profileConfigurationRetrievalFailedWithBusyServerError
unenrollFailedWithBusyServerError
TB,N,V_unenrollFailedWithBusyServerError
responseContentType
T@"NSString",&,N,V_responseContentType
urlSession
T@"NSURLSession",&,N,V_urlSession
retryAfterInterval
Td,N,V_retryAfterInterval
fatalError
T@"NSError",&,N,V_fatalError
error
T@"NSError",&,N,V_error
nonce
T@"NSString",&,N,V_nonce
provisionalEnrollmentResponse
T@"NSMutableData",&,N,V_provisionalEnrollmentResponse
profileConfigurationResponse
T@"NSMutableData",&,N,V_profileConfigurationResponse
unenrollResponse
T@"NSMutableData",&,N,V_unenrollResponse
https://deviceenrollment.apple.com/v2/enroll
https://iprofiles.apple.com/v2/profile
https://iprofiles.apple.com/v2/unenroll
name
department
address
address-line-1
address-line-2
address-line-3
city
region
zip-code
country
phone
magic
email
support-phone-number
config
is-supervised
allow-pairing
is-mandatory
is-mdm-removable
await-device-configured
anchor-certs
supervision-host-certs
skip-buddy-items
is-multi-user
auto-advance-setup
language
script
enrollment
expiry
enrollment_type
ce_expiry_ts
NONCE_EXPIRED
PROFILE_NOT_FOUND
PROFILE_NOT_ACTIVE
DEVICE_NOT_FOUND
DEVICE_NOT_ENROLLED
INVALID_SIGNATURE
X-Profile-Protocol-Version
User-Agent
Content-Type
Content-Length
 (%@)
ConfigClient/1.0%@
; %@
payload
payload_signature
sign_cert
intermediate_cert
Retrieve Client Certificate.
Signing the payload with the private key...
Failed to create signature: %s
No private key, can't sign the payload
Error while signing the request payload
No serial request data
Unknown error while serializing the request dictionary
Setting up the request.
POST
Couldn't build up the URL from string: %@
No certificate, can't do the request
RequestProvisionalEnrollment
RequestProfileConfiguration
RequestUnenrollProvisionalDevice
action
device
serial_number
udid
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ManagedConfigurationTools_Sim/ManagedConfiguration-1575/teslad/MCTeslaRequestPayload.m
<Unknown File>
Payload action needs to be overriden by the subclasses.
dictionary
T@"NSDictionary",R,N
T@"NSString",R,N
T@"NSString",&,N,V_name
TB,N,V_isRequired
validationInfo
T@"NSDictionary",&,N,V_validationInfo
MCTeslaProvisionalEnrollmentURL
MCTeslaProfileConfigurationURL
MCTeslaUnenrollURL
MCTeslaUseAnyHTTPSCert
/var/root/absinthe_stub.plist
Unable to read Absinthe stub configuration file
WARNING: ABSINTHE STUB IN USE; NOT FOR PRODUCTION USE!
expectedCertificate
expectedSessionInfo
[%@]
deviceID
sessionInfoRequest
stubInfo
T@"NSDictionary",&,N,V_stubInfo
readyToSign
TB,N,V_readyToSign
sessionRequest
T@"NSData",R,N
certificate
T@"NSData",&,N,V_certificate
session
T@"NSData",&,N,V_session
Create signature
Failed to copy public key.
Verify signature
Failed to verify signature: %s
Signature verified
validationType
destinationKey
***********
Cloud Config Key Name: %@
Required: %@
Validation Type: %@
Destination Key: %@
***********
https
TQ,N,V_validationType
T@"NSString",&,N,V_destinationKey
alloc
initWithMachServiceName:
sharedGatekeeper
setDelegate:
resume
invalidate
action
initWithName:validationInfo:
_mutableKeyInfoArrayFromValidationInfo:
objectForKeyedSubscript:
countByEnumeratingWithState:objects:count:
addObject:
name
keyInfo
validateSelfWithDictionary:resultsDictionary:
description
validateSelfUsingValidationInfoWithDictionary:resultsDictionary:
.cxx_destruct
setKeyInfo:
_keyInfo
init
resetIdleTimer
valueForEntitlement:
class
isKindOfClass:
boolValue
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
provisionallyEnrollWithNonce:completionBlock:
fetchConfigurationWithCompletionBlock:
unenrollWithCompletionBlock:
interfaceWithProtocol:
setExportedInterface:
initWithXPCConnection:
setExportedObject:
idleTimer
dateWithTimeIntervalSinceNow:
idleTimerDidFire:
initWithFireDate:interval:target:selector:userInfo:repeats:
setIdleTimer:
mainRunLoop
addTimer:forMode:
listener:shouldAcceptNewConnection:
machTimeScaleFactor
setMachTimeScaleFactor:
_idleTimer
_machTimeScaleFactor
numberWithBool:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
validateGroupDependenciesInCloudConfiguration:
cloudConfigurationValidationDictionary
validateCloudConfiguration:withResultDictionary:
setRemoteProcessConnection:
timeoutTimer
setTimeoutTimer:
urlSession
invalidateAndCancel
setUrlSession:
dealloc
MCErrorWithDomain:code:descriptionArray:errorType:
dictionary
doubleValue
date
dateWithTimeIntervalSince1970:
compare:
setObject:forKeyedSubscript:
isDaemonBusy
setIsDaemonBusy:
setRequestType:
setCertificateRetrievalFailed:
setProvisionalEnrollmentFailedWithBusyServerError:
setProfileConfigurationRetrievalFailedWithBusyServerError:
setUnenrollFailedWithBusyServerError:
setCompletionBlock:
defaultSessionConfiguration
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
descriptionForRequest:
retrieveClientCertificate
daemonBusyError
setNonce:
_startRequestWithRequestType:completionBlock:
setFatalError:
setRetryAfterInterval:
dataTaskWithRequest:
allHTTPHeaderFields
internalError
setError:
sendFailureNoticeToRemote
MCVerboseDescription
retryCertificateRetrievalIfAllowedAfterDelayOrFailWithError:
establishRequestWithPrivateKey:clientCertificates:
retrieveClientCertificateWithCompletion:
requestType
setProvisionalEnrollmentResponse:
nonce
URLWithString:
standardUserDefaults
stringForKey:
setProfileConfigurationResponse:
setUnenrollResponse:
requestWithPayload:URL:privateKey:clientCertificates:outError:
startURLRequest:
error
_callCompletionBlockWithWasSuccessful:responseDictionary:error:
profileConfigurationResponse
initWithData:encoding:
JSONObjectWithData:options:error:
badFormatError
convertCloudConfigDictionary:toManagedConfiguration:
provisionalEnrollmentResponse
validateProvisionalEnrollmentResponse:
completionBlock
statusCode
allHeaderFields
integerValue
retryAfterInterval
setResponseContentType:
protectionSpace
authenticationMethod
isEqualToString:
serverTrust
objectForKey:
boolForKey:
serverTrustError
unenrollResponse
cancel
appendData:
dataFetch:didFailWithError:
response
parseURLResponse:
currentRequest
sendProvisionalEnrollmentInfoToRemote
invalidDeviceError
_cloudConfigErrorInResponse:
teslaServiceBusyError
retryProvisionalEnrollmentRequestIfAllowedAfterDelayOrFailWithError:
teslaServiceDownError
sendProfileConfigurationInfoToRemote
_setLockdownCloudConfigAvailableKeyIfNeededWithError:
retryProfileConfigurationRequestIfAllowedAfterDelayOrFailWithError:
sendUnenrollmentSucceededInfoToRemote
retryUnenrollRequestIfAllowedAfterDelayOrFailWithError:
startRetryTimerWithInterval:
maxRetriesExceededError
certificateRetrievalRequestCount
setCertificateRetrievalRequestCount:
retryRequestIfAllowed:afterDelay:orFailWithError:
provisionalEnrollmentRequestCount
setProvisionalEnrollmentRequestCount:
profileConfigurationRequestCount
setProfileConfigurationRequestCount:
unenrollRequestCount
setUnenrollRequestCount:
code
profileNotActiveError
deviceNotEnrolledError
nonceExpiredError
invalidSignatureError
responseContentType
containsString:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
_errorStringForResponse:
_cloudConfigErrorResponses
fatalError
dataFetchCompleted:
timeoutTimerDidFire:
certificateRetrievalFailed
provisionalEnrollmentFailedWithBusyServerError
profileConfigurationRetrievalFailedWithBusyServerError
unenrollFailedWithBusyServerError
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
remoteProcessConnection
userAgentString
_isDaemonBusy
_certificateRetrievalFailed
_provisionalEnrollmentFailedWithBusyServerError
_profileConfigurationRetrievalFailedWithBusyServerError
_unenrollFailedWithBusyServerError
_remoteProcessConnection
_completionBlock
_userAgentString
_requestType
_certificateRetrievalRequestCount
_provisionalEnrollmentRequestCount
_profileConfigurationRequestCount
_unenrollRequestCount
_timeoutTimer
_responseContentType
_urlSession
_retryAfterInterval
_fatalError
_error
_nonce
_provisionalEnrollmentResponse
_profileConfigurationResponse
_unenrollResponse
arrayWithObjects:count:
length
stringWithFormat:
appendFormat:
mutableCopy
UTF8String
MCErrorWithDomain:code:descriptionArray:underlyingError:errorType:
count
dataWithJSONObject:options:error:
_signPayloadData:withPrivateKey:outError:
base64EncodedDataWithOptions:
objectAtIndexedSubscript:
base64Encodedx509CertificateStringFromCertificate:
dictionaryWithDictionary:
initWithURL:cachePolicy:timeoutInterval:
setHTTPMethod:
setValue:forHTTPHeaderField:
setHTTPBody:
_deviceInfoDictionary
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isRequired
setName:
setIsRequired:
validationInfo
setValidationInfo:
_isRequired
_name
_validationInfo
dictionaryWithContentsOfFile:
setStubInfo:
stubInfo
setCertificate:
setSession:
setReadyToSign:
certificate
session
dataWithCapacity:
dataUsingEncoding:
installCertificate:
establishSessionWithSessionInfoData:
signData:
sessionRequest
readyToSign
_readyToSign
_stubInfo
_certificate
_session
dataWithBytes:length:
getBytes:length:
initWithBase64EncodedString:options:
verifySignature:payload:clientCertificate:
decodeCertificateFromBase64String:
destinationKey
validationType
_validateBooleanInDictionary:
_validateCertificateArrayInDictionary:
_validateHttpsURLStringInDictionary:
_validateNumberInDictionary:
_validateStringInDictionary:
_validateStringArrayInDictionary:
numberWithInt:
_certificateDataFromBase64EncodedString:
scheme
setValidationType:
setDestinationKey:
_validationType
_destinationKey
MCTeslaUnenrollRequestPayload
MCTeslaValidationGroupInfo
MCTeslaServiceInterface
NSObject
MCTeslaGatekeeper
NSXPCListenerDelegate
MCTeslaValidation
MCTeslaServicerServer
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
MCTeslaRequestSupport
MCUCRTSupport
MCTeslaProvisionalEnrollmentRequestPayload
MCTeslaRequestPayload
MCTeslaValidationInfo
AbsintheStub
MCTeslaCertificateSupport
MCTeslaValidationKeyInfo
MCTeslaProfileConfigurationRequestPayload
@16@0:8
@32@0:8@16@24
@24@0:8@16
B32@0:8@16@24
v16@0:8
v24@0:8@16
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?B@"NSDictionary"@"NSError">24
v24@0:8@?<v@?B@"NSDictionary"@"NSError">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
d16@0:8
v24@0:8d16
@"NSTimer"
v32@0:8@16@24
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@24@0:8q16
B32@0:8@16^@24
v32@0:8q16@?24
v36@0:8B16@20@28
q24@0:8@16
v36@0:8B16d20@28
@?16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
@"NSXPCConnection"
@"NSString"
@"NSURLSession"
@"NSError"
@"NSMutableData"
@40@0:8@16@24^@32
@56@0:8@16@24@32@40^@48
@"NSDictionary"
@"NSData"
B40@0:8@16@24@32
v24@0:8Q16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>17A405001</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>teslad</string>
<key>CFBundleIdentifier</key>
<string>com.apple.managedconfiguration.cloudconfigd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>12.0</string>
<key>DTSDKBuild</key>
<string>16A5288c</string>
<key>DTSDKName</key>
<string>iphonesimulator12.0</string>
<key>DTXcode</key>
<string>1000</string>
<key>DTXcodeBuild</key>
<string>10N162a</string>
<key>MinimumOSVersion</key>
<string>12.0</string>
<key>NSMainNibFile</key>
<string>MainWindow</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>311791806</string>
<key>application-identifier</key>
<string>com.apple.managedconfiguration.cloudconfigd</string>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.network-security-disabled</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
<string>lockdown-identities</string>
</array>
</dict>
</plist>
