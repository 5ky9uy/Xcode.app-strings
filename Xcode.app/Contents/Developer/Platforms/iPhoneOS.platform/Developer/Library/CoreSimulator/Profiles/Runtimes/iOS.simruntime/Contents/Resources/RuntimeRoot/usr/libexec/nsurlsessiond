%@ %@
session
socketUUID
host
port
hasSession
TB,R,N
T@"PDURLSessionProxySessionMessage",&,N,V_session
hasSocketUUID
T@"NSString",&,N,V_socketUUID
hasHost
T@"NSString",&,N,V_host
hasPort
TB,N
TI,N,V_port
task
disposition
credential
hasTask
T@"PDURLSessionProxyTaskMessage",&,N,V_task
hasDisposition
Ti,N,V_disposition
hasCredential
T@"PDURLSessionProxyCredential",&,N,V_credential
UseCredential
PerformDefaultHandling
CancelAuthenticationChallenge
RejectProtectionSpace
(unknown: %i)
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
hasConfiguration
T@"NSData",&,N,V_configuration
hasSupportsRedirects
TB,N,V_supportsRedirects
hasDelegateImplementsWillSendRequest
TB,N,V_delegateImplementsWillSendRequest
hasDelegateImplementsSessionAuthChallenge
TB,N,V_delegateImplementsSessionAuthChallenge
hasDelegateImplementsTaskAuthChallenge
TB,N,V_delegateImplementsTaskAuthChallenge
hasDelegateImplementsWillPerformRedirection
TB,N,V_delegateImplementsWillPerformRedirection
hasDelegateImplementsDidReceiveResponse
TB,N,V_delegateImplementsDidReceiveResponse
_nsurlsessiondErrorDomain
%02x
_unsafe
SIGTERM received, shutting down.
v8@?0
--privileged
--postlogoutsync
com.apple.nsurlsessiond
proxy
priority
hasPriority
TI,N,V_priority
message
T@"PBCodable",C,V_message
type
TS,V_type
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
com.apple.private.alloy.nsurlsessionproxy
NSURLSessionProxyClientBundleIdentifier
com.apple.cloudkit.cloudd
com.apple.cloudd
IDSSendMessageOptionMetricReportIdentifier
v16@?0@"PBCodable"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
connected
TB,GisConnected,V_connected
launchUUID
T@"NSString",&,V_launchUUID
taskInfo
hasTaskInfo
T@"NSData",&,N,V_taskInfo
v32@?0@"NSString"8@"PDURLSessionProxyServer"16^B24
com.apple.nsurlsessiond.PDBluetoothCompanionLinkAssertion.bluetoothSerialQueue
NRPairedDeviceRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
### Failed to Soft Linked: /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
CBScalablePipeManager
/System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth
### Failed to Soft Linked: /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth
originalRequest
currentRequest
taskSequenceNumber
hasOriginalRequest
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
hasCurrentRequest
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
hasTaskSequenceNumber
TQ,N,V_taskSequenceNumber
response
hasResponse
T@"PDURLSessionProxyResponse",&,N,V_response
com.apple.nsurlsessiond.NDAVAssetDownloadSessionWrapper-queue
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
AVAssetDownloadSessionWrapper %llu
countOfBytesWritten
TQ,V_countOfBytesWritten
countOfBytesExpectedToWrite
TQ,V_countOfBytesExpectedToWrite
totalTimeRange
T@"NSValue",C,V_totalTimeRange
progressTimerRunning
TB,V_progressTimerRunning
delegate
T@"<NDAVAssetDownloadSessionWrapperDelegate>",R,W,V_delegate
delegateQueue
T@"NSObject<OS_dispatch_queue>",R,&,V_delegateQueue
T@"NSURL",R,C,V_URL
destinationURL
T@"NSURL",R,C,V_destinationURL
options
T@"NSDictionary",R,&,V_options
downloadToken
TQ,R,V_downloadToken
taskIdentifier
TQ,V_taskIdentifier
com.apple.private.nsurlsession.impersonate
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.private.nsurlsession.alow-duet-preauthorization
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
sessions.plist
downloadDirectoryPath.plist
configuration.plist
options.plist
com.apple.OTACrashCopier
Holding boost for %@
com.apple.private.dark-wake-network-reachability
kNSURLSessionThrowImmediateAVExceptionKey
NSURLError
kNSURLSessionImmediateInvalidationErrorKey
v32@?0@8@16^B24
xpcConn
T@"NSXPCConnection",W,V_xpcConn
T@"<NDSessionManagerDelegate>",W,V_delegate
isSpringBoardApp
TB,V_isSpringBoardApp
obliterationCompletion
T@?,C,V_obliterationCompletion
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsWillBeginDelayedRequestKey
NSURLSessionDelegateImplementsDidFinishCollectingMetricsKey
com.apple.private.nsurlsession.set-task-priority
NSURLSessionBackgroundPoolName
NSURLSessionBackgroundPoolName-sync-%d
Uploads
Library/Caches/com.apple.nsurlsessiond/Downloads
tasks.plist
Task <?>.<%lu>
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
%@ [allowsCellularAccess: %d]
VPN not connected
Duet Said No
Waiting for start time
Duration expired
Waiting for power
Waiting for inexpensive network
Waiting for non-cellular network
Link quality too poor
Cellular service is unavailable
Thermal conditions are not good
Conflicting parameters
Required data protection level is locked
Connection pool is full
Opportunistic
Network unavailable
Blocked by proxy
Unknown (%llu)
__NSCFLocalDownloadTask
NSMutableData
NSKeyedArchiver
NSKeyedArchiveRootObjectKey
__NSCFLocalUploadTask
__NSCFLocalDataTask
timingData
trailers
v32@?0@"NSNumber"8@"__NSCFURLSessionTaskInfo"16^B24
NSURLErrorBackgroundTaskCancelledReasonKey
v12@?0B8
com.apple.sharingd
v24@?0q8@"NSURLRequest"16
CFNetworkUpload_%@
Task <%@>.<%@>.<%@>.<%lu>
__NSCFURLSessionTaskInfo
%@%@%@
__com.apple.CFNetwork.prefix__
v32@?0@"NSURLProtectionSpace"8@"NSURLCredential"16^B24
v16@?0@"NSData"8
NSURLAuthenticationMethodNTLM
NSURLAuthenticationMethodNegotiate
NSURLAuthenticationMethodClientCertificate
NSURLAuthenticationMethodServerTrust
v16@?0@"NSURLRequest"8
v16@?0@"NSError"8
v16@?0@"NSFileHandle"8
v16@?0q8
v24@?0@"NSURLRequest"8@"NSFileHandle"16
v20@?0B8@"NSDictionary"12
T@"<NDBackgroundSessionDelegate>",W,V_delegate
identifier
T@"NSString",R,V_identifier
clientBundleID
T@"NSString",R,V_clientBundleID
monitoredAppBundleID
T@"NSString",R,V_monitoredAppBundleID
secondaryID
T@"NSString",R,V_secondaryID
invalidateReply
T@?,C,V_invalidateReply
sharedContainerIdentifier
T@"NSString",C,V_sharedContainerIdentifier
version
hasVersion
TI,N,V_version
hasLaunchUUID
T@"NSString",&,N,V_launchUUID
headerData
continueLoad
hasHeaderData
T@"NSData",&,N,V_headerData
hasContinueLoad
TB,N,V_continueLoad
receivedData
hasReceivedData
T@"NSData",&,N,V_receivedData
additionalProperties
hasAdditionalProperties
T@"NSData",&,N,V_additionalProperties
taskDescription
hasTaskDescription
T@"NSString",&,N,V_taskDescription
com.apple.nsurlsessiond.status-monitor
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
com.apple.nsurlsessiond-launchondemand
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nsurlsessiond-events.message-type
com.apple.nsurlsessiond-events.registered-clients
DisableInfraWiFi
enableBluetoothLinkRequirements
bluetoothLinkRequirementsOverrideTimerValue
http
https
_actualConfiguration
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
_actualAdditionalProperties
T@"NSDictionary",&,S_setActualAdditionalProperties:
_actualTaskInfo
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
_actualAuthHeaders
T@"NSDictionary",&,S_setActualAuthHeaders:
/System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
### Failed to Soft Linked: /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
/System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
### Failed to Soft Linked: /System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
com.apple.nsurlsessionproxy.cancelError
NSErrorPeerCertificateChainKey
NSErrorClientCertificateChainKey
supportsSecureCoding
TB,R
nsurlsessiond
com.apple.nsnetworkd
-launchd
com.apple.nsurlsessiond/Downloads
/nsurlsessiond.launch
streamErrorDomain
streamErrorCode
hasStreamErrorDomain
Ti,N,V_streamErrorDomain
hasStreamErrorCode
Ti,N,V_streamErrorCode
archiveList
hasArchiveList
T@"NSData",&,N,V_archiveList
bundleIdentifier
T@"NSString",&,V_bundleIdentifier
currentRequestDelay
Td,V_currentRequestDelay
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
BRContainersMonitor
/System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
### Failed to Soft Linked: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
FPProviderMonitor
/System/Library/PrivateFrameworks/FileProvider.framework/FileProvider
### Failed to Soft Linked: /System/Library/PrivateFrameworks/FileProvider.framework/FileProvider
Cancel
Allow
BecomeDownload
request
hasRequest
T@"PDURLSessionProxyRequest",&,N,V_request
reason
hasReason
TI,N,V_reason
com.apple.nsurlsessiond.usermanager.sync
nsurlsession bg task
client
retry
v24@?0@"NSString"8^B16
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
monitor
activeTasks
T@"NSMutableSet",&,V_activeTasks
activeTasksLock
T@"NSLock",&,N,V_activeTasksLock
monitorTask
T@"UMUserSyncTask",&,V_monitorTask
monitorTaskSet
T@"NSMutableSet",&,V_monitorTaskSet
monitorTaskLock
T@"NSLock",&,N,V_monitorTaskLock
tasksInitialized
TB,V_tasksInitialized
tasksEnqueued
TB,V_tasksEnqueued
bridgeTasks
T@"NSMutableDictionary",&,V_bridgeTasks
shouldCancel
hasShouldCancel
TB,N,V_shouldCancel
com.apple.nsurlsessiond.credential-storage-queue
v24@?0@"NSDictionary"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSURLCredential"8
T@"<NDCredentialStorageDelegate>",W,V_delegate
bundleID
T@"NSString",C,V_bundleID
hasBodyStream
hasHasBodyStream
TB,N,V_hasBodyStream
 uuid:%@
BackgroundDisposition
com.apple.nsurlsessiond.NSURLSessionProxyPool
v32@?0@"NSNumber"8@"NSURLSessionDataTask"16^B24
Session <%@>
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
v20@?0I8r^v12
v20@?0i8@"NSError"12
v20@?0@"NSObject<OS_dispatch_data>"8i16
v12@?0i8
v28@?0@"NSData"8B16@"NSError"20
v24@?0@"PBCodable"8@"NSError"16
-[PDURLSessionProxyServer _URLSession:dataTask:didReceiveData:completionHandler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/nsnetworkd_Sim/CFNetwork-893.10/nsurlsessiond/SessionProxy/PDURLSessionProxyServer.mm
!_taskIdentifiersToPendingDataCompletion[@(taskIdentifier)]
T@"NSString",C,V_identifier
uuidString
T@"NSString",C,V_uuidString
T@"<PDURLSessionProxyServerDelegate>",R,V_delegate
bytesSent
totalBytesSent
totalBytesExpectedToSend
hasBytesSent
TQ,N,V_bytesSent
hasTotalBytesSent
TQ,N,V_totalBytesSent
hasTotalBytesExpectedToSend
TQ,N,V_totalBytesExpectedToSend
hasTaskIdentifier
TQ,N,V_taskIdentifier
com.apple.system.powersources.source
basePriority
Tq,V_basePriority
challenge
hasChallenge
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
domain
code
userInfo
hasDomain
T@"NSString",&,N,V_domain
hasCode
TQ,N,V_code
hasUserInfo
T@"NSData",&,N,V_userInfo
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
bundles.plist
NDTaskInfo
q24@?0@8@16
v32@?0@"NSString"8@"NDSessionManager"16^B24
__NSCFURLSessionXPC
background
com.apple.nsurlsessiond.started
T@"NSObject<OS_dispatch_queue>",R,V_queue
privileged
TB,GisPrivileged,V_privileged
inSyncBubble
TB,GisInSyncBubble,V_inSyncBubble
stakeholder
T@"NDUserSyncStakeholder",&,V_stakeholder
bodyData
hasBodyData
T@"NSData",&,N,V_bodyData
com.apple.mt
KeepAppsUpToDateAppList
com.apple.nsnetwork.SpringBoard-queue
kKeepAppsUpToDateEnabledChangedNotification
NSDistributedNotificationCenter
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
com.apple.nsurlsessiond.handlesession %@
UIApplicationLaunchOptionsURLSessionKey
sessionIdentifier
sequenceNumber
idsPriority
hasSessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
hasUuidString
T@"NSString",&,N,V_uuidString
hasSequenceNumber
TQ,N,V_sequenceNumber
hasIdsPriority
Tq,N,V_idsPriority
error
hasError
T@"PDURLSessionProxyError",&,N,V_error
StatusCodes
PublishingURL
EarliestBeginDate
CountOfBytesClientExpectsToSend
CountOfBytesClientExpectsToReceive
DisallowCellularDueToSystemPolicy
SZExtractor
TimeoutIntervalForResource
NSKeyedUnarchiver
extractorDelegate
T@"<SZExtractorDelegate>",W,N
doesConsumeExtractedData
v24@?0Q8@"NSError"16
args
Ti,V_type
T@"NSArray",C,V_args
hasBeenDrained
TB,V_hasBeenDrained
v24@?0q8@"NSURLCredential"16
T@"<NDCallbackQueueDelegate>",W,V_delegate
com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
{CGSize=dd}
%llu
%@%@%@.movpkg
file-write-data
configuration.apple.com
CGSizeMakeWithDictionaryRepresentation
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
### Failed to Soft Linked: /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithUnsignedInt:
alloc
init
setSession:
setSocketUUID:
setHost:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasSession
hasSocketUUID
hasHost
setPort:
setHasPort:
hasPort
readFrom:
writeTo:
copyTo:
.cxx_destruct
session
socketUUID
host
port
_host
_port
_session
_socketUUID
_has
initWithTask:
taskWillResume
taskWillSuspend
taskTransferredData:countOfBytesReceived:
cancel
_task
_hasStarted
_lastUpdateTime
_lastSuspendTime
_suspendedDurationSinceLastUpdate
setTask:
setCredential:
hasTask
disposition
setDisposition:
setHasDisposition:
hasDisposition
dispositionAsString:
StringAsDisposition:
hasCredential
task
credential
_credential
_disposition
isEqualToString:
numberWithBool:
setConfiguration:
hasConfiguration
setSupportsRedirects:
setHasSupportsRedirects:
hasSupportsRedirects
setDelegateImplementsWillSendRequest:
setHasDelegateImplementsWillSendRequest:
hasDelegateImplementsWillSendRequest
setDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsSessionAuthChallenge:
hasDelegateImplementsSessionAuthChallenge
setDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
hasDelegateImplementsTaskAuthChallenge
setDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillPerformRedirection:
hasDelegateImplementsWillPerformRedirection
setDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsDidReceiveResponse:
hasDelegateImplementsDidReceiveResponse
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_configuration
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_supportsRedirects
UTF8String
stringWithCapacity:
appendFormat:
uppercaseString
_sha1Hash
domain
code
userInfo
objectForKeyedSubscript:
integerValue
objectForKey:
numberWithInteger:
numberWithInt:
_isRecoverableErrorForBackgroundTask
_isPriorityChangedError
_shouldRemoveCacheFileForError
_errorShouldSuppressWake
_errorShouldBeRewritten
_cancelledReasonForError
isForeground
_priorityValue
set_priority:
_setPriority:withMonitoredApplication:
valueForEntitlement:
boolValue
respondsToSelector:
_connectionHasEntitlement:
defaultManager
fileExistsAtPath:
stringByDeletingLastPathComponent
lastPathComponent
stringByAppendingString:
stringByAppendingPathComponent:
fileSystemRepresentation
unarchiveObjectWithFile:
removeItemAtPath:
_safe_unarchiveObjectWithFile:
sharedDaemon
setPrivileged:
setInSyncBubble:
isInSyncBubble
sharedService
start
restoreState
initWithMachServiceName:
setDelegate:
queue
_setQueue:
resume
currentRunLoop
setPriority:
setHasPriority:
hasPriority
priority
_priority
initWithMessage:type:
message
setMessage:
type
setType:
_type
_message
UUID
UUIDString
initWithService:
addDelegate:queue:
setPreferInfraWiFi:
_onqueue_sendStartupMessage
_onqueue_updateDeviceState
_onqueue_remoteDeviceStartedUp
withWorkQueue:
launchUUID
setLaunchUUID:
data
initWithProtobufData:type:isResponse:
setObject:forKeyedSubscript:
numberWithDouble:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
devices
countByEnumeratingWithState:objects:count:
isDefaultPairedDevice
isNearby
_onqueue_devicesDisconnected
_onqueue_devicesConnected
removeAllObjects
numberWithLongLong:
unsignedLongLongValue
numberWithUnsignedLongLong:
_nsurlsessionproxy_sessionIdentifier
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
_onqueue_sourceApplicationForMessage:
_onqueue_priorityForMessage:ofType:isReply:
bumpAndReturnOutgoingSequenceNumberForPriority:
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_setMessagePriority:
_nsurlsessionproxy_setLaunchUUID:
copy
errorWithDomain:code:userInfo:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
_onqueue_handleFailedMessageSend:ofType:
_onqueue_loggableDescriptionForMessage:
length
_onqueue_sendMessage:ofType:responseIdentifier:forSourceApplication:withUrgency:withReply:
removeObjectForKey:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
outgoingResponseIdentifier
isResponse
messageSubclassForMessageType:isReply:
initWithData:
_nsurlsessionproxy_launchUUID
containsObject:
addObject:
incomingResponseIdentifier
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_messagePriority
verifyAndUpdateIncomingSequenceNumber:forPriority:
_onqueue_handleReceivedMessage:ofType:withReply:
count
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
devicesDidUnpair:
newDeviceBecameActive:
defaultPairedDevice
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_setPrefersInfraWiFi:
sendProtobufMessage:ofType:withReply:
setQueue:
isConnected
setConnected:
_idsService
_outstandingReplies
_outstandingMessages
_startupMessageIdentifier
_outgoingSequenceNumbersByPriority
_incomingSequenceNumbersByPriority
_receivedLaunchUUIDs
_currentRemoteLaunchUUID
_prefersInfraWiFi
_startupMessageFailed
_haveReceivedLegacyStartupMessage
_connected
_queue
_launchUUID
setTaskInfo:
hasTaskInfo
taskInfo
_taskInfo
dealloc
_obliterateAllBackgroundSessionsWithCompletionHandler:
acquire
invalidate
obliterate
enumerateKeysAndObjectsUsingBlock:
devicesConnected
_nsurlsessionproxy_taskIdentifier
messagePriorityForTaskWithIdentifier:isReply:
sourceApplicationBundleIdentifier
messageLoggableDescriptionForTaskWithIdentifier:
_nsurlsessionproxy_sessionUUID
uuidString
_actualConfiguration
initWithConfiguration:uuidString:options:delegate:
handleMessage:ofType:withReply:
setSessionIdentifier:
setUuidString:
handleFailedMessageSend:ofType:
identifier
proxyServerBecameInvalid:
retainInfraWiFi
releaseInfraWiFi
retainBTLinkAssertion
releaseBTLinkAssertion
_sessions
_infraWiFiRetainCount
_infraWiFiTimer
_btLinkAssertionRetainCount
_btLinkAssertionTimer
_bluetoothCompanionLinkAssertion
setLinkRequirementsForPeer:packetsPerSecond:inputBytesPerSecond:outputBytesPerSecond:
_updateState
sharedInstance
getActivePairedDevice
deviceIDForNRDevice:
initWithDelegate:queue:
state
scalablePipeManagerDidUpdateState:
scalablePipeManager:didRegisterEndpoint:error:
scalablePipeManager:didUnregisterEndpoint:
scalablePipeManager:pipeDidConnect:
scalablePipeManager:pipeDidDisconnect:error:
_bluetoothSerialQueue
_companionPeerIdentifier
_hasLoadedCompanionPeerIdentifier
_hasSetLinkRequirements
_isActive
_pipeManager
setOriginalRequest:
setCurrentRequest:
hasOriginalRequest
hasCurrentRequest
setTaskSequenceNumber:
setHasTaskSequenceNumber:
hasTaskSequenceNumber
originalRequest
currentRequest
taskSequenceNumber
_taskSequenceNumber
_currentRequest
_originalRequest
setResponse:
hasResponse
response
_response
assetDownloadSessionWithURL:destinationURL:options:
addSessionObservers
downloadToken
mutableCopy
initWithAsset:propertyList:
assetDownloadSessionWithAsset:destinationURL:options:
defaultCenter
didReceiveSucceededNotification:
addObserver:selector:name:object:
didReceiveFailedNotification:
didReceiveFileSizeAvailableNotification:
didReceiveTimeRangesChangedNotification:
didReceiveMediaSelectionResolutionNotification:
removeObserver:name:object:
releasePowerAssertion
removeSessionObservers
setProgressTimerRunning:
sendProgressUpdate
disavowSession
NDAVAssetDownloadSessionWrapper:didCompleteWithError:
error
totalTimeRange
duration
valueWithCMTimeRange:
setTotalTimeRange:
NDAVAssetDownloadSessionWrapper:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
resolvedMediaSelection
propertyList
NDAVAssetDownloadSessionWrapper:didResolveMediaSelectionPropertyList:
countOfBytesReceived
countOfBytesWritten
setCountOfBytesWritten:
fileSize
setCountOfBytesExpectedToWrite:
countOfBytesExpectedToWrite
NDAVAssetDownloadSessionWrapper:didUpdateProgressWithLastBytesWritten:totalBytesWritten:totalBytesExpectedToWrite:
dictionaryWithObjects:forKeys:count:
takePowerAssertion
progressTimerRunning
pause
stop
startLoadingMetadata
initWithURL:destinationURL:options:delegate:queue:
initWithURLAsset:destinationURL:options:delegate:queue:
suspend
cancelAndDeliverError:
delegate
delegateQueue
destinationURL
options
taskIdentifier
setTaskIdentifier:
_downloadSession
_asset
_timer
_workQueue
_powerAssertion
_progressTimerRunning
_delegate
_delegateQueue
_URL
_destinationURL
_options
_downloadToken
_countOfBytesWritten
_countOfBytesExpectedToWrite
_taskIdentifier
_totalTimeRange
bundleManagerPath:
fileURLWithPath:
createDirectoryAtURL:
URLByAppendingPathComponent:
path
archivePath
array
sessionPath:forBundleID:
fileExistsAtPath:isDirectory:
_supportsAVAssetDownloads
restoreOptionsFromArchivePath:
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
restoreTasks:
addObjectsFromArray:
applicationWithIdentifier:
wakeForSessionIdentifier:
removeItemAtURL:
archiveState
allKeys
archiveRootObject:toFile:
setDaemonWorkState:
processInfo
beginActivityWithOptions:reason:
sharedSpringBoard
applicationIsForeground:
endActivity:
currentConnection
sharedContainerIdentifier
connection:canUseSharedContainerIdentifier:
setSharedContainerIdentifier:
_sourceApplicationBundleIdentifier
set_sourceApplicationBundleIdentifier:
_sourceApplicationSecondaryIdentifier
set_sourceApplicationSecondaryIdentifier:
_sourceApplicationAuditTokenData
_respectsAllowsCellularAccessForDiscretionaryTasks
set_respectsAllowsCellularAccessForDiscretionaryTasks:
_allowsPowerNapScheduling
set_allowsPowerNapScheduling:
_connectionPoolName
set_connectionPoolName:
_directoryForDownloadedFiles
isPrivileged
processIdentifier
_isSafeDirectoryForDownloads:
set_directoryForDownloadedFiles:
_duetPreauthorized
set_duetPreauthorized:
applicationProxyForIdentifier:
groupContainerURLs
_xpcConnection
stringWithUTF8String:
pluginKitProxyForIdentifier:
copyAndSanitizeClientConfiguration:
hasConnectedClient
_web_errorWithDomain:code:URL:
getTasksForReconnection
setXPCConnection:
reconnectClient:withCompletion:
releaseAssertionForBundleID:sessionID:
allowReconnect
cleanupWithCompletionHandler:
setObliterationCompletion:
dropBoost
obliterationCompletion
managerBecameEmpty:bundleID:withCompletionHandler:
clientApplicationWasReinstalled
boost
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
sendPendingCallbacksForIdentifier:reply:
releaseAssertionForSession:reply:
okayToSendPendingCallbacksForIdentifier:reply:
getActiveSessionIdentifiersWithReply:
obliterateAllSessionsWithReply:
sessionCompleted:withCompletionHandler:
initWithDelegate:bundleID:isSpringBoardApp:
downloadDirectoryDataPath
restoreState:
getSessionWithIdentifier:
xpcConn
setXpcConn:
isSpringBoardApp
setIsSpringBoardApp:
_reconnectingProxies
_clientBundleID
_bundleDirectory
_sessionArchiveQueue
_boost
_isSpringBoardApp
_xpcConn
_obliterationCompletion
defaultSessionConfiguration
timeoutIntervalForRequest
setTimeoutIntervalForRequest:
timeoutIntervalForResource
setTimeoutIntervalForResource:
connectionProxyDictionary
setConnectionProxyDictionary:
TLSMinimumSupportedProtocol
setTLSMinimumSupportedProtocol:
TLSMaximumSupportedProtocol
setTLSMaximumSupportedProtocol:
HTTPAdditionalHeaders
setHTTPAdditionalHeaders:
HTTPMaximumConnectionsPerHost
setHTTPMaximumConnectionsPerHost:
networkServiceType
setNetworkServiceType:
_authenticatorStatusCodes
set_authenticatorStatusCodes:
_atsContext
set_atsContext:
_TCPAdaptiveReadTimeout
set_TCPAdaptiveReadTimeout:
_TCPAdaptiveWriteTimeout
set_TCPAdaptiveWriteTimeout:
_onBehalfOfPairedDevice
set_onBehalfOfPairedDevice:
_requiresSustainedDataDelivery
set_requiresSustainedDataDelivery:
set_prefersInfraWiFi:
canBeSuspended
setHTTPCookieStorage:
setURLCache:
setURLCredentialStorage:
allowsCellularAccess
setAllowsCellularAccess:
setWaitsForConnectivity:
setShouldUseExtendedBackgroundIdleMode:
_allowsExpensiveAccess
set_allowsExpensiveAccess:
set_tcpConnectionPoolName:
set_connectionCachePurgeTimeout:
set_longLivedConnectionCachePurgeTimeout:
set_preventsIdleSleepOnceConnected:
_collectsTimingData
set_collectsTimingData:
_timingDataOptions
set_timingDataOptions:
_shouldSkipPreferredClientCertificateLookup
set_shouldSkipPreferredClientCertificateLookup:
_requiresPowerPluggedIn
set_requiresPowerPluggedIn:
set_watchExtensionBundleIdentifier:
set_sourceApplicationAuditTokenData:
set_requiresClientToOpenFiles:
defaultWindowDurationForResourceTimeout:
isDiscretionary
_clientIsNotExplicitlyDiscretionary
set_clientIsNotExplicitlyDiscretionary:
set_forcedNetworkServiceType:
setDiscretionary:
set_socketStreamProperties:
setSkip_download_unlink:
addTransaction
containerIDForPrimaryIdentifier:secondaryIdentifier:
bundleIDForPrimaryIdentifier:secondaryIdentifier:
cloudContainerWithIdentifier:
providerIDForBundle:sharedContainerIdentifier:
fileProviderWithIdentifer:applicationIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
setupDownloadDirectory
initWithDelegate:forBundleID:
configurationWithClientConfiguration:discretionary:
sessionSendsLaunchEvents
_sessionSendsLaunchOnDemandEvents
_performsEVCertCheck
initWithDispatchQueue:
sessionWithConfiguration:delegate:delegateQueue:
initWithDelegate:
_allowsRetryForBackgroundDataTasks
_infersDiscretionaryFromOriginatingClient
addObserver:
setUserInfo:
populateWithInitialCredentials
sharedUserEventAgentConnection
removePendingWakeForClient:sessionIdentifier:
bundleIdentifier
clientDidDisconnect
taskKind
downloadFileURL
setDownloadFileURL:
downloadFile
setPath:
archiveTaskInfo:
containerURL
URLByAppendingPathComponent:isDirectory:
defaultDownloadDirectoryForBundleID:
finishTasksAndInvalidate
removeObserver:
releaseTransaction
cleanupSessionWithCompletionHandler:
archivedDataWithRootObject:
tasksArchivePath
writeToFile:atomically:
numberWithUnsignedInteger:
_loggableDescription
_timeWindowDelay
_timeWindowDuration
timeIntervalSinceReferenceDate
creationTime
_setTimeWindowDuration:
_setTimeWindowDelay:
mayBeDemotedToDiscretionary
currentDiscretionaryStatus
priorityForDiscretionaryStatus:
setBasePriority:
updateCurrentRequest:
setState:
setError:
fileURL
setUploadFile:
removeDownloadFileForTaskInfo:
adjustDiscretionaryStatusForTaskInfo:
requestWithAdjustedWindowForTaskInfo:
sessionForDiscretionaryStatus:
_downloadTaskWithRequest:downloadFilePath:
uploadTaskWithRequest:fromFile:
dataTaskWithRequest:
initializeTask:fromTaskInfo:
createResumeInformation:
propertyList:isValidForFormat:
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
reason
finishEncoding
downloadTaskWithResumeData:
createNewTaskFromInfo:
arrayWithObject:
initWithCallbackType:taskIdentifier:args:
addPendingCallback:forceWakeup:
supportsWakes
wakeClientUponNotification:sessionIdentifier:
_backgroundTaskTimingData
_backgroundTrailers
null
arrayWithObjects:count:
restoreCompletedTask:
hasStarted
restoreInProgressTask:
setSuspendCount:
setHasStarted:
basePriority
loadingPriority
set_loadingPriority:
bytesPerSecondLimit
set_bytesPerSecondLimit:
setStartTime:
hasPrefix:
shouldCancelOnDisconnect
restoreTask:isOutstanding:
addOutstandingTaskWithIdentifier:
restoreTasksFromArchivedInfo:
sessionHasOutstandingTasks
wakeUpClient
setEstablishedConnection:
taskDescription
setTaskDescription:
earliestBeginDate
setEarliestBeginDate:
countOfBytesClientExpectsToSend
setCountOfBytesClientExpectsToSend:
countOfBytesClientExpectsToReceive
setCountOfBytesClientExpectsToReceive:
uniqueIdentifier
set_uniqueIdentifier:
storagePartitionIdentifier
set_storagePartitionIdentifier:
pathToDownloadTaskFile
set_pathToDownloadTaskFile:
_extractor
set_extractor:
_hasSZExtractor
set_hasSZExtractor:
_doesSZExtractorConsumeExtractedData
set_doesSZExtractorConsumeExtractedData:
additionalProperties
startResourceTimer
clientErrorForError:
willRetryBackgroundDataTask:withError:timingData:
requeueTask:skipResume:
sharedMonitor
lowThroughputTimerRetryCount
setLowThroughputTimerRetryCount:
suspendCount
taskShouldResume:
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
retryCount
setRetryCount:
performBlockAfterNetworkChangedEvent:delay:
cancelMonitorForTask:
finalizeTaskCompletionWithSuppressedWake:
clientIsActive
setResumedAndWaitingForEarliestBeginDate:
error:code:
cancel_with_error:
resumeTaskWithIdentifier:withProperties:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
setInvalidateReply:
performAllCallbacks
isHandlingBackgroudURLSessionWithIdentifier:
countOfBytesSent
setCountOfBytesSent:
setCountOfBytesReceived:
countOfBytesExpectedToSend
setCountOfBytesExpectedToSend:
countOfBytesExpectedToReceive
setCountOfBytesExpectedToReceive:
fillInByteCountsForTaskInfo:withTaskID:
fillInPropertiesForTaskInfo:withTaskID:
isBeingDebugged
hasForegroundBackgroundStates
hasBackgroundTaskCompletion
resumedAndWaitingForEarliestBeginDate
timeIntervalSinceNow
respondedToWillBeginDelayedRequestCallback
setRespondedToWillBeginDelayedRequestCallback:
_backgroundPublishingURL
progress
setFileURL:
unpublish
publish
handleWillBeginDelayedRequestForTaskWithIdentifier:completionHandler:
handleEarliestBeginDateForTaskWithIdentifier:completionHandler:
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
sharedStakeholder
restoredTaskActive:
endBridgingUMTask:
removeObject:
enqueueTaskWithIdentifier:
getBytes:length:
linkItemAtURL:toURL:error:
copyItemAtURL:toURL:error:
fileDescriptor
closeFile
drainCallbacksForTaskIdentifier:
invalidateReply
addPendingCallbackToFront:
currentRequestDelay
setIdentifier:
setCreationTime:
_copySocketStreamProperties
_legacySocketStreamProperties
HTTPBodyStream
set_DuetActivityProperties:
set_legacySocketStreamProperties:
_isSafeResumeDataForBackgroundDownload
initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:
setExpectingResumeCallback:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
descriptionForRequest:
_isSafeRequestForBackgroundDownload
_isSafeFileForBackgroundUpload:
makeTempUploadFile:withExtensionData:
uploadTaskWithStreamedRequest:
initWithUploadTask:uniqueIdentifier:bundleID:sessionID:
user
password
protocol
realm
authenticationMethod
initWithHost:port:protocol:realm:authenticationMethod:
credentialWithUser:password:persistence:
sharedCredentialStorage
setDefaultCredential:forProtectionSpace:
initWithDataTask:uniqueIdentifier:bundleID:sessionID:
setShouldCancelOnDisconnect:
setDisablesRetry:
cancelByProducingResumeData:
backgroundTaskDidSuspend:
taskShouldSuspend:
shouldContinueDownloadBasedOnDiskSpace:
setAdditionalProperties:
backgroundTaskDidResume:
setProperty:forKey:
_socketStreamProperties
setLoadingPriority:
setBytesPerSecondLimit:
reset
protectionSpace
unsignedIntegerValue
serverTrust
trustPassesExtendedValidation:
credentialForTrust:
previousFailureCount
proposedCredential
arrayWithObjects:
scheme
remoteObjectProxyWithErrorHandler:
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
establishedConnection
inputStreamWithFileHandle:taskIdentifier:
backgroundTask:needNewBodyStream:withReply:
set_backgroundTaskMetrics:
disablesRetry
startBridgingUMTask:
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
_timingData
retryTask:originalError:timingData:
_extractorFinishedDecoding
terminateExtractorWithError:
set_extractorFinishedDecoding:
set_backgroundTaskTimingData:
_trailers
set_backgroundTrailers:
removeOutstandingTaskWithIdentifier:
removeUploadFileForTaskInfo:
statusCode
backgroundTask:didReceiveResponse:timingData:
backgroundTask:didReceiveResponse:timingData:reply:
backgroundDataTask:didReceiveData:withReply:
backgroundDataTaskDidBecomeDownloadTask:
setTaskKind:
expectingResumeCallback
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
streamStatus
open
close
setHTTPBodyStream:
backgroundTask:hasConnectionWaitingWithError:
backgroundTask:getAuthHeadersForResponse:reply:
applicationWasQuitFromAppSwitcher:
backgroundUpdatesDisabledForApplication:
applicationWasSuspended:
applicationEnteredForeground:
applicationNoLongerInForeground:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:uniqueIdentifier:potentialCredentials:reply:
dataTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
downloadTaskWithResumeData:identifier:uniqueIdentifier:reply:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
suspendTaskWithIdentifier:
setDescription:forTask:
setPriority:forTaskWithIdentifier:
setLoadingPoolPriority:forTaskWithIdentifier:
setBytesPerSecondLimit:forTaskWithIdentifier:
resetStorageWithReply:
invalidateWithReply:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:uniqueIdentifier:reply:
avAggregateAssetDownloadTaskWithDownloadToken:serializedMediaSelections:assetTitle:assetArtworkData:options:childDownloadSessionIdentifier:identifier:uniqueIdentifier:reply:
errorOccurredDuringFinishedCallbackDelivery:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
clientAcknowledgedTerminalCallbackForTask:
getClientProxy
descriptionForTaskWithIdentifier:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_URLSession:dataTask:didReceiveData:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
_URLSession:openFileAtPath:mode:completionHandler:
_URLSession:companionAvailabilityChanged:
_URLSession:needConnectedSocketToHost:port:completionHandler:
_delegateOptions_clientImplementsCollectingMetrics
descriptionForTCPConnectionWaitingReason:
requeueTask:
clientBundleID
monitoredAppBundleID
secondaryID
_userInitiatedSession
_discretionaryPrioritySession
_credentialStorage
_archiveQueue
_clientApplication
_connectedExtension
_tasksToIdentifiers
_identifiersToTasks
_identifiersToMonitors
_identifiersToStreams
_identifiersToStreamQueues
_outstandingTaskIDs
_lastArchiveTime
_sessionDirectory
_downloadDirectory
_uploadsDirectory
_clientImplementsWillSendRequest
_clientImplementsWillBeginDelayedRequest
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_clientImplementsCollectingMetrics
_sendsLaunchEvents
_discretionary
_obliterated
_cleanedUp
_hasBeenSignalledToDeliverPendingEvents
_infersDiscretionary
_shouldPullInitialCredentials
_completeReconnectionBlock
_clientPID
_watchExtensionBundleIdentifier
_retryDataTasks
_callbackQueue
_monitoredApplication
_identifiersToTaskInfo
_clientProxy
_identifier
_monitoredAppBundleID
_secondaryID
_invalidateReply
_sharedContainerIdentifier
setVersion:
setHasVersion:
hasVersion
hasLaunchUUID
version
_version
setHeaderData:
hasHeaderData
setContinueLoad:
setHasContinueLoad:
hasContinueLoad
headerData
continueLoad
_headerData
_continueLoad
setReceivedData:
hasReceivedData
receivedData
_receivedData
hasAdditionalProperties
_additionalProperties
hasTaskDescription
_taskDescription
startMonitoringDynamicStore
stopMonitoringDynamicStore
handleDynamicStoreCallback:changedKeys:
handleBetterNetworkEvent
_dynamicStoreSource
_blocksToExecuteAfterNetworkChange
_networkChangeEventCount
_symptomToken
handleNewConnection:
launchProcessWithIdentifier:sessionIdentifier:
canLaunchProcessWithIdentifier:
_connection
_listener
_registeredClients
_pendingWakes
setWithArray:
componentsSeparatedByString:
objectAtIndex:
whitelistedClassesForUnarchiving
_nsurlsessionproxy_secureArchivedDataWithRootObject:
initForReadingWithData:
setByAddingObject:
decodeObjectOfClasses:forKey:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_shouldPreserveBackgroundSessionDisposition
_nsurlsessionproxy_requiresBackgroundSession
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
lowercaseString
_nsurlsessionproxy_isSafeRequest
sessionIdentifier
sequenceNumber
setSequenceNumber:
idsPriority
setIdsPriority:
_nsurlsessionproxy_setSessionUUID:
setDomain:
setCode:
_initWithActualError:
_actualError
setArchiveList:
archiveList
_initWithActualRequest:
_actualRequest
_initWithActualResponse:
_actualResponse
_initWithActualAuthChallenge:
_actualAuthChallenge
_initWithActualCredential:
_actualCredential
_setActualConfiguration:
_actualAdditionalProperties
_setActualAdditionalProperties:
_actualTaskInfo
_setActualTaskInfo:
propertyListWithData:options:format:error:
dataWithPropertyList:format:options:error:
_actualAuthHeaders
_setActualAuthHeaders:
encodeWithCoder:
initWithCoder:
supportsSecureCoding
nsurlsessiondPath
removeItemAtPath:error:
removeItemAtURL:error:
cStringUsingEncoding:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForDirectory:inDomain:appropriateForURL:create:error:
nsurlsessiondLaunchdPath
createFileAtPath:contents:attributes:
oldDaemonPath
oldNonDataVaultDaemonPath
createDataVaultDirectoryAtPath:
createDirectoryAtPath:
setStreamErrorDomain:
setHasStreamErrorDomain:
hasStreamErrorDomain
setStreamErrorCode:
setHasStreamErrorCode:
hasStreamErrorCode
streamErrorDomain
streamErrorCode
_streamErrorCode
_streamErrorDomain
hasArchiveList
_archiveList
initWithIdentifier:
identifierIsForSpringBoardApplication:
initWithIdentifier:applicationIdentifier:
indexOfObject:
removeObjectAtIndex:
initialize
isAwake
isSuspended
invokeSelectorForAllObservers:
setBundleIdentifier:
setCurrentRequestDelay:
_bundleIdentifier
_observers
_currentRequestDelay
containingBundle
dataContainerURL
requestDelayQueue
_onqueue_resetRequestDelay
setupDelayTimer
wakeUpApp:forSession:
applicationIsAwake:
applicationIsSuspended:
application:isHandlingBackgroundSessionWithIdentifier:
applicationIsBeingDebugged:
applicationHasBackgroundTaskCompletion:
startMonitoringBundleID:
addObserver:forApplication:
removeObserver:forApplication:
stopMonitoringBundleID:
applicationBackgroundUpdatesTurnedOff:
_delayTimer
_nonDiscretionaryGracePeriodTimer
_extendedNonDiscretionaryGracePeriodTimer
_containingApplication
containerIDFromPrimaryIdentifier:secondaryIdentifier:
bundleIDFromPrimaryIdentifier:secondaryIdentifier:
isContainerIDForeground:
addObserver:forContainerID:
removeObserver:forContainerID:
containerDidEnterForeground:
containerDidEnterBackground:
_monitor
_isForeground
_initializedForegroundStateFromMonitorCallback
providerIDForApplication:sharedContainerIdentifier:
addObserver:forProviderID:
removeObserver:forProviderID:
providerDidEnterForeground:
providerDidEnterBackground:
_initializedForegroundState
_springboardApplication
setRequest:
hasRequest
request
_request
setReason:
setHasReason:
hasReason
_reason
EDUMode
sharedManager
registerUserSyncStakeholder:withMachServiceName:
isMultiUser
taskWithName:reason:forBundleID:
lock
unlock
begin
bundleID
allCredentials
hasSuffix:
enumerateObjectsUsingBlock:
allValues
removeCredential:forProtectionSpace:
taskWithName:reason:
willSwitchUser
uploadContent
startUMTask:taskInfo:
endUMTask:
restoredTaskEnqueued:
tasksHaveBeenEnqueued
willSwitchToUser:
readyToSwitchToUser:
activeTasks
setActiveTasks:
activeTasksLock
setActiveTasksLock:
monitorTask
setMonitorTask:
monitorTaskSet
setMonitorTaskSet:
monitorTaskLock
setMonitorTaskLock:
tasksInitialized
setTasksInitialized:
tasksEnqueued
setTasksEnqueued:
bridgeTasks
setBridgeTasks:
_tasksInitialized
_tasksEnqueued
_activeTasks
_activeTasksLock
_monitorTask
_monitorTaskSet
_monitorTaskLock
_bridgeTasks
setShouldCancel:
setHasShouldCancel:
hasShouldCancel
shouldCancel
_shouldCancel
addEntriesFromDictionary:
credStorage_getInitialCredentialDictionariesWithReply:
dictionaryWithDictionary:
credStorage_credentialsForProtectionSpace:reply:
credStorage_allCredentialsWithReply:
credStorage_setCredential:forProtectionSpace:
credStorage_defaultCredentialForProtectionSpace:reply:
defaultCredentialForProtectionSpace:
credStorage_setDefaultCredential:forProtectionSpace:
credentialsForProtectionSpace:
setCredential:forProtectionSpace:
setBundleID:
_cachedCredentials
_cachedDefaultCredentialUsers
_bundleID
setHasBodyStream:
setHasHasBodyStream:
hasHasBodyStream
hasBodyStream
_hasBodyStream
stringByAppendingFormat:
_companionAppBundleIdentifier
_uniqueIdentifier
invalidateAndCancel
resendPendingMessage:
baseMessage
handleDataTaskWithRequestMessage:forTaskIdentifier:withReply:
handleCancelTaskMessage:forTaskIdentifier:
handleSuspendTaskMessage:forTaskIdentifier:
handleResumeTaskMessage:forTaskIdentifier:withReply:
handleSetDescriptionMessage:forTaskIdentifier:
handleSetPriorityMessage:forTaskIdentifier:
handleInvalidateMessage:
handleUploadBodyDataMessage:forTaskIdentifier:withReply:
handleOpenSocketMessage:withReply:
numberWithUnsignedShort:
taskMessageForIdentifier:
releaseInfraWiFiForTaskIfNecessary:
releaseBTLinkAssertionIfNecessary:
propertyForKey:inRequest:
inputStreamWithData:
bodyData
bytes
write:maxLength:
streamError
streamTaskWithHostName:port:
performForwardingFromTCPConnection:toStreamTask:
performForwardingFromStreamTask:toTCPConnection:
closeRead
closeWrite
initSocketWithDevice:options:completionHandler:queue:
writeData:timeout:completionHandler:
_createDispatchData
readDataOfMinLength:maxLength:timeout:completionHandler:
setChallenge:
shouldRetainInfraWiFi
retainInfraWiFiForTaskWithIdentifier:
shouldRetainBTLinkAssertion
retainBTLinkAssertionWithIdentifier:
getBoundStreamsWithBufferSize:inputStream:outputStream:
setBytesSent:
setTotalBytesSent:
setTotalBytesExpectedToSend:
intValue
_ignoreDidReceiveResponseDisposition
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:readClosedForStreamTask:
URLSession:writeClosedForStreamTask:
URLSession:betterRouteDiscoveredForStreamTask:
URLSession:streamTask:didBecomeInputStream:outputStream:
_URLSession:connectionEstablishedForStreamTask:
getTaskInformation
_tasks
_taskIdentifiersToSequenceNumbers
_taskIdentifiersToBodyStreams
_taskIdentifiersToInitialBodyInputStreams
_taskIdentifiersToWaitingReasons
_taskIdentifiersToPendingDataBytes
_taskIdentifiersToPendingDataCompletion
_streamTasksToDeviceConnections
_streamTasksToIDSTCPConnections
_streamTasksToOpenSocketReplies
_taskIdentifiersRetainingInfraWiFi
_taskIdentifiersRetainingBTLinkAssertion
_deviceConnections
_messagesToReSend
_skipInvalidateMessage
_implementsWillSendRequest
_implementsSessionAuthChallenge
_implementsTaskAuthChallenge
_implementsWillPerformRedirection
_implementsDidReceiveResponse
_uuidString
setHasBytesSent:
hasBytesSent
setHasTotalBytesSent:
hasTotalBytesSent
setHasTotalBytesExpectedToSend:
hasTotalBytesExpectedToSend
bytesSent
totalBytesSent
totalBytesExpectedToSend
_bytesSent
_totalBytesExpectedToSend
_totalBytesSent
setHasTaskIdentifier:
hasTaskIdentifier
firstObject
lastObject
doubleValue
currentThroughputThreshold
setThroughputTimerForCurrentInterval
currentIntervalEndDelta
startThroughputMonitoringIfAppropriate
numberWithUnsignedLong:
calculateThroughput
stopThroughputMonitoring
startThroughputMonitoring
_clientBundleIdentifier
_clientSecondaryIdentifier
_throughputTimer
_progressTimestamps
_progressValues
_throughputInterval
_throughputMonitoringStartTime
_startedDuetReporter
_connectionIsCellular
_hasTransferredData
_explicitlyDiscretionary
_performsNonDiscretionaryThrougputMonitoring
_mayBeDemotedToDiscretionary
_UMSyncTask
_powerMonitorToken
_basePriority
hasChallenge
challenge
_challenge
hasDomain
setHasCode:
hasCode
hasUserInfo
_code
_domain
_userInfo
setAttributes:ofItemAtPath:error:
defaultWorkspace
applicationIsInstalled:
isPlaceholder
isAppUpdate
setClass:forClassName:
setupNewClassMappingsForUnarchiver
compare:
sortedArrayUsingComparator:
sessionID
getSessionWithIdentifier:forBundleID:
auditToken
bgSessionManagerInterface
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
beginTransaction
endTransaction
applicationIdentifier
waitUntilDeviceIsUnlocked
createDaemonDirectory
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
listener:shouldAcceptNewConnection:
archivePathOldNonDataVault
stakeholder
setStakeholder:
_clients
_transactionQueue
_createdDataVault
_privileged
_inSyncBubble
_stakeholder
setBodyData:
hasBodyData
_bodyData
setupMonitor
sharedConnection
isAutomaticAppUpdatesAllowed
allObjects
updateInterestedBundleIDs:
handleApplicationStateChange:
setHandler:
resetStandardUserDefaults
standardUserDefaults
persistentDomainForName:
getBackgroundSettingsAppList
isEqualToNumber:
applicationStateForApplication:
applicationStateForBundleID:
isApplicationBeingDebugged:
applicationInfoForApplication:completion:
application:hasAssertion:withName:
assertionNameForIdentifier:
_onqueue_releaseAssertionForBundleID:sessionID:
initWithBundleIdentifier:flags:reason:name:withHandler:
dictionaryWithObject:forKey:
takeAssertionForBundleID:sessionID:
handleBackgroundSettingsChange
removePendingLaunchTasksForBundleID:sessionID:cancel:
_service
_assertions
_appStates
_observedBackgroundSettings
_backgroundUpdatesAllowed
_monitoredBundleIDs
currentIntervalThroughputThreshold
currentIntervalDuration
initWithWrapper:monitoredApplication:priority:options:queue:
wrapperWillSuspend
wrapperTransferredData:
_wrapper
_performsNonDiscretionaryThroughputMonitoring
hasSessionIdentifier
hasUuidString
setHasSequenceNumber:
hasSequenceNumber
setHasIdsPriority:
hasIdsPriority
_idsPriority
_sequenceNumber
_sessionIdentifier
hasError
_error
initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:
set_authenticatorConfiguredViaTaskProperty:
set_backgroundPublishingURL:
longLongValue
_DuetActivityProperties
unarchiveObjectWithData:
prepareForExtraction:
supplyBytes:withCompletionBlock:
suspendStreamWithCompletionBlock:
finishStreamWithCompletionBlock:
terminateStreamWithError:completionBlock:
extractorDelegate
setExtractorDelegate:
consumeExtractedDataIfNeeded
prepareForExtractionToPath:completionBlock:
doesConsumeExtractedData
set_extractorPreparedForExtraction:
set_timeoutIntervalForResource:
set_disallowCellular:
setArgs:
encodeInteger:forKey:
args
decodeIntegerForKey:
decodeObjectOfClass:forKey:
hasBeenDrained
setHasBeenDrained:
_hasBeenDrained
_args
objectAtIndexedSubscript:
backgroundTask:didCompleteWithError:info:reply:
backgroundDownloadTask:didFinishDownloadingToURL:reply:
backgroundTask:didReceiveChallenge:reply:
backgroundSessionDidStartAppWake:reply:
backgroundSessionDidFinishAppWake:reply:
backgroundTask:_willSendRequestForEstablishedConnection:reply:
openFileAtPath:mode:withReply:
backgroundTask:didFinishCollectingMetrics:reply:
backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:
backgroundTask:willBeginDelayedRequest:reply:
insertObject:atIndex:
performCallback:
drainCallback:
_callbacks
AVURLAsset
isFileURL
originalNetworkContentURL
temporaryDestinationURL
assetTitle
assetArtworkData
setOptions:
valueWithBytes:objCType:
_URLToUse
_destinationURLToUse
_AVAssetDownloadSesssionOptions
cancelDelayedCompletionWakeTimer
initializedWithAVAsset
AVAssetURL
URLAssetWithURL:options:
setAVURLAsset:
setAVAssetDownloadToken:
AVAssetDownloadToken
_web_errorWithDomain:code:failingURL:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
URLByDeletingLastPathComponent
avAssetDownloadsDirectory
updatePriorityForTaskID:
cancelAVDownloadAndFailTaskWithIdentifier:withError:
downloadDirectoryToUse:
initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
setInitializedWithAVAsset:
setTemporaryDestinationURL:
setAssetTitle:
setAssetArtworkData:
destinationURLToUseForTask:
setDestinationURL:
setAVAssetURL:
newAVAssetDownloadSessionWrapperForTaskInfo:
setupThroughputMonitorForWrapper:taskInfo:identifier:
backgroundAVAssetDownloadTask:willDownloadToURL:
initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
setPriority:forTCPConnectionWithTaskIdentifier:
taskWithIdentifier:didCompleteWithError:
absoluteString
startAVAssetDownloadSessionWithTaskIdentifier:
backgroundAVAssetDownloadTask:didReceiveDownloadToken:
ensureAVAssetDownloadSessionWrapperForTaskIdentifier:
cancelThroughputMonitorForWrapper:
setupDelayedCompletionWakeTimer
cancelTCPConnectionForTask:withError:
backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:
backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
setResolvedMediaSelectionPlist:
retryTask:originalError:
downloadTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:identifier:uniqueIdentifier:reply:
dataTaskWithRequest:originalRequest:pipeHandle:identifier:uniqueIdentifier:reply:
hasEntitlementToSpecifyDownloadDestinationURL
adjustedTCPConnectionPriorityForTaskPriority:
stopAVAssetDownloadSessionWithTaskIdentifier:
_identifiersToAVWrappers
_identifiersToThroughputMonitors
_identifiersToTCPConnections
_identifiersToDASActivities
_clientConfig
_delayedWakeTimer
caseInsensitiveCompare:
addOperationWithBlock:
maxConcurrentOperationCount
PDURLSessionProxyOpenSocket
NSCopying
NDPowerlogReporter
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
nsurlsessiond_Additions
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
NSObject
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyServerService
PDURLSessionProxyServerDelegate
PDBluetoothCompanionLinkAssertion
CBScalablePipeManagerDelegate
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDAVAssetDownloadSessionWrapper
NDSessionManager
NDBackgroundSessionManagerProtocol
NDBackgroundSessionDelegate
NDBackgroundSession
NDApplicationObserver
NDBackgroundSessionProtocol
NDCallbackQueueDelegate
NSURLSessionDataDelegate_Internal
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegatePrivate
NSURLSessionDownloadDelegate_Private
NSURLSessionDelegate_Internal
NDCredentialStorageDelegate
NSURLSessionDelegateOptions_Internal
PDURLSessionProxyStartedUp
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
NSSecureCoding
NSCoding
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NDCloudContainer
BRContainerObserver
NDFPProvider
FPProviderObserver
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
NDUserSyncStakeholder
UMUserSyncStakeholder
UMUserSwitchStakeholder
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyServer
NSURLSessionDataDelegatePrivate
NSURLSessionStreamDelegate_Internal
NSURLSessionStreamDelegate
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
LSApplicationWorkspaceObserverProtocol
NSXPCListenerDelegate
NDSessionManagerDelegate
PDURLSessionProxyUploadBodyData
NDSpringBoard
NDAVThroughputMonitor
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
SZExtractor
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
NDAVAdditions
NDAVBackgroundSession
NDAVAssetDownloadSessionWrapperDelegate
DummyQueue
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8I16
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
I16@0:8
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
@24@0:8@16
v32@0:8Q16Q24
@"NSURLSessionTask"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
v32@0:8q16@24
{?="priority"b1}
@28@0:8@16S24
S16@0:8
v20@0:8S16
@"PBCodable"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v24@0:8@?16
v28@0:8@16B24
q32@0:8@16S24B28
Q24@0:8q16
B32@0:8Q16q24
v56@0:8@16S24@28@36B44@?48
v36@0:8@16S24@?28
v28@0:8@16S24
v44@0:8@16@24S32@36
v36@0:8@16B24@28
@"IDSService"
@"NSMutableDictionary"
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"PDURLSessionProxyServer"16
@"NSObject<OS_dispatch_source>"
@"PDBluetoothCompanionLinkAssertion"
v40@0:8@16@24@32
v24@0:8@"CBScalablePipeManager"16
v40@0:8@"CBScalablePipeManager"16@"NSString"24@"NSError"32
v32@0:8@"CBScalablePipeManager"16@"NSString"24
v32@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24
v40@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24@"NSError"32
@"NSUUID"
@"CBScalablePipeManager"
v24@0:8Q16
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
@"PDURLSessionProxyResponse"
@56@0:8@16@24@32@40@48
@"AVAssetDownloadSession"
@"AVURLAsset"
@"<NDAVAssetDownloadSessionWrapperDelegate>"
@"NSURL"
@"NSDictionary"
@"NSValue"
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
v56@0:8@"NSURLSessionConfiguration"16@"<NDBackgroundSessionClient>"24@"NSURL"32@"NSDictionary"40@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>48
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?>16
v32@0:8@"NDBackgroundSession"16@?<v@?>24
@36@0:8@16@24B32
@24@0:8^B16
B32@0:8@16@24
@?16@0:8
@"NSXPCConnection"
@"<NDSessionManagerDelegate>"
v24@0:8@"NDApplication"16
v64@0:8@16@24@32Q40@48@?56
v80@0:8@16@24@32@40Q48@56@64@?72
v56@0:8@16@24Q32@40@?48
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8Q16@24
v32@0:8@16Q24
v32@0:8q16Q24
v32@0:8d16Q24
v48@0:8Q16@24@32@?40
v96@0:8Q16@24@32@40@48@56@64Q72@80@?88
v88@0:8Q16@24@32@40@48@56Q64@72@?80
v64@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSString"32Q40@"NSString"48@?<v@?B>56
v80@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSURL"32@"NSData"40Q48@"NSString"56@"NSDictionary"64@?<v@?B>72
v56@0:8@"NSURLRequest"16@"NSURLRequest"24Q32@"NSString"40@?<v@?B>48
v48@0:8@"NSData"16Q24@"NSString"32@?<v@?B>40
v32@0:8Q16@?<v@?@"NSData">24
v32@0:8Q16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v48@0:8Q16@"NSDictionary"24@"NSString"32@?<v@?B>40
v96@0:8Q16@"NSURL"24@"NSURL"32@"NSURL"40@"NSString"48@"NSData"56@"NSDictionary"64Q72@"NSString"80@?<v@?B>88
v88@0:8Q16@"NSArray"24@"NSString"32@"NSData"40@"NSDictionary"48@"NSString"56Q64@"NSString"72@?<v@?B>80
@24@0:8Q16
v24@0:8@"NSError"16
v32@0:8@"NSError"16@?<v@?q@"NSURLCredential">24
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"16@0:8
@"NSString"24@0:8Q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v40@0:8@16@24q32
v36@0:8@16@24B32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
@32@0:8@16@24
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURLResponse"32
@"NSURL"32@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24
v44@0:8@16@24i32@?36
v48@0:8@16@24Q32@?40
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
v44@0:8@"NSURLSession"16@"NSString"24i32@?<v@?i>36
v28@0:8@"NSURLSession"16B24
v48@0:8@"NSURLSession"16@"NSString"24Q32@?<v@?i{?=qi}>40
d24@0:8d16
@28@0:8@16B24
@84@0:8@16@24B32@36@44@52@60@68@76
@20@0:8B16
@24@0:8q16
@32@0:8@16^B24
B40@0:8@16@24@32
v48@0:8@16Q24@32B40B44
B20@0:8B16
q20@0:8B16
v28@0:8Q16B24
@32@0:8@16Q24
v44@0:8@16@24Q32B40
B24@0:8Q16
B24@0:8^{__SecTrust=}16
@"NSURLSession"
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
{?="version"b1}
{?="continueLoad"b1}
v32@0:8@?16Q24
v32@0:8@?16q24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
^{__CFRunLoopSource=}
@"NSObject<OS_xpc_object>"
v40@0:8@16^@24^@32
#24@0:8S16B20
@32@0:8#16@24
q16@0:8
v24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?="streamErrorCode"b1"streamErrorDomain"b1}
v24@0:8:16
d16@0:8
v24@0:8d16
v24@0:8@"NSString"16
@"NDSpringBoardApplication"
@"BRContainersMonitor"
@"FPProviderMonitor"
{?="reason"b1}
@"NSLock"
@"UMUserSyncTask"
{?="shouldCancel"b1}
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v32@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24@"NSInputStream"32@"NSOutputStream"40
@48@0:8@16@24Q32@40
q28@0:8Q16B24
v40@0:8@16Q24@?32
@"NSURLSessionConfiguration"
@"<PDURLSessionProxyServerDelegate>"
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@80@0:8@16@24@32@40@48q56Q64@72
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"NDSessionManager"16@"NSString"24@?<v@?>32
@"NDUserSyncStakeholder"
I24@0:8@16
B36@0:8@16I24@28
@"BKSApplicationStateMonitor"
@"BKSSystemService"
@56@0:8@16@24q32Q40@48
@"NDAVAssetDownloadSessionWrapper"
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
@36@0:8i16Q20@28
@"NSArray"
@"<NDCallbackQueueDelegate>"
v48@0:8@16Q24Q32Q40
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSError"24
v48@0:8@"NDAVAssetDownloadSessionWrapper"16Q24Q32Q40
v48@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSValue"24@"NSArray"32@"NSValue"40
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSDictionary"24
v40@0:8@16@24Q32
q24@0:8q16
Error %d renaming item at %@ to %@
Exception caught trying to unarchive file at %@: %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
PDURLSessionProxyService setting preferInfraWiFi to NO
%@: Devices unpaired
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@ [%ld]
%@ Updated device state connected = %c
PDURLSessionProxyService setting preferInfraWiFi to %c
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
%@::%@ type = %u, connected = %c, isReply = %c, sourceApplication = %@
Unable to determine source application for message
Timed out waiting for reply for message, identifier = %{public}@, type = %u
Failed to send message! Type = %u, error = %@ [%ld]
%{public}@ sent NSURLSessionProxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu, result = %c
Subclass did not handle message %@ of type %u
Subclass did not handle message send failure for message %@
Received a reply with identifier %@ but don't have a corresponding reply block
%@::%@ outgoingResponseIdentifier = %{public}@, type = %u, isResponse = %c, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %c, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
%{public}@ receiving NSURLSession proxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu
Incoming (non-reply) message with identifier %{public}@ has priority %lld and sequence number %llu
%@::%@ success = %c, identifier = %{public}@, error = %@ [%ld]
Failed to send PDURLSessionProxy startup message, error %@
%@: activeAccountsChanged: %@
%@: didSwitchActivePairedDevice
PDURLSessionProxyServerService received CreateSession message for identifier %@ with existing UUID %@. Ignoring message.
PDURLSessionProxyServerService received CreateSession message for identifier %@ with UUID %@
PDURLSessionProxyServerService received message of type %u for session %@
PDURLSessionProxyServerService received Invalidate message for unknown session identifier %@, replying with BecameInvalid message
NSURLSessionProxy message of type %u received for unknown session with identifier %@
Received NSURLSessionProxy message of type %u without a session identifier
%{public}@: Relinquishing link requirements for %@
%{public}@: Releasing %{public}@
%{public}@: Acquiring...
%{public}@: Invalidating...
Got a nil AVAssetDownloadSession
Disavowing AVAssetDownloadSession
Taking power assertion for AVAssetDownloadSessionWrapper %lu
Failed to take power assertion for AVAssetDownloadSessionWrapper %lu
Releasing power assertion for AVAssetDownloadSessionWrapper %lu
Starting AVAssetDownloadSession
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
Launching application %@ since we could not restore session %@
Capturing boost activity from %@
Ending boost activity from %@
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client tried to set _duetPreauthorized but is missing the %@ entitlement
Client specified shared container identifier %@. App %@ can access: %d, Extension %@ can access: %d
Session with identifier: %@ for bundle id: %@ already has a connected client, returning nil proxy object to client
Connected client is an extension is attempting to a connect to a session without a valid shared data container
Reconnecting session with identifier: %@ for bundle id: %@
Connected client is an extension and did not specify a valid shared container identifier
Creating session with identifier: %@ for bundle id: %@
Coudn't create session with identifier: %@ for bundle id: %@
sendPendingCallbacksForIdentifier: %@
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
obliterateAllSessions for bundleID %@
Removing session with identifier: %@ for bundle id: %@
Obliterating session manager for bundle ID: %@
Client %@ is acting on behalf of cloud documents container with container id: %@ and bundle id: %@
Client %@ is acting on behalf of file provider id: %@ and bundle id: %@
Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
Client %@ is a SpringBoard application
Client %@ is a daemon or non-SpringBoard application
Couldn't find out download directory for %@. Not creating session
Session <%@>.<%@> using resource timeout: %f, request timeout: %f allowsCellularAccess: %d, allowsExpensiveAccess: %d _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
PlugIn %@ connected to session <%@>.<%@>
Application %@ was reinstalled, adjusting download paths
Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
Obliterating session: <%@>.<%@>
%{public}@ %f seconds past start time, new delay: %f, new window: %f
%{public}@ potentially discretionary, re-scheduling, was discretionary: %d, is now discretionary: %d
%{public}@ couldn't create new task. task: %@, path: %@
%{public}@ couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
%{public}@ error creating resume data: %@
%{public}@ could not create resume data. The server might not support resumable downloads. Will retry full download
%{public}@ restoring, which had never been started, will resume implicitly
Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
New download path: %@
%{public}@ completed with error %@ [%ld] (was active before nsurlsessiond exit)
Couldn't recreate existing task with identifier: %@ in session: <%@>.<%@>
Exception caught while restoring a task: %@
%{public}@ will retry after %lld seconds
%{public}@ not resumed but client disconnected, resuming it implicitly
Delivering pending events immediately for client session: <%@>.<%@>. Signalled already: %d, isHandlingBackgroundSession: %d
Waiting for notification to deliver pending events for client session: <%@>.<%@>
Received signal to deliver pending events for client session: <%@>.<%@>
Delivering pending events for client session: <%@>.<%@>
Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
Session: %@ get tasks for reconnection: %@
Current discretionary status for %@ is non-discretionary because the connected client is an extension
Current discretionary status for %@ is non-discretionary, since the app is being debugged
Current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
Current discretionary status for %@ is discretionary (opt-in: %d)
Current discretionary status for %@ is non-discretionary
%{public}@ should not begin before %@
%{public}@ can now begin - earliest begin date satisfied
%{public}@ no longer has a valid task or taskInfo, no need to begin
%{public}@ ignoring stale delay begin timer
%{public}@ can begin immediately - begin date is in past
%{public}@ has not requested a begin delay
%{public}@ cannot handle delayed request callback because task: %@ or taskInfo: %@ is nil
%{public}@ already replied to delayed request callback - not calling again
%{public}@ receiving delayed request callback
%{public}@ client is not running and doesn't support wakes, continuing load for delayed request
%{public}@ using new request from delayed request callback
%{public}@ will be canceled due to delayed request callback
%{public}@ continuing load from delayed request callback
%{public}@ skipping delayed request callback - delegate not implemented
%{public}@ resuming
%{public}@ will begin
%{public}@ cannot resume because task: %@ or taskInfo: %@ is nil
%{public}@ suspending
Failed to consume sandbox extension %s for fileURL %@
Error linking upload file: %@ [%ld]
Error copying upload file: %@ [%ld]
Created stream with file descriptor: %d
Couldn't deliver auth challenge to client, performing default handling
%{public}@ skipping acknowledgement teardown since it's not actually complete
Not waking up client %@ since sessionSendsLaunchEvents is NO
Not waking up client %@ since it doesn't support app wakes
Not waking up client %@ since session is obliterated
Not waking up client %@ since it's already connected
Waking up the client app: %@
Failed to wake app: %@
%{public}@ adding delay of %f
%{public}@ is duet preauthorized
%{public}@ enqueueing
Received a background download request from unsafe resume data from %@
Couldn't create task or taskInfo: task = %@, taskInfo = %@
Task <%{public}@>.<%lu> downloadTaskWithRequest: %@
Received an unsafe request for background download: %@ from %@
Task <%{public}@>.<%lu> uploadTaskWithRequest: %@ fromFile: %@
Received a background upload request for a file that the client cannot read: %@ from %@
Task <%{public}@>.<%lu> dataTaskWithRequest: %@
%{public}@ received resume data
%{public}@ cancelTaskWithIdentifier
%{public}@ suspendTaskWithIdentifier
%{public}@ unable to get the space available on disk
%{public}@ cancelling, as we are low on disk space
%{public}@ resumeTaskWithIdentifier, props %@
%{public}@ setPropertyOnStreamWithIdentifier, client %@ property %@
%@ tried to set the priority of a task but is missing the %@ entitlement
%{public}@ setting priority to %ld
%@ tried to set the loading priority of a task but is missing the %@ entitlement
%{public}@ setting loading priority to %f
%{public}@ setting limit of %lld bytes per second
InvalidateWithReply: for session %@ bundle ID %@
Cleaning up and invalidating immediately since there are no tasks
Session %@ didBecomeInvalidWithError: %@ [%ld]
Invalid trust status: %d, or result: %d
Extended trust validation failed
%{public}@ didReceiveChallenge: %@ protection space: %@ for client %@ received auth challenge with type %@
%{public}@ performing Extended Validation Trust evaluation
%{public}@ Extended Validation Trust evaluation succeeded
%{public}@ Extended Validation Trust evaluation failed
%{public}@ client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge
%{public}@ client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge
%{public}@ client is not running and doesn't support app wakes, performing default handling for auth challenge
%{public}@ client is not running and trust is valid, performing default handling for auth challenge
%{public}@ client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge
%{public}@ modifying conditional connection properties since new request %@ is to a different host than previous request %@
%{public}@ willPerformHTTPRedirection, response: %@, new request: %@
%{public}@ needs new body stream
%{public}@ didFinishCollectingMetrics
%{public}@ for client %@ will be retried after error %@ - code: %ld
%{public}@ failed to retry
%{public}@ completed with error %@ [%ld]
%{public}@ for client %@ was cancelled
%{public}@ for client %@ completed with error - code: %ld
%{public}@ for client %@ completed successfully
%{public}@ didReceiveResponse: %@, status code: %d
%{public}@ client disconnected with didReceiveResponse outstanding, responding with a cancel disposition
%{public}@ client responded to didReceiveResponse with disposition %d
%{public}@ received data task didReceiveResponse callback and there is no connected client. Canceling task.
%{public}@ did receive data (%lld of %lld total bytes)
%{public}@ received data and there is no connected client. Canceling task.
%{public}@ became download task
%{public}@ finished downloading to %@
%{public}@ didResumeAtOffset: %lld expectedTotalBytes: %lld
%{public}@ for client %@ _willSendRequestForEstablishedConnection
Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
%{public}@ established a connection which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
Perhaps the client %@ was uninstalled?
%{public}@ using proposed request since the client application is not running and doesn't support wakes
%{public}@ for client %@ is waiting for connection - reason: %lld
%{public}@ for client %@ conditions changed - satisfied: %d
%{public}@ download for client %@ received response, status code: %d
Need file descriptor for file at path %@
Client %@ does not support app wakes, cannot get file descriptor for download file!
Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
%{public}@ getAuthHeadersForResponse for %@ _sendsLaunchEvents=%s [_clientApplication supportsWakes]=%s
Failed to communicate with HTTP Authenticator for Client %@
%{public}@ received auth headers for response, continueLoad: %d
%{public}@ waking %@ for auth headers
%{public}@ getAuthHeadersForResponse does not have a remote object and does not support app wakes, canceling.
Simulating network change event since %lld seconds have passed
SCDynamicStoreCreateRunLoopSource failed: %s [%d]
SCDynamicStoreSetNotificationKeys failed: %s [%d]
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
Received a new connection from UserEventAgent! Canceling the old one
Updated Registered Launch-On-Demand Clients: %@
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
com.apple.nsurlsessiond enableBluetoothLinkRequirements is true - will assert bluetooth link requirements
com.apple.nsurlsessiond bluetoothLinkRequirementsOverrideTimerValue is %d
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
Exception %@ caught attempting to unarchive data of class %@, length %lu
Error %@ [%ld] deserializing auth headers
Error removing item at path: %@, error: %@ [%ld]
Error removing item at url: %@, error: %@ [%ld]
Failed to set mode 700 on path %s.  errno=%d
Failed to convert %s to a data-vault directory.  errno=%d
Couldn't create directory at %@, error: %@ [%ld]
Failed to create data-vault directory.  errno=%d
Couldn't create directory.  Unable to extract C-string from path argument: %@
Couldn't create directory.  No path provided.
Error getting caches directory: %@ [%ld]
Resetting request delay for %@
Set request delay for %@ to %f
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Being asked if container with identifier %@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %@ entered background
Container %@ entered foreground
Being asked if container with identifier %@ is foreground before getting callback from FPProviderMonitor!
FPProvider %@ entered background
FPProvider %@ entered foreground
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
%{public}@ didCompleteWithError message failed to send, so re-sending when devices are connected
%{public}@ message failed to send, so canceling task
dataTaskWithRequest message forTaskIdentifier %lu in session %@, currentRequest = %@
%{public}@ received task creation message and that task already exists. Sequence number: %llu, existing sequence number: %llu
%{public}@ canceling exisitng task since we received a new request for that task with a higher sequence number
%{public}@ received duplicate task creation message. Dropping message
%{public}@ using local task identifier %lu
%{public}@ acknowledging dataTaskWithRequest message
Received proxy request %@ with non-http URL. Dropping request.
%{public}@ receiving cancel task message
%{public}@ receiving suspend task message
%{public}@ receiving resume task message, props %@
%{public}@ receiving set description message, description = %@
%{public}@ receiving set priority message, priority = %lld
%{public}@ writing to stream returned %d, error %@ [%ld]
Open IDS Socket with UUID %@ to host %@ port %d
received tcp_connection (%p) event %lu
Received error %d reading from tcp_connection %p
Received error %d writing to tcp_connection %p
Received error %@ [%ld] reading from streamTask %@
Session %@ became invalid with error %@ [%ld]
%{public}@ didReceiveChallenge: %@, protection space: %@
%{public}@ _willSendRequestForEstablishedConnection
%{public}@ StreamTask %@ completed with error %@ [%ld]
%{public}@ ignoring task completion for task %@ with error %@ [%ld] in session %@ since we do not have an associated client taskIdentifier
%{public}@ client responded to redirect with request %@
%{public}@ didReceiveResponse: %@
%{public}@ received response disposition: %d
%{public}@ ignoring data of length %lu since we've already failed that task
%{public}@ did receive data with length %lu
%{public}@ data acknowledged, now has %lu bytes pending acknowledgement
%{public}@ acknowledging pending data
%{public}@ data pending, now has %lu bytes pending acknowledgement
%{public}@ immediately acknowledging data
%{public}@ will wait to acknowledge data
%{public}@ will be retried
%{public}@ will be retried - error: %@
%{public}@ is waiting for connection with reason: %lld
%{public}@ getAuthHeadersForResponse %@
%{public}@ canceling because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec
Could not set attributes of directory at %@, error: %@ [%ld]
Non-directory file exists at: %@. Removing it.
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
Failed to write archive to path: %@
Client is a PlugIn with bundle identifier %@
Containing app for PlugIn is %@
Failed to get bundle ID for client because it might not have the application-identifier entitlement
Process with pid %d does not have a bundle ID, rejecting connection
<%@>.<%@> Lost connection to app -- connection interrupted or invalidated
Application: %@ re-installed. Need to adjust download paths
Application: %@ uninstalled. Need to obliterate
nsurlsessiond started
Background updates are on
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
Background updates were turned off
Application %@ no longer foreground
Application %@ entered foreground
Application %@ was suspended
Application %@ was quit in the app switcher
Invalidating assertion for bundleID: %@. sessionID: %@
Couldn't create process assertion for %@
We already have an assertion for bundleID: %@, sessionID: %@. This shouldn't happen.
Error launching %@: %u
Successfully woke app %@ and took process assertion
Canceling AVAssetTask because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec
%{public}@ initialized appleIDAuthenticator, status codes = %@
%{public}@ StreamingZip - preparing for extraction to %@
%{public}@ Extractor prepare - Offset: %lld, error: %@ [%ld]
%{public}@ Failed to prepare for extraction - timed-out.
%{public}@ StreamingZip - no path available.  Wait for init with resume-info for the path.
%{public}@ Object does not support SZExtractor protocol.  Dropping this object. Class=%@
%{public}@ client acknowledged completion
%{public}@ client acknowledged file download
%{public}@ performing auth challenge callback, challenge %@
%{public}@ client responded to task challenge with disp %d, cred %@
%{public}@ performing will send request callback, request %@
%{public}@ failed to ask client for modified request, using original proposed request
%{public}@ client responded to will send request callback with request %@ handle %@
Performing open file at path callback for path %@ mode %d
Client responded to open file callback with handle %@
%{public}@ performing did finish collecting metrics callback
%{public}@ collected metrics %@
%{public}@ failed to deliver task metrics
%{public}@ failed to deliver resolved MediaSelection
%{public}@ performing begin delayed request callback
%{public}@ failed to ask client for delayed request disposition, continuing load
%{public}@ client responded to delayed request callback with disposition %d
%{public}@ failed to ask client for getAuthHeadersForResponse.
%{public}@ client responded to getAuthHeadersForResponse callback with continueLoad=%@, authHeaders=%@
%{public}@ draining authentication challenge callback
%{public}@ draining willSendRequest callback
%{public}@ draining openFileAtPath callback
Delayed wake timer fired for session <%@>.<%@>
Triggering delayed wake for session <%@>.<%@>
Scheduled delayed wake for session <%@>.<%@>
Canceling delayed wake for session <%@>.<%@>
%{public}@ failed to re-instantiate AVURLAsset with token %llu
Error getting container path: %llu
Error getting User managed assets path: %llu
Error removing file at location of asset downloads directory: %@ [%ld]
Error creating asset downloads directory: %@ [%ld]
Lowering priority of AVAssetDownloads for %@ since it is no longer in the foreground
Bumping priority of AVAssetDownloads for %@ since it entered the foreground
Cancelling AVAssetDownloads for session <%@>.<%@> since client was quit from app switcher
Task <%{public}@>.<%lu> avAssetDownloadTaskWithDownloadToken: %llu, URL: %@, destinationURL: %@, temporaryDestinationURL: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAssetDownloadSession %@
%{public}@ failed to instantiate AVAssetDownloadSession
%{public}@ failed to instantiate AVAsset, token %llu
Task <%{public}@>.<%lu> for client %@ does not have write access to destination directory %@
Task <%{public}@>.<%lu> avAggregateAssetDownloadTaskWithDownloadToken: %llu, serializedMediaSelections: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAggregateAssetDownloadTask asset: %@
%{public}@ retrying AVAssetDownloadTask
%{public}@ removing destination file for AVAssetDownloadTask in order to retry
%{public}@ will retry after %f seconds
Creating tcp_connection to host: %@, port: %d
%{public}@ tcp_connection_create() returned NULL (host %@, port %d, queue %@, taskInfo %@, URL %@)
Created tcp_connection: %@
%{public}@ received tcp_connection event %d
created AVAssetDownloadSession with token %llu
%{public}@ couldn't create AVAssetDownloadSession; returning an error
%{public}@ startAVAssetDownloadSessionWithTaskIdentifier wrapper: %@ taskIdentifier: %lu
%{public}@ canceling tcp_connection
%{public}@ completion woke client: %c
%{public}@ completion did not wake client and client is not active - requesting delayed wake
%{public}@ completion woke client or client is active - not requesting delayed wake
%{public}@ AVAssetDownloadSession did complete with error %@ [%ld]
(\8@fffff
@@)\
hF@ffffffN@
(\8@fffff
@@)\
hF@ffffffN@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleVersion</key>
<string>893.10</string>
<key>CFBundleDisplayName</key>
<string>nsurlsessiond</string>
<key>CFBundleShortVersionString</key>
<string>893.10</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nsurlsessiond</string>
<key>com.apple.carousel.defaulturlsessionpolicy</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.rootless.storage.nsurlsessiond</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nano.nanoregistry.paireddeviceregistry</string>
<string>com.apple.ProgressReporting</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>nsurlsessiond</string>
</array>
</dict>
</plist>
