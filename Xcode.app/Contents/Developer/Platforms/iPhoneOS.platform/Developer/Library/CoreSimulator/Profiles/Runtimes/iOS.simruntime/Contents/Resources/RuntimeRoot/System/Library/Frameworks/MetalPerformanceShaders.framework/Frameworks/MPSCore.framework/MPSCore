doesNotRecognizeSelector:
dealloc
init
debugDescription
name
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
initWithDevice:
device
_device
stringWithCString:encoding:
newLibraryWithFile:error:
setLabel:
buffer
bufferOffset
bufferBytesPerRow
length
newBufferWithLength:options:
setPurgeableState:
alloc
setSAddressMode:
setTAddressMode:
setRAddressMode:
setMinFilter:
setMagFilter:
setNormalizedCoordinates:
setMipFilter:
newSamplerStateWithDescriptor:
resourceList
appendTexture:
appendBuffer:
resourceListWithTextureDescriptors:
resourceListWithBufferSizes:
_list
makeAliasable
isAliasable
label
cpuCacheMode
storageMode
heap
allocatedSize
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
isFramebufferOnly
allowGPUOptimizedContents
contents
didModifyRange:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
count
objectAtIndexedSubscript:
initWithResource:
addCompletedHandler:
temporaryStateWithCommandBuffer:
temporaryStateWithCommandBuffer:bufferSize:
temporaryStateWithCommandBuffer:textureDescriptor:
temporaryStateWithCommandBuffer:resourceList:
resource
isTemporary
initWithResources:
initWithDevice:bufferSize:
initWithDevice:textureDescriptor:
initWithDevice:resourceList:
setReadCount:
synchronizeOnCommandBuffer:
resourceSize
resourceTypeAtIndex:
destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:
textureInfoAtIndex:
bufferSizeAtIndex:
resourceAtIndex:allocateMemory:
readCount
resourceCount
_resources
_resourceCount
_readCount
_label
_flags
_updatedAlready
getObjects:range:
enqueue
commit
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
presentDrawable:afterMinimumDuration:
waitUntilScheduled
waitUntilCompleted
blitCommandEncoder
renderCommandEncoderWithDescriptor:
computeCommandEncoder
computeCommandEncoderWithDispatchType:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
commandQueue
retainedReferences
kernelStartTime
kernelEndTime
GPUStartTime
GPUEndTime
status
error
userDictionary
objectForKey:
setObject:forKey:
removeObjectForKey:
cStringUsingEncoding:
localizedFailureReason
localizedDescription
initWithCommandBuffer:
newHeapBlock:
releaseHeapBlock:
commandBuffer
batchSizeHint
setBatchSizeHint:
_cmdBuffer
_debugMode
_freeList
_frameList
_retainedResources
_userCacheFrame
_minimumBin
_batchSize
_needsRetain
_totalAllocationBytes
_cacheDelay
setPixelFormat:
setWidth:
setHeight:
setArrayLength:
setTextureType:
setStorageMode:
setCpuCacheMode:
setUsage:
resourceOptions
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newTextureWithDescriptor:
addPurgedResource:
initForReadingFromData:device:error:
decodeTopLevelObjectOfClasses:forKey:error:
initWithObjects:count:
unarchivedObjectOfClasses:fromData:device:error:
initForReadingFromData:error:
unarchivedObjectOfClass:fromData:device:error:
unarchiveObjectWithData:device:
unarchiveTopLevelObjectWithData:device:error:
unarchiveObjectWithFile:device:
mpsMTLDevice
initForReadingWithData:device:
defaultAllocator
initWithDevice:imageDescriptor:
featureChannels
featureChannelsLayout
numberOfImages
imageForCommandBuffer:imageDescriptor:kernel:
copyWithZone:
setNumberOfImages:
batchRepresentation
arrayWithObjects:count:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
imageBatchForCommandBuffer:imageDescriptor:kernel:count:
_dealloc_ok
temporaryImageWithCommandBuffer:imageDescriptor:
imageDescriptorWithChannelFormat:width:height:featureChannels:numberOfImages:usage:
imageDescriptorWithChannelFormat:width:height:featureChannels:
newTextureDescriptor
debugQuickLookObject
setFeatureChannels:
setFeatureChannelsLayout:
channelFormat
setChannelFormat:
_width
_height
_featureChannels
_numberOfImages
_channelFormat
_cacheMode
_storageMode
_usage
_featureChannelsLayout
_cpuCacheMode
initWithTexture:featureChannels:featureChannelsLayout:
initWithDescriptor:featureChannels:featureChannelsLayout:onDevice:
initWithFormat:
initWithParentImage:sliceRange:featureChannels:
arrayWithObject:
batchRepresentationWithSubRange:
arrayWithCapacity:
setObject:atIndexedSubscript:
imageWithCGImage:
getPixelChannelSize
readBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
texture
precision
pixelSize
initWithTexture:featureChannels:
subImageWithFeatureChannelRange:
writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:imageIndex:
writeBytes:dataLayout:imageIndex:
.cxx_destruct
.cxx_construct
parent
_textureType
_pixelInfo
_parent
_texture
temporaryImageWithCommandBuffer:textureDescriptor:featureChannels:
addObject:
allObjects
temporaryImageWithCommandBuffer:textureDescriptor:
prefetchStorageWithCommandBuffer:imageDescriptorList:
libraryInfo
sharedInitWithDevice:
copyWithZone:device:
allocWithZone:
encodeInt32:forKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeBool:forKey:
initWithCoder:device:
decodeInt32ForKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
isEqualToString:
disableConcurrentEncoder
options
setOptions:
fileVersion
setFileVersion:
enableConcurrency
setEnableConcurrency:
_options
_library
_enableConcurrency
_allowedOptions
_tuningParams
_maxTuningParams
_fileVersion
_privateOptions
minimumLinearTextureAlignmentForPixelFormat:
newCommandQueue
heapTextureSizeAndAlignWithDescriptor:
dictionary
setObject:forKeyedSubscript:
setComputeFunction:
setDriverCompilerOptions:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
userInfo
mainBundle
bundleIdentifier
newComputePipelineStateWithDescriptor:options:completionHandler:
newFunctionWithName:constantValues:error:
newFunctionWithName:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithDescriptor:error:
newFunctionWithName:constantValues:completionHandler:
setConstantValue:type:atIndex:
setComputePipelineState:
setTexture:atIndex:
setBytes:length:atIndex:
setSamplerState:atIndex:
dispatchThreadgroups:threadsPerThreadgroup:
device:     %p "%@"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
library not found at "%s"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/Utility/MPSDeviceComputePipelineState.mm
default
MetalPerformanceShaders internal error: library "%s" not found
/System/Library/Frameworks/MetalPerformanceShaders.framework/
%s/%s.metallib
v8@?0
/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/vImage
/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/vecLib
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
vImageConvert_PlanarFtoPlanar16F
vImageConvert_Planar16FtoPlanarF
vImagePermuteChannels_ARGB8888
Error: could not find vImage.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/Utility/Float2Half.mm
vImageByteSwap_Planar16U
hw.optional.f16c
label
T@"NSString",C
device
T@"<MTLDevice>",R
cpuCacheMode
storageMode
heap
T@"<MTLHeap>",R
allocatedSize
rootResource
T@"<MTLResource>",R
parentTexture
T@"<MTLTexture>",R
parentRelativeLevel
parentRelativeSlice
buffer
T@"<MTLBuffer>",R
bufferOffset
bufferBytesPerRow
textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
framebufferOnly
TB,R,GisFramebufferOnly
allowGPUOptimizedContents
TB,R
length
[%@ initWithResource:] Error: resource is neither a MTLTexture or a MTLBuffer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/MPSState.mm
v16@?0@"<MTLCommandBuffer>"8
MPSState %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
%@ %p "%@" invalid operation: Adjusting read count on a non-temporary state.
%@ %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
readCount: %lu
isTemporary: %s
resource count: %lu
resources:
[%lu] texture %@
[%lu] buffer  %@
[%lu] <unknown resource format %u>
[%@ synchronizeOnCommandBuffer:] Error: can not synchronize a temporary MPS resource.  They are GPU private and not readable on CPU.
[%@ textureInfoAtIndex] Error: index is too large
[%@ textureInfoAtIndex] Error: resource at index %lu is not a texture
[%@ bufferSizeAtIndex] Error: index is too large
[%@ bufferSizeAtIndex] Error: resource at index %lu is not a buffer
resourceCount
TQ,R,N,V_resourceCount
readCount
TQ,N,V_readCount
isTemporary
TB,R,N
resource
T@"<MTLResource>",R,&,N
Error: attempted to resurrect or overrelease a state with readcount 0,
MPSStateBatchIncrementReadCount() Error: attempted to adjust readcount of object with count of %lu by %ld,
MPSImageBatchSynchronize(): Error: image[%lu] is a temporary image and can not be read on the CPU.
[%d] texture %@
[%d] buffer: size = %lu
%@%@
[%@ resource] Internal error: unhandled resource type
/BuildRoot/Library/Caches/com.apple.xbs/Binaries/MetalImage_Sim/install/Symbols/BuiltProducts/MPSCore.framework/PrivateHeaders/Internal/MPSStateInternal.h
Error: %p is not a MTLBuffer or a MTLTexture
MPSCommandBufferImageCache
[%@ initWithCommandBuffer:computeEncoder: commandBuffer may not be nil
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/Utility/MPSCommandBufferImageCache.mm
commandQueue
T@"<MTLCommandQueue>",R
retainedReferences
kernelStartTime
Td,R
kernelEndTime
GPUStartTime
GPUEndTime
status
error
T@"NSError",R
[%@ initWithCommandBuffer:computeEncoder: commandBuffer does not conform to the MTLCommandBuffer protocol
MPS internal error: attempted to make a new heap for a command buffer that already has one
Error: command buffer exited with error status, but did not provide an error message.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: command buffer exited with error status.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: 
cache frame %lu:
probable %s leak: %p (label=%s)
Internal error: MPSCommandBufferImageCache destroyed while %lu MTLResources still outstanding. MTLResources might be leaked.
Internal error: Failed to clean up command buffer image cache frame list.
commandBuffer: %@
%lu MTLResources. %lu frames.
commandBuffer: %@
commandBuffer
T@"<MTLCommandBuffer>",R,N,V_cmdBuffer
batchSizeHint
TQ,N,V_batchSize
MPSKernel: out of memory
Internal error: the popped cache frame wasn't the top of the stack
Internal error: Released a texture with no current cache frame.
Internal error: Released a texture not in current cache frame.
Attempted to create a temp texture using a non-writable MTLPixelFormat (%u)
Failed to allocate temp texture descriptor for format %u
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture storage mode must be MTLResourceStorageModePrivate.
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture descriptor.usage must be at least MTLTextureUsageShaderRead | MTLTextureUsageShaderWrite.
Failed to allocate private MTLTexture for format %s
Failed to allocate private MTLBuffer for size %lu
MPSGetTemporaryTextureFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempTexture() instead. Otherwise we may leak.
MPSGetTemporaryTextureFromCommandBufferCache: MTLPixelFormat (%lu) for descriptor is unsupported.
MPSGetTemporaryTextureFromCommandBufferCache: temp texture formats must be writable.
MPSImage internal error: attempted to resurrect dead image backing store.
MPSAutoTexture::AllocateTexture Is missing its texture descriptor
MPS internal error: ReleaseTemporaryTexture() called on non-temporary texture
(texture not yet allocated)
device: %@
descriptor:  %@
MPSMatrix internal error: attempted to create 0 sized object.
MPSGetTemporaryBufferFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempBuffer() instead. Otherwise we may leak.
Attempted to init a MPSMatrix twice?
MPS internal error: attempted to release a temporary buffer for a MPSMatrix?
buffer (not yet allocated)
size = %lu
device: %p
MPSCommandBufferImageCache internal error:  cache over popped
Failed to allocate TextureNode
User memory error: The MPSImage default allocator belongs to MPS and should not be released by you.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/Types/MPSImage.mm
supportsSecureCoding
MTLTextureUsageShaderRead
MTLTextureUsageShaderWrite
MTLTextureUsageRenderTarget
MTLTextureUsagePixelFormatView
MTLTextureUsageUnknown
%@ | %s
MPSImageFeatureChannelFormatNone
MPSImageFeatureChannelFormatUnorm8
MPSImageFeatureChannelFormatUnorm16
MPSImageFeatureChannelFormatFloat16
MPSImageFeatureChannelFormatFloat32
MTLStorageModeShared
MTLStorageModeManaged
MTLStorageModePrivate
MTLStorageModeMemoryless
MTLCPUCacheModeDefaultCache
MTLCPUCacheModeWriteCombined
width:             %lu
height:            %lu
featureChannels:   %lu
featureChanLayout: %lu
number of Images:  %lu
channel format:    %s
cache mode:        %s 
storage mode:      %s
usage:             %@
featureChannelsLayout
TQ,N,V_featureChannelsLayout
TQ,N,V_width
TQ,N,V_height
featureChannels
TQ,N,V_featureChannels
numberOfImages
TQ,N,V_numberOfImages
TQ,R,N
channelFormat
TQ,N,V_channelFormat
TQ,N,V_cpuCacheMode
TQ,N,V_storageMode
TQ,N,V_usage
Metal Performance Shaders: you may not initialize a %@ with -init
[%@ initWithDescriptor:featureChannels:onDevice:] descriptor may not be nil.
[%@ initWithDescriptor:featureChannels:onDevice:] device may not be nil.
array length must be multiple of (featureChannels+3)/4
[%@ initWithTexture:] textureType (%s) is unknown to MPS or has 0 color channels.
[%@ initWithTexture:] Texture pixel format doesnt match number of feature channels.
[%@ initWithTexture:] Texture pixel format doesn't match number of feature channels.
[%@ initWithDevice:] texture may not be nil.
[%@ initWithDevice:] device may not be nil.
Texture array length must be multiple of number of slices %lu needed to hold %lu feature channels
[%@ initWithDevice:imageDescriptor:] descriptor may not be nil.
[%@ initWithDevice:imageDescriptor:] width must be >= 1 .
[%@ initWithDevice:imageDescriptor:] height must be >= 1 .
[%@ initWithDevice:imageDescriptor:] feature channels must be >=1 .
[%@ initWithDevice:imageDescriptor:] number of images must be >= 1 .
[%@ initWithDevice:imageDescriptor:] descriptor.channelFormat may not be MPSImageFeatureChannelFormatNone
[%@ initWithParentImage:sliceRange:featureChannels:] Error: self and parent must belong to the same class.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: This method only works on images that are interleaved per texel.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: feature channels may not be zero.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: %lu feature channels is %lu slices. That doesn't divide evenly into sliceRange.length = %lu.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: parent image has readCount of 0
sub-image of %p %@
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.length must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: This method only works on images with a .numberOfImages = 1. Please make a sub-batch first.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location (%lu) does not fall within the number of feature channels in the image (%lu)
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location is larger than the number of feature channels in the image.
[%@ subImageWithFeatureChannelRange:] Error: The feature channel range {%lu, %lu} would result in a image with no texels.
[%@ subImageWithRange:] Error: The subRange.location is larger than the number of images in the image.
%@ "%@"
device: %p "%@"
width: %lu
height: %lu
featureChannelsPerImage: %lu
numberOfImages: %lu
MTLPixelFormat: %s
parent:  %p
texture: %p
<Err: temporary images are unavailable for display. Contents are usually heavily aliased.>
<Err: texture backing store has not been materialized yet. Nothing to see here...>
vImageBuffer_Init
vImageCreateCGImageFromBuffer
CGColorSpaceRelease
CGImageRelease
CGColorSpaceCreateDeviceGray
<Err: unable to transcode texture to CGImage>
UIImage
[%@ initWithDevice:] feature channels for monochrome MTLPixelFormats must be 1.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatR{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] %lu channel MTLTextureFormats must have %lu feature channels.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRG{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] feature channels must be >=3 .
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] invalid texture format %lu.
[%@ initWithDevice:] invalid region, region is bigger than imageSize
[%@ initWithDevice:] invalid featureChannelInfo, .featureChannelOffset : %lu not non-negative and multiple of 4
[%@ initWithDevice:] invalid featureChannelInfo, .numberOfFeatureChannelsToReadWrite : %lu not non-negative and multiple of 4 (.numberOfFeatureChannelsToReadWrite is allChannels)
[%@ initWithDevice:] invalid featureChannelInfo, more feature channels %lu copied than available from offset %lu.
[%@ initWithDevice:] internal allocation error.
sizeOfOneFeatureChannelData
[%@ initWithDevice:] invalid featureChannelInfo, .numberOfFeatureChannelsToReadWrite : %lu not non-negative and multiple of 4 (unless .numberOfFeatureChannelsToReadWrite is allChannels)
-[MPSImage writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:]
TQ,R,N,V_featureChannelsLayout
T@"<MTLDevice>",R,&,N
TQ,R,N,V_width
TQ,R,N,V_height
TQ,R,N,V_featureChannels
TQ,R,N,V_numberOfImages
precision
pixelSize
texture
T@"<MTLTexture>",R,N
T@"NSString",C,V_label
parent
T@"MPSImage",R,&,N,V_parent
[%@ initWithDevice:] width must be >= 1 .
[%@ initWithDevice:] height must be >= 1 .
[%@ initWithDevice:] feature channels must be >=1 .
[%@ initWithDevice:] number of images must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] pixel format (%lu) is unknown / unsupported.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] commandBuffer may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.width must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.height must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.arrayLength must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] error: descriptor storageMode must be MTLStorageModePrivate.
[%@ prefetchStorageWithCommandBuffer:imageDescriptorList:] Error: the descriptor must be configured with MTLStorageModePrivate
[%@ setPurgeableState:] error: changing purgeable state on a MPSCNNTemporaryImage will result in undefined behavior.  The memory is owned and managed by the framework.
MPSTemporaryImage %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
Error: attempted to decrement readCount when already 0.
If you need to read from a MPSTemporaryImage more than once, set the readCount to indicate how many times it will be read.
Please see the header comments about the MPSTemporaryImage.readCount property for more information.
Error: attempted to decrement readCount on a non-temporary image.
Error: attempted to resurrect or overrelease a object with readcount 0,
Error: attempted to increment readcount by %ld on object with readCount %lu:
MPSTemporaryImage %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
readCount: %lu
[%@ initWithDevice:] invalid MTLPixelFormat %lu.
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) must be a unorm, snorm or float format
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) is not a writable format but marked MTLTextureUsageShaderWrite
[%@ initWithDevice:] MPSImage.width must be > 0. (If created with a MTLTexture, MTLTexture.width > ((featureChannels+3)/4).)
Error: This MPSImage (%lu slices) would exceed the maximum allowed number of slices in a Metal texture array (%lu slices).
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float}.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/Filters/MPSKernel.mm
[%s initWithDevice: %p] device is not supported: %s
Returning nil.
[%@ copyWithZone:device:] device may not be nil.
[%s copyWithZone:device: %p] device is not supported: %s
Returning nil.
MPSKernelOptionsNone
MPSKernelOptionsSkipAPIValidation
MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsInsertDebugGroupsMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerboseMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
<invalid options list>
%@ "%@"
device:        %p
options:       %s
concurrent:    %s
[%@ initWithCoder:device] Error: file version too new to decode.
enableConcurrency
TB,N,V_enableConcurrency
fileVersion
T(?=I{?=b8b8b16}),N,V_fileVersion
options
TQ,N,V_options
MPS_LOG_INFO
MPSKernel._fileVersion
MPSKernel._options
MPSKernel._tuningParams
MPSKernel._maxTuningParams
MPSKernel._label
MPSKernel.originalDevice
MPSKernel.tableOptions
MPSKernel.enableConcurrency
MPSDisableExternalImplementationsSPI() error:  Unable to find MPSDevice for MTLDevice: %p
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/Utility/MPSDevice.mm
Error: MPS does not support the iOS simulator.
MetalPerformanceShaders global queue
Library ID %lu not initialized yet. Skipping...
Testing library: %lu
Failed to create state: %@
<empty table>
setupMPSFunctionTable:
kMPSReturnSuccess
kMPSReturnOutOfMemory
kMPSReturnSourceInvalid
kMPSReturnSourceSizeInvalid
kMPSReturnSourceFormatInvalid
kMPSReturnDestinationInvalid
kMPSReturnDestinationSizeInvalid
kMPSReturnDestinationFormatInvalid
kMPSReturnBufferInvalid
kMPSReturnBufferSizeInvalid
kMPSReturnKernelSizeInvalid
kMPSReturnKernelValuesInvalid
kMPSReturnOptionsInvalid
kMPSReturnDeviceMismatch
kMPSReturnDeviceUnsupported
kMPSReturnOffsetInvalid
kMPSReturnClipRectInvalid
kMPSReturnEncoderInvalid
kMPSReturnCanNotOperateInPlace
kMPSReturnInternalError
kMPSReturnInvalidOperation
kMPSReturnCommandBufferInvalid
kMPSReturnInvalidMPSImageFormat
kMPSReturnInvalidMPSImageDimension
kMPSReturnUnsupportedMPSImageFeatureChannelFormat
kMPSReturnEdgeModeInvalid
kMPSReturnInvalidCNNTexture
kMPSReturnStrideInPixelsInvalid
kMPSReturnOperationNotSupportedByPlugin
kMPSReturnDescriptorInvalid
kMPSReturnEncodingInvalid
kMPSReturnInvalidState
<invalid MPSReturn code>
latency1
scheduleOption
latency2
MPSLibrary::MPSKey_Create internal error: Unable to get MPS kernel %@.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-119.3/MPSCore/Utility/MPSLibrary.mm
MPSKernel MTLComputePipelineStateCache unable to load function %@.
%@: %@
com.apple.metal.MPS.%@-%@
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
v24@?0@"<MTLFunction>"8@"NSError"16
MPS internal error on MTLLibrary %p: invalid kernelID %u
MPS internal error on MTLLibrary %p: kernelInfo[%u].kernelName uninitialized
MPS internal error: could not create specialized function with name %@
MPS compilation error:  failed to create MTLComputePipelineState for function: %@
MPS internal error: unable to acquire rwlock for reading: %d
MPS internal error: unable to acquire rwlock for writing: %d
copy_float
copy_float_2darray
copy_uint
copy_uint_2darray
copy_int
copy_int_2darray
MPSExternalPluginBase
NSObject
MPSStateResourceList
MTLTexture
MTLResource
MTLBuffer
MPSState
MTLCommandBuffer
MPSCommandBufferImageCache
MPSKeyedUnarchiver
MPSDeviceProvider
MPSImageDefaultAllocator
MPSImageAllocator
NSSecureCoding
NSCoding
MPSTemporaryImageDefaultAllocator
MPSImageDescriptor
NSCopying
MPSImage
MPSTemporaryImage
MPSVirtualImage
MPSKernel
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@24@0:8@"<MTLDevice>"16
@"<MTLDevice>"16@0:8
@"<MTLDevice>"
@24@0:8Q16
v24@0:8@16
v24@0:8Q16
v16@0:8
^{ResourceListNode=^^?^{ResourceListNode}}
Q24@0:8Q16
v24@0:8@"NSString"16
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
^v16@0:8
v32@0:8{_NSRange=QQ}16
@40@0:8@16Q24Q32
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@32@0:8@16Q24
@32@0:8@16@24
@48@0:8@16@24@32@40
{MPSStateTextureInfo=QQQQQQQ[4Q]}24@0:8Q16
@28@0:8Q16B24
^{MPSStateResource=S(?={MPSAutoTexture={atomic<void *>=A^v}{?=QQ}Q(?={?=^{MPSAutoTexture}II}{?=@(?={?=@}{?=@})})CC}{MPSAutoBuffer={atomic<void *>=A^v}Q@@{?=QQ}})}
@"NSString"
v24@0:8@?16
v32@0:8@16d24
v32@0:8@16Q24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLCommandQueue>"16@0:8
@"NSError"16@0:8
^{MPSDevice=^^?^{MPSDevice}@^{MPSDeviceFreeList}{atomic<MTLLibraryNode *>=A^{MTLLibraryNode}}[2[2[2{atomic<void *>=A^v}]]][563{MPSPixelCapabilities=b1b1b1b1b1b2b1b8}]^{MPSFunctionTable}{atomic<void *>=A^v}Ii{MPSGPUInfo=b8b8b8b16b4b20}[81{atomic<MPSLibrary *>=A^{MPSLibrary}}]}
@"<MTLCommandBuffer>"
[65^{HeapNode}]
^{CacheFrame=^{CacheFrame}^{ResourceNode}^{HeapNodeBlock}}
^{ResourceNode=^{ResourceNode}@}
^{MPSAutoCache=@@^{CacheFrame}}
@48@0:8@16@24@32^@40
@48@0:8#16@24@32^@40
@40@0:8@16@24^@32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
^{NSArray=#}48@0:8@16@24@32Q40
@"MPSImage"40@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32
^{NSArray=#}48@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32Q40
@48@0:8Q16Q24Q32Q40
@64@0:8Q16Q24Q32Q40Q48Q56
@24@0:8^{_NSZone=}16
@48@0:8@16Q24Q32@40
@48@0:8@16{_NSRange=QQ}24Q40
@32@0:8{_NSRange=QQ}16
^{NSArray=#}16@0:8
^{NSArray=#}32@0:8{_NSRange=QQ}16
v120@0:8^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v112@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v120@0:8r^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v112@0:8r^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v40@0:8^v16Q24Q32
v40@0:8r^v16Q24Q32
{MPSPixelInfo="pixelFormat"b10"chunkSize"b6"chunkWidth"b4"chunkHeight"b4"pixelStyle"b4"colorModel"b4"bitDepth"b8"isSigned"b1"isClamped"b1"isInteger"b1"canFilter"b1"canRender"b1"canWrite"b1"canMultisample"b1"isSupported"b1"isCompressed"b1"chunkSizePlane2"b6"log2MinAlignment"b4"_padding"b5}
@"MPSImage"
{MPSAutoTexture="_texture"{atomic<void *>="__a_"A^v}"_resourceSize"{?="size"Q"align"Q}"_rowBytes"Q""(?="_subTex"{?="parent"^{MPSAutoTexture}"subRangeStart"I"subRangeSize"I}""{?="_descriptor"@"MTLTextureDescriptor"""(?="_tex"{?="device"@"<MTLDevice>"}"_temporary"{?="cache"@"MPSCommandBufferImageCache"})})"_type"C"_twiddled"C}
@40@0:8@16@24Q32
v32@0:8@16@24
r^{MPSLibraryInfo=iI*{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}}16@0:8
@32@0:8^{_NSZone=}16@24
(?=I{?=b8b8b16})16@0:8
v20@0:8(?=I{?=b8b8b16})16
v20@0:8B16
^{MPSLibrary=@^{atomic<MPSKey_data *>}Q(?=^{MPSDeviceSpecificInfo}^{MPSDeviceBehaviors})Q[64^{MPSKey_data}]{_opaque_pthread_rwlock_t=q[192c]}^{?}}
(?="bits"I""{?="mpsKernelVersion"b8"intermediateObjectVersion"b8"version"b16})
@(#)PROGRAM:MPSCore  PROJECT:MPS-1
