mcpl
@333333
pbhw
pbtb
pbiu
otua
rae2
yawa
ciov
bhev
eltb
ciov
emoh
siar
emoh
emoh
cvpc
mcpl
nnnnnnnnnnnnnnnn
kkkkkkkkkkkkkkkk
3{[?
G'f.
G'ft
1111111111111111
oPkb
o}Y7
jlohrigmpqnftkse
_#O!
3nZ)(
@WZR
3i*/
kAzCS
Q'SjM
ogsfptqlrhnmiekj
9$/D[
a04S
bua%b
ks}gwi{
eyqu53
P&]%
+YuqP
PC\U
`Jc(
OW*n|[8
C{tE
*}#y2
W^Sfj's%
wBj4
/;90LDe
]<CR
*ijW
Hsmx 
[BZVJ
iPhone3,3
iPad2,4
iPad2,1
Xugg
`Txy@
x>B:~
aq1_
V4~T
!53+
+Yba
sMsM
#7^7
'`eW
r2Qm0
RIgz
Bv7?
<o8e2
veV8
fd2
}7;K
u\S,~
]'mY^
ayW>K 
l?~^
}crw
 4Z3-
#n}:9=~
N|\;
EgQi%
zj}^
8$qLm
JBaU
A{"0!
1Tzhg\le
T5Yh
~x"x
~2 =
[9Dv
$)m+
T%:?H
>^2P
JaTE
!Aiy
1'7i
:,E1
"]:e
a6G4
Oe&dF
&<"cxm
S0(^m
ZVcn
k"$k
T`6(
3VD
eH(6:
up.H
rhf_r:5
&%&]
"<!X
<SGl
~tgy
&kzJmRO
g_W0
Q<3}m
T5'uO
@&wR
*7fq
v{NI
gP")
4:<2
g3YG
<haC
yVi
%\n5'KF
D#G\F4o
?']Y
CELj
(?_!
k.8s
4{0#6l
`\7 
iPad3,1
PVz(J,
'~M\o6
#zI)
CpaR
PcrA
+Kx!
4m^O|%
;bQ1
[hyJ
_l?fUDw.
,uFWd=
H{jY
3S`9
SKUZ
o{&]
bjHP
r~)]
>~b 
Tx+"
V)O^~
XqiF
JJLD
I,F{`y
oO^c
LMfN
Rn\.q_=
*J}S
6"43
8cXB
&pm{
~KeZ
3_{.
ar&Y
gOFX
Bk-#\H
^#1/
E^>P
K"]?I
<z6O
RHX.8
mui
VKO\e
'Sh[
h#'>N99
N@,6bn>#
U8-1
?X5l'6
V|]g
<Fd6B'
>,pI
#UeS}
R$:OR$:hR$:
R$:QR$:jR$:
R$:_R$:8R$:
R$:4R$:
R$:aR$::R$:
R$:6R$:
R$:lR$:SR$:
R$:nR$:UR$:
R$:<R$:cR$:
R$:0R$:
R$:>R$:eR$:2R$:
R$:+R$:
R$:?R$:XR$:
R$:-R$:
R$:AR$:ZR$:
R$:{R$:
R$:$R$:oR$:HR$:
R$:&R$:}R$:
R$:qR$:JR$:
R$:'R$:\R$:CR$:
R$:)R$:
R$:^R$:ER$: R$:
R$:wR$:
R$:LR$:sR$:
R$:yR$:"R$:
R$:NR$:uR$:
R$:iR$:RR$:
R$:gR$:PR$:
R$:5R$:
R$:9R$:bR$:
R$:3R$:R$:
R$:7R$:`R$:
R$:VR$:mR$:
R$:TR$:kR$:
R$:1R$:
R$:fR$:=R$:
R$:/R$:dR$:;R$:
R$:YR$:BR$:
R$:.R$:
R$:WR$:@R$:
R$:,R$:
R$:IR$:rR$:%R$:
R$:~R$:GR$:pR$:
R$:|R$:#R$:
R$:FR$:]R$:*R$:
R$:DR$:[R$:
R$:(R$:
R$:vR$:MR$:
R$:zR$:
R$:!R$:
R$:tR$:KR$:
R$:xR$:
I3/K
Ee/O
cNs4<
 O{g
n8;U/
<tkEr
3 Z
uQHq
A=~-Qs8Ro)
Tu"<
Ab3ob
;:G3T\[:l
VF>^
DGn|
*:/t
=nFm
,8'?6
C3dW
HB`K
WIiPad2,10
/A(z
l.L]
9L+XDf
1`U9d
5'b"
I"-r
R>nS
w ?td
l)?c
?KM5g
u(kL
tzt<
iPhone3,2
iPad4,1
^Nnw
T/{t@i
iPad2,2
24pM
]EU69l
ynT6u
G_Jv
hl5*
6()4
nO,'{
yN @e3
)<ytz
~JkE
=AE/2
:Gyw
i=<X
b(#n
P;O
,s[2
.nFJ
#R-0w
0$KM|3
`)^a
r[1}o}
c6nP
u'I6|
G!_&
7le[
Leg`#
U$w5
Zy!$}
]Sh
`c&Q'
l"76
$N$`
oe^Sd
tzD0$
>)>ES
VXT}Di
:#X>
x5(?@/
q (4
+V)2
,OY}
EC6r
iPhone5,1
AAAA000BBBB1
Ko$8
3ytG
!71=5gN
6p$6
%l5ox-`
,NvL:
{I_$/
Io#V
su'ct
Sa y
On~8v
:(M5`
|N6T
cAd
}([XA^
%JDN
~nm3
Q@<B
BWBT
[Cl+
Zy&
q4`T
i[V`*
Miao
)Z{7
0iPhone6,1
54n"m.
K#Ev
PlZ0 
.aam
~nl4
{8-x
4jGw
HL"'g
gP`c
25Po(
wu/9
[KVg
_O4}8"
%Zvf
p^3
G+7?0.
 TZDBn
|(>y
!TwN
"Y8@u
q'{&
J;1.
L*1V
E%;(
uNZ4m+X
?wj&
bO,Y
q(dD
)7cY
2,fb&|
@#}=\qA
0-bOE
iPad3,3
iPad3,4
Ic|)
WNy'
7MXn
&zbIc|)
WNy'
7MXn
&zbIHYHq~}Sv{zb}x|l
<Vo/l;
|gF}b
D>S@.a
K$Zp
#f9_
Jf ~y
M%*v
1oqC
oc,L3
QIV,
iPad2,8
NWm=
nm#N
qQs.
}rT'
\bJw_
~[]E
-C.cD
8|ux4
<?)g
SFq1m
Ffn#
NJ=[
ML@)
K,f$h
UkT{
[RB)P
m0h
_iPod4,1
\k^f
PiPad3,6
/TPEY&-
AD7-
iPhone3,1
twNarxC
j&o1
Cs|t
OVs)
m0ki
d0klLh
!5l6p
^{J%
ZRLq
n#}E
\:P:oF
pE/)j}
L&:%q
=iPad4,3
n7-5
l_&9V
GQBh
F-Epg
iPad4,2
!xWEyz+
^)d>U>#
B3EG
U:tx
M[k
6xx|
S@sO,5n
HW_MACHINE
lNo=
l3=i
>0/T
b\]D
Tl0<
73M(H
_n+w
RJ>d
5MQpv
0q[k]
DuI U
^wRW
s?-]
.);0
[idd
787J5H
_VJ1
F!($
R2ZH
y?r.t
/u5u
N0Iz
RE-?
9H21
,q,k
AJ4CS5
}O~Fo{
\X`f
S*>8
q)O)
U0l*
{iSJ
i?Yae
7Z%luH
P;XC@
hsw{
grtv
hsw{
,{g'
@hu<StM
_BB}|Ql
V>'-
>:xp9
Os%3
O>MU
_Dlj
SI`La
%M@T
P'1e
.*JE
*c,4Db]
$Q0!
Y`/=
;vd.=/
SZvW,s
$dJ[
BEms^
!MQr
0'FuM
P#Jwj
DhEJ
Ut\@
<JA>jJB
j@r/z
3`@]Q5dQ
>]`@
&I62
`za5
PiPad2,5
@+'2Xp
5C{w
O]"w
||YT
A@Gg
99ZYC
~?v1
U:&<
.B^4BNm
^INSXINSXINSXINSXGKPVGKPVGKPVGKPVFMRYFMRYFMRYFMRYHLQWHLQWHLQWHLQW_
iPad2,9
tjSM-3
4*JTms
#=]Czd
c}DZ:$
wiPN
IWnp
7)^@yg
`~GY
_Axf
!?HVoq
vhQO
b|E[;%
"<\B{e
5+KUlr
ukRL,2
L1O'
bU<W
v1,)
54|}
0a|T/
%E#(
Y`)ZiPad3,5
iPad3,2
"3Hr
VpRqD
|8-W
M3e
uN)Q9
</CS
Qs\H
T>B/3h+
A\e!F
..3*h
gye4
O0s
0h+'
5s^loV:2
BCDEFGHIJKLMNOPQCHMBGLQFKPEJODINGJMPCFILOBEHKNQDBIPGNELCJQHOFMDKP
Pc1t
sICo
l;0 
9Ml4
cn0=
wz$)
fk58
`m3>
ty'*
eh6;q|"/
.#}p:7id
+&xu
?2la
- ~s
94jg
(%{v
<1ob
Hr32
17$|
XV[a)
Sxz@
Zl6}(+
p|Wg
cmwL
.FJ]:
[d4e
S1W<[Tr0
;NPt
1*d?
{@vj%
NRwQ
C/'oY9
L%gUK
Kv-B
c$%i
;U<'
wim{
fx|j
6gd5
q #r
x)*{
?nm<
s"!p
4ef7
=lo>
z+(y
#A4$
{Pj)
LD j
`IiF
O41L
(SvZ
ZSsJ
$/|>
Upao
WEa/
niY%
_!^-m
jjv:
{|>"3
!Ct$
iPhone6,2
,oQ^gU
I"i5y(
Yr\b
cwIB
@AppleTV2,1
f\B)A
Z'7Z
A_pL
v<lN
oy7%
"{'5B
rgzT~(+
yNX`
]*AhmD
Pd+>
iPhone5,3
z:7)
|KXI6
-4_Gz
83c&
jfBx_az
aAR:!
s8mh
x}>{
a-EY
3->\
Z}f 
AppleTV3,2
(hN{
t+sC
4886
O;~3
r~9$!
YZWR
u9w`
Qb8:
i"MZB
:A$u
={G9
SS2cX
Xa%8
#K#A7K
n2-/b,
An,C
(F25Hj
Eh<:H
(!r^
XsLq
x$2_
a)%&
T`O+
ZI7S
bs,T
G~M%
r?Lv+w
\n#Q_1=V
T9[+{{,-g
9=.8
vD!S
`kBA
kc$$~
!c9M
|@P5
:ghM 
46b/
>_8fs
ba8'
0GF!
%-gP
{Vpv
]{jTu
-Bo
,?^L
qCu'
QK=$
i*~v
9c.1\
;(7/#
cowh{
&0H]
qn#y
BaXO%
@_GKW
VD6J
"LF*
0]$R_
X`S^(Q
u]p#
ghr%
k]\>
XB7.N
<.\rG
o&,@
eiHJu0a
j7N85
f-e_
z"E[
K:>s
7WN;!v
rG%$
b;|d
i^f:
.WUX
*l]F
,b@9
2z);
gWk$1I2Jh'dT\
6"$W
.7A[
Y3v'@x
aWV4
RH=$D
Cz>T
%Xdj
D[P\
 +tk
GR*<
ASj}
KqCM
>%ie
armuy
YGf>
98n[
(Z4j
'=KR
i.!F
(2G^>
-,N{
Vl$o
#vI]
ig(Uo
]QIVE
$b)}
&n=u
3YNwe
sEDt
laRj
GU'[
!L5CN
3]W;
v~N!>
2tE#o
'83?
EZQ]
<=H|
B{?UF
xB9j
]7sJ
UYRMX
t@54
Dk'Ap6
;7<#
:%-w
OC[DW
!K\e+
4|/g
A~|]Q
5: w
w.O!S
)0F\
(VXd
CWQ=
`lgx
/MC=
mryu
v+ E
9ckt
]7sJ
UYRMX
t@54
$\~1
{0g
K5;d
|ck1
M(#~
}qze
5KE'
!0sk
3|K
GALN7
@c-;
9.DQ
TGq3F
\mv:
!>&*6
K&9yI
48 ?,
($hsB
j"q9
TB:/`
h.e1
AJ|o
 j`[
58:C
+!dE
=lGx
{d)s
,:BW
<4`#
Gy5.
ie}bq
}VkY'
NB]/
1Qjd{>
I,w|MtG
O`Ni
4%8#
gf~9)
_dNQ
|IBAx
XVp= 
M?]4
qJApIz
^P5x
wK!1
lWYF
DOLu
U[}0-
RiC\
jks4$
%TX:
=;S{
<Zj[c
k3L$
oP]m
59&T"\
|`Vd
,{e`Ct
MAWO
#h>G;4
yjJY
.jyYR
|dr~
i=GpS
!H*X
o\eT_d
m EK
SLBy
]`:*
\gtx
5[Us>
JAB{F
)<}P
9QxB
MTjo
RqF<h
JXxk/
K]?M
1!nv
FYWl
x5P^
zIpAJX
%(eCM#
mTW\
<,vK
PGA)
ERC9
0aBu
g>7kKX
eQ<M
sB%C
Jb$"
3A#fT
Whe|
E`,m
)'8}
g .K
d0J}^
M%6x
#gtT_
*&0(
Y \S
BGy`
!oU|
G9[)
8>xP
Y?Xi
b,ye
FtB^
D]cf
$*.S
tKF_
+3|l
."=O
UFf:3j
xOl=
&IN_H
^BY)b
ZBTX
!.R+}6
aVu7
tDu7
-S)[:6%
qAoH
wrPI6
]L5Z
P#hR
) Uu
_ob]
r<iu
W)K9
(.h@
I/Hy
VdRN
A$*
o*5;
Y<2u
-&1S!
06pX
Q7Pa
nwzE
-oL{
BNX@
,g1H4;
neEV
i09D
 &"_
?aoj
%yp)
A;/~
>8<A
;gn7
L|Ru
JOmt
e*pc
0'6Lb
>-ijs
F4V?
g\RM
zAJ{Bq
U[>s
hWZj
l4K#
{gQc
2>!S%[
nYz+
CPp,%|
G;h>
]r+[
!:'6
H[{p
eRq3
^FP\
%*V/y2
+1K%
T$}R
1g4H
{way
NVuB8l
L\|o+
.=u*E
^$Ji
&s7@`
-qx!
=jK
(.*W
0AM/
(.Fn
VjXE
!;A/
TQov
7yCj
<0&>
O6JE
sji->
cp*e
bL6'0
odL$"
DuE#
k+)C
ey~0
#EuD|
"$LdT
129i
!0-6
c<P
O|Et
'UJF
6slbY9
2?rTZ4
zC@K
+;a\
GPV>
J]L6
?nMz
h18dDW
pj^@1{
nU[D
tl#3
HCrKx
\R7z
?/~ma
GXrI
6+f@N
nWT_
%OM(
JYyi>
\DR^
'(T-{0
gPsk
4\#{
L2D6)%
tFpl
BIJs-
=S]{6EZ
To|p
Uh2"
7_YN
[a*Y
|\) 
s`d;
Q&7 
6*1w
xN!|
Gr<;'
$hO0
Jsp{=
^ Z(IEVm
'{r+
<ZIM
"$ ]
~N`G
x}_F9
M@e
tFC_
\EHw
|NxO*p
yL>!-
JF'U9
bYsl
Nt?L
iI<5
|(ReF
iqgk
iz o
hF<-:
y`c'4
qb8w
p^$5"
ax{?,PY
BYE
fTb~
^ V$;7
;[`nq4
DHW%
F}vG~M
)e$
~marI
?/uH
+f@N 
&nWT_
T.@c
Fy=Jj
ajiP
ONV,
wLfy
_S2@
czX]
bEk[
IBbq5
Hk\&r
poE~
%I;ZV
Y`ch
a9CtW
*n}]
eyb$
F 37h
X^Z'
HxVq
NKip
^s2#
Hi>.
adZC
%chkR
uN]Q0B8F
?#$j_
[+2M
fF1u 
oL"X
C,s;(
r=by
-PTR
,c9*L
Wwd #:
CYmr
]~I3
bB7>
jZk)
3M7E$(;
|A0N
UY8J&
}Fls
;^k`cZ
9"?.
J "b
o#gj
9wpl
+-Emf
*L|M
8;0v
:\l]e
;=U}M
D]Po
l^[G
dV`W2h
wgT&95
zY7M
sS$`
{jwl
g(L
O\| )p
bUv'
.TER
`YZQ
(%hN@.
1!{F
]JL$
&;vP^
~GDO
WHbY
3?)(
!~Fh
:-<+0,
m;Tb
{=65
@qA'
k`H &1
o/-G
a}z4
`/uf
5"3Ig
;(lov
iJ$^
`@7s
2;Nn
K8sI
X>-)v
F@D9
{g|:
4pcC
']jI
0~ye
C)+k
"$Ldo
#EuD
*n}]
a9CtW
F 37h
X^Z'
eyb$
~LzM(r
m}N<#/
^GJu
vDA]
\lD,*
tL}M+
6L{X
?&%arR
WQU(
I/<f)
3="g
_z6w
Px>8
iX?Y
yNWE
`kC+-:
KzJ,
jvq?
d$&L
p6=>
_xVf
!^Ge`
IWRqF<h
KXxk/
%Z}1
2.)gR
xCP\=O5K
(nef_
a%Rr
4L6X{
mvkz
q}nU
#3iT
7z\R<
:rKHC
czDA
P_#ZG
+3%)
txnv
YzM7c
ASs`$
=rtg
!0u[|
~:d}
^s2'
adZC
Lv_7
:*mut
B]wL
3.cEK
kRQZ$F
g?ErQ
,h{[
@&51n
^X\!
>"%k^
$bijS
tO\P1C9G
Ta/(4
Y`ch.
M3I;ZVE~
MTjo
9Q<}P
RMCx
%5_c
l!DJ
n]dU^e
 I+Y
A^tO
9)nvw
0-`FH
hQRYl
.jyY
e=GpS
B$73l
\Z^#
vq`w
h<FqR
/kxXS
$jmq
7QaP
60Xp{
%&-k
8#>/
cfXA
tDIv
=U*r
}Oye
E;M? ,
dt;#
G5*&
wEs$
WNC|
upNW
DWw+"{
i^},
%_NY
Sr%5
Eh)8
_|K1i
Uuf"
{l}z
/RVP
`?;(N
f)s`
3$5Oa
=.jip
=O-Dl*,
}L+M
Yfkr
qmhZ
Kn"c
')6s
aV`R
`/uf
5"3Ig
;(lov
nwzE
Ftqm
06pX1S!
Q7PaV
N|J}
]M~
o*5;
E#Du
$"dL
k*fC
zcnQ
{>!/
92iV
 .1t
fQgU
MzK,J
:H*Ck-+
Li%d
vjo]
^alu
'48Y+Q/
5wFv
%[!S2>-
|L}?
%k>"
wjSbi
9G1C\P
ocum
BaV,x
CHh{?
o9V`
8/>)2.
\2HR
vV!e;"]
S<cI
b-+8
R(Fe
"1y&I
:92t
;urn
H" `
)/God
(N~O
yIxS
`\nEY
9Br
$V7;
H2*+
bT0U
4(/aT
2?{7
.hc`Y
~EVZ;I3M
odUlq
VZE7A?
)Irj
$8m#
 ,M?E;
!cRb
&:o!
mfWns
TXG5C=
%&-k
^LUb
\7QaP
!60Xp{
$jmq
NHL1
&?<xkK
j[-
/UbA
/@GVA
\Oo3:c
qFe4
PH^R
+$X!w<
FUue2
Qlq)
^)<'
Xt2@
h3G4
L@j%d
Uv#E}
xDC 3
(Kou
eRjc
KVy\C.
`0<Z
aI-p
]|'%
k5l>
6nW:
>>;h
&w^"^
;n_c
Y8ff
JAAp
p>@"
awaC
I;"t
@HWb
7caB
<Qz#
\HL&
l5q,
,Go
:tN
Evls
%oZ:
sV_X
#2T]
#)^kS
C+A]
K>re
)hK`
eX6]
%&8/k
' Dn
]80qu@
d=R'LE
6Ww(N
935!
j!r4
Z\Ox
:Ey1
l||S
%&W
E?aEN
#{Yk
Cbo"
376V
Vj81
|)%'
^.B#
cbr^
,M."
zt+@
Uo#g
ljA1
KR]$
aDa9/
1d&7
(RoW
K|RHc
kOy~C7
r5N>
D|.'<
} '#
4@>]
MI+2
1{d:
uCJ\
VyB)g
r):e
AlO#9
w%/:
H\zf`
hoQP@
5a6V
?vk G
(]]
:[]z
l4s;DL
N$'b
)"zl
`BcZ
K"#A
KtCi
_jf@
?sP+4Y
.bT@
Y7h-
9.^n
FTFY
ptur
kch`
]C[K
$dMX
r]H:yw
33OW
B uv
"9C?
84w?0
V_)I
x9mq
;YtG
\?rZ
"dp7Z
(@Jg
{)a SQ
~E]BV=
^vvtv
O#K:D
:}s$
`V,m
YSN;
=XKk
j>,%
])=5
Fa!d
Zmxk
l"<r
R}oqz6
rNDGZ
/@#A
6vj!
XW>} 
]5hD%
V08 .
`yX9
2l8M
OQt}
uM*}
!W$4
h7=J
j.7k
:J<n
ls9
?HB,
jTv([
sb5+
JgW}
)I)a
LK784
tGNg\?
MB,1e:
TteQ|
J(>a
 u=^a
nt>x
ck#4
5R&V
e6-Y
VZX<
d:'t
aXqM
zg)z
5`B
S$4l
%C$x
FF.4>
xMC~P5
AH!(i0
X~hHp
;PUT
qQN&
f^21W
_[Pgn
k5kI
=n+
mhe.
;Q`L
G+x8
D2Nq
"Os=
wVEt
u?f|
W2<_
<[Y"D
l%X\
p$/&xo
I!Mp
-*H 
_gQ^
=1h[
tQq%
:Bk\
bXw
l{n>
j&`Y
uEx-
#|}O
7KX1O
cfB%
5_GG
UF9,^lA
e>uw
$:w/
>!X!
Z*]qrd
c/?'Ka
47XI
p1w4
VaaL
1g<B
x_l
n.fi
W''N
)@H"Q
U+m#
52[j
SvcD
eVPo
,{y
|hpv
=6!{
8TwB
,Q4=
Eo1-
<vDd
iWi3
ax#C 
;S|(
"e5H
_Xyxw 
kRNW
S^/1
|@<@
*y9"
GIAJ
,$7E
%T:
uME
vm?n
i."x
o87=
9J)}
Rh|rZ#
r[WD
/U0B
6cy"
UMD=}5
lH&kD0
C#; ;
uj[9
1FAm
I$ap
)=W9
yY\<
/`Y^
?$Ji
]rsl
e4Dh
\1&>
6^OM
`gJ/
.KNs
=g+WE
 }uE
vDp'
F9Mk
6b{3N
=2iS
X+tRp
_dPV
%7gn
LX-|
A<b>iD
+^pr
;$UB
=w3o
qGNR
f*8'Wd
_/Zqna
lg]z
~k[
ZGnsQm
CyNH
uY}c
E$@/
%=vf
9FK+A
h-oy
^7!MvO
~d5R
$/U1
@$PTHo
q4QY
)XeQ
y<nT
f_@i
V"}%
6;Kl
_~# 
VNg)
Y#-G
%Y53
s`0Q
@=>6
zUk4
<I~]
At2mi
xqP;P
I!n)
_gCB
+wW,
ThtN
h,o #
1mN9
UfKi}
uU`_]
lc)?D
{]@>
Cs&z;
u:Fc
-PO23
hy{S
,AU5
"M'J
tt"(
bI~!
+)g*
r),O
C$eS
Eyk4
%`]}
l:vk
#@(
<^}d
5F7t
0$aM
D!WA
&wnD
F<et
Aq3J
|nPd
X/WXpW
y>4o
!0^-Y
v@vM
^55 o{
g0WvV~
3F+C
X&2u
@&Doh^
y#&9Q[
oYHm
(#i5P
$-A?U
t<l@
DAQ
$XgE
rab'
;;Ix
k_B}
y\2X
6{$K
`B!)
Z ^H
li>,
gln5
0&*,
>k-{
EN6 
ceJ}k.
CVaK
Z`(+
 x\T
Kwb(3
d@r2L8
}v;RU
wJ4/<
>r(b
COdRk
Zy-2r
c|OdK
Rr{(*
9aYM
DYw+L!
o>KU
v_PTh
#^3n
yB8,
/{=N
fDH;
Mrh5
)&3)
E~^?
%gh|
%<xt
 ^.M
C#PR
#:fs
<YHe
\@~,
l=C`
$u)
<4(G
a:OAIB
dwiq
;>3Z
"r^*l
>nWQ
\8nT
\0;5
Zm5R
T00
SMN$
s.(D
us&#
#J#A
kc(`
kg"=
(^Z)
rQkhz
Rb@k
6iEX
/_[
Lq1Gd
UGx'}?
1L}w
#dH4
v}~}
lC^'
Zhn
:z[E
Zcm
%.RI
!a6(
<'U"
\>ck
KB7_
B)oG
e$sg
&'ST
4yn)L
e?|>MG
5^Tq
.+_@
L}fE
vLu-
 upO
&(~(
F1Ha
+{;f\
9Kc>
st&g
I,dz
/h\T
yQY6
v$Bl
j"?D[Z
:K;!
0?)m
T4,=|
m1NkE
GV3x
{ZL|
Ct*8
>q%(
hH J
8,+O
4jNs
YeE<!
o,%%
id)uA
PaK#x
3O5?
nAXZ_
WD:f
}y.}
1IS@
{8r)Jv
OV0n
8%d`
\.a0tV
(Pm`
{Do`
Md\K
K9R,
+ de
4CJX
bzO:
d'A]
:TY-
vNs)^6
ox:IG
2v]O
Evy:=
qkKf
#Sy 
QX`P`
Hn)0
,e,`$.
`N6?
+4$-
-i*J
{P/(
bh%C
+&*7\
WN<Y
*oo 
H9V%
Re#`
@}Q#
yx3u
kX<P
=a92
]xGYVR?
tr`r
_-)(
idI1
dT(yL
]QJ/u
]O/yl
Dylz
dJM/U
9D J
Zj^Vr
zYu`R!
Rp06*
d9P/
M& Z
K{.=
b83b
Ha_2
u-oO
pO9v
2\8m
9/F
"_k~
a?rH
Z0(<
c5Jj
wv(c
 (\@
r&Lh
}&;FU^
[\bX
m|Qs
tBq)
"{tK
<i)Q
$&z,
D?Le
2r&e
nG:X
k%la
{1;s
HU0v
TG>`|?
mB\6E:
IYf!1
)zrP
0L;0
Lb,
JTOOB
jgdy
la)?"
hikM
'n}^
qWx<
]z}H
?,DM
!3s9
A*Ep
+28j
7Z<:
v<_l^w
O9=:g
N7ik
bs=j
g#Ya
q/.C@W
~JT'
(sQE
1BF.I
l jq
[?%@sG
3i0Z
TomT
69TQ
DD[_
rdh~
+S)*
kZHm
]z{F
['u!
;>Ch
@X'f
8>PC
^zhm
>c^$
hZ[F
w9u{
']~~
GDH7Ln
6\,w
3>zN
eT:TB
utq
6lmG
[j0I
%uSg
G#jb
 %7l
"iE.Z
eD\b
m,,$ET
T)Nr|Q
0"K"
')t!_
Sv=
|^bB
J:?]`
R8&z
F6p;
&/Fr
@k~\
vKMw
j(cJ
\um-
l[d
+4(t
e4v'
n1&C
XxFZ 
rkSpz
1Eno
vEY9
@9 
Lx"_d6
UNk?}
Bm<A
 IG
ly:1
D02&
QT9S
[S*R
,iuc
.NuC
xwp!
=a%d
1-[=
Q4mt
aIP8
7pUZ
H'pJ`_
9*yi
[|@l
^,$g
V4Bf
c3GI
o1 0
fc#B
2?MU
1/h}
Q6^4
WkPS
aKcx
~(ME
H'#;
6LC"
xuC"
.LF@
)S\L
t4je|
0DU
ec!q
0Jbl
S"y*{Z
7)|z
WL?b
K  >cX
i^zn
r%BhZ]
.G8>V
/+%n
pDDN
l63G]x
9$ E
<t9s
18TA
ZMrP
lmA{
tw2
;2~
s.\m
&7j$
CjdC
\am\
.NuK
E_{O
#1K^
~?,XVq
'X',_
JBWT
|b,]wHT
y)?!qQ
vAhg
KH_|c0
k{tJC
rM=*Z5
F8z>>
/CZ,
Lm$0
.S}#
uhFf
cIU -
ae%G
xT,%
.m)G
aj<
v@Ck^8
OE!=g=
Vsh]~
+N$m
KF;:3
SD@+
hS2G
5]U"
X7t=
g]4'
oi$z
_sRc
F*9l
0:G)
T1Bye
c,EL
m4 /\z
,TP?T
J"3VbZ
z6{l
~KU{
}Rc2
+kfP
N6h7
2LpC
duu!
b({F
1@1F
(vx&
lNV@D
L}}vd
V"?>.
`k_'
RP&.
dp]'oZ%
kXE9c 
nYz
qbML
5Zc*
"7!j
TVg:
=T<|
m07y
7BzK
SIuxb
^NB4
szT-
T*18,
bcQ!
)QHg
MZM7e"
t_/a\'
Ju(g
3R>7
ek;U
swnA
N;^<
c658
XkDxp
xXoNP 
an&.I
e#~-
<`A(
?7w6
_N|Wn
Fx5T
]aN3
z1*8
;Eyd
L:21
I8q0
ttAM
Jg<V
c$!@
3@*E
ey/'
gQJj
B@/s
8g9`
_KJFw3
xapW
sd 3
E-@*=
xji 
AX;iI
x]Y?R
<ewY
%S>9
*fZH
Uq~;-
%u^t._&
h=NF
-u+g
pI1<
p{LaX
PHgWx
I~.7a
eA[<
,!BB
*h:M
|Q?/
,54*
z1H
Md|[
0Y0k
c2"9
"n7f
b#n^J[
'>Sm
Ehjh
;SA)u
|0\r
}'mM
E5>$
4Gt{
:dq]
DB|
l]t?
\ Is
ucT&
#ZQD
s>ZA
iE3V
"+H 
G#wn
F M@
%uNk
=[j-E
<89<
ui}
X3<lpK
a6^:IN
'@r=
GYDt
qyw_
w$y8
,UM
^gd.
>~Rg
X:jI
$|t[
F*M^
8(b/
_0s~
=fJ{
86.p
>qV7F
K'L[
xCG^
{ctu
.zB<
$#:3
d ic
4Dbf
T]T/
#O!
uv$n
$H|'
CN!a
<,9x
KR!%3
s|Ga
IE5'x=
p@WqA8
LK;^
njn" 
*]AX
neo>F
wS&^_
u\j$;
,p><
5F}?
;ly5
q~SY
Y:@0
fd%#
P-E:(
O^JCg&
omauG
>w,`
'Is
GP:0
J<*>
,9>L
sq*
EE!N
N@AW
|]5I
*d0+
SC&8
BQpxj)
bb[NJ
?l<H
&Zu(
EtHWt:
%Q)4
$*"e
tN)`
aB|d
d *]
c)41
[IX
8hH;&@0
q~rFY
QMYpy5
5F\ 
C>v$;
k\g&
O^(_~
Vha?
2cdo:(
8h%W
Z~.`
fBQT
|Uigt-
?{Tx
~6..
bu3~J
[pQ(s
S>PL
5z42
cC1P
3':U
"WOt
| ,F
zB.7
BlHs
uy9o
\:$0
^/5
Zg*W
_X}'w 
Fn4Gn
`SA3
;Sxw
X}n^P6
xN-]
E"n-
%@@8
i %,
4Qju
-g#%
,&x"
PZoFa
Il&E
NpA'
q0o"
3tR9
wL|__4
nz5?F
"O>V
tv;4
r+5S
`gPB
[h(E
]5&"
]+`?
=c =
kZ%_
^VUP
;>.Z
rD6.
4!Jc?
8|*_
erMYM
EAfom9
&o[p
3E.$
\pF7
{a<vs*
Bd^ ga
=[Q(
kbTJ
h`Hd
Y/CVhW
m0,o
!$P5Y
g9P/Or
^<2yv
:77)
b"v6
|_(u
R9lM
0oUH
2F}3
R_Kz
>-eE
+xnB
B Q3
[Psn
pfS]
{%3e
u67V
.<V.`
H)Tx
My0s
88fO
d9O.
4]D+
TDrb
bdAI
+>jw 
)rpp
{ZaP
MzRq
-cd2
UBW-
j'.K
:C%N
lz ,
ml1i
E9=:
Cd3]
\Aw>t9
Ew>^m
yYX0
8Jrn
[dOr
'GS/
{Wd'J
ba-$
Q-a!yU
(A`c
5&dq
OG=m
v;rX
x;Gu
;8gF
u*B]
73M}
swL:
%NIX
Y4Q,
Z-ge
oi_K
<PZ)
iIl`
BS{%
N)`}
=`O$E
)/=s
r.Fi
O vfg
++s6
}3jr
q  _
8@9T
_Fdg
MNW>
-Waw
r?F\
c3Bg
fS8#
0j=A
673&
AK'9
wE+>
/r'}
ROkMz7
Ky"-c
r|@{Z
}d9*
(W\1
x4]!
uY1TD
lorW
.K`=
HEm+y
Qs$(
hvF~
X{b# 
+kPT
oS~2G+
ve7R^
OW!T
`I2%
6p7G
0-9 
&/~l
UZ7R
ZiSY
8?j\
B${<
$u0w
!%T|
e2hEMJ
Csmy
mdE 
;]@B
AzVQ
wZez
(:)4
#?y-
G'X6
`HCb>
|}B
gmu'
(iPhone4,2
KdwYR
mmsnj
W;,*
Ab(%
fZ?H2C
}Bq-
]4=7
MU \J
&k\,sr
;xij
.UP'
zc>B
5'(B
ol5p!
mZDa
aKg/
)<wijtwd
XGiY
Aw(x
Wp)aM(
0E^]6
LqAS
?_>xj
0m:k4J
%fpL
;?9/
"Zs[Y
 9^^F'r
vS\gB[
whP
noIm
#<iu~d
1S1b
L*S1
wc(hx
3SJT
t*Nq
}fnH
vdg)
dKYz
5ug=
;oJ-
yJ8e
E#A_
,=_w
Xcot
N~O6
6Nq[
QL/gOZC
{1>*
+g2^X
miPad2,7
$lQJ
F\UG
"xa`
(gv`
[\|E
mTiPod5,1
eImDy
Bu2]
4_>X;]
4Z`Q
jws@
I%'"3
I;P&
tuVG
eW>/>
4kns^
RYwH
~=n3
x-Jd"
k2{a
AM{\X
0!E7j
0XW
<hD:YV>
3h@o
~R]c
}V0`
Rb8>Py
GEV!
>;'f
X+"*
y0 t
+1X6Ylh
[mTS
.".kF
oN;5u
F*\*z
Vn7Z
Y5T-q
?:7l{B
iiZ}
w^~T/^Jn1
J:9Jh
8n=f
.o1y
i#lt
` `'
\rhQ
K1]z
lw1*HS
ot2)KP
cx>%G\
`{=&D_
|g!:XC
d"9[@
sh.5WL
pk-6TO
NU7,jq
MV4/ir
AZ8#e~
BY; f}
^E'<za
]F$?yb
QJ(3un
RI+0vm
m,5`(
S1/.
?G?+
(4-C
,mUg
,%@@
l64,
M<Mt
@yA@
>s=,{
<)6-u
/qO{
"Jk+?
:Sgi'
h&{&S'h
'ttR
j6Vz
ZM4
'wO}|
aQEH
pu)(
1c{
%$;|
uAxf
zjJj
g7+(f
Xl`,$#1
 S!AOP
S<M 
z-.>p
K!&U^]
!I%5
gKG!oPt
,5>]
yjw*
Hgd1
Xl5NW
8R|wPw
%fqq
br7}
?{k+
b<.;
P(Rh
_7HonX
8e/Z
4af;W
:_[?
Uh2s,
`Nnb[
1"/y
0:To*
1b$<
2-$\
=$=z?
"DX*
Jb} 
<1Pn
H-?%
An6
"Wgl
hUO
BFQo
0^ta
mT!+
d\EZSF
7"na
C.6z
fS6v
{K6R
lWfI
{m7:
k@kY
=#(X
xiPhone2,1
inao
o|D@
lnDm
[-.I
>'h7
T5gDz
EkmL
\kt*
NoNU
KKY;|
'fUE,#
mzi3/-
u<F= $
]N)<
8aAe$3Ox
1,k(
&HUU
5cR+
"nU+
tjg>]g
J?@Uu
pLfR
HO0b&UF
[~za
sm1&$l1O$o1
$i1T$h1
$k1;$j1
$e1Y$d1
$g14$f1
$`1y$c1
$b1g$}15$|1
1\$~1"$y1+$x1
$t1b$w1
$r1D$M1M$L1
$H1Z$K1r$J1^$E1
$D1x$G1
$@1H$C1#$B1
$]1$$\1
$_1@$^1
$Z1A$U1
$V1)$Q1F$P1
$S1`$R1
$-10$,1-$/1
$+1E$*1
$%1o$$1~$'1
$&1 $!1c$ 1
$<17$?1
$51($41
$11z$01
1]$1
1p$@
1Vh*
jQ_I
wNO]W
3GM-
8dS{
.2<m
==*?
i[#w
Cx}j2
Y t[
z9EUdLe
+INzFa
_W[8g
d[XqYD
tfd1M
ck2KV(v
iPhone5,2
a/ Z2
HXHt~pR
uz}}x|h
ciPad2,3
>e&n
I9yr
>|\m
5@}1*O{c
j(o!
jd~2F
?ff!
z^qXUOZ&I#
!Qy[G
K23L
B]Hv
_=}:
Y]L;
'@oW^
4/Ej
+fSr
"=m+M
w81x]T
$'iPad2,6
Uh*0RW
hb`R
Kq$.
Mnjf<i
V&Rg*>
\SaD;
~azdz
EP'=
srss8
mZ{/
uBc7
sDe1
gPq%
DhzV
$XRA
^6</
JftX
yT0V
Bn|P
oys`
)Mq+v
&o7QV
nBP|
Ei{W
@l~R
bN\p
r^L`
gKYu
]qcO
=|ve
,Ht.s
#j2TS
#G{!|
,e=[\
UykG
VzhD
sLFU
~R@l
Ei{W
Ocq]
r^L`
oCQ}
]&,?
Eh0j7
p\Nb
YugK
9q{h
!Ey#~
.g?Y^
nBP|
wCIZ
>Zf<a
1x FA
4Pl6k
;r*LK
|CIZ
|PBn
=Ye?b
2{#EB
JftX
Ocq]
FjxT
gKYu
kGUy
{2j
jVQ
*Nr(u
%l4RU
W{iE
7\VE
!hT
`q{h
!Ey#~
.g?Y^
jVQ
}QCo
6Rn4i
9p(NI
{{qb
+Os)t
$m5ST
KguY
uYKg
zicp
9]a;f
|U_L
yUGk
q]Oc
Ibh{
2Vj0m
=t,JM
fJXt
vZHd
KguY
+DN]
p\Nb
Bbh{
2Vj0m
=t,JM
cJ@S
zVDh
Z1;(
kGUy
U0:)
$).!
Sb,vl
<7>dR
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
uu!AppleTV3,1
z5!*
(WSxt
 O[p|
jVua
^bim
v1%&
fZqe
Z*5C
7.?r
1rnM%
"E3Ll
XQ&gQ
alloc
init
class
description
UTF8String
_storePath
dictionaryWithContentsOfFile:
date
_timeouts:expiringAfter:
stringByAppendingPathComponent:
_timeoutsExpiringAfter:
_saveTimeouts:
supportedVocabularyStringTypes
countByEnumeratingWithState:objects:count:
_af_normalizedKeyForKey:appBundleID:syncSlotName:
objectForKey:
initWithCapacity:
anchors
suspendDurationInSeconds
doubleValue
_af_isValid
aceId
_af_normalizedKey
dateByAddingTimeInterval:
setObject:forKey:
addObject:
timeoutsExpiringAfter:
allKeys
addObjectsFromArray:
addEntriesFromDictionary:
saveTimeouts:
allObjects
removeObjectsForKeys:
count
removeObjectsInArray:
containsObject:
enumerateKeysAndObjectsUsingBlock:
setDictionary:
copy
removeAllObjects
appIdentifyingInfo
bundleId
syncSlots
filterBlacklistedKeys:vocabSources:
setSyncSlots:
compare:
keysOfEntriesPassingTest:
dictionaryWithValuesForKeys:
isEqual:
writeToFile:atomically:
defaultManager
removeItemAtPath:error:
sharedInstance
checkIfAnyUserVocabularyIsBlacklistedForApp:completion:
checkPermissionToSyncSlot:forApp:completion:
filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:
filterBlacklistedKeys:appSources:
.cxx_destruct
_cachedTimeoutTable
_queue
hasOpenInterval
openInterval
numberWithDouble:
setTimeUntilOpen:
hasFirstByteReadInterval
firstByteReadInterval
setTimeUntilFirstByteRead:
hasAttemptCount
attemptCount
numberWithUnsignedInt:
setAttemptCount:
hasMetricsCount
metricsCount
setMetricsCount:
hasPingCount
pingCount
setPingCount:
numberWithInt:
hasPingMean
pingMean
setMeanPing:
hasUnacknowledgedPingCount
unacknowledgedPingCount
setUnacknowledgedPingCount:
hasSubflowCount
subflowCount
setSubflowCount:
hasConnectedSubflowCount
connectedSubflowCount
setConnectedSubflowCount:
hasPrimarySubflowIface
primarySubflowIface
setPrimarySubflowInterfaceName:
hasPrimarySubflowSwitchCount
primarySubflowSwitchCount
dictionaryWithObjects:forKeys:count:
setSubflowSwitchCounts:
hasConnectionMethodName
connectionMethodName
setConnectionMethod:
hasConnectionEdgeType
connectionEdgeType
setConnectionEdgeType:
hasConnectionEdgeIDName
connectionEdgeIDName
setConnectionEdgeID:
hasConnectionFallbackReason
connectionFallbackReason
setConnectionFallbackReason:
hasTuscanyConnectionDelay
tuscanyConnectionDelay
setConnectionDelay:
tcpInfoMetricsCount
tcpInfoMetricsAtIndex:
interfaceName
setTCPInfoMetricsByInterfaceName:
timeUntilOpen
setOpenInterval:
timeUntilFirstByteRead
setFirstByteReadInterval:
intValue
meanPing
setPingMean:
primarySubflowInterfaceName
setPrimarySubflowIface:
subflowSwitchCounts
objectForKeyedSubscript:
setPrimarySubflowSwitchCount:
tcpInfoMetricsByInterfaceName
addTcpInfoMetrics:
allValues
firstObject
connectionMethod
setConnectionMethodName:
connectionEdgeID
setConnectionEdgeIDName:
setHasConnectionFallbackReason:
connectionDelay
setTuscanyConnectionDelay:
_ad_metrics
_ad_setMetrics:
intent
backingStore
intentSlotKeyPath
sharedAnalytics
ad_afAnalyticsContext
logEventWithType:context:contextNoCopy:
setResponseHandler:
initWithData:
setRefId:
setData:
setTypeName:
setIntentSlotResolutionResult:
ad_analyticsEndEventType
arrayWithObjects:count:
resolveIntentSlotKeyPath:completionHandler:
ad_aceIntentProtobuf
ad_sendIntent:toExtensionProxy:onQueue:completion:
ad_analyticsBeginEventType
ad_shouldUseExtendedFlowTimeout
_init
_homeManager
initWithOptions:
setDelegate:
isDataSyncInProgress
currentAccessory
home
owner
_currentHome
assistantAccessControlForHome:
defaultCenter
postNotificationName:object:
_currentHomeInfo
status
sharedInfoManager
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
user:didUpdateAssistantAccessControl:forHome:
user:didUpdatePairingIdentity:
infoForThisDevice
homeManager:didUpdateStatus:
personalDomainsIsEnabled
securePersonalDomainsRequireAuth
initWithFormat:
setPersonalDomainsIsEnabled:
setSecurePersonalDomainsRequireAuth:
_personalDomainsIsEnabled
_securePersonalDomainsRequireAuth
accessories
isCurrentAccessory
isEnabled
allowUnauthenticatedRequests
_removeRecordedAudioForVoiceIdentificationTraining
dealloc
UUIDString
_didBecomeCurrent
_didResignCurrent
removeObject:
_donateRecordedAudioForVoiceIdentificationTrainingWithCompletion:
sharedTrainer
notifyImplicitTrainingUtteranceAvailable:forVoiceProfileId:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:
removeItemAtURL:error:
initWithSessionUUID:queue:
becomeCurrent
resignCurrent
updateStartSpeechId:
updateSelectedResultCandidateId:
updateAccessToRecordedAudioForVoiceIdentificationTraining:forResultCandidateId:
updateAudioRecordContext:
updateAudioRecordDeviceInfo:
updateVoiceTriggerInfo:
beginRecordingAudioForVoiceIdentificationTraining
endRecordingAudioForVoiceIdentificationTrainingWithURL:
sessionUUID
_isCurrent
_startSpeechId
_selectedResultCandidateId
_audioRecordContext
_audioRecordDeviceInfo
_voiceTriggerInfo
_voiceIdentificationTraining_recordingAudioGroup
_voiceIdentificationTraining_allowsWithoutResultCandidate
_voiceIdentificationTraining_allowedResultCandidateIds
_voiceIdentificationTraining_recordedAudioURL
_sessionUUID
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
hasInterfaceName
hasRttCurrent
rttCurrent
hasRttSmoothed
rttSmoothed
hasRttVariance
rttVariance
hasRttBest
rttBest
hasTxPackets
txPackets
numberWithUnsignedLongLong:
hasTxBytes
txBytes
hasTxRetransmitBytes
txRetransmitBytes
hasTxUnacked
txUnacked
hasRxPackets
rxPackets
hasRxBytes
rxBytes
hasRxDuplicateBytes
rxDuplicateBytes
hasRxOooBytes
rxOooBytes
hasSndBandwidth
sndBandwidth
hasSynRetransmits
synRetransmits
hasTfoSynDataAcked
tfoSynDataAcked
initWithInterfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:bytesSent:bytesRetransmitted:bytesUnacked:packetsReceived:bytesReceived:duplicateBytesReceived:outOfOrderBytesReceived:sendBandwidth:synRetransmits:tfoSynDataAcked:
setInterfaceName:
unsignedIntValue
setRttCurrent:
setRttSmoothed:
setRttVariance:
setRttBest:
packetsSent
unsignedLongLongValue
setTxPackets:
bytesSent
setTxBytes:
bytesRetransmitted
setTxRetransmitBytes:
bytesUnacked
setTxUnacked:
packetsReceived
setRxPackets:
bytesReceived
setRxBytes:
duplicateBytesReceived
setRxDuplicateBytes:
outOfOrderBytesReceived
setRxOooBytes:
sendBandwidth
setSndBandwidth:
setSynRetransmits:
setTfoSynDataAcked:
appsList
valueForKey:
resolveAppForIntentResponse
setAppsList:
ad_resolveAppForIntent:completion:
setIdentifier:
_callStateDidChange:
addObserver:selector:name:object:
isEqualToString:
_handleCommand:forDomain:reply:
encodedClassName
groupIdentifier
sharedCommandCenter
_hasIncomingCall
commandFailedWithErrorCode:
_processPendingCallResultBlocks
_remoteExecute_remoteDeviceExecuteCommand:completion:
aceDomainSignal
UUID
setAceId:
setDomain:
_isInCall
handle
domains
commandsForDomain:
implementsCommand:forDomain:
handleCommand:forDomain:reply:
preheatDomain:
_serialQueue
_pendingCallResultBlocks
intentSlotKeyPaths
_resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
setLastAttemptedStep:
setSlotResolutionMap:
typeName
data
base64EncodedStringWithOptions:
setBase64EncodedIntent:
setKeyPath:
setBase64EncodedProtobufMessage:
type
typeAsString:
setStepResults:
setBatchSlotResolutionResult:
_connection
setIntent:
_confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
setIntentResponse:
setConfirmIntentCompleted:
shouldRunHandleIntent
_intentResponseCode
_handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
errorCode
underlyingError
confirmIntentWithCompletionHandler:
setHandleIntentCompleted:
handleIntentWithCompletionHandler:
configureForDaemon
logEventWithType:context:
sharedDaemon
initWithServiceName:onQueue:
addDataProvider:
bundleForClass:
variantWithFormat:imageName:inBundle:
addVariant:
defaultSectionInfoForType:
setPushSettings:
sectionIdentifier
setSectionID:
sortDescriptorWithKey:ascending:
setMessageNumberOfLines:
setUsesVariableLayout:
sinceDate
allBulletinRequestsAvailable
maximumCount
objectAtIndex:
laterDate:
isEqualToDate:
recordID
clearBulletinRequestWithRecordID:
actionType
bulletinRecordID
handleBulletinRequestWithRecordID:
addBulletin:forDestinations:
withdrawBulletinsWithRecordID:
sharedProvider
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
fireNotificationWithBulletinRequest:timeout:
dataSource
setDataSource:
_proxy
_dataSource
processInfo
systemUptime
_daemonDidLaunch
mainRunLoop
_daemonWillShutdown
_proxyService
_peerLocationService
_sharedDataService
listenForSharedDataFromCloud
startListeningForRemote
initWithMachServiceName:
_setQueue:
resume
processIdentifier
_bundleID:andPath:forPID:
sharedService
beginEventsGrouping
preheatWithStyle:forOptions:completion:
acquireLocationInUseAssertionForReason:completion:
setRemoteObjectInterface:
setExportedInterface:
initWithXPCConnection:
setExportedObject:
connectionDisconnected
removeDelegate:
clientDisconnected:
releaseLocationInUseAssertionForReason:
endEventsGrouping
setInvalidationHandler:
clientConnected:
startRequestActivityWithCompletion:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:
startDictationWithLanguageCode:options:speechOptions:
cancelSpeech
stopSpeechWithOptions:
startRecordedAudioDictationWithOptions:language:narrowband:
addRecordedSpeechSampleData:
updateSpeechOptions:
sendSpeechCorrectionInfo:forCorrectionContext:
preheat
preheatWithRecordDeviceIdentifier:
endSession
recordFailureMetricsForError:
recordAWDSuccessMetrics
_startDictationWithURL:isNarrowBand:language:options:
_sendEngagementFeedback:voiceQueryIdentifier:
getInstalledOfflineLanguagesWithCompletion:
requestOfflineDictationSupportForLanguage:completion:
interfaceWithProtocol:
remoteObjectProxy
initWithServiceDelegate:
queue
sanityCheckAutodownloadedAssetsForced:
fetchSupportedLanguagesWithReply:
retrieveAccountMessageDictionariesWithReply:
saveAccountWithMessageDictionary:setActive:
deleteAccountWithIdentifier:
setActiveAccountIdentifier:
setAssistantEnabled:
setDictationEnabled:
_killDaemon
barrierWithReply:
_setSyncNeededForReason:
_clearSyncNeededForKey:
_syncDataWithAnchorKeys:forceReset:reason:reply:
_fetchPeerData:
_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:
_startDeepSyncVerificationForKeys:
_runServiceMaintenance
getAvailableVoicesIncludingAssetInfo:completion:
setOutputVoice:withCompletion:
setLanguage:withCompletion:
getOfflineDictationStatusWithCompletion:
updateOfflineSpeechProfileWithLanguage:completion:
createOfflineSpeechProfileWithLanguage:JSONData:completion:
setOfflineDictationProfileOverridePath:completion:
startUIRequestWithText:
startUIRequestWithSpeechAudioFileURL:
startRemoteRequest:onPeer:completion:
getPeerIdentifiers:
startAudioPlaybackRequest:completion:
stopAudioPlaybackRequest:immediately:
stopAllAudioPlaybackRequests:
setSupplementalLanguageDictionary:forProduct:completion:
setSupplementalLanguages:forProduct:forBuildVersion:completion:
getSupplementalLanguagesDictionary:
getSupplementalLanguagesModificationDate:
getSupplementalLanguageDictionaryForProduct:completion:
getSupplementalLanguagesForProduct:forBuildVersion:completion:
fetchEventRecordsFromAnalyticsStoreAtPath:completion:
purgeAnalyticsStoreWithCompletion:
resetAnalyticsStoreWithCompletion:
sendMetricsToServerWithCompletion:
fetchExperimentConfigurationsWithCompletion:
fetchExperimentContextWithCompletion:
disableAndDeleteCloudSyncWithCompletion:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
setConfigOverrides:completion:
configOverrides:
getSharedCompanionInfo:
forceMultiUserSync:download:completion:
getSiriOutputVolumeWithCompletion:
setSiriOutputVolume:completion:
getBluetoothDeviceWithAddress:completion:
getBluetoothDeviceWithUID:completion:
getConnectedBluetoothDeviceInfoArrayWithCompletion:
getPairedBluetoothDeviceInfoArrayWithCompletion:
initWithBytes:length:encoding:
initFileURLWithPath:isDirectory:
initWithURL:
bundlePath
bundleIdentifier
deleteEverything
recordVocabulary:forIntentSlot:withValidationCompletion:
askToSyncSlot:
fetchSiriAuthorization:
requestSiriAuthorization:
fetchCurrentSiriLanguageCode:
verifyProcessCanDonateIntentWithName:completion:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
initWithBundleID:path:
setManagedStoreObject:forKey:
fetchManagedStoreObjectForKey:reply:
setKnowledgeStoreData:forKey:inStoreWithName:completion:
getKnowledgeStoreDataForKey:inStoreWithName:completion:
resetKnowledgeStoreWithName:completion:
connectionDisconnected:
setInterruptionHandler:
connectionConnected:
setObserverConnection:
_clientListenerShouldAcceptNewConnection:
_settingsListenerShouldAcceptNewConnection:
_dictationListenerShouldAcceptNewConnection:
_managedStorageListenerShouldAcceptNewConnection:
_synapseSyncListenerShouldAcceptNewConnection:
_analyticsListenerShouldAcceptNewConnection:
_securityListenerShouldAcceptNewConnection:
_analyticsObservationListenerShouldAcceptNewConnection:
initWithUTF8String:
initWithActivationEvent:
updateSharedDataFromPeerUseCache:completion:
sharedPreferences
assistantIsEnabled
_syncForReason:withCoalescing:
updateSpeechProfilesForReasons:
effectiveSettingsChanged
managedConfigurationEffectiveSettingsChanged
syncForReason:withCoalescing:
_enabledBitsChanged:
sharedListener
startListening
listen
syncCoordinatorWithServiceName:
activeSyncSession
syncDidCompleteSending
syncDidComplete
pushSharedDataToPeer:
installedAssetSizeWithError:
purgeInstalledAssetsWithError:
_setupCacheDelete
_setupSessionLanguage
_setupInternal
_setupRapportServices
_setupIDSServices
_setupClientListener
_setupDictationListener
_setupExternalRequestListener
_setupClientLiteListener
_setupSettingsListener
_setupManagedStorageListener
_setupSynapseSyncListener
_setupAnalyticsListener
_setupContextListener
_setupSecurityListener
_setupAnalyticsObservationListener
_setupSyncListener
_registerForSyncNotifications
_setupTetherListener
_setupNotifyHandlers
_setupDistributedNotificationHandlers
_setupPairedSync
_setupCloudKit
_setupMemoryPressureObservation
_setupWirelessCoexManagerSubscription
_setupMobileGestaltNotificationHandlers
prepareForShutdown
sharedDiagnostics
flush
setLanguageCodeIfNeeded
syncAnchorKeys:forceReset:reasons:
dictationIsEnabled
keepAlive
_syncCoalesced
processLaunchTime
processLaunchMachTime
listener:shouldAcceptNewConnection:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
shutdown
startUIRequestWithInfo:
startUISpeechRequest
scheduleDestroyJob
unscheduleDestroyJob
scheduleValidationRefreshForInterval:
scheduleUnlockedWork:
_analyticsListener
_analyticsObservationListener
_clientListener
_dictationListener
_settingsListener
_synapseSyncListener
_managedStorageListener
_securityListener
_syncListener
_externalRequestListener
_clientLiteListener
_siriTetherListener
_lastSyncRequested
_syncReasonsQueued
_syncActivityRegistered
_proxyRemote
_peerLocationManagerRemote
_unlockedWorkQueueIsSuspended
_unlockedWorkQueue
_mg_notification_token
defrost
dictionaryRepresentation
stringWithFormat:
dictionary
allocWithZone:
copyWithZone:
readFrom:
writeTo:
copyTo:
mergeFrom:
clearTcpInfoMetrics
tcpInfoMetricsType
setHasOpenInterval:
setHasFirstByteReadInterval:
setHasAttemptCount:
setHasMetricsCount:
setHasPingMean:
setHasPingCount:
setHasUnacknowledgedPingCount:
setHasRttCurrent:
setHasRttSmoothed:
setHasRttVariance:
setHasRttBest:
setHasTxPackets:
setHasTxBytes:
setHasTxRetransmitBytes:
setHasTxUnacked:
setHasRxPackets:
setHasRxBytes:
setHasRxDuplicateBytes:
setHasRxOooBytes:
setHasSndBandwidth:
setHasSynRetransmits:
setHasSubflowCount:
setHasConnectedSubflowCount:
setHasPrimarySubflowSwitchCount:
setHasTuscanyConnectionDelay:
tcpInfoMetrics
setTcpInfoMetrics:
_firstByteReadInterval
_openInterval
_pingMean
_rxBytes
_rxDuplicateBytes
_rxOooBytes
_rxPackets
_sndBandwidth
_tuscanyConnectionDelay
_txBytes
_txPackets
_txRetransmitBytes
_txUnacked
_attemptCount
_connectedSubflowCount
_connectionEdgeIDName
_connectionEdgeType
_connectionFallbackReason
_connectionMethodName
_metricsCount
_pingCount
_primarySubflowIface
_primarySubflowSwitchCount
_rttBest
_rttCurrent
_rttSmoothed
_rttVariance
_subflowCount
_synRetransmits
_tcpInfoMetrics
_unacknowledgedPingCount
_has
setContent:
hasContent
content
_content
initWithServiceIdentifier:forRequests:requireConnectedPeer:
setDelegate:forRequestTypes:
initWithDelegate:
locationDataWasRecievedFromPeer
_ad_performForPeerLocationWithCompletion:
sendRequest:responseClass:completion:
peerLocationConnectionSuggestsClearingCachedLocation:
peerLocationConnection:didReceiveUnsolicitedLocation:
locationPeerDidChange
peerConnection:handlePBSubclass:completion:
peerConnection:peerAvailabilityDidChange:
peerLocationPolicySuggestsClearingCachedLocation:
getBestLocationWithCompletion:
_delegate
_peerConnection
_locationPolicy
ad_location
initWithServiceIdentifier:forRequests:
_sharedDataDidChange:
removeObserver:
_pushSharedDataToPeerFromNotification:completion:
hasPeer
userInfo
null
setPreviousLanguageCode:
setPreviousOutputVoice:
_sendData:
sendSharedData:toPeers:
_getDataWithCompletion:
_setDataFromSharedData:
sendRequest:responseClass:overrideRequireConnectedPeer:allowCloud:completion:
getSharedDataForPeer:
_ad_setData:
peerName
peerVersion
languageCode
setSiriEnabled:
_ad_requestInfo
setSuccess:
errorWithCode:
handleRemoteRequest:completion:
_ad_performWithSharedDataRemote:completion:
peerType
peerBuildVersion
peerExportsSharedData
deviceIsNearby:
_requestDataRemotely:
_ad_data
sharedDataConnection:didUpdateSharedData:
_ad_setRequestInfo:
success
assistantId
dictionaryWithPlistData:
plistData
executeCommandFromRemote:fromPeer:reply:
_getDataWithPBCompletion:
_startRemoteRequest:completion:
getSharedDataFromPeerUseCache:completion:
_dataDidUpdate:
startRemoteRequest:completion:
watchIsNearbyForAssistantId:
executeRemoteCommand:completion:
_handleExecuteRequestOnRemoteWatch:completion:
_localData
_remoteData
archivedDataWithRootObject:requiringSecureCoding:error:
errorWithCode:description:underlyingError:
unarchivedObjectOfClass:fromData:error:
commandPushGenerationsRequest
commandPullGenerationsRequest
commandPullDeltaRequest
commandPullSnapshotRequest
commandPushGenerationsResponse
commandPullGenerationsResponse
commandPullDeltaResponse
commandPullSnapshotResponse
unsignedIntegerValue
domain
ad_isInAssistantErrorDomain
code
ad_isUnreachableError
ad_isUnrecoverablePeerError
ad_isStricterUnreachableError
ad_isRetryableConnectionError
ad_requiresDampedRetry:
ad_isAssistantNotReadyError
ad_isStricterRetryableConnectionError
ad_isRetryableSessionError
ad_isPeerConnectionError
ad_isPeerNotNearbyError
ad_isPeerRemoteError
ad_isNetworkDownError
route
remoteDeviceUID
currentRoute
inputs
portName
isEarpieceActiveNoiseCancelationEnabled
_fetchBTInfo
currentCarPlayExternalDevice
screenIDs
componentsJoinedByString:
modelName
deviceWithAddress:
getDeviceInfo:
_bluetoothDeviceInfo
address
vendorID
stringValue
productID
initWithDictation:fingerprintOnly:secureOfflineOnly:audioAlertStyle:recordSettings:endpointerModelVersion:recordRoute:recordDeviceInfo:audioDeviceID:audioSessionID:voiceTriggerEventInfo:activationAlertStartTimestamp:startRecordingTimestamp:firstBufferTimestamp:firstBufferHostTime:deviceIdentifier:includeBTInfo:
initWithDictation:codec:
isBluetooth
headsetAddress
vendorId
productId
codecIsNarrowband
isDictation
isFingerprintOnly
isSecureOfflineOnly
audioAlertStyle
codec
source
deviceInfo
deviceIdentifier
dspStatus
headsetName
voiceTriggerEventInfo
activationAlertStartTimestamp
startRecordingTimestamp
audioSessionID
firstBufferTimestamp
firstBufferHostTime
isEndAlertInfo
setIsEndAlertInfo:
triggeredTwoShotBorealis
setTriggeredTwoShotBorealis:
audioSessionSetActiveEndHostTime
setAudioSessionSetActiveEndHostTime:
endpointerModelVersion
bluetoothDevice
_headsetAddress
_isDictation
_isFingerprintOnly
_isSecureOfflineOnly
_isEndAlertInfo
_triggeredTwoShotBorealis
_audioSessionID
_audioAlertStyle
_codec
_source
_route
_deviceInfo
_deviceIdentifier
_modelName
_dspStatus
_headsetName
_voiceTriggerEventInfo
_activationAlertStartTimestamp
_startRecordingTimestamp
_firstBufferTimestamp
_firstBufferHostTime
_audioSessionSetActiveEndHostTime
_endpointerModelVersion
_bluetoothDevice
fileExistsAtPath:
_ad_timerRequestRepresentation
ad_aceResponseCommandGenericErrorRepresentation
_ad_timerResponseForResponse:
getSiriRequestForClientBoundAceCommand:completionHandler:
aceCommandForSiriResponse:responseError:forRequestCommand:
timer
_ad_setTimer:
setTimer:
_ad_timerWithState:
setState:
timerValue
setValue:
state
value
setTimerValue:
_ad_timer
numberWithBool:
genderString
siriEnabled
dictationEnabled
setAssistantId:
loggingAssistantId
setLoggingAssistantId:
speechId
setSpeechId:
sharedUserId
setSharedUserId:
loggingSharedUserId
setLoggingSharedUserId:
previousLanguageCode
setLanguageCode:
previousOutputVoice
outputVoice
setOutputVoice:
hostname
setHostname:
cloudSyncEnabled
setCloudSyncEnabled:
shouldCensorSpeech
setShouldCensorSpeech:
userAgent
setUserAgent:
isLocationSharingDevice
setIsLocationSharingDevice:
notificationPreviewRestrictedApps
setNotificationPreviewRestrictedApps:
temperatureUnit
setTemperatureUnit:
airplayRouteId
setAirplayRouteId:
storeFrontId
setStoreFrontId:
ekToken
setEkToken:
userToken
setUserToken:
isRemotePlaybackDevice
setIsRemotePlaybackDevice:
userAssignedName
setUserAssignedName:
utsRequiredRequestKeyValuePairs
setUtsRequiredRequestKeyValuePairs:
_siriEnabled
_dictationEnabled
_cloudSyncEnabled
_shouldCensorSpeech
_isLocationSharingDevice
_isRemotePlaybackDevice
_assistantId
_loggingAssistantId
_speechId
_sharedUserId
_loggingSharedUserId
_previousLanguageCode
_languageCode
_previousOutputVoice
_outputVoice
_hostname
_userAgent
_notificationPreviewRestrictedApps
_temperatureUnit
_airplayRouteId
_storeFrontId
_ekToken
_userToken
_userAssignedName
_utsRequiredRequestKeyValuePairs
properties
setTimerURL:
boolValue
setIsFiring:
setTitle:
integerValue
setDuration:
setFireTimeInterval:
setFireDate:
setFiredDate:
setDismissedDate:
setLastModifiedDate:
mutatedCopyWithMutator:
setTimerID:
newWithBuilder:
timerID
setUUID:
timerURL
isFiring
title
numberWithInteger:
duration
fireTimeInterval
fireDate
firedDate
dismissedDate
lastModifiedDate
setProperties:
initOnQueue:
start
sendCommand:errorHandler:
cancelWithCompletion:
delegate
setHandoffData:
handoffPayload
sessionHandoffData
link
setRecordID:
handoffOriginDeviceName
handoffNotification
setMessage:
setDate:
setAuthenticationRequired:
setDefaultAction:
setRemoteRequestInfo:
requestWithActivityInfo:
getInfoForHandoffPayload:userInfo:wepageURL:
initWithQueue:
remoteRequestInfo
completion
setCompletion:
notificationAction
setNotificationAction:
_bulletinRecordID
_remoteRequestInfo
_completion
_notificationAction
_descriptionWithIndent:
generation
items
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
initWithGeneration:date:items:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_generation
_date
_items
initWithBaseModel:
setGeneration:
setItems:
generate
_baseModel
_mutationFlags
_storageForDeviceWithIdentifier:
itemsByID
setTimersByID:
_invalidateStorageForDeviceWithIdentifier:
beginGrouping
endGrouping
_sendStereoPartnerAction:timerID:changes:completion:
setAlertContextDirty
initWithIdentifier:delegate:
invalidate
removeObjectForKey:
clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:
getSnapshotForDeviceWithIdentifier:completion:
getSnapshotsByDeviceIdentifierWithCompletion:
prepareStorageForDeviceWithIdentifier:
finalizeStorageForDeviceWithIdentifier:
accessStorageForDeviceWithIdentifier:usingBlock:
updateTimerWithID:changes:completion:
removeTimerWithID:completion:
_storagesByDeviceIdentifier
_samplesPerInterval
initWithServiceName:
setSampleRate:
appendAcousticData:sampleCount:sampleRate:
getSignature:
reset
remoteObjectProxyWithErrorHandler:
_configureWithCurrentASBD
_service
_needsConversion
length
initWithLength:
mutableBytes
bytes
setLength:
_convertPCMDataForFingerprinting:
acousticFingerprinter:hasFingerprint:duration:
_serviceWithErrorHandler:
setFingerprintInterval:
setASBD:
appendPCMData:
_asxConnection
_totalSampleCount
_nextFingerprintSampleNumber
_sourceASBD
_interval
_fingerprinterConverter
initWithServiceIdentifier:
initWithMachServiceName:options:
doCommandForServicePath:className:infoDictionary:reply:
beginSyncForServicePath:className:requestUUID:info:reply:
fetchCurrentSyncSnapshotForServicePath:className:key:completion:
clearDomainObjectsForServicePath:className:
preheatBundleForServicePath:
runMaintenanceWorkForServicePath:className:completion:
syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:
openURL:reply:
dismissAssistant
getLockStateWithReply:
handleCommand:completion:
getTimeoutSuspendedWithReply:
assistantServiceWillCrashForStuckSyncPluginAtPath:
getPeerInfoForCommandId:completion:
initWithServiceConnection:syncQueue:
exportedObject
handleFailureInMethod:object:file:lineNumber:description:
_bundleClassForDomain:commandName:
markIncomingCommand:
_timeoutForCommand:
_removeTimer:
initWithTimeoutInterval:onQueue:timeoutHandler:
cancelIfNotAlreadyCanceled
_providerServiceWithErrorHandler:
markResponseForCommand:
initWithDictionary:context:
className
_addWatchdogTimer:
_providerServiceDelegate
setSyncChunkHandler:
uuid
clearSyncRequestWithUUID:
serviceConnectionTimedoutForSync
startTimerOnQueue:withTimeoutHandler:
setSyncRequest:forUUID:
syncRequestForUUID:
timedout
_syncClassForAnchorKey:
_providerService
addBarrierBlock:
stop
makeObjectsPerformSelector:
_stopTimersWithContinuation
openURL:completion:
isDeviceLocked
isTimeoutSuspended
sharedQueue
_peerInfoForCommandId:
afPeerInfo
initWithIdentifier:path:commandMap:anchorMap:clearingClass:maintenanceClass:queue:
sendClientBoundCommand:domain:reply:
sendBeginSyncWithInfo:chunkHandler:completion:
sendFetchSyncSnapshotForInfo:completion:
sendClearDomainObjects
preheatServiceBundle
runMaintenanceWorkWithCompletion:
_openURL:completion:
_getLockStateWithReply:
_handleCommand:completion:
_getTimeoutSuspendedWithReply:
_getPeerInfoForCommandId:completion:
identifier
_targetQueue
_syncQueue
_identifier
_path
_serviceLoaded
_stats
_commandMap
_anchorKeyClassMap
_domainObjectClearingClassName
_maintenanceClassName
_preheated
_watchdogTimers
invalidateTimer
syncChunkHandler
setPre:
setPost:
setToAdd:
setToRemove:
setValidity:
lastPathComponent
reportIssueForType:subType:context:processIdentifier:
_serviceConnection
_syncRequestsByUUID
hashedRouteUIDs
hashedRouteUID
initWithMode:delegate:
channel
prepareForDeviceWithIdentifier:
_sessionWithDeviceIdentifier:
_getGenerationsForDataTypes:andPushToDeviceWithIdentifier:
finalizeForDeviceWithIdentifier:
messageReceiver
receiveMessage:completion:
initWithDeviceIdentifier:messagingService:
initWithQueue:deviceIdentifier:dataConsumersByType:dataProvidersByType:messageSenders:
getGenerationWithCompletion:
pushGenerationsByDataTypes:
deviceSyncMessageService:didFoundDeviceWithIdentifier:
deviceSyncMessageService:didLostDeviceWithIdentifier:
deviceSyncMessageService:didReceiveMessage:fromDeviceWithIdentifier:completion:
deviceSyncDataProviderDidUpdate:
_messagingServicesByChannel
_dataConsumersByType
_dataProvidersByType
_sessionsByDeviceIdentifier
_account
_pairedDevice
modelIdentifier
productName
productVersion
productBuildVersion
uniqueIDOverride
isNearby
devices
isDefaultPairedDevice
isConnected
initWithService:
addDelegate:queue:
accounts
anyObject
setWithObject:
_sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:
_hasConnectedPeer
initWithDomain:code:userInfo:
initWithProtobufData:type:isResponse:
_destination
sendProtobuf:toDestinations:priority:options:identifier:error:
_wrappedSendFailureError:
isResponse
incomingResponseIdentifier
outgoingResponseIdentifier
expectsPeerResponse
_invokeCompletionForIdentifier:response:error:
_sendResponse:forRequestId:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
serviceIdentifier
sendRequest:
sendRequest:fireAndForget:
sendRequest:responseClass:timeout:completion:
_requireConnectedPeer
_idsService
_completions
_responseClasses
_requestMapFunc
_classMapFunc
initOnQueue:withAccount:
setSharedUserIdentifier:
setLoggingSharedUserIdentifier:
setConnectionMode:
setSessionType:
_setSessionId:
setCanHandleRequest:
dormant
_startConnection
assistantSessionConnectionDidReset:
_setCurrentConnectionType:
setDormant:
_setRequestId:
_clearSendBuffer
sessionIsActive
canHandleRequest
connectionMode
refId
_clearLimbo
_resetServerConnectionSynchronously:completion:
_informDelegateOfError:
reason
ad_error
_assistantFailedForReason:error:
_refIdIsLimboId:
_removeLimboId:
_passObjectToDelegate:
version
_informDelegateCannotHandleRequest:error:
_saCommandFailed:
_saGetAssistantData:
_saAssistantLoaded:
_saAssistantNotReady:
_saSetConnectionHeader:
_saCommandIgnored:
sendCommand:opportunistically:
siriCore_invokeThunk
mutableCopyWithZone:
initWithDictionary:
logEventWithType:contextProvider:
siriCore_logDiagnostics
_sendServerCommand:
assistantIdentifier
loggingAssistantIdentifier
speechIdentifier
sharedUserIdentifier
loggingSharedUserIdentifier
lastAssistantDataAnchor
setLoggableAssistantId:
setLoggableSharedUserId:
setLanguage:
_saConnectionType
setConnectionType:
_sendAssistantDataAndPendingCommandsIfNeeded:
assistantSessionWillStartConnection:
_requestForAssistantData
_sendLoadAssistant
assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:
handleCommand:
assistantSessionConnectionDidClose:
assistantSession:receivedError:isRetryableError:
_cachedAssistantData
anchor
_setPendingAssistantDataAnchor:
siriConnection:willStartWithConnectionType:
siriConnection:didOpenWithConnectionType:delay:
siriConnection:didReceiveAceObject:
siriConnectionDidClose:
siriConnection:didEncounterError:
initOnQueue:withAccount:languageCode:connectionMode:sharedUserIdentifier:loggingSharedUserIdentifier:
supportsSync
_startSession
barrier:
setHasActiveRequest:
_handleAceObject:
speechRecognized:
speechRecognitionError:
_sendServerCommands:
_shouldRetry
_sendAssistantDataChangedSinceAnchor:refId:
_serverConnection
_hasActiveRequest
_requestStartTime
_loadRetryStartTime
_sessionInitCommandId
_startObservingSystemControllerLifecycle
_startObservingSystemVolumes
_fetchSystemVolumes
_stopObservingSystemControllerLifecycle
_stopObservingSystemVolumes
numberWithFloat:
adAVSystemControllerDidChange:
initWithQueue:speechController:
fetchSmartSiriVolume
updateSiriOutputVolume:completion:
performBlockUntilSiriOutputVolumeUpdatesAfterTimestamp:withTimeout:block:
setClientConfiguration:
setSiriOutputVolume:operationType:completion:
systemVolumeChanged:
_handleSystemVolumeChangeForCategory:volume:reason:
_speechController
_volumesByCategory
_clientConfiguration
sharedObserver
controlGroup
experimentGroups
mutableCopy
insertObject:atIndex:
allGroups
_getConfigurationsWithCompletion:
_getContextWithCompletion:
experimentIdentifier
setExperimentIdentifier:
synchronize
initWithExperimentsByConfigurationIdentifier:
sharedManager
fetchConfigurationsWithCompletion:
fetchContextWithCompletion:
_builtInConfigurationsByIdentifier
_currentContext
initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:
dataUsingEncoding:
salt
allocation
addListener:
getTimerSnapshotWithCompletion:
timersByID
clockTimerObserver:timerDidFire:
clockTimerObserver:timerDidDismiss:
clockTimerObserver:snapshotDidUpdateFrom:to:
getIncrementalChangesAfterGeneration:limit:completion:
getSnapshotWithCompletion:
_serviceManager
allServices
initWithBlock:
invoke
runServiceMaintenanceWithCompletion:
sequence
initWithSequence:type:commandPushGenerationsRequest:commandPushGenerationsResponse:commandPullGenerationsRequest:commandPullGenerationsResponse:commandPullDeltaRequest:commandPullDeltaResponse:commandPullSnapshotRequest:commandPullSnapshotResponse:
_sequence
_type
_commandPushGenerationsRequest
_commandPushGenerationsResponse
_commandPullGenerationsRequest
_commandPullGenerationsResponse
_commandPullDeltaRequest
_commandPullDeltaResponse
_commandPullSnapshotRequest
_commandPullSnapshotResponse
setSequence:
setType:
setCommandPushGenerationsRequest:
setCommandPushGenerationsResponse:
setCommandPullGenerationsRequest:
setCommandPullGenerationsResponse:
setCommandPullDeltaRequest:
setCommandPullDeltaResponse:
setCommandPullSnapshotRequest:
setCommandPullSnapshotResponse:
_acousticIDHelper
startNewAcousticIDSessionWithRequestId:refId:
shouldSendFingerprintForDuration:
searchCommandForFingerprintData:withDuration:
_sendCommandToServer:
currentSession
_speechManager
context
_acousticId_startSessionForSpeechRequest:
_currentClient
adMusicWasDetected
hasRelatedCommandForRefId:
sessionIsComplete
cancelSessionCommand
failCurrentSession
handleCommandFailed:
adAcousticIDRequestWillStart
acousticIdSearchSessionId
_startAcousticIDRequestWithDelegate:withOptions:context:
setFingerprintWasRecognized
_speechDelegateHasReceivedPartialResult
_speechDelegate
cancelSpeechForDelegate:
handleSearchCompleted:
handleRetrySearch:
stopFingerprintingForSuccess:
setSuppressStopAlert:
stopSpeechCaptureIfFingerprintingOnlyWithOptions:
adAcousticIDRequestDidFinishSuccessfully:
_acousticId_startSessionWithContext:
_acousticId_handleFingerprint:duration:
_acousticId_musicWasDetected
_acousticId_hasCommandForRefId:
_acousticId_speechCaptureCompleted
_acousticId_commandFailed:
_acousticId_sessionFailed
_acousticId_reset
_acousticId_clearPartialResultTimer
_saAIRequestSearch:completion:
_saAISearchCompleted:completion:
_saAIRetrySearch:completion:
acousticIDHelperDidStartSession:
acousticIDHelper:didCompleteSessionSuccessfully:
errorWithCode:description:underlyingErrors:
_finalizeWithError:
_handleWatchdogTimeout
_beginSendingWithMessageSender:
_endSendingWithMessageSender:replyMessage:error:
_addError:
_finalizeWithResponseMessage:
cancel
_cancelWatchdogTimer
initWithQueue:deviceIdentifier:timeoutDuration:completion:
beginSendingWithMessageSender:
endSendingWithMessageSender:replyMessage:error:
_watchdogTimer
_numberOfActiveMessageSenders
_errors
_keychainStringForKey:
_setKeychainValue:forKey:completion:
numberWithUnsignedInteger:
floatValue
initWithData:encoding:
accountInfoForIdentifier:
setAccountInfo:forIdentifier:
activeAccountIdentifier
accountIdentifiers
statisticsRecordingEnabled
serverTimeoutInterval
countryCode
setCountryCode:
authenticationDisabled
ignoreLocationWiFiStatus
serverOverride
productTypePrefix
redirectForServerURLString:
setRedirect:forServerURLString:
lastKnownProxyStreamId
setLastKnownProxyStreamId:
lastSyncVerificationDate
setLastSyncVerificationDate:
setSharedUserIdentifier:loggingSharedUserIdentifier:
companionIdentifier
setCompanionIdentifier:
metricsSenderDisabled
proxyConnectionDisabled
lastKnownAnalyticsStoreState
setLastKnownAnalyticsStoreState:
getMaximumOutputVolume:
getMinimumOutputVolume:
getAudioSessionActiveDelay:
_needToPostLanguageNotification
_needToPostOutputLanguageNotification
_redirects
_sharedUserIdentifier
_loggingSharedUserIdentifier
_companionIdentifier
initWithReason:
setErrorCode:
latitude
longitude
hasLocationData
contentAttributeSet
phoneNumbers
hasPhoneNumber
_loadVerificationKeys
startVerificationForKeys:
handleSyncChunk:
getVerificationResultsWithHandler:
_persistedVerificationKeysFilePath
dataWithContentsOfFile:
initForReadingFromData:error:
finishDecoding
initWithArray:
_saveVerificationKeys
currentVerificationID
_removeVerificationNeededForKey:
setVerificationNeededForKeys:
verificationKeys
startVerificationForKeys:requestID:
getVerificationResultsWithTargetQueue:handler:
_verificationID
_cachedVerificationKeys
_ioQueue
initWithListener:connection:
initWithWork:timeout:
enqueueObject:
_incrementAndTestExecutionCount
_doDelayedClientWorkIfAny:
_decrementAndTestExecutionCount
frontObject
dequeueObject
timeout
workItem
doClientWork:withTimeoutBlock:
doDelayedClientWorkIfAny
_listener
_workItemQueue
_executionCount
errorWithDomain:code:userInfo:
invokeWithValue:andValue:andValue:
handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:
handleRemoteCommand:afterCurrentRequest:isOneWay:completion:
adRequestWillReceiveCommand:
adRequestDidReceiveCommand:reply:
adRequestDidCompleteWithSuccess:error:
adRequestEncounteredIntermediateError:
_outstandingCommandGroup
_handler
_workItem
_timeout
dataType
initWithDataType:
_dataType
setDataType:
initWithIdentifer:productType:buildVersion:name:
initWithIdentifer:
setIdsIdentifier:
setIdsFirstRoutableInternetDestination:
productType
buildVersion
locallyPairedPeerInfo
updateSharedInfoWithIdentifier:productType:buildVersion:
initWithUniqueIdentifer:
name
idsFirstRoutableDestination
setIdsFirstRoutableDestination:
airPlayRouteIdentifiers
setAirPlayRouteIdentifiers:
_productType
_buildVersion
_name
_idsFirstRoutableDestination
_airPlayRouteIdentifiers
getAVSystemControllerWithTimeout:completion:
addObserver:
commandSucceeded
generationsByDataType
initWithGenerationsByDataType:
_generationsByDataType
setGenerationsByDataType:
preheatWithOptions:
_sessionManager
preheatSessions
_locationManager
_preheatAllServices
sharedController
_deviceSyncCoordinator
_context_reset
initWithDomainName:className:
initWithCommandType:requestTransformer:responseTransformer:requestHandler:
addService:
_registerDomainSignalServiceWithServiceManager:
_registerNanoServicesWithServiceManager:
setExtensionServiceDelegate:
volumeServiceProvider
serviceForIdentifier:
initWithVolumeServiceProvider:whaService:
_awdSessionStart
initWithSerialQueue:
_motionManager
startUpdatingMotionActivityOnQueue:
stopUpdatingMotionActivity
_awdSessionEnd
setNeedsToSendLocation:
activeAccount
_cancelSessionManager
_sync_reset
_audioPlaybackService
setAudioPlaybackService:
_setCallIsLikely:
_awdRequestStart
requestWillBeginWithOrigin:client:
stopLocationUpdates
requestDidEndWithOrigin:client:
_metrics_recordNetworkSnapshotForEvent:completion:
clear
waitForMyriadDecisionWithCompletion:
_setCurrentRequest:
_setLastRequest:
_replaceRequestDelegate:andCompletion:
beginUpdatingAssistantData
_cancelCurrentRequest
_clearRequestDelegateState
serviceIdentifierForRequestDelegate:
reprioritizeService:
_requestWillStart
_replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:
isStopped
cancelSpeechCaptureSuppressingAlert:
adSpeechRecordingDidFail:sessionUUID:
_clearSpeechDelegateState
adSpeechRecognitionDidFail:sessionUUID:
logRequestLaunchedApp
ad_languageModel
resetExternalResources
makeObjectsPerformSelector:withObject:
sendCommand:opportunistically:logEvent:
_sendCommandToServer:opportunistically:
_sendCommandToServer:opportunistically:completion:
_addCompletion:forCommandId:
_addOutstandingRequestId:
sendRawCommand:opportunistically:logEvent:
_sendRequestToServer:
setRequestId:
endRetryableRequestForCommand:
adInvalidateCurrentUserActivity
setIsCarryDevice:
adTextToSpeechIsMuted
setTextToSpeechIsMuted:
_sendRetryableRequestToServer:
clientBoundCommands
_handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:
_replaceRequestDelegate:
_reallyHandleNewStartLocalRequest:
_replaceSpeechDelegateWhenReady:suppressAlert:withCompletion:
_handleNextCallbacksForReply:forCommand:forRequestId:
_resultObjectCache
commandsForReply:toCommand:missingReferences:
_handleCommandAndClientReply:
initWithMissingReferences:forRequestId:
setFulfillmentBlock:
addMissingReferencesContext:
setObjectIdentifiers:
hasBeenFulfilled
_handleCommand:peer:completion:
_saAddResultObjects:completion:
_currentRequest
logRequestCancelAfterSeconds:
clearResultObjectsForRequestId:
_requestDidEnd
_removeOutstandingRequestId:
ad_parentRequest
_sync_isSyncing
_shutdownAfterDelay:
_hasActiveClientOrSyncingOrInCall
sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:ignoresMetricsSenderDisabledSetting:completion:
_invokeAllCompletionsWithError:
sharedNetworkActivityTracing
networkActivityTracingCancel
_sync_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
_lockStateSetRestrictionsThunk
adviseSessionArbiterToContinueWithPreviousWinner:
networkActivityStart:activate:
networkActivityStop:
_hasOutstandingRequestId:
_sync_hasCommandForRefId:
_hasCompletionForCommandId:
requiresResponse
appId
setAppId:
callbacks
setCallbacks:
ad_requiresResponse
_invokeCompletionForCommand:
_preheatCallbacksForCommand:
_setPeer:forCommandId:
_removePeerInfoForAceId:
_performCallbacksForCommand:reply:error:
delegateDidHandleCommand:
_handleServiceCommand:completion:
ad_willHaveReply
ad_getNetworkActivityTracingLabel
_addNetworkActivityTracingForLabel:start:
ad_hasCallbacks
_callIsLikely
callIsPossibleForRequestId:
ad_shouldIgnoreCallbacksOnReply
_handleNextCallbacksForReply:forCommand:
serviceForDomain:command:
_firstChanceServiceForCommand:
resultCallbackCode
aceObjectWithGenericCommand:context:
_recievedLocation:locationStatus:
updateWithLocation:locationStatus:
updateForCallIsLikelyDueToRequest:
updateForCallState:
setBackgroundContextDirty
_cancelCallKeepAlive
_scheduleCallKeepAlive
startObservingCallStateWithDelegate:
stopObservingCallStateWithCompletion:
_shutdownSessionWhenIdle
_setIsInCall:
_sync_continueIfConditionsMet
_setHasIncomingCall:
_refIdIsSpeechStart:
_endSpeechRequestForCommand:withError:suppressAlert:
_removeFirstChanceServiceForAceId:
_completeRequestForCurrentDelegate:error:
setObjects:
sessionRequestIdForRefId:
addResultObjects:sessionRequestId:
_handleBareRequestCompleted:
_sync_commandFailed:
_sync_commandIgnored:
_handleSendCommands:forRequestDelegate:completion:
commands
_startNonSpeechRequest:forDelegate:options:suppressAlert:prepareAudio:completion:
holdToTalkThresholdInMilliseconds
ignoreServerManualEndpointingThreshold
setManualEndpointingThreshold:
adSetUserActivityInfo:webpageURL:
_startLocalRequest:forDelegate:suppressCancelationAlertIfCapturingSpeech:
objects
resultObjects
notificationText
setHandoffNotification:
setHandoffRequiresUserInteraction:
_ad_setHandoffPayload:
textToSpeechIsMuted
adServerRequestsTTSStateUnmuted:
startRequest
setStartRequest:
myriadServerProvisioning
deviceClass
setMyriadDeviceClass:
deviceAdjustment
setMyriadDeviceAdjust:
deviceDelay
setMyriadDeviceDelay:
deviceTrumpDelay
setMyriadDeviceTrumpDelay:
setMyriadServerHasProvisioned:
didChangeDefaults
processedAudioDuration
resultId
_acceptResultCandidate:featuresToLog:completion:
updateEndpointHintForDuration:completion:
setProcessedAudioDuration:
setResultId:
enforcePreviousEndpointHint
recordUserAudio
resultCandidateId
eager
noteSuccessOfRequest:inCar:
isLocallyRecognizingInDictationMode
cancelLocalRecognitionIfActive
_languageModelForSpeechRequest:
adSpeechRecognized:usingSpeechModel:sessionUUID:
_handleSpeechRecognizedWithRefId:delegateBlock:
adPronunciationRecognized:usingSpeechModel:sessionUUID:
activationDeviceIdentifier
setActivationDeviceIdentifier:
useAutomaticEndpointing
setUseAutomaticEndpointing:
stopSpeechCaptureWithOptions:
_metrics_markBaselineTimeForSpeechRecognized
_metrics_markSpeechRecognized
_dictationSessionDidComplete
logSpeechRecognized
_informSpeechManagerOfRecognitionForElapsedTime:isFinal:completion:
af_bestTextInterpretation
tokens
lastObject
endTime
longLongValue
adSpeechRecognizedPartialResult:usingSpeechModel:
_handlePartialResultWithRefId:elapsedTime:delegateBlock:
_awdRecordTimeToFirstWord
updateOptionsAfterRecognitionForElapsedTime:isFinal:completion:
adSpeechRecognizedStructuredResult:usingSpeechModel:sessionUUID:
recognition
_metrics_recordFailureMetricsForError:
reasonDescription
adSpeechDidFindVoiceSearchPartialResult:
adSpeechDidFindVoiceSearchFinalResult:
_handleSuspendClientEndpointer:
audioProcessedMs
suspendDurationMs
suspendAutomaticEndpointingInRange:
endpointConfirmationTimestamp
setConfirmed:
setEndpointConfirmationTimestamp:
getLastStartpointTimestampAndCurrentTime:
ad_csEndpointFeatures
updateServerEndpointFeatures:
threshold
setEndpointerThreshold:
delay
setEndpointerDelayedTrigger:
adWaitingForAudioFile
setContext:
adSpeechRecordingDidEndWithSessionUUID:
object
_context_acknowledgeBulletinForObject:
updateLocationForCommand:completion:
_diagnosticsManager
updateLatencyDiagnosticConfiguration:completion:
subType
subTypeContext
setVolumeLevel:
_getSiriOutputVolumeWithCompletion:
volumeValue
_setSiriOutputVolume:operationType:completion:
dictationSessionDidComplete
_metrics_recordRequestStatisticsMetrics
dataDetectorWithTypes:error:
detectionTargets
setDetectionTarget:
range
setLocation:
resultType
setDataDetectionType:
absoluteString
enumerateMatchesInString:options:range:usingBlock:
setMatches:
setResults:
_handleClientReply:error:forSessionCommand:
ad_sendReplyEvenIfCallbacksExist
_sendCommandFailedForCommand:error:
_sendCommandFailedForCommand:reason:
hasResultObjectsForRequestId:
hasMissingRefContextsForId:
_shouldRetryForError:
resetRetryManager
cancelSessions
_sessionDidFailWithError:
startRetry
isLocallyRecognizing
setRestrictionsToAdd:
_metrics_destroyAllMetricsIfNeeded
_sync_assistantLoadedSyncRequest:
_startObservingCallState
adSpeechRecognitionWillBeginRecognitionUpdateForTask:
_sendStartSpeechCommandWithSpeechManager:info:context:
_sendContextAndRestrictionsForSpeechRequestWithInfo:
dictationLanguage
dictationOptions
transcriptionMode
ad_startSpeechDictationWithAFDictationOptions:
currentLocale
localeIdentifier
setRegion:
setCensorSpeech:
applicationName
mainBundle
setApplicationName:
applicationVersion
objectForInfoDictionaryKey:
setApplicationVersion:
interactionId
setInteractionId:
pronunciationContext
setTokenOffset:
setDomainObjectPropertyIdentifier:
orthography
setOrthography:
ad_setParentRequest:
serverCommandId
setStructuredDictationType:
bargeInOptions
setBargeInModes:
speechSynthesisRecord
activationEventMachAbsoluteTime
beginTimestamp
setDurationSincePreviousTTSStart:
endTimestamp
setDurationSincePreviousTTSFinish:
ad_setAFSpeechRequestOptions:
ad_setADRecordingInfo:
motionActivity
setMotionActivity:
motionConfidence
setMotionConfidence:
origin
audioSource
setIsDriving:
_sendEnableServerEndpointerCommandWithRefID:
_sendLocationIfNeededForRequest
_sendGizmoSharedDataIfNeeded
needsToSendLocation
sendGizmoData
_context_updateContext
_sendRestrictionsInPreparationForRequest
adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:sessionUUID:
_awdRecordRecordingWillStart:
adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionUUID:
ad_updateWithRecordingInfo:speechRequestOptions:clientConfiguration:
ad_isDifferentFromStartSpeech:
setPreTriggerToDuckingEndDuration:
setDuckingEventSyncDelay:
adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:sessionUUID:
usePrelisteningMode
setPackets:
setPacketNumber:
_sendSessionObject:opportunistically:
_metrics_speechManagerDidFinish
setPacketCount:
ad_setAFEndpointMode:
ad_setCSEndpointerMetrics:
_speechCaptureCompleted
adSpeechRecordingDidCancelWithSessionUUID:
_sendCancelSpeechForCommand:
adAudioFileFinishedWriting:error:sessionUUID:
_metrics_markLocalSpeechStartedWithModelInfo:
secureOfflineOnly
_metrics_markLocalPartialSpeechRecognition
adSpeechRecordingDidRecognizeTokens:sessionUUID:
_metrics_markLocalEagerRecognitionCandidate:
serverBoundConfusionNetwork
aceRecognition
setRawRecognition:
phrases
utterances
enumerateObjectsUsingBlock:
_metrics_markLocalSpeechPackage
logLocalRecognitionWonForLanguage:
_handleLocalSpeechRecognitionForOfflineSupport:
adSpeechRecordingDidRecognizePhrases:sessionUUID:refId:
speechRecognized
setRecognition:
setSessionId:
_metrics_logSpeechRecognized:resultId:
_metrics_markLocalSpeechCompletedWithStatistics:
speechFailure
setReason:
speechError:
adSpeechRecordingDidDetectStartPointWithSessionUUID:
numberWithLong:
setEndpointTimestamp:
adSpeechRecordingPerformTwoShotPromptWithType:sessionUUID:completion:
logSiriQuickStopAction:
getFiringStatesWithCompletion:
_ad_mediaRemoteOptions
_reallyDoQuickStopOptionalRequestID:mediaRemoteOptions:completion:
adQuickStopWasHandledWithActions:
adAudioSessionWillBecomeActive:
adAudioSessionDidBecomeActive:
adWantsToCacheImage:
adExtensionRequestWillStartForApplication:
adExtensionRequestFinishedForApplication:error:
_handleIntent:inBackgroundAppWithBundleId:reply:
adAudioPlaybackRequestWillStart:
adAudioPlaybackRequestDidStart:
adAudioPlaybackRequestDidNotStart:error:
adAudioPlaybackRequestDidStop:error:
preheatAndMakeQuiet:
prepareAudioSystemWithOptions:setAudioSessionActiveOptions:setAudioSessionActiveReason:completion:
endSession:completion:
_contextManager
forceAudioSessionInactiveWithOptions:completion:
getNowPlayingMediaIsResumable:
isValidForSiriSessionLanguage:
initWithLanguageCode:
_outputVoice_setOutputVoice:
postNotificationName:object:userInfo:
lockRestrictedCommands
firstUnlockRestrictedCommands
controlCenterLockRestrictedCommands
setRestrictions:
initWithThunk:
setShouldWaitForMyriad:
setMyriadDecisionResult:
isDeviceInStarkMode
_setStarkRestriction:
isDeviceInCarDNDMode
_setCarDNDRestriction:
_reallyEndSessionForDelegate:
_ad_requestCommandWithRequestHelper:
_ad_speechRequestOptions
options
text
adStartUIRequestWithText:completion:
_ad_localRequestCommandWithRequestHelper:
handoffURLString
initWithString:
_reallyHandleNewStartRequest:
updateBackgroundContextIfNowPlayingInfoChanged
setIsOnPhoneCall:
notifyState
speechRequestOptions
audioFileURL
_forceAudioSessionActiveWithOptions:reason:completion:
_startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:
activationEvent
cancelSpeechProfileUpdate
startSpeechCaptureForRequestWithOptions:sessionUUID:language:
audioFileType
_startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:
playRecordingStartAlert
startAcousticIDCaptureWithOptions:sessionUUID:
startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:
languageCodeOverride
_clearContext
_context_setSTApplicationContext:
setDictationLanguage:
setDictationOptions:
startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startRecordedDictationCaptureWithSessionUUID:narrowband:
addRecordedDictationAudioSampleData:
_lastRequest
_sendRollbackCommandForCommand:
_updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:
_sendWillStopRecordingForCommand:
ad_setAFSpeechCorrectionInfo:
ad_setAFCorrectionContext:
newAceObjectWithDictionary:context:
_startNonSpeechRequest:forDelegate:
initWithRequestDelegate:
_setFirstChanceService:forAceId:
removeService:
resetWinningState
_context_clearContext
clearDomainObjects
locales
_sendCommandToServer:completion:
setIdiom:
configuredLocales
objectsForIds:missingReferences:
array
accountForIdentifier:
removeAndSave
_clearAccount
updateSharedDataFromCompanionWithCompletion:
stopSendingAddressBookUpdates
needsDestruction
setNeedsDestruction:
save
deleteAllUserVocabularyFromAllAppsAsync
disableDESWithCompletion:
_metrics_destroyAllMetrics
resetSessionsAndMakeQuiet:
refreshValidationData
validationExpiration
timeIntervalSinceNow
location
locationStatus
_remoteRequestHelper
sharedConnection
activateWithRequestInfo:completion:
handoffRequiresUserInteraction
handleIntent:inBackgroundAppWithBundleId:reply:
adRequestRequestedOpenURL:completion:
_remoteSpeechRequestHelper
setSpeechRequestOptions:withCompletion:
currentToken
_domainObjectCache
setDomainObject:forKey:
domainObjectForKey:
_sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:
_sync_setSyncDelegate:
_sync_startDeepSyncVerification
_sync_startDeepSyncVerificationForKeys:
_preheatWithStyle:forOptions:completion:
preheatServicesForDomain:
_forceAudioSessionInactiveWithOptions:completion:
bestSupportedLanguageCodeForLanguageCode:
_setLanguageCode:outputVoice:
_clearQueuedLanguageCode
_clearQueuedOutputVoice
setInProgressOutputVoice:
_setLanguageCode:withCompletion:
_setLanguageCodeIfNeeded
_processQueuedLanguageCode
_processQueuedLanguageCodeAndOutputVoice
_processQueuedOutputVoice
_setLockState:showingLockScreen:
_setConfiguration:forClient:
_endSessionForDelegate:
_startRequest:withDelegate:
_handleRemoteRequest:completion:
_handleRemoteSpeechRequest:completion:
_startSpeechRequestWithDelegate:withOptions:sessionUUID:
_startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:
_startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
_cancelRequestForDelegate:
_rollbackRequestForDelegate:
_startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
_startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
_addRecordedSpeechSampleData:delegate:
_startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
_metrics_sendEngagementFeedback:voiceQueryIdentifier:
_removeDelegate:
_stopSpeechWithOptions:forDelegate:
_cancelSpeechForDelegate:
_updateSpeechOptions:forDelegate:
setSuppressAudioInterruptionEndedNotifications:
adRequestDidHandleFailedStartPlayback:
adRequestWillProcessStartPlayback:
suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:
_sendSpeechCorrectionInfo:forCorrectionContext:
_handleGenericAceCommand:withDelegate:interruptOutstandingRequest:reply:
_context_rollbackClearContext
_context_setOverriddenApplicationContext:withContext:
_context_willSetApplicationContextWithRefId:
_context_setApplicationContext:
_context_setApplicationContextForApplicationInfos:withRefId:
_context_setAlertContextDirty
_prepareForPhoneCall
_telephonyRequestCompleted
_requestBarrier:
_metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:
_metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:
_fetchSupportedLanguagesWithCompletion:
fetchSupportedLanguagesWithCompletion:
_fetchLanguageSettingsForIdiom:completion:
_setSupplementalLanguageDictionary:forProduct:
fetchLanguageSettingsForIdiom:completion:
_accounts
_deleteAccountWithIdentifier:
_activeAccountIdentifier
_setActiveAccountIdentifier:
_destroyActiveAccount
_refreshAssistantValidation
_rescheduleValidationRefresh
_managedStoreObjectForKey:
_setManagedStoreObject:forKey:
_context_fetchApplicationContextForApplicationInfos:completion:
_setUIService:
_startUpdatingMotionActivity
setHasClient:
_stopUpdatingMotionActivity
_resetServices
clearResultObjectsForAllRequestIdsExcept:
_sync_syncIfNeeded
adRequestRequestedOpenApplicationWithBundleID:URL:completion:
adRequestRequestedDismissAssistant
_stopObservingCallStateWithCompletion:
cancelSynchronously
_getDeferredObjectsWithIdentifiers:completion:
startAudioPlaybackRequest:options:completion:
outputAudioPowerUpdater
beginUpdate
createNewXPCWrapperWithCompletion:
endUpdate
_handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:
updateSpeechSynthesisRecord:
getVolumeServiceUsingBlock:
_adviseSessionArbiterToContinueWithPreviousWinner:
info
assistantSessionManager:receivedCommand:
assistantSessionManager:receivedError:isRetryableError:
assistantSessionManager:shouldLogVisibleRequestFailureForError:
assistantSessionManagerSessionConnectionDidReset:
assistantSessionManagerSessionRemoteConnectionDidReset:
assistantSessionManagerShouldAttemptRetry:
assistantSessionManagerCommandsToRestoreStateOnNewConnection:
assistantSessionManager:didChangeRequestIdFrom:toId:
assistantSessionManagerDidCreateAssistant:
assistantSessionManagerDidDestroyAssistant:
assistantSessionManager:didLoadAssistantSyncRequested:
assistantSessionManager:willRetryOnError:
assistantSessionManager:didObserverIntermediateError:
assistantSessionManagerRequestsObservingCallState:
speechManager:preheatWithRecordingInfo:context:
speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:sessionUUID:
speechManager:didStartRecordingWithInfo:context:
speechManager:didUpdateRecordingWithInfo:sessionUUID:
speechManager:capturedPackets:atTimestamp:totalCount:
speechManager:capturedFingerprint:duration:
speechManagerDidDetectMusic:
speechManagerDidDelayEndpointForMusic:
speechManager:didUpdateInputAveragePower:peakPower:
speechManager:didUpdateOutputAveragePower:peakPower:
speechManager:didFinishWithTotalPackets:endpointMode:capturingMode:endpointerMetrics:sessionUUID:
speechManager:didCancelWithSessionUUID:
speechManager:didFailWithError:sessionUUID:
speechManager:didFinishWritingAudioFile:error:sessionUUID:
speechManager:didBeginLocalRecognitionWithModelInfo:sessionUUID:
speechManager:didRecognizeTokens:sessionUUID:
speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:
speechManager:didRecognizePackage:sessionUUID:
speechManager:recognitionUpdateWillBeginForTask:
speechManager:recognitionDidCompleteWithError:sessionUUID:statistics:
speechManager:didDetectStartpointAtTime:sessionUUID:
speechManager:didDetectEndpointAtTime:sessionUUID:
speechManager:performTwoShotPromptWithType:sessionUUID:completion:
speechManager:didRequestQuickStopWithSessionUUID:
speechManager:didRequestShutdownUIWithSessionUUID:
speechManager:didChangeRecordingState:
speechManager:audioSessionWillBecomeActive:
speechManager:audioSessionDidBecomeActive:
locationManager:wantsToSetRequestOrigin:
UIService:executeCommandHandler:
extensionService:wantsToCacheImage:
extensionService:extensionRequestWillStartForApplication:
extensionService:extensionRequestFinishedForApplication:error:
extensionService:handleIntent:inBackgroundAppWithBundleId:reply:
audioPlaybackService:willStartRequest:
audioPlaybackService:didStartRequest:
audioPlaybackService:didNotStartRequest:error:
audioPlaybackService:didStopRequest:error:
adCallStateChangedCallInProcess:
adCallStateChangedCallIncoming:
_hasOutstandingRequests
_didLaunchAppForRequestWithIdentifier:
_fetchStarkDeviceLockedStateWithCompletion:
setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
_sendServiceCommand:completion:
recievedLocation:locationStatus:
_saRequestCompleted:completion:
_saCommandFailed:completion:
_saCommandIgnored:completion:
_saSendCommands:completion:
_saAssistantDestroyed:completion:
_saCancelSucceeded:completion:
_saRollbackSucceeded:completion:
_saSetClientData:completion:
_saSetHandoffPayload:completion:
_saStartLocalRequest:completion:
_saExecuteCallbacks:completion:
_saInitiateHandoffOnCompanion:completion:
_saSetDeviceTTSMuteState:completion:
_saPing:completion:
_saStartUIRequest:completion:
_saDeviceMyriadConfiguration:completion:
_sasResultCandidate:completion:
_sasSpeechServerEndpointIdentified:completion:
_sasVoiceIdentificationSignal:completion:
_sasSpeechRecognized:completion:
_sasPronunciationRecognized:completion:
_sasSpeechPartialResult:completion:
_saStructuredDictationResult:completion:
_saStructuredDictationFailure:completion:
_sasSpeechFailure:completion:
_sasAbortSpeechRequest:completion:
_sasVoiceSearchPartialResult:completion:
_sasVoiceSearchFinalResult:completion:
_sasSuspendClientEndpointer:completion:
_sasConfirmEndpoint:completion:
_sasServerEndpointFeatures:completion:
_sasClientBoundConfusionNetwork:completion:
_saClientSetupInfo:completion:
_saAcknowledgeAlert:completion:
_saGetRequestOrigin:completion:
_saSetLatencyDiagnosticConfiguration:completion:
_saLogSignatureWithABC:completion:
_saTTSGetSpeechSynthesisVolume:completion:
_saTTSSetSpeechSynthesisVolume:completion:
_saUnhandledObject:completion:
_saPerformDataDetection:completion:
_saQuickStop:completion:
resumeInterruptedAudioPlaybackIfNeeded
_setIsTimeoutSuspended:
_prepareForAppLaunchForRequest:
_firstChanceServiceChangeIdFrom:to:
setSyncDelegate:
startDeepSyncVerification
startDeepSyncVerificationForKeys:
startCloudKitSyncWeekly
forceAudioSessionActiveWithOptions:reason:completion:
setLanguageCode:withCompletion:
setQueuedLanguageCode:
setQueuedLanguageCode:andQueuedOutputVoice:
setQueuedOutputVoice:
setLockState:showingLockScreen:
setCarDNDActive:
setConfiguration:forClient:
endSessionForDelegate:
startRequest:withDelegate:
handleRemoteSpeechRequest:completion:
startSpeechRequestWithDelegate:withOptions:
startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:
startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
startAcousticIDRequestWithDelegate:withOptions:context:
startSpeechRequestWithURL:isNarrowBand:withDelegate:
cancelRequestForDelegate:
rollbackRequestForDelegate:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
addRecordedSpeechSampleData:delegate:
startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
sendEngagementFeedback:voiceQueryIdentifier:
stopSpeechWithOptions:forDelegate:
updateSpeechOptions:forDelegate:
handleFailedStartPlaybackWithDestination:completion:
prepareForStartPlaybackWithDestination:completion:
handleGenericAceCommand:withDelegate:interruptOutstandingRequest:reply:
clearContext
rollbackClearContext
setOverriddenApplicationContext:withContext:
willSetApplicationContextWithRefId:
setApplicationContext:
setApplicationContextForApplicationInfos:withRefId:
prepareForPhoneCall
telephonyRequestCompleted
requestBarrier:
sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:
fetchSupportedLanguages
updateHorsemanLanguageSettingsWithCompletion:
fetchAccounts:
fetchActiveAccount:
fetchActiveAccountIdentifier:
destroyActiveAccount
refreshAssistantValidation
rescheduleValidationRefresh
fetchManagedStoreObjectForKey:completion:
fetchContextForApplicationInfo:completion:
openApplicationWithBundleID:URL:completion:
handleCommand:fromPeer:completion:
getDeferredObjectsWithIdentifiers:completion:
beginUpdateOutputAudioPowerForClient:completion:
endUpdateOutputAudioPowerForClient:
_broadcastCommand:
_listInstalledServicesWithCompletion:
_awdRequestEnd:
_requestDelegate
_speechFileDelegate
_deviceIsLocked
_isInStarkMode
_isInCarDNDMode
_isTimeoutSuspended
_requestCompletion
_requestGroup
_requestAssertion
_uiService
_fauxUIService
_speechManagerState
_speechCapturingContext
_speechCompletion
_requestBarrier
_currentSpeechRequestOptions
_startSpeechCommand
_finishSpeechCommand
_startingPronunciationRequest
_pronunciationContext
_speechDelegateHasReceivedSpeechRecognized
_sessionExperiencedError
_hasReceivedServerSpeechRecognitions
_speechHasAcceptedResultCandidate
_speechAcceptedResultCandidateDuration
_selectedResultCandidate
_speechRecognitionGroup
_speechRequestGroup
_continuePendedRequestTimestamp
_droppedPackets
_outstandingRequestIds
_aceCompletionMap
_peerInfoForCommandId
_deviceIsShowingLockScreen
_requestEffectiveStartTime
_restrictionsWereSetForRequest
_requestEndCompletion
_deferredRequestEndIdentifier
_firstChanceServices
_callObserver
_callTransactionUUID
_callTransaction
_hasQueuedLanguageCode
_queuedLanguageCode
_hasQueuedOutputVoice
_queuedOutputVoice
_awdSiriSession
_awdRequestRecord
_baselineTime
_offlineMetricsManager
_isSendingAnalyticsEventStreamsAndOfflineMetrics
_vtStateManagerAccessQueue
_accountStoreQueue
_serviceMaintenanceGroup
_lastClearContext
_syncManager
_syncDelegate
_outstandingAnchorsRequests
_outstandingSyncChunks
_outstandingSyncPromiseKeys
_outstandingSyncPromiseID
_needsToSendSyncFinished
_syncAnchorsRequestQueue
_outstandingSyncVerificationRequestID
_shouldPostSyncVerifyFinishedNotification
_needVerificationFullReport
_verificationHelper
_deepVerificationManager
_partialResultAcousticIDTimer
_hasSanityCheckedAutodownloadedAssets
ad_leadingSilence
ad_trailingSilence
ad_endTime
shouldLogForQA
setRecordDeviceIdentifier:
expectedActivationEventTime
activationEventTime
timerProxyForIntentSupport
setAdCompanionServiceProvider:
_handleMessage:messageType:fromDeviceWithIdentifier:completion:
processRemoteCommandWithPayload:fromPeer:withReply:
handleMessage:messageType:fromDeviceWithIdentifier:completion:
sendMessageWithPayload:toPeer:withReply:
snapshot
initWithSnapshot:
_snapshot
setSnapshot:
ad_aceResponseCommandRepresentationWithErrorCode:reason:
setLabel:
setGroup:
setPredefinedServer:
setAceHost:
setConnectionPolicy:
setConnectionPolicyDate:
setConnectionPolicyHostname:
setConnectionPolicyFirstFailureDate:
setLocaleIdentifier:
setLastAssistantDataAnchor:
setValidationExpiration:
setPeerHostname:
_keychainValueForKey:
setAssistantIdentifier:
_setKeychainValue:forKey:
setLoggingAssistantIdentifier:
setSpeechIdentifier:
setPeerAssistantIdentifier:
setPeerLoggingAssistantIdentifier:
setPeerSpeechIdentifier:
setPeerUserAgentString:
setPeerLanguageCode:
unarchivedObjectOfClasses:fromData:error:
setPeerSiriEnabled:
setPairedWatches:
_markKeychainValuesAsDirty
_serverOverrideFromPreferences
hasSuffix:
rangeOfString:
_hostnameQAOverride
autoupdatingCurrentLocale
_setKeychainValueSync:forKey:
setConnectionPolicyFailureCount:
_onQueueSetKeychainValue:forKey:
_infoDictionaryForPreferences
setServerCertificateData:
setValidationData:
setLocalCryptoKeyData:
_removeKeychainValueForKey:
messageDictionary
_hostnameOverride
serverCertificateData
validationData
setValidationDataSync:
localCryptoKeyData
clearAssistantData
label
group
predefinedServer
aceHost
connectionPolicy
connectionPolicyDate
connectionPolicyHostname
connectionPolicyFailureCount
connectionPolicyFirstFailureDate
_sharedDataChanged
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_peerHostname
_peerLanguageCode
_peerSiriEnabled
_keychainDataMutationFlags
_cachedHostname
_cachedServerCertificateData
_cachedValidataionData
_cachedLocalCryptoKeyData
_hasCachedHostnameQAOverride
_cachedHostnameQAOverride
_keychainQueue
_pairedWatches
_needsDestruction
_label
_assistantIdentifier
_loggingAssistantIdentifier
_speechIdentifier
_group
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_localeIdentifier
_lastAssistantDataAnchor
_validationExpiration
_connectionPolicyFailureCount
_connectionPolicyFirstFailureDate
peerAssistantIdentifier
peerLoggingAssistantIdentifier
peerSpeechIdentifier
peerUserAgentString
peerHostname
peerLanguageCode
peerSiriEnabled
pairedWatches
updateGizmoData:forUniqueId:
watchExistsForAssistantId:
connectionPolicyWithDictionary:context:
saConnectionPolicy
timeToLive
hasConnectionPolicyFailed
connectionPolicyExpirationDate
connectionPolicyStatus
saRemoteDevice:
_cancelBestLocationTimer
setDesiredAccuracy:
_executeBestLocationCompletionWithLocation:
_executeBestLocationCompletionWithLocationErrorWithCode:
startUpdatingLocation
ad_setLocation:
_startBestLocationTimer
_hasActiveBestLocationRequest
_startUpdatingLocation
stopUpdatingLocation
_executeBestLocationCompletionWithLocation:error:
_ad_performWithPeerLocationManagerRemote:completion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_getBestLocationWithCompletion:
_bestLocationTimer
_bestLocationCompletion
_ad_transformedShowActivityRequest
_ad_transformedSuccessResponse
activityDataType
activityView
_initWithDataType:view:
_handleNewConnection:
_xpcListener
_transaction
userActivityWithIdentifier:
appProxy
ad_invokeErrorCompletion:withErrorCode:underlyingError:
launchAppInBackground:userActivityIdentifier:completionHandler:
ad_launchAppWithConnection:userActivityIdentifier:completion:
_ADPBProxyRequestType
service
initWithObject:
hasEqualOrHigherPrecedenceThanServiceRecord:
insertBeforeItem:
insertAfterItem:
previousItem
nextItem
syncKeys
initWithService:precedence:
_addServiceWithRecord:
removeFromList
precedence
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
requiredInfoDictionaryKeys
pathExtension
infoDictionary
setValue:forKey:
initWithContentsOfFile:
_generatedBundleServicesCache
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_bundleServicesCache
initWithBundlePath:infoDictionary:
_addService:precedence:
_loadServicesIfNeeded
_serviceMap
_syncKeyMap
_removeService:
_reprioritizeService:
customVocabSyncInfo
serviceForSyncAnchorKey:
newServiceForSyncAnchorKey:
addServiceWithLowPrecedence:
allSyncAnchorKeys
allVocabSyncInfo
preheatBundleServices
_bundleServicesLoaded
_precedence
_ad_handleStopwatchRequestWithCompletionHandler:
handleSiriRequest:deliveryHandler:completionHandler:
_saveStats
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_statsDirectory
_serviceStatsPath
propertyListWithData:options:format:error:
_statsDict
_commandTimes
_statsForCommand:
timeIntervalSinceDate:
_serviceIdentifier
taskmasterForUIApplicationWithBundleIdentifier:
domainObjectCommitTypeForDomainNamed:
initWithDomainName:
taskmaster:didReceivePunchoutOutcome:
taskmaster:didLaunchApplicationForRequestWithId:
appLaunchHandler:didLaunchAppForRequestId:
setDirectAction:
setStartLocalRequest:
getLocalRequestWithType:completion:
initWithBytesNoCopy:length:freeWhenDone:
setOptions:
initWithConnection:
updateLocalTCCInfoFromMirroredInfo
_tccUpdateQueue
_ignoreLocalUpdates
siriCore_isProvisional
_pendingCommands
_addLimboId:
_shouldSendAssistantData
_sendPendingCommands
_addPendingCommand:
technology
sessionType
assistantSession:receivedCommand:
assistantSession:willRetryOnError:
assistantSession:cannotHandleRequest:error:
setTLSSessionTicketsFlushPending:
sharedDataManager
requestAssistantDataUpdate
_waitingForAssistantData
dataAnchor
requestSync
assistantSession:didLoadAssistantSyncRequested:
sendCommands:opportunistically:
_forceFastDormancy
_releaseDormancySuspension
_sendPendingDormantCommands
_setDormantWithStyle:
_probeSessionIfIdle
_pendDormantCommand:
siriCore_bufferingAllowedDuringActiveSession
_sendLimboCommand:
_cancelSynchronously:
_removeRequestForAssistantData
initWithTechnology:
_adSessionTypeFromString:
assistantDataManager:didUpdateAssistantData:
_setSessionOpened
_sendBuffer
_adSessionTypeString
_requestId
setAWDRequestRecord:
awdRequestRecord
_informDelegateWillRetryOnError:
_sendCommandFailedWithRefId:
_sendDestroyAssistant
doSendPreProcessing:
doSendPostProcessing:
_setAssistantDataAnchorIfNeeded:
eagerlyFetchAssistantData
beginRetryableRequest:
endRetryableRequestForCommandAceId:refId:
delegateDidHandleCommand:didRecognizeSpeech:
getConnectionMetrics:
currentConnectionPreCachedMetrics
prepareForRetry
retryNakedCommandsIfNeeded
cancelSessionRequest:
resetConnection
hasLoadedAssistant
sessionIsAttemptingTryOrRetry
sessionIsWaitingForAssistantData
sessionId
sendRemoteGizmoDeviceToServer:
_currentConnectionType
queueResultObjects:
dequeueResultObjects
setOrUpdateUsefulnessScore:
hasResultObjects
usefulnessScore
hasUsefulnessScore
_connectionMode
_pendingAssistantDataAnchor
_limboIds
_state
_assistantDataRequested
_assistantDataRefId
_dormant
_dormantQueue
_sessionType
_sessionId
_resultObjectsQueue
_resultUsefulnessScore
_hasUsefulnessScore
_canHandleRequest
_appPunchOutHandler:forDomain:completion:
_unhandledCommand:forDomain:completion:
punchOutUri
isValid
setKey:
hasKey
hasValue
_key
_value
incrementalChanges
initWithIncrementalChanges:
_incrementalChanges
setIncrementalChanges:
_invalidate
sendMessage:toDeviceWithIdentifier:completion:
_mode
sendMessage:completion:
_messagingService
_currentSpeechCaptureSource
initWithChannel:
initWithProvider:queue:frequency:delegate:
outputReferenceChannel
_fetchAssetsForLanaugeOrEnablementNotification:
_speechRecorder
releaseAudioSession
_updateRecordRoute:andDeviceIdentifier:
_supportsVolumeService
_interactiveLocalSpeechRecognizer
fetchAssetsForLanguage:completion:
initWithDelegate:instanceUUID:
resetDESWithCompletion:
writeDESRecord
_cleanUpDelegateInfo
_createNewXPCWrapper
_updateSpeechState:
_tellDelegateSpeechFailedWithError:
_tellDelegateSpeechCanceled
_tellDelegateSpeechFinishedWithPacketCount:endpointMode:endpointerMetrics:
endSpeechLog
_releaseSession
setSpeechRequestOptions:
offlineLanguage
detectUtterances
originalAudioFileURL
modelOverrideURL
recognitionOverrides
startSpeechRecognitionWithLanguage:task:context:narrowband:detectUtterances:maximumRecognitionDuration:farField:secureOfflineOnly:censorSpeech:originalAudioFileURL:overrides:modelOverrideURL:didStartHandler:
_tellDelegateSpeechStartedWithRecordingInfo:
beginNewSpeechLogWithFormat:
_speechCodecError
_cancelRecordingWithError:suppressAlert:
_tellDelegateUpdateAudioInfo:
logVoiceRecordingEnd
finishAudio
_recordingStoppedWithError:endpointMode:totalPacketCount:endpointerMetrics:
appendSpeechPackets:
_tellDelegateAboutSpeechPackets:atTimestamp:count:
addAudioPacket:
_tellDelegateAboutFingerprint:duration:
_tellDelegateMusicWasDetected
_tellDelegateEndpointWasDelayedForMusic
_tellDelegateAudioFileDidFinish:error:
_tellDelegateSpeechStartpointWasDetectedAtTime:
_tellDelegateSpeechEndpointWasDetectedAtTime:
_tellDelegateToPerformTwoShotPromptWithType:completion:
_tellDelegateQuickStopWasRequested
_tellDelegateShutdownUIWasRequested
isSmartSiriVolumeAvailable
_fetchSmartSiriVolume:
_updateSiriOutputVolume:completion:
_tellDelegateWillSetAudioSessionActive:
_tellDelegateDidSetAudioSessionActive:
_volumeService
_tellDelegateAboutInputAveragePower:peak:
eagerlyInitializeAudioRecording
_updateCapturingStateWithOptions:
preheatSpeechRecognitionWithLanguage:
fetchAudioSessionID
initWithBlock:defaultValue:
invokeWithValue:
performBlockAfterAlerts:timeout:
_addRecordStoppedCompletion:
prepareSpeechCaptureWithOptions:error:
_startFixedPriorityCaptureForMode:options:sessionUUID:
startContext
_startCaptureForMode:options:context:
_badStateError
prepareForMode:
recordingInfoForPreheatWithEvent:
_tellDelegateSpeechShouldPreheatWithRecordingInfo:
_tellDelegateSpeechRecognitionUpdateWillBegin
acousticIdEnabled
setFingerprintingEnabled:
setAudioFileType:
audioFileHandle
setAudioFileHandle:
speechRecordingEventListeningEndpoint
setSpeechRecordingEventListeningEndpoint:
_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:
startSpeechCaptureWithContext:willStartHandler:error:
isInitialBringUp
logTimeToBeepWithDuration:
_speechCompressor
startCompressionNarrowband:
addAudioSampleData:
startPlaybackWithURL:narrowBand:dictation:completion:
cancelCurrentSpeechLog
stopContext
_stopSpeechCaptureWithOptions:
suppressStopAlert
stopSpeechCaptureForEvent:suppressAlert:
setSuppressInterruptionEndedNotifications:
startWaitingForMyriadDecision
stopWaitingForMyriadDecision
_endSessionIfIdle
_cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:
setSpeechWasRecognizedForElapsedTime:isFinal:
forceSuccessAudioAlertOnStop
stringByReplacingOccurrencesOfString:withString:
speechProfileDataLastModifiedDataForLanguage:
_requestSpeechProfileUpdateForLanguage:
_updateSpeechProfileForLanguage:
updateSpeechProfileWithLanguage:completion:
localSpeechRecognizer:didRecognizeTokens:
localSpeechRecognizer:didProcessAudioDuration:
localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:
localSpeechRecognizer:didRecognizePackage:
localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:
speechCapturingDidStartRecordingSuccessfully:error:withInfo:
speechCapturingDidUpdateRecordingInfo:
speechCapturingDidRecordSpeechPackets:atTimestamp:totalPacketCount:
speechCapturingDidRecordPCMAudioData:
speechCapturingWillStopRecording
speechCapturingDidStopRecordingWithError:endpointMode:totalPacketCount:endpointerMetrics:
speechCapturing:didReceiveFingerprint:duration:
speechCapturingDidDetectMusic:
speechCapturingDidDelayEndpointForMusic:
speechCapturing:didFinishWritingAudioFile:error:
speechCapturing:didDetectStartpointAtTime:
speechCapturing:didDetectEndpointAtTime:
speechCapturing:performTwoShotPromptWithType:completion:
speechCapturingDidRequestQuickStop:
speechCapturingDidRequestShutdownUI:
speechCapturingDidRequestUpdateSiriOutputVolume:
speechCapturing:willSetAudioSessionActive:
speechCapturing:didSetAudioSessionActive:
audioPowerUpdaterDidUpdate:averagePower:peakPower:
isLocallyRecognizingInSiriMiniMode
resetLocalRecognizer
isCapturing
isDriving
inputAudioPowerUpdater
_localSpeechRecognizerTask
_profileUpdateDelayTimer
_profileUpdateCoalescingTimer
_speechState
_shouldTalkToDelegate
_capturingMode
_capturingContext
_recordingError
_recordStartedCompletion
_recordStoppedCompletion
_releasesAudioSessionWhenRecordingStopped
_speechLog
_currentCapturing
_playbackSimulator
_dictationLanguage
_dictationOptions
_context
_isDriving
_recordRoute
_hasFetchedSmartSiriVolume
_hasUpdatedSiriOutputVolume
_inputAudioPowerUpdater
_outputAudioPowerUpdater
_fetchSyncFlagsOnDisk
_setSyncNeededFlagsForKeys:
_clearSyncNeededFlagsForKeys:
contentsOfDirectoryAtPath:error:
hasPrefix:
substringFromIndex:
stringByAppendingString:
createFileAtPath:contents:attributes:
fetchKeysThatNeedToSync:
setSyncNeededFlagForKeys:
clearFlagsForKeys:
clearAllFlags
_cachedFlags
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:
_listenForAudioRouteChanges
_updateAudioRouteOnMainThread
outputs
portType
_currentRouteIsHandsFree
_notifyObservers:
_audioRouteChanged:
removeObserver:name:object:
_muteStateChanged:
useDeviceSpeakerForTTS
_listenForMuteStateChanges
_stopListeningForMuteStateChanges
_stopListeningForAudioRouteChanges
_useDeviceSpeakerForTTSPreferenceChanged
addHandsFreeStateObserver:
removeHandsFreeStateObserver:
_observers
_useDeviceSpeakerForTTSPreference
_handsFreeLock
muteMode
applicationStateForApplication:
effectiveBoolValueForSetting:
effectiveRestrictedBoolValueForSetting:
internalUserClassification
standardUserDefaults
persistentDomainForName:
defaultWorkspace
openSensitiveURL:withOptions:
initWithBytes:length:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
adShouldSpeakStateDidChange:
initWithAudioDeviceID:
sharedSession
currentInputRoute
_inputRoute
deviceName
_isBluetooth
_deviceName
_uid
initWithSpeechCapturingMode:clientConfiguration:
isRecording
setSpeechCapturingMode:
URLForResource:withExtension:
setAlertSoundFromURL:forType:
setRecordBufferDuration:
getRecordBufferDuration
_speechControllerWithError:
avvcContext
initializeRecordSessionWithContext:
endpointAnalyzer
setEndpointStyle:
setSynchronousCallbackEnabled:
setMeteringEnabled:
setEndpointMode:
setEndpointAnalyzerDelegate:
setDuckOthersOption:
_setDictationModeEnabled:
_updateRecordBufferDuration
resetAudioSession
getLPCMAudioStreamBasicDescription
recordSettingsWithOptions:
prepareRecordWithSettings:error:
_resetSpeechController
_setAlertsIfNeeded
_cancelExtendedEndpointTimer
stopRecording
_logFanState
_speechControllerDidStartRecording:successfully:error:
needsUpdateToPostVoiceMode
updateToPostVoiceMode
_setCurrentDeviceContext
_updateToPostVoiceIfNecessary
numberWithUnsignedLong:
playAlertSoundForType:
limitedAudioLoggingEnabled
enumeratorAtPath:
nextObject
initWithType:fileHandle:priority:
initWithType:pathGenerator:priority:
fileLoggingIsEnabled
canGetPCMStream
_checkAudioLoggingLimits:
speechEvent
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
recordSettings
configureWithAudioStreamBasicDescription:
setStartWaitTime:
setEndWaitTime:
setInterspeechWaitTime:
_setEndpointStyle:
_stopRecordingWithReason:
canPrewarm
prewarmAudioSession
tapToSiriAudioPlaybackRequest
prewarmAudioPlaybackRequest:completion:
canPrepareWithoutInterruption
_prepareSpeechControllerWithOptions:error:
_recordingInfoForEvent:audioAlertStyle:includeBTInfo:includeRecordDeviceInfo:
_stopRecordingForEndpointReason:
setAutomaticEndpointingSuspensionEndTime:
_setSpeechCapturingMode:
_currentRecordRoute
shouldUseVoiceTriggerAnalyzerStyle
setMinimumDurationForEndpointer:
_clearEndpointHint
speechCapturingMode
timestamp
setDelay:
_startAudioPlaybackRequest:options:completion:
startRecordingSettingsWithRecordRouteProvider:
recordContext
startRecordingWithSettings:error:
shouldExplicitlyPlayAlertOnStart
_playAudioAlert:
_scheduleExtendedEndpointTimer
opaqueSessionID
updateAudioSessionID:
logEventWithType:machAbsoluteTime:context:
setSpeechRequestOptions:currentActivationInfo:
_setActivationInfo:
recordDeviceIdentifier
avvcNeedsReconfigForInfo:
setCurrentContext:error:
suppressInterruptionEndedNotifications
releaseAudioSession:
metrics
_logAudioMetrics:
_resetToDefaultAudioContext
initWithListenerEndpoint:
lastStartOfVoiceActivityTime
shouldPlayAlertIfNotPrelistening
processServerEndpointFeatures:
recordRoute
recordDeviceInfo
_currentRecordDeviceInfo
alertStartTime
secondsForHostTime:
_audioDeviceID
voiceTriggerInfo
_speechControllerDidStopRecording:forReason:errorCodeOverride:underlyingError:
_currentRecordingInfo
_logVoiceTriggerInfo:
_setPendingContextIfNecessary
_setupAudioFileWritingForSpeechController:info:
shouldSuppressRecordingStopAlert
startRecording:
_speechRecordingEventListener
handleSpeechRecordingEvent:
flushWithCompletion:
_speechControllerDidReceiveFirstAudioRecordBufferWithHostTime:atHostTime:
logEventWithType:machAbsoluteTime:context:contextNoCopy:
_fingerprinter
appendAudioData:
myriadStateDescription:
beginWaitingForMyriad
endWaitingForMyriadWithDecision:
twoShotPromptType
_performTwoShotPromptForType:atTime:
_speechControllerRequestsOperation:forReason:completion:
_playPhaticWithCompletion:
additionalMetrics
_hardEndpointWasDetectedWithMetrics:atTime:
shouldTreatTimeoutAsHardEndpoint
_checkIfLastEndpointHintShouldBeAccepted
setSaveSamplesSeenInReset:
twoShotAudioPlaybackRequest
playRecordStartingAlertAndResetEndpointer
_handleFakeTwoShotPromptTimeoutWithUUID:
_handleFakeTwoShotPromptCallbackWithUUID:timestamp:duration:error:
_enforceEndpointHint
shouldAcceptEagerResultForDuration:resultsCompletionHandler:
updateEndpointerThreshold:
updateEndpointerDelayedTrigger:
invokeWithSignal:
_setAudioDuckingEnabled:
speechControllerLPCMRecordBufferAvailable:buffer:
speechControllerRecordBufferAvailable:buffers:recordedAt:
speechControllerRecordBufferAvailable:buffers:durationInSec:recordedAt:
speechControllerDidDetectVoiceTriggerTwoShot:atTime:
speechControllerDidStartRecording:successfully:error:
speechControllerDidStopRecording:forReason:
speechControllerDidDetectStartpoint:
speechControllerDidDetectEndpoint:ofType:atTime:
speechControllerRecordHardwareConfigurationDidChange:toConfiguration:
speechControllerDidUpdateSmartSiriVolume:forReason:
speechControllerDidFinishAlertPlayback:ofType:error:
speechControllerBeginRecordInterruption:
speechControllerBeginRecordInterruption:withContext:
speechControllerEndRecordInterruption:
speechController:willSetAudioSessionActive:
speechController:didSetAudioSessionActive:
speechControllerRequestsOperation:forReason:
speechControllerRequestsOperation:forReason:completion:
endpointer:didDetectStartpointAtTime:
endpointer:didDetectHardEndpointAtTime:withMetrics:
_packetCount
_speechCapturingMode
_usingDictationAlerts
_extendedEndpointTimer
_endpointAnalyzer
_activationInfo
_pendingActivationInfo
_fingerprintingEnabled
_audioFileType
_needsAVVCLPCMCallbacks
_audioFileHandle
_audioFileWriter
_audioLogggingFileWriter
_audioVoiceIdentificationTrainingWriter
_startEvent
_recordingState
_didReceiveFirstBuffer
_didDetectStartpoint
_didDetectEndpoint
_didEnterTwoShotMode
_didFakeTwoShotWithAlert
_fakeTwoShotTTSPromptUUID
_serverDidRecognizeSpeech
_fingerprintWasRecognized
_serverDidEndpoint
_didTimeout
_wasCanceled
_suppressRecordingStoppedAlert
_useAutomaticEndpointing
_isRecordingUsingBTRoute
_twoShotStartTime
_forceSuccessAlertOnStop
_needsUpdateCurrentContext
_lastPrepareTimestamp
_accumulatedBufferDuration
_recordingWillStartGroup
_recordDevice
_audioDuckingEnabled
_duckedDeviceID
_speechRecordingEventListenerConnection
_fakeTwoShotTTSPromptWatchdogTimer
_lastAudioRecordBufferStartTime
_lastAudioRecordBufferReceiptTime
_lastEndpointerMetrics
_lastEndpointHintDuration
_lastEndpointHintFeatures
_lastEndpointHintCompletion
_mostRecentSpeechSynthesisRecord
_currentClientConfiguration
_myriadDecisionState
_myriadDecisionGroup
_myriadDelayQueue
_alertPlaybackGroup
_numberOfAVVCAlertPlaybacksByType
_suppressInterruptionEndedNotifications
endpointerType
syncManager:finishedSyncForKeys:postNotification:
_postSyncFinishedNotification
_setCurrentAnchor:
removeLastObject
_setContinueBlock:
syncManager:chunkForSyncInfo:chunkInfo:
syncManagerIsPausingSync:
_currentAnchor
_waitUntilSafeToContinue
_setCurrentAnchorToNext
initWithAnchor:forcingReset:
setReasons:
setForVerification:
_syncFinishedForService:error:
_syncingService:withSyncInfo:receivedChunk:continueBlock:
beginSyncForInfo:chunkHandler:
_finishSync
appMetaData
_preferredSyncKeyOrder
_sortedAnchorsFromAnchors:
_setAnchorsToSync:
_continueSync
_invokeContinueBlockWithKeepGoingArgument:
isSyncing
cancelSyncForAnchor:
syncManagerDidResetInProgressSync:
serviceTimedoutForSync:
initWithServiceManager:queue:
prepareSyncWithAnchors:forReasons:delegate:
addQueuedAnchors:forReasons:
clearQueuedAnchorsAndReasons
queuedAnchors
queuedReasons
continueSync
_forceResetOnNextSync
_setForceResetOnNextSync:
_continueBlock
getAnchorsRequest
setGetAnchorsRequest:
isVerifying
setIsVerifying:
_anchorsToSync
_currentSyncReasons
_queuedAnchorsByNormalizedKey
_queuedReasons
_syncedAnchors
_currentSyncService
_currentSyncID
_currentSyncShouldCancel
_timedoutServices
_isVerifying
_getAnchorsRequest
initWithObjects:
syncKeysForReason:
shouldSyncEverythingForReason:
shouldIncludeAllKnownSiriKitAnchorsForReason:
shouldSyncThirdPartyUserVocabularyForSyncKeys:
shouldSyncIntentPolicyForSyncKeys:
_whitelistedAppSourceSyncKeys
aceDictionary
setAceDictionary:
oldId
setOldId:
_aceDictionary
_oldId
setObject:forKeyedSubscript:
setDomainObject:withOldId:forKey:
oldIdForKey:
_cacheEntriesByAceKey
isOnPhoneCall
hasPlayedStartAlert
_eventIsVoiceTrigger
initWithRecordType:deviceId:
_canUseZLL
hostTimeForSeconds:
_alertBehaviorWithRecordRouteProvider:
audioAlertStyleWithRecordRouteProvider:
isAccessibilityVoiceOverTouchEnabled
isAccessibilityVibrationDisabled
deviceRingerSwitchState
vibratesForDeviceRingerSwitchState:
event
requiresBorealisConsumerCheck
canEnterTwoShot
useBorealisBuffer
usePrelistening
machAbsoluteTime
canDelayAudioSessionActive
_activationMode
_useBorealisBuffer
_usePrelistening
_canDelayAudioSessionActive
_hasPlayedStartAlert
_speechEvent
_timestamp
_machAbsoluteTime
closeWithError:
stringByStandardizingPath
_insertEventRecords:error:
_fetchEventStreamUIDsWithError:
_fetchEventRecords:afterTimestamp:eventStreamUID:deliveryStream:error:
_deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:error:
_purgeDeletedEventRecordsBeforeOrEqualToDate:error:
_fetchEventRecordsCreatedAfterDate:error:
fileExistsAtPath:isDirectory:
attributesOfItemAtPath:error:
_resetForReason:error:
initWithPath:dataProtectionClass:options:
openWithError:
performIntegrityCheckWithError:
initWithName:type:constraints:
defaultColumnConstraintWithName:value:
initWithName:columns:constraints:
fetchTableWithName:error:
columns
setWithCapacity:
arrayWithCapacity:
alterTableWithName:addColumn:error:
createTable:error:
dropIndexWithName:error:
initWithName:tableName:columnNames:options:
createIndex:error:
_preparedDatabaseWithError:
beginTransactionWithError:
subarrayWithRange:
removeObjectsInRange:
insertIntoTableWithName:record:error:
commitTransactionWithError:
rollbackTransactionWithError:
isQueryCriterionWithColumnName:value:negation:
lessThanOrEqualToQueryCriterionWithColumnName:value:
andQueryCriterionWithSubcriteria:
updateTableWithName:valueMap:criterion:error:
timeIntervalSince1970
deleteFromTableWithName:criterion:error:
initWithColumnNames:mode:
selectValuesFromTableWithName:columnName:behavior:criterion:order:range:error:
siriCoreSQLiteValue_toString
greaterThanQueryCriterionWithColumnName:value:
initWithLimit:
selectRecordsFromTableWithName:columnNames:behavior:criterion:order:range:recordBuilder:error:
greaterThanOrEqualToQueryCriterionWithColumnName:value:
initWithPath:
insertEventRecords:completion:
fetchEventStreamUIDsWithCompletion:
fetchEventRecords:afterTimestamp:eventStreamUID:deliveryStream:completion:
deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:completion:
purgeDeletedEventRecordsBeforeOrEqualToDate:completion:
fetchEventRecordsCreatedAfterDate:completion:
purgeWithCompletion:
resetWithCompletion:
path
_database
_eventRecordBuilder
siriCoreSQLiteValue_toNumber
siriCoreSQLiteValue_toData
initWithDeliveryStream:type:timestamp:contextDataType:contextData:
dateWithTimeIntervalSince1970:
initWithEvent:streamUID:dateCreated:
setStorageValue:forKey:
build
_streamUIDValue
_deliveryStreamValue
_typeValue
_timestampValue
_contextDataValue
_contextDataTypeValue
_dateCreatedValue
_ad_canControlLocalVolumeWithCompletion:
logSiriPausedMedia
_ad_performAudioPausingCommand:mediaRemoteService:replyHandler:
positionInMilliseconds
_ad_performWithMediaRemoteService:replyHandler:
repeatMode
shuffleMode
adjustmentInMilliseconds
scalingFactor
logSiriMediaVolumeAction:
acknowledgedExceedingVolumeLimit
_ad_volumeAction
listeningToItem
setListeningToItem:
setSource:
applicationIdentifier
setListeningToMusicApplication:
setHashedGroupID:
position
_ad_performNextItemWithCompletion:
_ad_performPreviousItemWithCompletion:
_ad_performSeekToBeginningWithCompletion:
commandFailedWithReason:
_buildCacheOfWhaServiceSupportedCommands
_commandsForDomain:
_commandsToIgnore
_whaService
_whaServiceSupportedCommands
_volumeServiceProvider
timeIntervalSinceReferenceDate
metricsContext
JSONObjectWithData:options:error:
dataWithJSONObject:options:error:
setMetricsContext:
_ad_transformedMapsRequest
showDirections
itemSource
placeData2
extSessionGuid
extSessionGuidCreatedTimestamp
_initWithPlaceData:extSessionGuid:extSessionGuidCreatedTimestamp:
detailType
setIsCurrentLocation:
setGeoResult:
itemDestination
setResultType:
directionsType
arrivalDate
departureDate
_initWithStartLocation:destinationLocation:directionsType:arrivalDate:departureDate:extSessionGuid:extSessionGuidCreatedTimestamp:
rawData
_initWithLocation:extSessionGuid:extSessionGuidCreatedTimestamp:
isSystemService
_handleCommandInAMOS:completion:
domainFromSADObject
usesManagedStorageForDomain:
_sendAMOSCommand:domain:toBundleWithIdentifier:completion:
expectedResponseClassName
newAceObjectWithGenericCommand:context:
commandFailed
commandIgnored
_amosSADomainObjectCreate:completion:
_handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:
identifiers
setIdentifiers:
_sendAMOSCommandToService:responseHandler:
_amosSADomainObjectRetrieve:completion:
setFields
addFields
removeFields
updateUsingSet:add:remove:
_updateObjectFromService:sadIdentifier:completion:
_amosSADomainObjectUpdate:completion:
_amosSADomainObjectCancel:completion:
isAMOSIdentifier
URLWithString:
_amosSADomainObjectDelete:completion:
_amosSADomainObjectCommit:completion:
_amosSADomainObjectPunchOut:completion:
_saDomainObjectCreate:completion:
_saDomainObjectRetrieve:completion:
_saDomainObjectUpdate:completion:
_saDomainObjectCancel:completion:
_saDomainObjectDelete:completion:
_saDomainObjectCommit:completion:
_saDomainObjectPunchOut:completion:
_ad_handleSettingsRequestWithCompletionHandler:
settings
createResponse
setSettings:
initWithSettingType:valueBeforeUpdate:valueAfterUpdate:
applyChanges
valueAfterUpdate
settingType
setAirplaneMode:
initWithName:reason:userInfo:
createResponseWithSettingChanges:
airplaneMode
numberWithUnsignedChar:
_adPeerInfoForCurrentCommand
openSensitiveURL:
assistantLocalizedStringForKey:table:bundle:
isDeviceLockedWithPasscode
peerInfoForCurrentCommand
initToHandleCommandWithAceId:watchdogTimer:timerQueue:
_clientFlowServiceHelperQueue
_aceId
_timer
_timerQueue
_timerPauseCount
initWithServiceHelper:withConnectionName:
warmUpWithSignal:completion:
_ad_performWithReplyHandler:
executeCommand:peerInfo:completion:
_clientFlowServiceQueue
domainItem
_dateFormatter
_nowString
fileSystemRepresentation
appendSpeechPacket:
containsString:
dataWithBytes:length:
buffersFromSpeechLogAtURL:isNarrowBand:
_logQueue
_filePath
_fetchLostModeState
isLostModeActive
_isLostModeActive
logLocationSend
_ad_getAlarmRequestRepresentationWithCompletionHandler:
_ad_alarmResponseForResponse:
enabled
setEnabled:
frequency
setDaysOfWeek:
hour
setHourOfDay:
minute
setMinuteOfHour:
daysOfWeek
setFrequency:
hourOfDay
setHour:
minuteOfHour
setMinute:
_ad_alarm
_ad_setAlarm:
alarmIds
_ad_internalAlarmIdentifiers
setAlarms:
fetchAlarmsWithIdentifiers:completionHandler:
alarmToCreate
setAlarm:
alarmIdentifier
setAlarmId:
modifications
alarmId
_ad_updateWithModification:
alarmIdentifiers
setAlarmIds:
setCriteria:
results
setAlarmIdentifiers:
addedFrequency
removedFrequency
stringByRemovingPercentEncoding
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
wasInitalizedFromDictionaryRepresentation
_updateAutoDownloadedVoiceAssetsForOutputVoice
setLanguages:
VSSpeechGender
setGender:
setAutoDownloadedVoiceAssets:
_homeInfoDidChange:
releaseDormancySuspendAssertion:
_networkManager
releaseWiFiAssertion
cancelSynchronously:onQueue:completion:
_retryManager
nakedObjectsToRetry
_startConnectionPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:
logConnectionStart
acquireDormancySuspendAssertion:
_connectionURL
setPeerType:
setPeerVersion:
setPeerProviderClass:
setProductTypePrefix:
setDeviceIsInWalkaboutExperimentGroup:
setSiriConnectionUsesPeerManagedSync:
setUsesProxyConnection:
setUrl:
setSendPings:
getConnectionMetricsSynchronously:completion:
isWWAN
_recheckForWiFiTransition
clearNakedObjects
host
startMonitoringNetworkForHost:
getNetworkPerformanceFeed
_resetConnectionPolicyBlacklisting
setImposePolicyBan:
setTimeout:
setPrefersWWAN:
setSkipPeer:
setSkipPeerError:
setUseWiFiHint:
setForceReconnect:
_authenticationDisabled
_cachedValidationData
_cachedServerCertificate
_authenticator
_setCachedServerCertificate:
_eagerAuthDidComplete
prepareWithCertificateData:completion:
canUseWiFiDirectly
acquireWiFiAssertion:
_generateAWDMetricsForWillStartConnection:
diagnosticConnectionType
logConnectionOpenWithConnectionType:
policyId
isEdge
_adjustAceHeaderTimeout:
_connectionOpened
_generateAWDMetricsForOpenedConnection:type:
_siriConnection:didEncounterError:analysisInfo:
_resetServerConnection
_connectionErrorIsTimeout:
_generateAnalyticsContextWithError:
connectionType
connectionURL
interfaceIndex
sendBufferSize
wwanPreferred
updateConnectionDidDropAggdMetrics
updateConnectionDidFailAggdMetrics
aggregatorConnectionType
updateConnectionSetConnectionType:
_generateAWDMetricsForConnectionError:
_connectionErrorSuggestsConnectionPolicyReset:
_updateConnectionPolicyFailureCount:
_connectionErrorIsRedirect:
assistantSessionShouldAttemptRetry:
_analyzeFailureWithAceConnectionAnalysisInfo:
_retryForFailedConnection:withType:onError:
_analyzeFailureWithNonRetriedAceConnectionAnalysisInfo:error:
retryRequestId
latestMappedRequestId
setLatestMappedRequestId:
assistantSession:didChangeRequestIdFrom:toId:
objectsToRetry
setNeedsToRetryNakedObjects
shouldRetryOnConnectionFailure
authenticationAvailable
initWithTargetQueue:
_persistValidationData:withExpiration:
initWithTimeIntervalSinceNow:
_reallyRetryPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:causedByError:forceReconnect:useSecondary:
assistantSession:beginSessionRetryPreferringWWAN:
assistantSessionCommandsToRestoreStateOnNewConnection:
prefersWWAN
_retryWithParameters:skipPeer:skipPeerError:causedByError:useSecondary:
_createAssistant
_sendLoadAssistantWithAccount:validationData:
_sendSetRemoteDevicesWithAccount:
_continueAuthentication
_authenticationFailed
_sendGetSessionCertificateData
_continueAuthWithCertificateData:
requestData
_sendCreateSessionInfoRequestWithData:
_authDataToSign
signedDataForData:
sessionInfoDuration
_setCachedValidationData:withDuration:
_continueSessionInitWithValidationData:
setLastReceivedCommand:
_saGetSessionCertificateResponse:
_saCreateSessionInfoResponse:
_saSessionValidationFailed:
_saAssistantCreated:
_saAssistantDestroyed:
_saAssistantNotFound:
ad_shouldRetry
certificate
sessionInfo
validityDuration
setSessionInfo:duration:
_analyzeRetrySuccessWithAceConnectionAnalysisInfo:
getAnalysisInfo:
assistantSessionDidDestroyAssistant:
aceHostHeader
reconnectNow
appendSessionObjectToRequest:
_sendServerCommandLogErrorForCommand:withContext:
sendCommands:errorHandler:
setSessionInfoRequest:
setSessionValidationData:
setLinkedAssistantId:
setLinkedSpeechId:
logLoadAssistant
setPersonalDomainsEnabled:
setPersonalDomainsAuthenticationMode:
language
setRemoteDeviceHasNoAssistantId:
setRemoteDeviceUnreachable:
setBrandName:
setRemoteDevices:
barrierResultReturnedWithSuccess:
initWithThunk:barrier:
_connectionIsWWAN
assistantSessionShouldRestartConnectionOnWiFi:
forceFastDormancy
performRetrySuccessAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:
performAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:
performRequestAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:
assistantSessionShouldLogVisibleRequestFailure:forError:
_analyzeRequestFailureWithAceConnectionAnalysisInfo:
assistantSessionDidCreateAssistant:
logCreateAssistant
probeConnection
cellularInstant
cellularHistorical
wifiInstant
wifiHistorical
getQualityReport:
_getReportSymptomsBasedNetworkQualityMetrics:
objectAtIndexedSubscript:
setSymptomsBasedNetworkQuality:
networkManagerNonWWANDidBecomeAvailable:
networkManagerLostNonWWANConnectivity:
networkManagerNetworkUnreachable:
siriConnection:didOpenWithConnectionType:routeId:delay:method:
siriConnection:didEncounterError:analysisInfo:
siriConnection:didEncounterIntermediateError:
_generateAWDTransportMetrics:moreComing:transportRecord:
_currentConnectionURL
_cachedValidationDataExpiration
_usingCachedCertificateData
_usingCachedValidationData
_forceValidationRefresh
_checkForWiFiTransitionOnRequestEnd
_prefersWWAN
_skipPeer
_skipPeerError
_forceReconnect
_hasCachedAuthDisabled
_cachedAuthDisabled
_peerType
_peerVersion
_productTypePrefix
_deviceIsInWalkaboutExperimentGroup
_siriConnectionUsesPeerManagedSync
_useWiFiHint
_aceHeaderTimeout
_dormancySuspendAssertion
_isAttemptingRetry
_waitingForDelayedRetry
_requestEndTime
_lastRetryTimeOnQueue
_createSessionInfoRequestId
_badCachedCertRetryCounter
_metricsCache
_pairedWatchUniqueId
_metricsGroup
_registerForRingerMuteStateNotifications
_ringerStateToken
_updateRingerMuteState:
_unregisterForRingerMuteStateNotifications
notificationWithName:object:
postNotification:
_muteMode
aceObjectWithDictionary:context:
companionPeer
_remoteExecute_remoteDeviceExecuteCommand:onPeer:completion:
startRemoteExecution:onPeer:completion:
peerForAssistantId:
_remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:completion:
startRemoteSerialzedCommandExecution:onPeer:completion:
serializedCommand
remoteDevice
setResult:
setRemoteDevice:
requiresResponseFromRemote
setResponseFromRemote:
_remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:completion:
setHandoffOriginDeviceName:
_saRemoteDeviceExecute:completion:
post
validity
toAdd
toRemove
_pre
_post
_validity
_toAdd
_toRemove
_abAssistantManager
meCard
sources
addressBookManagerDidUpdateData:meCards:sources:
getMeCardsAndSources:
meCardChanged
load
_answerHandler:completion:
_hangUpHandler:completion:
_incomingCallSearchHandler:completion:
_unhandledCommand:completion:
callCenterWithQueue:
incomingCall
incomingVideoCall
isVideo
initWithCall:
setBehavior:
answerWithRequest:
answerCall:
_hangUpCurrentCall
audioOrVideoCallWithStatus:
audioAndVideoCallsWithStatus:
disconnectCurrentCallAndActivateHeld
hangUpResponse
setPhoneHangUpCallType:
callsWithStatus:
setActiveCallRemaining:
activeCallRemaining
disconnectCall:withReason:
incomingCallSearchResult
_incomingCallTypeForService:
setIncomingCallType:
_personAttributeForCall:
phones
number
setTypedData:
emails
emailAddress
setCaller:
setIncomingCallSearchResults:
personAttribute
_personForCall:
setObject:
displayContext
setDisplayText:
contactIdentifier
person
setInternalGUID:
personNameComponents
namePrefix
setPrefix:
givenName
setFirstName:
middleName
setMiddleName:
familyName
setLastName:
nameSuffix
setSuffix:
nickname
setNickName:
phoneticRepresentation
setFirstNamePhonetic:
setLastNamePhonetic:
companyName
setCompany:
_contactForCall:
stringFromContact:style:
setFullName:
phone
setNumber:
setPhones:
email
setEmailAddress:
setEmails:
setNamePrefix:
setGivenName:
setFamilyName:
setNameSuffix:
setNickname:
setPhoneticGivenName:
setPhoneticMiddleName:
setPhoneticFamilyName:
setOrganizationName:
_addTimer:
gender
footprint
isCustom
VSSpeechFootprint
setFootprint:
setIsBuiltInVoice:
contentVersion
setContentVersion:
masteredVersion
setMasteredVersion:
isBuiltInVoice
languages
isEqualToNumber:
VSSpeechType
VSVoiceAsset
isMatchForVoiceAsset:
genderForVSSpeechGender:
setLastKnownStreamId:
hasLastKnownStreamId
lastKnownStreamId
_lastKnownStreamId
_ad_handleAceDomainSignalRequestWithCompletionHandler:
_ad_preheatableServiceDomainForDomainSignalRequest
_ad_handleAceDomainSignalRequest:completionHandler:
_ad_preheatableDomain
appIdHints
_ad_likelyApplicationBundleIdentifiers
_ad_recordPreheatLaunchOf:
openApplication:options:withResult:
createResponseWithReplyCommand:
clientBoundCommand
requestTypeCode
responseClass
_clearOutstandingSearchIds
setAcousticIdSessionId:
setFingerprint:
_addOutstandingSearchId:
_removeOutstandingSearchForRefId:
minimumDurationForRetry
_currentSession
_outstandingSearches
_completed
_sessionIsComplete
_minumumFingerprintDuration
initWithQueue:calloutQueue:
setObserverFeed:
_getRestrictedAppsFromBulletinBoard
allowsNotifications
showsInLockScreen
contentPreviewSetting
sectionID
_siriRelatedRestrictedAppsForApps:
getSectionInfoWithCompletion:
caseInsensitiveCompare:
applicationProxyForIdentifier:
plugInKitPlugins
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
fetchNotificationPreviewRestrictedAppsWithCompletion:
fetchSiriRelatedNotificationPreviewRestrictedAppsWithCompletion:
_observer
_siriRelatedPreviewRestrictedApps
savedCustomVocabularyOverviewDictionary
_attachToSession
_cleanUpDeviceProxies
_detachFromSession
_tearDownAccessoryManager
_tearDownLocalDevice
_setUpLocalDevice
_setUpAccessoryManager
_deviceProxies
reload
_handleInEarStatusChangedForBTDevice:fromAccessoryManager:
updateHeadphoneInEarDetectionState:
getUUIDBytes:
_deviceProxyWithAddress:createsIfAbsent:
_deviceProxyWithUID:createsIfAbsent:
_fetchConnectedDeviceProxies
_fetchPairedDeviceProxies
initWithAddress:dataSource:queue:
initWithDeviceUID:dataSource:queue:
_sessionAttached:result:
_sessionDetached:
_sessionTerminated:
localDevice:event:result:
accessoryManager:event:device:state:
getBTDeviceWithAddress:completion:
getBTDeviceWithDeviceUID:completion:
deviceWithUID:
getConnectedDevicesWithCompletion:
getPairedDevicesWithCompletion:
_session
_localDevice
_accessoryManager
_attachingToSession
_sessionSetupGroup
_deviceProxiesLock
_deviceProxiesByAddress
_deviceProxiesByDeviceUID
_updateDeviceInfo:
_fetchDeviceInfoWithCompletion:
_updateHeadphoneInEarDetectionState:
_fetchHeadphoneInEarDetectionStateWithCompletion:
_getDeviceInfo:
_getHeadphoneInEarDetectionState:
_accessBTDeviceAndAccessoryManagerUsingBlock:
weakObjectsHashTable
supportsInEarDetection
bluetoothDevice:deviceInfoDidChangeFrom:to:
_enumerateObserversUsingBlock:
bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:
setDeviceUID:
bluetoothDeviceDidInvalidate:
setRepresentation
getHeadphoneInEarDetectionState:
connect:
disconnect:
updateDeviceInfo:
deviceUID
_headphoneInEarDetectionState
_address
_deviceUID
setAddress:
setVendorID:
setProductID:
setIsAdvancedAppleAudioDevice:
setSupportsInEarDetection:
setIsEnabled:
setPrimaryInEarStatus:
setSecondaryInEarStatus:
_addListener:
_removeListener:
requestLifecycleObserverRequestWillBegin:origin:client:
_enumerateListenersUsingBlock:
requestLifecycleObserverRequestDidEnd:origin:client:
removeListener:
_listenersLock
_listeners
initWithRequest:replyCommand:
initWithClientBoundCommand:
_clientBoundCommand
_backgroundContextWithObjects:
_backgroundContextWithObject:
backgroundContextWithCachedObjects
navStatus
setNavStatus:
localSearchGetNavigationStatusCompleted
setLocalSearchGetNavigationStatusCompleted:
queueState
setQueueState:
errorIndicatorStatus
setErrorIndicatorStatus:
currentHome
setCurrentHome:
phoneCallState
setPhoneCallState:
musicPersonalizationToken
setMusicPersonalizationToken:
playbackDeviceList
setPlaybackDeviceList:
_navStatus
_localSearchGetNavigationStatusCompleted
_queueState
_errorIndicatorStatus
_phoneCallState
_musicPersonalizationToken
_playbackDeviceList
_registerForAudioSessionInterruptionNotification
_shouldSpeak
_logShouldSpeakState:
_unregisterForAudioSessionInterruptionNotification
_unregisterForRingerStateNotification
_continuePendingSpeechRequestFromTimestamp:
_setBluetoothDevice:
_setRequestOptionsRequireTTS:
releaseAudioSessionOnRecordingCompletion
adClientConnection_enterRequestCommandGroup:
adClientConnection_leaveRequestCommandGroup
_serviceDelegateWithErrorHandler:
requestHandleCommand:reply:
_handleRequestCompletedWithUUID:error:
_serviceDelegate
aceConnectionWillRetryOnError:
startUIRequestWithText:completion:
requestRequestedOpenApplicationWithBundleID:URL:reply:
requestRequestedOpenURL:reply:
getBulletinContext:
getClockContext:
cacheImage:
extensionRequestWillStartForApplication:
extensionRequestFinishedForApplication:error:
requestRequestedDismissAssistant
quickStopWasHandledWithActions:
acousticIDRequestWillStart
musicWasDetected
acousticIDRequestDidFinishWithSuccess:
setUserActivityInfo:webpageURL:
invalidateCurrentUserActivity
_setServerForcedTTS:
startPlaybackDidFail:
willProcessStartPlayback:
audioPlaybackRequestWillStart:
audioPlaybackRequestDidStart:
audioPlaybackRequestDidNotStart:error:
audioPlaybackRequestDidStop:error:
audioSessionWillBecomeActive:
audioSessionDidBecomeActive:
_updateShouldSpeak
_registerForRingerStateNotification
_handleAudioSessionInterruption:
audioSessionDidBeginInterruption
audioSessionDidEndInterruption:
_computeShouldSpeak
shouldSpeakChanged:
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
speechRecordingDidChangeAVRecordRoute:
_speechRecordingDidFinish
speechRecordingDidEnd
speechRecordingDidCancel
speechRecordingDidFail:
speechRecognizedPartialResult:
speechRecordingDidFinishRecognitionUpdateWithError:
speechRecordingWillBeginRecognitionUpdateForTask:
speechRecordingDidRecognizePhrases:utterances:
speechRecognitionDidFail:
speechRecordingStartpointDetected
speechRecordingPerformTwoShotPromptWithType:reply:
_setADShouldSpeak:
audioSessionIDChanged:
primaryInEarStatus
secondaryInEarStatus
deactivateForReason:options:analyticsContext:completion:
_setRequestCompletion:
_updateSpeechRequestOptions:
getAudioStateWithOptions:completion:
_metrics_recordCancellationMetrics
_metrics_awdRequestEnd
sharedCache
cacheableObjectForIdentifier:
serializeCacheableObjects:completion:
remoteTimerManager
reportIssueForError:type:context:processIdentifier:
addViews
arrayWithObject:
setViews:
audioStateAnnouncer:didChangeAudioStateFrom:to:
adSpeechRecognitionDidFinishUpdateWithError:
adSpeechRecordingDidRecognizePhrases:utterances:
adGetBulletinContext:
adGetClockContext:
preheatWithStyle:forOptions:
boostedPreheatWithStyle:completion:
setConfiguration:
willPresentUIWithReply:
didDismissUI
startRequestWithInfo:completion:
startRecordingForPendingSpeechRequestWithOptions:requestId:completion:
startSpeechPronunciationRequestWithOptions:context:completion:
startAcousticIDRequestWithOptions:context:completion:
continuePendingSpeechRequestWithId:fromTimestamp:
cancelRequest
rollbackRequest
requestStateUpdateWithReply:
performGenericAceCommand:interruptOutstandingRequest:reply:
recordUIMetrics:
recordCancellationMetrics
getSerializedCachedObjectsWithIdentifiers:completion:
getRemoteClockTimerSnapshotWithCompletion:
startAudioPlaybackRequest:options:reply:
beginUpdateOutputAudioPowerWithReply:
endUpdateOutputAudioPower
reportIssueForError:type:context:
_listInstalledServicesWithReply:
_pingServiceForIdentifier:reply:
_sendLargeData:reply:
_performCommandDictionary:forBundleIdentifier:reply:
_performTaskCommandDictionary:forBundleIdentifier:reply:
_broadcastCommandDictionary:
_fetchAppContextForApplicationInfo:reply:
_clearAssistantInfoForAccountIdentifier:
_barrierWithReply:
_requestBarrierWithReply:
_startSpeechWithURL:isNarrowBand:
_sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
adAceConnectionWillRetryOnError:
_xpcConnection
_requestInfo
_requestOptions
_requestCommandGroup
_requestUUID
_pendingRequestId
_pendingRequestTimestamp
_pendingSpeechRequestContinue
_numberOfPresentedUIs
_presentedUIReply
_presentedUITransaction
_hasCachedADShouldSpeak
_cachedADShouldSpeak
_requestOptionsRequireTTS
_serverIsForcingTTS
_combinedShouldSpeakState
_isConnected
disableAssistantWhilePasscodeLocked
logEnabledState:
logPeriodicUsageIfNeeded
numOfWords
trailingSilenceDuration
eosLikelihood
pauseCounts
silenceProbability
taskName
processedAudioDurationMs
initWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
appendData:
replaceBytesInRange:withBytes:length:
stopFingerprinting
setSpeechWasRecognizedForElapsedTime:
_audioConverter
_bufferedAudio
_packetIndex
_bytesConsumed
_mediaServicesWereLost:
_mediaServicesWereReset:
_fetchAudioSessionID
_updateAudioSessionID:
_currentAudioState
initWithListener:
_removeListenerProxiesWithListener:
listener
minusSet:
setAudioSessionID:
_didChangeAudioStateFrom:to:
removeAllListeners
_listenerProxies
_initWithRequest:
replyCommand
_replyCommand
launchId
providers
isSystemProvider
interaction
intentResponse
destinationType
supportsAudioOnly
supportsEmergency
supportsVoicemail
supportsAudioAndVideo
_deleteLegacyOfflineMetricsFiles
_buildOfflineMetricsMap
offlineIdentifier
insertMetrics:withOfflineIdentifier:
deleteMetricsWithOfflineIdentifier:
setOfflineIdentifier:
fetchNextMetricsUsingBlock:
deleteAllMetrics
insertMetrics:
_map
_ad_transformedSendEmailRequest
recipientsTo
_personsForRecipients:
setToRecipients:
recipientsCc
setCcRecipients:
recipientsBcc
setBccRecipients:
receivingAddresses
setReceivingAddresses:
fromEmail
setSender:
subject
setSubject:
message
setMessageBody:
setMessageIdentifier:
_initWithMessage:
setHandle:
setContactHandles:
displayText
voiceSearchTypeOptions
setSearchTypes:
voiceSearchHeaderFields
setHeaders:
voiceSearchQueryParameters
setQueryParameters:
fieldLabel
setFieldLabel:
fieldIdentifier
setFieldId:
interactionIdentifier
requestIdentifier
keyboardType
setKeyboardType:
setPostfixText:
setPrefixText:
setSelectedText:
keyboardIdentifier
setKeyboardIdentifier:
returnKeyType
setKeyboardReturnKey:
setEnablePartialResults:
inlineItemList
setInlineItemList:
setVoiceTriggerEventInfo:
ad_deferredMetricsContext
alternativeSelectionCount
setAlternativeSelectCount:
characterModificationCount
setCharacterChangeCount:
correctedText
setCorrectionText:
setCorrectionSource:
setOrigin:
ad_setAFSpeechEvent:
setAudioSource:
setCodec:
setDeviceIdentifier:
setDeviceModel:
setDspStatus:
setHeadsetAddress:
setHeadsetName:
headsetId
utterance
deviceModel
setProductId:
setVendorId:
recordingInfo
setRingerSwitchOff:
setAlertType:
homeButtonDownEventTime
numberWithLongLong:
setButtonDowntime:
setActivationTime:
setZeroLatencyLaunch:
setActivationAudioAlertStartTime:
setActivationHapticAlertStartTime:
setRecordingInfo:
isEyesFree
setEyesFree:
useStreamingDictation
setWasLaunchedForRequest:
setClientModelVersion:
packets
packetNumber
setEndpoint:
featuresAtEndpoint
setFeaturesAtEndpoint:
serverFeatureLatencyDistribution
setServerFeatureLatencyDistribution:
totalAudioRecorded
setTotalAudioRecorded:
userFacingReasonTitle
userFacingReasonDescription
ad_shouldLogToMetrics
syncReason
views
speakableText
setManagedStorageDomains:
_domainName
_ad_contextLoggerWithEventType:context:completion:
keepReportingNowPlayingTimingEventsHeuristically
_unregisterForBGUpdates
_registerForBGUpdates
_setDelegate:
_cancelNowPlayingCoalescingTimer
setBundleId:
setAppIdentifyingInfo:
_filteredApplicationInfosForLockedStark:
_appInfoWithBundleID:
pidRestrictedCenterNamed:
setTargetPID:
doesServerExist
sendMessageAndReceiveReplyName:userInfo:
setOrderedContext:
_getCurrentUserActivityOnQueue:completion:
_isEligibleForUserActivityReminders
setIsEligibleForReminders:
externalMediaContentIdentifier
setEligibileFunctions:
setIsEligibleForDirections:
setIsEligibleForAppPunchout:
_fetchUserActivityWithUUID:completionHandler:
_currentUserActivityUUIDWithOptions:completionHandler:
saNotificationObjectWithURLString:
alarmsByID
alarmURL
repeatOptions
setFiring:
URLByDeletingPathExtension
voicemailWithIdentifier:
markVoicemailAsRead:
setChatIdentifier:
dictionaryArrayWithAceObjectArray:
setOutgoing:
setMsgRecipients:
_getNowPlayingMediaIsResumable:
mediaType
_isResumableFirstPartyBundleID:
genreID
_isResumableThirdPartyGenreID:
_inlineUpdatePhoneState
_inlineUpdateCurentHomeKitHome
_updateNavStatusWithContext:completion:
_updateNowPlayingInfoWithContext:completion:
_upateSimpleThingsWithContext:completion:
_updateMusicPersonalizationTokenWithContext:completion:
_getBackgroundContext:
_navStatusDidChange:
updateBackgroundContextIfHomeKitInfoChanged
_notePossiblePlayPausedStateChange:
_updateBackgroundContextIfNowPlayingInfoChanged:
_updateBackgroundContextIfMusicPersonalizationTokenChanged
cachedTokenAndResetCache:
contextManagerDidUpdateBackgroundContext:
setCurrentHomeIdentifier:
currentNavigationState
setStatusValue:
sortedArrayUsingSelector:
_reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason:
_schedlueNowPlayingRefreshForReason:
setActive:
setIncoming:
alertContextIsDirty
clearAlertContextDirtyState
backgroundContextIsDirty
clearBackgroundContextDirtyState
getAppContextForDeviceState:applicationInfos:completion:
getAlertContextWithBulletinsFetcher:clockSnapshotFetcher:completion:
markBulletinAsAcknolwedgedForDomainObject:
getDomainObjectFromMessageContext:completion:
getBackgroundContext:
_alertContextIsDirty
_bgContextIsDirty
_bgContextQueue
_registeredForContextUpdates
_bgContext
_analytics
_ignoreNowPlayingUpdatesAfterTimestamp
_nowPlayingCoalescingTimer
_coalescedNowPlayingUpdateSources
_deviceProblemsRegistrationToken
_musicPersonalizationTokenRegistrationToken
siriHomeIdentifier
limit
initWithDataType:generation:limit:
_limit
setLimit:
requestId
_clearRequestCommands
siriCore_isRetryable
_commandRefsOrIsCurrentRequest:
commandRefsRestartCommand:
setLastResponseId:
lastResponseId
siriCore_isRestartable
_canRestartRequest
_objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:
originalRequestId
_retryCount
_restartRequest
_requestObjects
_needsToRetryNakedObjects
_nakedObjects
_originalRequest
_latestMappedRequestId
_ad_handleShowNextEventRequestWithCompletionHandler:
_selectedCalendarsForEventStore:
CalDateForNow
currentCalendar
dateByAddingWeeks:inCalendar:
initWithStartDate:endDate:
startDate
endDate
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
compareStartDateWithEvent:
_shouldExcludeEvent:allowAllDayEvents:
_nextEventFromFilteredEvents:
ad_calendarErrorWithCode:
nanoCalendarLaunchURLForEvent:
CalIsBetweenStartDate:endDate:
indexesOfObjectsPassingTest:
lastIndex
removeObjectsAtIndexes:
rangeWithStartDate:endDate:
midpoint
CalIsBeforeDate:
calendar
isAllDay
hasAttendees
organizer
isCurrentUser
selfParticipantStatus
shared
deselectedCalendarSyncHashes
calendarsForEntityType:
_calendarIDsForSyncHashes:inCalendars:
calendarIdentifier
syncHash
indexOfObject:
launchURL
_timedout
_uuid
_syncChunkHandler
_metrics_isSystemIdle
_metrics_isAssistantOrDictationEnabled
hasActiveSessionForSendingMetrics
category
aggregator
startWaitingForSpeechResponse
speechResponseReceived
logRequestCompletedWithDuration:
_metrics_recordRequestStatisticsMetricsIncludingNearTrigger:
remoteMetrics
suspendEventsStaging
accessStoreUsingBlock:
dateWithTimeIntervalSinceNow:
resumeEventsStaging
_metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:
_metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:
_sendMetrics:requiresActiveSession:completion:
currentEventStreamUID
setCategory:
aa_primaryAppleAccount
aa_personID
setEventInformation:
_reallyCommitOrSaveMetrics:
setOriginalCommandId:
_metrics_gatherAndSendSuccessMetrics
confidenceScore
interpretationIndices
interpretations
removeSpaceBefore
removeSpaceAfter
appendString:
bulletinID
displayName
recencyDate
timeZone
previewRestricted
setApplicationId:
setDateIsAllDay:
setEndDate:
setRecencyDate:
setTimeZoneId:
publisherBulletinID
setNotificationId:
setPreviewRestricted:
routes
cname
componentsWithURL:resolvingAgainstBaseURL:
setHost:
connectionId
initWithServiceIdentifier:delegate:listener:
_preheat
_registerForSleepNotification
_unregisterForSleepNotification
_closePeerConnection
_closeNetworkConnection
hasNearbyPeer
_establishPeerConnection
_establishNetworkConnectionToURL:connectionId:withPOP:
hasActiveConnection
isEstablishing
_doMetricsBookkeepingForPeerStreamsStart
close
setPeerStreamConnection:
_waitForPeerData
openConnectionForURL:withConnectionId:initialPayload:completion:
_peerConnectionFailure
_restartConnectionProviders
_peerReadStreamErrorOccurred:
_hasPeerConnection
_hasOrIsEsablishingNetworkConnection
_connectionMetricsWithCompletion:
isReady
_establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:
_networkConnectionProvider
setConnectByPOPMethod:
setRetransmitConnectionDropTime:
setStaleInterval:
setProviderConnectionPolicy:
_doMetricsBookkeepingForNetworkStreamStart
supportsInitialPayload
_didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:
_networkConnectionFailure
_setupStaleNetworkTimerForProvider:
_networkConnectionDidOpen
_waitForNetworkData
_tryToWriteToNetworkConnection
_cancelStaleNetworkTimer
_fallbackWithSafetyNet
_peerConnectionReceivedData:
readData:
_tryToReadPeerStreamHeaderFromData:needsReconnect:
_tryToReadHTTPHeaderIntoMessage:fromData:isComplete:
_insertCompanionSpecificDataIntoHeader:
_prependHeader:toOutputBuffer:
writeData:completion:
_networkConnectionErrorOccurred:
_networkConnectionReceivedData:
_writeDataToPeer:
_writeDataToNetwork:
_prepareForSleep
updateConnectionMetrics:completion:
connectionProvider:receivedError:
connectionProvider:receivedViabilityChangeNotification:
connectionProviderReceivedBetterRouteNotification:
peerStreamConnection:failedWithError:
peerStreamConnectionHasIncomingPeer:
peerStreamConnection:requestMetrics:
_peerConnectionDidEnd
_networkConnectionDidEnd
_powerChangedMessageType:notificationID:
_peerProvider
_networkOutputBuffer
_dataHasBeenWrittenToNetwork
_staleNetworkTimerSource
_buffer
_networkURL
_outgoingHTTPHeader
_networkConnectionSequenceNumber
_safetyNetBuffer
_ioConnect
_ioNotificationPortRef
_ioNotifier
_currentStartTime
_firstStartTime
_currentOpenTime
_firstByteReadTime
_startCount
_networkURLFromPeer
_connectionId
_connectByPOP
_speechLogDecodingError
reverseObjectEnumerator
arrayWithArray:
setSpeechWasRecognized
_playbackSource
_url
isCanceled
getSocket:
setRemoteMetrics:
getRemoteMetrics:
getAWDMetrics:completion:
getLocalMetrics:
getMetricsContext:
initListenerWithQueue:
setPolicyRoute:
headerDataWithForceReconnect:
shouldFallbackQuickly
isPeerConnectionError:
isPeerNotNearbyError:
isMultipath
shouldFallbackFromError:
setScopeIsWiFiOnly
setKeepAlive:withInterval:withCount:
_setupStaleConnectionTimer
_getNWConnectionWithInitialData:completion:
analysisInfo
_isListener
_missingReferenceFulfillmentContexts
missingReferences
_missingReferenceFulfillmentContextsByRequestId
_requestMap
_mutableResolvedIds
resolvedReferences
setHasBeenFulfilled:
fulfillmentBlock
_removeMissingReferenceContext:
_addObjects:forRequestId:sessionRequestId:
ad_callbacks
commandReferences
_removeMissingRefContextsForRequestId:
allKeysForObject:
commandsForSuccessReplyToCommand:
_requestsWithPhoneCall
phoneSearchResults
phoneHangUpCallType
routeResponse
result
hasArrayForPropertyForKey:
confirmed
set_mutableResolvedIds:
_hasBeenFulfilled
_missingReferences
_fulfillmentBlock
inMemoryKnowledgeStore
_inMemoryKnowledgeStore
userDefaultsKnowledgeStore
defaultSynchedKnowledgeStore
defaultKnowledgeStore
knowledgeStoreWithName:
handleGetValuesForKeys:completion:
handleSetValuesForKeys:completion:
handleDeleteValueForKey:completion:
handleSetLinkedData:completion:
initWithErrorCode:
keys
storeName
storeType
knowledgeStoreWithName:type:error:
setStoreType:
setStoreName:
setEntries:
valuesForKeys:completionHandler:
entries
setValue:forKey:completionHandler:
removeValueForKey:completionHandler:
sparqlQuery
sparqlResultsForQuery:completionHandler:
linkedData
predicate
entityWithIdentifier:
linkTo:withPredicate:completionHandler:
handleGetLinkedData:completion:
_af_analyticsContextDescription
responseCode
_ad_finalMetricsContextWithResponse:error:
appIdentifier
_handleGenericIntentRequest:deliveryHandler:completionHandler:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
diagnosticActions
requestWithURL:
verb
setHTTPMethod:
latencyDiagnosticReportDiagnosticReport
setUri:
setVerb:
setLatency:
dataTaskWithRequest:completionHandler:
latencyDiagnosticReport
setDiagnosticReports:
invalidateAndCancel
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_setNACContext:
_setRequestData:
_getSessionRequestForCertificate:completion:
_requestData
_setSessionInfo:
_signData:withSessionInfo:signedData:
_sessionInfo
_nacContext
_duration
_nacKeyEstablished
_serviceCommandTypeWithDomainName:className:
qualifiedCommandName
isEqualToServiceCommandType:
domainName
domainObjectCreateTypeForDomainNamed:
domainObjectRetrieveTypeForDomainNamed:
domainObjectUpdateTypeForDomainNamed:
domainObjectDeleteTypeForDomainNamed:
domainObjectCancelTypeForDomainNamed:
_className
currentAudioAndVideoCalls
isEndpointOnCurrentDevice
isHostedOnCurrentDevice
currentAudioAndVideoCallCount
_callStateChanged:
registerWithCompletionHandler:
_isObserving
_callCenter
displayScale
addPairs:
pairsCount
clearPairs
pairsAtIndex:
pairsType
pairs
setPairs:
_pairs
_resetTimer
_cancelTimer
allowedTimelimit
setAllowedTimelimit:
_timerSource
_allowedTimelimit
bundleProxyForIdentifier:
bundleURL
_tccAccessInfoForAppID:
privacyPolicy
privacyCategory
authorizationStatusForBundleIdentifier:
redactionTarget
ad_filteredDictionaryWithAppID:
parameters
useCaseId
initWithAppIdentifier:intentString:utterance:info:
backgroundLaunch
_setLaunchToForeground:
_setOriginatingAceID:
setItemsByID:
preferredPullingModeForDeviceWithIdentifier:fromGeneration:toGeneration:
getGenerationForDeviceWithIdentifier:completion:
applyIncrementalChanges:fromDeviceWithIdentifier:
applySnapshot:fromDeviceWithIdentifier:
notifiedFiringAlarmIDs
notifiedFiringTimerIDs
performBlock:
_mergedClockAlarmSnapshot
_mergedClockTimerSnapshot
_dismissFiringItemsWithOptions:
_enumerateAlarmSnapshotsUsingBlock:
_enumerateTimerSnapshotsUsingBlock:
setAlarmsByID:
initialize
getSnapshotsWithCompletion:
_mutateMergedClockTimerSnapshotUsingBlock:
_enumerateAlarmsUsingBlock:
_enumerateTimersUsingBlock:
_localClockAlarmSnapshot
_localClockTimerSnapshot
_remoteClockAlarmSnapshotsByDeviceIdentifier
_remoteClockTimerSnapshotsByDeviceIdentifier
_remoteTimerManager
setSourceIDSFirstRoutableDestination:
setSourceAirplayId:
hasSourceIDSFirstRoutableDestination
hasAssistantId
hasSourceAirplayId
sourceIDSFirstRoutableDestination
sourceAirplayId
_sourceAirplayId
_sourceIDSFirstRoutableDestination
confirmIntentCompleted
protobufMessage
_payloadResponseTypeName
_ad_timerStoreErrorWithCode:
_createUnavailableError
getTimerWithCompletionHandler:
setTimer:completionHandler:
ad_siriTaskHandlerAceTranslationFailureError
_setRefId:
requestCommandAceType
_commandType
_requestTransformer
_responseTransformer
_requestHandler
ad_siriTaskHandlerErrorWithCode:
_stopHouseKeepingTimer
_addConnection:
_removeConnection:
_store
_suspendEventsStaging
_resumeEventsStaging
_linkStoreForSysdiagnose
_unlinkStoreForSysdiagnose
stageEvents:completion:
_stageEvents:
didObserveEvents:completion:
_beginEventsGrouping
_endEventsGrouping
flushStagedEventsWithReply:
_startHouseKeepingTimer
unionSet:
_unstageEvents
_houseKeeperArrived
_processStagedEvents
createSymbolicLinkAtPath:withDestinationPath:error:
observeWithCompletion:
stageEvent:
stageEvents:
_stageEvent:
_houseKeepingTimer
_stagedEvents
_connections
_depthOfEventsGrouping
_streamUID
_observationCompletion
_observerConnection
_isSuspended
siriCore_serializedAceDataError:
siriCore_requestId
siriCore_setSessionRequestId:
siriCore_supportedByLocalSession
_thunkBlock
_barrierBlock
_barrierQueue
setService:
_checkBuddyState
_updateBuddyState
isPastBuddy
_isPastBuddy
_addressBook
internalGUID
initWithAddressBookRecord:fromAddressBook:
addressBookRecordForAcePerson:
speechRecognitionTransactionState
audioFileIOTransactionState
codedLocation
initRequiringSecureCoding:
encodedData
setCodedLocation:
_setContext:forPID:
initWithCollector:pid:connection:
sendContext:
_pid
_collector
_getContextForAppInfo:completion:
_invokeAllCompletionsWithError
_invokeCompletionWithContext:forPID:
_addCompletion:forPID:
getContextForAppInfos:completion:
_hasCompletionForPID:
_completionsByPID
_errorWithCode:underylingError:
_updatePairedDeviceInfo
_requestStreamEstablishment
_initWithServiceIdentifier:listener:
setStreamId:
_wakeUpMessageFailedWithError:
_close
_invokeSocketCompletionWithCurrentSocketOrError:
_initiateOptimisticEagerStreamFetchRetry
_getSocketFromDevice
_streamPairInterruptedError
_wakeUpRemoteForStreamIdentifier:
_getSocketFromDeviceForStreamIdentifier:
_noDeviceError
_noNearbyPeerError
_deviceConnectionClosedErrorWithUnderlyingError:
initSocketWithDevice:options:completionHandler:queue:
_setPreferBTClassic:
_invokeMetricsCompletionWithMetrics:forIdentifier:
setConnectionMetricsForIDS:messageDelay:openErrorCode:
setLinkPreferences:
isCloudConnected
_failureMetricsContextDictionary
_handleResponseProtobuf:forIdentifier:
_ad_performWithPeerStreamConnection:context:
streamId
averageLocalRTT
localMessageState
deviceBlackedOut
_establishEagerStreamPair
sharedPeerStreamConnectionWithServiceIdentifier:listener:
addDelgate:
getSocketForConnection:completion:
closeForConnection:
setPreferBTClassic:
_handleWakeUpMessage:context:
_handleGetMetricsMessage:context:
_handleReestablishMessage:context:
peerSupportsExtendedHeader
deviceIsNearby
_delegates
_currentPeerStreamConnection
_metricsResponses
_wakeupMessageIdentifier
_currentStreamIdentifier
_gettingDeviceSocket
_socketForConnectionHasBeenVended
_deviceConnection
_sockfd
_socketCompletion
_prefersBTClassic
_peerSupportsNamedStreams
_hasOutandingDeviceSharedDataFetch
_optimisticRetriesAreBlocked
_peerSupportsExtendedHeader
_lastNearbyDevicesChangedTimestamp
_lastIDSMessageSentTimestamp
_lastIDSMessageStartSendTimestamp
_lastWakeUpMessageDuration
_lastStreamEstablishmentDuration
_lastOpenErrorCode
_lastIDSMetricsContext
_lastIDSMessageSuccess
_sharedConnection
_vendedDeviceConnection
addNotificationPreviewRestrictedApps:
setSharedId:
setPreviousLangaugeCode:
notificationPreviewRestrictedAppsCount
clearNotificationPreviewRestrictedApps
notificationPreviewRestrictedAppsAtIndex:
setLoggingSharedId:
setUtsRequiredRequestData:
notificationPreviewRestrictedAppsType
setHasSiriEnabled:
hasSiriEnabled
hasSpeechId
hasLanguageCode
hasHostname
setActivityContinuationAllowed:
setHasActivityContinuationAllowed:
hasActivityContinuationAllowed
setHasDictationEnabled:
hasDictationEnabled
hasSharedId
hasPreviousLangaugeCode
hasPreviousOutputVoice
hasOutputVoice
setHasCloudSyncEnabled:
hasCloudSyncEnabled
setHasShouldCensorSpeech:
hasShouldCensorSpeech
hasUserAgent
setHasIsLocationSharingDevice:
hasIsLocationSharingDevice
hasTemperatureUnit
hasLoggingAssistantId
hasLoggingSharedId
hasStoreFrontId
hasAirplayRouteId
hasEkToken
hasUserToken
setHasIsRemotePlaybackDevice:
hasIsRemotePlaybackDevice
hasUserAssignedName
hasUtsRequiredRequestData
activityContinuationAllowed
sharedId
previousLangaugeCode
loggingSharedId
utsRequiredRequestData
_loggingSharedId
_previousLangaugeCode
_sharedId
_utsRequiredRequestData
_activityContinuationAllowed
_peerLocationConnection
_navStatusChanged:
_cancelLocationTimer
authorizationStatusForBundle:
locationServicesEnabled
setPropertiesWithCLLocation:
desiredAccuracy
coordinate
isLocationShiftRequiredForCoordinate:
_locationShifter
horizontalAccuracy
altitude
verticalAccuracy
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
setStatus:
_generateResponseForGetRequestOriginCommand:withStatus:completion:
stopMonitoringSignificantLocationChanges
_bestCachedLocation
_generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:
_generateLocationTimedOutResponseForGetRequestOriginCommand:completion:
_clearCompletionState
_stopMonitoringLocation
desiredCLAccuracy
_startMonitoringLocationWithDesiredAccuracy:
searchTimeout
_scheduleLocationTimerWithTimeout:
_shouldUseOneshotLocationRequest
maxAge
_af_isOlderThanAge:
_af_isWithinAccuracy:
requestLocation
_processUpdatedLocation:
_requestLocationWithBestAccuracy
_shouldSendLocationUpdate:fromLocation:forCommand:
_generateLocationDeniedResponseForGetRequestOriginCommand:completion:
_generateLocationUnknownResponseForGetRequestOriginCommand:completion:
_locationServicesIsEnabled
_generateLocationDisabledResponseForGetRequestOriginCommand:completion:
_setAuthorizationStatusToAuthorizedAndEnabled
_locationUpdateIsCapableOfSucceeding
_generateLocationWiFiOffResponseForGetRequestOriginCommand:completion:
_preferredPlatformLocationAccuracy
_requestLocationForGetRequestOrigin:completion:
_startMonitoringLocationForGetRequestOrigin:completion:
newAssertionForBundle:withReason:
raise:format:
getLocationIsRestricted:
_externalQueue
_needsToSendLocation
_isNavigating
_internalQueue
_lastLocationAuthorizationStatus
_lastLocationServicesIsEnabled
_haveLastAuthorizationAndEnabledValues
_requestOriginCommand
_locationTimerSource
_lastLocation
_locationInUseAssertion
_locationInUseAssertionRefCount
_lastPeerLocation
_updateCompletion
_greenTeaLogger
_af_age
setHorizontalAccuracy:
setVerticalAccuracy:
setLatitude:
setLongitude:
setAltitude:
course
setDirection:
speed
setSpeed:
setAge:
objectsPassingTest:
_pushGenerationsByDataType:completion:
_receiveMessage:completion:
_sendMessage:completion:
_handlePulledDeltaWithIncrementalChanges:forDataType:
_pullDeltaForDataType:generation:limit:completion:
_handlePulledSnapshot:forDataType:
_pullSnapshotForDataType:completion:
_handlePingWithCompletion:
_handlePushGenerationsByDataType:completion:
dataTypes
_handlePullGenerationsForDataTypes:completion:
_handlePullDeltaForDataType:generation:limit:completion:
_handlePullSnapshotForDataType:completion:
_handlePushedOrPulledGeneration:forDataType:
initWithDataTypes:
_pingWithCompletion:
_pullGenerationsForDataTypes:completion:
_incomingSequence
_outgoingSequence
_messageSenders
_ad_transformedWorkoutRequest
workoutType
workoutCategory
workoutLocationType
workoutUserMode
workoutGoal
workoutGoalUnitType
inchUnit
meterUnit
footUnit
yardUnit
mileUnit
secondUnit
minuteUnit
hourUnit
jouleUnit
kilocalorieUnit
goalValue
quantityWithUnit:doubleValue:
isCompatibleWithUnit:
isOpenGoal
skipActivitySetup
_initWithType:location:goal:goalType:userMode:isOpenGoal:skipActivitySetup:
targetWorkoutState
workoutStateValue
_initWithState:
_allAnchorsFromRequest:andResponse:
componentsSeparatedByString:
_resetSyncVerification
setDeveloperMode:
clientIdentifier
_appMetaDataForAppProxy:clientIdentifier:syncSlots:
_intents_findAppsWithAnIntentsServiceExtension:
sharedDeviceConnection
fetchInstalledApplicationsForPairedDevice:completion:
_appMetaDataListFromVocabSources:appIdentifyingInfoList:
setSources:
setSyncReason:
setIncludeAllKnownAnchors:
setAppMetaDataList:
setWatchAppMetaDataList:
_addOutstandingAnchorsRequestId:
forceEagerDeserialization
_sync_isRequestBlockingSyncVerificatiion
setCount:
arrayByAddingObject:
setAnchors:
fetchSyncSnapshotForInfo:handler:
_removeOustandingAnchorsRequestId:
_handleValidatedSyncGetAnchorsResponse:forGetAnchors:
current
_removeOutstandingSyncChunkId:
adSyncVerificationServerReport:
setClientIdentifier:
setAppMetaData:
serverVerify
setPerformInternalVerification:
setFetchSyncDebugInfo:
_emptyVerificationSyncAnchorForKey:appBundleID:syncSlotName:
checksums
clientVerifyResult
setChecksums:
adSyncVerificationPartialResult:
handleSyncChunkInfo:withSyncInfo:completion:
_sync_continueVerificationIfConditionsMet
appMetadata
setPreGen:
setPostGen:
aceObjectArrayWithDictionaryArray:baseClass:context:
_addOutstandingSyncChunkId:
_finishVerificationWithKeys:
isSubsetOfSet:
_sendSyncFinishedAndReferenceCurrentSyncPromise:
_prepareAndStartSyncVerification
_sync_isRequestBlockingSync
_syncChunkWindowFull
_cleanUpForFailureCommandWithRefId:
_hasOutstandingSyncChunkId:
_hasOutstandingAnchorsRequestId:
_hasOutstandingDeepVerificationRequestId:
_requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:
_fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:
clientVerify
_saSyncClientVerify:completion:
setKeys:
_saSyncSetDeepSyncVerificationNeeded:completion:
_saSyncGetAnchors:completion:
_saSyncGetAnchorsResponse:completion:
_saSyncChunk:completion:
_saSyncChunkDenied:completion:
_saSyncChunkAccepted:completion:
_saSyncFinished:completion:
_saSyncServerVerifyResponse:completion:
shortVersionString
setVersion:
bundleVersion
setBuildNumber:
applicationType
itemID
substringToIndex:
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
_bundle
_getLocalRequestWithType:bundle:languageCode:outputVoiceInfo:completion:
requestCompleted
localizedStringForKey:table:bundle:languageCode:
resultCallback
setCommands:
sayIt
setClientBoundCommands:
resultOptions
ad_transcriptionResultRequiresAddressBook
ad_transcriptionResultWithAddressBook:
ad_transcriptionResults
fullName
_ad_personContactHandlesWithAddressBook:
personContactHandlesOfType:withLabels:
resultData
placeResultType
forwardGeoProtobuf
contactId
setAddressBookID:
addressLabel
setAddressLabel:
contactName
setContactName:
setTimings:
providerStyle
connectionMethodHistory
removeObjectAtIndex:
firstTxByteDelay
carrierName
signalStrengthBars
rssi
wifiPhyMode
wifiChannelInfo
isCaptive
dnsResolutionTime
connectionStartTimeToDNSResolutionTimeMsec
connectionEstablishmentTimeMsec
connectionStartTimeToConnectionEstablishmentTimeMsec
tlsHandshakeTimeMsec
connectionStartTimeToTLSHandshakeTimeMsec
tlsVersion
simSubscriptions
flowNetworkInterfaceType
symptomsBasedNetworkQuality
contextData
contextDataType
setNextItem:
setPreviousItem:
_object
_previousItem
_nextItem
getCurrentFanInfo:
fanId
setFanId:
currentSpeed
setCurrentSpeed:
targetSpeed
setTargetSpeed:
_fanId
_currentSpeed
_targetSpeed
_ad_getMessagesRequestValueWithCompletionHandler:
_ad_replyCommandValue
smsIdentifier
_initWithDraftMessageIdentifier:
af_messageValue
_currentToken
_speechRequestOptions
setText:
setHandoffUrlString:
hasText
hasHandoffData
hasHandoffUrlString
setRequiresUserInteraction:
setHasRequiresUserInteraction:
hasRequiresUserInteraction
hasHandoffNotification
hasHandoffOriginDeviceName
handoffData
handoffUrlString
requiresUserInteraction
_handoffData
_handoffNotification
_handoffOriginDeviceName
_handoffUrlString
_text
_requiresUserInteraction
hasStreamId
_streamId
setHasTfoSynDataAcked:
_interfaceName
_tfoSynDataAcked
stringByAppendingFormat:
managedStorageDomains
setFirstUnlockRestrictedCommands:
setLockRestrictedCommands:
setControlCenterLockRestrictedCommands:
_managedStorageDomains
_firstUnlockRestrictedCommands
_lockRestrictedCommands
_controlCenterLockRestrictedCommands
_ad_handleAlarmRequestWithCompletionHandler:
alarm
setAlarmIdentifier:
addAlarm:completionHandler:
deleteAlarmsWithIdentifiers:completionHandler:
alarms
updateAlarms:completionHandler:
criteria
fetchAlarmsMeetingCriteria:searchOptions:completionHandler:
_sendAnalysisMessageForURL:ifaceIndex:bufSize:userVisibleFailure:wwanPerferred:successfulRetry:
initWithQueue:request:options:
prepareWithCompletion:
startWithCompletion:
stop:
_stopAllAudioPlaybackRequests:
beginInterruption
endInterruption:
request
audioPlaybackSessionWillStart:
audioPlaybackSessionDidStart:
audioPlaybackSessionDidNotStart:error:
audioPlaybackSessionDidStop:error:
memoryPressureObserver:didChangeFromCondition:toCondition:
_prewarmAudioPlaybackRequest:completion:
_stopAudioPlaybackRequest:immediately:
_handleInterruption:
_activeSessionsByRequest
_reusableSessionsByRequest
_isValidRestrictionsDomainInfo:
_parseInfoDictionary:
_domains
_syncKeys
_clearsDomainObjectsClassName
_connectionNeedsContextCleared
setHasSuccess:
hasSuccess
_success
currentUserActivity
ad_aceIntentResponseProtobuf
userActivity
activityType
initWithActivityType:
_initWithIntent:
initWithIntent:response:
setIntentHandlingStatus:
_setInteraction:donate:
initWithType:intent:intentResponse:userActivities:
launchAppInBackground:completionHandler:
handledIntent
handledIntentResponse
ad_launchAppWithConnection:completion:
managerForBundleID:bundlePath:
_datastoreManager
_siriAuthorizationStatusForAppID:
writeLatestVocabularyItems:forIntentSlot:completion:
appBundleID
checkIfSyncSlot:isAllowedWithCompletion:
_triggerUserVocabularySyncAttributingApp:vocabType:
currentConnection
auditToken
_requestSiriAuthorization:auditToken:
_appBundleID
_appPath
initWithComponentId:andBlockOnConfiguration:
_AWDTimestampTruncatedToHourPrecision
_currentTime
_setConnectionStartTime:
_submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:
_connectionStartTime
_durationInMillisecondsFromTime:toTime:
setErrorDomain:
_setVoiceRecordingStartTime:
_setVoiceRecordingEndTime:
_voiceRecordingStartTime
_setVoiceSendStartTime:
_setVoiceSendEndTime:
_voiceSendStartTime
metricValue
_voiceRecordingEndTime
setDurationFromVoiceRecordingEnd:
_voiceSendEndTime
setDurationFromVoiceSendEnd:
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
_submitMetricWithIdentifier:generation:
setTimestamp:
getAWDTimestamp
logConnectionFailedWithError:connectionType:
logVoiceRecordingStart
logVoiceSendStart
logVoiceSendEnd
logNetworkAnalyzeRunWithResults:
isForUserRequest
setForUserRequest:
analyzedSuccessfulRetry
setAnalyzedSuccessfulRetry:
setWwanPreferred:
connectionInterface
setConnectionInterface:
sendBufferBytesRemaining
setSendBufferBytesRemaining:
knownURLLoadDuration
setKnownURLLoadDuration:
siriURLLoadDuration
setSiriURLLoadDuration:
siriSaltURLLoadDuration
setSiriSaltURLLoadDuration:
gatewayStatus
setGatewayStatus:
gatewayPingDuration
setGatewayPingDuration:
gatewayPingsSent
setGatewayPingsSent:
gatewayPingsDropped
setGatewayPingsDropped:
_forUserRequest
_analyzedSuccessfulRetry
_wwanPreferred
_connectionInterface
_sendBufferBytesRemaining
_knownURLLoadDuration
_siriURLLoadDuration
_siriSaltURLLoadDuration
_gatewayStatus
_gatewayPingDuration
_gatewayPingsSent
_gatewayPingsDropped
setInterface:
setIsUserRequest:
setAnalyzingSuccessfulRetry:
_durationInMillisecondsForDuration:
af_logDiagnostics
_dataTypes
setDataTypes:
_imageSize
_setImageSize:
addCacheableObject:
_retrieveImageDataWithReply:
setImageProcessingHandler:
handleIntentCompleted
initWithUUID:properties:
_UUID
_properties
_ad_handleTimerRequestWithCompletionHandler:
createResponseWithTimer:
_setAssistantIsEnabledLocal:
_setDictationIsEnabledLocal:
_updateSharedDataWithPairedPeerData:
setSharedDataRequestObserver:withHandler:
updateSharedDataWithCloudData:fromPeer:
setSharedDataObserver:withHandle:
_companionIdentifierDidChangeNotification:
_personalDomainsEnabledDidChangeNotification:
assistantIdForUniqueId:
cachedSharedDataForUniqueId:
_resetPeerAccountSettingsWithSharedData:
peerForUniqueIdentifier:
_updateSharedDataFromPeers:completion:
isEqualToSet:
af_aceTemperatureUnit
af_setAceTemperatureUnit:
resetSessionsAtNextRequestBoundary
getSharedDataFromPeers:completion:
companionPeerUniqueIdentifier
uniqueIdentifierForPeer:
_cloudSyncPreferenceDidChange
updateSharedDataFromCloudPeers:completion:
classExtensionIdentifier
localExtensionForIdentifier:
registerLocalExtension:
_registerLocalExtensions
setUserInfo:
peerInfoForCommand:
_setAirPlayRouteIds:
_executionContext
_setExecutionContext:
_connectionForIntent:
userActivityIdentifier
facadeClass
_prewarmExtensionWithIntent:applicationIdentifier:command:completion:
intentId
hexStringFromData:
extensionInputItems
_extensionInputItems
setExtensionInputItems:
extensionServiceDelegate
requestTimeoutInterval
setTimeoutHandler:
ad_invokeErrorCompletion:forUnderlyingError:
_isExtensionBeingDebugged
commandHandleIntent:inBackgroundAppWithBundleId:reply:
setBackgroundAppHandler:
setImageCachingHandler:
resumeWithCompletionHandler:
processData:usingProcedure:completion:
shouldLoadNativeMessagesExtensionAsBundle
initWithIntent:
loadBundleForBundleIdentifier:wasPrewarmed:
_logPrewarmDidEndWithCommand:applicationIdentifier:wasPrewarmed:completion:
extensionBundleId
localizedDescription
_extension
_updatedEventContextWithExtensionLoadType:wasPrewarmed:
_currentConnection
_peerInfo
_extensionServiceDelegate
passthroughEndpointer:wasConfiguredWithASBD:frameRate:
configureWithASBD:andFrameRate:
passthroughEndpointer:didReceivePCMData:
getStatus:
endpointMode
startWaitTime
interspeechWaitTime
endWaitTime
configureWithSampleRate:andFrameRate:
forwardingTargetForSelector:
functionalEndpointer
setFunctionalEndpointer:
_functionalEndpointer
_systemDomains
_offlineIdentifiers
fileURLWithPath:
setResourceValue:forKey:error:
stringByDeletingPathExtension
_refId
_ad_handleAppLaunchCommandWithRequest:completion:
canOpenApplication:reason:
appIds
setAppToItsRestrictionsMap:
localizedName
appState
isLaunchProhibited
appTags
setLocalizedBundleDisplayName:
setFoundApps:
localizedStandardContainsString:
enumerateSubstringsInRange:options:usingBlock:
insertedOrUpdatedItems
deletedItemUUIDs
initWithGeneration:date:insertedOrUpdatedItems:deletedItemUUIDs:
_insertedOrUpdatedItems
_deletedItemUUIDs
setInsertedOrUpdatedItems:
setDeletedItemUUIDs:
_ADPBLocationRequestType
timerManagerProxyForIntentSupport
setLanguageString:
setName:
setQuality:
setVoiceType:
setVoiceContentVersion:
_hmConnection
sendSiriCommand:completionHandler:
speechRecordingDidBegin
notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:
af_speechPhrases
af_correctionContext
speechDidRecognizePhrases:usingSpeechModel:correctionContext:
speechRecognitionDidFinishWithError:
af_speechToken
speechDidRecognizeTokens:usingSpeechModel:
voiceSearchResults
recognitionText
stable
speechDidReceiveSearchResults:recognitionText:stable:final:
speechDidRecognizeTranscriptionObjects:usingSpeechModel:
pronunciationData
ttsPronunciations
setPhonemeSuggestions:
speechDidFinishWritingAudioFile:error:
notifyAudioFileIOTransactionStoppedForReason:sessionUUID:
startSessionForReason:languageCode:options:speechRequestOptions:
_updateDictationOptions:
setDetectUtterances:
_dictationWillStartWithLanguageCode:options:speechOptions:
anonymousListener
endpoint
stopSessionForReason:
_localSpeechRecognizer
forceOfflineRecognition
taskHint
maximumRecognitionDuration
farField
speechDidProcessAudioDuration:
speechDidRecognizePackage:
localSpeechRecognizer:didRecognizePhrases:utterances:
continuePendingSpeechRequestFromTimestamp:
_usingLocalSpeechRecognizer
_waitingForSpeechRecognition
_waitingForStructuredResultsOrVoiceSearch
_waitingForAudioFile
_sessionTracker
_pendingSpeechRequestListener
_pendingSpeechRequestConnection
_disconnected
mostElevatedApplicationStateForPID:
updateMeters
averagePowerForChannel:
peakPowerForChannel:
willBeginAccessPower
getAveragePower:andPeakPower:
didEndAccessPower
_channel
_languageCodeDidChange:
_sharedAssistantdIdentifierDidChange:
_unregisterForPossibleSessionDestroyingNotifications
_registerForPossibleSessionDestroyingNotifications
_startSession:makeQuiet:
_canStartLocalSession
_updateSharedUserIdentifiers
_saConnectionMode
setAWDRequestRecordMetrics:
_startSessions:
_resetSessionsAndMakeQuiet:
_mapADRequestIdToSessionRequestId:forSession:
_ad_connectionModeFromEnabledState
_cancelOtherSessionRequests:forRefId:
_logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:
_resetResultObjectsTimer
_resultObjectsHoldTime
_resultObjectsTimerFired:
_evaluateResultObjects
_startResultObjectsTimer
mutatingCommand
_keyForRequestId:forSession:
_resetWinningState
_purgeRequestMaps
_reverseMapSessionRequestIdToADRequestId:forSession:
_isDestructive:
_logCommandToMetrics:forSession:outbound:
_allowWhitelistedCommands:
_haveUsefulness:usefulnessScore:
_queueResultObject:forSession:
_hasAtleastOneActiveSessionBesides:
_logMetricsForSessionFailure:withError:completion:
_pickDefaultWinnerWithDroppingSession:
beginSessionRetryPreferringWWAN:
_filterUnsupportedCommands:inGroup:onSession:
_convertEmbeddedRequestIds:originalCommand:session:
_sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:
connectionDidDrop
connectionDidFail
logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:
logEventWithType:contextProvider:contextProvidingQueue:
_preferredSessionType
_mapAndSendSpeechFailure:toLocalSession:
_propagateCachedSpeechErrorToLocalSessions
hasClient
_removeKeyFromProxyMaps:forSession:
_sharedUserIdentifierIsDirty
_isRegisteredForSessionDestroyingNotifications
_sessions
_callInProcess
_hasClient
_aggregator
_proxiedIdMap
_reverseProxiedIdMap
_sessionOriginatedCommandTable
_winningSessionId
_resultObjectsEvaluationTimer
_isQueuingResultsForDelayedEvaluation
_timerFiredOnce
_continueWithPreviousWinner
_lastSessionError
_savedSasSpeechRecognized
_savedSasSpeechRecognizedSubmitted
_savedSasSpeechFailure
_serverDrivenResultsHoldTime
_serverSpeechRecognitionArrived
_needsResetOnRequestBoundary
userActivityForID:
setUserActivity:forID:
_userActivitiesStore
_addressBookRecord
initWithUUID:timestamp:languageCode:options:speechRequestOptions:
_setSpeechRecognitionTransactionState:
_setAudioFileIOTransactionState:
_options
_speechRecognitionTransactionState
_audioFileIOTransactionState
movieRestriction
tvRestriction
appRestriction
_ad_SADHash
initWithOptions:capacity:
_updateVoice:
_updateRestrictions:
_updateVoiceOverStatus:
_updateItunesStoreIdentifier:
sharedConfiguration
_onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:
_updateCallCapability:
_generateAssistantData
_locationRestrictionDidChange:
_currentLocaleDidChange:
_systemTimeZoneDidChange:
_outputVoiceDidChange:
_voiceAssetsUpdated:
_censorSpeechDidChange:
_supportsTelephonyCallsDidChange:
_storeFrontDidChange:
_countryCodeDidChange:
_httThresholdDidChange:
addiTunesObserver
removeiTunesObserver
_notifyObserversOfSAD:
resetSystemTimeZone
systemTimeZone
setTwentyFourHourTimeDisplay:
_cachedRestrictions
setParentalRestrictions:
setAllowUserGeneratedContent:
setMediaPlayerExplicitContentDisallowed:
setMediaContentRatingRestrictions:
setUiScale:
setTtsVoice:
setMeCards:
setAbSources:
setDeviceColor:
setDeviceEnclosure:
setInRetailStoreDemoMode:
preferredLanguages
setPreferredLanguage:
setFullStorefrontId:
setDeviceCapabilities:
setVoiceOver:
manualEndpointingThreshold
setHoldToTalkThresholdInMilliseconds:
setUserInterfaceIdiom:
objectsForKeys:notFoundMarker:
hexStringFromBytes:length:
setAnchor:
isMainThread
updateProvidersForCurrentCountry
effectiveValueForSetting:
setMovieRestriction:
setTvRestriction:
setAppRestriction:
getVoiceInfoForLanguageCode:footprint:gender:type:reply:
inProgressOutputVoice
supportsTelephonyCalls
defaultStore
storeFrontIdentifier
currentDevice
loadStoreFrontWithCompletionHandler:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
contextCollector:didChangeDisplayScale:
getiTunesStoreFrontIdentifierWithCompletion:
_safeUpdateVoiceOverStatus
voiceOverIsActive
setVoiceOverIsActive:
_addressBookManager
_cachedMeCards
_cachedABSources
_cachedCensorSpeech
_cachedAllowUserGeneratedContent
_cachedInRetailStoreDemoMode
_cachedCountryCode
_receivedGeoCountryConfigurationResponse
_voiceTriggerEnabled
_cachedVoice
_initialFetchComplete
_cachedAllowsExplicitContent
_cachedContentRatingRestrictions
_cachedSupportsTelephonyCalls
_displayScaleMonitor
_watchIsInverted
_watchIsOnLeftWrist
_cachedStoreFrontId
_observingiTunesChanges
_cachedSAD
_voiceOverIsActive
isEqualToArray:
setHandoffURLString:
startLocalRequest
handoffRequestData
_ad_setPayloadOnRequestInfo:
setHandoffRequestData:
setUtterance:
directAction
correctedSpeech
correctedSpeechContext
combinedRank
setCombinedRank:
combinedScore
setCombinedScore:
onDeviceUtterancesPresent
setOnDeviceUtterancesPresent:
originalRank
setOriginalRank:
originalScore
setOriginalScore:
previousUtterance
setPreviousUtterance:
utteranceSource
setUtteranceSource:
_ad_voiceInfo
_ad_setVoiceInfo:
_ad_dictionaryRepresentation
_ad_keyValueDictionaryWithDictionary:
outstandingResponses
setOutstandingResponses:
responseType
setResponseType:
responses
setResponses:
timeoutTimer
setTimeoutTimer:
_responseType
_outstandingResponses
_responses
_timeoutTimer
peer
setPeer:
proto
setProto:
error
setError:
_peer
_proto
_error
initWithKeyOptions:valueOptions:capacity:
uniqueID
_airplayRouteDidChange:
_updateActiveAccountState
_updateAirPlayRouteIdentifier
_sendProto:ofType:originalRequestId:toPeers:responseType:completion:
_destinationsForPeers:
_timedOutError
_handleMessageResponse:ofType:orError:fromID:handler:
_peers
_uniqueIdentifierForPeer:
deviceForFromID:
_stripFZIDPrefix
_peerForUniqueIdentifier:
_companionPeer
peers
_uniqueIdForAssistantId:
isEqualToIgnoringCase:
_assistantIdForUniqueId:
_peerForAssistantId:
_setAssistantId:forUniqueId:
_cachedSharedDataForUniqueId:
isActive
getRouteIdentifierWithCompletion:
_sendProto:ofType:toPeers:
_pointerToBlockMap
_setCachedSharedData:forUniqueId:
objectEnumerator
_sendProto:ofType:toPeers:responseType:completion:
_unexpectedMessageError
_startRemoteRequest:onPeers:completion:
firstRoutableInternetDestinationForSelf
setRemoteRequestObserver:withHandle:
_ad_performWithCloudService:fromPeer:completion:
intersectSet:
hasActiveAccount
localPeerUniqueIdentifier
uniqueIdForAssistantId:
setAssistantId:forUniqueId:
_notifyObserversOfSharedData:fromPeer:
_notifyObserversOfSharedDataRequestFromPeer:completion:
_notifyObserversOfRequestInfo:fromPeer:completion:
_handleRemoteExecution:peer:completion:
_sharedDataObservers
_sharedDataRequestObservers
_remoteRequestObservers
_airplayRouteIdentifier
_peerAssistantIdentifiers
_deviceIdentifiers
_peerSharedData
_hasActiveAccount
_setLastMyriadWin:
_syncLastWinWithStereoPartner
_setLastTimeStereoPartnerWon:
_handleRequest:fromDeviceWithIdentifier:completion:
_handleLastWinRequest:completion:
lastMyriadWinForStereoPartner:
_setStereoPartnerIdentifier:
_lastTimeWon
_lastTimeStereoPartnerWon
_stereoPartnerIdentifier
_ADPBDeviceRequestType
_sendContextPromiseForTypes:withAceId:
setPromiseTypes:
_setBackgroundContext
_setAlertContext
_setRestrictedAppContext
_setSyncContext
_sendContextPromiseForTypes:
setPreviewRestrictedApps:
_aceValue
_ensureBackgroundContextSentToServer
search
setIsNew:
setStart:
setEnd:
sectionSubtype
setVoiceMail:
_context_deviceState
orderedContext
withContextManager:
setHasGender:
hasGender
genderAsString:
StringAsGender:
_gender
_defaultStoreSpecificKeyPrefixForName:
_defaultStoreSpecificKeyForName:key:
_storeWithName:
removeValueForKey:error:
initWithMatchType:value:negated:
removeValuesMatching:completionHandler:
_storeMap
_ad_settingsRequestRepresentation
_ad_aceSettingsResponseCommandRepresentationForSiriResponse:
_ad_settingType
_ad_aceSettingsGetBooleanResponseRepresentation
_ad_aceSettingsResponseRepresentationForSetValueCommand:
_ad_getSettingsRequestForHandler:completion:
_ad_setting
_setSettings:
dryRun
_setApplyChanges:
_initWithSettingType:
settingsAction
_ad_aceSettingBooleanEntityRepresentation
valueBeforeUpdate
setPreviousValue:
failOnSiriDisconnectWarnings
setSetting:
settingChanges
handlerForIntent:
transactionWillBeginForIntentIdentifier:
transactionDidCompleteForIntentIdentifier:
localExtensionIdentifier
ad_timerIntentHandlerClassName
_silentVibrationValue
_ringVibrationValue
_fetchRingVibrationValue
_fetchSilentVibrationValue
handleRingVibrationValueChange
handleSilentVibrationValueChange
_ringVibrationState
_silentVibrationState
_beginSpeechRecognitionTransactionForReason:session:
_beginAudioFileIOTransactionForReason:session:
_addSession:
_startedOrStartingSession
_sessionWithUUID:
_endSpeechRecognitionTransactionForReason:session:
_endAudioFileIOTransactionForReason:session:
_sessionsByUUID
_registerCommandHandlersWithRegistry:
valueWithPointer:
_commandRegistry
pointerValue
_selectorForCommandClass:andDomain:
_registerCommandClass:forDomain:withSelector:forRegistry:
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
topic
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setAttributes:ofItemAtPath:error:
fileModificationDate
_getVoiceOver:completion:
_setVoiceOver:completion:
_wrapBoolSettingValue:
_setBoolSetting:currentValueBlock:setValueBlock:completion:
toggle
_prepareWithError:
_startWithCompletion:
_stop:
_beginInterruption
_endInterruption:
itemData
initWithData:error:
itemURL
initWithContentsOfURL:error:
numberOfLoops
setNumberOfLoops:
fadeInDuration
setVolume:
volume
prepareToPlay
isPlaying
_willStartWithCompletion:
_didNotStartWithError:
play
_didStart
setVolume:fadeDuration:
fadeOutDuration
_didStopWithError:
pause
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
_player
_request
_isActive
_isPrepared
bundleInfoValueForKey:PID:
_appIdentifierfromConnection:
logAssistantEnabledSetTo:by:
logDictationEnabledSetTo:by:
setConfigOverrides:
configOverrides
addObserverForName:object:queue:usingBlock:
initWithLanguageCode:gender:isCustom:
getLocalVoiceAssets:
getOfflineDictationStatusIgnoringCache:withCompletion:
createSpeechProfileWithLanguage:JSONData:completion:
setOfflineDictationProfileOverridePath:
setAudioFileURL:
_setSupplementalLanguages:forProduct:forBuildVersion:
_supplementalLanguagesDictionary
supplementalLanguagesModificationDate
supplementalLanguageDictionaryForProduct:
supplementalLanguagesForProduct:forBuildVersion:
syncVerificationPartialResult:
syncVerificationServerReport:
_setMotionActivity:
setActivityHandler:
activity
_motionActivity
_motionActivityManager
_ad_alarmStoreErrorWithCode:
initWithCriteria:searchOptions:
searchOptions
_criteria
_searchOptions
matchesAlarm:
fetchAlarmsMatchingAnyOfQueries:completionHandler:
_af_preferredBundleID
_groupKeyForSyncInfo:domainObject:
groupChecksum
setDomainObjectClass:
setSyncAnchor:
syncAnchor
setIdentifierChecksum:
_checksums
_idCRCChecksums
hasCodedLocation
_codedLocation
_savedAudioFilesDirectory
_initWithType:pathGenerator:xorFileHandle:priority:
fileDescriptor
defaultCStringEncoding
stringWithCString:encoding:
fileURLWithPath:isDirectory:
_generateTemporaryFileURL
_delete
initWithFileDescriptor:closeOnDealloc:
_audioFile
_asbd
_fileHandle
_underlyingError
startTime
silenceStartTime
ad_speechEndTime
_accountDidChange:
_dispatchCallbackForProcessedData:error:completion:
_retrieveKeyAndSaltWithCompletion:
_dispatchCallbackForProcessedDataMap:errorMap:completion:
processDataMap:usingProcedure:completion:
setKeychainValue:forKey:accountIdentifier:completion:
_procedureQueue
_callbackQueue
_inMemorySalt
sharedNotifier
builtInMicVoiceTriggerEvent:hostTime:
setActionType:
notifyActivationEvent:completion:
deviceID
jarvisVoiceTriggerEvent:activationInfo:hostTime:
handleContext:completion:
v8@?0
SyncTimeouts.plist
-[ADSyncBlacklist checkPermissionToSyncSlot:forApp:completion:]_block_invoke
-[ADSyncBlacklist filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:]
v32@?0@"NSString"8@"NSArray"16^B24
B32@?0@"NSString"8@"NSDate"16^B24
primary
v32@?0@"NSString"8@"SiriCoreConnectionTCPInfoMetrics"16^B24
_ad_metrics
T@"SiriCoreConnectionMetrics",C,N,S_ad_setMetrics:
-[SAIntentGroupResolveIntentSlot(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]
-[SAIntentGroupResolveIntentSlot(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]_block_invoke_2
no data
IntentSlotResolutionResult
v16@?0@"NSData"8
ADHomeInfoManager
-[ADHomeInfoManager _currentHome]
-[ADHomeInfoManager _currentHomeInfo]
-[ADHomeInfoManager homeManagerDidUpdateHomes:]_block_invoke
-[ADHomeInfoManager homeManager:didUpdateStatus:]_block_invoke
-[ADHomeInfoManager user:didUpdateAssistantAccessControl:forHome:]_block_invoke
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
ADHomeInfoForThisDeviceDidChangeNotification
%@ Personal Domains Enabled: %d Auth Required: %d
personalDomainsIsEnabled
TB,N,V_personalDomainsIsEnabled
securePersonalDomainsRequireAuth
TB,N,V_securePersonalDomainsRequireAuth
HMHomeManager
/System/Library/Frameworks/HomeKit.framework/HomeKit
_ADHomeInfoFromAccessControl
-[ADSpeechCapturingContext dealloc]
%@ (sessionUUID = %@)
-[ADSpeechCapturingContext initWithSessionUUID:queue:]
-[ADSpeechCapturingContext becomeCurrent]
-[ADSpeechCapturingContext resignCurrent]
-[ADSpeechCapturingContext updateStartSpeechId:]
-[ADSpeechCapturingContext updateSelectedResultCandidateId:]
-[ADSpeechCapturingContext updateAccessToRecordedAudioForVoiceIdentificationTraining:forResultCandidateId:]
-[ADSpeechCapturingContext updateAudioRecordContext:]
-[ADSpeechCapturingContext updateAudioRecordDeviceInfo:]
-[ADSpeechCapturingContext updateVoiceTriggerInfo:]
-[ADSpeechCapturingContext beginRecordingAudioForVoiceIdentificationTraining]
-[ADSpeechCapturingContext endRecordingAudioForVoiceIdentificationTrainingWithURL:]
-[ADSpeechCapturingContext _didBecomeCurrent]
-[ADSpeechCapturingContext _didResignCurrent]
-[ADSpeechCapturingContext _donateRecordedAudioForVoiceIdentificationTrainingWithCompletion:]_block_invoke
-[ADSpeechCapturingContext _donateRecordedAudioForVoiceIdentificationTrainingWithCompletion:]_block_invoke_2
v16@?0@"NSError"8
-[ADSpeechCapturingContext _removeRecordedAudioForVoiceIdentificationTraining]
sessionUUID
T@"NSString",R,C,N,V_sessionUUID
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithProtocolBufferProxy(_ADPBProxyTCPInfoMetrics *__strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADConnectionTCPInfoMetricsUtilities.m
<Unknown File>
Invalid parameter not satisfying: %@
protocolBufferProxy != nil
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithLegacyProtocolBufferProxy(_ADPBProxyGetMetricsResponse *__strong)
legacyProtocolBufferProxy != nil
default
_ADPBProxyTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong)
tcpInfoMetrics != nil
void ADConnectionTCPInfoMetricsConfigureLegacyProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong, _ADPBProxyGetMetricsResponse *__strong)
-[SAIntentGroupResolveAppForIntent(ADExtensionService) ad_resolveAppForIntent:completion:]
appIdentifyingInfo
bundleId
Companion Routing Service Queue
-[ADCompanionRoutingService _handleCommand:forDomain:reply:]
-[ADCompanionRoutingService _handleCommand:forDomain:reply:]_block_invoke_2
-[ADCompanionRoutingService _handleCommand:forDomain:reply:]_block_invoke
v24@?0@"<SAAceCommand>"8@"NSError"16
-[ADCompanionRoutingService preheatDomain:]
-[ADCompanionRoutingService preheatDomain:]_block_invoke
-[ADCompanionRoutingService _processPendingCallResultBlocks]
-[SAIntentGroupProcessIntent(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]
-[SAIntentGroupProcessIntent(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]_block_invoke
v16@?0@"SAIntentGroupProcessIntentCompleted"8
-[SAIntentGroupProcessIntent(ADExtensionService) _resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v28@?0B8@"INIntent"12@"NSDictionary"20
-[SAIntentGroupProcessIntent(ADExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(ADExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(ADExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v24@?0@"INIntentResponse"8@"INCExtensionError"16
-[SAIntentGroupProcessIntent(ADExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(ADExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(ADExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
ADBulletinBoardProvider
com.apple.assistantd.BulletinBoard
com.apple.assistantd
Siri
settings_siri
date
-[ADBulletinBoardProvider handleBulletinActionResponse:]
dataSource
T@"<ADBulletinBoardProviderDataSource>",&,N,V_dataSource
BBDataProviderConnection
initBBDataProviderConnection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADBulletinBoardProvider.m
classBBDataProviderConnection
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
BulletinBoardLibrary
frameworkLibrary
BBSectionIcon
initBBSectionIcon
classBBSectionIcon
BBSectionIconVariant
initBBSectionIconVariant
classBBSectionIconVariant
BBSectionInfo
initBBSectionInfo
classBBSectionInfo
BBSectionParameters
initBBSectionParameters
classBBSectionParameters
ADVoiceAssetsUpdatedNotification
ADDaemon
-[ADDaemon _setupInternal]
CFNETWORK_DIAGNOSTICS
CFNETWORK_DIAGNOSTICS_NO_SYSLOG
-[ADDaemon _proxyService]
-[ADDaemon _peerLocationService]
com.apple.springboard
-[ADDaemon _clientListenerShouldAcceptNewConnection:]
client connection connected
-[ADDaemon _clientListenerShouldAcceptNewConnection:]_block_invoke
client connection was invalidated
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]_block_invoke
com.apple.imagent
com.apple.MobileSMS
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _securityListenerShouldAcceptNewConnection:]
-[ADDaemon _securityListenerShouldAcceptNewConnection:]_block_invoke
com.apple.notifyd.matching
-[ADDaemon _setupNotifyHandlers]_block_invoke
com.apple.MobileAsset.VoiceServices.VoiceResources.new-asset-installed
com.apple.voiceservices.notification.voice-update
com.apple.voicetrigger.EarlyDetect
com.apple.siri.preheat.quiet
com.apple.nanoregistry.devicedidpair
Safety net
com.apple.proactive.PersonalizationPortrait.namedEntitiesDidChangeMeaningfully
portrait_changed
com.apple.proactive.PersonalizationPortrait.namedEntitiesInvalidated
portrait_invalidated
com.apple.managedconfiguration.effectivesettingschanged
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
-[ADDaemon _setupDistributedNotificationHandlers]_block_invoke
UserInfo
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
com.apple.assistant.sync
-[ADDaemon _setupSyncListener]_block_invoke
com.apple.pairedsync.siri
-[ADDaemon syncCoordinatorDidReceiveStartSyncCommand:]
com.apple.siri.CacheDelete
r^{__CFDictionary=}20@?0i8r^{__CFDictionary=}12
-[ADDaemon _setupCacheDelete]_block_invoke_2
-[ADDaemon _setupCacheDelete]_block_invoke
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
-[ADDaemon _setupCacheDelete]_block_invoke_3
-[ADDaemon _daemonDidLaunch]
-[ADDaemon _daemonWillShutdown]
-[ADDaemon _syncCoalesced]
-[ADDaemon _syncForReason:withCoalescing:]
UnlockedWorkQueue
name
sync_now
_ADHandleNewSyncPeer_block_invoke
sync_reason
defrost
mach_time
PSYSyncCoordinator
/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
%@ %@
open_interval
first_byte_read_interval
attempt_count
metrics_count
ping_mean
ping_count
unacknowledged_ping_count
rtt_current
rtt_smoothed
rtt_variance
rtt_best
tx_packets
tx_bytes
tx_retransmit_bytes
tx_unacked
rx_packets
rx_bytes
rx_duplicate_bytes
rx_ooo_bytes
snd_bandwidth
syn_retransmits
subflow_count
connected_subflow_count
primary_subflow_iface
primary_subflow_switch_count
connectionMethodName
connectionEdgeIDName
connectionEdgeType
connectionFallbackReason
tuscanyConnectionDelay
tcp_info_metrics
hasOpenInterval
TB,N
openInterval
Td,N,V_openInterval
hasFirstByteReadInterval
firstByteReadInterval
Td,N,V_firstByteReadInterval
hasAttemptCount
attemptCount
TI,N,V_attemptCount
hasMetricsCount
metricsCount
TI,N,V_metricsCount
hasPingMean
pingMean
Td,N,V_pingMean
hasPingCount
pingCount
TI,N,V_pingCount
hasUnacknowledgedPingCount
unacknowledgedPingCount
TI,N,V_unacknowledgedPingCount
hasRttCurrent
rttCurrent
TI,N,V_rttCurrent
hasRttSmoothed
rttSmoothed
TI,N,V_rttSmoothed
hasRttVariance
rttVariance
TI,N,V_rttVariance
hasRttBest
rttBest
TI,N,V_rttBest
hasTxPackets
txPackets
TQ,N,V_txPackets
hasTxBytes
txBytes
TQ,N,V_txBytes
hasTxRetransmitBytes
txRetransmitBytes
TQ,N,V_txRetransmitBytes
hasTxUnacked
txUnacked
TQ,N,V_txUnacked
hasRxPackets
rxPackets
TQ,N,V_rxPackets
hasRxBytes
rxBytes
TQ,N,V_rxBytes
hasRxDuplicateBytes
rxDuplicateBytes
TQ,N,V_rxDuplicateBytes
hasRxOooBytes
rxOooBytes
TQ,N,V_rxOooBytes
hasSndBandwidth
sndBandwidth
TQ,N,V_sndBandwidth
hasSynRetransmits
synRetransmits
TI,N,V_synRetransmits
hasSubflowCount
subflowCount
TI,N,V_subflowCount
hasConnectedSubflowCount
connectedSubflowCount
TI,N,V_connectedSubflowCount
hasPrimarySubflowIface
TB,R,N
primarySubflowIface
T@"NSString",&,N,V_primarySubflowIface
hasPrimarySubflowSwitchCount
primarySubflowSwitchCount
TI,N,V_primarySubflowSwitchCount
hasConnectionMethodName
T@"NSString",&,N,V_connectionMethodName
hasConnectionEdgeIDName
T@"NSString",&,N,V_connectionEdgeIDName
hasConnectionEdgeType
T@"NSString",&,N,V_connectionEdgeType
hasConnectionFallbackReason
TI,N,V_connectionFallbackReason
hasTuscanyConnectionDelay
Td,N,V_tuscanyConnectionDelay
tcpInfoMetrics
T@"NSMutableArray",&,N,V_tcpInfoMetrics
content
hasContent
T@"NSData",&,N,V_content
ADPeerLocationConnection
v16@?0@"CLLocation"8
-[ADPeerLocationConnection getBestLocationWithCompletion:]_block_invoke
v24@?0@"PBCodable"8@"NSError"16
ADSharedDataService
-[ADSharedDataService effectiveSettingsChanged]_block_invoke
-[ADSharedDataService _pushSharedDataToPeerFromNotification:completion:]
v16@?0@"ADSharedData"8
-[ADSharedDataService _sharedDataDidChange:]
-[ADSharedDataService _getDataWithPBCompletion:]_block_invoke
-[ADSharedDataService _setDataFromSharedData:]
v12@?0B8
-[ADSharedDataService getSharedDataFromPeerUseCache:completion:]
-[ADSharedDataService watchIsNearbyForAssistantId:]
-[ADSharedDataService _handleExecuteRequestOnRemoteWatch:completion:]
-[ADSharedDataService _handleExecuteRequestOnRemoteWatch:completion:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
-[_ADPBDeviceGetDataRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
-[_ADPBDeviceStartRemoteRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
-[_ADPBDeviceExecuteOnRemoteRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
-[ADRecordingInfo initWithDictation:fingerprintOnly:secureOfflineOnly:audioAlertStyle:recordSettings:endpointerModelVersion:recordRoute:recordDeviceInfo:audioDeviceID:audioSessionID:voiceTriggerEventInfo:activationAlertStartTimestamp:startRecordingTimestamp:firstBufferTimestamp:firstBufferHostTime:deviceIdentifier:includeBTInfo:]
v16@?0@"AFBluetoothDeviceInfo"8
isDictation
TB,R,N,V_isDictation
isFingerprintOnly
TB,R,N,V_isFingerprintOnly
isSecureOfflineOnly
TB,R,N,V_isSecureOfflineOnly
audioAlertStyle
Tq,R,N,V_audioAlertStyle
codec
T@"NSString",R,N,V_codec
codecIsNarrowband
source
T@"NSString",R,N,V_source
route
T@"NSString",R,N,V_route
deviceInfo
T@"CSAudioRecordDeviceInfo",R,N,V_deviceInfo
deviceIdentifier
T@"NSString",R,N,V_deviceIdentifier
modelName
T@"NSString",R,N,V_modelName
dspStatus
T@"NSString",R,N,V_dspStatus
headsetAddress
T@"NSString",R,N
headsetName
T@"NSString",R,N,V_headsetName
voiceTriggerEventInfo
T@"NSDictionary",R,N,V_voiceTriggerEventInfo
isBluetooth
vendorId
productId
activationAlertStartTimestamp
Td,R,N,V_activationAlertStartTimestamp
startRecordingTimestamp
Td,R,N,V_startRecordingTimestamp
audioSessionID
TI,R,N,V_audioSessionID
firstBufferTimestamp
Td,R,N,V_firstBufferTimestamp
firstBufferHostTime
TQ,R,N,V_firstBufferHostTime
isEndAlertInfo
TB,N,V_isEndAlertInfo
triggeredTwoShotBorealis
TB,N,V_triggeredTwoShotBorealis
audioSessionSetActiveEndHostTime
TQ,N,V_audioSessionSetActiveEndHostTime
endpointerModelVersion
T@"NSString",R,N,V_endpointerModelVersion
bluetoothDevice
T@"<ADBluetoothDevice>",R,N,V_bluetoothDevice
/var/mobile/forceSiriPCMAudio
corespeech
myriad
requestlifecycle
methodType
methodName
version
lastWin
%@ name: %@ enabled: %@ dictation: %@ assistant id: %@ logging assistant id: %@ speech id: %@ sharedUserId: %@ logging sharedUserId: %@ language: %@ prev language: %@ outputVoice: %@ %@ prev: outputVoice: %@ %@ hostname: %@ cloud sync enabled: %@ should censor speech: %@ user agent: %@ is location sharing device: %@ notification restricted apps: %@ temperature unit: %@ remote playback device: %@
siriEnabled
TB,N,V_siriEnabled
dictationEnabled
TB,N,V_dictationEnabled
assistantId
T@"NSString",C,N,V_assistantId
loggingAssistantId
T@"NSString",C,N,V_loggingAssistantId
speechId
T@"NSString",C,N,V_speechId
sharedUserId
T@"NSString",C,N,V_sharedUserId
loggingSharedUserId
T@"NSString",C,N,V_loggingSharedUserId
previousLanguageCode
T@"NSString",C,N,V_previousLanguageCode
languageCode
T@"NSString",C,N,V_languageCode
previousOutputVoice
T@"AFVoiceInfo",C,N,V_previousOutputVoice
outputVoice
T@"AFVoiceInfo",C,N,V_outputVoice
hostname
T@"NSString",C,N,V_hostname
cloudSyncEnabled
TB,N,V_cloudSyncEnabled
shouldCensorSpeech
TB,N,V_shouldCensorSpeech
userAgent
T@"NSString",C,N,V_userAgent
isLocationSharingDevice
TB,N,V_isLocationSharingDevice
notificationPreviewRestrictedApps
T@"NSArray",C,N,V_notificationPreviewRestrictedApps
temperatureUnit
T@"NSString",C,N,V_temperatureUnit
airplayRouteId
T@"NSString",C,N,V_airplayRouteId
storeFrontId
T@"NSString",C,N,V_storeFrontId
ekToken
T@"NSString",C,N,V_ekToken
userToken
T@"NSString",C,N,V_userToken
isRemotePlaybackDevice
TB,N,V_isRemotePlaybackDevice
userAssignedName
T@"NSString",C,N,V_userAssignedName
utsRequiredRequestKeyValuePairs
T@"NSDictionary",C,N,V_utsRequiredRequestKeyValuePairs
timerURL
isFiring
title
state
duration
fireTimeInterval
fireDate
firedDate
dismissedDate
lastModifiedDate
v32@?0@8@16^B24
v16@?0@"<AFClockTimerMutating>"8
v16@?0@"<ADDeviceSyncItemMutating>"8
delegate
T@"<ADSessionLocalConnectionDelegate>",W,N,V_delegate
Data
-[ADRemoteRequestHelper clearBulletinRequestWithRecordID:]
-[ADRemoteRequestHelper handleBulletinRequestWithRecordID:]
remoteRequestInfo
T@"AFRequestInfo",&,N,V_remoteRequestInfo
completion
T@?,C,N,V_completion
notificationAction
T@?,C,N,V_notificationAction
BBBulletinRequest
initBBBulletinRequest
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADRemoteRequestHelper.m
classBBBulletinRequest
BBAction
initBBAction
classBBAction
ADDeviceSyncSnapshot.generation
ADDeviceSyncSnapshot.date
ADDeviceSyncSnapshot.items
%@ {%@}
generation = %@
date = %@
items = %@
supportsSecureCoding
TB,R
generation
TQ,R,N,V_generation
T@"NSDate",R,C,N,V_date
items
T@"NSArray",R,C,N,V_items
update-timer
remove-timer
com.apple.assistant.remote-timer-manager
v16@?0@"<AFClockTimerSnapshotMutating>"8
v32@?0@"NSString"8@"AFClockItemStorage"16^B24
v24@?0@"MTTimer"8@"NSError"16
-[ADRemoteTimerManager _sendStereoPartnerAction:timerID:changes:completion:]
com.apple.siri.acousticsignature
ADAcousticFingerprinter
-[ADAcousticFingerprinter _connection]_block_invoke
-[ADAcousticFingerprinter _configureWithCurrentASBD]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[ADAcousticFingerprinter _convertPCMDataForFingerprinting:]
-[ADAcousticFingerprinter appendPCMData:]_block_invoke
-[ADAcousticFingerprinter flush]_block_invoke_2
T@"<ADAcousticFingerprinterDelegate>",W,N,V_delegate
ASXSampleRateFromInt
ADServiceConnectionSyncQueue
-[ADServiceConnection _connection]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADServiceConnection.m
Must have a path
Must have a command
path
class
commandName
-[ADServiceConnection sendClientBoundCommand:domain:reply:]
-[ADServiceConnection sendClientBoundCommand:domain:reply:]_block_invoke
-[ADServiceConnection sendClientBoundCommand:domain:reply:]_block_invoke_2
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke_2
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]_block_invoke
v16@?0@"AFSyncSnapshot"8
v24@?0@"SABaseCommand"8@"NSError"16
-[ADServiceConnection _getPeerInfoForCommandId:completion:]
identifier
T@"NSString",R,N,V_identifier
T@"<ADServiceConnectionDelegate>",W,N,V_delegate
-[ADServiceConnectionProviderServiceDelegate syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:]_block_invoke
stuck_sync_plugin
plugin_path
com.apple.assistant.device-sync.coordinator
-[ADDeviceSyncCoordinator deviceSyncMessageService:didFoundDeviceWithIdentifier:]
v32@?0@"NSString"8@"<ADDeviceSyncDataConsuming>"16^B24
-[ADDeviceSyncCoordinator deviceSyncMessageService:didLostDeviceWithIdentifier:]
-[ADDeviceSyncCoordinator deviceSyncMessageService:didReceiveMessage:fromDeviceWithIdentifier:completion:]
-[ADDeviceSyncCoordinator deviceSyncDataProviderDidUpdate:]
-[ADDeviceSyncCoordinator _sessionWithDeviceIdentifier:]
v32@?0@"NSString"8@"<ADDeviceSyncMessagingService>"16^B24
com.apple.assistant.device-sync.session.%@
v16@?0Q8
v32@?0@"NSString"8@"ADDeviceSyncSession"16^B24
ADRemoteConnectionErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADPeerConnection.m
func
ADRemotePeerConnection
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]_block_invoke
-[ADPeerConnection _sendResponse:forRequestId:]
-[ADPeerConnection _sendResponse:forRequestId:]_block_invoke
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]_block_invoke
-[ADPeerConnection service:account:identifier:didSendWithSuccess:error:]
%@.%@
-[ADSessionLocalServer _startSession]
-[ADSessionLocalServer setHasActiveRequest:]
-[ADSessionLocalServer _saAssistantNotReady:]
Mini not ready
connectionMode
errorDomain
errorCode
aceId
refId
-[ADSessionLocalServer _assistantFailedForReason:error:]
-[ADSessionLocalServer _saCommandFailed:]
-[ADSessionLocalServer _saAssistantLoaded:]
sessionType
local
-[ADSessionLocalServer _handleAceObject:]
-[ADSessionLocalServer speechRecognized:]
-[ADSessionLocalServer speechRecognitionError:]
-[ADSessionLocalServer _sendServerCommand:]
-[ADSessionLocalServer _sendServerCommand:]_block_invoke
groupIdentifier
classIdentifier
@"NSDictionary"8@?0
-[ADSessionLocalServer _sendLoadAssistant]
-[ADSessionLocalServer siriConnection:didOpenWithConnectionType:delay:]
-[ADSessionLocalServer siriConnection:didReceiveAceObject:]
-[ADSessionLocalServer siriConnectionDidClose:]
-[ADSessionLocalServer siriConnection:didEncounterError:]
-[ADSessionLocalServer _sendAssistantDataChangedSinceAnchor:refId:]
-[ADVolumeService setClientConfiguration:]_block_invoke
-[ADVolumeService getSiriOutputVolumeWithCompletion:]
-[ADVolumeService setSiriOutputVolume:operationType:completion:]
-[ADVolumeService _fetchSystemVolumes]
-[ADVolumeService systemVolumeChanged:]
-[ADVolumeService _handleSystemVolumeChangeForCategory:volume:reason:]
allGroups
T@"NSArray",R,N
com.apple.assistant.experiment-manager
-[ADExperimentManager init]_block_invoke
v32@?0@"NSString"8@"AFExperimentConfiguration"16^B24
_ADExperimentManagerCreateExperiment
-[ADDeviceSyncTimerProvider clockTimerObserver:timerDidFire:]
-[ADDeviceSyncTimerProvider clockTimerObserver:timerDidDismiss:]
-[ADDeviceSyncTimerProvider clockTimerObserver:snapshotDidUpdateFrom:to:]
-[ADDeviceSyncTimerProvider getGenerationWithCompletion:]
-[ADDeviceSyncTimerProvider getGenerationWithCompletion:]_block_invoke
v16@?0@"AFClockTimerSnapshot"8
-[ADDeviceSyncTimerProvider getIncrementalChangesAfterGeneration:limit:completion:]
Delta pulling mode is not supported for type %@.
-[ADDeviceSyncTimerProvider getSnapshotWithCompletion:]
-[ADDeviceSyncTimerProvider getSnapshotWithCompletion:]_block_invoke
v32@?0@"NSUUID"8@"AFClockTimer"16^B24
v16@?0@"<ADDeviceSyncSnapshotMutating>"8
type
-[ADCommandCenter(ServiceMaintenance) runServiceMaintenanceWithCompletion:]
v16@?0q8
-[ADCommandCenter(ServiceMaintenance) runServiceMaintenanceWithCompletion:]_block_invoke
v12@?0i8
ADDeviceSyncMessage.sequence
ADDeviceSyncMessage.type
ADDeviceSyncMessage.commandPushGenerationsRequest
ADDeviceSyncMessage.commandPushGenerationsResponse
ADDeviceSyncMessage.commandPullGenerationsRequest
ADDeviceSyncMessage.commandPullGenerationsResponse
ADDeviceSyncMessage.commandPullDeltaRequest
ADDeviceSyncMessage.commandPullDeltaResponse
ADDeviceSyncMessage.commandPullSnapshotRequest
ADDeviceSyncMessage.commandPullSnapshotResponse
sequence = %@
type = %zd (%@)
commandPushGenerationsRequest = %@
commandPushGenerationsResponse = %@
commandPullGenerationsRequest = %@
commandPullGenerationsResponse = %@
commandPullDeltaRequest = %@
commandPullDeltaResponse = %@
commandPullSnapshotRequest = %@
commandPullSnapshotResponse = %@
sequence
TQ,R,N,V_sequence
Tq,R,N,V_type
commandPushGenerationsRequest
T@"ADDeviceSyncCommandPushGenerationsRequest",R,C,N,V_commandPushGenerationsRequest
commandPushGenerationsResponse
T@"ADDeviceSyncCommandPushGenerationsResponse",R,C,N,V_commandPushGenerationsResponse
commandPullGenerationsRequest
T@"ADDeviceSyncCommandPullGenerationsRequest",R,C,N,V_commandPullGenerationsRequest
commandPullGenerationsResponse
T@"ADDeviceSyncCommandPullGenerationsResponse",R,C,N,V_commandPullGenerationsResponse
commandPullDeltaRequest
T@"ADDeviceSyncCommandPullDeltaRequest",R,C,N,V_commandPullDeltaRequest
commandPullDeltaResponse
T@"ADDeviceSyncCommandPullDeltaResponse",R,C,N,V_commandPullDeltaResponse
commandPullSnapshotRequest
T@"ADDeviceSyncCommandPullSnapshotRequest",R,C,N,V_commandPullSnapshotRequest
commandPullSnapshotResponse
T@"ADDeviceSyncCommandPullSnapshotResponse",R,C,N,V_commandPullSnapshotResponse
-[ADCommandCenter(AcousticId) _acousticId_handleFingerprint:duration:]
-[ADCommandCenter(AcousticId) _saAIRequestSearch:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]_block_invoke
-[ADCommandCenter(AcousticId) _saAIRetrySearch:completion:]
-[ADCommandCenter(AcousticId) acousticIDHelperDidStartSession:]
-[ADCommandCenter(AcousticId) acousticIDHelper:didCompleteSessionSuccessfully:]
Message sending failed.
Message sending timed out.
ADPreferencesLanguageCodeDidChangeNotification
ADPreferencesOutputVoiceDidChangeNotification
ADPreferencesSharedUserIdentifierDidChangeNotification
ADPreferencesCompanionIdentifierDidChangeNotification
ADPreferencesEnabledBitsDidChangeNotification
User Identifier
Logging User Identifier
Accounts
Active Account
StatisticsEnabled
Idle Timeout
Authentication Disabled
Ignore Location WiFi Status
Server Override
Product Type Prefix
Server Redirect
Last Known Proxy Stream Id
Last Sync Verification Date
Companion Identifier
Experiment Identifier
Metrics Sender Disabled
Proxy Connection Disabled
Last Known Analytics Store State
Maximum Siri Output Volume
Minimum Siri Output Volume
Audio Session Active Delay
DeepSyncVerificationKeys
ADSyncDeepVerificationManagerIOQueue
com.apple.siri.DeepSyncVerificationService
-[ADSyncDeepVerificationManager _service]_block_invoke
-[ADSyncDeepVerificationManager _loadVerificationKeys]
-[ADSyncDeepVerificationManager _saveVerificationKeys]_block_invoke
-[ADSyncDeepVerificationManager startVerificationForKeys:requestID:]
-[ADSyncDeepVerificationManager handleSyncChunk:]
v16@?0@"NSArray"8
-[ADClientLiteListener listener:shouldAcceptNewConnection:]
-[ADClientLiteListener doClientWork:withTimeoutBlock:]
-[ADClientLiteListener doClientWork:withTimeoutBlock:]_block_invoke
-[ADClientLiteListener doDelayedClientWorkIfAny]
-[ADClientLiteListener _doDelayedClientWorkIfAny:]_block_invoke
-[ADClientLiteListener _incrementAndTestExecutionCount]
-[ADClientLiteListener _decrementAndTestExecutionCount]
-[ADClientLite handleRemoteCommand:afterCurrentRequest:isOneWay:completion:]
v24@?0B8@"NSError"12B20
v32@?0@"NSNumber"8@"NSError"16@"NSNumber"24
-[ADClientLite handleRemoteCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke_2
v20@?0B8@"NSError"12
v16@?0@"SABaseCommand"8
-[ADClientLite adRequestDidReceiveCommand:reply:]_block_invoke
ADDeviceSyncCommandPullSnapshotRequest.dataType
dataType = %@
dataType
T@"NSString",R,C,N,V_dataType
device:
ADPeerInfo
%@%@
%@ identifier: %@ productType: %@ buildVersion: %@ name: %@
productType
buildVersion
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_productType
T@"NSString",R,C,N,V_buildVersion
T@"NSString",R,C,N,V_name
dictionaryRepresentation
T@"NSDictionary",R,C,N
idsFirstRoutableDestination
T@"NSString",C,N,V_idsFirstRoutableDestination
airPlayRouteIdentifiers
T@"NSArray",C,N,V_airPlayRouteIdentifiers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADSiriRequestSucceededResponseTransformer.m
Request succeeded response transformer expected response of type %@, but got %@ instead; request command: %@
ADDeviceSyncCommandPushGenerationsRequest.generationsByDataType
generationsByDataType = %@
generationsByDataType
T@"NSDictionary",R,C,N,V_generationsByDataType
ADLanguageCodeKeepSame
ADCallStateDidChangeNotification
ADActiveAccountIdentifierDidChangeNotification
ADCommandCenterQueue
-[ADCommandCenter init]
-[ADCommandCenter _addCompletion:forCommandId:]
-[ADCommandCenter _setPeer:forCommandId:]
-[ADCommandCenter _removePeerInfoForAceId:]
com.apple.mobileipod.assistant
-[ADCommandCenter _serviceManager]
-[ADCommandCenter _requestWillStart]
-[ADCommandCenter _requestDidEnd]
-[ADCommandCenter _clearRequestDelegateState]
-[ADCommandCenter _clearSpeechDelegateState]
-[ADCommandCenter _replaceRequestDelegate:andCompletion:]
-[ADCommandCenter _completeRequestForCurrentDelegate:error:]
-[ADCommandCenter _replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:]
-[ADCommandCenter _speechCaptureCompleted]
-[ADCommandCenter _didLaunchAppForRequestWithIdentifier:]
-[ADCommandCenter _refIdIsSpeechStart:]
-[ADCommandCenter _sendRollbackCommandForCommand:]
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:]
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:]_block_invoke
-[ADCommandCenter _cancelCurrentRequest]
-[ADCommandCenter _shutdownAfterDelay:]_block_invoke
-[ADCommandCenter _shutdownAfterDelay:]
-[ADCommandCenter _handleCommand:peer:completion:]
T@"NSString",C,N
appId
callbacks
T@"NSArray",C,N
-[ADCommandCenter _preheatCallbacksForCommand:]
-[ADCommandCenter _performCallbacksForCommand:reply:error:]
-[ADCommandCenter _handleServiceCommand:completion:]
-[ADCommandCenter _handleServiceCommand:completion:]_block_invoke
resultCallbackCode
v24@?0@"SAGenericCommand"8@"NSError"16
-[ADCommandCenter _sendServiceCommand:completion:]_block_invoke
-[ADCommandCenter _recievedLocation:locationStatus:]
com.apple.assistant.command-center.call
-[ADCommandCenter adCallStateChangedCallInProcess:]_block_invoke
-[ADCommandCenter adCallStateChangedCallIncoming:]_block_invoke
-[ADCommandCenter _handleBareRequestCompleted:]
-[ADCommandCenter _handleBareRequestCompleted:]_block_invoke
-[ADCommandCenter _saRequestCompleted:completion:]
-[ADCommandCenter _saCommandFailed:completion:]
Speech not ready
-[ADCommandCenter _saCommandIgnored:completion:]
-[ADCommandCenter _saSetClientData:completion:]
-[ADCommandCenter _saSetHandoffPayload:completion:]
-[ADCommandCenter _saStartLocalRequest:completion:]
-[ADCommandCenter _saAddResultObjects:completion:]
-[ADCommandCenter _saExecuteCallbacks:completion:]
-[ADCommandCenter _saInitiateHandoffOnCompanion:completion:]
-[ADCommandCenter _saSetDeviceTTSMuteState:completion:]
-[ADCommandCenter _saDeviceMyriadConfiguration:completion:]
-[ADCommandCenter _sasResultCandidate:completion:]
-[ADCommandCenter _sasResultCandidate:completion:]_block_invoke_2
v20@?0B8@"NSArray"12
-[ADCommandCenter _acceptResultCandidate:featuresToLog:completion:]
features
-[ADCommandCenter _sasSpeechServerEndpointIdentified:completion:]
-[ADCommandCenter _sasVoiceIdentificationSignal:completion:]
-[ADCommandCenter _sasSpeechRecognized:completion:]
-[ADCommandCenter _handleSpeechRecognizedWithRefId:delegateBlock:]_block_invoke
bestTextInterpretation
-[ADCommandCenter _sasSpeechPartialResult:completion:]
-[ADCommandCenter _handlePartialResultWithRefId:elapsedTime:delegateBlock:]_block_invoke
-[ADCommandCenter _saStructuredDictationResult:completion:]
-[ADCommandCenter _saStructuredDictationFailure:completion:]
-[ADCommandCenter _sasSpeechFailure:completion:]
-[ADCommandCenter _sasAbortSpeechRequest:completion:]
-[ADCommandCenter _sasVoiceSearchPartialResult:completion:]
-[ADCommandCenter _sasVoiceSearchFinalResult:completion:]
-[ADCommandCenter _sasSuspendClientEndpointer:completion:]
v24@?0d8d16
-[ADCommandCenter _sasConfirmEndpoint:completion:]
-[ADCommandCenter _sasServerEndpointFeatures:completion:]
-[ADCommandCenter _sasClientBoundConfusionNetwork:completion:]
-[ADCommandCenter _saClientSetupInfo:completion:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:]_block_invoke
-[ADCommandCenter _saAcknowledgeAlert:completion:]
-[ADCommandCenter _saGetRequestOrigin:completion:]
Failed getting request origin
v16@?0@"SASetRequestOrigin"8
Failed getting diagnostic report
v16@?0@"SADIAGLatencyDiagnosticReport"8
-[ADCommandCenter _saLogSignatureWithABC:completion:]
server_request
-[ADCommandCenter _saTTSGetSpeechSynthesisVolume:completion:]
v20@?0f8@"NSError"12
-[ADCommandCenter _saTTSSetSpeechSynthesisVolume:completion:]
Unhandled Object
v32@?0@"NSTextCheckingResult"8Q16^B24
-[ADCommandCenter _handleClientReply:error:forSessionCommand:]
bad response
-[ADCommandCenter _sessionDidFailWithError:]
-[ADCommandCenter assistantSessionManager:receivedError:isRetryableError:]
-[ADCommandCenter assistantSessionManagerShouldAttemptRetry:]
-[ADCommandCenter assistantSessionManagerSessionConnectionDidReset:]
-[ADCommandCenter assistantSessionManagerSessionRemoteConnectionDidReset:]
-[ADCommandCenter assistantSessionManager:didChangeRequestIdFrom:toId:]
-[ADCommandCenter speechManager:recognitionUpdateWillBeginForTask:]
PhonemeTranscription
-[ADCommandCenter _sendStartSpeechCommandWithSpeechManager:info:context:]
-[ADCommandCenter _sendEnableServerEndpointerCommandWithRefID:]
-[ADCommandCenter _sendLocationIfNeededForRequest]
-[ADCommandCenter _sendLocationIfNeededForRequest]_block_invoke
-[ADCommandCenter _sendContextAndRestrictionsForSpeechRequestWithInfo:]
-[ADCommandCenter speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:sessionUUID:]
-[ADCommandCenter speechManager:didStartRecordingWithInfo:context:]_block_invoke_2
-[ADCommandCenter speechManager:didStartRecordingWithInfo:context:]_block_invoke
-[ADCommandCenter speechManager:didUpdateRecordingWithInfo:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:capturedPackets:atTimestamp:totalCount:]_block_invoke
-[ADCommandCenter speechManagerDidDetectMusic:]
-[ADCommandCenter speechManagerDidDelayEndpointForMusic:]
-[ADCommandCenter speechManager:didFinishWithTotalPackets:endpointMode:capturingMode:endpointerMetrics:sessionUUID:]
-[ADCommandCenter speechManager:didCancelWithSessionUUID:]
-[ADCommandCenter speechManager:didFailWithError:sessionUUID:]
-[ADCommandCenter speechManager:didFailWithError:sessionUUID:]_block_invoke_2
-[ADCommandCenter speechManager:didFinishWritingAudioFile:error:sessionUUID:]
-[ADCommandCenter speechManager:didRecognizeTokens:sessionUUID:]_block_invoke
<REDACTED>
-[ADCommandCenter speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didRecognizePackage:sessionUUID:]_block_invoke
v32@?0@"AFSpeechPhrase"8Q16^B24
v32@?0@"AFSpeechUtterance"8Q16^B24
-[ADCommandCenter speechManager:recognitionDidCompleteWithError:sessionUUID:statistics:]_block_invoke
%@ is incapable of performing fake two shot prompt.
-[ADCommandCenter _reallyDoQuickStopOptionalRequestID:mediaRemoteOptions:completion:]_block_invoke
v16@?0B8B12
-[ADCommandCenter _saQuickStop:completion:]
Not supported on this platform
-[ADCommandCenter _saQuickStop:completion:]_block_invoke
Nothing stopped
-[ADCommandCenter speechManager:didRequestQuickStopWithSessionUUID:]
SiriQuickStop-OnDeviceDetected
-[ADCommandCenter speechManager:didRequestQuickStopWithSessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didChangeRecordingState:]_block_invoke
-[ADCommandCenter speechManager:audioSessionWillBecomeActive:]_block_invoke
-[ADCommandCenter speechManager:audioSessionDidBecomeActive:]_block_invoke
-[ADCommandCenter UIService:executeCommandHandler:]
-[ADCommandCenter UIService:executeCommandHandler:]_block_invoke_2
-[ADCommandCenter UIService:executeCommandHandler:]_block_invoke
-[ADCommandCenter _preheatWithStyle:forOptions:completion:]
-[ADCommandCenter _forceAudioSessionActiveWithOptions:reason:completion:]
-[ADCommandCenter _forceAudioSessionInactiveWithOptions:completion:]
-[ADCommandCenter _setLanguageCode:outputVoice:]
-[ADCommandCenter _setLockState:showingLockScreen:]
Locked
Unlocked
On Lock Screen
Not on lock screen
-[ADCommandCenter _lockStateSetRestrictionsThunk]_block_invoke
v16@?0@"AceObject"8
-[ADCommandCenter _setStarkRestriction:]
#CarPlay Add Stark Restriction
#CarPlay Remove Stark Restriction
-[ADCommandCenter _setCarDNDRestriction:]
#rhodes Add Car DND Restriction
#rhodes Remove Car DND Restriction
-[ADCommandCenter _prepareForAppLaunchForRequest:]_block_invoke
-[ADCommandCenter _setConfiguration:forClient:]
-[ADCommandCenter _endSessionForDelegate:]
-[ADCommandCenter _reallyEndSessionForDelegate:]
-[ADCommandCenter _reallyEndSessionForDelegate:]_block_invoke
-[ADCommandCenter _prepareForPhoneCall]
-[ADCommandCenter _telephonyRequestCompleted]
-[ADCommandCenter _startRequest:withDelegate:]
-[ADCommandCenter _startNonSpeechRequest:forDelegate:options:suppressAlert:prepareAudio:completion:]
-[ADCommandCenter _startSpeechRequestWithDelegate:withOptions:sessionUUID:]
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]
timestamp
prelistening
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]_block_invoke_2
v16@?0d8
-[ADCommandCenter _startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:]
-[ADCommandCenter _startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:]
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke_2
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke_2
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:]
-[ADCommandCenter _startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:]
-[ADCommandCenter _addRecordedSpeechSampleData:delegate:]
-[ADCommandCenter _startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:]
-[ADCommandCenter _cancelRequestForDelegate:]
-[ADCommandCenter _rollbackRequestForDelegate:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]_block_invoke
-[ADCommandCenter _stopSpeechWithOptions:forDelegate:]
-[ADCommandCenter _cancelSpeechForDelegate:]
-[ADCommandCenter _sendSpeechCorrectionInfo:forCorrectionContext:]
-[ADCommandCenter _handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:]
-[ADCommandCenter _handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:]
-[ADCommandCenter _handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:]_block_invoke
-[ADCommandCenter _clearContext]
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]_block_invoke
-[ADCommandCenter _fetchLanguageSettingsForIdiom:completion:]
-[ADCommandCenter _fetchLanguageSettingsForIdiom:completion:]_block_invoke
-[ADCommandCenter _getDeferredObjectsWithIdentifiers:completion:]_block_invoke
encryption_key_did_change
-[ADCommandCenter _destroyActiveAccount]
-[ADCommandCenter _destroyActiveAccount]_block_invoke
-[ADCommandCenter _refreshAssistantValidation]
-[ADCommandCenter _rescheduleValidationRefresh]
-[ADCommandCenter _handleRemoteRequest:completion:]
v16@?0@"AFSiriActivationResult"8
-[ADCommandCenter _handleRemoteRequest:completion:]_block_invoke_2
-[ADCommandCenter _handleRemoteRequest:completion:]_block_invoke
-[ADCommandCenter _handleIntent:inBackgroundAppWithBundleId:reply:]
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]_block_invoke_2
-[ADCommandCenter _setLanguageCode:withCompletion:]
-[ADCommandCenter _setLanguageCodeIfNeeded]
-[ADCommandCenter setQueuedLanguageCode:]
-[ADCommandCenter _processQueuedLanguageCode]
-[ADCommandCenter _clearQueuedLanguageCode]
-[ADCommandCenter setQueuedLanguageCode:andQueuedOutputVoice:]
-[ADCommandCenter _processQueuedLanguageCodeAndOutputVoice]
-[ADCommandCenter setQueuedOutputVoice:]
-[ADCommandCenter _processQueuedOutputVoice]
-[ADCommandCenter _clearQueuedOutputVoice]
-[ADCommandCenter startSpeechRequestWithDelegate:withOptions:]
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]
-[ADCommandCenter setSuppressAudioInterruptionEndedNotifications:]_block_invoke
-[ADCommandCenter handleFailedStartPlaybackWithDestination:completion:]_block_invoke
-[ADCommandCenter prepareForStartPlaybackWithDestination:completion:]_block_invoke
-[ADCommandCenter sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:ignoresMetricsSenderDisabledSetting:completion:]
-[ADCommandCenter updateHorsemanLanguageSettingsWithCompletion:]
-[ADCommandCenter clientConnected:]_block_invoke
-[ADCommandCenter clientDisconnected:]_block_invoke
-[ADCommandCenter prepareForShutdown]_block_invoke
-[ADCommandCenter beginUpdateOutputAudioPowerForClient:completion:]
v16@?0@"AFXPCWrapper"8
-[ADCommandCenter endUpdateOutputAudioPowerForClient:]
-[ADCommandCenter _getSiriOutputVolumeWithCompletion:]
-[ADCommandCenter _getSiriOutputVolumeWithCompletion:]_block_invoke
v16@?0@"ADVolumeService"8
-[ADCommandCenter _setSiriOutputVolume:operationType:completion:]
-[ADCommandCenter _setSiriOutputVolume:operationType:completion:]_block_invoke
-[ADCommandCenter _listInstalledServicesWithCompletion:]_block_invoke
_lastRequest
T@"SABaseCommand",&,N,S_setLastRequest:,V_lastRequest
_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_currentClient
T@"<ADCommandCenterClient>",R,N,V_currentClient
_requestDelegate
T@"<ADCommandCenterRequestDelegate>",R,N,V_requestDelegate
_speechDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechDelegate
_speechFileDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechFileDelegate
_speechDelegateHasReceivedPartialResult
TB,R,N,V_speechDelegateHasReceivedPartialResult
_currentRequest
T@"SABaseCommand",R,N,V_currentRequest
_deviceIsLocked
TB,R,N,V_deviceIsLocked
_isInStarkMode
TB,R,N,V_isInStarkMode
_isInCarDNDMode
TB,R,N,V_isInCarDNDMode
_speechManager
T@"ADSpeechManager",R,N
_isTimeoutSuspended
TB,N,S_setIsTimeoutSuspended:,V_isTimeoutSuspended
leadingSilence
trailingSilence
endTime
resultId
eager
_ADPreheatSpeechWithStyle
_ADPreheatSpeechManagerInBackgroundWithRecordDeviceIdentifier_block_invoke
_LogActivationDeltasForOptions
Core Speech Service Queue
-[ADCoreSpeechService _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
-[ADCoreSpeechService sendMessageWithPayload:toPeer:withReply:]
ADDeviceSyncCommandPullSnapshotResponse.snapshot
snapshot = %@
snapshot
T@"ADDeviceSyncSnapshot",R,C,N,V_snapshot
https://guzzoni.apple.com
https://seed.siri.apple.com
Assistant Identifier
Logging Assistant Identifier
Speech Identifier
Label
Hostname
Group
Predefined Server
Ace Host
Connection Policy
Connection Policy Date
Connection Policy First Failure Date
Connection Policy Hostname
Locale Identifier
Last Assistant Data Anchor
Server Certificate Data
Validation Data
Validation Expiration
Local Crypto Key Data
Peer Assistant Identifier
Peer Logging Assistant Identifier
Peer Speech Identifier
Peer User Agent String
Peer Hostname
Peer Language Code
Peer Siri Enabled
Watch Data Exists
Watch Assistant Identifier
Watch User Agent String
Watch Language
Watch Override Id
Needs Destruction
Build Version
+[ADAccount accountForIdentifier:]
Predefined Servers
Default Server Override
B32@?0@8@16^B24
Deprecated Servers
-[ADAccount _hostnameOverride]
apple.com
apple.com:
-[ADAccount _hostnameQAOverride]
-[ADAccount save]
T@"NSString",C,N,V_identifier
label
T@"NSString",C,N,V_label
assistantIdentifier
T@"NSString",C,N,V_assistantIdentifier
loggingAssistantIdentifier
T@"NSString",C,N,V_loggingAssistantIdentifier
speechIdentifier
T@"NSString",C,N,V_speechIdentifier
group
T@"NSString",C,N,V_group
predefinedServer
T@"NSString",C,N,V_predefinedServer
aceHost
T@"NSString",C,N,V_aceHost
connectionPolicy
T@"NSDictionary",C,N,V_connectionPolicy
connectionPolicyDate
T@"NSDate",C,N,V_connectionPolicyDate
connectionPolicyHostname
T@"NSString",C,N,V_connectionPolicyHostname
localeIdentifier
T@"NSString",C,N,V_localeIdentifier
lastAssistantDataAnchor
T@"NSString",C,N,V_lastAssistantDataAnchor
validationExpiration
T@"NSDate",C,N,V_validationExpiration
needsDestruction
TB,N,V_needsDestruction
connectionPolicyFailureCount
TQ,N,V_connectionPolicyFailureCount
connectionPolicyFirstFailureDate
T@"NSDate",C,N,V_connectionPolicyFirstFailureDate
-[ADAccount(SharedData) setPairedWatches:]
-[ADAccount(SharedData) updateGizmoData:forUniqueId:]
-[ADAccount(SharedData) watchExistsForAssistantId:]
peerAssistantIdentifier
peerLoggingAssistantIdentifier
peerSpeechIdentifier
peerUserAgentString
peerHostname
peerLanguageCode
peerSiriEnabled
-[ADAccount(RemoteDevice) saRemoteDevice:]
com.apple.siri.location.Error
ADPeerLocationRemote
v16@?0@"CLLocationManager"8
-[ADPeerLocationRemote _startBestLocationTimer]
-[ADPeerLocationRemote _startBestLocationTimer]_block_invoke
-[ADPeerLocationRemote _cancelBestLocationTimer]
-[ADPeerLocationRemote _startUpdatingLocation]
-[ADPeerLocationRemote _getBestLocationWithCompletion:]_block_invoke
v24@?0@"_ADPBLocationSetPeerLocationRequest"8@"NSError"16
-[ADPeerLocationRemote _getBestLocationWithCompletion:]_block_invoke_2
looking up best location on behalf of peer
-[ADPeerLocationRemote _executeBestLocationCompletionWithLocation:error:]
found best location on behalf of peer
-[ADPeerLocationRemote peerConnection:handlePBSubclass:completion:]
-[ADPeerLocationRemote locationManager:didUpdateLocations:]
-[ADPeerLocationRemote locationManager:didFailWithError:]
-[ADPeerLocationRemote locationManager:didChangeAuthorizationStatus:]
-[ADPeerLocationRemote locationManager:didChangeAuthorizationStatus:]_block_invoke
-[ADPeerLocationRemote locationManagerDidPauseLocationUpdates:]
-[ADPeerLocationRemote locationManagerDidResumeLocationUpdates:]
-[_ADPBLocationGetPeerLocationRequest(ADPeerLocationRemote) _ad_performWithPeerLocationManagerRemote:completion:]
unspecified
unknown
-[ADSiriTetherListener listen]_block_invoke
-[ADSiriTetherListener _handleNewConnection:]
-[ADSiriTetherListener _handleNewConnection:]_block_invoke
com.apple.private.alloy.siri.proxy
assistantBundle
AssistantSyncAnchorKeys
Build
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADServiceManager.m
Shouldn't already have a service with identifier %@
-[ADServiceManager _removeService:]
-[ADServiceManager _reprioritizeService:]
-[ADServiceManager _generatedBundleServicesCache]
com.apple.siri.bundleservicecache.plist
-[ADServiceManager _bundleServicesCache]
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.siri.vocabularyupdates
<%@: Identifier: %@>
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleStopwatchRequestWithCompletionHandler:]
Response Time
Total Count
Library/Assistant/ServiceStatistics
-[ADServiceStatistics _statsDirectory]_block_invoke
%@.plist
-[ADServiceStatistics _statsDict]
-[ADServiceStatistics _saveStats]
-[ADServiceStatistics markIncomingCommand:]
-[ADServiceStatistics markResponseForCommand:]
serviceIdentifier
T@"NSString",R,N,V_serviceIdentifier
com.apple.private.NanoTimer
com.apple.NanoAlarm
com.apple.NanoSettings
com.apple.NanoMaps
com.apple.SessionTrackerApp
com.apple.ActivityMonitorApp
com.apple.NanoMail
-[ADCommandCenter(NanoServices) taskmaster:didReceivePunchoutOutcome:]_block_invoke
-[ADCommandCenter(NanoServices) taskmaster:didLaunchApplicationForRequestWithId:]
-[ADCommandCenter(NanoServices) appLaunchHandler:didLaunchAppForRequestId:]
-[ADExternalRequestListener listen]_block_invoke
_ADHandleNewExternalRequestPeer_block_invoke
_ADHandleExternalRequestLocalRequest_block_invoke
v16@?0@"SAStartLocalRequest"8
_ADHandleExternalRequestStartRequest
com.apple.siri.sirikit.tcc.updater
-[ADSiriKitTCCObserver updateLocalTCCInfoFromMirroredInfo]_block_invoke
remote
-[ADSession _sendPendingCommands]
-[ADSession _sendLimboCommand:]
-[ADSession _sendServerCommand:]
-[ADSession _sendServerCommands:]
-[ADSession _sendAssistantDataChangedSinceAnchor:refId:]
-[ADSession assistantDataManager:didUpdateAssistantData:]_block_invoke
-[ADSession _setAssistantDataAnchorIfNeeded:]
-[ADSession _sendPendingDormantCommands]
-[ADSession _setDormantWithStyle:]
dormant
active
-[ADSession preheatAndMakeQuiet:]
-[ADSession eagerlyFetchAssistantData]
-[ADSession refreshValidationData]
-[ADSession sendCommand:opportunistically:]
-[ADSession prepareForRetry]
-[ADSession cancelSessionRequest:]
queue
Tq,N,V_state
TB,N,V_dormant
T@"<ADSessionDelegate>",W,N,V_delegate
Ti,N,V_sessionType
T@"NSString",C,N,V_connectionMode
sharedUserIdentifier
T@"NSString",C,N,V_sharedUserIdentifier
loggingSharedUserIdentifier
T@"NSString",C,N,V_loggingSharedUserIdentifier
initial
waiting
retryWaiting
connectionStarted
connectionOpened
openedDormant
authenticating
holding
createAssistant
loadAssistant
destroyAssistant
Faux UI Service Queue
-[ADFauxUIService handleCommand:forDomain:reply:]
Command not supported 
value
hasKey
T@"NSString",&,N,V_key
hasValue
T@"NSString",&,N,V_value
ADDeviceSyncCommandPullDeltaResponse.incrementalChanges
incrementalChanges = %@
incrementalChanges
T@"NSArray",R,C,N,V_incrementalChanges
com.apple.assistant.device-sync.messaging-service.rapport
-[ADDeviceSyncMessagingServiceRapport sendMessage:toDeviceWithIdentifier:completion:]
Rapport messaging channel is not supported.
channel
Messaging service is nil.
T@"NSString",R,C,N
T@"NSString",R,C,N,V_deviceIdentifier
ADSpeechManagerRootQueue
ADSpeechManagerQueue
-[ADSpeechManager _speechRecorder]
-[ADSpeechManager _speechCompressor]
-[ADSpeechManager _updateSpeechState:]
-[ADSpeechManager _updateRecordRoute:andDeviceIdentifier:]
-[ADSpeechManager dictationSessionDidComplete]_block_invoke
v24@?0@"NSString"8@"NSError"16
-[ADSpeechManager _fetchAssetsForLanaugeOrEnablementNotification:]_block_invoke_2
-[ADSpeechManager _interactiveLocalSpeechRecognizer]
-[ADSpeechManager cancelLocalRecognitionIfActive]_block_invoke
-[ADSpeechManager _cleanUpDelegateInfo]
-[ADSpeechManager _tellDelegateSpeechCanceled]
-[ADSpeechManager _tellDelegateSpeechFailedWithError:]
-[ADSpeechManager _tellDelegateSpeechFinishedWithPacketCount:endpointMode:endpointerMetrics:]
-[ADSpeechManager _tellDelegateSpeechShouldPreheatWithRecordingInfo:]
-[ADSpeechManager _tellDelegateSpeechRecognitionUpdateWillBegin]
-[ADSpeechManager _tellDelegateSpeechWillBeginWithTimestamp:isFromFile:]
-[ADSpeechManager _tellDelegateSpeechStartedWithRecordingInfo:]
-[ADSpeechManager _tellDelegateUpdateAudioInfo:]
-[ADSpeechManager _tellDelegateAboutSpeechPackets:atTimestamp:count:]
-[ADSpeechManager _tellDelegateAboutFingerprint:duration:]
-[ADSpeechManager _tellDelegateMusicWasDetected]
-[ADSpeechManager _tellDelegateEndpointWasDelayedForMusic]
-[ADSpeechManager _tellDelegateAboutInputAveragePower:peak:]
-[ADSpeechManager _recordingStoppedWithError:endpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]_block_invoke_2
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didRecognizeTokens:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didProcessAudioDuration:]
-[ADSpeechManager localSpeechRecognizer:didRecognizePackage:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
-[ADSpeechManager preheatWithOptions:]_block_invoke
-[ADSpeechManager prepareAudioSystemWithOptions:setAudioSessionActiveOptions:setAudioSessionActiveReason:completion:]_block_invoke
@"NSError"8@?0
-[ADSpeechManager startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:]
-[ADSpeechManager _startCaptureForMode:options:context:]
-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke
-[ADSpeechManager startRecordedDictationCaptureWithSessionUUID:narrowband:]_block_invoke
-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke
-[ADSpeechManager _stopSpeechCaptureWithOptions:]
-[ADSpeechManager _stopSpeechCaptureWithOptions:]_block_invoke
-[ADSpeechManager setMyriadDecisionResult:]_block_invoke
-[ADSpeechManager endSession]
-[ADSpeechManager endSession]_block_invoke
-[ADSpeechManager endSession]_block_invoke_2
-[ADSpeechManager endSession:completion:]
-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]
-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]_block_invoke
-[ADSpeechManager _endSessionIfIdle]
-[ADSpeechManager suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:]_block_invoke
-[ADSpeechManager updateSpeechProfilesForReasons:]
address_book
correction_profiles_change
assistant_tool
registered_applications_changed
-[ADSpeechManager updateSpeechProfilesForReasons:]_block_invoke
v32@?0@"NSString"8@"NSString"16^B24
-[ADSpeechManager _requestSpeechProfileUpdateForLanguage:]_block_invoke
-[ADSpeechManager _updateSpeechProfileForLanguage:]_block_invoke
-[ADSpeechManager _fetchSmartSiriVolume:]
-[ADSpeechManager _updateSiriOutputVolume:completion:]
dictationLanguage
T@"NSString",C,N,V_dictationLanguage
dictationOptions
T@"AFDictationOptions",C,N,V_dictationOptions
context
T@,&,N,V_context
isDriving
TB,N,V_isDriving
inputAudioPowerUpdater
T@"AFAudioPowerUpdater",R,N,V_inputAudioPowerUpdater
outputAudioPowerUpdater
T@"AFAudioPowerUpdater",R,N,V_outputAudioPowerUpdater
volumeServiceProvider
T@"<ADVolumeServiceProviding>",R,N
ADSpeechStateInitial
ADSpeechStateStarting
ADSpeechStateRecording
ADSpeechStateStopping
ADSpeechStateCanceling
ADSyncFlagManagerQueue
sync_flag
-[ADSyncFlagManager _setSyncNeededFlagsForKeys:]
ADShouldCensorSpeechDidChangeNotification
amos://%@
?committed=yes
-[ADTTSMutingObserver _updateAudioRouteOnMainThread]
-[ADTTSMutingObserver _audioRouteChanged:]
-[ADTTSMutingObserver _muteStateChanged:]
-[ADTTSMutingObserver _listenForAudioRouteChanges]
-[ADTTSMutingObserver _stopListeningForAudioRouteChanges]
-[ADTTSMutingObserver _listenForMuteStateChanges]
-[ADTTSMutingObserver _stopListeningForMuteStateChanges]
-[ADTTSMutingObserver _useDeviceSpeakerForTTSPreferenceChanged]
ADShowNetworkActivityIndicatorForApplicationIdentifier
ADHideNetworkActivityIndicatorForApplicationIdentifier
com.apple.assistant.sync_needed
AppleICUForce24HourTime
AppleICUForce12HourTime
%@#%@
com.apple.da
ExperimentGroup
walkabout
Siri Event
StoreDemoMode
com.apple.demo-settings
v24@?0@"NSArray"8@"NSError"16
kern.boottime
ADSystemGetBootTimeInMicroseconds_block_invoke
kern.bootsessionuuid
ADSystemGetBootSessionUUID_block_invoke
-[ADAudioSession currentInputRoute]_block_invoke
v24@?0^v8Q16
deviceName
T@"NSString",R,C,N,V_deviceName
T@"NSString",R,C,N,V_uid
TB,R,N,V_isBluetooth
_AudioObjectGetScalarArray
v20@?0I8r^{AudioObjectPropertyAddress=III}12
_AudioDeviceRegisterForChangedNotification
v12@?0I8
_AudioObjectGetIntValue
v16@?0^v8
_AudioObjectGetCFTypeRef
com.apple.myriad_beep_delay
-[ADSpeechRecorder _setAlertsIfNeeded]
dt-begin
dt-confirm
dt-cancel
v32@?0@"NSNumber"8@"NSNumber"16^B24
-[ADSpeechRecorder _updateRecordBufferDuration]
-[ADSpeechRecorder _speechControllerWithError:]
-[ADSpeechRecorder _prepareSpeechControllerWithOptions:error:]
since we have no Voice Controller!
-[ADSpeechRecorder _stopRecordingWithReason:]
reason
%d.%d
 Forcing two shot mode to NO
-[ADSpeechRecorder _updateToPostVoiceIfNecessary]
-[ADSpeechRecorder _playAudioAlert:]
-[ADSpeechRecorder _checkAudioLoggingLimits:]
-[ADSpeechRecorder _setupAudioFileWritingForSpeechController:info:]
@"NSString"8@?0
en-US
yyyy_MM_dd-HHmmss.SSS
%@/PCM-%@-%@.wav
-[ADSpeechRecorder _stopRecordingForEndpointReason:]
-[ADSpeechRecorder eagerlyInitializeAudioRecording]
-[ADSpeechRecorder preheat]
-[ADSpeechRecorder preheat]_block_invoke
-[ADSpeechRecorder recordingInfoForPreheatWithEvent:]
-[ADSpeechRecorder setUseAutomaticEndpointing:]
enabled
-[ADSpeechRecorder prepareForMode:]
-[ADSpeechRecorder startSpeechCaptureWithContext:willStartHandler:error:]
-[ADSpeechRecorder updateSpeechSynthesisRecord:]
-[ADSpeechRecorder _audioSessionID]
-[ADSpeechRecorder _setActivationInfo:]
-[ADSpeechRecorder _setCurrentDeviceContext]
-[ADSpeechRecorder _setPendingContextIfNecessary]
-[ADSpeechRecorder releaseAudioSession]
notify
suppress (keep others interrupted forever)
-[ADSpeechRecorder setSpeechWasRecognizedForElapsedTime:isFinal:]
-[ADSpeechRecorder setFingerprintWasRecognized]
-[ADSpeechRecorder stopSpeechCaptureForEvent:suppressAlert:]
-[ADSpeechRecorder cancelSpeechCaptureSuppressingAlert:]
-[ADSpeechRecorder forceSuccessAudioAlertOnStop]
-[ADSpeechRecorder _speechRecordingEventListener]_block_invoke
-[ADSpeechRecorder setClientConfiguration:]
-[ADSpeechRecorder playRecordingStartAlert]_block_invoke
-[ADSpeechRecorder _currentRecordRoute]
-[ADSpeechRecorder _currentRecordDeviceInfo]
-[ADSpeechRecorder _recordingInfoForEvent:audioAlertStyle:includeBTInfo:includeRecordDeviceInfo:]
-[ADSpeechRecorder speechControllerDidStartRecording:successfully:error:]
-[ADSpeechRecorder speechControllerDidStartRecording:successfully:error:]_block_invoke
-[ADSpeechRecorder _speechControllerDidStartRecording:successfully:error:]
-[ADSpeechRecorder speechControllerDidStopRecording:forReason:]
-[ADSpeechRecorder speechControllerDidStopRecording:forReason:]_block_invoke
-[ADSpeechRecorder _speechControllerDidStopRecording:forReason:errorCodeOverride:underlyingError:]
AVVoice_RecordStoppedWithError
AVVoice_RecordStopped
v32@?0@"NSFileHandle"8@"NSURL"16@"NSError"24
-[ADSpeechRecorder speechControllerRecordBufferAvailable:buffers:durationInSec:recordedAt:]_block_invoke
-[ADSpeechRecorder _speechControllerDidReceiveFirstAudioRecordBufferWithHostTime:atHostTime:]
-[ADSpeechRecorder speechControllerBeginRecordInterruption:withContext:]
-[ADSpeechRecorder speechControllerEndRecordInterruption:]
-[ADSpeechRecorder speechControllerRecordHardwareConfigurationDidChange:toConfiguration:]
-[ADSpeechRecorder speechController:willSetAudioSessionActive:]
-[ADSpeechRecorder speechController:didSetAudioSessionActive:]
-[ADSpeechRecorder speechControllerDidFinishAlertPlayback:ofType:error:]
-[ADSpeechRecorder speechControllerDidFinishAlertPlayback:ofType:error:]_block_invoke
pending
lost
-[ADSpeechRecorder startWaitingForMyriadDecision]
-[ADSpeechRecorder stopWaitingForMyriadDecision]
-[ADSpeechRecorder setMyriadDecisionResult:]
-[ADSpeechRecorder speechControllerDidDetectVoiceTriggerTwoShot:atTime:]
-[ADSpeechRecorder speechControllerDidDetectVoiceTriggerTwoShot:atTime:]_block_invoke_2
-[ADSpeechRecorder speechControllerDidDetectVoiceTriggerTwoShot:atTime:]_block_invoke
-[ADSpeechRecorder speechControllerRequestsOperation:forReason:]
-[ADSpeechRecorder speechControllerRequestsOperation:forReason:completion:]
-[ADSpeechRecorder _speechControllerRequestsOperation:forReason:completion:]
v32@?0d8d16@"NSError"24
-[ADSpeechRecorder speechControllerDidUpdateSmartSiriVolume:forReason:]
-[ADSpeechRecorder endpointer:didDetectStartpointAtTime:]
-[ADSpeechRecorder endpointer:didDetectStartpointAtTime:]_block_invoke
-[ADSpeechRecorder endpointer:didDetectHardEndpointAtTime:withMetrics:]
time
additionalMetrics
@"NSMutableDictionary"8@?0
-[ADSpeechRecorder endpointer:didDetectHardEndpointAtTime:withMetrics:]_block_invoke
-[ADSpeechRecorder _hardEndpointWasDetectedWithMetrics:atTime:]
-[ADSpeechRecorder _performTwoShotPromptForType:atTime:]
suppressedAlert
timedOut
-[ADSpeechRecorder _playPhaticWithCompletion:]
-[ADSpeechRecorder _playPhaticWithCompletion:]_block_invoke
delegate is nil
-[ADSpeechRecorder _handleFakeTwoShotPromptTimeoutWithUUID:]
-[ADSpeechRecorder _handleFakeTwoShotPromptCallbackWithUUID:timestamp:duration:error:]
-[ADSpeechRecorder updateEndpointHintForDuration:completion:]
-[ADSpeechRecorder _checkIfLastEndpointHintShouldBeAccepted]
-[ADSpeechRecorder _checkIfLastEndpointHintShouldBeAccepted]_block_invoke_2
-[ADSpeechRecorder _enforceEndpointHint]
-[ADSpeechRecorder performBlockAfterAlerts:timeout:]
-[ADSpeechRecorder performBlockAfterAlerts:timeout:]_block_invoke
-[ADSpeechRecorder acousticFingerprinter:hasFingerprint:duration:]
-[ADSpeechRecorder _startAudioPlaybackRequest:options:completion:]
-[ADSpeechRecorder _startAudioPlaybackRequest:options:completion:]_block_invoke
suppressInterruptionEndedNotifications
TB,N,V_suppressInterruptionEndedNotifications
Dictation
DictationSecureOfflineOnly
FingerprintOnly
-[ADSyncManager _finishSync]
-[ADSyncManager _syncingService:withSyncInfo:receivedChunk:continueBlock:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADSyncManager.m
Not expecting a sync chunk; already have a continue block
-[ADSyncManager _syncFinishedForService:error:]
-[ADSyncManager _continueSync]
-[ADSyncManager _continueSync]_block_invoke_2
-[ADSyncManager _continueSync]_block_invoke
v32@?0@"ADSyncChunkInfo"8@"NSError"16@?<v@?B>24
Already have a sync delegate, is sync still in progress?
-[ADSyncManager prepareSyncWithAnchors:forReasons:delegate:]
-[ADSyncManager addQueuedAnchors:forReasons:]
-[ADSyncManager continueSync]
-[ADSyncManager cancelSyncForAnchor:]
-[ADSyncManager reset]
-[ADSyncManager serviceTimedoutForSync:]
_currentAnchor
T@"SASyncAnchor",&,N,S_setCurrentAnchor:,V_currentAnchor
_continueBlock
T@?,C,N,S_setContinueBlock:,V_continueBlock
getAnchorsRequest
T@"SASyncGetAnchors",&,N,V_getAnchorsRequest
isVerifying
TB,N,V_isVerifying
_forceResetOnNextSync
TB,N,S_setForceResetOnNextSync:,V_forceResetOnNextSync
assistant_enabled
daily_sync
requested_by_assistantd
com.apple.assistant.sync_data_changed
aceDictionary
T@"NSDictionary",C,N,V_aceDictionary
oldId
T@"NSString",C,N,V_oldId
-[ADAudioActivationInfo setClientConfiguration:]
-[ADAudioActivationInfo avvcContext]
-[ADAudioActivationInfo startRecordingSettingsWithRecordRouteProvider:]
-[ADAudioActivationInfo audioAlertStyleWithRecordRouteProvider:]
speechEvent
Tq,R,N,V_speechEvent
useBorealisBuffer
TB,R,N,V_useBorealisBuffer
usePrelistening
TB,R,N,V_usePrelistening
Td,R,N,V_timestamp
machAbsoluteTime
TQ,R,N,V_machAbsoluteTime
speechCapturingMode
Tq,N,V_speechCapturingMode
canDelayAudioSessionActive
TB,R,N,V_canDelayAudioSessionActive
hasPlayedStartAlert
TB,R,N,V_hasPlayedStartAlert
events
stream_uid
delivery_stream
context_data
context_data_type
date_created
status
TEXT
INTEGER
BLOB
REAL
events_index_stream_uid
events_index_timestamp
events_index_date_created
com.apple.assistant.analytics-store
-[ADAnalyticsStore purgeDeletedEventRecordsBeforeOrEqualToDate:completion:]
-[ADAnalyticsStore purgeWithCompletion:]
Large File Size (%@)
-[ADAnalyticsStore purgeWithCompletion:]_block_invoke
-[ADAnalyticsStore resetWithCompletion:]
Settings Client
-[ADAnalyticsStore resetWithCompletion:]_block_invoke
-[ADAnalyticsStore _resetForReason:error:]
-[ADAnalyticsStore _preparedDatabaseWithError:]
retryCount
events_index_date_inserted
-[ADAnalyticsStore _insertEventRecords:error:]
-[ADAnalyticsStore _deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:error:]
-[ADAnalyticsStore _purgeDeletedEventRecordsBeforeOrEqualToDate:error:]
-[ADAnalyticsStore _fetchEventStreamUIDsWithError:]
-[ADAnalyticsStore _fetchEventRecords:afterTimestamp:eventStreamUID:deliveryStream:error:]
-[ADAnalyticsStore _fetchEventRecordsCreatedAfterDate:error:]
T@"NSString",R,C,N,V_path
-[AceObject(ADMediaRemote) _ad_canControlLocalVolumeWithCompletion:]_block_invoke
v12@?0C8
-[SADomainCommand(ADMediaRemote) _ad_performAudioPausingCommand:mediaRemoteService:replyHandler:]_block_invoke
-[SANPStartPlayback(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SANPStartPlayback(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]_block_invoke
-[SANPGetVolumeLevel(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SANPSetVolumeLevel(ADMediaRemote) _ad_volumeAction]
-[SANPSetVolumeLevel(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SANPSetVolumeLevel(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]_block_invoke
-[SAMPGetState(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
com.apple.music
v16@?0@"SAMPQueueState"8
Unsupported playback position request
-[ADMediaRemoteService _buildCacheOfWhaServiceSupportedCommands]
-[ADMediaRemoteService handleCommand:forDomain:reply:]
com.apple.ace.media.SetQueue
metricsContext
T@"<ADVolumeServiceProviding>",R,N,V_volumeServiceProvider
_ADAddWHAIdentifiersToSAMPSetQueue
clientID
beginTime
WHAMetrics
metricsContextValue
-[ADCommandCenter(AMOS) _sendAMOSCommand:domain:toBundleWithIdentifier:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]_block_invoke
v28@?0B8@"<SAAceCommand>"12@"NSError"20
-[ADCommandCenter(AMOS) _sendAMOSCommandToService:responseHandler:]_block_invoke
Unexpected response from service
-[ADCommandCenter(AMOS) _amosSADomainObjectRetrieve:completion:]
v20@?0@"<SAServerBoundCommand>"8i16
-[ADCommandCenter(AMOS) _updateObjectFromService:sadIdentifier:completion:]_block_invoke
Error retrieving object from service
Failed to retrieve object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectUpdate:completion:]
-[ADCommandCenter(AMOS) _amosSADomainObjectDelete:completion:]
Failed to receive object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]
Object not found in amos
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]_block_invoke
-[ADCommandCenter(AMOS) _amosSADomainObjectPunchOut:completion:]
No plugin for command
-[ADCommandCenter(AMOS) _handleCommandInAMOS:completion:]
Tried to handle non AMOS command as AMOS
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADSettingsRequestHandler.m
request
-[AFSiriRequest(ADSettingsRequestHandler) _ad_handleSettingsRequestWithCompletionHandler:]
Unable to set setting with type "Unknown"
Unable to get setting with type "Unknown"
assistantd
ADClientFlowServiceHelper
-[ADClientFlowServiceHelper openSensitiveURL:]
-[SACFSignal(ADClientFlowService) _ad_performWithReplyHandler:]_block_invoke
Client Flow Service Queue for %@
-[SACFAbstractClientCommand(ADClientFlowService) _ad_performWithReplyHandler:]_block_invoke
Watch dog timedout for command %@
-[SACFAbstractClientCommand(ADClientFlowService) _ad_performWithReplyHandler:]_block_invoke_2
v16@?0@"NSDictionary"8
-[SABaseCommand(ADClientFlowService) _ad_performWithReplyHandler:]
Client flow service
-[ADClientFlowService handleCommand:forDomain:reply:]
ADSpeechLogQueue
yyyy_MM_dd-HHmmss
-[ADSpeechLog beginNewSpeechLogWithFormat:]_block_invoke
OPUS
%@/%@-%@.%@
format
success
-[ADSpeechLog cancelCurrentSpeechLog]_block_invoke
-[ADSpeechLog endSpeechLog]_block_invoke
Speex_NB
8000Hz
+[ADSpeechLog buffersFromSpeechLogAtURL:isNarrowBand:]
Find My Device Monitor Queue
-[ADFMDMonitor init]
not lost
-[ADAlarmTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
siri-alarm-internal:
-[SAAlarmAlarmShow(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
v16@?0@"<ADAlarmStoring>"8
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
-[SAAlarmDelete(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
AFAlarmURLForAlarmIdentifier
-[ADCommandCenter(OutputVoice) _outputVoice_setOutputVoice:]
-[ADCommandCenter(OutputVoice) _updateAutoDownloadedVoiceAssetsForOutputVoice]
-[ADSessionRemoteServer dealloc]
-[ADSessionRemoteServer retryNakedCommandsIfNeeded]
/ace
-[ADSessionRemoteServer _connectionURL]
-[ADSessionRemoteServer _serverConnection]
SiriCoreSiriConnection
-[ADSessionRemoteServer _resetServerConnectionSynchronously:completion:]_block_invoke
v20@?0@"SiriCoreSiriConnection"8B16
-[ADSessionRemoteServer _resetServerConnectionSynchronously:completion:]_block_invoke_2
v16@?0@"SiriCoreConnectionMetrics"8
-[ADSessionRemoteServer _startConnectionPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:]
-[ADSessionRemoteServer siriConnection:willStartWithConnectionType:]
policyId
routeId
delay
connectionType
-[ADSessionRemoteServer siriConnection:didReceiveAceObject:]_block_invoke
-[ADSessionRemoteServer siriConnectionDidClose:]_block_invoke
-[ADSessionRemoteServer _siriConnection:didEncounterError:analysisInfo:]
connectionURL
interfaceIndex
sendBufferSize
wwanPreferred
-[ADSessionRemoteServer _updateConnectionPolicyFailureCount:]
-[ADSessionRemoteServer startRetry]
-[ADSessionRemoteServer resetRetryManager]
-[ADSessionRemoteServer _informDelegateOfError:]
-[ADSessionRemoteServer _cachedValidationData]
-[ADSessionRemoteServer _setCachedValidationData:withDuration:]
-[ADSessionRemoteServer _persistValidationData:withExpiration:]
9E5BD479-1D3E-400D-ADF7-ECB0A7DBFE06
-[ADSessionRemoteServer _reallyRetryPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:causedByError:forceReconnect:useSecondary:]
newId
-[ADSessionRemoteServer _retryForFailedConnection:withType:onError:]
-[ADSessionRemoteServer _retryForFailedConnection:withType:onError:]_block_invoke
-[ADSessionRemoteServer _continueSessionInitWithValidationData:]
-[ADSessionRemoteServer _continueAuthWithCertificateData:]_block_invoke
-[ADSessionRemoteServer _continueAuthentication]
-[ADSessionRemoteServer refreshValidationData]
-[ADSessionRemoteServer _startSession]
-[ADSessionRemoteServer _connectionOpened]
-[ADSessionRemoteServer _eagerAuthDidComplete]
-[ADSessionRemoteServer _saSessionValidationFailed:]
-[ADSessionRemoteServer _saGetSessionCertificateResponse:]
-[ADSessionRemoteServer _saCreateSessionInfoResponse:]
-[ADSessionRemoteServer _saAssistantCreated:]
-[ADSessionRemoteServer _saAssistantLoaded:]
v16@?0@"SiriCoreAceConnectionAnalysisInfo"8
-[ADSessionRemoteServer _saAssistantDestroyed:]
-[ADSessionRemoteServer _saAssistantNotFound:]
-[ADSessionRemoteServer _saAssistantNotReady:]
Assistant not ready
-[ADSessionRemoteServer _assistantFailedForReason:error:]
-[ADSessionRemoteServer _assistantFailedForReason:error:]_block_invoke
-[ADSessionRemoteServer _saCommandFailed:]
-[ADSessionRemoteServer _sendServerCommand:]
-[ADSessionRemoteServer _sendServerCommand:]_block_invoke
-[ADSessionRemoteServer _sendServerCommands:]
-[ADSessionRemoteServer _sendServerCommands:]_block_invoke
v24@?0@"<SiriCoreSessionObject>"8@"NSError"16
-[ADSessionRemoteServer _sendGetSessionCertificateData]
-[ADSessionRemoteServer _sendCreateSessionInfoRequestWithData:]
-[ADSessionRemoteServer _sendLoadAssistantWithAccount:validationData:]
-[ADSessionRemoteServer _sendSetRemoteDevicesWithAccount:]
v16@?0@"ADSessionBarrier"8
-[ADSessionRemoteServer _homeInfoDidChange:]_block_invoke
-[ADSessionRemoteServer networkManagerNonWWANDidBecomeAvailable:]_block_invoke
-[ADSessionRemoteServer networkManagerLostNonWWANConnectivity:]_block_invoke
-[ADSessionRemoteServer _recheckForWiFiTransition]
-[ADSessionRemoteServer _createAssistant]
-[ADSessionRemoteServer _probeSessionIfIdle]
sessionState
underlyingErrorDomain
underlyingErrorCode
userInfo
Unavailable
Good
Unknown
CellularInstant
CellularHistorical
WiFiInstant
WiFiHistorical
v16@?0@"SiriCoreNetworkQualityReport"8
-[ADSessionRemoteServer currentConnectionPreCachedMetrics]
Paired Simulator Device
Paired Simulator
Paired Simulator Product Version
ADMuteModeDidChangeNotification
ADSystemMuteModeObserver
-[ADSystemMuteModeObserver _registerForRingerMuteStateNotifications]
com.apple.springboard.ringerstate
transport type
-[ADCommandCenter(RemoteExecute) executeCommandFromRemote:fromPeer:reply:]
-[ADCommandCenter(RemoteExecute) executeCommandFromRemote:fromPeer:reply:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _saRemoteDeviceExecute:completion:]
-[ADCommandCenter(RemoteExecute) startRemoteRequest:completion:]_block_invoke
T@"NSString",C,N,V_pre
post
T@"NSString",C,N,V_post
validity
T@"NSString",C,N,V_validity
toAdd
T@"NSArray",&,N,V_toAdd
toRemove
T@"NSArray",&,N,V_toRemove
ABAssistantManager
-[ADAddressBookManager _abAssistantManager]
v24@?0@"NSArray"8@"NSArray"16
System/Library/Assistant/Plugins/AddressBook.assistantBundle
_LoadAddressBookBundle_block_invoke
Local Phone Service Queue
-[ADLocalPhoneService handleCommand:forDomain:reply:]
-[ADLocalPhoneService _answerHandler:completion:]
No call to answer
-[ADLocalPhoneService _hangUpCurrentCall]
No call to hang up
Command not supported
last_known_stream_id
hasLastKnownStreamId
lastKnownStreamId
T@"NSString",&,N,V_lastKnownStreamId
-[AFSiriRequest(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequestWithCompletionHandler:]
-[SABaseClientBoundCommand(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequest:completionHandler:]
com.apple.NanoCalendar
-[ADAceDomainSignalRequestHandler handleSiriRequest:deliveryHandler:completionHandler:]
T@"<ADAcousticIDHelperDelegate>",W,N,V_delegate
ADBulletinBoardObserver
-[ADBulletinBoardObserver _getRestrictedAppsFromBulletinBoard]
-[ADBulletinBoardObserver _getRestrictedAppsFromBulletinBoard]_block_invoke
-[ADBulletinBoardObserver fetchNotificationPreviewRestrictedAppsWithCompletion:]_block_invoke
-[ADBulletinBoardObserver observer:updateSectionInfo:]
BBObserver
com.apple.siri.SynapseSyncPlugin
com.apple.assistant.device-sync.messaging-channel.rapport
ADMobileBluetoothDeviceDataSource
-[ADMobileBluetoothDeviceDataSource _cleanUpDeviceProxies]
-[ADMobileBluetoothDeviceDataSource _detachFromSession]
-[ADMobileBluetoothDeviceDataSource _attachToSession]
-[ADMobileBluetoothDeviceDataSource _sessionAttached:result:]
-[ADMobileBluetoothDeviceDataSource _sessionDetached:]
-[ADMobileBluetoothDeviceDataSource _sessionTerminated:]
-[ADMobileBluetoothDeviceDataSource _setUpLocalDevice]
-[ADMobileBluetoothDeviceDataSource localDevice:event:result:]
-[ADMobileBluetoothDeviceDataSource _setUpAccessoryManager]
-[ADMobileBluetoothDeviceDataSource accessoryManager:event:device:state:]
-[ADMobileBluetoothDeviceDataSource _handleInEarStatusChangedForBTDevice:fromAccessoryManager:]
-[ADMobileBluetoothDeviceDataSource getBTDeviceWithAddress:completion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getBTDeviceWithDeviceUID:completion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getConnectedDevicesWithCompletion:]
-[ADMobileBluetoothDeviceDataSource getConnectedDevicesWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getPairedDevicesWithCompletion:]
-[ADMobileBluetoothDeviceDataSource getPairedDevicesWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource _fetchConnectedDeviceProxies]
v32@?0@"ADMobileBluetoothDeviceProxy"8Q16^B24
-[ADMobileBluetoothDeviceDataSource _fetchConnectedDeviceProxies]_block_invoke
-[ADMobileBluetoothDeviceDataSource _fetchPairedDeviceProxies]
-[ADMobileBluetoothDeviceDataSource _fetchPairedDeviceProxies]_block_invoke
%@ {deviceUID = %@}
%@ {address = %@}
-[ADMobileBluetoothDeviceProxy dealloc]
-[ADMobileBluetoothDeviceProxy initWithAddress:dataSource:queue:]
-[ADMobileBluetoothDeviceProxy initWithAddress:dataSource:queue:]_block_invoke
-[ADMobileBluetoothDeviceProxy initWithDeviceUID:dataSource:queue:]
-[ADMobileBluetoothDeviceProxy initWithDeviceUID:dataSource:queue:]_block_invoke
-[ADMobileBluetoothDeviceProxy reload]_block_invoke
v16@?0@"AFBluetoothHeadphoneInEarDetectionState"8
v24@?0^{BTDeviceImpl=}8^{BTAccessoryManagerImpl=}16
-[ADMobileBluetoothDeviceProxy _updateDeviceInfo:]
v16@?0@"<ADBluetoothDeviceObserver>"8
-[ADMobileBluetoothDeviceProxy _updateHeadphoneInEarDetectionState:]
-[ADMobileBluetoothDeviceProxy _fetchDeviceInfoWithCompletion:]
v16@?0@"<AFBluetoothDeviceInfoMutating>"8
-[ADMobileBluetoothDeviceProxy _fetchDeviceInfoWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneInEarDetectionStateWithCompletion:]
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneInEarDetectionStateWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _accessBTDeviceAndAccessoryManagerUsingBlock:]
-[ADMobileBluetoothDeviceProxy _accessBTDeviceAndAccessoryManagerUsingBlock:]_block_invoke
-[ADMobileBluetoothDeviceProxy _invalidate]
v24@?0@"<ADBluetoothDeviceObserver>"8^B16
address
T@"NSString",R,C,N,V_address
deviceUID
T@"NSUUID",R,C,N,V_deviceUID
ADBTResult
_ADBTDeviceGetAddress
_ADBTDeviceGetDeviceInfo
_ADBTDeviceGetHeadphoneInEarDetectionState
v16@?0@"<AFBluetoothHeadphoneInEarDetectionStateMutating>"8
com.apple.assistant.request-lifecycle-observer
-[ADRequestLifecycleObserver requestWillBeginWithOrigin:client:]
v16@?0@"<ADRequestLifecycleListening>"8
-[ADRequestLifecycleObserver requestDidEndWithOrigin:client:]
-[ADRequestLifecycleObserver _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
event
requestWillBegin
requestDidEnd
v24@?0@"<ADRequestLifecycleListening>"8^B16
AcePassthroughSiriRequestClientBoundCommand
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADAcePassthroughSiriRequest.m
replyCommand
navStatus
T@"SANavStatus",&,N,V_navStatus
localSearchGetNavigationStatusCompleted
T@"SALocalSearchGetNavigationStatusCompleted",&,N,V_localSearchGetNavigationStatusCompleted
queueState
T@"SAMPQueueState",&,N,V_queueState
errorIndicatorStatus
T@"SAErrorIndicatorStatus",&,N,V_errorIndicatorStatus
currentHome
T@"SAHACurrentHome",&,N,V_currentHome
phoneCallState
T@"SAPhoneCallState",&,N,V_phoneCallState
musicPersonalizationToken
T@"NSString",C,N,V_musicPersonalizationToken
playbackDeviceList
T@"SARemotePlaybackDeviceList",&,N,V_playbackDeviceList
ClientConnection
-[ADClientConnection initWithXPCConnection:]
-[ADClientConnection dealloc]
-[ADClientConnection connectionDisconnected]
-[ADClientConnection _updateSpeechRequestOptions:]
-[ADClientConnection _setBluetoothDevice:]
-[ADClientConnection adRequestWillReceiveCommand:]_block_invoke
-[ADClientConnection adRequestDidReceiveCommand:reply:]_block_invoke
v24@?0@"AceObject<SAAceCommand>"8@"NSError"16
-[ADClientConnection adRequestDidReceiveCommand:reply:]
-[ADClientConnection _handleRequestCompletedWithUUID:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke
-[ADClientConnection adRequestEncounteredIntermediateError:]
-[ADClientConnection adStartUIRequestWithText:completion:]_block_invoke
-[ADClientConnection adRequestRequestedOpenApplicationWithBundleID:URL:completion:]_block_invoke
-[ADClientConnection adRequestRequestedOpenURL:completion:]_block_invoke
-[ADClientConnection adGetBulletinContext:]_block_invoke
-[ADClientConnection adGetClockContext:]_block_invoke
-[ADClientConnection adTextToSpeechIsMuted]
-[ADClientConnection adWantsToCacheImage:]_block_invoke
-[ADClientConnection _registerForRingerStateNotification]
-[ADClientConnection _computeShouldSpeak]
-[ADClientConnection _updateShouldSpeak]
ClientConnection speechRecordingDidBegin
speechRecordingDidEnd
ClientConnection speechRecordingDidCancel
ClientConnection speechRecordingDidFail
-[ADClientConnection adSpeechRecordingDidFail:sessionUUID:]
-[ADClientConnection adSpeechRecognitionDidFail:sessionUUID:]
-[ADClientConnection adSpeechRecordingPerformTwoShotPromptWithType:sessionUUID:completion:]_block_invoke
-[ADClientConnection bluetoothDevice:deviceInfoDidChangeFrom:to:]
-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]
-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke
-[ADClientConnection bluetoothDeviceDidInvalidate:]
-[ADClientConnection willPresentUIWithReply:]
com.apple.assistant.client-connection
-[ADClientConnection didDismissUI]
-[ADClientConnection setConfiguration:]
ClientConnection endSession
-[ADClientConnection _setRequestCompletion:]
ClientConnection startRecordingForPendingSpeechRequest
-[ADClientConnection startRecordingForPendingSpeechRequestWithOptions:requestId:completion:]_block_invoke_2
v16@?0@?<v@?d>8
-[ADClientConnection continuePendingSpeechRequestWithId:fromTimestamp:]
ClientConnection cancelRequest
v16@?0@"AFAudioState"8
v16@?0@"NSSet"8
v32@?0@"NSString"8@"AFClockTimerSnapshot"16^B24
Large Data Returned to sender
-[ADClientConnection _performCommandDictionary:forBundleIdentifier:reply:]_block_invoke
SA%@
-[ADClientConnection _performTaskCommandDictionary:forBundleIdentifier:reply:]_block_invoke
-[ADClientConnection _fetchAppContextForApplicationInfo:reply:]_block_invoke
-[ADClientConnection listener:shouldAcceptNewConnection:]
-[ADClientConnection _continuePendingSpeechRequestFromTimestamp:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestCommandGroup:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestCommandGroup:]_block_invoke
ADRegisterSyncNowActivity_block_invoke
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?>16
com.apple.siri.xpc_activity.sync.now
ADRegisterSyncNowActivity
_RegisterXPCActivity_block_invoke
com.apple.siri.xpc_activity.sync.daily
_RegisterPeerFetchActivity_block_invoke
com.apple.siri.xpc_activity.peer_fetch
_BackoffFromShortInterval
_RegisterCompanionFetchActivity_block_invoke
com.apple.siri.xpc_activity.companion_fetch
com.apple.siri.xpc_activity.refresh_validation
_RefreshValidationWithCompletion
_RegisterDestroyActivity_block_invoke_2
com.apple.siri.xpc_activity.destroy
com.apple.siri.xpc_activity.service_maintenance
com.apple.siri.xpc_activity.heartbeat
com.apple.siri.xpc_activity.metrics-sender
com.apple.siri.xpc_activity.sync.verification.daily
com.apple.siri.xpc_activity.internal-cleanup
com.apple.siri.xpc_activity.cloudkitsync.weekly
_ADValidationRefreshCriteriaForInterval
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADSpeechCompressor.m
Already started compressor
AudioConverterNew failed: %x
AudioConverterSetProperty/kAudioConverterEncodeBitRate failed: %x
-[ADSpeechCompressor addAudioSampleData:]_block_invoke_2
Too many buffers
Cannot produce ASPD for PCM
-[ADSpeechCompressor addAudioSampleData:]
com.apple.assistant.audio-state-manager
-[ADAudioStateManager getAudioStateWithOptions:completion:]_block_invoke
-[ADAudioStateManager _mediaServicesWereLost:]
-[ADAudioStateManager _mediaServicesWereReset:]
-[ADAudioStateManager _fetchAudioSessionID]
-[ADAudioStateManager _updateAudioSessionID:]
-[ADAudioStateManager _didChangeAudioStateFrom:to:]
listener
T@"<ADAudioStateListening>",R,W,N,V_listener
AcePassthroughSiriResponseReplyCommand
ADExtensionServiceShouldLaunchInBackgroundForConnection
v20@?0B8B12B16
com.apple.assistant.offline-metrics
SiriOfflineMetrics.plist
offlineSAMetrics.plist
SiriMetrics
-[ADOfflineMetricsManager insertMetrics:]
-[ADOfflineMetricsManager deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsManager fetchNextMetricsUsingBlock:]
v24@?0@"SAMetrics"8@"NSString"16
-[ADOfflineMetricsManager deleteAllMetrics]
%@ Recognition Text: "%@"
%@ Partial Recognition Text: "%@"
%@ key: %@
-[SASUpdateAudioInfo(ADSAExtensions) ad_updateWithRecordingInfo:speechRequestOptions:clientConfiguration:]
[%@ count:%tu total:%ld
  aceId: %@
  refId: %@]
%@ errorCode: %ld reason: %@
ad_parentRequest
T@"SABaseCommand",&,N,Sad_setParentRequest:
com.apple.siri.ManagedObjectService.
ADCurrentHomeKitHomeChanged
-[ADContextManager init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADContextManager.m
0 && "Please use the designated initializer."
-[ADContextManager initWithDelegate:]
BackgroundContextQueue
-[ADContextManager dealloc]
-[ADContextManager keepReportingNowPlayingTimingEventsHeuristically]
com.apple.Maps
ContextCollation
-[ADContextManager getAppContextForDeviceState:applicationInfos:completion:]_block_invoke_3
v24@?0@"SAUserActivity"8@"NSString"16
-[ADContextManager _getCurrentUserActivityOnQueue:completion:]_block_invoke
v24@?0@"NSUserActivity"8@"NSError"16
v32@?0@"NSUUID"8@"NSString"16@"NSError"24
com.apple.reminders
-[ADContextManager getAlertContextWithBulletinsFetcher:clockSnapshotFetcher:completion:]_block_invoke_2
-[ADContextManager getAlertContextWithBulletinsFetcher:clockSnapshotFetcher:completion:]_block_invoke
-[ADContextManager getAlertContextWithBulletinsFetcher:clockSnapshotFetcher:completion:]_block_invoke_3
v32@?0@"NSUUID"8@"AFClockAlarm"16^B24
v24@?0@"AFClockAlarmSnapshot"8@"AFClockTimerSnapshot"16
-[ADContextManager markBulletinAsAcknolwedgedForDomainObject:]
-[ADContextManager getDomainObjectFromMessageContext:completion:]
-[ADContextManager _getNowPlayingMediaIsResumable:]
com.apple.Music
com.apple.podcasts
com.apple.iBooks
com.apple.NanoMusic
-[ADContextManager _getBackgroundContext:]
-[ADContextManager _getBackgroundContext:]_block_invoke
com.apple.siri.client.state.DynamiteClientState.siri_data_changed
-[ADContextManager _registerForBGUpdates]
-[ADContextManager _unregisterForBGUpdates]
notification
assistantd_current_home
com.apple.homed.current-home.changed
ADObserveCurrentHomeKitHomeChanges_block_invoke_2
current-home-notification
isNavigating
v24@?0@"AceObject"8@"NSError"16
-[ADContextManager _schedlueNowPlayingRefreshForReason:]_block_invoke
-[ADContextManager _schedlueNowPlayingRefreshForReason:]
UNKOWN
-[ADContextManager _updateNowPlayingInfoWithContext:completion:]
-[ADContextManager _updateNowPlayingInfoWithContext:completion:]_block_invoke
-[ADContextManager _notePossiblePlayPausedStateChange:]
poll
-[ADContextManager _reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason:]
-[ADContextManager _updateBackgroundContextIfNowPlayingInfoChanged:]
PhoneCallState-notification
T@"<ADContextManagerDelegate>",W,N,V_delegate
didChange
NSUserActivity
initNSUserActivity
classNSUserActivity
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
MediaPlayerLibrary
ADAlertContextQueue
VMVoicemailManager
initVMVoicemailManager
classVMVoicemailManager
/System/Library/PrivateFrameworks/VisualVoicemail.framework/VisualVoicemail
VisualVoicemailLibrary
ICLibraryAuthServiceClientTokenProvider
initICLibraryAuthServiceClientTokenProvider
classICLibraryAuthServiceClientTokenProvider
/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud
iTunesCloudLibrary
HMClientConnection
ADDeviceSyncCommandPullDeltaRequest.dataType
ADDeviceSyncCommandPullDeltaRequest.generation
ADDeviceSyncCommandPullDeltaRequest.limit
limit = %@
limit
TQ,R,N,V_limit
-[ADRetryManager beginRetryableRequest:]
-[ADRetryManager endRetryableRequestForCommand:]
-[ADRetryManager endRetryableRequestForCommandAceId:refId:]
-[ADRetryManager setLastReceivedCommand:]
-[ADRetryManager _objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:]
for full request
restart request
-[ADRetryManager objectsToRetry]
latestMappedRequestId
T@"NSString",C,N,V_latestMappedRequestId
No matching event was found
-[AFSiriRequest(ADShowNextEventRequestHandler) _ad_handleShowNextEventRequestWithCompletionHandler:]
v24@?0@"AFSiriResponse"8@"NSError"16
com.apple.mobilecal
B32@?0@"EKEvent"8Q16^B24
-[AFShowNextEventRequest(ADShowNextEventRequestHandler) _selectedCalendarsForEventStore:]
EKEventStore
initEKEventStore
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADShowNextEventRequestHandler.m
classEKEventStore
/System/Library/Frameworks/EventKit.framework/EventKit
EventKitLibrary
/System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation
CalendarFoundationLibrary
CalDateRange
initCalDateRange
classCalDateRange
EKPreferences
initEKPreferences
classEKPreferences
uuid
T@"NSUUID",R,N,V_uuid
timedout
TB,R,N,V_timedout
syncChunkHandler
T@?,C,N,V_syncChunkHandler
-[ADCommandCenter(Metrics) _reallyCommitOrSaveMetrics:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:completion:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_isAssistantOrDictationEnabled]
-[ADCommandCenter(Metrics) _metrics_isSystemIdle]
ModelInfo
unavailable
-[ADCommandCenter(Metrics) _metrics_markLocalEagerRecognitionCandidate:]
-[ADCommandCenter(Metrics) _metrics_gatherAndSendSuccessMetrics]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordFailureMetricsForError:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordCancellationMetrics]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:]
v16@?0@"ADAnalyticsStore"8
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:]_block_invoke_4
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]_block_invoke
v16@?0@"SAMetrics"8
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]_block_invoke_3
EnabledAndActiveStatus
NONE
assistantIsEnabled
TRUE
FALSE
assistantOnLockscreen
dictationIsEnabled
voiceTriggerEnabled
carPlayHasBeenActiveWithin24Hours
raiseToSpeakEnabled
raiseToSpeakAssetVersion
appleAudioDevicesActiveWithin24Hours
recordedDate
accountID
SpotlightEngagementFeedback
Selected
LostFocus
Closed
Cleared
engagementInfo
-[ADCommandCenter(Metrics) _metrics_sendEngagementFeedback:voiceQueryIdentifier:]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetricsIfNeeded]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetrics]
-[ADCommandCenter(Metrics) _metrics_recordNetworkSnapshotForEvent:completion:]_block_invoke
snapshotEvent
ConfidenceMean
ConfidenceMax
ConfidenceMin
BestTranscription
x-apple-siri-notification://%@
-[AFBulletin(SANotificationObject) saNotificationObjectWithURLString:]
-[ADAcePassthroughResponseTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
ADSiriConnectionRemoteErrorDomain
ADSiriConnectionRemote
-[ADSiriConnectionRemote init]
-[ADSiriConnectionRemote _establishPeerConnection]
-[ADSiriConnectionRemote _establishPeerConnection]_block_invoke
-[ADSiriConnectionRemote _tryToReadPeerStreamHeaderFromData:needsReconnect:]
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
X-Companion-Type
X-Companion-Build
-[ADSiriConnectionRemote _fallbackWithSafetyNet]
-[ADSiriConnectionRemote _restartConnectionProviders]
-[ADSiriConnectionRemote _peerConnectionFailure]
-[ADSiriConnectionRemote _peerConnectionDidEnd]
-[ADSiriConnectionRemote peerStreamConnection:failedWithError:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]_block_invoke
establishing
have active
-[ADSiriConnectionRemote peerStreamConnection:requestMetrics:]_block_invoke
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADSiriConnectionRemote.m
Programming error: network stream provider should support initial payload.
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke
-[ADSiriConnectionRemote _didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:]
-[ADSiriConnectionRemote _closeNetworkConnection]
-[ADSiriConnectionRemote _networkConnectionFailure]
-[ADSiriConnectionRemote _networkConnectionDidEnd]
-[ADSiriConnectionRemote _setupStaleNetworkTimerForProvider:]_block_invoke
-[ADSiriConnectionRemote connectionProvider:receivedError:]
-[ADSiriConnectionRemote connectionProvider:receivedError:]_block_invoke
-[ADSiriConnectionRemote _waitForPeerData]_block_invoke
v24@?0@"NSObject<OS_dispatch_data>"8@"NSError"16
-[ADSiriConnectionRemote _peerConnectionReceivedData:]
-[ADSiriConnectionRemote _peerReadStreamErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToPeer:]_block_invoke
-[ADSiriConnectionRemote _waitForNetworkData]_block_invoke
-[ADSiriConnectionRemote _networkConnectionReceivedData:]
-[ADSiriConnectionRemote _networkConnectionDidOpen]
-[ADSiriConnectionRemote _networkConnectionErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToNetwork:]_block_invoke
-[ADSiriConnectionRemote _unregisterForSleepNotification]
-[ADSpeechPlaybackSimulator startPlaybackWithURL:narrowBand:dictation:completion:]
offlineIdentifier
-[ADPeerConnectionProvider headerDataWithForceReconnect:]
-[ADPeerConnectionProvider _getNWConnectionWithInitialData:completion:]_block_invoke_2
-[ADPeerConnectionProvider _getNWConnectionWithInitialData:completion:]_block_invoke
v20@?0i8@"NSError"12
Peer
com.apple.siri.nilRequestId
-[ADResultObjectCache _addObjects:forRequestId:sessionRequestId:]
-[ADResultObjectCache commandsForReply:toCommand:missingReferences:]
_mutableResolvedIds
T@"NSMutableSet",&,N,V_mutableResolvedIds
hasBeenFulfilled
TB,N,V_hasBeenFulfilled
requestId
T@"NSString",R,C,N,V_requestId
missingReferences
T@"NSArray",R,N,V_missingReferences
fulfillmentBlock
T@?,C,N,V_fulfillmentBlock
resolvedReferences
T@"NSSet",R,N
Invalid store type
Storage could not be initialized
Unhandled %@
-[ADKnowledgeService handleCommand:forDomain:reply:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]_block_invoke
v32@?0@"NSString"8Q16^B24
v24@?0@"NSError"8@"NSArray"16
-[ADKnowledgeService handleSetValuesForKeys:completion:]
entry with no key %@
-[ADKnowledgeService handleDeleteValueForKey:completion:]
-[ADKnowledgeService handleDeleteValueForKey:completion:]_block_invoke
-[ADKnowledgeService handleGetLinkedData:completion:]
-[ADKnowledgeService handleGetLinkedData:completion:]_block_invoke
-[ADKnowledgeService handleSetLinkedData:completion:]
-[ADKnowledgeService handleSetLinkedData:completion:]_block_invoke_2
CKKnowledgeStore
/System/Library/PrivateFrameworks/CoreKnowledge.framework/CoreKnowledge
-[STGenericIntentRequest(Metrics) _ad_finalMetricsContextWithResponse:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADGenericIntentService.m
[request isKindOfClass:[STGenericIntentRequest class]]
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]_block_invoke
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
requestBegin
requestEnd
postSpeechCapture
-[ADAuthenticator _getSessionRequestForCertificate:completion:]_block_invoke
-[ADAuthenticator _signData:withSessionInfo:signedData:]
-[ADAuthenticator _setNACContext:]
-[ADAuthenticator prepareWithCertificateData:completion:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADAuthenticator.m
Shouldn't already have an NACContext
v28@?0i8^{NACContextOpaque_=}12@"NSData"20
Must have session info to get signed data
_requestData
T@"NSData",&,N,S_setRequestData:,V_requestData
_sessionInfo
T@"NSData",&,N,S_setSessionInfo:,V_sessionInfo
<%@: %p %@>
Call Observer Queue
-[ADCallObserver startObservingCallStateWithDelegate:]
-[ADCallObserver startObservingCallStateWithDelegate:]_block_invoke
-[ADCallObserver stopObservingCallStateWithCompletion:]
T@"<ADDisplayScaleContextCollectorDelegate>",W,N,V_delegate
pairs
T@"NSMutableArray",&,N,V_pairs
ADPeerLocationPolicy
T@"<ADPeerLocationPolicyDelegate>",W,N,V_delegate
allowedTimelimit
Td,N,V_allowedTimelimit
com.apple.mobileslideshow
-[SANodeIntent(ADGenericIntentRequestTransformer) ad_filteredDictionaryWithAppID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADGenericIntentRequestTransformer.m
[aceCommand isKindOfClass:[SAIntentGroupSupportedIntentResponse class]]
ping
pong
-[ADDeviceSyncTimerConsumer prepareForDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer finalizeForDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer preferredPullingModeForDeviceWithIdentifier:fromGeneration:toGeneration:]
-[ADDeviceSyncTimerConsumer getGenerationForDeviceWithIdentifier:completion:]
-[ADDeviceSyncTimerConsumer getGenerationForDeviceWithIdentifier:completion:]_block_invoke
v16@?0@"AFClockItemStorage"8
-[ADDeviceSyncTimerConsumer applyIncrementalChanges:fromDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]_block_invoke
com.apple.assistant.clock-service
-[ADClockService getFiringStatesWithCompletion:]
-[ADClockService getFiringStatesWithCompletion:]_block_invoke_2
-[ADClockService getFiringStatesWithCompletion:]_block_invoke
v32@?0@"NSString"8@"AFClockAlarmSnapshot"16^B24
-[ADClockService getSnapshotsWithCompletion:]
-[ADClockService getSnapshotsWithCompletion:]_block_invoke
-[ADClockService requestLifecycleObserverRequestWillBegin:origin:client:]_block_invoke
-[ADClockService requestLifecycleObserverRequestDidEnd:origin:client:]_block_invoke
-[ADClockService _mutateMergedClockTimerSnapshotUsingBlock:]
v24@?0@"NSString"8@"AFClockAlarmSnapshot"16
v24@?0@"NSString"8@"AFClockTimerSnapshot"16
-[ADClockService _mergedClockAlarmSnapshot]
-[ADClockService _mergedClockAlarmSnapshot]_block_invoke
v16@?0@"<AFClockAlarmSnapshotMutating>"8
-[ADClockService _mergedClockTimerSnapshot]
-[ADClockService _mergedClockTimerSnapshot]_block_invoke
-[ADClockService _dismissFiringItemsWithOptions:]
remoteTimerManager
T@"ADRemoteTimerManager",R,N,V_remoteTimerManager
sourceIDSFirstRoutableDestination
assistant_id
source_airplay_id
hasSourceIDSFirstRoutableDestination
T@"NSString",&,N,V_sourceIDSFirstRoutableDestination
hasAssistantId
T@"NSString",&,N,V_assistantId
hasSourceAirplayId
sourceAirplayId
T@"NSString",&,N,V_sourceAirplayId
-[SAIntentGroupConfirmIntent(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]
-[SAIntentGroupConfirmIntent(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]_block_invoke_2
com.apple.siri.TimerStore
com.apple.siri.TaskServiceErrorDomain
SiriTaskService-%@
SiriTaskService-
-[ADSiriTaskService handleCommand:forDomain:reply:]
-[ADSiriTaskService handleCommand:forDomain:reply:]_block_invoke_2
-[ADSiriTaskService handleCommand:forDomain:reply:]_block_invoke
v16@?0@"AFSiriRequest"8
com.apple.assistant.analytics.service
-[ADAnalyticsService init]
-[ADAnalyticsService managedConfigurationEffectiveSettingsChanged]
-[ADAnalyticsService stageEvents:completion:]_block_invoke_2
SiriAnalytics.db
-[ADAnalyticsService _processStagedEvents]_block_invoke
-[ADAnalyticsService _suspendEventsStaging]
-[ADAnalyticsService _resumeEventsStaging]
-[ADAnalyticsService _linkStoreForSysdiagnose]
-[ADAnalyticsService _linkStoreForSysdiagnose]_block_invoke
-[ADAnalyticsService _unlinkStoreForSysdiagnose]
currentEventStreamUID
T@"NSString",C,N,VaceId
ADBuddyStateDidChangeNotification
Buddy Monitor Queue
-[ADBuddyMonitor init]
complete
running
-[ADBuddyMonitor _updateBuddyState]_block_invoke
-[ADAddressBook init]
com.apple.contact.people
B24@?0@"ADDictationSession"8^B16
v32@?0@"ADDictationSession"8Q16^B24
Location
-[ADPushContextReceiver sendContext:]
-[ADNotifyAndPushContextCollector _getContextForAppInfo:completion:]
Getting
-[ADNotifyAndPushContextCollector _invokeAllCompletionsWithError]
ADPeerStreamConnectionErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADPeerStreamConnection.m
ADPeerStreamConnection
ADPeerStreamConnectionFactory
-[ADSharedPeerStreamConnection _wakeUpRemoteForStreamIdentifier:]
-[ADSharedPeerStreamConnection _wakeUpMessageFailedWithError:]
-[ADSharedPeerStreamConnection _initiateOptimisticEagerStreamFetchRetry]
-[ADSharedPeerStreamConnection _initiateOptimisticEagerStreamFetchRetry]_block_invoke
-[ADSharedPeerStreamConnection getSocketForConnection:completion:]_block_invoke
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]_block_invoke
-[ADSharedPeerStreamConnection _invokeSocketCompletionWithCurrentSocketOrError:]
-[ADSharedPeerStreamConnection closeForConnection:]_block_invoke
-[ADSharedPeerStreamConnection _close]
-[ADSharedPeerStreamConnection getRemoteMetrics:]_block_invoke
-[ADSharedPeerStreamConnection _requestStreamEstablishment]
-[ADSharedPeerStreamConnection _setPreferBTClassic:]
has_device
nearby
connected
cloud_connected
last_nearby_status_change
preferring_bt_classic
last_wakeup_duration
last_stream_open_duration
last_stream_open_error
time_since
last_ids_message_info
-[ADSharedPeerStreamConnection _updatePairedDeviceInfo]
-[ADSharedPeerStreamConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADSharedPeerStreamConnection _handleGetMetricsMessage:context:]_block_invoke
-[ADSharedPeerStreamConnection _handleReestablishMessage:context:]
-[ADSharedPeerStreamConnection _handleResponseProtobuf:forIdentifier:]
-[ADSharedPeerStreamConnection service:account:identifier:didSendWithSuccess:error:context:]
average_local_RTT
local_message_state
device_blacked_out
-[ADSharedPeerStreamConnection _establishEagerStreamPair]
-[ADSharedPeerStreamConnection service:nearbyDevicesChanged:]
-[ADSharedPeerStreamConnection service:devicesChanged:]
-[ADPeerStreamConnection getSocket:]_block_invoke
v28@?0@"IDSDeviceConnection"8i16@"NSError"20
-[ADPeerStreamConnection getLocalMetrics:]
-[PBCodable(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyWakeUpRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyGetMetricsRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyReestablishRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
IDSLocalMessageStateOthers
IDSLocalMessageStateWaitDequeue
IDSLocalMessageStateWaitAck
IDSLocalMessageStateAcked
siri_enabled
speech_id
language_code
activity_continuation_allowed
dictation_enabled
shared_id
previous_langauge_code
previous_output_voice
output_voice
cloud_sync_enabled
should_censor_speech
user_agent
is_location_sharing_device
notification_preview_restricted_apps
temperature_unit
logging_assistant_id
logging_shared_id
store_front_id
airplay_route_id
ek_token
user_token
is_remote_playback_device
user_assigned_name
uts_required_request_data
hasSiriEnabled
hasSpeechId
T@"NSString",&,N,V_speechId
hasLanguageCode
T@"NSString",&,N,V_languageCode
hasHostname
T@"NSString",&,N,V_hostname
hasActivityContinuationAllowed
activityContinuationAllowed
TB,N,V_activityContinuationAllowed
hasDictationEnabled
hasSharedId
sharedId
T@"NSString",&,N,V_sharedId
hasPreviousLangaugeCode
previousLangaugeCode
T@"NSString",&,N,V_previousLangaugeCode
hasPreviousOutputVoice
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_previousOutputVoice
hasOutputVoice
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_outputVoice
hasCloudSyncEnabled
hasShouldCensorSpeech
hasUserAgent
T@"NSString",&,N,V_userAgent
hasIsLocationSharingDevice
T@"NSMutableArray",&,N,V_notificationPreviewRestrictedApps
hasTemperatureUnit
T@"NSString",&,N,V_temperatureUnit
hasLoggingAssistantId
T@"NSString",&,N,V_loggingAssistantId
hasLoggingSharedId
loggingSharedId
T@"NSString",&,N,V_loggingSharedId
hasStoreFrontId
T@"NSString",&,N,V_storeFrontId
hasAirplayRouteId
T@"NSString",&,N,V_airplayRouteId
hasEkToken
T@"NSString",&,N,V_ekToken
hasUserToken
T@"NSString",&,N,V_userToken
hasIsRemotePlaybackDevice
hasUserAssignedName
T@"NSString",&,N,V_userAssignedName
hasUtsRequiredRequestData
utsRequiredRequestData
T@"_ADPBDeviceStringKeyValueDictionary",&,N,V_utsRequiredRequestData
ADDeviceSyncCommandPullGenerationsResponse.generationsByDataType
ADLocationRestrictionDidChangeNotification
ADLocationManager
-[ADLocationManager _locationManager]
-[ADLocationManager _locationManager]_block_invoke
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]
v32@?0{?=dd}8d24
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]_block_invoke
-[ADLocationManager _stopMonitoringLocation]
-[ADLocationManager _cancelLocationTimer]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]_block_invoke
-[ADLocationManager _startMonitoringLocationForGetRequestOrigin:completion:]
-[ADLocationManager _shouldSendLocationUpdate:fromLocation:forCommand:]
-[ADLocationManager _requestLocationWithBestAccuracy]
-[ADLocationManager _requestLocationWithBestAccuracy]_block_invoke
-[ADLocationManager _requestLocationForGetRequestOrigin:completion:]
-[ADLocationManager peerLocationConnection:didReceiveUnsolicitedLocation:]
-[ADLocationManager peerLocationConnection:didReceiveUnsolicitedLocation:]_block_invoke
-[ADLocationManager peerLocationConnectionSuggestsClearingCachedLocation:]
-[ADLocationManager locationManager:didUpdateLocations:]
-[ADLocationManager locationManager:didFailWithError:]
-[ADLocationManager locationManager:didChangeAuthorizationStatus:]_block_invoke
-[ADLocationManager updateWithLocation:locationStatus:]
-[ADLocationManager updateWithLocation:locationStatus:]_block_invoke
-[ADLocationManager updateLocationForCommand:completion:]_block_invoke
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]_block_invoke
Assistant Daemon requires location to handle Siri & Dictation requests
-[ADLocationManager releaseLocationInUseAssertionForReason:]
%s: over-releasing location assertion due to %@
-[ADLocationManager releaseLocationInUseAssertionForReason:]_block_invoke
T@"<ADLocationManagerDelegate>",W,N,V_delegate
needsToSendLocation
TB,N,V_needsToSendLocation
B24@?0@"<ADDeviceSyncMessageSending>"8^B16
v24@?0@"ADDeviceSyncSnapshot"8@"NSError"16
-[ADDeviceSyncSession _receiveMessage:completion:]
v16@?0@"<ADDeviceSyncMessageMutating>"8
v16@?0@"ADDeviceSyncCommandPushGenerationsRequest"8
v16@?0@"ADDeviceSyncCommandPullGenerationsRequest"8
v16@?0@"ADDeviceSyncCommandPullDeltaRequest"8
v16@?0@"ADDeviceSyncCommandPullSnapshotRequest"8
There's no supported request in incoming message.
-[ADDeviceSyncSession _handlePingWithCompletion:]
-[ADDeviceSyncSession _handlePushGenerationsByDataType:completion:]
v32@?0@"NSString"8@"NSNumber"16^B24
No data consumer for data types %@.
-[ADDeviceSyncSession _handlePullGenerationsForDataTypes:completion:]
No data provider for data types %@.
-[ADDeviceSyncSession _handlePullGenerationsForDataTypes:completion:]_block_invoke
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]_block_invoke_2
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]_block_invoke
No data provider for data type %@.
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]_block_invoke_2
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]_block_invoke
-[ADDeviceSyncSession _sendMessage:completion:]
v24@?0@"ADDeviceSyncMessage"8@"NSError"16
-[ADDeviceSyncSession _pingWithCompletion:]
-[ADDeviceSyncSession _pingWithCompletion:]_block_invoke_3
There's no reply message.
-[ADDeviceSyncSession _pingWithCompletion:]_block_invoke
The sequence of the reply message is invalid.
There's no supported response in reply message.
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]_block_invoke_2
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPushGenerationsResponse"8
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]_block_invoke_3
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullGenerationsResponse"8
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]_block_invoke_2
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullDeltaResponse"8
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]_block_invoke_3
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullSnapshotResponse"8
messageReceiver
T@"<ADDeviceSyncMessageReceiving>",R,N
ADSyncFinishedNotification
ADSyncVerificationFinishedNotification
ClientSideInitiatedSyncVerification
-[ADCommandCenter(Sync) _allAnchorsFromRequest:andResponse:]
-[ADCommandCenter(Sync) _handleValidatedSyncGetAnchorsResponse:forGetAnchors:]
-[ADCommandCenter(Sync) _appMetaDataListFromVocabSources:appIdentifyingInfoList:]
ADCommandCenterSyncAppSourcesFetching-%@
-[ADCommandCenter(Sync) _fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:]_block_invoke_2
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]
SyncAnchorsQueue
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]_block_invoke
-[ADCommandCenter(Sync) _sendSyncFinishedAndReferenceCurrentSyncPromise:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]_block_invoke_4
-[ADCommandCenter(Sync) _saSyncGetAnchorsResponse:completion:]
-[ADCommandCenter(Sync) _saSyncChunk:completion:]
-[ADCommandCenter(Sync) _saSyncChunkDenied:completion:]
-[ADCommandCenter(Sync) _saSyncChunkAccepted:completion:]
-[ADCommandCenter(Sync) _saSyncFinished:completion:]
v16@?0@"SASyncDeepSyncVerificationResult"8
-[ADCommandCenter(Sync) _saSyncClientVerify:completion:]
-[ADCommandCenter(Sync) _saSyncServerVerifyResponse:completion:]
-[ADCommandCenter(Sync) _saSyncSetDeepSyncVerificationNeeded:completion:]
-[ADCommandCenter(Sync) _prepareAndStartSyncVerification]
syncVerification
-[ADCommandCenter(Sync) _finishVerificationWithKeys:]
Safety-net end-of-session sync
-[ADCommandCenter(Sync) _sync_syncIfNeeded]
-[ADCommandCenter(Sync) _sync_assistantLoadedSyncRequest:]
requested_by_server
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]_block_invoke
v24@?0@"NSMutableArray"8@"NSMutableArray"16
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]
-[ADCommandCenter(Sync) _sync_startDeepSyncVerification]
-[ADCommandCenter(Sync) _sync_startDeepSyncVerificationForKeys:]
System
com.apple.assistant.local-request-provider
ASSISTANT_SERVICES_LOCAL_MUSIC_SUBSCRIPTION_LEASE_%@
FEMALE
MALE
-[SAStructuredDictationItem(StructuredDictation) ad_transcriptionResults]
Events
openTime
firstByteTime
meanPing
provider
packetsSent
bytesSent
bytesRetransmitted
bytesUnacked
packetsReceived
bytesReceived
duplicateBytesReceived
outOfOrderBytesReceived
sendBandwidth
tfoSynDataAcked
primarySubflowInterfaceName
subflowSwitchCount
ConnectionMethod
ConnectionFallbackFrom
ConnectionEdgeId
ConnectionEdgeType
NSPConnectionFallbackReason
TuscanyConnectionDelay
TuscanyFirstTxByteDelay
CarrierName
SignalStrengthBars
RSSI
WiFiPhyMode
WiFiChannelInfo
Captive
dnsResolutionTime
startToDNSResolution
connectionEstablishmentTime
connectionStartToEstablishmentTime
tlsHandshakeTime
connectionStartToTLSHandshake
tlsVersion
simSubscriptions
%@.%@.%@
InterfaceNetworkType
Symptoms
voiceTriggerInfo
_ADAnalyticsMetricsCreateTimingsAndEventInformationDictionaries
%@.%tu
SystemBootTime
StreamIdentifier
_ADAnalyticsMetricsGetEventInformationValue
object
T@,R,N,V_object
previousItem
T@"ADLinkedListItem",&,N,V_previousItem
nextItem
T@"ADLinkedListItem",&,N,V_nextItem
fanId
TQ,N,V_fanId
currentSpeed
Tq,N,V_currentSpeed
targetSpeed
Tq,N,V_targetSpeed
currentToken
T@"NSUUID",R,C,N,V_currentToken
speechRequestOptions
T@"AFSpeechRequestOptions",R,C,N,V_speechRequestOptions
T@?,R,C,N,V_completion
text
handoff_data
handoff_url_string
requiresUserInteraction
handoff_notification
handoff_origin_device_name
hasText
T@"NSString",&,N,V_text
hasHandoffData
handoffData
T@"NSData",&,N,V_handoffData
hasHandoffUrlString
handoffUrlString
T@"NSString",&,N,V_handoffUrlString
hasRequiresUserInteraction
TB,N,V_requiresUserInteraction
hasHandoffNotification
handoffNotification
T@"NSString",&,N,V_handoffNotification
hasHandoffOriginDeviceName
handoffOriginDeviceName
T@"NSString",&,N,V_handoffOriginDeviceName
stream_id
hasStreamId
streamId
T@"NSString",&,N,V_streamId
interface_name
tfo_syn_data_acked
hasInterfaceName
interfaceName
T@"NSString",&,N,V_interfaceName
hasTfoSynDataAcked
TI,N,V_tfoSynDataAcked
ADServiceError
Domains
First Unlock Restricted Commands
Lock Restricted Commands
Control Center Lock Restricted Commands
Managed Storage Domains
Sync Keys
managedStorageDomains
T@"NSSet",C,N,V_managedStorageDomains
firstUnlockRestrictedCommands
T@"NSArray",C,N,V_firstUnlockRestrictedCommands
lockRestrictedCommands
T@"NSArray",C,N,V_lockRestrictedCommands
controlCenterLockRestrictedCommands
T@"NSArray",C,N,V_controlCenterLockRestrictedCommands
T@"<ADServiceDelegate>",W,N,V_delegate
-[AFSiriRequest(ADAlarmRequestHandler) _ad_handleAlarmRequestWithCompletionHandler:]
v24@?0@"STAlarm"8@"NSError"16
+[ADNetworkAnalyzer performAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:]
+[ADNetworkAnalyzer performRequestAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:]
+[ADNetworkAnalyzer performRetrySuccessAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:]
com.apple.siri.analyzer
+[ADNetworkAnalyzer _sendAnalysisMessageForURL:ifaceIndex:bufSize:userVisibleFailure:wwanPerferred:successfulRetry:]_block_invoke
message
analyze
send buffer
interface
request failure
wwan preferred
successful retry
-[ADAudioPlaybackService requestLifecycleObserverRequestWillBegin:origin:client:]
-[ADAudioPlaybackService _prewarmAudioPlaybackRequest:completion:]
-[ADAudioPlaybackService _startAudioPlaybackRequest:options:completion:]
v32@?0@"AFAudioPlaybackRequest"8@"ADAudioPlaybackSession"16^B24
-[ADAudioPlaybackService audioPlaybackSessionWillStart:]
-[ADAudioPlaybackService audioPlaybackSessionDidStart:]
-[ADAudioPlaybackService audioPlaybackSessionDidNotStart:error:]
-[ADAudioPlaybackService audioPlaybackSessionDidStop:error:]
-[ADAudioPlaybackService audioPlaybackSessionDidStop:error:]_block_invoke
-[ADAudioPlaybackService audioStateAnnouncer:didChangeAudioStateFrom:to:]_block_invoke
-[ADAudioPlaybackService memoryPressureObserver:didChangeFromCondition:toCondition:]_block_invoke
AssistantDomains
AssistantFirstUnlockRestrictedDomains
AssistantLockRestrictedDomains
AssistantControlCenterLockRestrictedDomains
AssistantManagedStorageDomains
AssistantClearsDomainObjects
AssistantMaintenance
-[ADBundleService _parseInfoDictionary:]
v32@?0@"SAGenericCommand"8@"NSArray"16@"NSError"24
-[ADBundleService clearDomainObjects]
v24@?0@"ADSyncChunkInfo"8@?<v@?B>16
-[ADBundleService resetExternalResources]
-[ADBundleService resetExternalResources]_block_invoke
Path
Clears Domain Objects
hasSuccess
TB,N,V_success
-[ADIntentVocabularyUpdateConnection initWithBundleID:path:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke_2
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke
Synapse.%@#%@
-[ADIntentVocabularyUpdateConnection _triggerUserVocabularySyncAttributingApp:vocabType:]
com.apple.assistant.app_vocabulary
-[ADIntentVocabularyUpdateConnection askToSyncSlot:]_block_invoke
-[ADIntentVocabularyUpdateConnection deleteEverything]
-[ADIntentVocabularyUpdateConnection deleteEverything]_block_invoke
RESET
-[ADIntentVocabularyUpdateConnection requestSiriAuthorization:]
Siri diagnostics queue
-[AFDiagnostics logConnectionStart]
@"AWDSiriServerConnectionStart"8@?0
-[AFDiagnostics logConnectionOpenWithConnectionType:]
-[AFDiagnostics logConnectionOpenWithConnectionType:]_block_invoke_2
@"AWDSiriServerConnectionOpen"8@?0
-[AFDiagnostics logConnectionFailedWithError:connectionType:]
@"AWDSiriServerConnectionFailed"8@?0
-[AFDiagnostics logVoiceRecordingStart]
@"AWDSiriVoiceRecordingStart"8@?0
-[AFDiagnostics logVoiceRecordingEnd]
-[AFDiagnostics logVoiceRecordingEnd]_block_invoke_2
@"AWDSiriVoiceRecordingEnd"8@?0
-[AFDiagnostics logVoiceSendStart]
@"AWDSiriVoiceSendStart"8@?0
-[AFDiagnostics logVoiceSendEnd]
-[AFDiagnostics logVoiceSendEnd]_block_invoke_2
@"AWDSiriVoiceSendEnd"8@?0
-[AFDiagnostics logNetworkAnalyzeRunWithResults:]
@"AWDSiriNetworkAnalyzerRun"8@?0
-[AFDiagnostics logSpeechRecognized]
-[AFDiagnostics logSpeechRecognized]_block_invoke_2
-[AFDiagnostics logSpeechRecognized]_block_invoke
@"AWDSiriSpeechRecognized"8@?0
-[AFDiagnostics _submitMetricWithIdentifier:generation:]
-[AFDiagnostics _submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:]_block_invoke
@8@?0
T@"NSObject<OS_dispatch_queue>",R,N,G_queue,V_queue
serverConnection
T@"AWDServerConnection",R,N,G_serverConnection,V_serverConnection
connectionStartTime
T@"NSNumber",&,N,G_connectionStartTime,S_setConnectionStartTime:,V_connectionStartTime
voiceRecordingStartTime
T@"NSNumber",&,N,G_voiceRecordingStartTime,S_setVoiceRecordingStartTime:,V_voiceRecordingStartTime
voiceRecordingEndTime
T@"NSNumber",&,N,G_voiceRecordingEndTime,S_setVoiceRecordingEndTime:,V_voiceRecordingEndTime
voiceSendStartTime
T@"NSNumber",&,N,G_voiceSendStartTime,S_setVoiceSendStartTime:,V_voiceSendStartTime
voiceSendEndTime
T@"NSNumber",&,N,G_voiceSendEndTime,S_setVoiceSendEndTime:,V_voiceSendEndTime
forUserRequest
TB,N,GisForUserRequest,V_forUserRequest
analyzedSuccessfulRetry
TB,N,V_analyzedSuccessfulRetry
TB,N,V_wwanPreferred
connectionInterface
T@"NSNumber",C,N,V_connectionInterface
sendBufferBytesRemaining
T@"NSNumber",C,N,V_sendBufferBytesRemaining
knownURLLoadDuration
T@"NSNumber",C,N,V_knownURLLoadDuration
siriURLLoadDuration
T@"NSNumber",C,N,V_siriURLLoadDuration
siriSaltURLLoadDuration
T@"NSNumber",C,N,V_siriSaltURLLoadDuration
gatewayStatus
Tq,N,V_gatewayStatus
gatewayPingDuration
T@"NSNumber",C,N,V_gatewayPingDuration
gatewayPingsSent
T@"NSNumber",C,N,V_gatewayPingsSent
gatewayPingsDropped
T@"NSNumber",C,N,V_gatewayPingsDropped
ADDeviceSyncCommandPullGenerationsRequest.dataTypes
dataTypes = %@
dataTypes
T@"NSArray",R,C,N,V_dataTypes
-[SAIntentGroupHandleIntent(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]
v24@?0@"INImage"8@?<v@?@"NSError">16
-[SAIntentGroupHandleIntent(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]_block_invoke_2
v24@?0@"INImage"8@"NSError"16
ADDeviceSyncItem.UUID
ADDeviceSyncItem.properties
UUID = %@
properties = %@
UUID
T@"NSUUID",R,C,N,V_UUID
properties
T@"NSDictionary",R,C,N,V_properties
com.apple.siri.uiservice.%p
v16@?0@"AceObject<SAAceCommand>"8
-[ADUIService handleCommand:forDomain:reply:]_block_invoke
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleTimerRequestWithCompletionHandler:]
v24@?0@"STTimer"8@"NSError"16
v16@?0@"<ADTimerStoring>"8
ADSharedDataDidChangeNotification
ADSharedDataDidChangePreviousLanguageCodeKey
ADSharedDataDidChangePreviousOutputVoiceKey
ADSharedDataDidChangePeerSetKey
-[ADCommandCenter(SharedDataClient) _updateSharedDataWithPairedPeerData:]
v20@?0B8@"NSString"12
-[ADCommandCenter(SharedDataClient) updateSharedDataFromPeerUseCache:completion:]
-[ADCommandCenter(SharedDataClient) sharedDataConnection:didUpdateSharedData:]
-[ADCommandCenter(SharedDataClient) listenForSharedDataFromCloud]
v24@?0@"ADPeerInfo"8@?<v@?@"ADSharedData">16
-[ADCommandCenter(SharedDataClient) listenForSharedDataFromCloud]_block_invoke
v24@?0@"ADSharedData"8@"ADPeerInfo"16
-[ADCommandCenter(SharedDataClient) _personalDomainsEnabledDidChangeNotification:]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCompanionWithCompletion:]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCompanionWithCompletion:]_block_invoke
-[ADCommandCenter(SharedDataClient) _resetPeerAccountSettingsWithSharedData:]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCloudPeers:completion:]
-[ADCommandCenter(SharedDataClient) _updateSharedDataFromPeers:completion:]
-[ADCommandCenter(SharedDataClient) _updateSharedDataFromPeers:completion:]_block_invoke
-[ADCommandCenter(SharedDataClient) updateSharedDataWithCloudData:fromPeer:]
-[ADCommandCenter(SharedDataClient) updateSharedDataWithCloudData:fromPeer:]_block_invoke
-[ADCommandCenter(SharedDataClient) sendGizmoData]
-[ADCommandCenter(SharedDataRemote) getSharedDataForPeer:]_block_invoke
ExtensionLoadType
ExtensionService
ADExtensionServiceQueue
-[ADExtensionService handleCommand:forDomain:reply:]_block_invoke
%@-%@-%@
v24@?0@"NSString"8@?<v@?@"INIntentResponse"@"NSError">16
v16@?0@"INImage"8
v24@?0@"INCExtensionProxy"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
Bundle
Extension
Warm
Cold
-[ADExtensionService _updatedEventContextWithExtensionLoadType:wasPrewarmed:]
-[ADExtensionService _connectionForIntent:]
-[ADExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completion:]
no launchId
no extensionBundleId
-[ADExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completion:]_block_invoke
extensionServiceDelegate
T@"<ADExtensionServiceDelegate>",W,N,V_extensionServiceDelegate
endpointMode
startWaitTime
interspeechWaitTime
endWaitTime
T@"<ADPassthroughEndpointerDelegate>",W,N,V_delegate
functionalEndpointer
T@"<Endpointer>",&,N,V_functionalEndpointer
SystemService
-[ADSystemService lockRestrictedCommands]
MessagesAreAvailableOnLockScreen
com.apple.siri.calendar.Error
-[ADOfflineMetricsMap fetchNextMetricsUsingBlock:]
-[ADOfflineMetricsMap insertMetrics:withOfflineIdentifier:]
-[ADOfflineMetricsMap deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsMap deleteAllMetrics]
-[ADOfflineMetricsMap _offlineIdentifiers]
_ADOfflineMetricsMapGetOfflineIdentifiers
plist
com.apple.siri.bksopenapplication.ErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADSiriAppLaunchRequestHandler.m
[request isKindOfClass:[ADAcePassthroughSiriRequest class]]
v28@?0@"AFSiriResponse"8B16@"NSError"20
T@"<ADSiriAppLaunchRequestHandlerDelegate>",W,N,V_delegate
-[SAAppsGetRestrictedApps(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
hidden
v24@?0@"LSApplicationProxy"8^B16
-[SAAppsAppSearch(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
INAlternativeAppNames
INAlternativeAppName
ADDeviceSyncIncrementalChange.generation
ADDeviceSyncIncrementalChange.date
ADDeviceSyncIncrementalChange.insertedOrUpdatedItems
ADDeviceSyncIncrementalChange.deletedItemUUIDs
insertedOrUpdatedItems = %@
deletedItemUUIDs = %@
insertedOrUpdatedItems
T@"NSArray",R,C,N,V_insertedOrUpdatedItems
deletedItemUUIDs
T@"NSArray",R,C,N,V_deletedItemUUIDs
com.apple.private.alloy.siri.location
timerManagerProxyForIntentSupport
T@"<MTTimerManagerIntentSupport>",R,N
ADHomeKitServiceTargetQueue
v24@?0@"NSError"8@"NSDictionary"16
DictationConnection
ADDictationConnection
Dictation speechRecordingDidBegin
Dictation speechRecordingDidEnd
Dictation speechRecordingDidCancel
dictation audio recording was cancelled
-[ADDictationConnection adSpeechRecordingDidCancelWithSessionUUID:]_block_invoke
Dictation speechRecordingDidFail
-[ADDictationConnection adSpeechRecordingDidFail:sessionUUID:]_block_invoke
dictation audio recording failed
dictation audio recording failed and an audio file is not being written
-[ADDictationConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
dictation speech was recognized remotely
dictation speech was recognized remotely and we're not waiting for structured results
voice search final result was returned
voice search final result result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecordingDidRecognizePhrases:sessionUUID:refId:]
dictation speech was recognized locally
dictation speech was recognized locally and we're not waiting for search results or structured results
dictation structured result was returned
dictation structured result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecognitionDidFail:sessionUUID:]
dictation speech recognition failed
audio file finished writing; file handle: %@; error: %@
dictation is starting
Person
Text
Dictation start
mode
-[ADDictationConnection _dictationWillStartWithLanguageCode:options:speechOptions:]
-[ADDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:]_block_invoke
dictation is canceling
dictation is stopping
Dictation preheat
Dictation preheatWithRecordDeviceIdentifier
Dictation endSession
-[ADDictationConnection startRecordedAudioDictationWithOptions:language:narrowband:]
recorded audio dictation is starting
recorded audio dication is starting
-[ADDictationConnection _startDictationWithURL:isNarrowBand:language:options:]
Dictation startWithURL
file-based dictation is starting
-[ADDictationConnection _localSpeechRecognizer]
-[ADDictationConnection localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:]
-[ADDictationConnection listener:shouldAcceptNewConnection:]
-[ADDictationConnection _continuePendingSpeechRequestFromTimestamp:]
CheckPrerecordedConnectionAccess
defaultSessionHasResults
timerFiredAndSomeSessionHadResults
sessionHasHigherUsefulnessScore
onlySessionHasResults
sessionCannotHandleRequest
arbiterReusedPreviousWinner
-[ADSessionManager _startSessions:]
-[ADSessionManager _startSession:makeQuiet:]
-[ADSessionManager _resetSessionsAndMakeQuiet:]
-[ADSessionManager resetSessionsAtNextRequestBoundary]
-[ADSessionManager endRetryableRequestForCommand:]
-[ADSessionManager _sharedAssistantdIdentifierDidChange:]
-[ADSessionManager _sharedAssistantdIdentifierDidChange:]_block_invoke
-[ADSessionManager _enabledBitsChanged:]
-[ADSessionManager _languageCodeDidChange:]
-[ADSessionManager _languageCodeDidChange:]_block_invoke
-[ADSessionManager _powerChangedMessageType:notificationID:]
will sleep
can sleep
-[ADSessionManager _registerForSleepNotification]
-[ADSessionManager _unregisterForSleepNotification]
-[ADSessionManager _evaluateResultObjects]
-[ADSessionManager _resultObjectsHoldTime]
-[ADSessionManager _resultObjectsTimerFired:]
-[ADSessionManager _queueResultObject:forSession:]
-[ADSessionManager _isDestructive:]
-[ADSessionManager _cancelOtherSessionRequests:forRefId:]
-[ADSessionManager _pickDefaultWinnerWithDroppingSession:]
-[ADSessionManager adviseSessionArbiterToContinueWithPreviousWinner:]
-[ADSessionManager assistantSessionWillStartConnection:]
-[ADSessionManager assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:]
-[ADSessionManager assistantSession:receivedCommand:]
Session Lost
-[ADSessionManager assistantSession:cannotHandleRequest:error:]
-[ADSessionManager assistantSession:receivedError:isRetryableError:]
-[ADSessionManager assistantSessionShouldLogVisibleRequestFailure:forError:]
-[ADSessionManager assistantSessionConnectionDidReset:]
-[ADSessionManager assistantSessionShouldAttemptRetry:]
-[ADSessionManager assistantSession:didChangeRequestIdFrom:toId:]
-[ADSessionManager assistantSessionDidCreateAssistant:]
-[ADSessionManager assistantSession:willRetryOnError:]
-[ADSessionManager assistantSession:beginSessionRetryPreferringWWAN:]
-[ADSessionManager _convertEmbeddedRequestIds:originalCommand:session:]
-[ADSessionManager handleCommand:]
-[ADSessionManager delegateDidHandleCommand:]
-[ADSessionManager _sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:]
-[ADSessionManager setHasActiveRequest:]
originalRequestId
%@SessionProxyId
-[ADSessionManager setRequestId:]
-[ADSessionManager _logMetricsForSessionFailure:withError:completion:]_block_invoke
-[ADSessionManager _hasAtleastOneActiveSessionBesides:]
-[ADSessionManager _canStartLocalSession]
-[ADSessionManager _removeKeyFromProxyMaps:forSession:]
-[ADSessionManager _resetWinningState]
-[ADSessionManager _logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:]
remoteSessionScore
localSessionScore
-[ADSessionManager speechRecognized:]
T@"<ADSessionManagerDelegate>",W,N,V_delegate
-[ADDictationSession dealloc]
-[ADDictationSession _setSpeechRecognitionTransactionState:]
-[ADDictationSession _setAudioFileIOTransactionState:]
T@"NSString",R,C,N,V_uuid
TQ,R,N,V_timestamp
T@"NSString",R,C,N,V_languageCode
options
T@"AFDictationOptions",R,N,V_options
T@"AFSpeechRequestOptions",R,N,V_speechRequestOptions
speechRecognitionTransactionState
Tq,R,N,V_speechRecognitionTransactionState
audioFileIOTransactionState
Tq,R,N,V_audioFileIOTransactionState
ADAssistantDataManageriTunesStoreFrontIdentifierDidChangeNotification
%@-%zd-%zd-%zd
ADAssistantDataManager
-[ADAssistantDataManager init]_block_invoke_8
-[ADAssistantDataManager requestAssistantDataUpdate]
-[ADAssistantDataManager profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
-[ADAssistantDataManager addressBookManagerDidUpdateData:meCards:sources:]_block_invoke
-[ADAssistantDataManager contextCollector:didChangeDisplayScale:]
-[ADAssistantDataManager _voiceAssetsUpdated:]
-[ADAssistantDataManager _currentLocaleDidChange:]
-[ADAssistantDataManager _locationRestrictionDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]_block_invoke_2
-[ADAssistantDataManager _systemTimeZoneDidChange:]
-[ADAssistantDataManager _outputVoiceDidChange:]
-[ADAssistantDataManager _supportsTelephonyCallsDidChange:]
-[ADAssistantDataManager _countryCodeDidChange:]
-[ADAssistantDataManager _httThresholdDidChange:]
-[ADAssistantDataManager _censorSpeechDidChange:]
-[ADAssistantDataManager _generateAssistantData]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADAssistantDataManager.m
called from non-main thread
-[ADAssistantDataManager _onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:]
-[ADAssistantDataManager _updateVoice:]_block_invoke_2
-[ADAssistantDataManager _updateVoice:]_block_invoke
v24@?0@"VSVoiceAsset"8@?<v@?B>16
v16@?0@"VSVoiceAsset"8
-[ADAssistantDataManager _updateItunesStoreIdentifier:]
-[ADAssistantDataManager _updateItunesStoreIdentifier:]_block_invoke
-[ADAssistantDataManager _updateVoiceOverStatus:]
addressBookManager
T@"ADAddressBookManager",R,N,G_addressBookManager,V_addressBookManager
voiceOverIsActive
TB,N,V_voiceOverIsActive
SSDeviceStoreFrontChangedNotification
initSSDeviceStoreFrontChangedNotification
constant
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
StoreServicesLibrary
SSAccountStoreChangedNotification
initSSAccountStoreChangedNotification
SSAccountStore
initSSAccountStore
classSSAccountStore
SSDevice
initSSDevice
classSSDevice
-[AFRequestInfo(SiriAce) _ad_requestCommandWithRequestHelper:]
-[AFRequestInfo(SiriAce) _ad_localRequestCommandWithRequestHelper:]
-[AceObject(AFRequestInfo) _ad_setPayloadOnRequestInfo:]
_ad_voiceInfo
T@"AFVoiceInfo",&,N,S_ad_setVoiceInfo:
_ad_data
T@"ADSharedData",C,N,S_ad_setData:
_ad_requestInfo
T@"AFRequestInfo",C,N,S_ad_setRequestInfo:
ADPeerCloudServiceActiveAccountStatusDidChangeNotification
outstandingResponses
Tq,N,V_outstandingResponses
responseType
TS,N,V_responseType
responses
T@"NSMutableDictionary",&,N,V_responses
timeoutTimer
T@"AFWatchdogTimer",&,N,V_timeoutTimer
peer
T@"ADPeerInfo",&,N,V_peer
proto
T@"PBCodable",&,N,V_proto
error
T@"NSError",&,N,V_error
ADPeerCloudService
com.apple.private.alloy.siri.icloud
-[ADPeerCloudService _init]_block_invoke
-[ADPeerCloudService _sendProto:ofType:originalRequestId:toPeers:responseType:completion:]
-[ADPeerCloudService _updateActiveAccountState]
-[ADPeerCloudService _airplayRouteDidChange:]
-[ADPeerCloudService _updateAirPlayRouteIdentifier]
-[ADPeerCloudService _updateAirPlayRouteIdentifier]_block_invoke_3
v16@?0@"NSString"8
-[ADPeerCloudService sendSharedData:toPeers:]
-[ADPeerCloudService setSharedDataObserver:withHandle:]
-[ADPeerCloudService _notifyObserversOfSharedData:fromPeer:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]_block_invoke_2
v24@?0@"NSSet"8@"NSError"16
-[ADPeerCloudService _notifyObserversOfSharedDataRequestFromPeer:completion:]
-[ADPeerCloudService _startRemoteRequest:onPeers:completion:]
-[ADPeerCloudService _startRemoteRequest:onPeers:completion:]_block_invoke_2
-[ADPeerCloudService startRemoteExecution:onPeer:completion:]
-[ADPeerCloudService startRemoteSerialzedCommandExecution:onPeer:completion:]
-[ADPeerCloudService startRemoteSerialzedCommandExecution:onPeer:completion:]_block_invoke_2
-[ADPeerCloudService startListeningForRemote]
v32@?0@"AFRequestInfo"8@"ADPeerInfo"16@?<v@?B>24
-[ADPeerCloudService startListeningForRemote]_block_invoke
-[ADPeerCloudService _notifyObserversOfRequestInfo:fromPeer:completion:]
-[ADPeerCloudService _handleRemoteExecution:peer:completion:]
-[ADPeerCloudService _handleRemoteExecution:peer:completion:]_block_invoke
-[ADPeerCloudService service:account:incomingUnhandledProtobuf:fromID:context:]
v28@?0@"PBCodable"8S16@"NSError"20
-[ADPeerCloudService _handleMessageResponse:ofType:orError:fromID:handler:]
-[ADPeerCloudService service:activeAccountsChanged:]
-[ADPeerCloudService service:devicesChanged:]
-[ADPeerCloudService service:devicesChanged:]_block_invoke
-[PBCodable(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceSetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceGetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceStartRemoteRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceExecuteOnRemoteRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
Myriad Service Queue
-[ADMyriadService setMyriadDecisionResult:]
-[ADMyriadService _setStereoPartnerIdentifier:]
-[ADMyriadService _setLastTimeStereoPartnerWon:]
-[ADMyriadService _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
-[ADMyriadService _handleRequest:fromDeviceWithIdentifier:completion:]
-[ADMyriadService _handleLastWinRequest:completion:]
com.apple.private.alloy.siri.device
-[ADCommandCenter(Context) _context_rollbackClearContext]
-[ADCommandCenter(Context) _context_clearContext]
-[ADCommandCenter(Context) _context_setAlertContextDirty]
-[ADCommandCenter(Context) _context_updateContext]
-[ADCommandCenter(Context) _setAlertContext]
v16@?0@?<v@?@"NSArray">8
v16@?0@?<v@?@"AFClockAlarmSnapshot"@"AFClockTimerSnapshot">8
v16@?0@"SASetAlertContext"8
-[ADCommandCenter(Context) _setBackgroundContext]
v16@?0@"SASetBackgroundContext"8
-[ADCommandCenter(Context) _setSyncContext]
sync_promise
-[ADCommandCenter(Context) _setRestrictedAppContext]
-[ADCommandCenter(Context) _setRestrictedAppContext]_block_invoke
-[ADCommandCenter(Context) _context_setSTApplicationContext:]
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]
com.apple.mobilePhone
com.apple.ace.phone
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]_block_invoke
com.apple.SiriViewService
-[ADCommandCenter(Context) _context_willSetApplicationContextWithRefId:]
-[ADCommandCenter(Context) _context_setApplicationContext:]
-[ADCommandCenter(Context) _context_setApplicationContextForApplicationInfos:withRefId:]
v16@?0@"SASetApplicationContext"8
-[ADCommandCenter(Context) _context_reset]
gender
hasGender
Ti,N,V_gender
UNKNOWN
(unknown: %i)
_NULL_STORE
-[ADManagedStorageConnection setKnowledgeStoreData:forKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection getKnowledgeStoreDataForKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection resetKnowledgeStoreWithName:completion:]_block_invoke
_ADGlobalKnowledgeStoreQueue_block_invoke
CKGenericCondition
Unable to generate settings request representation for %@
-[AFGetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsGetBooleanResponseRepresentation]
-[AFSetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsResponseRepresentationForSetValueCommand:]
com.apple.mobiletimer.IntentsExtension
localExtensionIdentifier
com.apple.assistant.vibration-manager
com.apple.springboard.ring-vibrate.changed
com.apple.springboard.silent-vibrate.changed
-[ADVibrationManager _fetchRingVibrationValue]
ring-vibrate
-[ADVibrationManager _fetchSilentVibrationValue]
silent-vibrate
-[ADVibrationManager handleRingVibrationValueChange]
-[ADVibrationManager handleSilentVibrationValueChange]
mobile
_fetchVibrationState
com.apple.assistantd.dictation.session-controller
-[ADDictationSessionTracker startSessionForReason:languageCode:options:speechRequestOptions:]_block_invoke
-[ADDictationSessionTracker stopSessionForReason:]_block_invoke
-[ADDictationSessionTracker notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:]_block_invoke
-[ADDictationSessionTracker notifyAudioFileIOTransactionStoppedForReason:sessionUUID:]_block_invoke
-[ADDictationSessionTracker _addSession:]
Trying to retrieve the active session, but found %tu active sessions.
-[ADDictationSessionTracker _beginSpeechRecognitionTransactionForReason:session:]
Trying to begin a dictation transcription transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation transcription transaction (reason: %@), but the transaction state is %zd.
-[ADDictationSessionTracker _beginAudioFileIOTransactionForReason:session:]
Trying to begin a dictation audio file transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation audio file transaction (reason: %@), but the transaction state is %zd.
-[ADDictationSessionTracker _endSpeechRecognitionTransactionForReason:session:]
Trying to end a dictation transcription transaction (reason: %@), but the transaction state is stopped
-[ADDictationSessionTracker _endAudioFileIOTransactionForReason:session:]
Trying to end a dictation audio file transaction (reason: %@), but the transaction state is stopped
com.apple.homekit.name
com.apple.siri.applications
com.apple.siri.appIntentSupportPolicyAndVocab
com.apple.siri.client.state.DynamiteClientState
com.apple.siri.appIntentSupportPolicyAndVocab.nano
com.apple.siri.surfstatus
com.apple.siri.parsecContext
com.apple.siri.voice
com.apple.siri.voice.resource
com.apple.icloud.fmip
com.apple.siri.ParsecSubscriptionServiceSupport
com.apple.geoservices.siri_data_changed
com.apple.aps.assistantd.fmip
com.apple.icloud.fmip.voiceassistantsync
ADSetSyncNeededFlagForReason
locale_change
com.apple.siri.calendar.systemsetting
com.apple.assistant.sync_homekit_now
siri_kit_app_vocabulary
dynamite_token_change
com.apple.siri.corrections
com.apple.maps
surf_status_change
parsec_context_change
voice_assets
subcscirption_status
isPlaceholder
ADSyncNotificationShouldBeFilteredForReason
isForcedUpdate
updated
removed
Correction:
B24@?0r*8@"NSObject<OS_xpc_object>"16
B24@?0Q8@"NSObject<OS_xpc_object>"16
ADFMIPListener
-[ADFMIPListener connection:didReceivePublicToken:]
-[ADFMIPListener connection:didReceiveIncomingMessage:]
%@%s
.siri_data_changed
CKPersistentStorageKeysAndValuesUpdated.
synched
CKPersistentStorageKeysRemoved.
AppleDatePreferencesChangedNotification
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
MPStoreClientTokenDidChangeNotification
com.apple.assistant.siri_settings_did_change
siri_settings_did_change
__ABDataBaseChangedByOtherProcessNotification
ABDatabaseChangedExternallyNotificationPriv
ABDistributedDatabaseChangedNotificationPriv
PKPeerPaymentRegistrationStatusChangedNotification
com.apple.parsecd.bag
com.apple.VideoSubscriberAccount.DidRegisterSubscription
/var/mobile/Library/Assistant/sync_timestamp
/var/mobile/Library/Assistant/session_did_finish_timestamp
-[ADSettingsService _getVoiceOver:completion:]
-[ADSettingsService _setVoiceOver:completion:]
B8@?0
-[ADSettingsService _setBoolSetting:currentValueBlock:setValueBlock:completion:]
Dry Run
%@ {request = %@, options = %@, player = %@}
-[ADAudioPlaybackSession _prepareWithError:]
Failed to initialize AVAudioPlayer.
Failed to prepare to play AVAudioPlayer.
-[ADAudioPlaybackSession _startWithCompletion:]
Attempted to start audio playback session when it is already active.
Attempted to start audio playback session when AVAudioPlayer is already playing.
Failed to play AVAudioPlayer.
-[ADAudioPlaybackSession _stop:]
Stopped playback of AVAudioPlayer.
-[ADAudioPlaybackSession _stop:]_block_invoke
-[ADAudioPlaybackSession _beginInterruption]
-[ADAudioPlaybackSession _endInterruption:]
-[ADAudioPlaybackSession _willStartWithCompletion:]
-[ADAudioPlaybackSession _didStart]
-[ADAudioPlaybackSession _didNotStartWithError:]
-[ADAudioPlaybackSession _didStopWithError:]
-[ADAudioPlaybackSession audioPlayerDidFinishPlaying:successfully:]
-[ADAudioPlaybackSession audioPlayerDecodeErrorDidOccur:error:]
T@"AFAudioPlaybackRequest",R,C,N,V_request
TQ,R,N,V_options
T@"<ADAudioPlaybackSessionDelegate>",W,N,V_delegate
-[ADSettingsClient fetchSupportedLanguagesWithReply:]
v16@?0@"AFPreferences"8
-[ADSettingsClient setDictationEnabled:]_block_invoke_2
-[ADSettingsClient _killDaemon]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]_block_invoke
v16@?0@"NSNotification"8
-[ADSettingsClient _setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:]_block_invoke
-[ADSettingsClient disableAndDeleteCloudSyncWithCompletion:]
language
v16@?0@"AFExperimentContext"8
com.apple.assistant.settings-client.connected-bluetooth-devices
com.apple.assistant.settings-client.paired-bluetooth-devices
v16@?0@"CMActivity"8
_motionActivity
T@"CMActivity",C,N,S_setMotionActivity:,V_motionActivity
com.apple.siri.AlarmStore
-[SABaseClientBoundCommand(ADExtensionService) ad_sendIntent:toExtensionProxy:onQueue:completion:]
%@-%@
-[ADSyncVerificationHelper handleSyncChunkInfo:withSyncInfo:completion:]
%lld
coded_location
hasCodedLocation
codedLocation
T@"NSData",&,N,V_codedLocation
ADAudioFileWriterErrorDomain
ADAudioFileWriterExtAudioFileErrorDomain
SavedAudioFile
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1737.164/ADAudioFileWriter.m
type != AFAudioFileTypeNone
AudioFileWriterQueue
-[ADAudioFileWriter _initWithType:pathGenerator:xorFileHandle:priority:]_block_invoke
-[ADAudioFileWriter _close]
-[ADAudioFileWriter _delete]
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]
AudioFile Already configured
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]_block_invoke
-[ADAudioFileWriter appendAudioData:]_block_invoke
-[ADAudioFileWriter flushWithCompletion:]_block_invoke
_AudioStreamBasicDescriptionForAFAudioFileType
ADSecurityServiceEncryptionKeyDidChangeNotification
com.apple.assistant.security.service.procedure
com.apple.assistant.security.service.keychain
com.apple.assistant.security.service.callback
v32@?0@"NSData"8@"NSData"16@"NSError"24
v32@?0@"NSString"8@"NSData"16^B24
-[ADSecurityService _accountDidChange:]
-[ADSiriActivationHandlerCoreSpeech handleContext:completion:]_block_invoke
v16@?0@"<AFSiriActivationResultMutating>"8
-[ADSiriActivationHandlerCoreSpeech handleContext:completion:]
com.apple.assistant.device-sync.data-type.alarm
com.apple.assistant.device-sync.data-type.timer
IODeviceTree:/
IOPlatformSerialNumber
IOPlatformUUID
IOPower:/
Gq3489ugfi
Fyp98tpgj
kbjfrfpoJU
board-id
product-name
kern.osversion
kern.osrevision
IODeviceTree:/options
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:MLB
oycqAZloTNDm
abKPld1EcMni
IOEthernetInterface
IOPrimaryInterface
IOPropertyMatch
IOService
IOMACAddress
ADSyncBlacklist
SiriHelper
ADExtensionService
ADHomeInfoManager
HMHomeManagerDelegate
NSObject
HMUserDelegatePrivate
ADHomeInfo
ADSpeechCapturingContext
ADCompanionRoutingService
ADBulletinBoardProvider
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
AFDictationService
AFSettingsService
ADIntentPreferencesAndVocabularyUpdateService
INVocabularyUpdateService
AFManagedStorageService
ADDaemon
NSXPCListenerDelegate
PSYSyncCoordinatorDelegate
_ADPBDeviceGetDataRequest
NSCopying
_ADPBProxyGetMetricsResponse
_ADPBDeviceExecuteOnRemoteResponse
ADPeerLocationConnection
ADPeerConnectionDelegate
ADPeerLocationPolicyDelegate
ADSharedDataService
ADSiriUtilities
ADRecordingInfo
ADTimerTransformer
ADAceRequestTransformer
ADAceResponseTransformer
ADSharedData
ADSessionLocalConnection
ADRemoteRequestHelper
ADBulletinBoardProviderDataSource
ADDeviceSyncSnapshot
NSSecureCoding
NSCoding
_ADDeviceSyncSnapshotMutation
ADDeviceSyncSnapshotMutating
ADDeviceSyncSnapshotMutability
ADRemoteTimerManager
AFClockItemStorageDelegate
ASXSignatureExtracting
ADAcousticFingerprinter
AFProviderService
AFProviderServiceDelegate
ADServiceConnection
ADServiceConnectionProviderServiceDelegate
ADDeviceSyncCoordinator
ADDeviceSyncMessagingServiceDelegate
ADDeviceSyncDataProviderDelegate
ADPeerConnection
IDSServiceDelegate
AceObject
NSMutableCopying
ADSessionLocalServer
ADSessionLocalConnectionDelegate
ADDeviceSyncCommandPushGenerationsResponse
_ADDeviceSyncCommandPushGenerationsResponseMutation
ADDeviceSyncCommandPushGenerationsResponseMutating
ADDeviceSyncCommandPushGenerationsResponseMutability
ADVolumeService
ADAVSystemControllerLifecycleObserver
AFInvalidating
Daemon
ADExtension
ADExperimentManager
ADDeviceSyncTimerProvider
AFClockTimerListening
ADDeviceSyncDataProviding
ServiceMaintenance
ADDeviceSyncMessage
_ADDeviceSyncMessageMutation
ADDeviceSyncMessageMutating
ADDeviceSyncMessageMutability
AcousticId
ADDeviceSyncMessageSendingContext
ADPreferences
Punchouts
DeepSyncVerificationServiceProtocol
ADSyncDeepVerificationManager
AFAWDSiriRequestRecord
ADClientLiteListener
ADClientLite
AFClientLiteRemoteCommandHandling
ADCommandCenterRequestDelegate
ADClientLiteWorkItem
ADDeviceSyncCommandPullSnapshotRequest
_ADDeviceSyncCommandPullSnapshotRequestMutation
ADDeviceSyncCommandPullSnapshotRequestMutating
ADDeviceSyncCommandPullSnapshotRequestMutability
ADPeerInfo
ADAVSystemControllerLifecycleManager
ADSiriRequestSucceededResponseTransformer
ADDeviceSyncCommandPushGenerationsRequest
_ADDeviceSyncCommandPushGenerationsRequestMutation
ADDeviceSyncCommandPushGenerationsRequestMutating
ADDeviceSyncCommandPushGenerationsRequestMutability
AFAWDSiriSession
SAClientBoundCommand
SAAceCommand
SAAceSerializable
SAAceReferable
SAServerBoundCommand
ADCommandCenter
ADSessionManagerDelegate
ADSpeechManagerDelegate
ADLocationManagerDelegate
ADUIServiceDelegate
ADExtensionServiceDelegate
ADAudioPlaybackServiceDelegate
ADCallObserverDelegate
MTTimerIntentSupport
ADCoreSpeechService
ADDeviceSyncCommandPullSnapshotResponse
_ADDeviceSyncCommandPullSnapshotResponseMutation
ADDeviceSyncCommandPullSnapshotResponseMutating
ADDeviceSyncCommandPullSnapshotResponseMutability
ADAceResponseAdditions
ADAccount
SharedData
ConnectionPolicy
RemoteDevice
ADPeerLocationRemote
CLLocationManagerDelegate
ADHealthTransformer
ADSiriTetherListener
_ADPBProxy
ADServiceManager
ADServiceRecord
ADTimerRequestHandler
ADStopwatchRequestHandler
AFSiriRequestHandling
ADServiceStatistics
NanoServices
ADExternalRequestListener
ADSiriKitTCCObserver
ADSession
ADAssistantDataManagerObserver
ADFauxUIService
_ADPBDeviceStringKeyValuePair
ADDeviceSyncCommandPullDeltaResponse
_ADDeviceSyncCommandPullDeltaResponseMutation
ADDeviceSyncCommandPullDeltaResponseMutating
ADDeviceSyncCommandPullDeltaResponseMutability
ADDeviceSyncMessagingServiceRapport
ADDeviceSyncMessagingService
ADDeviceSyncMessageSender
ADDeviceSyncMessageSending
ADSpeechManager
SiriCoreLocalSpeechRecognizerDelegate
ADSpeechCapturingDelegate
ADVolumeServiceProviding
AFAudioPowerUpdaterDelegate
ADSyncFlagManager
ADTTSMutingObserver
ADAudioSession
ADAudioRoute
ADSpeechRecorder
ADAcousticFingerprinterDelegate
CSSpeechControllerDelegate
CSEndpointAnalyzerDelegate
ADSpeechCapturing
ADSyncManager
ADServiceDelegate
SyncKeys
SyncKeysPrivate
_ADDomainObjectCacheEntry
ADDomainObjectCache
ADAudioActivationInfo
ADAnalyticsStore
ADAnalyticsEventRecordBuilder
SiriCoreSQLiteRecordBuilder
ADMediaRemote
ADMediaRemoteServiceCommand
ADMediaRemoteService
ADMapsTransformer
AMOS
ADSettingsRequestHandler
ADClientFlowServiceHelper
AFServiceHelper
ADClientFlowService
SADExtras
ADSADOCommand
SADomainObjectCommand
ADSpeechLog
ADFMDMonitor
ADGreenTeaLogger
ADAlarmTransformer
OutputVoice
ADSessionRemoteServer
SiriCoreNetworkManagerObserver
SiriCoreSiriConnectionDelegate
SimulatorIDSDevice
ADIDSSimulatorService
ADSystemMuteModeObserver
RemoteExecute
ADSyncChunkInfo
ADAddressBookManager
ABAssistantManagerDelegate
ADLocalPhoneService
VSAdditions
_ADPBProxyReestablishRequest
ADAceDomainSignalRequestHandler
_ADPBProxyGetMetricsRequest
ADAcousticIDHelper
ADBulletinBoardObserver
BBObserverDelegate
ADSynapseService
ADMobileBluetoothDeviceDataSource
ADMobileBluetoothDeviceProxy
ADBluetoothDevice
ADRequestLifecycleObserver
ADAcePassthroughSiriRequest
ADBackgroundContextCache
ADClientConnection
ADHandsFreeStateChangedObserver
ADAudioStateListening
ADBluetoothDeviceObserver
ADCommandCenterClient
ADCommandCenterSpeechDelegate
AFClientService
ADClientConnectionSupport
CoreSpeechExtensions
ADSpeechCompressor
ADAudioStateManager
ADAudioStateAnnouncing
_ADAudioStateListenerProxy
ADAcePassthroughSiriResponse
ADOfflineMetricsManager
ADMailTransformer
ADSAExtensions
ADManagedObjectService
ADContextExtras
ADContextManager
ADDeviceSyncCommandPullDeltaRequest
_ADDeviceSyncCommandPullDeltaRequestMutation
ADDeviceSyncCommandPullDeltaRequestMutating
ADDeviceSyncCommandPullDeltaRequestMutability
ADRetryManager
ADCalendarTransformer
ADShowNextEventRequestHandler
ADSyncRequest
Metrics
SANotificationObject
ADAcePassthroughResponseTransformer
ADSiriConnectionRemote
SiriCoreConnectionProviderDelegate
ADPeerStreamConnectionDelegate
ADSpeechPlaybackSimulator
ADOfflineMetrics
ADPeerConnectionProvider
ADResultObjectCache
ResultCallbacks
ADResultObjectCacheInternal
ADMissingReferencesContext
ADKnowledgeService
ADGenericIntentService
ADGenericIntentRequestHandler
ADDiagnosticsManager
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
ADGenericIntentResponseTransformer
ADAuthenticator
ADServiceCommandType
ADCallObserver
ADDisplayScaleContextCollector
_ADPBDeviceStringKeyValueDictionary
ADPeerLocationPolicy
ADGenericIntentRequestTransformer
ADDeviceSyncTimerConsumer
ADDeviceSyncDataConsuming
ADClockService
ADRequestLifecycleListening
_ADPBDeviceExecuteOnRemoteRequest
ADTimerStore
ADUnavailableTimerStore
ADTimerStoring
ADSiriTaskService
ADAnalyticsService
AFAnalyticsObservationService
AFAnalyticsService
ADSessionBarrier
SiriCoreSessionObject
SiriCoreThunking
ADBuddyMonitor
ADAddressBook
SiriAce
SiriDaemonAdditions
ADPushContextListener
ADPushContextReceiver
ADNotifyAndPushContextCollector
ADSharedPeerStreamConnection
ADPeerStreamConnection
_ADPBDeviceSetDataRequest
ADDeviceSyncCommandPullGenerationsResponse
_ADDeviceSyncCommandPullGenerationsResponseMutation
ADDeviceSyncCommandPullGenerationsResponseMutating
ADDeviceSyncCommandPullGenerationsResponseMutability
ADLocationManager
ADPeerLocationConnectionDelegate
AssistantExtensions
ADLocationExtensions
ADDeviceSyncSession
ADDeviceSyncMessageReceiving
ADWorkoutTransformer
ADSiriContextServiceClient
Sync
ADBluetoothManager
ADLocalRequestProvider
StructuredDictation
ADLinkedListItem
ADFanInfoManager
ADFanInfo
ADMessagesTransformer
ADRemoteSpeechRequestHelper
_ADPBDeviceStartRemoteRequest
_ADPBProxyWakeUpRequest
_ADPBProxyTCPInfoMetrics
ADService
ADAlarmRequestHandler
ADNetworkAnalyzer
ADAudioPlaybackService
ADAudioPlaybackSessionDelegate
AFMemoryPressureListening
AFAudioPlaybackService
ADBundleService
ADServiceConnectionDelegate
_ADPBDeviceStartRemoteResponse
ADIntentVocabularyUpdateConnection
AFDiagnostics
AFDiagnosticsNetworkAnalyzerResults
AFDiagnosticsAdditions
AFAdditions
ADDeviceSyncCommandPullGenerationsRequest
_ADDeviceSyncCommandPullGenerationsRequestMutation
ADDeviceSyncCommandPullGenerationsRequestMutating
ADDeviceSyncCommandPullGenerationsRequestMutability
ADDeviceSyncItem
_ADDeviceSyncItemMutation
ADDeviceSyncItemMutating
ADDeviceSyncItemMutability
_ADPBLocationGetPeerLocationRequest
ADUIService
SharedDataClient
SharedDataRemote
ADExtensionServiceClientBoundCommandDelegate
ADPassthroughEndpointer
Endpointer
ADSystemService
ADCalendarError
ADOfflineMetricsMap
ADSiriAppLaunchRequestHandler
ADDeviceSyncIncrementalChange
_ADDeviceSyncIncrementalChangeMutation
ADDeviceSyncIncrementalChangeMutating
ADDeviceSyncIncrementalChangeMutability
_ADPBLocation
IntentSupport
ADHomeKitService
ADDictationConnection
ADAudioPowerCoreSpeechProvider
AFAudioPowerProviding
ADSessionManager
ADSessionDelegate
ADIntentsUserActivityManager
ADAddressBookRecord
ADDictationSession
_ADSADAdditions
ADAssistantDataManager
MCProfileConnectionObserver
ADDisplayScaleContextCollectorDelegate
ADAddressBookManagerDelegate
AFRequestInfo
ADCloudResponseHandler
ADPeerResponse
ADPeerCloudService
ADRemoteExecution
ADMyriadService
_ADPBDevice
Context
_ADPBDeviceOutputVoiceInfo
ADManagedStorageConnection
ADSettingsTransformer
ADTimerIntentExtension
INCLocalExtending
INIntentHandlerProvidingPrivate
INIntentHandlerProviding
ADTimerIntentHandler
ADVibrationManager
ADDictationSessionTracker
ADBaseService
ADFMIPListener
APSConnectionDelegate
ADSettingsService
ADAudioPlaybackSession
AVAudioPlayerDelegate
ADSettingsClient
ADCommandCenterSyncDelegate
ADMotionManager
ADAlarmStore
ADAlarmQuery
AFAlarmMatching
ADUnavailableAlarmStore
ADAlarmStoring
ADSyncVerificationHelper
_ADPBLocationSetPeerLocationRequest
ADAudioFileWriter
Analytics
ADSecurityService
AFSecurityService
ADSiriActivationHandlerCoreSpeech
AFSiriActivationHandling
ADAcePassthroughRequestTransformer
%s No normalized key could be computed for %@ %@
%s Unable to stop synching anchors of type %{public}@, because the example anchor is malformed aceID=%@
%s Invalid sync anchor was rejected by server %@
%s Anchor was throttled until %@ %@
%s intent.backingStore = %@
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s Home manager is still syncing
%s current accessory not found in the access control list
%s %p (sessionUUID = %@)
%s %p (startSpeechId = %@)
%s %p (selectedResultCandidateId = %@)
%s %p (allows = %d, resultCandidateId = %@)
%s %p (audioRecordContext = %@)
%s %p (audioRecordDeviceInfo = %@)
%s %p (voiceTriggerInfo = %@)
%s %p (recordedAudioURL = %@)
%s %p No recorded audio.
%s %p Denied access to recorded audio at %@.
%s %p Donating recorded audio at %@...
%s %p Failed to donate recorded audio at %@ for  VoiceID training (error = %@).
%s %p Donated recorded audio at %@ for  Voice VoiceID training.
%s %p Removing recorded audio at %@ for VoiceID training...
%s %p Removed recorded audio at %@ for VoiceID training.
%s %p Failed to remove recorded audio at %@ for VoiceID training (error = %@).
%s intent = %@
%s appList = %@
%s Dispatching command (%@) for domain (%@)
%s Constructing failure response due to remote execution error %@
%s Waiting for Call to route to complete the request...
%s Timed out waiting for Call to route
%s preheating companion service domain: %@
%s received response: %@ error: %@
%s unsupported preheat domain: %@
%s Processing %ld pending Call result(s)
%s intentSlotKeyPaths = %@
%s Beginning BatchSlotResolution with intent %@
%s BatchSlotResolution complete.
%s BatchSlotResolution completed in extensionProxy with updatedIntent %@
%s slotResolutionResult keyPath = `%@`, result = %@
%s All slots were resolved successfully. Moving to Confirm.
%s BatchSlotResolution needs dialog. Calling completion.
%s Beginning ConfirmIntent with intent %@
%s ConfirmIntent completed with response %@
%s ConfirmIntent successful. ShouldRunHandleIntent = %@
%s ConfirmIntent error. errorCode: %lu underlyingError: %@
%s Beginning HandleIntent with intent %@
%s HandleIntent completed with response %@
%s HandleIntent successful.
%s HandleIntent error. errorCode: %lu underlyingError: %@
%s Unexpected bulletin action type %zd from %@
%s Enabling CFNetwork diagnostics
%s Starting Siri Connection Proxy
%s Starting Peer Location Service
%s Preheating session on client connection
%s %@ Client Connection Connected (pid=%d])
%s %@ Client Connection Disconnected (pid=%d)
%s %@ Dictation Connection Connected (pid=%d])
%s %@ Dictation Connection Disconnected (pid=%d])
%s %@ Settings Connection Connected (pid=%d)
%s %@ Settings Connection Disconnected (pid=%d)
%s no '%@' entitlement for connection %{public}@
%s %@ Rejecting connection, because no kCFBundleIdentifierKey could be found for pid=%d but we expected it to be a .app bundle
%s assistantd accepted connection from app (pid=%d bundleID=%@) %@
%s Synapse Sync Connection Disconnected (pid=%d)
%s %@ Managed Storage Connection Connected (pid=%d)
%s %@ Managed Storage Connection Disconnected (pid=%d)
%s %@ Analytics Connection Connected (pid=%d])
%s Analytics Connection Invalidated (pid=%d)
%s Analytics Connection Interrupted (pid=%d)
%s %@ Analytics Observation Connection does not have required entitlements.
%s %@ Analytics Observation Connection Connected (pid=%d])
%s Analytics Observation Connection Invalidated (pid=%d)
%s Analytics Observation Connection Interrupted (pid=%d)
%s %@ Security Connection does not have required entitlements.
%s %@ Security Connection Connected (pid=%d])
%s Security Connection Invalidated (pid=%d)
%s Security Connection Interrupted (pid=%d)
%s Got xpc event for notification %s
%s Got xpc event for distributed notification %s
%s Notification payload: %s
%s Sync listener error %{public}s
%s Ignoring unexpected event type on sync listener
%s Returning no space to CacheDelete because it's not a special case
%s Could not get asset sizes: %{public}@
%s Deleting nothing for CacheDelete because it's not a special case
%s Could not purge assets: %{public}@
%s Purged assets to recover %{public}@ bytes
%s Could not register with CacheDelete: %d
%s Registered with CacheDelete
%s assistantd launched on %@
%s assistantd finished post launch setup
%s assistantd shutting down
%s Sync now activity already registered
%s Assistant is not enabled, ignoring sync notification
%s Sync requested recently; sync reasons enqueued: %@
%s Received sync now notification from UEA.
%s Received defrost XPC message
%s Process launched %fs after sending defrost XPC message.
%s Process launched before sending defrost XPC message.
%s Unexpected message on sync connection %s
%s Unexpected nameless message on sync connection
%s Sync peer shutting down due to %s
%s Ignoring unexpected type on sync connection
%s Unable to get best location from peer: %{public}@
%s Censor setting changed, pushing to peer.
%s Not pushing shared data because we have no peer
%s Already have Peer Data returning now!
%s Getting Peer Data from ADCommandCenter
%s Sending ADCC Peer Data now!
%s Forcing Siri to off because peer does not support language
%s Peer does not export shared data.
%s got remote execution command: %@ -> %@
%s error executing remote command: %@
%s got command response: %@
%s No SACodec for settings %{public}@
%s Notification with record ID %@ cleared
%s User tapped notification with record ID %@
%s Companion service is not supported on this platform.
%s ASXConnection Interrupted
%s ASXConnection Invalidated
%s Setting sample rate to %d
%s Could not make Fingerprinter decoder: %{public}.4s
%s Error during conversion for fingerprinter %{public}.4s
%s Getting signature for duration %lf
%s Fingerprinter doesn't support rate %{public}ld
%s Assistant Service Connection Interrupted
%s Assistant Service Connection Invalidated
%s Time out disabled for plugin %@
%s Using timeout of %{public}@ seconds for %{public}@
%s Plugin timed out for message %{public}@ %{public}@
%s message timed out, ignoring provider service error %{public}@
%s Plugin failed for message %{public}@: %{public}@
%s message timed out, ignoring plugin reply %@
%s Bad plugin response %@
%s Plugin timed out for sync with info %@
%s Plugin already timed out for sync
%s %@ Sync failed for info %@: %@
%s %@ failed to fetch sync snapshot for info %@: %@
%s Ignoring sync chunks as we have no chunk handler. (pre=%@, post=%@, validity=%@, updates=%@, deletes=%@)
%s deviceSyncMessageService = %@, deviceIdentifier = %@
%s deviceSyncMessageService = %@, deviceIdentifier = %@, incomingMessage = %@
%s deviceSyncDataProvider = %@
%s Creating session for device with identifier %@...
%s Created session %@ for device with identifier %@.
%s Sending Request %d
%s Error sending request %{public}@
%s Ignoring response with no requestId %@
%s Error sending response %{public}@
%s Received %@ type %d fromId %@ incoming %@ outgoing %@ expects response %@
%s Handing protobuf to delegate
%s Error for request id %@ %{public}@
%s Tried to handle protobuf but couldn't find class or had no delegate %@ %@
%s Don't know how to handle protobuf %@ %@
%s Message send with identifier %@ failed %{public}@
%s Holding off on session start because we're dormant
%s has active request %d
%s Mini not ready.
%s Mini failure (%{public}@).
%s Ignoring command failed for limbo id %@
%s Mini Loaded Version: %@
%s Mini Loaded refId does not match our saved assistant command
%s Waiting on a pending destruction, doing nothing
%s Handling ACE Object
%s Siri Mini received Speech Recognized
%s Siri Mini received Speech Failure: %@
%s Error sending command %@ %{public}@
%s Logging Assistant Id %@, SharedUserId %@
%s Local session did open connection
%s Local session received Ace Object %@
%s Local session connection did close
%s Local session did encounter error %@
%s generated setAssistantData anchor %@ (previous anchor %@)
%s Assistant Data matches, not sending %@
%s %@
%s volume = %f, operationType = %ld
%s notification = %@
%s Ignored because no audio category is specified in the notification %@.
%s category = %@, volume = %f, reason = %@
%s %@ has no identifier.
%s %@ has no control group.
%s Unable to select  depolyment group based on allocation.
%s firedTimerID = %@
%s dismissedTimerID = %@
%s fromSnapshot = %@
%s toSnapshot = %@
%s Loading local timer generation...
%s Loaded local timer generation %llu.
%s generation = %llu, limit = %llu
%s Delta pulling mode is not supported for type %@.
%s Fetching local timer snapshot...
%s Fetched local timer snapshot %@.
%s Converted to device sync snapshot %@.
%s service %@ at index %d of count %d
%s service %@ at index %d of count %d complete
%s Service %@ still has safety block, timing out
%s Not sending SAAISearch because aidHelper said not to
%s Scheduling partial result acoustic ID timer
%s Canceling speech request because we have an acoustic identification but no partial results
%s Connection to deep sync verification service dropped unexpectedly: %@
%s Failed to unarchive data: %@
%s Invalid data: %@
%s No deep verification keys persisted
%s Failed to remove verifications keys: %@
%s Failed to persist verification keys: %@
%s Failed to archive data for verification keys: %@
%s No keys to verify
%s Deep sync verification already in progress
%s Sync chunk is nil
%s No deep sync verification scheduled
%s Client with pid %{public}d does not have entitlement %@
%s Current execution count: %ld, enqueuing work
%s Unexpected execution count. File radar.
%s Now executing %@
%s Rejecting ClientLite command because Siri is disabled
%s Timing out ClientLite command %@
%s No client handler for command %@
%s assistantIsEnabled = %d
%s dictationIsEnabled = %d
%s Adding completion for %@
%s (%@) (%@)
%s No Media plugin could be found, but one was expected. Please file a radar on Siri Frameworks.
%s Clearing request delegate state
%s Clearing speech delegate state
%s Interrupting current request delegate
%s Informing session it's ok to send assistant data
%s requestCompletion is set to %@.
%s requestDelegate is set to %@.
%s success = %d, error = %@
%s requestDelegate is set to nil.
%s requestCompletion invoked.
%s Interrupting current recording speech delegate
%s Waiting for recording to finish
%s Invoking Speech Completion
%s Marking request did finish on app launch callback
%s StartSpeech msg id is %@
%s Ignoring command whose request %@ is not the current request
%s Handling command from result object cache %@
%s Missing command identifiers, asking for objects from the server
%s missing refs resolved
%s missing refs for %@ have already been fulfilled
%s GetResultObjects Response, trying to handle callbacks again.
%s Missing references still not fulfilled, failing
%s Ignore ARO for past requests
%s Failed getting result objects, error %@ request Id %@
%s Canceling current request
%s Logging Cancel for %d seconds
%s Invoking request completion on request cancelation
%s Start sending metrics for %f seconds before shutting down...
%s Done sending metrics before shutting down.
%s Delaying shutdown block for %f seconds...
%s Shutting down session now...
%s Still active. Ignoring session shutdown request
%s Ignoring command with unknown refId %@ aceId %@
%s Searching callbacks for phone call command
%s Found phone call command
%s Call is already likely not checking again
%s No phone call command found
%s Ignoring callbacks in reply
%s We're in a callback context, asking callback manager for next commands
%s Using first chance service %@ instead of originally found service %@
%s Dispatching command to service %@
%s Service reply for %@ %@ %@
%s Couldn't find service for %@ %@
%s Dispatching out of band service command %@ to service %@
%s Reply for out of band command %@
%s Updating with location %@
%s Got call state changed; call is in process: %d
%s Got call state changed; call is incoming: %d
%s Failing speech request on request completed since we never got a speech recognized
%s Request completed for id %@: %@
%s CommandFailed for refId: %@ reason: %{public}@
%s SpeechCommand failed
%s CommandIgnored for refId %@
%s holdToTalkThresholdInMilliseconds: %@
%s ignoring server configured HTT threshold
%s Server sent Myriad device configuration
%s Server sent Myriad device configuration, but it was ignored
%s ResultCandidate for a different request. Ignoring.
%s %@ (processedAudioDuration = %f, resultId = %@)
%s selectedResultCandidate = %@ (processedAudioDuration = %f, resultId = %@)
%s speechAcceptedResultCandidateDuration = %f
%s Already accepted result candidate for request
%s ResultCandidate is out of scope in accept. Ignoring.
%s Accepted this ResultCandidate aceId: %@ refId: %@ with resultId %@
%s ServerEndpoint for a different request. Ignoring.
%s VoiceIdentificationSignal for a different request. Ignoring.
%s %@ (recordUserAudio = %d, resultCandidateId = %@)
%s SpeechRecognized for a different request. Ignoring.
%s isEager %d
%s Ignoring Recognition, SpeechRecognized has already been received
%s SpeechRecognized is no longer valid after updating speech options
%s Got SpeechPartialResult for something other than our current speech command. Ignoring.
%s Ignoring Partial, SpeechRecognized has already been received
%s Partial result is no longer valid after updating speech options
%s Failure for a different request. Ignoring.
%s Abort for a different request. Ignoring.
%s Got VoiceSearchPartialResult for something other than our current speech command. Ignoring.
%s Got voiceSearchFinalResult for something other than our current speech command. Ignoring.
%s Got suspendClientEndpointer for something other than our current speech command. Ignoring.
%s Got confirmEndpointRequest for something other than our current speech command. Ignoring.
%s Got serverEndpointFeatures for something other than our current speech command. Ignoring.
%s Got confusionNetwork for something other than our current speech command. Ignoring.
%s Got clientSetupInfo for refId %@. Ignoring. 
%s %@ %@ %d
%s Recognition failed, but we're waiting to write an audio file. Don't cancel recording
%s Clearing speech delegate in recording completion
%s ttsGetSpeechSynthesisVolume = %@
%s ttsSetSpeechSynthesisVolume = %@ (actionType = %@, volumeLevel = %@)
%s %@ %@ %@
%s Suppressing reply since it was handled in callbacks
%s CommandFailed errorCode = %ld, reason %@
%s Command requires a response but it has no aceId to set as ref. Suppressing.
%s Command does not require a response, but we have a reply, so sending it along anyway.
%s Command has an unnecessary response. Suppressing
%s Ignoring session error since we're in a callback context
%s Ignoring session error (%@) because the speech manager is doing local speech recognition in dictation mode
%s Propagating session error because the speech manager is not doing local speech recognition or is not in dictation mode
%s Telling session not to retry because local dictation is active
%s Session is changing our request identifier from %@ to %@. Should not be called.
%s starting person dictation request
%s starting location dictation request
%s Sending %@ with origin: %@ source: %@
%s Skipped enable server endpointer command because _currentSpeechRequestOptions.useAutomaticEndpointing == NO
%s Sent enable server endpointer command.
%s Location manager says we need to send location for this request
%s Location manager updated location
%s Fingerprint only request not sending start speech
%s Secure offline request not sending start speech
%s Recording Info didn't change, not sending update audio
%s firstBufferHostTime = %llu, audioSessionSetActiveEndHostTime = %llu
%s Not sending audio packet to session because it has already failed and local recognition has taken over
%s Ignoring prelistening speech data from %lf. Threshold is %lf
%s Post XPC event to notifyd: %s
%s Ignoring partial local recognitions because server results have arrived
%s Sending raw recognition to server %@
%s Phrases=<REDACTED>
%s Phrase[%lu]=%@
%s Utterance[%lu]=%@
%s Not handling phraseRecognition because this is a phoneme transcription request
%s Ignoring and canceling final local recognition because server results have arrived
%s Deferring final local recognition results for %f seconds while waiting for the server
%s Ignoring final local recognition because the previous request has already finished
%s Ignoring final local recognition because the server won the race
%s Giving up on final server recognition because local won the race
%s Local speech recognition failed, and so did the session: %{public}@
%s Ignoring local speech recognition failure because the session is still active: %{public}@
%s expectedCurrentRequestID = %@, currentRequestAceId = %@
%s QuickStop: bargedInOverMediaPlayback (advisory only) = %d, bargedInOverSiriRequest = %d, bargedInOverSiriVoiceOutput = %d, bargedInOverFiringAlarm = %d, bargedInOverFiringTimer = %d, hasFiringAlarms = %d, hasFiringTimers = %d
%s QuickStop: Dismissed firing alarms.
%s QuickStop: Dismissed firing timers.
%s QuickStop: Dismissed assistant because the current request barged-in over a Siri request / voice output and interrupted it.
%s Stopping media playback, because there is nothing higher-priority to stop
%s Sent MRMediaRemoteCommandPause and got %@ %@
%s expectedCurrentRequestID %@ does not match currentRequestAceId %@, doing nothing
%s  %@
%s %@ is not supported on this platform
%s Took action %@
%s QuickStop is not supported on this platform
%s called with nil command handler; returning
%s Waiting for speech recognition processing...
%s Waited %f seconds for speech recognition processing.
%s Myriad lost, command handler dropped.
%s options = %tu
%s language code changed from %@ to %@
%s language code %@ is not supported for this device
%s no need to language code to %@ becasue it is already set to %@
%s Keeping language code the same
%s output voice %@ is not supported for language code %@ for this device
%s %@, %@
%s SetRestrictionsThunk Invoked
%s _deviceIsLocked=%d AFHasUnlockedSinceBoot=%d ADVoiceDialingDisabledWhileLocked=%d _deviceIsShowingLockScreen=%d ADControlCenterDisabledWhileLocked=%d _isInStarkMode=%d _isInCarDNDMode=%d
%s Stripping %@ Restriction for CarPlay
%s configuration = %@, client = %@
%s delaying session end because there is an active request
%s ending session immediately
%s %p, _speechDelegate %p, _requestDelegate %p
%s Ignoring request to end session. Current client is %p
%s Asking the speech delegate to end session
%s Looking up and sending the SARequestCompleted callback for %@
%s %@ Event %ld
%s Asking to play recording start alert on prelistening continue
%s Pronunciation Context: %@ refId %@
%s Skipping dictation fallback code because override %@ has been set for keyboard %@
%s Dictation override %{public}@ is not in our supported list.
%s Trying to rollback a request, but don't have one
%s We're not the current delegate, but we have a speech completion. Will try to update in completion
%s Ignoring update speech options from invalid delegate
%s Skipped enable server endpointer command because (_currentRequest.aceId = %@) and (_speechManager.context.aceId = %@) mismatched.
%s Ignoring stop speech from invalid delegate
%s Ignoring cancel speech from invalid delegate
%s Requested command conflicts with existing: %@
%s Ignoring invalid ace command %@
%s Handling generic send commands
%s Handling generic server bound command
%s Handling generic client bound command
%s Don't know how to handle generic ace command %@
%s Performing commands %@ after request %d
%s Ignoring early return flag for non interrupting request
%s Sending fetch supported languages completion
%s Retrieved languages:(%@) for idiom: %@
%s Unable to fetch languages: %@
%s Failed getting deferred objects
%s Error disabling fides: %{public}@
%s Successfully disabled DES
%s Ignoring reschedule refresh request because assistant isn't enabled
%s Updating with status=%@ location %@
%s No location in speechRequestOptions %@
%s result = %@
%s Failed to handle remote request in %lfs
%s Failed to handle remote speech request in %lfs
%s Ignoring attempt to set the language based on current system config, because we already have a language code saved.
%s No language code saved, but Assistant is enabled - saving language: %@
%s Ignoring queued language code: %@
%s Ignoring queued output voice: %@
%s Ignoring StartPlayback not known to be for ThisDevice (type %ld)
%s Skipped sending metrics to server because metrics sender is disabled.
%s Skipped sending metrics to server because the device has not been unlocked since boot.
%s Client disconnected, sanity checking
%s Client disconnected and no phone call underway, syncing if needed
%s Canceling session for shutdown
%s client = %@
%s volumeService = %@
%s volume = %f
%s Volume service is unavailable.
%s success
%s Services %@
%s Preheating speech manager
%s Current delta from expected activation: %lf activation: %lf
%s %@ %@
%s Received message from unknown message type: %@
%s Migrating assistantIdentifier
%s Creating coupled assistantIdentifier
%s Migrating speechIdentifier
%s Found Predefined Server '%@' = %@
%s Bad server override %@
%s Using Server Override %@
%s Saving account info %@
%s updated assistant data
%s updated assistant for same device
%s inserted
%s Found paired watch
%s ADPeerLocationRemote best location timer firing
%s starting location updates
%s Sending unsolicited location: %{private}@
%s acquiring location-in-use assertion
%s %{private}@ %@
%s stopping location updates
%s has active request; calling completion
%s releasing location-in-use assertion
%s no active request
%s updated location %{private}@
%s %{public}@
%s authorized with active request; starting location updates
%s not authorized with active request; failing with error
%s %{public}s
%s Ignoring unexpected event
%s Client missing entitlement %@
%s Tether attached %p
%s Message!
%s Clearing tether %p
%s Couldn't create bundle at URL %{public}@
%s regenerating bundle service cache due to version mismatch %@ %@
%s Can't serialize %@: %{public}@
%s Can't write to %{public}@: %{public}@
%s Stopwatch handler asked to handle request %@, but didn't know how
%s Couldn't create stats dir %{public}@
%s Error reading stats plist for %{public}@ %{public}@
%s Error serializing plist data for service %{public}@ %{public}@
%s Trying to mark command start for nil command
%s No start time for command %@ for service %{public}@
%s Can't mark response for nil command for service %{public}@
%s called with nil punchoutOutcome.
%s External Request connection missing entitlement
%s External Request Listener Error: %{public}s
%s Ignoring unexpected event type on External Request Listener
%s Unexpected external request message type %{public}lld
%s External Request peer error: %s
%s startLocalRequest = %@
%s Archiving error %@
%s Setting TCC info %d for bundle %@
%s Shouldn't reach this method
%s Unsupported language code %@, but sending SAD anyway
%s Got updated assistant data for session %d!
%s Sending pending commands after SAD update
%s Session is active, clearing limbo now.
%s Still waiting on SAD, postponing clearing limbo.
%s Not waiting on SAD, clearing limbo now.
%s Sending pending dormant commands now that the session is no longer dormant for session %d
%s Setting dormant state for session %d to %@
%s Pending command because session is dormant for %d
%s Waking up dormant session because inopportunistic command needs to be sent.
%s deviceIdentifier = %@, outgoingMessage = %@
%s %@ created local speech recorder %@
%s %@ created speech compressor %@
%s speechState: %@ -> %@
%s recordRoute: %@ -> %@
%s deviceIdentifier: %@ -> %@
%s Dictation session did complete, enabling asset fetch in subsequent requests if needed
%s Assets for %@ already exist at %@
%s Error fetching assets for %{public}@: %{public}@
%s Started fetching assets for %@
%s On assistant enabling tried to fetch offline models, got %@ into %@
%s %@ created speech recognizer %@
%s Canceling local recognition because servers results have arrived.
%s ADSpeechManager no longer talking to delegate
%s Speech finished dropping callback
%s %@ %ld %ld %@
%s Asking AVVoiceController to release its audio session now because 'releasesAudioSessionWhenRecordingStopped' is set.
%s Invoking recording stopped completion (state = %@)
%s success = %d, error = %@, info = %@
%s Could not start local speech recognition for %{public}@: %{public}@
%s Local speech recognition started for %{public}@
%s Not starting local recognizer: language %@, task %@, dictation capable %@
%s Invoking recording started completion (state = %@)
%s Ignoring tokens from previous recognizer
%s Processed %.2f
%s Ignoring phrases from previous recognizer
%s Ignoring completion from previous recognizer
%s Speech recognition encountered error: %{public}@
%s Invalidating local speech recognizer for finish
%s Preheating speech recognizer with state = %d
%s Begin preparing audio system with options %@ (setAudioSessionActiveOptions = %tu, setAudioSessionActiveReason = %zd).
%s End preparing audio system with audio session ID %lu and error %@.
%s End preparing audio system with audio session ID %lu
%s Begin waiting for alerts to stop.
%s End waiting for alerts to stop.
%s Begin waiting for speech recording to stop. (speechState = %ld)
%s End waiting for speech recording to stop. (signal = %ld)
%s Speech state is %@, asking speech recorder to prepare.
%s Speech state is %@, waiting until speech recorder stops to prepare.
%s secureOfflineOnly is %d
%s Asked to start recording when we're already in state %{public}@
%s Not using local speech recognition for Siri because the kill switch is on
%s Doing local speech recognition for Siri
%s Not using local speech recognition for mode %ld, dictation language %@, dictationCapable %@
%s Inserting will start on speech failure
%s Not using local speech recognition for recorded %@
%s Canceling speech capture
%s Recording started canceling in record start completion
%s Canceling speech capture in completion
%s Recording failed to start, ignoring cancel in completion
%s Asked to cancel when we're in state %@
%s Stopping speech capture
%s Recording started stopping in record start completion
%s Stopping speech capture in completion
%s Recording failed to start, ignoring stop in completion
%s Error: asked to stop when we're in state %{public}@
%s BTLE Myriad decision: %d arrived at ADSpeechRecorder
%s Started, waiting for did start to stop recording then release session
%s Recording failed to start releasing session in completion
%s Recording, stopping record to release session
%s Stopping, waiting for did stop to release session
%s Asking AVVoiceController to release its audio session now
%s onlyIfIdle = %d
%s state = %@
%s Completion is invoked by the deallocation of the safety block. Something went wrong.
%s and we're idle
%s but we're NOT idle
%s Notifications suppressed
%s Skipping local speech profile update because device doesn't support it
%s Skipping offline profile update because speech recognition is active for task %@
%s Could not read installed languages: %@
%s No offline dictation language enabled for syncing
%s Siri language is not installed for offline support (%@ = %@), looking for a fallback...
%s No viable offline dictation language for profile update
%s Skipping user profile update for %@ because it was last updated too recently (%@) and the update reasons (%@) are not immediate
%s Continuing user profile update for %@ because it was not updated recently (%@)
%s Continuing user profile update for %@ because update reasons were immediate (%@)
%s Perform speech profile update because delay timer fired
%s Perform speech profile update because coalescing timer fired
%s Skipping offline profile update because speech recognition has started for task %@
%s Failed to create user speech profile: %{public}@
%s User profile updated
%s hasFetchedSmartSiriVolume = %d, forceFetch = %d
%s hasFetchedSmartSiriVolume = %d
%s hasUpdatedSiriOutputVolume = %d, forceUpdate = %d
%s Failed to create the sync flag for %@ at %@
%s Checking if route is hands free %@
%s Audio route changed %@
%s Mute state changed %@
%s Listening for audio route changes
%s Stopping listening for audio route changes
%s Listening for mute state changes
%s Stopping listening for mute state changes
%s Use device speaker for TTS preference changed!
%s *** Turning on data spinny
%s *** Turning off data spinny
%s Failed getting kern.boottime MIB with sysctlnametomib() %s
%s Failed getting kern.boottime with sysctl() %s
%s Failed getting kern.boottime with sysctlbyname() %s
%s Failed getting kern.bootsessionuuid with sysctlbyname() %s
%s kern.bootsessionuuid is %@
%s Input route changed
%s Failed getting audio property %{public}.4s %{public}d
%s Failed getting audio property size %{public}.4s %d{public}
%s Failed registering for property listener %{public}.4s %{public}d
%s Setting up recording alerts for dictation
%s Done setting recording alerts for dictation
%s Setting up recording alerts for Siri
%s Done setting recording alerts for Siri
%s Trying to set record buffer duration to %lf
%s Failed setting record buffer duration. Duration is %{public}lf
%s Initalizing speech controller with context %@
%s Error initializing voice controller with context %@ %{public}@
%s Done initializing voice controller
%s Preparing CSSpeechController with settings %@
%s Error setting up CSSpeechController %{public}@
%s Done preparing CSSpeechController
%s reason event %d
%s Really stopping recording
%s Someone else has already asked to stop recording.%@
%s Sending stop recording immediately because CSSpeechController isn't recording
%s Updating to post voice mode
%s Playing alert %ld
%s Checked audio logging limits, count = %d -> %d
%s info = %@
%s Did not create _audioLogggingFileWriter because fileLoggingIsEnabled = %d, canGetPCMStream = %d.
%s Configure _audioFileWriter, _audioLogggingFileWriter, _audioVoiceIdentificationTrainingWriter with recordSettings = %@
%s Prewarming audio session in speech controller
%s Done prewarm audio session in speech controller
%s Prewarming start alert
%s Failed to prewarm start alert due to %@
%s Done prewarming start alert
%s Preparing instead of preheating since we're not in the default mode
%s Set Use Automatic Endpointing %d
%s Preparing speech capture for %@
%s Using Bluetooth audio analyzer style
%s Using driving audio analyzer style
%s Using voice trigger audio analyzer style
%s Using default audio analyzer style
%s Suppressing start alert
%s Setting delayed start delay %lf
%s Asking CSSpeechController to startRecording with settings %@
%s Done asking CSSpeechController to startRecording
%s context = %@
%s Could not set up recording, returning error and resetting voice controller %{public}@
%s Updated speech synthesis record from %@ to %@.
%s Fetching audio session ID...
%s Done fetching audio session ID %lu
%s Pending context reconfig to because we're recording.
%s Updating new speech context
%s Error setting current context %@ %{public}@
%s Playing CSSpeech_RecordStoppedWithError
%s releaseAudioSessionBehavior = %s
%s Resetting to default audio context on session end
%s %lf %lf
%s (event = %ld, suppressAlert = %d)
%s (suppressAlert = %d)
%s clientConfiguration = %@
%s recordRoute = %@
%s recordDeviceInfo = %@
%s speechEvent = %ld (%@)
%s alertStartTime = %llu
%s Got a speech start failure after we already got audio buffers?!
%s isTwoShot = %d
%s Sending speech did start to delegate %@
%s Resetting VoiceController on startRecording failure
%s Synthesizing a didStart callback, on missing didStart
%s _recordingState %ld
%s Ignoring unexpected didStop callback while in state %ld
%s Explicitly playing %@ alert
%s Not explicitly playing alert
%s Forcing post voice update on recording end
%s Starting new recording for two shot mode
%s Failed starting recording for two shot mode
%s Dropped %f seconds of audio buffers recorded at %llu (%f seconds) due to audio recording restriction (accumulatedBufferDuration = %f seconds).
%s (hostTime = %llu, timestamp = %f)
%s %ld
%s type = %ld, error = %@
%s type = %ld
%s alertPlaybackGroup is nil.
%s numberOfAVVCAlertPlaybacksByType does not have AVVC alert playbacks of type %ld.
%s numberOfAVVCAlertPlaybacksByType is nil.
%s BTLE start waiting for Myriad decision for state %@
%s BTLE stop waiting for Myriad decision for state %@
%s BTLE waiting for Myriad to finish
%s BTLE trigger two shot
%s BTLE Myriad loss cancelled two shot feedback
%s opType = %tu, reason = %tu
%s Unknown CSRequestOperationType (opType = %tu).
%s reason = %tu
%s %lf
%s Ignoring startpoint from stale CSEndpointAnalyzer
%s Ignoring hard endpoint from stale CSEndpointAnalyzer
%s Ignoring hard endpoint because (endpointTime = %f, firstBufferTimestamp = %f, mostRecentTTSEndTimestamp = %f, extendedSuppressDuration = %f).
%s Overridding timeout and start point on timeout
%s promptType = %ld, time = %f
%s suppressesTwoShotAlert = %d
%s done
%s Fake two shot TTS prompt timed out (%@).
%s Fake two shot TTS prompt timeout is not handled due to context mismatch (fakeTwoShotPromptUUID = %@, _fakeTwoShotPromptUUID = %@).
%s Fake two shot TTS prompt called back (timestamp = %f, duration = %f, error = %@)
%s Fake two shot TTS prompt callback is not handled due to context mismatch (fakeTwoShotPromptUUID = %@, _fakeTwoShotPromptUUID = %@).
%s No endpoint yet, waiting
%s Eager results accepted: %d. Duration: %lf last duration: %lf
%s Got an enforce message without a current completion. Ignoring
%s timeout = %f
%s Done
%s Watchdog timer timed out.
%s Safety block deallocated.
%s duration %lf
%s Starting audio playback request %@...
%s Failed audio playback request %@ due to error %@.
%s Stopped audio playback request %@.
%s %@, error: %@
%s anchorsToSync: %@
%s Forcing a reset on key %@
%s Ignoring sync chunk for service %@ that's not our current service %@
%s Ignoring sync chunk for ID %@ that's not our current ID %@
%s Sync manager couldn't find connection for anchor key %{public}@. Moving on.
%s Preparing sync with ID %@ for reasons: %@
%s Anchors in queue: %@ for reasons: %@
%s Sync Manager isn't waiting on a continue, ignoring request
%s Continuing sync
%s Canceling sync for anchor %@
%s Ignoring sync cancel for anchor %@. Current anchor is %@
%s In progress verification has been reset
%s In progress sync has been reset
%s Too many plugins have timed out for sync, reset and try later
%s Setting activationMode %.4s
%s Requesting historical buffer of duration %lf seconds
%s alertStyle = %ld
%s Purging deleted records before date %@
%s Purging data from analytics store (%@)...
%s Unable to get file size of analytics store (%@).
%s Unable to get file attributes of analytics store (%@).
%s Purged data from analytics store (%@)...
%s Failed to purge data from analytics store (%@) due to error %@.
%s Resetting analytics store (%@)...
%s Reset analytics store (%@).
%s Failed to close database (%@) due to %@.
%s Failed to remove database (%@) due to %@.
%s Failed to remove database at path %@ due to %@.
%s Failed to open analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to perform integrity check on analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to remove database (retry %tu out of %tu) at path %@ due to %@.
%s Failed to prepare analytics database after %tu retries due to %@.
%s Failed to add column '%@' to '%@' table with error %@
%s Failed to create '%@' table with error %@
%s Failed to begin database transaction due to error %@
%s Failed to insert event record %@ into %@ table due to error %@
%s Failed to commit database transaction due to error %@
%s Failed to rollback database transaction due to error %@
%s Failed to update database records with deleted state due to error %@
%s Failed to purge database records with deleted state due to error %@
%s Failed to select database records due to error %@
%s Media Remote reported that the picked route does NOT have volume control
%s Sent MRMediaRemoteCommand %d, got %@ %@
%s reporting success
%s %s MRMediaRemoteCommandPlay did not return success %@
%s %s MRMediaRemoteCommandPlay returned success
%s Sending MRMediaRemoteCommandPlay now
%s Unknown actionType %@
%s %@ %f
%s SmartSiriVolume: Successfully changed the playback volume via MediaRemote, now waiting for volume service to update Siri volume...
%s SmartSiriVolume: Volume service successfully updated Siri volume.
%s SmartSiriVolume: Volume service failed to update Siri volume.
%s Ignoring %@ with aceId %@ because there is no completion handler. This command should only read state, and have no effect.
%s %@ overlapping commands %@
%s WARNING: No other media service found, handling everything in assistantd.
%s %@ command has explicit routes, passing to %@
%s %@ is NOT supported by %@, attempting to handle in assistantd after all
%s Handing SetQueue to %@
%s %@ %@ was not handled
%s Adding metrics info to SetQueue %@
%s Caught an exception %@ while converting metricsContext %@ to Foundation object. 
%s merging existing metricsContext dictionary
%s Value already exists for key %@, keeping it
%s merging existing non-dictionary metricsContext value of %@ under key %@
%s Successfully updated metricsContext on %@
%s Failed to update metricsContext error=%@ newContextDictionary=%@
%s No service connection for command %@ identifier %@
%s Can't route to system service for command %@ identifier %@
%s Found service %@ for command %@ in domain %@
%s Service does NOT use AMOS for command
%s Services uses AMOS, but wants to intercept command
%s Service uses AMOS for command
%s Couldn't send SADOCommand %@ to service %{public}@
%s Unexpected response from service. Expecting %{public}@, got %{public}@ error: %{public}@
%s Retrieve looking in amos for key %@
%s Retrieve going to bundle for remaining identifiers %@
%s Unexpected count of retrieved objects: %@
%s Successfully retrieved object from service %@
%s Updated retrieved object to %@
%s Failed to retrieve object from service. status: %{public}d
%s Updating store object %@
%s Going to bundle for object update
%s Removing object with identifier %@ old identifier %@ from amos
%s Object not found in AMOS %@
%s Committing %@ with oldId %@
%s Keeping committed object around %@
%s We don't know how to generically punch out to domain objects. A non-ui plugin needs to handle this.
%s Unsuccessfully tried to handle non AMOS command as AMOS %@
%s Settings handler asked to handle request %@, but didn't know how
%s Trying to open URL %@
%s Success opening URL? %@
%s ClientScripter warmup succeeded.
%s ClientScripter warmup failed.
%s #CFLOW Plugin timeout is disabled
%s Response received after watchdog timeout Response=%@
%s Already have a log open, ignoring
%s Couldn't open file %{public}@
%s error removing file at path %{public}@ %{public}@
%s Logged speech file at path %@
%s Error opening speech log at URL %{public}@ %{public}s
%s buffer not big enough
%s Read incorrect number of bytes
%s Device is %@
%s Got alarm response %@ for request %@
%s Unable to fetch alarms with identifiers %@: %{public}@
%s Searching for alarm %@ in order to do an update
%s Asking to delete alarms with identifiers %@
%s Failed constructing URL identifier for %@
%s output voice changed from %@ to %@
%s no need to change output voice to %@ because it is already set to %@
%s Not updating auto-downloaded voice assets because the platform doesn't support TTS
%s Retrying %lu naked commands %@
%s Redirecting %@ to %@
%s peer type %@ peer version %@
%s Adding metrics
%s Starting connection.
%s Hostname invalid in configuration
%s Account is being destroyed use default connection policy and clear our dns settings.
%s Connection policy expired at %@; ignoring it
%s Connection policy hostname %@ does not match account hostname %@; ignoring policy
%s Connection policy blacklisting timed out
%s Not using connection policy
%s Connection policy in use
%s Connection policy not in use
%s No custom connection policy; using default
%s Connection policy has no expiration date; ignoring it
%s Connection policy has no hostname; ignoring it
%s No cached validation data beginning eager auth
%s connectionType=%@
%s Received object %@
%s Ignoring connection close since we have an incoming retry
%s Connection closed %@
%s Connection closed with active request, treating as error
%s %{public}@ %{public}@
%s Not using a predefined server.
%s Error suggests bad connection policy; reverting to factory policy.
%s Got redirect %@ for %@
%s Ignoring redirect %{public}@ for %{public}@
%s Setting failure count of %d
%s Changing requestId from %@ to %@ 
%s Retrying %lu objects on session failure
%s Resetting retry manager
%s Not retrying shouldRetry %d retryableError %d
%s Session data has expired %@
%s Validity is valid for %d seconds %@
%s Failed to persist validation data
%s %@ can't be remapped. Skipping
%s Remapping retry manager from %@ to %@
%s creating rollback request
%s Retrying after %lf seconds, now %lf error %@
%s Backing off for %lf seconds
%s Server connection is no longer current. ignoring backoff
%s Retrying after backoff
%s State has changed, not proceeding with retry.
%s Assistant needs destruction, sending destroy
%s Exceeded bad cached cert retry attempts, failing authentication
%s Sending request for certificate data
%s Have cached certificate data, preparing
%s Authenticator is still preparing, let's wait
%s Authenticator is prepared, but we still need session info
%s Authenticator is ready
%s Setting cached authentication data with duration %lf
%s We have no pending commands holding
%s Not continuing with authentication as session is already active
%s Session has already authenticated. Resetting authenticator to do it again.
%s Starting Session
%s Skipping authentication. Disabled or on simulator
%s Using cached validation data
%s Connection opened
%s Connection not opened yet, waiting
%s We've already authenticated, reset the authenticator since it's not needed anymore.
%s Unexpected refid in validation failed, ignoring
%s SASessionValidationFailed %{public}@
%s No certificate data in response trying anyway %@
%s Old session info response ignored
%s Saving new validity info since we're not currently authenticating
%s Assistant created response ignored
%s Assistant Loaded Version: %@
%s Assistant Loaded refId does not match our saved assistant command
%s Assistant Destroyed
%s Restarting connection because destroy came in during active request
%s Couldn't find the requested assistant %@; creating a new one
%s Assistant not ready.
%s Failed loading/creating assistant %@ elapsed time %lf
%s Retrying after assistant failure
%s Assistant failure (%{public}@). Limit reached, returning error
%s assistantId: %@ speechId: %@ with language %@
%s assistantd id: %@ user agent: %@ language: %@ siri enabled: %d
%s personal requests are disabled, but the companion's assistantId is unknown
%s companion identifier: %@
%s companion has siri enabled: %d
%s companion is unreachable
%s WiFi became available and we're not on a request restarting connection
%s We're in a request, we'll check for a wifi transition afterward
%s Clearing flag to switch to WiFi on request end
%s Asking delegate if we should restart on wifi
%s Switching to WiFi on request end
%s assistantId: %@ loggingAssistantId: %@ speechId: %@
%s Probing the connection
%s Using precached metrics
%s Failed to register for ringer switch state change
%s Rejecting remote command because Siri is disabled
%s error? %@;  reply: %@ -> %@
%s Malformed command dictionary: %@
%s Response came back from the companion: %@
%s Executing command on device for assistant id: %@
%s Unable to find remote device for execution
%s Error: %@
%s Unable to find command for remote execution
%s Couldn't load manager class %{public}@
%s Loading AB Bundle at path %@
%s Loaded AB Bundle %@
%s Handling command (%@) for domain (%@)
%s An incoming video call exists. Answering it as audio and returning success.
%s An incoming call exists. Answering it and returning success
%s Outgoing call hung up. Active call remains: %d
%s Active call hung up. Active call remains: %d
%s Held call hung up. Active call remains: %d
%s No calls exist. Returning failure
%s ACE domain signal request handler asked to handle request %@, but didn't know how
%s timed out
%s completion called
%s Detaching from session %p
%s Already attaching to session!
%s Attaching to session
%s Failed attaching to bt session %d
%s session = %p, result = %d
%s session = %p
%s Session is NULL.
%s Failed getting default local device from session %p (result = %d).
%s Failed adding callbacks to local device %p from session %p (result = %d).
%s localDevice = %p, event = %d, result = %d
%s Failed getting default accessory manager from session %p (result = %d).
%s Failed adding callbacks to accessory manager %p from session %p (result = %d).
%s accessoryManager = %p, accessoryEvent = %d, device = %p, state = %d
%s address = %@, headphoneInEarDetectionState = %@
%s Failed getting device address from string %d
%s Failed getting device from address %d
%s %p for address %@
%s Failed getting device from deviceUID %d
%s %p for deviceUID %@
%s connectedDevices = %@
%s pairedDevices = %@
%s Getting connected devices from local device %p...
%s Got %tu connected devices from local device %p.
%s     [%02tu] %@
%s Failed getting connected devices from local device %p (result = %d).
%s Local device is NULL.
%s Loading device info for %@...
%s Loaded device info %@ for %@.
%s Reloading device info for %@...
%s Reloaded device info %@ for %@.
%s Reloading headphone in-ear detection state for %@...
%s Reloaded headphone in-ear detection state %@ for %@.
%s deviceInfo = %@
%s deviceInfo changed from %@ to %@
%s headphoneInEarDetectionState = %@
%s headphoneInEarDetectionState changed from %@ to %@
%s Fetching device info for %@...
%s Fetched device info %@ for %@.
%s Fetching headphone in-ear detection state for %@...
%s Fetched headphone in-ear detection state %@ for %@.
%s Getting BTDevice and BTAccessoryManager for %@...
%s Got BTDevice %p and BTAccessoryManager %p for %@.
%s Device UID and address of %@ are nil.
%s Data source of %@ is nil.
%s Failed getting BTDevice and BTAccessoryManager for %@.
%s Failed getting address from BTDevice %p (result = %d).
%s Failed getting vendor id and product id from BTDevice %p (result = %d).
%s Failed getting InEar capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting in-ear detection enable flag %d
%s Failed getting primary and secondary in-ear status %d
%s origin = %ld
%s deviceIdentifier = %@, messageType = %@
%s %p
%s %p options = %@
%s No location information in request options %@
%s %p bluetoothDevice = %@
%s %p Created new request command group (%@).
%s %p Received reply %@ for command %@.
%s %p Sending command %@...
%s %p Failure sending ace command to client %{public}@
%s %p Invoking request completion with UUID %@...
%s %p Invoked request completion with UUID %@.
%s %p Ignored invoking request completion because UUID mismatched. (_requestUUID = %@, requestUUID = %@)
%s %p success = %d, error = %@
%s %p commandGroup exists, waiting until commandGroup is done...
%s %p commandGroup is done, handling request completed with UUID %@...
%s %p commandGroup does not exist, handling request completed with UUID %@...
%s Sending intermediate error %{public}@
%s failed with Error %{public}@
%s failed registering for ringer state token %{public}u
%s ADShouldSpeak: %d Request Wants TTS: %d Server Wants TTS: %d Stark Mode: %d Car DND: %d Request Info Options: %lu Combined: %d
%s Sending should speak update: %@ to current client %@
%s Sending recording failed %{public}@
%s Sending recognition failed %{public}@
%s %p bluetoothDevice = %@, from = %@, to = %@
%s %@ primary earbud becomes out of ear.
%s %@ secondary earbud becomes out of ear.
%s Asking activation service to deactivate...
%s %@ is not the current client.
%s %p numberOfPresentedUIs = %ld
%s %p configuration = %@
%s %p Invoking overlapping request completion with UUID %@...
%s %p Invoked overlapping request completion with UUID %@.
%s %p Set new request UUID as %@.
%s Shouldn't have a pending request, continuing and canceling it now.
%s Ignoring due to id mismatch %lu != %lu
%s returning bundle reply %@
%s Sending context to tool %@
%s Entered group %@ for command %@.
%s Left group %@ for command %@ (signal = %ld).
%s sync now xpc activity handled
%s sync now xpc activity registered
%s Failed setting activity state to continue
%s Failed setting activity state to done
%s setting new peer fetch interval on initial checkin
%s Backing off to new interval %lld from %lld
%s setting new companion fetch interval on initial checkin
%s Assistant is now enabled, clearing destroy job
%s Got asked for %u packets, have %u
%s [%02u of %02u] Opus packet with %u bytes
%s AudioConverter is sad: 0x%{public}xd
%s Sending %tu packets
%s fetchedAudioState = %@
%s audioSessionID = %lu
%s fromAudioState = %@, toAudioState = %@
%s metrics = %@
%s offlineIdentifier = %@
%s deviceRingerSwitchState = %@
%s SASRecordingInfo.ringerSwitchOff = %d
%s audioAlertStyle = %ld
%s SASRecordingInfo.alertType = %@
%s firstBufferTimestamp (baseline) = %f
%s homeButtonDownTimestamp = %f
%s SASRecordingInfo.buttonDowntime = %llu
%s startRecordingTimestamp = %f
%s SASRecordingInfo.activationTime = %llu
%s SASRecordingInfo.zeroLatencyLaunch = %d
%s activationAlertStartTimestamp = %f
%s SASRecordingInfo.activationAudioAlertStartTime = %llu
%s SASRecordingInfo.activationHapticAlertStartTime = %llu
%s Recording performance numbers on NowPlaying updates for %g seconds
%s Got activity for app context %@ %@
%s Error getting current user activity uuid %{public}@
%s Error getting current user activity from uuid %{public}@
%s Sending notification %@
%s Skipped sending invalid notification. display name %@, date %{public}@
%s AlertContext [+] %@
%s Marking voicemail as played: %@
%s Unable to find voicemail: %@
%s Voicemail contains invalid identifier: %@, %@
%s Using conversation guid: %@
%s Now playing media was not interrupted. It should not be resumed.
%s Interrupted media is video. It should not be resumed.
%s Interrupted now playing app is a resumable first party app.
%s Interrupted now playing app has a resumable third party genre.
%s Start ctxg=%p
%s Got NavStatus ctxg=%p
%s Got NowPlaying ctxg=%p
%s Got Simple Context ctxg=%p
%s Got Music Personalization Token ctxg=%p
%s Done ctxg=%p
%s Could not register for %s notification
%s No longer observing notifications
%s Got %s notification
%s Updating NowPlaying info now for %@
%s Updating NowPlaying info in %.4g seconds
%s group=%p canceling _nowPlayingCoalescingTimer because we are starting an update now
%s group=%p didChange=%d queueState ID=%@
%s Interrupting outstanding request for new request
%s AceId of RestartRequest is %@ requestId is %@
%s object is %@ %@
%s Can restart request if %@
%s Retrying full request
%s latestMappedRequestId is not set for %@
%s Show next event handler asked to handle request %@, but didn't know how
%s Unable to get the shared instance of EKPreferences.
%s No metrics to send.
%s Attempted to send metrics when system is busy.
%s Attempted to send metrics when Assistant and Dictation are disabled.
%s Attempted to send metrics when session is inactive and active session is a requirement.
%s Sending metrics (%@:%@)...
%s Sending metrics (%@)...
%s Sent metrics (%@:%@).
%s Sent metrics (%@).
%s Failed to send metrics (%@:%@).
%s Failed to send metrics (%@).
%s NO (!assistantIsEnabled && !dictationIsEnabled)
%s NO (callIsLikely == YES)
%s NO (isInCall == YES)
%s NO (hasCurrentRequest == YES)
%s NO (hasActiveClients == YES)
%s YES
%s Local eager candidate log context: %@
%s limit = %f, requiresUnlimitedPower = %d, requiresActiveSession = %d
%s Skipped sending metrics to server because it is already sending.
%s Skipped sending metrics to server because the session is not active.
%s Failed to purge deleted analytics events with timestamp before [%@] due to error %@.
%s Done sending metrics to server.
%s Begin sending offline metrics...
%s End sending offline metrics.
%s Begin sending analytics event streams...
%s End sending analytics event streams.
%s Skipped sending analytics event streams to server because time limit is reached.
%s Skipped sending offline metrics to server because time limit is reached.
%s Attempted to send offline metrics when time limit is reached.
%s Attempted to send offline metrics when system is busy.
%s Attempted to send offline metrics when Assistant and Dictation are disabled.
%s Attempted to send offline metrics when the device is on battery.
%s Fetching next offline metrics...
%s Fetched next offline metrics. (offlineIdentifier = %@, metrics = %@)
%s No next offline metrics was fetched.
%s Attempted to send analytics event stream when time limit is reached.
%s Attempted to send analytics event stream when system is busy.
%s Attempted to send analytics event stream when Assistant and Dictation are disabled.
%s Attempted to send analytics event stream when the device is on battery.
%s Fetching analytics event stream UIDs...
%s Failed to fetch analytics event stream UIDs due to error %@
%s No analytics event stream UIDs was fetched.
%s Fetched %tu analytics event stream UIDs %@
%s Using prioritized event stream UID %@
%s Using current event stream UID %@
%s Fetching 128 events from event stream with UID %@ after timestamp %llu
%s Failed to fetch analytics events due to error %@
%s No analytics events was fetched from event stream with UID %@.
%s Fetched %tu analytics events from event stream with UID %@ and timestamp in range [%llu, %llu].
%s Converting %tu analytics events to Events metrics...
%s Converted %tu analytics events to Events metrics %@
%s Failed to delete %tu sent analytics events from event stream with UID %@ and timestamp in range [%llu, %llu] due to error %@.
%s Sending engagement feedback "%@" for aceId %@
%s metrics count %d
%s Invalid notification. applicationID %@, bulletinID %@
%s Unexpected response %@
%s _networkURL is set to nil
%s Already establishing peer streams!
%s Ignoring completion from stale provider
%s Error: %{public}@
%s Peer Provider open complete
%s Bad Peer Header
%s Read Peer Header %@ %d
%s Already %@ peer streams
%s Already %@ network connection
%s %@ %@ %d %d
%s Falling back
%s Using fallback path, but creating new safety net
%s Will open stream with initial payload length %lu
%s opening %lu
%s open complete %ld
%s sequence number %ld doesn't match current %ld. Ignoring
%s Provider doesn't match our current provider. Ignoring
%s We no longer care about the streams we opened here
%s Stream opened with initial payload length %lu, networkOutputBuffer length %lu
%s NetworkOutputBuffer has been reset; initial payload set on this pair of streams is no longer valid
%s Waiting for peer header before restarting peer streams
%s Stale network timer firing
%s Closing potentially stale network streams
%s Network Provider
%s Peer Provider
%s Unexpected %@
%s read %lu bytes
%s error: %@
%s read peer header %@ pop %d reconnect %d
%s HTTP Header is complete
%s HTTP Header is not complete
%s Establishing network connection
%s Waiting for network connection
%s Wrote: %lu
%s no data or error, possibly an already canceled connection
%s zero length data
%s read: %lu
%s Error deregistering for power notifications %{public}d
%s Couldn't decode Speex / Opus buffers for speech log at URL %{public}@
%s Simulating immediate speech capture
%s Simulating buffered speech capture, speech packets sent every %f seconds
%s forceReconnect %d
%s %d %@
%s Connection closed before opening
%s Got an invalid socket
%s Closing valid socket due to other error before setup complete
%s Setting refId to %@ from session request %@
%s reply = %@, command = %@
%s replyCode = %ld
%s callbackForReply = %@
%s Adding flowCommand %@
%s missingReferences %@
%s callbackCommands = %@
%s Error handling %@. %@
%s Key-value count mismatch %lu!=%lu
%s SKIP: unexpected value to set. Class=%@
%s %@:%@ %@ => %@
%s SKIP: invalid store for entry %@. %@
%s unknown response %@
%s Dispatching diagnostic request: %@
%s Could not complete %@: %@/%@
%s Completed %@: %@
%s Error during NACInit %{public}d
%s Got context %p from NACInit
%s Disposing request data failed %{public}d
%s NACKeyEstablishment error %d
%s NACSign error %{public}d
%s Error disposing validation data %{public}d
%s Error destroying NACContext %{public}d
%s Ignoring request to prepare state %d
%s Beginning eager NACInit
%s Not observing call state
%s Starting observing call state
%s Application %@ does not have access to %@, removing %@ from the intent node
%s deviceIdentifier = %@
%s deviceIdentifier = %@, fromGeneration = %llu, toGeneration = %llu
%s Loading synced timer generation for device %@...
%s Loaded synced timer generation %llu for device %@.
%s deviceIdentifier = %@, incrementalChanges = %@
%s Applying incremental changes is not supported for type %@.
%s deviceIdentifier = %@, snapshot = %@
%s Loading synced timer storage for device %@...
%s Loaded synced timer storage %@ for device %@.
%s Dumped device sync snapshot %@ from device %@ to synced timer storage %@.
%s Alarm %@ is not in notifiedFiringAlarmIDs, but isFiring is YES.
%s hasFiringAlarms = %d (local)
%s Found firing alarm %@ from device %@.
%s hasFiringAlarms = %d (remote)
%s Timer %@ is not in notifiedFiringTimerIDs, but isFiring is YES.
%s hasFiringTimers = %d (local)
%s Found firing timer %@ from device %@.
%s hasFiringTimers = %d (remote)
%s mergedClockAlarmSnapshot = %@.
%s mergedClockTimerSnapshot = %@.
%s origin = %ld, client = %@
%s Fetching local alarm and timer snapshots...
%s Fetched local alarm snapshot %@.
%s Done fetching local alarm and timer snapshots.
%s Fetching remote timer snapshots...
%s Fetched remote timer snapshots %@.
%s Done fetching remote timer snapshots.
%s Dismissing firing alarms and timers...
%s Begin mutating timer snapshot.
%s End mutating timer snapshot.
%s Merging local and remote alarms...
%s Adding %tu alarms (local)...
%s Adding %tu alarms (remote %@)...
%s Merged %tu local and remote alarms.
%s Merging local and remote timers...
%s Adding %tu timers (local)...
%s Adding %tu timers (remote %@)...
%s Merged %tu local and remote timers.
%s includingAlarms = %d, includingTimers = %d
%s Alarm is not supported on this platform.
%s Timer is not supported on this platform.
%s intentResponse.backingStore = %@
%s %@ handling %@
%s No transformed requests returned from request transformer %@ for command %@
%s Got response %@ (error=%@) for command: %@, handled by service: %@
%s Unable to use boot session UUID as stream UID, falling back to in memory UUID instead.
%s streamUID = %@
%s Failed to save %tu events to the analytics store due to error %@.
%s Attempted to suspend events staging while already suspended.
%s Attempted to resume events staging while not suspended.
%s Created link at %@.
%s Failed to create link at %@ due to error %@.
%s Failed to create directory at %@ due to error %@.
%s Deleted link at %@.
%s Failed to delete link at %@ due to error %@.
%s Buddy is %@
%s Buddy is now %@
%s unable to obtain reference to Address Book: %{public}@
%s Got context for pid %d
%s %s push context for %s %d
%s Push context time out for pid %@
%s Optimistically trying eager fetch again on wake up timeout after socket success
%s Denying optimistic retry as we haven't vended socket since the last time.
%s Canceling optimistic socket fetch since we already have a _deviceConnection
%s Already have valid socket, returning immediately
%s Already getting device socket, waiting for completion
%s Asking for socket now
%s No Paired device returning immediately
%s no nearby device; returning immediately
%s got device connection completion for identifier %@ with error=%{public}@
%s got device connection completion for %@
%s device connection was closed while we were getting socket (expected %@; found %@); returning an error
%s Optimistically trying eager fetch again on socket success after wake up timeout
%s Not completing socket fetch since we have a new one outstanding
%s Ignoring close request since current streams have not been vended
%s Ignoring close request because connection %p did not open current stream %p
%s Wake up message failed %{public}@
%s Sending getRemoteMetrics request for id %@
%s Metrics response timed out
%s Reestablish message failed %{public}@
%s %@ %@ %@ %@
%s type = %d
%s Don't know how to make request for %d
%s Error sending metrics response %{public}@
%s Current Stream Identifier %@ Remote Stream Identifier %@
%s Eagerly getting device socket
%s %lu
%s Nearby device disappeared, closing cached streams
%s No completion, closing down.
%s No current IDS device connection
%s Using cached authorization status
%s Fetching authorization status
%s Performing shift from location: %{private}@
%s Using unshifted location because location shift failed due to error: %@
%s Stopping location monitoring
%s Canceling location timer
%s Scheduling location timer for %lf
%s Location timer firing
%s Starting location monitoring
%s Should send location for desired accuracy %lf %@
%s Asking for location from peer
%s Received location from peer: %{private}@
%s Received empty location response from peer
%s Requesting best location
%s %{private}@
%s Ignoring location older than _lastPeerLocation
%s CLAuthorizationStatus changed %d isEnabled %@
%s %@ %{private}@
%s Unknown status %{public}@
%s Given a location, but no explicit location status -- assuming we are authorized to use locations
%s Location Services Disabled
%s Location Services Denied for assistant
%s Using cached location
%s No cached location, waiting for first update
%s Acquiring location-in-use assertion for reason: %@
%s creating location-in-use assertion
%s Releasing location-in-use assertion for reason: %@
%s nilling out reference to location-in-use assertion
%s deviceIdentifier = %@, incomingMessage = %@
%s generationsByDataType = %@
%s dataTypes = %@
%s dataType = %@, generation = %llu, limit = %llu
%s incrementalChanges = %@
%s dataType = %@
%s snapshot = %@
%s error = %@
%s Ignoring invalid anchor from server: %@
%s Queuing anchors from %@ because we are already syncing; active request: %@
%s Malformed app source - no clientIdentifier: %@
%s Error finding all Siri Extensions %{public}@
%s No paired watch found or unable to retrieve installed watch applications: %{public}@
%s Asking for anchor keys %@
%s Not forcing a reset since we're alreay in the middle of a sync. Wait and try again
%s Forcing a reset sync
%s Waiting for sync queue to start sync
%s Starting sync %@ for reasons %@
%s Resuming SyncAnchorsQueue
%s will reference promise %@: %d
%s Got snapshot for %@: %@
%s %@ isn't the get anchors response we were expecting. getAnchorsRequest:%@
%s Got server side sync data: %@
%s Server is done sending sync data
%s Sync Verification request %@ is enqueued; ignoring %@
%s Already verified sync data over the last 24 hours, ignoring
%s keys: %@
%s Sending checksums for keys: %@
%s Nothing to sync
%s Ignoring request to sync using unsupported language %@
%s Not syncing %@ because there's no sync plugin for it
%s Don't know how to create a transcription result for %@
%s Unable to build metrics out of no event records.
%s Dropped %tu events because no timings can be extracted from the events.
%s Alarm handler asked to handle request %@, but didn't know how
%s Ran an analysis very recently ignoring
%s Starting analysis for url %@
%s Starting analysis for request url %@
%s Starting analysis for retry success for url %@
%s analysis connection failure %{public}s
%s Stopping all outstanding playback requests
%s Reuse existing session %@ from reusable session pool.
%s Create new session %@.
%s audioPlaybackSession = %@
%s audioPlaybackSession = %@, error = %@
%s Add successfully stopped session %@ to reusable session pool.
%s Evict %tu sessions from reusable session pool because audio session ID has changed or invalidated.
%s Reusable session pool is already empty.
%s Evict %tu sessions from reusable session pool becasue memory pressure condition is beyond normal condition.
%s Malformed info plist value for key %{public}@ in bundle %{public}@
%s Deferring context clearing until we have a valid connection for %@
%s connection reset requested...
%s connection reset
%s no bundleID!
%s got %@ items for %@ from %@
%s Vocabulary updates are disabled for %@, acting as-if there are no changes.
%s %{public}@ is not allowed to sync user vocabulary of type %{public}@
%s Posting sync notification for reason: %@
%s Ignoring attempt by %{public}@ to update %{public}@
%s Removed all local user-vocabulary for %{public}@
%s User-vocabulary updates are throttled for %{public}@ not pushing delete
%s Ignoring attempt by %{public}@ to request Siri authorization while not in the foreground
%s Received -logConnectionOpenWithConnectionType: with no corresponding -logConnectionStart. Unable to determine how long it took to open the connection.
%s Received -logVoiceRecordingEnd with no corresponding -logVoiceRecordingStart. Unable to determine how long voice recording lasted.
%s Received -logVoiceSendEnd with no corresponding -logVoiceSendStart. Unable to determine how long voice transfer lasted.
%s Received -logSpeechRecognized with no corresponding -logVoiceRecordingEnd. Unable to determine duration since voice recording completed.
%s Received -logSpeechRecognized with no corresponding -logVoiceSendEnd. Unable to determine duration since voice send completed.
%s Unable to submit AWD metric 0x%lx
%s Hot-ship metric 0x%lx does not respond to -setTimestamp:. Will not set timestamp.
%s Unable to retrieve image data = %@
%s Request delegate unable to handle command. Allowing fallback handler a chance
%s No request delegate to handle command
%s Timer handler asked to handle request %@, but didn't know how
%s Resetting sessions due to hostname change
%s %@ is requesting shared data
%s companion identifier is already set in account
%s using cached data for companion identifier
%s unable to sync because we cannot find the companion device among our peers
%s unable to sync because there is no configured companion device
%s Updating peer assistant id: %@
%s Updating peer speech id: %@
%s Updating peer hostname: %@
%s Updating peer user agent string: "%@"
%s Updating peer language code: %@
%s Setting new language code from cloud data
%s Not setting language code due to previous mismatch
%s current restricted: %@ new restricted: %@
%s Updating temperature unit to: %@
%s Resetting sessions due to account settings change
%s peers: %@
%s unable to sync data from empty peer set
%s unique device id for peer: %@
%s requesting preheat because assistantId is not configured
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s Extension Request timed out after %{public}f seconds for command %@
%s Extension load type = %@
%s Using the current connection %@ because the intent is nil.
%s Using the current connection %@ because the intent identifier is nil.
%s Replacing the current connection %@ because the intent identifier is %@.
%s Prewarmed bundle for applicationIdentifier %@
%s About to prewarm an extension for %@ (%@:%@) without an identifier. Assigning a new identifier: %@
%s Error finding extension for prewarming: %@
%s Prewarmed extension: %@
%s timed out waiting on CKShouldShowPreviewOnLockscreen().
%s Unable to find offline metrics plist path at path %@.
%s Unable to read offline metrics plist file at path %@.
%s Unable to initialize offline metrics plist from file at path %@ due to error %@
%s Unexpected type of initialized offline metrics plist %@.
%s Unable to create SAMetrics object from offline metrics plist %@.
%s Unable to create directory at path %@ due to error %@.
%s Unable to remove file at path %@ due to error %@.
%s Offline metrics plist file already exists at path %@.
%s Unable to serialize offline metrics plist %@ due to error %@.
%s Unable to write to offline metrics plist %@ to path %@ due to error %@.
%s Unable to exclude offline metrics plist file at path %@ from backup due to error %@.
%s offlineIdentifiers += %@
%s Unable to remove metrics plist file at path %@ due to error %@.
%s offlineIdentifiers -= %@
%s Unable to remove directory at path %@ due to error %@.
%s offlineIdentifiers = %@
%s app (%@) can be launched - filtering
%s app (%@) can not be launched due to '%@' - bailing
%s Found %tu apps matching name %@: %@
%s Dictation transaction ended in cancel
%s Dictation transaction ended in remote recognition
%s Dictation transaction ended in local recognition
%s Utterance detection for live recognition not yet supported; disabling. <rdar://problem/23691545>
%s Called from outside of an XPC connection
%s Connection (%{public}@) requires entitlement for pre-recorded dictation
%s %@ raw eager candidate: %@
%s Connection (%{public}@) cannot use pre-recorded dictation; needs dictation prerecored entitlement or speech recognition entitlement
%s Connection (%{public}@) cannot use pre-recorded speech recognition; cannot start from the background
%s Resetting %@ session with Id %@
%s Started a session with id %@, count = %tu
%s Starting sessions and make quiet: %d
%s Pending until request is over
%s Resetting immediately
%s shared user identifier changed to %@
%s language code changed to %@
%s Canceling connection due to power change notification %@
%s Command %@
%s Session %@ (type %d) wins with reason %@ preferred %d remoteSessionScore %ld localSessionScore %ld
%s holdTime is %d
%s Restarting timer as there is no winning session yet
%s We have results from preferred session. Evaluate.
%s Started queueing result objects
%s Command is %@ and %d
%s Destructive command with no RefId. File bug.
%s Cannot remap to other sessions with refId %@
%s Out of band destructive commands with %@ refId
%s (refId %@) causing us to cancel other session request (refId %@)
%s Session %@ wins by default.
%s shouldContinue is %d
%s Session will start connection
%s Session did open connection with type %d
%s All sessions active now.
%s Dropping command not from winning session.
%s Sending CommandFailed as command required response.
%s Session %@ wins with command %@
%s Ignoring as the winner has been chosen already.
%s Session received error but other active sessions present. Ignoring error %@ %d
%s Session log visible request failure
%s Session %@ connection did reset
%s Session should attempt retry
%s Request Id is %@ and oldSessionRequestId is %@ newSessionRequestId is %@
%s Proxied map is %@ reverse Proxied map is %@
%s Session did create assistant
%s Session will retry on error
%s Session begin retry preferring WWAN
%s Setting RequestId to %@
%s Bounce back command is %@
%s Final speech recognition arrived
%s session %@ cannot handle request or has non null refId
%s command %@ filtered for session %@
%s not sending command %@ to session %@
%s command %@ does not belong to session %@
%s Resetting Sessions at Request Boundary
%s Request Id %@ for %@ session with Id %@ has proxied request Id %@
%s Previous winner session %@ reused for current request %@
%s Session %@ is active or is in active retry
%s Siri Mini cannot be started for connection mode %@ language %@
%s Siri Mini not enabled
%s Removing key %@
%s Removing matching request Id %@
%s Reset winning session Id %@
%s sessionType is not defined
%s winningReason is not defined
%s Siri Mini speech recognized called before sessions were set up
%s Filtering SpeechRecognized from Siri Mini as %@ is the winner
%s Will call xpc_transaction_end()
%s Did call xpc_transaction_end() with new XPC transaction count %ld
%s (oldState = %ld, newState = %ld)
%s Will call xpc_transaction_begin()
%s Did call xpc_transaction_begin() with new XPC transaction count %ld
%s will call xpc_transaction_begin()
%s Initial fetch took too long, timing out.
%s Manually requesting assistant data update
%s No actual change, ignoring me card change notification
%s Updating assistant data for me card change notification
%s Current store front has changed to %@; updating assistant data
%s Not generating assistant data because we don't have some necessary cached data
%s Generating assistant anchor values %@
%s Updating country configuration for assistant data
%s Cached voice for assistant data updated from %@ to %@.
%s Cached voice for assistant data is still %@.
%s Retrieving best available voice asset for voice info %@...
%s Retrieved best available voice asset %@ for voice info %@.
%s Unable to get the default instance of SSAccountStore.
%s Unable to get the current instance of SSDevice.
%s Unable to get store front identifier: %@
%s No store front identifier available
%s VoiceOver status changed, updating assistant data
%s Don't know how to make a request for this info %@ %@
%s Don't know how to make a local request for this info %@ %@
%s Don't know how to set push off request paylaod
%s Lost mode is active, not sending any outbound requests
%s No place to send this
%s Failed sending message type %d %{public}@
%s Has active account: %d
%s AirPlay route did not change
%s %@ %{public}@
%s Request success %d
%s Dropping incoming message because Lost Mode is active
%s Dropping incoming message with unknown sender
%s Type %d from %@. Incoming %@ Outgoing %@ Expects Response %d
%s Response class is %d doesn't match %d
%s Handling response of type %d
%s Completing request
%s %ld responses remaining
%s %lu acounts
%s %lu devices
%s device: %@
%s %d
%s stereo partner changed to: %@
%s lastWin changed to: %@
%s Received message with unhandled method type: %ld
%s Received message from device not in stereo pair: %@
%s Received message with unknown method name: %@
%s Received malformed lastWin data
%s Got restricted apps: %@
%s Dispatching phone search for overridden application context %@
%s Phone search reply for %@ %@ %@
%s Releasing ContextManager %p
%s has %ld settings, but can only handle one. Dropping all but the first on the floor.
%s has %ld setting changes, but can only handle one. Dropping all but the first on the floor.
%s vibration state fetched from CFPreferences is NULL, using On as default value
%s sessionUUID = %@
%s Can not find an active session
%s Can not find an active session with UUID %@
%s Beginning dictation transcription XPC transaction because %@
%s Beginning dictation audio file XPC transaction because %@
%s Ending dictation transcription XPC transaction because %@
%s Ending dictation audio file XPC transaction because %@
%s Ignoring App notification for placeholders
%s Ignoring App notification for forced update
%s Ignoring CK notification because there's no correction profile change
%s User hasn't used Siri or dictation in the past %tu days, not syncing for %@
%s %@ (%@ / prev: %@ / value: %@ / %@)
%s Creating audio player...
%s Failed to create audio player due to error %@.
%s Created audio player %@.
%s Reusing audio player %@...
%s Audio player %@ is already prepared to play.
%s Preparing audio player %@ to play...
%s Failed to prepare audio player %@ to play.
%s Prepared audio player %@ to play.
%s request = %@
%s Ignored because the session is already active.
%s Ignored because the audio player is already playing.
%s Asking audio player %@ to play...
%s Failed to play audio player %@.
%s Started playing audio player %@.
%s request = %@, immediately = %d
%s Stopping audio player...
%s Ignored because there's no audio player to stop.
%s _request = %@
%s Ignored because there's no audio player to pause.
%s _request = %@, shouldResume = %d
%s Ignored because there's no audio player to resume playing.
%s request = %@, error = %@
%s Ignored because there's no audio player to destroy.
%s request = %@, player = %@, success = %d
%s request = %@, player = %@, error = %@
%s Settings is fetching supported languages
%s On dictation enabling tried to fetch offline models, got %@ into %@
%s Shutting down at the request of settings
%s Got sync command on connection %@
%s Got sync finished notification %@
%s Got sync verification finished notification %@
%s %@ delivered to the wrong service
%s Sync Verification: domain objects in toRemove list for sync verification
%s with chunk info %@
%s Sync verification got domain object with no identifier %@
%s Error getting file path from provided file handle; will create our own path and handle
%s Failure disposing audio file %{public}d
%s Error removing item at URL %{public}@
%s Configuring with asbd %.4s
%s Creating audio file at URL %@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s No file url on flush
%s Failed opening fd for flushed audio file %{public}s
%s inASBD->mChannelsPerFrame = %lu
%s Error getting format info for type %{public}.4s %{public}.4s
%s CSActivationEventNotifier returned error %@ for activation context %@.
%s Unexpected event in context %@.
%s No device ID is provided in context %@.
%s Unexpected source in context %@.
@16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@16@24
v32@0:8@16^{NSMutableDictionary=#}24
^{NSDictionary=#}24@0:8@16
^{NSDictionary=#}32@0:8^{NSDictionary=#}16@24
v24@0:8^{NSDictionary=#}16
v16@0:8
^{NSDictionary=#}
@"NSObject<OS_dispatch_queue>"
v24@0:8@16
v48@0:8@16@24@32@?40
q16@0:8
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v40@0:8@16@24@32
v40@0:8@"HMUser"16@"HMAssistantAccessControl"24@"HMHome"32
v32@0:8@"HMUser"16@"HMFPairingIdentity"24
v32@0:8@16Q24
@"HMHomeManager"
@"HMHome"
@"ADHomeInfo"
v20@0:8B16
@32@0:8@16@24
v28@0:8B16@20
v24@0:8@?16
@"NSString"
@"CSAudioRecordContext"
@"CSAudioRecordDeviceInfo"
@"NSDictionary"
@"NSObject<OS_dispatch_group>"
@"NSMutableSet"
@"NSURL"
@24@0:8@16
B32@0:8@16@24
@"NSMutableArray"
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
@40@0:8@16@24@32
f24@0:8@16
@40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSArray"16@0:8
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@"NSSet"40@0:8Q16Q24@32
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
v32@0:8@16d24
@"BBDataProviderConnection"
@"BBDataProviderProxy"
@"<ADBulletinBoardProviderDataSource>"
Vv24@0:8@?16
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@32
Vv24@0:8@16
Vv36@0:8@16@24B32
Vv32@0:8@16@24
Vv44@0:8@16B24@28@36
Vv32@0:8q16@24
Vv32@0:8@16@?24
Vv24@0:8@?<v@?>16
Vv48@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32@?<v@?@"NSXPCListenerEndpoint">40
Vv40@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32
Vv24@0:8@"AFSpeechRequestOptions"16
Vv36@0:8@"AFDictationOptions"16@"NSString"24B32
Vv24@0:8@"NSData"16
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSDictionary"24
Vv24@0:8@"NSString"16
Vv24@0:8@"NSError"16
Vv44@0:8@"NSURL"16B24@"NSString"28@"AFDictationOptions"36
Vv32@0:8q16@"NSString"24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv28@0:8@16B24
Vv20@0:8B16
Vv44@0:8@16B24@28@?36
v32@0:8B16B20@?24
Vv28@0:8B16@?20
Vv40@0:8@16@24@?32
Vv32@0:8B16B20@?24
Vv28@0:8f16@?20
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSDictionary"16B24
Vv44@0:8@"NSArray"16B24@"NSString"28@?<v@?@"NSArray">36
v32@0:8B16B20@?<v@?@"NSArray">24
Vv24@0:8@"NSArray"16
Vv28@0:8B16@?<v@?@"NSArray">20
Vv32@0:8@"AFVoiceInfo"16@?<v@?>24
Vv32@0:8@"NSString"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv40@0:8@"NSString"16@"NSData"24@?<v@?@"NSData"@"NSError">32
Vv24@0:8@"NSURL"16
Vv40@0:8@"AFRequestInfo"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8@"AFAudioPlaybackRequest"16@?<v@?@"NSError">24
Vv28@0:8@"AFAudioPlaybackRequest"16B24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSArray"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSDate"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?@"AFExperimentContext"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray">24
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"NSDictionary"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8B16B20@?<v@?B>24
Vv24@0:8@?<v@?f@"NSError">16
Vv28@0:8f16@?<v@?@"NSError">20
Vv32@0:8@"NSString"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv32@0:8@"NSUUID"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv40@0:8@"NSArray"16@"NSString"24@?<v@?B>32
v24@0:8@?<v@?q>16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?B>24
Vv32@0:8@"NSDictionary"16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary">24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
d16@0:8
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v36@0:8^@16^@24i32
v28@0:8@16B24
v24@0:8d16
@"NSXPCListener"
@"NSObject<OS_xpc_object>"
@"ADExternalRequestListener"
@"ADClientLiteListener"
@"ADSiriTetherListener"
@"ADSiriConnectionRemote"
@"ADPeerLocationRemote"
^{MGNotificationTokenStruct=}
@24@0:8^{_NSZone=}16
v20@0:8I16
v24@0:8Q16
@24@0:8Q16
I16@0:8
{?="firstByteReadInterval"b1"openInterval"b1"pingMean"b1"rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"tuscanyConnectionDelay"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"attemptCount"b1"connectedSubflowCount"b1"connectionFallbackReason"b1"metricsCount"b1"pingCount"b1"primarySubflowSwitchCount"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"subflowCount"b1"synRetransmits"b1"unacknowledgedPingCount"b1}
@"NSData"
v40@0:8@"ADPeerConnection"16@"PBCodable"24@?<v@?@"PBCodable"@"NSError">32
v28@0:8@"ADPeerConnection"16B24
v24@0:8@"ADPeerLocationPolicy"16
@"<ADPeerLocationConnectionDelegate>"
@"ADPeerConnection"
@"ADPeerLocationPolicy"
v28@0:8B16@?20
@"ADSharedData"
@"<ADSharedDataNotificationDelegate>"
B24@0:8^q16
@128@0:8B16B20B24q28@36@44@52@60I68I72@76d84d92d100Q108@116B124
@28@0:8B16@20
@"<ADBluetoothDevice>"
v32@0:8@"SABaseClientBoundCommand"16@?<v@?@"AFSiriRequest">24
@"<SAAceCommand>"40@0:8@"AFSiriResponse"16@"NSError"24@"SABaseClientBoundCommand"32
@24@0:8q16
@"AFVoiceInfo"
@"NSArray"
@"<ADSessionLocalConnectionDelegate>"
v40@0:8@16^@24^@32
v24@0:8@"NSString"16
@?16@0:8
@"AFRequestInfo"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@"NSDate"
v24@0:8@"NSDate"16
v24@0:8@"NSArray"16
@"ADDeviceSyncSnapshot"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasItems"b1}
@24@0:8@?16
v48@0:8@16@24@32@40
v48@0:8@"AFClockItemStorage"16@"NSSet"24@"NSSet"32@"NSSet"40
@"NSMutableDictionary"
Vv20@0:8i16
Vv32@0:8@16i24i28
Vv32@0:8@"NSData"16i24i28
Vv24@0:8@?<v@?@"NSData">16
v24@0:8^{AudioStreamBasicDescription=dIIIIIIII}16
@"NSXPCConnection"
@"<ADAcousticFingerprinterDelegate>"
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
Vv56@0:8@16@24@32@40@?48
Vv48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?@"NSDictionary"@"NSArray"@"NSError">40
Vv56@0:8@"NSString"16@"NSString"24@"NSUUID"32@"AFSyncInfo"40@?<v@?>48
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"AFSyncSnapshot">40
Vv32@0:8@"NSString"16@"NSString"24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?>32
Vv72@0:8@16@24@32@40@48@56@?64
Vv72@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSUUID"56@?<v@?B>64
Vv32@0:8@"NSURL"16@?<v@?B>24
Vv24@0:8@?<v@?B>16
Vv32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"AFPeerInfo">24
@72@0:8@16@24@32@40@48@56@64
d24@0:8@16
v40@0:8@16@?24@?32
@"ADServiceStatistics"
@"<ADServiceConnectionDelegate>"
@"ADServiceConnection"
v32@0:8@"<ADDeviceSyncMessagingService>"16@"NSString"24
v48@0:8@"<ADDeviceSyncMessagingService>"16@"ADDeviceSyncMessage"24@"NSString"32@?<v@?@"ADDeviceSyncMessage"@"NSError">40
v24@0:8@"<ADDeviceSyncDataProviding>"16
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@36@0:8@16^?24B32
@32@0:8@16^?24
B24@0:8^@16
v40@0:8@16#24@?32
v48@0:8@16#24d32@?40
v48@0:8@16#24B32B36@?40
v64@0:8@16#24B32d36B44B48B52@?56
v32@0:8@16^?24
@"IDSService"
@"<ADPeerConnectionDelegate>"
@24@0:8@"NSDictionary"16
@32@0:8@"NSDictionary"16@"<AceContext>"24
@"NSMutableDictionary"16@0:8
v40@0:8@16@24d32
v32@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24
v40@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24d32
v32@0:8@"ADSessionLocalConnection"16@"AceObject"24
v24@0:8@"ADSessionLocalConnection"16
v32@0:8@"ADSessionLocalConnection"16@"NSError"24
@64@0:8@16@24@32@40@48@56
@"ADSessionLocalConnection"
^{__CFDictionary=}
@"ADDeviceSyncCommandPushGenerationsResponse"
v24@0:8@"ADAVSystemControllerLifecycleManager"16
v40@0:8Q16d24@?32
v36@0:8f16q20@?28
v36@0:8@16f24@28
@"CSSpeechController"
@"AFClientConfiguration"
@"AFExperimentContext"
v32@0:8@"AFClockTimerObserver"16@"NSUUID"24
v40@0:8@"AFClockTimerObserver"16@"AFClockTimerSnapshot"24@"AFClockTimerSnapshot"32
v40@0:8Q16Q24@?32
v24@0:8@?<v@?Q>16
v40@0:8Q16Q24@?<v@?@"NSArray"@"NSError">32
v24@0:8@?<v@?@"ADDeviceSyncSnapshot"@"NSError">16
@"<ADDeviceSyncDataProviderDelegate>"
@96@0:8Q16q24@32@40@48@56@64@72@80@88
@"ADDeviceSyncCommandPushGenerationsRequest"
@"ADDeviceSyncCommandPullGenerationsRequest"
@"ADDeviceSyncCommandPullGenerationsResponse"
@"ADDeviceSyncCommandPullDeltaRequest"
@"ADDeviceSyncCommandPullDeltaResponse"
@"ADDeviceSyncCommandPullSnapshotRequest"
@"ADDeviceSyncCommandPullSnapshotResponse"
v24@0:8q16
v24@0:8@"ADDeviceSyncCommandPushGenerationsRequest"16
v24@0:8@"ADDeviceSyncCommandPushGenerationsResponse"16
v24@0:8@"ADDeviceSyncCommandPullGenerationsRequest"16
v24@0:8@"ADDeviceSyncCommandPullGenerationsResponse"16
v24@0:8@"ADDeviceSyncCommandPullDeltaRequest"16
v24@0:8@"ADDeviceSyncCommandPullDeltaResponse"16
v24@0:8@"ADDeviceSyncCommandPullSnapshotRequest"16
v24@0:8@"ADDeviceSyncCommandPullSnapshotResponse"16
@"ADDeviceSyncMessage"
{_mutationFlags="isDirty"b1"hasSequence"b1"hasType"b1"hasCommandPushGenerationsRequest"b1"hasCommandPushGenerationsResponse"b1"hasCommandPullGenerationsRequest"b1"hasCommandPullGenerationsResponse"b1"hasCommandPullDeltaRequest"b1"hasCommandPullDeltaResponse"b1"hasCommandPullSnapshotRequest"b1"hasCommandPullSnapshotResponse"b1}
@48@0:8@16@24d32@?40
@"AFWatchdogTimer"
B24@0:8^f16
B24@0:8^d16
v24@0:8@"SASyncChunk"16
v24@0:8@?<v@?@"NSArray">16
v32@0:8@?16@?24
@"AFQueue"
Vv40@0:8@16B24B28@?32
Vv40@0:8@"SABaseCommand"16B24B28@?<v@?B@"NSError">32
v24@0:8@"AceObject<SAAceCommand>"16
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>"@"NSError">24
v28@0:8B16@"NSError"20
v24@0:8@"NSError"16
@"<AFClientLiteClientCommandHandling>"
@32@0:8@?16@?24
{_mutationFlags="isDirty"b1"hasDataType"b1}
@48@0:8@16@24@32@40
v32@0:8d16@?24
v24@0:8@"NSDictionary"16
{_mutationFlags="isDirty"b1"hasGenerationsByDataType"b1}
v36@0:8@16@24B32
v32@0:8@"ADSessionManager"16@"AceObject<SAAceCommand>"24
v36@0:8@"ADSessionManager"16@"NSError"24B32
B32@0:8@"ADSessionManager"16@"NSError"24
v24@0:8@"ADSessionManager"16
B24@0:8@"ADSessionManager"16
@"NSArray"24@0:8@"ADSessionManager"16
v40@0:8@"ADSessionManager"16@"NSString"24@"NSString"32
v28@0:8@"ADSessionManager"16B24
v32@0:8@"ADSessionManager"16@"NSError"24
v52@0:8@16d24B32@36@44
v48@0:8@16@24d32q40
v32@0:8@16f24f28
v64@0:8@16q24q32q40@48@56
v40@0:8@16d24@32
v48@0:8@16q24@32@?40
v40@0:8@"ADSpeechManager"16@"ADRecordingInfo"24@"ADSpeechCapturingContext"32
v52@0:8@"ADSpeechManager"16d24B32@"AFXPCWrapper"36@"NSString"44
v40@0:8@"ADSpeechManager"16@"ADRecordingInfo"24@"NSString"32
v48@0:8@"ADSpeechManager"16@"NSArray"24d32q40
v40@0:8@"ADSpeechManager"16@"NSData"24d32
v24@0:8@"ADSpeechManager"16
v32@0:8@"ADSpeechManager"16f24f28
v64@0:8@"ADSpeechManager"16q24q32q40@"CSEndpointerMetrics"48@"NSString"56
v32@0:8@"ADSpeechManager"16@"NSString"24
v40@0:8@"ADSpeechManager"16@"NSError"24@"NSString"32
v48@0:8@"ADSpeechManager"16@"NSFileHandle"24@"NSError"32@"NSString"40
v40@0:8@"ADSpeechManager"16@"NSString"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"NSArray"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechRecognition"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechPackage"24@"NSString"32
v48@0:8@"ADSpeechManager"16@"NSError"24@"NSString"32@"NSDictionary"40
v40@0:8@"ADSpeechManager"16d24@"NSString"32
v48@0:8@"ADSpeechManager"16q24@"NSString"32@?<v@?dd@"NSError">40
v28@0:8@"ADSpeechManager"16B24
v32@0:8@"ADLocationManager"16@"SASetRequestOrigin"24
v32@0:8@"ADUIService"16@?<v@?>24
v32@0:8@"ADExtensionService"16@"INImage"24
v32@0:8@"ADExtensionService"16@"NSString"24
v40@0:8@"ADExtensionService"16@"NSString"24@"NSError"32
v48@0:8@"ADExtensionService"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v32@0:8@"ADAudioPlaybackService"16@"AFAudioPlaybackRequest"24
v40@0:8@"ADAudioPlaybackService"16@"AFAudioPlaybackRequest"24@"NSError"32
v32@0:8@?16@24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v24@0:8B16B20
v28@0:8q16B24
v40@0:8@16d24@?32
v36@0:8d16B24@?28
v40@0:8q16@24@?32
v40@0:8Q16q24@?32
v32@0:8Q16@?24
v56@0:8@16@24@32B40B44@?48
v44@0:8@16B24@28@?36
v64@0:8@16@24@32@40@48@?56
v60@0:8@16B24@28@36@44@52
v44@0:8@16@24B32@?36
v48@0:8@16B24B28@32@?40
v36@0:8@16B24@28
v32@0:8q16@24
v32@0:8q16@?24
v56@0:8B16B20B24B28B32B36@40@48
v48@0:8d16B24B28B32B36@?40
v40@0:8@16Q24@?32
@"<ADCommandCenterClient>"
@"<ADCommandCenterRequestDelegate>"
@"<ADCommandCenterSpeechDelegate>"
@"AFSafetyBlock"
@"ADUIService"
@"ADFauxUIService"
@"ADAccount"
@"ADSessionManager"
@"ADDiagnosticsManager"
@"ADSpeechManager"
@"ADServiceManager"
@"ADDomainObjectCache"
@"ADResultObjectCache"
@"ADLocationManager"
@"ADMotionManager"
@"ADRemoteRequestHelper"
@"ADRemoteSpeechRequestHelper"
@"ADAudioPlaybackService"
@"ADDeviceSyncCoordinator"
@"ADSpeechCapturingContext"
@"AFSpeechRequestOptions"
@"SASStartSpeech"
@"SASFinishSpeech"
@"SABaseCommand"
@"SASPronunciationContext"
@"SASResultCandidate"
@"ADCallObserver"
@"NSUUID"
@"NSObject<OS_os_transaction>"
@"AFAWDSiriSession"
@"AFAWDSiriRequestRecord"
@"NSNumber"
@"ADOfflineMetricsManager"
@"ADContextManager"
@"SAClearContext"
@"ADSyncManager"
@"<ADCommandCenterSyncDelegate>"
@"ADSyncVerificationHelper"
@"ADSyncDeepVerificationManager"
@"ADAcousticIDHelper"
@"NSObject<OS_dispatch_source>"
@"ADSharedDataService"
v24@0:8@"ADDeviceSyncSnapshot"16
{_mutationFlags="isDirty"b1"hasSnapshot"b1}
@32@0:8q16@24
{_keychainDataMutationFlags="assistantIdentifierIsDirty"b1"loggingAssistantIdentifierIsDirty"b1"speechIdentifierIsDirty"b1"peerAssistantIdentifierIsDirty"b1"peerLoggingAssistantIdentifierIsDirty"b1"peerSpeechIdentifierIsDirty"b1"peerUserAgentStringIsDirty"b1"peerLanguageCodeIsDirty"b1"peerSiriEnabledIsDirty"b1"gizmoDataIsDirty"b1}
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
S16@0:8
v32@0:8@16q24
^{NSMutableDictionary=#}16@0:8
^{NSMutableDictionary=#}
@32@0:8@16q24
@"<ADService>"
v40@0:8@"AFSiriRequest"16@?<v@?>24@?<v@?@"AFSiriResponse"@"NSError">32
i24@0:8@16
v32@0:8@"ADAssistantDataManager"16@"SASetAssistantData"24
i16@0:8
v20@0:8i16
@"SiriCoreConnectionType"
@"<ADSessionDelegate>"
@"SASetAssistantData"
{_mutationFlags="isDirty"b1"hasIncrementalChanges"b1}
v40@0:8@"ADDeviceSyncMessage"16@"NSString"24@?<v@?@"ADDeviceSyncMessage"@"NSError">32
@"<ADDeviceSyncMessagingServiceDelegate>"
v32@0:8@"ADDeviceSyncMessage"16@?<v@?@"ADDeviceSyncMessage"@"NSError">24
@"<ADDeviceSyncMessagingService>"
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"NSArray"24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16d24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"AFSpeechRecognition"24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"AFSpeechPackage"24
v40@0:8@"SiriCoreLocalSpeechRecognizer"16@"NSDictionary"24@"NSError"32
v36@0:8B16@20@28
v40@0:8@16d24q32
v48@0:8@16q24q32@40
v40@0:8@16q24@?32
v36@0:8B16@"NSError"20@"ADRecordingInfo"28
v24@0:8@"ADRecordingInfo"16
v40@0:8@"NSArray"16d24q32
v24@0:8@"NSData"16
v48@0:8@"NSError"16q24q32@"CSEndpointerMetrics"40
v40@0:8@"<ADSpeechCapturing>"16@"NSData"24d32
v24@0:8@"<ADSpeechCapturing>"16
v40@0:8@"<ADSpeechCapturing>"16@"NSFileHandle"24@"NSError"32
v32@0:8@"<ADSpeechCapturing>"16d24
v40@0:8@"<ADSpeechCapturing>"16q24@?<v@?dd@"NSError">32
v28@0:8@"<ADSpeechCapturing>"16B24
v24@0:8@?<v@?@"ADVolumeService">16
v32@0:8@"AFAudioPowerUpdater"16f24f28
v40@0:8q16q24@32
v28@0:8d16B24
v24@0:8f16f20
v48@0:8@16Q24q32@?40
@36@0:8@16@24B32
@40@0:8q16@24@32
v40@0:8q16@24@32
v40@0:8@16B24B28@32
v32@0:8{AFTimeRange=dd}16
@"SiriCoreLocalSpeechRecognizer"
@"NSError"
@"<ADSpeechManagerDelegate>"
@"ADSpeechLog"
@"<ADSpeechCapturing>"
@"ADSpeechRecorder"
@"ADSpeechPlaybackSimulator"
@"ADSpeechCompressor"
@"<AFAudioPlaybackService>"
@"ADVolumeService"
@"AFDictationOptions"
@"AFAudioPowerUpdater"
^{__CFBag=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"ADAudioRoute"
@20@0:8I16
v40@0:8@"ADAcousticFingerprinter"16@"NSData"24d32
v40@0:8@16@24Q32
v44@0:8@16@24f32Q36
v40@0:8@16q24d32
v32@0:8Q16Q24
v32@0:8@"CSSpeechController"16@"NSData"24
v40@0:8@"CSSpeechController"16@"NSArray"24Q32
v44@0:8@"CSSpeechController"16@"NSArray"24f32Q36
v32@0:8@"CSSpeechController"16d24
v36@0:8@"CSSpeechController"16B24@"NSError"28
v32@0:8@"CSSpeechController"16q24
v24@0:8@"CSSpeechController"16
v40@0:8@"CSSpeechController"16q24d32
v32@0:8@"CSSpeechController"16Q24
v40@0:8@"CSSpeechController"16q24@"NSError"32
v32@0:8@"CSSpeechController"16@"NSDictionary"24
v28@0:8@"CSSpeechController"16B24
v40@0:8Q16Q24@?<v@?@"NSError">32
v32@0:8@"<CSEndpointAnalyzer>"16d24
v40@0:8@"<CSEndpointAnalyzer>"16d24@"CSEndpointerMetrics"32
@24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@"<ADSpeechCapturingDelegate>"16
v24@0:8@"AFSpeechRequestOptions"16
v24@0:8@?<v@?dd>16
v24@0:8@"CSServerEndpointFeatures"16
v32@0:8d16@?<v@?B@"NSArray">24
@24@0:8^@16
B32@0:8Q16^@24
v20@0:8(?={?=SS}I)16
B40@0:8@16@?24^@32
@40@0:8q16q24B32B36
v32@0:8q16d24
v48@0:8@16d24d32@40
v32@0:8@?16d24
B40@0:8@16Q24@?32
@"<ADSpeechCapturingDelegate>"
@"<CSEndpointAnalyzer>"
@"ADAudioActivationInfo"
@"ADAcousticFingerprinter"
@"NSFileHandle"
@"ADAudioFileWriter"
@"CSEndpointerMetrics"
@"AFSpeechSynthesisRecord"
v24@0:8@"ADService"16
@"NSSet"
@"SASyncAnchor"
@"ADService"
@"<ADSyncManagerDelegate>"
@"SASyncGetAnchors"
q24@0:8@?16
v56@0:8Q16Q24@32Q40@?48
v48@0:8Q16Q24@32@?40
B32@0:8@16^@24
B48@0:8Q16Q24@32^@40
@56@0:8Q16Q24@32Q40^@48
@32@0:8@16^@24
@"SiriCoreSQLiteDatabase"
@"ADAnalyticsEventRecordBuilder"
v32@0:8@"<SiriCoreSQLiteValue>"16@"NSString"24
@"<SiriCoreSQLiteRecord>"16@0:8
@"<SiriCoreSQLiteValue>"
v36@0:8I16@20@?28
v32@0:8@"ADMediaRemoteService"16@?<v@?@"<SAAceCommand>"@"NSError">24
@"<ADVolumeServiceProviding>"
B24@0:8@"NSURL"16
@"NSString"40@0:8@"NSString"16@"NSString"24@"NSBundle"32
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@"AFPeerInfo"16@0:8
@32@0:8@16^B24
@"NSDateFormatter"
v24@0:8@"SiriCoreNetworkManager"16
v56@0:8@16@24@32d40@48
v32@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24
v56@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24@"NSString"32d40@"NSString"48
v32@0:8@"<SiriCoreSiriConnection>"16@"AceObject"24
v24@0:8@"<SiriCoreSiriConnection>"16
v40@0:8@"<SiriCoreSiriConnection>"16@"NSError"24@"SiriCoreAceConnectionAnalysisInfo"32
v32@0:8@"<SiriCoreSiriConnection>"16@"NSError"24
v40@0:8B16B20@24B32B36
v44@0:8B16B20@24@32B40
v52@0:8B16B20@24B32@36B44B48
@"<SiriCoreSiriConnection>"
@"ADAuthenticator"
@"ADRetryManager"
@"<ABAssistantManager>"
@"<ADAddressBookManagerDelegate>"
@20@0:8i16
q24@0:8q16
@32@0:8@16d24
B24@0:8d16
@"<ADAcousticIDHelperDelegate>"
@"SAAIStartSession"
@"SAAISearchCompleted"
v52@0:8@16@24Q32B40@?44
v56@0:8@16@24@32@40@?48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
@48@0:8@16q24@32@40
{CGSize=dd}48@0:8@16q24f32f36@40
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
@"BBObserver"
^{NSDictionary=#}16@0:8
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
v40@0:8^{BTAccessoryManagerImpl=}16i24^{BTDeviceImpl=}28i36
v32@0:8^{BTDeviceImpl=}16^{BTAccessoryManagerImpl=}24
@28@0:8@16B24
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
^{BTAccessoryManagerImpl=}
v24@0:8@?<v@?@"AFBluetoothDeviceInfo">16
v24@0:8@?<v@?@"AFBluetoothHeadphoneInEarDetectionState">16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"<ADBluetoothDeviceObserver>"16
@"ADMobileBluetoothDeviceDataSource"
@"NSHashTable"
@"AFBluetoothDeviceInfo"
@"AFBluetoothHeadphoneInEarDetectionState"
@"SABaseClientBoundCommand"
@"SANavStatus"
@"SALocalSearchGetNavigationStatusCompleted"
@"SAMPQueueState"
@"SAErrorIndicatorStatus"
@"SAHACurrentHome"
@"SAPhoneCallState"
@"SARemotePlaybackDeviceList"
v40@0:8@"<ADAudioStateAnnouncing>"16@"AFAudioState"24@"AFAudioState"32
v40@0:8@"<ADBluetoothDevice>"16@"AFBluetoothDeviceInfo"24@"AFBluetoothDeviceInfo"32
v40@0:8@"<ADBluetoothDevice>"16@"AFBluetoothHeadphoneInEarDetectionState"24@"AFBluetoothHeadphoneInEarDetectionState"32
v24@0:8@"<ADBluetoothDevice>"16
v44@0:8@16I24@28@36
v32@0:8@"AFXPCWrapper"16@"NSString"24
v44@0:8@"NSString"16I24@"<ADBluetoothDevice>"28@"NSString"36
v40@0:8@"NSString"16@"<ADBluetoothDevice>"24@"NSString"32
v32@0:8@"NSError"16@"NSString"24
v40@0:8@"SASSpeechRecognized"16@"NSString"24@"NSString"32
v32@0:8@"SASSpeechPartialResult"16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v40@0:8@"SAStructuredDictationResult"16@"NSString"24@"NSString"32
v40@0:8@"NSFileHandle"16@"NSError"24@"NSString"32
v40@0:8@"SASPronunciationRecognized"16@"NSString"24@"NSString"32
v24@0:8@"SASVoiceSearchPartialResult"16
v24@0:8@"SASVoiceSearchFinalResult"16
v40@0:8q16@"NSString"24@?<v@?dd@"NSError">32
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"NSString"16@"NSURL"24@?<v@?B>32
v32@0:8@"NSURL"16@?<v@?B>24
v24@0:8@?<v@?@"AFClockAlarmSnapshot"@"AFClockTimerSnapshot">16
v32@0:8@"NSDictionary"16@"NSURL"24
v24@0:8@"INImage"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"AFAudioPlaybackRequest"16
v32@0:8@"AFAudioPlaybackRequest"16@"NSError"24
Vv32@0:8q16@?24
Vv40@0:8Q16q24@?32
Vv32@0:8Q16@?24
Vv24@0:8B16B20
Vv40@0:8@16Q24@?32
Vv32@0:8Q16d24
Vv36@0:8@16B24@?28
Vv40@0:8@16q24@32
Vv32@0:8q16@"AFSpeechRequestOptions"24
Vv32@0:8q16@?<v@?>24
Vv40@0:8Q16q24@?<v@?I@"NSError">32
Vv32@0:8Q16@?<v@?>24
Vv24@0:8@"AFClientConfiguration"16
Vv32@0:8@"AFRequestInfo"16@?<v@?@"NSError">24
Vv40@0:8@"AFSpeechRequestOptions"16Q24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"SASPronunciationContext"24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"NSString"24@?<v@?@"NSError">32
Vv24@0:8@?<v@?BI>16
Vv36@0:8@"NSDictionary"16B24@?<v@?B>28
Vv24@0:8@"SASetApplicationContext"16
Vv32@0:8@"NSArray"16@"NSString"24
Vv32@0:8@"NSString"16@24
Vv24@0:8@"AFMetrics"16
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
Vv24@0:8@?<v@?@"AFClockTimerSnapshot"@"NSError">16
Vv40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
Vv24@0:8@?<v@?@"AFXPCWrapper">16
Vv24@0:8@"AFSpeechSynthesisRecord"16
Vv40@0:8@"NSError"16q24@"NSDictionary"32
Vv32@0:8@"NSData"16@?<v@?@"NSString"@"NSData">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"AFApplicationInfo"16@?<v@?@"NSArray">24
Vv28@0:8@"NSURL"16B24
@"NSMutableData"
v24@0:8@"<ADAudioStateListening>"16
@"AFAudioState"
@"<ADAudioStateListening>"
@"<SAAceCommand>"
@"ADOfflineMetricsMap"
@?40@0:8q16@24@?32
v40@0:8@?16@?24@?32
@"<ADContextManagerDelegate>"
@"ADBackgroundContextCache"
@"AFAnalytics"
@40@0:8@16Q24Q32
{_mutationFlags="isDirty"b1"hasDataType"b1"hasGeneration"b1"hasLimit"b1}
v44@0:8@16@24B32@36
@"SARestartRequest"
@"SABaseCommand<SAServerBoundCommand>"
B28@0:8@16B24
v44@0:8d16B24B28B32@?36
v40@0:8d16B24B28@?32
v56@0:8d16B24B28@32Q40@?48
v32@0:8@"<SiriCoreConnectionProvider>"16@"NSError"24
v28@0:8@"<SiriCoreConnectionProvider>"16B24
v24@0:8@"<SiriCoreConnectionProvider>"16
v32@0:8@"ADPeerStreamConnection"16@"NSError"24
v24@0:8@"ADPeerStreamConnection"16
v32@0:8@"ADPeerStreamConnection"16@?<v@?@"SiriCoreConnectionMetrics">24
@40@0:8^{__CFHTTPMessage=}16@24^B32
v24@0:8^{__CFHTTPMessage=}16
@32@0:8^{__CFHTTPMessage=}16@24
v40@0:8@16@24B32B36
v48@0:8@16@24Q32@40
v28@0:8I16q20
@"ADPeerStreamConnection"
@"ADPeerConnectionProvider"
@"NSObject<OS_dispatch_data>"
@"<SiriCoreConnectionProvider>"
[4096C]
^{__CFHTTPMessage=}
^{IONotificationPort=}
@20@0:8B16
v40@0:8d16d24Q32
@"<SiriCoreConnectionProviderDelegate>"
@40@0:8@16@24^@32
@"CKKnowledgeStore"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
i40@0:8@16@24^@32
v24@0:8^{NACContextOpaque_=}16
^{NACContextOpaque_=}
@"<ADCallObserverDelegate>"
@"TUCallCenter"
@"<ADDisplayScaleContextCollectorDelegate>"
@"<ADPeerLocationPolicyDelegate>"
q40@0:8@16Q24Q32
q40@0:8@"NSString"16Q24Q32
v32@0:8@"NSString"16@?<v@?Q>24
v32@0:8@"ADDeviceSyncSnapshot"16@"NSString"24
v40@0:8@"ADRequestLifecycleObserver"16q24@"<ADCommandCenterClient>"32
@"AFClockAlarmSnapshot"
@"AFClockTimerSnapshot"
@"ADRemoteTimerManager"
v24@0:8@?<v@?@"STTimer"@"NSError">16
v32@0:8@"STTimer"16@?<v@?@"NSError">24
@"ADServiceCommandType"
@"<ADAceRequestTransformer>"
@"<ADAceResponseTransformer>"
@"<AFSiriRequestHandling>"
Vv32@0:8@"NSArray"16@?<v@?>24
Vv24@0:8@"AFAnalyticsEvent"16
@"ADAnalyticsStore"
@"NSObject<OS_dispatch_data>"24@0:8^@16
@"<NSXPCListenerDelegate>"
@36@0:8@16i24@28
@"ADNotifyAndPushContextCollector"
B20@0:8i16
v28@0:8@?16i24
@"IDSDeviceConnection"
@"ADSharedPeerStreamConnection"
@"<ADPeerStreamConnectionDelegate>"
@"_ADPBDeviceOutputVoiceInfo"
@"_ADPBDeviceStringKeyValueDictionary"
{?="activityContinuationAllowed"b1"cloudSyncEnabled"b1"dictationEnabled"b1"isLocationSharingDevice"b1"isRemotePlaybackDevice"b1"shouldCensorSpeech"b1"siriEnabled"b1}
v32@0:8@"ADPeerLocationConnection"16@"CLLocation"24
v24@0:8@"ADPeerLocationConnection"16
B40@0:8@16@24@32
@"<ADLocationManagerDelegate>"
@"ADPeerLocationConnection"
@"SAGetRequestOrigin"
@"CLLocation"
@"CLInUseAssertion"
@"GEOLocationShifter"
@"ADGreenTeaLogger"
@56@0:8@16@24@32@40@48
B32@0:8Q16@24
v48@0:8@16Q24Q32@?40
@32@0:8^{NSDictionary=#}16@24
v32@0:8^{NSDictionary=#}16@?24
v56@0:8@16@24@32B40B44@48
v44@0:8@16B24@28@36
v56@0:8q16@24@32@40@?48
@"NSBundle"
@"ADLinkedListItem"
@32@0:8@16@?24
{?="requiresUserInteraction"b1}
{?="rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"synRetransmits"b1"tfoSynDataAcked"b1}
@"NSArray"24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
B24@0:8@"NSString"16
v40@0:8@"SABaseClientBoundCommand"16@"NSString"24@?<v@?@"<SAAceCommand>"@"NSError">32
v32@0:8@"AFSyncInfo"16@?<v@?@"ADSyncChunkInfo"@"NSError"@?<v@?B>>24
v32@0:8@"AFSyncInfo"16@?<v@?@"AFSyncSnapshot">24
v24@0:8@?<v@?>16
@"<ADServiceDelegate>"
v40@0:8@16i24@28B36
v48@0:8@16i24@28B36B40B44
v24@0:8@"ADAudioPlaybackSession"16
v32@0:8@"ADAudioPlaybackSession"16@"NSError"24
v40@0:8@16q24q32
v40@0:8@"AFMemoryPressureObserver"16q24q32
v32@0:8@"AFAudioPlaybackRequest"16@?<v@?@"NSError">24
v40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
v28@0:8@"AFAudioPlaybackRequest"16B24
@"<ADAudioPlaybackServiceDelegate>"
{?="success"b1}
@"_INVocabularyStoreManager"
Q32@0:8d16d24
v28@0:8I16@?20
v40@0:8I16I20Q24@?32
@"AWDServerConnection"
Q24@0:8@16
{_mutationFlags="isDirty"b1"hasDataTypes"b1}
v24@0:8@"NSUUID"16
@"ADDeviceSyncItem"
{_mutationFlags="isDirty"b1"hasUUID"b1"hasProperties"b1}
@"<ADUIServiceDelegate>"
v40@0:8@"INIntent"16@"NSString"24@?<v@?@"INIntentResponse"@"NSError">32
B48@0:8@16@24@32@?40
@"INCExtensionConnection"
@"ADPeerInfo"
@"<ADExtensionServiceDelegate>"
i24@0:8^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}16
B28@0:8d16I24
B28@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24
@"<ADPassthroughEndpointerDelegate>"
@"<Endpointer>"
@"NSOrderedSet"
@"<ADSiriAppLaunchRequestHandlerDelegate>"
@48@0:8Q16@24@32@40
@"ADDeviceSyncIncrementalChange"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasInsertedOrUpdatedItems"b1"hasDeletedItemUUIDs"b1}
@"HMClientConnection"
Vv24@0:8d16
@"<AFDictationServiceDelegate>"
@"ADDictationSessionTracker"
B32@0:8^f16^f24
v48@0:8@16@24@32d40
v24@0:8@"ADSession"16
v32@0:8@"ADSession"16@"AceObject<SAAceCommand>"24
v40@0:8@"ADSession"16@"AceObject<SAAceCommand>"24@"NSError"32
v36@0:8@"ADSession"16@"NSError"24B32
B32@0:8@"ADSession"16@"NSError"24
B24@0:8@"ADSession"16
@"NSArray"24@0:8@"ADSession"16
v40@0:8@"ADSession"16@"NSString"24@"NSString"32
v28@0:8@"ADSession"16B24
v48@0:8@"ADSession"16@"NSString"24@"NSString"32d40
v32@0:8@"ADSession"16@"NSError"24
v24@0:8i16B20
v40@0:8@16B24B28B32B36
v32@0:8@16B24B28
v48@0:8@16@24q32q40
@"<ADSessionManagerDelegate>"
@"AFAggregator"
@"SASSpeechRecognized"
@"SASSpeechFailure"
@32@0:8^v16^v24
@32@0:8Q16@24
@56@0:8@16Q24@32@40@48
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v32@0:8@"ADDisplayScaleContextCollector"16d24
v40@0:8@"ADAddressBookManager"16@"NSArray"24@"NSArray"32
@"SAVoice"
@"SAMediaContentRatingRestrictions"
@"ADDisplayScaleContextCollector"
@"ADAddressBookManager"
v20@0:8S16
@"PBCodable"
v40@0:8@"<SAAceCommand>"16@"ADPeerInfo"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSData"16@"ADPeerInfo"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"AFRequestInfo"16@"ADPeerInfo"24@?<v@?B>32
v36@0:8@16S24@28
v48@0:8@16S24@28S36@?40
v56@0:8@16S24@28@36S44@?48
v32@0:8@?16^v24
B40@0:8@16@24@?32
v52@0:8@16S24@28@36@44
@"NSMapTable"
{?="gender"b1}
@24@0:8@"INIntent"16
B24@0:8q16
v48@0:8@16@24:32@40
:32@0:8@16@24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"APSConnection"
v48@0:8@16@?24@?32@?40
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@40@0:8@16@24Q32
@"AVAudioPlayer"
@"AFAudioPlaybackRequest"
@"<ADAudioPlaybackSessionDelegate>"
@"CMActivityManager"
@"CMActivity"
@"STAlarm"
v32@0:8@"STAlarm"16@?<v@?@"STAlarm"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"STAlarm"16q24@?<v@?@"NSArray"@"NSError">32
v40@0:8@?16q24@32
@36@0:8q16@?24I32
@36@0:8q16@24I32
@44@0:8q16@?24@32I40
v24@0:8r^{AudioStreamBasicDescription=dIIIIIIII}16
^{OpaqueExtAudioFile=}
Vv40@0:8@16q24@?32
Vv40@0:8@"NSData"16q24@?<v@?@"NSData"@"NSError">32
Vv40@0:8@"NSDictionary"16q24@?<v@?@"NSDictionary"@"NSDictionary">32
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
B32@0:8@16@?24
B32@0:8@"AFSiriActivationContext"16@?<v@?@"AFSiriActivationResult">24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1821501079</string>
<key>application-identifier</key>
<string>com.apple.assistant.assistantd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.BTServer.allowQuickRSSIRead</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.TimeAppServices.timerclient</key>
<true/>
<key>com.apple.airplay.carplayavvc</key>
<true/>
<key>com.apple.assistant.cdm.client</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.assistant_service</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreaudio.CanRecordPastData</key>
<true/>
<key>com.apple.coreaudio.CanRecordWithoutSessionActivation</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-opus-codec</key>
<true/>
<key>com.apple.coreaudio.allow-speex-codec</key>
<true/>
<key>com.apple.coreaudio.i-am-siri</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.corespeech.xpc</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.siri.profile</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.networking.multipath_extended</key>
<true/>
<key>com.apple.duet.appPreference.prediction</key>
<true/>
<key>com.apple.fileprovider.fetch-url</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.intents.intents-image-service</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
<string>com.apple.MobileAsset.RaiseToSpeakAssets</string>
</array>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.siri.profile</key>
<string>com.apple.siri.profile2</string>
</dict>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coreservices.cangetcurrentactivityinfo</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.domain-extension</key>
<true/>
<key>com.apple.private.homekit.siri-audio-connection</key>
<true/>
<key>com.apple.private.ids.link-preferences</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
</array>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.memorystatus</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.networkserviceproxy</key>
<true/>
<key>com.apple.private.security.storage.HomeKit</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceWillow</string>
<string>kTCCServiceReminders</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.rapport.siri</key>
<true/>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.weather</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Voicemail/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.CompanionLink</string>
<string>com.apple.siri.activation</string>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.rapport.siri</string>
<string>com.apple.siri.VoiceShortcuts.xpc</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.watchlistd.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.raisetospeak</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.system-group-containers</key>
<array>
<string>systemgroup.com.apple.osanalytics</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.commcenter.xpc</string>
</array>
<key>com.apple.siri.VoiceShortcuts.xpc</key>
<true/>
<key>com.apple.siri.acousticsignature</key>
<true/>
<key>com.apple.siri.activation</key>
<true/>
<key>com.apple.siri.analyzer</key>
<true/>
<key>com.apple.siri.clientScripter</key>
<true/>
<key>com.apple.siri.client_lite</key>
<true/>
<key>com.apple.siri.embeddedspeech</key>
<true/>
<key>com.apple.siri.sync_deep_verification</key>
<true/>
<key>com.apple.siri.task.client</key>
<true/>
<key>com.apple.siriknowledged</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>com.apple.watchlist.private</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.assistant</string>
<string>apple</string>
</array>
</dict>
</plist>
(6vI
(8vI
(8vI
